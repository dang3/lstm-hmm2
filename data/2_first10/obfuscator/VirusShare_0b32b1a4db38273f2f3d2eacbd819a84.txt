push
call
ret
ret
jl
jno
pusha
cld
cmp
xchg
test
loope,pt
pop
lret
mov
sahf
inc
inc
popa
imul
js
mov
mov
fdivr
or
daa
lods
shl
inc
repz
sbb
cmp
sub
daa
mov
mov
data16
mulb
cmp
std
add
adc
add
lds
mov
jle
mov
nop
inc
das
int
cs
sbb
aam
lods
or
outsb
xchg
dec
imul
xchg
mov
les
or
jns
mov
add
mov
sti
and
aam
mov
cmpsl
dec
nop
cmp
dec
test
mov
or
loop
mov
push
lea
jl
imul
push
inc
xlat
dec
pop
data16
loopne
mov
fs
pop
stos
push
mov
and
mov
ror
or
cmc
adc
jbe
mov
push
movntps
into
out
push
mov
mov
cmp
daa
inc
adc
repnz
mov
fisttps
in
inc
push
pop
add
movsl
stc
mov
loope
pop
pusha
xchg
or
mov
gs
sbb
lret
inc
mov
or
sti
pop
sbb
adc
jns
push
dec
cmp
sub
mov
mov
mov
cmpsl
dec
repnz
pop
or
popa
mov
aas
lock
inc
outsl
sti
pop
mov
movb
js
or
or
je
cld
or
cmpb
pop
call
and
fnsave
rorb
sbb
shlb
mov
jo
pop
scas
push
insb
pop
xor
ljmp
sbb
jmp
fdiv
mov
sarl
jg
cmp
scas
movsb
lret
cld
lds
rcll
sbb
xor
jmp
loope
pop
cmpsb
jle
dec
mov
mov
push
ret
fldt
cmpsl
cwtl
call
dec
int
shll
stos
and
nop
ret
mov
jb
loopne
std
incb
or
pop
fiaddl
sahf
inc
mov
dec
rcr
sbbb
sbb
sub
test
sub
jecxz
ljmp
xor
mulb
mov
pop
imul
push
lea
clc
cwtl
and
adc
mov
lret
dec
mov
inc
jge
and
xchg
sub
jg
inc
bound
nop
in
jnp
push
sbb
movsl
idivb
rcrl
cmp
pusha
mov
mov
add
out
int3
test
ss
dec
jmp
cmp
push
lock
push
imul
xchg
adc
jle
xchg
iret
xor
sti
mov
mov
daa
inc
push
and
adcb
push
insl
dec
and
sub
mov
test
cmp
loop
out
movsl
or
rorl
cs
and
in
mov
fdivl
loop
mov
popa
outsw
les
jp
imul
lret
mov
or
ss
inc
pop
cmpsl
mul
daa
movsl
mov
mov
sti
mov
and
pop
dec
sbb
repnz
ret
xchg
sbb
xor
push
mov
js
mov
sub
cmpsl
mov
into
mov
adc
sbb
xlat
loop
hlt
subl
jbe
adc
insl
in
addr16
and
call
cmp
jo
sahf
mov
mov
push
cltd
jge
cmp
popf
shlb
addr16
sub
rolb
pop
pop
ret
fldenv
mov
inc
js
pop
les
xor
aam
mov
mov
mov
jns
add
cmpsl
cmp
orl
insl
mov
movsl
mov
repnz
js
loopne
mov
repz
dec
fcoms
js
cmpsl
push
xor
cmc
loope
pop
lods
jmp
das
cli
leave
mov
xorb
pop
push
fdivs
xlat
das
lcall
movsb
pop
mov
add
pop
inc
in
out
movsl
pop
jne
inc
jp
jnp
add
push
push
add
push
jmp
add
cmpsb
sub
inc
dec
adc
fwait
inc
popf
push
mov
jge
mov
add
test
dec
daa
stos
pop
xchg
cli
xor
adc
jnp
ss
lret
fs
and
enter
cwtl
out
mov
sub
insl
mov
adc
les
in
jno
push
xchg
cmp
cmp
clc
push
pop
or
in
pushf
mov
jmp
and
cmc
iret
push
jb
sahf
fs
push
sub
and
je
rol
lret
int
xchg
dec
push
imul
mov
dec
jo
movsl
pushf
push
xor
mov
mov
mov
js
push
ss
or
int
pop
stos
inc
mov
int3
push
dec
dec
roll
cmc
aas
pop
mov
call
cwtl
adc
int3
insl
xchg
dec
inc
push
xchg
sbb
das
sub
aaa
stos
daa
bound
out
fdivl
dec
push
addb
scas
pop
inc
pop
mov
rcrl
fsts
mov
scas
test
neg
mov
cmpsb
sti
jns
jl
adc
mov
jb
mov
popa
dec
jl
ret
inc
orl
imul
imulb
mov
xor
aam
jmp
mov
and
and
popa
adc
cwtl
dec
push
xchg
cmp
addr16
inc
and
mov
adc
mov
stc
inc
arpl
xchg
arpl
cmc
lahf
xchg
leave
or
mov
repz
or
idiv
das
unpckhps
jb
out
pop
jle
cmc
ds
push
test
in
scas
or
fstps
mov
mov
adc
cmp
xchg
cwtl
dec
aam
xor
leave
xor
sar
add
pop
xor
dec
loopne
test
add
jo
popw
adc
fucomp
sub
out
adc
idivb
mov
fs
cwtl
adc
std
mov
mov
out
jecxz
pop
inc
cmp
rorb
enter
sarl
inc
scas
int
pop
mov
dec
adc
pop
lods
out
add
outsb
jl
cmc
and
pop
stc
lahf
inc
or
mov
adc
push
jne
popf
jo
cld
adc
push
sbb
jmp
test
pop
lock
fsubrl
sub
pop
jne
scas
add
movsl
push
cmp
jle
inc
dec
jb
pop
sbb
int
mov
test
add
mov
jl
loop
loope
roll
sub
push
pop
inc
xchg
xchg
das
js
mov
movsl
adc
popa
or
xorb
adc
addr16
insl
push
inc
xor
lret
jne
outsb
cmpsb
outsl
aam
cwtl
daa
xchg
push
or
mov
imul
mov
mov
adc
fimuls
das
enter
in
mov
mov
sti
xchg
movsl
mov
popl
aaa
and
xorb
bound
sub
mov
ds
mov
push
popf
rcrl
fimuls
fnstcw
ja
dec
aaa
push
addr16
sarb
lds
sbb
addw
mov
lea
xchg
pop
pop
test
pop
jbe
dec
xchg
in
stos
ret
push
ds
cwtl
dec
movntps
add
or
sub
add
xorl
sub
jle
into
mov
movsb
sub
xchg
xlat
jmp
push
sysenter
inc
mov
xor
ret
and
pop
shrb
cmp
xchg
mul
outsl
cli
push
loopne
mov
or
push
and
and
andl
mov
add
sbb
adc
jg
test
cltd
ret
sub
xlat
int3
pop
hlt
adc
adc
jmp
hlt
arpl
into
sarl
int3
pop
xchg
adc
fidivl
sar
fcoml
js
or
add
jl
notb
mov
cmp
in
add
incl
nop
push
dec
adc
add
jecxz
push
push
mov
mov
add
cmp
cmp
pushf
pushf
adc
push
mov
aaa
jle
sub
mov
lea
outsb
idivl
fsubl
cmp
cmc
pop
loopne
pop
push
movl
loopne
xchg
repz
mov
sbb
xor
adc
add
xor
inc
nop
xchg
inc
jns
add
adc
pop
inc
mov
fwait
pop
es
jg
sub
daa
dec
out
les
cmpsl
jae
imull
inc
mov
int
std
mov
or
lret
imul
mov
inc
adc
inc
test
out
dec
inc
sbb
mov
sti
test
mov
inc
add
xchg
cmpsl
sarl
pop
insl
sahf
fwait
jp
pop
inc
aam
jno
decb
pop
int
or
insb
icebp
test
int3
aad
in
test
fs
or
cmp
jg
fldenv
cmpl
mov
xor
sub
or
lock
pop
leave
ds
sbb
add
or
sbb
push
dec
sub
out
mov
mov
movsb
dec
int3
fcoms
lahf
dec
pop
add
or
xchg
in
push
mov
mov
xchg
mov
scas
rol
cmp
mov
lds
sbb
mov
jb
repz
lock
aad
mov
add
fs
sbb
loop
les
adc
push
iret
sub
in
rol
popa
or
sub
stos
in
scas
xchg
sahf
mov
mov
ja
lods
loope
jb
mov
add
and
xor
mov
sub
test
add
xchg
loopne
clc
rol
pushf
mov
jne
dec
shll
cmp
xor
cmpsb
loopne
xchg
sti
fiaddl
inc
ss
dec
cld
sbb
push
insl
in
xchg
mov
test
jg
sub
fidivs
mov
enter
fmull
xor
push
je
xor
jmp
movsb
test
nop
ljmp
mov
inc
pop
cmp
sub
fisubrs
push
cwtl
nop
daa
imul
xchg
xchg
push
pop
xchg
rcr
xor
shrb
mov
repnz
ret
add
aad
popf
icebp
push
test
push
jge
movl
mov
int
pop
cmpsb
stos
mov
or
in
mov
jg
sbb
pop
mov
sbb
or
mov
and
test
inc
fsubrs
push
mov
pop
fsub
push
xlat
fdiv
ret
dec
js
push
add
mov
aas
insl
inc
mov
lock
sarb
jae
push
in
inc
ja
test
add
mov
jmp
push
cld
mov
lods
cmp
sbbb
push
mov
cmpsb
or
push
fyl2x
adc
sub
xacquire
push
add
push
loopne
repz
cltd
sub
icebp
and
jmp
pop
sub
add
movsb
push
add
inc
cmp
lock
cvtpi2ps
test
xor
js
into
fisttpl
orb
xchg
in
js
sbb
pop
jb
popf
stos
push
loopne
insl
cmpl
shll
and
jbe
mov
aad
lcall
mov
mov
bound
in
jbe
xchg
mov
dec
sarb
es
sub
test
scas
in
cmp
jle
cmpsl
cltd
mov
sbb
mov
sub
push
je
xchg
lret
mov
sub
call
mov
mov
or
sub
dec
mov
ljmp
fisttps
mov
pop
mov
or
fstps
xchg
xchg
push
outsb
lods
rorl
pushf
inc
adc
or
in
stos
push
test
pushf
movsl
push
xchg
dec
mov
cmp
push
xchg
push
mov
dec
add
dec
ss
lods
xor
out
lea
inc
mov
xchg
jecxz
sub
cmp
test
mov
push
rol
jae
pop
or
cmp
mov
sahf
push
xchg
arpl
lcall
pavgw
cmp
dec
xor
and
mov
jl
test
dec
in
jb
pop
push
stos
xchg
mov
notb
ret
sbb
xor
sbb
adc
xor
imul
sar
out
sbb
mov
and
popf
fcmove
inc
das
push
lret
loope
pop
push
push
push
ja
stc
dec
lret
stc
popa
mov
cwtl
mov
add
loope
mov
mov
or
jmp
pop
inc
pop
adc
shrb
iret
testl
xchg
call
mov
sub
clc
pop
fld
push
adc
repz
aaa
adc
xor
mov
dec
hlt
push
mov
jnp
inc
push
push
xchg
jp
fimull
xor
es
pop
dec
fisubrl
xchg
dec
mov
cld
push
fiadds
or
nop
jno
je
pop
sbb
jnp
ja
addr16
adc
loopne
pop
push
xchg
aad
cmp
subl
call
sub
cmpl
inc
push
jle
adc
shl
pop
movsb
idivb
out
and
mov
pop
xor
ds
push
lea
sub
lahf
in
mov
xor
dec
jmp
ficomps
jecxz
call
mov
shlb
sub
xor
sbb
and
imul
sbb
mov
sbb
push
scas
jg
jp
hlt
adc
mov
aaa
mov
or
cs
aas
adc
xchg
orb
jbe
call
pop
dec
adc
insb
jle
dec
scas
mov
gs
xchg
loopne
cmpsb
int
mov
mov
mov
sub
inc
cwtl
lret
and
shll
sbb
xchg
xor
jle
or
test
lods
fwait
or
sahf
cmp
mov
sub
fs
push
ljmp
fs
dec
dec
jae
mov
push
bound
sub
sahf
fnstsw
scas
ljmp
inc
lret
mov
stos
data16
sub
xchg
and
popa
pusha
adc
jo
xor
aad
adc
mov
lock
mov
push
and
pop
das
pushf
lret
arpl
out
xchg
push
xchg
add
std
mov
pop
loopne
js
not
push
sbb
mov
jg
aam
pop
fidivrs
leave
mov
inc
scas
and
je
dec
xchg
lret
jmp
scas
inc
mov
mov
mov
ljmp
movsb
cmp
ror
xchg
inc
push
lahf
repz
fldl
mov
into
call
in
aas
jg
xor
popf
jbe
sbb
insl
jmp
jp
pushf
xchg
daa
dec
mov
inc
out
mov
inc
xor
int3
sbb
dec
cmpsb
mov
add
push
push
cmp
push
test
mov
mov
ret
adc
cmp
outsl
lret
iret
mov
jno
sbb
jae
cmc
es
push
repnz
imul
loopne
sti
testb
sbb
call
adc
pushf
int3
rclb
mov
arpl
sub
mov
push
dec
xchg
sub
jne
shlb
xchg
cwtl
jne
jnp
repz
cmp
divl
pop
push
gs
mov
out
xor
shlb
push
cld
jne
add
add
out
sub
mov
pop
inc
bound
int
mov
pusha
push
xor
or
push
dec
test
and
lods
fsubrl
andb
add
and
sahf
jmp
pop
loopne
jnp
ja
cmp
lods
cli
sub
addr16
and
jno
out
mov
cmpsl
fsub
add
ffree
dec
out
icebp
lods
lods
lods
aam
or
sub
push
jg
inc
pop
or
clc
or
aam
cmp
repz
mov
sub
sbb
inc
pop
mul
ja
fwait
mov
mov
aaa
mov
jnp
out
fisubl
jmp
jnp
adc
bound
outsl
inc
sub
push
adc
xchg
lock
lds
call
cmp
mov
out
dec
xor
fsts
push
mov
push
repnz
push
xor
lods
sub
in
loop
cmp
cmp
push
ret
test
xchg
lods
popf
pop
mov
dec
loope
lret
mov
xchg
inc
hlt
hlt
lret
xchg
rcll
inc
push
pop
xchg
ljmp
xchg
fidivrs
je
mov
lahf
jnp
lock
and
sbb
lret
push
imul
shr
or
fldt
push
push
inc
hlt
cli
scas
sarb
es
adc
and
outsb
xor
ljmp
pop
jge
push
sbb
movsb
inc
pushf
push
add
arpl
daa
sti
aad
dec
add
andb
add
sbb
mov
outsb
or
jbe
add
mov
jno
call
xchg
push
inc
cmp
cmp
xor
and
inc
scas
mov
mov
cmp
cmp
icebp
sbb
mov
mov
sbb
sub
dec
fsts
lahf
push
and
dec
or
xchg
sbb
insb
shr
mov
mov
sbb
inc
mov
in
data16
in
movsb
dec
shll
mov
mov
rorb
gs
cmp
mov
cmc
inc
vpshlw
nop
xor
cmpsl
adc
cmp
or
rcrl
data16
pushw
fdivr
xchg
scas
sbb
out
jo
push
addr16
xor
and
jb
jns
push
in
lcall
add
mov
add
dec
add
pusha
pop
dec
mov
icebp
and
sbb
in
push
mov
mov
sub
daa
mov
shl
mov
fildl
pop
sub
inc
jl
fcmovbe
xchg
sbbb
xor
fs
ss
pop
fs
in
sub
jp
lahf
inc
insb
repnz
lods
adcb
sbb
mov
jmp
push
sbb
lcall
hlt
inc
add
hlt
cmp
mov
mov
mov
pop
or
sub
int
loope
iret
mov
dec
sub
testl
mov
xchg
andl
mov
bswap
pop
jge
sbb
xchg
andl
outsl
xchg
movsb
sub
dec
and
or
cmp
movsl
repnz
out
stos
rolb
in
out
jge
mov
inc
jo
stos
cmpsb
sbb
push
xor
data16
pop
mov
js
mov
test
dec
mov
scas
pop
jle
push
sbb
jp
push
jbe
cmc
mov
mov
cwtl
and
scas
xlat
idivb
push
mov
sub
fsubrp
mov
iret
add
and
int
jge
std
and
xor
lods
mov
jl
js
dec
mov
int3
xor
mov
mov
orb
dec
push
jne
mov
dec
mov
cmp
mov
xchg
jne
add
add
or
pushl
xchg
call
gs
rcrl
xchg
mull
xchg
dec
pushf
rol
push
sub
arpl
mov
adc
mov
mov
sub
xchg
test
js
xchg
xchg
es
adc
div
mov
push
and
out
add
sub
lds
call
loope
cli
popf
int
mov
cmp
out
or
fcmovbe
filds
cmpsl
fucomi
xchg
fcoml
jno
push
push
in
or
mov
clc
dec
loopne
mov
adc
pop
ss
jo
lret
sbb
ss
cld
dec
pop
sbb
pusha
sub
rcrl
adc
and
pop
neg
jmp
pop
pop
jns
mov
mov
xchg
xor
sbb
adc
lcall
in
mov
mov
fnstenv
cmp
inc
out
mov
loopne
xchg
push
pop
aad
sbb
mov
push
sarb
dec
mov
subb
daa
fs
sub
mov
mov
jp
mov
pop
dec
jae
and
stos
mov
push
fdivrs
xchg
or
pop
jae
xchg
mov
mov
inc
test
cmp
add
mov
sbb
pop
pop
adc
add
and
jp
mov
mov
mov
loope
imul
push
sti
pushf
int3
lods
add
leave
out
push
sti
jae
sub
pop
or
dec
loope
xor
cli
xor
inc
cmp
sub
mov
ret
pop
cli
jge
shll
andb
push
or
aas
cli
sub
stos
popf
icebp
lds
js
xor
inc
and
mov
daa
aaa
add
pop
or
lret
and
push
xchg
cmp
or
mov
inc
push
pop
rclb
cmp
fstps
dec
pop
fiaddl
cmc
bound
ja
mov
mov
cmp
pop
xor
fstpt
inc
imul
fcmovbe
jmp
jbe
cmp
add
imul
movl
push
add
jmp
jns
fsubrs
in
push
inc
cmpb
sbbl
test
and
sbb
mov
sub
dec
clc
outsb
push
cltd
sbb
xchg
xchg
imul
push
inc
pop
dec
xchg
mov
inc
shrl
test
inc
cld
test
enter
pop
xchg
test
dec
adc
jl
cwtl
scas
xor
xor
or
lods
rcll
repnz
std
push
cltd
cmp
test
outsb
sub
cmp
jbe
insl
mov
inc
cmp
ret
insb
call
rolb
push
stc
shlb
sub
leave
add
clc
and
rcrb
out
mov
fcmovb
mov
aaa
imul
adc
hlt
mov
push
push
jmp
jnp
cmp
mov
xor
rcrb
out
call
fwait
leave
xor
pop
icebp
sub
pop
mov
enter
jp
or
sub
test
xchg
insl
gs
movsb
xchg
rclb
popf
stos
shl
lret
stos
sub
leave
push
popa
gs
loopne
xchg
inc
mov
cltd
and
add
add
jmp
sub
andb
jecxz
add
jb
pop
lods
mov
mull
dec
pop
imul
mov
addr16
sub
cltd
pusha
mov
mov
lret
aam
xchg
dec
mov
jecxz
rol
jmp
sub
pop
lret
add
outsb
and
mov
mov
mov
add
add
xor
cmp
les
cmc
movsb
jecxz
and
out
fs
mov
inc
lods
sbb
xor
inc
mov
lcall
cmc
cmp
es
fwait
sub
mov
mov
mov
push
mov
push
repnz
ja
scas
jo
out
cmp
scas
leave
mov
ljmp
clc
xchg
push
adc
shrl
test
loopne
sub
pop
cmp
xchg
fisttps
fwait
push
insb
arpl
lods
mov
xchg
xor
inc
push
jns
add
pop
xchg
cmpsl
jge
aaa
sub
std
in
stos
aas
add
sbb
sub
and
inc
mov
scas
sbb
mov
pop
cltd
idivb
adc
leave
cli
mov
outsl
sub
pushf
xchg
lock
add
sub
pop
in
pop
lret
int3
cmp
lahf
out
xorl
fs
lds
mov
fwait
inc
sub
aas
mov
cmpsb
xor
and
test
andl
sbb
sti
push
pop
and
jo
adc
rcrb
rclb
ljmp
xchg
pop
xchg
fildl
or
lods
out
imul
hlt
das
push
and
pusha
dec
lods
testl
cli
gs
push
mov
popf
cmpsb
out
clc
push
push
jle
xchg
mov
arpl
sub
icebp
or
push
pop
ret
xchg
adc
int
cwtl
add
mov
xchg
sub
pop
xor
pop
inc
cmp
push
or
cwtl
aas
xchg
cld
in
sbb
into
lods
ljmp
mov
int
insb
adc
sbb
leave
xchg
inc
jo
dec
pop
pop
outsb
outsb
std
loopne
loope
and
out
test
out
xchg
daa
inc
in
xor
lds
sbb
call
cmp
xchg
jb
in
nop
pop
lret
out
xor
pop
push
insw
inc
mov
pop
mov
xor
cwtl
push
mov
push
cmpl
es
xchg
xor
jl
inc
rdpmc
adc
pop
testb
add
jb
xorl
or
ret
push
adc
dec
test
les
cltd
xchg
dec
jl
cld
outsl
jne
jl
je
ret
test
and
bound
mov
les
xchg
hlt
and
les
dec
mov
sub
push
es
addr16
add
and
test
bound
ja
xchg
stc
test
fildll
inc
in
mov
xchg
lea
popf
adcl
add
mov
mov
scas
fisttps
push
mov
or
das
shrl
loopne
sbb
dec
inc
ss
inc
hlt
mov
lahf
les
mov
pop
adcl
xchg
xor
jnp
mov
xchg
lcall
sbb
push
or
bound
xor
rol
hlt
lods
mov
add
inc
xchg
ja
xchg
inc
dec
lds
sub
insb
pushf
jmp
out
jnp
push
fstps
push
pop
mov
test
push
push
fdivrs
sub
nop
xlat
stc
fcmove
push
pop
cmp
xor
bound
repz
sarb
inc
jge
add
xor
pop
xchg
repz
pop
pop
and
in
xor
idivl
pop
sub
cmpsb
push
or
sbb
out
cmp
mov
or
pop
xor
fcoml
push
sbbl
dec
dec
or
xchg
dec
cmp
aad
push
call
jle
mov
addr16
and
cli
filds
inc
in
lea
imul
shll
inc
test
pop
fwait
int
jp
xchg
add
jbe
sbb
or
iret
pop
not
xor
ljmp
pop
lcall
fdivr
or
lock
adc
jg
sub
data16
ret
push
mov
sbb
lcall
add
mov
movsl
in
dec
ljmp
xorl
mov
fildl
pop
fwait
fwait
mov
cld
cli
sahf
push
rolb
movsl
mov
test
outsb
or
jge
adc
fbld
ss
int3
sahf
cmp
mov
mov
inc
js
xchg
mov
cltd
sbb
or
jne
lock
dec
add
aas
mov
lret
dec
int3
nop
sti
push
sahf
xor
push
fstpl
pop
sub
jmp
cmp
mov
fnsave
pusha
aaa
std
in
out
adc
cmp
jmp
pusha
xor
xchg
mov
pop
jbe
cmp
add
push
xchg
rcrb
push
cmp
outsb
rolb
adc
cwtl
cmp
pop
repz
sbb
xor
subl
fiadds
dec
add
xor
cwtl
ljmp
adc
lock
in
cmpsl
xchg
lods
push
pop
sbb
push
icebp
es
scas
roll
inc
jns
jmp
add
lcall
pop
bts
ret
add
dec
lock
rcrl
mov
jp
addr16
lcall
pop
out
repz
shrl
shll
mov
lahf
jb
imul
gs
jg
add
adc
fistpl
stc
fnstcw
insl
mov
sub
sti
add
out
paddb
and
xchg
loopne
ret
add
das
xor
into
call
pushf
icebp
and
cmp
xchg
sbb
out
pop
dec
and
adc
and
rcrb
ljmp
dec
adc
int3
sbb
scas
inc
ds
push
push
jl
loopne
push
cmp
push
es
fisttpl
jns
cmp
sbb
jl
sbb
sbb
or
shrl
jl
scas
inc
push
cmp
inc
lea
push
jecxz
test
and
jbe
inc
adc
inc
aam
push
fisubs
xchg
fbstp
and
pop
adc
jbe
pop
mov
rolb
mov
sarl
or
popa
jge
lods
movq
xor
outsl
mov
xchg
test
andl
pop
inc
sub
xlat
fsubl
inc
inc
mov
inc
push
pop
lret
push
adc
ja
xchg
sub
lret
mov
or
xor
xor
je
js
pandn
cmc
cmp
mov
adc
xorb
mov
jp
stos
cwtl
loope
cmp
out
scas
insl
cmp
push
les
dec
sbbb
into
outsb
sti
fwait
in
dec
mov
shl
in
jge
jns
add
or
addr16
pop
cmp
jnp
fldenv
mov
sub
mov
stos
push
iret
lret
insl
mov
inc
mov
arpl
jmp
jmp
ficoms
jo
movb
mov
rol
jmp
and
stos
push
imul
test
je
or
sub
sbb
out
push
jbe
jecxz
fsincos
lock
insl
inc
jo
dec
iret
mov
adc
fisttpl
outsl
call
scas
ret
mov
jle
sub
cli
dec
and
and
xlat
sbb
leave
decl
mov
test
lahf
xchg
rcl
jecxz
sbb
cmp
jb
ss
out
pop
or
sub
lahf
adc
jmp
jge
cmpsb
adc
sub
jne
inc
clc
fsubrs
shlb
mov
popa
dec
push
or
test
sub
dec
xchg
leave
sti
ja
inc
dec
fldt
jno
dec
movsl
addr16
cmpb
jnp
jg
push
lret
sbbl
mov
jne
adc
bound
hlt
dec
arpl
fcmovbe
adc
inc
adc
sqrtps
clc
imul
sbb
pusha
mull
cmpl
and
test
pop
loopne
sub
push
xor
mov
cld
inc
fs
ja
cltd
stos
lods
adc
inc
lahf
popf
push
js
or
and
int3
enter
push
or
dec
sub
mov
jae
jle
not
in
in
ret
and
add
test
push
mov
rcll
lret
std
xchg
fwait
outsl
xor
shll
mov
cmpl
pop
call
cmpsl
popf
cmp
das
xchg
fisubs
cltd
push
sub
insb
inc
sbbl
add
mov
or
imull
push
hlt
loope
jecxz
shlb
sub
repnz
and
jecxz
push
es
sbb
inc
test
inc
sbb
lahf
incb
cmpsl
add
fwait
add
rcrb
mov
maxps
dec
jo
inc
pushf
mov
mov
outsb
add
mov
xchg
mov
or
stos
push
clc
push
es
xlat
mov
data16
fdivrl
ds
in
paddw
add
jp
repnz
arpl
pop
ljmp
gs
mov
and
xchg
rcl
mov
xor
mov
inc
aad
xlat
roll
xchg
pop
mov
aas
lock
pop
push
das
and
mov
add
jae
mov
cmp
ljmp
icebp
jmp
mov
xchg
and
mov
out
aaa
and
pop
inc
cmp
adc
push
stos
leave
popf
sahf
fistl
subb
xorb
mov
popf
jge
fcompl
stc
cmpsb
pop
pusha
sbb
gs
icebp
cmp
icebp
cmpsb
jg
testl
imul
xor
xchg
and
frstor
sub
pusha
sti
mov
sub
fsubl
mov
mov
push
fucom
cmp
push
jl
js
dec
add
cmpsb
mov
sbb
xor
outsb
sbb
cmp
leave
pop
mov
lahf
outsl
je
mov
add
nop
lret
sub
and
push
inc
mov
addr16
nop
jecxz
dec
mov
and
push
popa
push
xchg
and
mov
sbb
rcrb
stos
or
inc
shlb
test
fdiv
and
aas
cmc
cmp
pop
sbb
imul
fcoml
leave
rep
test
mov
fists
mov
js
andb
test
cmp
push
cmp
in
xchg
and
fldcw
and
sbb
shlb
leave
stos
add
ret
pop
jge
icebp
out
cmp
test
jg
and
fisubrl
jnp
call
out
int3
repz
out
ret
ret
or
push
jle
mov
shlb
mov
push
jle
loopne
iret
movl
ss
insl
shlb
pusha
push
mov
push
fs
sbb
imul
insb
ljmp
test
call
ljmp
js
cmpb
aas
inc
jo
adc
sarb
fsts
mov
cld
cmp
fwait
mov
das
xchg
mov
and
add
mov
cld
or
mov
shl
in
adc
adc
test
jg
dec
test
add
push
lret
popf
sub
lcall
in
in
arpl
xchg
test
mov
push
or
mov
lds
push
mov
in
lret
adc
imul
andb
fs
fcompl
fsubs
sti
add
xor
jg
dec
into
jns
cmpl
je
jno
add
fsub
mov
cs
add
xchg
ds
xchg
das
xchg
ret
mov
dec
shr
arpl
in
pop
jecxz
in
jle
arpl
sbb
sar
frstor
leave
adc
mov
inc
je
sti
push
dec
pop
neg
arpl
cwtl
sbb
and
push
sahf
mov
and
sub
push
ret
push
xchg
sub
mov
jmp
addr16
mov
sub
mov
and
push
test
or
push
scas
in
out
cmp
fistpl
imul
xchg
in
adc
mov
shrl
pop
mov
or
mov
stc
add
inc
rcll
jp
out
icebp
fiadds
fwait
or
insb
pop
or
or
imul
adc
ret
imul
lea
xchg
push
pop
imul
dec
fs
pop
and
ret
jge
lcall
dec
and
and
aam
mov
cmp
jmp
cmc
test
les
sbb
dec
inc
adc
cmc
cmp
movsl
mov
nop
mov
jp
dec
mov
push
fistl
cmp
outsl
sahf
or
xor
mov
scas
inc
mov
xchg
cld
xchg
adc
idivb
repnz
xor
insl
in
outsb
jo
xor
into
and
mov
shl
pop
xchg
adc
into
mov
push
iret
fsubrs
sbb
add
sbb
lcall
imul
test
shlb
in
pushf
in
sub
ret
jp
sub
or
sarl
repz
mov
stc
or
icebp
mov
shl
mov
push
loop
loope
outsb
decl
mov
je
inc
add
xchg
imul
cmp
sbb
jne
int3
enter
cmp
js
or
mov
scas
sub
pop
lods
lcall
pop
cmp
outsb
xor
shll
sub
adc
mov
out
adc
clc
mov
scas
icebp
gs
ja
jne
and
int3
xchg
loope
repz
push
push
jge
ficompl
roll
fidivl
cmp
loopne
push
lahf
and
xchg
cld
and
ret
sbb
inc
inc
pop
into
test
mov
cmp
push
cli
sub
xchg
pop
inc
sbb
push
sub
xor
mov
inc
sbb
sbb
push
sbb
fsts
dec
lea
testb
sub
jns
inc
mov
ret
jmp
mov
adc
pop
mov
lods
jae
push
mov
subb
in
pop
daa
lahf
lcall
std
and
outsb
clc
sahf
ror
cmp
jo
adc
loope
push
test
shl
daa
jp
mov
mov
cli
lcall
xor
sbb
mov
mov
mov
popa
adcb
and
push
and
fists
cmp
inc
and
push
mov
adc
add
ds
fnstenv
pop
sbb
cli
repz
cmp
fdivrl
inc
imul
movsb
pop
dec
out
sub
ljmp
inc
notl
gs
jns
fadd
mov
std
cltd
xor
and
xorb
out
cltd
mov
stos
fwait
gs
filds
mov
mov
xor
outsb
sti
and
jp
les
sbb
or
fs
cmpsl
mov
aaa
das
hlt
ret
adc
jp
mov
aam
fs
lahf
push
arpl
cmp
iret
out
pop
sbb
sub
pop
inc
in
dec
adc
into
loop
mov
js
push
mov
cmc
mov
int3
outsl
cmpsl
mov
push
xor
fildl
lea
lret
nopl
sbb
clc
stos
insl
hlt
lea
out
fisubrl
cwtl
mov
mov
sbb
or
or
std
int
sbb
dec
mov
push
xchg
cmpl
and
cmp
mov
jae
cmpsb
fadds
mov
lcall
mov
in
fprem
fstl
out
add
movsl
test
push
loop
ljmp
xchg
hlt
jb
and
std
cmpsl
mull
sbbl
insl
adc
repz
js
enter
data16
lret
in
jnp
data16
pop
sahf
pop
adc
fstpt
mov
xlat
lcall
pop
jae
dec
shll
kunpckwd
mov
test
movsl
fnsave
ret
imulb
outsb
stos
ds
sbb
mov
sahf
adc
out
arpl
xlat
mov
daa
xchg
dec
call
out
xor
cs
leave
mov
mov
aad
insb
mov
loop
xchg
add
cwtl
push
jmp
xlat
mov
or
and
ret
sub
jp
sub
mov
cld
std
mov
iret
es
mov
adc
or
mov
imul
loop
xchg
fdivrl
xchg
cltd
in
hlt
loopne
push
jg
adc
jl
lcall
push
cmp
pusha
call
inc
dec
fadd
not
mov
lods
sub
inc
mov
mov
push
imul
int3
es
ja
xchg
mov
inc
pop
fadd
inc
dec
seta
test
inc
sbb
pop
pop
xchg
test
jp
divb
lods
sbb
cmova
lds
adc
mov
imul
lods
adc
imul
enter
or
loope
sub
sub
je
lea
lcall
sub
lret
sarl
add
mov
wbinvd
inc
fdivs
shl
dec
sbb
in
push
xchg
or
xchg
loop
ljmp
xchg
js
into
int
insl
enter
movsl
ret
pushf
sub
mov
cwtl
sbb
cs
jbe
arpl
push
std
decl
dec
adc
xchg
or
push
sbb
jmp
insb
stos
mov
cli
ljmp
arpl
das
jnp
pushf
test
pop
dec
add
or
lret
xchg
sahf
aas
ficoml
sub
xchg
mov
jmp
inc
enter
cmp
xor
ss
cmp
jnp
addb
out
js
aad
mov
inc
inc
movb
sub
fstp
in
push
add
pop
mov
cmp
jnp
addr16
jmp
pop
push
imul
inc
or
pusha
push
mov
ds
jns
mov
fcmovbe
in
aaa
int
std
test
adcb
shlb
push
cld
mov
jno
bnd
push
pop
pop
js
sbb
stos
lods
xchg
and
mov
add
in
sub
jle
mov
lods
sub
popf
scas
jp
loop
jle
pop
or
repnz
and
stos
pop
cmp
mov
mov
jecxz
xor
in
mov
jecxz
mov
dec
lret
shlb
add
add
mov
pop
data16
sub
dec
mov
pop
rolb
mov
test
hlt
jnp
int
int3
adc
imul
scas
adcb
enter
xlat
push
dec
mov
inc
fwait
out
pop
popf
jecxz
inc
bound
jno
insb
push
push
pop
dec
cmp
pop
in
inc
arpl
xlat
testl
popa
nop
mov
lods
lock
daa
loop
inc
mov
mov
xchg
and
rorl
pop
popf
mov
and
cld
mul
shl
sahf
xchg
sbb
aaa
xor
adc
adc
shll
push
mov
jp
mov
add
cs
inc
hlt
mov
mov
dec
mov
sub
mov
out
mov
mov
dec
dec
lea
dec
adc
xchg
and
mov
lret
sub
sub
loopne
std
jns
stos
sbb
aad
pop
flds
and
sub
test
mov
fildl
pop
das
fimull
inc
icebp
mov
jnp
mov
test
shlb
sbb
mov
fcoml
or
out
dec
dec
je
js
push
pop
jne
jno
out
lret
adc
fstl
adc
cld
xchg
mov
mov
xor
stos
aad
bound
fimull
inc
lahf
xchg
movsl
movsl
fwait
mov
bound
pop
sub
push
dec
mov
bound
xor
pop
iret
jbe
jbe
ss
mov
push
ret
xchg
sahf
adc
addr16
push
out
mov
dec
mov
mov
jp
add
inc
cwtl
imul
add
and
push
mov
inc
mov
inc
sbb
sbb
sub
xchg
jb
add
jns
inc
mov
jecxz
mov
pop
andl
dec
adc
addr16
pop
mov
xchg
dec
add
arpl
addr16
cwtl
pop
adc
or
insb
andl
in
add
lods
inc
aad
push
outsl
mov
nop
jle
sbb
aam
sub
movsb
push
cmp
scas
mov
adc
test
pop
cmp
pusha
inc
push
fisubl
lea
lahf
cmc
aaa
movsb
fcomi
andl
jecxz
and
leave
inc
movsb
mov
rol
lods
cmp
fistpll
inc
inc
inc
lret
leave
sub
mov
bound
and
mulb
inc
aam
cmp
xor
in
shll
sbb
je
mov
mov
lds
shlb
leave
popa
xchg
mov
mov
test
out
adc
iret
pop
mov
mov
sub
jo
jae
xor
dec
xchg
je
pop
popa
nop
lea
out
adc
out
addr16
xor
add
or
and
lods
push
xchg
pop
iret
jo
rcpps
lcall
mov
cli
mov
xchg
and
mov
cmp
xor
fsts
push
xchg
fldenv
add
add
mov
xor
adc
or
pop
add
cmp
inc
jl
sarb
xor
repz
push
out
into
in
push
mov
mov
fisttps
pop
rol
cmpsb
idiv
add
test
das
jmp
inc
sbb
rcrb
push
and
dec
cld
shl
addr16
inc
jecxz
std
test
stos
dec
movsl
mov
in
into
lods
jle
ror
or
mov
xchg
mov
mov
inc
pop
jmp
mov
sbb
dec
adc
cmp
xor
sub
fwait
inc
js
mov
sbb
mov
lret
and
pusha
xchg
je
mov
xchg
mov
lahf
xchg
pop
pop
xchg
and
hlt
sti
pop
repnz
mov
cmpsb
je
pop
jge
pop
pop
fistl
add
scas
sub
addb
mov
call
scas
dec
lcall
roll
cli
mov
mov
fs
mov
hlt
mov
inc
xchg
cmp
mov
adc
inc
push
mov
in
rcrb
inc
in
cwtl
icebp
data16
mov
sub
clc
lret
jmp
js
scas
ja
add
or
inc
xorl
and
sarl
adc
or
sahf
pop
fwait
shlb
pop
lcall
ja
push
sub
mov
addr16
mov
dec
mov
popf
xor
in
cmpsb
addr16
sahf
data16
imul
nop
aas
mov
outsl
ds
negl
sub
pop
inc
jle
add
cli
inc
arpl
mov
xchg
nop
or
in
push
gs
daa
dec
movsb
pop
int
dec
pop
aam
dec
cli
pop
shlb
ja
fistpll
loopne
jbe
movb
movsb
mov
cmp
fists
pusha
adc
mov
or
dec
mov
fisubl
insb
jae
mov
mov
or
loop
add
lea
shlb
dec
lret
ss
push
shll
mov
xlat
jb
int3
mov
jp
dec
loop
rolb
cmpsb
or
fs
stos
es
dec
and
lcall
adc
push
aam
rclb
popf
mov
pop
sbb
mov
cmp
and
fiaddl
xor
addr16
jl
std
ret
jns
pop
sbb
fsubr
cmp
fldcw
xorb
popa
adc
dec
mov
scas
stos
scas
movsl
push
hlt
push
push
aam
jne
pop
pop
rcr
rcrl
and
mov
lods
mov
cld
addl
sub
adc
xchg
jmp
inc
add
push
orb
shr
dec
lods
mov
xchg
jl
dec
stos
xchg
or
rcrl
popa
push
imul
xchg
sub
lea
push
mov
xorl
fs
mov
mov
enter
adc
mov
orl
mov
jno
dec
pusha
cs
jb
das
addb
lea
mov
add
or
cmp
ret
hlt
mov
push
in
adc
shrb
cmpsb
add
lods
addr16
enter
out
dec
mov
push
insb
mov
aad
and
xor
cmp
adc
jmp
out
and
jl
xlat
shr
dec
sbb
test
mov
int3
fadd
mov
xor
insl
fistpl
add
test
and
clc
jo
in
fmuls
lahf
pop
nop
in
mov
dec
sub
mov
and
xchg
mov
imul
push
dec
enter
in
push
xor
cwtl
imul
add
daa
push
jp
xor
cmp
in
mov
mov
jnp
dec
mov
xchg
test
lods
xchg
inc
jmp
repnz
dec
sub
dec
cmp
outsl
shrb
ficoms
popa
hlt
lock
add
inc
test
notl
mov
sbb
lods
lahf
and
icebp
lahf
icebp
in
call
xor
arpl
jbe
fidivs
inc
rolb
in
test
mov
inc
imull
pop
mov
mov
repnz
rolb
arpl
jbe
mov
xchg
outsb
jae
lret
mov
loope
jp
inc
insl
scas
xor
and
jle
decl
add
in
nop
mov
lea
or
push
sarb
mov
mov
test
rcll
lock
mov
xchg
aaa
and
jg
pop
daa
lods
push
cmpsl
dec
jle
lods
mov
xchg
adc
jmp
push
enter
notl
orb
xor
int
add
jnp
cmp
cs
jns
nop
scas
jns
movsb
lahf
add
xorl
ljmp
int3
scas
jbe
inc
in
sti
aas
orb
pop
scas
and
aas
add
inc
movsl
lret
push
jns
push
push
jp
jno
das
xor
stc
fisubl
ret
loop
loop
ret
mov
sbb
mov
call
arpl
js
inc
inc
cmp
mov
push
sub
dec
ss
mov
add
je
or
je
arpl
test
mov
data16
cld
or
sbb
cmp
inc
xchg
sarl
xchg
jmp
addb
push
push
dec
sbb
mov
punpckhbw
xchg
in
sarl
mov
push
movsb
fidivrs
and
test
push
fcoml
cs
inc
xchg
cmpsb
xor
mov
test
fcomps
adc
mov
ret
and
enter
push
or
loope
sar
inc
dec
add
into
add
inc
aam
sub
mov
xor
sti
jecxz
test
pop
nop
mull
pop
mov
xchg
adc
mov
inc
mov
lret
jle
adc
xchg
mov
popf
out
sbb
iret
ret
cmp
jo
aas
push
ds
mov
nop
or
addb
push
ret
setb
push
fdivs
dec
or
jmp
and
arpl
adc
sub
out
add
and
add
mov
push
test
pop
sbb
movsb
dec
insb
pop
xor
inc
in
cmp
iret
rolb
adc
pop
sub
ror
push
scas
cltd
js
or
test
pop
aad
add
and
int3
jbe
cmp
aaa
dec
cmpsl
xor
and
mov
scas
add
stos
popf
rcrb
mov
adc
mov
sub
fxam
mov
adc
stos
incl
out
xor
jecxz
dec
shlb
xor
arpl
lahf
orb
mov
sbb
cmp
aam
jne
hlt
sbb
hlt
ljmp
inc
scas
aas
outsb
sub
lret
push
xor
or
sub
mov
repz
pop
fcomp
gs
ficomps
les
mov
pop
repnz
lods
scas
addl
xor
pop
aaa
dec
pop
xchg
ja
push
xor
add
sub
sub
cmp
insb
lea
sbb
jg
push
xor
mov
orl
dec
push
mov
or
mov
les
mov
xor
mov
and
fmuls
js
xchg
push
fidivs
movsb
adc
or
adc
mov
icebp
sub
call
cmp
mov
aas
add
jle
invd
inc
adc
inc
aas
outsl
dec
xor
jmp
sbb
dec
dec
dec
loop
orb
jge
movsb
hlt
cmpxchg
dec
sub
psadbw
mov
push
inc
and
adc
mov
ret
push
dec
lret
jl
sbb
pop
sbb
cmp
movsb
jae
or
scas
jno
mov
enter
das
sahf
jle
nop
pop
mov
ds
lret
aad
pop
cmp
arpl
add
xor
xor
imul
push
loop
adc
dec
jmp
arpl
in
pop
fcoml
icebp
scas
fwait
imul
or
xchg
enter
jno
cmp
and
sbb
scas
test
cld
mov
sbb
and
xchg
lods
mov
xorb
push
shlb
cli
cwtl
sbb
es
enter
aaa
mov
push
gs
bound
xor
push
mov
push
or
jae
push
ret
mov
lock
out
xor
loopne
or
imul
loopne
push
je
sti
mov
fstl
pop
mov
jl
and
fimull
dec
adc
testl
out
or
rclb
icebp
jae
and
pop
push
dec
repz
pusha
lret
popa
std
mov
scas
mov
jmp
clc
and
and
aaa
and
xor
loopne
fs
mov
push
jg
push
add
pop
arpl
mov
test
xchg
push
adc
mov
add
rorl
pop
cs
mov
xchg
cwtl
repz
rorl
sahf
adc
push
adc
mov
push
int
cmp
enter
xchg
lods
out
clc
les
push
insb
mov
repnz
movsl
pop
mov
mov
jmp
add
inc
push
jne
adc
arpl
and
push
and
aad
or
je
push
push
frstor
xchg
inc
loop
fidivrl
and
lods
pop
xor
jbe
shlb
mov
or
mov
sbb
inc
adc
or
and
cmc
adc
adc
mov
loopne
imull
add
cmp
stos
test
out
add
sbb
neg
addr16
cmpsb
inc
inc
hlt
outsb
xor
cmp
cli
sbb
push
and
and
sahf
test
push
mov
push
mov
in
std
lret
pop
int
movsl
loope
push
push
sbb
aas
in
push
pop
dec
pop
sarb
push
inc
push
enter
or
andl
cmp
mov
lret
push
dec
out
imul
sub
scas
push
movq
jne
stc
or
mov
into
ficompl
rol
mov
pop
outsb
fldl
fdivr
movsl
add
mov
pop
popa
mov
inc
movsb
xor
out
fists
loop
pop
fidivrs
push
mov
leave
add
cmpsl
movsl
mov
std
loopne
lret
mov
mov
cmpsl
insb
cld
push
pop
cmp
xchg
test
or
shl
lods
sbb
int
in
xchg
sbb
fisttps
dec
jae
mov
adc
mov
test
cmp
xchg
xchg
xchg
adc
and
repz
fistl
test
xor
mov
mov
mov
fdivrl
pop
xchg
out
orb
xor
lahf
int
jecxz
pusha
repz
jmp
sbb
inc
movl
and
cmp
imul
jl
stos
mov
es
xchg
loopne
sbb
fsubl
pop
mov
mov
dec
out
ja
xlat
jne
add
xchg
adc
cmp
sbb
mov
inc
scas
or
dec
daa
push
lret
xor
mov
dec
rorl
sub
add
push
xchg
loopne,pn
or
adc
or
push
dec
mov
and
jbe
xor
insb
scas
mov
adc
dec
push
shll
jle
ret
in
dec
pextrw
inc
xchg
es
jecxz
dec
or
jns
xor
and
out
pushf
ret
push
mov
cld
dec
pop
insb
fwait
sti
push
pop
mov
cmp
mov
aaa
adc
ljmp
xchg
and
sbbl
and
adc
icebp
nop
xor
cmp
sahf
add
jge
fldt
xchg
xchg
scas
enter
adc
lret
testb
fildl
pop
mov
mov
jmp
xor
and
xlat
sub
dec
pop
call
add
pop
into
pusha
insb
clc
rcll
cli
or
mov
data16
push
push
inc
inc
stc
ss
pop
loop
aam
push
sub
movsl
out
imul
push
cli
loope
xor
pop
in
xlat
dec
dec
adc
idivb
nop
aaa
sbb
mov
ret
mov
adc
fsubrs
data16
enter
incb
push
mov
add
in
xor
or
sti
mov
or
cmp
dec
insl
xchg
clc
popf
cmp
lods
lret
adc
cmp
jl
mov
mov
jno
push
lods
dec
add
mov
in
test
lock
inc
jne
cs
test
push
fwait
out
add
loop
cmp
sbb
or
fadds
mov
test
sub
pushf
and
pop
sub
fwait
dec
push
sub
cmp
mov
jecxz
pop
popa
mov
das
jg
push
imul
sub
and
arpl
cmpsb
bound
mov
dec
sbb
or
shr
sbb
mov
adc
inc
mov
adc
sahf
inc
popa
rolb
jb
and
out
xchg
mov
addr16
inc
and
lcall
and
jl
mov
sub
xchg
pop
add
call
daa
lret
movsb
sbb
dec
loope
lcall
push
movsl
inc
and
lds
inc
test
lret
out
rclb
push
es
imul
pop
dec
fs
repz
test
test
shlb
fwait
hlt
xchg
insl
aas
fmuls
push
sbb
je
mov
xor
sti
in
ljmp
cwtl
in
movb
or
sub
mov
dec
fnstenv
test
sbb
ds
or
mov
jle
cmp
ljmp
add
pop
inc
inc
loop
push
movd
gs
lods
popf
and
cmp
ss
lock
xor
sar
xchg
js
push
daa
add
aad
rcr
add
repnz
dec
jno
sbb
push
mov
negb
mov
rolb
movsb
mov
lea
push
imul
cmp
dec
dec
popf
lock
ret
mov
movsb
mov
adc
in
adc
subb
xchg
cwtl
jne
xchg
or
or
sbb
mov
out
aas
outsl
jae
xchg
bound
add
pop
mov
outsb
ljmp
test
push
popa
enter
adc
push
sbb
cmpb
pusha
mov
inc
nop
sbb
or
adc
fcompl
and
jg
mov
fcmovbe
popf
shl
movsl
and
mov
mov
ds
pop
test
inc
in
pop
xchg
imul
outsl
mov
and
push
dec
mov
push
jle
arpl
mov
adc
pop
daa
inc
or
or
out
or
enter
fstpl
push
cs
sub
xchg
and
jnp
and
cli
adc
push
clc
fadds
subb
cmp
stos
daa
clc
fldt
addr16
rcll
sti
pop
incl
pop
addr16
mov
sahf
imul
pop
pop
inc
mov
enter
mov
loop
je
inc
sbb
dec
add
popl
mov
lcall
xchg
jns
cmp
inc
test
cwtl
xor
xchg
sbb
sub
fsubp
divl
mov
shll
mov
les
jp
les
shll
lods
inc
daa
mov
data16
mov
jmp
repz
mov
shl
adc
movsb
push
mov
ljmp
inc
aaa
sbb
addr16
cmp
inc
clc
call
fxch
ret
test
lods
mov
sbb
test
xchg
aam
ffreep
add
xchg
popa
out
xchg
pop
jo
lods
out
icebp
cmc
or
sbb
sub
fdivrl
test
or
jg
int
cld
jmp
stos
xchg
jge
lds
sbb
arpl
ret
push
cld
testl
inc
xorb
xor
dec
lret
ret
push
cmp
daa
into
xlat
pop
sarb
mov
fiadds
push
out
and
inc
lds
rcll
lods
push
inc
jmp
jle
mov
cmp
out
add
mov
test
in
addb
in
std
mov
lahf
subl
xor
in
fisttpll
out
pop
xlat
cmp
aad
jno
cmp
inc
sbb
test
xor
inc
pop
imul
das
outsl
adc
sbbb
mov
inc
or
xchg
xlat
imul
sbb
dec
jno
mov
aaa
sbb
sbb
mov
xor
lea
test
jno
nop
mov
roll
cs
je
outsl
lock
mov
and
dec
dec
faddl
jbe
mov
jb
fcompl
or
fcoml
mov
xor
cmp
ss
mov
cmp
and
xor
lret
jecxz
pop
dec
les
test
jne
pop
imul
mov
jp
or
dec
jmp
mov
cmpsl
add
lods
sti
imul
xchg
jns
jb
mov
pop
outsb
and
sub
call
push
jecxz
jecxz
mov
xchg
push
les
adc
lahf
xor
xchg
inc
lret
gs
mov
inc
icebp
test
mov
jmp
push
jg
in
cmp
adc
je
test
mulb
pop
popf
decl
out
mov
or
jbe
repnz
dec
jmp
xor
scas
popa
and
add
lea
add
add
cmc
testl
sub
je
ds
icebp
pusha
sahf
fsubr
cs
push
add
aaa
pop
and
inc
in
mov
enter
aaa
sti
mov
and
jo
clc
jp
push
add
xchg
aas
inc
jecxz
out
xchg
dec
xchg
and
scas
shll
mov
or
insl
push
pop
loop
mov
add
pop
push
or
mov
inc
sbb
add
cmp
push
sbb
sbb
arpl
outsl
jbe
test
jae
enter
cmpl
mov
mov
idivl
lds
roll
mov
insb
pusha
jnp
add
or
pop
cli
and
cltd
ds
or
mov
rcrb
adc
es
or
pop
xor
in
or
pop
cmpb
pop
mov
sub
jle
je
mov
ret
push
mov
out
fisttpll
jmp
scas
push
mov
pop
pop
popa
in
repnz
lock
dec
jl
repnz
addb
push
mov
mov
outsl
je
mov
mov
or
idivl
mov
les
mov
ja
int
or
pop
jp
std
sarl
mov
fbstp
popl
jecxz
fbstp
mov
mov
jno
xor
jg
sbbl
push
inc
inc
fwait
insb
leave
adc
jmp
mov
jb
xor
ret
rcrl
dec
sbb
outsl
inc
pushl
sub
imul
jl
push
mov
adc
cmc
popf
jmp
jnp
mov
or
dec
pop
insl
inc
ss
jl
hlt
xchg
cmpsb
enter
popf
mov
pop
push
ret
mov
add
mov
mov
not
mov
pop
xor
ds
es
or
jp
stc
divl
popf
sbb
mov
aam
sbb
inc
insl
cmp
sahf
mov
mov
das
xor
dec
fcompl
test
add
outsb
xchg
xor
daa
stos
ret
jmp
daa
xchg
mov
sbb
pcmpeqd
pop
aaa
dec
int
xor
popaw
jb
arpl
loopne
lret
testb
inc
jp
and
sub
imul
push
test
mov
test
js
inc
dec
lods
pop
mov
imul
insl
outsl
mov
ljmp
sub
inc
jecxz
pushf
fchs
add
sbb
sbb
xchg
pop
dec
push
mov
sub
adc
xchg
pop
xchg
popa
shlb
adc
int
mov
mov
loopne
lahf
sub
cmp
or
mov
shl
and
repnz
sub
shlb
in
push
sti
mov
inc
outsl
arpl
insb
xchg
sub
jo
mov
in
pop
enter
sti
mov
bound
mov
xor
fdivrs
mov
mov
adc
mov
ja
mov
and
push
and
mov
into
sti
fdivs
xchg
outsl
and
dec
loop
stc
or
push
dec
xor
inc
movsb
mov
aam
cmp
xor
ja
jne
ror
xchg
pop
cli
cmp
or
enter
std
ja
ds
out
dec
lcall
or
movsl
xchg
cmp
aam
jecxz
pop
sbb
enter
in
out
dec
mov
rcr
lahf
pop
test
inc
lods
aam
imul
mov
ss
push
insb
ljmp
jnp
fistps
stc
cli
dec
cmp
xchg
jecxz
lahf
dec
mov
sti
mov
cmpsl
cmp
shll
xchg
mov
aam
xor
push
mov
cwtl
scas
cmp
rcrb
adc
inc
sub
adc
push
mov
mov
adc
nop
lahf
mov
dec
clc
xor
and
js
add
insl
into
in
and
loope
sbb
fsubl
aaa
and
mov
sub
int3
mov
pop
pop
test
cmp
daa
adc
jno
leave
push
pop
inc
adc
sbbl
or
pop
xchg
mov
pop
jne
sbb
xchg
mov
mov
pop
clc
mov
int
mov
filds
mov
fistpl
cmp
jns
push
mov
inc
dec
push
out
or
imull
mov
sub
stos
std
loopne
xchg
adc
testl
dec
and
imul
push
and
xor
push
aaa
clc
adc
push
jnp
push
inc
inc
daa
cmp
and
mov
es
xchg
pop
cmp
rclb
enter
data16
rcl
push
push
rcll
popa
mov
sub
add
stc
fstpl
les
pop
ficoml
xchg
sahf
jno
data16
in
xor
aas
das
ret
jmp
dec
daa
pop
fldt
push
dec
clc
insb
cmp
pop
xchg
mov
add
shlb
sbb
add
lcall
out
fs
sbb
xchg
stos
out
in
stos
leave
repz
sbb
or
xchg
stos
and
aas
mov
xor
dec
icebp
out
call
arpl
andl
add
jmp
addr16
fs
loopne
dec
mov
repnz
lods
cli
sbb
sbb
xor
sub
ja
pop
shl
jecxz
jbe
add
jg
leave
sbb
push
enter
sbb
ret
mov
mov
xor
and
popa
lods
sub
fcomps
cmp
cmpsb
fwait
orb
or
jg
mov
icebp
int3
aaa
les
fcompl
xchg
icebp
inc
cmpsb
out
cmp
stc
jmp
frstor
cmp
push
sbb
sbb
pop
jo
add
loope
daa
cs
push
daa
jne
ret
arpl
push
xor
sub
imul
add
add
mov
xor
fistps
push
into
mov
cmpsb
pushf
sbb
jg
pop
and
test
into
dec
ret
cmp
xchg
mov
mov
ja
stos
pop
fisubrl
adc
dec
add
adc
dec
sahf
xchg
cmpsb
push
pop
sbb
addl
cmp
ret
or
dec
mov
push
inc
inc
orb
jg
aam
shrb
cmp
loopne
inc
dec
lds
xchg
xor
rcll
clc
adc
cli
das
outsl
sbb
lcall
cmp
push
fistpll
cli
add
pop
call
in
lret
fucom
pop
mov
xchg
push
jle
pusha
cmp
mov
mov
jle
repnz
data16
jecxz
fs
pop
in
out
xor
jmp
std
in
movsb
adc
pop
fisttpll
mov
movsb
aam
jle
inc
testl
ret
adc
sub
sbb
push
dec
scas
sti
xor
and
adc
mov
daa
pop
or
mov
sbb
cwtl
pop
lods
out
out
and
mov
repnz
popa
adc
sub
pop
jle
int3
lock
dec
sbb
clc
movsb
ss
push
xor
out
mov
sub
lods
stos
xor
pushfw
notb
sbb
popf
pushf
pop
cmp
inc
adc
jge
or
pop
mov
cmp
mov
dec
mov
mov
popf
mov
jb
stos
data16
loop
popl
aad
push
xor
sub
jnp
leave
mov
mov
cltd
mov
addb
testl
dec
inc
rcl
clc
out
out
and
iret
faddl
scas
push
mov
out
adc
pop
sqrtps
loop
pop
orb
loop
xchg
push
adc
pop
shlb
add
test
jae
mov
rcrb
rorb
pushf
test
mov
jmp
movsb
loope
out
xchg
daa
hlt
jmp
insb
jmp
and
push
insl
cltd
jg
dec
and
cmp
push
cmpsl
std
mov
push
inc
mov
call
je
repnz
pop
xchg
dec
test
jns
sbb
mov
mov
inc
jl
add
scas
dec
jmp
mov
pop
rorb
jae
movsl
ficoml
cmc
out
fs
pop
mov
addr16
popa
mov
test
js
dec
addl
mov
sub
loop
data16
ret
add
aaa
imul
test
pop
fs
inc
xchg
jg
ret
jmp
adc
push
sbb
adc
mov
nop
mov
jne
xchg
push
dec
push
gs
inc
fnstcw
scas
cltd
js
lret
xchg
sub
out
mov
mov
aas
or
ret
lret
sbb
add
pop
sbb
das
push
lret
iret
pop
add
mov
push
fs
test
imul
sub
out
in
aam
lahf
iret
test
movsl
add
ja
add
mov
ret
lret
inc
cmp
iret
mov
scas
hlt
sbb
mov
fidivrl
dec
sub
xorb
dec
push
test
in
cmp
dec
in
data16
pop
arpl
loop
mov
neg
addr16
jmp
or
stos
fs
jle
into
xlat
popf
outsb
dec
or
xor
scas
push
xchg
inc
cmp
pusha
sub
pop
dec
cwtl
stc
scas
xchg
adc
fdivs
or
xchg
ljmp
lds
xlat
ja
arpl
xchg
imul
pusha
xor
rcrl
pushf
add
cmp
jg
mov
adc
jmp
and
int3
dec
pop
ffree
je
cmpsb
pop
dec
imull
dec
pop
sub
push
orb
rolb
out
loopne
cld
shr
push
cmpsl
dec
fdivr
popf
repnz
pop
xor
fiaddl
add
sub
add
cmp
mov
dec
mov
xchg
jo
add
mov
mul
add
jo
out
rcrb
into
cmpsl
daa
xor
pop
mov
jo
js
das
push
test
and
mov
add
ud1
out
cmp
dec
les
adc
mov
rep
push
lret
dec
cmpl
repnz
push
je
mov
jns
sub
mov
xchg
jg
into
mov
jmp
in
sbb
stc
or
fimuls
sub
cwtl
lahf
cmpsl
xchg
ret
pop
cmp
inc
dec
ja
inc
in
xchg
mov
in
lahf
pop
imul
lret
cmc
cli
jl
mov
mov
jns
std
mov
dec
jge
fbld
push
xor
cmp
fs
js
inc
sub
pop
and
jb
movsb
cs
insl
and
push
jmp
or
pushf
cmp
xchg
mov
pop
mov
dec
dec
jg
ja
push
lock
push
dec
cmp
fstps
jo
dec
or
fadds
aas
xor
xrelease
push
push
push
mov
shl
adc
push
clc
push
and
fs
das
repnz
or
das
pop
fcompl
adc
pop
loopne
mov
or
inc
movsb
fnstsw
fstpl
lock
mov
je
or
sub
mov
push
and
pop
cmp
js
xor
in
repz
dec
xlat
cld
and
push
dec
mov
and
ret
mov
push
jno
dec
lods
lcall
add
js
popf
xchg
popa
scas
call
jb
pop
roll
jl
inc
sbb
sbbb
clc
lock
mov
mov
pusha
cmc
or
ds
xor
call
leave
ja
jle
sub
mov
scas
mov
in
and
rol
xchg
lds
sub
pushf
dec
xchg
cmc
adc
mov
inc
stos
adc
test
push
in
jne
scas
push
movsl
add
sub
add
mov
ljmp
lcall
ret
movsl
out
add
lods
repnz
shrb
cmp
dec
push
arpl
lea
out
xor
or
or
sub
rorl
jmp
xchg
xchg
out
xchg
inc
dec
rcrb
das
add
insb
and
insl
enter
arpl
adc
mov
rolb
xchg
mov
mov
adc
clc
sti
or
aad
mov
xchg
mov
data16
xchg
fistps
lock
xlat
shrl
das
daa
ljmp
pushf
push
mov
and
movsl
dec
lock
sub
cmp
pop
out
sbb
dec
icebp
push
inc
imul
rorb
scas
push
.byte
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
cmp
sub
js
dec
adc
iret
sub
pop
sub
leave
sbb
mov
adc
aas
mov
ja
and
push
daa
xor
cmpsl
push
hlt
negb
in
push
dec
pop
popa
sub
push
icebp
xlat
cmc
pop
xchg
and
test
jl
xlat
adc
lds
and
jae
insb
shll
icebp
sub
cmp
and
fistl
cmpsb
pop
in
imul
gs
lcall
std
fildll
test
dec
mov
xor
mov
inc
.byte
repz
add
add
movsb
notb
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
movsb
notb
add
add
add
add
mov
add
addb
add
movsb
notb
add
add
add
add
add
add
enter
add
add
loopne
add
movsb
notb
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
movsb
notb
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
movsb
notb
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
movsb
notb
add
add
add
add
mov
add
addb
add
movsb
notb
add
add
add
add
add
add
addb
add
add
movsb
notb
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
movsb
notb
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
movsb
notb
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
movsb
notb
add
add
add
add
add
add
sbb
add
movsb
notb
add
add
add
add
add
add
sub
add
movsb
notb
add
add
add
add
add
add
cmp
add
movsb
notb
add
add
add
add
add
add
dec
add
add
movsb
notb
add
add
add
add
add
add
pop
add
add
movsb
notb
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
movsb
notb
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
movsb
notb
add
add
add
add
or
add
add
add
movsb
notb
add
add
add
add
or
add
add
add
movsb
notb
add
add
add
add
or
add
add
add
movsb
notb
add
add
add
add
or
add
push
add
add
add
movsb
notb
add
add
add
add
or
add
push
add
add
add
movsb
notb
add
add
add
add
or
add
push
add
add
add
movsb
notb
add
add
add
add
or
add
push
add
add
add
movsb
notb
add
add
add
add
or
add
add
add
add
movsb
notb
add
add
add
add
or
add
add
add
add
movsb
notb
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
andb
call
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
sub
add
in
add
add
add
jo
add
add
add
add
add
add
add
add
in
add
add
add
cwtl
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
andb
dec
cwtl
xchg
pop
dec
sub
xor
add
sarb
push
loopne
sub
loope
lods
mov
push
inc
lds
stos
dec
sub
mov
push
out
es
bound
fistps
ljmp
popa
rclb
xor
xchg
out
rclb
sbb
fucom
out
mov
mov
out
sbb
cmp
fcoml
or
sbb
inc
push
in
test
dec
mov
push
jno
mov
insl
out
pop
pop
or
std
leave
adc
mov
dec
js
cwtl
fs
add
pop
adc
cli
adc
out
dec
mov
xchg
mov
movsb
jp
mov
popf
cs
shlb
push
cmp
clc
or
pop
sbb
jno
push
daa
aam
ror
mov
outsb
out
outsw
fldt
shr
test
dec
js
in
arpl
bnd
rep
push
negb
movsl
adc
xor
mov
mov
push
mov
enter
add
lods
mov
scas
mov
mov
push
mov
sub
inc
push
cmp
push
inc
add
outsb
in
inc
fcoml
mov
xor
dec
inc
cs
loop
inc
fcoms
lcall
mov
test
xchg
fsubl
mov
ret
lret
movsl
push
xchg
lahf
mov
mov
xchg
mov
ss
popf
lahf
adc
lods
adc
andb
insb
cltd
mov
sarl
addr16
test
js
xchg
aam
add
test
ja
jge
xchg
cld
cmc
shrl
in
fs
fidivrs
push
sub
in
lods
jmp
nop
lahf
lret
dec
and
or
push
xchg
cs
dec
je
and
ret
jmp
xor
push
xor
fimuls
and
insb
or
scas
icebp
lods
fsubl
xchg
outsl
mov
jno
inc
dec
jb
inc
mov
mov
pop
cmpsb
jg
lahf
pushf
aaa
nop
lahf
imul
dec
adc
fistl
jbe
push
shlb
out
adc
cmc
lcall
enter
testl
pop
inc
into
lret
mov
fst
enter
out
shr
jne,pn
push
frstor
fnstenv
and
cmp
jmp
cmp
repnz
cmc
stos
arpl
xor
dec
jne
jmp
sbb
data16
test
sub
int3
cmpsl
sahf
xor
jnp
xchg
push
je
mov
xlat
push
mov
ja
andb
xchg
pop
sar
jmp
sub
push
int
inc
add
leave
or
xor
negb
movsb
pusha
add
sub
mov
popa
xchg
sti
insl
sbb
das
in
mov
dec
pop
xor
lcall
push
push
push
push
cs
mov
sub
enter
sbb
and
inc
cmpsb
push
xchg
jg
cltd
out
and
fcoms
lahf
daa
nop
mov
pop
or
jbe
xadd
jo
scas
inc
cmp
in
sub
addl
cmp
int
sar
jl
movsl
sub
cmp
cwtl
fstl
xor
add
mov
xchg
adc
xor
call
test
test
and
cmpb
xor
dec
pop
in
jmp
sbb
jo
jl
dec
je
and
or
pop
add
or
mov
cs
jecxz
jge
jp
mov
mov
adc
ss
add
add
push
test
mov
or
int3
mov
cmp
loopne
testb
xchg
pop
pushf
jle
ret
push
or
data16
in
test
test
add
jns
les
aaa
lods
ret
call
ja
push
adc
sbb
out
mov
clc
insb
mov
push
or
jp
pop
outsb
fdivrl
adc
mov
in
jno
in
xor
add
add
loop
cmp
test
ljmp
test
cs
inc
bound
inc
fsubl
or
hlt
std
ds
sahf
mov
push
testb
out
testb
lcall
fisttps
inc
pop
and
sbb
movb
inc
testb
popf
dec
aam
pause
aam
cmp
shrb
or
scas
xor
xor
jl
stc
mov
dec
repnz
adc
lret
inc
lret
adc
ret
jp
lods
add
fidivrs
out
mov
fldl
pop
inc
xor
stc
push
daa
mov
orb
lret
pop
enter
sbb
xlat
cltd
jge
xchg
aad
movsb
lock
jo
xor
xor
push
mov
int3
mov
mov
fists
mov
shrl
pop
fwait
mov
adc
inc
pushf
jp
mov
jbe
mov
into
xchg
arpl
mov
cmpsl
loope
ds
jg
mov
cwtl
mov
std
cmp
lahf
test
pop
rcll
testl
rol
or
loope
mov
xor
rclb
adc
jno
aam
cmpsb
sub
mov
lods
mov
sub
mov
xchg
add
cmp
jecxz
inc
fs
cltd
jns
push
jecxz
pop
leave
add
fs
xor
sahf
xor
xchg
leave
xchg
scas
shl
addr16
add
fstl
xchg
call
cmp
int3
xchg
pushf
inc
jnp
pop
pop
or
push
clc
cmc
dec
inc
out
sbb
lock
xor
int3
es
cmp
ret
out
aam
imul
fstpl
mov
testl
cwtl
idivl
lret
sub
insl
sub
cmp
mov
out
inc
push
cs
xor
xchg
pop
inc
sti
mov
notb
clc
ret
movsl
jo
mov
fcomps
ret
movsb
pop
sub
out
jnp
cmp
cmp
sarb
adc
cwtl
cli
inc
repnz
pop
orl
ljmp
mov
aam
pop
mull
sub
or
inc
decb
ds
icebp
push
xchg
mov
sbb
popl
cmp
inc
mov
push
imul
pushf
mov
jns
mov
and
repnz
loop
repz
lret
mov
mov
pop
arpl
jb
notl
leave
leave
cltd
rorl
xor
lods
inc
and
nop
aam
pop
sti
shrb
fmuls
fistps
fldl
out
loopne
outsb
testl
lret
arpl
mov
cld
orb
push
ljmp
repnz
dec
js
je
dec
mov
dec
xchg
in
xor
iret
jns
loop
inc
fwait
imul
sub
fcmovbe
xchg
fwait
test
dec
inc
mov
cwtl
cwtl
adc
sub
mov
out
dec
dec
jbe
sbb
popa
orl
add
int
popf
or
mov
inc
xor
in
inc
add
xchg
pop
inc
cmp
and
xchg
popa
dec
dec
add
fstl
or
adc
aad
mov
jg
ret
push
mov
popa
mov
inc
or
push
dec
sub
push
push
xor
dec
mov
hlt
jp
es
das
add
pop
adc
jo
sbb
loopne
lods
add
stos
cmp
adcb
lcall
mov
jns
les
sbb
mov
rclb
and
push
scas
sub
aas
xchg
sahf
pop
mov
iret
in
jae
cmc
and
outsb
lods
outsb
or
mov
xchg
int3
pushf
dec
pop
push
and
subl
sub
inc
push
xor
inc
xchg
xlat
push
test
call
test
fndisi(8087
daa
mov
mov
sub
dec
jmp
xor
insl
lods
dec
cli
xor
jge
add
pop
mov
stos
jge
push
mov
lds
cmp
adc
add
adc
jle
fisttpll
loopne
lods
sub
sub
repz
pushf
dec
orl
lret
sti
rcll
jo
xchg
and
adc
mov
std
add
jns
push
xchg
loop
xor
add
sarb
aam
and
in
and
xchg
lods
inc
std
in
pop
push
mov
cmp
cmp
inc
sbb
xchg
inc
xlat
push
or
popa
pop
jo
mov
scas
xchg
loope
test
cs
sub
mov
pop
fstl
add
and
rcl
in
pushf
mov
aaa
pop
dec
lcall
pop
idivl
inc
inc
sbb
jmp
sbbb
or
sub
mov
lods
dec
cmp
mov
push
outsb
arpl
ss
push
mov
popf
jno
jo
jno
adc
mov
std
fcomip
ljmp
and
push
ljmp
add
push
push
xchg
hlt
lret
imul
in
pop
in
daa
hlt
push
flds
xor
mov
enter
pop
xchg
std
push
sbb
loopne
sub
push
pop
out
filds
outsb
push
mov
mov
xchg
fs
xchg
sub
push
sbb
cmc
mov
enter
stos
scas
or
loope
dec
ret
jl
or
push
cmc
int
test
mov
int3
push
stc
inc
ja
xchg
jl
adc
xor
push
cli
out
shlb
push
loope
push
cmp
mov
add
movsb
lea
push
mov
adc
stos
sbb
and
scas
mov
in
ret
or
add
jle
faddl
mov
mov
stc
js
in
jle
je
testl
sub
mov
iret
popf
xor
lret
int
mov
cmp
movsb
test
mov
pop
xor
mov
jle
pop
out
jge
bound
mov
imul
vandpd
int
pop
xchg
aad
and
adc
ja
aam
loope
popa
lcall
scas
jns
mov
clc
mov
mov
mov
sub
scas
or
lret
cltd
mov
fsubrl
dec
and
clc
rcl
dec
xor
sub
add
adc
ds
and
or
inc
mov
les
xor
jle
or
adc
imul
and
je
in
imul
xchg
sub
jbe
add
shlb
add
jmp
lahf
cli
movsb
pop
insl
xchg
call
push
lea
pop
cmc
jb
notl
stc
dec
imulb
cmpsb
pop
dec
jg
dec
dec
pop
cmpsb
and
push
xchg
xchg
adc
push
mov
cmc
add
test
pop
sbb
and
sbb
loop
mov
enter
aam
jns
dec
fwait
or
cmpsb
mov
or
out
pusha
dec
in
sbb
mov
adc
pop
das
pop
mov
xchg
add
in
inc
pusha
rorb
js
mov
pop
sub
and
mov
mov
pop
sbb
bound
data16
sti
or
inc
cmp
scas
ds
mov
out
xchg
movsl
pop
out
xchg
sbb
nop
mov
jle
mov
cmpsb
or
mov
jge
loop
imul
mov
cli
stos
popl
add
mov
test
mov
dec
xchg
mov
mov
inc
mov
lods
lods
imul
push
insb
mov
pop
push
pop
shlb
jae
or
push
fiaddl
xor
sbb
xlat
fimuls
shrb
test
push
inc
lcall
aad
imul
inc
jbe
int
nop
push
test
push
dec
aaa
dec
pop
lods
sbb
mov
insb
inc
xchg
jae
test
inc
inc
out
test
scas
pushf
shr
shll
push
lret
test
scas
or
imul
push
and
js
mov
jecxz
mov
push
int
xchg
push
popf
repnz
fabs
popf
jge
mov
push
pcmpeqb
pop
iret
dec
cwtl
lret
push
jne
out
jno
outsb
ds
push
inc
arpl
add
jae
iret
loop
dec
push
loop
imull
sub
mov
ret
les
sub
mov
xor
and
push
mov
lahf
insb
in
pop
pop
sub
xor
hlt
mov
fdivrl
push
std
out
test
rclb
lds
dec
clc
fisttpl
int
jo
sahf
ficomps
sub
sahf
cmp
pop
mov
mov
or
into
sub
mov
je
pop
mov
popf
gs
popf
sbb
outsl
lock
cmpsb
pop
push
mov
mov
mov
adc
bound
outsl
repz
stc
xchg
cs
scas
mov
mov
filds
jp
fldt
jle
loopne
pusha
into
cld
dec
movsl
inc
loope
stos
mov
cmp
enter
inc
dec
xchg
push
roll
in
insb
pusha
je
xchg
aas
pop
add
jmp
fbstp
test
adc
fdivs
aas
nop
sbb
idiv
jb
repz
in
mov
ljmp
add
mov
js
xor
add
rclb
jl
mov
jg
push
push
jge
insl
lock
stos
mov
xchg
mov
cmp
cmp
pushf
mov
rclb
rcll
mov
add
pop
mov
pop
mov
cmpsl
lcall
adc
aaa
xchg
cmp
divl
out
mov
cmp
pop
push
divb
les
mov
popa
jno
out
aad
xchg
loope
cmp
inc
xor
add
xor
push
push
inc
ss
lds
dec
xor
cmp
mov
mov
inc
nop
push
mov
in
cmp
jnp
jo
adc
mov
in
jp
shr
inc
and
fisubrs
and
roll
lods
ret
je
mov
jmp
stos
mov
jno
mov
bound
sub
in
icebp
rorl
cs
xor
scas
sbb
or
jbe
xlat
xchg
movb
push
cmpb
std
pop
stc
popf
push
cmp
mov
and
add
iret
jp
jnp
pushf
fxch
cmpsl
mov
imul
jo
jp
mov
mov
or
popf
daa
fs
add
jns
cwtl
int
int
inc
in
jno
stos
push
js
lret
push
stos
lcall
mov
call
xchg
xor
hlt
nop
int3
and
icebp
sub
leave
scas
lods
scas
in
mov
in
data16
insl
into
jle
scas
ds
hlt
push
imul
loop
repnz
les
rcrl
adc
jnp
mov
fs
push
pop
cmp
bound
pop
mov
shr
jb
dec
mov
push
roll
popl
test
test
dec
mov
mov
test
out
mov
xchg
fwait
mov
xor
int3
dec
lds
jmp
movsl
jmp
into
pop
xchg
int3
xlat
sbb
mov
rcll
ja
sbb
fs
insl
out
mov
push
jmp
adc
add
adc
pushl
cmc
mov
cmp
push
xlat
mov
mov
arpl
cmp
fs
loopne
push
fldcw
push
jle
outsb
loop
push
test
das
call
push
test
gs
std
enter
push
mov
xor
into
das
jmp
test
mov
sbb
ret
adc
stos
cmc
sbb
dec
dec
lcall
cmpb
std
sub
pop
dec
push
inc
pop
stos
and
xchg
mov
dec
xor
cs
outsb
add
rol
ljmp
lret
inc
push
and
int3
mov
insb
push
or
push
adc
fdivrl
gs
push
mov
loopne
ret
add
jo
xor
cmpsb
popf
ss
or
rcrl
inc
pop
adc
jno
jbe
jae
mov
push
mov
shll
cltd
icebp
xor
pusha
test
scas
addb
outsb
loop
mov
jnp
fdiv
mov
and
add
in
dec
jg
ret
mov
sbb
or
dec
pop
mov
add
push
xchg
test
xor
pushf
mov
push
lahf
fsts
rorb
cs
xchg
pushf
dec
imul
push
mov
shll
sbb
data16
push
cmc
xor
inc
xchg
mov
xor
mov
pop
in
mov
pop
push
add
loope
in
sbbb
and
rolb
jns
pop
scas
cld
adc
lods
mov
movsb
jmp
jmp
cli
adc
clc
adc
sbb
lret
je
lahf
jg
sub
into
add
adc
push
lock
stc
jg
cld
rcll
xor
cmpsl
mov
mov
mov
mov
xchg
xor
jae
or
cli
stc
mov
xor
mov
push
mov
int3
xor
inc
jmp
mov
pushf
sbb
out
adc
jmp
jp
fwait
pop
shrb
pop
pusha
aad
xchg
xchg
outsl
imul
add
ret
test
js
cmc
push
sbb
dec
jb
pop
fcoml
jge
push
push
int3
movsb
and
es
or
outsb
mulb
sub
and
andl
or
mov
ss
addr16
ret
pusha
dec
int
or
push
clc
mov
or
push
arpl
mov
imul
lahf
rorl
inc
rclb
out
jg
insb
push
jae
icebp
add
xchg
aad
cltd
ret
xchg
adc
xchg
bound
fsubl
jmp
cwtl
adc
insl
shll
inc
cmp
xchg
mov
dec
into
xchg
or
push
enter
add
and
or
fwait
cmpsl
icebp
jno
test
out
xor
mov
aad
push
adc
das
stos
sub
and
in
adc
xor
jecxz
dec
in
insb
bound
je
hlt
jmp
cmp
loop
shrl
daa
cmp
js
rcrl
in
enter
pop
sbb
aaa
popf
adc
daa
cmpsb
lcall
mov
lock
jge
sbb
xchg
into
cmp
outsl
rclb
stos
mov
int
dec
xchg
ljmp
xor
xchg
push
jge
ret
sbb
mov
fsubl
ljmp
mov
add
dec
sub
jl
or
cmpsl
dec
pop
es
js
jmp
out
aas
sbb
rclb
xor
cwtl
imull
enter
xor
mov
pushf
xchg
cmp
in
or
dec
push
les
mov
or
pop
cmc
inc
and
adc
rorl
outsl
fiaddl
ljmp
inc
cmc
jae
cmpsl
push
aam
lock
jns
sbb
inc
rol
fisttpll
dec
addr16
push
daa
in
lea
lods
addr16
mov
inc
jp
mov
xor
pusha
mov
push
mov
xor
mov
xchg
or
push
mov
movsl
hlt
sbb
xchg
mull
call
cmpsb
sbb
icebp
cmpl
shlb
ret
loope,pt
divb
popa
push
cwtl
mov
and
sbb
add
and
call
push
nop
cmp
dec
add
jnp
xchg
sahf
push
sub
xlat
xchg
dec
out
add
aad
lret
fcmovbe
insb
inc
lret
nop
cmp
adc
sub
outsl
push
outsb
push
call
movsb
inc
or
mov
imul
loope
sbb
and
mov
lods
mov
cmp
or
incb
and
xchg
mov
idivb
jmp
cmpsl
sbb
sti
inc
imul
push
lret
sub
push
pop
inc
fs
js,pt
mov
mov
adc
data16
xchg
add
sbb
shl
pushf
inc
xchg
jb
je
popf
js
jbe
nop
movd
sub
or
push
inc
xor
add
popf
outsb
aad
push
insb
inc
add
arpl
pop
and
add
inc
mov
in
add
call
push
push
jno
in
les
loop
bound
outsl
movsl
sub
out
mov
xchg
cmp
pop
cmp
push
pop
out
pop
pop
add
fdivr
add
fst
inc
fisttpl
cmp
fwait
mov
cmp
movsl
cmp
out
popa
lods
rolb
iret
ljmp
in
das
movsb
sub
fnsave
xchg
inc
testb
and
fists
mov
pop
adc
int3
fcomps
insl
xchg
inc
pop
pushf
ret
adc
push
sbb
cmpsl
push
jg
movsl
pop
add
jns
loope
mov
in
dec
mov
xor
faddl
pop
icebp
sbb
rcpps
aam
mov
and
mov
sub
movsl
negl
adc
stos
fcoml
arpl
and
les
jb
cmp
mov
fisubrs
cli
nop
mov
in
fnstsw
mov
pop
and
test
lea
adc
fdivs
sbb
movd
mov
mov
daa
mov
push
cmp
adc
test
jl
xchg
push
adc
out
insl
js
or
or
aad
scas
int
in
lods
cs
adc
pop
popf
arpl
test
std
mov
sub
scas
and
push
ds
jecxz
xor
stc
mov
adc
test
inc
pop
loopne
mov
repnz
nop
nop
jne
aad
cmp
xchg
dec
shlb
aad
sahf
insb
jg
push
int3
adc
fldenv
iret
aaa
aas
mov
cmp
inc
shll
sbb
inc
and
add
movb
cmp
fucomi
xor
inc
xor
cmp
shl
enter
push
shll
jle
mov
int3
iret
mov
mov
jmp
pop
shrb
jb
fisttpl
in
jle
imul
xchg
jecxz
hlt
andb
out
mov
xlat
mov
inc
xchg
popa
push
xor
xor
testb
mov
jbe
out
jle
or
jb
jo
mov
cltd
add
inc
data16
lods
in
mov
shlb
xchg
xchg
push
dec
stos
pop
push
mov
out
sahf
fnstcw
mov
gs
push
xchg
shlb
push
push
cli
cmp
xor
into
adc
dec
in
mov
and
mov
lock
mov
push
aad
fcomps
sub
sub
out
inc
imul
or
test
cld
fcompl
fsubr
push
insl
scas
sbb
inc
pop
insl
sub
repz
dec
fwait
inc
push
scas
inc
jnp
push
adcb
sub
cltd
lods
rdpmc
pop
cmpsl
cmp
dec
ss
push
repnz
lds
sub
mov
push
xor
jno
and
xor
dec
adc
dec
or
and
add
pop
fldt
xlat
adcb
sbb
inc
jbe
mov
test
adc
and
loopne
test
cmp
jp
xchg
adc
xchg
mov
loop
sbb
mov
push
pop
int3
inc
xchg
icebp
gs
add
out
divb
or
sub
js
mov
dec
sub
adc
out
xchg
test
nop
xchg
sar
orl
push
pop
mov
insb
rcll
repnz
sub
leave
nop
inc
imul
xor
nop
push
dec
lock
mov
mov
ja
sahf
ja
xor
int
stos
cmpl
sbb
test
add
daa
xor
xchg
pop
pop
adc
xchg
test
add
push
lcall
sub
inc
sbb
adc
aaa
mov
mov
in
aaa
pop
fsubp
pop
into
inc
and
xlat
aas
dec
mov
mov
pop
xor
or
ljmp
push
enter
lahf
imul
std
roll
cmpsl
xchg
lea
adc
fwait
stos
add
shll
jnp
inc
pushf
lcall
aam
popf
mov
fidivrs
fxch
dec
or
add
leave
pop
fadds
push
aas
push
mov
inc
push
or
jge
xchg
pop
fldcw
scas
push
and
push
dec
insb
adc
push
daa
mov
jp
loopne
jbe
mov
xor
push
jl
sub
out
sub
insb
out
lret
lds
push
mov
xlat
jmp
sbb
cmpsb
rep
mov
pushf
sbb
cmp
imul
mov
xchg
pop
mov
dec
cmp
mov
fidivs
nop
mov
imulb
les
and
xchg
js
int3
arpl
out
cmp
cmp
dec
scas
or
xchg
ret
in
and
fsubrl
mov
enter
adc
iret
push
movsl
jl
js
sub
mov
sbb
sub
mov
cmp
cli
nop
insl
and
inc
flds
pusha
xchg
fnop
scas
mov
push
add
nop
push
imul
jae
xor
xorb
dec
mov
adc
mov
mov
cmp
gs
push
fstl
mov
push
adc
jo
xor
mov
ret
iret
inc
mov
cmp
inc
in
or
pop
push
cli
pop
sub
pushl
pop
and
adc
fadds
repz
dec
sbb
jecxz
and
or
mov
cltd
adc
mov
push
lods
mov
out
or
mov
add
pop
xchg
and
int3
cltd
xchg
jle
pop
jae
sbb
movsl
imul
in
sti
sub
dec
push
push
jmp
pop
add
or
dec
insl
lods
lock
inc
adc
mov
cld
cmpsl
dec
sbb
stc
lret
scas
in
cmp
fnstsw
out
imul
cld
sahf
sbb
push
add
addr16
loope
add
and
inc
jae
jb
add
mov
fs
and
shrl
loop
xchg
cmpsl
arpl
out
fs
incl
daa
adc
cmc
push
pop
dec
mov
outsb
push
or
add
sub
insb
sahf
and
ss
adc
stos
loop
je
push
xchg
cmc
xchg
or
mov
add
sbb
shll
pop
lcall
mov
cmpsl
aaa
sbb
stc
mov
andl
pop
xorl
lds
pop
ja
out
mov
out
pushf
movsb
mov
and
cmpsl
pusha
jae
roll
sbb
ret
rorb
out
test
dec
mov
cltd
mov
int
xchg
shr
or
jle
rcl
into
mov
inc
mov
or
mov
popa
sbb
xchg
fs
or
js
fmuls
movb
imul
or
dec
jb
xchg
pop
sbb
xorl
and
loop
cmpsl
add
out
sbb
int
add
les
jmpw
push
sarb
jmp
ss
loop
xchg
jne
and
xchg
daa
cmpsl
pop
xor
sbb
andb
cmp
pop
adc
cmpl
xchg
fidivs
test
mov
lods
or
xor
push
sbbb
jno
ficoml
aam
das
fldz
sahf
ret
add
mov
add
xchg
nop
jmp
scas
xchg
mov
dec
std
leave
jg
mov
sbb
ret
ret
or
enter
out
test
fistpll
fnstcw
subb
inc
xchg
xchg
lahf
fistl
cli
fidivrs
out
ficoms
inc
rcrb
mov
jne
lock
sub
cs
pop
ljmp
pop
notb
movsl
stc
aas
mov
push
test
ss
call
xor
lret
inc
add
loopne
mov
or
ret
pushw
divl
add
xor
ds
popf
mov
mov
mov
push
push
adc
sub
inc
adc
pop
test
testl
pop
mov
xor
popa
mov
scas
add
sbb
jns
cs
mov
pop
and
mov
pop
mov
pop
dec
imul
cmpsb
data16
adc
mov
icebp
mov
fldenv
mov
inc
idivb
mov
pop
mov
sbb
fs
repnz
xor
out
cmp
lret
pop
lds
push
repz
pop
or
and
fwait
xlat
sub
cs
xor
movsb
xchg
cli
xor
jmp
push
mov
jl
imul
sahf
jg
and
fwait
rcr
dec
or
xor
mov
ss
ffree
jne
jno
std
leave
xchg
sub
xchg
xchg
popa
loope
push
call
or
xchg
add
mov
xchg
mov
sbb
stos
dec
push
test
loope
out
paddw
mov
lea
push
rcl
mov
xor
test
enter
dec
aad
xor
jmp
inc
idivb
shr
mov
clc
lahf
jle
add
xorl
ds
mov
imul
and
xor
mov
xor
cli
xor
test
dec
push
mov
mov
sahf
add
cmp
leave
dec
mov
call
sbb
mov
out
fiaddl
ret
fistps
push
pushf
stos
pushf
pop
push
mov
stos
push
add
repnz
push
mov
test
and
cmovl
shlb
call
cltd
pop
lea
ljmp
out
jecxz
sub
add
repz
xor
pop
cli
push
call
xchg
or
cld
xor
jge
or
and
shll
mov
nop
push
hlt
mov
jge
dec
fcomip
int3
xchg
push
dec
push
iret
inc
or
jg
inc
sbb
movsb
int3
int
inc
insb
mov
call
loopne
insb
pop
fistps
xor
mov
xor
clc
loopne
shr
dec
in
dec
sub
out
rorb
punpckldq
subl
ljmp
and
or
xor
add
cmc
shr
xchg
fdivr
cltd
aas
push
mov
add
xchg
movsl
scas
fsubr
aas
fdivs
push
push
inc
movsl
scas
arpl
xor
jl
mov
xor
sub
ljmp
ljmp
adc
rcrb
call
ljmp
inc
jns
and
push
leave
jmp
mov
sbb
icebp
jg
repnz
cld
in
mov
pop
fxch
pusha
xor
lret
adc
repnz
ret
shlb
pop
cmpsl
jmp
adc
ljmpw
repnz
dec
hlt
xor
mov
ja
mov
cmpsb
xchg
add
jge
je
rclb
sarb
inc
ss
jecxz
enter
adc
push
ss
pop
data16
mov
sub
sbb
ret
pop
cmp
loope
cmp
mov
jbe
push
enter
sub
adc
in
int3
lret
es
js
icebp
je
vphaddwd
xor
movsl
jno
dec
sbb
push
or
mov
xlat
inc
outsb
fldz
jmp
mov
mov
pop
inc
imul
adc
clc
mov
inc
or
js
xchg
cmp
les
sbb
fwait
jbe
out
sahf
cmc
out
cld
xor
mov
jp
jp
dec
cs
fnstcw
add
cmp
sub
ret
xchg
add
sbb
mov
mov
cmp
jp
xor
cmpsl
shlb
sahf
pop
inc
in
xorl
cli
enter
pop
xor
mov
fistpll
shlb
lock
gs
inc
out
xor
sarb
call
jb
lret
cltd
push
ror
scas
mov
aad
addr16
pop
fs
cli
std
aas
inc
xchg
xchg
std
jmp
xlat
repnz
sub
enter
pushf
imul
sahf
push
ljmp
xor
sbb
xor
popf
xor
mov
push
pushf
mov
sub
or
mov
sbb
push
mov
push
mov
xor
jnp
out
lods
inc
cmp
mov
add
sarl
subb
pop
pop
push
sbb
imul
fildll
pop
sub
test
sbb
aam
xchg
xchg
cmp
xor
in
lret
subl
clc
dec
nop
xchg
insb
cltd
daa
adc
push
clc
or
adc
imul
cmp
cmp
xchg
cmp
stc
jne
and
fwait
pop
or
inc
adc
daa
mov
shll
rcll
or
ret
scas
clc
sbb
sub
dec
jnp
cld
ss
fisttpl
orl
jno
mov
aam
into
dec
lods
repz
rclb
test
or
ds
loopne
les
inc
dec
movl
xchg
ds
cmp
xchg
loopne
sbb
add
xor
int3
scas
or
pop
popf
adc
cmpsl
sbb
into
jmp
xor
jno
pop
xchg
gs
xor
mov
push
cmpsb
in
imul
sbb
cmpsb
mov
daa
std
cmc
and
out
or
aad
jbe
test
jmp
jne
push
rorb
sub
add
xor
test
push
mov
repz
cmp
rcll
sbb
leave
dec
xor
sahf
xchg
push
into
cmp
hlt
test
test
les
cmp
imul
ljmp
cmp
mov
std
push
sbb
cmp
lds
repnz
sbb
dec
xor
movsb
mov
push
negl
mov
ds
hlt
jns
mov
es
je
not
loop
cld
dec
sbbl
stos
pop
jg
pop
cltd
inc
add
jecxz
rorb
or
xor
add
jo
mov
inc
sub
mov
loopne
repz
add
inc
xor
mov
hlt
ss
insb
inc
cmp
cmp
gs
in
pushl
mov
pop
das
movsl
or
xchg
in
aad
imul
repnz
mov
and
das
and
loopne
inc
lods
cltd
pop
mov
mov
setb
mov
mov
jae
outsb
inc
loopne
inc
andb
cs
push
movsb
and
push
enter
stc
mov
pusha
push
cld
scas
imul
push
pop
ljmp
adc
jns
addr16
lret
push
dec
mov
cmp
mov
inc
fs
mov
or
xchg
sbb
imul
outsb
out
cli
jb
or
sbbl
out
mov
mov
xchg
jecxz
rorl
lcall
ds
lock
add
pop
adcl
ficoms
mov
adc
lahf
movsb
icebp
movl
cmpsl
xchg
jb
mov
sub
jle
inc
xchg
cmp
cmp
mov
notl
test
or
xchg
aam
imul
jo
gs
ja
mov
xchg
testl
cwtl
sub
xchg
push
es
pop
test
fcompl
mov
rol
adc
fisttpl
xor
rcll
icebp
push
lock
pop
daa
popf
inc
les
sbb
inc
ret
sbb
mov
sub
mov
or
testl
jns
lods
mov
fildl
fwait
xor
push
stc
sbb
iret
mov
in
jp
bound
mov
enter
pop
mov
sub
or
jle
mov
jae
imul
mov
jo
cltd
cmc
xchg
mov
xchg
insl
inc
cmpsl
mov
xor
xchg
pop
das
lcall
inc
andl
inc
pop
inc
fstpt
arpl
int3
and
and
pminub
scas
bound
inc
push
cltd
cmpsb
pop
rorb
or
sub
fnstsw
or
pop
mov
data16
repnz
cmpsb
out
jecxz
mov
add
inc
mov
pop
jl
cld
mov
test
test
adcb
iret
xchg
push
test
cmp
mov
test
test
mov
pop
mov
lahf
scas
pushf
inc
xor
xor
inc
int
xchg
adc
nop
enter
in
push
and
repz
xchg
jne
and
data16
xlat
xchg
mov
add
xchg
jp
mov
ret
mov
sub
nop
addr16
xchg
sbb
js
outsb
inc
mov
das
cmp
mov
cmp
aaa
jb
jb
fdivrl
out
mov
inc
jcxz
jno
test
xchg
mov
mov
jno
fimuls
mov
nop
cmc
add
adc
loop
popf
adc
stc
cltd
or
bound
sub
jge
bound
mov
lods
cld
sub
push
push
pop
call
push
xlat
shll
sub
xor
jp
dec
mov
sbb
sti
paddd
rcl
sub
sbb
push
ljmp
mov
mov
push
cmp
xchg
xchg
adc
aad
jb
std
pop
adc
cmpsl
addr16
jno
out
inc
lret
dec
stos
and
sub
into
stos
xchg
pop
fwait
jl
leave
lea
pop
and
mov
ljmp
mul
sbb
mov
fdivrs
call
in
pop
xchg
aas
mull
push
ret
sbb
rol
add
and
xor
fistpll
leave
add
jae
in
add
cmpsl
mov
out
pop
mov
loopne
add
jp
sub
idivb
sub
and
mov
jns
and
daa
loope
les
in
outsl
push
fnsave
push
add
addr16
std
lret
xor
sbb
xor
pop
cmp
inc
data16
stc
rcrl
lcall
pop
jmp
stc
fidivrs
loop
loop
cli
imul
imul
mov
or
xchg
xchg
push
fwait
mov
in
dec
ret
or
out
sbb
jnp
shlb
and
adc
xlat
push
or
les
loope
into
adc
arpl
inc
mov
push
fwait
jo
out
in
std
js
jo
andb
push
or
out
aas
lds
jle
sbb
std
sub
add
pop
imul
std
mov
addb
daa
pushf
and
jae
and
xchg
int3
xchg
or
add
sub
add
inc
add
lahf
push
test
fstl
cmp
pop
cltd
jmp
cmp
and
jl
and
popa
jb
sarb
ffree
sub
xchg
movsb
push
xor
adc
in
push
pusha
mov
pop
push
mov
jns
sub
xlat
je
jnp
cmp
popa
jnp
mov
mov
push
jp
mov
outsb
lret
adc
lods
fsubrl
out
adc
test
int
data16
ficomps
daa
std
rcrb
ja
push
movsl
jle
andl
lret
scas
ds
shrb
test
push
je
movsl
inc
out
sub
jbe
mov
sbb
lock
sahf
movsl
filds
daa
xlat
push
loope
inc
or
push
std
lds
xor
dec
outsb
xorl
pop
mov
cwtl
stos
push
stos
jns
out
in
adc
les
or
add
and
and
mov
sarb
insb
test
insl
or
leave
fs
xor
dec
jle
test
inc
fimuls
mov
scas
mov
push
add
mov
mov
test
aas
jg
loopne
or
dec
jb
loop
gs
out
call
outsl
pop
xor
adc
stc
fwait
inc
test
dec
jno
mov
mov
mov
clc
pop
fsubl
cmp
hlt
dec
and
lea
jne
shll
adc
cli
sbb
insb
arpl
fdivrp
sub
dec
mov
jg
mov
loopne
lock
sub
or
sbb
inc
shl
call
cs
xor
xchg
cmp
fnstcw
and
sub
jle
cmpsl
popf
jg
push
jnp
cs
ja
popa
jne
outsb
loop
adc
dec
cs
xor
sahf
fsubl
dec
mov
push
or
mov
jg
inc
jecxz
out
pop
mov
fdivrp
inc
sbb
leave
cmp
mov
sub
jge
hlt
and
fwait
cmp
adc
not
ds
pop
adc
jl
aam
xchg
xchg
mov
and
lods
mov
jne
fxam
mov
int3
imul
cwtl
loope
movsb
push
imul
outsb
lods
inc
jb
sbb
pop
adc
cmova
add
mov
xchg
pop
ss
ss
dec
jl
sub
mov
je
int3
lds
inc
fidivrs
sbb
pop
stos
mov
add
call
clc
sarl
xor
outsb
jbe
pop
test
inc
pop
into
subb
icebp
outsb
pop
scas
or
and
bnd
aam
dec
stos
sbb
out
mov
iret
inc
xchg
push
push
mov
inc
ss
mov
sub
shrl
xchg
test
push
bnd
or
jecxz
out
push
sbb
sti
ret
cmpsl
push
fsubs
cli
push
insb
xchg
pop
fwait
inc
xchg
das
data16
add
adc
scas
inc
mov
cmp
and
mov
fcomp
les
pop
jno
sahf
frstor
dec
iret
sti
sti
fists
mov
aas
jg
sbb
dec
shr
sub
popf
adc
lahf
les
aas
jmp
adc
xor
mov
mov
loop
or
pop
dec
fs
popa
popf
or
mov
out
into
ficomps
fildll
arpl
jns
xchg
ljmp
out
sub
dec
fucom
out
and
adc
add
addr16
sub
pushl
fwait
mov
rcl
push
pop
mov
mov
pop
out
fnstcw
lods
xlat
sar
insl
cmp
nop
std
gs
fimull
ret
ret
movsl
inc
ret
ds
sbb
cmpsb
mov
test
fwait
es
adc
mov
int3
fimuls
aad
out
pop
cmp
jmp
inc
inc
jge
or
js
movsb
test
out
out
add
adc
sub
aad
mov
push
jge
sub
or
xor
jne
add
jg
addb
xchg
pushf
iret
popa
ds
push
inc
cmp
and
arpl
arpl
or
leave
out
xor
je
or
fisubl
das
xchg
enter
leave
inc
pusha
test
rclb
sub
ds
stos
inc
leave
sbb
add
push
fldcw
ljmp
inc
sbb
pop
es
mov
popa
xor
dec
mov
mov
jae
add
aaa
sahf
iret
stc
push
popa
call
movsl
mov
cmp
lahf
inc
jnp
pusha
or
jg
mov
jnp
imul
enter
int
inc
dec
lahf
adc
xchg
shlb
aas
push
test
sar
xchg
idiv
fstpl
cmp
popa
and
inc
dec
insb
xchg
dec
mov
xor
mov
aaa
mov
notl
cmpsb
enter
add
mov
daa
inc
js
jae
int
xor
enter
emms
cmp
repnz
dec
or
shrl
fwait
adc
xchg
inc
adcl
mov
rcrl
mov
insb
and
fistl
sub
lds
push
adc
andl
jo
mov
test
inc
cmp
lock
ret
and
andl
inc
xor
pop
ret
mov
lcall
cmp
lret
mov
ds
xchg
dec
aad
push
or
rcr
in
mov
xor
gs
lret
and
popa
scas
or
pop
xchg
cmpsb
mov
jo
sub
or
insl
repnz
aad
jg
int3
rorl
pop
xchg
lock
fidivrs
addb
enter
jmp
mov
mov
dec
ljmp
loope
mov
stc
xchg
shl
mov
loopne
xchg
jo
inc
inc
or
fldt
or
xor
imul
sub
fwait
icebp
lods
push
shll
popf
xorb
in
outsl
dec
inc
and
xor
fists
mov
inc
repnz
popf
int3
mov
jo
outsb
mov
leave
popa
mov
push
push
repnz
add
cmp
scas
flds
mov
jmp
adc
lods
xchg
xchg
and
mov
pop
stc
leave
cmp
lahf
push
xchg
idivb
idivb
dec
mov
sub
ret
stos
daa
insb
aad
xor
push
fistpll
mov
fnstcw
test
and
fstpt
inc
mov
loope
push
push
cwtl
outsb
cmpsb
sti
mov
adc
into
int
xchg
push
mov
push
xor
lds
xchg
int3
mov
outsb
xlat
push
add
push
jne
sub
out
push
into
add
pop
in
dec
movntq
mov
fistpll
jg
adc
ss
les
bound
inc
and
pop
inc
jg
or
pop
push
fs
aaa
imul
fsubrs
cltd
jecxz
inc
jno
je
outsb
dec
pop
lret
loop
mov
push
in
jge
xchg
or
dec
int3
imul
iret
mov
ds
insb
adc
pop
mov
mov
sbb
pop
xchg
mov
sbb
pop
push
pop
int3
ret
adc
sub
mov
sti
sbb
pop
mov
mov
cmpsb
std
mov
mov
push
xchg
lea
test
mov
into
jp
jmp
movsb
xorl
ds
mov
xor
movl
ss
repnz
fdivrl
xor
aaa
pop
pop
jo
andl
lock
scas
lcall
mov
and
add
mov
adc
iret
rcrl
ret
cmp
push
push
lret
pop
xor
call
lahf
mov
jmp
inc
mov
hlt
in
sbb
outsl
cli
mov
cmp
js
addl
cmpb
filds
lods
xchg
fprem
add
loopne
lahf
xor
imul
gs
cmp
dec
sub
pop
fiaddl
mov
aad
mov
jae
sub
and
out
out
sub
imul
imul
shll
push
mov
out
shlb
adc
xorb
icebp
adc
pop
inc
inc
jmp
rorl
xlat
sahf
out
in
int
clc
ds
mov
shrb
leave
jno
sub
das
push
xor
push
out
lret
or
xor
jmp
shlb
fldcw
push
dec
popa
sbb
add
cwtl
push
movb
dec
cs
adc
cmp
mov
addr16
mov
aaa
inc
push
jb
dec
fisubrs
xchg
sarb
mov
orb
nop
scas
cs
repz
in
loopne
adc
inc
stos
call
mov
xchg
lods
cmp
imul
pop
gs
ljmp
or
dec
notl
add
sub
inc
mov
push
cmp
jg
shrl
les
in
cmp
inc
mov
sub
aam
adc
ret
xchg
rorb
sarb
movsb
fmull
push
divl
pmaxsw
insl
movsb
in
stc
inc
inc
mov
cltd
and
mov
inc
mov
mov
mov
push
xor
loop
lods
sbb
ljmp
imul
es
mov
and
mov
addl
fwait
jmp
dec
xor
xchg
sbb
lret
scas
loop
pop
inc
and
xor
inc
outsl
les
mov
fldenv
mov
push
test
sahf
mov
mov
pop
adc
stc
push
decb
aam
jns
stos
nop
cmp
imulb
cmp
jecxz
fs
pop
push
outsl
jge
dec
pop
jge
jo
pusha
out
xor
ljmp
inc
push
xor
lcall
jle
clc
inc
lock
cmp
mov
repnz
scas
dec
cltd
sub
xor
inc
pop
aam
jge
outsl
dec
and
js
cmp
ds
popf
cmpsl
mov
mov
int3
dec
jnp
arpl
mov
pop
sub
and
cld
std
andb
lret
jl
jns
in
scas
inc
jnp
lock
add
xchg
add
push
test
mov
popf
xchg
rol
aas
loope
test
mov
and
push
out
idivb
leave
xchg
xlat
push
adc
mov
or
adc
jp
daa
shl
iret
push
xchg
inc
shlb
or
fcoms
fbstp
scas
mov
std
mov
cmp
leave
out
gs
testb
push
ljmp
or
leave
ja
sbb
pop
test
dec
repnz
cld
rclb
jecxz
dec
call
mov
inc
sbb
into
pusha
lock
sub
or
scas
adc
in
mov
adc
aas
aas
ss
jge
lret
jp
xlat
loopew
out
adc
ret
push
out
pushf
or
testb
adc
mov
hlt
add
fcomip
repnz
xchg
push
pushf
pop
inc
sti
jo
addr16
cli
inc
shlb
dec
addr16
test
rolb
outsl
daa
add
dec
insb
mov
cmc
int3
mov
or
call
push
and
das
xchg
jecxz
insb
clc
in
ss
fucom
sub
lahf
push
dec
jle
add
add
scas
gs
jl
iret
sub
scas
rolb
sub
mov
mov
add
fbstp
dec
lret
les
add
xchg
inc
icebp
add
out
dec
out
lahf
lret
push
push
mov
jae
lret
ret
add
jmp
insl
fwait
dec
pop
int3
adcb
xor
sti
les
icebp
enter
push
inc
xchg
into
dec
mov
mov
test
xor
ja
xchg
mov
and
lea
xchg
negb
mov
add
fwait
pushf
add
jecxz
push
push
fstps
scas
fwait
insb
movsl
pop
stc
insl
test
pop
mov
je,pt
iret
popf
popa
xchg
jb
dec
ss
sub
lcall
adc
outsl
std
jns
out
cmp
daa
jno
jns
jp
cwtl
fbld
lods
xor
push
sub
aam
mov
mov
cs
lds
imul
sbb
out
mov
fsubs
shlb
test
jne
aam
mov
into
addr16
jbe
ds
xor
adc
sub
mov
ss
mov
and
sti
mov
xor
dec
mov
scas
rdmsr
inc
sbb
imul
sahf
arpl
lret
push
stos
sar
in
ret
xor
lret
add
push
bound
xor
lods
dec
gs
xlat
xchg
add
jl
in
outsl
lret
jb
cld
gs
mov
adc
test
or
xor
adc
jp
nop
lret
popa
popf
mov
dec
push
xlat
dec
hlt
sub
dec
push
lcall
ljmpw
push
loop
pop
push
adc
dec
push
push
jmp
popf
pop
sbb
in
jne
rcrb
mov
jmp
dec
dec
aam
push
mov
test
roll
mov
repnz
mov
and
fstpl
shl
jmp
mov
std
and
xchg
arpl
xchg
mov
xorl
mov
fadds
sahf
call
shlb
pop
ficompl
pop
sub
in
popa
aaa
sbb
dec
les
push
addr16
inc
cwtl
adc
dec
scas
popl
inc
push
sbb
imul
push
or
call
insb
push
add
cs
push
mov
cltd
sar
or
hlt
xchg
or
cli
into
lahf
xchg
lods
pop
lret
gs
adc
mov
mov
or
repnz
mov
dec
test
push
xor
call
data16
push
mov
mov
push
loop
sub
sub
xchg
jmp
orb
outsl
cs
pushf
repz
jo
fmulp
pop
hlt
imul
popw
fldcw
fcoml
jne
push
pop
add
push
and
xor
adc
mov
fcmove
jb
cmp
xchg
adc
aaa
push
fildl
dec
xor
andb
lret
mov
test
jp
dec
push
push
je
adc
and
iret
cltd
cmc
sbb
jl
jns
das
push
pop
fdivrl
stc
loope
adc
pop
mov
hlt
bound
mov
aaa
pop
rcll
loopne
sahf
and
gs
pop
je
ds
rclb
pop
xor
sub
xchg
sbb
push
ljmp
xor
dec
loope
out
es
push
add
sub
icebp
and
xchg
mov
push
sbb
sahf
push
or
cs
das
aaa
jp
add
mov
js
sub
pop
push
jle
or
sbb
testl
pop
hlt
cmp
adc
cld
push
repnz
test
xchg
sarb
aad
sbb
cmp
pop
rcrl
repnz
fadds
stc
mov
pop
cmpsl
js
and
dec
int3
fwait
and
push
pop
in
lods
pop
pop
mov
cmp
jl
fdivl
ret
push
hlt
sbb
or
loope
inc
mov
push
pop
sbb
aam
ret
dec
jle
stc
shrl
mov
mov
push
adc
pop
cmpsl
jmp
xlat
push
mov
test
xlat
mov
out
dec
rcrl
pop
cmp
mov
cmpl
out
pushf
push
xchg
imul
int
sbb
jg
stos
aam
data16
jle
stc
xchg
push
daa
mov
dec
mov
push
jne
mov
imul
orb
iret
xchg
pop
in
sbb
outsb
xchg
add
test
cli
leave
rcrb
int
fistpl
xor
cmp
dec
in
push
sbb
leave
stos
jbe
stos
dec
mov
jecxz
mov
dec
sub
addr16
inc
inc
fbstp
roll
movsb
hlt
add
pop
and
outsb
inc
cld
and
push
enter
push
dec
mov
movsb
mov
pop
testl
cwtl
andl
movsb
mov
orb
ror
imul
aas
ss
sahf
add
test
loopne
outsl
aas
sub
out
repnz
jle
pop
inc
xchg
insb
pop
jb
inc
and
addr16
int3
dec
std
adc
outsl
cwtl
sbb
mov
ss
pop
loope
xchg
cwtl
xlat
out
cli
dec
cltd
mov
xor
notb
jne
mov
and
jecxz
lahf
xchg
jge
nop
lret
clc
add
std
inc
and
ret
dec
lods
rcrb
xor
jge
pop
cli
mov
scas
repz
testb
mov
repz
cmpsb
pop
push
outsl
repnz
into
xor
xor
je
stos
hlt
out
cltd
lods
cli
adc
adc
pop
sbb
ljmp
mov
jno
test
adc
push
fistpll
in
push
cmc
cmp
dec
mov
or
bound
push
loopne
dec
xlat
push
jle
popf
fsubrl
js
lret
sub
je
nop
xchg
loope
push
cmc
sub
sbb
dec
xor
add
inc
ja
push
nop
xlat
mov
mov
adc
mov
sub
xchg
xchg
cmp
inc
in
lods
mov
xchg
jmp
mov
inc
jne
cmp
or
in
call
cmp
cmp
push
push
nop
fldenv
jmp
or
pop
int
adc
call
dec
jmp
cmp
test
jae
mov
cmp
test
adc
ss
or
mov
inc
pop
adc
jb
or
sahf
in
xchg
clc
jae
test
push
into
test
cltd
jae
xchg
lock
adcb
ss
loop
sbb
out
loope
bound
popl
mov
cmpsl
mov
rcrb
mov
mov
xchg
in
jne
imul
jns
sti
cmc
std
dec
and
mov
push
lcall
xchg
ds
mov
imul
fnstcw
loop
add
out
xor
rcrl
loopne
nop
sbb
cld
stos
jbe
pop
add
stos
push
mov
push
imul
test
dec
push
cltd
ds
push
mov
mov
mov
arpl
inc
fs
ds
xchg
movsl
popf
dec
ficoms
or
push
add
lcall
inc
dec
xchg
jmp
sbb
sarb
adc
je
push
insl
push
pop
in
popa
mov
ds
xchg
popa
sahf
sbb
subl
jp
fdivs
sbb
popa
sbb
repz
mov
sub
inc
add
mov
je
adc
arpl
out
push
es
addr16
int3
sbb
shr
aad
cld
push
cld
add
in
push
movsl
push
mov
outsb
pop
sbb
lea
or
push
jne
xchg
arpl
or
mov
loop
and
lret
insl
mov
xlat
fildll
popf
add
popl
repz
loopne
repz
xchg
jbe
sbb
popf
in
sub
stos
sarb
sbb
inc
in
dec
push
shl
imul
jecxz
xor
scas
push
sub
or
outsb
mov
xchg
test
xor
lock
cmp
aas
dec
xor
pop
cli
pop
inc
xor
cmp
scas
pop
xchg
pop
rcrl
pop
fnsave
xlat
add
movq
lcall
rclb
sub
adc
push
out
jl
xor
imul
mov
cwtl
fdivl
scas
mov
push
gs
mov
in
add
je
fxam
and
xchg
in
les
loopne
sub
test
test
je
cli
jle
pop
and
in
xchg
movsb
pop
aas
repz
in
inc
insl
test
int
dec
xor
mov
clc
fwait
push
pop
es
in
mov
cmpsb
in
xchg
push
mov
and
lods
dec
enter
sub
xchg
repz
in
jne
lea
or
ljmp
test
cltd
xchg
rcl
test
adc
in
in
cmp
roll
dec
shrb
mov
and
add
xor
out
xorl
cmp
adc
push
adc
outsl
fcom
rorb
mov
clc
sbb
add
sub
jp
jg
inc
adc
cltd
mov
jns
mov
inc
sbb
in
mov
inc
push
cmpsl
scas
and
nop
sbb
mov
add
int
inc
xchg
js
je
mov
jl
call
jbe
xchg
fdivs
lods
imul
xchg
out
enter
int3
push
movsb
pop
loope,pn
mov
loop
mulb
push
and
outsb
cltd
pusha
dec
mov
iret
outsb
adc
inc
mov
mov
mov
popa
cmp
int3
inc
fbld
xchg
add
dec
mov
das
sahf
loop
cmp
jno
scas
lods
mov
cmp
out
sub
pushf
insb
pop
dec
xor
sub
adc
and
pop
jl
mov
fisubrs
xchg
sbb
into
sbb
movsb
iret
xor
mov
stos
xchg
lcall
mov
scas
js
call
out
repnz
sti
cmpsl
jae
dec
push
insb
ret
pop
cmp
dec
push
mov
adc
aaa
sbb
cld
stos
and
scas
jl
cmc
int
sbb
sbb
stos
das
movsl
add
imul
stos
pop
addr16
pop
mov
test
pop
mov
lcall
bnd
jmp
and
repnz
push
adc
ja
jle
iret
inc
ja
jge
xor
cmp
xchg
and
jb
js
push
pushf
fcoms
aaa
fldenv
cmp
mov
fstpt
inc
sub
xor
aas
xlat
pop
mov
sbb
pusha
insb
das
movsb
inc
cmp
or
jl
jb
inc
mov
mov
jno
ljmp
sub
loop
loop
cld
and
xor
mov
add
addr16
pop
mov
add
pop
stos
push
jno
nop
mov
or
pop
in
mov
adc
and
fcom
add
sti
call
xchg
insl
inc
mov
add
pop
push
mov
stc
sbb
jae
or
cltd
xor
mov
outsl
adc
push
or
sarb
pop
js
lods
outsb
push
pop
fdivrp
adc
arpl
mov
repz
adc
mov
inc
xorb
cld
test
and
call
mov
pop
loopne
cmpsl
xchg
jnp
jmp
jae
imul
cltd
gs
stos
ficompl
sub
addr16
test
push
jb
adcl
daa
push
mov
in
repnz
mov
inc
ja
and
jp
mov
insl
int3
mov
js
lret
fs
sub
and
push
mov
pushf
jl
lahf
push
xor
push
or
jne
out
jp
xchg
push
pop
sbb
jb
sub
pop
fdivr
fnstcw
popa
sub
loop
mov
fwait
jns
ljmp
nop
test
pushl
loop
rorl
xor
mov
pop
dec
cmpsl
cld
hlt
cmpl
sahf
fildl
test
mov
add
pop
mov
cltd
jno
call
scas
dec
test
movsb
bnd
jae
cmp
enter
adc
add
mov
ret
das
and
pop
push
xchg
clc
iret
mov
mov
add
nop
jecxz
leave
sbb
scas
test
repz
bound
xchg
fnstsw
sub
repnz
inc
mov
aaa
sub
dec
jp
push
lcall
cli
xor
mov
cltd
mov
or
push
aas
sbb
aaa
push
jecxz
loopne
jp
daa
fwait
ljmp
pop
cmovne
mov
mov
cmp
sti
and
mov
inc
push
add
lret
ret
mov
or
adc
test
mov
mov
cmp
mov
mov
pop
sbb
lock
cs
mov
ss
aad
je
in
fwait
sti
jns
sub
pop
xor
push
sbb
mov
and
dec
cwtl
sub
stos
clc
shl
sub
je
pop
icebp
push
sbbb
lcall
jne
addr16
pushf
icebp
sub
push
jns
jl
scas
adc
lods
push
mov
jmp
add
popf
mov
movsb
cmp
push
popf
or
in
repz
enter
pop
repz
fwait
mov
cmp
je
and
dec
je
lcall
popf
mov
test
aad
xchg
cmp
mov
out
xchg
or
jno
or
repz
dec
jo
and
sbb
or
cmp
mov
sbb
enter
xor
je
andl
pushf
cmc
sbb
test
mov
sub
arpl
mov
movq
inc
push
out
jb
popa
int3
sti
mov
mov
dec
test
sbb
cmp
mov
ret
add
jnp
cmp
dec
cmp
fbld
ss
xchg
adc
faddp
bound
mov
lahf
adcb
aas
scas
mov
shl
push
mov
push
sahf
push
xlat
jne
mov
lods
int3
nop
dec
arpl
into
inc
cld
adc
fcmove
push
jmp
pop
sti
or
pop
xchg
sti
sub
xchg
mov
int3
mov
push
add
pop
lret
test
jb
mov
call
and
fwait
pop
jp
inc
nop
test
and
aas
jbe
repnz
mov
negb
cmp
mov
jae
aaa
adcb
adc
dec
addr16
rolb
stc
sub
test
sbb
bswap
and
mov
mov
push
leave
add
out
pop
stc
test
jmp
rclb
data16
inc
cmpsb
mov
mov
pop
dec
dec
xor
jae
fwait
xchg
cld
pop
push
or
mov
pop
out
mov
repnz
data16
aas
pop
or
mov
cmp
stc
and
and
xchg
pushf
in
out
mov
push
mov
cs
adc
xor
hlt
dec
push
pop
shrb
aam
xor
dec
roll
out
xlat
popa
addl
mov
test
add
test
aas
mov
pop
arpl
or
sub
pusha
sub
arpl
inc
mov
adc
out
fwait
ljmp
add
lods
out
xchg
or
mov
subl
ret
jecxz
outsb
mov
adc
out
add
imul
dec
add
test
inc
add
jbe
mov
fcoms
xor
mov
push
idivl
rol
cmp
data16
lds
adc
cmp
pop
push
sbb
jnp
outsb
xchg
ret
cmp
pushf
and
and
xchg
addr16
pop
ja
les
loopne
adc
lods
lahf
add
jecxz
fmull
insl
or
ret
dec
or
cmp
movsb
push
movsb
mov
inc
mov
ja
js
outsb
cmp
xor
jle
ret
xor
nop
pop
pop
cs
pop
clc
pop
in
sub
loop
mov
insb
xor
rcrb
fcomip
pusha
ret
mov
mov
and
jl
mov
cwtl
mov
test
jp
das
xchg
push
pop
gs
push
push
mov
cmc
inc
mov
mov
mov
add
pusha
or
ret
jp
in
xchg
pusha
xchg
int3
mov
clc
sbb
addl
nop
insl
inc
gs
rolb
mov
dec
adc
and
popf
xchg
jg
xor
adc
push
pop
stc
cmpsb
shlb
mov
jns
mov
repnz
test
cmp
aad
jo
adc
daa
cli
and
std
sub
mov
inc
lret
sbb
imul
mov
sbb
test
jno
mov
nop
or
mov
mov
or
sbbb
outsb
push
jg
jne
push
and
push
add
repnz
mov
pop
cwtl
ds
insb
mov
incb
xchg
push
or
inc
aaa
loop
shl
sub
push
cmpl
pop
dec
arpl
jg
scas
clc
pushf
in
test
je
adc
pusha
ds
xor
movsl
adc
repnz
scas
scas
clc
in
movsb
aam
inc
iret
sub
pop
pop
out
fld
cltd
xchg
hlt
leave
cld
fists
jmp
sar
push
mov
or
add
fldl
call
enter
lea
dec
and
push
dec
lret
enter
add
shlb
lock
das
insl
mov
mov
les
push
mov
xchg
sbb
mov
mov
nop
inc
arpl
inc
movsl
aas
lea
pop
or
sbb
notl
aam
xchg
mov
inc
into
inc
or
in
mov
mov
jle
jne
loope
pop
adcb
xlat
xchg
push
add
inc
jbe
mov
dec
in
lock
pop
adc
xchg
sbb
xor
or
cmp
ss
fldt
cmc
mov
imul
aaa
mov
or
xor
bnd
xchg
sbb
dec
xlat
mov
xchg
fwait
lods
in
jl
xor
fsts
scas
push
shrb
sbb
mov
cli
imul
adc
mov
negl
not
xchg
insb
call
jecxz
sub
lods
mov
and
pop
lret
test
push
jb
lret
es
inc
jo
sahf
adc
cld
bound
xchg
stc
inc
stos
mov
xor
mov
xchg
loope
lcall
aad
add
ljmp
dec
hlt
lds
cwtl
mov
jno
adc
clc
lea
dec
and
aad
push
sub
test
xor
xchg
sub
out
lret
or
fisubl
adc
test
ret
repz
clc
pop
jl
push
ja
and
test
add
xor
jge
pusha
xchg
sub
jbe
sub
sti
outsl
in
lret
aam
rolb
or
dec
imul
jle
cmp
sub
push
sub
and
pop
jne
sbb
sub
or
and
insl
adc
icebp
pop
xor
out
xor
inc
ret
pop
into
mov
femms
loope
rorl
lock
pushf
cmpsl
hlt
lcall
outsl
adc
hlt
inc
dec
repz
sub
push
adc
lods
lret
ret
adc
jbe
push
arpl
sub
jo
loop
pop
push
leave
sub
mov
jle
imul
ret
push
lods
cltd
mov
not
js
jnp
and
xchg
xlat
mov
xor
cmp
loopne
fcmovnu
lahf
loopne
hlt
mov
mov
jo
adc
nop
pop
repz
arpl
adc
and
aaa
test
fidivrs
jae
es
int
mov
add
in
imul
push
add
pop
pop
inc
test
dec
leave
iret
sbb
pop
inc
lret
fldcw
arpl
push
int3
mov
cmp
xchg
mov
add
cli
sbb
pop
and
sar
or
call
enter
sbb
mov
mov
das
sbb
cmpsb
mov
lock
mov
clc
xchg
das
loopne
push
mov
cmc
pop
shlb
cmp
ffreep
ds
mov
xor
mov
inc
mov
sub
lea
negl
inc
in
fildl
aaa
lds
xor
das
pop
out
mov
mov
or
or
push
bound
cmpsl
add
or
les
inc
jmp
inc
dec
jo
adc
dec
repnz
shll
inc
ljmp
sub
test
mov
mov
addr16
cmpb
adc
dec
inc
sub
int3
repz
xchg
icebp
mov
fidivrl
test
jge
pop
mov
cmpsb
pop
popa
scas
push
gs
insl
xor
popf
gs
sti
dec
cmc
je
xchg
mov
sarl
and
popf
enter
lock
mov
lret
jp
pushf
dec
xor
mov
dec
jg
mulb
pop
sub
mov
out
dec
lret
test
add
cmp
lods
filds
aad
mov
inc
sub
rcrl
movb
fistl
icebp
and
js,pn
jno
pushf
fsubs
mov
jmp
pop
clc
shlb
and
or
imul
jmp
mov
cmp
jo
loope
pop
mov
mov
xchg
dec
gs
test
jg
shll
xchg
xor
mov
dec
mov
xor
shrl
ja
xchg
shr
inc
jl
sub
mov
test
or
pop
mov
cmp
iret
pop
test
sub
nop
jb
in
inc
mov
stos
dec
nop
xchg
into
out
lds
aaa
push
repz
pushl
xchg
push
xlat
push
and
add
rorb
xor
repz
mov
inc
jne
rolb
jmp
jno
lods
lret
bound
inc
mov
sahf
arpl
jno
pop
repnz
aam
ret
push
add
shll
push
aaa
outsl
mov
mov
jecxz
push
cmp
sbb
add
std
sub
jbe
or
push
sub
test
lret
adc
xor
insb
or
cltd
cli
push
faddl
je
jae
sub
xchg
push
stos
ljmp
cmc
xchg
adc
pushf
repnz
fstl
mov
in
adc
subb
pop
pop
int
inc
aas
bound
test
and
sbb
ret
imul
lods
outsl
mov
leave
ja
rcr
cmp
movl
mov
aad
xchg
mov
addr16
sbb
sub
out
mov
mov
jge
xor
sub
dec
and
in
add
inc
pop
cmp
push
shlb
cmp
movsl
mov
push
xor
xor
ds
inc
mov
add
cmp
mov
fisttpll
cmpsl
or
aad
incb
enter
stos
lock
mov
adc
je
into
les
leave
mul
addr16
out
sub
jecxz
movsb
sub
and
arpl
jecxz
push
adcl
pop
jecxz
inc
aaa
aaa
rcl
test
fbstp
and
sbb
mov
push
shl
pop
xor
mov
call
pop
hlt
aad
dec
lds
push
imul
int
ds
push
push
iret
fucomi
mov
push
jl
aaa
xchg
mov
outsb
loopne
nop
mov
in
call
add
add
add
sti
and
lock
mov
int
js
adc
scas
xchg
mov
pop
mov
int3
shr
ds
push
leave
lock
jns
jp
or
dec
mov
jl
std
mov
incb
pop
mov
jnp
mov
lods
jle
dec
mov
dec
sti
jg
add
rcrl
les
cmp
das
lea
push
cmp
sub
movsb
fimull
clc
xchg
sub
rorb
and
mov
into
stos
pushf
ret
jns
cli
push
int
dec
and
pop
testb
lret
popf
fstl
ud0
mov
jne
xchg
aad
cmpsb
jmp
pop
xchg
fwait
repnz
popa
cs
enter
xor
xchg
push
mov
aas
mov
mov
and
mov
mov
stos
cs
cmp
fldl
xor
pop
js
dec
inc
xor
inc
mov
fldl
loopne
stos
cmc
pop
xor
push
aas
arpl
mov
mov
pop
pop
mov
mov
stc
ret
ret
pop
stos
into
jne
xor
jae
xor
push
adc
enter
push
pop
xor
popl
mov
test
movsl
dec
sub
sar
or
imul
jle
mov
iret
mov
mov
dec
push
in
jne
test
or
xchg
jmp
xchg
xor
dec
push
xchg
in
xchg
or
iret
xlat
std
add
cmp
js
icebp
icebp
inc
ds
popf
mov
sahf
dec
shlb
repz
les
sub
inc
fldenv
or
out
cmp
jae
pop
mov
add
addr16
pop
pop
sbb
stos
pop
mov
lods
cmpsb
xchg
imul
sbb
sbb
fwait
das
mov
ljmp
xchg
jne
insl
stc
or
sti
cwtl
jge
jge
push
enter
or
shrl
xlat
inc
sbb
pushf
add
cmp
xor
jg
ja
jno
in
je
push
jecxz
scas
inc
popl
push
add
fnstcw
repnz
push
iret
dec
adc
push
ret
cmp
daa
loop
xchg
add
fnop
xchg
and
cwtl
adc
jno
xor
xlat
and
add
and
ss
xchg
fdivs
pushf
outsb
or
dec
imul
mov
dec
cmp
mov
lcall
and
test
add
stos
loope
dec
insl
xchg
sub
clc
xor
dec
or
rol
fs
adc
sub
scas
cmp
sub
cmp
and
sar
fs
mov
or
cmpsb
loopne
mov
into
mov
inc
dec
add
inc
xor
fisubrl
cmp
jb
fcomi
dec
ja
jmp
xor
mov
jmp
jg
jmp
imul
imul
jge
aaa
push
bound
cmp
mov
push
and
add
fwait
push
aad
lock
jns
lock
adc
push
sbb
imul
sbb
add
or
addr16
or
insl
addr16
mov
sarl
mov
jl
mov
cwtl
cwtl
gs
xor
mov
femms
inc
sub
imull
push
jbe
jo
add
shrl
sub
mov
out
dec
pop
jge
cmpsl
push
and
mov
fstl
cli
dec
nop
pop
inc
dec
pop
adc
inc
xor
xchg
mov
cmp
in
jecxz
shr
jp
push
ret
pop
push
inc
cmp
jo
out
add
rcrb
cmp
jbe
adc
lret
aam
or
je
or
jnp
add
push
pop
subl
lahf
es
cmp
dec
test
stc
leave
dec
loope
push
mov
lret
mov
cwtl
jmp
xchg
lods
add
sti
mov
jge
fucomip
sarl
scas
arpl
dec
iret
sti
out
pusha
lods
adc
ds
movsl
xchg
push
inc
cwtl
push
cmp
cmc
popf
fwait
pop
or
sub
das
mov
lret
lock
rorb
push
xor
jg
lods
lret
inc
aam
sbb
xor
into
call
imul
jmp
sbb
pop
daa
push
fcos
xor
aam
pop
fs
popf
mov
xor
int3
ds
stc
fldenv
lret
sar
mov
add
cmpl
adc
sahf
pop
sub
add
in
loope
sub
jno
cli
jo
fiaddl
sbb
push
dec
insl
jl
sarl
push
jne
mov
add
aaa
jle
lods
lahf
mov
jb
loop
mov
pop
and
inc
jne
jp
xchg
pop
sti
push
mov
pusha
pop
cli
test
sbbb
pusha
aad
mov
jmp
inc
fs
popa
push
mov
enter
ret
mov
rcll
xorl
dec
movsl
xchg
clc
adc
in
je
dec
das
pop
mov
test
mov
stos
out
jg
sbb
cmpsb
pop
loopne
add
repnz
aad
mov
push
cld
jb
cltd
and
adc
idivb
jbe
jl
xor
filds
mov
out
popa
stos
mov
cli
pop
mov
call
inc
aam
inc
mov
test
test
sbb
in
movsl
or
xor
mov
cmpsl
loope
stos
ja
insl
push
cmpsb
or
gs
pop
lcall
mov
out
and
pop
loopne
and
cmp
push
sub
mov
inc
xchg
in
jae
data16
ret
mov
and
imul
arpl
movsl
sti
roll
dec
js
cmp
mov
outsl
stos
mov
shll
ret
add
les
push
lret
call
pushf
cmp
test
popf
sahf
stos
es
gs
daa
sub
int
test
popa
mov
jl
mov
pop
clc
adc
xchg
imul
inc
jl
sub
idivl
cmpl
das
inc
pop
jl
mov
or
ds
cs
pop
xchg
inc
pop
sbbb
rdmsr
popf
das
enter
or
dec
pop
mov
mov
lock
inc
and
aad
jo
aad
add
push
dec
and
inc
aam
repz
fstpt
stos
jns
mov
cmp
test
jl
ret
insb
test
inc
out
lret
cmp
and
gs
stos
cmpsb
mov
test
arpl
rcrl
and
movsb
rcll
or
push
lea
pop
mov
sbb
push
loopne
pop
xchg
jmp
pop
jle
jg
mov
cmp
and
mov
pop
pop
fadds
fstl
divb
mov
insb
sub
daa
hlt
mov
repz
mov
outsb
fwait
add
mov
aaa
or
pusha
mov
movsb
mov
sbb
mov
push
add
push
sbb
lahf
loope
fcomps
ret
push
in
ret
jle
rcrb
inc
mov
js
pop
loope
lods
mov
cmp
jge
lahf
jns
test
pop
add
lret
repz
lret
mov
push
push
push
adc
lds
push
neg
stos
ret
lock
shll
shrl
nop
fstpt
or
jno
lret
push
insl
sbb
jnp
arpl
sbb
sti
stc
pop
adc
dec
jmp
loop
call
mov
mov
insl
cs
mov
test
pop
pop
test
xor
ja
xchg
jb
mov
pop
sub
je,pt
mov
or
mov
loopne
and
repz
sub
jbe
inc
mov
cmc
sbb
or
pop
push
cmp
sub
adc
test
sub
int
cltd
mov
hlt
lea
fnsave
xchg
and
lcall
cwtl
data16
mov
nop
outsb
lock
sarl
or
ficomps
mov
loope
in
mov
mov
sbb
inc
xchg
or
stos
scas
cmp
adc
inc
stc
aaa
add
xor
repnz
not
fisubrs
xchg
lds
sub
flds
in
mov
or
lahf
push
js
inc
push
adc
jno
jmp
cmp
fcompl
or
dec
scas
xchg
mov
fdivr
cli
in
cltd
sarl
out
push
mov
int
and
jg
mov
dec
dec
lds
int3
jns
popa
and
lea
inc
fldenv
push
sub
xchg
add
ret
push
xor
outsl
mov
gs
or
jp
fidivrs
xchg
enter
inc
jb
push
sub
jae
push
insb
pop
adc
sbb
sub
mov
pop
test
cli
les
dec
inc
das
cmp
insl
dec
cmc
clc
movsl
or
push
mov
add
cmc
xor
repnz
fldcw
sub
out
popa
test
mov
cwtl
mov
add
or
les
negl
jb
testb
or
jae
ljmp
mov
scas
filds
mov
add
out
loop
lret
xchg
fbld
add
push
jbe
jge
cmp
mov
jg
inc
aam
mov
and
dec
test
add
cmpsb
andl
cmp
dec
iret
xchg
and
push
out
mov
fcmovbe
test
in
imul
mov
outsb
mov
imul
lods
addr16
cld
imul
bound
popl
les
mov
shrb
add
dec
shrb
das
scas
jg
jge
rorl
mov
int
adc
pop
insb
dec
ljmp
mov
insl
or
sbb
jmp
adc
test
cmc
loope
and
ljmp
ss
in
dec
pop
fiadds
loop
aaa
dec
and
add
or
icebp
add
lahf
ja
je
movsl
cmp
xchg
inc
ja
lret
jno
and
lds
clc
adc
popa
jae
xor
stc
lret
jle
mov
sub
out
add
in
ja
mulb
aam
add
test
pfacc
mov
sbb
adc
int
xor
shlb
imul
lods
call
lock
fcomps
add
inc
test
js
je
jne
in
mov
mov
ss
sub
fs
insb
iret
daa
dec
fdivrl
push
bound
cmp
scas
sbb
inc
pushf
xchg
pop
leave
sub
movsb
sahf
inc
nop
inc
adc
lea
cmpsb
imul
out
jbe
jmp
jns
call
inc
insl
mov
inc
mov
or
xchg
rcrb
sbb
push
or
js
push
popf
rcll
xchg
jae
movsl
rcrb
sbb
mov
outsb
notl
mov
std
addl
cmpsl
dec
lret
lret
pushf
jb
inc
into
sub
push
push
repnz
adc
addr16
imul
fucomip
mov
cld
les
leave
popf
xor
pop
repnz
push
lods
ret
test
das
or
scas
push
outsl
fsts
cli
sbb
pushf
in
cmc
repnz
cmpl
inc
adc
pop
push
push
lods
fildll
xchg
adc
add
dec
mov
aaa
mov
jmp
jp
dec
or
sub
test
jecxz
add
adc
mov
ja
leave
and
inc
ljmp
cli
out
outsl
jecxz
iret
std
insl
dec
fcomi
xor
insl
movsl
push
test
dec
nop
dec
sbb
sub
mov
jge
les
mov
adc
pusha
test
xchg
xchg
js
cmc
sub
loope
test
es
pop
adc
pusha
inc
scas
adc
push
dec
mov
push
hlt
sbb
cmc
je
decb
add
or
mov
mov
dec
or
mov
push
iret
sbb
push
loopne
imul
outsb
movsl
sbb
mov
aaa
outsl
pop
sbb
sbb
pop
mov
shlb
popa
ljmp
mov
cmpb
or
cs
loop
ljmp
lock
sub
cld
jmp
adc
cmc
lret
ja
lret
mov
adc
fs
orl
inc
xchg
xchg
ds
jmp
cmp
xor
cmpsb
test
and
dec
pusha
call
mov
imul
mov
mov
testb
lods
dec
fcompl
loope
inc
js
jne
or
outsb
adc
dec
arpl
dec
lcall
adc
mov
repnz
addl
dec
push
pop
iret
dec
dec
fstpl
inc
inc
jns
or
ret
test
push
push
and
or
arpl
std
pop
jp
scas
scas
dec
loope
imul
call
xlat
loop
pop
xchg
enter
jns
push
fcompl
inc
and
out
movsl
loop
pop
sub
and
dec
das
dec
jp
lret
inc
enter
and
sub
jne
pushf
ret
addr16
inc
xor
jne
icebp
xlat
inc
mov
insb
in
xor
pop
or
aas
push
add
sub
leave
pop
shll
outsb
outsl
push
mov
xlat
fsubl
ja
popf
xchg
mov
es
jge
and
gs
sbbb
mov
int
jb
and
xchg
adc
and
push
xchg
cmp
test
mov
std
lock
popf
int3
ss
emms
out
addr16
cmp
jo
flds
push
lds
cmp
and
push
pop
jmp
jnp
mov
arpl
addr16
pushl
jno
cltd
inc
jle
gs
iret
dec
test
ret
adc
out
xchg
outsl
dec
dec
outsl
fsubrs
dec
sbb
sub
sub
dec
pop
out
xor
mov
popa
out
arpl
outsb
cmp
push
sti
sbb
xchg
mov
addb
pop
mov
repz
push
pop
data16
push
dec
vpsubb
mov
pop
rcll
bound
out
bound
in
mov
xchg
sbb
mov
pop
test
lds
lret
movsl
shrl
outsl
shlb
mov
xchg
test
enter
lea
and
push
inc
icebp
lret
add
dec
jo
mov
sub
push
jge
sahf
or
jle
jne
xchg
and
test
insb
jmp
ret
mov
add
mov
add
sub
rcr
daa
cmp
aam
aaa
insb
arpl
das
roll
sub
xorl
clc
mov
inc
ret
mov
pusha
xor
sub
fildll
fcoms
cmp
out
add
lret
gs
cmp
sbb
popf
or
in
xor
jle
xchg
fiaddl
push
adcb
adc
fdivl
push
xchg
shufps
dec
mov
inc
and
out
lock
mov
out
call
cmpsl
sarb
sbb
mov
cld
out
sbb
test
stos
mov
push
cmp
movsl
mov
lret
pop
mov
pop
cmc
or
or
mov
push
jle
xor
fs
cltd
jo
enter
mov
mov
mov
jns
gs
movsb
testl
loopne
adc
xchg
jae
adcl
icebp
lock
cmp
imul
or
pop
enter
cltd
jmp
and
sahf
int
popa
das
jno
or
pop
into
sub
and
loopne
daa
mov
in
and
pop
insl
jecxz
stos
scas
mov
in
ss
push
sbb
mov
in
pop
mov
pop
pusha
stc
hlt
jno
pushf
jae
fwait
push
cmc
lcall
in
in
icebp
movsl
in
pop
push
dec
mov
out
jb
dec
or
jmp
xor
push
cmc
jmp
xchg
in
fistpll
mov
fcoms
xor
fcomps
xor
dec
push
xlat
frstor
in
dec
lret
inc
mov
in
decb
call
cld
mov
pop
lahf
fcmove
data16
adc
mov
pop
pushf
sub
in
dec
xor
mov
aad
dec
and
ljmp
cltd
push
inc
jb
lret
dec
xor
sbb
dec
adc
xchg
movsl
xchg
dec
bound
xlat
cmp
dec
push
mov
js
fsts
pop
outsl
xlat
sbb
mov
stos
adc
push
fs
mov
rcl
cwtl
cmpsl
sbb
das
sti
lea
push
lods
jns
sarl
mov
push
push
popf
outsb
jl
daa
jl
inc
or
and
xor
or
or
and
dec
insl
sbb
ret
xor
stc
sbb
ficompl
xor
adc
inc
out
adc
mov
xchg
sub
enter
cltd
fldenv
and
or
mov
stos
aam
push
repnz
sbb
lcall
test
and
xchg
lahf
dec
std
ljmp
mov
faddp
movsb
mov
leave
andl
jl
lea
xor
insl
mov
adc
lret
rcll
outsb
int3
adcb
add
testl
jmp
jno
lea
inc
push
es
add
scas
mov
cmp
stos
lret
fs
data16
scas
jg
fmull
repz
repnz
cli
dec
add
xor
mov
sbb
inc
push
mov
dec
push
insb
adc
dec
pop
dec
fs
call
push
rcll
lods
mov
dec
push
xor
lret
cmp
or
jno
leave
leave
filds
in
aaa
pop
stc
dec
xchg
mov
mov
push
fsts
in
dec
xchg
out
cmp
pop
std
jle
std
or
dec
xchg
sub
sub
dec
arpl
and
cltd
out
pop
popf
inc
or
push
add
jg
enter
insb
in
daa
xor
push
push
adc
adc
dec
pop
or
pxor
or
sarl
mov
rcr
xchg
dec
xorl
adc
jbe
xor
push
loop
cmpsl
push
rclb
movsl
arpl
and
andl
adc
dec
repnz
push
arpl
fmuls
sub
mov
insb
rcl
fimuls
fstp
ja
dec
scas
loope
xchg
repnz
pop
xchg
and
pop
add
popf
mov
jge
daa
xlat
xlat
fmuls
mov
xchg
sbb
cld
shll
add
mov
or
ss
stc
movsb
xchg
les
jns
mov
xchg
dec
shll
pusha
bound
sub
mov
jmp
sbb
mov
cli
lahf
pop
and
jns
icebp
lcall
dec
imulb
mov
addr16
dec
jb
scas
push
in
pop
dec
push
jecxz
cli
push
scas
arpl
ds
orl
aaa
fists
adc
aam
xchg
insl
cltd
push
inc
push
push
mov
mov
xor
cmpsl
cmpsb
cmpsl
push
ja
dec
enter
fcoms
or
sahf
push
jno
in
jno
outsb
cltd
jmp
das
adc
pusha
adc
push
push
movsl
cwtl
push
cmpsl
xchg
das
das
sbb
mov
inc
out
cmp
xchg
sub
xchg
mov
pop
lds
xchg
movl
xlat
inc
outsl
adc
es
icebp
adc
adc
and
push
loopne
cltd
and
xor
push
jg
clc
shrl
xchg
ficoml
ret
or
sub
sbb
dec
mov
push
inc
mov
inc
jbe
sub
mov
pusha
stc
or
lods
outsb
lods
test
jb
cmc
pushf
push
stc
sbb
cmpsb
shll
push
outsl
dec
pusha
or
add
into
into
adc
and
rol
jp
xor
lcall
mov
inc
sub
xchg
push
call
cmp
jle
lock
pop
test
push
pop
sbb
shll
dec
inc
mov
xchg
push
push
cs
pop
xchg
fildl
push
xchg
add
cmp
fdivs
jbe
mov
sbb
push
cmp
dec
stc
inc
or
leave
les
fucomip
sbb
andb
cwtl
jp
push
sub
jge
in
scas
jbe
cmp
in
gs
sbb
loop
adc
jecxz
jg
pop
add
sub
ficoms
lret
testb
mov
mov
xchg
pusha
cmp
add
cld
shll
sub
rcrb
cmp
mov
cmp
mov
mov
push
in
ljmp
loopne
insb
and
or
sub
adc
jg
mov
mov
shll
mov
xorb
ret
jo
roll
sbbb
test
sub
adc
push
pop
das
mov
iret
ret
jo
lds
push
push
adc
fistpl
mov
test
cld
add
jecxz
push
mov
push
leave
push
jo
mov
mov
in
add
dec
inc
dec
inc
adc
push
push
add
mov
call
into
add
mov
pop
in
push
or
adc
in
lea
add
ja
xor
push
shlb
andb
lock
mov
ret
cmp
ficoml
mov
aad
sbbb
add
subb
mov
xor
gs
push
sbb
ja
mov
dec
roll
into
popf
movsb
ffreep
xchg
xchg
cltd
gs
mov
in
in
subl
pushf
and
xchg
xor
jo
xorl
call
outsl
ret
das
fcomps
adc
sbb
loop
jg
ds
jb
clc
or
and
mov
dec
out
add
xor
movsb
shlb
bound
repnz
fidivs
roll
fcmovnu
mov
fists
pop
mov
popa
push
addl
int
icebp
xchg
test
les
xchg
lret
sub
mov
sub
inc
cmp
clc
xchg
ja
test
cmc
rcrb
jmp
pop
cmpl
xchg
pop
adc
cltd
rclb
pop
outsb
push
pop
mov
xor
aam
rol
mov
les
mov
cwtl
sub
mov
add
add
inc
test
inc
dec
xchg
cmp
mov
push
shrl
imul
and
sbb
cmc
or
jbe
inc
push
jb
jae
int3
stc
out
push
adc
xchg
mulb
sbb
xchg
ljmp
mov
outsb
mull
loop
fimull
adc
insb
movsl
mov
lahf
jge
repnz
ja
mov
imul
sbb
push
outsb
adc
fsubs
in
adc
or
cmp
dec
sbb
test
push
aas
pop
push
outsb
sahf
bound
lock
xchg
pop
out
addr16
jl
pop
mov
dec
mov
orb
pop
ss
sbb
and
cs
addr16
pop
insb
nop
jecxz
scas
addl
inc
cwtl
xlat
in
scas
jge
std
comiss
inc
loopne
xchg
les
sbb
clc
fwait
pop
xchg
idivb
mov
fs
cmp
nop
lret
mov
and
mov
xchg
adc
push
rclb
ss
mov
cmp
xor
cmp
nop
out
xchg
dec
arpl
inc
outsb
mov
jg
push
mov
or
out
sub
out
out
jo
or
sbb
loopne
jl
hlt
sub
push
cmpb
arpl
cmp
ffree
dec
fwait
or
aad
jge
xchg
adcb
jns
sahf
mov
rorb
jb
sbb
sbb
mov
add
scas
subb
push
lret
je
cmp
or
imul
adc
clc
pop
popa
adc
sbb
sub
scas
dec
push
push
test
jg
aam
push
hlt
inc
push
mov
daa
adc
mov
mov
in
pop
mov
repz
jb
lcall
mov
xchg
jecxz
loop
add
fwait
repnz
push
mov
lods
push
lcall
pop
flds
dec
push
adc
fmull
mov
lds
push
pop
cmp
jnp
mov
arpl
lret
xor
xor
mov
cwtl
or
call
cmp
xor
and
ret
sub
fldenv
cmpsl
xorl
pop
js
add
pop
dec
dec
sub
mov
push
push
jecxz
dec
and
dec
jp
pop
pop
test
adc
lods
lcall
fidivs
jl
and
sbb
scas
lcall
or
nop
sbb
jmp
dec
xchg
push
fldenv
inc
int3
das
push
xchg
dec
addr16
rorl
neg
xor
insb
fwait
xchg
mov
push
jle
xchg
sub
cmp
sbb
push
push
add
test
push
popf
test
sub
or
dec
pop
cwtl
test
dec
dec
stc
mov
lahf
dec
dec
rorl
imul
xor
cmc
cmovnp
sahf
sbb
cmpsb
idivl
sahf
inc
mov
or
mov
mov
movsl
ja
insb
movsl
popf
mov
loope
sbb
arpl
inc
int
mov
arpl
jle
das
or
js
test
int3
xchg
aas
inc
mov
pop
push
and
lret
dec
push
and
divl
xor
dec
arpl
cmpsl
xor
dec
adc
inc
mov
adc
xchg
sbb
pop
pusha
movsl
mov
ret
or
xchg
stc
xor
lea
test
leave
leave
decb
cmovo
shlb
cld
sub
loope
shlb
xchg
xor
push
lahf
sub
ror
leave
pop
pop
dec
add
js
fdivl
in
leave
ss
ljmp
cmp
cmp
fbld
call
aas
xor
sbb
iret
pop
imulb
xor
dec
push
shl
sub
adc
pop
out
push
out
push
fistpl
jmp
inc
mov
jp
push
mov
pop
sub
iret
fldln2
push
aas
mov
jl
jno
imul
push
sarl
sar
adc
add
insb
outsb
cmp
xchg
mov
pop
aaa
jle
ss
lods
stos
mov
cmpsb
rol
mov
xor
fwait
rcl
jge
and
dec
movsb
jge
aad
xor
aaa
sbb
dec
into
divl
mov
fdivp
or
inc
leave
lcall
mov
pop
cmp
cmp
out
lock
icebp
jg
push
test
and
push
xor
pop
pop
mov
shll
or
ror
popfw
leave
sbb
adc
xchg
ss
inc
and
or
enter
adc
ss
stos
mov
sbb
ja
ja
xchg
cmp
rorb
pop
int
dec
pushf
hlt
jb
push
loopne
mov
jnp
pop
pop
xadd
xlat
sti
jae
push
fwait
mov
aam
push
add
sbb
int3
pusha
repnz
dec
push
mov
mov
sub
mov
test
daa
fistpll
add
arpl
mov
mov
push
sub
popf
inc
mov
xchg
mov
in
push
outsb
mov
push
sub
or
and
and
adc
lret
je
pop
sub
das
adc
fldenv
aaa
loop
std
hlt
test
mov
sub
aad
cld
and
xor
test
push
sub
jo
pop
jnp
cmp
fildll
mov
cmp
add
das
popf
and
push
sbb
stc
mov
sbb
int
repz
je
adc
pop
in
mov
cmp
dec
cld
cmp
loop
jae
das
dec
test
loopne
rolb
mov
mov
es
jne
loopne
mov
icebp
and
sbb
push
jae
push
cli
jl
and
repnz
mov
jmp
popf
sbb
and
adc
es
sub
mov
mov
sbb
movsl
cmp
fstps
cmpsb
cmc
push
sahf
push
push
cwtl
add
xor
mov
sti
out
pop
stos
jno
decl
jns
mov
add
mov
or
push
jb
and
sub
lock
or
mov
inc
sbb
testl
loope
sbb
cs
mov
add
loop
mov
cmc
cltd
in
imul
imul
stc
mov
sbb
sti
shlb
mov
push
jb
jns
js
aas
hlt
xlat
jmp
insl
mulps
std
and
arpl
adc
scas
push
es
pop
roll
mov
dec
cmpsl
mov
cmpl
imul
mov
jecxz
xor
inc
dec
mov
xor
dec
lcall
lret
adc
dec
rcrb
mov
loop
aas
in
pop
mov
jae
scas
mov
or
add
and
sbb
insl
push
lret
jne
js
mov
loope
lcall
jge
xor
lcall
jmp
je
call
sbb
inc
xor
imul
push
add
cmc
sbb
hlt
ljmp
ret
sbb
insb
mov
pushf
nop
lock
aam
cmp
clc
push
sbb
lret
dec
pusha
sbb
rorb
int
mov
rdtsc
enter
xchg
add
or
mov
ret
fwait
xchg
mov
mov
dec
mov
fisttps
lea
test
fbld
retw
arpl
int3
cmp
sar
add
or
pushf
leave
dec
movsb
jl
loop
test
out
or
and
outsb
cmc
or
ja
fbstp
cmpsb
xchg
jg
pop
sub
cmp
fistps
inc
in
es
dec
in
test
popf
mov
fisubl
call
mov
xor
add
scas
inc
aam
shll
push
xchg
fisubs
mov
es
rcll
pushf
push
mov
test
rclb
iret
xlat
ret
adc
cltd
hlt
cli
cmp
mov
aaa
loopne
inc
cmp
jbe
sub
add
arpl
movsl
data16
mov
inc
dec
jecxz
xchg
push
ss
dec
dec
aas
nop
popf
pop
aad
ds
shlb
ret
xor
add
dec
jne
or
jle
xor
sbb
pop
vpmadcswd
xor
mov
in
fsub
lock
jnp
cli
out
and
shrl
jle
fsts
ds
mov
fstp
pusha
jnp
test
mov
repz
xor
mov
jne
push
and
mov
arpl
fs
inc
insb
xlat
push
push
and
sbb
int
out
and
outsb
sbb
std
fs
sarb
fcoms
sub
and
adc
sub
cmp
push
xchg
cmp
sbb
cmc
repz
mov
sub
or
xor
jns
add
adc
push
sub
int
add
dec
sub
inc
pop
sbb
pop
add
jbe
js
sbb
mov
jno
mov
mov
mov
dec
aaa
inc
loop
fwait
sub
scas
dec
lods
sbb
inc
mov
push
mov
mov
loope
lods
loopne
movsb
jnp
fdivl
lret
sbb
mov
loopne
inc
add
sub
icebp
cli
and
es
lahf
xchg
push
jb
jne
push
fwait
mov
mov
nop
mov
sub
and
cwtl
stos
lahf
jno
out
and
xchg
loope
xchg
xchg
adc
adc
addl
pop
jge
adc
cmp
xchg
arpl
mov
test
out
adc
into
fwait
int3
stc
xor
outsb
inc
outsb
adc
shll
lea
fidivrl
add
pop
sub
add
mov
cmp
or
cmpsb
pop
pop
sbb
outsb
aaa
inc
into
sbb
aaa
mov
jg
pop
adc
jmp
rorb
into
or
ficoms
or
cld
insl
dec
sbb
push
dec
jmp
pop
mov
lcall
pusha
push
dec
xor
clc
push
xor
jmp
int3
xor
mov
adc
mov
xchg
sub
mov
shll
add
idivl
mov
call
data16
jne
cmp
sbbl
or
stc
sub
mov
les
cmc
mov
dec
loopne
sbb
jge
inc
loopne
pop
icebp
sar
jle
scas
lods
pop
int
ja
and
sbb
clc
add
cli
sbb
pop
rcll
cmc
popa
adc
nop
adc
sbb
sbbb
cli
lock
addr16
xchg
in
sub
cli
xchg
jmp
std
jnp
mov
fisttpll
jp
sub
pop
call
or
test
jnp
sub
shlb
xor
mov
push
inc
dec
rcrb
pop
sub
bound
dec
cmp
push
icebp
sub
subl
push
mov
and
pop
pop
jmp
xchg
cmpsb
pop
pop
inc
mov
dec
or
or
cmpsl
subl
pop
or
pop
xadd
in
ja
xchg
loope
aaa
add
xor
fimuls
pop
mov
fsubrp
sbb
ds
jne
cld
pop
sbbl
inc
jp
dec
jmp
js
addr16
gs
xchg
test
and
pop
mov
pop
cwtl
push
cmp
or
out
xchg
cmp
cmp
nop
popa
notl
sahf
movsl
and
outsb
adc
push
scas
cli
test
fldenv
out
rorl
xor
lock
sub
pop
or
fcoms
jmp
push
cmpsl
push
inc
and
mov
jmp
and
jns
and
rolb
shr
inc
jb
cmp
push
jmp
aad
mov
or
or
leave
out
fcmovbe
inc
ja
mov
xor
movsl
or
icebp
fmull
cmp
and
out
or
adc
lahf
mov
out
or
mov
and
wrmsr
sbb
lcall
fdivrl
into
push
xchg
cmp
sub
dec
push
mov
out
mov
imul
pop
pop
outsl
sub
repnz
fs
sahf
pop
jmp
pop
lods
mov
inc
cld
int3
sub
pop
push
stc
leave
xor
xchg
jne
js
push
mov
int3
xor
call
arpl
mov
dec
sub
adc
and
fsubl
rcrb
shl
cmp
sub
test
js
jge
push
jmp
call
insb
ret
repz
push
mov
inc
xchg
push
std
mov
jge
repnz
mov
ret
push
adc
push
add
bswap
gs
cmc
aam
out
add
lcall
jl
clc
fistl
push
out
push
addl
and
jle
or
imul
xor
cmp
fsubr
out
mov
lahf
nop
repz
je
loopew
decb
mov
movsb
dec
jp
das
mov
adc
repz
pop
leave
out
scas
mov
hlt
add
sbb
stos
shlb
test
lcall
or
faddp
mov
arpl
imul
repnz
gs
fbstp
mov
or
xchg
mov
stos
loop
and
xor
popf
cmp
xor
int3
sbb
push
dec
faddl
jge
push
push
nop
jo
insl
in
jns
movsb
adc
add
jmp
add
adc
adc
add
rorb
nop
pmulhw
pop
adc
mov
ja
jmp
cmp
jnp
adc
xchg
scas
enter
or
mov
pxor
out
push
rol
loop
pusha
cmpsl
and
repz
mov
or
insl
gs
lahf
inc
lcall
stos
ret
push
mov
xchg
into
js
imul
fmuls
mov
out
or
les
pop
sbb
mov
pop
scas
fbstp
fnsave
stos
inc
rorb
mov
enter
mov
rolb
lock
imul
xor
into
xchg
in
jnp
or
xor
cmc
mov
mov
mov
js
cmp
iret
aad
pop
mov
mov
pop
orl
mov
stos
mov
sub
lods
mull
add
xchg
cmp
dec
out
push
xchg
mov
fucomp
leave
mov
xchg
out
pop
mov
rorb
push
cmpsl
jg
sub
inc
sub
scas
fcmovb
scas
hlt
and
rcrb
pop
out
rcrl
jge
inc
xlat
hlt
jle
ss
xchg
lds
add
sub
aam
sbb
and
movsb
sub
in
jmp
insb
inc
mov
xchg
cmp
jno
jo
insb
fsubrl
bound
out
lock
addr16
lods
or
xchg
mov
xor
loopne
stos
shlb
stos
aas
addr16
outsl
xchg
push
xor
data16
out
testb
fcompl
mov
add
adc
jg
out
ficompl
or
rclb
daa
leave
pop
mov
imul
in
sub
cmp
sub
fisubrs
pop
idivl
or
les
inc
mull
jae
loop
movsl
aaa
popa
pop
cmp
repz
int3
sbb
stos
test
mov
test
and
adc
adc
outsl
push
loop
xor
mov
xchg
pop
data16
xchg
pop
sbb
xchg
idiv
fs
packssdw
sub
lret
cwtl
scas
xchg
fistl
sub
je
lret
mov
inc
pop
push
iret
mov
arpl
cs
adcl
je
fimuls
data16
loopne
in
fsubr
iret
xchg
hlt
push
loopne
mov
test
add
push
and
ja
loope
cmp
push
mov
mov
lods
shll
sub
cmpsl
sarb
mov
and
mov
repnz
push
int3
cmpsb
testb
jne
xchg
nop
movsl
cld
data16
and
jb
push
and
sub
and
out
fwait
ja
stos
lods
xchg
int3
scas
adc
aad
mov
mov
popf
mov
jl
push
test
shll
cld
ret
add
push
jmp
cmp
ss
push
fwait
aas
adc
stos
into
out
pop
cmp
iret
push
pop
cmp
mov
icebp
push
pop
clc
fsubrl
xor
ljmp
out
mov
and
pushf
push
fidivl
inc
imul
mov
movsb
div
sub
mov
mov
daa
cwtl
loope
xchg
fucomip
rorl
push
lea
and
lret
aas
xor
mov
mov
mov
test
cmp
pushf
fstpl
ljmp
int3
aam
mov
aam
and
mov
mov
sbb
xor
clc
jbe
xchg
lods
fiadds
mov
mov
rcl
sbbb
push
cmpb
repz
mov
xor
adc
adc
fiaddl
inc
cmp
and
das
xor
outsl
push
sti
mov
or
data16
pop
out
mov
lds
mov
xchg
dec
pop
repz
mov
add
lcall
mov
pop
stos
jnp
dec
flds
inc
jp
xchg
into
ret
pop
cwtl
push
pop
fs
xchg
out
adc
push
aas
rcrl
test
jl
mov
pusha
cs
inc
jge
or
sub
test
jle
push
xchg
pop
int3
ficoms
fmuls
inc
mov
xor
push
sbb
inc
movsl
cmc
mov
sarl
jae
inc
mov
mov
mov
sbb
add
lret
inc
push
inc
dec
insl
fisubl
or
sahf
push
cmp
rcrb
inc
and
xor
add
test
iret
adc
pop
dec
les
and
or
loope
inc
and
movsb
stos
jge
lahf
mov
cmp
into
pushl
mov
test
mov
sahf
mov
out
mov
cmc
inc
mov
add
movlps
xor
or
adc
xchg
pusha
push
xor
aad
cmpsb
xor
sub
mov
adc
add
add
xor
xchg
sub
cwtl
out
dec
fs
push
rcll
push
xor
popa
push
jl
jnp
aaa
cs
popa
vucomisd
push
mov
sub
cs
mov
std
jo,pt
xchg
or
das
fstps
inc
test
sub
jno
ss
or
or
divl
push
jo
dec
movsb
mov
insl
stos
dec
ss
sbb
popf
and
aad
jg
jne
add
adc
sahf
jle,pn
inc
xor
adc
int
mov
in
fnsave
push
pushf
cltd
loop
icebp
arpl
dec
aas
mov
lcall
cmp
push
in
shlb
stos
jmp
cli
mov
or
and
cs
and
xchg
clc
add
ljmp
add
mov
jns
je
inc
mov
and
or
pop
lock
les
cmpsb
sub
lods
sub
mov
push
sti
pushf
sub
mov
mov
adc
test
and
mov
adc
aam
out
flds
mov
adc
push
sub
rcrl
sbb
push
mov
mov
cmpsb
mov
dec
stos
ss
jmp
scas
sti
jg
lcall
das
stos
icebp
push
adc
pushf
cmp
sub
sbb
fucomip
test
sub
xor
sbb
insb
push
mov
add
ja
xchg
adc
icebp
test
xchg
push
mov
and
xor
mov
inc
xor
dec
push
sbb
sbb
dec
adc
rol
int
cli
es
loop
push
fisttpll
and
inc
cwtl
lea
xor
out
insb
hlt
cltd
sub
sti
stc
clc
jecxz
jnp
pop
pop
mov
cmp
dec
rep
mov
jae
xchg
ljmp
cmpsl
icebp
inc
jo
pusha
sub
andb
loope
rolb
adc
xor
test
lds
adc
mov
sub
pushf
xor
mov
mov
repz
pop
ss
jo
test
jae
fbstp
sarb
mov
test
xor
adc
int3
jbe
xor
xchg
sub
sti
in
fucomip
int
pop
aad
and
xchg
ds
adc
mov
in
hlt
adc
jmp
ret
fiaddl
ret
pushf
movsl
mov
dec
in
xchg
sbb
xor
mov
loope
addr16
enter
pop
jbe
add
clc
lock
sbb
cmp
into
fstp
in
cli
stos
hlt
mov
push
jp
sbb
mov
enter
and
xchg
data16
push
cli
xor
or
push
imul
lds
sub
jne
xor
xchg
xor
pop
and
xor
sub
push
jp
scas
mov
aam
xchg
dec
lret
mov
ds
cmp
and
lods
jl
xor
cwtl
pop
mov
call
fisttpl
pushf
mov
int
xchg
sbb
pop
cwtl
and
out
inc
push
lcall
inc
add
into
push
cmp
aaa
loopne
imul
add
inc
sub
negb
rorb
out
aam
sub
fstpt
mov
inc
andl
push
test
push
movsl
and
negb
add
pop
pusha
cwtl
cmp
mov
lods
popa
mov
int3
push
jge
hlt
rolb
or
jg
lahf
pusha
je
push
sub
hlt
into
jmp
movsb
rcr
jbe
inc
xor
stc
lahf
cmpsb
and
sub
ljmp
je
daa
js
adc
push
data16
pop
psubw
sbb
mov
sub
push
mov
cmp
imul
push
icebp
mov
push
fsub
xchg
sbb
imul
mov
push
addr16
pop
jmp
inc
repz
mov
push
pop
jae
add
xchg
pop
lock
xor
and
mov
cmp
adc
aam
mov
sub
enter
adc
shlb
shr
mov
push
repnz
or
mul
movsl
popa
mov
popa
inc
pop
lods
mov
movsl
pop
mov
jbe
xchg
inc
cmp
xor
pop
mov
stos
mov
mov
xor
ret
insl
je
and
xor
pop
aam
scas
icebp
nop
add
add
or
and
add
mov
pop
lcall
pusha
loopne
push
cltd
dec
fnstcw
inc
fs
fmul
sbb
out
imul
inc
les
ficoml
stc
sahf
inc
pusha
idiv
pop
jp
xor
test
ljmp
subb
pop
xor
mov
out
add
mov
les
imul
imul
add
lahf
inc
sub
aas
fstps
cmp
jb
subb
gs
dec
mov
xor
clc
rorl
jge
imul
lcall
cmp
nop
jno
mov
lret
and
stc
xor
addr16
mov
xor
lret
cmp
outsl
and
cmp
in
xchg
add
mov
mov
nop
mov
call
sub
push
sub
lods
out
es
mov
fwait
adc
push
xor
aas
inc
ja
mov
or
adc
jecxz
sub
ja
push
xchg
mov
jle
negb
data16
mov
sub
or
sbbl
mov
ja
movsl
sbb
sti
sbb
popl
jmp
or
int
mov
mov
pop
add
dec
scas
add
ds
xor
loop
xchg
popa
int
dec
sbb
jmp
pop
dec
into
in
xor
cmpl
mov
mov
sub
or
fwait
adc
iret
outsl
outsb
cwtl
sbb
stos
cli
notb
ja
aaa
in
sbb
mov
mov
push
ljmp
rolb
rcr
stc
stos
hlt
pop
movsb
mov
cmp
or
push
fcmove
mov
or
leave
popf
loope
jle
xchg
call
mov
xchg
cmp
std
add
je
lret
jno
pop
push
xchg
sbbl
in
sub
shll
adc
rcrl
push
fwait
or
push
movlps
rorb
xchg
and
mov
jns
stc
and
mov
push
mov
aaa
dec
in
std
les
cmp
jb
jge
inc
push
rol
dec
mov
lds
imul
sbbl
inc
add
pop
xchg
or
test
inc
into
or
mov
lock
xchg
rcr
pop
enter
sahf
adc
sub
jecxz
subb
imul
add
mov
cmp
add
lcall
pop
test
stos
mov
pop
dec
lods
push
push
scas
xor
nop
sub
lods
fnsave
xor
pusha
push
divb
dec
jbe
sbb
dec
sub
movsb
adc
imul
pop
pop
outsl
shr
pop
xor
pop
jl
cmp
ret
test
test
mov
pop
sbb
push
cmp
or
mov
jmp
mov
repz
push
jmp
mov
scas
or
cltd
sbb
cmp
jb
cmp
pop
dec
or
mov
std
dec
cmp
pusha
call
push
aam
push
cmp
cmc
dec
out
inc
dec
cwtl
xchg
clc
mov
add
jo
dec
mov
js
mov
xchg
pop
sub
add
out
xchg
mov
mov
add
and
push
xor
stos
ss
mov
or
cmp
dec
sbb
push
sub
lahf
inc
adc
mov
aam
arpl
notb
dec
sbb
lea
mov
add
mov
jns
das
mov
pusha
call
add
push
mov
jne
cltd
xchg
pop
stos
jl
push
dec
jo
fsubl
in
int3
inc
cld
mov
outsl
dec
adc
sub
cmp
filds
xorl
inc
mov
lods
mov
fst
pop
pop
inc
xlat
scas
test
leave
mov
movl
or
xchg
lret
xchg
ja
test
add
js
push
adc
mov
in
les
pop
mov
jbe
lret
inc
fs
sbb
lods
push
dec
mov
inc
or
mov
mov
inc
and
mov
pushf
leave
push
cmp
adc
push
into
rol
in
push
pop
mov
movsb
xor
fsts
cmc
fdivl
xor
int3
lock
in
sbb
lock
push
and
ss
jo
jnp
hlt
jmp
andb
sahf
cltd
mov
jge
in
test
adc
ret
and
push
icebp
lret
push
push
fwait
sbb
jg
repz
xor
insl
adc
cmp
sbb
fiaddl
mov
pusha
in
stos
or
stos
imul
je
dec
lds
test
pop
je
out
cmp
push
imul
ds
inc
dec
in
cmp
mov
movsl
daa
xchg
repnz
loope
call
push
stos
mov
pop
lock
and
cmp
pop
cmp
sbb
addr16
sub
adc
imul
fcmovnb
movlps
push
scas
pop
pop
mov
pop
pop
xchg
divl
cmp
repz
jbe
lods
jns
scas
cmp
mov
ret
ret
lods
jg
inc
push
inc
jge
fadd
mov
out
or
cmpsl
add
movsb
pop
or
jecxz
sbb
push
js
mov
icebp
test
push
jmp
sarb
xchg
pusha
mov
icebp
inc
lods
movsl
add
adc
add
loop
dec
jecxz
dec
test
jecxz
orl
test
sub
enter
ja
sbb
stos
push
push
dec
mov
cmpsb
or
int
mov
lret
aad
xchg
xchg
mov
lods
xchg
xor
ret
pop
sbb
xchg
popf
push
rcll
mov
mov
gs
dec
fmull
xchg
adc
movl
loop
push
cmpsl
test
jl
imul
cmp
lock
jp
push
mov
dec
out
lahf
rorb
int
inc
push
pop
outsl
mov
nop
mov
xchg
int
mov
call
icebp
loope
testl
orl
mov
add
ds
loop
outsl
cmp
in
push
jecxz
jno
jno
mov
repz
daa
ret
cmpsb
add
testl
push
push
loopne
cmpsl
mov
push
lcall
les
rcrb
ficoms
test
pop
es
adc
outsl
sysret
add
jb
add
outsb
jmp
cmpsb
fists
jge
xchg
or
pop
aad
mov
xlat
jmp
cs
mov
test
cmpsb
cmp
sti
lods
dec
fwait
xor
aaa
sub
dec
push
ficoml
mov
es
sbb
mov
mov
lahf
mov
mov
cltd
add
sarb
mov
mov
daa
fidivrl
repz
push
ds
dec
jne
xchg
enter
insb
cli
int
insl
inc
test
cltd
cmc
dec
add
gs
inc
test
add
test
dec
movsb
gs
ds
add
test
call
xor
inc
jnp
add
jge
mov
cmpsb
repz
enter
outsl
mov
lods
movsl
fadds
mov
push
scas
cwtl
xchg
push
insl
mov
or
fnstsw
into
out
jg
cmc
or
push
mov
int3
cmpsl
lods
sub
xchg
adc
cmc
xor
pop
fists
adcb
sbb
in
lahf
sbb
das
xchg
test
dec
call
leave
jns
fwait
lea
xor
movsb
push
neg
xchg
lods
sbb
mov
lea
inc
jne
inc
scas
shrl
je
or
mov
lods
or
mov
loopne
out
xlat
fidivrs
div
lahf
push
mov
aas
add
jmp
dec
inc
jp
fwait
pop
jle
cmp
lods
lock
fwait
bound
andb
lcall
dec
std
mov
dec
inc
repnz
xchg
hlt
xor
push
insl
es
inc
mov
hlt
js
shlb
call
cmp
jp
rcll
jns
dec
xor
or
out
dec
mov
xor
sub
mov
lods
ret
pop
push
push
push
pushf
cmp
add
cmpsl
dec
or
pop
pop
mov
insb
out
andl
sub
xlat
sbb
push
or
ds
fdiv
lea
sbb
push
jge
push
xchg
cmp
xor
or
adc
popf
jmp
mov
inc
mov
in
testb
bound
loop
std
push
adc
xchg
adc
sub
sar
aad
ds
inc
lret
test
je
in
mov
rcll
cmp
rolb
adc
push
sub
pop
cld
sti
mov
xchg
mov
add
test
pop
ret
js
mov
imul
div
jb
out
sbb
mov
cld
mov
lods
push
cmpsl
test
jo
xchg
jmp
xchg
mov
mov
andl
push
outsb
iret
shrl
lds
cltd
push
movsl
testl
lret
rcrl
cmp
inc
pop
dec
inc
shrl
repz
addr16
cs
maxps
and
mov
inc
mov
push
loope
adc
jmp
sbb
lock
andb
inc
clc
sbbb
mov
stos
je
inc
sbb
pop
shl
lock
cmp
pop
pop
or
pusha
cmpsb
adcl
lea
popa
in
aam
adc
add
push
jno
inc
fcoml
pop
push
fst
inc
pop
mov
mov
mov
mov
lods
gs
nop
mov
mov
fidivrl
xchg
insb
push
loop
mov
sbb
es
arpl
mov
or
imul
xchg
mov
nop
fimuls
popf
movsb
jge
or
and
pop
iret
xchg
enter
add
dec
in
xor
lock
cwtl
xor
mov
xchg
mov
outsl
lahf
push
stos
dec
xor
xor
in
clc
adc
cld
and
test
mov
outsb
dec
test
mov
cmp
je
jmp
es
dec
add
addr16
fnstsw
lahf
loop
cld
movsl
iret
dec
mov
push
rcrb
xchg
jbe
jge
inc
mov
popf
adc
insl
das
cmpsl
std
lods
inc
sub
fs
xchg
push
rcl
movsb
pop
in
scas
or
movsl
loope,pn
push
out
pop
mov
dec
add
test
call
mov
or
out
sti
lock
lea
push
popf
adc
out
fidivs
and
adc
mov
or
std
inc
sub
jmp
aaa
cmpsl
scas
cmpsb
sbb
xor
sbb
xchg
add
jmp
xchg
mov
test
insl
push
fwait
xlat
fisubs
sahf
xchg
sbb
ret
mov
push
filds
in
mov
pusha
xchg
imull
xor
test
roll
xlat
or
sbb
xchg
loop
or
jb
sbb
sub
mov
jg
adc
ljmp
mov
jo
fstpt
in
popa
pusha
stos
imul
shlb
fldt
repz
or
mov
out
xchg
arpl
pushf
fs
loop
mov
pop
xchg
inc
sti
dec
scas
adcb
btr
inc
ret
cmp
test
xor
push
gs
mov
mov
mov
push
movsb
cmp
and
or
outsl
popf
lahf
pop
sbb
mov
jbe
movsb
sti
push
fnsave
nop
movb
pusha
in
inc
ret
fbstp
stos
push
sarl
into
dec
xor
mov
cmp
loopne
mov
adc
cwtl
inc
adc
nop
clc
les
fs
and
ret
sub
jb
push
out
or
push
ret
mov
fwait
icebp
stc
divl
into
inc
mov
int3
stos
xchg
in
gs
cmpsb
ja
push
ss
xor
les
add
loope
popa
cmp
hlt
stos
push
enter
cmpsb
rorb
mov
add
cmp
sbb
pop
rcll
inc
sbb
dec
add
sbbl
jno
mov
and
inc
js
into
dec
js
pop
fistpll
xor
push
nop
add
add
stc
xchg
adc
mov
icebp
popf
push
and
mov
mov
cmpsb
rolb
fstl
pushf
fwait
repnz
sbb
or
sbb
jae
popf
mov
mov
arpl
pop
je
jnp
cwtl
mov
dec
insl
xchg
lahf
clc
mov
add
xor
inc
mov
pop
cmpsl
inc
aad
popa
mov
jae
gs
popf
rorl
mov
jecxz
and
or
jae
sub
xchg
pop
lret
inc
gs
adc
add
enter
push
lret
stos
loopne
jmp
cmpsl
add
ljmp
ficoms
push
int3
jbe
adc
pop
out
dec
shl
js
cmpsb
cltd
push
mov
adc
mov
add
adc
mov
cmp
jecxz
pop
ja
pop
mov
movsl
mov
jecxz
sbb
call
mov
dec
inc
call
jmp
repnz
sahf
addb
dec
scas
xlat
iret
add
repz
arpl
xchg
adc
fs
fidivrl
lock
xchg
subl
inc
rolb
rorl
mov
pop
jmp
dec
mov
lret
hlt
cmp
or
xchg
mov
mov
lret
cmpsb
cli
fdiv
and
mov
dec
xlat
push
xor
sub
jmp
adc
adc
hlt
stc
cmpsb
mov
dec
loope
mov
and
das
push
cwtl
cmpsb
pop
data16
push
pop
pushf
mov
mov
fcmovbe
xor
mov
test
jbe
lods
add
fwait
adc
mov
jb
xor
pop
scas
ja
jmp
fimuls
mov
mov
pop
out
int3
push
push
jo
ss
les
xchg
aam
sub
xchg
push
cmp
cmp
or
js
je
xchg
sti
jae
adc
popa
cmpsl
mov
push
jle
lods
push
mov
ja
dec
or
inc
sbb
adc
add
ret
push
pop
adc
enter
mov
or
ja
nop
aad
mov
push
mov
dec
daa
add
fistpl
test
pusha
loopnew
jmp
xor
adcl
cltd
imul
cld
cmpsl
les
xchg
mov
mov
pop
or
rolb
aas
sbb
movsb
and
cmp
dec
cli
mov
pop
push
xor
lods
fsub
mov
mov
mov
jae
shll
inc
cld
repz
les
pop
pop
ret
xlat
jae
mov
xor
xor
mov
cltd
sbb
fadds
xchg
or
lods
arpl
dec
ja
push
fs
aaa
inc
jle
push
and
gs
nop
popf
call
add
iret
lods
cmp
dec
fs
pop
mov
mul
enter
xchg
jg
pop
fimull
cmp
fidivrs
sbb
test
mov
loop
sbb
jle
mov
fisttpll
sahf
test
xorb
sbb
fnstsw
cli
mov
adc
aas
mov
or
or
call
repnz
decl
push
push
jmp
fidivrs
mull
shrl
xchg
cltd
pop
mov
sbb
mov
repnz
sbb
pop
ss
pop
leave
jmp
sbb
mov
pop
xor
fcmovnb
cwtl
test
mov
aaa
xlat
push
sbb
fdivrs
iret
mov
fldcw
ljmp
mov
outsb
or
out
mov
push
push
xor
fildll
sbb
gs
pushl
loop
cmp
mov
clc
sub
jl
dec
mov
mov
call
mov
cld
test
mov
mov
dec
gs
nop
sub
fcomp
ja
cli
push
push
stos
xchg
out
test
test
cmp
inc
dec
fadds
or
or
lcall
jae
nop
dec
pop
aam
icebp
pop
push
out
out
xchg
out
pop
dec
f2xm1
scas
push
test
cmpsb
in
scas
cmp
cmp
insb
insb
in
inc
jl
fwait
mov
mov
dec
jne
daa
jnp
dec
movsl
inc
fldl
loope
lods
and
sahf
add
cld
lds
mov
jmp
ror
imul
pop
js
test
test
pushf
xor
imul
inc
or
int
jb
push
in
out
cmp
push
and
adc
repz
or
les
movl
repnz
into
bsr
movsl
sub
xor
in
mov
in
fcmovbe
test
jnp
cltd
cmp
movsb
xlat
data16
pop
pop
imul
pop
sbb
xor
push
ficompl
jne
icebp
or
shrb
test
pop
push
je
mov
push
int
mov
jle
clc
insb
adc
mov
mov
jecxz
mov
scas
aaa
outsl
test
dec
dec
test
and
stos
sub
mov
gs
cli
pop
in
repnz
lret
mov
xchg
ljmp
or
icebp
push
inc
push
push
das
inc
aas
adc
pop
in
sbb
jge
lock
mov
sbb
xor
jb
mov
add
insl
sbb
mov
pop
push
sbbb
xor
sti
xorb
notl
std
cwtl
push
xchg
push
ret
stos
scas
lock
cltd
dec
insb
adc
arpl
hlt
sarl
clc
idivb
cltd
add
ret
lds
sti
movsb
mov
fisttps
mov
xchg
test
gs
fwait
mov
in
push
lods
jp
jbe
sbb
adc
aad
test
popf
mov
std
out
insb
int3
fbld
insl
jns
loop
mov
pop
mov
pop
sbb
cmp
mov
sarl
mov
test
mov
mov
insb
add
add
test
adc
push
mul
jl
push
imul
in
mov
jp
imul
xchg
shll
out
outsl
mov
mov
les
jns
cmc
sbb
jp
faddl
popa
movsb
inc
addr16
mov
std
popa
mov
int3
push
mov
or
loop
call
addr16
cli
pushf
imul
insb
push
out
cltd
xchg
sub
lock
dec
or
jns
ljmp
sub
test
shlb
imul
les
xlat
movsl
mov
and
repz
fidivl
xchg
mov
inc
push
push
and
loop
enter
flds
push
fildll
lahf
inc
stos
daa
mov
jge
les
stc
rorb
dec
test
push
fisttpll
add
test
dec
cltd
jl
sarb
push
sub
test
xchg
loope
pop
pop
xchg
pop
imul
cld
cmp
add
jmp
add
arpl
aad
and
daa
sub
fsts
inc
sub
dec
inc
xor
jns
jns
cli
sbb
repnz
pop
push
pop
adc
adc
nop
pop
into
cmp
in
icebp
sub
pop
xchg
inc
ss
insb
xor
aam
push
add
cmp
pop
out
clc
in
imul
mov
outsb
idivb
add
mov
aas
add
and
mov
inc
aaa
adc
sub
pop
cmp
push
xchg
lret
pop
insl
cmp
repz
fsts
push
jb
adc
add
mov
mov
scas
mov
mov
mov
mov
mov
clc
sub
jg
mov
stos
inc
lahf
jbe
cltd
nop
cli
lock
imul
xor
jecxz
adc
inc
cmp
leave
push
inc
int
pusha
incb
xchg
jae
bound
pusha
and
std
push
jle
jp
std
paddq
or
daa
data16
jmp
push
cs
lods
push
push
lret
stos
jecxz
fs
xlat
out
or
test
clc
test
jecxz
mov
repnz
pop
mov
and
jno
test
sbb
cmpb
xlat
add
and
sub
mov
jno
ja
es
jge
out
xchg
inc
orl
ljmp
inc
and
outsl
inc
inc
inc
pop
insl
adcb
push
adc
pop
pop
es
je
sbb
pusha
repz
gs
inc
sub
mov
in
rol
lds
les
ljmp
and
pop
inc
pop
mov
cld
mov
dec
in
push
int3
stos
repnz
dec
sbb
inc
pop
fnstenv
xchg
adc
call
pusha
or
repnz
jne
insb
int3
jne
mov
mov
lods
push
inc
out
andb
lea
inc
das
xchg
xor
dec
jecxz
mov
jns
mov
dec
testl
inc
xor
push
leave
aad
lods
mov
lcall
sahf
aam
imul
ret
xor
mov
xor
sti
xor
das
jae
insl
mov
sbb
mov
mov
outsb
jmp
lret
fwait
hlt
inc
sub
or
mov
mov
mov
mov
arpl
add
out
outsl
push
cltd
sub
pop
jno
outsl
push
xchg
jl
xchg
and
push
movsl
inc
stos
fwait
clc
repz
fiadds
shrb
ja
lcall
ja
ret
push
fisubl
in
out
das
fisttpll
mov
cmp
jg
pop
into
pop
sub
mov
and
or
inc
scas
std
lea
mov
aad
mov
mov
push
int3
nop
jmp
outsl
testb
inc
jle
movsl
dec
in
xchg
mov
test
cmp
mov
out
inc
xor
fs
sub
xchg
out
call
bound
and
aam
add
int3
sti
scas
push
aaa
sub
mov
test
xor
div
fidivl
out
sbb
dec
leave
push
hlt
cld
rclb
mov
mov
cmpsl
in
add
lea
push
mov
out
pop
js
mov
and
lret
fwait
popa
jb
sub
xor
dec
lret
je
fsubs
aam
xor
test
mov
mov
mov
add
jp
pushf
nop
mov
pop
cmp
sub
or
sar
or
xor
pop
sub
mov
stc
pop
mov
adc
lcall
add
jbe
jne
das
adc
das
js
xchg
mov
in
sbb
xor
cltd
into
jmp
push
lds
jl
jne
or
pop
je
push
adc
lods
ss
shlb
dec
mov
scas
cli
lret
fcmovb
push
or
loop
pop
cmp
call
loope
adc
mov
repnz
les
jp
xor
in
jle
cld
js
xchg
popf
popf
fprem1
push
popf
pop
sahf
mov
prefetch
xchg
sti
pextrw
mov
incl
sub
fisubrl
dec
pop
inc
xchg
jmp
adc
popa
rclb
jae
repnz
sbb
sub
test
inc
dec
mov
add
into
imul
xchg
rolb
aad
in
push
clc
cmp
loop
test
mov
into
and
or
and
xchg
sub
and
pop
div
inc
cmpsb
inc
jnp
call
sub
xchg
mov
frstor
cmpsb
ret
push
movsb
repnz
and
test
and
push
stc
jns
mov
jmp
gs
pop
scas
jg
in
lcall
inc
adc
lcall
je
mov
pop
aad
xchg
cmp
je
cmpsl
push
xchg
test
or
pop
cmp
jl
or
dec
shlb
inc
enter
push
push
or
hlt
cmpsl
mov
add
cmp
cmp
test
movsb
ret
cld
cmp
jmp
call
jp
sub
xchg
mov
subl
push
std
mov
mov
and
push
sahf
jmp
dec
sub
popa
inc
mov
mov
fs
in
cmp
pop
xor
shll
and
aas
jg
mov
xor
xor
bound
xlat
lcall
push
mov
dec
dec
xorb
sub
cmp
ds
in
mov
movsb
loopne
pop
das
lea
popa
rorb
shll
popl
add
dec
push
lret
scas
adc
jb
mov
dec
jbe
gs
je
mov
pop
push
mov
movsl
stc
adc
pop
or
int3
pushf
hlt
mov
lea
xor
repz
mov
and
lock
lret
test
fcomps
out
add
subb
and
add
imul
int3
js
dec
push
std
sub
and
nop
test
aaa
mov
fwait
dec
sbb
inc
xor
add
aaa
sbb
nop
adc
and
sbb
mov
lcall
data16
stos
xlat
cmp
sub
cwtl
roll
fstl
push
js
es
out
lcall
xchg
sahf
sti
cmp
push
fidivrs
jns
dec
stc
mov
dec
push
lret
xchg
dec
sub
push
cmp
sti
dec
in
add
xorl
out
out
stc
jp
scas
sub
in
testb
fstps
mov
push
mov
dec
pushf
loop
lods
addr16
jne
mov
daa
sbb
imul
repz
ja
sarb
int
icebp
pop
fists
xchg
cltd
cmp
mov
stos
dec
mov
push
shrl
ljmp
adc
in
add
movsb
cmp
xor
addl
pop
xchg
rolb
mov
lods
add
dec
sbb
jecxz
sarl
cmp
test
pop
ret
sub
jp
movsb
sahf
sbb
jne
dec
leave
pop
fisttpll
mov
cmc
cmp
inc
fstps
jmp
call
lea
mov
pushf
push
in
adc
movsb
push
jno
cmp
inc
cmp
pop
pushf
pop
pop
jmp
popa
lds
jl
fmull
push
push
dec
adc
or
mov
xchg
pop
cmp
gs
in
sbb
arpl
fstpl
dec
leave
fcomp
sub
scas
mov
sahf
push
arpl
lds
adc
or
cmp
pop
scas
pop
insb
sub
mov
mov
pop
js,pt
push
jle
mov
xchg
lahf
in
mov
push
fstpt
outsb
xchg
mov
push
dec
push
data16
sbb
stc
jno
push
sub
jno
jle
sbb
stos
lock
inc
jae
and
push
insb
mov
sbb
pop
push
mov
shlb
pop
adc
in
jg
cwtl
lret
push
mov
adc
push
ja
mov
fisttpl
daa
jb
jb
pop
xor
inc
in
push
hlt
ljmp
jns
movsb
mov
jmp
mov
inc
xlat
std
movsl
pop
shlb
jecxz
xchg
ds
test
in
sbb
and
lcall
push
push
pop
fwait
ret
ficoms
aad
push
addr16
cpuid
inc
je
mov
add
mov
cltd
and
aad
int3
daa
sub
js
jb
xchg
rep
pop
pop
cmpsl
fwait
jne
cmp
cld
and
ret
daa
push
jno
cmpsb
jbe
mov
outsl
leave
jns
lock
inc
aad
push
sbb
cmp
adc
ljmp
sbb
shlb
ret
scas
fildll
popa
fists
mov
stc
aas
jno
mov
xor
sbb
fimull
ja
mov
mov
mov
mov
adc
sbb
fdivs
into
sub
mov
jecxz
push
ljmp
testb
push
and
divb
xor
test
sbb
pop
and
sarl
and
icebp
loop
arpl
psrlw
dec
mov
xchg
dec
adc
test
jns
movsb
mov
jge
pop
inc
mov
sub
jmp
rcrl
rorb
loopne
and
nop
lcall
repnz
dec
push
jns
push
cmc
fs
xchg
adc
imul
cmp
adc
mov
lods
mov
testl
pop
inc
mov
out
gs
mov
mov
les
out
ljmp
adc
loope
in
and
inc
cmp
scas
mov
and
jb
add
mov
xchg
push
push
lea
mov
insl
sbb
cmp
das
loopne
loope
xlat
or
jne
push
pop
ljmp
mov
cltd
mov
cs
jno
pop
adc
shr
je
mov
ja
iret
pop
mov
pop
les
and
lods
lock
jp
push
andl
addr16
insb
pop
xor
popf
gs
in
cli
dec
add
test
mov
fmuls
xor
and
js
sahf
into
test
dec
pushf
push
imul
icebp
jno
pop
mov
add
test
cmp
pop
fdivrs
xchg
and
popf
mov
adc
insl
iret
int3
orl
jl
and
gs
pop
ja
push
pushl
test
xor
adc
add
jb
pop
les
adc
mov
cmp
call
xchg
xor
lahf
loop
lods
pusha
inc
mov
and
dec
cld
js
orl
and
jbe
xor
push
outsb
cmpsb
mov
sub
pop
lret
jmp
pop
add
loop
cmp
insl
jbe
out
shl
xchg
cmp
mov
mov
jl
jnp
aam
sbb
pop
mov
pushf
insb
out
and
pop
jnp
dec
loop
loopne
inc
inc
dec
push
fbld
in
loope
pushl
out
inc
inc
jae
pop
mov
lods
add
pop
cmovle
lret
mov
js
hlt
xchg
jnp
push
add
ret
dec
gs
jecxz
ror
fidivs
mov
ss
clc
rcr
adc
fisttpll
dec
mov
loopne
pop
lret
sbb
sbb
out
xchg
mov
jle
dec
iret
call
es
cmp
les
jge
cmpsl
pushf
ret
ret
leave
mov
in
cmc
enter
push
mov
fsubs
repz
out
mov
loope
fsubr
add
sbb
fst
stc
dec
sbb
cmc
outsb
outsb
pushf
xchg
cmpsb
pop
lret
add
sbb
das
std
fs
jae
loope
popa
insb
repnz
mov
pop
call
pop
shlb
mov
sub
mov
vpmadcsswd
add
dec
les
out
mov
jmp
cwtl
pop
lods
es
push
mov
mov
and
xor
sub
loop
fistl
test
inc
push
jo
adc
into
fsubrs
push
aam
fnstsw
mov
mov
jg
and
sbb
adc
dec
mov
pop
out
jge
mov
out
and
pop
dec
mov
add
sysexit
push
pop
jecxz
ds
lds
add
fsubrl
idivl
push
mov
sbb
jmp
mov
mov
pop
xchg
iret
push
cmpsb
inc
push
lock
and
xor
and
fwait
fs
jb
je
push
pop
cmp
jg
jb
inc
push
rcrl
inc
dec
hlt
lea
push
movsl
int
and
mov
enter
xchg
cltd
cmpsb
fsubl
ret
stos
out
mov
cli
jae
push
mov
dec
mov
inc
subb
adc
xor
mov
sti
int
loopne
pushf
nop
iret
out
push
xlat
leave
mov
jmp
outsl
adc
xchg
les
movsl
or
ret
push
pop
icebp
les
jge
addr16
push
dec
mov
out
fsubrs
fdivl
lods
mov
ljmp
lock
push
add
pushf
lock
mov
fcomps
inc
sub
or
les
jp
mov
sbb
ja
sub
pop
push
in
mov
insb
test
and
xorb
mov
or
test
sbb
aad
insl
jmp
mov
pop
xchg
pushf
test
hlt
ss
pop
pusha
jmp
test
add
lea
jmp
sbb
sarb
sbb
push
shll
jno
mov
inc
pop
rclb
sub
jl
xorb
ljmp
fs
lahf
pushf
imull
push
cmpsl
cmpsb
and
and
jg
fdivr
jmp
outsl
outsb
gs
ret
mov
int3
add
dec
addl
clc
data16
rcrb
adc
mov
jbe
ja
iret
lock
clc
pop
adc
cltd
xchg
data16
out
rcl
add
test
mov
pop
jae
pop
testb
add
mov
cmp
insl
pop
xor
sarl
jbe
loope
test
fisubs
inc
pop
add
test
ficomps
xchg
cmc
mov
fs
in
adc
aas
gs
sub
sbb
jge
mov
xor
add
xchg
out
int
lea
out
xor
jle
mov
xchg
dec
and
ficoms
xlat
in
nop
ret
clc
jl
adc
push
sbb
je
xorl
inc
lods
push
fidivs
and
or
loope
push
popf
pop
test
fmull
and
std
pop
out
xor
push
jbe
adc
push
pop
imul
lret
cmp
and
mov
jp
lds
pop
mov
xor
loope
rcll
out
sub
in
cld
dec
fwait
dec
repz
or
je
sub
daa
mov
scas
insb
rorl
fmull
cmp
sub
jmp
daa
lods
paddw
or
adc
push
mov
inc
xor
xchg
out
mov
dec
pusha
jo
lcall
jbe
xor
movsb
and
xchg
cs
dec
popf
sahf
aam
mov
outsl
jge
lret
add
push
arpl
icebp
imul
ss
dec
xor
lea
sbb
bound
mov
cmp
push
lock
test
std
aad
inc
cmpsl
and
nop
ret
sbb
testb
jb
ljmp
cmpsl
out
leave
lret
sbb
xor
adc
cltd
dec
imul
dec
sahf
sti
xor
nop
push
adc
out
faddl
sahf
rorl
adc
shrl
fucom
cli
lret
xor
xor
je
pop
adc
movsw
dec
fisubrl
inc
cmc
mov
loope
inc
and
sarb
fs
mov
xlat
in
and
idivb
xchg
std
pop
mov
fs
ja
stos
cmp
pop
sub
or
dec
insl
add
sbb
ret
out
mov
sti
push
pop
inc
jbe
add
mov
fsubl
add
jbe
pop
data16
orl
add
jp
aam
inc
mov
loopne
inc
movsl
jns
les
mov
push
nop
popaw
push
out
and
fidivrs
andb
pop
clc
ret
cmpsl
arpl
push
cmp
out
adc
mov
stc
mov
fsubrs
mov
scas
outsl
xchg
dec
loope
cmp
mov
dec
mov
rcrl
sbb
adc
add
daa
rcl
sbb
inc
mov
ret
aas
inc
mov
out
dec
andb
pushf
orl
loopne
xor
adc
mov
jne
inc
les
test
mov
mov
sbb
mov
outsl
sbb
ret
dec
out
push
xchg
js
or
jbe
addr16
pop
mov
mov
aas
pop
aas
or
lds
xor
nop
cli
and
out
add
pop
cld
test
addl
jne
xchg
fisubl
cli
int3
pop
mov
test
test
push
mov
cmp
or
leave
dec
imul
rcl
mov
insb
mov
scas
mov
movsb
rcll
rcr
mov
lcall
mov
std
mov
dec
roll
sub
scas
fistps
or
lahf
sbbb
inc
pusha
out
dec
sub
add
pop
add
bnd
in
arpl
inc
push
add
sub
mov
fdivrs
mov
cmc
cld
adc
pop
and
gs
filds
inc
lea
mov
sahf
nop
sub
ja
out
mov
mov
ljmp
test
inc
int3
mov
fmuls
in
in
ja
push
sbb
in
fwait
or
jp
fldl2e
adc
adc
call
xchg
cmp
rolb
xor
pop
push
mov
in
sbb
mov
mov
nop
ss
cltd
adc
adc
es
mov
jmp
push
xor
mov
mov
div
movsl
dec
in
nop
mov
sub
cmp
xor
fbld
push
movb
out
xor
add
or
sbb
pop
and
fwait
or
dec
xchg
mov
gs
lds
inc
sahf
jae
and
jne
push
gs
adc
loope
mov
sti
fnstcw
lods
dec
adc
aaa
push
pop
mov
or
scas
stc
lods
xor
mov
out
hlt
mov
xor
int3
mov
xchg
push
dec
in
ljmp
ficompl
pop
add
and
les
mov
fsubrp
and
mov
xor
xlat
mov
fimull
rorb
sub
and
cmp
and
psrlw
add
cmp
shlb
pop
add
fisubrs
jmp
pushf
push
in
lods
mov
es
cmp
push
leave
aas
lea
iret
xchg
inc
mov
mov
int3
fldt
popf
push
push
xor
push
cmpl
insb
dec
mov
es
lret
push
xchg
push
mov
adc
imul
pop
imul
jne
filds
sub
dec
mov
testb
nop
xchg
mov
int3
mov
icebp
mov
pop
sbb
lret
icebp
ljmp
cmp
pop
mov
leave
ret
cli
test
ficoms
sbb
dec
sahf
insb
mov
cmp
pop
pop
inc
xor
xlat
mov
push
add
mov
push
push
mov
and
sti
scas
js
dec
sbb
fucomi
fs
ljmp
cwtl
and
xlat
sub
mov
insl
shrl
aas
cwtl
in
repnz
mov
jo
xchg
push
and
fistpll
cmp
lea
loope
loope
fildll
mov
pushf
rcl
dec
out
ja
mov
push
dec
cs
and
jg
add
mov
cmp
sub
pop
push
or
adc
movsl
adc
rorl
xchg
pop
popa
pop
inc
inc
addr16
comiss
push
lods
aad
push
lods
mov
loop
cmpsl
cmp
outsb
xorb
pusha
sbb
add
clc
jbe
inc
loopne
pushf
stos
sbb
aaa
cmp
mov
flds
mov
xor
add
shll
hlt
cwtl
ljmp
outsb
lea
push
dec
sub
outsl
inc
cli
movsl
pop
dec
fucomi
mov
ror
xchg
out
ss
and
pcmpgtw
mov
std
aam
xchg
xor
adc
stos
inc
jle
stos
add
cmp
mov
pop
dec
bound
shl
dec
lds
std
xor
jle
mov
inc
mov
dec
adc
dec
icebp
js
fs
lods
push
int3
test
jns
adc
xchg
cmp
xor
dec
data16
dec
sub
or
sub
add
leave
xchg
ret
test
jp
add
jp
dec
data16
cmp
push
and
out
test
push
xor
dec
call
pop
mov
fisttpl
daa
jecxz
jge
and
arpl
pop
mov
rol
jg
lods
xor
and
scas
rep
xlat
pop
inc
adc
push
inc
imulb
out
mov
addr16
mov
jg
cmp
vsubsd
fmuls
sub
xor
repz
mov
jb
inc
xor
mov
fildll
jo
aaa
jnp
dec
out
jo
jno
lcall
jmp
adc
xor
jp
mov
ds
xadd
das
pop
add
mov
mov
call
cmp
les
mov
loop
pop
scas
inc
and
fidivs
shll
mov
and
xor
rcrl
jmp
mov
ffree
add
in
jl
cmpb
sti
mov
and
daa
or
push
int
jb
rorl
aam
mov
push
jnp
scas
adc
fwait
aaa
in
popf
lret
roll
pop
jge,pn
xchg
xchg
fstl
in
sub
inc
lcall
lcall
mov
loopne
mov
xlat
sbbl
cmpsb
push
clc
push
mov
xor
inc
test
out
into
test
out
cli
mov
or
sub
push
xchg
sub
adcl
and
sahf
fs
dec
outsb
or
mov
and
call
in
sti
sub
mov
bound
test
popf
addr16
push
ss
jle
lea
jbe
test
mov
insb
lcall
and
jbe
push
dec
lock
xlat
mov
pop
push
xchg
test
jne
shrb
sbb
add
ficomps
int
sarl
sbb
and
in
aad
dec
leave
int3
jge
cmp
cld
and
out
dec
in
lods
sbb
mov
dec
iret
xchg
call
cld
mov
ror
xor
inc
jle
fcompl
int3
cld
xor
and
test
dec
loope
inc
lea
cltd
lock
lret
xor
outsl
xchg
nop
mov
insb
movsb
dec
push
daa
cmp
xor
out
mov
lods
clc
subb
hlt
xchg
inc
pop
push
test
int
xchg
scas
push
cli
dec
and
int
test
jae
jbe
cmp
mov
inc
inc
ljmp
mov
rclb
bound
lcall
out
pop
sbb
and
xchg
movsl
test
xor
dec
lret
dec
das
enter
nop
int
dec
add
mov
sbb
xchg
gs
push
test
cmpl
andl
mov
cmp
jne
aam
and
push
nop
cmp
std
dec
sub
pop
in
sbb
shrb
push
out
lea
sbb
rclb
out
lods
xlat
adc
movsb
jae
xchg
mov
push
jns
xor
fisubl
and
or
inc
sub
push
es
out
ds
in
mov
pop
push
mov
add
repz
shr
xlat
icebp
sbb
add
bound
sbb
jp
mov
leave
mov
hlt
and
xchg
fimull
pop
insl
test
loopne
jmp
sbb
xor
jl
mov
rcr
sahf
push
ds
or
mov
arpl
mov
jno
mov
cld
or
call
int
add
mov
shr
push
sbb
insb
lret
mov
sti
fwait
mov
sbb
repnz
and
adc
cli
lret
sub
sub
xor
das
mov
pop
enter
jge
call
jg
dec
aam
cmpsl
pop
lret
cmpsb
sbb
movsb
in
push
stos
xchg
std
cwtl
or
xchg
mov
sub
loope
dec
xchg
shlb
jb
test
ret
mov
jmp
dec
adc
jmp
adc
lahf
or
popf
mov
bound
stc
mov
lahf
imul
adc
dec
mov
push
mov
push
adc
inc
loop
jne
imul
adc
dec
std
fadds
int3
cmp
fwait
lret
lahf
jae
bound
pop
mov
mov
push
test
or
lods
cld
cmp
repnz
aad
lahf
pop
mov
ljmp
sbb
cmpsb
mov
mov
adc
sbb
int3
jle
je
push
sahf
bound
mov
pushf
fs
jl
inc
mov
popf
rol
mov
cmp
inc
cld
mov
or
fdiv
js
mov
std
lcall
enter
mulb
mov
das
pslld
pusha
push
fwait
cmp
out
int
and
call
pop
and
jo
dec
in
pusha
cmp
inc
add
ss
fs
iret
es
aam
outsl
stos
sub
dec
mov
jp
cmpsl
aas
fwait
and
into
fsts
int3
jg
push
fistps
pop
jns
add
push
dec
mov
sarl
mov
imul
nop
lret
sub
mov
mov
out
popa
pop
sub
sub
mov
popa
popa
jmp
bound
inc
filds
jnp
push
les
and
loop
mov
jae
jne
sti
adc
es
sahf
out
xlat
inc
lahf
adc
push
or
or
add
xchg
ja
test
mov
cmpsl
mov
mov
xor
aaa
jmp
add
push
mov
pop
jl
adc
pop
in
icebp
xchg
fadds
ljmp
lea
dec
adc
sti
cmp
data16
je
cmp
mov
pushf
int3
sub
int3
cmpsb
aaa
inc
dec
cmp
stos
lock
popf
test
add
test
mulb
repnz
or
push
adc
and
xor
rcrb
and
jns
pop
adcb
into
nop
data16
repnz
je
mov
iret
sub
adc
or
cs
popf
push
sbb
ljmp
stc
and
xchg
mov
nop
popf
inc
adc
lcall
sti
add
fisttpl
and
subb
arpl
fbld
cmp
sti
jl
add
inc
arpl
je
xchg
pop
inc
ret
es
push
push
dec
fcmovu
xchg
psrad
ret
inc
mov
push
jne
fs
les
push
test
inc
add
sti
xlat
cmp
xor
jle
sbb
loop
and
sub
sarl
or
jp
ficompl
cmp
shrl
push
in
xchg
dec
sbb
add
popl
into
dec
cmp
sti
mov
mov
cmpb
stos
or
sub
mov
dec
mov
mov
and
xchg
sbb
xor
es
push
cmp
inc
fstl
out
jno
stc
sub
lods
dec
cmpsl
shll
fistl
push
pop
ljmp
fcompl
test
loope
mov
mov
out
push
inc
add
leave
imul
lahf
lds
sub
sub
outsl
test
add
les
dec
add
jecxz
arpl
fneni(8087
jo
addr16
pusha
mov
mov
adc
loop
aaa
push
movsl
bnd
dec
cmpsl
fldl
sub
sub
ret
pop
repz
dec
stos
repnz
les
xchg
mov
cmp
ja
cmp
push
mov
jne
lret
or
mov
or
cmpsl
std
xor
cwtl
and
stos
imul
xlat
cld
aam
fnstcw
ficomps
or
jg
sbb
loope
incl
pop
sbb
mov
jecxz,pn
cmp
jp
gs
ds
andb
pop
jbe
shll
mov
stc
bnd
loop
out
pop
or
jg
lret
incb
scas
mov
pop
jmp
fnsave
mov
scas
scas
cmp
jmp
pop
push
fwait
add
roll
cmc
mov
jno
adc
push
jnp
ss
mov
in
gs
in
sbb
cmp
or
dec
mov
pop
push
in
movsb
xor
leave
jns
ljmp
dec
xor
add
scas
adc
lock
xchg
add
roll
iret
xor
loope
xchg
mov
mov
fwait
adc
jne
mov
jb
rorl
icebp
pop
push
xchg
xor
stc
int3
rolb
sar
imul
adc
xorb
pop
sub
cmp
mov
mov
cmp
sbb
ss
cli
adc
shlb
outsb
cmp
xchg
sahf
or
add
shl
int3
imul
xor
out
addl
insl
jno
inc
sub
or
or
pop
mov
stos
xchg
xor
jle
adc
ja
scas
push
js
mov
cmp
sub
and
out
in
xchg
dec
xchg
js
cs
stc
fstl
fisubs
mov
decb
jp
dec
push
fld
xorl
jge
jno,pn
rcll
std
mov
std
cmp
sub
mov
scas
and
inc
mov
jno
lods
mov
std
mov
sub
jno,pn
dec
inc
aad
mov
mov
dec
cld
mov
xor
cli
aas
xor
in
sarl
sbb
repz
mov
ss
test
pop
or
popa
jo
mov
add
inc
fcmovnu
mov
mov
and
mov
popa
outsb
xor
pop
sub
mov
mov
daa
in
sbb
test
shll
dec
adc
in
adc
dec
mov
xchg
stc
enter
test
sbb
or
push
mov
push
aam
pop
repnz
adc
jbe
xchg
add
js
fcmove
mov
js
stc
jbe
out
jbe
fnstenv
sub
pop
jmp
gs
ljmp
xchg
and
ljmp
xlat
insl
adc
pusha
in
mov
cmp
ficoml
mov
test
dec
or
jnp
inc
dec
aaa
fldcw
in
cmp
fsubr
push
je
adc
sub
mov
and
xor
imul
pop
in
ret
cmp
push
cmp
shlb
or
test
xchg
push
dec
out
sbb
test
bound
jbe
inc
mov
mov
pop
jmp
push
subb
test
mov
out
cmp
pop
je
daa
stos
or
jmp
cmp
adc
mulb
xor
or
push
push
popf
cs
and
inc
and
or
repnz
push
fisttpll
push
or
das
push
mov
test
je
xchg
xchg
mov
mov
test
enter
js
out
xor
arpl
fs
cmpsb
popa
sub
sub
dec
jne
repnz
imul
xlat
fwait
cmp
inc
in
ret
cltd
test
mov
lds
pop
jbe
cmp
aad
add
sub
jmp
repnz
ljmp
leave
xlat
cmp
push
jns
push
jg
mov
adc
cmp
add
lock
push
push
pop
and
xchg
icebp
fcoml
cmp
imull
cmpsl
push
sbb
pushf
push
stc
jge
loop
jo
leave
loopne
icebp
cmp
pop
jg
lods
jae
jp
or
loope
adc
mov
insl
repz
je
aas
pop
adc
sub
sub
fisttpl
jl
add
cmc
push
fnstsw
aad
xor
add
xchg
push
daa
sub
fstpt
cmp
into
mov
push
das
cmp
movsl
stc
push
lret
mov
push
arpl
jle
xchg
push
out
ret
popa
pop
lods
std
cmp
mov
push
push
fistps
xchg
in
lds
and
xchg
scas
nop
stos
jae
xor
in
and
adc
int
js
and
sbb
inc
frstor
gs
pop
loop
ljmp
mul
pusha
mov
mov
stos
dec
mov
xchg
mov
or
and
gs
jae
stos
mov
jmp
sub
pop
xchg
dec
and
push
lcall
stos
pop
mov
mov
fwait
inc
adc
or
xchg
jb
or
push
sbb
add
ret
fldcw
lcall
and
mov
fcoml
jl
lods
cmp
xchg
pop
push
out
sbb
xchg
es
lcall
aam
out
cmc
mov
xor
outsb
adc
dec
outsb
mov
pushf
mov
xchg
xor
add
xorb
jecxz
push
jmp
inc
aam
pusha
sbb
sahf
xchg
xor
ss
sub
fildl
lcall
sahf
stc
xchg
pop
cmc
xor
aam
lret
repz
insl
add
addr16
sub
cmp
loope
iret
jle
nop
aad
add
incl
push
mov
jle
dec
divb
inc
es
jb
lods
fwait
jne
stos
mov
push
xor
sahf
jmp
icebp
fcoms
mov
fmull
test
das
adc
sub
scas
pop
cmp
in
les
int
pop
rclb
cmc
mov
test
xor
mov
xchg
mov
cltd
push
push
adc
outsb
aam
dec
jae
shrb
and
push
sbb
aaa
xchg
cmp
mov
sbb
ljmp
push
test
out
mov
add
scas
mov
mov
stos
das
pop
xchg
jecxz
jnp
sbb
test
pushf
mov
arpl
inc
int3
sbb
adc
mull
push
inc
cmpsb
aas
stos
cwtl
sub
mov
adc
ret
xlat
adc
pop
pushw
jb
push
cld
cmp
stc
add
mov
and
jb
xchg
fucomi
repnz
mov
fcmovb
aas
jp
ret
mov
aad
ret
adc
fmuls
mov
sbb
jl
xchg
mov
iret
dec
pop
fildll
test
jmp
add
pop
das
xchg
repnz
push
sarl
jns
pop
mov
pop
fidivrl
mov
in
xor
adc
mov
aam
popa
stos
dec
cld
ds
neg
dec
je
xchg
pop
addr16
in
outsb
and
lret
negb
cs
inc
hlt
xchg
mov
out
or
leave
cwtl
rcrb
xchg
jnp
pop
lock
xor
pop
sbb
cmp
push
pop
or
mov
mov
mov
push
xlat
xor
bound
push
cli
fisttps
adc
in
outsb
jecxz
gs
push
add
mov
cltd
lods
out
lcall
lods
adc
outsb
stc
xchg
mov
sub
push
cltd
pop
and
orb
in
inc
pop
push
fldl
rcr
xchg
jbe
dec
fildll
push
cmpl
push
into
pushf
ficomps
inc
test
call
push
sub
gs
xor
mov
mov
cmp
xor
sbb
jmp
les
xchg
outsl
nop
adc
lahf
arpl
aad
in
repz
sbb
fwait
cmp
int
xchg
data16
adc
ja
testb
push
add
push
lcall
arpl
jo
mov
divl
daa
out
inc
sub
mov
and
mov
and
pop
out
inc
cmp
enter
in
pop
and
out
jle
sbb
rorb
xchg
push
stos
cmp
incb
dec
mov
addr16
xadd
mov
inc
mov
pushl
and
mov
nop
xchg
mov
ficomps
dec
inc
insl
or
xor
dec
std
jle
test
in
inc
mov
mov
jl
loop
arpl
and
mov
cld
or
xchg
movsb
and
cmpsb
scas
gs
add
or
jp
daa
in
xor
sub
movl
pop
ss
mov
add
imulb
cs
lcall
outsb
cmp
jmp
fsubs
fimuls
mov
add
xchg
mov
orb
loop
test
mov
push
mov
cld
xor
cmp
jns
xchg
into
lret
sbb
xchg
sbb
in
stos
icebp
mov
jno
mull
imul
dec
loopne
jge
mov
jo
jecxz
mov
or
xor
ret
push
jae
adc
out
sbb
adc
adc
adc
inc
dec
adc
pop
cs
mov
sbb
pop
jno
cmp
stos
icebp
rcrb
dec
adc
ja
mov
nop
sahf
inc
cli
lahf
nop
dec
mov
jge
aas
dec
ljmp
fimuls
cmpsl
xor
pop
xchg
repnz
dec
movsl
mov
adc
dec
jnp
pop
mov
lcall
pop
sbb
xchg
pop
jmp
sbb
cld
clc
mov
into
jge
push
lods
je
dec
mov
stc
pop
mov
or
scas
push
mov
xor
adc
fmulp
jp
fimuls
adc
fmul
andl
xchg
xchg
mov
add
mov
lcall
std
fnsave
xor
mov
push
cmp
pop
xor
cmp
pop
push
mov
jmp
mov
cmp
jae
pop
lcall
pop
sub
popf
std
sub
inc
xchg
sbb
fnsave
xlat
ljmp
in
in
in
aam
popf
push
fiaddl
into
jge
sahf
hlt
pop
jb
std
cwtl
add
xchg
addr16
mov
add
and
cltd
es
pop
lcall
mov
imul
lods
orb
out
jae
sbb
rorb
mov
and
jb
outsl
ljmp
inc
insl
js
pop
fbld
mov
mov
rclb
je
shrb
mov
fsubs
mov
lret
jle
pop
popf
imul
jbe
imul
jb
movsl
jg
mov
in
dec
pop
jnp
mov
rcrb
pop
aaa
cmpsl
les
enter
mov
jl
adc
jnp
mov
inc
popf
imul
adc
xchg
pushf
add
clc
scas
adc
mov
loopne
dec
cmc
cmp
pop
xchg
push
mov
dec
xor
aad
mov
cld
bound
xlat
subl
xchg
adc
xor
or
jo
jae
in
xchg
out
out
ficoms
adc
pop
mov
or
cmp
cmp
xchg
fnstcw
je
xchg
sti
push
mov
repnz
sub
mov
mov
xorl
jne
es
popf
cltd
and
push
arpl
or
fidivrs
rcll
mov
fldt
add
inc
mov
xor
fsubl
pop
loop
es
xchg
xchg
dec
mov
mov
adc
dec
push
pop
pop
pop
mov
mov
sahf
cmc
mov
xorb
cltd
test
lds
test
test
jg
inc
push
dec
inc
pop
or
mov
out
sub
xor
or
and
fwait
scas
sub
test
aas
mov
int3
sub
mov
dec
sbb
out
clflush
jbe
lcall
pop
push
sub
push
mov
mov
dec
bound
test
push
shl
jmp
adc
mov
iret
lods
arpl
cs
cmp
sub
addr16
aas
push
ja
imul
fidivrs
cmp
lea
pop
pop
dec
inc
mov
push
das
push
lcall
xchg
lds
inc
pop
cmp
popf
fistpll
fisubl
jmp
xchg
cmpsb
cwtl
push
dec
add
mov
inc
dec
xchg
rcrl
or
or
and
in
rolb
jge
lcall
push
jmp
pop
testl
and
cltd
adc
push
test
stos
sarb
ret
cmpb
repnz
adc
xchg
inc
arpl
push
mov
cmpsb
out
or
jbe
xchg
ror
fnsave
xor
les
testl
cmp
cmpsb
inc
fsubl
enter
gs
and
jmp
popf
lcall
mov
scas
dec
pop
or
mov
mov
ljmp
mov
ss
aas
lcall
ds
fdivrp
fldl
pop
push
es
ffreep
in
ficoms
sbb
dec
xor
enter
imul
data16
mov
hlt
or
xchg
jecxz
out
add
or
lods
xchg
mov
out
in
or
add
xor
inc
sub
xor
pop
jne
popf
xor
sti
mov
arpl
sub
sbb
aas
xchg
into
or
ja
add
bswap
xchg
out
sbb
cmpsb
shll
cld
push
inc
hlt
cli
ljmp
pop
xor
mov
cmp
adc
test
cli
call
push
outsb
addr16
xchg
pushf
mov
popf
xor
sbb
stos
test
in
pop
jbe
add
imul
jmp
lods
push
and
xor
int
xchg
adc
sbb
pop
in
push
mov
orb
pop
stos
mov
int
add
sbb
jnp
or
ljmp
mov
mov
sbb
mov
inc
lea
int3
push
push
popf
aas
lds
stos
jmp
mov
push
sbb
in
js
mov
ret
orl
pop
pop
ds
jle
xor
repnz
push
or
cli
es
adc
mov
pop
outsl
jae
dec
add
shll
push
out
jge
push
ja
sbb
push
stos
mov
push
mov
xor
xor
ret
aaa
loope
rol
in
mov
rcrl
jmp
cmc
xor
dec
shll
cli
jns
push
add
mov
mov
jo
adc
adc
lahf
clc
jo
shll
xchg
push
outsb
push
fistpl
mov
add
outsb
fildl
sub
aas
dec
pop
lock
push
out
mov
pushf
cltd
xor
and
sbb
aam
add
inc
test
push
movsb
out
mov
notb
or
push
sub
push
aaa
pop
mov
in
dec
mov
jo
push
movsl
stos
jp
adc
pop
aas
dec
rclb
loopne
cltd
dec
inc
sub
dec
mov
leave
pushf
imul
test
xchg
hlt
insb
push
add
lahf
cld
inc
in
sub
adc
call
or
fsub
mov
sti
or
pop
mov
dec
mov
jne
push
push
fcomip
sbb
in
es
sub
enter
repnz
pop
call
test
add
sub
and
idivb
call
in
loope
pand
jns
mov
scas
inc
out
mov
jle,pn
cmp
rorb
fidivs
mov
cltd
addr16
cmpsl
das
cmpsb
mov
dec
xlat
and
fistpll
jbe
mov
inc
jp
jl
jge
and
ficompl
inc
jmp
sub
mov
adc
pop
mov
xor
cwtl
in
out
cmp
cmpsb
imull
pop
dec
int3
pop
pop
xchg
sbb
add
lahf
jecxz
movsb
lock
test
int
mov
out
xchg
loope
sbb
sbb
in
popf
je
stc
pop
mov
xor
or
pop
xor
cmc
jno
push
or
dec
mov
xchg
out
mov
out
or
sub
jge
push
data16
xor
jbe
std
and
sub
hlt
fcomps
jne
sub
sbb
ss
inc
icebp
jno
addr16
cmpsb
aaa
mov
cwtl
xorb
adc
fucom
jge
inc
lds
sbb
push
xchg
test
or
pop
popf
jecxz
in
push
mov
pop
cltd
lret
xor
out
dec
popf
sbb
insb
insb
inc
and
mov
into
xchg
xchg
fstpl
jle
test
or
dec
mov
sbb
jle
fstpt
pusha
cs
mov
and
roll
mov
cld
stos
add
xchg
inc
aad
xchg
xchg
lods
fs
xchg
fildll
adc
cmpsl
xlat
fstps
cmp
lock
xchg
sub
cmp
xor
or
or
in
stos
pop
pushf
add
lods
lret
ss
adc
pop
aas
mov
decb
jb
int3
mov
push
jbe
ficoml
ret
outsb
sbb
xchg
push
cmpsl
inc
idivl
loop
and
mov
mov
loopne
sub
mov
clc
out
out
mov
repz
inc
std
stos
ret
ret
sbb
out
sub
sub
cmc
add
testb
mov
mov
cmpsl
sub
scas
dec
out
mov
and
pop
mov
std
popf
inc
xchg
clc
sbb
shrb
mov
add
jns
ja
and
cmp
add
cmp
movsb
movb
inc
stc
loopne
adc
loopne
jne
xorl
gs
mov
pop
sbb
lea
mov
lock
clc
popl
pushf
xchg
pop
ret
out
cmp
mov
or
mov
orl
mov
mov
jge
js
sbb
fnstsw
jle
in
sub
fnstsw
cmp
mull
push
int
ja
cmp
in
xor
fmuls
adc
call
insl
adc
jle
arpl
adc
sti
fcomps
inc
xchg
gs
cmpsb
stos
jae
mov
fisttpl
cmpsl
nop
stos
in
stos
les
or
sahf
in
pushf
pop
add
test
leave
shlb
sysret
imul
mov
jbe
aad
aad
add
scas
outsl
push
lahf
jo
addr16
test
and
loop
enter
in
jb
sbb
loopne
sub
enter
pusha
push
sarb
dec
cli
ficomps
test
aas
imul
aas
cld
mov
rclb
pop
clc
arpl
or
lock
jge
insl
jmp
insl
cmp
jnp
pusha
jl
aam
nop
sub
xor
mov
xchg
insl
push
sbb
jne
les
lahf
adcl
sub
or
dec
pop
andl
or
hlt
dec
jae
jb
mov
pop
inc
out
aaa
lds
and
aaa
aam
lcall
inc
inc
adc
mov
cmp
aas
xor
push
fists
pop
pop
nop
int
mulb
mov
push
lods
sbb
out
jb
adcl
xor
call
aad
lret
pop
push
pop
push
sbb
test
cs
and
mov
and
mov
mov
jge
jno
mov
xor
imul
inc
or
hlt
lods
cmp
clc
cmc
sbb
sub
sbb
cmp
push
dec
push
es
add
ret
lock
shl
aad
lcall
and
adc
ret
xchg
mov
jns
adc
sub
push
dec
testb
mov
imul
int3
out
cs
sub
cmc
dec
cmpsl
jmp
sbb
sti
pusha
xchg
sub
nop
jae
mov
fs
sbb
cmp
outsl
adc
jg
mov
in
adc
sbb
adc
psubsb
and
sbb
into
dec
cmp
push
mov
call
xchg
out
imul
pushf
mov
push
jmp
lds
decl
xor
add
xchg
inc
jecxz
jle
ja
in
and
pop
repnz
or
and
js
push
nop
loop
inc
shl
out
dec
xor
ret
xchg
bound
mov
das
test
xor
sub
adc
imul
iret
movsb
outsl
sbb
pop
mov
das
cmp
cmp
cltd
shll
gs
adc
mov
push
repnz
jbe
push
push
iret
psubd
inc
out
push
decl
fcompl
out
inc
sub
sbb
out
rorl
mov
mov
dec
out
adc
add
daa
inc
mov
fidivrs
push
pop
popa
sbb
pop
mov
cmpsb
cmp
jno
jecxz
push
rolb
lock
leave
data16
jge
mov
ret
pop
sub
mov
nop
shr
mov
jb
pop
cmpsb
pushf
xchg
sub
push
repz
addr16
pop
ja
in
pop
nop
pop
repz
imul
int
inc
xchg
outsb
jge
push
out
xor
cmpsl
add
mov
insb
inc
in
pop
inc
inc
mov
xor
cmp
das
testl
mov
mov
jmp
and
popf
das
fbld
insl
and
sbb
mov
xlat
fldl
add
mov
sbb
ja
and
insl
in
or
mov
adc
mov
push
mov
inc
add
sub
add
xorb
inc
push
add
xchg
int
stos
pop
aad
or
push
movsb
lock
mov
shll
mov
dec
clc
dec
js
shr
dec
sub
cmp
inc
sbb
lock
js
inc
dec
xchg
sbb
icebp
insl
fcmovbe
rcl
dec
inc
dec
test
push
fstl
mov
test
adc
div
out
fwait
mov
inc
push
mov
lcall
cmp
in
pushf
popf
mov
jnp
std
addr16
cmp
out
dec
cmc
cmp
mov
mov
call
mov
push
mov
mov
test
xor
mov
dec
imul
fidivs
movsb
xor
icebp
into
mov
dec
stc
rcrb
js
shll
jo
sub
imul
repz
mov
out
jle
push
cmc
add
jg
aaa
mov
mov
cli
cmp
mov
test
mov
out
mov
and
jg
stos
mov
mov
cmp
leave
out
iret
and
lret
jne
jb
pop
hlt
mov
dec
stos
lret
cld
outsl
pop
test
xchg
bound
fdivrs
das
cwtl
leave
add
lea
in
push
sbb
push
sub
xchg
aas
mov
test
pop
ss
cmp
mov
lock
cwtl
out
decl
lcall
sbb
jo
lds
out
mov
aam
stos
ss
cmp
adc
clc
loop
push
sub
movsl
sbb
cmp
mov
sub
clc
add
adc
orb
dec
cli
repz
and
scas
push
inc
mov
in
sbb
comiss
mov
cmp
sub
iret
cmp
and
mov
push
pop
int3
pop
and
mov
test
adc
rcrb
pop
mov
sbb
or
fsubrs
call
mov
jmp
nop
sahf
sti
icebp
mov
fstl
sbb
xor
push
pushl
data16
push
or
xchg
subl
aas
in
lret
push
and
xchg
xor
sub
and
adc
out
xchg
popa
mov
lret
push
int3
mov
rolb
lods
cwtl
push
push
xor
out
out
inc
push
lods
dec
mov
and
jl
outsl
fwait
sub
dec
cmpsb
fsubr
xor
mov
inc
pop
cld
movb
sbbl
sub
ret
mov
cmp
push
arpl
fbstp
arpl
push
repz
pop
cltd
mov
jns
mov
xchg
sub
int
cmc
xor
or
jg
mov
jne
aad
cmp
add
inc
xor
sub
xchg
inc
jp
paddd
mov
add
insl
mov
dec
in
rcll
cltd
out
mov
sbb
int
mov
sub
icebp
mov
popf
cmpb
fidivrl
pop
add
mov
divl
andl
mov
or
pop
mov
mov
outsl
daa
mov
lea
js
jne
shr
xchg
in
in
test
mov
in
cmp
sub
jge
fs
arpl
mov
dec
lock
mov
jns
adc
jnp
add
mov
or
inc
mov
mov
popf
test
xchg
mov
sub
pop
iret
xor
sbb
sahf
sbb
sub
pop
mov
idivb
hlt
add
fdivrs
pop
adc
out
addl
fcmovne
movsl
lcall
roll
ret
cltd
sbb
stc
push
and
ja
gs
es
int
ljmp
or
and
stos
dec
sub
jecxz
and
iret
xchg
in
pop
ds
popa
call
pop
sbb
sti
mov
stos
jmp
mov
and
fisubs
in
insl
lret
or
or
pop
mov
or
stc
rorl
outsl
je
mov
add
jge
xchg
pushf
packuswb
cmpsb
std
daa
mov
add
mov
xchg
mov
mov
sbb
popf
pop
out
xchg
push
lret
add
sub
or
and
fldl
filds
movsl
push
nop
adc
jne
cmp
mov
scas
jbe
add
jae
jp
mov
into
aaa
dec
sbb
aaa
lahf
insb
xor
popf
test
addr16
popf
inc
inc
test
xchg
lret
aas
loope
jl
pop
movsl
mov
cs
sbb
pop
adc
outsb
cli
and
add
mov
fs
std
lods
insl
push
or
inc
cmpb
cmp
or
ret
xor
xor
xchg
pop
jb
and
mov
clc
pushl
in
jmp
outsb
mov
pop
ss
jecxz
pop
mov
jbe
leave
and
lock
xchg
outsl
movsl
outsb
gs
popf
loope
mov
leave
fdiv
mov
pusha
ja
push
fadd
adc
xor
jge
pop
mov
mov
insb
dec
imulb
fnstsw
sub
jno
and
sub
inc
add
outsl
mov
xchg
mov
mov
dec
pop
bound
and
notb
lea
js
cs
mov
mov
mov
inc
stc
insb
std
xor
inc
inc
sar
xchg
fsubrp
mov
push
in
inc
inc
gs
clc
pop
push
xor
or
mov
cmpsl
jl
fcomps
xchg
iret
ljmp
out
xor
andl
xchg
mov
xadd
pop
mov
fimuls
mov
loopne
movsb
lock
aaa
sub
mov
addr16
mov
gs
aas
cmpsb
adc
cmp
scas
sbb
mul
pop
mov
dec
rcrl
in
mul
stos
aas
sub
xchg
jns
scas
mov
addb
les
mov
ja
and
scas
hlt
pop
cmpsl
jno
jnp
inc
pop
pop
cmpsb
push
mov
repz
jns
fcmovb
mov
into
mov
scas
cmp
mov
xchg
mov
mov
cmp
mov
adc
jb
cmp
adc
jne
push
cmpsb
aas
les
add
sub
sbb
xchg
lret
enter
mov
sub
mov
cmp
aaa
sahf
lcall
dec
ss
inc
or
mov
cmpsb
mov
pop
sbb
gs
cs
jae
cmp
mov
fdivrs
xchg
addb
cmp
addb
jecxz
test
xor
ljmp
test
insl
jb
jb
inc
xchg
je
mov
shl
ja
lea
pop
in
not
in
and
jle
cmpsl
adc
shrl
aas
xchg
or
push
insb
push
mov
ja
sbb
cmpsb
out
add
pop
fistps
xchg
aad
adc
adc
aaa
adc
fstpl
xor
jmp
lds
or
es
or
ret
out
fisubrs
sarl
add
sbb
cmp
jae
out
fs
stos
and
dec
adc
jp
adc
inc
cmp
push
add
lahf
mov
and
inc
into
and
rcl
xor
gs
out
int3
dec
or
push
dec
jle
lods
sub
or
or
sub
jae
rorb
les
mov
push
mov
and
cmp
mov
adc
aas
jno
push
mov
pop
js
scas
fisubrs
jmp
push
popf
loop
and
adc
mov
cmovo
or
stos
cmp
adc
ret
push
push
sbb
int
mov
pop
mov
pushf
inc
mov
out
lods
sbbb
or
pop
cmp
cmp
ss
shl
push
cwtl
add
sbb
inc
jecxz
mov
ja
mov
ss
pop
mov
push
test
push
push
loopne
out
mov
fldt
and
adc
pop
jle
pop
rcrl
mov
repnz
mov
dec
nop
and
jns
jmp
adcl
xlat
aad
mov
in
ja
cld
mov
cmc
ss
clc
lahf
or
cs
xchg
mov
jb
sbb
cmc
sub
notb
ja
mov
push
out
dec
sub
fistl
repnz
jnp
inc
or
xor
mov
push
in
lahf
faddl
icebp
or
in
jle
stos
push
repz
in
cltd
mov
mov
push
fs
mov
fs
je
stc
or
lret
dec
fidivrs
lahf
xor
imul
sti
loopne
popf
icebp
push
mov
push
xor
add
sub
fidivs
repz
js
cld
movb
outsl
mov
ret
mov
sahf
ds
add
pop
cwtl
lock
cmp
pop
pop
into
adcl
lret
mov
cmp
adc
cmp
sub
js
adc
std
or
or
inc
jecxz
mov
xor
and
mov
push
xchg
xchg
jmp
pop
mov
xchg
mov
outsl
push
std
cmp
sub
dec
test
iret
arpl
mov
jp
mov
loope
jecxz
mov
cld
mov
movsb
xor
inc
ret
cmp
mov
xchg
out
push
pop
aad
imulb
stos
ds
mov
cwtl
xor
sub
sbb
mov
aas
jecxz
adc
mov
test
ffreep
dec
dec
dec
push
mov
pushf
sbb
aas
xchg
cmp
push
in
cwtl
and
movsl
push
insb
out
mov
mov
push
data16
push
scas
cmpb
notb
fwait
push
inc
stc
jmp
subb
lods
lcall
icebp
ficompl
jle
shlb
mov
stc
add
ret
out
dec
sub
shrl
data16
cmp
cmp
push
dec
into
mov
push
bound
or
jl
ficomps
cli
int3
or
push
mov
int3
cmp
test
mov
fmull
scas
mov
je
cmp
sbb
add
ja
test
inc
mov
mov
cmp
icebp
push
daa
sub
out
add
lret
jmp
out
test
js
add
test
jne
add
ljmp
push
fcom
int
xor
lods
add
or
ss
rcrb
and
js
inc
pop
and
and
shll
pop
pushf
fisubl
and
xchg
mov
rclb
in
faddl
mov
adc
jle
shll
andl
pop
lock
or
shll
and
jb
add
dec
fcompl
jg
clc
xchg
mov
jnp
push
xchg
in
push
push
sub
into
xor
sub
or
sbb
into
mov
cmp
loope
xor
daa
pusha
pop
decb
std
mov
js
stc
mov
mov
sbb
lret
inc
sub
loop
fisubrs
xlat
pop
jg
lret
mov
jnp
adc
and
jmp
jp
jne
add
mov
daa
nop
xchg
cli
jmp
mov
and
push
pushf
shl
jnp
add
mov
xchg
out
adc
lahf
movsl
push
mov
sub
push
in
sbb
mov
add
xor
out
inc
aam
inc
jg
sub
mov
ljmp
aad
mov
imul
xor
aam
aam
cmp
pushf
mov
repnz
xchg
sub
nop
ss
dec
loope
add
cmp
movsb
std
xchg
push
test
add
idiv
push
push
jbe
xchg
fcomi
loop
bound
sbb
adc
lods
nop
lea
loope
shl
in
sbb
mov
lock
pop
dec
cmp
cmpsl
mov
mov
mov
cmc
xchg
push
aaa
mov
sub
xchg
cmp
leave
in
cld
lods
sbb
jge
bound
jg
pop
aad
cmpsb
and
dec
stos
mov
in
sbb
sbb
cs
int3
notl
scas
dec
std
stc
stc
sub
push
in
daa
or
outsb
dec
inc
inc
push
aas
mov
in
repz
mov
mov
popa
adc
xchg
in
sbb
push
fistps
pop
pop
xor
imul
add
add
push
xchg
xor
mov
inc
in
sbb
cmp
lcall
jge
stc
jle
test
lcall
sub
mov
in
stc
xor
pushw
jae
adc
rclb
sbb
ja
xor
ljmp
lea
mov
dec
call
andl
ds
scas
mov
or
dec
mov
add
pop
fcmove
in
jl
mov
stos
jae
push
mov
mov
push
jae
cmc
insl
xchg
enter
jmp
pop
scas
jp
fdivr
movsl
sbb
mov
jg
es
mov
cld
xchg
stos
pop
jns
dec
sub
mov
jecxz
xchg
movsl
add
xlat
into
mov
mov
in
pop
cltd
sti
lret
outsb
lcall
dec
insb
mov
iret
ret
loope
sbb
push
dec
icebp
sbb
clc
or
imul
imul
and
pop
mov
imul
jb
aam
ds
je
bound
push
pop
inc
xor
sbb
dec
jne
xchg
push
insb
jg
inc
repz
mov
dec
stos
pop
and
and
stos
test
push
pop
xor
out
jnp
sub
add
jnp
iret
jmp
bswap
mov
nop
push
mov
cmp
mov
mov
lea
cmpsl
shrb
subb
sub
aaa
lret
push
jns
and
clc
fdivr
gs
sahf
in
dec
repnz
aad
sub
pop
adc
sub
data16
add
add
jmp
inc
mov
sbb
mov
sbbb
fs
xchg
and
dec
mov
add
nop
mov
mov
or
or
movsl
fwait
addb
dec
and
and
lds
xchg
or
add
pushf
cmp
xor
and
ret
imul
mov
sbb
in
arpl
xor
sub
ret
mov
pushf
insl
or
jns
loope
sbb
ljmp
outsl
mov
int3
inc
scas
push
loope
mov
pop
lods
stos
aas
out
mov
pop
add
or
jo
fiadds
outsl
cmpsl
cmc
jbe
mov
mov
loop
hlt
lcall
sbb
jmp
adc
inc
ret
rolb
repnz
adc
and
pop
lea
pop
scas
inc
int3
mov
sbb
lods
xor
sbb
mov
mov
or
xor
jp
jo
in
jne
lcall
push
stos
mov
push
and
add
rorb
xchg
xor
sahf
popl
out
add
out
add
es
and
inc
dec
add
fwait
negb
sub
pop
adc
sub
sub
dec
mov
clc
pop
cmpsb
or
pop
outsb
cmpsl
sahf
inc
sbbb
fwait
int
or
cli
mov
mov
pop
in
jno
mov
xchg
jo
out
xor
mov
loop
mov
movsl
push
jl
xchg
sbb
sub
rolb
je
cld
clc
sbb
popf
aad
outsl
pushf
push
mov
sbb
inc
mov
xlat
sbb
mov
xchg
ss
lcall
sub
lds
mov
push
mov
sub
popf
and
or
and
and
lcall
push
mov
dec
and
cwtl
in
negb
test
cmp
repz
repnz
cmp
out
in
add
out
adc
cmpsb
ja
ficomps
push
aad
sbb
push
hlt
xor
cltd
sahf
cmc
cmp
mov
xchg
dec
or
neg
inc
mov
xchg
sahf
sbb
add
fwait
je
or
cwtl
jae
xchg
inc
rol
fs
jp
cli
imul
sub
insb
repnz
or
ret
cld
add
mov
pop
mov
std
mov
fsubrs
pop
push
mov
rolb
fstl
mov
pop
lahf
jge
sub
add
push
jno
stos
push
nop
fs
xchg
bound
call
xchg
ret
mov
cmpsl
lock
xchg
jl
popf
mov
push
popa
notb
or
and
xchg
inc
or
stos
jns
jo
pop
pop
push
setae
loop
insb
std
pop
lcall
fstpt
xlat
lret
jb
pop
push
ss
jecxz
push
push
xchg
mov
mov
inc
cmc
in
mov
or
push
and
sti
int
pop
arpl
test
push
mov
iret
xchg
add
insb
cld
push
loopne
jg
out
fstpl
push
push
out
inc
cmp
pop
cwtl
test
into
jnp
jbe
inc
pop
lea
stc
sub
or
in
mov
int
mov
push
or
out
adc
xor
popf
rcl
lahf
adc
push
cmc
lcall
sub
pushf
mov
pop
stc
fs
fmull
mov
dec
shrb
cmp
mov
lret
adc
push
dec
dec
cltd
pop
sub
dec
pushl
push
xorb
in
dec
mov
rclb
xor
js
add
cmp
sti
gs
dec
dec
and
add
int
and
mul
fmull
push
lods
jnp
pushf
xchg
lods
inc
cwtl
push
out
clc
das
xchg
sub
shrl
cmpsl
mov
jno
fwait
adc
ljmp
lock
or
push
sub
mov
rolb
lahf
mov
xor
das
rorb
fs
sti
int
test
repnz
add
pop
push
push
mov
gs
xor
fwait
cwtl
lret
orb
add
into
aad
sub
rol
fdivs
adc
xchg
mov
pop
fistpll
cmp
sub
fcomps
push
jmp
push
mov
push
xor
clc
mov
push
mov
insl
fildl
sti
cwtl
fnstcw
outsl
dec
insl
scas
mov
cs
jae
sbb
cmp
or
aad
push
jl
jbe
mov
in
inc
cmp
imul
mov
jo
inc
add
adc
pop
cwtl
xor
sahf
into
inc
lock
and
xchg
imul
ds
jmp
add
sub
and
adcl
andb
out
sbbl
leave
loop
mov
or
into
fildll
jge
adc
mov
mov
pop
mul
push
iret
aam
pop
push
jg
cmp
aad
push
test
push
fstpl
ss
ss
cs
adc
pop
hlt
mov
xchg
cmp
outsb
jle
cmpsl
or
dec
neg
pop
daa
mov
mov
lahf
sti
movsb
pop
inc
push
stos
mov
mov
in
dec
mov
sub
add
jns
add
inc
inc
mov
pop
and
pusha
stos
dec
xchg
xchg
and
pop
inc
ja
mov
out
xor
repnz
in
orl
pop
or
sti
push
or
jmp
xchg
insl
in
pusha
lret
cmp
fstpt
pusha
sbb
or
mov
add
inc
sub
inc
pop
adc
shl
adc
rcll
nop
fldt
in
scas
cs
mov
arpl
hlt
sbb
cld
imul
popf
mov
push
test
jg
cmpsb
xor
cmc
mov
adc
pop
lods
or
push
rcl
mov
jmp
cmp
or
xchg
jle
fwait
cmp
insb
or
add
loop
iret
inc
inc
mov
lock
push
mov
pop
imul
cli
xlat
popf
dec
insl
stc
mov
andl
cmp
scas
out
inc
mov
inc
xchg
daa
mov
fsub
inc
mov
pop
push
repnz
std
or
mov
insl
dec
iret
add
hlt
cmp
jmp
sub
mov
mov
icebp
sbb
xchg
fidivrs
mov
cmc
fists
das
adc
jno
xchg
fsubrs
mov
std
jae
jmp
scas
add
jae
pop
loope
push
adc
lods
dec
popa
addr16
jecxz
sub
dec
pop
add
not
xchg
xchg
mov
fildl
pop
fldl
insb
mov
mov
pop
jo
sbb
sub
pop
fisubrs
pop
ret
mov
imul
adc
popa
insl
scas
push
je
push
xchg
imul
fistps
xor
shl
lret
mov
cmp
pop
mov
add
sti
pop
rorl
dec
out
pop
sub
inc
dec
flds
push
stos
jnp
subb
push
inc
outsl
sbb
addl
fsubl
arpl
dec
pop
jl
cmp
lods
clc
je
adc
cs
ret
xchg
rcrl
cmpsl
cmpsl
popf
and
xor
or
or
xor
jo
dec
xchg
mov
xchg
in
jp
outsb
aam
repz
aaa
loope
fdivrp
icebp
mov
aam
and
pusha
mov
dec
add
subb
fildl
hlt
add
cmpsb
aaa
lahf
mov
jo
daa
jp
xor
adc
aas
in
pop
hlt
fnstcw
in
cmp
xchg
cmpsb
jg
jge
outsl
jecxz
adc
sahf
and
sbb
mov
xchg
stos
xlat
dec
cmpsl
aas
mov
push
jo
mov
popf
clc
add
push
nop
push
and
jb
andl
sbb
and
mov
inc
sbb
pop
or
mov
inc
ja
xor
dec
out
mov
xchg
subl
aam
xchg
cmp
sbb
mov
ljmp
lea
xlat
mov
and
lock
xorb
mov
test
xchg
xchg
xchg
aaa
push
test
movsb
call
inc
pop
ss
inc
fisubrs
int3
xchg
out
cltd
sub
insb
or
cld
push
mov
sbb
subb
movsb
ss
lea
jb
cltd
mov
adc
or
insb
jns
movswl
jecxz
sbb
pop
mov
adc
repz
data16
sarl
addr16
leave
dec
push
outsb
jge
pop
pop
out
or
inc
sbb
neg
mov
hlt
mov
jl
adc
out
popa
and
in
xor
lds
mov
add
inc
cltd
fistpl
loop
cwtl
mov
push
inc
fisubs
sbb
xchg
enter
adcb
mov
in
shll
mov
mov
clc
das
ljmp
sub
les
lds
or
int3
jl
mov
and
cmp
out
insb
int3
or
popa
pop
inc
shrl
push
sbb
iret
sbb
cli
add
inc
scas
push
mov
popa
test
fdivrp
fildll
ffree
push
mov
pop
xchg
sub
in
into
or
cmpsb
ja
int3
sbb
pushf
int
push
jne
sbb
push
xchg
dec
pop
push
xor
push
leave
popa
mov
dec
bound
cwtl
or
sub
int3
scas
cmp
or
adc
fdivrl
shlb
cmp
lret
xchg
pop
pop
cmp
dec
aam
orb
cs
push
add
cmp
decb
pushf
addl
sub
xchg
repnz
push
pusha
push
sub
add
fmuls
sbb
inc
movsl
popa
mov
xchg
inc
lods
or
ja
frstor
or
fs
lahf
pushf
jecxz
outsl
aas
push
jle
leave
orb
jns
ds
fs
repz
mov
fstl
sub
fcmovbe
clc
sub
and
test
das
sarl
pop
lock
test
xor
out
mov
mov
gs
mov
xchg
add
push
sbb
movsl
mov
push
xor
arpl
xor
mov
hlt
sub
cmpsb
jg
mov
mov
mov
inc
aad
sbb
divb
test
cmpsl
cmp
cmp
and
jmp
shll
pop
pop
push
aad
cmp
push
sahf
cmp
push
addr16
or
repz
aaa
pop
in
popl
cmc
out
pop
jecxz,pn
cmp
fsubrl
lods
cmp
lret
test
and
loopne
xchg
push
nop
insb
cmp
fsubl
lock
loopne
sub
iret
out
add
add
inc
xchg
xchg
mov
xchg
ss
add
out
dec
pop
xor
sub
sbb
stos
js
cmc
mov
daa
aas
shll
jmp
push
popf
stc
pop
xorl
sub
testl
aaa
test
movsl
dec
cmpsb
int
jp
jmp
movsl
sbb
bound
filds
add
and
mov
and
or
imul
pop
lahf
inc
jne
inc
popa
dec
int
xchg
in
sub
xchg
jns
enter
cmp
dec
enter
out
xor
xor
sbb
mul
hlt
mov
dec
jle
jg
dec
sub
mov
push
les
pop
pop
dec
div
add
fldenv
xchg
xchg
lret
test
and
les
mov
mov
testl
not
jo
cwtl
ds
test
jb
add
test
scas
cs
scas
sub
std
bound
ds
lea
pop
xchg
add
cmc
adc
adc
leave
ret
sti
imul
mov
in
into
notl
movsb
cli
sbb
lret
imul
mov
adc
xchg
rcrl
cwtl
mov
clc
adc
in
mov
out
stc
dec
xchg
jl
mov
sbb
xchg
mov
loope
or
lods
daa
int
dec
adc
dec
jne
bound
rclb
push
icebp
sbb
or
cs
repz
lods
scas
pop
cli
lret
ss
push
test
jmp
sub
xor
xchg
ret
mov
cmp
mov
jnp
or
inc
mov
or
push
sbbl
aaa
ret
mov
or
inc
pop
shrb
jge
scas
push
adc
leave
sahf
lret
jge
dec
fstl
dec
arpl
std
or
mov
mov
adc
loopne
jp
xchg
push
fcmovne
movsl
ficomps
and
leave
sbb
adc
int
jmp
out
fistpll
mov
and
xchg
sub
push
mov
add
pop
lock
mov
arpl
dec
nop
dec
xor
pop
pop
mov
arpl
mov
mov
or
sarl
rcll
mov
rorl
adc
idivl
idivl
testl
nop
cld
jb
loopne
mov
fdivrl
cli
cld
out
adc
jne
fstpt
mov
xor
and
dec
or
aaa
int
pop
rcll
xchg
xchg
sbb
pusha
mov
mov
xor
adc
dec
add
push
xor
in
mov
sbb
jle
mov
jnp
pop
imul
inc
jmp
xor
xchg
or
decl
mov
fldl
mov
push
mov
jge
rorb
rcrb
mov
cwtl
adc
addr16
and
iret
jmp
push
scas
cmp
cmp
ss
lret
sbb
inc
movsl
xor
cmpsl
mov
xor
adc
pop
adc
stos
je
imul
cmp
dec
vmwrite
jmp
cmc
jno
or
push
sub
xchg
aas
xchg
sub
mov
loop
mov
sub
cmp
lcall
stos
nopl
popf
sub
sub
add
jle
ss
or
cmp
int
js
fadd
bound
xchg
sub
in
sub
ret
pop
inc
jae
int3
add
sahf
push
lock
jl
push
xchg
fistl
mov
outsl
les
gs
jp
sub
cmpsb
loope
sti
sbb
imul
shl
je
sbb
into
lret
loopne
inc
mov
sbb
jmp
loopne
inc
mov
mov
cli
inc
dec
jnp
test
xchg
sahf
in
push
mov
jae
repnz
sub
aad
mov
mov
mov
test
push
pusha
int
jo
jae
dec
stos
adc
imul
fincstp
cmp
xchg
mov
mov
jle
push
push
cmp
sub
cs
in
dec
mov
mov
xchg
or
loopne
push
insl
inc
xor
cld
mov
out
cmpsl
mov
xor
fstpt
jge
xor
iret
pop
mov
sbb
mov
lds
lods
cmp
and
pushf
daa
mov
nop
push
ret
add
stos
cwtl
pop
xchg
xchg
in
test
call
jg
pop
sub
and
sub
dec
rcrb
imul
addr16
jmp
pop
and
dec
lahf
bound
shr
mov
dec
cs
in
inc
push
test
jmp
mov
sub
cmpsl
jecxz
lds
lea
sub
aad
shl
sahf
mov
repnz
data16
je
adc
ret
lcall
nop
sub
adc
xchg
popa
movsb
shl
ficoml
mov
push
push
xlat
loopne
fsubl
mov
pushf
lret
stos
mov
mov
fimull
xor
aas
mov
out
pop
jae
sub
call
xchg
orb
movsl
shrl
repz
inc
adc
call
xor
subb
shll
add
vmovntpd
cmpsb
mov
mov
mov
xchg
insl
dec
mov
xchg
mov
test
std
mov
dec
jg
aaa
lcall
stos
mov
stc
mov
xchg
pusha
ljmp
jae
add
lahf
jmp
jae
dec
push
loope
andb
arpl
imul
and
or
gs
jno
dec
cmp
ret
pop
jecxz
popf
in
pusha
add
mov
leave
js
push
nopl
je
lods
hlt
xchg
xor
lds
pushf
cld
sbb
jmp
bound
stos
xchg
push
in
lcall
cs
xchg
inc
pop
adc
fwait
addr16
xorb
out
dec
jo
fisubrl
lcall
mov
adc
xor
add
fwait
xchg
add
adc
mov
divl
add
inc
jmp
sti
sub
push
mov
inc
xor
or
pop
inc
out
mov
add
add
sub
aas
into
dec
xor
xor
imul
push
rolb
adc
ljmp
movsb
xchg
sbb
fistpl
add
das
jl
rolb
popf
pop
sub
or
mov
sub
add
fldenv
cmpsb
xchg
cmp
jns
add
dec
sbb
jmp
pop
or
mov
xchg
dec
xchg
iret
mov
pop
in
pusha
jmp
pop
xor
cmp
loopne
popa
out
adc
cmp
xor
mov
lea
aad
mov
imul
cmpsl
addr16
clc
ss
out
and
int3
dec
mov
adc
push
xchg
adc
rorb
or
fisttpll
cmp
xor
and
jg
jl
push
push
sub
mov
mov
jae
inc
ljmp
lcall
mov
pushf
cmp
add
sbb
in
pushf
call
push
call
filds
add
adc
cwtl
jmp
mov
addr16
stos
test
scas
adc
mov
push
iret
sub
je
adc
rcrl
out
arpl
out
popa
aad
icebp
icebp
icebp
sti
in
mov
jmp
sbb
pusha
pop
test
or
xor
les
adc
gs
nop
stc
or
jnp
in
stos
cmpb
jno
mov
jecxz
rolb
test
mov
loop
mov
lahf
dec
xchg
test
xchg
pop
stos
adc
cmp
pop
pusha
jg
pop
jbe
stc
dec
cmp
std
sub
push
pop
cmc
cli
jge
andl
xchg
jnp
xor
adc
xchg
je
lahf
xchg
jae
mov
aas
leave
sub
mov
add
pop
aam
test
sub
out
mov
cmp
ret
inc
add
push
call
mov
aam
jno
sbb
outsb
pop
cmpl
mov
xchg
out
ror
sarl
movsb
loop
jecxz
sub
and
push
outsl
xor
xor
rorb
aas
sti
mov
lret
les
lock
into
jp
adc
ds
rcr
out
flds
pop
jg
mov
inc
fcompl
dec
cmc
mov
lds
pusha
dec
sub
lahf
nop
inc
outsb
sahf
push
and
dec
cli
rorb
push
aas
xchg
jg
push
in
shll
mov
roll
cmp
cmpsb
in
or
and
push
push
shrl
push
es
xchg
das
pop
mov
adc
add
jnp
outsl
dec
popf
cmp
mov
mov
mov
add
call
jbe
push
push
mov
mov
in
mull
es
sub
or
jno
scas
ret
and
fwait
js
insl
repnz
arpl
push
bound
out
scas
insl
push
cmp
sub
stos
lea
pusha
push
inc
lods
dec
arpl
pop
jle
iret
orb
sbb
stc
aam
fsts
movsb
mov
mov
stos
iret
pop
sub
lret
dec
push
dec
push
fcmovnbe
imul
daa
popf
xor
mov
dec
fldt
jmp
call
int
adc
mov
mov
hlt
inc
mov
pop
lds
insl
cmc
xor
out
xchg
cmc
push
adc
jmp
xor
sarl
and
mov
iret
imul
dec
add
push
jb
or
iret
cmp
arpl
add
mov
sub
cwtl
loope
je
push
mov
add
xlat
push
and
inc
lret
mov
adc
stc
out
imul
ja
mov
scas
lds
popa
adc
out
xorb
fldenv
mov
fs
rolb
fsub
ficomps
fsubrs
push
lods
mov
in
movsl
push
andb
lods
out
fdivr
ror
mov
dec
fs
mov
mov
mov
adc
and
jnp
fstpl
xlat
push
mov
mov
loopne
out
fiadds
ret
xchg
ja
adcl
jl
dec
call
loope
dec
aam
in
add
or
dec
dec
mov
pop
scas
cmc
adc
xor
daa
lds
cwtl
add
in
out
imul
sub
das
cltd
cltd
xor
sub
push
ret
cmp
daa
mov
adc
jmp
out
ret
push
js
cmp
cmp
cli
sbb
sbb
sti
out
data16
ss
mov
xchg
enter
into
sbb
mov
mov
adc
xchg
dec
mov
push
pop
adc
loope
ret
lock
notb
shlb
sahf
mov
cmp
in
outsb
ss
pop
bound
fwait
cli
mov
out
xor
inc
or
mov
mov
lds
mov
lock
mov
dec
mov
or
nop
fs
dec
ret
adc
jp
mov
fisubl
notb
movsb
adc
and
xchg
jb
mov
sub
mov
imul
xor
xchg
mov
mov
jne
dec
and
xchg
lret
in
mov
dec
int3
pop
jae
loope
adcl
jle
lret
cmp
mov
mov
movsb
rol
and
sbb
push
sbb
and
push
or
sti
add
mov
fistpl
add
mov
out
popa
imul
or
xor
hlt
xor
fstl
adc
rolb
xchg
xchg
int
jg
or
enter
mov
sbb
int3
jecxz
dec
ret
arpl
push
dec
dec
gs
test
in
jle
push
mov
pop
cmp
sahf
loopne
je
sbb
fildll
out
insl
pop
add
movzwl
xor
or
adc
sbb
jmp
xchg
xchg
adc
xor
cmp
mov
clc
mov
add
hlt
pop
inc
subl
sbb
mov
mov
out
ds
sarl
sub
arpl
dec
jge
xor
xchg
aaa
popf
addl
outsb
mov
imul
sub
add
ficompl
lea
inc
push
or
and
jo
sahf
aam
dec
push
sub
ljmp
loop
cli
mov
xchg
iret
out
or
jg
jno
outsb
push
cwtl
cld
xchg
rolb
inc
and
aad
push
cmp
popa
mov
jae
push
pushf
pop
jbe
int
stc
data16
jns
mov
jl
out
inc
stc
sub
add
cmp
vpcmpeqb
stos
xlat
cwtl
lret
lea
hlt
sub
xchg
push
and
xchg
adc
inc
mov
pop
cmp
and
and
jns
aad
mov
loop
daa
and
fwait
call
mov
loop
pop
push
loop
les
nop
mov
and
jp
iret
mov
add
jle
add
mov
orl
ret
fs
xchg
pusha
popa
xor
or
cs
add
jae
in
test
fnstsw
xchg
jne
sbb
aad
icebp
jno
jbe
add
sub
arpl
or
mov
xchg
addr16
hlt
int
shll
xor
jp
pop
scas
in
movl
add
mov
inc
inc
data16
xor
sarb
mov
jl
mov
das
lds
ss
xor
xor
push
lds
int
lods
aas
xchg
iret
jbe
addl
mov
xchg
into
stc
pop
fnstsw
aad
push
arpl
cmp
scas
mov
fwait
push
ret
jno
out
jne
mov
cmpl
imul
stc
fadds
mov
xchg
cmpsl
incb
mov
cmp
mov
jecxz
gs
jp
xchg
fcompl
scas
xchg
es
inc
jl
xlat
shrb
sbb
jo
jg
rep
adc
cmp
fs
loope
shrb
les
enter
mov
pushf
cmpsl
outsl
popf
adc
icebp
xchg
mov
outsb
mov
stos
pop
sbb
push
imul
mov
mov
out
nop
outsb
push
xchg
imul
fs
push
mov
jmp
popa
mov
cld
push
dec
rcrl
pop
inc
arpl
shll
ljmp
fdivrs
pop
inc
pandn
mov
jmp
shrl
mov
hlt
in
jmp
imul
lahf
sti
movsl
adc
jne
into
push
repnz
stos
pop
pop
mov
lret
cmpsb
add
shll
insl
pop
roll
bound
fbld
iret
mov
sub
jns
xor
lea
pop
movzwl
int3
inc
loopne
mov
or
xlat
pop
lret
inc
add
cwtl
negl
inc
mov
shlb
xor
mov
fwait
jbe
rol
mov
add
popa
ss
lods
repz
fld
mov
sbb
movsl
jg
test
pop
ja
mov
push
imul
mov
cs
or
mov
and
repnz
push
mov
adc
sbb
mov
test
mov
loop
popf
mov
gs
loopne
mov
insb
sub
inc
int
jmp
cmp
mov
or
hlt
fmuls
bound
jbe
lcall
leave
xchg
push
and
es
xchg
popf
pop
mov
rorb
mov
sbb
push
imul
inc
repnz
sarl
mov
stos
or
inc
fbstp
mov
adc
push
fcomps
movsb
mov
int3
into
pop
add
scas
jbe
inc
or
xchg
lods
aam
lcall
add
addl
push
adc
int3
cmc
adc
xchg
les
aam
and
dec
fists
lret
push
mov
incl
xchg
repz
lods
push
shll
mov
mov
movsl
in
les
out
dec
ja
clc
sbb
fbld
mul
pop
dec
lret
pop
das
or
stos
loop
and
pop
stc
lea
sub
popa
push
nop
lcall
or
cmp
popf
push
xchg
cld
lock
xchg
fldt
mov
lahf
cs
std
jno
loope
sti
pop
stos
mov
mov
orl
mov
repnz
dec
movsb
and
sbb
in
or
push
mov
sbbl
and
sarb
or
pop
ja
dec
out
sbb
push
fs
out
add
sub
inc
mov
mov
add
gs
sub
aaa
stos
lret
mov
lods
dec
mov
sub
mov
es
insl
jnp
std
gs
stos
inc
stos
dec
test
dec
inc
push
fscale
xorl
dec
ficomps
dec
add
ret
and
rol
or
push
fcoms
add
xor
xlat
xchg
sub
mov
fstpt
inc
stos
scas
jbe
sub
out
hlt
jecxz
jo
test
sarb
es
sbb
out
ss
push
xchg
sbb
mov
mov
fdivrl
cs
lods
xlat
nop
mov
inc
scas
cmpl
leave
lock
movsb
idivl
in
mov
fwait
pop
jb
sarl
adc
jge
add
xchg
mov
iret
sbb
jne
mov
mov
or
pop
mov
loope
jbe
push
repz
es
jg
test
mov
adc
lcall
in
push
leave
stc
loop
lods
and
test
mov
rorl
lock
cmp
xor
xor
scas
aaa
test
fiadds
sub
pop
cmp
cli
sub
shr
xchg
movsb
aad
roll
mov
xchg
or
xchg
mov
adc
jnp
inc
lds
xor
and
or
sub
jle
aas
lock
rcl
xor
and
jg
mov
add
hlt
jae
push
adc
add
jl
sbb
mov
dec
sbb
test
or
nop
or
sub
xor
adc
out
movsb
outsl
mov
mov
sbb
fwait
pop
jo
ljmp
js
out
mov
mov
lods
incl
sub
mov
shll
test
xor
xchg
arpl
test
mov
insl
neg
testl
xchg
mov
inc
test
movsl
lret
xor
mov
stc
sbb
xchg
and
cmp
adc
adc
dec
sbb
decl
out
pop
imul
rcrl
jge
mov
mov
imul
add
repnz
jbe
add
call
mov
clc
mov
fildll
and
out
fstpt
stos
es
lods
mov
fcmovnbe
inc
xor
fs
and
mov
inc
fistps
in
repnz
jne
add
push
inc
push
pushf
sbb
orb
stos
jle
popa
fiaddl
cli
pop
sub
pop
fists
cmpsl
push
cmp
clc
loope
sbb
sbb
and
testb
sahf
mov
fiaddl
daa
jo
mov
fdivs
shlb
repz
mov
mov
xchg
lret
es
mov
je
pusha
shrl
mov
divl
sbb
mov
and
push
test
cld
es
lret
xor
or
xor
int
or
xchg
mov
pop
or
out
insl
stc
repz
insl
jl
fimuls
xchg
push
sub
push
xchg
pop
dec
cld
xchg
addr16
popf
incl
or
inc
es
inc
mov
hlt
aas
sbb
fs
xlat
jp
shlb
insb
lds
mov
xchg
aas
jnp
popa
cmp
pop
sbb
insl
xchg
aad
jne
pop
lock
out
add
stc
or
cmp
out
insb
mov
aad
mov
cld
dec
adc
mov
pop
test
out
imul
test
push
push
mov
add
mov
inc
std
addl
add
jmp
sbb
dec
inc
or
insl
frstor
cs
jnp
cltd
push
jbe
jl
subb
xor
sbb
mov
out
xor
cmp
jne
stc
ss
sub
dec
xchg
pop
stc
xchg
dec
mov
xchg
xor
xor
mov
xchg
xor
ret
jne
mov
fcoms
xor
mov
icebp
and
push
inc
leave
ljmp
cmpsb
sti
sbb
push
aas
sbb
shlb
repnz
cltd
dec
xchg
mov
mov
test
jle
adc
pusha
aad
inc
add
push
cmp
test
adc
mov
inc
push
addb
ljmp
ss
into
add
jecxz
lds
rcll
fidivl
lret
sbbl
outsl
xor
cmp
cwtl
and
mov
fistps
cld
add
into
add
mov
movsl
push
adc
sahf
dec
out
jo
cmpsl
in
and
adc
ret
jecxz
mulb
adc
add
mulb
es
dec
mov
js
inc
sub
sub
aaa
mov
fisubl
popa
mov
xchg
adc
or
call
inc
mov
inc
inc
add
ret
or
rorb
push
lock
dec
movsb
pop
sub
cmp
jne
pop
pop
fcoms
mov
cmp
ret
mov
inc
pushl
loop
jge
jo
or
lock
push
sbbl
loope
or
sahf
leave
popf
xor
mov
or
pop
sub
push
clc
shl
xchg
out
xor
push
pop
push
aad
loopne
inc
bound
ja
stc
cmp
cmc
fstpl
sub
daa
shll
xchg
push
aad
insb
test
xlat
inc
sti
cmc
inc
je
test
add
pop
negb
pop
adc
jg
push
ds
mov
push
cmpsl
insl
mov
bound
sbb
je
pop
cmp
ja
jge
cmp
das
pop
pop
cmp
cmp
or
addr16
cmc
lret
mov
mov
cltd
movsl
out
into
mov
daa
imull
cmp
adc
dec
sbbb
test
aam
js
call
push
xor
cmp
or
ja
dec
mov
mov
mov
adc
adc
movsl
jbe
xor
in
jbe
jae
cwtl
repz
jg
je
rcrb
rcr
push
mov
adcl
in
mov
xchg
adc
mov
sub
jge
dec
fs
push
dec
sbb
js
test
sub
movsb
push
sti
out
mov
push
cmp
cmp
push
lds
rorb
movsb
fcomp
xor
sub
lahf
addb
xchg
fbld
inc
stos
shrb
cmp
cmp
jle
push
xchg
cmp
and
mov
pinsrw
or
and
pop
leave
sahf
outsl
dec
sbb
lret
aad
or
xchg
mov
xchg
mov
xchg
mov
rcrl
jae
in
sub
cwtl
sbb
insb
stos
mov
jno
ljmp
jne
shrb
mov
outsl
dec
mov
fs
sub
icebp
leave
sbb
jge
cmpsl
mov
xor
pusha
movsb
outsl
leave
cmpsb
xchg
rolb
in
clc
push
js
dec
jno
in
xor
stos
rolb
cmpsb
das
and
mov
mov
arpl
jbe
scas
and
test
pop
xorl
loope
cmp
fsubrs
addr16
and
pop
add
ret
fisttps
xor
negl
stos
and
movsb
out
inc
fsubl
cmp
lods
out
imul
aam
outsb
jno
movsl
arpl
dec
fchs
ret
adc
mov
inc
icebp
cs
mov
mov
inc
fildll
and
sbb
jne
fwait
shl
and
mov
jbe
iret
xor
xor
pusha
mov
lds
test
in
fiaddl
mov
jp
das
add
out
sub
in
gs
sub
add
and
mov
add
in
or
lret
sahf
mov
and
cmpsl
rorb
or
scas
iret
stc
jge,pn
mov
mov
outsb
mov
cmp
movl
imul
add
js
into
clc
outsl
xchg
sub
sub
sti
xchg
push
xchg
imul
push
jo
xor
jae
xor
pop
mov
int3
negl
mov
and
xor
push
cmp
mov
dec
loope
mov
out
sti
bound
xchg
add
div
xlat
or
mov
inc
pop
fwait
rsqrtps
xchg
or
test
inc
push
in
xor
push
scas
jl
js
aas
sub
fnclex
movsl
sbbl
xor
jp
out
push
pop
mov
xlat
imul
mov
or
out
mov
mov
or
leave
push
int3
mov
push
out
mov
mov
in
or
popw
adc
inc
fs
cs
ret
fistl
add
inc
xchg
add
xchg
test
in
mov
daa
jne
bound
das
jle
mov
or
dec
dec
fmul
aaa
and
mov
mov
int3
aad
jmp
push
adc
and
add
fdivp
jg
sti
icebp
cld
call
and
sub
mov
or
jns
stc
lods
dec
add
in
dec
mov
push
int
mov
sub
test
incl
test
adc
push
sub
push
mov
add
fistps
sahf
inc
scas
fwait
mov
dec
cli
jo
roll
xor
iret
jg
stos
pusha
lret
cld
or
test
int3
test
imul
call
inc
test
sbb
or
push
inc
loop
iret
pop
enter
dec
sub
sahf
xchg
ja
js
in
fdivl
jle
add
jecxz
jo
xchg
jmp
getsec
fiaddl
pop
pop
scas
pop
mov
aaa
in
xchg
icebp
int3
jae
filds
pop
inc
sbb
fcomps
sub
aas
cltd
aaa
loopne
stc
push
je
push
jae
int
xor
lahf
and
les
push
mov
jge
cmp
rcrl
push
out
push
mov
adc
jl
pop
shrl
dec
mov
bound
push
leave
test
scas
stos
cmpl
cmp
shl
bound
xor
insl
out
mov
stos
xchg
dec
mov
jno
dec
jg
std
mov
ret
std
fdivs
push
xchg
inc
ljmp
mov
mov
arpl
rcrb
jmp
outsb
and
daa
loopne
xor
shrl
jl
pop
call
push
add
rcrl
xchg
pusha
int
popa
push
pop
mov
cld
mov
into
lahf
fs
inc
and
adc
push
xchg
lock
mov
adc
mov
cs
loope
dec
jg
dec
arpl
add
adc
inc
push
mov
push
std
sbb
repz
push
or
fdivrp
je
and
cltd
in
movsl
repnz
dec
push
mov
pop
add
sti
xchg
cmpsl
cmp
cmp
adc
fnsave
xchg
push
push
push
stc
jge
xor
sub
in
cmpsl
and
inc
unpckhps
xchg
ja
daa
leave
sbb
jmp
xchg
insl
aas
in
and
gs
push
into
mov
mov
lock
fstpl
rorl
in
icebp
adc
add
sbb
mov
inc
xor
sub
rol
test
push
jns
in
mov
fcomip
jb
dec
sub
ljmp
inc
cmp
incb
in
and
mov
pop
xchg
stos
in
mov
repnz
push
rorb
addr16
ljmp
pop
xchg
mov
sub
xchg
cmp
sbb
test
cmp
ret
sub
repnz
int3
pop
je
xchg
adc
lret
mov
adc
js
pop
shll
pop
icebp
in
xor
xor
popa
in
vpxor
notl
in
or
cmp
ror
ljmp
sbbl
inc
test
aad
pusha
xor
mov
mov
sbbl
dec
divl
inc
cmp
cltd
xor
push
or
inc
mov
imul
add
les
jb
cmc
in
out
scas
cmc
add
out
sbb
int
jge
dec
mov
mov
push
out
cmp
aaa
jne
push
dec
loope
repz
sar
jnp
out
cltd
hlt
aam
lea
in
mov
and
andl
out
lods
push
dec
popa
mov
dec
fwait
incb
into
out
clc
push
mov
movsb
xchg
sbb
jl
fs
adc
add
jae
cmpsl
movsb
cwtl
xchg
xor
sbb
cmp
adc
or
fwait
stc
aaa
js
sbb
in
inc
mov
ljmp
daa
aaa
loopne
push
and
push
test
popa
jae
inc
orb
push
pop
inc
iret
nop
sub
cmp
mov
mov
push
jno
fldt
shl
lret
inc
popa
rcr
adc
outsl
or
xchg
jmp
push
cwtl
fsubrs
outsb
and
mov
lods
int3
out
or
outsl
fldenv
xchg
mov
fisttps
int
pop
fninit
mov
iret
test
mov
fldt
push
inc
loopne
loop
jb
mov
cwtl
mov
inc
ret
or
int3
inc
push
sub
jl
popa
sub
adc
adc
ret
movb
cltd
test
daa
lods
mov
sub
outsb
sbb
in
scas
jp
sub
js
lret
lea
dec
add
add
sbb
jge
jge
adc
mov
out
stos
xchg
sbbb
cmpsl
inc
das
loopne
mov
push
mov
and
out
inc
imul
mov
xchg
add
enter
inc
and
jae
outsl
adc
scas
xchg
pop
xlat
iret
out
int
repnz
cmp
popa
test
sub
rol
loope
mov
jo
mov
inc
cs
mov
or
or
mov
iret
repz
movsl
adc
push
das
test
fwait
divl
add
enter
mov
adc
icebp
cs
xchg
in
test
lcall
movsl
or
fistl
inc
xchg
push
mov
sbb
enter
out
pop
cmp
ret
pop
mov
fcompl
pop
test
rclb
shlb
in
call
cmp
lret
mov
in
inc
cmc
loope
sbb
mov
jmp
jg
scas
adc
adc
inc
out
and
and
sub
push
xchg
sbb
dec
mov
repnz
cmp
int
fcoml
sbb
dec
lods
ret
xchg
dec
mov
daa
fsubl
jbe
inc
nop
jp
mov
xchg
pop
loop
rcr
add
sti
jl
add
mov
jo
xor
jp
mov
cmp
shlb
dec
addr16
pushf
mov
shll
dec
pop
icebp
mov
in
inc
inc
or
jecxz
arpl
cli
push
dec
or
add
mov
xchg
xor
shl
iret
dec
push
stos
jle
ljmp
push
pop
es
dec
out
pop
inc
loope
xlat
push
adc
daa
clc
cmc
js
cwtl
push
int
mov
cld
and
mov
aas
xchg
mov
push
jmp
je
push
popa
in
jg
cmp
jne
pusha
inc
cmpsb
add
stos
in
adc
loope
dec
mov
andl
mov
incb
pusha
mov
lea
ficompl
inc
rcr
mov
or
lcall
mov
and
lret
dec
mov
jl
jae
inc
incl
jae
nop
push
fsubrp
lds
push
mov
push
add
fld
ret
mov
cmp
dec
adc
fwait
inc
jecxz
call
sbb
loope
jno
hlt
push
xchg
aam
out
pop
stos
addr16
xchg
push
imul
dec
push
fadd
lock
inc
loopne
or
add
mov
shll
mov
cmpsb
xchg
lahf
inc
mov
clc
addr16
dec
das
jp
adc
jae
out
pop
ret
jecxz
push
imul
push
outsb
fcmovnu
sahf
jo
xchg
mov
push
imul
mov
popa
xor
mov
movsb
jbe
jae,pn
fnstenv
addb
mov
pop
adc
fimuls
xchg
les
mov
xor
pushf
push
cli
negl
pop
mov
roll
jecxz
push
sbb
cltd
push
fists
inc
and
pop
fildl
mov
jge
mov
jae
jp
neg
cmpsl
dec
cmc
xor
xchg
icebp
ds
or
push
inc
jge
insl
mov
sub
add
sub
xor
and
int3
xchg
addr16
iret
ljmp
pop
jne
rclb
xor
add
test
xor
ret
ret
dec
shlb
mov
pusha
lcall
hlt
xor
lods
mov
stc
loope
mov
jecxz
xchg
mov
dec
stos
mov
xchg
je
psubb
inc
fisubs
stc
mov
cli
popf
aaa
jle
add
imul
xchg
jae
imul
push
arpl
xchg
dec
test
leave
adc
cltd
jo
fwait
cmp
sbb
mov
cld
inc
xor
cld
mov
sub
pop
and
rcll
add
test
dec
push
dec
adc
lods
mov
and
mov
xchg
jnp
or
bound
shrb
fstpt
hlt
mov
std
lods
inc
divl
mov
stos
ret
adc
dec
add
arpl
push
mov
aas
int
inc
insb
cli
jne
xor
mov
bound
ljmp
call
push
mov
mov
adc
dec
and
push
mov
rol
loopne
mov
into
jo
gs
out
sub
sub
popa
and
cltd
mov
mov
sahf
mov
mov
pop
xor
ret
repnz
sbb
rorb
xor
xchg
test
cld
cwtl
inc
imul
xchg
push
jb
stos
cmpsb
sbb
mov
and
aad
and
fsubrs
add
rorb
jne
aad
fcomi
sbbl
mov
bound
mov
inc
shl
jp
stos
loopne
roll
fisubrl
fidivs
repnz
dec
rcrl
mov
push
mov
cmp
mov
xchg
cmpl
dec
sub
aaa
leave
xchg
outsl
pop
cli
loope
loope
std
test
cli
bswap
inc
mov
push
mov
mov
push
xchg
ret
or
sti
mov
mov
xor
fs
arpl
lds
pop
sub
in
lret
scas
adc
ret
push
jo
jae
mov
inc
data16
ss
vshufps
dec
dec
add
mov
push
daa
lods
inc
xchg
je
mov
sbb
negl
sbb
push
add
es
ror
mov
push
push
sub
push
jp
jb
cmpsl
inc
lds
add
mov
pop
insb
xchg
add
mov
dec
push
jmp
jecxz
xor
or
or
int3
mov
test
xor
dec
mov
scas
xchg
dec
test
dec
or
stos
shl
lock
ja
stos
out
loop
sti
addb
mov
aam
mov
pop
jb
cmpsb
lahf
loop
int
mov
call
aam
inc
dec
idivl
xlat
adc
or
pop
cmp
jns
push
jnp
arpl
nop
or
sub
xchg
xorb
xchg
mov
mov
pop
insb
ds
jno
pop
cmc
adc
or
and
pop
call
sahf
jae
mov
mov
daa
inc
cmp
into
arpl
jnp
or
pop
adcl
pop
movsb
inc
xor
jl
test
dec
mov
jle
cmpsb
andb
js
inc
sub
pop
out
loopne
inc
push
dec
test
pop
mov
sbb
jb
mov
mov
sub
fwait
cs
sti
pop
dec
adc
shlb
lods
jns
loope
pop
sub
add
pop
lcall
push
fisttps
cmpsl
mov
pop
sub
in
bound
or
rcr
popf
sbb
mov
xor
insb
les
incb
lds
repz
test
hlt
shrb
arpl
ljmp
cmp
jb
push
cmc
and
mov
push
sarl
leave
test
inc
and
cvttps2pi
daa
cli
sub
out
daa
sbb
mov
push
mov
aas
out
mov
ja
repnz
loopne
pusha
add
das
scas
or
imul
imul
lds
cmp
stos
ljmp
cmp
or
mov
mov
inc
xchg
sub
lea
cltd
cmp
test
and
lret
sbb
lock
sub
repz
lret
js
add
fwait
sti
std
clc
push
js
dec
pop
fildl
stos
jo
pop
fdivs
outsb
in
mov
nop
mov
add
pop
shl
mov
xor
and
adc
xor
xchg
sarb
cmpsl
jne
pop
push
popa
cmp
lods
sbb
adc
mov
adc
mov
push
lods
sbb
lcall
mov
mov
testl
ficoms
mov
in
ret
inc
xor
test
mov
jp
cmp
mov
lcall
jbe
sub
lods
lds
outsb
adc
xchg
test
mov
add
sbb
out
push
js
mov
cmpsl
enter
sar
in
sti
and
cmp
pop
pop
pop
enter
dec
inc
mov
pushf
loopne
xchg
jmp
xor
cmpsl
movsb
lahf
xchg
or
je
dec
cmp
sahf
xchg
imul
lahf
fsubr
jnp
sbb
and
test
add
popa
inc
in
movsl
and
adc
dec
fs
xchg
negl
push
jb
loopne
push
mov
gs
ljmp
fcmovu
mov
mov
loop
lods
orb
jl
xchg
inc
sub
adc
pop
mov
repnz
pop
jbe
dec
arpl
add
xchg
inc
and
adc
mov
stos
fsubl
lcall
xor
call
outsb
jmp
bound
pop
xor
addr16
dec
xlat
subb
in
test
mov
pushf
adc
mov
cmpsb
enter
aas
lock
subb
inc
sbb
fildll
lcall
out
pop
sti
jne
sub
pop
sti
cmpl
out
int
rcll
xchg
test
ja
mov
sahf
xor
adc
aad
dec
dec
jge
js
cmpsb
sub
sub
mov
cmp
and
orb
nop
arpl
stos
mov
sbb
pop
push
adc
stos
sub
cmp
lret
add
push
jp
mov
aad
add
loopne
insb
add
jns
xchg
mov
out
mov
scas
cmc
outsl
adc
pop
fcoml
pusha
lods
lcall
loope
jno
loopne
das
aaa
outsl
adc
outsl
adc
sbb
inc
iret
adc
push
lahf
mov
jle
mov
adc
mov
fsubl
push
fstpt
shrl
lock
inc
in
and
cmp
rcrl
repz
cld
dec
or
xor
sar
xor
dec
sbb
sbb
aam
xchg
out
inc
jle
pop
fiadds
sub
or
sub
inc
cmp
aas
inc
mov
sbb
add
test
sub
fstpt
les
xor
mov
cld
dec
mov
mov
sub
cs
sub
mov
adc
shll
cs
repz
and
cmc
or
inc
inc
lea
sbb
pop
lds
rolw
add
mov
sti
dec
xorb
jo
jno
jne
test
mov
shlb
rcrb
rolb
stc
push
sti
jmp
xor
inc
xchg
dec
add
ficoml
cmp
xor
mov
clc
or
sbb
stc
mov
test
cmpsb
mov
iret
mov
mov
stos
sbb
imul
mov
inc
cmp
sbbb
stos
inc
fcompp
loopne
sub
jmp
pop
mov
inc
lret
push
lcall
fmull
daa
cs
jmp
lret
loop
mov
jle
mov
mov
pop
lods
xor
lods
subl
subb
shlb
nop
loope
push
mov
cs
test
das
movsl
incl
mov
push
push
mov
nop
ja
and
addr16
xchg
add
and
in
mov
ds
jmp
jecxz
pusha
lods
lods
pop
xor
ret
inc
push
pop
mov
inc
shrl
pop
lret
inc
and
mov
jge
imulb
add
cwtl
inc
fstpt
mov
mov
add
and
push
int
and
inc
movsl
jl
push
jp
aam
in
leave
cli
jge
push
aam
mov
mov
hlt
dec
stos
cmpsb
sbb
xchg
add
les
add
js
jmp
dec
in
leave
iret
jae
sub
mov
jae
imul
xor
sbb
cmpsl
ret
loop
push
cmpsb
xchg
inc
mov
in
aam
dec
cmp
in
and
bound
mov
xchg
add
push
inc
jl
inc
xchg
jbe
lea
or
cld
and
rorl
push
fistpl
daa
pop
pop
scas
push
add
or
pop
dec
add
lock
test
push
ret
push
cmp
ljmp
xor
popf
das
hlt
and
push
jmp
inc
or
sub
dec
and
shlb
sbb
sbb
and
mov
cwtl
add
and
das
stos
fs
xor
sbb
scas
adc
mov
aam
ficoml
cwtl
cwtl
repz
inc
in
mov
lcall
lret
inc
insb
sub
stos
insl
push
dec
addr16
pop
adc
aaa
into
xchg
cld
sbb
into
stc
aad
dec
cmp
jnp
hlt
adc
stos
adc
push
push
mov
inc
les
dec
mov
xlat
in
in
dec
lods
push
pop
out
inc
testb
dec
inc
xor
or
sbb
dec
sub
mov
sbb
lods
sbbb
mov
scas
arpl
inc
mov
pop
mov
shll
jmp
cmp
xor
movsb
call
inc
fists
inc
sbb
or
sarl
cmp
das
cli
cli
insl
insb
rclb
push
loopne
subb
pop
stc
fimull
sbbb
dec
cltd
dec
dec
aam
daa
in
pusha
shrb
pop
jbe
ljmp
mov
jb
fstpt
xchg
mov
leave
sbb
or
in
fcoms
sbb
sbbb
or
in
ret
mov
insb
jp
sub
imul
xlat
adc
and
cld
out
fcoms
pusha
pop
sub
aad
aaa
push
and
int
mov
dec
test
aad
int3
push
shl
lea
inc
xlat
xor
cltd
lahf
dec
mov
movsb
inc
in
adc
cmpsb
and
popf
sub
mov
fisttpl
push
xchg
push
cmp
jmp
jnp
pop
out
in
mov
test
stos
sub
subb
arpl
aas
int
arpl
out
fistl
mov
mov
in
and
adc
push
sub
sub
cmp
pop
lret
sbb
or
add
fidivrs
int
mov
xchg
jl
mov
push
pand
or
add
sub
mov
gs
cmp
into
inc
mov
dec
lret
mov
sbbb
xchg
cmp
icebp
cmp
inc
dec
or
inc
push
leave
int
jge
mov
das
repnz
cli
pop
pop
and
pop
insl
push
outsb
cwtl
jne
mov
out
lret
mov
cmpsl
push
fnsave
sbb
movsb
sbb
ja
mov
or
sbb
aas
or
xchg
pop
cld
push
jle,pn
mov
andb
or
leave
in
arpl
cmp
cmpsl
outsb
jmp
xor
movsb
movsl
nop
jae
rorl
sub
lds
push
or
lret
xchg
mov
push
mov
fdivl
loop
shrb
push
pop
add
and
fucomp
xchg
sub
std
add
rcrl
into
je
test
xchg
adc
xor
cli
dec
mov
xchg
hlt
out
or
ja
das
inc
add
js
push
dec
and
filds
push
mov
xchg
imul
mov
leave
lcall
push
lods
rcr
xorl
jp
mov
sub
pop
sbb
jns
mov
js
int3
pop
and
out
xlat
lods
scas
adcb
xchg
das
mov
pop
pop
lret
scas
push
pushf
push
mov
xor
stos
jns
pop
hlt
lcall
sub
fmuls
cmp
cmp
dec
jbe
pop
out
insl
dec
lods
adc
inc
adc
push
out
in
les
dec
push
ss
pusha
int3
cmp
enter
pusha
inc
stos
sbb
fdivl
jb
mov
cmp
inc
jno
and
xorb
jno
pop
jns
xchg
mov
test
dec
mul
lea
sub
scas
or
or
sub
clc
mov
push
dec
sub
or
les
mov
ret
inc
adc
int
shll
push
mov
aaa
or
xor
lods
out
jbe
inc
arpl
pop
fmuls
push
imul
cmpsl
jl
sbb
imul
aad
push
mull
mov
pop
lret
and
lock
xor
dec
jae
mov
sti
pop
push
loope
pop
push
das
adc
cmovo
rorb
in
lods
divl
test
in
stc
and
and
loope
xor
aam
push
mov
push
inc
int
push
imul
push
lock
pop
mov
sahf
leave
pop
ds
imul
ss
mov
lret
xor
dec
scas
nop
push
movsb
xchg
jae
mov
pop
js
xchg
in
mov
daa
bound
mov
cli
cmpl
out
fsubr
fdivs
push
pop
mov
and
push
rcrl
xor
hlt
pop
or
jecxz
push
sub
mov
mov
push
sti
test
insb
cbtw
out
lcall
jle
filds
xlat
mov
sahf
test
jns
dec
jnp
int3
lahf
adc
stos
movlps
and
sbbb
cmp
push
imul
mov
enter
and
xor
mov
mov
ds
insb
push
das
mov
fcmovnbe
pop
movl
cmp
jne
bnd
loopne
fwait
mov
lret
mov
scas
inc
imul
call
cmpsl
addr16
je
scas
cmp
lea
adc
add
aaa
mov
sbb
xchg
push
add
fidivl
out
adc
pushf
dec
ds
shll
push
sub
cld
cmpsl
mov
into
lret
fiadds
dec
cmpb
inc
les
ficomps
movntps
lret
int
cmpl
popf
cmp
mov
mov
lods
xchg
sub
dec
adc
ss
test
sbb
pop
aas
push
dec
jo
or
int
adc
test
adc
out
add
imul
xor
xor
add
int
lahf
push
dec
mov
add
adc
jge
lahf
mov
xchg
pushw
lea
xchg
add
pop
cmp
jne
mov
jnp
movsl
jo
rcrb
xchg
mov
push
call
subl
leave
push
push
dec
xchg
pop
inc
int
les
ja
jl
sbb
lods
into
mov
pop
push
xchg
lea
sbb
ja
mov
data16
movsb
out
lret
cmp
scas
cltd
xchg
push
pusha
popa
push
mov
jno
and
inc
sbb
mov
fcomp
pop
dec
mov
sub
ss
pop
jno
or
push
cmp
mov
in
xchg
repz
jns
jae
mov
cwtl
fldl
adc
not
xor
cmpsb
out
fsts
cs
stc
add
dec
sbb
gs
mov
fwait
sub
jno
cmc
jmp
mov
or
push
adc
ffreep
insl
dec
inc
lret
test
jg
cmpsb
jns
xor
cmp
or
mov
clc
add
or
cmp
and
dec
mov
ds
pop
and
push
nop
dec
into
or
shll
bound
and
and
push
ret
imul
sbb
cmp
daa
and
or
hlt
sub
out
jno
cmp
iret
xor
push
dec
jmp
mulb
xlat
push
inc
lea
pop
mov
mov
in
and
mov
fwait
shlb
test
aas
and
subb
idivb
add
out
repnz
add
pop
inc
sbb
scas
lret
inc
test
fwait
sub
cmp
add
popf
movsb
lock
pop
stc
dec
jmp
adcl
xor
int3
xchg
pop
fmull
jnp
mov
inc
ret
jbe
jp
jbe
dec
jo
or
mov
es
jo
pop
fs
mov
jmp
cmpsb
imul
out
cmp
loop
idivb
ljmp
int3
inc
mov
pop
xor
fldt
mov
mov
int3
into
sbb
xor
lret
cmpsl
xor
pop
ja
adc
mov
test
leave
jge
notl
pop
int3
and
mov
xchg
fdivs
jp
xchg
mov
inc
and
lods
test
movsl
pusha
xchg
jae
pop
xor
pop
sahf
cmp
cmpsb
cltd
mov
xchg
cpuid
cmc
push
jp
scas
cltd
std
aad
pop
dec
dec
es
and
jae
cmc
sti
pavgw
inc
mov
shlb
or
push
pusha
ret
orps
not
test
in
add
fs
clc
adc
imul
mov
dec
lcall
sub
sbb
icebp
adc
mov
push
cltd
jge
popa
dec
push
xorb
stc
xor
daa
out
subb
incb
add
out
jle
hlt
ret
movsb
loopne
and
das
and
xchg
sti
cmpsl
aad
push
jl
inc
xor
inc
shlb
popf
and
in
mov
mov
mov
sub
test
mov
push
stos
add
push
sahf
jne
cmc
lcall
dec
jne
aaa
test
cs
jmp
jno
dec
repnz
and
lods
pushf
pop
std
add
mov
sbb
xchg
insl
xor
out
push
data16
lahf
fistps
aaa
in
adc
rorb
push
and
mov
and
jne
pop
cmp
or
orb
fwait
out
push
add
cltd
sbb
inc
lahf
and
nop
mov
or
xchg
imull
aaa
jecxz
fcompl
test
pop
xchg
lea
xlat
mov
and
jno
and
mov
sub
and
repz
rcrl
add
push
cmp
shlb
push
push
testl
mov
add
add
add
fwait
out
fs
push
push
fldt
sahf
xchg
mov
daa
dec
mov
enter
shlb
insl
pop
push
in
in
cmp
movsb
test
fisttps
stc
adc
out
ljmp
xor
push
movsb
int3
insb
loopne
addr16
out
ljmp
pop
xor
sub
cld
clc
cmp
jo
push
out
loope
sbb
sbb
adc
fsubr
pop
dec
leave
cltd
inc
notb
add
mov
jg
mov
push
cs
dec
pop
lock
pop
sub
fwait
mov
mov
imul
mov
in
es
pop
test
out
cmp
pusha
xchg
add
mov
adc
mov
ljmp
xor
rorl
hlt
fsubr
inc
mov
pop
shll
pop
xor
push
repz
jns
cmovge
pop
adc
sub
lahf
outsl
and
mov
fwait
out
fs
ret
mov
jl
mov
sub
sub
cmp
out
hlt
and
xchg
dec
pop
stc
notl
nop
mov
ljmp
push
lcall
popa
mov
xor
mov
mov
or
cmp
adc
push
sti
nop
test
test
xor
roll
fstl
lods
mov
xchg
cld
push
xor
out
aas
xchg
iret
loope
jb
mov
jmp
stos
pop
cmp
jmp
jecxz
lahf
cmp
ret
push
in
inc
fs
iret
std
jo
test
shl
ret
movsb
lcall
cmpsb
hlt
xchg
dec
int
test
inc
inc
rclb
popf
sub
mov
test
mov
pop
mov
leave
sub
sub
sub
xor
dec
mov
outsl
sub
stc
outsb
cmp
push
and
xchg
push
and
jnp
or
add
out
loope
insb
jb
daa
aam
adc
xchg
iret
ret
negb
pop
mov
daa
das
jae
push
cmc
sarl
addl
out
leave
and
xchg
roll
add
push
adc
cltd
aaa
ljmp
loop
push
fcmovnb
cmp
add
dec
test
mov
nop
pop
inc
leave
jmp
les
sbb
jbe
popf
out
cmc
stc
mov
mov
iret
sbb
cmp
mov
xor
pop
out
mov
lea
cmp
clc
cmp
jnp
xorb
adc
aad
jbe
push
push
jae
pop
push
jnp
or
in
andb
push
out
or
xor
iret
cmp
xor
push
or
and
or
xchg
xchg
lahf
push
sbb
inc
and
push
scas
or
xor
sahf
clc
scas
cmp
sbb
push
imul
shll
mov
cmp
ficomps
and
push
inc
add
jle
pop
aas
sarb
lcall
cltd
rclb
jp
popf
jns
enter
sbb
xchg
fwait
sbb
lea
xchg
scas
push
and
xchg
aam
dec
lods
fnstsw
dec
mov
inc
shrl
orl
or
mov
lcall
lock
xorb
out
push
sbbl
dec
je,pt
ret
icebp
daa
leave
pop
lcall
mov
mov
inc
inc
pop
dec
fwait
xchg
movsb
sub
inc
sar
mov
enter
or
adc
jecxz
in
imul
xchg
or
cld
cltd
and
inc
dec
idivb
cltd
inc
mov
jo
pop
aas
xchg
push
mov
add
mov
sbb
add
cmp
cmc
cld
jecxz
and
cmp
inc
jp
bound
hlt
fimull
inc
inc
push
lods
movsl
ret
test
jno
push
adc
test
cld
xchg
cmp
push
lret
jo
stos
fs
push
cmc
mov
mov
arpl
adc
mov
aad
and
je
dec
les
cmp
in
jno
inc
les
cmp
mov
push
stos
mov
repz
lahf
cmpsl
or
adc
movsl
xor
fimuls
dec
mov
fwait
dec
sub
arpl
push
roll
int
movsb
ror
mov
push
jbe
aad
ja
sarb
inc
push
mov
pop
sub
out
mov
jo
lcall
cmc
out
or
in
jo
mov
jle
xor
xchg
push
mov
mov
movsb
mov
lret
int3
sbb
dec
inc
mov
mov
sub
roll
adc
movsb
ljmp
je
roll
and
dec
andl
push
movsb
call
ljmp
int3
lea
rcrb
mov
repnz
inc
dec
sarb
fiadds
xchg
fwait
sti
pop
fdivrs
clc
sub
push
jns
cltd
cmpsb
sbb
fcoms
in
dec
lods
call
mov
mov
mov
mov
ret
int3
push
or
sarb
sbb
mov
imul
or
into
push
and
rorb
repz
xchg
sahf
adc
mov
cmpsb
filds
mov
mov
and
scas
add
cltd
stos
aaa
adc
sbb
leave
popa
pop
mulb
in
aas
jl
std
pusha
test
mov
cmpsb
pop
push
sarl
xchg
aaa
sbb
mov
mov
int
xchg
outsb
xchg
jle
and
int
xor
ljmp
std
dec
sbb
add
int3
lods
or
or
jns
or
mov
lods
scas
aad
add
or
rcl
inc
mov
outsb
jb
or
out
sbb
dec
cmp
adc
test
inc
push
inc
hlt
push
out
lret
xchg
mov
sbb
addr16
cli
sbb
cmpl
ror
cmpsb
push
or
popa
nop
dec
mov
add
mov
mov
sub
sbb
xchg
pop
dec
hlt
ret
lahf
xor
cmp
test
popa
pop
in
sbb
imul
es
sub
and
scas
aad
fwait
and
pop
pop
les
cmc
cwtl
jecxz
loope
sbb
add
mov
jb
les
adc
js
lods
dec
pop
mov
jne
pop
adc
jae
and
loop
scas
jecxz
xchg
cmpl
nop
dec
nop
inc
inc
xchg
insb
mov
out
scas
lret
mov
sub
les
adc
out
inc
nop
add
push
dec
xchg
repnz
lea
cmpsb
mov
pop
sub
nop
dec
stos
cmp
pop
cwtl
andb
mov
jo
bound
lods
mov
xor
notb
shlb
sub
clc
das
jmp
dec
jae
sti
loopne
cmpl
inc
repz
negb
rorl
sub
add
xchg
fwait
test
dec
xor
dec
add
shll
jmp
mov
mov
mov
repz
mov
push
sbb
pop
push
mov
jmp
orb
nop
jecxz
pop
mov
xchg
add
lahf
test
sbb
int
inc
loop
scas
in
pop
and
jl
lods
xchg
lret
popf
pop
mov
add
dec
dec
push
push
mov
scas
push
mov
gs
jecxz
movsl
outsb
movsl
sub
aas
add
out
mov
mov
ja
sub
pop
mov
bnd
or
popf
aam
enter
mov
xor
xor
pop
xchg
ja
decl
orb
jge
inc
in
jns
pop
sbb
xchg
aad
inc
cli
je
xor
add
popf
in
mov
cmpsl
loop
or
or
inc
test
rcrl
mov
ljmp
sbb
scas
push
lods
insb
icebp
imul
jno
inc
mov
lahf
stos
lods
out
loope
flds
ret
cwtl
pop
test
mov
cmp
clc
js
inc
adc
cmpsl
and
jo
dec
dec
nop
aam
lahf
mov
icebp
lcall
sub
cmp
lret
jle
xor
xlat
aas
mov
push
xor
ljmp
mov
cmpsl
ja
pop
pop
xchg
repnz
inc
adc
sub
cs
cmp
push
cltd
out
scas
push
mov
adc
shlb
pushf
cmp
cmpsb
push
sub
lods
test
mov
push
das
in
push
call
xor
cmp
fcmovnb
jg
pop
movsb
xor
pop
cmpsb
fmuls
fisttpll
pop
shlb
mov
lea
xchg
or
out
incl
stos
mov
test
xchg
hlt
ljmp
std
xor
and
xchg
jmp
mov
inc
xor
xchg
add
push
ds
mov
aam
ficoml
popf
sub
cmp
scas
es
xor
fadds
divb
push
cmp
loop
add
fistpl
mov
sub
mov
ss
push
incl
push
paddb
dec
jp
sbb
addr16
mov
fwait
or
dec
jge
jbe
push
or
lcall
stos
out
imulb
cmp
notl
ds
cld
sub
js
rcrl
inc
add
xchg
in
or
divb
sub
enter
dec
call
sbb
mov
push
mov
pop
jb
movsl
inc
outsb
and
inc
or
mov
mov
test
xchg
jno
mov
outsb
xor
fs
inc
dec
pop
pop
xor
loopne
pop
mov
cli
and
sbb
cmp
mov
push
movsl
push
cs
dec
insb
cwtl
mov
inc
sahf
repnz
inc
xor
jbe
aaa
nop
movsl
fwait
shrb
idivl
movsb
jno
xchg
aam
int3
and
sbb
pop
xor
std
mov
shr
mov
lret
adc
xor
jl
lret
mov
mov
pop
lret
out
cmc
mov
outsb
shr
rcrl
and
sub
or
mov
xchg
js
jmp
fistpll
in
fcoms
jb
lcall
mov
dec
xor
out
mov
cmp
sub
cmp
in
dec
cmp
push
cmpl
loope
mov
imul
xchg
mov
rcrl
sub
pop
sti
jns
mov
stc
mov
scas
rolb
clc
push
mov
aad
imul
ljmp
adc
hlt
mov
xchg
dec
push
lds
sbb
add
jae
cmp
loopne
repz
leave
pushf
dec
pop
sub
hlt
cmpsb
loopne
and
pop
test
sbb
call
jne
sub
inc
cmp
push
adc
repnz
cli
jne
jmp
xorb
popa
subb
mov
mov
dec
stc
in
inc
fnstcw
sahf
adc
or
je
outsb
iret
repz
in
push
es
pusha
pushf
fisubrs
mov
jmp
loopne
mov
and
jae
sbb
xor
test
and
out
ds
xchg
test
sub
jecxz
mov
call
dec
iret
sub
sub
cmpsl
sub
pusha
clc
pop
pop
adc
in
jo
push
stos
inc
rol
cmp
push
sbb
sti
sbb
cmp
popf
in
fwait
sahf
shll
jge
jns
cmp
mov
xchg
loope
mov
or
aas
push
push
xchg
call
scas
fcomi
inc
sbb
fidivrl
lret
xchg
dec
popf
xchg
pop
add
xchg
ljmp
icebp
xchg
jns
sbb
jns
loop
jmp
scas
mov
out
inc
lds
xlat
inc
jno
and
call
xchg
aad
mov
xlat
push
insb
inc
cmp
jp
lcall
inc
sbb
cmp
xor
xor
adc
movsl
cmp
cmpsb
shrb
jae
ret
mov
push
loop
ret
jb
cld
jge
mov
mov
sub
repnz
dec
sarl
lret
xor
mov
nop
sbb
mov
scas
mov
add
cmc
call
hlt
xchg
test
int
fbld
pushf
in
es
je
xchg
xlat
psubsw
mov
push
sbbb
xchg
pushf
pop
ljmp
push
push
testb
xor
inc
in
movsb
in
mov
mov
jmp
and
enter
fsub
int
js
jmp
push
dec
mov
icebp
sub
ret
sbb
aas
das
dec
add
xchg
cs
jecxz
xchg
addl
pusha
lret
mov
hlt
ss
mov
aad
fcompl
shl
push
inc
movsb
jbe
or
xor
add
movsl
idiv
mov
mov
xor
push
sub
and
pop
imul
std
mov
popl
nop
push
lods
mov
xchg
test
mov
sbb
jecxz
jbe
test
cmp
loope
ja
mov
les
fsub
jge
and
or
andl
adc
pop
es
pop
enter
shlb
mov
outsb
and
pop
add
jl
fxch
dec
out
or
in
es
mov
push
xchg
arpl
pushf
lret
pushl
aad
jg
dec
addr16
filds
add
in
adc
mov
vdivpd
mov
jle
loop
xlat
mov
outsl
xchg
inc
dec
pop
test
nop
or
testl
fs
jbe
dec
test
or
cmp
mov
inc
xchg
and
xor
fdivp
xchg
and
stos
and
jo
or
cmpsb
add
pop
rorl
push
sti
push
mov
lcall
jg
outsb
jl
or
enter
cmpsl
adc
mov
sbb
jle
push
popf
mov
jecxz
test
mov
daa
icebp
nop
shrl
test
mov
nop
rcrb
cmc
xor
ss
mov
mov
jo
in
call
ret
testl
cltd
cmovp
push
sbb
int
into
fnstenv
xchg
bound
sbb
mov
xor
in
xchg
add
dec
push
sub
mov
out
insl
out
je
push
jne
cmc
cmpsb
or
out
mov
sti
adc
enter
and
push
in
mov
pushl
or
mov
hlt
mov
outsb
adc
into
aaa
je
ret
hlt
xor
lds
jle
mov
roll
outsl
push
repz
mov
pop
dec
test
mov
xorl
popf
int
inc
pop
or
cs
scas
fwait
in
imul
ficomps
leave
mov
cmc
test
push
andl
popa
and
mov
mov
xchg
lcall
cmp
outsl
cwtl
aad
jle
loop
leave
fwait
sub
jb
xor
xor
jp
test
sarl
mov
push
mov
call
loop
xor
or
lret
test
pop
pop
jg
mov
mov
push
ss
push
arpl
and
loop
cwtl
mov
xchg
nop
push
xor
lods
gs
andb
xchg
ffreep
and
jb
mov
dec
adc
xchg
hlt
callw
adc
jb
and
and
inc
adc
mov
or
dec
data16
mov
add
ja
jnp
pop
or
push
push
xlat
cs
sub
dec
call
add
or
shl
adc
add
sub
or
loop
jmp
dec
in
ja
cmp
sbb
sub
cmp
stc
and
sarb
sbb
and
add
lods
xchg
enter
movsb
popa
fldl
stos
pop
or
mov
inc
imul
jbe
or
mov
cmpb
pop
mov
xchg
clc
inc
subb
add
inc
jns
std
cltd
pop
inc
and
xor
sbb
adc
arpl
ss
inc
sbb
imul
jno
test
sar
out
cmp
je
lods
in
shlb
ret
pop
mov
fsin
lea
xchg
mov
jge
xlat
addb
jecxz
xchg
sub
inc
sub
leave
je
cmp
dec
cmp
std
pop
rorb
mov
adc
sbb
or
cwtl
fildl
iret
pop
mov
dec
into
mov
add
push
cmc
push
mov
xor
inc
jl
inc
rcrb
jne
jcxz
leave
and
jo
in
xor
int
add
adc
int
in
aas
iretw
lret
lock
and
and
pop
jp
aas
adc
and
inc
jg
mov
or
push
add
jno
aas
cmc
push
ret
in
or
daa
adc
pop
lcall
jb
mov
jg
or
jg
fimull
add
outsb
test
jae
nop
pop
xchg
shrb
int
dec
cmp
add
xchg
mov
mov
popf
mov
orl
cltd
jp
stc
pop
xchg
cmp
cltd
mov
or
xor
sub
addb
jns
xor
loope
sub
iret
xchg
pop
jmp
inc
xchg
xchg
enter
aas
cmpsl
fcmove
xlat
mov
push
ss
nop
rcll
cmp
sub
mov
lock
cmp
xchg
push
adc
dec
push
and
addr16
sub
push
push
push
mov
xchg
dec
mov
lahf
jne
push
enter
sbb
xor
ja
and
inc
xor
mov
mov
jns
rcll
scas
loop
xchg
test
gs
add
scas
cmpsl
outsl
test
add
enter
fistps
rclb
cmc
dec
push
rcrl
in
fsubrs
adc
aaa
push
nop
stos
in
shl
leave
imul
or
or
cmpsb
cltd
call
in
dec
cmc
xor
addl
inc
cmp
lods
sub
test
arpl
jno
mov
out
and
mov
cmp
mov
jge
xor
pop
jno
fisubrs
aad
sahf
icebp
call
jg
push
vmovq
lods
jmp
jno
sub
mov
inc
push
xchg
dec
or
stc
decl
cmpsb
fiadds
aaa
xchg
sub
imul
mov
fildll
push
ja
shll
js
mov
stos
dec
add
sub
das
or
dec
nop
movsb
jmp
rcrl
pop
push
jns
les
fcmove
lret
int
lock
das
mov
dec
fisttps
adc
pop
mov
lret
lock
jno
sti
data16
pop
popf
and
lds
test
cmp
sub
add
cwtl
dec
in
jl
xlat
add
std
popa
push
jmp
xor
out
mov
xor
mov
xchg
scas
mov
inc
push
ds
push
mov
les
test
std
fdivs
sub
inc
jno
pusha
jns
fwait
out
test
inc
clc
testb
scas
fwait
mov
xorl
loope
sbb
ret
ljmp
pop
jle
mov
jno
sub
test
cs
xor
orb
js
mov
mov
pop
enter
jnp
repz
cmp
adc
aaa
sub
addr16
jne
mov
xchg
dec
orl
insl
fs
daa
xorl
cmc
fcoms
sti
mulb
sub
ljmp
lds
mov
add
inc
dec
lea
sbb
das
dec
mov
pop
push
xlat
mul
jecxz
push
xor
adc
test
mov
jnp
jnp
push
lret
jmp
or
cmp
ss
mov
fdivr
add
sbb
xchg
int
jp
test
jns
adc
mov
cmp
dec
cmpb
mov
jns
jb
add
out
dec
pusha
in
popf
pop
popf
push
jno
add
int
xlat
in
jo
rorl
xor
js
rcrl
mov
imull
xchg
loopne
lods
cli
dec
mov
popf
ret
lock
xor
out
dec
mov
insl
test
jno
dec
jge
xor
insb
add
jno
add
lcall
push
lea
repz
repnz
push
stc
sar
cld
or
mov
push
jle
pop
add
fildll
fisttpll
outsl
pushl
xadd
inc
addr16
insl
pop
into
cwtl
push
mov
in
adc
pushf
loopne
xchg
out
add
sbbl
xorl
ficoml
leave
add
pop
decl
sbb
dec
daa
cltd
jge
movsl
sarl
mov
jp
mov
xlat
push
cmpl
xchg
xor
cmc
adcb
xchg
popa
xlat
cld
fisubs
dec
hlt
repz
es
pop
jb
inc
test
mov
sbb
outsb
lret
nop
cmp
dec
data16
push
jo
lea
jno
out
and
outsl
aas
iret
adc
addl
or
test
hlt
outsl
pop
lcall
jle
call
mov
out
adc
push
dec
lods
jb
cmp
scas
stos
fildl
out
fs
mov
push
jne
ja
pop
pop
jmp
push
xor
dec
or
add
xor
mov
cs
jno
in
mov
add
inc
pop
or
pop
cli
push
out
and
xor
xchg
xchg
shll
and
cmp
bound
jnp
mov
cmp
dec
mov
out
cmp
fdivrs
inc
sbb
test
dec
pop
idivl
rorb
fists
mov
adc
insl
ljmp
sbb
push
mov
xorl
mov
pushf
jb
lret
and
movl
push
pop
adc
mov
call
sarl
xchg
cmpsl
sub
test
pop
mov
push
rcrl
mov
int
pushf
or
cmpl
push
or
add
xlat
das
sub
sub
mov
mov
cmp
jmp
sub
push
and
cmpsb
sub
xorb
mov
xor
mov
mov
sbb
and
shll
add
fidivs
lock
dec
pop
cmpb
pop
fcomip
cmp
fisubl
add
jl
pop
push
std
jmp
xor
mov
add
mov
sahf
mov
or
jmp
and
xchg
scas
enter
int
jns
fldt
daa
cs
mov
mov
arpl
push
clc
mov
and
xchg
daa
int3
push
daa
adc
movsl
add
or
sti
enter
pop
xchg
fildl
mov
push
aaa
int
cmp
out
or
fstl
mov
xor
test
test
fstl
js
mov
cmp
xor
shr
or
xchg
push
mov
xchg
xlat
and
push
adc
lret
mov
cmp
sbb
ljmp
data16
addr16
cmp
jmp
inc
push
sarl
jl
pop
jle
jmp
ljmp
mov
dec
push
scas
arpl
jl
jno
jae
mov
pushf
ret
ljmp
sbb
jl
xor
mov
dec
rorl
dec
cmp
pop
pusha
mov
loop
jmp
push
xchg
mov
fisubrs
aam
call
mov
std
je
filds
adc
mov
rcrl
dec
xchg
sbbl
popf
mov
mov
mov
sbb
iret
add
inc
mov
add
mov
out
mov
xor
dec
int3
push
xchg
dec
mov
or
ja
shl
in
stos
mov
aaa
lock
rcll
inc
cmp
aad
lahf
outsb
xchg
sub
stc
adc
mov
jo
insb
inc
mov
and
imul
icebp
push
aas
sub
inc
inc
mov
adc
cmpsb
cltd
ds
out
mov
aad
dec
xchg
lea
pop
inc
mov
stos
mov
aaa
add
xor
mov
mov
cmp
adc
pusha
loopne
or
ja
and
scas
pop
mov
out
push
adc
nop
das
mov
xchg
dec
js
mov
sbb
mov
nopl
lods
cmp
push
mov
sbb
mov
es
daa
and
jl
out
push
jns
jb
outsb
notb
adc
mov
mov
cmp
insb
in
inc
repz
adc
notl
aas
setno
fidivrl
mov
and
outsb
adc
dec
or
pop
int3
add
ja
das
scas
pop
jae
aas
add
cmp
adc
daa
mov
dec
pop
sbb
call
out
and
ja
sub
jmp
inc
mov
pop
dec
std
push
sub
mov
xor
push
xchg
xchg
hlt
push
cmpb
xchg
dec
jp
add
adc
out
mov
xor
ret
lea
scas
inc
pop
push
incl
jmp
fbld
mov
out
or
sub
sti
pop
pop
xchg
loopne
inc
and
pop
inc
pop
inc
sub
lods
mov
push
push
push
into
mov
sbb
fwait
jge
or
cli
aam
inc
cltd
sti
mov
inc
ljmp
sbb
xchg
sub
jp
xchg
rep
xchg
xor
outsb
cmp
push
mov
shlb
xor
dec
call
push
sti
mov
jb
mov
and
in
dec
xor
arpl
mov
fistps
add
push
sub
or
jecxz
sub
stos
push
rcrb
je
add
fcmovnu
ds
mov
mov
sbb
pop
fadd
stos
add
pop
enter
mov
inc
into
jecxz
push
jb
xchg
xor
leave
daa
test
jne
fimull
cmp
push
and
sub
cmp
aas
cmpsb
rcll
mov
rorl
pop
fwait
push
sbb
arpl
mov
cmc
xchg
stos
loopne
or
mov
inc
mov
xor
clc
push
and
or
stc
stos
hlt
add
cmp
jmp
imul
stos
ljmp
and
enter
andl
and
lods
shlb
and
xchg
jmp
test
cmpsl
dec
std
rclb
scas
ret
les
fwait
orb
call
fldenv
repz
ja
lcall
jmp
enter
iret
sbb
jo
insl
and
shl
xor
jmp
ret
repnz
jp
jo
mov
adc
pop
daa
mov
inc
stos
clc
ficoml
pusha
fdivrs
xor
xchg
mov
dec
xor
mov
in
and
pop
sbb
cmp
mov
pop
xchg
loopne
mov
nop
cmp
pop
inc
arpl
mov
lahf
mov
scas
out
mov
mov
cmp
jnp
pop
jne
pop
mov
dec
les
out
ficoml
sub
push
divl
push
sahf
lods
sbb
mov
lcall
ja
ds
jb
leave
incb
xorl
dec
insb
xchg
sub
ret
mov
or
pop
jo
aas
bound
daa
mov
lods
sbb
jge
fdivrl
push
sti
sahf
imul
hlt
adc
mov
pop
flds
outsb
push
sub
sbb
ss
inc
lock
cmp
jmp
dec
stos
mov
cmp
cmp
repnz
imul
and
sbb
mov
xchg
push
in
sbb
adc
inc
jbe
mov
out
dec
insl
jnp
aam
leave
pop
mov
jl
iret
rolb
addr16
shll
mov
sub
inc
int3
loop
mov
or
sub
pop
adcb
aas
js
sub
imul
fs
or
push
or
pop
loope
mov
add
adc
or
cmc
pop
pop
cmp
and
mov
popa
xchg
inc
notb
jmp
std
mov
ds
aas
daa
add
sub
jp
insl
ret
cmpsl
popa
xchg
sub
mov
lods
mov
outsb
insl
adc
add
inc
fs
or
stos
dec
pop
fs
incl
jns
and
lods
jno
and
xchg
lea
mov
dec
sbb
or
cltd
xor
pushf
lods
lea
popf
xchg
in
dec
xlat
rolb
sbb
dec
rcrb
mov
popa
mov
lret
movsl
push
sbb
sarl
mov
aam
aaa
cmp
pop
data16
add
xchg
jo
lcall
enter
add
xchg
adc
cmc
into
inc
int
out
dec
xchg
rolb
cmpsb
lods
std
pushf
lret
or
mov
jle
cmp
adc
fisttpll
dec
sub
push
xor
aas
addr16
cmp
div
je
push
inc
mov
sbb
int3
dec
pop
int
dec
push
scas
daa
ret
xor
cmp
add
jg
or
or
divb
sub
xchg
xlat
enter
nop
pandn
dec
mov
push
icebp
pop
arpl
push
dec
sub
xor
lcall
iret
push
push
ror
inc
cmpsb
insb
jl
dec
xchg
push
fisttpll
aas
adc
popf
js
add
sbb
sti
lret
push
inc
aas
inc
in
scas
push
mov
fmuls
std
pop
or
bnd
push
xchg
add
mov
stos
int3
inc
sub
movsb
add
push
cmpsl
hlt
outsb
daa
xchg
cmpsb
addl
xchg
mov
pop
out
mov
cmpsl
sti
push
mov
mov
xchg
jo
gs
push
xchg
xlat
cmp
xchg
dec
idiv
jb
cli
push
push
pop
iret
sarb
loopne
jnp
add
pop
aam
loop
and
fisttpl
dec
lods
rorl
cld
and
add
push
push
testl
xchg
push
js
hlt
jge
cmpsb
xchg
mov
xchg
pop
mov
or
lods
icebp
in
and
ss
pusha
sub
stos
dec
dec
int3
sub
daa
xor
pop
leave
xor
pop
pop
push
ja
mov
adc
call
mov
push
add
dec
sub
in
pushf
outsb
das
jne
mov
in
push
or
ret
cmp
mov
pop
cmp
mov
lahf
flds
and
mov
pop
inc
ret
stos
and
faddl
test
orb
int
or
cmp
push
in
push
outsb
test
icebp
insl
and
sub
xor
cmp
nop
addr16
cmpsl
shrb
dec
icebp
daa
in
inc
jg
mov
mov
cmc
sbb
je
push
push
cmp
sub
movb
fidivrs
les
cmp
ret
pop
and
adc
jge
sub
jne
lret
mov
add
stos
lds
xor
dec
push
mov
lods
insb
and
addr16
push
int
icebp
mov
mov
test
js
inc
ds
mov
icebp
fiadds
mov
adc
cs
mov
jl
and
inc
mov
cmp
fldl
aam
loopne
shll
and
mov
pop
and
cmp
lret
orl
aaa
jp
xor
jb
int3
enter
mov
out
test
xchg
inc
mov
pop
sub
xchg
xor
scas
cmp
je
ret
push
das
adc
fldl
std
mov
cmc
sub
mov
fldcw
dec
and
aaa
push
jns
fildll
repz
sub
and
sub
xor
ds
dec
pop
mov
lods
adc
mov
scas
xor
lret
sub
adc
sub
fildl
xchg
imul
into
mov
js
mov
aaa
xor
rcr
add
jge
sbb
stc
sbb
popa
xchg
push
lock
ja
inc
aam
notb
mov
sahf
push
pop
daa
mov
ret
pop
jle
xor
dec
clc
iret
mov
das
sub
cmpsb
pop
hlt
mov
bound
mov
push
mov
mov
mov
and
dec
mov
cmpsl
push
adc
xor
xor
pop
shr
xor
push
push
leave
js
roll
jb
add
shl
outsl
mov
push
and
mov
lret
divb
xchg
addr16
mov
xchg
and
imul
xchg
sbb
ret
mov
sbb
xchg
js
stc
stos
sbb
xor
lods
adc
les
int3
sbb
push
and
cmp
ret
push
adc
out
loop
xor
cmc
push
call
enter
jmp
add
or
in
test
mov
dec
jecxz
and
mov
shr
loope
int3
push
fwait
lahf
inc
sub
add
movsb
push
dec
mov
and
cs
pusha
add
ss
ret
fdivrp
push
andl
xchg
and
inc
fsubrl
mov
sub
pop
adc
push
fwait
orl
pop
rcr
inc
cmpsl
std
push
pop
popa
bound
test
cli
nop
mov
push
adc
inc
jge
inc
les
push
test
fbld
dec
les
cmp
ss
fwait
xor
add
push
sbb
xor
ret
ret
nopl
rcl
icebp
dec
lods
push
xlat
inc
xor
lods
fldenv
mov
push
test
outsl
and
sti
xor
jl
sahf
outsb
shrb
jle
lods
mov
xlat
or
xorb
pop
js
cmp
leave
cs
inc
jb
fcompl
jecxz
pushf
mov
mov
pop
and
test
aas
lret
jo
pushf
ss
xorb
fwait
cmp
push
lea
movsl
bound
test
sub
and
push
in
xor
fwait
addr16
cmp
mov
daa
xor
inc
xor
clc
test
pop
push
dec
dec
aaa
pop
add
outsl
inc
outsb
add
xor
cmc
jge
fimull
mov
sub
adc
push
inc
jo
bnd
lea
into
fisttpl
ret
mov
sarl
jmp
dec
adc
cmpsl
pushf
xchg
lret
or
inc
xchg
hlt
repnz
add
add
not
outsl
pop
cltd
mov
inc
pusha
push
dec
and
xlat
and
mov
mov
int3
cmp
sub
xchg
mov
inc
mov
push
loopne
clc
ret
xor
and
jns
cmpsl
ret
and
out
cwtl
mov
pop
enter
orb
dec
sahf
fstl
or
in
in
mov
push
jns
hlt
adc
js
mov
loop
sbb
and
in
add
int
mov
mov
neg
jge
xlat
mov
ret
loop
stos
mov
test
inc
pop
jae
sbb
repnz
fistl
es
out
adc
fidivl
mov
movsl
out
jle
jbe
or
mov
mov
lods
push
dec
or
gs
test
and
cld
inc
cwtl
sub
inc
xchg
aad
repnz
cmp
xor
testb
sbb
movsb
js
in
sub
xchg
mov
push
cmp
or
sbb
mov
and
stos
pop
xchg
in
neg
loope
adc
addr16
scas
push
pop
adc
fwait
xchg
movsb
call
jae
push
adcb
mov
mov
fdivs
mov
xchg
push
movsb
lret
mov
mov
not
adcl
xchg
test
cmp
testl
pop
mov
push
cmpsb
pop
rcll
dec
xor
hlt
scas
inc
stos
sub
pop
sbb
inc
and
insb
pop
inc
mov
cli
pop
dec
dec
rorb
mov
pop
aaa
subb
lock
mov
mov
jb
int3
inc
out
xor
push
leave
ret
xor
inc
jecxz
movsl
sub
jge
adc
add
mov
mov
cltd
mov
iret
dec
or
out
or
gs
insl
or
pop
mov
mov
pop
repnz
int3
je
xchg
call
ss
jle
out
xchg
mov
cmp
ret
fidivs
in
push
xlat
test
ret
outsl
subb
aad
int3
xor
xchg
xorb
pusha
push
mov
out
divl
xchg
mov
xor
inc
inc
lds
mov
fxch
das
mov
pushf
push
call
add
jmp
scas
add
out
rcr
sub
xlat
mov
in
or
inc
pop
fnstcw
bound
inc
xchg
or
pop
xlat
or
bound
scas
adc
shrb
pop
les
fisubrl
lods
inc
mov
test
in
sub
in
and
imul
loopne
sbb
imul
inc
sub
sub
mov
lea
mov
add
gs
mov
push
mov
fildl
pop
and
push
push
or
enter
into
aam
test
cmc
fimuls
and
insb
cmp
loopne
add
xor
adc
dec
adcl
cld
dec
jo
add
inc
je
cmp
or
out
adc
lea
outsl
mov
in
pushf
sarb
pop
lcall
ret
loop
and
insl
sbbl
add
fnstcw
fmuls
sti
xchg
popa
ljmp
cltd
stos
or
jg
sub
cmp
repnz
repz
test
test
das
ret
lcall
scas
arpl
filds
ljmp
rclb
pushf
movsl
arpl
sub
movsl
sahf
test
and
cmpsl
and
fidivs
jne
jmp
out
mov
lea
and
mov
and
jg
push
and
jecxz
ja
mov
push
adc
pop
mov
sbbl
xchg
sbb
leave
mov
xchg
in
pop
imul
lret
imul
mov
adc
daa
jg
into
mov
mov
dec
adcl
xchg
push
jnp
jns
jnp
imul
addr16
call
mov
out
lea
mov
sbb
pop
bound
jg
add
add
sbb
adc
cmpsb
es
inc
sub
and
jno
push
ss
mov
mov
xchg
or
dec
inc
pop
out
mov
xchg
aam
enter
pop
jo
sti
bound
lahf
xchg
cltd
arpl
mov
ja
pop
pushf
and
fimuls
mov
xchg
test
stc
xchg
leave
cmpsb
je
outsl
push
or
jp
sbbb
insb
enter
jmp
mov
jecxz
add
adc
xor
data16
mov
sbb
mov
arpl
dec
sub
dec
sub
int
cwtl
jecxz
xor
mov
lret
push
adc
test
dec
shll
add
nop
mov
shll
cmpsl
mov
sub
shr
jecxz
lods
popf
xor
aam
dec
xchg
sub
lock
sbb
out
imulb
iret
push
sti
jg
sbb
cmp
je
mov
sarl
xchg
gs
inc
pop
hlt
push
arpl
shrl
xchg
mov
in
mov
pusha
ret
adc
ss
aad
jo
pop
push
cmp
call
push
test
shll
xchg
das
mov
sub
fs
jmp
or
mov
bound
inc
xchg
sub
insb
pop
push
dec
push
mov
cmp
xchg
rcrl
lds
mov
adc
inc
out
std
pushf
mov
jp
test
xor
mov
cmp
stos
sarl
inc
inc
sbb
cmpsb
pop
in
xor
fbld
test
push
or
out
adc
cmp
leave
mov
mov
push
out
pop
fstpt
int3
fisttps
sti
mov
cmc
lods
mov
xor
clc
mov
mov
mov
imul
into
or
rclb
sarl
jmp
rorb
inc
dec
sub
lds
pcmpgtb
mov
sbb
xor
js
es
sahf
std
pop
cmc
add
cwtl
adc
ja
mov
jle
mov
in
jl
shrl
insl
bswap
pop
xchg
pop
mov
sbb
scas
mov
inc
repz
sahf
cmp
daa
jae
and
out
pop
inc
fbstp
test
jg
cmpsb
jb
sub
or
pop
lock
jbe
sub
push
shll
add
sbb
insl
jecxz
rcrb
in
pushw
pushf
sub
xchg
dec
xor
std
in
push
dec
cmp
jns
sbb
shll
mov
lock
movsl
inc
filds
push
jecxz
mov
xchg
fcompl
mov
cmc
sub
cltd
ds
dec
pop
call
mov
pusha
pushf
fldl
arpl
jmp
or
js
fstpt
aad
mov
fistps
jne
jge
jge
cmp
jmp
jae
push
mov
mov
and
push
mov
jae
sub
cmpsb
cmpsb
cld
test
add
sub
dec
int3
mov
jns
rorb
fs
stos
jne
inc
sub
or
int
mov
cli
push
cmp
sub
fisubl
mov
jne
mov
push
hlt
mov
fidivl
scas
lahf
enter
notb
pop
jne
test
in
push
push
divl
sbb
push
pushf
in
pop
test
add
scas
addr16
fiaddl
adc
sub
ficompl
loop
mov
dec
aaa
jle
arpl
pop
shrl
cwtl
mov
mov
xor
mov
lcall
les
lods
add
outsl
adc
jno
pop
mov
gs
stos
jge
sbb
test
sbb
iret
sub
sbb
sub
mov
push
ficoms
jge
int
out
jl
lea
or
sbb
xchg
test
pushf
vmsave
cld
xchg
push
addr16
xor
dec
xchg
mov
push
pop
mov
sub
mov
sbb
imul
sub
inc
sti
add
sub
ljmp
enter
push
inc
xchg
movsb
loope
mov
mov
pop
aad
mov
xor
movsl
out
adc
mov
pushf
and
outsb
cmpsb
add
lret
out
xchg
rcr
add
div
pop
xchg
mov
xor
out
int
sub
addr16
xchg
out
sbb
jae
cmpsb
lcall
sahf
fisttpll
mov
insl
fmull
add
dec
and
xchg
movsb
call
fnsave
pop
xchg
sbb
pop
dec
jg
mov
addb
pop
inc
mov
repnz
cmp
add
adc
sbb
add
nop
out
jno
xor
pop
mulb
xchg
mov
cli
fsubr
push
sub
push
sub
nop
xor
add
jo
ljmp
in
ret
mov
stc
xchg
jne
lock
fsubr
test
sub
inc
sbb
jge
aas
data16
scas
loope
xchg
scas
inc
mov
ss
out
sbb
aas
lea
jp
outsb
les
loop
cvttps2pi
imulb
mov
fdivl
int3
out
jo
mov
mov
pusha
mov
pop
pop
loopne
les
xor
push
jmp
fcomps
mov
pop
inc
push
icebp
daa
lahf
ret
popa
leave
mov
bound
mov
mov
or
mov
in
add
stos
xchg
cwtl
data16
jmp
jns
repz
dec
sahf
mov
roll
and
stc
dec
cmpsl
bnd
fidivl
push
jae
sub
outsl
scas
aad
jecxz
fmuls
mov
insb
inc
int3
lcall
gs
cmc
xchg
jmp
in
test
lock
xor
jnp
push
subl
imul
jg
sub
mov
into
sbb
add
push
repnz
push
clc
ficomps
inc
jno
cmp
xchg
push
add
push
mov
test
xchg
adc
mov
xor
mov
and
push
cmp
add
or
lret
popf
or
xor
lahf
pop
sbb
loopne
imul
daa
mov
sub
add
sub
test
cld
rcrl
aas
test
push
mov
jo
adc
fcmovu
subl
add
jns
imul
adc
ds
testb
pop
adc
loope
out
or
ja
call
cs
cmp
pop
sub
enter
push
pushf
xor
sub
add
aaa
lds
xorb
dec
lcall
punpckhdq
or
outsl
or
out
jno
outsb
fnstenv
fldl
xchg
jb
dec
pop
sub
in
popf
push
fisubrl
mov
adc
je
rcrb
enter
mov
iret
xchg
jl
jb
lods
jns
out
cli
push
pop
mov
enter
repnz
push
add
les
imul
and
js
xchg
mov
or
testl
out
jg
mov
outsl
inc
test
out
dec
or
sbb
add
jne
pop
popf
mulb
into
movsb
mov
ret
int3
pusha
fisubrs
push
mov
mov
push
xorb
pop
loop
cmp
cmpsl
fsubs
fldl
pop
jne
sub
push
cld
adc
andl
lcall
sbb
and
bnd
test
pop
xchg
mov
jle
jle
adc
lods
add
mov
ret
push
arpl
loopne
fldl
push
decl
int3
xor
ds
jnp
ljmp
loopne
inc
push
or
jns
cwtl
in
adc
mov
pop
in
std
or
outsw
mov
sbb
jle
dec
jb
add
push
ficomps
andl
lock
cltd
inc
and
out
aaa
dec
sub
sbb
test
sahf
ret
push
add
mov
stos
test
pop
in
cld
into
mov
fsubs
cmp
push
scas
jne
mov
pusha
push
enter
mov
int3
adc
inc
outsl
mov
adc
fwait
jns
push
sbb
mov
push
cs
fstpt
mov
xchg
rcr
loope
sub
cmpsl
sub
xor
mov
xor
add
mov
mov
movsl
mov
cld
psubq
mov
mov
pop
out
aam
in
ficoml
fists
ret
and
dec
add
daa
jbe
loopne
xor
fiaddl
pop
xchg
sub
popf
fisubrs
pop
daa
stos
xor
or
into
mov
jae
sub
out
sbb
leave
and
out
out
xor
xchg
popl
adc
pusha
add
xor
or
and
xchg
sahf
push
insb
inc
inc
popf
mov
jbe
adc
loop
pop
mov
fwait
cltd
jmp
inc
adc
inc
and
fstl
cmc
popl
js
jbe
pop
lock
push
stc
ja
add
arpl
sbb
push
push
divb
mov
fnstsw
ret
cltd
jmp
int
idivb
repz
jle
jno
dec
push
dec
cmp
popf
icebp
adc
stos
dec
cs
xlat
cmp
mov
dec
xchg
xchg
xchg
add
and
pop
leave
fdiv
hlt
leave
je
and
into
cmpsb
xchg
imul
inc
pop
lret
adc
les
xor
jnp
push
outsb
jno
inc
push
nop
ret
jle
scas
stos
fisttps
icebp
pop
leave
sar
es
cld
push
sbb
out
leave
mov
or
insb
aad
and
push
and
lods
or
adc
sub
or
sarb
dec
popf
inc
daa
push
push
jo
outsb
lret
xchg
mov
push
mov
push
lods
jns
cmp
mov
fwait
outsb
xchg
shlb
push
ret
jo
cmp
push
or
inc
sbbb
out
call
push
or
int3
mov
aad
rcrb
sbb
fmull
add
gs
imul
pop
mov
imul
jl
insl
push
mov
inc
lds
sub
sub
popf
in
in
js
popa
imul
jge
jns
xor
cli
std
ret
jge
add
push
fmull
lret
mov
or
lea
ds
jl
or
aaa
sub
sti
add
sarl
repz
jg
dec
popf
pop
cmp
xlat
adc
jno
xchg
movsl
imul
lods
movsb
mov
sarl
add
push
xchg
sbb
outsb
jno
cmc
push
and
roll
sub
push
xchg
sti
ljmp
out
stos
cld
imul
push
lock
mov
sub
xchg
sbb
sti
jae
pop
sbb
int3
inc
push
or
into
mov
pop
xchg
push
fs
cmp
adc
jge
cltd
dec
adc
mov
adc
mov
mov
je
pop
jno
fcmovbe
pop
out
bound
push
pushf
ds
out
xchg
scas
mov
lret
into
sahf
fs
loope
mov
sti
mov
movlps
sbb
inc
push
add
xor
sbb
imul
dec
mov
std
imul
inc
insl
stc
xchg
sub
rcrl
push
sub
dec
ret
mov
dec
mov
jg
out
insl
lret
pop
leave
and
cmp
add
rol
adc
add
dec
add
cwtl
popf
jo
fs
lret
in
insb
mov
insb
cmp
iret
mov
lock
loope
inc
push
addb
jg
dec
lock
scas
cli
jno
mov
pop
rorl
sub
push
hlt
out
sbbb
or
nop
ss
sbb
adcb
out
aad
daa
mov
jg
jae
rorl
jae
cmpb
sahf
rclb
sub
add
ljmp
jnp
push
in
cmp
and
jae
les
ret
je
clc
dec
movsl
jae
std
daa
cmp
pop
jnp
int3
pushf
inc
jle
push
xchg
mov
into
out
rorl
sub
insl
push
inc
fwait
cld
cmp
insb
push
mov
lret
hlt
notb
cwtl
cmpsl
int
popa
nopl
call
clc
cmpl
test
sub
push
add
mov
inc
cmpsb
lds
pushf
js,pt
xchg
aaa
mov
sub
loopne
into
lock
adc
inc
stc
xchg
lret
test
data16
push
data16
jb
mov
cwtl
out
test
lods
push
sarb
jbe
jge
sub
popl
and
jo
jge
je
test
jle
cmp
andl
and
mov
jb
jbe
addl
mov
inc
sbb
mov
nop
or
inc
mov
inc
movsl
cld
in
inc
mov
loop
lret
outsb
xchg
test
dec
xlat
aad
out
sar
test
outsl
rorb
or
pop
ljmp
xor
and
leave
or
test
or
push
iret
xor
sub
jno
xor
jnp
out
inc
sub
add
addr16
push
gs
incb
outsb
loop
push
cmp
dec
mov
xlat
xchg
jo
pushf
sub
inc
cld
push
dec
ret
lahf
out
cmc
add
enter
and
mov
dec
push
inc
cmp
sub
mov
outsb
cmc
inc
fstpt
iret
aas
ret
int
inc
loop
inc
inc
or
cmpl
stos
addb
sub
les
mov
push
inc
inc
clc
data16
notl
mov
and
fadd
or
sub
push
lcall
xchg
sbb
fldl
and
cmp
in
adc
ljmp
inc
fiadds
cltd
leave
mov
pop
lock
mov
mov
jl
lcall
dec
orb
in
mov
mov
jmp
popf
and
loopne
inc
pop
repnz
jb
test
sub
repnz
les
fsubrs
or
dec
es
addr16
movsb
insb
shrb
lea
cld
cmp
jno
mov
lret
notb
out
fistl
push
xlat
inc
mov
gs
rcrb
pop
jae
in
cmp
jae
xor
mov
lds
adc
pop
inc
mov
mov
dec
lcall
xchg
sbb
decb
adc
ret
test
scas
clc
inc
jge
xor
mov
xor
daa
xchg
xor
mov
push
xchg
mov
mov
pop
popf
and
out
pop
js
test
loop
mov
arpl
jbe
pop
int
push
xchg
push
cmovne
cmp
or
cmp
dec
std
fistps
sub
data16
sub
std
dec
cmp
jae
mov
sarb
inc
mov
push
cwtl
adc
shlb
xchg
aad
ret
jae
or
dec
xchg
scas
lods
or
flds
sub
push
and
movsb
ja
pop
push
and
call
jne
mov
xor
and
pop
cld
dec
test
dec
cwtl
fldt
shl
int3
and
xor
pop
roll
mov
add
lret
push
shrl
mov
adc
pop
insl
insl
aaa
lods
fisttpl
sahf
sar
data16
push
shl
cltd
out
cwtl
out
mov
shr
sub
and
icebp
lcall
cmp
and
adc
push
imul
arpl
mov
or
xor
lock
sub
out
xchg
or
and
aad
daa
fwait
repz
frstor
adc
sub
sub
mov
fs
mov
lods
xchg
mov
das
pop
scas
push
jle
jmp
jb
jbe
clc
sahf
test
and
add
pop
adc
push
sbb
rolb
cmp
inc
or
fsub
xor
jge
hlt
jo
scas
push
lret
aad
imul
mov
pop
movsb
sbb
pop
or
and
and
xor
cs
inc
mov
jge
or
lods
test
into
jb
in
loope
loopne
cmp
arpl
scas
fisttps
fiaddl
call
xor
mov
mov
jg
out
loop
sbb
aaa
mov
push
or
divb
insl
cltd
loopne
adc
cmp
mov
cmp
loop
jmp
lcall
dec
add
loop
cmpsb
push
xchg
pushf
in
xchg
dec
mov
jl
mov
movsb
cld
pop
mov
lahf
scas
cltd
dec
mov
in
jge
mov
out
cmp
mov
ljmp
mov
dec
cmpsl
inc
mov
sub
leave
cmp
sbb
sbb
lret
ss
mov
rcrb
sub
push
std
mov
je
gs
or
lahf
and
and
or
cmpsl
mov
pop
test
lahf
xchg
cmpsl
xor
xchg
sarb
sub
xor
jne
push
xchg
sbb
ja
sub
mov
fimuls
mov
aam
add
dec
inc
or
cmc
jne
mov
xchg
jp
repz
add
ret
in
ljmp
scas
adc
mov
push
pop
mov
mov
fidivs
pop
sub
in
sbb
cwtl
lds
cmpsl
int3
xor
dec
mov
xor
sbb
push
jle
enter
push
test
maxps
mov
gs
jge
scas
mov
xor
ret
jae
fs
xchg
jnp
lret
movsl
jp
xchg
mov
jo
pop
adc
add
mov
pop
push
push
stos
inc
jmp
icebp
test
jno
mov
inc
jg
fcomps
clc
mov
mov
dec
imul
cmc
xor
fldl
push
push
xor
add
pop
lods
inc
rcrb
outsb
push
aam
popa
mov
ja
std
fsubrs
cmpsl
ret
inc
mov
inc
stos
aam
popa
fdivrp
adc
or
loope
mov
xorl
idivl
dec
loop
xor
repz
rclb
sub
pop
mov
js
push
add
and
lcall
out
push
inc
mov
rcrl
mov
jne
cmc
adc
push
sub
pop
xchg
aam
xchg
sahf
mov
xchg
push
mov
cwtl
pop
cmp
xlat
js
in
pop
add
add
mov
xchg
xor
cmpsb
mov
test
mov
jl
cs
divl
xchg
imul
rcll
sahf
sahf
xlat
sahf
mov
jmp
test
push
jecxz
xor
adc
and
cmp
nop
cmpsl
sti
daa
push
push
mov
enter
jo
mov
push
mov
inc
loope
pop
pushf
cmp
movsl
sti
inc
dec
cmp
das
xchg
sbb
movsl
mov
lods
ret
inc
sub
outsb
insb
rcrl
or
xchg
push
and
dec
out
sbb
bound
addr16
push
jns
mov
sub
pop
popf
fwait
jmp
lock
push
xor
repnz
mov
or
loope
mov
adc
xchg
and
jg
jne
inc
scas
pop
ja
sbb
or
mov
xchg
jg
rcrb
aaa
cwtl
shr
lock
dec
pop
and
push
ja
inc
mov
psubq
outsb
loope
loopne
adc
pop
jno
xchg
push
push
push
sahf
pop
aam
mov
rolb
les
ss
fs
fsubl
lock
xor
add
xchg
sti
pop
clc
adc
mov
lock
sarb
es
out
out
adc
roll
lods
sub
jb
ss
xor
add
cmp
add
fidivs
adc
iret
jo
out
xor
addl
and
sbb
mov
xorb
mov
push
xchg
rorl
sbb
cmpsl
hlt
or
sub
popa
or
pop
mov
mov
xchg
push
out
xchg
cltd
popa
sbb
in
stos
push
sbb
and
rol
mov
jb
lahf
push
enter
mov
adc
call
pop
inc
adc
inc
lret
and
xchg
mov
stc
test
add
cwtl
xor
and
cmpsb
loop
push
aad
hlt
mov
out
shrl
push
dec
push
jb,pn
push
scas
and
jmp
stos
pop
aas
repnz
scas
insl
and
decb
in
daa
lcall
mov
fcmove
and
pusha
mov
adc
jl
mov
std
sbb
mov
lahf
xchg
push
push
ss
and
lret
icebp
test
xor
call
stos
jns
add
xlat
in
pop
sbb
xlat
aam
sahf
insl
push
popa
dec
xchg
frstor
and
mov
in
or
cli
sbb
out
pop
xor
sub
ljmp
in
adc
es
push
jae
pop
jg
rol
push
mov
icebp
push
mov
xchg
cs
sub
mov
ja
lds
sub
mov
mov
movsb
stc
outsl
pop
push
test
adc
daa
idivl
and
aas
not
and
xor
fnstsw
movsl
jb
adc
sub
add
or
fwait
cmpsl
loop
adc
cmc
in
test
pop
push
dec
xor
insl
mov
fwait
cs
dec
imul
push
ljmp
sub
call
cmp
jge
nop
imul
dec
dec
sub
test
xchg
fidivl
jns
sub
pop
jno
and
add
jp
lahf
pop
adc
mov
rorl
fcmovnbe
sbb
and
jno
or
imul
outsb
xchg
lret
mov
pop
int
bound
call
pop
jbe
loope
mov
sbb
or
cmpb
repnz
das
lock
sub
scas
add
std
sbb
les
cmovl
rolb
xchg
mov
loopne
cmp
rcl
int
les
pop
xchg
call
testl
xchg
mov
repz
and
sub
mov
aam
push
dec
jns
mov
out
pushf
pop
sbb
adc
negl
ror
jecxz
mov
lods
jmp
aam
and
or
imul
pop
jb
pop
cmp
mov
dec
insb
mov
cmc
icebp
pop
ja
jp
dec
in
aaa
fisttps
sub
int3
dec
push
shlb
inc
pop
push
lcall
cmpsl
iret
insb
or
dec
add
ret
add
loopne
leave
cmp
inc
lods
and
lds
xor
sahf
loope
insl
add
inc
fcmovnu
outsl
lcall
add
jns
sub
jp
xcrypt-cbc
cmpsl
adc
push
and
imul
xchg
pop
mov
jae
in
mov
sub
lret
adc
pop
mov
and
push
movsb
popa
xor
dec
mov
cmp
jmp
mov
dec
inc
xor
or
insl
sti
out
sarb
xor
mov
push
push
nop
xchg
jl
push
and
push
stos
and
lret
cli
ds
xchg
daa
sbb
arpl
inc
sahf
sub
push
xchg
stos
fdivrs
push
fcmovbe
dec
cmp
in
lods
scas
adc
call
xor
jbe
data16
xor
cltd
sub
aam
push
and
inc
fildl
loope
add
icebp
std
lret
cli
stc
adc
andl
mov
addb
fists
mov
or
mov
or
sbb
lods
and
and
cmp
sub
ret
mov
xor
and
mov
sbb
mov
mull
xchg
xchg
mov
push
pop
mov
test
loop
popl
in
sbb
mov
dec
push
arpl
andb
dec
inc
std
jge
cli
fs
jge
mov
dec
adc
xchg
fnstsw
jbe
inc
test
sub
push
push
rolb
sub
push
mov
sahf
mov
jb
ret
lcall
imul
jns
rolb
mov
hlt
cmp
lods
leave
sbb
aaa
sbb
push
aad
lea
push
cmpsl
fcomp
in
adc
push
outsb
aas
aad
xchg
adc
cld
pop
lcall
iret
stos
leave
mov
mov
mov
xchg
test
push
mov
insb
fwait
mov
jg
pop
fsubl
lock
sbb
addr16
aam
add
mov
inc
aaa
inc
cmp
shr
mov
inc
and
inc
outsl
xchg
jbe
sbb
mov
cwtl
and
scas
imul
mov
arpl
loopne
lcall
pop
pop
rolb
inc
or
in
std
adc
push
jo
repz
fwait
cwtl
adc
in
clc
iret
call
dec
fsubs
dec
pop
push
loope
push
imull
jge
add
aaa
nop
mov
popf
daa
aam
sub
out
mov
out
dec
repz
lock
lea
and
pushl
imul
push
icebp
jge
in
and
push
add
aas
test
ret
aad
push
cmp
insb
lret
fs
leave
adc
lahf
jae
test
mov
in
adc
sub
pusha
mov
pop
negb
push
insl
jo
xchg
incb
stc
mov
ljmp
cwtl
test
dec
mov
aam
addr16
das
repz
int3
sub
int
sub
les
std
jne
leave
lods
xchg
push
in
jmp
xadd
push
fcomip
pand
push
add
fxch
lods
and
lock
mov
add
sbb
jl
dec
ja
lds
or
push
fcompl
movsl
mov
fadds
jnp
and
std
and
adc
pop
inc
rcll
test
rcll
add
or
ror
lods
pop
mov
xor
dec
mov
js
outsb
iret
nop
mov
in
aas
loope
lahf
lret
stos
call
xchg
fadd
mov
inc
popa
xchg
dec
shll
xor
push
jae
cmp
fwait
pop
cmc
push
addb
in
call
add
std
out
mov
mov
ficomps
outsl
adc
sub
icebp
mov
jno
inc
sub
ja
and
push
xchg
pop
aad
call
xchg
push
sbb
std
inc
stos
push
mov
ds
inc
add
ficomps
dec
lods
mov
icebp
aas
fs
or
cwtl
push
xchg
lret
pop
xchg
lock
movsb
js
jl
arpl
pushf
dec
scas
cmp
pop
mov
and
mov
je
dec
xchg
cmpsl
mov
or
and
das
pusha
jo
lcall
rclb
bound
cmp
jnp
rclb
lods
push
sub
push
test
adc
and
incl
jns
cmp
jb
dec
subb
or
lcall
xchg
adc
je
jg
mov
les
fs
call
in
scas
mov
loope
adcl
leave
inc
pusha
pop
push
fisubl
in
test
loope
ds
pop
iret
cwtl
test
add
lahf
in
ja
bound
cmp
outsl
or
js
test
mov
fucomp
cwtl
popa
xor
push
inc
icebp
or
push
pop
jo
cli
out
movsb
jge
mov
mov
jae
xor
and
mov
subl
and
sti
je
les
and
cmp
mov
sub
xchg
popf
leave
ss
mov
daa
xor
sbb
mov
cmpsl
out
imul
fildll
std
in
sarl
mov
pop
mov
pop
dec
cltd
stc
add
fdivl
jns
cpuid
inc
iret
cmp
push
aad
push
mov
pop
shlb
add
loope
mov
repnz
insb
daa
sbb
mov
data16
je
stc
jno
call
xchg
stos
inc
aas
pop
scas
subb
lret
dec
and
addr16
or
outsl
fwait
dec
dec
mov
cli
aaa
lcall
insb
movsl
mov
incb
mov
lahf
jmp
lds
out
outsb
dec
cli
adc
cwtl
xchg
xor
mov
pushf
or
sbb
aam
scas
xchg
mov
pop
push
pop
cmp
popa
mov
add
icebp
popa
pusha
repnz
add
mov
and
push
push
adc
mov
mov
ficoml
iret
push
gs
fisttpll
sarb
sbb
fildll
pop
cli
mov
int3
or
cld
mov
in
mov
inc
inc
add
out
pop
pop
in
pop
add
pop
xchg
leave
cmpl
test
inc
push
pop
xchg
lds
push
shll
shlb
shlb
lock
in
cmc
sbb
xchg
sub
into
mov
int
pop
cmp
and
mov
mov
adc
sbbb
inc
dec
loop
test
pusha
push
xchg
push
dec
jecxz
aam
add
xchg
jmp
lods
cmp
pop
mov
or
mov
fistpl
jmp
jno
xchg
fidivrl
push
test
fs
icebp
xor
dec
aad
inc
in
nop
xor
sbb
jmp
clc
cs
ss
mov
icebp
pusha
pop
pop
sahf
adc
mov
add
test
jmp
sbb
out
cmp
and
jns
outsl
pop
in
daa
pop
jno
mov
xchg
pop
arpl
andb
adc
gs
cs
call
sbb
pop
mov
mov
lods
fucomp
in
sub
roll
rcrb
stc
stos
out
int
mov
or
fsubl
push
jno
jl
push
push
and
sbb
push
ljmp
sub
pop
add
xor
mov
pop
lods
xchg
inc
adc
push
xchg
aam
es
inc
es
sub
adc
shr
pop
nop
subb
fsts
hlt
cmp
les
and
and
mov
adc
orl
scas
fdivs
cmpsl
cld
int
push
cltd
and
and
cli
and
push
popf
cmp
in
loopne
push
inc
cli
or
lods
nop
pop
jmp
mov
cmp
mov
stos
and
or
dec
jae
imul
xchg
inc
and
mov
adc
lret
repz
inc
or
cmpsl
aad
sti
xor
sbb
enter
ror
cmc
int
xorb
cltd
lahf
aaa
xor
xor
jae
inc
mov
and
and
movsl
sbb
dec
ljmp
cmp
popa
fisttpll
jae
mov
or
mov
sahf
mov
jmp
pop
pop
imulb
int3
mov
add
test
sub
jb
mov
daa
dec
add
test
jp
pop
mov
push
dec
jecxz
loope
pushf
aas
pop
push
inc
sti
dec
cmp
dec
pushf
jns
mov
xchg
call
movsl
xchg
push
mov
pusha
insb
leave
test
mov
sti
loop
in
jl
pop
xchg
xchg
adc
jno
or
rcl
adc
dec
gs
inc
inc
push
mov
mov
sub
aad
lods
es
dec
jmp
mov
xorb
add
mov
std
clc
xor
mov
adc
rorb
orl
aaa
fisubl
test
mov
das
int3
inc
fdivrl
aad
jp
push
cmp
or
cmpsl
fcomps
pop
fimull
cmpl
xor
stos
push
aas
movsb
inc
xchg
stc
sbb
dec
sub
daa
mov
dec
call
mov
or
and
pushf
leave
jns
cmp
inc
and
add
lea
aad
pop
aam
jb
outsb
sbb
es
inc
pop
fldt
jecxz
sub
mov
cmp
jp
push
push
or
sbb
aam
out
jmp
and
push
aad
mov
ja
fisttpll
lcall
pop
mov
inc
ficoml
dec
cmp
jmp
inc
cltd
lods
jmp
insl
aaa
mov
mov
jmp
inc
adc
addr16
mov
ss
aaa
loopne
and
inc
imul
mov
clc
pop
sub
sub
loopne
mov
mov
jecxz
mov
hlt
or
inc
pop
test
xchg
daa
hlt
xor
cmp
pop
rcr
leave
test
push
xchg
push
ss
ret
push
shll
and
xlat
and
sbb
addr16
cmp
mov
lods
faddp
out
movsb
shlb
call
mov
cmp
cmp
dec
arpl
popa
pop
push
rorl
test
lds
inc
pop
jb
push
ss
pop
loop
mov
dec
lret
nop
push
cmp
sbb
inc
pop
push
sarb
adc
movsb
or
pushw
je
push
xchg
xchg
cmp
ds
mov
daa
mov
test
repz
test
in
xchg
popf
adc
cmp
inc
js
ret
test
dec
cmp
jp
out
sub
sbb
push
nop
stc
adc
es
push
lret
add
scas
mov
lods
sub
add
stos
jle
xor
jp
aas
inc
fsub
leave
dec
push
in
dec
jne
mov
cmp
mov
mov
fcoms
enter
popa
push
xlat
lock
test
mov
xchg
mov
fsubrs
sti
jns
fsubp
pop
push
push
fwait
leave
jnp
je
mov
xchg
xor
es
pop
stos
and
dec
mov
dec
push
shrb
insb
jne
rorb
decl
dec
dec
sbb
call
adc
or
insl
call
push
cmpsl
cmp
xchg
xchg
jnp
es
or
xchg
sub
pop
pop
adc
cld
jne
mov
pop
insb
push
js
cmp
outsb
and
adc
cli
and
or
fnstenv
out
arpl
pop
aaa
push
movsb
push
leave
fcoml
add
pop
out
mov
jl
lods
and
nop
lods
xchg
out
subl
pop
or
imul
subb
push
clc
dec
fs
adc
call
dec
pop
test
push
in
mov
inc
arpl
lret
inc
push
loop
movsl
stos
jg
cwtl
xchg
pop
sbb
add
lea
inc
ljmp
inc
jmp
fistps
movsb
cwtl
xchg
adc
cmp
adc
ss
mov
out
lods
and
andb
xor
sbb
xchg
stos
enter
sub
or
push
sub
push
ror
xor
fldl
cmp
push
jg,pn
add
pop
xor
push
jbe
xlat
fsubrp
or
pop
xchg
dec
adc
mov
sub
rcrl
or
je
gs
out
scas
dec
std
and
mov
adc
insb
repz
aad
daa
mov
test
push
push
adc
call
push
mov
dec
imul
push
add
and
sbb
shl
and
popf
and
bound
jg
cltd
rolb
lcall
out
pop
xor
add
icebp
jmp
lret
and
dec
xor
rorl
lods
fwait
cmc
add
cs
or
sbb
sbb
inc
sar
fdivrl
ljmp
out
jecxz
mov
adc
imul
xor
inc
cmp
into
push
adc
mov
mov
xchg
xor
sahf
adc
xchg
jmp
ret
mov
pop
jp
fwait
rolb
jns
fildl
dec
cmc
inc
out
xor
call
jb
lret
mov
xchg
dec
cmc
pop
pop
ret
pop
dec
and
jmp
pop
cmpsb
arpl
jno
cmp
cmp
mov
inc
xchg
rclb
cmp
pop
mov
add
fwait
shll
into
fstpl
add
aas
and
add
ss
xchg
xor
or
aad
xchg
pop
dec
test
xor
rcl
fisubrl
adc
leave
rolb
fldt
into
push
fiaddl
adc
ds
sbb
icebp
push
ret
repnz
mov
or
testl
cmp
mov
popa
inc
bound
jg
scas
xor
or
and
add
jmp
outsl
mov
xor
mov
push
dec
sub
xor
adc
je
mov
iret
daa
push
jne
inc
jbe
das
into
inc
pop
inc
push
cmpsl
dec
test
xor
pop
sub
cmp
dec
repz
cmpsb
sbb
cmpsl
out
pop
lods
push
movb
push
fidivrl
fisttpll
movb
sahf
mov
xchg
add
fs
add
stos
inc
jmp
test
js
jnp
fcos
vunpckhps
iret
insl
inc
lds
cltd
lds
lods
inc
cmp
pop
insb
jecxz
inc
aaa
pop
add
sahf
loopne
mov
das
pop
sbb
pop
rcl
xor
repnz
push
lcall
or
movsb
aam
js
into
xor
cwtl
and
dec
inc
lcall
cmp
fwait
hlt
cmp
cmp
or
jae
add
lea
pop
rcl
outsl
pushf
fnstcw
mov
andl
add
xor
cmc
mov
sahf
mov
mov
mov
in
mov
mov
pop
xchg
add
mov
cmp
xchg
lret
fmulp
fmulp
clc
mov
mov
repz
cmp
xor
or
push
jle
cld
out
leave
jg
push
stos
in
xchg
testb
push
cltd
push
ret
sub
pop
fdivl
mov
dec
xchg
in
das
je
mov
and
push
or
jno
jae
rolb
jb
xchg
mov
flds
adc
sbb
fbld
add
push
loopne
xchg
jecxz
es
or
sbb
int3
xchg
pmaxub
loopne
jge
cmc
dec
sbb
iret
movsb
nop
push
sub
dec
sub
and
or
fldl
aas
imul
ss
cld
mov
fiadds
mov
or
cmp
mov
in
mov
popa
cmp
call
and
pop
pop
idivb
xor
inc
int
or
mov
add
pop
aas
xchg
and
call
dec
repz
inc
pop
mov
xchg
xor
mov
push
xchg
or
cmc
add
jle
jecxz
or
adc
lret
add
sbb
imul
sti
cld
push
xor
lods
mov
mov
js
xchg
mov
jnp
jg
xchg
pop
adc
mov
push
sub
outsl
into
or
stc
pop
lret
inc
push
cli
fisubl
pop
sbb
ficoms
lcall
jo
adc
add
mov
aaa
inc
push
cs
in
mov
cltd
fsubl
mov
xor
push
ficompl
dec
hlt
insl
dec
inc
xchg
sub
cmpb
pop
mov
and
daa
fmul
addr16
out
sbb
push
mov
es
push
aaa
add
loope
inc
cmpsl
push
in
cmc
add
and
insl
test
sbb
loope
xor
iret
outsl
adc
inc
scas
mov
mov
fimull
loop
mov
fs
mov
stos
inc
push
or
fisubrs
sub
mov
mov
xlat
mov
push
pop
xor
sbb
mov
add
push
cwtl
and
push
rolb
or
fs
dec
icebp
sbb
sub
jle
and
mov
xchg
insl
or
sar
pop
add
cmp
outsl
insb
dec
sbb
sub
xchg
dec
pop
sbbb
jae
jnp
addb
js
loop
add
lds
xor
jbe
std
adc
fsts
fs
xchg
mov
jns
jecxz
jle
mov
mov
push
xor
mov
or
push
jo
outsl
or
mov
jge
xchg
cmpsl
divb
mov
les
or
inc
mov
jecxz
mov
xor
xchg
fisubrl
in
lret
inc
xchg
lods
imul
icebp
fnstsw
mov
popa
scas
jge
xlat
dec
mov
adc
rcr
loop
push
sahf
fimull
and
or
sbb
lods
and
in
dec
out
loopne
jl
xlat
pop
test
jecxz
pop
testl
sub
add
fbstp
jno
addr16
and
mov
clc
outsb
rorb
mov
fisubl
out
popf
or
loop
sti
lods
or
push
scas
lahf
xor
adc
rcrb
jg
push
jae
aas
push
fisttpll
shll
xor
fists
cmc
mov
and
mov
les
and
adc
xor
cld
mov
sbb
sub
pushf
ret
mov
je
int3
pop
in
mov
cmp
pop
or
les
mov
scas
mov
push
bound
loope
je
lods
rcrb
adc
sbb
test
outsl
cmpsb
adc
into
daa
xor
bound
loope
fdivr
ret
dec
sub
push
aaa
in
aas
adc
jbe
cmpsl
jmp
insl
lock
aas
xchg
mov
xchg
xchg
aam
into
lds
shlb
mov
jg
cmc
aaa
push
test
pushf
jp
scas
mov
mov
into
fld
push
or
add
pop
les
mov
and
sub
add
pop
add
lock
insb
jmp
enter
mov
insb
xor
movsl
xchg
pusha
fldcw
popf
sub
mov
mov
mov
adc
mov
xchg
mov
nop
and
dec
filds
int3
dec
push
mov
int3
scas
mov
imulb
cmp
xchg
cmp
dec
daa
mov
push
mov
cltd
pop
test
mov
and
pusha
pop
rcrl
mov
mov
or
mov
xchg
rcrl
sub
mov
ja
mov
cmpsb
dec
push
imul
jo
decb
dec
pop
cmp
es
popa
or
test
sbb
mov
mov
mov
push
jne
aam
push
cs
pop
jo
inc
xor
adc
sbb
mov
push
stc
mov
xor
sub
fsubrs
imul
pushf
and
aad
xchg
mov
popa
scas
stc
inc
xor
push
lock
cmc
loope
sub
arpl
call
xchg
and
icebp
out
fs
loop
movsb
inc
jmp
adc
pop
mov
incl
sahf
mov
das
adc
nop
push
ja
loop
imul
sbb
pop
and
mov
test
push
iret
in
loop
cmp
mov
adc
in
gs
int
mov
xchg
xor
adcl
iret
mov
dec
arpl
pop
fists
push
cmp
push
jne
lock
iret
dec
aas
mov
sub
pop
insl
scas
and
add
cmc
scas
fwait
lods
sbb
repnz
leave
and
add
cmp
pop
xor
fildl
out
mov
push
subb
outsb
xchg
dec
cli
pop
pop
mov
xor
cmc
ljmp
adc
out
jae
ljmp
outsl
xor
mov
jecxz
inc
imul
pop
xchg
jg
jge
mov
jle
jo
sub
or
cmp
or
int
sub
inc
lea
adc
insb
out
add
scas
xor
xlat
cwtl
addr16
in
mov
stos
push
or
sbb
into
jge
xor
jmp
cmpsb
dec
xor
arpl
sbb
cmpl
xchg
jmp
pop
call
icebp
and
dec
push
mov
cmp
jmp
test
pop
xchg
shr
call
shll
add
in
sarl
test
lahf
movl
mov
aam
int3
and
ret
or
rcrb
push
add
and
call
addr16
imul
or
push
das
ja
in
test
outsl
jmp
mov
and
fldl
into
add
and
sub
pop
inc
dec
mov
je
aad
pop
andb
stos
pop
inc
jge
aam
pop
mov
dec
sbb
cwtl
mov
mov
mov
inc
xchg
rcll
add
popf
outsb
xchg
test
divl
mov
inc
arpl
adc
jne
jmp
push
pop
sbb
stos
test
pusha
mov
add
lahf
cmpsl
int
inc
lret
xchg
jnp
add
adc
stos
cmp
dec
fstl
and
pop
pop
stos
or
jns
jo
lret
imul
call
jns
jae
cmp
aas
mov
and
int
and
dec
mov
push
jg
lcall
ret
mov
cmp
xchg
int
xchg
dec
push
stos
daa
shrl
repnz
out
loop
into
jge
rcrb
adc
ja
xor
push
in
jae
mov
mov
sysexit
rolb
daa
test
mov
clc
pop
int
mov
mov
movsl
xchg
inc
lret
stos
lds
mov
inc
fmull
ficoms
fildll
ljmp
subb
scas
jmp
lret
dec
je
lahf
outsb
cmp
insb
mov
pmaddwd
loopne
jbe
fldt
sbb
add
imul
das
das
sbb
movsb
rorl
inc
and
stos
ja
mov
jecxz
rcll
and
mov
adc
test
adc
xchg
mov
std
enter
add
pop
cmp
mov
mov
out
cltd
hlt
fwait
scas
test
xchg
inc
ljmp
icebp
mov
ret
clc
push
pushf
jbe,pn
dec
pop
adc
je
in
lcall
enter
loopne
add
enter
stos
mov
lret
or
popf
push
xor
daa
xor
mov
sbbl
bound
ljmp
inc
push
gs
inc
addr16
pop
add
cld
xchg
ret
clc
xor
xor
jl
mov
pop
push
mov
xchg
subb
jae
enter
adc
and
out
sub
mov
push
mov
gs
cmp
mov
hlt
mul
jae
mov
push
andl
in
push
aas
mov
sbb
push
pop
inc
scas
cmp
stc
rorl
lret
xchg
inc
aaa
jo
mov
and
push
xchg
outsl
icebp
mov
xchg
pushf
andb
cmp
push
mov
push
and
push
cmp
nop
jnp
cmp
mov
clc
push
out
jns
sub
in
jo
bound
lcall
test
icebp
insl
scas
daa
sub
and
mov
outsb
sti
xchg
inc
push
jp
loope
mov
inc
or
ljmp
fiaddl
cmpsl
fdivrs
je
or
mov
arpl
jmp
mov
iret
clc
xchg
in
sub
pop
xchg
mov
je
hlt
repnz
cs
adc
sub
fsubs
sarl
lret
rorb
jl
push
add
loop
mov
adc
push
je
inc
xor
lahf
mov
jl
cmp
popf
push
cwtl
mov
sahf
inc
lods
add
popa
sub
push
jo
xor
int
incb
shlb
fiadds
into
xor
pop
js
in
and
xor
sar
inc
inc
push
lret
ss
movsb
gs
dec
idiv
sbb
jno
jp
fisttps
inc
outsb
es
dec
sbb
jno
int3
inc
fdivrl
fwait
jl
cmp
outsb
aad
xchg
mov
xchg
test
cmpsl
inc
adc
push
push
cmpsl
aam
sbb
lcall
and
dec
test
inc
xchg
sub
adc
inc
ds
mov
jnp
js
test
call
cmp
outsl
xor
fmull
jmp
roll
mov
cmp
adc
mov
lds
push
jb
in
xchg
movsl
and
pop
dec
std
pop
mov
in
fdivrl
pop
mov
add
push
sarl
inc
xchg
sub
fs
shrb
xor
ficompl
shll
repz
push
mov
movsl
dec
mov
inc
pop
mov
cmp
mov
movsl
ss
sub
mov
sub
cs
xor
pop
aam
xor
shl
fistpll
lret
sbb
dec
ror
mov
imul
xor
sbb
pop
xchg
shl
lea
jmp
xchg
sub
mov
xchg
insb
aam
icebp
sahf
test
hlt
adc
arpl
dec
sbb
mov
xchg
xchg
sub
fimuls
iret
in
das
adc
das
pusha
cmp
add
jno
adc
mov
jae
and
mov
pop
sub
xorb
dec
dec
es
scas
enter
cmp
or
sarl
pusha
mov
push
jbe
mov
popa
xchg
jb
and
inc
push
stc
fst
cmp
inc
sub
sub
sbb
jle
fidivs
adc
adc
mov
push
cltd
ret
push
push
xor
rcr
cmp
cmpsb
test
or
inc
ljmp
xor
clc
scas
cmpsl
mov
mov
sbb
cmpsl
push
cltd
push
shlb
dec
pop
fwait
sbb
or
nop
and
adc
cmp
cmc
add
and
pop
sbb
mov
push
mov
cmp
push
aaa
xchg
mov
decl
shrb
jl
pushf
jb
add
lods
icebp
rcr
cltd
mov
or
mov
or
sbb
icebp
arpl
out
and
sbb
out
ficompl
push
imul
xor
cld
out
loopne
add
cwtl
push
push
sbb
cmp
nopl
xchg
cmpsb
dec
je
and
jge
rorb
or
aad
cld
inc
jne
insb
or
sub
add
ficompl
adc
mov
push
in
ljmp
jl
test
inc
insl
jle
ljmp
fsubl
dec
xchg
sub
jg
vcvtss2sd
sbb
sbb
cmc
movsl
mov
mov
fwait
jl
jae
ret
insl
dec
sbb
loope
sbb
sbb
inc
faddp
push
outsl
mov
repz
push
outsl
and
inc
push
mov
int
mov
fucom
std
pop
xchg
jle
and
lahf
xlat
mov
mov
push
loope
imul
inc
inc
mov
mov
xchg
mov
int
mov
push
cmp
or
stos
rcrb
insb
xchg
loop
xor
imul
lea
fimull
sub
add
inc
push
mov
and
sbb
cs
mov
fidivl
lret
jne
scas
rclb
sub
stos
test
lods
cld
push
push
adc
aam
mov
outsb
xchg
js
pop
les
mov
or
movsl
imul
js
pop
adc
mov
lcall
mov
std
jbe
and
fwait
dec
popa
adcl
inc
addr16
pop
mov
cwtl
cmp
movsl
test
rcr
or
mov
mov
adc
int3
sub
ds
ljmp
mov
lea
push
rorl
sbb
dec
xchg
xchg
mov
mov
jge
fnstenv
aaa
push
push
divl
xor
push
lahf
leave
rcrb
es
push
and
xchg
dec
ret
mov
js
push
loopne
and
dec
and
mov
push
and
repz
daa
or
adc
jb
dec
roll
lahf
clc
push
out
test
jnp
popa
popa
scas
push
mov
in
scas
pop
imul
std
es
data16
aam
jge
or
xor
outsl
test
iret
ja
daa
aas
movsl
pop
movsb
dec
dec
shlb
push
adc
rcrb
mov
cmpsb
fistpll
popa
and
cmpsb
in
pop
jecxz
insl
jno
xchg
into
pop
dec
stos
cld
cmp
jns
andb
jns
testl
pop
pop
dec
pop
shll
cmp
movsl
out
or
neg
or
notl
pop
aas
lret
cmp
add
pop
sub
mov
adc
xchg
ja
shll
imul
daa
rorb
xchg
xchg
push
movsb
xor
inc
popw
lcall
inc
stos
jno
pop
mov
push
insb
mov
cmp
lods
subl
mov
subb
popf
rsqrtps
xchg
sbb
cmp
adc
imul
in
out
dec
cmp
push
jmp
xchg
jo
sub
sbbl
insl
dec
call
add
shlb
jge
lock
or
jne
enter
fcompl
inc
jno
fsubrl
mov
lret
adc
add
push
mov
xchg
push
mov
andb
push
adc
test
dec
push
mov
test
outsb
xchg
dec
xchg
lds
mov
mov
jbe
enter
mov
jbe
jo
or
data16
lods
fstl
les
xchg
xor
pushf
mov
add
mov
mov
push
mov
inc
xor
mov
sbb
loopne
jns
shl
push
pop
cmpsb
adc
mov
inc
movsl
inc
iret
or
and
sbb
lods
stos
fwait
adc
jbe
cmp
lds
dec
cli
pop
iret
cld
daa
fistpll
roll
sarb
fdivs
dec
enter
negl
push
loope
sbb
dec
inc
mov
sbb
testb
pushf
daa
jmp
roll
dec
sbb
insl
out
out
jbe
inc
int3
mov
push
repz
push
adc
adc
jbe,pt
add
pop
or
out
call
insl
or
mov
push
mov
lahf
mov
std
out
jb
daa
sub
xchg
loop
inc
sub
dec
test
mov
mov
dec
and
std
mov
hlt
dec
sbb
jne
pop
or
lock
decb
xchg
addr16
push
or
js
scas
push
inc
cwtl
inc
jne
cmc
inc
mov
inc
inc
or
popf
popf
jg
loop
push
mov
cmp
add
loopne
or
jo
jp
ljmp
jne
pushf
sbb
lds
push
jg
cld
xchg
add
push
pop
ljmp
pop
mov
jl
lock
imul
jmp
xor
push
dec
loopne
and
xor
mov
push
cwtl
mov
in
imul
test
aad
pop
push
xchg
test
push
push
mov
xchg
mov
jge
scas
sbb
call
or
call
sub
dec
hlt
jne
adc
ja
mov
js
or
enter
mov
jmp
and
mov
lds
adc
mov
pop
adc
fnstsw
mov
xchg
aaa
ret
loope
adc
push
jb
js
outsl
lret
xor
mov
es
es
or
es
jmp
xchg
mov
outsl
xchg
mov
scas
xlat
dec
sbb
std
dec
int3
push
clc
aad
pop
scas
cmp
mov
cmp
jnp
push
out
jb
mov
es
pop
icebp
adc
add
test
pop
push
and
iret
dec
cmp
lahf
stc
sbb
jns
stc
mov
mov
sub
inc
lret
ficoml
int3
mov
sbb
sub
mov
nop
dec
rcl
shlb
xor
ret
inc
add
nop
loopne
jl
jb
cmc
rcrl
mov
adc
push
pop
fisubrl
data16
stc
cmp
and
insb
add
xor
adc
hlt
loope
das
jae
mov
ret
xchg
mov
out
pop
or
xchg
pop
test
pushf
ret
test
and
je
addb
loop
jecxz
and
out
jle
push
call
mov
repz
mov
stos
mov
stc
pop
call
dec
jns
sub
nop
lods
sarl
out
inc
mov
mov
dec
push
xchg
aaa
popa
sub
dec
lock
fcomps
fs
rcl
sti
arpl
mov
jl
xchg
xorl
dec
mov
or
ja
int
pop
repnz
mov
arpl
dec
cmp
loop
inc
xor
popf
add
shll
and
mov
sub
addr16
js
loope
fbstp
inc
xor
testb
loop
test
mov
leave
stc
cmp
lock
mov
push
xlat
dec
dec
addb
repnz
je
or
repnz
inc
dec
jge
ret
and
nop
xchg
inc
xor
inc
jmp
jl
test
xor
js
lcall
or
xchg
dec
out
inc
sarb
sub
out
sub
xorl
insl
mov
jne
clc
out
mov
out
dec
sbb
add
stc
jb
in
ljmp
test
cmp
sub
int
add
fmuls
cwtl
jmp
push
je
cld
pop
movsbl
pop
sbb
inc
les
add
mov
mov
pop
add
mov
inc
mov
and
pop
push
add
xchg
icebp
subb
test
les
push
cmp
pop
les
fwait
ret
inc
pop
jl
icebp
ja
mov
inc
sub
jne
cmp
std
xor
pop
movsb
mov
data16
sbb
out
jl
imul
gs
daa
stc
in
xchg
arpl
lcall
adc
insl
insl
xor
cltd
ljmp
xchg
add
cmp
cld
int
pop
arpl
mov
fistps
mulb
cmp
jae
dec
dec
mov
add
mov
sbb
jns
push
je
push
es
mov
cltd
and
jg
sub
adc
loopne
jecxz
mov
js
dec
sbb
daa
and
cs
stc
or
data16
push
test
jnp
mov
out
sahf
pop
sub
hlt
ja
inc
jns
ret
pusha
hlt
pop
inc
pop
mov
pop
jmp
adc
fldl
fistps
cld
push
jno
mov
xor
dec
and
pushf
mov
stos
mov
aam
fistl
cmp
addr16
xchg
arpl
lods
mulb
sbb
stos
pop
scas
pop
xchg
mov
mov
xor
pop
pusha
push
dec
lods
in
jo
mov
inc
inc
lods
mov
mov
sti
scas
imul
das
js
adc
in
test
andb
inc
imul
jmp
jl
jge
sbb
mov
cltd
or
inc
lret
xor
cltd
ret
adc
int3
loop
jmp
aas
and
pop
imul
out
arpl
cld
pop
mov
inc
stc
stos
adc
aad
xor
fisubrl
xor
sub
inc
fsubrs
ss
lcall
subl
mov
ror
mov
in
lahf
and
imul
cmpsb
sub
inc
ss
sbb
pop
inc
sub
add
fisubs
mov
jle
repnz
into
push
adc
mov
lods
adc
push
cltd
leave
xchg
fcmovnbe
add
dec
pop
inc
cmp
adc
jl
add
push
sub
add
cld
jbe
repnz
subl
andb
lea
into
stc
inc
lds
mov
lock
fdivrl
inc
jne
mov
ja
mov
or
pop
in
imul
fdivl
jp
sbb
sahf
cli
lods
imul
jg
rcrb
cmpsb
scas
pusha
cmp
pop
loop
adc
and
ja
fdivr
mov
xlat
pop
dec
jns
loop
fists
and
sub
add
jo
and
mov
fldl
push
cmp
nop
fucomi
lods
adc
adc
cmp
mov
ss
ss
inc
out
xor
in
in
mov
fcmovbe
adc
jge
loope
xchg
idivb
cwtl
outsb
lret
or
jne
idivl
sbb
and
jo
xchg
icebp
rclb
loopne
jle
mov
shll
scas
jle
push
mov
lock
imul
push
inc
dec
imul
push
mov
movsl
sbb
xchg
xchg
js
lods
daa
test
imul
adc
pop
pop
xchg
mov
push
jg
ffreep
or
cmpsb
mov
xorb
rorl
je
lcall
cmp
sub
or
inc
fdivl
add
mov
pusha
or
push
jge
mov
and
add
push
jmp
mov
mov
shl
into
addl
xchg
pusha
dec
sub
sub
dec
les
sbb
fmuls
and
imul
fistpl
movsl
iret
out
pop
pop
push
mov
ret
adc
lds
inc
daa
xor
sub
add
ja
insl
and
jge
dec
mov
sub
ret
and
mov
ljmp
mov
enter
movsb
inc
mov
arpl
pop
lods
sbb
test
pop
aas
ret
jnp
add
mov
dec
outsb
mov
xchg
clc
aam
fistpll
sbb
sbb
fmulp
inc
inc
push
stos
flds
mov
outsl
mov
inc
jle
test
loopne
mov
push
les
cli
mov
loop
jl
xchg
jecxz
push
gs
clc
dec
fisubs
test
popl
dec
shrl
arpl
fldcw
sub
sbb
xor
ficoms
imul
pushf
mov
fwait
shll
xchg
add
test
and
adc
pop
adc
cmp
cli
pop
ljmp
in
sub
push
push
insl
cwtl
jecxz
clc
lret
js
lods
mov
lcall
xchg
cmp
add
jl
jle
sbb
jb
and
dec
imul
cld
lea
cmp
dec
mov
xlat
inc
jnp
jb
sub
xchg
ss
popa
xor
pop
cmp
inc
jbe
xor
adc
adc
lahf
pop
add
inc
rolb
add
pop
push
push
xlat
mov
fisttpll
fucom
shrl
cmp
xchg
push
xchg
andb
in
icebp
das
ds
ret
dec
imul
jne
popa
dec
aad
push
fs
add
das
imul
inc
sbb
pop
fsubr
mov
push
add
lods
arpl
sub
inc
cwtl
loop
cwtl
icebp
mov
xchg
adc
xchg
mulb
addr16
sbb
and
jl
lahf
in
jnp
nop
jge
repz
ljmp
or
rorb
add
daa
inc
mov
mov
inc
dec
adc
xor
mov
cld
pop
aam
fwait
push
lods
shrl
mov
or
add
xor
in
mov
rolb
jp
adc
xchg
hlt
lcall
test
cmc
arpl
lret
jo
jp
dec
ss
out
cmp
inc
mov
cmp
pusha
scas
pop
push
pusha
mov
cmpb
stos
dec
aaa
loop
push
hlt
outsb
std
test
scas
shlb
jb
and
xchg
cmp
mov
mov
stos
fcomip
xchg
fs
dec
enter
xchg
inc
insl
aaa
jbe
xor
jle
or
push
sbb
dec
xchg
xchg
loopne
xchg
inc
fadds
xor
push
xchg
cmp
and
call
aaa
mov
adc
pop
push
pop
and
jle
cmp
jnp
xorb
cmc
testl
push
fidivl
stos
mov
fwait
cmpsb
pop
xor
pop
test
sub
loope
cmpsl
loope
adc
mov
cli
stc
jne
outsw
jl
push
cmp
orb
stc
mov
addb
cvtpi2ps
adc
out
dec
js
call
int3
xor
mov
mov
and
jbe
mov
dec
es
mov
dec
cwtl
pop
sub
mov
nop
in
aaa
lret
mov
divb
sub
cli
ljmp
mov
dec
xchg
loope
cmc
jnp
out
pop
lahf
lods
jbe
arpl
inc
imul
pop
and
mov
push
in
sbb
xchg
jno
jo
inc
mov
outsb
sub
outsb
in
xlat
inc
xchg
jge
int3
mov
fwait
cmp
mov
mov
lds
rclb
add
lea
jg
enter
ret
xor
imul
daa
jb
in
and
ss
imul
bound
pop
out
mov
xchg
in
fidivrl
std
jle
cld
sahf
xor
inc
jo
daa
pop
fcmovne
sbb
aaa
push
in
xor
pop
lret
out
rolb
xchg
out
xchg
mov
jne
mov
int
mov
iret
xor
dec
in
inc
ds
and
fidivs
in
lock
data16
out
push
pop
xchg
mov
stos
test
cmpsl
jnp
adc
pop
dec
mov
aad
xor
mov
pop
push
pusha
out
fcoms
dec
push
cmpsl
dec
ss
jb
scas
adc
mov
pop
jmp
adc
mov
xor
mov
push
cli
xchg
adc
inc
or
cmp
jge
dec
xchg
scas
out
arpl
lea
add
out
stc
adc
lea
rcll
sub
pop
xor
popf
sbb
in
jo
aas
cli
addb
mov
adc
mov
lcall
mov
mov
mov
loopne
jno
imull
and
mov
mov
loope
jbe
sub
fisttpll
lds
add
into
xchg
dec
xchg
push
stos
adc
pusha
fwait
dec
jp
movsl
fistpl
scas
and
lcall
mov
pop
mov
pop
int
xchg
push
fdivl
jo
pop
fdivr
mov
mov
fs
or
pop
fistpll
rcll
in
mov
in
mov
jne
jp
push
mov
or
out
mul
jecxz
inc
mov
jecxz
lret
sub
inc
xchg
push
or
pop
setbe
mov
xor
dec
imul
pop
bound
stos
rclb
inc
adc
mov
test
dec
ret
dec
jmp
shrl
and
inc
mov
push
mov
fcoms
dec
inc
movsl
pop
mov
mov
xor
bswap
sub
inc
mov
fstp
adc
sub
mov
jae
cld
pusha
cmpsl
outsl
or
mov
dec
mov
mov
push
int3
aaa
or
inc
sarl
mov
jne
mov
cmpsb
xor
leave
std
sbb
push
test
sti
sahf
test
sbb
and
dec
fidivrl
lret
cld
mov
into
sbb
push
sbb
cwtl
pop
pop
push
aaa
roll
push
sub
insb
lret
lcall
inc
pop
dec
adc
jo
subl
adc
mov
aas
andb
mov
aaa
addr16
bound
enter
push
inc
mov
sub
mov
dec
aas
ret
daa
mov
dec
mov
push
dec
movsb
test
jmp
mov
out
test
jo
mov
test
call
loope
mov
push
add
das
fs
rcrl
cmpsb
in
xor
inc
adc
mov
stos
sbb
mov
dec
and
cld
mov
or
mov
jnp
cmpsb
cmpl
mov
xchg
ljmp
cmc
mov
fidivrl
push
jnp
pop
popf
jg
push
pop
dec
aaa
xchg
mov
pop
rorb
xor
and
mov
rcll
outsb
cmp
push
jg
xor
push
xchg
decb
cmp
pop
cmpsl
adc
in
in
pop
sbb
or
push
test
push
in
sub
sarl
vcvtsi2sdl
jmp
mov
sbb
fs
push
dec
sbb
mov
inc
mov
and
in
leave
pusha
pop
mov
jecxz
and
push
or
les
dec
mov
cld
imul
ja
setb
stos
jb
roll
mov
or
bound
dec
mov
stos
mov
pop
xor
sbb
pop
pusha
and
or
jecxz
sub
mov
mov
add
into
movsl
in
into
add
add
mov
mov
je
fldenv
pop
push
out
popf
mov
adc
repnz
adc
int3
add
sarb
dec
xorl
inc
xor
pop
fidivrl
call
ss
jle
dec
mov
push
sub
fldt
mov
mov
add
ret
pushf
xor
pop
sub
lods
jne
jb
lcall
cmp
leave
or
mov
push
ftst
gs
adc
imul
cltd
aaa
hlt
pop
xlat
jns
sub
aad
stos
sbb
cmp
adc
cmp
sbb
addl
test
into
xor
xor
push
jge
imul
or
pop
test
sbb
mov
mov
jnp
xchg
lret
imul
insb
lea
scas
dec
je
inc
cmp
xchg
xchg
mov
cmpsl
stc
std
push
jb
dec
lret
dec
repz
shlb
mov
daa
js
stos
aam
jp
pop
fcmovnbe
fidivl
rcl
lahf
bound
xchg
out
push
adc
dec
sub
pop
dec
pop
adc
cmp
out
cmp
or
clc
movsb
jns
mov
daa
mov
out
inc
adc
mov
and
cs
jmp
js
xchg
insb
push
vpmacssdqh
sub
aad
in
xchg
xchg
idivb
mov
cmp
scas
add
push
and
ret
push
in
and
cmpl
mov
inc
mov
movsl
pop
add
and
and
orb
stos
adc
or
adc
inc
stos
loop
or
pop
movsl
les
jge
aad
jge
into
in
jo
inc
push
movsl
sub
lods
dec
and
icebp
ret
scas
dec
jbe
icebp
test
cli
push
dec
sub
jmp
or
pop
xchg
call
jmp
or
enter
lret
stos
pop
in
dec
push
shl
xor
in
ja
xor
jg
popf
jl
adc
add
lret
add
jle
adc
jge
mov
jb
and
xor
push
jae
icebp
inc
imul
dec
cld
pop
lret
outsl
scas
adc
in
js
xchg
in
test
sub
jb
add
arpl
call
std
stc
dec
push
or
and
xor
mov
pop
inc
sbb
pusha
add
iret
cmpsb
popa
jo
ret
pop
jns
loopne
insb
xchg
adc
sub
xor
inc
or
repnz
add
add
mov
inc
les
xor
mov
mov
ss
xor
and
mov
fildll
sub
inc
mov
test
mov
mov
int3
add
loopne
dec
sub
rcrb
imul
test
ljmp
ficoml
in
jns
sbb
repz
and
jns
loop
lds
outsb
sti
lret
mov
stc
jg
push
dec
gs
jo
and
push
pop
shl
nop
add
adc
xor
xchg
es
xor
xchg
mov
xchg
dec
repnz
out
adcb
shrb
and
sti
inc
leave
add
xorb
dec
out
adc
pop
sbb
cmp
daa
in
pop
jo
gs
outsb
ss
mov
dec
push
pop
pop
shl
into
push
imul
cmpsl
cli
insl
bound
push
add
pop
sbb
push
push
je
loopne
mov
push
fmull
fnstsw
int3
sahf
mov
ja
icebp
in
sub
je
and
js
sbb
inc
mov
xchg
mov
ficoms
cmpsl
or
xchg
cmp
xchg
push
mov
ficoms
inc
mov
xor
and
test
nop
and
mov
sub
pop
lret
shlb
sti
jb
xchg
push
mov
outsb
mov
jl
js
into
sti
aas
and
cwtl
insb
jbe
dec
pop
push
aas
xor
leave
rcr
shrb
clc
xchg
movsb
sub
adc
push
bound
mov
jae
mov
cltd
pusha
lea
popf
cmp
adc
sahf
faddl
mov
adc
push
scas
popf
aam
jb
gs
ds
push
sub
inc
sbb
rorl
and
std
fsub
push
outsl
nop
ss
mov
mov
fistl
pslld
sahf
hlt
push
dec
mov
and
adc
mov
push
aaa
pop
push
jecxz
and
repnz
mull
add
fwait
stos
movl
call
fldcw
lods
out
pop
shr
ret
jp
push
shlb
imul
call
xchg
outsl
push
aam
sti
loopne
mov
stos
test
stos
sub
pop
int3
jmp
sbb
addr16
push
mov
repnz
lods
xor
pop
jmp
std
jmp
rorl
jae
bound
sub
ja
xor
push
pop
je
ja
and
xchg
push
adc
sbb
dec
iret
cmpb
out
shlb
test
jl
or
aaa
fmuls
pop
clc
mov
negb
add
jge
or
add
jnp
call
mov
sbb
push
or
test
js
push
cmp
mov
and
jo
mov
xchg
psubsb
mov
popf
add
and
fdivrs
stc
push
inc
ror
scas
xchg
mov
sti
add
in
mov
je
insl
sahf
aas
pop
mov
mov
nop
mov
xor
sbb
mov
pop
sahf
mov
jno
rcrb
jne
dec
dec
lods
pop
rcll
mov
je
dec
cmp
enter
cli
lahf
jmp
sbb
es
xchg
xor
cmp
inc
shr
xchg
int
jb
leave
mov
hlt
out
mov
mov
push
popf
hlt
xchg
outsl
xchg
jbe
mov
out
xor
xchg
outsl
loop
lea
cli
mov
mov
jns
mov
in
inc
xchg
popa
imul
fwait
push
sbb
fistl
mov
dec
mov
leave
add
test
cld
mov
mov
popa
push
mov
fdivrp
fucomip
pop
push
xchg
inc
jbe
stos
mov
xchg
adcl
loope
mov
jmp
pop
or
imul
lea
gs
out
sbb
leave
shll
in
dec
pusha
imul
and
add
pop
fs
out
push
aaa
in
push
fisubrl
pop
in
inc
lods
sbb
mov
mov
loope
iret
sbb
shlb
xor
lret
cmc
imul
stc
int
adc
leave
ret
xor
mov
call
imul
lods
jne
push
jle
arpl
lock
cmp
jae
adc
std
in
jmp
sarl
push
test
je
jno
jg
popa
mov
sub
cmp
sar
push
hlt
dec
in
mov
pop
orl
jl
sbb
cmpsl
jg
lds
cmp
clc
leave
ret
jl
imul
xchg
loopne
cmp
mov
mov
xorl
sbb
adc
jns
mov
ja
dec
pop
mov
aam
rcrb
lret
mov
fisubl
sub
lret
sub
dec
jge
int3
in
mov
lea
and
pop
push
cmp
cmp
subb
decb
arpl
xchg
out
mov
pop
xchg
ds
int
fnstenv
std
xorb
stc
data16
int
lds
cmc
push
cmc
mov
daa
pop
and
cmc
pushf
adc
xchg
shll
addr16
dec
pop
add
mov
xchg
xchg
xor
mov
scas
gs
test
xchg
imul
cltd
push
add
mov
xchg
mov
mov
xor
imul
lret
les
jmp
mov
leave
sbb
dec
cs
mov
dec
pop
lea
add
test
or
jo
jecxz
xor
pop
lret
push
sub
hlt
xchg
inc
inc
jmp
imul
pop
xchg
icebp
or
mov
shlb
pop
jecxz
cmp
mov
sub
dec
fcomp
jle
pop
pop
sub
imul
jnp
xlat
push
cmp
cmp
adc
aaa
mull
cmc
arpl
push
dec
pop
jl
xor
in
lock
and
push
cmpsb
mov
mov
sbb
lret
ljmp
call
lods
push
push
dec
push
pop
clc
inc
or
test
sbb
test
push
jge
shlb
adc
xchg
push
inc
push
jb
xchg
sbb
jg
dec
mov
aas
push
jl
jns
sbb
scas
mov
mov
sarb
sub
xchg
clc
jecxz
or
imul
sub
mov
or
fucomip
adc
pop
cmp
mov
jbe
jge
and
sub
in
push
imul
lock
xchg
push
inc
enter
icebp
push
ficoml
mov
or
mov
cmc
sbb
rcl
subb
mov
mov
and
dec
and
adc
stos
pop
lret
ja
jle
push
movsb
dec
aaa
mov
pause
lahf
int
in
mov
lods
inc
mov
mov
inc
or
xchg
sbb
fs
mov
enter
cmp
or
fildl
pop
cwtl
jle
add
rol
stos
xchg
imul
test
adc
push
push
lods
loop
mov
jl
jle
ret
dec
mov
mov
jl
movsb
mov
aaa
dec
insl
fwait
adc
or
ja
jb
aam
fs
adc
sti
mov
test
pop
push
sbb
lret
fs
jl
leave
scas
inc
cmp
jnp
sbb
xor
fs
dec
mov
mov
mov
jge
sbb
sub
aad
xor
jo
mov
cmpsb
mov
movsl
xchg
leave
fs
test
cld
and
ficoml
cmp
ja
das
and
divb
dec
lods
mov
das
ret
and
in
js
xor
dec
and
jl
fistl
adcb
sbb
push
in
sub
mov
ror
jp
sbb
js
cli
sub
jp
fdivrs
imul
js
cmp
imul
fsts
inc
sbb
iret
loop
push
jp
js
jp
jno
ror
and
in
cli
aam
adc
hlt
cwtl
fisubs
call
mov
imul
outsb
in
hlt
jne
aad
sbb
call
inc
push
outsl
rcrb
lods
fdivs
inc
or
push
mov
imul
sub
and
jge
shll
enter
insl
daa
fsub
dec
xchg
mov
inc
mov
cltd
jbe
ss
mov
imul
fsubr
ficomps
adc
fisubrs
enter
std
mov
cmpsl
fwait
sbb
stc
inc
ss
dec
test
pop
jae
clc
mov
fisttps
into
stos
lret
xchg
dec
push
stos
and
sub
gs
mov
fsub
sub
xchg
xchg
xchg
pop
mov
pop
mov
jp
or
fisttps
adc
pop
and
adc
mov
aaa
pushf
fmul
pushw
cmp
js
pop
ss
fidivrl
mov
dec
adc
outsl
jb
arpl
and
xor
sbb
and
pop
cmp
aas
mov
and
popf
out
xorl
aas
mov
aam
pop
push
or
scas
jp
fdivr
stos
outsl
lds
repz
insb
jl
xlat
xlat
push
dec
in
in
out
mov
in
pop
mov
mov
sub
jg
inc
std
popa
mov
pop
aaa
mov
jle,pt
jbe
dec
cs
xchg
lahf
ljmp
xor
lods
xchg
jnp
mov
shlb
mov
adc
xchg
sahf
in
fisttpl
dec
pop
js
stos
pushf
pop
mov
mov
aad
adc
cmpsl
jl
pop
push
aam
mov
addr16
mov
mov
pop
inc
inc
aad
fldenv
or
push
pop
frstor
cmp
xor
push
mov
cwtl
cwtl
push
scas
test
insb
mov
or
xchg
push
mov
outsb
cmc
jno
mov
mov
jl
and
in
dec
in
inc
inc
push
mov
adc
and
int
daa
mov
dec
inc
fnstsw
cs
cltd
daa
mov
dec
shlb
dec
mov
adc
dec
sarb
sbb
push
dec
loope
xorl
loopne
push
movsl
sub
dec
cmp
daa
pop
popf
mov
dec
dec
call
xchg
inc
shl
shll
lods
adc
fimuls
leave
mov
or
fsubrl
push
into
inc
xor
lods
popf
call
int
out
lods
popa
xlat
lock
inc
sbb
cmp
fsts
cmp
dec
sarb
xor
mov
xlat
inc
lcall
mov
push
aad
pushf
cmp
insl
movsb
add
sbb
push
aas
call
cmpsl
add
add
cmp
sbb
daa
orb
jecxz
pop
or
dec
nop
aam
subl
scas
das
and
dec
sbb
cmp
test
add
adc
mov
mov
sbb
sub
std
imul
or
test
pop
call
ss
cmp
int3
cwtl
insl
or
jbe
stos
jle
lret
jb
add
mov
jnp
sti
adc
out
fwait
inc
and
gs
das
jae
clc
clc
pop
mov
xlat
sub
leave
xor
out
mov
jp
adc
ljmp
imul
fsubl
sahf
xor
and
sub
leave
enter
xor
movsl
or
add
lods
cmc
or
sub
push
mov
aad
add
adc
mov
sub
nop
pusha
mov
fs
pushf
sub
cs
enter
cmp
push
cwtl
or
lods
aam
inc
mov
lret
outsb
jmp
cmp
idivl
mov
lock
jg
in
pop
jg
dec
in
ficomps
adc
out
xchg
stos
push
in
dec
lcall
mov
mov
test
dec
adc
movsb
cmp
sub
stos
jno
fisubrs
jo
in
insb
mov
scas
pop
mov
push
fstp
int3
xor
pop
sbb
sbb
pop
lret
js
push
repz
jge
sub
add
add
leave
dec
lock
jp
stos
int3
or
add
mov
lods
mov
jbe
ficoml
test
mov
xchg
sahf
mov
or
cmpsl
scas
cmpsl
jbe
sbb
test
iret
subl
popa
mov
fimull
sbb
les
lar
sub
nop
nop
dec
cmp
fwait
sbb
loope
lahf
inc
push
add
or
sub
pop
sub
xchg
sbb
idiv
in
and
xchg
xchg
test
mov
data16
je
test
shrl
sti
fdivp
out
sbb
sahf
add
sti
mov
xorl
sti
sub
ret
and
in
rorb
jecxz
jle
bound
fucomi
sbb
mov
sub
stos
mov
dec
pop
insb
mov
repz
xchg
push
ret
mov
mov
lods
roll
mov
in
mov
cltd
cwtl
repnz
in
out
nop
inc
cld
mov
mov
ljmp
repz
loope
inc
subb
sbb
sbb
xlat
rclb
jl
sahf
inc
cmpsb
gs
add
lea
xchg
dec
inc
test
fwait
pop
cmp
adc
mov
sbb
mov
push
test
aaa
aam
add
inc
inc
dec
dec
cs
pop
xor
sub
fdivrs
inc
xchg
int
xchg
pop
xor
and
mov
xor
int
fsubrl
xlat
aad
insl
mov
mov
xchg
xor
inc
mov
call
dec
or
inc
loopne
out
push
fisubl
cs
inc
pop
sbb
loop
shl
enter
sub
icebp
movl
sub
data16
ja
jo
mov
inc
imul
loope
mov
aas
mov
out
dec
lret
cmp
andl
scas
adc
out
push
aam
lds
add
pop
sbb
les
mov
xchg
sub
xor
das
sub
pmaxub
add
adc
and
sub
scas
dec
rorl
hlt
shlb
lret
and
push
xchg
inc
repz
sub
cmp
cmp
shlb
das
insl
mov
adc
xor
mov
mov
test
add
jns
dec
push
in
mov
adc
negb
jg
cmp
fs
sarl
mov
lods
ret
push
fisttpl
mov
stos
sbb
cld
or
addb
daa
push
aad
cld
dec
sbb
cmc
repz
add
ds
adc
scas
loope
lock
das
xchg
lock
mov
push
dec
aaa
add
sub
jg
xchg
enter
sbb
fildll
mov
mov
xor
iret
enter
xchg
jnp
and
rorl
fcmovb
mov
popa
push
xchg
aad
dec
pop
xor
push
pop
out
add
aad
mov
pop
mov
jle
daa
push
push
in
aaa
into
jns
mov
adc
cmp
inc
inc
test
icebp
idivb
inc
out
jnp
cli
pop
mov
clc
es
xchg
int3
jne
add
xchg
outsl
repnz
sti
test
in
fildl
fadds
cs
insl
adc
adc
fsubrs
jl
add
adc
cmp
jp
in
pop
push
xchg
xlat
mov
mov
adc
addb
fldcw
xchg
sub
subl
jno
je
aad
xor
sub
js
int
jo
sub
mov
adc
xor
repz
icebp
xchg
loopne
js
and
push
jnp
xchg
out
cmc
testb
xchg
xchg
and
aad
adc
pop
lock
cmp
pop
dec
sub
popf
out
cmp
mov
popf
enter
jo
cmp
test
mov
sbb
aas
xchg
jbe
repnz
clc
into
loope
dec
ljmp
ret
into
in
sti
out
jl
insb
incb
aam
push
dec
ret
inc
jbe
xor
cli
mov
xor
pop
add
repz
out
loope
cmp
push
out
pop
adc
xor
add
jg
cs
addr16
sub
jmp
outsb
lahf
xor
aas
inc
dec
and
cltd
mov
stc
xchg
sbb
lret
pushf
scas
mov
and
enter
mov
mov
out
roll
repnz
int
or
pop
adc
pop
or
push
mov
inc
pop
iret
aad
xor
xor
pop
xchg
inc
jg
pop
loope
and
inc
push
scas
mov
xchg
cmp
push
in
jns
lcall
adc
jnp
stos
sub
icebp
lock
dec
out
cltd
adc
cmc
fwait
rcrb
fstps
xchg
or
inc
mov
sti
jp
xor
addb
fs
sbb
int
movsl
scas
rorl
pop
shrl
data16
mov
mov
shr
push
mov
ljmp
ja
add
cmp
outsb
std
push
pop
aam
popa
jg
push
jns
bound
ja
in
ja
pop
pusha
push
pop
sub
cmp
js
jge
pop
sbb
fistps
cs
insb
je
and
jbe
adc
mov
enter
ss
jp
and
push
loop,pn
mov
cs
xor
jns
enter
lock
or
mov
cmpsl
jns
clc
aas
sbb
sbb
mov
pushf
xchg
test
ret
js
loopne
and
leave
aaa
mov
adc
sub
add
jp
repnz
lcall
test
jecxz
push
mov
test
jae
mov
mov
mov
mov
test
jo
sub
inc
lahf
rcl
push
mov
ljmp
push
lret
loopne
ss
push
rclb
aam
push
pop
xchg
cmp
push
dec
xchg
fisubs
cmc
movsl
inc
cmp
cmp
sub
repz
adc
fwait
push
out
repz
call
add
aas
dec
pop
xor
leave
mov
or
jle
ss
inc
iret
mov
xor
add
and
into
push
pop
inc
int3
fcmovb
fadds
movsb
mov
cltd
icebp
lods
sbb
in
xchg
mov
push
add
dec
xchg
jg
inc
es
aaa
sub
add
sub
fs
scas
pop
xor
add
and
lods
xor
outsb
cmpsl
sbb
bound
add
sub
jae
sahf
in
popa
ljmp
cmp
ljmp
icebp
pop
and
data16
inc
shll
imul
addr16
cmp
sbb
cs
popa
nop
add
cltd
in
or
cmp
movsl
jl
into
scas
subl
and
mov
test
aas
movsl
clc
sub
xchg
pop
insb
test
xor
xchg
dec
les
aas
sbb
jecxz
sbb
addr16
nop
in
jmp
mov
enter
das
in
and
stos
and
inc
ja
add
push
adc
jge
dec
jecxz
sahf
lcall
in
mov
push
ljmp
xchg
ss
mov
push
or
mov
adc
stos
xchg
sub
dec
xor
sbb
jne
popf
or
push
dec
or
cwtl
mov
in
adc
int3
daa
and
jle
sar
fldenv
push
push
pop
sub
sbbb
into
mov
or
mov
psubusb
test
icebp
sub
in
fwait
or
stos
mov
cmp
sbb
sub
lret
push
in
dec
into
xor
lds
mov
sbb
or
inc
mov
xchg
nop
clc
xor
nop
jecxz
pop
dec
jmp
pop
mov
xchg
cmp
orl
outsl
mov
nop
mov
xchg
into
sbb
pop
popa
lock
add
or
cmovne
jae
sbb
clc
call
sub
sbb
pop
or
fucomi
scas
flds
ja
ret
mov
xlat
jge
arpl
lds
jmp
fldz
jg
cmc
jmp
mov
lods
mov
sahf
out
cmp
lods
inc
cmpl
inc
jl
enter
iret
or
data16
pop
mov
adc
or
sbb
fsubrs
mov
adc
in
fsubrs
dec
ljmp
femms
scas
push
jmp
sbb
rcll
pop
roll
mov
out
mov
rorb
mov
pop
enter
stos
leave
jmp
xchg
add
jp
popa
dec
or
gs
xchg
jo
lods
nop
mov
imul
hlt
sub
mov
lcall
xor
dec
aas
sub
jg
es
ljmp
fisttps
adc
mov
aam
scas
pusha
pop
lcall
or
sahf
mov
inc
mov
jnp
sub
fcoml
call
sti
or
and
cmp
dec
into
mov
push
add
cmpsl
cmpsl
sub
pop
sahf
push
push
aad
sub
mov
popl
pop
add
push
fmulp
cmpsl
mov
scas
in
jnp
mov
imul
inc
adcl
shrb
loope
jnp
sub
lea
inc
push
inc
xor
mov
lods
push
cmp
out
sub
or
jg
std
pop
fistpl
mov
cmp
sub
mov
pop
outsl
mov
movsb
sahf
lcall
fstp
mov
scas
stos
jecxz
out
xchg
shrl
jo
aam
aas
lods
pop
sahf
push
adc
shr
lock
or
fwait
ret
loope
sbb
and
cwtl
pop
movsl
incl
jecxz
aaa
push
aas
jno
mov
dec
xchg
out
test
mov
enter
cmc
iret
loopne
xor
xchg
loop
jecxz
cmp
sub
loop
iret
lods
int
test
mov
in
clc
mov
xor
adc
test
sbb
scas
push
pop
test
push
and
fld
loope
loop
pop
pop
jl
out
inc
sub
aas
mov
pushf
lds
roll
push
insb
test
add
fsubl
cmp
sbb
scas
jl
loopne
and
or
adc
mov
stos
cli
mov
pop
movsl
jmp
mov
sbb
ftst
jne
fdivrs
inc
mov
xchg
scas
sti
arpl
jbe
xor
push
or
push
pop
repnz
dec
imul
out
aaa
inc
mov
fildll
pop
imul
mov
and
mov
popa
lds
mov
cmpsb
cwtl
xlat
push
xchg
pop
mov
iret
push
lcall
xchg
into
sbb
test
ret
pop
fwait
repz
stos
push
leave
mov
and
add
mov
stos
sub
sbb
dec
dec
sti
push
inc
mov
lahf
cmp
xor
mov
mov
or
in
fs
sub
mov
dec
xor
iret
mov
push
negl
and
xor
xchg
popf
fmul
sbb
dec
inc
jb
mov
and
stos
adc
pushf
xchg
ljmp
scas
fadds
and
pop
out
xchg
xor
or
call
pop
test
cmovs
jae
pop
push
mov
cwtl
push
add
mov
cmp
add
in
in
cmpb
shrl
popf
jge
push
orb
dec
mov
loopne
rcl
into
pop
push
xor
fidivl
xchg
addb
mov
dec
jmp
jl
fs
aad
cltd
pop
dec
gs
ret
dec
xor
jp
sbbb
ds
mov
mov
aad
add
pop
dec
cmc
pop
dec
bound
adc
or
inc
mov
loopne
je
outsl
cmpsb
xor
adc
push
sahf
adc
add
in
sub
outsl
rolb
or
add
mov
dec
fists
jae
or
jle
push
out
outsl
lret
dec
dec
pusha
out
mov
add
out
dec
inc
mov
push
iret
mov
xor
xor
lock
lds
test
sub
idiv
pop
faddl
loope
out
mov
xlat
cld
mov
inc
test
hlt
loop
es
repnz
clc
push
loop
mov
cmc
out
dec
pusha
and
out
sahf
jle
fisttpl
cmpsl
pop
xchg
js
test
repnz
js
push
out
pushl
das
outsl
sub
inc
hlt
ficoms
xor
pop
dec
xlat
jbe
sbb
inc
adc
in
sub
sahf
adc
mov
addr16
sub
in
scas
dec
lcall
lock
int
ds
mov
inc
mov
mov
inc
add
jne
dec
adc
int
mov
jg
adc
pop
mov
inc
adcb
cld
inc
lock
ret
scas
pop
push
push
das
fisttpl
xor
and
push
pop
or
cmpsl
mov
les
push
lret
xchg
cltd
fldl
mov
pop
aad
and
call
scas
test
push
ret
repz
pop
in
sahf
cmp
addr16
pop
mov
movsl
xor
push
aas
push
test
fldt
push
lock
and
mov
mov
fidivrs
movsb
insl
enter
sbb
idiv
cmp
cmp
mov
repz
sti
roll
cmpsl
decb
xor
out
sub
js
pmaddwd
cmp
pushf
add
call
repz
sbb
and
mov
insb
shll
mov
xabort
dec
jge
jo
sbb
pop
inc
ja
dec
arpl
roll
mov
fsubp
fcoml
mov
pop
xor
sbb
popa
lea
lods
push
sub
cmp
outsb
and
mov
jne
stos
bound
cmp
lcall
aad
cmp
enter
fwait
call
inc
xor
pop
stc
repnz
push
or
int
pop
push
call
sub
jecxz
mov
daa
aad
xor
iret
sti
inc
fsub
aaa
cs
lret
outsl
dec
fcompl
mov
gs
xor
inc
pop
add
fdivrp
test
or
outsl
sbb
mov
adc
aaa
pusha
addr16
and
cmp
incl
xchg
addr16
sbb
aad
nop
inc
jne
jbe
adc
mov
mov
lock
lahf
jecxz
jno
in
int3
mov
cmpsb
enter
adc
cmpsl
jae
les
testb
fnstsw
popa
pop
adc
in
sbb
pop
jl
xor
xlat
xchg
cmc
or
cmp
test
cltd
jnp
mov
imul
outsb
mov
inc
movsb
test
cmpl
dec
jmp
dec
stc
ret
pop
inc
or
stos
push
lods
adc
jae
inc
gs
cmpsb
xor
sbb
and
add
jnp
cmp
in
xor
pop
lods
leave
rcr
out
sbb
cmp
shl
jl
sub
insl
jns
aaa
repnz
mov
iret
sarl
xchg
popa
dec
jns
hlt
insl
out
out
ret
jg
push
iret
or
mov
shlb
mov
mov
sbbb
adc
in
mov
dec
iret
jecxz
lret
cmp
mov
jecxz
lods
inc
cmp
cwtl
mov
ja
jo
popf
fs
push
mov
cmp
cmp
pop
roll
ljmp
or
cmp
sub
ds
xchg
nop
aad
loop
mov
idivb
lods
pop
sti
xor
call
jae
mov
test
inc
mov
jl
arpl
or
mov
jae
loope
jecxz
icebp
mov
movsl
mov
bound
clc
scas
punpcklbw
sub
pushf
or
in
addb
aaa
lods
sbb
cmc
fs
and
cwtl
outsb
bound
lret
inc
mov
sahf
mov
pop
out
in
aad
enter
lock
test
cmp
stos
enter
sub
nop
cmp
sub
dec
mov
or
jmp
sub
repnz
sbbb
lea
outsb
hlt
pop
sub
call
fmul
shlb
or
push
push
pop
mov
loopne
shl
js
sbb
jne
cmpsb
lods
adc
leave
jl
fs
or
or
scas
inc
scas
call
in
test
mov
push
mov
scas
aad
push
out
jns
or
repz
mov
popf
orb
loop
cmp
scas
adc
mov
clc
add
cwtl
lods
adc
cmpsb
ss
xor
testl
es
sub
inc
orps
incb
out
cmp
clc
xor
out
cmp
lcall
adc
mov
xchg
dec
cmp
jl
mov
lret
inc
mov
bound
xchg
cli
ljmp
sbb
mov
repnz
mov
xchg
ret
fisttpll
cmp
pop
xchg
shll
dec
ret
test
adc
dec
xchg
xor
sti
movb
and
stc
mov
sbb
stc
mov
jbe
out
push
dec
sub
aas
xlat
cmpsb
mov
inc
movsb
mov
cwtl
out
push
inc
insb
jge
jns
fcompl
inc
pop
aaa
lcall
out
mov
mov
sub
sbb
jne
repnz
xor
lret
push
mov
imul
add
or
out
cmp
mov
clc
loop
xchg
das
lret
loopne
xchg
jge
leave
int
xor
push
push
insb
lds
push
sbb
adc
add
loope
cmp
cmp
push
test
shrl
pusha
cmpsl
int3
cmp
ficoms
and
cmp
out
test
cmpsl
jge
mov
nop
inc
or
orl
rclb
xchg
dec
into
add
mov
cmc
andl
xor
lea
inc
add
dec
sbb
je
mov
pop
fldt
xchg
stc
sub
sub
sub
push
inc
xchg
xchg
xchg
popa
adc
ja
stos
int
cmpsl
or
ret
std
bound
int3
pusha
push
xlat
test
mov
or
jle
fcoml
dec
dec
test
icebp
mov
cmc
out
sbb
test
popf
fcmove
lahf
ljmp
sbb
dec
testl
stos
repnz
pop
sahf
sbb
out
or
inc
push
aas
aas
sbb
fidivs
xchg
loop
cmp
mov
or
pop
test
shrb
inc
popa
and
xchg
add
bound
bound
pusha
cmp
in
mov
mov
pop
ret
cmp
shr
pop
rorb
pop
mov
loopne
sbb
testl
test
vandnps
push
mov
jmp
dec
add
ss
repz
xor
jno
sbb
cmp
xchg
inc
leave
aam
cmp
push
dec
push
out
aas
mov
cld
lahf
cwtl
fwait
or
outsl
cwtl
and
sbb
jl
sbb
js
cmpsl
jb
rcr
stos
subb
sarb
shrl
or
or
fldt
adc
mov
cmove
push
pop
cmp
or
lahf
addr16
ret
push
jl
in
mov
std
lea
shll
ja
lea
ret
loopne
lds
cmp
or
push
scas
jmp
and
jo
js
mov
aad
mov
loope
mov
sub
sbbl
addr16
xchg
mov
ret
xlat
out
mov
fmuls
pop
ret
push
sti
lcall
jge
jp
xadd
pop
pop
mov
mov
das
lret
pop
add
lcall
jo
sbbl
lahf
mov
addb
adcb
xchg
int
add
or
mov
adc
stos
add
fisubs
lock
rol
sub
sti
loope
mov
call
jnp
xchg
js
xor
xor
or
out
aam
xchg
shrl
inc
mov
imul
cltd
call
nop
sub
inc
mov
mov
out
ret
jp
fs
lret
insl
enter
out
int3
pop
xchg
aam
or
and
shll
and
push
fcoms
jp
lock
pusha
adc
loope
cmpsl
add
xchg
or
xor
mov
fnsave
inc
lret
ds
mov
sub
add
decb
insl
mov
adc
adcb
scas
dec
fimull
lcall
mov
push
shlb
add
xor
fldcw
lods
imul
or
stc
jns
push
iret
or
aas
add
jge
lds
mov
js
mov
je
add
jl
fucompp
inc
adcl
insb
inc
push
adc
and
jo
jmp
push
cmp
adc
push
mov
scas
loope
enter
movsb
sti
decl
sub
mov
bound
loop
pop
cmp
lods
outsl
ja
cmp
pop
fsts
hlt
add
and
imul
dec
xchg
int3
sub
or
cmp
pop
mov
aaa
pusha
xor
cmp
cmp
mov
adc
mov
fadds
xchg
dec
and
jle
fmull
int3
inc
pmullw
in
ds
push
sub
sub
cmpsl
nop
ret
mov
nopl
adc
add
bound
and
jge
and
cmp
xor
sahf
lea
sarl
mov
mov
ss
inc
mov
in
pop
jnp
iret
js
inc
sbb
push
test
scas
arpl
mov
in
push
les
into
push
pusha
xchg
xor
adc
inc
subl
cmpsl
dec
add
sbb
js
testl
ret
ljmp
mov
cmp
fistpl
ja
dec
in
cmpsl
add
mov
xchg
mov
jns
mov
in
dec
adcb
pop
mov
xor
test
mov
into
or
pop
notb
push
jmp
jno
pop
and
or
aad
sub
and
call
cmp
jbe
sbb
mov
out
or
xchg
push
mov
mov
sti
cld
dec
inc
gs
outsl
jecxz
jo
or
sbb
rcr
imul
sbb
mov
bnd
rcrl
icebp
bound
pop
mov
pop
lcall
inc
data16
out
leave
xlat
adc
xchg
rol
cs
imul
pop
xchg
pop
icebp
data16
xchg
insb
fwait
jns
add
test
shll
rcll
mov
mov
mov
sarl
push
adc
ret
jge
sub
and
xchg
push
fiaddl
cmp
cmc
loopne
test
dec
lock
mov
mov
incl
fildl
loopne
inc
xchg
xchg
inc
shlb
cmp
ds
test
out
mov
dec
in
adc
push
loop
mov
push
pushf
cmp
add
mov
xchg
mov
ret
sarl
ret
out
js
xor
sub
adc
mov
and
cmc
shl
mov
fisttps
add
inc
cmpsb
push
xchg
lea
fdiv
xchg
pusha
cmp
and
push
push
int3
mov
xchg
xchg
pusha
mov
inc
mov
iret
and
ss
rorl
out
mov
dec
int3
xchg
xchg
push
add
aaa
cmpsl
add
call
subb
pop
cmp
popa
push
mov
inc
or
mov
arpl
arpl
mov
inc
ljmp
bound
mov
out
add
movsl
xor
cltd
sarl
arpl
mov
lock
inc
mov
in
jp
mov
adcl
jle
adc
or
lods
pop
adc
push
out
sub
push
out
movsl
xchg
xchg
pop
popf
rcrl
loop
setne
xchg
jno
aas
into
rorb
bound
xchg
aaa
fidivrl
or
cmp
add
mov
lock
push
addb
in
jp
push
and
call
jecxz
nop
fwait
outsl
outsb
aam
mov
sub
jo
ret
mov
jo
xchg
data16
test
mov
mov
cmpsb
in
das
cwtd
jno
and
add
sbb
scas
mov
jmp
lea
ficoml
fwait
and
icebp
iret
sub
sub
insb
stos
stos
mov
cmp
test
movsl
repnz
mov
mov
enter
pop
stos
shrl
inc
les
adc
sbb
data16
fsubrs
jmp
adc
leave
or
cltd
outsb
stos
int
je
mov
pop
adc
aam
sarl
cli
xor
dec
flds
inc
inc
test
stc
mov
pop
adc
xchg
adc
sarl
rclb
outsb
xchg
jl
pop
push
pop
sarb
daa
out
pop
int3
and
or
jle
fsubl
adc
jae
jo
mull
in
push
call
jno
cmpsb
scas
cwtl
push
cmpsb
cmpsb
cmpsb
pop
jne
pop
filds
jg
or
loopne
jle
xchg
push
mov
aam
test
enter
inc
xor
push
movsl
xchg
add
pusha
aam
push
out
repz
xchg
push
jo
push
cmp
xchg
ficoml
imul
jge
xor
jge
dec
andb
sub
xchg
pop
mov
push
imull
jb
mov
xor
mov
pop
sbb
sti
jg
mov
or
call
nop
js
add
sub
cmp
rcrb
xchg
mov
cmp
insb
ja
cmp
push
movb
in
jae
out
rcll
std
inc
je
rcrb
nop
pop
movsl
lock
fdivl
cmp
cmpsl
dec
lcall
test
dec
dec
dec
movsl
popa
cmpsl
incb
jnp
xchg
add
mov
push
xchg
mov
aad
pushw
jmp
mov
jmp
call
mov
mov
insb
std
fdivs
fildl
pop
mov
fistps
xor
cltd
sbb
mov
fisubrs
movsb
or
std
pop
iret
mov
xor
and
call
pop
jns
and
imul
ljmp
xor
gs
inc
sub
push
scas
rcrl
jle
popf
cmp
mov
popa
push
add
fs
pop
add
xchg
pop
mov
insl
mov
or
sbb
cmpsb
push
lea
decl
cmpsl
jae
fnsave
lds
mov
inc
sbb
bound
push
push
mov
pop
push
adc
jg
movsb
mov
pop
dec
call
mov
ljmp
enter
stc
sub
mov
or
push
sahf
jl
xchg
std
jge
rolb
push
imul
mov
add
ret
mov
jns
aad
and
mov
in
inc
aas
mov
adc
sarb
test
sub
les
clc
push
adc
pop
pop
mov
jmp
cmp
sub
dec
push
popf
stos
xor
and
loop
mov
lods
push
mov
ljmp
jne
test
jo
push
pop
je
int
mov
mov
mov
xor
pop
imul
mov
lods
jge
ja
enter
sub
repz
ja
inc
pop
data16
xor
sub
loopne
xchg
cmp
and
mov
cli
fbstp
sbb
pusha
rep
test
sbb
xchg
test
or
lods
push
jp
fstpl
pop
sub
lds
clc
stos
jbe
nop
aad
push
mov
adc
xchg
jno
int
add
adc
xchg
aad
cltd
pop
in
cmp
imul
gs
pop
cs
sub
loope
sbb
jno
gs
scas
push
test
mov
test
cmpsl
mov
push
adc
pop
fwait
out
sub
cs
mov
scas
insb
ret
imul
test
sub
cmp
out
js
pushf
sahf
sub
shrb
jmp
and
fsubrs
outsl
fsubp
add
mov
rol
jae
dec
cmp
loop
mov
stos
sub
lahf
xchg
dec
xor
add
inc
out
imulb
js
and
loope
push
test
adc
sahf
and
add
jae
fs
pop
jae
push
scas
in
cmp
shll
out
std
loop
adc
in
cld
lds
xor
in
fwait
cmpsl
pop
jb
gs
pushaw
aas
xchg
lea
leave
jmp
inc
sbb
mov
jp
and
iret
shll
lock
jne
xchg
push
fs
test
lods
push
mov
pop
push
pop
stc
test
push
sbb
sbb
aad
pop
inc
movsb
ror
jg
mov
aam
into
jo
add
mov
fwait
ja
pop
mov
xchg
rclb
leave
mov
data16
xlat
jecxz
leave
repnz
add
push
imul
lahf
mov
loope
arpl
and
jmp
les
cmp
insb
sti
or
stos
cld
or
fs
sbb
cwtl
add
loopne
mov
push
imul
adcb
andb
lcall
sahf
dec
xlat
push
and
adcb
push
loopne
add
xchg
rcll
int3
lcall
rorl
and
out
arpl
out
arpl
scas
mov
imul
inc
hlt
jbe
std
cmp
aam
jecxz
fisttps
mov
nop
rorl
aad
lods
sbbl
mov
xchg
mov
jns
sarl
lods
dec
xchg
sti
scas
mov
jecxz
mov
or
negl
xchg
adc
pop
lahf
mov
jp
mov
std
out
adc
pop
aad
ds
leave
pop
mov
dec
repnz
sbb
loope
push
aad
insl
pop
fistps
inc
scas
test
add
mov
push
xorb
push
in
mov
int
cmp
fists
xor
lret
pop
or
push
in
cmovl
rcr
movsb
pop
sti
jb
pop
fwait
roll
xor
in
mov
pop
js
mov
dec
lret
leave
lret
cmp
inc
pusha
mov
mov
nop
cmp
cli
inc
xor
mov
in
loope
dec
sub
mov
hlt
imul
pop
xor
fsts
mov
lea
xor
imul
sub
outsb
ljmp
dec
imul
ss
mov
outsl
mov
jbe
xor
ret
xor
dec
fs
mov
mov
or
mov
ja
popa
add
mov
das
jecxz
xlat
pop
mov
pop
mull
dec
push
into
lods
add
cmp
mov
std
jge
inc
inc
cwtl
rcll
enter
int
xor
dec
mov
mov
ljmp
fs
jae
test
stos
mov
xor
or
jmp
xlat
jg
xor
cmp
dec
fbstp
add
clc
lahf
clc
xor
shl
xor
pop
pop
jae
jecxz
in
adc
out
pop
xlat
std
pop
sub
ret
sub
ret
dec
ret
sti
test
mov
jno
pop
jg
cltd
push
fstpt
pop
leave
ret
lcall
das
and
je
cltd
cmp
push
push
loopne
sarl
pop
test
sub
sahf
orps
and
inc
scas
and
ret
jl
shlb
sub
cmp
outsb
dec
sbb
jb
ds
lods
test
jns
lods
pop
mov
ret
sbb
jp
pop
xchg
sub
cli
popf
comiss
dec
mov
xchg
into
and
mov
je
mov
adc
stc
movsl
jno
scas
sti
push
hlt
mov
sbbl
xor
xchg
decb
out
sub
repnz
nop
jle
sti
stc
cmp
mov
sbb
dec
into
xchg
jle
cmp
pop
mov
xlat
ficompl
in
mov
jbe
lahf
cmp
xor
mov
shll
sub
push
push
pop
pushf
shrl
adc
and
mov
repnz
xchg
adc
mov
cmp
sahf
jns
shl
jmp
cmp
cmp
xlat
andb
js
sbb
xchg
add
mov
jne
dec
mov
jp
xorb
cmpl
fwait
shr
and
cs
ret
rcl
mov
mov
mov
dec
mov
push
cmp
test
out
rclb
lret
repz
outsl
daa
xchg
iret
push
mov
pop
jecxz
pushf
repnz
shl
movl
mov
test
loopne
xchg
stos
call
pop
cmp
xor
inc
push
addl
mov
jecxz
test
icebp
scas
dec
or
jmp
sbb
gs
sub
xchg
in
out
stos
xor
aas
divl
fwait
inc
sarb
or
leave
sbb
outsl
push
xchg
outsb
mov
or
and
aaa
jns
and
mov
adcl
xlat
sub
add
mov
fildll
pop
dec
cld
imul
imul
xchg
cld
idivb
mov
decb
bound
scas
inc
push
pop
cwtl
std
jo
movsb
dec
add
mov
or
adc
dec
test
xor
lret
cmpsl
push
pop
cli
push
push
cmp
das
xor
sub
push
into
mov
jp
jae
sub
imul
sarl
xlat
xorb
daa
pusha
in
aam
mov
sbb
jge
and
ret
jb
dec
adc
mov
mov
dec
rcrb
aam
js
xor
xor
push
sti
jle
dec
js
jo
jae
jb
sbb
pop
cmp
push
test
jnp
sbb
js
mov
call
mov
in
std
lock
jae
xor
xchg
sbb
push
leave
enter
dec
mov
clc
mov
cmp
fiaddl
out
ja
sbb
into
daa
mov
fisubs
aas
rclb
pusha
cwtl
pop
in
lret
fld1
jmp
in
xchg
insb
fldt
pop
fs
orb
and
scas
loopne
cmp
lret
lret
jne
repnz
push
dec
mov
jg
jmp
test
pop
aas
inc
jl
idivb
out
js
pop
adc
in
clc
or
stos
jg
jecxz
sbb
ficoms
cmc
lds
movsb
jecxz
xchg
test
pop
aam
mov
xchg
inc
cmpsb
leave
pop
xchg
test
aam
push
and
stos
leave
int3
inc
lret
insb
shrl
loope
cltd
adc
xchg
aad
mov
popa
and
pop
xor
in
test
jno
mov
test
cmp
outsb
lds
pop
jp
loope
cmpsl
add
jne
rcrb
out
iret
pop
or
dec
add
leave
imul
jbe
xor
in
clc
mov
jecxz
mov
mov
mulb
mov
stos
fdivrs
mov
cmp
mov
and
imul
js
add
xchg
icebp
mov
subb
outsb
cmpsb
sbb
lahf
mov
movsb
pop
add
or
in
shll
insb
fldl
sbb
sub
in
popa
and
mov
push
pusha
adc
mov
xor
test
dec
mov
mov
mov
add
addr16
add
xor
stos
dec
pop
mov
mov
xlat
fwait
xchg
jb
mov
sub
or
add
dec
jl
ret
fwait
into
cmpsl
sub
iret
movsl
pop
dec
push
popf
adc
pop
dec
jbe
cli
or
dec
cmp
pop
das
jbe
pop
test
xlat
mov
jecxz
mov
in
xorl
or
or
mov
jb
insb
adc
jmp
cmp
mov
ljmp
aas
cmp
ficompl
push
imul
lret
mov
gs
pop
iret
add
push
push
in
fadd
aam
sti
int3
cmpsl
add
inc
lock
xchg
cwtl
int3
lret
push
ljmp
inc
dec
jmp
gs
lods
iret
das
or
pop
cmpsl
push
shlb
jmp
sbb
rcrb
mov
lea
aad
pop
xor
fwait
mov
push
aam
push
push
jp
xorl
and
popf
sahf
push
inc
jecxz
movl
nop
jae
pop
orb
scas
fs
cmp
mov
outsb
cltd
or
add
insb
lahf
add
lods
mov
adc
push
sbb
mov
adc
cld
adc
inc
loope
mov
or
fists
xlat
push
arpl
jecxz
cmc
jne
pop
iret
push
gs
sahf
jge
sub
aad
lahf
xchg
pop
xchg
mov
les
daa
hlt
inc
dec
dec
lock
adc
popa
cmp
xchg
jmp
sar
jo
mov
movsl
je
adc
fsubrl
sbb
jbe
mov
fimull
in
mov
jle
cltd
lds
mov
jle
push
loopne
dec
push
sbb
insb
and
mov
ss
mov
cmp
fisubrl
lods
dec
mov
adc
pop
jmp
jbe
call
xchg
aas
sar
popf
es
push
clc
xchg
sbb
push
in
ret
imul
jo
push
mov
out
test
adc
adc
xchg
fwait
aam
ficoms
or
test
nop
pop
repnz
ljmp
inc
pop
sbb
mov
jge
fcoml
addb
sbb
insb
mov
mov
sbb
adc
aad
and
adc
dec
lds
jl
mov
jne
fdivrl
fidivrs
hlt
inc
in
in
cmpsl
sbb
sub
loop
mov
cli
sbb
insl
and
out
pushf
cltd
test
scas
scas
in
or
pop
jl
xor
jmp
aas
fs
movsb
lahf
xchg
sub
dec
leave
shrl
jae
add
insb
sbb
lea
rorl
clc
push
cmpsl
movsb
adc
loopne
pop
mov
dec
pop
cmp
push
xor
inc
aas
call
xorb
or
popf
jl
ss
popa
cmc
jo
pusha
adc
imul
jecxz
mov
pop
jmp
mov
xchg
loope
dec
hlt
rolb
push
sub
or
jp
mov
mov
movl
imul
pop
mov
stos
fs
cmpsb
into
mov
je
push
dec
bound
subb
rcll
imul
xchg
movsb
inc
rclb
sbb
leave
xor
in
cmpsb
cmp
mov
cwtl
lods
test
pop
sbb
loopne
fistps
ret
jns
jae
adc
aad
cmc
dec
cmp
dec
jecxz
xchg
test
push
mov
mov
dec
pop
or
dec
push
mov
push
outsl
xchg
xchg
lret
mov
sbbb
leave
jp
mov
cwtl
sub
jle
mov
push
jp
mov
fmulp
repz
cmp
lock
pop
lret
add
aad
push
and
aam
push
les
mov
xchg
lods
inc
jmp
rcll
pop
push
pop
add
ret
jecxz
loop
shr
pop
sub
test
vpunpckhdq
cmpsl
call
mov
bound
and
aad
or
jbe
mov
ja
das
aas
jl
cmc
movl
insb
shrb
mov
aam
cli
daa
imul
mov
inc
stc
icebp
ret
sarb
xchg
out
push
and
xchg
fstpl
lods
push
xchg
aas
mov
mov
jne
daa
mov
inc
jl
dec
stos
xchg
mov
inc
adc
aas
mov
inc
adc
pop
sub
add
mov
mov
adc
sub
fsubl
stos
fisttpl
dec
mov
cltd
jecxz
sub
sbb
mov
cld
mov
or
mov
push
mov
and
sub
lock
cmp
int3
loope
enter
xor
sub
inc
inc
lea
js
adc
popf
ljmp
std
imul
fcomps
hlt
mov
insb
imul
ret
out
mov
fs
outsl
sub
sahf
and
ret
jb
jge
push
push
pop
fs
mov
outsl
mov
mov
push
adc
and
cmp
cmp
in
repnz
inc
sbb
xor
arpl
jge
cltd
mov
xchg
sub
push
add
call
pop
and
inc
in
xchg
lcall
push
aad
movsl
mov
rcr
lret
or
xor
push
rolb
cld
mov
add
or
arpl
or
inc
cmp
popf
lods
lret
dec
inc
pushl
in
loop
testl
insl
lods
cmp
movsb
mov
xlat
fisubrl
pop
adc
mov
xor
out
push
daa
mov
mov
popa
jecxz
aam
cwtl
jbe
fwait
jb
stc
adc
mov
xor
dec
ret
xor
pop
aaa
lods
sub
loope
into
ret
fstpl
lcall
call
lods
data16
data16
repnz
fldcw
push
cmpsl
or
jp
push
popa
push
or
or
xchg
lds
xchg
fistpll
fiadds
and
mov
aaa
call
mov
scas
icebp
mov
stos
and
push
popf
and
xor
int
mov
test
xor
jge
xchg
pop
mov
mov
sarl
or
icebp
and
mov
dec
fnop
xor
ljmp
test
lret
xor
jmp
test
js
outsb
mov
dec
popa
fldcw
pop
mov
push
leave
fdivrs
dec
and
xchg
clc
add
pop
sbb
loop
push
movsl
inc
outsb
dec
xor
lds
xchg
out
cmpl
cmp
lods
out
lea
mov
shll
lock
xchg
fwait
adc
pusha
shlb
push
mov
mov
sub
pop
in
jecxz
or
sbb
cld
rorb
loope
and
fisttpl
adc
add
es
cmpsl
jg
aam
push
push
mov
in
xor
ja
out
dec
into
sub
and
sub
dec
push
mov
push
mov
les
push
cmp
or
adc
xchg
lods
add
shll
pop
pop
mov
or
xchg
js
pop
lds
pop
push
fwait
mov
and
inc
out
cwtl
sub
test
adc
mov
in
movsb
lock
mov
xchg
xor
pushf
pop
xchg
mov
pop
fistps
jns
inc
cwtl
out
inc
retw
das
mov
imul
pop
jns
stos
jb
dec
xor
cmc
pushf
dec
pop
dec
sbbl
jle
in
sahf
rorb
in
test
aam
test
push
insl
xor
adc
jo
pop
sbb
aad
jne
xchg
mov
out
aas
xor
mov
leave
xchg
popa
jae
dec
lret
push
jle
push
ds
pop
inc
dec
fcoml
out
scas
enter
push
ficomps
cli
inc
jmp
out
loope
push
xchg
pop
adc
dec
dec
push
add
mov
push
pusha
mov
cmovb
xchg
popf
pop
adc
std
test
or
dec
push
mov
jmp
adc
mov
shlb
sti
stos
lods
lret
negl
xor
adc
mov
sbb
mov
mov
add
insb
es
push
sti
int
jmp
add
out
leave
cmp
sub
fucom
sbb
ret
aam
xor
dec
les
and
jo
xchg
push
add
in
jl
mov
pop
lds
add
cmp
and
clc
test
cld
popf
cmp
and
mov
jge
mov
iret
fbld
inc
das
test
xchg
cmp
pop
clc
aaa
imul
into
fchs
in
clc
shl
sbb
inc
rorb
iret
subb
dec
stos
enter
das
sub
mov
sbb
or
xor
push
sub
dec
lock
xor
in
jne
add
and
in
pop
pushf
repnz
add
inc
call
icebp
pop
xor
mov
mov
insl
push
lret
pop
adc
dec
jg
cli
das
int
xchg
leave
rcll
ljmp
mov
jl
xor
jb
pushf
pop
add
mov
test
cmpsl
out
jecxz
call
jl
push
mov
push
hlt
ret
jne
add
cmp
mov
mov
pop
ret
out
xor
sub
dec
cltd
and
mov
outsb
insb
adc
leave
popa
lahf
enter
incl
fcompl
xchg
outsl
mov
outsb
into
lods
pusha
jne
mov
dec
mov
cmpsl
mov
mov
mov
cli
xor
es
out
outsb
ficoms
andb
jbe
sbb
dec
xchg
mov
andl
cmp
adc
push
mov
sbb
mov
xor
xor
cmpsl
test
mov
in
lea
xor
enter
inc
ds
stc
jp
test
icebp
fisubs
in
sub
xchg
test
xor
test
dec
xor
xchg
mov
push
inc
jno
aas
into
fldlg2
leave
popf
xor
push
test
int3
or
push
mov
std
mov
mov
outsl
pop
sub
shl
add
mov
popf
outsb
mov
imul
hlt
inc
js
ja
add
push
mov
mov
or
ljmp
mov
jb
movsb
jle
push
jo
inc
pusha
or
sub
cld
and
jnp
push
rclb
into
mov
ds
adc
test
outsb
jns
cmp
cmp
jae
sub
cmpsb
push
mov
fistpl
sbb
push
imull
mov
and
ret
into
inc
jmp
in
pop
in
pop
add
push
lods
jg
pop
movsl
mov
jp
imul
insl
mov
fs
and
adcb
int3
xor
stos
sbb
lahf
cmp
in
mov
pop
aad
cmc
sub
xchg
jmp
div
cmp
sub
outsl
sbb
call
aas
dec
jge
mov
adc
sub
subb
shl
adc
cmpsl
mov
cli
lcall
shll
in
int
stc
shrb
jl
clc
in
xchg
jno
cmp
jbe
add
pusha
push
cmp
fs
xchg
into
xchg
sarl
cmp
mov
jns
aas
adc
add
push
gs
fcoms
push
jecxz
call
ds
push
call
pop
hlt
or
cld
mov
inc
inc
cs
pop
test
pushl
pop
jecxz
mov
jnp
dec
fidivrl
pop
pop
cmp
xlat
fwait
outsb
or
pop
inc
sub
fwait
inc
pop
or
decl
sub
inc
pop
into
add
or
sbb
sbb
iret
mov
pop
outsl
and
dec
leave
lods
mov
adc
push
and
push
jge
pop
mov
xchg
test
push
push
mov
aad
mov
jg
or
les
sub
push
pop
lret
and
push
mov
adc
pop
pop
cmp
stos
daa
jno
sbb
add
push
popf
rcll
jmp
iret
int
ljmp
mov
adc
inc
and
inc
jns
dec
jle
outsb
inc
inc
in
das
scas
jmp
mov
jno
push
lahf
inc
call
sub
jbe
inc
mov
mov
mov
imul
mov
inc
in
sbb
aad
dec
inc
cs
jge
cmpsb
xchg
mov
cld
out
add
jns
xchg
mov
ljmp
cmp
or
pop
jnp
in
mov
mull
imul
sub
fmul
lcall
jne
fcoms
shlb
xchg
adc
adcb
xor
arpl
xchg
es
adc
shlb
lods
mov
test
mov
sbb
adc
sti
mov
int3
cmp
inc
cmp
inc
xchg
ljmp
call
scas
dec
out
lcall
dec
jg
mov
fcoml
pop
int
or
sub
pop
pushf
lret
mov
mov
xor
mov
jo
fwait
out
jnp
push
mov
sbb
mov
cs
inc
and
and
mov
into
cmc
pop
jp
mov
adc
aam
mov
push
int3
in
jns
xchg
std
stos
xlat
adc
rcll
cwtl
gs
jns
dec
mov
and
add
test
adc
pop
add
inc
xor
in
cltd
inc
out
in
and
or
mov
mov
pop
pusha
into
mov
aad
sti
stos
addr16
insl
int
xor
fistps
add
push
aad
lock
lret
popa
pop
push
push
dec
jl
or
adc
sbb
xchg
daa
mov
sti
dec
mov
leave
add
xchg
enter
xor
and
push
cwtl
push
fwait
mov
and
push
out
xchg
cmp
rorb
jns
dec
cli
lret
divl
fwait
lahf
arpl
cmp
out
jmp
xchg
dec
in
gs
and
faddl
add
mov
fs
test
data16
mov
mov
add
xchg
jbe
mov
lods
cltd
xor
dec
mov
and
lock
mov
or
cmp
push
sbb
mov
push
movsb
data16
hlt
stc
or
fs
mov
inc
jb
and
test
mov
aaa
and
movsb
or
xchg
sbb
xor
dec
ja
push
leave
adcl
adc
test
scas
adc
out
jns
je
and
jecxz
cli
pop
mov
xchg
negb
dec
xchg
pop
loope
push
insl
fwait
movl
mov
sub
xor
aas
lea
mov
lock
jge
aaa
bound
and
pop
add
cmp
dec
scas
outsl
or
xchg
iret
jmp
int3
mov
call
insb
jecxz
mov
cmp
call
cmp
cmpsb
cmp
shll
xor
outsb
add
adc
bound
mov
stos
mov
stc
sbb
imul
hlt
sub
sbb
aam
or
mov
pushf
ja
push
sub
add
xor
inc
lods
faddp
roll
shrb
fcoms
xor
pop
lods
ljmp
rclb
mov
aam
imul
in
test
mov
mov
dec
sub
jnp
mov
cmp
scas
hlt
lcall
ss
cmp
rclb
inc
adc
test
mov
sub
pop
outsb
je
sbb
loop
and
adc
push
xlat
sub
sub
and
pop
loope
repnz
push
cmp
mov
pop
xchg
fidivrl
scas
sbb
stc
dec
ret
sarb
repz
imul
aam
xchg
mov
xchg
adc
lds
jb
add
outsb
jecxz
fyl2xp1
in
mov
pop
inc
ret
das
in
push
mov
cmp
xor
and
pop
jmp
movsl
icebp
push
stc
hlt
mov
mov
insb
enter
sub
xlat
cmp
cmp
das
mov
lret
aas
sbb
arpl
xchg
cmpsl
sub
push
js
or
xchg
sub
or
ja
push
xchg
jbe
mov
sti
lret
xchg
int
jno
fildll
cmp
mov
pop
fcmovnbe
inc
push
xchg
xorl
dec
sub
stos
cmpsl
popa
bound
fldl
mov
mov
cmp
scas
and
or
push
je
xchg
popa
pop
sbb
mov
je
arpl
pop
dec
sbb
ds
mov
jae
jle
mov
jmp
mov
pop
repz
sub
pusha
mov
cmp
add
inc
je
fnstsw
push
call
cmp
xacquire
adc
inc
add
sti
lods
push
jae
dec
imul
sbb
loopne
add
adc
and
pop
enter
xchg
mov
push
jae
stc
cmpl
adc
push
std
jno
mov
call
movsb
dec
lds
mov
adc
mov
je
into
int3
cld
lock
insl
mov
mov
push
int3
lcall
mov
cmp
lret
push
dec
push
mov
push
and
xchg
shr
push
adc
addb
loop
adc
int
jecxz
mov
popa
sub
scas
xor
orl
pop
xchg
negb
mov
or
ljmp
mov
push
inc
test
or
xor
xor
arpl
stos
adc
pop
pusha
ds
es
mov
dec
data16
or
mov
test
mov
dec
ss
pop
repnz
inc
cmpsl
cwtl
adc
pushf
sarl
pop
xchg
push
pushf
inc
inc
outsl
or
lds
and
daa
jg
int
in
in
inc
sbbb
mov
dec
aam
jg
cmp
push
pop
call
lods
mov
ret
push
cld
scas
outsb
lea
es
or
out
lret
mov
ret
or
pop
sbb
push
xchg
mov
sub
mov
sbb
cmc
cmp
test
jno
ss
shrb
mov
repnz
adc
clc
decl
dec
sti
mov
sbb
cmp
sahf
out
jne
dec
popa
push
inc
scas
rorl
push
enter
xor
cmpsb
ret
jae
rcr
sbb
in
addr16
jo
dec
and
dec
ds
ret
xchg
sbbl
sbb
push
jns
scas
lods
int
lahf
cmp
sbb
aas
sub
jnp
add
sub
add
push
mov
mov
xor
cmp
inc
shrl
jp
xchg
jne
lret
ja
cmp
mov
xchg
es
dec
pusha
fldcw
int3
nop
cmp
repz
dec
js
xor
mov
xchg
or
sbb
inc
cmc
fs
cwtl
dec
mov
pop
push
push
bound
ret
pop
rorb
cmp
mov
mov
mov
outsl
nop
icebp
stos
mov
dec
ja
pop
insb
hlt
dec
jecxz
cmp
in
popa
outsl
imul
addb
sub
mov
mov
mov
xor
push
adc
mov
add
mov
or
mov
sub
and
repnz
fmuls
fimuls
dec
ss
inc
test
xor
es
out
shlb
jnp
xchg
inc
jbe
std
int3
lds
and
cwtl
xchg
stos
in
xor
and
arpl
cs
aas
stos
scas
mov
sbb
movsl
or
push
and
sahf
test
add
insb
lahf
out
das
push
xlat
leave
pop
or
aad
fwait
out
mov
adc
xor
xchg
or
incl
pushf
imul
inc
adc
es
sub
in
leave
pushf
push
xor
mov
stc
popa
cmpsb
or
push
jle
jns
inc
or
mov
andl
popa
pop
or
jbe
test
mov
cli
adc
and
nop
add
mov
push
sbb
cli
aaa
fwait
sub
add
popf
dec
jno
push
mov
jbe
add
inc
jb
and
orl
pushf
shrl
int
fucomip
out
loop
or
repnz
push
and
push
and
scas
or
es
js
xchg
cmp
pop
cmc
jmp
loop
jge
fildl
mull
push
jle
adc
push
push
jmp
ljmp
repz
push
call
enter
sub
mov
imul
cmp
movsl
cltd
shl
or
shlb
dec
insb
mov
les
dec
cmc
push
movsl
cmpsl
cwtl
mov
dec
aad
xchg
shrb
push
inc
gs
mov
add
insb
jmp
pop
test
sti
out
pop
out
int
in
or
imul
adc
sub
loop
sub
inc
fsubl
sbb
orl
in
cmp
mov
and
inc
int
test
jl
mov
test
icebp
fdivrp
shlb
and
mov
stos
xor
mov
and
ja
jge
adc
jne
jp
es
mov
ucomiss
test
jmp
adc
pop
or
jl
cmp
out
repnz
pop
mov
addl
andl
outsl
add
lret
cmpsl
jge
cli
mov
lahf
mov
stos
shlb
sbb
push
jae
sbb
cmpsl
mov
push
xor
or
add
in
lods
add
in
hlt
add
jbe
jg
dec
xor
pop
cmp
imul
sub
ss
ja
dec
cmpsl
adcl
insl
jns
sub
push
jmp
iret
sbb
push
sarl
push
flds
sub
mov
roll
ja
jmp
sarl
mov
pop
jecxz
outsb
mov
xchg
mov
sti
adc
das
dec
hlt
out
jns
and
mov
cld
addr16
lds
js
out
jle
push
mov
or
sub
enter
push
mov
gs
and
jo
push
jbe
cmp
ss
mov
clc
in
cs
div
xor
test
fcoml
add
or
mov
cmp
sbb
aad
pop
mov
inc
mov
cmp
call
jmp
xor
push
jbe
mov
cmp
lock
lods
stos
mov
cmp
add
xchg
rcrb
jae
jb
sub
aam
clc
pop
push
ds
dec
sub
notb
xchg
pop
mov
pop
dec
insb
xchg
sub
pop
aam
add
ja
into
in
add
xor
push
les
pop
cmc
ficompl
cmp
add
add
aam
sbb
inc
loop
sbb
dec
das
sbb
lea
mov
aam
mov
cmpsb
add
xor
mov
in
dec
mov
xchg
cli
pop
fidivrs
imul
dec
jp
xchg
jle
dec
add
fmul
add
or
rcrl
mov
int3
sbb
subl
jbe
pop
sub
ret
sbb
pop
mov
mov
or
jno
xchg
stc
scas
inc
push
jo
and
enter
clc
fiaddl
add
pop
shr
pop
movsb
inc
test
arpl
inc
sub
or
enter
sahf
inc
outsb
cmc
jl
mov
push
shrb
inc
shlb
xchg
or
add
mov
fidivrl
adc
pop
dec
mov
stos
fdivrs
sbb
pusha
mov
push
xchg
es
mov
iret
pusha
repnz
add
inc
jle
push
pop
mov
pop
dec
movsb
shl
mov
push
enter
jg
add
out
push
mov
mov
mov
jge
dec
mov
fsts
or
mov
pop
inc
pop
idivl
out
jecxz
mov
cmp
iret
sbb
and
enter
dec
cld
xor
mov
add
cmp
mov
dec
or
and
add
adc
add
add
mov
dec
stos
fcmove
and
dec
clc
or
and
mov
arpl
xchg
jae,pt
mov
icebp
pop
or
int3
insl
xchg
popa
add
inc
popa
xor
nop
adc
mov
xchg
add
mov
clc
dec
push
dec
sahf
mov
pop
jmp
roll
fisttpll
sbb
jae
mov
jp
fwait
and
in
sbb
sub
jg
and
ss
orb
inc
cs
push
and
sahf
cmp
mov
mov
arpl
insl
mov
subb
inc
jne
out
stos
lods
ss
movsl
aad
adc
jmp
icebp
jp
out
cmp
jns
data16
cmc
add
inc
imul
adc
leavew
xor
inc
outsb
cld
mov
inc
xlat
xlat
add
push
shlb
mov
pop
mov
and
ret
rcll
push
or
push
addr16
add
push
daa
scas
mov
pop
dec
arpl
pop
popa
out
inc
or
sar
jbe
iret
and
or
jmp
ds
daa
dec
shr
mov
push
hlt
pop
jnp
sub
and
fsubp
stos
jp
iret
jne
add
lahf
movsl
mov
inc
ljmp
xchg
aad
int
inc
add
mov
inc
fwait
leave
sub
push
jle
pop
or
cmc
adc
sbb
inc
adc
pop
dec
and
iret
cmp
gs
lret
xor
pop
subb
inc
adc
cmp
cmp
ljmp
inc
bound
jge
inc
jecxz
push
sbb
mov
jne
jle
aam
jmp
mov
add
roll
jle
in
stos
ja
xchg
and
xchg
lods
adc
xchg
cmovo
push
dec
sbb
mov
cmp
fdivrl
adc
jmp
push
int
mov
dec
inc
sbb
mov
mov
int3
out
sti
fisttps
dec
or
loope
addl
sahf
pop
cwtl
or
lods
adc
sbb
push
negl
jge
movsb
fiaddl
mov
pop
fmull
jo
pop
mov
mov
test
mov
jb
xor
into
jmp
iret
fs
cmp
mov
enter
xor
fstpt
xchg
dec
cli
push
imul
mov
das
lds
add
clc
xchg
inc
lahf
ds
or
ss
xchg
rolb
inc
and
jns
es
daa
hlt
adcl
xchg
push
mov
or
loop
inc
fmuls
das
pop
das
imul
clc
sub
push
test
inc
lahf
aas
pop
sub
xor
or
aas
jl
or
dec
in
fwait
fs
std
sbb
dec
fldcw
or
push
pop
in
popf
mov
clc
mov
repnz
cmp
jne
es
mov
ret
and
mov
mov
std
or
call
inc
push
imul
iret
rorb
es
data16
ret
pushf
add
imul
adc
pop
lods
xlat
mov
mov
and
push
inc
fisttpl
xchg
loop
stc
fs
xchg
dec
pop
lock
cmp
sbb
mov
scas
iret
push
adc
and
aad
clc
add
push
adc
inc
xor
mov
out
sub
outsb
addl
pusha
or
mov
mov
jae
xchg
xchg
and
jnp
sbb
jecxz
sbb
mov
out
cs
shll
inc
adc
pop
loopne
sbb
sbb
pop
out
mov
stos
jp
popa
xchg
cmp
push
mov
jg
jns
lahf
xchg
sub
lret
pop
scas
or
jbe
add
int3
fisubl
mov
push
iret
iret
lock
fidivs
or
pop
lret
out
xchg
adc
add
or
and
and
popa
insb
lods
push
bound
repz
pop
sub
fisubrs
cmp
inc
aad
dec
mov
xlat
sub
lock
and
pop
lret
fstpl
ss
rorl
mov
out
fnstenv
aaa
push
or
or
mov
lcall
outsl
pop
and
ret
mov
xor
mov
and
mov
int3
stos
mov
jl
dec
pop
mov
or
lret
pop
lret
inc
mov
outsb
test
notl
mov
std
push
popa
xchg
cs
jb
in
or
xor
inc
cwtl
cli
outsl
sbb
mov
dec
cmpsb
lods
shl
sbb
sub
add
ficompl
mov
cmpsb
xor
pusha
aaa
int3
jae
xor
cltd
xchg
dec
sbb
pop
lds
jns
in
xchg
dec
stos
mull
cli
aad
jle
cmpsl
ljmp
adc
fisubrs
dec
xor
movsb
sbb
add
pusha
xchg
pop
cmpsl
push
adc
push
jae
xchg
mov
fnsave
pushfw
dec
cmp
test
rorl
ret
dec
call
loopne
lahf
add
out
sbb
gs
push
pop
add
call
cmp
test
adc
leave
add
xchg
cmp
sub
sub
rcrl
xor
and
pusha
ficomps
enter
out
mov
movd
inc
sub
sarl
sbb
xchg
cmpsl
and
shll
cmp
xchg
icebp
and
scas
jle
inc
insl
xchg
aad
mov
test
or
sub
mov
jno
shlb
mov
data16
mov
rcll
pop
fisttpl
adc
inc
fnstcw
jbe
ljmp
sbb
test
js
fisttpl
ret
inc
jle
or
loop
iret
sub
pop
xlat
repnz
lret
lea
mov
testl
pusha
bound
pusha
mov
add
out
movsl
loopne
cmp
add
cvttps2pi
and
jle
push
insl
pop
loope
insl
mov
xor
xchg
cwtl
push
xor
dec
mov
jne
jae
inc
nop
sbb
mov
add
loopne
sbb
negl
cmpsb
stos
clc
and
xor
fisubrl
mov
jle
or
gs
cmpsl
adc
lahf
aaa
mov
sbb
in
subb
lea
pusha
or
add
in
inc
and
shrl
sub
and
pop
jge
outsb
addr16
adc
loop
mov
mov
xchg
shl
cmpsb
nop
pop
out
or
outsl
cmp
test
lods
mov
xor
mov
dec
pop
sub
cmp
jmp
fwait
bound
sti
or
pop
fcomps
sub
mov
add
inc
jnp
ja
out
inc
mov
out
jle
cmp
lahf
add
jecxz
ss
out
ss
inc
dec
int
in
adcb
mov
inc
nop
movsb
iret
fwait
and
dec
fsubrp
and
outsb
mov
xchg
push
jns
and
lock
or
stos
xchg
sbb
cmpsb
mul
xchg
or
fwait
idivb
aas
mov
insl
dec
arpl
stos
outsl
add
sarb
jp
sbb
data16
inc
cld
xor
aaa
sbb
test
cmpsb
fdivrs
test
addr16
add
ror
bound
inc
or
dec
jne
out
gs
mov
adc
lods
cs
mov
dec
ljmp
sbbb
inc
fimuls
mov
add
pop
jb
lcall
lods
mov
sbb
movsb
outsb
and
inc
mov
lock
sahf
xchg
xchg
adc
mov
jb
sbb
or
ret
xchg
cltd
fildl
cmp
jbe,pt
mov
fistpl
pop
movsb
in
sahf
bound
and
sbb
or
adc
jge
xor
test
ss
jne
fstpt
mov
xor
mov
or
aam
cmpsb
cmp
cmp
inc
and
adc
cmp
adc
or
mulb
mov
test
xchg
jle
mov
mov
push
adc
dec
outsl
sub
cli
and
mov
sarb
sbb
repnz
test
jbe
outsb
sbb
dec
out
push
pop
push
cmc
xchg
lock
dec
mov
mov
rcll
mov
inc
jge
hlt
out
sbbl
xor
and
mov
in
xchg
mov
push
mov
xchg
lds
push
mov
xlat
xchg
jae
adc
cld
push
js
mov
repnz
jb
jg
push
pop
aam
dec
jmp
into
loope
jne
addl
mov
roll
sub
xchg
jbe
enter
scas
push
aad
jbe
shrb
sbb
mov
outsl
repnz
jl
in
jae
loope
repnz
mull
std
or
ljmp
fcos
lds
stos
ljmp
lods
add
scas
je
sbbl
cli
mov
jp
mov
lock
mov
pop
cli
bound
sub
mov
jb
dec
lods
push
sbb
adc
mov
out
lods
push
leave
stos
aam
call
adc
or
xor
lret
enter
shll
ss
xchg
mov
dec
aam
xchg
jg
ret
repz
push
add
xchg
mov
stc
shr
bound
add
cmpsb
out
arpl
fimull
push
test
xchg
lods
xchg
dec
and
mov
jecxz
loope
mov
jnp
dec
ret
roll
xchg
sbb
xor
jno
testl
inc
xchg
pop
mov
gs
inc
jmp
sti
push
out
scas
inc
sub
std
pusha
lods
mov
jl
mov
adc
les
jl
mov
inc
cmpb
jo
push
cwtl
jno
add
dec
adc
sbb
jbe
adc
aas
inc
mov
mov
sbb
orl
cmp
mov
or
sbbl
dec
scas
mov
jge
push
jo
andb
sub
mov
adc
mov
dec
popl
xchg
mov
jbe
sbbb
xor
outsb
lret
inc
repnz
sbb
mov
push
sub
add
imul
jnp
lods
rclb
std
mov
dec
mov
or
mov
adc
cmp
xchg
mov
xchg
aad
mov
add
aad
xchg
bound
cltd
xor
cld
es
mov
rcll
movsb
and
fisubs
sub
inc
fucomp
xor
dec
sahf
xor
mov
xor
dec
mov
gs
inc
lds
data16
mov
enter
or
xchg
outsl
fcomps
daa
fwait
sub
xor
add
xchg
adc
stc
push
fs
stos
dec
ss
jae
pop
shl
xchg
xor
dec
std
lods
loope
mov
or
dec
faddl
inc
or
mov
lcall
inc
outsl
cmp
das
fistps
add
addr16
into
mov
fistpll
pop
inc
jp
dec
aas
xchg
sbb
scas
xor
sti
js
and
filds
into
fdivrl
cltd
mov
in
icebp
xor
out
jle
add
cmp
outsl
xor
call
jno
arpl
mov
or
xor
fdivs
out
in
xlat
push
mov
xrelease
adc
jmp
fisubrs
mov
fldenv
and
mov
cmpsl
lods
sub
pusha
aas
xchg
cmpb
and
daa
in
and
mov
lods
gs
cmpsb
push
sub
ss
mov
mov
push
mov
inc
jle
or
add
stos
inc
ret
in
mov
sbb
test
fdivs
arpl
mov
xchg
rcl
ljmp
pop
sbb
js
pop
and
call
movl
adcl
mov
jge
jecxz
adcl
adc
mov
mov
xor
mov
gs
mov
jmp
xchg
decl
imul
arpl
into
jg
testl
stos
insl
loopne
mov
push
lods
into
jbe
test
cmc
push
loope
add
mov
push
arpl
jbe
jmp
mov
mov
sbb
push
add
andb
imul
inc
sbb
decb
mov
inc
mov
ficoms
xchg
movsl
or
mov
clc
inc
sub
dec
loope
mov
or
nop
cmp
dec
mov
lret
popf
ror
sub
sbb
jp
ss
ljmp
mov
cmp
xor
jecxz
stc
dec
aaa
sub
xchg
dec
jo
jb
jecxz
xor
xchg
mov
mov
shll
sbb
jl
test
mov
push
cmp
xor
int3
out
mov
and
test
mov
add
outsb
ja
dec
adc
out
test
mov
out
out
fstpt
and
das
fnstcw
addl
aam
and
jg
sub
cmpsl
sbb
pop
stos
daa
push
mov
out
dec
nop
or
aad
out
cmp
aaa
out
mov
pusha
and
sbb
cmp
ror
dec
jge
icebp
pop
decl
mov
push
mov
jae
sbb
inc
cld
int3
mov
ret
sahf
loope
popf
jmp
adc
mov
packsswb
into
sub
insl
xor
gs
test
cmp
sbb
cltd
je
inc
icebp
and
icebp
xor
pop
cmp
cmp
in
fisttps
and
scas
jo
aaa
mov
xchg
nop
into
mov
std
sbb
js
dec
lahf
faddp
or
xor
xchg
mull
adc
sub
mov
sub
mov
aad
jae
mov
add
repz
mov
mov
xchg
aam
mov
inc
ret
sub
cld
xlat
pop
jb
test
fwait
insb
call
out
fdivrs
pop
push
subl
xchg
mov
loop
hlt
cwtl
push
filds
out
pop
dec
mov
fsubs
testb
sti
fsub
and
sbbl
and
imul
push
xor
mov
push
and
gs
cmp
xor
faddl
test
lods
and
inc
push
pop
fcomip
cmc
mov
add
fbstp
ret
sub
mov
das
lods
add
mov
rorl
cltd
dec
je
imull
mov
jp
shlb
out
jge
insl
sbb
mov
divl
int3
jns
add
sub
in
xchg
enter
shlb
adc
inc
test
cmp
sbb
movsl
stc
sahf
adc
stos
test
xchg
add
movsl
out
xor
sahf
out
xchg
or
or
lahf
mov
push
mov
sub
pop
cmp
cmpsl
div
mov
aaa
pop
pop
or
dec
xor
push
orb
repnz
cmp
push
inc
mov
inc
inc
mov
inc
add
push
add
out
jecxz
cmp
stos
sarl
test
lahf
call
fidivs
outsl
adc
sub
xchg
push
mov
stc
popa
pop
xchg
loope
jns
inc
cltd
and
out
mov
scas
pop
xor
cmp
loop
inc
ror
inc
mov
ds
stc
cmpsl
lock
divl
jnp
pop
xchg
pop
push
out
jbe
jbe
test
insl
aas
mov
aas
xchg
add
push
push
pop
xchg
cmp
mov
cmp
push
sub
xchg
sbb
stc
jge
rcrl
lods
jbe
rorl
in
mov
and
movsl
nop
inc
xchg
push
or
aas
jno
push
lcall
outsl
inc
out
mov
clc
pusha
hlt
sub
add
ficomps
fcmovu
aad
fistpl
cltd
and
repnz
inc
add
push
enter
cmp
cmp
xchg
adc
fnsave
test
xchg
or
jmp
std
xchg
fs
cmp
imul
and
cmp
dec
xchg
mov
lock
or
lret
sbb
stc
repnz
pop
inc
inc
pop
out
movsb
fidivrs
add
adc
sub
cmp
gs
mov
mov
inc
cwtl
loope
jp
sahf
aas
jg
sbb
outsb
aad
inc
push
pop
inc
mov
sbb
xor
fbld
add
xchg
shrl
mov
sbb
test
andb
xor
ljmp
xor
adc
into
clc
push
sarb
xchg
and
fcmovne
pusha
cwtl
dec
jp
cs
sbbb
lods
mov
pop
dec
das
test
jns
xchg
jns
adc
rcr
pop
adc
pop
jp
loop
stos
pop
cmpsb
idivb
lret
mov
gs
outsl
mov
gs
cmp
jns
call
and
pop
mov
lahf
sub
lret
adc
mov
mov
and
mov
push
imul
mov
mov
lcall
push
mov
test
nop
sub
mov
adc
mov
mov
or
mov
outsb
cmp
cmpsb
hlt
sti
adc
ret
insl
leave
fisttpl
insb
sub
filds
add
out
cmpsb
mov
sti
cmc
test
gs
add
mov
dec
fsts
mov
dec
xchg
adc
or
sbb
xchg
or
adc
movsb
lahf
or
imul
or
jp
mov
fisubs
cmc
jns
xor
mov
jbe
cmp
lds
or
push
or
inc
sub
pop
dec
les
dec
mov
jg
dec
mov
push
xor
push
pop
lret
out
hlt
lret
movl
bound
cs
movl
cmp
lea
lret
add
inc
dec
push
pop
scas
jb
lods
out
mov
nop
stc
push
sbb
nop
inc
cmp
repz
adc
inc
dec
cld
leave
inc
testb
mov
adc
sbbb
dec
mov
push
lret
fisttpl
push
adc
mov
mov
add
lahf
lahf
mov
or
sub
arpl
inc
dec
pop
dec
aam
sbb
xchg
out
sbb
cmpsl
cld
lcall
dec
aas
jb
adc
ljmp
cmc
inc
mov
pop
add
mov
imul
sbb
push
and
cmp
scas
inc
jno
roll
les
xor
xchg
pop
and
popa
clc
xor
mov
sbb
movsl
jno
cmp
push
jnp
mov
leave
mov
scas
std
cld
jp
test
inc
inc
jmp
shl
addr16
ret
inc
pop
das
add
in
stos
mov
cmpsb
mov
jno
loop
leave
into
rcll
mov
fs
xor
pop
cmp
lcall
lret
adc
adc
or
and
xor
pop
sbbb
and
cs
fsubrp
ss
or
sbb
adc
push
jg
mov
cld
out
inc
jmp
std
push
les
mov
push
adc
dec
rorb
lahf
bswap
scas
adc
sub
sub
jp
stos
mov
mov
repz
cld
nop
cmp
icebp
sub
cmpsb
or
arpl
add
pop
lcall
xchg
pop
dec
aas
lods
or
jge
test
push
into
lahf
inc
dec
test
push
or
cmp
lahf
fwait
sbb
mov
and
out
daa
shl
movsb
int3
mov
jnp
cli
mov
mov
lock
sub
push
pop
jmp
adc
jnp
in
mov
fsubl
rolb
out
movsl
scas
mov
and
stos
loopne
mov
xlat
fidivs
adc
in
add
push
dec
fildl
adc
and
inc
add
mov
das
cli
and
sbb
add
adc
jns
mov
pop
cmpsl
inc
scas
aas
loope
add
leave
and
std
aam
repz
inc
mov
lret
pop
xor
iret
jmp
lret
pop
imul
cmp
repnz
gs
xchg
rol
je
xchg
or
inc
mov
cmc
inc
xchg
in
movsl
hlt
mov
stos
in
push
fnsave
into
inc
loopne
jae
inc
push
movsb
add
das
ficoms
add
inc
outsb
xchg
dec
xchg
cmpsb
or
arpl
divl
and
mov
addl
scas
roll
inc
call
repz
shlb
mov
scas
ss
notb
xor
ret
xor
mov
lea
pop
cs
inc
sbb
fs
lahf
pop
add
bound
sub
dec
rcl
sahf
jecxz
in
and
enter
ds
cmp
jne
je
pop
aad
dec
insb
pop
cltd
ja
mov
call
xchg
sub
filds
mov
out
mov
ljmp
sbb
movsb
call
fcoms
cmpsb
stos
or
sbb
movsb
mov
test
sbb
add
mov
sub
orb
scas
cld
adc
mov
aam
push
out
lock
sbb
jle
js
jns
shrl
pop
imul
stos
jne
mov
mov
sbb
arpl
jbe
adcl
mov
mov
lcall
mov
mov
adc
outsl
je
pop
mov
clc
movsl
stos
call
fsubrl
neg
push
aam
sub
les
mov
inc
xor
push
cmpsl
mov
mov
add
popa
insb
cmp
mov
xor
addl
xchg
cmp
mov
aaa
adc
jmp
fcoml
adc
push
jge
movsl
adc
push
mov
xchg
je
sbb
ja
xchg
mov
test
mov
out
cli
cltd
shrb
jg
ja
out
push
pop
ss
mov
jae
mov
andb
bnd
sarb
hlt
sbb
into
ret
xor
lcall
das
into
sub
addb
pop
jp
out
sahf
pusha
or
pop
sub
and
sub
sar
lea
enterw
add
xor
not
popa
pop
mov
nop
repnz
mov
mov
jmp
addr16
repz
mov
mov
push
shll
pop
mov
in
xor
inc
aas
ret
daa
inc
test
mov
ja
mov
cmpsb
push
mov
movsb
jo
int
xchg
and
jno
iret
scas
xor
sub
je
aas
jne
mov
jmp
dec
push
sbb
push
cmp
ss
mov
xor
and
dec
push
xor
clc
aas
push
cwtl
cmp
into
ljmp
fsubrl
add
aad
inc
inc
jno
add
pop
mov
push
les
xchg
lea
mov
push
xchg
sar
loope
movsl
push
ss
aad
mov
dec
insb
mov
add
insl
movsb
jl
mov
push
lods
mov
pop
add
loopne
or
mov
out
test
push
pop
aaa
pop
mov
std
dec
push
or
vpmadcsswd
xor
vmwrite
dec
cmp
adc
lea
rcll
test
mov
mov
inc
lahf
xor
outsl
dec
out
push
xchg
inc
sub
jb
imul
inc
hlt
push
and
cli
and
jecxz
cmp
cmpsb
xor
pop
lret
inc
cmc
shll
or
rcrl
pop
ss
jge
mov
jmp
es
sbb
or
push
cltd
test
lods
stc
stos
out
xchg
lods
jmp
inc
mov
jbe
fnstenv
xor
fadd
idivl
adc
mov
ljmp
adc
jno
gs
cmc
aas
bound
cmp
addb
repz
or
fdiv
xchg
cmp
rcrl
pop
inc
fsts
mov
mov
and
xor
into
inc
xor
popf
es
sub
and
jmp
bswap
mov
out
xlat
inc
sub
mov
fbstp
and
icebp
mov
aam
out
pop
mov
pop
dec
lods
sub
add
mov
cmpxchg
jl
adc
in
push
jl
mov
hlt
push
mov
sbb
std
setno
xchg
stos
and
fucomp
cmpl
bound
push
dec
ret
orb
repz
pop
sbb
cmpsb
addl
movsl
jbe
xchg
mov
int3
add
pushf
mov
imul
mov
inc
iret
imul
rcrb
cmpsb
outsl
mov
jb
mov
iret
and
and
test
push
jne
add
aad
dec
sbb
dec
jle
jp
xchg
popf
lock
push
imul
test
pop
daa
jnp
cltd
imul
rcrb
dec
sbb
cmp
das
outsl
loope
mov
jl
enter
push
mov
cwtl
pop
les
mov
mov
xor
test
mov
call
xchg
fnstcw
data16
mov
sub
in
repnz
jge
aam
das
and
lock
xor
pop
pop
loop
sbb
jo
dec
pop
addr16
dec
les
inc
stos
cmp
xor
rorb
push
xchg
mov
addr16
adc
mov
notl
or
cmp
lods
mov
leave
fwait
add
rcll
push
test
xchg
bound
jp
sbb
jne
mov
imul
mov
sub
xor
out
aas
lock
outsb
dec
adcl
dec
ficompl
cltd
and
pop
mov
or
add
push
jbe
dec
fnsave
sub
mov
mov
cmp
int
nop
xchg
fwait
das
adc
jge
mov
aas
push
inc
iret
add
sbb
aad
outsb
mov
mov
orl
push
int3
cmpb
push
add
sub
inc
es
jno
pop
cmp
and
cmp
call
jle
adc
or
push
mov
mov
and
addb
jbe
in
dec
arpl
imul
push
mov
and
gs
stos
xlat
push
bound
testl
and
jg
push
jb
cwtl
mov
ss
dec
jl
fildl
shll
sub
add
out
and
jae
mov
xor
or
jle
stos
arpl
test
cmp
mov
rorl
iret
cld
jns
pop
mov
pop
rcrl
addb
add
loope
pusha
jg
outsb
xchg
fldt
sub
cmp
stos
mov
cmp
lret
dec
out
rorl
jo
fwait
cltd
loope
push
jecxz
into
push
fldcw
push
insl
scas
popf
or
sbbl
and
les
xor
movsl
push
mov
shl
jle
ret
int3
jmp
imul
xor
xlat
cmpb
inc
inc
push
outsb
adc
aaa
andl
out
stos
inc
imul
pop
jp
xor
ss
push
or
int
cmp
xor
sub
sub
inc
mov
movsb
das
sub
jecxz
pop
lret
pop
push
xchg
inc
xchg
das
mov
pop
pusha
icebp
out
aas
int
inc
pop
je
out
sarl
test
jmp
into
mov
pop
push
sbb
add
rcrl
cwtl
jb
lock
xor
cmpb
adc
fildll
hlt
out
lods
push
xor
sub
push
insb
push
xchg
jo
rorl
xor
mov
test
push
lods
adcl
cmp
dec
jnp
repz
testl
cwtl
fiadds
sbb
negl
push
clc
jbe
loop
cs
fst
xchg
lds
pop
or
cmp
clc
in
xchg
das
dec
ljmp
sbb
neg
dec
inc
rcrl
jge
je
bnd
lret
lds
andb
jns
or
or
mov
ljmp
xlat
fcmovne
xchg
sti
es
sub
mov
lcall
movsb
or
insb
cwtl
mov
pop
mov
loopne
cs
cmp
enter
mov
dec
push
outsb
mov
andl
imul
popf
jle
mov
cmpsb
adc
test
mov
push
lcall
mov
mov
shl
fisttpll
or
cmc
cmp
lock
mov
int
lods
xchg
fisubs
sti
and
xor
aas
fnsetpm(287
mov
arpl
or
mov
je
sbb
iret
jae
ja
and
push
adc
pop
outsl
stos
pop
cmp
mov
addb
pushf
repnz
jne
je
repz
xchg
clc
test
mull
outsb
hlt
push
jmp
cmp
hlt
xchg
inc
imul
sbb
sarb
jae
mov
sub
pop
imul
lods
sub
jno
jb
into
iret
sub
cmp
addr16
lods
sub
inc
les
fcomi
inc
test
sbb
jns
cmc
mov
and
sbb
sub
add
hlt
loopne
jbe
jp
push
sti
out
das
pop
cmp
inc
sahf
loop
add
lods
insb
jmp
adc
popa
jbe
std
mov
lret
aaa
sbb
sub
mov
xor
std
shlb
xchg
clc
scas
out
aam
repz
jl
mov
push
pop
xchg
cmp
aaa
test
push
jl
jnp
pop
mulb
es
mov
orb
out
inc
jl
inc
insl
cmp
mov
ljmp
mov
es
aad
inc
lahf
xor
cltd
inc
test
push
fcomps
xchg
arpl
fcompl
shll
mov
insb
inc
or
mov
rcrb
mov
jo
adc
mov
in
sarl
ljmp
out
inc
pop
iret
js
fcomps
aas
mov
fists
jbe
inc
pop
cwtl
and
push
sbb
nop
cmp
and
mov
ljmp
xor
mov
and
inc
nop
add
jns
pop
into
rcll
insl
mov
in
in
insb
lods
sbb
push
sahf
mov
lret
cmc
out
mov
mov
inc
dec
cmc
icebp
iret
kaddb
pop
mov
push
sbb
repz
jle
cmp
movsb
cmp
or
or
mov
loopne
into
rcrl
ret
pop
pop
cld
insl
popa
imull
push
test
imul
xchg
and
mov
jmp
pop
sti
mov
imul
add
push
add
fadd
addr16
xchg
aam
das
lock
cld
loope
xor
push
dec
xchg
clc
pusha
mov
fcomps
mov
and
jae
pop
jnp
fldt
xor
ret
inc
int
dec
push
mov
cmp
popa
das
sbb
leave
adc
mov
jo
call
mov
or
xchg
xlat
mov
sarl
aad
cmp
pop
cs
xchg
cmp
xor
inc
add
xchg
fs
cmp
jecxz
into
popa
jo
sbbl
mov
cmp
jne
sub
aam
xchg
lcall
cmp
sbb
mov
dec
insb
test
jbe
pop
add
inc
orb
pop
je
mov
adc
jl
jo
dec
cmp
jp
or
add
mov
push
sarl
ror
dec
add
xchg
stos
mov
jb
cmp
xchg
popf
out
and
inc
jmp
cli
inc
or
fisttpl
cmp
pop
inc
inc
loope
xchg
test
lods
outsb
jl
sub
cmp
add
gs
or
xor
mov
test
call
sbb
push
push
into
mov
repz
aaa
ficompl
dec
iret
inc
stc
mov
sbb
jno
pop
fwait
mov
xor
rcrb
outsl
aaa
sbb
jb
add
pop
test
int3
ja
push
add
mov
pop
sub
cltd
fimuls
dec
in
adc
xchg
add
push
cltd
pop
xchg
mov
sub
addl
jg
mov
icebp
str
leave
out
shll
cwtl
mov
out
jecxz
out
mov
out
pusha
add
out
das
out
mov
pusha
sbb
pop
sub
push
adc
dec
pop
xchg
push
iret
mov
adc
lds
push
aaa
sbb
mov
loope
movsb
int3
aam
cmp
pushf
sahf
mov
add
adc
mov
leave
nop
push
sub
out
movsl
sarb
jl
sbb
inc
out
pop
push
pop
fst
insb
fmull
dec
fcompl
push
or
repz
lea
cmp
xlat
adcl
mov
es
icebp
lods
cs
cld
pop
push
mov
cmp
sub
pop
jbe
fwait
lcall
push
inc
ret
jle
xchg
jb
shlb
pop
sbb
loop
xor
dec
int
sub
mov
xchg
mov
mov
scas
add
push
lods
mov
inc
mov
inc
push
ficompl
mov
mov
push
mov
push
sahf
lds
subb
inc
and
into
xlat
or
mov
mov
sub
mov
dec
ret
jae
into
dec
xor
inc
cld
jp
aam
adcl
add
inc
sbb
mov
sub
or
mov
and
dec
mov
data16
stos
and
mov
test
ds
mov
lea
fcmovnu
mov
jns
inc
jno
ficomps
mov
or
insb
pop
in
xchg
aas
xchg
fildll
pop
jmp
gs
jmp
adc
pop
jo
push
push
sbb
arpl
inc
adc
addr16
repz
movsl
xchg
sub
push
push
and
or
mov
or
fwait
mov
mov
push
xchg
mov
pop
test
cmc
cmovb
or
shlb
test
int
loope
jnp
mov
mov
dec
cmp
rorb
xchg
push
cmp
add
push
mov
mov
jle
push
mov
pop
mov
sbb
cltd
sub
mov
or
sub
and
jnp
loope
mov
loope
mov
push
test
aad
push
add
sbb
add
add
adc
push
push
clc
jg
dec
cmp
aas
adc
faddl
bound
out
cmp
stos
cs
adc
mov
jp
mov
rcrl
mov
sub
sbb
jnp
rep
mov
sub
cmp
xorl
aam
clc
movsl
sbbl
pop
xchg
ficompl
addr16
mov
int3
sahf
or
cmp
sub
mov
inc
xlat
push
out
mov
mov
add
sub
ds
pop
jmp
cmp
popa
mov
arpl
and
mov
rcr
arpl
lret
lock
and
sahf
mov
mov
xchg
test
mov
cmp
popa
cmp
rclb
out
test
aam
push
mov
cmpsb
cmpsl
repnz
dec
adc
and
lret
mov
xor
aam
int
xchg
adc
rcrl
jno
cmp
jne
xor
ja
loopne
add
mov
sub
add
arpl
mov
push
push
adc
les
jae
jg
and
test
jne
shl
outsb
sub
jge
dec
xchg
pop
adc
leave
jmp
mov
jns
fs
in
sub
push
push
inc
xchg
in
cmp
outsb
adc
arpl
inc
sub
rcrb
fidivrs
add
pop
mov
insl
dec
mov
roll
jns
aam
lahf
in
lods
xchg
inc
mov
shlb
mov
lock
jbe
scas
sbb
mov
and
push
pop
adc
ficoml
mov
in
mov
sbb
cli
js
clc
xor
push
mov
xor
mov
xor
or
setb
adc
and
push
lahf
cmp
out
add
pop
rcll
les
ret
push
test
push
jl
idivl
icebp
and
js
pop
fidivrs
stos
cmp
inc
add
jmp
in
add
mov
inc
push
rorl
mov
imul
bound
aad
jmp
adc
insl
push
pop
hlt
sbb
mov
js
es
loop
inc
add
in
out
subb
lods
repnz
sbb
xor
or
sub
inc
xchg
dec
xchg
es
mov
ljmp
pushl
push
fldcw
mull
daa
xor
push
data16
mov
ljmp
cmp
pop
xor
mov
cld
out
jmp
jns
jnp
mov
mov
pop
fcmovnbe
push
sbb
dec
sahf
mov
jg
lahf
xchg
scas
adc
pop
mov
mov
xor
mov
cld
inc
aad
imul
dec
jmp
add
jb
xor
notb
pop
mov
push
in
cmpsl
xchg
adc
insl
cmc
fidivrl
push
jno
fucomi
inc
imul
mov
xor
out
lahf
lcall
inc
cwtl
push
add
sub
sbb
push
mov
xchg
mov
sub
or
leave
mov
enter
push
stc
cmpsb
inc
xchg
add
lock
fnstsw
in
daa
mov
scas
push
inc
lods
jg
out
in
xchg
sub
jne
aam
xchg
orl
mov
cmp
fsubs
imulb
shl
xchg
adc
int3
test
pop
test
mov
jno
jnp
scas
mov
push
lret
push
sahf
sub
jmp
pop
ds
dec
xchg
les
sub
or
push
cs
jbe
xchg
ss
addr16
gs
inc
mov
popa
xor
and
sahf
sbbl
push
inc
pop
push
mov
aad
push
fdivrl
fcmove
inc
aam
in
adc
sub
or
cmc
fmull
push
in
psrld
mov
out
jo
je
or
sbb
jmp
inc
dec
pop
ficoml
mov
popf
cmp
repz
sti
dec
mov
add
arpl
dec
mov
mov
pusha
icebp
jl
push
rorb
sbb
leave
fnstenv
je
push
jno
loopne
mov
inc
and
aam
and
nop
jns
dec
mov
test
popa
xor
outsb
mov
mov
rol
in
or
pop
rol
and
out
pop
or
cmp
dec
sub
jge
lea
jge
in
xchg
cli
popf
mov
cmp
je
xor
insb
roll
pop
mov
dec
int
daa
and
mov
les
js
jno
adc
es
adc
clc
dec
ss
lea
fsubp
pushf
ret
inc
push
sti
sub
stos
xchg
pop
sub
movsb
sub
push
mov
popf
cmp
ljmp
iret
inc
loope
data16
jnp
subl
sahf
shl
test
fsts
pushaw
xor
je
lcall
mov
les
cmp
dec
pop
repz
jns
in
loop
xchg
ror
jg
and
mov
aad
stc
scas
dec
repnz
rorl
adc
or
adc
jne
mov
dec
push
push
lret
nop
mov
and
pop
push
xchg
push
mov
in
lret
enter
dec
fs
ljmp
lods
test
sbb
jo
sub
dec
adc
push
inc
inc
cmp
sbb
mov
push
lret
loopne
xor
test
xlat
scas
pop
sub
inc
fsub
scas
mov
pushf
inc
or
std
mov
adc
stos
sar
pushl
xchg
push
ret
popa
or
mov
lahf
out
xchg
xchg
fwait
in
ja
and
loope
cmp
lahf
rolb
dec
movlps
mov
adc
xor
inc
xchg
push
mov
adc
in
mov
xor
ja
rorb
jmp
xor
push
insb
lods
push
lds
addr16
jbe
dec
scas
aaa
je
mov
xor
pusha
sbb
add
arpl
frstor
push
sahf
aad
lret
movsb
push
sub
mov
in
jge
jp
pop
jmp
fdivr
fidivrs
ss
int
push
pop
cmp
data16
push
adc
mov
push
mov
mov
mov
cmp
data16
add
mov
pop
or
jne
jno
xor
xchg
mov
push
jae
sub
lods
addb
pop
sbb
xlat
cmp
pop
sub
testl
in
loop
push
dec
repnz
jge
mov
iret
xchg
fdiv
cli
mov
dec
or
loope
lcall
leave
gs
add
daa
dec
mov
pop
lcall
push
sbbb
loop
rcll
pop
xchg
cli
and
mov
je
jnp
lcall
ror
cmpsb
aad
sub
push
aad
fcomps
stc
mov
cmp
lock
mov
mov
andl
call
and
inc
push
popf
out
push
ficoms
mov
testl
in
mov
pop
mov
movsl
sub
push
sub
dec
jnp
xor
pop
out
lds
cld
pusha
xor
int
cmp
sbb
xchg
inc
adc
ret
decl
lods
jns
cmp
mov
in
fldl
jo
push
jmp
add
inc
sub
cmpsl
sbb
pop
icebp
pop
dec
movsl
mov
and
jnp
inc
xchg
sarb
mov
jge
leave
out
push
mov
out
push
mov
in
xchg
ja
jecxz
repnz
mov
das
inc
fmul
inc
cmp
jnp
dec
stc
and
inc
inc
movsl
inc
movsb
pop
aaa
sub
pop
sub
inc
mov
addr16
xchg
fdiv
ret
divl
aam
or
cmp
inc
addr16
fiaddl
pop
jno
jl
xchg
and
jmp
or
lock
sbb
add
pop
push
xchg
out
outsl
add
enter
call
enter
cmp
cmp
jno
jmp
sbb
pop
iret
adc
testl
dec
lret
cmp
shr
add
lahf
jbe
push
xchg
cld
and
add
in
inc
mov
insl
subb
mov
shl
push
loopne
add
out
push
or
mov
push
nop
mov
inc
adc
test
pop
fs
fbld
xor
push
pop
mov
popa
or
inc
mov
adc
int3
xchg
mov
popa
sub
inc
or
lds
push
fwait
jno
cwtl
les
pop
out
dec
je
xchg
xchg
dec
ss
int3
stc
es
mov
jnp
xor
jge
out
mov
jnp
lods
into
pop
pop
jmp
push
xchg
lods
scas
fists
sub
adcl
out
test
inc
cli
cmp
fadd
jae
divb
scas
int
xchg
bound
aam
and
inc
outsb
sub
ds
xchg
fistpll
aad
mov
iret
sub
addr16
insl
jbe
jmp
jg,pt
pop
sub
mov
cmp
sbb
pop
popa
jmp
fisubrs
data16
mov
cmpsl
inc
jns
mov
push
add
jecxz
push
jno
sahf
push
mov
jnp
clc
dec
inc
popa
jmp
xchg
sbb
test
dec
pop
mov
adc
into
je
mov
cli
insb
pop
and
movsb
daa
push
or
mov
mov
bound
mov
dec
data16
mov
jmp
icebp
push
xchg
iret
scas
std
les
xchg
lcall
sub
push
movsb
xor
jo
in
in
stos
shrb
mov
sbb
push
outsl
scas
add
jg
movsl
xor
jo
jbe
dec
sub
imul
gs
push
sahf
cmp
cmp
mov
mov
in
lock
or
je
push
dec
lret
dec
xor
add
ja
sbb
or
out
sbb
mov
mov
or
or
movsl
outsb
mov
pop
push
and
jle
aam
mov
nop
add
adcl
sub
decb
jle
fdivs
cld
pop
mov
cwtl
hlt
cmpsb
ret
mov
pop
mov
mov
sbb
pop
xchg
mov
xchg
push
xor
popa
lret
ss
popl
dec
inc
in
mov
movsl
outsb
subl
cli
dec
lods
mov
lcall
outsl
adc
mov
sbb
test
adc
fcmovb
lea
hlt
jb
std
or
xchg
in
xor
or
sub
in
mov
int
dec
or
sbb
pusha
leave
subl
repnz
test
push
adc
cmp
roll
dec
fsubrs
cmc
loop
xchg
mov
add
add
sub
sbb
shl
movsl
xchg
jae
mov
in
out
shrd
mov
aas
movsl
stos
xchg
push
cmp
mov
add
jae
test
mov
sub
sbbb
cmp
push
or
cmp
push
xchg
or
imul
fwait
and
mov
and
mov
add
sub
add
repz
or
shr
fs
mov
xlat
scas
adc
cmovno
mov
in
push
adc
and
adcb
inc
addr16
cli
mov
ficoml
jecxz
mov
add
test
xchg
es
mov
jo
cmp
jae
jb
inc
cmp
fildll
jecxz
shlb
add
jg
sbb
sbbl
loopne
loope
push
cmp
shlb
fmull
rcrl
inc
push
popa
push
push
andb
mov
jb
dec
in
xor
push
push
add
add
xchg
cmp
ds
mov
out
inc
lods
movl
mov
loope
hlt
test
arpl
dec
outsl
push
or
sbb
or
stc
jae
jbe
jno
dec
dec
das
xor
mov
cld
mov
lock
enter
cld
aam
jmp
xor
test
sub
mov
int3
popa
mov
lret
mov
cmp
pushl
adc
addr16
adc
popf
ds
test
lods
pop
xor
cmp
jnp
xchg
mov
mov
pop
jge
and
xchg
ficomps
fistpl
les
xor
adc
adcl
in
add
cmp
jl
aad
imul
pop
and
in
sub
push
cmc
xchg
mov
push
cwtl
loope
mov
jnp
popa
inc
sbb
push
outsb
and
sbb
adc
out
cmovge
lahf
xchg
lds
xchg
fistl
daa
icebp
leave
adcb
adcl
outsl
dec
scas
repnz
arpl
testl
sbb
and
adc
mov
lahf
gs
jp
cli
sbb
lods
loope
aad
xchg
lods
pop
ljmp
lret
mov
push
scas
daa
dec
sbb
int
arpl
pop
and
xor
push
dec
cltd
xor
test
jmp
lds
push
andl
sbb
dec
cmp
mov
fsubrs
movsb
iret
lods
outsb
inc
jnp
or
cs
test
xchg
cs
fbstp
ds
jne
and
icebp
jne
add
pop
aam
pop
hlt
add
adc
xchg
hlt
sub
lock
js
in
and
pushf
int
or
xchg
addb
add
sub
inc
fnsave
in
and
dec
stc
sub
pop
mov
jp
inc
sbb
out
or
shrb
mov
dec
sub
push
fstp
addb
ss
inc
movsb
xor
push
aaa
push
shl
loopne
rclb
out
rolb
inc
incl
lock
outsb
loop
xor
mov
scas
cmc
pop
test
xorl
ja
jmp
adc
rcrb
and
jmp
cltd
sbbb
es
insb
roll
shrb
mov
mov
jb
cwtl
push
xor
or
dec
ror
repz
pusha
stc
stos
ds
dec
pushf
cmp
in
dec
xor
ret
cmpsl
lock
jg
pusha
sub
in
sub
dec
push
fwait
cmc
mov
lds
mov
cmp
lods
push
mov
in
stc
mov
jb
rcr
mov
js
pop
xor
sarb
push
testb
inc
cld
mov
es
cwtl
dec
fistps
repnz
xchg
cmp
dec
das
and
rcll
and
aad
jns
jecxz
and
push
arpl
scas
sbb
fisubrs
daa
jbe
stos
outsb
adc
pop
jecxz
outsb
sbb
pop
xchg
sbb
divb
or
xorb
pusha
sub
push
aad
scas
jb
mov
sub
and
adc
sbbl
outsl
das
cmpsl
dec
add
add
xchg
pop
repz
or
sub
mov
cmpsl
jmp
mov
cmp
imul
cltd
scas
mov
xor
aaa
ja
pop
jae
insb
faddl
mov
aad
xor
xchg
pop
and
lahf
mov
cmp
jl
hlt
adcb
je
push
cmp
roll
in
ss
in
inc
jno
adc
lret
dec
lret
lock
sub
push
dec
dec
pop
cwtl
sub
pusha
push
dec
jl
adc
stos
clc
dec
outsl
jg
cmp
mov
daa
mov
loopne
adc
and
sbb
mov
dec
xchg
sbb
popf
cmp
test
out
sbbl
pop
cmp
rcrl
dec
fdivr
ror
push
dec
stos
iret
test
inc
sub
pop
outsb
dec
dec
mov
cmp
xlat
lcall
pusha
paddusb
in
lahf
scas
lods
jne
testb
push
imul
sub
pop
sbb
push
and
hlt
cmp
dec
cmc
testl
xchg
mov
aaa
dec
xchg
add
dec
out
add
cmpsb
jne
jns
movsb
cmp
mov
jmp
mov
add
cmc
cwtl
inc
jno
das
fyl2xp1
test
push
xor
mov
inc
and
aas
pop
mov
jge
out
in
fstl
fs
jnp
pop
jns
pusha
cli
test
pop
add
mov
lods
aaa
push
or
jne
ja
cli
lock
xor
push
cmp
inc
jge
lahf
sub
mov
push
jg
jne
es
dec
filds
repnz
pop
mov
xor
jp
push
call
cli
das
and
mull
jne
sarl
or
jae
vmovss
je
rcll
cli
inc
cld
ss
aaa
mov
divb
and
das
pop
scas
and
stos
fcoms
repnz
mov
icebp
jae
cwtl
xlat
enter
addr16
outsl
sbb
lret
cwtl
ds
fstps
pop
ja
push
pop
inc
jo
mov
dec
mov
inc
mov
mov
lcall
loop
nopl
mov
out
inc
push
clc
cwtl
adc
stc
sbb
xor
sub
mov
sbb
inc
mov
test
jp
sbb
xorl
mov
mov
or
mov
lods
sub
pop
mov
mov
mov
aaa
cmpl
dec
or
cmp
sbb
mov
mov
xor
push
popa
popf
and
out
inc
mov
xor
or
addr16
jecxz
test
in
pop
ret
clc
jo
xlat
fwait
push
mov
jl
xor
jge
data16
ss
push
xor
faddl
push
xor
mov
dec
std
lret
inc
mov
sbb
sbb
ss
lcall
sbb
pop
xchg
icebp
nop
sub
mov
cli
jecxz
mov
je
mov
sahf
bnd
ja
cld
adc
dec
cli
inc
ljmp
jp
push
jbe
lcall
paddd
test
movsb
push
retw
xchg
orb
push
int3
test
out
jne
call
ss
push
int
pop
xchg
loop
cmp
fs
inc
pushf
jnp
lahf
pusha
ja
mov
xlat
push
sbb
mov
pop
loopne,pt
test
xchg
mov
sbb
push
add
outsl
int
xchg
fucomip
xchg
xor
push
insb
imul
iret
test
hlt
mov
ficompl
xchg
pop
add
mov
dec
les
jns
mulb
xchg
add
insl
adc
jecxz
jb
push
pop
aam
mov
int3
xor
sub
repnz
loop
mov
movsb
sbb
mov
popf
mov
xlat
das
adc
inc
pop
sub
sbb
xchg
addr16
test
test
bound
fsubrl
test
mov
jecxz
shll
xchg
cltd
fcompl
outsl
cmc
dec
lock
das
sahf
shlb
or
rorl
dec
cli
adc
cmp
nop
adc
sbb
xchg
and
and
out
lods
test
mov
std
adc
lods
fs
lds
call
jns
inc
mov
gs
mov
dec
addl
dec
jns
inc
shl
sti
stos
mul
hlt
or
movsb
mov
pop
stc
mov
fiaddl
adc
addb
jb
repnz
push
inc
mov
pop
subl
mov
sbb
ds
shrl
stc
or
sbb
or
jle
mov
inc
push
movsb
add
stos
std
push
push
inc
dec
adc
mov
mov
imul
dec
dec
ja
pop
mov
aam
stos
inc
inc
mov
push
sub
mov
sbb
lcall
mov
movsb
mov
mov
les
cmc
pop
adc
daa
insb
mov
ja
sbb
imul
cmpsb
and
push
add
aaa
add
cmp
xchg
imul
aaa
xchg
xor
imul
push
push
pcmpgtd
and
mov
jge
les
rol
fnstcw
rcl
mov
xchg
test
addr16
cmp
bound
add
mov
insl
xchg
adc
sbb
addl
nop
sbb
cmpsb
dec
mov
or
pop
xor
inc
cltd
mov
sbb
or
and
bound
pop
insb
push
ljmp
pushf
mov
fdivrl
add
push
ja
mul
dec
sub
xchg
mov
dec
mov
mov
gs
nop
mov
in
sbb
push
dec
sbb
cmc
sub
clc
sbb
and
and
ss
xchg
jmp
jmp
and
outsl
in
push
push
testl
in
out
sti
mov
invd
mov
dec
mov
repnz
jb
mov
gs
pop
mov
mov
dec
lcall
jnp
and
dec
dec
dec
dec
and
pushf
add
jnp
and
es
shrl
push
and
lods
xor
push
out
push
repz
je
mov
int3
dec
into
sbb
test
jg
clc
scas
mov
inc
jp
pop
sbb
lock
in
inc
iret
cmp
sbb
adc
and
pop
insl
mov
jmp
outsl
push
dec
dec
push
sbb
lods
push
sub
sbb
out
adc
out
push
push
cmpb
pop
mov
mov
pop
dec
push
enter
sub
inc
loopne
mov
pushf
push
es
push
dec
mov
jl
test
adc
lock
sbb
sahf
add
int3
lods
push
ljmp
jg
test
sbb
iret
dec
mov
aam
gs
inc
and
sbb
jge
lods
xor
jl
add
lods
push
push
icebp
mov
repz
lcall
lahf
pop
pop
popa
nop
fwait
out
mov
ljmp
das
ficoml
dec
jle
imul
sbbl
lods
fcoms
sub
and
pushf
fs
pop
lahf
adc
ja
je
dec
outsl
cltd
mov
dec
testl
aad
add
dec
xchg
adc
xlat
sbb
hlt
cmp
cs
cmp
ss
push
cmp
adc
mov
inc
xchg
stc
push
mov
mov
mov
jecxz
jl
inc
test
mov
mov
or
pop
dec
adc
popf
adc
outsl
or
lods
repnz
lods
pushf
push
inc
pop
testb
test
mov
mov
dec
push
icebp
gs
ljmp
mov
jge
mov
xchg
pop
xchg
jns
xchg
out
mov
pop
jnp
mov
adcl
bound
pop
mov
clc
inc
repnz
pop
mov
adc
jns
fs
aad
mov
xor
rcrb
push
push
rclb
lock
xchg
mull
xchg
adc
add
add
orl
xchg
mov
imul
imul
loopne
mov
sti
bound
cmc
cwtl
add
dec
popl
shlb
imul
stc
and
imul
in
mov
leave
or
mov
sahf
mov
adc
rorl
mov
mov
lcall
jae
stos
mov
dec
xchg
inc
fld
lods
dec
mov
mov
ret
xchg
call
mov
cmp
mov
pop
aaa
xchg
iret
adc
test
lahf
ret
xchg
out
stos
or
test
sbb
xor
sbb
call
mov
inc
popf
sub
movsb
mov
mov
push
xchg
lods
repz
outsb
lods
mov
mov
sub
gs
dec
mov
mov
sbb
add
mov
xchg
jg
test
arpl
dec
jae
in
jg
fisttpll
loope
cltd
or
data16
inc
mov
xchg
mov
daa
mov
push
jg
iret
aas
add
stos
mov
insb
jge
aaa
arpl
popa
jge
dec
xor
pusha
mov
lock
popf
stc
mov
adc
andb
add
lods
leave
insb
icebp
fwait
lret
and
cld
pop
cmp
lret
xchg
sbb
xor
outsb
insl
daa
push
mov
out
and
jno
pusha
sub
jno
lret
les
cmp
imul
sub
xchg
inc
xrelease
stc
test
sub
sub
out
dec
stc
inc
adc
mov
fcmovnb
push
rcrl
adc
adc
push
mov
jno
mov
xor
mov
lds
pushf
js
mov
inc
sti
lret
adc
sbb
cmpsl
dec
xchg
jae
sbb
add
and
in
shlb
lods
add
push
adc
push
fwait
sub
add
sub
lock
shlb
mov
mov
sbb
cmpsl
sbb
popf
insb
jle
cmp
or
out
jle
adc
rclb
cmp
sub
jp
dec
nop
cmpsl
xacquire
sahf
xor
int3
xor
sbb
rol
enter
add
dec
popf
notl
jmp
pop
pop
push
inc
sub
inc
pop
cmp
mov
add
adc
and
jl
repz
sub
lcall
test
and
push
push
pop
dec
int3
and
lds
mov
fucomp
daa
xor
sbb
add
dec
call
icebp
mov
negl
decb
insl
xor
negb
cmp
mov
mov
jle
pop
mov
or
inc
and
cmpsb
push
pop
inc
outsb
xorl
mov
dec
insb
into
adc
and
mov
add
inc
sti
clc
mov
sbb
js
xor
jo
scas
lret
and
lea
inc
jp
mov
das
dec
bound
scas
mov
pop
sbb
mov
inc
push
outsb
dec
repz
pop
cmp
inc
adc
adc
inc
lods
mov
xor
or
pop
repz
adc
xchg
frstor
scas
push
test
xlat
and
add
mov
lds
xor
ret
js
cmpsl
sbb
mov
pushf
inc
adc
imul
shll
fists
jno
lods
es
in
or
test
dec
insb
and
pop
test
sub
call
loopne
popf
inc
aas
movsl
movl
push
and
cld
or
hlt
or
and
rolb
fadds
xchg
push
ret
shlb
lods
push
in
push
sbb
mov
mov
sahf
fiadds
lahf
sub
cwtl
aad
cmc
cmp
mov
push
inc
sahf
fnstenv
in
lds
sub
insb
add
loopne
cmc
jp,pn
inc
mov
neg
insl
outsb
scas
arpl
ret
pop
mov
loope
mov
ja
sbb
pop
mov
inc
pop
call
mov
hlt
leave
xor
push
dec
or
xor
add
mov
outsl
in
push
shl
fnstenv
test
shll
sbb
xchg
imul
nop
sub
lahf
aam
jp
rclb
jns
insb
outsl
sub
push
mov
mov
jg
dec
mov
and
inc
pop
mov
inc
icebp
pop
inc
or
fwait
lahf
jns
mov
roll
fildll
mov
es
les
inc
jno
or
mov
pop
cld
push
aad
push
cltd
push
cld
and
cmc
nop
int
or
and
popf
cmp
jle
scas
push
xchg
scas
movsb
mov
xorb
jecxz
adc
mov
inc
lcall
jmp
ss
ret
xchg
pop
push
sarl
sbb
adcl
pop
adc
lahf
inc
mov
mov
outsb
xchg
and
jmp
adc
push
roll
out
xchg
or
xor
xor
lahf
test
adc
and
shl
rcr
add
add
xor
shlb
mov
aam
outsl
aaa
pop
cmp
loopne
hlt
push
testb
pop
sub
xlat
jl
mov
jb
and
and
pop
push
adc
adc
aaa
cmp
imul
add
jl
push
xchg
cs
cmc
out
aas
into
cmp
jbe
push
outsl
add
and
adc
cmp
jno
mov
push
pop
xor
aad
call
push
sbb
int3
inc
testb
lret
aam
scas
sbb
xchg
mov
pusha
into
or
int
sbb
arpl
lock
lret
push
dec
cwtl
xor
stos
repz
gs
add
psllq
stc
int
out
add
sbb
leave
out
push
push
imul
sbb
push
xchg
popa
sbb
jg
xchg
dec
adcb
shl
xchg
pop
mov
push
sti
mov
sbb
jmp
mov
cs
sub
nop
jecxz
out
int3
ljmp
ds
mov
enter
sahf
repnz
inc
movsb
cmpsb
clc
out
je
push
lcall
dec
push
into
mov
dec
shll
xchg
jge
adc
jo
dec
loopne
dec
dec
test
mov
mov
cs
pop
mov
sbb
pop
js
lods
sub
sub
lods
hlt
test
fs
aas
out
inc
adc
and
and
pop
mov
leave
adc
movsl
sbb
fadd
icebp
das
lods
sub
pop
add
push
xchg
ret
rolb
lds
xor
stc
loop
test
stos
outsb
mov
mov
lods
xor
sbb
cli
aam
add
xchg
imul
dec
cmp
vminps
jmp
jb
vcmpps
jns
call
insb
cmp
dec
xchg
lock
cmp
dec
xor
pop
mov
pop
subl
dec
stos
pop
sub
pusha
call
imul
test
int3
js
cli
pop
jp
pushl
push
out
xchg
push
enter
lods
lods
inc
insb
insb
out
and
data16
popf
lret
int
popa
insb
mov
cmp
ja
movsb
pop
das
push
rclb
pop
cmp
test
and
cmp
xchg
andl
cmpsb
lahf
adc
loop
cmc
call
sbb
insb
cmp
or
dec
push
insl
int
add
in
leave
fistps
push
pop
mov
stos
test
sbb
pusha
fldcw
movsb
and
push
xchg
xchg
shll
data16
popf
xchg
and
cli
mov
inc
cmp
dec
into
fistpl
mov
jbe
rclb
les
push
mov
cs
fldl
xchg
mov
xor
iret
jb
imul
cld
inc
fcoml
leave
outsl
lret
adc
mov
lods
jne
push
push
cmp
jl
sub
add
scas
mov
xchg
jle
shlb
aas
mov
lret
mov
lret
lahf
push
xor
out
xchg
xor
mull
and
test
shrb
pop
fsub
out
pop
mov
ret
inc
xchg
jmp
xchg
mov
pop
repnz
cmp
out
pop
jle
dec
mov
xchg
fnstenv
notb
hlt
pop
pop
mov
shlb
movsb
xor
mov
jne
or
fildll
lds
pop
xchg
mov
and
int
push
mov
push
push
scas
cmp
push
clc
in
imul
mov
push
cli
or
mov
popf
inc
sbb
cld
mov
dec
les
mov
mov
cltd
movsb
jmp
fistpl
ja
mov
out
or
pop
hlt
lahf
stos
push
lcall
or
testl
scas
rorb
xor
adc
iret
js
loope
lret
in
lods
xor
push
jle
jp
cmp
dec
pop
in
fscale
pushf
sahf
push
cmp
ret
pop
ffreep
or
stos
jno
dec
mov
mov
jle
fsubs
in
push
jo
dec
push
mov
adc
xchg
jno
shl
int
movsb
add
rclb
xchg
sub
insb
pusha
jle
ret
lea
mov
mov
mov
popa
sub
or
push
int3
push
fnstsw
cmpsl
jns
xchg
pop
test
icebp
paddusw
fwait
jnp
mov
mov
push
push
cltd
mov
daa
gs
out
repnz
add
push
insb
push
mov
gs
mov
dec
jb
mov
fbld
jb
cmp
lret
mov
add
outsl
mov
cmc
cli
jl
imul
sbb
adc
inc
mov
std
xlat
xor
pop
pop
fdivrl
mov
lahf
out
dec
stc
repz
imull
repz
or
stos
ja
jns
mov
aam
addr16
push
or
jl
jge
cmpsl
popf
aad
sahf
sti
push
icebp
roll
mov
xor
mov
sar
inc
sbb
mov
andl
sub
or
imul
inc
xchg
shll
scas
mov
dec
cmp
cmp
sti
pusha
sub
repnz
adc
pop
out
jecxz
loop
out
sub
adc
inc
jns
xchg
xchg
ror
sub
je
sbb
xlat
jns
mov
fnstenv
lcall
cmp
hlt
loope
fsubl
dec
in
lock
sbb
scas
xchg
lret
gs
sbb
mov
adc
loope
adc
stos
shl
pop
mov
jecxz
aam
adc
stos
mov
dec
lret
pop
pop
jmp
and
sbb
inc
js
pop
jnp
pop
inc
xlat
mov
pusha
or
cltd
stos
jg
repnz
ja
push
add
test
pop
jg
mov
mov
ret
cmp
test
dec
jg
dec
imul
mov
int
arpl
jle
sbb
mov
xchg
out
cli
adcl
sbb
push
jbe
sti
sbb
push
push
jl
popa
stos
std
jns
dec
sbb
mov
repnz
mov
jae
lds
adc
adc
push
insl
dec
stos
shrl
lret
or
or
mov
lret
pop
dec
stos
xchg
inc
jg
sbb
jns
popf
cmp
aas
lock
fstps
xchg
cltd
or
push
push
sahf
add
jmp
in
aad
add
shlb
dec
jne
xor
orb
stos
jp
popf
movsl
in
lea
in
xchg
mov
sbb
das
sahf
iret
mov
mov
xchg
lock
dec
cmp
xchg
loop
jecxz
lcall
rorb
test
cltd
mov
mov
inc
xor
inc
fucom
jbe
sbb
movsb
test
jnp
pop
xchg
pushf
inc
scas
push
jmp
insl
fwait
adc
rcr
jp
cmp
push
push
xchg
push
in
sub
jmp
lcall
and
xchg
cmp
sbb
mov
dec
pushf
xchg
mov
mov
pop
jp
mov
daa
lock
xchg
psubb
inc
mov
or
or
pop
dec
jo
fisttps
xor
dec
imul
cmp
xchg
cs
cmpsl
ret
xchg
add
shrl
test
mov
popf
arpl
orl
sbb
sbb
insb
jmp
pop
sub
push
ja
ffree
mov
aas
dec
xchg
pusha
jp
outsb
ret
dec
lcall
cli
movsb
es
mov
jle
jnp
movsb
pop
mov
lea
call
cli
mov
inc
adc
les
adc
mov
jmp
dec
xor
inc
dec
pop
or
adc
dec
fistpl
jmp
mov
testl
lret
push
imul
arpl
jno
mov
mul
pop
enter
movsl
and
push
adc
and
movsl
in
mov
jbe
lds
or
or
out
mov
adc
paddusb
jl
jmp
xchg
mov
stos
mov
or
adc
je
xlat
sub
dec
sbb
sub
call
push
inc
adc
sub
jns
je
shrb
pop
pop
cs
stc
bsr
aam
mov
shll
shlb
scas
mov
movaps
fsubl
xchg
ror
adc
lock
jb
cmpsb
in
push
cmp
mov
inc
lods
inc
mov
mov
jae
dec
lret
cmpsl
dec
inc
jl
fstpt
call
or
mov
jbe
es
pop
pusha
dec
mov
popf
mov
cmp
shrb
rcl
push
ret
inc
or
mov
mov
or
adc
add
mov
ljmp
pop
mov
xchg
xchg
outsl
push
mov
fdivrs
mov
pop
fstpl
ds
and
mov
andnps
xlat
and
dec
mov
cmp
mov
xor
xchg
add
test
mov
cld
jne
and
mov
movsl
cwtl
mov
out
add
xor
push
push
push
loopne
lods
adc
pushf
adc
pop
ds
or
push
lahf
jmp
sbb
mov
sbb
cld
and
mov
mull
outsl
adcl
scas
push
cmp
loopne
mov
lock
push
int
or
nop
xchg
out
pop
dec
and
sti
mov
xchg
pop
jp
sbb
loopne
pusha
jnp
cmp
ss
aad
mov
fisubs
dec
and
lds
adc
push
mov
ss
ret
xor
jle
jbe
xchg
mov
aad
inc
add
sti
nop
mov
nop
ss
orl
push
cmp
stos
scas
adc
jg
arpl
mov
and
or
js
ss
jo
and
rcrl
mov
out
pop
insl
shrb
fsts
in
push
stc
stos
inc
inc
out
js
sbb
inc
pop
dec
mov
jecxz
add
inc
push
dec
xchg
sbb
repnz
mov
fcompl
scas
dec
jge
imul
sbb
adc
push
pop
mov
addr16
jge
pop
xchg
lcall
dec
lahf
out
insb
pushf
movsl
popf
sbb
push
mov
fcmovu
pushf
out
gs
pusha
cmp
mov
or
sub
mov
inc
or
inc
mov
fidivrs
lahf
jne
dec
scas
out
and
lods
adc
pop
push
adc
dec
call
mov
inc
pop
sbb
sub
repz
cltd
rcrb
mov
in
and
jle
rcll
ficomps
movsl
mov
lods
inc
aad
push
lret
in
test
js
pop
lret
fimuls
sub
push
mov
fisubl
enter
mov
popf
cmpsb
loop
inc
jo
mov
in
bound
add
fucom
int
insb
push
inc
int
fwait
mov
mov
fidivrs
scas
push
rcrb
fdivs
inc
pop
xor
jle
mov
or
ss
ja
or
popf
test
or
or
imul
roll
adc
push
and
outsb
xchg
jge
loopne
jg
loop
lods
cltd
gs
jmp
sub
sub
and
jp
scas
cmp
jo
mov
cltd
or
aaa
jo
xchg
repz
cmp
xor
mov
mov
xor
sbb
pop
push
neg
jo
sbb
repnz
mov
into
addr16
repz
sub
push
mov
jmp
dec
aaa
stos
sbbl
jae
inc
outsl
adc
lcall
rolb
fs
scas
repnz
inc
nop
sub
test
aam
rorl
sbb
jnp
and
inc
mov
mov
test
lahf
inc
cld
fwait
add
and
out
add
into
daa
nop
jg
add
imul
dec
in
sbb
loope
not
lock
movsb
xor
dec
xorl
or
xchg
ret
das
mov
xchg
pop
sbb
push
jg
cld
jbe
xchg
add
stc
stc
jae
mov
scas
mov
sbb
rclb
cmp
mov
mov
imul
in
mov
push
xor
les
incl
cld
movsb
insb
faddl
dec
imul
jp
out
addps
icebp
dec
mov
aaa
inc
out
ja
insl
ds
insb
fistps
rcrl
int3
iret
dec
int3
add
movsl
std
sbb
movsb
push
test
push
mov
repnz
mov
or
outsl
push
inc
scas
ret
jns
sbb
and
inc
xchg
sub
mov
hlt
jnp
sbb
pop
adc
mov
push
imul
push
sbb
pusha
push
xchg
xor
or
xadd
pop
rcl
pop
ljmp
jo
jae
sub
xor
add
xchg
stos
cmp
and
jp
lret
inc
dec
and
test
imul
sub
pop
adc
sbb
cs
jge
in
int
insb
or
loopne
iret
mov
adc
and
jo
rclb
iret
mov
jne
or
sub
ffree
mov
lcallw
test
pop
inc
dec
mov
loope
mov
das
lahf
subl
pop
movsl
sahf
and
sbb
add
pop
mov
popa
enter
mov
orb
mov
rcrl
sarb
jg
adc
add
mov
adc
inc
or
loope
jbe
outsb
aas
stos
mov
mov
iret
mov
hlt
nop
addr16
lcall
dec
xchg
sub
int3
adc
push
cmp
outsb
sbb
incb
mov
mov
arpl
ret
adc
add
dec
sub
or
pusha
add
inc
dec
jo
pop
push
push
jge
rcrb
dec
stos
jae
mov
adc
xchg
jp
push
enter
lds
fsubrs
pusha
aam
cmp
push
loop
push
imul
and
xlat
push
inc
mov
outsl
cmp
aaa
int3
loop
icebp
loopne
jge
movsl
inc
pop
xlat
and
ret
out
or
repz
jbe
out
or
pop
xor
mov
mov
add
scas
ja
cmp
daa
jno
orb
cmp
stc
andb
les
xchg
andl
xchg
aad
pop
loop
cs
mov
dec
lods
pop
dec
mov
scas
insb
cmp
in
pop
sub
rclb
dec
popf
xor
pop
dec
cli
fldcw
mov
xchg
jle
rclb
push
dec
mov
hlt
mov
imull
repnz
sub
mov
or
jecxz
cmpsb
aam
into
cmpsl
push
push
xchg
je
gs
sub
lret
lods
ds
dec
ja
jg
test
cmp
mov
cmpsl
sahf
xchg
dec
inc
sub
mov
scas
enter
mov
jne
sub
pop
sbb
sub
rorb
add
jo
rorl
lret
mov
cmpsl
popa
lock
push
int3
jmp
call
and
jg
stos
xchg
mov
enter
xchg
adc
nop
adc
inc
and
outsl
xor
cmp
aad
mov
mov
les
cmp
dec
roll
test
fisubs
push
neg
mov
xor
lahf
fcoml
pop
dec
add
push
leave
pop
shll
hlt
inc
xor
repz
je
jae
dec
jmp
popl
data16
sbb
bnd
inc
addb
fs
adc
add
jmp
adc
cltd
clc
pop
xchg
add
mov
xor
das
pushl
ds
mov
push
lahf
mov
or
scas
sbb
jmp
mov
push
or
or
xor
jo
popa
mov
jle
or
mov
xchg
js
pop
sahf
mov
mov
in
xchg
mov
adcl
daa
out
mov
stc
push
loop
sub
push
addr16
adc
mov
mov
jnp
dec
add
sbb
cmp
stos
mov
mov
push
in
push
sbb
jbe
in
mov
mull
shll
and
sbb
mov
out
mov
sub
in
scas
int3
addb
mov
pop
ds
sbb
mov
aas
jmp
push
pusha
sub
imul
sub
cmp
sbbl
cmc
icebp
cmp
cmp
lea
cli
mov
jbe
bnd
sbb
shrl
inc
jbe
sbb
jl
jbe
in
es
push
scas
mov
adc
loopne
mov
dec
xor
sbb
aad
andl
loopne
scas
je
fwait
mov
rcrb
das
mov
ret
sub
lret
cli
jg
sbb
or
sbb
xchg
cmpsl
lea
scas
pop
jo
pop
jnp
mov
sahf
mov
fxch
mull
sbb
ror
inc
sub
cmpsb
stos
inc
pop
scas
mov
inc
shll
jge
dec
lret
jmp
jne
jle
movsl
sar
gs
pop
sub
addb
pop
sbb
mov
jmp
test
fdivl
cmp
mov
mov
pop
out
sub
mov
sub
fstl
and
cltd
ljmp
xchg
in
pushf
call
push
add
int3
and
nop
nop
xchg
ss
mov
or
ficoms
sti
inc
enter
xor
fistl
push
dec
mov
xor
out
pop
outsl
inc
pushf
cld
cmp
aad
gs
repz
and
mov
mov
mov
call
test
xor
xchg
mov
movsb
and
mov
fwait
add
test
mov
cmc
jno
add
loop
popf
lds
movsb
cmc
mov
aas
push
cmp
push
push
lock
dec
adc
sub
push
mov
mov
add
rolb
adc
mov
add
mulb
aaa
test
es
pop
ficoms
mov
ret
xor
nop
shr
lock
or
inc
sub
es
jecxz,pn
xchg
or
pop
shrb
pop
dec
xor
int
mov
mov
and
adc
dec
notl
mov
iret
mov
daa
adc
cli
out
or
cmpsl
add
sub
mov
mov
repz
rcrb
ret
scas
adc
aam
es
je
rcll
jmp
mov
addr16
insl
mov
icebp
nop
xor
in
adc
gs
xchg
xor
adc
es
dec
in
add
les
sarl
xor
xchg
sbb
ds
int3
adc
cmp
out
int
mov
mov
daa
jb
dec
sub
sub
ficoms
in
shl
push
int
mov
adc
dec
mov
or
repnz
dec
nop
cmp
jne
push
add
add
push
ja
inc
dec
es
jae
dec
mov
xor
rorb
push
cmp
xchg
cwtl
push
xchg
mov
mov
xlat
xchg
daa
dec
sti
inc
add
cmp
pop
sub
and
cltd
in
je
pop
push
inc
mov
jg
call
repz
inc
in
cmc
add
mov
jnp
xor
jge
in
aas
and
and
arpl
or
es
and
in
dec
stc
jge
jo
xchg
adc
xchg
mov
dec
mov
cmp
xchg
fidivrs
aam
sarb
clc
sbb
xchg
inc
imul
jne
dec
pushf
and
mov
data16
jge
mov
shr
pop
dec
push
inc
lea
in
fiaddl
inc
fbstp
movsb
roll
rolb
xor
mov
sbb
imul
jae
inc
adc
cmp
mov
and
xchg
mov
in
pop
ja
jae
pusha
in
cld
add
cwtl
scas
lcall
ljmp
popl
test
push
mov
dec
scas
stos
push
insl
out
jmp
pop
cs
jg
push
dec
nop
into
jl
push
push
in
cmpsb
fildl
xor
mov
cs
mov
xchg
iret
and
sub
imul
xlat
push
pop
nop
cmp
repz
lea
ss
add
sahf
pop
dec
jg
jnp
xchg
inc
into
add
xor
call
ret
repz
cwtl
add
call
cmpsb
call
and
pop
arpl
xor
jp
in
loope
mov
fsubs
pushf
cmp
jno
out
jbe
add
dec
adc
jne
pusha
outsb
pop
jno
outsb
mov
xchg
int
imul
inc
faddl
adc
pop
std
mov
mov
stc
in
fmull
aas
xchg
push
cwtl
push
pop
add
test
jb
dec
mov
push
rorl
mov
adc
iret
mov
cmp
jo
sub
mov
jae
xor
push
je
pushf
ret
push
ret
stos
push
push
sbb
sti
imul
jnp
xchg
jne
out
inc
hlt
aad
dec
les
and
lea
in
jns
iret
divl
cmp
mov
add
dec
xchg
iret
aas
pop
int3
insb
sahf
or
mov
cmp
pop
and
fsubp
sub
into
fnstcw
adc
loopne
ret
into
test
or
lea
mov
mov
jecxz
lcall
or
push
loope
inc
shll
cmp
jmp
inc
adc
nop
xor
mov
fsubrl
xor
in
xchg
xchg
cltd
loop
sub
adc
loopne
dec
aas
dec
aaa
mov
sbb
ror
loop
jne
jmp
ss
sbb
shr
sub
loopne
in
push
mov
sub
xor
xlat
out
filds
outsl
add
out
inc
xor
andb
pop
jecxz
cmp
xchg
out
pop
push
stc
mov
xchg
movsb
test
add
cld
pop
test
cmp
scas
pusha
dec
push
addr16
jns
sub
fiadds
adcl
pop
lret
mov
push
and
mov
enter
mov
icebp
dec
shl
lock
sub
in
mov
mov
mov
adc
loopne
incb
inc
ret
push
xlat
or
jg
cmp
repz
mov
and
or
incb
cmp
xor
adc
mov
ds
cmpl
scas
jo
cmp
out
mov
sbb
pop
icebp
xchg
stos
mov
aas
mov
adc
pop
sbb
dec
stos
adc
loop
scas
mov
movd
mov
xlat
or
or
and
push
and
mov
cld
lea
push
ss
xchg
iret
shr
aas
push
mov
pop
imull
and
or
enter
iret
inc
sbb
test
addr16
cmp
adc
mov
adc
into
stos
shll
ljmp
xchg
stc
fs
fdiv
dec
push
xchg
icebp
divb
shlb
jecxz
dec
xchg
data16
pop
push
in
mov
fcoml
je
scas
adc
cmp
je
fwait
stc
cmp
ds
stc
jg
rcr
les
out
pop
cmp
jl
out
repz
xchg
fcomi
test
sbb
lahf
adc
or
jmp
push
fistl
dec
xor
mov
rclb
outsb
clc
xor
sbb
imul
sbb
mov
pop
and
adc
pop
add
and
mov
mov
inc
test
ja
push
icebp
xor
dec
inc
dec
pop
sti
scas
cli
pushl
hlt
popf
push
fs
daa
pop
dec
mov
fwait
fs
cmc
xor
cltd
mov
xchg
cmc
push
push
mov
sub
inc
sub
cld
cmpsb
frstor
mov
pop
insb
mov
mov
out
pop
jg
cmp
jno
das
cmp
xlat
shlb
fistl
xchg
push
and
mov
xor
pop
rcrl
rclb
cmp
fs
in
sahf
je
out
mov
inc
sbb
jbe
cwtl
rclb
ret
mov
loopne
xor
std
andb
xchg
mov
subb
and
fstpl
mov
add
sub
dec
pop
jns
xchg
inc
mov
or
xor
adc
mov
cwtl
xor
mov
mov
repz
sub
xchg
sbb
mov
ss
stos
push
out
lret
dec
push
push
je
leave
out
jae
or
ljmp
int3
mov
faddp
repz
inc
sahf
mov
invd
mov
pop
push
lock
push
mov
int3
repnz
or
xchg
add
mov
lret
cmp
rcll
xchg
enter
stos
push
sbb
ret
fwait
xchg
test
push
in
and
cmp
cmp
pop
test
push
loope
fisubrl
je
shl
xor
and
inc
xor
dec
jg
or
mov
xchg
stos
insb
pop
sar
sbb
mov
sbb
xchg
mov
xchg
sub
cmpsl
mov
fstps
popa
outsl
out
cmp
cmp
incb
xchg
adc
inc
pop
jno
int
fcomp
xchg
std
add
cmp
popf
je
fmuls
xchg
test
mov
dec
test
cmp
jne
icebp
rorl
data16
pop
ror
pop
lods
faddl
adc
adc
adc
js
nop
int
cmp
fists
xlat
push
mov
xlat
cwtl
jmp
jmp
adc
mov
mov
inc
test
imul
mov
inc
add
shll
mov
andb
test
js
pop
int
mov
jbe
pop
sbb
add
shr
aas
mov
cmpsb
push
pop
cltd
push
inc
out
cltd
add
popl
cmp
dec
int
mov
mov
mov
sbb
shll
test
mov
repz
and
mov
jno
insb
xchg
ds
adc
arpl
or
mov
mov
sub
sub
outsb
mov
xchg
sub
in
sti
and
sbb
lock
mov
jo
pop
pop
push
mov
testb
repnz
jns
xor
cltd
mov
hlt
or
fadd
cmp
jo
cmp
lea
pop
incl
test
cmp
xchg
dec
ret
mov
push
fidivl
mov
notb
sub
call
mov
adc
enter
cmp
push
fwait
dec
mov
repz
mov
cmp
leave
and
or
inc
mov
popa
iret
jmp
andb
cmp
adc
inc
and
xor
data16
es
cli
xor
in
pop
vhaddpd
mov
out
stc
mov
loope
pop
movb
cwtl
popf
stc
xchg
test
push
lea
aas
out
aas
add
loopne
jl
repz
cmp
pop
mov
adc
inc
sbb
flds
and
aam
push
insl
adc
add
xchg
inc
xor
sti
xchg
lea
push
cld
add
push
pop
outsb
leave
incb
adc
dec
inc
clc
inc
sub
pop
mov
nop
fcmovu
insb
aam
pop
inc
lods
insl
movsb
arpl
addb
mov
nop
ret
pop
shrb
in
fnstenv
jg
mov
data16
mov
jbe
mov
jb
insl
jg
in
jns
scas
cmp
inc
jmp
xor
xor
mov
inc
lret
pushf
mov
outsb
ss
std
add
rcl
push
mov
in
mov
js
xchg
rorb
inc
pop
jnp
test
js
inc
xor
lret
sub
pop
mov
neg
mov
loop
mov
sahf
mov
mov
jecxz
mov
int3
imul
insl
iret
in
nop
data16
push
aam
ret
arpl
mov
jl
outsb
cmp
adcb
and
pop
add
es
rcrb
pop
cmpsl
sub
daa
mov
cwtl
dec
lret
xchg
lds
std
arpl
cmp
repz
loope
dec
cmp
out
sub
lock
pop
pop
dec
sub
pusha
in
sub
pop
sub
sub
cmp
loopne
cltd
adc
lock
out
sbb
xchg
pop
xchg
inc
movsl
xchg
adc
push
dec
xor
stos
rcll
test
outsl
leave
clc
fs
pop
xchg
fwait
push
in
inc
inc
rcll
outsb
jl
ret
cmc
nop
pushf
sub
scas
adcb
lret
nop
out
mov
int3
xor
push
pop
xchg
incl
icebp
push
pop
add
jne
jo
addr16
jge
imull
dec
stos
dec
es
js
xchg
arpl
push
sbbb
fmuls
iret
std
cmp
xchg
pop
outsb
dec
call
xchg
and
addr16
xor
add
in
jb
test
scas
shrl
sbb
sbb
icebp
imul
sbb
mov
iret
or
add
movsb
and
adc
cmp
mov
rcr
fimuls
sbb
mov
mov
insl
and
loope
stos
aas
sbb
push
insb
testb
mov
push
push
lret
in
adc
les
mov
mov
xchg
mov
dec
cmp
mov
bound
cmp
adc
aam
push
inc
xor
adc
cld
and
dec
pop
cwtl
mov
mov
mov
jg
movsl
mull
xor
push
mov
pusha
sub
push
shlb
ret
ror
dec
jecxz
nop
and
imul
xchg
xor
pop
inc
imul
xchg
mov
jmp
shlb
mov
xor
pop
pop
jge
mov
popa
or
clc
call
out
in
jl
inc
arpl
add
mov
test
add
xchg
push
sub
fcoms
mov
inc
jbe
loop
call
aad
js
cmp
js
push
adc
mov
or
mov
mov
jbe
popf
adc
sub
mov
call
and
cs
lcall
push
cmp
ss
hlt
pop
fcomps
call
out
sbb
xor
mov
xchg
xlat
in
inc
sbb
mov
mov
mov
in
sbb
sarb
cmp
and
int
stos
pop
mov
push
jo
jne
xchg
add
pop
jne
lahf
fnstcw
hlt
xor
xchg
scas
dec
icebp
pop
sti
push
leave
adc
loope
out
push
adcb
addr16
fdivs
pop
repz
push
mov
loop
das
roll
ss
inc
test
addr16
pop
or
ljmp
dec
and
jle
clc
or
inc
shlb
lahf
cmp
inc
inc
lcall
fisttpl
push
xlat
jle
dec
loope
das
pop
mov
push
sbb
out
jnp
adcb
add
ss
cmpsb
shrl
adc
imul
int3
daa
or
inc
jnp
inc
jne
mov
dec
mov
sbb
pop
xchg
push
frstor
dec
pop
out
out
cmp
in
dec
inc
sbb
pop
sbb
lods
ret
sbb
fsub
jne
cmc
mov
dec
clc
call
fdivs
mov
pop
fs
loop
out
les
jns
imul
adc
jbe
inc
mov
lahf
pop
leave
stc
gs
fadd
mov
jno
mov
aam
out
test
sub
sbbl
adc
loop
test
rcrl
or
jne
and
insl
jbe
or
jns
xor
or
sbbb
inc
adc
adc
jno
adc
inc
scas
ror
mov
jae
inc
push
fisubs
aad
or
push
jo
shll
pop
pop
and
out
inc
inc
popf
outsb
mov
iret
push
aam
xchg
fsts
xchg
sarb
js
mov
pop
pop
lret
or
mov
out
mov
or
scas
dec
push
insb
lcall
push
sti
repnz
rorb
sarb
lcall
movsb
and
jbe
adc
mov
add
adc
cmp
xor
inc
jmp
jp
dec
push
in
and
repnz
xchg
orl
lock
sbb
ret
loop
insl
mov
xchg
shll
adc
stc
ds
xor
jb
inc
mov
dec
xchg
jno
les
movsl
test
xor
jp
inc
add
rcl
stos
jg
cmp
add
icebp
push
cmp
jo
xchg
icebp
push
into
dec
daa
movsb
xlat
out
idivb
push
push
pop
cld
lahf
repnz
fidivrl
js
loope
jb
pop
mov
data16
push
mov
mov
testl
rcrb
xor
jno
imul
and
sub
mov
cs
mov
pop
jle
xchg
lods
mov
and
or
in
xchg
gs
add
popa
add
dec
inc
and
xor
into
icebp
push
lcall
js
or
fsubrl
imul
push
imul
add
in
mov
pop
sbb
push
sar
xchg
sbb
jnp
movsl
mov
adc
leave
gs
ss
call
pop
iret
ret
and
aad
and
push
adc
aad
insl
insl
aam
test
xchg
imul
in
psrlq
fistps
data16
mov
rorb
dec
jno
out
mov
scas
add
mov
insl
and
aam
rcrl
mov
mov
arpl
aad
data16
cmp
add
es
jae
out
je
sbb
gs
dec
adc
addb
jp
outsl
push
mov
addr16
gs
sub
inc
sub
fsubs
movsl
cmp
cmc
adc
xor
xchg
sarl
sbb
insl
pop
imul
xchg
mov
and
xchg
test
outsb
add
gs
neg
cmpsl
add
in
push
sub
decb
jbe
mov
dec
insb
mov
shrb
gs
cmpsl
jge
xor
pop
imul
cmp
mov
mov
cmp
cmp
xchg
mov
cmp
ror
aaa
loopne
adc
add
rcll
clc
fsubrl
pop
mov
out
inc
cltd
and
jae
adc
fnsave
mov
add
mov
test
sarl
add
sbb
push
lea
add
fnop
mov
movsl
dec
ret
out
cld
and
dec
dec
push
add
add
cmp
enter
repz
xor
cld
sti
xor
jns
je
aas
mov
adc
nop
mov
mov
cmc
lcall
pop
lcall
push
inc
jg
scas
movsl
push
test
cltd
lahf
push
push
mov
jmp
cli
out
repz
mov
cltd
out
popf
mov
clc
jbe
pop
rclb
fldcw
mov
xor
fdivrs
call
mov
sbb
push
lods
mov
push
mov
sbb
xchg
and
cmp
cltd
insb
sahf
jecxz
mov
loopne
out
push
mov
push
or
and
leave
xor
in
lret
add
xchg
inc
xchg
and
jb,pt
aad
dec
jno
add
sub
bound
pop
mov
adc
push
fsubrl
mov
sbb
and
mov
xor
and
psubq
ja
stc
sbb
es
sub
js
popa
imul
ret
xchg
cmp
mov
fildl
imul
sbb
push
push
jbe
sbb
push
out
in
stos
insl
xor
out
jmp
push
shll
and
nop
xor
bound
testb
pop
push
xlat
xchg
pop
incb
sub
sbb
and
fwait
sub
dec
ror
ret
push
push
insb
cwtl
inc
arpl
xchg
enter
lods
notb
push
jle
mov
ja
lret
outsl
jno
mov
arpl
pop
jb
fdivp
decb
xchg
xchg
sbb
mov
cli
fwait
sbb
add
ret
sbb
mov
pop
ljmp
ss
mov
in
and
jnp
iret
icebp
inc
xchg
sti
mov
clc
push
pusha
push
jl
sub
jnp
in
in
cld
mov
in
cmp
pusha
xor
rcrb
fistps
addr16
xchg
mov
das
dec
in
mov
mov
mov
push
sbb
std
inc
mov
jae
ret
jecxz
jne
rcrl
ret
roll
cwtl
dec
ss
mov
cmpb
pop
xchg
ja
push
stos
clc
jmp
dec
sbb
pop
push
cwtl
cld
inc
xor
movsl
push
in
and
xchg
popa
fstl
or
lods
sub
mov
cmpsb
jp
sub
imull
movsb
mov
shlb
scas
cmp
sub
scas
outsl
push
stos
xchg
cld
pop
lret
cli
lea
call
sbb
push
arpl
jo
pop
or
popf
fdiv
mov
and
loop
dec
pushf
jnp
lret
jle
and
pop
sub
test
push
jns
mov
mov
out
add
outsl
mov
sbb
xor
dec
cli
xchg
cli
dec
das
mov
es
aad
jmp
aam
loop
pusha
or
popa
sub
and
jmp
inc
add
xchg
cmpb
push
cmc
cmpsl
sbb
adc
mov
hlt
ds
scas
mov
ret
push
repnz
mov
and
rorb
sub
ret
insb
pop
sbb
cmp
out
roll
jge
test
mov
or
or
push
adc
pop
or
aaa
test
out
stc
adc
mov
lods
fldenv
shrl
inc
jae
dec
cmp
out
rclb
pop
addr16
pushf
xchg
das
cmpsb
mov
int3
jl
dec
pushf
gs
jmp
fnstcw
pop
xor
out
inc
repnz
repz
fcmovnb
mov
roll
imul
outsb
es
sbb
cltd
fidivs
cmp
in
in
and
loopne
repnz
scas
int3
imul
test
test
mov
pop
or
inc
mov
mov
mov
mov
mov
or
sbb
jns
vcmppd
je
inc
lret
jecxz
xchg
cmc
pusha
push
movsb
movsl
je
cmp
xor
hlt
mov
out
mov
test
adc
fbstp
sub
es
mov
pop
int
stos
iret
xor
pop
inc
xor
push
cmp
pop
mov
test
xchg
push
mov
adc
subl
mov
inc
pop
dec
fildl
lock
adc
aam
ret
cmpsb
inc
arpl
mov
fisttpll
mov
gs
jnp
or
mov
pushf
pop
and
sub
mov
inc
icebp
jae
dec
xor
xor
dec
popf
jg
mov
sbb
xchg
nop
pop
xchg
mov
cld
fdivp
add
js
ja
jge
cmpsb
mov
nop
repnz
aaa
push
loope
nop
js
addr16
lahf
inc
scas
fiadds
mov
sub
or
sub
lods
mov
out
push
mov
add
aam
pop
sub
push
mov
jmp
daa
cmp
fisttpl
cld
dec
stos
push
mov
and
push
outsl
imul
mov
out
mov
and
pop
add
ljmp
inc
aas
add
movsl
in
imul
js
pop
or
or
add
enter
xor
xor
out
mov
scas
sahf
jns
mov
push
cmc
repnz
inc
cld
sbbl
or
fstl
adc
lcall
pop
sbb
xchg
xor
or
jns
stos
call
inc
jb
push
addr16
jbe
mov
xchg
sub
mov
mov
cmpsb
push
out
jno
pop
fistpl
cmp
rcrb
incl
xchg
in
xorl
and
xor
jle
sbb
jno
insb
fcmovne
ss
sub
aaa
inc
fmull
add
push
mov
push
jo
push
cmpsb
jg
inc
or
insl
aas
add
clc
dec
mov
jns
jle
add
or
jp
xchg
cltd
lret
jb
xchg
or
rcrl
dec
mov
ja
xor
pop
inc
cmp
in
and
lcall
js
outsl
std
mov
fdivl
lock
pusha
mov
in
jle
outsb
pop
push
push
mov
sti
loop
xchg
je
test
or
repnz
add
add
xor
add
in
mov
inc
icebp
inc
cmc
mov
popf
incl
inc
jns
dec
sub
jl
cmp
sub
pop
mov
mov
lock
cmp
fidivrl
mov
loope
mov
cmp
dec
mov
cmc
js
push
outsb
ds
add
cmp
sbb
or
pop
xlat
mov
mov
sub
or
sub
or
pushf
cwtl
or
imul
cmp
mov
add
aas
ficoms
sbb
outsb
push
test
mov
roll
into
lret
stc
mov
mov
cmp
or
inc
ficoml
rcll
addr16
stos
jne,pn
loop
rcrl
dec
popa
icebp
cmp
jo
adc
test
cmc
dec
ss
es
ret
push
jne
mov
push
jg
call
push
loopne
pusha
jno
das
int3
jno
in
pop
cmp
outsb
and
pop
dec
cmpsb
movsl
cld
cmc
lods
sbb
and
jmp
cmp
mov
sub
cmp
gs
aad
pop
mov
fsts
jle
lret
xor
xchg
aas
shrb
mov
sti
xchg
cs
bound
das
sub
pop
fxch
insl
sub
mov
push
sbb
jl
fildl
loopne
test
dec
add
pop
or
enter
pop
pusha
dec
clc
ljmp
cmp
xchg
push
lcall
pop
and
jp
inc
dec
add
outsl
xchg
add
jmp
and
mov
fwait
inc
mov
push
repnz
ds
outsl
ret
xchg
mov
mov
push
loope
sub
sub
dec
pop
fcompl
fwait
insl
ret
sbb
in
add
push
jae
mov
cmp
rclb
js
dec
jp
cmp
popa
lds
inc
or
andb
scas
pop
sbb
sti
movsl
pop
pop
std
bnd
push
addr16
ficompl
sub
xor
std
sbb
mov
sub
pop
mov
mov
inc
lds
sti
cmp
test
out
sbb
lret
cli
pushf
sub
add
pop
scas
mov
test
lret
mov
jb
mov
bound
pusha
scas
das
lock
loopne
fldl
popf
fmul
and
lret
cwtl
xchg
push
sub
js
aaa
and
imul
int
int3
adc
shl
stos
dec
push
mov
push
loopne
xor
out
fisttpl
enter
push
insb
sbb
fnsave
adc
inc
icebp
jg
and
flds
repz
ficoml
in
hlt
sahf
xlat
lods
scas
movsb
cmp
cs
bound
xchg
xchg
in
jns
xchg
lods
pop
mov
jne
repnz
adc
sbb
fsub
jl
inc
lahf
repz
mov
mov
adc
test
jbe
std
xchg
cmp
xchg
adc
aam
in
je
push
mov
add
cs
rorb
cltd
cmp
icebp
xchg
sub
mov
or
lods
adc
mov
cld
mov
outsl
leave
xchg
lret
rolb
leave
sub
inc
xor
das
fwait
mov
mov
mov
cmp
in
xor
in
jb
mov
cmp
sbb
xchg
jge
dec
addr16
loop
jle
jns
addr16
add
jg
or
or
sahf
sbb
add
mov
pop
insl
cs
clc
jl
sahf
push
jecxz
test
fstpl
pushf
push
xor
je
adcl
add
mov
sbbl
adc
movsl
xor
adc
xor
ret
jg
adc
movsb
int
mov
jl
jmp
and
into
mov
fcmovu
nop
out
xor
in
or
mov
inc
push
or
or
sub
sbb
repz
cwtl
sub
insl
es
test
imulb
and
xchg
icebp
or
hlt
cli
roll
jl
xchg
cltd
pop
mov
arpl
push
lret
dec
orb
out
test
add
inc
cli
nop
mov
sbb
add
imul
clc
mov
roll
inc
add
faddl
mov
push
cmp
es
xchg
jmp
loope
adc
push
push
sbb
xchg
xchg
shlb
inc
push
add
hlt
jae
call
push
ja
movsl
xchg
test
jb
xchg
dec
or
pop
mov
cmc
sub
out
scas
ljmp
or
adc
aad
dec
clc
sbb
dec
loop
test
adc
daa
repnz
insl
rcrl
xor
movsb
pop
ficompl
jle
xchg
leave
and
cli
mov
push
cli
cmp
stos
fwait
mov
mov
addb
enter
bound
sti
cmp
dec
push
add
jl
sbb
fldenv
repz
fucom
push
test
xchg
jae
insl
mov
adc
imul
and
xchg
mov
pop
outsl
mov
hlt
loope
out
negb
jae
cmp
pop
dec
imul
mov
jno
aaa
xor
push
icebp
stos
sbb
sub
fmull
pusha
ret
mov
pop
andb
inc
scas
pop
insl
pop
sti
pop
dec
and
and
andl
adc
ffree
mov
sub
scas
jp
insb
dec
out
adcb
rcrl
cmp
add
sti
lods
sbb
es
mov
rcrb
in
lods
mov
sbb
mov
stc
cmp
add
shrb
dec
rcrl
cltd
ss
mov
pop
push
pop
popl
rorb
ds
jp
cltd
jnp
stos
mov
rcll
push
jno
aaa
xchg
add
add
xchg
mov
mov
pop
daa
aam
mov
cmp
aas
mov
lcall
lods
cmpsb
test
mov
cwtl
xor
jle
test
hlt
fnsave
cmp
cmc
fsubrs
push
add
scas
aas
rcrl
jae
xchg
jmp
jnp
test
pusha
and
adc
fildll
aad
jns
adc
movsl
xor
das
xchg
inc
add
add
xor
jbe
jmp
int3
inc
jne
adc
in
cmpsb
mov
inc
cs
push
mov
sbb
cmpsb
cmp
clc
cltd
jmp
add
jns
sub
rcl
lret
cld
hlt
mov
mov
ja
xchg
je
mov
add
xor
dec
sub
mov
push
sahf
addr16
daa
lret
add
inc
jnp
sahf
push
lods
mov
mov
outsl
popf
dec
scas
icebp
xchg
rcll
iret
pop
mov
cmp
es
sbb
jp
jno
cs
sub
add
xor
fisttps
pushf
cmp
push
ror
sbb
xor
add
push
mov
rcll
fisubl
sub
jb
dec
stos
sub
xchg
mov
mov
adc
pop
test
cmp
add
popf
mov
enter
je
adc
rorb
jl
cmpsb
pusha
in
mov
or
in
xchg
xchg
mov
xchg
xlat
jno
pop
insb
ds
scas
adc
mov
xchg
xor
inc
or
and
pmullw
add
aad
sti
std
aas
push
ret
incl
sbb
jecxz
mov
repz
ss
ret
mov
aaa
mov
ss
xchg
not
adc
pop
daa
jbe
jmp
jbe
mov
sti
sub
pop
and
stos
and
push
jecxz
cmpsl
xchg
pop
add
sub
and
push
sti
pop
mulb
pusha
sbb
imul
imul
mov
pop
es
mov
ja
jne
mov
adc
in
cmp
andb
inc
add
sub
push
mov
lret
or
push
cwtl
clc
shll
mov
push
and
pop
or
mov
test
xor
push
lret
imul
inc
inc
mov
mov
in
cmp
dec
inc
sub
imul
ret
aad
inc
inc
sysret
pop
xchg
mulb
inc
push
xchg
clc
nop
mov
pop
push
mov
add
cwtl
xor
movsl
inc
sbb
xor
pop
inc
mov
or
aaa
mov
or
or
cmp
jge
jo
rorl
cs
notb
cmp
xorl
lock
js
mov
dec
pop
inc
bound
xor
in
xorl
jmp
sbb
push
mov
inc
mov
loopne
cli
push
mov
ss
pop
sbb
xor
subl
dec
adc
repz
xor
mov
mov
sbb
mov
adc
add
push
enter
jmp
mov
jbe
lods
push
pop
dec
adc
sub
pop
sbb
add
xor
lea
js
add
lods
push
cmpsb
pop
clc
call
cmp
jbe
xchg
push
ret
fadds
test
pop
ds
pop
cli
adc
mov
popa
cmp
add
sub
mov
leave
aas
mov
push
xchg
insl
dec
xor
flds
add
rcrl
subl
xchg
cmpsl
dec
xor
out
into
mov
stos
xchg
jne
imull
or
sbb
adc
cwtl
shl
repnz
shll
push
fldcw
or
fcmovbe
call
idivl
loop
push
addr16
sbbb
out
das
xlat
xor
inc
das
xchg
or
fadds
dec
and
into
loope
ffree
cltd
filds
repnz
loope
enter
push
jno
cli
jge
jbe
pushf
push
pop
iret
subl
leave
adc
jns
and
dec
gs
jne
sub
aaa
inc
test
push
dec
dec
movsb
stos
dec
sbb
dec
or
test
cwtl
and
bound
scas
cwtl
dec
mov
mov
ret
sbb
gs
aam
and
dec
xor
cmp
rclb
mov
pushf
xor
outsl
cmp
or
aaa
or
xchg
shrb
xchg
mov
jnp
mov
sahf
into
insb
cmp
pop
inc
mov
inc
in
adc
dec
pop
sub
push
mov
stos
xchg
jle
addb
jb
mov
nop
dec
sub
cmp
and
popa
fisubrl
push
xor
add
mov
inc
popl
add
or
rorb
sar
jp
or
ljmp
ljmp
movsb
divb
inc
sbbb
add
mov
mov
es
jb
pop
hlt
outsb
dec
mov
xchg
xchg
lret
inc
lods
mov
cli
pop
das
shll
pop
roll
cli
fidivl
inc
std
mov
dec
iret
ja
mov
ljmp
xor
pushf
add
and
repz
popa
dec
xchg
xchg
adc
mov
adc
mov
add
cmp
xchg
iret
gs
mov
or
mov
lret
adc
js
mov
pop
xor
jns
add
or
and
fucomip
or
fwait
lcall
mov
je
insb
out
stos
sti
stc
push
cmp
outsl
cli
or
xchg
lcall
xor
and
je
enter
push
arpl
fsubl
jo
lds
int
fsubrp
shrl
orl
mov
fwait
mov
imul
pop
insl
in
sub
and
test
pop
lods
int
test
fwait
adc
jbe
aaa
insb
lahf
addb
mov
xor
jle
mov
rcl
test
mov
cld
imul
push
loope
or
lods
pop
lods
adc
std
lcall
hlt
mov
adc
or
mov
lock
xor
mov
les
rcr
es
push
mov
sub
jo
pop
jno
test
testb
fimull
jne
ljmp
scas
addr16
jmp
loopne
xor
mov
dec
movsl
add
jg
pop
cmc
cmc
ss
lahf
push
sti
fdivs
fbld
inc
mov
adc
lods
cld
push
mov
pop
test
in
popa
int
incl
mov
daa
jle
ss
xchg
or
imul
in
fisttpl
loopne
mov
out
scas
sbb
pop
faddp
sbb
shll
mov
in
jecxz
out
inc
mov
cmpsl
push
pop
out
into
popf
out
pop
cwtl
pop
push
shl
add
rorl
fs
mov
push
scas
xor
pop
mov
aaa
fimull
movsb
cli
daa
test
imul
scas
ljmp
push
push
jecxz
jle
cmp
push
xchg
xchg
mov
add
movsl
roll
jno
push
jle
loope
lock
inc
scas
mov
rorl
jno
scas
mov
push
mov
cmp
inc
inc
cmpsl
loop
xorl
push
loop
and
icebp
sub
and
cld
fnstcw
xchg
xor
fisubs
mov
imul
pop
cmp
adc
mov
lahf
push
xor
xchg
push
es
sti
mov
out
sub
pop
es
in
jp
test
insl
cmpsl
sbb
jle
inc
sbb
inc
cmpsb
xor
or
scas
addl
int
repnz
repz
out
push
daa
cmp
fs
mov
jb
test
xchg
sbb
dec
sahf
out
lds
push
scas
and
out
or
sbb
scas
ja
cld
sub
inc
movsb
mov
hlt
sti
cmpsl
fnstenv
cmc
cmp
shl
xchg
xchg
or
sub
aad
aaa
stos
push
lods
and
jnp
test
rcll
mov
lds
iret
fwait
pushf
dec
outsb
mov
sub
pop
in
adc
rcr
jecxz
je
sbb
out
mov
xchg
adc
ret
das
insl
js
push
xor
add
fidivl
xor
iret
fs
mov
xchg
shrb
xor
out
push
sbb
test
cmpsb
jne
sarb
cmp
fsubrl
jns
dec
add
inc
and
out
sbb
es
inc
pop
inc
pop
repnz
daa
in
cmp
push
jl
jl
or
adc
mov
inc
xor
mov
pop
or
pop
enter
sbb
pop
adc
test
aad
les
inc
inc
mov
loop
daa
adc
sub
add
push
inc
adc
js
add
jae
mov
hlt
loop
sbbl
dec
loopne
pop
adc
sub
dec
mov
dec
out
xchg
dec
sarl
push
add
and
ret
inc
je
pop
mov
nop
adc
cmpsb
test
insb
aam
cltd
movsl
mov
pusha
imul
movsb
incb
in
pop
push
inc
popl
mov
cld
not
jg
or
sbb
mov
rorb
mov
pop
push
out
add
sahf
popf
xor
stos
xchg
int
cmp
outsl
xchg
mov
jae
das
pusha
xorb
fimuls
scas
add
xchg
divl
mov
sub
mov
adc
mov
or
pop
cmpsl
mov
xchg
iret
push
jecxz
push
icebp
hlt
jo
inc
add
cs
cltd
ljmp
lods
out
ret
sbb
mov
dec
icebp
jle
xchg
dec
shlb
rorl
cmp
aad
loopne
out
sub
daa
sbb
clc
and
mov
cmp
xor
out
popa
fwait
mov
mov
gs
and
mov
add
inc
adc
jle
gs
sbb
mov
btc
orl
xchg
mov
xor
outsb
stos
cmp
pop
je
jl
or
leave
mov
xlat
cld
ss
dec
mov
inc
addr16
mov
stos
and
mov
push
clc
dec
dec
push
dec
ficomps
loopne
cmc
xchg
adc
mov
orl
incl
mov
xor
lahf
push
inc
jmp
inc
lea
xor
xchg
jmp
popa
pop
add
fmull
xchg
add
sub
int
mov
notl
enter
lods
push
sbb
sub
pop
cmp
test
out
fwait
popa
adc
fbld
adc
loop
cld
jp
loope
shlb
jle
add
mov
add
push
xsaveopt
mov
stos
jne
outsl
adc
incl
pop
dec
mov
adc
or
push
xor
out
ss
orl
add
adc
lret
dec
fiaddl
xor
mov
xor
sbb
sub
mov
inc
fwait
xchg
cmpsb
mov
in
clc
into
out
hlt
mov
adc
iret
int
scas
cmp
and
add
jle
pop
mov
shlb
pop
mov
enter
inc
pop
mov
mov
or
loopne
or
push
imul
xlat
adc
sbb
inc
and
mov
push
in
mov
jmp
mov
das
xlat
daa
lret
divl
cmpsl
dec
sbb
adc
adc
loopne
pop
leave
in
pop
jmp
mov
fmull
cltd
pop
dec
mov
sub
add
in
jns
cli
xchg
sub
add
sub
fwait
in
or
and
xchg
sbb
into
testl
jge
push
stos
mov
int3
push
xlat
int3
ret
push
pop
inc
jbe
push
stc
push
icebp
mov
lods
jecxz
sub
repnz
inc
dec
enter
mov
mov
mov
cmpl
inc
data16
testl
cld
jmp
ret
fcoms
sahf
fsts
loop,pn
adc
shll
dec
or
filds
scas
pop
in
xchg
and
push
xchg
cmp
sbb
and
xor
fsubl
dec
xlat
subl
mov
inc
iret
in
inc
mov
jg
nop
fmul
loop
rolb
cmp
or
lret
aaa
sbb
adc
daa
push
outsl
or
jmp
pop
and
mov
enter
test
xor
ficoml
and
jnp
and
add
popa
inc
dec
in
sub
sahf
outsl
push
xor
insl
jnp
adc
sub
pop
gs
mov
dec
push
in
xor
orb
mov
jmp
lahf
cmc
cld
fldenv
test
loop
mov
sbb
inc
cmpsl
cmpb
mov
jp
ja
mov
and
dec
dec
dec
cmp
or
mov
cltd
cltd
inc
or
mov
pop
insl
inc
xchg
mov
mov
mov
xchg
adc
mov
push
jns
or
loop
shlb
or
sahf
inc
pop
ret
push
int3
and
loope
adc
jae
out
push
mov
cmpsl
xor
cmp
out
push
sub
push
sti
bound
jo
fs
in
sti
sub
imul
outsb
ss
or
add
dec
inc
and
pop
lret
movsl
sbb
add
in
mov
aam
inc
push
pop
aaa
adc
sbb
ret
repnz
cmp
iret
sub
incb
push
push
dec
xchg
lock
mov
push
push
cmc
scas
xor
notb
mov
inc
xorb
in
jae
add
mov
xlat
arpl
pop
mov
mov
pop
insl
pop
in
dec
lret
jg
push
mov
pop
test
sub
ud1
fisttpll
je
daa
xor
dec
cltd
mov
out
jns
xchg
mov
rcrl
repz
ficoml
inc
out
pop
and
xor
fwait
mov
sti
fcmovb
sahf
mov
insb
fdiv
pop
rcrl
imulb
cmp
addr16
rep
mov
adc
sub
jns
xor
cmp
enter
mov
bound
sub
cmpsl
cmpsl
dec
cmp
pop
cmpsl
pop
cmp
pushf
mov
add
add
mov
fidivs
or
incb
in
sbb
push
xor
xor
xchg
shlb
ficomps
insb
adc
mov
rcrb
xor
sahf
and
sbb
xchg
shlb
add
mov
lcall
test
cmc
mov
xchg
push
pop
inc
sbb
adc
enter
pusha
sarl
push
fldenv
bound
push
adcl
das
xlat
mov
cld
cmp
adc
dec
push
mov
push
arpl
sahf
mov
xchg
movsl
int
and
and
add
pop
outsb
jmp
pushf
xchg
in
mov
fiadds
xchg
cmp
lahf
fimull
gs
nop
shrb
cwtl
cmp
dec
dec
jge
hlt
jns
nop
mov
xchg
push
sahf
or
mov
popf
push
jmp
or
and
lahf
pop
xor
loop
push
mov
pop
mov
mov
add
in
sub
sbb
adc
sub
jbe
jb
shrl
mov
and
dec
xchg
add
xorb
xchg
adc
jo
adcb
mov
daa
dec
icebp
rcl
and
inc
outsl
xchg
add
xchg
or
xor
jp
in
or
add
sbb
mov
bnd
mov
pop
test
add
outsl
dec
fidivrs
inc
mov
fbld
pop
cmpsb
shrb
mov
stc
pop
sahf
sti
out
lcall
popf
jle
add
xorl
xchg
cld
stos
push
nop
cmc
ficoml
push
xchg
add
push
jmp
lea
or
or
mov
cltd
test
and
mov
cmp
andl
gs
out
dec
shr
out
movsl
lds
sar
into
jecxz
adc
sbb
incb
fldt
mov
push
ret
dec
mov
pop
dec
pop
xchg
sbb
mov
jmp
addb
sbb
cmp
xorl
jns
stc
enter
push
jg
les
rcll
xchg
js
jbe
xchg
shll
data16
xor
mov
push
sahf
xchg
das
lods
call
push
xchg
push
jl
mov
ret
ss
leave
inc
jg
sbb
sbb
add
sbb
dec
js
mov
enter
std
xchg
popf
comiss
xor
out
or
test
adc
or
cmp
aaa
xor
outsb
sbb
ret
jae
jbe
shlb
pushf
mov
sahf
imul
out
mov
popa
pop
push
lcall
mov
mov
jae
arpl
rcrl
push
fimull
in
and
cmp
subb
sub
add
jno
imul
andl
xchg
mov
jle
cmp
mov
in
xchg
push
js
fldlg2
enter
pop
and
nop
sbb
xchg
ret
aaa
sub
jb
mov
sub
jl
cmp
test
mov
mov
ds
mov
fnstsw
pusha
mov
sbb
popa
fstpl
cmp
cli
enter
mov
testl
insb
and
clc
popa
fdivr
shrl
dec
in
mov
addr16
sbb
dec
jl
jbe
dec
nop
icebp
dec
or
mov
rcrb
jnp
aad
add
cmp
push
stos
int
nop
mov
push
push
shrl
xchg
fists
iret
mov
addr16
xorl
inc
push
aaa
inc
xchg
sbb
or
cltd
pushf
out
push
sti
cltd
dec
pop
or
jae
shl
mov
loop
sbb
daa
mov
push
mov
imul
sbb
popf
pop
and
sub
scas
lods
cmp
mov
mov
sbb
or
xor
jl
adcl
dec
push
mov
enter
lcall
enter
lcall
mov
xchg
test
popf
js
in
push
sub
cmp
insb
ret
pop
notb
or
mov
test
push
jne
out
mov
jmp
pop
sbb
lret
sub
movsl
sarb
push
jg
loopne
into
and
ret
xchg
and
pop
cmp
in
or
lcall
popa
mov
addr16
cwtl
adcb
dec
adc
xchg
pop
arpl
ret
add
test
sahf
test
shlb
mov
xchg
scas
sbb
loop
cmp
push
int3
ljmp
adc
cmpsl
mov
sub
out
mov
fldpi
mov
rcrb
dec
clc
dec
shll
sbb
fildl
ret
fsubs
out
push
xchg
sbb
pop
pop
dec
orb
sub
jle
lahf
cmp
pop
adc
insb
cwtl
aas
cmp
out
in
and
jae
push
testl
test
push
and
mov
addr16
out
orl
push
or
mov
jne
mov
insl
fsts
pushf
adc
xor
add
sub
lret
push
jmp
addr16
fdivr
outsb
ficoms
loope
addl
mov
jns
mov
dec
adc
xchg
sub
iret
or
test
out
vfmsub132pd
sub
addb
cmpl
insb
insl
push
mov
lea
pop
dec
popa
insb
outsb
inc
push
xor
xchg
and
inc
mov
push
push
gs
in
or
xor
notl
inc
lret
test
fdivs
es
dec
push
test
xchg
pop
add
mov
sub
sub
dec
and
mov
insl
outsb
mov
mov
cmp
add
jae
mov
dec
or
bnd
scas
xchg
aad
dec
lds
inc
xchg
insb
in
push
jae
nop
jg
and
lret
sub
add
mov
rorl
mov
je
inc
jae
rorb
imul
cltd
fs
inc
mov
mov
xor
inc
ss
sbb
mov
shl
push
shll
icebp
cld
lods
fwait
lcall
mov
mov
pop
inc
dec
mov
ss
cmp
jo,pn
es
paddusb
xchg
fwait
xor
outsl
mov
fisttpl
inc
aas
jnp
xchg
out
adc
sbb
add
movsb
sar
mov
pop
addr16
dec
mov
jp
dec
dec
arpl
mov
xor
jg
iret
pop
js
pop
cmp
push
and
int3
cmpsl
xchg
inc
lcall
sub
xorl
sub
push
cmp
jp
ja
dec
mov
cwtl
notb
outsb
cmpsb
rorl
insl
xor
cmp
sub
or
xchg
sub
push
jb
push
shll
push
clc
sbb
jecxz
cld
test
popf
mov
xor
in
cmp
and
out
outsb
pop
lcall
push
pop
pop
scas
inc
pop
xchg
ret
sbb
fnstcw
jmp
mov
inc
jb
mov
inc
aaa
xor
xchg
es
jb
fmulp
lods
jno
in
adcl
cltd
pop
push
mov
cmp
imul
cmpsl
mov
pop
or
lret
mov
lret
xor
movsl
ja
adc
jbe
xlat
jno
cli
das
mov
or
add
shlb
mov
xor
dec
ss
jae
inc
dec
mov
ds
mov
jno
lahf
mov
adc
inc
or
lret
inc
add
cmp
dec
adc
gs
jne
mov
lods
gs
adc
dec
popw
leave
lcall
fldcw
pop
ret
xchg
mov
xor
push
jmp
mov
dec
add
sub
mov
dec
int3
xor
leave
push
sub
inc
repnz
jg
fiadds
imul
fcompl
cli
lea
push
iret
mov
ret
sub
and
ljmp
mov
testl
enter
cmp
push
cmp
fwait
cwtl
and
push
daa
or
cli
inc
sbb
jae
leave
or
sbb
xchg
call
push
or
push
das
stos
jne
add
or
into
inc
out
mov
xlat
push
inc
jl
xor
jns
and
testl
shlb
push
push
enter
dec
fstps
xchg
pop
icebp
or
add
or
sbb
jecxz
dec
or
loope
clc
mov
push
push
xchg
mov
cmp
aad
stos
fcompl
scas
push
leave
jns
bound
jno
add
mov
pop
pop
dec
fdivrs
dec
pushf
enter
mov
xor
arpl
mov
call
cmp
adc
fnsave
insl
push
mov
aam
loop
mov
jnp
stos
xchg
inc
or
hlt
or
int3
pop
mov
jne
dec
bound
push
jmp
dec
xchg
xor
jne
orl
mov
mov
nop
imul
cmpsb
mov
sbb
lea
push
out
pop
int
hlt
mov
fldt
pop
pop
or
sub
cmp
shrb
push
mov
test
or
pop
mov
xorl
push
iret
dec
orl
jae
aad
mov
jno
test
clc
loop
lcall
adc
mov
shl
fs
jne
mov
push
into
fists
or
jns
mov
pop
xchg
popa
dec
shrb
sbb
aaa
inc
sub
mov
mov
pushf
adc
mov
add
dec
sbbl
xchg
and
push
pop
fwait
xor
pop
pop
pop
fnstcw
pushf
fisttps
out
xchg
push
movsl
mov
stos
sbb
pushf
cld
jmp
push
push
mov
jne
pop
stos
fidivrl
xor
mov
mov
call
jnp
out
xor
mov
addl
lcall
stos
cltd
je
xchg
jbe
hlt
cs
inc
dec
mov
push
sub
adc
mov
js
or
insb
mov
in
fstl
sub
stos
inc
jnp
roll
adcl
xchg
outsb
lret
addr16
fidivs
pop
hlt
sub
inc
mov
stc
shll
xorl
loopne
stos
dec
es
mov
repnz
or
cli
arpl
jle
push
cld
pmaxsw
or
jecxz
mov
cmpsl
jne
jbe
sbb
jp
aaa
jno
inc
inc
adc
test
add
out
in
mov
add
cmp
fdivl
push
pop
xchg
pop
pop
sbb
aam
jo
popa
shlb
test
push
out
imul
jge
jp
sub
andl
push
mov
and
out
and
aas
xor
xlat
enter
jp
mov
repnz
pop
xchg
jbe
nop
sub
das
stc
jecxz
outsb
inc
mov
into
lds
into
rorb
xchg
popa
mov
mov
hlt
mov
test
adc
and
and
sub
dec
insl
mov
adc
mov
cltd
cmc
divb
daa
mov
dec
cltd
sbb
rolb
xchg
stos
in
xor
lods
mov
into
mov
data16
cld
xchg
mov
mov
decb
xchg
inc
xor
sbb
xor
outsb
aas
or
addl
jg
xchg
jo
push
shll
outsl
pop
adc
sub
fmul
cmp
ljmp
imul
shr
movsb
lret
cmc
inc
fdivp
push
insl
sti
imul
jae
insb
daa
xchg
daa
rcrb
or
popf
insl
mov
mov
jle
push
mov
mov
and
dec
cmp
sbb
jno
xchg
dec
pop
inc
int
push
pop
inc
sub
push
mov
cmpb
imul
pop
add
xor
inc
mov
and
divps
mov
or
aas
and
repz
movsb
mov
movzbl
ja
insl
and
cmpsl
movsl
jne
into
add
mov
hlt
aaa
movsl
call
dec
jg
addl
test
stos
std
and
jnp
cltd
sti
pop
cmc
and
push
imul
out
jne
or
pop
jmp
test
and
icebp
sub
cmp
push
mov
or
call
and
pusha
inc
jo
mov
dec
xchg
aas
mov
sub
or
pop
les
cmp
sarl
subl
push
mov
inc
inc
add
lcall
sbb
in
sub
mov
dec
negb
sbb
inc
jmp
shlb
ret
dec
sbbl
cmp
sub
sub
dec
and
ret
add
data16
sub
mov
lods
jg
mov
cmp
cltd
jmp
fs
inc
jmp
fs
mov
lret
sbb
and
cmc
aam
mov
pop
inc
cwtl
xor
outsl
rol
cmp
in
add
in
and
call
stos
out
or
cld
jno
mov
out
mov
jge
add
ljmp
pusha
sub
jge
ja
dec
push
mov
and
movsb
call
inc
jns
test
inc
push
mov
sub
ds
jl
push
xor
aam
xchg
xor
xlat
sub
jae
inc
mov
add
popa
mov
les
call
cmp
movl
fisubrs
inc
jbe
ss
push
xor
or
mov
pop
pop
xchg
sbb
jecxz
enter
cld
std
adc
aaa
stos
sahf
cltd
ret
fidivs
dec
inc
nop
cmc
adc
fwait
mov
fwait
mov
sub
add
and
pop
nop
xchg
fnsave
and
inc
cmpsl
addl
push
jno
and
and
clc
adc
push
push
repnz
outsb
sbb
xchg
jne
sbbl
sbb
xchg
pushf
or
xchg
lcall
shlb
fstpt
mov
test
mov
in
ds
xor
es
xor
inc
mov
bound
or
pushf
stc
jns
xlat
mov
bound
stc
xor
mov
lahf
dec
mov
mov
lock
mov
and
lock
jb
insb
xchg
xchg
hlt
fs
dec
mov
int3
xor
cltd
dec
add
push
push
adc
ss
sbb
sahf
add
mov
ss
sub
test
ljmp
popa
push
or
xchg
mov
cld
adc
sbb
arpl
pop
outsl
mov
push
mov
pusha
ljmp
inc
xor
lcall
insb
jmp
xor
jnp
mov
data16
das
divb
sub
es
mov
jmp
jg
xchg
pop
cmpsl
ljmp
dec
popf
and
out
push
fs
in
in
cmp
movsl
fisttps
inc
out
jmp
out
iret
dec
dec
nop
clts
mov
add
into
pushf
adc
sub
add
xchg
sbb
fistpll
stos
pop
aaa
or
shl
fcomps
mov
call
je
lds
jmp
aaa
add
xlat
outsb
inc
rcrb
inc
fiadds
mov
sbb
adc
lea
mov
dec
pop
ss
int
popf
lret
push
int
inc
cmp
leave
xor
push
cmpl
xor
xor
sbb
mov
fcom
adc
jb
mov
sbb
push
adc
mov
or
xor
in
sarb
dec
stos
ss
mov
leave
outsb
cvtdq2ps
fdivs
sbb
out
aam
xchg
iret
or
push
test
dec
test
imul
mov
js
ss
mov
adc
cwtl
adc
mov
stos
xor
fcmovnb
xchg
rol
out
cmc
es
out
sbb
jle
inc
insl
iret
add
push
jbe
sbb
sbb
jecxz
jl
negb
mov
test
icebp
mov
mov
and
aas
mov
lods
pop
push
or
enter
jecxz
or
popf
mov
fwait
shll
scas
pusha
xor
in
jb
imul
popa
jne
xor
lods
or
pop
or
fcmove
int
scas
pop
xchg
add
iret
dec
jno
sub
insl
inc
mov
in
push
ficompl
mov
fisubl
test
les
cmpsl
xchg
sti
push
in
jl
fadds
mov
cmp
mov
xor
bound
sbb
mov
mov
test
adc
mov
jb
add
les
inc
int
sete
test
je
dec
js
rolb
lcall
sub
or
dec
sti
mov
outsl
loope
xchg
adc
mov
dec
jns
sbb
mov
movsl
mov
mov
push
icebp
adc
pop
mov
fmuls
icebp
lock
into
fcmovne
cmp
jecxz
cltd
call
xbegin
dec
xor
xor
scas
sub
dec
and
mov
rcrl
movsl
cmp
adc
jle
fidivl
out
mov
sub
mov
ret
mov
fidivl
adc
pop
scas
mov
data16
and
repz
jecxz
mov
mov
adc
inc
jecxz
mov
fists
orb
or
add
fcoms
mov
push
aaa
cmp
xchg
movsb
shlb
xor
imul
js
icebp
movsl
je
mov
aaa
repnz
cmpsb
mov
inc
xchg
clc
je
sub
or
xchg
inc
scas
sub
pop
les
cmp
cmpsl
cwtl
lcall
xor
shlb
jbe
std
add
movsb
bound
jmp
lret
ret
dec
imulb
pop
mov
cmp
mov
leave
fnstenv
lea
push
cmpsl
lods
mov
shll
inc
cli
pop
xor
aaa
lods
jl
nop
inc
insl
mov
std
dec
or
scas
test
xor
mov
jge
jge
mov
cmpsb
jnp,pt
ja
mov
jnp
inc
out
lahf
mov
dec
shrb
dec
andl
jecxz
lret
xor
xor
cmp
push
inc
fnstenv
mov
adc
lods
rcl
inc
push
push
xchg
int
pusha
or
jg
mov
mov
xchg
leave
fs
out
call
pop
mov
jl
call
xchg
out
inc
lcall
mov
insb
mov
lods
les
inc
stos
and
pushf
xchg
xchg
xchg
enter
push
pop
and
insb
pop
in
pop
cld
cmpsb
int3
rolb
insl
cmpb
iret
aaa
sbb
push
insb
popa
add
cmc
push
dec
and
rcl
cmp
xchg
out
sub
cmp
daa
fimull
cltd
pusha
pop
rcll
cmp
arpl
rcll
cld
out
cmp
aam
pop
sub
call
xchg
popf
lods
inc
sub
sti
inc
lock
xlat
or
lock
and
ror
repz
fadd
mov
rol
nop
and
sub
cmp
out
dec
lret
push
sbb
fildll
imul
fcoml
lret
dec
cld
nop
cmpsl
inc
adc
leave
pop
insl
repz
rcll
or
movsl
adc
sbb
add
jnp
dec
fs
dec
cmp
cmp
outsl
je
aad
sub
sahf
dec
jno
ljmp
mov
mov
dec
cld
lret
out
add
pop
imul
mov
adcl
ds
mov
enter
aas
inc
imul
jns
sub
jbe
pop
push
arpl
jp
sbb
test
jp
or
sbb
xchg
xor
pop
lods
xchg
mov
jecxz
out
xor
xchg
pop
pushf
mov
icebp
sub
sub
pushf
mov
dec
xchg
inc
and
mov
sbb
adc
push
leave
cld
inc
enter
repnz
adc
add
lret
pushf
adcb
fs
sbb
lret
inc
jle
pop
push
sbb
sbb
push
mov
in
loop
push
stos
dec
dec
bound
add
push
jbe
out
jge
mov
dec
push
xchg
sbb
mov
lret
push
je
ret
fistpll
aam
cmp
jg
inc
jns
cmp
or
inc
decl
push
ret
iret
and
jge
ljmp
add
push
int3
jge
mov
mov
cld
adc
dec
cmc
imul
mov
in
jbe
and
push
repz
aaa
mov
bnd
sbb
push
inc
cmp
fs
push
shl
es
cmp
lret
dec
lea
xchg
cwtl
fstl
jp
aas
adcb
fldcw
pop
fs
mov
sbb
fidivrl
in
std
inc
dec
inc
lods
mov
mov
pop
mov
cmp
adc
frstor
adc
insb
bound
jne
rclb
fsubl
popf
pusha
cld
mov
xor
xchg
out
lods
dec
mov
sbb
adc
imul
adc
out
cltd
push
mov
or
and
popf
lea
sub
ret
and
push
adc
and
rcll
push
jo
jae
and
xchg
sbb
jp
sbbl
rcl
pop
adc
sub
adc
pop
cld
outsl
fstpt
js
test
lea
push
xchg
mov
cmp
or
pop
mov
lret
xchg
push
hlt
mov
mov
dec
or
sbb
mov
cmc
test
pop
cltd
jle
pop
mov
push
sub
in
inc
hlt
jns
test
xor
cmc
push
dec
mov
aad
push
lret
je
xchg
out
adc
mov
sar
out
fsubl
stos
sahf
pop
and
mov
xor
lods
jl,pt
lret
jo
fcmove
popf
std
fildl
sub
adc
int3
sahf
cld
dec
xchg
push
sbb
movsl
and
jle
test
iret
inc
test
jno
push
scas
jle
lret
push
outsl
inc
push
imul
mov
and
scas
xor
aas
icebp
sti
outsl
lock
shll
sbb
adc
xchg
aad
cmp
cltd
or
aad
inc
fldt
xor
xchg
daa
lods
stos
mov
sub
fidivrs
adc
push
and
xor
repz
jne
les
test
push
mov
pop
push
add
cmovp
push
dec
ljmp
mov
aam
pop
xor
out
jo
cmp
ds
gs
idivl
mov
adc
cli
fwait
popa
push
adcl
popa
rclb
rcll
stc
pop
notb
xor
xor
mov
jns
and
xor
mov
mov
cmp
pop
jl
rolb
mov
popa
cmp
fucom
clc
cmp
xor
iret
mov
adc
sti
je
dec
inc
cmp
jecxz
sub
ja
jbe
scas
cwtl
mov
loopne
iret
int
jne
sub
fsubp
mul
mov
scas
push
icebp
jae
aad
cmp
fcoml
std
push
add
mov
cwtl
sub
cmpsl
dec
cmp
pop
fwait
adc
mov
mov
fdivrs
or
dec
xchg
mov
xor
or
iret
int3
popf
pop
std
inc
pop
mov
or
out
mov
pop
mov
clc
jecxz
sub
adc
out
dec
in
cmpsl
fnsave
sbb
inc
pop
pop
mov
ret
mov
shrb
out
pop
mov
lahf
xor
pop
add
fwait
jnp
cmp
inc
shrb
inc
inc
pop
pop
stc
ret
popf
iret
xchg
jge
fistpl
sub
and
enter
sbb
xor
pop
into
inc
shl
push
subb
mov
mov
cs
cmp
loopne,pt
insb
pop
mov
sbb
inc
pop
jp
xchg
stc
decb
push
jnp
jo
pop
movsl
repz
fidivl
shr
or
lret
bound
inc
mov
mov
mov
imul
in
sub
daa
push
lahf
adc
adc
in
and
xor
cwtl
mov
cmp
fbstp
stos
not
arpl
in
inc
sti
or
test
iret
pop
mov
sbbl
dec
imul
jns
xlat
pop
lret
jg
mov
mov
jmp
test
pop
aaa
lcall
mov
and
hlt
call
fcmovnbe
and
dec
mov
mov
adc
push
adc
sti
cs
in
fwait
insl
add
insb
mov
and
sti
in
jmp
cmp
lea
iret
enter
sub
pop
mov
jnp
rclb
negb
nop
stos
arpl
mov
arpl
daa
ret
aad
jmp
adc
outsb
scas
jnp
fdivrl
imul
pusha
push
lcall
dec
fildll
std
inc
xchg
lret
ret
movsl
psrlw
dec
cld
push
sub
push
sub
xchg
cmpl
jns
sbb
jno
lds
mov
insl
imul
cltd
lcall
cmp
fs
iret
mov
push
adc
jns
xchg
inc
mov
in
into
adc
fsub
and
push
stos
and
icebp
or
es
repnz
cmpsl
ror
scas
popf
adc
add
repnz
and
inc
fildl
push
movsb
ret
adc
cli
test
iret
sub
pop
sub
pop
packsswb
stos
shl
push
jb
xor
xchg
mov
out
pop
push
fadds
xchg
testb
push
sahf
mov
fcomps
pop
jmp
rol
movsb
sub
mov
xor
aam
fcomp
test
xor
lds
cmpsb
cmp
fisttps
sub
mov
hlt
xlat
les
scas
and
jge
push
or
int
jp
repnz
or
inc
js
popf
xor
and
mov
sub
dec
add
sahf
ss
shl
outsb
sar
insl
cmpsb
icebp
adc
cltd
jb
push
cmp
mov
push
mov
outsb
adc
ds
mov
dec
outsb
stc
jb
sahf
xor
sub
insb
or
ljmp
in
dec
mov
mov
repnz
inc
in
adc
ret
inc
dec
cld
lcall
push
sub
cs
mov
add
jae
adc
aad
notb
jmp
cmc
leave
mov
push
xor
das
ret
xchg
sbb
sub
jg
sub
aaa
mov
inc
cli
adc
test
dec
lret
pushf
dec
insb
pop
test
into
dec
ficomps
xor
push
ret
jp
sbb
lods
pushf
xor
jg
push
loope
add
int3
jmp
stos
mov
cmp
push
dec
sbb
insl
mov
imul
lret
push
cmp
mov
and
push
pop
xchg
push
cmpsl
movsb
push
test
xlat
cld
jl
addr16
popf
sub
inc
lods
xchg
add
mov
cwtl
pop
movsb
fidivrl
shll
add
mov
xchg
cmpsb
popf
jo
outsb
mov
cs
xor
in
inc
repnz
testl
mov
inc
daa
mov
cmpsl
pusha
xchg
sbb
sbb
in
or
inc
daa
jecxz
out
lret
lods
xchg
pop
clc
jmp
xor
mov
inc
scas
pop
bound
dec
neg
mov
subb
mov
ja
dec
pop
mov
pusha
cmp
adc
xchg
push
jbe
push
mov
or
or
inc
cmp
or
mov
pop
je
je
add
mov
push
adcb
lret
dec
andb
pop
cli
add
dec
mov
das
sbb
incb
lret
xchg
sti
push
add
or
das
dec
pop
rcrb
icebp
das
adc
fnstsw
add
imul
popa
xor
push
jbe
inc
into
mov
and
push
leave
aaa
pop
xchg
imul
rcrb
jecxz
arpl
push
dec
pop
mov
jbe
fnsave
int3
xchg
sbb
pop
mulb
jo
mov
aas
pop
push
and
scas
push
inc
xor
int3
cmpsb
ret
add
push
jmp
lods
movsl
test
jg
ret
popf
push
push
xor
push
cmpb
mov
push
divb
mov
stos
jg
mov
sub
dec
js
or
stc
movsl
cmp
ja
pop
push
mov
pusha
mov
mov
mov
jnp
add
xchg
enter
jbe
cwtl
or
inc
lret
push
pop
jecxz
dec
jo
cmpsb
sti
sbb
adc
insl
in
dec
rolb
shll
pushf
pushf
adc
xchg
test
in
cld
xchg
dec
in
sub
mov
test
fildl
mov
xchg
inc
push
stos
mov
jb
mov
xor
mov
test
cmp
xchg
mov
adc
mov
aas
rcl
push
xchg
xchg
adc
loop
and
outsl
pop
idivb
leave
mov
pop
cwtl
lods
sbb
ljmp
xchg
xchg
jno
rol
imul
inc
or
add
sbb
aas
jns
dec
pop
ss
je
jnp
push
inc
xor
pop
inc
and
fistps
jno
loopne
dec
mov
lcall
shrl
ljmp
sub
mov
jbe
mov
ss
cmp
jo
aaa
test
es
pop
loopne
mov
out
je
mov
inc
or
sub
and
mov
inc
sbb
dec
mov
cmp
cmp
dec
je
or
jg
ds
std
mov
pop
jb
nop
icebp
mov
cmp
and
mov
mov
mov
push
dec
xor
clc
fwait
mov
mov
cmp
loope
rcl
popfw
mov
inc
push
pop
orl
scas
lcall
jbe
cli
imul
insl
and
pop
dec
std
mov
ljmp
movl
xor
rcrl
dec
mov
mov
je
mov
test
out
pop
push
enter
lock
mov
in
jb
scas
xor
mov
inc
jnp
xor
push
mov
dec
cmp
cmc
enter
pop
leave
sub
xchg
xorb
and
mov
adc
and
test
std
out
or
mov
sahf
ja
pushf
jno
div
push
divl
push
dec
rep
lret
jle
xchg
call
bound
mov
xlat
add
leave
movhps
mov
xchg
push
lock
loopne
pop
cmc
fidivs
cmp
or
or
ja
les
mov
roll
push
jnp
rcl
sti
mov
dec
leave
das
lods
sarb
push
pop
popa
mov
sub
daa
sbb
dec
roll
ret
pusha
push
cmpsb
insb
adc
sub
inc
xchg
iret
cmpsl
jge
jb
cmp
and
subb
pop
pop
xor
pop
adc
mov
lock
pop
and
jbe
fimuls
pusha
and
pop
push
cmp
outsl
sbb
xchg
xorb
fs
sub
sbb
loope
mov
outsl
mov
pop
js
push
add
pop
xchg
xchg
mov
xchg
mov
adc
jne
push
sub
popa
add
mov
lea
jnp
inc
cmc
loope
enter
iret
gs
jecxz
cltd
mov
movhps
aad
shlb
wbinvd
in
jae
adc
aaa
pushf
aas
nop
lods
xor
stos
cmp
inc
add
xchg
sub
cmp
mov
push
pushf
pop
nop
dec
xor
xchg
imul
push
out
mov
jge
or
mov
lret
andl
mov
xor
rclb
fwait
into
pop
insb
aaa
mov
sbb
or
rcrl
add
mov
out
mov
mov
mov
leave
out
cmp
mov
sbb
int3
cwtl
stos
inc
in
inc
movsb
push
ljmp
cmpsb
jb
in
add
lock
inc
jg
insb
loop
pop
repz
mov
sbb
dec
cmpsl
ds
xchg
jle
imul
pusha
pop
test
and
out
push
shrl
hlt
pusha
xchg
ja
sbb
jne
mov
or
mov
lcall
mov
xchg
cwtl
mov
inc
stc
jb
addl
dec
dec
xor
xor
das
popf
xchg
inc
jbe
daa
popf
push
lock
jb
bound
mov
add
negl
push
pop
jnp
pop
push
and
shll
push
cmp
in
dec
xchg
inc
jl
ret
fcoml
push
js
mov
nop
jae
push
cmp
mull
jecxz
iret
sub
aad
addb
inc
cwtl
data16
outsl
testl
mov
mov
ds
mov
xchg
dec
push
es
jecxz
ss
pop
gs
je
jl
inc
jp
push
mov
or
mov
and
aad
cmpsb
inc
xchg
mov
xchg
add
dec
cmp
mov
test
sti
sbb
jle
inc
pusha
dec
cmp
loop
mov
sbb
ss
mov
mov
adc
push
mov
and
push
mov
jge
inc
nop
xor
test
xlat
roll
das
fstpl
mov
xchg
cmp
jl
insl
cli
jbe
mov
xor
add
or
rorl
mov
jg
sbb
pop
out
into
fs
mov
cmc
push
xchg
mov
push
ja
mov
ds
cltd
bound
into
cmp
in
hlt
fwait
inc
push
lds
push
jecxz
or
jmp
lods
or
pusha
adc
mov
push
cmp
out
cld
in
in
and
mov
push
and
push
je
sub
xlat
inc
out
in
loop
popa
push
mov
mov
ljmp
pop
jb
xor
into
lahf
icebp
push
mov
ds
fmul
push
shll
and
outsl
cmp
xor
push
cs
xor
movsb
scas
lods
inc
je
frstor
sbb
lods
mov
mov
add
sbb
push
mov
lcall
push
insb
iret
pop
push
scas
pop
or
pushf
jnp
repz
movsb
jae,pt
pop
xchg
xchg
movsl
or
fdivrs
pop
mov
in
dec
ficompl
hlt
fmuls
sbb
mov
popa
sbb
nop
jo
xor
sbb
pushf
mov
jle
iret
lds
mov
das
lods
inc
mov
lods
sti
je
inc
das
pop
and
mov
cltd
inc
inc
loop
sbb
into
inc
dec
adc
mov
stos
push
int
mov
sbb
add
jns
ror
mov
and
pusha
inc
cmp
aaa
aas
scas
aad
add
outsl
outsl
out
pop
repnz
sbb
enter
leave
lcall
sub
fdivr
popa
popf
call
lods
std
arpl
xchg
pushf
push
xchg
lea
mov
xchg
addr16
or
jne
and
mov
sub
inc
icebp
xorl
add
lock
xchg
lods
jbe
pop
adc
jae
cmpsl
and
adc
lcall
jge
pop
divl
push
push
cmc
in
or
mov
dec
push
divb
mov
stos
les
xor
mov
cmp
loop
adc
rorb
sahf
fisubs
lcall
loopne
das
jbe
pop
pop
fdivrl
jp
adc
xor
enter
sub
das
jg
xorl
cmp
in
mov
pop
sbb
sub
hlt
cmp
xchg
aam
dec
loope
jp
pusha
xor
pop
xchg
pop
lcall
xlat
adc
sbb
mov
jae
pop
mov
lods
mov
int3
fmulp
adc
pop
stos
lods
mov
xchg
cmp
jns
inc
lock
rcl
push
outsb
fisubrl
cmp
mov
aad
sbb
lock
out
adc
out
arpl
dec
fstps
inc
lods
mov
addr16
lods
xchg
and
fucom
outsb
mov
mov
bswap
xchg
mov
cmpsl
dec
call
mov
jno
in
call
mov
jno
cmp
dec
jle
enter
loop
jno
outsb
dec
jns
adc
js
or
push
pop
imul
cmp
int
stc
xchg
mov
pop
jo
ja
dec
or
js
cmp
testb
mov
lahf
jo
sbbl
xchg
test
mov
popf
insb
push
or
mov
push
push
mov
jb
decb
lods
fnstsw
and
lret
inc
cmp
int
in
xchg
xor
sbb
jecxz
adcb
loop
xlat
cmp
rcll
lahf
xchg
xchg
add
stos
pop
aam
inc
call
xor
add
insb
enter
dec
lea
push
les
les
or
mov
ss
arpl
lock
pushf
cmp
sbb
and
rorb
aad
jmp
pop
stos
jb
jl
adc
push
lds
mov
xor
std
in
in
and
inc
jne
sbb
pop
mov
sbb
sub
pusha
cmovl
adc
nop
mov
rclb
clc
mov
cld
xchg
jne
mov
jmp
xor
inc
js
in
inc
addr16
mov
sbb
nop
xor
mov
add
les
sub
or
out
or
ljmp
lock
pop
int
test
sub
andb
jno
data16
test
outsl
cld
lcall
inc
ljmp
cmp
mov
dec
pop
out
sub
cmp
fimull
cs
fdivrp
mov
test
xor
inc
mov
clc
xlat
popa
xor
cmp
xchg
cld
and
inc
xchg
add
mov
int3
fisubrl
xor
mov
repnz
xchg
or
insb
sub
add
sbb
xchg
lcall
inc
call
insl
loopne
outsb
lock
or
aas
xor
nop
dec
push
jl
and
or
push
ret
loopne
mov
cmp
test
mov
cmc
cmpb
or
pop
jl
push
xchg
jae
xlat
dec
jecxz
outsl
andl
xchg
jge
pop
mov
jbe
xchg
cmp
in
dec
imul
xor
sub
inc
test
aad
mov
popa
cld
mov
pop
add
fsubr
sub
ret
js
repz
pop
sahf
jmp
mov
mov
mov
mov
jge
adc
ret
mov
imul
jecxz
out
jmp
xchg
inc
orl
jnp
repz
sbb
imul
cli
imul
shll
mov
testl
popa
xchg
or
mov
mov
cltd
rclb
imul
sti
mov
push
jbe
daa
rcl
inc
xchg
pop
xchg
insb
lahf
iret
adc
mov
add
aam
push
mov
jecxz
in
lcall
pop
loop
rol
push
lods
mov
xchg
cmc
and
ror
in
mov
add
add
pushl
mov
out
in
cmp
dec
jg
lea
shlb
xchg
adcb
dec
xchg
sub
push
xor
cmp
cmp
dec
push
push
fsub
ds
iret
ret
aas
jno
mov
push
dec
idivb
les
push
in
mov
xor
sub
loop
mov
stos
jo
adc
insb
xlat
mov
mov
loopne
popf
push
and
ret
shll
pop
ljmp
movsb
popa
jmp
xchg
xchg
or
ljmp
or
ljmp
scas
xor
dec
dec
mov
imul
and
fstpt
aaa
lea
sub
mov
idivl
or
jle
out
jmp
repnz
xchg
and
ds
lahf
sub
data16
xchg
pusha
lret
mov
and
sbb
and
addr16
add
cmpsb
push
inc
add
pop
add
push
mov
ret
xor
xchg
jae
ficoml
inc
adc
mov
xchg
bound
movsl
fwait
jmp
stos
add
sahf
lock
into
sahf
movups
rclb
fcmovnu
idivb
div
gs
sbb
pop
loopne
adc
xor
or
leave
or
sbb
dec
hlt
ljmp
mov
mov
pop
jno
in
dec
add
push
inc
test
adcl
sbb
jo
aad
lods
sub
lea
jnp
add
or
test
and
fs
xorb
pop
movsl
aad
fisubrs
push
mov
push
sti
mov
or
aas
mov
fidivrs
scas
das
jbe
and
sbb
xor
or
add
push
jb
and
push
cmc
jno
imul
adc
fwait
dec
call
jg
decb
or
pop
insl
add
aaa
xchg
shl
xchg
fs
imul
inc
scas
or
sahf
xchg
xchg
in
jle
daa
push
xlat
jecxz
inc
dec
test
pop
or
pop
dec
test
and
pop
or
lods
xchg
in
cmp
adc
into
pop
mov
pop
sbb
lret
in
testl
outsb
and
mov
popa
pop
negl
aam
loopne
mov
scas
pop
das
lods
mov
aam
sbb
lret
mov
cmp
xchg
les
and
in
xchg
insb
loope
test
pop
leave
pop
dec
out
sbb
addl
hlt
fdivr
and
mov
in
sub
int
mov
inc
add
lods
mov
aas
push
popf
fisubl
xor
sub
scas
xor
or
rol
pop
mov
and
and
sub
cltd
mov
add
mov
sbb
fdivp
cs
stos
clc
sbb
leave
xchg
xlat
call
data16
xchg
es
ja
jbe
pop
add
outsb
hlt
xor
call
sub
push
fiaddl
rcrl
jae
jb
hlt
jns
cmp
stc
pop
add
mov
fiaddl
jb
jns
or
sbb
push
scas
out
popa
push
in
mov
jnp
loop
push
seto
inc
fnstenv
lcall
stos
dec
inc
pop
adc
jmp
mov
sbb
int
stc
sub
addr16
and
xchg
mov
add
lock
jmp
aaa
rolb
lret
imul
ds
test
pop
inc
sbb
stos
jb
bound
insl
jns
repnz
shll
sahf
pushf
pop
mov
cpuid
test
bound
daa
adc
gs
mov
mov
push
and
enter
into
jle
gs
out
xor
mov
add
push
and
sbb
in
pop
test
sub
fldl
pushf
mov
outsl
jg
into
fildl
jp
in
sub
ror
addr16
in
sbb
lcall
gs
inc
or
in
icebp
push
bound
and
pop
fsubrs
pusha
stc
setno
in
sub
jae
pop
dec
lods
mov
xchg
mov
push
xchg
sub
fstl
in
inc
push
inc
cltd
dec
mov
loopne
mov
push
pop
loop
test
adc
push
stos
lahf
dec
leave
mov
jns
test
leave
jo
addr16
movsb
subb
jnp
out
sbb
and
mov
rcl
and
neg
jb
sub
or
xchg
bound
pop
gs
icebp
subb
sti
inc
in
mov
sbb
pushf
xchg
fwait
aad
jp
pop
jbe
dec
adc
sub
lds
mov
fdivrs
jg
mov
xchg
fdivs
addr16
in
sub
sub
mov
in
sub
pmulhuw
lods
out
cmp
enter
adc
pop
shlb
cmp
adc
add
fdiv
hlt
push
adc
jmp
pop
pop
jbe
fstpl
andb
movsb
int
mov
and
mov
stos
and
jl
out
sbb
mov
bound
fdivs
test
sahf
or
inc
xchg
fcmovb
outsl
insb
inc
repnz
jno
jns
das
inc
sbb
out
adc
mov
ds
sub
mov
fdivrl
jne
mov
sub
mov
add
fbstp
pop
sahf
cmc
push
cld
aaa
in
mov
sub
mov
adc
fcomps
jp
mov
mov
scas
imul
xchg
mov
enter
cwtl
dec
mov
jecxz
cmp
mov
lcall
les
adc
and
lahf
and
divb
mov
mov
stos
or
sbb
outsl
clc
cltd
ljmp
test
adc
jne
ljmp
mov
std
xchg
adc
mov
inc
icebp
pop
es
pusha
in
push
hlt
jae
clc
mov
jbe
hlt
xor
js
push
call
out
test
test
lock
pop
test
push
jnp
push
mov
push
xor
jnp
shrl
mov
fs
popf
out
inc
in
fwait
sub
fdivs
loop
inc
loope
rorl
push
dec
inc
lds
adc
cmpb
fisubrs
test
sub
xchg
sub
jnp
push
cwtl
add
sbb
xlat
and
pop
mov
mov
lcall
lock
mov
xor
pop
mov
mov
daa
xor
inc
subb
fs
test
sarb
fistl
mov
mov
push
inc
movsb
mov
rcrl
into
bound
fs
add
loopne
popa
out
fisttps
out
popa
adc
je
lcall
sub
lret
fmuls
pop
or
push
push
repz
lcall
jecxz
pop
inc
fisubrs
push
icebp
dec
push
cmp
add
shl
test
xchg
bound
dec
inc
aam
cs
xchg
add
aad
sub
icebp
popl
sbb
mov
imul
inc
out
mov
add
sub
insl
adc
mov
decb
in
test
mov
sbb
push
subb
dec
out
push
cltd
or
mov
inc
jnp
or
fisttps
cltd
xchg
outsl
inc
cmpsl
mov
loope
lret
add
mov
in
mov
jl
ds
jmp
push
push
dec
sub
adc
xchg
push
js
push
loop
out
push
out
data16
inc
test
mov
fsubp
xchg
push
into
push
mov
jns
adc
rcrl
flds
jl
jmp
lods
sub
dec
fbstp
dec
xchg
lahf
sbb
or
int3
jmp
ljmp
repnz
cmp
js
pop
das
out
stos
nop
cmpsl
popa
ss
lock
cmpsl
cli
mov
mov
push
mov
add
test
add
test
xor
cmp
popf
xchg
jle
cmpsl
fiadds
fcomip
in
test
je
dec
jns
pushf
dec
test
mov
xlat
jle
mov
dec
rcrl
inc
push
dec
stos
sbb
es
and
ret
xchg
loopne
adc
rcll
mov
pop
cli
adc
stos
mov
cmp
or
sub
stc
dec
insl
lods
mov
xchg
cmp
std
inc
jo
fimull
andl
ds
sub
push
iret
call
jecxz
inc
popa
ljmp
je
scas
push
cmp
fimull
dec
outsb
fbld
addr16
dec
cld
lods
mov
mov
cmp
and
mov
lret
ret
shlb
not
inc
pusha
stos
sbb
rcr
cmpsl
ja
mov
pushf
and
icebp
mov
test
jno
adc
cmc
ret
jle
xor
sahf
jnp
cmp
ret
jl
and
mov
shll
loopne
xchg
and
lea
lea
sarl
fmull
push
lock
rcrl
pop
popa
push
dec
sbb
mov
push
xlat
movsl
add
stc
cli
clc
lcall
adc
ja
push
popf
hlt
pop
xor
gs
add
pushf
cmp
nop
mov
psubw
sub
jge
int3
pop
out
enter
in
mov
enter
ds
scas
mov
fildl
fstp
jo
xor
mov
gs
jg
shr
mov
ret
xchg
adc
jge
cmp
inc
pop
sbb
sbb
je
scas
dec
fld
iret
jnp
stos
pop
test
fwait
cmpsl
dec
in
jo
stos
loop
and
inc
es
dec
bound
pop
push
js
rcrl
nop
popa
add
jo
fildll
lods
es
xor
adc
scas
or
pop
idivl
in
inc
jns
jecxz
jno
sub
out
cmp
xor
data16
dec
out
xlat
adc
push
lcall
inc
fnclex
scas
xor
bound
insl
jae
cmp
cmpb
cmpsl
mov
movsb
jne
std
mov
mov
arpl
jg
pop
das
scas
in
scas
inc
dec
jbe
pop
sub
in
movsb
je
cld
leave
outsl
in
xchg
push
mov
sub
jp
cwtl
xlat
bswap
sahf
jle
mov
popa
pushf
in
data16
jl
sti
jbe
aam
dec
xchg
jle
xor
or
fisttps
add
xchg
mov
pushf
push
sbb
mov
adc
dec
ljmp
int3
push
jae
sub
jmp
inc
dec
leave
cwtl
jno
jnp
mov
or
fiaddl
daa
fwait
dec
pop
dec
test
cmpsl
cmp
div
in
mov
psubd
test
loopne
fs
jno
test
jbe
add
lods
adc
sub
push
xor
into
subb
inc
imul
xchg
test
nop
mov
mov
mov
xor
loope
sub
xchg
ret
int3
pop
call
push
mov
test
jmp
xchg
out
push
cmc
adc
pop
ficomps
add
adc
sbb
loope
sahf
repnz
push
repz
cmp
jp
pop
mov
jmp
jl
xchg
rorb
mov
popf
dec
test
cs
jp
or
lahf
pop
dec
shr
mov
jne
jmp
jecxz
std
add
icebp
mov
dec
out
jle
add
dec
jmp
xchg
cld
mov
and
pop
sub
into
loopne
or
inc
push
repnz
into
add
jecxz
sub
fsts
xor
adc
or
fidivl
lret
mov
cmpsl
aaa
test
mov
dec
mov
in
sbb
hlt
xlat
add
ja
xor
sub
lods
cmpsl
sub
push
shrb
scas
push
jb
in
adc
jb
int
mov
arpl
mov
mov
leave
scas
ja
xor
xor
push
adc
in
pop
jno
xor
pop
push
xor
lahf
cld
push
sbb
add
inc
pop
jle
pop
push
inc
mov
iret
inc
aam
fisubrl
sbb
pushf
push
push
mov
pop
sbb
sub
inc
jecxz
sbb
imul
add
cli
fildl
dec
mov
arpl
cmp
push
dec
inc
daa
lahf
or
stos
xchg
sarb
mov
inc
loope
dec
push
fadds
fistpll
add
and
js
jmp
lods
push
sub
test
pop
inc
or
sub
iret
data16
mov
and
adc
aas
aad
cmp
xchg
dec
cld
jns
push
mov
divb
and
jns
out
or
push
xchg
bound
outsl
jo
lret
aas
push
ds
jae
mov
std
fs
or
data16
or
popa
mov
pop
pop
xchg
sub
mov
mov
ror
test
cmpsb
pavgw
adc
mov
fistpll
pushf
sbb
adc
mov
cwtl
aas
pop
mov
pop
sub
fs
pop
cmp
jl
aas
xchg
addr16
mov
mov
into
and
cmp
repnz
cmpsb
jg
pop
int3
pop
aam
cmp
xchg
aad
jl
inc
mov
imulb
mov
sub
test
subl
insl
mov
xchg
aad
pop
daa
lods
jae
ret
aam
pop
xor
mov
ss
mov
iret
cmp
xchg
mov
fstps
sub
push
xor
mov
leave
adc
pusha
fcmovnb
jnp
lock
mov
jne
push
fdivrl
in
dec
jae
hlt
xor
sbb
cmp
jl
aaa
and
outsl
push
je
mov
sti
loop
lahf
xor
imul
stos
cli
in
jo
loope
scas
mov
out
or
out
push
jbe
lret
fs
jp
inc
nop
add
dec
out
mov
dec
cmpsb
lods
xor
jns
mov
push
push
adc
lock
and
sbb
out
into
jge
aam
xor
je
gs
or
fsubl
sub
add
negl
xor
mov
call
mov
test
jmp
icebp
sub
lret
fldt
aas
cmc
shll
frstor
mov
leave
dec
dec
cltd
dec
pop
and
pop
shll
cli
cmp
jmp
dec
cmp
bound
pop
add
scas
and
mov
or
cmp
add
jb
sbb
pop
ja
jle
or
lds
inc
stos
mov
inc
insl
cmp
lret
mov
cmpsb
add
sub
xchg
mov
jns
fldl2t
jne
ficoml
lock
jo
cmp
dec
mov
in
mov
pop
add
mov
push
fwait
out
push
repnz
inc
cmp
mov
lahf
jno
movl
insb
cltd
fdivl
jne
dec
pop
xchg
std
jb
sahf
push
stos
pop
pop
imulb
mov
xchg
lods
movsl
dec
dec
pop
sysenter
push
loope
mov
mov
mov
mov
outsl
pop
jmp
push
data16
or
ds
cmp
and
dec
inc
outsl
jbe
xchg
repz
ds
test
out
lcall
jnp
bound
add
adcl
scas
dec
imul
mov
jne
outsb
rcl
mov
int3
adc
add
and
rcll
add
jecxz
add
cmp
sub
fldenv
lods
dec
test
cmp
cmp
into
hlt
mov
shl
clc
mov
aam
inc
call
xchg
into
out
xlat
push
inc
jbe
xor
test
adc
push
outsl
dec
daa
negb
lcall
mov
sbb
mov
push
add
mov
jne
unpcklps
je
ds
pusha
xor
mov
sbb
push
stos
mov
push
push
push
out
cmp
hlt
xchg
sbb
imul
xchg
aas
aam
mov
rol
xchg
jmp
push
sbb
pop
in
xor
inc
inc
jno
mov
movq
xor
xchg
sbb
shll
mov
lods
mov
rcrb
subl
xor
cld
movsl
sbb
sti
lods
orb
rclb
dec
jle
jle
fldl
sbb
cmpsl
ja
pop
inc
shrb
pop
or
icebp
inc
jbe
fdivr
bound
adc
out
in
or
adc
jmp
lret
xchg
mov
mov
insb
or
test
pop
pop
lahf
pushf
in
xchg
dec
adc
cmc
subl
pop
xchg
xor
in
cs
ds
add
mov
imul
shrb
aaa
push
mov
cmc
enter
add
push
push
inc
jecxz
popa
ficompl
push
pop
sarl
sahf
cmc
movsl
xchg
sub
adc
or
rcrb
imul
ret
mov
pop
loop
lretw
arpl
xchg
es
sar
and
push
mov
shrl
fadds
mov
sbb
int3
or
scas
lcall
ret
and
jns
adcb
push
ljmp
mov
inc
sbb
sbb
dec
adc
sub
je
popa
mov
mov
jp
in
sub
dec
repz
fstpl
jno
and
imul
int3
fbld
jp
mov
fwait
shufps
mov
jns
cmpsb
dec
test
sarl
push
sahf
out
shll
out
ljmp
inc
mov
mov
popa
and
add
dec
popa
dec
add
idivb
cmp
hlt
imul
jecxz
loope
mov
xchg
fwait
insb
cmpsl
hlt
xor
xchg
mov
pushf
sbb
rcl
xor
lds
inc
maskmovq
imull
cltd
pop
lret
fsubrl
push
clc
les
test
push
sbb
ret
push
cs
nop
mov
adc
les
pushf
mov
fmul
xchg
sub
xchg
lcall
es
mov
dec
movsl
lahf
lret
mov
popf
and
pop
jg
enter
cmp
sub
adc
insl
orb
sub
out
divl
jnp
pop
shll
jle
in
pop
add
lods
sbb
imul
pushf
ljmp
out
movsl
or
mov
pop
or
gs
jne
loop
xchg
push
mov
insb
cmc
int3
xchg
ret
adc
mov
jns
xchg
jae
sarl
fidivrs
pop
jmp
in
out
ret
popa
lahf
and
popf
xchg
add
cmp
cmp
push
test
aas
inc
adc
stos
decl
das
cli
outsl
aam
shll
subb
aad
scas
xor
or
sti
adc
les
jmp
cltd
xchg
xor
in
iret
xchg
mov
inc
mov
mov
or
js
cvtps2pd
mov
jg
stc
jmp
xchg
jae
mov
gs
add
jl
inc
rcl
cld
inc
pop
aaa
or
and
scas
out
cmp
fwait
sahf
call
lret
lcall
lods
lods
jl
push
aas
fs
imul
imul
cmc
xchg
ljmp
mov
mov
and
adcb
jp
jae
mov
jnp
inc
jp
rorb
xchg
and
add
push
lcall
sahf
xor
pop
enter
sbb
xchg
mov
adc
sbb
in
cli
inc
cmpsb
negl
fmuls
arpl
sarb
jmp
iret
push
sbb
xchg
sahf
pushf
xchg
cmp
push
jo
outsl
shlb
push
add
inc
hlt
push
lea
into
mov
cli
movl
sbb
push
xchg
rclb
loopne
cwtl
sbb
lret
pop
mov
or
inc
inc
fisttps
jmp
xor
dec
clc
out
cs
pushf
lret
cli
xor
fwait
push
dec
in
pop
imul
inc
xchg
hlt
dec
sti
das
sub
bound
sub
add
push
lds
aaa
push
inc
aam
xor
jecxz
call
xor
andl
sub
int
push
lahf
and
cmpsl
movsl
cltd
mov
pop
cmp
aad
push
test
dec
jno
lret
sbb
push
xchg
dec
jp
mov
push
cmp
sub
push
jo
pusha
stos
inc
add
dec
mov
jmp
and
mov
adc
fstpt
imul
inc
mov
enter
mov
jae
loop
ja
and
inc
lods
fstl
pop
ds
lret
enter
push
inc
sbb
xor
jno
stos
jo
push
sbb
mov
jl
cmp
adc
or
out
cmp
add
pushf
cmp
sahf
cs
and
fwait
lret
out
scas
mov
fisubs
sbb
in
mov
push
lods
out
adc
ret
pop
cmp
leave
int3
hlt
cmpsb
sbb
daa
sub
aad
xorb
popf
jno
inc
pop
movsb
shll
pop
roll
jmp
jae
loopne
shlb
xchg
inc
or
xchg
push
pop
mov
sarb
insb
cmc
mov
ljmp
jb
sub
sbb
jns
mov
mov
loop
inc
out
dec
outsl
mov
popf
mov
stc
sti
jbe
cmp
xor
mov
into
out
imul
mov
cld
pop
js
jb
xchg
sbb
xchg
adc
dec
lds
mov
daa
sub
ret
push
pop
pop
pop
in
xorl
repz
sub
fistpl
add
push
cmp
mov
push
xor
insb
and
hlt
sub
and
mov
clc
mov
mov
enter
flds
jo
cmpsl
jnp
sbb
cmp
vunpckhps
xchg
mov
cmp
lds
jge
bound
mov
lret
sbb
pop
xor
or
and
jge
fdivl
fwait
jecxz
xchg
lods
orb
cmp
cmp
imul
jmp
cmp
adc
bnd
loop
fidivl
daa
and
sub
cwtl
aas
shlb
mov
out
and
inc
jmp
ja
jl
std
mov
xchg
mov
jge
es
mov
sub
mov
movsl
add
ffreep
pop
enter
inc
cmp
xchg
fldt
shr
gs
pop
jmp
sub
inc
push
inc
push
mov
and
xchg
arpl
scas
jl
mov
fistpl
jbe
imul
mov
cmpsl
inc
jns,pn
sbb
mov
das
fwait
mov
xchg
aaa
jge
imul
outsb
notb
push
cwtl
inc
lock
hlt
xlat
push
mov
movsl
ss
out
arpl
or
push
fdivrl
sub
sub
or
or
jbe
ret
jmp
sub
into
xorb
and
jmp
and
loopne
dec
xchg
pop
stos
mov
xor
mov
add
jnp
mov
mov
inc
pop
lahf
sbb
fstpl
or
jle
rolb
jne
xchg
xchg
or
inc
inc
fadds
mov
sarb
add
notb
pop
cmp
push
fldenv
lock
push
out
push
lret
mov
lods
clc
jecxz
arpl
fisubs
add
jp
pop
dec
or
mov
xchg
es
jb
sbb
leave
pop
mov
add
push
and
jl
xchg
repnz
shrl
mov
fsubs
sahf
outsb
sbb
fbld
mov
mov
xor
orb
sarb
add
push
sub
mov
pop
or
iret
and
xchg
add
insl
push
ficoms
mull
xchg
ds
cmpsl
pop
add
dec
es
push
jge
repnz
pushf
mov
sbb
fwait
mov
test
mov
xor
bound
adc
xchg
fs
rolb
mov
jns
xchg
mov
pop
ficoml
lea
cld
imul
mov
shll
hlt
dec
adc
sub
lret
aaa
push
int3
pop
ja
rcrl
mov
mov
or
int3
xchg
into
lods
lods
mov
pop
sbb
int
jo
mov
int3
aas
pop
mov
lds
pop
neg
cwtl
sahf
sbb
sub
fistpl
pop
fstpt
dec
mov
scas
and
cmp
enter
insb
dec
and
dec
mov
in
cwtl
out
xchg
mov
mov
rclb
inc
ljmp
inc
shrl
or
mov
inc
call
jb
mov
dec
jg,pn
js
mov
adc
outsb
rolb
sbb
sbb
in
jl
sub
xchg
in
mov
pop
scas
mov
lock
push
loope
fldt
jle
jbe
sbb
adc
add
in
jl
cmp
push
rol
or
jbe
add
pop
mov
rcl
jnp
gs
sbb
sahf
dec
or
stc
xchg
push
and
mov
inc
cmpsb
add
sahf
std
jae
xchg
movsb
and
cltd
lods
ja
jne
lret
shlb
dec
dec
ss
fcoms
ror
xor
mov
sbb
cmp
icebp
aaa
xchg
mov
add
cmc
leave
clc
jno
aam
inc
stos
imul
add
stos
fistpl
fldl
xlat
mov
stos
add
stos
es
cmp
jmp
enter
mov
lea
xor
pop
icebp
mov
ds
pop
xor
sbb
lock
pop
mov
addr16
xchg
stos
div
stc
cmp
inc
aaa
bound
into
repnz
loopne
cmp
dec
fwait
je
mov
inc
addr16
mov
lods
dec
hlt
mov
pushf
mov
mov
mov
push
adc
ds
inc
and
inc
cmp
push
jmp
ss
mov
jno
sub
add
add
xchg
and
mov
and
xchg
mov
xor
lahf
test
inc
je,pt
iretw
pushf
repnz
sub
into
repz
mov
enter
std
dec
les
or
adc
data16
or
loop
push
shrl
and
cs
nop
mov
and
fmull
pop
repz
das
xchg
shlb
dec
mov
pop
push
xchg
sbbb
mov
push
mov
nop
aam
jae
std
inc
loopne
rorb
out
jbe
cmp
xchg
out
gs
and
pusha
test
mov
cmpsl
outsl
jo
movb
rcrb
filds
lret
pop
pop
xor
and
pop
lahf
js
dec
mov
lcall
sti
in
adc
sahf
ret
sbb
add
cmp
cmp
sbb
sub
je
popf
fnstenv
jge
push
add
sbb
pop
test
inc
out
mov
test
test
jnp
inc
xor
repz
add
mov
jnp
jg
xlat
pop
btr
in
pusha
fsubrs
mov
sahf
or
inc
xchg
mov
fsubl
rol
rcll
inc
push
ret
fisubrs
cmp
pop
xchg
push
in
fldenv
movsb
lcall
cmp
inc
out
in
pop
mov
test
push
lds
push
mov
das
sub
push
sub
std
lock
dec
adc
mov
mov
ret
and
pushf
repz
cwtl
adc
cmc
push
pop
into
xchg
cmp
jbe
mov
dec
cmp
push
pop
cmp
dec
jbe
enter
sti
mov
adc
xor
fwait
ret
adc
mov
cmpb
call
dec
outsb
cltd
outsl
adc
mov
push
mov
sarb
mov
mov
push
rcrb
mov
test
xchg
shl
mov
mov
sub
cmp
shll
ret
iret
rolb
mov
mov
mov
pop
adc
cmp
out
adc
sbb
adc
add
xlat
imul
aaa
sbb
sbb
repnz
stos
clc
stos
sbb
fcomps
addr16
out
popa
mov
bound
push
or
ja
cmpb
add
icebp
js
nop
fstpl
mov
sbb
push
sub
inc
lea
or
repz
mov
push
icebp
andb
int
push
push
xor
popf
inc
sahf
push
je
mov
gs
mov
in
jge
mov
insb
or
pop
mov
sbb
fs
out
sbb
ljmp
jle
mov
mov
push
testl
fistl
mov
pop
lock
fisubrs
jnp
rol
cmp
cmp
gs
popa
xor
repnz
mov
test
bound
fsts
and
mov
xlat
or
mov
add
mov
mov
xchg
inc
sti
pop
dec
jl
mov
mov
add
in
sub
inc
push
or
test
mov
sbb
push
xchg
in
fs
cmc
xor
jnp
dec
je
sub
inc
xchg
mov
or
or
std
ja
xchg
adc
out
mov
xor
pushf
pop
inc
pop
or
movsl
mov
ret
add
mov
lods
mov
imul
lock
jno
stc
adc
adc
jno
scas
shr
mov
int
push
or
inc
mov
outsl
imull
insl
jmp
add
cmpsl
sahf
xchg
aaa
repnz
sti
pop
mov
movq
addr16
loop
dec
jp
test
int
mov
mov
pushf
pop
dec
sbb
jb
adc
out
fistl
and
mov
xchg
xor
pop
sub
lods
ja
inc
test
jns
in
imul
mov
fbld
mov
test
test
ja
xchg
rorb
pop
sbb
ja
addb
mov
sbbb
or
js
mov
sbb
movb
cmpsb
out
mov
in
aas
sbb
adcw
loopne
jnp
fldt
mov
mov
or
cmp
ljmp
push
mov
sbb
popl
mov
xchg
movhps
and
mov
mov
ds
loope
sub
dec
pop
int
ret
loope
xor
add
adc
xchg
pushf
cmp
jnp
and
jp
scas
testb
or
inc
jle
test
rolb
divl
and
inc
jae
cmp
notl
pop
sahf
popf
mov
inc
movsl
xlat
js
dec
cli
popa
sti
inc
aad
roll
adc
xchg
push
lret
mov
cli
pop
divb
dec
push
push
sub
dec
out
xor
dec
call
adc
jno
xor
lock
xor
pop
mov
test
or
test
bound
add
add
mov
scas
stos
dec
adc
jno
cmp
nop
xor
test
mov
testl
push
add
pop
inc
add
mov
cmp
cmpsl
inc
inc
orl
adc
mov
jge
mov
stos
and
xor
adc
xchg
dec
jp
xchg
or
daa
sarl
sub
add
out
fsubp
call
in
fldt
jno
bound
jns
mov
cltd
jnp
jge
pop
sub
mov
jnp
shl
arpl
inc
or
push
jp
neg
mov
or
scas
cmp
xchg
stos
div
add
sbb
sub
add
dec
cmpsb
rcl
sbb
aaa
movl
mov
mov
test
pop
jbe
push
adc
cs
shr
or
push
pop
lcall
shll
mov
insb
or
adc
xchg
push
mov
ss
ret
dec
dec
jno
dec
inc
mov
cmp
or
pop
incl
gs
loope
movsl
lods
aam
fdivs
jnp
mov
jmp
pop
dec
push
test
into
add
jmp
cmp
and
push
out
mov
add
daa
ret
loope
and
sub
xor
add
jle
cli
sbb
sbb
mov
sub
inc
push
stos
leave
popw
sahf
sub
fcoms
xor
sub
leave
loop
in
mov
dec
mov
sub
popf
or
push
cwtl
sub
mov
add
pop
mov
loope
call
rcr
sub
nop
jle
repnz
add
gs
pop
push
sbb
scas
in
mov
imull
ja
inc
xlat
xlat
sbb
dec
out
scas
pop
dec
das
xchg
sbb
cmp
xchg
idiv
movsl
dec
clc
in
jb
notl
jae
xor
xor
cmc
loop
xor
wbinvd
sub
icebp
addr16
adc
stos
test
sub
into
push
jno
sahf
pop
bound
add
popf
xchg
xor
push
sahf
dec
push
dec
les
sub
clc
mov
pop
dec
aaa
jbe
mov
xchg
adc
sub
scas
or
cli
repnz
and
jp
das
cli
dec
enter
jmp
insl
shlb
xchg
cmc
fstl
scas
pop
int
jecxz
loope
imul
fwait
mov
clc
xor
mov
stos
lock
add
fisttpll
lahf
xchg
fs
jmp
xchg
xchg
and
mov
sbb
jg
sbb
data16
push
mov
push
jle
cmp
or
push
mov
hlt
mov
fwait
mov
or
rcrl
pop
icebp
jb
jns
cli
out
arpl
mov
mov
or
shrb
adc
inc
cmp
xor
repz
xor
xchg
add
or
lret
pop
in
movsb
or
pushl
jo
cs
outsl
test
inc
sahf
and
fstpt
add
sbb
cmp
jns
std
mov
xchg
dec
aam
bound
or
pop
jp
aad
push
mov
cld
sti
cmc
cmp
adc
push
sub
sbb
jg
cmp
pop
fistps
repz
jmp
test
inc
mov
cli
push
mov
add
js
shll
inc
and
mov
cli
pushf
call
or
jae
push
and
movsb
or
sub
push
push
scas
mov
mov
outsl
decb
pop
jb
mul
or
aaa
fsubrs
cmp
dec
fisubrs
inc
cs
mov
orw
dec
xor
sub
addl
mov
sbb
aad
insb
mov
cmp
dec
mov
adc
bnd
lock
push
cmpsb
xor
popf
mov
fildll
and
adc
loopne
or
outsb
inc
xchg
dec
sbb
out
mov
push
cmp
xor
push
sbb
or
lods
cs
mov
inc
faddp
cmp
movl
jmp
pop
shll
push
xor
scas
pop
cmpsb
sub
adc
in
stos
mov
dec
jno
loop
inc
xchg
ss
mov
xor
scas
mov
inc
dec
sbb
push
sub
sub
adc
push
add
cmp
sub
xor
xor
add
fcoml
fists
lret
cmp
cmp
mov
xorb
mov
fisubs
std
outsb
cmp
adc
add
repz
xchg
stos
es
add
pop
inc
call
push
shll
aaa
sub
scas
push
and
and
add
xchg
xorb
mov
sub
mov
dec
lods
sub
jno
and
push
pusha
xor
mov
adc
jl
nop
pop
hlt
pop
jo
arpl
mov
data16
sub
mov
adc
js
cs
inc
jno
xor
jo
lea
xor
push
push
ja
insl
lcall
aam
adc
shrl
std
int
scas
jecxz
mov
pop
jnp
dec
mov
add
mov
mov
pop
test
mov
aaa
mov
aaa
xor
out
dec
pop
insl
in
test
or
pop
inc
pop
andl
movsl
sbb
lahf
pop
sub
xlat
fs
mov
lods
xchg
push
adc
sahf
notl
inc
inc
cmc
and
push
ficompl
loope
add
mov
ret
mov
pop
sub
mov
out
rorb
aaa
jo
stos
mov
pushl
movsb
adc
xchg
and
loope
popf
push
adc
js
andl
mov
and
cs
pop
add
cmp
and
clc
mov
cld
mov
scas
ficoml
dec
cmpl
loop
mov
sbb
pop
pusha
mov
push
test
mov
inc
push
or
fdivr
insl
add
adc
shrl
xor
xor
scas
pop
jge
or
add
ja
lock
add
fsubl
pop
push
js
lcall
fildl
loopne
rcl
push
inc
mov
and
sub
jb
push
sbb
sbb
das
enter
ret
movsl
stc
or
inc
mov
ret
cld
mov
les
lcall
mov
adc
fsubs
das
outsl
and
xchg
in
pop
pusha
mov
in
jb
xlat
popa
add
mov
push
push
jns
fs
mov
enter
jnp
inc
fwait
cltd
adc
mov
dec
xor
int3
or
imul
cld
mov
popa
push
adc
pop
adc
add
je
mov
nop
sub
scas
push
sub
push
aas
iret
xchg
sub
sbb
add
test
push
or
fwait
jmp
inc
call
negl
dec
sbb
add
and
mov
aad
clc
sub
aas
adc
xchg
adc
mov
mov
fsubs
cs
in
repnz
jbe
cmp
adc
int
test
ficompl
iret
jb
jl
inc
push
inc
cli
shrb
ds
es
jns
cmp
jle
sbb
sbb
imulb
loopne
sbb
mov
scas
fstl
sub
sbb
dec
imul
push
push
fiadds
adc
xor
test
cmp
arpl
mov
inc
push
aaa
sbb
ss
jb
stos
pop
push
insb
imul
push
loope
daa
cmpsl
out
arpl
pop
adc
mov
js
inc
adc
mov
lahf
in
dec
insl
jp
aas
cmp
dec
xchg
hlt
mov
fwait
outsl
outsl
inc
shr
inc
es
cwtl
test
call
scas
xchg
dec
leave
iret
fcomps
ja
lret
mov
pop
cmp
mov
dec
leave
out
das
stos
jbe
push
xor
jne
pop
popf
leave
add
ret
sub
sbb
push
sub
ret
or
fsts
test
inc
cmp
mov
jb
in
movsb
mov
inc
popf
outsb
out
pop
and
testl
inc
int
sti
push
mov
xchg
push
scas
and
movsb
mov
das
aad
mov
add
stos
stos
inc
insl
add
mov
ret
xchg
ret
test
int
or
das
sbb
push
cltd
cmpl
sbb
push
dec
iret
fldt
sub
mov
je
sbb
cltd
mov
or
lahf
mov
jmp
scas
push
mov
sti
add
and
mov
jae
enter
test
dec
xor
cmp
xor
ds
mov
test
lretw
jb
mov
dec
cmp
shl
cld
sub
daa
roll
mov
cmp
mov
repnz
push
xlat
cs
mov
push
push
shll
sub
ljmp
xlat
xchg
or
jp
sub
pop
jno
fcmovnu
dec
mov
push
mov
cmpsb
imul
or
fwait
adc
faddl
and
loope
jns
push
push
out
sub
fs
repnz
dec
dec
incl
cmp
loope
sub
adc
das
jecxz
jge
xchg
repz
push
fildll
rorb
sbb
loope
leave
push
mov
adc
adc
dec
xor
mov
push
mov
mov
jae
inc
scas
lds
in
cmpsl
mov
fcompl
xor
mov
push
mov
mov
cmp
iret
int3
movsb
out
ret
out
cmp
lret
push
jl
repnz
mov
and
inc
mov
les
push
xchg
push
insl
xor
inc
lods
pop
sub
stc
lea
mov
into
cs
jp
mov
xor
or
sbb
mov
push
test
push
lret
fisttps
rcrb
mov
cmp
adc
in
sbb
push
repnz
push
xchg
dec
stos
ljmp
dec
insl
adc
arpl
je
movsb
enter
xlat
rorl
shrb
ds
pop
cld
and
jno
mov
inc
movsb
lds
lock
pop
add
popf
sbb
mov
jnp
xchg
mov
adc
lock
lds
jg
jbe
fldenv
jg
out
jns
rcrb
xor
fdivp
adc
push
and
loope
jb
jge
add
xlat
xor
pop
scas
inc
loope
in
sbb
pop
jl
daa
mov
xor
call
cmp
inc
or
pusha
pop
rorl
mov
push
shrb
cmpl
mov
in
aaa
mov
fwait
add
lahf
into
jp
push
aas
divl
mov
sahf
filds
cmp
call
aas
rcrl
mov
movsb
mov
jle
mov
and
jmp
ret
loop
mov
cs
loop
add
inc
pop
addr16
into
mov
bnd
jecxz
fsubl
sub
jmp
xchg
mov
fs
sbb
xlat
mov
sbb
sub
sub
sbb
loop
lea
xlat
imul
loope
xor
sbb
adc
sub
cmpsb
mov
fnstcw
sub
lods
dec
sti
mov
fucom
push
push
jo
mov
dec
sub
mov
push
cmp
lds
je
sbb
inc
out
push
mov
mov
pop
mov
call
inc
arpl
popa
inc
and
cmp
sub
add
iret
ffreep
push
xor
add
sub
mov
nop
in
iret
cmp
ljmp
mov
das
jbe
movsl
and
pop
das
jb
or
mov
mov
adc
dec
push
inc
enter
test
ds
jo
insl
fs
movsb
ljmp
lahf
jecxz
insl
xor
mov
lret
push
lods
insb
cmc
leave
mov
dec
jecxz
sbb
cmp
and
or
and
ret
adc
das
xchg
fisttps
xor
mov
lods
stos
and
mov
loope
call
push
lods
sbb
cmp
clc
out
sub
or
cmp
notl
push
ljmp
pushf
mov
jno
dec
rorl
loopne
xchg
inc
sub
lds
inc
adc
add
xchg
and
scas
aam
gs
or
jne
mov
add
mov
jb
push
lcall
vpand
push
xor
jo
jne
sti
push
push
pop
xchg
jne
mov
dec
mov
add
scas
inc
jp
leave
insw
and
jo
adc
cmp
addr16
sub
xor
addr16
xchg
arpl
jns
mov
or
jecxz
pop
loope
les
fsubrl
cmp
inc
dec
mov
scas
inc
std
and
loope
xchg
pop
outsl
lock
xor
call
pop
repnz
idivb
lret
dec
jo
call
xchg
inc
in
push
rcr
and
adc
jge
xchg
cwtl
lahf
cld
ljmp
dec
jge
sub
arpl
cmp
cmp
push
mov
pop
in
jno
xchg
mov
ljmp
cmp
pop
mov
cmpsb
out
repnz
and
cmp
jb
add
ret
insb
movsb
clc
push
outsl
sbb
mov
lahf
mov
adc
fbld
sbb
cmp
into
fdivrs
pop
jne
fidivs
jl
sbb
dec
movsl
outsl
jnp
fs
fs
inc
leave
inc
clc
or
jecxz
and
pop
sbb
dec
sbb
std
dec
test
sbb
lock
je
mov
push
xor
push
test
mov
mov
cli
frndint
cmp
fsubrl
pop
xor
data16
clc
jg
mov
fimull
push
inc
and
and
pop
les
mov
dec
push
lods
mov
les
aam
into
mov
fldt
in
in
scas
push
push
pop
cwtl
pop
loop
test
inc
jo
fwait
movsb
outsb
adc
xor
call
sub
out
dec
mov
stos
xor
inc
add
test
mov
mov
inc
push
repz
push
js
fwait
add
in
xor
xor
mov
clc
nop
aas
loopne
xchg
or
popf
xchg
repnz
lcall
jbe
daa
fs
push
and
xor
pop
sub
xor
or
ret
sub
cmp
lods
mov
stos
hlt
push
push
lcall
bound
push
or
gs
jno
test
add
fs
xchg
inc
pusha
js
xchg
lock
nop
cmpsl
mov
mov
imul
fs
sbb
xor
jg
push
das
dec
jmp
cmp
repz
jo
mov
cmpsb
test
pop
clc
jle
insl
push
mov
cmpsl
sbb
or
xorb
pop
push
sti
sbb
adc
dec
movsl
cltd
imul
jo
fisubrs
sub
xchg
aam
jecxz
mov
xor
loope
xchg
sub
xchg
mov
sti
pusha
mov
sbb
push
push
jp
xor
add
clc
stos
popf
mov
lcall
sbb
and
dec
andl
shrl
and
stc
orb
xchg
and
sbb
cs
test
int3
in
popl
enter
into
out
aas
cmp
sub
out
in
pop
mov
enter
addr16
dec
clc
mov
loopne
adc
sbb
inc
dec
dec
or
mov
stc
lret
test
addr16
cwtl
aaa
mov
inc
sahf
movsb
jge
aaa
je
add
ret
inc
sub
mov
inc
jbe
ret
mov
insl
and
lret
adc
sub
push
jp
fdivl
or
ret
jne
cmpl
mov
or
pop
pop
pop
out
pop
in
out
inc
cld
pop
inc
aaa
adcb
sbb
push
fs
jmp
sub
inc
cmp
inc
xchg
leave
cmp
lea
and
mov
and
aam
test
push
lcall
lahf
and
mov
push
fdivrl
push
lret
inc
xchg
xlat
mov
mov
and
mov
adc
sub
mov
pop
sahf
pop
pusha
dec
imul
jns
mov
push
iret
movl
pushf
pop
aas
jg
and
in
imul
cs
mov
jnp
shlb
rclb
dec
lcall
lret
jmp
ss
movsb
cmc
cmp
test
fiaddl
mov
mov
ret
outsl
push
jecxz
adc
daa
jno
dec
mov
push
cwtl
inc
pop
jb
push
inc
cwtl
stos
jbe
mov
push
popf
dec
rcl
mov
out
sbb
mov
xchg
cwtl
ljmp
outsl
in
sbb
inc
add
ftst
xchg
cmp
lds
aas
adc
inc
mov
jmp
xchg
and
push
test
mov
adc
xorb
sbb
push
out
fidivrl
out
sub
dec
ror
nop
inc
shll
push
xor
sub
inc
rorb
jp
repnz
cld
xor
xor
orb
imul
push
mov
out
stc
push
mov
mov
push
insb
roll
fistl
sbb
dec
mov
push
push
mov
repz
or
lock
inc
rcrb
jmp
jbe
sbb
lds
sub
imul
mov
push
push
push
les
outsl
je
ss
add
add
pop
xor
loope
push
adcl
xchg
dec
div
and
jp
shrl
mov
negl
int
sub
jbe
pushf
xchg
popa
xor
jg
or
xchg
inc
popa
pop
stc
push
ja
xor
sbb
add
cmpb
adc
and
jp
jbe
push
pusha
xchg
dec
jl
int
lahf
sbb
out
jecxz
cmp
je
mov
lods
pop
or
mov
addr16
mov
jae
or
mov
xchg
and
jge
mov
mov
cwtl
mov
popf
add
scas
enter
or
or
iret
out
adc
clc
jae
mov
jmp
fidivrl
cmpsl
fs
inc
or
mov
add
aam
and
xchg
push
adc
mov
enter
xchg
jmp
pop
mov
dec
test
add
negb
pushl
subl
lahf
loopne
arpl
lahf
ret
ret
outsl
out
mov
sarb
pop
adc
sbb
repnz
xchg
dec
stos
jg
cmc
cmpsl
jl
mov
add
or
test
repz
add
xchg
cmp
pushf
jecxz
or
out
xchg
test
mov
stc
das
daa
les
dec
sti
pop
cltd
mov
sbb
lret
or
dec
mov
adc
outsb
push
jnp
in
sbb
call
in
dec
jle
fidivl
loop
or
cmpsb
int
in
jne
mov
fwait
xor
out
xchg
cmp
test
pop
cs
dec
jns
arpl
add
cmp
xchg
adc
cmpsb
sub
and
ss
mov
add
push
cmp
xchg
mov
dec
dec
mov
lock
xor
shrb
mov
mov
movsb
movsl
mov
adc
sub
dec
xchg
xor
xchg
mov
or
test
sub
xchg
inc
mov
out
fstl
pop
push
test
gs
fidivs
outsb
aad
push
cmc
shlb
andb
lock
xlat
loope
inc
sub
jne
int3
xor
xchg
outsb
inc
jl
rcr
xchg
dec
bound
xchg
mov
call
cmp
out
add
mov
adc
mov
test
lock
jp
push
add
inc
fnsave
out
sbb
cmpsl
xchg
dec
loope
hlt
push
push
push
out
adc
or
add
or
mov
es
xchg
xchg
mov
cmp
xor
jle
lods
loop
movsl
sbb
sbb
imul
mov
cmpsb
sbb
xor
add
jb
mov
movsb
cltd
inc
repnz
pop
jae
mov
cmp
aad
sbb
add
and
je
pop
pop
sarl
inc
xlat
push
popa
enter
es
loop
fisubl
jnp
out
xor
inc
or
sbb
int3
dec
ja
lcall
mov
sub
loop
cli
imul
ret
in
cmp
fdivrl
mov
outsb
or
sbb
cltd
add
out
mov
lret
xchg
adc
daa
daa
lret
fmuls
dec
inc
sub
das
arpl
xchg
pop
outsl
add
mov
daa
insb
imul
repz
xchg
das
xchg
ret
mov
les
addb
or
xor
pop
dec
jmp
fwait
mov
in
fdivr
cmp
cld
sub
adc
sub
aad
pop
in
ret
jb
mov
or
out
into
pop
test
test
mov
inc
add
push
inc
mov
mov
shll
fisubrs
adc
add
cltd
fisubl
lret
sub
testb
push
les
dec
jg
stc
sbb
loopne
inc
enter
or
shl
movsb
push
dec
adc
push
stc
mov
fcoml
inc
xchg
cmp
mov
mov
adc
int
dec
jns
push
aad
gs
rorb
pop
jge
sarl
mov
jne
sub
sbb
or
clc
outsb
outsl
push
jb
sbb
pop
cmpsl
cmp
pop
ret
int3
fidivrs
fwait
addr16
cmpsb
sub
popf
ret
out
push
lods
xchg
cld
sub
in
xchg
in
test
dec
in
push
lret
iret
mov
xchg
mov
insb
jge
aas
mov
jno
jecxz
frstor
cli
inc
dec
fidivl
mov
sub
int3
inc
xor
fcomps
daa
inc
dec
xor
mov
inc
jo
rorb
sub
sub
mov
outsb
test
daa
cmp
cmp
icebp
mov
loop
mov
cmp
jg
pop
int3
addr16
mov
inc
daa
imul
jbe
mov
xchg
sub
xor
daa
scas
imul
and
add
and
jo
clc
out
jl
push
jmp
lret
jp
add
xlat
inc
dec
fwait
test
ljmp
push
push
add
ret
jecxz
sbb
adc
loopne
fwait
inc
subb
and
lret
sti
adc
add
inc
xor
add
cmp
add
imul
and
cld
roll
cltd
or
pop
call
movsb
push
ficompl
lods
out
dec
insb
dec
xlat
sub
adc
pop
mov
cltd
or
loopne
hlt
inc
and
data16
icebp
lret
push
sub
xchg
pop
jmp
pop
sarl
sbb
std
inc
dec
pop
call
mov
mov
cmpsl
sub
mov
fadds
pop
xlat
test
fisttpll
cmp
mov
add
and
and
or
ss
add
dec
adc
lods
sti
out
xlat
sub
repz
repnz
mov
fwait
sub
dec
das
xor
or
and
lods
mov
scas
cmp
add
jbe
mov
pusha
inc
cmp
xor
push
nop
mov
pop
xchg
inc
das
mov
sub
push
lods
ret
cmp
int
adc
push
jmp
mov
add
push
js
xchg
pop
push
or
sub
xor
mov
outsl
xchg
lret
out
and
mov
std
leave
out
add
insb
jno
sti
push
pushf
rcrl
and
outsl
sub
in
xor
sub
add
dec
fiadds
mov
dec
inc
int3
ficoms
push
arpl
sbb
mov
icebp
in
cmpsb
cld
in
std
negb
flds
xor
jg
xchg
dec
mov
roll
jle
jp
inc
rcr
mov
push
pop
mov
cmpsl
std
xchg
or
add
stos
sbb
sbb
stos
xor
rcrl
clc
les
in
ret
inc
or
arpl
sbb
lock
stos
int3
hlt
adc
pop
pop
cmp
stc
sahf
fs
fadds
mov
add
xlat
cltd
mov
stos
outsl
bound
fmuls
fldcw
jbe
xor
repnz
les
and
scas
pusha
cwtl
cmp
das
cs
gs
pushf
adc
ss
icebp
movsb
dec
mov
call
daa
or
mov
popf
sub
cli
sahf
jge
mov
incb
fdivrl
sub
sbb
jo
xor
jb
cmp
arpl
xor
cmp
or
stc
clc
pop
sbbl
ret
jb
xor
loope
mov
out
mov
adc
ss
xchg
or
cmpsl
mov
mov
add
fwait
xchg
lret
in
jge
fadd
in
fmulp
in
imul
jl
rclb
pop
aad
inc
cmp
cmpl
adc
sbb
add
repnz
fcom
add
xorl
xchg
push
push
and
data16
imul
mov
fwait
bswap
dec
mov
cmpsb
sub
pop
push
cmp
shll
jbe
push
jmp
push
out
and
pusha
xchg
jne
jl
mov
sub
mov
add
nop
test
dec
inc
add
out
xchg
xchg
pop
cmpsb
cmpsl
xor
in
test
pop
mov
in
xlat
push
xor
sbb
das
out
andb
daa
or
daa
push
cmpsl
addr16
test
jl
into
add
or
mov
xlat
and
cld
dec
hlt
repz
nop
mov
lret
jo
xor
aas
lods
rclb
push
lahf
add
ret
jecxz
loopne
sbb
je
add
icebp
dec
mov
mov
and
mov
dec
mov
inc
insl
mov
rep
test
jmp
in
adc
pop
clc
dec
aam
icebp
fs
and
lahf
lock
stos
ljmp
cmp
pop
xchg
out
jae
sub
jp
test
out
rcll
scas
add
inc
sbb
pushf
pop
mov
xor
jnp
xchg
iret
ret
loop
or
sub
dec
push
sub
inc
test
xchg
scas
mov
or
stos
jmp
jl
push
in
nop
out
or
andb
pop
add
js
mov
adc
inc
cli
and
lds
jns
sti
js
inc
sub
call
imul
mov
pop
rcll
jle
mov
enter
scas
jnp
dec
fbld
mov
xchg
jnp
imul
jne
cmp
test
mov
mov
out
imul
call
push
xchg
dec
mov
loope
data16
dec
xchg
adc
jge
sti
ror
mov
stos
dec
adc
ljmp
fs
mov
subl
inc
into
cmp
cmc
push
outsl
push
call
add
je
cltd
push
xchg
insl
dec
jo
and
mov
aam
sbbl
fsubr
iret
push
cwtl
cmp
lock
call
mov
and
or
dec
jno
cmp
mov
das
aaa
pop
sub
hlt
xor
or
movb
cli
pop
leave
cmpsb
inc
pop
add
mov
cmp
leave
dec
dec
clc
int
sbb
cmp
outsb
mov
call
fcom
add
rolb
stos
sbb
add
dec
fcom
addr16
push
in
jg
sub
cmovg
dec
mov
adc
sbb
int
pop
pop
add
testl
mov
stos
in
test
xchg
imul
sub
inc
test
out
sarb
rorl
lret
add
mov
mov
push
jl
inc
sarl
clc
lahf
pop
jg
ljmp
fnstsw
cmp
mov
je
aas
arpl
jo
imul
bound
fsubs
dec
addl
cmp
roll
and
inc
ret
push
hlt
in
jecxz
daa
xchg
xlat
das
pop
push
or
push
and
jl
pop
cwtl
sbb
push
fsubr
test
call
inc
xor
fstpt
and
jecxz
popa
xor
lahf
xor
or
popa
mov
cmpsl
mov
pop
aad
out
in
fbld
push
fs
mov
mov
pop
mov
mov
xor
mov
push
hlt
sbb
int3
test
movsl
arpl
sub
mov
incl
rol
xchg
aaa
jg
rcr
test
sbb
push
icebp
test
sub
xchg
aam
in
out
loopne
mov
cmp
xchg
jmp
sahf
sbb
popf
sbb
pop
pop
pop
js
loope
xchg
cmpsb
aad
xlat
sahf
mov
mov
mov
mov
dec
shll
insb
sub
inc
mov
dec
icebp
xchg
test
mov
xor
sbb
insb
shll
push
lret
jo
add
inc
mov
and
aad
sub
dec
inc
addb
sub
adc
aam
test
inc
shll
or
mull
cmp
out
mov
call
xor
stc
cmp
fimull
fisubrl
cmp
push
pop
mov
fistl
decl
test
ja
aaa
ljmp
xchg
xchg
nop
test
cs
int
lock
dec
insb
adc
and
insb
and
adc
int
pushf
push
cmc
in
jnp
push
xchg
xor
fs
out
repnz
xor
les
insb
cwtl
jns
dec
jecxz
mov
fucomi
pop
setns
and
inc
dec
add
xor
les
insb
pop
repnz
in
push
test
jmp
bound
lahf
cli
pop
fcomps
filds
push
lock
sbb
pop
enter
mov
add
lret
stos
repnz
jg
pop
cmpsb
movsb
mov
push
sub
pop
jns
das
inc
aaa
add
inc
bound
mov
push
fwait
adc
mov
scas
in
popf
dec
test
out
dec
adc
mov
and
mov
sub
das
xor
negl
mov
fsubl
data16
das
jb
scas
mov
adc
popa
push
cli
cpuid
dec
xchg
and
inc
fiaddl
gs
inc
adc
call
sbb
mov
jns
sub
push
add
push
outsb
dec
mov
pop
push
pop
mov
out
sub
sahf
mov
mov
fdivrl
mov
fildl
leave
outsb
iret
fidivrl
cltd
lds
mov
jmp
js
dec
adc
push
add
std
lods
dec
add
aas
rcr
xor
xor
imul
xchg
pop
pop
mov
popa
cwtl
jo
push
xor
and
fistl
jb
fadds
add
cmp
mov
cmp
dec
int3
xchg
dec
pop
movsl
mov
pop
fisttps
popa
cld
into
pop
jle
repz
adc
subb
adc
aaa
sar
push
mov
dec
scas
enter
jp
aad
adc
data16
mov
out
fadd
jnp
ds
push
andl
mov
and
push
pop
sahf
mov
pop
imul
jbe
stos
sub
cmpsb
dec
cmp
repnz
mov
mov
rorl
pushf
inc
xchg
sti
je
leave
enter
ficoml
xchg
pop
push
lret
out
and
jge
adc
push
lahf
in
jmp
jle
ret
rcll
clc
mov
push
pop
lret
dec
cld
lcall
xorb
fistpll
cmp
adcl
mov
into
int3
mov
cmp
push
jnp
xchg
pusha
lahf
dec
mov
gs
mov
dec
sarl
hlt
pop
fs
mov
xchg
enter
cmp
bound
adc
xor
jmp
int3
lea
jns
push
xor
imul
out
in
repnz
jmp
andb
movsl
loop
scas
sbb
insl
sbb
add
mov
push
ror
pop
add
and
lret
clc
les
jb
sbb
mov
fdecstp
mov
pushf
sahf
dec
imul
cltd
xchg
hlt
aam
mov
xchg
jne
pop
adc
sbb
xor
imul
cld
setl
int3
dec
icebp
in
adc
jmp
ficompl
addr16
les
outsl
cmpsb
sbb
mov
adc
shrb
push
sbb
xchg
mov
mov
xor
cmp
xchg
inc
pop
and
lds
gs
ret
aaa
push
in
xor
sub
dec
or
shrb
mov
std
subl
shll
dec
dec
out
in
xchg
dec
mov
daa
xchg
out
xchg
or
fidivrs
inc
ljmp
rolb
in
ja
xchg
sahf
xor
ss
std
out
out
outsb
push
adc
inc
xor
stos
enter
das
xor
into
cmpsb
pop
inc
push
inc
cmp
sbb
adc
ljmp
lret
call
mov
adcl
push
push
pop
out
xchg
imul
pop
insl
inc
xchg
cli
rcll
lock
mov
sbb
adc
aaa
jae
aas
adc
dec
and
flds
sbb
add
imul
mov
jl
jle
rcr
fsts
sub
fcoml
adc
sub
xchg
cwtl
outsl
add
aad
adc
je
mov
fdivrl
push
cs
fiaddl
in
repnz
pop
mov
stc
frstor
stos
inc
out
adc
sbb
es
hlt
lcall
dec
lods
xchg
cmpsl
and
shll
push
adc
xor
xchg
xchg
adcb
test
movsb
nop
mov
jecxz
xchg
and
xchg
jo
push
dec
mov
jge
dec
or
mov
out
push
xchg
sbb
in
sub
loopne
jp
aaa
pusha
out
mov
loop
loop
mov
aaa
mov
adc
mov
ds
adc
roll
jge
rcl
sub
push
mov
movsb
cmp
xchg
pop
mov
divl
mov
aas
sbbb
out
xchg
xchg
jl
imul
jg
cltd
mov
push
bound
dec
jg
data16
ljmp
or
add
push
adc
outsl
jbe
cmp
xor
sub
xchg
lods
mov
sti
cwtl
outsl
sub
scas
mul
gs
sti
test
movsl
fidivs
les
jnp
pop
daa
fisttps
movsb
and
std
sbb
out
sub
bound
insb
test
nop
add
add
imul
bound
in
inc
stc
mov
add
pop
add
and
push
es
pop
push
lret
add
out
jae
test
rorb
movsb
mov
inc
dec
loop
out
pusha
adc
dec
repz
cmc
pop
cmp
out
divb
dec
aas
rdpmc
add
cli
dec
iret
jno
mov
mov
sbb
and
add
jb
ss
inc
out
outsb
popf
ss
mov
enter
mov
fbld
notb
mov
inc
sti
mov
mov
cmp
and
mov
popa
aas
xchg
ret
push
les
jns
adc
push
out
push
mov
fdivp
push
insl
sub
push
mov
int3
add
fmul
xor
mov
cmp
shrl
xchg
mov
add
mov
enter
mov
es
inc
and
sub
int
hlt
sbb
lcall
and
imul
adc
xor
and
out
mov
pop
loope
xchg
addb
dec
pop
dec
aam
push
push
enter
add
ret
add
inc
std
lahf
loopne
add
cmpsl
mov
loopne
fwait
notl
or
popa
or
cmp
pop
inc
mov
fstpl
lret
repz
sahf
sti
jecxz
shrl
add
push
fldenv
addr16
test
int
fstl
arpl
mov
loop
sub
pop
pop
xor
iret
ret
stos
or
fcomi
add
sbb
pop
inc
xchg
popl
jno
test
jl
loope
cmc
pusha
mov
sarb
pop
xor
mov
cltd
mov
scas
jmp
inc
adc
mov
dec
pushf
je
dec
jne
loop
lcall
or
fidivl
push
outsb
outsl
aas
cmp
xchg
pop
outsb
imull
jne
mov
mov
push
mov
mov
adc
shlb
adcb
mov
or
xor
inc
js
push
and
cld
pop
xchg
pop
push
push
pop
pop
mov
mov
jp
shrl
mov
mov
movsl
aad
sub
enter
mov
movsb
lods
mov
adc
sbb
dec
dec
push
and
in
jge
push
push
jnp
popf
push
xchg
loopne
push
movsl
or
and
stos
mov
pop
ret
sbb
ficompl
jnp
xchg
stos
dec
fwait
lods
adc
pop
imul
pop
jg
loop
xchg
fsubr
cltd
fistpl
mov
mov
notl
mov
xchg
sub
imul
popl
mov
dec
or
xlat
mov
mov
fcoms
push
repnz
mov
xor
sbbl
testl
arpl
pop
jle
jo
or
test
in
jl
loopne
mov
in
jecxz
adc
mov
out
mov
fucomip
std
pop
out
sti
mov
test
fnstsw
mov
adc
mov
mov
sub
aam
mov
sub
outsl
stos
fs
xchg
xor
inc
xor
mov
dec
sub
jno
fldt
scas
dec
jmp
add
and
stos
mov
push
pop
in
fs
xchg
jb
out
cli
adc
call
add
push
std
mov
std
lods
inc
test
lock
sbb
fmull
sub
stc
leave
fdiv
sbb
repnz
js
push
ret
mov
and
bound
mov
test
mov
cltd
in
xchg
movsl
or
mov
movsl
shrb
sub
sub
das
mov
dec
ficoml
notb
cwtl
lods
paddsw
sbb
jb
push
orb
nop
pop
jmp
mov
sti
ja
imul
cmp
jle
movsb
iret
jmp
cmp
dec
sbb
rcll
outsl
mov
add
add
push
xor
lods
ss
mov
pop
addl
add
notl
loope
or
jo
mov
in
lods
push
mov
mov
push
aas
pop
int3
ja
add
stos
xor
hlt
push
pop
enter
in
outsb
jg
lods
jge
add
jmp
mov
inc
and
fists
pop
imul
add
packssdw
lret
add
cwtl
aaa
std
es
out
ljmp
or
jle
jae
mov
imulb
mov
ss
push
mov
inc
add
pmuludq
test
iret
sub
mov
xor
jmp
inc
orb
std
ljmp
fsub
dec
pop
lret
xchg
cmp
sub
dec
je
inc
icebp
bnd
add
cmp
outsb
aad
pushf
jne
lret
out
pop
push
icebp
cmp
cmp
jne
or
push
test
pop
aam
js
je
inc
or
and
add
pop
or
adc
daa
lret
je
inc
mov
dec
add
jl
cltd
and
jmp
jecxz
or
jl
or
or
mov
sub
fsubr
xchg
mov
fadds
mov
mov
bound
push
std
push
ficompl
movsl
xor
cmp
or
lret
call
fwait
or
rcrb
cmpsb
in
sbb
and
and
aam
ja
and
fstpt
insl
imul
lret
dec
jmp
popf
aas
push
mov
pop
xor
cmpb
adc
jmp
popf
lea
das
ret
mov
push
jge
xor
lods
mov
sbb
pushf
ret
push
dec
jae
sub
sbb
push
or
fimull
mov
inc
fsts
dec
inc
in
into
jge
xorl
dec
xor
sub
adc
mov
iret
fs
cltd
push
sbb
cmp
in
imul
sbb
jg,pt
sbb
ljmp
xchg
in
in
sahf
adc
out
iret
or
mull
stos
les
btr
and
mov
xchg
js
cmp
repz
scas
mov
lahf
push
and
test
adc
mov
xchg
cmpsb
mull
push
out
int3
push
mov
or
inc
imul
xor
cli
add
jecxz
inc
ljmp
cmp
sub
icebp
mov
outsb
shr
lcall
mov
repz
fcmovbe
inc
mov
sub
sub
push
jmp
mov
out
push
push
ja
aad
sbb
sbb
popa
cmp
mov
inc
pop
inc
aaa
mov
out
mov
jp
push
xchg
cmpsb
and
jmp
addr16
sbb
mov
pop
popw
xchg
insl
jno
xchg
sub
dec
push
popa
sub
dec
idivl
cmpsb
lahf
lds
or
add
leave
out
mov
sub
inc
ret
jl
sub
or
push
push
aam
dec
adc
lods
ficoms
or
sarb
cmp
enter
inc
je
xchg
or
repz
in
push
sbb
loop
mov
outsb
insb
addr16
sbb
mov
clc
jp
in
mov
pop
fmull
loopne
pop
or
mov
int
addr16
xchg
xchg
in
aaa
setbe
jns
mov
pop
out
mov
jmp
or
aas
inc
test
fisubl
lds
jl
test
inc
cli
subb
cmpsl
inc
xchg
and
cs
add
push
lds
inc
push
scas
sub
ljmp
ficomps
ljmp
loope
sbb
lahf
xchg
mov
cli
cmp
call
out
mov
push
call
das
adc
in
ret
mov
jne
lea
cli
fwait
decb
jb
mov
add
inc
xchg
adc
std
inc
fildl
test
sbb
add
mov
out
mov
aad
cmp
mov
fsts
mov
adc
aaa
cmp
jecxz
inc
nop
shl
out
or
repnz
xor
mov
inc
loop
adc
icebp
ds
and
jns
inc
loope
cld
jnp
sbb
insb
jne
mov
imul
aad
std
jmp
xor
dec
xor
sahf
mov
mov
fwait
shrl
sbb
sub
mov
mov
out
das
orl
lcall
jae
lcall
call
test
lcall
mov
aad
rorb
rclb
add
je
loope
imul
lret
xchg
mov
rcr
sbb
lods
addr16
outsb
adc
jno
or
add
adc
icebp
push
mov
jg
mov
dec
pop
fldt
mov
je
jmp
out
adc
mov
xchg
out
add
sub
mov
dec
ffree
push
lret
insb
bound
leave
push
dec
adc
xlat
jmp
je
roll
inc
repz
sti
fldt
fs
or
call
mov
cs
or
stc
pop
cmpsl
sar
sub
xchg
jo
mov
mov
je
adc
test
xchg
and
data16
lock
enter
and
stos
ja
loope
pop
loop
rclb
mov
adc
add
das
jno
push
sub
loope
or
mov
mov
push
call
inc
arpl
add
orl
dec
dec
or
ja
mov
lret
testb
lea
les
jle
fsubr
mov
mov
jnp
inc
mov
imul
push
jle
fwait
mov
out
rcrl
inc
or
insl
jp
sbb
dec
int3
cs
out
cmp
jp
out
dec
dec
repnz
xlat
adc
ret
and
shlb
inc
into
testl
outsl
add
mov
mov
push
popf
or
es
pushf
jmp
ficompl
test
and
das
in
enter
xor
mov
inc
js
push
jp
inc
and
scas
push
ja
hlt
lcall
aam
pop
or
aam
cmp
push
imul
or
pop
mov
sbbb
pop
repnz
add
xor
and
pop
push
popa
mov
imul
shl
and
test
mov
dec
xchg
dec
ss
out
notb
outsb
imul
lods
aad
lret
or
cmp
push
lds
test
jle
clc
mov
lods
xchg
fwait
ja
cs
push
in
shl
inc
sub
stc
jo
cltd
add
sbb
mov
dec
jno
sbb
movsl
push
addr16
out
mov
xor
rorl
adc
roll
push
sahf
into
repnz
xchg
mull
orl
fcmovbe
cmpsl
clc
adc
dec
mov
imul
test
xor
xchg
mov
sbb
es
push
std
imul
outsb
das
int3
xchg
call
and
cmp
imul
repz
jae
xchg
call
mov
mov
or
or
inc
pop
les
sbb
daa
add
pop
test
xchg
xchg
test
push
mov
mulb
cwtl
dec
push
ret
iret
das
out
mov
es
push
inc
lret
xchg
loope
push
sbb
sub
cmpl
jne
rcrb
and
inc
int3
inc
xlat
xchg
dec
cmp
push
pcmpeqw
div
mov
pushf
lods
jb
insl
mov
std
and
test
aaa
mov
push
push
cmp
shrl
cmpb
jle
mov
sti
imul
out
sbb
in
mov
dec
inc
inc
mov
repnz
sar
fbstp
sbb
mov
out
dec
cmp
or
aam
inc
mov
or
imul
iret
movsl
fisubl
jb
inc
test
cmp
rclb
das
out
or
mov
insb
jae
ss
cmp
ret
hlt
sbb
lods
cwtl
jl
iret
in
outsl
push
test
fdivrp
cmc
and
and
hlt
pop
cs
sbb
daa
popa
int3
cmc
imul
rcrl
pop
lret
test
cmp
repz
jg
cltd
lcall
out
xchg
mov
fwait
mov
add
jne
in
cmpsl
xor
mov
push
stc
xor
add
inc
mov
bound
mov
adc
mov
je
xchg
and
nop
adc
aad
icebp
daa
fistps
call
xchg
shl
jle
xor
loop
pop
rcl
es
cwtl
dec
xchg
jle
jl
lea
add
aas
and
xor
add
xlat
movb
sub
mov
cmp
jecxz
pop
jg
lret
xorl
and
pop
mov
lret
mov
jmp
and
out
jns
jae
push
push
test
adc
data16
sbb
inc
in
test
sti
push
scas
repz
xor
or
cmp
sbb
popf
mov
inc
dec
gs
cmpsl
aaa
dec
sbb
decl
and
out
and
pusha
icebp
bound
popf
adc
sahf
pushl
cs
fistpll
ds
inc
in
pop
mov
sbb
imul
movsb
cmc
sarl
ljmp
xchg
xchg
popf
dec
inc
call
ds
mov
fcomp
pop
mov
mov
orl
cmpsb
cli
pop
shr
push
mov
imul
mov
xchg
js
stc
pushf
je
xchg
mov
in
stos
mov
cmp
out
fucomip
mov
mov
add
mov
mov
mov
xchg
adc
dec
ja
shll
mov
icebp
mov
ja
jmp
or
push
ljmp
rcrb
sbb
hlt
sub
mov
jns
les
sub
cmp
push
fmull
pushf
cld
push
jno
adc
sbb
add
mov
mov
nop
sub
sbb
mov
and
stos
call
mov
inc
pop
mov
daa
xchg
dec
add
sub
shrb
fldl
js
push
lds
or
adc
scas
sbb
push
pop
cmp
icebp
xor
arpl
cmc
iret
addl
ret
imul
mov
or
dec
in
pop
rcr
jg
aaa
mov
mov
cmpsb
jno
add
and
jge
fdivl
dec
gs
inc
fldl
add
adc
addl
lret
js
xor
fldenv
rcr
xor
pop
pop
sub
loope
fimull
addr16
jecxz
sub
shl
daa
fistpll
cs
sbb
push
cmpb
mov
dec
cmpsb
cld
add
popa
mov
pop
fcoms
xor
arpl
pop
lock
mov
dec
mov
and
xor
fidivrl
mov
std
in
daa
jo
cwtl
inc
notb
lock
jns
pop
test
cli
pop
xor
std
arpl
mov
mov
les
outsl
mov
lret
dec
clc
loop
pop
iret
fs
lahf
ret
dec
subl
loop
scas
inc
push
sub
lcall
push
sub
pop
sub
or
mov
sub
dec
push
clc
ret
xorl
pop
sub
sub
mov
mul
mov
xlat
stos
and
scas
jbe
je
out
rcl
in
pop
push
inc
jae
or
mov
mov
stos
iret
shlb
xchg
iret
xor
dec
or
lcall
xchg
rcll
inc
cli
ja
gs
popf
roll
sbb
pop
test
sbb
dec
push
insl
aas
lock
mov
sbb
rorb
scas
or
mov
mov
jg
shll
sbb
push
shrl
lret
add
jp
testb
sarl
pop
or
pushf
inc
push
pop
mov
inc
loope
lods
cs
cmp
mov
cli
fs
mov
dec
jg
mov
addr16
inc
mov
pushl
and
jae
ja
pushf
xor
cmpsb
or
das
sbb
cmpl
in
dec
lea
fisttpll
call
mov
repnz
lea
cltd
sbb
push
push
push
xor
sti
ds
pop
lcall
and
out
ss
cld
enter
dec
push
cs
popf
mov
loop
jbe
adc
cmp
push
cltd
movsl
iret
sub
dec
addr16
aas
mov
add
fdivs
mov
jo
rcrb
shll
imul
mov
pop
and
popf
add
arpl
pop
outsl
stos
imul
and
push
lock
pushf
and
lret
bound
ret
mov
mov
fisttps
aas
jns
repz
and
repnz
fs
inc
bound
pop
push
data16
mov
mov
mov
scas
dec
adc
sbb
mov
fidivrs
cmp
push
addb
mov
xor
cmpsb
movsl
or
jnp
mov
cmp
add
lret
mov
inc
jecxz
subb
xchg
jnp
adc
js
insb
mov
idivb
adc
lret
xchg
mov
mov
std
call
leave
lahf
rcll
adc
sub
fcmovb
xchg
push
jne
out
mov
pop
adc
bound
shll
lret
pop
in
push
popf
mov
mov
xlat
stos
aad
pop
test
sahf
out
or
lea
jecxz
lds
mov
mov
xchg
push
ljmp
mov
loopne
pop
call
ficompl
aaa
mov
out
rcrb
jbe
pop
enter
sbb
adc
push
loop
mov
daa
jle
adcl
movsb
mov
sbb
cltd
mov
xlat
repnz
adc
lea
fmulp
das
mov
inc
stc
xor
or
dec
sub
or
jns
aas
sarb
mov
pop
ret
cmp
inc
leave
sub
movsl
xchg
dec
cmp
xor
mov
xlat
mov
dec
push
rcr
das
add
adc
lods
lahf
daa
or
xor
frstor
roll
jecxz
or
sub
push
mov
mov
xorb
jmp
and
mov
inc
adc
mov
push
xor
xchg
in
aad
jnp
pop
or
lcall
nop
jne
inc
stos
icebp
pop
pop
mov
les
sub
out
adc
jbe
sub
stos
in
js
aad
or
test
cmp
jno
ss
ror
jae
and
push
lret
cld
pop
nop
cmpl
insb
xchg
test
hlt
stos
xchg
mov
xchg
xchg
idiv
xor
push
mov
jno
out
jbe
inc
adc
in
sbb
outsb
push
xor
dec
push
push
push
cmp
jge
inc
fs
pop
das
test
dec
repnz
sub
fs
xchg
loop
or
jbe
inc
int3
cld
mov
test
pushf
push
testl
sbb
sarb
into
out
and
xorb
mov
bound
cmovne
stos
push
das
inc
pop
filds
nop
lds
gs
ss
pop
pop
xchg
in
mov
mov
sbb
sbb
jns
ss
dec
test
loop
fcompl
xchg
inc
stos
sbb
jb
fsub
ret
shr
pop
sub
xchg
add
scas
jb
cmpsb
data16
andl
arpl
pop
mov
push
addr16
pop
inc
pop
ljmp
mov
xchg
jns
push
movsl
int
lcall
sub
imul
jo
dec
mov
adc
cmpsb
fwait
lock
fwait
hlt
out
cmp
rorb
xor
out
lcall
mov
imull
dec
inc
jmp
dec
int3
nop
jmp
pop
fcomps
or
push
cmp
jp
cli
add
cmc
mov
incb
push
cmc
test
adc
rcll
aaa
xchg
mov
fsubl
and
push
xorb
sahf
and
mov
int
lods
sarb
ds
notb
pop
mov
ljmp
rcl
outsl
mov
cmpsb
and
dec
aam
and
dec
loope
cmp
jo
je
daa
nop
inc
repnz
outsl
gs
nop
push
jl
dec
jo
std
add
gs
push
idivb
int3
or
lahf
cmpsb
imul
in
in
inc
outsb
out
lock
dec
outsl
fsubrs
insl
mov
in
jp
xor
hlt
lea
cmp
dec
es
pop
scas
pop
fucomi
or
sbb
xorb
lahf
ds
jae
adc
mov
lret
adc
xchg
push
sub
js
cmp
gs
aaa
mov
mov
jb
mov
xlat
loope
negl
mov
jbe
xor
pushf
int
xchg
sbb
mov
sub
jne
sbb
sub
inc
jne
mov
xor
aas
cmpsl
dec
in
xlat
das
mov
jge
repz
cli
pushf
ds
push
lods
movsl
out
adc
popf
cmpsl
jns
and
ret
sub
js
flds
jno
clc
fstps
aad
jle
sbb
ds
in
test
xchg
notl
int
scas
mov
leave
or
xchg
push
mov
mov
xor
cmp
pop
clc
jle
es
mov
test
dec
rclb
lahf
clc
aas
int
loop
mov
int
fs
lahf
inc
jb
xchg
mov
bound
mov
mov
je
mov
xchg
arpl
clc
lcall
xchg
je
inc
pop
add
aam
in
das
movsl
xrelease
jl
cmc
xchg
lret
mov
push
mov
xor
mov
push
fs
addb
push
jmp
int
adc
aaa
and
mov
fbld
dec
insb
mov
mov
jno
adc
sahf
jbe
dec
movsl
push
sarb
xor
sbb
ds
in
xchg
fidivl
rclb
shl
push
popa
cmp
cmp
and
jb
mov
test
aaa
ljmp
popf
push
js
jae
pop
jmp
mov
dec
or
rorl
adc
mov
ja
jp
mov
ss
lock
ss
jno
ret
call
cli
jnp
inc
inc
lods
inc
pop
pusha
stos
jmp
test
repz
pop
xchg
mov
ja
rcr
sbb
mov
fidivrs
push
add
dec
out
jmp
inc
pop
loopne
inc
sti
bound
jecxz
fisubrs
leave
clc
call
pmuludq
mov
inc
pop
out
scas
pop
pop
lret
push
dec
out
add
jbe
pop
add
jge
mov
ja
cltd
fsts
push
call
repz
xchg
js
es
adc
and
jle
push
mov
mov
ja
sti
jo
mov
dec
ja
addr16
dec
hlt
lods
in
gs
ss
nop
dec
insl
jno
xchg
loop
mov
mov
cmp
pop
int
bound
mov
idiv
xor
xchg
pop
inc
inc
stos
add
bound
jmp
movsb
scas
sub
testb
push
dec
sahf
fcmovb
sbb
in
mov
xchg
xchg
mov
add
push
int3
das
lret
movsb
mov
sbb
aad
mov
aam
sbb
or
adc
leave
cmpsl
stos
aaa
add
or
pusha
imul
mov
push
jae
cwtl
mov
je
sub
jns
jno
push
dec
ja
cmp
sbb
xchg
shlb
cli
in
jns
sbb
subb
push
arpl
and
test
ficoml
aad
push
xchg
sub
inc
push
and
mov
pop
or
jae
loopne
sub
into
dec
and
mov
int3
test
push
mov
outsb
sbb
sahf
mov
pop
dec
repnz
cltd
add
dec
fimuls
jecxz
jbe
subb
cmp
and
or
jmp
adc
mov
filds
mov
rcll
mov
dec
jmp
test
jae
shll
mov
es
rcrb
xchg
mov
lcall
ror
icebp
sub
jns
clc
mov
ds
cwtl
cmp
inc
mov
and
or
leave
pop
dec
outsb
inc
sbb
imull
iret
pushf
inc
jbe
cmp
jns
or
inc
mov
push
subl
repz
cmc
or
pop
mov
fadds
sbb
mov
push
incb
mov
dec
fcmovne
dec
mov
inc
xlat
test
mov
iret
cltd
jle
test
call
jecxz
mov
insl
mov
cwtl
sub
add
push
fbstp
sub
jne
dec
loope
test
add
je
mov
clc
jne
fwait
test
xlat
xchg
adcl
je
insl
call
mov
jno
loop
jo
mov
fisubs
push
dec
lea
lret
dec
or
xchg
clc
ja
xor
mov
fwait
adc
xchg
mov
lret
subb
dec
cmp
adc
neg
je
push
cmpsl
es
gs
dec
and
and
stos
mov
pop
stc
test
mov
pop
adc
orb
mov
test
subl
adc
mov
cwtl
decl
icebp
adcl
call
cmp
sub
cld
sahf
sahf
push
adcl
aam
mov
xchg
jmp
xlat
gs
lcall
in
mov
nop
aam
int
fucom
cmp
pop
std
gs
ss
dec
xorb
out
scas
repz
push
fsincos
cmp
dec
jl
inc
dec
jecxz
mov
std
push
adc
push
mov
mov
mov
mov
mov
and
mov
hlt
sub
or
mov
js
sub
scas
out
and
ds
mov
js
dec
shlb
cltd
stos
daa
pop
dec
orl
std
and
test
lahf
dec
xor
insb
movq
pop
lods
int3
stc
int3
jg
int3
adc
mov
and
push
pop
dec
adc
sbb
jae
fsubl
dec
lods
xlat
adc
subl
xlat
mov
mov
mulb
lret
popf
repz
xor
push
push
call
pop
scas
aam
cmpsb
arpl
movsl
mov
and
mov
addb
out
popf
int
stc
ds
in
fistpl
xlat
test
jg
into
mov
mov
xlat
fbld
orb
dec
and
jno
push
cmp
and
movsb
out
sbb
push
mov
test
jmp
jo
cmp
fdivrs
and
push
test
or
outsb
roll
outsl
cwtl
ljmp
imul
lock
sbb
adc
push
push
adc
mov
push
push
mov
mov
and
cmp
push
cmp
fstpl
lods
fcmovnbe
fs
pop
push
or
sub
add
gs
nop
mov
xchg
add
iret
dec
aaa
iret
adc
mov
sahf
jl
or
cmp
ja
out
paddusw
sub
iret
cmp
cmp
add
iret
inc
sub
ds
push
mov
out
push
push
enter
push
dec
test
notl
jmp
fidivl
aam
insl
ret
mov
and
jmp
adc
add
push
pop
push
int3
mov
stos
repnz
lret
in
dec
clc
fnstsw
and
adc
inc
ffreep
add
mov
add
and
inc
push
jae
mov
repz
dec
mov
xorb
adc
pop
pushf
sbb
sub
sti
inc
test
pop
sbb
in
sar
test
dec
stos
inc
adc
lock
icebp
into
lret
inc
mov
lahf
mov
pop
sti
mov
jmp
mov
push
jl
cli
scas
cltd
shrb
outsl
mov
sbb
xchg
ljmp
ljmp
lock
sbb
cmp
jae
cmp
xor
and
dec
ficoml
lods
or
rcrl
push
adc
orb
inc
jmp
loopne
push
cmpl
mov
jb
inc
cmp
pop
into
scas
mov
ja
mov
lods
mov
push
aas
cmp
ja
fstps
adc
jmp
or
aas
dec
and
sub
xorb
int
jp
adc
adc
testb
fadds
xor
icebp
sahf
icebp
mov
stc
out
rolb
inc
xchg
xchg
sahf
mov
es
fnstenv
cmp
cmp
ljmp
jecxz
jmp
cmp
mov
icebp
push
pushf
in
mov
push
dec
outsb
rorl
add
addr16
and
cmc
insl
ss
cwtl
movsb
and
mov
cwtl
jge
daa
lret
pop
call
cmp
push
ss
lret
orl
push
stos
mov
push
imul
movl
xchg
pop
sbb
cs
push
jbe
inc
xor
cmp
aad
aam
ss
mov
lds
pop
xor
loop
repz
aam
jae
pop
lret
fucom
add
mov
pop
push
scas
adc
pop
jecxz
cmp
into
rorb
and
pop
pop
pop
sub
inc
outsb
pop
sbb
sub
mov
clc
vmovss
mov
ret
movsl
out
movsb
pop
lea
dec
mov
ss
mov
in
scas
mov
rcll
dec
in
adc
dec
mov
adc
mov
and
aas
pop
call
cmp
out
into
ret
jns
daa
mov
lds
addr16
push
push
roll
or
xchg
mov
jl,pt
jl
add
mov
xor
or
call
dec
push
int3
fcmovne
cli
cli
jno
sbb
int3
jmp
addb
iret
daa
clc
out
jns
loope
dec
xor
ja
ror
mov
mov
adc
push
sub
jg
repnz
mov
mov
idivl
clc
call
ret
js
pop
pop
push
icebp
shr
add
arpl
pop
fnstenv
subl
repnz
shll
mov
fdiv
hlt
jns
int
sti
xor
aad
push
cmp
popf
pusha
ja
pop
ds
or
inc
push
xchg
mov
dec
jp
mov
insb
mov
mov
mov
sub
sub
lret
xor
daa
adc
xchg
mov
pop
and
in
dec
lcall
push
ljmp
xor
sub
mov
mov
inc
sbb
cmpsl
subl
lcall
sahf
fnstcw
inc
dec
add
fisttpll
jge
adc
add
sbb
cmp
das
add
lods
xchg
mov
adc
dec
popa
xor
in
sub
jmp
inc
iret
cwtl
mov
mov
pop
or
in
aas
testl
mov
lret
into
loopne
jecxz
aam
push
sti
pop
push
mov
out
addr16
je
mov
fiadds
mov
in
aas
test
and
ret
add
push
sbb
or
mov
pop
or
push
in
jae
adcl
xchg
dec
aaa
stos
mov
jmp
inc
xchg
insl
adc
test
int3
sahf
jp
push
push
adc
cmp
es
add
jnp
inc
cmp
xchg
iret
les
aam
sub
scas
adc
insb
add
cmp
and
dec
popa
pop
repnz
add
add
stos
xor
nop
fcoml
cmc
push
add
sbb
cs
lods
add
mov
js
aaa
mov
es
xchg
test
jmp
mov
pminsw
inc
xor
rolb
insb
xchg
test
aas
add
call
xor
lcall
and
mov
xchg
ret
ror
xchg
ja
mov
inc
loope
mov
mov
push
or
in
adc
test
xlat
add
mov
cwtl
ljmp
push
pop
bts
inc
xchg
stos
jg
cld
push
inc
xchg
xchg
pop
push
ret
cld
jmp
lock
push
jno
sub
stos
add
xchg
addr16
xchg
sbb
addr16
dec
push
mov
lret
mov
hlt
lock
sub
ss
sahf
or
insb
stc
ret
dec
and
pop
aad
adcl
lret
add
pop
pop
xor
dec
cmpl
jecxz
lahf
scas
adc
mov
loopne
add
fldt
pop
icebp
mov
loopne
xor
cmc
sbb
adc
mov
mov
push
aad
sbb
ret
sub
ljmp
lcall
fs
lods
and
jnp
sbb
adc
add
cmp
jnp
movsb
stos
fs
mov
je
je
or
mov
lds
lods
xor
or
rcll
arpl
jle
push
sbb
fbstp
lcall
add
cmp
or
bound
and
mov
insl
popf
data16
push
dec
sub
test
push
rcr
add
dec
es
xor
mov
cmp
insl
frstor
fdivrl
stos
pop
jno
add
push
mov
sbb
push
cwtl
jno
bound
sbb
pusha
ret
sbb
mov
inc
mov
shll
inc
cmpsb
out
arpl
hlt
mov
clc
in
add
imul
push
jecxz
sub
les
push
and
test
and
loope
adc
inc
in
sbb
out
mov
stos
push
hlt
and
ja
push
jmp
cld
push
subl
ss
mov
in
lret
ljmp
or
nop
test
out
pop
mov
into
dec
dec
call
out
and
inc
dec
mov
push
push
aad
and
sub
jae
mov
lods
xchg
movsb
or
push
xor
cld
sbb
fmuls
add
loope
mov
sub
mov
pop
ret
pop
mov
adc
push
mulb
sti
adc
aas
push
aas
aaa
and
mov
sub
add
dec
outsb
xchg
lods
jbe
sbb
lahf
cld
xchg
jne
inc
pop
mov
stc
sbbl
loopne
ds
add
addr16
mov
inc
add
fwait
and
pushf
dec
in
mov
ja
lret
je
xor
hlt
jle
pop
daa
or
or
int3
in
add
mull
mov
lock
je
stos
ror
rcrb
and
in
pop
outsl
maxps
inc
dec
mov
cltd
out
pop
pop
daa
mov
inc
inc
out
push
ja
faddl
addr16
mov
stos
jae
mov
aad
or
out
sub
add
aaa
pop
push
inc
fbstp
sahf
adc
ss
outsb
sbb
jle
push
adc
aas
jmp
mov
sbb
scas
mov
adc
cwtl
pop
mov
mov
sahf
dec
push
add
dec
pop
pop
sahf
push
pop
push
cmp
std
and
xor
ljmp
inc
jne
es
jne
pop
xlat
mov
ds
pop
cmp
add
jg
aaa
jg
dec
fildl
pop
addr16
xchg
mov
and
add
mov
dec
pop
mov
cmc
cs
push
bound
xchg
dec
xor
orb
int
add
cmc
ljmp
pop
and
lret
sbb
pop
mov
test
imull
push
push
jne
rcrl
mov
in
inc
scas
rcrl
mov
repnz
mov
dec
out
rclb
jno
in
lea
sub
in
jl
in
insl
or
cmpsb
sub
jbe
out
xor
cmpsl
into
mov
in
sbb
lret
sbb
fisttps
cmp
jge
cs
mov
jp
fadds
pop
stc
jno
addr16
mov
dec
sbb
cmpsb
fildll
movsl
jmp
xchg
cmp
dec
and
adcb
or
xchg
dec
or
mov
ja
xchg
adc
sbb
cltd
jmp
int3
mov
loopne
icebp
pop
dec
mov
aad
lods
sysexit
xor
push
popa
stos
out
dec
mov
dec
sbb
dec
cmc
xor
pop
xchg
mov
lds
cmp
andl
xchg
int3
or
or
loope
xor
lret
lret
lret
push
stos
cltd
cmpl
and
lret
mov
xchg
mov
pop
ljmp
add
cltd
xor
xchg
jo
test
mov
ja
imul
imul
fxch
xchg
test
rol
loope
add
jmp
mov
dec
pop
xor
fidivs
clc
or
pop
push
rcl
xorl
xor
adc
es
add
call
int
adc
xor
cltd
and
mov
and
sbb
or
pop
jmp
aad
adc
sahf
scas
or
dec
or
jp,pt
adc
sub
shlb
or
xchg
mov
lods
adc
mov
adc
int
fwait
push
xor
jns
and
xchg
pop
mov
mov
das
xlat
mov
lods
jle
sbb
jle
ljmp
arpl
int3
in
sub
xlat
lds
cmp
aaa
add
out
adc
pop
insb
push
stos
push
add
mov
cmc
inc
jecxz
imul
mov
addr16
jmp
movsl
scas
enter
jmp
scas
jge,pn
xor
in
push
adc
insb
pop
jge
in
push
movsl
repz
cs
out
push
jbe
test
pop
mov
stos
call
dec
outsb
ds
xchg
test
fwait
xor
addb
mov
nop
sub
cmp
pop
aam
fucomip
ret
leave
sub
lods
jae
adc
lea
xor
nop
inc
add
inc
daa
or
dec
cmp
fistpll
mov
scas
hlt
sbb
ret
cwtl
sarl
jae
and
add
int3
push
jbe
bound
in
lods
xor
xchg
outsl
cmpsb
jnp
inc
adc
add
add
mov
jle
adc
mov
push
adc
cmp
out
andl
test
cmpsb
popf
inc
push
test
mov
out
ds
adc
arpl
ret
push
jge
out
insb
into
dec
lahf
mov
xor
iret
mov
lea
sub
std
repz
or
sub
xchg
cmp
or
push
add
jbe
call
mov
or
jo
cmpsl
repnz
in
adc
sarl
push
in
xchg
mov
shll
dec
mov
mov
adc
dec
and
inc
pop
cli
mov
push
push
stos
or
in
iret
imul
sub
inc
jmp
adc
inc
into
ret
stos
sbb
fnop
sub
xchg
cmpb
int
pop
mov
aad
adc
lods
cld
push
call
out
stos
rdpmc
add
and
sahf
pushf
or
xor
jmp
jno
push
insl
jae
pop
bound
push
jl
add
subl
test
push
js
push
xor
jle
cwtl
int3
mov
iret
jb
bound
pop
xchg
mov
jle
jne
rcrl
mov
lea
add
je
test
sbb
inc
sub
pop
cmp
loop
and
sbb
jmp
fcomps
ljmp
orb
jno
inc
xor
sub
mov
das
repz
dec
mov
add
lods
stos
and
sbb
cmp
mov
icebp
iret
push
dec
js
add
inc
fcomps
pusha
sbb
cmp
add
ds
lods
not
cmp
ret
xchg
jge
je
dec
test
push
or
jmp
mov
test
sahf
aaa
mov
in
arpl
pop
in
out
es
mov
aam
aaa
imull
scas
and
mov
adc
cmpsb
add
fsubrl
push
into
into
jbe
shll
cmp
out
sbb
sarb
mov
pop
es
cmp
push
pop
hlt
jne
imul
jno
cwtl
mov
jae
sub
inc
xchg
movsl
out
stc
in
pop
fwait
lahf
fcompl
xchg
or
aam
loop
sbb
sub
sub
lods
in
adc
dec
xor
sbb
pop
std
aaa
sar
xor
popf
push
shlb
cltd
or
push
jge
mov
icebp
adc
pop
leave
mov
and
mov
int
sbb
stos
adc
jmp
adc
add
adc
xchg
and
mov
adc
jo
adc
jge
dec
sub
xor
pop
pop
cmpsl
insb
or
dec
jo
sbb
out
dec
cmp
js
sbb
jmp
mov
pop
or
inc
jl
jns
sub
mov
mov
xor
outsl
cmc
xchg
push
mov
sbb
neg
sbb
inc
mov
and
out
jecxz
mov
bound
adc
sarl
outsb
data16
dec
and
xchg
pop
call
aad
js
cmpsl
adc
pop
ds
push
daa
cmp
aaa
dec
int
out
lret
cmp
jae
sbb
clc
rep
push
cmpsb
addl
sub
xchg
imul
in
mov
roll
xor
dec
xor
xorl
push
push
mov
imul
nop
lods
loopne
mov
push
popa
lret
cmpsl
rcrl
or
ds
and
xor
into
pop
push
cmp
out
push
pop
dec
cmp
test
mov
dec
add
out
sub
mov
cmp
mov
push
mov
add
outsl
mov
jg
push
test
xchg
add
pusha
pop
mov
push
enter
adc
pop
mov
mov
sub
les
pop
stc
adc
lds
pop
fwait
xchg
push
mov
and
push
sahf
mov
pop
les
sub
dec
in
cmp
inc
les
sbb
sbb
aas
popa
ja
movsb
inc
mov
sti
mov
mov
mov
and
aad
dec
mov
or
imul
pop
sub
or
push
sbb
insl
push
in
or
xor
add
mov
push
push
add
outsl
lahf
into
xor
xor
fbld
sti
js
imul
inc
test
sbb
sbb
testb
cmc
xchg
adc
jmp
and
mov
jae
mov
ljmp
sub
rcl
hlt
sti
dec
cld
mov
jp
xchg
inc
outsl
jg
xchg
clc
cmp
nop
repnz
lods
xchg
cmp
mov
cmc
or
push
and
push
out
out
xchg
inc
mov
cli
dec
push
sub
mov
rcrl
lods
push
subb
lods
push
pop
xor
aaa
push
sub
scas
call
or
cmp
stc
loop
sti
add
scas
insb
adc
cmpsl
addb
pop
mov
jae
push
xchg
popf
pop
aaa
pop
lock
shrb
cli
dec
dec
fsts
pop
data16
pushl
cmpsl
add
aaa
sbb
leave
xchg
and
push
mov
sahf
sub
mov
cmpsb
mov
push
pop
and
inc
cld
stc
xor
add
and
jmp
jo
jb
xor
lock
imul
lret
sti
not
inc
iret
mov
sbb
push
mov
pop
jbe
mov
out
fisttpl
xor
sub
daa
stc
insb
out
es
ljmp
sti
ljmp
imul
aas
sbb
adc
aam
dec
rcrb
popf
inc
lea
adc
rclb
mov
fs
jnp
mov
addr16
lret
mov
imul
sbb
clc
adc
jbe
jne
rcll
push
or
adc
enter
aaa
cmp
and
or
pop
ss
int
and
aas
stos
pop
je
jno
adc
xchg
adc
inc
sbb
pushf
push
aas
addl
dec
aaa
rcrb
mov
push
jecxz
orb
cmp
fwait
lret
mov
lods
push
fisubrl
mov
jae
mov
add
cs
mulb
pop
std
movsb
ljmp
cli
sbb
popa
mov
arpl
dec
sub
dec
sbbb
out
and
cli
or
pop
sub
mov
je
popf
data16
inc
xchg
xor
push
pushf
xlat
inc
sbb
sbb
std
cwtl
dec
stos
add
sub
dec
cwtl
sbb
xchg
push
shr
adc
mulb
cmc
sub
clc
dec
xchg
dec
sub
sbb
and
adc
das
iret
xchg
inc
push
movsl
call
mov
lea
jne
icebp
cmc
shlb
add
in
and
fcom
push
mov
pop
sbb
ficomps
mov
insl
jp
cs
das
shl
mov
pop
sti
inc
int
out
insl
scas
jecxz
fstl
notl
jnp
pop
pop
pop
loopne
jbe
hlt
hlt
push
jp
mov
pop
mov
out
sub
sahf
jmp
xlat
sub
xchg
mov
loope
pusha
fisttps
aad
inc
push
jge
faddp
fldcw
out
outsb
add
std
xchg
sub
xchg
outsb
jb
jge
and
add
jno
jle
add
cmc
call
mov
adc
sbb
cmp
inc
adc
and
push
aad
ret
and
sbb
xchg
jno
and
pop
push
mov
fstps
ret
rorb
xor
pop
repz
cwtl
push
sahf
xor
data16
xor
pop
sbbb
outsl
repnz
mov
jle
jns
clc
and
lret
sti
adc
fsubs
inc
cmpsl
xchg
push
push
jmp
mov
in
xor
add
clc
sar
adc
out
pop
cmpsl
cmp
in
fmuls
lods
imul
lods
jle
sub
ffreep
mov
insb
test
ja
lods
insb
imul
test
sti
push
xor
shll
mov
and
int3
test
test
push
push
sub
lret
ret
lods
jecxz
lea
pop
inc
pop
adc
push
fadds
sub
test
or
scas
lret
je
enter
xchg
mov
mov
xor
push
inc
xchg
cmp
dec
dec
sbb
clc
xchg
mov
shlb
cmp
sbb
test
cmpsl
xchg
cmp
sub
xchg
aas
xchg
push
fwait
pop
loope
test
fstps
add
xchg
pop
and
push
mov
popl
add
push
outsb
loope
popa
jmp
cs
mov
cltd
sti
mov
inc
xchg
cmp
jbe
adc
cltd
movsb
lds
inc
mov
xor
dec
dec
cwtl
lret
aaa
or
inc
sbb
jns
sbb
cmc
int3
sub
sbb
nop
sbb
test
addl
xor
out
mov
dec
lea
jne
roll
add
roll
cmpsb
test
movsl
mov
jecxz
xchg
sahf
les
mov
sub
push
loopne
fbstp
jge
fldlg2
pop
jb
or
jge
adc
addr16
adc
ret
and
in
shrb
mov
jecxz
iret
dec
add
les
adc
mov
push
bound
xchg
push
jo
xor
pop
cmpsb
test
les
and
push
jecxz
jbe
mov
pop
in
and
lods
cld
jmp
pop
fisubrl
xchg
mov
or
push
jne
scas
inc
jl
dec
ss
jecxz
sub
test
cli
movsl
jmp
ret
call
and
stos
xchg
pop
arpl
dec
sub
push
sar
mov
dec
sysexit
std
rorl
std
divb
cmp
pop
dec
sub
sub
loope
or
mov
sbb
or
in
std
xlat
mov
pop
sarb
adcb
dec
jecxz
fadd
data16
xlat
les
xchg
inc
adcl
clc
fcmovnu
ljmp
aad
cmp
dec
nop
ljmp
aad
or
mov
popa
or
ja
dec
jnp
pop
insl
push
arpl
icebp
lcall
out
ja
test
lds
jl
imul
adc
jbe
jne
xchg
popf
sbb
jmp
xchg
out
add
test
test
mov
adc
adc
daa
insb
dec
test
std
ljmp
pop
ja
mov
sub
cmpsb
add
cmp
jne
cmp
pop
xor
jmp
cmp
std
mov
push
push
sbb
push
mov
int3
jmp
es
mov
sub
ret
pop
pusha
inc
cltd
cld
fs
mov
popa
mov
add
inc
test
out
xlat
inc
adc
cmpl
adc
addb
dec
pusha
inc
sbb
sbbl
mov
mov
push
scas
mov
sub
in
xor
lahf
lods
or
cmc
flds
pop
repnz
jae
mov
scas
push
mov
sbb
push
rorl
outsl
and
push
mov
shl
out
rcll
sbb
inc
sub
out
loopne
push
mov
imul
xor
xorb
xchg
int
ficompl
xorb
lahf
pop
add
push
out
leave
fbld
push
dec
hlt
inc
sbb
adc
outsl
jo
inc
dec
cmp
call
je
mov
push
xchg
jp
mull
xor
mov
test
sub
out
cli
test
pop
jle
xchg
jecxz
pop
xorl
pop
das
cmp
int
out
stos
mov
cmp
lods
jae
mov
xchg
sub
sub
pop
das
dec
sub
in
jo
mov
imul
mov
lods
loopne
push
loope
psubb
scas
mov
jne
in
iret
call
pop
mov
iret
mov
hlt
adc
insl
shlb
in
sbb
sub
xchg
insb
fsubl
cmc
fdiv
sbb
enter
jnp
cmp
xchg
stos
fisubl
aad
or
mov
stc
in
xor
push
xchg
xlat
loopne
or
jno
fiaddl
cs
rcrl
les
mov
jbe
in
sub
adc
idiv
sbb
jmp
xchg
aad
cmpl
scas
adc
addl
xor
ss
daa
jbe
ret
mov
in
sbb
mov
mov
sub
movsb
sub
push
pop
adc
bound
dec
aam
iret
add
rorl
lahf
mov
mov
les
bound
pop
cmp
mov
and
out
out
mov
out
pushf
or
push
nop
jp
mov
int3
cmp
and
hlt
insb
out
push
adc
outsl
add
and
mov
fcmovne
enter
xchg
sub
sbb
fwait
pop
mull
push
mov
test
lahf
or
pop
add
xor
cmp
movaps
xor
add
repz
xor
pop
out
add
xchg
loope
push
fs
ficoml
xor
ss
pop
adc
sub
jge
sbbb
loopne
out
jge
adc
add
shlb
inc
add
mov
cmp
icebp
mov
aad
in
dec
popf
testb
mov
xchg
or
add
in
loop
mov
xor
sbb
repz
push
shlb
cltd
inc
add
insb
lods
xor
les
int
aaa
mov
daa
push
push
les
dec
pop
push
leave
mov
movsb
decl
inc
inc
mov
or
pop
mov
mov
mov
inc
sub
and
outsb
cmp
arpl
push
rol
popa
mov
dec
push
clc
das
inc
fnsave
jb
rclb
or
pop
stos
cmp
add
rolb
and
inc
push
fcmovu
adc
adc
outsb
out
jmp
fistps
add
dec
xor
mul
test
add
and
cmp
push
gs
push
lods
cmpsb
in
sub
pop
addb
mov
mov
test
xor
xorl
fwait
enter
lcall
shlb
test
push
pop
xchg
cs
push
sub
cmp
aad
sti
rcrl
xchg
or
test
sub
pop
jns
outsb
test
les
xchg
pop
aaa
leave
sub
aad
lock
cmp
test
cmp
mov
addr16
xchg
xor
fs
pop
in
in
lods
fisttps
lods
pushf
aaa
imul
jmp
xor
js
jnp
inc
inc
lcall
push
cmpsb
in
stos
gs
lods
scas
jb
dec
out
test
jno
popf
fs
imul
outsl
pop
arpl
lcall
mov
mov
clc
sub
lret
lods
push
mov
lret
aaa
or
addr16
fcomip
xor
jae
mov
xchg
bnd
mov
sbb
or
out
cmp
jne
xchg
loope
sbb
mov
outsl
dec
jo
icebp
and
rol
sbb
mov
ds
or
fcompl
add
test
sbb
loop
add
inc
dec
gs
js
mov
shll
fdivs
outsl
sbb
jmp
pushf
push
push
inc
fchs
add
cmp
pop
clc
js
lods
add
sub
xorl
mov
leave
or
cltd
cmpsl
sbb
sub
sub
or
fdivs
mov
test
adc
test
mov
in
andb
adc
loope
outsl
rcrb
adc
insb
sti
in
xchg
and
sbb
cmpl
sahf
jb
or
or
mov
lret
lock
jno
inc
push
popa
cwtl
outsb
jecxz
jo
shr
and
or
cmp
jb
je
push
inc
je
xor
mov
outsb
mov
les
cld
sub
test
jns
lcall
std
jmp
jge
xor
mov
adc
mov
jno
inc
in
dec
fs
add
dec
outsb
sbb
addr16
stc
popf
enter
imul
jbe
decl
enter
in
lret
and
jne
mov
cld
sub
inc
or
movsb
cmp
adc
mov
shrb
shrb
incl
js
test
stos
out
dec
cmpsl
jmp
lcall
mov
mov
dec
in
out
mov
pop
fs
and
das
add
outsl
imul
mov
mov
movsb
stos
mov
iret
mov
scas
mov
iret
vmovddup
adc
psrld
xchg
mov
ficomps
adc
fnstsw
lods
mov
mov
adc
add
sub
pop
into
or
mov
movsb
sbb
es
jmp
mov
loopne
adc
movsl
icebp
mov
jno
sti
mov
popa
outsl
fnsave
ja
mov
or
popa
jne
push
mov
cmp
sub
incb
sub
das
fs
xchg
cmpl
jl
and
xchg
mov
pop
test
dec
sbb
pop
les
dec
mov
test
sub
movsl
push
gs
insb
outsl
lcall
mov
ret
movsl
in
shl
stc
jns
je
sti
arpl
enter
dec
jle
enter
call
sar
pop
jmp
or
out
mov
fwait
arpl
add
add
push
scas
rorb
pop
push
jo
ljmp
mov
push
fs
jmp
and
or
jg
xchg
test
jae
ret
mov
std
mov
mov
and
sub
cmp
cld
adc
jmp
fildl
stos
jne
fnstcw
cmp
add
xchg
enter
divl
out
hlt
cmp
add
adc
push
xchg
add
mulb
sbb
add
fsub
mov
mov
mov
sar
dec
flds
xorb
arpl
aad
in
std
sbb
rorb
lds
in
aad
pop
lret
ds
pop
cld
cs
dec
sbb
cmc
out
repnz
cwtl
mov
xchg
xchg
jo
roll
popa
cli
sub
pop
and
mov
lods
sarb
aaa
addr16
pop
dec
or
insl
hlt
dec
jmp
inc
aas
sarb
inc
push
cld
in
xchg
test
rcrb
rcll
cmp
lods
jge
repnz
sub
xchg
xor
fstps
fwait
xchg
mov
sub
mov
xchg
jns
rclb
fs
mov
dec
mov
ja
dec
aad
mov
out
push
push
push
mov
or
pop
repnz
mov
das
arpl
adc
cs
es
stos
mov
xor
cmp
lret
push
fwait
mov
inc
dec
add
mov
xor
daa
loope
add
gs
xor
es
jle
fmuls
pushf
push
fists
pop
in
insl
rorl
addr16
dec
jne
movsb
jo
add
adc
push
andl
and
aas
fstpt
push
xor
stos
insb
cli
mov
in
idivl
mov
or
mov
fs
jno
mov
pop
adc
xorb
test
xor
sub
xor
loopne
out
sbb
push
mov
rol
mov
push
sbb
sub
ret
inc
xchg
xor
and
add
mov
call
in
pushl
movq
or
leave
popf
or
dec
fdivr
xchg
jne
shlb
pop
xorl
pop
push
cs
sbb
adc
movb
ds
mov
mov
mov
pushf
push
pop
in
add
jecxz
xchg
cmp
push
movsl
popa
daa
pop
sub
lock
adc
inc
mov
jb
les
and
scas
js
mov
jge
mov
test
mov
sbb
cld
pop
jbe
pop
std
daa
out
and
aas
roll
mov
fcmovnbe
lds
xchg
ljmp
sbb
adc
lret
inc
fidivrl
je
fldcw
loope
cwtl
jp
push
jne
pop
mov
mov
dec
mov
xor
rcl
mov
mov
adc
dec
js
and
std
xor
into
mov
dec
imul
rcrb
in
orb
pushf
mov
jmp
inc
stos
xlat
mov
scas
jmp
jl
mov
mov
cwtl
dec
dec
gs
hlt
cmp
sti
sub
cmpsl
or
stc
xchg
sahf
push
jl
ret
popa
orb
fucomip
jp
dec
test
sbb
adc
mov
pop
add
cwtl
pop
inc
mov
cmpsl
idivb
daa
loopne
mov
inc
lret
jmp
cltd
imul
push
jecxz
lcall
ret
sub
loope
fcmovu
xor
push
cmc
fstp
call
leave
mov
add
fcomip
or
sub
pop
ja
or
fstps
fadds
and
cmc
out
loop
add
cli
test
push
fcomps
rorb
jp
cmpsb
shr
clc
repnz
aam
mov
and
ss
stos
xor
out
jle
and
repnz
jmp
lods
movnti
and
jno
xchg
aad
loopne
cmp
sub
cwtl
jl
mov
leave
movsl
mov
add
jl
jne
inc
ret
mov
inc
popa
cs
stos
adc
in
xlat
jo
out
aam
mov
fcomp
int3
shl
fcompl
add
mov
add
ret
enter
jnp
std
push
data16
ds
stos
xchg
mov
adc
and
dec
dec
push
and
xchg
mov
clc
xchg
and
jns
mov
inc
in
or
inc
xchg
arpl
pop
cmp
insb
pop
add
sbb
push
pop
xor
loope
mov
iret
jnp
add
insb
dec
mov
mov
pop
js
std
mov
pop
mov
scas
push
cmp
outsb
lcall
cmc
in
and
test
and
push
stos
adc
cmp
dec
insb
imul
push
jb
lahf
negl
pop
jmp
in
jmp
repnz
jne
movsb
mov
adc
lahf
rorl
daa
push
pop
mov
dec
es
imul
bound
xor
ja
cs
jmp
sarl
ds
ret
jl
shlb
xchg
enter
add
dec
push
jbe
addb
xchg
insl
sub
cmpsb
dec
cmpsb
mov
aaa
dec
xor
sub
pushf
sbb
sub
data16
mov
lahf
jg
push
rorl
inc
ja
nop
mov
mov
jecxz
fidivl
mov
cmp
pop
adc
cs
adc
dec
std
pop
je
inc
pop
testl
fxch
push
xor
lods
hlt
inc
lcall
and
mov
pushf
loopne
add
mov
decb
rorb
xor
std
mov
and
jmp
daa
movsl
nop
dec
xlat
mov
scas
sbb
mov
mov
sbb
cmp
mov
clc
repnz
cmc
arpl
loope
std
fs
jae
sbb
gs
into
mov
cs
loopne
sahf
jno
add
lock
stos
mov
xor
or
les
mov
fldt
mov
pop
ret
sbb
lock
jp
inc
sahf
push
add
xor
pop
lea
sbb
pop
loop
jns
out
mov
push
imul
sub
fs
xchg
cmc
rolb
loop
lss
out
cmp
filds
lods
clc
fadds
shll
hlt
add
jle
out
jg
xor
fstpt
fnstsw
lock
fiaddl
xor
mov
jo
add
lods
xor
call
inc
nop
mov
mov
mov
fstpt
inc
mov
test
inc
inc
mov
cmp
mov
stos
cmp
icebp
mov
aas
cmc
lret
inc
sahf
testl
cli
outsb
push
mov
mov
xor
push
push
mov
mov
daa
flds
das
jae
and
jns
out
push
mov
cmp
icebp
jae
and
sbb
mov
in
mov
cwtl
mov
pusha
fiadds
dec
adc
mov
insl
dec
sti
inc
shlb
pop
aas
add
mov
pop
xor
or
rcrb
sarb
push
outsb
or
pushf
cmc
jg
mov
ja
rolb
lods
inc
mov
popa
push
sbbb
jo
stos
push
rorl
subb
sub
das
insl
adc
xchg
mov
jns
sbb
dec
lds
insl
jb
xchg
jecxz
fisubrs
xor
mov
mov
and
and
pop
jb
icebp
dec
jl
cmp
aas
mov
insl
ret
lock
push
pop
sahf
dec
call
stc
mov
sbb
dec
lret
cwtl
lret
adc
xor
mov
out
test
test
loop
or
rcrb
xchg
mov
ljmp
call
sbb
fisubl
xor
jg
mov
cwtl
test
or
es
leave
add
and
pusha
sub
add
lds
cmp
test
call
scas
lds
pop
pop
test
dec
mov
shlb
test
add
jbe
push
inc
cmp
test
lret
sub
je
lods
std
fildll
in
je
xchg
add
lret
shlb
lahf
mov
mov
push
or
loopne
jae
mov
mov
inc
scas
insb
push
bound
jns
pusha
movsl
test
scas
shl
adc
stos
ror
xor
cmpsb
cmp
mov
cmpl
cld
pusha
jno
and
lock
orb
jp
mov
or
jne
pushf
jne
jae
dec
testl
int
daa
jno
fld
jbe
jns
cld
imul
movsl
aas
sub
popa
ficoms
sbb
testb
jmp
loop
lcall
testl
or
sub
in
pop
sub
dec
enter
lods
push
outsl
in
adc
cld
jmp
movzwl
push
push
sbb
movsb
xor
xchg
cmpb
push
jecxz
push
and
adc
stc
iret
imul
lcall
cwtl
cwtl
adc
loope
jmp
push
jno
stos
pop
das
xlat
fisubs
or
xor
cmp
pop
pop
xchg
add
cmp
int3
stos
mov
fmull
cli
mov
mov
mov
pop
stc
testb
inc
xor
mov
fldcw
pop
int
test
dec
and
arpl
js
xor
daa
pushl
jbe
shl
pop
jge
insb
loop
mov
and
aad
and
push
push
fstl
sbb
pop
jl
inc
dec
sarb
adc
fdivl
pop
pop
xchg
int3
mov
ds
jg
cs
mov
fwait
test
adc
mov
mov
cmp
mov
pop
addr16
jecxz
sub
in
fs
lods
sti
loop
es
mov
xchg
mov
cmp
mov
jne
lret
add
jmp
sub
cmp
xor
cmpsl
add
sub
rcll
push
in
and
push
movsb
and
jbe
push
push
mov
xor
mov
fists
jns
gs
and
in
ljmp
cmpsb
dec
pushf
mov
push
orb
jne
mov
push
adc
arpl
scas
imul
fisttpl
repz
jbe
fwait
inc
mov
jmp
test
loop
xchg
movsl
lahf
xchg
dec
add
out
cmp
xor
or
std
mov
popa
pushl
mov
lret
or
mov
push
pop
inc
cmp
jmp
pop
dec
sub
lock
or
sbb
dec
sub
lret
push
mov
clc
mov
xchg
ret
fildll
rcll
xchg
stc
push
je
cmp
pop
push
clc
icebp
cmp
dec
or
mov
out
jb
xchg
adc
mov
push
mov
call
mov
lods
mov
mov
bound
push
sub
outsb
sub
hlt
cmp
xor
cmp
add
jae
adc
adc
leave
sbbl
jbe
adc
jl
push
mov
loop
add
std
xor
push
cmp
into
adcb
addr16
call
les
jo
mov
push
inc
sub
movq
sub
test
lahf
and
mov
ret
sub
mov
idiv
adcl
dec
push
add
mov
fwait
add
pop
aad
std
lcall
push
fbld
jno
mov
xchg
inc
inc
rolb
ds
nop
adc
enter
pop
shll
push
jmp
lods
sub
inc
lret
mov
leave
jl
leave
sub
push
nop
mov
pop
mov
out
loopne
icebp
mov
lcall
jp
or
stc
xor
das
imul
iret
iret
sub
jne
shr
psubusw
stc
mov
aas
cmp
sub
notb
aaa
fstpt
pop
popf
sbb
push
mov
jno
sbb
addr16
mov
jns
movsb
or
sbb
pop
mov
aad
push
cmpsb
dec
mov
lea
std
loop
xor
and
pop
and
loope
jmp
push
mov
pop
and
lea
add
inc
ss
cli
aaa
ds
std
push
push
xchg
movsb
dec
dec
push
and
push
mov
test
stos
lahf
push
and
dec
insl
rcl
int
jmp
mov
inc
xchg
push
ja
divb
jmp
shlb
adc
arpl
jne
jl
stos
movsl
imul
mov
and
pop
push
xor
mov
mov
pop
sub
aad
shrb
xchg
nop
cmp
jg
mov
out
jl
xor
push
aaa
clc
loopne
daa
push
or
mov
rolb
mov
mov
or
cvtps2pd
dec
dec
dec
mov
inc
dec
push
sub
xchg
and
ss
add
mov
mov
loop
or
mov
in
push
mov
xor
leave
or
rolb
sub
les
or
or
dec
and
inc
fistpl
pusha
scas
outsl
xchg
lods
mov
lahf
dec
xor
call
lods
inc
leave
mov
jno
pop
inc
push
or
sbb
xchg
cmp
lahf
adcl
mov
out
lods
mov
and
adc
rorb
adc
testl
mov
inc
pop
lods
out
xor
jns
mov
repnz
movsb
enter
jmp
dec
sub
and
sub
sub
pop
enter
rcll
mov
push
cmp
fidivl
div
mov
adc
cmp
in
stos
out
pop
gs
jp
sbb
ficoml
push
andl
jle
xlat
pop
dec
sbb
mov
lret
cmp
loopne
pop
lcall
xor
xor
and
test
cmp
fistpll
out
lock
xor
fcomp
or
push
mov
inc
test
loope
cmpsb
test
mov
loope
xor
pop
imul
ret
add
aam
xchg
cld
ljmp
or
push
push
movsb
out
inc
and
mov
jl
mov
lods
aas
push
sahf
pusha
and
shlb
sub
fwait
xor
push
ret
and
sbb
cmp
test
jl
jle
or
mov
dec
mov
aad
jo
out
pop
xchg
ss
pushf
std
xor
aam
xchg
mov
scas
sbb
mov
imul
insb
sbb
rcl
test
jae
enter
xchg
shlb
decb
sub
dec
rorl
cs
pushf
cmpsb
bnd
test
push
pop
popa
inc
lea
push
push
push
cs
adc
cmc
cwtl
iret
push
arpl
scas
daa
pop
popa
sbb
les
xor
maxps
loop
and
or
mov
mov
or
sub
mov
or
test
push
int
cld
jmp
idivl
lods
rcrb
or
lret
push
in
push
jns
jo
jno
in
mov
neg
out
sbb
sub
inc
mov
sub
or
insb
je
jns
repz
xor
cmc
dec
dec
sti
repz
stc
jae
je
add
cmp
pop
and
mov
add
add
xchg
shll
movsl
aas
leave
sbb
jmp
inc
cmp
ficoms
sub
cmp
bnd
adc
pop
shlb
neg
pop
cmp
mov
out
dec
scas
xorb
cmp
jle
fnstcw
fstps
adc
jge
cmp
testb
inc
in
in
xchg
fisttpl
in
sub
cmpsl
mov
dec
sbb
xorb
xchg
mulb
adc
xchg
dec
sub
mov
fadd
mov
xor
inc
dec
addl
pop
imul
fcmovnu
clc
mov
out
jo
cltd
mov
mov
addr16
add
lret
dec
xchg
xchg
add
jmp
jge
or
or
hlt
fiaddl
aad
daa
in
push
or
movsl
fs
jl
push
adcl
pop
loop
scas
mov
dec
and
into
test
out
fisttpll
jge
punpcklbw
in
add
inc
dec
loope
js
popf
arpl
stos
jle
notb
and
insl
sbb
cmc
dec
int
ficomps
xchg
dec
sub
and
push
fiadds
pop
popa
test
pop
scas
cltd
jb
rorb
mov
roll
jmp
addr16
sbb
stos
pop
xchg
inc
popf
sbb
inc
ja
js
ss
xor
pop
push
loopne
dec
int3
mov
sub
in
mov
test
sbb
in
int
test
loop
push
es
mov
lcall
cli
ficompl
mov
or
mov
cmp
xchg
mov
push
and
ficoml
ja
in
push
jge
fisubl
decb
dec
test
lock
lahf
insb
push
adc
ja
loope
jl
mov
insb
sahf
dec
xor
lock
cmpl
dec
aam
sub
dec
fisubrl
nopl
cmp
lret
xor
and
push
dec
push
jecxz
cli
dec
repnz
inc
pop
in
mov
ljmp
adc
dec
hlt
repnz
or
sub
mov
out
sbb
in
mov
sbb
push
loop
cs
mov
pop
fstp
lea
xchg
xchg
divl
aad
test
or
sub
arpl
mov
pop
icebp
xchg
insb
pop
dec
call
fbstp
xchg
sub
adc
inc
fsubrl
in
test
jmp
and
push
or
sbb
enter
cmp
xlat
jmp
cmpsl
dec
repnz
add
dec
dec
jl
cmc
subb
lods
xchg
loope
pop
mov
jmp
cld
out
push
dec
in
xlat
sahf
adc
mov
and
xchg
add
fucomi
cmp
push
sub
jbe
push
mulb
decl
lcall
jl
cltd
pushf
xchg
stos
push
mov
mov
cld
lock
in
add
je
outsl
cld
push
xchg
clc
cmp
fistpl
xchg
aam
jle
inc
push
push
mov
mov
mov
lods
xchg
arpl
xchg
pop
jge
mov
inc
iret
gs
movsl
call
add
push
lahf
dec
push
call
bnd
pop
dec
mov
mov
data16
ja
pop
cld
rcl
push
xchg
rolb
cld
movsb
push
push
push
jecxz
add
daa
pop
lret
or
xchg
cs
dec
ja
push
add
cld
mov
push
call
loop
je
mov
cmp
cld
outsl
in
jge
popa
mov
mov
cmp
sar
mov
ret
push
mov
push
dec
shll
lret
cltd
inc
aam
iret
push
xchg
or
addr16
or
pop
push
scas
sub
daa
cwtl
jo
push
jnp
ljmp
js
xchg
pushf
push
sbbb
sub
cmc
mov
fstl
xchg
xorl
cmp
shl
fcmovnu
jp
es
mov
aam
imul
das
sti
lock
and
ror
int
jl
pop
dec
mov
cmp
or
mov
out
adc
ret
mov
fnstenv
xchg
loope
sub
lahf
int3
jge
jg
divl
dec
push
xor
sarb
jecxz
lea
cmpsl
dec
xor
dec
lret
mov
pop
xor
mov
imul
cmp
test
push
add
xor
add
cs
push
cmp
xor
jne
shrl
mov
sahf
push
sub
push
dec
mov
dec
inc
cmpl
ds
mov
popf
cmp
loope
fcompl
lods
push
imul
in
mov
inc
enter
mov
int
mov
pop
xchg
xor
xchg
js
or
into
aad
mov
xor
mov
pushf
sbb
sbb
in
fdivrp
hlt
fistpll
jle
mov
xchg
mov
aaa
adc
int
and
shrl
stos
dec
lods
mov
das
xor
or
or
sarl
pop
mov
adc
fwait
inc
xchg
out
cld
enter
xchg
xor
sbb
sub
sbb
xchg
fstl
xor
mov
mov
call
inc
mov
mov
cmc
aam
cmpsl
arpl
xor
pop
stos
cli
icebp
insl
push
imul
pop
popa
cs
jb
sub
mov
stos
mov
iret
mov
sub
sub
mov
jle
fbld
push
mov
insb
lea
add
push
and
inc
mov
xchg
mov
pop
test
popa
cmpsl
and
jl
je
push
cmpsl
aas
xor
sbb
enter
jb
lret
jmp
xchg
or
and
nop
mov
clc
inc
sahf
aad
push
sub
ss
fincstp
sbb
xor
jno
ret
jmp
leave
push
fsts
mov
fdivrs
jmp
pop
push
lds
dec
xchg
popf
mov
enter
adc
lds
imul
adc
fucomip
mov
inc
dec
sbb
scas
add
sbb
pushf
int3
jp
xchg
rcrl
scas
mov
jbe
xchg
dec
hlt
int3
mov
repnz
out
cmpb
jl
aad
mov
xchg
fstl
pop
jg
adc
push
lods
in
imul
and
in
inc
mov
cmpsl
in
aam
gs
subl
hlt
sub
scas
scas
popf
and
lds
daa
cmpsb
das
push
mov
mov
outsl
les
pop
add
icebp
stc
mov
iret
pop
mov
xchg
jl
pop
lret
mov
add
fstpl
ds
mov
rcll
pop
aad
mov
subb
sbb
sub
ret
jle
xor
loopne
cwtl
repz
mov
mov
imul
imul
addb
ljmp
mov
jmp
mov
sbbl
ficoml
push
add
fcompl
cmc
add
data16
dec
xchg
jge
sub
sbb
jbe
popf
inc
xor
pop
mov
daa
insl
aas
push
cs
xor
mov
sbb
xor
mov
fsub
mov
add
jne
inc
testl
dec
cltd
sarb
xor
jo
mov
inc
xchg
dec
push
daa
cmp
jmp
xchg
jmp
out
push
jo
jo
push
mov
jne
jne
adc
in
sub
inc
fisubl
xchg
dec
sbb
and
xchg
mov
jb
fildll
pop
or
mov
pop
xor
adc
dec
lea
inc
jecxz
cwtl
fbld
cli
jle
lods
dec
cltd
call
js
testb
jp
sbb
outsb
fwait
lods
adc
mov
sub
lcall
and
pop
imul
stos
or
xchg
add
cmpsb
sbb
sti
adc
and
inc
shr
mov
mov
mov
nop
dec
sar
xchg
jnp
push
sbb
cmp
jbe
jbe
cmp
inc
out
or
xchg
add
mov
xchg
inc
push
cmpsl
sbb
dec
lock
incl
and
xchg
cmpsl
sbb
pop
dec
push
jo
aas
pop
xchg
jne
mov
leave
or
jnp
popf
scas
fsubrl
mov
mov
lcall
jmp
mov
lret
dec
xor
mov
div
jmp
mov
mov
fldenv
sbb
add
cwtl
adc
lock
aad
in
mul
pop
test
or
testl
call
mov
repz
push
push
sbb
daa
sub
cmc
shrl
imull
cld
repz
cmp
inc
pop
cs
xor
nop
and
xchg
jl
xchg
sbbb
or
movsl
into
add
add
stos
addr16
mov
outsl
aam
ss
out
psubq
addr16
popa
adc
jb
das
lods
sbb
pop
sub
xor
int
xor
pop
cmpsl
xor
sub
pop
test
ja
inc
jle
dec
pop
scas
xchg
inc
cmpsb
xlat
addr16
insb
rorb
loope
mov
mov
xor
push
push
dec
add
push
sti
or
ljmp
cmp
movsb
adc
push
jns
push
stos
jno
shlb
sti
jne
inc
call
xchg
dec
xor
sti
rorb
inc
or
lcall
mov
mov
in
hlt
outsb
sti
cmp
add
popa
jmp
jnp
pop
in
mov
adc
imul
cmp
push
cld
das
sub
mov
jecxz
cmp
dec
cmp
cmpsb
clc
out
adc
lods
push
xor
pop
lods
enter
adc
mov
or
mov
das
adc
ss
add
xor
ss
mov
ret
sbb
in
lock
jb
or
mov
fimuls
or
dec
dec
and
ret
das
std
int3
xlat
and
jne
xchg
aad
xchg
push
push
add
jmp
dec
sahf
sbb
imul
jmp
pop
mov
mov
ret
jle
ss
enter
adc
push
rep
test
leave
and
arpl
push
cmp
push
adc
dec
enter
pop
cltd
dec
cmp
mov
pop
lods
add
push
mov
sti
cmp
insb
call
pop
jmp
mov
nop
or
outsb
pop
nop
lret
dec
dec
lahf
cmp
iret
fldt
lea
sbb
imul
ret
or
jns
push
cmp
push
scas
adc
outsl
call
adc
jmp
jno
mov
iret
sbb
mov
adc
sbb
cmc
sbb
sub
mov
inc
add
sbb
int
xor
push
cmp
xor
ss
mov
mov
fwait
int3
test
adc
dec
fsubrl
adc
inc
jb
out
mov
pop
insb
xor
lods
push
jmp
jne
lods
add
jp
rclb
push
mov
jbe,pt
lahf
push
mov
xor
mov
lds
sbb
mov
fwait
jl
pop
jns
mov
or
sub
ror
nop
iret
mov
dec
sbbl
sahf
mov
fwait
shlb
jle
sub
fsubrl
jo
sbb
sbb
mov
aad
sub
lods
pop
mov
lods
sbb
ss
icebp
dec
rorl
cmp
jno
data16
or
push
cmp
mov
or
clc
mov
or
jne
sbbl
movsl
pop
or
mov
and
pop
xchg
sbb
push
mov
add
mov
scas
roll
rolb
test
push
movsb
and
icebp
inc
dec
xchg
adc
out
and
add
int3
push
insl
adc
idivl
push
jp
or
pop
mov
cmp
in
push
xor
add
dec
fs
push
adc
sub
addr16
les
roll
popa
add
daa
roll
into
sub
push
dec
rolb
movsb
add
jno
sub
dec
and
pop
mov
cmp
test
cmp
subl
add
sbb
imul
inc
lea
push
jnp
inc
add
cs
cld
dec
sahf
rcl
int3
mov
push
pop
add
cmp
adc
enter
mov
add
dec
xor
and
push
jp
push
xchg
inc
xor
ret
jmp
jae
sub
kunpckwd
pop
jno
pop
push
arpl
mov
and
aaa
xchg
aas
mov
nop
push
pop
and
sub
js
pop
outsl
and
nop
sbb
add
adc
insl
add
lods
push
add
lock
test
mov
fs
mov
outsl
dec
andb
lret
iret
xchg
out
fnsave
sub
mov
out
sub
mov
jge
loop
xchg
jb
lods
out
push
and
imul
clc
add
fs
lods
inc
imul
push
test
inc
sub
in
iret
sbb
and
xlat
mov
ret
lahf
push
add
nop
out
cmp
add
mov
mov
movsb
es
jb
mov
adc
lret
fldl
ljmp
dec
jo
mov
sbb
arpl
out
pop
xor
jl
fmul
lods
sbb
cmpsl
js
shr
jl
insb
sarb
inc
mov
stos
inc
adc
and
inc
inc
jb
shlb
push
sub
std
add
test
out
lea
jle
sbb
loopne
lock
lret
cld
mov
int
mov
into
jne
test
lods
in
into
dec
out
lods
mov
scas
jns
int3
add
cmp
fstpt
jo
lret
addl
mov
repnz
inc
jae
adc
aaa
sbb
mov
xchg
mov
mov
xor
inc
push
mov
push
sbb
jecxz
xchg
mov
inc
mov
ret
mov
cmp
jg
mov
mov
out
cwtl
aaa
jp
cmp
loop
cmp
lea
or
test
or
jno
in
pop
rcrb
add
push
mov
mov
jno
or
icebp
sbb
hlt
roll
dec
cwtl
sti
lret
stos
sbb
lret
fsubrl
movb
ret
outsb
pop
aas
cwtl
ror
adc
push
lock
sbb
sbb
or
outsl
outsl
mov
sbbl
cmpsl
movsl
inc
inc
lahf
cmpb
mov
es
clc
daa
dec
mov
sbb
cmp
stc
popa
cmc
je
xchg
inc
and
mov
ja
sbb
pushf
std
stos
test
pusha
jg
mov
push
push
jl
lods
call
sub
xor
or
icebp
jmp
add
or
pop
cli
cmp
mov
xor
out
shl
jne
mov
cli
and
adc
sub
xchg
xchg
push
adc
mov
push
sahf
addr16
cmp
movsl
cmc
repnz
dec
popa
ja
cltd
aas
and
adc
sbb
lcall
inc
jmp
and
aas
bnd
mov
aas
push
or
cli
mov
iret
add
xlat
xchg
into
icebp
mov
arpl
cmp
xor
push
cmpsb
in
pusha
aad
sahf
adcl
push
mov
inc
cmpsl
xchg
jmp
mov
in
add
test
inc
bound
sub
dec
fisubl
sbbl
adcl
and
nop
sub
loope
insb
leave
cmpsb
pop
adc
je
inc
push
cmpl
inc
xor
push
bound
ss
mov
pop
aaa
mov
es
jns
sbb
mov
dec
push
xchg
lret
cli
adc
lock
repnz
push
dec
aam
int3
cmp
fnstcw
pop
in
inc
xlat
rcll
xchg
dec
sub
dec
add
test
push
xchg
in
movsl
fdivr
push
xorb
xor
popa
lds
jle
testl
popf
jbe
cli
je
cmp
stc
add
dec
mov
and
jp
out
lock
inc
pop
push
loopne
jl
xlat
mov
ja
xor
push
sbb
loope
fmulp
stos
pop
or
lock
mov
ljmp
enter
stc
fnstenv
inc
aam
jns
add
rorb
repnz
jb
es
ret
inc
mov
ja
jbe
mov
mov
mov
test
orl
mov
adc
into
adc
mov
or
loopne
pop
pop
stc
jns
fs
in
mov
mov
mov
sarl
mov
xor
mov
mov
mov
int3
aam
movsl
pop
rcr
push
push
adc
mov
mov
subb
xor
addb
stc
mov
adc
xchg
push
cmc
iret
dec
inc
popl
test
insl
les
push
jl
and
arpl
in
leave
fistpl
lods
dec
cmp
popf
enter
fimuls
and
inc
or
mov
negb
mov
rcr
xchg
sbb
cmp
insl
add
mov
clc
fidivs
cs
pop
jmp
inc
dec
dec
sahf
cmpsl
lods
mov
stos
scas
pushf
dec
out
aam
cmpsl
dec
psrlw
dec
imul
sbb
sbb
adc
sbb
aaa
in
scas
pop
cmpsb
dec
pop
pop
rcrl
mov
loopne
and
ret
xchg
insl
push
push
push
cmpsb
inc
idivl
cmc
push
or
std
or
int3
mov
sti
lds
sbb
fdivs
xor
mov
fs
or
mov
mov
sbb
lock
ja
pop
enter
push
mov
movsl
ja
xor
cmp
push
mov
xchg
fldcw
sbb
mov
nop
das
stos
or
mov
stos
adcb
addl
inc
jp
cmp
xor
movsb
cmpsl
int3
cmp
push
scas
fstl
inc
adcl
adc
mov
push
nop
sti
out
lahf
stos
mov
jae
popa
enter
xor
ss
jmp
sbb
sbb
dec
call
and
rep
cmp
jle
and
fstpl
sbb
aas
popf
or
and
fs
mov
mov
popa
and
mov
xor
shrb
stos
adc
dec
sbb
out
decl
pop
mov
mov
mov
dec
adc
sbb
popf
fidivs
aas
daa
mov
mov
sbb
insl
dec
sub
out
cmp
mov
pop
loop
cmc
jne
call
sbbb
bound
testb
rclb
addr16
mov
cld
jbe
lods
loop
int
fsubrs
pop
or
adcl
or
xor
pusha
sbb
dec
mov
mov
xlat
or
imul
lock
inc
inc
rorb
xor
xchg
lahf
loop
lods
pop
fcmovnu
add
adc
xchg
dec
and
pop
fwait
mov
mov
pop
and
sub
es
sbb
fisubrl
xlat
rorb
sbb
sub
xchg
push
lcall
popf
xor
sub
mov
jbe
mov
pop
jp
loopne
or
leave
flds
xchg
fwait
icebp
xchg
mull
xchg
push
pop
sbb
mov
pop
ja
or
xchg
leave
push
xor
cld
mov
mov
rorl
cmc
push
xlat
mov
and
in
mov
inc
aaa
xor
imul
push
dec
pusha
xor
fsubl
xor
test
cmp
int
cld
add
sbb
popf
arpl
lock
test
inc
out
sbb
mov
addl
push
ficompl
shrl
aaa
sub
cmp
out
fsubs
cmp
mov
cltd
jns
xchg
loope
pop
and
stos
imul
filds
ficompl
fists
jo
dec
call
scas
jne
into
movsb
mov
mov
fsts
and
adc
repnz
jne
das
int
ss
cs
sbb
cld
and
jmp
jb
repz
pop
dec
mov
or
push
xchg
stc
inc
movsl
cmpsb
icebp
adc
scas
clc
in
in
xor
les
jae
sub
sbbb
idivl
ret
iret
mov
pop
mov
fisubs
adc
xchg
addb
or
ret
xchg
mov
cs
jmp
mov
daa
push
sub
mov
push
popf
popf
ficomps
jge
mov
mov
sbb
jge
in
cmp
ret
je
insb
cmp
lret
js
lods
int
inc
sar
jl
in
push
add
out
xchg
das
sub
fsub
cltd
in
mov
pop
xor
cmp
mov
jnp
dec
movsb
inc
mov
pusha
hlt
push
push
xchg
inc
int
inc
out
or
test
call
inc
scas
or
push
adc
int
jo
arpl
orl
add
mov
push
mov
adc
adc
mov
repz
mov
aaa
shr
cmpsb
xor
and
hlt
iret
cld
mov
jnp
push
push
push
out
inc
loop
xchg
ror
push
cmp
aam
adc
daa
jg
orl
daa
repnz
lcall
es
xchg
shl
pop
mov
testl
adc
test
imul
jp
jnp
leave
inc
mov
mov
and
lahf
push
or
xabort
leave
cwtl
clc
repnz
mov
fdivl
stos
or
fstps
or
les
mov
les
xor
scas
sbb
xchg
and
xchg
inc
arpl
or
cli
fimull
enter
jne
inc
pop
push
adc
jns
add
sbb
out
pop
scas
mov
enter
pop
in
scas
jne
adc
xchg
cmc
addl
mov
movsl
mov
ds
xor
dec
and
loope
int
sti
sbb
or
enter
pop
xchg
loop
cmc
je
fnsave
and
sub
jo
mov
mov
orb
daa
xor
fidivs
xlat
test
or
xor
jnp
stos
movaps
jbe
cmpsl
cmp
fiadds
jmp
lea
bound
inc
repz
push
sub
insb
mov
mov
enter
iret
push
xlat
sub
cld
push
jmp
jbe
mov
dec
rolb
ljmp
xor
call
loop
fcoms
inc
data16
pop
or
push
outsl
add
into
lret
jnp
int3
movsb
cli
pop
mov
subl
in
das
addr16
scas
cs
and
ljmp
es
bound
ds
dec
in
adc
dec
sahf
loop
inc
xor
or
shr
jmp
js
pop
popa
repnz
cwtl
mov
loopne
dec
or
xchg
xchg
ljmp
aas
mov
xor
sahf
cmp
adc
stos
xor
rorl
cmp
stos
les
lahf
and
xor
pop
sbb
ljmp
mov
cmp
inc
pop
jg
pop
mov
mov
clc
jecxz,pn
out
pop
cmpsb
les
fs
add
adc
fiaddl
scas
jno
jne
fcmovne
add
xlat
cmp
imul
loope
mov
ja
push
push
pop
shlb
outsl
outsl
cwtl
in
dec
xor
mov
mov
jno
lods
int3
sbb
sbb
dec
aam
movsl
xor
cli
mov
mov
jae
shlb
inc
pop
sahf
in
mov
loope
push
out
cmpl
lods
sarl
xor
decb
cmpsb
pop
nop
lods
cmp
popf
mov
fstps
jae
xchg
sub
mov
jg
sub
xchg
je
sbb
movsl
shl
loop
pop
push
cmpsb
popa
ljmp
fisubrl
mov
scas
outsl
or
js
in
dec
jno
fs
mov
fsubr
imul
dec
sbb
das
into
addr16
xchg
inc
inc
arpl
lahf
inc
pop
lea
pmulhw
std
add
xlat
jp
inc
mov
imull
pop
adc
mov
push
leave
leave
pop
sub
mov
xchg
add
ja
loop
hlt
jae
jmp
add
mov
jecxz
sub
lds
cmp
and
xchg
cli
cmp
jmp
adc
pop
mov
sbb
dec
sub
rcll
xlat
or
sbb
icebp
add
cmpsl
xor
cld
ja
into
outsb
xor
repz
in
adcb
fnsave
test
cmc
sub
out
xchg
insb
inc
xchg
mov
icebp
jne
mov
cmp
xchg
and
in
pop
aam
fcoml
ss
push
push
xor
cmpsl
mov
in
xchg
popa
test
xor
bound
movsb
adc
mov
sub
xchg
cltd
mov
daa
add
stos
clc
xor
jle
ret
jp
std
and
mov
ret
mov
loope
pop
cmp
lock
arpl
jb
push
cmpsl
cmp
xchg
insl
push
imul
fsts
push
and
pop
pushf
jno
nop
cmp
inc
pusha
sub
xchg
mov
xchg
lods
stos
or
in
stos
aad
pop
into
lret
mov
aad
pop
sub
xchg
stos
pop
lock
xor
outsb
sub
aam
hlt
fbstp
int3
mov
pop
mov
pop
inc
imul
push
iret
stc
lea
nop
mov
jns
hlt
lods
das
sbb
mov
test
movsl
mov
jmp
pop
push
sbbb
inc
xor
xor
es
cmpsl
fldcw
dec
insb
fisttps
inc
fdivl
pusha
shlb
mov
js
push
xor
into
lret
out
repnz
mov
xor
cmp
or
or
and
push
or
sbb
inc
ds
dec
jbe
mov
mov
sub
inc
push
mull
aaa
and
adc
daa
je
rcrl
dec
jb
xor
mov
bound
mov
lock
push
test
addr16
adc
lock
lock
cmp
dec
daa
addr16
inc
repnz
fsubrl
pop
arpl
mov
scas
pop
xchg
arpl
fimull
mov
mov
lcall
xchg
ss
movl
lcall
mov
jnp
push
test
subl
jl
cld
frstor
push
ljmp
fstl
xchg
pop
daa
jg
push
repz
or
jo
dec
lahf
lcall
mov
fildll
lods
jg
mov
adc
lcall
xor
hlt
adc
add
enter
xchg
or
addl
in
cli
adc
push
xchg
mul
mov
gs
lcall
hlt
test
mov
xor
imul
lods
popf
mov
mov
or
push
or
clc
jge
xor
xchg
cmpsl
xor
dec
pop
dec
push
fisubl
pop
and
popa
xor
stos
push
rcl
iret
dec
push
and
rcl
and
sub
pop
pop
cld
loop
shll
std
idivb
pop
into
and
out
loopne
jge
fildl
mov
mov
and
outsb
in
nop
in
jb
mov
out
or
xchg
js
pushf
sub
mov
cmp
mov
lock
imul
sub
popf
pushf
lods
out
mov
xchg
sbb
inc
adc
mov
pop
jo
stc
lods
xchg
ja
data16
idivb
inc
or
mov
jae
rcl
fldenv
lea
sarl
call
pop
push
aas
lahf
adc
mov
jbe
mov
loopne
rolb
inc
xchg
lret
mov
call
sub
test
pop
xchg
fmulp
out
cmp
jge
sbb
ss
mov
aam
and
mov
inc
xor
addb
jne
cltd
fstl
jl
sub
in
mov
jns
mov
out
jne
add
mov
imul
pop
jno
pop
lods
enter
and
les
sbb
outsl
jecxz
lods
cmpsl
popl
into
sub
orl
pop
notb
and
pushf
dec
mov
fs
xchg
dec
dec
imul
call
outsb
incl
test
push
cmp
dec
and
scas
shlb
sbb
and
xor
cmp
jnp
pop
or
out
insl
enter
outsb
cmp
imul
addr16
pop
lods
cmpsl
or
dec
stc
jge
dec
mov
jmp
addr16
mov
or
iret
mov
insl
mov
cli
icebp
dec
xor
xchg
pop
mov
nop
fisubrl
mov
xlat
and
inc
scas
mov
and
pop
jmp
les
testb
int3
mull
out
jo
xor
jmp
call
call
pop
add
lock
in
sbb
adc
adc
and
ds
jb
scas
lods
adc
inc
sub
add
cwtl
fadd
add
sbb
xchg
js
je
icebp
fidivrs
lds
fmuls
cmp
cmp
mov
or
insb
jecxz
dec
xor
ss
sbb
ljmp
stos
and
pop
aas
xchg
ret
xchg
pop
mov
jmp
pop
ret
cmp
shl
mov
ret
stos
mov
jge
push
mov
inc
lret
aam
mov
mov
notl
cs
push
mov
pop
xor
pop
notl
js
loop
movsl
jg
xor
jge
and
loop
test
dec
inc
add
jecxz
push
xchg
inc
mov
cltd
aam
mov
inc
aad
inc
mov
fwait
cmpsb
ljmp
inc
lds
jb
push
push
mov
dec
andb
lcall
dec
fs
cld
ljmp
mov
enter
adc
lea
aaa
pop
shlb
lret
pop
mov
sub
stos
or
das
ret
lods
and
cmpl
or
and
frstor
xchg
cmp
inc
es
jbe
gs
jecxz
xor
inc
mov
lock
mov
orl
inc
fsubp
stos
pop
add
mov
mov
rolb
or
and
sbb
or
dec
jecxz
sbb
and
fs
das
xchg
sub
fldt
jmp
lock
addr16
jmp
pop
jnp
repz
call
das
test
inc
aam
andb
pop
mov
loope
mov
ret
rcr
sbbb
dec
mov
int3
dec
sbb
ret
scas
xchg
pop
inc
cmp
fiadds
mov
sbbl
pop
sbb
cmp
aaa
out
adc
fnstenv
fcompl
add
cltd
scas
xlat
adcl
jae
cwtl
lock
mov
add
dec
ss
mov
je
rorb
sub
mov
js
xchg
out
lods
test
insl
and
mov
call
and
fidivrs
out
js
push
or
in
adc
popf
scas
scas
out
sub
pop
movsb
iret
push
xchg
inc
sub
sub
pop
in
sbb
dec
push
icebp
jecxz
aad
fmull
xchg
xchg
cs
cmp
mov
adc
and
jmp
mov
push
fcomip
clc
push
std
fidivrs
cmp
cmp
xor
jmp
or
imul
mov
mov
cwtl
xor
insb
lcall
xchg
add
add
stc
je
mov
mov
mov
jno
push
in
addb
negl
inc
lcall
adc
mov
mov
mov
xor
xchg
pop
repnz
pushf
push
push
jno
test
jl
pminub
inc
bound
mov
hlt
push
imul
jb
inc
xchg
icebp
test
add
aad
jae
adc
int3
add
sahf
loopne
ss
rorb
lahf
outsb
call
hlt
xor
in
aaa
js
mov
hlt
repz
loop
pop
jmp
repz
movsb
lret
cmpsl
xchg
jo
push
push
into
pop
xchg
ss
mov
fcoml
mov
lret
repz
sub
sbb
out
add
shrl
rcrb
lds
mov
test
fsub
jno
mov
inc
push
mov
mov
cli
fidivrs
or
xlat
sub
mov
cmp
dec
and
or
dec
push
add
lods
fwait
or
sub
sub
js
xchg
fidivs
repnz
popf
sub
and
push
das
add
call
mov
imull
pop
xor
mov
sub
or
xor
fisubl
nop
push
push
cld
jbe
mov
or
adc
inc
cwtl
lods
negb
cltd
data16
push
mov
test
or
pop
das
xchg
leave
fdiv
inc
in
pop
fcom
out
test
add
push
push
mov
outsl
hlt
push
shll
test
cmpsl
or
leave
movsl
in
push
mov
xorb
xor
jmp
xor
mov
shl
int3
push
mov
gs
cmc
sbb
pop
es
loop
push
out
mov
mov
ret
shrl
fstp
stc
leave
jmp
cmpsb
ficoms
push
das
addr16
lock
cmp
mov
inc
addr16
mov
sbb
popa
lcall
cmpsl
mov
mov
inc
fdivl
cltd
stos
lods
and
mov
daa
mov
or
das
push
sub
xchg
dec
fldcw
sub
inc
xor
adc
repz
xor
and
cld
mov
mov
mov
sub
incb
mov
mov
and
xchg
fwait
or
xchg
lods
adc
mov
jno
fwait
lock
xchg
jmp
sbb
sbb
repz
add
test
inc
das
sahf
mov
push
imul
or
inc
dec
jl,pn
cwtl
dec
jp
dec
js
dec
mov
mov
lock
gs
ljmp
adc
sub
xchg
push
arpl
stc
and
inc
mov
adc
dec
jg
sti
imul
mov
dec
gs
clc
enter
jb
sbb
mov
pop
divl
mov
mov
pop
xchg
rcrl
and
pop
int
lret
subb
fstps
test
ja
icebp
jae
enter
mov
or
xor
and
push
mov
or
insl
mov
int3
sub
xor
stos
in
arpl
or
inc
add
and
lds
push
rcrb
sbb
out
out
pop
sub
xor
jmp
add
insb
icebp
shlb
dec
out
dec
pop
push
outsb
push
enter
test
push
int3
std
jo
je
or
adc
sbb
cltd
dec
mov
test
jne
xlat
push
clc
mov
mov
int
mov
mov
ja
dec
cmpsl
lea
inc
push
push
int
ret
xchg
mov
xor
jo
sbb
dec
loop
ds
xchg
and
adc
ficoml
test
stc
or
pop
ret
pop
leave
jno
aaa
gs
mov
outsb
xchg
js
lea
adc
inc
mov
sbbl
arpl
pusha
or
lea
push
popf
add
pop
lds
xor
add
ljmp
sbb
mulb
mov
test
or
jg
adc
dec
xor
inc
push
mov
add
popa
sub
or
push
faddl
sbb
xor
jnp
sub
or
scas
sbb
mov
xor
cwtl
dec
cmp
test
push
dec
cmc
dec
sub
xchg
inc
cld
cmp
mov
sahf
xor
sub
repnz
subl
dec
add
popa
or
jne
xchg
aaa
fidivrs
fdivrl
cmp
pop
dec
stc
fisubrs
imul
aad
pop
repnz
mov
inc
sbb
or
add
pop
mov
add
jne
cltd
inc
stc
mov
push
push
inc
pop
jnp
repz
mov
xor
adc
or
mov
lret
sbb
fldenv
sbb
je
cld
xchg
rolb
and
hlt
stos
or
mov
mov
inc
mov
pusha
sbb
mov
or
das
cmpsb
mov
add
outsl
fnstenv
xor
clc
lret
loope
in
inc
scas
xor
xchg
xchg
jle
aam
jbe
sbb
jbe
jno
mov
js
test
mov
jmp
int
fisttps
mov
jp
pop
mov
sar
ja
lea
cmp
in
fimuls
or
in
pop
fnsave
xchg
lret
mov
ja
sbb
xlat
mov
insb
mov
mov
test
push
push
xchg
lods
and
lret
mov
cmpsl
fimull
les
sti
mov
xorb
out
mov
pop
rolb
pop
movsb
nop
mov
test
push
sub
int3
pusha
mov
stos
and
sub
ja
and
xchg
mov
aas
insb
call
das
xor
sub
sub
jnp
repz
jg
mov
gs
rolb
or
push
xchg
mov
sbb
cld
scas
std
mov
and
jns
and
mov
je
nop
call
cmp
lret
sub
cltd
rcrl
mov
push
mov
loopne
dec
mov
mov
sti
xor
rcrw
push
movsl
aaa
xor
xchg
inc
mov
cli
arpl
sbb
pop
lock
rcrl
fcomp
mov
push
dec
hlt
lea
mull
not
outsl
imul
rcrb
mov
fsubrl
and
aas
sbb
sub
cmpsl
inc
lahf
push
or
out
es
sbb
jno
sub
pop
add
pop
jbe
jbe
scas
push
inc
mov
add
jge
fwait
xchg
js
pusha
dec
inc
cmpsb
sti
inc
std
cmc
dec
daa
in
and
aas
add
pop
test
dec
mov
negl
popa
das
adc
out
jp
inc
addr16
ds
repnz
lea
aam
pop
lcall
xchg
jae
subb
dec
mov
aas
xor
nop
mov
sbb
pop
and
subl
mov
fcom
sub
jge
push
push
add
mov
lcall
xchg
repnz
jbe
icebp
ja
ret
xor
push
cmp
sub
cmpsb
mov
push
push
loopne
jle
jns
mov
xor
lret
jge
enter
enter
and
push
arpl
pop
adcl
pop
jmp
test
imul
sbb
leave
inc
mov
or
ret
mov
ja
lods
js
mov
rol
shrb
xor
pusha
add
lods
aaa
mov
mov
pusha
inc
push
ds
andb
push
fistps
fidivrl
andb
or
mov
roll
int
sub
pop
fsubr
mov
xchg
imull
push
dec
pop
sbb
pop
mov
fucomip
and
jl
mov
lds
adc
pop
mov
push
loope
xchg
pop
and
cmp
mov
hlt
dec
and
xchg
jle
mov
imul
push
lret
inc
adc
scas
sbb
add
mov
int
jns
push
mov
insl
push
subl
mov
push
xchg
fcoms
outsl
stos
ljmp
mov
test
rorb
addr16
nop
outsl
xchg
push
dec
data16
xchg
sti
inc
xchg
mov
sbb
not
xchg
lds
push
lahf
jnp
es
fiadds
jecxz
pushf
jne
int
repnz
sbb
std
hlt
jle
lock
pop
test
push
lahf
xchg
push
jle
jo
jbe
sub
inc
int
inc
mov
pusha
shll
mov
pusha
jmp
mov
or
xor
in
imul
rorb
arpl
mov
pusha
adcl
adc
jbe
aas
lock
shrl
xchg
pop
out
jle
mov
ret
mov
jg
pusha
es
iret
lds
int
xor
mov
aad
test
fcmove
idivl
inc
pushl
lret
faddp
adc
clc
pop
mov
and
aas
pushf
pop
and
pop
loop
int3
shrb
insl
cmp
in
jb
mov
sub
lret
mov
sub
adc
xchg
xor
and
iret
push
bound
adc
fld1
sti
hlt
jae
ror
repz
jnp
fsubrs
pop
mov
cmp
cmp
sub
fadd
adc
cmp
dec
inc
mov
ret
scas
mov
leave
pop
xor
xchg
adc
repnz
xor
pop
pop
sti
mov
scas
sub
push
int3
mov
adc
cmc
push
sbb
les
xor
testb
cmp
jp
rclb
or
push
or
mov
mov
pop
mov
xlat
sbb
jle
sti
nopl
mov
gs
scas
mov
gs
scas
ret
imul
sbb
stos
xor
aas
mov
aaa
movsl
xchg
mov
call
in
sub
iret
mov
lret
inc
fmull
mov
xor
and
push
or
push
in
mov
mov
xor
jp
cmpl
popa
pop
mov
sub
cmp
mov
xchg
cmp
cmpb
adc
add
testb
xorb
arpl
jns
or
imul
pop
mov
or
movsb
outsl
test
jns
xchg
xor
and
xor
les
push
pop
jp
push
out
xchg
mov
cmp
xchg
out
pop
cmp
push
inc
scas
inc
mov
push
cmp
sahf
cld
sbb
mov
and
push
jmp
or
mov
cmc
in
mov
iret
insb
dec
xchg
pop
lods
nop
mov
leave
mov
mov
scas
or
mov
in
stos
xor
or
mov
mov
push
add
push
in
hlt
lret
sbb
mov
lea
stos
test
or
dec
test
or
shll
popf
popa
insb
adc
xchg
mov
mov
add
cwtl
mull
lret
rcll
sbb
imul
and
scas
lret
call
out
mov
dec
pushf
xorl
adc
push
sbb
iret
and
in
ss
stos
cmp
mov
inc
sub
gs
sub
mov
jbe
jmp
cmp
clc
out
out
lods
cli
je
mov
ret
add
jnp
nop
xor
stos
bound
xchg
andl
pop
in
insl
push
sub
cmpsl
or
in
leave
push
sub
loope
mov
mov
xchg
cmc
jno
or
or
lds
cmp
or
jo
bound
and
outsl
cld
lock
xchg
insl
pop
loopne
jae
js
shrl
xorb
out
cltd
aas
cmp
scas
shrb
ds
cli
sbb
ja
packssdw
jle
int3
push
ds
imull
gs
jle
xor
repz
call
sbb
stos
or
push
xor
jge
jo
loopne
mov
or
inc
sbb
xor
ljmp
dec
jb
addr16
imul
and
ja
or
jmp
inc
fisubl
lock
xchg
add
aaa
pop
adc
shrl
jmp
lahf
test
xor
pushf
fs
test
adc
outsb
out
outsl
add
fwait
sbb
outsb
sti
pop
and
pop
enter
in
aam
call
mov
push
insl
daa
and
mov
cwtl
adc
mov
and
and
adc
mov
lods
dec
fs
add
or
mov
es
lret
cli
ljmp
mov
flds
aad
jae
fstpt
pop
insl
adc
mov
cli
gs
push
or
xchg
jo
scas
das
jae
rolb
dec
mov
inc
push
push
scas
into
lods
fistpl
add
mov
pop
sbb
add
std
adc
lds
into
inc
mov
xlat
mov
outsb
adc
push
fcom
adcb
in
or
popa
ss
pop
scas
jne
stc
lods
sahf
xor
in
lcall
cmp
fs
push
inc
xor
test
loopne
or
xchg
dec
cwtl
xchg
push
clc
daa
andl
or
inc
int
add
fdiv
add
ss
cmp
xchg
arpl
pop
outsb
push
into
insb
repnz
and
adc
jo
shll
in
push
sbb
cmp
xor
mov
jp
mov
out
pop
mov
pusha
sti
sti
mov
mov
out
adc
pop
mov
push
enter
or
fstpt
gs
push
xchg
dec
jo
xchg
jmp
jbe
sub
dec
push
lds
mov
push
inc
lahf
cmpsl
enter
aas
rcrl
jmp
imul
int
out
icebp
jno
mov
jne
dec
or
imul
jns
adc
mov
lea
add
mov
jl
rolb
arpl
mov
inc
bound
mov
cld
xor
into
mov
sub
shlb
or
xor
cli
std
aas
mov
ret
cmp
push
mov
movsb
decb
idivb
jmp
mov
or
test
jg
pusha
xor
fimuls
arpl
insb
test
imul
test
xchg
dec
pusha
mov
ret
push
lds
mov
pop
cld
xor
das
mov
mov
cmpl
push
ret
mov
dec
stos
mov
lcall
push
fwait
pop
sbb
int3
fwait
je
push
jl
andb
mov
lock
xlat
loopne
jl
add
clc
int3
fldt
out
cmp
xlat
int3
inc
ret
clc
mov
lret
jle
cld
inc
mov
jno
adcl
icebp
repz
xor
push
dec
adc
fidivrl
push
lahf
mov
mov
sub
jno
in
mov
cmp
in
and
xor
mov
mov
push
jbe
out
xchg
shll
out
test
pop
ja
insb
lahf
xor
test
push
pop
jo
mov
jmp
push
mov
adc
shll
jns
leave
jmp
mov
shlb
icebp
fnstcw
jg
pop
dec
xlat
ficompl
cmp
shll
dec
jb
imul
jp
dec
sti
nop
hlt
out
mov
lock
mov
add
xchg
in
dec
xchg
mov
add
lods
leave
mov
dec
outsb
or
lods
mov
pop
pop
les
jnp
mov
mov
push
and
iret
aam
in
dec
cmp
aad
or
loope
mov
cmp
and
push
xor
sub
sbb
push
jbe
jecxz
add
cld
mov
ja
hlt
jecxz
pop
les
les
pop
ds
outsl
mov
mov
add
dec
js
insl
add
aaa
sbb
sbb
sti
and
call
jo
adc
imul
xor
pusha
xchg
fs
mov
pop
out
mov
or
jb
jns
out
cwtl
push
pop
push
ror
test
sbb
shll
rcll
aam
add
lret
jne
add
outsl
aas
mov
cmp
mov
xor
push
dec
cmp
xchg
mov
ficoms
movsb
lock
outsl
movsb
mov
mov
push
sahf
jo
or
cs
mov
imul
mov
or
sub
mov
xchg
sbb
push
sbb
mov
adc
push
pop
ficoms
xchg
lods
adc
mov
sub
ja
mov
cmp
std
mov
in
out
jp
flds
push
jno
jmp
lods
shrl
jne
fdivrl
xor
jbe,pt
out
or
sbb
sub
push
jne
fwait
adc
cmp
push
sbb
fbstp
jecxz
mov
mov
js
sbb
pop
imul
adc
push
inc
nop
aaa
cmp
gs
and
mov
repz
lret
lds
jno
bound
pop
fiaddl
add
pop
dec
jl
popaw
dec
mov
add
mov
dec
repz
pop
adc
add
nop
xchg
cmpsl
movsl
inc
in
pop
cwtl
inc
cld
mov
test
gs
cwtl
mov
mov
ss
cmp
dec
adc
stos
es
mov
add
pop
push
lods
in
mov
mov
jns
dec
mov
xor
repz
push
or
into
popf
add
fdivrl
lea
sub
inc
add
aas
cmp
dec
mov
push
in
push
lahf
test
test
xor
sahf
je
cli
in
mov
add
aad
int
dec
scas
mov
add
das
push
pop
add
cld
mov
and
sahf
aam
inc
xchg
and
push
push
add
jbe
pop
add
sub
pop
mov
or
jp
repz
mov
inc
pop
cmp
fnstcw
sub
outsb
fbstp
mov
cld
mov
fwait
inc
lock
je
push
mov
js
adc
lods
push
rcll
pop
das
dec
mov
push
mov
cmp
jl
mov
push
cmpsl
orb
cltd
cltd
push
jg
inc
js
es
mov
in
xor
inc
out
call
adc
pop
dec
out
icebp
cld
jg
xor
inc
ret
cmp
rclb
mov
test
cmp
mov
ljmp
mov
jg
mov
mov
fiadds
cmc
and
push
rorb
xchg
adc
mov
imul
outsb
ret
cmpsl
sub
imulb
sub
sub
into
testl
sub
mov
ja
into
mov
lock
outsl
inc
mov
popf
es
sbb
ja
inc
pop
pop
mull
int
lret
and
scas
mov
repz
lret
jne
les
add
mov
ret
push
adc
xchg
andl
mov
dec
push
cmp
sti
cmp
fistpl
loopne
add
mov
adc
lock
andb
inc
adc
loope
sahf
mov
fwait
dec
gs
mov
or
les
out
xchg
jnp
xor
adcb
cwtl
ftst
int3
push
pusha
push
push
pop
xchg
push
arpl
je
cmpsb
repz
je
into
dec
mov
scas
push
pop
cltd
movsl
dec
jns
jmp
push
sbb
or
pushf
and
mov
cmp
pop
fcomi
adc
push
pop
cmp
push
sarb
sub
mov
add
sbb
loopne
sub
rcrl
rcll
call
aam
mov
lret
loopne
xchg
out
sbb
imul
mov
movsb
pusha
mov
aad
dec
pop
push
and
push
aam
stos
mov
push
push
jno
cmc
stos
cmp
fcom
cmp
mov
mov
add
gs
mov
jns
mov
mov
sub
sub
sahf
repz
subb
imulb
cmp
jae
fldt
xor
repnz
xchg
and
jo
xchg
jg
cmc
bound
test
inc
lret
or
aaa
mov
pop
inc
pusha
repnz
pusha
pop
dec
adc
ss
rorb
jmp
mov
mov
add
inc
xchg
sbb
stos
mov
adc
mov
push
jbe
out
mov
jl
adc
xor
push
outsb
test
pushf
into
and
add
repz
and
jle
mov
mov
jae
aaa
adc
and
inc
movsl
push
cmpsb
add
xchg
xchg
push
xor
aas
mov
in
loop
push
shl
cmp
inc
mov
inc
movsl
jne
dec
lods
sbb
mov
sbb
mov
aad
flds
mulb
cli
add
je
sahf
sbb
mov
lcall
pop
xchg
sbb
adc
add
enter
aad
aaa
xchg
mov
sbb
jnp
les
inc
decl
jp
lea
int
fisubrl
sub
sahf
push
sar
jno
rcrb
xorb
xor
cmp
mov
push
mov
out
roll
in
push
mov
sbb
stos
dec
imul
cmp
enter
mov
pop
sbb
push
nop
js
jg
jae
jne
aaa
inc
sahf
inc
add
outsl
xchg
aaa
sub
dec
in
jno
push
mov
xchg
pop
test
gs
jg
inc
jg
cmc
inc
pop
fldt
mov
int
jne
lock
ja
sbb
and
fdiv
sahf
addl
scas
roll
insb
dec
imul
jno
aas
xchg
cltd
xchg
lds
jae
pop
and
lret
cmp
pop
out
inc
lret
mov
int3
outsl
inc
dec
fwait
incl
leave
mov
mov
sub
dec
inc
enter
out
mov
jno
rolb
sbb
adc
outsb
push
sbb
lods
inc
in
shll
adc
sbb
xor
ret
mov
push
mov
cmpsb
test
cmp
and
cli
inc
filds
and
mov
push
rcl
orb
clc
repnz
jbe
fcomip
jo
repnz
int3
inc
or
divb
or
mov
out
shrb
mov
fstpt
jle
adc
fsubrl
and
pop
ljmp
sub
sub
and
imul
insl
sub
xor
xchg
cmp
inc
aaa
sub
outsl
hlt
pushf
push
fwait
inc
loope
ja
adc
jl
adc
ret
out
sbb
sbb
hlt
adc
imul
push
mov
inc
dec
mov
push
pop
push
stc
sub
sbb
std
xor
push
xor
js
mov
popf
das
insb
adc
aaa
add
or
cmp
enter
inc
lds
outsl
sahf
jae
sbb
loop
xchg
cmp
pop
mov
leave
xor
jge
push
add
pop
ffree
adc
fsubrs
or
add
jge
push
lret
ret
inc
aam
mov
push
aad
or
les
inc
lret
push
stc
pop
mov
rcrl
stos
aad
inc
inc
lcall
pop
xchg
ret
outsb
jbe
imul
lock
lods
dec
int
fcmovnu
test
imul
and
imul
hlt
push
pop
test
enter
cmp
inc
cmc
adc
jnp
lds
mov
ret
popf
inc
jae
mov
hlt
ss
rclb
mov
lds
hlt
xchg
bound
pusha
movsb
sti
insb
adc
cmp
fucomi
jo
cwtl
cmpl
das
cmp
fldcw
adc
push
dec
sub
popw
ret
mov
add
pop
lcall
jns
add
xchg
int3
inc
loop
mov
pop
pop
out
or
and
mov
mov
pusha
iret
les
movl
mov
or
sahf
mov
sub
mov
xor
lods
std
pop
aaa
aad
push
push
stos
cwtl
stos
out
push
in
dec
lock
es
fwait
pop
jecxz
out
outsb
xor
xor
std
movsb
adc
nop
pop
adc
mov
mov
xor
fstps
loope
hlt
sub
or
adc
cwtl
or
aaa
mov
pop
loop
cmp
aas
sbb
addr16
inc
rcrb
leave
and
inc
mov
and
ds
jl
mov
push
pop
enter
sub
jo
mov
lods
arpl
pushf
aad
out
pop
stc
jns
pop
jnp
stc
lds
add
pop
dec
mov
jecxz
fistl
fwait
loopne
mov
mov
cmpsl
idivb
adc
dec
loop
fdivl
repnz
jae
mov
pop
jns
mov
aaa
outsl
ljmp
cwtl
ret
inc
int3
mov
data16
sub
out
push
lock
mov
gs
lret
dec
gs
add
hlt
add
ficoml
inc
jmp
loopne
out
inc
lods
push
aas
xor
mov
sahf
pop
jmp
orl
outsb
lret
mov
dec
popf
ret
ljmp
xchg
stos
dec
fidivs
popf
aas
movl
xchg
sub
and
fisubrl
pop
xor
sbb
dec
std
cmova
lahf
push
mov
loope
sbb
test
repz
xlat
mov
push
pop
lcall
xchg
or
enter
insb
xchg
jne
roll
stos
iret
sahf
clc
mov
loope
inc
xlat
iret
mov
and
filds
mov
insb
jg
cli
rorb
lods
loop
push
daa
lock
roll
inc
sbb
add
lods
push
jne
jb
jge
addb
ret
int3
in
xchg
pusha
jle
mov
ja
inc
xchg
rcrb
mull
jl
inc
into
int
inc
aaa
mov
lcall
addr16
push
ret
pop
add
xchg
cmp
jle
lea
loop
cli
xor
xchg
popa
aas
xor
pop
dec
or
cmp
push
rcl
pop
pop
icebp
sti
shrb
lea
lods
add
sbb
sbb
adc
lds
and
add
push
inc
jns
sub
and
leave
sbb
enter
mov
jns
xor
in
mov
sbb
mov
bound
mov
lods
pop
inc
leave
mov
mov
outsb
xor
fstl
clc
fwait
shll
test
das
mov
and
leave
pop
mov
pusha
mov
mov
pop
xchg
sahf
jne
mov
xor
ret
cmpsl
push
out
pusha
sarl
dec
cmp
jp
lcall
inc
jmp
lock
and
xor
ret
cld
aas
shl
pop
movsb
cmp
push
cmp
mov
repz
notl
rolb
arpl
adc
xor
xor
fwait
inc
cmp
and
pop
mov
jp
cmp
lock
lahf
lods
dec
pop
inc
adc
cmp
xor
jg
imulb
mov
mov
cltd
jmp
andb
inc
push
jl
data16
call
push
cwtl
shll
add
jge
cmp
inc
in
int
stos
imull
or
push
inc
xchg
enter
xorl
or
sbb
xor
loopne
adc
push
sarl
lods
mov
movsb
ja
mov
pop
fisttpl
push
and
aad
adc
fxch
jmp
xchg
xchg
jl
leave
cltd
std
mov
push
in
out
in
ret
mov
or
mov
push
enter
push
sbb
lcall
stos
fwait
inc
pop
pushf
ss
xor
lret
arpl
sbb
stos
mov
in
icebp
arpl
xchg
ja
mov
loopne
xchg
imul
sbb
js
iret
insl
movl
mov
movsb
xlat
add
notl
sub
rol
dec
call
sub
movl
cmp
bound
rep
mov
or
adc
fidivrl
and
daa
cs
cmp
add
flds
shll
xor
xorb
stos
lea
sbbb
aas
push
test
mov
insl
push
movsb
jns
aam
xor
scas
pop
sub
sbb
inc
sbb
mov
pop
aas
mov
outsl
loopne
lods
mov
scas
inc
sub
lretw
xchg
mov
adc
ret
ret
jno
stc
push
sbb
push
test
jns
xor
fiadds
xor
cmp
cli
dec
or
or
xchg
xor
fnstcw
in
adc
cmp
js
adc
mov
xor
mov
mov
mov
xchg
scas
stc
and
mov
mov
out
inc
out
pusha
ja
add
pop
sub
dec
addr16
aam
ds
cmp
push
pushf
rcrl
dec
and
loopne
push
movsb
data16
add
ja
dec
inc
lods
sub
xchg
fisubrl
lods
and
cmpl
sub
mov
ret
test
dec
mov
sbb
cmc
jle
inc
sbb
add
mov
ja
hlt
push
sub
push
sahf
push
sub
push
jl
fnsave
lcall
or
dec
fwait
shrb
popa
int3
pop
nop
adc
xor
imul
ja
or
paddusw
inc
jecxz
pop
insb
push
mov
jmp
je
cltd
pop
and
aaa
pop
ss
pusha
in
stos
pusha
jb
dec
repnz
push
lret
jae
aas
inc
sbb
test
xor
outsb
or
mov
shl
das
push
pop
imulb
lods
inc
ret
inc
imul
popf
clc
scas
test
fidivl
mov
rolb
cltd
and
jge
rcl
dec
and
pop
jmp
int3
or
sti
push
loope
repz
dec
mov
loopne
fs
sbb
aaa
fistpl
sbb
movsb
mov
jbe
sarb
or
add
xor
negl
movsb
or
test
dec
insl
cmp
lock
jns
rolb
mov
mov
or
sbb
push
pop
outsb
call
mov
sarl
jl
fdivrs
xor
sub
jl
pop
stc
in
mov
lea
add
or
lock
dec
bnd
insl
or
pop
mov
call
jg
cli
add
cli
mov
decl
daa
cmc
add
push
lret
std
inc
add
sbb
xchg
popa
pop
and
repz
mov
rorl
push
and
pushf
xchg
push
out
fistpl
push
nop
sbb
pop
push
movsb
das
sahf
test
cmpl
enter
cld
add
xorb
xor
pop
rclb
pop
or
dec
das
pop
lods
xchg
loop
cmp
jle
fadd
sar
movzwl
pop
ja
in
mov
sub
call
das
xor
js
dec
lahf
push
inc
sbb
cli
movsl
in
cmp
push
adc
cmp
dec
in
and
push
mov
sub
and
push
pop
xchg
faddl
les
loope
mulb
add
dec
mov
xlat
flds
pop
negb
lcall
inc
pop
stc
mov
adc
shlb
dec
mov
leave
fdivrp
imul
fmull
enter
daa
cmp
jmp
bound
adcb
mov
jne
mov
daa
cmp
inc
int
inc
call
or
dec
gs
inc
stos
add
sub
sbb
stos
and
xor
in
pop
jns,pn
roll
sub
out
dec
mov
or
fstps
push
sahf
nop
lahf
in
jmp
xchg
int3
rclb
jae
pop
ja
pop
jge
arpl
inc
add
pop
in
push
xchg
mov
rcl
popf
mov
xor
xchg
out
xchg
je
arpl
enter
jge
jmp
imul
mov
dec
out
mov
pop
dec
scas
cmc
sbb
inc
daa
bound
loope
mov
cs
sub
lret
sub
mov
adc
push
cmp
or
adc
adc
add
shlb
xchg
sbb
sarb
xchg
cmp
pop
dec
es
cwtl
aas
movsl
loop
lds
shl
cmpsb
push
das
cmp
push
sbb
inc
mulb
cmpsb
rcrl
and
mov
mov
dec
inc
fisubl
fadds
cmc
sub
fadd
sbb
pop
test
test
xchg
fsincos
xlat
add
mov
pop
cmc
cltd
out
or
loop
sub
push
fcmovnb
fdivp
cmp
enter
mov
fists
imul
addr16
idivb
lret
adc
mov
imul
inc
or
mov
xchg
daa
in
bound
cmp
pop
test
dec
adc
and
dec
mov
jg
push
call
sbb
xor
push
xchg
jp
xchg
or
aaa
sahf
adc
mov
sbb
inc
out
mov
push
test
stos
jne
pop
int
mov
loop
scas
cmp
imul
leave
mov
cmp
inc
gs
fs
hlt
pop
movsl
fs
xchg
loopne
or
add
imul
push
adc
dec
shrl
xor
jns
mov
lock
outsb
jo
or
mov
lock
adc
lea
pop
lds
test
inc
mov
add
notl
or
jp
jnp
aad
fwait
cld
sub
inc
dec
scas
cmp
or
fcmovne
or
dec
dec
mov
inc
xchg
fisttpll
cmp
fiaddl
dec
not
xchg
sbb
xchg
cli
or
push
gs
xchg
notl
das
iret
pop
mov
arpl
arpl
add
jecxz
inc
nop
pop
stos
sub
lret
or
es
jae
imul
mov
mov
mov
pop
or
daa
cmp
lea
mov
jl
inc
stos
inc
push
pop
jne
sbb
add
add
or
adc
repnz
inc
mov
cmp
call
insl
jbe
cmp
and
incl
stc
int3
incl
or
je
mov
pushf
jp
outsb
ljmp
icebp
jmp
movsl
lods
pop
clc
fcomps
add
fcomi
mov
stos
push
push
andb
dec
stos
imul
push
jae
pop
pop
jl
shrl
mov
jmp
lahf
in
dec
mov
or
xchg
sub
push
ljmp
mov
outsl
fwait
xchg
push
inc
push
jo
fisttps
repz
rcll
push
imul
mov
adcl
sbb
lds
sub
and
mov
mov
mov
push
cmp
sti
jl
add
movsb
pop
cmp
xor
adc
fsubs
mov
inc
sbb
add
orl
add
lcall
pop
notl
dec
stc
push
xor
push
dec
sub
push
lahf
mov
insb
mov
aad
js
rorb
loop
jl
pop
push
fs
dec
sbb
in
jmp
dec
jmp
adc
xchg
mov
sbb
pop
xchg
cs
lret
jg
jmp
pop
loope
sbb
cltd
mov
fcoms
imul
push
pop
sub
call
pop
mov
rcrl
js
mov
in
push
sbb
fldenv
add
in
je
mov
adcb
jo
mov
test
cs
lea
sub
xor
pop
fimull
cmp
or
pop
stos
imul
sub
pop
mov
in
adc
sub
mov
xchg
jl
dec
int
mov
push
or
and
je
into
or
in
loopne
xchg
xchg
lock
inc
pop
xor
and
jp
jno
gs
push
out
mov
incl
mov
dec
shl
adc
stos
aam
xchg
fld
xlat
insl
xchg
pop
addb
fs
xchg
push
pop
push
std
cmp
or
mov
jle
sub
clc
cltd
and
xor
mov
push
sub
int3
add
adc
mov
push
stos
xchg
cs
sub
aad
lahf
xchg
mov
sbb
sbb
movl
add
xor
js
sbb
jae
mov
movsb
inc
mov
add
std
push
arpl
in
fiadds
pop
adc
fwait
mov
lock
out
in
jmp
call
jmp
sahf
push
jecxz
mov
xor
ret
clc
inc
mov
cmpsb
movsl
lahf
jle
popa
rorl
fiadds
push
sub
or
add
xor
in
fwait
es
mov
daa
jbe
jno
pop
push
in
or
and
push
rclb
stc
mov
sub
test
popf
add
xor
sahf
dec
xor
push
mov
and
int3
or
rcr
jmp
mov
unpckhps
scas
shll
add
lcall
push
inc
dec
jbe
cltd
in
xor
xchg
ss
adc
dec
pop
repnz
je
sahf
xor
test
divb
inc
sahf
xchg
stc
dec
jne
jmp
rorb
lods
and
fs
shrb
mov
mov
iret
in
jnp
jg
fisubrl
pushf
cmp
cmp
cmpsb
mov
jbe,pn
lds
repz
testl
addr16
movsb
xchg
jge
imul
in
je
mulb
outsl
dec
sbb
ja
push
or
sbb
stos
xlat
scas
lods
sbb
sub
push
mov
popf
gs
sbb
jmp
or
and
add
jl
pusha
int
movsl
and
andl
dec
mov
mov
pop
sub
xchg
lds
mov
mov
cmpsl
mov
fidivrs
inc
xchg
sbb
clc
and
dec
insb
fs
call
push
popa
push
sbb
push
loop
fsubr
push
push
cmpsb
arpl
stos
insl
dec
inc
cmpsl
ret
mov
cltd
inc
fisubl
or
dec
jp
jmp
sbb
clc
enter
mov
push
jns
mov
mov
int
mov
jl
inc
imul
in
cmp
stos
arpl
add
aaa
es
or
mov
mov
or
pop
cmpsl
and
push
mov
jnp
outsb
fidivrl
aas
loopne
mov
rorl
iret
test
mov
jmp
push
xchg
and
pop
in
jl
decb
jo
fisubl
fsubl
popa
int
hlt
pop
jae
movl
ss
lock
pop
clc
dec
out
icebp
clc
lods
and
xor
outsb
adc
jge
push
adc
xor
mov
scas
rclb
or
lods
out
scas
hlt
daa
jp
mov
insb
pop
lock
test
subl
std
mov
outsb
imul
sti
sbbb
cmpsb
int
stos
ja
xchg
mov
xchg
push
fisubrl
xor
imul
cwtl
in
mov
cld
or
and
jns
sub
xor
outsb
mov
dec
into
mov
arpl
loope
out
js
xchg
push
cli
mov
cmc
popa
in
out
push
push
fnstenv
mov
inc
xlat
push
pop
repnz
mov
fisubrs
xor
sub
mov
sbb
dec
xchg
sbb
push
mov
dec
mov
mov
enter
icebp
in
data16
pop
jae
icebp
cwtl
out
xor
aaa
cmp
rcrl
repz
push
push
sbb
jnp
pushf
xchg
mov
int
je
pop
jno
hlt
adc
mov
scas
js
cli
loopne
out
xchg
xchg
cmp
loop
jns
gs
push
dec
imul
pushf
or
dec
icebp
push
popf
adc
jo
andl
cmpsl
leave
dec
adc
test
mov
push
push
pop
gs
dec
pop
dec
cld
cmp
aas
lea
sbb
sub
push
cmp
xchg
loope
fimull
pop
ret
ds
pop
mov
daa
aas
int3
sahf
mov
dec
xchg
call
fwait
mov
int
or
pusha
sbb
int
sbb
jg
leave
shll
mov
xor
push
out
loope
mov
aam
mov
sets
cmpl
idivl
cmp
mov
dec
enter
jl
shrl
jns
cmp
inc
pop
mov
dec
aas
stos
and
jno
scas
jmp
ret
push
jmp
rclb
stc
jae
loope
and
sub
outsb
fildl
popf
insl
stc
push
jo
into
lock
mov
mov
lea
inc
dec
test
hlt
dec
vmread
rcrl
xchg
adc
cmpb
lods
cmp
sti
sti
jb
sub
pop
push
lcall
jge
xchg
jae
in
jmp
push
sbb
inc
cmp
and
add
push
inc
int
out
sub
les
add
jge
aad
push
cmp
add
mov
daa
dec
jae
sbb
inc
inc
icebp
dec
popa
test
jle
xchg
adc
push
test
out
pop
mov
xchg
and
jmp
std
das
insb
xchg
loope
out
ret
add
dec
add
fldcw
cmp
add
xchg
lea
loopne
inc
test
aaa
sbb
lds
out
mov
clc
mov
addr16
hlt
add
sub
sub
push
outsb
lea
adc
test
rcr
fistps
xchg
addr16
dec
cli
dec
rol
fucomip
fcompl
out
pusha
or
xor
dec
and
arpl
aaa
sub
mov
add
push
mov
dec
push
jp
fidivrl
pop
sbb
add
sub
loopne
xor
adc
push
ds
stos
fs
aam
daa
arpl
push
enter
dec
inc
sub
jecxz
push
into
jl
push
mov
jb
das
popf
out
call
jbe
push
cmpsl
adc
mov
cmp
es
xor
add
inc
fdivr
idivb
jns
adc
and
roll
out
jl
das
adc
lods
movb
rorb
aad
insb
ljmp
inc
hlt
and
pushf
inc
jo
and
loop
push
ljmp
pusha
adc
outsl
fs
adc
push
jb
movsl
jb
xor
and
pop
outsl
cmp
xchg
add
xchg
adc
das
test
sti
adc
imul
subl
shlb
stos
fisttpll
jmp
and
cld
cmp
insl
rorb
jo
movsl
lcall
xor
shrl
dec
cmp
daa
into
lahf
aas
push
jbe
xor
xchg
test
dec
xor
mov
lods
pushf
fs
mov
pop
dec
xorl
cli
mov
pusha
xor
cltd
pop
dec
xchg
jnp
hlt
out
mov
movsl
lods
test
scas
xlat
sbb
aas
jmp
inc
xchg
mov
inc
flds
add
inc
decl
sub
jg
cmp
and
lds
inc
ret
cmp
dec
xchg
add
ret
mov
sub
data16
jmp
sahf
mov
pop
mov
out
aas
xchg
xor
sti
leave
or
mov
movsb
mov
stos
repnz
sarb
daa
xchg
jb
stos
in
mov
fisttpll
aas
add
and
shll
adc
std
add
add
testb
xlat
or
dec
dec
scas
test
pusha
out
lods
es
inc
fisttpl
pop
fstl
out
lahf
or
or
repz
stos
shrb
aad
mov
lea
mov
icebp
cmpb
xchg
and
ja
pop
mov
jae
sbbl
int
stos
xor
fldl
cmp
xor
adc
mov
sbb
adc
in
sub
push
negl
loop
popf
push
lret
lods
fidivrl
mov
jecxz
mov
cmp
push
jnp
or
mov
sbb
fcmovnu
icebp
ljmp
popa
jne
add
and
movsl
dec
jae
sub
mov
mov
ds
sbb
cwtl
mov
mov
inc
arpl
test
or
test
xchg
cmpsl
cld
mov
mov
sbb
inc
popa
frstor
xor
dec
jg
jns
jb
dec
mov
fstpl
push
adc
pmaddwd
or
dec
sub
ja
dec
push
mov
xchg
lret
lock
push
rorb
cmp
cmpsl
inc
mov
addr16
add
sbb
cltd
gs
mov
push
inc
out
das
rcll
shll
dec
jge
push
test
xchg
jno
push
and
mov
sub
pusha
and
xor
fisttpll
sbb
cmc
jmp
xor
rcr
jmp
push
test
pop
lds
or
xchg
ja
or
sbb
xchg
and
inc
lock
cwtl
call
iret
and
fnstcw
movsl
in
sub
rcrl
jbe
inc
xchg
mov
mov
lret
mov
sarl
or
lahf
add
dec
nop
mov
and
ret
lods
je
mov
outsb
adc
mov
shl
add
cmp
xor
stos
inc
daa
dec
mov
into
and
inc
int
dec
daa
fwait
and
pusha
jo
sub
adc
xor
cmp
jmp
mov
jbe
pushf
loope
pop
inc
or
frstor
dec
dec
shlb
outsb
add
in
jae
mov
push
or
or
outsb
inc
mov
imul
lods
ficoms
mov
inc
pop
jb
xchg
dec
mov
sbb
test
fimuls
sub
pop
add
sarb
xor
test
cmp
ljmp
popf
inc
push
push
out
enter
mov
sub
or
ret
cmp
pop
jbe
subw
jge
dec
add
mov
sbb
and
jp
test
add
or
inc
sahf
mov
sub
and
and
cmpb
insl
push
ja
aaa
mov
pop
dec
fldenv
add
lods
rcrl
sbb
je
pop
mov
xchg
pop
inc
xchg
mov
cwtl
cmp
ret
testb
and
lcall
out
cmp
pop
ficomps
push
shlb
cwtl
mov
lahf
cli
mov
cmp
mov
or
stos
cli
mov
sahf
cmpsb
in
fwait
xor
fstps
or
sub
pop
mov
lods
stc
push
push
pop
pop
mov
inc
mov
jae
cwtl
xor
pop
lret
dec
loope
sub
jae
jno
enter
inc
dec
push
out
sub
add
ljmp
sub
in
out
inc
aaa
sbb
jl
pop
mov
dec
ret
mov
aam
sbb
inc
out
push
cmpsb
mov
shlb
push
xor
bound
cmp
in
mov
ljmp
and
adcb
dec
hlt
cmp
and
jbe
in
roll
xchg
mov
push
lret
lock
pop
adc
lock
icebp
pop
test
fcomps
cs
add
mov
in
mov
lea
jmp
loope
jae
imul
mov
lods
jne
adc
std
inc
add
pop
and
dec
ljmp
loop
cmc
and
aaa
add
sbb
clc
pop
lret
rcr
or
mov
jb
jns
insl
imul
das
jg
mov
add
xor
cmp
push
cmp
ud2
adc
push
mov
dec
mov
xor
fiaddl
xchg
pop
push
dec
movsb
out
adc
adc
mov
pop
lods
lcall
jae
shrb
xchg
test
mov
jle
outsb
mov
dec
xor
dec
clc
or
sbb
cmp
outsl
gs
sub
push
jge
inc
fiadds
rdtsc
gs
push
xchg
add
test
jmp
hlt
out
inc
dec
inc
jo
jge
in
jnp
rol
sbb
pop
fst
nop
mov
mov
lret
push
mov
loopne
lock
lds
ds
adc
fucomip
pop
push
cmpsb
pop
sub
loop
cs
das
add
xchg
decb
scas
cmp
fidivrs
out
rcrl
fs
sub
cmpl
pop
shlb
movsl
and
mov
dec
mov
cmpsl
xor
xchg
push
fcmovnu
fiadds
cwtl
and
cs
adc
dec
mov
es
sbb
mov
sbb
movl
mov
and
inc
lret
in
test
stos
add
jne
sub
or
pop
cs
mov
sbb
fisttpll
cmpsl
mov
mov
inc
push
pop
cmp
aam
mov
mov
lcall
int
pop
pop
cmpsl
je
xor
jle
mov
repz
adc
mov
dec
mov
cmp
int3
fisubs
sbb
and
sub
dec
or
insb
adc
xchg
sub
pop
popf
xor
sbb
push
sub
push
shlb
test
into
xor
popf
mov
in
mov
mov
mov
mov
mov
xchg
out
mov
or
sbb
ds
shlb
mov
ljmp
push
inc
mov
xor
shl
xchg
adcb
jge
aas
sbb
push
pop
pop
dec
jle
mov
sbb
sub
cli
xchg
mov
xchg
sbbl
outsl
pop
insl
fs
jmp
movsb
lahf
insb
clc
sbb
or
nop
in
repnz
insl
inc
test
subb
push
jb
xchg
xor
jecxz
test
fdiv
out
bswap
sbb
cwtl
aam
in
testb
xor
faddp
cmpsb
xor
mov
sbb
or
mov
test
rorl
sub
int3
insl
pusha
jno
sbb
xor
in
jge
xlat
cmp
test
je
jb
cmc
jns
jbe
aad
xchg
aaa
inc
out
fbstp
jns
jns
repz
push
mov
push
pop
mov
or
sub
mov
push
sbb
addr16
sbb
sub
xchg
inc
push
xlat
xor
push
cmpsb
bound
sub
xchg
mov
scas
mov
test
outsl
pop
scas
dec
sub
xchg
jnp
pop
add
or
sbb
nop
push
push
icebp
stos
sub
jecxz
pop
fdivrl
mov
cwtl
jne
imul
imul
adc
lods
jle
out
int3
mov
stc
negb
cmp
adc
rcr
sar
inc
pop
fldcw
xchg
pop
inc
cmp
mov
cmp
mov
pop
or
mov
js
sub
pop
push
iret
lds
xchg
inc
popa
addb
arpl
fildl
movsl
out
shrl
push
jae
je
or
int
test
daa
fwait
out
push
jnp
addr16
mov
cltd
mov
lcall
push
or
mov
je
data16
fisubrs
mov
sbb
jl
cmp
les
int3
dec
push
xor
inc
sub
cli
add
test
lcall
fucomip
mov
loopne
xchg
cli
or
insb
mov
imul
xchg
hlt
sbb
jp
scas
and
dec
add
push
inc
notl
arpl
adc
cmp
lock
lods
jmp
xchg
add
dec
jae
sub
testb
sub
inc
dec
stos
in
pop
add
jmp
loopne
cli
repz
fucomp
dec
and
lods
push
mov
inc
mov
push
sub
dec
mov
push
movsb
sub
adc
sbb
fdivr
ss
xchg
fsubrl
call
sbbl
cwtl
xchg
fists
inc
aad
xchg
mov
mov
and
test
cwtl
sub
inc
test
out
mul
test
xor
mov
jbe
sahf
push
fdivp
adc
adc
pop
gs
inc
mov
dec
mov
ja
or
fs
mov
xchg
clc
stc
mov
stos
inc
xor
jle
into
aam
lods
or
rclb
mov
cmpb
add
push
cwtl
pop
pop
sahf
outsb
pop
pop
rcrl
add
mov
sub
sub
jae
push
mov
mov
fsubrl
push
stc
shl
mov
mov
push
shlb
out
jnp
add
inc
loopne
in
xchg
mulb
or
and
sbbb
leave
adc
xor
roll
sub
add
jp
cmc
xchg
and
das
scas
icebp
sbb
andl
lahf
lcall
test
inc
sbb
sub
pop
xchg
push
jle
and
lahf
push
dec
lods
fs
inc
std
push
and
jmp
imul
pop
cmp
dec
jle
dec
xchg
jb
mov
and
mov
and
xchg
inc
movsl
jle
jne
pushl
dec
insb
imul
ljmp
xlat
adc
shl
divb
inc
xchg
imul
push
adc
dec
sbb
cmp
arpl
mov
daa
mov
push
sbb
imul
addl
jae
sti
sahf
jns
mov
mov
add
or
lods
das
xor
add
popf
push
pop
inc
test
fwait
dec
in
xlat
or
stos
mov
jg
jecxz
flds
push
fisubl
pushf
mov
cmp
add
xchg
ret
push
push
clc
pop
or
movsl
mov
lea
sub
fisubrs
xchg
mov
jb
popa
lds
mov
push
test
push
adc
dec
jp
repnz
adc
mov
and
rorb
and
adc
test
sub
fcoml
and
dec
sub
push
ret
into
adc
dec
push
push
repz
add
ret
or
lea
lret
or
insl
stos
jmp
fwait
add
jmp
or
xchg
mov
lods
mov
rolb
and
lret
inc
xor
nop
clc
xor
fsubp
sti
mov
xor
aad
jecxz
mov
pop
sbb
add
or
jge
xor
shl
mov
xchg
cmp
pop
fisubrs
mov
and
fs
imul
orb
adc
and
icebp
cmp
movsb
pop
sub
mov
mov
out
shlb
or
and
scas
icebp
rcrb
outsl
jo
das
out
lret
inc
xor
xorb
cmpsb
or
arpl
pushf
xchg
push
outsl
xor
lret
popa
out
push
imull
stc
popf
adcl
cmp
add
hlt
dec
adc
pop
pusha
xchg
sahf
inc
cli
out
push
inc
sub
dec
push
ss
sahf
lcall
jecxz
push
adc
mov
pop
imulb
outsb
out
adc
int3
call
sbb
mov
push
and
cmp
aaa
xchg
push
sub
push
and
push
mov
cmp
xor
lds
ret
push
inc
pushf
int3
dec
stos
cmp
mov
cmpsl
pusha
mov
out
out
mov
inc
stos
jle
fisubl
sub
and
pop
mov
test
inc
and
ss
inc
add
sbb
dec
xchg
jno
into
stc
xchg
stos
jecxz
pop
adc
push
call
mov
nop
sbb
sub
daa
imul
and
lock
fcompl
call
push
int3
xchg
inc
jg
lcall
add
clc
in
xchg
imul
dec
adc
aam
xchg
insb
cld
push
addb
cltd
mov
outsb
push
mov
sbb
popa
pop
cwtl
faddl
loope
incb
imull
and
mov
push
sub
stos
repnz
push
cmp
sbb
sub
in
mov
stc
mov
push
filds
orl
or
inc
sahf
push
jle
stos
xchg
xor
int
popa
cwtl
sahf
cmp
sub
leave
ja
push
mov
push
add
pop
rorb
mov
or
ret
shll
lds
fnop
mov
fnsave
push
push
lret
out
mov
cmc
sub
dec
stc
das
jnp
pop
fidivrl
sbbl
pop
add
push
fwait
inc
sbb
cli
les
mov
push
cmp
stc
xor
and
gs
mov
adc
dec
cmp
ljmp
jo
cltd
xchg
jg
and
sbb
repnz
xchg
dec
fstl
pop
mov
mov
inc
loop
lret
fnstsw
mov
push
xchg
je
out
lahf
pop
push
ja
inc
cmp
push
jns
stos
subl
push
mov
test
sbb
and
jmp
cs
mov
xor
push
insl
mov
sub
aas
movsl
dec
or
pop
andl
mov
or
fsubrs
daa
mov
shll
loop
mov
pop
rorb
roll
dec
xor
xchg
sbb
pushf
mov
in
out
bound
adc
mov
test
inc
add
clc
ljmp
sub
das
arpl
pop
popa
insl
nop
dec
and
stos
mov
ret
cmc
mov
outsb
push
sahf
clc
subb
mov
and
mov
testb
cmp
lods
lahf
rcrb
sub
push
sti
pop
jecxz
push
in
mov
gs
test
and
dec
xchg
out
mov
jo
lea
hlt
and
xchg
mov
sub
sub
jecxz
and
enter
add
and
leave
int
outsb
lret
pop
sbb
js
cld
out
dec
fwait
push
scas
roll
daa
imul
or
mov
in
dec
roll
dec
stos
mov
dec
aam
xlat
test
push
add
push
xchg
xchg
lcall
jmp
lret
ficoml
add
pop
sub
loopne
mov
dec
les
das
sbb
adc
adcb
dec
push
pop
aad
jl
test
sbb
pcmpgtw
and
xchg
data16
out
xor
fdivl
pop
repz
add
and
test
jnp
inc
pop
dec
ljmp
pushf
cmp
xchg
push
mov
dec
xor
pop
sbb
pop
push
or
call
lods
addb
fnstcw
pop
and
movaps
jg
push
xor
into
push
add
cwtl
mov
xor
pop
test
test
or
es
hlt
push
in
xor
clc
popw
mov
lcall
cmp
lods
decl
aaa
or
push
ret
shll
out
or
sbb
xlat
xor
adc
daa
enter
and
sbb
clc
add
and
into
and
loopne
push
mov
out
jnp
out
outsl
aam
or
push
mov
bound
add
into
fnstenv
imul
cli
dec
loope
daa
out
int3
out
pusha
xor
mov
gs
test
adc
xchg
lahf
addr16
pop
sbb
stc
jmp
ja
stos
jno
ja
ljmp
ret
lret
bnd
rcll
loopne
inc
loope
rcll
pop
clc
mov
pusha
jae
out
push
shl
loope
inc
jg
pop
test
and
or
xor
pop
jmp
mov
push
xchg
mov
stc
fisubs
push
xor
fiaddl
je
or
inc
neg
or
or
mov
addr16
sbb
gs
jecxz
mov
arpl
enter
test
std
push
xor
mov
repnz
ret
subl
xor
pushf
mov
push
xor
cwtl
jge
and
mov
cmp
pop
jb
xor
in
jge
pop
and
je
pusha
stos
cmc
shll
stc
inc
pop
popa
dec
fucomip
ljmp
mov
push
out
dec
xor
fcmovnu
gs
sahf
xor
loope
call
lods
mov
lret
rcrb
fstp
push
pop
or
cmpsb
mov
movsb
aaa
daa
inc
pop
out
loope
scas
jne
cmc
rcrl
sub
push
pop
jns
or
or
insb
or
inc
rcl
mov
adc
idivl
pop
cs
aas
mov
cs
lock
outsl
addr16
jle
sti
sub
scas
mov
test
loop
xchg
dec
and
in
sub
shlb
aam
jle
ja
repnz
xor
xlat
stc
inc
xchg
out
pop
jle
mov
cmp
xchg
in
xchg
aaa
jne
dec
push
sti
loopne
cs
cs
xor
dec
dec
popf
out
das
fcmovnbe
mov
cs
push
imul
imul
mov
inc
xchg
rorl
dec
adc
sarb
fisttpl
xchg
push
loopne
mov
or
mov
rclb
lea
stos
adc
mov
outsb
mov
pop
ljmp
dec
adc
repz
and
rol
test
add
inc
stc
cmp
adc
adc
clc
imul
sub
mov
sti
cwtl
push
movsb
filds
repz
jb
sub
mov
xchg
cltd
stos
add
mov
or
lock
or
xor
adc
mov
in
and
mov
fisubrs
dec
mov
loope
aaa
les
mov
cmpsb
pop
mov
mov
fisttpll
mov
pop
or
push
jle
mov
out
inc
scas
popa
fcoml
and
xchg
ja
sub
int
jnp
and
cmc
and
adc
dec
jne
add
push
cmp
popf
jecxz
jmp
lahf
aas
push
jmp
inc
fstl
rcll
inc
call
fcompl
test
or
enter
push
aas
mov
in
pop
lods
pop
aas
rolb
or
cmpsl
or
pop
repnz
inc
out
lock
fldt
sub
insb
dec
leave
ret
icebp
insl
sahf
fnstsw
jp
das
jne
cmp
es
mov
pop
into
cld
adc
fyl2x
mov
push
pop
iret
mov
cmp
xchg
popw
and
cmp
sti
arpl
dec
mov
or
imul
mov
push
out
hlt
movsl
addr16
insb
aad
jne
daa
ss
jp
jl,pn
mov
scas
cli
aad
push
inc
and
and
jnp
cmp
lds
jl
jle
notl
pop
lea
cmp
lock
and
mov
rol
sbb
ror
sub
fdivrs
xlat
xrelease
add
and
push
push
insl
fdivrp
xor
aas
push
lods
in
dec
mov
cltd
shll
push
pop
fcom
or
pop
dec
dec
push
adc
mov
inc
mov
lods
out
inc
pop
stc
sbb
cmp
inc
ret
imull
dec
clc
push
adc
or
outsb
lea
stos
mov
stos
movsb
sub
xor
add
mov
sti
in
fcomi
cmpsb
jo
push
adc
std
push
pop
pop
daa
lahf
cmp
jle
addr16
mov
jmp
push
lcall
pop
push
mov
pusha
xlat
test
xor
xorl
mov
hlt
les
xchg
movzbl
xchg
movsb
dec
enter
push
stos
pop
je
cmp
faddp
mov
addl
sbb
outsb
call
cmp
das
mov
mov
pusha
mov
mov
mov
mov
xchg
es
xor
xor
push
inc
cmp
dec
arpl
mov
fistl
enter
cmpsb
movsb
and
in
outsl
push
and
jle
lds
subb
jbe
xor
mov
sub
fs
jge
or
cmp
lahf
inc
dec
push
jnp
add
stos
sbb
pop
push
test
adc
lds
out
lcall
and
nop
xchg
sbb
mov
repnz
mov
xchg
lds
fcomps
and
mov
insl
sti
mov
hlt
push
inc
jb
mov
ss
andl
adc
and
sbb
pop
cltd
pop
mov
test
movsb
hlt
jecxz
sbb
pushw
cltd
ficoms
mov
cld
xor
mov
jnp
push
pop
test
xchg
ret
stos
sub
popa
push
push
imul
imul
aad
xor
sbb
cmp
adc
jb
mov
dec
inc
imul
mov
xchg
cmp
aad
cld
les
cmp
fmull
enter
or
stos
popa
sbb
mov
push
popl
cld
std
cltd
sub
mov
xchg
enter
xor
dec
jg
fbstp
sub
cmpsb
adc
cld
inc
hlt
ljmp
sti
fsubs
jo
cmp
lcall
mov
mov
mov
dec
xchg
in
outsb
xchg
cld
add
loope
pop
push
jg
pop
pop
sub
lock
xchg
inc
cmp
and
mov
popa
and
cmp
out
arpl
adc
sub
pop
loopne
inc
jbe
scas
shr
cs
mov
xchg
fcompl
cmp
test
jl
js
test
vfrczsd
imul
sbb
mov
xchg
adc
sub
ds
loope
mov
sahf
je
mov
les
xor
iret
lea
and
jp
pop
inc
aas
adc
adc
out
aam
fdivrl
daa
xchg
dec
pusha
cmp
and
sub
mov
movsb
inc
arpl
add
rclb
dec
jecxz
adc
loope
xor
fcomip
outsl
cmp
cmc
subb
mov
inc
pop
pop
stos
aam
ds
sbb
into
sub
fsubp
loop
push
cli
push
lret
push
and
jg
das
inc
sub
push
dec
or
push
sub
ds
cmp
jno
cmp
js
jnp
sbb
scas
sbb
pop
icebp
cmp
mov
cltd
js
inc
jnp
jb
xchg
mov
xchg
inc
clc
push
lret
sbb
pop
shlb
popf
or
nop
movsl
xorl
sub
idivl
xor
lret
inc
das
sub
sub
nop
xor
xchg
ret
dec
es
imull
xor
or
in
ret
in
test
fidivl
cmp
inc
mov
add
sbb
clc
sbb
lahf
repnz
mov
cmp
sub
shlb
jns
sbb
mov
xorb
out
xor
pop
dec
mov
jl
divl
mov
incl
xor
cmp
adc
mov
insl
lods
daa
mov
mov
add
inc
jno
push
leave
inc
orb
sub
xor
pop
xchg
push
lock
mov
jl
jp
test
ljmp
sbb
adc
imul
jbe
in
xlat
xchg
jp
sbb
pusha
imul
cmp
pop
test
push
pop
or
data16
adc
scas
sbb
out
push
xor
orb
jmp
pop
push
inc
int3
lods
das
int3
les
cs
adcb
add
repz
jno
int
jge
push
push
jg
or
iret
in
je
jae
xchg
fsubl
scas
dec
jge
add
scas
and
mov
mov
pop
jmp
shll
cmp
dec
xor
addr16
dec
insl
xor
ret
les
mov
fucomip
add
test
jge
jne
mov
cmpsl
fidivs
or
and
jmp
fisubrl
mov
sbb
loopne
sbbb
lds
or
pop
stos
insl
dec
sub
movsb
xchg
sub
push
shl
fsubl
repnz
ror
fmull
test
xchg
add
lahf
xchg
jl
xor
ret
in
mov
inc
xchg
inc
in
sub
ljmp
test
push
add
dec
lret
mov
adc
xor
pop
into
cmpsl
popf
xchg
test
add
cmp
ret
ror
test
and
std
insb
add
cld
jae,pt
mov
out
filds
jl
outsl
scas
mov
jl
das
das
or
sub
lret
pop
or
adcb
mov
shlb
adc
and
mov
lea
lock
mov
mov
loop
pop
scas
mov
andl
gs
or
mov
and
mov
aas
ljmp
or
fildl
incl
sbb
cmc
ss
and
popf
test
jecxz
adc
and
fiadds
cltd
popa
out
xor
mov
pop
cmp
lret
xor
and
or
sub
cmpsb
scas
mov
dec
or
out
lds
call
xor
inc
xor
fs
adc
in
adc
mov
arpl
jnp
mov
cmp
lret
lcall
test
mov
mov
sbb
adc
popa
rcl
or
mov
xor
dec
inc
rcrl
xor
fsts
inc
gs
xchg
add
movsb
cltd
mov
enter
addr16
lahf
cmp
dec
and
or
loop
lret
push
push
sbb
jb
xchg
push
add
jl
push
mov
push
fnstsw
cli
enter
shll
mov
cmpsl
xchg
pop
adc
push
scas
xchg
inc
jae
add
lea
mov
cmpsl
xor
popf
fldenv
mov
lds
movsb
repnz
imul
mov
cltd
mov
mov
push
add
pop
popf
cld
mov
ficoms
cli
inc
out
cwtl
lea
or
and
or
fisttpl
shl
push
mov
jb
aaa
stos
out
push
xchg
or
dec
cmc
mov
or
sub
loopne
mov
mov
negl
int
iret
adc
mov
fidivl
xchg
nop
lods
fwait
imul
in
add
roll
iret
fwait
add
push
addr16
cmpsl
xor
pop
call
xor
out
repz
jecxz
fildll
pop
gs
inc
out
xor
sbb
ficoml
mov
cs
ss
ds
mov
adc
adc
push
jae
mov
movsl
scas
pusha
sub
lods
stos
cmp
cmp
icebp
xchg
scas
jecxz
jecxz
pop
rol
sbb
xchg
mov
icebp
and
jns
pop
and
int3
adc
push
lret
inc
mov
push
lret
sbb
add
or
bound
lret
xchg
mov
enter
mov
in
adc
aaa
imul
mov
imul
lea
xchg
mov
cmc
xor
jo
scas
dec
cmp
int
push
sbb
clc
int
sub
push
fdivrs
sar
inc
dec
mov
xor
jmp
fisttpl
decb
cmp
lods
mov
sub
add
adc
mov
inc
xchg
pushf
lds
sahf
data16
inc
sahf
dec
fmull
cld
dec
test
or
sub
pop
xor
sahf
out
ret
fstpl
or
mov
dec
clc
lahf
jge
xlat
mov
imul
lcall
sbb
dec
inc
mov
test
mov
andl
mov
mov
stos
xlat
adc
aas
ja
fst
xor
inc
inc
jg
xor
ljmp
mov
mov
nop
shl
stc
mov
adc
sub
pop
out
and
in
leave
int
add
pop
push
jns
lcall
mov
in
movhps
mov
xor
mov
out
in
shr
cmpsl
cli
jmp
jecxz
scas
and
mov
mul
lahf
mov
ja
ds
gs
lret
repnz
repz
push
movsl
mov
pop
cltd
dec
in
mov
mov
dec
mov
lret
mov
or
or
cmp
jge
das
mov
test
xor
jmp
lret
or
adc
loope
lcall
push
fs
insl
or
jecxz
sub
data16
sar
dec
sbb
addr16
mov
dec
imul
ss
data16
stos
and
mov
aas
xrelease
and
inc
jecxz
lret
adc
mov
mov
inc
cmpsb
add
sti
adc
xchg
jl
mov
lahf
je
sbb
dec
sub
sub
setno
pop
mov
push
adc
in
imul
cmpsb
fistpll
lcall
push
mov
rolb
or
cmp
mov
sub
mov
es
add
in
fildl
cltd
pushf
lahf
mov
ljmp
cs
loop
dec
jns
or
lods
jae
adc
ficoml
jb
push
adc
out
mov
lds
out
out
outsb
pop
cs
insl
lret
inc
cmp
mov
or
pop
rorl
mov
jmp
mov
adc
mov
adcl
inc
mov
cwtl
fidivrl
pop
mov
imul
frstor
imul
cmp
push
cwtl
pushf
outsl
shrb
in
pop
lret
rsqrtps
inc
cmp
jmp
sbb
sbb
lods
jmp
rclb
sub
sbbb
call
push
cltd
pop
jp
jecxz
xor
adc
iret
aas
ja
cmp
push
xor
sub
and
lret
add
cmpsl
iret
icebp
mov
mov
mov
ss
jo
xchg
sub
cmpsl
insl
sub
mov
enter
inc
and
sub
jnp
adc
rol
cmp
fcmovbe
adc
xor
pusha
or
stc
and
sub
stc
rcrl
arpl
add
cwtl
fcoml
inc
jg
dec
lods
xchg
movsb
xchg
or
dec
rclb
mov
roll
sarl
xchg
or
inc
cmp
fucom
xchg
out
aad
cmpsl
popf
xor
int
out
cs
xor
adc
and
pop
mov
dec
sti
mov
pushf
and
imul
mov
sub
dec
dec
and
push
out
loopne
imul
aam
orl
xlat
adc
mov
mov
repz
cmp
or
sbb
sbb
inc
inc
sub
cmpb
mov
fs
and
inc
stos
insb
int
lds
push
test
fwait
enter
mulb
das
and
sub
mov
xchg
fucomip
mov
pop
repz
pop
xlat
pop
cmpsb
rorb
mov
mov
scas
sbb
and
dec
inc
sbb
push
mov
fldcw
pushf
mov
ret
sti
lret
lds
add
rcrl
insl
repz
xlat
add
movsl
js
fmuls
inc
movsb
push
mov
and
shll
adc
mov
and
sbb
or
adc
inc
nop
lea
imul
pop
sbb
outsl
or
push
rcl
mov
xchg
push
push
push
mov
xchg
add
sbb
mov
pop
or
mov
test
add
stos
je
jne
mov
lret
pop
pop
xchg
cmpb
arpl
dec
mov
loope
notb
ret
call
sub
mov
bound
inc
xchg
fwait
lcall
lret
loope
sub
pop
cmp
mov
ror
and
pop
fdivr
push
jmp
aam
xor
mov
mov
mov
add
xchg
test
jo
mov
jbe
hlt
pop
cmp
mov
cmp
f2xm1
out
jle
cmpsb
call
mov
fstl
sub
aad
dec
int
aaa
not
shll
jnp
mov
iret
push
mov
mov
std
jmp
jmp
idiv
adc
push
xor
test
test
push
pop
add
lods
test
stos
mov
fidivl
fwait
popa
inc
cmpsb
dec
stos
jmp
ret
mov
and
aam
outsb
xchg
jle
pop
into
les
mov
out
clc
cwtl
lods
mov
inc
mov
mov
pop
xchg
out
pop
jecxz
sub
mov
and
stos
mov
and
mov
in
std
insb
adc
add
cmp
repz
and
lock
movsl
jmp
aaa
idivl
sarb
xor
fdivrl
subl
jnp
shll
lea
mov
lahf
lock
in
or
inc
add
out
pop
cld
add
jnp
fisttps
cmp
into
xchg
insb
scas
inc
jbe
xchg
xor
je
inc
in
movsl
gs
or
insw
pop
pop
imul
or
std
jnp
mov
addr16
or
mov
rolb
les
out
pop
out
or
cwtl
push
mov
aaa
aas
inc
dec
or
out
mov
dec
je
stos
adc
stc
cltd
or
lods
popa
in
mov
push
jae
mov
inc
xor
rcl
adc
aad
xor
xor
shrb
into
push
dec
mov
test
fmulp
lcall
inc
js
pop
aam
jns
push
das
imull
add
mov
and
and
sub
add
push
cwtl
pop
jp
in
mov
push
jbe
or
lcall
cmp
insb
lret
mov
mov
pop
in
cltd
gs
mov
testb
mov
inc
xchg
enter
add
sbb
mov
lahf
mov
mov
mov
adc
dec
mov
jp
jno
jns
mov
sbb
lods
call
push
shll
cmp
or
scas
aaa
pop
aam
dec
sbb
mov
sbb
repnz
xlat
ljmp
push
fisubl
xor
in
in
mov
in
sbb
push
pop
or
in
stos
dec
addb
ljmp
loope
outsb
adc
dec
aaa
cwtl
fistpll
pop
jmp
lret
mov
test
enter
int
pusha
nop
pusha
jmp
xor
jae
fcmovne
xchg
adc
adc
in
adc
fcomps
and
pop
nop
adc
push
xor
ret
add
cmp
cmp
pop
ljmp
jbe
into
rclb
insb
imul
les
and
popa
lods
stos
arpl
or
mov
sbb
mov
sbb
add
stos
in
or
pop
subl
jae
fistl
stos
imul
and
xchg
sub
mov
jae
inc
pop
lcall
cli
jge
fstl
fmul
dec
rorl
cmp
lea
xlat
cmp
or
sahf
aam
mov
data16
add
and
dec
lcall
jg
out
add
in
insl
rorl
inc
adc
pop
das
pop
sbb
mov
pop
out
clc
aam
ss
popa
jp
jge
sahf
aad
inc
inc
mov
int3
xor
ljmp
mov
in
mov
sub
cmpl
jp
stos
inc
ret
aad
in
and
repnz
xchg
pop
cltd
enter
fstl
sbbb
mov
lret
movsl
insb
lods
insl
pop
leave
cmp
and
shrb
sub
outsl
fcompl
outsb
push
sbb
push
mov
loop
mov
push
xor
xchg
insl
mov
cs
mov
mov
lds
sbb
dec
sti
push
shlb
lea
aam
mov
sbb
push
add
je
fisttpll
ljmp
jmp
mov
in
jle
imul
popf
xor
mov
or
push
iret
and
mov
inc
jo
push
test
js
cli
push
sbb
xor
cmp
loopne
lock
sahf
pop
fdivl
jl
stc
adc
push
stos
xchg
sbb
in
pop
mov
mov
cltd
mov
and
jge
mov
push
rcrl
frstor
and
leave
mov
xlat
rolb
add
jo
add
subl
test
jg
notl
mov
add
lods
daa
and
in
cld
sbb
mov
sub
mov
or
cmc
dec
das
mov
xor
pop
xchg
add
bound
and
packuswb
push
test
sub
mov
and
pusha
xchg
mov
and
data16
scas
clc
mov
pushf
mov
pop
mov
fsubl
icebp
das
xchg
rolb
mov
sbb
aad
mov
ljmp
stos
cmp
outsb
std
lret
fs
lods
pop
test
dec
mov
mov
adc
or
ljmp
inc
popa
jno
in
int
addr16
sub
loopne
xchg
push
cmp
stos
xchg
and
sub
cmp
add
jnp
je
add
and
sub
inc
jno
sbb
jmp
jnp
add
push
jecxz
xchg
cld
mov
cltd
xor
mov
jmp
add
mulb
das
gs
imull
dec
hlt
test
sti
sbb
xor
xchg
cli
cmpsl
jno
insl
sbb
add
fidivl
sbb
jns
mov
jle
inc
test
call
out
adc
outsb
shll
jl
cmp
cli
add
cmp
out
and
nop
lock
test
mov
xchg
jge
jp
dec
das
insb
and
pusha
popa
inc
push
jecxz
pop
dec
pusha
xlat
inc
xorl
pop
ficoml
dec
lret
lret
cmp
sbb
int
mov
mov
lock
pop
adc
daa
insb
in
inc
int3
aaa
mov
dec
push
movsl
lea
mov
data16
test
cmc
das
push
xchg
jmp
test
push
or
inc
fs
mov
icebp
jmp
ud2
stos
cmp
sub
fwait
mov
test
aad
js
fmull
push
cmp
jl
push
inc
inc
scas
inc
mov
in
and
xor
adc
mov
xor
cmpsl
adcl
in
and
movsb
scas
xor
into
ss
dec
loopne
bound
xchg
or
mov
fucomi
imul
aad
push
pop
cmp
adc
adcb
into
jg
push
in
fs
mov
dec
out
es
pop
cwtl
sub
jo
gs
inc
lds
mov
in
ja
push
cli
imul
or
mov
mov
hlt
push
sbb
icebp
cmc
push
and
orb
pop
mov
dec
mov
or
mov
pop
xchg
add
jg
mov
and
pop
pushf
dec
fcmovnbe
sub
icebp
addr16
fnstcw
cmp
push
ja
je
inc
int
mov
pop
into
je
xor
xchg
cmpsb
adc
xor
jge
pop
inc
push
sbb
scas
rcll
dec
fldl
push
cwtl
pop
mov
push
outsb
cmpsl
ret
out
add
push
fsubl
jnp
lret
push
push
add
iret
adc
sbb
inc
sub
lds
sbb
sbb
xor
lock
sub
cmp
imul
push
sti
sahf
inc
add
cmpsb
sbb
pop
in
inc
fs
push
xchg
mov
lret
xor
ret
ret
cmp
cs
inc
ret
arpl
or
divb
sub
sti
xchg
gs
cmp
jg
lahf
adc
fsts
js
cmp
popf
imul
bound
add
adc
sub
imul
lcall
cld
add
out
enter
jle
loop
sahf
movsl
imull
jle
lods
nop
ss
pop
lods
pop
popf
mov
or
pop
shrl
inc
into
sbb
cmp
cmp
adc
add
cmpps
lds
lods
or
dec
hlt
mov
mov
add
jg
push
mov
cmp
sti
sub
inc
iret
mov
mov
jg
bound
jnp
scas
testb
movsl
ret
xchg
pop
pop
push
xor
xor
lods
clc
sbb
mov
adc
nop
pop
add
sbb
outsl
and
push
iret
jb
xchg
and
cmp
sbb
aam
cmpsl
cld
dec
movsb
xchg
mov
dec
addl
lock
out
jmp
out
adc
rorb
rol
test
movl
mov
nop
pop
leave
lret
dec
adc
cmp
pop
add
push
push
lahf
pop
xchg
stos
leave
les
test
mov
cmpb
xor
xchg
jns
lock
loope
inc
dec
jne
ffree
loope
pop
fbld
add
xchg
push
clc
hlt
ss
lret
fcomps
push
adc
addr16
rolb
mov
ret
mov
inc
cwtl
nop
int3
dec
lods
jmp
cli
outsl
flds
insb
in
dec
int
sti
jno
jle
jne
pop
addr16
cmpl
movsb
jmp
cmp
data16
pop
mov
sub
shlb
ret
adc
les
cmp
scas
imul
cltd
repnz
jg
pusha
je
sbbl
mov
call
popf
shlb
jnp
movsb
cmp
je
or
ds
jbe
sbb
push
jg
inc
inc
xchg
sahf
mov
xor
cs
fistpl
pop
xabort
jle
mov
cld
pop
add
adc
mov
enter
cmc
add
and
mov
mov
out
cld
lahf
data16
or
push
sbb
out
xor
mov
or
inc
stc
pop
mov
addr16
ss
xor
push
sbb
adcl
push
ja
insb
push
pop
push
jno
xorb
movsw
or
mulb
push
add
ret
idiv
addl
mov
push
cmc
dec
mov
es
push
push
fnsave
lcall
mov
pop
jns
xchg
or
das
mov
lods
sbb
sarl
in
jnp
mov
xchg
push
mov
std
jnp
mov
mov
and
add
mov
jg
jnp
jns
push
clc
cmpsl
test
inc
enter
sti
mov
lret
pop
push
lahf
icebp
jle
sub
pop
ret
inc
loopne
jbe
cmpsb
fcoms
mov
std
enter
or
add
push
push
daa
inc
jl
sub
dec
adc
cmp
or
mov
xor
pop
xor
xchg
ljmp
rorl
xor
out
fnstcw
pushf
jbe
mov
popa
jnp
mov
jbe
xor
lcall
stos
sub
sbb
lock
lahf
push
pop
sub
sub
or
out
xchg
xchg
mull
or
out
mov
in
add
jp
xor
push
fsubrl
xor
pop
pop
mov
subb
das
add
leave
cmp
subb
mov
arpl
ds
and
addr16
in
mov
mov
and
mov
jo
sub
jns
loop
push
arpl
push
xor
mov
cli
adc
adc
in
outsb
mov
out
adc
mov
lea
das
insl
popf
pop
les
xchg
cmp
mov
data16
in
in
popl
push
add
add
fdiv
insb
mov
loop
enter
jge
js
out
test
in
stos
movsl
cmp
aas
loope
xor
loopne
inc
mov
mov
ficoml
mov
xor
jae
sub
sub
aas
icebp
pop
fdivl
repnz
loop
aam
mov
aad
mov
aaa
push
push
push
bound
cmp
cmp
fbld
fsubl
imul
add
cmc
leave
leave
mov
xchg
stc
mov
leave
inc
cmp
movb
and
shrb
imul
scas
insl
push
or
addb
push
mov
pusha
dec
xchg
leave
pop
loope
mov
stos
pop
shll
or
sbb
sub
add
push
pop
or
mov
leave
mov
dec
sbbl
and
xlat
dec
repz
inc
int
shrb
push
sub
add
shlb
int3
daa
xor
cmp
adc
add
push
push
or
xorps
test
cltd
xor
mov
push
xlat
lds
movsb
cmp
es
out
outsb
out
inc
adc
push
hlt
int3
movsl
subl
pop
xlat
gs
adc
stos
popa
movb
xchg
jg
mov
jge
mov
fs
je
cli
lds
push
and
xor
mov
jns
push
enter
or
cmp
enter
mov
ret
pop
sub
lds
mov
xor
repz
mov
bound
sub
and
mov
cld
ja
outsl
dec
test
push
mov
and
mov
loope
jge
mov
or
testb
or
loop
repz
pop
push
in
mov
cmpsl
mov
mov
outsb
cmc
sbb
das
nop
cwtl
js
push
movsb
mov
lcall
imul
and
int
mov
out
cmc
inc
fdivrs
inc
or
arpl
dec
push
pusha
in
fsts
aas
popf
jbe
lds
xor
arpl
pop
pop
scas
mov
fists
push
shr
dec
push
inc
ds
mul
push
jmp
cmp
subb
aam
or
add
push
mov
pusha
andb
mov
flds
mov
push
lds
mov
icebp
es
mov
dec
aam
push
mov
rclb
pop
mov
roll
repz
sub
out
pop
sub
addl
pusha
jecxz
dec
in
sub
cltd
ds
roll
scas
addr16
movsl
sbb
jnp
shlb
sub
xlat
cmp
fdivrp
das
test
jno
icebp
mov
sbb
pop
and
mov
dec
add
lock
adc
into
sbb
je
inc
jns
inc
adc
icebp
shr
fnsave
out
cmp
popa
lods
ds
repnz
pop
loope
lcall
cs
mov
xchg
stos
js
sbbl
popf
mov
add
int3
sbb
stos
or
test
mull
repnz
mov
pop
fwait
outsl
sahf
mov
push
pusha
or
stos
mov
fisubrs
inc
sbb
adc
sub
stc
jnp
add
mov
clc
scas
push
mov
dec
mov
in
out
repz
lret
insb
cmpsl
lods
jl
cmpsl
pushf
js
inc
testl
dec
mov
adc
call
adc
cmc
dec
sbb
and
pop
addr16
pop
dec
add
dec
popf
inc
inc
test
sub
xor
in
xor
push
push
aas
lret
pop
push
lods
pop
rorl
orb
loopne
mov
mov
imul
ljmp
ret
add
jb
mov
pop
dec
aaa
jg
and
aas
call
and
movsl
bound
or
lret
ret
aaa
test
out
mov
xchg
mov
push
sub
sub
rorl
call
sarl
sbb
and
pushf
in
cmp
out
cmovle
sbb
lret
das
adc
enter
gs
ret
and
mov
fcomps
mov
daa
pop
out
int
shll
push
adc
adc
call
push
dec
inc
or
and
mov
sahf
jmp
jb
pop
shlb
lcall
pop
out
aas
sub
and
ss
push
mov
dec
cmp
pop
cmp
sahf
mov
aas
pop
cmpsl
dec
xor
aaa
insl
aas
pusha
push
sbb
jnp
hlt
mov
popl
loop
or
adc
fwait
sub
negb
or
lcall
push
push
stos
out
inc
je
add
push
sarl
insl
xlat
in
cmp
pop
or
mov
mov
adc
andb
pop
or
fmul
inc
dec
lds
mov
xorb
mov
fisubs
cli
adc
inc
xchg
mov
je
jb
add
in
es
fidivs
jmp
mov
dec
jns
orb
je
ret
xor
jno
ss
cs
inc
mov
inc
sub
scas
inc
loopne
mov
pusha
sub
push
and
xor
add
push
loope
sbb
shr
push
lods
nop
add
xor
jnp
addr16
cmp
mov
loop
inc
or
mov
adc
cs
adc
std
scas
pop
sub
in
aam
add
mov
out
mov
mov
mov
rcrb
les
cmpb
jae
push
in
push
xchg
inc
mov
sub
pop
insb
imul
push
push
sbb
daa
pop
repnz
mov
push
or
dec
dec
mov
push
rcr
ror
mov
push
int3
repz
and
sbb
cltd
pop
jae
stos
mov
scas
arpl
xor
push
add
inc
fwait
insl
cmpsl
and
jns
dec
push
pop
push
loop
add
arpl
filds
sahf
hlt
jae
mov
shlb
sbb
sub
adcb
sub
pushf
cmp
int3
out
outsl
cld
cli
xor
cmpsb
jp
mov
stos
xor
jg
lret
repnz
push
cltd
fucomp
pop
inc
adc
paddsw
sub
dec
shrl
xor
shll
inc
add
cmp
add
mov
sahf
jg
jl
xor
cmpsl
push
adc
flds
adc
js
mov
adc
dec
or
cmpb
lahf
ds
icebp
divps
jg
ljmp
aaa
pop
cmp
ds
or
adc
nop
fnstenv
xor
xor
ret
daa
int
setnp
std
adc
push
adc
dec
or
nop
add
lds
or
jns
jl
dec
pop
imul
loopne
int3
mov
lret
rep
sbbb
dec
mov
sub
push
mov
or
push
stos
push
mov
push
lods
fstpt
inc
repnz
imul
popf
adc
push
mov
sarb
pshufw
out
nop
cmp
xchg
sub
ds
stos
sti
or
sub
sub
or
stos
in
mov
push
fwait
ret
sub
add
push
in
das
imul
xacquire
imul
popf
sbbb
stos
aaa
movsb
enter
adc
jge
imul
iret
vmwrite
mov
out
imul
dec
xchg
jo
loop
pushf
push
push
adc
lds
in
pop
ds
add
push
hlt
add
jo
cli
add
mov
push
les
mov
les
loop
add
push
mov
xor
mov
lcall
int3
jmp
data16
cmp
cmpsl
jb
mov
flds
lea
jp
ds
xchg
mov
mov
add
push
sbb
sbb
lea
fnstcw
mov
les
nop
aas
or
mov
scas
adc
movsb
ret
jle
addr16
sbb
mov
pop
stos
mov
adc
pop
cwtl
sub
cmp
fimull
pop
lret
mov
test
das
xor
pop
movsl
add
push
movl
sahf
pcmpeqw
pop
scas
rclb
sub
mov
and
sti
sarb
jle
stc
adc
arpl
dec
push
adc
popf
pop
in
mov
call
push
pop
cli
push
lock
cld
pusha
test
push
xor
inc
dec
sub
stos
xlat
test
test
test
mov
imul
xchg
ret
inc
jae
cmp
out
les
mov
dec
mov
movsb
rclb
cltd
aaa
sbb
mov
fwait
jge
cli
movsb
add
mov
fcoms
mov
insb
fisubrs
loopne
fxch
xchg
inc
xor
fsubp
pop
std
out
cltd
push
push
push
scas
mov
pop
pop
sbb
pop
test
subb
dec
mov
sub
add
jecxz
lret
test
xor
inc
sbb
aaa
cwtl
clc
pop
pop
mov
mov
dec
add
xchg
jnp
mov
and
mov
sub
mov
inc
sar
negb
stos
and
hlt
sub
xchg
stos
loopne
clc
out
les
stos
push
cld
jl
sbb
push
ss
dec
insl
and
cmp
xchg
bnd
cmovno
dec
out
test
insl
jg
mov
mov
sti
adc
stos
ja
inc
inc
add
shlb
arpl
daa
pop
push
loopne
jnp
aam
push
dec
and
pop
leave
mov
and
cmp
dec
int3
ss
mov
add
pusha
shlb
jl
mov
push
jl
in
add
ja
add
add
mov
mov
je
mov
jge
fidivrl
mov
sbb
or
sub
dec
add
pop
mov
ret
mov
sbb
add
cmc
aaa
sbb
sbb
pop
cmp
nop
aaa
mov
imull
sti
and
insb
sarb
jne
lds
cmpsb
or
and
adc
inc
cmc
cmpsb
xchg
mov
sub
pop
ficomps
les
cmpsl
jg
and
ja
int3
xchg
and
lea
ja
sub
add
and
mov
mov
mov
inc
mov
scas
cmpsl
xor
lock
adc
inc
sub
sub
repnz
xor
dec
out
jle
mov
movl
das
std
xchg
xor
in
xchg
jge
imul
and
popf
fstpl
xchg
jae
js
mov
adc
mov
sub
mov
test
inc
inc
arpl
xor
js,pn
pop
sbb
insb
mov
ret
rsm
sbb
xchg
or
je
rcr
mov
push
mov
jle
cmp
lahf
fnsave
rcr
sub
fwait
xchg
pop
sbb
pop
testb
lds
sub
fisttpll
mov
ret
add
pop
cmp
stc
jg
das
aas
sbb
scas
dec
outsl
bound
sub
pop
push
sub
ret
push
scas
xchg
fwait
inc
inc
out
cmp
jle,pt
scas
test
fdivr
add
push
push
or
lods
lcall
dec
mov
sub
mov
sahf
mov
xchg
imul
jge
imul
sub
lds
test
sahf
das
sbb
push
movsl
ja
leave
sub
push
xchg
or
imul
xchg
add
xor
cmp
jge
bnd
inc
loopne
inc
adc
cld
lcall
jge
ret
push
fists
pop
hlt
pop
scas
aaa
je
out
decl
arpl
call
bound
ror
in
mov
mov
adc
fwait
cmp
mov
call
roll
jmp
and
mov
dec
push
or
mov
xchg
ret
jmp
cld
xchg
das
add
insb
cltd
inc
mov
int3
sub
es
or
xor
call
mov
push
mov
jns
repz
bound
jl
inc
icebp
dec
jo
push
and
enter
lea
push
inc
push
or
xchg
push
xchg
ret
mov
ds
inc
loopne
jp
lcall
data16
pushf
movsb
leave
add
loopne
xchg
mov
pushf
std
cmp
fisttps
xor
inc
mov
xchg
mov
push
pop
stos
fwait
insl
scas
xor
xor
pop
mov
add
outsl
lcall
jl
lock
xchg
jmp
pop
test
cmp
cs
ss
shlb
pusha
xlat
add
imul
out
pop
adc
sub
stc
jo
push
arpl
jne
mov
outsb
ficoms
or
ret
sahf
xchg
repz
adc
in
cmp
call
mov
jae
adc
xlat
jo
pop
dec
in
fabs
dec
adc
out
mov
enter
push
sub
lahf
and
test
and
add
mov
xor
sbb
push
sbb
jae
out
cmp
mov
mov
cwtl
jmp
imulb
and
push
cs
jo
into
ret
lcall
mov
mov
bound
sahf
inc
repz
mov
movsl
in
jns
test
mov
inc
in
jmp
hlt
mov
divl
cli
cwtl
adc
xchg
mov
jbe
mov
pop
push
sti
dec
xchg
add
xorl
inc
inc
sbb
jne
dec
movsb
cmp
jno
mov
sbb
ret
inc
nop
pop
push
data16
cmp
adc
loope
lahf
popf
xchg
sbb
es
pusha
xor
sbb
ret
movsb
lods
inc
mov
lret
cltd
jo
fimuls
lock
sub
in
jp
fcom
insl
jmp
out
lcall
inc
rcl
sbb
dec
add
xlat
mov
xor
dec
into
inc
cmp
jg
dec
mov
test
es
out
cmp
mov
mov
shll
or
adc
sahf
mov
mov
mov
loopne
je
cld
dec
adc
dec
sarb
ljmp
lods
mov
mov
fstpl
sub
sar
movsl
adc
roll
push
mov
and
jb
pop
in
int
imul
and
mov
fcoms
gs
js
inc
enter
inc
repz
ds
in
jl
les
xchg
in
stos
into
mov
mov
stos
or
movsl
mov
sub
nop
xchg
scas
je
xchg
pop
les
or
jae
mov
imulb
push
mov
mov
pop
push
mov
mov
fimuls
xchg
subl
iret
outsl
pushf
sbb
sbb
cld
lahf
dec
das
inc
test
test
fdivs
cmpsl
sub
add
or
jns
idivb
adc
popf
imul
sbb
out
out
xchg
jg
loope
mov
pusha
stc
fcompl
dec
leave
xchg
mov
inc
lret
fnstsw
les
inc
fcmovnb
fidivrs
dec
cmp
shl
push
cli
jmp
dec
sub
and
data16
addw
fbld
test
mov
xchg
or
loop
pop
in
mov
popa
push
jp
xor
sub
loop
lcall
mov
cmpsl
or
and
sub
into
and
or
inc
pop
pop
dec
inc
mov
popa
mov
and
pmuludq
test
imul
and
es
add
es
fucomi
aas
dec
imul
gs
mov
loope
xor
stc
sbb
das
xor
enter
xchg
cmp
inc
clc
call
lock
lock
sbb
enter
xor
fimuls
lret
xor
lcall
cmp
js
fs
mov
dec
jae
mov
push
jecxz
sbb
push
fcompl
xchg
std
jo
fs
dec
inc
pop
fucom
shrb
xor
clc
loop
push
stc
repnz
insl
scas
cmp
int3
xlat
sub
mov
roll
movsl
mov
xchg
push
sbb
nop
xor
imul
in
pop
adc
push
cmc
xchg
arpl
in
fists
out
fucomip
mov
jae
divb
pop
mov
iret
cmc
jae
mov
push
fdivp
fistps
mov
inc
fimull
ret
lods
adc
lea
rcrl
sub
adc
jnp
bound
fstpl
js
add
or
imul
sub
mov
cwtl
adc
pop
cmp
lret
mov
cli
out
orl
call
lcall
loop
mov
dec
cltd
and
bound
mov
or
adcb
push
out
rcr
fmulp
out
xor
push
dec
jo
jbe
mov
ret
pop
scas
fmulp
in
mov
add
dec
sub
pop
outsb
jne
fistps
mov
mov
jne
mov
jle,pt
xor
mov
ja
pop
out
sub
xor
scas
inc
jns
les
sub
mov
in
jge
push
inc
int3
sbb
test
std
cwtl
jmp
xor
xor
rorl
pop
dec
mov
mov
xor
add
lds
push
push
mov
gs
push
dec
dec
icebp
rorb
sub
aaa
mov
mov
test
sub
loop
ja
hlt
outsb
cwtl
lods
push
popa
out
sbb
mov
or
adc
xor
adc
jb
cmp
notb
mov
inc
pop
out
push
mov
lods
aaa
inc
push
in
sbb
in
cmp
push
imulb
adc
push
sbb
xor
pop
popa
fs
test
xor
imul
pop
sub
nop
mov
mov
mov
mov
call
mov
inc
roll
pop
mov
dec
out
or
aas
jl
stos
arpl
sbb
shl
inc
inc
pop
out
out
fdivrs
stos
out
ds
or
gs
pop
and
sub
cmp
xor
sti
stos
and
add
push
mov
inc
sbb
cs
data16
pop
ljmp
inc
cmpsb
mov
fldt
mov
fsubrl
mov
pop
mov
out
loop
das
lods
cmp
push
or
sbb
pop
or
cmp
jae
negl
mov
push
jg
and
mov
xchg
cltd
pop
and
dec
in
jno
add
roll
xchg
pop
inc
fwait
inc
xlat
jmp
xchg
inc
test
mov
lds
ds
dec
scas
in
out
jmp
jns
out
in
cmp
ja
inc
jnp
icebp
cmpsb
xor
lahf
or
jb
js
sbbl
and
cmp
cmp
repz
movsl
jo
or
lret
insl
fsub
fsin
push
int
movsb
or
xor
add
push
scas
ret
dec
sbb
adc
xor
dec
xor
ljmp
fdivl
fisttpll
sbb
xor
aas
push
add
sub
push
sbb
sbb
stos
stc
in
test
fadds
cmp
ror
xor
inc
sub
lcall
add
dec
dec
loopne
notl
stos
fisubrl
xchg
push
stc
add
sub
dec
aaa
pop
add
lods
mul
pop
nop
push
and
sbb
les
es
adc
mov
or
mov
ficompl
push
test
pop
push
fs
out
rcr
mov
popa
add
inc
lcall
das
xor
out
push
mov
push
out
push
cmpsl
pop
dec
xchg
nop
push
inc
pusha
and
inc
ss
push
stc
xor
hlt
ss
out
jle
sbb
jbe
lcall
andps
add
in
cmp
test
mov
fcomp
aad
das
data16
lds
lock
mov
icebp
sbb
orb
sbb
data16
jns
imul
fucomip
rcr
dec
push
out
cmpsl
sbb
dec
rcr
mov
sub
cs
pop
gs
test
aad
lcall
data16
lds
mov
or
lock
cmp
divb
bound
pop
jle
add
imul
es
or
mov
push
jle
rol
aas
pushf
addr16
inc
popa
and
call
in
fistps
arpl
int
fcomps
jmp
out
cmp
out
shl
fdivr
or
into
cmp
lcall
cltd
mov
out
sub
lea
lock
xchg
imul
push
xor
xchg
addl
das
xchg
pop
gs
jg
daa
test
mov
sub
inc
mov
push
std
push
int
push
adc
fiadds
and
insb
and
insb
hlt
in
jbe
js
cmp
insb
data16
iret
pop
daa
jo
pop
sub
call
aaa
xchg
addr16
xchg
jb
sbbb
ffree
sbb
ret
fimuls
push
in
or
iret
push
loopne
shlb
dec
loop
mov
cmpsb
xchg
inc
push
mov
pop
pushf
adc
fcoml
push
sub
fisttpl
mov
iret
outsl
cltd
sub
pop
into
add
pop
jl
pop
cmp
dec
aam
jecxz
in
aad
jns
pushl
lcall
insl
sbb
pop
popa
mov
xchg
mov
rcrb
lret
pop
xchg
mov
jb
jae
dec
lahf
rcrb
xchg
shr
push
push
fs
stos
divb
xchg
bound
push
decb
pop
sub
sub
imul
jno
lret
cld
fstl
scas
add
lcall
aam
inc
mov
mov
test
pop
jo
aaa
mov
mov
outsl
lods
jp
jp
xchg
pop
sbb
xchg
mov
lret
mov
andl
cmpb
cli
push
loopne
sti
bound
push
pop
insl
fs
arpl
jmp
mov
ret
push
imul
js
and
or
cmovle
sbb
mov
xor
mov
lret
out
mov
out
xchg
rcll
mov
adc
mov
stos
push
jmp
push
gs
out
pop
jb
push
mov
insl
sub
in
xor
inc
out
inc
js
inc
cli
sbb
jl
loope
cmc
sub
rorl
xor
leave
addb
fcoms
or
testl
test
out
fldl
inc
movsl
sbb
icebp
xchg
add
shll
inc
dec
out
xor
push
js
rorl
aad
outsl
int3
into
scas
cli
pop
jnp
inc
cmp
je
dec
or
lock
ret
push
dec
push
arpl
loopne
add
inc
and
mov
pop
imul
dec
xchg
xchg
loope
arpl
jge
add
dec
jns
adc
mov
lcall
mov
xchg
int
addb
adc
or
int3
popf
std
fwait
pop
push
mov
jle
pop
imul
xchg
into
mov
jo
and
stos
mov
sbb
fimull
push
cmp
push
andl
cmp
mov
imul
ljmp
cmc
push
and
fxam
lcall
and
adc
mov
lret
dec
repnz
enter
aas
lret
mov
test
mov
out
pop
shll
add
push
jle
sub
roll
lods
pop
dec
inc
xchg
mov
shlb
imul
xor
gs
add
adc
mov
cmp
frstor
and
out
mov
ret
sub
push
pop
xchg
popf
cli
dec
ret
sbb
jb
lea
push
in
jecxz
cs
sub
inc
cmp
sti
out
push
jmp
in
adc
gs
scas
pop
daa
pmaxsw
decl
rcl
das
insl
xchg
jecxz
popf
xchg
pop
or
sbb
mov
inc
inc
cmp
fstpl
test
push
xchg
mov
xor
xchg
jb
scas
cs
cmp
inc
jp
icebp
push
pusha
js
xor
scas
mov
repz
sbb
add
rcrb
fimull
sbb
sub
decb
out
test
xorl
dec
sbb
push
movsl
jne
pop
jg
cld
sbb
repnz
or
andl
dec
add
inc
cmp
roll
jp
and
jb
cmp
fwait
sub
roll
xchg
daa
mov
xorl
int3
je
pop
pop
fsubrs
repz
popa
xor
push
fiaddl
mov
sti
jns
adc
std
adc
test
cmp
das
stc
outsl
mov
enter
jbe
cmp
inc
mov
add
push
push
dec
stos
out
mov
popa
push
push
in
sub
inc
jl
scas
or
test
daa
mov
sbb
arpl
and
mov
mov
xchg
jo
sbb
pop
out
repz
test
fwait
mov
cmc
push
add
fcmovu
addr16
lret
mov
scas
lods
mov
loopne
dec
pop
jecxz
mov
inc
scas
pushf
out
adc
repnz
mov
and
pop
lahf
and
push
rcrb
inc
jb
pop
jmp
pusha
jl
dec
push
push
sub
mov
mov
gs
fdivrs
mov
cmc
dec
mov
inc
icebp
test
mov
cmp
test
ret
adc
leave
or
leave
jne
fbstp
or
xor
adc
cwtl
pop
push
outsb
adc
mov
xchg
mov
pop
and
mov
addb
fsubrs
lcall
scas
xchg
jl,pn
mov
out
mov
sbbb
cmpsw
ljmp
adc
dec
test
inc
ds
test
push
f2xm1
jo
outsl
popf
mov
pop
stos
cmovl
loope
inc
mov
cli
cmp
les
push
mov
pushf
xor
out
cmp
jb
mov
outsl
outsb
in
xchg
bound
push
inc
sub
xor
adc
and
mov
pop
les
jno
cmp
push
test
xchg
push
sub
call
cwtl
xor
insl
ret
rol
jle
xor
cmc
pop
and
rcrl
push
sbb
pop
mov
repz
mov
fsubrl
lret
cli
adc
sbb
shr
push
dec
cmp
lret
in
lds
jbe
jbe
mov
daa
mov
xor
test
mov
out
push
xor
imul
cmpsl
push
in
imul
dec
fisttps
push
clc
mov
pushf
jb
std
fs
xchg
or
cwtl
mov
ds
mov
mov
pop
rcl
push
mov
sbb
or
jmp
xchg
sbb
fwait
sbb
ret
add
dec
ljmp
and
push
add
pop
push
sub
mov
fadds
mov
scas
lahf
popf
fsubl
push
push
add
cmp
jg
xchg
js
ret
out
addl
push
jns
inc
in
rcll
std
adc
cmp
push
xor
push
or
jl
fimull
sub
popf
stos
sbb
scas
or
mov
mov
cs
mov
loop
sub
lock
inc
iret
or
fcmovnb
jo
in
loop
jge
xchg
scas
gs
aam
icebp
in
jg
jne
mov
cmp
sbb
mov
adc
ds
icebp
mov
lds
fdivl
push
rclb
jmp
sti
xchg
mov
xchg
dec
adc
js
lcall
mov
cmpsb
jle
scas
shr
pop
inc
sub
call
mov
dec
jecxz
rcrl
sub
jbe
cli
pop
into
jnp
push
inc
sub
mov
pop
and
leave
xor
adc
mov
mov
out
dec
add
adc
dec
mov
daa
mov
dec
jmp
dec
lock
xorl
fcomp
test
mov
push
jno
fcoml
lods
push
test
imul
js
divb
sub
pop
lods
and
xchg
push
xor
aas
push
fsts
js
xchg
sbb
mov
xchg
sbb
sar
inc
repz
cmpsl
add
je
dec
stos
outsb
sbb
inc
out
aaa
das
stos
or
dec
sbb
mov
out
inc
cmp
dec
dec
xor
jp
fisubrs
loope
mov
mov
fdivl
add
shlb
adc
js
into
loop
sub
nop
loopne
mov
movsl
inc
mov
inc
jbe,pn
xchg
scas
aam
mov
mov
outsl
in
push
lahf
lret
ret
push
jge
add
repz
push
adcl
and
imul
xchg
test
inc
jbe
mov
sarb
fdivr
xor
sarb
in
add
xchg
iret
fists
xchg
dec
lgs
or
xor
fldenv
and
push
jle
inc
dec
or
pop
es
dec
sub
xchg
pop
cmp
push
add
test
xlat
lods
es
cs
or
mov
inc
cli
mov
mov
int
mov
pusha
movsl
nop
jno
push
nop
or
pop
out
jae
pop
in
inc
ret
pop
jb
push
jge
xor
or
or
jl
pop
or
mov
call
fildl
mov
jb
fistpl
test
push
hlt
sarl
or
xorb
inc
adc
aas
idivb
shll
aaa
rolb
stc
adc
lret
inc
ret
into
lock
ss
cmp
fs
and
mov
js
test
mov
sub
stos
stc
ret
mov
nop
sbb
pusha
imul
cmovl
jecxz
inc
jb
jae
gs
mov
mov
es
xchg
sbb
incb
cli
inc
push
mov
sub
movsb
sbb
mov
sub
mov
aad
mov
dec
scas
and
leave
daa
nop
lods
xchg
mov
or
loop
mov
out
int
inc
es
dec
pop
roll
imul
and
cs
lock
xor
pop
jns
adc
daa
jns
cmp
and
leave
adcl
cmp
loopne
pop
xchg
inc
xchg
repz
inc
cmpsl
sahf
into
int3
nop
enter
fstl
push
jbe
cmp
mov
sbb
add
xchg
xchg
es
shrb
nop
xor
mov
push
cmp
ljmp
or
xchg
jns
sub
loopne
and
xchg
cltd
mov
mov
mov
out
push
lods
in
adc
sbb
mov
jne
add
out
negb
bound
inc
pop
fwait
jae
sub
sub
cmc
aam
fisttpl
xchg
jmp
test
cmc
popf
in
loopne
adc
inc
mov
push
test
ja
pop
cmpsb
xchg
loope
test
push
repnz
fcoml
incl
mov
push
add
push
inc
sbb
add
push
jmp
add
ret
ficoml
xorl
mov
mov
mov
sub
jo
and
jg
or
sbb
push
cmpsb
push
in
xchg
repz
cmp
sbb
cmpsl
adc
pop
xor
sarb
sbb
repnz
je
jno
inc
fcmovne
pop
xor
pusha
cmp
arpl
lret
xor
aaa
aaa
sbb
loopne
mov
xor
test
cmp
jo
into
sarl
ljmp
pop
cmpsl
xchg
pop
cmpsl
fs
shl
lret
test
pop
leave
dec
mov
imull
scas
mov
push
or
pop
mov
jge
push
jecxz
test
cmp
xor
xchg
jo
sbb
xor
andb
xlat
daa
push
arpl
pop
adc
sub
subb
and
in
pushf
icebp
and
and
push
jmp
out
dec
jg
push
sbb
int
pop
popf
lods
cmp
jb
int
xchg
sbb
adc
adc
fisttpll
or
jge
add
ds
xor
int
loop
aas
or
mov
inc
aas
popf
pop
dec
loope
mov
add
pop
fisubl
pop
cmc
clc
pusha
add
outsb
lahf
mov
in
les
sbb
sbb
idivb
sti
xor
mov
lock
sbb
cmp
les
mov
idivb
sub
xor
pop
imul
dec
xchg
test
add
jns
fcom
icebp
mov
mov
cmc
pop
aad
mov
mov
fmuls
or
leave
add
je
ret
fistpl
and
dec
pop
jbe
movsl
push
call
add
inc
inc
aad
xor
sub
lret
lret
lcall
fidivl
lcall
jno
mov
xchg
inc
rcrb
inc
outsl
addr16
mov
test
shrb
rcll
das
dec
push
arpl
mov
mov
sub
sub
add
and
xchg
gs
bound
pop
lods
mov
fnstsw
mov
out
push
xor
cmpsb
adcb
dec
mov
jp
pop
jecxz
out
inc
sti
jg
xchg
cli
sbb
xchg
ret
mov
or
add
rcrl
cmp
push
outsl
test
cmpsl
mov
sahf
int3
pop
jbe
int3
dec
mov
dec
sub
cltd
popf
and
cmp
push
push
cmp
ja
push
add
or
insl
data16
scas
daa
in
es
mov
add
pop
fs
sti
xor
leave
fisttpll
aam
andl
daa
popa
adc
loopne
mov
mov
adc
mov
adc
fisttps
fucom
cmc
mov
xor
lea
imul
jl
cmp
cmp
cs
insb
ror
addr16
iret
clc
sahf
jb
push
dec
pop
incl
mov
mov
enter
xor
fstpl
xchg
pop
insl
js
ret
dec
inc
addl
push
inc
call
mov
push
test
jg
hlt
push
gs
stos
ja
fildll
adc
push
icebp
cmp
rclb
lods
jns
jmp
pop
xor
aam
jno
addr16
mov
sub
mov
xchg
pusha
imul
add
cltd
xchg
lods
lahf
test
stos
iret
adc
repz
inc
and
mov
jae
jns
jno
cmpsb
shl
inc
pop
jg
popf
sbb
adc
xchg
test
and
mulb
loopne
mov
mov
aas
mov
mov
adc
adc
cmpsl
and
and
or
inc
rcrb
dec
in
test
mov
dec
xchg
inc
mov
or
sub
addr16
fdivrs
in
imul
stos
jo
iret
push
shrb
rol
or
ret
scas
add
mov
cmp
mov
adc
mov
push
cld
xchg
outsb
mov
cmc
lds
push
popa
jns
mov
or
test
push
les
mov
cmc
rcl
ljmp
mull
pop
mov
pop
xchg
and
mov
mov
xor
xlat
jle
or
mov
cli
imul
sahf
loope
adc
mov
hlt
test
inc
inc
mov
repz
in
scas
push
dec
jbe
out
dec
pop
jbe
sti
jmp
xlat
push
jge
movsb
sub
push
in
mov
int
jmp
loope
push
lock
push
push
stos
jnp
cli
call
pop
out
les
iret
sbb
into
pop
int3
xchg
jp
mov
jp
and
adc
ds
out
jg
aad
mov
sub
dec
in
add
xor
gs
in
sub
rcl
add
and
int
mov
cmp
notl
sub
or
dec
push
mov
outsl
mov
mov
push
mov
popf
mov
aad
xchg
push
out
push
loope
add
mov
mov
jmp
jnp
inc
fildl
aam
lahf
loope
or
dec
sub
sbb
mov
add
clc
lds
xor
mov
pusha
push
jnp
xor
in
insl
insl
das
inc
fwait
push
xor
mov
inc
test
iret
inc
pop
ror
xchg
in
sbb
lods
jns
add
stos
add
and
fstpl
adc
sub
orb
jle,pt
push
add
xorb
push
imul
jae
sbb
mov
jae
js
js
std
cltd
push
sbb
out
ja
ss
sub
mov
outsl
sbb
push
daa
loop
and
adc
std
pop
data16
mov
cmp
lds
add
xor
repnz
add
mov
adc
in
xchg
mov
rclb
mov
mov
xchg
call
nop
scas
rolb
cwtl
dec
cli
push
popf
gs
lods
outsl
fs
fsubl
xchg
loope
addr16
scas
icebp
gs
push
sub
test
mov
jg
sub
ja
test
in
cwtl
pushf
sbb
nop
pop
fldl
or
in
insb
mov
dec
rcll
daa
ficoms
lock
mov
es
fs
jb
into
lret
or
mov
arpl
cltd
ljmp
outsb
pop
mov
sbb
dec
push
out
pop
jne
fs
inc
in
fstl
add
xchg
jns
outsb
add
int
int3
cmp
int
icebp
in
xchg
gs
sub
mov
xchg
out
inc
ds
mov
xor
subb
pop
lahf
lods
fsubs
pusha
lahf
mov
in
stos
add
or
cmpsb
clc
cmp
cmpsb
pop
adc
pusha
daa
scas
or
lahf
insb
xchg
fidivrs
aas
mov
or
js
mov
push
push
mov
mov
dec
imul
sbb
adc
push
add
sbb
mov
mov
xor
in
dec
fwait
popa
sbb
mov
icebp
adc
add
in
std
mov
decb
sub
lea
int
shlb
cmc
dec
icebp
mov
ret
adc
repz
aad
sub
dec
pop
sub
ljmp
shr
sub
push
and
mov
sbb
mov
or
sub
add
pop
fwait
jle
pop
xchg
jecxz
out
test
loope
aaa
pushf
movsl
xor
mov
inc
mov
lods
dec
mov
in
xlat
nop
push
loope
mov
andb
and
test
push
lods
mov
xor
aas
jbe
inc
xchg
mov
pop
mov
sub
cltd
mov
jb
insb
mov
push
rolb
sub
in
mov
mov
js
in
mov
cld
aad
je
dec
dec
push
mov
sub
je
ja
fnstcw
jns
or
mov
xchg
out
enter
loope
push
pop
repz
lock
xchg
sub
jbe
mov
sahf
dec
ja
ficompl
mov
sahf
out
rol
adc
pusha
add
mov
test
sub
jb
mov
fsts
loope
cmp
jl
es
sbb
inc
add
roll
or
stos
mov
xor
aaa
adc
pop
sbb
daa
sub
insl
movsl
lock
push
enter
pushf
out
adc
out
lea
popa
xchg
jg
xchg
sub
leave
into
mov
mov
sbb
xchg
subps
hlt
orl
ja
std
pop
pcmpeqd
mov
cs
repz
lods
mov
js
lock
in
cmc
bnd
and
sbb
and
mov
jne
inc
cmp
push
adc
xchg
and
ffree
mov
xchg
movzwl
lea
rclb
test
cld
into
jmp
jmp
imul
or
pop
test
xor
adc
jp
mov
inc
inc
fldenv
mov
in
andb
popa
pop
cmc
adcl
xor
sbb
adc
mov
iret
jmp
xor
xrelease
push
pmaxsw
loop
leave
sarb
popa
adc
mov
fists
inc
xchg
jnp
pop
ss
inc
ljmp
or
or
push
loop
scas
add
loope
test
inc
jae
mov
adc
in
outsl
fwait
adc
test
int
subl
jl
or
xor
popa
imul
out
aam
xchg
test
jp
mov
cmp
push
mov
or
inc
out
mov
or
jno
stc
cwtl
cli
mov
dec
lds
push
sahf
pop
andb
dec
cmc
fmul
jp
lret
cltd
sbb
inc
mov
mov
mov
aad
add
xchg
test
jge
push
pop
call
insb
jb
cmpsb
cmpl
movsb
inc
xchg
loopne
stc
jo
int3
insl
pop
pop
aaa
js
mov
or
add
mov
loop
vcomisd
dec
int
lcall
xchg
fs
pusha
repnz
and
jno
cmpsl
push
add
xlat
lcall
shll
test
mov
out
push
outsl
sbb
xchg
nop
adc
ljmp
add
sub
fisubrs
iret
into
jge
mov
mov
dec
pop
jns,pn
adc
jbe
dec
fildl
icebp
pushf
mov
xchg
xorl
repnz
dec
add
fwait
mov
addb
ljmp
pop
outsb
sub
push
popa
and
negb
mov
es
xchg
roll
outsl
pop
adcb
les
leave
jo
jmp
mov
jg
sbb
sub
mov
inc
mov
and
jno
leave
lret
or
push
jnp
mov
sub
movsl
mov
pop
pushf
lds
and
mov
pop
pop
mov
inc
aad
hlt
or
xchg
test
fmuls
out
repnz
clc
adc
sub
push
adc
jns
xchg
fs
int3
dec
test
out
aad
inc
outsl
outsl
dec
sub
int
dec
push
mov
rcrl
test
clc
mov
daa
jbe
xchg
inc
xchg
mov
cmp
jns
cs
pusha
sbb
insl
rorl
dec
aas
fisubs
andb
jno
xchg
repnz
sbb
jne
push
add
cmpsl
pop
call
adc
mov
sbb
stos
add
ret
in
popa
cs
popl
movl
je
rcrb
jae
sbb
cmp
cltd
sbb
pop
std
lds
movsb
pop
pop
jae
fucomp
mov
repnz
push
les
fisttps
adc
rcr
in
and
xor
pop
mov
jnp
mov
jns
sahf
dec
pop
adc
adc
out
pop
jnp
mov
cmp
mov
push
sub
dec
sub
or
add
jb,pt
mov
xchg
scas
push
insb
cwtl
aas
dec
adc
and
jbe
rorl
mov
ret
mov
push
cmp
test
mov
data16
adc
jae
pop
mov
shlb
pop
mov
ret
mov
cmp
iret
loop
xchg
xchg
sub
add
mov
mov
adc
jp
jle
xor
pop
dec
sub
fdivl
and
js
iret
lock
pop
push
sbb
pop
test
loope
jecxz
xchg
mov
inc
pop
fldenv
scas
movsb
adc
decb
lods
cmp
dec
fst
dec
enter
mov
sbb
or
loop
dec
pop
fs
loope
scas
push
or
add
mov
jno
or
aad
fwait
mov
xor
mov
sub
mov
outsl
xor
sub
hlt
adc
mov
nop
pop
sbb
lret
mov
in
in
mov
xchg
dec
sbb
mov
xchg
int
xchg
jne
mov
or
xor
push
and
idivb
fsub
bound
xchg
cmc
xor
outsb
arpl
pop
xchg
push
add
loopne
out
jnp
mov
xchg
mov
in
dec
std
lock
or
or
xchg
xor
sti
cmpsl
lock
pop
dec
outsl
jl
adc
mov
cmpl
pop
cld
lods
jecxz
in
cld
push
insb
gs
xchg
sarl
inc
add
mov
adc
or
lds
jl
dec
jbe
inc
dec
adc
dec
stos
flds
call
arpl
call
jp
or
pop
fmuls
fsubr
and
push
and
stos
sahf
movsl
jl
fsubrl
pop
sub
inc
ret
out
movsl
in
sub
aaa
and
addr16
adc
stos
imul
jb
xor
cmpsl
int3
xor
imul
mov
adc
cli
lahf
pop
dec
test
andl
arpl
push
mov
xchg
push
lock
xchg
mov
push
pop
sar
mov
int3
out
inc
xchg
movsb
out
mov
adc
jne
xchg
mov
idivb
inc
mov
jg
dec
andb
mov
mov
lds
mov
inc
das
lcall
test
pop
aaa
test
in
xchg
xchg
ret
orb
bound
jno
out
push
dec
out
mov
cmp
shl
push
fistpl
and
mov
movsb
in
xchg
adcb
sbb
ret
out
push
enter
std
lahf
pop
mov
add
and
pop
push
ljmp
stc
flds
push
hlt
pop
mov
fwait
scas
sbb
shlb
push
xchg
fistps
pop
daa
pop
xorb
repz
lods
jbe
sub
fadds
pop
xor
xor
leave
jns
insb
ja
jbe
pushf
mov
test
xchg
lret
inc
adc
and
aam
xor
fmuls
ds
and
cmp
es
fwait
in
shrb
sub
pop
dec
or
mov
dec
and
adc
paddd
dec
pop
pop
push
jae
dec
xchg
fistps
ds
clc
sbb
add
jmp
imul
aad
push
sbb
jb
push
fiaddl
rcll
pop
in
mov
test
push
adc
xchg
push
mov
sub
addr16
cmp
test
mov
mov
loope
nop
andb
cs
adc
pusha
sub
cli
mov
icebp
mov
lea
mov
xchg
add
and
cltd
mov
andl
and
rol
into
jecxz
leave
mov
mov
jl
cmp
push
cmp
or
inc
lods
imul
mov
sub
push
pop
push
dec
stos
pushf
mov
add
lret
xorb
gs
call
xor
add
inc
inc
dec
sbb
cltd
iret
mov
push
std
and
pop
xchg
pop
jnp
mov
popf
enter
out
call
rclb
ret
and
pop
and
add
and
icebp
loop
xor
clc
andb
sbb
xchg
gs
push
jnp
inc
jmp
mov
mov
and
test
ret
xchg
or
jge
mov
inc
add
add
or
jg
inc
cmp
and
jne
outsb
ja
mov
mov
in
or
fsts
mov
in
in
inc
rorb
sub
mov
inc
sbb
push
push
pop
ljmp
dec
adc
cmc
jne
es
adc
test
xor
shll
call
sub
test
call
sub
test
stc
test
mov
sub
stos
add
imul
bound
inc
push
out
loope
je
inc
dec
test
clc
mov
sar
pop
out
sbb
mov
inc
mov
sub
aad
and
ljmp
and
dec
popa
pop
fldt
dec
sub
mov
fcmovnbe
inc
jle
leave
pop
jp
repnz
pop
sahf
mov
cld
iret
sbb
ret
xchg
and
imul
in
pusha
imul
sub
insb
mov
jnp
add
movsl
sbb
jae
movl
lcall
enter
sub
subb
das
push
into
fstps
test
mov
imul
mov
call
shl
or
mov
jnp
aad
lret
lock
mov
add
xchg
repnz
in
inc
mov
aad
lock
shrl
and
clc
jb
gs
popf
cmpsl
scas
adc
mov
repnz
jno
push
fdivrl
sub
adc
inc
mov
outsl
loop
lahf
fldcw
packsswb
cltd
xor
jmp
movsl
sti
jge
inc
stos
or
mov
push
rolb
pop
jae
sbb
in
repz
lret
loopne
repz
add
nop
jb
ds
push
inc
cmpsl
sub
cli
notb
dec
mov
mov
xor
ljmp
push
shlb
mov
icebp
mov
pop
call
loop
clc
and
cs
cmp
sub
rol
pop
xlat
jnp
fcoms
push
lds
xchg
mov
adc
pusha
loopne
push
sbb
stc
rolb
stc
push
rep
loop
jge
mov
sub
aas
xor
data16
xchg
inc
fucomi
adc
mov
xlat
fbstp
outsb
xor
loope
add
xorps
lea
sub
mov
stos
into
cmp
cmp
sarl
jmp
fcmovu
cwtl
mov
out
sub
sahf
mov
pop
cmp
aaa
cmpsb
push
or
push
mov
xor
mov
jb
inc
sbb
pop
fisubrs
loopne
xor
sub
popa
or
mov
andb
jmp
fcmovbe
fisttpl
sbb
pop
test
jns
mov
adc
push
fistps
inc
push
cmp
cmp
out
ds
scas
push
fsts
sub
insb
dec
aam
out
addr16
lds
movb
mov
xor
lods
aaa
pop
in
sbb
daa
in
cmp
jno
test
add
inc
mov
movsl
fmuls
cmc
push
push
sub
das
std
insl
pop
mov
imul
xchg
mov
jp
out
scas
push
fisttpll
mov
daa
mov
fistl
mov
mov
mov
lods
cmp
sub
mov
fsubrp
cltd
fldcw
mov
icebp
lods
cmp
adcl
xchg
and
jmp
push
shrb
jle
inc
aad
rcll
jle
add
outsl
pop
pop
and
mov
popf
add
inc
and
dec
int
cwtl
fsubrl
pop
sub
dec
sub
adc
jg
push
out
push
ljmp
out
das
popl
push
mov
pop
jmp
js
pop
inc
mov
jnp
aad
bound
test
add
xor
xchg
stos
mov
xor
cmp
outsl
and
cmp
int3
ljmp
mov
leave
jno
fidivrl
cwtl
cmp
test
rcrb
sar
mov
inc
rorb
movsl
ljmp
iret
fwait
inc
pop
pop
roll
lea
or
mov
call
mov
fildll
mov
and
mov
in
push
or
sti
icebp
adc
fs
lret
pop
push
mov
jle
cltd
or
or
mov
inc
mov
stos
clc
jo
pop
cmpsb
sbbb
test
mov
sub
mov
aad
ss
adc
mov
ds
cmp
nop
and
xor
pop
fistpll
sub
sbb
ljmp
add
popf
iret
xchg
out
ret
clc
dec
xchg
cmp
mov
push
mov
jl
push
adc
push
push
xor
xchg
shl
xchg
lret
or
jbe
adc
aam
sub
pop
in
dec
cltd
popf
ret
mov
inc
adcb
fisubrl
loope
cmp
xchg
clc
lret
mov
test
loopne
sub
fcoms
sbb
call
fcompl
cwtl
in
pop
imul
cwtl
or
lcall
dec
and
mov
cmc
xchg
mov
cld
jns
add
fsubrl
mov
aam
mov
adc
fidivrs
loope
mov
push
fwait
aas
sub
and
daa
fnstcw
ret
bound
push
mulb
xor
xchg
push
dec
sub
pop
add
cmp
es
outsb
jp
arpl
int3
cmp
repnz
mov
add
sub
push
sbb
idivl
stos
push
xchg
movsl
not
data16
mov
or
rcll
stos
jnp
outsb
and
dec
outsb
cmp
dec
jns
xchg
cmp
inc
pop
dec
mov
mov
mov
popa
inc
cmp
addr16
adc
fucomi
push
in
xor
test
jne
insb
push
lods
cs
mov
pop
vsubss
ret
sub
loope
mov
mov
int
gs
aad
sub
pop
orb
inc
test
lcall
mov
sarl
mov
cltd
push
int3
sets
repnz
sbb
loopne
sbb
jecxz
sub
rol
push
negl
inc
jb
nop
pusha
insb
jnp
incb
out
arpl
mov
mov
dec
stos
shr
aas
mov
call
sbb
jb
jl
and
out
out
sub
mulb
popf
orl
pop
insb
cmc
mov
nop
sub
jns
add
mov
mov
jne
sub
dec
ja
sahf
pop
lock
pop
cmp
popf
popa
and
insl
dec
movsb
mov
leave
inc
jne
test
jmp
pop
mov
adcb
sub
sbb
stos
mov
sti
add
stos
jl
ror
ja
mov
scas
pop
and
cmp
gs
shlb
mov
add
hlt
xchg
cmp
lods
ds
or
cmp
inc
jb
pop
dec
sbb
movsb
stc
add
push
pop
test
mov
xlat
xor
xor
hlt
mov
and
aaa
jmp
lcall
out
cmp
testb
shll
ja
ret
push
mov
popa
nop
call
decb
fsubr
add
stc
pop
icebp
pop
jae
xchg
mov
pop
adc
nop
sahf
pop
aam
xchg
sub
add
and
jo
mov
xor
pop
divl
cmp
jbe
push
cmc
popl
xor
adcb
pop
push
xchg
or
mov
lea
pop
adc
cmpsb
mov
cld
dec
mov
repnz
xchg
push
mov
sbb
mov
imul
lds
cmpsl
data16
adc
fidivrs
out
out
insb
sbb
pop
es
inc
inc
in
in
insb
adc
cmp
xchg
adc
cmc
sahf
frstor
ret
repnz
or
lahf
xchg
aad
and
push
inc
bswap
scas
inc
xor
pushf
mov
pusha
aam
out
push
push
and
imul
in
mov
nop
nop
add
std
pop
push
cmp
aaa
aaa
pop
adc
xor
mov
scas
pop
stos
inc
addl
mov
daa
outsl
stc
fsubr
cmp
or
rolb
mov
std
jmp
mov
mov
mov
ret
out
fwait
dec
mov
pop
not
stc
and
mov
es
aad
sub
in
leave
xchg
scas
xor
lret
std
stos
into
fldcw
daa
mov
popa
xor
ljmp
jo
push
fistl
pushf
adc
lcall
out
pop
mov
scas
pop
xchg
inc
je
cmp
or
test
lahf
gs
es
add
cli
mov
pop
repz
fistl
adc
outsb
and
add
mov
das
push
loopne
jp
and
jno
pop
adc
in
js
fwait
or
sti
test
stc
fisubl
xchg
dec
and
or
loop
mov
cmp
mov
data16
je
dec
push
scas
xchg
xor
test
sub
jmp
push
bound
jns
cmc
pop
cmp
jns
mov
inc
nop
sbb
mov
imul
testl
jnp
icebp
in
inc
fsts
loope
jge
aad
aaa
pop
jmp
cli
or
lret
iret
gs
sub
sbb
cmp
inc
stos
rcrb
dec
inc
pop
lods
out
jle
push
push
jne
std
jge
aam
and
xor
jns
mov
dec
dec
stos
cmpsl
sub
push
mov
rcrb
popa
fwait
jno
repnz
and
mov
insb
shrb
jmp
adc
push
testl
movsl
and
jmp
aad
shrl
dec
cmpsl
jbe
cmp
xor
mov
bound
rcrb
cli
cmc
xchg
mov
divl
and
xchg
pop
imul
sub
push
mov
mov
scas
xchg
push
out
xor
and
push
mov
mov
mov
outsl
arpl
jne
ficoms
mov
or
roll
fs
aas
fcmovnu
add
dec
or
and
mov
dec
imul
cmp
jecxz
dec
jnp
outsl
push
jbe
cld
push
xchg
outsl
addb
sbb
pop
cli
repz
ror
aam
mov
incb
push
testl
xchg
imul
push
sbb
sbb
aaa
add
in
xchg
cmc
or
sbb
lret
jg
mov
mov
dec
lret
xor
lcall
or
mov
inc
repz
cmc
xchg
mov
shrb
inc
push
push
or
cmp
mov
pop
popf
push
mov
mov
je
mov
bnd
fcomp
sub
add
xor
ja
fsts
cs
sbb
mov
imul
cld
mov
sbb
or
loopne
icebp
xor
mov
test
movsb
data16
sbb
sub
sub
fs
or
pop
mov
sub
xchg
sub
or
insl
fsubs
mov
xchg
int3
adc
aad
push
or
xchg
shll
std
inc
lahf
sbb
repz
inc
insb
gs
mov
out
rclb
icebp
out
sbb
stc
repz
lock
push
es
xor
orb
mov
inc
fbld
mov
mov
repnz
jecxz
fldcw
fidivl
xchg
mov
fwait
sub
cmpsl
lahf
and
cmp
mov
shl
addr16
dec
mov
pushf
ficoms
cs
push
inc
cmp
jb
lret
push
and
decb
jne
bound
ret
inc
push
pop
and
fs
pop
inc
aad
jecxz
stos
cmpsb
sub
out
sbb
pushf
bound
xchg
ret
jo
inc
mov
add
iret
push
push
adc
aam
xchg
pop
imul
mov
push
push
popf
pop
mov
push
add
fs
lahf
into
iret
cmp
mov
lods
adc
pop
and
or
mull
scas
data16
out
push
outsb
insl
aaa
cmp
int3
xor
mov
xchg
mov
loop
je
cwtl
out
mov
cmp
mov
popa
fcmove
and
iret
call
push
push
dec
xchg
mov
sbb
lods
mov
mov
lcall
fists
loop
insb
sbb
je
pusha
dec
pop
inc
fs
add
repnz
mov
xchg
fldcw
sbb
jb
dec
lods
or
add
mov
sbb
cld
mov
mov
xchg
mov
mov
push
aaa
add
pop
cs
jmp
loope
mov
lret
arpl
adc
cmpsb
inc
jmp
dec
in
scas
and
movsl
jecxz
orl
cld
cmc
xchg
sbb
imul
jp
fistl
rcrb
out
add
fistps
faddl
or
in
pushfw
sbb
pop
mov
pop
fwait
cmpsl
mov
jl
or
movsb
mov
xor
mov
movsb
imul
dec
mov
cmpsb
mov
lret
mov
adc
add
mov
dec
mov
es
dec
adc
adc
add
sbb
inc
addr16
or
xor
adc
sub
mov
xor
mov
sbb
xchg
cld
pop
jge
mov
cli
cwtl
addr16
and
cld
data16
lahf
jle
cmp
js
add
push
or
cld
push
frstor
lahf
lods
aam
ja
icebp
das
inc
enter
aad
jno
pop
stos
mov
mov
pop
fwait
adc
jl
in
mov
or
sub
iret
leave
cmp
push
loop
mov
sub
mov
and
lods
nop
jbe
xchg
fildl
jecxz
sbb
popf
into
das
data16
cmp
push
imul
lods
mov
je
rol
jmp
enter
lahf
xchg
mov
dec
cmpsl
repnz
movsb
dec
push
push
test
and
sbb
jecxz
pop
or
ret
xchg
int
lea
xchg
cltd
aam
push
inc
pop
and
mov
jge
mov
cli
mov
add
and
cli
das
or
dec
cltd
mov
testl
out
inc
in
out
sbb
push
mov
push
dec
rcrl
sbb
test
addl
imul
mov
icebp
rcl
pop
jg
add
add
fcoml
pushf
push
or
push
and
mov
pop
in
adc
lea
inc
cmp
push
iret
fadds
sarl
test
sbb
mov
lock
insl
lds
fcmovne
loope
xor
aad
mov
add
add
dec
mov
iret
test
jmp
ret
cld
pop
out
sbb
mov
movsb
movsb
inc
iret
jl
into
sahf
ja
jae
push
xlat
pusha
sub
mov
shlb
and
jb
or
ret
xchg
stc
dec
xchg
test
xor
adc
fst
popa
jae
cmp
hlt
outsl
dec
stos
push
jne
out
pop
les
and
mov
lds
arpl
jmp
fmull
adc
and
mulb
out
jne
popf
nop
mov
pop
xchg
mov
mov
ss
jo
mov
lock
test
in
cli
pop
and
mov
out
fs
push
fisttpll
mov
xor
imul
mov
push
mov
mov
inc
push
aad
adc
mov
lods
mov
icebp
in
mov
bound
mov
mov
faddl
mov
jo
mov
cmp
pop
sbb
rclb
in
fildll
pop
add
and
jmp
test
inc
sbb
popa
ds
call
call
icebp
pop
push
gs
scas
icebp
xchg
add
lar
or
pop
aaa
dec
lcall
pop
adc
dec
movb
mov
imul
add
xlat
and
test
cmp
mov
fwait
cmc
aaa
fcoml
or
inc
xchg
dec
out
pusha
fisubrl
push
jmp
and
icebp
jg
mov
rorb
arpl
jnp
mov
jecxz
scas
sbb
enter
sub
cmp
pop
mov
sub
jne
mov
mov
xor
xlat
ljmp
xchg
mov
adc
push
mov
pop
mov
subl
xchg
pop
pop
jbe
sarl
mov
jp
dec
dec
frstor
mov
inc
pop
xchg
xor
or
mov
lea
rcll
mov
test
repz
iret
lret
xchg
or
loope
jp
mov
fwait
sbb
pop
das
scas
inc
xchg
in
loopne
test
cmc
aas
xchg
cmp
push
cmp
pop
cmpsl
jns
or
insl
pop
cmp
adc
lods
hlt
xor
push
ja
test
xchg
xchg
mov
sub
mov
jge
jnp
push
xor
loopne
mov
xchg
cmpsb
arpl
xlat
sti
mov
fwait
repz
xor
hlt
pop
cs
ljmp
push
div
in
xor
pop
add
movsl
and
cmp
or
cmp
popa
xchg
mov
pop
add
rcl
jge
aad
xchg
cmp
inc
pop
dec
and
fucomip
sbbl
jno
fdivr
and
scas
cltd
inc
popf
push
add
push
fnstenv
xor
cmpsb
mov
inc
adc
inc
mov
cli
jl
mov
movb
add
mov
lahf
mov
into
xorl
or
cli
mov
xor
icebp
or
xorl
mov
scas
in
cli
rcrl
jb
shlb
cmp
push
mov
adc
add
popf
insl
pcmpgtw
lret
add
dec
push
add
data16
aas
xor
fsts
loopne
pop
inc
out
sarb
in
fwait
loope
cmp
fstpl
icebp
jbe
xlat
add
mov
jle
mov
test
addr16
jmp
jp
or
mov
loop
adc
pop
xchg
out
mov
xchg
sbb
decb
xchg
add
jle
rorl
jmp
mov
mov
and
out
xor
loopne
jo
xchg
rolb
data16
aas
pop
aam
test
jb
jmp
insl
xchg
xchg
std
test
rcrl
push
mov
loopne
addr16
mov
xor
and
and
fbstp
fcoms
xchg
sub
mov
mov
hlt
sbb
add
inc
jbe
jbe
or
imul
xchg
push
stc
push
btr
and
push
mov
xlat
lret
insb
pop
out
lock
mov
addr16
cmp
mov
push
ret
xchg
inc
jbe
push
adc
cld
or
mov
mov
xor
inc
pop
mov
data16
mov
out
pop
add
mov
jae
aad
sub
jmp
push
pushfw
jl
adc
sbb
fwait
inc
jg
xchg
outsb
orl
movsb
xchg
mov
out
bound
push
pop
dec
inc
add
sbb
mov
sbb
add
fldt
pop
mov
mov
fadds
xor
dec
xchg
sbb
pop
test
mov
sub
jg
in
loopne
mov
repz
fxch
cltd
out
mov
and
aad
repnz
inc
inc
adcb
or
push
adc
les
and
push
imul
xor
mov
jl
inc
sub
sbb
mov
or
test
push
push
jb
lock
dec
and
insl
iret
aam
movl
mov
or
pop
ja
sbb
xchg
mov
out
loop
push
das
mov
jg
fnstenv
dec
sti
rorb
ljmp
inc
inc
pop
add
pop
xor
jl
push
dec
es
mov
fs
das
lds
jecxz
aad
add
lret
mov
clc
cli
sub
add
inc
test
sbb
or
out
or
pushl
pop
mov
rorl
mov
popa
dec
test
and
gs
dec
ret
mov
mov
and
stos
stc
sti
pop
inc
dec
into
pusha
cmp
ss
movsl
lods
and
mov
and
push
jno
js
mov
aaa
push
js
fcompl
pop
dec
add
addr16
push
xlat
mov
add
fsts
scas
jne
cmp
and
cmp
rorl
addb
cltd
test
jnp
in
mov
fistps
in
je
jae
in
jns
inc
dec
cmpsl
xor
test
cwtl
dec
or
pop
jno
pop
or
add
xlat
imull
fcoms
call
dec
inc
jp
jb
cli
mov
movb
scas
fmuls
orl
xchg
mov
pop
test
arpl
jge
or
ljmp
push
idiv
xor
ljmp
stos
dec
jno
pusha
cmp
mov
or
push
es
and
adc
and
and
mov
pop
in
pop
jg
and
dec
dec
scas
ljmp
popa
cmpsl
add
clc
jmp
aam
sub
enter
ljmp
dec
out
lods
ret
jo
enter
mov
fnsave
sub
jp
imul
push
int
sub
repnz
sbb
push
pop
movsb
push
add
mov
xor
and
loope
push
xor
jge
in
test
rcrl
loope
mov
in
into
loopne
les
stos
fsubs
xlat
mov
test
xchg
xor
lock
mov
mov
notl
rolb
sahf
repz
lahf
test
push
or
xor
mov
in
in
out
lock
pop
mov
pop
xchg
mov
dec
icebp
loop
cwtl
insl
rcrl
cmp
pop
rclb
inc
mov
xchg
ljmp
sbb
insl
mov
jp
xchg
pop
mov
inc
push
pushf
ret
push
or
dec
and
dec
xchg
int3
push
test
sbb
push
outsl
pop
in
clc
fmull
xorb
sbb
scas
sub
add
xchg
into
jb
into
test
sub
jecxz
out
sub
mov
jmp
jp
push
fnstenv
adc
loop
sbb
xlat
mov
mov
add
jle
call
adc
insl
inc
lcall
sbb
inc
xlat
mov
lods
pop
push
push
aas
inc
push
add
insl
or
pop
push
cmp
add
add
fldl
les
pushf
mov
sub
dec
jmp
sub
shll
add
fld
sub
rorl
push
fs
in
in
in
push
fwait
sbb
fwait
pop
lods
jmp
clc
mov
dec
cmpsb
sarl
dec
bound
push
xchg
xchg
push
xchg
shrb
notl
roll
ljmp
sahf
fwait
lods
cmpsl
cmp
sarb
loop
test
xchg
pop
filds
cmp
pop
jmp
mov
cmp
jecxz
xchg
sub
mov
faddl
fdivl
mov
repnz
inc
mov
pop
shrb
jno
mov
cmp
sbb
aas
add
aaa
pop
sub
fadds
push
leave
scas
mov
sbb
push
out
xchg
jecxz
test
in
pop
sub
sub
mov
add
xor
stc
int3
inc
mov
push
jbe
and
inc
sub
mov
sbb
mov
outsb
mov
push
cmc
fs
inc
fdivl
int
movsb
push
cs
sub
cmp
mov
pop
test
lock
cmp
rcll
test
xor
mov
cmp
xchg
adc
sub
jae
add
or
in
shll
pusha
push
insb
leave
cld
push
dec
jp
pushf
pop
pop
and
pop
fildl
lret
enter
stos
add
rcll
xor
xlat
ss
mov
push
push
cmp
or
xorb
mov
pop
mov
mov
sti
insl
or
inc
rcrl
sbb
xchg
cmp
sbbb
mov
ds
xchg
int3
test
in
inc
test
xchg
mov
mov
lock
mov
jnp
outsl
dec
int3
add
mov
inc
mov
adc
in
rcrb
movsl
and
daa
insl
in
ja
jae
sbb
ret
std
arpl
sbb
pop
xchg
xlat
and
les
scas
cmpsl
iret
or
cwtl
xchg
add
leave
push
test
fdivrl
mov
push
jg
sub
shl
insl
addr16
push
nop
scas
inc
push
sub
rorb
add
int3
jns
test
ficompl
dec
inc
mul
fcompl
ret
movsb
push
xchg
movsl
std
mov
pushf
jno
dec
push
and
lret
sub
ljmp
sbb
or
mov
dec
inc
jae
into
inc
jge
push
shl
aam
ds
xlat
aas
aaa
inc
dec
push
xchg
mov
mov
push
imul
lcall
inc
jg
cmpsb
or
out
xor
lcall
adc
xchg
cmp
mov
jp
int
and
adc
jae
xor
jnp
popa
adc
mov
inc
xorl
mov
daa
call
je
mov
cmpsl
mov
xchg
movsb
mov
lods
jo
outsb
inc
aas
cmp
shlb
mov
pop
add
xor
bound
test
adcb
cmp
insb
lods
addr16
inc
and
and
dec
jno
jge
inc
push
movsb
dec
inc
into
pop
mov
jecxz
clc
je
pop
sub
cmpsl
in
and
sub
out
mov
shlb
leave
lcall
fisttps
xchg
mov
and
or
loope
cmp
or
jmp
and
mov
pusha
mov
inc
pusha
popf
in
jbe
nop
xor
xchg
xchg
int
add
xchg
popa
xchg
mov
imulb
mov
addr16
xchg
jbe
add
outsb
cs
data16
cld
or
mov
mov
and
xchg
test
mov
cs
aad
test
aaa
loopne
fdivl
fmulp
lret
jbe
adc
fcoml
pop
add
mov
xchg
or
and
repnz
or
fs
daa
mov
fnstcw
daa
cli
mov
adc
andl
mov
ficomps
cmp
sbb
pop
cmpsb
or
pop
mov
pop
cmp
test
je
nop
addr16
nop
fistpll
push
insb
fwait
inc
xor
inc
test
push
pop
push
mov
fdivrs
loopne
push
jns
pop
test
mov
in
lea
and
aas
push
outsl
mov
pop
bound
scas
popl
cmpsb
insl
filds
mov
jecxz
mov
fs
imulb
out
mov
fcoml
outsb
into
or
dec
inc
pop
sub
xor
dec
inc
cld
and
mov
add
sbb
sti
xchg
jne
jne
lods
imul
outsb
push
mov
addr16
push
dec
loopne
adc
outsb
cmp
ds
insb
xchg
jne
pop
cwtl
jp
mov
mov
enter
clc
cwtl
mov
shr
jno
std
outsb
mov
paddd
insb
push
and
pop
fmull
imul
fimuls
shrl
bound
outsl
inc
enter
mov
cmpb
ds
push
mov
test
sub
cld
inc
fnop
xchg
sub
mov
in
and
mov
and
in
push
rcrb
mov
xchg
popf
movsb
neg
movsb
fucom
mov
mov
mov
test
xor
fimull
dec
or
cmpsl
and
ja
sbb
xlat
stos
stos
aad
push
or
xor
mov
mov
jge
mov
pushf
mov
sub
add
in
mov
mov
mov
jnp
faddl
shlb
ljmp
les
fprem1
jl
jp
push
aaa
sub
mov
inc
call
adc
enter
sbb
jecxz
sbb
xchg
int
loopne
jnp
jle
sub
ds
xor
sbb
inc
stos
shrb
lret
pop
xlat
or
es
aaa
scas
add
shrb
fnstsw
and
mov
clc
push
xchg
loopne
xchg
loope
mov
jl
and
clc
les
add
iret
xlat
pop
call
push
insl
pusha
cltd
jp
add
movsb
push
mov
mov
ja
sbb
or
inc
js
mov
push
es
adc
aas
cmp
insb
push
pop
xchg
sarl
test
mov
jae
push
push
pop
andl
mov
sub
mov
ja
or
ficoms
popa
dec
xchg
inc
push
inc
aad
jp
popl
mov
daa
adc
xchg
mov
push
xchg
in
jns
cmpsl
ds
lock
test
faddl
sbb
cmpb
sub
push
mov
data16
inc
push
cmp
cld
mov
mov
lret
inc
or
stos
mov
mov
jne
push
pop
inc
mov
pop
pop
mov
cmpsb
imul
mov
sub
xchg
xor
mov
movsl
push
dec
sub
fs
mov
pushf
mov
xchg
outsb
aaa
jb
in
add
jle
call
in
ss
dec
xchg
inc
or
add
jecxz
mov
xchg
nop
inc
push
jp
mov
or
dec
int
in
ret
les
or
scas
pop
ret
xor
daa
xchg
int
pop
loop
jmp
mov
js
add
sbb
xchg
dec
xchg
jnp
pop
adc
add
jnp
dec
lods
mov
data16
sarb
mov
je
pop
mov
lahf
into
sbb
repz
xchg
or
cmp
lahf
and
dec
in
dec
in
fxch
mov
sbb
bound
mov
pop
pop
cmp
inc
pop
xchg
mov
jb
lock
mov
pop
movl
test
sub
cmpsb
jmp
and
xlat
xchg
iret
mov
jne
push
add
ficomps
out
movsb
pop
fldenv
mov
adc
fstpt
mov
xchg
jl
jg
mov
adc
mov
inc
jg
ss
aad
lea
xor
jo
js
int3
jl
or
out
push
shll
dec
push
add
xor
data16
shl
test
cli
or
jl
mov
cltd
and
jl
inc
in
mov
push
je
mov
xor
les
push
test
pop
pusha
add
adc
jle
jg
xchg
xchg
js
cmpsb
int3
ret
and
shrb
das
ret
enter
add
ds
pop
decb
rcpps
clc
pop
xchg
pop
jp
fst
push
out
mov
mov
sbb
jle
push
inc
cpuid
movsl
loope
mov
lret
or
and
lcall
cmp
xchg
sub
aaa
in
incl
stos
mov
fsubrs
sub
loope
les
xchg
pop
aaa
jo
push
mov
add
inc
in
push
cmp
mov
adc
push
mov
jp
jae
pop
add
adc
dec
xor
cmpsb
subb
dec
and
mov
xor
mov
dec
inc
sub
mov
loop
jbe
insb
loopne
xor
pop
je
fidivs
and
push
mov
cmc
and
fs
leave
in
lret
cmc
mov
sahf
dec
gs
xchg
outsl
mov
rolb
mov
push
cwtl
nop
in
xchg
std
fistpl
mov
aam
pop
and
mov
test
int3
dec
pushf
xchg
insb
add
xor
mov
ss
dec
movsl
lods
xchg
repnz
movsb
fwait
dec
repnz
notb
sbb
mov
xor
dec
cmp
inc
ffreep
lds
out
jne
jbe
push
shll
hlt
shlb
shlb
and
test
lret
lcall
pop
or
lods
push
cmpsb
mov
cmc
and
sbb
adc
jl
jae
jp
int3
cltd
or
mov
add
lock
stos
sub
mov
adc
add
insl
sbb
cmp
pop
lods
xor
pushf
sbb
xchg
jbe
sarl
aas
std
jg
test
fcoms
push
add
ret
jbe
iret
sub
or
arpl
movsb
or
lcall
mov
mov
ds
mov
cmp
addb
fcomps
andl
sbb
lods
xchg
xchg
pop
lcall
xor
mov
das
ffreep
pop
push
lods
test
jo
pop
cltd
inc
xlat
xchg
test
xorl
adc
push
inc
leave
or
fsubrl
in
mov
add
ss
icebp
outsl
sarl
test
mov
cmp
icebp
mov
pop
das
push
daa
and
push
into
sub
jo
int3
pop
pop
sbb
test
inc
insb
cmp
or
fnstenv
shll
cmp
adc
mov
scas
mov
test
jno
lahf
add
dec
mov
in
sub
arpl
jmp
inc
cld
sub
test
jo
movsb
into
inc
bound
sbb
pop
int3
out
mov
or
mov
mov
xor
movsb
rclb
out
lret
mov
jecxz
nop
push
mov
dec
lret
adc
popa
xchg
or
dec
clc
and
sub
sub
rcrb
pop
jb
push
out
adc
push
pop
cmp
jns
or
jns
hlt
mov
ja
jge
cmp
xor
cltd
jne
push
or
jle
loop
xorl
mov
icebp
mov
cmpsb
insl
popa
divl
mov
add
mov
xlat
insb
shlb
mov
or
and
cwtl
insl
pop
push
cltd
push
jle
fstpl
mov
mov
sub
mov
in
jmp
jbe
test
add
sbb
fbld
loope
jl
fmul
xchg
idivl
sub
mov
test
inc
xchg
bound
pop
and
fcomps
mov
shr
add
cltd
jecxz
push
in
jmp
sbb
bound
sbb
mov
xchg
dec
test
dec
pop
rorl
mov
inc
push
sarl
push
adc
xchg
pop
pop
pop
pop
lods
dec
call
or
movsl
lods
mov
mov
idivb
out
cmpsl
mov
movsb
out
mov
test
dec
sbb
inc
add
xor
pop
jmp
lods
sub
jecxz
pop
dec
data16
lret
xor
xor
jno
enter
adc
mov
jl
mov
add
pop
add
pop
fsubp
mov
mov
shl
add
mov
mov
rcrl
aad
lcall
sub
call
mov
pop
or
lds
cmp
int
cmp
mov
enter
rolb
mov
push
inc
stos
test
mov
jns
dec
cs
add
push
pop
out
inc
jne
icebp
pop
out
cmc
sub
push
repz
inc
jae
ror
test
mov
mov
inc
add
pop
aaa
div
or
xor
clc
or
mov
cwtl
pop
sbb
test
jmp
hlt
sar
sbb
ljmp
mov
sti
push
and
sbb
les
jmp
pop
mov
cmp
jl
pop
xor
dec
cmc
shll
and
std
mov
mov
sbb
dec
rolb
lods
stos
imul
dec
sbb
cwtl
out
jno
mov
mov
adc
loopne
test
pop
or
cmc
cwtl
jbe
inc
dec
cli
dec
push
ss
test
gs
push
adc
cmp
dec
fimull
xchg
pop
ljmp
add
lock
adc
pop
hlt
push
cmc
pushf
data16
cltd
xor
lds
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jno
call
push
xchg
test
xor
sbb
mov
add
call
fstl
and
sahf
jg
xchg
sbb
pop
xor
mov
mov
mov
xor
push
push
mov
pop
pop
sub
movswl
xor
push
pop
mov
jmp
enter
je
adc
loopne
pop
aas
or
push
mov
sub
jle
mov
dec
push
jmp
aam
jb
inc
jns
pop
insb
xor
in
cmc
decl
test
in
movsl
mov
lds
mov
loopne
fs
add
pop
xchg
out
pop
fisubrs
mov
cld
out
and
and
cmp
mov
jl
aaa
clc
loop
std
mov
fisubrs
sub
test
and
and
cmc
lds
or
mov
dec
and
negl
jecxz
es
sarb
les
das
es
jno
and
out
out
sub
mov
out
and
adc
mov
loopne
pop
subb
inc
xlat
outsb
pop
fmull
lock
mov
scas
mov
jl
repz
enter
xchg
push
pop
mov
rcl
and
bound
pop
push
and
repnz
fadd
or
ljmp
arpl
jg
insl
pop
xchg
add
idivl
push
push
fwait
in
cwtl
subb
movl
mov
jb
pop
inc
sarl
fistpll
mov
push
icebp
jg
sbb
arpl
or
lret
add
mov
pop
push
jmp
loopne
arpl
arpl
sbb
inc
or
adc
rclb
push
cld
movsb
cwtl
aam
lds
in
lds
and
jge
loop
loopne
movsb
loopne
loop
into
hlt
loop
jle
aam
mov
loopne
mov
xor
scas
ja
sahf
aad
cli
cmp
loope
fs
fcompl
movsb
loopne
mov
inc
cli
shlb
sahf
repnz
loope
loop
cmp
or
lds
mull
pop
fwait
andl
jle
in
cmp
jbe
fstpl
rol
in
fs
pop
jge
rcpps
mov
sbb
jle
fimull
mov
loop
repz
cltd
movsb
loopne
and
lahf
out
cmp
mov
and
sbb
fisubl
fcompl
gs
loop
jle
mov
sbb
inc
idivl
add
inc
sub
sub
jne
xchg
lods
xchg
cmp
push
jmp
mov
sub
mul
sub
idivb
dec
jmp
fwait
nop
shlb
dec
mov
lock
xchg
test
sti
rolb
lahf
cmp
add
cmp
inc
negl
xor
lods
lds
inc
jg
call
lret
cmp
pushw
movntq
cmp
jne
lcall
jge
pop
aam
imulb
aam
xor
add
mov
adc
clc
stos
inc
and
push
dec
nop
pop
in
or
sbb
xchg
mov
test
aad
adc
cmp
out
jnp
jecxz
jnp
out
jnp
div
lds
jmp
sar
xor
cmp
mov
jno
arpl
xchg
adc
xor
das
shr
mov
insl
loop
in
ja
adc
sbb
inc
xchg
add
xor
das
insl
loop
in
ja
jno
mov
xor
in
cld
lds
subb
adc
out
xor
ja
lds
mov
cld
lds
in
in
lds
aam
xchg
mov
movsl
adc
jno
pop
adc
cld
sbb
sahf
aad
in
jecxz
sbb
ljmp
lcall
aas
xor
daa
lcall
lock
lds
fcompl
stc
xor
pop
or
addr16
cld
lds
in
nop
add
lock
outsb
sub
out
mov
in
gs
adc
and
je
scas
sbb
jb
adc
cld
push
cmp
cld
lds
mov
xor
xor
clc
lahf
cli
subl
lock
ljmp
adc
add
push
jns
sarl
repz
in
lods
popa
loope
lahf
lds
sbb
in
cld
lds
in
cld
lds
xchg
lock
call
sub
lahf
lds
outsb
xor
xor
ja
out
adc
cld
mov
jmp
negl
xor
xchg
mov
in
cld
or
shr
cld
lds
pop
sbb
jne
in
sub
gs
sub
into
push
adc
cmpsl
add
and
shll
jmp
adc
cmpsl
add
cld
lds
sahf
and
shll
sti
sarl
jnp
loope
and
mull
sahf
in
data16
fisubs
or
in
into
push
adc
cmpsl
add
movsb
inc
pcmpeqd
sbb
sbbl
sahf
in
data16
fisubs
or
in
into
push
adc
cmpsl
add
notl
popf
lds
in
data16
fisubs
or
in
into
push
adc
cmpsl
add
add
add
push
sbb
in
and
sbb
repz
mov
in
cld
rcl
jle
jnp
loope
and
mull
sahf
in
data16
fisubs
stos
sub
std
pop
xor
xchg
xor
jae
inc
daa
std
push
sbb
movsb
in
lds
ja
add
sbb
sbb
add
inc
xchg
lock
and
pop
loop
cmp
cmpb
lcall
sbb
add
inc
xchg
adc
and
dec
inc
test
gs
sub
dec
cs
in
pop
movsb
jo
rol
xor
in
popf
lds
in
cld
shlb
adc
jno
fcoms
in
cld
push
les
jne
lock
jno
out
adc
cld
insb
mov
push
adc
cld
push
inc
jno
pop
adc
cld
lea
in
cld
lds
add
push
sub
xor
es
in
bound
lea
in
cld
movsb
xchg
add
fdivrp
fcoms
es
in
pop
inc
adc
ds
adc
out
lret
jb
inc
or
xor
lret
xchg
mov
add
in
int
adcl
adc
mov
mov
data16
inc
fdivrp
call
mov
cmpb
lds
in
cld
lds
in
cld
lds
in
cld
lds
adc
in
aad
out
xor
in
cld
lds
jmp
lds
in
cld
lds
in
cld
lds
in
cld
lds
in
mov
fstpl
and
pop
mov
mov
or
jae
push
cmpl
dec
sbb
in
xchg
out
mov
scas
fxch
xor
jmp
in
mov
push
jle
add
pop
hlt
add
lods
in
xchg
cmp
pop
cmp
pop
xchg
push
rcrb
pop
scas
dec
std
mov
popa
dec
inc
mov
dec
cmp
cmpsl
popa
cmp
push
sbb
popf
jne
cmp
mov
pop
lcall
rcll
push
daa
lcall
add
enter
sbb
mull
mov
or
movsb
sub
mov
loop
arpl
xchg
and
pusha
push
loopne
jo
sbb
daa
lahf
cmc
fs
out
lock
xchg
loopne
pop
mov
inc
cmpl
shrl
hlt
lcall
cs
std
outsb
push
mov
mov
mov
sub
dec
sub
mov
sti
and
push
mov
pop
fs
pop
xchg
ret
mov
jae
js
ss
jne
mov
dec
aad
mov
clc
fcoml
aas
dec
cmp
sbb
pop
hlt
in
pop
or
push
ret
not
sbb
lods
inc
movsb
push
outsb
das
mov
dec
movsb
sub
dec
hlt
inc
jnp
sbb
mov
imulb
loope
fcmovnbe
push
loop
jmp
inc
out
and
push
adc
out
sub
aad
mov
std
stos
mov
in
mov
inc
mov
mov
sub
push
in
cmc
icebp
out
out
fldl
pop
lret
mov
std
lods
jo
pop
xchg
iret
cli
adc
sub
aad
in
cld
or
and
cmc
fucomip
in
shlb
icebp
fsubr
lret
dec
push
jg
jmp
add
jmp
popf
test
cmp
cmp
pushf
clc
push
lds
pop
lds
sahf
dec
or
sti
fdivrl
dec
in
and
mov
imul
jb
fwait
cmpl
sti
pushf
dec
or
lods
rorl
ljmp
mov
mov
in
mov
das
flds
fmuls
jle
clc
mov
pop
jl
and
add
cmp
cmp
cmpsb
adc
add
mov
fnstcw
pop
fcomps
stos
push
inc
jp
add
imul
mov
xor
xor
outsl
leave
mov
push
lock
or
and
add
add
add
pop
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
pop
add
add
pop
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sub
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
ja
and
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
and
in
cmpsl
addr16
or
jg
jnp
bound
ss
outsb
ds
cmpsl
fcmovb
mov
add
rorl
jno
add
pop
fwait
pushf
lods
sub
jns
out
xchg
call
pop
xor
or
or
imul
idiv
bound
fwait
mov
cmp
pop
add
mov
les
call
push
out
daa
pop
cmp
inc
dec
inc
pop
pop
test
and
dec
pop
sbb
fisttpl
addr16
bound
mov
push
jg
add
push
inc
push
pop
lods
fwait
add
push
into
cmp
adc
loopne
lcall
pop
xor
bound
int
mov
div
ss
inc
cli
xchg
into
mov
arpl
test
test
clc
jb
push
inc
out
scas
dec
outsl
clc
popa
test
xor
negb
sbb
rorb
ret
sbb
enter
lods
les
inc
xchg
shlb
mov
insb
xorb
jne
fmulp
sbb
decb
aad
fdivl
jg
cmc
or
pop
das
push
fsubs
or
cmpb
push
sub
sbb
ljmp
cltd
or
jmp
sub
cwtl
jb
xchg
adc
adc
push
cmp
stos
repnz
add
jne
dec
cmpsb
dec
mov
sub
insb
xor
aad
cli
out
and
push
push
jp
bound
sbb
pushf
inc
pop
or
int
adc
es
sbb
lods
addr16
add
lcall
ficoml
ret
insl
xchg
xchg
idivl
in
fwait
hlt
push
or
push
xlat
or
cmp
je
pop
pop
or
mov
pop
adc
movsl
cmp
inc
sbb
xchg
jmp
lds
jecxz
fstpt
lahf
adc
imul
or
adc
or
call
imul
rol
or
stc
jne
mov
xchg
mov
enter
rcrb
or
xor
jle
or
and
cmpl
mov
stc
and
push
inc
call
in
cmpl
sti
add
cmp
push
cmpsb
cmpsb
cwtl
xchg
dec
cmp
adc
xor
inc
sub
push
movsl
cmp
and
sub
into
repz
inc
popl
jne
cmp
fildll
xor
pop
cmc
mov
push
adc
iret
jns
mov
ja
popf
adc
inc
xor
ss
sti
adc
imul
or
dec
jns
or
jne
sti
fistpll
cmp
lret
stc
fisubs
mov
addr16
orl
mov
ret
push
stos
push
in
xchg
xorl
xchg
sbb
cltd
dec
and
mov
addr16
pop
mov
sbb
rcr
into
sub
mov
cmpsb
jge
xchg
repz
outsl
inc
cwtl
and
pop
popf
xchg
call
dec
push
push
and
or
sub
gs
fwait
push
jno
xchg
and
shlb
inc
jle
das
mov
cmp
cmpsb
xlat
push
mov
test
sub
movsb
movsb
pop
dec
cmp
pop
jo
xlat
lcall
mov
add
mov
fdivs
cmpl
lock
jmp
pop
adc
mov
insl
xor
sub
inc
icebp
mov
adc
sbb
push
xlat
jno
push
cmpsb
or
ss
sub
andl
xchg
cmp
mov
xchg
push
sarb
rep
ret
xor
xchg
xor
test
pop
inc
add
fcom
faddl
or
inc
ljmp
pop
sahf
sbb
xor
imulb
adc
adc
mov
neg
adc
sbb
pop
sub
mov
aas
in
insb
ret
cmp
orl
cmp
out
in
mov
or
dec
dec
xchg
pop
dec
or
jno
stc
mov
movsb
test
inc
neg
jge
nop
mov
adc
or
jo
mov
mov
xchg
jnp
ss
cmpl
in
nop
clc
sub
jg
daa
stc
jne
icebp
lds
mov
cmpb
and
jmp
aas
jecxz
sub
in
es
fisubrl
lret
je
int
je
stc
insl
cmp
xor
adc
cs
stc
pusha
nop
repnz
leave
ja
jno
push
or
stos
inc
test
mov
aam
popa
je
scas
jmp
pop
outsb
cmp
ds
or
rcrb
add
mov
rorb
jmp
aaa
shrl
jg
cld
lds
icebp
push
inc
xchg
jp
cld
data16
cli
jmp
push
xchg
pop
cs
pop
lahf
lods
add
pop
push
pop
xchg
dec
in
xor
leave
sub
hlt
daa
bound
stos
xchg
out
pop
imul
movsl
pop
add
bnd
loopne
popa
adcb
mov
cmc
jne
or
mov
xlat
dec
out
inc
aad
leave
add
test
jge
movb
rcrl
push
dec
sti
fisttpll
mov
shlb
and
dec
push
in
call
orl
adc
aas
orl
cmp
sbb
test
add
push
jmp
mov
cmp
push
add
test
inc
aas
mov
or
xor
jnp
adc
hlt
ss
cmc
mov
mov
and
sbb
nop
lea
loopne
ss
pop
notl
addb
adc
cli
es
js
inc
pop
pop
push
push
xlat
sahf
mov
inc
mov
xor
and
xchg
pop
dec
xlat
push
faddl
or
out
dec
xchg
or
or
test
mov
call
gs
scas
and
clc
imul
ja
les
mov
sti
lds
inc
mov
insl
mov
adc
cmpl
pop
inc
xchg
aaa
insb
cmp
pop
jno
sbb
cmpsl
mov
cwtl
outsl
sub
lods
cwtl
inc
mov
and
or
sbb
aas
ret
out
sbb
cld
addr16
aas
iret
sbb
test
xchg
sbb
jns
lock
pop
idivb
mov
popa
xor
fwait
ja
jg
sbb
stos
pop
ljmp
add
dec
call
mov
call
xchg
movsb
push
and
fmul
jge
rcr
lods
nop
sub
mov
xchg
jl
test
push
popf
lahf
stos
imul
movsb
enter
add
xlat
inc
idiv
mov
dec
movsb
xor
mov
in
lret
and
lcall
sarl
pop
mov
out
mov
sbb
stc
inc
mov
mov
xchg
adc
jge
mov
lods
pop
jne
and
lahf
xor
inc
push
dec
in
dec
mov
sbbl
pop
pushf
xlat
or
lret
flds
jmp
xor
scas
and
mov
loopne
sahf
pop
jbe
add
jne
adc
push
mov
mov
js
mov
clc
ds
rol
adc
or
inc
jnp
and
rcrl
std
dec
or
cld
sub
xor
push
mov
xlat
push
inc
mov
xchg
dec
clc
ljmp
mov
orb
jns
mov
daa
stos
cs
jne
and
lock
sbb
jge
mov
andl
sti
loop
fcmovu
ret
push
inc
mov
rcrl
das
jae
ds
repz
shll
in
adc
ss
outsl
fistps
in
xchg
loop
lret
nop
xlat
repnz
loop
loopne
lret
test
loop
call
jecxz
sub
xchg
notl
testl
sbb
sub
cwtl
mov
or
lods
sub
mov
ss
inc
mov
sub
sahf
cld
sti
btr
icebp
xchg
mov
sub
sar
mov
test
popa
mov
stc
aaa
testl
sbb
ljmp
pop
rcrb
or
addb
ficomps
stos
aam
mov
adcl
sbbb
lods
imull
push
addps
mov
pop
rolb
repz
push
xchg
enter
jbe
xor
daa
sahf
dec
mov
push
insb
ror
faddp
icebp
loop
iret
roll
enter
imul
sub
jmp
mov
ja
hlt
loopne
add
cmp
or
xchg
les
fiadds
sbb
jbe
adcl
jmp
cli
ret
dec
pop
adc
sub
mov
into
je
stos
xor
outsl
pop
je
jo
enter
loop
cli
lret
ja
or
push
add
lahf
stos
add
dec
push
popf
pop
push
cmp
insl
inc
nop
imul
leave
or
add
cmpsb
into
mov
add
cmp
sbb
sarb
sbb
int
pop
or
and
cmp
or
pop
mov
fcmovbe
cld
push
mov
imul
dec
call
pop
aas
fxch
fs
jb
icebp
push
xchg
xor
jo
mov
push
repnz
cmp
adc
popf
lea
cmp
out
push
sbb
inc
loop
dec
and
mov
daa
lret
jno
adc
cmp
pop
aad
cmp
out
adc
movsl
movsl
and
mov
mov
adc
iret
push
mov
sub
lods
or
sti
fstp
or
outsb
and
push
jns
xchg
xchg
mov
ret
add
dec
mov
test
imull
jle
xchg
sahf
in
adc
and
mov
adc
jne
inc
mov
gs
cmpsb
mov
loope
clc
jo
fistps
insb
or
or
loop
cld
es
pop
mov
test
cmpsb
add
testb
in
mov
lds
stos
mov
insl
push
stos
pushf
popf
dec
pop
dec
mov
and
sbb
add
pop
iret
test
addr16
mov
imul
xor
xchg
push
cmp
cwtl
push
or
sbb
jne
jb
mov
sub
and
push
mov
mov
xlat
adc
lret
sti
xor
ffreep
inc
inc
pop
or
hlt
pop
mov
xlat
cs
mov
mov
add
push
mov
in
push
iret
int
jecxz
shlb
outsl
insl
sub
imul
inc
aad
xchg
mov
insb
nop
cmp
fadds
out
and
mov
or
mov
pop
push
cmp
mov
inc
call
mov
and
xchg
insb
add
shrl
lret
std
in
fisttpll
lret
inc
push
inc
das
xchg
mov
jp
mov
or
jg
xlat
xor
out
shr
inc
or
arpl
sub
or
mov
and
fiaddl
push
lods
out
mov
clc
xchg
xlat
fcomps
add
out
arpl
and
adc
cmp
lods
scas
and
addr16
test
fisubrl
adc
jecxz
inc
mov
dec
outsb
dec
fisttpl
lock
jecxz
out
adc
push
dec
jnp
sub
por
mov
lcall
xchg
jecxz
mov
aam
mov
cmp
mov
lods
add
les
repnz
mov
xchg
movsl
dec
or
adc
fbld
lcall
dec
out
push
lds
test
movsl
cmc
loop
mov
ret
in
add
ficoms
sahf
cmp
in
push
mov
push
into
call
sbb
inc
mov
ret
cmp
inc
leave
outsl
cmp
cmpsb
lock
leave
push
jb
adc
xchg
and
fcoms
sub
sbb
aaa
aas
fstpl
xor
mov
mov
dec
pop
int
pop
aad
jo
mov
nop
jbe
sub
jg
in
sbb
push
scas
ret
cmp
fs
arpl
mov
sub
xchg
gs
push
das
incl
xor
lea
add
push
daa
popf
nop
scas
cltd
arpl
in
or
hlt
aam
mov
mull
and
pop
pop
movl
nop
mov
push
mov
lds
dec
test
pop
in
out
pop
sbb
nop
cmp
fimuls
mov
push
xchg
xchg
xor
lods
jae
sub
inc
push
popa
int3
dec
aam
hlt
pop
add
sbb
jle
xlat
pop
push
call
jle
xor
int3
xchg
add
or
and
jns
adc
les
scas
into
popf
jns
aaa
aam
dec
or
mov
jno
push
mov
jmp
sub
xchg
cmp
inc
mov
jae
add
outsb
adc
aam
push
mov
aaa
movsb
sub
std
iret
lods
and
mov
test
sar
pusha
push
fmulp
inc
daa
fldenv
push
mov
mov
cmp
adc
push
cmpsl
cmc
or
loope
and
pop
sub
inc
stos
repz
in
sub
jns
or
ds
lods
enter
ja
fisubs
and
push
fsubs
repnz
cwtl
subb
sbb
shll
jne
xchg
mov
pop
movsl
cmpsl
pusha
cmp
aad
jno
push
add
clc
pop
add
pop
or
or
jg
imul
or
sub
jbe
mov
add
xchg
mov
js
pop
outsl
adc
or
stos
sbb
pop
sub
notl
in
jecxz
pusha
outsb
call
pop
cmp
xacquire
in
test
mov
adc
daa
xchg
mov
nop
dec
xchg
int3
adc
mov
imul
pusha
lock
xchg
xor
in
sub
and
es
sahf
pop
cmp
orb
clc
xchg
dec
outsl
lods
xor
sbb
cmc
movsl
mov
add
pop
adc
and
orb
push
mov
pop
and
sbb
cld
fisubs
sub
shrb
stos
push
loop
mov
sub
inc
fists
mov
mov
jle
dec
push
xor
fstl
push
mov
popa
jnp
cmp
fwait
shr
cmpsl
or
xor
mov
ret
mov
in
jne
in
pop
mov
jns
in
lock
insl
push
inc
hlt
aam
aaa
inc
movsb
std
push
out
sbb
loop
mov
fstpt
movsb
js
mov
cmpsb
adc
in
shrl
fisubrl
sbb
cmpsb
xchg
aaa
mov
repnz
in
int
cmp
data16
lods
pop
aaa
ret
dec
fsubrs
cmp
xchg
dec
xchg
js
divl
or
ficoms
scas
mov
sub
sar
popa
lea
mov
adc
aad
cltd
fsubr
sub
in
out
mov
add
call
pop
outsb
rolb
rep
arpl
movl
fstpt
das
enter
xor
daa
fisubs
jno
out
jg
dec
out
mov
iret
imul
jb
lcall
push
insb
cli
fmuls
pop
notb
stos
dec
lods
inc
pop
into
imul
sub
ljmp
pop
mov
out
xchg
or
add
mov
mov
xchg
aam
xor
adc
xchg
pop
mov
jl
mov
icebp
cli
push
sub
outsw
ja
in
sbb
jg
xchg
pop
icebp
mov
push
dec
mov
cmp
mov
insl
aaa
je
cmp
aad
jp
inc
xor
and
jp
mov
fildll
mov
mov
mov
push
cmc
pop
mov
fmull
insl
push
jno
sub
in
push
jo
inc
lods
xchg
mov
fmulp
sbb
lea
mov
fldl
cli
stos
in
xchg
sub
push
sbb
out
insb
sub
ljmp
mov
adc
ret
outsl
aad
pusha
lods
add
gs
rcl
jge
jno
mov
sub
in
mov
xchg
adc
out
data16
cld
movsl
cmp
jne
cmpsb
push
jle
pop
sub
add
addr16
mov
insb
push
mov
dec
push
ret
or
pop
aad
nop
hlt
xchg
pushf
fucomp
pop
cmp
mov
movsb
imul
std
pop
mov
loope
in
int3
or
shr
dec
pop
mov
cmp
inc
cmp
inc
mov
test
lahf
popf
cmp
xor
pop
adc
lods
pop
test
rcrl
push
ss
jg
mov
mov
jb
mov
pop
das
ret
add
and
notl
dec
inc
jp
xchg
cli
cmp
or
addr16
jp
pushl
test
mov
and
jb
pop
inc
sbbb
lea
dec
insl
mov
pop
loopne
les
popf
jl
cli
lret
out
inc
jg
dec
hlt
push
push
sbb
mov
ja
mov
lret
movsb
xor
and
repnz
out
daa
ja
out
jo
lods
js
insl
dec
cmp
in
xchg
fs
sbbw
rclb
movsl
in
mov
jecxz
and
stos
hlt
pop
mov
jp
xchg
dec
xchg
jge
jae
addr16
mov
call
push
sub
popa
mov
in
xchg
mov
mov
mov
inc
sahf
and
inc
dec
ficompl
pop
sbb
push
mov
sub
rcll
test
add
mov
leave
int3
dec
inc
jno
call
lcall
out
clc
pop
out
push
cmc
outsb
jecxz
andb
jecxz
cmp
cmp
insl
mov
or
pop
dec
and
insb
or
test
ret
or
pop
adc
pushf
cwtl
lahf
dec
mov
loop
pop
das
das
sbb
loop
outsb
xchg
movzbl
inc
mov
mov
in
mov
cmpsl
jp
lock
pushf
inc
cmpl
xorb
sbbb
insl
push
adc
popf
mov
stc
mov
dec
mov
xor
in
and
or
and
xor
cmp
xor
pop
mov
not
icebp
clc
pop
jge
out
pop
test
cld
or
mov
test
das
and
xor
jns
xchg
aas
xor
push
clc
push
adc
icebp
or
cmp
lds
xor
lock
add
lea
mov
push
pushf
cmp
iret
inc
lahf
push
leave
sarb
pop
insl
lea
cmove
std
repz
dec
fwait
lret
mov
xchg
scas
pop
call
pushf
stos
and
es
mov
jecxz
jae
imul
stos
pop
inc
add
loope
dec
adc
pop
decl
lea
xchg
mov
popf
push
cmpsb
xor
out
fbstp
adc
out
js
mov
cmp
dec
mov
adc
sbb
xor
inc
fcmovne
in
cmp
jne
lcall
mov
inc
xchg
and
adc
leave
mov
add
aam
lock
mov
nop
cmp
mov
inc
test
movsb
fidivrl
iret
and
in
loopne
push
sub
jmp
cmpsl
and
cmp
push
push
mov
mov
and
cmp
push
mov
shl
imul
pop
cmp
xor
jbe
lret
stc
or
sbb
fidivl
sbb
push
xorb
fmuls
int3
mov
sbb
das
cltd
mov
push
sbb
popf
pop
ror
stc
test
or
sub
mov
adc
push
or
push
sub
xchg
fildl
xchg
jb
stos
sub
repz
mov
cmpsb
or
hlt
in
je
xor
addr16
std
dec
fwait
mov
iret
clc
push
xchg
ss
pop
aam
jg
pop
xlat
rolb
ret
jg
xor
and
lock
lahf
rcll
mov
addr16
cli
imul
fisttpll
and
inc
sub
loopne
in
mov
fdivl
fucom
das
nop
jb
sbb
xlat
adc
ss
fisubs
cmp
loope
aad
ret
addr16
incl
shll
xor
cs
or
push
sub
mov
loopne
sub
adcb
addw
not
adc
test
fs
lret
jb
outsl
std
mov
xorb
adc
lock
int3
cmp
xor
in
outsb
mov
push
ss
xor
xchg
mov
adc
or
cmp
fldl
inc
daa
pop
in
imul
sub
movsb
divl
inc
lret
dec
gs
arpl
je
scas
dec
adc
mov
test
outsb
mov
bound
fcoml
mov
jecxz
xchg
or
nop
jg
aas
sbb
movsl
xchg
repnz
sbb
sub
lds
sbb
sarb
es
in
nop
or
cmp
mov
mov
test
rcr
mov
pop
xor
jb
shll
dec
xchg
das
inc
aaa
push
mov
jo
add
mov
pop
outsl
mov
daa
test
sub
mov
sbb
sub
pop
adc
scas
imul
mov
mov
xor
jecxz
fdivrs
cmpsl
lods
aaa
and
fcoms
jg
xor
cmp
ss
add
daa
adc
dec
or
in
outsl
fisttpl
and
das
int3
add
dec
sbb
sub
lods
fildll
mov
xchg
mov
cmc
mov
adc
mov
lods
cmp
mov
jmp
daa
sub
scas
js
mov
test
dec
lods
jge,pt
mov
pop
dec
scas
ljmp
ljmp
and
mov
inc
sub
inc
xchg
push
cli
inc
xchg
pop
hlt
lret
xor
in
or
mov
rcrb
aad
inc
loopne
loop
pop
jb
push
mov
ret
dec
sbb
dec
cwtl
ljmp
pusha
xor
insl
out
adc
pop
loop
mov
mov
mov
rclw
out
sub
into
lds
adc
pop
sahf
fcomps
cmp
sub
ss
push
xor
push
add
jne
or
repz
pushf
popa
jne
mov
push
enter
out
iret
loop
xchg
jno
adc
pop
mov
adc
pop
or
lret
ds
dec
add
out
movsb
test
fimuls
add
icebp
sub
jne
jo
or
xchg
rolb
test
mov
pusha
pop
jl
rolb
outsl
pop
icebp
jno
shlb
addr16
movsb
push
addr16
sahf
jbe
xor
daa
loope
fiaddl
ss
aaa
jne
repnz
xlat
cmpsl
test
dec
pop
mov
add
mov
fdivrs
and
cli
mov
mov
nop
sub
mov
xlat
pop
xor
repnz
jb
and
cld
jp
or
mov
outsb
xor
jge
cmpsl
adc
loop
sahf
fstl
movsb
cs
movl
test
repz
inc
adc
mov
xchg
bnd
dec
add
fsubrs
sbb
addr16
stos
pop
pusha
jge
rcrl
dec
in
leave
push
xchg
add
mov
xor
std
jg
push
mov
arpl
dec
dec
and
roll
inc
outsb
mov
pop
aaa
mov
ss
decl
xchg
hlt
sbb
sbb
sub
subb
divl
ds
adc
js
push
push
cld
loop
cmpb
lods
push
icebp
std
cmp
cmp
out
xchg
cmp
push
call
ror
mov
mov
lods
xor
inc
jns
xor
push
push
dec
scas
xlat
add
push
jle
mov
dec
shll
sti
push
out
repnz
xor
testl
lds
pop
xlat
repnz
icebp
cmc
nop
sub
cmp
xor
scas
pop
pop
pusha
cmp
mov
xlat
add
cli
loopne
inc
xlat
xor
mov
cli
cmp
adc
stos
and
repz
jl
lret
mov
les
sti
sub
jno
icebp
stc
popa
int
cli
push
shl
push
dec
dec
hlt
xor
mov
xor
add
xchg
fiaddl
xchg
mov
xor
movsb
sub
cmp
filds
push
mov
xchg
mov
ja
jmp
repnz
mov
mulps
sbb
add
sbbl
fstps
popa
loopne
ss
pushf
rol
add
push
stos
icebp
dec
inc
mov
gs
int3
out
data16
pop
jns
pop
and
cld
aas
cltd
fwait
cmp
test
dec
fwait
push
xchg
xchg
out
arpl
push
icebp
adc
adc
orb
dec
sbbl
mov
shrb
sub
aad
mov
aas
mov
inc
xor
pop
mov
push
and
cmp
pop
xor
cltd
fstl
sahf
mov
dec
inc
add
mov
xchg
ret
fistpll
cld
je
js
push
xchg
push
mov
imul
xchg
popa
push
pop
fsubrs
gs
xchg
adc
out
jnp
jnp
popa
cld
mov
stos
bound
mov
imul
dec
ljmp
add
dec
insb
je
not
pushf
mov
push
sahf
xchg
daa
push
add
lret
jmp
xchg
fcomps
pop
xchg
mov
shll
clc
cmpsl
sahf
js
cli
scas
pop
cmpb
out
hlt
int3
pop
repz
adc
sub
mov
push
icebp
outsl
out
mov
cli
sarb
andl
push
insb
lahf
xchg
ret
adc
or
mov
and
mov
push
and
adc
sub
sub
les
sbb
aas
and
jnp
addr16
test
insb
jp
dec
jmp
dec
ljmp
bound
jge
cs
cmp
dec
fnstsw
mov
sub
sub
js
fildll
push
inc
mov
insb
xchg
rorb
pusha
in
adc
push
or
or
pop
push
cmpsl
pushf
add
xor
add
pusha
in
sub
dec
dec
andb
dec
xor
das
orb
xchg
xor
jo
jmp
sub
mov
sbb
or
xchg
lods
daa
add
and
dec
mov
aam
push
cmp
int
and
add
lods
ret
xchg
lds
pop
mov
push
pop
sub
divb
mov
les
in
idivb
cmp
sbb
xlat
xlat
mov
or
aas
cld
pusha
std
lea
pop
test
adc
pusha
cmpsl
mov
cmp
cs
and
mov
les
xchg
push
sbb
dec
lcall
adc
push
fwait
enter
xchg
sbb
and
aaa
ficomps
xor
mov
scas
rol
adc
dec
push
push
cli
mov
idivl
pop
xchg
sub
xchg
jb
pop
jnp
add
lods
gs
sahf
cwtl
ret
sub
rclb
inc
sbb
testb
rol
insl
mov
or
xor
push
pop
movl
std
xchg
stos
aas
jmp
sbb
xchg
mov
xchg
mov
scas
mov
pusha
mov
and
into
xchg
and
popf
aam
scas
pushf
mov
es
lcall
inc
jb
movsb
out
das
scas
push
or
rolb
repz
adc
call
sbb
test
add
dec
insl
dec
fcmovbe
xor
in
loopne
xor
pop
or
mov
cmpl
cmpl
roll
xor
jns
fidivl
test
mov
repz
xchg
das
movb
cli
out
ljmp
push
stos
lret
sub
dec
rolb
xchg
je
or
ja
mov
xchg
rol
jno
cli
test
leave
push
cltd
add
pop
ret
ds
lahf
pop
inc
mov
adc
xlat
ss
js
or
insl
dec
push
call
or
lea
mov
les
dec
sti
xor
inc
insb
cld
pop
mov
mov
fisubl
dec
lcall
pop
out
and
aad
dec
pusha
xchg
push
dec
mov
jge
cmc
cmp
and
pusha
mov
adc
add
sarb
sahf
dec
cld
std
sbb
and
insb
xchg
cmp
sti
and
cld
push
ss
fs
jmp
jle
movl
into
push
dec
cmp
arpl
mov
in
inc
inc
in
mov
hlt
push
xchg
and
jl
pop
ljmp
jge
mov
leave
push
pop
jp
lcall
or
test
stos
fsubs
dec
sbb
jne
arpl
int3
inc
out
xchg
pop
andl
shll
xchg
sbb
adc
pushf
jae
leave
adc
subl
add
shl
mov
loopne
xor
shr
sub
ljmp
sub
cs
ljmp
jbe
pop
lds
outsb
dec
jl
sub
inc
xor
sub
cmpsb
cmp
leave
sbb
lods
mov
xlat
mov
ret
and
inc
mov
add
pop
pop
push
mov
mov
add
sti
in
mov
dec
xchg
pop
or
cmpsl
add
mov
add
push
ret
or
je
ret
and
pop
sti
sbb
dec
scas
pop
imul
sub
xchg
dec
add
pushw
mov
mov
sub
sub
cmpsl
inc
mov
sar
dec
and
imul
pop
js
adc
xor
dec
lods
inc
les
stos
in
pop
gs
pusha
fstp
xchg
adc
mov
cmp
jno
add
cs
jns
and
fildll
cmpsb
add
ljmp
dec
data16
mov
popf
inc
inc
mov
hlt
cli
lea
scas
add
mov
aaa
insb
test
cmpsl
scas
and
sub
stos
mov
ljmp
repz
pop
enter
out
orl
jp
arpl
jle
out
inc
pushf
mov
dec
jge
or
xor
fnstsw
mov
movsl
ret
pop
jp
push
lcall
xorb
movsb
push
daa
or
fwait
push
fldcw
dec
sbb
push
pcmpeqw
fs
dec
fnstcw
fwait
loope
mov
inc
sbb
test
lcall
outsl
ja
out
mov
jo
popf
mov
imul
in
xlat
dec
icebp
es
sahf
inc
movsb
sub
cld
cs
pop
inc
xchg
xchg
loopne
mov
lret
imul
cli
push
fmuls
mov
lcall
adc
jle
or
sub
mov
es
cmc
leave
dec
packsswb
add
jno
pop
addr16
notl
dec
add
xor
and
lret
in
hlt
loop
sbb
dec
mov
clc
pop
out
mov
push
mov
push
xchg
movups
test
inc
xor
ljmp
daa
fstpt
jmp
icebp
loop
sbb
cmp
dec
out
jb
outsl
cmp
lds
ret
inc
cltd
test
inc
les
ja
cltd
fdivr
adc
movsb
inc
dec
in
js
xchg
mov
and
js
aad
mov
lea
xchg
pop
xchg
arpl
stos
out
hlt
mov
sbb
sbb
int3
cmp
dec
loope
add
add
add
lods
pop
cwtl
mov
mov
pop
mov
popa
aaa
aam
in
sbbb
adc
push
or
cmpsb
jmp
aad
and
movsb
dec
sti
addr16
mov
mov
cwtl
cmpb
cmp
ret
rorb
cmp
enter
add
add
test
scas
mov
repnz
lret
pop
rclb
scas
cmp
xchg
and
inc
xor
cmc
gs
popf
outsb
ja
inc
push
in
jg
outsl
pushf
fcmovbe
xchg
lock
sub
call
and
enter
insl
imul
lods
test
mov
insl
push
pusha
push
xchg
lret
dec
lret
loope
add
in
data16
daa
rolb
leave
repz
lret
outsl
mov
call
popa
jne
mov
leave
push
xchg
lds
xor
into
movsl
lds
fisttps
and
pop
cmp
fdivl
mov
dec
jne
push
or
cmc
orl
out
push
inc
adc
imul
int3
loop
mov
clc
xchg
lret
and
fildl
dec
jb
xor
mov
movsl
leave
rolb
cmp
arpl
lods
sub
gs
pop
adc
notl
or
clc
mov
enter
popa
dec
test
cld
mov
pop
push
into
lret
ja
in
jle
call
sahf
pop
leave
repnz
lods
cli
mov
iret
daa
inc
pop
popf
jmp
dec
stos
and
pushf
imul
jle
lret
pusha
int3
xor
xchg
mulb
arpl
cs
cmpsl
adc
mov
mov
adc
mov
outsb
pop
mov
rcrb
pop
test
in
sbbb
mov
scas
pop
sbb
xchg
shll
dec
cwtl
cmp
fsubrs
mov
dec
ja
pop
dec
xor
popa
clc
fwait
mov
push
out
insb
pop
faddl
aas
push
ja
adc
fstps
arpl
iret
xor
mov
popf
int3
pushf
jo
add
jnp
add
mov
push
mov
mov
inc
fisubrl
js
sbb
btsl
int
stc
adc
insb
dec
cld
push
popf
jp
adc
dec
mov
xor
mov
sub
outsb
popf
adc
jbe
inc
cld
rcll
or
dec
sbb
mov
cmc
test
adc
xchg
add
sahf
fisttpl
xchg
gs
xchg
cmp
call
sbb
mov
mov
push
jnp
enter
cmpsl
dec
ds
dec
xchg
and
add
or
inc
inc
inc
adc
mov
ja
cltd
pop
or
pop
fsincos
mov
icebp
subb
push
dec
decb
adc
out
adc
push
inc
fsubp
setae
sarl
xchg
jl
daa
shl
lea
shl
aaa
xor
fisttps
je
or
inc
xor
add
mov
subl
mov
fidivrl
lret
fstpt
loop
push
stos
mov
pop
cltd
nop
sbb
sbb
iret
jmp
test
jle
iret
jnp
inc
mov
xchg
jmp
dec
cmpsl
mov
jnp
stc
lret
xchg
dec
sbb
lock
pop
sbb
mov
roll
add
mov
je
rcrb
xchg
mov
outsl
push
push
xor
inc
adc
sub
pop
je
out
rcll
js
pop
inc
int3
and
and
inc
dec
movsl
pop
pop
push
xchg
testl
xchg
mov
in
dec
out
int
popf
fimull
pop
mov
sbb
adc
stc
sub
push
outsl
sbb
or
xchg
push
inc
jae
orl
sub
push
test
ss
movsb
pop
repz
inc
push
imul
push
adc
loop
jmp
aaa
mov
mov
in
enter
adc
fwait
inc
js
xor
mov
ret
dec
inc
fxch
pop
dec
pop
roll
pop
jmp
push
cmp
sahf
daa
jnp
js
daa
add
cmpsl
scas
lods
dec
and
add
inc
jae
cmp
inc
or
or
sub
mov
push
jg
push
dec
jg
mov
inc
adc
inc
ds
cmp
sub
or
and
jb
cli
inc
cmp
std
leave
inc
int3
jbe
bound
fnstenv
call
pop
jl
or
xchg
pusha
mov
sub
sbb
inc
pop
xor
sbb
push
cmp
lods
cli
adc
sti
mov
mov
arpl
sar
fldcw
push
add
add
xor
mov
dec
or
in
cmp
or
js
int3
pushf
movsb
adc
inc
mov
adcb
test
adc
ljmp
adc
je,pt
in
dec
mov
dec
xchg
sbb
aam
cmpsb
cmp
loop
loop
push
push
dec
mov
cltd
push
and
test
mull
popf
push
les
stos
adc
mov
mov
out
ret
sbb
add
mov
xchg
sub
inc
andb
inc
pop
or
pop
popa
mov
push
int3
cmp
ljmp
shll
sbb
push
sub
loope
aam
lods
and
mull
cmc
mov
mov
mov
dec
or
outsl
sub
ds
loopne
jo
fstp
loop
das
xor
mov
cmp
cs
sbb
and
cwtl
jne
ss
cmpsl
inc
inc
js
adc
mov
adc
aad
dec
or
push
add
xchg
sub
mov
dec
adc
sbb
push
fsubrl
in
aam
mov
test
jbe
xchg
dec
out
inc
fistpll
fisubs
stos
add
xor
or
fisttps
or
sub
xor
mulb
jecxz
jb
in
mov
bound
out
inc
pop
adc
ja
or
push
adcl
rcll
inc
stos
adc
mov
or
add
inc
mov
xchg
xchg
mov
lret
mov
xchg
push
int
lea
mov
jb
cltd
out
lods
xchg
sub
sub
or
cs
in
sub
inc
movsb
pop
inc
movsl
mov
jmp
pop
sbb
dec
jp
and
sub
jl
or
fs
pusha
daa
or
push
sahf
jo
inc
dec
pop
pushl
mov
clc
jno
jb
das
cmp
aam
dec
cmp
ja
jp
xchg
fstl
pusha
lretw
out
jno
or
and
xlat
fimull
mov
pop
jnp
cmp
out
push
in
ret
inc
sti
in
cmp
dec
aam
jbe
in
and
movsl
cmp
nop
mov
dec
xchg
sarl
pop
sub
dec
cmp
sub
je
mov
push
pop
loopne
repnz
rolb
mov
int
pop
push
daa
aad
sub
sbb
popa
sub
int3
pop
sub
push
cmpsb
aas
movb
jbe
sub
out
subb
into
adc
aam
fildll
xchg
test
inc
xchg
or
sub
mov
xor
popa
jg
rcrb
lds
and
pushf
jmp
add
sub
lret
daa
test
and
push
out
outsb
cmp
aad
inc
dec
ljmp
lods
fldcw
mov
imul
cltd
pushf
xor
push
or
jnp
jle
xchg
mov
shll
or
cs
xor
adc
lret
mov
out
fwait
cltd
pop
test
add
push
aam
aas
inc
push
mov
out
das
addl
cld
mov
js
loopne
xchg
test
andb
or
out
lods
fs
jmp
lcall
fidivl
call
ja
jl
inc
push
cmp
jl
lods
push
rclb
rol
scas
test
outsl
pop
fimuls
pop
repz
or
fs
push
mov
lret
jnp
inc
stos
or
in
rsqrtps
bnd
and
aad
cltd
test
shl
js
adc
sub
and
fcomps
insb
loop
les
push
xchg
orl
mov
or
push
inc
lahf
sbb
scas
lret
cmpl
fildl
push
js
cmp
pop
inc
ss
cmc
dec
imul
and
lods
and
mov
sub
jns
shrl
jmp
mov
mov
mov
mov
cmpsb
sarb
jecxz
das
enter
cmp
push
into
punpckhbw
and
jle
movsb
xchg
and
nop
fxch
popf
mov
jmp
push
jle
lods
xor
lds
or
sbb
push
popl
paddb
adc
fstp
push
and
sub
hlt
addr16
inc
adc
inc
es
push
outsb
lret
xor
mov
insb
shlb
push
movsl
lret
push
push
dec
rcrb
push
jp
fdivrs
or
pop
adc
cmp
jp
repnz
jl
push
add
cmp
mov
negb
lea
inc
popa
xlat
jae
lods
mov
mov
xor
gs
hlt
cmpsb
les
cwtl
outsb
sbbb
addr16
add
data16
xor
pop
sub
out
dec
jge
push
sub
sbb
add
mov
shll
pop
and
shll
es
mov
frndint
jns
lcall
mov
xor
iret
pop
and
cmp
js
repz
popf
xor
jnp
notl
lahf
rcrb
push
push
mov
sbb
gs
daa
adc
pop
fwait
lods
adc
lret
insb
test
and
inc
adc
lods
movsb
fldenv
subb
rcll
and
es
std
adc
scas
fsubr
dec
dec
jecxz
sti
idivl
loopne
loop
inc
jge
mov
orl
mov
daa
imul
push
jbe
jne
xlat
and
push
lds
leave
mov
mov
rolb
adc
pop
push
adc
push
sbb
and
lods
sub
dec
pop
sub
xor
nop
xchg
jae
push
cmp
mov
mov
mov
sbb
daa
call
mov
lea
push
lcall
sub
pop
dec
dec
jne
scas
notl
xor
data16
fst
cmpsb
jno
aas
xchg
ficompl
mov
mov
add
xor
enter
daa
xor
ret
shrb
out
movsl
adc
lods
jns
and
and
jns
add
cmp
sub
mov
mov
gs
add
or
xor
popa
mov
fstpl
scas
fisubl
or
jae
pop
testb
cmc
xchg
inc
outsb
cld
xchg
ret
sbbb
mov
into
popa
rorl
xchg
cmp
in
sbb
addl
ja
lcall
push
das
daa
rcll
ss
add
fnstsw
mov
fidivrs
xchg
cmc
inc
push
ja
adc
xor
lret
or
xor
mov
mov
mov
mov
mov
repnz
icebp
lea
xchg
adc
push
rdpmc
cmp
mov
arpl
lds
or
push
or
xor
xchg
xchg
cs
in
aaa
dec
daa
inc
sarb
pop
add
dec
pop
ss
out
pop
push
cs
lret
fcompl
mov
mov
sbb
out
aad
add
sbb
lea
pusha
mov
push
inc
cld
push
pop
adc
mov
fmuls
pop
xchg
outsb
fsts
mov
and
jae
lret
lahf
inc
adc
push
add
adc
stos
add
jae
or
lds
enter
and
int3
fsubp
in
jge
out
adc
je
call
out
jne
xlat
mov
test
inc
stos
sbb
mov
mov
roll
cmp
inc
add
pop
sbb
cwtl
out
into
jecxz
push
sti
je
pop
mov
xchg
and
scas
out
arpl
or
pop
or
mov
sbb
cwtl
enter
sti
mov
or
push
add
push
xchg
icebp
pushf
inc
imul
inc
cld
xchg
sbb
int
push
xchg
or
lret
cmp
pop
pop
scas
fcoml
sbb
jl
es
rcrb
les
cmovne
inc
std
aas
popa
jbe
add
ljmp
gs
sti
out
fidivl
orb
push
sahf
mov
add
into
jg
fsts
jne
stos
add
jne
outsb
add
cli
xchg
ret
adc
imul
jae
cmp
jae
cmpsb
pop
or
pop
addb
int
loop
inc
mov
enter
sub
dec
dec
hlt
inc
lahf
xchg
shl
test
je
in
mov
dec
nop
pop
jmp
pop
mov
in
pop
outsb
xchg
int3
sub
shrl
inc
jecxz
adc
ficoml
cwtl
push
pusha
mov
loope
shlb
fstl
or
inc
push
adc
push
mov
mov
test
or
jg
fidivs
xchg
and
rorb
mov
add
pusha
mov
pusha
in
add
mov
out
std
mov
xor
pusha
je
sbb
jno
pop
add
popf
fdivrl
mov
mov
sbbl
test
cmpb
push
stos
aam
add
push
xchg
adc
in
call
hlt
aaa
jle
lret
dec
adc
sub
jnp
jb
fdivrl
insl
mov
cmpsb
lods
sbb
add
and
gs
mov
sbb
push
push
jae
cmp
mov
gs
movsb
popf
std
popf
push
das
inc
ror
lds
movsb
frstor
push
adc
sbb
add
mov
jns
dec
call
clc
insb
in
dec
movsl
cmpb
daa
xchg
out
out
out
imul
push
ljmp
dec
xchg
fstpt
les
ret
aas
jns
dec
sbb
into
jmp
rclb
aaa
lahf
ficoms
inc
test
mov
out
push
mov
sarb
loop
and
sbb
adc
push
loope
into
nop
inc
adc
xor
ret
pushl
mov
vmovapd
lods
lret
mov
mov
and
insl
or
mov
loopne
push
hlt
mov
add
push
adcl
test
push
out
xchg
xchg
fucom
and
pop
push
mov
push
sbb
hlt
mov
mov
lea
invd
cmp
scas
or
test
xor
or
push
test
mov
sub
test
out
mov
mov
int3
lock
mov
paddd
test
mov
call
adc
ja
fs
xor
xor
mov
lret
or
aam
ja
fstp
cmp
adc
add
lods
sbb
sub
pushf
mov
pop
mov
xchg
ret
pushf
jecxz
je
stc
or
jnp
sub
pop
scas
mov
lcall
lods
fs
popf
je
lock
jl
dec
sbb
fwait
rorl
push
test
and
jecxz
jmp
mov
cmpsb
adc
stos
cld
fcomp
dec
gs
ljmp
sub
xor
push
pop
xor
lea
pop
jge
in
inc
inc
sub
mov
bound
and
xorl
pop
pop
xor
dec
xchg
mov
pop
xor
in
push
insl
dec
adc
adc
gs
dec
insl
push
and
push
fimull
in
pop
cli
or
sub
hlt
lods
push
popf
xchg
inc
sub
sbb
xchg
sub
xlat
xor
shll
jg
mov
je
test
int3
sahf
and
ror
pop
adc
inc
mov
jne
or
mov
pop
mov
xchg
sub
clc
in
xor
fs
push
adc
movsl
inc
lods
xor
xchg
stc
mov
cmp
mov
cmpsl
je
arpl
mov
fadds
jns
xchg
mov
stos
nop
scas
out
xor
push
shl
cmp
adc
pushf
mov
gs
dec
pop
and
insl
xchg
bound
rclb
sbb
jne
sarb
cs
sbb
jge
jp
mov
aam
dec
jnp
xor
cmp
lret
mov
stos
jo
loopne
adc
sbb
dec
push
or
push
inc
hlt
cmp
xchg
jecxz
dec
dec
dec
neg
add
je
test
pop
push
jne
pop
xchg
iret
stc
dec
sbb
out
and
dec
mov
cltd
inc
mov
movsl
test
jmp
push
mov
test
popf
notl
out
dec
sahf
rolb
pop
repz
cmp
popf
add
mov
icebp
std
mov
bound
xor
xchg
mov
mov
stos
sub
mov
dec
xchg
cmp
or
pop
enter
lds
mov
int
and
in
mov
mov
addl
sbb
adc
lock
into
js
mov
sbb
mov
mov
sbb
pop
mov
xor
push
cmp
outsb
aas
mov
mov
cpuid
iret
dec
arpl
fdivl
or
ljmp
sbb
in
icebp
lcall
outsb
xor
bound
test
dec
cltd
push
adc
cltd
add
and
arpl
mov
cwtl
and
pop
divb
jno,pn
sahf
stos
sub
mov
jne
or
fwait
daa
push
push
mov
enter
stos
push
clc
imul
push
data16
mov
pop
pop
dec
and
sbb
add
decb
and
addr16
and
adc
dec
subb
sub
push
pop
loope
das
loopne
jbe
xchg
stos
push
sbb
test
cld
jnp
cmc
and
hlt
push
or
mov
into
je
cmpsb
pop
xor
dec
vmwrite
and
jp
rcll
sub
inc
je
test
cmpb
dec
mull
or
add
adc
inc
test
pop
lds
dec
pop
loope
outsl
pop
push
std
sub
das
inc
call
fwait
or
add
xor
add
pushf
push
mov
insb
mov
insb
out
and
hlt
test
or
pop
mov
pop
cmp
pop
cwtl
sub
test
pop
lahf
stos
jge
xchg
pop
adc
pop
jmp
fimuls
pop
add
cmc
in
gs
jbe
dec
add
sub
and
push
cmp
and
sub
insl
out
mov
out
cmp
push
cmp
stos
mov
xor
mov
add
stc
add
popf
push
dec
mov
mov
cli
lret
or
jmp
sahf
jmp
xlat
pop
mov
call
push
or
mov
out
imul
pop
fists
lret
test
xchg
clc
orb
les
jp
cmp
cmp
xchg
xchg
adc
and
fstpl
ljmp
dec
decb
insb
ret
sarl
pop
ja
imul
fwait
cmpsb
gs
mov
fstps
lret
jns
add
mov
ret
jg
inc
inc
pop
and
icebp
ja
ss
call
sahf
dec
push
cmp
mov
stos
xor
or
loopne
aaa
add
xchg
aad
insl
cmp
mov
ds
inc
and
xor
sbb
and
and
pushf
pop
loop
and
xor
push
jb
mov
rorl
test
shr
mov
push
xor
inc
iret
lods
push
movsb
adc
xchg
add
add
or
scas
inc
inc
add
jmp
leave
cmp
adc
out
or
mov
mov
jge
inc
ds
sub
jle
aam
or
ljmp
adc
out
adc
rorb
icebp
push
sub
imul
insb
hlt
stos
mov
lods
stos
jbe
sub
jmp
sbb
mov
out
add
es
sub
pop
imul
xchg
daa
adc
rorl
mov
xchg
cltd
out
in
iret
or
stos
ss
pusha
jne
dec
sbbb
loopne
inc
aas
call
add
add
pop
adc
xchg
out
cmp
mov
orl
sbb
test
ss
mov
inc
push
iret
inc
sahf
lea
and
leave
add
dec
lods
xlat
sbb
xchg
test
jns
das
pop
jae
outsl
adcb
stc
jb
dec
and
inc
mov
or
setp
and
imul
xor
inc
lock
ja
sbb
add
hlt
fisttps
add
pop
cmpsb
cmp
stos
mov
out
add
add
jo
das
adc
add
imul
pop
sub
and
dec
movsl
xor
stos
test
dec
inc
push
ja
mov
jb
xchg
and
clc
and
les
fs
movsb
out
cli
add
scas
cmp
inc
push
int3
out
mov
mov
testb
jg
ss
fs
xchg
sub
nopl
lods
sbbb
rorl
je
daa
out
and
std
lds
testb
ja
push
outsl
mov
testb
enter
jbe
mov
jge
cld
icebp
es
out
push
pusha
xor
cmc
sub
call
mov
in
lock
or
adc
outsl
pop
insb
mov
aam
mov
cmpsb
popa
out
push
ja
cmc
mov
fiaddl
rcl
lds
mov
pop
push
mov
cmp
lods
out
push
cmp
fimuls
fisubl
mov
mov
mulb
stc
loop
je
sub
or
xor
repz
jmp
or
inc
adcl
pushf
mov
mov
cmp
mov
xchg
scas
mov
mov
mov
adc
and
clc
add
cmp
jl
jl
fiaddl
xchg
rcll
xchg
gs
or
nop
dec
scas
xor
mov
in
jmp
imul
mov
xlat
dec
mov
cmpsl
stos
stc
out
bound
ret
jge
enter
xchg
test
fistps
inc
push
inc
mov
aam
es
scas
aas
int
bound
lods
cs
mov
inc
nop
arpl
and
sub
mov
push
repnz
es
cmpsb
and
aad
or
mov
inc
mov
push
xor
fcmovb
icebp
cwtl
lret
add
xor
icebp
cs
adc
lret
pop
stc
fisttpl
in
lods
pop
shl
std
shrb
fstl
sbb
jns
loope
jno
push
jle
dec
mov
daa
xchg
push
mov
scas
xchg
aad
or
daa
dec
sub
ds
inc
adc
in
or
add
ds
outsl
lock
cmpsb
push
sti
or
mov
insb
out
out
popa
stos
inc
push
repnz
ret
push
imul
push
pop
jns
jmp
inc
jecxz
loop
inc
sub
cmpsb
inc
xchg
lods
mov
push
mov
xor
adc
and
lea
sbb
out
popa
test
popa
adc
adc
insl
mov
fsubl
mov
mov
mov
aad
insl
loope
and
es
fbstp
clc
ror
mov
sbb
jl
sub
das
jmp
loopne
in
andl
pop
dec
or
adc
xchg
ret
stc
xor
ds
repnz
push
inc
cli
sbb
add
add
iret
or
add
test
and
sub
or
mov
cltd
push
xorl
xor
push
cmp
sub
aam
sub
push
add
add
xchg
daa
cs
sub
xor
cmpb
pushf
pop
xchg
into
jne
push
sbb
adc
adc
dec
imul
rcrb
sub
jbe
push
int
popl
jmp
lret
dec
sub
mov
mov
dec
push
jb
fistpl
popf
loop
dec
xor
fildl
xor
cmp
mov
sbb
jb
sbb
adc
ss
jmp
pop
imul
fdiv
or
add
ljmp
inc
daa
or
cltd
jmp
adc
int
sub
cmp
cld
or
pop
iret
lret
insb
cmp
jp
test
inc
inc
popf
pop
jno
jecxz
adc
fadds
iret
dec
mov
in
lahf
pop
ret
pop
jnp
mov
jmp
xchg
aam
adc
push
pop
jge
mov
scas
leave
cmp
imul
adc
jl
mov
inc
jo
mov
push
scas
pop
sub
in
call
clc
xorl
or
jo
mov
cs
dec
jl
stos
adc
adc
insl
or
mov
pop
test
push
out
add
dec
testl
int3
insl
xchg
call
and
and
das
pusha
xor
mov
popf
call
sub
mov
xchg
cmp
sbb
adc
stc
jnp
hlt
sbb
sbb
fucomi
and
xchg
jle
add
dec
push
movl
jg
mov
or
hlt
and
inc
jmp
dec
fs
ret
pusha
insl
inc
cmp
bts
test
hlt
into
js
xor
xchg
xchg
popf
and
pop
add
add
sbb
es
mov
mov
add
ljmp
adc
sti
and
int3
pusha
rcrl
cli
push
mov
xor
add
in
pop
pop
jo
fbld
mov
call
mov
cmpl
shll
mov
pop
and
xor
inc
testb
push
scas
ljmp
insl
lds
mov
je
adc
sbb
xor
mov
inc
aad
cwtl
sub
fstpl
ret
negl
pop
cmp
lret
adc
movsl
bound
lret
in
les
add
mov
or
pop
add
pop
into
out
cmp
xchg
push
jmp
inc
fsubrl
add
push
loop
jno
sub
inc
lret
aam
jbe
cmp
fs
loope
and
xchg
nop
jae
push
add
mov
xor
mov
addr16
iret
adc
fwait
dec
imul
js
jns
cwtl
fyl2x
sbb
jnp
dec
daa
in
mov
mov
push
ljmp
jns
or
stos
lock
aad
jnp
xchg
lcall
shll
cmp
jo
mov
adc
push
inc
sbb
loop
xchg
mov
test
test
lods
sub
je
push
xchg
xchg
mov
and
cld
out
pop
mov
jbe
fwait
sbb
mov
add
sbb
xor
sbb
sbb
out
mov
push
xor
mov
push
das
aaa
cld
or
add
pop
lcall
cmp
or
addb
push
jl
cli
test
test
xchg
mov
mov
ja
js
hlt
xchg
adc
xor
mov
aam
or
dec
mov
call
gs
adc
xor
hlt
sbb
outsl
adc
pop
inc
mov
scas
outsl
xchg
inc
aas
stos
gs
loopne
fisttpl
arpl
or
scas
pop
mov
push
cmp
dec
cmp
add
xchg
sub
mov
das
jmp
push
je
out
imul
and
cli
ja
clc
adc
inc
lock
imul
fsubrl
pop
icebp
cli
data16
jns
mov
pop
xchg
imul
imul
xor
outsb
pop
fsubs
rcrb
bound
and
mov
xchg
pop
loope
adc
push
pusha
sahf
in
into
js
push
push
cmpsl
adc
xlat
or
add
xchg
push
cmp
xor
sbbb
xchg
xchg
push
mov
aas
mov
pushf
xor
add
cmp
popa
add
in
mov
xchg
mov
std
call
inc
fstl
push
jmp
ret
insl
test
cmpsl
sti
ja
daa
in
pop
stc
adc
fidivrs
xchg
andb
adc
loopne
xor
adc
fwait
add
mov
scas
mov
push
xor
sbb
js
fisubs
pop
sti
jge
inc
jae
int
jno
and
out
mull
addr16
adc
adc
xchg
push
nop
lds
pop
out
or
popf
mov
stos
ret
mov
out
mov
sbb
mov
fsubrs
or
dec
xchg
mov
push
cmp
mov
cs
inc
and
or
sbb
sbb
mov
pop
inc
sbb
addr16
cld
adc
cmp
pop
xchg
icebp
mov
fninit
lret
sbb
push
inc
jp
out
iret
add
inc
lret
and
push
test
data16
fs
and
je
adc
nop
test
sahf
aad
or
imul
int3
jp
sub
xor
test
lcall
jmp
loop
inc
adcl
mov
xor
mov
add
add
add
push
pop
lock
pop
cmp
adc
mov
popa
into
nop
div
dec
mov
in
adc
scas
in
or
mov
loopne
cld
xchg
cs
lock
out
mov
test
and
adc
or
insl
lods
pushfw
rol
fnsave
stos
cltd
fdivl
xor
adc
mov
je
shll
mov
push
lds
push
mov
fmuls
lods
jp
sbb
mov
mov
test
gs
xchg
out
mov
xchg
jne
mov
xor
or
sbb
sbb
das
cmc
pop
and
xor
jne
adcb
hlt
dec
inc
addr16
cs
movl
and
sub
jl
sahf
push
aad
das
idivl
rcr
jbe
sbb
les
xor
cld
push
add
std
icebp
lret
jmp
in
pop
add
xor
popf
mov
lret
lods
aad
pop
scas
pop
jae
cmp
jae
xor
aad
dec
inc
loop
enter
leave
mov
push
outsb
rcrb
sbbb
pop
mov
in
daa
fistps
data16
ffreep
xchg
or
pop
and
sti
adc
xchg
pop
mov
inc
enter
sub
push
in
push
dec
test
scas
push
push
add
adc
mov
out
xchg
xor
cmp
cmp
or
mov
mov
mov
sbb
push
subb
dec
xchg
lods
je
aaa
mov
shrb
xchg
ds
mov
fcompl
mov
cmp
jo
int
iret
fisubrl
adc
mov
je
xchg
fadd
out
mov
test
imul
mov
push
repz
inc
or
xor
dec
jb
cmp
and
not
dec
inc
fucomip
int3
add
inc
add
test
mov
inc
pop
adc
and
ficoml
sub
aas
ljmp
scas
dec
inc
leave
cmpb
bound
sub
call
and
cmp
push
add
sbb
cmc
mov
int
scas
xchg
adc
imul
xchg
popf
test
cmp
stos
lods
xor
fsub
xchg
rolb
push
or
addr16
push
push
or
mov
scas
jge
loop
or
sar
psrld
push
xchg
adc
mov
movsl
fdivrs
jno
mov
cwtl
sbb
mov
and
addr16
adcl
shrl
fst
sub
cmp
xchg
cltd
ja
dec
add
jl
cmp
inc
add
sahf
mov
fidivrl
adc
xchg
pop
xchg
cwtl
adc
push
lea
stc
sbb
mov
and
fdivl
popf
mov
and
dec
mov
mov
mov
add
xor
cld
push
sub
fs
cmp
and
int
les
sarb
cvtps2pd
test
rol
leave
inc
push
out
addr16
inc
add
test
imul
jno
iret
or
or
call
adc
fsts
mov
adc
cmp
add
xor
mov
push
jecxz
xlat
outsl
stc
add
fs
or
sahf
sbb
outsl
insl
and
mov
push
push
pop
adcl
into
lods
sbb
fildll
notb
and
fdivs
pop
sti
jo
xor
mov
adc
clc
fs
lds
pop
repnz
cld
out
cli
inc
stc
in
arpl
xchg
into
popf
bound
cmp
jl
mov
mov
mov
lds
cmpsb
pop
sbb
cli
or
xor
mov
fistl
dec
xchg
fsubrs
sub
push
xchg
adc
add
insl
xchg
ss
mov
or
rclb
test
mov
mulb
repz
fs
fistpl
sbb
pop
mov
mov
mov
or
faddl
mov
pop
pop
jg
inc
push
sbb
test
out
pop
mov
movsl
pop
inc
mulb
je
dec
iret
mov
test
fld
stos
sbb
imul
fcompl
push
mov
in
add
mov
inc
or
enter
imul
test
jmp
dec
pop
fnstcw
rclb
xchg
xchg
xchg
daa
cmp
jecxz
push
lods
mov
test
or
sub
adc
and
cmpl
push
pop
xor
add
xor
ja
ljmp
sbb
or
jne
scas
mov
push
aaa
xchg
loopne
or
ja
movsl
aad
inc
scas
push
and
aam
jl
pop
pop
fistl
sbb
adc
fistpl
pop
push
popa
nop
addr16
cli
push
xchg
fucomp
xor
fdiv
or
imul
stos
push
pop
insl
jne
jmp
mov
add
pop
jl
or
into
pop
inc
mov
aam
es
cmp
cmp
in
stos
sub
jmp
push
gs
ret
sarl
stos
mov
sbb
mov
bound
pushf
mov
scas
into
repnz
adc
and
out
add
mov
pop
test
out
jge
movsl
lods
add
mov
shl
mov
repnz
push
nop
insl
sub
hlt
pop
mov
out
je
pop
jmp
pusha
cs
cmp
cmp
dec
test
pop
adc
imul
jle
cmp
and
add
mov
sub
jne
js
cmp
push
mov
push
sub
adc
in
sar
or
cmp
dec
sbb
mov
aas
sub
adc
rcr
shrl
push
xchg
mov
fdivrl
repz
lea
ds
or
pop
movsl
jle
and
cmpsb
sbb
cmp
xor
pop
daa
cli
cmc
test
mov
jae
xor
ret
dec
adc
push
jns
stc
test
sbb
pop
add
xchg
in
cmp
rorl
mov
dec
xchg
push
mov
enter
jmp
stos
or
jmp
mov
enter
and
lods
mov
push
push
fcoml
pop
das
and
and
push
sar
out
jae
adc
and
push
popl
and
shrb
dec
stc
pop
pop
wbinvd
jns
add
and
mov
es
xor
adc
adc
add
adc
cmpsl
add
push
dec
lock
fdivl
arpl
lods
subl
js
cmp
loope
jne
xchg
iret
mov
jp
cwtl
add
cmp
adc
or
inc
xchg
and
outsb
clc
mov
inc
shlb
xchg
inc
mov
adc
push
dec
cmp
xchg
xchg
mov
out
cmp
inc
mov
mov
or
loop
sbb
cld
dec
ret
sub
mov
adc
loope
push
push
divb
sub
inc
add
hlt
and
aad
jae
adcb
fimuls
fisttps
cmpsb
ljmp
movsl
out
sub
xchg
inc
inc
fstpt
dec
adc
add
sarl
sub
mov
jne
loopnew
push
jecxz
stos
outsl
hlt
stc
paddb
cmpsb
fidivl
add
shrb
cwtl
jae
jo
push
popa
iret
mov
aas
clc
inc
inc
imul
hlt
cld
stos
push
sahf
cltd
fdivrl
mov
mov
dec
mov
mov
loopne
adc
dec
ret
xchg
stc
mov
pop
aas
scas
arpl
push
adc
jmp
mov
sbb
or
repnz
pushf
inc
stos
add
pop
sahf
fisubs
lahf
xor
inc
stc
xor
inc
push
add
add
inc
mov
sub
xor
into
les
push
xorl
and
repnz
stos
mov
xchg
jb
adc
insb
mov
cmc
or
adc
push
adc
movsb
xchg
shr
xchg
pop
add
pop
imul
push
mov
inc
fnstenv
aad
adcl
pop
cmp
inc
jne
push
adc
cmp
xor
xor
xchg
aas
mov
pusha
jnp
adc
js
int
imul
stc
xchg
out
inc
jbe
cltd
inc
outsb
jbe
pop
xor
arpl
jg
push
jle
inc
out
rolb
push
xchg
pop
insl
xor
xchg
jns
out
jg
dec
cli
xchg
sarb
or
sbb
bound
push
aaa
pop
jno
cmpsb
sub
lods
pop
push
mov
dec
je
xchg
cli
adc
adc
xchg
repz
cmp
mov
dec
es
pop
xchg
outsl
jg
pop
rcrb
xchg
leave
adc
gs
pop
dec
fwait
lret
or
push
push
popf
or
psadbw
mov
dec
fistpl
adc
pop
mov
jae
jo
fildl
aas
and
wrmsr
jge
popf
imul
mov
push
test
pop
inc
sbb
push
cmpsl
leave
int3
je
dec
lods
test
scas
int
in
jecxz
pop
mov
lods
or
into
or
fistpl
jne
pop
leave
pusha
mov
mov
adc
push
fldenv
imul
outsb
hlt
dec
xor
and
lock
pop
jns
cmp
jo
lret
push
mov
mov
js
cmpsb
dec
js
xchg
inc
or
inc
cmp
push
pop
push
mov
mov
ds
in
xor
push
divb
jmp
push
or
sar
pop
mov
mov
lea
cld
rcrb
jg
fs
mov
cwtl
lods
in
and
aas
ror
sub
jecxz
hlt
cmp
insb
out
or
fsubrs
imul
cmpsl
jge
sub
xchg
popa
mov
or
sub
xchg
push
xchg
pop
and
jb
pusha
push
or
lods
inc
pusha
std
adc
in
dec
pop
add
xchg
ret
iret
jmp
leave
mov
mov
pop
pusha
sub
js
in
mov
daa
mov
sahf
mov
cs
enter
repnz
test
fs
mov
int3
sub
aam
aaa
mov
xchg
pushf
psubd
lods
mov
or
adc
out
push
lcall
sbb
xchg
xchg
push
leave
jmp
test
or
adc
adc
aas
jg
mov
xor
int3
cltd
pusha
popf
rcl
shlb
sbb
add
icebp
rcl
mov
or
lock
xchg
in
jb
add
sbb
push
cld
imul
pop
mulb
jne
pop
lret
pop
push
and
rcl
aaa
sbb
adc
testb
dec
and
data16
inc
shl
adc
fcmove
cltd
cmp
mov
sahf
les
lods
jecxz
loop
out
popf
sbb
clc
sub
adc
mov
mov
xor
and
pop
data16
lahf
int
inc
std
negl
cmp
in
scas
stos
int
jmp
rolb
add
pop
fistps
out
stos
xor
rorb
shll
jp
pusha
out
outsl
loope
mov
test
sar
idiv
xchg
cltd
mov
and
rorb
data16
inc
jg
mov
or
push
stos
inc
mov
push
ficoml
jg
arpl
icebp
popa
push
lods
xor
push
int3
shll
rcrb
push
pop
sub
nop
xchg
dec
pop
mov
mov
repz
mov
mov
insl
lds
sbb
mov
xchg
xor
inc
mov
jne
or
push
leave
lods
xchg
fcompl
adc
push
fs
xor
aas
nop
add
or
rclb
aad
rolb
or
dec
cmp
inc
add
movsb
mov
dec
push
xor
lock
std
adc
movsb
movsl
fsubrl
lea
sbb
stos
cli
sbbl
cmpsb
iret
adc
sbb
add
add
xchg
or
shlb
push
les
jo
mov
jbe
xchg
xor
xchg
in
js
or
xchg
fidivl
iret
mov
sub
lsl
imul
ret
push
pusha
cmp
mov
add
scas
dec
mov
push
cli
or
xchg
dec
inc
xchg
movsb
mov
or
pop
mov
push
pop
imul
mov
push
mov
das
enter
jno
and
pop
pushf
and
sub
or
inc
fstl
pop
bound
dec
insl
cmp
push
add
sub
add
iret
cmp
xlat
out
dec
stc
sar
cld
fcoms
in
xor
pextrw
xchg
fbstp
jbe
outsb
mov
adc
es
in
add
fidivrs
vphaddbq
sbb
repz
sub
mov
pop
ja
shl
movsb
pop
or
adc
js
pop
xor
jno
fmul
push
jl
shlb
xchg
fdivl
push
loopne
push
mulb
call
or
clc
dec
in
adcl
jns
lods
ret
out
add
fwait
xchg
adc
add
sub
sbb
das
sbb
xchg
adc
fcmovbe
add
ficoml
icebp
roll
sbb
ss
xlat
seta
movsb
out
popa
repnz
mov
leave
push
call
shl
mov
in
test
add
gs
push
mov
mov
ficomps
sbb
or
orl
fwait
xor
inc
int
mov
and
xchg
cmp
dec
bswap
ret
xchg
dec
mov
add
xchg
and
orb
es
add
ficompl
xchg
mov
test
mov
insl
out
adc
cmp
es
lcall
dec
pop
sbbb
or
or
mov
or
jp
aad
out
push
push
ljmp
pop
push
adc
push
jp
enter
dec
and
imul
cwtl
jno
cmp
push
pop
push
ljmp
scas
inc
test
outsb
inc
pusha
mov
jp
fsubl
xorl
push
mov
rorl
cmp
loopne
sar
cli
and
push
jge
sahf
stos
or
ljmp
in
fs
je
or
idivb
add
jmp
scas
adc
jns
push
pushf
aas
movb
sub
jl
es
dec
inc
pop
pop
sbb
lret
mov
push
mov
inc
divb
testb
sbb
ja
cmp
jae
mov
aas
sbb
cwtl
cld
jge
or
nop
mov
loop
in
fs
shll
stos
pop
jnp
pop
adc
mov
push
mov
pop
xor
cmp
pop
mov
jne
pop
add
inc
cmpsl
jge
mov
adc
pushf
sub
lods
pusha
enter
xor
insb
out
add
mov
jo
pop
lea
fstps
or
xorl
sub
mov
movsl
adc
pusha
push
lea
inc
imul
or
and
loope
jnp
sbb
xchg
ret
inc
cmpsw
cmp
cmp
sahf
imull
sbb
in
and
jb
push
xorl
add
mov
ja
mov
in
inc
cs
jae
inc
out
popf
inc
jp
cmp
repnz
aas
ljmp
jmp
in
mov
js
mov
outsl
stos
pop
cwtl
fsts
and
aas
sahf
push
fwait
rolb
popf
jo
mov
imul
mov
push
or
adc
jmp
cld
cmp
push
and
add
sbb
pop
les
int3
add
mov
or
jnp
sahf
xor
out
stc
jle
pop
adc
sti
add
pop
add
cmpsb
xchg
fldt
outsb
add
repz
add
mov
mov
or
and
pop
shrl
hlt
jnp
mov
sti
cmp
aad
bound
mov
sub
cmpb
in
mov
push
int
mov
fisubl
inc
movsb
pop
roll
aas
imul
jmp
repnz
loop
cmc
outsl
fnstcw
push
cltd
loopne
jb
mov
in
xor
stc
adcl
mov
int3
shlb
hlt
movsb
lahf
and
lock
mov
sub
lret
sub
aam
out
in
mov
js
jo
fstps
js
jns
jbe
daa
xor
cs
cmpsl
dec
add
and
sub
in
dec
and
fmull
lcall
pop
sbb
pop
insb
insb
xor
xchg
jecxz
fisubrl
leave
adc
fwait
lods
fists
sbb
add
dec
xchg
mov
add
movsl
test
push
adc
dec
dec
lds
xor
enter
int3
ficompl
nop
mov
jb
movsb
je
stc
outsb
xor
dec
mov
sbb
mov
inc
imull
sbb
cmpsl
adc
lock
xlat
outsb
or
negl
ret
mov
inc
dec
pop
test
faddl
pop
fs
loopne
pop
mov
loope
movsb
aam
xlat
sahf
mov
mov
adc
adc
sarb
pop
jg
rorl
movsb
add
pop
ja
scas
test
cwtl
dec
cmpsb
fbstp
test
jmp
ja
fcom
cs
movsl
mov
in
fcoml
xor
add
mov
inc
shl
int3
add
jmp
xchg
mov
roll
dec
sub
mov
lds
push
scas
scas
ret
in
imul
pop
push
jge
jle
cltd
inc
sbb
fstpl
mov
push
into
mov
cmp
in
mov
scas
scas
jbe
outsb
ds
jmp
rclb
lcall
test
lods
xchg
loope
jmp
mov
mov
sbb
cld
sbb
xchg
adc
cld
out
or
xchg
push
leave
pop
sahf
dec
daa
mov
pop
stc
mov
sbb
cmp
mov
in
push
daa
sbb
out
addr16
mov
pop
int
test
mov
dec
and
lahf
int
pushl
hlt
mov
mov
ficoms
fsubs
fs
mov
push
aaa
cmpsl
pop
leave
aaa
inc
and
bound
xchg
and
sbb
dec
cmpsl
pop
cli
adc
out
cwtl
inc
test
jno
ljmp
loopne
mov
subb
icebp
repnz
les
sahf
xchg
cmp
pop
loopne
xchg
out
push
scas
sbb
imul
or
add
aas
movsb
mov
or
movsl
mov
addr16
pop
rorb
jmp
inc
mov
mov
and
ficomps
mov
cwtl
jecxz
imul
dec
inc
pop
scas
and
mov
inc
in
fisubrs
in
xchg
lods
pop
pusha
pop
out
pop
and
or
cltd
and
xchg
sub
and
inc
loop
or
mov
ror
addb
cmovg
mov
ret
ss
fldl
std
xchg
cmp
and
scas
mov
mov
xchg
sbb
xor
mov
pop
dec
bound
wrmsr
xchg
mov
inc
data16
imul
int
xchg
int
dec
jle
push
lret
xor
lea
and
jnp
and
imul
aad
decb
cmp
adc
mov
cld
fsub
jns
xchg
or
aam
jge
out
pop
iret
std
test
in
or
in
xor
jl
mov
imul
sbb
inc
dec
xor
inc
inc
pop
adcb
dec
jecxz
nop
sbb
jae
shlb
repnz
cmp
leave
and
sub
insb
pusha
mov
sahf
adc
jne
sbb
xlat
hlt
mov
out
call
jb
push
jbe
push
push
inc
aam
add
or
jnp
adc
dec
sarl
bt
ljmp
enter
add
dec
dec
xchg
jmp
pop
pop
mov
inc
xchg
push
icebp
and
loopne
xchg
ljmp
ds
test
jns
or
rcrl
es
out
sub
test
pop
push
push
insb
xchg
push
and
in
cwtl
sbb
mov
enter
mov
dec
jmp
lret
adc
loop
out
std
or
mov
mov
in
and
add
pop
mov
loop
mov
cld
xchg
push
jle
rclb
xchg
add
and
sbb
lock
add
xor
aad
mov
xchg
test
cs
sbb
sar
xor
mov
pushf
and
add
mov
sbb
add
xchg
pop
jnp
call
sarl
mov
stc
xchg
data16
jo
fsubp
mov
iret
add
test
or
aas
mov
inc
xchg
cwtl
sbb
mov
stos
pop
xor
xorb
mov
sbb
xor
lods
xchg
lea
js
push
testb
sub
cmp
dec
push
rep
lahf
iret
lcall
or
bound
out
mov
push
sub
outsb
mov
add
iret
xor
dec
loope
add
mov
ret
dec
imul
sub
insl
dec
push
inc
jae
inc
xor
pop
icebp
fldenv
ret
sarb
mov
std
arpl
sub
and
mov
and
inc
jo
or
mov
ss
inc
int3
xor
test
call
mull
ljmp
call
outsl
mov
cmp
lock
fsub
push
sbb
sbb
daa
jb
scas
js
decb
scas
test
sbb
sbb
aaa
inc
jae
mov
inc
push
dec
mov
add
repnz
jl
and
aaa
cmp
cmpsl
sbb
adc
inc
jno
sub
rcpps
notb
or
dec
mov
ret
inc
fsubrl
mov
jnp
inc
sarb
sbb
push
adc
mov
jecxz
mov
xchg
into
xchg
lret
das
mov
and
push
mov
out
cmpsb
add
pop
enter
out
sub
and
ss
xchg
xchg
xor
push
and
or
push
mov
outsl
cmp
pop
push
xor
subb
lds
in
out
adc
jl
jmp
or
fdivs
pop
fistpll
testb
fxch
fadd
add
add
in
pop
dec
iret
mov
jns
xor
pop
pop
and
movsb
lcall
cmp
sub
mov
xchg
aad
sbbb
jae
rcrb
scas
add
add
push
adc
dec
out
inc
dec
rcr
mov
mov
inc
jae
xor
sbb
mov
out
xchg
test
xor
ret
arpl
loope
incl
pop
fnstenv
adc
adc
sub
mov
inc
or
cs
push
mov
fwait
or
rol
test
add
ja
stos
inc
daa
push
pusha
or
dec
loope
mov
fucomip
jo
enter
lods
xlat
xor
xor
call
jg
xor
inc
stos
sbb
scas
fldt
push
or
int
movsl
or
gs
jmp
iret
pop
dec
xlat
push
shr
rcll
or
sub
ja
lahf
pop
push
loope
lret
adcb
faddp
mov
movsb
call
xchg
rclb
xchg
jno
mov
cmc
push
sub
xchg
ds
loopne
clc
sar
xor
inc
jg
pop
mov
insb
mulb
push
fstpt
iret
jmp
inc
push
enter
xor
stos
push
dec
xchg
idiv
fwait
pop
enter
sbb
add
stos
push
ss
shll
adc
out
out
insl
lods
push
je
ret
cli
mov
or
mov
cmp
jo
add
inc
mov
sbb
cmp
push
outsb
cli
loop
in
cwtl
pop
mov
ficoms
pop
test
mov
ror
int3
stc
mov
and
ret
nop
inc
and
outsl
jg
movsl
in
sub
rcll
add
jno
mov
mov
lcall
mov
xorb
jl
cmp
jbe
or
fcoml
jae
lcall
jmp
xor
ss
fistpl
mov
or
clc
les
popf
aaa
cmp
pop
iret
icebp
ret
cmp
mov
push
cmp
jb
sub
push
sbb
cmp
es
scas
leave
stc
fs
pop
adc
xor
push
addl
and
mov
das
rcll
and
cmp
xlat
int3
mov
lret
fnstcw
lds
add
pop
in
cmpl
pop
sbb
pop
sub
sbb
cli
es
mov
call
insl
adc
jle
mov
sahf
cmp
test
int3
jae
and
and
in
daa
pop
stc
xchg
xchg
dec
push
clc
mov
arpl
arpl
fwait
mov
insb
cmp
orl
cmpsl
cmp
insb
jle
push
xor
push
fmuls
int
lea
mov
daa
ret
fnstsw
push
jl
add
pop
or
aad
in
inc
cs
inc
jne
xchg
bound
pop
jo
adc
cli
scas
lret
mov
xor
int3
int
arpl
push
loop
mov
xchg
and
subb
scas
in
arpl
inc
xchg
inc
pop
pop
dec
aaa
lret
aam
xchg
jne
dec
dec
sub
pop
push
inc
inc
inc
mov
pop
mov
rol
sub
pushw
dec
or
and
jmp
add
test
cmp
jbe
sub
loop,pn
hlt
sti
sub
out
push
xchg
shrl
das
dec
pop
movsl
lock
jl
mov
sub
jo
imul
add
and
push
adc
or
mov
xor
scas
adc
inc
mov
popa
add
mov
sbb
add
rcrb
mov
and
cmovnp
dec
push
or
push
outsb
in
call
sub
call
cld
mov
shll
sarb
imul
insb
mov
lods
inc
cmc
xchg
push
in
sub
mov
in
shll
leave
pop
stos
sbb
cmpsb
dec
inc
divb
js
or
push
mov
pop
mov
les
rcrl
incb
dec
popf
adc
mov
fnstcw
out
sbb
pop
pop
dec
cmovle
pop
aam
pop
loope
rcll
mov
push
dec
ljmp
adc
push
dec
jmp
out
das
cmp
pop
insb
jmp
sub
jno
ret
cmp
push
insl
sub
insl
dec
mov
lret
add
cli
pop
lret
ret
stos
adc
push
add
dec
popf
cmc
dec
fistpll
ljmp
xor
jmp
push
push
cmp
sub
aaa
mov
sbb
popf
scas
jg
out
sub
push
adc
and
inc
sbb
mov
add
imul
popl
xor
jns
fwait
movsb
andb
push
mov
shl
adc
imul
mov
in
lock
mov
sbb
or
pop
sbb
nop
jne
pop
mov
dec
mov
daa
mov
push
fwait
sahf
sarb
stc
negl
dec
push
mov
push
es
mov
ljmp
repz
cli
mov
cli
sub
into
test
dec
imul
sbb
aam
aad
imul
pop
in
dec
pop
iret
gs
and
jnp
dec
xor
test
pop
jmp
sub
add
pop
jg
mov
mov
push
pop
sti
lcall
rcll
ja
push
daa
add
dec
scas
jecxz
cmp
and
dec
cmp
mul
push
add
popf
sti
xor
nop
and
subb
dec
cmp
je
mov
icebp
push
sub
or
push
inc
lods
sbb
lock
cmpsb
ret
sahf
std
adc
jle
mov
shlb
sbb
jecxz
mull
pop
out
mov
push
test
mov
enter
mov
mov
scas
fisttpl
or
int
inc
arpl
mov
xchg
mov
cmpsb
push
addr16
cli
xchg
out
inc
jb
loopne
int3
push
sub
mov
mov
pop
inc
sbb
inc
adc
add
nop
arpl
subb
mov
aaa
clc
in
iret
push
rcrl
stos
and
lret
mov
aaa
pop
push
mov
into
adc
mov
mov
xchg
xor
jmp
cmpsb
xchg
imul
sub
ds
pop
cli
adc
xor
addb
je
out
jg
add
in
lods
fsubs
nop
cmpsb
out
mov
inc
push
mov
mov
jg
or
jnp
push
xchg
xchg
mov
mov
out
pushf
fists
enter
xchg
call
aam
lock
mov
jl
outsl
dec
iret
dec
and
stos
or
lods
lods
jnp
stc
shlb
mov
enter
filds
jae
decb
test
and
lret
imul
fcmovnu
jle
pop
jb
push
shrb
hlt
jno
jl
rcrb
add
shr
dec
gs
mov
push
insl
mov
dec
enter
stos
repz
push
xor
adcl
inc
scas
arpl
lcall
inc
jmp
pop
stos
roll
xor
subb
leave
lods
movsl
mov
scas
nop
sbb
inc
out
orl
sarb
cmp
mov
mov
inc
jo
mov
addl
mov
xchg
hlt
jno
sbb
fisttpl
movsb
xchg
push
rcrl
mov
sbb
leave
add
add
sbb
leave
lods
mov
inc
ret
push
add
add
inc
push
nop
adc
fldl
inc
dec
pushf
es
mov
inc
dec
pop
mov
xor
icebp
into
sbb
pop
test
pop
and
aad
cmpsb
mov
sub
lahf
dec
sub
inc
add
rcrb
push
mov
in
scas
lret
sub
out
adc
and
imul
sbb
and
sbb
jecxz
jmp
clc
mov
push
andb
cmpsl
add
test
fs
push
dec
enter
inc
call
add
push
outsb
sbb
pop
adc
add
cmp
mov
mov
push
jp
pop
enter
mov
test
outsb
out
xor
inc
sub
sbb
or
push
xchg
arpl
mov
lea
cmp
lods
mov
add
fwait
pop
inc
cs
icebp
outsb
out
xor
jo
mov
sbb
fs
fwait
dec
mov
inc
mov
fstpt
fdivr
dec
mov
pop
ud0
add
push
lret
mov
push
push
xchg
xchg
outsb
add
xor
sbb
mov
inc
and
inc
push
pop
std
aas
in
dec
inc
push
div
push
xor
mov
or
pop
mov
in
aaa
mov
js
insb
addr16
jb
mov
mov
mov
mov
xor
mov
xchg
adc
inc
xorl
clc
pop
xor
sub
and
mov
or
aas
lea
mov
scas
mov
popf
mov
sarb
xorb
add
scas
lret
imul
je
test
sbb
add
scas
inc
push
cmp
inc
lret
pop
popf
adc
into
lods
shlb
sub
cmp
adc
pop
inc
cli
popa
push
shl
ds
xchg
cmp
xchg
dec
or
lds
mov
sti
dec
mov
adc
xchg
dec
sti
daa
mov
sbbb
cmp
in
and
adc
addr16
and
mov
addr16
jno
ljmp
test
sub
inc
or
inc
daa
and
out
jo
sbb
push
or
jmp
lds
and
cmp
push
mov
incb
in
fimuls
loope
jg
cmp
in
shlb
xchg
and
loop
in
dec
xchg
or
das
cmp
inc
in
push
test
push
sub
or
mov
inc
sbb
out
jmp
mov
cmpsb
insb
stc
push
jmp
xchg
mov
or
jnp
pop
imulb
insl
and
addr16
inc
mov
mov
cmp
or
shlb
or
add
sub
jg
in
lret
mov
push
fwait
popf
lds
loope
mov
jecxz
mov
jbe
stos
scas
fs
pop
jg
mov
and
inc
push
shll
adc
sahf
pop
loope
add
sbb
gs
lds
xorl
mov
dec
icebp
loope
mov
scas
pop
in
into
mov
repnz
cmp
pop
rcl
pop
push
ret
push
xor
pop
dec
dec
mov
lods
push
xchg
in
jne
sbb
in
mov
and
mov
clc
jg
sub
pop
gs
add
call
imul
inc
push
int3
loopne
repnz
xor
pushf
ss
cltd
outsb
cwtl
jbe
xchg
ja
lods
cmovs
and
fwait
push
xchg
das
out
sbb
add
fwait
adc
jbe,pt
test
xlat
repz
mov
movsb
data16
mov
gs
gs
cmp
mov
cld
and
into
rcrl
inc
pop
mov
outsb
xchg
lods
inc
fs
fwait
pop
out
fcmovnbe
add
mov
aam
jmp
sbb
pop
xor
cmp
cltd
scas
mov
dec
push
out
popa
jbe
scas
mov
or
fisttps
ss
sub
sbb
mov
addr16
cltd
out
xchg
jne
call
mov
jmp
xor
add
decl
ss
mov
cmp
mov
out
pop
dec
push
xchg
gs
xor
add
add
jno
jl
dec
cli
xor
pop
mov
jmp
in
in
pop
add
mov
pop
xchg
mov
loope
gs
cmp
imul
and
sub
jecxz
mov
mov
push
popa
sbb
addr16
mov
cmp
mov
into
jle
gs
mov
mov
insl
cmp
in
enter
fadds
dec
push
dec
inc
and
push
xorb
cs
fnstenv
fnsave
stos
xchg
or
into
mul
addr16
sti
pop
sti
divb
ds
dec
jnp
adc
jo
cmpsl
sbb
ret
fiaddl
mov
in
out
jge
cwtl
test
shlb
test
popf
call
dec
jo
jmp
pop
call
inc
jge
les
nop
pop
int
mov
jne
popf
push
inc
sub
lret
gs
xchg
adc
mov
xchg
dec
add
mov
xchg
fisubs
mov
mov
rcrl
push
divl
pusha
int3
shr
in
andb
inc
mov
pop
je
je
cwtl
lret
sbb
dec
add
xchg
das
xchg
and
push
mov
adc
jecxz
mov
bound
shrl
scas
imul
mov
notl
add
nop
and
jmp
inc
shlb
aad
aaa
sbb
inc
cmp
shlb
cmp
mov
mov
insb
in
and
fsubrl
lahf
outsl
push
dec
adc
mov
jmp
inc
pop
fwait
aam
cmpsb
lret
push
fildl
and
or
mov
cli
cmp
call
and
or
jp
mov
push
movsb
cmp
flds
je
stos
jge
mov
xchg
outsb
inc
or
lds
inc
fisttps
dec
dec
addb
push
dec
call
pop
mov
push
fdivrl
push
push
test
sarl
mov
sub
test
jnp
shlb
push
or
dec
pop
push
test
pop
cmp
pop
and
and
inc
testl
loopne
cmp
pop
les
jl
into
xchg
push
shrl
mov
pop
ret
push
repz
cmp
push
loopne
xchg
ljmp
xor
mov
inc
js
push
popa
aad
aaa
mov
movsl
push
bound
jmp
push
inc
add
pushf
js
test
out
in
packssdw
fs
sar
mov
call
sub
xor
mov
sub
mov
push
jmp
dec
sahf
inc
sbb
incb
test
in
adc
out
mov
call
insb
xlat
fnstcw
pop
je
adc
xchg
xchg
mov
fisubs
cmpsb
lcall
jns
jp
or
aas
lods
dec
out
push
in
or
movsb
or
fmull
mov
aad
dec
sti
ss
sti
test
adc
int3
jmp
sbb
out
loopne
out
and
cld
mov
les
adc
push
sbb
push
xchg
movsb
das
inc
dec
jae
pop
scas
std
sbb
cld
and
sbb
push
nop
repz
cltd
popf
dec
lret
adc
iret
fdivs
pushf
aaa
cmp
mov
test
pusha
cwtl
pusha
cmp
pop
ja
jb
hlt
and
clc
cs
push
adc
test
aad
push
jl
aaa
push
jmp
fmul
xchg
or
das
jge
inc
mulb
loop
test
aas
and
mov
pop
cmpsb
lcall
cltd
cli
jbe
pop
arpl
sti
aaa
rcl
outsl
xor
dec
aas
sbb
push
sarb
ret
notb
lahf
das
ss
movb
adc
mov
int3
and
cmp
or
or
or
es
and
mov
sarb
insl
mov
aad
cmp
es
data16
in
or
sbb
sbb
push
mov
sbb
ret
push
xor
jge
rclb
mov
out
cs
idiv
cmp
lds
add
xchg
cmpsl
adc
fsubl
inc
mov
addr16
es
ss
adc
jge
dec
pop
push
nop
dec
lahf
lcall
arpl
mov
jecxz
sub
sub
add
xchg
push
rolb
jl
lcall
adc
dec
lds
push
mov
push
call
inc
push
cmpsb
scas
inc
mov
mov
rorb
mov
or
fdivrs
cmpsl
push
imul
repz
pushf
adc
aas
lds
or
in
or
std
adc
fcomps
mov
scas
sbb
lea
test
sub
test
aam
xorb
lcall
sub
pop
ficomps
fisubl
std
pushaw
inc
cli
leave
aad
xor
adc
ljmp
mov
stos
pop
push
insl
scas
jnp
scas
clc
lea
cld
or
pusha
imul
mov
jae
sti
push
fists
mov
fcmovbe
punpckhdq
push
mov
xchg
test
aas
add
test
daa
out
xchg
dec
sbb
in
movsb
ret
shrl
test
sbb
int3
cmpsb
push
aas
mov
or
sub
in
inc
popa
xor
push
lods
pop
pop
sbb
jecxz
xchg
jnp
xchg
ljmp
pop
int
push
mov
fisubl
adc
xlat
sti
inc
mov
cmp
push
mov
rol
and
xchg
leave
push
xor
rorl
stc
mov
les
orl
out
inc
xchg
jg
jecxz
in
mov
mov
xchg
incb
out
cwtl
mov
out
adc
sbb
out
jo
stos
fwait
or
std
jecxz
mull
mov
mov
push
cld
shr
add
cli
pop
mov
int
mov
outsl
hlt
add
jmp
ljmp
inc
push
mov
aaa
in
mov
mov
arpl
fcmovnbe
push
or
pushf
mov
mov
ficoml
movsb
cltd
mov
sub
insb
fpatan
pushf
into
inc
mov
jge
xor
in
pop
insl
pop
mov
jmp
pop
mov
sub
gs
xor
fisubrl
data16
or
lea
fstpl
xchg
inc
and
push
push
stc
xor
scas
mov
sub
movsl
negl
dec
push
push
std
sub
xor
mov
stc
xchg
in
cmp
out
and
ss
js
push
imul
loopne
xor
cli
hlt
pop
cli
push
ljmp
mov
mov
mov
cltd
icebp
cltd
call
mov
mov
aam
in
xchg
out
cbtw
xchg
adc
popf
nop
std
add
rol
push
push
ret
jno
push
jg
mov
mov
mov
mov
add
mov
repz
inc
movsl
sbb
mov
shll
test
loopne
fnstenv
ds
mov
es
fsubs
cbtw
inc
clc
dec
and
shll
sbb
push
push
xlat
mov
scas
or
or
cmpl
mov
jle
pusha
arpl
xor
stc
xchg
pop
pop
sbb
cmp
notl
rorb
push
bound
clc
fdivl
add
cmpsb
das
mov
add
sbb
pusha
push
dec
mov
mov
jb
mov
or
fnstcw
out
add
insb
dec
pop
rcrl
arpl
cmpsb
inc
sub
add
pop
imulb
xchg
or
inc
add
sbb
idivb
mov
pop
fstl
add
fists
sub
fimuls
fwait
cltd
out
popf
mov
add
in
dec
xchg
insb
stos
lods
xor
pusha
push
mov
and
ja
xor
push
jecxz
cwtl
inc
mov
ret
shrb
or
xor
rol
xchg
xor
arpl
sbb
into
pop
lret
aam
jno
jbe
push
outsl
adc
push
xchg
jmp
lods
repz
push
pop
mov
xchg
rcrb
test
cli
jecxz
mov
adc
sbb
mov
jmp
sarl
gs
sbb
repz
icebp
adc
jge
mov
jne
test
xchg
push
pop
loopne
daa
mov
xor
cmp
scas
ja
mov
sahf
pop
add
mov
test
inc
mov
cwtl
stos
aas
fcompl
je
aaa
cmp
pushf
jg
jno
pushl
sbb
aam
jae
jge
or
fnstcw
imul
js
jecxz
adc
vmovdqa
hlt
leave
inc
mov
cmc
lcall
test
cmp
ror
pop
dec
dec
mov
in
lods
aaa
mov
ret
lock
and
lds
pop
je
aaa
outsb
fidivrs
daa
and
xchg
nop
sahf
jecxz
cmpsb
out
hlt
mov
pop
sub
test
cmpsl
fstpt
jns
mov
mov
mov
jg
cs
ss
sub
mov
push
add
int3
or
lods
test
aam
shrb
test
mov
jl
mov
loopne
stos
adc
mov
pop
cs
iret
mov
push
out
sub
lods
mov
test
pusha
in
daa
sub
dec
lock
push
fnstcw
lret
mov
sbb
aaa
sbb
outsb
in
les
ljmp
mov
mov
pop
in
adc
sbb
in
adc
sub
push
pop
cld
sbb
push
mov
mov
mov
addr16
pusha
int3
xor
scas
pop
and
cmp
push
gs
xchg
rorb
jle
jnp
mov
add
and
mov
and
daa
les
xchg
xlat
xchg
xorl
jbe
daa
xchg
cmpsl
in
cld
int
inc
inc
pushf
sbb
ss
push
or
xchg
cld
filds
xchg
dec
addb
pop
lods
insb
addr16
mov
fld
jl
test
jnp
push
dec
or
lods
jmp
mov
cmp
lods
lahf
sbb
adc
das
ljmp
pop
jl
fimull
xchg
inc
imul
xchg
leave
test
cs
sub
push
mov
lcall
xchg
ss
lods
sub
imul
movsl
push
mov
mov
adc
cmp
xchg
cmpsb
or
push
out
sub
xchg
fcmovb
sub
sbb
push
dec
test
test
cmp
dec
xor
and
xor
jge
pusha
mov
enter
test
xor
jne
jne
mov
mov
push
mov
shlb
mov
int
inc
fwait
scas
arpl
jno
fs
sub
pop
dec
fwait
push
xchg
mov
mov
mov
fbstp
adc
add
fwait
in
lds
push
jnp
fidivl
mov
out
hlt
in
shrb
mov
ja
into
inc
push
pop
pop
push
or
imul
enter
and
mov
out
int3
mov
data16
out
lahf
mov
jbe
daa
pop
jge
lds
mov
xchg
mov
cmp
pop
sbb
popa
je
in
push
jo
jb
cs
mov
out
rorl
cmp
imul
ds
lds
or
sarl
js
addr16
int
outsb
mov
inc
incl
out
sbb
dec
mov
pop
mov
and
insl
and
stos
cmpb
sahf
pushf
sub
testl
movsl
jp
pop
push
leave
cmp
test
lahf
aaa
xor
jp
mov
adc
iret
pop
pop
push
jb
mov
ret
arpl
xchg
add
inc
push
mov
and
xor
sti
cmp
es
icebp
dec
lcall
push
jge
or
fdivs
jne
sti
cmpsb
pop
mov
jp
mov
stos
leave
ficoml
sbb
sub
pop
push
jmp
xchg
pop
in
mov
xor
sbb
aas
adc
inc
and
test
push
sbb
test
cwtl
in
fildl
aam
ficomps
push
iret
arpl
push
fsts
add
mov
je
dec
and
pop
or
push
outsb
mov
jmpw
push
rorl
comiss
sbb
xchg
mov
cmp
fdivrl
fwait
fwait
jne
ror
cmc
lcall
pusha
xor
pop
lock
lds
inc
enter
lret
je
repz
pop
xchg
push
aad
imul
xor
add
scas
cmpsl
test
pop
xlat
dec
ret
fs
mov
xchg
ja
cmp
pop
mov
adc
xor
cmp
incl
add
mov
data16
out
fadds
divl
push
fidivrs
out
pop
insb
or
jns
inc
or
loope
movsl
bound
jne
mov
mov
std
into
imul
adc
pop
cmpsl
push
test
mov
cs
out
cmp
mov
test
sub
aaa
dec
sbb
fisttps
pushf
cmpsb
xor
cmc
pop
pop
push
mov
fdivl
aad
arpl
mov
test
dec
les
push
mov
or
movsb
dec
in
rol
add
sahf
fisttpll
sub
imul
xchg
or
mov
popa
xchg
pmullw
push
inc
andl
mov
out
mov
sahf
js
fadds
js
loopne
inc
in
dec
cld
inc
lret
jecxz
dec
aad
sbb
jns
push
test
pop
sahf
jmp
pop
gs
mov
cld
jmp
sub
data16
push
imul
out
lods
lea
adc
call
pop
arpl
incl
loope
andl
inc
idivl
add
mov
jnp
repz
xor
gs
insl
fdivs
inc
mov
dec
fimull
testb
pop
out
test
jg
and
inc
sbb
inc
push
out
push
push
push
pop
mov
cmp
ljmp
cmc
fcoms
insl
outsl
lret
mov
xorl
add
pop
ret
adc
sbb
cs
push
test
jp
cmpl
pop
push
test
jge
add
mov
and
aaa
daa
push
mov
vpshufd
fisttps
popf
loopne
inc
cmpsb
mov
das
daa
adc
fldenv
fucomip
sub
mov
adc
enter
jl
lock
cmp
inc
mov
icebp
les
lea
or
mov
push
andb
sbb
xchg
lcall
pop
add
sbb
inc
test
fwait
outsl
mov
ret
add
push
movsb
sub
mov
addr16
ficoms
push
lahf
or
xchg
sub
adc
imul
and
inc
push
mov
sarb
in
pop
jp
insl
mov
andl
ss
and
dec
xchg
xor
int
inc
pop
out
int3
pop
cwtl
mov
insb
add
xchg
xchg
mov
mov
jl
mov
sub
add
pop
jae
xchg
mov
pop
fimuls
outsl
mov
lock
repz
mov
sbbb
sub
pop
mov
lret
or
imulb
xchg
addr16
stos
mov
or
xchg
mov
sub
jb
push
ja
in
in
push
pusha
lret
add
repnz
sbb
cmp
ret
xchg
inc
pop
add
xchg
cmp
rorb
mov
sub
mov
mov
fidivrl
dec
dec
movb
stos
dec
mov
pusha
sbb
cmpsl
xor
loop
xchg
leave
or
loop
cmpsl
je
dec
xchg
mov
mov
mov
mov
loopne
jge
aaa
inc
and
sbb
sbb
mov
rcrb
ror
mov
add
push
scas
pop
into
iret
sbb
mov
add
insb
push
cmp
data16
imul
loope
cli
dec
fildll
adc
js
rcll
sbb
in
mov
mov
out
xor
jg
insb
sbb
lret
fdivrs
int3
xchg
inc
pop
push
cmp
mov
icebp
mov
xor
or
xchg
jnp
clc
inc
ds
hlt
inc
cmp
pop
addr16
or
loope
in
iret
aad
xchg
sti
outsb
movsb
pop
sub
clc
jb
mov
or
xchg
stos
enter
and
xor
pushf
xchg
aaa
xchg
sub
sarl
and
xchg
ret
sub
loopne
out
push
cli
mov
pop
ja
std
mov
hlt
inc
popa
js
hlt
mov
push
dec
and
ficomps
fidivrl
addr16
fmulp
add
movl
in
pop
push
pop
out
lds
push
nop
or
cmp
ja
mov
xchg
jnp
popa
cmp
push
cmc
lds
sub
mov
mov
jmp
fistpl
les
jmp
add
dec
pop
inc
sbb
jns
sti
rorl
loopne
dec
addl
xor
xlat
inc
dec
shlb
mov
xor
adc
cmp
adc
andl
or
inc
in
cmp
and
jno
pop
pop
and
push
movq
inc
ret
adc
imulb
inc
movsb
mov
leave
push
xchg
lret
popf
mov
scas
push
jp
aad
stc
js
repnz
lock
add
loopne
clc
cmpl
or
andl
into
mov
mov
mov
iret
das
pop
xor
dec
shlw
and
popa
daa
push
rcrl
dec
add
jo
lret
cmp
andl
dec
lea
daa
pop
push
jnp
jo
out
stc
jnp
or
xchg
xadd
cmpsl
mov
add
fcoml
out
push
popa
mov
das
pop
xor
aad
int3
lcall
push
and
mov
scas
or
popf
sbb
xchg
mov
test
cmpsl
cwtl
addr16
cli
movsb
and
loop
arpl
adc
jns
xchg
sub
out
push
adc
cli
cs
leave
sti
jb
lret
mov
pop
rorb
mov
fadds
data16
sbb
jp
outsl
out
mov
lock
mov
sbb
sar
jne
add
pop
lock
les
and
sbb
pop
clc
xor
xor
loopne
push
dec
jb
mov
add
mov
ljmp
popf
mov
int
ss
insb
jp
aad
loopne
fadd
mov
cmp
cmp
orb
or
jge
adc
adc
and
in
lcall
ljmp
adc
sahf
in
push
lret
dec
roll
xor
sahf
out
fucomi
push
sbb
sub
push
push
xlat
call
sub
inc
div
mov
inc
jecxz
cmpsl
pop
mov
in
lcall
lgs
fcmove
fwait
mov
cmp
lret
pushf
in
outsl
inc
sub
add
push
push
inc
repz
push
arpl
int3
mov
loopne
mov
mov
add
pop
fwait
or
shr
not
dec
mull
add
mov
pop
sub
lret
out
movsl
adc
int
lcall
mov
adc
and
and
ret
add
mov
adcl
sbb
in
cmp
inc
pop
imul
or
xchg
sbb
push
and
iret
pop
mov
sarl
pushf
scas
xor
jle
aaa
ljmp
xor
xchg
test
cmpsl
add
jg
xlat
clc
pop
xorl
mov
lea
add
pop
pop
lea
testl
fidivs
fstpt
push
jmp
pop
lods
pop
cs
cwtl
pop
mov
scas
scas
ds
xchg
mov
mov
pusha
in
testl
repnz
jl
inc
out
out
xchg
dec
lods
mov
dec
test
aad
inc
cmpsb
loopne
call
pop
sub
mov
push
sbb
test
or
mov
mov
dec
gs
fistps
inc
dec
out
daa
movsl
sbb
rorb
je
pop
ja
ja
add
in
les
mov
mov
push
sbbl
loopne
add
lods
fsubs
fsubrp
les
mov
xor
cmp
sbbb
lea
test
or
ret
inc
daa
inc
fistpl
mov
cmpsb
cmp
repz
cmpsl
push
shlb
ds
cmp
xor
mov
adc
and
mov
mov
jo
mov
div
xlat
jl
loope
lret
loopne
adc
into
or
int
jp
xor
nop
mov
dec
inc
xchg
clc
fiadds
int
test
repz
pop
xor
fisttpll
rcl
xchg
or
add
nop
into
es
in
mov
inc
jge
hlt
jecxz
dec
mov
nop
pop
dec
and
pop
ds
movsb
sahf
aaa
sbb
or
mov
mov
xchg
pop
decb
dec
push
mov
loopne
sbb
pop
int
xchg
loope
push
ja
lcall
xor
mov
shl
sbb
pop
enter
ss
inc
jo
adc
fldcw
xchg
lcall
push
xlat
push
pop
push
add
push
outsl
fidivrl
sbb
sbb
in
or
and
sub
sbb
fdivl
movb
mov
mov
adcl
add
sarl
mov
mov
loop
push
push
sbb
push
add
aam
mov
dec
lea
xchg
pop
pop
xor
jne
jecxz
aaa
sbb
rolb
bound
and
adc
xchg
aaa
jp
jne
sbb
shl
cmpb
call
xor
aaa
into
gs
shll
ljmp
scas
test
aaa
or
and
xor
xor
inc
push
shrl
incl
adcb
aaa
inc
nop
cwtl
jno
iret
xor
push
rcr
rcr
in
cs
es
shlb
mov
dec
sahf
in
add
cmp
jb
dec
out
pushf
inc
adcb
pop
push
adc
jmp
cmp
or
dec
cmp
fnstcw
dec
mov
fcmove
adc
lea
jge
push
shll
cwtl
or
fwait
mov
dec
mov
icebp
pop
mov
jo
and
and
jno
xchg
xchg
ja
je
pop
adc
inc
outsl
stos
push
mov
neg
out
xchg
lcall
dec
fnsave
mov
rorb
push
xchg
add
repnz
jae
xchg
sti
filds
inc
xor
jbe
rorb
lock
les
aam
push
pop
or
frstor
mov
stc
cmp
sub
addr16
dec
adc
idivb
sub
fadds
or
loopne
pop
mov
push
inc
imul
xor
push
and
in
jl
lret
xor
sbb
inc
dec
or
xor
fwait
sbb
xor
ret
mov
dec
movsl
xchg
cmp
mov
daa
mov
cmpsb
jecxz
dec
cmp
mov
inc
mov
sahf
sbb
adc
jle
mov
mov
push
test
movsb
jb
or
inc
cld
sbb
xlat
lods
ret
push
push
adc
inc
es
push
adc
lcall
imul
out
into
movsl
shr
xchg
mov
je
lret
popf
inc
lea
fsubs
and
int3
xor
adc
mov
push
scas
aad
int3
mov
sbb
jmp
sbb
loopne
mov
inc
daa
ror
fcmovnb
and
fdivl
jp
and
jbe
inc
in
pop
imul
adc
mov
stos
push
int
push
mov
jg
insl
iret
gs
nop
loop
mov
pop
scas
repnz
push
cli
loopne
mov
mov
stos
addb
inc
adc
pop
out
scas
jb
pusha
subb
pop
dec
xchg
sarb
dec
and
repz
cld
jmp
push
iret
jns
or
outsb
loopne
inc
lahf
hlt
or
sti
mov
push
lahf
test
insb
fstl
cmp
inc
nop
pushf
mov
and
mov
push
out
bound
mov
mov
daa
sti
or
imul
xchg
sahf
lods
aas
aas
adc
inc
test
push
or
inc
xchg
cs
pmuludq
into
cmpsb
mov
lret
and
mov
shl
shrl
testb
inc
ds
mov
push
js
jl
int3
add
imul
out
testl
or
sub
cmp
push
hlt
bound
jle
mov
or
push
pushf
and
jp
dec
or
aaa
mov
pop
jo
loope
push
xor
nop
mov
jecxz
pop
xchg
ja
repz
bnd
daa
scas
cmp
pop
push
push
jns
push
clc
dec
push
sub
pop
jg
lods
add
xor
sub
pop
mov
arpl
lods
ret
ljmp
cmp
and
test
mov
ret
inc
mov
pop
gs
loop
jecxz
adc
sub
icebp
pushf
test
ret
mov
pop
fsubrs
leave
icebp
in
gs
loop
aam
mov
lahf
sahf
xchg
je
fistps
dec
mov
add
dec
fldl
push
or
daa
push
pushf
aam
inc
push
mov
xchg
jl
dec
sub
inc
jecxz
iret
xor
or
mov
int3
rcr
clc
and
jg
pop
insl
mov
mov
shrb
imull
out
into
pop
jnp
jo
fidivrl
jmp
clc
repnz
out
ret
push
dec
aas
push
pop
inc
sub
sub
pusha
cmp
shl
scas
cmc
add
add
pop
fimull
rolb
push
cmp
cmp
frstor
outsl
punpckhbw
aas
test
sub
lret
jg
out
stos
pusha
cmpsl
pop
bound
mov
test
loop
inc
insb
sub
test
xchg
xchg
out
mov
je
dec
ja
push
add
sbb
inc
cmp
mov
cwtl
jnp
sub
sti
dec
das
sbb
pop
add
pop
arpl
out
hlt
mov
das
fldenv
stc
ficompl
jl
push
xlat
int
sbb
jl
sahf
icebp
xchg
das
lahf
cltd
cmp
call
gs
inc
cmpsl
int
jle
inc
stc
and
mov
xor
call
xchg
dec
cld
adc
aam
mov
mov
call
pop
and
or
mov
mov
out
js
or
lock
jnp
aad
jg
or
mov
sub
add
mov
into
imul
sub
les
mov
sub
mov
shl
es
insb
dec
dec
inc
sub
sub
cmp
daa
ss
mov
jecxz
inc
test
adcl
out
xor
mov
leave
in
aad
mov
dec
into
add
push
lock
das
sbb
mov
cmp
xor
pop
incb
outsb
jmp
iret
or
stc
sbb
aam
outsb
ds
mov
jle
or
out
and
aad
cs
lret
cli
inc
icebp
xor
repz
mov
pop
mov
pop
mov
adc
ds
data16
movsb
push
mov
inc
in
sub
sahf
stos
ss
aaa
iret
loope
aaa
iret
pop
sbb
test
jmp
lret
mov
and
adc
int
mov
imul
dec
and
into
pop
cld
mov
and
test
ret
stc
push
fwait
sahf
mov
addr16
pushw
jg
pop
les
lahf
enter
repnz
test
mov
cmc
ja
rorb
popf
push
sub
outsb
aad
dec
xor
insb
std
jne
fdivrl
add
ficomps
xchg
movsl
pushl
mov
add
jns
int
ja
jb
mov
push
add
xchg
jg
or
and
xchg
daa
popf
inc
pop
mov
lahf
jae
mov
mov
in
insl
and
dec
adc
cmp
jle
mov
ret
cld
fisubrl
push
sbb
mov
push
jle
loope
sub
xor
xabort
test
iret
in
and
lods
pop
aad
stos
fsts
inc
fistpl
mulb
sub
cmp
test
push
repz
flds
testl
add
add
mov
addl
loopne
inc
xchg
out
adc
arpl
movsb
daa
je
fisttpl
rcll
inc
mov
mov
mov
lret
push
fcomi
xor
push
movsl
popf
std
imul
int3
and
pop
and
xor
jae
mov
popf
push
sub
fmuls
lods
dec
add
into
inc
scas
insb
inc
and
cwtl
cmpsb
adc
push
jns
add
xchg
or
cli
push
pop
out
aad
std
jnp
inc
xor
xor
in
inc
les
xor
ror
in
imul
movsl
out
inc
inc
jmp
mov
add
lret
cmp
pop
inc
shr
adc
push
mov
imul
ret
mov
jecxz
push
pop
xor
jmp
std
test
enter
mov
es
mov
fdivrl
rcl
xorb
sub
aad
lcall
or
iret
cmpsb
inc
popa
sarl
je
jle
push
and
pop
sahf
dec
ficoms
ljmpw
xchg
dec
mov
sub
cwtl
sbb
xor
cmpl
xor
loopew
aad
je
sbb
jb
lahf
aad
sub
addb
sub
loop
xor
shr
pop
adc
in
outsl
cmp
fcmovne
loop
xor
pop
ficomps
enter
pop
lea
xor
xlat
out
loop
or
push
shll
mov
ret
add
jg
jno
jmp
push
stc
fwait
lock
std
jl
sbb
fisttps
arpl
pop
fisttpll
inc
push
add
sub
rol
cmpsb
add
dec
lahf
aaa
gs
ja
test
cltd
pop
ds
push
sahf
adc
jp
rclb
inc
subl
fstp
xlat
xchg
mov
test
cld
push
mov
das
iret
addb
sub
shlb
sub
aaa
jl
popa
nop
lcall
dec
bound
loopne
mov
std
xor
ficompl
or
push
faddp
outsb
test
adc
icebp
movsb
cwtl
test
push
aam
fmul
mov
xchg
ljmp
inc
js
pop
mov
jno
pop
xchg
adc
mov
mov
or
cmp
xchg
dec
icebp
enter
ret
xchg
mov
xlat
pop
jne
in
mov
fisubl
and
into
aad
sahf
repnz
into
dec
out
dec
and
or
cmp
mov
pop
in
xchg
xchg
fs
roll
push
mov
xor
fisttps
ja
mov
jnp
insl
mov
xchg
outsb
mov
dec
lods
mov
shr
sarl
pop
pushf
xchg
stc
fwait
mov
mov
mov
sbb
jge
jmp
mov
adc
jmp
test
and
add
lds
mov
or
ret
cmc
pop
adc
inc
repnz
mov
pop
std
push
fimull
ret
push
mov
rolb
inc
push
mov
mov
imul
push
shr
mov
shll
daa
xor
int3
loop
cmp
js
mov
xor
rol
mov
ret
jbe
test
pop
lret
mov
sbb
push
outsl
jg
push
ret
sbb
pushf
mov
repnz
fistl
pop
inc
roll
ss
outsb
repz
insl
rcrl
mov
mov
bound
cld
movsl
xchg
adc
lods
cmpsb
and
js
lds
mov
js
stos
pop
pop
inc
imul
push
sub
inc
test
xchg
mov
pop
leave
fnstsw
inc
jecxz
adc
jno
outsl
mov
lret
add
dec
sahf
xlat
mov
adc
add
push
xor
sbb
sbb
adc
jg
in
les
and
test
push
insl
push
add
and
cs
xchg
movsb
pop
lods
mov
cmp
sbb
push
out
stc
xor
jp
cmpsl
mov
cmpsl
aaa
add
mov
add
mov
aas
xchg
cmp
add
lock
in
jmp
icebp
cld
shl
in
or
mov
lds
cs
leave
mov
xor
sub
xchg
or
mov
jns
cmc
gs
cld
cld
scas
movsl
test
mov
and
call
xchg
outsl
popf
and
xor
or
hlt
adc
pop
fs
ret
add
cs
out
xchg
adcl
lds
xorl
or
xchg
mov
pop
cmp
js
sahf
addl
stos
out
add
int3
pop
cs
cmp
xchg
and
adcl
imul
jae
mov
add
jnp
shlb
aam
inc
adc
fimull
pop
dec
mov
in
xor
sub
test
xchg
jbe
pop
mov
mov
adc
mov
fwait
adc
fsubs
mov
add
jp
repz
mov
roll
hlt
test
es
rcr
add
xchg
ret
movsb
jnp
mov
repnz
sarb
mov
add
ficompl
jne
clc
arpl
idivl
test
fisubrs
or
imul
lods
pop
in
dec
mov
stos
movsl
int
out
cwtl
lea
xchg
rcll
or
in
mov
and
jno
xchg
stos
test
addr16
lahf
push
mov
inc
cmc
sbb
jnp
jbe
jae
mov
enter
test
mov
aad
out
jb
fnstenv
mov
movsl
mov
mov
fldt
inc
loop
adc
sahf
imul
inc
leave
scas
dec
push
sti
mov
rcrl
adc
ljmp
in
pop
push
aas
mov
pop
js
mov
flds
push
fsubs
pop
in
insl
adc
test
insl
arpl
gs
pop
jp
sub
gs
movsb
je
adc
or
lcall
int3
mov
jmp
stos
lahf
loopne
lock
push
mov
mov
inc
mov
jle
xchg
lods
adcb
insl
mov
inc
gs
int3
cmp
dec
sete
test
test
sbb
inc
pusha
xchg
aad
inc
in
push
mov
mov
clc
push
mov
dec
fadds
das
int3
cmp
std
push
cltd
dec
sbb
decl
ljmp
xor
dec
push
and
mov
push
call
loope
xor
mov
pop
xor
cmp
outsb
push
or
iret
lcall
std
ret
int
stos
pop
cli
stos
or
dec
sbb
mov
mov
rcr
mov
push
arpl
and
fcoms
adc
jle
dec
stc
lret
roll
xchg
pop
addl
inc
lcall
ret
xlat
jp
lret
es
mov
sbb
popa
xchg
pop
loopne
mov
cmpsl
push
fbld
fdiv
fcom
mov
movsb
inc
popa
ss
jmp
sbb
xchg
stc
xchg
stos
mov
push
or
scas
les
jle
push
fcoms
sbb
cmp
imul
ljmp
cmp
pop
jle
mov
out
pop
shll
mov
out
test
mov
mov
add
pop
mov
push
adc
jmp
dec
popf
xor
and
dec
xchg
mov
arpl
in
pop
sahf
push
xchg
ficomps
fadds
call
mov
fcompl
movsl
fisubl
les
int3
popa
push
ds
leave
dec
push
pop
test
es
sub
cmp
xor
faddp
pop
lds
icebp
iret
into
xlat
ja
xchg
imulb
stos
mov
adc
cs
inc
dec
outsl
dec
icebp
test
lds
cmpsb
stos
pop
jl
jle
out
or
pop
insl
or
mov
push
mov
sbb
xchg
jns
mov
or
popa
sub
adc
inc
sub
cltd
cmc
stos
xchg
sbb
mov
clc
stos
cmp
adc
ja
idivb
outsb
inc
out
mov
add
dec
fidivs
push
call
nop
pop
fistps
addr16
aas
loop
insl
mov
mov
xchg
les
jmp
mov
and
js
popf
clc
faddl
imul
popf
cmc
ja
mov
cmp
push
jns
in
test
xor
fcomps
push
add
arpl
dec
add
or
jne
mov
inc
shlb
or
in
mov
sbb
xor
imul
cmp
test
mov
int
test
pop
sub
in
sahf
jnp
ja
cmc
xchg
pushf
cmp
mov
mov
mov
jns
fistl
add
sub
xchg
loopne
and
jge
pop
ss
jbe
xchg
dec
clc
mov
mov
dec
xor
or
arpl
movsl
cmpsb
mov
xor
xchg
push
push
or
clc
xor
enter
and
or
dec
mov
cltd
cmpl
add
mov
and
rcrl
popf
cmpsb
push
mov
dec
jb
mov
sbb
popa
lahf
adc
je
test
iret
or
cmpsb
xchg
jg
rorb
or
jle
jae
int
cwtl
testb
mov
insl
lea
lds
clc
in
dec
insl
imul
loope
loop
and
add
arpl
movsl
je
cld
into
mov
in
jo
rcll
ljmp
push
leave
repnz
and
or
mov
sti
cmp
adc
aam
lds
inc
adc
push
test
int
pop
psubsw
jne
imul
or
fldcw
inc
xchg
jp
push
cmpb
or
push
scas
mov
insl
fildl
mov
ljmp
insb
je
leave
pop
mov
fidivl
inc
dec
das
rcll
dec
dec
cmp
lret
pop
movb
mov
std
sbb
jnp
cmpsb
mov
stc
loopne
push
outsl
loopne
subl
inc
ja
hlt
pop
dec
ja
loopne
or
and
bound
jmp
pop
sbb
aad
std
mov
lods
push
cli
pop
xor
imul
jns
push
push
pop
bound
popa
cli
lds
jl
inc
or
mov
in
mov
mov
test
push
data16
mov
pop
jmp
popf
cmp
ljmp
sbb
cltd
in
push
adc
xchg
sub
or
push
pop
fadds
cltd
xchg
cmp
jnp
jns
aam
mov
add
pop
jg
pop
daa
push
in
jmp
sti
lock
mov
pop
push
mov
ja
jecxz
ret
dec
aaa
cld
arpl
out
cmp
and
fiadds
sbb
xor
pushf
dec
or
icebp
iret
sub
push
dec
loop
fcmove
ja
aad
imulb
mov
add
jmp
loopne
or
or
pop
arpl
cmp
mov
hlt
in
aaa
sub
enter
sub
mov
cmp
jbe
rcrl
les
sub
mov
sub
clc
sbb
xchg
pop
imul
mov
lods
push
mov
jg
aam
outsl
cmpsb
icebp
in
sub
lea
dec
lods
call
mov
mov
dec
mov
or
mov
stos
lahf
cld
inc
and
mov
mov
in
and
pop
dec
mov
stos
cwtl
jmp
mov
gs
mov
int
cmpsb
dec
mov
sbb
xchg
and
lret
repnz
jmp
xor
and
sbb
das
push
adc
xchg
leave
out
ds
daa
andb
mov
inc
fcmovne
into
pop
and
ja
xor
add
lods
stos
daa
dec
sbb
fdivl
loopne
insl
push
cmp
pop
push
jl
outsl
lret
lds
movsb
adc
push
mov
je
rcll
rclb
xchg
xor
dec
fistps
out
and
sarb
mov
xchg
fcoms
xlat
shrb
test
mov
and
add
cmpsl
adc
push
adc
movhps
call
ss
jne
jl
add
sbb
pop
lock
in
pop
or
mov
and
pop
xor
out
sahf
shlb
add
imul
or
sbb
mull
jno
mov
jl
jbe,pn
in
jmp
sti
pop
arpl
imul
pop
sbb
cmpsb
movsb
push
push
into
pusha
test
jne
ljmp
cmp
test
xchg
inc
ds
pop
es
add
jae
shll
imul
cmp
adcl
inc
adc
pop
pop
mov
shrl
in
push
arpl
push
js
bound
mov
dec
sub
xchg
les
sub
mov
jmp
dec
cmp
lcall
mov
xchg
lods
leave
inc
fsub
xchg
add
adc
and
jmp
sub
adc
push
rorl
leave
pop
inc
fwait
cmpsl
push
push
gs
mov
ljmp
call
das
movsl
jp
and
add
out
push
stc
je
mov
xchg
cmpsb
test
xor
lods
mov
push
pop
pop
dec
cltd
mov
jo
cwtl
xchg
inc
daa
loop
stos
lahf
xchg
aad
data16
jne
pop
aam
cmp
mov
sbb
jnp
push
fcmovnb
fidivs
out
fcompl
gs
sub
jnp
popf
pop
scas
inc
ret
mov
js
push
dec
push
cmpsb
cld
mov
cld
shl
or
gs
xchg
cmp
push
imul
imul
call
sbb
push
add
pmulhw
and
cltd
pop
mov
pop
mov
orl
sub
jg
inc
out
lret
cmp
push
cmp
fiadds
out
dec
ds
pushw
lahf
testb
push
into
mov
repz
loopne
inc
div
nop
jmp
addr16
pop
shrb
stos
jns
inc
or
fmul
rorl
dec
test
pop
in
dec
ljmp
lods
xor
jle
sbb
sub
aam
push
pop
inc
mov
int
das
mov
or
jo
xchg
iret
mov
jne
push
jl
sbb
sahf
adc
cmp
jl
inc
movsb
push
insb
sub
dec
inc
mov
mov
pop
push
adc
lods
stos
cmpps
in
mov
pop
xchg
mov
fimuls
cmp
mov
adc
adc
mov
sti
xchg
in
mov
xchg
imulb
push
aad
xor
test
sbb
gs
into
outsb
dec
imul
jle
in
daa
fwait
test
dec
movsl
idivb
and
mov
and
iret
fstp
cmpsl
lock
lea
mov
ja
push
js
or
pop
stos
mov
adc
sbb
jge
pop
and
lds
xchg
push
orl
lret
shr
cmp
aaa
lock
and
push
pop
lret
stos
lds
adc
loopne
fcmovb
call
popf
arpl
or
es
das
mov
pop
in
cmp
clc
xchg
ss
adc
dec
jmp
movsl
movsl
xor
sub
inc
mov
jo
aas
mov
and
and
or
ret
cli
and
xorl
adc
outsb
pop
push
jb
sub
or
cmp
add
sub
xchg
mov
enter
jmp
ret
mov
lods
mov
xchg
cmpb
les
shl
cltd
jbe
cmp
add
into
fisttpll
mov
cmpb
cmp
imul
ja
mov
repz
inc
into
mov
push
jne
xchg
notl
arpl
adc
aad
dec
sbb
cmp
lret
fcomps
lahf
xchg
ficomps
xchg
mov
ficoms
stos
pop
not
lock
shll
inc
popf
pop
push
mov
in
jb
outsb
pop
imul
mov
inc
cmpsb
jo
out
pushl
mov
aaa
ja
je
gs
out
lret
lock
int
repnz
cmp
jb
xlat
arpl
push
dec
adc
dec
add
jnp
push
jl
mov
das
jp
call
inc
mov
clc
push
adc
lahf
dec
sbb
std
std
adc
cltd
mov
inc
lcall
addb
fimuls
scas
pushf
lret
and
loopne
sbb
or
mov
push
mov
lahf
pop
jp
jbe
mov
jg
adc
jne
out
pop
xchg
jl
jns
roll
clc
insl
ret
sahf
enter
sahf
adc
imul
popf
push
mov
xchg
sbb
sub
movsl
movsl
jp
or
ret
out
mov
mov
jnp
mov
mov
out
inc
jno
jno
ficomps
dec
or
mov
push
xor
or
in
cmp
imul
dec
and
lods
rorl
les
fisubrl
xchg
sub
mov
mov
addl
jbe
inc
adc
stos
rcrb
push
push
jl
pushl
push
jnp
pop
sub
lods
mov
mov
shll
stos
jp
pushf
ds
pop
lock
divb
insl
lds
dec
lock
sbb
adc
in
shll
pop
or
sarb
call
mov
dec
inc
inc
in
cmp
arpl
push
lcall
movsb
dec
int3
adcb
cmp
dec
repz
mov
cltd
test
test
fwait
pop
loop
in
pushf
movsb
cmpsb
adc
dec
roll
int
jg
sub
cmp
adc
and
aad
add
dec
lahf
scas
xor
cmpsl
cmp
fildl
imul
imull
rclb
jecxz
add
out
inc
or
jmp
subb
pop
lahf
mov
pop
add
aam
and
ljmp
out
or
xor
or
test
ds
jecxz
sub
and
aaa
arpl
fdivl
cmpsb
es
movsl
outsb
jnp
push
jecxz
scas
movsb
lahf
cmp
test
int
lcall
xchg
in
cmp
rclb
inc
rorb
ja
cli
and
icebp
sbb
ds
cmp
xchg
insb
test
mov
adc
jmp
sbb
xor
js
or
and
jnp
lea
xchg
mov
jns
mov
push
pop
pop
mov
cli
lock
add
leave
and
in
mov
cmpsl
mov
into
xlat
xor
mov
pop
test
iret
les
jge
xchg
mov
fwait
dec
sub
in
mov
inc
and
pop
mov
jno
or
sbb
andl
in
imul
bnd
cmp
arpl
js
pop
fs
cmpsl
push
add
into
sahf
inc
fmuls
call
add
insl
fwait
pop
les
gs
mov
xlat
arpl
in
shll
mov
imul
leave
aam
aam
mov
pop
adc
jnp
or
mov
mov
pushf
cmp
cmp
add
pop
into
mov
jae
sahf
add
lods
jnp
inc
inc
leave
or
cli
fwait
sub
in
call
nop
stc
icebp
shrb
xchg
enter
pop
rcll
int
aam
or
xchg
mov
xchg
xor
lcall
cmpsb
je
nop
cmp
loop
lahf
xor
or
shrb
mov
or
and
ret
jl
xor
mov
sbb
popf
pop
aad
insb
insb
rcrb
and
inc
int
rcr
mov
out
fisttps
cltd
sbb
cmp
inc
push
fcmovnb
or
lock
push
mov
jb
fwait
mov
shl
adc
nop
repz
jl
jecxz
js
xchg
cmp
xlat
inc
cmpb
dec
outsl
pop
adc
pop
repz
add
push
filds
push
ss
pop
and
and
test
clc
ss
push
sbb
nop
push
push
sbb
pop
mov
mov
ret
xchg
arpl
mov
fisubrl
aaa
push
or
dec
gs
mov
jp
jmp
notb
fcompl
jae
leave
adcb
push
push
decb
cld
mov
push
pushf
jle
pop
push
push
dec
outsl
clc
mov
jge
loopne
cli
call
sbb
push
mov
stos
mov
cmpsb
in
and
xor
popf
sub
sbb
xchg
push
push
icebp
fcomi
sahf
push
or
inc
fsubs
mov
jmp
outsb
cmp
shll
fs
popa
es
test
push
inc
mov
dec
stc
push
lcall
pop
mov
sub
sub
daa
push
popf
jnp
call
mov
test
cld
dec
lret
addr16
dec
daa
aam
xor
jne
cmp
adc
jo
sbb
lret
movsl
adc
and
push
or
adc
add
or
add
in
push
mov
push
mov
or
sbb
inc
roll
xchg
test
pop
std
ret
out
sbb
aad
mov
cmpsb
ds
in
xchg
pop
xchg
cmp
mov
cltd
push
mov
daa
out
adc
jnp
pop
mov
arpl
test
jae
enter
fidivrs
fidivs
cmp
cmp
in
push
mov
shlb
xchg
cmp
lcall
dec
repz
adc
insl
sar
jmp
cld
mov
outsl
xchg
imul
repnz
xor
les
add
enter
pop
or
lock
add
not
test
ret
cmpb
cmp
cltd
movsl
cmp
inc
or
sbb
sahf
cwtl
pop
enter
sub
xor
pop
jo
sti
mov
dec
fcoms
bound
pop
mov
add
cmp
lods
push
mov
jno
mov
scas
xor
cmp
in
sub
mov
jb
jno
push
shl
xor
addb
leave
xchg
dec
cmovne
cld
bound
int3
stos
dec
cmp
sbb
mov
jbe
adc
mov
dec
jp
xlat
dec
dec
lea
popf
mov
mov
bound
sub
fiadds
mov
xor
inc
pop
scas
pop
pushf
js
icebp
aad
pop
aaa
add
scas
push
push
pop
xchg
cmpsl
cmpsl
cmpsl
jno
stc
aaa
and
aam
add
das
adc
mov
inc
out
inc
fisttps
int
jnp
test
fisttpll
mov
jle
mov
lods
and
jmp
adc
sahf
jecxz
dec
je
add
fnsave
daa
xor
loope
aaa
mov
stos
aam
aas
xchg
xor
xchg
jge
jg
cmpsl
mov
bound
cmp
mov
rcll
cmpsb
hlt
inc
adc
aad
ret
pop
push
ja
aaa
call
mov
mov
xchg
adc
mov
test
pop
inc
movsb
mov
loop
xchg
fldenv
int
aas
movsb
xchg
push
in
lods
push
pushf
or
mov
mov
scas
nop
nop
adc
aaa
lret
xchg
enter
lahf
dec
in
std
in
xchg
add
inc
fcmove
push
js
pop
cmp
outsl
xchg
and
pop
sub
add
xchg
adc
xor
xor
sarb
clts
lock
add
adc
dec
mov
push
add
mov
leave
stos
pop
outsb
loope
pop
adc
leave
mov
lahf
mov
sbb
loop
push
inc
pop
xor
in
xchg
xor
movsb
mov
push
mov
frstpm(287
mov
mov
into
mov
inc
jge
add
mov
cmpsb
fcoms
mov
fnstenv
imull
add
or
lret
lea
ljmp
hlt
inc
andb
pop
mov
rcrb
cld
scas
add
or
inc
lods
jnp
or
pop
ss
mov
pop
int
ja
mov
inc
sbbl
push
pop
data16
jnp
jbe
mov
mov
pop
cmc
pop
dec
cmc
gs
and
loopne
jl
jl
imul
fidivs
or
pop
or
mov
jnp
sub
lods
pop
mov
jecxz
push
pop
mov
rep
fstpt
add
imulb
cltd
xchg
mov
cmp
aas
push
in
pop
pop
xchg
aas
jnp
stc
int
std
dec
and
or
icebp
fistpll
popaw
xchg
xor
push
sbb
sti
cmp
in
mov
push
xchg
aaa
dec
cmpsl
mov
sbbl
inc
pop
push
dec
outsb
mov
insl
and
pop
fldt
dec
mov
jp
int3
add
pop
sub
mov
cli
adc
into
jno
cmp
fists
mov
sub
mov
iret
aas
xor
mov
sub
or
cmc
ret
dec
mov
inc
xor
stc
aad
scas
orb
jle
imul
sbb
xchg
pop
or
inc
jns
sahf
xchg
pop
sub
dec
fldcw
jge
adc
xchg
fldenv
ljmp
pop
pop
or
stos
push
in
movsb
cmpsb
mov
les
in
lret
or
dec
and
aaa
fsts
ret
mov
frstpm(287
xor
mov
into
dec
jge
sub
pop
and
hlt
dec
lock
cmp
sub
addr16
int
stos
scas
xor
add
out
loop
js
push
hlt
mov
mov
daa
repz
push
lds
dec
loope
mov
inc
adc
push
add
lret
xor
mov
repz
jne,pt
mov
lea
or
fisttpl
arpl
and
in
mov
inc
shlb
scas
pop
lret
subl
inc
dec
lret
insb
mov
cmc
imul
mov
pop
xor
lds
pop
das
movsl
outsl
mov
inc
loopne
xor
ss
out
js
inc
repnz
pop
jno
pop
inc
adc
lds
fmuls
cmc
loope
adc
xchg
push
stos
adc
sarl
dec
andl
imull
inc
sub
adc
aas
cmp
fwait
ja
add
pop
sub
inc
mov
dec
or
imul
sub
imul
sub
adc
sbb
shlb
jecxz
or
stc
mov
sti
faddp
sub
popa
fwait
adc
loopne
push
cmp
sub
ljmp
xchg
lea
xor
adc
sarb
mov
lods
xchg
inc
movsb
repz
adc
jns
or
andl
cld
insb
jo
xchg
pop
loop
addr16
xchg
or
push
xchg
mov
cmp
push
test
adc
push
pop
xchg
sbb
into
loope
idivb
xchg
sub
lret
out
ds
ljmp
or
int3
outsb
pop
add
push
mov
sahf
dec
jno
and
shll
xchg
scas
push
dec
sbb
sub
sub
pop
xchg
les
inc
outsl
jmp
xlat
bswap
sbb
stos
push
cmpsb
or
dec
mov
or
push
jl
mov
mov
popa
stc
icebp
in
mov
xor
rclb
clc
inc
jle
push
iret
and
enter
pop
fwait
cmpsb
test
xorl
ret
jmp
fwait
push
pop
cmpps
je
repz
jp
outsb
outsl
mov
out
jp
decl
out
push
or
sbb
sti
sbb
jae,pn
push
jmp
xor
jb
movsl
lahf
xchg
hlt
out
das
test
fwait
mov
xor
jecxz
pop
mov
pop
inc
lret
std
dec
jmp
mull
push
mov
inc
fnstcw
sub
fcomps
jb
inc
int
sbb
lret
inc
push
inc
or
mov
mov
xchg
sahf
lahf
adc
push
push
fdivrl
stc
mov
bound
dec
lods
orl
or
mov
imul
xor
sub
sbb
std
and
and
adc
aam
adc
stos
sub
movsl
add
ds
cmpsb
or
pusha
popa
dec
xchg
fidivl
shlb
adc
jmp
rcll
xchg
push
sbb
sahf
pusha
jae
xor
cmp
call
dec
out
xchg
imul
and
bound
fildll
lret
mov
push
mov
out
jle
cmpb
adc
xchg
lahf
test
push
add
xchg
sbb
cmp
mov
sti
test
loope
aas
movsb
insb
ret
test
adc
push
dec
mov
add
call
pop
jo
rorb
inc
mov
pop
inc
cwtl
shr
cmp
je
jne
scas
xchg
inc
insb
pop
push
gs
and
subb
scas
addl
inc
fnstcw
les
dec
xor
sub
fmul
pop
adc
loop
lcall
and
mov
pop
jecxz
add
jo
inc
ljmp
sarb
dec
mov
or
mov
loop
mov
loope
sbb
sbb
popf
nop
inc
cmc
js
jno
pop
std
aam
pop
lods
mov
stc
push
jg
gs
mov
adc
dec
mov
mov
fsubrp
enter
mov
fnstenv
movb
jp
inc
jl
out
push
ja
je
or
addl
popf
inc
iret
pushf
xlat
test
add
lahf
fucomp
jp
test
fistpll
jae
jb
add
mov
mov
or
pusha
pop
mov
ret
js
jno
cmp
mov
imul
xor
imul
push
call
sbb
add
andb
xchg
dec
mov
xchg
aam
lds
out
cmp
test
icebp
ja
xor
jnp
and
pop
hlt
nop
je
mov
push
xor
ljmp
adc
cmpsl
idiv
push
push
adc
dec
sub
sahf
lods
sub
pop
push
or
and
cmc
and
pop
idivl
int3
int
add
les
sbb
lahf
lock
sub
mov
jbe
ret
cmp
fcmovu
adc
stos
jp
and
ret
jecxz
test
aaa
repnz
cmp
insl
mov
inc
cmp
jne
jl
sarb
xor
insl
in
loopne
cmpb
jle
sbb
xchg
lahf
repnz
lret
mov
push
clc
std
sub
loopne
dec
push
bound
cwtl
xor
fiaddl
inc
rolb
pop
mov
stc
fcom
cld
arpl
dec
jmp
cmpsl
add
imul
jg
inc
add
xchg
add
scas
fsincos
pop
dec
lret
stos
or
imul
scas
push
pop
jne
push
xchg
xchg
pop
arpl
mov
dec
cmpsl
jp
sbb
jecxz
lret
sbbb
jmp
cltd
add
dec
sub
dec
mov
adc
jmp
rcrl
rcrl
jo
out
xor
clc
cli
push
adcl
lret
xchg
adc
scas
and
test
shr
pop
adc
pop
sbb
xchg
addl
add
imul
dec
jnp
add
sub
mov
aas
mov
data16
outsl
jnp
test
push
shll
inc
gs
push
loopne
loop
pushf
lret
dec
test
fwait
xchg
jb
adc
jp
cmp
roll
les
gs
test
sub
fimuls
mov
daa
imul
addr16
jecxz
fsub
and
dec
and
test
pop
add
jns
pop
jp
xorl
icebp
xlat
mov
pop
mov
or
and
fs
push
xor
lea
dec
cltd
imul
or
inc
inc
xor
cmc
fmul
pop
and
dec
cmc
add
dec
cmp
iret
shl
roll
sbb
cmpsl
mov
insb
pop
in
loop
adc
test
int3
aaa
add
test
inc
jae
mov
cmp
and
arpl
add
lods
adc
scas
cltd
adc
stos
out
sbb
movsl
negl
xor
int3
cld
decb
fldenv
in
jl
pop
js
add
inc
xor
pop
into
gs
es
add
sbb
aaa
cmp
inc
icebp
xchg
mov
push
xor
sbb
std
out
xchg
dec
adc
add
adc
jecxz
mov
mov
push
lods
test
push
adc
cmp
or
jb
add
inc
sub
fmulp
jmp
rolb
xor
push
fwait
mov
das
adc
pushf
out
push
in
xchg
jne
sti
lret
and
pop
add
dec
lret
adc
mov
sbb
xor
scas
sub
add
aas
insl
jp
shrl
lods
add
add
call
xor
cs
aaa
in
in
imul
inc
dec
push
and
addr16
rcrl
inc
es
mov
dec
mov
std
push
inc
dec
call
leave
mov
or
and
cmpsl
shr
xor
push
sbb
insl
mov
dec
fldcw
sub
dec
xchg
test
repz
pop
imul
out
adc
fiadds
ss
loopne
ja
jno
cld
fcmovb
pop
xor
cwtl
dec
inc
push
lds
enter
cmp
and
xchg
stos
out
xor
sbb
cmp
xor
imul
fldt
add
test
inc
sbb
dec
imul
std
add
cmc
loope
insl
stc
mov
cld
out
or
into
push
std
addl
subl
fsub
cwtl
pop
mov
shll
rclb
and
ficoml
mov
cmc
movsb
aaa
psrad
std
aad
jo
repz
xor
outsb
subl
cmp
je
out
add
in
ljmp
fimull
int3
jne
mov
cmp
pop
jbe
and
pop
xchg
or
gs
sbb
and
fmulp
adc
xor
and
mov
push
cmpsb
xchg
inc
lock
call
pushf
jle
cmpsl
ret
loopne
sbb
mov
in
aam
scas
mov
xchg
push
loope
movsb
mov
cs
daa
lock
and
fwait
inc
mov
mov
rsqrtps
inc
ljmp
ds
fstl
cmp
xchg
mov
pop
or
shlb
test
loop
or
lea
and
stc
jnp
mov
sbb
cld
loope
gs
lcall
arpl
mov
testl
or
pop
mov
cld
sbb
cmc
mov
rolb
jg
mov
out
xchg
lock
ds
outsb
aad
mov
nop
rcl
mov
mov
stos
xchg
xchg
jb
xchg
jno
mov
shll
xor
push
ret
cmpsb
adc
or
fdivp
push
jae
mov
fcmovb
orl
dec
test
push
in
loope
jl
xchg
je
je
sbb
dec
xchg
subl
loopne
xor
pusha
loope
jae
push
and
sub
popa
mov
cmpsb
sbb
cmpsb
js
or
inc
lret
push
xor
lods
adc
std
mov
cmpsl
or
dec
pop
or
jl
push
pushf
mov
mov
sub
insb
xor
out
fistps
push
xchg
inc
das
wbinvd
xor
pop
arpl
mov
rcrl
roll
cld
test
cli
dec
dec
jb
push
mov
dec
mov
mov
mov
add
jb
ret
xchg
inc
inc
popf
scas
shl
pop
adc
imul
push
mov
push
clc
lret
ds
mov
and
mov
adc
call
in
insl
add
or
ss
cwtl
ljmp
adc
push
addl
and
adc
mov
lret
sub
mov
ds
test
mov
dec
sarb
mov
xor
push
xor
scas
adc
cmp
scas
hlt
push
test
daa
and
stos
fstpt
jnp
int
dec
dec
cmpl
mov
jge
into
push
sub
mov
std
pop
mov
or
stos
xchg
inc
shrb
jp
jecxz
cltd
mov
notb
insb
pop
cld
sar
mov
xor
les
lret
push
fs
push
imul
movsl
incl
pop
cmp
roll
jcxz
push
ds
arpl
and
loopne
insb
xchg
xorl
lcall
ficoms
add
testb
fucomip
cmpb
dec
and
adc
js
ja
xchg
push
inc
pop
adc
arpl
shlb
cld
sti
in
fwait
inc
pop
cld
mov
shrl
dec
sbb
clc
pop
les
cmp
pushf
inc
push
decl
mov
filds
xor
arpl
sub
mov
int3
push
sub
hlt
inc
adc
pop
loope
sbb
mov
mov
jo
and
lods
lcall
push
inc
shrl
push
cmp
loopne
loope
iret
lcall
imul
scas
jg
outsl
add
jbe
pop
aaa
cmpsl
sbb
jmp
push
pop
cli
sub
push
push
sets
push
mov
sub
jle
lock
dec
rclb
jmp
ja
insb
or
push
or
dec
clc
test
fisttpl
add
ficoml
jl
dec
pop
into
into
mov
loop
and
ja
in
mov
subb
dec
push
push
or
lahf
aaa
stos
popa
loopne
in
mul
mov
push
mov
cs
repz
push
data16
jle
xlat
mov
clc
push
shll
push
icebp
xchg
or
inc
call
mov
and
insb
jae
lea
fcmovne
daa
into
sub
je
inc
movb
jno
sub
add
sub
pop
lcall
addb
or
stos
fists
imul
push
test
test
rolb
aam
dec
icebp
es
lcall
loop
mov
in
mov
and
dec
loopne
sub
enter
ljmp
mov
dec
add
lret
cmp
dec
cld
dec
stc
sub
repnz
mov
incb
pushf
fcoms
fcmovb
add
ret
dec
push
and
dec
scas
cmp
sub
scas
pop
adc
push
filds
xchg
sub
insb
test
mov
sbb
jl
outsl
in
cmp
adc
lcall
lock
fidivrs
mov
negl
xorl
mov
cmp
aas
push
mov
cli
lods
cmpsb
test
dec
sbbl
or
mov
xchg
cmp
icebp
push
adc
js
cwtl
add
imul
dec
add
mov
mov
imul
mov
mov
popf
xlat
xor
push
ja
cmp
sti
xchg
aam
push
and
cmp
sahf
mov
aam
push
cmc
shrb
jle
add
xor
xlat
call
and
mov
jno
sbb
adc
xor
mov
cmpsb
loope
sbb
stc
lahf
test
cmp
dec
mov
mov
sbb
sub
mov
mov
mov
rcll
popa
int3
mov
lret
test
xlat
sbb
aam
leave
icebp
mov
mov
es
iret
stos
ret
gs
nop
int
xor
clc
or
lret
or
mov
lcall
dec
pop
mov
push
jno
pop
loop
jo
imul
and
cmp
pop
push
xchg
inc
fwait
outsl
sbb
outsb
sub
rorb
cs
pop
cmpsl
pop
sub
add
pop
and
push
out
in
out
sub
fwait
adc
xchg
sti
pop
sub
hlt
mov
and
insl
mov
sub
jmp
sub
stc
loop
imul
daa
ljmp
pusha
adc
pop
mov
shll
push
and
xor
out
adc
dec
out
fstpl
insb
jo
movsb
daa
or
jno
fistpll
add
ret
inc
cmp
test
repz
mov
jge
xchg
jbe
aad
stc
xor
shrb
mov
cld
bound
inc
xlat
pop
mov
lret
add
sub
iret
scas
sar
outsb
aad
stos
lock
mov
ja
xchg
mov
dec
daa
hlt
subb
je
mov
dec
inc
add
aaa
aad
or
stos
pop
clc
pop
stos
mov
push
xor
xor
in
ds
cmp
in
mov
fxtract
push
mov
and
mov
sbb
cltd
push
adc
out
lods
test
pusha
sbb
or
test
xor
sbb
push
sub
dec
decb
and
lods
call
sbb
push
ljmp
bound
addr16
adc
xchg
dec
and
lea
nop
pop
in
xchg
pop
jmp
lret
and
std
icebp
sub
ljmp
or
cmp
aaa
stc
daa
mov
icebp
push
in
popf
adc
push
inc
jb
movsb
popf
repnz
movsb
cmpsb
out
in
push
sub
dec
lret
mov
sub
dec
xlat
mov
in
call
dec
sbb
lret
vmwrite
repz
inc
lcall
mov
addr16
pop
rcrb
xor
jg
das
or
lods
lock
cmc
test
add
or
nop
stc
clc
mov
fisttpll
xor
pop
sbb
movsbl
push
popa
push
or
or
ds
jno
or
repz
enter
gs
jmp
icebp
push
enter
fs
scas
cmpsl
or
cld
std
xor
fisttpl
fcomi
or
xor
dec
push
add
pop
mov
xor
cmp
insl
add
fcmovbe
pushf
cmp
nop
test
and
mov
mov
ret
test
jmp
dec
testl
cs
push
pop
ret
addl
lods
test
outsl
jne
sub
loop
fnstsw
loope
dec
push
stos
ljmp
pop
movsb
mov
ret
dec
addb
gs
sbb
icebp
lods
dec
lret
adc
dec
xor
arpl
jge
adc
add
out
mov
push
dec
insl
loop
decb
xchg
pop
cmp
fsubrs
movsb
and
xor
incl
and
jg
jecxz
hlt
adc
sahf
add
push
adc
xlat
mov
xor
push
enter
dec
mov
jno
push
add
pop
adc
sub
cmc
xchg
sbb
xchg
in
stos
ljmp
leave
dec
add
popf
out
in
mov
out
jmp
jbe
lcall
ret
incb
dec
pop
flds
rcrl
arpl
push
ljmp
jne
xor
push
and
inc
shlb
inc
idivl
data16
xor
dec
in
or
rcl
fisttpl
mov
sti
and
add
je
mov
dec
mov
rol
jb
adc
sub
pop
sbb
loopne
inc
into
loop
sbb
sub
lods
inc
jne
mov
bound
or
sbb
pop
jg
int
test
enter
xchg
jae
pop
mov
jle
xchg
pop
fwait
mov
fsubs
ret
les
scas
xor
pop
ljmp
xlat
push
gs
out
hlt
jl
testb
fisubs
clc
push
sub
jo
add
xor
stc
mov
imul
dec
stos
cmp
push
aam
stos
aad
mov
negb
jp
fwait
jo
in
stos
push
push
inc
dec
pop
cmp
sbb
fiaddl
cmpl
mov
xor
sub
pop
cs
pop
icebp
jmp
test
pop
cmc
mov
filds
in
add
mov
mov
jg
xor
out
cwtl
sbb
and
lea
or
jae
clc
adc
xchg
sbb
push
cwtl
mov
arpl
ds
jg
pop
into
pop
decl
add
pusha
enter
scas
mov
hlt
sub
jg
and
pop
xor
addl
in
xchg
mov
jns
lahf
stc
imul
cmp
xchg
add
or
fimull
hlt
pop
push
stc
adc
sub
out
pop
cmpsb
xchg
jno
sbb
and
ss
push
enter
inc
mov
push
bound
daa
xor
xchg
cli
icebp
fcomps
sub
mov
movsb
and
push
jnp
inc
shlb
pop
das
je
and
arpl
push
pop
cmp
jne
sar
sbb
dec
pop
push
xchg
shl
pop
lret
ss
push
les
outsl
int
rcll
inc
int
insb
jp
adc
lock
adc
pop
cmpl
repnz
in
test
data16
jp
inc
add
daa
pop
popf
sub
add
adcl
into
push
nop
cmp
gs
sbb
loop
sbb
jae
fwait
mov
outsb
push
test
mov
dec
jmp
cmp
add
sbb
jb
mov
imul
sbb
xchg
add
js
jmp
jle
and
in
sub
sub
cmp
inc
push
call
lret
dec
repz
lea
xchg
lcall
mov
push
or
xor
nop
and
stc
insl
mov
int3
xchg
aam
lock
xlat
test
ret
jno
mov
sub
pop
fwait
sbb
fbstp
loope
adcl
push
mov
push
aam
push
loop
dec
xor
pop
popf
mov
adc
jns
fmuls
lock
divl
dec
mov
imulb
sti
lock
test
cmc
out
outsb
inc
mov
shr
or
iret
mov
repz
push
mov
add
aaa
dec
fcompl
pushf
cmp
inc
lret
adc
pusha
jbe
mov
mov
cmp
insl
mov
xor
repnz
and
ljmp
xchg
mov
mov
dec
test
arpl
mov
jl
int
push
mov
and
lock
cltd
pop
and
out
fs
mov
mov
adc
mov
int
ljmp
or
cmp
sub
mov
ret
sub
jle
or
and
aaa
mov
repnz
inc
inc
les
bound
fwait
movsb
fsubs
shl
jbe
mov
aas
and
xchg
hlt
sahf
pop
jp
movsl
pop
movb
cmpsl
mov
push
push
mov
gs
js
adc
loop
jle
imulb
lock
dec
outsl
dec
lahf
xlat
cmpsb
inc
mov
sbb
push
mov
leave
outsb
sub
push
xor
push
daa
fs
std
fsubr
sbb
mov
ret
push
mov
stos
dec
and
jb
in
add
jle
daa
cmp
and
addr16
fsts
std
imul
icebp
xor
push
scas
adc
mov
cwtl
adc
hlt
test
jecxz
aaa
jo
lods
insl
out
mov
adc
mov
sub
xlat
mov
xchg
pop
xor
es
push
lret
movsb
fnstcw
add
test
or
xchg
rcrl
mull
or
push
in
int
dec
jb
adc
ss
mov
xchg
or
mov
sti
sbb
jge
xor
mov
xchg
xor
mov
adc
jno
adcl
loope
lret
inc
adc
lahf
inc
pop
movsl
out
ljmp
inc
pop
mov
or
jbe
jb
sbb
jne
push
repnz
movsb
fmuls
fwait
popw
cmpsl
shll
outsl
fstl
out
or
or
inc
xchg
cmpsb
imul
jge
mov
lcall
pop
inc
mov
mov
scas
jae
push
arpl
in
and
pop
mov
andl
jmp
frstor
movl
arpl
mov
out
bound
pop
dec
incb
pop
jmp
xchg
inc
and
adc
js
sbb
sti
cmpsb
mov
inc
xchg
test
mov
sbb
orb
imul
pop
dec
call
jecxz
mov
sub
je
pop
loopne
stos
push
mov
les
dec
sbb
das
cmp
pop
xlat
lea
movsb
pushf
jbe
and
xor
cmp
les
jae
sahf
pop
pop
sbb
pop
push
and
inc
jns
xchg
mov
jo
mov
push
clc
sbb
leave
js
scas
pop
pop
repz
js
cltd
clc
mov
inc
push
inc
bound
fcmovnb
xchg
out
sets
mov
jmp
test
cmp
push
pop
dec
aad
movsb
push
in
cs
inc
add
movsl
sar
xor
rorl
popa
xchg
sbb
inc
scas
mov
leave
dec
mov
aad
ficoml
and
stos
or
popa
dec
insb
clc
out
sti
sub
test
xchg
cmp
out
xchg
mov
sbbl
xor
cmc
mov
xor
xor
popf
repz
add
pusha
pop
jbe
mov
jnp
lods
mov
pusha
sbb
jmp
pop
pop
mov
scas
jns,pn
inc
fs
ja
and
dec
mov
pop
bound
inc
das
fstpl
rcl
pop
pop
push
sub
sbb
cltd
push
lret
xor
mov
push
push
jge
rsm
jb
inc
inc
xchg
fcompl
icebp
cltd
gs
mov
push
sbb
enter
sbb
lods
xor
and
fldt
sahf
mov
push
pop
inc
push
inc
push
push
in
xchg
sbb
pop
aaa
and
jne
sbb
mov
or
inc
out
pop
sarl
mov
int3
out
adc
cli
jns
mov
jbe
and
jmp
mov
or
adc
sbb
shlb
sub
mov
lahf
fistpl
mov
int
and
adc
push
inc
jns
jmp
aas
movsl
mov
mov
pushw
icebp
cmpl
adcl
dec
mov
sahf
aad
mov
aas
and
sbb
mov
and
cmp
mov
cmpsl
cmc
fiadds
fdivl
or
sub
and
dec
imul
js
ljmp
movsb
inc
add
cmp
in
adc
adc
mov
mov
add
mov
xlat
jge
push
push
cmpsb
pop
dec
test
or
push
stos
das
adc
in
outsb
jae
ljmp
dec
and
cmp
bound
ficoms
lret
outsl
mov
xor
cmp
aas
xchg
testb
rclb
rorb
leave
orl
xor
push
sub
adc
pop
out
xor
inc
ja
add
adc
in
rolb
adc
cli
push
dec
pop
gs
or
dec
add
loopne
push
inc
adcb
loope
jno
and
pop
xchg
fcoml
adc
cmp
add
je
popf
andl
xchg
jb
jno
xor
lods
adc
push
outsl
and
cmp
lea
ret
popf
jl
aas
xor
insl
push
push
xchg
jne
test
sbb
xor
cli
mov
cmp
es
jno
dec
add
ficomps
daa
and
fisubs
adc
cwtl
sbb
mov
fucomi
mov
inc
shlb
mov
or
xchg
pop
dec
or
inc
jmp
adc
fcomps
fdivrl
mov
subb
test
outsl
push
cmp
mov
enter
push
ficomps
mov
sar
popf
xor
xchg
pop
xor
mov
loopne
inc
dec
lds
push
fsubr
hlt
test
jg
sub
cmp
les
or
int
ret
loope
shrl
in
lret
lea
ja
subl
and
jle
leave
test
fwait
scas
xor
push
adc
ret
loope
and
mov
pop
or
jne
mov
gs
mov
dec
in
call
decl
nop
push
jmp
mov
clc
mov
int3
or
adc
sub
jl
data16
jae
push
xchg
jno
sbb
xchg
xchg
ja
dec
cmc
ret
cmp
dec
inc
pushf
and
sub
fwait
les
lret
mov
out
push
repnz
push
addb
ljmp
sahf
repz
mov
mov
xchg
inc
xor
xchg
repnz
sub
addps
and
xorb
lods
jae
mov
roll
and
fs
lea
xor
cli
push
popf
test
mov
dec
pop
add
movlps
push
aam
call
cs
pop
cltd
fistpll
and
mov
dec
mov
aad
cmp
mov
mov
cmp
cltd
cmp
ret
mov
fpatan
mov
ljmp
xchg
mov
std
in
push
ljmp
adc
lret
pop
dec
insl
frstor
shll
push
pusha
lock
call
add
sbb
push
xchg
negb
jbe
jge
out
push
loopne
les
outsl
xor
aaa
push
fcoms
cmpsb
xchg
into
mov
pusha
js
lock
cmp
loop
and
xor
fidivs
jo
sub
mov
imul
or
int
add
add
je
mov
xchg
gs
pop
cmp
mov
fsubr
ja
out
pop
mov
sub
sub
inc
cmp
and
mov
stc
adc
add
mov
testb
mov
sbb
cmc
push
es
xor
or
xor
push
xchg
test
push
jmp
add
pop
push
sbb
das
clc
push
pop
fsubrs
shl
aas
sub
in
test
outsb
jg
pop
push
inc
pop
mov
fcomi
jmp
cmp
int3
adcb
cmp
test
cmp
popf
mov
adc
test
mov
shll
cs
or
aas
pop
out
loopne
cmp
inc
mov
xor
outsl
xor
push
push
mov
iret
mov
lods
xor
fiadds
ret
cmpsb
dec
push
ja
neg
mov
xor
xchg
scas
cmc
in
pop
bswap
xor
dec
push
add
js
push
and
std
inc
inc
and
jo
ljmp
push
lcall
lret
adc
repnz
sahf
sbb
stc
testb
rolb
shlb
xchg
fildl
stos
orl
xchg
adc
sarb
scas
ret
xchg
dec
sub
bound
pop
out
sahf
push
repz
int
mov
js
dec
outsb
push
mov
nop
test
adc
inc
pop
jl
adc
pop
mov
imul
shl
adc
jle
dec
sbb
mov
cli
mov
jne
out
mov
adc
jge
sbb
unpckhps
xchg
xchg
pop
out
or
testl
push
jle
outsl
dec
lcall
pop
mov
sti
jle
pop
clc
mov
pop
out
mov
pop
jae
push
sub
jns
add
rcrl
popf
aas
fisubrs
inc
mov
addr16
add
pop
mov
inc
lods
stc
dec
out
icebp
loope
jle
jl
sub
xchg
cmp
jl
dec
sub
xchg
adc
dec
lahf
mov
add
and
repnz
sbb
cmp
ljmp
push
cmp
jo
sbb
movzbl
je
xchg
add
jl
cmp
lds
xor
adc
enter
xor
lahf
mov
imul
aam
hlt
fcomps
fistpll
jle
movsl
nop
mov
movsl
and
xchg
loop
jae
test
sbb
sub
cli
or
jle
inc
mov
dec
mov
repnz
in
adc
and
das
into
xchg
aad
pop
test
push
cld
sbb
repnz
outsb
arpl
lcall
push
xchg
inc
mov
movsb
mov
mov
sar
sahf
loopw
mov
stos
dec
sbb
cwtl
js
pop
lret
or
or
test
xor
mov
jb
sbb
pop
sub
data16
sahf
ret
daa
push
add
in
xchg
dec
ret
xchg
add
test
xchg
fmull
pop
lds
imul
scas
mov
lcall
daa
mov
pop
cmp
and
adc
inc
sbb
mov
lods
pusha
mov
inc
add
xchg
xchg
jb
pop
adc
or
les
push
mov
sbb
enter
dec
xchg
rorb
dec
shrl
lds
jno
inc
js
jno
add
sub
fsubp
popa
push
punpcklwd
in
add
popf
movsl
inc
inc
jg
adc
lea
push
std
icebp
leave
out
aam
xchg
jge
cmp
sbb
icebp
cltd
rol
in
loop
popf
mov
jb
ss
jmp
in
cmpb
pop
push
pop
sbb
movsb
mov
xchg
mov
cmpsl
or
mov
subb
enter
xrelease
pop
aam
mov
mov
mov
jae
mov
inc
ss
and
adc
push
mov
sbb
mov
and
pusha
inc
push
sub
pop
xorb
movsl
call
pop
outsb
insb
cli
pop
jns
mov
daa
scas
pop
and
xor
inc
inc
sub
mov
je
sbb
or
bound
imulb
jnp
pusha
push
xchg
pop
aam
in
dec
inc
nop
xchg
sbb
pop
stos
mov
int
ja
cld
cltd
aam
ljmp
mov
dec
pop
out
imul
ret
cmpsb
pop
add
outsl
lds
aaa
dec
mov
jb
push
imul
dec
aad
sti
cmp
xor
insb
sbb
sbb
dec
push
adc
mov
inc
pop
sub
std
adc
mov
loope
or
mov
dec
dec
daa
dec
fsubrl
cmpsb
mov
andb
adc
dec
pop
or
movsl
mov
jb
mov
les
or
inc
cmp
pop
icebp
adc
or
imul
data16
mov
rcrl
lods
push
dec
mov
aad
test
cmc
arpl
movsl
subb
movsb
js
ljmp
mov
vmovups
stos
mov
shl
mov
cmp
div
jmp
ret
mov
add
ret
repz
cmp
inc
test
rcrl
stos
xor
jbe
ficoms
mov
scas
out
icebp
pop
fwait
sub
jp
fwait
push
daa
in
sub
dec
inc
or
ds
sbbl
roll
fs
cld
inc
xor
push
inc
jmp
dec
imul
fstps
into
mov
adc
inc
loop
add
dec
jns
lods
xchg
cmpsb
imul
cmp
lahf
imull
lret
in
je
push
xchg
mov
lea
xchg
pop
mov
stos
fbstp
outsl
or
adc
fs
mov
mov
cwtl
and
hlt
je
pop
xchg
or
faddp
pop
jg
pop
push
sub
bound
test
push
jno
lods
xchg
mov
mov
data16
testl
adc
xchg
mov
or
jb
sub
or
mov
pop
mov
pop
push
mov
push
out
xchg
pop
inc
mov
cmpb
and
out
mov
call
or
das
cli
cli
xchg
xchg
sar
jns
dec
fwait
pusha
push
negl
and
psadbw
pop
dec
call
dec
adc
arpl
sub
loope
inc
mov
mov
movsl
push
test
out
mov
push
jne
mov
imul
idivb
mov
dec
jl
pop
xor
sub
jp
jns
fs
imul
and
adc
test
popf
in
daa
imul
adc
mov
inc
scas
pop
xor
aas
sar
mov
push
popa
lock
repnz
jae
out
in
push
pop
dec
jg
scas
inc
xlat
and
or
mov
jnp
ja
adc
fldl
insb
jne
movsb
aas
ret
ljmp
and
icebp
test
push
sahf
cld
dec
push
repnz
xor
popa
imul
fnstsw
jno
outsb
popa
shll
nop
mov
ffreep
push
pop
daa
out
pop
ret
cli
adc
push
cs
mov
rcrl
lock
aad
sub
mov
rol
popa
jl
pop
and
sub
test
repz
inc
push
inc
stos
fnstenv
loope
stos
in
fstl
sbb
jns
and
jno
mov
adcb
lahf
jno
lods
push
int
leave
std
mov
jg
or
stos
cmp
xchg
je
pop
add
testl
dec
arpl
and
push
loope
out
xor
cmpsb
xor
or
pop
outsb
enter
cli
cli
adc
push
mov
popf
fisubs
xor
mov
and
xor
les
jmp
xor
fsubrs
mov
loope
lahf
jg
sub
jns
rclb
fistl
loope
add
dec
rcr
out
inc
adc
out
pop
nop
lret
xchg
cmp
loop
stc
cld
xor
sarl
das
addr16
daa
das
dec
mov
push
mov
jne
mov
dec
jo
sub
mov
lods
add
or
pop
mov
jmp
add
insl
dec
insb
xor
xlat
xchg
push
in
mov
enter
push
dec
bound
push
xchg
push
movsb
in
arpl
or
imul
outsb
iret
hlt
mov
scas
aam
outsb
imul
sub
mov
sbb
pop
scas
gs
add
push
fldenv
inc
loope
mov
push
cmp
fnstenv
icebp
adc
cltd
stos
std
or
or
mov
sbb
cmp
dec
add
mov
mov
outsb
sub
fdivrs
xchg
rorb
xchg
outsb
jae
dec
push
aas
scas
stos
outsl
jge
into
jle
pop
adc
icebp
mov
pop
sbb
sub
jecxz
lret
scas
pop
inc
mov
adc
lock
icebp
movsb
jg
fistl
adc
cs
cmp
mov
cmpb
addb
popa
out
xor
lahf
mov
inc
mov
and
xchg
xchg
mov
es
adc
pop
cmpsl
fadd
pop
or
mov
or
cld
push
pusha
adc
add
fstpl
jae
je
cmp
pop
sub
popa
aad
pop
xchg
or
mov
mov
xchg
iret
sub
arpl
xor
insl
arpl
cld
sbb
or
ja
adc
jbe
jmp
jge
sub
inc
loop
fwait
mov
pop
outsb
and
frstor
inc
int
adc
push
clc
pop
or
jbe
cmp
leave
aaa
outsl
jne
insl
dec
test
out
sbb
hlt
cmpsl
dec
mov
cld
xor
popa
sti
pop
lock
jmp
cli
sbb
lcall
jb
lret
mov
inc
int
jmp
inc
mov
mov
cwtl
push
jae
adc
bound
shll
sbb
push
jge
jnp
or
into
andl
sub
jmp
mov
lcall
fs
movsl
loope
loope
xor
push
clc
mov
sar
mov
adc
fstpl
dec
popa
or
stos
insl
popf
test
clc
stos
adc
test
push
sub
adc
xchg
inc
mov
repnz
inc
pop
and
sbb
xchg
fucomp
sub
in
loope
ficompl
adc
sarl
repz
cmp
imul
std
es
sbb
sub
adc
fs
lcall
push
cmp
in
xchg
and
hlt
cmp
in
dec
lea
rcll
jno
nop
push
fldcw
movsl
dec
stos
dec
mov
stc
in
jle
sub
int3
lea
bswap
ret
std
lret
shrl
jo
and
push
push
je
insb
imul
dec
in
movsl
aad
add
ja
sub
push
jmp
dec
push
pop
fsubrp
push
fcomps
mov
lods
push
sbb
sub
mov
insb
adc
inc
iret
cltd
loope
repz
xor
jae
pop
sarb
decl
repnz
rolb
es
xor
jmp
inc
fs
ja
call
xor
pop
shll
dec
push
push
xor
or
jl
daa
fistps
ja
jns,pt
xchg
pop
xchg
xor
push
dec
imul
aas
les
notl
cmc
mov
stos
dec
mov
add
fidivrl
lods
or
sbb
iret
shlb
xchg
cltd
adc
mov
jbe
ficompl
mov
jb
adc
imul
pusha
out
xchg
cmp
and
inc
outsl
in
fsubrl
pop
arpl
adc
mov
pop
xor
or
add
sub
ret
xchg
in
add
xor
std
mov
xchg
mov
gs
push
repz
jae
xchg
in
mov
xor
fildl
es
adc
adc
sar
subb
inc
mov
and
jp
js
inc
pop
xlat
gs
xor
leave
shrb
pop
lret
cltd
xchg
addr16
dec
les
and
dec
sbb
jecxz
test
pop
ss
leave
and
mov
outsl
cmp
lcall
adc
sahf
cmp
nop
pop
and
xchg
dec
dec
lret
test
add
shlb
lea
pop
cmpsb
push
inc
out
push
pop
les
pop
xor
xor
mov
cmp
push
push
push
mov
xchg
andl
and
lcall
xchg
inc
out
mov
xchg
fwait
cmp
mov
nop
in
fisubrs
bound
cmp
arpl
pop
cwtl
aam
insb
adc
rcll
xchg
push
sbb
sarl
rcll
lcall
jns
cld
sbb
lods
pop
inc
inc
push
mov
gs
mov
rcl
leave
mov
xchg
out
shlb
adc
dec
lcall
fmul
repz
es
outsb
loope
sub
pop
popf
mov
popa
out
sbb
and
aad
cs
pop
es
enter
addr16
inc
cmpsb
sub
divl
stc
aas
nop
sub
add
mov
cltd
subb
mov
jg
cmp
cmp
sub
subb
daa
xor
int
jne
push
dec
stos
dec
push
mov
jnp
mov
lfs
addr16
out
jae
scas
je
push
jl
cld
jnp
popa
ss
lods
fsubl
lods
push
sti
in
movb
inc
sbb
xchg
cwtl
sbb
vfmsub213ps
push
adc
push
icebp
cld
push
shll
cs
outsl
orl
sbb
fistpll
pop
mov
mov
and
sbb
and
cs
hlt
outsb
lds
push
sub
imul
add
int3
js
sahf
xchg
hlt
imul
pop
addr16
and
mov
mov
mov
inc
lahf
sbb
outsl
flds
pop
sbb
cmp
pop
xor
in
push
and
fadds
cs
rcrl
inc
xchg
outsb
loop
bound
push
mov
xchg
xlat
mov
lret
jg
nop
rorb
or
into
les
iret
inc
xchg
popa
test
pushf
aaa
fxch
push
mov
cltd
ds
lods
roll
outsl
ss
mov
mov
out
popf
popa
inc
ret
insl
cld
adc
enter
cltd
mov
push
dec
cltd
je
jo
sbb
adc
enter
mov
inc
test
push
add
movsb
lods
jge
mov
ljmp
cwtl
mov
test
and
testl
push
xor
leave
pop
add
dec
lock
daa
mov
insb
lahf
xor
dec
sbb
cld
sbb
cs
push
sbb
jne
push
dec
cmp
sub
jecxz
push
fdivl
push
add
and
adcl
ret
iret
fiaddl
sub
push
pushf
and
dec
xor
cmp
popa
xchg
ljmp
loope
lods
icebp
addr16
xchg
clc
shlb
cmp
sub
in
rcr
inc
mov
pushf
mov
fsubrs
mov
mov
fcmovnbe
fdivrl
cs
mov
dec
add
insl
flds
pop
sbb
push
mov
xor
mov
add
xor
fcomp
outsb
in
shr
loopne
ljmp
adc
mov
movb
jp
call
leave
mov
fnsave
cmp
xor
mov
adc
das
adc
sub
mov
adc
movsb
cltd
in
jle
mov
add
push
lods
fisubs
push
jmp
lret
mov
add
and
mov
adc
daa
add
add
repz
lahf
ficomps
into
mov
inc
and
xchg
sub
out
aaa
pop
lahf
dec
add
push
imul
shl
xchg
push
mov
push
pop
outsl
data16
sub
sbb
and
mov
test
jno
sti
movsl
imul
daa
sub
outsb
in
jmp
inc
cmp
sub
rol
mov
js
mov
clc
jp
movsl
jp
std
cmp
test
dec
fmuls
mov
inc
and
in
sbb
imul
mov
mov
sub
int3
push
mov
shrl
cs
push
fimuls
dec
mov
je
cmp
mov
ljmp
lods
popf
out
test
movsb
push
cmp
cs
pop
movsb
jge
jo
push
out
loop
xchg
das
adc
outsb
stc
pop
hlt
aam
inc
lods
scas
xchg
dec
sarl
jnp
stos
sub
xchg
cmp
adc
xor
push
add
sub
xchg
add
xchg
es
arpl
stos
arpl
xchg
outsb
cld
bound
pusha
sbb
fs
mov
outsl
movsl
pop
inc
dec
sbb
xor
ja
cmp
sub
push
pop
sahf
xchg
cmpsb
insb
cmp
fisttpl
ret
shlb
jne
lds
lock
sbb
popa
pop
cmpsb
mov
and
fdivrl
lods
lcall
mov
cmpb
andl
popf
outsl
fdiv
pop
loop
enter
mov
pop
mov
xchg
dec
adc
add
movsl
js
push
stos
pop
inc
mov
aaa
call
sahf
adc
clc
sti
fs
add
jmp
repz
jl
add
xor
cltd
sbbb
cmc
pop
cs
push
sbb
loop
push
aam
cmp
test
lock
cld
sub
lret
xchg
cmp
mov
jae
cld
imul
orb
jmp
mov
rorl
mov
adc
ss
cmp
cmpsl
jne
imul
or
std
inc
add
mov
popa
aaa
xchg
xorb
out
lock
int
and
mov
je
sbb
pop
mov
mov
nop
test
ret
into
adc
add
leave
sbb
sbb
outsb
dec
push
xor
lds
and
cmp
and
lods
rol
push
or
leave
jns
outsb
xchg
test
dec
inc
dec
in
subb
sahf
adcl
pop
jmp
cmp
js
subb
jbe
mov
dec
add
fisubrl
into
xchg
xchg
mov
xchg
jo
pushf
pop
xchg
insb
or
add
sti
add
push
dec
insl
and
pop
lret
sub
clc
cmp
push
and
popa
fistpll
cmp
mov
sub
insb
ja
mov
xor
push
enter
jge
and
jle
sbb
inc
jmp
sbb
loopne
and
rcll
in
xor
loop
aas
xchg
movl
shl
out
jge
xchg
pop
cs
add
int3
and
mov
lods
xor
dec
sub
in
loopne
popa
ljmp
inc
jnp
sbb
sub
push
loop
mov
xchg
addb
out
jmp
test
adc
jecxz
and
or
cmpsb
arpl
sub
gs
addr16
insl
push
dec
dec
mov
pop
mov
out
jg
loope
aaa
xchg
cmpsb
push
adc
sub
mov
add
fbstp
movsb
in
arpl
outsb
mov
push
ds
sub
lahf
cltd
mov
je
xor
push
push
xchg
in
push
sub
imul
in
add
iret
and
stos
in
nop
add
lock
in
push
sub
out
inc
inc
cmp
xor
fdivrs
mov
pushf
xorb
inc
stc
push
pushf
sahf
mov
test
lock
sub
repnz
mov
or
out
pop
adc
add
es
fldl
jne
ss
outsb
popf
not
sbb
sbb
sbb
and
push
pmuludq
cmp
dec
inc
push
mov
pop
sti
std
and
xchg
mov
cld
test
xchg
xlat
lret
sub
lret
sarb
inc
fildl
sbb
inc
shlb
push
push
ja
pop
ret
xor
movl
or
mov
mov
pop
aad
daa
cmp
je
xchg
jb
sbb
cmp
add
jns,pt
push
sub
int3
test
dec
sbb
lret
pop
cmc
pop
mov
ds
hlt
dec
pop
pop
sbb
sahf
cwtl
loop
add
into
xor
pop
or
arpl
pop
js
and
sub
pop
lcall
add
out
sti
aad
mov
xlat
or
in
leave
arpl
test
mov
or
sbb
mov
push
xor
push
orl
es
scas
jbe
cltd
in
sbb
fneni(8087
in
js
xor
inc
xchg
and
mov
rcrl
mov
mov
shrl
test
mov
mov
dec
mov
push
and
or
movsb
mov
jns
jg
xor
push
es
sbb
inc
adc
dec
fs
fmul
fists
cmpsl
out
dec
rolb
sbb
call
popa
mov
ret
ljmp
mov
add
sub
enter
stos
sub
push
adc
jl
hlt
cmp
xchg
pop
arpl
mov
inc
nop
nop
cmp
cmp
insb
xorb
lea
inc
cld
int
les
mov
movsb
mov
jbe
ds
arpl
add
push
jmp
aam
das
stos
inc
in
xor
inc
stc
daa
cs
sub
jnp
out
dec
rorb
xchg
scas
movb
out
shrb
inc
sbb
fmull
cld
dec
sub
js
cmpsl
int3
pushf
outsl
lahf
xor
mov
bound
or
pop
js
int3
int
pop
int
xor
xor
mov
inc
mov
pop
outsl
xor
loope
stc
test
inc
popa
mov
clc
and
push
push
cmp
mov
xor
fildl
xchg
fs
mov
test
xchg
jbe
lods
xchg
sbb
sub
mov
mov
and
cmpb
xor
sbb
fcmovbe
mov
lock
add
add
mov
pusha
icebp
loope
movsb
repnz
push
mov
pop
mov
fistps
test
shll
adc
daa
imul
mov
daa
add
orb
add
int
push
neg
push
test
loopne
fnstsw
adc
sub
shlb
stc
imul
jae
gs
dec
and
add
lret
sbb
and
jno
mov
push
mov
pop
lock
lcall
ja
nop
add
adc
and
inc
push
icebp
sahf
lcall
cltd
aam
mov
in
test
popa
aam
imul
sbb
lds
push
xor
xchg
insl
lcall
jp
inc
hlt
jge
push
or
sub
add
mov
jl
sar
jp
mov
imul
inc
rcrl
mov
mov
and
add
out
cmpb
inc
fmul
hlt
jae
jns
add
lods
cld
mov
xor
pop
and
jecxz
bound
leave
xchg
imul
rolb
pop
pop
lret
aam
test
std
cmpl
movsl
xor
arpl
negl
fwait
push
and
sbb
or
pop
or
adcb
imul
sbb
in
ljmp
mov
inc
in
pop
push
inc
push
adc
fcom
push
pop
movsb
inc
ret
jg
insb
jnp
xchg
jno
cld
mov
movsl
cmp
xor
mov
mov
cmp
rorl
xor
jnp
inc
inc
or
jecxz
and
mov
aas
pop
or
rorl
or
jb
mov
cmp
pop
mov
daa
xchg
cld
pop
and
inc
aad
push
out
or
stos
mov
push
mov
lods
mov
jmp
xlat
mov
aaa
mov
sbbb
sbb
dec
jmp
cmp
fchs
jo
mov
lcall
movsl
xchg
mov
or
add
xlat
jno
mov
or
fprem1
fwait
sbb
ljmp
sbb
or
sbb
mov
push
popf
mov
mov
loope
cld
out
push
ret
ret
out
sub
js
mov
pop
add
sbb
inc
inc
xchg
jb
dec
cwtl
loope
inc
inc
leave
stos
mov
push
mov
push
imul
add
push
mov
cmp
sbb
mov
ret
std
or
out
sbb
popa
pushf
push
fisubs
jecxz
xchg
scas
in
insb
mov
xchg
bound
inc
leave
add
cld
in
jecxz
cmp
mov
pop
fcoms
xor
xor
aas
cmp
jp
jns
xchg
add
mov
call
enter
jecxz
rcrl
pop
mov
dec
fistl
jl
ds
stc
shll
push
xor
and
sub
add
mov
xor
loopne
push
imul
pop
ret
fsubs
xchg
cmpsb
ficomps
pop
mov
cmpsb
std
xchg
ret
add
or
jmp
movsb
aaa
or
sub
add
pop
repz
mov
sub
test
mov
arpl
sub
jne
adc
mov
in
hlt
insb
les
rolb
mov
jmp
or
lret
adc
push
lret
mov
test
sbb
sub
lock
fs
in
testb
pop
adc
gs
loop
popl
cli
ja
sub
clc
lret
addr16
inc
jne
imul
outsb
in
cmpb
jo
enter
repz
pop
xchg
arpl
es
cmp
cs
sub
mov
inc
mov
shll
mov
mov
test
or
pop
jl
mov
mov
sbb
sti
shrb
test
pop
pop
dec
mov
hlt
and
in
scas
addr16
dec
and
sbb
push
xchg
mov
jb
enter
in
xorl
leave
jge
call
nop
push
repnz
incl
xchg
stos
sbb
popf
sub
fistpl
add
adc
lds
xor
scas
push
xchg
mov
fldcw
push
test
cmp
fdivl
aaa
popa
into
or
scas
js
gs
pop
je
adc
push
cli
ds
ds
ds
or
pop
inc
insl
pusha
hlt
insl
cld
xchg
cmp
loope
adc
fstpt
mov
lods
testl
mov
outsl
lods
sub
cmpl
jmp
aad
dec
movsl
insb
test
sahf
mov
scas
sub
test
test
xchg
pop
scas
xor
shrb
das
imul
push
add
pop
mov
cmp
scas
sub
fwait
int3
cld
or
mov
outsb
or
in
fbld
daa
inc
roll
sbb
mov
imul
cs
xor
arpl
inc
xchg
les
xor
fisubrl
sbb
das
and
inc
lods
fistl
into
shl
mov
ffreep
popf
adc
cmp
push
test
loope
call
or
ja
jb
sub
les
popf
sub
mov
sub
jno
movb
into
leave
sbbl
dec
pop
or
mov
out
mov
cmc
cwtl
sti
in
lret
cli
push
ret
inc
out
test
out
jbe
xor
fdivr
push
inc
xchg
pop
inc
ss
leave
sbb
inc
add
arpl
sbb
stos
and
fisubrl
adc
dec
or
popa
lret
inc
xchg
dec
iret
ja
lahf
mov
das
fistpll
inc
add
cld
xor
aad
xor
daa
cwtl
sar
fmull
mov
in
ret
push
push
mov
or
out
test
pop
lahf
jge
xchg
mov
inc
push
loopne
fidivs
pop
fs
xor
enter
in
loopne
inc
ja
pop
cmpsl
lcall
or
jb
add
pop
arpl
push
fcmovnu
fwait
into
pop
das
dec
loop
push
lods
or
adc
jge
pop
imul
cli
sti
fistpl
out
mov
mov
rcll
push
jmp
aad
mov
inc
xor
adcl
lret
push
sbb
mov
pop
jge
dec
leave
out
cld
bound
push
and
dec
cmp
movsl
xchg
int
mov
xchg
xor
lcall
test
int3
mov
and
and
cmp
pop
xchg
dec
mov
mov
mov
std
ret
aam
inc
shlb
sub
lahf
fisttps
mov
lcall
sbb
xlat
insl
hlt
or
mov
loope
push
xchg
lds
leave
cmp
push
sbb
xchg
or
xchg
aas
outsb
inc
push
scas
andl
mov
jo
sbb
aam
stc
wbinvd
pop
loope
in
rcrb
jge
push
repnz
mov
stc
or
lret
aaa
fucomi
scas
mull
mov
dec
jnp
pop
push
gs
push
sub
dec
out
es
xor
pop
jmp
and
push
gs
clc
and
xor
dec
fldt
lds
cwtl
mov
mov
lret
sub
daa
pop
xor
int3
xor
or
sub
or
jg
lods
aad
cmp
push
xchg
stos
in
popa
imul
pop
mov
inc
push
mov
popf
pop
jl
lods
ficomps
mov
daa
ffreep
lods
jno
test
pusha
and
jb
shrb
sub
std
push
fwait
cmp
gs
pushf
push
cmp
mov
out
repz
sbb
fists
mov
js
lret
out
cmp
bound
ret
fnstcw
sbb
lock
shrl
mov
sarl
add
dec
shrb
and
or
jmp
je
into
sub
push
shrb
cmc
mov
jne
shll
in
inc
xchg
addr16
shrb
push
fidivrl
jg
addr16
and
dec
popf
mov
dec
hlt
out
rclb
inc
sarb
mov
xchg
sbb
pop
popa
testl
aas
mov
lret
inc
loop
aam
add
add
mov
xor
out
pop
add
loope
mov
push
sbb
out
dec
adc
cltd
mov
push
imul
xor
pushf
fwait
push
mov
shlb
or
je
cmp
js
dec
je
jp
shlb
and
cmpsl
mov
out
dec
in
stos
mov
cmpl
push
out
inc
jne
shll
push
scas
insb
enter
call
inc
sbb
or
jnp
mov
pushf
mov
cmp
xlat
stos
jnp
pop
and
xchg
or
cmpsb
sbb
aad
and
sbb
mov
stos
scas
cwtl
and
or
pop
in
sarb
jns
je
sub
mov
int
or
push
lds
pop
sbb
dec
loopne
movsb
je
adc
jl
cmp
clc
adc
negl
decb
into
dec
out
inc
add
dec
mov
insb
je
in
xor
das
cmc
mov
mov
sbb
jbe
pop
or
lret
dec
jecxz
aas
popf
xchg
leave
int3
cmp
call
das
sub
shlb
mov
cmc
mov
mov
xor
dec
mov
jae
int3
and
js
iret
jp
mov
rorl
mov
mov
jns
dec
arpl
out
push
dec
mov
adc
mov
mov
mov
or
and
mov
in
enter
rol
iret
out
push
xchg
jb
or
push
or
inc
mov
push
negb
mov
and
addr16
ret
clc
or
pop
insl
outsl
mov
push
fwait
mov
mov
hlt
in
shlb
jns
enter
roll
mov
dec
outsb
scas
jge
mov
rolb
data16
lret
aaa
bound
ja
stc
movsb
enter
adc
in
ljmp
int3
sub
mov
sbb
out
pop
xchg
dec
xchg
movsb
enter
lret
mov
or
and
inc
ficoml
sub
lcall
scas
xor
repnz
push
roll
mov
dec
jg
adc
lods
mov
out
filds
pushl
push
jl
jp
mov
inc
call
dec
inc
xlat
sbb
shrb
in
mov
cwtl
arpl
cmpxchg
rorl
jmp
sbb
test
adc
imul
rcrl
test
je
sbb
jns
arpl
sub
divb
xor
rcll
imul
ret
mov
sahf
or
jmp
daa
adc
inc
add
push
iret
jae
jl
fnstcw
test
cmp
jno
xlat
sbb
inc
sarb
sub
les
int3
push
add
pop
shrl
cld
cmp
int
dec
cwtl
test
mov
shrl
mov
add
and
fldl
hlt
adc
hlt
shr
je
dec
pushf
enter
fcompl
frstor
cmpb
jl
add
cli
sbb
jne
mov
inc
int3
cmp
lahf
pop
enter
xchg
movsb
inc
shld
pop
imul
jecxz
mov
and
es
sbb
add
jnp
jae
push
jbe
mov
adc
jns
cmp
je
xor
jl
xor
and
loope
or
movsl
xor
pushf
movb
fmuls
js
bswap
xchg
jns
pop
enter
es
mov
mov
xor
inc
xchg
cmc
mov
mov
fwait
test
les
jmp
xchg
inc
test
hlt
fs
mov
cmp
sub
dec
imul
scas
jne
and
mov
aaa
imul
int3
xor
xor
popa
shlb
ljmp
lret
fimull
sbbb
mov
push
stos
outsl
dec
mov
mov
js
inc
in
in
test
loop
fildll
and
xchg
jge
loop
loopne
lds
int
ficompl
and
adc
sub
shl
cmovns
adc
mov
fmuls
nop
mov
jbe
aaa
add
fsubl
sub
pop
dec
cmc
ja
js
int3
push
fsubrp
inc
sbb
shlb
sti
or
mov
out
jp
push
dec
jp
clc
fcoms
jae
pop
addb
les
sub
push
sahf
mov
gs
xchg
daa
popaw
sub
clc
cli
pop
cmp
cmc
or
fdivrs
or
mov
inc
jbe
je
in
mov
out
mov
or
sbb
mov
inc
cwtl
adc
cwtl
mov
jg
ret
mov
pop
xchg
mov
or
xchg
lods
jl
xor
inc
rcl
iret
push
jno
clc
ljmp
ja
pop
loope
and
lea
or
sbb
je
xor
mov
xchg
scas
push
sub
dec
mov
sbb
stos
mov
sbb
int
fwait
mov
and
xlat
subb
xchg
clc
mov
mov
dec
and
push
data16
decl
imul
sub
add
gs
stos
rcll
sub
mull
adc
cld
push
repnz
lret
add
inc
jae
add
aam
into
outsb
nop
rcl
ja
inc
std
notb
pushf
jmp
sti
imulb
adc
pop
jb
in
into
fnsave
shl
test
clc
dec
push
push
push
pop
mov
or
sarl
out
mov
mov
stc
xchg
jmp
pavgb
lock
rorb
in
bound
les
xlat
movsb
pusha
enter
mov
jne
sti
jmp
jbe
push
lret
jno
shrd
into
or
fimuls
loopne
pop
jl
mov
in
mov
adc
mov
mov
pushf
scas
into
call
xchg
adc
fdivrl
pop
jnp
ja
adc
mov
push
and
xchg
push
cmp
fldt
lahf
and
fs
cli
push
add
pusha
call
andb
addr16
leave
xchg
stc
xlat
aad
mov
mov
mov
xchg
sbb
mov
mov
pop
push
push
hlt
addr16
inc
dec
rcrl
movsb
xchg
cmp
imul
inc
jbe
mov
shlb
cwtl
pop
mov
inc
xor
mov
iret
jp
push
sub
nop
cmpsb
push
sbb
mov
aam
mov
push
xlat
leave
mov
in
push
push
stc
lahf
adc
arpl
or
aad
in
test
mov
add
add
dec
mov
lret
fwait
dec
in
and
mov
and
jl
sbb
pop
add
test
imul
adc
push
mov
dec
adc
movsb
fisubl
cs
jb
inc
out
movsl
test
add
pop
fldt
cmp
jge
sub
movsb
sbb
aaa
aad
rorb
lahf
jge
xchg
xor
inc
add
ret
icebp
stos
cmpsl
cmp
cmp
ds
pop
aaa
add
addr16
xor
or
pop
or
pop
xchg
cli
and
jns,pn
or
out
pushf
outsb
push
pop
sbbb
popa
lret
popl
outsb
cmp
add
test
test
clc
neg
cmp
cmp
xchg
lret
test
sbbb
jnp
xchg
out
jb
mov
mov
jmp
add
xchg
sbb
add
xchg
mov
push
xorb
sbb
push
ret
in
hlt
cmp
push
pop
lea
add
dec
mov
jg
aam
inc
ja
pusha
popa
repz
sub
xchg
outsb
clc
repnz
ljmp
cmp
test
sbb
jl
mov
lods
daa
in
fwait
jmp
fistps
jb
iret
movhps
xor
sahf
adc
mov
enter
dec
push
hlt
and
insb
imul
sub
add
shrl
fnstsw
js
jl
gs
push
jg
adc
aad
fcoms
lods
sbb
mov
mov
sub
out
lret
xchg
pop
fcoml
movsl
stc
mov
ds
lret
pop
mov
push
dec
jle
push
adc
cmp
iret
adc
insl
mov
cli
push
and
faddl
js
sbb
sub
and
mov
int3
mov
add
push
or
xchg
pop
jmp
jae
lods
fnstenv
pop
adc
out
xchg
push
cs
xchg
jl
jno
addr16
les
jno
fldcw
sbb
lods
jp
loop
sahf
cli
fcoms
cltd
push
outsb
pusha
ja
lods
inc
xor
fiaddl
lret
xchg
push
movsl
rol
adc
cmp
ja
xor
inc
mov
jp
xor
jmp
adc
and
adc
sahf
jbe
or
mov
ret
sbb
mov
or
sbb
dec
xor
push
lds
cmp
cmp
stos
dec
xchg
pop
orb
pop
clc
pushf
sti
mov
push
mov
sub
leave
mov
fnstsw
js
imul
popa
rorl
xor
arpl
clc
push
daa
insb
in
lahf
adc
cwtl
movsl
adc
sahf
push
pop
imul
xor
mov
pushf
xchg
jno
dec
and
les
jb
stc
cltd
xor
mov
mov
loope
dec
scas
xchg
mov
mov
push
cmp
lahf
and
lods
outsb
inc
cmp
xor
adc
xchg
in
or
xchg
lret
jl
fcomip
sahf
std
xchg
mov
xor
cmp
inc
push
push
cmc
hlt
mov
xchg
out
js
jmp
xor
push
push
in
test
and
sub
pop
out
fists
xor
push
pop
xchg
push
jle
pushf
xor
and
daa
test
or
orb
clc
scas
xor
lods
out
xchg
outsb
insb
push
pop
adc
jecxz
shl
sbb
cltd
cmpsl
dec
jmp
lods
les
pop
jmp
stos
jnp
test
es
out
lods
rorb
call
sbb
insl
and
lcall
mov
dec
pop
cwtl
dec
cmc
ret
out
xchg
fsubr
hlt
pop
nop
add
mov
cmp
dec
pop
sbb
or
cmp
test
lret
mov
fnstenv
fdiv
push
int
gs
ds
sbb
sbb
mov
mov
out
pop
aam
ret
jne
cmp
das
jmp
stc
ljmp
xchg
adc
mov
scas
add
mov
and
iret
ds
test
mov
movl
bound
sub
jnp
sub
ja
and
nop
shl
or
pop
ds
in
pusha
adc
scas
mov
add
gs
inc
mov
push
cmpsl
xchg
dec
outsl
std
pop
divl
add
and
pop
cmp
imul
xor
loope
fwait
xchg
repz
lds
jns
outsb
sbb
movsl
dec
fnstcw
mov
sub
popf
jmp
repnz
jecxz
pushf
pop
ljmp
mov
les
or
fnstenv
cltd
in
mov
or
push
negb
pop
ret
mov
repnz
cmpsb
jmp
dec
xchg
xchg
xchg
pop
mov
jp
mov
in
stos
cmc
ja
jmp
sub
sbb
in
xor
xchg
pop
dec
sub
push
vpcomuq
shr
xlat
push
nop
push
mov
xor
jp
aad
mov
cmp
sub
mov
fucomi
mov
pop
adc
test
sub
xor
lahf
and
push
mov
imul
lcall
sbb
pop
push
popa
jno
mov
pop
sbb
orb
clc
adc
push
lods
xchg
sti
repnz
stos
in
push
adc
in
ss
and
fisttpl
inc
xor
pushf
dec
pop
mov
mov
pop
jge
mov
out
push
ret
and
sub
fnsave
les
sarb
mov
imul
repnz
bound
in
in
mov
push
repz
insb
or
lret
mov
mov
jnp
mov
push
lea
rorb
push
pusha
pop
divb
push
gs
lea
call
das
mov
rcrl
arpl
scas
jmp
xlat
push
mov
mov
addr16
push
push
leave
xor
mov
shrb
cltd
out
insb
pop
mov
xor
xchg
cwtl
jns
pop
dec
and
sub
inc
into
aam
add
push
dec
insl
jle
mov
cmp
test
jnp
and
mov
ret
mov
pushl
movsb
lods
cwtl
repnz
mov
movsl
in
ss
xor
insb
lods
adc
push
scas
push
loopne
std
test
mov
ret
cmp
inc
sahf
jmp
and
cld
cmp
sub
out
adc
and
nop
lcall
jmp
adc
fwait
outsl
in
push
out
mov
xor
lods
stos
mov
jo
cmp
add
sub
mov
dec
add
hlt
and
repnz
jo
aam
loopne
leave
pop
cmp
xor
sbb
stos
pop
pop
cmpsb
sarl
jp
xor
push
icebp
dec
mov
pop
aam
xchg
cmp
xor
push
push
jge
sbb
cli
push
jecxz
das
pop
push
and
insb
mov
and
push
loope
lahf
shlb
popa
fnstenv
mov
call
les
push
movsb
sub
mov
into
lea
fdivrl
shrb
push
subb
mov
or
mov
push
xchg
mov
cmp
cmp
andl
cmp
sarb
out
mov
dec
pop
cs
push
mov
cmp
and
shl
fs
jl
test
dec
sbb
pslld
pop
push
xor
repnz
int3
sbb
jb
bound
loopne
inc
adc
data16
xor
pusha
sub
pop
jne
outsb
ljmp
cld
call
rorl
and
jle
test
loope
and
aas
adc
or
cmp
adc
cmp
int3
fcomps
sbb
sub
cmpsb
ds
add
dec
xor
push
sbb
jge
rorb
jno
jnp
or
xchg
setbe
cmp
psubb
shr
insl
fsubr
scas
pop
jg
jg
mov
sbb
inc
insl
pop
pop
lods
ja
push
aas
inc
sub
mov
imul
js
cmc
dec
ficoms
test
in
mov
pop
jle
sahf
or
push
sub
mov
sbb
xchg
call
aaa
push
or
shll
dec
sub
sti
nop
jp
mov
aas
fstp
jecxz
mov
ds
ja
sbb
fwait
push
out
icebp
ss
out
pusha
pushf
dec
fchs
inc
je
hlt
mov
jb
out
pop
pop
cmp
rol
lods
and
and
push
push
cmpsb
push
jecxz
loopne
mov
rcrb
adc
dec
fnsave
add
sbb
in
adc
inc
ret
mov
js
pusha
outsl
cmp
shl
mov
mov
dec
sub
inc
in
dec
xor
add
inc
lret
mov
mov
jb
and
mov
and
jmp
xor
cli
shl
mov
push
pop
xor
or
popf
addr16
ror
mov
lock
cmp
jle
outsb
cmp
or
in
sti
cld
or
shrl
sub
add
pop
out
push
dec
leave
movsb
nop
testl
cmp
in
stc
andb
xorb
xchg
ret
pop
xchg
xchg
arpl
jo
pop
push
push
jo
xorb
dec
inc
lahf
mov
inc
add
inc
les
sub
leave
sub
lock
cmp
ret
sbb
inc
aas
pop
jmp
popf
shlb
cmp
pop
cld
aad
sub
out
push
xchg
cmpsb
ljmp
pop
lods
mov
leave
fwait
xor
sbb
sti
cs
sub
test
je
jecxz
jp
xchg
cmp
xor
sub
test
mov
inc
adc
cmp
xor
sub
add
jnp
sbb
fs
imul
adc
int3
fidivs
pop
stos
ja
outsb
scas
pop
adc
fstl
iret
daa
les
outsb
jb
pop
cmpsl
push
mov
mov
mov
jbe
stos
fcompl
sahf
dec
mov
mov
mov
insb
enter
push
and
out
rorl
aaa
in
insl
sbbl
inc
fnstsw
dec
pop
dec
mov
sub
xchg
movsb
hlt
pop
pop
jbe
inc
ss
jmp
popa
adc
lcall
jmp
and
cmp
add
xor
in
cmp
adc
jmp
sub
aam
xchg
lcall
xor
sbb
dec
in
fistpl
and
stos
push
sub
pop
lods
lahf
mov
mov
lea
popl
fstpt
rclb
loopne
xchg
xor
outsl
scas
inc
push
jne
jnp
loopne
or
inc
out
jne
and
arpl
lret
sti
shrb
lds
sub
pop
fadds
pushf
xchg
xchg
imul
mov
push
cmp
push
insb
faddl
call
or
push
push
mov
outsl
rcrb
xlat
xchg
mov
cmp
pop
cmc
jo
sub
mov
pop
sub
dec
lds
sahf
jne
popf
or
xor
xor
mov
xor
xor
es
sbb
rol
jle
dec
sbb
into
incb
aad
test
mov
movsb
fdivl
sub
or
aaa
and
cmc
cld
leave
jge
imul
mov
jne
cli
adc
addr16
mov
jb
jmp
or
cwtl
sti
arpl
mov
and
push
ja
push
xchg
mov
stos
xchg
aaa
loopne
cld
pop
rcr
es
das
hlt
je
push
inc
and
and
dec
xchg
xchg
adc
or
fs
xlat
pop
aam
mov
int3
add
mov
nop
adc
mov
jns
xor
pop
inc
inc
mov
xadd
rolb
repnz
adc
mov
fstps
iret
mov
pop
adc
filds
push
xchg
add
pop
cmpsb
pusha
mov
les
cmp
enter
push
mov
push
pushf
or
sub
lea
stc
xchg
jnp
scas
pop
push
sub
mov
ret
mov
mov
mov
mov
fwait
or
fbld
jbe
aad
mov
aaa
push
or
push
mov
sub
or
mov
cmc
push
jne
mov
dec
inc
int3
cwtl
aaa
mov
testb
call
cli
inc
add
les
add
sbb
out
push
inc
xor
mov
shlb
xchg
xor
les
cmc
rclb
xchg
ret
je
cmp
dec
mov
daa
and
aas
cmpsl
shlb
inc
std
sbb
rcll
push
adc
dec
test
dec
sbb
pop
std
in
push
inc
pushf
hlt
lds
pop
jmp
or
mov
add
ss
mov
lahf
pushf
cmp
stos
ss
jae
fwait
jge
movsl
icebp
enter
push
xchg
or
arpl
mov
xchg
call
cmpsl
aam
dec
jno
push
push
das
lahf
push
xchg
sbb
adc
lahf
dec
data16
fstps
inc
xchg
sub
or
push
fldl2t
jns
or
add
mov
negl
mov
sbb
inc
add
fstpt
int3
mov
stc
dec
ret
jmp
jge
and
pop
test
jae
add
je,pn
mov
adc
add
rcrl
mov
inc
sbb
jp
or
out
sub
jmp
lock
and
fsubs
lock
xchg
adc
pop
repz
lret
mul
rorl
testb
dec
int
mov
pop
loopne
repz
insl
mov
mov
clc
sbb
pop
test
push
add
ret
push
mov
sahf
pusha
aad
or
stos
clc
inc
pop
adc
xor
mov
fmuls
mov
fwait
mov
ds
adc
mov
sti
hlt
cmpb
xorl
adc
mov
call
clc
pop
sahf
aaa
addr16
roll
push
add
ret
mov
rorb
jmp
outsl
mov
mov
push
or
mov
div
jo
addr16
lahf
or
sbb
jbe
fs
jmp
inc
mov
dec
mov
dec
add
scas
loop
dec
push
cmp
jmp
mov
outsl
pop
arpl
add
sahf
cmp
push
out
dec
lahf
mov
xchg
or
aam
xchg
fcompl
pushf
mov
mull
into
cmpsl
and
pop
stos
dec
mov
jae
cwtl
jne
sbb
cmpsl
in
adc
xorl
pop
inc
adc
sarb
cmp
mov
out
or
push
add
rol
jl
add
je
enter
mov
jno
xorl
jmp
mov
pop
push
stos
aad
sub
jbe
fucomi
cmp
mov
xchg
xchg
dec
jg
ds
mov
cld
ss
lret
xchg
pop
pop
xor
data16
notl
pop
sti
sti
nop
add
mov
negb
ret
mov
aad
mov
ja
dec
sbb
sub
call
aas
inc
ficomps
insl
orb
and
out
or
push
ss
push
sbb
ficoms
cld
movsb
adc
int3
jo
aaa
xchg
pop
gs
pop
fstps
pop
movsb
mov
out
gs
or
mov
pop
inc
test
fidivrl
ljmp
add
test
jbe
mov
adc
mov
shrl
movsl
loop
mov
lock
cltd
out
sub
mov
fadds
int3
inc
dec
pop
cmpsl
loop
inc
mov
inc
jge
sub
mov
mov
cmc
mov
mov
cli
cwtl
dec
jns
decb
popa
pushl
std
sbb
adc
mov
subb
or
pop
xor
mov
mov
mov
and
or
or
insl
sub
ficompl
cmpb
mov
fistpll
dec
push
aaa
adc
gs
mov
push
stos
daa
xchg
cld
ret
lods
sbb
cmp
inc
xchg
mov
sub
cld
es
nop
dec
sti
les
inc
mov
inc
mov
xor
test
push
mov
std
mov
add
insb
add
dec
xchg
pop
adc
adc
sbb
aaa
xchg
mov
jo
into
insl
xor
cmp
test
jbe
test
sbb
test
ret
xor
pop
in
or
lret
sbb
std
movsb
daa
shlb
cmc
jmp
pause
test
bound
xchg
sub
jl
icebp
movsb
nop
fidivs
sub
mov
shll
in
mov
mov
bound
lcall
jecxz
cmp
divb
push
mov
sub
clc
fsts
arpl
push
dec
add
and
xor
pushf
jecxz
xchg
clc
xchg
sub
push
inc
xlat
js
imul
sbb
xchg
js
addl
xchg
push
or
int
in
and
mov
daa
jnp
movaps
or
pop
push
in
mov
jno
xorb
scas
pop
fsubrl
aaa
inc
adc
shr
inc
push
mov
lcall
or
into
inc
out
orl
pop
cltd
fmuls
cmc
xchg
and
xor
jg
mov
xor
mov
shll
mov
aam
stos
push
push
lret
in
mov
xlat
scas
loopne
test
xchg
sti
sub
jno
mov
nop
into
cmp
negb
pop
lea
push
mov
push
sahf
js
add
pop
push
inc
fwait
cmp
cmovbe
sahf
or
popf
testl
and
mov
xchg
jl
filds
aaa
scas
sti
push
clc
lock
mov
std
sbb
sbbb
jbe
std
ds
xorl
hlt
sub
mov
xchg
sub
jg
jmp
jl
mov
dec
loopne
mov
cmp
bound
ja
add
push
push
add
subl
ss
cmpsl
les
sub
imul
outsl
fdivrs
xchg
enter
leave
jecxz
test
xchg
mov
mov
or
pushf
lock
int3
jne
add
in
cmp
loope
jb
jnp
inc
arpl
fsubs
pop
mov
cmpsl
test
and
ds
dec
xlat
pop
cli
fisubl
daa
sub
gs
pop
adc
les
imul
movsl
add
pop
pop
lcall
xchg
xchg
ss
sub
rcrb
or
aam
dec
sub
cmp
mov
jb
sti
mov
pop
mov
out
cmpsl
les
mov
imul
adc
fistl
iret
xor
sbb
out
jmp
int3
xor
jae
cmpsb
inc
out
in
enter
repz
add
int
mov
xor
xor
enter
leave
in
cwtl
fistl
call
in
mov
mov
fucomi
xlat
xchg
or
je
push
xor
pop
mov
in
jae
mov
mov
and
pop
xchg
xor
cmp
sahf
in
sbb
push
push
mov
mov
out
rolb
pop
push
stc
push
in
shl
popf
clc
fmuls
mulb
and
xchg
mulb
and
or
adc
jg
mov
inc
jp
lahf
lea
adc
jnp
cmp
sbb
mov
roll
mov
push
andl
mov
negl
dec
pop
mov
and
jb
rorl
lea
jmp
movsb
sub
mov
lods
inc
fs
jmp
sub
inc
loopne
insl
outsl
jnp
push
fmull
mov
cmpsl
ret
bound
dec
cmp
outsb
sarl
std
roll
mov
cmpsb
out
xor
aam
leave
add
fdivs
xchg
and
popf
dec
rcl
and
xor
rorb
jns
arpl
inc
mov
sti
insb
pop
shll
jle
inc
cmpl
push
mov
and
sub
lret
xchg
out
mov
les
adc
mov
jb
sub
cmp
xchg
lods
sub
jne
movsb
mov
sahf
and
push
mov
sbb
sbb
inc
movl
or
cmpb
rcr
jmp
jle
lea
pop
pop
mov
imul
adcl
xor
mov
je
mov
mov
cmp
and
hlt
cmovle
in
push
xchg
sub
xor
or
add
xchg
out
das
out
adc
push
pop
int
das
cmp
jnp
inc
into
jae
cmp
pop
out
jb
test
pop
mov
gs
ror
in
sub
dec
adc
aas
out
popa
clc
dec
pop
stos
pop
fwait
lods
sbb
push
pop
lcall
hlt
sub
mov
mov
lods
faddl
arpl
push
jle
cltd
mov
stc
jns
and
test
mov
gs
xchg
or
in
shlb
lock
idivb
sbbb
test
sbb
jecxz
jle
xor
xor
pop
into
pop
das
rorb
xor
jb
and
add
and
mov
and
mov
aam
mov
repnz
dec
or
inc
sub
out
inc
insb
or
push
in
jmp
or
loope
lahf
popa
cld
lock
jle
sub
jno
xchg
cli
sbb
mov
dec
push
push
mov
les
jecxz
enter
fnstcw
outsl
cmp
loope
out
push
clc
test
cli
das
jmp
jmp
nop
outsl
stos
mov
or
and
cmp
pop
add
mov
ds
pop
outsb
sub
mul
adc
mov
or
popa
lea
xchg
out
call
sti
jge
push
std
pop
add
adc
push
jnp
aam
sbb
hlt
or
comiss
xor
call
add
out
bound
cwtl
xor
lock
and
into
and
in
jg
sbb
arpl
or
sbb
loop
xor
add
xor
outsl
mov
repz
xor
ret
cmp
sbb
push
or
daa
pop
mov
jmp
imul
jae
sbb
movsb
xchg
das
xor
sbb
dec
mov
mov
cmpsl
mov
daa
fists
jae
or
fildll
imul
xlat
fbld
jns
icebp
xchg
ljmp
or
popa
iret
repz
out
adc
dec
mov
enter
testl
mov
sarb
jae
ja
out
loope
inc
sub
adcl
mov
lahf
orl
daa
pop
jb
xchg
push
jp
jno
sbb
dec
int3
pop
pop
pop
sub
and
sub
cld
stos
aam
iret
imul
andl
mov
add
cmp
and
js
arpl
sub
jno
movsb
sti
and
mov
sbb
jbe
rclb
xlat
push
lock
cld
cmp
test
pop
mov
add
sbb
imul
or
clc
push
dec
shrb
push
and
fwait
jp
push
mov
push
jge
jmp
ds
repz
call
lahf
jns
jecxz
ret
shlb
into
std
lret
icebp
ret
cmp
subb
popa
es
push
cmp
aaa
and
mov
jmp
lret
dec
and
leave
ljmp
popa
inc
xchg
fstpl
dec
sub
mov
xchg
out
and
adc
and
insb
mov
pusha
xlat
push
jmp
bound
inc
push
jb
data16
mov
cs
xchg
pusha
mull
sbb
rclb
push
sub
cwtl
cltd
mov
jge
xor
cmc
aam
cld
push
mov
out
mov
lods
add
sub
int3
test
movsl
fstpl
or
popf
div
or
mov
fs
adc
icebp
into
cld
mov
movsb
sti
jnp
test
loop
mov
mov
inc
loope
inc
movsl
out
cmp
mov
push
push
pusha
insb
sti
jmpw
in
dec
movsb
sbb
mov
loop
lods
cmc
dec
and
pusha
mov
call
push
mov
push
mov
mov
add
stos
xor
add
or
jmp
sahf
cmp
jne
les
lods
push
xor
sub
gs
out
jne
rorb
stc
fcompl
out
addr16
mov
xor
roll
nop
lcall
cld
out
sbb
mov
jbe
dec
je
test
call
arpl
mov
repz
idivb
imul
lods
add
push
jp
mov
fcmove
into
inc
insb
inc
mov
pop
sbb
jnp
push
mov
mov
stc
mov
push
popf
and
mov
jne
sbb
jg
mov
inc
flds
cld
outsb
push
aaa
pop
out
adc
mov
stc
fwait
xchg
popa
pop
xchg
inc
frstor
ret
dec
or
ljmp
inc
inc
cmp
gs
xchg
jmp
fwait
push
jnp
cmp
ret
cli
out
fcmovu
cmp
push
push
insl
iret
pushl
cmpsb
iret
mull
repnz
je
mov
sbb
dec
add
ret
and
push
mov
fistl
pop
xor
push
cli
adc
stos
adc
iret
fsubrs
sbb
lds
adc
movlhps
sub
adc
pop
jnp
pop
xor
inc
pop
iret
dec
shl
fwait
jge
xchg
mulb
icebp
into
addr16
movsl
mov
hlt
pop
jg
inc
lret
jmp
stc
cwtl
inc
scas
push
lcall
imul
dec
ret
pop
rcrb
push
or
fs
mov
mov
cmp
and
xor
and
je
xor
fnstenv
mov
aad
add
adc
xchg
bound
loopne
ss
imul
dec
jge
pop
jnp
sbb
call
jns
xchg
je
in
push
into
jl
or
fistpll
fwait
cmp
movsl
jno
mov
gs
lock
sub
call
sahf
xchg
mov
push
sbb
push
pop
and
dec
daa
repnz
ret
inc
call
movsb
jns
in
pop
mov
jnp
sbb
jecxz
cmp
js
and
cmp
cwtl
pop
pusha
pop
mov
push
loope
negb
adc
aas
xchg
mov
add
xchg
out
mov
jae
sahf
hlt
int3
fldt
dec
mov
sub
push
imull
push
movsl
lea
mov
mov
shlb
ljmp
or
stc
inc
xor
stc
js
movsb
je
cs
roll
xchg
dec
add
pushf
out
push
loop
dec
enter
xor
gs
pushf
jmp
push
mov
mov
jp
imul
ficoms
xor
pop
add
mov
or
movl
cltd
mov
xor
shrl
jmp
lock
jg
ljmp
xchg
xor
orl
sub
xchg
xchg
es
data16
or
add
and
addr16
clc
mov
fdivs
inc
pop
mov
adc
xchg
aad
pop
push
repnz
popf
sbb
aas
fs
jne
push
mov
sbb
mov
dec
mov
push
jg
pop
and
aam
stos
bound
inc
sbb
fs
ss
daa
inc
sarb
sbb
movsl
sub
and
std
xor
cmpsl
push
inc
add
addr16
and
arpl
push
mov
and
add
test
out
lcall
shr
ja
xor
mov
rolb
jb
dec
ja
push
dec
lahf
push
cmpsl
dec
or
mov
sub
and
faddl
cltd
addr16
adc
inc
into
pop
shlb
aad
push
dec
pop
mov
mov
or
mov
in
lods
mov
or
push
insl
jno
or
push
mov
daa
enter
mov
push
mov
iret
loope
lds
cs
dec
test
jg
or
es
cmp
adc
jb
jno
ljmp
lods
loope
pop
ss
insb
push
nop
jl
push
roll
sbb
iret
stos
fnstenv
inc
int
xor
and
sti
ficoms
in
xchg
dec
scas
andl
cmp
movsl
mov
std
int
mov
or
adc
insb
leave
xchg
jno
mov
dec
xchg
xor
cs
cmp
pop
dec
adc
jg
jo
or
mov
adc
dec
ja
arpl
orb
and
and
xlat
mov
pop
inc
dec
lods
cwtl
mov
cmc
fnstsw
fs
test
or
ret
inc
push
popf
xor
rclb
mov
scas
fwait
ja
xchg
dec
and
cmp
or
mov
mov
loope
pop
test
cmp
cwtl
mov
xor
push
fnstcw
mov
cmp
pop
frstor
divl
add
mov
inc
incl
push
in
imul
cmp
dec
sbb
clc
and
xor
mov
jle
xorl
dec
jp
sbb
xor
daa
outsb
sub
popa
data16
cmp
xchg
test
rclb
sar
sti
xchg
js
popa
in
jo
sbb
mov
sub
jp
aad
mov
cmpsl
sub
mov
mov
int3
out
xchg
xor
ds
divb
sub
ss
jg
push
nop
mov
xchg
jg
sbb
scas
shrb
sub
ss
mov
mov
rorl
jbe
std
dec
adc
cli
push
push
cmc
fcmovnb
jl
push
inc
lcall
das
xchg
mov
in
mov
repz
fiaddl
inc
jecxz
pushf
bound
sbb
enter
add
xchg
icebp
scas
aad
xorl
inc
stc
sbb
add
jg
scas
dec
fstpl
addr16
xchg
jg
adc
imul
cmpl
push
fcoms
xchg
sub
ljmp
pop
mov
push
es
in
pop
fstpt
stos
mov
or
enter
push
mov
sbb
hlt
push
ror
push
sbb
loope
leave
pop
push
cmp
in
cmpb
xor
imulb
add
test
and
lea
int
scas
repz
shlb
xor
test
scas
test
ds
xor
repz
mov
loope
data16
sub
lock
pop
adc
and
push
stc
add
jae
or
inc
out
dec
inc
jl
es
mov
cmp
outsb
in
push
in
lahf
mov
push
repnz
in
jae
adc
jno
iret
xchg
mov
test
sub
pop
sub
dec
mov
xchg
mov
pop
in
sub
icebp
add
icebp
xor
iret
scas
add
xchg
xchg
fidivrs
sub
sub
sub
pop
dec
xor
push
sub
out
and
xchg
mull
lret
sti
mov
xlat
data16
mov
les
into
mov
jge
adcb
inc
dec
fdiv
mov
mov
subl
mov
push
jae
jno
ficomps
add
adcb
mov
cmpsb
ja
es
push
aas
shll
pop
inc
andl
jbe
xor
into
sub
stos
shl
les
sub
push
sub
pop
xchg
pop
js
jno
aad
xor
mov
jno
cli
push
mov
cltd
jnp
inc
loop
jne
fidivl
test
scas
cltd
int
jg
rorl
push
rorl
je
lret
lret
stos
jae
sbb
sbb
lock
add
jae
pop
jne
or
test
loopne
out
jo
arpl
inc
icebp
mov
or
cmpsl
and
out
fcoms
jns
insl
outsl
shl
das
mov
lret
fsts
cmc
mov
pop
mov
adc
push
repz
pop
fisubs
pop
outsl
add
rcl
dec
adc
inc
push
jb
movsb
scas
cli
xchg
mov
mov
push
or
arpl
add
mov
lea
sub
jbe
xchg
orb
mov
jp
xchg
mov
pop
movsl
push
cwtl
hlt
int3
lret
iret
icebp
test
shlb
cmovl
stos
dec
adc
jp
xchg
fmul
sub
mov
sti
stos
int
cmp
push
dec
xchg
sahf
insb
repz
lock
lahf
xor
push
fs
or
in
cs
sbb
loopne
xchg
mov
fwait
jp
cld
stos
fidivs
push
jnp
jp
add
mov
jns
dec
ret
sub
cld
dec
push
pop
adc
push
daa
xlat
pop
jae
js
push
mov
mov
adc
dec
enter
int3
popa
push
sub
fcoms
mov
or
popl
adc
subl
notb
fcompl
aam
fcomps
in
pop
inc
jge
adc
xlat
adc
in
int3
push
popl
or
loope
jp
mov
dec
es
push
adc
sub
scas
shrl
adc
data16
pop
aad
sub
inc
inc
test
push
xor
xchg
sub
in
inc
fcomps
call
jmp
push
dec
sbb
push
jnp
pop
dec
and
fisubrs
mov
xchg
popa
jecxz
jmp
fcomps
in
movsl
jae
cmp
popa
inc
cwtl
out
dec
int
mov
dec
aaa
neg
imul
jmp
je
popa
pop
sbb
cwtl
jo
je
push
cmp
out
lret
hlt
outsl
push
sub
out
push
rclb
push
mov
mov
jns
pop
mov
stos
lahf
arpl
int
incl
jg
xor
fwait
pop
lahf
sub
mov
sbb
xor
pop
dec
mov
or
adc
movsb
xor
cmp
je
xor
xor
jg
fwait
pop
andb
dec
sbb
mov
mov
push
std
push
cmp
movsl
rcrl
movsb
imul
add
arpl
adc
gs
xor
fisttpll
sbb
lods
cmp
dec
push
sti
sbb
jns
repz
es
adc
mov
add
mov
jo
imul
add
stc
enter
movsb
cmp
push
icebp
roll
out
addr16
test
mov
mov
adc
xor
sub
add
rclb
fwait
into
inc
or
push
push
push
mov
adc
movsb
mov
nop
jb
out
les
iret
shlb
fwait
push
lahf
loop
insb
std
xchg
imul
xchg
or
mov
test
cli
lahf
ljmp
pop
or
mov
sbb
jb
jg
inc
or
pop
in
cmpsb
inc
jns
scas
xchg
push
gs
push
push
xchg
xchg
sarb
lock
and
nop
int3
scas
add
ljmp
lds
fyl2x
or
sti
inc
push
mov
xchg
cmp
mov
ret
fsubr
ficompl
push
mov
push
enter
out
leave
shr
test
repnz
or
cli
fwait
int
fldenv
sbb
mov
adc
test
rorl
cmp
cwtl
dec
cmp
add
ljmp
ret
daa
xor
push
xchg
mov
cmp
or
ss
jle
push
hlt
push
mov
subb
cmp
shrb
loop
cmp
jo
arpl
imul
dec
aas
add
push
lcall
sub
push
or
xchg
cmp
sub
div
push
sub
lret
cmp
cmp
or
add
cmp
jg
add
sub
std
nop
cmpsl
mov
roll
ret
jno
testb
hlt
seta
rclb
bound
pop
arpl
adc
data16
neg
lahf
icebp
lea
ljmp
dec
ss
push
adc
push
xor
adc
pop
add
inc
adcb
ss
xlat
loope
or
jb
rcrl
leave
lret
push
dec
inc
clc
sbb
ret
pushf
fwait
cmp
xchg
sub
push
sti
out
add
mov
roll
sahf
inc
rcrb
aaa
dec
ret
imul
loopne
sbb
dec
cli
jle
adc
inc
loop
add
add
sti
jae
mov
aaa
pop
jmp
nop
dec
xchg
or
lcall
call
push
and
nop
xchg
aad
fisubs
lea
in
jle
fbld
icebp
adc
pop
and
dec
lea
push
mov
icebp
adc
fstl
sub
pop
xchg
ficompl
scas
addr16
movq
int
sahf
sub
dec
dec
or
test
sub
jns
arpl
push
and
insl
addr16
in
outsl
enter
xor
std
sub
mov
sub
ss
mov
jg
andl
jg
aas
popf
push
pop
jecxz
insl
or
fcoms
jno
lret
mov
pusha
aad
pusha
sub
push
and
mov
mov
ret
shlb
sub
xor
cmpps
xchg
loopne
out
ss
inc
mov
xor
fdivs
ja
cmp
mov
pop
push
lea
and
or
mov
ja
lret
dec
cltd
stc
adc
dec
dec
lret
das
ljmp
cwtl
jnp
movsb
pop
imul
scas
adc
sti
divl
int
mov
mov
sub
push
fwait
out
mov
cmpsl
xor
lea
pop
xchg
mov
cwtl
js
rcrb
jmp
mov
mov
add
jae
mov
add
push
mov
lea
shr
pushf
sbb
test
ret
add
or
dec
dec
fidivrl
imul
inc
stc
scas
or
loope
flds
aad
loop
gs
or
es
mov
insl
jne
divl
mov
or
mov
into
cmp
push
in
pop
arpl
clc
mov
jmp
sbb
pop
pop
or
cmpsl
cmp
inc
imul
popa
stos
add
lahf
and
cmp
xchg
xchg
ja
mov
insl
call
lods
xchg
std
mov
sub
dec
cmpsb
addr16
gs
sub
imul
pop
loop
mov
scas
push
scas
mov
sub
mov
cmpsl
push
mov
repnz
xor
inc
push
aaa
lods
lahf
push
test
add
insl
shlb
adc
ljmp
adc
mov
sbb
leave
xor
inc
cmp
jb
jmp
xor
rolb
mov
jmp
add
push
cld
loop
jp
subl
mov
mov
jge
inc
add
stc
lds
inc
dec
sub
iret
es
cmp
fs
push
add
sub
pop
dec
xlat
mov
mov
in
sbb
xchg
adc
xchg
int
arpl
mov
xchg
add
movsl
movsb
les
add
arpl
fidivl
aaa
rorb
ret
fnsave
cmc
icebp
mov
jge
xchg
fiadds
in
lret
sahf
mov
mov
popf
xchg
fldcw
pop
mov
mov
or
fcomip
fmuls
adc
call
nop
xchg
pop
ja
mov
div
sub
adc
adc
xor
lret
pop
fisubrl
push
nop
mov
jb
pop
rcr
dec
or
jp
mov
push
int
mov
call
sbb
dec
aam
push
xchg
and
shlb
mov
test
cwtl
repz
pop
push
and
sub
pminub
dec
sub
xchg
lret
clc
mov
sbb
cmp
not
or
cmp
aad
jl
inc
mov
push
xchg
add
dec
adc
xchg
inc
sub
nop
add
outsb
xchg
mov
dec
mov
or
dec
test
cwtl
and
je
mov
je
inc
daa
js
jne
cs
imul
inc
gs
lods
dec
and
or
inc
das
das
pop
add
cld
inc
xchg
ja
fs
std
lcall
pop
mov
mov
iret
iret
adc
inc
lcall
jl
lret
xchg
ficoml
sbbb
js
ljmp
add
push
ror
xchg
lea
imul
fs
aad
pop
lods
mov
or
jecxz
cmc
cmpsb
and
xchg
cwtl
dec
js
das
lock
aas
lods
mov
jnp
aas
inc
add
lock
jg
jmp
cmpsb
cld
shrl
xor
inc
jns
ss
cs
out
xor
xchg
or
cs
outsb
lret
xchg
and
push
mov
stos
and
rcr
out
mov
cmp
jb
mov
push
notb
cmp
cld
lods
pushf
sub
daa
fidivs
lock
xor
inc
popl
push
ss
lahf
inc
inc
adc
lcall
sbb
pop
xchg
push
add
lock
jne
xor
enter
pop
out
sti
ret
adc
arpl
lods
xor
and
inc
dec
aaa
cli
lods
add
shlb
into
insl
and
adc
xchg
cmp
and
xchg
inc
mov
int
mov
and
or
sbb
scas
mov
outsl
test
outsl
mov
lret
stos
sarb
mov
repz
repnz
push
push
aad
insl
sbb
fildll
push
sbb
mov
mov
xchg
mov
ljmp
xor
xor
movb
xor
aaa
stos
mov
insb
fstps
sti
ret
call
or
lret
ds
pusha
sub
ja
jae
adc
in
inc
adc
ret
mov
es
xor
cld
cltd
inc
sbb
xchg
iret
rcrl
stos
pop
cmp
scas
js
mov
lret
pop
mov
ljmp
jp
lods
lods
scas
aad
add
or
add
mov
test
aas
aas
fisubrs
jecxz
pop
sti
int
in
dec
pop
loopne
pop
es
fs
and
negb
pop
jno
insl
shll
dec
loope
inc
jmp
fimull
andl
add
sub
inc
pusha
aam
cmc
xchg
test
cmpsl
add
cld
clc
out
mov
loopne
and
inc
in
mov
jno
out
out
sarl
or
aaa
pop
dec
jl
divb
int3
add
loope,pt
cld
sahf
xchg
pusha
lea
mov
jns
or
test
pusha
addb
std
xchg
xchg
inc
je
pusha
jnp
rcll
dec
inc
subb
lret
and
mov
lret
and
shl
insb
mov
jl
cld
in
mulb
out
cmp
lods
jmp
inc
push
inc
arpl
pop
push
imul
mov
imul
lods
mov
ret
pop
add
and
inc
xchg
outsb
cmp
scas
hlt
pop
pop
adc
xchg
movsl
mov
lods
and
pop
add
pop
mov
call
sbb
add
or
sub
pusha
sub
pusha
lret
mov
push
outsl
mov
ret
pop
add
xchg
cmp
add
pop
mov
jns
outsb
fisubrl
pop
pop
fisttpl
out
xor
pop
arpl
cmpsb
inc
adc
out
pop
adc
mov
jg
inc
fadds
arpl
cwtl
dec
dec
dec
cmp
aam
popf
ds
sbb
and
push
and
adc
push
add
xchg
dec
stos
arpl
mov
cld
shrl
mov
add
hlt
je
jecxz
ljmp
mov
cmp
push
cld
mov
pusha
aad
xchg
lea
inc
xchg
cmp
test
pushf
jge
clc
mov
out
scas
movsb
loope
stc
fisttpll
lds
sbb
jmp
jno
jecxz
flds
xchg
push
sbb
jg
rcl
pop
inc
push
out
jae
lock
stos
sbb
mov
fdivrp
inc
and
stos
cmp
dec
and
enter
scas
jo
sub
push
jo
adc
push
pop
inc
sarl
or
andb
cmpsb
movsl
jno
movsb
addb
out
imul
js
inc
xchg
insl
sbb
dec
xchg
int
movsl
ret
adc
push
loopne
push
dec
mov
inc
cmpsl
sar
sti
pop
pop
out
or
inc
mov
fs
mov
imul
or
mov
fimuls
jb
xchg
push
mov
insl
inc
inc
jp
mov
dec
dec
sub
inc
or
jns
and
aaa
es
jnp
cs
sbbl
ret
out
inc
cli
pop
and
cmp
jbe
pop
aaa
nop
das
lea
cmp
repnz
sbb
js
imul
and
mov
sbb
insl
jbe
ret
loope
out
sub
outsb
stc
xchg
je
add
lret
mov
cmpsb
cmp
sbb
dec
clc
movl
xchg
test
into
cwtl
out
cmpsl
jle
mov
adc
adcb
outsb
leave
out
outsl
int
hlt
jecxz
pop
add
sbb
mov
arpl
and
pop
out
dec
arpl
enter
dec
mov
pop
test
pop
int
iret
aad
jp
sub
jmp
insb
iret
push
pop
fs
mov
sbb
fwait
testb
loop
nop
mov
stos
cmpsl
and
add
cmp
sarl
test
in
inc
lods
dec
push
sbbb
movsl
movsl
mov
and
adc
in
pop
or
into
mov
mov
pop
add
sti
jbe
mov
sub
push
dec
mov
jno
jle
push
mov
pop
jmp
xchg
push
fsubrl
jnp
jae
mov
ljmp
loop
mov
pop
imul
fcoml
xchg
test
lods
js
or
pop
jne
lock
sub
sub
pushf
push
push
or
ret
ret
pop
sbb
mov
lret
dec
scas
in
out
jns
popa
aas
sub
in
xchg
mov
add
lcall
pop
sub
push
aaa
mov
test
lcall
inc
inc
fiadds
cmp
jp
out
in
xchg
not
jno
inc
inc
das
cmp
or
out
lss
orb
fs
repnz
imul
xor
lahf
pushf
out
rcrb
cmp
push
mov
cltd
xchg
popa
push
inc
imul
cwtl
fmul
mov
movsl
imul
jp
jmp
popl
das
lcall
xchg
ljmp
adc
and
loopne
lock
mov
scas
in
jae
cs
push
xchg
ds
push
mov
sub
imul
jg
or
orl
in
or
ds
mov
arpl
mov
adcl
mov
std
stos
cmp
mov
dec
stos
mov
and
imul
lret
adc
addr16
arpl
test
cmp
enter
fiaddl
jecxz
pop
subl
mov
aad
xor
push
xor
or
jns
xor
scas
sub
pop
sbb
idivl
int3
outsb
into
dec
in
cmp
aas
push
mov
loope
daa
xchg
pop
lret
daa
cmc
dec
idivl
jbe
push
push
fdivr
sub
xchg
add
dec
pop
insb
insl
and
hlt
xchg
cmp
mov
mov
jns
call
test
jnp
cmc
nop
jb
inc
mov
nop
xor
inc
sbb
push
lcall
in
xchg
jo
mov
mov
xchg
xchg
and
adc
xchg
ret
sub
imul
sbb
dec
test
sub
mov
popa
test
add
stos
dec
mov
jmp
add
mov
push
pop
pop
mov
push
fs
dec
or
xor
ljmp
negb
aaa
xchg
pop
xor
scas
adc
push
xchg
pop
push
rcr
loop
std
mov
aad
sub
mov
fwait
add
stos
rcrl
push
shlb
pusha
stos
mov
inc
cltd
addl
adc
cmp
or
jl
xchg
add
jp
jle
arpl
or
dec
cmp
xor
mov
and
stos
mov
dec
and
stos
imul
shrl
adc
test
ret
dec
jbe
lahf
pop
fistpl
subl
test
mov
enter
out
insb
jno
cmc
add
mov
push
bound
in
loop
insb
int3
push
pop
add
jo
dec
mov
pop
sub
sti
fidivl
dec
dec
mov
rcll
test
inc
call
stos
jnp
cmp
fucomp
ret
popa
mov
xlat
jbe
adc
xchg
enter
inc
or
cltd
push
mov
mov
push
xorb
mov
shld
pop
push
cmc
in
lods
xor
jbe
aad
popa
mov
jecxz
jnp
add
aas
test
pop
cld
clc
js
jae
cmpl
xor
push
push
lds
cmp
mov
stos
negl
push
stc
cs
mov
pop
cmp
xor
jge
mov
lea
das
int
outsl
mov
in
idiv
stos
mov
iret
in
inc
mov
xchg
mov
mov
cmpsl
mov
or
and
mov
or
xchg
mov
mov
dec
cwtl
pusha
sbb
xlat
or
imul
adc
xor
call
dec
or
std
cwtl
into
out
pop
test
adc
sub
adc
sbb
jae
stos
pop
pop
add
mov
push
jae
jne
mov
aaa
xchg
jl
sarb
int3
rclb
iret
xchg
xchg
lret
vshufpd
fucomi
lahf
lcall
test
pushf
and
mov
xor
lcall
cmp
cmp
push
mov
lahf
sete
scas
add
push
ret
rcl
and
js
mov
dec
orl
enter
call
leave
sub
pop
lea
in
sub
shrb
test
xor
mov
inc
sbb
adc
jo
xor
ja
xchg
adc
or
dec
out
mov
inc
push
jb
inc
mov
or
movsb
ja
fst
clc
ja
and
pop
repz
xor
enter
aam
popf
xor
xor
mov
shrb
divb
adc
dec
std
lods
or
dec
iret
push
in
imul
push
pop
cmp
fmul
xor
rolb
call
sbb
sar
in
ret
cmpsb
xor
stos
dec
jp
jmp
add
mov
add
loope
xor
xor
jns
iret
mov
test
cmp
or
fs
ret
push
cmp
fwait
pusha
inc
lods
loop
inc
cmp
ret
hlt
mov
hlt
aaa
dec
rorl
test
pusha
pop
fnstenv
pop
jns
insb
add
fs
loope
pop
cld
add
xchg
jg
xor
cmp
addr16
out
jl
or
cmp
sub
xor
imul
mov
xchg
and
cld
jo
cmp
pop
mov
ja
int
stos
scas
jecxz
and
in
and
loop
test
cmp
call
in
cmc
push
cli
faddl
xor
out
push
xchg
sub
adc
jne
sbb
lock
or
mov
pop
iret
fldt
jno
shll
push
add
loope
dec
xchg
addr16
pop
bound
push
mov
sub
xorl
mov
out
mov
jb
jbe
clc
imul
lds
mov
std
xchg
cmp
loop
test
xor
cwtl
pop
sbb
xchg
pusha
dec
ss
sbb
test
jbe
imul
nop
lret
fwait
shlb
mov
and
inc
mov
cltd
vminpd
std
mov
push
div
jecxz
jl
in
jle
pop
push
mov
mov
sub
and
mov
adc
rcll
scas
ret
adc
icebp
leave
push
add
movsb
mov
mov
jns
pop
pop
pcmpeqw
in
and
add
lock
and
cmp
adc
xlat
jmp
leave
ret
dec
xor
or
iret
clc
test
push
add
std
std
or
bound
pushf
aam
inc
test
loopne
inc
xlat
mov
jmp
add
jmp
fsubrl
adc
mov
clc
cmp
lock
iret
add
sti
mov
and
mov
push
daa
cmc
sarb
btc
pushf
jmp
dec
or
mov
xor
mov
jo
mov
repz
leave
inc
lods
jo
xchg
ljmp
mov
pop
cmc
sub
fs
jns
fadds
sub
insl
sbb
sahf
or
xor
sbb
dec
mov
lcall
xor
into
int3
iret
lock
pop
cmp
inc
neg
sub
mov
ss
lock
inc
ret
sub
outsb
xor
arpl
fstpl
push
mov
push
jg
adc
dec
test
jp
pop
mov
inc
je
aad
lock
movsb
xor
fiadds
cwtl
push
int3
movsb
shr
test
inc
dec
sbb
insl
rolb
mov
lret
popa
mov
imul
addr16
sahf
sub
lcall
jnp
sub
testl
mov
outsb
jmp
xor
mov
fucomip
mulb
popa
mov
push
or
pop
ja
cmp
scas
frstor
dec
roll
out
mov
loopne
jge
test
loop
mov
mov
rcl
stos
popa
mov
xchg
cmp
insl
out
out
or
add
sahf
add
adc
aad
mov
push
mov
mov
pop
lret
add
mov
shrl
enter
addr16
cmp
subb
leave
pushl
cwtl
or
addb
call
and
cwtl
pop
cmpsb
je
pop
xor
loopne
outsb
jo
jnp
fwait
push
out
aad
add
gs
push
sbb
inc
enter
mov
mov
std
lods
or
lods
lods
xchg
loop
loope
fwait
movsb
leave
or
and
jg
mov
fcomps
sub
push
lcall
rclb
and
fmul
outsb
xchg
xlat
inc
call
push
int3
dec
popa
cmpl
loop
cli
sahf
jo
loop
pop
aam
mov
sbb
jae
jmp
dec
js
rclb
das
xchg
mov
jle
sbb
jo
jbe
ret
sbb
call
xchg
adc
scas
outsb
and
mov
push
mov
gs
es
mov
pop
rcll
jns
mov
call
movsb
xor
sahf
mov
sti
mov
push
jae
jae
adc
repz
jp
seta
cs
inc
bound
fstl
aam
cmp
shll
lock
mov
and
ljmp
sbb
int
shll
sub
inc
sbb
icebp
xchg
scas
mov
scas
mov
out
test
fldcw
popf
out
call
sar
jge
les
lcall
bound
aad
add
dec
mov
ds
fnstenv
enter
andb
clc
mov
out
push
sbbl
cmp
xchg
enter
or
repnz
in
jns
push
xchg
and
je
mov
fdivr
rcl
jmp
dec
mov
stos
sbb
pop
xchg
dec
rcl
jge
cmp
test
insl
cltd
jge
sub
xor
sbb
push
push
aad
rol
aad
ja
addr16
in
pop
xchg
mov
ficoml
and
outsl
pop
xchg
cs
sbb
xchg
insb
inc
addr16
or
scas
dec
mov
mov
cmp
cld
ret
fbld
mov
dec
out
insb
xor
xchg
adc
mov
xchg
repz
sub
call
shll
mov
test
lahf
lahf
mov
jmp
push
movsb
ds
mov
les
or
clc
adc
mov
cmc
mov
aad
add
cmp
mov
cmp
lret
sbb
rcrb
loopne
arpl
fstp
mov
cmp
insb
hlt
mov
and
cmpsl
rorb
cwtl
mov
dec
sbb
scas
or
outsb
insl
into
cmpsl
mov
ret
mov
jecxz
outsl
in
inc
mov
mov
fisttpll
xor
cltd
cmp
out
data16
insb
xchg
repnz
inc
sbb
mov
repnz
mov
or
out
push
inc
ret
sbb
mov
loope
inc
cli
xchg
dec
loop
and
pop
pusha
in
fistps
divps
into
jns
add
sbb
mov
dec
jo
lds
outsl
fcos
js
imul
sbb
inc
stc
add
sbb
push
std
cmp
mov
inc
and
outsb
fmuls
sbb
pminub
mov
fwait
cmp
fnsave
jbe
cmp
mov
xchg
rolb
leave
dec
outsb
inc
inc
dec
pop
push
pop
mov
mov
mov
push
push
stos
jge
cmp
add
cmp
jecxz
push
mov
lock
jg
sub
sahf
mov
xacquire
cmpsl
insl
int3
in
iret
enter
mov
stos
ds
sbb
pop
and
loopne
dec
mov
xlat
xor
shrl
repnz
add
pop
es
mov
lds
or
mov
sbb
xor
or
jo
ja
jge
fdivrl
or
inc
loop
pop
jne
add
mov
ss
filds
sub
pop
inc
cmpsl
inc
mov
cmp
push
xor
adc
xlat
xchg
xor
push
popf
mov
mov
xor
test
pushf
sub
mov
mov
and
hlt
mov
movsl
mov
orl
in
mov
xchg
hlt
movsl
jl
xor
lret
ds
jo
jnp
lea
imul
aad
or
add
aas
mov
inc
hlt
popa
ret
insb
fidivs
ljmp
jge
lds
add
xchg
mov
sub
out
shrl
das
outsb
inc
cmp
xchg
mov
stos
adc
push
xchg
repz
bound
and
adc
mov
push
sahf
mov
fiaddl
jns
jecxz
adc
orb
mov
pop
repz
ret
push
insb
aaa
dec
jl
call
stos
rclb
inc
mov
sti
sub
mov
iret
mov
lds
pop
mov
inc
push
loop
sarb
xor
shlb
sbbb
out
sub
imul
and
mov
xchg
loop
cmpl
test
lods
jns
sub
inc
jle
push
mov
sarb
orb
icebp
jnp
mov
shrb
and
lds
ss
jne
pop
scas
push
jecxz
jae
mov
into
pop
xchg
cli
jo
int3
and
mov
shrb
hlt
xor
ja
repz
addr16
sub
add
add
pop
sbb
loop
xchg
mov
sub
sub
mov
aam
lods
jmp
xchg
enter
hlt
lock
jns
and
xchg
popf
jecxz
fwait
inc
and
add
inc
push
pop
sub
xchg
pusha
push
fimuls
or
je
pop
std
sbb
scas
push
mov
out
mov
xchg
mov
lahf
jecxz
pop
jl
sbb
push
scas
aam
mov
push
ret
dec
int
ficoms
jne
sub
iret
inc
xor
fldl
sbb
shrb
push
rcrl
aaa
jbe
cmp
jle
adc
xchg
push
jne
lods
lods
arpl
pop
fs
sbb
sub
cmp
jmp
ljmp
arpl
pop
pop
or
xor
aad
fcmovnbe
test
rcrb
test
pop
fldenv
push
jecxz
int3
push
mov
add
push
loop
and
movsb
jmp
xchg
test
xchg
aad
xchg
orb
push
jmp
enter
pop
and
or
and
mov
lret
jns
mov
add
mov
mov
cmp
inc
push
repnz
inc
xchg
cmp
loopne
insl
mov
ljmp
mov
dec
pop
sub
dec
data16
adc
cld
mov
adc
movb
test
and
es
lcall
stos
cld
xchg
ja
mov
in
mov
jmp
loopne
dec
ja
inc
jns
inc
addr16
mov
popf
pop
jns
dec
aaa
or
push
fnstcw
clc
inc
cld
adc
arpl
addr16
nop
sbb
in
add
vshufps
cmp
adc
cmp
xchg
cmp
xchg
data16
mov
dec
jb
les
pop
mov
ljmp
push
cmpsl
cmp
in
or
jae
mov
lret
into
leave
movsl
xchg
inc
jg
jae
js
push
mov
mov
mov
sub
jge
fpatan
into
movsl
jno
sbb
in
int
jl
xor
scas
ljmp
xlat
std
lods
je
or
mov
loop
and
popa
int
aad
sub
int
sbb
and
inc
idiv
xor
sbb
mov
lret
or
inc
sbb
addr16
int
shll
lret
je
push
inc
pop
add
repnz
cmc
jne
sahf
das
jl
mov
add
sbb
cmp
in
leave
and
push
testl
loope
test
mov
xorl
cmp
test
push
sahf
xchg
out
dec
movsl
sbb
sti
mov
push
cmpsb
bound
les
lods
les
leave
int3
sub
testl
cmp
jge
rcrl
jg
mov
aam
mov
cmp
in
mov
or
insb
xor
sub
loop
test
jb
std
or
test
pop
aas
int
dec
call
pop
imul
pop
aas
sub
pop
mov
call
out
pop
mov
mov
jbe
ror
repz
sbb
xchg
shrl
lea
jg
movsl
lods
push
and
dec
das
push
js
xchg
lock
out
pop
cmp
sub
or
jmp
mov
inc
in
daa
mov
xchg
jo
mov
into
push
xor
push
nop
fldt
je
mov
test
rcrb
repnz
or
xor
ja
fstpl
repnz
popf
mov
fsubrs
xchg
icebp
xchg
in
jns
mov
jne
xor
adc
inc
test
add
dec
jg
daa
std
sahf
cwtl
inc
push
test
cmp
idivl
mov
jge
mov
jno
sbb
or
xor
jle
add
inc
and
push
lahf
jecxz
sbb
jns
ret
add
addl
sbb
mov
dec
push
jmp
jp
stos
ds
xchg
mov
test
jnp
cmc
into
lds
popa
es
mov
push
mov
daa
mov
add
pop
mov
mov
lods
in
call
dec
and
pop
rorl
sbb
loop,pn
sbb
adc
stc
ds
daa
push
pop
testb
or
mov
adcb
iret
js
mov
das
js
push
pop
dec
sbb
push
test
aam
xor
push
mov
dec
jle
stos
aam
inc
add
mov
out
gs
mov
pop
sub
loopne
lods
pop
xchg
or
outsb
add
cmp
in
jne
pop
loope
imul
adc
add
push
jge
sbb
test
dec
mov
cmp
lea
lea
loopne
shlb
dec
sti
jne
sub
test
lret
ljmp
cmp
fimuls
xorb
adc
jle
sbb
mov
jmp
cmp
xorl
xorb
mov
jnp
sub
sub
jge
lcall
iret
or
imul
fsts
xchg
decl
js
mov
negl
xor
and
or
and
scas
xlat
repz
jge
mov
xchg
pop
mov
in
xor
aaa
mov
pop
es
bound
pop
pushf
lahf
inc
jg
xor
bound
sahf
mov
sti
cmc
lcall
into
insb
pop
rolb
fwait
daa
mov
mov
mov
outsl
sub
mov
negl
xchg
pop
add
adc
cmpsb
rorl
pushf
es
int3
add
outsl
xor
or
pop
jle
or
idivl
in
dec
inc
push
in
iret
lods
cmp
inc
xlat
mov
movsb
push
daa
iret
nop
repz
xchg
cltd
sbb
pop
xor
aas
mov
mov
ljmp
mov
dec
lea
aaa
lret
in
dec
or
mov
push
mov
xchg
xchg
aas
fbstp
inc
jg
aam
sbb
or
cs
cmp
sti
cmp
or
aad
aad
sub
hlt
dec
cs
sub
jp
es
aas
insb
dec
cmp
aas
xchg
push
push
test
imul
movsl
mov
ss
push
movsb
mov
jbe
cli
int
nop
pop
lods
mov
pop
mov
inc
int
das
outsb
xor
mov
bound
cmc
ds
jns
sub
inc
inc
push
sahf
sub
pop
in
xchg
enter
rep
fistps
jns
cmp
movsb
or
aam
xlat
mov
fldln2
pop
mov
jle
or
push
sahf
cmp
sub
jl
movsl
xchg
push
xchg
in
xchg
cli
sub
ss
mov
aad
mov
int3
sbb
push
fwait
mov
imul
push
adc
add
push
cs
sbb
adc
push
sub
test
push
ss
daa
dec
sbb
test
pop
sub
das
bound
add
sub
adc
inc
cmc
inc
leave
movsb
das
mov
inc
push
movsb
fadds
test
mov
sbb
and
enter
push
pop
xchg
dec
jnp
hlt
scas
jecxz
mov
dec
mov
iret
hlt
stos
aaa
stos
int
les
sbb
ss
lret
adcl
sbb
ret
add
popa
sub
add
nop
mov
orb
aad
fldenv
xchg
dec
js
mov
ljmp
cmp
mov
add
xchg
jo
jno
aad
pop
and
jae
mov
into
popf
into
dec
mov
bound
jl
mov
shlb
push
inc
pushf
shlb
mov
pusha
aam
mov
test
lahf
push
inc
dec
bound
mov
xor
add
incl
or
sub
je
mov
pop
stos
dec
xchg
sbb
xchg
inc
in
inc
pop
bound
push
jns
cmc
jp
insb
lock
jbe
push
cwtl
mov
cmp
cld
add
sbb
call
and
xor
mov
push
cld
jg
ror
mov
sar
dec
lret
insl
mov
mov
sub
cmp
loopne
idivl
dec
jno
fucomi
ja
sbb
std
fmulp
inc
pop
pop
pop
mov
mov
mov
push
and
in
sub
mov
ja
out
sbb
int
pop
clc
imul
add
or
cmpsl
fxsave
cld
aam
sub
out
cmc
lea
loopne
jmp
aam
mov
nop
xor
inc
adc
mov
sbb
pop
sbb
mov
enter
add
xchg
repnz
bound
or
addr16
aaa
mov
lret
dec
mov
push
orl
mov
nop
mov
xchg
test
xchg
jmp
test
add
push
pop
mov
cmp
dec
and
fwait
jbe
mov
push
out
out
and
js
les
inc
jne
jne
cltd
pop
cmp
and
es
ret
jns
ja
mov
jmp
add
dec
mov
mov
repz
dec
gs
mov
xor
or
sbb
add
mov
mov
ss
adc
pop
lods
scas
fisttpll
loop
out
hlt
out
mov
push
pop
xchg
paddsb
cmpsb
or
inc
adc
movsl
push
or
mov
dec
fstps
xchg
adc
sbb
mov
inc
test
cmpsl
dec
movsb
daa
leave
in
in
testl
ja
adc
cld
lret
aam
rolb
cli
sub
lea
in
imul
mov
arpl
test
cmp
pop
cmpsb
mov
or
ja
sub
fadd
mov
jl
mov
mov
cld
cmp
xchg
in
jl
aas
jmp
and
mov
xlat
rcll
xchg
je
lcall
mov
dec
mov
dec
enter
jae
insb
push
mov
mov
and
loope
dec
inc
insb
test
cmp
dec
xchg
out
lods
dec
loopne
mov
bound
cmc
sbb
aas
mov
pop
xchg
loopne
ret
movsl
pop
imulb
repz
xchg
and
adc
jp
out
push
pushf
and
negb
mov
mov
fldt
dec
pop
push
fcmovne
sahf
imul
mov
xchg
test
repz
loope
or
enter
les
imul
or
cmp
adc
in
mov
mov
lret
sub
xlat
mov
inc
call
jo
lcall
shlb
xor
ds
cmpl
push
pop
sub
les
sub
adc
sbb
xchg
lds
fwait
add
test
repz
lcall
xor
sub
roll
dec
dec
xor
sub
aam
adc
in
in
out
pop
cmc
mov
add
ss
sbb
mov
stos
or
mov
sti
push
cltd
lds
pop
int3
pop
jne
mov
and
pop
add
add
dec
jne
rorb
into
cld
pop
loopne
dec
cmp
loop
out
mov
dec
lret
jecxz
cli
mov
pop
xchg
jb
testl
mov
imul
fwait
sub
fyl2xp1
dec
pop
add
insl
sahf
inc
pop
fildl
clc
das
add
imul
das
mov
hlt
and
shll
hlt
dec
dec
mov
fsts
or
push
mov
xchg
nop
es
dec
sub
fs
ret
clc
mov
dec
loope
leave
add
or
into
pop
iret
mov
cmc
sub
rcll
adc
loope
adc
sbb
pushf
enter
bound
dec
jno
cmpsb
ja
xchg
outsl
repz
push
ljmp
mov
lock
cmpsb
xchg
sti
add
xchg
pop
pop
jbe
inc
or
aam
add
dec
popa
xchg
jp
hlt
pop
sti
mov
fisubs
mov
sbb
std
pop
xchg
roll
push
mov
sbb
push
loope
xchg
mov
lock
fs
js
fnstsw
int
pushf
push
gs
cs
dec
add
mov
mov
push
sahf
xlat
xor
iret
sub
pop
mov
pushf
out
lret
stos
pop
call
or
ja
mov
ljmp
sub
shll
jne
sbb
int
dec
mov
sub
fsubs
mov
cld
outsl
sbb
mov
pop
sbb
movsl
mov
pushf
outsb
add
test
xor
ja
mov
xor
mov
dec
cmp
push
jl
add
fcmove
and
fidivrs
addb
mov
push
cmp
push
shl
fimull
aam
jno
rcrl
repnz
push
mov
rcrl
loop
mov
push
jmp
outsb
mov
out
inc
lahf
movsb
bound
lret
mov
sub
shlb
push
xor
insb
mov
mov
pop
jae
in
les
in
daa
or
stos
xor
push
pop
pop
cmp
and
das
cmp
xor
movsb
stc
clc
cmp
cld
xchg
mov
ljmp
push
out
push
insl
push
push
push
sbb
shll
sub
mov
pop
push
jg
cmp
and
pop
push
ret
dec
movsb
xor
pop
xchg
dec
xchg
mov
or
xchg
xchg
add
pop
not
mov
ret
xor
lret
adc
aaa
scas
push
or
mov
sar
mov
cltd
add
repnz
mov
enter
mov
mov
and
xchg
adc
nop
xchg
or
sahf
push
xlat
mov
jnp
and
pop
cmp
popa
mov
mov
ja
xchg
lods
icebp
or
jns
addr16
xchg
sub
adc
mov
int3
inc
push
out
inc
add
xor
loope
dec
pusha
push
dec
sbb
jo
ret
mov
ds
repz
or
pop
or
add
mov
iret
ljmp
pop
mov
and
mov
mov
ja
test
lods
cmpsb
dec
test
jo
mov
into
sti
sti
cmc
insb
sbb
dec
ljmp
insl
or
int3
adc
pop
lcall
loope
push
inc
loope
sarb
adc
fadds
mov
push
mov
pop
sti
push
and
mov
into
stos
xlat
pop
insl
mov
adc
ret
stc
fldenv
adc
clc
rcl
cmp
arpl
push
push
jo
or
and
xchg
loopne
cmp
mov
test
lcall
cmc
and
sub
orl
rcrb
lret
xchg
and
or
cmp
mov
leave
cmc
divl
pop
call
sbb
daa
mov
xor
jmp
cli
data16
daa
jmp
les
mov
dec
fwait
call
xor
fsub
loope
lods
pop
or
mov
cmp
bnd
or
leave
int
fstps
push
mov
aas
xchg
dec
inc
inc
cmpsb
ja
xchg
add
jae
xchg
ds
cltd
aaa
aas
movsl
pushf
mov
sarb
jecxz
ret
mov
aam
insb
inc
mov
mov
jae
mov
cmpsb
aam
repnz
add
adc
sar
mov
add
jb
inc
dec
and
leave
aaa
insl
pop
jno
sbb
cmpsl
mov
dec
test
cmc
hlt
fists
testl
jg
pop
push
cmpl
ret
repnz
cltd
push
loop
lret
aaa
mov
sbb
imull
mov
xchg
arpl
xchg
fstpt
inc
inc
pusha
jnp
xchg
jne
lcall
cltd
in
jnp
pop
or
les
loopne
xorl
adc
stc
ljmp
int3
out
or
lea
adc
sub
push
movsl
mov
cmp
jp
jl
inc
add
cmp
fbld
cmp
pop
xor
xor
xor
inc
ljmp
test
adc
out
cmp
outsb
push
pop
repz
push
daa
dec
push
outsb
xchg
outsl
add
or
push
mov
push
std
jnp
pop
sub
test
xorb
out
lods
nop
orps
fsubrs
lods
es
mov
push
fsubs
gs
sbb
cmpsb
inc
dec
aaa
mov
add
loop
add
adc
mov
movsl
ret
es
outsb
lods
jb
push
mov
mov
mov
mov
xor
aad
test
sub
add
faddl
je
mov
loope
stc
test
push
inc
ret
mov
loope
pop
je
in
inc
popf
cmove
cwtl
cld
cmp
fistpl
cmp
orl
imul
out
cwtl
cmpsb
jge
sub
dec
outsl
inc
sub
xchg
in
clc
add
int
cmp
movsb
xchg
insb
jp
sti
push
sbb
add
mov
push
clc
jno
shl
lret
dec
fst
cmp
push
js
lods
sahf
pusha
outsb
sub
ss
cmpb
xchg
clc
into
add
loope
mov
fwait
stos
adc
hlt
jb
icebp
scas
int
sub
shlb
pusha
or
jge
jbe
daa
ss
fwait
and
pop
stc
lret
movsb
jecxz
or
ret
les
sub
lret
push
and
cmpsl
xlat
lahf
push
adc
cmp
roll
sub
mov
xor
or
pop
in
cld
pop
leave
push
xchg
pop
and
shlb
and
cld
mov
jnp
in
imul
mov
adc
dec
push
ljmp
inc
inc
or
repz
in
xor
popf
sbb
or
popa
outsb
incl
dec
insl
outsl
xchg
pop
popa
vorpd
cmp
mov
and
bound
outsl
adc
push
mov
out
pop
lret
subl
icebp
outsl
cli
repnz
out
xchg
pop
ds
inc
mov
pop
sbbb
pop
gs
imul
pop
int
aas
xchg
mov
xchg
ret
int
in
fcoml
test
or
addr16
lea
aas
xor
pop
jecxz
testl
movsb
fwait
daa
mov
add
ja
mov
loope
add
adc
cmp
sbb
xor
js
jns
pushf
xor
mov
cmc
or
out
shrl
push
mov
mov
push
inc
movsl
adc
dec
xchg
sub
push
stos
mov
in
jno
not
xchg
sub
hlt
jae
push
ds
push
mov
cmp
pop
sbb
cmp
andb
mov
das
sub
psubb
pop
inc
adc
push
inc
sti
mov
int3
repnz
aas
mov
repz
neg
and
add
jmp
sbb
imul
mov
insl
scas
jae
arpl
xchg
lods
pop
adc
and
hlt
or
jge
inc
movsl
imul
repz
adc
out
pusha
adc
mov
sbb
out
sbb
cmpsb
dec
popf
push
add
and
int3
xchg
inc
lods
mov
shlb
push
mov
in
dec
and
lret
aas
and
in
movsb
xchg
jae
mov
jp
data16
jno
xor
iret
jmp
push
sbb
jecxz
push
jle
std
and
pop
add
mov
cmp
add
loope
movsl
mov
aad
aad
ds
mov
sbb
and
push
jle
rolb
shlb
pop
and
loope
std
adc
mov
and
popl
test
dec
imul
jbe
enter
or
iret
add
ret
arpl
inc
dec
mov
test
jne
add
and
jo
jne
lret
stc
popa
cmpl
fistpll
mov
mov
xchg
or
pop
sub
pop
aam
leave
sbb
mov
jnp
inc
inc
add
iret
in
in
loopne
cmp
je
out
push
mov
pop
sub
std
cmp
int
leave
aaa
sub
mov
fimull
mov
pop
aas
leave
cmp
add
sbb
mov
enter
fnsave
fildll
sbb
jl
dec
rep
aam
dec
sbb
inc
adc
aam
ret
hlt
iret
xchg
inc
adc
js
repnz
xor
int
and
out
ss
lret
jns
adc
or
xchg
pop
cltd
sub
into
imul
xlat
cmp
jp
cmp
push
lahf
or
mov
pop
add
xchg
mov
clc
jmp
mov
addr16
pop
jl
jmp
adc
fwait
dec
push
xor
push
xor
push
nop
jo
scas
mov
lods
inc
xlat
repz
add
mov
lods
shl
push
xchg
sbb
pop
mov
add
jge
add
pop
not
insb
jo
mov
xor
add
ljmp
cmp
jo
in
mov
jo
sub
inc
dec
xor
mov
push
xor
xor
jle
sub
push
ds
jge,pn
popf
pop
into
xchg
xchg
dec
repz
rclb
out
mov
sub
in
add
lahf
xchg
push
frstor
pop
xor
push
mov
sbb
mov
sbb
in
push
or
scas
dec
sbb
add
or
incb
push
shll
lods
adc
gs
mov
inc
mov
pop
cmp
pop
push
or
cmp
cmp
shlb
xchg
pop
popf
cmp
pop
icebp
maxps
out
and
mov
fcomp
sub
ret
pop
ret
pop
pop
cmpsb
mov
push
xor
pop
movsl
pop
dec
lret
dec
sbb
push
sub
pop
jo
dec
in
cmpb
push
fnstcw
pop
and
inc
jg
aam
les
adc
movsb
inc
add
sub
xchg
fsubrl
push
mov
cmpb
pop
das
xchg
jle
in
mov
xchg
mov
lret
icebp
ljmp
fwait
mov
adc
mov
les
inc
push
mov
pop
stos
ljmp
pop
pop
or
shrl
add
jno
sbb
icebp
dec
jbe
gs
mov
das
jmp
sbb
in
jg
pusha
push
mov
mov
push
mov
mov
mov
loop
in
add
dec
loopne
push
inc
stos
push
cmpsl
mov
or
xor
adc
out
lcall
push
mov
adcb
sbb
inc
push
cmp
push
jmp
xchg
xchg
xlat
sub
stos
push
cmp
rolb
fsubr
hlt
push
adc
stos
inc
mov
stos
add
int3
lahf
inc
dec
adc
mov
das
xorl
mov
or
insl
sti
aam
sbb
test
pop
sub
mov
jmp
pop
popf
or
pushf
pop
sbb
pop
jae
xlat
adc
xor
addr16
jge
arpl
pop
pusha
dec
xchg
insl
mov
scas
decb
xchg
xor
mov
sub
add
sub
pop
add
test
lea
xchg
test
repz
or
add
adc
cmp
push
dec
jge
rolb
cmp
dec
cmp
iret
cmc
cmp
clc
int
jns
xchg
xor
inc
jo
push
jp
test
push
repnz
cli
jmp
mov
decl
mov
jo
mov
lret
pop
adc
mov
scas
jno
in
and
mov
jae,pn
jbe
adc
fsubp
movsb
ja
dec
push
fisttpll
adc
mov
xchg
adc
stos
add
mov
jmp
in
insl
adc
dec
xor
cli
xchg
add
clc
pop
imul
mov
lret
mov
adc
pop
lahf
mov
push
loope
shrb
sbb
rorb
loope
and
mov
push
jae
ds
clts
mulb
mov
xor
push
xchg
test
std
mov
jo
pop
cld
fsubr
leave
cs
arpl
and
cmc
fcmovb
jno
fwait
insb
push
lds
es
lods
dec
cmp
int3
in
icebp
pop
pop
icebp
mov
or
jnp
outsb
aaa
in
adc
add
xchg
inc
push
mull
in
pop
cmc
push
jg
lret
mov
fwait
jmp
push
dec
bound
mov
fstpt
mov
mov
popa
mov
insb
push
pushf
add
ror
xor
cmpl
or
jmp
cmpsl
mov
loopne
inc
leave
addr16
gs
cmp
aam
ljmp
jle
lods
fwait
loope
dec
outsl
std
sub
cmp
pop
xor
outsl
inc
lahf
test
push
les
xchg
mov
push
arpl
or
xlat
dec
push
shr
test
pop
ds
xor
out
sub
ljmp
gs
xchg
jle
in
test
fidivl
ja
lea
std
dec
jae
cwtl
cs
cmp
jae
pop
push
sub
rolb
cmpsl
je
pusha
pop
out
mov
inc
sub
dec
test
push
in
push
or
adc
cs
push
out
or
icebp
lods
mov
mov
push
mov
jb
add
dec
xchg
cmc
and
sbb
xor
test
add
data16
hlt
in
outsb
repnz
adc
test
push
sbb
and
dec
pop
cmpsl
cmp
aaa
enter
cmp
loop
aad
sbb
stc
pop
out
xchg
sbb
adcb
iret
test
test
dec
jne
insb
sbb
cmp
or
shll
pop
pop
fisubs
pop
mov
orb
sbb
loope
dec
fbld
mov
mov
cli
mov
push
adc
fldt
jae
jg
out
cmp
inc
jae
lods
loope
mov
aad
ljmp
and
xlat
sbb
pop
push
mov
adc
jmp
add
sahf
jbe
inc
int
out
adc
fdivrp
pop
test
mov
loope
xorl
fs
xchg
mov
movsb
mov
and
and
push
pop
mov
and
fistl
or
and
adc
and
mov
jmp
sbb
dec
lret
push
lods
movsb
ret
jae
mov
pusha
ss
rcll
or
stos
stos
add
pop
dec
mov
mov
imul
lret
push
pop
lahf
cmp
sub
cmp
xor
shlb
add
ljmp
jno
mov
sbbb
cs
call
add
adc
clc
jae
mov
cmp
sbb
sbb
cmp
cmp
sahf
sub
repz
and
push
lds
sysret
xor
shl
or
mov
cmpsb
shrb
pop
mov
adc
insb
ss
pop
outsl
xchg
in
dec
test
rorl
mov
mov
in
ss
mov
out
mov
mull
and
sub
pop
das
sahf
out
mov
jne
mov
movsb
dec
jg
out
lret
pushf
lahf
mov
leave
in
sarl
xchg
inc
mov
out
sbb
mov
mov
push
fstl
xor
sub
arpl
sahf
adc
popf
js
int3
inc
sbb
jecxz
sbb
movsl
lods
and
mov
jno
mov
insl
pop
dec
push
aad
push
mov
test
jbe
pop
aas
dec
mov
dec
mov
test
movsb
adc
jno
mull
pop
inc
jp
xchg
fisttpll
xor
dec
out
data16
mov
mov
mov
daa
push
cmpb
stc
fstps
pusha
movsb
or
inc
notb
out
cwtl
ss
and
loope
fisttps
fldenv
gs
in
mov
movd
test
dec
or
aam
loope
aad
push
arpl
dec
je
mov
mov
adc
cmpl
sbb
cmp
jne
stc
jge
insl
icebp
jne
fstpt
imul
roll
pop
mov
imul
mov
jb
sahf
dec
sbb
add
push
loop
pusha
fnstenv
sub
mov
dec
mov
scas
out
js
or
stos
test
jge
push
or
push
ljmp
arpl
adc
and
ficoml
xor
stos
stos
in
mov
ja
mov
mov
sarb
movsb
out
add
jno
add
mov
test
out
sarl
cmp
jl
lahf
lret
imul
movsl
cltd
mov
mov
push
cmpsl
sbb
mov
cmp
xor
xchg
xor
add
lods
push
out
aad
das
arpl
push
adc
cld
pop
mov
add
dec
call
and
add
sti
push
push
adc
ret
es
pop
dec
jo
mov
daa
subl
loop
add
and
xchg
sti
pop
shll
jae
outsb
lds
mov
mov
cli
sbb
daa
xlat
push
mov
dec
mov
insb
add
xchg
out
pop
ret
mov
loopne
and
adc
call
or
enter
addr16
xlat
and
shlb
movsb
pushf
push
mov
insl
xlat
sub
push
inc
pop
mov
mov
imul
dec
inc
jb
cmpsb
ljmp
adc
mov
dec
insb
or
xchg
in
and
popa
mov
sub
repz
es
jno
push
mov
lret
and
push
dec
stc
dec
xchg
idiv
inc
bound
cmpsl
hlt
sbb
mov
gs
mov
xchg
call
push
call
mov
insl
add
mov
sub
stc
cmpsl
pop
push
push
in
shrb
xor
imul
fdivl
dec
jbe
nop
inc
lret
mov
add
ds
xchg
push
movsl
movnti
test
or
mov
mov
movsl
cmpsl
jnp
repz
xchg
into
dec
adc
int
cmp
mov
leave
lods
out
aam
mov
add
mov
inc
lock
inc
push
test
ss
dec
add
cmc
mov
inc
and
nop
mov
mov
movsl
int3
outsb
scas
sub
or
mov
in
mov
xchg
imul
mov
movsb
mov
push
xchg
test
mov
jl
mov
shl
insb
xchg
nop
inc
in
dec
hlt
sbb
or
sub
cltd
sti
out
mov
mov
mov
int3
gs
shr
adc
rorb
sbb
mov
add
adc
pushf
jecxz
outsl
lret
stc
hlt
jnp
into
cwtl
lods
add
jnp
xchg
faddl
xchg
push
jmp
aas
mov
out
arpl
rclb
lcall
inc
stc
mov
fldt
sahf
jmp
das
jnp
or
cmpsb
notl
lret
adc
negl
jge
ficoml
ss
dec
or
jmp
popa
mov
push
fidivs
in
fisubs
inc
mov
test
roll
dec
jmp
pop
les
lods
imul
fnsave
lahf
xlat
add
ljmp
lods
jecxz
push
in
lahf
lds
jo
and
dec
pop
mov
jb
inc
pop
inc
push
filds
mov
subb
arpl
dec
mov
call
sbb
dec
movsl
inc
push
out
cltd
ds
and
and
add
xor
push
bound
cmp
je
insl
int3
aas
pop
add
xrelease
mov
fstps
mov
gs
mov
pusha
ss
or
jl
xchg
xor
pop
push
rcrl
dec
pop
mov
xchg
mov
inc
adc
fsubrl
mov
outsl
sub
or
fidivs
leave
ss
das
arpl
js
xchg
fadds
cmpsb
scas
xor
inc
imul
sbb
xor
or
mov
and
lcall
jmp
or
sbbb
xor
movsb
sahf
out
lcall
cmpsb
cmp
aas
data16
out
or
mov
push
cmp
xchg
mov
int
and
jae
aas
lcall
lea
or
add
cmp
jecxz
inc
in
jp
xor
dec
icebp
xor
les
xor
inc
inc
enter
stc
ret
fisttpl
and
mov
push
dec
lahf
sahf
sub
je
push
mov
mov
popf
mov
out
movsl
xchg
pop
push
js
dec
aaa
inc
jg
fwait
mov
cmp
adc
inc
cmp
imul
cmpsl
and
in
sub
ljmp
imul
jno
pop
daa
push
adc
xor
pop
shll
dec
mov
and
fucomip
adc
out
rorl
fcomi
out
fs
popf
pop
mov
pop
add
xchg
out
and
jle
add
xor
cmc
ret
or
mov
dec
movsb
mov
cmp
push
and
mov
outsl
and
sti
sub
jmp
insl
dec
adc
lret
add
cmpsl
daa
scas
jbe
cmp
jnp
pop
mov
lods
pandn
xchg
push
mov
hlt
pop
mov
lds
outsb
sub
or
dec
aas
push
pusha
mov
nop
add
dec
and
insl
scas
aas
loopne
jecxz
lods
arpl
lcall
adc
inc
out
into
xor
shll
push
xchg
adc
mov
js
das
adc
hlt
jne
inc
jbe
movq
push
jo
pop
pop
mov
inc
sti
jg
lret
sub
pop
sbb
insl
imul
and
mov
hlt
sbb
cmp
pop
mov
out
faddl
sub
popf
into
pop
orl
in
inc
in
add
jge
mov
clc
xchg
je
mov
add
pop
orl
inc
pushf
adc
push
ds
push
dec
loope
dec
dec
std
test
fwait
cmpsb
jnp
mov
adc
lock
and
jne
push
jbe
and
sub
mov
cmp
inc
test
pushf
icebp
sti
imul
xor
std
inc
jns
fcoms
mov
loope
repz
out
xorl
adc
stos
pushf
cmc
pop
mov
aaa
std
xchg
jne
sub
pop
imull
inc
pop
pushf
or
or
push
nop
imulb
sti
xorl
add
test
cmp
aam
pop
xor
adc
sbb
inc
imul
push
adc
sub
lret
mov
lret
iret
push
imul
fwait
push
addb
ret
movsl
jecxz
loopne
pop
adc
adc
mov
inc
dec
xor
xor
add
lock
je
push
out
pop
push
sbb
mov
imul
fcoms
mov
fsubrp
adc
pop
test
lea
lret
aaa
adc
gs
mov
lds
int
push
data16
ja
dec
imul
shlb
mov
jae
xor
into
xor
jo
fmull
outsb
arpl
ret
leave
addr16
icebp
imul
pop
rclb
lods
mov
add
test
inc
inc
insl
in
and
mov
mov
loopne
mov
pop
loope
js
jmp
enter
mov
pop
enter
mov
pop
hlt
movsl
in
in
or
and
xchg
cmp
sub
lds
ja
jbe
sbb
and
lods
fsubl
mov
sti
push
pop
push
flds
int3
sbb
notb
enter
and
adc
inc
fiadds
popl
mov
fisttps
xor
mov
adc
mov
lods
xchg
add
pop
pop
adc
ss
jecxz
mov
ss
adc
pusha
push
or
cli
xor
arpl
adc
push
sub
negl
sub
call
sbb
je
xlat
insl
ljmp
dec
sub
popw
hlt
out
fs
add
mov
daa
dec
je
jne
into
push
add
daa
ret
subb
bound
paddsw
insb
jnp
cmp
nop
pop
dec
lret
inc
in
adc
ds
scas
and
jmp
mov
cmp
dec
divl
xorl
mov
mov
stos
fldenv
dec
push
xchg
push
stos
out
cwtl
iret
jp
ficomps
lret
sub
jae
dec
sbb
add
cwtl
cli
es
xchg
dec
pop
push
sub
cmp
inc
sub
sub
xchg
jb
sti
pop
shlb
aas
sbb
inc
pop
xor
mov
and
mov
adc
repnz
sbb
jl
mov
insb
mov
dec
inc
sbb
or
lret
xchg
jbe
sysenter
mov
call
push
xorb
test
adcb
imul
add
push
inc
hlt
enter
pop
das
jle
mov
push
push
lcall
lahf
stc
jl
cmpsl
aam
icebp
mov
les
jle
cmp
shll
xor
sbbl
jmp
push
scas
sti
sub
sub
add
ret
push
stos
add
cmp
or
jecxz
ss
cmp
aam
xchg
scas
or
cs
inc
jle
dec
inc
cmpl
sub
pop
dec
push
add
ret
push
pusha
pop
fistpll
divb
jnp
pinsrw
dec
popa
adc
shrb
ljmp
pop
pop
mov
mov
sbb
arpl
xor
or
jne
sub
lcall
shll
outsl
clc
sbb
jmp
pop
adc
mov
push
and
push
icebp
pop
cli
shrb
mov
cmp
xor
pop
mov
mov
fimull
xchg
loop
jle
push
incl
dec
out
stos
mov
notb
lret
sbbl
lds
ja
aad
bound
adc
je
sbb
fsts
aas
pushf
insl
sub
ret
cmpb
insb
icebp
loopne
lea
daa
xor
imulb
sub
jbe
mov
add
push
jnp
int3
lock
sbb
stos
sub
add
push
mov
dec
dec
js
or
mov
loop
mov
outsb
xchg
xchg
adc
jle
aas
adc
dec
push
insl
jae
and
add
dec
out
cmp
jb
xor
sub
pop
mov
movsb
fidivs
jmp
mov
mov
in
xchg
mov
out
add
pop
ss
mov
xor
hlt
rorl
push
cli
jne
sub
outsl
sbb
rcll
xchg
add
adc
leave
jae
inc
clc
mov
jp
lock
xor
and
sbb
sbb
popf
testb
or
bound
in
sti
pop
or
adc
inc
mov
adc
aad
rol
out
xchg
push
fistps
adc
js
add
pop
pop
cmp
dec
movsb
cmc
inc
adcl
push
test
pop
add
std
jl
push
jbe
push
adc
xor
inc
sahf
rorl
jecxz
dec
leave
pop
mov
repnz
cmp
outsl
cmp
ret
mov
push
xchg
xchg
mov
jmp
jmp
push
pop
sbb
xchg
and
sbb
inc
outsb
mov
cmpsb
sbb
dec
and
mov
sbb
sub
xchg
scas
mov
mov
jle
js
jne
dec
mov
push
xor
lret
cs
fwait
mov
cmp
scas
mov
pop
aam
push
hlt
sub
hlt
push
adc
or
popa
jne
sahf
xor
insb
cmp
cmp
aaa
jne
fnstcw
mov
push
stos
xchg
dec
data16
ljmp
add
int
adc
push
mov
mov
stc
and
popf
imul
xchg
jne
je
mov
loopne
and
xor
mov
repz
pop
mov
cmp
in
gs
xor
sbb
xor
in
mov
pop
loopne
xor
outsl
aam
test
cli
mov
push
and
pop
mov
mov
pop
mov
ds
orl
test
and
in
daa
mov
xchg
jbe
sbb
push
pop
imul
icebp
jb
and
je
ficomps
fisubrs
mov
dec
cmp
decb
sbb
sahf
sti
dec
test
sbb
shl
pop
cmp
out
movsb
push
iret
clc
shrl
cmp
push
mov
insb
dec
mov
push
aas
fs
insb
mov
faddl
mov
repz
shrb
mov
decl
dec
popl
into
movups
lods
xchg
js
lea
in
lea
ror
daa
xchg
xchg
xor
fldcw
xor
ret
adc
jmp
dec
aaa
cs
stos
cmp
mov
jmp
pop
cmpsb
gs
flds
push
movsb
sahf
and
in
xor
add
rcl
sbb
aam
iret
mov
rcll
xor
mov
bound
cmp
and
ficompl
cld
adc
or
hlt
push
push
fisubrl
lcall
cmp
sti
aas
mov
mov
stos
outsl
gs
sub
adc
cmpsl
aam
mov
icebp
fildll
pop
jo
jp
xchg
enter
jge
int3
pusha
out
flds
fwait
xor
out
sub
sbb
loope
inc
enter
xor
push
inc
push
scas
fcoml
inc
add
add
repnz
clc
xchg
arpl
pop
cmp
cmpl
fstpl
dec
adc
xor
into
sub
ss
mov
cmp
daa
hlt
rcr
inc
mov
lret
push
jl
and
mov
in
out
sub
pop
xor
xchg
lds
insl
popa
sbb
pop
mov
fcompl
fdivr
shlb
inc
pop
sbb
jmp
mov
inc
sbb
loopne
dec
hlt
out
mov
rcrl
mov
add
sti
imul
aaa
mov
inc
lahf
sti
push
sarb
xchg
loopne
sub
mov
fucomi
push
pop
fsubs
cmpsl
sub
adc
xlat
and
pop
sahf
add
cmp
and
cs
iret
enter
lret
jne
inc
mov
popa
push
jl
in
in
add
mov
xchg
cld
and
xchg
fnsetpm(287
push
dec
ja
and
jecxz
int
xchg
add
das
lcall
ljmp
pusha
dec
jnp
mov
subl
push
sub
lock
dec
mov
imull
adc
add
add
adc
scas
jge
cltd
add
sub
xchg
xchg
imul
and
cmpsl
ror
mov
in
mov
call
inc
sub
mov
stc
add
lahf
ljmp
mov
ljmp
enter
mov
inc
nop
mov
out
mov
ret
push
cmp
out
mov
jns
out
push
add
lcall
xchg
xor
mov
dec
cltd
cs
mov
aad
je
add
jnp
loop
mov
dec
adc
jns
add
push
mov
dec
mov
pop
pushf
addr16
stos
testb
hlt
cmpsb
aas
xchg
pop
xor
lock
subb
and
loope
inc
fwait
movsb
pop
clc
cli
mov
je
mov
and
sub
into
pop
push
cmc
mov
sahf
adc
jle
shl
int3
sbb
jb
hlt
add
cmpsb
popf
xorl
sbb
stos
fstps
andl
xor
sub
ja
fcom
sub
pusha
jb
sub
ret
maxps
sbb
pop
mov
fsub
pusha
mov
mov
cmp
cmp
leave
int3
imul
sti
push
mov
mov
mov
jne
and
fcoms
sub
sub
movsl
or
mov
arpl
cmp
inc
dec
dec
mov
push
jne
push
mov
sahf
xor
mov
stos
stc
mov
lds
out
lods
sbb
mov
adc
cli
std
aaa
xchg
sub
sub
or
rorl
lea
fdivl
jp
roll
mov
xor
sub
arpl
jp
sub
xchg
stos
pop
push
enter
test
mov
inc
xchg
pop
pop
jns
xlat
mov
jne
ficomps
int3
out
inc
xchg
mov
jmp
pushf
in
lock
fcom
dec
sbb
mov
ds
dec
sti
scas
xor
lock
and
lods
sub
pop
lods
xchg
cwtl
mov
stc
aam
add
xor
mov
lcall
insb
inc
repnz
dec
das
aam
sbb
in
stos
movsl
mov
push
icebp
mov
movsb
and
insb
dec
push
in
das
or
fsubrs
sarl
pop
mov
cmpsl
mov
jecxz
cmp
shrl
std
scas
ret
or
mov
xor
push
mov
imul
xor
jns
cmp
repz
mov
jae
sarl
sbb
pop
sub
xchg
cmp
ljmp
imul
jb
loop
pop
hlt
xlat
dec
or
or
dec
lods
jo
inc
pshufw
cmp
push
jb
incl
in
pushf
mov
sti
or
mov
aam
xchg
mov
push
jg
sbb
adc
lock
out
mov
push
push
les
xchg
adc
movsl
int3
repnz
mov
mov
dec
in
pushf
pusha
in
aam
xchg
cmp
mov
pop
outsl
lret
rorl
lret
jp
lahf
mov
in
shlb
jns
rcll
add
fnsave
xchg
out
xor
sbb
and
xor
in
imul
fsubrs
adc
imul
mov
jg
into
pop
mov
push
cltd
mov
jecxz
jmp
pushl
sub
or
mov
roll
bound
shll
sbb
lods
lret
cmp
adc
movsb
stos
pop
cmp
dec
cmpsb
mov
in
pop
mov
aad
ret
repz
jmp
push
and
scas
pop
push
mov
mov
mov
cld
test
dec
fidivrs
jmp
sti
ja
mov
or
xchg
push
pop
jb
stos
mov
aad
out
shr
scas
cmc
jo
filds
mov
or
mov
es
lods
or
insb
ss
cmpsl
push
mov
in
ror
and
xor
mov
mov
imul
aam
jmp
test
ss
xor
mov
xor
ror
jle
outsl
int3
and
and
mov
mov
popf
mov
adcb
incb
adc
inc
mov
and
imul
inc
mov
inc
dec
push
adc
pop
jno
push
pop
xor
adc
imul
sbb
aas
leave
sub
lahf
lock
leave
cmp
sbb
aad
cmp
daa
sub
mov
dec
cmpsl
fistpl
andl
in
inc
lcall
xorl
sbb
adc
push
xchg
sub
sahf
and
sbb
xor
lea
loopne
sahf
push
test
and
cmc
bound
dec
cwtl
mov
cmc
and
outsb
push
and
mov
insl
mov
mov
inc
mov
repnz
fdiv
dec
fidivrl
mov
mov
sub
xchg
loopne
adc
dec
or
je
js
idivl
jo
xor
hlt
out
aaa
ja
imul
pop
pop
scas
mov
movsl
mov
dec
clc
cmp
rcll
out
dec
mov
icebp
xchg
jmp
jmp
int
ss
sarb
cmp
js
xor
add
add
in
mov
sub
int3
dec
pop
sbb
stos
add
jo
sub
push
outsl
lods
test
xor
xchg
into
jae
in
aad
jg
xorb
pushf
lds
sub
das
in
insb
in
jecxz
cmp
adc
xlat
cs
or
push
add
call
pop
incl
pop
pop
inc
dec
jge
mov
das
and
cld
iret
loope
xchg
jno
inc
fldl
and
stos
lds
dec
iret
subl
add
sub
mov
test
mov
sub
jae
pop
adc
adc
iret
dec
xchg
mov
cwtl
jl
jmp
mov
mov
iret
mov
adc
insb
adc
xchg
movsb
cwtl
clc
outsb
notb
add
mov
jo
out
arpl
movl
push
pusha
inc
in
sub
dec
mov
pop
push
arpl
sbbl
push
rclb
and
in
add
push
ja
cmp
add
pop
add
push
add
jnp
data16
jns
cmp
jmp
in
loope
subl
add
sbb
cmpsl
int
adc
rcl
xchg
pop
cmpsl
scas
push
and
lods
fimull
pop
and
lods
test
pop
gs
adc
enter
pusha
test
mov
out
mov
cli
xor
add
push
lock
push
and
fcmovnu
popa
mov
and
pop
adc
add
dec
add
jbe
pop
icebp
jae
sub
insb
movsb
jnp
gs
es
jb
andl
aad
and
push
insb
jb
mov
icebp
pushf
lds
push
cmc
add
sbb
xchg
mov
popf
in
cmp
aaa
jnp
lahf
mov
sbb
mov
mov
cmp
fimuls
cltd
iret
sbb
loope
movl
push
mov
push
jle
dec
mov
mov
test
cli
sub
dec
test
aaa
fcmove
add
mov
lret
lea
in
cmp
cmp
mov
ret
add
sbb
repz
rclb
jbe
push
jb
rorl
cwtl
les
es
push
pop
pop
add
stc
outsb
outsb
insb
add
jge
cld
pop
cli
cmpsb
add
lret
sub
mulb
mov
cld
sti
and
push
cwtl
push
inc
inc
push
loop
xchg
das
mov
dec
in
scas
fs
adcl
stc
das
add
shll
push
push
add
mov
xchg
mov
xorb
or
popa
int3
jb
lahf
ljmp
fsubs
popf
daa
decl
lea
ljmp
push
pop
sub
dec
cwtl
sub
fistps
inc
xchg
repnz
sbb
dec
ffree
test
inc
ljmp
daa
call
mov
cmp
mov
jmp
fdivrl
lds
or
lods
xchg
lahf
dec
popa
outsb
cld
loop
mov
add
dec
xlat
xor
lods
or
dec
enter
xor
pop
push
sbb
dec
in
mov
xor
bound
icebp
cmpl
rolb
mov
jle
xchg
fstpl
fdivl
adc
repz
mov
lahf
mov
sti
xchg
add
sbb
sbb
repnz
sub
lods
nop
clc
mov
idiv
cmp
repz
push
jns
adc
fucomip
pop
push
mov
push
sub
dec
lds
movsb
leave
adc
fstl
in
pop
filds
sbb
sbbb
fcomip
push
and
push
mov
pop
loopne
sbb
mov
cmpl
popa
pop
mov
ljmp
icebp
enter
mov
mov
push
orb
push
ret
int
jmp
clc
mov
std
dec
fistpll
pop
imul
fs
jo
scas
cmp
dec
loop
mov
mov
push
das
push
xor
mov
xor
sarl
mov
sarb
daa
in
mov
loopne
fwait
cmp
lcall
cmpsl
cmpsl
lret
xor
shlb
jg
out
das
scas
inc
test
xlat
fwait
pop
ss
inc
xchg
je
push
pop
xor
loope
mov
xchg
mov
pop
jbe
lea
pop
mov
sbb
pop
xchg
xor
out
inc
sbb
repz
sub
inc
stos
pusha
sti
mov
cmpsl
add
mov
jg
ja
add
or
jne
cmpsl
loopne
sbb
fwait
pop
int3
adc
adc
sub
adc
adcl
push
aaa
jge
or
daa
cmp
mov
jl
and
push
push
xlat
sbb
mov
push
leave
call
dec
dec
out
xchg
push
dec
lods
push
push
cmp
subb
aam
adc
clc
cmp
and
pop
aad
mov
or
cmpl
pop
mov
test
jg
lahf
xor
mov
add
clc
sub
mov
stos
std
fcmove
mov
lods
repz
mov
push
xor
add
mov
adc
lods
push
in
fldz
add
fwait
dec
std
lahf
push
sbb
cmpsb
xchg
fstpl
lcall
movsw
inc
adc
push
cmp
outsl
add
inc
fisubrl
push
inc
and
mov
adc
fs
test
enter
mov
add
cld
int3
movsb
lods
out
mov
pop
call
testl
out
data16
into
cmpb
rclb
and
outsl
and
mov
lahf
mov
sbb
shr
adc
jp
repz
xchg
mov
push
clc
cmpsb
out
xor
sti
fwait
movl
rcll
adc
lret
mov
mul
shl
pop
jp
leave
and
inc
and
shrb
movsl
lret
nop
jle
insl
inc
rorl
into
int
jb
lds
push
xor
cmovns
mov
cmp
push
popf
pushf
and
das
adc
add
jno
jp
ds
mov
pop
push
inc
cmp
pop
cmovs
movsb
dec
lds
jnp
shl
cmp
push
mov
sbb
and
mov
sbb
insl
stos
test
lock
ss
mov
xchg
lcall
xchg
xchg
aas
fnstsw
or
push
dec
lds
adc
lret
mov
shlb
addl
jo
add
add
cmp
rorl
notl
pusha
push
pop
mov
les
leave
mov
xchg
add
push
mulb
mov
sbb
xchg
pop
and
xchg
hlt
lret
rcrl
popf
xchg
cwtl
push
lock
repz
sub
adc
and
lahf
mov
xor
mov
lcall
mov
jbe
xchg
and
push
fstp
push
movsl
pop
ss
cltd
mov
cmp
lret
add
dec
xor
cmp
jl
mov
cmp
push
in
and
loop
repnz
int
lds
or
add
mov
fwait
orb
cmp
mov
jbe
adc
popa
mov
mov
adc
popf
add
test
pushl
cmc
mov
mov
cli
int
clc
pusha
inc
jg
out
push
repz
jge
mov
in
mov
ss
cmpsb
call
daa
mov
push
dec
shlb
mov
or
pop
dec
mov
push
outsb
jb
movsl
into
push
sub
sbb
mov
cmc
outsb
sti
inc
sbb
jge
nop
xor
pop
and
lahf
or
push
out
and
pop
repnz
mov
adc
pop
repnz
cmp
xor
sub
dec
pop
jae
repnz
dec
mov
loop
lods
push
je
sbb
jle
dec
leave
pop
sub
xchg
ja
jmp
sub
lock
mov
lret
or
xchg
push
pop
dec
daa
aam
movsb
sbb
inc
cmp
ret
xchg
sbb
cmpsb
nop
xor
ja
repz
xchg
adc
or
push
push
add
negl
push
mov
inc
mov
or
div
xor
pop
pop
jle
jbe
arpl
xchg
xchg
popa
mov
pop
adc
in
std
stos
push
add
cld
xorl
xor
fsubp
test
mov
fistps
sbb
sub
and
lods
pop
add
jmp
sub
add
lret
int3
inc
in
fldcw
rcrb
int
cmp
jnp
mov
pop
dec
adc
pushf
push
jns
sbb
in
sahf
dec
test
or
jnp
cmp
jecxz
adc
stc
sub
fildll
mov
mov
lods
inc
mov
aam
test
dec
dec
in
insl
enter
push
orb
enter
dec
mov
sbb
mov
xor
loope
cld
push
jnp
cmp
es
mov
inc
mul
dec
movsb
mov
flds
jne
cmpsl
mov
into
call
loope
adc
ret
push
ljmp
je
mov
cwtl
adc
mov
or
jbe
mov
push
sbb
pop
test
adc
xchg
rcrb
xor
incl
jo
cmc
sbb
push
dec
push
andb
shll
jo
int
pop
fs
andl
js
jo
pop
sbb
cmpsb
mov
mov
insl
cwtl
or
inc
pop
pop
adc
shl
in
cmpsl
stos
popf
jle
mov
mov
and
das
in
lret
inc
fdiv
lds
mov
iret
xor
js
imul
gs
sahf
in
stos
mov
push
sbb
das
icebp
jno
ljmp
aaa
push
mov
jb
mov
dec
xchg
and
push
push
or
jge
outsl
lcall
sub
mov
stos
xchg
pop
mov
movsl
insb
cmp
movsb
cmp
call
dec
je
xor
out
loopne
mov
push
daa
cmp
punpckhdq
ret
test
fdivrl
movsb
cmpsl
cmp
das
adc
leave
inc
and
xor
xlat
inc
inc
jns
jle
in
repnz
jge
sti
clc
mov
rcrb
and
xchg
pop
xor
stos
xchg
cltd
cmp
jmp
jl
push
leave
xchg
sub
bound
orl
out
dec
mov
inc
xchg
into
bound
aaa
fadds
push
insb
fcompl
ljmp
mov
or
or
jns
pop
jnp
inc
mov
adc
dec
jecxz
adc
xor
mov
dec
xlat
fstpt
cmpsb
in
mov
subl
cld
mov
rcrl
in
lcall
clc
sahf
mov
jle
inc
and
inc
roll
jmp
in
notb
shll
lods
aam
imul
inc
push
stos
aam
daa
mov
jp
xchg
scas
push
xchg
popf
fstps
ret
js
loope,pn
jae
sub
in
imul
hlt
inc
dec
xor
aas
xchg
loop
fadds
rorb
icebp
sub
xchg
das
arpl
inc
repnz
jne
popa
xchg
inc
adc
nop
subl
rorb
adc
and
and
imul
jbe
push
loope
mov
pop
jne
mov
add
inc
xchg
sbb
cmp
bound
and
fistps
int
mov
ja,pt
aas
bound
add
incb
pusha
daa
push
mov
pop
addr16
or
push
mov
mov
hlt
popa
testl
push
repz
lret
subl
lfs
mov
call
negl
pop
mov
in
fs
add
mov
mov
pop
inc
xchg
pusha
adc
add
mov
mov
push
bnd
xlat
in
xor
jns
push
mov
fidivrl
out
in
dec
sbb
nop
arpl
stos
movsl
jecxz
out
das
and
lea
stos
or
jge
rorl
pop
test
xchg
push
fwait
jb
insl
sub
fisubrs
add
data16
insl
sbb
jp
and
xor
sub
add
cltd
lcall
andl
scas
xchg
cmp
push
mov
mov
enter
popa
fnstsw
ljmp
xorb
stc
lods
cld
xchg
das
mov
dec
cmp
cmp
jmp
fstpl
push
and
pop
movsl
jno
add
jno
shll
inc
and
xor
test
popa
daa
dec
divb
jecxz
dec
test
mov
popf
sbbl
ss
in
cmp
add
fadd
mov
or
xlat
aam
das
jmp
inc
data16
fildl
mov
lock
or
lea
lock
rorl
test
xchg
movsb
clc
je
dec
enter
cltd
xchg
in
mov
dec
rolb
pop
out
adc
adc
pop
int3
stc
nop
movsb
and
gs
subl
push
pusha
mov
mov
jle
push
lret
pop
xchg
loop
mov
js
movsl
repnz
cltd
add
stos
inc
icebp
and
data16
cwtl
aam
mov
ret
dec
dec
fwait
mov
sbb
mov
dec
hlt
test
sbbl
push
xchg
imul
mov
ror
push
insb
xchg
bound
push
sahf
ret
mov
sbb
cli
xchg
sub
in
sti
pop
adcl
shll
pushf
push
or
jb
das
jge
jne
mov
test
xlat
sbb
jge
mov
decb
sub
hlt
mov
arpl
mov
xchg
add
xchg
fwait
sub
push
test
jo
out
fadds
xchg
in
pop
add
xor
out
dec
mov
ds
sbb
mov
jns
pusha
ja
test
dec
scas
jmp
sbb
push
outsb
sbb
or
adc
push
mov
sti
ret
pushf
jle
pop
mov
packsswb
fbld
jge
in
cld
sahf
sub
loopne
fwait
mov
and
scas
jne
adc
push
push
std
in
popa
xchg
mov
dec
test
nop
outsl
data16
xor
sub
adc
add
sub
pushf
pop
lods
adc
daa
ja
loop
dec
movsl
addb
pop
out
pop
push
dec
mov
iret
dec
and
les
and
dec
enter
pop
mov
inc
jmp
andl
cmpb
cwtl
mov
push
xor
incb
mov
fnstenv
or
out
les
dec
mov
xchg
arpl
add
jmp
mov
cmp
arpl
or
xchg
shl
test
jl
fisubs
sbb
addr16
adc
ljmp
bound
insl
decl
cmpsb
dec
fldt
sub
mov
aas
mov
mov
or
mov
push
aam
add
addr16
jae
sbb
mov
mov
or
sub
lcall
pop
push
adc
push
ds
jge
outsl
xchg
and
dec
notl
lahf
cld
inc
stos
dec
nop
rcrl
dec
jae
add
loop
xchg
sub
arpl
stos
lret
int3
sub
inc
cld
jbe
dec
loope
cli
dec
fisttps
mov
mov
mov
dec
lea
mov
mov
add
in
mov
lods
icebp
pop
and
mov
mov
mov
clc
jp
popf
xchg
inc
std
shl
rcll
jne
mov
jbe
dec
fidivrl
push
mov
lods
push
inc
pusha
mov
je
rolb
push
jl
sbb
sti
cs
ret
sti
dec
shr
add
sahf
cmpsl
or
rorl
decb
lds
mov
and
xchg
sti
jmp
ljmp
daa
inc
cs
cmp
repz
adc
daa
loop
xchg
je
imul
das
dec
mov
testl
cwtl
jnp
add
or
xabort
popl
scas
stos
aaa
lret
push
cwtl
lods
ror
outsb
ljmp
sahf
and
loope
out
mov
in
repnz
mov
adc
dec
cltd
inc
xchg
adc
xor
add
test
ljmp
jae
jnp
loopne
xor
cmp
push
mov
aaa
jns
hlt
out
repnz
les
leave
push
push
test
aad
or
orb
jnp
and
insb
lret
mov
cld
pop
jmp
xchg
mov
jb
lods
cwtl
repz
test
cli
out
icebp
or
xchg
je
sar
inc
cmp
pop
jne
jb
out
pop
dec
xchg
adc
test
loope
sarb
aam
lods
lea
adc
add
cld
mov
das
mov
stos
jg
push
dec
xor
sbb
pop
lock
imul
cmc
shrb
inc
fistpll
jnp
enter
adc
mov
dec
push
dec
and
adc
push
cmp
out
inc
mov
out
or
xor
subl
repz
xchg
sub
mov
xchg
gs
pop
push
rcll
mov
mov
pusha
int
jp
out
or
mov
push
imul
or
jle
repz
mov
cmc
lds
jbe
mov
or
es
jne
fcoms
mov
aam
and
pop
mov
inc
lock
pop
sub
iret
dec
testl
inc
xor
jge
daa
out
inc
movb
push
das
pop
jg
push
jle
andb
or
push
shll
xchg
sbb
call
fnstcw
xor
sbb
out
or
add
sbb
outsb
and
jg
mov
call
push
cmp
out
leave
and
dec
xor
pop
fstl
adc
and
lods
pushf
cmc
adc
xchg
test
out
in
in
cmp
jecxz
and
addr16
fadds
fadd
sti
or
cmp
scas
lret
xchg
xor
or
sbb
rolb
or
mov
jp
push
mov
add
mov
pop
or
lods
mov
lcall
movsl
pop
xchg
shlb
rcrb
mov
mov
fcompl
loope
adc
test
jecxz
and
jb
dec
xor
scas
fwait
jmp
cli
or
in
outsl
push
enter
lret
inc
jb
test
fcmove
sti
fldcw
mov
inc
inc
dec
xchg
cmpsl
movsb
es
pop
sbb
mov
mov
mov
sarl
les
and
cmp
jmp
xor
add
cmpsl
popa
and
and
inc
mov
sub
scas
sub
cmp
push
inc
xchg
lret
sbb
inc
lret
xor
xchg
jmp
sahf
int3
fisttps
pop
mov
fdivrs
jne
movsb
push
pop
scas
adc
mov
movntq
std
dec
xchg
pusha
inc
mov
mov
add
xchg
push
test
pop
loop
shr
sub
sub
aas
lcall
mov
outsb
and
loopne
cwtl
je
aas
sahf
mov
mov
roll
gs
xchg
mov
jmp
add
mov
mov
mov
mov
movq
adc
add
jo
jo
pop
cmp
popf
divps
in
lods
mov
mov
stc
js
sbb
xor
shll
inc
push
cli
add
and
dec
mov
and
andb
fstpt
in
sub
push
ljmp
push
gs
pusha
lret
inc
dec
pop
rol
push
out
shrb
lds
cmp
sub
dec
cld
stc
push
ja
repnz
mov
and
in
sti
lret
call
mov
imul
clc
mov
xchg
outsb
push
scas
pop
aaa
test
addl
mov
shll
sub
cmp
fs
mov
mov
or
clc
jnp
push
ficoml
fucom
cld
push
shll
loope
push
or
xchg
sub
dec
stc
cs
push
sub
cmp
je
dec
jecxz
pop
sbb
jb
aas
xchg
lock
insl
pusha
inc
insl
mov
push
dec
addr16
pushf
arpl
loop
daa
mov
mov
subl
jne
cwtl
into
xchg
adc
dec
mov
push
mov
push
rcrl
mov
dec
repnz
and
sti
add
or
lcall
dec
aam
inc
sbb
pop
cmp
mov
mov
xchg
into
shlb
mov
add
cmp
and
int
and
pop
jns
addr16
js
sbb
mov
adc
bound
insl
nop
push
cli
flds
jecxz
mov
jno
or
or
and
add
shl
clc
daa
xchg
data16
out
insb
fidivrl
sbb
cld
test
aas
insl
out
xor
push
jne
inc
stos
jnp
lahf
jl
daa
lret
xchg
or
xor
in
mov
mov
jne
xor
dec
hlt
insb
cmp
dec
inc
lock
std
mov
sbb
outsl
xchg
fdivrl
popa
loop
inc
bound
or
jl
test
punpckhbw
dec
lods
std
xlat
sub
add
ljmp
icebp
aas
cwtl
pop
and
movsb
sbb
sti
inc
dec
orps
adc
and
mov
ret
cmp
cmp
out
incb
cwtl
jns
ja
sti
mov
js
add
out
inc
sub
push
pop
inc
lods
push
and
fistpl
movsb
aaa
push
je
adcb
mov
cmp
stos
jecxz
sbb
xlat
pop
rol
push
dec
add
jns
mov
sbb
jae,pt
mov
xor
mov
mov
dec
out
mov
inc
das
cli
scas
and
divl
or
cmp
cli
movsl
imul
cs
cmp
std
fldcw
cmp
pop
sti
into
or
fucom
dec
inc
test
jb
roll
shll
push
out
repnz
sub
adc
daa
xor
movsl
or
repnz
mov
das
pop
pusha
dec
clc
mov
in
out
out
mov
in
mov
sti
sti
lock
bound
in
jp
out
add
fidivrs
jmp
mov
xchg
jmp
ja
test
ret
push
jne
mov
push
les
in
mov
int
ss
push
dec
inc
or
jb
stos
xor
popf
gs
vcmpsd
or
xlat
pop
mov
jae
inc
jbe
out
lret
scas
add
mov
ss
jg
lahf
mov
and
je
xor
ret
dec
ds
std
xchg
inc
sbb
imul
test
sbb
adc
sti
cli
adc
insl
push
cwtl
mov
shrl
mov
adc
mov
pop
push
outsb
shll
pop
dec
sbb
sub
xor
lods
adc
andl
inc
addr16
adcb
in
pop
call
adc
adc
outsb
pop
pusha
fists
cmp
fwait
icebp
test
movsl
mov
mov
sub
imul
inc
rorl
xchg
adc
pop
xchg
inc
pushf
pop
cmp
lret
add
xchg
int
lahf
xlat
es
xor
jae
mov
mov
icebp
pop
jmp
sti
mov
fsub
repz
xor
iret
je
popf
sbb
add
mov
fldt
insl
xchg
add
jae
shll
aas
mov
push
jmp
fdivl
and
sub
loop
adc
xorl
mov
dec
mov
xchg
pop
stos
jl
in
repnz
push
push
inc
sub
push
cld
mov
and
mov
insb
idivl
pop
mov
inc
jne
adc
mov
data16
ds
push
pop
idivb
mov
mov
nop
out
push
mov
sbb
xor
cli
mov
xor
or
je
xchg
mov
jg
in
mov
imul
push
pop
dec
js
inc
out
inc
adc
and
sbb
mov
inc
pop
mov
push
rolb
xor
xchg
movsl
inc
daa
sbb
stos
enter
into
push
mov
pop
ret
push
repz
rcl
jns
hlt
push
imul
mov
cmp
out
aam
insb
in
ficompl
sub
cmp
mov
in
mov
dec
scas
sbb
sbb
add
mov
cmp
xor
pop
imul
xchg
js
dec
add
addr16
mov
into
in
gs
inc
pop
ja
sub
jnp
aaa
mov
adc
or
in
jo
add
inc
data16
and
sbb
adc
divl
inc
addl
outsb
popa
clc
xchg
and
cli
adc
xchg
and
fisttpll
push
js
jg
jno
ret
add
cli
sub
mov
mov
imul
pop
das
push
popf
mov
dec
imul
imul
xor
pop
rcl
loop
inc
shrb
and
clc
lcall
jle
lret
lret
callw
repz
rcrl
outsb
xor
sbbb
sar
push
inc
test
sub
cwtl
cwtl
inc
cmp
inc
push
and
mov
ds
cmpsl
in
jge,pn
fwait
mov
add
jne
ret
add
lcall
and
dec
jns
lret
aam
dec
sbb
inc
sbb
loope
fsub
and
out
into
jmp
cwtl
inc
cmp
sbb
out
xorl
inc
mov
push
inc
cli
push
repz
cmpsb
mov
aad
lods
cmpsb
fsub
pop
mov
addl
dec
cmp
lds
xor
in
dec
das
mov
adc
stos
mov
add
ds
mov
jge
mov
sbb
push
and
jg
push
les
popf
inc
jg
dec
mov
ret
push
loopne
sbb
jge
imul
inc
or
dec
jge
push
mov
sbb
cmp
shl
lret
imul
adc
mov
divl
xor
inc
jmp
pop
sbb
jae
int3
lcall
mov
or
xor
mov
rolb
push
repz
xchg
sub
xchg
jg
inc
jb
push
repz
push
repnz
pop
aas
ret
aas
adc
push
call
fwait
lds
sub
or
shl
sbb
mov
hlt
ja
xor
leave
push
imul
mov
jne
xorb
and
cmpsl
popl
in
in
shr
repnz
in
js
xchg
ljmp
sub
aad
jns
adc
sub
push
movl
cmp
and
daa
enter
adcb
rcrb
ljmp
ds
std
popf
repnz
fcoms
das
pop
test
jp
push
mov
dec
pusha
and
mov
mov
inc
jg
stos
inc
cmp
or
or
add
jns
xor
sub
clc
sahf
in
ja
mov
ljmp
sbb
pusha
ja
dec
add
push
adc
xchg
push
mov
or
xor
mov
push
shrl
dec
pop
jmp
rol
mov
push
stos
xchg
xor
pop
sbb
push
into
add
jmp
dec
mov
dec
mov
inc
mov
xchg
add
das
or
jp
xchg
mov
mov
mov
and
popf
xor
xchg
int
nop
mov
stc
fstpl
insb
pushf
lods
push
xchg
jg
outsb
mov
xchg
fsqrt
lods
outsb
lret
jne
js
push
xchg
roll
add
and
icebp
mov
sahf
xchg
repnz
pop
pop
imul
cmpsl
popa
leave
dec
dec
clc
xchg
mov
fcomps
xor
jge
push
cmc
push
inc
sbb
inc
jg
filds
in
roll
js
mov
inc
cmp
pop
int3
aad
int3
les
dec
mov
into
mov
jmp
adc
nop
cli
dec
lods
and
xchg
lods
mov
repz
arpl
inc
je
ret
mov
icebp
mov
and
cmp
stos
test
out
lcall
cmp
cmpsb
and
mov
xchg
mov
push
sbb
jo
in
das
std
in
cmp
cmpsb
mov
bound
lret
dec
inc
sar
movsb
xor
lds
sti
ds
xchg
jns
sahf
movhps
jnp
push
dec
fstps
outsb
sbb
stc
faddp
push
inc
pop
lea
xor
push
insl
dec
fdivrs
xor
aaa
mov
subb
ja
rclb
sbb
push
push
loop
jle
int
bound
rcrl
fstp
insb
jmp
ljmp
out
clc
iret
adc
add
subb
sub
fimull
push
fdivrl
jmp
into
mov
mov
jg
xchg
mov
jle
dec
cmp
push
leave
scas
jns
sbb
xor
sub
gs
inc
inc
sub
sarb
pop
lods
ljmp
mov
out
outsl
or
pushf
cmp
sbb
loop
lahf
xor
jmp
pop
out
test
adc
mov
ss
pop
je
add
shrb
ret
xchg
xchg
sub
testl
and
and
fists
fstps
mov
pop
dec
inc
and
jns
add
xor
aam
sub
rcl
mov
xchg
pop
pop
dec
mov
cltd
push
popf
shlb
dec
aaa
arpl
add
sbb
test
inc
lock
stos
adc
push
lds
dec
mov
and
sbb
push
jae
clc
mov
repnz
mov
mov
sub
inc
jns
or
cmpsl
adc
sub
add
fldenv
inc
insl
xchg
popa
rcrb
dec
adc
push
xchg
cltd
push
xchg
add
jecxz
test
add
or
push
inc
dec
dec
repnz
jo
pop
sub
inc
lock
adc
jmp
les
or
pop
leave
cmp
pop
gs
leave
mov
dec
dec
pop
sbb
imul
inc
iret
mov
sbb
pop
mov
mov
andb
iret
inc
mov
in
insl
mov
aam
iret
arpl
ret
push
mov
popf
xchg
pop
addr16
push
mov
lock
icebp
mov
pop
adc
and
cmpsl
lock
jne
mov
sbb
out
js
popf
out
cmp
loop
inc
stos
insb
cli
jns
and
or
out
lods
jmp
xchg
xchg
lock
fldcw
jg
dec
fcomps
test
fiaddl
ja
dec
divb
aam
mov
out
mov
and
and
das
fdivl
in
dec
xchg
inc
int
mov
test
leave
cmp
dec
das
push
mov
mov
lcall
jmp
scas
pop
push
icebp
stc
aad
lret
into
jle
xor
icebp
inc
insl
pop
cmpsb
mov
or
addr16
outsb
arpl
pushf
pushf
orl
adc
mov
scas
xor
add
inc
lret
inc
cwtl
mov
pop
xor
mov
negl
fs
divl
fiadds
fdivp
je
test
data16
stc
and
push
push
and
scas
pop
sub
dec
dec
out
setae
cmpsl
pop
jne,pt
scas
out
inc
mov
push
add
xor
lret
mul
and
ret
sub
mov
fwait
xor
add
lcall
imul
fnsave
xlat
sbb
cmpsb
xor
cmp
xchg
and
xor
dec
and
or
mov
cltd
xor
bound
lock
inc
pop
jmp
ja
push
jmp
lret
jmp
shrl
mov
out
fs
insl
fsubr
fiadds
mov
mov
jmp
cmc
test
mov
add
mov
mov
into
dec
pusha
pop
xchg
jbe
mov
ja
out
jo
jbe
inc
add
xor
push
mov
ljmp
lds
loopne
popa
mov
std
add
movsbl
adc
stc
test
lds
jle
repz
xor
jb
cmp
ss
inc
das
lods
aas
pop
push
outsb
cmpsb
movsl
jg
loope
insl
push
rcrl
sub
mov
inc
mov
imul
lds
mull
inc
lods
lods
loope
repz
mov
jp
loopne
mov
or
mov
inc
cltd
xchg
mov
jp
loop
mov
bound
bound
jne
xchg
pop
sbb
and
not
and
sarl
pop
scas
sbb
mov
sahf
mov
pop
mov
stos
lahf
cltd
sbb
in
jno
fisubrs
push
or
and
lahf
shlb
xchg
jg
aam
rcrb
push
sbb
jo
icebp
mov
push
sbb
dec
hlt
insb
mov
add
fimull
pop
adc
xchg
test
dec
test
and
push
mov
cmp
jne
mov
fidivrl
insl
mov
out
or
ljmp
lahf
and
add
dec
push
sti
mov
cmpb
xor
pop
cmc
scas
ret
lret
inc
repnz
call
dec
insl
mov
sub
mov
xor
or
incl
lock
pop
jmp
es
mov
push
or
inc
dec
sub
pop
pop
cltd
cmp
fidivs
icebp
insb
xchg
rcl
jge
push
inc
pop
addr16
adc
push
bound
cmp
inc
nop
xchg
dec
inc
iret
jle,pt
pop
mov
andl
sub
add
xchg
mov
inc
int3
cs
jp
fwait
mov
mov
adc
stos
int3
cwtl
and
push
ja
jae
xchg
sub
push
add
mov
pop
push
mov
cmpsb
mov
xchg
ret
xor
xchg
mov
roll
pop
jb
inc
push
inc
mov
les
xsave
stc
sahf
pop
daa
addb
ret
inc
cmpsb
sub
mov
sti
pop
loop
mov
repnz
mov
jno
int3
inc
ret
int3
push
aas
adc
stc
je
out
add
sub
ss
imul
push
es
xorl
xor
clc
insl
push
cmp
mov
adc
add
inc
ret
hlt
leave
push
mov
or
inc
cmc
movsb
add
ja
mov
push
mov
push
out
nop
out
push
shrl
add
mov
mov
or
jne
sahf
push
stos
add
test
xchg
fildll
xchg
mov
dec
stos
sahf
adc
jbe
xor
pop
repz
adc
add
shlb
xchg
rcr
out
das
sbb
int
add
dec
jne
push
adc
xor
int3
fistpll
fs
test
fdivl
cmpsl
popf
mov
repz
and
mov
fwait
lods
pusha
aas
jae
leave
jae
push
leave
mov
scas
dec
sbb
jmp
cltd
mov
imul
dec
addr16
fidivrl
add
sbb
or
lahf
push
aas
mov
xor
das
add
push
lret
cmp
rcll
daa
or
popf
inc
cmpsl
int
xor
insb
push
lds
mov
xor
lret
int3
adc
xchg
mov
rcl
icebp
icebp
pop
je
dec
icebp
movsl
xchg
mov
or
push
leave
xor
js
out
rolb
ja
ss
stc
push
outsl
movsl
daa
inc
adc
test
jbe
out
mov
mov
xchg
test
movsl
mov
int3
cmc
outsl
sbb
inc
rcl
fimuls
push
mov
add
cs
add
js
mull
push
jb
aas
xchg
pop
into
lea
adc
cmp
enter
sub
pop
mov
sub
xor
mov
cltd
andl
cmp
sti
test
add
jns
dec
js
xor
loope
std
or
mov
mov
dec
xchg
cmpsb
leave
push
inc
aam
add
xchg
imulb
insb
rcr
dec
mov
adc
xchg
cmc
mov
dec
fs
lcall
into
pop
mov
gs
push
rcrl
dec
daa
sub
rclb
mov
cld
jp
aam
test
pop
pop
mov
pop
and
xchg
sti
std
add
cli
or
cmp
dec
xor
stos
xor
in
test
in
cmp
and
push
ficomps
ss
sub
dec
adc
aad
pusha
or
les
aas
jecxz
dec
imul
in
shll
dec
mov
mov
outsl
in
push
stc
fdivrs
in
divb
outsl
clc
add
enter
pop
icebp
bound
cmp
sub
cmpsl
mov
fcompl
xchg
sarl
mov
push
in
jl
dec
sahf
cmpsl
enter
pop
mov
cmpb
jno
incl
lock
dec
fcoml
in
fcompl
fs
mov
test
out
out
inc
pop
lods
jnp
xchg
daa
mov
or
lret
push
mov
insb
push
mov
jb
daa
gs
sbb
xchg
pushf
mov
mov
cmpsb
orl
cmp
mov
mov
jl
outsl
fildll
movsb
in
xchg
inc
dec
out
jecxz
iret
inc
mov
cmp
mov
xchg
lcall
mov
push
andb
adc
dec
and
je
pop
dec
enter
je
mov
adc
inc
roll
mov
jl
scas
jmp
push
sub
ja
insl
test
out
pop
test
in
jl
mov
mov
mov
dec
jmp
sahf
insb
dec
inc
cmp
xchg
test
aad
stos
div
pop
or
push
xor
and
inc
lods
bound
or
pop
add
outsb
cmp
iret
xor
pop
sub
dec
sbb
insl
pushaw
sbb
mov
nop
sbb
jmp
mov
mov
push
jecxz
xchg
or
lahf
sbb
jl
lds
xchg
jecxz
sbb
aaa
pop
arpl
rcll
xchg
xchg
das
mov
adc
incl
fdivl
or
or
jne
outsb
gs
sub
xor
dec
jmp
mov
jb
sub
movsb
stos
inc
or
jg
xchg
in
aam
mov
dec
in
and
aad
sbb
mov
and
cwtl
xor
in
jl
jno
adc
push
jne
aas
mov
sub
xor
ds
pop
mov
cld
bound
subl
lahf
leave
jl
das
jmp
test
push
lret
mov
test
or
call
adc
mov
cld
in
jo
cmp
push
mov
stc
enter
ss
dec
sbb
ds
mov
cmp
fwait
outsl
mov
push
dec
int3
ja
pop
push
dec
xor
data16
clc
push
xlat
dec
insb
sti
mov
mov
push
push
test
call
in
enter
pop
push
lahf
gs
popa
stos
mov
jecxz
jae
lock
dec
xchg
sbb
add
jns
add
pusha
sub
incl
clc
ljmp
icebp
lahf
movsb
stc
fiadds
dec
mov
leave
int3
and
arpl
xor
jp
enter
pop
in
xlat
test
cmp
pop
dec
jl
sbb
mov
cmp
cmc
push
jmp
ss
loopne
fisttpl
bound
or
push
pop
rorb
scas
and
aas
adcl
xchg
bound
in
mov
jge
mov
and
fnstcw
lods
pop
in
loopne
gs
mov
jbe
pop
aam
rcr
inc
mov
pop
imul
and
push
sub
pop
cs
pop
xchg
add
movsb
lcall
popa
dec
push
fcmovb
push
leave
sbb
adc
notl
jbe
push
and
sbb
mov
std
and
add
mov
or
push
insb
int
lret
sbb
adc
push
mov
dec
cmp
mov
int3
pushf
out
push
and
xor
mov
decb
fcmove
in
inc
out
jae
mov
add
lea
aam
add
loop
loope
sub
cs
push
add
pop
test
mov
out
in
aaa
mov
add
push
cmp
xor
add
push
fcoms
mov
sub
dec
or
sub
imul
out
es
jl
mov
and
lods
mov
dec
inc
ror
inc
push
xchg
mov
pop
ret
push
xchg
jb
mov
arpl
jbe
jl
ja
hlt
jmp
cmpsl
aaa
sub
outsb
aaa
mov
shlb
and
int
xlat
mov
push
add
stc
lret
jg
mov
mov
push
fcmove
inc
fwait
shlb
bound
roll
or
mov
or
push
adc
pop
adc
leave
mov
mov
ss
lea
pop
iret
cmp
mov
mov
add
andb
adc
push
into
loopne
adc
jle
xchg
cli
lcall
jmp
ret
scas
xlat
stos
adc
in
clc
sub
dec
repz
cmp
mov
gs
inc
lcall
insl
lea
out
movsl
cli
popa
add
aad
loope
jl
ja
nop
and
and
es
mov
scas
and
add
jle
fists
jns
jmp
jae
clc
jecxz
or
jbe
or
inc
orb
into
xor
test
bound
pop
sbb
fidivs
mov
scas
mov
sub
jne
outsb
mov
jmp
pop
dec
mov
fmull
mov
pop
adc
ja
scas
rorl
dec
mulb
push
aad
in
push
ja
push
cmp
dec
mov
adc
push
adc
js
inc
cmp
inc
notl
aam
jp
and
and
icebp
xor
movsl
mov
sbb
cmp
ss
jecxz
mov
mov
mov
jne
mov
adc
xlat
inc
arpl
or
or
adcl
shr
mov
out
jle
lcall
mov
loopne
xlat
mov
mov
in
sar
and
nop
jg
mov
push
and
or
jnp
jge
pop
sbb
into
xchg
les
fwait
sbb
push
arpl
nop
sbb
hlt
stos
test
xchg
dec
sub
xlat
fs
inc
repnz
mov
pop
test
mov
cmp
adc
cmc
aaa
lret
in
or
cmpsb
repnz
or
dec
in
push
pop
hlt
in
movsl
cwtl
mov
cmp
push
inc
add
movsb
and
rol
jecxz
cmpsb
lods
stos
out
jb
xchg
lods
leave
and
clc
fcoml
jne
addl
enter
cmp
leave
inc
fs
scas
aas
in
popa
ret
sub
mov
outsb
xor
xchg
mov
jo
inc
test
clc
popa
stos
or
push
jae
test
push
les
fcom
std
cs
into
xchg
jne
inc
roll
in
push
negb
icebp
mov
das
pop
mov
imul
sahf
inc
mov
inc
mov
lret
cmp
jl
jo
mov
xorl
fdiv
aam
xchg
xor
lods
dec
mov
inc
in
sbb
jne
xchg
outsb
roll
fbstp
xor
sub
mov
nop
sti
mov
fsubrl
pop
shll
lret
cmpsb
dec
cwtl
arpl
xchg
xchg
or
repnz
jae
sahf
add
ficompl
xor
add
sahf
jecxz
andb
sub
sub
cmp
lods
push
bound
xor
xor
xor
cld
lds
mov
sub
test
jns
dec
mov
and
mov
cltd
mov
std
mov
daa
in
stos
mov
scas
add
mov
fucomi
aaa
inc
fidivs
ljmp
jbe
fsubrl
out
aas
mov
and
comiss
mov
repnz
sbb
mov
and
add
push
sub
pop
ret
jge
ficoml
icebp
add
adc
icebp
mov
push
adc
sub
aam
and
cmp
lcall
sub
mov
cs
xchg
mov
mov
jno
scas
push
xchg
mov
sbb
je
es
jae
sub
cwtl
mov
sbb
fisubl
add
push
xchg
add
aaa
loope
sbbl
xor
cmp
popl
mov
sub
mov
icebp
jae
push
jp
add
add
aad
les
pop
dec
lret
xchg
inc
cmp
and
shll
push
or
fsubrl
and
push
fisubl
mov
ja
les
xor
lea
in
lret
clc
ret
push
pop
push
and
stc
mov
movsl
pop
inc
sarb
aaa
xchg
mov
in
xor
aas
xor
insb
call
aam
popa
sub
test
xchg
and
cld
lods
loope
lret
fwait
jg
sub
fidivrl
test
xchg
cltd
dec
addr16
push
les
cmp
lahf
mov
js
rorl
in
movsl
adc
nop
jp
aad
ret
add
mov
mov
pop
pop
call
enter
mov
sahf
push
push
mov
lods
dec
dec
adc
or
aas
jle
rcrl
popf
xchg
in
push
pusha
mov
push
in
sub
sbb
cld
xchg
jb
decl
test
inc
xchg
cmc
ucomiss
sub
sub
pop
les
push
or
xlat
movb
and
dec
repnz
push
cltd
cmc
into
mov
pushf
insb
lahf
call
in
and
rcrl
daa
fbstp
adc
jb
mov
imul
test
data16
imull
adc
cmc
jno
mov
push
xor
mov
push
in
sub
lds
add
imulb
push
movsl
mov
push
leave
mov
dec
mov
ss
fcoms
mov
jb
mov
push
mov
pop
std
mov
enter
imul
and
nopl
cmpsl
jo
out
lds
sbb
repnz
pusha
jl
cmp
out
lcall
divps
mov
popa
rcll
pushf
aam
push
adc
dec
sub
inc
leave
mov
and
in
mov
idivb
or
mov
subb
pop
push
test
mov
repz
or
push
inc
cmc
cmpsl
add
jb
jmp
xchg
jno
je
xor
stos
in
add
sbb
fwait
je
imul
in
dec
call
subb
push
cli
xor
jo
xor
mov
push
imull
out
dec
cli
dec
jecxz
test
sbb
lret
int
jp
mov
clc
mov
mov
aas
pop
mov
cmc
cmp
aad
inc
aad
or
dec
cmovle
or
xchg
mov
orl
call
ja
das
movsb
fdivrs
int3
ret
dec
sbb
xor
testb
dec
sbb
les
in
int
xchg
or
push
xchg
shl
mov
hlt
and
jne
shll
stos
test
mov
push
or
mov
into
push
iret
push
sbb
lods
add
pop
nop
cmp
mov
pop
cmp
clc
sbb
lcall
loope
and
ret
or
push
xor
sbbl
dec
xor
or
adc
jge
inc
cmp
aam
sub
xor
js
lea
cmc
cmp
mov
lcall
cmpsb
imul
gs
inc
scas
leave
ljmp
sahf
test
fxch
test
insl
cli
mov
cmpsl
xchg
enter
or
adc
push
fdivrl
and
sub
pop
mov
mov
inc
and
dec
out
sbb
imul
xchg
lods
lret
mov
jecxz
sub
jns
dec
lods
rcl
sbb
mov
test
into
dec
sub
and
ljmp
mov
jp
xor
insl
jecxz
inc
jne
inc
iret
or
jmp
mov
dec
aaa
hlt
mov
sti
add
and
mov
loopne
xchg
push
xlat
divb
in
dec
shlb
inc
lret
pop
into
inc
xchg
jmp
popa
femms
cmpsl
sti
inc
lods
ds
clc
ss
inc
xlat
xor
sbb
shlb
stos
mov
hlt
bound
adc
xchg
inc
insl
fsts
mov
in
js
or
mov
ljmp
mov
pop
std
out
xor
out
dec
cmpsl
call
fnsave
mov
dec
fimull
inc
fildll
test
pushf
repz
je
aas
test
jecxz
int
stc
mov
dec
cmp
fwait
push
hlt
enter
add
pop
popf
xor
scas
pop
lcall
es
xchg
call
inc
sahf
add
call
movsl
dec
sub
jnp
inc
call
inc
push
and
xorl
xchg
rclb
fldcw
mov
jmp
push
test
lcall
cld
jo
les
cwtl
rcrb
add
std
mov
jmp
lock
outsb
leave
add
lds
mov
sahf
insb
xchg
out
adc
push
jmp
gs
or
inc
scas
sahf
mov
std
pushf
inc
cmp
cmc
nop
or
push
xlat
mov
hlt
fs
dec
jnp
inc
mov
cmp
loopne
xchg
clc
dec
insl
pop
ror
movsl
cmpsb
inc
mov
sub
popa
lcall
mov
mov
mov
cmp
add
mov
out
ret
insl
jbe
inc
or
pop
mov
pop
inc
add
xorl
mov
cmp
cmp
sub
mov
enter
leave
jbe
xchg
fists
pushf
pop
cmp
outsb
je
xor
pop
insb
repz
inc
or
xchg
loop
popa
dec
mov
mov
insb
movsb
adc
std
outsb
lock
dec
rcr
pop
addr16
das
aad
push
mov
pop
call
jp
jmp
dec
test
and
add
xor
js
pop
fwait
adc
xchg
test
inc
out
push
jne
or
or
adc
cmp
xchg
scas
ss
fldcw
fwait
aaa
jg
cld
adc
std
iret
xor
pop
sub
xor
fbld
push
clc
pop
int3
orl
mov
add
mov
mov
mov
outsb
xchg
ljmp
jmp
repz
push
shll
rolb
scas
mov
push
mov
or
push
fsts
mov
les
jmp
xor
adc
repz
xor
sub
sarb
pop
mov
push
mov
stos
lret
cmpb
inc
ret
xlat
cs
jb
into
adcb
movsl
std
fistpll
js
and
inc
addr16
dec
test
sub
cmp
or
sti
jge
sub
jmp
fisubs
into
insb
mov
jg
fmull
divl
fwait
test
pop
loop
mov
and
dec
dec
loopw
test
rorb
xor
into
mov
inc
inc
mov
andb
test
out
mov
aam
loop
jae
jne
dec
push
xchg
pusha
int
les
std
ljmp
test
jl
push
or
xchg
inc
lods
js
or
int
xchg
aad
fs
dec
mov
dec
rep
and
xor
movsl
xor
mov
sub
dec
push
shr
ds
popa
or
popa
shl
and
dec
mov
sbb
inc
adc
xlat
jne
cmp
movaps
xor
or
stos
mov
cli
pop
sbb
mov
xchg
in
sbb
xchg
jno
ljmp
dec
sub
in
leave
adc
cwtl
push
leave
ja
imul
daa
les
add
sbb
addr16
inc
pushf
jbe
ds
repz
dec
add
ficomps
xchg
mov
add
mov
pop
mov
xchg
and
xlat
fldenv
cmp
mov
shr
and
dec
jb
out
std
or
pop
and
xor
mov
lods
pop
cli
mov
insl
test
xchg
sbb
cmc
xlat
cmp
je
inc
inc
push
std
push
cmp
nop
pop
fisubrl
test
mov
sub
sub
neg
inc
sbb
fwait
shrl
xor
adc
xchg
mov
jl
jge
in
lea
fdivs
jo
ds
dec
add
sar
out
les
dec
sbb
jb
jnp
dec
sbb
add
add
lds
imul
inc
sbb
fnstcw
jmp
pop
jecxz
orb
aaa
xchg
shl
and
and
inc
xor
mulb
or
mull
push
or
sbb
fistpl
add
es
push
lahf
xchg
stos
mov
pushf
jge
out
push
imull
mov
mov
or
mov
imul
std
mov
and
scas
jnp
lahf
inc
das
faddl
outsl
push
movsb
leave
mov
jno
adc
push
mov
pop
cmpsl
push
adcl
addr16
nop
outsl
ret
iret
outsb
adc
imul
mov
test
out
add
movsb
test
xor
push
sbb
js
outsb
mov
mov
pop
inc
adc
add
xchg
xor
jbe
sbb
xchg
mov
dec
scas
mov
pop
xchg
mov
and
in
adc
ret
sbb
jbe
bound
dec
lea
mov
icebp
cmp
adc
cmpsb
mov
je
dec
loope
inc
cmpsl
mov
xchg
daa
das
aas
int3
xor
movsl
cmp
xchg
leave
icebp
pop
xchg
xor
sub
add
data16
jg
gs
stc
flds
and
add
mov
xchg
cmp
mov
xchg
inc
pushf
xchg
inc
stc
movq
lahf
and
insl
lea
mov
out
add
jbe
pop
mov
out
inc
clc
dec
enter
add
shr
rorl
sub
mov
mov
or
loopne
imul
xchg
mov
test
int3
jecxz
mov
addb
cld
mov
aaa
pop
pop
loopne
mov
lea
cld
mov
sbbl
cwtl
jbe
add
cmpl
add
xor
sbb
mov
sub
dec
push
and
xor
dec
push
out
adc
fs
icebp
stos
lods
jle
in
and
mov
nop
pop
rcrl
leave
push
and
adc
stos
cwtl
cmc
mov
adc
inc
push
out
cmpsb
negb
mov
xor
aad
je
lret
add
add
jmp
loopne
push
and
int3
adc
sub
movsl
mov
ret
jae
mov
inc
adc
popf
in
in
fldcw
pop
jecxz
roll
mov
pop
mov
pop
cli
and
fcoml
lret
sbb
sub
mov
sub
sub
ljmp
dec
lret
lea
sub
mov
mov
jb
arpl
aad
fcomp
xchg
jbe
push
jmp
xor
jns
pop
add
lcall
shr
mov
push
cmp
out
sub
pop
ret
add
or
iret
outsb
in
jbe
mov
push
imull
inc
fiadds
pop
lret
aas
shr
and
pop
jecxz
dec
repnz
fisubrs
xor
inc
xchg
adc
outsl
add
mov
test
adc
je
cmp
xor
loopne
and
xchg
adc
scas
fs
xor
cmp
pop
das
lcall
xlat
lds
fcoml
mov
imul
mov
xor
lock
mov
jo
push
int
fdivrs
add
cmp
fs
orl
fildl
pop
xor
xor
js
pop
outsl
add
cmpb
or
insb
shll
ss
sti
adc
jmp
jp
dec
shl
mov
sub
loopne
mov
rcrb
jp
imul
add
xchg
loop
dec
jbe
std
mul
add
in
push
in
mov
aas
ds
popf
inc
cwtl
dec
dec
lretw
aaa
xor
fsubl
mov
imul
add
inc
fildl
out
sub
add
stos
hlt
push
daa
in
sub
outsl
mov
and
scas
cmp
lock
inc
cmp
sub
pop
mov
jbe
adc
or
pop
xchg
cwtl
testl
aam
icebp
push
sub
mov
or
add
push
add
adc
enter
btr
mov
aaa
test
aaa
xchg
add
pop
mov
push
arpl
sahf
scas
inc
lods
and
lret
sub
scas
sbb
movsb
mov
icebp
jp
mov
adcb
sub
mov
fnstenv
fiaddl
pop
test
add
inc
pushf
shll
data16
jnp
das
ret
mov
les
jno
pop
xor
shr
dec
and
cmpb
pusha
mov
mov
mov
mov
jno
scas
cmp
rcr
daa
xor
xchg
sbb
insb
es
mov
dec
fdivs
lcall
dec
ret
test
lahf
imull
outsb
inc
mov
jo
aad
idivl
mov
test
dec
mov
xorl
sahf
mov
inc
add
dec
pop
pop
jp
in
inc
pop
in
inc
mov
repnz
faddl
push
or
xchg
dec
addr16
cmp
dec
pop
cltd
stos
testl
mov
mov
outsl
push
shr
call
inc
mov
dec
aam
pusha
mov
lods
adc
jns
lahf
ss
mov
mov
das
nop
push
pop
jns
mov
xchg
xchg
into
push
push
jle
sub
mov
or
scas
mov
mov
adc
xor
adc
loop
daa
adcl
xchg
loopne
lret
addb
push
aas
aad
cmp
or
fistps
outsb
lret
mov
fadds
xchg
out
test
enter
iret
hlt
fs
out
mov
lret
cmp
sub
imul
push
and
test
and
inc
push
jge
in
mov
orb
mov
fbld
movsb
ror
adc
and
lds
jge
fnstsw
iret
jp
sahf
xchg
push
jno
mov
jnp
xchg
mov
cmp
aad
pop
jno
in
nop
inc
scas
aam
in
or
in
or
dec
hlt
cmpsb
in
dec
in
lock
ret
inc
adc
outsb
sarl
mov
push
in
popf
xchg
lea
outsb
or
repnz
sub
pop
cmpsl
and
cmovo
std
inc
pop
lods
leave
loope
fidivl
js
inc
sbb
js
jecxz
push
dec
imul
aas
iret
cmp
mov
in
jge
inc
lods
xchg
mov
fiadds
dec
rcl
das
ss
push
fcmove
addb
xchg
out
sbb
cli
movsl
dec
cmp
or
xchg
clc
or
inc
scas
bound
inc
mul
addl
mov
das
pop
mov
cmp
mov
jo
scas
cli
jno
in
mov
jecxz
std
addr16
loopne
jne
xchg
pushf
pop
push
add
repnz
pop
cmpsl
sbb
cmpsb
std
jb
in
and
out
je
sbb
sbb
adc
adc
mov
test
movsl
mov
add
test
sub
in
sub
ja
aaa
movsl
sbb
in
adc
xor
inc
sbb
push
or
cmp
cltd
sbb
cltd
or
cwtl
cwtl
mov
out
jp
push
std
push
mov
adc
aaa
push
jge
pushf
inc
adc
clc
dec
push
inc
mov
sub
das
ror
pop
mov
pop
nop
and
shl
push
popa
dec
test
pop
aam
insl
sbb
inc
push
sti
jns
test
mov
mov
sub
jecxz
iret
xor
inc
inc
scas
cmpsl
cli
mov
aam
fmuls
aam
jbe
adc
push
aas
jne
int
push
insl
jno
ret
adc
ret
out
mov
cmp
stos
movsb
mov
roll
call
sbb
dec
adc
mov
inc
jmp
fcmovb
not
mov
pop
push
std
shlb
inc
imul
cmpsl
jns
fldenv
shlb
jle
roll
pop
arpl
mov
push
pop
scas
mov
jno
ljmp
into
mov
mov
je
sub
sbbb
push
arpl
mov
sti
or
aam
cld
jp
mov
pop
xor
push
loope
push
add
fiadds
fwait
inc
loope
les
subb
lret
mov
lret
add
jns
cmp
ljmp
xchg
push
adc
pop
scas
js
push
dec
jo
jle
dec
or
imul
mov
jl
cmp
out
mov
jmp
ss
jecxz
jb
xor
pop
sub
xor
clc
clc
push
movsb
cmc
ror
push
jecxz
mov
repz
mov
mov
sub
inc
sub
sti
rolb
es
lock
imul
outsl
add
cmp
sbb
addr16
sahf
dec
push
rorb
enter
cmp
std
popl
or
fwait
stc
jae
sbb
jle
out
pop
xchg
xchg
cmpsb
dec
icebp
mov
sub
or
gs
mov
and
mov
lods
dec
adc
xor
pop
lahf
mov
pop
in
xor
sti
mov
rolb
out
jno
or
outsl
inc
add
cmc
and
clc
inc
scas
jle
xchg
mov
jno
mov
dec
xor
lret
icebp
sub
push
dec
mov
and
xor
les
mov
out
clc
cs
mov
fdivl
dec
push
push
lret
mov
xchg
loopne
mov
mov
leave
mov
mov
ret
ds
ljmp
cmp
sbb
call
cs
mov
fcmove
sarl
dec
cmpsl
out
push
mov
out
addr16
jno
das
inc
roll
sbb
loope
mov
sbbb
xchg
or
jp
jp
mov
sub
jg
lcall
cmpsb
cmp
pop
pusha
add
std
shll
mov
mov
cmp
fsubrl
mov
sahf
fisttpll
jl
lods
sbb
cwtl
outsb
pop
js
clc
mov
stc
adc
pop
sub
pop
push
pop
fwait
lea
in
bound
fidivs
sub
rcrb
mov
fsubrs
fisubs
dec
cs
push
pop
sub
outsb
jae
sbb
dec
std
bound
xchg
mov
cmp
mov
jge
xchg
in
or
fdivrl
dec
lcall
jno
out
movsl
rclb
sub
jns
add
mov
inc
iret
mov
popf
dec
inc
push
in
adc
mov
fcomps
xchg
hlt
mov
xchg
pop
repnz
add
jl
inc
mov
es
test
inc
lea
outsb
aaa
shl
std
shll
pop
ret
xor
aad
xchg
int
out
dec
lret
xor
inc
das
call
hlt
aaa
dec
cmp
adc
mov
adc
shll
jae
add
out
mov
pushf
xlat
pop
jg
push
jns
leave
add
lret
dec
dec
leave
dec
jo
mov
std
out
push
mov
cld
in
xchg
addl
cmp
fmull
nop
mov
incl
mov
notb
xchg
xlat
jmp
sti
mov
jl
adc
in
or
dec
mov
or
push
mov
xchg
fsubr
imul
add
sub
xchg
scas
jle
cwtl
gs
dec
outsb
stc
push
sahf
int
ss
adc
cmp
push
adc
adcb
xchg
sbb
outsl
jnp
orb
je
xchg
xchg
pusha
mov
popa
lods
das
mov
jle
icebp
xchg
divl
stos
dec
fwait
cmp
mov
mov
out
xchg
jmp
xor
stos
sbb
push
xchg
pop
movsl
inc
push
nop
in
fdivrs
shrb
sub
test
mov
subb
testl
inc
cmp
ret
cmpsb
bound
cmc
fisttps
fxch
ja
movsb
stc
repnz
in
add
or
bound
rorl
inc
mov
lock
jns
pop
jle
fimuls
xchg
adc
jae
andl
dec
dec
call
iret
pop
fstl
push
inc
sbb
sbb
pop
mov
and
or
cmp
fs
dec
dec
cltd
into
aad
je
adcb
sarb
scas
call
inc
iret
je
lahf
outsb
add
push
mov
and
stos
pop
push
mov
xchg
adc
xlat
iret
mov
xchg
ret
repz
and
pop
test
cwtl
addr16
or
jle
jmp
jmp
xor
aam
out
xlat
in
pop
xor
notb
jmp
mov
lea
jo
std
xchg
pusha
mov
aam
jmp
fwait
sub
int3
push
adc
add
xor
incb
repnz
cli
lret
mov
je
mov
nop
mov
jo
out
jmp
mov
push
jge
in
das
xchg
sarl
cmp
pop
cltd
mov
imull
fdivr
push
dec
and
loope
xchg
lods
sub
fnstcw
insb
repz
or
mov
add
mov
popf
dec
out
data16
mov
or
pop
and
das
sbb
xor
inc
lods
lock
std
aam
xchg
sarl
dec
lret
bound
dec
cmp
xchg
cmp
pop
ror
push
into
sbb
push
jno
inc
mov
insl
or
shrb
inc
leave
in
call
out
mov
popa
cmpsl
adc
pop
lea
mov
fisubl
cmpsl
das
outsb
out
cmp
and
addl
cwtl
shrl
aad
pop
mov
and
mov
mov
mov
sbb
pop
icebp
sbb
inc
mov
popf
lret
add
mov
cmp
jns
sti
fcmovb
push
shrl
sub
push
out
mov
add
fdivr
pop
int3
xchg
cmp
push
pop
dec
xchg
pop
out
or
leave
fsubrp
jge
or
test
and
rol
shll
dec
jmp
mov
je
inc
bound
mov
mov
xor
shrb
rcrl
fisttpl
pusha
mov
cmpsl
and
jle
sbb
loopne
bound
movsb
inc
stc
cwtl
pop
inc
lcallw
scas
mov
jo
lds
xchg
dec
ficompl
dec
xchg
outsb
or
pop
mov
inc
leave
test
imul
push
mov
push
pop
fisubl
popa
stos
sub
xor
adc
xor
jb
xor
adc
jnp
das
xchg
push
push
push
jp
mov
aas
jo
and
in
xchg
int3
inc
imul
cmp
es
in
xchg
mov
sub
sbb
xchg
add
int3
or
xlat
stc
sbb
dec
sbb
clc
pop
cmc
fnstenv
sbb
nop
jns
pusha
xchg
ss
cld
out
pop
pusha
call
add
mov
jmp
jecxz
ss
daa
sub
les
push
mov
pop
cwtl
xchg
fs
sub
sub
aaa
into
cmp
push
xlat
lahf
divb
outsl
pop
xchg
pop
pop
xor
push
sub
cmp
mov
stc
js
popf
loopne
addb
cwtl
xchg
ret
dec
and
nop
js
xor
jns
push
xchg
jne
repnz
mov
in
scas
rol
fstps
jp
es
xchg
frstor
sub
inc
clc
pusha
mov
stc
or
inc
dec
test
mov
xchg
pop
pop
arpl
js
jmp
jp
movsl
fistps
inc
rep
add
jno
sbb
idivl
push
dec
pop
xchg
xor
mov
lea
fsubl
or
mov
dec
insb
insb
sub
cmp
cmc
iret
add
mov
jmp
das
loop
push
cmp
jns
movsb
std
pushf
push
mov
test
mov
stc
fisubs
jp
xchg
mov
jnp
mov
sbb
ret
jnp
leave
mov
mov
pushf
adc
sbb
mov
cmp
pop
dec
inc
dec
and
es
jo
mov
mov
sub
mov
pusha
roll
aam
jecxz
das
jg
xchg
popa
popa
repnz
xor
outsb
ds
sahf
insl
adc
aam
jo
push
enter
push
std
lahf
and
shl
add
and
push
or
jne
jle
mov
cmp
loope
jb
filds
xor
jns
gs
subl
repnz
cwtl
mov
lret
aaa
jae
jmp
insb
loop
sub
adc
cs
xchg
insl
bound
jp
xor
jnp
lods
fsubrs
jl
invd
push
pop
out
xchg
push
mov
and
inc
inc
bound
sub
add
shlb
jo
mov
sub
in
fwait
xchg
push
cld
repz
arpl
imul
push
xor
mov
pop
and
out
js
push
sbbw
cmp
mov
pushl
push
mov
sbb
mov
addl
test
cmc
jmp
adc
pushf
aam
or
adc
rep
scas
divb
push
mov
add
lahf
xor
mov
pop
mov
jg
nop
hlt
ret
xchg
std
fcompl
lret
stc
clc
aas
arpl
daa
rcrl
fwait
pushf
nop
sti
out
outsb
xor
das
cmc
mov
xor
test
in
mov
subl
dec
pushf
ljmp
sub
aam
xor
pop
dec
ljmp
shll
adc
adc
sbbb
stc
pop
testl
mov
arpl
and
lret
imul
outsb
adc
mull
scas
adcl
testl
pop
cmpsl
cld
push
fimull
fs
icebp
scas
test
lock
dec
es
add
pusha
mov
xor
orb
push
test
int
adc
cwtl
cmp
add
jmp
pop
add
adc
int
or
cli
cmp
xchg
jbe
mov
arpl
mov
mov
sbb
or
fs
ljmp
push
fucomip
adc
out
das
enter
inc
arpl
inc
lahf
out
je
aad
jge
shl
test
loopne
imul
cmp
lahf
mov
xchg
out
movl
lcall
cmp
rclb
add
pop
stc
inc
pop
pushw
sbb
jge
or
xchg
addl
stos
xchg
mov
push
pushf
sbb
scas
push
sub
xor
idiv
mov
pop
sub
inc
fdivp
push
out
or
test
sbb
mul
imull
mov
sbb
fs
scas
data16
mov
jb
aaa
xor
in
pop
mov
dec
sub
jmp
mov
inc
push
ret
lahf
das
js
movsl
hlt
mov
and
xchg
aam
mov
cld
icebp
mov
add
sbb
aad
lods
push
push
adc
or
rorb
mov
sub
xor
ja
jne
adc
cmc
xor
add
adc
inc
mov
ljmp
das
outsl
pop
and
cmpsl
inc
loope
jge
ret
nop
pusha
pop
jno
lcall
stc
out
dec
jp
or
xor
mov
inc
inc
jmp
push
dec
cmpsb
push
enter
cmpsb
test
jle
mov
mov
rcrb
iret
das
xchg
lahf
pop
ds
jae
pop
mov
int
push
and
inc
lea
cmpsb
lds
jae
push
pop
ja
ja
dec
out
aas
movsb
push
subb
js
js
dec
leave
daa
sub
movsb
repz
pop
stos
jae
enter
ret
xor
outsb
mov
cs
mov
lret
or
repz
test
lock
xor
cmc
sub
add
dec
in
mov
mov
jo
lods
call
cmp
bound
subb
xchg
jne
mov
push
push
dec
dec
lret
mov
or
btr
pop
jmp
loopne
dec
push
iret
pop
mov
out
xor
mov
aaa
or
pop
mov
pop
xlat
or
mov
cmpsb
dec
cmpsb
scas
je
adc
imul
outsb
mov
test
cmp
insl
pop
xchg
mov
pop
clc
sarl
and
dec
cmp
mov
into
or
push
movsb
mov
je
xchg
stos
xlat
inc
bound
pushf
movsl
les
xchg
out
mov
xchg
sahf
stos
imul
repz
ret
js
int
cmpsl
ljmp
sbb
or
cmp
cli
inc
mov
out
pusha
inc
and
jmp
loop
jge
loop
inc
adc
es
scas
sub
cmp
push
in
sub
mov
jae
call
loope
jp
sbb
inc
inc
popa
es
inc
and
and
jecxz
push
push
pop
pusha
dec
push
out
or
daa
pop
js
lods
dec
rolb
xchg
cmp
fisubl
adc
push
xchg
cmp
cmp
add
ja
push
pop
enter
cmpsb
scas
mov
add
aam
jmp
sbb
data16
test
fwait
mov
cld
sub
xor
push
jmp
pop
stos
and
movsl
cs
dec
cmp
cli
data16
je
xor
and
push
flds
sahf
mov
loop
lds
mov
jno
popa
int
lret
and
lds
leave
sub
mul
lods
loop
or
inc
xlat
add
pusha
xchg
add
dec
rcrb
push
pop
mov
sbb
in
test
aad
fwait
sbb
cmp
fwait
fwait
mov
adc
ret
mov
repz
in
stos
xor
mov
sahf
inc
add
add
push
ss
mov
or
pushf
scas
test
inc
iret
int3
jae
add
pop
inc
mov
cmc
mov
push
mov
mov
hlt
in
mov
aas
imul
in
push
and
add
leave
scas
cli
clc
hlt
cltd
popf
adc
pop
roll
ret
push
repnz
pop
cmpsl
aas
stos
xor
stos
adc
xchg
lods
dec
or
jno
xchg
iret
sub
insb
and
cs
dec
xchg
scas
sub
inc
xor
aaa
adc
fst
push
loope
adc
mov
in
mov
cmp
or
ds
sbb
adc
lahf
es
and
sti
fcoml
fbld
jnp
sahf
pop
or
out
lds
aas
cmpsb
xchg
js
pop
inc
outsb
and
and
pop
pop
xchg
loopne
aad
xor
mov
outsl
loopne
insl
rorb
cmp
pop
inc
mov
xor
rep
or
cltd
pop
mov
emms
push
xchg
movsb
fldenv
mov
pop
pusha
adc
push
das
pop
sub
mov
xor
inc
cmp
aad
add
xchg
pop
lcall
and
fistl
sbb
in
xchg
xchg
repnz
and
icebp
pop
sub
xchg
sub
mov
mov
enter
std
add
cmpsb
and
mul
inc
and
icebp
lods
mov
clc
rorl
jmp
popa
mov
or
popa
js
sub
sub
insl
inc
pushf
jns
xlat
jns
fbld
cmp
js
cmp
pop
fs
push
in
in
or
jne
orb
out
inc
dec
push
sbb
addb
fsubl
in
loope
jns
adc
popf
aad
sub
addb
push
jbe
mov
js
lds
inc
xor
xor
xor
aaa
push
adc
xchg
mov
pop
idivl
outsb
fcompl
movsl
xchg
lahf
adc
adc
icebp
gs
imul
mov
insl
add
in
je
push
enter
jmp
bound
cli
cmc
fisttpll
ds
inc
jecxz
std
push
cmp
add
dec
adcl
outsb
sub
sbbl
xchg
clc
push
aam
xchg
aam
outsb
pop
orl
rcll
cltd
and
cmp
rorl
jle
movsb
int
xlat
push
mov
mov
cmp
or
dec
ror
out
sar
addr16
testl
fwait
test
sub
sti
jp
setp
pusha
pop
cwtl
into
stos
adc
stos
lods
or
mov
ja,pt
xchg
gs
shll
cmp
loopne
add
sub
xor
aad
out
jno
mov
lock
stc
mov
xchg
jb
and
sbb
xchg
xor
dec
filds
and
repnz
scas
xchg
cltd
mov
fmul
inc
mov
je
sub
jge
imul
lods
lret
cmp
cltd
test
inc
sub
pop
das
pop
cmpsb
jp
mov
mov
pop
cmc
adc
fcompl
push
dec
leave
in
andl
lret
push
cmp
shl
int3
sbb
pop
aam
inc
sbb
xor
jae
stc
test
scas
lahf
mov
stos
adc
test
push
mov
scas
in
popf
jbe
inc
mov
pusha
out
dec
xchg
push
test
js
push
add
cmpsb
lret
scas
adc
in
adc
lahf
add
mov
xchg
pop
pop
addl
movsl
xor
dec
sbb
das
lret
mov
js
jle
cmpsb
inc
outsb
dec
or
pop
cmpsb
jns
cmp
and
jnp
cmpsl
or
ja
mov
scas
out
shrl
out
sub
ljmp
leave
aaa
sti
test
add
mov
or
xor
jb
sar
jl
dec
lret
xor
inc
fdivp
jmp
mov
out
inc
sub
push
or
out
pusha
out
in
jnp
dec
cmp
popf
sbbb
shlb
mov
push
mov
test
cmp
jno
hlt
adc
pop
out
icebp
in
xchg
and
adc
sahf
sub
lret
push
fildl
add
movsl
fisubrl
mov
xchg
jge
inc
push
enter
fcmovu
out
cmpsl
enter
rcrl
pop
fsqrt
cmc
in
cli
and
ret
sbb
stos
in
imul
negb
pop
pusha
int3
sbb
gs
sti
hlt
loop
add
loopne
popa
jecxz
out
add
mov
decl
dec
mov
mov
push
push
xor
xchg
adcb
lds
pop
std
imul
ret
jnp
jae
mov
in
and
xchg
jbe
or
inc
iret
outsb
jne
mov
out
lcall
jl
adc
mov
sub
jecxz
cmpl
rolb
ss
lock
mov
sbb
mov
pop
inc
lods
mov
dec
loop
clc
mov
es
fsqrt
mov
dec
add
cmp
push
movsl
sub
loope
shll
aam
push
adc
inc
stos
adc
aaa
pop
and
cld
mov
pop
push
insb
ss
add
lods
mov
mov
xorl
xchg
push
mov
test
mov
test
pop
imulb
inc
pop
push
push
xlat
mov
lea
mov
sub
add
sbb
les
imul
gs
push
mov
ficomps
cmpsl
hlt
scas
out
rol
jo
push
stos
adcl
out
ja
dec
lods
mov
or
fisttpll
dec
rcl
gs
not
scas
mov
pop
test
inc
cld
movl
push
push
mov
pop
dec
lcall
cmpsb
ss
mov
xor
insb
inc
xchg
add
lods
call
sub
fadds
mov
outsb
lods
adc
cmp
shll
xor
xchg
jbe
pop
rolb
daa
jg
fdivl
sub
mov
xor
jne
push
mov
out
pop
imul
gs
outsb
dec
jbe
mov
out
outsl
xorb
adcl
aad
jmp
inc
cld
mov
sub
arpl
in
push
iret
rcrl
push
mov
aas
lods
mov
imul
call
lds
gs
fdivr
jg
dec
test
sub
xchg
xor
jnp
testb
dec
mov
xchg
cmp
arpl
push
movsb
leave
jns
pop
lret
and
mov
jb
xor
mov
movsb
and
add
jle
jge
push
inc
mov
xor
cmpsb
xchg
js
cmp
push
cmp
mov
mov
cmc
mov
std
sahf
loope
push
mov
jbe
cmpsl
aam
fldenv
out
lcall
push
mov
test
mov
imul
xchg
popf
inc
xor
and
cmp
ret
dec
adc
jnp
push
jnp
popf
cmc
ret
jecxz
mov
fs
popl
cs
aad
scas
pop
mov
aam
lods
enter
mov
repz
inc
test
sub
rcr
sub
loopne
cmp
fsub
pop
cld
jg
addl
scas
jge
movsb
nop
pop
sbb
sub
or
mov
jmp
inc
mov
jne
insb
mov
call
dec
jmp
mov
popf
aam
mov
rcrb
sbb
jno
mov
imul
aad
pop
mov
push
fdiv
mov
jo
cwtl
cltd
fwait
xchg
cmp
leave
add
push
dec
dec
sub
and
xor
sbb
inc
out
xor
fwait
aad
fisttpll
mov
mov
rolb
hlt
out
or
lret
xchg
outsl
gs
and
loop
pushf
addr16
sbb
jbe
mov
jbe
adc
xchg
dec
out
mov
cmc
jle
sbb
leave
xor
mov
and
lahf
push
dec
adc
add
mov
loop
out
out
stc
bound
push
in
xor
pop
jmp
sub
aaa
xchg
add
cld
cmpsl
xchg
ret
aaa
fwait
jle
outsb
out
arpl
daa
movsb
imul
insb
ficomps
sti
adc
es
lods
pop
bnd
jo
inc
loop
fcomps
hlt
ja
sahf
cmpsb
mov
xchg
jecxz
xchg
call
xchg
add
inc
mov
adc
mov
or
or
in
xor
negl
xchg
test
push
push
hlt
xchg
or
mov
out
adc
xchg
jb
lret
out
ljmpw
das
push
in
mov
xor
adc
out
movsl
lock
rclb
xchg
out
mov
sub
pop
clc
dec
mov
rorb
imul
adc
dec
pop
lahf
push
add
cs
cmc
xlat
nop
ret
ss
jg
mov
or
fs
mov
sbb
sbb
imul
int
pushf
adc
pop
test
sub
and
cmpsl
mov
imul
push
adcl
and
mov
sahf
mov
in
lds
bound
mov
inc
pop
and
adc
test
adc
xor
xor
xor
in
cli
inc
jge
dec
cmp
sub
jmp
mov
pop
outsb
aaa
add
imul
outsb
jecxz
push
adc
shl
rcll
mov
loope
jle
jg
jge
sarl
stc
les
cs
adc
ror
dec
test
scas
push
pusha
mov
fldenv
cmc
arpl
sub
out
movsb
sbb
xchg
lcall
fiaddl
repnz
dec
push
iret
shrl
popa
xor
movsb
fdivs
mov
mov
push
add
fisubs
addl
mov
cmp
ja
mov
addr16
imul
lea
arpl
xchg
and
gs
add
adc
sahf
xchg
sub
sti
daa
sti
inc
lea
jns
repz
gs
loopne
push
fidivrl
repz
stos
shll
mov
sti
addb
movsb
cmp
push
les
add
call
jbe
lods
and
arpl
push
xor
xchg
push
xchg
xchg
mov
add
sbb
sub
scas
add
ljmp
and
adc
out
nop
pop
cld
mov
xchg
mov
out
sbb
jno
xor
xchg
cmpsb
sub
cmp
sti
mov
and
fldl2t
push
in
push
stos
sub
mov
test
xchg
sub
jne
lds
mov
into
or
outsb
mov
jmp
cmpsb
add
cmp
mov
insb
add
mov
cwtl
jge
xchg
fcoms
loop
push
sbb
mov
pop
xchg
push
scas
push
in
mov
add
ljmp
push
jo
jge
lods
cmpsl
sub
mov
sti
jp
cmp
fstpt
cld
add
sub
cli
push
adc
inc
lret
xchg
frstor
lods
add
or
mov
jg
dec
dec
pusha
xchg
or
xchg
les
imul
mov
fwait
or
lea
push
lods
jle
rclb
mov
jnp
mov
pop
rorl
or
cltd
ficompl
xchg
movsb
int3
mov
lea
sbb
in
gs
icebp
sub
in
mov
mov
js
out
xor
ficompl
mov
mov
scas
jae
cmp
sbb
sahf
adc
mov
xor
dec
cld
jns
mov
pop
push
lahf
cmp
loop
sbb
or
mov
scas
mov
shlb
jnp
mov
xchg
into
loope
cmp
cmp
idivl
xchg
andb
push
aam
stos
insl
repnz
sbb
nop
in
pushf
inc
sub
hlt
jbe
orl
and
popa
pop
jg
cli
pop
and
jbe
cmp
ret
sti
and
nop
and
stos
addr16
or
jne
xor
jb
stos
aaa
mov
daa
dec
lock
out
pop
iret
arpl
stc
scas
enter
xchg
mov
lahf
loope
arpl
fsubrl
xlat
add
add
loop
dec
scas
das
xor
mov
insl
testl
out
and
into
jge
aas
push
cwtl
add
lock
mov
xchg
mov
xor
pop
push
imul
test
push
xchg
sahf
shr
lahf
pop
lahf
movsb
dec
add
pop
jle
mov
mov
push
sbb
jne
cli
cmp
cmc
movsl
pop
inc
incl
das
adc
xchg
add
sbb
xchg
nop
scas
icebp
stos
push
mov
pop
sub
jl
cs
stos
add
adc
xchg
jo
fstl
or
mov
faddl
negl
ss
xchg
shll
pop
pop
mov
lock
into
add
mov
push
insl
sbbl
ret
pop
and
js
cmp
repz
pop
and
test
lods
xor
pop
lcall
lret
push
mov
ret
xchg
int3
leave
push
or
mull
sbb
mov
test
movlhps
adc
aam
mov
lcall
jmp
inc
cmpl
push
test
pop
xor
scas
int3
call
jmp
add
pop
push
dec
add
xchg
dec
js
mov
jmp
or
subb
clc
insb
push
in
sbb
lods
push
mov
xlat
je
cmp
mov
and
dec
mov
icebp
jmp
ficoms
mov
inc
insl
inc
aaa
jbe
mov
int
dec
sub
call
sbb
mov
jge
enter
mov
shll
or
jecxz
lret
jne
cmpl
sbb
in
adc
cmp
inc
add
xchg
out
stos
clc
adc
fwait
mov
pop
sbb
lret
lea
mov
in
xchg
and
adc
inc
iret
dec
addl
shrb
daa
faddl
jbe
cmp
sub
cmp
add
popf
dec
xchg
mov
rol
lret
lds
push
mov
rcrb
xchg
dec
stos
fldt
ficoms
xor
int
repz
jmp
push
movzwl
adc
push
push
rcll
loope
cld
insl
dec
pop
push
xor
test
mov
push
inc
aad
jns
cmpb
mov
and
pop
or
push
xor
pop
push
xchg
iret
mov
bound
push
or
xlat
ret
xchg
mov
imul
fsubs
jmp
popa
jecxz
hlt
stc
bound
movsl
das
movsl
push
jl
movsl
inc
sbb
xchg
pop
sbb
lea
sbb
xchg
cmc
lret
imul
arpl
pop
inc
push
out
xor
bound
xchg
inc
add
mov
add
arpl
repnz
jle
push
add
and
sub
cli
out
cmp
ret
js
into
xor
xlat
and
push
imul
je
shrb
lods
clc
rcll
les
pop
lret
inc
loopne
mov
jmp
sub
repnz
pop
pusha
xor
andb
xchg
iret
pop
jnp
dec
add
cld
scas
inc
xchg
test
shlb
and
fisubl
pop
sbb
xor
js
xor
addr16
push
loopne
arpl
sbb
test
out
jbe
int3
shr
mov
mov
jae
mov
mov
sub
scas
gs
mov
ret
mov
dec
sub
sub
xchg
incl
cld
mov
std
sbb
repz
push
pop
cmp
popf
sub
es
int3
push
xor
ds
inc
mov
push
clc
mov
fildll
cmp
lret
insb
and
mov
push
repz
jge
fsubrs
sbb
jno
jl
shl
fs
mov
repz
out
xchg
inc
mov
jne
jecxz
jns
pop
cmp
js
call
dec
iret
cli
fs
adc
aaa
ds
popl
push
js
xchg
xor
and
xlat
inc
out
jns
dec
xchg
push
push
scas
psadbw
inc
add
test
pop
pmaxub
jmp
jmp
and
jo
push
pop
mov
mov
fwait
xchg
mov
lds
jmp
in
mov
movsl
adc
dec
inc
ds
mov
shll
sti
inc
and
test
es
in
mov
push
in
stos
mov
mov
xchg
adc
clc
outsl
js
sti
sahf
cwtl
inc
adc
mov
xlat
xor
mov
rorb
les
add
mov
push
test
sbb
push
push
xor
xchg
mov
ss
mov
in
arpl
pop
dec
inc
lret
jge
leave
aad
int
mov
sub
jae
lea
in
sbb
pop
out
push
xor
adc
test
adc
pop
mov
ljmp
insl
pause
add
jg
test
inc
imul
test
push
lret
sub
enter
pop
cmc
xchg
xchg
xor
xchg
and
xchg
lret
xor
insl
push
int
add
js
stos
and
test
xor
cs
mov
test
mov
pop
aad
shll
dec
xorl
mov
repnz
out
push
arpl
inc
inc
lods
jns
cmp
mov
in
fs
fimull
cwtl
jne
sarl
sbb
add
addl
cmp
daa
adc
lea
or
add
xchg
xlat
mov
lret
jns,pn
inc
xlat
mov
jb
jg
int3
sub
decb
mov
lcall
lahf
cmp
cmp
cmp
repnz
inc
xchg
loopne
pop
cmp
mov
sub
lods
mov
das
sub
sub
mov
push
mov
inc
jne
push
dec
inc
push
popa
xor
icebp
or
mov
or
test
xchg
pushf
jge
sub
cli
sbb
je
push
insl
push
add
rcrb
sbb
icebp
outsl
sub
lea
das
jle
cmc
push
mov
add
mov
xchg
push
jmp
les
loop
ds
push
call
daa
add
cld
movsb
cmc
jl
cld
outsl
dec
arpl
jg
rolb
and
lahf
lcall
inc
daa
push
push
sar
addr16
add
inc
les
xor
mov
roll
xchg
fldt
jo
sub
fildl
sarb
cmp
inc
addr16
mov
jmp
out
mov
in
lods
pusha
out
hlt
mov
pop
dec
push
jb
dec
mov
or
arpl
mov
ficoml
lock
jl
sub
cwtl
dec
and
les
test
lret
leave
dec
mov
in
das
test
lods
leave
push
add
xchg
mov
xor
outsl
jo
pop
mov
cmpsl
mov
inc
sub
push
int3
mov
sahf
mov
dec
inc
out
and
pop
popf
into
sub
push
push
lods
fldenv
daa
arpl
mov
adc
mov
fwait
dec
adc
mov
test
icebp
add
inc
loop
popa
mov
cwtl
sbb
fildll
sbb
leave
sub
movsb
xor
jb
pop
mov
loop
mov
dec
in
int
or
mov
cwtl
push
mov
sub
xchg
xchg
inc
mov
sub
lods
dec
lahf
push
cmpsl
ljmp
js
je
sub
mov
out
dec
testb
fnstsw
add
pop
cltd
add
xchg
lret
cmp
pop
mov
and
mov
sarl
ja
pop
xor
push
das
notb
bound
loop
push
scas
push
adc
enter
cmc
cltd
dec
nop
in
inc
fimull
decl
xor
out
mov
ret
mov
pop
xchg
daa
in
mov
daa
mov
loopne
xchg
pop
xchg
push
sub
jns
push
push
scas
inc
cs
dec
sbbb
loope
pop
xor
push
mov
xchg
loop
leave
movntq
sub
das
int
mov
jb
mov
es
sbb
jg
add
dec
stos
cmp
mov
les
cwtl
fbld
cmp
inc
cwtl
pusha
mov
fstps
ret
lret
pop
inc
into
add
adc
cmc
mov
add
js
rcr
inc
cmp
aam
mov
push
mov
outsb
ljmp
push
scas
inc
jge
mov
mov
pop
pop
sbb
jb
pop
imul
xor
xchg
jbe
movlps
popf
rcrb
mov
pop
dec
push
xchg
into
iret
xchg
lret
or
hlt
lds
mov
rol
xor
in
cli
fmull
sbb
lock
fsubs
mov
lcall
pusha
insl
jo
lods
outsb
jecxz
xor
inc
arpl
mov
push
iret
loopne
cld
sub
sahf
test
inc
fbld
dec
cmp
jp
mov
and
mov
fildl
shrl
fiadds
shlb
mov
cwtl
pop
or
movsb
or
jno
call
add
sti
and
fstpt
enter
xor
or
inc
sub
pop
xor
push
testb
or
adc
xor
orl
xorb
pop
push
cwtl
jnp
jl
inc
inc
jne
and
nop
xor
imul
or
pop
push
mov
or
add
stos
pop
rolb
decl
stos
addl
pop
cmpsb
mov
jo
push
inc
out
sbb
cmpsl
jb
mov
test
cs
mov
mov
jecxz
sbb
lds
adc
sbb
scas
lahf
ljmp
dec
in
dec
dec
xchg
mov
push
pusha
add
mov
inc
mov
in
adc
and
mov
push
mov
in
xlat
push
pop
test
or
bound
test
fs
xor
mov
int
cmp
add
call
frstor
push
sbb
sysret
pop
imul
push
mov
fdivrl
cld
lods
jne
sbb
inc
rorl
ss
movsb
incb
hlt
into
and
jmp
leave
movsb
pop
inc
notb
mov
iret
dec
mov
out
mov
add
inc
mov
rol
dec
dec
mov
dec
mov
fdivrp
sub
and
fmuls
icebp
repz
fnstsw
inc
dec
jecxz
inc
daa
pop
fs
addl
pop
dec
and
test
es
mov
dec
rcrb
sbb
fnstsw
call
int3
inc
xchg
push
xchg
into
jmp
mov
inc
cmp
add
fs
and
lock
pushl
xor
pop
imull
or
xchg
sbb
mov
push
mov
push
repnz
jmp
dec
insb
sub
xchg
cmp
or
mov
dec
push
inc
sbb
subb
cwtl
pusha
test
xchg
shlb
cmp
adc
stos
ds
inc
out
xor
andb
adc
mov
popf
dec
xchg
lods
add
dec
jno
dec
jmp
clc
shl
adc
push
adcl
inc
or
mov
and
xor
in
add
insb
adcl
push
sahf
aas
insb
outsb
push
xchg
xchg
or
test
daa
int3
mov
lahf
dec
aam
adc
cli
clc
mov
lcall
imul
xchg
mov
mov
cmpsl
xchg
or
inc
push
mov
mov
popa
das
pop
adc
sub
xchg
ficoml
subl
jns
cld
cmp
xchg
out
lods
rcrl
mov
dec
ss
mov
xor
push
insb
es
fisubrs
test
and
jno
xchg
repnz
mov
xor
out
scas
ficoms
inc
inc
jnp
pop
pop
outsl
xchg
xchg
mov
cli
sub
lds
inc
xchg
fnstcw
fstpl
pop
cli
xor
sbb
mov
repnz
and
mov
mov
ss
xchg
mov
test
xor
dec
cs
mov
sbbb
test
or
mov
repnz
fmull
sub
cld
rcr
xchg
shl
add
aad
mov
inc
movsl
add
sahf
jmp
and
cltd
outsb
rclb
insl
dec
imul
stos
lods
daa
pop
fs
insl
gs
add
bnd
jg
mov
das
adc
cmp
xchg
das
dec
mov
jnp
lds
inc
xchg
xchg
sahf
jmp
data16
fdivl
push
add
dec
into
loop
jne
dec
loope
insl
sbb
mov
xor
sbb
lret
or
les
add
ja
lcall
fidivrs
arpl
std
out
push
es
inc
ds
jl
cmpsb
cmpsb
fisttpll
in
push
pop
mov
push
mov
cmpsl
dec
jb
loopne
test
lea
jle
sbb
lret
mov
inc
mov
add
inc
jge
mov
int3
pop
jmp
and
mov
idiv
pop
push
mov
mov
aaa
lds
addr16
jnp
cmp
movsl
test
cmp
aaa
ds
mov
adc
xor
adc
rclb
sub
cmc
popa
mov
mov
jns
xchg
pop
mov
ret
in
sub
dec
les
dec
inc
sbb
push
xor
lods
jl
cmp
in
sub
mov
dec
daa
stos
add
jle
clc
fcmovnu
push
test
push
scas
jecxz
movsb
sti
dec
call
shlb
inc
and
out
imul
lahf
shl
push
adc
xchg
mov
test
mov
cmp
cmpsl
dec
cld
jp
add
inc
xchg
sbb
xlat
test
lret
div
pop
in
lret
stos
icebp
cmp
int3
inc
xchg
js
or
dec
movsl
xchg
mov
inc
rcrl
inc
mov
rcr
push
aam
movsl
xchg
es
leave
out
mov
notb
movsb
jno
repz
push
cmp
cltd
mov
adc
add
or
jle
fsubp
sub
dec
and
adc
fidivrs
lret
push
or
ds
cmp
imul
inc
and
pushf
dec
push
lods
pop
aad
mov
pusha
push
fs
jg
pushf
int
repz
dec
popf
inc
mov
negb
cmp
jae
sub
in
push
mov
test
ljmp
mov
les
pop
bound
dec
or
stos
dec
mov
sub
xlat
pop
pop
sbb
push
imul
daa
and
add
out
movsb
rcll
mov
mov
lds
stos
push
pusha
adc
iret
mov
push
ds
pop
and
dec
sarb
sar
ds
add
insl
sbb
lea
leave
cwtl
xchg
outsb
adc
cmpsb
rep
sub
pop
pop
ret
imul
and
lods
adc
rolb
mov
ficoml
jp
jbe
mov
add
inc
cmp
call
sub
icebp
push
ds
std
jecxz
movsl
dec
xor
add
mov
clc
add
dec
add
rclb
fwait
rcll
daa
gs
fcmove
sub
jno
lcall
push
inc
adc
adc
pop
testb
jb
xor
xchg
scas
cwtl
pop
je
clc
jge
push
sub
jae
nop
fwait
test
ficoms
imul
dec
dec
ja
dec
pop
cwtl
xchg
sahf
mov
sti
repz
xor
and
jns
std
and
js
dec
testl
popf
scas
frstor
and
pusha
movsl
ficompl
jecxz
lods
inc
inc
mov
daa
insl
and
sub
cmp
ljmp
xchg
nop
push
pop
pop
daa
cmp
add
push
cs
fmul
cmp
mov
adc
je
imul
and
cmc
enter
lret
mov
mov
pop
and
stos
fisubs
enter
daa
mov
lret
or
xor
mov
lahf
mov
push
jmp
mov
mov
adc
dec
icebp
ljmp
jle
bound
addr16
jb
jnp
popf
adc
scas
xchg
cmp
les
ret
push
hlt
fildl
cmc
out
jecxz
fbld
sub
mov
mov
push
fsubs
push
roll
cmp
sbb
inc
int3
std
sub
adc
jge
jp
imul
push
iret
sub
es
xchg
jno
mov
xor
mov
mov
scas
pop
lods
pop
adc
movsb
mov
xchg
data16
inc
jl
test
rcll
lahf
aaa
jmp
xor
cmp
jle
cmp
mov
jns
outsb
rcl
imul
les
daa
sti
fldcw
or
outsb
stos
mov
mov
and
dec
dec
push
popa
jmp
fdivr
mulb
cmovnp
inc
jg
push
movsl
adc
cs
cltd
push
xchg
aaa
sbb
stc
ud1
mov
addr16
pop
icebp
sub
jecxz
aaa
xchg
cmp
pop
outsl
scas
inc
repz
mov
outsb
bound
inc
cmc
jo
jg
pand
xor
ret
pop
fs
aad
hlt
mov
mov
lock
ret
sbb
inc
pop
ja
sarb
pop
push
xchg
sar
push
dec
loop
inc
inc
add
sbbl
adc
int
add
and
ret
fdiv
fisttpll
out
mov
or
inc
push
jg
push
cwtl
js
and
es
fnstenv
xor
imul
cmp
sbb
lcall
mov
ret
cli
in
dec
push
mov
mov
pop
aad
imul
jg
mov
les
imul
icebp
nop
cmpsl
test
add
stos
jbe
adc
imul
movsl
jno
cmp
xchg
testl
sbb
stc
sbb
and
imul
dec
lret
fnstenv
shl
es
loope
adc
sahf
jae
mov
mov
xchg
sti
lcall
shlb
pop
or
aaa
ljmp
imul
dec
mov
rdpmc
lcall
inc
jne
xorl
bound
hlt
push
mov
gs
cmp
and
pop
lret
mov
popa
popa
fcomip
cltd
repz
cmp
or
xor
mov
sbbb
inc
test
fwait
dec
jmp
dec
sti
fnstcw
mov
bound
jb
xchg
push
cmp
cwtl
bound
aaa
nop
out
enter
add
push
sub
int3
cmpsb
mov
pop
push
adc
stos
clc
movb
pop
insb
rcr
loop
cwtl
iret
sub
pop
in
jo
dec
pop
int3
fadds
out
aas
push
xchg
loop
test
xchg
add
shlb
rorl
imulb
sbb
or
push
cmc
push
jp
push
lret
sti
add
add
in
sbb
jmp
jmp
adc
or
repz
cmp
sub
popf
int
popa
call
adc
lock
adc
out
mov
inc
jbe
insl
xchg
cltd
adc
pop
out
mov
add
jmp
rorl
rcrb
mov
lds
mov
leave
daa
push
jns
mov
xor
or
cwtl
shr
cs
cmpsb
adcb
cltd
xchg
imul
push
cmp
in
lods
lds
mov
add
decl
pop
mov
outsl
dec
mov
pop
xchg
push
hlt
loop
mov
cs
cwtl
imul
les
and
orb
sub
loope
shll
cmpsl
push
push
xchg
shll
sbb
pop
push
popa
adc
lret
shl
push
pop
jge
xchg
jmp
xchg
aam
add
mov
push
pop
mov
xchg
hlt
and
adc
push
cld
mov
adc
cmp
mov
enter
add
dec
sub
pop
jp
or
inc
cwtl
loop,pn
andl
cmpsb
pop
push
cmpsl
loope
leave
jns
push
or
cmp
cmp
mov
or
jge
sub
inc
push
cmc
sub
inc
out
jne
add
jb
enter
jne
inc
les
mov
dec
mov
es
into
dec
cltd
iret
hlt
test
sbb
inc
dec
loop
mov
stos
mov
xchg
fdivl
popf
icebp
xchg
push
lret
and
jge
pop
pop
pop
ficompl
sahf
jmp
add
shrl
xor
subl
push
pop
sub
jbe
loopne
ds
xchg
movb
dec
pop
or
push
push
sub
lea
jo
insl
cli
and
push
pop
and
push
stos
dec
push
or
adc
call
and
ljmp
cmpsb
je
in
push
xchg
jae
sbb
inc
scas
jmp
push
sbb
and
mov
adc
out
in
xor
jb
cmp
pushf
insl
push
movsb
and
fwait
inc
scas
push
sbb
popf
scas
mov
pop
jb
jne
ja
loope
mov
dec
stos
inc
ljmp
iret
xor
sarl
cmp
push
push
adc
scas
subl
pop
enter
lahf
scas
arpl
or
pop
enter
sub
test
movsl
mov
stc
pop
push
out
cwtl
in
dec
cmp
mov
fists
fsubr
daa
pusha
sub
shrl
rcrl
popf
push
or
outsb
fistpl
lret
insb
movsb
mov
dec
jbe
int3
add
jbe
rcrb
adc
hlt
jnp
add
cmp
aam
sub
push
int
mov
push
cmp
sbb
dec
jbe
push
mov
jo
movsb
jae
movzwl
push
push
and
inc
xchg
cmp
popf
cmpb
adc
dec
sbb
shrl
lcall
lcall
mov
stos
jae
or
mov
mov
inc
mov
push
and
push
xchg
pop
cmp
divb
and
or
sub
and
sbb
sub
cmp
inc
lock
andl
or
cmp
dec
or
cld
pusha
lret
loopne
push
out
mov
mov
sarb
js
int
mov
inc
out
dec
xchg
xlat
pop
int3
add
jb
mov
xor
adc
scas
stc
ljmp
fwait
mov
sub
mov
jg
adc
outsl
mov
or
test
popa
roll
adc
scas
dec
daa
movsl
inc
dec
xor
shl
sbb
xorb
xchg
data16
or
ficompl
fnstcw
popf
jmp
sbb
ret
xor
in
mov
scas
shll
mov
and
pop
xchg
fcoml
pop
mov
xchg
inc
insb
jp
clc
cmp
std
sub
cmp
shll
mov
pusha
inc
jp
mov
jmp
ret
icebp
adc
mull
sbb
mov
push
mov
stos
and
mov
fmuls
xor
pushf
mov
mov
scas
or
lods
arpl
cmpsb
bnd
xchg
dec
xchg
lahf
rcl
push
cmc
test
nop
cmpsl
lds
and
push
mov
jnp
push
xor
addr16
insb
pop
pop
aaa
add
dec
divb
gs
xor
mov
loopne
mov
fbld
unpckhps
out
mov
mov
repz
shrb
fld
sbbl
js
push
outsb
out
inc
shl
imul
mov
and
cmp
jo
xchg
xchg
cld
sub
pop
push
add
pop
in
cltd
jb
out
inc
and
in
sbbl
aam
mov
xor
lods
push
dec
repnz
jl
jge
fnstenv
inc
loope
out
fsubrl
filds
push
xor
add
cwtl
mov
mov
ret
out
mov
adc
movsl
xor
pop
push
pop
mov
mov
dec
int3
repnz
sub
cmpb
std
mov
mov
push
stos
adc
xchg
xchg
lods
lods
xchg
add
mov
push
es
lock
cmp
cmpsb
or
scas
cmp
and
push
mov
cmp
data16
push
fstpl
lret
ss
in
ljmp
pusha
or
cmp
ljmpw
jno
in
int3
jns
jno
adc
mov
pop
enter
mov
adc
pop
cld
addr16
iret
and
gs
push
jns
mov
xor
ret
mov
das
push
sub
insl
mov
cltd
push
mov
inc
add
adc
sub
iret
ret
ds
and
negb
into
dec
stos
sti
jbe
into
or
leave
sub
xor
iret
jmp
adc
add
cli
mov
push
mov
add
or
dec
sub
test
jb
cld
lahf
cmc
mov
test
stos
in
mov
stos
pop
mov
fidivs
jl
ret
aad
sbb
stos
out
je
inc
dec
adc
fnsave
sar
lret
testb
call
dec
arpl
mov
in
mov
cmp
pop
xor
movsb
movsl
outsb
dec
and
pop
sub
mov
int
and
push
iret
in
andb
int3
adc
mov
fiadds
ss
in
mov
into
data16
loopne
xlat
xchg
mov
arpl
in
fld1
iret
jb
ss
and
cs
cs
push
pop
push
push
movl
inc
jmp
shr
or
fmull
pushf
fistl
xor
and
mov
cmpb
add
mov
push
sub
decl
shlb
cmp
movsl
or
xor
sub
mov
adc
pop
dec
mov
imul
pop
push
pop
sbb
mov
jg
mov
xchg
push
cld
sub
movsb
add
fcom
mov
pop
sbb
jge
decb
imul
movsb
cmp
movsb
push
lds
and
dec
in
jecxz
fdivr
stos
aas
mov
jnp
jp
jp
aas
out
pop
xor
rcl
cmp
sub
mov
pop
repnz
sub
xchg
adc
stos
jb
xor
test
push
das
mov
or
aas
sub
fwait
push
lcall
mov
sbb
ficomps
fwait
shlb
lods
insb
xorl
sbb
jmp
loop
rorl
cmpsb
add
jnp
mov
sahf
mov
jo
jl
inc
sub
cmpl
mov
sub
cld
cmc
adc
mov
mov
push
std
fwait
push
mov
int
mov
insl
xchg
test
cs
lcall
xchg
ret
cwtl
shll
sub
sarb
mov
pop
insb
iret
and
xchg
lea
inc
push
fadd
or
mov
dec
movsb
mov
call
scas
push
call
scas
xchg
add
aad
out
shr
mov
sub
cltd
mov
dec
int
mov
adc
test
pop
and
cmp
inc
pop
gs
xchg
inc
and
outsb
cmp
pop
hlt
stos
stc
stc
mov
dec
pusha
pop
cmp
mov
push
ds
insl
orl
std
fdiv
adc
mov
std
lock
pop
lock
sub
add
fldenv
sub
scas
xor
lock
hlt
mov
arpl
cmp
lods
mov
repnz
mov
xchg
out
scas
imul
je
addr16
lods
out
repz
sarl
inc
or
push
sbb
test
jge
xor
and
jnp
or
push
lds
or
cmpsl
mov
outsl
adc
add
clc
fsubs
ja
fsubr
mov
daa
mov
xor
iret
or
adc
jl
pop
jle
add
jmp
stos
negb
pop
insl
mov
cmp
in
test
dec
xlat
and
pop
add
inc
sub
test
popf
pop
sub
outsl
mov
mov
stos
shrl
sbb
dec
xor
in
outsl
sbb
jl
cmpl
or
xor
mov
mov
adc
push
je
mov
ret
or
rcrb
sub
imul
jle
popf
jg
sbb
or
lds
out
sbb
sbb
vmread
popa
fadds
cmp
dec
mov
or
mov
add
fiaddl
outsl
loop
xchg
ljmp
xchg
pushf
pop
lods
inc
xchg
in
fwait
mov
dec
and
mov
lahf
xchg
lahf
mov
cmp
test
stc
shrb
aaa
repz
push
pusha
dec
sbb
fsubp
incb
pop
cmp
and
push
jae
mov
lahf
pop
test
mov
je
loopne
push
insb
insl
and
icebp
popf
mov
pop
je
jns
cwtl
and
movsl
gs
and
pop
out
mov
push
shll
fisubl
jbe
std
cs
sub
enter
shrb
lret
xor
into
stos
inc
cltd
mov
mov
call
popf
mov
xchg
ss
sbb
repnz
lds
mov
jo
call
test
pop
ljmp
pminub
mov
jmp
dec
pop
outsb
out
mov
jle
add
loop
frstor
imulb
outsb
adc
int3
cmp
mov
cld
or
xor
ja
frstor
and
orl
push
sti
jns
jno
movsl
mov
jp
push
into
out
push
mov
icebp
mov
notl
inc
test
sbb
xor
and
scas
bound
lock
in
scas
jne
cwtl
loope
sub
adc
push
incl
cmp
decl
test
mov
jmp
in
mov
test
mov
or
mov
test
xorb
pop
jecxz
xorl
mov
into
dec
mov
dec
push
dec
enter
into
xchg
fidivl
repnz
lcall
push
arpl
loope
aaa
jns
sbb
sbb
in
inc
loopne
mov
pushf
addr16
mov
and
rol
or
sub
xchg
xor
adc
or
cwtl
outsl
sub
xor
rclb
sar
imul
xchg
push
push
icebp
inc
out
push
pop
imul
sub
lea
std
dec
and
insb
mov
dec
push
push
hlt
mov
jmp
sbb
ja
test
push
xor
pushf
out
pop
stos
popa
mov
mov
xchg
cmp
mov
push
pop
add
fcmovne
fwait
mov
int3
adc
adc
fs
sbb
push
fsubp
jae
xor
fsubrs
adc
movsb
flds
cmp
lret
add
pop
leave
ret
mov
outsl
adc
stc
outsl
push
movb
notl
ficomps
divb
inc
sbb
xlat
shlb
sbb
pushf
jne
out
nop
adc
xorl
adc
dec
and
add
jp
hlt
mov
fwait
andl
addr16
pop
inc
jne
addb
push
movsb
test
cmpsl
mov
mov
repz
inc
xchg
sub
dec
aas
jb
stos
xor
aad
mov
fdivrs
stc
out
lods
repnz
or
lea
pop
mov
pop
testb
xor
scas
dec
fbstp
xor
push
test
aas
repz
jo
mov
int3
pop
push
imul
xchg
cld
push
ljmp
sahf
ja
push
repz
mov
mov
mov
inc
notb
fsub
clc
mov
imul
dec
les
enter
adc
test
scas
outsb
ja
xor
lods
mov
jne
sub
jge
mov
lods
cmp
xor
cwtl
les
push
dec
pop
pop
ja
mov
jae
dec
mov
lea
cld
cltd
sbb
add
addl
fistl
jg
cltd
lcall
out
mov
xchg
ss
aaa
arpl
inc
imul
neg
loope
out
xor
jbe
push
xorl
aad
push
imul
or
loop
or
pop
aaa
mov
arpl
fistpll
mov
popf
ror
loopne
in
cmp
dec
jnp
push
mov
dec
orl
pop
scas
and
inc
or
push
jecxz
jno
mov
adc
push
fwait
xor
mov
mov
out
push
daa
push
mov
pushf
mov
sub
rep
mov
sti
int
lods
or
test
scas
outsl
cmc
stos
aad
cmpsl
aaa
arpl
add
jecxz
or
xlat
repz
fxch
mov
movsl
or
mov
sub
mov
inc
insb
xor
pop
ds
adc
call
cld
add
inc
dec
out
add
and
data16
pop
add
mov
fidivrl
xchg
in
std
cmpsb
dec
fucomp
insb
mov
int
fs
sbb
and
outsl
jg
sbb
and
xchg
repnz
sbb
push
inc
popf
js
mov
push
dec
repz
add
jg
push
lods
gs
cmp
mov
fdivrs
mov
je
and
ljmp
inc
popf
ret
lods
fisttpl
jae
mov
fdivrp
leave
cmpl
mov
and
jl
push
mov
adc
push
mov
fmul
and
sub
pop
outsb
repz
xor
dec
sub
ss
push
cmpsb
inc
popl
lock
jo
adc
inc
sub
mov
inc
popf
pop
lds
lds
iret
sti
outsl
mov
push
cmpsb
mov
or
ret
xchg
gs
gs
xor
adc
sbb
jns
push
or
pop
cmp
or
xchg
ja
fwait
or
dec
nop
or
lret
sbb
xchg
loop
mov
push
pop
call
addr16
pusha
sti
dec
sub
jg
inc
dec
jo
inc
setns
and
addl
addr16
jecxz
add
or
mov
mov
mov
jne
jge
call
push
dec
dec
test
push
pop
sbb
cmp
and
pop
js
or
cmp
call
jbe
jns
pop
and
add
mov
mov
enter
add
js
sub
leave
xor
divb
mov
data16
push
popf
aam
fs
lret
inc
cmp
lods
add
js
movsb
mov
andl
mov
mov
in
ss
cltd
cmpsb
andl
cmc
adc
and
stc
pop
xor
in
into
push
aaa
jmp
aad
jp
into
in
mov
dec
mov
mov
cmp
imul
mov
jb
popa
inc
test
and
jbe
ss
cmpsb
ljmp
jae
sub
sbb
push
adc
inc
lds
aaa
pop
adc
ss
jge
aad
and
mov
adc
mov
cli
or
sub
jb
jo
xchg
mov
daa
mov
add
stos
jne
mov
cmp
or
push
nop
add
mov
xchg
gs
fisubrs
inc
fstps
cld
sbb
test
fsin
cmp
mov
fldcw
pusha
push
lret
jns
sub
popa
mov
test
adc
push
dec
push
lods
pusha
ficomps
mov
xchg
cmp
mov
je
dec
fisubrl
and
add
stc
adc
popa
out
cmp
pop
jne
sub
inc
inc
dec
jmp
sarb
movsl
insl
jecxz
idivl
mov
mov
jecxz
sub
fldl
and
xchg
out
cmpsb
outsb
pusha
jo
xor
inc
lods
aas
push
pop
orl
xchg
ret
ret
sbb
pusha
mov
and
sarb
stos
xor
or
mov
ljmp
and
push
xor
out
test
and
add
dec
xchg
mov
fwait
pop
jle
jmp
imul
and
mov
mov
andb
loopne
pop
out
push
je
xchg
stos
dec
sub
daa
lret
ds
out
pop
adc
subb
inc
inc
pop
inc
in
push
iret
test
pop
push
out
cmp
mov
xor
repz
adc
or
mov
cmp
mov
pop
mov
lret
in
jle
pop
jl
inc
fwait
dec
sti
push
inc
or
or
mov
cmp
sbb
imul
mov
inc
add
rcrl
dec
mov
mov
xchg
aam
pop
paddq
mov
push
add
pop
test
outsb
outsb
jb
aas
cmc
stos
ljmp
aad
pop
sbb
stos
ss
push
jge
popf
fiadds
jmp
clc
imul
out
cmp
inc
jno
and
add
inc
lret
scas
call
xchg
in
push
xlat
xchg
cmp
xchg
or
jnp
in
clc
shll
testl
fsubs
push
js
pop
leave
mov
mov
jne
mov
jnp
mov
inc
mov
dec
je
lahf
loopne
jo
ficomps
fwait
mov
adc
jbe
mov
xchg
pop
or
stc
movl
xchg
mov
fwait
stos
push
in
adc
inc
popf
ljmp
ja
imul
sub
jno
scas
or
pop
jecxz
add
aad
mov
push
pop
xchg
inc
adcl
outsl
mov
hlt
aaa
mov
js
and
test
and
imul
fwait
in
pop
ret
in
cmpsl
add
mov
mov
mov
jno
movsb
or
fadds
ljmp
push
adc
mov
mov
scas
data16
mov
cwtl
insl
mov
outsl
push
arpl
mov
sbb
int
xlat
lahf
cmp
pop
loop
fldt
test
sarb
push
sub
pop
sub
rcl
ret
ret
out
mov
push
xchg
js
cmpsb
push
adc
in
cmpsb
dec
cli
sbb
and
lods
aas
inc
jmp
movsl
out
and
push
and
int
mov
outsb
lods
or
ret
stos
std
bound
pop
cmp
lods
xor
sub
inc
mov
xor
cmp
jl
xchg
je
clc
jno
lahf
inc
nop
or
mov
out
cmc
out
mov
cmp
inc
push
js
xchg
in
jnp
call
mov
cmovg
and
mov
xchg
push
cli
scas
out
lods
cmp
jge
std
push
adc
pop
pushf
xchg
lods
dec
out
mov
or
lcall
or
inc
adc
ret
and
adc
bound
test
add
push
push
pusha
out
mov
nop
or
sbb
mov
and
lret
push
push
shl
fnstsw
or
cmp
pop
test
pop
shll
inc
add
stc
xchg
shll
mov
pop
add
hlt
ljmp
xor
xor
jl
mov
cmp
cli
ja
in
xor
iret
sub
fimull
jecxz
inc
enter
add
sbb
push
notl
jge
jae
lret
sbb
sbbl
sub
xchg
sub
add
loop
sub
and
push
aaa
cmpsl
adc
in
fildl
inc
sub
dec
js
negb
lds
xor
lock
sub
pop
or
cmp
data16
adc
test
rorb
or
insl
sub
add
add
fwait
jne
nop
ds
dec
jb
jle
push
jnp
subl
cltd
das
scas
sahf
stc
test
int
inc
enter
mov
out
leave
pop
sbb
sub
sbb
jmp
add
in
out
cmp
jbe
xchg
pop
gs
mov
fdivl
lcall
cli
mov
lods
shlb
mov
es
xchg
sbb
stc
inc
stos
testb
adc
mov
aaa
cmp
cwtl
outsb
sub
or
jg
fisubl
testb
std
loope
lods
pop
push
lahf
dec
or
stos
stos
dec
je
cmpsl
sub
iret
pop
ret
into
test
push
or
adc
push
repz
fildl
pop
xchg
pop
jbe
jo
ret
jno
mov
dec
jb
inc
xor
xchg
add
or
sbb
pop
add
inc
in
lea
lods
iret
das
enter
xlat
lcall
dec
stos
ss
dec
and
jne
stos
int3
push
pop
push
xchg
jo
es
jns
mov
mov
inc
fdiv
pop
adc
push
insb
hlt
adc
outsl
push
lret
adc
jecxz
and
int3
push
jg
xchg
ret
ss
pop
lods
mov
add
mov
jmp
leave
push
sbb
add
ds
loopne
cmc
cmp
mov
lock
ja
pop
mov
ja
leave
fiaddl
test
cs
ja
add
mov
pop
cmp
inc
adc
push
js
inc
out
adc
push
adc
and
pop
jge
test
pop
mov
adc
dec
mov
jle
adc
sub
add
sahf
nop
mov
bswap
pop
cld
ret
sbb
fstpt
cs
mov
jle
lret
mul
movb
fimuls
daa
shll
mov
insb
imul
or
lea
ja
mov
pop
cmpsb
hlt
or
mov
xchg
outsb
mov
pop
or
mov
loop
call
add
mov
rol
mov
pusha
sub
iret
mov
mov
and
xchg
ret
mov
test
xchg
inc
fucomp
jae
jg
sbb
jae
xchg
cld
xchg
xchg
mov
popa
xchg
xchg
mov
sub
pop
push
jne
jmp
fdivr
xchg
sub
xchg
dec
ljmp
xchg
mov
pop
lret
jmp
pop
cmp
mov
pop
idiv
test
in
stos
and
sti
push
lea
pop
pop
mov
test
gs
or
adc
fcmovnbe
or
repz
fstpl
mov
jnp
out
push
shl
stos
stc
xor
std
mov
mov
clc
popf
lret
xchg
lret
iret
inc
sbb
sbb
ror
out
hlt
bound
inc
dec
add
and
xchg
push
mov
push
cmp
push
fstl
add
pop
or
pop
lds
ret
push
pushf
sub
insl
adc
add
add
push
add
dec
and
movsb
lcall
push
decb
icebp
sub
add
push
cmp
mov
xchg
and
stos
loopne
addr16
mov
inc
in
jl
jb
push
xor
and
das
xchg
pop
insl
pop
mov
cmpsl
sub
xchg
fwait
and
jbe
inc
pop
insl
push
mov
lret
popf
cmp
dec
push
test
add
push
mov
cs
adc
cmp
call
sahf
jg
dec
dec
pop
xlat
mov
sub
rcrb
jl
push
in
mov
sub
pop
add
in
pop
push
mov
sbb
fnsave
mov
hlt
shll
mov
ret
jg
movsl
std
adc
out
sbb
push
fsubr
fwait
into
jmp
in
pop
lahf
xor
xor
pushf
push
mov
stc
mov
mov
cld
call
cltd
sub
repnz
stos
ljmp
popf
adc
inc
sub
hlt
xchg
xchg
adc
nop
adc
mov
add
shr
or
xchg
pushl
dec
popa
jp
pop
lock
jmp
je
mov
xchg
popaw
push
mov
in
adc
cmp
or
push
fbld
in
or
mul
fcoms
out
dec
aas
cmpsl
pop
daa
cmc
push
mov
sub
xchg
repnz
pop
xor
into
bound
push
mov
aas
leave
inc
imul
icebp
push
dec
test
ret
push
cmp
lods
xchg
into
adc
sub
mov
lods
mov
stos
hlt
cmp
pusha
jg
push
div
mov
shl
and
psrlq
and
mov
pop
push
cmp
in
add
push
test
pop
cmpsb
pop
lea
mov
or
pop
mov
push
push
xchg
fdivr
or
mov
jge
cltd
cmc
aam
xor
loopne
jg
sbb
cmpsb
jmp
cmp
loop
cmp
call
clc
cld
arpl
scas
iret
orb
sarl
xchg
xchg
roll
dec
ror
repz
adc
cmp
test
pop
dec
hlt
aad
pop
aaa
add
push
xchg
jl
cld
out
outsb
jnp
addl
stc
and
fildl
cmp
cmp
jle
dec
subb
sub
sub
jecxz
inc
inc
enter
mov
dec
push
cmp
icebp
xor
adc
cmpsl
popa
bound
lret
pop
sub
arpl
jb
mov
lds
orl
pop
pop
ret
shll
cmp
mov
jp
outsl
mov
imul
or
in
incb
addl
out
add
pop
pop
sub
pop
mov
je
jmp
hlt
or
pop
sub
les
or
aam
data16
imul
lods
cld
int
mov
pop
out
dec
lcall
imull
and
jmp
insl
pop
gs
or
iret
lahf
scas
sbb
test
andb
bound
jmp
mov
sbb
mov
jo
subb
sub
and
imull
sub
xchg
jmp
and
lea
inc
hlt
sbb
jg
jg
adc
cmp
movsb
pop
or
mov
rcrb
jg
mov
mov
aaa
jmp
ljmp
xor
lock
cmp
jno
stc
inc
mov
push
and
in
lds
bound
pop
jae
add
sbb
xchg
loopne
mov
adc
addl
cld
xor
push
mov
clc
rcrb
mov
pop
push
andb
cltd
test
pop
pop
cmp
dec
add
scas
mov
mov
push
lds
mov
je
fimull
or
cmp
cmp
inc
cli
pop
lea
mov
and
stos
cltd
mov
ljmp
sbb
imul
xchg
push
or
sbb
in
lods
fnsave
sub
icebp
inc
mov
enter
mov
or
shll
aad
jno
dec
jbe
jbe
ret
jl
jbe
pop
xor
fbld
sti
das
leave
movsl
jne
lahf
in
call
sub
andl
scas
xlat
fcompl
mov
or
dec
adc
jbe
and
push
sub
push
lods
scas
aas
push
jb
mov
popf
push
ja
aaa
stc
pop
mov
jge
loopne
andl
mov
cmp
enter
ja
jb
xchg
mov
jnp
push
out
pop
mov
and
sbbb
cmpxchg8b
ja
shlb
cli
cli
jnp
and
sbb
inc
leave
jle
aaa
jne
aas
aad
popa
adcl
lods
mov
stos
cmp
fs
ss
and
pop
aam
xchg
dec
loopne
std
sbb
add
xor
push
or
pop
cmc
insl
push
out
cmp
mov
and
std
aam
loope
movsl
push
cmp
and
addr16
add
cltd
lret
ret
adc
xchg
or
push
inc
or
mov
jg
loope
shr
cmp
lret
sub
int
cmp
aam
lea
pop
into
cmp
imul
sbb
mov
jo
push
orb
jp
test
sbb
mov
frstor
loopne
mov
das
adc
test
addl
jnp
sahf
lods
inc
and
popf
sahf
in
jg
and
insb
mov
inc
rorl
mov
rcll
aam
lret
lret
enter
mov
or
adc
ljmp
icebp
mov
call
out
push
inc
hlt
fnstsw
mov
arpl
add
ds
out
pop
and
mov
test
inc
push
fists
lret
loop
push
das
xchg
pop
test
sub
mov
mov
mov
fs
loop
mov
push
xor
adc
push
sbb
jbe
jmp
xchg
pop
rorl
adc
dec
dec
mov
jae
notl
in
out
sub
mov
fidivs
hlt
jge
add
or
dec
imul
sub
hlt
cmpsl
icebp
cltd
xchg
jl
pop
push
fistpll
daa
or
and
adc
je
mov
stos
sub
orl
push
pushf
outsb
add
in
add
xchg
adc
cmp
imul
sarl
xchg
clc
lea
add
dec
sbb
outsb
ss
push
and
mov
enter
mov
add
lods
mov
dec
xchg
out
movsb
inc
jmp
mov
ret
test
add
mov
push
inc
pop
popf
fcompl
out
xchg
ret
mov
test
mov
push
mov
orb
sbb
xchg
cltd
xor
lcall
jge
out
pop
test
cmpsb
test
mov
icebp
jae
into
loope
scas
mov
mov
outsl
xchg
ds
cs
outsb
adc
sub
les
test
test
in
xchg
repz
arpl
pop
pushf
mov
call
adcl
pop
xchg
in
xchg
popa
js
pop
jecxz
fsubl
inc
cwtl
ljmp
loopne,pt
jo
cmp
lods
cli
adc
fadds
sub
pop
scas
xor
push
ret
push
or
cmp
rorb
push
sub
fsts
xchg
shlb
fstpt
lahf
inc
push
cld
daa
or
pop
or
xchg
fstpl
sub
outsl
add
adc
lea
in
aas
mov
outsl
xor
cwtl
adc
jae
mov
clc
inc
into
scas
fiadds
push
push
xchg
mov
sub
xchg
push
pop
dec
pusha
jo
inc
inc
out
icebp
cs
or
sti
sbb
xchg
aas
stos
or
cwtl
fbld
jb
jmp
or
cli
stos
aas
xlat
test
xchg
mov
mov
jmp
leave
adc
fsubs
std
or
dec
push
lods
daa
adc
push
mov
scas
mov
shrb
mov
and
sub
adc
adc
xchg
and
inc
mov
clc
dec
push
and
cmpb
in
cmp
push
fistl
dec
xchg
and
bound
test
add
jne
lds
enter
push
ljmp
notb
and
imul
dec
add
repnz
in
xchg
push
inc
jne
mov
in
lods
lock
dec
repz
cwtl
dec
mov
daa
pop
mov
pop
lds
mov
and
popl
lods
mov
cmpsb
or
lret
xchg
fisttpll
outsl
or
xor
aad
lods
dec
inc
push
xchg
scas
jge
mov
loope
jmp
icebp
call
mov
les
dec
cli
jmp
add
iret
test
jle
inc
jae
sub
mov
dec
enter
mov
fmulp
sbb
xor
dec
or
pop
cmp
and
jns
addr16
mov
cmp
imul
rcll
test
adc
in
fnsave
es
insb
jo
movl
add
test
les
pop
repnz
mov
xor
xchg
movsl
pop
mov
ja
in
mov
xlat
push
xchg
es
negb
push
rorl
faddl
mov
push
ljmp
jp
test
fisubrl
in
imul
jl
aam
mov
decb
fsts
push
or
jne
shll
call
imul
movsl
cli
add
xor
out
jo
out
add
shrl
rclb
sti
xchg
adc
scas
loopne
and
mov
push
mov
mov
xlat
push
and
sbb
adc
stc
aad
sbb
sub
hlt
fwait
cmp
xlat
movsb
or
dec
push
dec
sahf
pop
loopne
test
push
js
jbe
mov
sub
lret
dec
movsb
lret
es
jl
aaa
testb
jae
mov
loop
pop
jecxz
ret
jne
imul
cmc
mov
cmp
or
int3
xchg
dec
cmpsl
sbb
or
mov
or
xchg
mov
pop
in
orl
stos
cltd
int3
jnp
inc
and
std
in
jns
push
shlb
pop
jae
shll
add
imul
sbb
data16
mov
push
cs
pop
cs
test
std
insb
and
push
fistps
les
xor
push
push
inc
dec
add
std
inc
repz
xchg
push
jno
push
rorb
add
aas
sbb
mov
idivl
mov
sahf
in
outsb
loope
nop
xor
xor
add
lea
mov
pop
xchg
fidivl
stc
pop
dec
xor
ss
xor
adc
cmp
dec
push
aaa
mov
int3
call
push
pop
mov
mov
mov
adc
rcll
pop
popf
jge
push
fdivrl
jae
fimuls
and
add
outsb
divl
int
icebp
enter
icebp
mov
jbe
mov
sub
xchg
scas
xchg
cmp
std
nop
cmc
mov
mov
sbb
sbb
lods
add
pop
and
adc
imul
or
cld
jg
aad
ja
xchg
add
fwait
mov
test
push
repz
pop
adc
into
add
out
push
mov
or
clc
push
jo
mov
in
pop
and
jecxz
push
fwait
cwtl
pop
push
jne
or
cmp
mov
insl
mov
push
push
ljmp
xchg
jns
lock
add
in
loopne
call
and
pop
scas
scas
enter
mov
push
xchg
mov
dec
aad
dec
hlt
pop
lcall
outsb
cmp
mov
loop
xlat
push
jge
call
xlat
or
out
add
cmpsl
daa
jp
push
dec
movsb
mov
jecxz
call
add
mov
lods
and
xchg
pop
cmp
xor
mov
mov
fsub
out
cld
or
lock
pop
sbbb
sbb
ret
fstpl
xor
arpl
pop
in
sub
mov
in
adc
daa
popa
sub
sub
out
dec
adc
inc
mov
dec
cltd
and
pushf
adc
arpl
xchg
inc
ss
inc
iret
scas
cmovae
js
dec
push
cmp
jmp
enter
cmp
test
idiv
cli
outsb
or
adc
das
sbb
jbe
test
mov
in
jo
pop
xor
scas
or
dec
repnz
mov
sub
push
xor
jb
data16
sarl
mov
sti
dec
mov
sti
jmp
sub
popa
icebp
push
aaa
push
jl
and
dec
imul
repnz
xor
inc
sbb
pop
stc
test
out
cmc
cmp
ret
xchg
push
call
and
rolb
pop
movsb
in
flds
jmp
fmul
add
jno
les
gs
sub
adc
mov
sbb
ljmp
insb
aad
push
pushw
test
hlt
js
cmc
pop
xor
jb
lret
sbb
mov
call
or
push
mov
jno
inc
cmpsb
icebp
std
ret
pop
bound
adc
sub
cmp
pop
sub
xchg
inc
xchg
sbb
popa
inc
push
repnz
jg
loop
out
dec
cwtl
repnz
nop
fdivl
stc
mov
jnp
mov
lock
clc
jno
pop
pop
cmp
inc
es
in
mov
aad
js
das
xorl
gs
mov
inc
adc
sbb
int3
arpl
adc
call
mov
xchg
xchg
cmpsl
shrl
cld
mov
mov
push
cmp
aaa
imul
leave
add
mov
mov
mov
mov
jb
mov
enter
jns
ret
add
imulb
mov
jp
stos
sub
jge
fs
xchg
sbb
push
in
cmp
jno
sbb
and
dec
adc
jne
pop
int
mov
xor
push
push
ss
push
add
out
addl
push
js
test
das
lahf
adc
cwtl
stos
ljmp
xor
idiv
push
scas
mov
mov
in
xchg
inc
add
xchg
jno
xchg
jnp
sub
mov
cmpsb
test
lea
dec
or
pop
out
movsb
imul
xor
dec
lods
pop
jb
inc
out
jecxz
test
frstor
insb
in
dec
xor
adc
and
sti
test
jae
or
adc
testb
mov
push
mov
adc
mov
xchg
pop
dec
stc
cmp
loop
sahf
dec
sbb
pop
jae
add
sub
testl
inc
ret
loop
mov
push
pop
xorl
xchg
sub
sub
repnz
jp
sub
sbb
hlt
imul
ret
pop
mov
imul
xor
jge
push
js
cmp
or
adc
mov
lcallw
ficompl
scas
sti
scas
inc
jno
pop
push
mov
notb
in
mov
fstpt
addl
sbb
popa
das
mov
xor
mov
shrb
cmc
jp
and
je
std
ljmp
dec
jle
jmp
outsl
popf
cltd
xchg
sahf
xor
bound
lahf
idivb
xchg
ja
jle
and
lcall
test
andb
leave
cwtl
mov
jp
xor
xor
out
dec
jns
out
out
cmp
push
mov
mov
mov
outsb
iret
mov
push
push
dec
jno
jns
ds
add
nop
adc
fldl
aad
ret
mov
notb
cmp
shrl
mov
lock
push
aas
js
ja
mov
cmp
mov
mov
icebp
inc
sbb
scas
jmp
stos
jnp
add
sar
inc
repz
shl
and
mov
xor
jbe
mov
cs
lock
daa
mov
push
sub
cli
mov
bound
mov
inc
adc
push
sti
mov
dec
fidivrs
push
repz
js
sahf
inc
jmp
popf
inc
push
clc
aad
stc
and
fnstsw
in
daa
xchg
aas
mov
jnp
jns
in
xor
bound
inc
add
or
pop
dec
mov
jns
shl
push
jmp
mov
mov
cmc
fdivrs
jo
lods
dec
fsubrp
jno
sarl
pop
xchg
cmp
cmp
outsl
dec
adc
jp
dec
pushf
push
imul
mov
mov
sti
dec
fsubrs
gs
inc
mov
or
mov
sub
xchg
addr16
xchg
cmp
fidivl
repz
je
rorb
sub
inc
mov
mov
or
push
cltd
cmp
mov
std
cmp
push
dec
mov
adc
add
or
sub
xorb
jae
push
aas
xchg
jecxz
aas
xchg
out
cmc
loopne
int3
or
push
inc
mov
cmc
arpl
add
push
sbb
test
fwait
adc
ja
cmpsl
sbb
cmp
cs
lea
cli
pop
inc
mov
cmp
dec
std
iret
orb
insb
inc
xchg
mov
inc
or
enter
sbb
data16
repnz
decl
ds
mov
sub
call
mov
xlat
jle
out
add
cmp
mov
insb
ljmp
mov
jl
sahf
shrl
loope
and
and
inc
jnp
adc
aam
lret
lods
mov
andl
fwait
sub
jb
cwtl
in
push
cmpsl
out
lahf
sub
leave
and
push
or
inc
sbb
cli
lret
jg
mov
int3
sub
pushf
cld
and
pop
mov
arpl
pop
pop
mov
sub
xchg
movsl
dec
push
add
es
pop
insb
stos
lret
sbb
leave
ret
pop
dec
mov
jns
sti
in
or
decb
ljmp
dec
nop
push
mov
xchg
pushf
cmovns
inc
cmp
sub
mov
sbb
pop
fisubs
sbb
pop
jp
test
jp
sti
frstor
setp
cwtl
sbb
mov
in
shl
and
data16
mov
inc
add
push
arpl
scas
lds
loop
inc
out
cmp
out
mov
xorl
inc
fcomi
out
push
cli
leave
flds
add
cmp
jmp
test
arpl
int
hlt
ret
mov
mov
cwtl
shl
lcall
mov
mov
xchg
aaa
jns
jg
loopne
repnz
js
mov
repz
xchg
sti
mov
xchg
pop
data16
and
inc
mov
push
xlat
adc
adc
and
lods
lahf
iret
sahf
jo
bound
inc
cmpsl
in
aas
in
xor
je
and
repz
movsb
dec
rolb
jecxz
jo
ljmp
mov
rcrl
xlat
sub
sbb
push
dec
add
into
fdivs
jg
es
dec
dec
xchg
rcr
push
sub
add
xchg
lcall
popf
xor
insl
notl
fs
daa
sub
jo
ss
test
lret
data16
cmp
xor
out
sbb
cmp
xrelease
in
dec
xor
shl
push
lcall
mov
lahf
pusha
adc
ja
mov
loopne
mov
inc
jl
or
out
xlat
cmp
jne
and
in
xchg
jecxz
mov
rcr
lods
cmpsl
addl
sarl
ffree
pop
adcb
sub
push
pushf
rclb
scas
pop
pop
xor
aam
xchg
loop
pop
lcall
push
sub
and
arpl
ja
mov
mov
mov
push
xor
dec
inc
add
xchg
stc
in
jnp
rolb
and
mov
pop
inc
popa
out
push
or
and
jbe
in
fcmovu
insl
cmp
cmpl
or
mov
push
adcb
test
add
not
jp
inc
repz
push
in
and
mov
jl
xor
add
pop
mov
jnp
xlat
jbe
shll
xchg
aaa
loope
inc
sti
test
sub
pop
mov
popf
mov
fimull
mov
dec
mull
xchg
fmuls
bound
sahf
test
pop
stc
sbb
mov
enter
movsw
pushf
push
jp
inc
lods
xchg
test
add
imul
push
fdiv
loope
test
mov
loope
mov
push
inc
dec
pusha
ret
xor
or
enter
fcmovnbe
adc
jl
call
adc
cmp
and
daa
xchg
loope
aad
pop
and
cmp
lods
jmp
or
mov
clc
lock
aaa
sbb
loope
imul
popf
sub
and
rorb
and
shlb
rcrb
jnp
nop
rorl
loopne
fsubrl
push
popf
push
aaa
xchg
psubsw
ror
out
xchg
out
jne
cmpl
das
and
data16
jne
je
mov
mov
jmp
es
pusha
in
cmp
cmpsl
sub
pop
pusha
fmull
sbb
mov
or
les
jnp
cmp
jl
andb
test
loop
test
loop
xchg
mov
clc
adc
xlat
fidivrl
pop
jmp
jb
fwait
dec
and
dec
call
lahf
outsl
inc
cmp
cmpsl
or
mov
mov
push
inc
push
dec
mov
loop
sub
cmp
lds
pop
imul
es
mov
sub
cli
pop
data16
aas
daa
clc
arpl
sub
js
lret
xor
sub
inc
add
imul
out
lahf
popf
inc
inc
add
mov
xchg
fidivl
inc
fdivl
inc
in
xchg
jle
clc
mov
imul
sbb
push
add
dec
pop
mov
xchg
aas
mov
popa
mov
jmp
adc
mov
cs
pop
sub
sub
repnz
lret
fcomi
mov
mov
fsubr
scas
push
add
push
pop
cmp
add
outsl
dec
sub
clc
inc
and
push
in
jne,pn
repnz
cmpsb
aaa
cmp
xorl
jne
in
ret
rcrl
cmpsl
jge
mov
sbb
aam
inc
lret
out
insl
inc
ret
dec
or
mov
push
lahf
in
jno
cmp
fs
ja
lods
pusha
repnz
xlat
iret
xchg
mov
popf
ljmp
cltd
repz
in
ds
icebp
lock
mov
xchg
movsl
xchg
mov
xor
xchg
lcall
inc
cmp
mov
mov
lret
mov
call
push
repz
xor
mov
xchg
sahf
mov
movsb
pop
push
ret
cmpsb
dec
jmp
out
rep
std
xchg
shrb
lea
cmpsl
ret
mov
aad
cmpsl
mov
lfs
shlb
test
arpl
adc
hlt
je
in
shrb
mov
mov
adc
pop
mov
xchg
js
add
push
push
cmp
lret
repz
sub
jp
dec
push
in
sti
sbb
jmp
cmp
out
out
jno
push
in
ds
xchg
xchg
cmp
mov
ja
and
sahf
mov
push
mov
cli
mov
mov
cmpsl
lcall
pop
stos
scas
cmp
das
mov
fldl
or
mov
outsb
pusha
lods
fdivrl
adcb
mov
test
dec
push
movsb
and
sti
mov
adc
cmp
pop
int
testl
sub
push
mov
mov
or
js
sub
push
mov
mov
inc
inc
mov
xor
inc
mov
loop
mov
dec
ljmp
leave
mov
jnp
or
loop
xorb
lcall
pop
mov
pushf
xchg
rcll
pop
mov
adc
es
xchg
test
xchg
jp
adc
jg
push
jnp
cmp
adc
sub
daa
mov
inc
adc
bound
jecxz
sbb
emms
imulb
test
aad
sub
ss
pushf
lods
into
cmp
push
test
xchg
daa
fldl
dec
jp
stos
jnp
fadds
sub
inc
daa
movsl
xlat
sub
imul
mov
icebp
mov
push
pop
sti
mov
jo
lds
pusha
bound
stc
icebp
out
push
mov
mov
xor
add
jae
in
push
out
jbe
cmp
jb
mov
push
notb
mov
and
mov
ficoms
jge
sbb
iret
cmpsl
in
lret
stos
out
out
mov
sti
pusha
lret
test
mov
and
xlat
lds
fucomip
xchg
lds
adc
sub
mov
out
pop
cwtl
out
add
daa
pop
out
fldl
push
and
adc
mov
mov
sub
xor
cmpl
mov
shl
xchg
mov
in
sahf
ds
xchg
add
sub
test
jns
jl
loopne
rolb
fldl
cmp
maskmovq
idivl
jae
mov
and
loopne
iret
popf
cld
lcall
in
mov
xlat
push
addr16
xor
add
mov
cmp
mov
negl
cs
aas
lcall
xchg
pop
sub
icebp
es
xorb
inc
push
jns
xorl
pop
shr
mov
mov
clc
mov
add
scas
cltd
lret
testb
xchg
jge
scas
pusha
lds
popa
negl
dec
mov
fldl
cmp
scas
pop
sbb
ror
insl
xor
lret
outsl
xchg
mov
sbb
outsl
push
dec
in
inc
iret
cmp
popf
ds
push
ja
add
sbbl
cltd
shll
mov
cmp
push
mov
jns
cmpsb
inc
xlat
in
movsb
sub
and
and
ret
xorb
andl
data16
lods
mov
push
xor
push
iret
test
js
cmp
xor
push
adc
pop
jecxz
xchg
jo
out
sub
inc
push
and
lock
cmc
in
add
push
mov
mov
pop
adc
dec
pusha
and
cwtl
mov
xchg
into
jae
pop
lahf
mov
call
repnz
sbb
ja
popa
mov
mov
and
xor
and
dec
mov
push
xor
divl
scas
or
mov
shlb
ss
outsb
and
test
cmc
xchg
daa
shl
add
and
filds
jbe
mov
cmp
and
jno
mov
iret
movsb
leave
sbb
mov
adc
push
mov
or
inc
das
mov
push
lcall
xchg
sahf
pusha
sub
mov
mov
popa
jmp
pushf
mov
lods
push
das
jb
pop
jae
mov
pop
repnz
popf
punpckhbw
add
in
sub
dec
lds
xchg
jmp
jmp
notb
mov
insb
push
push
cltd
jae
and
cmc
fistpll
fcomps
lea
jae
push
insb
hlt
mov
ljmp
cmp
mov
push
or
loope
repz
out
inc
int3
repz
cld
jo
fsts
subl
in
mov
imul
iret
pop
mov
mov
sbbb
adc
inc
lcall
mov
xor
jnp
sub
lahf
imul
in
int
lcall
cmp
pop
icebp
and
or
loopne
outsb
cmc
inc
jnp
lea
in
jns
test
test
jns
pop
sbb
pushl
mov
cltd
mov
shl
ds
imul
nop
mov
in
ss
js
jns
shld
pop
data16
pop
mov
cmc
and
es
push
cmp
cmp
dec
sub
loope
popf
adc
inc
xor
push
mov
push
xchg
ret
mov
mov
push
lds
sbb
fstl
jge
or
clc
or
pushf
lret
xchg
cmpsb
mov
pop
and
fimull
jnp
and
inc
sahf
ret
mov
dec
ror
sbb
test
cwtl
pop
cmp
ss
leave
cltd
enter
pusha
leave
pop
dec
dec
mov
fidivrl
aas
pop
lods
mov
test
push
mov
ds
xor
push
mov
mov
adc
repz
dec
jge
jge
mov
lcall
pop
cmp
insb
adc
fnsave
or
out
ja
test
lret
xchg
push
adc
lods
ja
test
sub
test
aad
pop
jo
add
decb
sahf
adc
divb
arpl
cmp
lods
mov
out
and
int3
push
push
pop
xor
jno
addr16
ss
imul
fidivl
lret
xchg
dec
mov
adc
pop
add
out
addl
sbb
loope
mov
clc
jmp
loopne
sbb
icebp
call
mov
sbb
pop
push
out
mov
pop
sbb
enter
push
jo
roll
scas
ds
loop
ss
cmpb
lds
lea
xor
pop
xchg
lret
lret
mov
loope
xor
rolb
cltd
add
lds
mov
mov
subb
les
dec
aaa
and
mov
cld
cmpsl
out
xor
mov
jl
push
popa
xchg
or
loop
and
jl
adc
push
mov
cmp
gs
dec
mov
mov
cltd
inc
cmpsb
outsb
lds
dec
sub
fsubs
arpl
adc
pop
add
or
out
addr16
cld
add
lock
jno
add
mov
ret
push
jbe
jno
outsl
test
xchg
pop
popa
lods
dec
cli
icebp
movsl
xchg
sub
orb
mov
mov
push
out
test
cmp
aad
xor
scas
cmp
push
mov
push
neg
jmp
mov
mov
jge
in
cmovnp
aas
loop
into
pushf
push
kaddw
sbb
inc
mov
test
ret
and
stos
push
inc
inc
mov
arpl
xorl
xchg
adc
pop
imul
cmp
jbe
jb
pop
iret
cmp
adc
mov
xchg
xor
testb
fildll
arpl
jns
pop
push
and
pop
mov
enter
or
cmp
xchg
pop
or
pop
mov
les
sbb
push
jmp
dec
int
sub
mov
roll
enter
xor
push
xchg
push
and
lahf
ds
std
mov
push
fucomip
shll
insl
shll
add
andl
loope
mov
rcr
sbb
dec
icebp
iret
ret
and
jnp
or
mov
sbb
bound
shlb
push
inc
dec
stos
ljmp
ret
mov
add
rorl
ljmp
push
orb
inc
dec
outsb
iret
pop
imul
cmp
leave
pusha
fidivs
nop
insl
addr16
fimull
mov
jmp
jg
in
imul
iret
sub
cmpsb
mov
aaa
fdivl
push
repz
shl
push
les
cld
sti
js
imul
int3
je
jb
lea
fcos
js
test
mov
fsqrt
mov
stos
dec
aad
mov
mov
inc
mov
xor
rorl
mov
inc
fimuls
lock
pushf
jge
int3
lods
xchg
fsub
rorb
or
test
mov
mov
aad
mov
movsl
jge
dec
fidivrl
cwtl
shll
fdivs
push
push
fmulp
jno
xor
sbb
jmp
and
mov
adc
sbb
iret
add
pushf
push
inc
sub
lret
cmp
lret
ljmp
or
and
pop
mov
jmp
mov
pcmpeqb
cmp
sti
jge
repz
test
jg
lret
in
sbb
stos
addr16
adcb
movsb
cmp
insl
push
jge
movsb
mov
aam
push
push
pop
into
cmpsl
je
xlat
add
pop
sbb
xchg
inc
jns
lods
cmp
cmpsb
pop
cmp
inc
rcr
push
inc
jge
je
movsb
push
lret
mov
pop
sbb
jo
pop
mov
ret
insl
loop
rol
orl
bound
shr
dec
outsb
xor
sbb
cmpsb
push
nop
js
fiaddl
dec
scas
fildll
aad
pop
dec
or
mov
or
and
add
js
lock
mov
inc
aas
test
popf
mov
loope
jb
mov
test
jno
xchg
insl
fnstenv
push
outsl
pushf
push
mov
xchg
cs
or
dec
js
out
jl
stc
subb
push
jne
in
inc
int
hlt
xchg
inc
sub
cwtl
mov
ret
xchg
push
sub
test
outsl
iret
jp
mov
ljmp
pop
loop
or
jno
inc
or
push
nop
loopne
cmpsb
xchg
xchg
jnp
xor
jne
inc
jmp
call
jnp
popl
mov
adc
adc
mov
rol
in
push
or
mov
dec
mov
and
sbb
sti
cmp
daa
adc
pop
cmp
adc
push
and
movb
es
fdivrs
mov
jmp
and
cld
jne
sub
jge
mov
imul
stc
or
pushl
dec
mov
out
cmp
sarl
sbb
test
fstps
fsubs
push
add
fimull
sbb
jnp
loope
add
subb
rol
sbb
mov
or
push
mov
inc
out
push
xchg
push
daa
punpckldq
jae
aad
cmpl
rep
push
mul
addr16
ss
int3
sbb
shlb
sub
js
not
push
cs
dec
std
adcb
jb
cli
cmp
mov
aam
arpl
pop
pop
in
inc
clc
dec
pop
inc
faddl
push
inc
test
dec
int3
out
sub
adc
xchg
mov
loope
inc
inc
jne
cmc
sub
imul
xor
adc
mov
inc
in
les
push
adcl
cmp
hlt
cmp
movsl
stos
mov
int3
jg
adcb
ret
xchg
mov
lret
test
mov
xor
or
or
lret
push
leave
mov
mov
arpl
adc
out
xchg
call
sti
mov
pusha
push
repnz
sub
mov
inc
sub
and
mov
push
aas
fwait
rcrb
sub
lods
adc
pop
lods
push
jp
out
add
pop
inc
shrl
inc
mov
mov
ja
loop
pop
or
jecxz
arpl
mov
ja
lds
inc
cmp
push
inc
adc
pop
popf
je
aas
les
and
or
xor
pushl
add
push
test
inc
popf
mov
outsb
inc
mov
pop
out
sub
cmp
cmp
xor
xor
mov
ja
in
lcall
jns
fldl
mov
imul
fisubrs
and
mov
adc
fbld
aam
dec
out
ret
fldcw
mov
fcoms
popa
sub
xchg
sti
out
je
add
lret
dec
sbbl
inc
fsubrs
faddl
or
sub
adc
arpl
jnp,pt
and
and
fsts
mov
loopne
es
insb
sbb
dec
and
dec
test
std
into
adc
aad
imul
push
stc
into
loopne
testb
loopne
rcrb
fcoms
add
out
inc
call
cmc
repz
pop
aaa
xchg
dec
xor
shrl
imulb
and
or
rcr
inc
adc
dec
stc
lods
daa
sbb
fcomp
add
mov
mov
sbb
mov
mov
ss
mov
sbb
cmp
xchg
sarb
dec
push
repnz
shrl
stos
leave
pop
jne
adc
mov
loope
icebp
jnp
or
fwait
andb
rorl
out
mov
xchg
sahf
add
mov
jo
mov
sbbb
std
nop
inc
loope
testb
int3
pop
movsl
sbb
jecxz
and
push
mov
mov
adc
sub
fdiv
rcpps
mov
jge
add
sti
insb
mov
adc
fcompl
je
ret
push
sar
sti
cmp
and
fstps
loopne
push
and
iret
jg
fisttpl
leave
cmpsl
push
inc
jg
aaa
into
jecxz
sahf
inc
jge
sarl
push
mov
sub
aaa
shrb
movsl
data16
leave
shrl
sbb
out
incb
xor
xor
mov
push
xchg
cmp
stos
sub
pop
and
insb
aaa
push
xchg
cmp
bound
jne
jbe
push
repz
loope
cmp
js
cmp
fnstsw
pop
xor
mov
lahf
inc
ljmp
mov
test
inc
jno
movsb
loope
pop
aam
jle
pusha
sub
xchg
dec
std
cld
or
movsl
fnsave
mov
or
lods
pop
mov
push
cmp
cmp
pop
push
sahf
jno
add
flds
adc
mov
mov
dec
idivb
mov
movsb
cmp
mov
mov
int
lahf
xor
inc
xor
mov
iret
pop
lahf
mov
int3
cmp
jl
mov
adc
mov
jl
sbb
mov
outsb
pop
and
scas
loop
sbb
inc
xor
jo
cvtdq2ps
lock
mov
aad
and
or
orb
stc
push
jge
repnz
xlat
lret
addr16
jle
xor
cmp
push
sub
cmp
adc
sbb
loopne
jp
movsl
jmp
imul
sbb
mov
gs
daa
and
ljmp
outsl
xor
mov
jecxz
aaa
mov
lcall
int3
ret
dec
fstpl
and
test
outsb
adc
xor
lahf
fistl
int
imul
xchg
xlat
or
add
push
aam
aad
lods
in
cmp
adc
stos
lods
add
mov
jbe
jbe
inc
in
hlt
push
out
add
icebp
int3
in
jo
insl
arpl
sub
cmc
int3
jb
in
or
xor
subb
push
push
pop
roll
xor
lods
sub
inc
xchg
fnstenv
adc
jnp,pt
mov
and
or
and
mov
cmp
jno
inc
sti
sub
inc
lcall
pop
push
or
mov
lods
and
aad
pop
repz
push
add
mov
add
ja
pop
lret
fldenv
and
in
adc
in
mov
and
mov
push
pop
popf
cwtl
mov
cwtl
xchg
lcall
push
filds
cmp
push
cmp
fldl
add
pop
cmp
sbbl
mov
lcall
icebp
jmp
into
lods
add
inc
pusha
negl
push
adc
pop
dec
andl
cmpsb
int3
mov
in
ss
xchg
stos
js
push
mov
icebp
adc
outsl
outsb
shlb
ret
test
cmp
stc
std
dec
arpl
inc
stos
or
pop
test
dec
mov
jb
cmp
fdivl
lcall
pop
inc
push
sahf
imul
sahf
sub
or
out
mov
pop
adc
mov
aaa
jg
in
int
push
add
pushf
cmp
sbbb
mov
in
inc
xor
repnz
pop
push
cli
push
pusha
xor
adc
iret
jp
cmp
or
loope
mov
cwtl
ret
fnstsw
enterw
scas
test
test
repnz
es
jbe
add
cs
pop
push
shll
sahf
cmp
scas
mov
cld
xor
jg
movsb
out
and
mov
pop
xchg
arpl
mov
out
in
aam
notl
fiadds
ret
stc
loop
mov
push
adc
outsl
push
lea
aad
aaa
sub
push
divl
mov
outsb
loope
repz
mov
jnp
ja
lahf
aad
sub
adc
iret
pop
repz
loope
pop
daa
imull
mov
into
xchg
push
inc
aad
out
rcrb
jno
nop
in
push
mov
push
ljmp
out
mov
ret
pop
aas
scas
pop
xchg
add
dec
sub
idivl
rcll
repz
stos
add
adc
mov
push
loopne
xchg
cli
sahf
pop
ljmp
add
jb
mov
cld
loop
test
cmp
fcmovu
loopne
dec
adc
pop
push
push
leave
jle
and
loopne
add
mov
in
out
loop
cmp
xor
fisubs
inc
inc
mov
das
push
jle
mov
jge
test
mov
out
xchg
mov
sbb
jnp
sub
sub
pushf
mov
push
push
sub
push
adc
shl
aas
jmp
or
rcll
fcom
rcll
xor
or
jae
cltd
pushl
or
sub
xchg
pushf
sarb
push
outsl
inc
jmp
push
or
cwtl
scas
sbb
adc
stos
int3
push
lret
ss
sti
cmp
fadd
fisttpl
push
ljmp
dec
pusha
or
cltd
sbb
add
adc
jl
lods
push
push
jne
ds
lea
pop
jle
insl
add
sub
or
lea
bound
leave
movsl
out
jecxz
adc
in
call
incb
push
add
je
jae
push
adc
fsubrs
or
cmp
xor
mov
lret
lds
push
dec
ss
push
ret
jl
out
fbld
shlb
jg
les
or
mov
enter
mov
mov
pop
mov
adc
lea
jecxz
ret
lods
mov
xor
lods
rclb
movsb
lods
popa
dec
cmpsl
xor
arpl
jb
rcrb
lds
or
out
inc
data16
pop
in
ret
mov
or
dec
and
mov
lcall
fsubrl
lahf
cmp
add
stc
jb
leave
es
fnstenv
push
jmp
ds
mov
push
fs
mov
mov
in
enter
call
push
es
jl
out
xor
fldenv
add
dec
fistl
sbb
test
push
gs
ret
das
dec
pop
push
stos
jne
add
xlat
rclb
mov
das
and
roll
gs
lds
roll
cmp
pushf
in
xor
xor
add
push
mov
lds
lcall
ss
dec
aas
mov
ja
inc
push
mov
sti
andb
lcall
test
int
into
popf
fcmovnbe
rclb
jl
inc
pop
jle
dec
sub
mov
or
add
jmp
push
jle
lea
out
test
dec
cmp
sti
dec
xor
or
and
mov
dec
xor
insl
ja
arpl
insb
jns
subps
popf
mov
fwait
sub
pop
test
and
push
shrl
adc
insl
xor
addr16
push
adc
pop
shl
stc
inc
ror
jl
call
stos
inc
sahf
mov
test
push
call
lret
mov
imul
adc
lds
aad
cld
cmp
inc
push
ss
adc
xor
dec
movsb
sub
and
pop
test
test
fiaddl
loop
pop
inc
dec
sub
int3
insl
inc
and
sub
fistpl
cmpsb
xchg
popf
fcomp
loope
clc
pop
push
aad
push
mov
xor
shlb
fwait
pop
shll
stos
sbb
inc
mov
inc
dec
push
inc
pop
jl
add
int3
and
adc
iret
push
aaa
mov
inc
push
movsb
sub
mov
mov
rolb
sub
int
stc
push
loope
repnz
addb
inc
jmp
adc
lret
les
clc
mov
or
movsl
push
inc
je
lock
stos
mov
inc
inc
out
pop
lds
cmp
icebp
fidivrl
jns
push
aad
int3
xchg
movb
sbbl
inc
fmul
pop
lea
test
and
imul
mov
gs
daa
xchg
lock
pop
rcll
repz
imul
sub
shlb
fidivrl
rcl
in
fsubrp
or
lcall
testl
stos
movl
scas
loope
int3
stc
shr
push
dec
add
mov
jo
sbb
mov
jno
je
sub
pusha
dec
divb
inc
pop
jle
push
jg
sbbb
icebp
sub
cwtl
inc
cmpsl
xchg
les
cmpsl
add
lock
jns
inc
es
add
rcrl
das
dec
das
jae
dec
dec
fs
jo
insb
jne
ror
push
jp
pop
sub
mov
ror
add
fiaddl
in
in
jno
xchg
gs
cmp
fsts
stos
jns
popa
inc
rcl
les
sbb
sbb
sbb
push
js
dec
mov
mov
jnp
sbb
sub
pusha
jae
repz
inc
mov
outsb
dec
xchg
dec
test
inc
rclb
nop
push
push
rolb
jb
add
pop
sbb
testl
sub
inc
int
and
and
and
loope
sbb
pushf
sub
xor
sub
ljmp
pop
mov
jae
das
push
lcall
cmp
dec
dec
cwtl
sbb
xlat
jecxz
rcrb
add
xchg
or
jno
mov
cmc
cmp
jne
call
cmp
adc
pop
cmp
mov
mov
pop
xchg
inc
addr16
cwtl
test
or
mov
cmp
popf
aad
adc
mov
xchg
or
or
xlat
ljmp
aam
icebp
loopne
push
in
cmp
outsb
fbld
ja
out
nop
in
mov
mov
xor
cwtl
enter
mov
es
fnstenv
sti
jb
sub
bnd
fldcw
jns
xorl
mov
insl
mov
jle
stos
sbb
sahf
sub
jl
sbb
push
lods
lods
jne
sarl
mov
dec
fs
pusha
outsb
or
fwait
cli
fsubr
ret
jbe
xor
and
fldl
cmpsl
outsb
cwtl
repnz
test
ss
push
push
in
shrl
and
fsubrl
xor
pop
sbb
mov
or
jecxz
xchg
add
mov
adcl
mov
mov
out
fisttpll
jecxz
jge
mov
xchg
rcll
xor
or
sub
and
pop
lds
add
or
lods
fidivrs
das
icebp
xchg
mov
cmp
mov
jp
aam
fs
adc
movsl
imul
cmpl
mov
mov
and
in
mov
aas
add
mov
inc
and
or
int3
pop
pop
pop
xor
jg
imul
and
cmc
daa
jo
mov
mov
xchg
mov
outsb
test
aaa
test
sbb
arpl
lods
mov
outsl
xor
enter
call
lret
add
inc
icebp
loope
test
adc
xchg
cld
add
sub
and
test
add
repz
pop
adc
xchg
pop
add
lahf
adc
out
push
mov
xchg
dec
pop
sbb
pop
test
push
test
mov
je
ljmp
in
pop
loop
addr16
push
jg
or
dec
imul
xor
cmpb
and
sahf
mov
add
sub
add
push
scas
popa
daa
mov
sub
pushf
sbb
mov
push
repz
sub
rcll
test
pop
xchg
dec
inc
gs
xchg
push
loop
push
dec
xor
fnstcw
es
out
imul
inc
jecxz
fnstcw
jne
pushf
movaps
or
xchg
mov
js
ja
inc
aas
xorb
and
xchg
mov
inc
inc
mov
xchg
inc
lcall
mov
sbb
and
sub
jp
pop
rcrb
xor
jmp
lods
mov
add
pop
xlat
aaa
jne
fwait
sbb
mov
add
jnp,pt
push
xor
pop
clc
xor
mov
jnp
sahf
lea
pop
mov
adc
imul
data16
shl
jnp
or
pop
dec
mov
enter
jo
or
and
dec
popf
pop
in
dec
mov
inc
inc
cmpsb
push
jmp
lcall
mov
add
dec
test
mov
arpl
mov
pushl
stos
xchg
addl
push
pop
mov
fsin
mov
inc
and
lahf
in
mov
seta
push
ds
rcl
dec
sub
xchg
je
pushf
jae
cli
xchg
push
in
push
and
popf
inc
pop
mov
jmp
fcomi
adcb
ss
cmp
mov
popf
int
push
inc
dec
repz
mov
pop
test
dec
mov
xorl
test
movsl
push
rcll
mov
sub
aam
insl
dec
ljmp
movsb
clc
les
jmp
std
adc
or
jae
mov
test
fistpll
test
cmpsb
push
clc
test
or
add
fsubrl
clc
push
stos
cmp
push
mov
adc
clc
sarb
lods
mov
inc
xor
xor
jns
scas
stos
in
pushf
aas
add
xor
lea
repnz
jne
mov
mov
mov
idivb
adc
cmp
lret
inc
mov
out
nop
pusha
mov
sbb
mov
jle
dec
xchg
sahf
adc
inc
mov
xor
jb
mov
add
call
mov
mov
or
cmp
cmp
jge
ljmp
add
leave
pop
push
add
test
or
mov
jge
test
xor
mov
orl
out
mov
xchg
jle
and
dec
into
cmp
loopne
lods
adc
fsubr
pop
mov
js
jns
call
add
popa
push
xchg
or
js
or
push
and
inc
and
rcrb
into
cltd
or
or
fistps
push
mov
out
ljmp
lock
mov
dec
lock
fwait
addr16
arpl
mov
imul
fnstenv
pop
es
lret
movsb
test
or
pop
pop
dec
mov
out
loop
xchg
gs
mov
jno
into
loopne
cmc
in
fwait
adc
cmp
pop
pop
xor
ret
sub
push
movsb
test
flds
punpckldq
cmpsl
xchg
and
sbb
cmpb
sbb
std
mov
cpuid
int
dec
movsb
arpl
sarb
sub
jno
lahf
push
inc
mov
push
push
arpl
sub
fwait
ss
imul
add
in
insl
mov
push
js
mov
pusha
ds
in
push
sbb
rolb
pop
mov
stc
in
lret
outsb
in
add
hlt
ret
mov
mov
rcrl
cmpsb
dec
mov
aaa
nop
stos
fdivrl
js
test
das
cmp
lret
sti
jnp
clc
cmp
jae
out
sub
mov
in
imul
shl
inc
shr
fsubrs
insl
call
repnz
pop
movsl
cmc
loope
xchg
pop
ds
nop
mov
mov
movsb
movb
js
inc
int
movb
dec
and
mov
xor
es
sbb
clc
insb
inc
imul
jb
or
push
cmpsl
cmp
sahf
pushf
push
into
shrl
fnclex
add
lods
iret
in
push
xor
cli
iret
add
orl
mov
push
sbb
push
sub
test
outsb
insl
std
outsl
gs
imul
jne
add
pop
xchg
dec
mov
insb
dec
adc
aad
in
or
ss
sub
fists
call
sub
out
imul
fnstsw
and
lods
cmp
mov
lods
dec
fnstsw
pop
mov
xor
iret
lret
xchg
and
mov
xor
add
test
pop
lea
imul
mov
sahf
aad
or
addr16
mov
rclb
call
test
hlt
aam
push
aad
xchg
push
addl
dec
shlw
mov
push
dec
test
mov
lret
aam
mov
loopne
mov
sub
lahf
out
jb
insl
je
xchg
cmpb
jecxz
cs
aam
ljmp
repnz
iret
mov
inc
int3
ss
sbb
mov
rcrl
mov
push
xor
push
adc
maskmovq
imull
mov
repnz
sub
dec
aam
sub
xlat
out
sti
iret
into
cwtl
inc
xchg
sbb
xor
sub
xor
pop
pop
mov
cmp
icebp
jl
outsl
stos
sbb
in
cld
sub
xor
stos
cmp
and
fs
mov
cmp
test
addr16
mov
pop
push
pop
and
lcall
sbbb
dec
icebp
or
mov
sbb
pop
fs
push
gs
in
xchg
xchg
js
out
mov
dec
shlb
adc
inc
add
inc
pusha
jno
std
push
or
or
sub
cwtl
sub
push
leave
mov
or
dec
test
movsb
sbb
adc
cwtl
dec
pop
mov
mov
adc
dec
sbb
inc
scas
popf
fwait
mov
out
test
xor
ds
xchg
xlat
int
dec
cmpsl
mov
loop
bnd
add
popa
cli
jns
add
outsl
mov
lds
lea
test
dec
lea
out
adc
or
xchg
test
dec
xchg
mov
sub
sti
xor
ja
adc
sbb
cmc
fwait
pop
jb
cmp
mov
loop
mov
sub
mov
insl
lret
sbb
mov
cmp
mov
mov
test
mov
int
daa
out
cld
pop
popf
dec
es
or
lods
insb
jo
xor
sbb
test
or
cmp
adc
lea
lods
jns
inc
aaa
push
loope
addr16
in
scas
mov
push
or
and
stos
add
lods
clc
cs
push
dec
and
pushl
in
xor
dec
dec
movsb
and
clc
push
lods
and
or
nop
outsb
enter
scas
repz
loop
shrb
in
addr16
stc
push
shlb
mov
push
rdtsc
int3
pop
mov
sub
dec
jns
sbb
lret
push
or
sbb
ss
movsb
cmp
pop
in
mov
mov
lret
xchg
rolb
sub
mov
rorb
dec
std
mov
mov
scas
mov
jae,pn
or
push
fimuls
iret
jle
cmp
xor
sbb
xchg
fiadds
push
cli
dec
lea
adc
jno
cwtl
or
mov
fs
cltd
adc
and
loope
jecxz
in
mov
lods
cmp
movsb
bound
or
adcl
jmp
xchg
sub
or
int3
xor
dec
inc
sbb
cmp
into
xor
movl
popa
orb
in
mov
add
cli
enter
add
jb
je
cmp
push
cld
push
subl
pop
push
popa
lret
out
xchg
jp
jae
rcrl
es
push
lds
and
insl
pop
test
lahf
stc
cmp
loopnew
stc
inc
mov
das
push
popf
mov
fwait
es
aaa
pop
push
cld
push
mov
mov
lods
push
out
daa
std
mov
pop
pop
sti
xchg
cmp
es
xchg
push
mov
and
jg
scas
xchg
fs
in
fisttpl
jl
pushf
ss
test
not
pop
cmp
dec
fimull
push
xchg
out
addr16
xor
int3
jo
stos
jmp
roll
add
outsl
sbb
xchg
stos
dec
repnz
pusha
xchg
add
jo
sti
test
mov
sbb
pop
out
test
lahf
xchg
ja
pop
test
inc
adc
shl
sbb
jl
pop
jne
shr
jb
es
pop
sub
xor
out
or
mov
addb
add
dec
xlat
xor
ror
es
push
lds
push
sub
xlat
aam
pop
sbb
ljmp
push
std
mov
inc
shl
xor
xchg
pop
pop
test
loop
jmp
cli
cmp
inc
xlat
cld
fbld
sar
jne
pushf
cs
out
movsl
dec
push
dec
inc
cmp
ja
test
loope
push
cmp
xchg
mov
addb
cmp
cld
push
pop
cmp
loop
inc
mov
addb
cmp
jno
inc
je
adc
sahf
arpl
mov
icebp
mov
loop
cs
cmpsl
out
leave
outsb
mulb
xor
xor
in
pop
cmp
rcr
and
in
aad
xchg
and
dec
fadds
imul
daa
ret
adc
imulb
roll
jnp
mov
loope
and
cmc
mov
xchg
popf
jmp
jne
pop
jae
and
push
iret
outsl
loop
add
test
lcall
arpl
cmp
push
jg
xor
jle
fcom
lock
inc
mov
add
mov
cltd
outsb
scas
sbb
mov
sub
arpl
jnp
push
dec
loope
adc
ftst
add
les
int3
cmc
xchg
bound
scas
arpl
dec
rclb
adc
mov
mov
repnz
xorb
mov
stc
fsubs
mov
push
xor
shlb
push
pusha
add
subb
push
fcmovne
jecxz
cmp
movsl
mov
mov
mov
test
addr16
data16
mov
push
mov
int3
add
icebp
mov
add
nop
mov
push
sbb
or
sub
mov
insb
enter
lcall
sbb
cmp
pop
adc
jne
adc
cltd
nop
pop
popa
mov
push
lds
aas
loopne
pop
and
icebp
ret
test
test
testl
push
mov
inc
sbb
xchg
leave
into
pop
faddp
mov
popa
jl
hlt
out
out
inc
sbb
xchg
nop
scas
cmpsl
inc
adc
mov
and
stc
xor
fwait
les
xchg
xlat
testl
jmp
in
stos
lahf
addb
pushf
pusha
fs
call
out
push
mov
pop
insb
imul
in
cmp
pop
xor
mov
push
mov
fisttpl
scas
xor
lret
xor
mov
repz
fsubs
xchg
fs
or
mov
mov
in
adc
iret
xchg
jae
stos
or
adc
xchg
lahf
shll
push
pop
data16
test
adc
mov
add
xchg
add
dec
lret
jbe
jb
jmp
xchg
mov
outsb
movsb
int3
jl
jnp
scas
rcrb
pop
push
sbb
xchg
subb
dec
add
scas
mov
or
fwait
mov
mov
stos
or
and
leave
mov
fucomi
and
jbe
lods
fmuls
or
and
ficoms
mov
adc
pop
push
jae
adc
mov
jp
loop
sbb
xchg
outsb
pop
push
xchg
vpunpckhdq
pop
pop
rcrl
repz
rclb
sbb
xchg
cmp
add
or
push
ret
arpl
mov
stos
js
nop
mov
sub
pushf
and
pop
dec
adc
and
test
outsb
iret
mov
unpckhps
hlt
fwait
rolb
jp
aad
jns,pt
mov
jns
lea
inc
scas
push
ja
adc
push
jmp
call
idiv
enter
pushf
test
xchg
cltd
loope
mov
fldcw
fwait
pop
fstpt
mov
sub
adc
adc
xor
sahf
int3
sbb
dec
mov
xchg
in
je
insl
clc
mov
std
xchg
push
stc
movsb
fs
adc
cwtl
sbb
pop
div
mov
inc
or
or
xlat
push
decl
mov
mov
xchg
imull
inc
push
std
sub
shll
sbb
cmp
shll
stos
push
jmp
es
adc
lret
std
jno
mov
sahf
cltd
xor
and
push
insl
jecxz
xchg
sahf
xchg
test
xchg
lods
mov
sub
leave
ljmp
dec
mov
leave
xchg
stos
xchg
fisubrs
lods
cmp
loopne
andb
push
xchg
pop
and
sub
pop
fcomps
xor
mov
mov
or
gs
popa
jno
pushw
mov
xchg
leave
push
fstp
xchg
sbb
stos
mov
sti
adc
sbb
sbb
adc
adc
mov
and
dec
into
andl
dec
movsl
sbb
icebp
int
jmp
push
filds
gs
add
loope
inc
call
mov
mov
sbb
fstpl
push
loopne
add
sahf
leave
inc
mov
movl
aas
hlt
add
aad
sarl
adc
ja
sbb
lods
add
in
icebp
je
jp
inc
test
cwtl
jae
outsl
cs
or
push
inc
dec
ljmp
adc
out
sub
add
pushf
adc
or
jo
xlat
adc
jne
clc
stos
xchg
mov
fincstp
imul
sbb
fiaddl
mov
pop
bound
ret
mov
lock
outsb
imul
dec
call
call
clc
enter
sub
arpl
mov
fcmovbe
in
dec
hlt
std
pop
fdivrl
fwait
ljmp
hlt
mov
dec
sbb
and
stc
xchg
push
xor
jb
in
sub
movsb
icebp
dec
jno
mov
cmp
aas
add
jmp
fiadds
arpl
cmp
fisubrl
lret
xor
outsb
xchg
data16
add
cmpsb
les
push
jno
xor
iret
rolb
cmpsb
pop
jecxz
movsl
jecxz
mov
or
and
sub
jmp
clc
andl
test
out
cmpsl
in
pop
mov
inc
ret
out
inc
cltd
inc
jo
sbb
push
mov
gs
shl
aam
scas
sub
das
dec
fistps
stc
lods
xchg
mov
ficoms
and
popl
push
test
jp
and
orb
shll
or
add
fists
cwtl
xchg
addr16
popf
icebp
or
jge
push
into
jge
inc
push
pusha
in
out
std
ret
xor
mov
repnz
xor
xchg
sbb
cli
fstl
jbe
cmp
sbb
dec
and
adc
lods
bound
mov
pop
in
arpl
xor
xchg
inc
push
outsl
xchg
pop
out
and
jp
cmp
popf
lds
lahf
loope
popa
gs
lds
test
xchg
inc
and
xor
out
insb
fcmovbe
mov
pop
adc
mov
mov
jl
mov
push
insl
pop
pop
pop
and
sbb
leave
or
mov
jp
inc
enter
xor
xlat
push
mov
into
or
add
jmp
dec
pop
add
fcmovne
and
rorb
push
add
out
sbb
mov
int
add
pusha
push
cmp
inc
fldenv
add
dec
aad
rol
push
fucom
mov
icebp
xor
lea
jmp
cmp
imul
js
cld
int
dec
enter
jl
pushf
popl
lret
lcall
fs
arpl
xor
sahf
jns
xor
xchg
jnp
xchg
mov
scas
aaa
or
add
fcoml
test
push
sbb
mov
pop
dec
fdivr
addl
mov
inc
das
pop
mov
dec
pop
pop
test
fiadds
cwtl
mov
sahf
pop
sti
sbb
adc
jmp
mov
decl
mov
fldcw
test
insl
int3
jmp
sub
jp
repnz
jne
push
data16
cmpsb
fmul
adc
fs
int3
add
jnp
jo
movsb
xchg
jb
fs
cli
sub
mov
sbb
shl
cmp
std
or
lret
pop
fcmovnu
mov
adc
push
int
test
adc
inc
mov
faddl
lahf
rolb
sbb
test
fcomps
js
add
out
inc
test
mov
sub
inc
out
popf
pop
cwtl
inc
add
mov
std
pop
in
xor
or
push
pop
pop
faddl
imul
xorb
stos
sub
xor
xchg
mov
stos
loope,pt
xor
loopne
fdivl
mov
icebp
mov
loop
mov
dec
adc
movsb
inc
inc
cwtl
pop
fiaddl
jp
push
and
xchg
cmp
dec
int3
jecxz
rorl
jl
repnz
sub
xor
lds
sbb
ja
xor
in
jo
xchg
mov
push
ret
lods
je
adc
test
dec
sarl
dec
mov
mov
fcmovu
les
outsb
aad
subb
into
pusha
adc
fstps
movsb
and
adc
dec
jno
or
and
ficoms
fsubrp
lahf
pop
cmp
pop
fiadds
cmp
sbb
mov
les
pop
xorl
iret
mov
cmp
jnp
stc
cmp
ret
daa
or
enter
dec
imul
arpl
fisubrl
xrelease
xchg
mov
fldt
mov
dec
and
movsb
aam
sbb
jmp
or
jae
pop
push
xchg
jae
push
call
in
xchg
adc
mov
test
jg
pop
xchg
out
popf
cmp
lret
push
jmp
dec
push
xchg
mov
adcb
cmpsb
push
inc
andb
fwait
int3
xlat
jno,pn
xor
test
sub
mov
dec
and
adc
cli
mov
test
lahf
push
movsl
push
call
leave
repz
rcll
andl
fisubs
cmp
add
mov
mov
and
mov
inc
xor
insl
out
dec
adc
pop
adc
and
cmp
mov
arpl
add
add
and
jecxz
mov
mov
ret
scas
lea
sub
ljmp
das
xchg
mov
popf
incb
mov
mov
movsb
insl
gs
adc
mov
aam
rclb
sub
jl
xor
aam
xchg
xor
daa
xor
push
cld
jae
push
xor
insb
or
xor
dec
push
movsl
mov
in
stc
inc
adcb
pop
nop
mov
out
mov
xchg
insb
mov
mov
adc
ljmp
push
test
fwait
aad
mov
lret
jmp
sub
fcmovbe
fildll
mov
inc
sbbb
add
or
push
outsb
mov
mov
xor
js
xor
in
mov
jecxz
and
cmp
lods
mov
je
mov
jl
jnp
mov
aaa
aam
add
mov
out
add
lret
pop
sbb
mov
sub
jg
fisubrs
lds
add
ret
push
sub
adc
inc
in
dec
sub
pop
sbb
lcall
insb
ret
sub
xchg
hlt
push
jle
sub
pusha
scas
sub
shr
mov
pop
aad
ds
popf
aam
mov
mov
cli
ror
push
mov
orb
mov
xor
and
divl
lret
mov
mov
push
pushf
stos
cli
jo
pushf
in
mov
lcall
rolb
imul
ret
hlt
sbb
or
sub
cmpsw
scas
and
cmp
mov
movsb
daa
jae
xlat
andl
inc
aad
stos
aad
adc
icebp
leave
add
jae
add
jmp
xchg
mov
jecxz
sahf
xchg
or
sub
aad
adc
je
add
xchg
daa
inc
or
and
jge
jge
lods
jb
adc
mov
xchg
push
out
xchg
jno
fsubl
mov
or
lcall
cwtl
mov
mov
push
movsl
inc
pop
inc
pop
mov
adc
inc
xor
ss
mov
clc
fists
xchg
pushf
cmpb
ret
sti
adc
ss
call
cmp
mov
notb
xor
jno
xchg
lcall
sets
pop
int3
xor
inc
pop
shrb
xchg
push
or
data16
xchg
mov
and
or
inc
arpl
out
sub
aam
ret
adc
gs
inc
adc
cmp
popa
mov
sbb
fldcw
xor
imul
jns
mov
add
push
fdivr
outsb
aas
jecxz
fs
les
add
jg
out
test
insb
sarb
sub
cmc
arpl
iret
adc
into
sub
cltd
insb
mov
fdivrl
out
arpl
dec
add
xchg
sbb
test
push
call
je
repnz
or
popa
jb
pop
pop
jb
pop
mov
mov
inc
cmpsb
jnp
fwait
xor
lods
push
aas
add
pop
mov
mov
cmpsb
stc
add
ljmp
std
add
pop
sbb
mov
movsb
dec
imul
and
fldcw
and
push
idiv
fwait
jmp
lahf
mov
cmp
dec
cmp
test
outsb
mov
imul
std
mov
adc
jae
jge
es
jl
push
pop
fcompl
adc
pushf
js
jmp
sbb
sub
inc
add
push
pop
inc
out
pmaxsw
xlat
mov
add
pop
lret
push
inc
ficompl
cltd
xchg
rorb
nop
cmp
adcb
in
lahf
xor
or
jge
repnz
ret
hlt
inc
dec
int3
int3
pop
jae
arpl
mov
fldt
cmp
sbb
test
dec
add
xchg
pop
outsl
cmp
and
hlt
repz
xchg
fs
sub
mov
mov
dec
inc
adc
gs
rcr
xor
adc
jecxz
mov
xor
sbb
into
popf
cld
imul
xor
shll
fistl
outsl
jp
jo
fs
ror
aas
rorl
add
icebp
test
in
cmp
xor
pop
push
fmull
push
add
mov
sbb
fiadds
push
rcll
add
imul
jp
mov
sub
fs
pop
decb
and
mov
inc
push
icebp
dec
sbb
shll
cld
fs
jae
stc
xor
lahf
mov
arpl
rorb
aam
outsb
push
hlt
scas
mov
cltd
inc
pushf
movsl
call
hlt
inc
bound
mov
scas
aaa
loop
cmp
cwtl
mov
ljmp
inc
fnstenv
adc
hlt
push
and
mov
sbb
call
push
jnp
jmp
sub
in
mov
xchg
adc
and
jecxz
pop
incl
sub
lahf
sbb
sti
mov
test
adc
ret
fucomip
mov
shl
movsl
std
inc
adc
xor
mov
pushf
cli
xor
aam
mov
push
sub
cltd
push
je
test
in
mov
sub
in
jmp
testl
fs
cltd
js
xor
popf
push
iret
fdiv
and
test
pop
in
sub
sbb
jl
push
in
dec
outsb
ficomps
lret
mov
add
sbb
bound
pop
adc
pop
or
or
cltd
pop
insl
inc
ret
inc
sub
push
inc
cmp
sub
int3
sub
add
xchg
fcomps
popf
mov
fdivr
sbb
inc
test
movsb
std
sbb
and
xchg
and
std
cmpsb
mov
dec
mov
mov
stc
sub
stos
mov
mov
sbb
jnp
adc
mov
pop
pop
rcrb
dec
loope
add
jbe
mov
mov
mov
cmpsl
setb
cmpsb
lret
sub
pop
cld
sub
ds
xchg
lods
push
mov
inc
in
or
jl
mov
or
jns
add
ja
mov
xchg
adc
inc
add
aad
and
test
testb
rolb
jmp
push
and
fistl
xchg
mov
cltd
lds
test
out
push
mov
lds
or
push
jecxz
xor
sub
pop
cmp
cwtl
jecxz
jbe
xor
push
inc
test
mov
xor
cld
sahf
xor
add
mov
adc
add
sbb
gs
add
fs
pusha
dec
scas
iret
ja
dec
jae
xchg
mov
dec
push
movsb
push
das
jmp
out
inc
adc
pusha
rcrb
jecxz
jg
xchg
cmp
repz
out
test
inc
jne
push
inc
lock
push
aas
out
sbb
jge
lods
test
lods
pop
and
test
shr
dec
pop
ret
sub
xchg
mov
mov
mov
aad
sbb
push
dec
stos
fisubrl
add
stos
dec
lret
add
pop
mov
lods
sarb
pop
iret
testl
into
popa
cltd
insb
nop
cmp
fsub
push
sub
mov
add
scas
out
xor
or
lods
inc
je
fs
add
mov
mov
mov
ficoms
fcomps
xchg
and
enter
negl
mov
add
imul
pop
push
cmp
jbe
jmp
into
jmp
mov
sbb
inc
icebp
inc
dec
sub
in
fnsave
lret
xor
sub
hlt
mov
jbe
mov
pusha
xchg
mov
loopne
add
push
jmp
xchg
hlt
sub
adc
xor
lcall
dec
addr16
mov
ret
and
mull
or
sbb
mov
scas
xchg
jb
cmp
stos
jo
pushf
stc
jns
fcmovu
icebp
dec
out
pop
test
in
mov
out
loope
jno
scas
loopne
sti
fcoms
hlt
cwtl
sbb
mov
lcall
mov
fdivs
push
cmp
add
les
inc
add
and
jecxz
push
loop
jle
mov
push
xor
dec
add
jnp
das
fidivrs
jp
ret
and
xchg
sub
shl
push
in
lods
aaa
dec
fcomps
fiadds
pushf
xorl
inc
xchg
inc
xchg
int3
pop
cmp
mov
inc
add
cmp
cmp
out
imul
sub
jmp
xchg
adc
cmp
inc
fwait
jmp
addr16
inc
dec
add
xchg
and
int3
dec
pop
jmp
cmp
int
ret
mov
sbb
dec
outsl
aaa
xor
clc
add
mov
shl
adcb
cmp
out
xchg
mov
les
test
cltd
dec
enter
in
pushf
adc
cmc
add
jnp
in
mov
xchg
stos
rol
aad
shlb
adc
dec
fldenv
sbb
mov
test
mov
cltd
inc
popl
or
arpl
cmp
enter
adc
add
pop
push
xchg
jecxz
and
push
fisubs
add
aas
shl
das
add
data16
stos
push
sub
arpl
lahf
cltd
leave
in
push
enter
outsl
xchg
or
cld
dec
xchg
mov
test
adc
lret
fisubl
mov
lods
lret
arpl
inc
push
cltd
jp
loop
xchg
and
cmpsb
add
inc
daa
inc
mov
pop
add
push
movsl
dec
test
lods
add
mov
jle
dec
mov
insl
sbb
cmpb
int3
pop
jmp
in
cmpb
pop
sbb
cltd
cs
out
jb
int3
icebp
hlt
inc
mov
push
std
test
mov
fsubr
sub
test
jmp
mov
movsb
mov
mov
jmp
loop
add
fs
loopne
dec
jno
mov
sbb
imul
loopne
adc
rolb
scas
leave
push
jnp
out
jl
cltd
fists
divb
je
call
and
dec
adc
dec
xchg
mov
add
out
push
and
fs
int3
fnstcw
jmp
aad
add
lret
sub
in
cltd
into
test
cli
inc
push
jge
mov
jbe
aas
sub
imul
cmp
add
jne
inc
in
arpl
pop
outsl
scas
mov
jne
fwait
mov
jae
inc
mov
aas
lcall
jns
aas
pop
push
bound
lods
jmp
mov
mov
insb
or
lcall
xchg
pop
outsb
pushf
sbb
sub
sbb
test
aad
push
leave
out
cmc
jg
push
dec
dec
lret
mov
mov
xlat
enter
or
loopne
pop
pusha
pop
sbb
shlb
add
clc
out
aad
mov
push
std
sbb
inc
fs
insb
mov
pop
aaa
mov
inc
int
pop
jb
mov
jo
and
outsb
lock
mov
xor
push
mov
mulb
orl
jae
cmc
or
jmp
test
and
ret
bound
popf
push
loope
xchg
push
testl
shrl
cltd
sahf
rcll
das
in
cltd
ret
cmpsl
dec
adc
pop
fsubl
imul
fs
fmuls
loop
test
or
int
std
sub
xor
pusha
push
fsubl
push
in
xchg
dec
sub
push
and
cltd
pop
rcll
test
inc
stc
xor
sbb
add
lods
aam
xchg
xor
mov
xchg
pop
test
icebp
sahf
adc
jl
dec
out
fstpt
shll
mov
mov
sarb
dec
xchg
and
lock
out
push
push
inc
rcrl
dec
fwait
popf
push
sbb
cmp
mov
xor
sub
icebp
leave
dec
mov
sub
xlat
js
int
jecxz
hlt
hlt
mov
mov
mov
int
or
jbe
mov
push
jno
inc
jecxz
lahf
jbe
cmpsb
xchg
jbe
sub
lret
dec
daa
cld
push
adc
and
mov
dec
subb
add
push
shlb
jb
mov
add
dec
or
test
jne
mov
sahf
push
add
inc
xor
daa
xlat
ret
xchg
sbb
and
decl
sbb
xor
dec
cwtl
adc
push
mov
testb
sub
ret
in
mov
jae
or
dec
pop
inc
lcall
jns
ret
push
les
das
cmpsb
mov
out
jl
test
out
in
inc
sbb
subl
imul
cmp
mov
pop
scas
and
sbb
ja
cwtl
cmp
fs
xchg
pop
arpl
lea
lods
fnstenv
js
in
es
push
fisubl
jp
js
cmpsb
jb
pushf
stc
and
movntps
filds
or
adc
popf
and
ret
or
cli
out
arpl
popf
cltd
mov
cmpsb
mov
jbe
jnp
xchg
je
dec
adc
outsb
call
fmuls
jl
fbld
addr16
lcall
or
lods
mov
mov
cli
nop
and
popf
xchg
mov
scas
xor
cmp
inc
dec
mov
je
stc
adcb
pop
jp
repnz
loope
push
mov
insb
xor
push
mov
xchg
or
test
dec
mov
xchg
xchg
pop
push
and
aaa
ret
test
jbe
cmp
inc
mov
arpl
mov
into
add
ljmp
xlat
lahf
ret
fnstcw
dec
jb
lds
clc
sbb
lret
inc
cmp
rclb
push
xor
lcall
xor
out
adc
rol
cs
add
adc
sbb
mov
xchg
out
mov
add
jge
pop
mov
subl
fcomi
jge
mov
lods
cmp
adc
fdivrs
pop
inc
dec
out
inc
cmp
fistpl
std
scas
arpl
fmulp
out
enter
aas
push
jbe
lea
popa
ds
fbstp
fistpl
dec
popa
and
push
xor
adc
mov
mov
and
inc
and
mov
adc
xchg
nop
mov
clc
inc
inc
push
notb
pop
mov
js
mov
add
push
lock
notl
cmp
in
jbe
insb
and
jae
popf
sub
mov
rorb
sub
and
mov
or
test
lret
fisubrl
lods
insl
daa
daa
pop
loopne
imul
jge
lods
sub
mov
pop
pop
cmp
shlb
push
or
push
int3
shlb
mov
sub
dec
out
xchg
push
or
aam
fildll
xchg
mov
repz
mov
pop
movsb
mov
movsb
popa
mov
into
stos
out
jle
dec
jmp
pop
lahf
orl
pop
mov
push
and
cmc
int
iret
sbb
cld
insb
add
jle
jecxz
inc
fwait
pop
repz
sarl
push
jg
mov
in
scas
rorb
aam
test
out
jno
arpl
xchg
outsb
adc
fwait
and
daa
dec
mov
stos
pop
sarl
rclb
pop
test
in
ss
iret
lods
inc
mov
mov
lahf
in
inc
push
jmp
test
das
inc
scas
sbbl
push
add
xor
mov
and
add
adc
cmp
out
arpl
pop
or
adc
jmp
jl
leave
and
decb
and
pushf
jb
sub
sbb
pop
pushf
jecxz
bts
pop
xor
push
push
aas
mov
or
iret
inc
test
pushf
inc
mov
out
adc
icebp
sub
mov
jmp
in
adc
mov
shr
clc
xchg
gs
pop
jl
clc
lock
mov
push
pop
fdivs
shll
pop
mov
cmp
push
ret
sbb
cmp
leave
leave
sar
ret
xchg
push
push
sub
sub
ficoms
pop
cld
push
mov
leave
stos
lds
mov
push
daa
loopne
std
add
jle
jno
lcall
jns
test
mov
sub
loopne
lret
cmpb
insl
test
pop
and
es
mov
mov
out
rcl
pop
in
bound
push
xchg
movl
mov
xchg
cmp
xor
dec
mov
out
loop
dec
mov
pop
push
push
gs
pop
js
xchg
jge
dec
sbb
sti
addb
subb
popf
leave
test
xchg
movsb
popf
pop
in
leave
out
fstpl
neg
lds
pop
xor
cli
int3
cmp
out
and
pop
ret
mov
xchg
adcb
pop
lahf
mov
pop
lret
mov
xor
xchg
sub
lods
add
addb
aad
push
cmp
in
xor
vpsllw
mov
or
adc
pop
das
pmuludq
mov
add
addr16
push
mov
or
test
cmp
adc
mov
or
or
sti
pop
push
shl
mov
mov
mov
xor
rcr
jbe
push
jmp
loope
test
dec
inc
adc
push
dec
imul
add
sbb
sub
addl
cs
push
rcrl
and
ja
mov
cmc
jecxz
fistps
push
test
sti
aad
das
pop
add
into
push
mov
jb,pn
adc
cmpsl
les
fildll
xchg
dec
pop
or
or
jbe
lea
stos
or
xchg
leave
leave
xor
aad
enter
fwait
nop
xchg
fiaddl
pusha
pop
mov
mov
arpl
mov
in
pop
test
sub
jb
mov
cltd
sub
mov
addl
dec
xlat
sbb
adc
stc
mov
xor
dec
inc
scas
lahf
out
mov
xor
cli
out
and
ret
fs
mov
pop
out
lret
andb
mov
outsb
enter
in
stos
and
xor
loope
ret
mov
sti
ljmp
pushl
das
cmp
add
or
out
mov
mov
cltd
mov
int
or
pop
xchg
jg
mov
int
movsb
lcall
andl
add
sub
mov
out
jecxz
cmc
inc
mov
pop
out
das
loopne
lods
cmp
out
movsb
jl
dec
sbb
sbb
inc
push
jp
mov
enter
nop
and
inc
or
xchg
sbb
js
xor
pop
inc
add
or
mov
insb
pop
adc
shll
and
sarb
mov
sbb
sub
push
push
int
xchg
or
xchg
inc
cld
xor
jae
mov
xchg
jmp
int3
push
sbb
shlb
fwait
push
jp
pop
repz
jno
inc
lods
lret
orb
xor
cmpsb
xchg
cmp
mov
fildll
insl
push
xor
imul
cmpsl
clc
sbb
mov
idivl
and
sbb
lahf
push
iret
mov
rclb
sahf
ljmp
ljmp
ja
add
fistpl
mov
add
push
mov
testl
in
mov
lret
cmp
leave
dec
pmovmskb
mov
or
mov
ret
lret
jmp
lret
jecxz
popa
jb
insb
repnz
mov
sbb
mov
mov
pop
mov
mov
imul
mov
or
outsb
cmp
pop
roll
dec
loope
sub
jp
scas
xlat
jge
adc
cmpsb
ds
inc
push
enter
fistl
adc
xchg
cmpsb
lret
std
nop
mov
pop
sbb
xor
pusha
inc
mov
push
int
outsb
outsl
stc
adc
enter
lret
lret
lods
stos
out
shrb
cli
fildll
lret
jnp
push
daa
ljmp
xchg
std
mov
xlat
fildll
xor
xchg
ds
sbb
mov
mov
test
lret
enter
add
and
sub
cmp
xchg
mov
xchg
or
mov
dec
dec
jo
ss
mov
mov
sbb
xlat
jb
sbb
inc
inc
movsb
mov
mov
inc
les
pushf
push
add
sub
icebp
shl
fdivrs
or
test
sub
insb
fwait
arpl
cmp
rclb
inc
mov
cli
lock
pop
push
inc
clc
jl
sub
pop
dec
fcmovb
aad
xchg
sub
sub
jge
or
mov
aad
dec
dec
push
shll
stos
lds
mov
mov
aas
and
repz
mov
mov
orb
jp
das
dec
ficoms
adc
aam
mov
orb
scas
push
mov
cwtl
les
out
std
cmpsb
jle
sbb
push
jno
pop
mov
jnp
pop
fsubs
push
rol
ret
sub
imul
hlt
icebp
sub
notl
stos
and
ret
push
and
add
fnstenv
cmp
pop
mov
test
mov
push
das
sbb
mov
cmpsb
int
sub
mov
xor
aad
mov
cmpsb
pop
movsl
dec
xchg
outsl
push
cmp
push
int3
pop
add
or
mov
dec
fsubrl
push
test
or
popa
cmpl
push
mov
push
cmp
popf
sub
sub
dec
push
sub
xor
fnstcw
sub
movsb
lcall
insb
xchg
insl
mov
in
adc
test
xchg
or
dec
stos
outsb
cmp
push
xor
ror
adc
insl
movsl
in
addb
into
sub
cmp
push
add
push
js
adc
mov
adc
shlb
test
mov
pop
sub
scas
int3
loop
imull
xor
repz
inc
jg
adcl
out
or
in
icebp
adc
jge
lret
cmp
mov
xor
adc
mov
cld
jb
jl
jno
xor
jp
xlat
ss
add
cmp
dec
push
scas
xchg
out
mov
je
dec
cmpsb
hlt
and
cld
add
sub
imul
mov
jg
add
dec
mov
adc
xor
lock
mov
aam
test
and
mov
or
jle
dec
test
fs
adcb
mov
push
dec
orb
xchg
lds
mov
aaa
in
xchg
xchg
std
incb
aas
stos
xchg
mov
jmp
pcmpgtw
call
rolb
jle
or
das
call
fs
outsb
sub
jb
pop
dec
or
mov
sarl
or
jnp
and
mov
out
push
sub
cmpl
mov
imul
xchg
inc
pop
cmp
test
out
add
add
cmp
lea
das
cmp
xchg
lock
mov
mov
loop
sti
inc
jp
fsubl
or
or
mov
cltd
push
sbb
ljmp
iret
repnz
mov
mov
test
sahf
push
fildll
dec
push
mov
int
inc
pop
fs
mov
and
popl
add
mov
cmp
dec
xchg
inc
cli
andl
repz
ljmp
lods
xor
test
jns
xchg
js
sbb
or
out
roll
outsb
jg
and
or
dec
addr16
push
jp
push
popw
pop
jb
orb
out
sbb
jmp
push
scas
and
enter
dec
inc
jecxz
mov
imul
push
mov
je
sub
mov
jns
pop
pop
lods
out
outsb
mov
cli
cltd
dec
pop
fcoml
xor
das
mov
adc
pop
inc
pushf
notl
dec
fidivrl
lock
jmp
jo
dec
cld
mov
sbb
mov
xchg
cmp
inc
stos
notb
mov
je
add
aam
mov
sahf
dec
mov
jp
mov
mov
int
sub
pop
xchg
and
xor
notl
dec
push
dec
add
inc
ss
pop
dec
jmp
dec
xchg
xor
inc
sbb
imul
leave
rolb
xlat
icebp
inc
xor
jns
mov
push
rep
rcr
sbb
xchg
insb
nop
cmpl
and
movsb
pushf
int
pop
cli
inc
sbb
cmp
shll
jg,pn
popw
andl
repnz
mov
test
out
dec
stc
push
mov
hlt
rcr
push
sub
inc
xor
fwait
mov
and
push
lea
or
cmp
ss
jp
scas
add
jns
pop
rclb
loopne
nop
hlt
xchg
dec
addr16
xchg
jb
scas
leave
cltd
sarl
popf
pop
sub
xchg
xor
mov
add
addr16
pop
pop
add
lcall
xchg
mov
outsb
mov
cmp
mov
out
add
adc
lea
test
mov
pop
xchg
orb
xor
cmp
adc
cltd
or
dec
jae
push
xor
sahf
dec
mov
inc
mov
sti
jl
cmc
cmpsl
les
pop
xchg
insl
xchg
and
stos
insb
add
hlt
pop
paddsb
shr
gs
fsubr
mov
mov
xchg
sbb
dec
pop
movsb
shlb
lcall
ja
scas
imul
mov
aaa
test
jae
fistpll
inc
les
or
jg
xchg
mov
mov
jmp
leave
adc
call
hlt
adc
pop
jle
dec
rcr
es
movsl
and
sub
cwtl
mov
lods
or
add
mov
and
push
xchg
jbe
cli
cmp
xor
stos
cmc
pop
rorb
fcomi
pop
ljmp
jle
out
push
fwait
xorl
in
xchg
push
adcl
pop
jl
inc
or
jge
test
pop
ds
out
mov
loopne
add
into
xchg
ret
dec
outsl
add
cmpl
and
pushf
xchg
out
outsl
pop
ds
imul
dec
insl
mov
jecxz
xor
repz
imul
xor
xor
mov
imul
stos
fbld
insb
mov
sub
out
inc
adc
movsl
dec
pop
fistpl
pushl
push
jbe
cmp
xchg
mov
mov
leave
mov
push
loopne
fldt
lret
dec
mov
icebp
aaa
xor
cmc
dec
jae
add
sub
mov
popf
lock
je
ret
addr16
ret
gs
scas
pop
mov
xlat
xchg
jg
sbb
mov
pop
xlat
dec
jmp
filds
push
add
mov
xchg
xchg
inc
jae
aas
loope
inc
push
push
or
mov
push
fstps
insb
mov
inc
repnz
mov
mov
mov
fwait
mov
push
adc
loopne
cmp
movsl
int3
push
xchg
or
inc
rorl
sbbl
pop
cmpsl
cmc
cmpl
shr
fisubs
mov
aam
xor
jb
insl
out
es
adc
push
cld
adc
addb
inc
fisttpll
ja
loope
addl
xchg
in
call
jle
insb
and
mov
mov
push
ja
mov
lods
push
dec
mov
pop
cmp
ds
sub
jmp
mov
pop
loop
sbb
jo
pop
movb
clc
lock
jns
jne
pop
dec
adc
in
xorb
imul
sbb
inc
icebp
stc
sub
cmc
je
scas
cmp
xchg
xchg
cmp
add
fsubs
mov
in
mov
out
test
loop
cs
sub
ljmp
push
inc
aaa
cltd
mov
into
cld
fstl
dec
repnz
mov
dec
mov
inc
cli
mov
orl
xchg
fimull
add
ret
jo
adc
imul
ja
push
dec
test
dec
xchg
pop
ds
lds
jg
mov
xchg
out
das
or
lea
and
xchg
pop
and
nop
pusha
inc
mov
pop
push
imul
jne
shlb
sti
sbb
or
pusha
mov
movl
xor
cmp
push
sub
or
adcb
and
inc
mov
adc
lret
cmp
in
clc
pop
cmp
aaa
mov
outsb
add
inc
xchg
sbb
mov
jns
adc
pop
adc
mov
js
in
jbe
inc
jns
cli
cli
pop
mov
jge
inc
add
pop
mov
gs
xchg
or
xchg
xor
imul
cltd
in
add
adc
cwtl
pop
mov
cld
in
in
lods
fldcw
add
xchg
clc
imul
xor
mov
ss
mov
ja
lock
rep
push
pop
es
sbb
out
mov
sub
mov
adc
and
sar
frstor
lret
sub
mov
xchg
shlb
xchg
add
shl
and
lcall
mov
push
sbb
out
adc
xchg
mov
movsl
daa
push
aas
mov
sub
pusha
jle
iret
sub
adc
mov
add
incb
les
test
jo
cmp
cmp
int
mov
inc
xchg
add
push
pop
stos
jl
fldt
aas
mov
xor
loop
jl
or
pop
pop
add
mov
xor
cmc
stos
sub
cltd
enter
cltd
in
mov
bound
mov
dec
sbb
xor
xchg
enter
inc
movsl
call
inc
daa
push
aas
inc
les
pushf
popa
out
mov
inc
push
ret
sub
mov
cmp
test
adc
mov
test
cld
push
icebp
cmp
mov
xchg
cmp
inc
inc
adc
stos
pop
and
mov
mov
cmp
add
cld
mull
pop
test
inc
daa
add
ds
jae
enter
aad
mulb
rcrl
out
jecxz
fdecstp
test
mov
dec
outsb
mov
rcrl
mov
pop
outsl
jno
popa
jp
xchg
mov
popf
adcl
push
fwait
xchg
sbb
cld
push
mov
push
push
adc
stos
xor
repz
sbb
ror
inc
mov
shll
das
cmp
popf
or
sbb
cli
jb
jno
xchg
pop
mov
ficomps
adc
repnz
mov
xlat
in
xchg
inc
cwtl
nop
in
imul
sbb
in
lcall
fidivs
scas
out
mov
jp
mov
push
sub
xor
ret
adc
in
jp
mov
and
jp
adc
loopne
or
jl
push
cld
jns
cmovle
cmp
jg
bound
sbb
je
inc
cmp
loopne
and
jg
mov
sub
es
popf
dec
cmpsb
xor
pushf
shrl
cmpl
outsb
mulps
mov
xchg
jno
js
push
cli
addl
adc
jo
add
scas
ljmp
mov
xchg
cmp
mov
dec
and
inc
fsts
push
add
pop
xchg
and
push
add
nop
gs
xlat
pop
jo
lock
xorb
mov
shll
xlat
test
loope
stos
sti
int
xchg
xchg
mov
cmpl
in
mov
or
sub
jmp
sub
pop
leave
and
adc
adc
mov
sub
pop
cli
popf
lea
test
sub
pop
jnp
mov
push
cmp
adc
add
pop
outsb
jae
test
ficompl
loop
mov
mov
mov
ret
shll
lret
cmpsl
sbb
mov
cmp
mov
ljmp
pop
jns
es
pushf
sbb
inc
mov
and
sbb
jg
jo
mov
jmp
mov
dec
xchg
lret
int
mov
or
in
cli
fstpt
pop
subb
ja
loope
dec
cli
and
mov
push
push
es
push
and
add
dec
shrb
mov
jb
loope
jle
fs
clc
fsubr
ss
pushaw
inc
add
fwait
pop
dec
sbb
mov
testl
jge
cmp
mov
mov
jae
jbe
xor
inc
orl
ficoml
fadd
push
pop
shrb
sbb
adc
pop
les
sbb
pop
cltd
ss
scas
push
loopne
scas
mov
neg
xlat
sbb
cs
ss
data16
push
jecxz
jle
push
add
insb
lret
int
jbe
ss
fidivrs
jo
jle
adc
inc
arpl
xchg
movsl
popf
cmp
js
daa
cmp
sub
cmp
fbld
xchg
lock
push
jbe
call
or
inc
cld
xchg
mov
adc
jb
push
fdivl
sbb
and
jecxz
jo
cmp
scas
test
and
sub
in
push
loope
or
cli
outsl
das
lcall
in
pop
inc
jmp
cmp
push
aam
loop
sahf
sbb
jp
fwait
repnz
jno
dec
adcb
fwait
pop
push
rorl
fucomp
push
sarl
add
in
add
scas
fs
dec
adc
cmp
or
or
add
dec
stos
pop
inc
sub
repnz
sbb
sub
stos
add
out
xchg
rcrl
pop
pop
mov
push
push
scas
enter
xchg
adc
cwtl
lcall
out
ret
and
mov
cmp
mov
inc
inc
dec
adc
cmp
out
sbb
fwait
das
or
cmp
out
jg
pop
fistps
mov
ja
inc
or
nop
outsl
lret
aad
fcoml
ja
push
mov
dec
imul
pop
push
nop
sub
xor
pusha
pop
int3
lds
test
rcrl
xor
or
sub
inc
stos
jns
in
jmp
pop
outsl
jp,pt
lods
aam
xlat
out
sub
lret
nop
cmp
pop
jbe
loope
jo
stos
jns
push
imulb
clc
iret
lds
inc
mov
sbb
jbe
cmc
lods
sbbl
mov
andb
bound
stos
and
popf
je
xor
cltd
push
test
out
stos
es
add
lahf
adc
push
aad
aam
out
repnz
imul
test
cmp
mov
cmp
fldl
lahf
pushf
ljmp
movsl
aas
jae
out
sbb
lods
cmp
lret
adc
shll
nop
dec
jb
inc
ja
inc
inc
mov
pop
pushf
prefetch
out
rol
add
sti
and
clc
bound
adc
inc
ret
std
pushf
push
push
inc
js
mov
inc
aad
lret
sbb
jmp
shlb
cmp
cltd
test
inc
sbb
outsb
mov
stos
pop
scas
dec
xor
lods
shrd
shlb
lret
test
lar
cli
add
scas
xchg
or
nop
add
pop
ds
insb
out
push
pop
and
xchg
ds
xchg
daa
jns
insb
sub
dec
push
movsl
xchg
add
sahf
lret
sbb
mov
xor
in
sbb
ja
add
xchg
inc
jge
xchg
loope
shrb
lea
cs
mov
aas
divl
mov
mov
jns,pt
push
mov
mov
mov
loopne
and
rorl
rcll
pop
lahf
jecxz
stos
mov
cli
adcl
mov
leave
mov
jg
mov
gs
fcoms
adc
rcl
xchg
cld
mov
jge
repnz
jle
sub
push
and
push
adc
mov
sub
and
cwtl
stos
mov
adc
add
mov
test
sahf
add
inc
subl
lock
flds
mov
xchg
adcb
ljmp
dec
gs
dec
pushf
dec
popa
dec
cmp
sub
movsb
lahf
pop
xchg
lret
cmc
lcall
adc
mov
cli
dec
aad
mov
mov
sti
mov
dec
cmp
cmpsl
cmp
pop
outsl
mov
movsb
push
push
add
xlat
call
in
or
std
xlat
and
mov
imul
je
stos
inc
xor
add
lea
and
mov
fwait
test
jnp
cmp
nop
mov
mov
xor
dec
lock
inc
clc
inc
sub
movsb
addb
inc
xchg
pop
popa
sub
hlt
les
push
rol
jg
enter
xchg
jns
xlat
cwtl
mov
inc
adc
les
xchg
pop
lcall
lahf
sbb
pop
xchg
sbb
pop
and
movl
bound
hlt
pop
ja
jnp
and
push
cmp
dec
cmpsb
mov
arpl
jae
cmp
sbb
aas
sbb
lcall
jb
mov
inc
push
jp
jo
push
pop
int3
popf
pop
cmp
cmc
cwtl
out
mov
sbb
imul
mov
and
clc
and
stc
mov
push
outsb
mov
push
dec
aas
push
adc
nop
lahf
adc
es
sbb
test
dec
mov
or
add
jmp
mov
push
xor
fstpl
fsubrs
mov
push
cmp
aas
push
pop
pop
mov
sbbb
in
fwait
sbb
or
fcompp
cmp
repz
push
scas
insb
xor
lea
sbb
sti
or
pop
js
fsub
popl
jmp
ja
test
jle
sarl
sub
cs
sub
bound
pop
fistpl
pusha
sbb
jecxz
xchg
and
jns
rcrb
sti
mov
adc
movsl
xorl
cmp
dec
mov
sbb
jp
subl
xlat
pop
int3
sti
lcall
pop
mov
mov
sbb
mov
push
ja
les
repz
mov
inc
hlt
cmpsl
mov
jns
lea
mov
enter
lahf
xchg
dec
inc
add
test
xor
sti
xor
lahf
or
in
divb
add
mov
inc
imul
cmp
cmpsl
adc
mov
xchg
mov
cmp
test
out
gs
pop
ljmp
fsubrs
negb
pop
ret
and
vmwrite
cs
jo
js
sbb
mov
movsb
dec
out
xor
push
jb
or
and
lret
inc
xor
into
mov
hlt
iret
push
je
xchg
xchg
or
sbb
mov
dec
xchg
enter
cwtl
clc
gs
sbb
xchg
xchg
mov
add
inc
or
pusha
push
push
aas
std
or
das
add
xor
mov
rcrl
lcall
repnz
cltd
xchg
cwtl
iret
add
ror
fcmovbe
jbe
xlat
mov
jmp
inc
lds
lea
sbb
sbb
lcall
idiv
xor
jge
popf
das
clc
mov
cltd
sub
cmp
in
and
or
add
inc
test
lock
cmp
push
arpl
jmp
ljmp
xchg
enter
lahf
jle
pushf
test
sub
mov
es
xor
movsl
jecxz
adc
cli
sahf
or
or
xor
cmp
loop
pop
push
adc
jnp
push
daa
adc
adc
dec
mov
inc
sub
dec
ds
xorl
fdivr
hlt
aaa
inc
repnz
dec
and
add
aas
xor
sarl
jo
jo
jns
aas
dec
lea
gs
insl
xor
inc
fwait
jp
xchg
cmp
jae
push
shll
js
bound
xchg
mov
mov
arpl
lahf
mov
sbb
ljmp
and
jp
and
pop
mov
adc
sub
lcall
xor
adc
daa
push
lret
pop
cmp
cmp
xchg
inc
xchg
fimull
mov
in
xchg
repnz
pop
test
or
pushf
aad
mov
dec
sbb
outsb
out
scas
icebp
and
mov
adc
arpl
out
fbld
sub
test
mov
les
cmp
jne
fs
add
xchg
pop
pop
add
mov
jo
sbb
dec
xor
and
xchg
mov
iret
dec
fisubl
and
out
push
push
mov
push
subb
scas
xchg
rcll
aam
fdivr
sub
lds
fimuls
and
dec
fmuls
add
mov
loop
xchg
push
rorl
outsl
fistl
es
icebp
cmp
xchg
fldl
cmp
push
sbb
inc
xchg
daa
incb
adc
ljmp
inc
fisubrl
adc
insb
insb
adc
cmp
loop
sub
inc
aad
sub
roll
aad
pop
xor
fcoms
rolb
sti
call
sarb
mov
mov
mov
mov
inc
mov
mov
dec
daa
jmp
dec
mov
mov
std
pop
xchg
out
ret
test
mov
sub
xchg
xor
or
mov
pop
fs
pop
inc
pusha
mov
add
ret
inc
or
insl
rcl
and
aam
int3
xchg
and
ret
push
insb
jecxz
push
jp
ja
cmp
fs
aad
ss
sbbl
rcll
cs
mov
or
jmp
mov
test
xorl
bound
pop
pop
out
mov
mov
mov
test
nop
in
dec
push
insb
cmpsb
insb
xchg
xor
dec
leave
idiv
mov
mov
jno
cvtps2pd
push
pop
pop
dec
push
push
pop
lret
push
test
jbe
movsb
data16
in
mov
movsb
mov
mov
inc
adc
fwait
clc
push
mov
mov
lock
mov
imul
cmp
outsl
sbb
lods
enter
mov
out
jp
in
and
inc
sbb
sub
cld
stos
and
mov
xchg
dec
orb
gs
mov
cmp
jbe
mov
or
movsl
rcrb
imul
push
pop
idiv
mov
xor
stos
gs
mov
ja
insl
pop
and
sahf
stos
shrb
inc
push
jb
mov
jg
xor
mov
add
loope
jnp
rcrl
mov
sub
daa
dec
xchg
fdiv
popf
xchg
push
rcrb
std
add
mov
call
xlat
sub
cmpsl
mov
and
mov
dec
imul
or
rcll
sahf
jg
mov
lods
and
cld
mov
mov
lock
pop
das
lods
jb
xchg
sub
das
cmp
pusha
pop
inc
pop
pop
and
inc
ljmp
pop
jmp
sbb
jno
ljmp
adcb
stos
popa
out
adc
in
movsl
adc
adc
jp
cmc
in
in
stos
xchg
add
dec
hlt
push
cld
je
out
cs
rcl
std
jecxz
push
bnd
inc
mov
sub
inc
rcl
fs
lahf
outsb
sarl
and
lcall
push
add
out
shlb
lea
mov
insl
adc
adc
imul
xchg
or
les
pop
jge
lahf
xor
lock
mov
xor
mov
dec
loopne
push
aas
sarl
icebp
pop
rep
mov
mov
xor
sub
cmp
dec
fdivs
push
xor
lahf
mov
imul
sub
pop
cmc
sbb
xor
ja
dec
dec
imul
fnstcw
inc
je
mov
pop
jb
fwait
stos
enter
lods
sub
hlt
cmp
dec
dec
iret
adcl
adc
test
lret
or
pop
scas
xchg
fcomps
and
and
mov
imul
jbe
popw
fistpll
mov
mov
das
add
test
sar
mov
mov
stos
jne
push
adc
cmc
mov
std
mov
std
lods
orb
sbb
popa
push
inc
xchg
in
test
xchg
or
sub
arpl
adc
jle
sub
lahf
call
data16
in
push
mov
pop
addb
repz
sub
in
mov
mov
ss
scas
loopne
xchg
scas
push
sbb
js
push
lea
sub
fwait
js
adcb
inc
es
clc
sub
mov
int
jl
clc
fnstsw
cmp
aaa
pusha
inc
lea
bound
pusha
cwtl
cmc
jo
inc
inc
lcall
jp
jp
out
mov
adc
mov
push
jmp
jp
mov
jl
inc
movsb
inc
and
adc
dec
fnstenv
mov
pop
pop
std
mov
xchg
pop
loopne
aam
jecxz
push
dec
shll
pop
cmp
push
add
cmp
pop
and
mov
ds
pushf
xchg
fs
mov
cltd
mov
pop
addb
xchg
stc
fisubs
popf
mov
fdivrp
sarl
cmp
neg
js
paddusb
pop
pop
dec
test
xor
jns
mov
jae
sub
or
xor
adcl
loopne
lret
and
cli
mov
rorb
test
inc
test
cld
sahf
mov
outsl
dec
jne
ds
sub
lret
pop
mov
or
add
repnz
pop
dec
or
or
lds
and
mov
sarb
cmpsl
dec
push
sti
lock
xchg
adc
mov
add
add
push
jnp
int3
out
mov
cmp
mov
mov
jbe
mov
inc
sub
outsb
enter
inc
sub
into
cmp
xor
mov
in
movsl
scas
or
outsb
mov
push
jecxz
inc
out
aam
cmp
or
rorb
mov
aad
jnp
stos
out
or
jl
out
lcall
ja
stos
lcall
push
sub
mov
pop
push
dec
jo
mov
jp
shlb
jbe
out
test
jns
mov
mov
into
push
pop
aad
xchg
clc
cmp
aaa
mov
pop
scas
ljmp
test
sbb
daa
or
pushf
mov
loope
js
xor
mov
shl
lods
fcmovbe
rol
pop
lcall
inc
fcompl
inc
daa
dec
cmp
mov
mov
mov
icebp
pop
mov
mov
cmp
push
addl
jp
lods
xor
rolb
xchg
lret
xchg
mov
ret
sbb
cltd
xchg
add
dec
lds
push
xchg
fbld
mov
fcmovu
push
cmp
daa
popf
and
clc
mov
sub
subl
cmp
jecxz
adc
push
jbe
add
gs
int3
ss
rolb
out
cmpsl
mov
push
enter
dec
shrb
test
push
in
and
jnp
aaa
xor
or
mov
movaps
mov
imul
loop
imul
in
xchg
cmp
mov
popf
sub
cld
jp
and
sub
daa
add
sub
push
sbb
push
xor
in
movsb
jno
repnz
iret
fcoms
gs
cltd
jo
mov
inc
mov
cwtl
imul
jecxz
aas
daa
outsl
mov
lret
push
xchg
xor
add
outsl
jg
cld
jno
das
dec
or
daa
jb
cmpsb
aas
cmp
adc
fwait
das
inc
xchg
mov
ficoml
adc
or
mov
nop
testl
and
insb
sub
iret
inc
imulb
mov
mov
shrl
push
scas
movl
in
jo
jle
push
bound
xchg
mov
sar
into
add
insl
arpl
jb
mov
rcll
cli
and
pop
push
mov
lods
mov
mov
fdivrs
push
addr16
xchg
or
mov
mov
cmc
adc
mov
aaa
inc
sub
cmp
push
shlb
in
rorb
inc
dec
and
inc
repnz
imul
ret
aas
jo
mov
sti
scas
arpl
lea
pop
jae
push
nop
sub
leave
mov
xor
je
adc
pushf
sub
dec
daa
or
js
pop
fnstcw
fdivrl
add
call
pop
rorb
dec
pushf
pop
lods
mov
loope
dec
pop
jecxz
jno
stc
sahf
in
loope
push
js
popa
scas
sbb
adc
div
es
fisttps
in
xchg
inc
pop
jns
xchg
or
inc
je
outsb
movsl
mov
out
pop
and
mov
bound
adc
jns
push
imul
dec
aad
pop
push
cmp
mov
enter
mov
inc
gs
adc
push
mull
pop
rcll
cltd
enter
sbbl
cmp
inc
int3
hlt
frstor
pop
cli
add
rol
pushl
mov
cmc
stos
popf
mov
mov
cmpsb
cmp
push
fwait
and
cmp
xor
mov
std
out
push
lods
ret
inc
in
or
push
pop
jae
mulb
mov
dec
dec
cmp
sbb
lock
push
dec
xlat
mov
pop
xlat
add
in
or
imul
leave
in
in
sbb
pusha
daa
rcrb
xor
scas
int
xchg
pop
dec
cmp
sub
aad
arpl
dec
pop
movsb
loopne
cmpsl
sbb
mov
cwtl
lods
add
div
imul
outsl
mov
sub
inc
inc
das
scas
cltd
xor
test
jns
xor
dec
je
xchg
clc
inc
push
loope
cmp
xor
jbe
jp
mov
in
rcrb
cmp
addr16
movhps
iret
mov
ds
out
and
iret
inc
dec
dec
aam
pop
jnp
fwait
sub
mov
push
dec
dec
scas
xchg
in
mov
call
lahf
mov
inc
fcomp
pxor
mov
cmp
mov
pop
orl
jl
cli
mov
mov
sub
pushw
cmp
and
adc
push
push
and
adc
sub
xchg
mov
loop
nop
js
out
lcall
adc
imul
cmp
aad
mov
mov
mov
xchg
idivb
pop
push
lods
shlb
repz
or
cmpsb
mov
imul
xor
insb
popf
ljmp
or
outsb
lods
add
iret
data16
pop
out
aas
and
inc
push
mov
lods
test
dec
xchg
subl
repnz
sbb
mov
fidivl
fcom
dec
stos
bound
es
cltd
inc
enter
dec
test
dec
mov
out
sbb
leave
addr16
cmpsb
jo
push
pop
es
xchg
adc
les
fwait
lea
mov
aaa
fsubp
mov
sahf
aad
loop
mov
jmp
add
test
or
out
cltd
pop
mov
imul
in
xor
cli
inc
popa
jne,pn
mov
mov
out
adc
cmp
clc
in
pop
sbb
orb
xlat
xor
cli
inc
xor
mov
mov
fwait
mov
add
aas
scas
loope
xor
pop
imul
inc
mov
adc
add
sbb
inc
fisttpl
add
or
mov
call
lret
push
imul
sub
jge
inc
adc
xchg
lods
xchg
mov
cmpsl
lcall
sub
and
inc
testl
int3
sbb
lods
int
repnz
push
lahf
outsl
xchg
or
lcall
cmc
sbb
sbb
stos
push
mov
test
xchg
std
stos
mov
jl
loope
mov
data16
jbe
lock
aas
test
jo
mov
neg
lret
fdivrp
jecxz
jge
mov
rcrl
cltd
stos
enter
pop
adc
ljmp
divb
dec
pop
mov
fs
nop
and
outsb
shlb
push
push
inc
je
hlt
push
call
into
in
mov
xor
daa
fdivr
test
cmp
pop
fildll
repnz
shrl
sbb
lods
adc
insb
aad
add
xor
inc
frstor
hlt
jno
dec
jl
pop
sbb
fwait
mov
loope
cs
pop
loop
decl
test
mov
lods
loop
jns
lods
jns
jns
outsl
and
addr16
lock
pop
inc
js
dec
push
pop
cmpl
divl
adc
fsts
sub
or
sub
or
out
fcmovnb
push
shrl
cmp
jle
pop
in
movsl
in
cmc
adc
imul
adc
insb
xchg
mov
sbb
and
lret
gs
ljmp
outsl
xchg
jmp
adc
push
pop
pushf
das
jecxz
xchg
cs
jno
and
lea
xchg
insb
outsl
add
xor
subl
pop
jbe
mov
xor
test
mov
jno
push
push
or
mov
movsb
hlt
fisttps
andl
mov
mov
dec
jmp
data16
lock
repnz
imul
mov
addr16
cmp
maxps
inc
xchg
jp
push
dec
into
sub
fisubs
mov
jl
inc
or
or
dec
ds
test
or
or
stc
stc
push
mov
mov
sub
mov
cmp
repz
aaa
jb
mov
adc
pop
cltd
out
mov
mov
push
ret
xor
cmp
cld
repnz
jecxz
aas
mov
imul
imul
xchg
jno
xor
pop
mov
cld
push
dec
fwait
int3
in
stos
push
or
insb
imul
or
cmp
sbb
push
ret
inc
pop
mov
pop
add
lods
outsl
inc
movsb
outsb
cli
xor
lret
ret
xor
xor
pushf
cwtl
ror
cmp
imul
adc
add
mov
cmp
push
sub
ja
or
pusha
xchg
lods
lahf
cmp
cmc
orb
cltd
fs
ja
mov
mov
jl
jle
test
jae
pop
pop
mov
pop
jns
add
scas
xor
in
mov
cmp
mov
data16
fs
in
dec
cmp
outsb
sbb
aam
je
jg
std
sub
jl
cmp
mov
mov
jge
xchg
lods
push
addr16
sbb
leave
out
int3
jecxz
pop
cmpsb
or
adc
adc
pop
xor
push
add
repz
cmp
cld
cld
test
insl
adc
mov
sbb
cwtl
pop
call
adc
jp
jo
push
popl
pop
pusha
add
jp
fistl
push
push
aaa
sbb
adc
xor
sti
aas
inc
frstor
div
clc
inc
rorb
push
pop
sub
fsubrs
movsl
lea
movsl
jle
mov
add
sub
iret
xchg
test
in
mov
pop
add
xchg
dec
int
std
and
push
test
rcl
pop
inc
add
sub
pop
mov
fdivrl
pushf
cmp
iret
mov
xchg
test
xchg
lds
dec
into
mov
xchg
ret
fadd
popf
into
push
sbb
mov
push
sarb
add
notb
scas
sub
jp
sbb
lcall
dec
fidivrs
adc
lcall
mov
fimull
das
sbb
pop
push
pop
add
pop
enter
cmp
rcr
add
xchg
mov
sti
mov
and
ja
push
addb
cli
test
cwtl
mov
mov
loop
mov
loopne
xchg
mov
pop
arpl
mov
aas
cmp
xchg
xor
int
mov
cmp
dec
bound
orl
mov
mov
mov
aam
add
inc
jae
in
loope
xlat
fidivrs
scas
xlat
push
adc
adc
xor
lret
mov
mov
cld
pop
jl
adc
pop
shl
inc
mov
fnsave
and
out
idivl
iret
es
loop
or
ljmp
int3
push
jno
xor
into
or
fwait
or
adc
rcll
ds
mov
lods
lds
sub
or
jnp
xlat
movlps
cmp
xchg
inc
into
aaa
jno
jbe
push
cld
fists
inc
out
ret
flds
mov
test
dec
lock
fidivrs
je
mov
mov
and
sti
push
loopne
cli
push
pop
insl
outsl
mul
ss
cltd
pusha
test
sbb
stc
xchg
sbb
lret
xchg
pop
mov
cld
xlat
push
add
call
fwait
inc
inc
xchg
mov
pop
cs
cltd
clc
jge
das
pop
mov
xor
add
cmp
aam
pop
cmpsl
xor
and
insl
xor
add
in
jecxz
xchg
pop
or
aad
xor
adc
and
in
xchg
scas
imul
and
and
sti
adc
es
mov
ret
jecxz
mov
data16
popf
cld
dec
or
add
call
dec
pop
pop
mov
stos
or
sahf
dec
inc
fsubl
adc
add
rol
popa
mov
pushf
cmp
cmovo
xor
pop
fmull
fsts
pop
call
or
hlt
adc
adc
loopne
add
xchg
mov
rorl
stos
mov
aas
cltd
in
gs
or
inc
popa
sbb
adc
pushf
xchg
mov
mov
call
icebp
and
add
cmp
mov
testb
mov
push
imul
and
iret
or
and
rol
inc
pop
sbb
dec
xchg
mov
mov
mov
js
add
sub
mov
nop
jno
adc
mov
mov
jmp
lds
in
jo
scas
ss
mov
xor
xor
mov
sti
fs
sahf
sub
and
jns
stos
shlb
addr16
ja
sub
add
rorb
mov
movsb
ja
hlt
mov
sahf
pop
add
push
popa
xchg
lcall
mov
mov
fdiv
rorl
inc
mov
loope
jge
fs
nop
sbb
nop
or
popa
inc
in
jmp
adc
push
or
enter
mov
or
push
adc
lods
loopne
ds
sbb
lods
jae
add
push
iret
push
mov
lds
sbb
ret
jmp
cmc
rclb
les
lahf
std
and
sub
lock
dec
call
dec
mov
mov
scas
mov
mov
das
mov
adc
out
pushf
xchg
aam
je
mov
fstl
leave
mov
add
in
fimull
aam
std
dec
lods
xor
mov
test
mov
mov
test
and
dec
sbb
arpl
aas
inc
adc
iret
xor
mov
test
and
mov
imulb
testl
sbb
rorl
out
ljmp
push
adc
cmc
mov
inc
xchg
pop
inc
xor
mov
ret
ret
sbb
testl
jno
jmp
jmp
std
loopne
and
jns
cmpb
fisubrs
inc
or
sbb
sub
out
xchg
fdivp
sub
insb
and
test
push
insb
lcall
es
gs
orl
movsl
adc
loope
jnp
or
in
sbb
pop
inc
or
and
enter
xor
add
sbb
ljmp
data16
in
cmp
stos
sbb
xchg
cmp
adc
pop
push
and
xor
ljmp
mov
jge
fmuls
pop
daa
mov
cmovns
push
cltd
ja
and
push
fildll
test
inc
std
mov
xchg
sub
fstpl
inc
lods
out
les
iret
mov
xor
xor
movsl
insb
adc
repz
test
ficompl
test
pop
out
dec
scas
lds
vmread
std
mov
adc
shl
aam
loope
xor
shrb
jmp
sti
add
jmp
addr16
icebp
pop
or
mov
fdivrp
dec
jnp
inc
lods
lret
dec
mov
cmp
xlat
dec
xor
cmpsl
pop
fwait
inc
push
lock
and
imul
rol
pop
xchg
dec
int
push
jmp
add
int
and
adc
pop
pop
mov
mov
jl
inc
cltd
pop
dec
pop
imul
and
fsts
mov
xlat
ret
adc
cld
mov
ds
xchg
jo
fstl
inc
test
shll
and
shrb
xchg
xor
mov
mov
lret
push
jge
test
xchg
hlt
xorl
outsb
sbb
adc
imul
or
jecxz
ret
xor
xor
in
loopne
or
in
outsb
lahf
mov
pop
lods
push
nop
in
dec
mov
mov
mov
les
aas
and
dec
in
imul
iret
in
out
movsl
and
mov
daa
pusha
daa
push
sub
push
mov
and
aam
outsb
repz
repz
pushl
insb
aad
adc
mov
sbbl
jnp
testb
inc
lret
sub
push
pop
mov
inc
int3
idivb
flds
std
or
out
in
add
aas
and
jne
and
nop
mov
mov
xor
lods
mov
je
adc
adc
mov
pop
mov
add
sbb
scas
das
xor
or
mov
mov
test
xchg
test
nop
sarb
sbb
fisubrl
sub
pop
jo
out
lea
mov
inc
in
orl
nop
mov
jo
bound
lods
and
pop
ljmp
or
add
adc
cld
or
enter
movsl
mov
loopne
call
fstl
ret
jne
dec
push
cmp
mov
sub
loope
mov
movsl
add
aad
mov
lods
jbe
push
into
mov
stos
and
push
pop
fwait
ljmp
rolb
xor
xchg
inc
mov
pop
mov
xchg
pusha
fisttpll
sub
cmp
add
je
xor
data16
sub
mov
popa
mov
jp
and
in
and
mov
cmp
outsl
cmp
mov
add
ror
test
sub
jae
dec
or
cmc
or
test
roll
adc
cmp
leave
xchg
mov
stos
orb
jg
lock
cmp
push
fisttpll
xor
lea
inc
ja
sub
mov
outsb
add
pop
sarl
in
fucomip
push
sub
jge
mov
xchg
imull
fs
es
daa
mov
mov
xchg
xorb
cli
xorb
sti
push
inc
int
xor
outsb
xchg
mov
push
sub
nop
lods
out
repz
mov
or
xchg
xor
xchg
or
xchg
in
iret
pushl
add
into
push
in
imul
jns
xor
jns
xor
sahf
lahf
in
push
popf
xchg
sub
sbb
pop
pop
test
jnp
push
inc
jge
add
sub
int
push
dec
cwtl
and
cmp
mov
clc
mov
mov
mov
imul
cmp
cmpsl
jno
jmp
adc
mull
add
pop
and
test
enter
out
or
push
aas
lahf
mov
add
mov
mov
push
outsl
pop
imul
xchg
es
xchg
ret
or
mov
push
jl
dec
popa
pop
in
icebp
push
xchg
js
jnp
in
mov
mov
dec
xchg
lods
in
inc
sti
test
invd
cld
mov
push
pop
into
and
sub
xchg
add
fdivl
out
push
or
pop
gs
in
stos
pop
hlt
lock
mov
lcall
cltd
ja
sarl
mov
xchg
and
pop
sarb
subb
icebp
insl
sub
and
jmp
push
lods
pushf
jle
std
cmp
xor
xor
push
jo
push
pop
jne
mov
stc
add
inc
xchg
mov
arpl
imul
fcoms
cmc
adc
and
in
inc
jnp
cmp
sub
jne
push
mov
data16
xor
xchg
sahf
repnz
pop
push
xorl
aaa
es
sub
hlt
dec
jecxz
push
test
adc
lds
cmp
inc
jae
adc
push
cs
xor
jb
jge
mov
add
dec
or
mov
js
and
inc
aam
dec
mov
and
daa
push
int
and
leave
jecxz
mov
inc
fistpl
mov
pop
ja
icebp
dec
lret
fdivrs
sub
pushf
popf
shlb
int
adc
push
jp
cwtl
sbb
in
dec
pop
pop
xor
repnz
stos
lods
add
sbb
push
jle
ss
push
fs
leave
popf
sbb
inc
std
mov
cmpsl
ljmp
sbbb
add
sub
pop
or
and
mov
pop
hlt
testl
cld
add
insl
or
xchg
jae
adcb
pop
or
out
mov
and
sbb
ret
cmpsl
scas
push
add
sahf
scas
sub
dec
scas
in
pop
jle,pt
scas
xchg
int
xor
dec
cmp
nop
sub
jmp
repnz
dec
dec
dec
mov
dec
icebp
lods
pop
sahf
cs
je
or
xchg
insb
inc
decl
roll
addl
out
inc
leave
into
in
sbb
jbe
cmp
movsb
pusha
jge
and
cmpsb
pop
mov
and
icebp
cmpsb
xor
decb
inc
jle
into
pop
inc
xor
adc
outsl
stos
fnstcw
adc
ljmp
jmp
inc
xor
ja
cmp
fistl
push
inc
mov
jecxz
cmpsl
jge
lock
mov
pop
jl
rorl
xor
inc
iret
mov
ret
dec
pushf
dec
mov
mov
cmp
nop
sub
in
add
lret
jns
push
add
movsb
in
xchg
push
scas
ret
sub
arpl
ret
out
dec
jb
hlt
jne
pop
test
push
adc
orl
add
add
mov
sahf
scas
aaa
mov
cld
insb
test
popf
faddl
jl
sub
aaa
jp
xchg
or
scas
test
fmuls
dec
push
imul
cmp
aaa
cwtl
or
mov
inc
inc
sbb
mov
int3
mov
jnp
pcmpgtb
add
xchg
cmp
je
push
out
lods
or
sbb
and
fwait
xchg
repnz
lret
mov
xchg
lods
cmc
jecxz
inc
jg
fsubrl
outsb
and
jp
ja
cltd
insb
cld
pop
xchg
lcall
mov
push
shlb
xor
imul
es
inc
dec
xchg
mov
xchg
lock
and
test
add
xchg
jp
pop
push
push
dec
in
push
sarb
lock
jge
jg
adc
iret
sub
daa
out
pusha
push
outsl
subb
jg
cmc
mov
fldt
dec
dec
mov
movsb
cmp
lods
test
mov
sbb
stc
or
test
xor
decb
cwtl
sahf
xchg
lcall
sub
loope
mov
dec
push
inc
dec
shll
cli
push
inc
mov
mov
xor
mov
push
sbb
stc
popf
call
add
movsb
pop
pop
mov
add
jno
mov
dec
push
adc
jae
xchg
lret
inc
push
jle
out
aas
movsb
xlat
sub
rolb
adc
sub
loop
adc
cld
xchg
push
xor
test
aad
and
cmp
nop
pop
add
dec
lcall
push
sub
sbb
out
adc
arpl
shlb
je
subb
mov
outsb
lret
or
imul
shlb
pusha
flds
inc
jge
pop
fwait
jecxz
and
es
in
pushl
pop
mov
mov
add
lcall
les
call
adc
and
leave
push
icebp
sub
or
lods
cmp
popf
icebp
xchg
xor
loop
nop
mov
cmp
fistpll
mov
in
ss
sbb
mov
ljmp
aaa
and
jmp
icebp
in
insb
pushf
dec
pop
jne
sti
ljmp
push
les
cmc
cmpsl
js
leave
jge
mov
imul
out
xor
xchg
movsb
cs
imul
xchg
mov
ret
in
jle
xchg
push
lcall
mov
gs
adc
and
shrb
xor
inc
lods
xor
adc
mov
lcall
gs
jb
or
sub
ret
sarb
mov
sub
fwait
lahf
sbb
jecxz
mov
pop
sub
insl
or
sahf
rorb
int3
daa
loop
sbb
push
xchg
sbb
xor
push
push
cmc
cli
mov
sbb
mov
testl
std
aad
mov
mov
or
pop
incl
stc
or
push
jl
adc
cli
adc
into
push
pop
mov
adc
dec
push
dec
das
inc
jg
in
imul
pusha
addb
sti
loopne
push
add
in
fisttpl
jae
orb
enter
cli
adc
add
mov
enter
rclb
pop
mov
js
sub
stos
mov
adc
or
in
pop
mov
test
shll
arpl
and
push
mov
ds
xor
clc
or
xchg
test
or
fidivrs
movsb
mov
pop
cld
or
cmp
les
sub
je
adc
jb
mov
dec
test
adc
movsl
and
adc
daa
push
ret
mull
fwait
dec
sub
out
cs
es
push
sbbl
xchg
inc
into
hlt
js
iret
push
ljmp
call
jo
sbb
movsl
shr
cmc
push
push
pop
dec
and
jle
sub
movsl
pop
push
mov
addl
and
popf
cmp
adcl
inc
pusha
outsb
xlat
sub
xor
sub
outsl
ret
mov
aam
xchg
adc
or
inc
pop
push
lcall
mov
test
xchg
sbb
test
cmpsl
jecxz
ljmp
lahf
add
inc
mov
test
sub
inc
xchg
pop
sub
mov
jae
out
scas
outsl
jp
leave
mov
or
push
or
ret
cmp
or
cmc
mov
idivl
jo
mov
mov
jl
test
leave
pop
adc
rcll
mov
and
mov
cwtl
mov
pop
loop
jbe
adc
mov
stos
mov
pop
mov
mov
jecxz
and
jb
jg
and
add
add
sub
cmc
dec
xchg
fwait
push
pushf
jmp
sbb
mov
je
imul
dec
add
xchg
mov
mov
fisttpl
fcomip
clc
mov
mov
adc
stc
adc
push
mov
popf
in
mov
cmp
repnz
push
out
and
bound
mov
dec
pop
xchg
jno
sbb
dec
imul
cmpsb
repz
adc
ret
mov
xor
cmpb
and
xor
aam
negl
sti
je
xchg
mov
shr
push
sbb
adc
xchg
out
sub
data16
adc
data16
loope
mov
in
sub
lods
cmp
mov
scas
jno
inc
lcall
in
idiv
fcmovne
mov
imul
jp
mov
or
xchg
add
movsl
out
sbb
dec
mov
ds
mov
xrelease
movsl
pop
aaa
cld
lods
inc
call
and
mov
push
sti
lock
mov
pop
sub
pop
inc
cmp
jbe
cli
push
adcl
ljmp
into
and
xchg
jno
sub
sub
sub
cmp
jecxz
jg
mov
jo
bound
push
aaa
es
sub
or
stos
adc
setb
sbb
popa
es
pop
mov
fsubl
lods
jae
xchg
push
js
sub
and
cmp
pop
sub
mov
mov
shll
xlat
jno
loopne
scas
mov
inc
mov
xchg
push
jecxz
mov
call
jge
in
aam
std
sbb
rcr
mov
mov
pop
sarb
sub
push
pop
cli
pop
pop
fisubs
or
mov
or
inc
jb
aas
adc
sbb
dec
sahf
stos
pop
and
f2xm1
sahf
cld
iret
inc
ljmp
or
pop
daa
popf
cmp
xor
mov
lret
cmc
or
lock
daa
mov
jge
inc
pop
repnz
mov
lods
popf
je
mov
xchg
sti
sbb
or
in
cmp
std
loopne
mov
pop
xchg
repnz
andl
mov
loopne
pushf
mov
in
push
inc
push
dec
stos
sub
push
scas
mov
mov
push
adc
lea
mov
dec
cmc
push
repnz
or
test
faddl
xchg
out
int3
scas
xchg
mov
inc
clc
jle
adc
mov
dec
inc
inc
je
and
push
loop
or
jno
insb
inc
imul
mov
shlb
inc
loopne
jns
cmp
rorl
dec
pushw
ss
movsb
mov
mull
rcrl
mov
iret
outsb
inc
rcl
test
pop
xchg
jae
xor
inc
add
pop
mov
mov
test
adc
into
xor
add
dec
jecxz
mov
sub
lret
jge
mov
mov
push
fcoml
cltd
loopne
or
push
inc
cwtl
xchg
add
aad
loopne
and
ja
sub
fistpl
mov
push
inc
push
inc
sub
xor
cmpsl
stos
mov
jne
gs
push
xchg
inc
mov
out
pop
aad
mov
stc
cmp
xor
dec
repnz
cmc
out
inc
test
jnp
dec
clc
out
add
imul
inc
xchg
xchg
cmp
add
xchg
dec
sub
push
cld
cltd
cld
xorb
fbstp
fistl
or
outsb
stos
aad
aad
dec
mov
add
adc
xor
cmc
xchg
shll
mov
jae
push
lahf
dec
fmuls
fs
in
and
xchg
add
dec
pop
add
adc
ror
inc
cmp
leave
mov
mov
fldt
push
adc
cmp
push
sub
mov
ror
cmpsb
jb
cmp
imul
shll
daa
scas
xchg
sub
aas
cmp
xchg
add
jnp
sbb
sub
inc
jge
ljmp
enter
dec
add
aas
inc
or
adc
sar
incb
out
sub
js
sbb
jg
loopne
jle
or
fcomp
dec
jno
mov
lahf
pop
mov
cmp
pop
outsl
pop
sbb
jno
ss
and
or
xchg
incb
xchg
shrb
repz
xor
mov
xchg
into
stos
xchg
aas
into
les
adc
pop
mov
pop
xlat
lahf
jge
xchg
dec
fldl2e
adc
int3
adc
mov
mov
adc
inc
jnp
sub
push
adc
pop
loopne
into
push
sbb
jmp
xchg
std
inc
shrb
fwait
mov
cmp
jbe
sub
arpl
div
mov
xchg
data16
ljmp
inc
xchg
in
cmp
iret
cli
ds
lods
push
nop
mov
mov
and
jge
jmp
fildl
xor
jo
jp
jnp
xor
iret
enter
insb
mov
and
xor
adc
push
dec
je
mov
pop
xor
fldt
xor
xchg
fwait
dec
in
and
lea
icebp
sbb
mov
cmp
push
jge
xchg
jns
mov
and
add
test
in
stos
cwtl
pushw
dec
loope
xchg
aaa
mov
fsubr
and
xor
fisubrs
xchg
aam
fdivs
sub
lock
fcmovnu
fistl
pop
icebp
push
inc
pusha
jmp
sub
pop
lret
fs
xchg
mov
call
jno
add
in
loope
into
dec
push
dec
cltd
pop
aam
lock
sar
cmp
outsl
pop
mov
and
icebp
shll
cmpsl
add
jp
mov
test
bound
push
sub
xorl
push
mov
insl
pop
inc
inc
fcompl
addr16
cmpsl
stc
sbb
lcall
jns
shrb
jmp
cmp
stc
push
jno
inc
mov
mov
fldcw
cmp
ss
pop
adc
imul
loop
popa
iret
mov
or
rcrb
sahf
ficomps
or
mov
sub
push
push
push
jg
cmpb
jb
mov
loopne
icebp
push
repz
mov
adc
and
sub
sub
mov
or
stos
jne
lcall
push
pop
nop
sarl
mov
les
cmpsb
addr16
ds
scas
lret
fidivrl
xor
mov
filds
sub
xchg
iret
dec
mov
lea
icebp
js
inc
xor
inc
xchg
cmp
mov
in
daa
call
mov
jnp
movaps
add
fsubl
adc
dec
outsb
mov
mov
mov
shl
cmp
fidivs
sbb
int
imul
jnp
out
mov
incb
pop
adc
loopne
pushf
dec
inc
mov
movsb
repnz
call
loopne
lods
cmpsl
sub
xchg
test
popa
pusha
stos
cmp
jp
sarl
aam
push
jo
xchg
xchg
sbb
loop
xlat
insl
sub
inc
enter
mov
xor
push
sub
ret
or
ficoms
cwtl
jge
mov
mov
xchg
bound
cmp
test
sub
shr
mov
jne
loope
fmuls
sub
mov
mov
xchg
mov
movsb
lret
xor
adc
das
mov
cmp
test
and
xchg
push
jno
ja
test
stos
cld
mov
mov
pop
push
jae
pop
adc
popf
hlt
outsl
inc
sub
mov
outsb
sbb
and
xchg
or
xchg
jl
insl
add
or
sahf
xchg
aaa
imul
xor
popf
dec
lods
adc
or
out
cmpsl
sbbb
mov
pop
stos
punpckhwd
mov
jae
cmp
mov
sub
in
in
lret
adc
in
loope
hlt
pop
notb
imul
mov
fdivs
gs
sub
test
cmpsb
pop
test
repnz
or
stc
ud2
sub
movsb
fsubs
add
inc
call
data16
and
jno
loop
jae
fsubl
jmp
push
jmp
nop
jg
icebp
mov
pop
xchg
pop
dec
cmp
xchg
loop
shll
add
faddl
in
gs
dec
mov
lods
je
loope
pop
std
adc
inc
fwait
or
sti
jp
out
sub
or
popf
xor
popa
pop
loopne
xchg
cld
in
mov
xchg
or
iret
out
out
sub
sti
daa
das
dec
mov
aad
mov
xchg
pop
sbb
int
mov
lds
sbb
pusha
leave
aad
sti
sub
dec
push
arpl
sbbl
subl
insb
inc
ret
addb
sbb
pop
test
dec
push
push
sbb
add
cltd
adc
scas
xchg
loope
loopne
sub
arpl
mov
shll
mov
or
adc
addr16
mov
push
push
shr
sbb
popf
sbb
out
cwtl
outsl
testl
repz
inc
adc
sub
in
fstpt
cltd
add
and
and
cltd
jbe
test
jb
into
push
ficomps
stc
xor
std
imull
fwait
push
sarb
mov
scas
stos
or
jo
pmulhw
and
mov
fidivrs
xchg
outsb
and
lret
int
out
insb
cwtl
sbb
orl
mov
pop
imul
inc
pop
in
jge
icebp
test
cmp
add
cmp
add
stos
mov
xor
xlat
sub
dec
mov
mov
inc
movb
cvttps2pi
xor
xor
in
andl
gs
push
sbb
sbb
lret
sbb
pushf
add
push
rclb
mov
je
jb
lods
cld
loop
or
xorb
cltd
lods
mov
les
in
and
jno
and
adc
inc
stos
pop
pusha
fiadds
je
jno
sbb
cli
cmp
add
cwtl
push
push
sub
fnsetpm(287
xchg
xor
jb
inc
movb
xchg
mov
ficompl
sub
cltd
xchg
shlb
out
xor
xchg
arpl
clc
shll
fsubl
jns
lss
or
iret
in
fsub
dec
enter
incb
stc
pop
shl
decb
sbb
sarb
jns
into
xor
sub
jmp
and
sub
movsl
in
push
cmpsb
push
movsb
or
cmpsl
add
jmp
xchg
jo
in
dec
fiaddl
addb
cmc
in
add
bound
pop
cmc
lods
int
std
pop
mov
pop
mov
mov
iret
call
pop
adc
shrl
repz
mov
xchg
pop
cmp
std
imul
xor
fadds
mov
xor
mov
loop
mov
push
ds
push
loop
xor
push
outsb
jge
mov
pop
pop
idivb
jp
cmc
and
xorb
push
js
cmp
fidivs
dec
ret
add
xchg
cld
out
mov
in
aam
mov
xchg
lahf
or
dec
popf
cmp
icebp
mov
std
adc
or
ret
mov
jle
xchg
dec
inc
movsb
rcrb
nop
pusha
fisubl
xor
push
cmp
cltd
nop
lds
push
repz
pop
flds
jo
fidivrs
les
jl
cwtl
mov
or
mov
mov
sbb
and
pop
dec
dec
jmp
jo
dec
sub
jmp
mov
rcl
sbb
add
stos
loop
adc
stos
xchg
adc
arpl
push
test
movsl
dec
add
mov
lock
cld
cwtl
loope
outsl
cltd
sbb
jo
dec
and
jp
stos
rcll
out
gs
dec
lahf
fwait
push
in
sbb
out
and
xor
cwtl
sub
and
xchg
or
inc
push
jle
rclb
push
dec
jle
cmpsb
pop
push
xchg
inc
mov
ret
and
out
push
int3
in
dec
neg
mov
mov
out
loopne
pop
push
push
dec
ret
dec
xlat
pop
dec
push
ss
inc
jne
fs
xor
stos
cwtl
jo
les
into
pop
inc
xor
xchg
xorb
push
and
or
push
adcb
lret
stc
dec
ret
imul
jae
jo
push
xchg
js
lock
push
cmp
dec
jle
mov
pop
int
lahf
pop
ret
xor
cmp
ficoml
mov
je
cmpsl
clc
mov
adc
idivl
testb
add
push
hlt
inc
sub
xor
jae
mov
sub
mov
pop
xor
shr
dec
fcmovbe
dec
ficompl
imul
adc
sub
adc
xor
movsl
bound
inc
gs
mov
mov
jbe
lret
add
test
leave
aas
mov
ficoms
andb
rcll
cmpsb
fwait
mov
xlat
mov
adc
or
push
fisubl
pop
in
lods
mov
xchg
mov
jecxz
repnz
aam
and
fwait
lcall
or
jmp
cli
jecxz
dec
mov
icebp
pop
pop
bound
xor
mov
cli
mov
jge
xor
mov
inc
push
sahf
pop
std
jmp
push
out
pop
bound
pop
sub
sbb
daa
ret
mov
dec
sbb
pop
push
cwtl
test
scas
push
sbb
mov
shlb
movsb
mov
dec
cmc
mov
xchg
cld
jl
sub
scas
mov
xchg
mov
shrd
int3
push
in
xchg
outsl
rolb
fiaddl
dec
jmp
imul
inc
sub
cmpsl
sub
je
jae
add
mov
test
jb
aas
add
addb
adc
jbe
dec
jg
dec
inc
sbb
mov
pushf
iret
mov
mov
xorb
and
stos
icebp
psllw
inc
cmpb
fstps
out
and
push
xchg
adc
mov
mov
jg
sbb
xchg
pop
jae
lahf
pop
imul
das
mov
ja
pop
mov
pusha
or
sbb
xchg
shll
push
insb
shr
pop
shlb
jne
jge
cmp
ja
scas
xchg
int
ja
loopne
fiaddl
push
xor
xor
pusha
xorl
lock
pop
fwait
inc
jg
invd
sbb
jb
dec
mov
addl
or
aaa
movsl
aaa
sbb
mov
pop
mov
pop
scas
jnp
test
lahf
mov
into
mov
leave
das
into
xchg
jnp
mov
pop
xorb
fmulp
sub
mov
psubsb
pusha
sbb
ss
cmc
dec
mov
cmp
push
movsb
adc
je
out
pop
pushf
push
icebp
xchg
outsb
pop
scas
xor
cmp
call
daa
stc
fildl
cmp
fsubrl
pop
inc
jle
fwait
xchg
mov
mov
pusha
sub
xchg
fcoml
ja
bswap
mov
pushf
mov
and
mov
xor
adc
out
dec
or
lods
in
int
push
ret
lods
push
and
shll
popa
loopne
mov
mov
or
shlb
sti
mov
lret
xor
dec
loope
jo
enter
dec
pop
imul
push
mov
es
sbb
sbb
jnp
add
loopne
pop
aaa
leave
push
xchg
mov
adc
inc
add
inc
jns
pop
add
pop
mov
adc
add
fdivl
jmp
add
xchg
in
leave
data16
cmp
sbb
clc
dec
repnz
adc
pop
andl
mov
sub
xchg
cmc
loopne
push
out
mov
lods
pop
in
cs
mov
in
and
mov
jp
push
popa
and
and
mov
ret
subb
pop
pushl
ret
xchg
shrb
xor
push
xchg
mov
inc
outsb
stos
out
ficomps
adc
mov
inc
mov
add
pusha
xor
das
cmc
lock
pop
ficomps
jmp
out
aad
dec
and
test
push
inc
adc
pusha
sub
mov
std
out
push
xchg
or
push
inc
inc
fmull
mov
cmpsl
adc
cmpsl
pop
out
ror
out
xor
loopne
adc
lahf
adc
in
mov
testl
pop
mov
pop
lods
mov
cmp
fcmovb
mov
enter
dec
hlt
adc
jo
add
fldl
out
cmpsb
aam
jg
filds
ja
push
mov
mov
lods
push
mov
mov
xor
int
scas
ret
jbe
add
iret
inc
mov
sub
push
jns
sub
and
rorl
push
mov
rcll
pop
outsb
and
mov
cli
inc
adc
jp
xlat
stos
and
dec
and
jno
outsb
pop
xor
inc
mov
cld
iret
cmp
jns
mov
das
fnstsw
mov
repnz
out
push
cld
add
mov
repz
scas
mov
loope
cli
adc
xor
add
and
outsb
data16
xchg
xchg
inc
aam
xchg
add
xlat
push
pop
andl
loop
leave
pusha
imul
xchg
movsl
jl
jmp
ds
pop
add
push
clc
push
push
and
cmp
int
test
les
push
pop
dec
mov
out
sub
xor
xor
inc
jae
sbb
sbb
in
enter
fwait
inc
shrl
xlat
jl
cmpsl
xor
cmp
in
xor
adc
ss
ja
jns
mov
cltd
loopne
xchg
and
jmp
fidivrl
mov
pushf
lea
out
fsubl
test
lock
push
shll
jle
dec
in
add
out
daa
inc
mov
add
dec
and
out
or
or
mov
jb
pop
out
mov
lods
dec
movsl
fdivr
out
cmp
pop
out
mov
outsb
push
pushf
pop
mov
je
mov
dec
lds
pop
nop
test
ret
inc
jg
dec
pop
ror
xchg
das
mov
cmp
adc
je
movsl
test
push
cmp
out
aad
sub
jbe
das
push
inc
jge
jmp
inc
fsubrl
add
mov
add
mov
mov
pop
clc
mov
bound
adc
std
leave
pop
jp
mov
inc
cltd
jno
aaa
in
aas
mov
scas
pop
mov
mov
orl
xor
cmp
loopne
and
cmp
sbb
fadd
dec
ret
xchg
or
mov
cmp
cmpsb
pushf
push
lods
cmp
sbb
dec
scas
pop
jecxz
jno
std
cld
mov
and
adc
inc
mov
sbb
inc
ret
js
add
dec
add
addr16
insb
or
sbb
jns
cltd
dec
in
repnz
push
int3
js
insb
mov
jge
dec
in
or
inc
mov
and
movsb
es
inc
mov
repnz
fisubrl
out
pop
outsl
fsubl
cmc
mov
jne
imul
mov
and
add
jp
rclb
mov
sub
std
les
sar
les
pop
push
and
and
inc
or
test
xor
and
outsb
hlt
insl
mov
sbb
pop
pop
stos
in
mov
jl
push
ljmp
test
pop
jp
cs
add
scas
popf
inc
pop
pop
dec
mov
xor
and
fiaddl
lods
sub
lds
xor
jmp
fistl
cmp
je
jecxz
ds
mov
xor
das
jg
lret
roll
jns
dec
cld
xor
push
sub
push
ficomps
xor
repz
out
out
mov
or
cmp
inc
cmp
and
leave
xchg
aam
mov
pusha
cmpsb
push
call
mov
movl
jb
xchg
jge
push
mov
insb
cmp
pop
movsl
adc
adcl
or
or
pop
test
clc
adc
jge
push
pop
popf
enter
jo
das
in
divb
in
push
push
jp
sbb
into
outsl
pop
mov
mov
fildl
mov
jp
xor
out
cmpsl
pushl
push
or
out
es
adcl
jl
mov
mov
jnp
popl
test
out
insl
pop
es
xor
cmp
into
lock
orl
fs
out
adc
stos
jmp
and
subl
mov
pop
in
inc
cli
inc
repz
in
test
fsubr
or
mov
mov
fadds
inc
sti
pop
incb
lcall
mov
push
sub
jns
xchg
ds
cmp
icebp
fsubl
and
add
pop
cwtl
pop
addr16
sub
dec
push
or
mov
pop
mov
sub
fdivrs
rcl
lds
push
push
loopne
and
ljmp
outsb
outsl
sub
outsb
sub
aam
lods
shl
clc
std
mov
cmpsb
dec
hlt
xchg
push
mov
in
ret
push
push
test
push
xor
or
jmp
adc
cwtl
loope
loope
dec
decb
aam
cmp
cwtl
inc
push
pop
jns
mov
inc
mov
aam
jle
dec
in
repnz
dec
sbb
pop
mov
nop
jno
adc
or
adc
ficoms
or
cld
daa
pushf
cmc
or
jnp
mov
iret
cmc
std
xor
jb
jno
lahf
lret
clc
fdivl
mov
out
push
push
aam
rorl
in
pop
ljmp
sbb
ret
int
in
pop
hlt
or
mov
xchg
ret
xchg
mov
fcom
push
pushf
push
out
in
stos
mov
or
xlat
fmulp
ds
jp
push
cmp
sub
lcall
pushf
fwait
hlt
out
xor
push
dec
pop
xchg
out
cmp
mov
sub
js
adc
mov
fwait
adc
mov
sub
inc
repz
jae
mov
sub
mov
shll
sbbb
cwtl
xchg
lods
out
jnp
int3
xchg
lret
mov
add
add
cmpb
test
ret
xchg
adc
mov
xor
cmp
mov
lret
inc
mov
jae
or
or
push
les
repz
xchg
lods
loop
fisubrl
insl
fcomps
js
xchg
mov
xchg
adc
push
pop
mov
xchg
stc
xor
xor
outsb
div
pushf
arpl
xchg
repz
sbb
test
neg
push
scas
jecxz
adc
mov
movsl
mov
imul
nop
lcall
outsb
or
sbb
inc
or
gs
inc
stos
in
sub
pusha
fnstsw
outsb
push
movl
aaa
cld
lcall
cwtl
mov
push
xchg
data16
sbb
aas
je
rclb
inc
mov
or
stos
xchg
xchg
insl
insl
int3
test
cmpb
sbb
mov
jns
cltd
repnz
pop
push
sbb
cwtl
mov
inc
fsubrl
out
inc
mov
inc
xor
iret
in
adc
sbb
pop
cmp
fs
sbb
dec
mov
ja
mov
cmp
pop
mov
mov
data16
mov
pop
out
outsb
jae
shlb
rcrb
xor
jnp
mov
add
and
out
push
fisubrs
cmpsb
iret
dec
outsb
icebp
rcrl
pop
adc
inc
adc
pop
insl
push
pusha
fistl
sbb
mov
adc
and
out
push
cmp
pop
mov
aaa
imulb
sahf
test
mov
cmc
mov
out
mov
movsl
cwtl
adc
push
loopne
iret
dec
inc
outsb
push
add
cmp
pushl
fincstp
scas
mov
scas
call
xor
js
test
mov
sbbb
fiaddl
stc
push
mov
test
cwtl
add
cmp
xchg
add
sub
jle
sub
mov
adc
sub
ja
js
xchg
lahf
inc
jmp
fidivs
sbb
test
jns
jns
je
adc
movsb
int
insb
pop
and
sarl
lods
cwtl
aad
ljmp
adc
push
sbb
faddl
ret
leave
xchg
or
outsl
andl
popf
leave
mov
adc
push
inc
add
out
fsubrl
je
jecxz
and
int3
es
and
lock
roll
fnsave
mov
sbb
std
sub
mov
sahf
sti
jecxz
xchg
cmp
or
xchg
xchg
popf
loopne
push
in
stc
or
es
imul
in
sub
lea
imul
mov
adc
pop
shlb
shll
add
in
or
sbb
testl
dec
cmc
scas
mov
fs
cs
add
pop
or
data16
dec
adc
or
imulb
xor
inc
imul
xor
and
or
mov
sub
shlb
pop
in
orb
cmp
stc
adc
cmc
pop
std
cmp
pop
jae
cwtl
xchg
lds
jle
jge
ret
insb
push
or
add
xor
xor
fwait
xchg
xor
xchg
xor
jnp
imul
push
in
cmc
pop
sbb
and
dec
std
shl
push
dec
ljmp
sbb
enter
call
push
adc
adc
mov
cmp
lea
fbld
jle
jecxz
jae
adc
adc
outsl
daa
pop
out
popf
jno
hlt
cmpb
lods
ljmp
xlat
enter
stc
push
jae
hlt
arpl
jmp
pop
push
in
arpl
imulb
movsl
lahf
dec
rcl
mov
xchg
cmp
inc
add
icebp
jge
inc
sub
addr16
pop
inc
cltd
mov
and
loop
dec
mov
mov
and
dec
nop
cmpsb
mov
in
imul
imul
fldl
aas
push
mov
add
sbb
sub
rcll
or
jne
outsb
insl
mov
insl
lds
clc
ljmp
jp
inc
adc
int
xchg
outsl
das
nop
cmp
ret
in
ljmp
out
push
insl
popa
mov
pop
mov
test
into
repz
sahf
cmpsb
iret
icebp
or
fstps
sub
imul
std
shr
sarl
xor
and
adc
bnd
push
push
ja
jbe
insb
shlb
jecxz
das
inc
loopne
cmpsl
imul
cli
jmp
in
dec
cmp
fldt
cltd
jne
pop
dec
jle
mov
nop
inc
aaa
ret
xchg
leave
hlt
daa
jns
inc
cmp
mov
shl
cmp
jbe
ljmp
xchg
ljmp
mov
push
xchg
mov
push
pop
pop
pop
push
xor
cmpsl
aam
jmp
test
add
mov
.byte
