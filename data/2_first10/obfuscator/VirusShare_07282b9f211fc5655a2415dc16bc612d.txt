add
add
push
add
add
add
orb
add
addb
addb
add
shll
add
add
add
pop
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
shll
add
add
add
add
add
add
addb
add
adc
add
add
add
jb
xor
add
add
add
add
test
add
call
add
add
jb
xor
add
add
add
add
rolb
add
push
pop
add
hlt
add
add
jb
xor
add
add
add
add
clc
add
add
add
add
add
jb
xor
add
add
add
add
and
add
or
add
loopne
add
shll
add
add
add
add
add
add
dec
add
add
sbb
add
add
jb
xor
add
add
add
add
jo
add
inc
pop
add
mov
add
shll
add
add
add
add
lock
andb
add
add
add
shll
add
add
add
add
add
add
mov
and
add
add
add
jb
xor
add
add
add
add
loopne
add
or
add
mov
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
and
ds
xor
leave
sub
add
fsubl
or
loopne
mov
rcrl
pop
scas
fcoms
insl
into
push
pop
mov
xor
jne
mov
inc
popa
hlt
adc
inc
sbb
cld
stos
inc
loop
mov
iret
add
scas
fwait
dec
add
push
push
jae
jecxz
pop
gs
data16
add
sar
cli
jmp
mov
or
or
add
cld
mov
inc
inc
jbe
pop
mov
ja
inc
scas
xchg
jp
mov
aam
push
fwait
iret
test
sbb
test
icebp
fstpt
mov
xchg
xorl
or
jge
stc
inc
jg
add
mov
in
dec
mov
test
es
insl
pop
xor
dec
test
cld
or
pop
test
aaa
push
mov
pop
sbb
popa
add
scas
stos
and
jo
jne
cwtl
leave
hlt
fst
cmp
or
loopne
xor
lods
divl
mov
sti
add
outsb
mov
es
pop
or
push
lods
sahf
cld
or
pop
aaa
out
mov
push
add
push
stos
and
pop
out
adc
mov
lahf
or
push
cmp
or
je
out
push
dec
icebp
push
inc
fidivs
dec
out
mov
mov
aaa
mov
or
inc
loope
jp
dec
xchg
xchg
stos
push
mov
cmpsl
dec
adc
adc
xchg
scas
jmp
xchg
mov
xchg
sub
dec
or
and
fidivs
in
fstpl
shll
pop
sbb
xor
adc
test
jecxz
add
add
push
aad
in
scas
pop
andb
hlt
inc
aas
pop
insb
jnp
push
lahf
fwait
push
mov
lea
mov
lods
dec
cmp
aas
inc
fnsave
and
add
testb
mov
incb
ret
cli
stos
testb
movsl
fisttpl
push
stos
dec
mov
xor
int3
in
mov
popa
ss
mov
push
fcmovne
imul
dec
dec
lds
mov
movsb
jnp
je
lret
push
ja
icebp
dec
mov
and
inc
in
outsb
stos
xchg
push
mov
mov
ffree
and
call
imul
adc
sbb
pop
cmc
push
push
xor
movups
sbb
add
adc
out
repnz
xchg
aad
xlat
cs
popa
ja
pmaddwd
adc
popl
hlt
iret
inc
ret
clc
lea
inc
jnp
push
scas
pop
inc
jae
or
pop
xor
add
jns
pop
scas
xor
push
bound
adc
mov
ja
leave
xor
adc
sbb
js
int
clc
and
and
and
out
mov
test
mov
fimull
push
lea
les
call
xlat
loop
cmp
lock
pop
incb
mov
xor
in
jle
lods
jnp
xorb
negl
and
jmp
out
push
or
mov
inc
insb
movsb
lock
sbb
les
dec
pop
jmp
adc
push
sbb
pop
fsts
push
pop
arpl
xor
sub
inc
test
mov
pop
aaa
add
xchg
mov
and
add
sti
jnp
bound
mov
int3
xchg
mov
scas
or
adc
idivl
in
ljmp
mov
std
incb
xchg
add
jns
int3
and
lods
lea
fsubrl
mov
cmpsl
lds
mov
imul
fsubr
xchg
out
add
mov
pop
sbb
shlb
sub
jae
pop
cmp
sub
mov
dec
push
imul
or
arpl
jns
or
outsb
in
cmpsb
push
mov
fcomp
pushf
dec
mov
out
xchg
mov
add
jmp
pop
ljmp
mov
ror
dec
dec
cmp
add
jp
sub
and
testb
dec
lcall
push
xchg
or
fcoms
push
cmp
dec
push
stc
and
shlb
test
xlat
jl
fisttpl
inc
add
xchg
push
imull
out
ss
scas
mov
lock
xchg
xor
xor
dec
aam
jbe
das
imul
scas
mov
out
push
pusha
cld
mov
std
out
out
xchg
sbb
xchg
push
or
or
rcrl
nop
sti
sbb
pop
ljmpw
dec
arpl
daa
adc
sti
mov
enter
out
insb
clc
loopne
inc
repz
pop
test
loope
paddusb
inc
js
mov
les
push
imul
sub
dec
mov
ds
fs
shll
nop
rcrb
je
xchg
mov
jl
mov
inc
fisubrs
push
sub
sub
inc
mov
test
and
add
jmp
rdpmc
cli
loop
xchg
jl
inc
fistl
xor
por
xchg
jns
cmp
and
mov
jb
in
addr16
push
roll
push
xor
xor
bound
and
cld
push
xchg
addr16
add
add
scas
ja
call
lret
cli
fdivrs
divl
xchg
cmp
fs
lea
insl
add
in
jmp
adc
jnp
mov
push
xchg
daa
sub
sbb
dec
pushf
mov
xlat
shrd
sbb
arpl
cmc
imul
add
inc
dec
in
inc
mov
mov
mov
dec
movsb
jne
and
leave
xchg
xchg
arpl
cli
dec
or
mov
cmc
dec
and
xor
mov
cmpsl
jle
fiaddl
pushf
xor
arpl
add
mov
sti
push
aas
cmp
addr16
ljmp
aad
fs
ficompl
inc
add
pop
inc
loopne
add
imul
or
or
push
lret
loope
test
sbb
frstor
or
in
inc
in
addr16
jne
mov
mov
aam
nop
imul
nop
push
add
mov
jo
hlt
jmp
xchg
jge
xor
dec
aad
xchg
xor
fistpl
xchg
lret
push
add
jg
add
or
mov
jmp
sbb
sbb
in
xchg
mov
fstpt
adc
jl
sub
addb
leave
jle
das
enter
jb
cwtl
in
aas
cmp
pop
jnp
xor
inc
add
in
into
arpl
fsts
pop
mov
cltd
jo
push
cmp
sbb
adc
outsl
or
icebp
jno
dec
gs
out
or
jo
sbb
pop
jnp
xor
jbe
mov
daa
and
mov
mov
pushf
pop
lret
dec
and
jnp
sbb
outsb
int3
cmc
xor
into
push
jbe
jno
xchg
ret
gs
les
sub
sbb
lret
sub
mov
fildll
fdivr
aad
inc
repnz
shll
inc
hlt
pop
cmp
sbb
jle
dec
cwtl
ss
cmp
xor
xor
sub
mov
mov
xchg
cmp
fdivl
cld
mov
rcl
or
dec
mov
adc
pcmpgtd
das
xor
push
cmp
dec
cltd
jnp
mov
sbb
push
mov
cltd
repnz
push
addb
fcoml
fwait
mov
cmpl
fildll
mov
push
fstl
mov
push
scas
shr
inc
or
mov
rol
popa
call
lock
dec
les
pop
outsb
or
push
std
sub
pop
sbb
fldt
push
mov
pop
iret
shrd
dec
mov
or
add
lods
mov
xchg
addr16
fs
test
aam
lock
arpl
in
in
add
cmpsl
mov
sbb
outsb
pop
mov
sbb
addr16
imul
cwtl
rcr
jecxz,pt
cmc
inc
test
or
fistpll
mov
cmp
or
jne
sbb
add
test
sbb
adc
jp
jge
je
cmpsl
fisttps
push
bound
enter
aaa
pop
jnp
and
sbb
adc
test
je
jmp
aad
and
std
push
negb
pop
pop
sub
movsl
adc
push
pop
push
leave
sub
push
inc
pop
sbb
push
inc
pop
sbb
mov
sbb
cmp
mov
cld
inc
inc
mov
popa
clc
jnp
mov
sbb
xchg
adc
xchg
clc
fistpl
or
shlb
pusha
fstpt
insb
scas
sub
or
mov
out
mov
hlt
dec
push
sub
ljmp
mov
daa
iret
repz
adc
and
mov
dec
les
add
cmpsb
mov
and
outsb
fisubrl
dec
imul
test
inc
mov
and
push
in
les
xchg
mov
jmp
and
les
adc
pushf
repz
clc
cmp
xor
mov
notl
inc
stc
dec
scas
jg
push
mov
mov
sub
ret
mov
push
repnz
aam
xchg
inc
es
mov
pop
movsb
push
jns
loop
pop
jne
or
lcall
fs
mov
and
dec
xor
fimull
popf
decl
jo
or
hlt
pop
xchg
or
sarb
push
xchg
repnz
popf
out
pop
jmp
dec
std
mov
jp
lahf
mov
xchg
xor
sbb
sub
mov
shlb
cmp
jecxz
hlt
xchg
pop
aaa
push
xchg
mov
inc
mov
or
jl
test
mov
cs
xchg
jle
jecxz
ret
ljmp
insl
dec
or
adc
mov
sub
xchg
lds
adc
outsl
loopne
repz
lea
sub
les
jno
pop
mov
rcl
sbb
mov
aas
divl
add
dec
mov
repz
adc
jb
push
jo
xor
push
xchg
sub
addr16
jmp
cwtl
rcl
dec
pop
imul
cmp
jp
xchg
pop
jp
xchg
dec
mov
jmp
or
xchg
cmp
sub
rcll
dec
insb
fildl
daa
in
or
cmpb
in
aam
push
jb
mov
call
push
inc
cmpsl
fdivrs
xor
inc
jge
lahf
jecxz
or
xor
sbb
xor
test
push
adc
and
inc
cs
push
mov
ficoms
cmp
xlat
shl
xchg
jecxz
xor
lds
outsl
lods
cs
aad
mov
pop
pop
or
push
sbb
scas
repz
push
jne
repnz
push
test
icebp
fiaddl
xor
scas
sub
sub
js
movsl
dec
ret
pusha
xor
insb
pop
addb
les
in
pop
inc
sub
xor
or
into
in
sbb
cli
mov
xchg
push
mov
xchg
movb
lods
test
cmpsb
negb
jecxz
mov
leave
dec
stc
test
jge
adc
cmp
nop
or
inc
popf
mov
jne
pop
addb
pop
sbb
dec
push
aam
loopne
push
push
int
mov
inc
mov
test
mov
test
in
mov
filds
jo
push
sub
shlb
loop
cmp
adc
dec
ljmp
imul
inc
loopne
push
adc
adc
xchg
jae
xchg
xor
fstps
push
jl
jns
jecxz
pop
aaa
jbe
daa
stos
int
aaa
xchg
inc
add
dec
xor
fstl
cli
fnstenv
leave
xor
jge
mov
dec
dec
or
loopne
leave
sarl
jne
inc
popf
call
pop
dec
popf
inc
lods
pop
stos
sub
push
xchg
out
push
cmp
pop
cwtl
scas
xor
jl
fiadds
pop
incb
dec
xchg
pop
and
lea
imul
outsb
inc
or
pop
fdivs
mov
lahf
xchg
in
lods
adcb
add
lea
adc
mov
lfs
sbb
cmp
repnz
dec
mov
jns
adc
pop
sti
jno
test
push
jmp
std
add
scas
add
in
clc
mov
enter
pop
fld
fsubs
jle
or
hlt
sub
dec
cmpsl
mov
lret
ds
fadd
add
mov
fidivl
bound
repz
mov
out
pop
xor
out
iret
jns
cmp
push
dec
das
bound
add
or
ljmp
popa
test
dec
insl
jmp
lds
or
ffreep
outsb
sbb
outsl
test
xlat
xchg
and
xchg
pop
cs
movsl
mov
test
push
shrb
cmp
insb
inc
rol
aaa
adc
pop
test
mov
jns
in
mov
or
pop
sahf
xchg
retw
fildl
adc
das
push
in
jge
dec
adc
jge
and
xchg
push
push
dec
push
je
aad
dec
push
mov
sti
and
in
push
leave
movsl
lds
arpl
lea
cmpsb
jg
les
insb
mov
pushf
jo
mov
xor
push
inc
cs
rcrl
test
dec
jno
lods
test
fsubs
push
pusha
jle
jp
mov
ljmp
xlat
les
and
mov
mov
fcompl
outsb
scas
dec
jg
rorb
add
ret
adc
sub
and
mov
jp
fdivl
mov
mov
inc
mov
fisttpl
xorb
cmpsl
fimuls
icebp
add
scas
mov
push
lods
xor
insb
lret
cmp
jge
and
fimuls
jae
and
outsb
movsl
scas
les
or
aaa
into
pusha
jne
shlb
int3
fstpt
orb
das
out
pop
out
and
outsl
jg
pop
fistpll
test
shll
es
mov
adc
add
xor
sub
lods
jne
test
hlt
xor
outsb
xchg
cmp
clc
mov
mov
xchg
leave
dec
into
xor
sbb
loopne
out
sbb
add
or
xor
jmp
daa
xchg
dec
sub
jl
push
pop
push
loop
cwtl
sub
rcrl
xchg
mov
bound
addr16
dec
xchg
sub
or
stos
roll
int
jnp
ljmp
xlat
fisubrl
push
jl
js
aad
rorb
and
and
jae
clc
test
xchg
mov
jmp
mov
addr16
test
std
in
mov
dec
dec
sbb
movb
loop
inc
mov
jnp
je
cmp
xchg
aas
push
push
cld
fwait
and
pop
lea
test
xchg
enter
cs
inc
mov
aad
push
and
jb
fldcw
cmpl
sub
mov
mov
pop
sbb
cmc
mov
dec
cmp
adc
int
inc
sarb
iret
lret
hlt
inc
shlb
cli
movsb
dec
push
adc
push
inc
xor
push
fmul
add
fsubrp
fcoms
in
pushf
jmp
popa
push
movsl
mov
sub
mov
push
int
addr16
roll
outsl
mov
pop
adc
negb
mov
popf
stos
inc
pop
adc
fiaddl
and
out
loope
rcl
shll
imul
notl
leave
outsl
scas
inc
xchg
dec
cmp
mov
cmc
or
inc
pop
bound
and
mov
jge
and
mov
push
loope
lahf
sbb
push
sub
mov
cmp
ds
inc
mov
xchg
cmp
std
lods
mov
cltd
sub
cld
aad
test
cltd
pop
xchg
pop
es
in
fldcw
out
lods
inc
jo
push
ret
lret
xlat
mov
insl
cmp
icebp
mov
stc
add
xor
dec
push
and
ficoml
xor
popa
sbb
push
enter
dec
lods
mov
cmp
sub
lea
cmp
add
mov
mov
sbb
es
fcmovb
sbb
jle
cmp
mov
dec
addr16
std
mov
daa
mov
jl
lahf
jae
add
sti
hlt
xchg
inc
add
divb
jo
ds
or
mov
and
das
mov
into
dec
and
insl
outsl
jl
lds
xchg
fsub
stos
mov
js
xor
aaa
mov
dec
jns
xor
mov
pop
icebp
test
jle
xchg
rcrl
js
pop
push
push
lret
ffreep
add
lcall
pushf
pop
out
jl
cmp
cwtl
xlat
aas
pop
and
sahf
insl
es
mov
mov
icebp
push
dec
roll
and
or
in
inc
les
insl
sub
iret
loop
in
ljmp
push
sub
sar
lods
test
sbb
mov
inc
push
and
fdivrs
mov
push
and
loope
mov
jne
mov
test
push
shlb
cltd
mov
movsb
jbe
xchg
mov
mov
xor
dec
outsl
sub
cwtl
push
ds
sbb
lock
xchg
xchg
mov
mov
inc
inc
ficompl
out
popf
or
pop
mov
movsb
xchg
fidivrl
push
rcrb
cmc
mov
fadds
xadd
or
cmp
jnp
add
inc
cmp
xor
jb
ss
xchg
xchg
jo
sub
push
jg
add
xchg
sub
lea
xchg
dec
jnp
cmp
test
mov
movsl
xchg
in
je
sub
mov
dec
sub
lret
adc
gs
outsb
or
loope
adc
cmc
loop
movsl
lahf
jecxz
add
mov
or
jno
add
loop
inc
lods
lret
jbe
xchg
test
mov
imul
sub
das
aas
outsb
xor
xor
mov
jl
lods
cmp
sub
push
popa
in
cmp
fistps
shll
ficomps
mov
jo
insb
xchg
ss
shl
and
outsb
and
push
shlb
aaa
add
rcrb
nop
sbb
fsubrp
mov
rcrl
xor
push
push
and
and
xor
test
pop
push
mov
cmpsl
loope
push
xor
push
and
in
sbb
cmp
aad
push
inc
push
insl
fldl
pop
lock
loop
inc
stos
xor
cmp
in
pop
nop
fadd
mov
jp
sti
notl
or
sti
daa
idivl
jb
cld
add
cli
in
xor
xchg
jae
nop
cmp
or
dec
push
adc
orl
inc
lods
loopne
int
pop
mov
inc
cld
pusha
push
add
xor
pushf
inc
jns
xchg
lcall
call
pop
xchg
sbbl
faddl
sbb
sbb
ja
dec
movsb
int
fdivrs
loope
ret
dec
test
lods
icebp
xor
sbb
int3
push
scas
push
fiaddl
dec
and
das
lcall
call
out
push
cmp
and
pop
popf
and
cld
fcompl
add
ret
fcompl
cmp
loop
mov
inc
add
stc
into
outsb
mov
mov
xchg
jae
sub
out
pop
xor
push
xchg
and
inc
ja
dec
daa
cmp
imul
adc
adc
lds
sub
in
jg
pop
sbb
outsb
out
in
imul
je
roll
mov
mov
dec
sub
lea
cwtl
adc
xor
testb
into
in
loopne
push
sar
inc
inc
jmp
jg
scas
xor
leave
jne
leave
ret
das
dec
aas
add
ds
loop
xor
movsl
std
cmpsl
or
sub
sub
push
pop
push
sbb
push
inc
add
ret
mov
pushf
idivb
push
xchg
cltd
adc
in
mov
je
sub
decb
bswap
test
shr
imul
repz
dec
cmp
cmp
mov
lds
cmp
mov
call
mov
lods
xor
ret
push
adc
pop
fidivrs
jecxz
mov
arpl
pop
cld
jmp
adc
in
xchg
decl
push
cmp
andb
mov
insb
stc
pop
sbb
into
add
aas
outsl
xchg
in
pop
and
cmp
add
gs
adc
cmc
rolb
cmc
or
leave
jmp
adc
mov
cmp
clc
in
mov
mov
jmp
ljmp
xchg
addr16
mov
push
cmc
lret
adc
mov
into
rcll
pop
hlt
ljmp
mov
daa
xchg
inc
adc
mov
inc
push
xchg
xor
mov
mov
lahf
scas
cwtl
mov
push
pusha
mov
xlat
xor
cmpb
test
dec
mov
stos
xchg
std
xor
add
push
xchg
cmp
or
ds
jmp
push
fisttps
push
stos
fistpl
mov
sbb
fwait
and
addr16
mov
int
push
ficoms
cmc
adc
xlat
pop
mov
mov
xor
jno
or
push
ret
jge
xor
push
jno
sbb
dec
inc
sar
fmull
ja
mulb
orl
xor
movsl
inc
fistpll
add
or
mov
pop
imul
xlat
dec
inc
push
aam
xor
stos
mov
outsb
repnz
inc
mov
inc
pop
pop
test
aam
lds
daa
fwait
add
jl
mov
rcrl
jb
mov
mov
loopne
ret
fimull
pop
inc
push
push
sub
ljmp
xor
std
xor
lods
subl
push
mov
in
jp,pt
cmp
push
sub
cltd
in
sahf
cmp
popf
hlt
pop
jl
movsb
movsb
add
scas
dec
xlat
movsl
stc
push
negl
lret
in
jno
and
out
nop
push
nop
push
pop
xchg
jno
cmpsb
int
lret
push
jns
pop
adc
jb
mov
divl
arpl
fwait
dec
xchg
and
mov
pop
mov
jo
pop
andb
push
in
shrb
sub
fdivrl
inc
and
sub
mov
xchg
push
mov
add
push
ficoms
ds
mov
in
into
pop
adc
shl
fimuls
xchg
insl
int3
mov
and
and
pop
mov
inc
jae
ljmp
jne
scas
int
jmp
shrb
push
mov
jne
jecxz
pusha
pushf
lds
test
clc
jne
jge
cmp
imul
std
mov
adc
jo
push
pop
jecxz
or
lret
pop
cwtl
shl
bound
dec
ss
pop
cmp
push
jmp
push
inc
add
clc
jp
mov
mov
insl
sub
dec
dec
fildll
enter
ds
loopne
mov
popa
add
aaa
gs
jne
xor
jle
lret
cmp
pusha
mov
loope
stc
adc
popa
push
and
cmpsb
xor
aad
ljmp
cmc
push
lcall
or
cld
jne
mov
mov
mov
or
inc
jecxz
pop
mov
std
xchg
dec
pop
dec
jl
test
adc
mov
dec
call
je
lret
jb
daa
xorl
xor
testb
push
and
sbb
xlat
jo
sub
push
into
jnp
and
aad
scas
notl
das
out
loop
subb
dec
push
in
pop
or
test
int3
sub
lea
lahf
xchg
fdiv
shl
push
mov
pop
ret
add
in
and
data16
push
add
pushf
mov
mov
pop
jnp
cltd
loopne
int
popf
push
ss
push
xor
adc
sbb
sub
in
in
nop
outsl
sbb
push
or
xchg
loope
or
cmp
mov
cld
xor
in
dec
daa
add
adc
mov
cli
xchg
sti
dec
dec
mov
clc
jecxz
roll
jne
in
jg
lahf
sub
das
dec
add
xlat
cmpsl
mov
aad
movsb
mov
gs
inc
adc
or
add
or
in
xchg
lahf
hlt
add
andl
ret
jge
adc
leave
test
dec
cwtl
inc
cmp
xchg
fiaddl
addb
push
jo
add
add
and
xchg
dec
divb
nop
push
sti
push
ret
into
nop
or
cmp
pop
repnz
lods
cmp
xchg
ds
inc
adc
out
push
cmp
sbbb
in
pop
addr16
or
jno
inc
inc
lods
mov
sbb
movb
inc
sahf
fcomi
push
push
mul
ss
xchg
mov
cmp
mov
cwtl
mov
ja
gs
imul
les
pop
xchg
push
xor
pusha
loopne
fistl
sbbb
rcrb
cmp
xchg
mov
jp
fldt
rcrb
dec
dec
lea
add
pop
pop
fstpt
int3
mov
std
push
dec
shll
jne
jbe
insb
push
mov
imul
lahf
bound
ss
cld
out
mov
jg
pop
jno
and
inc
lods
popf
arpl
lahf
lret
icebp
jae
jno
lret
inc
push
jecxz
andl
dec
mov
inc
add
or
pop
clc
push
cmp
mov
or
push
test
push
test
cmp
mov
out
xor
popa
mov
push
xor
and
mov
xor
lods
cmp
cld
cli
test
push
xchg
sbb
mov
push
fmuls
xchg
test
fwait
mulb
inc
icebp
js
ds
repnz
sbb
sbb
addl
xchg
inc
int
aam
das
sub
cmc
xchg
jl
int3
icebp
jecxz
cmp
and
fsubr
jno
loope
sahf
mov
mov
jmp
mov
adc
outsb
ficoml
xor
lods
push
add
repnz
sub
mov
inc
iret
std
cmp
adc
xchg
loope
dec
filds
repz
dec
cmc
sahf
jb,pt
add
inc
jb
jl
mov
icebp
lea
and
push
add
jg
adc
int3
xchg
call
push
mov
sbb
mov
xor
scas
mov
leave
adc
add
pop
addl
mov
sbb
adc
push
sub
into
mov
sbb
sub
negb
cmp
jge
lret
xor
cmp
lret
rorl
mov
mov
scas
jp
jo
lcall
lcall
or
or
in
cltd
adc
repnz
push
dec
iret
or
dec
andb
cltd
fildll
sub
jae
test
mov
xchg
insb
jmp
mov
scas
jno
inc
lret
dec
fnsave
xchg
js
jp
or
xchg
or
cmpsb
mov
stc
jle
ljmp
subb
xchg
dec
add
sbb
push
push
adc
aad
movsl
arpl
incl
lcall
fwait
ja
inc
mov
stos
pop
push
mov
cltd
daa
push
scas
push
push
lret
lret
sbb
mov
cmovno
xor
sbb
cli
mov
mov
pop
mov
or
xchg
jbe
pop
test
pop
adcb
push
data16
cmpsb
jl
mov
pusha
clc
fisubs
sub
aad
pushf
inc
mov
add
and
inc
cmpsb
call
add
outsl
dec
mov
cmpsl
xchg
call
arpl
mov
jp
xchg
iret
out
xor
sti
inc
das
cld
cmp
jae
mov
bound
nop
das
cmp
and
cs
cmp
into
cmc
sbb
in
fdivs
int
inc
pusha
push
mov
and
xor
mov
add
add
mov
fidivrs
sub
movsb
inc
out
in
sarb
jge
dec
dec
rclb
jbe
cld
mov
nop
fadd
adc
invd
aam
call
bound
roll
icebp
ficoms
dec
bound
iret
das
pop
stos
cmp
ja
jne
fcomp
adc
pushf
int
ret
mov
lahf
outsb
cwtl
mov
cmp
ret
jo
jp
hlt
mov
jp
cmpsl
xor
push
mov
scas
mov
jno
push
and
sbb
out
sub
inc
or
xchg
adc
aam
push
pushf
in
test
outsb
jecxz
ror
adc
in
xchg
xor
cli
jle
test
xchg
cmova
aam
mov
xor
adc
andb
inc
lods
orl
and
xchg
mov
pop
leave
rcrl
test
leave
sbb
xchg
ljmp
and
xchg
xor
dec
mov
sub
out
mov
stos
cli
push
xorl
int3
faddl
call
push
or
mov
adc
rorl
push
inc
xor
ljmp
xchg
into
aad
pusha
int3
rcll
test
jp
pushf
sub
shrl
mov
aam
jns
mov
bound
xchg
mov
test
int3
fldl
shl
jae
insb
arpl
in
pop
or
repz
stos
jp
sub
rorb
sub
orb
stos
mov
mov
jp
inc
aam
mov
ficoms
jns
inc
rcr
mov
scas
mov
add
push
fsubl
jno
je
mov
push
out
subb
push
jmp
mov
xor
mov
shll
mov
jns
lret
cmp
ds
xor
or
pop
pop
aas
fidivrs
or
out
cmp
jg
ljmp
xor
jo
xor
mov
ja
ret
mov
xchg
push
or
nop
jo
mov
sahf
jmp
inc
scas
jle
mov
pop
sub
daa
push
jbe
scas
imul
rcrb
push
jb
nop
adc
sbb
or
push
loop
and
inc
mov
stos
jne
adc
sub
inc
push
jne
jl
pop
mov
pop
push
jbe
cmp
insl
jnp
cwtl
rcrb
cmpsb
sti
ja
pop
jno
fldenv
test
xlat
push
outsl
sbb
push
testb
mov
int3
out
push
cmpsb
movsb
dec
push
push
add
mov
add
sub
cmpl
int
jae
jmp
mov
movsl
mov
mov
mov
js
mov
pop
hlt
xor
sbb
ja
gs
jl
lret
cli
out
daa
sbb
test
dec
fistpll
mov
push
in
notb
cmp
bound
ss
jae
and
cltd
call
xchg
cmp
push
pop
xor
sub
in
jb
xor
mov
sub
xor
or
add
js
and
fstps
jecxz
frstor
push
sahf
mov
sub
shl
out
andb
pop
icebp
lea
mov
xchg
pop
adc
pop
call
into
call
push
jle
or
jb
fisttps
outsl
push
pusha
mov
xchg
outsb
fdivrs
cmp
add
mov
call
stc
sub
pop
lods
mov
mov
stos
jne
or
loope
sbb
ror
xorb
scas
aam
shr
cmp
imul
xor
inc
pushf
and
mov
sbb
mov
cltd
pop
dec
push
push
and
je
xchg
cmp
and
es
cmp
stos
add
push
les
icebp
xchg
aaa
and
mov
mov
mov
xchg
outsb
pop
pusha
std
lret
cmp
add
cmpsb
fdivl
or
leave
leave
fcmove
mov
pop
dec
orb
ljmp
inc
mov
fsubr
push
test
mov
dec
sahf
idivl
int3
xor
lds
mov
sub
jle
popf
add
mov
outsl
into
hlt
repz
cs
push
mov
adc
or
jmp
xor
and
aaa
jbe
repnz
add
sbb
pop
mov
pop
inc
incl
mov
pop
inc
fwait
mov
clc
imul
push
fwait
test
fistpl
adc
stos
xchg
push
adc
sbb
dec
dec
lea
repz
std
cmp
lea
cs
dec
sahf
stc
insb
aam
inc
mov
fsubp
pop
cmp
aam
jbe
mov
xchg
push
jle
and
sub
push
sbb
call
cmp
addb
push
ret
outsb
call
jo
sub
inc
and
dec
shrb
push
pop
dec
mov
addr16
daa
fiaddl
movsl
aaa
int3
push
sarl
pop
int
push
adc
pop
int
mov
cmpl
pop
mov
lds
pusha
out
fbld
or
pop
inc
out
sub
cmpsb
push
sub
lds
sub
lea
call
je
push
xchg
xchg
mov
dec
lds
xchg
mov
adc
ffree
bound
sbb
fistl
cmpsb
mov
cmp
scas
out
xchg
sub
jns
rcr
add
xchg
or
xor
jno
mov
xchg
push
dec
bound
pop
iret
push
fs
mov
repnz
cli
push
bnd
dec
lds
inc
push
gs
lret
lods
lods
nop
pop
jnp
pop
push
mov
ficomps
and
fbstp
sub
push
xchg
enter
xlat
in
sbb
push
lret
push
nop
push
adcb
notl
stc
sbb
aad
in
in
shrb
aam
push
mov
mov
call
push
xchg
sbb
xchg
fdivs
movq
dec
push
imul
jbe
out
adc
sub
ffree
cs
imulb
shl
fistpll
cltd
inc
popf
out
xchg
xchg
push
clc
repnz
sbb
and
cmp
pop
out
scas
cmp
out
dec
fs
movsl
mov
jmpw
jns
jbe
fiadds
in
jbe
pop
xchg
add
pop
pmaxsw
mov
push
mov
rcll
movsb
lret
lods
cli
adc
sub
repnz
jo
cmp
push
add
sub
les
push
outsl
ss
add
push
imul
push
cmp
ss
popa
scas
imul
pop
rclb
pusha
push
push
jecxz
sahf
xchg
pushf
pop
mov
insl
pop
mov
out
into
pushl
fwait
cmc
add
and
imul
mov
cmp
mov
and
push
mov
loope
pop
into
fxch
add
in
rcll
cmp
dec
push
test
mov
sbb
xchg
push
and
insl
dec
sti
mov
fwait
inc
je
mov
idivb
and
cmp
pop
test
or
lret
xor
aas
add
gs
lea
and
xchg
cmp
pop
les
test
int
enter
mov
hlt
inc
or
jmp
sub
pop
lcall
pop
ja
mov
lret
pushf
mov
push
jo
aaa
cmp
sbb
arpl
hlt
pop
rorb
and
insb
sub
or
test
mov
add
mov
sub
movsl
into
and
push
xchg
movsl
or
pop
rcrb
roll
pop
xchg
xor
test
xchg
adc
sbb
mov
les
mov
mov
ret
pop
lock
movsb
out
mov
pop
stc
mov
push
fldt
das
scas
stos
xchg
pop
es
mov
cmp
pushf
xchg
xchg
enter
rclb
mov
mov
add
jb
cmp
jno
int
push
sbb
lds
hlt
xor
int3
test
push
dec
cmpsb
adc
lock
jmp
ret
inc
xor
xchg
test
lcall
jae
lret
pop
or
addr16
inc
adc
push
xor
arpl
popa
outsb
xchg
adc
xchg
inc
sbb
lds
xchg
scas
push
mov
and
repnz
sbb
negl
loopne
stc
mov
xchg
fs
push
inc
mov
xchg
add
leave
stos
iret
movsb
xchg
adc
loopne
jb
mov
ljmp
clc
inc
repz
mov
mov
xor
fistpl
xchg
add
add
fnstsw
shll
jno
sarl
mov
push
jmp
pop
or
ret
add
lock
jno
jb
addl
jbe
mov
test
insb
mov
mov
imul
add
jmp
inc
pop
popa
cmp
cwtl
lret
push
popa
cs
fsubl
imul
mov
sbb
test
leave
movsb
mov
xor
jg
fbld
stos
adc
sub
fimuls
pop
or
cmp
pop
add
aad
std
xor
jp
nop
ret
add
jne
fsubr
push
push
pop
mov
filds
pusha
sub
bound
arpl
dec
push
adc
popf
pushf
ljmp
pop
ret
push
inc
pop
call
dec
sbb
mov
xor
push
or
inc
cmpsl
mov
or
or
or
xor
cmp
dec
subl
push
pop
jp
sub
mov
or
inc
rcr
ds
xor
jnp
insb
in
push
push
into
ja
in
xchg
cmc
cmpsl
neg
add
cli
in
cmp
lock
adc
or
and
dec
call
imul
popa
xor
pop
lods
popf
dec
cmp
bound
lcall
jmp
fwait
or
pop
push
ljmp
div
adc
in
pop
sarl
cmp
cmp
cmove
dec
and
cmp
imul
enter
sub
xchg
mov
aam
pop
das
inc
pop
mov
or
inc
cmp
aad
dec
or
xchg
or
stos
sub
lds
push
jne
popf
lcall
add
lods
mov
add
add
loop
push
xchg
rcl
negl
xor
rol
cmp
divb
push
rorl
mov
je
loopne
stos
mov
mov
dec
aam
mov
mov
and
jae
inc
adc
mov
mov
jge
jno
mov
push
mov
fcom
and
shlb
push
loope
push
add
push
mov
mov
push
jecxz
cmc
js
dec
mov
test
mov
inc
sub
jl
pop
les
lods
fnstsw
jnp,pn
cld
xchg
xchg
cmp
cmpsl
orps
lcall
rclb
xchg
sub
loope
adcl
jae
popf
fidivrs
or
mov
push
sbb
push
popa
adc
lahf
xchg
pop
add
pop
jne
xchg
adc
sub
and
ja,pt
setle
and
pop
das
push
push
inc
pop
adc
iret
and
imul
cmpsb
push
jge
ja
ret
ret
adc
std
bound
push
fdivl
mov
inc
sub
pop
aas
movsl
dec
sahf
and
xor
jl
xchg
xchg
fsubr
mov
adc
push
ja
out
nop
and
movsl
fiadds
das
mov
pop
dec
aad
mov
inc
pushf
pop
xor
push
lods
lods
cwtl
push
jo
in
mov
leave
xor
sub
orl
negl
jmp
jo
imul
mov
in
xchg
repz
ljmp
dec
xchg
loopne
test
mov
mov
iret
and
xchg
and
mov
fsubrl
xchg
xchg
cs
movsb
in
cmpsl
insb
jg
adc
cmpsb
or
movsl
sti
decb
or
sahf
fs
iret
sarb
add
adc
cwtl
push
cltd
jnp
pop
dec
hlt
dec
or
pop
addr16
add
daa
ret
jecxz
jp
sub
jg
ljmp
arpl
xor
or
test
jo
cmc
test
push
movsb
jae
mov
adc
push
jmp
test
ljmp
adc
sbb
cmp
xor
fisubl
mov
mov
xor
xor
cld
aas
cmp
or
inc
inc
movsl
sbb
push
popl
pop
inc
std
or
fsubs
paddsw
loopne
cltd
enter
pop
lds
stos
into
jnp
jnp
inc
adc
mov
test
test
dec
shlb
push
imul
ljmp
push
mov
mov
push
push
fisubrs
addb
cmpsb
sti
cmc
adc
cmpsb
mov
and
xchg
rclb
inc
mov
add
mov
xchg
insl
fdivrl
arpl
inc
insb
add
sub
cmp
mov
fdivp
es
push
pop
add
rol
jmp
fmulp
jo
bound
sub
and
aad
cmp
inc
scas
inc
push
out
scas
hlt
je
test
in
insb
jecxz
aas
stos
cmp
ds
adc
data16
inc
lahf
cmc
or
jns
lahf
data16
int
jno
or
xor
fdivs
gs
add
lods
fbstp
popa
popf
imulb
inc
sbbl
mov
leave
incb
cwtl
pop
ljmp
inc
pushf
adc
pop
clc
sub
cmp
xorl
in
iret
test
sub
ret
xor
enter
adc
pop
mov
add
sbb
pop
jbe
daa
loope
xor
push
hlt
inc
jg
lahf
xchg
sti
cmp
daa
outsb
mov
sub
fucom
add
test
mov
push
in
lock
and
push
jne
gs
packsswb
int
add
out
sbb
push
mov
dec
jge
inc
cltd
mov
xchg
add
xor
ds
iret
mov
popa
jno
or
or
cmp
pop
adc
hlt
xchg
fstpl
andb
fisttpl
stc
cmp
outsb
sub
dec
or
daa
fwait
xchg
dec
popf
cwtl
loope
das
ljmp
into
xchg
stc
pop
in
mov
leave
xor
test
std
add
shrl
pop
arpl
dec
inc
sub
adc
jns
cwtl
mov
xchg
add
jne
ljmp
add
inc
outsl
sub
call
adc
jmp
ds
out
bound
mov
sbbb
xchg
popf
jno
pop
inc
cwtl
ret
pop
mov
jecxz
jo
pusha
mov
cli
pop
out
xlat
mov
mov
dec
cltd
xchg
lret
pushf
jmp
jbe
pusha
mov
adc
clc
xor
jo
pop
push
data16
dec
mov
in
mov
xchg
xchg
fidivrs
arpl
stos
or
rcll
das
in
insb
mov
xchg
mov
pusha
loopne
out
jmp
push
dec
test
xorb
and
push
bound
aam
xor
test
inc
repnz
loopne
dec
imul
mov
dec
mov
inc
dec
mov
call
mov
sub
mov
jmp
out
or
mov
and
add
dec
in
xchg
push
lret
inc
mov
insb
movsb
or
jg
jl
xchg
xchg
pusha
in
iret
xchg
add
test
push
cs
jnp
lcall
mov
xchg
aas
iret
inc
rcr
fsubrl
jnp
adc
xchg
pop
mov
mov
movsl
orl
dec
into
xor
rclb
icebp
push
popf
data16
dec
aas
cmp
inc
and
inc
pop
push
mov
sub
out
add
imull
sbb
out
std
or
cmc
int
jns
loop
ss
push
lahf
scas
or
mov
or
add
dec
fmuls
cmpl
or
jae
lahf
fisttpll
std
repnz
push
sti
add
int3
ds
cmp
inc
mov
hlt
lret
jnp
repnz
xor
icebp
sub
notl
fbstp
jmp
mov
loopne
fbstp
aam
in
out
or
ds
jmp
in
mov
pop
fucomi
cmp
call
push
mov
xor
aad
lods
inc
push
shlb
call
daa
cmp
addr16
push
push
adc
fsubl
add
mov
jle
pop
insl
dec
gs
jecxz
popa
aaa
mov
out
fldenv
sbb
pop
leave
imul
ret
movsb
loope
fcomip
cltd
dec
popf
or
mov
cmp
imul
pop
std
pop
inc
mov
xchg
mov
xor
scas
pop
shlb
outsb
loopne
sbb
push
xor
loope
lods
movsb
xchg
sub
and
or
cmpsb
test
cmp
mov
pop
cli
fs
outsl
cmpsl
and
push
enter
mov
pop
jae
xlat
cli
leave
mov
push
mov
and
pop
repz
and
inc
mov
pushf
xchg
jo
ljmp
push
cmp
stos
repz
xor
sub
dec
pushf
pop
jmp
push
jnp
aas
add
pop
outsl
xchg
in
and
and
and
xchg
stos
or
sar
insb
lret
out
ljmp
jg
add
cmp
dec
sub
stos
ds
dec
imul
stos
lock
divl
int
rcl
scas
push
pop
fdivs
pop
jge
stos
out
xchg
xchg
and
in
inc
mov
dec
mov
decb
lods
push
xchg
rorb
adc
sarb
jp
inc
inc
stos
pop
outsb
mov
mov
sbb
movsl
out
aaa
clc
jmp
fldt
daa
jg
mov
test
stos
jl
sbb
outsb
adc
jno
aad
flds
stos
jg
shl
sbb
fstl
shr
movsb
clc
xor
sbb
xchg
scas
test
insl
sub
sbb
adc
cmp
outsl
pushf
and
insl
push
sub
pop
test
cmp
jnp
or
jo
lea
scas
sbb
int3
mov
mov
push
mov
adc
mov
cld
arpl
repz
repnz
outsb
inc
inc
push
inc
jge
lea
scas
jle
mov
jl,pt
inc
push
push
inc
sub
push
cmp
cmp
push
add
shr
cli
fidivrs
dec
add
xor
int3
fsubrs
xor
or
and
mov
xchg
aaa
in
push
xlat
xor
sub
aaa
adc
jmp
mov
or
jb
jae
sbb
cmp
jmp
cli
daa
sub
and
inc
pop
lea
adc
fisttpll
push
sahf
xchg
rcrb
mov
dec
mov
dec
pop
pop
xor
and
out
mov
rcrl
xorl
mov
mov
mov
push
sbb
bts
sub
and
repnz
sbb
gs
outsb
pushf
ds
movsl
push
pop
cmp
mov
ss
push
stos
pop
mov
sub
lcall
aaa
cs
xchg
dec
inc
and
sub
pop
xor
cmp
dec
adc
jo
dec
cwtl
mov
inc
fs
addb
cmp
ss
jns
jno
les
gs
cs
test
mov
sbb
add
jp
mov
and
cmp
mov
sub
cmpsl
aad
mov
push
xchg
push
jl
push
add
push
test
cmp
jl
xor
jns
in
pop
adc
cmp
inc
stos
lea
adc
inc
add
arpl
insb
lods
sbb
pop
js
push
movb
je
push
outsl
mov
push
or
fstp
xchg
lcall
mov
mov
push
inc
std
jl
out
cmpsl
mov
cltd
sbb
sar
adcl
testl
push
pop
in
scas
mov
idiv
in
cmp
jg
das
mov
sti
cmp
mov
cmp
pop
inc
in
roll
pop
dec
cmp
inc
aam
mov
mov
cld
xchg
dec
scas
mov
fcmovu
cmp
and
shlb
pop
cs
arpl
adc
and
mov
rolb
xchg
mov
inc
cltd
jne
dec
inc
in
pop
sub
jo
mov
adc
addl
lret
lahf
xor
scas
cmp
add
stos
stc
jae
pop
stos
in
notl
sub
mulb
dec
or
stos
sbb
dec
int
add
daa
imul
xchg
in
aaa
cld
ja
add
add
frstor
dec
mov
orl
jns
insb
push
push
xor
dec
es
push
adc
and
xchg
dec
cmp
cmp
rorl
dec
negl
and
mov
in
insl
adc
mov
cmp
es
fs
cwtl
jnp
mov
sub
lea
cltd
je
call
nop
in
nopl
in
cli
scas
mov
repnz
push
test
rolb
cmc
xchg
sbb
test
cmpsl
fildll
inc
popa
adc
std
stc
dec
inc
dec
rol
psubsw
and
ljmp
sbb
mov
insl
iret
lock
shrb
mov
nop
and
into
sub
mov
adcb
loop
pop
sbbb
sbb
jp
enter
mov
cmp
int
sub
loopne
jae
inc
stos
add
rcrl
ss
sbb
mov
jae
ljmp
cmp
mov
pop
pop
pusha
nop
xlat
movb
xchg
je
adc
stc
dec
lret
ret
lds
test
movsb
sub
in
inc
scas
ja
push
rclb
loope
das
lods
shr
leave
push
imul
daa
roll
cltd
fnsave
bound
pop
fnstcw
sub
jecxz
pop
lcall
fcomps
cmpsl
pop
adc
inc
push
daa
inc
lret
arpl
sti
popf
xchg
or
cmpsb
adc
dec
pop
pop
fsub
test
loope
and
add
addb
or
xor
mov
test
popaw
sub
inc
enter
jnp
mov
jb
out
jmp
sub
cmp
lock
xor
test
js
jne
ret
add
dec
pop
insb
sahf
mov
mov
iret
adc
xchg
lds
cmp
inc
jbe
divb
and
inc
in
or
sbb
or
pop
cmc
loope
scas
repz
inc
push
pop
mov
sub
rclb
loope
out
dec
stc
lock
insl
stos
push
cmpsb
je
xor
cmp
add
xchg
mov
ss
lods
out
jmp
cli
jns
push
add
inc
mov
add
xor
jp
sub
jb
sbb
in
lea
dec
scas
pusha
jle
lahf
negb
andl
int
outsb
cmovbe
jno
or
repz
cs
cmp
int
rolb
mov
cmp
data16
mov
or
or
jl
andb
loopne
loopne
cmpsb
aaa
pusha
mov
mov
cmp
inc
inc
stc
push
lcall
repz
movsl
inc
cmpsb
adc
notb
and
pusha
ret
push
push
cmp
mov
loop
push
fists
pop
or
shr
sbb
adc
divb
pop
adc
push
bnd
mov
inc
add
sahf
sbb
cmp
xchg
aad
enter
xor
movsl
iret
mov
inc
sbb
lock
addr16
sbb
mov
inc
in
in
insb
cmpsl
jo
loope
jbe
imul
loopne
xchg
sbb
in
and
aaa
rsqrtps
sti
lahf
dec
popa
pop
jns
js
inc
pop
divb
jge
jmp
rcrl
pop
aam
cmc
ficomps
mov
push
xchg
mov
cwtd
ss
jl
clc
push
fstpl
rcr
push
and
out
mov
adc
sarb
mov
mov
jns
mov
xchg
mov
add
adc
cmp
lea
sub
xchg
xchg
dec
adc
inc
sti
dec
cmp
and
mov
lahf
mov
jl
into
mov
lea
fwait
or
cmp
pop
notb
xor
ss
ljmp
outsb
out
icebp
mov
and
mov
fists
lahf
and
push
xor
ret
lret
jno
imul
xchg
xor
enter
stos
out
mov
jmp
xor
mov
imul
xchg
pop
pop
push
out
cltd
mov
pop
les
mov
pop
sbb
mov
cwtl
ja
ds
push
jmp
pop
test
jp
roll
ljmpw
insl
popf
cmp
aas
sti
movsl
dec
mov
shrb
mov
pop
dec
sti
xchg
jg
or
sub
cmp
xor
mov
js
lret
sti
mov
out
ficoml
stc
shlb
popa
ret
adc
testl
fisubl
sti
in
outsb
mov
mov
iret
or
into
test
xchg
jae
xor
jae
jmp
aaa
push
or
or
mov
mov
loop
mov
iret
or
jp
popf
sbb
sahf
in
movsl
push
repz
mov
and
dec
xor
rorb
mov
roll
loope
xor
inc
xchg
std
jg
adc
push
xor
adc
cwtl
int
das
test
out
adc
daa
mov
jbe
pusha
push
vmread
aas
cld
popa
lods
jb
and
fwait
lcall
push
js
ret
loop
rclb
cmp
jecxz
fiadds
mov
mov
pop
cs
cs
jecxz
dec
leave
push
mov
or
mov
sbb
iret
in
add
and
adc
inc
cwtl
nop
xor
int3
rclb
lea
testb
movsl
mov
pop
inc
rclb
fucomi
ret
sbb
fisubrs
fs
sbb
jb
mov
xchg
xor
in
and
aam
sub
fwait
jp
pop
hlt
icebp
cmpsl
inc
loope
fbld
arpl
and
mov
ja
jb
dec
push
push
fldcw
push
lea
sub
int3
dec
jg
ja
pop
pushl
ja
jns
stos
or
push
rcl
ja
mov
notl
dec
cli
push
adc
lret
fldt
and
jne
mov
imul
dec
mov
adc
or
add
dec
pcmpeqd
jb
iret
jmp
leave
dec
sahf
add
push
jo
xchg
mov
jno
pop
fldcw
sarb
xor
addr16
loop
out
cld
jmp
jae
hlt
lods
or
ljmp
sub
dec
jae
jnp
adc
sbb
push
enter
xchg
test
mov
jp
sbb
or
adc
jl
sub
out
push
cmp
iret
xchg
dec
sub
lahf
xor
pop
jp
push
pushf
fcmovnu
nop
es
cmp
daa
jg
test
jp
cmpsl
test
das
scas
fs
xlat
or
leave
add
inc
xor
lret
sub
mov
inc
lcall
cmpsb
mov
pushf
pop
fcoms
shlb
ficoml
cld
jo
mov
call
fwait
arpl
lods
js
mov
or
out
ror
cmp
xor
test
iret
loope
xor
cmp
lcall
popa
xchg
mov
push
loope
inc
push
sub
mov
xor
sbb
push
hlt
in
push
add
sbb
mov
ret
push
lds
adc
enter
inc
add
push
scas
push
pop
xchg
lods
xor
icebp
test
repnz
mov
imul
cmp
sub
dec
std
push
lcall
mov
sbb
sub
stos
das
cmc
std
inc
push
xchg
sbb
dec
jns
pop
fmul
gs
pop
out
or
mov
mov
pop
notl
orb
scas
inc
jp
rclb
icebp
out
xchg
fldenv
inc
jecxz
dec
arpl
push
pop
push
clc
fs
sub
and
pop
push
gs
jp
fs
test
lcall
outsl
ret
roll
xor
mov
lods
jge
jle
xor
call
mov
stos
icebp
leave
sbb
jg
pop
sub
or
jb
pusha
inc
jo
sub
adcl
adc
addb
inc
loopne
cmpsl
lock
adc
jae
pusha
jns
fs
test
out
cltd
popa
std
pop
cmc
or
mov
daa
loop
test
mov
add
outsb
jno
and
adc
jmp
sbb
push
mov
shlb
sar
mov
dec
cmc
adc
cmp
pop
dec
test
ffreep
sub
nop
mov
int
divl
push
mov
pop
or
mov
sbbb
hlt
or
jmp
sbb
cmp
flds
or
idivl
test
jb
jno
sbb
sbb
shr
lret
les
adc
pushf
sub
jle
or
dec
xor
ret
movsb
pop
repz
das
into
into
stos
mov
xchg
cmp
cwtl
iret
aad
mov
ljmp
je
and
decl
bound
sti
inc
sahf
add
push
sbb
mov
nop
sar
sarb
ret
and
nop
popa
mov
sbbb
subl
dec
sbb
pop
lret
dec
mov
fisttpl
sub
xchg
sub
sbb
dec
pop
sbb
adc
sbb
dec
in
mov
push
popa
sub
in
mov
fdivrl
push
fsubs
inc
jmp
mov
mov
out
mov
lret
pop
das
dec
cmp
jl
cmpsb
rorl
push
mov
pop
mov
aaa
cmc
add
ljmp
cmp
mov
test
stos
popa
sbbl
cmp
xor
mov
and
adc
mov
clc
or
inc
out
in
cmp
ret
add
dec
mov
data16
xor
repnz
and
pop
mov
stos
popa
nop
pop
sbb
cmp
lcall
mov
sub
sbb
into
lea
in
jb
fists
lea
cld
and
cmp
push
iret
sub
xor
pusha
insb
push
mov
ret
sub
xchg
and
xchg
pop
or
pop
or
mov
mov
cmp
loop
or
pop
mov
stc
stos
pop
stc
cmpl
add
add
rorl
je
add
aad
mov
inc
faddl
clc
lcall
sbb
addr16
add
mov
out
inc
int3
mov
fadd
add
dec
fs
dec
xor
data16
pop
leave
add
mov
loop
push
jno
dec
sub
cmp
je
add
imull
xor
jnp
sub
arpl
lret
roll
inc
iret
xchg
push
xchg
mov
jl
and
pop
push
push
cmp
pop
orl
cmp
ror
adc
orb
pushf
xchg
add
jmp
inc
cmp
iret
ret
push
and
cmc
pop
sbb
sahf
push
mov
shll
test
cwtl
rclb
bound
cmp
sbb
adc
dec
cmp
jl
popf
and
js
cmp
cli
fbld
stc
xchg
leave
xchg
inc
cmp
inc
mov
jae
fdivp
xchg
xchg
insb
dec
int
and
cli
push
int3
push
sbb
or
cmp
dec
rcrl
into
xabort
repnz
pop
scas
mov
insl
pop
xchg
pop
add
xor
mov
push
aam
mov
clc
stc
sbb
cwtl
int3
iret
scas
pop
insb
xchg
xor
inc
pop
out
sbbl
in
in
sti
pop
mov
jmp
cs
pop
jl
aas
adc
xchg
popa
in
sub
jl
dec
mov
test
xor
loope
addl
stos
mov
aaa
mov
mov
xchg
das
popa
pop
xchg
mov
sti
mov
fnstsw
out
mov
jle
ss
sbb
mov
roll
test
sub
mov
aas
aad
mov
pushf
test
negb
sbb
leave
mov
mov
xchg
sar
mov
sub
out
sbb
test
out
inc
dec
pop
dec
pop
sbb
dec
cs
dec
jecxz
js
fmull
test
sbb
iret
hlt
je
stos
pop
test
dec
add
test
sub
dec
movb
cmp
rorb
sarl
pop
inc
add
and
imul
and
and
inc
jg
out
sub
leave
pop
popa
clc
fs
jl
sbb
cmp
push
aaa
fsubr
lds
repnz
aad
fmull
jmp
or
add
ds
inc
std
fnstenv
shll
lods
out
daa
jo
inc
adc
mov
pop
sub
dec
cmpsb
pop
ret
ja
stos
push
push
gs
test
add
scas
out
or
pop
mov
or
push
cmpsb
std
inc
sub
int3
scas
test
insl
into
push
repz
in
and
add
jnp
push
push
aas
int
leave
mov
and
push
jg
into
sbb
cmp
and
adc
xchg
inc
and
insl
pop
push
lea
sub
adc
mov
test
icebp
xchg
or
sbb
cwtl
inc
xlat
aad
cltd
dec
shl
adc
std
sbb
pop
stc
mov
mov
das
stos
jmp
enter
xor
pop
xchg
lds
xchg
lds
add
inc
mov
stos
pop
jg
cld
mov
mov
dec
jmp
test
addb
mov
pop
jb
push
ja
push
pop
mov
adc
mov
cs
jno
dec
mov
lods
xchg
shr
shr
int3
stos
in
push
mov
stos
adc
xchg
fcmovu
fldt
movsb
dec
pop
adc
adc
xor
mov
dec
mov
xor
cmp
xor
lret
mov
out
jo
loope
arpl
call
shl
leave
stos
nop
mov
mov
bound
gs
psllq
mov
pop
mov
aad
mov
lea
pop
inc
jecxz
jne
imul
sbb
dec
movsl
cmp
cmp
loop
insl
lret
call
mov
adc
or
test
mov
dec
cmpl
fmull
lret
pop
mov
dec
mov
ret
loope
and
sub
mov
push
push
push
pop
jbe
xlat
iret
mov
cmpl
lcall
lods
xchg
fsubrs
sbb
mov
dec
scas
aas
popf
sbb
ret
decb
push
loope
xor
push
jbe
push
push
lds
push
and
mov
sbb
cs
add
cwtl
test
and
sub
pop
push
adc
std
insb
rcr
and
pop
jp
or
iret
int
push
mov
dec
fisttpll
jne
mov
aas
daa
fsincos
mov
iret
xor
xchg
fistl
or
lcall
pop
xchg
push
aas
xor
mov
xchg
je
pop
shrd
dec
ret
mov
jne
or
jecxz
in
lahf
mov
das
outsl
ret
xor
mov
jg
mov
lock
mov
lods
inc
and
push
push
or
push
mov
mov
loop
and
fwait
pop
icebp
mov
aas
pop
mov
es
shr
push
test
cmp
in
push
jb
and
fs
ja
divb
mov
sub
dec
jb
cs
sbb
stos
iret
fs
ficoms
push
stos
shll
js
or
mov
sub
das
imul
pop
dec
into
mov
pop
xlat
ds
mov
fwait
jmp
mov
daa
movl
adc
and
jnp
xchg
cmpsb
data16
sbb
leave
shlb
push
jne
lock
cld
mov
pop
fs
and
add
jmp
xor
and
cwtl
or
ret
xchg
and
shlb
outsl
and
dec
mov
push
pop
add
sarl
dec
cmc
mov
jne
sub
ret
mov
mov
mov
pop
dec
xor
test
push
bound
sarb
push
xchg
andb
and
lahf
notl
jne
jecxz
mov
iret
xor
faddp
dec
aaa
push
fwait
enter
sti
jp
pop
mov
adc
inc
xor
jle
mov
xor
les
lods
mov
push
mov
call
xor
and
xlat
je
jge
add
adc
mov
icebp
loope
ret
sub
mov
ljmp
inc
adc
push
into
jg
stos
mov
movsb
pushf
jbe
out
mov
mov
aaa
jge
pop
movsb
sbb
stc
idivb
hlt
inc
xor
mov
add
sarl
mov
sub
fnstsw
add
pop
scas
repz
and
inc
xchg
xor
and
xchg
or
rolb
rcrl
aad
andb
out
repz
xor
inc
push
cmpsl
dec
pop
mov
clc
and
scas
lahf
aad
xor
cmp
add
or
lret
mov
adc
mov
je
test
test
movsb
int
icebp
xorl
sti
into
mov
stc
adc
das
mov
push
ficomps
sahf
int
pop
xor
jno
adc
xor
fisubs
lret
scas
xor
insb
sbb
mov
sbb
hlt
jmp
movsl
inc
ficoml
mov
lret
insl
xchg
adc
cmpsl
inc
inc
push
or
js
fwait
jnp
add
lds
scas
loope
insl
scas
cmp
aas
data16
movsl
mov
stc
cli
aad
mov
loop
in
pop
inc
fs
arpl
xor
out
sub
test
mov
out
add
cwtl
inc
arpl
dec
pop
mov
js
jne
sub
xchg
andb
stos
and
mov
int3
pop
popf
push
xchg
push
andl
outsb
adc
add
mov
cmc
icebp
cwtl
xor
mov
mov
add
xchg
mov
f2xm1
adc
cmpl
add
loop
fmul
push
inc
mov
in
sub
mov
inc
mov
test
add
sub
in
lea
mov
movsl
xchg
mov
mov
mov
imul
mov
stos
pop
mov
data16
or
fwait
sbbb
push
jne
lds
test
xor
insb
movsl
xor
das
mov
pop
dec
ljmp
add
or
mov
test
push
test
sub
pop
or
mov
stos
in
out
repnz
pop
sub
stc
mov
cmp
movsb
add
fsubrs
repnz
jg
pop
jmp
sub
mov
int3
rolb
xlat
in
push
xor
xor
test
mov
in
scas
xor
mov
das
or
xchg
and
mov
jl
mov
bound
fdivrp
in
sbb
cmp
lds
xchg
iret
outsl
add
mov
cmpsl
fdivl
cmp
jbe
pop
fnsave
rolb
neg
xchg
stos
out
nop
pop
popa
roll
loopne
in
in
jns
push
dec
push
mov
push
mov
xor
jmp
xchg
ja
movsl
adc
sbb
jge
xchg
test
clc
and
jle
xchg
cmp
test
aad
insb
mov
cmp
jmp
pop
or
or
mov
or
repz
mov
mov
cmp
icebp
xchg
sub
sbb
mov
jl
inc
inc
sub
in
xchg
in
lea
push
enter
and
repz
sub
dec
stos
xchg
test
adc
into
int3
xchg
cld
pop
add
inc
fisubrl
in
es
fimuls
iret
jne
ss
push
inc
jns
fyl2x
es
lret
jmp
pop
inc
ja
xor
xor
xchg
mov
xchg
negl
scas
jbe
mov
xlat
dec
pop
std
inc
movsl
jmp
inc
sti
ljmp
dec
jge
jge
inc
push
jbe
adc
outsb
daa
cs
insb
xor
or
dec
int
dec
mov
inc
inc
sti
xor
pop
xchg
cli
jle
fsubrl
aam
cltd
adc
adc
sub
arpl
scas
daa
add
adc
fimuls
xchg
leave
cmpsl
jb
mov
roll
mov
add
jmp
dec
add
sbb
push
mov
xchg
outsb
pop
bound
lcall
push
popa
mov
xlat
sub
cmpsw
outsl
and
or
stos
ja
clc
adc
fdivrs
adc
cmp
jb
and
mov
out
int
mov
mov
mulb
mov
mov
cmp
das
mov
cmp
aas
mov
jno
lea
shrb
lock
adc
repnz
insl
dec
xor
mov
inc
mov
movsl
push
arpl
aaa
xor
lds
addr16
xchg
jecxz
push
lahf
jae
decb
outsb
sub
leave
mov
or
movsl
jg
cmp
jne
fsts
or
xlat
xchg
jge
lahf
test
inc
ret
pop
loop
rorb
ret
push
dec
mov
sbb
in
in
dec
in
jecxz
fsts
mov
movsb
adc
push
popf
mov
pop
cmp
cmp
dec
pop
inc
out
sub
sahf
lea
ja
jns
mov
lods
lock
ja
sti
jecxz
enter
sbb
pusha
fmuls
lock
mov
and
fnsave
imul
mov
dec
cmpb
pop
add
mov
cmp
jbe
in
loop
xchg
dec
mov
mov
jae
lcall
or
inc
mov
test
sbb
fnstsw
and
pop
mov
mov
dec
lods
sti
push
pusha
aaa
and
dec
inc
jno
sub
sub
push
pop
jno
jne
lcall
inc
and
jb
popa
jne
subb
lods
xchg
and
mov
mov
sbb
test
mov
mulb
xor
mov
jmp
sbb
aas
lock
adc
and
shrb
pop
dec
stos
je
imul
adc
imul
outsl
lock
int3
cltd
mov
add
in
mov
in
inc
lret
jg
dec
jbe
mov
sbb
mov
test
test
mov
lcall
xor
addr16
or
xlat
or
inc
jp
lods
sub
arpl
jbe
std
gs
and
mov
into
jne
adc
xor
jnp
pop
push
es
into
push
in
cmp
and
dec
stc
leave
dec
push
std
rolb
cmovb
inc
fstps
xchg
insl
stos
ss
jo
jnp
loopne
outsl
daa
rolb
adc
push
aad
xchg
stos
xor
cmp
stos
imul
loopne
push
xor
es
jne
lret
fcomip
pop
data16
sbb
jl
mov
pop
cld
lods
push
cmp
jmp
outsb
cmpsl
rep
test
lcall
and
data16
test
es
int3
sub
jmp
js
cmp
test
mov
sbb
xchg
push
cmp
repnz
mov
insl
push
jae
and
rcll
inc
out
bound
fisubl
popf
out
mov
cli
fldl
mov
pushf
mov
hlt
pop
mov
add
int
pop
inc
insl
jno
jo
int
out
pop
or
andb
fcmove
hlt
cmp
push
cmpsb
and
lods
and
jne
xchg
je
mov
cmpl
sti
iret
mov
fistpl
xchg
xchg
popa
scas
cmp
mov
or
or
loop
out
mov
fisubl
out
push
fwait
xchg
fmuls
jb
add
add
add
add
orb
sbb
test
mov
cmp
pop
lea
das
mov
jo
stc
mov
inc
popf
cmp
es
sti
push
cmp
iret
dec
pusha
cwtl
inc
gs
dec
das
jne
lods
scas
or
push
lock
movsl
jns
xchg
xor
mov
js
mov
add
test
jnp
loop
inc
int3
out
test
push
jmp
clc
add
jecxz
jne
int3
int
addr16
jne
add
jo
sub
outsl
jo
mov
shrl
testb
inc
cmpb
add
jo
pop
je
or
fists
imul
mov
imul
sub
mov
sti
or
insb
push
movsb
test
loope
adc
mov
or
xor
push
mov
pop
mov
dec
push
test
pop
stc
das
push
jge
adc
lcall
lds
push
sahf
les
cmpsl
push
daa
test
pop
xchg
lcall
das
js
fisubs
mov
jmp
fnsave
inc
push
and
testb
sub
add
add
xlat
fnstsw
insl
fidivrs
stc
lds
out
jge
js
fisttpl
mov
movl
movsl
sub
add
fimuls
sarl
aaa
ja
call
daa
push
cmpsl
repz
or
lods
mov
bound
and
mov
imul
js
inc
dec
or
jbe
add
cwtl
jecxz
in
loop
fdivr
lea
dec
push
fnstenv
jnp
push
jns
jns
pop
mov
stc
pop
jecxz
push
mov
and
sbb
or
inc
jae
mov
jno
or
pop
cmp
add
fisubs
addr16
cmp
dec
mov
or
mov
push
and
pop
int
and
js
inc
rcrl
and
jbe
push
rcrb
push
adc
out
mov
jae
add
pop
ret
mov
into
add
xchg
leave
pop
jo
aam
dec
aam
adc
push
add
loopne
pushf
mov
sub
icebp
movb
pop
loop
dec
push
dec
jmp
shlb
data16
sbb
mov
sub
scas
adc
mov
je
adc
imul
push
adc
fnstenv
out
fucomi
mov
sbb
mov
or
jns
sub
mov
inc
lret
dec
pop
cwtl
in
repnz
pop
adc
jg
sbb
fwait
notl
pusha
addr16
imull
fidivrs
test
adc
pushf
or
cs
stc
pop
jo
sub
mov
repz
mov
mov
lcall
dec
mov
xchg
and
pop
inc
mov
push
xchg
ds
fiadds
push
js
cmpsl
ljmp
cs
bound
mov
test
mov
adc
pop
int3
and
sub
int3
adc
shl
xlat
arpl
fwait
mov
ljmp
dec
add
leave
cmpsl
sub
push
loopne
fsubrs
es
cld
pop
mov
test
sub
fdivl
pop
jo
clc
inc
and
jle
sbb
pop
icebp
jae
sarl
test
push
fnstsw
inc
sahf
xchg
jo
pop
andl
fdivrs
cmp
loop
push
push
je
inc
sub
fs
outsb
mov
mov
jbe
sbb
pushf
jmp
out
sbb
in
clc
gs
pop
mov
popf
xlat
dec
dec
xchg
into
add
and
aam
mov
in
sub
push
add
test
mov
xor
lcall
in
sub
filds
xchg
roll
pop
push
push
xor
cli
xchg
xchg
lret
fbld
jb
cmp
fs
fnop
cmpsb
push
xchg
lods
sub
std
aad
add
dec
xor
imul
aaa
pop
sbb
and
stos
mov
lcall
out
shll
jno
icebp
imul
insl
mov
divl
sub
in
in
push
jmp
lahf
jnp
and
fst
inc
ficoml
mov
mov
int3
mov
xchg
insl
cmp
mov
sahf
sub
pop
cltd
mov
add
lret
mov
sub
xor
sub
mov
lret
or
mov
out
mov
out
jmp
pop
sub
adc
sub
in
inc
mov
sub
sub
sti
and
sbbl
mov
add
xchg
pop
fnstsw
lods
rorl
pop
push
inc
adc
insb
repnz
dec
mov
popa
jns
and
dec
jbe
push
ljmp
push
popa
cmp
mov
ret
insl
loopne
lock
movsb
pop
mov
movsb
lcall
pop
rorb
test
lea
mov
sbb
std
leave
push
cwtl
fldenv
repz
rorl
in
scas
and
lds
cld
or
sub
mov
add
mov
and
jmp
icebp
in
cmpsl
sahf
push
gs
jmp
jnp
or
mov
push
loope
cmc
in
push
outsl
scas
aam
adc
jecxz
stc
popa
repz
in
xchg
cwtl
popa
ss
fsubrs
sbb
push
cwtl
and
daa
pop
adc
push
xor
ficompl
popa
add
fistl
les
xchg
dec
adc
add
addl
scas
iret
cld
dec
in
into
stc
mov
jp
cmpl
pushl
sbb
cwtl
xchg
push
or
dec
fnstenv
mov
jl
mov
push
inc
or
jmp
sbb
and
stos
xchg
inc
adc
sahf
mov
mov
or
icebp
cs
push
cmp
bnd
pop
daa
dec
inc
inc
ret
inc
das
cli
mov
xchg
jae
in
fiaddl
mov
rcrb
jno,pt
mov
scas
mov
xchg
inc
fcoml
sub
je
xchg
test
fadd
jl
jb
and
jg
inc
std
iret
jmp
sub
shrl
mov
jo
ja
testb
pop
mov
in
in
xor
lea
dec
add
mov
or
mov
dec
add
dec
jno
lcall
jl
in
push
outsb
popf
xor
cwtl
dec
mov
iret
push
cltd
jmp
into
jno
sbb
test
pop
and
add
andb
inc
push
or
mov
mov
inc
inc
cmp
lods
jns
cld
int3
mov
push
lods
out
xchg
or
div
aaa
inc
repnz
jae
adc
aas
std
mov
addr16
push
sub
sahf
mov
cld
xchg
out
and
push
int3
lret
iret
jns
arpl
mov
xchg
loop
inc
dec
ss
push
xchg
das
xchg
dec
fisubrl
loop
adc
dec
ficoms
push
xchg
jnp
mov
pop
dec
test
push
push
into
mov
push
insl
xor
imul
mov
ret
xchg
or
jae
add
js
push
xchg
test
jbe
dec
sbb
ror
inc
cmpsb
push
int
and
pop
repnz
jmp
in
sub
pop
mov
inc
xchg
faddp
fimull
call
popl
sbb
ljmp
bound
dec
rorl
roll
or
push
test
stos
jb
xor
popa
rol
jns
nop
xlat
movsl
or
xchg
or
pusha
subl
aaa
fs
push
nop
pop
movsb
or
inc
out
imul
mov
insl
add
cmp
xor
mov
aas
add
and
jbe
into
sbb
cmp
and
ja
inc
sbb
scas
call
jecxz
mov
cld
jb
sbb
inc
sbb
imul
mov
xor
in
add
xchg
jns
sbb
mov
xchg
xchg
ss
mov
pop
outsb
inc
mov
roll
test
push
roll
loope
mov
lret
adc
jae
mov
cmp
repnz
cld
repnz
outsl
and
cmc
sub
lret
ljmp
popl
or
fildll
push
sbb
cmp
insl
mov
pop
push
push
aaa
les
mov
adc
add
cld
ds
repnz
daa
or
ss
pop
pop
cmp
ljmp
jbe
icebp
std
testb
imull
pusha
mov
inc
test
shl
push
movsb
loope
lods
xchg
stc
loop
jecxz
push
push
inc
sub
aaa
sub
and
push
iret
xchg
jg
je
jg
pusha
push
pop
mov
in
inc
jl
pop
sub
pop
out
push
pop
add
imul
inc
jg
in
xchg
ja
or
inc
lock
loope
mov
push
icebp
cmpsb
xchg
cmpsb
sub
xchg
out
dec
arpl
aaa
shlb
push
xchg
lret
mov
pop
dec
les
lret
imul
sarb
test
aam
imul
add
mov
call
lods
push
pop
lea
outsl
mov
std
adc
pop
mov
cmp
filds
add
push
jo
mov
xor
inc
pop
mov
repz
shl
ret
and
sbb
adc
adc
addr16
ja
xchg
mov
or
or
mov
cmp
push
iret
xor
add
and
out
pop
jns
adc
cmpsl
lods
cmp
enter
adc
mov
arpl
mov
roll
nop
mov
mov
aam
jnp
popf
arpl
push
mov
and
adc
add
xchg
shlb
xchg
divb
loopne
inc
jae
in
cmp
ljmp
mov
mov
xor
adc
sbb
or
loope
dec
js
add
dec
enter
adc
addr16
inc
cmp
cmp
mov
or
xchg
mov
ja
sbb
in
xchg
adc
mov
jns
adc
jne
lret
sbb
cmp
out
xor
adc
cmpl
push
lock
add
push
outsl
sbb
rorl
jbe
aas
xchg
ret
testl
cmp
or
push
inc
mov
out
push
fwait
mov
lcall
jo
xchg
jmp
ds
gs
xor
hlt
jg
push
lret
xchg
sub
push
sarb
sbb
inc
mov
movsb
shl
outsl
jbe
imul
fcoms
mov
add
dec
pop
jge
bound
fcoms
sbb
pop
inc
mov
and
pop
jmp
sti
stos
cmpsl
movsb
xor
xchg
pusha
data16
jg
test
outsl
out
in
scas
push
sub
push
push
mov
adc
pop
and
mov
mov
dec
out
sbb
out
daa
cmpl
hlt
ret
faddp
test
rolb
xchg
fs
roll
push
and
imul
negl
sbb
cmp
notl
inc
xor
mov
pop
test
adc
jo
std
jecxz
cmp
fbld
in
cmp
andl
sarb
stos
push
push
lock
jno
pop
and
mov
inc
lock
pop
aas
lods
fwait
inc
xchg
jne
sub
jae
ljmp
pop
inc
imul
adc
inc
addr16
out
dec
mov
sub
sarl
mov
clc
out
mov
add
mov
jae
mov
add
sbb
pop
or
inc
xchg
pusha
cwtl
mov
js
mov
xchg
push
push
jmp
mov
cmp
ret
cmpsl
add
xor
dec
test
adc
lods
sub
stos
outsl
mov
shlb
add
ret
adc
stos
sub
sbb
mov
adc
mov
dec
or
pop
ds
loope
hlt
out
divb
out
mov
shl
dec
in
adc
dec
out
pop
rorb
pop
dec
mov
outsl
jp
lods
je
rcrb
cwtl
mov
das
stc
imul
mov
mov
test
scas
inc
loope
sbb
cmp
aas
pusha
lods
mov
cld
insl
ja
xchg
add
fidivl
sbb
ret
insl
lock
shrl
jmp
xchg
cwtl
les
mov
out
lcall
mov
stc
addr16
repnz
inc
and
adc
les
cmpl
xor
jmp
inc
aad
subl
push
inc
out
or
fildl
es
sbb
adc
pop
mov
out
outsl
pop
pushf
xor
popa
test
dec
lret
adc
mov
sub
vandpd
jg
in
scas
xchg
or
es
sub
xor
fcomi
iret
fstps
cmp
mov
sub
inc
aam
mov
mov
xchg
dec
fldcw
xchg
sbb
cwtl
mov
aad
ds
lret
jg
jne
out
mov
cmp
lret
or
das
fcomi
mov
ss
data16
mov
add
sbb
inc
sbb
pop
scas
cmp
hlt
out
sub
lock
scas
std
fwait
sbb
mov
dec
xchg
sti
test
lock
sub
cmp
ds
aas
cwtl
mov
aaa
test
adc
movsl
popa
not
jns
cmp
add
stc
inc
cs
lock
ljmp
add
lods
adc
shlb
cmpsb
mov
ljmp
mov
add
pop
jle
call
into
cmp
add
movsb
data16
mov
mov
int
mov
ror
mov
lock
jns
fdivs
jns
mov
ds
aad
add
push
cmp
or
mov
mov
in
imul
pushf
jle
ja
idiv
inc
mov
push
xchg
xchg
out
dec
jo
jl
into
sub
cmp
in
cmp
into
cld
adc
fcompl
mov
sbb
push
inc
enter
les
add
push
icebp
mov
push
les
cmp
outsl
pushf
push
int
dec
insl
jno
mov
outsl
cmp
fdivl
fst
inc
loopne
push
inc
mov
je
repz
ljmp
jmp
shlb
sub
cmp
mov
repz
dec
xchg
or
xchg
sbb
push
mov
mov
je
aad
cli
and
push
push
cld
loopne
ret
adcl
pop
ret
insb
faddp
imul
test
lds
xor
rcrb
mov
mov
or
add
lock
or
pushaw
daa
les
xchg
sarl
xor
push
clc
mov
mov
inc
sti
xor
lods
sub
jecxz
je
movsl
aad
mov
int3
adc
sub
xchg
jl
test
ljmp
push
xor
sub
jge
sbb
fwait
pop
test
xor
dec
cmpsb
xor
aas
out
jb
outsl
and
shlb
inc
lret
fwait
and
int3
and
dec
dec
data16
push
dec
outsb
add
sbb
stos
cwtl
fsubl
lret
cmpsb
sbb
mov
mov
or
xor
stos
nop
inc
outsl
jb
jnp
cli
xor
push
push
mov
lods
mov
xor
decl
xlat
cmc
push
ja
push
add
iret
cmp
incb
negb
mov
jb
sub
lahf
xchg
push
and
pop
push
and
dec
stos
jae
ds
jle
dec
mov
sub
fwait
mov
popf
push
scas
out
cmc
xor
jno
insl
es
stos
xchg
or
add
cmc
add
mov
lds
out
popa
ja
insl
subl
jns
dec
aad
sbb
ret
mov
cld
pushf
popf
or
jo
and
int
mov
adc
push
push
mov
into
addr16
ret
mov
and
lock
movsl
add
push
and
rclb
mov
xchg
or
and
sbb
rorb
pop
das
scas
mov
add
scas
test
sti
mov
lock
lods
jo
push
aaa
mov
loop
sub
jae
inc
pop
pop
fwait
mov
out
enter
repz
jae
scas
add
sbb
adc
insb
arpl
inc
lea
dec
fistpl
pop
test
and
pop
and
or
mov
imul
lods
jl
xchg
in
arpl
cmp
pop
mov
mulb
adc
add
popf
mov
mov
pop
icebp
add
int3
cwtl
icebp
popf
pop
std
mov
lods
mov
mov
mov
sub
stos
stc
stos
xchg
adc
mov
sub
icebp
cmp
daa
fidivs
push
aam
mov
pusha
imul
dec
push
into
dec
hlt
pushf
add
sub
mov
or
dec
stos
mov
dec
test
inc
out
push
mov
pop
mov
cmp
lea
fimuls
jns
fidivrs
cmp
inc
mov
mov
andl
pusha
hlt
and
inc
repz
inc
out
scas
and
in
subb
shrl
shrb
decl
in
jne
loop
inc
mov
loop
loope
xor
in
mov
mov
xchg
mov
mov
rcll
sub
jge
dec
or
dec
inc
xor
sub
stc
adc
xchg
add
mov
lods
pop
bound
sbbl
sti
in
mov
out
pop
xchg
add
and
out
mov
lcall
jecxz
out
xchg
dec
mov
aad
mov
sub
sub
or
out
mov
daa
adc
je
xor
clc
ret
clc
sub
push
jg
icebp
out
lock
mov
pop
lahf
pushf
call
jbe
jno
inc
mov
jo
lcall
movsb
push
aas
jae
jo
jp
add
in
shll
frndint
push
loop
inc
dec
mov
mov
pop
add
mov
fidivs
fiadds
push
out
add
shl
fs
bound
sahf
mov
mov
stc
inc
aaa
shl
and
daa
xchg
je
xor
mov
xchg
xor
sub
xchg
aad
mov
fs
loop
scas
jmp
dec
inc
jbe
mov
out
cltd
mov
adc
shlb
push
shlb
jge
popf
out
ret
adc
in
pop
xchg
lea
aad
sbb
hlt
cmpsl
inc
jbe
loop
add
xor
or
lret
ds
std
outsw
mov
test
fcoms
imul
aad
bound
into
fldenv
jns
aad
pop
sbb
lods
mov
cli
clc
xor
cmp
jmp
or
cmp
jmp
cmpsb
xchg
adc
push
out
test
mov
or
push
lods
jns
or
lock
imul
lods
cmp
test
mov
or
mov
imul
lods
xchg
adc
hlt
outsb
fiadds
sub
es
cwtl
loope
leave
cmp
and
scas
fsubr
sub
lcall
xchg
iret
aad
mov
idivl
adc
mov
push
inc
or
cmp
into
sub
lods
mov
xchg
or
pushl
inc
xorl
lea
inc
sete
sahf
mov
fwait
xor
cmpsl
fmuls
sbb
leave
cmpsb
cld
and
cmp
add
or
pop
aad
or
test
fistpl
mul
sbb
fbld
jmp
mov
movsl
sub
stc
shlb
lahf
cmp
jmp
sbb
push
movsb
nop
jmp
mov
lea
pop
push
scas
insl
in
aas
and
mov
clc
adc
loop
insl
push
lds
xor
lret
shll
xor
add
xchg
jb
sti
xor
in
in
cld
sub
jge
cs
std
inc
xor
sbb
call
jbe
push
call
push
push
jo
pushf
sub
mov
and
repz
pushf
push
test
mov
sub
dec
pop
push
leavew
daa
adc
cmp
fnstcw
test
mov
add
cmp
sahf
lcall
pushf
sti
mov
or
int
cli
jns
inc
stc
test
dec
std
fnsave
into
popl
mov
or
and
out
into
loope
add
imul
sbb
loop
mov
gs
push
movsl
lahf
sbb
pop
xorl
jp
inc
imul
roll
add
and
dec
xchg
adc
add
push
xchg
mov
lahf
xor
xchg
mov
dec
lret
jg
frstor
in
outsl
imul
or
cmpsb
adc
jno
aad
data16
out
cmpsb
pop
std
cmp
adc
fidivrs
clc
push
gs
roll
inc
stos
xchg
lret
jae
or
outsl
stos
out
scas
leave
dec
dec
int
pop
push
jbe
mov
sbb
cwtl
fnsave
sub
sbb
ds
dec
out
loope
ljmp
xchg
and
loopne
test
and
lods
nop
nopl
int3
imul
jne
scas
into
or
mov
jne
adc
adc
sti
idivb
test
nop
bndstx
mov
ds
mov
sub
sub
mov
mov
or
cwtl
addl
sahf
push
test
mov
dec
insb
lret
sti
insb
dec
cltd
daa
fldt
je
mov
sub
mov
lret
sahf
mov
mov
dec
int3
movsb
stos
aad
out
mull
sti
adcb
shrl
cmp
movsl
je
mov
mov
std
mov
sub
mov
pop
mov
add
mov
sbb
mov
jne
enter
repnz
cmp
into
out
stc
divl
jmp
fwait
arpl
jle
popf
mov
cltd
push
pop
arpl
rcr
cli
push
out
cmpsb
adc
ret
out
jne
pop
movsb
outsb
xchg
mov
lea
jno
push
mov
ljmp
push
lods
push
mov
loopne
cmp
pusha
mov
cmp
lds
cmp
outsl
sbb
stos
nop
sbb
adc
mov
rclb
mov
popa
jg
cmp
mov
sub
aad
pushf
enter
mov
mov
rorl
inc
je
push
in
dec
mov
push
jns
adcb
jo
and
rclb
subl
lods
sbb
jne
dec
xor
pop
movsb
pop
les
xor
dec
sub
push
jmp
jmp
daa
pop
lret
stos
or
push
xchg
or
add
mov
mov
jnp
cmc
fs
push
dec
jmp
js,pt
testl
bound
movsb
adc
ja
in
fistps
mov
pop
fisubl
or
orl
jg
stos
rcrl
sbb
push
mov
rorb
je
test
xchg
or
aam
ljmp
jge
adcb
sbb
dec
push
insb
das
data16
add
add
mov
das
mov
cmp
jb
mov
out
rclb
sub
int3
outsb
jg
dec
lret
cmp
push
fs
loopne
push
jbe
and
pop
cmp
sub
std
call
inc
in
or
pop
gs
lcall
jp
sbb
dec
mov
mov
cmc
daa
or
sub
mov
xor
inc
nop
push
les
scas
dec
pop
sbb
cmp
hlt
pop
cli
stos
xor
inc
mov
sbb
mov
cs
dec
das
inc
fs
fbstp
xorw
loopne
add
stc
nop
in
clc
imul
mov
xchg
in
cld
sub
insl
sbbl
lahf
in
push
push
cs
cmpsb
orl
adc
data16
lods
push
dec
inc
xchg
inc
push
pop
mov
dec
dec
popw
xor
int
mov
jle
jb
mov
adc
inc
inc
fdivp
dec
dec
pop
dec
xchg
movsb
out
addr16
add
jecxz
push
dec
in
and
mov
ljmp
cld
mov
js
insl
cli
rorb
xor
mov
or
sbb
rcll
in
push
js
bound
mov
fs
jg
mov
push
cld
dec
in
cmpsb
mov
addr16
xchg
pop
stc
shlb
mov
in
dec
ficompl
xlat
inc
rcl
pop
pop
rorl
popa
push
cmp
mov
roll
sub
lret
push
loope
push
outsb
js
stos
pusha
gs
rcll
xchg
int
xchg
sbb
icebp
adcl
inc
add
fsubl
push
cmp
ss
nop
lods
mov
lds
cmp
sub
xchg
adc
xor
fldenv
jp
and
xchg
sti
jp
cltd
sbb
mov
pop
out
inc
cli
jnp
outsl
add
mov
mov
out
aaa
arpl
jp
push
pop
mov
icebp
inc
test
mov
add
add
repz
pushf
imul
or
mov
and
out
fs
cmpsb
and
adc
jbe
sarb
dec
xchg
hlt
fisubs
mov
jnp
or
ja
aam
ss
mov
push
out
loopne
std
repz
mov
mov
or
xchg
stc
imul
xchg
shrl
stc
push
xchg
test
adc
xchg
stos
fwait
sarb
lds
stos
ret
leave
add
outsl
inc
lcall
mov
popa
adc
cmp
mov
lods
int
rolb
sub
movsl
rorb
daa
insl
test
pop
cmc
sub
xor
adc
gs
dec
out
lds
mov
jmp
pusha
adc
js
lahf
mov
cmpsb
sbbb
adc
lds
dec
mov
lds
inc
pushf
dec
xor
mov
lret
mov
mov
push
and
fsubrl
or
inc
and
adc
xor
add
fistl
movsl
mov
xor
sti
mov
jmp
mov
jl
ss
lock
std
arpl
bound
pop
aad
and
pop
clc
gs
cmpsl
xchg
mov
mov
adc
addr16
data16
dec
push
outsb
stos
xchg
pop
jp
mov
pop
jmp
aam
daa
jp
aaa
xor
ret
cmp
push
int
scas
xchg
sub
repz
and
dec
mov
cmp
xor
xchg
jge
mov
aam
fsubrs
lahf
push
fwait
loope
inc
adc
and
mov
stc
xchg
mov
xchg
repnz
stc
jns
sbb
outsb
loopne
push
pop
imul
pop
lret
loopne
push
stos
xor
mov
in
adc
push
push
mov
cld
movsb
xlat
push
sbb
push
xor
loope
or
clc
xor
adc
mov
sbb
mov
rcll
push
mov
mov
jg
push
arpl
pop
test
fwait
xor
jmp
mov
mov
rcl
inc
sub
das
icebp
loop
loop
inc
scas
in
pop
imul
fsubs
cli
test
scas
enter
mov
inc
sbb
jo
jns
notl
std
mov
inc
adc
lret
fistl
jo
mov
lods
push
add
cmp
cmp
aaa
fnsave
mov
jg
mov
cmp
push
push
mov
subl
pop
fstpt
movsl
mov
jno
shll
and
push
dec
and
or
outsb
or
adc
xchg
in
inc
dec
or
push
xchg
push
in
inc
mov
jo
cmp
into
add
insl
add
or
cs
fmulp
inc
sub
aas
inc
cmp
jge
mov
rorl
xchg
pusha
mov
jp
cmp
push
xor
hlt
mov
cltd
mov
lock
inc
sbb
or
jbe
inc
mov
cmp
mov
enter
push
sahf
cmp
repz
scas
pop
imul
insl
std
movsb
jmp
lret
push
push
fwait
mov
add
mov
rcr
xchg
test
mov
ss
ret
jo
loop
je
mov
add
in
sub
mov
mov
xchg
push
push
ret
mov
xlat
xor
or
test
mov
add
lahf
lcall
mov
fbld
in
xchg
jmp
cmpsl
lcall
inc
mov
adc
aaa
push
repnz
jne
and
lea
cmpsl
push
xchg
and
mov
jl
push
cld
xchg
icebp
mov
jmp
cli
test
std
sub
or
or
js
pop
pop
mov
in
dec
popa
and
mov
inc
les
jge
mov
enter
adcl
mov
cmp
int3
mov
push
pop
pop
sbb
popa
and
ljmp
adc
stos
arpl
jns
xor
dec
inc
mov
test
mov
int3
mov
ss
xchg
xlat
cwtl
cwtl
aas
xchg
lea
jae
cwtl
adc
fimuls
das
sti
lcall
mov
xor
stc
fs
cmp
inc
cltd
add
jge
jnp
pop
mov
xchg
in
insl
push
push
sub
jmp
or
pop
test
cmp
cmp
fdivs
test
aad
ljmp
push
fldenv
and
add
cmp
ret
cmp
inc
push
mov
xchg
or
jge
ja
hlt
mov
or
mov
inc
inc
out
outsb
addb
mov
and
inc
xchg
jecxz
lds
inc
test
mov
mov
jo
outsl
cmp
gs
or
fsts
aad
nop
lret
mov
fistps
addl
addr16
loopne
cld
mov
and
inc
mov
out
jecxz
imul
mov
push
iret
push
dec
out
jl
xor
popf
lods
add
sbb
push
out
std
adc
sti
cmpsl
lods
and
sub
adc
inc
pop
sti
push
in
inc
or
movsl
ret
js
ret
cmp
cwtl
sbb
outsb
nop
sti
leave
inc
call
mov
outsb
and
icebp
cmp
jge
test
push
outsl
dec
notb
cmc
je
adc
je
fstp
inc
inc
cwtl
pop
in
mov
adc
inc
and
cmp
mov
loop
shlb
inc
push
jg
movsl
mov
mov
shll
sbb
sbb
and
imul
vcomiss
es
xchg
push
mov
mov
push
mov
xchg
je
and
xlat
pop
aam
pop
xchg
cs
cmp
xor
xchg
jns
sbb
out
xchg
pop
enter
mov
push
dec
call
push
ss
xchg
lock
frstor
inc
dec
leave
shrl
add
insb
adcb
sub
ds
or
subb
aas
mov
loopne
xor
out
xchg
dec
xor
popa
xchg
xor
push
std
mov
scas
popa
lret
loopne
xor
dec
in
mov
std
jl
insl
cmp
jnp
and
in
xor
jo
sub
xor
call
jno
adc
int
std
push
scas
popf
iret
push
bound
das
ret
test
loop
cmp
fldt
repnz
inc
cmp
les
sub
loope
lea
lret
insl
mov
jbe
pop
daa
inc
mov
mov
lcall
ja
cmp
popf
push
lret
and
popf
push
test
loopne
mov
and
outsl
xor
push
loope
mov
sahf
jge
push
fwait
or
xchg
push
test
rcrl
dec
jle
mov
xor
loope
hlt
push
jne
push
ffreep
cmpl
inc
addr16
inc
jae
stc
hlt
mov
mov
and
sbb
adc
bound
out
pop
cmpb
mov
dec
fstpt
into
push
xchg
pop
mov
mov
cs
pop
repnz
int
inc
push
inc
aam
pop
ss
dec
push
xchg
sbb
mov
jbe
sub
ss
push
loop
std
cmp
xchg
in
xor
fdivrp
scas
mov
lahf
or
jl
repnz
sbb
outsl
rcl
sub
mov
push
inc
dec
xchg
int
sub
mov
rolb
push
leave
mov
fdiv
decl
imull
lds
imul
add
adc
pusha
out
test
jg
into
int
sbb
or
xchg
mov
and
pushf
inc
mov
out
js
faddp
mov
scas
inc
jne
fisubl
mov
in
dec
jge
jno
inc
dec
mov
in
stos
cmc
inc
das
hlt
or
mov
fisubs
mov
adc
loope
inc
xchg
push
inc
pop
pop
xchg
cmp
push
pop
sub
lcall
mov
adc
cmovae
roll
push
push
mov
xchg
sbb
mov
jp
add
sbb
add
xor
repnz
daa
ds
add
fcoms
ror
lods
add
es
sub
bound
repnz
lods
scas
add
lahf
mov
or
rcrb
mov
clc
test
jne
test
addr16
xchg
dec
ljmp
nop
fcomps
into
fnstcw
cmpsl
mov
push
ficoms
das
pop
push
out
mov
loopne
iret
jecxz
sti
cli
out
loop
mov
or
scas
subb
sbbl
fists
push
lods
ja
xchg
std
cmc
ficoms
mov
xchg
loop
fstpt
or
sbb
cmp
dec
and
mov
inc
movsb
mov
sub
jp
loop
fisubs
fstps
gs
xor
enter
movsl
and
mov
je
aas
mov
cmp
push
enter
jo
loopne
and
test
mov
push
mov
sbb
adc
adc
adc
inc
jb
lds
sbb
adc
fcmovnb
or
xor
int
inc
daa
mov
iret
clc
test
adc
cmp
dec
dec
cltd
sbb
cltd
add
insb
outsb
or
push
sub
loope
pop
js
xor
dec
cmp
mov
cmpsl
enter
lods
jge
out
jecxz
mov
imul
std
cmc
jmp
sbb
test
inc
out
and
mov
mov
sub
pushf
mov
cmpsb
lcall
mov
test
cmp
cmp
mov
test
jae
icebp
xor
insb
inc
sub
mov
adc
xlat
xchg
andb
or
popa
fstl
icebp
or
cmp
jecxz
push
cmp
cli
add
pop
mov
jo
add
and
fildll
push
mov
aam
adc
push
lods
shll
inc
in
lea
push
adc
pop
pop
fwait
sbb
iret
fisttps
mov
mov
and
mov
pusha
inc
out
and
mov
scas
bound
leave
xchg
je
data16
aam
gs
mul
scas
or
and
push
xchg
es
add
mov
xchg
and
adc
xor
pop
jnp
mov
cmp
jge
xor
or
push
fnstcw
sahf
adc
dec
mov
int3
sbb
jmp
scas
cltd
pushf
icebp
les
movsb
add
testb
lret
xor
inc
outsb
cmpb
arpl
push
nop
faddp
xor
test
xor
add
add
std
aad
shll
stos
push
lods
imul
mov
cltd
out
jne
lods
ljmp
outsl
push
cmp
lret
and
test
cmp
loope
test
fstps
push
jle
shrb
mov
jae
pop
pop
dec
pop
int
and
jae
lret
fisubl
add
ds
mov
jae
pusha
xchg
adc
pop
mov
pop
out
mov
inc
sahf
or
popa
or
fdivl
cmc
out
mov
daa
jmp
mov
or
cmpsb
icebp
adcl
cmp
subl
and
test
test
cmp
loopne
andb
push
das
mov
fld
leave
jnp
outsl
bound
adc
shr
sub
jb
arpl
jg
mov
xor
jo
push
pop
loopne
jno
test
push
loope
stos
cmpsl
fistpll
sub
loopne
inc
hlt
js
cs
in
je
shlb
sbb
shrl
popf
cmovbe
fcoml
lcall
or
outsl
dec
push
pop
fnstcw
pop
pop
jle
add
aas
inc
int3
cmp
xchg
dec
rcrl
stos
int
fimull
mov
sub
push
fistps
xchg
xor
negl
in
test
int3
mov
xchg
cmp
or
mov
int3
mov
or
adc
les
and
sbb
dec
test
cwtl
leave
or
jmp
jp
aas
cltd
mull
sbb
xchg
sub
adc
cmp
js
xor
loop
mov
aad
test
cmp
ds
adc
sbb
call
repnz
daa
ret
inc
adc
push
xchg
insb
and
lock
xlat
jb
sti
mov
mov
adc
mov
dec
lahf
and
aad
sarb
arpl
roll
push
outsb
test
mov
fsubs
arpl
pop
stos
test
aad
fcoml
jmp
jns
mov
dec
aam
dec
test
mov
cmp
js
mov
lods
fcmovne
inc
mov
out
jl
mov
push
mov
jno
pop
dec
inc
sub
sbb
pop
aam
dec
sub
ljmp
lock
mov
inc
add
lods
jp
outsl
js
push
cmpsb
out
inc
iret
push
js
sbb
call
pusha
fwait
push
inc
je
out
scas
int
notl
pop
js
lcall
ret
filds
ret
pop
xor
je
inc
sub
sbb
xor
scas
adc
inc
jae
out
xorl
inc
mov
push
cmpsl
fisubrl
cli
push
push
repz
data16
pusha
pop
sub
jns
ret
mov
out
inc
push
inc
pushl
xchg
orl
mov
jb
mov
xchg
std
test
lea
lods
mull
dec
mov
in
jnp
sbb
cmp
xchg
sub
and
or
hlt
or
pop
mov
push
idivl
fucomip
inc
rclb
stos
mov
or
sub
test
xorb
xchg
mov
dec
cld
push
inc
lcall
enter
mov
cmp
loop
sbb
bound
push
add
dec
adc
add
fwait
or
or
xchg
sub
jl
cwtl
aas
mov
popa
push
out
xor
mov
cmc
pop
fwait
pop
rclb
cwtl
and
xchg
pop
popf
xchg
rolb
ja
hlt
push
dec
mov
inc
out
loopne
mov
in
mov
das
sbb
xchg
and
dec
or
jmp
mov
jp
xchg
fs
pop
stos
movsb
pop
js
jae
repz
xchg
cmp
xor
repz
vmread
addr16
dec
in
mov
pop
test
test
mov
lea
dec
aad
xchg
dec
push
and
bnd
jne
add
sbb
push
jl
iret
and
xor
cmc
mov
sub
pop
dec
mov
jg
ss
loop
loop
out
pop
shll
mov
dec
lods
mov
fucomp
iret
xor
sbbb
jo
movsl
cmp
loop
mov
lock
xchg
mov
mov
ffree
bound
shrb
xor
cld
and
loopne
and
leave
mov
sbb
adc
scas
sub
cmc
enter
mov
stos
jae
in
jne
nop
push
push
leave
clc
pop
jecxz
movq
iret
jmp
mov
inc
sbb
scas
push
into
sti
push
cmpl
push
clc
in
jecxz
push
mov
inc
imul
xor
imul
jl
lods
pop
jb
lods
adcb
cmp
inc
dec
mov
or
inc
jno
mov
roll
add
jo
or
mov
or
jae
jo
je
lods
add
mov
mov
je
fwait
pop
cmp
test
std
ficoml
cli
push
jl
xchg
out
dec
push
es
leave
jbe
mov
insb
cltd
iret
mov
sarl
pop
cmc
pop
call
and
adc
add
cs
stos
jg
inc
aam
mov
xchg
stos
es
or
lds
jecxz
data16
arpl
dec
or
pop
fisttpl
xor
mov
mov
iret
addb
add
push
inc
inc
and
sbb
out
in
sahf
xchg
sub
cmpsb
loopne
inc
xor
mov
dec
jb
mov
mov
sub
pop
test
loopne
les
inc
inc
into
shll
add
xchg
xor
mov
shrl
pop
adc
mov
pop
jg
push
cmpsb
xor
or
dec
jne
push
dec
loopne
cmpsb
mov
mov
fildll
pop
mov
dec
mov
pop
mov
stos
movsb
or
mov
mov
add
mov
nop
int3
and
pop
push
sbb
loopne
je
out
xchg
iret
outsb
jl
push
cmp
and
es
mov
lahf
pop
fs
cli
rcl
or
push
jb
or
movsl
fistpl
xchg
scas
scas
lahf
cmc
and
cmp
pushf
lret
into
push
dec
mov
loop
sub
in
push
pop
sbb
sbb
xchg
pop
sub
sub
mov
xor
outsb
arpl
cmc
int3
ljmp
mov
xlat
xorb
lahf
addl
aam
cmp
stos
mov
mov
sahf
cmpsl
pop
fs
cmpl
popf
aas
add
dec
stos
mov
mov
das
mov
mov
mov
dec
lea
sbb
nop
inc
lds
les
push
cmpsb
int3
insb
cli
add
rcll
mov
pop
or
cmp
stos
push
or
iret
sahf
mov
rcrb
mov
stos
jmp
sbb
pop
imul
fwait
jns
mov
hlt
sbb
dec
push
push
and
xchg
fs
or
inc
addl
loopne
or
filds
and
sub
inc
popa
out
idivl
loope
mov
movsl
pop
pop
aas
xor
lock
jmp
xlat
xor
mov
adc
clc
add
lahf
rcrl
inc
enter
and
lods
sbb
push
jo
mov
pop
mov
imull
stos
in
neg
enter
dec
shrb
pop
mov
cmc
test
mov
jle
ret
cmp
xchg
cld
fdivl
lret
cltd
lcall
in
jl
jmp
inc
push
cmc
mov
aas
jnp
insb
jg
and
movsb
decl
or
lock
ja
jg
clc
jnp
jae
out
aaa
adc
shll
push
xchg
inc
sbb
and
mov
jnp
jp
outsb
decl
mov
cmp
xchg
xor
scas
es
in
inc
in
inc
cmp
stc
mov
mov
lea
iret
mov
clc
repz
int3
sub
pop
xor
mov
inc
add
pop
sub
ret
sbb
dec
xlat
pop
adcb
outsb
mov
push
imul
inc
iretw
xor
movsb
jg
mov
arpl
jle
fadds
movsb
adcb
sub
in
dec
push
loopne
push
test
cmp
orl
or
in
loop
lods
out
scas
pop
fwait
mov
xor
les
clc
popf
cld
mov
mov
cwtl
arpl
insl
xor
les
xor
push
sub
in
or
mov
movsl
push
pop
cmp
or
shr
aaa
insl
and
cmp
les
std
scas
add
aas
adc
loop
mov
adc
jae
and
push
int3
addr16
iret
lahf
leave
mov
mov
lahf
and
jns
jns,pn
push
shlb
ds
fiaddl
cltd
test
inc
pop
ss
mov
jb
cld
fisttpl
xchg
aaa
lods
pop
fs
push
andb
mov
xlat
mov
hlt
xchg
push
std
cmc
pop
jb
sahf
sti
xor
xor
stos
das
inc
xchg
jg
lret
mov
inc
js
jmp
push
dec
mov
mov
push
mov
cmp
xor
arpl
push
inc
xchg
sarl
mov
cmp
adc
hlt
popf
and
insl
pusha
mov
in
pop
testl
pop
ficoms
jnp
cmp
sub
sub
dec
adc
iret
mov
and
jo
into
leave
loope
mov
mov
out
iret
cmp
mov
js
mov
push
loopne
push
ja
sarb
cmc
and
aaa
push
loope,pn
xorb
call
sub
xor
cli
orl
pop
inc
sub
jbe
sbb
push
dec
jbe
inc
mov
mov
iret
jl
lret
jbe
jb
sub
jbe
or
out
inc
pop
inc
mov
push
psubb
pop
inc
hlt
and
jnp
fisubl
lock
je
xchg
leave
jae
pop
jnp
cmp
xchg
mov
xchg
in
mov
cld
jns
mov
pop
gs
stos
pop
addl
xchg
mov
xchg
jle
loope
adc
push
bound
inc
inc
jmp
idivl
lret
adc
or
int
fistl
lods
imul
scas
jno
popa
or
and
mov
push
xchg
inc
js
stc
lahf
mov
popa
push
divl
mov
repz
nop
fwait
sbb
cmp
lods
mov
push
cmp
sbb
sub
sub
push
sti
sbb
shrl
inc
push
pop
xor
push
fistps
loopne
push
sbb
cmc
jecxz
or
jnp
dec
push
add
push
pop
roll
cwtl
xchg
lock
in
adc
fsts
or
loop
out
jmp
pop
in
repnz
call
pop
fnstcw
rcr
xor
sar
jle
ja
mov
sbb
add
ret
dec
xor
int3
inc
sbb
cmpb
lods
aas
stos
cs
roll
mov
pusha
aaa
imul
jmp
subb
push
mov
gs
push
dec
inc
mov
loop
pop
lret
dec
jno
lahf
mov
lcall
popa
scas
inc
mov
hlt
dec
stc
mov
xchg
pusha
xor
push
les
dec
and
jmp
pop
cmpsb
sarb
fs
mov
lahf
scas
push
sti
inc
xchg
mov
ret
inc
adc
inc
cmp
jnp
pop
loopne
rcl
cwtl
pop
xor
aad
or
xchg
mov
gs
adc
sub
add
jle
xlat
xchg
lods
cwtl
add
jge
add
xchg
push
cltd
loop
or
out
js
sar
stos
in
mov
push
xor
mov
and
dec
insl
repz
sbb
arpl
sub
pop
push
push
mov
pop
imul
mov
mov
xor
and
xor
pop
push
pop
dec
sbb
xchg
nop
or
mov
add
int3
add
int3
out
dec
les
add
mov
mov
in
imul
sbbl
inc
aas
cmpsb
xchg
dec
test
pop
lcall
push
mov
inc
scas
mov
outsb
sbb
cwtl
mov
sub
loop
in
fwait
ds
rclb
lea
mov
leave
insl
ljmp
or
add
aam
int3
out
loopne
pop
in
inc
mov
jbe
adc
jo
cmpsb
sti
jmp
shr
xchg
mov
loop,pn
push
fwait
testb
repz
pop
addl
cltd
jnp
or
add
xchg
mov
and
data16
das
popf
lock
mov
add
test
pop
cmc
jg
insl
sbb
jl
int3
sbb
xchg
lret
jge
mov
xchg
add
jl
ljmp
rcrl
sbb
mov
jbe
cmp
cmp
mov
sub
jnp
cmp
mov
loop
gs
cmp
dec
inc
fcompl
xchg
test
bound
imul
mov
mov
sub
arpl
popa
sbb
or
popl
test
push
lods
aam
jne
pop
sub
jmp
out
dec
xchg
fs
dec
outsl
jno
cmp
hlt
add
mov
lcall
adc
fildll
push
call
dec
iret
adcl
fists
data16
and
jmp
aam
sub
push
xchg
aam
fiaddl
mov
js
cmp
aaa
add
lcall
ret
aas
pop
sbb
movsb
mov
xchg
add
mov
cld
aad
ss
cmp
dec
hlt
pop
jmp
add
test
sub
arpl
data16
jg
xchg
cmp
mov
dec
sti
xor
cmp
std
test
out
xchg
test
cmpb
repz
jp
adc
inc
push
jns
jg
jae
mov
mov
shll
lret
mov
pusha
push
add
add
loope
mov
cmp
scas
jp
pusha
imul
mov
cltd
adc
popf
xchg
bswap
addr16
movsb
adc
or
lods
mov
adc
fcomps
mov
xor
add
add
sbb
aam
lea
loop
fidivrl
sbb
sarb
jmp
sbb
sub
jns
lds
or
cmp
movsb
push
jecxz
sbb
xor
push
repz
push
xor
nop
ss
mov
adc
mov
shl
dec
pop
or
mov
mov
xchg
insl
popa
imul
std
xlat
fdiv
test
nop
bound
in
pop
sub
jl
outsl
push
in
mov
insl
mov
sub
xor
or
into
or
fbstp
jno
cmpsb
out
outsl
ret
jge
imul
add
stc
stos
sub
xchg
mov
data16
ljmp
ret
ret
sbbl
stc
mov
das
fmul
loope
push
jecxz
psubusw
icebp
sti
jmp
pop
xchg
inc
cwtl
mov
dec
xor
mov
adc
stos
dec
and
mov
pop
jno
or
std
ret
aaa
cmp
sbb
push
pop
js
jae
fcmovbe
mov
sub
add
adc
xchg
pop
inc
int3
pop
jae
popf
loop
cmpsb
test
stos
mov
jp
mov
mov
push
dec
aad
ret
aam
loopne
fbld
insl
test
out
fldt
xor
jecxz
call
jge
push
mov
or
dec
dec
pop
fmull
fimull
jnp
dec
pop
movsl
mov
adc
mov
ret
arpl
scas
mov
ja
mov
jecxz
or
nop
mov
inc
push
dec
pop
imul
xchg
popa
int
fdivl
add
sub
jae
mov
les
push
fldpi
and
pop
jmp
sub
sbb
xchg
inc
push
pusha
xor
cmpsb
push
mov
popf
pop
lahf
dec
test
push
push
xchg
push
or
addb
inc
scas
push
pop
cmp
jmp
pop
sub
pop
cmp
add
les
or
out
jg
cmp
or
dec
mov
xor
push
push
popa
mov
xchg
pop
aam
arpl
popf
lret
sahf
neg
xor
and
ret
mov
ret
aad
lods
mov
ja
pop
mov
fidivrl
lea
lret
movsl
add
adc
cld
ljmp
push
int
lock
jo
cmpb
mov
cmp
push
mov
jae
nop
inc
cmpsl
comiss
fidivl
xlat
fsub
jae
sbb
or
sarl
outsb
add
popa
out
jno
icebp
jb
outsl
push
jg
in
cmp
jmp
pop
pop
imul
fisttps
outsl
mov
jns
jae
orl
mov
push
aaa
and
or
cli
arpl
jns
sbb
aam
xchg
sub
aaa
jl
vpminub
int
jp
cmc
and
jbe
inc
insb
adc
cmpsb
mov
insb
leave
pop
cmp
jp
pop
shl
in
rcll
mov
popf
hlt
sbb
mov
cmpsl
pushf
aaa
pop
shr
jecxz
test
rcrb
cmpsl
rcrl
xor
mov
into
xchg
lahf
jle
mov
sub
xor
jns
sti
push
mov
mov
sbb
xchg
icebp
outsb
adc
shll
mov
mov
mov
aad
movsb
aad
pop
jbe
xchg
rolb
imul
aam
movsb
aam
pop
pop
lock
testb
cmpsb
inc
insl
adc
mov
and
or
fcmovbe
fbld
repnz
fiadds
shrb
inc
sub
imul
jno
push
inc
xchg
sub
jae
and
pop
das
cmc
cmp
subl
pop
out
stc
jb
jmp
sbb
sub
cmp
xchg
push
int3
add
sub
loop
in
xchg
mov
adc
lock
xchg
loopne
jne
pop
aad
pop
lods
lcall
dec
outsb
jl
ljmp
or
jb
pop
pop
xchg
jmp
xchg
add
out
ret
ljmp
out
mov
pop
leave
bnd
out
push
sub
mov
out
fndisi(8087
xchg
cltd
cmpsl
lahf
fadd
jg
in
pusha
cmp
ljmp
or
mov
sub
mov
mov
stos
sbb
fcomp
xrelease
add
lods
out
sub
push
mov
mov
dec
pushl
sbb
sub
ss
sbb
repnz
add
mov
dec
mov
roll
push
pop
or
mov
cmc
inc
in
adc
ret
mov
iret
xor
mov
mov
mov
sbbb
adc
out
xor
sub
dec
pop
xor
inc
outsl
in
jl
sahf
insl
dec
fildl
and
adc
loopne
xlat
aaa
nop
repz
sti
faddl
insb
pop
dec
das
std
pop
jbe
sbb
jl
mov
add
movsb
xchg
in
and
cld
sub
add
ret
mov
popa
jae
mov
out
cli
add
pop
pop
inc
fnstenv
cmp
pop
pop
pop
orb
sub
js
push
int3
adc
add
sarl
xlat
push
leave
lds
push
jne
aam
push
and
enter
sbb
and
sbb
jo
xchg
xchg
pop
or
dec
add
sub
mov
jp
es
test
gs
and
rcrb
rcrb
outsb
mov
imul
mov
or
dec
fmull
cmp
inc
pushf
mov
sbb
pop
iret
pop
aam
add
jbe
push
sahf
je
ret
adc
pop
adcb
call
cmp
mov
fwait
cmp
lret
push
std
pop
dec
clc
mov
adc
jb
jge
outsb
out
xchg
dec
or
mov
imulb
jb
xchg
ficoml
enter
jecxz
into
push
mov
push
mov
sub
cmpsl
repz
mov
dec
jp
test
out
xor
add
adc
lock
and
stc
mov
xchg
pop
insl
scas
xchg
inc
std
mov
or
xor
jmp
inc
fcoml
pop
imul
repz
push
int3
adc
dec
mov
sbb
into
out
jbe
lret
enter
jbe
mov
mov
sbbl
rcl
sti
lret
cmp
bound
cwtl
xchg
pop
mov
scas
sub
aaa
jno
out
cmpsb
aaa
jmp
jp
cmp
repz
dec
xchg
cmpl
pop
cmp
push
xchg
enter
lds
or
pop
int3
jp
icebp
pop
sub
xchg
or
add
inc
hlt
fsubs
gs
mov
inc
jl
sarb
movsl
in
dec
test
mov
sbb
mov
xchg
je
popa
scas
in
fsub
in
mov
mov
pop
cmp
and
insb
fnstsw
fiadds
xchg
mov
inc
mov
sub
clc
ficomps
ljmp
inc
ja
gs
hlt
cld
sbb
gs
push
test
int3
sbb
push
inc
cmp
and
mov
xchg
mov
mov
daa
mov
into
mov
stos
stos
dec
lret
rcrb
push
test
cmpb
mov
outsl
insb
lock
insb
pop
add
jae
push
pusha
dec
mov
and
jge
push
nop
ret
cmp
out
xlat
mov
add
cmp
daa
mov
int
adc
xchg
xor
inc
pop
cltd
and
cmp
in
lds
mov
ds
mov
outsl
jns
inc
imul
lds
outsb
syscall
mov
idivb
jl
xchg
shll
and
adc
out
scas
loop
cmp
jmp
push
sbbb
or
dec
cltd
mov
popf
ss
and
cmpsb
ds
sbb
inc
loope
mov
fcomps
fcomip
and
jb
std
xchg
ret
loop
imul
push
adc
loope
or
jmp
jb
lock
mov
and
sub
jns
pop
add
je
add
xor
and
cmpsb
test
popf
imul
daa
pop
inc
test
jns
js
jnp
aaa
ficoms
xor
adcb
fistl
les
iret
dec
or
or
sti
out
popa
push
lods
dec
shlb
out
add
and
mov
fldt
pop
xorl
or
nop
jo
adc
push
aam
jne
pop
pop
shr
gs
fldenv
push
aas
imul
pop
incl
mov
mov
push
and
and
xchg
inc
mov
adc
sbb
leave
mov
fidivs
sub
pop
gs
out
inc
outsl
out
fdivrs
push
cmpsl
out
es
imul
xor
dec
inc
jnp
dec
fldt
out
in
in
and
das
shl
sub
mov
adc
insl
add
fsubl
jbe
jnp
testl
jnp
out
das
sbbl
mov
adc
cmpsb
std
fst
sbb
imul
push
ja
inc
inc
xchg
and
and
inc
pop
adc
jae
sbb
cs
dec
mov
adc
push
pop
xchg
mov
js
cmpsl
stos
xchg
in
xlat
imul
stos
mov
stos
jns
popf
aas
mov
add
jg
cmp
push
repz
fdivr
lds
mov
arpl
xlat
repz
jne
in
jmp
sub
test
shrd
jns
sbb
jp
scas
mov
mov
lret
incb
mov
leave
out
fwait
pop
pusha
jle
lret
or
and
lds
or
aaa
sub
pop
inc
aas
cld
call
lcall
pop
xchg
mov
iret
movsl
xchg
into
mov
xchg
loope
pop
scas
jge
mov
inc
push
movsl
nop
aam
test
adc
jmp
or
mov
je
cmc
jg
fcom
loop
pop
adc
scas
or
shrb
jae
xor
std
adc
xchg
xchg
out
sbb
insl
add
scas
fstp
inc
pop
mov
ja
jb
outsl
dec
iret
sub
jle
mov
push
andb
inc
xchg
mov
movsl
pop
xor
or
repz
mov
inc
dec
stc
xor
mov
jne
out
stos
loopne
cmp
fcmove
enter
int
cmp
push
mov
cmp
push
mov
les
push
or
sub
leave
xchg
mov
sbb
inc
pop
sarl
jecxz
mov
gs
in
lods
mov
and
jecxz
fistl
outsl
and
dec
fwait
outsl
int3
in
pop
xor
in
and
sbb
xchg
rcl
xor
pop
inc
jne
jmp
mov
mov
cs
add
inc
cld
cld
ljmp
xchg
iret
jg
repnz
mov
rcll
mov
pop
and
sub
sbb
xor
out
ret
sbbl
cmpsb
jp
and
arpl
enter
or
add
imul
mov
add
mov
fidivrs
sbb
outsb
xor
aas
xchg
aad
adc
cmpsb
add
xchg
or
test
dec
cmp
pop
ret
jge
jb
adc
movsb
xlat
fcmovne
stos
push
mov
xor
push
sbb
repz
fidivs
dec
xchg
movsl
cmp
mov
je
psubq
dec
cmp
lods
daa
or
or
adc
ret
push
addr16
insb
nop
adc
call
dec
cmpsl
adc
jno
mov
dec
scas
pop
cwtl
mov
in
lods
cmp
loop
mov
add
pop
mov
shlb
jl
out
or
frstor
push
inc
sub
pop
lret
jo
mov
iret
mov
cmp
pop
mov
adc
mov
out
notb
xchg
adcb
mov
push
shll
jae
lcall
jmp
dec
cs
inc
push
xor
popf
hlt
xorl
xor
aad
jmp
cmp
inc
lret
loope
mov
movsb
rclb
xchg
sub
cmp
movsb
and
nop
test
movsl
cmpsl
sub
pop
fstl
sub
scas
das
dec
scas
icebp
mov
dec
enter
adc
or
add
jle
cmp
dec
inc
adc
inc
cmp
shll
dec
sar
push
ljmp
cmc
xor
mov
aad
nop
push
mov
fstps
jle
test
jge
les
mov
mov
nop
push
mov
push
dec
cmp
add
dec
jns
dec
test
dec
jge
xor
insl
sub
sub
push
gs
inc
ja
fisttpll
loopne
fs
dec
lods
or
and
bound
xchg
adc
sub
adcb
scas
test
vpcmpeqd
sub
xor
enter
popa
xor
fmull
call
fcoms
orb
lds
js
xchg
cmp
or
rorl
jmp
or
icebp
insl
jbe
add
insb
mov
and
dec
push
test
mov
cmc
stc
test
frstor
xor
cmp
int
dec
scas
sub
cmp
or
mov
outsb
mov
shr
xchg
stc
into
daa
dec
add
inc
fadds
fdivp
and
orb
pop
push
popf
lcall
ja
icebp
and
addr16
inc
adcl
adc
mov
mov
and
rol
sub
xor
xlat
push
nop
jae
push
mov
ds
xlat
add
mov
push
negl
adc
mov
fldt
bound
fcoml
mov
ds
ds
xor
das
ljmp
xchg
dec
sub
lock
add
mov
rcll
jg
int3
mov
push
cmp
repz
jp
cmc
sbb
pop
push
jne
and
mov
fisttpll
and
mov
andl
loope
enter
pop
pusha
cmp
enter
stos
add
mov
jnp
das
push
mov
and
sti
mov
xor
and
pusha
sbb
es
sub
mov
jo
loop
jae
mov
sbb
mov
ljmp
mov
or
cmp
in
mov
xchg
xor
mov
sbb
mov
dec
cmp
push
pop
cmp
jnp
xor
mov
mov
push
jae
nop
jae
xor
aad
jecxz
arpl
mov
subb
int
sarb
insl
inc
mov
popf
inc
or
mov
adc
ja
in
fs
add
mov
and
pop
jge
or
sti
sbb
int3
fistpll
push
cld
sub
cltd
pop
adc
std
dec
and
jl
mov
sbb
lcall
call
mov
and
cli
mov
clc
clc
aas
inc
cld
and
repz
xor
mov
mov
lods
jle
call
test
dec
jge
sbb
jns
cmc
xchg
mov
cmp
mov
xor
mov
push
in
jle
js
inc
push
cmpsb
test
jle
lcall
and
popf
test
mov
push
jle
subb
inc
daa
sbb
xchg
xchg
inc
xor
bound
cwtl
add
lods
and
inc
xor
jns
xchg
inc
pop
adc
aad
jne
imull
mov
fs
fisubrs
sbb
shll
cld
dec
pop
mov
clc
dec
shll
cmp
push
rcrb
ja
in
pop
aaa
mov
and
dec
fldt
lret
cmpsb
leave
sbb
cmpsb
xchg
es
pushl
std
rcll
mov
sti
cltd
sub
cmc
adc
mov
test
add
js
pop
clc
leave
pop
or
adc
jmp
scas
aaa
xchg
push
and
roll
test
ljmp
jae
dec
inc
xchg
xchg
int3
or
inc
jmp
push
shlb
lea
jnp
add
rcrl
cmpsl
inc
into
lods
mov
mov
cmpsl
rorb
in
fidivl
push
inc
push
mov
clc
out
dec
cmp
adc
cmp
jno
frstor
subb
stos
call
adc
imul
push
push
std
push
adc
dec
test
aaa
sbb
bound
cmp
push
dec
dec
cltd
leave
push
es
jns
sarl
xchg
cld
ret
test
ja
xor
lea
addr16
mov
ds
and
inc
push
js
mov
mov
and
add
jmp
jb
dec
mov
pop
lock
jmp
ss
ljmp
mov
aas
jbe
mov
mov
iret
pop
loope
movsb
in
data16
std
lock
js
add
stos
jle
insb
pop
jae
addl
sar
inc
push
adc
dec
xor
cmpsl
cmp
call
insl
loope
mov
cmc
int3
jmp
insb
sbb
shrb
jo
adc
mov
pop
fistps
and
mov
rorl
push
inc
or
and
icebp
fs
mov
jmp
iret
pop
xchg
mov
sbb
gs
mov
orb
fstpt
inc
lret
outsl
jge
fmulp
jno
icebp
mov
mov
cli
or
sahf
stc
lds
mov
lods
push
inc
xor
pop
mov
cli
std
addr16
aaa
jp
scas
jp
pop
pusha
lea
mov
fiaddl
clc
lods
xchg
and
cmp
arpl
mov
imul
cltd
dec
xor
stos
repz
mov
in
test
inc
cmc
je
out
movsb
in
cld
inc
push
or
cmp
mov
enter
daa
sub
mov
mov
ss
xchg
jo
bound
cmp
add
xchg
pop
sahf
and
aam
mov
cld
mov
popf
sbb
lret
cmpsb
lret
mov
ss
mov
pop
mov
enter
leave
lret
stos
or
fistl
cmp
pop
lods
add
rcll
sub
push
pop
repz
jmp
mov
pop
out
inc
jmp
pusha
or
pop
cmpb
pop
fcom
pop
mov
pop
jne
and
xchg
xor
loop
adc
lea
xchg
dec
cld
clc
sub
jne
leave
stos
and
jae
cmp
sbb
adc
into
mov
and
int3
fnstcw
pop
aas
fcomi
and
adc
pop
ljmp
adc
enter
xlat
mov
pop
data16
adc
pop
dec
cmpsb
arpl
fcomps
ljmp
gs
mov
dec
int3
push
jnp
xchg
jno
shl
cmp
cmp
cmp
or
jmp
dec
addr16
xchg
mov
iret
scas
inc
ret
movsl
cld
fwait
pop
pop
pop
dec
jbe
jb
stos
repz
sub
std
test
cld
in
xor
pop
aas
dec
jle
fdivrl
stos
lcall
subb
jae
call
jbe
lock
jge
int
push
fsincos
loopne
aam
test
xchg
sbb
faddl
cmp
jnp
inc
push
mov
popf
enter
xchg
stos
lcall
je
aas
adc
lahf
outsb
shrb
fcomps
lock
cwtl
pop
jle
jns
sub
lock
jne
cmpsb
mov
xchg
inc
inc
ljmp
sub
aas
iret
mov
cwtl
std
test
adc
xor
popa
cmp
mov
sbb
lods
dec
dec
fidivl
sub
nop
xor
in
outsb
outsb
add
sub
adcl
and
loop
lahf
mov
pushf
sbb
push
pop
jl
sbb
enter
test
cmp
pop
sub
adcl
cmp
into
orb
sbb
pop
pop
jnp
push
pop
xchg
push
sbb
in
push
xor
lea
add
popf
push
inc
xor
or
in
fcoml
stos
dec
mov
pop
fcoml
sub
xchg
push
movsl
stos
fmul
fbstp
mov
mov
jb
outsb
add
sbb
pushf
adc
sub
sbb
loope
xchg
rcrl
stos
jbe
jb
lret
xchg
cld
add
stos
cmp
xchg
popa
jae
xchg
imulb
mov
sbb
or
movb
cltd
mov
inc
push
in
je
ljmp
sbb
insl
sbb
mov
jp
rorb
idivl
pop
jns
and
cmp
and
jg
add
loope
mov
adc
stos
ds
xchg
clc
clc
test
jae
into
and
je
pop
rcrb
add
outsl
nop
mov
jne
mov
add
aam
aas
xchg
jo
scas
adc
jo
xchg
mov
dec
jp
push
gs
push
mov
cmp
sbb
sub
jnp
mov
sub
add
cltd
cmpl
in
test
popa
mov
push
in
lret
into
lea
fisubrl
sub
xlat
and
cs
test
scas
cmp
cmp
scas
add
sbb
xchg
adc
in
leave
nop
and
dec
les
int
push
scas
bound
pop
adc
fwait
xchg
aaa
push
cmp
imul
jl
mov
inc
xor
cmpsb
xor
pop
xor
sbb
ret
lret
fcomip
pavgw
icebp
dec
mov
popa
gs
push
xchg
sub
je
pop
cmpsb
unpckhps
loopne
sbb
popf
jmp
pop
sbb
push
pop
mov
or
iret
inc
xchg
jns
out
movsb
mov
mov
lea
mov
dec
jne
pushf
mov
dec
push
ljmp
daa
jns
sub
mov
adc
mov
jp
bound
mov
and
xor
mov
inc
es
fstpl
outsl
push
sbb
fidivrs
push
and
sbb
mov
xchg
daa
xor
xchg
sub
mov
inc
sbb
sahf
dec
mov
mov
xchg
inc
adc
push
cmp
fisttpl
jbe
ja
mov
mov
lock
xorl
call
test
rcl
inc
test
repz
fldl
rcll
mov
push
out
sbb
cwtl
enter
cmc
jb
jbe
or
mov
mov
xchg
sarb
test
fsubr
stos
jne
lds
sbb
pop
dec
data16
mov
push
sarb
into
mov
jns
jecxz
inc
mov
popa
mov
dec
xchg
out
cwtl
fwait
cmc
rorb
jne
repz
mov
roll
cmp
sub
adc
pop
rcrl
inc
xchg
sbb
or
jp
xor
addr16
hlt
jge
mov
mov
push
lcall
out
dec
fists
jge
test
ljmp
in
dec
cwtl
xchg
aaa
xlat
mov
jne
je
call
add
xchg
insb
or
sub
dec
dec
loope
cmpsl
cmpsl
jb
pop
in
dec
ror
pop
jmp
add
add
jnp
rclb
cmpsl
outsl
inc
sbb
pushf
lds
movsb
sbb
pop
bnd
jb
pop
add
andl
sub
out
adc
sub
jbe
push
int
rolb
mov
std
pop
fidivl
mov
mov
adc
cwtl
pop
add
adc
fisubs
jg
in
jmp
movsb
nop
fwait
bound
outsb
ret
sahf
and
jno
hlt
ficoml
add
leave
movsl
in
call
or
jge
int
sbb
in
ficoms
call
cmp
loope
mov
xor
cwtl
mov
mov
xchg
push
sti
lret
and
subb
hlt
dec
in
adc
call
adc
es
inc
pop
jg
addr16
hlt
mov
data16
mov
mov
pusha
mov
cwtl
pop
cmp
adc
pop
das
fistps
lods
in
push
leave
pop
out
cltd
in
xor
mov
dec
popa
mov
sti
sub
dec
mov
rol
lret
arpl
xor
sub
cmp
lds
loope
mov
dec
push
pop
mov
movsb
xchg
pusha
add
repz
test
les
dec
pop
or
inc
cmp
lods
loop
and
repz
push
xchg
push
in
out
test
stc
xchg
dec
imulb
xchg
mov
ds
push
pop
test
aad
xor
fs
pop
scas
jb
push
icebp
addb
fsub
xchg
movb
dec
mov
lcall
es
stos
repnz
fs
jo
hlt
hlt
insl
sub
push
aaa
add
mov
je
jecxz
jge
push
lcall
and
cmpsb
das
mov
out
popa
test
lret
nop
sti
sbb
xchg
xor
inc
jle
or
cmp
add
icebp
cwtl
jns
stos
and
imulb
movsb
jl
outsb
addr16
outsb
iret
add
bound
xchg
or
and
or
push
orl
dec
adc
insb
sti
lods
insb
out
pop
mov
gs
out
cmp
mov
xlat
loope
loop
xchg
in
les
subb
setle
cli
in
mov
rcrb
mov
sub
xor
outsl
mov
jp
ret
enter
and
cmpsb
mov
rclb
stc
xchg
fisubrs
mov
pop
icebp
dec
lods
xor
inc
std
inc
iret
add
cmpsb
mov
adc
aad
xor
xorb
insb
xchg
pop
fsts
jge
add
and
ss
cmpsl
inc
cs
push
ljmp
push
test
pop
and
jle
lcall
adc
mov
add
adc
jmp
adc
sti
subb
dec
or
mov
mov
push
pop
pop
pop
and
jb
xor
inc
pop
pop
lahf
xchg
pop
out
cwtl
mov
mov
loopne
out
cwtl
leave
adc
jge
stc
mov
pop
pop
jb
out
dec
ss
out
sbb
xor
bound
scas
pop
ret
jle
add
mov
sbb
dec
shr
push
push
cmp
push
jmp
sbb
out
push
and
loope
inc
enter
or
and
push
mov
dec
test
mov
repnz
mov
pop
hlt
cli
sbb
ret
stos
mov
popf
sti
popa
int3
push
sbb
dec
adc
sbb
fwait
jb
inc
xor
mov
xchg
sub
sbb
adc
mov
ret
jb
dec
or
push
mov
xchg
xor
imul
lods
cmc
mov
dec
cmpl
xor
adc
jmp
and
incl
stos
lock
jnp
add
mov
adc
scas
aas
imul
jbe
mov
add
rcrl
mov
insb
push
popa
cmp
sub
insb
scas
pop
dec
lods
push
adc
imul
das
mov
and
call
xor
shr
stos
sbb
mov
stc
movb
js
bound
or
int
cmc
push
sar
pop
decl
xchg
pop
ficomps
popf
adc
push
dec
lcall
sub
and
mov
mov
push
cmc
push
mov
outsl
push
push
mov
add
jne
xchg
rolb
mov
adc
pusha
testl
mov
lcall
rcr
dec
sbb
jle
jle
mov
insb
in
popf
pop
pop
mov
inc
dec
sbb
add
shr
sti
push
movsb
fxch
rorb
rep
inc
pusha
js
pop
ja
mov
mov
inc
fsubl
pop
push
and
add
rolb
jg
and
lret
sub
mov
mov
mov
fwait
xchg
sub
mov
jns
mov
cld
and
je
daa
test
dec
mov
dec
xchg
or
cltd
sub
stos
adc
popf
and
fcmovnu
push
ror
mov
aad
push
lea
mov
mov
inc
jno
xor
outsl
js
popa
lods
push
imul
mov
scas
cmp
xchg
and
dec
sti
out
shl
nop
adc
stos
shll
repz
test
and
and
sbb
lods
jg
jge
xor
mov
adc
repz
in
or
ficoml
hlt
add
pop
pop
jae
dec
into
sarl
shlb
cmpsb
cmc
rorl
hlt
imul
dec
xchg
into
jne
arpl
out
insl
add
arpl
popf
push
adcb
jns
in
mov
inc
inc
gs
pusha
inc
sbb
dec
inc
fbld
add
mov
loope
jmpw
daa
push
lods
jnp
xchg
sbb
lods
adc
xchg
rcrb
fldcw
in
test
ret
iret
push
inc
lods
aaa
or
xlat
jg
lret
mov
cwtl
cmp
repnz
mov
push
xchg
int
addr16
shll
fincstp
lock
push
andl
pushf
rcrb
test
lods
mov
ja
cmp
xchg
mov
in
in
cmp
movsb
clc
enter
fisubrs
out
sbb
pushf
pop
sbb
std
inc
push
adc
cwtl
jecxz
aas
add
ficoml
repz
lahf
inc
mov
je
pop
push
xchg
xchg
mov
lea
push
pop
pop
xchg
add
pop
test
repz
les
fs
es
add
fiadds
jge
pop
pop
repnz
repz
xchg
arpl
call
test
xchg
ficompl
push
jmp
call
lret
out
orl
lcall
xchg
push
lea
jl
fs
js
in
popa
dec
ss
mov
in
sub
fdivrs
add
sub
das
inc
jno
or
mov
shlb
cmp
arpl
and
jge
cmp
and
fucom
shrb
std
and
fisubrl
push
lods
sub
mov
pop
pushl
pop
pop
mov
sbb
arpl
imul
and
mov
cli
dec
out
xchg
inc
or
mov
daa
ljmp
test
loopne
add
test
sub
dec
mov
shlb
or
cmp
mov
pop
fmulp
mov
mov
sub
addb
cltd
xor
emms
jle
lds
push
pop
int
sub
cs
lods
movsl
jp
fiadds
xchg
jno
mov
cld
pop
popf
aaa
or
popf
jns
and
lret
cmpsb
lret
xchg
jge
enter
popf
and
repz
push
ljmp
dec
mov
mov
fiadds
xchg
hlt
lock
mov
movsb
mov
and
aad
push
leave
push
and
fs
xchg
aas
ja
dec
idivb
in
pop
mov
in
loop
cld
jecxz
xchg
jns
dec
sahf
push
loopne
iret
sub
idiv
clc
mov
or
ja
mov
popa
push
mov
xchg
push
repnz
in
mov
inc
test
push
inc
addb
stc
push
xchg
mov
sub
orl
bound
outsl
jmp
leave
add
xor
jb
dec
push
icebp
aad
subl
data16
add
dec
popa
push
jg
sti
sbb
jo
xor
sbb
mov
xchg
int
test
call
js
fs
adc
insl
pop
pop
lea
rcrl
mov
or
xor
testb
jnp
cld
cwtl
sub
inc
addr16
jb
inc
ret
and
dec
gs
cmp
mov
imul
jae
xchg
test
mov
idiv
test
test
mov
jmp
idiv
sub
adc
lods
add
add
cmpsb
xor
sub
daa
hlt
pop
push
in
sub
cmpsb
sbb
mov
xor
cmc
pop
movsb
cmp
mov
mov
adc
dec
xchg
shll
scas
adc
sarb
int3
stos
jae
xor
cmp
js
xchg
in
enter
in
xchg
mov
xchg
jmp
push
es
add
jo
fiadds
mov
xor
imul
xlat
movsb
xor
jl
cmc
mov
insl
mov
lcall
nop
mov
pop
sub
adc
mov
out
cmp
out
jmp
imul
in
pop
lret
inc
mov
fisttpll
lods
pop
inc
loopne
push
aaa
mov
jge
pop
xchg
cmp
out
sbb
xchg
ret
out
sub
loop
jno
sbb
mov
sub
dec
cmp
in
jbe
lea
adc
jb
mov
imul
mov
dec
int
ljmp
xchg
mov
nop
pop
mov
icebp
lret
inc
xchg
iret
shll
xor
stos
es
ds
cmc
pop
aaa
out
mov
mov
xchg
mov
sub
and
lahf
rclb
mov
adc
mov
mov
sub
mov
out
addr16
sub
out
pop
inc
inc
push
pop
addr16
in
stos
icebp
adc
and
add
mov
scas
aaa
add
cmpsb
or
mov
mov
dec
les
mov
mov
sarl
movsl
dec
les
mov
pop
mov
cmc
mov
push
sub
dec
std
scas
pop
lock
push
fstpt
cld
fs
or
pusha
pop
mulb
out
mov
cmpsb
push
push
sbb
jmp
in
clc
xorl
fisttps
adc
push
or
add
insb
mov
dec
inc
orb
pop
sbb
rol
sbb
mov
jge
loop
mov
movb
mov
out
jp
sub
and
dec
dec
jecxz
dec
insl
mov
adc
mov
movsb
sbb
loopne
add
xchg
sub
mov
xchg
mov
xor
push
test
pop
or
std
shlb
sub
sti
sub
js
addr16
xchg
addr16
ja
dec
jno
cli
mov
dec
cmpsl
out
adc
pop
mov
dec
push
mov
mov
and
mov
lea
jae
in
sub
mov
out
jle
cmpsl
pop
xchg
adc
hlt
and
shl
mov
jge
add
jl
lret
mov
add
cs
cmpsl
or
mov
imul
jmp
aaa
sti
lret
icebp
push
xorb
jbe
insl
shl
fisttps
mov
fcompl
adc
jae
sub
aaa
stos
fsubl
mov
std
roll
push
test
movsb
sub
mov
in
mull
sbb
sub
pop
and
outsb
cltd
mov
test
cmp
xor
xchg
xchg
mov
sahf
jp
cmp
mov
out
popa
cmp
in
lret
lods
xchg
mov
mov
loopne
popf
dec
add
sub
sbb
lret
insl
repz
push
cli
fwait
cmpsb
sub
imul
mov
mov
decb
cmpsl
in
sbb
nop
jle
imul
push
cmpsb
or
or
cmpsl
or
push
inc
jle
dec
out
bound
mov
push
int
inc
cltd
jae
xchg
pushf
push
add
dec
sbb
repz
sti
ficoml
pop
mov
add
or
mov
fidivrl
pop
and
imul
addr16
push
lock
fstpl
in
test
inc
push
out
mov
cld
int
les
ss
in
mov
mov
xchg
sbbb
imul
dec
sbb
daa
cmpsl
jl
cmp
jmp
xor
iret
add
ret
add
stos
lret
cmp
sbb
and
xchg
orl
insb
fldcw
xchg
testb
leave
lahf
rcll
je
lock
pop
rclb
and
sub
pop
adc
cwtl
sbb
fmuls
adc
push
jl
mov
test
das
lret
sbb
pop
add
adc
or
clts
cmc
mov
test
test
dec
sti
push
and
aad
push
shrl
movsl
adc
dec
jmp
xchg
hlt
mov
mov
adc
sbb
or
movsl
pop
mov
je
jmp
cmp
adc
and
push
push
test
inc
mov
cltd
enter
push
push
or
lret
push
xchg
pop
and
adc
test
insl
popa
mov
insb
add
mov
inc
out
sub
shlb
xor
dec
in
cmp
mov
push
repnz
in
outsb
add
sub
pop
fnstcw
sub
add
lahf
neg
adc
sbb
outsb
mov
popa
jbe
pop
outsb
or
loopne
push
cltd
cmovl
js
push
jns
orl
mov
and
push
xor
popa
nop
stos
inc
pusha
cmp
imul
imul
and
pop
cmpsb
adc
mov
xor
xchg
pop
xorb
push
jle
fdivp
sub
addr16
sbb
shlb
or
lods
fistps
test
pop
adc
mov
sbb
push
mov
dec
fcoml
mov
xchg
popa
xchg
jbe
jne
push
push
fs
and
dec
mov
dec
push
iret
cwtl
in
dec
xchg
jg
imul
jnp
dec
or
data16
rcr
idiv
mov
mov
imul
add
push
cmp
or
jmp
ss
aam
sar
sti
mov
fdivs
orl
ret
stc
jg
inc
xchg
dec
movsb
ret
imul
xlat
mov
push
add
cld
sbb
in
cmpsl
sbb
scas
xor
and
and
rol
std
and
xor
mov
mov
lods
or
cmpb
mov
test
aam
mov
test
ss
cmc
jno
jmp
int
ljmp
push
xor
and
inc
dec
cwtl
lea
push
xor
and
mov
push
adc
inc
lds
cwtl
pop
jb
hlt
add
mov
xor
xchg
test
ja
add
pop
adc
jg
fbld
inc
xor
lret
dec
sbb
aam
xchg
in
pushf
loope
fldcw
sub
mov
inc
jns
push
cmpl
arpl
adc
push
nop
ss
mov
lods
xchg
xlat
fistl
std
imul
movsl
mov
mov
dec
mov
and
inc
bound
cmpl
jmp
adc
out
fildl
or
fs
sbb
rorb
mov
mov
ret
pop
popf
pop
subl
cmp
test
aad
ljmp
add
aam
jg
jne
dec
ss
fwait
inc
pop
sbb
xchg
cltd
xor
cmc
adc
push
pop
sub
cs
mov
pop
insl
sti
mov
cwtl
dec
cmpsb
stos
sub
cs
add
pusha
imul
aam
sub
xchg
lods
leave
push
pop
in
mov
dec
mov
cmp
rolb
sub
jp
lahf
mov
sub
in
shr
mov
mov
enter
pop
lcall
inc
mov
push
js
adc
xor
cwtl
xor
xchg
jns
outsb
add
inc
int3
push
xlat
ds
jecxz
sub
and
roll
mov
inc
call
and
pop
mov
mov
mov
aaa
out
cwtl
cmp
popf
fildll
jmp
sahf
imul
mov
fistl
sbb
scas
fnstsw
inc
pop
in
test
int
inc
push
mov
bound
ret
icebp
push
rol
stc
in
jbe
push
adc
sarb
adc
or
imull
fstl
jae
outsb
test
sub
dec
fdivrs
ficoms
je
adc
test
mov
int
lods
data16
fucompp
jg
aaa
pushf
aas
rorl
mov
xor
out
in
cmp
scas
lods
push
xor
cmc
bound
popw
cmpsb
fimull
push
or
push
loopne
add
xlat
sbb
addb
cli
inc
pop
mov
lret
sub
fidivs
scas
jge
pusha
loop
push
rclb
jns
jbe
idivl
lods
mov
xlat
popf
push
sti
outsb
dec
jno
cmp
test
push
pshufw
jp,pn
inc
fcmovb
mov
scas
sbb
mov
imul
lret
mov
push
inc
int
push
rclb
pop
jno
add
or
out
dec
and
mov
mov
arpl
jno
cmpb
mov
outsl
imul
movsl
push
xchg
movsl
jns
xor
push
mov
mov
ret
adc
xchg
mov
imul
data16
mov
mov
xor
int3
push
sub
repnz
in
and
shrb
shrl
mov
push
inc
inc
jae
mov
mov
je
push
jecxz
in
jns
ja
sbb
fldt
inc
lock
mov
pop
inc
dec
push
mov
adc
xchg
out
test
scas
xor
add
out
sbb
fs
sahf
or
addb
fwait
xchg
ret
cld
or
out
sbb
stos
stos
cmp
ficompl
add
and
pop
outsb
dec
bound
pop
push
mov
es
and
dec
pop
and
outsl
ror
js
pusha
add
xchg
or
mov
int
xchg
xchg
xchg
lret
je
fisubl
push
out
sahf
xchg
xchg
daa
or
jg
and
add
jecxz
or
cmp
inc
call
in
xlat
push
lret
cmp
xchg
ljmp
shll
ljmpw
cli
sbb
mov
add
pop
push
lret
into
adc
mov
stos
mov
cmp
movsb
addr16
lock
mov
iret
pop
inc
inc
movsl
cli
dec
repz
mov
sarl
sbb
mov
call
sub
shrb
notl
xor
popa
sahf
jle
mov
enter
pop
sbb
notl
jns
ror
jmp
icebp
lret
fwait
jl
mov
clc
mov
sbb
mov
fucomi
stos
lcall
lds
xchg
or
sbbb
ss
inc
sub
lods
dec
sub
ljmp
pusha
call
nop
or
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
inc
add
mov
add
loopne
add
add
add
add
add
add
add
adc
