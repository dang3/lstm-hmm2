push
call
ret
ret
lahf
adc
inc
cs
sub
mov
cmp
cltd
jecxz
add
adc
and
mov
cmc
cmp
aad
dec
jae
push
mov
pushf
les
mov
mov
andl
sbb
shr
adc
ja
pop
or
in
pop
adcl
xor
nop
int3
sti
in
repz
int
pop
and
xchg
in
es
das
push
mov
mov
test
dec
and
dec
ret
inc
and
and
push
add
sub
subl
test
filds
dec
lea
cltd
in
popf
stos
push
xchg
pop
outsb
subb
cmp
scas
mov
xchg
or
inc
repnz
out
jo
into
xor
pop
and
pop
pushf
std
add
js
cmpsl
mov
jns
fldcw
rcl
jnp
sbb
jbe
and
das
adc
mov
cltd
icebp
dec
cld
mov
addr16
mov
jno
lds
jno
daa
leave
push
cmp
inc
dec
std
sbb
push
jg
mov
jl
popf
outsl
loop
or
movsl
outsb
xchg
sbb
mov
lea
test
dec
test
mov
mov
loop
xchg
outsb
and
icebp
jns
and
test
mov
scas
and
lods
loope
fidivrl
ljmp
fstps
shll
shlb
rcl
pop
in
pop
mov
dec
cmp
jns
and
fdivr
pop
jb
jnp
mov
cmp
mov
mov
and
aam
xchg
fidivrs
pushf
jge
fs
test
shrb
stos
jmp
jp
out
sbb
sbb
sub
push
mov
inc
jns
and
dec
icebp
push
mov
out
jp
ja
xor
xor
or
les
xchg
mov
mov
push
in
out
addb
hlt
insb
dec
pusha
push
das
mov
jns
jg
dec
inc
pop
mov
in
mov
cli
or
inc
push
addr16
fsubs
push
dec
pop
cmpsl
sbb
cwtd
fwait
sbb
je
xchg
sbb
mov
cmp
jns
jge
mov
mov
filds
arpl
sbb
add
fldcw
push
in
hlt
mov
and
or
out
cmpsb
jp
xor
fistl
sbbl
cs
pop
dec
push
sub
mov
inc
clc
cmc
rolb
outsb
lcall
aas
xor
lods
mov
cmp
into
pop
pusha
popa
mov
adc
fisubs
xor
hlt
popf
jp
in
inc
adc
jmp
fnstcw
push
mov
mov
int3
mov
loop
dec
pop
mov
stos
stos
adc
dec
hlt
ffreep
mov
nop
mov
xchg
xchg
fildl
or
pop
or
cmp
stos
cmp
push
rcrl
leave
add
js
in
add
adc
rcrl
mov
xchg
sbb
dec
rcrb
push
dec
stos
ret
jl
and
jne
aas
mov
cmp
fsubr
fwait
mov
test
push
mov
insb
or
in
movsl
push
or
and
lods
mov
push
sbb
xchg
sbb
pushf
xchg
mov
sub
lahf
pop
jne
pop
fldl
adc
fistpl
in
orl
xor
add
insl
mov
pop
mov
jecxz
incb
or
js
or
nop
push
cmpb
mov
mov
repz
idivl
mov
outsl
sbb
sub
repz
imul
icebp
dec
lahf
pop
adc
inc
in
inc
pop
pushf
leave
fwait
jmp
and
jg
mov
in
mov
pop
lds
pop
outsl
sbb
lret
test
out
sar
clc
repnz
pop
stc
xchg
aam
lds
sub
pop
xchg
lods
into
arpl
push
fbld
test
adc
jmp
jg
xchg
cmpsl
and
lock
es
lret
or
cli
jbe
vmptrld
add
mulb
cltd
add
adc
sbb
nop/reserved
cwtl
aaa
mov
test
cmpl
dec
jge
dec
subl
test
ss
mov
jge
fstl
scas
sahf
cmp
ficomps
das
je
rol
mov
bound
push
mov
out
lahf
das
movsb
push
cmp
jge
test
rolb
sub
mov
stc
icebp
out
rorl
loopne
out
or
sub
adc
cmp
pop
out
das
cmp
repz
inc
sub
mov
cmp
sbb
jge
xor
daa
imul
mov
mov
js
push
sbb
mov
add
rorl
adcl
fmull
je
test
fstpt
fwait
sbb
out
rol
mov
jmp
out
outsb
adc
mov
pop
popf
pop
je
lret
jno
loop
push
sbb
outsb
mov
ljmp
test
sbb
mov
dec
scas
ja
mov
loop
inc
add
xchg
dec
popa
movsb
aaa
mov
scas
scas
sbb
mov
shrl
add
scas
jb
xchg
int
out
mov
jns
nop
adc
scas
mov
fisubs
jmp
scas
adc
jbe
ljmp
inc
bound
pop
mov
scas
xlat
gs
cli
add
paddq
or
cmp
pmulhuw
add
fsubr
mov
jl
in
push
jns
mov
push
xor
sbb
scas
ljmp
fld
jnp
incl
dec
popf
mov
bound
lret
sbb
or
fildl
pop
or
call
push
inc
or
mov
inc
push
jno
xchg
dec
sahf
popa
rorb
aam
pop
xor
fcomp
lods
incb
int
enter
or
out
call
mov
mov
enter
or
cwtl
mov
inc
jnp
push
add
xchg
sbb
inc
mov
jb
scas
movsl
jae
int
sahf
les
mov
or
mov
mov
aas
std
rcrl
xchg
lret
test
ljmp
xlat
data16
daa
jp
pop
xor
push
add
out
pop
les
add
jns
das
jae
fidivrl
ja
aad
pop
push
out
sub
add
cmpsb
pop
aam
imul
mov
outsb
dec
and
ljmp
pop
mov
xchg
in
cwtl
xorb
es
add
jmp
and
and
cmp
pop
adc
lods
inc
mov
cmc
repz
pop
sbb
jp
or
adc
out
jmp
cmp
leave
pop
jne
cld
mov
jecxz
xchg
adc
pop
faddp
cmpsl
cmovnp
in
mov
cmp
adc
mov
rcrl
xchg
push
int
loop
sahf
dec
or
sbb
fidivrs
mov
xorb
fcompl
loope
clc
push
mov
mov
pop
mov
sbb
scas
jne
push
mov
lods
int
sti
jp
and
pusha
mov
mov
and
dec
addr16
mov
hlt
ss
push
mov
jns
sub
mov
movsl
mov
aas
in
inc
shll
and
or
icebp
out
cmp
lea
icebp
addr16
in
jno
or
call
jbe
mov
and
fadds
mov
enter
pop
jg
fadd
push
jge
scas
mov
and
jmp
inc
push
lods
xchg
in
push
xor
fdivr
movsl
fmulp
int
adc
fwait
mov
xor
mov
fs
jmp
idivl
or
imul
aas
inc
repnz
mov
and
popl
push
jb
xor
ret
push
outsl
loop
push
pushf
xor
out
iret
call
mov
imul
repnz
mov
jns
xlat
jae
aas
into
mov
mov
dec
jg
jo
mov
int3
mov
loop
int3
imul
xchg
jl
xlat
test
push
imul
movsb
repz
pop
repz
push
push
lods
lret
mov
or
dec
fwait
stos
push
enter
dec
mov
xchg
mov
push
mov
lock
xor
xor
cmp
mov
or
das
cmp
imul
or
and
jge
push
cmp
cmpsb
in
jae
cld
or
fcmovbe
add
in
rclb
pop
push
pop
dec
xlat
add
jb
or
into
repnz
mov
add
fsubs
aas
cs
rorl
inc
push
incb
addr16
shrb
cmp
mov
sbb
push
or
lock
icebp
xchg
aas
cwtl
xchg
aad
and
xor
pop
sti
rol
fnstsw
ja
repnz
sbb
mov
leave
mov
out
std
adc
aad
out
inc
ret
and
popa
loopne
mov
push
cmpsl
clc
icebp
xchg
push
sub
pop
xchg
push
pusha
pusha
adc
adc
push
insb
mov
clc
fcomps
fwait
or
rcll
xchg
mov
enter
loopne
sub
arpl
frstor
pop
sbb
jmp
xor
lret
dec
in
adc
aas
mov
data16
rorb
jnp
sub
repnz
push
pop
cltd
lock
fmull
outsl
sub
adc
daa
jno
ljmp
xor
xor
cmpsl
cmp
mov
scas
insl
jmp
mov
into
out
mull
out
movsb
push
jno
repz
xchg
pop
faddp
pusha
mov
sahf
aad
call
in
stos
adc
push
lcall
ja
or
loope
sub
out
push
test
push
fldt
adc
sub
icebp
dec
aad
stc
xchg
mov
push
jns
fldcw
ds
shll
scas
out
jg
or
repz
pop
xchg
pop
xchg
fistps
dec
scas
mov
data16
insb
int
and
das
push
aas
sbb
pop
and
jp
fistpl
mov
and
sub
fs
pop
xchg
or
jge
adc
mov
ret
ret
ds
xor
imul
cld
fiaddl
ljmp
xchg
cmpsb
xor
aam
jmp
or
pop
dec
sar
dec
push
sti
ss
test
cmp
scas
push
xor
mov
or
mov
aas
addr16
jnp
or
hlt
cmp
scas
fwait
add
lret
adc
xor
sbb
inc
pusha
movsb
cmp
sarb
push
adc
sarl
cli
mov
add
xchg
mov
xor
data16
jge
iret
ds
lea
add
pushf
sbb
int3
jle
fstps
inc
and
xchg
add
cltd
pop
pop
pop
dec
jne
fs
outsb
out
xlat
inc
aaa
and
subb
lods
scas
jecxz
cmp
add
sbb
push
mov
cltd
pop
push
mov
loopne
pop
cmp
push
repnz
cld
jmp
inc
lock
xchg
pop
cmpsl
std
sbb
sbb
mov
cmc
shl
pop
pop
xlat
gs
aaa
bt
sbb
cmp
mov
cmpsb
xchg
mov
xchg
aam
subb
cmp
imul
pop
fs
add
pop
ljmp
pop
add
sub
dec
ljmp
mov
push
sti
scas
scas
imul
aaa
movsb
lcall
fdivl
popa
jp
test
shrl
pop
cltd
jmp
andb
and
push
sub
bound
aad
lahf
pusha
and
mov
xor
test
mov
test
mov
mov
popf
pop
mov
rcrl
mov
inc
addb
push
add
mov
js
sti
add
mov
dec
lret
push
add
jne
cmpsb
inc
jno
fistps
sbb
fcoms
mov
adc
fs
inc
pop
enter
cmpsb
imul
mov
rcll
xor
std
or
xor
sub
xchg
leave
das
nop
addb
mov
mov
imul
sub
cmp
je
arpl
or
test
dec
aaa
or
aas
mov
nop
push
in
dec
stos
loop
lahf
aad
inc
insl
sbb
rorl
mov
xchg
sbb
mov
mov
sbbl
enter
push
loopne
and
pusha
leave
pop
sub
jl
mov
lds
gs
push
jge
pop
fcoms
movsl
imul
dec
imul
lret
cmp
mov
cmp
inc
push
and
call
mov
out
adc
cmpsl
int3
aaa
out
fnstsw
or
repnz
adc
sbb
jl
inc
mov
push
je
mov
xchg
scas
nop
add
cmpl
andl
pop
fnsave
rclb
pop
inc
shl
out
leave
dec
call
mov
push
int3
jecxz
movsl
push
jecxz
fcoms
sub
sub
in
mov
xchg
xor
pop
sbb
rcll
sti
out
cmp
push
movsb
adc
sub
add
jns
xchg
xor
push
rorl
int
push
shlb
sub
addb
mov
out
mov
fabs
xor
sbb
or
sbb
fldcw
add
mov
movsl
jnp
mov
dec
add
and
inc
or
in
jbe
test
not
shrl
mov
lahf
jns
xlat
jno
cmp
das
cmp
test
dec
pop
shll
jb
push
popf
sbb
or
outsb
test
adc
mov
xchg
xchg
jne
lret
cmpsl
xor
pop
faddp
cmpl
enter
add
aaa
imul
fidivl
mov
sbb
dec
pop
es
int3
sarl
xchg
out
xchg
in
iret
mov
ss
adc
out
and
or
js
aam
xor
std
mov
xchg
popa
imulb
jecxz
ficomps
sub
popf
nop
pop
rorb
cld
rcrl
jp
sub
cs
ja
call
or
imul
les
addr16
test
call
movb
fcompl
into
mov
mov
arpl
insl
imul
enter
dec
jl
add
nop
lahf
cmp
sub
mov
lret
mov
loope
add
push
xor
movb
negl
cmp
or
sbb
jno
scas
enter
pop
adc
iret
mov
inc
outsb
or
push
cmp
jnp
aad
pop
sbb
leave
xchg
filds
cmpl
les
pop
lods
in
jecxz
dec
mov
shll
addps
lret
outsl
cmp
inc
lods
sub
sub
ja
pop
add
mov
adc
negl
vcvttpd2dqy
cmp
or
iret
cmp
push
inc
cmp
sahf
icebp
rcrl
push
inc
cs
mov
jns
adc
lahf
sbb
aaa
fmuls
test
push
stc
or
and
xlat
and
cmp
cmp
sbb
add
cs
mov
rclb
stc
adc
scas
test
inc
test
cmpsl
fildl
xchg
mov
mov
int
or
or
leave
sbb
cmpsb
call
mov
mov
mov
xchg
sub
adc
jg
sarl
push
daa
and
and
stos
sub
cmp
sub
dec
dec
xlat
shll
stos
repnz
adc
in
stc
and
cmp
ja
inc
pshufw
aas
fcoms
inc
sti
out
fistpl
and
xor
das
jno
add
ljmp
push
in
pusha
and
shll
sub
ret
fiaddl
arpl
adc
into
jne
stc
decl
int
or
out
inc
icebp
clc
sarl
mov
movsl
sti
lahf
mov
jb
push
aas
flds
ljmp
fiaddl
movsb
fisttps
cmp
in
push
pop
push
iret
cmpsl
in
and
mov
subl
fwait
std
js
fs
cmpsl
dec
xchg
pop
jne
data16
stc
add
outsb
jnp
pminub
sbb
mov
push
inc
push
rcrb
xor
cmp
pop
loop
repnz
xchg
sti
mov
inc
mov
fwait
stos
dec
and
mov
orb
and
jecxz
sub
je
or
test
jg
lods
mov
out
push
fbld
jmp
cltd
jno
xor
push
mov
sub
dec
xor
lea
add
sbb
push
mov
push
popf
push
jg
cmp
jb
cmp
mov
push
psubusw
pop
adc
xor
fsts
mov
fldcw
dec
mov
push
dec
pop
mov
inc
bound
clc
pop
in
sahf
adc
inc
call
inc
cmp
sbb
lea
sbb
dec
push
enter
neg
pop
and
mov
push
push
pop
imul
push
ljmp
cmc
rcrl
mov
inc
repz
push
pop
mov
mov
sbb
loopne
push
in
xchg
icebp
push
je
hlt
ret
lahf
push
ffree
in
inc
aad
clc
popf
mov
test
or
sahf
dec
mov
loop
std
jle
or
je
lret
scas
cwtl
icebp
xor
outsb
xlat
call
cwtl
ret
inc
lcall
scas
cmp
adc
das
test
ljmp
popa
cmpsb
dec
push
inc
add
fimuls
mov
repnz
jae
or
push
aam
popa
loopne
popa
jp
mov
or
mov
pop
mov
lret
into
fidivrs
shrb
call
notl
ss
xchg
xor
xchg
lods
hlt
mov
in
xor
xor
mov
dec
stc
mov
adc
test
stos
jmp
jl
xlat
ror
pop
mov
pop
lea
addb
aas
mov
mov
lret
jp
je
mov
loop
ja
in
sahf
pop
adc
test
sahf
dec
scas
mov
inc
mov
mov
mov
sub
paddb
filds
jl
in
add
mov
pusha
fcmovnb
test
push
js
push
mov
mov
inc
or
adc
sub
push
pop
mov
push
push
fiaddl
mov
jmp
cwtl
repnz
xchg
and
iret
or
cmpsl
sub
scas
bound
push
cmp
aaa
imul
add
xor
scas
js
bound
mov
lods
push
sahf
iret
sbb
fisubs
icebp
data16
sub
cwtl
ljmp
adc
enter
daa
jnp
cs
sub
dec
push
sbb
sub
jo
or
mov
out
add
cltd
sbb
dec
pop
and
jb
or
push
into
adc
adc
mov
and
inc
call
fmuls
leave
fcoms
pop
ljmp
int
test
xchg
jg
in
push
daa
dec
pusha
push
jmp
mov
sbb
cmp
cwtl
stc
mov
lcall
adc
pop
cmp
cmp
ds
test
int3
pop
aaa
mov
mov
loop
data16
nop
cmp
insl
pop
dec
jecxz
loopne
push
fstpt
inc
xchg
aaa
outsb
mov
xor
inc
adc
stos
mov
lock
stc
mov
jmp
jns
jmp
adc
jle
cmp
vmovaps
add
daa
rclb
pop
je
cmp
dec
shl
mov
je
mov
jb
flds
mov
cli
stos
scas
idivb
loopne
ret
xor
mov
faddp
mov
scas
mov
mov
jp
mov
inc
aam
inc
stos
rclb
dec
jnp
shrb
jae
pop
dec
call
fisubs
loope
lea
loope
loope
cs
mov
push
push
cmp
or
loope
xchg
and
lret
fisttpll
push
cmc
lods
pop
mov
xlat
cmc
lret
jno
pop
mov
aaa
jp
je
fxch
ljmp
mov
xor
pcmpgtw
cmp
cltd
mov
leave
xor
inc
adc
fdivr
call
arpl
int3
leave
mov
or
jg
dec
push
movsb
adc
mov
mov
push
sbb
mov
pop
scas
add
fiadds
and
push
cmp
adc
les
loopne
jnp
adcb
xor
adc
in
mov
inc
daa
jg
ret
mov
cli
sahf
pop
sbb
nop
lcall
adc
movsl
es
repnz
mov
jg
pop
in
loop
dec
dec
or
or
mov
and
or
mov
xchg
cld
push
js
and
and
jp
sbb
and
fdivs
mov
out
inc
pop
mov
in
xor
mov
xchg
sbb
scas
mov
jns
adc
lock
xchg
adc
icebp
es
stos
pop
jp
adc
push
stos
jb
inc
sbb
inc
adc
or
sbbb
lea
xchg
hlt
into
xor
clc
ret
pop
gs
xchg
pop
icebp
xchg
lds
jecxz
pushl
incl
inc
jmp
push
fiadds
dec
or
jbe
movsl
aaa
popf
in
in
dec
cmpw
pop
cwtl
xchg
cld
mov
xchg
xchg
dec
gs
pop
cmp
pop
mov
adcb
fcoml
dec
xchg
sbb
cmc
push
xor
cmp
test
dec
ja
inc
push
cs
mov
in
cmp
and
inc
out
and
xchg
and
out
imul
mov
xchg
fldl
dec
mov
add
and
sbb
adc
shrb
sub
lret
push
mov
out
lahf
dec
pop
cmp
xchg
mov
add
xor
icebp
es
mov
jns
cld
xor
add
call
xchg
andl
cmpsb
outsb
jge
lock
out
cmc
and
jbe
lea
adc
les
mov
xchg
jmp
movsl
mov
addr16
mov
jne
sbb
leave
pop
rorl
ret
popf
icebp
repnz
or
imul
inc
and
scas
loop
lret
mov
push
pop
movsl
sarl
ljmp
fwait
sbb
adc
pop
and
mov
ja
in
inc
fmuls
mov
mov
or
aad
ljmp
fadds
adc
jno
ds
jp
push
in
pop
in
fadd
sub
sarl
pop
pop
jno
mov
xchg
and
cltd
stc
sub
or
int
insb
mov
sub
stos
dec
pop
lods
mov
aas
shlb
mov
cmpsl
int3
sub
cmc
xor
lahf
in
into
add
pop
sbb
int
std
aam
adc
push
lea
std
sub
xchg
sbb
push
mov
mov
sbb
push
cmp
xor
out
mov
stos
in
sbb
cmc
mov
rcrl
jmp
movsb
test
and
lea
lock
inc
xchg
dec
jmp
pop
xchg
add
loopne
cli
pop
outsl
xchg
bound
jg
and
data16
std
xchg
xchg
mov
add
sub
and
and
orl
out
dec
and
int
int3
test
jp
mov
inc
sahf
std
in
inc
scas
jmp
adc
shrb
dec
mov
inc
or
mov
mov
mov
js
lea
clc
bswap
xchg
leave
andl
sub
aad
sub
dec
jge
add
pop
aaa
orl
fnstsw
mov
mov
inc
test
xor
mov
repz
push
outsl
fistpll
fcmovu
pop
bsr
lcall
jecxz
jns
fwait
dec
outsl
outsl
and
adc
cmpsb
movsl
lock
mov
clc
xor
dec
fcmovnbe
cmp
loope
xor
mov
jne
outsb
cli
jg
movsb
fs
loop
jns
sub
mov
leave
push
or
jecxz
mov
mov
cli
sub
xchg
jmp
fcomps
cmpsl
test
in
mov
and
sbb
mov
push
outsl
jns
in
fdivs
fcmovbe
lds
mov
adcl
or
les
stos
adc
cmp
js
inc
sbb
mov
mov
dec
shll
mov
or
inc
push
pushf
incb
out
leave
sbb
imul
out
mov
cwtl
cltd
mov
repz
popf
cmp
jns
out
add
shlb
lea
leave
pop
les
pop
das
negl
mov
xchg
movsb
xor
pop
into
call
loope
lret
sbb
fstl
and
cmp
adc
sbb
cmpsl
pusha
lods
pop
daa
movsb
test
jae
mov
inc
jb
ss
ret
xor
hlt
addr16
das
lea
pop
jle
sub
mov
xchg
cmp
in
aad
std
leave
stos
hlt
out
xchg
and
xor
addl
push
jnp
push
inc
add
das
or
jp
cmp
jne
ret
repz
js
fmul
sbb
pop
daa
xor
jne
mov
andb
adc
sbb
cmp
loope
lods
and
pop
mov
jge
dec
pop
cmpl
lcall
inc
imul
lahf
inc
xchg
mov
bound
fcompl
pop
xor
mov
or
lock
icebp
outsb
lock
call
inc
mov
enter
adc
test
push
push
add
push
adc
stos
cltd
xchg
mov
xchg
dec
xchg
jbe
sbb
aam
mov
push
push
sub
stc
inc
iret
inc
and
mov
popa
stos
insb
js
pminsw
or
shll
cwtl
cmp
lock
xor
push
mov
faddl
rorl
shl
call
sbb
movsb
sar
or
lods
jle
adc
nop
mov
push
pop
mov
in
adc
rep
orl
mov
push
inc
or
cs
jg
imul
sub
jecxz
repz
xchg
in
jbe
ss
sub
bound
sub
daa
mov
icebp
push
or
test
xchg
popf
pop
xor
sarb
xchg
jmp
add
inc
movsl
out
adc
mov
inc
test
lahf
mov
ret
sbbl
adc
insb
hlt
xchg
dec
and
stos
mov
lods
adcb
push
int3
push
popf
and
push
fstpl
and
ss
cmp
mov
dec
cmc
ds
adc
pop
jne
jl
pusha
cmpsb
mov
mov
xchg
leave
dec
pop
xor
inc
xchg
das
cwtl
es
sti
enter
push
xorl
xor
test
sbb
mov
seto
cs
jecxz
test
mov
ret
mov
jo
dec
xchg
inc
lods
inc
mov
loope
in
mov
call
arpl
xchg
xor
repz
sub
jbe
popa
aaa
jo
aas
int
lahf
ret
std
add
stos
iret
sbb
je
push
inc
add
rolb
sbb
popa
ja
scas
lock
and
enter
pop
cmp
dec
test
adc
mov
sub
cmp
or
lock
cmp
imul
scas
pop
dec
push
clc
outsb
mov
xlat
jnp
dec
shll
insb
loop
lahf
rcr
sub
pop
bnd
mov
fstpl
add
js
sub
aad
hlt
xorb
pop
ffree
mov
pushf
fadds
pop
popf
and
sub
fstps
xor
pusha
xor
imul
adc
mov
push
pushf
sub
mov
and
adc
cli
stc
xchg
fcoml
nop
mov
push
and
jo
popa
inc
adc
std
data16
outsl
push
loope
jns
repz
xor
and
inc
insl
out
mov
icebp
push
inc
lea
out
xchg
pop
xlat
subb
leave
dec
push
test
sbb
adc
aad
adc
jl
jo
dec
int3
xchg
popf
in
and
pop
pop
pop
xchg
push
incb
stos
incb
jne
in
subb
insl
and
pop
movsl
xchg
test
dec
out
pop
into
mov
sbb
pop
ss
inc
add
inc
inc
mov
sarl
lock
cmp
out
inc
leave
pop
push
xchg
ds
xchg
pushf
xor
xchg
xor
sbb
dec
lods
and
jl
js
jmp
push
push
inc
jecxz,pt
hlt
lahf
sub
out
pusha
mov
ss
jge
gs
mov
ret
outsb
cs
mov
outsb
fiaddl
mov
lret
push
js
push
sti
loop
andl
sub
mov
sub
add
lahf
mov
dec
xchg
add
sub
and
in
mov
fnstcw
sahf
ljmp
test
add
dec
or
clc
mov
hlt
repnz
inc
fs
push
les
xchg
std
out
js
fcom
xchg
mov
xchg
adc
inc
cmpsl
repnz
ret
pop
sub
mov
mov
lds
cltd
fldenv
mov
rcrl
fidivrl
pusha
add
jne
test
pop
jle
shll
inc
lods
pop
icebp
jl
jns
in
sub
inc
dec
adcl
mov
aaa
test
daa
adc
aad
mov
lods
ss
mov
cwtl
inc
mov
ret
es
cs
mov
in
nop
mov
xchg
cmp
es
outsl
cli
cmp
adc
scas
dec
adc
pop
imul
sbb
shl
dec
dec
inc
sub
out
int3
ja
cli
pop
test
testl
cmp
sub
cwtl
push
mov
fsts
xor
mov
sbb
sti
in
test
xor
clc
mov
cmp
xchg
jbe
mov
imul
xchg
data16
adc
std
addr16
adc
mov
nop
je
aas
stc
and
pop
xor
push
mov
cmc
mov
fsubl
add
add
sbb
cmp
loopne
mov
pop
dec
add
mov
sbb
aaa
out
aaa
xchg
test
dec
jle
mov
sub
pop
outsl
fwait
pop
xor
test
rcrl
js
xor
cmp
cmp
out
sti
mov
cmp
orl
ds
test
jnp
and
aaa
nop
out
add
adc
pop
jnp
inc
shll
int
xchg
fisubrl
fs
stos
dec
cmp
popf
add
outsl
popf
sub
in
jae
mov
fidivl
sbb
daa
aad
outsl
clc
stos
push
daa
push
mov
out
aaa
inc
cli
imul
xchg
or
in
es
sbb
sbb
popf
sbb
pop
aam
mov
arpl
out
add
pop
push
mov
lods
out
or
ret
shrl
xchg
pop
jl
dec
add
mov
test
adc
daa
roll
mov
and
test
repz
scas
cmp
xor
xor
mov
fadd
cmc
mov
test
out
sub
xor
inc
in
push
je
mov
outsb
inc
push
or
repnz
and
xor
mov
inc
adc
xor
pop
mulb
mov
pushf
xor
jne
mov
sbb
insb
das
jp
daa
stc
cli
cli
inc
imul
insb
int
les
or
sub
pop
xlat
push
mov
in
call
push
arpl
sbb
adc
ret
sbb
cmpl
ja
pop
inc
scas
ja
fwait
shll
mov
je
sti
sbb
mulb
inc
lods
push
and
aaa
xor
lret
dec
sbb
insb
sahf
xchg
sbb
dec
int
jge
inc
dec
jo
ljmp
rol
inc
mov
jge
cmp
out
loopne
pop
mov
sbb
clc
in
mov
addl
mov
or
jp
jle
mov
jbe
je
rcrl
loope
stc
call
repz
sub
inc
jge
lret
inc
push
test
add
sbb
push
dec
xchg
sub
jle
adcl
pop
push
pop
shrb
or
sbb
xchg
call
andl
push
test
stos
leave
pop
das
and
rolb
std
push
idivb
int
rcrb
les
iret
add
lahf
gs
clc
cli
pusha
cs
mov
bnd
jg
xchg
gs
mov
popa
jae
dec
aas
xor
mov
les
loop
push
jae
out
sbb
sbbl
loopne
lret
jne
test
and
push
xor
dec
cmp
pop
push
repz
jbe
mov
xor
pop
push
pop
fwait
int3
aam
pusha
add
mov
add
add
sbb
cltd
jb
in
out
pushw
movsb
mov
pushf
dec
inc
sub
inc
cmpsl
sub
pop
lea
loop
lret
popa
xchg
call
jne
push
add
jl
push
inc
pop
pop
mov
andb
mov
aaa
mov
xor
and
pop
lcall
shr
std
pop
outsl
loop
es
jnp
add
int
jbe
jns
gs
arpl
add
push
test
inc
jns
lret
inc
pop
add
icebp
aad
and
mov
jg
add
mov
cmpb
outsb
pop
add
xor
jno
dec
fnstsw
sub
xor
cmp
mov
xor
add
pop
je
and
aas
lahf
jns
mov
rolb
ds
lds
cmc
adc
ja
push
iret
sbb
out
lcall
out
rorl
or
push
rcl
shr
mov
adc
jg
mov
sbb
in
xchg
outsb
or
fcmovnu
mov
bound
mov
dec
lcall
inc
add
add
or
push
dec
pop
cmp
mov
and
andl
push
aam
pop
pop
lods
out
pop
and
ljmp
add
xchg
and
jb
cmpsb
dec
lods
xchg
sbb
push
es
lahf
lods
pop
cli
adc
out
pop
outsb
jmp
stos
shll
out
popf
xchg
mov
mov
mov
add
mov
pop
fsubr
js
les
push
dec
rdtsc
mov
jmp
hlt
ret
dec
popf
mov
imul
data16
pop
mov
aad
push
pop
add
in
xor
loope
rcl
xchg
leave
cld
mov
scas
dec
pushf
fs
mov
sbb
adc
push
mov
cmpsb
mov
pop
aad
adc
scas
vmaxss
loopne
data16
cwtl
test
andl
shll
int
shll
sub
xchg
dec
add
cmp
movswl
dec
pop
inc
mov
inc
scas
addr16
in
test
aas
mov
lds
lods
mov
inc
jbe
mov
out
xor
dec
gs
lods
cmpsb
jmp
mov
xor
hlt
mov
pop
idiv
or
inc
add
mov
shrb
sar
fists
movsl
in
ret
aad
shrb
int
sbb
test
or
int3
lcall
icebp
test
pop
icebp
outsl
jb
xchg
push
xchg
les
mov
add
or
adc
mov
push
js
nop
sti
insb
aam
xor
ss
pop
inc
enter
dec
arpl
stc
out
test
sbb
lret
out
xor
push
xchg
or
imul
lcall
pop
leave
push
push
pushf
mov
fcomi
or
jb
jae
int
jae
repz
cmpl
dec
push
cmp
cmp
or
inc
dec
sbb
and
adc
xor
sub
dec
fidivrl
inc
subl
subl
insl
inc
dec
push
pop
adc
mov
cwtl
lret
dec
xchg
sbb
push
mov
test
ret
cmp
in
rcrb
pop
mov
lret
mov
int3
loope
xchg
push
and
ret
cli
fstps
lock
sti
pop
inc
xchg
and
cwtl
negl
sbb
fisttpll
mul
mov
das
pop
dec
aas
mov
cmp
pop
adc
cmpsb
dec
popf
add
insl
jnp
cmpsb
pusha
mov
jne
into
jmp
jmp
int3
into
mov
fdivrp
loope
jecxz
dec
push
mov
dec
mov
push
addr16
jno
pop
pop
jbe
cmpsb
movsb
adc
lcall
adcl
push
arpl
mov
xlat
mov
lret
jp
sbb
shrl
xchg
jle
sub
or
sub
das
mov
sub
mov
shrb
xor
pop
aad
cmpsl
xor
sbb
fldl
jno
adc
out
xor
fistl
mov
push
push
xor
jns
lcall
enter
cmp
sbb
mov
dec
pop
dec
stc
lahf
idivb
fidivl
stos
add
rcll
cmp
xchg
mov
jecxz
push
inc
rorl
inc
push
lahf
int3
dec
dec
cmpsl
mov
mov
mov
cmp
mov
xor
mov
mov
xchg
push
ret
data16
imul
jmp
bound
scas
fdivr
aam
ret
sti
cmp
xor
and
fcmovbe
das
dec
push
mov
ljmp
lcall
jns
inc
dec
out
lods
mov
stos
or
or
sbb
out
xchg
mov
outsb
jge
fdivrl
sbb
push
pop
or
sbb
pop
sub
sbb
add
adc
push
gs
popf
xchg
xor
mov
pop
inc
adc
ja
ret
inc
int
lcall
lods
fstl
popf
rcrb
ja
popf
jle
push
cli
in
aaa
push
into
lret
mov
xor
shrl
shlb
aaa
jle
add
rorl
cmp
xor
inc
mov
pusha
js
int3
lret
xor
push
adc
daa
xchg
jg
sub
push
or
xor
hlt
inc
inc
fsubr
adc
dec
lds
mov
or
pop
inc
cltd
iret
es
sub
inc
push
push
aad
repz
sbb
jno
sbb
sub
ds
and
adc
inc
cmp
or
jae
dec
out
clc
das
add
ficompl
xor
pusha
inc
jbe
aam
popf
adc
xchg
cmp
add
cs
test
jmp
popf
sub
lret
jns
out
push
shlb
dec
jbe
or
sbb
pcmpeqw
mov
mov
dec
fld1
cwtl
jp
dec
loopne
xchg
nop
das
icebp
lods
fwait
data16
insb
test
clc
pop
jnp
daa
and
fwait
stos
movsl
mov
add
imul
aam
frstor
adc
mov
push
xchg
or
add
lret
into
jle
arpl
es
add
ljmp
xor
ds
test
sub
in
fadd
adc
ljmp
negl
lods
icebp
nop
mov
sub
lret
fistpl
stos
jns
dec
scas
lahf
inc
pop
or
out
xor
mov
cmpsb
cltd
movsb
call
test
int
dec
sub
out
inc
add
xlat
mov
mov
and
lods
adc
sar
aad
inc
add
mov
sti
mov
push
or
mov
inc
add
xor
mov
push
pop
xchg
cmpl
arpl
xlat
mov
fiadds
popfw
adc
jbe
jb
cmc
adc
adc
aas
iret
cmp
mov
pushf
push
aas
sbb
add
cwtl
and
jecxz
fildll
loope
ficoml
gs
notl
add
jle
ffree
fadds
jge
imul
dec
adc
std
out
repnz
leave
out
das
lret
cmp
cmp
sti
inc
mov
stc
inc
push
mov
cmp
jl
mov
pop
stc
stos
or
cmp
call
pop
test
test
xor
inc
aam
arpl
outsb
dec
dec
push
insl
adc
pop
fs
and
mov
gs
cmpsb
inc
lret
fsubrl
in
mov
dec
notl
add
mov
adc
jg
les
or
inc
fnstenv
je
mov
cwtl
xorb
cmp
mov
push
imul
frstor
rcrl
dec
in
jl
jbe
pop
push
stc
shll
cli
jmp
cltd
leave
push
fmull
lods
fcompl
pop
jno
xchg
stc
je
add
fld
jo
jl
jecxz
movl
add
sahf
leave
rcl
leave
mov
cmp
sbb
mov
rclb
mov
out
mov
jg
adcl
dec
test
ficoms
fwait
sub
jecxz
cmc
mov
and
popf
push
sub
pop
or
inc
aad
fistps
and
mov
mov
pop
add
or
into
ss
jl
and
jnp
lea
xchg
out
xor
testb
inc
out
dec
mov
push
sub
repnz
movsb
jle
pop
lods
sti
int3
pop
popf
popa
mov
out
lods
sub
rorl
shrb
loopne
sti
movsb
imul
xchg
push
je
icebp
aas
add
dec
add
pop
clc
pop
inc
repz
mov
fwait
cmpsl
divl
inc
xor
xchg
adc
sbb
lods
jno
xor
or
pop
add
loopne
rorl
jne
movsl
pop
fisubs
mov
mov
movsb
mov
fcomp
adc
in
xchg
test
jecxz
dec
fcmove
xchg
daa
cs
outsb
mov
mov
xchg
xchg
mov
inc
dec
add
dec
les
cs
scas
jae
pslld
scas
stos
loope
out
mov
or
not
ffreep
and
cld
enter
mov
icebp
daa
add
xlat
sbb
inc
mov
sub
int3
gs
and
loop
fdivrl
and
fistps
sbb
fbstp
mov
addl
fwait
rcll
pop
rcl
movsl
inc
jb
inc
repnz
stos
loopne
inc
lcall
mov
je
and
hlt
cld
dec
mov
mov
adc
or
cmp
sbb
and
repz
xor
push
and
sbb
int3
testl
iret
xchg
js
shl
xor
sub
lcall
mov
mov
idivb
or
incl
push
call
sti
dec
data16
add
add
lods
or
cmpsl
push
jle
cmp
xchg
arpl
pop
xor
mov
mov
fs
pop
test
aam
xor
mov
int
lea
movntps
daa
sub
jmp
and
fldt
mov
cmp
mov
and
sbb
mov
inc
enter
xchg
mov
mov
test
mov
repnz
stc
push
arpl
pop
dec
pop
test
or
scas
pop
or
mov
jno
in
stos
mov
cmp
les
movsb
xchg
lcall
lock
sbb
sbb
fstpl
aas
iret
aas
xchg
or
pop
ret
dec
cmp
adc
xchg
mov
in
cmc
fsub
adc
cmpsl
dec
aas
cmc
mov
adc
cmpsl
mov
xchg
dec
adc
cmpsb
sub
shrb
std
add
jb
out
sub
and
aam
mov
jg
in
out
arpl
push
lock
xor
inc
gs
sub
sbb
pop
inc
and
das
andl
or
pop
ret
push
jg
dec
out
push
repnz
xor
pushf
jae
xlat
adc
pop
rolb
ror
jg
hlt
dec
xor
imul
aad
test
pop
daa
pop
sbbl
jb
imul
je
in
sbb
shl
cli
jae
popa
dec
sbb
ds
add
xor
mov
mov
mov
data16
std
cltd
aad
sbb
imul
shl
inc
int
out
pusha
sbbl
or
push
jne
pop
imul
cltd
or
pandn
shll
fmull
test
gs
pop
daa
cmp
scas
jnp
pop
jle
push
or
mov
loop
fists
jp
scas
dec
cld
in
es
pop
enter
movl
inc
pop
aaa
lea
add
sti
inc
lds
aaa
or
inc
lods
jb
cld
std
imul
out
cmp
rcrl
cmp
pop
fstpl
rolb
sub
sbb
icebp
sub
dec
push
movhps
pushf
mov
push
stc
and
enter
js
inc
fidivrl
push
jnp
lods
sbbb
scas
jne
mov
mov
pop
jecxz
int3
lods
mov
popf
sub
jge
mov
test
ss
out
enter
mov
add
and
pop
sub
mov
push
inc
rcr
adc
pop
push
jnp
mov
jmp
mov
nop
xor
out
lock
or
pusha
jae
sbb
dec
and
rclb
cltd
dec
fcmove
push
and
mov
mov
loopne
dec
inc
pushf
mov
rcrl
andb
cld
or
ja
sar
cs
pusha
xor
jg
pusha
scas
xchg
fld
cli
xchg
xor
cmp
cmp
jae
lock
loopne
adc
lret
inc
jne
daa
js
or
push
mov
sahf
xchg
add
mov
lock
mov
cmp
jnp
dec
pop
shrb
inc
rolw
div
mov
jnp
lock
add
int3
inc
xor
nop
jae
jae
int3
adc
sahf
pop
sub
jl
fdivp
lret
popa
pop
jno
push
mov
or
xchg
pop
dec
mov
ja
jo
mov
rcrb
add
or
adc
lea
mov
pusha
and
push
jnp
push
xchg
enter
mov
xchg
pop
mov
sbb
mov
push
pushl
sarb
mov
mov
and
lret
mov
ljmp
std
fisttps
jmp
fdivrs
insb
sbb
test
repz
cmpsl
cmp
imul
in
mov
push
dec
and
jmp
fidivs
mov
rcll
ret
sahf
mov
sbb
nop
js
pop
xor
jno
sbb
test
jecxz
call
repz
and
addl
and
stos
sbb
inc
and
sub
in
bound
aam
or
mov
lods
imul
mov
push
lods
pusha
mov
test
out
ss
shlb
dec
adc
rol
lea
dec
or
mov
gs
jge
pop
jb
ljmp
cwtl
add
ret
mov
in
add
inc
sbb
ret
xor
or
and
lret
mov
lret
data16
pop
sahf
push
andl
outsl
jns
dec
and
outsl
dec
xor
sub
pop
push
fstpl
pusha
pushf
ja
xor
stc
jb
mov
lods
jp
fstp
scas
pop
outsl
xchg
jne
dec
lahf
cmp
popa
pop
pop
outsl
ja
mov
dec
add
mov
outsl
mov
push
and
sbb
mov
repnz
sub
pusha
jl
cs
and
inc
push
sbb
xor
push
inc
xchg
inc
inc
sbb
sbb
xor
testb
push
push
mov
fwait
jae
xchg
sbb
mov
sub
mov
outsl
pusha
jnp
cmpsb
aam
pop
sub
mov
dec
inc
ror
mov
movsl
int
push
mov
fwait
test
into
or
cli
mov
jns
push
stos
pushf
icebp
xchg
push
jno
mov
sbb
push
xchg
add
xor
cmp
aaa
sbb
movsb
fisttps
or
pop
mov
add
pop
sbb
std
mov
out
in
popa
xor
xchg
sub
pop
leave
mov
test
xchg
adc
or
jne
mov
cwtl
rorl
adc
or
push
mov
and
lock
lds
mov
imul
mov
popf
sbbb
mov
in
fisubs
mov
cmp
ja
call
xchg
mov
cmpsb
adc
inc
enter
sbb
push
pushf
into
stos
loope
adc
enter
adc
imul
sbb
out
rcl
ds
sub
dec
fisubrs
cmp
nop
pop
leave
std
out
add
xor
loope
sbb
mov
adc
int3
pop
imul
loope
bnd
call
and
sub
dec
mov
fsubrs
dec
cmc
jp
mov
jnp
faddl
mov
add
decl
jecxz
or
pop
outsb
mov
sbb
out
in
inc
lahf
sub
jbe
add
xlat
push
cltd
xchg
je
aas
push
jmp
stos
adc
test
dec
dec
add
dec
sub
jbe
lahf
mov
cmp
xor
push
lret
jecxz
xchg
in
or
pop
sub
or
xor
mov
xorb
push
dec
call
cmp
xorl
pop
sub
jge
sbb
roll
mov
out
out
lret
and
inc
scas
ss
sub
mov
orl
pusha
pop
in
in
jg
aas
xchg
jns
fs
jmp
int
aaa
addr16
xor
sub
fwait
test
cwtl
push
mov
cmpsb
mov
jp
nop
stos
insl
sbb
rolb
add
movsb
leave
mov
fiaddl
mov
inc
arpl
imul
xor
mov
fnstsw
cmp
das
mov
call
sahf
jno
add
jmp
and
test
dec
pop
fwait
cmp
rcll
inc
xor
repz
adc
mov
repnz
lret
and
dec
gs
fcompl
mov
mov
scas
pop
inc
jecxz
out
xchg
xor
and
push
fistpl
cmc
jne
sti
mov
inc
fwait
and
and
add
aam
aad
pushf
test
ret
cwtl
aad
lahf
mov
test
lock
sarl
push
outsb
sub
xchg
push
or
push
addr16
jmp
fisttpl
mov
mov
cmp
arpl
data16
pop
adc
cmp
lods
cwtl
adc
cmp
inc
or
lahf
stos
test
outsl
mov
ss
aad
bound
mov
aaa
dec
pop
mov
xchg
hlt
add
push
adc
sub
mov
jae
jecxz
les
addb
inc
int
xchg
pop
cmc
nop
jmp
and
je
jecxz
mov
dec
cmp
push
or
lcall
fwait
dec
mov
in
nop
mov
lret
dec
adc
jmp
xchg
pop
lods
pop
push
lahf
adc
js
or
adc
jae
jge
lds
lock
sub
xchg
mov
and
or
mov
sbb
pop
test
ds
orl
scas
dec
in
and
in
jb
push
test
insl
sbb
loope
adc
lock
jb
leave
lods
sub
dec
lret
push
insl
fildll
push
xor
add
pop
notb
insl
mov
jbe
cmp
loopne
out
xchg
or
mov
pop
pop
or
int
jg
add
or
inc
pop
jns
or
cld
imul
scas
mov
sbb
fidivrl
xchg
push
cmc
add
outsl
out
mov
int
push
imulb
xor
in
sar
outsb
mov
sbb
call
fisubl
cmpsb
stos
ljmp
rcrl
mov
or
pop
lea
jl
sbb
and
addr16
loope
and
data16
out
das
imul
jle
lods
ror
sbb
out
int
jecxz
cmp
jge
test
in
xchg
and
nop
cmpl
xchg
push
in
xchg
jg
and
add
cli
or
orb
ljmp
sub
icebp
xor
lcall
mov
pushf
push
test
lods
jo
mov
in
mov
cli
mov
jnp
inc
les
mov
push
push
pop
mov
bound
and
call
aam
jl
add
adc
inc
ret
add
and
push
iret
mov
hlt
aad
insb
cmpsl
lret
xor
in
imul
push
jno
xor
push
dec
mov
jmp
ss
mov
lcall
arpl
data16
inc
outsl
clc
test
outsb
nop
sahf
popf
out
movsl
jecxz
xlat
sbb
push
jg
or
jo
in
or
test
xor
imul
xchg
rol
inc
push
add
dec
mov
jo
mov
cmpb
xchg
pop
pop
repnz
leave
mov
xchg
jmp
xchg
mov
mov
mov
ss
aaa
sub
sti
in
and
stos
out
icebp
inc
jo
rclb
shll
cmp
aas
out
loope
fistl
je
inc
incl
repz
cmp
cmp
out
mov
or
out
jb
and
inc
mov
xchg
insl
and
mov
or
movsl
jae
aas
lds
or
push
or
dec
sti
repnz
xor
fsubrl
mov
pop
outsl
and
mov
lret
leave
out
ja
jmp
movsl
sub
lock
mov
andb
ds
mov
and
ss
mov
dec
mov
les
into
aas
xchg
out
ja
jp
mov
or
out
fsts
movsl
rolb
push
mov
jo
dec
mov
js
cmp
mov
clc
or
xor
shll
int
cmpsl
data16
mov
rcl
mov
inc
lcall
adc
movsb
adc
icebp
push
inc
ja
outsb
mov
xchg
sub
mov
rcrb
sbb
lcall
mov
out
pop
int3
pop
cmp
sbb
dec
pop
push
cmp
and
jae
push
adc
loopne
inc
mov
aam
mov
pop
les
jecxz
and
inc
jle
mov
adc
js
sub
test
mov
inc
insl
dec
rorl
in
sbb
addr16
jne
hlt
popf
movsl
cmp
jne
jg
push
xlat
push
pop
adc
adc
mov
adc
sbb
scas
push
mov
jbe
lahf
add
jp
dec
cvtpi2ps
push
ret
call
ret
xchg
das
adc
movsbl
jae
cs
out
pop
aaa
xor
lret
rolb
out
es
or
jge
insb
pop
add
adc
push
ret
sbb
inc
popa
jmp
fwait
ljmp
jle
mov
in
insl
xlat
sbb
cmp
cmp
xlat
stos
sbb
in
cltd
std
hlt
clc
nop
pop
lock
lods
xchg
jns
mov
dec
es
daa
add
aad
or
sete
mov
jns
scas
loope
lock
addr16
leave
in
adc
rcrb
addb
gs
or
into
fbstp
je
ja
lock
movsl
hlt
dec
movsb
inc
add
aaa
je
push
or
jge
inc
xlat
and
sbbb
push
dec
mov
dec
push
pop
add
mov
imul
jns
cmp
mov
sub
ljmp
mov
push
fs
jle
mov
dec
cli
push
pop
enter
cmp
mov
or
lret
and
stos
inc
inc
pop
sub
jnp
mov
popa
or
lea
dec
clc
inc
push
nop
fmul
adc
push
pop
push
mov
jecxz
push
loop
cmp
pop
daa
ret
cmpsl
cli
ds
test
inc
out
mov
lock
inc
outsl
leave
push
aam
popa
inc
xor
sub
xlat
fcoms
aam
dec
call
fsts
pop
dec
stos
mov
cmc
data16
sbb
jb
imul
negb
test
and
imul
lret
push
test
add
and
dec
imul
adc
ljmp
rcrb
adc
lret
push
icebp
pop
lods
mov
iret
pushf
gs
xchg
popa
adc
mov
cld
mov
jle
adc
sarl
cmpsb
in
xchg
lods
scas
loopne
loop
xor
sahf
cld
mov
jge
xchg
sub
fucom
mov
or
cmp
getsec
in
cmpb
popa
nop
loope
scas
mov
es
add
cli
xlat
and
loopne
lret
mov
in
movsl
pop
inc
punpckldq
arpl
jge
test
mov
lahf
push
xchg
fistpl
push
icebp
in
add
bound
loope
test
sbb
mov
nop
cmp
das
inc
mov
pop
cmp
mov
imul
mov
imull
movhps
inc
leave
mov
aam
mov
mov
fstl
stc
dec
sub
dec
cwtl
popa
sbb
mov
std
fs
das
xsaves
lock
xchg
dec
mov
add
jmp
mov
sub
outsb
inc
cld
aaa
and
sbb
je
inc
mov
inc
lret
dec
pop
psrld
data16
and
push
push
pop
push
clc
sub
repnz
mov
jnp
lock
into
aas
leave
push
mov
sub
js
mov
push
cmp
cli
jecxz
out
outsl
clc
call
fcoms
imul
xor
outsb
adc
mov
sbb
fdivrs
pusha
mov
movsb
jae
and
pop
iret
or
mov
sarb
cmp
dec
jae
mov
xchg
cmpps
pop
sahf
or
cmp
ds
sarl
dec
gs
inc
pop
pop
cmp
push
nop
jnp
outsl
iret
cwtl
push
xor
test
xchg
imul
cmp
jmp
test
jmp
dec
movq
nop
pop
test
les
mov
pop
scas
pop
loopne
loope
adc
test
lods
cs
mov
xchg
add
xor
das
int
jnp
loope
cwtl
sbb
lcall
stc
add
aad
loop
frstor
cmp
mov
and
jge
and
shlb
mov
sub
or
lock
sbb
jne
out
jle
inc
mov
push
or
jne
popa
inc
ljmp
jno
subb
cmpsb
jle
ret
loope
cmpl
add
xor
and
test
adc
mov
stos
or
rcll
push
xchg
in
fisubrs
or
aaa
xchg
andb
xor
gs
gs
sbb
mov
cmpsb
testl
jno
and
mov
inc
ret
mov
stos
loop
push
stos
fistpl
inc
aad
into
dec
cltd
aaa
sahf
jnp
dec
js
imul
cli
ret
xor
sbb
shlb
fldt
test
push
or
sti
lea
pop
ret
mov
dec
mov
dec
call
insl
push
aas
in
jp
jecxz
pop
push
xchg
mov
sub
xor
scas
decl
fisubrs
push
dec
pusha
jbe
daa
mov
add
mov
and
out
dec
jmp
add
dec
fists
mov
push
cmp
subb
je
out
psrld
sub
sbb
ljmp
sti
xchg
popf
mov
sahf
jbe
lock
ljmp
push
jns
lret
pop
aaa
roll
dec
nop
dec
insb
jno
dec
mov
aas
adc
add
sub
adc
in
aas
rcr
int
and
pop
sub
jle
or
xchg
sbbl
rorl
ret
popf
cmpsb
pop
lcall
out
rorb
add
inc
adc
int
cmpsl
push
mov
mov
adc
imul
std
mov
mov
ror
xchg
aaa
inc
ret
xor
pop
das
mov
push
loopne
push
je
in
add
lahf
fiaddl
subb
stos
inc
cmp
adc
pop
dec
mov
aam
or
pop
mov
and
adc
les
jmp
fcmovb
sbb
jb
push
int
add
popa
movsl
call
jne
movsb
fistpll
subb
ljmp
test
dec
inc
cmp
push
clc
sarl
mov
js
fucomp
xor
inc
cwtl
ss
xor
pop
jge
out
sarl
in
mov
shlb
rclb
xor
jae
arpl
lock
inc
adc
shrb
mov
and
push
movb
je
jmp
xchg
jl
sbb
test
pop
lret
jge
sub
in
mov
and
cltd
sar
out
leave
int3
out
dec
mov
pop
mov
mov
fists
scas
jne
insl
jnp
ret
push
movsb
jns
roll
dec
inc
inc
daa
out
mov
dec
mov
movl
lods
pop
inc
inc
add
imulb
das
std
ljmp
test
es
push
pop
imul
and
mov
jge
xchg
xchg
xchg
das
mov
or
pop
dec
cmp
fisttpl
mov
jne
cmp
lret
rorb
mov
and
cltd
shl
aad
cld
cltd
frstor
ror
out
jae
fwait
aaa
mov
jmp
loop
stc
sbb
dec
loope
rcrb
fisubs
js
in
inc
cli
gs
inc
jg
rorl
sbb
rclb
pop
jmp
inc
mov
insl
push
jg
add
in
ljmp
inc
jecxz
es
xor
mov
dec
xor
sbb
js
push
jmp
lahf
fnsave
mov
jno
es
loop
jbe
sub
or
fsubs
xor
cmpsl
aaa
jl
jecxz
push
push
mov
mov
enter
pop
pop
out
iret
mov
pusha
mov
shlb
mov
call
pushf
sbb
sti
push
mov
xchg
cwtl
cli
stos
jp
and
aam
ja
test
mov
lahf
je
mov
dec
inc
pop
ljmp
mov
pushf
sbb
pop
icebp
jg
out
inc
fdivs
mov
movsl
xchg
jl
cmp
xchg
loopne
sbb
paddq
pop
mov
jb
cmpsl
jle
ljmp
aad
sti
jne
clc
push
jne
sti
push
add
mov
pop
jecxz
sbb
xchg
lahf
push
push
sahf
lods
les
clc
rcrb
out
adc
mov
jns
test
push
punpckhwd
adc
xor
in
pop
lock
pop
pushf
outsb
sub
dec
dec
dec
outsb
mov
stos
mov
mov
mov
out
mov
in
ret
pop
cs
push
xor
push
imul
cmpsl
mov
hlt
out
call
push
cmp
pop
aas
rcl
sub
ja
jo
lcall
call
add
push
xchg
or
aad
push
outsb
dec
lods
leave
mov
frstor
mov
xchg
jae
and
xchg
hlt
cli
fdivp
dec
lret
int
mov
pushf
shlb
jno
sub
jns
cmpsl
movsl
sbb
fdivrl
cmp
pop
mov
imul
jmp
repnz
call
and
add
or
cltd
add
xchg
push
lcall
mov
push
jmp
mov
in
xchg
lea
movsl
popa
and
mov
lahf
iret
and
push
jg
and
ds
jae
outsb
mov
mov
insl
jmp
sbb
ss
loope
adcb
dec
mov
rcr
stc
pop
and
dec
sbb
mov
inc
push
arpl
mov
sub
xorb
pop
aaa
xor
mov
loope
xchg
shll
loope
scas
jge
dec
fiadds
push
fmull
inc
stc
mov
scas
xchg
lret
xor
jae
hlt
cld
xchg
dec
mov
arpl
push
bound
and
sbb
incl
add
push
mov
aaa
pop
sub
jg
pop
dec
test
sbb
fs
pop
mov
pushf
test
sub
sub
les
mov
arpl
cmp
lcall
dec
push
mov
aad
sbb
mov
inc
xor
jo
movsl
rcrb
jle
xlat
push
fnstcw
cli
jge
aas
jno
lods
in
int3
mov
popa
cmpsl
mov
out
or
in
jle
cmpsb
adc
mov
adc
pop
shlb
popf
adc
addr16
lock
pop
dec
mov
dec
jg
lret
jo
mov
inc
fs
cmp
inc
or
clc
popf
pop
dec
inc
movsl
jo
mov
adc
fwait
fwait
in
xchg
inc
jmp
dec
push
cmc
or
clc
adc
cli
dec
xchg
jle
and
sbb
push
sbb
mov
and
push
shll
ljmp
sbb
mov
push
inc
mulb
cmp
out
outsl
jb
loope
sbb
mov
rorl
ja
enter
add
inc
mov
daa
cmpl
cwtl
sarl
imull
push
and
pop
pushf
jnp
xor
test
ret
cmpsb
and
xchg
and
sbb
push
popf
and
sbb
inc
push
or
repz
divl
test
fbstp
fisttpll
into
sbb
mov
adc
enter
push
lret
mov
ucomiss
insb
jno
hlt
in
pop
imul
dec
push
xchg
std
stos
movsb
cmc
pop
jecxz,pn
out
loope
jo
das
sub
push
mov
stc
inc
sub
cmp
jmp
jno
repz
dec
cmp
mov
jecxz
mov
je
arpl
pop
pop
cwtl
push
push
ja
jns
js
push
jecxz
out
out
je
pop
inc
xchg
inc
mov
jo
sahf
sahf
push
in
stos
cmp
add
cwtl
pop
jae
fnstcw
adc
dec
cmp
gs
xchg
jmp
jo
fsubs
cmp
out
jno
lret
cwtl
jl
cltd
stc
fsqrt
xchg
xorb
scas
sti
pop
movsb
adc
out
mov
ficoms
ss
popf
es
jbe
jp
sarb
cmpb
sub
adc
mov
add
mov
in
pusha
ss
pop
subl
leave
add
lods
nop
cmp
loopne
adc
lock
insl
loop
fadds
dec
scas
xchg
sub
ret
adc
push
mov
jbe
cmp
fyl2x
add
aaa
ret
das
sub
bound
sbb
fisttpll
lcall
push
cli
subb
and
push
cmpsb
test
test
mull
add
jp
aam
inc
push
cmpsl
mov
fidivs
pop
or
fisubs
pop
add
inc
jp
rcl
cmp
push
inc
lahf
sub
jno
inc
ds
mov
popa
je
mov
ret
xlat
mov
fnstenv
icebp
fiaddl
mov
fcomps
xchg
adc
cmpl
and
mov
pop
sub
int3
fsubrs
nop
test
and
cmc
inc
mov
lahf
and
cmp
stos
mov
jae
ret
ljmp
jecxz
aad
xor
cmp
mov
pop
or
jl
test
jge
lret
and
ret
mov
xor
or
cltd
adc
pop
ret
pop
inc
lock
and
jl
outsb
inc
shrl
pop
xchg
jne
cmp
addb
sbb
cmp
arpl
sarl
movsl
jae
lahf
add
imull
cwtl
outsl
jns
jns
cmpsb
mov
adc
pop
mov
push
sub
mov
in
add
out
push
add
dec
lahf
pop
loop
mov
add
pop
lds
lea
shrb
and
stos
outsb
fnstenv
cmp
sub
push
lahf
mov
cmp
dec
addb
mov
push
jge
out
fnstsw
inc
and
jno
or
in
fdivr
mov
lret
repnz
and
nop
out
push
shlb
xchg
es
cmp
lcall
lock
ret
push
cmp
int
out
adc
pop
idivl
fsubrs
fwait
pop
imul
mov
xchg
jp
and
aad
mov
inc
and
inc
aam
or
push
pop
push
jne
mov
pop
dec
fstps
or
ljmp
fs
fwait
test
pop
xchg
lods
adc
mov
inc
sti
add
xor
hlt
out
icebp
push
cmp
jne
loop
rcl
sarb
movsb
add
cmp
adcb
sbb
cmc
rorb
jnp
jg
push
pop
mov
call
jnp
xor
gs
mov
fisubrl
mov
iret
xchg
cmc
mov
xor
call
pop
inc
call
fidivrs
mov
jbe
adc
lahf
jae
sub
mov
movsl
jle
repz
sbb
dec
mov
sti
or
add
sarl
cli
lret
cmp
daa
sti
cmp
cmpb
movsl
mov
mov
dec
out
mov
arpl
adc
fnsave
movsb
adc
sbb
aad
incb
rclb
or
xor
jecxz
loopne
inc
addb
inc
xor
cmpsl
or
cmc
sbb
push
xor
iret
shr
inc
sub
pop
out
dec
add
adc
mov
and
loop
shrb
out
xor
xor
insb
lods
lret
lea
jle
sbb
gs
jbe
ud0
je
idivb
int3
test
pop
xchg
and
popa
mov
adc
cmp
rcl
add
icebp
jmp
inc
dec
xor
push
jg
mov
jp
xlat
and
push
stc
fadds
movsb
rcl
mov
push
push
xor
fwait
fwait
cmp
nop
mov
cmpsl
loopne
xchg
in
xor
inc
dec
test
movsb
cmp
jbe
orl
inc
imul
outsl
imul
pop
add
movsl
rorl
xchg
pop
pavgb
decb
test
inc
bound
pusha
and
push
lds
nop
cmp
add
stc
mov
inc
mov
mov
scas
bound
dec
and
in
pop
rcrb
negl
call
mov
push
rcl
and
or
shll
adc
inc
dec
pop
push
mov
and
mov
fs
cli
test
jne
fcompl
mov
jg
loop
sahf
push
mov
stc
sbb
sbb
popa
xchg
lods
testb
cmpsl
cmc
mov
xor
mov
push
push
in
nop
or
dec
push
pop
in
inc
js
jle
jbe
jae
inc
xchg
xor
movsl
idivl
mov
add
fdivl
adc
jo
scas
push
push
xchg
cli
dec
inc
stos
cmp
dec
adc
sarb
andl
lock
or
jge
aam
fldt
les
gs
xorb
adc
imul
xchg
je
popf
cmp
test
adc
vmread
inc
ljmp
pop
xor
xor
mov
sahf
mov
loopne
sub
leave
dec
dec
test
rcrl
add
shll
ss
sub
icebp
sub
mov
dec
cmp
fcmovb
clc
cltd
popf
in
scas
cmp
sub
mov
lahf
in
dec
mov
outsb
mov
cwtl
jecxz
fstpl
xor
pop
or
xlat
mov
mov
data16
and
cmc
jle
mov
mov
sti
pop
dec
push
dec
jg
mov
push
popf
mov
repnz
imul
test
adc
repnz
lea
ss
cmp
adc
jge
addr16
int
dec
movlps
sbb
leave
xlat
ds
out
js,pn
adc
mov
jecxz
in
out
jbe
mov
hlt
cmc
mov
cmpsl
mov
out
shrb
cs
mov
mov
xchg
cmp
dec
mov
ss
outsb
jnp
pop
xchg
jo
lods
cmp
jmp
icebp
repz
xor
jo
inc
das
or
push
rcrl
sahf
mov
mov
cltd
in
pop
xchg
sub
jmp
insb
movsl
adc
mov
repz
fidivs
ss
mov
stos
cltd
jge
and
cmpsl
ja
cmpsl
xchg
pop
cmp
js
stos
push
shl
das
push
stos
adc
imul
sbb
mov
cmpsl
insb
jo
cmp
mov
jbe
and
inc
push
pop
ja
xor
negl
xchg
lcall
dec
cltd
out
mov
mov
repz
adc
addb
sbb
push
movl
push
pop
lcall
and
jecxz
or
es
pop
addr16
js
test
xchg
fsubrp
scas
jle
pop
push
mov
pop
pushf
fwait
cmp
xchg
or
iret
sub
sub
outsb
xchg
daa
jge
xchg
gs
je
test
js
stc
sub
in
jne
stos
imul
cwtl
das
ret
in
aas
sbb
cmpl
je
jl
test
push
dec
cld
xor
loope
sbb
xchg
adc
push
test
jle
mov
popa
inc
das
shll
dec
cwtl
push
cld
mov
jecxz
jp
cmp
push
push
dec
xor
mov
xor
iret
mov
xchg
dec
mov
lods
cli
out
pop
icebp
or
aaa
inc
xchg
push
test
adc
mov
xchg
bound
pop
fs
mov
imul
repz
cvtps2pi
out
repz
cmpsl
movsl
add
pop
push
bound
xchg
dec
inc
xorl
mov
sub
dec
mov
and
or
lea
rdpmc
insl
ret
testl
or
add
xorb
lods
lods
int3
lret
and
shl
jne
and
sahf
mov
cld
popl
repnz
dec
jno
push
stc
jmp
xor
dec
scas
pop
leave
in
into
sub
mov
js
jo
xchg
fs
js
jl
ljmp
stc
pop
stc
pop
sub
into
addr16
loop
std
ficomps
sti
and
test
cmp
inc
cmp
cld
mov
ja
das
pop
test
mov
adc
sti
rorl
out
cmpb
movsb
pop
sub
es
mov
mov
pop
adc
jae
or
js
out
pop
push
adc
mov
imul
sbb
and
xor
pop
xchg
stos
adc
adc
bound
jns
pop
jle
lcall
pop
sub
fdivl
inc
mov
out
lret
sub
inc
sub
mov
mov
div
mov
cmp
popa
add
lret
ds
sbb
or
es
pusha
xor
cmp
mov
lods
xchg
pop
scas
mov
stc
and
inc
movsb
sub
fadds
lock
push
pusha
jns
shll
ret
or
test
lret
mull
repnz
xchg
jae
cmp
dec
mov
stos
ficoms
jmp
pop
popf
imull
mov
inc
cmp
shlb
les
loopne
je
mov
mov
imul
push
inc
inc
xorb
lahf
call
and
xchg
inc
imul
stc
stos
add
dec
inc
push
test
sbb
and
bnd
cmpsb
and
outsl
inc
xchg
sarb
mov
fcoms
clc
mov
jae
out
mov
sar
push
adc
jg
cmp
mov
data16
xchg
lcall
jl
xchg
js
push
mov
and
or
ret
sub
ret
sub
ja
push
adc
pop
jno
add
and
inc
enter
jge
dec
mov
orb
fiadds
jle
aad
lods
leave
lods
fs
add
adc
es
xor
mov
scas
mov
inc
inc
xor
jecxz
mov
lods
sahf
das
cmp
lahf
jne
push
imul
cmp
outsb
or
jp
pop
dec
xor
iret
test
add
xchg
sahf
data16
insl
mov
and
adc
jb
xchg
xchg
push
adc
and
repnz
mull
rol
sbb
ret
pop
push
inc
sti
jo
lock
cmp
insl
sbb
testb
and
cmp
mov
cmc
xchg
add
lds
sub
xor
subb
inc
push
aam
adc
push
rcll
inc
fbld
jb
loopne
add
inc
push
inc
push
stc
xchg
fmuls
jo
and
add
ss
icebp
rclb
xor
xchg
cli
push
add
sub
repnz
and
stc
insl
mov
into
mov
js
mov
enter
push
push
push
fidivl
fstpt
push
sub
pop
add
data16
outsl
dec
jecxz
fildll
out
pop
add
fwait
sub
popa
xor
sbb
sarb
adc
test
clc
xchg
fimull
hlt
stos
push
xor
jmp
test
pop
lds
pop
test
in
or
fldcw
lock
fmull
negb
or
in
les
dec
shrl
sahf
jmp
sahf
xchg
cmp
ss
loopne
sbb
adc
imull
cmpsl
pop
jge,pt
add
imul
cwtl
imulb
aam
inc
test
stc
ljmp
lret
adc
insl
daa
mov
scas
pusha
adc
sub
dec
ds
mov
xchg
in
pop
aaa
dec
cmp
push
mov
mov
xorb
and
pop
es
outsl
in
pop
dec
jecxz
aam
outsb
xchg
data16
insb
fldl
jnp
outsl
lret
xor
pop
pop
roll
push
pop
fisubrl
jecxz
sbb
inc
ja
enter
adc
mov
sub
ljmp
loop
pop
inc
mov
xor
adc
add
cmpl
lds
push
mov
jmp
clc
test
imul
int3
sbb
pop
cmp
dec
iret
fs
into
faddp
sbb
ss
popf
xchg
inc
test
mov
testb
das
lahf
rorl
xchg
fcmovnbe
and
and
stos
loope
ret
push
cltd
sub
loope
leave
mov
pop
mov
outsb
sbb
mov
cmp
pusha
pop
sbb
lods
xor
inc
sbb
push
movsb
aad
out
jns
mov
std
lock
das
fnstsw
lret
int
leave
xor
out
add
mov
add
and
jns
pop
dec
cltd
jmp
xor
daa
push
or
push
iret
mov
out
int3
sbb
adc
ss
subb
das
and
scas
mov
sbb
jge
sub
fldt
mov
pop
mov
cld
stos
das
inc
or
aaa
jle
scas
jge
mov
jmp
sub
lods
adc
out
pop
pusha
push
jno
cli
call
jl
or
ds
mov
xchg
or
mov
fst
pop
lcall
mov
push
and
cmp
jb
stc
test
ret
and
lahf
xchg
aaa
xchg
das
insb
xor
dec
inc
cmp
aad
mov
cs
rcrl
mov
add
daa
and
divb
xlat
and
jl
data16
jl
jle
jno
xchg
js
shll
les
insb
call
nop
pop
sub
adc
fisttps
and
inc
push
iret
imul
inc
mov
push
ljmp
mov
sti
jmp
push
bound
pop
stos
sub
inc
xor
adc
push
incl
ss
dec
outsl
xchg
cmc
outsl
iret
add
cs
mov
sub
popl
push
mov
sbb
push
cmp
lret
adc
sub
xchg
stos
ja
sub
int
mov
push
mov
inc
mov
jo
lcall
sbb
ret
push
ret
pop
cld
adc
icebp
loopne
mov
in
imul
daa
xor
and
mov
bound
sub
push
push
pop
pop
xchg
int
sarl
stc
fildl
inc
stos
int3
mov
sub
mov
adc
pop
mov
in
cmpsl
dec
lret
mov
cmpsb
mov
outsl
test
xor
ret
mov
fs
push
dec
push
and
fcmovbe
or
gs
sub
adc
pop
test
push
sbb
aaa
or
pop
mov
lret
add
jp
jmp
leave
pop
xchg
ret
insb
adc
stos
push
adc
and
pop
pop
hlt
clc
add
mov
cmp
mov
and
push
out
cmc
test
and
add
leave
fiadds
fsubrl
mov
xchg
cmp
mov
imul
mov
fs
pusha
or
cs
stos
mov
and
mov
pusha
in
xor
add
int
cmc
iret
sub
mov
sar
movsl
or
pop
mov
vmovdqa
push
and
call
negb
sub
jle
cmp
mov
and
das
out
dec
pop
dec
mov
jmp
aad
mov
les
and
push
add
fdivrs
or
add
or
and
add
fcomps
inc
adc
in
pop
test
xor
in
pop
sbb
into
xchg
test
aam
mov
xor
pop
popa
jns
leave
pop
hlt
add
xchg
xchg
pop
loop
in
cmp
xor
mov
xchg
and
loop
subb
icebp
stos
leave
and
mov
push
dec
sub
movsb
fmul
insl
mov
mov
sbb
ret
cmpsl
add
ret
adc
rorb
cmp
dec
or
cmpsl
jl
outsl
xor
xchg
jae
jecxz
pop
les
push
in
mov
sarl
add
mov
cvtps2pi
loopne
xchg
das
push
adc
jge
and
outsb
push
enter
sub
jno
or
cmp
rolb
xchg
mov
mov
aad
push
and
enter
inc
push
xchg
loope
test
add
and
nop
adc
add
stos
rcrb
iret
sbb
mov
mov
sbbl
lret
aad
repnz
ss
xlat
sbb
scas
rcll
and
mov
fildll
in
mov
stc
inc
popf
fsubrs
mov
xchg
std
xchg
mov
pop
ror
pop
inc
pusha
inc
push
add
std
test
or
test
lret
test
fcoms
pop
test
bound
insl
inc
fdivp
jne
ret
ror
cmp
cmpsl
mov
sub
pop
sub
jl
test
pop
sub
fists
pusha
out
cmc
int
mov
shll
jg
rolb
addr16
and
nop
pop
mov
mov
rorb
inc
pushf
scas
xchg
popa
ljmp
jnp
imul
dec
and
in
lods
push
jbe
xor
scas
inc
int3
pop
or
jmp
xchg
dec
mov
call
adc
xlat
inc
pushf
aam
or
pop
outsb
mov
mov
je
or
sbb
nop
xor
gs
cli
movsl
in
inc
out
add
jecxz
sbb
cltd
dec
loopne
nop
es
cltd
sub
icebp
adc
fisttpll
movsl
arpl
mov
rcrl
lods
mov
dec
dec
push
dec
cmp
cli
sub
mov
jno
testb
mov
cmp
cmp
enter
mov
push
fcmovnbe
jns
faddl
mov
into
mov
bound
dec
sahf
fidivs
and
jmp
enter
stos
push
sub
push
loopne
adc
stos
dec
movsb
and
repz
fidivrl
enter
loopne
pop
clc
dec
jns
popf
jnp
inc
pop
lods
scas
or
jle
dec
bound
cli
mov
push
jecxz
adc
sub
testl
sti
out
filds
loop
inc
in
mov
dec
std
sub
hlt
xchg
ds
idivl
push
mov
dec
or
push
sbb
xchg
xlat
test
mov
scas
je
or
cmp
das
jmp
push
ss
inc
int
movsb
jp
cmp
mov
nop
sbb
loope
lock
mov
loopne
jmp
ret
pop
notb
and
xlat
sbb
jle
loope
inc
je
imul
out
imulb
push
sub
jnp
lods
je
xchg
pop
dec
push
outsb
pop
mov
arpl
push
inc
xor
stos
in
rcl
inc
mov
push
stos
add
fdiv
test
inc
outsl
pop
push
push
mov
push
xchg
inc
inc
or
rcrb
mov
push
call
pop
jne
and
add
cmpsl
sbb
sbb
jo
cs
xchg
iret
jb
pop
sbb
repz
jp
int3
scas
bound
push
sbb
and
fimull
hlt
or
push
shlb
push
or
inc
adc
mov
sahf
adcl
inc
loopne
call
jecxz
xchg
stc
xchg
mov
in
sub
lds
int3
in
test
pushf
mov
pusha
hlt
sub
dec
push
push
into
repnz
outsl
mov
add
into
mov
dec
sahf
fsubrs
push
sarl
or
cwtl
out
stos
clc
xor
add
mov
idivb
rcl
test
cmpsl
sbb
int
lahf
push
pop
testb
mov
jnp
add
xor
mov
and
cmp
nop
mov
movsl
scas
fbld
cmpsb
shl
xchg
enter
loopne
pop
lahf
int3
pop
or
xchg
or
jge
out
popa
mov
jge
xchg
and
repnz
insl
pop
sbb
push
fisubl
jp
dec
xlat
int
imul
pop
add
test
call
push
mov
iret
cmp
test
jmp
inc
cld
inc
sarl
push
arpl
test
pusha
or
and
add
push
inc
ret
pusha
sahf
lds
inc
sbbl
cmpb
jp
or
bound
mov
lret
cwtl
hlt
add
fwait
xchg
gs
sar
jb
jle
lods
fincstp
sub
pusha
pop
cmp
or
xlat
add
aam
inc
cs
negb
loope
xchg
shr
xchg
fidivl
cmpsl
inc
mull
pop
addb
pop
rorb
mov
ret
fiaddl
xchg
jo
mov
mov
xchg
xchg
int3
xor
mov
dec
orb
sbb
mov
xchg
push
sbb
mov
dec
xchg
mov
cmp
sbb
popa
dec
addr16
cmp
and
cmc
imull
in
and
cwtl
lock
pop
sbb
xchg
pop
mov
xor
stos
sub
sub
aas
cmc
sti
cs
fs
add
jno
out
mov
out
xor
adc
jae
inc
insl
or
adc
xchg
jae,pn
sbb
sbb
mov
ret
out
mov
in
adc
mov
mov
out
xor
jp
loopne
shrl
dec
outsb
js
xchg
inc
cmp
dec
sbb
push
fstpt
jb
inc
aas
testb
aas
sbb
fistps
and
inc
in
loopne
add
pop
mov
outsl
mov
sti
pop
or
cld
jp
fldenv
inc
orb
stc
cmc
cmp
sbb
jle
mov
jg
pushf
inc
mov
nop
push
inc
pop
pop
test
idivl
pop
push
push
ret
mov
pop
data16
lock
mov
movsb
push
incl
pop
hlt
or
or
and
fs
dec
add
push
shrb
rcl
iret
adc
fcmovbe
and
mov
dec
inc
in
xchg
sub
cmp
test
or
mov
cmpl
mov
scas
rcrl
jns
jo
outsb
inc
outsl
jo
add
mov
push
dec
and
add
inc
clc
jns
and
xchg
call
imul
mov
sbb
inc
shll
lods
and
jl
dec
mov
pop
leave
aaa
in
jne
xor
jle
dec
push
call
mov
mov
out
mov
jno
cmc
lods
inc
push
iret
add
pop
lods
clc
fistpl
into
jmp
leave
jae
jo
lahf
jl
movb
nop
fwait
arpl
xchg
mov
inc
test
xor
push
scas
outsl
les
loopne
sahf
repnz
or
out
adc
filds
fstpt
and
fs
and
add
adc
pop
xor
out
mov
pop
pop
pop
mov
pop
out
test
xchg
jnp
mov
dec
jbe
fsub
stos
shrb
push
and
fcoms
popa
jno
or
outsl
pop
lret
dec
add
lcall
xchg
adc
fwait
mov
or
xchg
aad
fsubrp
cmp
in
mov
sub
sub
or
push
xor
inc
leave
push
insl
mov
popa
fsubrs
repz
hlt
pop
outsb
mov
mov
push
fcmove
andl
clc
inc
int
das
push
inc
push
xor
scas
xchg
pop
fiaddl
sbb
divb
int3
jle
sbb
and
stos
into
je
add
pushf
dec
pop
xchg
lret
xchg
inc
jae
frstor
xchg
jnp
icebp
xchg
mov
pop
imul
jb
in
add
fidivrl
ficoms
mov
out
sub
sub
jne
xchg
cld
dec
clc
lret
in
std
stc
adc
xor
fwait
mov
ljmp
cmp
pop
or
dec
pop
adc
jge
and
mov
adc
addr16
lods
pop
ss
and
mov
ja
sbbl
insl
outsl
push
mov
xchg
inc
pop
es
clc
and
add
mov
and
xor
movsl
dec
xchg
je
jnp
xchg
popa
cmp
jg
fists
lahf
insl
rep
and
xchg
push
mov
cmp
mov
adc
add
mov
xchg
scas
out
int3
sub
test
push
mov
ror
mov
xchg
imull
stc
cmpsl
iret
jmp
xor
mov
arpl
sbb
out
inc
mov
xchg
fs
jle
lahf
mov
xchg
and
xchg
daa
mov
jmp
sub
pusha
xor
clc
push
incl
imull
fimull
or
cmp
xchg
xchg
out
pop
stc
dec
and
pop
ffreep
mov
or
movsl
mov
dec
sbb
jo
sub
inc
add
adc
xchg
fwait
leave
adc
inc
sbb
dec
xor
inc
cmc
xchg
mov
jle
bnd
imul
outsb
out
adcl
aad
adc
sub
sub
in
lea
inc
jp
mov
xchg
nop
mov
jge
xor
outsl
sub
mov
orl
or
inc
lock
or
mov
and
pop
gs
jl
rclb
int3
xchg
enter
popf
insl
push
mov
js
bound
jl
lods
cmp
fsubrl
inc
xor
jle
and
out
pop
mulb
add
adc
and
xchg
lea
adc
pop
inc
xchg
inc
scas
xor
push
and
dec
repnz
pushf
inc
addb
pop
add
daa
or
mov
cli
jae
subl
or
push
mov
adc
xlat
fbld
fwait
outsl
jmp
sbb
fs
repnz
popa
jge
cld
lock
sbb
dec
inc
or
push
roll
jmp
inc
cmp
leave
pop
push
pop
or
cmp
mov
in
or
ljmp
pop
pop
inc
addr16
loope
xchg
dec
mov
js
data16
inc
aas
fs
je
lea
clc
insb
mov
jmp
cwtl
mov
and
dec
ss
push
sbb
ljmp
push
xchg
sub
mov
jbe
ficomps
repz
lods
sti
loop
push
xor
add
inc
push
xchg
inc
mov
jo
fiadds
adc
rorl
sar
out
cld
lret
sub
std
xchg
arpl
and
push
jae
rol
movsb
popf
add
cmp
js
aad
mov
push
int3
add
fsts
int3
fcom
jae
movsl
pop
ficoms
call
sti
enter
mov
lds
or
into
shll
push
mov
cmp
lcall
lret
test
iret
rclb
incb
dec
pop
sahf
scas
aam
roll
repz
iret
inc
sub
lret
pop
mov
mov
gs
sub
and
ror
sahf
jne
cs
adc
int3
add
mov
sub
xchg
mov
dec
repz
insb
pushf
mov
out
push
shl
adc
setae
jae
adc
insl
sub
xchg
daa
sub
lds
repnz
out
push
add
lret
mov
jns
imul
negl
leave
pop
std
jae
loop
lret
mov
mov
mov
daa
add
cmp
std
aad
mov
inc
cmp
mov
or
push
pushf
and
mov
xchg
cmp
cmovge
dec
mov
xchg
jae
hlt
xor
movsb
test
iret
es
or
jnp
mov
mov
lret
in
rorb
cmp
in
inc
fisubl
imul
rcrb
sbb
mov
fwait
adc
xor
mov
aad
scas
int3
push
add
roll
jecxz
xlat
mov
or
insb
outsb
jecxz
orb
imul
mov
ret
and
aam
adc
xchg
push
pop
mov
lods
iret
and
out
mov
jmp
das
xchg
mov
pop
imul
and
mov
imul
adc
push
jle
dec
dec
jmp
cmpsl
hlt
mov
jno
add
lret
jl
lret
adc
shll
loop
adc
mov
mov
xchg
push
push
outsb
pop
fnstcw
scas
pop
adc
or
pusha
xchg
push
fwait
das
addr16
lods
ja
shll
fdivrs
enter
cmc
sbb
and
divb
fsubrp
fwait
test
ds
rcrb
push
test
clc
pop
movsl
daa
push
push
pusha
adc
mov
mov
loopne
or
sahf
or
and
jbe
pop
fdivrs
sahf
repnz
mov
cmp
inc
push
jp
out
mov
mov
pop
or
stc
add
inc
stos
outsb
es
arpl
fsts
call
xor
jae
push
xlat
jo
adc
and
or
pop
cwtl
push
inc
mov
outsl
rolb
mov
push
push
jne
int
cmp
out
les
xchg
je
inc
scas
cmp
sub
jno
cli
sets
out
ret
pop
jg
or
sub
sarb
add
cmp
les
and
ret
loope
fucomip
lock
adc
jmp
sarl
aad
scas
sbb
sub
jnp
xchg
dec
jp
cmp
jp
andl
jnp
cmpsl
mov
popa
dec
data16
scas
and
cli
xorl
jns
icebp
dec
mov
scas
in
hlt
sub
sub
pusha
loope
lock
jnp
cld
add
jae
insl
loopne
cs
pop
loopew
into
out
fwait
lea
add
add
mov
push
rorl
sub
mov
sti
mov
mov
ds
mov
outsb
es
jb
icebp
into
ffreep
icebp
out
push
or
lahf
mov
sbb
jge
pop
scas
imul
xchg
push
or
ret
inc
pushf
xlat
enter
sbbb
idivl
subb
andb
or
test
insb
pop
xchg
daa
pop
fsts
mov
out
fdivrs
xchg
jle
pop
push
adc
scas
popa
cmpsl
sub
push
jl
jne
or
and
ss
cmp
xor
movsl
clc
fimull
stos
filds
clc
mov
ss
add
push
imul
xchg
push
xchg
cmp
mov
pop
dec
arpl
sub
jns
xlat
fdivl
sub
ficomps
pop
jmp
cltd
xor
inc
adc
flds
adc
xor
scas
aaa
or
sub
and
adc
int3
inc
and
dec
sbb
and
mov
or
mov
mov
mov
aad
inc
xchg
in
inc
mov
add
mov
pop
pop
movsl
mov
int
pop
rclb
and
gs
mov
roll
xchg
lret
pop
in
rcl
popl
nop
std
inc
insl
aaa
add
in
rorb
mov
out
in
adc
fs
js
xchg
shrl
stos
jno
add
test
leave
xor
cmpsb
cmc
xor
push
jne
arpl
rolb
in
inc
mov
pop
xor
inc
sub
out
mov
push
mov
in
cmpsb
mov
sti
ret
add
adc
xchg
out
pushw
cmp
fldl2e
ds
pop
pop
inc
sbb
js
push
xchg
xor
mov
out
jo
ljmp
ret
cmpb
xchg
movsl
shlb
adc
inc
imul
sub
jge
jge
jmp
imul
dec
test
sub
sub
or
notl
adc
cmpsl
mov
repz
mov
mov
mov
out
dec
sbb
cmp
sbb
jmp
or
pop
fs
xchg
lcall
lret
imull
mov
call
out
cmp
mov
aas
addb
jb
inc
and
dec
dec
dec
dec
or
leave
xlat
mov
mov
es
push
cmp
adc
cli
into
jbe
into
dec
pop
mov
inc
mov
stc
fsubr
loop
outsb
jp
mov
or
mov
mov
into
cltd
fiadds
stos
out
mov
jnp
pop
push
xor
fcomip
ficoms
push
and
ljmp
push
sbb
push
cmp
and
dec
xchg
push
in
imul
adc
mov
or
dec
into
fwait
test
pop
fsub
adc
lret
push
insl
inc
mov
shlb
sub
inc
mov
xor
xchg
and
mov
sti
xlat
push
fldenv
xchg
push
xor
xchg
add
scas
dec
nop
pop
aas
pushf
push
addr16
popf
xchg
cmpsl
pop
xchg
popf
jl
lcall
fidivrs
daa
push
lcall
aad
fistl
insb
mov
fsub
arpl
and
and
addr16
ds
mov
pop
insb
int3
mov
pop
pop
es
and
cltd
stos
jnp
pop
sub
stos
mov
mov
repz
push
add
sub
rolb
leave
dec
mov
inc
into
in
or
or
ss
jae
or
gs
jp
xchg
push
inc
shl
std
outsl
jle
sub
sbb
cmp
stos
sti
jo
sbb
jmp
lods
loope
sub
sti
andb
lea
cmp
xor
cwtl
push
push
push
mov
pop
mov
insl
pop
inc
test
sbb
sub
push
jmp
inc
es
mov
xchg
iret
inc
adcb
mov
insl
lods
testb
jno
cmp
stos
lcall
test
fsubrs
mov
das
mov
push
jne
jnp
xor
loope
ss
insb
sbb
stos
pop
pop
ljmp
mov
aaa
ss
addr16
xchg
pop
mov
xor
divl
fmull
cli
xor
mov
push
in
xor
popf
cltd
subl
in
leave
fimull
xorb
cmc
push
jae
inc
push
mov
sub
mov
cmp
cwtl
mov
mov
inc
mov
push
pop
enter
loope
sti
push
cli
xchg
adc
sub
sub
enter
jno
jp
decl
insl
mov
lret
mov
xor
aam
lahf
cmp
adc
xchg
mov
cmpsb
shlb
inc
leave
clc
cltd
and
jecxz
mov
inc
jae
jbe
cld
in
int3
mov
test
popa
inc
mov
pop
sub
out
or
insl
je
adc
jp
mov
cwtl
jns
inc
imul
jne
pop
mov
pop
addr16
ret
mov
xchg
or
jmp
sub
and
hlt
and
fidivs
push
es
mov
xor
std
sbb
nop
rcrl
scas
cmc
xchg
push
jmp
mov
push
dec
sti
jg
fs
fisubs
mov
in
dec
pop
or
xchg
movsl
fdivl
test
scas
addb
jae
push
iret
cwtl
inc
sbb
stos
sar
or
adc
cmp
imul
js
and
mov
push
jns
lea
adc
les
cmpsb
jnp
outsl
test
mov
lods
stos
and
call
pop
mov
rolb
movsb
sub
popf
sbb
inc
or
xchg
add
ljmp
popa
mov
das
inc
sub
std
sar
das
pop
daa
xchg
shl
jo
sahf
shr
icebp
sub
cmp
jge
addl
es
shll
pop
xlat
stos
test
iret
mov
cmpsb
in
xchg
push
lock
lea
add
sub
cwtl
add
movsb
inc
jl
ljmp
ret
add
lret
pop
xchg
xor
sub
rorl
cmp
inc
or
push
les
jp
push
jecxz
repnz
push
cli
negl
cmc
mov
pop
hlt
mov
sbb
hlt
sbb
or
es
std
mov
test
sub
push
and
sub
push
imul
push
dec
and
jg
lret
lock
and
dec
fcompl
in
pop
xor
dec
popf
dec
dec
or
fs
sub
dec
stc
dec
sub
sbb
insl
popf
xchg
bound
mov
jne
lock
adc
dec
roll
xchg
scas
es
into
push
inc
mov
mov
jl
mov
xchg
testl
jle
popf
pop
test
aas
into
in
out
rcll
dec
in
sbb
mov
rorb
sti
movb
sub
jle
cld
sbb
dec
mov
jp
out
pop
mov
in
jl
add
cmpsl
aas
xor
pop
mov
pop
sarb
xchg
cltd
or
inc
cmp
add
fisubl
jle
mov
mov
je
pop
daa
rclb
jecxz
in
hlt
stos
rolb
das
aad
sarl
fildl
inc
rolb
mov
xor
push
push
and
push
mov
test
sub
bound
aaa
mov
pop
dec
addl
cli
xchg
loop
imul
pop
sub
mov
and
clc
lcall
xchg
neg
add
fdivrl
push
jae
jo
pop
adc
test
dec
iret
dec
imull
mov
jb
hlt
jg
loopne
push
aaa
cli
ljmp
dec
ss
lret
xchg
ljmp
and
and
inc
sahf
inc
xchg
pop
popf
sarl
call
inc
js
cli
lds
push
and
or
imul
scas
lods
mov
shrl
jp
xor
pop
fidivrs
xchg
adcl
adc
int3
jecxz
outsl
xchg
push
push
cmp
enter
and
rcrl
mov
jmp
lret
and
inc
movsl
pop
xchg
cmp
push
sbb
cmp
and
and
mov
push
fcomps
cwtl
xchg
dec
aas
out
sbb
cmp
sti
mov
dec
std
stos
movsb
inc
add
jnp
mov
adc
cli
mov
dec
je
push
jb
ffreep
cli
mov
add
rolb
test
lock
adc
aaa
mov
jns
test
popa
adc
sbb
je
loope
or
test
lods
pop
cmp
cmp
xor
sub
out
jns
shrb
lea
mov
mov
jo
add
inc
or
dec
test
sbb
cmpsl
dec
inc
out
bound
arpl
int
mov
sahf
xchg
or
mov
mov
xchg
cmp
cmp
pop
pushf
lds
sbb
insb
test
cmp
push
sti
lock
mov
scas
jne
sbb
add
sub
sub
lret
xchg
ret
inc
mov
jle
cmp
pusha
mov
sub
dec
fdivl
fistps
lcall
mov
sti
testl
jmp
pop
rcr
pusha
test
popa
push
pop
cmp
jbe
rcrb
pop
shll
insl
imull
in
adc
ret
out
mov
mov
popa
call
xor
sub
adc
ss
push
or
cmpsl
fisttpl
jno
lods
jae
int
lods
or
insb
insb
rcrb
ja
jbe
rclb
xor
out
pop
fidivl
push
shr
shl
inc
mov
lret
dec
ja
jecxz
je
aas
or
daa
ret
fidivrl
popf
call
shlb
dec
pushf
fdivs
in
push
sub
ret
loop,pn
sbb
pop
in
jp
and
sbb
mov
add
jle
outsb
sub
jno
cmp
adc
ljmp
icebp
xor
arpl
and
add
into
and
lcall
rcr
xchg
rep
aaa
sahf
jne
outsb
cmpsl
jmp
repz
pop
mov
rorb
lock
pop
loopne
pop
lods
cld
and
rcl
cli
roll
mov
adc
adc
out
int
xor
inc
inc
repz
pshufw
cmp
repz
mov
andl
cmc
jg
or
fidivrl
xor
stc
xor
shl
ficoml
outsl
xor
into
or
sub
pop
pop
out
or
shrl
aad
push
cmp
mov
mov
xor
ljmp
out
add
test
popf
and
rorb
push
pop
mov
mov
int
data16
and
push
xor
cmpsl
cmp
shr
fdivp
movsb
test
and
test
test
push
std
out
shlb
arpl
jmp
dec
shrl
call
in
roll
nop
pop
xchg
xchg
mov
aaa
ja
hlt
mov
pop
and
movsl
leave
sar
push
dec
mov
enter
loop
mov
mov
mov
in
ds
push
or
sbb
mov
es
mov
mov
out
insl
xlat
cmp
test
jo
pop
jle
mov
in
pop
int
sbb
sub
xor
jp
dec
jge
andl
inc
jge
dec
fsubrl
out
pop
pop
pop
mov
cmp
mov
cmc
adc
jl
xor
ret
imul
fcompl
and
add
xchg
push
sub
cwtl
in
iret
mov
xchg
and
pushf
daa
fcompl
mov
int
in
inc
mov
mov
lods
xor
sub
push
jle
pusha
adc
cltd
pusha
sti
mov
sarl
sahf
xchg
enter
xor
jmp
add
xor
notb
sbb
out
add
mov
sbb
mov
xchg
mov
lcall
std
cmp
jle
adc
push
pushl
jg
push
or
mov
pop
pusha
hlt
addr16
stc
sbb
adc
push
mov
sbb
sti
iret
aas
sbb
mov
xor
out
mov
mov
lods
test
ja
test
arpl
stc
lcall
mull
in
push
fdivs
and
movsl
cmp
mov
dec
xchg
filds
add
loop
or
jmp
inc
ret
adc
mov
xchg
or
push
sbb
aaa
and
sub
fsubrs
lds
xchg
and
mov
push
into
popf
aas
cmp
dec
mov
sti
sbb
jle
arpl
out
xorl
mov
inc
dec
mov
push
shrl
jp
lods
add
in
cmp
inc
popa
cmpsb
inc
mov
xchg
imul
inc
mov
pop
mov
push
lcall
mov
outsl
jle
mov
sub
rorl
out
movsl
jo
and
ds
and
jge
shl
fmuls
jbe
or
sub
popf
fcompl
pop
std
push
mov
mov
data16
sub
push
xchg
int
fwait
mov
mov
mov
enter
dec
push
shrb
notl
insb
loop
adc
stc
jnp
sahf
in
out
sbb
cmc
notb
lret
mov
fidivrs
jae
xchg
mov
mov
sbb
test
inc
mov
inc
test
mov
push
or
add
push
inc
adc
jmp
lahf
popa
sahf
fcmovb
orb
sbb
mov
mov
out
pusha
mov
aam
xchg
inc
in
hlt
adc
das
fidivs
mov
xchg
mov
push
loopne
loop
shll
or
mov
into
repnz
sub
sub
inc
mov
les
ljmp
pop
imulb
popa
cmpsl
dec
loope
stc
cmpsb
fnstenv
inc
push
mov
int3
xorl
aas
imul
popa
into
xchg
popf
cmp
stos
test
mov
scas
dec
pop
je
push
ja
push
mov
xchg
mov
test
out
push
ds
stos
lcall
hlt
inc
push
dec
sub
jmp
mov
rcl
sub
int
out
pop
mov
mov
mov
inc
jmp
xor
enter
and
dec
push
cmp
ret
sbb
xchg
cmp
lret
lret
rclb
push
dec
mov
push
sbb
bound
pop
test
das
cmp
orl
mov
lods
sbbb
iret
xchg
or
mov
sbb
xchg
je
xor
pop
adc
nop
shrl
xchg
pusha
lcall
sub
pop
das
mov
addb
xor
adc
sbb
mov
mov
dec
fwait
xor
lds
inc
add
stos
fnstsw
pop
sbb
in
xchg
ss
mov
adc
xchg
pop
int
inc
inc
jbe
push
push
sbb
les
xor
outsb
test
xchg
jae
jmp
dec
out
sbb
test
in
scas
ja
std
xchg
enter
mov
mov
add
inc
pushf
cmp
sbb
fucomip
enter
mov
ds
cltd
pop
jecxz
jns
inc
add
mov
mov
add
std
pop
pop
inc
popf
cmp
or
loopne
fadds
aam
fbstp
aad
cld
outsb
and
les
in
ds
push
std
cmp
mov
cwtl
add
out
push
ret
adc
inc
inc
jnp
mov
hlt
loopne
xor
push
jle
aas
xor
pop
pop
jae
lds
mul
xor
int
jnp
into
test
push
addr16
jo
aad
icebp
mov
clc
scas
cwtl
data16
fcompl
cmpsl
fdivl
adc
mov
frstor
das
sub
cmp
data16
clc
je
flds
xchg
mov
pop
sub
incb
pop
pushf
stc
outsb
pop
mov
clc
lahf
add
add
and
fldcw
push
fs
fistpl
repnz
and
inc
jno
mov
push
dec
icebp
jne
frstor
mov
cmp
mov
ja
mov
js
mul
fiadds
je
cwtl
sub
xchg
jne
xchg
repz
addl
sbb
es
adc
daa
push
into
fimuls
mov
adc
and
fildll
dec
jno
mov
daa
add
xchg
repz
cwtl
push
aaa
hlt
insl
sbb
jo
mov
sarb
pusha
sbb
loope
dec
fimull
xor
mov
dec
icebp
pop
leave
pusha
inc
push
daa
mov
out
ss
pop
ds
icebp
pop
pop
arpl
imulb
ja
movsb
mov
xchg
dec
dec
test
or
mov
or
je
cmpsl
dec
ret
jnp
xchg
in
into
imul
jmp
les
sbb
add
loop
out
xchg
cmp
push
add
cmpsb
xchg
jl
std
inc
stos
inc
gs
mov
mov
lret
dec
out
fidivrl
ljmp
adc
mov
mov
insl
inc
inc
cwtl
rolb
jl
jmp
bound
jns
dec
ljmp
inc
aad
inc
xor
inc
xorb
lret
rcrl
pop
je
pop
jmp
addr16
jns
jp
inc
shlb
jecxz
push
mov
or
repz
xchg
add
sti
scas
xchg
xor
filds
loope
fstpt
call
pop
in
mov
lcall
mov
int
leave
cli
icebp
mov
scas
xchg
int3
clc
or
mov
inc
xchg
xchg
xchg
mov
leave
decb
and
aas
enter
imul
pop
fnstsw
inc
ficomps
fsubrs
cld
fcoml
pop
xchg
mov
stc
push
adc
movsb
ds
adc
sub
je
add
dec
cli
pinsrw
mov
ret
xchg
jg
test
inc
pushf
and
push
adc
stos
inc
xchg
std
sub
and
and
sub
push
je
sub
icebp
fisttpl
adc
push
insb
loop
sahf
js
jne
mov
and
push
lea
or
push
pusha
icebp
inc
movsl
push
ret
fcoml
push
outsb
in
loope
add
xchg
ud0
mov
pop
shrl
sbb
aam
xor
int3
lret
sarl
das
rolb
xchg
ljmp
or
push
ljmp
in
mov
scas
jbe
mov
add
scas
dec
rcl
pop
push
mov
leave
mov
adc
xchg
jecxz
testl
dec
add
and
movsl
inc
xlat
add
scas
mov
cmp
in
inc
leave
dec
mov
stos
vcvtsd2si
sti
lods
adc
mov
pop
fidivrs
xchg
adc
jno
inc
outsl
std
cmp
jo
repnz
fstps
cmp
xchg
push
pop
add
pusha
fsub
jecxz
xor
inc
cmp
mov
cli
pushf
std
xchg
cmp
popaw
imul
in
ret
ljmp
pushf
out
and
fsubl
xor
mov
xor
pop
push
fstl
push
mov
loope
cmp
cmp
xchg
cmp
inc
mov
or
jge
adc
insl
sahf
dec
or
cmpsl
lods
push
out
ret
clc
aam
push
dec
flds
stc
adc
flds
add
xchg
rorl
adc
dec
pop
push
pop
fdiv
popf
outsb
pop
mov
xor
mov
add
inc
sub
sub
jno
sbb
or
jge
in
cmp
mov
fstpl
scas
cli
sub
push
lock
or
sub
arpl
adc
arpl
push
pop
sub
jbe
daa
shlb
out
pushf
push
xor
mov
pop
pop
cltd
xor
sbb
mov
ja
add
ss
pop
sub
mov
sarb
lahf
pop
pop
jecxz
inc
icebp
iret
push
mov
or
cmp
push
faddl
cmpsb
and
aam
push
cmp
lret
mov
sti
inc
stos
push
popl
in
or
fs
cltd
xor
icebp
repnz
daa
and
push
out
bound
fisubrs
add
and
cmp
and
jno
fistl
or
pushf
adc
decb
jo
lods
test
push
pop
or
push
sbb
xchg
add
inc
push
jne
sub
loopne
lods
jg
out
rcr
add
push
push
mov
mov
inc
out
cmpsb
jns
aaa
xchg
add
mov
cmp
mov
or
xchg
sbb
add
inc
popa
or
dec
inc
inc
mov
jo
mov
pop
or
cmp
xor
sub
addr16
inc
adc
sbb
add
jnp
aas
add
ljmp
lahf
cld
rorl
mov
les
lea
ret
xlat
cmc
cld
into
mov
sbb
fisubs
mov
ja
loop
addr16
push
dec
sbb
inc
imul
dec
pop
jae
cwtl
aas
ret
daa
stc
mov
xchg
ror
cmp
xchg
cmpsb
mov
jns
push
mov
ds
push
ffreep
jno
pop
test
jo
jb
enter
movsb
add
adc
pop
adc
test
sbb
add
lcall
mov
popf
cmp
sub
test
inc
inc
push
mov
in
xlat
lahf
andb
sub
sub
dec
bound
sbb
sbb
bound
inc
stos
or
xor
cmp
cli
nop
mov
pop
andl
cmp
imul
dec
int
xor
pusha
mov
insl
call
and
stos
xor
aam
mov
jl
adc
mov
lock
int3
push
insl
test
lods
xchg
mov
add
cmpsb
add
sub
addb
in
jmp
fsubrl
or
test
pop
sbb
mov
mov
stos
mov
xor
cmp
fwait
mov
inc
sub
aaa
lods
sub
lahf
dec
pop
shll
and
loop
pushf
sub
sahf
dec
xor
push
loope
inc
pop
test
dec
jnp
imulb
cmpsb
scas
adc
sbb
mov
adc
mov
adc
mov
sbb
pushf
lahf
xor
mov
and
in
orb
popw
testl
clc
mov
jne
mov
dec
mov
cmp
jbe
into
pop
add
jno
sbbl
mov
mov
pop
ds
arpl
jp
in
enter
cmp
rcrb
stos
cmp
lret
sbb
into
adc
push
dec
dec
push
adc
or
repz
jne
cmp
dec
imul
lret
popf
xor
fst
mov
pop
mov
insl
jge
xchg
mov
pop
imul
out
sahf
repnz
pcmpgtw
pop
imul
mov
mov
dec
punpckhbw
out
loope
pushf
ds
jbe
out
xor
push
js
push
xrstors
adc
inc
mov
jge
adc
movsl
scas
rcl
cld
fistps
into
sbb
cmp
add
out
lret
mov
stos
pop
jns
fucomi
decb
daa
ja
int
pop
mov
popa
sbb
jl
je
fidivl
aas
xchg
cmp
stos
xor
popf
ficomps
cld
ds
pop
rcrl
pop
lret
cmpsl
add
scas
jne
add
sbb
cmp
movsb
and
cld
push
lret
push
add
jecxz
sar
mov
loope
popa
inc
mov
jmp
sub
xor
data16
pushf
ss
ret
addb
xor
lret
or
stc
ja
pop
out
dec
pop
sbb
aas
imul
jnp
jb
pop
mov
pop
ja
sub
repz
lahf
and
aas
scas
jo
pop
out
lea
in
mov
and
stos
inc
push
or
jns
jb
jno
out
pop
call
out
loop
stos
lret
adc
adc
aad
lock
xor
jnp
mov
loop
dec
jge
lds
imulb
ja
xor
push
inc
fisttps
adc
in
pop
popa
loop
out
sti
arpl
mov
dec
cmpsl
add
dec
inc
push
ss
bnd
jecxz
add
push
gs
cmp
rolb
iret
sub
mov
lret
mov
shl
dec
sub
mov
push
out
dec
orl
lret
push
aaa
push
jl
push
pop
or
mov
add
push
xor
jp
in
cwtl
pop
fs
pop
sub
movups
mov
pop
adc
cld
div
sub
stos
jle
shrb
pop
lret
xchg
out
call
dec
jecxz
popf
mov
fucomp
insw
cmp
in
bound
add
sbb
ret
sbb
pushf
mov
out
xor
cmc
mov
movsb
ljmp
mov
adc
loope
xor
push
mov
inc
shrd
data16
sub
pushl
loope
mov
cli
out
enter
inc
add
or
dec
mov
mov
into
mov
add
into
sub
mov
inc
sbb
les
dec
addb
inc
lahf
stos
jnp
jg
insb
dec
incb
jl
or
scas
pop
jle
add
and
push
out
inc
cli
pop
adc
mov
mov
aas
dec
jp
repnz
or
inc
inc
das
daa
sbb
dec
or
fsubrs
xor
sbb
jl
std
fwait
adc
jno
repnz
dec
frstor
aas
test
jp
sbb
rcrb
mov
lock
cs
mov
sub
mov
or
aas
jmp
pop
adc
rorl
test
push
mov
lret
ret
xchg
int
jno
imul
dec
mov
fs
ljmp
push
mov
xor
sub
xchg
das
insb
xchg
cmc
ret
xlat
add
push
cmp
sub
incb
fcoml
cwtl
push
rclb
jb
stos
dec
insb
bound
ret
test
stos
lods
lea
imul
andb
mov
mov
je
jae
and
ja
shlb
mov
aad
mov
dec
pushf
test
rcr
or
enter
out
xor
cmp
inc
call
icebp
adc
lahf
mov
mov
lods
imul
out
and
fisubrl
ja
lret
dec
sbb
repnz
sarb
pushf
cmp
pop
inc
xor
mov
inc
pop
stos
adc
cmp
mov
in
add
mov
mov
xor
cld
lods
pop
loop
fsubl
hlt
in
or
int
es
ds
fstps
dec
out
divl
insb
lahf
call
pop
cmovne
push
cli
adc
mov
into
xlat
adc
daa
sbb
cmc
shll
mov
hlt
repnz
lds
mov
ds
xor
push
jmp
dec
roll
cmp
in
mov
or
mov
mov
and
hlt
sub
rolb
cmp
outsb
adc
push
jmp
push
sub
xchg
andl
ljmp
and
jnp
cmp
imul
mov
sahf
cwtl
mov
xchg
lea
xchg
xchg
add
inc
addr16
inc
arpl
cmp
insb
and
xchg
push
fiaddl
lret
mov
repz
sbb
in
xchg
mov
or
dec
lret
aas
rcr
and
add
xor
in
mov
push
setp
xor
add
pusha
lods
mov
lock
fdivs
xor
clc
scas
int3
mov
inc
f2xm1
sub
or
cltd
les
not
out
lret
in
in
iret
rclb
dec
test
jns
cmpsl
ja
mov
addr16
into
add
repnz
rorl
pop
cwtl
clc
imul
inc
iret
iret
cmpsl
adc
int3
inc
cld
jge
mull
dec
push
std
and
fcmovb
fidivl
call
xchg
out
outsb
subl
push
mov
and
fs
cmpsb
xor
jns
adc
mov
adc
and
jbe
lea
jbe
xchg
popf
jbe
or
push
and
xor
xchg
data16
or
pop
icebp
or
lods
mov
or
add
inc
and
dec
pop
or
xchg
push
pop
enter
rorb
mov
ss
movsb
cmpb
fs
dec
jne
les
pop
mov
add
scas
aad
clc
pop
pushl
sub
pop
out
cmp
sub
movsl
xchg
pop
xchg
fisubrs
mov
inc
xchg
or
sbb
fdivl
jne
shll
push
pop
rcrl
iret
aaa
push
fisubrl
push
mov
aas
stos
push
push
ja
imul
jne
inc
lret
sbb
jae
adc
pop
fcmovbe
push
push
xchg
pusha
dec
lock
xchg
enter
inc
mov
daa
shrl
sbb
sub
loop
push
mov
push
push
test
jl
imul
add
cmp
rcrb
cmovle
push
pop
dec
shl
cmp
add
lahf
mov
jbe
push
test
adc
clc
dec
clc
call
aaa
bound
mov
adc
inc
mov
or
dec
lods
sti
jecxz
lcall
mov
jle
orb
xchg
pop
add
aaa
mulb
aam
adc
jbe
push
sti
loop
xchg
push
pop
mov
add
add
inc
ret
pop
std
jnp
jae
mov
testb
mov
lock
sub
xor
ret
jmp
cmp
sub
mov
aad
or
stc
mov
inc
push
jb
ror
xor
xor
fidivrs
dec
xchg
fisttps
push
outsb
in
je
std
test
gs
and
insb
pop
dec
xchg
sub
sub
push
in
lret
rdtsc
lock
mov
adc
outsb
sbb
gs
inc
sahf
movsb
jo
leave
cmp
and
and
mov
pop
nop
mov
es
inc
cmp
cmpsl
sahf
test
mov
jle
clc
push
or
pop
scas
idiv
mov
das
outsb
cltd
push
cmp
xor
and
filds
xor
sub
xor
mov
jno
ljmp
ret
call
lret
imul
lock
dec
pop
mov
cmpsl
jne
mov
adc
ljmp
or
xor
sub
mov
je
arpl
pop
or
mov
lds
sarb
sub
les
xor
sbb
insb
adc
cwtl
mov
mov
sbb
mov
sti
push
pop
out
jg
inc
xor
aam
insl
adc
and
cmp
adc
cmp
pop
insb
cltd
add
add
add
sub
pusha
xchg
test
dec
aam
xchg
xor
mov
add
shrb
dec
divl
js
pop
cmp
xor
repz
push
mov
push
insl
aaa
xchg
lcall
jp
inc
push
jo
jae
imulb
jmp
out
or
xor
bound
mov
or
jo
inc
mov
dec
lock
shr
andb
movl
add
into
mov
dec
outsb
cld
xor
mov
add
push
cmp
iret
std
in
push
push
inc
dec
pop
sub
push
mov
cmp
enter
rorb
sti
mov
fs
sub
and
jp
xor
scas
cld
mov
add
xchg
icebp
push
icebp
dec
cmpsl
scas
pop
inc
lcall
push
stos
pop
cmp
push
pop
sbb
imul
jae
lret
sbb
loopne
mov
and
mov
inc
xor
or
mov
mov
and
cwtl
sahf
xor
cli
dec
add
inc
xor
out
shlb
test
sbb
icebp
cld
inc
xchg
adc
mov
cmp
movsl
andl
mov
mov
cmc
cld
fisttpll
shlb
xor
pop
popf
mov
int
mov
shll
adc
mov
rorb
inc
hlt
sti
mov
out
cs
pop
jno
fdivl
push
imul
jne
iret
and
out
adc
jae
ficompl
mov
ret
test
push
cld
jo
xor
inc
mov
pop
add
sti
icebp
xor
pop
in
shrb
jle
test
add
mov
adc
inc
in
pop
daa
cltd
mov
out
iret
ss
pop
fstp
out
xchg
dec
sub
movl
das
push
inc
loop
adc
jmp
pop
adcb
cmp
cmp
pop
sub
lahf
xchg
aam
adc
out
xchg
mov
lret
jge
in
sbb
push
repnz
inc
out
jmp
roll
fldl
in
test
lret
xchg
lods
ss
mov
les
sbb
sub
fcomip
mov
mov
xchg
imul
mov
mov
popa
and
cmpsl
sti
xchg
test
bound
pop
adc
fimuls
xor
xchg
in
mov
ljmp
inc
push
inc
cltd
popa
push
adc
cmp
pop
pop
pusha
adc
je
aad
sbb
int
cs
pop
sbb
add
fldlg2
mov
and
cli
pop
cmp
mov
decl
fucomi
sahf
xlat
lahf
gs
xor
out
mov
dec
mov
aam
or
daa
jno
mov
jmp
cwtl
xchg
cmpsl
nop
pop
xlat
sub
pop
jmp
mov
lret
out
outsb
gs
lods
das
add
leave
add
mov
ret
aaa
adc
lahf
loop
xor
mov
scas
out
inc
ss
xchg
ljmp
sub
xchg
push
movsl
sbb
cmpsl
fst
xor
testb
outsl
adc
and
ja
hlt
out
in
cmp
and
mov
mov
inc
pusha
adc
adc
ss
lods
les
rcr
ljmp
sahf
out
mov
push
das
test
adc
adcl
std
out
repnz
fdivrp
je
xor
sbb
add
dec
cmp
jb
xor
xor
hlt
push
dec
sbb
pop
fidivrs
ja
pop
mov
aad
repnz
jp
sahf
scas
cld
adcl
leave
fdivrp
pop
in
cs
shl
repnz
sub
jb
cmp
jle
push
dec
roll
jmp
and
cmc
int
fiadds
sub
ja
or
xchg
sahf
add
push
push
jne
hlt
idiv
cltd
cmp
enter
lock
xchg
and
push
mov
fstpl
or
js
dec
cld
je
pusha
add
data16
add
cld
jmp
inc
out
gs
pusha
daa
add
and
les
lds
inc
fmull
dec
cmc
rorb
icebp
cmp
inc
push
adc
jp
aad
iret
inc
push
or
fwait
cmp
ret
cmpsl
cmpsl
lock
out
scas
jp
adc
pushl
dec
mov
jl
mov
bound
arpl
idivb
mov
mov
dec
jae
mov
jnp
pop
mov
adc
ds
mov
loope
fiaddl
or
push
insl
and
xor
xchg
add
or
mov
inc
sub
mov
jmp
outsl
jo
pop
fcompl
push
icebp
fs
notl
mov
mov
push
inc
push
and
mov
mov
popa
xchg
push
stc
popf
shl
jle
sub
cmc
and
and
js
lea
or
pop
ja
mov
cmp
sub
ret
mov
icebp
stos
cli
jmp
lods
pop
cld
pop
mov
add
mov
ficoms
pop
pop
push
mov
mov
insl
pop
aaa
ljmp
cwtl
fisubrs
loope
push
xchg
and
int
popf
push
or
ret
lods
mov
pop
lods
sahf
loopne
xchg
cmp
rclb
sub
jo
fwait
loop
cmp
pop
add
sub
jmp
adc
ret
rolb
or
push
mov
inc
xchg
repz
mov
jne
aam
cli
mov
dec
jb
adc
mov
aam
dec
pop
out
mov
data16
jo
rcrl
mov
fwait
mov
jns
dec
or
add
ret
mov
mov
cmp
in
aad
jnp
fcoml
test
jne
sti
dec
push
push
aam
loop
shrb
mov
gs
pop
subb
inc
stos
inc
lods
mov
and
hlt
out
ds
scas
fisubs
mov
movsb
jle
pop
fiaddl
dec
mov
mov
dec
and
pop
rol
pop
mov
sbb
ja
cmpsl
shlb
mov
dec
xor
adc
aad
test
ss
sti
mov
fsubl
xor
mov
pop
mov
mov
push
or
xor
add
popa
out
cmpsl
push
or
add
daa
push
and
push
rcrl
sub
xchg
lods
adc
adc
sub
add
jns
dec
mov
and
daa
sbb
mov
xchg
xchg
sub
xchg
adc
je
enter
dec
or
popf
mov
adc
arpl
stc
cld
push
ss
shlb
pop
scas
xor
add
push
lea
jne
or
jbe
xchg
xor
mov
adc
mov
or
outsb
inc
xchg
fisubl
mov
dec
call
lea
fisttps
lods
in
push
out
cmpps
fcompl
inc
jae
stos
div
push
clc
push
mov
es
clc
stc
leave
push
rcr
dec
ret
xlat
mov
pop
xor
cmpsl
jl
insb
fnstsw
fmuls
dec
cmp
adcb
loope
pop
sti
sbb
fisubs
pop
mov
out
push
fs
movsl
inc
xor
xchg
pop
xor
cmp
jmp
lds
add
cs
das
and
xchg
test
adc
jle
pop
shrl
clc
pusha
jns
push
loope
pop
int3
sarl
jae
and
jbe
jae
in
dec
and
jmp
idivb
jg
mov
js
mov
outsb
int
mov
xchg
ret
addr16
xchg
and
xchg
adc
fdivl
mov
repnz
xor
mov
imul
jns
nop
cmp
xor
mov
icebp
stc
fwait
mov
push
sub
mov
jmp
pop
and
and
sub
pop
sbb
int3
mov
xchg
cmp
insb
pushl
repnz
jge
cmpl
cvtps2pd
imul
stos
jmp
mov
iret
jmp
aad
sbb
mov
daa
sbbb
adc
sub
in
sbb
push
pushf
ja
pop
pop
push
sub
mov
dec
xchg
mov
cmp
outsl
pop
movsb
cli
cmc
push
mov
push
mov
xchg
cs
pop
into
push
popa
jae
jnp
xchg
inc
fcomps
add
xchg
shlb
pushf
xchg
add
lcall
lret
in
aas
in
mov
adc
nop
loope
sahf
and
sar
add
test
call
xchg
jne
cld
dec
fcomip
inc
test
bound
cmp
mov
sub
popf
and
test
rcrl
mov
lods
adc
stos
and
stos
std
pop
inc
mov
jmp
pop
insl
dec
mov
fidivs
xchg
mov
add
sub
inc
loope
sbb
lret
shll
inc
sbb
mov
ficomps
rcrb
clc
sbb
sub
or
push
outsb
ror
mov
call
out
imul
cmpsb
jbe
mov
ret
sbb
push
mov
xchg
daa
mov
fsubrs
pusha
adc
lret
dec
xor
sub
leave
mov
mov
out
push
xorb
and
cmp
lcall
cmp
dec
and
xor
fdivl
dec
xchg
cmpsb
cli
ljmp
xchg
sbb
sub
in
jbe
aaa
mov
popa
daa
xlat
cli
cli
sbb
add
push
jmp
cli
xchg
mov
mov
push
popf
and
or
mov
sbb
mov
dec
incl
shrb
lret
testb
mov
addr16
test
fs
js
dec
rcl
dec
xchg
xchg
js
jmp
les
hlt
jne
push
sub
mov
nop
aaa
shll
js
pop
add
mov
inc
movsb
push
fprem1
mov
fisttps
mov
pusha
nop
add
sbb
xchg
mov
and
dec
dec
iret
mov
sbb
lock
inc
shlb
ret
adc
out
daa
adc
mov
aaa
xor
cs
dec
inc
lods
and
xchg
mov
fabs
lods
sub
pop
xor
cmpsl
std
adc
call
jge
data16
enter
cmp
lret
push
xchg
xor
mov
repnz
mov
les
sub
push
sarb
sub
jo
cmp
in
xor
repnz
pushf
push
outsl
add
or
and
fdivs
std
sub
shll
int3
push
pushw
xchg
mov
jbe
imul
sbb
shrb
xchg
movsb
call
push
out
cs
test
jbe
pop
shlb
and
das
scas
fucom
sub
subl
sbb
lcall
xchg
mov
mov
dec
imul
iret
pop
dec
sbb
dec
mov
and
nop
xchg
dec
je
sub
push
dec
sbb
popf
mov
cmpsb
repnz
or
sub
rcrl
stc
iret
pop
sbb
cwtl
mov
rcr
ret
insb
jo
fdivr
xchg
cltd
pop
xor
mov
push
add
outsl
icebp
movsb
ja
xchg
popf
cmp
lcall
mov
lcall
fldenv
push
mov
add
push
mov
fistpll
cli
lcall
lea
stc
pop
movsl
sub
xchg
mov
fwait
fwait
pop
jno
jmp
add
xor
in
lea
mov
inc
jno
les
mulb
fisttpl
add
mov
pop
mov
sti
into
push
dec
mov
push
xor
fistpl
pop
inc
and
or
xchg
pop
inc
inc
iret
mov
sbb
popa
cld
xchg
stos
lods
and
add
mov
sub
out
popf
shlb
cltd
mov
inc
push
adc
repz
ja
jno
loop
cmp
mov
xor
mov
ja
pop
test
enter
adc
dec
push
leave
dec
repz
iret
mov
jbe
adc
lret
lods
aam
sub
add
or
rorl
pop
sub
or
pushw
repnz
fwait
clc
mov
jp
in
adc
add
cmp
xchg
cmp
gs
push
push
add
lret
shl
icebp
lahf
stc
sbb
xchg
mov
cwtl
lret
cltd
lcall
dec
push
int3
pop
ret
push
lock
inc
push
ficoml
repz
sub
xchg
iret
out
jg
mov
aam
jo
jne
cltd
jge
push
fldt
jg
decl
aad
stos
xor
leave
dec
xchg
and
xor
enter
test
pop
jle
fsts
stc
cmp
pop
popf
inc
push
aam
dec
test
imul
lds
roll
inc
mov
mov
notb
movsb
dec
scas
pop
test
test
or
and
push
dec
adc
jbe
cmpsl
int
testb
ds
stos
jae
push
push
fsubr
ljmp
sub
inc
dec
into
in
mov
cltd
orl
and
mov
push
out
mov
stc
dec
push
popa
mov
dec
add
out
cmp
xchg
jne
lock
outsb
fists
repz
or
pop
mov
je
iret
std
pop
aad
fstpt
xchg
pop
shrb
add
sub
scas
jge
repnz
inc
or
fstpt
popa
cmpsb
mov
adc
xor
add
add
repz
or
xchg
pop
arpl
fs
lds
push
aam
xchg
in
or
cwtl
mov
scas
rol
data16
fstpt
lahf
xorb
sub
or
into
in
arpl
fnstenv
jno
jg
call
pop
pop
mov
adc
pop
aaa
dec
push
lret
subl
xchg
rorl
cli
fiaddl
sbb
movsb
xchg
aam
sbb
outsb
divb
dec
adc
mov
in
sahf
and
fs
xchg
inc
cli
enter
mov
xor
mov
dec
nop
pop
test
fbld
test
adcl
pop
les
dec
mov
push
inc
testl
fld
test
les
test
fwait
aad
ret
jae
pop
les
mov
ljmp
add
pop
cmp
jle
dec
and
mov
push
xlat
scas
xchg
rcll
pop
ror
out
add
mov
call
push
mov
sub
push
mov
xlat
push
insl
movsb
dec
adcb
push
gs
imul
sub
inc
sbb
xor
sub
loopne
push
pxor
out
outsl
xor
mov
lahf
mov
sbb
cwtl
xlat
int3
sub
popf
loop
lahf
insl
xchg
add
bound
pop
jno
mov
inc
sbb
pop
dec
pop
loopne
in
jo
pop
and
cwtl
push
cmp
or
and
push
xlat
mov
ds
jmp
call
mov
cmpsb
sub
jno
cmp
movsl
push
ret
dec
dec
and
xor
ss
stos
sub
adc
sti
adc
mov
clc
gs
pop
mov
loope
add
inc
shr
shl
fdivr
into
idiv
testl
jno
inc
sti
cmpsl
out
loope
ljmp
jg
les
std
loop
outsl
mov
mov
sub
and
xlat
pop
adc
adc
das
inc
push
fadds
sbb
add
mov
and
js
fcompl
out
ficoms
loopne
in
shll
dec
call
xor
inc
inc
jno
into
pop
adc
mov
jg
imul
mov
sbbl
data16
bound
push
add
cld
cmp
mov
pop
cmp
loop
xchg
pop
jl
xor
aas
pushf
push
fisttpll
popa
fsubs
repz
stos
int
mov
jbe
pop
stos
mov
add
mov
cmp
insl
xlat
jne
faddp
dec
push
add
aam
and
fsubl
lret
lret
mov
aad
ret
es
mov
ror
idivb
shll
jecxz
enter
xchg
stos
sbb
adc
in
adcl
sub
lods
cmpsl
imul
push
lds
jge
sbb
test
push
push
scas
sti
rcrb
pusha
pop
stos
insl
fimuls
xor
lret
lds
jle
xchg
repz
cmp
mov
add
das
notl
pushf
jne
aas
and
ds
ss
cmpsl
mov
xchg
adc
subl
cld
cmpsl
cmp
insb
pop
or
in
add
jmp
pop
xor
stos
push
dec
pop
adc
enter
scas
lock
pop
sub
push
lcall
loopne
dec
cltd
sbb
cmp
inc
mov
int
sub
and
popf
or
xchg
dec
shlb
jae
mov
jge
shlb
cli
rcr
dec
mov
inc
or
js
pop
icebp
or
lods
cmp
and
rorl
and
loopne
std
cmp
andl
fcom
mov
ss
add
mov
lret
lods
and
dec
outsl
outsb
int3
and
repz
and
ja
or
lods
fnstsw
out
inc
popf
cmp
mov
inc
xor
outsl
mov
cmp
inc
push
int
mov
in
iret
adc
lods
std
xchg
into
push
int3
repz
push
mov
lahf
std
mov
dec
push
pop
dec
mov
fcoms
mov
rcrb
jle
aad
inc
inc
mov
mov
ret
sub
and
sbb
icebp
pop
jnp
push
in
fsubr
mov
shrb
adcl
stos
jg
leave
mov
sarb
mov
js
clc
cmp
mov
mov
or
or
popa
sbb
xchg
sbb
dec
testb
jmp
das
or
call
std
jo
mov
mov
leave
jns
mov
test
cli
push
or
lock
out
leave
dec
sahf
mov
push
inc
js
mov
mov
in
adc
aam
dec
pop
adc
decl
mov
add
mov
pusha
mov
das
lods
push
mov
sbb
fst
cwtl
adc
push
cmp
xor
clc
lods
cmp
xor
inc
test
sbb
sbb
gs
inc
pop
repz
dec
cmp
out
jle
sbb
or
xor
or
fildl
sbb
xchg
mov
lea
imul
pop
dec
jp
call
fstpt
fistps
out
aaa
mov
movsb
faddp
bound
add
push
out
mov
pop
loopne
ficompl
push
sub
int
adc
xchg
cmp
inc
jle
mov
iret
gs
rorl
pop
dec
xchg
xor
add
adc
sub
clc
mov
mov
stos
push
imul
inc
sub
add
aas
sub
add
into
or
mov
sbb
jnp
and
pop
sub
outsb
jno
int
push
sub
mov
jns
and
pop
ljmp
mov
iret
pop
lea
push
jno
sahf
imul
cli
pop
or
sbbl
loop
mov
cmp
sub
mov
sub
cmp
jae
add
inc
arpl
push
jnp
push
or
fldcw
xchg
mov
sti
mov
push
mov
cli
in
mov
std
stos
nop
popa
jae
cmp
push
jecxz
enter
out
sub
jmp
jne
xor
add
mov
mov
hlt
push
arpl
add
jne
sbb
sub
or
adc
mov
inc
fcmovne
repz
pop
cmp
sub
icebp
xchg
adc
mov
mov
out
mov
pop
or
pop
mov
cmp
imul
inc
das
cli
sahf
jno
sar
dec
mov
mov
pop
jl
dec
in
pop
push
pop
lret
out
inc
cmp
or
and
xorl
loop
jl
xor
pop
mov
lret
mov
jne
or
scas
movsl
data16
jno
call
cmpsl
cmp
es
mov
sahf
cli
or
xchg
sbb
dec
insl
xor
mov
xchg
push
std
lds
and
and
mov
jae
push
aad
inc
or
ret
mov
jg
jnp
sbb
adc
lret
loop
inc
xor
cmp
adcb
add
push
mov
mov
stos
sbb
and
xlat
push
or
push
adc
or
in
mov
mov
push
ds
adc
bound
xor
ret
rcll
xchg
aam
cmp
int
jge
gs
aas
les
jo
popa
sbb
int3
mov
xor
inc
daa
mov
jge
mov
add
insl
test
mov
fs
jns
insl
jns
sbb
push
push
repz
mov
stos
add
pop
cli
pop
imul
movd
lea
inc
fisttps
movsb
push
or
js
mov
rorl
sti
pop
adc
push
movsb
aaa
dec
xor
ficompl
popf
mov
sub
cmp
pop
cmpsl
scas
bound
js
jmp
jecxz
xchg
adc
mov
dec
xor
movsb
pop
js
ds
push
jne
sbb
add
push
push
leave
data16
fs
push
sub
call
add
repz
pop
cmp
fs
mov
mov
dec
xchg
xchg
into
nop
in
ret
test
pop
repz
jbe
dec
stos
gs
inc
mov
inc
sub
aaa
xchg
test
stc
negb
and
test
inc
dec
jge
push
mov
adc
mov
ret
sub
push
dec
in
scas
fcmovb
sbb
dec
mov
daa
or
lea
aaa
mov
dec
mov
push
fimuls
cwtl
and
push
and
in
nop
cltd
push
jb,pt
cmp
and
jge
dec
cmpsb
pop
pop
push
mov
cmpsl
add
mov
xchg
fistpl
fs
sbb
xlat
jno
bound
mov
ds
mov
sub
lahf
add
dec
and
pop
mov
aas
and
push
mov
std
in
sub
incb
sub
subps
sub
lret
dec
les
inc
fucom
lahf
lods
push
add
ds
jns
js
aaa
mov
insl
and
or
clc
rolb
scas
sub
and
ficompl
push
inc
push
enter
add
xor
jnp
shlb
pop
pusha
int3
pop
jge
inc
mov
mov
or
cwtl
cmpsl
dec
xchg
enter
test
jae
cmp
xchg
loopne
rorl
push
lock
push
stos
daa
mov
loopne
add
scas
je
push
xor
out
repz
cmp
inc
mov
out
mov
push
mov
mov
icebp
movsl
divl
jg,pn
pop
push
in
mov
mov
es
mov
mov
ret
xchg
aad
sbb
dec
pusha
sti
mov
jae
push
sbb
stos
sub
inc
rcr
xchg
sub
je
xor
decb
dec
in
ret
mov
push
jb
mov
imul
sbb
adc
ret
mov
lods
addr16
inc
test
jno
loope
out
shll
mov
insb
sbb
jp
pop
test
dec
mov
enter
cmp
dec
repnz
lea
les
jb
jge
rcr
imul
dec
xchg
mov
arpl
lods
xor
or
mov
jns
shlb
loope
daa
jl
lret
test
loop
mov
lcall
mov
js
insl
jno
not
sub
push
jbe
mov
add
and
xor
leave
jg
xor
insb
rorl
rcll
aas
popa
jne
dec
out
pop
inc
movsl
push
cs
ds
aas
mov
fmull
lahf
cltd
jno,pt
ss
aad
outsb
sub
pop
jbe
outsl
je
sahf
sbb
sub
adc
inc
imul
sbbl
sbb
xlat
stos
std
pushw
xor
test
jbe
sub
loopne
sbb
lods
push
sub
aas
cmc
sbb
into
add
inc
inc
add
jo
les
dec
pop
inc
clc
push
movsl
popl
aam
inc
push
sub
sbb
or
jle
sbb
jle,pn
mov
sahf
outsl
add
stc
repz
call
sti
dec
or
sbb
sbb
ljmp
sbb
ds
inc
mov
or
push
fnstsw
xchg
and
add
mov
jg
in
push
jnp
sub
mov
dec
daa
test
nop
mov
add
lcall
pop
inc
xlat
fdivs
mov
cli
test
dec
push
int
aaa
adc
clc
xchg
and
mov
push
xorl
xor
sub
arpl
ret
pop
shll
popa
mov
sbb
jmp
mov
push
dec
adcl
rdtsc
call
cmp
push
bound
or
pop
fwait
lds
int
jns
gs
push
lcall
lahf
pop
adc
dec
jmp
lock
stc
fcoml
sub
fmul
orb
sub
lods
or
bound
out
pop
jmp
popa
shll
xlat
dec
jg
cmp
fldt
in
jle
lea
xchg
inc
lods
mov
pop
xor
mov
dec
mov
arpl
jbe
fisubrl
xchg
sti
lock
mov
sbb
and
adc
shr
mov
bound
insl
jg
fcmovne
hlt
ja
mov
cld
xchg
cmp
stos
mov
loop
scas
pop
das
xor
jle
pop
jge
out
lahf
sub
push
in
mov
push
or
pop
pop
or
inc
iret
adc
sti
push
mov
lcall
jns
jae
and
sub
mov
jp
xor
scas
add
imulb
push
je
adc
adc
ljmp
cmp
idivb
push
iret
sub
pop
outsb
jnp
pop
sahf
mov
dec
repz
aas
or
movsb
movl
fs
cld
movsl
addr16
int
mov
test
cmp
mov
andb
sbb
mov
jle
leave
sbb
stc
in
inc
aaa
mov
popf
xlat
aam
mov
jbe
ret
repz
jo
mov
or
add
mov
or
in
ds
dec
shlb
push
mov
test
movsb
mov
push
cmc
dec
mov
shlb
pop
pop
mov
lret
xchg
icebp
aaa
cmp
adc
cwtl
arpl
mov
cmp
repnz
stos
pop
insb
xchg
ret
xchg
sub
sbb
cmp
lret
stos
insb
mov
mov
or
in
push
aas
insb
lret
push
or
loop
cmp
and
jnp
dec
add
jmp
mov
cmp
xchg
jp
cwtl
test
pop
push
cmc
fsubl
pop
in
sbb
test
or
rorl
xchg
push
ljmp
dec
xor
in
lods
popf
mov
add
dec
mov
fstpt
add
lock
sbb
or
sub
sub
xor
sbb
lds
pop
ja
ljmp
or
sbb
fistpl
mov
adc
sbb
das
or
jbe
mov
dec
pushf
pop
sub
int
mov
and
adc
pop
dec
cli
das
pop
mov
push
pop
add
jp
pop
jmp
es
ja
jl
adc
push
and
mov
aam
or
xchg
mov
mov
push
in
and
xchg
mov
cltd
aam
data16
stc
fsubs
test
push
and
push
inc
cmp
mov
shll
xlat
cld
out
lret
cwtl
les
cmpsb
sub
aam
lcall
xchg
pusha
pusha
sbb
std
xchg
subb
jl
inc
or
stos
gs
push
repnz
push
add
bnd
mov
call
adc
cld
in
je
push
inc
js
inc
xchg
aas
push
bnd
mov
add
xchg
push
insl
xchg
js
mov
out
sahf
repnz
loop
add
lcall
pusha
sbb
xchg
cmp
fsubl
das
daa
inc
fidivrs
pop
dec
jg
push
and
ret
push
cwtl
jb
outsl
js
xchg
sbb
pop
mov
mov
jbe
adc
xor
lds
pop
jmp
cmp
mov
lcall
mov
bound
into
cmc
add
dec
jae
dec
mov
inc
sarb
into
cmpl
test
movsb
inc
dec
xchg
fistpl
pusha
mov
loop
xor
mov
xchg
adcb
mov
andb
xchg
pop
mov
jnp
ja
adc
mov
sub
sbb
and
in
adc
pop
test
xor
mov
rcrl
mov
xchg
and
clc
mov
xchg
jle
fwait
mov
mov
fcoml
bound
xlat
xchg
stos
push
lret
xchg
iret
cmpsl
stos
inc
and
in
fldt
mov
jg
lods
js
lret
add
sub
idivl
jg
adc
dec
push
aaa
stc
jecxz
fstpt
adc
aad
fistpll
dec
mov
movsb
int
loope
mov
popa
aam
mov
arpl
das
popa
mov
xor
dec
cmp
xchg
xor
das
jb
enter
lods
mov
mov
cmpsb
into
cmp
cltd
cmp
xchg
xchg
mov
in
cmp
pop
andl
push
inc
out
cltd
andl
or
pusha
inc
xlat
xor
arpl
negl
push
mov
xchg
add
out
mov
je
stos
bnd
out
popa
outsb
lds
xchg
test
outsl
and
imul
dec
ror
ret
xchg
push
fdiv
mov
pop
fcompl
mov
pop
lock
into
testl
adc
add
mov
jle
stos
lods
cmc
add
js
test
fimull
jmp
dec
xor
pop
mov
add
cmc
adc
enter
es
mov
mov
sub
cli
aad
push
mov
and
int
cmpsl
test
bound
addr16
pop
cs
push
push
insl
and
xchg
cmp
push
mov
sbb
fcmovnb
sbb
movsl
rolb
inc
jne
clc
insl
out
hlt
popf
mov
inc
aaa
lret
test
fisubs
orb
dec
xor
and
out
lods
nop
ficoms
daa
mov
ja
mov
sub
adc
movsb
ret
inc
push
push
cmc
leave
push
sub
adc
add
dec
in
jge
cmc
pop
lret
push
push
test
cmp
std
leave
out
fs
sub
xchg
ret
out
and
lods
cmpl
push
out
adc
pop
push
arpl
sub
or
xor
sub
add
jle
imul
loop
je
inc
xor
adc
jp
mov
jg,pt
xor
push
sahf
cmc
pop
jmp
jp
je
jecxz
lods
rclb
jle
xor
imul
and
mov
sub
in
js
sbb
xchg
ljmp
cwtl
adc
icebp
mov
ror
lret
or
lret
call
pop
iret
ss
lret
and
sti
bound
add
or
add
into
or
std
filds
mov
push
pop
mul
jge
mov
aad
and
dec
inc
adc
or
out
xchg
loopne
sub
xor
dec
push
push
mov
inc
hlt
pusha
inc
stos
rcrb
and
in
leave
mov
scas
add
jge
mov
or
addr16
sub
dec
inc
std
lretw
aad
loopne
cmp
xchg
sub
shll
ja
pop
push
push
int3
cs
int3
lahf
sub
mov
xor
bound
sub
jl
stos
imull
push
jnp
sub
in
popa
dec
mov
inc
mov
mov
and
icebp
jbe
mov
and
ja
cmpsb
xchg
mov
lea
and
jb
pushl
push
or
pop
mov
mov
fldenv
inc
pop
jno
or
push
push
cltd
popf
pop
inc
outsl
popf
pop
add
adc
out
jb
outsb
pop
out
xor
xor
xchg
or
or
xchg
cmp
scas
xor
mov
sbb
add
rdmsr
mov
pop
xchg
rclb
push
inc
mov
push
lret
stos
fidivl
lea
inc
dec
add
shrb
data16
lret
imul
addl
aaa
cmpsl
adc
pop
xor
cli
sub
or
cmp
out
vcvtsi2ssl
aaa
xchg
lds
xor
xor
ret
cmc
jge
adcl
in
pop
pop
xchg
add
xchg
imul
ja
insb
add
in
stos
notl
dec
mov
lret
sub
xchg
pop
daa
jno
sub
cwtl
cs
mov
outsb
cwtl
test
bound
push
inc
cmpsb
rcl
rorl
pop
test
mov
addr16
int
gs
mov
out
adc
cmp
mov
into
adc
fcomp
add
or
xor
jmp
loopne
adc
test
or
add
mov
pop
cmpsb
mov
ljmp
ljmp
mov
pop
fldcw
push
lcall
adc
mov
adc
inc
jns
xor
fucomp
out
shl
les
cmpsl
sub
xor
sbb
xor
jl
enter
shrl
test
mov
fprem
mov
xchg
cli
cmpl
scas
stos
mov
or
xor
push
inc
aam
es
pusha
andb
mov
pop
outsb
xchg
inc
xchg
or
test
out
rorl
add
add
push
jmp
fiaddl
enter
mov
aad
sahf
popf
dec
xchg
sbb
int
and
sahf
testl
imul
lods
stc
fimuls
outsb
push
or
in
pop
adc
sbb
inc
aam
dec
fyl2xp1
hlt
add
mov
out
in
mov
inc
das
ficompl
test
lds
dec
jno
fs
in
jmp
xor
lcall
xchg
dec
hlt
je
daa
and
dec
repz
cmp
jg
stc
mov
xchg
aam
jo
imul
insl
lret
stos
sub
mov
mov
fidivs
sub
xor
sub
and
push
popa
lcall
inc
mov
pop
hlt
mov
inc
adc
xchg
movsb
das
inc
insl
jne
cmpsl
mov
jo
add
aas
sub
ja
inc
insl
jge
shll
cmp
arpl
sub
in
mov
leave
xchg
ja
push
pop
cmp
push
xchg
in
push
dec
imul
imul
push
fwait
int3
fistpl
adc
mov
mov
test
stos
sub
sub
ljmp
nop
cmp
std
ret
data16
rolb
pop
lods
sub
std
pop
push
add
jl
lds
xchg
cmp
mov
mov
call
sti
pop
mov
adc
test
das
mov
mov
gs
test
cmp
aad
fistpl
cmp
out
pop
cmp
sub
dec
adc
mov
xor
cmp
inc
jno
jmp
cmp
in
fstpt
sub
push
mov
ljmp
cmp
mov
nop
inc
insb
push
mov
pusha
jno
outsb
dec
jne
stos
push
or
mov
lock
xchg
test
pop
inc
outsb
mov
adc
aam
mov
pop
jle
xchg
pop
cli
push
cmp
and
fbstp
add
inc
inc
lahf
xchg
bound
dec
fwait
aaa
add
inc
in
fucomp
adc
inc
pop
mov
cmc
mov
push
dec
in
je
sbb
xlat
icebp
lret
ficoms
out
pop
cmpb
sahf
bound
push
add
jmp
lcall
test
aas
cmp
cmpl
out
in
or
lahf
sub
cmp
sbb
or
adc
bound
pop
shlb
stos
mov
or
int
push
fnstenv
out
push
sbb
fs
jns
repnz
loope
jo
add
pop
scas
cmp
xchg
cmc
insb
aaa
cmc
inc
mov
dec
enter
mov
arpl
sbb
cs
aaa
rorl
lret
incl
sub
and
push
xchg
sbb
rorl
xchg
insb
dec
cmp
and
pop
aaa
lea
and
jae
or
cmpsb
add
xlat
shrl
xchg
or
cmp
rcll
xchg
pop
movsl
inc
mov
into
xor
adcb
mull
pusha
push
sbb
sarb
mov
mov
jge
and
mov
inc
inc
out
dec
dec
mov
imulb
imul
push
pop
cli
and
cmp
fnstsw
pop
cld
inc
push
pop
aas
clc
lcall
lret
mov
outsl
rorl
ror
mov
adc
ljmp
sub
and
or
iret
lods
pop
enter
mov
xchg
ret
add
xor
xchg
lock
out
jbe
xor
mov
xchg
mov
push
mov
push
dec
and
pop
repnz
mov
je
xlat
xor
movsb
sti
stos
fisubrs
push
pop
in
or
sbb
push
jmp
das
scas
jle
pop
xor
sub
cli
push
or
xor
sub
and
inc
fstpt
adcb
ljmp
test
movb
test
std
xchg
aad
sub
aam
test
aas
fsubs
mov
or
xor
jmp
add
popa
mov
xlat
or
sub
pop
and
push
jle
add
xchg
xchg
arpl
jl
push
fdivl
repnz
jne
cmp
add
sbb
cmp
pushf
inc
mov
cs
sub
xor
and
mov
decb
or
push
push
dec
out
pop
ficompl
mov
addl
popf
mov
jmp
xlat
cmp
sahf
outsb
mov
dec
jmp
mov
js
inc
sbb
loop
sbbl
pop
mov
pushf
mov
mov
test
ljmp
into
jbe
scas
rol
loope
dec
iret
pop
nop
add
pushf
dec
xchg
push
push
lret
mov
pusha
das
jge
cmc
data16
inc
jge
add
inc
xchg
add
jno
lea
push
mov
sub
add
std
popf
ja,pt
shrb
in
xchg
or
je
dec
dec
mov
push
push
sub
mov
ja
test
adc
sub
and
jno
ror
nop
sub
out
inc
inc
inc
lret
lret
and
jno
mov
pop
gs
fstl
cli
mov
dec
jge
inc
ljmp
jmp
and
push
in
and
xor
hlt
sbb
popf
jo
and
in
jge
dec
lds
imull
sbb
es
push
push
popa
jno
imul
enter
out
test
sbb
xlat
and
or
mov
stc
repz
xchg
cld
je
aaa
daa
or
or
je
loop
push
ljmp
mov
dec
stos
sbb
test
int3
cmp
push
sbb
sub
mov
xor
lret
insb
shll
inc
repnz
mov
inc
sbb
ret
cli
in
and
sbb
mov
or
push
xchg
jl
scas
adc
dec
dec
pop
add
xchg
xor
inc
dec
lahf
sar
int
into
push
dec
lret
in
fsts
gs
jg
pushf
aas
add
xchg
adc
push
dec
sub
or
clc
xchg
inc
stos
data16
ss
mov
cmp
sbb
cmpsl
ret
push
pop
shlb
test
jns
and
inc
cwtl
out
jb
cmp
ds
movsb
rol
stc
pop
pop
cmpsb
adc
cmpsl
ficompl
pop
fcoml
push
daa
add
cld
data16
ljmp
loope
push
xlat
fiadds
push
inc
sbb
movsb
out
adc
jmp
xchg
pop
mov
mov
and
sbb
jbe
xor
mov
popa
mov
sbb
xchg
loope
mov
out
into
jle
mov
pop
xor
and
filds
mov
mov
cmpsl
cli
pop
rorb
hlt
lcall
add
repnz
fistpl
les
mov
mov
pop
ret
jmp
bound
aas
sbb
push
mov
sub
add
mov
test
cwtl
frstor
sub
add
or
mov
popa
push
fisubrl
mov
push
in
jbe
lcall
lods
nop
sbb
aad
ret
cmc
add
stc
mov
sahf
xor
mov
mov
iret
push
fmuls
int3
mov
sub
lods
sub
out
les
sbbb
es
or
lcall
imul
xchg
xor
or
loope
arpl
pop
mov
sub
std
mov
xchg
mov
mov
je
mov
and
mov
lods
lahf
fidivrs
xchg
roll
das
push
fcmovne
sub
idivl
adc
pop
xor
test
cmp
push
mov
lock
test
call
scas
mov
mov
movb
add
push
lcall
and
mov
pop
ss
mov
pop
mov
jno
cmc
pop
pop
sub
icebp
push
sbb
mov
dec
jl
mov
pop
cmp
push
stos
cmp
clc
nop
ss
mov
mov
cmp
jae
inc
ss
mov
xor
xchg
pop
mov
je
add
jmp
int
jl
sbb
push
outsb
and
js
mov
rcrl
push
dec
pop
jae
cltd
rorb
clc
test
mov
loop
and
jb
and
flds
out
inc
add
fucomi
hlt
subb
and
fucomip
popf
mov
mov
pushf
xchg
inc
push
out
mov
cld
sub
out
lods
fsubr
xor
dec
lods
xchg
jbe
repz
movsl
insl
mov
fwait
movb
stos
aad
mov
imul
inc
xchg
pop
mov
lahf
or
xor
pushf
jbe
stos
jo
sub
jg
push
cmp
cs
mov
push
push
mov
push
push
clc
xchg
xor
push
mov
movsl
scas
mov
mov
jge
es
inc
lcall
jp
adc
jbe
xchg
loope
ss
lock
xorb
adc
or
std
jmp
int
test
cltd
push
ror
insl
mov
cmp
in
and
mov
frstor
push
xchg
js
sub
add
add
mov
push
leave
aam
add
test
lea
cmp
sub
jns
and
adc
xchg
outsb
xchg
push
jbe
mulb
add
mov
jne
dec
sub
mov
fsubs
and
fs
or
mov
sub
lret
out
pop
pop
sbb
jecxz
cltd
aam
jo
int
add
lcall
mov
imul
push
pushf
pop
xor
xor
pop
stc
hlt
dec
arpl
ret
xchg
aam
cmpsl
mov
pushw
scas
adc
jl
fsubl
dec
outsb
jp
stos
fdivl
cmpb
lods
shlb
jecxz
sti
into
sub
int3
sub
daa
pop
mov
pop
jp
xorb
mov
jl
add
and
js
adc
mov
cli
adc
mov
addl
pop
cmp
addr16
adc
pusha
dec
adc
xchg
jecxz
call
sbb
in
loop
insl
and
jnp
les
cld
pushf
mov
into
mov
push
jne
enter
clc
sbb
hlt
jbe
push
iret
ja
jns
hlt
shrl
in
fsubrs
mov
sbb
xor
add
aas
mov
movsb
add
add
mov
popl
sbb
inc
mov
xor
add
roll
jl
mov
push
pop
pop
les
jle
xchg
cmpsb
xor
loop
xor
push
pop
mov
outsb
pop
leave
jl
test
push
or
subl
push
push
arpl
fucom
arpl
jo
jb
pop
lock
mov
jo
inc
shrl
mov
add
adc
fnsave
cs
pop
push
sbb
adc
mov
push
aas
stc
cmp
inc
sub
mov
repz
dec
or
cmc
loop
mov
push
sbb
dec
or
and
jp
dec
js
imul
xchg
std
stos
push
iret
mov
hlt
mov
sbb
pop
dec
in
mov
sbb
cmpsb
repz
mov
cld
cmp
test
sar
inc
test
js
insl
enter
mov
sbb
mov
dec
repz
test
out
gs
in
popa
mov
pop
inc
lods
dec
stos
addr16
pop
ret
mov
cmp
or
inc
mov
xor
dec
popf
lahf
dec
ret
adc
sbbl
mov
mov
dec
pop
cmp
nop
jmp
std
out
in
push
cmp
mov
inc
jg
in
pop
call
lahf
sub
adc
xorb
lods
xchg
fnsave
pop
clc
movb
icebp
pop
daa
push
int3
pop
mov
loopne
xchg
out
pop
out
lock
stos
gs
push
adc
pop
rcrb
xor
std
repz
mov
je
insl
jl
jae
jp
mov
int
fists
inc
mov
fistps
out
scas
xchg
test
cmp
xchg
mov
out
adc
xlat
pop
jno
pop
cs
sub
dec
xor
enter
shlb
push
pop
sbb
mov
sbb
shlb
scas
and
out
daa
mov
xor
test
jle
fxch
xchg
loop
subb
xchg
mov
dec
mov
inc
add
push
rorl
insl
cmp
xor
stc
pop
aaa
mov
pop
fists
rclb
mov
mov
test
mov
shll
cwtl
mov
xchg
push
xor
imul
and
in
push
daa
push
sbb
xor
xor
cmpsb
mov
int
and
mov
pop
ljmp
data16
jno
popa
mov
xchg
sti
sar
inc
dec
sbb
push
sarl
lock
or
sahf
adc
push
int3
sbb
mov
add
dec
enter
filds
lea
cwtl
pop
data16
iret
stos
adc
pop
sbb
insb
sub
xor
push
cwtl
mov
pushf
cmp
and
fdiv
or
out
out
adc
test
out
or
adc
xor
mov
sub
or
inc
rclb
lea
add
gs
pop
adcb
sbb
fucomip
pop
add
arpl
repz
and
mov
out
sub
and
nop
sbb
xchg
jb
cmpsb
aaa
lock
mov
mov
imul
dec
je
inc
ljmp
dec
jmp
and
jp
xchg
imulb
stos
repz
in
xchg
gs
or
sbb
cmpsb
clc
adcl
mov
aas
inc
in
cmc
lret
loopne
jbe
ficoml
rorb
xchg
imul
or
inc
sbb
adc
cmp
sbb
sub
leave
cmc
mov
popf
dec
pusha
jmp
imull
xor
push
fidivs
cmpsl
call
jb
pop
and
mov
insb
stos
insl
or
outsb
stos
sub
push
mov
mov
lret
popa
mov
sub
je
mov
jmp
dec
inc
xor
push
icebp
je
add
pop
push
repz
andl
movb
int3
jp
jne
pop
jge,pn
shl
aaa
xor
dec
mov
test
xchg
xchg
leave
ja
ja
addr16
cmpsl
icebp
xor
adc
sbb
adc
cmpsl
scas
loopne
in
push
lea
xor
or
mov
dec
scas
repz
sub
and
and
test
pop
xchg
push
mov
dec
rol
jl
adc
lret
jl
imul
aad
adc
test
bound
fsubrs
inc
xchg
inc
xchg
pusha
enter
and
ljmp
int
or
jae
test
adc
pop
outsb
fucomp
dec
and
xchg
lds
jge
scas
es
jecxz
xchg
push
in
push
lcall
fmul
sub
lds
pop
adc
xchg
sbb
jb
fwait
jp
loop
pop
push
ret
push
adcl
mov
lock
dec
mov
adc
add
test
sti
outsb
push
movsl
adc
nop
shrb
pop
pop
adcb
lret
or
mov
repnz
or
jg
popf
clc
inc
pop
adc
xchg
xchg
mov
call
mov
rcrl
dec
popa
mov
rclb
push
inc
sub
sbb
cmpsl
mov
and
jb
cs
cwtl
adc
add
sbb
mul
pop
insl
cltd
pop
jmp
cmp
sbb
stos
push
dec
add
mov
mov
adc
fsubs
pop
or
les
jp
pop
rol
pop
sub
xchg
xchg
mov
pop
jge
mov
cmpsb
les
aas
aaa
orl
jae
sbbl
add
sub
adc
scas
inc
sbb
add
faddp
inc
ret
push
sub
jns
sbbl
adc
in
pop
ljmp
xchg
ja
je
movsl
hlt
outsl
fsubrs
mov
mov
mov
movsl
pushf
pop
arpl
out
ficomps
push
sahf
mov
xlat
dec
pop
outsl
xchg
mov
push
mov
cwtl
sub
outsb
cld
add
adc
cli
adc
mov
test
cltd
xlat
mov
push
sti
ret
loope
adcb
dec
cwtl
ljmp
in
test
ljmp
rcr
xchg
int
shrl
lret
int
push
jmp
xchg
int3
xor
inc
push
int3
mov
mov
dec
pop
cmp
shll
stos
dec
lret
fstpt
testl
push
lcall
pop
fildl
aaa
dec
inc
add
mov
incb
push
xor
adc
out
lds
arpl
xor
aam
jns
cmp
out
mov
adc
gs
mov
add
mov
test
loopne
xchg
aam
pop
imul
inc
repz
insb
cmp
or
pushf
std
inc
or
pop
fs
lds
pop
pop
pop
adc
and
leave
cmc
pop
int
bound
dec
hlt
sub
sbb
dec
jns
pop
fiadds
loop
mov
loopne
rcrb
lods
mov
pop
into
pop
mov
icebp
pop
dec
jmp
xor
cmc
sub
xchg
lods
sbb
ret
call
fists
pop
mov
test
cwtl
mov
dec
lret
mov
cs
xchg
fmuls
rcrl
outsb
jecxz
aaa
and
push
xchg
lahf
repz
out
cli
repz
mov
ljmp
mov
scas
iret
sub
fsubr
xor
adc
adcl
arpl
js
fcoms
jae
dec
and
inc
add
mov
push
adcb
rcll
jp
mov
in
add
dec
dec
pusha
mov
imul
sbb
gs
les
bound
je
add
mov
pop
scas
inc
fmul
lcall
dec
aas
cld
and
jmp
mov
and
push
pop
cld
psubw
in
loopne
bound
jecxz
xchg
arpl
fs
mov
xor
dec
cs
ror
arpl
orl
or
imul
inc
loope
pusha
inc
or
jl
lret
mov
and
js
ds
cmp
xor
bound
out
nop
fcmovnbe
das
inc
or
int
decb
insl
cmpsl
fadds
mov
mov
call
inc
iret
repz
jns
pushf
hlt
mov
call
fisubs
or
lret
xchg
movsl
imul
jnp
shlb
mov
fcompl
mov
cmp
cli
pop
dec
out
stc
inc
mov
cmp
cs
xor
push
pop
fisubrl
sbb
fs
lcall
add
test
enter
add
sub
mov
xlat
inc
xchg
stos
or
add
dec
aam
cmp
mov
xor
aad
fidivl
mov
push
cmc
das
pop
sahf
mov
addr16
out
add
es
cwtl
add
xchg
orl
push
inc
xlat
shlb
hlt
mov
ret
cmp
pop
mov
xchg
cld
mov
sbb
movsb
loopne
jmp
test
out
insl
add
fistpll
or
clc
fwait
cld
xor
xchg
aad
mov
xchg
je
test
inc
lds
push
jo
int3
cmp
mov
movsb
cltd
arpl
lock
pop
cmp
add
jne
inc
push
ret
repnz
jge
adc
out
pop
ljmp
addr16
or
ret
add
scas
add
sub
or
mov
jecxz
xchg
in
mov
pop
ror
cmc
sbb
outsb
cmp
movsl
jns
fstl
popf
int
shlb
lods
or
mov
scas
sub
mov
mov
cs
inc
rcrl
lea
mov
aad
fwait
dec
addb
dec
movsl
and
fimuls
in
cmc
inc
incl
or
fwait
cld
leave
xchg
pop
into
hlt
fucomi
pop
or
mov
ret
fstpt
dec
mov
rorl
in
fldl
sub
mov
lret
lcall
lds
imul
lods
addb
out
pushf
test
jecxz
fstps
sbb
jle
hlt
mov
jmp
jg
or
jl
mov
mov
shrl
ljmp
sub
add
cmpsb
call
int3
cs
popf
inc
pusha
xchg
rclb
sahf
mov
or
addr16
pop
call
sti
xchg
mov
nop
cmpsl
dec
mov
inc
mov
jg
pop
dec
sbb
jp
inc
aad
ret
popa
repz
outsb
xor
loopne
mov
gs
sbb
xchg
out
dec
dec
jmp
roll
js
pmaddwd
stos
subl
je
xchg
mov
loop
aaa
cmpsb
flds
adc
xchg
mov
adcl
sub
rolb
ja
movsb
lret
cmp
jne
rol
cmp
pop
pop
repz
imul
dec
fists
arpl
pop
push
cs
mov
int
or
push
jne
pop
mov
and
and
jbe
test
call
mov
hlt
test
mov
rclb
inc
cmc
lods
pop
xor
xchg
js
sbb
mov
jne
lret
in
lret
popa
popa
stc
pushf
mov
pop
in
fs
dec
mov
push
sub
inc
lds
push
les
xchg
clc
xor
dec
orl
mov
sbb
dec
ss
jge
xchg
mov
shll
cwtl
mov
out
icebp
pop
xchg
shr
xchg
cmovae
and
loope
das
aam
nop
sti
nop
push
mov
fwait
leave
jg
xchg
lds
adc
fld
pcmpgtd
add
fisttps
adc
outsl
push
mov
jne
sahf
cmp
psubsw
das
sub
adc
sub
sahf
pop
push
test
adc
in
inc
mov
cld
inc
xor
cmc
adcl
xchg
mov
je
rclb
cmp
shr
fisubrs
outsl
in
adc
sbb
or
aam
cli
adc
jns
pop
inc
xor
xchg
inc
xchg
xchg
and
sub
push
mov
push
pop
stos
dec
inc
mov
sub
call
fnstsw
and
jo
xor
adc
cmc
in
mov
in
cmp
add
dec
cmp
and
cltd
fisttps
jl
mov
or
inc
dec
jnp
jnp
xor
cwtl
in
sahf
ljmp
addl
cmp
sbb
shll
lock
pop
or
cmc
sahf
sar
loopne
sarl
mov
xor
add
in
jecxz
addl
xchg
mov
repz
mov
mov
cmpsb
sub
inc
pop
repnz
or
mov
push
icebp
jnp
push
cld
addr16
movsl
pop
pop
ss
xlat
dec
mull
xchg
test
aaa
xchg
scas
lahf
mov
popf
pop
and
mov
lret
adc
aad
into
push
xchg
pop
das
divl
mov
jg
xchg
aas
mull
sub
and
out
pop
iret
lcall
xchg
cwtl
stc
subb
push
inc
hlt
pop
sub
outsl
push
dec
sub
cwtl
adc
fwait
pop
inc
shlb
or
loope
dec
stc
in
sbb
out
out
sub
xor
mov
shrl
mov
fmuls
cmp
jge
daa
and
jae
pop
pop
and
xchg
xchg
loop
jbe
jo
pop
xchg
loop
pop
jle
dec
inc
data16
addr16
fcmove
rorl
aad
or
popa
sub
insb
dec
pushf
sbb
and
pop
sub
sbb
scas
out
ret
ds
mov
nop
mov
sahf
ret
cmp
push
mov
mov
mov
and
and
pushf
es
xchg
push
and
add
fdivs
jo
ret
enter
int3
mov
jnp
mov
jg
clc
inc
push
pop
fnstsw
add
or
aaa
mov
cmp
aas
ja
or
lock
sub
mov
xor
divps
fistl
int
rolb
or
subl
lock
std
dec
out
and
mov
loop
adc
xchg
and
sub
push
ficoml
rcrl
int3
jl
lcall
cwtl
loope
cmp
imul
mov
cmp
or
mov
xor
dec
dec
sub
xchg
inc
jns
hlt
in
adc
hlt
stos
lods
gs
add
std
lea
inc
std
pop
or
push
std
mov
xlat
mov
pop
test
xchg
add
addr16
mov
ret
scas
pop
data16
sbb
mov
inc
into
add
xchg
mov
push
push
mov
cmc
mov
adc
das
or
enter
dec
aas
mov
jae
and
lret
loop
mov
aam
cmp
xchg
push
in
inc
pop
stos
rorl
notl
cmp
inc
xor
sub
cmpsb
xor
mov
cmc
jae
mov
test
fistps
es
movsl
jecxz
adc
lea
xor
cs
inc
shr
and
sub
insl
mov
dec
adc
repnz
xchg
ret
aad
fsubs
push
inc
cmp
test
out
mov
lret
cs
mov
in
pop
mov
loop
xchg
into
movb
fisttps
pop
out
sub
aas
push
fisubrs
out
int
mov
or
dec
repz
fldcw
xchg
fwait
clc
jmp
mov
loope
xchg
pop
clc
lea
popf
pop
movsb
mov
pop
fwait
pusha
cmp
adc
add
or
ret
in
mov
cltd
cmp
push
dec
lods
dec
push
mov
fisttps
push
push
test
leave
lods
xchg
fildll
jge
cmpsb
jmp
notl
imul
lods
movsb
in
dec
stos
pop
enter
jns
and
nop
pop
lods
or
int3
mov
stc
cmpsb
inc
into
add
jecxz
adc
mov
fs
push
sbb
pop
xchg
push
jmp
push
cwtl
adc
stos
in
lcall
sbb
pop
mov
mull
adc
fidivs
and
fwait
cmp
inc
es
mov
loop
loopne
add
dec
or
sub
xchg
movsl
xor
das
mov
stc
sti
dec
inc
cs
sbb
cmc
icebp
aaa
inc
gs
subb
js
mov
ud0
pop
push
lret
pop
clc
mov
or
xchg
jle
push
dec
xchg
setb
sub
out
pop
in
pushf
dec
addr16
pop
in
cmp
mov
aas
sub
xor
jge
xchg
adc
dec
push
mov
jnp
inc
aas
sti
inc
mov
and
add
ljmp
test
rcll
repnz
rcrl
mov
mov
push
jge
sub
lahf
jb
jno
adc
sub
jp
repnz
ds
in
pop
push
jl
pushf
mov
dec
imul
push
push
shrl
aaa
lahf
cld
mov
ror
jge
shll
test
aam
xchg
and
xor
sub
inc
fsin
in
outsb
pop
xlat
mov
sbb
sub
jbe
arpl
ljmp
sub
adc
add
xchg
testl
movsl
push
cld
dec
aas
mov
mov
imul
test
aaa
gs
repz
scas
cld
les
cmp
dec
insb
pmulhuw
int
fdivl
scas
fimuls
insl
movsb
push
jp
push
clc
inc
dec
inc
stc
bound
pop
push
shl
or
sub
fcmovnb
aaa
inc
dec
fs
mov
lret
mov
repz
pop
int
fsub
test
cmp
jnp
gs
addr16
mov
mov
adc
jno
int
mov
sub
xor
inc
aad
push
scas
lds
sbb
sub
insl
xlat
aad
mov
lods
and
mov
mov
and
ja
lret
jbe
mov
dec
and
cmp
pop
les
data16
and
movsl
cmp
push
jne
mov
sbb
in
xchg
test
ss
repz
dec
cmp
cwtl
xor
negl
push
lret
mov
jmp
stos
lea
stos
xorb
lahf
dec
push
das
and
xchg
dec
mov
jno
lahf
ds
test
jb
mov
icebp
lds
aas
pop
sbb
xchg
mov
mov
xchg
in
inc
pop
sti
movsl
les
insl
aam
and
mov
popa
out
sub
mov
sbbb
jle
add
ret
mov
pop
push
cvtdq2ps
and
adc
xor
adc
arpl
daa
cwtl
xchg
pop
sub
loop
push
push
test
dec
xchg
cmc
nop
mov
stos
and
insb
cmpsb
mov
cmp
lds
ret
xor
mov
movsb
xor
shll
scas
aad
je
cmpsl
pop
dec
pop
subb
lcall
insb
jnp
leave
adc
cwtl
add
ficompl
addr16
sub
push
cmp
adc
lds
xor
int3
add
cmpsl
mov
add
add
push
fisubrl
in
out
pop
and
push
pushf
xor
sbb
pop
pushf
xor
in
fbstp
or
iret
adc
sarl
subb
imul
dec
inc
mov
lds
cmp
cmp
mov
xor
jae
or
cmpsl
xor
sub
push
add
addl
out
scas
xchg
pop
inc
lea
xor
push
sub
cmp
cs
push
popf
je
gs
mov
pop
push
idiv
dec
push
es
addr16
xlat
xor
aad
mov
sti
popf
mull
mov
into
cli
jecxz
je
outsb
mov
dec
cmpsl
mov
imul
test
jmp
pop
fucomip
into
stc
dec
dec
xchg
hlt
stos
std
push
aaa
mov
add
dec
jp
nop
arpl
lock
dec
mov
adc
je
xor
pop
in
or
repnz
dec
ja
out
filds
xor
out
adc
loopne
popf
xchg
pop
jle
imul
repz
into
filds
lret
fdivp
fisubrl
xchg
test
pop
rcrl
xchg
int
push
dec
push
jge
lcall
insb
pop
addr16
add
or
in
jnp
push
add
sbb
cmp
xchg
sbb
mov
cmpsb
enter
pop
test
repz
sbb
bound
xor
push
cmp
icebp
pop
imul
mov
lret
popf
popa
cmpsb
fsubl
mov
push
inc
movsb
fwait
add
fmuls
and
jns
in
aas
enter
fs
aas
push
cmc
push
test
test
dec
int3
cmc
aam
xor
fyl2x
jp
faddl
xchg
rcl
or
je
adc
sub
dec
xor
xor
nop
push
add
pop
cmc
cmp
mov
outsb
cs
nop
cmp
sahf
lret
xor
dec
pushf
push
stos
cwtl
shl
jne
jno
in
jmp
mov
adc
dec
outsl
and
inc
xchg
add
leave
mov
es
stc
cli
ret
out
or
xchg
jg
test
push
xchg
cmp
cmp
pop
movsb
rcrl
das
xor
sbb
push
inc
jp
insb
cmc
push
dec
push
es
push
xchg
jno
dec
xchg
fdivs
cmpsl
scas
je
xor
iret
lret
cmp
cmp
out
je
mov
xor
fmul
mov
bound
popf
mov
adc
and
pop
or
pop
sahf
test
pop
inc
and
cmp
adc
into
fstl
xchg
jb
xchg
test
jo
and
xor
or
and
add
xor
repnz
movsb
xor
push
mov
divl
loop
lret
lock
es
icebp
cmp
add
lret
hlt
inc
test
sbb
jp
xchg
dec
testb
outsb
loope
popf
outsb
rcl
movsb
sub
mov
daa
mov
test
inc
faddl
sbb
fnstcw
test
jo
adc
test
data16
ror
mov
aas
scas
jne
imul
and
mov
push
addr16
xchg
inc
fstpl
pop
leave
jmp
jp
xchg
insl
add
add
sbb
mov
cmpsb
xor
dec
add
int3
lret
mov
int
pop
leave
dec
jne
mov
mov
push
and
pop
add
fdivrs
cmpsb
mov
mov
sub
std
sbb
inc
arpl
roll
loope
add
lret
cmc
ljmp
mov
sub
maskmovq
frstor
hlt
and
sbb
sti
movsl
and
movsb
xor
xchg
adc
jae
das
push
xor
idivl
push
cmp
les
imul
shll
add
xchg
in
jno
pop
mov
inc
jmp
imul
adc
ljmp
and
cmpsl
test
mov
ret
inc
pushl
lret
cli
stos
jnp
jecxz
in
xor
mov
icebp
add
inc
xor
cmpsl
les
test
lds
xor
fs
sbb
sbb
cmp
aas
inc
dec
aad
push
nop
into
popl
pop
dec
sti
xchg
mov
xchg
stos
add
mov
jecxz
sub
push
and
imulb
or
lock
in
cmp
fldl
cmp
dec
cmp
loope
pop
dec
adc
xchg
lock
jnp
cwtl
pop
mov
push
sbb
cltd
xor
xor
mov
mov
in
aam
je
imul
stos
mov
and
mov
hlt
xor
pop
and
jbe
push
mov
into
in
push
sar
loopne
xchg
push
inc
nop
xor
mov
ds
lcall
mov
push
out
and
add
addr16
les
std
shr
out
imul
leave
and
subl
dec
movsl
jg
cmpsl
mov
fbstp
mov
jo
jl
cmp
in
xchg
jge
lret
mov
mov
xchg
sbb
ret
decl
lods
mov
push
mov
lods
bound
call
mov
clc
lds
or
xlat
cmp
xchg
xchg
mov
jmp
dec
insl
mov
sbbl
repnz
mov
jmp
inc
add
mov
and
adc
popf
icebp
bound
stos
sbb
idivl
pop
test
xchg
adc
popa
mov
xchg
sub
inc
or
push
adc
cmp
mov
les
mov
aas
repz
inc
ds
stc
jge
mov
fsubrl
and
cmp
popf
pushf
xchg
lds
xchg
shll
mov
fidivrs
rorl
sbb
jmp
adc
aaa
cmpsl
mov
and
push
xchg
jo
mov
xor
stc
in
lahf
movsl
inc
stos
loopne
mov
repz
xor
add
dec
sub
mov
test
dec
repz
jg
jne
pop
bound
xor
loopne
in
loope
inc
cmp
sub
xor
mov
movsl
ss
inc
cmpsl
inc
jns
fstps
fistps
dec
loopne
scas
pop
push
into
mov
mov
dec
mov
pop
testb
subl
adc
shll
sub
lahf
lahf
and
push
jl
aas
cmp
negb
mov
ss
or
dec
pop
cmpsl
in
pop
push
loope
push
out
jl
push
sbb
inc
aaa
mov
ja
leave
jae
pop
jg
push
rclb
pop
stc
cmp
lds
xlat
pop
je
out
xor
daa
xchg
add
andl
sub
imul
icebp
mov
stos
mov
mov
sub
mov
fisttpl
jge,pt
sbb
xchg
sarl
cmc
sbb
mov
out
push
mov
add
jg
mov
xlat
shlb
xchg
insb
loop
aam
cli
inc
nop
das
jmp
lock
xchg
pop
mov
mov
or
pop
pop
cmp
loopne
cmp
jecxz
out
dec
aas
pushf
pop
pop
pop
xchg
test
das
stc
sub
sar
mov
pop
push
enter
fst
bound
enter
arpl
push
insb
gs
enter
sbb
pop
addr16
ds
movsb
pop
add
lods
cltd
push
or
dec
out
shr
push
outsl
aad
in
clc
call
insb
add
jp
mov
scas
inc
stos
xchg
in
sahf
and
pop
xchg
mov
jmp
stos
jmp
jbe
lds
pop
lcall
sub
pop
sbb
pop
cmp
jge
and
xorb
jo
sbb
sbb
cmc
mov
push
pushf
add
cs
out
xchg
mov
fdiv
or
ljmp
jmp
mov
cmp
dec
mov
xchg
cli
aas
sub
pushf
stos
sub
lret
xlat
aas
out
sahf
xchg
in
push
in
or
or
out
jmp
pushf
and
sub
mov
pushf
std
xchg
enter
xchg
mov
jb
xchg
xor
jno
and
sbb
jl
ljmp
mov
arpl
rclb
in
shlb
test
lock
push
cmc
aad
or
dec
pop
fnstcw
xchg
aad
ds
pop
std
movsb
dec
pop
clc
negb
icebp
mov
push
test
shlb
sahf
push
jmp
inc
and
test
imul
out
sbb
cmp
xchg
das
push
out
push
cmpsb
push
or
int3
aam
data16
ds
mov
mov
push
jmp
lret
and
imul
xor
push
add
lret
mov
fistpll
mov
nop
inc
movsb
clc
popf
add
lea
push
pop
add
push
lahf
pop
mov
mov
pop
xor
lret
jmp
jo
fimull
and
sub
xchg
xlat
adc
lock
inc
insb
icebp
xchg
sbb
xchg
sbb
into
sbbl
pop
fadds
hlt
sbb
cs
rcll
jbe
pop
mov
jbe
out
dec
aas
mov
jae
jge,pn
mov
dec
imul
pop
movsb
xor
fmuls
les
frstor
gs
stos
sahf
add
out
sub
lods
xchg
pop
and
fidivrs
xchg
lret
sbb
lahf
ss
lret
test
dec
stos
sbb
cmp
rcll
outsb
add
pop
push
incb
dec
iret
fcomps
jg
push
push
iret
inc
inc
add
sti
cmp
and
or
mov
xchg
lds
mov
push
outsb
adc
roll
ds
push
shlb
sti
int
out
or
mov
arpl
dec
out
xor
dec
jae
fcmovb
pop
leave
add
rorb
call
adc
mov
add
lods
push
roll
outsl
cmpsb
add
cmp
sub
loop
sahf
inc
das
sbbb
aad
add
das
fdiv
movsl
sbb
movsl
out
sbb
sub
and
rcrl
pop
clc
ret
and
mov
jecxz
add
cmpsl
adc
mov
mov
ficomps
stc
fidivs
dec
mov
sahf
push
push
sub
jbe
push
adc
fcmovne
cmp
outsb
mov
adcb
mov
imul
jp
cwtl
ret
stos
or
adc
xorb
lret
mov
cs
jl
jo
dec
insb
scas
xor
xor
mov
scas
sub
push
adc
dec
push
scas
push
mov
jmp
mov
out
pushf
loope
mov
outsb
insl
sub
xchg
out
rcl
jno
sub
jle
or
outsb
ror
xlat
push
mov
popf
cmpsb
mov
notl
clc
cmp
mov
outsl
jo
es
pop
cwtl
adc
ss
mov
jl
mov
xchg
stos
loope
out
fildl
nop
sub
sbb
dec
fldln2
fwait
mov
push
cwtl
cmp
mov
xlat
xor
inc
lahf
and
jbe
int
lret
sbb
dec
inc
push
in
jle
cmp
fdivr
jl
out
movsb
push
lret
loop
jl
nop
cs
dec
fwait
mov
adc
xor
and
adc
out
xchg
les
cmp
jns
fildl
mov
mov
cmc
add
hlt
xchg
or
xor
pop
pop
xorl
mov
and
cs
add
sbbl
inc
pop
sahf
dec
imul
add
aad
and
pop
xchg
mov
xor
test
sub
dec
push
popa
test
pop
xchg
loop
push
push
mov
inc
movsb
jp
fdivrs
cmp
outsl
push
outsb
or
cltd
dec
out
cmp
cmpsl
mull
loop
test
leave
filds
imul
and
lods
and
mov
mov
cmp
cli
ret
mov
sti
inc
out
jecxz
mov
sub
mov
add
jbe
cltd
mov
shrl
lcall
sub
cmp
push
push
push
add
cmpsl
shll
ja
jae
push
popa
cs
outsl
fsubrs
add
mov
push
mov
out
lret
adc
inc
add
movsl
outsl
aas
popl
lcall
add
movsl
pop
dec
and
adc
sbb
adc
das
sub
inc
mov
rcrb
movsb
shll
mov
je
add
sarl
mov
iret
lods
xchg
push
add
adc
jbe
mov
es
adc
inc
jbe
fistpl
jge
sub
aam
xor
cmp
xchg
shl
cmc
lds
pop
fadd
loopne
dec
cld
ret
cltd
aam
gs
ds
and
sbb
daa
pushf
xor
fdiv
jnp
add
and
les
pusha
outsl
lods
es
orb
xchg
inc
inc
xor
test
dec
fnstenv
jmp
movsl
sub
insb
aaa
push
in
dec
dec
outsb
aaa
das
inc
fisubrl
xchg
shll
gs
mov
mov
addr16
and
lods
sub
cmp
push
mov
into
mov
rolb
fcoms
dec
add
sti
dec
sub
xchg
lcall
cmpsl
push
scas
inc
or
sub
mulb
push
mov
cltd
out
repz
mov
and
jbe
push
pop
sub
jae
cmp
mov
xor
xchg
xchg
and
dec
popf
mov
cmp
lahf
mov
xlat
mov
test
mov
scas
jge
sbb
repnz
sbb
inc
fwait
xchg
dec
or
push
add
leave
dec
cmp
pop
daa
arpl
dec
cmc
pop
cli
filds
cwtl
add
push
cmpsl
xor
jno
xor
mov
sub
dec
ret
sbbl
push
sub
push
xchg
adc
out
stc
pop
cltd
jg
into
aad
sub
ror
xor
subl
inc
jp
xor
xchg
jno
das
sbb
adc
and
mov
mov
cmpl
enter
mov
push
ja
loop
iret
dec
and
iret
jecxz
pop
cmp
insl
xchg
lcall
rcrb
push
sbb
ljmp
dec
pop
sbb
pusha
lcall
sub
pop
or
dec
and
pop
bound
jl
das
or
sub
cmp
leave
aaa
jae
sub
xchg
mov
jo
add
jnp
or
mov
pop
pop
pop
int
mov
ret
push
inc
js
xchg
ret
dec
mov
jae
xor
mov
inc
loop
stos
jl
iret
jg
imul
orl
daa
and
jge
gs
mov
sbb
aad
cmp
test
fidivrs
push
lcall
or
sahf
imul
mov
or
aaa
add
push
jns
in
pop
fs
test
cmp
addr16
jl
icebp
movsl
sub
pop
repz
adc
je
adc
cmp
xchg
aad
enter
hlt
cmp
cmc
mov
outsl
mov
rorl
pop
mov
xlat
sub
test
ret
jae
or
std
mov
push
das
pop
dec
push
stos
mov
push
rclb
pop
jb
nop
or
iret
and
mov
jae
or
add
mov
inc
xor
xchg
bound
call
adc
mov
mov
xchg
dec
xchg
push
sub
scas
insb
push
push
inc
add
inc
rcll
test
movsl
out
pop
mov
test
test
std
sbb
inc
mov
pop
sub
adc
mov
int3
iret
enter
add
les
loop
adc
dec
mov
mov
daa
decb
jle
sbb
mov
lahf
push
imul
jbe
pop
rcl
sti
and
popl
jp
dec
xor
nop
je
das
movsl
movsl
inc
cmpl
ss
mov
lcall
das
popa
xchg
inc
fdivs
sbb
sbb
cmp
push
sbb
mov
in
mov
int3
stos
pop
jp
pop
stos
push
test
inc
hlt
push
mov
mov
push
inc
xchg
fisubrs
jbe
xor
ja
clc
fisubrl
mov
test
sub
fsubrs
loope
dec
xchg
xchg
mov
lock
imul
cmp
jnp
inc
inc
andl
fs
mov
cmp
aaa
sub
sti
and
push
or
push
push
cwtl
sbb
push
imul
hlt
daa
js
jmp
cmpsl
lods
mov
fisttpll
or
lret
pop
loope
stos
jno
movsb
xchg
fadd
sbb
imul
stos
sbb
sub
mov
push
add
sbb
test
addr16
dec
repnz
imul
and
int3
rolb
test
mov
roll
lods
dec
inc
loope
add
sbb
lods
inc
pop
push
mov
push
sub
jle
cmp
fnstsw
mov
mov
xchg
fwait
add
icebp
mov
aaa
mov
and
jecxz
popf
mov
loop
mov
xor
paddd
and
test
mov
jne
xor
lret
jmp
aam
orb
je
ja
int
repz
sti
mov
and
imul
and
data16
push
subl
push
push
xchg
pop
cli
repz
dec
pop
sub
mov
test
and
mov
pop
enter
dec
or
add
repnz
daa
lea
jnp
mov
adc
ret
leave
push
xor
cmp
cmp
ja
testb
mov
mov
xchg
mov
or
lahf
xor
fisttps
cli
and
adc
test
add
lret
adc
add
adc
andl
pop
sub
test
pop
jmp
xor
or
jae
cmpsb
jb
sub
xor
enter
jbe
aas
shl
mov
fisttpll
mov
mov
adc
jbe
hlt
fists
and
cmp
iret
adc
out
push
aad
les
cmp
cmp
mov
push
pop
push
cmp
out
sbb
cmpsl
cmp
mov
outsb
jg
xor
test
int3
cmp
fsubp
sub
outsl
rcr
jg
dec
push
mov
mov
lods
mov
scas
jmp
push
jb
push
dec
push
orl
sarb
rol
cmp
mov
pop
pop
sarb
scas
cltd
jp
xchg
out
ja
jnp
push
inc
pop
jno
cs
loop
mov
sti
and
in
fmul
cmpsl
and
inc
rorb
fs
pop
pushf
cld
pop
cmp
insb
mov
cmp
dec
mov
mov
hlt
mov
repnz
test
pop
les
cwtl
xchg
sbb
cmp
scas
cmp
js
ret
xchg
adc
aas
dec
mov
daa
ds
mov
cmp
sub
mov
data16
aas
inc
push
enter
push
push
fcmove
lahf
sub
es
icebp
cli
dec
add
jl
gs
in
adc
ja
and
mov
fdivs
mov
arpl
cmp
sub
insb
je
or
clc
fdivs
adc
ss
push
cmpsb
inc
aad
pop
sbb
psubusb
std
pop
cmp
sub
adc
or
loopne
ds
xor
push
pushw
adc
adc
cld
push
pop
push
sbb
nop
mov
xchg
xchg
test
push
pop
mov
xchg
aaa
lds
gs
jbe
sbb
pop
dec
or
enter
subl
sti
push
call
xor
mov
mov
fld
insb
inc
jg
jecxz
jbe
cmp
ret
repz
lret
inc
fnsave
pop
cmp
push
aad
jmp
ja
ret
push
pushf
js
cmpsl
repnz
pop
std
add
stc
ret
sub
aad
adc
pop
sbb
nop
xor
ja
test
in
rolb
int
or
mov
adc
mov
xchg
popl
dec
push
and
cmp
push
sub
cmp
add
xor
shld
les
jno
in
aam
mov
cmpsb
cmp
add
sbb
xchg
fstpl
pop
outsl
mov
divl
mov
sbbl
pop
in
scas
imul
sarb
std
arpl
in
clc
test
movsb
in
jb
jl
bound
pop
mov
push
xor
mov
or
inc
jle
in
add
inc
inc
fwait
aad
push
sub
jl
sbb
mov
mov
push
inc
arpl
test
adcl
lret
pop
into
mov
adc
iret
xchg
out
cwtl
and
cmpsb
shll
js
aam
imul
jg
pop
lods
test
mov
jne
cmp
inc
inc
aas
push
in
jmp
stos
ror
inc
into
lahf
mov
stos
callw
jg
push
push
lock
or
jle
sbb
lahf
pop
xchg
and
and
mov
adcl
gs
cmp
cld
inc
lds
cmc
xlat
sbb
xchg
popf
pop
cmp
dec
fcompl
dec
or
roll
xchg
aam
and
mov
call
lods
inc
shr
les
mov
hlt
jns
stc
or
movsl
mov
mov
test
xor
adc
pop
loop
insb
xorl
mov
aas
fidivrs
pop
mov
dec
shll
in
pusha
cmp
mov
call
ja
or
and
dec
aam
xchg
fsubrl
add
testb
push
repz
jle
insb
jae
popl
outsb
sub
in
jl
stos
bound
sbb
ljmp
icebp
sbb
test
push
push
xor
int3
dec
lret
pop
mov
mov
sbb
push
mov
in
movsl
mov
out
sub
stos
fnclex
inc
xor
or
outsl
es
shl
test
sub
inc
cmp
scas
xchg
stos
push
cmp
iret
sbb
adc
in
jne
dec
xchg
es
scas
lcall
rcrl
pop
addr16
and
mov
or
stos
imul
inc
enter
mov
mov
pop
jle
lcall
push
lret
inc
cmpsb
sbb
je
adc
icebp
mov
sub
jnp
dec
std
rorl
in
mov
mov
add
lods
out
pop
es
pushf
aaa
xor
mov
push
mov
add
push
out
add
mov
outsl
sub
mov
mov
or
sbb
iret
mov
rorl
cmpsb
jmp
lea
notl
mov
pop
cmp
dec
mov
sahf
popa
jecxz
lods
push
leave
mov
mov
repz
ljmp
arpl
dec
push
sub
pop
mov
pop
mov
jbe
roll
xchg
adc
lahf
mov
or
or
add
es
bound
adc
adc
jne
repnz
xlat
push
add
or
cld
fwait
or
push
dec
sbb
sub
xor
das
jno
cmc
enter
jmp
out
ret
mov
dec
xlat
loope
inc
mov
pop
insb
mov
out
mov
pushf
out
ja
dec
out
mov
jp
in
sahf
in
inc
arpl
nop
cmp
idiv
inc
mov
rcrb
xor
dec
sub
fistpll
hlt
jmp
and
cltd
mov
mov
dec
xor
lret
sti
aad
xor
mov
mov
add
lods
mov
sub
sub
ss
andl
mov
sbb
or
xor
test
push
pop
xchg
ja
xor
or
shl
mov
push
sti
sbb
loop
test
scas
pusha
cmc
jg
addb
lcall
jne
push
ja
xchg
cmp
call
mov
mov
mov
lcall
fistps
inc
inc
mov
mov
jns
jo
lcall
mov
mov
cld
ss
rcrl
mov
aaa
shll
repnz
mov
or
cmp
xor
ja
popf
adc
pop
push
sub
push
std
movsl
js
jno
mov
xchg
mov
loopne
and
ret
js
mov
neg
lods
adc
les
ljmp
test
andl
xchg
cmp
mov
pop
lds
leave
dec
ds
mov
and
adc
cwtl
push
mov
adc
push
fisubl
push
or
fnstsw
push
pop
pop
outsl
out
sbb
les
adc
stc
ds
jae
cmp
inc
sbb
xor
pop
call
mov
jno
insb
fdivr
mov
adc
jp
mov
mov
sub
push
lods
fisubrl
cmpsb
test
sbb
mov
jl
flds
add
xor
push
or
scas
iret
or
test
push
test
inc
shlb
repnz
pop
cmc
out
dec
fs
pop
sub
repz
pop
or
dec
stos
mov
or
repnz
mov
out
outsb
cmc
icebp
pop
negb
pop
mov
lods
fwait
popf
adc
mov
dec
xor
pop
lods
adc
inc
pusha
sti
or
pop
pop
push
pop
pushf
and
sub
xchg
mov
sbbb
push
outsl
and
push
pop
adc
jmp
in
mov
or
mov
sbb
jge
xor
add
cmp
movb
loop
nop
nop
push
ret
mov
push
push
sbb
shll
mov
ficoms
add
xchg
mov
mov
sbb
scas
sbb
dec
inc
std
jne
jbe
mov
lcall
addr16
fucomip
add
inc
pop
loopne
call
nop
xchg
and
ror
mov
scas
sub
mov
into
mov
sbb
or
movsl
push
sbb
and
push
movsb
mov
rol
adc
jp
in
les
fdivs
outsb
imul
sbb
inc
mov
cmp
sub
fisubl
add
lock
xchg
push
repz
leave
scas
adc
fcmove
out
cmp
pop
nop
jp
add
or
xchg
mov
push
add
inc
gs
sub
insl
bnd
mov
xor
or
dec
int3
adc
cmpsb
jo
gs
mov
pushf
pop
jl
push
fiadds
ja
daa
rorb
test
mov
jbe
pop
hlt
fnstenv
cmc
add
cmp
cmp
pop
mov
xor
mov
dec
push
bound
adc
sub
outsl
dec
ljmp
lahf
fsubrl
mov
loope
jbe
ret
imul
xlat
cmp
mov
cwtl
loope
xchg
leave
cmp
loop
xchg
jns
cltd
adc
sarl
into
fiadds
dec
ja
cltd
push
outsb
jle
mov
aas
lock
addl
xlat
mov
sbb
sbb
sbb
je
push
add
aam
lret
jb
add
cmp
adc
and
xchg
xchg
push
insb
dec
jae
sbb
push
jecxz
adc
stc
ljmp
mov
xor
pop
xchg
hlt
jmp
flds
pop
insl
mov
push
sub
lds
jmp
dec
aam
ret
testl
dec
dec
mov
mov
faddl
movsb
dec
and
push
js
jp
lret
fld
xchg
mov
fcoml
dec
xchg
mov
add
mov
lods
inc
mov
mov
push
mov
pushf
sub
inc
xchg
cmp
inc
into
push
inc
cmp
stc
inc
or
dec
push
sbb
push
inc
pop
push
leave
lret
icebp
pop
dec
sub
rcl
jns
cmp
cmp
mov
mov
add
adc
ret
fdivs
ror
jl
and
ret
or
push
inc
push
xchg
lock
aaa
or
xchg
mov
pop
push
fs
and
xor
xor
xchg
inc
pop
dec
xchg
cmp
rcrb
xlat
dec
mov
std
add
adc
ds
add
xchg
jae
and
xchg
rorb
aam
xchg
leave
nop
dec
aas
cmp
lahf
xchg
sbb
arpl
movl
stos
movsb
lock
push
out
dec
xor
punpcklwd
cmp
add
je
jecxz
push
mov
aaa
add
xlat
jb
lret
xchg
daa
xchg
addr16
loopne
sub
inc
mov
cld
mov
dec
fldenv
mov
cltd
mov
xchg
push
pop
bound
rolb
push
jg
mov
bnd
in
push
jg
sbb
inc
jmp
mov
mov
pop
mov
sbb
addl
iret
scas
sbb
jmp
sub
insb
add
mov
sbb
add
mov
and
ds
mov
pop
clc
ljmp
hlt
bound
mov
addb
arpl
sahf
rorl
rcll
lret
mov
mov
outsb
jbe
mov
pop
mov
and
dec
jmp
cmp
out
push
push
jp
cmpsb
sbb
cmp
xlat
xchg
xor
mov
cmp
out
aam
lods
xlat
pop
outsl
dec
or
cmp
mov
es
aad
add
arpl
mov
mov
or
outsl
lahf
pop
mov
pop
push
jp
inc
cmc
adc
add
push
outsl
dec
push
iret
and
pushf
dec
stos
mov
loope
xchg
stos
cmpsl
push
mov
cmp
push
stos
jge
je
stos
mov
xchg
cltd
fcmovne
cmp
mov
sbb
rcr
imul
cmp
push
mov
dec
subb
lcall
push
xchg
inc
mov
inc
jne
sbb
dec
and
scas
mov
lret
pop
fadd
jno
hlt
mov
sub
or
jge
cmp
push
repnz
mov
xorb
ds
pop
pop
pop
fstl
mov
aad
cmpsb
out
jbe
mov
mov
sub
mov
loope
xchg
subb
push
adc
xor
lods
test
rcll
pop
aam
mov
dec
xchg
xchg
fisubs
ds
mov
stos
push
sarl
aaa
inc
sbb
xchg
test
pop
pop
sbb
ret
xor
sbb
sub
lods
xchg
lahf
sbb
in
cmpsl
dec
iret
cmp
into
or
add
sbb
aaa
and
add
cmpsl
ds
jecxz
fcompl
fbld
mov
cmp
ss
lds
xor
shlb
xchg
inc
push
cltd
mov
repnz
add
test
mov
outsl
sbb
fdivs
das
dec
xchg
mov
mov
aad
pop
sub
xchg
fidivrl
data16
call
push
jmp
jo
andb
adc
and
fisubs
xor
popa
dec
pop
or
movsb
in
mov
arpl
add
pop
insb
test
xor
adc
sbb
test
jecxz
adc
lods
in
sbb
inc
mov
hlt
xor
lcall
mov
ja
cmpl
xorl
insb
stos
ret
and
cld
ss
dec
add
cmp
cwtl
mov
ds
sub
lret
sbb
push
cmp
sub
repnz
sbb
mov
les
das
pop
lods
jno
jbe
movsl
sbb
imul
mov
orb
jns
test
jbe
sarl
push
mov
loopne
pusha
in
dec
and
lods
xchg
movsl
fnstenv
movsb
scas
inc
out
andl
ja
imul
dec
and
aam
shll
mov
mov
into
xor
clc
mov
cltd
negl
in
pop
out
mov
cwtl
fwait
gs
cmpsb
xor
out
pop
xchg
pusha
insb
jl
push
cli
dec
mov
notl
das
mov
ret
stc
mov
repz
loopne
les
sbb
fisttps
jp
shll
ret
dec
cmp
jb
mov
pop
cld
cmp
xlat
xor
nop
lds
add
rcl
out
push
mov
mov
jle
sub
roll
test
sub
dec
mov
popa
cs
push
rorb
jae
js
inc
xchg
testl
mov
fs
dec
pop
test
out
inc
mov
inc
mov
or
or
idivl
pop
push
lods
add
xchg
and
hlt
lahf
iret
pusha
cwtl
cmp
pop
and
or
cwtl
push
out
fildl
std
dec
push
lods
sbb
cmp
xchg
cmp
xor
push
int3
in
aam
imul
adc
or
and
and
cmp
mov
dec
repz
xchg
push
cmpsb
push
dec
sub
pop
arpl
icebp
fists
and
imul
adc
imul
cmp
mov
fsub
or
flds
js
cmpsl
imul
push
inc
enter
fdivl
xor
hlt
cmp
addl
test
pop
test
xchg
movsl
mov
iret
xchg
sbb
ret
add
sub
xor
dec
pusha
imul
insb
imul
cli
pop
arpl
js
adc
out
cs
mov
call
stc
xchg
mov
scas
jno
leave
xor
sbb
ss
jl
lret
pop
mov
mov
iret
pop
jge
in
fdivr
sub
cld
sub
es
mov
cltd
adc
es
jl
inc
jnp
xor
cmp
test
and
cmp
fisubrl
cltd
hlt
jne
or
subl
and
and
add
aaa
adc
mul
jae
pushw
lock
push
cmp
adc
cmp
imul
and
ret
mov
cmpsb
xchg
xchg
loope
mov
inc
push
ror
aam
adc
dec
push
arpl
lock
xor
loopne
sub
push
jle
cwtl
sbb
adc
rcll
sub
idiv
cmc
cli
mov
xor
aas
sahf
fcoml
mov
lcall
dec
les
sbb
dec
fwait
mov
adc
imul
sub
aad
test
sbb
cmp
sub
arpl
add
aas
inc
xor
into
xchg
stos
pop
shrb
sub
xor
or
sbb
or
pop
adc
inc
xor
lds
pop
outsl
cld
popf
adc
lds
dec
mov
xchg
imul
jnp
add
scas
int3
outsb
sbb
dec
xor
lret
lcall
aam
xlat
hlt
jl
or
out
xchg
gs
xchg
xchg
xchg
out
xor
lock
jecxz
push
add
lock
cmp
test
outsl
push
in
hlt
mov
andl
int3
fbld
sbb
cltd
mov
inc
push
sub
mov
lcall
cmpl
mov
stos
pop
insb
add
fcmovnu
psrad
popf
sahf
xor
in
lds
sub
lock
dec
pop
popa
mov
rorb
sub
fldl
cs
imul
fwait
mov
lds
jecxz
loop
sub
dec
inc
into
or
mov
shrb
push
jge
shll
ret
shr
and
mov
or
fiaddl
jecxz
jns
pop
bound
add
inc
jnp
xchg
sbb
mov
lock
icebp
daa
jnp
mov
sbb
leave
add
scas
rclb
dec
pop
imul
jp
adc
mov
jne
movsl
pop
add
jbe
out
add
rclb
xchg
call
cmpb
lds
pop
pop
pop
fildll
outsl
xchg
adc
fistl
faddp
mov
aas
mov
jno
repz
add
mov
cli
sbb
cmpsb
mov
out
jmp
jno
fistps
int
adc
sti
pop
pop
mov
scas
andl
out
into
xor
dec
push
pop
scas
frstor
scas
mov
inc
and
pusha
inc
clc
int3
xchg
lods
jmp
lods
inc
sbb
fcmovnu
pop
fistpl
add
pop
test
leave
cmp
sbb
fistpl
jl
nop
jno
ss
stos
or
push
jne
lock
in
cmc
sub
xor
stc
xor
dec
jmp
ds
jne
xchg
pop
or
jg
outsl
xchg
adc
or
push
push
xchg
outsb
or
je
arpl
jle
cs
popf
outsb
lret
test
push
xor
dec
push
orb
dec
or
dec
xchg
cmp
adc
sub
insb
js,pn
iret
test
scas
mov
and
popf
in
adc
sbb
daa
adc
add
add
fcomps
add
sub
movsb
dec
cmp
mov
xor
dec
xor
rorl
lods
xchg
xchg
dec
mov
and
mov
lock
adc
or
mov
inc
add
lcall
pop
or
shr
ret
mov
mov
jnp
push
loop
mov
fimuls
sub
jecxz
jp
xor
add
movsb
xor
dec
shrl
filds
or
or
mov
add
pop
mov
cmpl
or
cs
test
repnz
aaa
icebp
add
shr
or
cmp
loopne
stc
push
inc
enter
nop
add
xor
push
loop
shl
fimuls
daa
xchg
loope
pop
add
mov
imul
inc
aaa
sub
aam
sti
fiaddl
or
ror
fimull
jl
sub
and
cmp
sbb
test
out
inc
rcr
aas
cltd
or
mov
ficompl
lret
pop
dec
adc
or
adc
pop
dec
cmp
sbb
ljmp
push
ja
clc
negl
les
lods
scas
adc
pop
or
push
pop
es
inc
shlb
cmc
jo
cs
movsl
mov
inc
mov
xchg
lods
sub
repnz
insl
mov
fmuls
mov
icebp
push
aad
fiadds
bound
lods
pop
fdivs
sahf
mov
fcomps
jl
daa
cmpsl
jno
mov
ret
lahf
mov
test
mov
rorl
dec
xchg
sub
cmp
stc
outsl
in
jbe
stos
test
vmread
notb
out
xor
xor
cmp
lret
ret
hlt
or
sbb
push
mov
les
mov
xchg
in
dec
jae
xchg
or
xchg
fdivs
mov
mov
add
dec
test
xor
push
cwtl
mov
fidivrs
jmp
cmp
clc
cs
mov
push
das
xlat
roll
lfs
add
sbb
or
lock
push
jg
push
pop
jecxz
scas
les
adc
add
add
dec
outsl
add
pop
pop
ror
movsb
dec
sbb
cld
adc
mov
push
test
cltd
adc
ss
rorb
cltd
and
sbb
cmp
into
xchg
pop
jno
repz
mov
fisttpll
sbb
cmp
mov
adc
pop
pop
push
test
inc
mov
leave
pusha
jbe
xchg
outsb
pop
aam
or
loop
mov
ds
xchg
xchg
xor
clc
call
stos
cmp
mov
lret
xor
adc
cmp
and
fisubrs
aaa
ja
sbb
sahf
stos
out
dec
sahf
inc
shll
call
lcall
in
add
push
mov
fisubl
pop
cld
mov
jl
lret
jmp
mov
mov
xchg
sbb
and
int3
sub
pop
movsb
sub
xor
jbe
xchg
push
add
test
inc
js
xor
daa
xchg
push
pop
jl
mov
add
and
loopne
pop
and
or
mov
or
bound
mov
ret
cmp
iret
or
aaa
add
imul
data16
fnsave
insb
into
mov
mov
pop
xchg
iret
rolb
test
loop
out
cmpsb
xor
lods
fdivl
out
sar
pushf
jo
out
repnz
lods
xor
aad
leave
xor
pushf
xchg
mov
push
outsb
js
pop
jecxz
imul
daa
in
les
adc
lock
mov
cld
lret
rcrl
fistpll
xchg
test
mov
inc
mov
fs
pop
jae
pop
mov
js
int3
fisttps
out
push
gs
fnstsw
lock
je
rcrl
xchg
and
ror
or
adc
xlat
pop
inc
call
push
insb
mov
sar
std
jle
inc
cli
add
sbb
adc
jmp
mov
andl
scas
pop
lods
jns
push
jl
pop
pop
popf
push
mov
aam
mov
test
insl
sbb
imul
stos
jo
leave
hlt
mov
sahf
inc
rclb
xor
xchg
pop
pop
xor
pop
cmp
sub
and
in
push
push
out
loope
inc
mov
push
fsubrs
aam
add
cmp
stos
or
insb
dec
adcl
push
repz
sub
fsub
cmp
loopne
icebp
jp
adcl
pop
je
pop
fistpl
mov
mov
sub
sbb
xorb
or
loope
lret
push
add
out
mov
aad
inc
cmpl
fistl
inc
sbb
nop
mov
call
and
sub
and
xchg
jl
std
cmp
stc
sbb
stos
xchg
std
aam
mov
dec
and
jl
inc
inc
jle
jbe
mov
lret
and
lahf
ret
adc
aad
repz
mov
inc
mov
push
loop
fcomps
jl
jmp
adcb
dec
mov
jl
fxch
or
pusha
inc
jo
jmp
out
add
adcb
jnp
cltd
inc
imul
lock
nop/reserved
out
inc
mov
add
cltd
xchg
sub
repnz
fstps
bnd
add
cs
in
sub
jmp
cmc
outsl
xor
lods
mov
mov
test
scas
enter
and
loope
add
lret
xchg
nop
frstor
adc
and
push
sub
test
dec
jl
mov
shll
xchg
ljmp
or
loope
movsl
stos
push
and
outsb
mov
iret
jbe
push
iret
sbb
daa
popa
outsb
adc
jb
push
add
mov
xor
jecxz
mov
scas
inc
pop
xchg
mov
hlt
pop
xor
ret
xchg
ret
mov
pop
jp
gs
pop
addl
incb
aas
mov
fs
lret
leave
mov
fildll
cltd
pop
dec
pushf
out
mov
lahf
sub
loop
cmp
push
andb
insb
sub
inc
test
aaa
jmp
shrb
cld
sub
call
xchg
outsl
add
mov
fnsave
nop
arpl
mov
mulb
fnstcw
shl
mov
lahf
or
xor
mov
fstpl
psrlq
imulb
cmp
popf
jge
push
into
xor
push
popl
aaa
jmp
add
push
mov
int
pop
in
cmpsl
stc
testb
cwtl
xchg
fbstp
push
sub
divl
pop
repz
shll
rcrl
mov
mov
sahf
and
jne
and
cs
out
ret
insb
jbe
or
subb
inc
arpl
adc
repz
pop
cmpsb
test
mov
mov
lds
pusha
and
rclb
add
mov
jge
mov
cmp
xor
nop
test
or
das
mov
mov
sti
clc
jp
xor
cmp
repnz
lock
jns
inc
outsl
aas
shll
cmp
loop
cli
mov
int
mov
aas
mov
mov
mov
rcr
lods
sub
xchg
in
cmp
fbld
in
sbb
xchg
loope
adc
cmp
out
mov
and
mov
stos
inc
arpl
pop
and
push
mov
icebp
sbb
cmp
and
and
push
aaa
mov
jo
push
xor
adc
dec
sub
aas
idiv
out
push
jg
sub
aas
lock
lcall
pop
stos
sub
dec
lahf
jae
lods
fcomps
mov
mov
jge
aaa
call
mov
shll
and
xchg
sti
js
lods
ss
xlat
repz
sbb
call
ret
in
lds
int3
imul
xor
pop
cmp
cmp
sahf
xor
pop
or
cmovns
pop
push
out
repnz
outsl
jb
nop
lea
loop
popf
mov
push
popf
sub
mov
add
jb
sbbb
jmp
cmp
pop
dec
rcr
jo
fiaddl
notb
stos
packssdw
add
clc
loop
xchg
punpcklbw
pushf
sahf
cli
mov
outsl
jb
mov
ds
xor
cmp
mov
not
add
cmp
das
mov
decl
lea
test
insl
popf
and
cmp
fmuls
jno
and
roll
in
ret
arpl
or
add
sub
mov
xchg
push
mov
push
jno
and
rorb
jmp
inc
push
shlb
cmp
cmp
dec
sti
sti
in
mov
mov
out
push
sbb
jmp
and
push
pop
sub
xor
push
or
cmp
incl
push
inc
dec
mov
cli
cmp
fxch
shl
and
sub
jmp
sub
adc
jp
dec
out
enter
pop
cmp
jbe
inc
sbbl
imul
shl
stc
or
adc
and
je
jmp
push
mov
fwait
mov
jae
dec
pop
out
dec
js
sub
dec
cmpsl
mov
jb
jae
lahf
scas
iret
movsl
sbb
loope
aam
test
inc
jns
xorb
push
test
clc
ja
loop
jl
mov
mov
ljmp
xchg
xchg
movb
push
mov
in
ja
data16
adc
adc
inc
and
mov
mov
or
mov
std
nop
int
push
pop
jno
push
xchg
jne
lcall
mov
sti
dec
scas
add
stos
push
mov
jb
icebp
mov
daa
mov
andb
imulb
stos
add
lret
jle
cwtl
or
popl
push
pop
jne
jmp
sbb
add
aad
push
and
test
sbb
cmp
pop
insl
ja
mov
out
imul
pop
jno
iret
cmpsl
sub
jae
push
cmp
pop
adc
push
je
mov
jae
lock
mov
dec
scas
cmpl
rcll
sub
clc
insb
push
outsl
xchg
xchg
xchg
in
fisttpl
cmp
dec
lea
mov
lock
fucomp
in
sbb
insl
push
scas
repz
dec
andl
pop
xchg
xchg
jbe
fldl
pop
nop
pusha
mov
out
inc
enter
xor
jp
cmp
sbb
cli
dec
ret
push
push
iret
popf
cmp
dec
das
insl
or
gs
mov
mov
data16
mov
mov
in
sbb
neg
mov
cmp
arpl
xchg
cwtl
pop
mov
dec
arpl
pop
inc
sahf
insb
cmp
cmp
inc
ss
in
adc
dec
aam
imul
arpl
inc
jecxz
mov
inc
xchg
lahf
push
cs
lea
mov
lock
lods
push
fcmovnb
jp
negl
shlb
cltd
into
mov
iret
mov
dec
pop
stos
jne
adc
fxch
sbb
mov
cli
push
sbb
dec
xlat
loope
out
mov
or
sub
insl
and
jne
adc
mov
sub
and
mov
inc
cwtl
mov
loopne
push
hlt
sbb
fcomp
lock
xchg
dec
jg
hlt
push
in
sub
mov
repz
sub
cmc
test
mov
jb
dec
inc
mov
test
adc
fildll
and
mov
mov
orl
adc
lahf
adc
ret
popf
push
mov
and
inc
xor
fmull
add
cmp
mov
xchg
nop
in
das
sarl
xor
xor
sbb
rcrb
push
loopne
out
popa
mov
jnp
mov
lods
iret
pop
les
xchg
nop
fwait
adc
cmpsl
ficompl
and
inc
aaa
pop
adc
xchg
icebp
xor
or
pop
not
dec
pop
sub
das
dec
or
push
sub
push
inc
push
jl
aad
and
pop
or
ljmp
pop
xor
jbe
xchg
xchg
adc
xchg
stos
cwtl
inc
mov
cmpsl
std
xchg
and
movl
clc
cmpsl
movsb
aaa
dec
ss
adc
ret
xchg
xorl
je
sbb
mov
or
pop
inc
sub
inc
idivl
out
pop
jne
cmpl
pop
sbb
pop
popa
repnz
enter
mov
mov
movsl
jnp
dec
or
sbb
in
call
mov
icebp
cmc
arpl
fdivr
push
mov
inc
sub
ret
imul
mov
adcl
inc
outsl
sub
shr
xchg
mov
mov
subl
jns
inc
xlat
pop
lods
dec
jg
cmc
sbbl
xchg
pop
xor
inc
mov
sub
mov
adc
or
fldt
inc
xchg
outsb
push
dec
movsl
add
pop
fwait
mov
imul
or
pop
scas
push
mov
test
xor
xchg
sarb
adc
fs
sbb
push
lret
out
lret
jmp
or
inc
and
sub
mov
cmp
cmp
inc
aaa
mov
sub
cmp
add
jmp
stc
fisttpl
fists
mov
mov
mov
cmp
in
xchg
nop
cmpb
pop
outsb
inc
lods
fmul
mov
mov
xchg
add
inc
add
xor
notb
les
clc
daa
outsl
ds
sub
mov
mov
cmp
aad
mov
pop
pop
hlt
subb
mov
aam
adc
mov
pop
jl
sahf
aas
adc
sub
pop
movsl
push
xchg
fwait
cltd
xchg
test
shl
inc
aad
nop
add
sub
divl
js
xchg
mov
mov
mov
mov
inc
test
popf
add
jo
cmpsb
hlt
daa
imul
aas
mov
dec
into
dec
sbb
adc
and
aas
lcall
fisubs
ja
jge
push
or
cld
pop
ficomps
in
stc
and
or
pushf
ljmp
xchg
xchg
sub
movsb
xchg
cltd
rorl
xchg
popf
add
cmpsb
xchg
jns
cmp
mov
adc
hlt
sarl
xchg
mov
push
jl
lea
les
mov
adc
push
movsl
adc
push
xchg
out
or
movl
sbb
and
sti
lret
fwait
xor
rolb
gs
or
fidivs
hlt
add
outsb
cmpsl
jmp
cmp
lds
cmp
push
sub
jg
aam
aaa
outsb
testb
stos
jns
xor
sub
sbbb
cmp
bound
or
xlat
xchg
out
outsb
xchg
adc
addr16
push
rol
stos
fmulp
clc
pusha
dec
push
bound
mov
inc
sbb
fdivp
adc
pop
mov
fnstsw
int
jno
stos
cltd
xor
push
fisubs
stos
fsubs
push
test
jge
jge
cmp
ror
daa
cs
out
insl
cmp
xor
xor
xchg
inc
bound
dec
aaa
add
js,pn
aam
je
outsb
mov
jb
test
insb
mov
das
fwait
push
pop
sbb
cmp
mov
clc
mov
jo
mov
cmc
jne
pop
sbb
or
lcall
movsb
fld
jno
idiv
mov
mov
pop
and
jle
paddw
iret
cmpsl
jbe
xor
loope
push
jo
mov
imul
movsl
rorl
int3
rolb
pop
into
fmul
or
gs
adc
or
xchg
jb
cwtl
mov
inc
jns
popf
dec
sub
or
sahf
or
test
adc
cmp
jbe
xchg
mov
jo
mov
mov
jne
mov
push
cmp
sahf
jmp
xchg
je
inc
or
cmpsl
sti
jmp
mov
lock
movsl
mov
and
mov
jl
shlb
and
mov
out
icebp
into
lea
push
push
popf
fsubs
sbb
inc
cld
add
lock
pop
pop
or
pop
cmpsb
mov
jo
add
insb
arpl
xchg
and
push
jo
sub
pop
sub
mov
je
punpckhwd
jae
jp
in
xlat
dec
cld
pop
mov
ss
fwait
and
loope
ljmp
cmp
ret
je
ss
sbb
dec
je
cmp
mov
stos
aam
push
sbb
mov
fs
fdiv
xor
ljmp
fdiv
lods
je
xor
repz
dec
mov
cmpsb
pop
movsl
imulb
mov
xchg
mov
test
xchg
mov
mov
fst
dec
mov
jg
xor
int3
fimull
out
test
int
and
ficompl
sub
pop
mov
mov
fiadds
scas
sarl
cmp
push
movsl
sti
dec
jno
std
or
add
mov
jne
mov
pop
pop
jae
dec
sbb
lock
cmp
aam
aam
pop
inc
insl
xchg
popa
sbb
enter
dec
jns
push
sbb
or
mov
in
xchg
testb
inc
sbb
xor
rep
lods
and
std
je
inc
aam
push
xchg
jnp
mov
xor
dec
jl
add
nop
stos
add
mov
xor
mov
loopew,pn
sbb
ficomps
test
out
cmp
lret
in
xchg
repnz
rcr
xorl
imull
lock
and
and
pop
xchg
nop
xchg
repz
negb
andb
adc
loopne
ljmp
mov
mov
cli
rsm
adc
loope
je
jae
mov
xor
in
ficompl
test
xchg
pushf
xchg
mov
mov
add
push
xor
ret
lea
aas
lods
fldl
jbe
push
sarb
scas
fists
lahf
clc
jg
add
test
test
and
mov
ss
dec
cli
cmp
or
mov
mov
sti
add
divl
xchg
mov
xchg
das
adc
jmp
mov
add
pusha
sahf
inc
mov
add
jae
mov
push
and
xor
push
pop
test
mov
test
dec
dec
or
or
mov
lock
jl
adc
bound
xchg
js
xchg
aam
inc
inc
mov
dec
inc
cld
enter
ljmp
cmp
add
cmc
xchg
push
aam
mov
scas
xor
call
jmp
xor
jmp
cmova
nop
popw
lcall
cmpsb
aam
mov
mov
sub
dec
test
mov
ss
shlb
add
test
sub
push
xchg
jge
je
rcr
je
pop
dec
shrb
mov
sbb
inc
mov
scas
cmp
stos
aas
fidivs
pop
add
and
sti
sbb
dec
jno
popa
push
mov
je
out
xchg
and
test
fimuls
xor
mov
inc
andl
mov
lea
dec
ja
mov
lds
ljmp
scas
js
ret
gs
sub
sbb
xchg
bound
sub
cmp
dec
push
jmp
pop
roll
cwtl
jl
inc
mov
ffreep
xchg
cwtl
lret
cmp
popa
adc
in
lret
mov
jns
mov
pop
sbb
mov
test
pop
pop
addb
loop
or
je
std
pop
std
add
in
pop
hlt
xchg
addr16
pop
mov
mov
sbb
mulb
sub
xchg
push
push
jns
loop
jno
ljmp
outsl
jp
scas
clc
jne
ds
lock
fnsave
cmp
fisubl
ljmp
inc
sbb
pop
xlat
loop
jmp
jg
jae
ret
xor
arpl
add
nop
add
pushf
arpl
mov
jg
test
add
call
cmp
jecxz
add
ret
push
sbbb
add
enter
cmpsb
and
dec
cltd
std
mov
mov
call
cltd
out
clc
xor
cmp
cmpsl
pop
inc
mov
cmp
cmp
sub
xor
in
push
inc
jne
bound
adc
das
dec
rcl
cmp
adc
push
jle
xor
push
es
cmp
lea
lock
sbb
inc
pop
or
cmp
adc
mov
inc
aad
lcall
mov
mov
outsb
add
cmpsl
mov
insb
arpl
push
dec
push
fildl
sbb
sbb
out
jle
mov
cmp
sbb
into
lock
sti
imul
jle
sbb
scas
add
call
cmc
mov
inc
lods
push
aad
jne
xchg
das
mov
bnd
les
mov
hlt
mov
fsubrl
loop
les
mov
dec
sbb
fsubrs
out
sbb
lods
jb
mov
and
xchg
and
aas
out
inc
push
xchg
sub
jbe
adcb
sbb
sub
stc
sub
push
xor
add
rclb
rorl
or
ret
xor
or
pop
ret
je
pop
add
dec
mov
inc
stos
lods
shl
push
inc
stc
cmp
shlb
lahf
dec
push
lret
dec
in
test
sub
imul
mov
divl
pop
dec
sub
inc
pop
icebp
sub
fadds
and
out
xlat
mov
out
sahf
cli
mov
dec
call
adc
adc
in
mov
stos
adc
subb
mov
movsl
ss
or
sbb
popf
iret
repnz
data16
jnp
xchg
jg
out
icebp
adc
mov
sbb
xchg
pop
pop
imul
jno
dec
jg
shr
mov
jnp
ret
ret
in
mov
cli
ds
stos
sbb
dec
loop
xorl
sub
pop
lret
aam
inc
arpl
out
mov
pop
pop
adc
int
scas
dec
or
push
in
push
test
inc
lods
push
enter
bound
lods
pusha
push
mov
inc
sti
fildll
mov
iret
sbb
dec
daa
inc
add
insl
mov
push
jbe
or
mov
sbb
adc
lea
ja
fiadds
jmp
push
cmp
xchg
cs
insb
out
pop
or
aad
mov
mov
cmpsb
scas
rol
mov
push
lds
sub
and
scas
mov
mov
sub
es
xor
cmc
pop
jno
movl
add
push
aad
xor
cld
add
enter
in
pop
movsb
js
js
mov
cmp
les
lock
int
mov
xor
adcb
lods
mov
mov
pop
pop
cmp
add
jp
fucomip
jmp
dec
xchg
movsl
out
mov
loopne
sbb
mov
enter
or
xchg
pop
fbld
or
sub
test
inc
rcrb
push
xor
add
inc
inc
xor
fisttpl
lea
sbb
mov
add
pop
pop
jecxz
into
test
movsl
das
pop
inc
mov
roll
mov
stc
fmuls
cmp
inc
xchg
stos
shrb
pop
call
jnp
rorb
pop
ret
insb
loop
and
clc
jbe
jne
xchg
cmc
lahf
fidivl
bnd
stos
aas
adc
std
jmp
pop
pop
shl
mov
sub
xlat
sub
fs
pop
insl
mov
xchg
iret
push
enter
hlt
das
pop
push
call
movsb
inc
int3
sub
cli
sub
cli
pop
pushl
ds
and
pop
or
xchg
pop
je
rcl
clc
mov
in
imul
fsincos
jle
mov
jge
add
data16
pop
inc
aam
out
and
daa
cmp
cmp
nopl
ret
das
sub
add
sbb
add
mov
cmp
sbb
movsl
unpcklps
push
inc
aad
std
mov
cmpsb
rcrb
push
stos
push
leave
jne
sub
mov
mov
outsl
ja
mov
cmp
jle
mov
out
sti
in
xchg
sub
or
decl
mov
into
add
mov
mov
femms
xchg
jb
lahf
jbe
jle
inc
jecxz
insb
insl
out
out
dec
leave
and
mov
js
pushf
imull
pop
or
xchg
sbb
dec
and
bound
out
dec
jnp
push
push
addr16
ljmp
popf
dec
mov
dec
les
shlb
push
sub
cmpsl
clc
jnp
push
push
insb
jle
dec
aaa
sbb
test
ss
jns
push
jbe
sub
jmp
jp
into
pop
shlb
push
into
enter
fldenv
mov
popf
and
bound
inc
dec
push
dec
jg
das
sbb
xor
jns
or
xchg
ficoms
push
hlt
fnstsw
xchg
push
cmp
and
xchg
jo
lret
or
mov
pop
mov
lods
and
fadds
icebp
mov
jge
jo
fdivrs
sbb
loop
sub
mov
insb
jbe
pop
and
jg
and
mov
shlb
imul
out
fsubrp
in
pop
lret
leave
mov
outsb
inc
adc
fnstsw
mov
je
jno
push
or
cmpl
adcb
test
daa
rcll
lcall
jb
iret
inc
push
mov
mov
pop
ja
and
push
mov
ss
ret
xchg
pop
pop
push
add
pushf
nop
cmp
jbe
xchg
push
jb
mov
in
loope
xchg
loope
and
adc
icebp
clc
mov
repz
dec
cli
out
stos
push
outsl
push
push
fbld
clc
pop
repz
popf
adc
cmp
jp
mov
mov
repz
fwait
aad
push
pop
lds
jae
mov
or
push
sbb
dec
sub
hlt
push
inc
mov
scas
push
cmp
pusha
adcb
arpl
das
jae
iret
dec
and
pushf
jbe
loop
xor
mov
aad
aad
mov
dec
jg
cmpsb
mov
in
setge
aas
test
fldenv
aad
sti
cmc
imul
xchg
lods
cs
pop
mov
in
cmpsb
cmp
or
sub
fwait
mov
shl
daa
jl
test
and
push
sub
xor
inc
push
pusha
insl
fbld
dec
pop
mov
imul
ret
inc
test
into
aas
push
inc
lret
push
push
ret
shll
test
and
and
jno
jge
les
adc
pop
out
test
rcrl
push
sar
pop
repz
xchg
or
rcr
inc
jg
stos
repnz
mov
scas
fldcw
jl
add
push
sub
jae
imul
or
jge
insl
pop
daa
adc
jae
push
andb
xor
cmpsl
fwait
and
in
cld
lods
test
sub
icebp
and
lods
sub
xchg
xorb
aad
insb
push
mov
mov
xor
sub
xor
push
ret
mov
push
xchg
adc
add
iret
mov
std
mov
cld
jne
adc
dec
pop
test
enter
cli
xchg
jae
fwait
rcrb
fwait
push
add
mov
pop
cmp
dec
sub
sbb
mov
xchg
aam
jg
out
and
int
pop
mov
ffreep
push
cltd
ljmp
in
sbb
sub
pop
mov
add
and
scas
xor
xlat
jne
pushf
mov
push
xchg
rolb
mov
rcr
addb
push
xchg
int3
jne
and
les
add
jg
out
popa
sbb
lods
pop
add
cmc
add
pop
andl
jg
decl
mov
enter
pop
and
stos
jnp
mov
jb
ds
cmp
aas
xchg
imul
aaa
fnstsw
sbb
xor
jecxz
jnp
and
in
arpl
lret
imul
fwait
sub
or
mov
cmpsl
stos
jbe
mov
pop
jecxz
repz
jle
sub
pop
shlb
inc
stc
and
lret
push
sub
lret
mov
mov
fsub
pop
nop
mov
inc
dec
fldcw
mov
popa
lock
ljmp
rolb
fidivl
cmc
movsb
push
outsl
jae
ds
jge
cmc
movb
dec
jp
jne
ret
insl
scas
cmpsb
insl
xchg
mov
fldenv
stos
in
dec
cmp
leave
iret
hlt
mov
repz
or
xchg
aaa
push
push
cltd
and
sbb
mov
das
sub
loop
sti
cmp
jle
sub
pusha
pop
int
enter
xlat
jmp
into
or
mov
cmp
inc
pop
jecxz
rclb
pop
add
clc
sub
xchg
movsb
pop
inc
ror
pop
pop
in
scas
sub
inc
lahf
sar
mov
fwait
add
lods
jnp
stos
inc
mov
sahf
and
jns
pop
jbe
cmp
sub
out
je
mov
mov
mov
dec
and
fmulp
xor
push
jne
mov
ja
pop
test
out
pop
in
addr16
out
jmp
enter
add
sub
add
out
mov
stos
ss
mov
sarl
jns
out
push
ret
sub
test
clc
mov
rcll
mov
idivl
test
ja
shl
dec
mov
push
cli
or
and
test
push
test
divb
dec
mov
enter
outsb
int3
lods
adc
adcl
pop
ret
shr
push
sub
add
test
pop
jge
mov
xchg
jmp
out
mov
loope
xor
mov
out
add
push
or
ds
mov
cltd
cs
mov
jb
pop
mov
xchg
pop
fistl
js
stc
scas
fwait
nop
ljmp
daa
pop
xor
push
cmp
in
xor
test
cmpsb
add
nop
mov
and
mov
insb
rclb
sub
out
fcoml
outsb
notl
cmp
fwait
sub
aaa
lock
sbb
cmp
pop
movsb
lret
jecxz
mov
cli
xlat
mov
movl
fildl
andb
js
jmp
cmp
add
leave
inc
je
mov
icebp
pop
or
cmp
dec
adc
pushf
popf
xchg
stc
cmp
fbstp
xor
dec
sub
sbb
aaa
pop
sbb
movsb
or
leave
subl
lods
hlt
mov
push
out
sub
mov
fisubl
sar
lahf
rcrb
repnz
pop
push
push
fisttpl
sahf
xchg
xor
cmpsb
mov
push
sub
pop
xchg
shlb
movsl
test
mov
lea
xor
pushf
popa
inc
lcall
int3
stc
lcall
push
data16
rep
ror
sahf
xchg
push
jle
sbb
scas
jne
inc
int3
push
xor
fwait
mov
or
xor
cwtl
xor
inc
into
sti
fnstenv
pop
call
data16
sub
aaa
testb
std
push
pusha
sbb
lds
mov
pop
lods
stc
mov
xor
dec
out
lret
add
pop
and
daa
pop
pusha
jb
mov
addr16
cmc
stc
test
testb
pop
fstpl
push
mov
inc
cmp
pop
lock
jne
test
pop
adcb
xor
lcall
jb
les
lods
cmc
nop
stc
inc
jb
es
jae
movsl
pop
mulb
adc
xor
mov
mov
lods
fwait
aaa
or
inc
adc
cltd
nop
repz
pusha
mov
mov
mov
mov
icebp
movsb
dec
mov
popa
jmp
xor
int3
mov
pop
mov
xchg
adc
loopne
mov
lods
xchg
in
xlat
int3
mov
pop
xchg
inc
fidivl
fcoms
dec
test
lcall
stc
cmpsl
jmpw
out
aas
inc
add
aad
pop
repz
mov
lahf
out
mov
subb
sub
mov
sbbb
mov
test
jmp
and
addr16
movsl
repnz
sub
pop
mov
frstor
bound
xchg
setbe
or
adc
mov
dec
ds
rol
push
push
hlt
pop
les
scas
and
insl
or
fstps
ret
aaa
jns
mov
inc
ret
outsb
inc
mov
data16
scas
repz
test
xchg
jge
leave
push
bound
lea
in
popa
mov
sbb
adc
call
mov
xchg
lret
jnp
mov
ja
cmp
mov
add
fidivl
or
push
rolb
movsl
and
and
push
aaa
cltd
inc
xor
push
jge
or
adc
aam
xor
mov
mov
pusha
pop
fmul
pop
or
aaa
cmp
cmp
in
les
test
dec
xchg
in
ljmp
mov
test
stos
iret
movsl
push
xor
in
mov
movsb
sbb
mov
add
repz
cwtl
popf
mov
popa
mov
mov
rcr
pop
jb
in
push
mov
data16
xor
ret
test
push
cwtl
cwtl
loop
pop
jns
xor
mov
js
dec
mov
rorb
add
mov
pop
pushf
outsb
pop
sub
jle
nop
pop
dec
xchg
xchg
sbb
in
jno
popa
sbb
and
mov
xchg
cmovg
out
mov
mov
lods
dec
push
xchg
jno
jle
sahf
addr16
rclb
bound
jecxz
xchg
inc
out
repnz
fs
sub
adc
faddp
in
mov
inc
add
push
outsw
sbbl
fdivrl
add
xchg
ret
pop
fcmovnbe
das
test
and
js
xor
sbb
add
addl
cmp
ret
sti
shlb
arpl
shlb
lods
jbe
fdivrp
dec
mov
jo
dec
xchg
ror
xchg
das
in
cmp
cmpsl
test
xor
jnp
cli
adc
push
jne
out
fildll
xor
push
mov
adc
frstor
shl
fiaddl
test
pusha
pop
mov
xchg
ljmp
xor
xor
xor
fs
and
neg
add
lods
nop
inc
stc
stos
lret
sbbb
inc
imul
jg
bound
loop
push
xchg
cmp
dec
bound
loope
mov
call
and
arpl
add
mov
sar
xchg
sbb
int3
lret
dec
icebp
insl
and
mov
mov
sub
imul
and
cmp
mov
pushf
cmpsb
iret
addr16
or
roll
popf
movaps
xlat
mov
mov
imul
movsl
mov
or
cs
jmp
mov
andb
xchg
sbb
das
jno
jnp
arpl
outsb
addr16
int3
dec
pusha
clc
xchg
mulb
scas
dec
push
mov
mov
pop
pop
push
xchg
add
xor
scas
lret
add
jnp
lds
mov
sbb
test
xchg
cmpsl
xchg
or
ljmp
xchg
or
inc
sarl
mov
in
mov
mov
insl
sbb
cmp
lds
mov
lock
xor
adc
inc
mov
fchs
mov
popa
jecxz
mov
dec
mov
lret
rcrb
push
add
lcall
add
ror
gs
sub
jg
sub
and
pop
dec
jmp
int3
and
adc
scas
push
add
push
jnp
mov
xor
add
jmp
aad
dec
mov
repnz
call
xor
xor
adc
sub
into
xchg
add
mov
xor
loop
mov
mov
mov
xlat
mov
fsts
mov
xor
mov
lea
leave
loopne
test
xchg
mov
fndisi(8087
out
fnstcw
call
add
sbb
xor
inc
shl
fstl
stc
xchg
pop
cmp
iret
xor
icebp
mov
mov
loope
cmp
push
jg
xchg
mov
sub
fwait
sub
ss
mov
mov
sub
sbb
mov
andb
or
xchg
inc
negl
mov
sbb
ja
or
in
daa
push
subl
and
insl
jae
rcl
scas
push
sub
testl
movsl
arpl
xor
xchg
movsb
inc
fsts
inc
add
movsb
add
sbb
sbb
mov
out
pop
and
jno
mov
test
mov
push
sub
jo
or
jns
mov
sbb
cmp
js
jae
lock
inc
pop
sub
push
sub
push
stos
orl
mov
test
pusha
fcomp
shlb
mulb
clc
mov
sub
push
ds
lret
mov
pop
es
stos
ret
mov
in
out
dec
aaa
pusha
jne
lds
pop
pop
out
adc
into
scas
scas
mov
inc
jmp
sub
adc
data16
repnz
jp
mov
xchg
adc
data16
lcall
push
or
jle
jnp
push
in
xchg
push
dec
mov
es
in
ficompl
inc
insl
or
pushl
ss
fildl
sbb
push
dec
pop
xor
push
shlb
stc
pop
ds
add
je,pt
push
loope
jae
movsl
sub
cli
inc
push
sub
sub
push
hlt
jl
popf
sbb
or
hlt
mov
mov
dec
test
or
icebp
jns
and
lret
ss
inc
adc
shrw
add
inc
sahf
dec
call
scas
cmp
out
push
insl
or
push
push
ss
ja
sbb
adc
in
ret
orl
lret
test
xchg
out
aad
movsl
fidivrl
sbb
cmp
pop
enter
hlt
imul
sbb
push
cmp
jnp
push
scas
and
mov
std
ds
sub
pushf
lods
lods
pusha
jae
rep
and
inc
dec
and
ss
mov
mov
xchg
sbb
add
daa
add
pop
inc
jle
std
mov
loop
rcll
xchg
fisttpl
inc
mov
xchg
divb
das
out
xchg
mov
je
sbb
pop
daa
mov
push
add
jb
add
and
int3
sbb
sub
daa
js
loopne
push
mov
lea
xchg
mov
icebp
and
enter
xor
jb
inc
xchg
in
sub
mov
cmp
inc
std
pop
push
lds
das
adc
and
pop
mov
insb
push
imul
push
add
adc
lcall
cmpl
or
lock
adc
imul
push
pop
xlat
cmp
iret
into
les
dec
call
add
loope
lcall
js
popf
mov
inc
cmp
sahf
mov
pop
mov
ficompl
jno
rorb
push
or
push
addr16
inc
data16
inc
testl
xchg
adc
lret
cmp
dec
cmp
jg
testl
inc
pop
fwait
lods
fs
imul
cmp
ss
xor
leave
pop
mov
mov
or
inc
pop
mov
fisubrs
stc
mov
ret
pop
popa
das
jl
adc
mov
adc
cmp
cld
add
and
mov
and
repnz
movsl
and
test
adc
inc
mov
cmpsl
fstps
mov
in
clc
std
shrl
lods
outsb
arpl
inc
pop
xor
sub
out
lahf
rcll
and
mov
sti
sub
push
nop
in
jo
xchg
cs
insb
xchg
mov
mov
or
jae
xchg
inc
cmpl
scas
xor
cmp
xor
sbbb
lahf
jecxz
pop
stc
imul
xor
lea
adc
in
fcompl
insb
or
add
rorb
jge
movsb
add
enter
cwtl
addl
bound
mov
bound
ss
ret
mov
jmp
ss
or
insl
cmp
cltd
aad
pop
iret
sub
jl
fcomi
jecxz
xor
lods
lock
cmc
loope
push
and
mov
xchg
repz
lds
inc
sbb
mov
inc
iret
push
popa
adc
dec
dec
rorb
add
adc
push
adc
imul
ds
xor
insb
lret
popf
or
jb
shl
adc
sbb
dec
icebp
jge
jno
mov
iret
xchg
stc
xor
pop
movsl
in
mov
inc
sti
fstp
adc
pop
pop
jnp
cmp
popl
pop
out
fwait
sub
bound
cmp
mov
daa
fists
mov
in
and
cli
mov
iret
sbb
test
popa
jle
and
sahf
xor
mov
out
scas
js
es
sti
or
into
scas
pop
movsl
jg
ljmp
push
fidivl
stos
daa
dec
lret
lret
jb
aaa
int
mov
call
imul
test
mov
mov
xchg
jns
or
fcoml
inc
cmp
repnz
pop
mov
shll
in
xor
sub
out
mov
ret
pop
mov
xorl
jae
lret
push
lods
loop
aaa
pop
and
push
push
push
repz
push
std
jb
xchg
test
push
in
sub
sub
fists
inc
popa
in
test
sti
movsb
movsb
sub
and
adc
xchg
jl
cmc
inc
dec
add
out
bound
mov
jnp
outsl
pop
in
jge
mov
xchg
mov
and
or
lret
dec
fisubs
sub
push
jne
les
outsl
jmp
push
pop
inc
push
cmpsl
lret
int
scas
sti
pop
shll
scas
test
push
imul
shrl
outsl
ret
add
sub
and
push
sub
ds
pop
and
xor
ss
fsubrs
jb
push
xor
int3
or
repnz
add
movb
and
and
into
loop
mov
test
sub
add
cmp
adcl
xchg
fstl
xchg
cmp
mov
jecxz
addr16
loope
stos
rcrl
jnp
std
leave
cmp
repnz
jmp
pop
test
iret
mull
dec
lret
pop
pop
mov
call
int
adc
adc
out
fmulp
fwait
test
decl
push
jb
mov
stos
inc
sub
mov
cmpsl
dec
loop
sti
cwtl
push
hlt
hlt
mov
scas
sub
cmp
push
and
xor
clc
adc
pop
mov
push
add
mov
ja
add
outsl
and
in
push
ret
sbb
mov
sti
clc
jecxz
and
imul
jmp
jno
pop
sub
inc
scas
jnp
idiv
in
imul
stc
out
fistl
xlat
and
scas
inc
dec
hlt
popl
jo
mov
dec
add
jp
cmc
nop
cmpsb
mov
in
mov
and
add
and
cli
iret
repz
imul
jnp
jbe
data16
sbb
cmc
cmp
mov
hlt
pop
cmpsl
lret
lea
sub
hlt
cmp
push
dec
mov
neg
xchg
cmp
test
mov
mov
stos
call
push
xchg
dec
mov
out
jmp
sarb
and
out
ret
in
jns
cmp
lock
cmc
es
sbb
rcrl
mov
pop
jno
mov
ds
pop
xor
inc
insl
adc
adcb
ljmp
dec
lock
push
jmp
mov
xchg
jne
test
mov
sbb
rorb
lods
adc
jmp
xchg
rcl
mov
jo
shl
push
lods
out
aad
push
add
leave
cwtl
pop
ret
push
lea
lcall
inc
jle
mov
fst
subb
lahf
ja
movsl
lds
aas
mov
addl
cmp
psubw
add
xchg
jge
fdiv
mov
jmp
imul
jae
mov
mov
inc
mov
stc
pop
pop
push
add
push
lcall
mull
push
xchg
sub
aam
jnp
cmc
insb
add
out
push
shrl
push
aas
out
repnz
pop
push
test
das
cmp
stos
nop
xor
movsl
in
mov
xor
cli
and
mov
and
inc
jle
push
cltd
loop
jae
mov
fwait
bound
enter
jle
or
je
adc
push
nop
push
addr16
push
int
xchg
mov
ret
call
call
lret
and
mov
rclb
bnd
mov
outsb
mov
cmovo
add
ljmp
arpl
pusha
jg
int
sbb
pop
aam
jecxz
inc
xchg
sub
adc
push
mov
and
test
leave
cli
cmpsb
jmp
pop
insb
cmp
cmp
mov
fwait
adc
cmp
xchg
xchg
inc
addr16
leave
sub
ds
cmp
std
fdivrs
mov
imul
adc
out
push
or
loopne
jne
mov
sbb
inc
faddp
insb
mov
leave
push
outsb
and
jne
roll
adc
lret
mov
xchg
out
mov
inc
pop
ds
call
or
pop
dec
data16
dec
and
or
popa
jne
int3
lods
jge
out
fstpt
or
cmp
sbb
dec
push
adc
lret
pop
sbb
mov
popf
or
stos
jmp
dec
or
fistps
xchg
out
sub
mov
ret
xlat
adc
int
or
add
jle
rorb
mov
inc
movb
and
pop
dec
lret
pop
or
loope
mov
test
setge
testb
js
cli
imul
outsl
push
aas
cli
xchg
mov
push
sbb
xchg
mov
lock
aaa
in
or
and
mov
movsl
push
xor
jb
arpl
lahf
mov
stos
add
and
cwtl
pop
add
push
inc
mov
dec
mov
push
fld
sub
adc
cmp
lcall
pop
pmaxub
inc
cwtl
enter
jmp
sti
dec
jle
lahf
sub
push
cmpsb
nop
adc
pop
sub
filds
stc
xchg
out
push
inc
pop
rclb
fs
pop
int3
loopne
daa
popa
mov
cmp
lret
cmp
pop
nop
sub
mov
fistpl
or
loopne
daa
push
jno
insl
mov
icebp
and
shl
test
sahf
js
movsb
mov
add
mov
lret
insb
inc
dec
sbb
rcrb
pop
adc
jecxz
xor
ret
mov
rolb
xchg
stc
enter
pop
out
je
stc
sub
inc
jp
push
cli
cmp
dec
nop
jno
push
fsubs
xchg
out
jmp
out
cmp
mov
jne
mov
xorb
scas
xor
mov
stos
outsl
pop
ljmp
stos
sub
pop
push
sti
ret
das
fisubs
cmc
adcb
jecxz
jb
push
inc
fisttpl
jp
stos
fs
mov
inc
dec
ljmp
sbb
jecxz
pop
add
push
mov
lock
movsl
and
dec
daa
inc
fisubs
movsl
cmp
xchg
in
out
push
adc
jo
mov
mov
iret
sbb
stos
and
int3
pusha
mov
mov
inc
inc
mov
mov
cmp
ljmp
cmp
sub
mov
mov
or
mov
cmc
fxch
jbe
or
addr16
sbb
cmp
xchg
repz
ss
jl,pn
addr16
dec
add
dec
stos
mov
xchg
fwait
stc
repz
xor
push
leave
jecxz
sub
scas
or
or
fisubrl
inc
icebp
push
jle
hlt
shlb
push
fsubr
adc
or
sub
imul
imul
iret
or
mov
hlt
sub
mov
mov
sub
icebp
cmpsl
mov
js
mov
fwait
mov
nop
mov
xor
inc
ja
push
jns
lret
aad
lahf
xor
inc
movsl
dec
sub
es
mov
leave
in
and
push
and
cmpsb
pushf
xchg
stos
cwtl
xchg
fadds
mov
ret
pop
and
loop
cmpsb
and
jne
pop
xorb
dec
inc
popa
jnp
int3
jae
imul
outsl
clc
mov
xor
pop
mov
insl
add
jle
add
pop
stos
dec
scas
out
pop
push
mov
mov
adc
arpl
adc
dec
enter
sub
jbe
or
xor
sub
xchg
insb
stos
cld
clc
insb
shrl
popw
cmp
and
shrb
int3
cli
mov
push
aam
dec
out
sub
inc
les
or
add
nop
pop
int
add
mov
xchg
xchg
pop
lods
pop
pop
aad
scas
mov
loop
movb
repz
into
sbb
loop
cltd
iret
cmp
mov
cmp
arpl
ret
das
xchg
mov
xor
adc
add
sub
mov
movsb
gs
dec
push
sbb
test
mov
aam
jb
add
lods
xchg
mov
xchg
xor
aaa
xor
mov
mov
dec
mov
fnstenv
test
scas
imul
mov
ficompl
add
lea
lea
sub
mov
imul
dec
cmp
fisttps
push
mov
adc
aaa
mull
dec
lods
pop
pop
push
je
iret
in
jno
and
mov
rcll
or
jae
xchg
push
shll
sbb
fidivrl
push
lock
adc
das
mov
movsb
ds
adc
lret
xchg
imul
dec
jmp
mov
cmp
pop
push
loop
xchg
push
pop
gs
xchg
dec
je
in
aas
jmp
pop
mov
das
loope
jae
push
xchg
mov
and
sbb
int3
lds
cmp
ds
jnp
push
lahf
push
aam
push
jo
dec
into
movsl
into
pop
mov
sbb
mov
inc
lods
fdivr
cmp
sub
scas
iret
xorb
sahf
dec
test
add
ss
jb
fcoms
adc
inc
inc
loope
int
nop
inc
repnz
or
xchg
jbe
mov
mov
xor
pusha
xchg
rcll
mov
add
push
icebp
adc
cmc
int3
cmp
or
mov
lds
inc
mov
and
enter
mov
jge
cwtl
pop
jg
sbb
sub
xor
mov
into
jb
mov
rcrl
sbb
jb
dec
xchg
adc
mov
jge
mov
rcl
ss
fsubrs
mov
rcrl
xchg
and
movsb
popa
or
sub
mov
mov
mov
arpl
fldl
out
rol
xor
or
xchg
lcall
shll
cmp
sub
adc
repnz
pop
sbb
xchg
cs
inc
aaa
popf
xchg
popa
xchg
push
sub
jmp
scas
dec
add
int
mov
ljmp
gs
fdiv
mov
xchg
pop
fcmovnu
add
ror
mov
xchg
mov
inc
adc
aaa
rcrl
add
pop
jne
mov
push
fld
pop
sbb
stos
mov
movsb
xor
add
mov
sbb
inc
jnp
sub
push
mov
inc
cmc
insb
add
sub
and
jne
mov
ret
sbb
leave
lods
int3
ja
cmpb
xchg
clc
cs
push
gs
pop
jo
dec
cmp
xchg
push
sarb
clc
sbb
sub
fsubl
pop
cmpl
iret
cwtl
fisubrs
sahf
mov
sub
mov
divl
movsl
jl
mov
mov
fnsave
in
lods
sbb
data16
pop
or
sbb
ret
jae
dec
mov
in
add
sub
dec
cmp
push
mov
jg
dec
add
loopne
into
fnstenv
mov
inc
sub
mov
mov
and
pusha
dec
inc
sahf
mov
lcall
in
xchg
aaa
and
stc
cmp
sub
cmp
pop
xchg
das
clc
les
out
iret
inc
cltd
push
imul
cwtl
and
ficoml
cmp
push
mov
stos
test
push
test
ret
pop
jge
jae
push
ret
iret
bound
pushf
sbb
or
cmp
insb
daa
int3
test
push
pop
jns
push
into
dec
out
test
mov
popf
je
or
fisubrl
cmp
lret
fs
dec
jns
lahf
xchg
sub
inc
dec
xor
jmp
iret
out
repz
mov
jp
das
gs
mov
test
popa
mov
cmp
sub
push
mov
pop
lea
add
adc
pop
pop
jl
insb
push
dec
xor
lods
std
insb
jbe
push
stos
cmp
pop
xor
add
pushl
dec
sahf
sbb
jne
pop
jb
inc
push
setb
leave
lds
cmc
outsb
sbb
mov
mov
int
jmp
pushf
shr
lods
jge
pop
pop
pop
call
loopne
mov
stos
cmpsb
ss
idiv
mov
push
fs
das
les
repz
divb
pop
clc
cli
movb
sarl
or
mov
addr16
sbb
int
mov
sbb
push
push
repnz
jle
nop
jg
jg
in
movsb
mov
ja
sbb
in
mov
cmp
cli
pop
mov
fs
pop
std
adc
repz
inc
leave
jbe
cmp
aam
cs
add
hlt
scas
cmp
icebp
and
add
mov
je
loop
fcomi
cmp
fidivrl
movsl
jnp
and
xchg
push
sbb
cltd
cs
inc
mov
aam
bound
fptan
inc
push
popa
das
popf
mov
loopne
jge
ljmp
add
mov
jns
scas
addr16
xchg
ficomps
lahf
xor
push
sarl
cmp
pop
and
push
mov
inc
test
ficomps
push
or
inc
xchg
push
pop
jbe
sub
aam
int3
add
sar
sbb
je
and
jle
adc
xor
sahf
mov
hlt
cmp
push
ds
sbbb
rolb
outsl
mov
xor
pop
jl
jge
lret
movsl
sub
lds
test
in
or
ss
jecxz
or
test
rorl
jo
ja
push
jno
add
xchg
jmp
jmp
push
xchg
loope
push
roll
inc
mov
jle
push
sub
or
sbb
xor
pop
mov
inc
call
pushf
and
ljmp
or
or
cs
pop
pop
ret
add
ret
push
cmp
js
mov
cs
divb
test
adc
xor
jge
lds
out
xchg
push
adc
int3
int3
icebp
scas
cwtl
or
call
clc
mov
leave
addr16
int3
or
sub
push
or
mov
xchg
shll
or
fstpt
or
pop
outsl
pop
les
adc
mov
lcall
pop
js
sub
je
stos
ss
mov
loopne
inc
es
es
push
mov
fsubs
test
mov
fwait
mov
int
daa
mov
insb
mov
and
mov
decl
xor
or
outsl
jmp
das
dec
ret
test
icebp
lahf
add
mov
outsl
sbb
or
push
das
sbb
sub
addr16
cmp
cmpsb
jle
hlt
sub
xchg
xlat
clc
xorb
in
or
jmp
mov
inc
jae,pn
mov
add
divl
out
or
mov
sbb
lret
outsb
cmp
sbb
jmp
bound
test
sbb
inc
aaa
nop
mov
cwtl
aam
jns
pop
dec
jmp
xchg
add
mov
push
imul
or
sbb
into
sahf
test
mov
pop
and
mov
dec
xchg
out
lret
push
inc
inc
sbb
pcmpgtd
ja
add
int3
insl
jae
cmp
decl
push
fwait
addb
dec
add
dec
xor
ljmp
mov
out
sbbb
and
mov
adc
xchg
jne
cmpsl
sub
loopne
inc
jmp
ss
or
jbe
jae
cwtl
add
push
xchg
inc
dec
jno
ja
jle
jbe
imul
out
sbb
push
es
push
je
jb
decb
jnp
les
dec
add
pop
js
ljmp
shlb
ljmp
mov
in
and
mov
pop
arpl
lret
fwait
clc
push
xchg
cs
addl
adc
outsb
out
leave
xlat
ds
xchg
cwtl
test
xor
test
cmp
mov
inc
movb
out
rcll
les
dec
push
dec
stc
movsb
addb
adc
mov
or
aas
scas
adc
xchg
sbb
xlat
je
sbb
nop
inc
mov
pop
leave
pop
or
ret
cwtl
rorl
xchg
pop
cs
xchg
inc
mov
loopne
mov
imul
fcoms
lods
xorb
inc
and
andb
aaa
aad
lock
sbb
iret
std
or
add
pop
mov
roll
aaa
adc
xorb
std
js
adc
xchg
sub
repnz
pop
jae
daa
or
push
addr16
dec
sub
arpl
jl
lret
hlt
mov
dec
xchg
sub
cmp
lds
aas
add
xor
lods
aad
jmp
adc
mov
xchg
mov
sarb
xor
mov
mov
jbe
fidivs
popf
jb
xchg
ds
jle
clc
mov
aaa
fldenv
inc
xchg
pop
jne
and
inc
adc
pop
sub
pop
cwtl
or
clc
add
inc
sbb
mov
pop
fstpl
fimull
cmpb
movsb
jge
fildll
push
enter
mov
loop
mov
xchg
jb
mov
pusha
or
inc
xchg
stos
lret
gs
sbb
push
cmp
cs
xchg
pop
repz
pop
xchg
cmpl
sub
xor
test
clc
ja
pop
insb
insl
push
lods
push
xchg
ds
mov
jnp
cmpsl
bts
inc
sub
int
xor
push
mov
sahf
fcomps
stos
andl
jb
ja
cld
lret
pop
ss
aaa
dec
scas
fwait
sbb
stos
add
jle
and
loope
test
addr16
test
cmp
dec
in
test
push
in
push
outsb
sub
and
hlt
lret
iret
test
mov
ret
and
call
adc
and
dec
sbb
test
in
mov
pop
ds
cmp
hlt
cmp
mov
fsubl
jecxz
cld
mov
push
movsl
cmp
frstor
nop
mov
xor
jle
ret
fwait
loop
pop
push
in
xor
push
shll
lods
lock
and
mov
xorb
sbb
test
imul
pop
stos
sahf
mov
dec
and
fistl
aas
fimull
xchg
loope
lahf
jbe
xor
mov
xor
negl
bound
sub
notb
test
push
call
imul
pop
mov
int
lret
fnsave
sbb
sub
mov
jbe
push
push
dec
mov
sbb
dec
popf
jo
mov
jecxz
sub
cmp
cmp
bnd
addr16
test
jp
push
fisubs
mov
outsl
dec
or
out
outsl
mov
add
push
fnstsw
dec
ror
or
push
lret
mov
cmp
ljmp
dec
push
movsl
xchg
ss
dec
fisttps
repnz
sti
arpl
popa
xor
das
and
mov
xor
cli
jae
sbb
es
std
call
pop
push
xor
jne
in
fcoml
lock
adc
cmpsb
cmp
pop
sbb
dec
shll
stos
push
mov
dec
aam
sti
fdivrp
gs
adc
iret
jb
stc
orl
sarl
je
push
call
imul
jecxz
lret
sbb
mov
je
je
fdivrs
inc
es
lods
jae
or
pop
sbb
fcmovbe
dec
in
insl
outsl
pop
in
jb
dec
cmp
dec
aaa
jp
scas
sbb
and
or
scas
imulb
mov
mov
xchg
out
xorl
sub
movsl
rcll
dec
dec
fsubrl
inc
push
sbb
mov
mov
into
and
test
sbb
sub
sbb
mov
mov
in
fsts
mov
push
xchg
les
sti
shl
inc
mov
xchg
clc
xor
test
add
adc
mov
outsl
adc
ljmp
lret
or
fistpll
sbb
push
in
and
aam
stc
add
test
cmp
sti
cld
dec
or
jecxz
lods
in
cmp
pop
mov
rcl
adc
xlat
sbb
or
iret
and
lock
inc
popf
jo
cmc
loopne
in
mov
add
cmpsb
test
adc
imul
add
arpl
adc
mov
pop
enter
rcr
xchg
and
icebp
sub
adc
clc
int3
es
ja
cmpsl
xchg
pop
leave
ret
pop
add
cmp
inc
xor
ljmp
jl
lret
push
push
jmp
mov
sub
sub
inc
mov
je
add
and
pop
adc
iret
in
xchg
inc
adc
fcomps
mov
push
and
pop
inc
cwtl
mov
ret
or
sbb
insl
fwait
and
sahf
xchg
mov
push
cmpb
imull
mov
outsb
mov
and
cmpb
xchg
xor
xchg
push
jmp
xchg
rorl
and
aaa
sub
xchg
fisttpl
lock
addb
push
sbb
movsb
imul
sub
push
add
xchg
test
std
out
pushf
in
repnz
mov
mov
mov
push
cmp
shl
scas
jmp
hlt
jo
and
push
clc
xor
ret
mov
stos
add
jns
fcmove
mov
cmp
mov
int
lds
cmpsl
lcall
xchg
in
mov
fs
xor
cs
dec
pop
icebp
shl
xor
rolb
xlat
cmc
xlat
shrl
nop
sub
pop
lock
mov
stos
mov
andl
rcrl
mov
sub
imul
fdiv
out
inc
and
inc
mov
test
pop
das
mov
xchg
insl
push
es
or
call
faddl
add
push
cmc
dec
imul
dec
sub
adc
mov
roll
ret
push
mov
std
inc
xor
xor
ljmp
loopne
cltd
rorb
push
mov
mov
je,pt
xchg
enter
push
jnp
pop
dec
fcoms
mov
cmpsl
sbbl
adc
jbe
mov
in
jne
xlat
mov
roll
in
test
mov
sbb
adc
fdecstp
xchg
pop
xchg
out
or
mov
ret
outsl
mov
pop
pop
dec
sub
mov
push
out
pusha
js
dec
jecxz
pop
mov
sti
or
xorb
pop
mov
es
pop
aaa
es
addb
xchg
das
cmp
subb
or
inc
fistl
pop
or
sbb
add
push
xlat
ds
mov
dec
stos
jge
mov
out
ficoml
jle
popa
mov
mov
aaa
fwait
mov
cmp
mov
push
rcr
jge
xchg
and
jns
sbb
sbb
mov
xor
jp
iret
xlat
pop
dec
inc
dec
or
icebp
je,pn
scas
enter
in
jge
pop
pop
lcall
rol
add
int
cmp
stos
and
mov
orl
mov
repnz
mov
jle
mov
rcll
lock
fidivl
ret
int
in
cli
sub
push
jle
and
push
pusha
jg
inc
jnp
dec
cmc
into
ja
pushf
xsavec
aad
test
arpl
and
push
leave
mov
fs
loopne
and
mov
fucomip
dec
jecxz
insl
jnp
push
pop
inc
sub
adc
in
jae
push
insl
or
test
subl
dec
or
std
mov
pop
mov
sbb
iret
jae
or
lock
add
jmp
andl
jl
xor
jl
arpl
jmp
aad
mov
shlb
mov
xorl
mov
xor
xchg
pop
sbb
add
jg
jmp
repz
rclb
imul
inc
or
mov
push
push
sbb
ret
xchg
icebp
inc
insb
mov
icebp
in
fldt
hlt
lds
jl
das
push
jno
testl
sub
push
fwait
movsl
sbb
xor
nop
dec
cmpsl
jne
xchg
cmp
cmp
add
push
and
xchg
inc
repz
ja
leave
lret
jae
pusha
icebp
adc
pop
xchg
adc
pop
sti
xchg
xor
aas
mov
sbb
loopne
ret
je
xchg
adc
shll
and
test
fisttpll
push
daa
sti
iret
data16
jl
cmpsb
lods
mov
stc
jmp
jnp
cmp
sbb
add
push
sahf
push
out
add
int3
push
mov
pop
lret
pop
pop
dec
fnsave
aaa
stc
or
sarl
das
adc
cwtl
lcall
cmc
scas
lcall
mov
jg
sbb
mov
mov
rorl
add
or
mov
or
xchg
ds
add
adc
adc
cltd
cmp
add
fists
enter
enter
sbb
xor
or
lret
push
testl
dec
in
lds
xor
push
or
pop
or
or
hlt
fcompl
dec
sub
ret
and
fsubl
fdivrs
mov
pop
into
test
xor
cmpsl
dec
stos
test
fdivrs
pop
fsubs
cmp
ss
push
faddl
outsb
jmp
mov
cltd
jg
and
mov
mov
outsl
dec
push
ficoml
js
mov
fs
sub
in
into
and
xchg
adc
fcmovnb
insl
adc
bound
aaa
mov
popf
jne
mov
scas
shlb
push
cmp
out
shll
or
xlat
xor
sub
movsb
enter
shll
movsb
dec
test
pop
jne
negb
dec
mov
int
hlt
inc
out
aam
adc
fwait
xor
fisubrs
cmp
jo
push
pop
mov
sub
xchg
cmp
sbb
gs
rcll
ljmp
shrb
sbb
scas
sti
inc
test
mov
pop
fidivrs
call
lock
jnp
sti
out
jge
out
cmpsb
inc
out
and
shl
mov
or
aad
xchg
ret
xor
out
jp
jp
rcrb
jno
scas
inc
push
cwtl
dec
ja
dec
mov
jge
dec
sub
dec
adc
jmp
repnz
mov
sub
or
orb
push
fstpl
mov
std
cmpsb
xchg
jle
jbe
inc
push
call
test
out
sub
cmp
or
adc
cmp
int3
or
test
cmpxchg
sbb
sub
aad
aaa
cmp
adc
mov
mov
sub
inc
les
push
repz
lea
sbb
in
mov
lret
mov
mov
jns
sbb
mov
sub
sub
out
cmpl
inc
nop
jmp
add
filds
mov
xor
xor
mov
add
imul
cmc
or
cmp
scas
les
inc
fisubrs
or
jb
dec
scas
push
dec
mov
arpl
push
inc
loope
es
out
pop
rcll
dec
adc
xor
std
sub
repz
add
das
insb
pop
add
pop
pop
loope
mov
inc
pop
loope
pop
icebp
scas
pop
inc
sbb
test
adc
in
clc
mov
cli
insl
stc
add
and
movsb
push
jecxz
sbb
out
lods
xor
sarl
inc
pop
popa
jge
pop
scas
and
in
lea
xor
fld
les
push
lret
ljmp
cmp
mov
fsubrs
or
mov
add
xor
test
push
andl
mov
int
das
inc
in
stos
inc
inc
lret
pop
movsb
test
orl
imul
loopne
or
jno
shl
mov
scas
mov
pop
outsl
testb
jo
cmp
xor
dec
xchg
xor
push
sarb
jle
add
ret
mov
push
aad
push
add
sbb
mov
mov
stc
js
popa
lcall
xor
push
nop
hlt
shlb
cld
cmp
dec
ds
push
cmc
sub
jae
push
push
adc
xchg
gs
mov
mov
test
movsl
testb
sub
inc
pop
xlat
iret
js
ja
in
rcrb
inc
cmp
or
mov
push
xchg
lea
int
mov
movsb
in
ljmp
mov
daa
movsl
xor
addb
mov
add
rcll
add
or
jb
pop
or
jne
pop
pop
mov
xor
dec
inc
adc
xchg
dec
fwait
add
cli
sbb
jecxz
cmp
std
cmp
jmp
pop
ret
mov
clc
and
test
mov
js
xor
lods
inc
push
pop
xchg
cmp
and
push
xchg
or
je
loop
mov
sahf
xor
cmc
mov
cmp
jl
ss
into
push
sbb
call
add
lahf
xchg
int3
imul
push
out
or
push
mov
in
xchg
enter
mov
or
and
cli
mov
cltd
nop
pop
repnz
mov
push
dec
mov
jle
aaa
xor
push
inc
pusha
enter
shll
cmp
out
cmpsb
hlt
jno
sbbl
and
mov
lods
int
push
pop
push
jg
ljmp
pop
mov
cmp
lret
aas
imul
imul
into
add
mov
xchg
jne
or
xor
dec
mov
sub
scas
ret
testb
sbb
inc
int3
pop
push
mov
sub
mov
sub
bound
jae
dec
xor
adc
xor
mov
sub
xchg
cmpsb
add
fxch
mov
shlb
mov
mov
or
or
mov
test
inc
adc
test
in
stos
fisubs
mov
inc
add
clc
hlt
xchg
add
mov
idivb
and
jmp
movsl
xchg
fwait
loope
inc
inc
lods
dec
fnsave
fnsetpm(287
sub
rorb
jns
pop
mov
jg
adc
lods
inc
adcl
int
es
cmp
in
xchg
pop
movsl
xchg
sbb
adc
and
mov
gs
fstl
xor
in
stos
ja
mov
pop
fldt
sbb
sti
jge
aad
push
ret
pop
outsb
dec
add
push
or
inc
fsubrs
sub
jle
popa
jp
lock
add
aad
mov
pop
cmp
cltd
dec
push
mov
out
movsl
cwtl
es
and
xchg
xchg
push
sub
dec
pop
clc
call
scas
jo
mov
shlb
shlb
ret
ss
lock
fucomp
mov
jo
popa
inc
mov
into
jbe
lods
jge
popa
xchg
iret
cmp
inc
mov
jecxz
sbb
lahf
lods
mov
mov
mov
sub
dec
das
jno
mov
iret
pusha
repz
xlat
std
fiadds
bound
cmc
fdivs
insb
jecxz
jns
rclb
sahf
jno
adcl
push
and
mov
ud0
icebp
or
jns
sub
mov
cmp
add
mov
xchg
or
popf
xor
faddl
or
rcrb
or
mov
pop
and
popf
bound
call
pop
fbstp
xor
inc
jl
mov
adc
scas
loopne
mov
and
sub
fwait
rcrl
mov
mov
jg
adc
repnz
xorb
cmpsb
fcompl
cli
scas
ffreep
out
cmp
aaa
mov
pop
adc
jb
push
idivb
sbb
xchg
inc
shr
lods
lahf
dec
pop
jne
outsl
test
push
ficoml
sbb
daa
insl
sahf
fimuls
sbb
lret
test
inc
cmp
stos
jmp
push
mov
push
ja
xor
imulb
imul
test
cmp
push
rcrb
jb
mov
mov
fiaddl
rclb
jb
or
movsb
xor
add
sub
xor
int3
je
push
jb
and
test
out
hlt
cmp
xchg
and
mov
lret
inc
push
sbb
mov
inc
cmpsl
es
xor
pop
cltd
mov
mov
andl
xor
and
pop
inc
mov
fstpl
fnstcw
jmp
sbb
mov
les
xor
inc
insl
stos
insb
scas
and
sub
ja
jbe
and
loope
pop
mov
aaa
in
dec
cltd
cmp
dec
repz
xor
es
loop
das
fildll
jg
mov
mov
shlb
pop
cli
pop
out
sbb
mov
sbb
aaa
xor
inc
push
xor
add
lret
xchg
ja
cwtl
push
stc
test
test
outsb
mov
jbe
int3
lret
dec
add
adc
pop
test
es
xor
dec
sub
xlat
jne
mov
cwtl
mov
dec
or
push
inc
lea
icebp
mov
and
jmp
pusha
mov
pop
pusha
pop
add
fdivl
popf
pop
dec
in
pop
mov
sbb
lret
dec
and
mov
rclb
pop
aaa
add
int3
sbb
insb
jnp
out
push
jmp
mov
adc
iret
mov
test
or
into
lods
mov
inc
pminub
dec
cmp
pop
and
push
js
inc
outsb
in
repnz
and
sahf
jae
dec
nop
jnp
rcrb
stc
and
sub
test
aaa
fstpl
out
mov
mov
cmp
sub
push
adc
cmpsb
hlt
testl
inc
xor
jl
cwtl
and
test
pop
sahf
mov
add
jb
and
adc
xchg
mov
dec
ja
aaa
add
sub
addr16
arpl
arpl
fsubr
pushf
sub
test
jmp
int
xor
push
mov
push
imul
popa
sbb
aas
bound
les
jns
stos
out
popa
push
imul
inc
in
mov
test
clc
jb
sbb
insb
loope
imul
dec
out
push
mov
push
pop
fsubrp
arpl
dec
int3
ficompl
jmp
cmp
sbb
jns
shll
dec
addr16
jle
mov
jg
loope
adc
xlat
aad
jnp
std
mov
or
add
insl
cmpsl
fnstcw
icebp
mul
jnp
mov
xchg
dec
ljmp
pop
mov
ret
mov
xchg
js
roll
push
lea
mov
sbb
jns
add
push
sub
aad
rcll
and
sub
dec
mov
pop
add
data16
jno
xor
jle
inc
sbb
jmp
ja
into
add
movsb
cmp
rcrb
push
mov
sbbl
leave
rcrb
inc
imul
mull
push
xchg
ss
test
shll
imul
nop
cs
sbb
jb
sti
daa
dec
jge
and
repz
sbb
out
jno
mov
xor
sbb
ja
jb
xor
mov
fwait
data16
cltd
sub
inc
rorl
xor
icebp
pop
movsb
insl
xor
lret
mov
xchg
addr16
sub
sbb
push
cmp
cmp
sbb
stos
jae
jno
cmp
or
adc
mov
dec
call
cld
data16
xchg
dec
insb
pop
rclb
adc
cwtl
das
jg
lret
cmp
push
sub
fisubl
lret
imul
or
dec
xchg
pop
loope
mov
fwait
mov
popf
inc
inc
enter
aas
das
das
sub
out
sbb
ud0
sub
enter
jbe
fiaddl
scas
pop
sbb
jmp
aas
push
push
arpl
aas
les
mov
xchg
push
inc
icebp
inc
popa
inc
push
js
rcrb
into
xor
das
fwait
add
mov
pop
pushf
aam
push
mov
dec
pop
jbe
mov
loope
pop
xchg
jmp
xchg
mov
inc
pop
cmp
mov
cltd
lahf
push
add
fidivrl
push
jg
and
xchg
aas
mov
pop
mov
cld
mov
pop
inc
cmp
leave
pop
shll
ja
xor
jecxz
cltd
push
das
mov
or
add
bound
pop
sub
inc
sbb
das
sahf
adc
cmp
popa
add
add
or
lcall
jg
in
int
and
aaa
shrl
decb
setne
jg
dec
xor
into
subl
sub
xlat
aam
sbb
enter
mov
call
nop
outsb
repnz
decb
sbb
inc
enter
mov
je
lahf
outsl
sahf
inc
fs
or
fimull
in
jle
push
mov
sbb
pushl
xchg
dec
pop
pop
mov
popf
outsl
lds
ss
hlt
lock
movsl
js
add
orl
xchg
call
pop
and
sub
std
gs
bound
mov
fs
test
out
mov
xchg
insl
push
inc
inc
push
inc
pusha
cmp
mov
sahf
sub
ret
adc
repz
jmp
or
push
cmp
enter
push
pop
or
ss
xor
xor
into
cltd
daa
out
das
sbb
dec
inc
push
mov
icebp
or
mov
ljmp
push
es
aam
push
in
dec
loopne
xor
or
dec
outsb
adc
sbb
sub
test
inc
jmp
push
repz
jle
incb
mov
push
mov
imulb
insl
jecxz
inc
xor
push
je
cmc
mov
fidivrl
push
mov
add
ljmp
or
pop
xchg
shrb
lock
jl
test
mov
into
popf
mov
lods
xchg
inc
jbe
cmp
das
scas
add
dec
xchg
cmpsb
lods
sub
push
mov
push
fisubrl
fiadds
mov
mov
dec
mov
cmp
sbb
pmaxsw
fs
cld
ljmp
or
lock
and
pop
adcb
xor
xchg
jmp
rcrl
dec
arpl
jbe
xchg
das
pop
xchg
mov
xchg
aam
adc
sete
or
push
sbb
jl
push
sarl
cmpsl
inc
fdivr
ss
imul
leave
sahf
mov
dec
adc
pop
or
les
sbb
jb
mov
jle
pop
xor
adc
lret
and
lods
jmp
mov
jmp
aaa
icebp
movsl
insb
pusha
jno
jo
hlt
lods
mov
bound
or
bound
cmp
push
jne
mov
dec
or
xor
pushf
push
enter
jae
sub
xor
sbb
in
mov
lock
or
mov
jmp
xor
jnp
loopne
xchg
into
leave
testl
andl
jbe
push
mov
aaa
add
fldcw
enter
mov
sar
cmpsl
sub
ret
jnp
inc
mov
cmpsb
inc
jnp
ret
stc
xor
aam
mov
mov
ret
push
cmpsl
ret
xchg
sub
fisubs
cmp
xchg
mov
pop
or
dec
mov
arpl
push
sbb
outsb
cli
sub
pop
mov
mov
sbb
mov
mov
pop
cs
fcmovnu
push
lds
test
xor
aas
push
mov
adc
mov
cmpsb
and
js
les
or
inc
repnz
jnp
push
repz
je
jecxz
mov
pop
rolb
leave
cmp
fsub
and
and
xor
test
or
cmp
inc
ret
loope
adc
or
cwtl
jmp
rcll
jecxz
imull
aaa
std
movsb
cli
or
aas
jnp
movsl
sbb
dec
daa
mov
sub
dec
lahf
lret
sub
mov
scas
mov
sub
or
inc
imul
pop
pop
cmp
cmp
lcall
add
xchg
mov
faddl
sti
mov
mulb
lds
out
and
aaa
adc
psubq
pop
je
or
out
sbb
mov
mov
mov
push
jno
xchg
arpl
test
aam
in
es
scas
add
pop
ret
push
xrelease
inc
mov
cmp
test
addl
roll
pop
jne
add
adc
sbb
inc
and
pushf
and
add
dec
cmp
sbb
cli
jg
push
stos
lcall
out
inc
loop
in
aam
rolb
cltd
sbb
push
shr
cs
push
dec
add
adcl
add
popf
jp
aam
lods
mov
sti
pop
adc
xchg
or
xchg
pop
or
cmc
stc
or
jne
sub
and
aam
lods
loopne
mov
scas
shl
inc
int3
pop
inc
ds
subb
add
pop
ljmp
sub
adc
insl
cli
cmp
pop
inc
add
cmp
enter
xor
inc
test
std
outsb
imul
xor
or
ja
xor
insl
fs
mov
push
shlb
int
pushf
mov
adc
fs
pushf
inc
cmp
aad
sbb
pusha
adc
popf
cli
inc
aam
hlt
mov
cwtl
sbb
jecxz
iret
push
fcoml
mov
mov
cld
xor
out
aad
jo
enter
aaa
mov
mov
scas
out
js
push
imul
jmp
wrmsr
push
mov
lods
and
or
lcall
cwtl
les
inc
fisttps
jmp
out
fnstenv
ret
jmp
into
cmp
pusha
fs
in
ljmp
adc
add
jno
push
dec
dec
push
sti
popf
in
or
subl
mov
imul
dec
mov
or
xor
filds
loope
push
sbb
loope
inc
in
cmp
loop
bound
cmp
lods
dec
fidivl
loopne
scas
mov
jno
mov
inc
outsb
fistps
push
and
stos
lods
cmp
fwait
push
ja
inc
dec
cld
mov
mov
cwtl
or
outsb
incb
dec
adc
or
imulb
inc
add
xor
cltd
orl
dec
dec
in
cmp
jnp
fidivl
adc
jl
jp
sti
mov
cs
out
sbb
push
sub
mov
xor
lds
cmc
push
das
push
sub
jmp
add
sub
ret
pop
cs
jmp
cmc
sub
and
loop
test
and
xor
lcall
stos
outsb
addr16
scas
inc
aaa
dec
aaa
cld
js
and
jge
or
aaa
jo
or
sbb
sub
leave
cmpsl
je
mov
and
sbb
aaa
jmp
pusha
add
adc
stc
or
adc
and
es
out
out
jo
mov
mov
out
mov
scas
fstl
add
mov
scas
pop
jl
subl
xchg
lock
int3
int3
jg
sbb
jmp
sti
mov
aad
cwtl
dec
insl
mov
mov
mov
lcall
xor
jbe
out
test
xchg
inc
mov
mov
or
jnp
iret
mov
les
jecxz
adc
pop
test
jns
stos
mov
outsl
sbb
and
lock
sub
insb
addr16
in
pop
iret
js
add
inc
fnstcw
popf
pop
mov
cld
dec
push
sbbb
sahf
xor
sbb
and
aas
test
jle
jmp
adc
pop
and
fiaddl
stc
in
xchg
addr16
mov
nop
mov
dec
in
jbe
gs
pop
cmp
mov
jno
sti
xchg
mov
lods
pop
ror
inc
pop
lods
mov
sti
jo
xchg
cs
jg
mov
push
in
daa
xorb
sti
nop
jo
jg
sarb
inc
push
int3
adc
mov
mov
ss
lea
inc
and
mov
jmp
mov
imulb
das
aas
les
xor
or
popa
mov
test
and
sbb
push
jo
push
adc
xchg
stos
not
dec
pop
sbb
mov
mov
xchg
xchg
cs
ljmp
inc
idivb
out
ror
mov
leave
icebp
dec
xchg
push
or
add
adc
cmpsb
push
mov
pop
mov
mov
rclb
mov
fcoms
mov
aaa
mov
xchg
add
jns
cmp
shlb
cli
addr16
mov
mov
in
hlt
scas
mov
mov
push
in
es
mov
insb
sbb
add
mov
dec
inc
pop
aas
push
sub
cmp
loopne
mov
enter
rcll
push
test
xchg
cmc
lahf
enter
pop
ret
mov
dec
out
dec
mov
in
stos
sahf
push
push
jecxz
or
or
cmp
lahf
out
xchg
push
inc
xlat
test
mov
pushf
iret
ljmp
shl
je
roll
xchg
repnz
sti
mov
jnp
bound
cmp
fcmovnb
cmovl
out
fistpl
adc
sti
jecxz
lods
cmpsb
into
and
push
inc
fidivrs
in
jnp
lods
aas
cmp
mov
sub
adc
fists
mov
or
sbb
mov
and
aaa
int
pop
orb
dec
sbb
fcoml
testb
pop
rcrb
jle
lea
ds
in
sbb
call
ljmp
xchg
mov
ja
movl
mov
mov
aam
imul
push
jg
pop
inc
sbb
push
xor
ret
mov
xor
cmp
mov
mov
mov
jb
es
dec
scas
popf
push
cmp
les
mov
add
mov
cmpsl
mov
jbe
mov
xchg
test
xchg
in
and
adc
mov
cmpps
inc
jo
mov
fstpt
das
xor
ljmp
or
add
insl
shrb
sub
ja
and
xchg
das
lret
xchg
mov
jmp
pushf
shrb
insl
mov
divb
repz
jbe
lcall
icebp
in
push
enter
inc
push
jmp
lock
sbb
inc
jnp
jb
out
aam
ret
mov
dec
pop
repz
or
mov
mov
push
push
jle
and
xor
cltd
xor
push
dec
mov
cmpb
or
call
sahf
add
ds
jne
jae
adc
subb
jmp
out
inc
cltd
xchg
mov
mov
mov
xchg
leave
add
outsl
scas
xchg
movsl
call
pusha
dec
sti
test
icebp
dec
es
mov
push
cmp
mov
pop
pop
popa
je
xor
sbb
or
aam
mov
mov
xchg
pop
jp
lret
leave
adc
loope
lods
jmp
adc
daa
push
test
cmpsl
cmp
sbb
inc
mov
scas
add
jge
sub
mov
and
mov
or
bound
sahf
dec
mov
test
movsb
cltd
xchg
addl
test
cmp
fists
push
jp
sti
lahf
push
fcoms
aaa
mov
call
sub
loopne
mov
daa
roll
sub
bound
cs
sbb
adc
popa
sarb
sbb
push
call
cmp
mov
ljmp
in
push
hlt
or
inc
pop
addr16
lahf
cmp
add
iret
add
inc
mov
aaa
fcmovnu
gs
cmp
jp
xlat
push
rolb
mov
inc
ret
lcallw
popf
push
frstor
mov
mov
data16
dec
fistl
adc
mov
loopne
in
sbb
lock
or
or
sbb
dec
fiadds
xchg
dec
mov
cmp
cmc
mov
aaa
leave
scas
adc
jno
inc
mov
mov
repz
ret
cmp
enter
push
out
push
cld
sub
test
loop
jae
addr16
repnz
lods
divl
or
mov
mov
push
pop
jbe
mov
dec
dec
cmp
add
cld
arpl
mov
test
loopne
xchg
icebp
mov
jmp
outsl
je
sub
loop
xchg
push
xchg
sbb
lods
add
stos
adc
cltd
fdivrp
aam
or
cltd
sbb
or
out
mov
hlt
rcll
bound
cli
ret
sub
xchg
inc
sub
lret
loop
fistl
jmp
outsb
stos
dec
rorb
sub
in
cmc
mov
xchg
cltd
pop
out
stos
popf
movsb
jp
ljmp
cld
xchg
mov
push
rorl
and
stos
adc
pop
cltd
add
ss
dec
mov
push
add
xchg
lahf
jns
in
jp
aaa
cmpsl
push
out
aam
test
jb
dec
addl
adc
push
add
jge
sbb
stos
cld
shrb
in
cli
mov
cld
dec
fisubl
sub
pop
push
std
aad
out
push
push
fs
addr16
and
xlat
ja
push
xchg
js
xchg
cmp
repnz
pop
add
in
xchg
add
mov
mov
xor
movsl
cmpsb
pop
cmp
mov
push
fists
call
ja
xor
inc
out
jae
js
pushf
xchg
sbb
inc
adc
dec
and
and
rcl
mov
push
cmpsl
notb
adc
in
es
enter
jne
dec
inc
jp
shlb
add
aam
ret
in
push
mov
js
sbb
sbb
ficoms
es
sbb
jmp
pop
test
mov
and
cli
sub
sbb
fmul
xchg
cmp
xor
mov
cmp
mov
scas
mov
fwait
jnp
jbe
fldcw
push
cmp
test
dec
add
dec
push
bound
mov
out
dec
dec
and
fmul
or
jbe
pop
jb
xchg
cmpsb
mov
fdivr
decl
xor
jecxz
clc
sbb
das
jmp
notl
les
mov
jmp
jae
pop
out
mov
jg
cmp
pop
push
inc
sbb
outsb
movsb
or
pop
adc
xchg
arpl
and
sbb
add
pop
add
dec
jb
jecxz
push
xchg
mov
bnd
xchg
and
roll
or
cltd
pop
jae
lret
movsb
insl
mov
lods
mov
sbb
inc
push
mov
ja
inc
adc
jge
and
inc
cmp
adcb
in
out
adcb
scas
or
lods
mov
int
fcmovu
les
cmp
int
xor
push
inc
out
jg
fdiv
mov
mov
stos
sub
aas
jnp
dec
test
xor
push
scas
dec
push
pop
roll
bound
das
sub
je
and
inc
scas
subl
mov
mov
in
inc
or
push
movsl
rcll
dec
jp
loopne
stos
fldl
sti
test
popf
fldl
xchg
xor
sbb
mul
insb
and
sbb
cwtl
adc
pop
mov
call
or
movsl
mov
or
loop
cmp
inc
jb
outsb
ss
push
subl
cmp
gs
push
ss
dec
mov
test
mov
inc
jnp
lods
cmp
inc
movsl
mov
test
sti
jmp
pop
mov
outsb
or
xchg
pusha
push
xchg
pop
or
mov
mov
jo
popa
popf
mov
mov
sbb
loop
or
inc
call
sub
bound
movsl
test
stos
inc
or
popf
sub
sub
hlt
lahf
pop
mov
mov
pop
mov
jbe
pop
lds
xor
dec
xor
imul
or
fisubl
cmp
and
sub
mov
adc
hlt
mov
xchg
jg
test
cmpsl
jb
fbld
fwait
inc
jmp
adcl
xor
cmp
cltd
int
imul
inc
clc
inc
xlat
mov
mov
or
js
and
push
leave
cmp
sub
fldt
stos
lahf
test
pop
mov
test
xor
sub
clc
push
sub
mov
pop
pop
xorl
repnz
mov
stos
sub
pusha
je
mov
std
fdiv
sub
xor
add
cmc
xlat
rclb
jnp
cmp
add
test
les
popa
mov
pusha
lahf
mov
sbb
adc
pop
cmp
mov
push
jno
xor
into
imulb
adc
ret
in
ret
and
xchg
push
test
inc
push
pop
jnp
sbb
ds
cmc
movsbl
test
outsl
push
int3
ss
mov
dec
ret
pushf
inc
mov
inc
lcall
add
cwtl
and
les
andl
sarb
sbb
nop
rorl
lock
inc
cmp
pop
jbe
movd
mov
push
jge
out
lret
popa
das
add
icebp
test
mov
sub
lret
and
xchg
sub
pop
mov
add
mov
dec
jg
aaa
or
xchg
sbb
add
out
cltd
mov
nop
and
xchg
mov
cmc
jno
movsl
out
fnstenv
outsl
imull
scas
sbb
das
or
cmp
push
rcll
xchg
pop
cwtl
fistpll
sub
mov
sbbl
pop
outsb
pop
fcmovnbe
xchg
xor
and
sbb
sahf
cmp
jns
inc
int3
adc
and
mov
jle
or
test
and
rcrl
mov
les
roll
lods
add
mov
shlb
pop
pop
xchg
test
leave
mov
fwait
rcr
xchg
inc
adc
pop
cmp
testl
jb
fistl
mov
notb
pop
cmp
inc
lds
loope
or
or
xchg
and
xlat
push
lret
stos
adc
iret
loop
ret
mov
add
repz
imul
js
push
adc
mov
push
sbb
enter
sub
sub
test
icebp
cltd
sarb
rorl
sub
sub
cwtl
mov
adc
shlb
inc
scas
xchg
sub
mov
sbb
pop
pop
mov
popa
outsb
test
loopne
cmpl
cmc
mov
lcall
lods
int3
std
add
adc
mov
jg
cmpsb
scas
clc
xchg
nop
inc
ret
mov
sbb
mov
dec
movsb
add
es
cltd
sbbl
jo
test
filds
into
shr
inc
mov
stos
subb
jp
dec
push
cli
ja
fsub
sbb
cs
mov
lock
add
loop
pop
fcmovb
jmp
shlb
push
dec
lret
cmp
xor
sti
inc
add
push
mov
adc
shlb
xor
movsb
mov
or
sbb
push
stc
fsqrt
call
aas
shr
lods
xor
addr16
push
sub
pop
sbb
sbb
mov
testl
cmp
je
sbb
aas
enter
mov
bound
jp
sbb
cli
pop
add
sub
pushf
pop
aad
popf
imul
xchg
mov
mov
lea
xchg
or
cld
movsl
daa
mull
inc
dec
leave
cltd
xchg
loope
in
and
fdiv
jecxz
and
sub
sub
jg
lock
cli
lret
cmp
push
sub
dec
pop
mov
mov
push
test
stos
aas
push
out
push
std
sarb
mov
dec
pop
mov
sub
add
leave
iret
dec
xchg
push
repnz
mov
or
pop
mov
jge
dec
mov
or
jmp
or
fbld
mov
push
lret
cld
xor
data16
cwtl
jae
jo
add
loopne
push
and
dec
add
aaa
popf
repz
scas
les
dec
sub
mov
and
pop
xchg
loop
movsb
fistpll
mov
and
dec
dec
roll
test
ret
stc
xchg
jle
mov
lret
push
arpl
jp
pop
jmp
mov
insb
pop
fldt
or
mov
call
jl
scas
shll
mov
sub
xlat
insl
lret
lret
fsubrl
dec
enter
sub
pop
sbb
sub
repz
cmp
bound
dec
test
aam
pop
popa
push
shll
outsl
sar
outsb
jno
jl
shll
pushf
pop
fstpt
dec
cmp
xor
adc
rcrl
lods
inc
out
lds
cmp
cli
inc
mov
stos
pop
stos
lret
jg
popf
pop
mov
push
inc
pop
loop
idivl
sbbb
add
jmp
mov
loope
adc
cmp
addl
adcb
divb
jo
out
in
inc
mov
clc
cmp
test
orl
rorl
rclb
xchg
xor
or
shlb
cmp
mov
sbb
cmp
sbb
mov
aas
and
lcall
cmpsl
mov
sub
fs
gs
push
push
xor
add
jnp
dec
xor
xchg
sti
test
enter
outsl
sbbl
mov
sti
mov
mov
and
xor
push
xchg
sbb
jo
ss
shlb
pushf
pop
jl
or
mov
mov
mov
ficompl
or
adc
jo
sub
inc
xchg
push
mov
gs
mov
dec
mov
xor
push
ss
mov
in
push
mov
and
fists
popf
outsl
cmpb
shrb
inc
movsl
cmp
mov
mov
cwtl
dec
lods
shl
inc
lods
fnsave
push
sub
mov
mov
fs
sarb
daa
sbb
shll
xchg
adc
or
mov
or
sarb
fsubs
movb
adc
in
sub
lahf
and
lcall
nop
arpl
dec
or
sub
mov
adc
dec
leave
inc
add
notb
lds
add
push
mov
and
dec
jns
imull
or
jmp
testl
cmpsl
push
sub
dec
mov
fbld
cmp
cli
fld
ficoms
adc
push
lea
inc
xchg
stos
xchg
or
dec
arpl
in
aaa
iret
mov
pop
mov
push
lahf
sbb
and
repz
testl
lods
loopne
sar
push
loope
xrelease
loop
sahf
test
mov
push
xchg
xor
movsl
iret
mov
mov
fldt
sub
stos
xor
push
movsb
jb
xor
in
adc
inc
fdivrl
inc
jle
mov
sub
xchg
sub
lock
jnp
and
mov
dec
pop
dec
int
cs
in
and
ljmp
iret
dec
out
sbb
sub
jo
pop
sbb
add
cmp
aaa
es
es
out
rorb
mov
dec
and
jno
xchg
cmpsl
cmp
leave
fimuls
ja
jns
in
ret
xchg
jmp
loopne
xchg
jecxz
sub
sbb
test
xchg
mov
add
das
add
stc
xor
sbb
jnp
call
jae
fidivl
mov
push
decl
repz
cmp
push
mov
cmc
jno
test
cmc
or
ljmp
xor
inc
jp
out
test
shr
inc
movsb
lods
mov
mov
xor
jge
insl
hlt
movsl
or
mov
inc
roll
seta
test
cmp
cmpsb
outsl
cwtl
sub
mov
scas
mov
xchg
bound
insl
outsb
shll
sub
repz
aaa
mov
inc
mov
mov
jmp
cmp
push
xchg
xchg
jmp
loopne
mov
rcll
push
inc
addr16
rorl
popa
mov
xor
mov
insb
lret
mov
mov
dec
test
add
cmc
lods
add
mov
sub
call
ljmp
push
adc
shlb
ror
movsb
inc
sti
shrl
or
cmp
sbb
inc
sbb
out
out
mov
and
mov
mov
inc
dec
xor
add
xor
add
rorb
jecxz
cmp
cltd
pop
popa
cmpsb
mov
mov
divl
sbb
cmc
fcomps
add
mov
pop
int
fwait
sarb
sub
jl
sub
mov
js
xor
cmp
mov
push
jl,pn
rcrl
imul
mov
sub
jae
daa
in
rcrl
dec
mov
and
aas
test
lds
inc
jo
rcrl
push
das
or
dec
and
adc
imul
inc
cmpsb
and
sbb
adc
test
fidivrs
aas
jecxz
sarb
outsb
fisubl
push
cli
push
mov
xchg
push
ds
xor
cmp
dec
xchg
mov
sahf
sub
clc
nop
cmp
push
mov
mov
jne
lods
inc
cmpsl
lret
mov
ja
mov
sar
in
testb
jmp
cld
outsl
fwait
xchg
enter
in
fnstcw
jecxz
jecxz
out
xchg
adc
and
sub
icebp
sub
icebp
pop
and
inc
lret
jecxz
mov
add
movsl
sti
pop
lret
sti
push
ret
call
aaa
inc
cld
and
call
push
mov
lret
fwait
shl
lahf
or
andb
addr16
cltd
adcb
fwait
in
das
push
imull
loop
pop
cmpsl
sar
rorl
cwtl
mov
or
sub
enter
ja
or
fistpl
in
mov
lea
mov
mov
std
ss
jae
mov
pop
sub
cld
shl
aaa
je
addr16
test
mull
mov
mov
mov
sub
xchg
in
out
dec
movsb
lods
dec
out
push
xor
mov
ds
and
popa
mov
les
fistl
mov
cmpsb
jne
cmp
in
idivl
in
pop
idivb
xchg
mov
push
test
jo
mov
jnp
js
mov
pop
cmc
push
popa
aaa
cmpsl
cmp
and
scas
jb
pop
dec
sbb
jp
mov
and
cmc
inc
xor
inc
mov
mov
jmp
push
cmc
pop
mov
js
push
lahf
jae
jae
cmpsl
or
stos
jb
pop
push
jo
inc
out
out
or
adc
push
dec
fldcw
in
jge
ds
cmp
idivb
lret
mov
enter
pop
repnz
int3
mov
add
stc
adc
lds
shll
or
icebp
test
sub
lods
repnz
imul
mov
pop
out
xor
pop
jle
cmp
lahf
cmp
test
add
push
inc
sarb
fs
addr16
popf
push
xchg
mov
jg
add
clc
jno
shl
mov
popa
pop
mov
xor
scas
bound
pop
test
sub
dec
adc
xor
cmpsb
ret
adc
inc
imul
add
addr16
je
cmp
in
xlat
xor
jns
in
cmp
dec
scas
push
jae
arpl
outsl
push
and
in
sahf
pop
pop
dec
pushw
cmp
dec
ja
je
jbe
push
lret
push
jns
jmp
lcall
iret
adc
leave
call
mov
fs
xchg
xchg
loop
jl
add
sarb
and
and
pop
cltd
in
nop
pop
mov
inc
dec
fsubrl
jge
hlt
and
and
mov
sbb
in
std
dec
sub
sbb
mov
out
cmp
and
popa
jecxz
call
adc
scas
mov
in
mov
outsl
jge
inc
lods
sbb
lret
lock
jge
lock
clc
push
cld
jnp
fidivrs
mov
fdivrl
dec
cmpsb
aas
cmp
daa
hlt
mov
or
jbe
out
test
cmp
cmp
pop
dec
cld
lods
pop
out
sub
jmp
jge
in
dec
gs
and
xlat
or
fbstp
sti
and
xchg
xchg
jne
mov
dec
stc
std
jnp
test
jae
cmp
idivl
push
cmp
xchg
int
sub
mov
jae
sahf
lahf
jecxz
icebp
subb
stos
aam
inc
cmc
mov
aaa
out
cmp
mov
add
nop
jmp
inc
ljmp
sub
jge
test
jae
mov
mov
cltd
jp
jbe
adc
in
mov
int
adc
and
aas
movb
imul
add
arpl
or
pop
xchg
jle
gs
add
lahf
push
aad
jb
jnp
outsl
test
out
pop
add
sub
jno
adc
out
lahf
rcrl
xchg
pop
push
rcrl
jne
popf
inc
in
gs
mov
in
inc
sbb
lods
adc
rclb
push
hlt
xchg
lret
icebp
daa
pop
cli
cmc
shl
inc
clc
lahf
lods
jg
outsb
xor
fisubrl
inc
and
cwtl
mov
out
repnz
mov
int
inc
or
lods
push
xor
ljmp
inc
or
cmp
pop
popf
push
add
sti
movsl
dec
cmp
aam
fistpll
xchg
rcll
adc
repnz
push
pop
mov
dec
outsb
push
loope
mov
or
ds
jns
mov
add
inc
inc
cmp
sub
gs
das
popa
test
xor
leave
neg
addr16
dec
mov
and
push
cmp
lock
push
repnz
out
adc
jb
and
add
pushf
scas
mov
pop
push
ret
add
inc
push
xchg
stos
sub
push
sbb
jo
or
int3
inc
rclb
adc
sbb
adc
jno
xchg
stos
mov
repz
sbb
repnz
das
lcall
sbb
js
and
shl
or
addr16
movsb
jno
shl
pop
xor
jns
and
mov
sub
adc
stos
add
stos
jge
or
jae
xor
cmp
fs
enter
insb
pop
shll
es
mov
push
fildl
out
sbb
lods
cmp
in
add
test
pop
mov
xor
sti
rcrb
repnz
stc
clc
push
mov
stos
lea
popa
out
or
cmp
inc
add
imul
sbb
aas
xor
out
add
sub
xor
int
dec
inc
ljmp
push
push
in
stos
pushf
lahf
xchg
test
fistl
leave
or
or
xchg
inc
push
add
mov
push
jno
adcb
jne
jge
gs
xor
popa
fcomps
movsb
iret
loopne
dec
mov
imul
xchg
int3
ficompl
repz
mov
pop
mov
mov
scas
inc
lods
aam
flds
jbe
lea
mov
lods
mov
addr16
sbb
mov
fsubs
jnp
push
icebp
nop
in
push
sub
add
movsl
clc
sub
cmpsb
adc
fwait
pop
roll
mov
lods
lret
lahf
in
jmp
mov
xchg
fmull
fs
inc
mov
jl
sbb
push
ret
pop
in
sub
fidivl
xchg
loopne
inc
fidivl
divl
scas
or
xlat
add
jbe
arpl
push
fwait
jmp
xor
pop
fnstsw
mov
je
jns
shl
pop
jg
test
in
jbe
ja
xchg
movsl
adc
imul
cwtl
repz
push
adc
sarb
or
cld
cmp
push
dec
or
sti
jb
stos
hlt
jmp
jmp
mov
lret
fstpl
mov
outsb
mov
shl
push
inc
test
int
rol
push
dec
ss
and
xor
push
jbe
xor
add
int3
sarb
inc
mov
mov
pop
pop
cmp
pushf
ds
stos
iret
imul
mov
cmp
sbb
inc
fs
xchg
popf
inc
or
in
xor
xor
cmp
test
mov
fiadds
adc
jb
sub
outsl
and
pusha
push
jmp
pusha
leave
inc
mov
dec
push
dec
lret
testb
ret
inc
lahf
jg
cmp
jno
into
xchg
sub
mov
cmovg
arpl
mov
or
mov
sbb
clc
dec
lret
and
sbb
insl
dec
fidivl
and
iret
mov
hlt
shlb
roll
xlat
sbb
xor
adc
xchg
imul
dec
mov
fistl
cmpsl
lods
pop
andb
pop
sub
pushl
aas
push
adc
jge
outsl
andb
and
arpl
int
fldcw
jge
fnsave
mov
faddp
mov
add
xor
push
or
scas
repnz
fstpt
adc
xor
inc
insb
nop
hlt
dec
or
arpl
push
clc
bound
std
adc
pop
sbbb
pop
mov
push
ds
mov
xchg
pop
pfnacc
xor
mov
mov
dec
and
jl
insb
cmc
rol
decl
or
inc
pop
scas
das
popf
stc
xchg
jb
cmpsb
sub
jg
add
out
mov
push
addr16
incb
stos
mov
loop
js
mov
jmp
cld
shr
imul
pop
xor
ficomps
xchg
xlat
rolb
and
adc
inc
mov
clc
pop
inc
ljmp
inc
cmp
or
ret
pusha
or
pop
cmp
xchg
push
test
fs
dec
mov
jae
sbb
push
sbb
std
dec
shl
sub
imul
out
and
fwait
and
xchg
xchg
xchg
lret
lods
and
jp
pop
push
lds
jecxz
xor
stos
cmc
mov
data16
xor
loope
inc
ljmp
shl
jge
aad
mov
outsb
pop
xchg
push
sub
push
jmp
stc
in
pop
scas
push
fists
gs
jnp
mov
outsl
inc
rcll
test
add
xor
dec
and
pop
pop
stc
repz
add
xchg
push
inc
adc
stc
cmpsl
in
sub
xrelease
addr16
push
xor
push
jmp
notb
addr16
jmp
stos
fwait
inc
jo
add
jmp
push
mov
icebp
mov
mov
push
nop
sahf
mov
sub
mov
inc
cmp
lahf
bound
mov
rorb
sbb
and
mov
lods
pop
cwtl
push
jno
xchg
daa
cmp
xchg
cmp
adc
push
pop
int3
lahf
pop
inc
xchg
inc
or
sub
iret
sbb
lret
fs
xchg
push
shll
sub
insb
rorl
loope
popf
push
mov
ss
inc
fistpll
xchg
or
xor
call
and
sbb
adc
hlt
out
pop
dec
xor
in
inc
int
inc
jle
sub
ja
leave
and
std
pop
sbbb
xchg
dec
dec
cwtl
push
mov
loop
repnz
movsb
sub
aaa
pop
xor
int
sahf
pop
or
dec
jns
out
sub
push
enter
daa
sbbb
push
imul
sub
push
scas
jl
fbstp
daa
sbb
lret
aas
inc
xchg
push
push
sbb
imul
xor
mov
fists
xchg
mov
jl
adc
mov
mov
nop
lock
aad
ss
jle
ja
js
cmp
cmp
shlb
fwait
popa
das
imul
ljmp
dec
mov
movsb
mov
sub
add
dec
cmp
test
jnp
mov
fwait
dec
push
mov
je,pt
mov
fwait
repnz
mov
imul
pop
loopne
push
andl
aaa
mov
jns
repz
cmpsl
cwtl
or
and
jmp
data16
xor
out
rolb
jne
push
pop
out
cld
lea
dec
cmp
mov
and
sbb
and
mov
in
sbbb
sub
dec
cwtl
inc
shr
inc
push
xor
and
jp
mov
jnp
jns
sbb
sbbb
sbb
push
mov
inc
xor
pop
mov
rclb
in
pop
mov
xor
xchg
stos
push
push
jo
lret
inc
push
push
stos
sbb
mov
mov
daa
hlt
inc
inc
push
popf
and
icebp
sub
popa
push
popf
push
sub
jp
pop
sub
into
hlt
out
inc
sub
or
inc
xor
push
hlt
sub
mov
inc
scas
lods
loopne
pop
sub
imul
loopne
fisubl
push
sub
push
adc
loop
mov
adc
addr16
shll
das
outsl
dec
je
lea
stos
xchg
out
fldl
or
mov
repnz
xor
push
jle
rorb
cmp
mov
inc
push
adc
ja
scas
push
mov
addr16
lods
or
test
mov
pop
es
mov
pop
dec
sysret
sbb
push
pop
xor
scas
stos
stos
bnd
add
fxch
dec
pop
mov
dec
in
push
out
and
fldl
mov
outsb
sbb
jle
add
adc
bound
adc
xor
bound
jg
cmp
inc
or
mov
mov
das
pop
loopne
and
ret
fnsave
sarb
pop
mov
jp
in
jge
and
add
sub
call
aas
ret
dec
int3
sub
mov
cmpsl
jnp
decb
add
fstl
add
adc
xor
enter
stc
jge
push
xor
std
pop
push
fstl
inc
sbb
in
fs
cmp
adc
mov
lret
add
jecxz
ljmp
mov
hlt
lcall
mov
mov
mov
push
cmp
leavew
daa
jnp
enter
xlat
addl
inc
in
pop
and
and
mov
cwtl
inc
jp
sub
stos
repnz
int
shr
mov
xchg
iret
imul
fs
dec
xor
out
adc
pop
xor
cli
std
mov
jl
imul
mov
cwtl
push
cmp
sbb
mov
repz
imul
jp
and
lea
and
std
or
pop
push
dec
shl
xchg
stos
mov
push
push
shrb
cmc
jnp
and
adc
mov
add
dec
mov
in
out
cmp
xor
icebp
jmp
adc
xchg
jecxz
aas
xchg
outsl
xchg
and
mov
push
lret
cmp
mov
pop
xor
js
mov
mov
pushf
imul
sub
xchg
jb
or
jle
jb
pop
push
int3
pop
mov
out
adc
add
enter
rcrl
mov
je
jne
adcb
push
rorb
inc
sbb
insb
cli
mov
mov
push
inc
mov
add
jns
std
sbb
jle
push
addl
push
adc
add
imul
and
mov
jnp
jle
shl
mov
cli
stc
repz
mov
rolb
stc
fs
sbb
ret
in
or
jmp
fs
subps
inc
pop
push
out
xchg
aad
push
stos
aas
xor
mov
imul
je
cmc
cld
push
xlat
addb
jns
inc
cmp
or
pop
mov
les
ja
lds
sbb
pop
inc
pop
stos
cmp
out
decb
jne
cli
in
ss
pop
adc
pushl
add
in
mov
lods
aas
loop
xlat
insl
jge
sub
les
or
cmp
jge
fwait
cli
cmp
mov
pop
int
jmp
xor
fadds
shrb
sbb
shlb
xchg
lods
pop
hlt
fxch
mov
mov
rclb
loope
fcmovnu
lods
xor
mov
rcrb
fbstp
daa
fstl
xchg
sub
mov
test
push
push
scas
xchg
adc
and
and
leave
cmpsb
push
inc
dec
invd
adc
xchg
mov
sbb
fsubrp
dec
dec
pushf
jo
icebp
sbb
dec
lahf
dec
scas
aad
or
lds
rcll
outsb
mov
lret
pop
pushf
jae
push
pusha
sti
aaa
push
mov
mov
data16
mov
mov
stos
jp
cmpsb
in
call
sbb
mov
and
fldz
fcoms
xorl
or
fstps
and
cmpsb
addr16
jmp
jne
sbb
movsbl
cmp
scas
pop
and
nop
or
mov
xchg
dec
fstpt
mov
std
or
andb
lea
mov
in
xchg
popf
push
adc
aam
push
xor
pop
or
pop
adc
popf
pushf
dec
dec
lock
adc
mov
jae
in
cmp
imul
mov
inc
mov
movsl
fldenv
cltd
jae
jne
cs
out
push
gs
aam
pop
aas
push
idivl
xchg
or
jp
aam
add
psadbw
sub
pop
bound
mov
sub
adc
insl
ds
mov
cmp
cmp
push
fists
shlb
sahf
pop
xor
mov
test
lods
dec
push
ror
push
iret
xchg
push
cld
imul
scas
sub
and
test
dec
shl
shll
or
adc
pop
shlb
pop
add
jne
jecxz
pop
mov
mov
shl
xchg
sub
xor
insb
pop
mov
aam
sbb
aad
cmpsl
repnz
movsb
leave
stos
outsb
xor
xor
test
je
aaa
push
cs
in
pop
rcrb
xchg
or
or
xchg
dec
repz
lds
repz
imul
xchg
sub
ret
cmp
daa
and
pop
dec
sub
sbb
pop
lret
decl
fidivs
push
and
jg
lods
push
repnz
cmp
lahf
adc
icebp
cmc
jno
mov
pop
cli
je
jnp
insb
mov
inc
inc
mov
ret
cmp
aaa
loope
xor
fwait
push
ds
mov
inc
out
repnz
jmp
ja
jns
sbb
fwait
mov
aad
lods
call
in
stc
fcoms
sarb
aas
jbe
in
jmp
cltd
pop
add
dec
dec
or
push
out
test
adc
out
popf
mov
jl
xor
adc
shl
ds
push
das
or
aad
cmpsb
repz
pop
jle
add
out
vcvtsd2ss
in
pop
add
enter
xchg
dec
sub
xor
mov
imull
cli
aas
jle
xchg
adc
enter
test
sar
test
das
out
inc
sbb
fdivrs
sbb
imul
popf
jl
mov
and
cli
or
test
add
pop
js
cwtl
std
sub
dec
jnp
out
loop
mov
loopne
pop
xor
gs
fld
mov
adc
test
ret
add
or
fwait
mov
mov
out
jecxz
rcrl
loope
enter
adc
and
xchg
insl
into
fsubs
fdivrs
xchg
sbb
jb
ljmp
lock
into
mov
pop
mov
jns
mov
std
jnp
lret
fmull
rcll
add
aad
in
mov
mov
sub
add
aaa
xchg
insl
or
jl
push
lret
ret
outsl
imul
ficomps
int3
jl
in
jne
cmp
adc
jae
xchg
mov
loope
cltd
xchg
out
sub
pop
sbb
push
dec
cli
lret
pop
cmp
popf
sbb
dec
adc
pop
jmp
test
and
inc
add
in
fwait
outsl
jmp
xor
test
add
pop
xchg
outsb
and
lea
push
add
in
pop
xchg
test
dec
adc
adcl
mov
sbb
ljmp
and
lods
and
repz
push
xchg
cmpsl
add
fs
daa
out
fs
leave
cmp
fistps
out
cmc
jg
pop
rol
ret
add
pop
cmp
dec
jne
sub
and
mov
mov
mov
insl
sub
mov
mov
mov
out
xchg
dec
sub
mov
sti
pop
or
add
push
fstpt
xchg
mov
out
jmp
mov
mov
mov
roll
ret
pop
pop
jg
push
int3
push
xchg
fldl
nop
dec
sahf
push
stc
pop
adc
cmp
loop
sub
cli
dec
pop
and
dec
notl
adc
shll
and
shll
mov
dec
outsb
mov
subb
mov
sub
dec
inc
std
mov
jae
mov
add
or
push
mov
add
jo
pop
imul
and
and
inc
xor
pop
ret
and
std
mov
push
sub
inc
pushf
jmp
or
repnz
jno
jp
and
jl
xchg
lods
lods
rorl
pop
xor
lret
lcall
ret
push
push
ds
cmc
mov
push
bts
testb
pusha
out
sbb
sbb
loop
xchg
dec
outsl
mov
nop
mov
pop
push
xchg
imul
dec
repnz
pop
ja
inc
mov
cmpsl
in
mov
jmp
or
adc
sbb
shlb
or
test
mov
push
mov
leave
inc
xor
mov
sbb
int
pop
ja
imul
ficoms
jmp
mov
in
xchg
jp
daa
scas
dec
mov
sub
fnstcw
imul
xchg
fstpl
popf
or
push
mov
std
sahf
jne
rcrb
jmp
jecxz
enter
jecxz
test
sbb
push
and
pop
and
scas
sub
lahf
lods
int
pop
xor
or
cltd
xchg
xchg
sub
adc
add
enter
xchg
adc
aaa
les
xchg
and
enter
adc
and
pop
cmp
int3
ja
push
inc
jo
lods
loopne
es
xor
dec
cmc
icebp
sbb
dec
mov
out
imul
lods
mov
hlt
and
arpl
mov
lahf
xlat
dec
or
xchg
into
sbb
shlb
or
mov
imulb
sbb
push
xor
or
dec
pop
roll
mov
gs
cwtl
arpl
les
add
mov
inc
fiadds
in
xor
cmpsb
cmp
popa
loop
jmp
fwait
popf
sub
negl
jg
rclb
push
lcall
mov
int
add
jbe
les
fs
scas
sub
jae
push
frstor
enter
es
rolb
arpl
cmp
cmc
push
mov
jmpw
xchg
test
jecxz
sbb
xor
imul
insl
cmp
xor
scas
push
js
scas
sbb
and
es
aaa
arpl
jge,pn
mov
cmp
les
iret
into
xchg
in
scas
mov
xchg
add
mov
js
nop
push
outsl
cwtl
cld
jge
mov
or
lods
jg
popa
stc
cld
dec
loopne
cli
pop
fcmovu
ror
lret
cli
hlt
mov
pop
xchg
adc
std
loop
dec
movsl
into
adc
cli
and
xchg
loope
orl
in
dec
mov
mov
rcll
pop
xor
inc
jmp
jle
lret
pushf
pop
fdivrl
dec
inc
fistpll
push
push
xor
sbbl
test
xchg
mov
mov
jge
mov
movsl
cwtl
sbb
inc
push
jmp
xlat
or
jg
movsl
xlat
mov
lahf
in
add
sub
xor
add
push
testb
and
js
cmp
inc
int3
adc
add
pop
lahf
push
or
test
mov
fimull
sub
inc
mov
les
pop
sub
mov
test
jecxz
mov
adc
stos
jp
or
jne
mov
gs
mov
pusha
cmp
xchg
inc
stos
jb
jns
fildll
sub
inc
xchg
jecxz
fmul
and
in
xor
subl
dec
sbb
loopne
xor
mov
pop
insb
xlat
pop
mov
pop
pop
lcall
xchg
aas
stos
or
mov
movsb
mov
or
mov
mov
or
mov
pop
imul
cmp
dec
mov
dec
cmp
mov
ds
xchg
insl
aad
insb
mov
ret
jns
lret
ljmp
lds
pushf
icebp
lock
jnp
mov
dec
andl
test
pop
xchg
repnz
or
int3
or
jae
addl
out
dec
dec
sbb
outsb
imul
fs
mov
add
jecxz
stos
shll
mov
push
shr
pop
push
xorb
mov
arpl
jp
adc
mov
xabort
add
fidivrl
or
scas
sub
mov
xchg
mov
loop
mov
test
inc
nop
jle
lret
cmp
fwait
and
pop
aaa
pop
daa
cmp
movsl
jmp
push
xor
sub
cli
scas
or
xlat
int3
push
add
or
dec
cmc
dec
sbb
sbb
ds
mov
adc
test
in
sbb
push
lret
repnz
outsl
mov
orl
pop
mov
and
or
addr16
mov
mov
mov
dec
out
mov
leave
fsts
mov
pushf
cmc
data16
pop
cmp
adc
test
rcll
in
sub
rcll
mov
mov
nopl
jae
mov
enter
xchg
ret
insb
push
addr16
dec
xchg
jle
cmpsb
mov
mov
jecxz
xchg
pop
imul
add
mov
jo
lock
dec
mov
negl
sbb
cmp
pop
out
stos
adc
negb
cltd
xor
push
sbbl
lods
out
mov
xor
adc
push
loope
pop
sti
cmp
jbe
xlat
arpl
sbb
popa
mov
out
push
daa
orb
mov
cmp
insl
out
push
int3
adc
dec
pop
and
inc
adc
fstp
mov
push
int3
cmpsl
in
mov
js
sub
in
mov
sub
sub
xor
xchg
inc
call
stc
call
cmp
into
dec
rcrl
mov
js
shrb
push
cmpsb
push
stc
cs
out
inc
cmp
pop
jnp
xor
mov
pop
insl
jne
in
fistl
adc
jno
bound
mov
or
adc
insb
mov
sub
mov
stos
stos
in
mov
test
sbb
nop
repz
mov
inc
adc
push
jge
mov
xor
rorl
mov
or
push
and
testb
lret
and
out
jp
lret
xchg
dec
in
mov
sbb
cmpb
loopne
mov
lahf
fnsave
jb,pn
mov
fldt
rcrl
inc
jle
dec
stos
call
shrb
sub
or
loopne
lea
or
cmp
bswap
pop
lods
jnp
sub
sbb
imull
mov
push
addb
ljmp
lods
es
fs
jmp
and
imul
loopne
jbe
subb
cmp
inc
repz
dec
sbb
cld
inc
mov
or
sbb
movsl
sbb
sub
orb
jl
mov
xchg
jge
je
mov
aad
les
push
mov
fisttpll
and
inc
insl
fildll
add
xor
jne
dec
xor
xchg
mov
sub
dec
xor
das
mov
fisubrl
cmp
pop
xchg
mov
pop
rorl
ret
mov
leave
mul
push
jl
add
sub
shlb
test
pop
jno
push
es
pop
jbe
push
jno
dec
push
push
into
rcr
int3
in
sub
xlat
xor
ret
xor
cmpsl
inc
or
pushf
xchg
repz
nop
pop
fsubs
das
xor
add
xchg
je
adc
fisttpl
xchg
push
push
pop
insb
and
sbb
adc
pop
rorb
adc
jp
stos
push
mov
cmc
jno
fisttpl
mov
push
cmp
cmpsl
jnp
aaa
das
nop
jmp
shll
xchg
int
mov
and
lahf
int3
sub
lods
xchg
cmpsb
and
mov
stc
cmc
push
dec
loopne
leave
lods
add
push
jb
sbb
jno
lahf
xor
popf
imul
push
jmp
xchg
jnp
sub
cs
shll
in
lock
sbb
jle
mov
adc
jae
and
add
pop
xchg
imul
leave
cmc
in
scas
add
mov
int3
dec
icebp
sub
inc
fdivl
add
inc
sahf
inc
aas
sub
out
mov
iret
jns
pop
mov
loopne
out
gs
test
ss
cmp
adc
lcall
xchg
addr16
aam
scas
inc
rcl
test
pushf
dec
lret
fwait
inc
dec
dec
mov
xor
xorb
push
adc
enter
mov
cmpsb
loope
aam
faddp
xchg
push
xchg
mov
jnp
pop
adc
ljmp
repnz
pop
and
push
out
test
cmp
sub
mov
and
rcll
mov
sahf
icebp
dec
sbb
cmp
outsb
adc
ficoml
inc
fimuls
fsts
out
sub
sbb
scas
mov
jbe
cld
std
out
enter
bnd
ljmp
xor
mov
cli
inc
stc
rolb
and
iret
iret
out
pop
mov
mov
sbb
jno
add
sbb
push
cld
loope
inc
js
pop
aad
push
testb
cmp
xchg
stos
push
imul
sbb
cmpb
push
xor
add
orb
fimuls
and
adc
js
repnz
ret
mov
pop
jno
dec
lahf
cs
aad
inc
cs
arpl
mov
popf
xor
and
mov
mov
int
es
inc
xor
inc
lods
mov
add
subl
pop
mov
dec
jae
repnz
and
filds
mov
clc
popf
mov
or
mov
imull
testb
push
pop
sahf
inc
mov
inc
inc
pop
add
hlt
cli
call
xor
fdivr
mov
jnp
adc
lock
clc
adc
sti
push
stc
pop
dec
cld
les
jl
xchg
adc
jne
mul
repnz
lea
push
test
dec
dec
add
dec
fildl
jl
fcomps
push
ja
adc
inc
cs
jmp
mov
pusha
xchg
mov
cmp
fsubs
adc
loop
or
bound
lock
ficoms
icebp
std
jno
sbb
daa
jmp
xchg
mov
lds
mov
test
lds
pop
or
insl
sub
or
movsl
mov
push
repnz
dec
clc
imul
add
iret
inc
call
stos
xor
rclb
pushf
jns
pop
andb
lea
lret
xchg
outsl
inc
mov
and
mov
cs
lods
insl
loopne
sbb
sbb
int3
and
cmp
rorb
ja
stos
je
push
inc
stc
loopne
mov
popa
cli
loopne
jno
fldt
aad
or
or
jecxz
mov
dec
clc
lret
inc
pop
mov
std
adc
daa
and
jno
mov
push
or
xchg
mov
insl
gs
jge
xor
inc
fs
jge
jp
jp
aaa
movsl
incl
cli
out
push
in
add
ss
ljmp
xchg
leave
pop
shll
push
cli
aas
mov
sarl
jo
pop
int3
test
cmc
xor
test
stc
and
push
jnp
bound
cmp
aaa
jns
mov
shll
add
ss
xchg
cmp
rcrb
xchg
fs
mov
pop
test
xchg
or
add
cltd
pop
jo
out
lods
pop
push
dec
adc
outsl
inc
mov
fwait
std
dec
and
pop
add
mov
jno
rcrl
xor
aas
outsb
filds
es
mov
inc
adc
inc
push
cwtl
aas
inc
mov
leave
popa
iret
inc
mov
in
cmp
out
bound
call
dec
enter
repz
int3
enter
push
loop
mov
in
xchg
ror
jns
cld
sbb
xchg
pop
out
mov
mov
orb
dec
inc
outsb
lret
inc
sbb
movsb
cmp
inc
sahf
push
imul
jbe
inc
ret
and
lods
lds
cmpsb
sbb
mov
dec
adc
xchg
xchg
les
mov
pop
cmp
dec
pop
ret
adc
cwtl
lret
jns
ljmp
cs
mov
jl
lret
push
fistpll
lret
test
cmc
movsb
orb
cld
jge
cltd
sub
push
cmpsb
jns
orb
loop
add
jg
cld
lods
adc
sub
mov
in
loopne
iret
cltd
into
fwait
test
mov
fs
push
int3
dec
jb
add
xchg
xor
mov
adc
mov
dec
inc
xchg
push
sbb
dec
cmp
lock
jno
out
pushf
xchg
cmc
test
pop
loop
loop
cmpsb
js
sbb
jge
pop
jecxz
mov
xlat
push
xlat
jge
jp
iret
in
or
dec
dec
add
sar
adc
nop
add
testl
enter
arpl
lods
outsb
loop
bound
xor
repz
or
in
test
lds
addl
mov
fcmovbe
push
hlt
fmuls
subl
pop
sub
xchg
es
cmp
pop
push
dec
rorl
mov
roll
sahf
xchg
dec
dec
push
push
movl
ja
imul
inc
xchg
sbb
adc
shlb
test
mov
nop
psrad
pop
out
incl
dec
xor
pop
dec
daa
xorl
sub
loop
popa
js
jo
shlb
dec
mov
xchg
mov
push
stos
and
out
dec
and
lret
call
pop
dec
addr16
jbe
xchg
icebp
xchg
vpextrw
shlb
jae
shll
or
xor
aas
inc
jb
dec
fwait
or
push
cmpsb
idiv
xchg
add
mov
fidivl
arpl
subl
and
sbb
xor
outsl
ror
pop
xor
push
lret
add
iret
lods
aas
pop
mov
fdivrl
sarl
jns
hlt
inc
lock
cmp
adc
mov
xor
arpl
pusha
nop
fisubrs
aam
xor
je
add
ret
scas
mov
pop
lcall
ret
jne
push
and
mov
std
loop
push
mov
jg
leave
test
inc
push
inc
in
dec
aas
mov
loop
mov
dec
movsl
sub
adcl
pop
pop
sub
aam
popa
jmp
pop
or
dec
xor
punpckhbw
mov
cmp
push
cmp
mov
or
out
call
pop
in
repnz
jae
xchg
cltd
enter
jnp
popa
dec
sarb
pop
add
in
call
pop
imul
inc
in
inc
mov
clc
insb
add
jge
dec
or
je
push
mov
cmp
test
push
out
jno
out
jae
jp
jmp
and
in
adcb
wbinvd
mov
mov
cmp
repnz
sarb
shrl
ds
mov
sbb
mov
lods
dec
lods
sbb
imul
pop
icebp
cmp
mov
movsl
mov
imul
xchg
xor
push
lret
gs
and
xor
or
mov
inc
test
xor
jmp
mov
cmpsb
ret
lods
aas
sub
icebp
xor
insl
pusha
aas
fisubs
dec
sbb
inc
movl
xor
mov
and
orb
and
pop
xchg
mov
dec
and
ret
cwtl
decb
jmp
stos
sbb
mov
lods
ret
or
jns
inc
out
sarl
push
aad
push
pop
inc
inc
or
jmp
pop
pop
mov
shr
mov
sub
sub
daa
iret
mov
test
sbb
adc
ljmp
mov
xchg
loope
sub
cmpsb
lea
subl
dec
or
dec
stc
negl
lret
xchg
xor
push
pop
bound
mov
lea
mov
add
das
push
mov
roll
adc
cmpsb
dec
dec
sub
imul
inc
sahf
js
imul
fimull
je
add
sub
insl
xlat
and
call
push
xchg
pop
loope
fsubl
sbb
data16
mov
push
or
movsb
addl
int3
add
pop
out
xchg
push
sbb
sub
jo
jp
fwait
push
xchg
or
and
push
cwtl
inc
gs
ss
xchg
dec
aaa
adc
cld
cmpsb
dec
jmp
scas
jae
imul
lods
sub
and
and
ja
sub
xor
aad
jb
outsb
and
or
loop
stos
std
inc
test
flds
stos
orl
and
cmc
lea
xchg
stc
xor
jno
insb
mov
cwtl
mov
outsl
push
leave
jb
popa
call
cmp
xchg
dec
fadd
push
into
inc
aaa
pop
mov
push
or
push
or
and
test
iret
jbe
dec
mov
les
adc
cld
pop
hlt
push
push
adc
jno
stos
xchg
and
leave
dec
int3
insb
cmp
mov
imul
jbe
cld
cltd
data16
loop
mov
jbe
enter
in
mov
shrl
sarl
jle
inc
and
xchg
jle
shll
mov
lds
mov
lds
pop
or
lahf
sbb
ja
or
mov
test
xchg
outsl
sti
enter
mov
cmpsb
cmpsb
insl
sbb
popa
mov
mov
or
aad
sbb
adc
shrl
mov
mov
sbb
iret
xchg
xchg
push
inc
push
syscall
dec
lds
inc
rcll
xchg
fistl
test
aam
xor
or
sbb
aam
mov
cmc
data16
mov
lcall
jne
adc
xor
mov
std
in
iret
hlt
xchg
dec
push
inc
imul
jbe
jbe
jmp
dec
repnz
cld
pusha
dec
cmp
cld
nop
dec
xchg
jne
mov
in
imul
xchg
jecxz
push
lods
mov
sub
mov
xchg
mov
mov
outsl
jae
aam
xor
fdivrl
jns
scas
fmuls
mov
clc
sub
subb
loopne
lea
sbb
aaa
inc
mov
dec
cmpsl
push
mov
add
repnz
and
mov
inc
cmp
dec
bound
cmpsl
or
in
fcmovnu
jp
das
mov
sarl
pop
lods
pop
sbb
mov
cmp
out
popa
daa
sbb
inc
cmp
lret
dec
icebp
sti
out
cmp
cld
cmp
aas
mov
jmp
push
adc
jl
jg
jmp
mov
mov
fmull
ficoms
sub
inc
pop
jge
adc
lock
leave
addr16
jb
inc
mov
repz
inc
scas
dec
sti
lret
lcall
adc
jbe
xchg
js
add
repz
add
xchg
lret
mov
push
push
jle
inc
add
mov
insl
cmp
testb
inc
adc
xor
add
push
adc
xor
or
push
cld
clc
dec
in
pop
lods
jl
xchg
int3
inc
adc
ret
stc
sub
jnp
xchg
sub
decl
ja
pusha
inc
fs
xor
or
mov
push
scas
xor
scas
push
add
lret
ss
adc
mov
cmpxchg
inc
stos
mov
mov
arpl
ret
stos
xchg
sub
aad
xlat
or
and
add
int3
outsl
mov
rolb
pop
punpckhwd
iret
xor
dec
push
jno
push
push
jae
subl
mov
push
lds
lock
stc
sti
and
rorb
std
pop
lret
push
pop
sti
data16
js
mov
mov
inc
sub
sub
xor
test
pop
cs
int
or
pop
es
push
ljmp
data16
fistpl
mov
cld
xor
aaa
fidivrs
sub
cmp
add
or
mov
cld
sbb
mov
mov
and
push
inc
inc
and
push
cmp
add
test
out
pop
or
ja
sub
jnp
pop
outsl
shll
inc
pop
inc
dec
mov
inc
test
and
dec
insl
sbb
imul
imul
sub
lods
xlat
sbb
fcmovbe
sub
daa
or
nop
call
out
repnz
adc
xor
cmp
xor
xchg
or
insb
mov
add
mov
adc
mov
inc
mov
in
ret
in
add
je
pop
je
mov
out
ss
in
push
and
mov
push
in
fs
dec
or
and
jno
sbb
sub
arpl
mov
dec
test
clc
sub
inc
cmp
pop
js
test
cmpsl
inc
ljmp
mov
cs
cwtl
xchg
pop
testl
fs
dec
fdivs
cs
popf
iret
lahf
imul
lds
xchg
sbb
push
push
mov
int
xchg
mov
outsb
jno
cltd
mov
push
add
shrd
mov
jmp
mov
mov
mov
jno
adc
push
sbb
hlt
sub
pop
add
ret
or
test
pmaxsw
cmp
push
adc
xchg
xchg
fsubl
and
xor
cmpsl
dec
pop
pop
inc
lret
dec
ret
add
mov
loop
mov
je
sbb
mov
mov
stos
std
in
xchg
pop
sti
mov
push
rcrl
insb
lods
xor
fwait
inc
xor
mov
mov
add
mov
mov
lods
mov
cmc
and
or
mov
cli
sub
cmpsb
cmp
sarb
lock
bound
or
test
ss
pusha
loopne
pop
aas
or
add
hlt
bound
or
jae
adc
sbb
loopne
inc
es
dec
call
iret
les
push
testb
in
fsubs
pop
ret
xchg
lods
bound
fstpl
jae
push
outsb
repnz
push
negb
sub
sbb
lea
push
and
push
jmp
inc
shrb
add
ret
mov
adc
popl
out
call
xchg
mov
xor
ret
rcrb
sub
inc
mov
and
jnp
decb
adc
jb
mov
mov
or
or
push
je
rcrb
rolb
neg
mov
mov
xor
xchg
jo
mov
mov
push
lea
and
inc
xor
rcr
inc
nop
fldcw
in
hlt
faddl
loopne
pushf
cs
outsb
xchg
loop
ret
js
mov
xchg
scas
imul
xchg
sbb
jae
xchg
es
sub
rolb
xor
gs
jmp
cmp
cmpsb
mov
and
insb
mov
pop
test
cmp
fistps
adc
sbb
lret
enter
stc
popf
loope
mov
sbb
mov
scas
mov
nop
xchg
push
icebp
add
jb
xchg
jns
inc
add
sub
cmc
xlat
pop
add
sbb
out
in
lret
arpl
cltd
cmp
addr16
mov
adc
data16
pop
lcall
clc
pop
pusha
mov
shl
sbb
xchg
mov
cmp
jmp
rolb
test
mov
cmp
push
adc
push
cmpsl
test
stc
inc
or
lock
in
xchg
call
mov
pop
push
sub
lock
shrb
das
test
scas
add
xchg
mov
add
jmp
pop
adc
or
pop
stos
bound
sub
idiv
cltd
and
insb
or
out
fcoms
xchg
fwait
cmpsl
movsb
data16
or
mov
inc
pop
xchg
mov
push
add
fwait
popf
hlt
jecxz
shrb
lahf
clc
mov
cs
adc
in
das
or
pushl
movb
mov
add
incb
xchg
sbb
sub
out
cs
scas
push
add
xor
cwtl
cwtl
mov
sbb
inc
mov
es
daa
in
cmp
shll
sub
out
hlt
jmp
pop
pop
cltd
shlb
shrb
mov
test
aaa
arpl
test
aaa
int3
out
stc
xchg
mov
rorl
nop
push
mov
into
shlb
sub
mov
aam
in
inc
push
push
dec
and
sub
ljmp
inc
in
fadd
mov
mov
xchg
nop
mov
add
sarl
lods
mov
addb
push
inc
int
cld
lret
mov
or
ja
pop
sarl
sub
dec
pop
bound
outsl
push
idiv
cmp
shrb
enter
xor
dec
pushf
ja
mov
out
mov
pop
outsl
cld
hlt
ss
movsb
sub
repnz
stc
inc
outsl
scas
mov
dec
not
data16
repnz
cmpsb
push
mov
jae
outsb
idivb
mov
hlt
cmpsb
lods
test
cmpsb
lret
pop
bound
ja
mov
adc
pop
cs
cmp
and
pop
cmp
ja
cltd
repz
sub
mov
jmp
mov
and
scas
push
lret
mov
adc
mov
stos
or
xchg
in
sub
add
rorb
mov
dec
insb
inc
adc
mov
sbb
iret
mov
mov
mov
mov
push
aad
mov
cltd
or
xchg
pop
lcall
xor
push
or
push
or
pop
jg
dec
subb
add
pop
test
xchg
loope
xor
call
and
in
jb
pop
js
je
call
ljmp
stos
and
cmp
fadd
cmp
xor
adc
stc
sub
bound
add
sbb
xor
mov
pushf
dec
dec
or
xchg
loopne
cmp
xchg
xchg
aas
jecxz
push
jp
cmp
andb
sbb
mov
sbb
pop
addr16
dec
jg
push
cmpsb
adc
and
sub
cltd
mov
sub
sahf
sub
cmpsb
dec
loope
adc
addl
loop
movsb
loope
popf
mov
cmp
cmp
in
pop
adcl
clc
jne
mov
enter
fwait
rolb
mov
inc
lods
sub
outsb
cmpsl
cmpl
out
xchg
idivl
push
mov
pop
or
sub
cli
sub
stos
adcl
stc
cmpsl
aad
stc
xchg
in
scas
dec
add
jmp
xchg
mov
lods
mov
aaa
jne
rcrl
mov
sti
lret
mov
fcmovu
push
and
mov
repnz
xor
sbb
stos
jno
mov
pop
fs
add
test
xchg
xor
inc
cmp
or
into
pop
ss
lret
add
cmpsl
fisttps
cmpsb
rclb
cmp
adc
leave
sub
test
cli
lods
sbb
pop
mov
jmp
scas
shll
mov
or
xor
je
lcall
lret
shll
fdivs
xchg
xchg
dec
negb
jg
push
cmovno
int3
js
and
sbb
sbb
add
std
pop
shrl
lock
test
or
lcall
push
sub
das
mov
or
adc
cmp
push
xchg
dec
pop
pop
add
and
sbb
lcall
mov
lock
pop
jle
xchg
xchg
shr
jbe
iret
adcl
xor
mov
mov
jge
push
clc
cmp
cmpsb
mov
gs
in
ljmp
inc
xchg
pushf
ljmp
aam
xor
xchg
ljmp
icebp
cs
popa
push
int
rclb
lahf
push
push
sbb
jbe
cmp
jae
mov
adc
nop
xorb
adcb
push
pop
std
sbbl
ret
cmp
ljmp
inc
dec
scas
test
scas
out
fadd
cmpsb
push
and
xor
or
imul
mov
push
cmpsb
popa
shll
push
fildll
in
mov
repnz
adc
enter
aad
mov
in
gs
jb
jne
lret
dec
rolb
mov
into
aas
fdivrs
adc
jae
fyl2xp1
xchg
ret
out
insb
push
insl
inc
outsb
pop
push
iret
popf
push
ficompl
jmp
daa
add
cmp
enter
jp
inc
iret
insb
push
dec
adc
into
pop
loop
ss
mov
stos
fstpl
movsb
test
cmp
enter
movsb
cmp
xor
lds
cmp
div
mov
cld
popf
loope
sub
ljmp
lock
loope
dec
mov
rorl
push
sahf
xor
and
cmpl
lods
push
xchg
dec
jl
xchg
mov
cld
xchg
stc
dec
jecxz
add
adc
and
dec
repz
lahf
addr16
xchg
call
fmul
mov
or
lret
adc
out
sub
pop
mov
arpl
pop
xor
arpl
movsl
and
fbld
int
xchg
stos
ljmp
ret
mov
into
cli
pop
stc
add
add
test
decl
dec
outsb
inc
cmp
mov
xor
mov
hlt
clc
in
sarb
jmp
xchg
add
cmpb
lahf
jmp
xor
aad
and
es
loopne
faddl
jbe
add
sti
jnp
cltd
sbb
xchg
inc
push
mov
sbb
shr
fistpll
aam
jae
pusha
mov
sbb
insb
xchg
ret
jmp
xor
push
ret
out
scas
ficoms
pop
mov
stos
push
xchg
xchg
xchg
out
add
xor
xor
js
sub
imul
movsl
out
inc
jo
in
fsub
pop
and
jmp
push
adc
inc
fadds
jge
jmp
mov
std
add
int3
mov
cmc
loop
loope
cmp
sbb
cwtl
das
add
rclb
or
out
jae
lret
aad
dec
and
aad
jae
hlt
rolb
ror
pop
or
addb
or
or
js
fwait
in
pop
ret
add
inc
sub
add
in
test
jmp
sarb
icebp
pusha
mul
cmp
sti
mov
mov
aad
push
push
mov
push
std
pop
in
rorb
mov
mov
mov
jns
sbb
out
das
push
mov
ret
mov
stos
dec
ja
mov
dec
stos
or
fmuls
or
add
lahf
aam
fistpll
lock
popa
dec
loope
xchg
add
jle
loope
push
jg
mov
lret
dec
fisubrl
and
das
or
out
clc
stc
xchg
xor
dec
jb
xchg
mov
ds
jg
stc
leave
scas
inc
insb
or
xchg
and
mov
lea
test
pop
out
push
pop
daa
lods
xchg
sarl
pop
pop
pop
sahf
cmp
jge
lret
add
pop
lret
out
mov
lods
fs
add
cmp
loope
dec
sub
insl
fisttpl
mov
sbb
pop
popf
push
aam
test
cmp
sbb
scas
js
cmpl
test
sarb
in
jecxz
jle
shlb
pusha
xor
vrsqrtss
cmpsb
jo
scas
or
xchg
mov
mov
loope
fisubrs
push
xor
lret
bound
mov
in
cmc
mov
xorl
fidivs
jmp
icebp
sub
dec
or
xchg
loope
push
aaa
pop
jle
rorl
cmp
xor
call
dec
lret
inc
pop
jno
cmp
imul
mov
or
call
hlt
imul
xchg
pop
push
popa
sbb
add
lods
call
imul
push
xchg
xchg
loopne
repz
jp
dec
lea
jno
imul
xchg
bound
imul
jo
lods
mov
adc
xor
ficomps
xor
ja
mov
mov
cmpsl
sbb
dec
scas
sbb
mov
imul
push
lcall
daa
fimuls
xchg
ficomps
les
or
dec
or
and
xor
es
add
mov
int
jp
xchg
xchg
dec
mov
sub
in
enter
repnz
jns
ja
jp
nop
scas
pushf
lret
out
scas
mov
mov
xor
insb
pop
test
cmp
xchg
jae
imul
sbbl
lock
sub
test
dec
fbld
adcl
hlt
jmp
push
jle
mov
xchg
lahf
dec
faddl
xor
sbb
pop
and
cld
in
mov
rcr
outsb
aas
jp
cmc
mov
mov
push
or
sbb
mov
psubsb
scas
mov
test
outsl
xor
aas
and
xor
sbb
cmpsl
add
int3
nop
ds
sub
jl
sbb
int
pop
dec
mov
push
dec
sti
cmpsl
pop
ficoml
clc
scas
xchg
jne
jge
test
outsl
add
aad
add
out
dec
and
lret
add
mov
lret
or
sbb
dec
jmp
pop
push
mov
fnstsw
add
mov
stc
dec
scas
lods
jmp
fmulp
add
dec
clc
and
iret
sbb
dec
enter
loop
jne
adc
cmp
insb
hlt
xor
cli
scas
jge
and
sahf
push
imul
in
jnp
out
lret
nop
insb
xchg
add
jno
dec
xchg
dec
inc
or
xor
xchg
imul
jbe
int
cwtl
sbb
lock
sbb
mov
jmp
bound
sbb
pusha
xchg
cli
cs
cmp
pop
xor
mov
sbb
mov
test
popf
xchg
cmc
or
sbb
repnz
dec
bnd
leave
daa
inc
sbb
or
mov
andl
mov
movsb
pop
inc
dec
pop
pop
fistpll
test
inc
outsb
adc
add
es
aam
movsb
mov
push
lods
and
push
movsb
in
inc
mov
jge
sub
popa
jo
adc
xchg
dec
pop
imul
cld
dec
imul
sub
xchg
insb
outsb
cs
and
xor
rcrb
shll
les
aaa
mov
adc
push
jmp
mov
out
and
add
pop
or
addl
xor
int3
push
cmp
or
fsubl
lret
loop
lea
sub
mov
in
pop
aaa
xor
mov
xchg
jnp
or
xchg
xchg
sbb
in
clc
cmpsl
mov
clc
cmpb
loop
sub
movsl
lret
mov
adc
push
mov
adc
aas
push
test
and
lcall
jp
addr16
cli
rolb
je
push
pop
xchg
mov
pusha
xchg
ja
pop
mov
popf
pop
mov
mov
adc
mov
notb
or
jnp
and
xor
inc
jne
mov
xchg
jns
jmp
or
jmp
int
xchg
mov
xlat
shr
xchg
cs
mov
push
out
fpatan
cs
repnz
xchg
ja
pop
mov
roll
cmp
sbb
std
inc
inc
das
leave
inc
jnp
lret
rorb
loopne
pushf
pop
daa
add
pop
jne
jbe
dec
aas
push
cli
xchg
mov
xchg
inc
shl
jno
push
ds
pop
ret
lea
sbb
pushf
push
pop
jb
pop
cmc
leave
mov
int3
int
inc
inc
aad
icebp
xchg
sub
subl
repnz
pop
add
inc
ljmp
inc
leave
push
jp
dec
push
ja
cs
fucom
inc
shll
gs
dec
xchg
push
pop
cli
cmp
lret
shrl
test
outsb
sub
aas
push
sub
ljmp
in
mov
and
mov
push
dec
sub
sar
lock
arpl
jl
xchg
loopne
xorb
ds
mov
movsl
lahf
cmpsb
jmp
mov
xchg
jl
sbb
cmp
mov
mov
call
fisubs
pop
adc
pop
jae
dec
cs
jae
pop
lea
push
add
icebp
outsb
xchg
lahf
push
inc
out
insl
popa
lods
call
push
sahf
jnp
pusha
hlt
mov
push
stc
cmp
leave
hlt
xor
pop
jge
lds
aaa
or
dec
dec
into
cmp
add
outsb
mov
sbb
mov
push
jge
test
pop
ficompl
cmpsb
or
hlt
repz
ja
cld
nop
cmp
mov
test
stos
mov
cmp
icebp
push
cmp
mov
arpl
jecxz
add
insb
inc
or
cmpsl
iret
add
push
mov
pop
bound
xor
cs
sbb
lcall
xchg
aad
jb
lret
out
rorl
jns
mov
in
mov
test
mov
mov
stos
xor
push
mov
or
or
or
aas
in
mov
lret
mov
mull
push
rorb
icebp
push
mov
dec
stc
mov
sub
push
aam
ss
popf
add
and
mov
leave
in
cld
mov
xor
push
fucom
rcl
xchg
frstor
xor
popf
jo
inc
add
sub
cmpsb
xorb
enter
and
out
int
orl
pop
fisubs
sbb
xorb
cmp
inc
mov
sahf
or
shll
or
and
jmp
fcmovnbe
inc
mov
pop
sahf
dec
inc
imul
mov
aas
adc
xchg
dec
sub
fs
filds
shlb
dec
int3
mov
and
ret
lods
xor
mov
push
aas
dec
xchg
xor
xchg
repnz
xor
push
in
xchg
dec
lds
pusha
push
sar
adc
mov
xor
pop
sbb
lahf
fisttpll
das
sub
add
inc
add
jmp
cs
sti
repnz
fsubrs
ds
stos
xchg
or
in
daa
inc
sbb
jl
mov
adc
or
std
mov
loop
pusha
jmp
adc
out
rcrb
xchg
inc
xchg
or
dec
iret
jb
lock
mov
mov
lods
lahf
mov
sti
jae
mov
stos
in
add
stos
push
loopne
es
ja
fst
inc
cmp
jmp
and
loop
mov
add
in
or
cmp
or
lods
pop
insl
scas
mov
jne
lds
push
decl
bound
jo
lcall
fidivl
arpl
pop
jne
scas
mov
hlt
stos
inc
mov
icebp
js
or
rclb
pop
cmp
test
cmpsl
sub
int
ljmp
das
lods
xor
jbe
mov
lods
mov
pop
sub
sti
sbb
in
test
adc
repz
fcmovnbe
push
pop
mov
mov
or
xor
in
push
gs
loop
and
or
and
into
mov
ficoml
shrl
cmp
fmuls
and
inc
aad
add
cmpsl
cld
cli
or
inc
cltd
movsl
mov
notb
mov
sub
not
xchg
ret
mov
jecxz
add
xchg
fdivs
notl
xor
ds
test
adc
mov
fcomi
xchg
inc
push
push
jmp
push
flds
or
pop
outsl
mov
test
scas
fdivl
es
cmpsl
pop
mov
pop
sbb
lds
stos
ret
lcall
sub
fdiv
popa
xchg
jl
andb
fs
push
adc
adc
repz
sbb
clc
xor
stos
aad
pmaxsw
push
jb
in
mov
int
jbe
mov
mov
mov
stos
imul
ret
cmp
or
mov
jge
repnz
cmpsl
or
stos
mov
sbb
ds
pop
shlb
mov
pop
or
bound
add
or
lods
ficompl
das
and
sbb
rcrb
das
push
pop
and
mov
mov
pop
pop
cmpsb
xor
mov
fisubrs
sub
jecxz
in
iret
loopne
fnstsw
lcall
push
repz
inc
xor
cli
xor
or
pop
adcb
mov
xchg
push
xchg
jle
stc
push
test
adc
pusha
xlat
push
nop
push
inc
fwait
aas
sub
cmpsb
dec
int
lods
add
sbb
mov
pop
push
mov
push
pop
add
jl
inc
sub
mov
or
jmp
adc
jbe
aam
mov
push
mov
adc
ja
sbb
sub
adc
ja
pop
ljmp
sbb
xor
fisubl
pop
in
inc
arpl
mov
shl
mov
leave
stos
div
mov
pop
xor
pop
push
pop
iret
lock
mov
testb
ficoml
add
jb
cmp
dec
lods
push
mov
arpl
pushl
and
cmp
pushf
sbb
test
inc
insb
or
push
jae
lods
or
mov
pop
dec
negb
pop
aas
mov
int
fadds
test
sbb
push
jnp
and
push
push
jae
dec
shr
shrb
repnz
ljmp
mov
pop
xchg
mov
aad
clc
mov
nop
pop
pusha
pop
dec
cltd
test
push
inc
jmp
inc
bound
lcall
inc
repz
inc
mov
xchg
cmpsb
push
enter
cld
or
pop
cmp
bound
fidivrs
loope
aas
jg
cmpsb
lret
sahf
or
fisubrs
pop
or
int3
divb
out
aaa
adc
push
mov
fs
movsb
in
xchg
call
ss
mov
sub
or
aam
adc
xchg
fsubrs
fdivp
mov
cmp
xchg
or
ud0
pop
dec
xchg
or
or
fcoms
sub
sarb
xor
jl
inc
pop
cmp
xor
jb
cli
dec
lahf
ficoml
pop
pop
out
lahf
cmc
ret
mov
inc
xchg
inc
pop
rol
pop
inc
adcl
bound
dec
shll
ror
ret
ljmp
push
pop
notb
jb
icebp
fbstp
jae
mov
dec
push
sub
ret
sahf
pop
lea
mov
aaa
pop
mov
adc
or
fisttps
in
sub
addl
imul
pop
into
adc
shlb
pop
mov
scas
mov
xchg
jno
cmpl
mov
orl
ja
inc
dec
sbb
xchg
js
mov
jg
fisttps
cmc
ret
adcb
hlt
dec
rcrl
or
add
add
cmpsb
mov
mov
int
ret
inc
sti
pop
push
jno
or
jbe
pop
sub
add
dec
mov
pop
jb
adc
xchg
bnd
sub
inc
ret
cmc
mov
loopne
rcrb
add
test
jge
lret
mov
mov
bound
xchg
arpl
int
sarl
dec
arpl
mov
mov
mov
mov
push
mov
cmp
into
data16
ljmp
movsb
test
pusha
mov
test
fs
xchg
cltd
ljmp
jmp
and
scas
imul
insl
or
movsb
xchg
mov
lahf
mov
mov
mov
push
fldenv
aaa
aam
fdiv
loopne
orl
cmp
jnp
dec
mov
xchg
ss
mov
or
inc
insb
jbe
mov
xchg
inc
in
pop
popa
fadds
ja
shrl
or
inc
inc
xchg
repz
mov
enter
sarb
lods
cmp
aad
mov
fstps
jl
xacquire
mov
pop
push
ficomps
jge
jns
pop
idivl
jle
xchg
lcall
shll
mov
nop
cmpsb
ja
loope
cmp
sbb
mov
push
cmp
dec
dec
mov
or
push
repz
loopne
outsl
stos
jmp
popf
inc
adc
movsl
repz
fiaddl
and
aam
inc
imul
jo
outsb
popf
cs
cwtl
mov
xchg
or
scas
clc
sahf
add
push
lea
nop
jl
enter
pop
mov
outsl
mov
fsubrl
pusha
rcl
sarb
and
pop
xchg
cmp
or
ds
mov
orl
adc
popa
jge
mov
dec
fildl
cwtl
adc
mov
jmp
fisubrs
fstl
negb
and
sbb
call
loopne
mov
xlat
addr16
xor
dec
pop
xchg
sub
imul
jge
aaa
pop
icebp
cmp
push
adc
shrb
sti
addl
mov
xchg
xor
in
push
mov
shll
incb
js
repz
stos
scas
xchg
adc
push
xchg
lock
test
mov
test
lret
jg
xchg
adc
jne
nop
cwtl
sbb
pop
adc
dec
imul
loop
jl
imul
sti
negl
lods
ss
adc
int
in
ret
ret
leave
cmpsl
idivl
aas
mov
dec
subb
xor
pop
fisubl
lahf
stc
stos
das
mov
and
loopne
push
sub
sti
xchg
aam
mov
mov
mov
cmpsl
dec
aas
add
sti
push
rol
push
adc
xor
xorb
mov
test
or
mov
add
nop
data16
or
cmpsb
fmuls
leave
and
xchg
in
add
insb
dec
jb
out
repz
cmp
adc
repnz
push
int
dec
ja
xchg
stos
mov
mov
loop
push
cs
push
adc
jne
pop
enter
fwait
sti
xchg
addl
js
cmpsl
push
es
movsl
jns
or
pop
enter
sub
sub
push
pushf
xchg
xor
push
pop
cmp
jne
push
data16
adc
dec
pop
lods
push
loopne
add
in
imul
lret
lret
int
push
xor
scas
cmc
mov
dec
adc
stos
pop
xchg
dec
orb
cmpsl
dec
sti
popf
hlt
jbe
scas
pop
xchg
dec
push
dec
pushf
and
add
enter
mov
outsl
stc
xchg
inc
loop
mov
sbb
fs
hlt
loopne
sbb
cwtl
xor
mov
sbb
lret
jge
xchg
pushf
lock
adc
inc
repnz
out
push
cs
add
imul
pop
std
cmpsb
mov
sub
les
and
into
jecxz
mov
outsl
call
or
notl
mulb
mov
cmp
mov
scas
int
cmp
loope
add
sar
mov
push
push
lods
fisttps
xchg
adc
push
cmpsb
push
out
and
sbb
popa
sub
jne
leave
aam
push
cmp
and
mov
inc
xchg
out
imul
push
sarl
xchg
popf
or
es
or
dec
es
or
or
aaa
inc
and
in
clc
xchg
into
int
pop
les
and
mov
int
cmp
fiaddl
outsl
add
push
aas
into
inc
dec
jmp
hlt
xor
xor
or
sbb
sahf
fisttps
loopne
mov
adc
jmp
mov
cmp
lods
mov
out
or
fsubrl
jns
pop
jge
xor
outsb
dec
pushf
stc
xlat
sahf
push
mov
sbb
mov
adc
dec
sub
jge
test
jno
test
pop
or
or
shlb
push
addr16
mov
mov
cli
sbb
fwait
sub
xor
push
sub
cmpsb
insb
pushf
aaa
add
int
adc
xchg
add
push
ss
push
call
pop
pop
mov
adc
jge
xchg
add
ljmp
cmp
gs
xlat
ljmp
fisubrl
aad
jno
xor
jl
adc
flds
fcoms
ljmp
in
pop
push
mov
sahf
test
lea
popf
pop
jmp
imulb
adc
mov
mov
push
adc
gs
xchg
in
jecxz
into
fidivl
pop
lea
cmp
movsb
jge
call
lahf
mov
add
cmp
xorl
xchg
out
outsl
inc
outsb
mov
out
repnz
xchg
pop
jmp
xlat
pusha
mov
xor
test
fbstp
adc
pop
adc
mov
xchg
hlt
jo
pop
stos
pusha
jl
jns
mov
mov
mov
xchg
jae
cmp
inc
dec
inc
sbb
loope
adc
add
lret
fcomp
loope
insl
xor
mov
fcoms
or
enter
repz
jns
shlb
movsb
sub
ret
lods
std
add
aam
xchg
bound
adc
or
out
test
mov
das
imulb
jbe
imul
movsb
adc
lds
xor
daa
xor
adc
leave
mov
cmpsb
rorl
xchg
pop
mov
nop
test
cmp
and
rolb
dec
iret
es
fldl
lods
push
and
jmp
aam
xor
fmuls
jmp
add
sub
sub
xor
fs
int3
ror
pop
sarl
loop
lahf
add
mov
das
aas
sysret
and
push
dec
add
and
xchg
adc
mov
cmpsl
sahf
cmp
add
adc
mov
rcl
clc
decb
mov
mov
cmpsb
cmc
fnstcw
mov
adc
lods
jg
cltd
or
lahf
sbb
es
adc
jnp
lds
stos
shll
add
push
lcall
jae
lret
xchg
out
fs
cltd
pop
jno
xchg
int
mov
push
mov
loop
jno
js
jmp
push
cltd
cmpb
loop
in
loopne
loopne
push
mov
mov
jl
js
test
negl
arpl
cmp
jb
sbb
fmuls
mov
push
cmpsl
jp
ret
pusha
je
mov
jae
loop
push
ds
mov
data16
dec
lcall
dec
push
out
inc
fisubrl
data16
idivb
stos
lds
out
sub
ret
cli
and
loop
jns
pop
ret
mov
ja
arpl
ss
pop
mov
mov
movsb
push
jl
jmp
bound
adc
sub
cmpsl
dec
push
out
mov
xor
std
cld
pop
cmc
mov
jnp
jns
jo
stos
ret
or
sub
mov
inc
je
scas
mov
cwtl
mov
cmpsl
lcall
sbb
and
mov
push
scas
lock
mov
cmpsl
cli
je
jl
xchg
pushf
lock
inc
mov
insl
iret
popa
lahf
jle
xor
out
mov
das
jge
push
loop
int
pushf
mov
push
push
aaa
test
shll
add
in
inc
adc
stos
inc
lock
xchg
cmp
sub
mov
push
ficompl
xor
scas
or
push
mov
cli
test
ficompl
mov
jp
cmc
ljmp
push
jne
pop
push
shl
sbb
out
mov
jl
pop
cwtl
movb
nop
movsl
outsl
ffreep
mov
in
xor
lock
push
pop
js
add
mov
sub
jg
retw
inc
xlat
loop
aad
test
cmpsl
int
ja
pop
dec
aaa
das
pushf
int3
lret
mov
push
push
lods
sub
and
dec
sub
stc
push
cmp
jmp
test
orl
in
or
lret
in
inc
push
adcl
inc
incl
lea
xlat
jmp
es
sbb
or
sub
int3
in
sub
pop
cmpb
push
cmpsb
xchg
in
sbb
fistps
cmpsl
mov
mov
rcll
dec
jb
pop
push
mov
ffree
ss
lcall
inc
cs
negb
sub
in
mov
lldt
adc
and
mov
pop
add
or
loope
push
cli
lahf
out
repz
inc
fisubrl
push
jne
jo
jnp
dec
shlb
add
cmp
mov
iret
into
push
std
mov
sbb
mov
mov
nop
rolb
sarl
or
xchg
out
mov
das
insl
insl
insb
add
outsb
out
ss
roll
lahf
mov
je
pop
push
add
xchg
inc
push
dec
inc
loop
add
aas
enter
pop
in
push
lea
arpl
jg
bound
fiadds
in
cwtl
testb
inc
xor
add
jae
dec
lret
repz
mov
pop
jo
aad
imul
stc
push
out
je
clc
inc
mov
ret
mov
jnp
jp
jnp
mov
jo
lock
pop
jmp
jle
rcrb
cmp
cmpb
out
ret
pop
fcmove
adc
call
sbb
mov
mov
cli
repnz
xor
in
mov
call
inc
mov
push
das
sub
mov
sbb
out
push
out
mov
jmp
cs
jno
adc
push
cmp
aam
int3
or
jo
out
adc
outsl
push
fistpl
xchg
outsb
xchg
in
or
cmp
lret
cld
mov
mov
pop
out
push
je
repz
addr16
mov
jo
sub
std
xchg
adc
insl
xchg
addr16
bound
rcrb
mov
sub
in
aas
xchg
lods
or
jecxz
cmp
jge
or
popf
scas
jb
jl
mov
repz
push
jmp
add
xor
mov
xchg
xor
loop
sbb
mov
lcall
sbb
dec
movsb
std
out
push
adc
pusha
inc
push
loopne
pop
pusha
addl
loop
aas
div
fcomip
mov
lds
into
mov
scas
xlat
and
adc
ss
xlat
cli
pop
dec
ret
and
push
sbb
push
and
and
push
push
jle
ficomps
test
je
push
mov
push
xor
cwtl
mull
and
rolb
jmp
insl
bound
pop
in
lods
push
outsl
push
movsl
addb
arpl
test
and
mov
ret
pop
mov
jl
push
sbb
jecxz
jae
mov
mov
sahf
sbb
mov
cmp
pop
imul
outsl
mov
outsl
lcall
lods
adcb
push
dec
mov
pop
push
ret
push
xor
dec
lds
adc
pop
icebp
adc
dec
adc
aaa
cli
iret
add
push
push
add
or
inc
xchg
je
lahf
inc
std
fisubs
scas
popa
stos
push
test
push
aas
and
ret
push
test
xchg
int3
fcmovb
shrl
loopne
js
sub
mov
sbb
scas
or
xor
out
inc
in
adc
arpl
icebp
popa
pop
pusha
lret
divl
mov
mov
adc
xchg
mov
lods
daa
in
xchg
dec
jp
pop
imul
pushf
sub
dec
sahf
js
push
insl
cmp
jmp
test
inc
popa
hlt
fmuls
add
cmp
enter
pusha
in
test
jmp
jbe
jmp
cli
scas
test
flds
test
ja
and
dec
rep
push
jl
or
mov
ljmp
test
mov
movsl
ret
jl
addr16
mov
mov
lea
jg
mov
cmp
ret
cmp
fimuls
lock
mov
repz
repnz
in
ficompl
adc
mov
lods
dec
daa
loopne
dec
loope
mulb
shlb
jbe
pusha
adc
imul
ja
adcl
mov
sub
test
lods
repz
push
jmp
imul
adc
mov
hlt
movsl
incl
aas
xor
cmpsb
aaa
test
data16
sub
inc
push
push
add
idivb
mov
xchg
add
mov
push
lds
dec
fcomps
orb
addr16
sti
jmp
mov
cwtl
outsb
rcr
inc
adcb
imul
mov
enter
fucomi
mov
out
and
cmpsl
mov
add
mov
cmp
and
inc
inc
cld
movsb
push
test
pop
sub
insl
adcb
jle
cmp
push
mov
pop
enter
rcrl
jmp
mov
insl
jb
scas
bound
push
stc
sub
pop
jnp
lds
test
jge
jno
xchg
cmp
cld
pop
mov
mov
mov
cmp
push
mov
test
sbb
mov
inc
out
aas
sbb
in
fmull
mov
jns
les
pop
insl
stc
pop
into
mov
and
jg
into
pop
gs
ss
cmp
stos
outsl
call
rcl
test
lods
fadd
xchg
fildl
xchg
dec
push
pop
fildl
push
lods
jge
mov
lds
jae
add
adc
jo
popa
mov
xor
mov
xor
pop
xchg
add
mov
xchg
pusha
and
out
mov
je
or
dec
fistpll
daa
xchg
pop
sarb
fs
mov
fistps
cmp
out
sarl
cmp
adc
decb
out
sbb
cmc
mov
mov
cmp
add
mov
mov
cmp
hlt
push
xor
into
adc
and
dec
push
lcall
movsl
pop
gs
xor
jo
idivl
sbb
leave
ret
add
shll
push
xchg
gs
and
stc
in
insl
or
aaa
xor
aas
sub
in
and
cltd
repz
pop
call
jp
lret
enter
movsb
push
pop
sub
call
xor
icebp
adc
xor
mov
or
pushf
lahf
rcr
test
repnz
push
mov
lret
sub
pop
xlat
lret
and
dec
jmp
sbb
adc
pop
xchg
aaa
test
lret
push
mov
and
xor
loope
push
das
cmp
xlat
repz
mov
hlt
inc
es
sbb
cmp
loopne
out
aas
cmp
out
imul
add
push
adc
cli
call
shl
outsb
aas
sbb
mov
lock
rclb
outsb
inc
std
dec
mov
dec
xchg
jl
xchg
icebp
stc
xchg
or
pop
loope
sbb
or
xor
xor
insl
push
lcall
mov
push
pop
andb
dec
cmp
jecxz
or
cmpsl
fs
call
ljmp
pop
sti
pop
sbb
pop
push
jl
pop
sbb
jnp
push
mov
popf
andb
sub
aam
imul
inc
inc
mov
stos
jmp
cmp
stos
jno
pop
aas
sbb
dec
mov
push
inc
dec
sub
and
xchg
mov
fcmovb
xor
das
inc
movsl
addr16
mov
ficomps
addr16
rclb
leave
sub
sub
aaa
scas
mov
mov
and
add
and
imul
fiaddl
das
stos
xlat
out
mov
push
or
out
repnz
loopne
dec
aas
add
fs
in
mov
cmp
shll
and
clc
shl
inc
out
xchg
adc
call
out
push
mov
stos
sar
imul
mov
or
aaa
jbe
xor
scas
lea
inc
mov
xor
std
pop
xlat
add
push
cmc
sub
push
add
inc
mov
imul
jle
adc
fidivrs
add
and
nop
mov
pop
in
mov
xlat
mov
mov
xchg
push
imul
or
sbb
test
mov
jnp
xchg
pop
ja
pushf
cmpsl
add
push
adc
dec
in
lret
pop
xor
andl
dec
insb
outsl
pop
and
addb
ud1
xchg
xchg
shll
xor
mov
push
fwait
out
mov
xchg
js
cmp
rclb
mov
xchg
divb
dec
lahf
jo
adc
mov
jb
shr
fdivp
mov
jo
mov
jge
jmp
out
call
push
and
or
mov
std
push
mov
mov
orb
cmp
call
icebp
pop
ss
push
sub
insl
pop
enter
inc
sbb
mov
push
and
lret
jb
or
stos
xchg
pop
push
outsl
xchg
inc
jle
inc
dec
test
dec
xchg
add
popf
call
push
sbb
insb
add
aas
add
incl
sbb
inc
dec
pop
stc
push
pop
adc
pop
in
loop
loope
std
sahf
icebp
jp
dec
sub
pushf
jl
stos
jecxz
scas
stc
leave
fsubl
fiaddl
iret
cmp
lods
cwtl
inc
push
out
aam
or
pop
arpl
xchg
add
xchg
mov
dec
std
inc
movsl
lcall
sbb
inc
mov
scas
mov
xchg
dec
ja
push
and
jp
and
rol
fs
in
push
insb
inc
or
stc
inc
icebp
pusha
mov
inc
ret
jecxz
stc
in
int
insb
add
aam
adcl
pop
sarb
arpl
lret
out
arpl
dec
js
mov
call
adc
fsts
inc
iret
fcomi
dec
mov
cmp
iret
int
in
fnsave
pop
je
xchg
rcrb
mov
aam
aad
inc
push
sub
jmp
out
mov
sub
lcall
repnz
xchg
lret
mov
out
mov
mov
test
es
mov
testl
stc
clc
dec
xchg
les
add
cmp
insl
cmp
inc
or
ret
cltd
xor
sub
loope
add
testl
push
mov
add
adc
jb
jnp
popa
and
rclb
adc
mov
rcrb
jb
in
xchg
xor
outsb
add
push
cld
test
shrl
mov
sar
scas
fistpll
pop
movsl
int3
pop
xlat
sub
mov
xor
lods
sub
cmp
imul
cmpsl
cs
lret
pusha
clc
data16
or
pop
jo
add
adc
test
jno
sti
push
test
idivl
inc
fstpt
xlat
pop
and
movb
stc
imul
in
inc
into
add
inc
pop
sub
mov
cmp
lahf
adc
adc
jne
std
pushf
fs
mov
mov
jo
jb
rol
mov
or
int
or
jge
stc
das
cmp
or
dec
mov
int3
xchg
not
inc
repnz
dec
mov
clc
push
sub
and
xchg
aad
xchg
bound
push
cs
mov
or
mov
mov
aad
pop
lret
and
mov
stos
add
arpl
aas
adc
dec
cmp
push
or
dec
insb
icebp
out
pop
outsb
test
push
mov
lea
xchg
fmul
fbld
loop
jp
fwait
cld
loopne
inc
push
out
lret
aas
decl
nop
jle
inc
icebp
ds
push
sbb
orb
push
mov
ret
sarl
in
add
test
xchg
xchg
cmp
or
rolb
popf
add
and
js
mov
lods
cmp
cmpsb
sbb
inc
push
in
or
dec
or
insl
mov
adc
jbe
outsl
sub
mov
push
cwtl
lcall
repz
gs
in
les
jae
int3
xchg
call
jns
xor
mov
jb
push
add
dec
mov
fldt
int
mov
and
push
cmp
pop
dec
stos
inc
pushf
push
fildl
outsl
mov
test
jb
cwtl
popf
dec
fsubrs
inc
mov
and
ret
repz
sbb
and
mov
testl
xor
mov
inc
and
xor
sub
push
and
mov
push
test
mov
lods
fnstcw
in
mov
jl
adc
pop
mov
xorl
dec
jns
or
mov
pop
jmp
mov
in
dec
loope
xchg
push
inc
stc
into
push
mov
call
add
test
mov
test
pop
mov
roll
sbb
and
addr16
cmp
leave
test
loopne
test
ja
notl
add
jl
shrl
cmp
sar
dec
xlat
pop
dec
shlb
data16
jmp
sub
inc
adc
pop
fcomps
scas
adc
adc
sbb
or
out
dec
and
adc
ja
mov
jae
shl
sub
mov
cmp
rcrl
and
subl
ds
test
mov
xchg
mov
stos
xchg
leave
lods
push
lds
xchg
mov
and
push
pop
add
pop
test
lret
mov
xor
sub
inc
dec
loope
xorb
scas
fists
movsb
mov
loop
cltd
push
pop
shl
mov
and
mov
inc
cmp
xchg
jns
cli
sahf
sahf
jg
xchg
add
inc
je
out
fadd
into
stos
xor
cmp
cwtl
inc
test
xor
mov
pop
dec
and
stc
lods
inc
out
mov
xchg
aas
sbbl
dec
int3
mov
and
mov
add
fimuls
pop
repz
test
xchg
or
stos
ret
jmp
xchg
sub
mov
stc
mov
aas
or
inc
ja
loope
repz
or
shlb
xlat
sub
into
xchg
jno
xchg
push
xchg
pop
push
sbb
clc
pop
cmp
js
in
lds
sbb
imul
pop
mov
sub
ds
adc
ja
data16
adc
out
or
rorl
add
ja
loop
or
push
pop
aas
std
int
je
addr16
bound
ds
cmpsl
jnp
movsl
outsb
iret
and
sbb
dec
xor
push
ja
xchg
nop
je
test
push
add
mov
movsl
cmp
nop
mov
call
mov
out
nop
ss
jecxz
mov
icebp
jecxz
aas
in
in
pop
addb
ja
xchg
iret
sub
mov
pop
icebp
add
jmp
lahf
push
ds
or
add
imul
sbb
outsb
and
mov
in
sarl
cld
ljmp
shrl
in
mov
push
xchg
stc
rcrb
adc
rcr
mov
out
cwtl
xor
or
fdivrl
data16
xchg
sbb
xor
icebp
cmpsb
div
dec
dec
mov
bound
push
loop
les
fisttpll
daa
addr16
mov
cmp
mov
lea
popf
call
in
pop
arpl
jg
xchg
sbb
mov
pop
jl
jno
inc
insb
and
lahf
loopne
test
pop
pop
pop
xlat
pushf
jo
mov
incb
pop
push
cmp
test
addr16
int
repnz
lret
push
jecxz
lcallw
adc
nop
pop
or
outsb
sub
movsb
data16
pop
out
mov
adc
cmp
jno
cmpsb
pop
cmpsb
jl
inc
xchg
pushf
iret
shr
sbb
loopne
mov
push
and
scas
mov
in
ds
lret
mov
xor
cltd
mov
mov
insb
rcl
js
pushf
adc
and
addl
sbb
sbb
dec
sub
addr16
jae
xchg
pop
sub
mov
adc
jmp
jns
cltd
insb
or
xchg
mov
dec
in
rep
lods
jnp
pop
sbbb
test
lcall
in
inc
cmp
jb
mov
sbb
or
cmp
sti
bound
xchg
popl
aaa
mov
test
fwait
and
loop
add
dec
cwtl
rcrb
mov
dec
imul
imul
test
test
ds
and
addr16
xchg
in
push
jle
sub
jb
mov
icebp
jge
bound
jle
dec
pop
aad
dec
fst
cmp
pop
ret
add
push
pop
insl
mov
std
mov
mov
adc
xchg
push
or
icebp
cmpsl
loope
imul
cmc
jbe
push
cld
mov
stos
shrl
sub
ficoms
data16
jmp
and
push
mov
cmp
jae
popf
std
ja
mov
adc
jnp
shlb
add
sub
rcrl
inc
fwait
dec
pop
shr
negb
aad
lahf
xchg
jge
imul
cli
xchg
jl
sarl
adc
xchg
adc
insb
data16
enter
dec
fwait
and
ljmp
push
dec
pop
mov
xor
and
jmp
hlt
or
inc
sub
mov
fmull
aas
sub
inc
lock
stc
in
xchg
aam
stos
jmp
sub
cwtl
jo
cmp
inc
dec
adc
in
pop
fdivl
out
mov
inc
push
mov
int
mov
lods
pop
rolb
jb
fiaddl
les
xor
add
test
adc
iret
bound
mov
adc
notb
mov
xor
jp
mov
inc
mov
popa
xchg
stos
lods
rorl
cmp
lcall
and
sti
mov
cmpsl
daa
imul
int
rorl
dec
pop
mov
cmp
xchg
inc
mov
push
popa
shr
xchg
add
or
cli
xor
test
add
push
and
push
inc
jns
jmp
xchg
icebp
sahf
in
mov
mov
loopne
fistpll
add
adc
mov
das
mov
mov
sbb
xchg
decl
jns
mov
push
mov
jno
cld
sbb
loopne
hlt
inc
mov
mov
pop
mov
xlat
pusha
jbe
outsb
div
adc
pop
mov
rorb
arpl
insb
fisubrs
ljmp
mov
cmp
das
jmp
rclb
dec
pop
outsl
stos
push
pop
mov
cmp
push
and
jno
cmp
sub
test
hlt
xor
or
outsl
pop
mov
mov
ds
xor
dec
xor
mov
es
int3
scas
pop
sbb
add
xor
adc
sub
push
push
jnp
insl
testl
mov
out
lds
xor
hlt
fcomps
lods
xor
and
clc
stos
dec
push
fists
inc
loope
mov
aaa
sub
xchg
cld
pop
clc
jae
bound
inc
dec
jecxz
push
mov
push
es
loopne
hlt
push
sbb
adcl
sub
jno
xchg
xchg
movsl
xor
aam
push
adc
es
stos
popa
sub
lea
call
shll
enter
pushf
out
test
lods
sbb
xor
in
jle
pop
jmp
decb
insb
push
cld
jne
into
inc
xor
mov
mov
sub
filds
mov
mov
cmp
cmc
or
cmp
mov
out
and
pop
mov
outsb
and
ljmp
cmc
mov
xchg
les
add
sbb
xchg
sub
adc
pusha
adc
fimull
sub
mov
std
add
jbe
lea
jle
cmp
cmpsl
lock
mov
sub
or
push
cmpb
cmp
in
roll
jns
fs
xchg
or
adc
fstpt
arpl
ret
pusha
xorl
xor
inc
pop
adc
dec
pop
out
sarl
inc
cmpsl
pop
cmp
std
into
fcmove
outsl
jp
idivb
mov
pop
int3
shlb
insb
adc
push
xor
mov
mov
sahf
mov
jno
xchg
push
cld
test
imul
movsl
jmp
enter
rcrb
shrl
lock
scas
dec
sbb
mov
test
or
das
adc
int
insb
das
or
daa
call
imul
mov
aam
adc
repnz
mov
mov
xchg
cmp
in
ret
push
mov
jmp
push
inc
fdivr
outsl
outsb
dec
out
leave
das
jge
lret
sarl
lods
addr16
add
cld
sar
andl
in
sar
stc
jl
push
push
arpl
iret
pop
aas
sbb
imul
mov
ss
add
mov
pop
lahf
out
pop
lea
sub
das
xor
pop
xchg
andl
cwtl
nop
mov
pusha
js
divb
push
adc
leave
inc
push
test
push
mov
lret
int3
mov
es
cmp
and
imul
andl
in
push
sti
mov
inc
sahf
add
std
popa
out
jns
dec
stc
push
rolb
enter
xlat
xchg
int3
dec
xor
and
and
cld
sarl
repz
mov
imul
divb
sbb
or
aad
in
pop
inc
fldenv
mov
lahf
arpl
mov
cmpsl
cli
jecxz
cmp
and
iret
add
sbb
movsb
push
cs
out
jnp
inc
dec
fbstp
clc
xlat
ds
sbb
repnz
int
test
pusha
call
pop
mov
scas
sbb
out
shrb
mov
rorb
enter
xchg
xchg
lods
cmpsb
jg
inc
mov
hlt
cmp
xchg
pop
push
rol
aaa
lcall
mov
add
neg
mov
repnz
xchg
inc
jbe
sbb
jecxz
aad
jns
std
pop
scas
mov
in
sub
jecxz
aaa
shrl
clc
lock
jge
or
test
add
test
and
scas
ret
xchg
inc
jp
std
loop
push
xchg
inc
pop
rcr
fs
test
pop
mov
cmp
mov
shrb
or
xchg
in
movsb
jle
xlat
and
arpl
adc
jbe
pop
stos
mov
or
js
enter
in
ds
push
push
movsl
xor
fstpt
cs
mov
xor
pop
xlat
out
je
scas
cmp
mov
test
push
jo
mov
cs
cld
fwait
int3
lahf
ss
add
inc
push
or
aas
loope
xchg
lea
mov
pop
inc
inc
jmp
mov
jg
xor
cmpsb
xor
loope
inc
mov
arpl
ss
xchg
push
mov
jmp
mov
rorb
negl
mov
iret
movsb
shll
cmp
dec
xchg
xchg
or
mov
mov
out
xchg
test
stc
jg
inc
fwait
hlt
jmp
xchg
jbe
hlt
pop
repz
adc
xchg
lock
out
push
test
test
jp
cmc
pop
test
jmp
mov
lahf
sub
xor
and
mov
push
call
out
out
insb
sub
push
inc
mov
jle
mov
pusha
xlat
sub
sbb
mov
or
dec
add
loope
fdivrl
ss
pushf
cmpsb
xlat
das
sbb
mov
add
push
addl
sub
inc
out
je
loope
pop
stos
mov
jno
mov
iret
mov
repz
sahf
dec
jo
mov
inc
jae
sbb
jno
jne
rcll
jns
cld
or
inc
sub
dec
divb
pop
pushf
sbb
sbb
nop
je
gs
out
es
cmpsl
jmp
adc
ljmp
notl
lock
mov
dec
sbb
cmpsl
pop
dec
ficomps
sub
mov
xor
fwait
cmp
push
ja
cmpsl
or
xor
dec
mov
dec
arpl
push
or
pop
pop
sub
cmp
inc
cmpsb
or
add
xchg
lods
mov
or
pop
mov
jmp
and
and
lock
rolb
pop
and
aam
jne
jbe
fmuls
dec
inc
inc
cld
xchg
aaa
xor
jns
jb
mov
mov
scas
push
scas
or
pop
subb
xchg
or
clc
mov
sbb
rorb
add
aam
mov
adc
mov
fcoml
dec
jno
xor
jecxz
sarb
mov
xchg
ss
push
jns
popa
and
add
inc
jp
xchg
push
xor
jnp
lret
or
sahf
in
mov
dec
stc
add
jae
cld
daa
pushf
imul
push
push
mov
jbe
rol
xor
sahf
inc
lcall
in
pushf
lock
jne
xchg
mov
xorl
fmull
or
shl
mov
inc
orb
ficoml
mulb
jle
xchg
pop
ret
inc
xchg
mov
es
fstpl
cmp
sbb
adcb
xor
push
xchg
loopne
repnz
lds
mov
adc
sub
xor
adc
inc
cmp
rcll
aam
imul
push
cmp
push
sub
mov
jp
jns
xor
call
jae
sbb
push
xor
pop
bswap
mov
rcrl
shl
cs
es
pop
mov
inc
out
push
jg
sbb
testl
dec
xor
xchg
xchg
sub
pop
movl
aam
addr16
jae
mov
movsl
call
aas
loope
inc
fs
daa
cltd
pop
lret
mov
jns
dec
out
sti
pop
es
leave
int3
push
int3
out
sbb
jmp
xorb
jae
xor
push
fucom
pop
dec
and
dec
sbb
mov
xor
roll
cmp
test
push
sub
sub
mov
inc
aas
xlat
out
adc
js
xchg
lret
push
cmp
jg
pusha
xchg
sti
jg
sbb
cld
xchg
push
popa
out
push
add
add
and
jbe
addr16
in
dec
mov
mov
lock
adc
sub
shr
shlb
movsl
cmp
test
shrb
mov
cmp
adc
xchg
sub
push
cmp
cld
inc
shrl
aas
xchg
cld
push
data16
lahf
push
sub
cli
or
cmp
test
jbe
ja
jns
pop
loop
pop
call
sti
pop
icebp
in
lock
push
xchg
cmp
or
scas
dec
inc
jne
mov
nop
xchg
addb
or
or
mov
xchg
add
pop
fld
mov
daa
xor
imul
adcb
sub
in
pop
jnp
int
mov
push
xor
mov
pop
xchg
out
mov
pop
ret
jp
pop
add
es
jbe
sbb
les
mov
mov
out
fwait
dec
arpl
adc
or
and
sbb
push
mov
pop
xor
or
dec
fidivs
cli
daa
cmp
push
daa
cmp
dec
jp
ljmp
dec
in
push
pop
addb
xchg
decb
sub
testl
movsl
out
or
addr16
test
mov
and
imul
cmp
rol
add
or
pop
filds
stos
mov
testb
cmp
pushf
xor
call
cmc
cmp
pop
out
cld
xchg
push
outsl
loop
outsl
pop
sbb
and
pop
xchg
lock
or
and
push
xor
lahf
push
xchg
stos
lcall
jg
int
and
daa
scas
jg
in
dec
lahf
arpl
lock
jno
mov
push
adc
pop
ljmp
add
sub
pop
loop
jnp
adc
push
sti
in
cmpsb
repz
inc
lcall
or
pop
adc
insb
pop
movsl
xchg
or
subb
mov
push
inc
sub
movsl
jl
sbb
cltd
movsb
sub
int
mov
into
sub
adc
add
fadd
adc
inc
and
add
pop
movb
js
out
stc
test
ret
std
cmp
sti
pop
fisttpl
adc
mov
mov
cmpsb
int
pusha
pop
je
sub
push
xchg
inc
xor
xor
cmp
push
mov
rcll
in
mov
cmp
pop
pop
lret
xchg
push
std
scas
fmull
fstp
inc
test
xchg
jno
sbb
jp
dec
iret
cltd
mov
std
jge
dec
jne
inc
fstpl
jmp
add
in
push
js
pop
jmp
stos
cmp
sbb
sub
adc
push
movsl
cltd
dec
adc
js
jne
ljmp
pop
push
das
and
mov
std
call
mov
cmp
fldenv
inc
insb
inc
fimuls
ja
mov
and
rcr
repnz
cmp
and
mov
data16
mov
mov
insb
dec
mov
push
test
icebp
pop
cmp
int
add
das
jmp
je
xchg
pop
call
and
imull
adc
mov
jmp
loop
ret
shl
pop
pop
pop
lock
adcl
add
aam
mov
mov
xchg
pop
inc
mov
sub
pop
jb
mov
and
shlb
mov
out
iret
pcmpeqd
adc
adcl
add
movl
pop
dec
inc
sbb
lods
xor
mov
mov
mov
mov
enter
mov
mov
xor
pusha
andl
lods
jbe
xor
nop
mov
adc
xchg
jb
rclb
int
sub
outsl
jp
fcmove
icebp
add
mov
mov
iret
inc
nop
fistps
cli
cwtl
ds
mov
sbb
stos
push
cmpsb
mov
test
inc
jl
inc
mov
push
mov
sysenter
pusha
arpl
ss
push
sub
rol
dec
es
xor
lcall
cld
push
inc
adc
xorl
jg
or
xor
out
call
cmpsb
roll
push
pop
push
in
in
push
jmp
sbb
cld
mov
fbld
lock
in
iret
sub
sbb
sub
or
sub
negl
mov
push
clc
ljmp
mov
adc
mov
popa
pop
jbe
inc
decb
push
lahf
pop
cs
call
arpl
push
loopne
push
push
icebp
or
inc
dec
inc
loope
or
adc
dec
ror
scas
jb
fwait
scas
mov
and
xchg
sti
dec
in
lods
sbb
mov
fbld
cmpsl
enter
push
or
stc
call
xchg
js
insl
std
add
outsl
inc
cmp
dec
out
sahf
outsl
mov
clc
in
or
push
scas
xchg
fnsave
inc
fucomip
negl
ret
int
mov
pop
roll
in
mov
orb
xor
cltd
xor
test
add
repnz
jb
pop
shl
dec
mov
dec
je
int3
aaa
ret
test
xor
push
dec
inc
xchg
or
and
cwtl
fidivs
scas
outsb
mov
mov
leave
cltd
imul
imul
loopne
sbb
lea
imul
es
fdivrp
fldenv
int3
fs
out
and
hlt
test
sub
in
xor
sbb
data16
lods
dec
xchg
into
pop
fstpl
pop
or
imul
mov
and
lea
or
cmp
sbb
or
aad
and
stc
lret
push
mov
cltd
std
pop
dec
fcoms
ret
andl
pusha
rol
mov
fsub
adc
sti
shlb
jno
out
xchg
leave
push
stos
lahf
in
mov
cld
mov
jne
stos
aad
xchg
dec
sbb
cli
push
inc
insb
dec
loop
lods
divb
lods
mov
fsubrl
in
mov
subb
ficomps
fisubrs
pop
xor
sbb
dec
push
into
repz
push
xchg
movzwl
inc
popf
cmp
or
popf
inc
jns
cmp
nop
addr16
sbb
fimull
push
jns
pop
cmp
jmp
lock
loopne
in
xor
cld
xor
inc
dec
xor
mov
and
xor
inc
cmp
lcall
adc
add
pop
push
mov
jb
jae
mov
push
mov
pop
jno
aad
clc
xchg
lock
out
sbbb
push
lea
and
jmp
les
fwait
rcrb
outsb
mov
repnz
inc
into
lods
aam
enter
cld
aas
jb
hlt
cwtl
sbbb
popf
je
add
mov
push
mov
movlhps
sbb
or
mov
or
je
ficomps
pop
sbb
stos
jb
mov
xorl
push
or
mov
dec
lods
jecxz
mov
cld
test
or
mov
ja
cmpsl
xchg
mov
scas
push
jns
sub
js
aad
arpl
std
push
push
pop
and
in
mov
daa
aam
rclb
cmp
call
add
in
lds
pop
inc
nop
out
fcomp
ficompl
pop
sub
inc
stos
sub
popl
xchg
sbb
sahf
dec
movhps
jnp
pop
add
loop
cli
mov
push
mov
push
lret
ret
cmpsb
add
pop
jae
into
adc
subb
mov
iret
xrelease
das
jecxz
test
cmp
xchg
push
mov
das
xchg
popf
je
es
ret
out
add
enter
xchg
push
test
iret
push
add
lods
push
mul
dec
mov
subb
in
popa
xchg
fdivl
jnp
fcmovnu
call
inc
xchg
sarl
outsl
xor
dec
add
cmp
arpl
jl
aam
jb
push
pusha
push
sub
stos
mov
and
cs
xchg
sub
xor
sbb
je
push
outsb
popf
add
scas
stos
jl
jnp
cmp
es
cmc
pop
xor
outsb
pop
pop
lret
push
enter
xor
adc
das
leave
in
cltd
cmp
xchg
mov
xor
inc
nop
push
gs
cltd
iret
test
fdivrs
lods
jbe
and
lahf
add
add
dec
cmp
sub
xchg
push
inc
pop
cld
inc
add
pusha
sti
mov
xchg
and
stc
in
jg
xor
popa
into
iret
hlt
outsl
sbb
sbb
mov
xchg
orb
leave
cmc
jae,pt
dec
mov
test
xor
cmovo
push
push
mov
mov
leave
jae
push
subb
adc
ret
pop
scas
dec
or
and
pop
gs
les
les
or
stc
dec
pop
movl
pop
out
movsl
pop
push
repz
loope
and
rorl
pop
add
sahf
mov
xchg
jge
add
int3
mov
pop
rcll
add
lret
icebp
xchg
xor
inc
ss
xchg
test
mov
lods
rorl
pusha
push
cmp
add
or
ljmp
inc
mov
or
fsubl
popf
sub
xchg
xchg
cmpsb
aaa
mov
mov
or
orl
push
mov
movsb
inc
mov
arpl
arpl
adc
mov
mov
jmp
jp
mov
mov
movsb
icebp
jno
mov
push
aad
stos
insb
jecxz
mov
repnz
ss
imul
jbe
icebp
add
push
test
jp
or
mov
je
jecxz
jnp
roll
outsb
pop
mov
test
dec
lahf
adc
mov
dec
lods
mov
xor
jns
sub
jge
xchg
dec
xor
test
pop
add
mov
movsl
push
popf
int
insb
fisubrl
jl
jge
test
sub
loop
xchg
xor
stc
fs
sti
xor
repz
ret
add
nop
add
sub
rcr
xchg
imul
dec
test
pop
lock
shrl
xchg
push
loope
cmc
test
adc
sti
jbe
int
jb
inc
pop
data16
orb
xlat
xor
cmp
jg
xor
sbb
decb
insl
mov
jae
xor
js
jne
xchg
or
sbb
enter
in
pop
cmc
pop
fwait
xchg
xchg
push
mov
mov
cmp
or
push
loope
inc
mov
xor
in
mov
cmpsb
notb
pop
dec
daa
lret
push
jge
lds
out
push
stc
xchg
sbb
mov
mov
xlat
push
rcll
mov
pop
imul
imul
xor
mov
ljmp
mov
add
stc
enter
pushf
xchg
inc
js
mov
push
push
lods
aad
mov
xor
sbb
rorb
and
test
mov
cld
xor
and
test
or
pop
rcr
fsubl
dec
xchg
into
rorl
in
pop
jg
jnp
das
xorl
cs
rcrl
imul
jg
ja
mov
and
mov
xchg
nop
andnps
xchg
mov
mov
jmp
addl
adc
int
mov
adc
pusha
xchg
stos
in
jl
es
xor
mov
or
dec
repz
push
push
jo
or
push
sti
loopne
cpuid
sahf
test
dec
mov
xchg
jge
dec
mov
mov
sti
pop
repnz
xchg
sahf
cmp
stc
pop
loope,pt
xchg
in
dec
jl
dec
ss
scas
shr
xor
stc
addl
dec
pop
inc
test
push
aaa
dec
xor
or
cmp
or
fsubrl
bound
int
lea
add
mov
ret
shrl
jae
sbb
aam
mov
adc
mov
lret
push
mov
push
sti
nop
repnz
les
jns
jmp
sub
or
mov
sbb
cmp
jp
subb
call
cmpsb
cltd
lcall
fistl
test
add
dec
aas
pop
imul
cwtl
cs
rol
insb
mov
sub
pop
aam
not
xchg
ds
mov
mov
icebp
bound
pusha
xlat
icebp
adc
lock
ret
xlat
iret
xchg
subl
inc
daa
outsl
rclb
xchg
fcmovnbe
mov
inc
imul
pop
mov
fdivr
jo
lahf
push
sti
in
dec
outsb
jecxz
jbe
mov
sbb
push
shlb
sbb
into
mov
cmpsb
add
push
jle
and
pop
scas
push
cmpsb
jl
data16
push
imul
nop
xor
dec
xor
repnz
and
add
sbb
push
cld
cmp
fsubrl
or
mov
push
add
add
mov
lcall
pop
mov
push
adc
sub
test
mov
popf
movsl
sub
mov
xor
mov
shrb
xor
inc
pop
rorl
pop
jmp
es
in
lret
jg
cltd
pop
loopne
pop
sub
inc
jbe
add
adc
enter
push
jno
xlat
and
push
stos
sbb
sub
pop
insl
mov
inc
and
inc
lea
mov
pop
xor
jmp
cltd
imul
push
lcall
mov
shrl
nop
repnz
and
fldcw
enter
sub
or
icebp
jno
fs
fwait
dec
xchg
jbe
movsb
push
cwtl
pop
jp
mov
pop
push
xor
cli
inc
incb
push
out
rcrb
stc
push
mov
xchg
mov
sbb
fwait
push
call
jne
mov
sub
inc
shl
push
jle
jns
xchg
enter
lds
mov
pushf
cltd
pop
in
lods
out
out
call
lret
mov
xchg
in
mov
adcb
mov
inc
xor
pop
movb
adc
lcall
nop
mov
inc
xor
add
inc
mov
test
jp
aad
jg
imul
mov
mov
out
mov
dec
loope
flds
rol
push
dec
xor
fs
out
sarb
in
clc
fsubr
adc
lods
pop
std
cld
mov
fldl
mov
inc
cmpsl
addr16
xchg
fwait
add
loop
sbb
stos
ret
xor
leave
sub
ret
dec
addr16
xor
sbb
sbb
adc
out
lods
push
jae
andb
mov
stos
dec
sti
jne
mov
jecxz
inc
inc
dec
sahf
shr
jg
adc
push
test
pop
clc
pop
mov
in
mov
aam
sub
insb
in
xor
les
pop
sti
jbe
adc
or
add
sub
repz
shl
inc
outsb
cltd
stos
xchg
outsb
sub
xchg
sti
or
sbb
lods
out
es
xor
into
sbb
dec
pop
jmp
out
lods
mulb
ds
sti
ljmp
add
lods
fsub
xor
fisttpll
push
jb
mov
fistl
xlat
or
push
sahf
hlt
or
out
idiv
leave
jbe
loop
orl
fidivrl
mov
dec
pop
xchg
lahf
cmpl
xor
adc
in
ret
jmp
push
inc
lcall
dec
ret
stc
mov
rcll
cld
test
pop
ss
adc
in
mov
fdivs
fiaddl
adc
dec
push
lods
add
sub
push
jns
pop
sub
dec
cld
mov
xor
hlt
repnz
imul
mov
jle
mov
mov
shll
xchg
cmpsb
inc
jo
idivl
call
mov
xor
in
popf
jge
and
inc
lahf
cmpsl
ds
test
in
rorb
cmp
cmc
cmp
dec
or
xor
xlat
mov
scas
and
aaa
mov
inc
imul
xchg
loopne
jmp
cli
push
test
stos
out
xchg
testl
outsl
sbb
adc
sub
mov
lret
int3
inc
mov
dec
bound
popf
arpl
roll
jg
pushf
sub
mov
test
mov
jg
xor
sub
push
dec
mov
aas
lcall
pop
std
sbb
pushf
pop
sub
pop
lea
dec
jge
lahf
inc
popa
mov
stos
xchg
je
jno
lock
mov
fiaddl
pop
xor
testl
pop
js
ficoms
sub
fsubrl
sbb
adc
insl
shll
repz
pusha
mov
mov
adcb
mov
cmp
leave
sub
jo
push
pusha
and
xchg
loop
das
xchg
insl
std
in
insl
jecxz
pop
data16
jns
lret
arpl
fsubs
sbb
sbb
xchg
dec
push
xor
push
scas
pop
insl
enter
dec
in
popa
cld
push
scas
or
in
jo
insb
inc
dec
and
mov
lahf
mov
pop
popf
push
pop
adc
adc
push
scas
dec
insb
into
jl
scas
pop
push
xchg
stos
push
pop
or
stos
cmp
sbb
pop
pop
xor
xor
xchg
stc
cmpsb
das
stos
and
rol
icebp
xor
roll
inc
and
cmp
xor
test
inc
mov
cld
fwait
insl
and
ficoml
lcall
aad
sbb
das
andl
sub
adc
fmuls
sbb
mov
mov
jl
stc
xchg
enter
jae
dec
pop
ja
push
cmp
popf
nop
and
mov
cli
es
pop
pop
loopne
lret
mov
add
push
mov
xor
push
divl
je
cwtl
add
mov
mov
dec
lods
or
rcrl
cwtl
sub
fnstenv
daa
cmp
das
cmp
inc
fucom
sub
and
jne
insb
iret
dec
jb
fsubl
xchg
dec
stc
push
xor
imulb
sub
cmp
sbb
test
or
jmp
push
xchg
imul
add
ret
and
xlat
lret
sbb
fs
or
cld
aam
pop
or
sub
lods
repz
jl
sahf
pop
popf
enter
out
mov
jge
mov
icebp
mov
test
arpl
push
inc
and
jge
mov
push
js
xchg
test
or
stc
mov
xchg
hlt
mov
push
lock
cltd
loop
cs
jbe
and
adc
jmp
dec
mov
roll
xlat
mov
aad
dec
bound
mov
push
rolb
inc
cmpsb
pop
pusha
fs
movsl
lock
stos
cmp
or
xor
loope
cmp
loop
xor
and
sbbl
gs
nop
jo
bound
adc
hlt
mov
out
cmpsl
pxor
ffreep
jl
out
and
push
sub
out
scas
adc
pop
xor
or
nop
pop
lods
xchg
ss
xchg
pop
mov
xor
pop
lea
adc
and
mov
dec
lea
aam
div
mov
mov
pop
mov
call
lock
sub
push
inc
ret
push
mov
lock
in
pop
add
imul
or
push
call
push
in
add
loop
adc
int3
dec
aad
test
inc
leave
xchg
jbe
pop
aad
int3
add
push
mov
loope
dec
mov
mov
lret
stos
sbb
daa
pop
lahf
lea
cmc
jp
sbb
add
dec
insb
aam
ja
jl
jp
add
mov
push
xor
or
test
das
outsb
dec
cmp
dec
or
mov
fcompl
jne
lods
stos
ret
in
pusha
inc
push
mov
fimuls
icebp
pop
inc
fcmovbe
test
lret
sarb
push
fsubr
loop
inc
dec
scas
dec
pushf
cmp
xchg
xchg
mov
push
mov
pop
xchg
mov
mov
mov
sub
mov
and
add
call
out
stc
sbb
test
inc
je
in
mov
repnz
mov
lds
insb
mov
cwtl
inc
xchg
jno
xchg
jl
and
cs
mov
pop
or
pop
or
mov
aas
popf
aas
sub
imul
std
pop
mov
pop
push
ja
shl
mov
out
or
and
ss
mov
jle
mov
mov
call
leave
stos
std
adc
jle
mov
or
adc
das
inc
and
jl,pn
push
aam
ds
in
mov
ret
xor
das
cmp
push
cmp
sti
ja
rcrl
adc
iret
repnz
rorb
inc
stc
mov
push
stos
and
clc
inc
and
or
and
xchg
popa
je
xor
iret
in
in
cmc
fwait
in
fwait
ss
imul
leave
mov
out
or
pop
cld
xor
pushf
dec
adc
mov
repz
lea
fstpl
mov
lret
xchg
fisttps
pop
fst
push
scas
dec
push
jne
out
mov
js
sbb
pop
cmp
jo
shll
xchg
js
sub
insb
or
dec
gs
int
push
push
jmp
mov
mov
and
xchg
fmull
mov
mov
out
cwtl
mov
andb
sbb
jb
pop
or
push
push
lahf
pop
pop
outsb
cld
mov
add
add
dec
mov
pop
add
sub
push
inc
std
scas
sub
orb
out
jb
popa
repnz
pop
ljmp
insb
gs
inc
jbe
out
xor
push
outsb
aas
push
mov
iret
cmovnp
sub
hlt
adc
pop
push
rorb
rcll
mov
insl
test
and
fnstcw
outsl
mov
or
mov
in
sub
aad
dec
lahf
mov
or
mov
lcall
rolb
add
test
lcall
or
mov
cmp
xor
push
out
ds
push
nop
jno
subl
mov
sub
mov
pop
and
jae
xor
push
mov
dec
push
mov
inc
inc
or
cmp
pushf
or
cmp
pushf
out
jnp
xchg
fcmovne
pusha
fisubrl
aaa
repnz
or
insb
xchg
mov
cmp
fldl
enter
loope,pn
divb
cmc
out
ret
lret
sti
pop
and
js
cli
dec
inc
into
jge
std
jne
int
jns
out
push
sarb
inc
xor
in
mov
jb
movsb
and
out
out
movsl
or
cmc
pop
dec
lock
shrl
movsb
push
ja
repnz
in
or
xchg
push
jbe
and
fdivrs
add
cld
jecxz
in
lcall
push
aam
cmp
inc
cmp
adc
addr16
dec
mov
clc
int3
dec
pop
push
jp
dec
or
inc
lods
cmp
stos
jecxz
jbe
xchg
pop
mov
lcall
push
pop
popa
in
push
inc
out
push
mov
pop
jp
cmp
pop
xor
and
orl
outsb
aaa
jg
xor
cli
shl
pop
xchg
cli
xor
xlat
mov
ljmp
pop
adc
push
fistl
rorb
inc
inc
mov
js
cs
and
js
xor
int
lret
ljmp
out
inc
inc
xchg
movsl
jae
inc
inc
mov
lods
dec
mov
xchg
in
pop
cmp
push
sub
jge
into
push
add
dec
and
pop
test
test
loope
add
lahf
mov
dec
push
mov
fnstsw
cli
mov
ds
mull
push
add
jmp
push
fs
jmp
jno
out
xor
arpl
mov
pop
mov
inc
mov
popf
fcoml
cwtl
mov
shll
out
or
xor
mov
push
in
xor
cmpsb
test
push
xlat
mov
add
pop
inc
xor
shr
cmpsb
lcall
mov
pop
pop
movsb
test
add
pop
cmpsb
inc
test
stc
mov
scas
aad
sub
stos
cld
dec
incb
jae
dec
jmp
sbb
loope
test
mov
pusha
xor
push
int3
sar
nop
sbb
adc
in
push
push
int
pop
fistl
mov
mov
mov
in
imul
shll
push
cmpsb
and
mov
xorl
ss
aad
dec
popf
sbb
and
shll
in
jmp
aas
lretw
cs
outsl
add
push
imul
inc
enter
push
or
int3
push
ret
xchg
push
pop
movsl
push
sub
jecxz
enter
sbb
push
cmp
out
lahf
shll
and
adc
inc
mov
xlat
popf
jo
cld
dec
xchg
mov
mov
fcoml
addr16
xchg
lret
scas
aam
xchg
jnp
ret
jmp
xchg
stos
jae
data16
out
out
dec
arpl
xchg
lcall
fwait
pop
adc
fdivs
dec
stos
push
mov
jae
sar
dec
cld
dec
loopne
xchg
stc
aas
stc
js
stc
or
in
sbb
cmp
arpl
fwait
inc
int3
lret
in
mov
ljmp
mov
mov
inc
jb
adc
or
add
sbb
pop
insb
out
rcr
fdivl
mov
push
mov
sub
xor
mov
lock
or
int3
mov
inc
inc
stos
jo
call
aaa
cmc
stos
pushl
add
push
sub
cwtl
sti
or
adc
lret
push
push
cld
dec
movsb
cli
and
cwtl
and
gs
xor
cmp
sub
lods
jl
inc
mov
add
push
inc
push
mov
mov
cmp
popa
mov
jbe
dec
les
sub
popf
cmp
aam
les
fsubs
loope
and
add
dec
xor
dec
sbb
test
loop
xor
sub
xor
test
call
mov
int3
cmp
pop
jge
lahf
addr16
jecxz
dec
shlb
mov
test
hlt
inc
mov
icebp
cmp
pop
inc
pop
test
xchg
mov
add
jmp
pop
icebp
clc
mov
cld
divl
or
xchg
imul
pushf
pushf
mov
push
data16
sbb
mov
jecxz
mov
jle
in
dec
lret
adc
or
outsl
aas
mov
mov
pop
push
sbb
rorl
or
sahf
je
test
inc
shlb
and
icebp
jecxz
xchg
or
fistpl
mov
xor
mov
mov
jg
xchg
push
pop
lret
popf
jg
mov
xchg
ret
mov
int3
mov
lahf
xor
rol
fstl
or
cmp
pop
sbb
cmp
sbb
dec
mov
cld
loopne
mov
jne
add
lret
test
mov
cld
insb
pop
and
je
sti
push
ficompl
mov
arpl
test
adc
sbb
divl
pop
ret
jbe
inc
jnp
dec
push
das
xchg
iret
push
jecxz
int
fsubrl
sub
sub
aam
dec
xor
pop
popa
push
nop
lock
or
cmp
push
sbb
data16
fldenv
sti
leave
pop
outsl
dec
adc
clc
add
rorb
fcmovb
mov
into
aaa
and
scas
push
js
ja
mov
or
push
loope
aad
xor
pusha
insl
cmp
dec
scas
or
ror
test
xchg
xchg
icebp
jle
inc
lds
or
inc
in
bound
inc
or
das
lock
mov
jle
ja
js
divl
mov
dec
cmp
jno
xor
std
imul
jle
push
mov
sub
ss
fbstp
loop
jg
dec
repz
js
xchg
das
stos
jg
xchg
push
xchg
inc
mov
dec
cmp
out
das
lds
ret
xor
sub
out
mov
cmp
imul
shr
cmp
mov
push
popa
inc
ja
push
inc
sbb
fdivl
test
push
fdivrl
in
test
pop
jns
cmpsb
push
lea
enter
and
jp
sbb
shrl
xchg
pop
ds
sbb
adc
inc
cmp
mov
pop
pusha
cs
lret
sahf
in
loope
mov
popf
lods
mov
pop
ud1
cmp
dec
in
xchg
jnp
add
xchg
aas
fmuls
xchg
icebp
subb
hlt
mov
leave
aas
mov
shll
movsl
enter
xchg
xor
test
fsubl
lret
lods
roll
mov
clc
int
decl
out
and
push
lods
aad
push
fildl
imul
jnp
outsb
test
por
and
movsb
lods
add
lahf
adc
sub
fmuls
ret
lock
lods
std
cmp
jmp
lcall
loopne
cmc
notl
xlat
jne
pop
inc
cmp
addr16
xchg
add
and
sbb
divb
xchg
xchg
and
pop
sub
enter
cld
sub
daa
add
mov
stc
xchg
xor
or
stc
mov
pop
lea
fiadds
fnstenv
cmp
adc
push
sti
jmp
cmp
add
in
jae
jns
popa
je
sbb
mov
test
mov
inc
sub
jmp
push
cltd
adc
scas
mov
call
jl
jmp
pop
leave
add
pop
inc
leave
push
ds
imul
jg
mov
es
in
cmp
mov
leave
icebp
mov
adc
insl
scas
stos
lea
add
ret
mov
call
jecxz
fwait
mov
data16
xchg
test
adc
test
sub
xchg
loop
iret
out
arpl
cwtl
inc
sub
data16
mov
and
insb
xchg
movsb
mov
sbb
std
and
in
mov
xor
mov
shlb
lds
sub
loop
sbb
mov
dec
ja
push
inc
sub
dec
push
sub
scas
mov
out
mov
fmuls
ret
or
test
push
ljmp
orb
and
adc
push
popf
ja
lret
out
pop
adc
mov
add
repnz
add
and
pop
mov
std
hlt
std
dec
movsl
ja
and
nop
xor
pop
dec
jmp
jne
idivl
cmpsl
mov
push
test
jae
test
mov
inc
mov
inc
outsb
test
and
sti
jae
test
call
int
xchg
sti
jmp
repz
ror
stos
lods
add
call
popa
cwtl
insb
test
mov
scas
push
hlt
clc
adc
cmc
shll
sbb
dec
sbb
ret
shll
lret
sbb
leave
cmpsb
adc
xor
ret
xchg
dec
pop
cmpsb
pop
lods
sub
movsb
push
dec
inc
in
into
rorl
push
dec
mov
cltd
or
cmp
repz
push
mov
push
pop
test
sbb
mov
rorb
xchg
add
sbb
xchg
scas
sbbb
sub
loop
mov
adc
push
mov
jno
in
lods
punpckhdq
fadds
fmull
dec
adc
cmp
and
repz
in
movsl
push
jl
dec
subl
xchg
cmp
pushl
das
add
mov
adc
jecxz
mov
mov
inc
iret
jmp
cmp
inc
push
push
repnz
dec
mov
in
pop
xor
repnz
call
subb
std
inc
lea
roll
jns
ja
aaa
loop
mov
inc
cltd
jl
ss
cld
out
add
inc
pop
push
mov
stos
adc
push
clc
jp
adc
xchg
out
push
xlat
and
out
ss
inc
jmp
popa
push
fimuls
cmpsb
inc
scas
add
mov
fadds
test
fiadds
or
aad
imul
icebp
inc
stc
aam
xchg
das
imul
ficoms
jge
hlt
aad
add
jge
adc
jo
popf
pushf
add
dec
scas
dec
or
stos
xor
inc
neg
inc
je
sti
fadds
loope
sahf
out
insl
flds
sbb
mov
and
mov
adc
or
test
xor
clc
add
pushf
cmp
add
out
ret
mov
jne
cltd
xor
hlt
lcall
cmp
inc
arpl
cmpsl
mov
repnz
cli
into
rcr
sbb
fistps
test
std
mov
xchg
flds
stos
mov
and
fld
mov
add
mov
sub
mov
xchg
inc
or
add
add
xor
loope
lret
inc
bound
xor
xor
insb
js
movsl
lds
daa
int
in
sahf
frstor
dec
cld
in
shrb
jmp
adc
or
inc
int
and
scas
leave
std
cwtl
cli
addr16
stc
cs
hlt
repz
push
mov
mov
adc
aad
cmp
and
adc
or
lods
idivl
pop
or
adc
aad
fdivr
xchg
mov
insl
add
mov
jno
cmp
pop
lea
and
seto
jno
or
sub
jne
ljmp
imul
aaa
cwtd
repnz
sub
push
aaa
movsb
and
incl
xchg
cltd
or
add
filds
xchg
call
imul
cmc
cwtl
jnp
push
sbb
in
push
sbb
xor
std
test
sub
mov
sbb
imul
fstpl
mov
mov
mov
lods
stos
cmp
enter
jb
std
sbb
jecxz
or
out
in
adc
cli
lods
push
cmpsl
ja
mov
ret
outsb
jno
out
fdivs
mov
dec
pop
ret
push
or
sbb
test
bound
mov
sbb
adc
mov
or
jno
fs
push
pop
lods
sub
push
ss
fisubrl
cmc
jbe
and
call
ret
inc
sbb
mov
insl
inc
adcb
sti
or
mov
xor
rcrl
loopne
push
mov
notl
mov
popa
pop
push
adc
lret
ret
shl
ja
nop
sbb
repnz
xlat
sahf
mov
add
inc
push
mov
ljmp
push
arpl
je
sbb
mov
mov
adc
mov
add
orl
orl
arpl
jecxz
cmp
sbb
sbb
ds
shll
xchg
sbb
cld
addr16
dec
or
pop
add
add
pop
mov
or
loope
arpl
fdivrl
add
into
push
lahf
pop
in
xchg
mov
mov
push
pusha
pop
cmpsb
divb
test
aaa
inc
lock
or
sbb
adc
lret
mov
inc
inc
inc
add
add
mov
add
and
test
xchg
cmp
pop
fwait
cmpl
scas
dec
popa
ud1
cmp
inc
dec
les
test
dec
es
aaa
mov
jb
imul
xchg
js
cs
push
push
jae
in
adc
mov
ret
push
push
leave
xchg
jo
inc
pop
fidivs
mov
ljmp
out
cltd
or
xchg
dec
dec
pop
or
in
vcvtsd2ss
and
mov
dec
xor
jns
bound
inc
cmp
mov
inc
ljmp
pop
push
dec
mov
inc
adc
sahf
les
popf
and
and
mov
cld
xchg
fcoms
sbb
push
rcrb
popf
nop
loop
lods
add
pop
inc
xor
cs
add
jle
xor
mov
enter
cmp
cld
pop
sub
scas
in
inc
push
mov
mov
sbbl
pop
bound
mov
ljmp
mov
cmp
mov
jno
test
into
and
jne
jp
and
add
pop
loope
sub
dec
or
scas
cmpsl
imul
xchg
rclb
out
test
push
and
mov
cltd
shl
loopne
jo
adc
lods
jo
enter
cmp
sub
jmp
mov
or
inc
adc
lret
lds
mov
adc
jne
pop
test
push
xchg
addr16
cmc
cld
aas
mov
cmp
shll
xor
jo
fstl
inc
icebp
daa
push
call
bound
pusha
sub
dec
test
pop
add
in
test
cmc
xchg
lret
fisubs
adc
sahf
pushf
sahf
xor
push
or
sti
xor
sti
xor
into
bnd
mov
in
out
cld
or
xor
add
repnz
inc
xchg
mov
jl
je
ds
sbb
push
rep
int3
loopne
in
jl
addr16
in
lods
imul
popa
inc
xor
lret
std
pop
push
hlt
leave
hlt
loopne
roll
jae
insb
add
push
push
xor
in
mov
push
jmp
or
sub
shll
pop
push
bnd
bound
shlb
or
mov
jno
repz
cmpsb
dec
adc
sti
cmp
call
jbe
push
jge
gs
or
loopne
dec
mov
sbb
xchg
insb
fs
inc
sbb
lcall
das
add
int3
roll
arpl
fsts
push
xchg
ds
ret
mov
jns
testb
inc
jecxz
mov
mov
or
call
push
sbb
push
movsb
sarb
inc
sub
call
negl
lock
add
inc
push
out
dec
pop
cld
sbb
fcoms
add
inc
repnz
jmpw
ret
xchg
bnd
add
repz
iret
cmp
into
adc
or
out
lahf
cmpb
shl
in
sub
or
xchg
and
aaa
push
mov
mov
int3
fidivrl
sbb
je
mov
add
repz
addr16
dec
leave
ds
mov
out
push
mov
outsl
cmpsl
dec
mov
sub
sti
mov
add
push
xchg
cwtl
not
call
xchg
shll
adc
mov
jl
lock
cmp
push
xrelease
mov
pusha
mov
jbe
int
pop
lcall
adc
int3
push
xlat
fstl
jl
pop
dec
mov
lret
es
imul
repnz
xchg
and
in
notl
jns
sbb
xchg
lahf
ret
push
lret
popa
in
sub
push
cld
cmp
pop
dec
push
pushf
or
jbe
mov
push
jecxz
add
cld
in
mov
mov
in
enter
inc
and
ljmp
cs
lods
mov
jo
sarb
subl
fiaddl
pop
pop
xorb
xor
fstpt
test
fnstcw
add
imul
movsb
push
push
and
shll
mov
inc
ss
cmp
mov
insb
xchg
lods
sbb
push
cmc
lods
mov
lret
iret
cwtl
fnstcw
sub
decl
mov
cmp
jle
mov
fwait
push
add
and
shlb
inc
dec
dec
adc
mov
pop
stos
loope
shll
or
inc
and
out
dec
adc
gs
mov
mov
jmp
dec
adc
jle
loop
xor
loopne
jae
and
mov
adc
and
test
repz
cli
mul
sahf
adc
iret
pop
jae
test
adc
cmp
mov
cmp
pop
sbb
into
es
pushf
lock
bound
add
aam
push
cmp
cmp
sbb
nop
adc
andb
insl
aam
inc
ret
mov
fucom
mov
je
dec
jo
push
fwait
mov
clc
adc
in
and
pop
jae
dec
shll
loope
test
outsl
js
bound
mov
js
outsl
in
xchg
inc
inc
mov
out
adc
or
pop
sbb
sub
jo
xchg
xchg
enter
jnp
cmp
jae
add
cltd
das
repnz
roll
not
pushf
mov
fwait
psllw
filds
iret
incl
push
lock
sbbb
sub
jno
jno
inc
jb
pushf
mov
js
cwtl
mov
and
jle
into
sti
push
cmp
test
and
sub
push
xchg
mov
push
pop
xchg
ds
hlt
lods
fstpt
pushl
jae
and
xchg
shrl
inc
arpl
xor
adc
aad
push
mov
lcall
popf
outsl
or
lahf
cmc
push
mov
mov
fcmovnb
pop
enter
lock
inc
aas
push
mov
push
mov
fidivrs
fnstenv
pop
ret
jecxz
aas
out
scas
outsl
les
mov
clc
rorl
adc
push
adcl
add
mov
xchg
mov
std
mov
rcll
gs
xchg
push
xor
negl
icebp
add
xorl
insb
bnd
and
fcomps
pop
push
ret
xchg
adc
lods
ss
adc
mov
stos
mov
js
or
rcrl
and
nop
dec
adc
lahf
cmpsl
icebp
xchg
cld
shll
js
stc
cld
push
push
xlat
es
inc
cmp
xor
repnz
add
pop
push
and
loope
cmp
clc
jmp
xchg
mov
imul
out
inc
hlt
sub
adc
dec
xor
cmp
sub
pop
cmpl
push
sub
lock
xlat
mov
pop
in
xorl
push
lods
dec
ss
xchg
sarl
adc
pop
cld
push
mov
mov
out
lods
jge
test
es
mov
dec
iret
outsl
mov
push
movsb
pop
xchg
xlat
dec
adc
cltd
popa
xchg
push
loopne
jb
push
mov
and
cmp
sbb
test
adc
pop
ja
bound
mov
sbb
inc
and
jb
mov
idivb
xor
aas
es
pop
adc
lcall
pop
sbb
cmpsl
and
add
jl
or
and
les
das
roll
outsb
sub
mov
loop
sbb
adc
fdivrs
jge
dec
xlat
or
lea
push
test
adcb
mov
inc
adc
mov
leave
popf
push
test
shl
sbb
scas
pop
imul
insl
jg
call
sti
out
sub
mov
xchg
cmp
sbb
shr
push
and
mov
loope
addr16
jnp
aam
jb
pop
scas
mov
out
xchg
imul
pop
mov
push
shll
push
push
inc
xchg
loope
cmp
flds
mov
push
mov
leave
sbb
lret
dec
adcl
adc
push
test
mov
adc
insb
cmp
fwait
out
fucomp
dec
jg
sub
roll
jno
mov
jnp
repnz
jecxz
sbb
or
cmp
mov
push
scas
fnstcw
lahf
xchg
xlat
popa
and
or
xchg
xchg
dec
stos
inc
add
ret
adc
es
push
in
jne
xchg
xor
sbbl
sbb
shll
daa
call
cwtl
cmpsl
push
fnstenv
fucomip
pop
bsf
out
dec
sub
cmp
xor
pop
jl
jbe
xorb
jbe
mov
popl
in
hlt
mov
popf
cmpsl
inc
sahf
mov
or
dec
cli
stos
jle
and
std
and
jge
or
add
xchg
scas
mov
rorb
dec
mov
push
popl
dec
aad
jne
enter
mov
or
mov
mov
mov
lock
fdivp
and
inc
sub
pop
repnz
popa
sbb
out
sub
test
xchg
lahf
jl
lea
push
mov
jne
jo
insl
in
out
sbb
and
pop
xchg
pop
cmp
lahf
fwait
pop
cmp
fmull
jno
cmc
lods
aad
pop
add
int
out
dec
imul
and
outsb
mov
mov
dec
pop
inc
xor
outsl
mov
fsubs
std
call
je
jle
cmp
inc
testb
fwait
jl
adc
xlat
aas
sub
gs
sub
in
mov
repnz
mov
jbe
das
mov
rclb
popf
adc
push
aam
movsb
sub
mov
subb
add
dec
mov
fisttpl
and
cltd
arpl
mov
std
imul
pop
imul
insl
jecxz
fistpll
andb
adc
inc
add
add
insl
movsl
cmp
in
and
mov
out
roll
jbe
push
sub
adc
sbb
enter
ret
sbb
repz
ss
in
add
lret
mov
cmp
outsl
pop
push
pop
fistpll
fstp
mov
cwtl
add
jns
inc
call
adc
inc
imul
cmc
and
and
ret
or
and
fs
addr16
push
pushf
or
aas
fwait
sub
sub
aaa
xchg
call
cmp
jb
fsubrs
sbb
add
loope
pop
dec
xor
lock
dec
push
fmull
jb
inc
push
lods
jns
jge
fidivl
jle
enter
fs
xlat
sub
sbb
psubq
scas
sbb
in
mov
sbb
jp
push
adc
xchg
fistpll
das
iret
fmuls
repz
xchg
pop
mov
push
xchg
insb
cltd
jb
mov
enter
scas
or
arpl
js
jecxz
dec
sub
das
pop
xchg
jno
cwtl
shlb
mov
sbb
dec
pop
int
decb
mov
fimuls
jg
fs
hlt
pop
andl
fists
adc
pop
xchg
fldl
mov
movsb
leave
in
xorl
inc
sarb
mov
cltd
out
popa
pop
pop
shrl
add
outsb
add
fwait
jo
ficoms
push
movsl
xlat
sbb
xor
adc
mov
mov
mov
sub
jp
push
or
push
or
sbb
jnp
cwtl
and
mov
push
sahf
or
lcall
inc
out
pop
adc
pop
push
adc
call
sub
push
fs
testb
xchg
and
cmp
xor
inc
xor
dec
imul
mov
dec
mov
jmp
loopne
addb
inc
cmp
fstpl
pop
add
lods
decb
imul
outsl
gs
mov
mov
mov
mov
sub
fistpl
ficoms
insl
inc
sub
dec
add
aad
jmp
sub
jbe
mov
test
jae
sbb
dec
stos
stc
adc
lret
xchg
imul
adcb
test
jbe
pop
lods
sbb
ja
sub
xchg
movsb
stos
or
outsb
and
xchg
mov
in
hlt
pop
test
stos
cltd
adc
sbb
dec
mov
enter
enter
adc
jbe
cmc
std
movsb
xor
ret
test
jb
and
inc
in
and
mov
xchg
inc
cmp
inc
fwait
cmpsb
mov
aad
int
sarb
sbb
shr
inc
ret
xor
mov
movsl
ja
or
mov
and
push
in
inc
dec
ss
out
xchg
xor
ja
or
bound
aas
xor
adc
or
dec
xor
pop
sbb
aaa
jo
xor
lods
dec
jmp
cmp
gs
dec
les
stc
jmp
sub
mov
xor
sbb
sti
mov
jl
jnp
in
dec
lds
inc
jle
ret
xor
push
add
enter
mov
dec
repz
sub
xchg
std
jns
sub
cmpb
dec
std
sbb
sbb
sbb
jp
jae
ds
add
fs
or
push
cmp
das
cs
js
ds
shrb
in
mov
dec
adc
push
dec
insb
xchg
addl
pusha
dec
call
addr16
leave
std
fcom
push
imul
mov
xor
or
pop
outsb
mov
pop
insl
mov
outsl
rclb
ror
stc
inc
mov
jb
cmpsb
inc
mov
test
ret
jb
nop
bound
inc
mov
and
add
jo
pushf
pushf
mov
das
imul
adc
inc
add
jmp
xorb
cmp
int3
bswap
arpl
xchg
fdivr
jecxz
xor
dec
ss
or
mov
xchg
mov
daa
les
or
pusha
in
outsl
push
leave
xchg
mov
xor
add
aam
add
test
jnp
lea
pop
jbe
jo
dec
sub
cmpsb
mov
cwtl
popa
ljmp
lock
sub
push
push
mov
mov
or
xchg
lea
mov
test
into
icebp
sbb
and
mov
test
pop
jl
daa
rcll
out
push
or
mov
nop
cmp
out
mov
addr16
jo
out
shll
movsl
cli
bound
decb
dec
or
out
adcl
ret
and
pop
pop
mov
mov
movsl
add
pop
push
mov
push
stos
int3
xor
push
aaa
dec
imul
inc
dec
mov
ja
cld
cmpl
lods
les
ret
pushfw
pop
inc
mov
int
stos
les
enter
sub
lods
xchg
aad
jecxz
sbb
or
mov
dec
inc
inc
or
sarb
arpl
leave
imul
cmpsl
daa
push
mov
cld
fs
push
xchg
shrb
das
rcl
inc
or
std
out
pop
aad
cmc
add
cmp
add
std
es
jbe
push
stos
cmp
cmp
test
lods
clc
push
pop
int
in
enter
loopne
xor
pusha
cmp
jne
inc
ds
popa
mov
add
fcmove
mov
mov
fdivl
gs
stos
or
jle
scas
sbb
jge
ret
add
mov
or
sub
pushl
out
rol
inc
inc
ss
jecxz
cmpsl
dec
rcr
xchg
or
sbb
push
aad
jmp
mov
push
lods
adc
lea
test
out
mov
into
test
bound
stc
ds
inc
mov
data16
adc
out
out
fisttpll
fldl2e
xor
pop
popf
add
sbb
push
push
iret
or
fcomps
sub
cmp
sbb
fwait
push
test
xor
scas
xchg
xchg
mov
add
stos
rclb
test
dec
dec
xor
pusha
jae
in
addl
xor
xor
test
jns
rcrl
mov
pop
xor
movsl
sar
mov
sarb
test
dec
insl
cmp
push
or
fnsave
sbb
sbb
dec
in
mov
loop
mov
bnd
inc
xor
sub
test
sahf
shlb
push
arpl
nop
data16
and
insb
loopne
inc
ja
inc
push
add
dec
sub
test
mov
sahf
sbb
mov
loop
test
jo
fcomip
sbb
push
add
or
xchg
lret
jns
jle
push
cltd
mov
push
ret
sub
mov
pushf
sbb
xchg
xchg
pop
mov
hlt
add
jo
andb
sbb
pop
sub
in
xor
mov
mov
sbb
stos
jno
push
xor
imul
das
xchg
test
pop
in
in
pop
scas
pop
xor
ror
js
je
add
fsubrs
pop
adc
fsubl
sbbl
popf
sbb
notb
sub
iret
inc
mov
aad
es
or
stc
repnz
mov
btrl
lahf
cmp
mov
and
xor
cltd
push
fidivs
sub
pop
xor
pusha
cmp
dec
popf
adc
cld
and
inc
notl
pop
leave
push
or
sarb
test
out
pop
insb
stc
sti
mov
pop
out
cmpsb
push
cmp
sbb
mov
mov
xor
mov
test
cmp
mov
mov
push
cmc
js
xor
out
data16
mov
cli
cli
mov
xchg
outsl
xchg
mov
sub
mov
sbb
test
mov
adc
cli
push
in
mov
adc
inc
leave
push
and
sarl
jns
jne
iret
in
jns
inc
sti
mov
je
jae
aaa
push
mov
mov
stc
loopne
mov
mov
leave
clc
or
or
ss
sbb
cld
stos
cs
xchg
test
pushf
insl
adc
scas
out
xchg
adc
sub
inc
push
pop
data16
sbb
lea
sub
inc
xchg
adc
cmp
and
ljmp
data16
inc
jnp
jmp
mov
cwtl
lcall
mov
in
dec
rcrb
mov
pop
push
and
int
inc
dec
pop
scas
movsl
jbe
loopne
inc
mov
adc
dec
mov
xor
enter
adc
roll
or
jno
sub
popl
xchg
jns
stos
lret
sbb
jno
inc
bound
sar
lahf
sbb
arpl
sbb
jmp
xor
nop
jg
lods
mov
nop
out
cmp
push
mov
sbb
cmpsb
xchg
fcoms
aas
add
jl
pop
jb
repz
popa
iret
cmpl
dec
sbb
icebp
cmpsb
pop
pop
in
mov
lcall
dec
add
sbb
leave
outsl
sub
aam
negb
mov
std
cmp
into
pop
bnd
inc
pop
iret
sarb
xchg
data16
and
orl
mov
xchg
loop
xchg
adc
cmp
test
adc
hlt
inc
dec
sbb
idiv
popf
xchg
xor
jp
jb
fstps
idivb
and
fwait
cmp
or
in
aas
lds
jg
mov
xchg
out
pop
lret
and
inc
lods
push
loop
xor
mov
dec
aas
nop
sahf
pop
mov
adc
test
fsubp
shrb
mov
mov
adc
pop
into
add
mov
sbb
xchg
push
cmp
int3
push
inc
cmp
enter
jns
inc
aaa
shr
fdiv
sub
or
mov
add
and
sbb
adc
fldcw
add
mov
dec
iret
lods
fsub
cli
arpl
mov
leave
xchg
insl
xchg
mov
and
test
enter
mov
mov
movsl
stos
inc
ret
arpl
push
es
cmp
mov
adc
pop
cld
xchg
jb
lds
add
stos
cmpsl
lahf
popf
scas
lret
or
cmp
fisubs
mov
sbb
lea
and
add
pop
sbb
mov
push
mov
xor
pop
rcll
pop
outsb
mov
shll
rorb
xlat
add
mov
xor
les
ss
das
ja
hlt
das
shll
call
add
jmp
pop
clc
inc
mov
xor
mov
popa
js
js
add
mov
in
jns
dec
xchg
scas
mov
push
repnz
sti
xchg
dec
or
pop
icebp
loopne
int
cmp
adc
int3
mov
mov
arpl
mov
and
inc
outsl
in
mov
ljmp
arpl
mov
jno
jb
ja
mov
or
addr16
repz
bnd
pop
mov
mov
add
lret
inc
leave
dec
sbb
ds
pop
add
test
repz
stos
xor
fsubrl
mov
jnp
cmc
outsl
mov
sbb
mov
scas
push
les
xor
mov
iret
mov
mov
inc
sub
scas
pushf
push
mov
inc
loopne
dec
rcl
xor
call
push
pop
xor
insw
aam
fs
lods
outsb
repz
dec
fdiv
js
sbb
test
jmp
push
fucomi
and
push
add
jp
stos
jbe
and
jg
clc
lods
notl
pushf
xor
lods
cmp
shrl
inc
xchg
mov
mov
out
add
xor
cmp
or
repz
mov
push
mov
mov
cld
out
fistl
mov
and
mov
js
sbbl
test
sub
jb
xlat
mov
and
aas
adc
cmpl
sub
popa
out
mov
push
fiadds
cmpsl
adc
mov
mov
ja
jbe
push
popa
hlt
mov
movlps
xor
movsl
rorb
inc
xlat
sar
movsb
ret
sbb
sbb
sbb
dec
add
xchg
js
jne
dec
jmp
mov
and
xlat
popf
cmp
cmp
fiadds
mull
movsl
lahf
jmp
clc
pop
das
fadds
lret
fldt
into
mov
mov
mov
xor
sub
dec
mov
push
or
sti
enter
inc
add
hlt
xchg
lret
pusha
jns
mov
mov
popa
imul
jb
loop
adc
hlt
jnp
outsb
pop
xor
out
jo
xchg
push
pop
jae
xlat
test
call
pop
roll
lret
mov
pmaxsw
nop
xchg
addr16
jmp
and
and
hlt
and
sub
aas
xor
loopne
out
sar
fimuls
xor
aaa
lds
push
or
fs
mov
mov
push
test
dec
add
adc
mov
ljmp
cs
xor
enter
icebp
leave
cmp
jl
adc
outsb
rcll
mov
or
adc
rolb
fbstp
rclb
mov
orl
and
fnsave
lcall
add
sar
jnp
ret
mov
mov
cltd
test
and
ds
pop
add
cmc
lret
mov
aas
loopne
inc
inc
pop
inc
inc
adc
sub
xor
ret
jno
in
imul
jp
mov
sub
popf
xchg
push
rol
xchg
enter
aas
dec
icebp
faddl
icebp
cmc
mov
sub
pop
mov
ja
leave
lods
pop
cmp
xchg
fsub
and
loop
inc
mov
cwtl
daa
dec
and
std
push
flds
jne
insb
pop
xor
scas
xor
std
sub
mov
icebp
mov
pop
dec
jl
xor
icebp
fdivs
pop
outsl
fildll
ja
pushf
jb
loop
inc
mov
and
fs
ror
and
imul
cmp
sbb
cmp
aad
jp
clc
push
cmp
adc
pop
test
inc
repz
dec
jge
sub
dec
cmp
repz
repnz
add
cmp
pop
dec
test
enter
push
repz
jne
js
in
pop
adc
clc
adc
daa
xor
xchg
stc
out
sub
rclb
dec
out
pop
cli
imul
mov
or
ret
insl
adc
push
or
add
fadds
dec
fs
dec
adc
imul
call
xchg
arpl
xchg
movsl
sbb
push
les
daa
push
mov
inc
jg
lock
dec
inc
out
jb
cld
repnz
mov
inc
mov
pop
pop
xor
cltd
xlat
out
out
lret
out
enter
xor
cmp
insl
dec
jnp
enter
jbe
dec
test
insl
imull
fsts
ja
sub
jle
push
xlat
push
xchg
mov
cmp
aam
imull
fstpt
andl
stc
cmpsb
in
xchg
adcl
add
push
sbb
jns
pushf
inc
daa
xchg
add
xchg
test
push
cwtl
pop
mov
mov
aad
add
lret
pop
cmc
cwtl
ret
int
subl
je
outsl
fmull
dec
test
mov
fwait
push
mov
mov
scas
dec
popf
aaa
dec
mov
xchg
mov
mov
jmp
inc
or
push
mov
or
ss
lods
lret
call
rolb
ret
test
xor
aaa
into
lret
out
add
movsb
mov
push
mov
adc
xchg
pop
ret
mov
jnp
dec
or
sbb
lds
js
inc
xor
int
xchg
sub
clc
sarb
cmovg
std
xor
pop
pop
push
adc
mov
iret
pop
mov
push
js
inc
dec
jno
mov
aas
test
lds
adc
pop
ja
imul
jb
mov
leave
mov
xchg
mov
bound
insl
mov
push
sbb
aaa
fsubrp
loope
leave
xchg
mov
std
hlt
cmp
mov
jp
ja
adc
lods
scas
insl
mov
or
cmp
mov
sbb
test
pop
shl
movsl
inc
ret
mov
push
fildll
dec
jmp
fwait
xor
fisttps
daa
call
jb
cmp
outsl
es
cltd
ljmp
mov
cs
jno
pop
pop
clc
ret
add
pop
sub
stos
fsubs
dec
cmp
inc
jg
js
sub
das
inc
mov
out
stc
inc
xor
mov
jg
pushf
ja
out
xchg
jl
mov
sub
sbb
add
dec
call
cmp
ds
push
cmp
fisttps
jp
rol
mov
loope
aam
adc
cmpsb
pushf
or
insb
popf
lret
cmp
mulb
jp
mov
xchg
gs
pop
sbb
sti
iret
sub
add
mov
or
rcrl
outsl
mov
mov
mov
dec
sahf
sahf
mov
xchg
adc
dec
rcrl
cmp
mov
pop
lods
add
mov
push
leave
sub
imul
outsl
cmp
in
outsl
in
pop
cwtl
adc
das
push
enter
mov
lock
cmp
xchg
adc
dec
sbb
jnp
stos
pop
inc
sub
sbb
add
mov
jmp
int
mov
cld
cs
test
cmpsl
shll
pushf
lret
cmp
arpl
pop
addr16
xor
nop
and
dec
test
aam
pushf
je
or
js
dec
sub
cmp
mov
mov
lret
in
mov
or
mov
pusha
outsb
xchg
sbb
pop
mov
lret
cmp
lahf
pop
xor
mov
xorl
jmp
jbe
push
adc
sub
lods
pop
push
sub
and
imul
cmpsl
dec
xchg
arpl
cmp
xchg
hlt
sub
or
xchg
jl
xchg
jmp
fwait
mov
push
lds
and
mov
add
test
inc
int3
fwait
pop
push
rol
stc
xchg
xchg
pop
cmp
or
adc
jne
sbb
or
sbb
les
inc
mov
mov
insb
sbbl
lret
lods
ret
fstps
pop
cmp
nop
push
mov
icebp
outsb
adc
push
rcrl
inc
addr16
cltd
jg
movsb
outsl
xchg
cmp
pop
imul
mov
sbb
xchg
pop
add
out
inc
mov
push
mov
jo
adc
mov
fsubs
sbb
add
int3
pushf
push
bound
lods
cmc
push
aas
rcrl
cmp
dec
lods
test
dec
bound
xchg
mov
cltd
xchg
mov
sar
push
jge
jge
mov
int
jbe
adc
pop
jne
dec
out
ja
push
loop
call
xchg
imul
jp
lret
cmpsl
push
and
test
xor
aad
inc
fcompl
mov
adc
pop
frstor
mov
pop
test
inc
sub
cs
mov
ret
sub
or
push
stos
mov
sub
or
or
cmp
in
loop
fnstenv
add
inc
xchg
xor
sbb
push
inc
adc
mov
insb
data16
pop
cmc
xchg
add
fmull
push
inc
xchg
inc
mov
pop
mov
push
push
adc
pop
sbb
loope
cmp
pop
addb
outsl
ret
cmc
repz
icebp
sbb
pop
push
js
frstor
cmp
cmp
push
shll
hlt
push
push
ja
xchg
cmp
push
add
pushf
in
pop
sbb
mov
inc
shrl
sbb
leave
addl
add
mov
pop
mov
lock
repz
and
push
pop
andl
mov
icebp
pop
dec
add
cld
xor
ficomps
jo
mov
or
lahf
xchg
aaa
or
popa
xchg
roll
push
leave
movsl
test
jno
pop
pop
and
xchg
ja
xor
insl
pop
mov
call
pop
pop
mov
clc
mov
aas
daa
ficompl
jb
jp
xchg
rcrl
cwtl
filds
push
int
inc
ljmp
out
mov
pop
lock
xor
addr16
popa
inc
pop
mov
adc
xor
add
jo
insl
jmp
je
insb
in
add
jne
dec
in
cmc
mov
out
outsb
pxor
stos
fdivrl
pop
push
imul
pop
stos
jecxz
cwtl
div
aam
icebp
cmp
pop
ret
clc
nop
adc
in
xchg
lods
lret
push
xlat
aad
push
popl
pop
inc
pop
shll
ret
movsl
je
mov
mov
repz
pop
aad
fisttpll
push
xchg
cld
jecxz
add
inc
je
mov
xchg
adc
inc
mov
fnsave
xchg
jb
mov
xchg
hlt
and
aaa
jnp
or
ljmp
xchg
ljmp
cli
cmc
aaa
sub
xor
pushf
dec
mov
daa
pop
add
mov
pop
jle
xchg
rol
leave
mov
or
xor
jmp
pusha
out
loopne
xlat
xchg
loopne
jno
inc
or
jp
pop
inc
sti
lds
dec
js
cmp
add
sahf
test
xchg
mov
xchg
cmp
xor
and
stc
jle
ja
in
leave
and
and
cmpsb
les
addb
add
adc
fcmovb
aam
dec
fisubs
dec
xor
aad
jp
xor
xchg
sti
pop
xorl
mov
pushf
push
mov
lahf
push
adc
mov
cmp
inc
mov
dec
test
xor
lock
sub
mov
nop
mov
pop
divb
daa
push
shr
mov
xor
sarw
loopne
push
jno
jne
jne
pop
push
call
sti
clc
push
mov
bound
call
pop
sti
push
jmp
push
inc
jb
inc
dec
cs
mov
push
ja
push
inc
sbb
jbe
ds
dec
pop
xor
inc
push
mov
pop
ret
call
in
xor
sbbl
into
in
lret
into
or
mov
shrl
lea
mov
pop
int
jae
jle
outsb
out
xor
arpl
add
rorb
push
leave
movsl
stos
jle
mov
scas
fstpt
sub
mov
fwait
cmp
clc
rclb
adc
daa
sub
xor
outsl
out
int
mov
mov
enter
sub
shr
jge
daa
ret
jle
pop
cmp
mov
add
stc
sbb
xor
stc
call
dec
jnp
sbb
mov
out
jecxz
jg
shll
lds
pop
insl
xor
cs
xchg
fisubl
mov
inc
pop
inc
xchg
rorb
pushf
ret
stos
in
mov
fisttpll
mov
pop
mov
rcl
cmovp
xchg
jge
sbb
dec
inc
add
push
push
es
daa
orl
lahf
jbe
aas
mov
cmc
xor
dec
xchg
inc
mov
lahf
cld
xchg
jno
adc
sahf
sarb
lcall
dec
fs
mov
adc
and
pop
test
insb
add
adc
mov
je
push
sbb
add
and
jge
and
pop
xchg
add
dec
mov
mov
mov
add
int3
inc
xor
cmp
and
movsl
cmc
mov
jb
or
in
xor
arpl
mov
ja
sti
aad
or
cmp
jp
xor
movsl
adc
mov
xor
shrb
and
nop
loopne
mov
rol
push
jge
adc
test
pop
loopne
adc
ja
sahf
fildll
addl
stos
arpl
in
lret
or
das
aaa
mov
mov
repnz
call
pop
test
mov
rcrl
sbbl
sub
out
rdpmc
cmc
push
mov
xchg
mov
shlb
js
push
dec
inc
mov
or
lods
push
ss
std
mov
jnp
cmp
lret
adc
test
push
mov
test
sti
nop
push
imul
sbb
pop
rcl
ficoml
mov
and
out
xchg
sahf
mov
popa
int3
mov
jmp
mov
and
xchg
orl
jle
movsb
fildll
jns
jo
sbb
and
lods
test
sub
fisttpl
test
and
jp
pop
and
mov
aad
call
pop
or
xchg
xchg
jb
mov
les
dec
nop
push
cmp
mov
push
in
mov
cmp
xor
bnd
mov
mov
ficoms
stc
jno
push
adc
aaa
cmp
xchg
jge
cwtl
cmp
jo
repz
cmpl
popa
addr16
push
mov
subb
scas
pop
push
scas
push
and
inc
adc
jb
add
sub
nop
aas
repnz
loop
out
mov
jns
insb
xorl
adc
cmc
incb
fnstsw
pushf
scas
add
xor
push
or
push
xor
sub
jg
lcall
or
sub
test
cmp
mov
shl
or
jne
add
out
xlat
cmc
and
jno
push
popf
test
into
ljmp
decl
dec
sbb
xchg
jbe
cwtl
mov
les
adc
pop
sbb
mov
sahf
mov
bound
xor
lret
jno
add
dec
inc
das
adc
lds
loope
xchg
cmpsl
mov
outsb
icebp
xchg
ret
xchg
xor
popa
dec
ja
jmp
out
jmp
jecxz
lcall
addr16
jg
adc
xchg
out
in
inc
add
xchg
lea
xchg
dec
aad
stos
mov
lret
mov
xor
mov
lock
mov
sarb
popf
test
inc
scas
sbb
mov
fucompp
push
iret
mov
or
lea
int
fwait
push
cmpsb
loopne
arpl
ds
mov
add
jmp
or
lea
inc
and
fstpt
mov
sbb
mov
scas
aaa
arpl
add
jb
jmp
cmp
pop
push
jae
xlat
adc
jg
push
int
and
or
lock
frstor
lahf
call
push
test
negl
xorl
mov
adc
or
clc
ds
lcall
pop
aam
out
lcall
insl
pop
sbb
ljmp
cmc
std
rorl
mov
scas
push
cltd
push
ja
jbe
fcos
xchg
sbb
scas
mov
in
lret
testl
pop
dec
dec
cmpsb
ja
gs
test
fisttps
faddl
add
mov
add
or
shll
inc
mov
mov
aas
xor
mov
in
movsl
outsb
fwait
add
jge
daa
sahf
aaa
and
out
jnp
lock
cmp
es
mov
sub
cmovae
stos
out
gs
test
les
mov
cmp
mov
outsb
adc
fdivs
fcmovbe
dec
sub
mov
add
pop
rcl
push
es
inc
adc
cmpsb
scas
sub
aas
imul
mov
pop
lcall
and
cmpsb
fmuls
inc
popa
pop
xor
add
jge
inc
data16
cmp
mov
xchg
or
sbb
pushf
and
mov
mov
fwait
xchg
into
adc
mov
testl
add
pop
lods
nop
fisubrs
arpl
and
push
fwait
push
test
push
cmp
cmpb
jo
push
sbb
pop
in
test
out
or
into
and
test
pop
daa
shlb
ss
push
pop
sbb
add
cwtl
adc
fdivrl
ffree
imul
gs
clc
mov
out
xchg
fwait
lock
sahf
adc
lock
add
inc
lea
ja
push
hlt
cmc
mov
inc
sbbl
incl
dec
subl
pusha
xor
pop
xchg
inc
out
cmp
mov
jge
dec
lods
rcrb
mov
inc
shll
pop
cmp
jmp
xor
push
or
pushf
dec
mov
inc
mov
mov
sbb
inc
mov
push
test
dec
and
sub
pextrw
push
cmp
xchg
xor
mov
mov
arpl
pusha
loop
ficoml
ja
sub
aam
outsb
out
stc
frstor
sbb
das
dec
shlb
sti
daa
cltd
mov
xor
xor
outsb
pop
lock
mov
jo
and
shlb
test
pop
jns
pop
sub
jae
shlb
sbb
add
orb
mov
repz
es
out
push
lock
jp
adc
testl
mov
inc
pop
stc
in
sbb
cmp
adc
adc
mov
or
test
push
movsl
mov
sbb
ficoms
jb
sti
outsl
scas
add
xor
je
cmc
dec
sub
aam
call
jns
mov
pop
pushf
ror
add
push
or
dec
rorl
fwait
add
add
dec
adc
and
adc
inc
in
aaa
or
xor
shr
mov
dec
mov
jne
lcall
cmp
jb
mov
push
loop
in
mov
movl
xchg
pop
sbb
stc
jp
add
mov
imul
mov
xor
data16
cmp
mov
cmp
fldt
ret
cmp
cwtl
out
int3
int
lea
and
pop
fcmovb
mov
mov
inc
add
rolb
cld
adc
pop
cmp
shl
dec
pop
xor
jo
mov
sub
std
and
sarl
push
mov
dec
adc
mov
negb
ret
push
test
pop
sbb
addl
inc
push
shll
shl
loope
mov
lret
fldcw
jo
jl
pop
sub
dec
mov
insb
and
mov
mov
in
pusha
popf
fdivrl
idivb
jl
cld
pop
leave
cmpsl
push
outsb
in
and
jnp
fcmovb
sub
xchg
cmp
rol
sbb
mul
orb
fdivl
cmp
lock
scas
xor
imul
add
jo
mov
loop
movsb
pop
pusha
bnd
addr16
stos
sahf
daa
xchg
std
adc
outsb
fwait
ret
push
in
inc
aad
nop
movsb
pop
mov
xor
stc
sub
inc
pop
adcb
mov
outsl
hlt
in
xor
xchg
cs
in
mov
xchg
out
and
inc
fdiv
jno
jg
les
scas
int
fdivl
xlat
rolb
dec
or
pop
jg
fisttps
jecxz
int
les
adcl
add
or
in
push
mov
popl
push
gs
sti
sub
mov
pop
adc
xor
andb
mov
inc
inc
cmpsb
sbb
cmp
cmc
jno
sbb
pop
mov
or
dec
mov
cltd
mov
adc
xor
into
adc
adc
adcb
lds
bound
jns
pop
call
lods
das
shll
jmp
add
push
sbb
fsts
imul
test
pop
push
in
data16
cmc
or
cmp
shlb
pop
mov
mov
aad
mov
inc
inc
loop
rclb
add
add
movsb
push
mov
dec
ret
scas
xor
mov
jl
insb
mov
cmc
fcmovnu
jl
popf
mov
jno
rcrb
imul
loope
or
sub
xor
mov
das
dec
call
call
aam
sbb
mov
sub
outsb
mov
mov
repz
daa
jbe
pop
arpl
int
xchg
insl
pop
push
xor
out
sbb
and
mov
shrl
cwtl
mov
in
notl
inc
imul
in
adc
add
inc
repnz
push
pop
imul
and
adc
mov
ret
inc
iret
lea
out
pusha
stos
nop
std
mov
cli
pop
repz
mov
data16
sub
jle
dec
out
pop
xor
mov
push
mov
and
test
lahf
test
jge
add
inc
sub
incl
pop
xor
mov
inc
shlb
xor
test
fidivs
mov
adc
cmp
ret
cmpsb
and
flds
fs
test
push
add
xchg
jle
cltd
pushf
scas
imul
lods
push
jle
sub
jne
mov
and
jne
or
cmc
adc
rclb
ds
dec
inc
adc
int3
cmc
cmpsb
inc
jecxz
mulb
dec
mov
lods
push
mov
test
and
fsubrs
add
sub
adc
shll
shll
movsl
sub
cltd
xchg
cwtl
cmp
mov
lcall
pop
bound
fldcw
jae
adc
sub
jb
adc
mov
stos
xor
dec
dec
pop
or
out
push
lret
sub
pusha
pusha
push
sub
mov
adc
pop
xchg
cmp
sti
mov
pop
jmp
sahf
xchg
insl
mov
mov
popa
cmp
jecxz
or
in
imul
popa
jae
mov
jnp
test
mov
test
out
adc
add
mov
xorb
out
xor
shlb
stc
daa
std
push
xchg
rcrb
test
dec
cmp
sahf
pop
imull
mov
pushf
jg
popl
mov
and
ja
lea
xlat
push
push
xchg
pop
fstpt
movsl
mov
and
repz
pop
add
push
insb
inc
imull
out
lret
sahf
and
mov
mov
out
pop
pop
or
pop
jbe
or
loopne
add
loopne
xchg
add
cmp
fadd
mov
dec
scas
movsl
fidivs
fmull
in
adc
xor
jecxz
ror
adc
sbbb
and
lods
dec
mov
xor
jb
rcll
mov
insl
sbb
popa
subb
fisubrl
negb
mov
test
ret
adc
push
sbbl
imul
adc
out
adc
push
mov
add
add
pop
pop
cmpsl
sub
dec
sbbl
out
cld
cli
mov
repnz
xchg
push
add
inc
cs
scas
and
ret
jmp
in
add
adc
outsl
out
ja
mov
jae
pop
iret
jge
int
icebp
out
push
sub
pop
cmpl
scas
hlt
andl
out
ret
mov
xchg
aaa
sub
push
pushf
mov
push
nop
add
add
arpl
inc
dec
jmp
enter
fdivl
sub
movsl
mov
cmpsl
add
mov
jo
and
mov
adc
movsl
divb
mov
sbb
sbb
push
icebp
cwtl
xchg
out
out
inc
jl
in
mov
pusha
pop
sub
cmp
sbb
in
jecxz
popf
mov
out
das
pop
loop
clc
jo
sahf
jbe
scas
mov
sarl
xchg
push
xchg
movsb
jb
scas
dec
adc
cmp
ljmp
bound
xchg
std
xlat
into
xchg
fstpt
mov
pop
dec
dec
aad
push
punpckhdq
cmp
fldt
ds
scas
cmp
shlb
jmp
jge
fistps
jl
xchg
or
mov
stos
add
nop
repnz
outsb
arpl
gs
icebp
inc
cmc
sti
cmp
xor
loopne
mov
in
aas
ficoml
xlat
sub
add
mov
dec
xchg
sub
lods
jae
fisubl
mov
push
repz
adc
mov
xor
mov
add
pop
jecxz
mov
rcll
ljmp
cwtl
sub
jb
add
test
dec
jle
enter
add
sub
dec
lds
out
adc
jb
mov
jl
add
pop
mov
and
xchg
inc
pop
xor
lahf
cwtl
adc
aad
insl
je
nop
in
es
addb
pop
addl
out
aas
push
cmpb
xchg
shl
in
sub
popf
faddl
idivl
enter
and
sub
rorb
sbb
or
repnz
or
fs
jae
xor
clc
sub
sbb
imul
push
outsb
add
in
add
xchg
lret
ficompl
in
fcomps
push
dec
or
daa
mov
clc
jge
mov
inc
xor
xor
add
inc
sbbb
push
cmp
adc
adc
push
xor
es
cmp
sub
xchg
arpl
pop
mov
adc
mov
es
mov
dec
ss
pop
sbb
loop
ret
add
rolb
and
pop
push
dec
lret
sti
cwtl
arpl
inc
cmp
sub
jbe
lods
or
sbb
inc
xchg
icebp
jo
lret
push
mov
call
pop
sub
test
xchg
lret
xor
insb
push
into
daa
fwait
inc
leave
lret
cmpsl
jg
iret
add
and
rolb
es
mov
adc
sbb
xchg
xor
fstl
int
imul
int3
imul
adc
leave
imul
cmp
imul
pop
pop
fs
mov
and
add
mov
mov
inc
push
xchg
xor
push
xchg
rol
cltd
cmp
push
sbb
or
and
jl
out
xor
and
jge
jne
ss
daa
out
jg
fs
sbbb
ret
dec
lock
cmp
mov
push
inc
pop
push
push
sbb
dec
push
movsb
mov
addr16
cli
sub
push
and
mov
pop
fs
fcomi
adc
xchg
cwtl
xor
mov
pop
pushf
fnstenv
mov
jp
std
sub
lds
insl
or
test
test
sbb
ja
push
sub
ret
mov
push
jb
mov
sub
sub
enter
out
adc
mov
cmpl
cmp
popa
jl
jmp
dec
mov
inc
cmp
int3
push
or
shlb
imul
out
scas
jecxz
xrelease
push
lret
pusha
ret
mov
cmp
stc
adc
jo
lahf
inc
movsl
nop
adc
pop
arpl
pop
int
pop
das
xor
cmp
aad
xchg
mov
bswap
pop
mov
sbb
lret
pop
xchg
lock
inc
ljmp
lcall
sbb
pop
in
jae
test
lcall
cli
push
dec
inc
dec
sub
ss
xchg
adc
icebp
lcall
mov
lods
lret
adc
rclb
jp
fistl
das
and
nop
dec
cmp
jno
mov
push
sub
or
cld
incl
fldt
mov
ja
stos
cmp
xchg
popa
fadds
popa
inc
stos
jl
add
pushl
sub
dec
sbb
xor
cli
rclb
inc
test
cwtl
mov
sub
cld
dec
scas
cmc
cwtl
sub
int
fs
cmc
inc
pop
cmp
adc
xchg
dec
das
test
pop
mov
xor
ficompl
xor
mov
xor
mull
ret
cmpsl
xchg
mov
or
xlat
sub
insl
lea
mov
sub
sub
or
insl
xchg
mov
lahf
inc
test
mov
pop
dec
inc
sbb
and
stos
add
daa
imul
xchg
addr16
cmp
fbstp
cmp
mov
inc
push
lds
out
pop
lods
push
jns
mov
in
sbb
hlt
jp
mov
push
je
pop
fbstp
sbbb
xchg
jmp
jo,pt
sub
inc
leave
divb
mov
mov
jp
subb
sbb
and
out
and
add
and
xor
fistps
lret
out
cld
sub
adc
js
jo
or
inc
jns
pop
jb
outsl
mov
out
ret
push
inc
dec
push
cld
jp
xchg
ljmp
ss
int
sbb
or
inc
das
addr16
dec
repnz
add
psubsb
cltd
pop
mov
sti
insl
lahf
push
and
lret
pop
sbb
jns
sbb
fs
mov
jp
cs
iret
repnz
lods
lret
mov
popf
sbb
sub
xchg
inc
fsubrs
bnd
mov
cltd
sti
pop
jle
lret
mov
adc
stos
mov
xchg
cwtl
xchg
mov
push
cmp
adc
leave
jle
sub
clc
push
xchg
das
fdivl
lea
in
or
add
or
lods
fwait
lahf
cmp
adc
xor
xchg
daa
jle
push
cmp
adc
loop
mov
sub
cmp
add
or
dec
push
sbb
add
mov
or
pop
popf
push
inc
ss
test
stos
mov
scas
sti
jo
add
addr16
movsl
ja
in
int
out
in
outsl
and
stos
inc
scas
inc
lods
or
jbe
cmpsb
dec
dec
mov
clc
inc
mov
pop
stos
jbe
add
movsl
aas
mov
xor
and
cmp
or
and
aam
dec
call
outsb
add
inc
xor
push
inc
inc
outsb
xchg
das
test
lret
jp
sbb
mov
cltd
fnstcw
sub
jbe
xorb
xchg
jae
cmp
loope
in
adc
jnp
icebp
outsb
cmp
inc
fs
fwait
xor
rorl
fsubrp
int3
ja
or
pushf
in
dec
xchg
mov
mov
xor
adc
cmpsb
outsb
iret
xchg
jno
insb
sbb
bound
push
stc
divb
add
pop
sbbb
adc
shr
je
push
ja
adc
or
aaa
mov
cmp
cmp
mov
cmp
das
sbb
cmp
test
jle
icebp
mov
jl
lods
aaa
push
inc
xchg
rcl
push
cmp
fs
dec
fisubs
test
icebp
mov
gs
test
dec
arpl
sbb
rolb
push
cli
shrb
push
or
lret
in
xchg
cmc
fld
and
mov
inc
mov
movsl
fisttps
pop
dec
das
mov
jp
mov
mov
subb
sbb
mov
mov
or
xor
imul
xor
sbb
mov
jae
push
mov
icebp
cmp
int3
adc
add
int
loop
iret
and
adc
shll
imul
or
test
jl
data16
cmpsb
xchg
add
xchg
xlat
mov
rcl
pop
and
jge
add
cmp
and
lock
test
les
loope
mov
out
lock
out
push
out
xchg
mov
movsb
lods
sub
call
mov
mov
lret
fsubr
imull
insb
jbe
mov
imul
pop
clc
repnz
dec
lahf
rcr
cmp
and
imul
pushf
adcl
bound
add
loopne
jnp
shr
sbb
pusha
cmp
outsl
and
inc
sub
xchg
dec
movsb
pop
aaa
jmp
in
lock
push
scas
lock
test
sub
jno
jge
inc
sub
cwtl
ret
ss
mov
into
pop
cmp
add
push
mov
inc
mov
in
and
sub
cmp
loope
sbb
shll
adc
hlt
mov
idivb
jo
mov
dec
cmp
jecxz
cmp
push
test
daa
sahf
pop
mov
decl
aaa
xlat
inc
arpl
addl
xchg
or
dec
loopne
jns
xchg
pop
sahf
rol
icebp
jge
arpl
in
test
frstor
mov
mov
int3
out
jmp
xor
ficompl
push
mov
jb
fnstsw
rcrb
incl
xor
dec
js
ja
xor
inc
add
ret
in
xchg
mov
pop
jno
adc
scas
ljmp
pop
jnp
mov
popf
cltd
xchg
xchg
pop
mov
push
dec
mov
fs
jg
daa
jae
jae
xchg
arpl
xchg
dec
xchg
daa
fwait
cmpsl
dec
inc
or
stos
nop
pop
shrl
pusha
xchg
rcrl
xchg
xor
jp
mov
lret
xchg
sub
inc
int
dec
xor
out
push
ds
and
mov
jbe
ficoms
filds
pop
test
gs
xorl
ja
sub
xchg
push
jge
dec
jmp
das
sub
inc
jno
mov
es
cmpsb
mul
and
jnp
dec
ds
ret
add
les
cmpsb
in
arpl
popa
cwtl
test
insl
push
shlb
pop
icebp
into
es
pop
and
inc
fadd
xor
rolb
xchg
fldln2
stc
pop
add
push
fsubl
fmul
mov
nop
or
jno,pn
pop
push
pushf
es
in
int
pop
mov
jnp
ss
push
and
dec
push
dec
or
das
subl
out
stos
iret
fisubs
aas
and
ljmp
insl
inc
mov
mov
fisttps
inc
aas
dec
xchg
xchg
je
adcb
rep
cmp
sub
in
push
stos
cmp
imul
imul
lock
fmuls
cld
insl
xrelease
and
jno
cmp
push
icebp
dec
and
sarb
jns
pop
inc
scas
pop
xchg
pop
out
cmp
scas
mov
repnz
mov
popa
rcll
dec
jle
mov
loopne
into
stos
add
in
test
or
or
jmp
test
cwtl
adc
or
xor
cmc
inc
xlat
push
inc
pusha
push
pop
pop
push
subb
pusha
cmpsl
shll
daa
les
pop
movsl
jmp
loop
mov
adc
ljmp
jmp
sti
mov
and
and
sbb
out
das
pushf
push
movsl
lock
xchg
cmp
ja
and
mov
int3
lret
dec
std
mov
leave
xchg
stos
movsl
mov
mov
repz
rcr
cmp
cltd
pop
inc
push
cmpsb
add
or
push
call
rcrb
testl
fdivs
mov
or
shl
sbb
das
in
ss
push
sbb
vcmpsd
dec
out
sub
push
pop
loope
cmpsl
sti
xchg
hlt
test
mov
or
sbb
sub
xlat
sub
xor
and
out
repnz
lock
sub
xor
mov
jle
inc
out
adc
cmp
jo
inc
mov
push
mov
add
mov
pop
fwait
cltd
pop
pop
cmp
popf
test
push
fcmove
cwtl
jecxz
fiaddl
lahf
aad
lds
mov
sbb
arpl
cmpsb
pop
lcall
cs
and
addr16
sbb
ss
cmpsl
inc
jne
push
fsubrs
pushf
inc
lret
rorl
adc
enter
test
aas
xchg
arpl
mov
jb
or
sub
test
sti
mov
sahf
xchg
stc
sbb
je
xchg
dec
adc
mov
and
sbb
inc
push
sub
and
jo
fnstenv
and
mov
inc
movsb
cmp
cltd
and
cli
push
push
or
inc
jo
rclb
jo
push
test
inc
call
sti
push
insb
pop
hlt
ja
pop
and
shl
pop
test
pop
mov
cmovno
mov
xor
and
mov
test
ja
out
or
push
out
xchg
testb
cmp
iret
js
dec
repz
icebp
stos
mov
shl
jge
testb
xor
sub
mov
add
push
push
dec
jp
sbb
mov
shlb
popf
outsl
sbb
push
das
sbb
mov
push
lcall
inc
in
jg
mov
imul
sub
push
xor
inc
lahf
jno
stos
sbb
or
or
adc
or
rcll
cltd
add
mov
mov
sbb
pop
enter
imul
sbb
push
add
xchg
pop
xor
sub
mov
insb
mov
push
sub
dec
sbb
jb
mov
test
xchg
sbb
sub
cmp
inc
and
jge
pusha
bound
pop
add
stos
jmp
popa
int3
aaa
dec
mov
push
inc
xlat
jns
fs
inc
popa
test
xor
mov
lods
pop
jne
je
dec
ljmp
push
xor
lds
or
pusha
lock
pop
and
cmc
into
lea
xor
xorl
ljmp
mov
inc
pop
push
lahf
fsubs
pusha
jmp
test
clc
rcll
jle
push
enter
imul
scas
xchg
jge
cmp
dec
adc
sub
sti
pop
idivl
xlat
mov
cltd
pop
lcall
loopne
mov
jns
mov
gs
call
outsl
scas
out
ror
and
or
cwtl
insl
stos
mov
cmp
fisubrs
dec
inc
mov
inc
fs
mov
sahf
insb
xor
sub
imul
or
addr16
sub
push
imul
sub
pop
mov
push
in
jns
fidivl
add
push
push
lahf
cld
filds
push
jl
xchg
xchg
bound
repnz
int
pop
paddq
adc
lcall
clc
int3
jne
pop
rorl
pop
ud1
pop
fbld
adc
hlt
adc
push
and
jp
add
cli
in
inc
cwtl
bnd
aas
stc
inc
cmp
pusha
pop
in
and
and
adc
xor
das
movsb
add
push
arpl
jmp
aas
mov
jo
pop
aas
popf
pop
sub
push
stc
test
lds
add
add
pop
ds
pop
adc
stc
gs
push
dec
ja
fucomi
outsb
arpl
xor
sub
mov
lods
jae
fnstcw
pop
mov
enter
pop
ljmp
iret
cld
or
pop
scas
stc
and
xor
add
xchg
sahf
xchg
xor
sbbl
push
cmp
mov
or
cmp
dec
xor
clc
int3
pop
add
xchg
testb
into
add
adcb
mov
lds
add
aam
mov
mov
insl
fdivs
xor
pop
pop
movsl
sti
xchg
inc
lahf
nop
incb
add
vmovmskps
cmc
testl
push
divl
fistpl
or
pop
sbb
fadds
fwait
jnp
mov
jmp
mov
outsb
mov
mov
les
scas
jmp
inc
inc
inc
test
sar
or
out
push
adcb
popf
and
push
les
xor
popa
pop
mov
or
and
push
fisttpl
jp
outsl
enter
outsb
sbb
mov
inc
ret
xlat
lods
and
mov
push
pushf
in
dec
mov
addr16
inc
insl
sub
pop
jge
enter
cmpsl
dec
mov
push
xor
imul
rep
xor
mov
xlat
sbb
jne
jnp
pushf
inc
push
ljmp
bound
or
cld
out
adc
and
sti
xorl
daa
cli
xor
adc
loop
mov
push
bound
fcmovb
xchg
add
aaa
sub
fdivrp
pop
insl
notl
sub
dec
push
push
pop
add
inc
push
test
mov
fnstcw
aaa
imul
xcrypt-ecb
cmpsl
lea
cmp
sarb
in
and
mov
sub
cmpsl
and
lods
pop
fmuls
xorl
rcrl
mov
adc
cmp
les
aas
scas
std
dec
loope
xchg
pop
insb
fdivr
popf
xor
push
xlat
or
outsl
cmp
mov
ljmp
add
imul
movsl
pop
in
mov
cwtl
not
insl
inc
pop
or
lods
aas
ficompl
xlat
add
test
mov
fidivl
push
jge
cs
xchg
repz
dec
ret
xchg
faddl
out
test
addl
inc
fidivl
cmp
dec
data16
sbb
sub
push
jnp
lea
sbb
push
jle
xchg
pop
adc
mov
popf
pop
insl
push
andl
movsl
mov
jge
clc
or
mov
clc
push
adc
jl
data16
push
addr16
or
rcl
imull
dec
fdivl
dec
add
mov
idivb
mov
jno
fisubl
xchg
imul
mov
mov
jl
push
sbb
es
adc
sub
dec
pop
mov
int
mov
pop
pusha
push
push
fcmovu
jo
push
lds
in
mov
push
pop
mov
xchg
movsb
popa
sbb
outsl
push
mov
xlat
jmp
adc
mov
mov
loop
add
inc
dec
dec
mov
mov
mov
inc
subl
sbb
adc
xor
dec
nopl
ds
mov
andnps
addr16
dec
xchg
push
js
mov
stc
xchg
or
fadds
or
pop
inc
lcall
inc
inc
nop
mov
repnz
sbb
adc
imul
imul
popa
lret
out
cmp
into
adc
enter
xchg
pop
sbb
mov
in
mov
push
xchg
loop
mov
shlb
dec
xchg
dec
sub
fnstenv
sub
jnp
pop
je
fists
mov
push
loopne
jne
sub
mov
hlt
fwait
mov
scas
lahf
insl
and
int3
sub
lcall
mov
and
mov
test
adc
outsl
or
mov
lods
leave
fwait
push
cltd
push
mov
call
shl
lret
aas
mov
aam
pushf
sbb
pusha
mov
aam
test
jl
jb
pop
add
pushf
pop
sub
cmpl
cmp
out
aam
or
push
loopne
and
iret
call
in
fistps
mov
fs
push
call
cmc
repnz
and
lock
cmp
lods
dec
sahf
push
pop
mov
clc
std
jl
test
cmp
mov
pop
or
xor
mov
xchg
stos
push
jne
mov
test
aaa
aam
jne
repz
int
lea
sbb
adc
sub
out
sub
ret
js
cwtl
mov
and
mov
pop
lret
push
push
dec
jno
pop
cli
xorl
sahf
cmp
adc
mov
add
cltd
int
loop
loope
mov
push
dec
sub
mov
aaa
mov
test
imull
add
jnp
jl
jo
xchg
mov
enter
lea
sub
jecxz
adc
adc
sbb
stos
leave
insb
sbb
push
cwtl
int
sbb
out
pop
sti
repz
pop
mov
stos
scas
cmpsl
fsubr
mov
cltd
cli
mov
scas
push
test
leave
pop
out
pcmpgtb
pop
aam
cmp
xlat
lret
pop
mov
jecxz
sbb
mov
fnstcw
ret
cmp
add
ret
adc
loope
ret
and
mov
push
push
popa
push
mov
sub
data16
pop
mov
fcoml
add
sub
adc
notb
and
movsb
loop
test
and
jmp
fiaddl
jmp
cmp
jb
push
pop
xor
dec
pop
adc
xor
subb
push
scas
mov
jbe
pinsrw
daa
push
xchg
cmp
mov
inc
ja
mov
fwait
mov
fisubs
cltd
outsl
jno
lods
arpl
xor
and
bound
or
or
mov
lods
call
push
mov
mov
cmc
into
fcmovnb
mov
add
aas
sbb
incb
xorl
test
or
arpl
loope
push
inc
es
cmp
or
es
ret
dec
dec
test
push
cmp
or
in
test
stos
cmp
js
gs
js
sahf
sbb
cli
sbb
xchg
push
cmp
push
lcall
popa
mov
inc
xor
in
icebp
mov
and
das
and
add
cmp
mov
cmp
add
rorb
add
push
add
icebp
cld
jns
idivl
or
and
jns
xor
repz
stos
jo
loopne
daa
jns
fcomp
in
pop
jnp
lock
mov
ret
dec
inc
imul
push
test
fwait
clc
xchg
test
sbb
mov
aad
mov
lret
mov
adc
adc
adc
dec
adc
push
enter
int3
mov
or
xor
outsl
loopne
std
inc
and
movsb
adc
clc
cmpsb
cmp
sub
enter
inc
sbb
xor
lahf
inc
imull
xchg
cli
insl
sbb
mov
inc
push
fistps
xchg
mov
and
call
idivl
stos
sahf
shlb
and
fwait
lret
pop
andl
es
scas
mov
add
mov
lods
dec
jle
fsubrs
inc
adc
mov
or
add
mov
iret
ja
xchg
lea
jmp
ja
out
dec
push
call
mov
rcll
js
push
mov
inc
or
jb
sbb
fnstenv
fldl
ja
dec
cmp
jbe
xchg
and
ja
sub
cmpb
sbb
je
scas
int
repnz
and
out
jns
jecxz
sub
cltd
cmpsl
inc
into
push
mov
mov
ljmp
sbb
sub
inc
adc
adc
movsl
lret
dec
adcb
mov
scas
pop
loopne
lea
dec
out
clc
push
out
dec
mov
sbb
jge
pop
movsb
mov
test
dec
lea
xchg
int3
ret
cmp
add
mov
jp
insb
data16
mov
pushf
movsl
xor
lods
movsb
add
jge
pusha
insl
enter
inc
loop
das
sbb
mov
cld
cmp
cmp
xchg
cli
jbe
aaa
push
push
dec
jg
test
imul
xchg
jns
mov
int
mov
loope
cli
test
cli
pop
pop
in
sub
push
inc
stos
in
jmp
test
xor
lret
bound
shrl
inc
jbe
bound
mov
jmp
jo
shrl
push
mov
add
and
add
inc
xchg
aad
fdivl
imul
fisttpl
sbb
push
add
cmp
inc
push
hlt
cmc
cmp
idivb
add
xchg
mov
ja
inc
lret
inc
outsb
cmp
cli
inc
cs
inc
idivl
sbb
mov
push
add
adc
sbb
int3
orl
dec
enter
stos
out
call
dec
idivl
mov
in
inc
mov
push
xchg
push
mov
xchg
shr
dec
or
xor
dec
scas
cs
cwtl
add
fisubrl
pop
xor
rcl
cmp
push
sbb
fwait
and
bnd
incb
dec
pop
outsl
dec
sub
jbe
adc
dec
cmc
lret
dec
sbb
ret
imul
popf
sbbl
adc
rcll
jno
aaa
in
call
insb
xlat
sub
adc
imul
mov
repnz
hlt
cs
pop
xchg
dec
in
xor
les
adc
lea
in
and
das
pop
xor
leave
les
pop
repnz
cmp
repnz
leave
add
push
lea
aas
jne
add
out
dec
imul
sbb
add
mov
push
dec
cmp
push
test
in
push
or
mov
lds
jl
jecxz
xchg
pop
pop
xchg
xchg
cmpsl
sbb
cmp
add
sbb
cmpsb
cld
loop
jmp
std
sub
xorl
or
shlb
gs
lods
add
dec
iret
inc
jb
outsb
fcomip
push
addr16
ret
imul
ss
lods
mov
test
inc
stos
xor
and
mov
dec
inc
adc
push
jbe
rol
mov
mov
mov
cmp
sub
sahf
inc
pop
dec
call
inc
adc
call
lock
mov
mov
aam
xchg
cmp
push
sbb
cmp
xlat
jo
in
lret
loopne
mov
push
xor
cmpsb
cmp
inc
xchg
or
inc
fisubs
mov
jne
push
sbb
mov
fistps
push
mov
mov
pop
mov
bnd
or
pop
sub
mov
adc
push
mov
dec
mov
ficoms
clc
and
dec
mov
das
in
inc
or
xchg
xchg
pop
clc
add
jns
neg
jmp
imul
cmpsb
jg
xchg
int
aas
leave
push
xchg
aam
dec
dec
pop
call
mov
stos
mov
xor
pop
orl
jo
insl
test
mov
fsubs
iret
lock
imul
aam
dec
leave
les
aad
mov
ret
mov
inc
jl
sub
or
or
loope
imulb
es
mov
push
pop
push
into
cmpb
ret
mov
fwait
sub
pop
int
pop
daa
adc
pop
inc
xchg
or
ret
mov
pop
sbb
fsts
loope
push
push
faddp
sbb
and
inc
enter
xor
push
push
in
mov
call
xchg
pop
aas
icebp
das
mov
inc
push
xchg
add
loopne
jl
outsb
push
mov
xchg
fdivrl
out
test
std
or
cld
popf
movsb
push
pop
lds
test
shrb
loope
subb
xchg
iret
aas
ret
mov
jge
fsubr
enter
fs
loope
iret
dec
orl
xor
sbb
cli
inc
push
pop
addr16
jge
pop
lock
in
mov
cmp
ja
mov
xchg
xor
cli
mov
dec
sbb
jg
mov
mov
imul
pop
out
cmp
adc
pushf
or
lcall
adc
mov
outsl
cwtl
mov
xor
popf
subb
test
xchg
rclb
mov
daa
cld
in
js
xchg
into
add
add
sub
movsl
scas
mov
not
jmp
enter
data16
mov
adc
into
pop
dec
call
push
add
lcall
ret
mov
mov
push
pop
mov
mov
xchg
iret
pushl
mov
into
push
adcb
mov
push
ret
pop
push
push
pop
fwait
xchg
mov
mov
jno
jbe
and
nop
ds
fsubl
jge
das
lret
nop
push
out
xor
das
and
cs
cli
imul
pusha
ret
pop
call
lcall
sbb
out
fwait
inc
rcrb
aad
mov
in
and
lahf
lods
ret
mov
movsl
push
mov
cmp
sbb
xchg
add
call
fmuls
jge
mov
adc
inc
inc
cwtl
int3
outsb
pop
or
scas
fistpl
add
popf
loope
lea
stos
call
mov
jp
negb
cli
mov
paddusw
lret
xor
adc
sbb
add
pop
lahf
cli
in
xchg
push
cmp
insb
fsubl
int
in
cmpsb
ret
cmp
adc
mov
xor
hlt
pop
adc
fidivrl
cmp
xor
mov
in
sarb
lahf
leave
jle
cmp
sub
into
sub
pop
mov
jnp
ret
push
sbb
push
cmc
sbb
out
xchg
fwait
aaa
jnp
outsb
imul
push
fidivl
pop
ror
movsb
add
orl
stos
push
add
popa
imul
mov
lret
and
and
repz
data16
clc
addr16
fsubr
adc
sub
imul
imul
test
dec
add
popa
aaa
push
rep
shll
insb
add
sub
fidivrl
aas
mov
inc
arpl
popa
sti
xchg
in
adc
mov
std
adc
jge
cmp
mov
mov
sbb
cmpsl
ret
sub
jg
jmp
addr16
dec
xchg
adc
xor
mov
icebp
xchg
repz
pusha
mov
ja
movsb
xchg
mov
xor
negb
push
add
dec
add
xor
mov
dec
mov
iret
sub
push
stc
xor
shlb
scas
popf
dec
xchg
xchg
iret
jae
stos
xchg
gs
stos
fwait
and
inc
cmpsl
cmpsb
pop
add
loopne
lret
sbb
xchg
jp
or
sbb
outsl
out
xor
mov
dec
adc
or
push
ljmp
sub
insl
cli
bound
fdivs
lcall
cmc
pop
jno
lods
lea
shlb
and
les
jp
sub
push
scas
pop
jp
in
adcl
pop
push
sbb
hlt
hlt
stc
neg
push
sbb
mov
push
xchg
mov
in
sbb
push
pop
inc
and
out
jg
xchg
inc
mov
sahf
mov
jne
clc
ret
repnz
pop
dec
leave
xor
push
pop
mov
loop
dec
fdiv
mov
loopne
or
mov
out
cmpsl
mov
xchg
aad
lock
daa
sub
inc
outsl
sbb
sbb
add
xor
jle
in
adc
psubw
cmp
aam
or
mov
dec
dec
ret
jle
pop
xor
stc
push
inc
icebp
fucom
orb
dec
mov
pop
insb
mov
xlat
es
inc
outsl
xchg
outsb
dec
mov
imul
xchg
push
push
inc
out
imul
sub
xchg
sbbb
jl
cmp
loop
lea
or
inc
movsl
pop
aas
subl
pop
mov
mov
stos
jo
mov
test
mov
es
add
movsl
test
outsb
test
pop
jnp
ja,pt
sub
mov
sub
lret
add
adc
fdivr
mov
addl
jo
mov
push
inc
add
jne
outsl
ret
shrl
out
cwtl
pop
or
sbb
ss
test
adc
inc
push
pusha
xchg
sar
jg
leave
mov
push
add
sub
sbb
dec
sbb
rcll
orb
in
lahf
out
ret
movsl
xor
mov
mov
dec
movl
pop
cmp
ss
enter
in
jmp
movb
push
loopne
aas
lcall
mov
or
stos
or
lret
cmp
mov
loope
icebp
inc
xor
or
in
movsl
mov
movsl
test
leave
sti
ljmp
std
mov
aas
and
sbb
mov
dec
fucom
inc
add
mov
je
cmp
sub
fimull
in
loop
das
jae
add
push
mov
mov
cmp
pushf
sbb
xchg
mov
mov
mov
test
mov
int
xchg
mov
inc
jbe
ret
lahf
lock
ret
push
ret
inc
stc
inc
cmpsb
push
jmp
movsb
adc
xor
subl
adc
inc
push
sahf
mov
cmp
les
into
xchg
mov
idivl
inc
jl
jns
test
outsl
xchg
stos
das
push
fisttpl
rclb
pushf
sbb
cwtl
adc
push
mov
loope
sbb
jb
into
in
repnz
jb
pop
fs
dec
gs
test
inc
mov
out
xor
out
movsb
lock
mov
mov
push
movsl
cmp
dec
jne
test
xchg
or
stos
cmpsl
sbb
pop
adc
xchg
je
dec
mov
xchg
inc
out
in
jno
test
loopne
xor
xchg
mov
cli
int3
jle
push
mov
push
inc
and
dec
xchg
roll
out
lret
xor
stc
icebp
dec
std
or
or
add
lret
clc
test
leave
pop
movl
es
iret
lea
push
inc
add
mov
jbe
mov
add
jbe
ss
loopne
sahf
lds
mov
test
loopne
loope
mov
xlat
mov
stos
hlt
cmpsb
mov
xchg
add
subl
outsb
rcll
rorb
adc
mov
or
jl
inc
and
pushf
adc
xorl
movsl
cmpsl
push
lahf
xchg
into
ds
push
in
xor
repz
mov
inc
xchg
popf
bound
imul
out
mov
pop
sbb
jecxz
loopne
add
cmpsl
xor
pop
popf
push
inc
leave
mull
pop
add
mov
ret
out
xor
rcr
lcall
scas
pushf
jge
cli
pop
pushf
adc
inc
xchg
sub
cmpsb
mov
out
sub
js
pop
xor
mov
cmc
dec
adc
push
inc
add
es
sbb
pop
jne
and
push
into
jl
push
cmp
pushf
call
and
clc
or
insl
out
std
lods
push
fs
mov
dec
jae
insl
enter
lret
inc
je
xor
icebp
out
cmp
xlat
mov
cwtl
cmp
add
mov
xchg
mov
or
mov
stos
rcl
lcall
subl
push
dec
pop
iret
mov
call
lds
push
mov
pop
or
out
outsl
cmc
into
xchg
lret
mov
adc
sub
jnp
daa
ja
sarl
lods
leave
inc
sbb
fidivl
popf
mov
cmp
outsb
mov
movsb
ss
sbb
sahf
pop
pop
lahf
sbb
imul
pushf
test
cmc
push
ja
call
fsubl
fs
cltd
inc
or
insl
jne
fsubl
imul
roll
addr16
fwait
and
dec
xor
pop
and
push
ss
repnz
cmc
out
hlt
dec
sub
popa
pop
pop
cltd
aaa
lea
out
xchg
push
jle
inc
cmpsb
mov
mov
fistl
fldcw
sub
push
or
js
mov
cmp
or
xchg
lret
dec
or
mov
cltd
adc
aam
aas
in
outsl
in
mov
or
out
push
dec
jno
jmp
jo
sub
bound
mov
inc
movb
int
outsl
sbb
test
dec
sub
pop
sub
iret
test
rcrl
mov
pop
in
pop
push
jne
cld
push
jnp
adc
enter
stc
cwtl
inc
mov
cld
je
mov
dec
mov
scas
test
pusha
stc
pop
lahf
sub
add
mov
insb
mov
cmpsb
ret
sahf
arpl
stos
push
xchg
lea
xchg
pop
jmp
jge
mov
dec
inc
push
push
shlb
incb
sub
rorb
out
mov
loope
or
add
pop
cmpb
in
and
enter
imul
jns
fadd
sub
fists
jmp
cmpsb
jmp
jno
loopne
push
inc
pop
cmp
movsl
or
cld
enter
stc
mov
out
pop
aaa
mov
test
xchg
cmc
incl
je
jp
movb
divb
popa
jmp
out
repnz
insl
sbb
mov
idivl
jae
mov
hlt
int3
scas
ror
jp
testl
adc
outsl
push
ss
cli
mov
mov
in
hlt
imul
adc
je
or
sbb
xor
stos
inc
jb
jo
cmovg
mov
sbb
mov
xchg
pop
mov
cmpsl
daa
xor
sub
inc
enter
iret
mov
mov
push
ss
gs
aad
out
mov
pop
push
mov
jne
jg
mov
lds
push
fsts
aaa
flds
mov
or
add
xorb
in
js
jl
sbb
push
pop
notb
mov
or
imulb
fiadds
jmp
adc
add
mov
adc
cs
sahf
rcrb
mov
ret
or
je
int3
insb
arpl
pop
jb
scas
mov
in
idivb
test
cmp
dec
imul
mov
mov
lahf
insb
into
aas
cmpsb
loope,pt
fwait
loope
js
mov
js
dec
dec
cwtl
repnz
fwait
cmp
push
dec
add
pusha
inc
inc
dec
sbb
pop
and
mov
adc
pop
sbb
scas
adcl
pop
aad
cltd
add
subb
lret
sbb
and
test
fnstsw
adc
int3
out
cld
adc
mov
iret
xor
mov
aas
fnsave
mov
icebp
xchg
je
aam
jl
fldl
stos
mov
das
mov
test
inc
push
and
fnsave
and
test
xchg
stos
sti
xor
push
mov
jle
testl
mov
mov
jge
stc
add
das
nop
outsb
or
mov
mov
sub
gs
mov
in
jne
cmp
sti
movsb
shrb
nop
cmp
mov
out
push
bound
push
jno
data16
or
push
pop
rolb
pop
jbe
ret
mov
xchg
pop
mov
pop
xchg
mov
and
mov
lret
add
mov
enter
add
push
test
mov
cmc
fs
hlt
push
jnp
add
jo
std
pop
js
int
or
arpl
adc
inc
mov
and
ror
fistpl
jo
xchg
jp
mov
inc
out
scas
sbb
test
iret
movsb
cld
push
inc
dec
jge
out
aas
cmp
call
jge
inc
sarb
sub
adc
mov
sub
daa
int
cmpsl
scas
cmc
jb
cmp
inc
repz
mov
and
scas
mov
sahf
push
push
pop
xor
xor
push
sub
mov
outsl
cld
pop
xchg
or
fbld
sti
jnp
dec
test
and
mull
lds
subl
pop
mov
jnp
repz
pop
push
cmp
rclb
popf
pop
js
stos
add
rcrb
pop
stc
xor
mov
test
stc
mov
outsl
push
sub
sbb
leave
test
gs
sbb
push
dec
and
mov
mov
test
inc
lret
sub
addr16
jmp
fisubrl
pop
inc
fwait
inc
divl
es
push
push
cmpsl
xchg
push
lret
xchg
decl
outsb
lahf
adc
cmp
psubw
icebp
imul
add
ds
in
shl
cmpsl
mov
sti
cltd
arpl
and
sub
aam
ret
stc
sub
les
movsb
loopne
and
outsb
shrl
mov
push
in
sbb
lret
xchg
outsb
incl
xor
mov
bound
and
aaa
shrb
jle
inc
push
or
sub
jge
rorb
fs
andl
inc
loopne
cli
cli
in
das
popf
addr16
push
sbb
cwtl
sarb
cmp
test
ret
call
sbb
sub
mov
and
sbb
jae
mov
fdivrl
xchg
cmpsl
pop
pop
xor
hlt
xchg
fmuls
aad
sbb
out
push
aas
dec
pop
mov
fldcw
push
roll
inc
sub
or
stos
cmp
sete
stc
sahf
jnp
cmovle
sub
arpl
fimuls
pop
mov
jo
int3
mov
dec
xchg
or
enter
sbb
inc
mov
mov
in
adc
xor
lahf
mov
xchg
cmp
ficoml
xor
cmp
and
pushf
add
xor
ljmp
dec
test
xor
ja
repz
pop
fistl
lret
inc
out
xchg
das
jp
sub
xchg
inc
dec
inc
pop
mulb
popa
adc
out
pop
je
pop
push
push
adc
repz
mov
sarl
out
adc
mov
push
adc
or
cmc
add
xchg
or
mov
rol
and
jg,pt
cmpsl
cltd
mov
push
dec
lea
clc
cmpsl
add
inc
dec
mov
push
jbe
enter
or
jo
adc
jecxz
daa
int3
cmc
cmp
jae
loope,pn
xor
inc
int3
cwtl
cltd
jae
jg
scas
lods
aam
loopne
enter
loopne
push
mov
outsl
add
movsl
pop
mov
pop
lods
arpl
sub
fmuls
or
pop
dec
pushl
adc
adc
ja
stc
iret
or
push
popa
repnz
mov
pop
mov
mov
pop
fldcw
jns
xlat
js
data16
insl
std
insl
sub
pop
or
pusha
cmpsl
add
mov
cltd
std
ret
or
mov
sub
mov
repz
mov
jnp
push
repnz
in
test
dec
pop
mov
mov
les
test
cmp
rcl
jecxz
jg
jae
pop
cltd
repz
lcall
sbb
stc
fwait
sub
aaa
sbb
fcomps
std
pop
fistpl
cmp
cmp
je
push
pop
faddl
aas
pop
xchg
push
imul
xor
scas
add
fwait
lods
xchg
jbe
adc
cmpsl
iret
push
xchg
lods
dec
mov
les
push
nop
jge
mov
inc
or
jl
filds
pusha
shl
push
pop
and
pop
dec
pop
pop
dec
fs
loop
jmp
push
jl
jns
mov
lcall
jg
push
mov
inc
repnz
popa
or
jmp
jle
xchg
inc
out
subb
test
clc
arpl
and
sbb
push
inc
adc
out
inc
loopne
jle
repz
jg
xchg
push
insl
pop
push
adc
cld
mov
jge
test
es
stos
sbb
les
or
outsl
hlt
mov
shll
lods
rorb
fs
in
test
flds
les
inc
adc
fs
stos
sahf
mov
jmp
xchg
incl
out
and
jo
sub
fisttpl
fwait
mov
and
jno
mov
push
xchg
xor
in
fisubl
lcall
leave
push
or
cmp
or
jle
pop
rorl
js
push
das
push
sti
inc
and
adc
popf
mov
sbb
push
sub
clc
dec
pop
xchg
lds
mov
push
cmp
cmpsl
dec
lcall
leave
and
adc
push
jg
insb
nop
or
mov
ret
lahf
repnz
leave
cmc
cli
ja
test
insb
mov
adc
mov
jnp
cmpsb
sarb
test
lock
mov
xor
lock
mov
lock
jmp
or
setnp
out
inc
sahf
mov
jg
scas
cmp
or
sub
jge
aam
and
ret
comiss
int3
mov
cmpsl
rorl
mulb
ror
lock
fisubl
jns
mov
leave
js
lahf
jns
inc
cwtl
lret
enter
xchg
popa
adc
push
mov
inc
arpl
jnp
jl
shr
fnsetpm(287
ds
and
loope
dec
clc
adc
cmp
mov
mov
hlt
push
aas
mov
mov
or
push
jp
rclb
call
push
sub
dec
popf
pop
sbb
divb
mov
mov
jmp
cmp
lock
cmc
cmp
pop
xor
jns
insl
jns
and
pop
dec
push
out
nop
mov
or
lods
aaa
push
loop
lods
scas
pop
lret
inc
cmpsl
and
mov
sbb
sqrtps
pop
dec
negl
or
jo
orb
lods
dec
sbb
iret
push
xor
repz
into
mov
out
mov
cs
incl
mov
mov
daa
adc
inc
fcompl
arpl
fdivrp
push
sub
sub
push
adc
aad
xchg
out
or
insl
cwtl
flds
cmp
cmpsb
ljmp
loop
mov
sbb
je
mov
or
test
mov
dec
int3
cmpsb
test
sahf
or
lcall
sub
push
mov
shl
outsl
roll
add
mov
lock
clc
add
es
dec
cmpl
and
stc
jmp
fs
inc
bound
aas
lock
out
sbb
push
sbb
mov
jp
adc
cmpsl
xchg
lock
lock
sbb
ud1
or
lahf
push
mov
sub
cmc
xor
negl
add
adc
pop
rcll
rcll
pop
daa
jl
cmpb
ja
mov
daa
push
fsts
mov
clc
xor
loopne
fildll
add
lret
bound
dec
sbb
sarl
inc
sub
jl
stos
data16
cmpsl
push
bswap
xor
sti
mov
inc
sbbb
push
sbb
mov
add
scas
fildll
or
mov
leave
inc
add
inc
outsb
sti
and
add
ret
pop
imul
adcb
mov
jecxz
and
leave
push
stos
dec
push
shld
add
dec
and
cmp
mov
add
xor
or
stc
sbb
jo
test
push
enter
adc
cwtl
fldenv
mov
andb
call
sahf
push
cmpsl
or
cmp
int3
rorb
test
xchg
or
sub
fcomps
mov
pop
pop
lret
xchg
lcall
aas
das
xor
and
dec
out
inc
mov
xchg
add
in
in
addb
inc
mov
stc
nop
pop
jae
icebp
ds
sbb
mov
mov
sahf
call
fsub
jno
decb
mov
cmp
arpl
dec
inc
mov
aas
pop
roll
mov
fnstenv
and
mov
pop
mov
sub
or
sti
inc
xor
jno
cmp
mov
mov
pop
adc
push
outsb
mov
roll
call
call
or
dec
std
shl
xchg
push
push
xor
test
mov
orb
dec
imul
jmp
inc
test
push
xor
fmulp
dec
xchg
mov
les
cmpsb
andb
dec
mov
or
jno
xor
lods
pop
sub
ljmp
jge
mov
mov
fsubrs
cmp
js
sbb
in
dec
jecxz
mov
andl
popw
sbb
int
jnp
cli
add
xchg
mov
cld
sti
sahf
data16
repz
popa
test
mov
sub
push
xchg
loopne
in
outsb
stos
inc
sub
dec
mov
mov
dec
xchg
push
dec
mov
push
jge
out
add
enter
pop
nop
dec
into
call
dec
mov
mov
adc
mov
ss
nop
push
jge
in
mov
andb
pop
inc
cmp
inc
mov
xor
gs
pop
inc
repz
cmpsl
jl
bnd
data16
jg
mov
incl
out
dec
or
pop
sbb
test
xor
cmp
cmp
pop
sub
addr16
lcall
stos
jmp
sbb
popf
les
and
dec
lea
dec
xchg
int3
js
lcall
enter
add
js
mov
dec
cmp
in
mov
cli
daa
clc
push
push
test
arpl
xchg
and
pop
pushf
mov
in
stos
cmc
inc
ret
shll
inc
shll
inc
repnz
add
inc
xor
aas
sub
push
jl
push
mov
adc
js
repz
push
xor
or
add
mov
notb
pshufw
inc
adc
sbb
fnstenv
enter
and
pop
adc
jle
movsl
data16
je
cmp
fwait
mov
mov
push
aaa
in
pop
add
je
sahf
mov
mov
sbb
cmp
test
in
jns
jle
mov
repz
xor
les
dec
push
aaa
lcall
push
jmp
push
push
jp
pop
or
test
xor
push
sbb
mov
lret
imul
rol
sbb
push
insl
addr16
les
mov
sahf
inc
and
mov
lss
cld
xchg
ja
bound
mov
adc
jmp
inc
test
lret
cmpsb
or
pop
mov
push
fwait
xorl
test
jno
pop
popf
stos
dec
hlt
dec
xchg
stos
stc
and
popa
in
orl
test
cli
cmp
in
stc
repz
sub
xchg
jp
sub
rcrl
cli
xchg
or
pop
ja
lahf
ret
pop
sub
loopne
shl
inc
add
hlt
in
xchg
fisubrs
cmpsl
cmp
cmp
xchg
stos
ret
mov
lahf
cmpl
fcompl
add
jmp
mov
lock
in
sti
and
popa
mov
mov
int
inc
fnsave
into
lcall
cmp
sbb
idivl
cld
or
sti
mov
sbb
in
rorb
stc
hlt
push
fistpl
arpl
cltd
jnp
out
movsb
je
in
nop
sub
mov
xchg
xor
cmp
lds
push
testb
jecxz
mov
sub
loopne
es
bound
and
lret
sub
dec
or
out
test
add
lds
cmpsl
xor
sahf
movsl
sub
push
push
loope
add
sub
adc
jl
cwtl
mov
dec
adc
push
mov
mov
jne
fstps
dec
fs
push
in
push
les
popf
cmpl
dec
lods
mov
or
xor
cmp
pop
scas
push
mov
lock
fsubr
jecxz
xor
add
into
les
sub
cmp
lahf
inc
jle
in
lods
pop
push
or
xchg
jae
xchg
cmp
dec
and
xor
dec
int
arpl
mov
adc
out
jb
mov
ja
jecxz
jle
cmp
mov
adcl
lods
mov
inc
push
jo
roll
dec
data16
scas
xchg
dec
mov
and
inc
std
rcrb
jb
sbb
sbb
sub
push
daa
out
sar
movsl
scas
mov
test
jmp
roll
mov
and
or
jne
cli
xchg
mov
adc
mov
mov
int
inc
fcmovnb
std
push
mov
enter
loope
outsb
add
pop
shrl
sbb
test
sub
imul
mov
pop
pop
xor
fsub
lahf
stos
jmp
int
sub
outsb
jae
test
popa
sub
jge
movsl
or
mov
shlb
jae
repnz
pop
enter
int3
adc
out
xchg
ss
fsubrl
and
pop
aas
sbb
add
jno
pop
addl
pop
lods
adc
cs
loope
mov
das
outsb
pop
pusha
gs
push
fsts
es
jmp
pop
adc
pop
mov
cmpsb
push
and
xor
dec
divb
aaa
clc
sti
js
inc
pop
sbb
xchg
jb
mov
jo,pt
cmp
sbb
shrb
clc
inc
cmpsl
push
dec
call
dec
hlt
cmp
nop
inc
mov
pusha
xchg
fs
inc
dec
jmp
lahf
cmp
and
cmpxchg
sbb
mov
pop
jecxz
stc
pop
mov
jp
ds
jmp
les
jne
sub
jne
xor
xchg
xchg
out
lods
add
dec
idivb
mov
mov
push
or
hlt
lcall
jb
scas
dec
cmp
in
mov
mov
es
mov
xor
sar
push
fdivrl
data16
inc
into
add
push
dec
aad
push
lahf
inc
cmpsl
dec
jne
ss
mov
mov
jle
lcall
mov
aad
movsb
sahf
sbb
fildll
mov
sub
cmpsb
enter
das
repz
fnsave
inc
jg
pop
cmpsl
mov
sbb
loop
dec
adc
inc
aad
push
push
push
cs
lret
or
movsb
les
ss
sub
cmp
mov
js
aas
ss
cltd
repz
fiadds
ret
xchg
and
stos
mov
add
push
pop
iret
aas
jl
push
cmp
out
stos
cmpsl
mov
or
xor
push
xor
in
pushl
mull
clc
bound
xor
mov
lret
out
jmp
and
cld
shrb
mov
push
cmp
mov
add
mov
ljmp
loop
inc
movsb
mov
sbb
ret
bound
aam
test
or
jns
mov
add
loopne
js
jo
cld
or
add
into
adc
enter
cmp
aad
xchg
mov
call
lods
lds
ljmp
sbb
xor
lcall
xchg
sub
pop
pop
scas
repz
xchg
ja
aas
dec
push
cmp
xorl
clc
sub
jb
sbbl
jo
pop
es
and
pop
in
cmpsb
push
popa
mov
mov
mov
push
sti
fistps
pushf
imul
lods
pusha
fwait
into
dec
incb
jae
sub
cltd
pop
or
cmp
rcrl
in
or
mov
pop
sti
je
cwtl
sub
andb
mov
movb
out
shll
test
adc
in
cmp
test
adc
aas
ds
xor
or
pop
jbe
icebp
pop
push
mov
and
hlt
and
inc
int
dec
movsb
test
movsl
loop
pop
push
xor
pushf
and
jae
stos
icebp
and
inc
cmp
das
push
push
repz
sub
test
pop
arpl
sbb
xor
mov
dec
fs
mov
mov
insl
notl
iret
and
cmp
test
mov
addr16
xchg
in
jle
je
pop
enter
xchg
inc
sub
dec
add
sti
xchg
ds
das
xor
in
pushw
and
aaa
add
sbb
lahf
xor
and
ds
mov
in
rclb
sarb
and
jl
and
cld
js
ret
sbb
mov
cmp
lock
adc
rorb
jl
dec
adc
cmpsl
lea
out
cmp
jp
cwtl
fmulp
mov
pushf
cmpb
jns
mov
lds
int3
xchg
jle
rcrl
mov
pop
std
jns
sbb
or
scas
sbb
xor
outsb
add
pop
pop
mov
mov
sbbb
lods
push
mov
push
adc
sub
stos
and
loop
mov
xchg
xchg
pop
sub
mov
fs
in
cs
mov
jae
jl
stos
outsl
out
mov
call
das
daa
xchg
or
mov
cld
and
mov
dec
outsb
orl
movsl
mov
scas
nop
insl
repnz
mov
popf
xchg
push
sbb
test
adcb
lods
addb
mov
shlb
sub
outsl
mov
popa
xchg
mov
sub
test
loope
mov
in
lods
dec
ss
scas
sbb
and
mov
imul
xor
push
aaa
movsl
test
push
and
lcall
dec
sub
sub
mov
mov
inc
pop
subl
or
cli
pop
vcvtss2sd
xchg
enter
mov
push
cld
or
inc
xchg
sub
push
mov
or
xorl
mov
xor
xchg
inc
dec
jbe
mov
and
lods
cmp
rorb
jge
mov
fsubrs
xor
stos
int
jp
sahf
addl
insb
add
movsl
pop
test
cmpsl
adc
sbb
fwait
inc
xor
arpl
sub
sbb
fsub
push
and
xchg
and
idivb
pop
inc
fnsave
aad
jae
inc
mov
adcb
lret
out
or
jmp
inc
pop
push
in
mov
negb
xchg
mov
scas
jp
mov
gs
out
adc
scas
mov
pop
fld
sub
shlb
movsb
in
pop
cld
int3
sbb
loope
push
out
jnp
jle
loop
scas
ja
loop
cltd
and
mov
imul
add
and
jecxz
jmp
jecxz
jnp
repnz
adc
cmpsb
cmp
pop
sub
sarl
aas
jne,pt
aad
inc
and
cltd
lock
jae
mov
add
and
push
xlat
mov
cmpsl
inc
flds
arpl
sahf
es
mulb
or
push
cmp
push
neg
cmpsl
mov
cmp
pushf
add
xchg
mov
jns
push
sbb
repnz
movsb
xchg
lds
pop
or
out
dec
and
xor
mov
dec
mov
xor
pop
or
xor
jns
push
imul
xchg
in
and
notl
stos
xchg
mov
sbb
lcall
mov
arpl
mov
aaa
out
iret
pop
clc
pop
lret
push
out
pop
les
call
mov
stos
insl
shlb
shlb
bound
je
xor
ds
push
fldl
ret
mov
jmp
and
mov
lds
aaa
fucom
xor
mov
mov
call
pop
pop
sbb
shrl
test
aad
daa
js
mov
jmp
ficoms
addb
lea
xor
insl
rcll
popf
andl
fst
in
pushf
lret
jne
and
int3
pushf
rclb
add
jge
test
pop
cs
imul
idivb
jg
mov
xchg
ret
sub
cltd
sbb
aaa
lret
stc
int
pop
int
add
or
cltd
lahf
sbb
fmulp
add
es
clc
icebp
pop
dec
jmp
mov
std
test
negb
out
jge
stos
aaa
add
loopne
dec
jno
mov
pushf
pushf
inc
fwait
out
test
iret
stos
inc
mov
out
enter
adc
add
clc
mov
sub
adc
xor
pop
cmp
filds
inc
cmp
out
cmp
sub
rorl
mov
fidivrs
sarb
in
movaps
imul
dec
jns
inc
fsubl
xor
cmp
test
mov
stc
imul
data16
ja
mov
mov
xchg
adc
sbb
jl
mov
jb
dec
cmc
adc
push
and
cmp
inc
add
push
adc
mov
das
dec
sti
jp
sarl
call
xchg
pusha
pop
ss
add
int
idivb
cmp
lea
movsl
in
into
mov
dec
out
xor
mov
jl
aad
popa
fidivrl
cmp
dec
cmp
rcr
fs
popa
les
out
adc
cmp
leave
jmp
pop
cs
mov
jge
movsl
popa
push
dec
pushl
jo
stos
push
xor
adc
data16
hlt
inc
lea
addb
adc
fidivs
push
add
scas
xchg
dec
cmp
push
mov
xchg
push
xchg
mov
jb
or
sbb
lahf
cmp
imul
push
lods
cld
inc
mov
sbb
mov
mov
cmp
call
sbb
insb
cmpsb
nop
xchg
mov
pop
insl
aam
lock
push
or
xor
mov
out
mov
mov
pop
fcos
int
mov
jbe
into
pusha
adc
mov
cmc
add
fcomip
dec
jbe
mov
xor
xchg
aaa
ss
push
dec
fcmovnbe
fsubs
mov
dec
mov
jmp
mov
push
xchg
test
in
pop
lock
lret
inc
cmp
mov
mov
dec
cmpsb
jbe
cwtl
jne
pop
xchg
pop
pop
js
add
sub
mov
push
imul
lret
jge
push
mov
and
cmp
cmp
sbbl
xchg
lcall
scas
leave
mov
jb
addr16
sbb
push
sbb
and
ljmp
stos
lret
sbb
inc
inc
loopne
dec
dec
cmp
xchg
dec
stos
mov
pusha
pop
mov
icebp
sahf
push
pop
mov
cmp
pusha
adc
mov
loop
std
loopne
ret
adc
js
ret
inc
gs
jb
inc
sbbb
dec
pop
pop
adc
loope
sti
fwait
cmp
cmp
push
insb
ss
sbb
and
and
push
stc
adc
mov
lret
ljmp
xchg
sahf
add
test
cmc
cmpsb
imul
jns
gs
add
jg
fisttpl
sar
sbb
fisubl
aad
or
xchg
lock
add
dec
outsb
or
jmp
stos
test
pushf
outsl
cmp
es
dec
paddq
loop
jo
and
sbbb
jle
cmp
in
jo
jge
xchg
inc
add
cmp
adc
les
mov
aam
jae
adc
adc
push
sbb
shl
push
insl
nop
cmp
mov
test
pusha
lret
ficompl
std
pusha
into
dec
out
cmc
outsb
mov
shll
pop
add
clc
xchg
pop
hlt
movsl
divl
nop
inc
and
inc
das
mov
inc
lds
dec
mov
sbb
hlt
mov
pop
push
inc
adc
stos
adc
mov
aad
and
pusha
xchg
and
fbstp
pop
pop
filds
rcll
xor
or
mov
repz
in
notb
cs
cmpsb
fdivs
loop
adc
push
movsb
scas
lods
in
pop
fsub
dec
mov
insb
push
jne
push
dec
add
mov
cltd
xchg
pop
inc
dec
cltd
xchg
pop
test
jmp
lret
and
cmp
out
add
mov
mov
and
scas
jmp
jg
dec
ja
sub
in
addl
arpl
cmp
fldenv
cmp
in
mov
fbld
push
lods
dec
jnp
lcall
pushf
jne
popf
lods
mov
mov
out
cmp
mov
in
pop
mov
push
mov
cmp
aad
js
je
cmp
imul
in
inc
ds
mov
scas
lea
loopne
out
lock
xchg
dec
cwtl
mov
mov
in
xchg
jb
mov
outsl
and
mov
aaa
stc
jae
inc
mov
icebp
mov
js
loopne
in
adc
cmp
inc
int
xabort
sahf
fistpll
pop
inc
imul
in
in
sahf
mov
enter
cmp
int3
dec
sbb
lret
ljmp
std
mov
inc
mov
aad
push
cmp
cmpsb
call
test
inc
addr16
mulb
movb
aas
sti
hlt
fistpll
ljmp
add
negl
fcompl
es
sbbb
repz
aas
sbb
clc
mov
jns
xor
mov
mov
mov
xor
mov
mov
ja
xor
xlat
mov
and
stos
mov
int
mov
mov
jne
adc
sbb
inc
test
mov
pop
js
jb
das
cmpl
push
push
fidivl
in
push
dec
jae
and
cmp
scas
scas
pop
sub
inc
loop
lcall
movsb
popf
shr
push
test
inc
dec
dec
sub
push
dec
xor
jmp
imulb
inc
mov
std
mov
das
mov
js
cld
je
insb
js
push
add
pop
test
push
incl
dec
lds
mov
ss
adcb
pcmpeqb
imul
push
or
mov
add
ret
imul
ret
mov
inc
or
sbb
adc
adc
aas
psubsb
adc
icebp
arpl
jle
jnp
jnp
fldcw
mov
pop
or
sbb
pop
pop
gs
ret
lods
mov
aas
int
push
mov
jg
insb
fsubs
jns
dec
push
adc
int3
xchg
ds
pop
pop
test
sub
mov
mov
push
in
dec
nop
or
mov
nop
int
cmpsb
xchg
adc
cmpsl
inc
xchg
inc
neg
neg
mov
pop
add
mov
cli
cmc
mov
dec
fistps
mov
cld
jbe
sbb
sbb
sarl
cli
add
pop
in
pop
push
fcoml
movq
mov
mov
jns
movsb
jmp
dec
fld
push
js
or
pop
add
add
dec
xchg
iret
cmc
mov
out
adc
and
xor
mov
cwtl
stc
dec
out
nop
scas
clc
rcll
outsl
cwtl
jne
stos
icebp
lods
xor
cmpsl
repnz
cmp
or
test
movsb
pusha
aas
fidivl
addr16
addl
icebp
cmp
jb
fnstsw
arpl
int
jb
incl
dec
lret
stos
leave
dec
sub
mov
dec
pop
clc
mov
aas
ret
cmp
dec
adc
int3
xchg
test
dec
aam
jnp
leave
cmp
cwtl
fistpl
mov
popf
sub
js
ret
loop
add
jge
daa
fisttpl
push
out
ja
mov
pop
inc
addl
gs
sbb
dec
fnstcw
outsl
lcall
stos
cmp
sub
arpl
or
daa
fadds
mov
sub
cmp
mov
in
mov
push
xchg
leave
jae
mov
push
lcall
jb
outsb
jp
outsl
les
mov
lret
mov
loope
mov
xor
adc
adc
pop
imul
leave
mov
out
leave
mov
test
sahf
insb
lea
jno
sbb
cmp
pop
ret
jne
mov
neg
movsl
arpl
lock
je
jb
sub
or
mov
out
mov
push
ret
mov
pop
fidivl
push
cmp
shrb
and
add
int
loopne
adc
test
fxch
iret
pop
dec
jg
and
leave
inc
js
add
push
cmp
fstp
repz
push
das
in
dec
dec
dec
cmp
push
ja
out
cmpsb
negb
testl
jecxz
fsubs
mov
pusha
inc
in
add
sub
inc
xchg
xlat
aad
clc
push
or
fdivrl
pusha
xor
inc
popa
shll
and
fcmovnu
ficompl
and
test
repnz
mov
int
or
pop
add
outsl
in
mulb
xchg
lods
and
jo
xor
adc
sub
scas
fdiv
fiaddl
or
test
andl
divl
mov
mov
jecxz
ds
cmpsl
out
inc
in
inc
jbe
sub
cmpb
mov
stos
imul
sub
in
out
arpl
pusha
clc
int
lea
push
jg
es
sub
cmpsl
dec
in
bound
lahf
xchg
xchg
push
roll
gs
sub
and
out
int
jae
dec
sbb
xchg
test
mov
cmp
mov
pop
push
fnstsw
mov
aas
adc
lcall
xchg
pushf
push
pop
or
je
cs
cwtl
cmp
testl
push
jp
push
lods
and
dec
cmp
dec
or
mov
mov
rcrl
jo
adc
mov
mov
mov
imul
scas
cwtl
push
aam
xor
adc
xlat
inc
jle
pop
rorl
mov
gs
mov
out
dec
or
sub
mulb
clc
movsl
push
dec
movsl
int3
adc
shr
lcall
mov
pop
cmc
sbb
mov
mov
out
mov
mov
and
mov
into
add
and
mull
rol
ljmp
jo
or
jo
in
fcoml
mov
mov
pop
aas
mov
dec
ret
sbb
shll
loope
push
or
imul
jns
add
sahf
sub
xchg
lea
inc
push
in
out
sbb
xchg
xchg
jne
adc
scas
push
sahf
mov
test
adc
scas
xchg
stos
lret
pop
push
outsb
add
xchg
fidivs
jp
pop
popa
mov
inc
fadds
mov
rcrl
shrl
in
ffreep
add
addr16
jnp
pushf
adc
sahf
or
jle
add
mov
nop
rcl
inc
jnp
pop
hlt
jae
cmc
lods
icebp
fcoml
dec
or
jae
mov
cli
sti
xchg
add
xchg
insl
fistl
das
lret
call
xor
popa
jecxz
cld
xor
rorl
test
inc
add
fcoml
mov
and
in
jecxz
enter
out
lret
test
jae
ret
in
daa
hlt
loop
fstps
pop
push
sahf
push
adc
clc
insb
jl
xchg
xor
out
jp
mov
jns
es
jb,pt
ret
push
jbe
pop
adc
inc
mov
sub
sbb
daa
push
push
jns
je
popa
add
mov
adcl
int
xchg
sub
popf
inc
or
jge
sahf
pop
xchg
dec
adc
nop
xor
dec
vpaddusw
and
or
mov
aam
imul
loop
stc
scas
adc
sub
dec
sbb
shrl
mov
aam
out
mov
xlat
inc
xchg
arpl
cld
dec
push
or
pop
mov
inc
lock
sub
cmp
mov
mov
arpl
mov
sub
int3
fsubrl
mov
lea
leave
test
divl
popa
inc
dec
sub
pop
dec
in
add
jp
mov
outsb
dec
orb
jmp
and
pop
inc
dec
cmp
movsb
xor
adc
imul
mov
cmpl
xor
mov
mov
cmp
add
inc
in
and
dec
popf
mov
mov
adc
sub
push
mov
add
sarb
lret
mov
jns
push
mov
jg
insb
rol
inc
mov
pop
fistl
and
jo
and
push
dec
negb
and
mov
lods
pop
addr16
cmp
pop
jl
cltd
sub
pusha
or
mov
in
xor
jae
popa
mov
dec
fiadds
jle
and
ljmp
mov
scas
lea
mov
leave
stos
imull
cmp
insl
sub
xchg
mov
lods
popa
cmp
sbb
adcl
and
out
hlt
test
pop
xor
pop
jmp
data16
ja
pop
sub
sbbb
ret
ds
and
aas
sbbl
cmc
mov
lods
sti
or
fisttpll
push
divl
data16
pusha
and
and
daa
or
clc
or
jno
and
outsb
insl
sti
add
inc
sbb
cld
fsubrs
or
mov
ja
pop
or
adc
push
xlat
cli
lock
pop
cli
imul
orl
jge
cmc
jecxz
or
pop
insl
scas
fildll
mov
dec
cmp
push
inc
and
add
popf
loopne
jne
jns
pop
sbb
subb
cs
es
retw
roll
xor
dec
enter
loope
icebp
pop
in
lea
jb
fs
mov
es
xor
pop
jb
cmp
popf
dec
push
sub
pop
mov
pop
in
xchg
mov
inc
inc
jno
js
imul
push
fwait
iret
mov
mov
mov
jae
xchg
add
psrlq
jge
cmp
ljmp
jmp
test
ja
inc
imul
movb
jb
xor
mov
orl
fcomps
iret
add
cmp
iret
outsb
rorb
ret
incb
add
sub
push
jg
out
push
fcmove
lock
cmp
leave
mov
std
sub
imul
scas
push
sbb
ljmp
mov
sbb
ljmp
sub
sub
mov
mov
mov
push
stos
aad
jmp
push
mov
je
add
mov
in
int
shr
int3
xchg
mull
fs
jmp
cmp
inc
fdivrs
cltd
pop
incb
mov
cmp
jecxz
out
xlat
adc
pop
pop
dec
je
fildl
pop
addr16
sti
mov
pop
jns
jle
sub
adc
pop
dec
cwtl
push
int
int3
mov
insb
loope
mov
add
data16
cltd
push
or
jl
cmp
aam
mov
lods
loopne
pop
mov
js
aad
lcall
sub
repz
stos
mov
pop
cmp
add
cmpsb
imul
push
enter
dec
sbb
mov
lret
and
rcrb
andl
push
mov
dec
ljmp
dec
je
call
rol
outsb
sti
xchg
fidivrl
mov
out
scas
insl
popa
pop
stos
or
sub
dec
cmp
ds
pop
xor
fsubr
xor
je
addr16
sbb
clc
mov
inc
adc
rcl
jb
adc
pop
cld
test
pusha
sub
xchg
inc
jno
sbb
cmp
dec
fwait
jno
sbb
mov
lret
in
cmp
int3
pushf
jl
ss
repnz
push
pop
lods
jge
aam
push
inc
inc
stos
in
gs
mov
sub
in
repz
in
and
pop
lods
fnstcw
mov
xchg
sub
cltd
out
dec
int
loope
test
push
sti
xchg
push
jno
fcompl
in
flds
dec
jb
push
hlt
in
push
lea
leave
or
insl
mov
fstpt
lahf
enter
cmc
mov
aad
dec
or
lds
inc
xor
dec
mull
sub
push
out
mov
scas
or
popf
sub
and
insb
iret
sbb
and
movl
push
sarb
xchg
and
dec
scas
or
flds
inc
arpl
lock
sarb
jl
xor
mov
add
cvtps2pi
sbb
loopne
sarl
orl
mov
std
cmp
lahf
rorb
mov
pop
pop
outsl
std
jae
push
fimull
or
push
push
aas
push
sub
or
inc
jb
add
sysret
fmulp
lcall
mov
push
dec
jo
or
push
inc
dec
cmpsl
mov
or
dec
cwtl
xchg
fwait
insl
pop
into
fistpll
js
cmpsl
jmp
stos
loop
leave
int
aad
stos
adc
and
pop
mov
loopne
jge
test
clc
sbb
pop
clc
lret
mov
cmpsb
in
mov
sub
orl
insl
xor
imul
add
shrb
mov
and
fwait
cmp
cmp
xchg
aad
push
movl
popa
push
int3
add
sbb
push
inc
cmp
into
inc
mov
xor
jb
adc
mov
pop
rcrl
sub
sbb
pop
divl
jp,pn
outsl
je
pop
mov
pop
inc
cmpsb
cmp
add
jb
push
or
imul
pop
lods
mov
mov
or
push
lock
hlt
mov
pop
lods
int
pusha
and
lahf
lea
fsubrs
mov
mov
xchg
fisttps
je
mov
jmp
roll
shrl
in
fwait
popf
pusha
xor
pop
add
xor
push
iret
jb
lea
inc
sbb
jmp
std
mov
repnz
dec
stc
sub
andl
push
add
loopne
mov
sbb
out
push
shr
jns
xchg
lods
add
jle
adc
fsubrs
push
fsubrl
dec
adc
incl
mov
mov
hlt
lahf
pushf
in
fnsave
sarl
loop
sub
ret
lcall
lahf
and
call
pop
pusha
cli
adc
and
shlb
add
sbb
int
mov
jge
push
daa
or
push
nop
cmp
mov
cmp
pop
xchg
push
xchg
imul
aam
lock
lret
data16
xchg
ja
rcll
pushf
push
jno
sub
xchg
mov
push
cwtl
cmp
stos
loope
bound
push
cli
add
dec
xchg
dec
adc
cmp
mov
pop
pop
xchg
sub
add
mov
lret
push
jecxz
sub
add
repnz
movsl
fnstenv
sub
mov
push
xor
scas
rclb
and
mov
push
add
sbb
add
jns
adc
ljmp
mov
inc
pop
dec
repnz
add
fdivrs
and
xchg
cmp
push
xchg
mov
dec
xchg
jge
in
or
movsl
leave
adc
and
sti
xor
jb
addr16
stc
sub
mov
xchg
mov
fcmovnu
sarl
cltd
mov
mov
test
insl
or
mov
xchg
xchg
lods
mov
pop
add
sub
sahf
ret
pop
filds
fisubl
jecxz
add
mov
dec
leave
jmp
cld
in
int3
pop
arpl
sub
neg
ffree
out
sarl
insb
sub
out
in
ret
popa
pushf
xchg
sti
pop
test
lods
mov
iret
cmc
pushf
cmp
jnp
adc
lods
test
add
jns
out
outsl
cmpsb
dec
cld
jne
adcl
xor
sub
rorb
dec
dec
dec
int3
or
mov
lds
jbe
insl
push
sbb
sbb
jno
cmp
sbb
lods
rcl
or
aad
les
inc
sarb
mov
or
shl
cmc
mov
mov
add
xlat
mov
addr16
jnp
hlt
loop
rolb
jp
xchg
push
fxch
pop
imul
lret
andl
xlat
in
ds
and
fldcw
sbb
in
outsl
adcb
cmp
stos
jnp
hlt
xor
jnp
cli
xchg
insl
adc
jecxz
inc
cmc
gs
push
ss
int
mov
cmp
js
push
mov
lcall
cmp
out
or
inc
adc
ss
xor
mov
push
hlt
out
lods
ljmp
out
ja
xlat
arpl
push
adc
xor
push
scas
jno
out
xchg
enter
sbb
iret
adc
iret
cmp
mov
sbb
dec
hlt
test
push
loop
scas
mov
cmovge
pop
cmp
jne
pop
addb
std
mov
sahf
or
test
je
movsb
cld
xor
imul
sub
test
bound
jne
fisubl
in
mov
sbb
mov
adc
or
ljmp
fimull
les
in
mov
jmp
cmpsl
test
push
and
std
and
es
das
in
xor
into
xchg
cmp
pop
imul
xor
lods
pop
mov
lret
push
pop
lea
aas
mov
loopne
xchg
or
call
cld
insb
sbb
adc
mov
popf
jecxz
mov
outsl
in
fs
and
aaa
aad
mov
cmp
aam
loopne
lods
movsb
lret
sbb
and
xchg
test
xor
loope
adc
jae
jp
push
insb
icebp
pop
xchg
popa
mov
inc
incb
decl
fists
inc
push
xchg
cs
arpl
inc
sbb
push
and
adc
andb
adc
mov
std
insb
cmp
adc
popa
and
pop
and
mov
rol
insb
xlat
cs
cli
fyl2xp1
xchg
sti
xor
jmp
js
or
call
lahf
or
dec
cmp
or
mov
jecxz
pusha
push
sbb
stos
sub
pop
in
int3
jnp
pop
subb
mov
push
push
xor
inc
and
int3
data16
add
pop
add
pop
testb
dec
je
ds
xchg
outsl
dec
nop
push
jmp
std
dec
sarl
fcomps
test
jo
mov
dec
cmc
stos
pushf
addb
xchg
xor
and
xchg
sbb
jp
shlb
bound
adc
out
test
cmp
or
push
cmp
shr
push
lea
stos
mov
scas
mov
cmp
xchg
lods
push
call
or
jecxz
xchg
daa
jns
mov
jb
icebp
dec
jns
in
and
push
sub
lods
repz
xchg
xor
and
std
cmpsb
mov
mov
jmp
and
xor
out
mov
cs
inc
aaa
pop
mov
jmp
push
lods
nop
cmp
inc
xchg
in
outsl
xor
repnz
mov
or
or
out
push
nop
pop
sbb
sti
add
mov
leave
jle
xchg
ror
int3
cld
lahf
shrl
test
daa
jno
push
sbb
jecxz
push
mov
out
and
xchg
cwtl
cltd
add
pop
mov
cmc
lods
inc
mov
add
mov
rorb
imul
cmpsl
insb
mov
and
jo
sarb
mov
pop
dec
ret
aad
aam
test
sti
scas
aad
mov
sarl
add
dec
dec
ficomps
cmc
pop
cmc
mov
negl
shlb
sar
jno
sub
add
and
push
cmp
inc
push
cs
cltd
add
xor
fsub
je
inc
vminps
scas
cmc
iret
xchg
outsl
adc
lret
ljmp
push
lods
sbb
push
jns
imul
leave
adc
fcomps
repz
stos
test
xor
aaa
inc
cs
jg
pop
cmp
lret
jp
mov
sbb
mov
pushf
es
mov
dec
mov
pop
cmpsl
sub
or
fimuls
cmp
enter
outsl
mov
mov
scas
loope
mov
jmp
mov
arpl
mov
mov
mov
cs
mov
es
cmp
or
and
sbb
imul
jo
jnp
sbb
shl
or
xchg
jp
imul
rcrl
jmp
push
lods
mov
mov
sti
xchg
lods
jp
push
int3
ss
sub
mov
jno
fisubs
xchg
sbb
mov
and
loop
mov
repz
adc
xor
push
mov
mov
push
dec
lods
es
out
mov
sbb
mov
dec
into
lret
cmp
mov
lods
out
ss
rclb
and
imul
ds
xor
mov
imul
or
lods
or
fisubrl
ljmp
xchg
push
pop
loop
adc
jg
bound
rcll
cmpsb
xchg
push
jmp
xchg
cmpsb
mov
dec
mov
iret
aas
xor
xlat
xchg
int
les
lret
fcmovnu
jnp
repz
push
pop
sbb
cmp
ret
and
xchg
cmp
and
jle
testl
jp
add
sub
int3
hlt
movsl
in
test
scas
jecxz
repz
mov
lgs
or
mov
shrb
sbb
jmp
sbb
dec
test
pusha
sub
lock
aaa
out
adc
test
repnz
lret
mov
mov
and
push
mulb
idiv
or
mov
sbb
mov
pusha
lahf
dec
cmp
sbb
incl
mov
lret
jbe
jno
dec
fmull
inc
aam
sbb
mov
jg
adc
mov
test
mov
jb
and
movsb
cmp
cmp
inc
dec
push
movsb
jnp
rcrl
cs
orl
out
pusha
inc
mov
aam
jns
popf
stc
jbe
and
cld
fisttpll
divl
push
jmp
push
leave
lea
es
mov
sbb
sub
cli
jns
mov
push
enter
in
push
jbe
into
inc
stos
ljmp
pop
xor
inc
movsb
or
or
out
jge
sbb
xchg
int
fldt
xchg
push
scas
and
dec
xchg
repz
xor
pop
pop
sbb
out
sub
je
lret
cld
add
or
je
jnp
push
and
mov
fs
push
mov
insl
cmpb
mov
adc
mov
shl
cld
and
cmp
sbb
mov
adc
lret
aas
lods
add
add
das
cmpb
add
mov
xor
inc
inc
or
cmp
jns
imul
push
es
xchg
aad
inc
push
adc
fldenv
mov
jp
ja
pusha
adc
dec
ljmp
aaa
ss
lret
aas
test
orb
cmp
cmp
pop
xchg
shlb
decb
into
xchg
cmp
imul
sbb
mov
dec
mov
push
pop
lret
dec
add
je
jmp
cmpb
pushf
test
lds
repz
aam
lahf
adc
or
xor
adc
ljmp
and
test
scas
xchg
fsubl
mov
or
mov
mov
mov
cmp
lods
rcll
ss
push
outsb
push
sti
mov
out
dec
gs
jmp
clc
jbe
shlb
adc
subps
sbb
cmpsl
jb
xchg
shll
mov
mov
sbb
loope
inc
adc
addr16
mov
jecxz
mov
popl
jnp
and
jae
int
adc
aaa
stos
push
ds
sarl
loope
les
sub
ret
pop
mov
popf
xchg
sbb
dec
xchg
xchg
in
scas
jmp
std
mov
insl
lea
cmc
mov
das
mov
jmp
add
sbb
loope
aad
xchg
sub
mov
sbb
popa
hlt
aam
pop
inc
inc
std
pusha
out
pop
cmp
bound
mov
push
lret
ret
adc
outsb
in
int3
sbb
sub
mov
jno
leave
and
mov
out
fucomip
sbb
add
mov
test
sbb
fnsave
fcoml
ja
cmp
sbb
push
push
dec
jbe
sbb
aas
jmp
dec
xlat
sub
outsl
and
scas
pusha
pop
repnz
lock
test
repnz
mov
sbb
cltd
push
cmp
mull
mov
xlat
repnz
jp
xor
out
mov
push
bound
int3
sub
cld
xchg
lahf
jecxz
mov
out
pop
pop
push
aas
pop
sub
repz
push
and
push
repnz
push
js
ret
mov
or
and
shrb
cmp
in
pop
dec
test
cmp
lret
jle
pop
imul
pop
xchg
mov
add
cli
or
cmp
pop
insb
inc
add
sbb
test
scas
arpl
and
cmpsl
test
rorl
pushl
adc
sbb
jae
xor
fdivrp
push
call
les
mov
out
add
lods
or
push
inc
gs
andb
in
inc
adc
sbb
sbb
jno
es
sbb
push
lret
cmp
fildl
fs
mov
mov
adc
dec
push
inc
cmp
jge
jnp
adc
push
cmp
sahf
icebp
mov
inc
jne
sbb
out
push
fs
sbb
inc
nop
push
jecxz
adc
mov
shlb
mov
cli
scas
fwait
push
insl
movsb
in
fwait
jmp
int
aas
cmpl
ja
push
out
sbb
das
sar
nop
clc
ret
stos
lret
insl
add
clc
addr16
test
inc
cmp
stc
adc
jb
push
shl
pushf
fnstenv
stc
cmc
xchg
ja
sete
sub
sarb
data16
stos
stos
push
mov
dec
xchg
fildll
and
clc
mov
jmp
add
xor
mov
stos
fisubl
xchg
daa
ret
push
fmul
rcrb
mov
inc
dec
jb
jg
and
rolb
es
test
add
mov
scas
xchg
mov
insb
jecxz
xor
add
cltd
and
rclb
ljmp
lea
jns
movsl
pop
or
sbb
shlb
cmpsb
mov
sahf
push
cmp
lcall
mov
sub
xor
inc
sub
sahf
push
inc
jae
aas
xor
adc
adc
push
cld
sub
sub
inc
mov
scas
repnz
jmp
into
xchg
jl
jnp
aad
fiaddl
dec
cli
dec
mov
scas
push
scas
push
cmp
add
push
xor
jmp
popa
xchg
adc
or
mov
jno
xorl
movsl
mov
mov
clc
sbb
push
mov
dec
jmp
pop
dec
shll
lods
mov
inc
sub
iret
pop
ss
sbb
cwtl
jae
mov
mov
xorb
mov
push
cmpsb
loop
test
sub
aaa
jmp
xchg
lods
push
scas
xor
rcr
aad
adc
stos
dec
imul
and
xchg
sbb
es
or
sub
mov
and
test
sbb
addr16
mov
test
sub
sbb
loopne
outsb
push
adc
adc
and
test
pop
mov
dec
xchg
push
xorl
lcall
outsl
mov
out
and
fwait
lahf
xor
jbe
cltd
lcall
inc
sbb
cmp
arpl
mov
xor
push
in
adcb
adc
out
pop
dec
pop
es
cmp
lcall
into
push
adc
xchg
dec
pop
ljmp
data16
mov
js
cmp
lock
jns
xor
faddl
or
nop
xchg
mov
pushf
aam
addr16
addr16
lret
jl
push
cmp
bound
es
add
mov
pop
xor
add
leave
ret
inc
sbb
mov
or
ds
imul
adc
dec
xlat
sbb
and
repnz
mov
divl
aaa
push
push
dec
repz
mov
mov
and
xor
or
fs
aam
adc
mov
sbb
mov
adc
icebp
cltd
notb
add
sub
lcall
aad
push
ljmp
nop
aaa
cmc
ja
dec
enter
sub
sub
int3
int
lret
pusha
lahf
call
xor
mov
xor
pop
jno
sti
xor
fwait
cmp
pop
loopne
les
pop
push
dec
fadd
mov
jmp
adc
jb
dec
outsb
mov
push
xchg
pop
adc
and
jbe
mov
mov
lods
lahf
fwait
mov
lods
dec
push
out
int3
rcrl
jmp
test
je
or
pop
xchg
mov
lods
mov
cmp
subl
mov
xorb
mov
fldl2e
mov
jne
xchg
stos
pmaddwd
js,pt
inc
fs
repnz
jl
adc
mov
imul
and
inc
sbb
pop
in
lret
adc
and
test
mov
mov
lods
fdivl
pop
cmpsl
cmp
mov
jge
ret
ljmp
pop
jmp
adc
lret
ds
popf
test
sbb
or
sub
xor
cmp
cmp
out
sbb
fs
outsl
orl
call
cltd
push
fs
pop
pop
adc
xor
sbb
xor
cmp
mov
mov
adc
aam
mov
or
fs
in
mov
bound
cltd
hlt
inc
push
test
and
je
in
mov
cmpsb
mov
jb
push
test
imul
in
ds
mov
mov
push
in
inc
dec
jne
adc
push
subl
aas
sbb
xchg
sbb
std
jne
lods
fists
jb
cmp
xchg
inc
cmp
xchg
cmp
sahf
and
pushf
inc
mov
inc
dec
sbb
mov
jmp
mov
lods
dec
and
out
adc
and
pusha
jno
cmp
test
mov
shrb
int3
ss
imul
dec
inc
neg
xchg
std
popa
pop
bound
sahf
jg
pop
xchg
jle
ljmp
sbb
out
test
aam
xor
sti
cmpsb
xchg
push
mov
data16
out
jbe
fs
jnp
cmpsl
push
and
sbb
inc
pushf
cli
insb
lcall
xor
add
adc
mov
sti
rcr
pusha
mov
add
cli
sbb
xchg
rcll
push
push
into
imul
mov
mov
and
inc
xchg
xchg
dec
lods
mov
into
pop
adc
popa
xor
pushf
push
jae
jns
loope
fwait
ljmp
shl
shl
in
pop
jo
lret
xor
push
push
bound
cmc
xlat
shr
ja
push
push
arpl
xchg
xchg
cmpsl
fwait
dec
xor
push
nop
or
or
nop
pcmpeqw
mov
lcall
sbb
sbb
mov
jecxz
jle
pop
mov
lock
sbb
pop
in
out
jo
cmp
sbb
mov
jl
xlat
in
iret
inc
icebp
and
es
cmp
cmpsl
fidivrs
xchg
je
arpl
in
ljmp
and
int
dec
fisubrs
out
cmp
nop
scas
adc
xchg
push
rcrb
adc
std
mov
push
push
test
pop
adc
pop
loop
ljmp
xchg
repnz
mov
push
jnp
push
xor
jb
and
pop
dec
cmpsb
jnp
leave
or
xchg
pop
push
loope
jle
jge
mov
jge
push
add
mov
mov
cltd
and
jle
rolb
push
je
shl
mov
in
inc
mov
lea
cmpsb
sub
pop
jmp
adc
daa
or
aam
xchg
mov
jle
jmp
push
sub
jmp
rorb
scas
data16
fs
push
pop
inc
dec
jns
mov
or
inc
push
ret
push
shlb
pop
into
shll
cmpsb
inc
mov
in
ret
push
insl
mov
idiv
out
dec
inc
outsb
leave
test
lahf
pushf
ja
adc
mov
push
cli
sbb
or
out
add
mov
jns
inc
and
fs
mov
pushf
cmpsl
pop
ret
sbb
js
pop
jl
sub
mov
jbe
sbb
imul
clc
sti
call
jle
cmp
pop
insb
into
daa
adc
cmp
jl
pop
pop
pop
lods
pop
lods
push
inc
sub
lcall
sbb
mov
roll
movsl
sbb
enter
fildll
cmp
adc
lods
mov
cli
stos
cmp
lret
inc
cld
xor
mov
lock
and
dec
arpl
cs
in
inc
int3
push
cmp
jecxz
scas
ja
or
adc
stos
inc
inc
cmc
in
mov
notl
pop
add
lock
shlb
cli
lret
mov
loopne
sbb
adc
pop
pop
pop
ljmp
test
or
mov
mov
std
aaa
dec
rorb
inc
push
jae
lahf
inc
pcmpgtw
ret
mov
xor
cmpsb
mov
stos
fs
fs
or
mov
push
sbb
js
and
hlt
in
add
imul
or
insb
mov
mov
stos
mov
inc
mov
mov
jnp
adcl
iret
sub
sub
push
dec
out
xchg
in
popa
xchg
stos
mov
negl
or
sti
movb
iret
xchg
mov
mov
sbb
stc
push
inc
mov
bound
adcb
imul
adc
xchg
stos
pusha
outsb
adc
jmp
jno
push
lahf
fstpl
mov
je
rorb
mov
fcmovbe
jb
add
icebp
mov
or
mov
rsm
ja
shll
or
adc
insl
cmp
jle
rorl
jnp
pop
sbb
xor
xchg
xor
stos
movsb
clc
pusha
dec
xchg
loop
popa
jns
dec
int3
dec
jmp
nop
mov
cmc
mov
mov
lea
mov
imul
xchg
jle
pop
out
je
xchg
test
push
movsb
xchg
cwtl
push
add
test
mov
and
subl
repz
pop
xor
cmp
jbe
mov
adc
or
cmc
push
xor
adc
push
fadds
scas
outsl
aam
push
adc
cwtl
cli
ds
test
inc
je
mov
push
aad
sub
sarb
and
idivb
cld
inc
cwtl
int
rcrl
test
xchg
loopne
outsb
sbb
sahf
aam
adc
clc
stos
xchg
cmc
push
or
sub
std
pop
imul
xchg
sar
data16
jb
test
adc
cltd
imul
cwtl
dec
sbb
dec
divb
decl
call
mov
mov
dec
dec
into
in
leave
lds
rol
cs
jb
xlat
repnz
jb
adc
setno
loope
js
adc
inc
jg
cmp
notl
pop
ljmp
jno
nop
stos
jbe
add
push
xlat
fsubr
pop
jle
lds
pause
lfs
in
sub
shrb
or
mov
pop
mov
push
shlb
sub
pop
leave
pop
cs
lret
mov
divl
lret
dec
sbb
out
imul
xor
pop
mov
cli
fwait
or
mov
pusha
or
fcomps
dec
pop
fs
lcall
ds
loope
inc
fs
cmp
push
sarl
lea
and
dec
aam
sub
outsl
dec
repnz
xchg
fdivs
adc
push
xchg
lahf
ret
movsb
mov
imul
push
or
enter
push
adc
ljmp
lds
mov
cmpb
mov
push
jno
pushf
cs
lods
mov
inc
es
pop
adc
cltd
out
cmp
addl
je
push
repnz
cmp
cmp
and
jbe
xchg
fcos
jg
mov
mov
sbb
jns
sti
sti
pushf
jae
mov
push
inc
jno
pop
or
mov
lcall
or
sar
mov
adc
dec
repnz
lea
dec
ljmp
adc
sub
inc
sahf
sbb
cmpsb
sub
test
ror
sbb
mov
loope
xchg
in
push
mov
dec
mov
or
dec
cmc
jmp
mov
fdivrl
or
adc
push
clc
test
or
and
mov
sbb
mov
sahf
mov
out
cmp
pop
pop
pop
pop
das
sti
jl
dec
mov
mov
sub
and
dec
lret
jge
jg
cmp
sbb
mov
inc
pop
and
ja
and
les
mov
or
imul
jns
or
mov
cmp
jo
jg
mov
xlat
pop
nop
cmpsl
lods
cmc
outsb
repz
push
mull
cmp
xor
lods
fdivs
xor
mov
push
jnp
in
out
or
cs
call
push
leave
jp
test
add
loopne
aas
outsb
dec
cmpsb
mov
sbb
or
movsb
or
popf
fcompl
or
das
inc
jne
xor
inc
push
arpl
mov
std
or
adc
ficoml
xchg
dec
or
jl
push
jg
cmp
clc
sub
adc
cmp
mov
mov
cmp
arpl
cmp
out
or
out
jl
and
mov
or
add
add
sub
aam
cmp
mov
cltd
cld
lcall
sbb
sub
push
std
and
mov
pop
in
movsl
pop
call
sub
push
jl
add
rclb
out
jl
pop
inc
cmp
dec
stc
ret
loope
jb
push
lock
icebp
daa
test
pusha
pop
sbb
ror
sbb
scas
cwtl
lods
das
nop
mov
scas
scas
out
sub
mov
pop
lea
in
lock
jb
mov
inc
jmp
aas
pop
xor
push
dec
call
sbb
inc
lea
pop
movsl
jno
mov
jl
jns
push
mov
insl
cmpsb
mov
loop
mov
inc
jle
xchg
lcall
fwait
enter
jle
pusha
dec
add
mov
int3
movsb
iret
or
or
xlat
std
push
mov
clc
jne
and
pushf
pusha
sbb
je
adc
mov
test
aaa
mov
leave
stc
pop
xchg
insl
test
jne
push
dec
cmpsl
sahf
mov
incl
in
cmc
hlt
sub
xchg
ljmp
scas
repnz
sub
cmp
cmp
push
mov
pop
add
in
push
insl
pop
mov
gs
mov
sbb
mov
ret
dec
scas
sbb
mov
cmpsl
and
mov
fstpl
and
xor
sub
test
jo
sbb
xor
mov
insl
loopne
dec
push
adc
xor
jmp
pop
cmp
icebp
jmp
sub
add
ficoms
add
nop
inc
adc
sbb
fwait
dec
jbe
popf
sub
and
pushl
mov
mov
ret
push
lahf
push
lcall
inc
rcrb
out
sbb
icebp
mov
and
lahf
imul
and
dec
xchg
jg
les
and
rorb
inc
cmp
lcall
stc
ss
jne
add
sbb
mov
xor
xchg
aam
es
cmpb
sahf
mov
xor
out
test
nop
mov
dec
mov
clc
push
fs
push
and
pop
js
into
adc
jae
add
stos
ds
or
mov
adc
jp
lahf
sti
test
mov
iret
pop
adcl
enter
xchg
mov
mov
xor
movsb
data16
sub
push
or
jb
imul
sti
daa
icebp
pop
int3
mov
mov
push
dec
repz
inc
and
cs
adc
add
fidivrs
daa
push
stc
sbb
lock
into
mov
sub
xchg
lock
sbb
xor
aas
mov
sub
ja
faddl
loop
pop
add
js
sbb
mov
xlat
mov
xchg
jg
or
stos
pop
fwait
sub
outsl
sub
fs
bnd
mov
and
adc
push
mov
in
int
pop
scas
xor
cs
in
fsub
dec
dec
lret
jle
std
fcompl
outsb
mov
iret
sarl
ret
add
mov
lods
scas
roll
adcb
es
jb
fdivrl
test
jle
test
movsl
rcrb
mov
mov
fdivrl
mov
cmpsl
test
lret
rcll
mov
inc
popf
add
sbb
inc
xchg
mov
pop
jns
test
test
mov
jp
dec
stos
shlb
jnp
nop
adc
outsl
inc
dec
in
sahf
jmp
mov
sbb
ss
push
pop
jmp
sbb
sbb
outsb
loop
cmc
ljmp
xchg
shrb
and
stc
call
jmp
add
or
ficomps
mov
test
cmp
push
rol
loop
or
mov
cmpsb
or
add
hlt
std
xchg
subl
loop
clc
cmp
ficoml
ja
rolb
push
repnz
xor
mov
aad
jg
sahf
sbb
mov
pop
rorl
insb
xchg
ljmp
arpl
cmp
mov
insb
mov
xor
dec
inc
in
rclb
and
xlat
pop
mov
xor
mov
cmp
sbb
sub
lret
movl
lea
into
sub
sbb
inc
test
in
mov
pop
jl
mov
repnz
aam
add
int3
jae
push
clc
cmp
lods
iret
inc
addb
jnp
add
push
repz
or
mov
cmp
in
loope
imul
jae
sub
sar
cmp
jb
pop
xchg
dec
mov
sbb
mov
cltd
lahf
test
ss
pop
sub
ret
dec
repnz
push
cmp
push
divl
and
mov
mov
ja
jnp
adc
xchg
sub
push
sub
adc
ret
adc
xor
roll
pop
push
dec
push
inc
xor
pop
xlat
push
pop
and
test
push
in
dec
in
notb
je
test
iret
mov
mov
xchg
jnp
mov
imul
mov
out
inc
lods
fsubrs
cwtl
mov
push
jmp
in
sub
hlt
lds
data16
lahf
xchg
and
gs
inc
xlat
cmp
jns
sub
adc
out
push
dec
shl
js
gs
in
icebp
cmp
mov
jb
or
mulb
mov
ret
rol
push
fsubs
sbb
mov
pop
aam
cwtl
push
jge
fcompl
dec
push
insb
pusha
cmp
repz
int3
add
daa
and
mov
jo
mov
or
fadd
aas
pop
stc
fwait
mov
cmpsl
rcrb
mov
dec
cmp
and
push
mov
data16
loope
out
sahf
repz
inc
stos
das
pop
sub
xor
xchg
mov
push
add
sbb
subl
jecxz
les
cmpsl
je
repnz
sub
out
xchg
enter
imul
mov
mov
pushf
lods
fildl
shll
pop
test
cltd
ljmp
xchg
ja
jo
sbb
sti
lds
jge
bswap
cltd
fadds
loop
add
mov
cmp
push
xor
push
iret
sbb
outsb
mov
test
inc
sbb
in
and
mov
lret
aad
dec
imul
or
jle
aaa
add
mov
lret
push
adc
cs
insl
mov
pop
pusha
cs
sbb
shlb
enter
push
jmp
in
fcmovnbe
jno
mov
test
in
outsl
jl
mov
int
sub
xchg
add
add
push
add
sub
lock
jmp
add
out
push
orb
jg
inc
xor
out
je
push
pop
dec
enter
mov
es
or
lods
je
movsb
fs
adc
out
lahf
mov
rcrb
dec
push
mov
mov
push
mov
outsl
mov
les
cmp
fidivrl
insb
mov
mov
xor
dec
insl
or
mov
outsb
xchg
or
sti
push
push
adc
inc
mov
jge
and
inc
int3
dec
sub
pop
cmpsb
pop
mov
pop
sti
mov
xchg
lods
push
iret
add
push
mov
sbb
mov
gs
cmp
aaa
cmp
test
sarb
bound
inc
lret
adc
xchg
cld
jmp
jae
push
and
fsts
add
mov
lret
pushf
jmp
in
outsb
int3
in
lods
loopne
jl
dec
movl
or
adc
cltd
mov
sub
ljmp
mov
rol
sub
fwait
mov
popa
cmc
sub
xchg
inc
push
lock
sub
add
popf
cmpb
test
icebp
leave
inc
stc
aam
mov
enter
pop
sarl
shl
aam
cmp
mov
mov
xchg
out
ds
and
outsl
popf
in
mov
popa
mov
scas
insl
stos
push
ljmp
jge
lods
sbb
lock
adc
fiaddl
cmpl
mov
out
jne
bound
es
les
ss
hlt
stos
ret
jb
popa
xchg
and
jg
push
out
int
adc
out
xor
stos
or
adc
push
ds
dec
or
or
xchg
pop
ret
flds
fs
loope
jno
frstor
pushf
test
inc
lods
mov
pusha
sbb
dec
scas
and
cmc
xor
push
xchg
rol
mov
jle
jbe
aaa
fcomp
add
enter
dec
push
push
lcall
movsb
jge
fsts
mov
je
aam
sub
nop
xor
lret
pop
mov
ret
jo
or
in
sti
inc
pop
dec
add
in
int
xor
mov
testl
dec
test
mov
inc
lea
mov
add
adc
in
and
arpl
repz
push
and
loopne
pushf
cld
push
and
imul
mov
mov
or
cmp
inc
and
sbb
jmp
les
sahf
ss
outsl
jne
adc
xor
mov
xchg
js
mov
sub
dec
cmp
jb
or
cli
mov
inc
jno
popa
mov
mov
jo
dec
addr16
and
mov
lock
ficoml
out
sbb
in
or
add
test
lret
mov
dec
jo
mov
jp
aas
rorl
xchg
test
or
fisttps
mov
mov
and
and
pop
lock
cmp
pop
mov
ss
mov
jmp
pop
cmp
dec
push
pop
push
jp
jae
lahf
xchg
and
sub
add
js
push
cmc
inc
shr
sub
sti
ds
mov
inc
inc
cs
dec
mov
jmp
sbb
shrl
add
jmp
xchg
dec
out
mov
xor
pop
loopne
out
jb
pushw
adc
cmp
pop
std
mov
or
jmp
nop
in
dec
xchg
mov
and
dec
jp
gs
jecxz
aas
push
stos
adc
pusha
rcl
sub
mov
sbb
inc
out
in
data16
cmpsl
pop
iret
mov
dec
int3
mov
cltd
ret
inc
adc
sub
adc
fidivs
in
loop
insb
nop
mov
mov
ret
imul
dec
loope
jnp
mov
cmp
pushf
in
icebp
addr16
lcall
fsubl
sub
pop
mov
sub
ja
xchg
adc
das
mov
add
xor
insb
rcrl
cmp
jge
fwait
out
mov
outsl
pushf
js
fcomps
pop
aaa
lret
sbb
mov
fists
mov
cli
shrb
notb
aaa
sbb
insl
jle
sahf
pop
cmp
or
or
outsl
sub
lock
scas
xor
repz
xchg
ja
popf
insb
loopne
push
dec
fdivl
inc
lods
cmp
iret
ljmp
clc
sbb
and
push
jl
pop
in
fwait
add
sti
ret
lahf
mov
pushf
repnz
add
jae
inc
xor
js
pop
xchg
out
sbb
ss
add
test
addr16
push
lds
cwtl
in
push
jno
dec
orl
popa
and
pop
mov
mov
mov
dec
and
jb
popa
or
pusha
jmp
lcall
and
imul
enter
fcmovnb
jmp
dec
and
lahf
mov
adc
adc
mov
sbb
mov
sti
lods
push
xchg
push
xchg
sub
hlt
daa
mov
xor
fcomps
stos
xchg
push
cmpsl
rorb
jl
pop
push
xor
cltd
les
scas
push
in
shll
ljmp
fsubp
mov
jno
stos
cmp
pusha
ljmp
mov
popf
xlat
inc
daa
mov
or
lahf
add
add
in
aad
adc
stos
xchg
inc
inc
pop
cmp
std
sbb
call
xor
xlat
aas
mov
mov
fwait
mov
add
leave
gs
or
jno
xchg
xchg
sbb
xchg
push
in
mov
sub
mov
test
or
jle
cltd
sub
sti
enter
add
dec
xchg
out
sti
js
cmpsl
mov
loop
mov
cmp
mov
xchg
sarb
jae
out
xor
stc
mov
sub
inc
fwait
mov
jae
mov
sub
and
inc
dec
push
lret
or
jb
lahf
mov
out
les
fldt
dec
aam
lods
pop
imul
arpl
xchg
fadd
pop
push
adc
cmc
popa
dec
popf
testb
dec
ret
and
scas
xchg
roll
and
push
mov
dec
sbb
adc
sub
enter
mov
shrl
xor
fsts
mov
insl
fwait
or
sbb
enter
cmp
bound
jg
fidivrs
jg
xchg
mov
into
outsl
xlat
sbb
shrl
jnp
lods
inc
jmp
mov
aam
iret
jno
or
mov
push
adc
xchg
fcoms
sbb
addr16
hlt
std
sti
xchg
dec
xorb
and
movl
inc
push
in
sub
andl
xchg
icebp
aaa
test
or
psrld
int
mov
or
notl
les
pop
xchg
cwtl
data16
popa
in
andl
push
pop
enter
mov
pop
pop
cli
sarl
addl
mov
cmp
cmp
adc
push
ret
dec
mov
dec
sub
push
and
sahf
jne
ss
popf
bound
mov
leave
push
cli
dec
mov
test
add
leave
cmpsl
std
and
inc
sahf
sbb
or
outsl
lret
cwtl
dec
inc
xchg
scas
push
loope
loop
dec
mov
dec
xchg
cmp
inc
cmc
popf
fsubrs
lock
sbb
lret
xchg
arpl
in
inc
iret
notl
cmp
lcall
les
mov
arpl
xchg
dec
clc
add
sahf
sahf
loopne
pop
std
popa
ret
xor
sub
jo
fnstenv
divl
mov
adc
jae
js
jg
nop
mov
andb
jno
or
push
movsb
or
imul
jb
adc
mov
icebp
in
jb
lds
fsubl
or
ror
cmpsb
leave
sbb
aas
xchg
push
test
ss
ret
lds
xchg
push
ds
jmp
add
aas
pop
aad
mov
pextrw
jp
xor
jno
add
cmpsb
xchg
fldcw
jbe
pop
insl
sbb
cmp
jecxz
mov
rcrl
popa
cli
std
mov
popa
pop
push
leave
sub
icebp
xchg
xchg
cmc
shrl
shlb
sub
imul
bsf
or
jb
mov
nop
xchg
gs
imul
dec
sarl
or
outsb
pop
jns
cld
movsl
iret
mov
hlt
xchg
leave
mov
inc
cmp
aad
xchg
in
leave
adc
jb
in
cmp
pushf
adcl
cld
filds
ds
push
push
xchg
dec
and
ret
scas
and
test
popf
jne
iret
jae
and
and
push
sbb
mov
sahf
adc
fistpl
out
int3
sub
std
sbb
arpl
out
sbb
jp
test
mov
aam
popf
cltd
cmp
add
cmp
fidivrl
insl
rcl
lret
pop
das
push
cmp
adc
sub
sbbb
or
subl
data16
sub
push
add
xor
push
jmp
aas
add
out
jns
or
out
mov
mov
sbb
ljmp
and
es
sbb
shlb
mov
mov
sti
stos
iretw
push
fsubl
jle
cltd
ror
lods
mov
fisttps
push
aad
cwtl
dec
jnp
cmp
out
ds
sbb
dec
xchg
cs
or
addb
and
push
push
sbb
nop
dec
fnstenv
push
imul
inc
push
fadd
out
jmp
mov
dec
loopne
mov
jb
mov
clc
jecxz
mov
popa
push
addr16
xor
xor
sub
xchg
stos
es
xchg
fs
sbb
pop
sub
xlat
std
mov
sahf
and
test
or
pusha
inc
ja
mov
out
pop
push
push
pop
or
int3
cld
insl
nop
cwtl
jecxz
mov
mov
cmp
cmc
fidivrs
add
scas
es
repz
jne
mov
dec
insl
rolb
daa
and
pop
in
pop
shrb
cli
mov
push
inc
or
push
mov
mov
cmp
ljmp
out
xchg
stos
aas
imul
enter
pop
ret
mov
jge
jp
into
scas
xchg
mov
cmp
mov
mov
aam
int
cltd
hlt
jns
mov
sub
fwait
scas
shll
xor
mov
xchg
cmpb
dec
or
push
dec
js
add
xor
insl
icebp
push
js
loope
outsl
sbb
cwtl
sub
adc
stc
cld
xor
ret
std
add
push
pusha
dec
mov
push
adc
jmp
iret
jne
cmp
sbb
in
data16
sbb
insl
inc
and
mov
mov
jo
inc
insl
icebp
inc
push
mov
push
mulb
ja
movsb
movsl
mov
test
mov
push
inc
jmp
lods
or
sbb
jg
test
xchg
rclb
sbb
int
add
in
xlat
mov
add
jle
lock
jl
ds
and
push
movsl
dec
jno
and
bnd
cmp
jo
fstp
nop
inc
addr16
jb
gs
pop
sbb
jno
insl
ja
stc
pop
imul
mov
cmp
lcall
outsl
xchg
mov
test
shlb
in
mov
xchg
sbb
movsb
sarl
and
stos
cwtl
lret
xor
mov
jnp
sbb
mov
cmc
lahf
xor
fcom
sbb
mov
sti
jle
xchg
or
out
dec
and
inc
sub
inc
lea
out
es
or
xlat
mov
jne
jae
jge
orb
push
jp
jg
jbe
add
daa
mov
hlt
pop
and
inc
ja
jne
call
dec
cmp
push
sub
mov
push
loopne
mov
sub
icebp
rcrb
dec
loopne
loope
xchg
and
nop
cmpsl
sbb
jae
sbb
xor
out
mov
cmp
and
inc
shll
ja
lcall
dec
loope
mov
dec
in
mov
pusha
orl
pusha
dec
inc
fidivrs
pop
mov
jns
mov
lcall
pop
mov
dec
mov
enter
and
and
rorb
sub
daa
in
ret
test
fwait
mov
aaa
ret
gs
in
xor
push
filds
fcoms
dec
cmovp
jg
sub
cmp
mov
loopne
ja
pop
les
cwtl
dec
xlat
jae
sbbb
mov
jl
sub
out
sub
push
inc
icebp
sub
dec
add
mov
xchg
adc
out
jge
push
cmpb
shlb
shrb
bound
mov
daa
out
pusha
adc
lahf
icebp
lock
roll
scas
inc
push
popa
push
rcrb
add
ret
test
mov
cltd
mov
inc
mov
frstor
mov
pop
ret
pop
pop
nop
stos
insb
mov
gs
or
add
ret
lcall
lds
push
sub
inc
sbb
jl
or
xchg
cmpsb
mov
stos
call
xchg
adc
fcmovnu
cmpsl
lahf
mov
fwait
xchg
xchg
mov
pop
nop
aaa
je
or
test
out
xor
leave
push
fisubrs
push
dec
sti
sbbb
mov
xor
fimuls
flds
int
popa
ja
push
jno
sub
mov
mov
mov
data16
neg
scas
addb
cmp
xor
xlat
sbb
cmp
lock
jae
mov
or
cmp
or
mov
cmpsl
in
dec
idivl
lret
hlt
mov
stos
xchg
pop
data16
insb
leave
jbe
out
hlt
pusha
jecxz
mov
jnp
mov
jp
movsl
jl
mov
insl
jb
push
and
or
xchg
and
shl
push
mov
mov
cmc
aam
adc
push
and
or
or
xchg
adc
orl
and
les
movsb
dec
aas
xchg
mov
out
sub
jecxz
push
inc
jae
and
std
scas
test
clc
sahf
sbb
loop
push
lret
push
daa
xchg
rcl
cld
hlt
push
and
cmp
loope
inc
fmul
pop
push
rcrl
scas
iret
bound
fs
sbb
xchg
cmp
inc
mov
js
add
lahf
lods
adc
ret
ret
dec
fldenv
mov
imul
xor
iret
cld
mov
and
mov
mov
inc
mov
out
fisubs
xor
rorl
xor
lret
jbe
mov
cmp
fldcw
hlt
fcompl
jbe,pn
adc
out
jmp
addr16
es
aad
push
mov
adc
jle
jl
pop
cmc
std
xchg
pop
loope
cmp
jp
iret
mov
cmp
push
fcomps
xlat
js
outsb
dec
dec
jns
or
imul
xchg
in
fwait
out
sbb
ja
pop
pop
aas
aas
mov
cmc
fnstsw
in
push
test
pop
dec
cli
pop
jecxz
xor
stos
and
je
sbb
dec
xor
mov
test
loopne
scas
scas
mov
mov
nop
imul
fwait
repz
push
ret
push
insl
ret
out
inc
inc
jb
adc
push
int3
movsl
dec
loope
or
scas
lods
mov
je
les
outsl
mov
test
cmp
adc
stos
movl
js
pop
fxch
or
add
aaa
iret
aas
je
ljmp
in
mov
jae
dec
jno
jge
ja
arpl
mov
iret
and
jb
fidivrs
mov
btr
xchg
or
push
aaa
jp
fs
aam
sbb
mov
adc
cmpsl
aad
adc
jo
or
lods
jb
pop
aam
bound
mov
popf
imul
in
pusha
mov
mov
dec
mov
int3
roll
pop
xor
or
mov
and
das
pop
ret
test
push
adc
movsl
je
pop
xchg
nop
loop
cltd
and
xchg
dec
loop
or
pop
push
pusha
inc
sub
insl
and
xor
xchg
inc
jo
push
or
pop
cmp
sbb
mov
jl
test
and
jl
jo
fimuls
xor
cmpsb
add
inc
imul
aaa
cmp
and
sti
and
xchg
fsubs
xlat
push
push
ja
fwait
or
pop
xor
out
jne
outsb
lock
adc
testb
jns
lock
ret
stc
insb
xchg
gs
mov
xchg
xor
jg
outsb
jnp
int
rol
ret
stos
cmp
mov
das
roll
or
daa
add
push
add
outsl
int3
xor
repnz
inc
push
rclb
insl
enter
pop
cmpsl
sbb
pushf
into
mov
push
ljmp
inc
cmpsl
repnz
xchg
add
lds
mov
cmc
cmp
test
jge
imul
mov
cwtl
pop
gs
xor
mov
rclb
xchg
mov
shrl
insl
cmp
xor
leave
imul
jae
sbb
mov
repnz
aaa
push
repz
roll
jg
jge
aad
scas
push
adc
or
xor
push
sub
addr16
cmpsb
pop
adc
pushf
mov
out
mov
cwtl
cli
rorb
sbb
lods
scas
sarl
or
jp
rcrb
inc
stos
jg
sub
adc
push
inc
je
hlt
pushl
sahf
inc
shll
add
jl
push
cltd
adc
mov
sbb
stos
adc
or
or
adc
xor
pop
xchg
out
cmpb
mov
cli
jp
enter
jae
insb
jecxz
add
xor
cmp
ror
pop
jbe
lea
lret
std
fistpl
jb
js
mov
call
int
xchg
jge
mov
lods
xchg
jecxz
in
mov
jl
jl
lock
pop
out
and
pop
push
mov
ja
push
in
adc
aaa
jnp
cmpl
loope
ja
pop
mov
mov
loopne
testl
inc
xchg
inc
es
sarl
out
mov
adc
push
add
enter
xor
adc
test
mov
jno
loopne
push
push
pop
mov
push
shll
outsl
sar
mov
xchg
sbb
inc
out
pop
cmc
sbbl
pushf
and
xor
aas
inc
dec
shlb
lcall
xchg
fs
lds
imul
ja
sbb
insb
push
jo
in
cmp
divl
cli
insb
xchg
loopne
fs
push
aad
xor
bound
leave
dec
pop
in
int
mov
int3
push
data16
sbb
addl
sarl
lgs
stos
sarl
add
sub
add
in
lahf
enter
std
or
out
sti
dec
push
addb
pop
inc
mov
and
mov
add
xorl
dec
test
mov
inc
inc
jbe
add
jmp
into
cs
xchg
cmp
shl
push
icebp
out
xchg
mov
ljmp
jne
iret
or
xchg
icebp
cmp
or
push
jge
xor
inc
sub
push
out
pop
xchg
inc
leave
dec
shl
clc
and
popf
inc
insb
ljmp
push
cli
mov
pop
or
cmp
in
mov
sub
adc
mov
mov
mov
jb
loopne
js
and
cs
mov
adc
cld
popa
xchg
in
les
add
add
gs
dec
mov
adc
mov
xor
dec
jmp
les
les
outsl
out
cld
jae
out
ds
jp
ljmp
clc
popf
xchg
push
push
push
shrl
sti
jnp
popa
pop
jmp
pop
dec
scas
ret
mov
sbb
xchg
push
xchg
push
sti
stos
inc
sub
mov
insb
dec
cmpsb
stc
scas
lods
sbb
pop
xchg
call
xor
pop
dec
mov
sbb
push
sti
jno
add
xchg
xchg
xorl
add
insb
dec
fistps
add
jle
daa
out
xor
push
testl
and
scas
insl
mov
into
shrb
mov
ret
cmpl
js
adc
mov
ds
enter
dec
cld
dec
push
bound
dec
mov
test
mov
movsl
mov
mov
in
push
push
mov
mov
jle
das
sbb
lods
xor
jo
repz
jns
fisttpl
shrb
push
push
push
dec
imul
sbb
loop
adc
outsl
cmpsl
xchg
das
ss
mov
mov
dec
push
fwait
jl
shlb
gs
sbb
dec
aam
in
mov
pop
jecxz
lcall
xchg
cltd
xchg
pop
mov
dec
inc
imul
jle
ljmp
fwait
add
and
pop
push
push
sub
popa
pop
dec
jmp
xchg
jb
mov
addl
mov
mov
in
mov
or
daa
dec
mov
xchg
arpl
gs
mov
mov
push
or
scas
jno
test
clc
sub
mov
nop
jge
inc
mov
xchg
das
jge
std
mov
out
addb
push
in
mov
das
in
aas
adc
add
stos
jmp
cmpsl
push
pop
sub
daa
mov
push
inc
and
adc
cmc
xor
sbb
pop
es
xchg
inc
es
cmp
test
push
xchg
mov
mov
movsl
mov
xchg
nop
cwtl
cs
dec
add
pop
xchg
cmc
pushf
push
loop
mov
das
ja
cmc
movsl
daa
pop
cmpb
sub
push
and
mov
cmp
sbb
ds
mov
stos
jg
in
xchg
jne
outsl
mov
push
and
add
mov
dec
into
testl
mov
movsb
add
adc
filds
mov
pusha
into
mov
mov
inc
mov
outsl
pop
xor
add
pop
cmp
pop
sub
dec
fdivr
stc
stc
es
xlat
loopne
fnstsw
mov
and
dec
aad
lea
mov
add
push
jne
cmp
pushf
sti
mov
lods
mov
das
pushf
es
lahf
pop
shrl
scas
out
mov
mov
insl
inc
mov
movsb
or
cmp
and
daa
jb
fldenv
shrl
popf
lock
or
xchg
fucomi
cmp
mov
push
notb
jno
decb
daa
gs
ss
mov
fcom
sub
mov
incl
push
sbb
jo
loop
ds
hlt
mov
shrl
xchg
in
rcl
dec
or
in
in
loopne
das
dec
push
push
sub
lcall
iret
mov
aas
mov
dec
fistpl
sub
das
test
jo
sbb
sbb
loop
clc
call
out
jp
pop
sub
out
lods
dec
lret
push
popf
or
out
mov
outsl
loop
adc
inc
xorl
mov
sub
in
xchg
ds
xchg
out
jno
sub
mov
fucomip
dec
jl
int
mov
mov
mov
stos
and
dec
lret
ret
pop
sbb
fsubl
dec
jae
adc
ret
out
inc
movntq
inc
fisttpl
mov
or
push
inc
push
insb
push
test
cld
xlat
jle
jns
cmp
test
mov
mov
lock
jl
movsl
rdpmc
insl
sti
divl
cmc
adc
repz
aam
aaa
inc
sarb
push
xor
ljmp
cltd
and
xchg
and
sbb
bound
pop
outsb
inc
dec
push
xor
cltd
iret
dec
inc
and
fldl
dec
stc
out
fs
lret
divl
sahf
bound
in
cmp
cmc
mov
ja
mov
lahf
jle
inc
jge
push
jp
mov
fsub
mov
test
cmp
cmp
lods
clc
jle
fstps
loop
flds
aad
nop
xchg
adc
out
jecxz
jmp
daa
xchg
mov
xchg
pop
inc
dec
arpl
and
rclb
xchg
xchg
jbe
nop
les
mov
sub
movsl
es
icebp
lcall
call
int
nop
filds
jno
push
sbb
rcll
fcompl
push
sbb
dec
xor
clc
jcxz
mov
lods
mov
mov
adc
addr16
push
ffreep
mov
notb
stos
mov
dec
sub
pop
hlt
or
int
into
lcall
or
mov
cmp
cmc
dec
jo
pop
mov
test
pop
mov
aas
dec
js
jbe
notl
jge
mov
mov
imul
mov
insl
and
sbb
fcomps
mov
sbb
cltd
dec
lea
loopne
jno
inc
push
sub
icebp
cmp
xchg
dec
test
cmp
and
or
jne
and
in
test
mov
pop
cmp
in
sub
test
and
clc
fiadds
xchg
pusha
cmp
lcall
xor
hlt
lods
mov
out
jbe
test
push
and
test
test
aas
mov
adc
rcrb
cmpsb
mov
inc
loope
test
rcll
xchg
fisttpll
loop
inc
out
das
xchg
adc
adc
in
xchg
inc
xchg
pop
add
sarl
jle
sti
push
jne
shlb
and
inc
idivb
data16
mov
mov
int3
cltd
xchg
stc
scas
mov
popf
in
mov
idiv
ljmp
imul
mov
adcb
mov
and
test
fxsave
push
inc
fmull
xchg
sbb
xor
aaa
or
call
gs
jge
adc
push
ss
sub
into
shll
sti
ljmp
push
mov
xchg
xor
out
jl
fists
stc
sbb
jmp
ret
cmpsb
int3
stos
call
jns
or
pusha
jns
push
ljmp
mov
mov
or
cmp
stos
xor
out
into
mov
ljmp
inc
mov
sbb
ja
scas
sbb
jno
pop
aam
dec
mov
pop
xchg
mov
in
mov
andl
fsubs
sbb
popa
sub
les
dec
test
cwtl
out
sbb
mov
jg
loop
pop
jb
sbb
mov
ljmp
mov
push
sub
add
dec
fiadds
into
dec
jle
add
cs
jne
jnp
sub
out
push
cltd
inc
pop
pop
or
es
mov
sbbb
push
mov
scas
leave
shrl
out
fists
xchg
in
cltd
push
cmp
and
lods
lcall
push
push
dec
xchg
into
mov
call
dec
add
mov
imul
dec
adc
sbb
mov
leave
in
rorl
adc
inc
xor
aam
push
lahf
add
jae
ror
stc
jb
mov
adc
daa
cltd
cmp
jo
outsb
mov
fdivl
pop
addr16
std
and
insb
hlt
pop
in
add
fs
jp
pop
inc
xchg
pop
call
jb
cwtl
fxch
mov
sbb
dec
lret
jmp
out
sarb
or
xor
inc
ret
sub
inc
push
in
xchg
in
mov
les
xchg
repnz
outsl
pop
leave
mov
add
scas
xor
cs
push
test
push
into
rorl
pop
aas
push
sbb
iret
add
mov
add
dec
es
inc
sub
xor
adc
test
rcrl
mov
xchg
dec
lods
dec
mov
xchg
push
jae
sbb
mov
and
sbb
inc
iret
lahf
jno
loopne
push
cltd
sbb
fst
xchg
in
jno
sti
rolb
adc
subb
add
adc
xor
xor
xor
dec
test
loop
add
stos
icebp
dec
jmp
or
mov
mov
hlt
lock
jb
movsl
mov
jne
push
fisubrl
lds
sti
test
jp
scas
cld
movsb
dec
adc
out
fwait
push
inc
shlb
addr16
pop
movsl
fsubs
mov
stos
and
scas
inc
cs
bound
pop
mov
ret
dec
cmp
adc
fs
and
mov
subb
and
cmp
push
hlt
cmc
shr
lods
fmuls
cld
cmp
aas
ljmp
xlat
js
mov
ds
push
addr16
cmovge
or
xchg
idiv
pop
hlt
cli
add
ret
or
ljmp
push
add
in
lds
js
ret
enter
cltd
aam
fdivs
adc
jmp
pushf
mov
sbb
lea
jp
pusha
fcoms
xor
sbb
cs
pop
mov
xor
aad
mov
xchg
je
and
movsb
mov
and
mov
pop
pop
fsubrl
ljmp
inc
add
scas
jmp
pop
dec
adcl
mov
jns
outsl
jae
lret
lea
mov
bound
adc
inc
sbb
jle
push
jo
call
mov
in
lock
mov
and
jle
into
mov
sbb
sahf
adc
mov
adc
jb
fwait
dec
jns
shrb
sarl
and
sbb
mov
push
repnz
xor
cmp
mov
in
nop
test
mov
test
shll
enter
mov
sti
fnsave
movsl
inc
pop
cltd
xor
je
jbe
popf
mov
jno
xchg
mov
push
lret
les
push
xchg
cmp
je
adc
jno
xchg
out
sbb
sub
movsb
cmpsb
and
out
and
in
das
popf
into
jb
jecxz
cmc
test
and
dec
aad
inc
push
push
cwtl
movsb
cmp
je
adc
sahf
arpl
jb
pop
or
addr16
sbb
lock
cmp
aam
call
lret
sub
inc
pop
jecxz
sbb
mov
arpl
add
mov
hlt
aaa
jae
inc
mov
inc
stos
rcll
adc
pop
ja
xchg
ja
pop
clc
pop
inc
data16
mov
roll
cmp
sbb
popf
xchg
mov
xchg
aad
xchg
je
sub
mov
jp
icebp
cmp
mov
cmp
addr16
xchg
addb
cmp
aad
pop
add
pusha
fsubl
or
dec
ficoms
xor
jnp
mov
dec
lcall
icebp
xlat
enter
ret
js
popa
cmpsb
pop
pop
push
push
inc
movsl
outsb
fs
clc
and
mov
sub
adc
shll
mov
cmp
xlat
out
pop
out
in
push
outsb
pop
jno
mov
lds
pop
cmp
mov
mov
cmpsb
inc
add
out
xchg
data16
pop
and
nop
or
fucomip
push
add
mov
mov
push
push
add
out
add
loope
stos
push
jge
xor
xchg
sarb
cmpsl
jns
xchg
cmp
dec
sub
outsl
push
xor
cld
mov
inc
ljmp
adc
adc
mov
and
push
loope
nop
mov
call
adc
inc
loopne
lret
push
adc
xor
add
and
or
mov
push
xchg
sbb
movsl
xor
test
push
in
jg
adc
push
cwtl
into
jnp
cs
mov
mov
test
xor
fistps
lcall
push
mov
bound
and
lods
xor
or
jb
lods
pop
cli
insb
in
cs
leave
mov
mov
add
cmp
clc
cld
inc
push
push
adc
loopne
popa
test
sub
pop
cmp
mov
into
pop
jo
xchg
hlt
adc
push
push
movsb
or
imul
push
mov
jb
sbb
or
jle
or
dec
movsl
movsl
sar
jb
call
adc
xchg
imul
cltd
and
test
repnz
jne
lea
jno
stos
movl
adc
pop
push
jne
add
jecxz
xor
adc
dec
dec
scas
dec
sbb
pop
inc
and
fcompl
or
sub
lods
and
sbb
and
sbbb
fs
fwait
mov
xchg
cmp
popa
jecxz
dec
and
jne
cmp
test
adcl
dec
bound
inc
nop
or
push
enter
xchg
imul
int
scas
movsb
xchg
mov
loope
dec
jne
lahf
out
arpl
xchg
push
popf
cli
push
inc
push
push
adcl
arpl
fcoms
xchg
push
pop
gs
mov
out
cli
push
mov
lea
jmp
cmove
xchg
shlb
test
cmpsl
pop
call
xchg
cmc
mov
or
sti
adc
pushf
popa
mov
cli
iret
ds
xchg
ret
xchg
lock
and
ds
jnp
mov
jno
push
daa
in
and
fistpl
test
sub
nop
lahf
lods
push
xchg
stc
sahf
lea
and
arpl
adc
jle
adc
pop
sub
out
pushf
mov
mov
mov
outsb
popa
and
xchg
lds
inc
imul
xlat
sub
mov
test
stc
or
push
sub
xchg
mov
sbb
nop
or
jmp
stos
lods
pop
fbstp
xlat
ficompl
mov
enter
shll
dec
cli
ficoms
sub
gs
mov
dec
mov
mov
sbb
popl
pushf
sbb
dec
adc
add
add
je
ss
data16
aad
xchg
into
sbb
cmp
bound
hlt
mov
mov
or
fistps
inc
out
xchg
outsl
std
call
fs
cmpb
pop
lcall
or
and
adc
int3
fdivr
xor
adc
movsl
out
das
or
mov
xor
cmp
lock
adc
in
adc
xorb
xor
ljmp
jg
lcall
mov
xor
add
decb
add
or
repz
push
jns
in
pop
jmp
pop
std
repz
add
cwtl
pop
cmpsl
mov
stc
mov
cmp
jbe
stos
jge
xor
pop
clc
lea
mov
or
mov
push
push
cmpsb
pop
add
xchg
imul
sub
lods
lahf
lods
add
fldl
test
dec
jle
hlt
pop
push
mov
jns
out
scas
cmpsb
or
dec
and
push
lret
jb
movsb
sbb
addl
and
cwtl
lock
test
cli
dec
fidivl
fbstp
imull
lahf
inc
push
lea
rcrb
and
xchg
or
js
iret
jl
adc
xor
mov
add
adc
and
dec
in
dec
test
mov
pop
shll
out
pop
jge
hlt
mov
sub
sub
fcompl
aas
dec
mov
lods
jb
rclb
mov
jg
xor
pushf
xlat
mov
xchg
mov
xor
xchg
pop
xor
cmp
ret
test
pop
inc
xchg
adc
dec
outsb
ljmp
adc
xor
mov
insb
iret
xchg
mov
outsb
xor
jno
int3
bound
std
ret
and
push
stc
xchg
loopne
mov
push
pop
jecxz
jge
dec
cmp
sbb
cmp
hlt
adcb
push
inc
jo
pop
insl
sub
out
push
loop
pop
cmpsb
loop
in
dec
mov
add
int
push
jne
sub
lods
xchg
adc
test
out
xor
sarl
sub
fcoml
std
jecxz
loop
mov
mov
xor
stc
mov
in
mov
xchg
and
out
or
fsubl
sub
xchg
xchg
cli
sub
movsl
mov
out
jbe
adc
and
fwait
and
inc
inc
or
mov
xlat
enter
nop
cmp
jb
xorl
adc
jge
push
fdivrs
lock
cmp
push
pushf
in
stos
mov
shll
push
ficompl
xor
enter
fdivr
ss
imul
mov
out
ret
faddp
std
imul
mov
int3
mov
data16
sbb
ljmp
cmp
andb
or
jp
cmp
hlt
or
jmp
pop
es
in
sbb
lahf
add
xlat
inc
mov
outsb
inc
loopne
xchg
call
dec
sub
inc
inc
add
sti
push
test
out
adc
in
and
jp
xor
mov
shlb
pop
daa
add
mov
lcall
jbe
adc
sub
sub
push
dec
mov
les
mov
std
cmp
lock
mov
or
cmp
aad
sub
dec
mov
adcb
loopne
dec
in
pop
adc
cmp
mov
shlb
xor
imul
inc
repnz
in
out
ret
lds
outsb
out
xchg
mov
clc
lret
insb
shrb
sti
outsl
fimull
mov
pop
mov
and
xorb
int3
addr16
sti
xor
pop
mov
ss
jbe
aad
sbb
lret
int3
je
sub
pop
pop
ljmp
xchg
adc
mov
mov
out
push
divl
or
jo
add
xchg
mov
xchg
push
mov
ljmp
insl
pop
inc
in
add
push
sub
pop
and
gs
and
dec
sbb
shlb
in
rcr
cmpb
insb
adc
sub
sub
lds
aam
cmp
je
inc
jl
mov
rcrb
fs
lret
pop
data16
pop
mov
mov
xor
add
jns
mov
test
push
mov
repz
sahf
movsb
dec
jecxz
or
and
cs
cld
mov
jno
push
test
jecxz
sub
pushf
add
add
fs
insl
insb
pop
xchg
test
push
test
fbstp
sbbl
dec
mov
mov
mov
je
insb
push
and
mov
mov
filds
adc
je
xchg
sahf
cltd
mov
sar
jp
xchg
xor
cmp
popf
cmpsl
hlt
cmp
cs
xchg
adc
or
xchg
or
ljmp
mov
adcb
loope
fdivl
lods
push
inc
mov
mov
insl
lahf
fwait
mov
int
fldcw
in
cmp
cwtl
in
or
in
lods
mov
sub
pop
jge
jle
jnp
dec
test
lds
insl
jle
icebp
js
test
ss
das
imul
cmp
stos
outsb
sahf
push
dec
add
or
enter
adc
cli
or
dec
jp
cwtl
adc
mov
jle
ljmp
stos
ljmp
test
aad
insl
aad
inc
gs
fs
xchg
pop
xchg
pop
pop
repnz
les
rcrl
into
mov
das
andb
xor
test
fwait
rcrl
jnp
inc
push
sub
and
mov
iret
mull
out
outsl
jg,pt
push
sbb
cvttps2pi
sbb
ficoml
cs
lcall
xchg
xchg
cmpsb
dec
xchg
dec
stc
and
bound
cld
popf
aaa
mov
popf
pop
jae
xchg
xchg
mov
stc
cmp
push
add
lods
cmp
imul
or
fld
jecxz
out
test
addr16
add
adc
sub
mov
sub
adc
inc
stc
jl
pop
js
insb
add
cli
sub
mov
loop
and
adc
shl
xchg
jnp
xchg
dec
ret
loopne
test
lock
cwtl
or
call
loope
adc
fs
pop
jne
sbb
sub
jno
xchg
shrl
nop
cmp
int3
push
popl
cltd
mov
or
dec
mov
push
lcall
or
pop
cmp
mov
loope
out
or
push
mov
int
fnstenv
xor
inc
adc
into
loop
xor
movb
mov
xor
push
push
dec
fxtract
jae
jl
inc
dec
movsl
es
jge
int
dec
mov
mov
push
imul
jecxz
movswl
adc
push
out
or
mov
ficomps
notl
sbb
push
adc
stos
jl
mov
pop
pop
out
fbstp
addb
sahf
loop
fwait
mov
movsb
imull
call
adc
test
mov
int
mov
mov
add
adc
call
or
xchg
dec
and
mov
pop
dec
add
sbb
in
addr16
pop
mov
inc
pop
adcb
enter
aam
pop
es
sub
lea
push
pusha
fidivrl
and
int3
push
int
pop
movsb
scas
pusha
mov
push
jbe
ja
scas
mov
mov
sub
addr16
adc
ljmp
lret
in
sbb
pop
movsl
test
mov
sbb
add
inc
jno
sbb
nop
leave
addr16
pop
pusha
cmp
dec
push
inc
je
xchg
hlt
adcb
cld
jge
add
jae
mov
dec
xor
push
ss
or
mov
jecxz
jle
mov
shlb
pop
mov
inc
sub
xchg
push
mov
push
xor
imull
or
push
sbb
xor
lods
sub
mov
aas
clc
fimull
pop
das
ja
test
mov
adc
stos
mov
mov
jno
fldpi
imul
push
les
std
lret
cmp
divb
jns
push
loop
fwait
shl
scas
sbb
sbb
lea
mov
mov
repz
mov
xlat
int3
scas
push
out
mov
jmp
pop
or
xchg
mov
jle
inc
jecxz
xor
inc
inc
aad
aam
insl
rol
fwait
mov
and
inc
jle
imul
ljmp
sbb
test
sbb
std
sub
out
out
ja
and
cmp
mov
or
cmp
mov
leave
sbbl
out
xchg
shrb
lcall
pop
nop
es
stos
pop
xchg
icebp
add
and
fldcw
loope
xor
in
leave
xor
fadds
pop
dec
andb
pop
test
pop
mulb
es
shll
iretw
xorb
push
mov
mov
push
mov
adc
jae
mov
mov
movsl
scas
cmpsl
pop
mov
and
movb
push
xchg
cmp
psrld
ret
sbb
scas
jl
adc
adc
subb
lea
add
nop
pop
push
inc
xchg
repz
mov
sbb
movsb
iret
rcr
int3
push
andl
lcall
xchg
and
xchg
cwtl
xchg
mov
jmp
hlt
imul
sub
arpl
mov
add
xlat
divl
mov
mov
add
push
jnp
xor
cmpl
mov
xorb
add
shrb
enter
xchg
jbe
dec
inc
test
adc
and
ds
pop
or
roll
in
push
mov
push
test
mov
fdivrp
pop
vmread
mov
jnp
sub
stos
mov
std
and
and
ds
inc
stos
test
rclb
mov
xor
popf
cmp
ret
lcall
into
inc
fcom
mov
dec
sbb
dec
mov
lds
mov
daa
mov
mov
fstpl
mov
pop
and
push
mov
nop
mov
mov
sbb
jle
in
inc
int
mov
pop
mov
jb
insl
inc
sub
or
rcll
xlat
insb
push
repz
xchg
and
decl
push
mov
push
mov
lods
mov
or
push
mov
loope
xchg
fwait
addr16
lds
out
in
je
and
add
jnp
test
mov
inc
xchg
and
ljmp
mov
fsubrp
adc
test
pushf
pop
add
xchg
jecxz
jecxz
jo
es
orb
jno
sub
dec
scas
or
add
mov
in
xchg
cmc
add
adc
popf
neg
cwtl
sub
mov
cmc
test
sti
mov
test
inc
xchg
or
mov
and
das
daa
mov
cltd
pop
jge
and
cmpsb
imul
jbe
jecxz
xchg
stos
rep
push
jl
mov
insl
mov
jmp
mov
leave
add
rorb
inc
jno
xchg
leave
pop
std
pop
xorb
pop
inc
fs
jp
test
sbbb
in
xchg
shlb
pop
aad
xchg
imul
mov
and
push
adc
mov
sub
mov
mov
test
pop
test
enter
enter
pop
inc
mov
jp
outsl
pop
in
inc
xchg
push
ret
fcmovb
jecxz
mov
aam
rcll
pop
mov
xor
adc
test
add
cltd
mov
cmp
xchg
aad
nop
int3
dec
xchg
repz
icebp
loopne
mov
out
lcall
mov
incb
outsb
add
in
mov
mov
dec
cmp
filds
incb
dec
insl
ret
jo
mov
leave
xor
sub
mov
out
mov
gs
jne
or
jb
daa
stos
push
sub
repz
pop
cmp
mov
int3
xor
test
les
pop
mov
es
int
jbe
sub
add
push
add
ljmp
pop
add
dec
adcb
clc
xor
in
cmp
leave
jge
mov
mov
out
das
sub
insb
repz
and
imul
pushl
mov
adc
clc
ja
sub
push
arpl
cmp
sarl
mov
in
cwtl
add
push
mov
sahf
div
fistl
mov
lahf
stos
or
inc
push
inc
jg
mov
aad
movsb
jne
subb
or
aam
rolb
addl
fucomip
cmp
xchg
repnz
enter
sub
xchg
push
push
mov
fbld
mov
iret
xchg
cmpsl
pop
or
sub
aam
pmulhw
xchg
add
and
dec
mov
push
sbb
or
xlat
aad
xor
xor
jecxz
aad
pop
lods
pop
nop
and
mov
add
jo
push
xor
push
sbb
sub
in
fisubl
xor
cld
loop
dec
adc
popa
subl
push
jl
aaa
insb
mov
filds
nop
popa
arpl
clc
clc
dec
scas
jne
and
jae
pop
mov
dec
jl
inc
xor
push
xor
cmp
dec
mov
jl
jae
shlb
dec
dec
cmp
add
mov
mov
sahf
jno
lods
jnp
cli
jmp
nop
mov
iret
xchg
jl
mov
lds
pop
arpl
in
mov
popa
xchg
js
lea
add
inc
mov
cmp
cmc
pop
sbb
movsl
lret
or
lahf
xchg
psubusw
pop
mov
push
xchg
pop
fstps
call
jmp
fcoml
dec
lahf
fwait
mov
xchg
jmp
pop
loop
jge
and
mov
rcrl
inc
xor
icebp
inc
push
rorb
jne
jle
mov
in
mov
sub
xor
mov
mov
sub
xor
das
cltd
mov
dec
inc
sub
mov
jnp
insb
gs
loopne
stos
cmp
stos
jnp
nop
arpl
xor
push
xchg
dec
imul
aad
rcl
jg
sbb
daa
lcall
sbb
mov
jb
ljmp
ror
xchg
imull
inc
call
imul
push
mov
cltd
stos
adc
int3
adc
into
or
and
scas
cwtl
add
cmp
mov
movsb
adc
js
dec
inc
lcall
cmp
mov
lcall
icebp
mov
test
pop
mov
sub
ds
jnp
add
mov
cmpsl
cltd
cld
pop
stos
daa
cmpsb
mov
push
lret
dec
jnp
lahf
inc
cmp
push
pop
bound
ds
test
push
in
and
fisttps
outsb
mov
xchg
sub
loopne
mov
int
fistl
mov
shll
sbb
or
outsb
movb
mov
mov
pop
push
xchg
xor
cmp
lock
cmpsb
or
mov
incb
dec
testl
sub
xor
sti
sbb
mov
mov
and
fwait
jns
mov
cwtl
das
or
jb
adcb
sub
lods
movsb
bound
cld
push
ja
add
stos
das
dec
or
loopne
fidivrs
jb
enter
sarl
and
sub
sub
lret
add
in
sbb
clc
or
aam
shrl
dec
lret
jmp
fwait
add
adc
in
cmp
mov
dec
pop
dec
xor
pop
sub
and
dec
imull
and
jbe
and
mov
mulb
push
sub
stos
iret
or
xorl
jnp
stos
xor
lods
repz
int3
mov
jnp
sub
push
inc
xor
pop
pop
daa
jg
inc
ljmp
rcll
adc
sbb
rolb
ss
and
fcoms
mov
push
ret
dec
adc
dec
mov
sti
in
pop
lret
mov
notl
jns
sub
or
daa
mov
rcr
aam
and
pushf
js
stos
adc
cmp
mov
jecxz
repz
test
and
jmp
cld
fldt
filds
je
lock
call
jb
flds
sbb
sub
xchg
mov
inc
rolb
icebp
and
push
inc
divl
loop
push
mov
fnstenv
mov
jae
icebp
in
push
addr16
add
std
sub
out
aas
jno
xor
push
bound
pop
pop
imul
outsl
mov
inc
scas
mov
and
mov
sub
imul
jb
test
and
clc
int
pusha
jae
jo
repnz
rcl
xor
je
mov
push
outsb
subb
std
dec
dec
hlt
int3
lods
dec
push
or
movsl
cmp
xchg
popf
add
pop
adc
mov
mov
xlat
mov
pop
ljmp
loop
sub
mov
and
es
enter
and
mov
loope
in
push
lods
dec
cmp
mov
aam
pusha
inc
sub
sbb
cld
xor
int3
lock
cmpsl
dec
fwait
hlt
test
inc
stos
cmc
jg
jno
cmp
sub
outsl
aaa
imul
cld
and
adc
mov
push
iret
mov
lret
mov
in
movsb
push
cld
stos
dec
decb
dec
test
mov
jns
sbb
push
xchg
mov
jns
mov
aaa
pop
shl
sbb
sub
sub
cmp
and
and
dec
pop
dec
inc
xor
adc
cltd
adc
sub
sahf
sub
jmp
mov
jbe
pop
inc
pop
jne
js
rcll
shlb
mov
outsb
push
fnstcw
aam
pop
adc
insb
cmp
add
xor
arpl
fcmovnu
lea
jnp
cmp
fwait
in
jnp
rorl
sahf
out
loop
adc
mov
addr16
mov
lret
xor
mov
push
aam
sbbb
loop
clc
and
enter
inc
push
xchg
addb
clc
adc
xor
push
lods
je
cmpl
fmul
mov
call
enter
lret
sahf
test
sbb
push
xchg
stos
mov
and
add
add
push
cmp
cs
std
and
lea
iret
push
sub
das
out
pop
iret
mov
mov
aaa
jno
or
jmp
push
out
pop
inc
jne
sub
xchg
jp
cmpsl
je
and
jb
stos
in
pop
fmuls
aad
cwtl
push
inc
jns
cmpsl
cmpl
into
pop
xchg
or
fidivrs
jns
call
and
outsl
jno
out
imul
lods
mov
sar
and
std
xchg
ljmp
add
std
mov
mov
cld
scas
dec
rol
popf
pop
and
roll
sbb
jo
mov
in
jmp
inc
clc
jp
adc
mov
lahf
sar
fs
cmpsl
orb
aaa
or
push
push
enter
bound
or
fsincos
cltd
lock
push
rcrl
cwtl
cmpsl
mov
pop
sbb
in
fsubrl
hlt
pop
xor
stos
xchg
test
movsl
xchg
sub
xor
fisttpl
lret
sbb
js
push
in
jno
sub
divl
mov
call
mov
fnstsw
out
mov
push
in
jno
push
add
sbb
sub
mov
mov
push
dec
into
cmpsb
enter
sbb
loope
test
or
mov
ja
aam
mov
push
mov
ja
pop
pop
mov
jns
rcll
cwtl
cld
pop
stos
xchg
loope
sub
fcmovu
xchg
out
cs
aad
xchg
jge
aas
mov
jle
xchg
jns
adc
xor
fs
and
mov
test
js
adc
out
rcrb
pushf
xchg
xchg
push
loope
movsl
add
es
or
popaw
bound
inc
loopne
shrb
es
add
push
adc
xor
fistps
shlb
jg
mull
xchg
fbstp
mov
push
mov
cmp
push
pop
cmpl
adc
es
sbbb
add
dec
test
dec
pop
push
adc
push
jns
pop
mov
pop
cltd
mov
out
or
out
xor
and
jecxz
lret
jl
xor
std
push
rcrb
xchg
xchg
mov
push
les
cld
jbe
mov
mov
in
jb
and
mov
cli
ret
inc
jno
ja
into
or
dec
cmp
aad
cli
inc
les
cli
xchg
lods
pop
jecxz
rcrb
xor
imul
loopne
adc
int
add
das
mov
sbb
pop
orb
in
sbb
rcrb
and
dec
sahf
sbb
daa
loopne
add
cmpsl
or
gs
dec
into
xchg
flds
sti
push
jl
cmp
lcall
fsubr
or
sbb
rolb
fildl
mov
sub
adc
inc
push
sbb
nop
outsb
test
adc
sbbl
int3
jb
lahf
adc
lea
aas
mov
mov
repnz
in
mov
xchg
shrb
add
dec
push
pop
loop
push
test
cmp
jnp
mov
xchg
inc
stc
jp
or
sbb
insl
mov
sti
decl
jl
fildl
adc
cmpsl
int3
stos
cmp
and
subb
mov
inc
add
loopne
mov
shrb
fdivl
movsb
jno
aam
jg
shll
adc
int
lock
push
mov
mov
mov
jmp
mov
inc
aaa
jecxz
adc
pop
push
or
pop
insl
sbb
js
sbb
popa
xchg
mov
push
adcb
inc
fucomip
cs
nop
jle
inc
punpckhbw
cmp
jo
xchg
cmpsb
jmp
imul
lahf
shlb
mov
sti
bound
cmp
sub
mov
mov
cltd
insl
shr
movsb
nop
jmp
pop
mov
jmp
xchg
loope
mov
dec
dec
pop
fstpl
inc
push
mov
cltd
push
int3
inc
jns
fwait
sahf
inc
adc
imul
movsl
sbb
not
rcll
cltd
mov
xchg
mov
test
push
cmp
jae
dec
in
and
nop
and
lret
add
mov
imul
cmpsb
jmp
xor
or
pop
cmp
pop
cmpsl
iret
ror
add
ret
xchg
jg
pop
cltd
lret
xchg
jnp
ja
pop
mov
shrl
bound
add
movsb
ss
and
aam
mov
xchg
sbb
in
out
popa
aad
jno
add
jne
js
or
out
lret
mov
mov
data16
cmp
ds
xor
scas
ja
inc
xchg
dec
jmp
pop
cmp
add
pop
fstps
pusha
jno
ret
dec
cmp
xchg
inc
fdivrs
jo
lahf
lret
sti
cmp
jno
jne
or
loop
ja
and
push
dec
jno
movb
je
sbb
fisttps
fmull
cmp
lods
push
repz
je
cmpsb
pop
xorb
loope
push
sbb
imul
or
hlt
jnp
sbb
mov
pop
cmp
scas
stc
push
lea
xchg
mov
cwtl
bound
je
js
sub
cmpsb
jne
enter
mov
add
pop
pusha
push
mov
nop
aad
popf
sbb
out
sub
jns
fistpl
jg
cli
popa
ret
dec
addr16
shlb
jecxz
bound
cli
daa
aad
enter
xchg
xor
mov
pushf
mov
cmp
jb
pop
fs
and
dec
loope
adc
adc
cmp
xchg
xchg
in
shl
sub
and
dec
jle
loopne
std
leave
jne
push
xor
in
addb
mov
in
repz
ljmp
xchg
mov
adc
pop
push
int
xor
aaa
xchg
adc
shll
mov
test
sbbl
enter
jno
repnz
sub
fnstsw
mov
sub
xor
int
dec
loopne
or
xchg
cmp
lea
ret
or
pop
repz
inc
mov
mov
mov
cmp
push
dec
pop
pop
and
jns
test
push
mov
mov
jo
fstpl
stos
loope
inc
ret
cmp
subl
aaa
and
enter
mov
dec
or
or
ds
inc
in
stc
rcrl
fistps
in
aaa
adc
ljmp
or
imul
sub
fcoms
gs
xorb
mov
cmp
cs
xor
add
cmp
mov
push
mov
or
push
add
cmpsb
and
cltd
pop
push
test
notl
jp
mov
lret
pop
mov
or
call
pop
fdivr
es
dec
sub
jge
loope
jl
mov
xchg
mov
pop
inc
jp
sub
loop
inc
mov
sbb
sahf
push
jne
add
rcrl
fcos
stos
lahf
xor
stc
xchg
mov
shlb
mov
push
je
xchg
dec
cmova
push
xorl
pushl
repnz
and
scas
in
popa
sbb
test
int
and
insb
lods
adcl
sahf
mov
lret
sbb
daa
and
lock
add
dec
inc
or
mov
lret
mov
fsubl
addr16
mov
data16
mov
push
popf
roll
pusha
lret
test
hlt
and
xchg
or
in
mov
or
fwait
outsl
xor
mov
sbb
dec
ljmp
in
jge
push
mov
les
and
or
mov
loop
pop
loope
pop
add
and
loope
push
xchg
imul
stc
out
push
mov
dec
add
sbb
arpl
sub
cmp
jb
mov
sub
jo
or
and
ljmp
jle
gs
mov
push
adc
xchg
mov
cs
imul
add
out
mul
mov
sub
xchg
lods
xor
or
jp
fwait
ds
jno
popf
enter
add
mov
dec
stos
femms
dec
sbb
pop
popf
test
fwait
inc
mov
in
repnz
push
cwtl
pop
rcr
xor
mov
lods
or
lods
push
std
in
lods
push
sub
outsl
cmp
sbb
jg
mov
inc
inc
movsb
adc
xor
jae
adc
cmpb
loopne
mov
rcrb
movsl
and
sbb
out
and
jo
repnz
pop
mov
cmp
adc
push
out
mov
lret
sti
dec
out
inc
cld
cltd
pop
pop
gs
xor
sbb
sbb
push
repnz
mov
les
shrb
shrl
push
cmc
insb
lods
pop
pop
enter
insb
ds
daa
sbb
sub
dec
into
ss
cwtl
add
sub
sbb
js
pop
push
inc
rcll
fs
ret
loopne
sub
sub
adc
outsl
dec
mov
jge
loopne
loopne
daa
test
inc
add
xchg
call
push
cld
out
pop
lods
dec
push
imul
pop
testl
jp
mov
aaa
fnsave
push
add
scas
xchg
add
mov
xchg
iret
push
cmp
xchg
idivl
push
es
out
int
cmc
cmpsl
aas
clc
fnstenv
pop
pop
stos
jo
insb
pop
gs
mov
loop
mov
sbbb
push
out
icebp
or
cmc
mov
loopne
lds
xchg
fiaddl
int3
push
push
popa
adc
jno
fiaddl
sbb
pushf
pop
mov
mov
cmpsb
pop
mov
lret
and
dec
mov
push
dec
faddp
mov
mov
std
mov
popl
leave
cmpsb
pop
cmp
cmpsl
stc
inc
sub
and
fwait
lret
out
or
adcl
stos
fs
mov
rcll
das
and
aam
subl
repnz
cmpsb
call
insl
push
hlt
sahf
fdivrs
inc
das
push
xchg
add
mov
or
cltd
pop
and
jb
repz
lcall
adc
ds
jno
movsb
mov
push
xor
ficoms
movsb
dec
mov
mov
fs
subl
dec
jmp
repz
cmpsl
sbb
sti
or
iret
and
add
xchg
ficomps
inc
mov
loopne
push
inc
jno
in
data16
movsl
hlt
fbld
push
jo
pop
mov
push
sbbl
push
imull
and
rcrl
push
bound
outsb
hlt
outsb
jmp
mov
mov
sbb
add
cld
jae
xchg
mov
rclb
pop
dec
lock
pop
sbb
subb
lcall
in
and
mov
cli
nop
popa
daa
mov
imul
decb
xchg
stos
hlt
ja
push
dec
xchg
and
xchg
mov
jge
pusha
bound
mov
lods
mov
iret
call
mull
xor
inc
or
add
dec
push
std
and
jl
lea
addr16
loopne
mov
xchg
adc
je
pop
ret
scas
bnd
mov
rcrb
fnstsw
jmp
mov
mov
cld
gs
std
lret
int3
push
pop
cmc
inc
push
cmp
cli
lret
ss
shll
push
clc
xor
in
or
cmp
test
js
or
mov
loop
jg
pop
imul
aas
mov
out
loopne
mov
mov
sub
lods
jge
mov
push
popf
out
test
and
dec
push
stc
and
scas
sub
push
pop
mov
xor
lods
lret
cltd
ss
mov
rolb
pop
insl
scas
mov
xchg
dec
inc
arpl
ret
jecxz
xor
daa
push
jmp
xchg
inc
nop
dec
arpl
sbb
imul
lcall
sbb
add
leave
push
ljmp
xor
mov
inc
mov
in
movsb
push
jbe
inc
inc
cs
or
adc
cmp
xchg
xlat
xchg
push
scas
ja
rcll
pop
pop
testl
lods
pop
icebp
call
mov
repnz
popa
xchg
jb
pop
pop
push
insb
lods
cmpsb
std
les
add
icebp
addr16
aam
and
int3
mov
adc
int
enter
bound
and
rorb
or
fs
testl
loop
add
hlt
mov
adcb
std
andl
int
fsubl
pusha
in
pop
je
int
or
loope
push
dec
dec
xchg
inc
pop
in
xchg
mov
shrl
aad
sti
push
or
negb
fistps
aas
js
rorb
aam
or
cmp
rclb
inc
xchg
sub
lods
inc
pop
sub
out
fldln2
xchg
push
std
inc
shll
or
xor
xchg
das
mov
test
and
inc
xchg
cmpsl
mov
pop
pusha
test
jnp
mov
inc
jnp
cld
xchg
mov
cmp
imul
pop
xorl
cmc
jae
out
jecxz
cmp
enter
adc
das
mov
outsb
and
inc
mov
mov
mov
arpl
sbb
jle
and
dec
sbb
adc
push
jbe
inc
jecxz
gs
arpl
decl
imul
adc
sahf
dec
out
jmp
add
dec
fucomp
xor
sbb
ljmp
push
lahf
sub
es
vpshufhw
xchg
fistps
sub
imul
inc
add
outsb
out
mov
dec
mov
jp
sbb
adc
inc
xor
sub
push
lret
inc
sub
sub
mov
dec
xchg
mov
cwtl
test
sub
fnstcw
mov
sbb
pop
stos
push
add
repnz
xor
push
pusha
inc
push
or
or
push
sub
or
push
xchg
push
jle
stc
ror
es
rcl
out
je
push
ret
sbb
filds
and
push
popf
insb
and
push
mov
mov
stc
pop
pushf
add
or
mov
lcall
or
ljmp
mov
add
jge
mov
jge
scas
sbb
push
ret
pop
aad
pop
and
mov
adc
loop
dec
shrl
mov
mov
negl
into
nop
cmp
and
icebp
arpl
jle
add
in
mov
fcmovb
mov
add
jo
xorb
xor
outsb
ja
repz
iret
adc
adc
and
inc
or
dec
insb
ds
or
and
pop
push
sub
inc
fldl
cmpsl
clc
scas
or
mov
outsb
movsl
test
orl
out
jmp
lret
lret
scas
pushf
dec
paddd
lret
xor
rcll
mov
mov
out
adc
dec
daa
mov
dec
fadds
call
jnp
cmp
mov
push
dec
xchg
or
sarb
or
popa
addr16
les
aad
jb
jl
push
mov
movsl
ret
adc
gs
jg
push
and
mov
jge
mov
xchg
mov
in
push
iret
mov
xor
data16
mov
icebp
mov
int
lds
sub
insb
call
cmp
xor
and
dec
xchg
sbb
scas
mov
scas
xchg
push
sub
lcall
gs
sahf
inc
cs
int3
cwtl
int3
pop
arpl
int3
divl
lods
jo
pop
bound
enter
mov
test
cs
and
add
popf
xor
pushf
mov
je
mov
das
stc
adcl
jge
leave
and
in
clc
out
inc
push
cmp
cmp
bound
addb
sbb
mov
fstpt
jle
xchg
in
mov
jl
jg
in
fxch
pop
push
xchg
sahf
dec
jne
adc
or
xor
mov
insl
or
scas
sub
loope
rcrb
inc
push
out
pusha
xor
jle
call
ret
enter
lcall
push
sbb
shr
jmp
and
inc
call
sbb
jo
leave
xor
pop
incb
shl
dec
pop
push
push
mov
repnz
push
sahf
cmp
sahf
lahf
pop
push
xchg
mov
dec
sub
test
lods
sti
movsb
pop
jge
movsl
in
fnsave
fwait
jbe
xchg
rolb
sbb
mov
xchg
inc
mov
mov
int
lods
mov
pushf
mov
pusha
add
mov
mov
fstpt
adc
add
lret
es
add
xor
flds
xchg
cmpb
adcb
adc
mov
sub
adc
js
hlt
stos
int3
stc
rcll
test
outsl
movsb
inc
jl
pop
call
test
jg
or
movsl
cmp
mov
rorb
insl
mov
sub
je,pt
mov
dec
push
es
mov
stc
cltd
mov
dec
daa
sub
aad
fisttpl
jo
mov
pop
fistpl
scas
stos
movsb
xchg
aam
fsubrs
repz
std
iret
cmc
fsts
cmp
and
add
loope
push
push
pop
mov
imul
scas
pop
das
bound
pop
and
sub
inc
adc
dec
das
dec
xchg
scas
inc
jmp
rorl
mov
in
sbb
push
enter
inc
fs
ljmp
loopne
aaa
int
in
insl
call
fcoml
mov
xor
and
xor
lret
mov
xchg
jecxz
or
incl
outsb
cltd
cmp
dec
idivl
imul
jl
mov
xor
mov
push
dec
mov
cwtl
sub
jmp
stc
mov
xor
cmp
mov
das
and
cmpsb
scas
je
in
pop
xchg
adc
bnd
xchg
mov
cmp
gs
jl
enter
scas
incl
repnz
mov
pop
imul
pop
and
xlat
lcall
je
fisttps
xchg
adc
lret
mov
inc
xchg
adcl
ljmp
push
in
xor
mov
cli
leave
lods
scas
xor
in
jl
xchg
aas
jnp
sub
pop
dec
push
int3
mov
cmpsb
inc
push
fisttpl
aaa
stc
stos
imul
outsl
dec
dec
xchg
clc
or
insl
push
addl
jmp
xchg
fxch
lret
add
mov
shrl
mov
inc
lea
or
mov
or
cs
outsl
dec
hlt
test
imull
mov
cmp
mov
cltd
and
push
push
addr16
sbb
lods
in
cmpsb
push
add
loop
mov
clc
in
imul
jnp
imul
aaa
gs
pop
sbb
out
pop
jo
add
jno
imul
imul
cmp
cs
jmp
jb
cli
mov
ret
xor
mov
cmp
movsl
dec
out
rolb
out
mov
lret
push
test
jmp
pop
lcall
imul
cli
cmpsl
mov
orl
mov
push
cmpsl
add
xchg
sub
jmp
jae
add
adc
leave
lds
scas
cmp
add
cwtl
mov
std
mov
inc
cs
xor
pop
add
pushf
inc
test
cs
int3
and
icebp
mov
popf
mov
cmp
mov
push
add
stos
movsl
fistl
or
mov
pop
mov
inc
out
and
or
movsb
mov
sbb
mov
js
push
pop
sbb
mov
fs
dec
in
fwait
and
sbb
gs
idivl
sub
out
aas
inc
pop
shlb
cmp
dec
lods
cli
and
adc
hlt
adc
or
jle
les
repnz
add
mov
mov
xchg
push
mov
movb
nop
out
fwait
jle
jns
lcall
xor
push
test
sbb
jecxz
cmp
pushf
add
into
pop
flds
out
aas
test
sub
jb
cs
popf
loope
pop
sbb
fcmovne
repz
lds
adc
pop
mov
add
mov
xchg
iret
fiadds
loop
jb
lods
inc
das
adc
es
or
xor
lahf
jmp
and
int
lds
inc
xchg
rolb
aas
das
xor
push
pop
xor
dec
adc
push
cmp
scas
or
loop
ljmp
jge
add
sbb
stc
pushf
cmp
adc
sub
add
pop
pop
mov
rclb
ljmp
add
loope
sub
sbb
addb
js
mov
ficompl
mov
and
xlat
mov
adc
mov
aas
cltd
dec
mov
loop
and
or
xchg
cmp
mov
pop
decl
loop
stos
setl
mov
mov
xlat
lret
sub
push
push
pushf
sti
xchg
sahf
adc
mov
pop
push
je
outsb
fisttpl
mov
xor
aaa
data16
fnclex
mov
cmp
mov
add
call
nop
cmp
jnp
insb
aam
or
clc
xor
push
and
sar
xlat
mov
outsl
dec
ret
test
push
mov
and
stos
xchg
mov
and
ret
inc
stos
sub
push
gs
repnz
cwtl
push
dec
adc
xlat
mulb
cmp
mov
in
sbb
cmpl
fwait
dec
filds
inc
adc
push
mov
dec
int
lahf
cmp
push
ret
daa
cld
lahf
fcmovnu
xchg
mov
jae
cmc
cmc
mov
decb
push
idivb
jmp
stc
jmp
dec
out
push
push
xchg
jle
jp
adc
fisubs
jp
and
mov
jg
arpl
pop
popa
cmp
sbb
jbe
jae
push
jns
adc
out
or
bound
sub
mov
dec
cmp
xor
jle
cmp
mov
enter
jge
daa
out
pop
xchg
xchg
xor
arpl
inc
mov
movsl
popf
pushf
jae
test
pop
fwait
and
mov
jbe
aaa
sbb
jb
scas
cld
mov
xchg
jne
add
adc
adc
arpl
aas
ds
mov
mov
sub
mov
out
outsl
mov
fstps
loopne
mov
out
mov
jg
add
xchg
pop
sti
cmp
dec
lods
les
mov
or
mulb
stos
xor
mov
jp
xlat
repnz
adc
dec
leave
in
cmp
and
ljmp
rorb
sbb
xchg
jno
inc
ror
rcrb
and
cmp
and
sub
add
jge
scas
mov
aam
xchg
jae
data16
push
sub
pop
push
in
jge
push
std
xchg
jns
outsl
inc
fcompp
mov
xchg
xchg
lret
add
insb
or
xor
cmp
fdiv
cmpsb
or
js
dec
mov
dec
loope
ret
inc
mov
mov
mov
ja
testl
aam
popa
sbb
and
mov
sti
js
icebp
or
lahf
pop
andl
out
xchg
repnz
in
pop
inc
les
dec
sub
push
mov
xor
mov
rclb
xchg
in
cmp
pop
outsb
or
adc
mov
mov
aaa
xchg
gs
sub
popa
daa
xchg
push
sti
es
cmp
insl
adc
mov
xor
push
lret
xlat
enter
insl
xchg
inc
fsubrp
mov
pop
xor
sbb
aaa
and
mov
dec
sarl
int
sub
data16
aas
aas
cld
mov
imul
repnz
inc
outsb
mov
icebp
sbb
test
shl
or
insb
scas
jno
push
popa
iret
sbb
jle
sbb
test
push
jle
pop
cmpsl
ret
cmpsl
jns
adc
add
test
out
negb
hlt
jg
push
inc
xchg
xor
mul
sbb
inc
xchg
inc
cmp
cmpsl
xchg
lods
cmp
outsl
lds
es
outsl
mov
cmp
mov
inc
stos
sti
and
push
ss
in
das
mov
sub
addr16
ds
xor
popa
pop
lret
ret
daa
xor
push
in
sbb
jecxz
pop
lods
jle
mov
adc
add
jge
or
incl
cld
add
xchg
push
jbe
xor
and
pop
mov
pop
add
cmp
inc
call
pusha
rdmsr
or
fiadds
inc
ljmp
dec
movb
push
addb
lock
mov
leave
xchg
xor
mov
je
insb
xchg
fucomi
pop
mov
mov
lret
int
fwait
jmp
sbb
cld
gs
jnp
jae
lods
mov
xchg
lcall
into
popf
sub
dec
xorb
aas
jmp
mov
dec
sti
pop
fists
cmpl
jp
data16
adc
xchg
loop
dec
in
hlt
push
jecxz
out
jmp
pop
inc
dec
int3
rorl
out
jl
out
lea
pop
jg
xchg
rcrb
daa
sub
lahf
ds
jae
loopne
hlt
sti
jns
iret
sbb
or
adc
fidivl
ja
je
dec
jp
cmp
sub
jns
shlb
in
xor
add
test
xor
or
pop
xor
leave
in
push
add
punpcklbw
mov
mov
stc
push
jnp
or
imul
bswap
enter
rol
sti
cli
sbb
pop
test
or
shrl
mov
sub
faddl
sbb
sti
lods
loope
out
pushf
rcrl
imul
rol
inc
mov
fnstenv
jl
adc
in
stos
ret
add
push
adc
mov
mov
incb
or
mov
sbb
or
sub
dec
lcall
add
inc
stos
insl
out
xchg
ja
push
or
pushf
xor
push
loop
lds
mov
scas
fildl
sub
push
and
jl
mov
cmp
adc
add
pop
shrl
out
cli
lret
mov
cmpsl
cmovle
outsl
sub
mov
inc
inc
inc
movsl
xor
sbb
loope
push
adc
stos
insl
test
xchg
mov
loop
adc
shll
in
imul
cld
or
jmp
xor
cmc
jae
cli
cs
in
jns
jnp
push
inc
mov
push
cld
enter
outsb
cmp
xchg
inc
mov
lods
jl
mov
clc
jo
xchg
xor
loopne
inc
mov
cmc
dec
mov
xor
add
in
jmp
shrb
sti
test
or
cmp
sahf
mov
pop
andl
pop
daa
sbb
int3
jg
jb
jmp
jnp
pop
jnp
push
popf
je
sbb
lret
jp
add
push
mov
jbe
test
imul
cli
cmp
cmp
out
jb
test
int3
cmp
push
cmp
ret
jl
jnp
sub
ljmp
insb
xchg
mov
test
mov
push
es
notb
cmp
incb
mov
mov
dec
push
jb
jle
pop
or
cmp
daa
test
int3
push
ret
pusha
shrl
push
mov
lahf
int
add
rcrl
sbb
lds
adc
out
aad
insb
aaa
daa
dec
les
sahf
mov
push
xchg
fiadds
inc
lahf
nop
and
mov
jecxz
xchg
stos
lods
sub
sub
dec
add
inc
outsl
pop
push
fldenv
jl
mov
dec
add
aad
outsl
push
mov
mov
es
hlt
adc
pop
jmp
xor
out
bound
into
mov
sbb
ds
arpl
xor
sub
bound
in
mov
bound
lret
mov
inc
xor
sbb
jecxz
ds
add
lds
ret
mov
cmpb
and
cwtl
mov
hlt
jge
mov
loop
xchg
cmp
fs
mov
aad
xchg
xchg
lret
arpl
fcomps
out
imull
mov
shl
or
ljmp
xor
xor
rorb
pop
out
push
jle
sub
cmp
movsb
pop
jbe
pop
aad
xchg
add
add
mov
gs
jp
lock
sbb
sbb
and
pushf
stc
pop
mov
imul
mov
sbb
lret
lahf
lds
jmp
lods
incb
fs
adc
icebp
adc
lcall
cmp
les
lcall
fstps
sbb
das
sarl
in
xorb
mov
loop
and
push
fimull
push
push
or
nop
inc
sub
scas
cmpsb
mov
sbb
mulb
mul
xchg
test
arpl
pop
lock
rorb
xor
lods
pop
mov
pop
cmp
xchg
or
mov
jecxz
jp
push
shlb
int
push
ss
fdivrs
fisubl
jp
jns
test
repz
fs
push
jle
lahf
or
cld
jne
clc
cmpsb
mov
xchg
mov
mov
aad
cltd
jae
mov
or
repnz
mov
xor
jecxz
outsl
jo
aas
jbe
sub
xchg
dec
xchg
or
pop
add
cmpsb
dec
pop
sub
aaa
imul
clc
sub
pop
inc
sub
mov
std
test
mov
pop
pusha
rcrb
mov
pop
int3
jmp
push
pushf
aam
bound
mov
loopne
sbb
cmp
cmp
mov
inc
cmpsb
adc
xchg
jl
sub
dec
insb
rcrb
jb
mov
std
mov
and
xchg
testb
sub
shlb
rcrb
sbb
mov
sarl
pop
cmp
mov
xchg
mov
xchg
mov
or
orb
xchg
jge
fs
add
add
pop
push
shl
jle
add
sbb
and
clc
in
mov
fistpll
out
jne
mov
sub
inc
ljmp
xchg
xor
pop
mov
adc
pop
mov
std
cmp
push
pop
test
lcall
fists
addr16
pop
add
fcmove
adc
mov
js
add
int
and
pop
repnz
jo
pop
and
xlat
or
pop
mov
iret
popa
inc
sbb
jae
lea
mov
pusha
stc
xchg
mov
pop
ret
xchg
or
xchg
out
incb
negl
pusha
or
mov
shl
pop
pop
mov
insb
into
movsb
pop
and
push
repnz
ljmp
pop
les
enter
insb
out
mov
pop
dec
test
mov
repnz
cmp
jecxz
push
mov
mov
xor
pop
dec
gs
sub
les
nop
mov
xchg
cmp
jae
add
inc
sub
pusha
scas
gs
xor
mov
shll
aad
xchg
pop
repnz
cs
push
mov
ljmp
ret
xchg
add
mov
jb
test
fdivs
or
and
jge
inc
out
adc
testl
sbbl
sub
inc
fs
add
jne
bound
cltd
je
mov
pop
out
sbb
fnstcw
pop
je
aaa
jl
xchg
push
daa
rcl
shr
cmp
or
stc
xchg
outsl
lret
jbe
mov
xor
dec
and
js
mov
dec
lods
mov
fldl
inc
inc
push
jmp
pop
leave
inc
jecxz
and
inc
jne
pop
jb
cmp
mov
andl
mov
adc
cs
sbb
dec
xor
cmp
insl
cmp
or
sahf
fcoms
mov
lea
mov
ret
jl
out
jle
jmp
adc
or
xor
in
sti
pushf
xor
insl
int
xor
sub
xlat
popf
cmp
insl
nop
and
insl
jg
or
stos
mulb
mov
add
lds
repnz
cmp
push
outsb
push
pop
and
xchg
aam
push
orl
testb
les
lock
mov
cmp
stos
push
data16
or
inc
mov
jo
into
mov
fbld
pop
xchg
shll
push
out
cmp
xorl
cmpsb
dec
fnstcw
mov
cmc
or
jp
sub
jg
push
pop
in
or
lcall
mov
outsl
sahf
and
cmpb
push
add
inc
xor
ret
adc
xorl
and
mov
xlat
movntps
ror
cmp
ficompl
aam
lret
pop
bound
mov
into
lret
xlat
dec
mov
jecxz
test
pop
call
inc
movsl
dec
xor
mov
pop
jmp
aam
pop
add
adc
mov
pop
or
mov
ret
mov
stc
pop
mov
outsb
fwait
sbb
push
insl
adc
mov
cmp
scas
cmp
push
sub
inc
das
mov
fsts
lods
jecxz
repz
cltd
hlt
dec
jg
ljmp
stos
pop
jbe
add
sub
pop
jp
fildl
fnstenv
shrb
push
mov
aas
sub
test
mov
repnz
in
aaa
inc
inc
jnp
jb
shll
or
mov
in
rorb
xchg
jle
push
jmp
out
push
aad
sarl
mov
mov
adc
scas
fwait
xor
dec
jp
iret
cmp
test
cli
push
inc
mov
mov
xchg
xor
xchg
pop
imul
imul
sti
aad
mov
scas
jne
pop
sub
fsubrl
cld
jo
test
scas
xlat
add
lds
cltd
mov
sarb
inc
iret
sbb
pop
sub
push
aas
jb
cltd
xchg
xor
sub
int3
jle
je
loop
lods
xor
cli
addb
sbb
jb
jne
ret
lea
pop
cmp
scas
sub
dec
mov
lods
push
and
mov
sub
in
lahf
cmp
lock
test
pushf
mov
or
sahf
out
sub
js
aad
ljmp
inc
pop
adc
testl
jo
pop
imul
mov
push
inc
incl
pop
sbb
loop
imul
adc
outsl
int3
andps
popf
hlt
jp
dec
jns
pushf
jp
dec
and
and
in
mov
lods
inc
cs
push
xchg
jae
popa
movsb
sub
dec
ret
iret
stos
fs
cmpsb
jl
aaa
call
mov
xchg
jmp
inc
jae
imul
fistl
mov
lods
leave
inc
popf
imul
jle
mov
push
mov
lods
dec
out
insl
pop
adc
in
cmpsl
jae
xor
mov
push
lcall
push
orb
enter
addr16
repz
imul
andl
in
mov
std
mov
cmp
sbb
data16
rcr
push
test
mov
sub
mov
or
test
fistpl
adc
add
test
mov
jno
outsb
dec
rcr
jmp
sti
mov
jae
push
jp
jl
mov
xchg
add
cmp
jbe
push
out
mov
fbld
pop
ret
add
aas
cmp
inc
divb
add
sahf
mov
xor
enter
cltd
mov
sbb
xor
pop
sbb
orb
sbb
movsb
movsl
lea
scas
lret
dec
mov
scas
cld
popa
cmp
fmuls
mov
js,pn
iret
enter
scas
iret
add
jne
insl
push
or
mov
jnp
clc
sbb
push
jle
ror
xor
aam
pop
cmp
mov
mov
add
insl
lock
cmc
mov
mov
imull
js
xor
mov
in
mov
data16
mov
mov
xchg
adc
sub
xchg
leave
loopne
sbb
icebp
mul
test
aaa
loope
jne
mov
mov
push
pop
sahf
mov
lret
mov
lahf
lea
pop
lds
jae
in
repnz
jns
in
lods
push
sti
mov
lea
cmp
cmp
or
data16
popf
and
les
jmp
roll
std
mov
fwait
xchg
test
jmp
pop
cmp
cld
mov
popf
add
push
rorb
cwtl
pop
ja
es
mov
and
mov
test
fbstp
cmp
push
stc
rclb
push
inc
push
mov
cmpsl
jl
and
test
leave
and
fsubrp
mov
daa
mov
addr16
push
xchg
cld
hlt
mov
and
andb
bound
cmpb
insb
jno
es
pop
lcall
loop
jnp
lret
dec
pushf
lock
addr16
xor
inc
in
push
movsb
pop
jo
movsl
mov
jle
fidivl
outsl
cmpsb
xchg
cmc
cli
andl
cmp
mov
sahf
or
add
pop
jb
add
pop
adc
mov
pop
outsl
cmp
fmull
pop
imul
sbb
fwait
movsl
and
mov
xor
lahf
jbe
mov
adc
cmpsl
daa
pushf
dec
sbb
mov
inc
sub
lcall
ljmp
in
popf
aam
ljmp
ret
cltd
xor
ss
cli
cli
mov
or
cs
add
sti
dec
ja
repnz
les
ret
and
jecxz
and
adc
adc
sarl
cmpsb
inc
fists
les
arpl
fwait
xlat
cmc
inc
mov
xor
dec
lret
xchg
movsb
movb
add
add
sbb
out
out
mov
cmpsb
dec
je
orl
cmp
sbb
in
and
mov
repz
pushf
in
fdivrl
xchg
sbb
push
fbld
dec
fisubl
dec
hlt
adc
sub
sti
sbb
inc
popa
jbe
leave
sbb
shll
shlb
cld
pop
pusha
pusha
jge
jb
xor
imul
sbb
xor
std
jb
dec
sti
pop
dec
mov
mov
pop
cmpsb
shrb
jg
and
and
jp
sub
push
and
fs
lret
mov
push
mov
inc
lods
or
xor
call
push
mov
dec
pop
and
outsb
mov
bswap
loope
cwtl
sbb
jge
mov
or
mov
je
dec
stc
adc
clc
inc
xchg
insl
and
xlat
xor
lret
call
test
inc
aad
pop
mov
xchg
xchg
mov
cmp
int
push
cli
outsl
pop
jne
cltd
fucomip
ja
jg
hlt
mov
test
or
xchg
leave
or
mov
mov
inc
xchg
mov
pop
sub
add
add
mov
jbe
jne
ret
mov
fs
or
xchg
inc
inc
fistpll
and
mov
push
sbb
xor
out
mov
xchg
cmp
push
fmul
stc
sbb
subl
mov
adc
xlat
ss
and
inc
int
dec
mov
sbb
xor
add
test
mul
aad
pop
xchg
in
mov
inc
xchg
xchg
iret
test
test
xor
stc
repnz
push
mov
mov
int
andl
cmp
scas
jge
outsl
pop
or
xchg
add
lods
sub
xchg
movsl
je
loopne
ljmp
pop
cwtl
cmpsb
lcall
scas
sub
lds
pop
xchg
cmp
xor
stos
es
pushf
pop
inc
mov
cmp
ds
mov
inc
dec
xchg
adc
lret
push
pop
mov
jle
adc
fsubr
es
jae
ret
cmc
insb
push
leave
in
je
push
lahf
mov
in
pop
xor
pop
cmp
movsl
cwtl
nop
addr16
or
repnz
mov
add
mov
dec
lret
jp
xor
fisubrs
flds
in
jecxz
jne
daa
inc
adc
or
movsl
lret
push
cmpsb
jmp
mov
inc
loope
outsl
jl
sahf
clc
fsubrp
or
mov
sub
stos
cmp
or
pop
scas
loope
cmp
loopne
pusha
mov
push
popa
xchg
mov
sub
lret
ja
popf
inc
fisttps
xchg
scas
das
jbe
insl
dec
cmpsb
mov
ljmp
mov
sbb
sub
inc
imul
negb
mov
sub
lret
out
adc
inc
stc
mov
jl
pusha
push
lods
mov
ret
xlat
pop
test
inc
data16
inc
mov
outsb
aad
adc
mov
inc
imul
cld
xchg
js
hlt
inc
fimull
test
adc
repz
xchg
or
xor
add
ret
jmp
jp
xor
pop
xor
inc
mov
shrl
out
and
pop
into
cmp
jne
fcmovu
mov
sti
mov
les
or
int
add
je
aad
push
inc
or
cmp
ljmp
pushf
mov
jne
mov
into
loop
push
xor
and
xchg
andl
cmp
enter
cmp
lods
xchg
outsb
into
mov
sub
xor
arpl
popf
inc
and
adc
cmc
lock
or
or
insl
lcall
loop
hlt
int
cmp
jl
dec
test
xchg
xchg
popa
cmpsl
xor
mov
scas
rolb
and
inc
outsl
movl
xchg
shll
cmpsb
out
inc
imul
jp
shll
and
jns
scas
mov
stc
out
data16
ss
and
jle
call
fs
out
mov
fisttpl
fcmovb
imul
cmp
xchg
add
lods
inc
enter
sti
mov
dec
mov
or
and
fidivs
jns
ss
push
push
sub
ficoml
das
mov
stos
in
lea
aaa
xchg
sbb
and
jae
jo
sub
iret
jae
arpl
leave
sbb
push
leave
xor
sub
jo
rol
dec
sbb
test
sub
adc
lock
psubsb
aam
jl
push
xchg
push
mov
mov
and
mov
sti
fcoml
sub
or
ljmp
ja
js
xlat
add
adc
inc
mov
push
mov
in
dec
mov
and
stos
sub
jmp
mov
cmp
pop
jb
inc
jp
icebp
sbb
add
xchg
in
shlb
in
imul
fmuls
jo
out
repnz
rcll
cli
jg
lahf
jl
jl
fdivs
adc
pushf
stos
sarl
je
jle
outsl
mov
imul
mov
sti
stos
add
inc
sub
jnp
ss
inc
leave
mov
das
xor
xchg
std
rcr
fistl
je
xchg
xchg
nop
push
xor
jnp
push
insl
repz
lods
mov
pop
push
dec
test
sbb
xor
and
cmp
adc
mov
js
add
push
push
pop
testb
pop
add
jbe
shll
sbb
sub
outsb
jae
mov
sbb
enter
and
outsl
lahf
test
jne
ss
inc
in
sahf
push
jge
aas
test
mov
mov
adc
js
push
shrl
inc
shlb
jp
inc
push
movsl
add
mov
xchg
shlb
aaa
cmp
add
push
in
cli
xchg
popa
daa
pop
mov
movsl
mov
std
shl
jl
into
iret
cmc
sbb
and
cli
push
js
mov
push
adc
out
cs
sahf
xor
lahf
mov
or
into
test
aad
shlb
mov
sbb
mov
out
and
pop
inc
push
lods
lret
mov
dec
test
and
adc
addr16
mov
stos
and
sub
dec
arpl
dec
lahf
push
add
dec
mov
enter
ljmp
push
les
push
mov
mov
and
rcrb
iret
pop
push
emms
mov
stc
xchg
int
sbb
add
add
sbb
test
add
lret
xor
in
ja
ss
cmp
xorl
dec
add
jp
aas
ljmp
movsl
ds
jae
dec
in
std
leave
xor
jbe
push
add
fcoms
xor
jnp
test
add
lret
sbbb
stc
jge
push
test
pop
cmpsl
pop
and
xchg
xorb
cwtl
sbb
lahf
inc
push
add
xchg
lock
mov
ss
mov
pop
fsubrs
lcall
mov
cmp
addr16
out
sti
iret
sub
ss
xlat
inc
mov
je
sbb
in
in
adc
nop
mov
repnz
fsubl
out
test
std
inc
add
lea
push
and
mov
add
mov
icebp
stc
mov
add
xchg
repz
mov
call
cmovns
nop
je
mov
fs
test
cwtl
orl
movsb
in
cmp
ror
ret
stos
jno
add
lods
test
leave
fdivs
mov
inc
popa
pop
das
roll
pop
icebp
mov
in
lods
roll
adc
std
cltd
and
mov
cmp
lea
insl
jbe
fcmovne
nop
xor
push
imul
pop
std
data16
inc
cltd
push
jp
out
mov
mov
mov
sbb
int3
popa
xor
inc
in
jae
push
jnp
clc
jl
push
cltd
andl
popa
mov
hlt
shrb
cmpsl
test
mov
fst
in
movsb
mov
xchg
lcall
cmpsl
pop
pop
dec
sbb
xchg
std
jmp
mov
loope
pusha
sub
aas
or
sub
mov
cmpsb
adc
mov
lret
fsubr
test
sub
fcoms
mov
jns
add
push
out
mov
adc
xchg
sub
dec
cmp
outsb
fldl
jmp
jne
and
divl
nop
imul
and
int
and
jnp
mov
pop
mov
inc
fwait
pusha
sub
jne
mov
pusha
inc
fadds
iret
test
xchg
in
in
loopne
adc
andb
mov
mov
in
aam
xor
adc
stos
sbb
stos
stc
pop
and
xchg
sub
not
fisttpl
jg
icebp
lods
hlt
shlb
addl
js
iret
mov
loope
push
mov
subl
leave
pusha
fisubl
add
pop
or
fmull
cmp
adc
push
xchg
and
aam
pop
icebp
lcall
and
xlat
imull
cmpsb
sbb
jg
shlb
clc
clc
cli
cwtl
out
dec
jnp
aas
int
idiv
das
gs
lods
xlat
dec
push
add
mov
iret
loop
aas
call
sbb
repnz
pop
sbb
lret
add
add
enter
sbb
cmpsb
mov
mov
jo
imul
pop
xchg
outsl
pop
sub
sbb
repnz
xchg
pop
sti
pop
cltd
push
inc
cmpl
int3
out
pop
cwtl
jbe
mov
aaa
icebp
mov
inc
mov
dec
lods
cmp
add
mov
jl
mov
push
mov
or
fwait
xchg
out
push
pop
imul
lahf
int
mov
mov
inc
dec
xchg
repz
gs
fsubr
insl
add
dec
xchg
push
mov
daa
loop,pt
and
xchg
xor
shll
popf
xchg
and
mov
daa
fs
jge
test
pop
cmpsl
add
sbb
insl
in
cmpsl
push
mov
add
mov
ja
push
jle
mul
in
mov
ja
adc
push
popa
repnz
xchg
pop
push
xchg
pop
shl
pop
lock
ret
mov
arpl
pop
fstps
ficomps
fiadds
loop
lods
sarb
cli
into
nop
outsb
push
dec
enter
loop
ret
aas
push
xchg
inc
dec
sbb
push
xchg
fisttps
dec
into
stos
xchg
ds
or
push
fmuls
bound
cmp
cmpsl
sub
pop
iret
scas
push
enter
loop
cmp
enter
sbb
mov
mov
push
add
ljmp
dec
dec
jns
aaa
jae
dec
das
cltd
cmpsl
dec
mov
pop
and
fisubl
sbb
lahf
insb
mov
mov
add
cmpsl
pushf
ljmp
inc
je
pop
movsb
push
and
mov
fbstp
out
stos
lcall
sub
jo
jb
jo
iret
aam
int3
aaa
imulb
movb
add
jecxz
pop
dec
test
std
in
mov
jne
sub
jge
scas
mov
fistps
sbb
lods
jbe
fxch
test
rorl
stos
imul
add
in
int3
fnstcw
jecxz
clc
out
shlb
push
scas
lods
enter
jo
push
sub
fucom
push
xor
jecxz
popa
jnp
add
inc
imul
js
and
mov
inc
sbb
loope
dec
jbe
in
mov
popf
and
lcall
arpl
xor
jg
pop
sbb
pop
mov
shrb
loop
clc
lods
cmp
or
and
mov
lea
xor
enter
das
or
roll
jno
mov
fsubrp
daa
dec
inc
dec
popf
jb
int
mov
push
xchg
and
sti
out
cmpsb
push
sti
mov
push
test
rol
mov
adc
jp
and
inc
cli
fistps
jae
rcl
mov
and
test
mov
jno
jge
dec
jae
mov
xor
mov
and
es
and
dec
fisubrl
cmp
add
cltd
sub
rorb
or
mov
sub
mov
out
mov
mulb
push
jb
pop
jbe
mov
repz
ret
jg
cmpsl
aas
inc
jno
sbb
pushf
mov
sti
mul
out
andl
sbb
sub
lock
or
mov
xchg
outsl
outsl
or
sub
mov
mov
call
in
sbb
cmp
loope
jle
push
repnz
insb
fimull
mov
pop
jp
jecxz
adc
mov
faddl
dec
inc
inc
lods
popf
mov
adc
adc
adc
stc
mov
or
js
fisubs
lcall
mov
js
insl
mov
adc
daa
inc
and
pop
lea
push
xor
andl
mov
push
stc
add
loope
in
lock
aad
lahf
pop
aam
daa
xor
mov
and
in
dec
pop
or
insl
jno
punpcklwd
inc
sarb
xor
xor
fdivs
rcrl
pushf
cmp
stos
xlat
lahf
dec
pop
push
xchg
adc
jns
ss
fcomps
xor
jge
sub
repz
pop
xchg
js
or
jne
loope
fimuls
xchg
les
sub
inc
cltd
cmp
pop
adc
xchg
inc
or
out
mov
xchg
pop
push
out
nop
sbb
call
out
jl
dec
fildll
lock
mov
mov
xor
aas
imul
add
ficomps
mov
push
dec
aam
cltd
cld
fcos
cmp
je
jb
cmp
or
sbb
pushf
insl
dec
jbe
outsl
mov
dec
xorb
es
xchg
pusha
lods
movsl
cmovo
movsb
shrl
arpl
jle
movsl
add
sahf
in
adc
xchg
in
pop
jmp
push
in
sbb
adc
aaa
push
xor
out
cs
mov
cmp
addr16
push
out
stos
loope
pop
xor
call
sub
dec
jae
lahf
adcb
push
mov
dec
cld
mov
scas
fwait
leave
push
sub
sti
lcall
cmp
outsl
punpckhwd
adc
repnz
xor
movsl
outsb
xchg
imul
and
sbb
in
mov
push
movsb
shlb
je
sbb
rolb
cmp
adc
cs
jno
xor
jns
pop
mov
into
fimuls
mov
jb
cmc
in
push
cltd
or
fadds
jp
mov
jae
rcrl
insl
mov
sbb
pop
bnd
xor
outsb
adc
jp
push
cltd
xchg
bound
ss
jb
stc
sub
mov
mov
and
xchg
jge
in
lods
arpl
xor
pop
lock
movsb
or
fs
push
daa
inc
xchg
fucomip
mull
fsts
jge
lea
sub
sbb
jns
mov
les
and
pop
lcall
stc
test
and
into
ficomps
and
lret
mov
pusha
cmp
and
xchg
xchg
sub
mov
cld
loope
inc
adc
in
and
fsub
stos
repz
push
inc
pop
xchg
xchg
sbbl
mov
push
in
cmc
pop
and
push
push
pop
and
jge
mov
jle
or
sbb
stos
mov
push
inc
jge
sti
dec
fcompl
loopne
cmove
and
mov
pop
push
mov
mov
mov
repnz
mov
jno
mov
sti
xchg
in
and
mov
mov
fiadds
mov
out
xor
inc
push
inc
or
imul
out
ds
leave
xor
sub
js
nop
jo
inc
xchg
dec
in
cmp
sub
shll
mov
push
nop
push
xor
push
and
gs
and
xor
pusha
aam
fsub
and
xor
outsb
or
dec
dec
or
inc
sti
fs
or
pop
repz
fbld
lock
jmp
mov
jbe
std
sub
push
xchg
xchg
mov
sbb
and
cli
jge
add
xor
xchg
aas
cmpl
inc
pusha
sub
xor
xor
clc
cmp
jne
gs
jmp
pop
xchg
popa
mov
push
jbe
inc
mov
xchg
xchg
or
nop
cmpsb
jl
inc
or
outsb
pop
jp
cwtl
fcmovb
sbb
ljmp
sbb
push
fnstsw
inc
push
lret
mov
sub
sub
mov
clc
xchg
mov
les
imul
add
sub
in
cmp
or
and
push
ds
and
dec
filds
add
push
stos
fildl
ret
push
mov
jns
mov
jmp
jg
add
mov
xchg
int3
mov
scas
cltd
push
adc
sub
push
add
pop
mov
sahf
dec
or
imul
pop
das
in
and
mov
fsubrl
into
and
hlt
loope
sarl
and
in
clc
mov
cmp
pop
shrl
hlt
or
pop
and
push
mov
push
test
nop
jns
mov
into
sub
mov
rcll
out
push
sub
scas
cmp
mov
cmp
cmp
mov
repz
and
adc
pusha
sub
xchg
cmpsl
jns
pop
leave
mov
addr16
test
mov
jl
cmp
pop
jnp
sbb
push
test
jne
jnp
cmp
xorb
cmp
call
pop
pop
inc
into
cmp
or
test
lahf
mov
jo
cld
arpl
stc
dec
test
in
xor
xor
sbb
in
sbb
sbb
shll
dec
fisubrs
sarb
push
pusha
or
sbb
mov
add
rcrb
into
pop
cmpl
dec
jle
jle
repz
sub
incl
sub
push
jl
mov
dec
sub
in
into
mov
inc
sub
enter
dec
add
cs
push
xor
cld
dec
or
js
ret
pop
not
sub
lret
pushf
scas
dec
jge
popf
mov
push
ss
jg
ror
jno
push
shrl
xchg
in
out
push
fistpl
ljmp
ss
cmp
int3
dec
mov
pushf
mov
test
sub
nop
mov
cmp
cmp
xchg
call
or
cmp
ror
mov
mov
nop
mov
ds
loop
cmc
ret
lret
int
rcll
and
jl
mov
xchg
sub
popf
mov
pop
pop
shrl
sbb
testb
jmp
xchg
stc
pop
iret
lods
movsb
adc
fidivrl
loope
fsubrl
bnd
dec
lahf
adc
xchg
xor
mov
xor
adc
sub
in
addb
lret
sbb
aam
popa
xlat
gs
mov
xchg
sbb
les
inc
imul
daa
outsl
lahf
ret
and
icebp
sub
mov
xchg
cli
ss
out
push
in
pop
jge
inc
and
fidivrl
je
in
sahf
mov
imul
cld
sub
mov
in
mov
gs
ret
daa
pop
xchg
cmp
shlb
and
es
in
cmp
mov
imul
or
or
lret
clc
sbb
out
dec
es
add
ret
sub
test
pop
clc
and
fbstp
dec
iret
mov
ret
popa
jp
pop
lods
lret
fucomi
adc
or
cmpb
fdiv
repz
inc
insb
subl
mov
aad
popf
sub
js
add
cmp
xlat
lods
and
sub
pushf
inc
dec
adc
cmp
out
ljmp
imul
rclb
scas
lret
arpl
addr16
test
jl
lds
mov
mov
jecxz
push
inc
dec
mov
scas
cmp
aam
popf
add
repz
add
imulb
addl
mov
aaa
and
fmuls
lods
push
jge
pop
sahf
mov
xchg
jl
ficoms
mov
mov
das
fwait
inc
iret
pop
jo
inc
in
xor
cwtl
push
jne
sbb
insl
sub
cmp
xchg
gs
pop
mov
dec
aas
pop
cwtl
das
sub
or
mov
and
xchg
repnz
add
repnz
subb
push
sub
outsl
jne
xchg
popa
adcb
fldt
sub
push
cmp
jne
pop
sbb
mov
nop
sub
xchg
mov
xor
xchg
out
dec
aaa
shll
sbb
inc
cmpsb
ss
cmp
cld
mov
push
xchg
mov
in
jecxz
xchg
cmpsb
xchg
mov
out
xor
adc
aas
aam
arpl
xchg
add
cs
movb
xlat
fisubrl
pop
lret
je
jo
str
ror
ror
cmp
data16
andl
enter
sbb
in
adc
hlt
mov
loop
mov
dec
ljmp
enter
ja
pop
xchg
scas
ss
or
dec
jp
fdivr
sti
aas
push
pop
popa
gs
xchg
cmp
arpl
xor
xchg
ret
bound
andb
mov
xor
lret
fs
outsl
sbb
outsb
shll
pop
mov
cltd
push
gs
and
mov
mov
pop
cli
add
and
shll
stos
ficomps
out
outsl
adc
add
pop
pop
jl
pusha
int
mov
mov
scas
jl
cltd
lods
iret
cmp
push
in
hlt
mov
push
pop
mov
xor
and
out
mov
bnd
aas
lods
and
sti
pop
shlb
and
lods
jle
ss
fsubl
or
gs
inc
cld
aaa
sahf
adc
leave
int3
or
sub
inc
xchg
mov
and
mov
dec
aas
xor
dec
and
dec
pushf
inc
popa
or
dec
dec
in
clc
test
jno
xor
xchg
xchg
lcall
and
inc
xchg
xlat
cmpsl
mov
int3
popa
rcll
cmp
loopne
push
push
gs
insl
fs
mov
into
lock
lods
lods
insl
xchg
sbb
pushl
xor
or
mov
sbb
mov
cld
es
mov
and
fwait
insb
cmc
lret
lock
sbb
xchg
dec
dec
inc
cwtl
les
add
outsb
subl
xor
jns
push
das
repz
les
sbb
repnz
testl
xchg
add
xor
clc
dec
xor
jmp
daa
dec
jge
dec
in
rcl
divl
idivl
sbb
sbb
arpl
xchg
dec
ljmp
das
test
mov
pop
add
fidivl
pop
cmpl
dec
inc
in
mov
cmp
rorb
in
ss
lods
jg
inc
xor
jbe
leave
pusha
repnz
fidivl
xlat
aad
out
out
jmp
mov
push
inc
mov
stos
push
test
inc
jbe
pop
dec
adc
mov
add
and
lcall
cld
lea
push
mov
bnd
sub
das
inc
setnp
fcoml
dec
loope
mov
mov
mov
jnp
mov
ror
jmp
jno
pop
push
xchg
and
fs
sbb
aad
arpl
xchg
into
ja
loope
cli
xor
adc
out
pop
pop
cmp
or
fldenv
test
jmp
dec
lret
nop
pop
ja
jle
cmp
xor
mov
cmp
xor
fdivl
jne
fldcw
call
push
loopne
popf
dec
mov
lret
mov
push
out
aam
jp
cwtl
repnz
xor
dec
int
push
dec
jg
add
inc
dec
mov
or
xchg
pop
arpl
pop
aam
repz
loopne
jnp
ja
add
cli
pushf
fcmovnu
or
xchg
mov
jbe
mov
js
stos
aad
lret
mov
xorb
loopne
xchg
movsb
push
pop
ds
dec
mov
pop
icebp
stos
jnp
aad
in
inc
in
cmpsb
setne
outsb
add
insb
dec
ret
popf
outsb
or
or
cmp
les
ds
dec
jns
fstpl
shrl
mov
inc
jbe
int
pushf
stos
jge
sub
das
pop
or
daa
inc
ret
dec
movsl
rorb
jmp
xchg
fistpll
xchg
cmpb
cld
push
loope
pop
sbb
xchg
xor
cmp
roll
push
gs
movl
int
xchg
mov
inc
and
xor
cmp
lret
jmp
out
xor
or
inc
adc
std
pop
dec
jp
mov
jno
jecxz
xor
out
test
imul
add
add
mov
sub
mov
sub
dec
sub
xor
shlb
faddl
outsl
inc
call
clc
dec
dec
arpl
ss
add
xor
jbe
sahf
fldenv
lcall
mov
push
rcrl
popa
mov
push
or
pop
bound
jg
mov
loopne
fisttpll
mov
add
lcall
and
mov
std
jbe
push
and
jbe
dec
push
inc
inc
mov
add
pop
or
xor
cmp
orl
ret
pushf
faddl
repnz
in
cmp
mov
aad
movsb
mov
push
and
xchg
inc
mov
mov
mov
ret
scas
out
sub
ja
imul
idivl
push
mov
in
mov
ret
rol
js
into
fildll
or
ds
imul
loopne
rorl
push
jae
fwait
arpl
and
popa
mov
ljmp
mov
xchg
scas
in
in
ja
mov
addr16
sub
pop
mov
daa
jp
flds
cmp
jo
sub
dec
and
insl
pop
test
outsl
xchg
jo
and
lods
sub
pop
rclb
inc
lock
enter
js
adc
xchg
pxor
inc
in
sub
push
lock
add
inc
or
ret
mov
mov
rolb
test
cmpb
orl
enter
andb
int
rcrl
orb
aaa
es
jp
mov
xor
daa
push
xchg
push
inc
dec
pop
test
push
imul
sbb
lret
xchg
adc
lds
mov
xor
push
cmpsl
lds
int
lret
sahf
sub
dec
test
sub
les
mov
jo
int
in
shl
mov
int
loop
sub
or
ret
cmp
fs
push
ret
stos
lcall
jno
js
cld
fsub
mov
cwtl
lahf
jg
test
and
in
iret
pushf
or
jmp
add
dec
xchg
mov
pop
inc
out
testb
lahf
ljmp
sahf
mov
jecxz
sub
pushf
push
xor
mov
das
lcall
shll
pushf
nop
jg
aaa
notb
pushl
inc
repz
dec
inc
sub
rcrl
add
aam
pop
dec
pop
sbb
or
xor
mov
cmp
sbb
jb
ret
adc
or
jecxz
pop
push
mov
sbb
insb
jo
jmp
mov
xchg
push
sbb
loope
jnp
mov
jb
jb
sbb
xchg
cmp
push
cli
cmp
stos
lret
adc
and
ret
cmp
notb
pop
bound
movsl
ljmp
push
call
and
js
cmc
cmpsl
loopne
cmc
mov
addr16
xlat
into
enter
lock
pop
cmp
in
and
test
or
cmpsl
out
xor
sbb
and
adc
loope
dec
test
lret
in
addb
fbld
pushf
xlat
imul
cmc
popa
adc
jecxz
les
or
std
lret
mov
adc
dec
cs
stc
test
icebp
test
shll
jb
cmc
mov
std
lock
inc
add
or
test
test
push
xor
lret
clc
inc
mov
std
pop
inc
xor
xor
mov
cwtl
fdivs
out
sub
cmpsb
push
or
xor
or
push
stos
and
int3
in
in
lods
xchg
adc
dec
sbbb
imul
dec
cs
imul
dec
mov
lods
mov
lock
rcl
push
ret
dec
imul
insb
test
sarb
and
rorb
iret
or
sbb
rolb
cltd
mov
out
cmp
filds
cmp
pop
mov
jecxz
lods
xchg
jp
xor
les
jo
notl
adc
int
out
push
stos
fiaddl
or
shrl
mov
mov
mov
popf
pop
outsb
and
jns
cmc
mov
ja
lods
pushf
jge
imul
lcall
dec
dec
xchg
xor
dec
outsb
es
mov
cmpl
ja
addr16
mov
out
testl
sub
sti
pop
ficoms
decl
xor
bnd
icebp
arpl
mov
jle
adc
push
pop
inc
push
cmp
jne
dec
mov
jne
out
out
jp
adc
notl
mov
cmp
inc
lock
cmp
dec
fcoml
sbb
mov
rcr
aad
cmpsl
in
xchg
gs
movsw
jmp
xchg
mov
testb
testb
imul
or
std
loope
jle
sti
pop
nop
pusha
sub
xor
dec
aas
fnstcw
sbb
js
pop
jp
push
pusha
mov
rorl
cmpsb
test
pop
xor
and
xor
and
push
int
orb
inc
in
pop
add
lret
insb
pop
xor
or
ljmp
mov
mov
add
adc
jp
cmp
test
cmp
xchg
pop
in
xchg
adc
fistl
add
mov
jge
jnp
mov
mov
add
sbb
pop
repnz
jg
fsubrs
push
addr16
push
xchg
dec
sti
sti
addl
sti
mov
pop
mov
jp
and
mov
mov
sub
add
loopne
in
push
movsl
and
paddusb
inc
ret
cmp
adc
push
adc
xor
mov
stos
dec
or
addr16
test
jb
idiv
push
stc
fisubrl
dec
lods
push
iret
xchg
sub
fcomps
call
and
insl
jne
fucomi
cmp
dec
adc
mov
cwtl
sub
xor
fisubl
aad
adc
push
mov
jp
push
sbb
sahf
lock
lret
arpl
jae
dec
aas
xchg
inc
mov
adc
loopne
push
push
rcrb
inc
sbb
repz
mov
arpl
mov
push
jg
cmpsl
pusha
in
hlt
cmpsl
dec
xchg
xor
mov
jp
push
fdivrp
fnstcw
push
or
jns
push
dec
or
addr16
inc
inc
adc
mov
ds
cld
lds
iret
jmp
mov
adc
xchg
pushf
ss
call
inc
push
xor
enter
push
movsb
cltd
jmp
sahf
mov
push
mov
sbb
sbb
lds
imul
inc
nop
into
jge
ret
jo
loopne
inc
sbb
andl
pop
pushf
pop
adc
pop
sbb
data16
cld
jge
push
mov
aas
mov
mov
push
scas
aad
jnp
push
push
in
inc
movsb
pop
pop
into
cmp
mov
out
loop
sbb
sub
out
cmp
cmp
les
roll
mov
scas
dec
into
decb
mov
sub
rcrb
push
add
stos
sbb
movsb
out
adc
daa
ja
fdivrp
cmc
aaa
mov
jg
inc
jge
cmp
sbb
push
mov
out
stos
adc
loop
lock
or
xchg
loopne
xchg
bound
sub
gs
adc
adc
bound
push
jmp
movsl
push
jne
das
lods
cmp
xor
ljmp
lret
jbe
ficompl
jle
add
ds
mov
push
leave
into
mov
and
mov
fwait
aaa
add
movsb
sub
xchg
nop
sbb
inc
jp
test
arpl
xorl
faddl
loope
xlat
mov
iret
fisubs
pop
jge
hlt
and
jae
lock
jl
xor
and
mov
push
mov
sub
cmpsb
js
sub
pop
ss
setns
jne
repnz
or
push
push
add
add
and
mov
nop
sbb
cli
add
addr16
mov
arpl
pop
ja
pop
inc
inc
movsb
dec
jae
cmp
jb
test
repnz
push
aaa
out
jle
das
ficompl
jno
pusha
outsb
cwtl
lods
repnz
lea
jnp
add
xor
push
gs
adc
pop
push
roll
stc
adc
push
fucom
sbb
cmpsb
stos
stos
add
cs
cmp
lds
cmp
push
ss
lret
mov
hlt
mov
and
push
adc
push
or
inc
pop
repnz
loopne
sbbb
in
jb
in
clc
pop
sbb
add
paddq
enter
push
pop
xor
mov
xor
scas
fs
sub
jno
sarb
adc
stos
cmp
or
add
mov
jmp
mov
and
notl
ret
xchg
mov
les
or
fsts
mov
mov
adc
sub
xchg
outsb
pop
int3
xor
fwait
aad
cmp
cli
enter
and
enter
mov
std
cmpsb
in
mov
in
mov
pop
shll
xchg
mov
jle
test
cmp
xchg
dec
jns
mov
loopne
lods
jl
inc
xor
cmpsl
fisubs
dec
iret
add
ret
loop
enter
popf
inc
cs
icebp
loopne
and
out
sbb
mov
in
adc
nop
or
test
jns
aam
inc
aam
pop
and
fwait
jbe
ret
add
push
mov
inc
je
xchg
xor
insb
mov
push
ficoml
sahf
call
sbb
lea
es
in
cmp
xor
shrl
xor
cmp
push
inc
and
mov
fldl
cmp
adc
xchg
and
cmp
stos
inc
aas
or
lea
scas
mov
mov
pushf
leave
xchg
ss
ss
jne
adc
imulb
and
mov
pop
adc
sub
fucomi
pop
mov
ja
dec
mov
mov
hlt
adc
cmpsb
sub
fwait
jns
sub
adcl
push
int3
pop
adc
mov
mov
jo
imul
jle
pop
cmp
xchg
out
cmp
mov
enter
jmp
pop
and
test
test
lods
shll
push
in
movsb
mov
push
jo
xchg
add
out
in
jl
iret
ljmp
lods
mov
dec
hlt
xor
js
adc
push
cmp
hlt
mov
popa
pop
mov
loopne
mov
icebp
sbbl
div
cmpsb
sbb
adc
mov
out
lcall
nop
ret
dec
inc
inc
jg
sub
jp
sbb
push
loop
sahf
data16
mov
jl
sbb
sbb
xchg
hlt
sbb
jno
adc
xchg
sahf
push
mov
cld
pop
dec
aas
xor
xchg
add
mov
sti
cltd
ds
lds
mov
xchg
sbb
and
cmp
cld
lods
test
xchg
adc
pop
mov
sub
xchg
call
pop
inc
pop
pop
insb
out
pop
rolb
call
pop
in
movsl
and
cmp
add
push
jge
stc
adc
cltd
cmp
popa
or
aad
repz
fmull
out
cmp
xchg
andl
jp
into
ds
pop
enter
dec
add
lock
mov
cmp
xor
scas
leave
adc
clc
or
fistl
xor
cs
std
xor
adc
in
stos
pop
mov
je
lods
push
je
xchg
shlb
lcall
xchg
inc
inc
mov
jns
mov
sub
add
jnp
jb
repz
add
mov
or
adc
movsl
sub
ljmp
xor
mov
pop
push
push
cmc
mov
add
aaa
ljmp
dec
and
mov
movsb
popa
mov
push
pushf
add
scas
repz
jmp
and
push
sbb
sub
outsl
icebp
sub
adc
mov
cs
pop
aam
push
inc
xchg
repz
mov
sbb
sarb
mov
lea
pusha
ret
lock
cltd
rcl
ss
and
mov
inc
lea
jge
push
xchg
pop
out
int3
std
mov
push
cwtl
mov
loope
movsb
enter
loopne
cmc
lods
js
push
xor
inc
xchg
jmp
inc
sahf
jle
arpl
mov
mov
mov
test
jmp
and
mov
lods
fdivrs
pop
sub
pusha
xchg
lahf
addl
sbb
or
lods
nop
scas
jl
mov
lods
stc
cmpl
xchg
xor
fcmovne
xchg
jle
sti
repz
mov
adc
sarb
movsb
jmp
mov
cmc
js
xchg
ret
push
cmp
and
mov
dec
jnp
jmp
aas
dec
cmp
inc
shll
pop
push
add
dec
adc
subl
push
ficomps
push
sbb
mov
jns
xchg
and
iret
pop
pushf
jbe
add
sbb
mov
lcall
cmc
push
dec
lods
adc
icebp
outsl
xchg
into
push
mov
loope
inc
call
adc
jge
adc
repnz
imul
in
idivb
xor
fbstp
push
fistps
sbb
cltd
inc
mov
pop
fwait
lods
je
xlat
fs
xor
in
scas
push
sub
add
mov
pop
push
lods
ds
cmpsb
cmp
mov
bound
pusha
cli
stc
xchg
cmpsl
xchg
sarb
js
push
lahf
cmp
push
jp
dec
addl
jl
lret
shl
fcmovnu
dec
ficoml
leave
mulb
std
mov
dec
jo
mov
push
xor
push
mov
enter
ljmp
or
mov
outsb
and
mov
pop
xchg
adc
adc
mov
arpl
or
sbb
or
aaa
jp
adc
comiss
mov
cmp
sub
mov
xchg
mov
outsb
mov
lods
push
loope
mov
fidivrs
mov
mov
xchg
shrl
jmp
into
aaa
adc
pop
fcoms
test
popa
dec
sub
or
imul
insb
adc
lahf
xor
xchg
sub
fistl
stos
jmp
arpl
movsl
push
sub
call
shll
pop
insl
gs
decb
add
mov
adc
pop
cmc
call
leave
mulb
xor
sub
jae
test
lcall
lock
imul
xor
aad
sub
or
sti
cmp
into
adc
xchg
dec
dec
lods
xchg
fsub
je
fiadds
pop
es
in
push
das
mov
push
sahf
jecxz
dec
jmp
sbb
push
outsl
sub
mov
sub
andb
adc
xor
fdivr
pushf
es
cwtl
pusha
out
scas
push
arpl
aas
adc
frstpm(287
adcl
cmp
xchg
add
out
shr
int3
mov
inc
scas
fsubr
inc
iret
cli
xchg
or
sub
and
daa
xor
ret
jl
cld
mov
in
xchg
sub
push
push
xor
xor
insb
xchg
in
sbb
dec
mov
fists
aaa
or
or
stos
sub
push
clc
subb
insl
data16
mov
jmp
pushl
fdivrl
or
adc
lret
idivl
sarb
repnz
stc
push
movsl
lahf
ficomps
jae
fs
int
testl
add
jg
push
fnstenv
lret
mov
cmc
pop
mov
leave
pop
mov
test
xchg
fcmovu
inc
stc
nop
ss
mov
xchg
in
lock
sarl
mov
mov
rclb
repz
mov
mov
push
dec
push
jl
adc
xchg
xchg
rorl
xor
out
jae
stc
lods
jb
popf
jne
xor
push
and
push
in
push
and
adc
ds
pop
xchg
mov
test
into
fdivs
add
add
cmp
pop
cmp
add
mov
push
pop
push
and
popf
push
cmpsb
sbb
and
aad
cmp
lock
jp
sbb
clc
rorl
fidivl
mov
mov
adc
inc
pop
scas
or
pop
push
sbbl
data16
push
and
inc
pop
popf
int
dec
les
in
or
xchg
xor
les
push
push
stc
inc
in
es
or
lret
cli
loopne
out
adc
ljmp
mov
mov
mov
fisttps
push
icebp
xor
or
iret
cmp
push
gs
adc
int3
loope
dec
adc
fisubs
jge
add
stos
jp
inc
pushf
test
test
push
jbe
aas
adc
or
and
jno
cs
lds
adc
adc
cmc
dec
ss
out
sbb
cmp
sub
jns
cmp
repnz
dec
mov
fildl
mov
xchg
lods
adc
jge
popf
rcll
cmp
mov
sti
movsl
push
iretw
repnz
mov
and
pop
adc
lods
mov
push
cld
insb
inc
popf
lcall
addr16
add
daa
aas
pop
shr
mov
test
add
in
rcll
imul
xlat
fisttpl
int
cs
ret
mov
jmp
mov
das
jge
mov
aad
cmp
dec
push
mov
addr16
les
clc
nop
arpl
loopne
jl
std
std
push
or
xchg
cmc
dec
xor
adc
jle
jge
fwait
push
push
stc
cmp
sbb
xchg
pop
xchg
aad
mov
xor
and
xchg
push
xchg
cli
push
nop
adc
or
sub
in
xchg
xchg
sbb
fistpll
jno
dec
xor
and
pop
xor
mov
pop
jo
sub
cmc
repz
fsubp
dec
adc
insl
xchg
jae
adc
fists
xchg
sub
cmp
adc
rclb
pop
leave
imul
clc
pushf
dec
mov
pop
pop
outsl
cmp
cmp
out
xor
fmull
out
mov
jp
imul
mov
pop
xchg
adc
mov
cmp
lret
test
dec
arpl
xchg
pop
insl
xor
repz
and
aaa
mov
loopne
arpl
cmp
jb
inc
cld
enter
cmp
subl
pop
imul
sub
mull
aam
out
mov
and
iret
jp
sti
sub
push
push
jmp
shll
roll
cmp
jns
or
rorb
jnp
pusha
repz
xor
mov
ret
cs
or
fstpt
negw
add
in
scas
ljmp
ja
mov
inc
sbb
mov
xchg
or
push
imul
inc
pushf
xor
pop
push
mov
lret
jmp
out
jecxz
dec
cmpxchg
mov
xor
mov
jns
repnz
inc
xchg
mov
dec
fdivrl
ja
xor
dec
movsb
or
xorb
cmp
adcl
lds
mov
and
cmp
jmp
outsb
jmp
mov
jo
mov
pop
loopne
cli
les
inc
or
shlb
in
rcll
cltd
ret
sub
enter
cld
push
push
xlat
cmp
shll
jbe
push
in
add
xor
mov
enter
fisttpll
sbb
pop
mov
pop
cwtl
js
mov
push
test
mov
pop
xor
dec
xchg
bound
mov
jae
pop
push
inc
add
movsl
adc
nop
jae
call
mov
and
cwtl
ret
scas
xchg
fistl
mov
inc
cmp
ret
lds
testb
int
jnp
or
xor
cld
sbbl
jecxz
imul
pop
test
pop
jnp
mov
xor
idivl
xchg
mov
jge
xchg
or
jge
stos
add
pop
in
nop
mov
lea
adcb
push
aaa
lea
mov
call
outsl
sbb
sub
dec
imul
clc
inc
test
dec
cs
mov
push
mov
pop
loop
scas
mov
cmp
jb
fisubrs
icebp
sub
xorb
mov
and
mov
xchg
dec
cli
and
fdivs
sub
popl
stos
mov
push
push
mov
ror
cli
lods
rcrl
in
pop
out
add
outsb
push
xor
or
sub
xchg
inc
test
cmp
or
cmc
mov
insb
bound
jns
inc
mov
aam
jp
xchg
mov
or
int3
xchg
ftst
mov
cld
xor
sbbb
cli
test
jnp
push
scas
ret
pusha
push
outsb
jmp
sub
daa
inc
mov
and
imul
xchg
out
cmp
xchg
sub
push
aam
data16
mov
cmp
lret
stos
add
inc
mov
bound
addr16
sbb
pop
xchg
fisubrs
cmp
rcr
jno
push
dec
sub
mov
call
fs
jge
in
sbb
add
cmp
sbb
subb
xchg
call
adc
cld
inc
out
mov
xor
mov
repnz
cwtl
pop
fdivs
xchg
ljmp
int
imul
adc
inc
push
mov
mov
push
cmpsl
jl
fdivrs
or
sub
out
pop
aas
cmp
push
ret
adc
cltd
scas
mov
jl
lret
nop
in
test
push
out
push
movsl
lcall
and
xchg
mov
adc
repnz
jae
jge
movsl
push
mov
xor
sub
cmp
imul
pop
push
cltd
in
fsubrl
pop
mov
arpl
inc
add
mul
jo
imul
cmpsb
pop
into
stos
lods
inc
sub
sbb
repz
insb
push
xor
add
inc
hlt
pop
test
orb
sbb
in
outsb
iret
fxch
lret
mov
sub
outsb
inc
mov
pushf
ret
mov
into
or
adc
mov
idivb
push
iret
jecxz
pop
addb
pushf
xchg
loopne
cwtl
ds
xor
dec
sbb
mov
cmp
aas
lea
add
inc
test
xchg
cmp
inc
cmpsb
mov
push
inc
jo
adcl
xor
subb
lods
xchg
clc
dec
jg
cmpsl
or
rorl
dec
xchg
xor
bound
dec
shr
mov
mov
neg
int3
aad
sbb
mov
cwtl
jge
push
cmp
pusha
jb
xorl
subl
stos
scas
jne
movsl
dec
pop
push
inc
dec
fwait
test
xor
mov
ret
aaa
mov
es
sbb
mov
jbe
xlat
sub
add
ja
das
sbb
adc
das
test
mov
sub
cmp
xor
adc
mov
test
loopne
add
mov
lahf
loop
adc
rcrb
test
push
fmull
pusha
add
movsl
ret
sub
mov
sbb
pop
ror
jp
enter
push
jle
push
fwait
sahf
add
adc
imulb
les
sub
xchg
adc
data16
dec
out
dec
jnp
popa
xchg
xchg
push
mov
sbb
shll
out
cmc
push
fnsave
inc
shlb
jb
imul
rcll
int
lock
push
mov
inc
in
cmpsb
mov
outsb
stc
inc
jg
sbb
push
pop
jle
fisttps
cs
inc
sbb
mov
mov
into
sti
pop
mov
bound
mov
pop
icebp
adc
fmuls
cmp
out
dec
int
add
arpl
xlat
adc
shll
in
mov
rclb
loope
jo
mov
in
ljmp
repnz
aas
lret
in
sub
xchg
rolb
inc
lret
scas
test
pop
push
lcall
testb
add
mov
inc
jnp
mov
inc
hlt
out
lods
jnp
dec
aaa
push
aam
test
dec
int
dec
mov
and
rorl
pushf
add
mov
stos
push
sbb
sub
call
dec
sbbl
and
mov
mov
xchg
add
sub
stos
fwait
mov
daa
xor
xchg
mov
pop
fimuls
mov
jb
xchg
inc
test
cmpsb
adc
int
dec
mov
stos
ljmp
jecxz
cmp
cmp
or
icebp
jle
push
mov
adc
fists
or
mov
les
sbb
hlt
dec
adc
xorl
sub
push
andl
xchg
mov
and
pop
pop
lock
add
dec
repz
adc
or
daa
rorl
movsl
ss
xchg
pop
rcrb
push
cmpsb
xchg
test
fwait
lret
jne
mov
xchg
lock
inc
mov
loope
or
push
push
mov
fistl
push
rcrl
cmp
les
lea
leave
push
jp
xchg
movsl
outsl
pop
sub
rcr
inc
aam
into
std
or
iret
int
sarl
fsts
notb
pushf
xchg
add
inc
rolb
mov
mov
push
xor
ja
push
loop
test
ficoms
pop
int
jl
mov
jb
aad
outsl
xchg
and
test
or
and
ss
adc
xchg
xor
arpl
out
xor
lret
movb
or
pop
loopne
mov
jg
sub
adc
push
gs
movsl
lahf
ror
mov
mov
mov
cli
adc
es
mov
push
ja
lret
push
push
inc
or
das
outsb
inc
ss
loopne
movsb
sbb
rclb
add
dec
int3
je
lcall
xor
call
or
pusha
into
jle
add
pop
cltd
jo
shrb
adc
xor
or
cmp
lds
repz
mov
bound
rclb
pushl
mov
inc
jae
push
movlps
out
push
add
into
test
adc
negb
xchg
pop
mov
pop
scas
add
pop
sbb
sub
aad
popf
jo
xor
imul
ret
and
mov
push
sub
loope
clts
mov
mov
rep
test
pop
gs
add
push
clc
xlat
mov
mov
cltd
push
dec
and
mov
add
rorb
arpl
pop
push
leave
jo
ja
pop
pop
pop
imul
repz
push
pop
rcll
out
fisubs
jl
cmp
imul
ljmp
xchg
adc
shl
aas
lds
push
push
aaa
ficomps
nop
pop
sbb
cmp
mov
adc
lret
mov
out
adc
mov
loop
out
lds
pop
fcomps
nop
xor
sub
mov
cltd
adc
fsub
dec
inc
jne
bound
adc
addr16
cld
sbb
adc
sub
lcall
mov
cmc
ror
inc
out
dec
fstps
fnstsw
jnp
outsb
dec
sar
std
cld
xchg
cmp
outsb
fdivrl
fisttps
movsb
pop
lock
add
sub
jb
pop
xor
cmpsb
mov
cli
data16
mov
xchg
aad
test
mov
and
xor
cld
lods
cmp
add
insb
stc
add
push
addb
xchg
dec
call
adc
sbb
imul
inc
shll
push
xor
das
outsb
or
cmp
jne
aaa
or
addl
push
xor
outsb
lock
frstor
xor
inc
je
inc
xor
cmp
mov
mov
xchg
fdivs
sbb
mov
jl
enter
sub
popa
roll
imul
sbb
add
add
mov
pop
push
cli
int3
pop
mov
jecxz
xor
adc
testb
dec
mov
sbb
cmp
lret
in
sub
and
and
push
xchg
xor
jg
fcmovu
xchg
bound
leave
cmp
cmp
push
sbb
lret
pop
sbb
lret
imul
fwait
js
test
lret
fwait
push
adcl
xchg
xchg
std
sub
fdivs
fsubs
cwtl
mov
and
push
pushf
mov
sahf
loop
popf
mov
push
mov
xchg
jle
jb
shlb
or
shlb
into
das
lret
push
cmp
rclb
out
lahf
or
xchg
dec
rolb
in
out
inc
int3
inc
cmpsb
mov
xorl
xchg
lcall
push
loope
sub
je
mov
pushf
push
das
call
ret
movsl
aam
jno
sbb
pusha
xchg
adc
jne
aaa
push
sbb
mov
sbb
ljmp
xchg
stos
insb
sub
scas
and
jno
sbb
mov
lret
pop
sub
xchg
mov
lods
in
push
lea
xchg
test
rcr
addl
ds
loop
insl
mov
lock
pop
ret
adc
inc
cld
popf
out
and
or
daa
cmp
test
cmp
xor
icebp
mov
scas
mov
in
xchg
flds
adc
mov
inc
jp
and
xorb
xor
xor
inc
in
mov
scas
mov
sbb
pusha
or
pop
adc
mov
outsl
mov
lea
cmp
je
in
in
testl
jg
loope
add
cmc
addr16
and
imul
pop
popf
je
icebp
lock
pop
sub
jo
and
xor
scas
sbb
jle
adc
clc
mov
or
jp
shlb
int
mov
scas
gs
lds
test
out
cmc
mov
mov
lret
and
sbb
loop
das
lds
add
jmpw
fnsave
call
sub
outsl
popf
cmc
pop
rcrb
jne
jmp
or
hlt
les
sahf
in
pop
data16
sarl
je
decl
loop
pop
pop
loopne
pusha
or
sbb
loop
lods
mov
jne
jp
into
mov
loopne
jo
std
mov
cmp
cmp
outsl
test
fwait
cmp
fsubl
repz
xchg
in
orl
je
ret
mov
int
or
cmc
arpl
mov
jnp
enter
popf
dec
adcl
dec
test
aam
pusha
and
xchg
ja
add
cmpsl
jne
xchg
js
sbb
mov
dec
faddl
dec
inc
pop
gs
xchg
pop
and
popf
bound
data16
push
repnz
or
rcrl
cmpsb
sub
pop
lods
adc
add
mov
sbb
ljmp
push
aad
jno
jne
sub
stos
jnp
pop
in
pop
lds
data16
or
out
mulb
jnp
filds
stc
fs
and
cmpsb
aam
std
fs
cs
cmp
jl
or
aam
add
repz
daa
pop
bound
aam
mov
notl
jl
shlb
add
leave
mov
std
movb
jg
lret
mov
es
imulb
pop
aas
insb
mov
iret
jl
inc
push
xor
sar
or
int3
mov
sub
pushf
in
je
add
dec
xor
cmp
pusha
out
jnp
xor
xchg
mov
push
mov
xchg
pop
cs
mov
mov
sub
out
mov
mov
leave
push
mov
js
push
push
push
outsl
xor
fldl
jo
inc
clc
lcall
pusha
adc
pop
in
sbb
out
cmp
jmp
in
adcl
pop
cmp
inc
fadd
ljmp
lcall
inc
jne
sti
xchg
test
mov
or
imul
cltd
movsb
dec
adc
sti
fldcw
sbb
repnz
mov
outsb
or
std
jb
repnz
insl
shll
arpl
rcrl
out
adc
popa
lahf
cmp
arpl
push
clc
call
xchg
pusha
sbb
mov
push
xchg
aad
bound
sub
dec
fcomps
jno
lods
jmp
xchg
dec
pop
js
pop
cmp
div
mov
jnp
psubb
int
aam
and
leave
and
pop
sub
push
movsl
add
inc
jmp
dec
push
dec
sbb
insb
sub
int
aam
cmpsl
xor
int
lods
scas
in
lret
push
ret
cmc
out
fnstenv
inc
pusha
es
xor
shrl
test
pop
dec
mov
sub
jp
imul
sub
or
and
xor
popf
cmp
pushf
pop
mov
popa
inc
test
and
sub
sub
lret
loop
test
stc
test
inc
shrb
mov
sbb
and
dec
xchg
or
mov
pmullw
mov
add
jp
mov
and
lods
pop
sub
mov
and
test
xlat
mov
sub
sbb
pop
cmp
fsub
push
bswap
push
xlat
lods
xor
fildll
push
dec
sbb
popf
mov
mov
push
mov
ljmp
imul
xor
xor
push
shrb
push
jno
sub
inc
xchg
inc
pop
insl
sbb
call
leave
out
xchg
xor
in
arpl
insb
js
jp
jmp
xor
movsb
cmp
imul
das
add
js
mov
dec
mov
lret
sbb
fwait
sbb
mov
or
scas
pop
js
subl
lahf
pop
pop
mov
imul
movsb
cltd
mov
fstpl
sbb
jne
movsb
aad
daa
subl
test
jg
or
mov
icebp
mov
mov
jnp
and
jge
std
int3
subb
jno
or
push
jbe
pop
cmpsl
mov
xchg
pop
xor
cli
mov
dec
or
add
test
das
aad
mov
sub
stos
mov
xor
pop
mov
push
addr16
scas
sahf
mov
in
inc
cmp
inc
xchg
out
les
push
push
repnz
inc
lds
inc
cmc
fdiv
mov
push
ljmp
fnstenv
mov
negl
addb
xchg
mov
fsubrl
aam
inc
outsl
and
sub
adc
and
punpcklwd
pop
lods
test
jle
sub
mov
push
pop
into
mov
push
push
cmc
pop
mov
push
subb
push
pop
ja
xor
lret
sub
jnp
push
jo
mov
xchg
xor
icebp
lret
inc
nop
fistpll
push
xor
mov
or
adc
fistps
cld
stos
mov
push
dec
out
mov
jl
aas
in
or
jp
movsb
mov
idiv
dec
roll
scas
jecxz
inc
int3
cmp
dec
es
dec
xlat
pop
xchg
test
inc
aam
xor
stc
outsb
std
hlt
cli
ret
dec
loop
push
mov
sti
clc
stos
divl
add
cld
xchg
sub
mov
mov
adc
mov
movsl
out
jb
mov
mov
sub
jl
mov
inc
inc
inc
add
cwtl
mov
add
and
int
sti
das
or
int3
fsubl
jb
fists
pop
jp
jbe
pop
jo
xchg
inc
les
push
lds
pushf
outsb
push
shlb
imul
pop
pusha
mov
lret
insb
data16
in
arpl
sbb
pop
shlb
jge
insl
sub
or
pop
sub
or
inc
sub
inc
ss
push
jmp
push
jmp
add
sbb
mov
mov
into
stos
jnp
mov
call
or
jne
or
dec
iret
into
daa
fwait
cmp
hlt
cmp
loop
mov
les
inc
rep
mov
shlb
inc
sub
adc
movsb
mov
push
inc
adc
mov
pop
cwtl
dec
inc
jg
mov
push
fisttps
mov
and
sub
push
cmp
dec
hlt
fdivr
call
xlat
imul
pop
cltd
push
nop
cld
jmp
mov
sub
cmp
mov
sbb
flds
hlt
cmp
jmp
test
cmp
iret
in
xchg
jp
cmc
iret
mov
adc
jl
fcmovbe
iret
repz
repz
jne
mov
imul
adc
push
mov
sti
testb
xchg
sti
out
pop
test
call
sbb
rol
pusha
pusha
add
enter
push
push
jg
inc
lds
add
imul
in
out
sbb
mov
push
mov
inc
push
data16
fs
cltd
loope
insl
sub
cmp
cmp
leave
pop
test
pop
rcl
jbe
sub
mov
fidivrs
mov
inc
mov
sub
sub
aas
and
xor
inc
add
cmp
mov
xchg
dec
cmp
rcrb
add
ud0
enter
pushl
fs
and
adc
bound
mov
sbb
sbb
subl
push
icebp
outsb
sti
mov
xorb
jnp
shl
lahf
inc
andl
inc
out
std
into
lret
mov
pop
mov
int
xor
fcomip
dec
out
iret
rol
cmpsl
aaa
std
imulb
mov
adc
mov
icebp
mov
mov
mov
sub
lock
hlt
add
ffreep
xchg
mov
push
icebp
mov
cltd
sub
aam
mov
or
sbb
js
dec
repnz
jne
mov
or
mov
out
bound
xchg
repz
sub
addr16
inc
ljmp
insl
dec
jae
test
mov
push
sub
jae
add
sub
add
pop
loop
add
loope
jg
daa
cmp
dec
sub
mov
into
sub
push
leave
mov
enter
mov
popf
fwait
add
mov
movsb
xchg
pextrw
lcall
pop
cmp
jp
popf
addr16
push
sbb
fistpll
movsl
jae
pop
negl
cwtl
xor
out
mov
jmp
jl
sbb
in
or
movsl
add
fwait
cwtl
or
inc
popa
and
adc
mov
mov
push
ljmp
mov
outsb
sti
leave
scas
and
jnp
nop
push
jo
xchg
in
sbb
pop
add
popf
sub
sbb
and
scas
sub
popf
sti
in
inc
ret
sbbl
aas
cltd
fisubs
jg
dec
loope
xor
dec
mov
or
sbb
pop
aaa
sti
cli
and
add
adc
cltd
les
or
pop
xchg
and
add
push
push
dec
in
sub
add
stc
jmp
fs
pop
pop
xchg
inc
and
push
mov
addr16
mov
sub
jnp
movsl
xchg
xchg
js
fldl2e
or
ret
int3
fmul
jnp
aad
adc
dec
movsb
cmp
loopne
popf
jge
aad
or
mul
mov
aaa
dec
fstps
add
nop
xchg
pop
mov
dec
inc
xor
pop
or
fisubrs
mov
mov
xor
ss
lock
fmull
pushf
xor
jnp
jle
mov
pop
cmpsb
int3
shrb
xchg
aas
push
fcmovu
and
cmp
shrl
or
xchg
repz
out
gs
jmp
xchg
inc
mov
pop
les
loopne
adc
repnz
leave
push
xor
dec
jbe
out
push
in
push
jo
xor
lret
mov
adc
movsb
movsl
sub
out
movsb
cmp
pop
das
adc
aam
push
jp
or
jne
lahf
or
mov
popf
pop
sbb
es
outsb
cld
cmp
dec
or
or
lret
adc
sbb
rcll
in
sub
mov
shr
inc
mov
lods
jne
test
inc
push
xlat
cmp
mov
add
sub
cmp
mov
mov
adc
push
sbb
pop
jmp
lods
shrb
xor
mov
int3
and
jne
sar
int
outsl
lahf
das
jne
and
outsl
mov
inc
jo
cmp
pushf
add
xor
lret
sbb
mov
bsr
enter
xchg
scas
nop
inc
sbb
jl
in
and
cmc
or
push
dec
push
daa
dec
push
addr16
sbb
insl
sti
popf
lods
cmp
or
test
gs
adc
in
cmp
aaa
cmp
push
adc
fwait
ja
pusha
imull
inc
pop
es
repnz
mov
insl
sahf
and
push
insl
rcr
sub
inc
cmp
cmpsb
inc
lahf
fdiv
sub
mov
and
mov
shll
xlat
lea
aas
push
sub
shl
ret
mov
repnz
stc
je
int3
and
scas
pop
pop
jne
and
xor
in
sti
lods
jge
dec
shll
adc
pop
sub
sti
mov
mov
mov
mov
pop
int3
mov
scas
and
sub
add
loopne
push
jl
and
es
adc
mov
xchg
cwtl
movzbl
dec
popa
enter
das
cmp
mov
and
ds
lods
pop
adc
push
or
ret
xor
jns
in
push
dec
cmp
dec
sbb
jge
dec
mov
mov
jb
jle
cs
mov
test
and
imul
cltd
sub
fstp
xchg
cmpsl
das
outsl
dec
data16
aad
adc
mov
testl
pop
jb
addr16
ljmp
and
jo
xchg
das
push
jae
xorb
inc
push
cli
out
jae
pop
lahf
pop
orl
lret
xchg
stc
out
or
push
call
fidivrl
repz
cmpsl
sub
pushf
inc
jge
dec
out
xchg
mov
pop
lahf
and
jle
sbb
push
cld
loop
xor
dec
and
enter
lret
out
or
daa
push
push
pop
mov
shlb
inc
mov
addr16
hlt
repnz
push
sahf
push
cmp
and
cmp
js
push
adc
or
add
roll
daa
nop
add
push
mov
stos
jmp
and
shrb
cmc
or
icebp
jno
std
int3
stos
pop
rclb
add
insl
shll
fsubrl
rcll
mov
popf
pushf
sbb
je
jne
pop
adc
mov
ds
adc
add
add
andb
or
add
jne
bound
es
lret
cmp
push
int
loope
pop
sahf
xlat
cmp
movsb
roll
mov
lcall
sub
subb
jno
int3
inc
mov
sub
mulb
fmull
xor
sub
js
push
and
lahf
inc
pop
or
jbe
sub
push
sbb
roll
call
out
outsl
rcrl
stc
lcall
outsl
inc
jl
ja
roll
push
mov
and
pop
je
repz
addl
cmc
out
ja
mov
lea
cmp
pop
sub
add
or
leave
sbb
loope
stos
movsb
inc
add
and
cwtl
fwait
and
pusha
push
lcall
popa
mov
fwait
jmp
sbb
sub
push
jnp
sbb
or
sbb
outsb
pop
das
jl
cmp
fisubrl
mov
pop
pop
and
ljmp
cmpsl
cld
adc
fists
lret
das
pop
xor
pop
ret
and
pop
mov
testb
mov
jnp
jl
inc
xor
aaa
pop
mov
ret
pop
sbb
mov
add
adc
push
or
in
jb
jecxz
xchg
dec
add
scas
jbe
daa
mov
dec
xchg
enter
jb
jnp
lret
sar
mov
xchg
aam
fwait
gs
daa
xchg
scas
cmp
sub
dec
mov
pop
mov
out
pusha
iret
pop
push
stc
adc
mov
out
or
das
mov
lcall
and
dec
test
je
push
or
or
lods
fnstcw
mov
shll
je
rorb
sub
andnps
and
imul
adcl
sbb
pop
scas
mov
imul
xchg
and
and
or
shlb
mov
push
incl
adc
notb
shll
mov
fwait
sub
jns
and
addl
xor
dec
jmp
mov
jecxz
movsb
sahf
xor
fwait
inc
outsl
fisubrs
pop
aaa
rcrb
jno
adc
or
adc
cmp
fwait
xor
movsb
push
dec
sbb
sbb
jno
scas
fisttpll
rcl
repz
pop
stos
cmp
fsubr
mov
add
and
imul
shll
inc
fisubrl
gs
jns
xchg
sbb
mov
jp
cmp
pop
inc
incb
sbb
push
inc
icebp
ds
mov
push
aam
and
dec
add
xor
cmpsb
cli
jbe
or
scas
ret
mov
les
mov
divb
jnp
jp
pop
pop
gs
dec
inc
in
outsb
mov
pop
dec
sub
xor
mov
sub
enter
push
lea
cmp
and
insl
or
cli
fwait
mov
pusha
pop
push
ffreep
icebp
jo
mov
cmp
fucom
xchg
movsb
std
add
gs
xchg
lea
ret
mov
and
pop
out
jmp
push
jmp
sub
dec
inc
cli
pop
lods
ja
into
filds
sub
imul
jg
test
push
je
es
stc
cltd
sbb
repz
cmpb
out
jae
test
push
mov
mov
popa
daa
data16
ret
mov
inc
jmp
pop
add
enter
rcr
arpl
mov
fxch
aad
insl
sub
jecxz
ljmp
jbe
add
scas
es
popa
dec
xchg
fimull
adc
cmpsb
std
jle
lcall
jne
lock
xor
dec
out
clc
sahf
add
mov
and
cmp
cltd
stos
daa
test
sarl
aas
jae
lods
mov
cmc
iret
cwtl
pop
pop
hlt
inc
mov
ja
sbb
xor
jp
cmpsb
adc
mov
pop
nop
cmp
mov
xor
pushf
mov
mov
sahf
push
and
sahf
cwtl
and
jp
jp
js
add
mov
push
pop
mov
dec
mov
mov
int
xor
add
jo
jae
rorb
sbb
aad
sbb
loope
xchg
out
mov
nop
lret
lahf
sub
mov
bound
cltd
decl
push
int3
or
ljmp
cmp
cli
xchg
fdivs
out
enter
inc
mov
into
rcll
in
sbb
aas
xchg
call
dec
mov
push
cmc
out
gs
xlat
incb
movsb
mov
movsb
rcr
es
lock
xchg
vmwrite
outsl
test
sbb
sub
sub
push
ds
dec
dec
nop
in
mov
sbb
inc
dec
adc
pop
mov
loope
xorb
dec
dec
mov
mov
or
fwait
aas
fisttps
cmc
xlat
lds
pop
ss
jge
push
stos
fdivs
mov
fstpl
sbb
add
cltd
ret
mov
and
jge
xchg
loopne
lods
push
jg
mov
cmp
jno
fwait
mov
inc
mov
fldl
gs
sub
lods
pushf
push
inc
mov
mov
pop
call
xchg
jle
imul
dec
or
lods
lods
rcrl
inc
mov
push
inc
fbld
stos
out
pop
pop
pop
stos
ljmp
cmpsb
adc
ret
sbb
xchg
mov
gs
call
stos
xchg
ficoml
sub
mov
cmp
xchg
mov
mov
jns
loop
jmp
int
dec
test
mov
pop
sbbl
xlat
shrl
sub
in
pusha
jp
imul
sbbb
mov
lds
or
add
fdivrl
ss
outsb
mov
orb
mov
aad
or
cmp
xor
fisubs
pusha
xchg
out
mov
or
cs
add
cs
cmp
or
cmpsl
inc
mov
or
je
or
rcll
push
dec
out
leave
das
daa
mov
stos
js
cmpsb
sbb
inc
test
aad
or
roll
xchg
lret
mov
sbb
mov
adc
inc
dec
out
cmp
cmp
call
sub
push
testb
jo
adc
rcll
dec
inc
cmpsb
jmp
imul
push
jb
inc
mov
ret
adcl
pop
xchg
lods
adcl
loope
out
adc
xchg
in
pop
mov
dec
cmp
clc
push
xchg
popa
adc
fsubrl
lcall
ds
sub
cld
push
jle
pop
nop
mov
push
bound
jle
mov
popf
xchg
lret
lea
xchg
pop
fmull
cs
pop
mov
mov
mov
adc
in
test
orl
lds
mov
movsl
out
mov
imul
fadd
push
xchg
por
pop
packuswb
push
ficomps
cmp
sbb
arpl
jae
ljmp
fcomip
cmp
and
or
out
adc
scas
scas
push
inc
cmp
lahf
les
cmp
outsb
add
or
xchg
ret
xchg
dec
push
fcoms
jb
movsb
push
arpl
mov
sub
outsb
push
loope
xor
rcrb
xor
push
add
mov
jmp
les
pop
clc
sub
sahf
xchg
add
insb
test
xchg
in
jno
mov
push
leave
hlt
insb
call
add
arpl
push
pop
scas
mov
push
xor
pop
aas
sbb
adc
xor
dec
push
pop
js
ret
push
sahf
pop
mov
loop
call
test
out
rol
dec
das
mov
xor
wrmsr
add
jg
out
mov
pop
mov
int
or
scas
ljmp
xchg
inc
not
scas
cmp
inc
loope
mov
mov
add
iret
cmc
push
cwtl
or
fisttps
sub
gs
inc
in
and
fcoml
mov
and
xlat
rclb
ja
dec
inc
scas
jle
call
outsl
sbb
mov
rolb
cld
fwait
add
dec
push
xchg
lock
lds
push
out
testb
inc
cwtl
movsl
xchg
jnp
dec
je
in
js
dec
mov
jg
jns
mov
xchg
fucom
sub
or
push
dec
push
mov
js
test
xchg
jno
adc
mov
stos
fcomip
dec
add
push
add
movsl
jl
ljmp
and
call
mov
add
xchg
lods
fwait
add
adc
and
pop
int
jp
insl
test
ljmp
lods
sub
pop
aam
cwtl
dec
imul
enter
or
fdivp
push
das
mov
mov
dec
and
xor
pop
pop
or
in
popa
pushf
jl
mov
adc
xchg
mov
aas
pop
aas
in
mov
sbb
jp
cmp
ret
insl
push
loopne
mov
mov
test
add
sub
iret
mov
stos
xchg
mov
xor
pop
popf
xchg
nop
ds
xor
sbb
push
in
mull
mov
pop
popa
sub
sahf
aad
adc
push
movsl
mov
outsl
ds
add
ja
inc
dec
sbb
sub
subl
scas
dec
xlat
xor
pop
dec
pushf
or
movsb
inc
lds
repz
inc
jns
test
pop
pop
push
in
push
fs
inc
mov
push
sti
nop
into
out
fstpl
lea
jp
jecxz
cmpsl
dec
mov
movsl
dec
dec
add
push
cltd
and
and
push
in
mov
or
jmp
adcb
mov
cmp
ds
jnp
sti
or
das
hlt
jg
pushf
jmp
pop
mov
out
stos
loop
xchg
pop
mov
or
in
sub
pop
ss
add
test
adc
pushf
cmc
jns
outsb
or
mov
push
sub
cmp
sti
mov
add
pop
loopne
inc
icebp
andb
sbb
jb
push
mov
in
xor
ret
fs
adc
ja
mov
mov
shl
mov
mov
push
add
add
data16
test
cmp
mov
stos
dec
lret
or
and
mov
lcall
mov
nop
add
jb
xor
add
lahf
imul
jg
data16
jno
test
mov
push
push
jnp
nop
sbb
or
scas
fstps
test
mov
mov
scas
in
cld
dec
push
inc
and
add
repnz
sbb
call
cmc
fisubrs
rcll
nop
leave
xor
fs
mov
xchg
jmp
andb
lea
adc
call
fs
xchg
or
mov
or
mov
arpl
ffree
popl
test
dec
xor
and
push
sbb
adc
jns
icebp
jp,pt
leave
iret
mov
shll
push
mov
cmc
jle
out
fwait
add
inc
inc
cmpsl
in
mov
pop
dec
ljmp
xchg
daa
andl
jbe
add
xor
pop
xor
dec
scas
sub
cs
data16
inc
inc
outsb
xor
xor
inc
sbb
push
js
mov
cmp
xchg
testb
ss
inc
push
outsb
loopne
lods
outsl
xchg
jg
mov
jmp
loopne
ja
stos
imul
pop
fs
pop
jge
hlt
faddl
and
jo
dec
add
out
mov
xchg
pcmpeqb
pop
jecxz
ljmp
pop
cmc
test
repnz
jbe
xchg
or
stos
inc
je
je
ret
ret
jle
jno
int
inc
outsl
sbb
mov
imul
cmpsl
jno
cmp
lock
fistpll
cli
mov
inc
aaa
dec
fxch
or
jns
mov
dec
loope
xchg
dec
push
les
dec
sar
adcb
pop
test
cli
negl
or
adc
cltd
cwtl
ljmp
cltd
or
add
adc
dec
data16
mov
push
sbb
push
cmp
xor
ret
popa
sti
push
adc
les
pusha
das
outsl
iret
addr16
push
adc
cmp
jg
cmc
jnp
xchg
mov
mov
cmp
out
decb
xor
cs
jl
sub
pop
test
cs
and
outsb
out
in
loop
ret
scas
xchg
lcall
imul
int
cwtl
or
or
je
and
sub
imul
mov
pop
stos
add
js
inc
mov
jecxz
or
fucomp
adcb
divb
shll
rcl
iret
fdivr
jbe
fs
rcr
pusha
mov
cltd
shlb
mov
mov
jno
and
jno
adc
es
xor
mov
out
lock
pop
shlb
or
pushf
nop
jno
adc
sahf
int3
sarl
mov
sub
mov
or
mov
mov
cmp
dec
lret
xlat
xor
mov
push
lock
shlb
popa
ret
jns
out
cmpsb
pop
xor
mov
int
dec
xchg
hlt
cmpl
adc
and
clc
xor
stos
hlt
fsubrl
sti
mov
hlt
push
xchg
daa
inc
test
add
fwait
push
mov
cmp
or
cmp
cmp
add
jle
jmp
mov
sbb
je
test
jne,pt
jbe
sbb
hlt
pop
pop
add
ret
or
test
icebp
inc
fadd
cmp
dec
push
rolb
in
push
lahf
popf
fcmove
add
add
push
cmp
ljmp
xlat
fbstp
pop
fistl
test
dec
push
jo
xor
int3
mov
cmpb
sub
addb
cmp
add
xchg
or
xorb
sub
cmp
adc
push
icebp
and
xchg
xorl
stos
jo
jne
pushf
les
dec
std
stos
inc
fidivrs
and
je
or
xchg
mov
sarb
adc
lea
shll
inc
jg
daa
movsb
jge
jno
and
sbbl
sahf
insb
lret
cmp
or
mov
aam
mov
je
push
or
andb
rcl
ret
mov
std
jbe
fmulp
nop
lcall
out
fcomp
sbb
bound
scas
xor
das
lock
mov
or
inc
fildl
sbb
mov
movsb
xor
loope
dec
shr
arpl
call
clc
mov
sarl
bound
scas
popf
inc
push
sub
stos
xlat
loopne
ret
pop
cmp
mov
jae
lods
sub
fs
dec
pop
cmp
mov
nop
shll
sbb
mov
incl
push
ret
jmp
push
sbb
mov
repnz
push
pop
xchg
jmp
icebp
mov
add
cwtl
aaa
rcl
arpl
stos
fs
loopne
repnz
loop
cmpsb
clc
imul
cltd
adc
lea
fisubrs
add
in
sub
adc
or
pop
cli
pop
or
pop
inc
sbb
mov
mov
push
repnz
add
pop
mov
in
xchg
addr16
gs
xor
push
inc
loopne
rcrb
dec
adc
dec
inc
scas
cmp
pop
int
jno
jl
cmp
push
stos
jle
sbb
fdivrs
pop
or
int
and
sub
leave
lock
jae
xchg
and
clc
orl
out
dec
loope
push
mov
scas
sahf
inc
jl
add
add
xchg
jbe
mov
lahf
nop
xor
mov
xor
rorb
enter
jmp
mov
mov
scas
sub
xor
test
aad
mov
push
jbe
js
and
inc
dec
mov
xor
jb
sub
insb
xor
ret
fmulp
orl
std
jg
jo
les
in
jbe
scas
pop
push
jbe
addr16
out
dec
aas
or
lret
dec
lods
pushf
arpl
xor
outsl
push
mov
movsl
out
ds
push
dec
mov
inc
push
mov
jb
je
jne
mov
cmp
sub
pop
xchg
add
les
bound
and
xor
mov
add
pop
lods
pushf
mov
scas
jecxz
mov
movsb
js
jnp
sub
push
fsubl
jl
xor
rcl
jns
mov
mov
jg
repnz
mov
sti
mov
cmp
scas
mov
mov
fimuls
pop
push
xchg
push
test
xchg
call
jmp
inc
ret
cli
loopne
push
rclb
sub
jecxz
mov
in
adc
aad
pop
xor
xchg
cmp
xlat
test
fstpl
out
sub
and
es
push
fwait
int
ljmp
loop
push
jmp
inc
add
popa
mov
mov
jp
or
xor
out
add
nop
sub
sbb
or
test
mov
out
pop
xchg
xor
stos
inc
cmp
repz
xorb
mov
pop
pop
scas
mov
xchg
test
sbb
and
mov
movsl
imul
xor
jecxz
lds
adc
pop
movsb
push
je
ss
pushf
fsubrl
dec
mov
adc
cwtl
pushf
inc
sub
sbb
cltd
call
fadds
add
pop
ss
fcomps
mov
sahf
sub
scas
enter
stos
adc
hlt
sbb
enter
cmpsb
and
push
pop
or
adc
rolb
add
inc
adc
inc
bound
std
cmpsl
pop
scas
jne,pn
inc
out
add
add
cmp
ss
mov
mov
cli
or
out
rorl
inc
cltd
cmc
xor
les
or
movsb
popf
mov
call
lock
ret
rorb
xor
js
jl
xchg
jmp
add
dec
dec
outsb
test
cmp
sub
cmc
scas
fadds
push
adc
fs
int
andl
fwait
movsb
jns
cs
push
out
pop
inc
inc
mov
jp
pop
mov
push
movsl
dec
mov
pushf
add
sub
dec
adc
scas
in
insb
jb
std
or
iret
cmp
pusha
mov
xor
jns
sub
sti
add
loopne
jo
iret
xchg
mov
xchg
jbe
jl
push
and
adc
nop
xor
pop
mov
xchg
xchg
sub
xchg
dec
pop
fldenv
sub
mov
movsl
pusha
push
repnz
xchg
mov
push
and
cmp
inc
xor
mov
test
arpl
lods
xchg
cmpsl
pop
repz
data16
int3
mov
inc
or
jne
or
xor
xchg
jne
shrl
jl
cmp
scas
decb
cmp
sbb
pop
push
push
loopne
inc
aam
mov
arpl
mov
jl
stos
pop
out
inc
jne
movsl
push
inc
xchg
mov
cmc
jecxz
mov
cs
imul
xor
xchg
jo
mov
out
inc
fmuls
dec
movsl
mov
dec
or
call
cs
or
aad
cmp
adc
cwtl
stos
push
jl
cmp
lods
jb
stos
into
lret
outsb
and
push
jns
lea
out
into
imul
int3
jge
pop
popf
insl
insl
inc
repnz
push
add
sti
lret
or
imul
mov
mov
test
dec
daa
in
sub
test
lods
cmp
cmp
fimuls
push
adc
lahf
adc
shll
jns
add
loope
rcrb
xor
mov
inc
rol
xchg
inc
xchg
xor
pop
mov
pop
cmc
fnstcw
sub
mov
pop
jmp
xor
mov
sub
adc
scas
insb
shll
popf
imul
add
lcall
jbe
gs
outsl
lods
pop
imul
mov
std
cmp
int3
divb
mov
cmp
push
gs
addr16
lea
push
fwait
cmp
add
or
shl
xor
jp
arpl
test
xchg
mov
in
push
imul
ja
xchg
or
jo
dec
fldcw
popf
add
or
adc
add
cmpsb
cli
lods
sahf
idivl
out
and
icebp
stc
push
int3
sub
fistl
add
insb
jb
jp
in
jecxz
ret
inc
arpl
fwait
mov
sub
inc
inc
cmp
stc
push
jmp
test
outsl
fnstenv
mov
push
xorl
lret
push
mov
scas
adc
sbb
cmpsl
inc
dec
mov
adc
cli
bound
popa
lock
pop
dec
xchg
jp
addr16
fwait
xchg
test
adc
push
in
test
mov
std
rcll
lret
bnd
jle
xchg
mov
jl
or
loope
mov
and
movsb
scas
or
and
and
insl
cmpsl
push
loop
out
adc
sub
jae
xchg
pop
inc
xchg
mov
cltd
lods
lea
scas
inc
fisttpll
jmp
adc
into
dec
fsubp
cmpsl
jno
mov
les
aad
inc
fnclex
mov
in
jns
cmpsl
scas
out
imul
jns
in
pop
xchg
xchg
mov
imul
jge
test
xor
pop
stos
xchg
ffreep
dec
xlat
xchg
inc
sar
sahf
loop
dec
sbb
mov
xchg
out
dec
sub
scas
inc
jle
mov
repnz
stos
cli
scas
or
jp
sbb
mov
jae
xor
enter
or
xor
mov
addr16
sti
dec
cld
adc
pop
in
jmp
ds
mov
add
sti
xor
lahf
gs
inc
mov
xlat
decb
pop
inc
dec
ret
std
cmp
insb
xor
mov
jge
mov
lock
rorl
out
and
pop
add
and
cli
daa
test
mov
mov
mov
mov
adc
jmp
icebp
sbb
data16
xchg
lahf
and
je
mov
das
mov
popl
gs
iret
pop
int
fst
ja
push
mov
mov
mov
xchg
xor
push
adc
fildl
test
xchg
ja
add
pop
cmp
imul
orl
and
pop
lahf
addr16
mov
lcall
xor
in
cmpsb
jle
jne
mov
xchg
mov
mov
push
xor
mov
sbb
dec
xchg
xor
xor
xchg
mov
inc
jae
imul
retw
movsl
push
addr16
not
sub
fstl
ljmp
int
into
loop
pop
test
and
mov
in
movl
cmp
push
cmp
mov
pop
mov
mov
push
in
mov
xchg
jb
mov
mov
jns
icebp
inc
jmp
test
lret
mov
xor
sbb
inc
shlb
adc
cmpsb
mov
or
movsl
in
lcall
push
mov
jae
adcl
ss
xchg
ss
orl
xchg
inc
cmp
inc
icebp
mov
mov
xlat
mov
jge
sbb
adc
aad
xor
add
sarl
insb
pop
mov
ja
inc
push
adc
dec
rcrb
push
add
hlt
sub
test
sbb
icebp
fstp
stos
cmpl
int3
daa
lods
jle
daa
mov
pushf
mov
lods
xor
in
sbb
and
xor
je
or
or
xlat
popf
pop
stos
or
push
test
mov
fmuls
cli
or
lret
jno
imul
sub
lock
add
lahf
andl
cmp
jbe
mov
xor
sub
aaa
sub
pushf
or
sti
pop
adc
repnz
insl
insl
cli
push
mov
add
jnp
out
repnz
data16
out
scas
mov
test
sbb
and
push
push
pop
mov
sbbl
jge
dec
fldl
test
test
insb
shrl
pop
mov
xchg
sub
cmp
mov
insl
add
loop
inc
cmc
jecxz
push
es
xchg
movsb
cmp
data16
aam
push
cmc
mov
or
add
movsl
jae
leave
cltd
ficoml
xor
push
aas
or
push
pop
pop
inc
shlb
ja
sbb
jge
xchg
cmp
aam
or
ss
push
scas
sahf
popf
mov
pop
iret
jae
out
push
lods
and
mov
testl
insb
call
inc
lods
cmp
pop
dec
xchg
jmp
lret
add
jge
jle
loope
jns
dec
cs
rorb
xor
add
fcomp
sbb
cld
faddp
jne
lds
sbb
mov
pop
mov
pusha
xor
lea
push
mov
xchg
shlb
jp
dec
xchg
add
jns
sub
jle
inc
inc
or
loop
mov
mov
lret
dec
add
int
push
adc
cmp
mov
jmp
mov
sub
pop
sub
arpl
mull
xchg
in
and
xchg
jae
cmpsl
lds
inc
add
and
fiaddl
sub
xor
or
xchg
sbb
pop
decb
iret
addb
sub
stos
scas
xor
inc
int
pusha
lcall
mov
je
jmp
idivb
scas
cmc
test
sbbb
imul
cmpsl
flds
addl
xchg
ja
int
stos
fcmovu
inc
sub
loope
cltd
hlt
push
xchg
sub
pop
fidivs
idivb
lea
xchg
cltd
cltd
dec
insb
test
insb
loope
mov
lahf
into
aas
arpl
and
arpl
mov
jnp
xchg
das
nop
movsl
or
cmc
push
xchg
push
loopne
insl
imul
xor
cmc
cltd
aad
or
orl
dec
fstl
int3
movsl
call
cmp
scas
mov
cmp
cmp
outsb
fs
call
cmpsb
shrb
aaa
adc
cmp
xchg
mov
sub
rcr
push
pop
jae
aas
pushf
cltd
cwtl
ss
mov
lcall
jge
test
mov
adc
ret
mov
cwtl
cmp
fdivs
out
mov
cmp
aad
push
pop
and
fwait
ljmp
lahf
mov
dec
sub
es
sub
cwtl
mov
xor
push
cmpsb
add
popf
or
int
fs
leave
push
hlt
maskmovq
cmpsl
imul
lcall
das
add
div
lret
and
push
out
mov
inc
xchg
das
stc
fnstenv
subb
add
mov
push
add
xchg
or
pop
aaa
imulb
dec
pop
sahf
lcall
popf
add
test
loop
push
dec
nop
push
mov
or
xchg
dec
cmp
push
sarb
mov
ja
sbb
mov
fstp
cwtl
notb
cmpsl
shrl
add
jb
fimull
jo
fstps
js
and
pop
jl
cmp
pop
adc
pop
push
pop
jnp
sbbl
insb
je
fstpl
popf
pop
jge
mov
out
sahf
push
mov
lcall
incb
adc
xchg
into
inc
test
fldl
push
pusha
mov
xchg
jno
xchg
outsl
jbe
fidivrs
lahf
sub
imul
xchg
sbbl
adc
xor
mov
shll
cli
push
xchg
imul
adc
mov
lcall
ss
cmp
rorb
mov
push
lea
push
js
sub
xor
cmp
xchg
mov
cwtl
jb
push
add
mov
sbb
jge
jb
jp
jae
cmp
inc
arpl
push
mov
sub
inc
push
in
mov
test
adc
lds
push
insb
imul
mov
ja
stc
out
aad
hlt
imul
lea
test
int
sbb
mov
cld
fdivrp
das
jmp
orl
bound
rcll
dec
jnp
fwait
or
lock
sub
xchg
lret
sarb
es
inc
xchg
inc
sti
push
mov
jmp
sub
lahf
je
mov
sub
cltd
lds
sub
pop
cwtl
mov
pushf
mov
jmp
lock
imul
mov
pushf
out
sbb
inc
inc
popf
fcomps
int3
xchg
testb
leave
fs
pop
jg
inc
repz
cmp
xor
pop
jns
dec
jp
inc
rorb
or
jg
sbb
and
or
lahf
sar
out
rcl
xchg
pop
dec
stc
aad
inc
push
jl
mov
int3
jno
and
enter
jno
into
loope
rcl
mov
cmpsb
push
imul
cmp
jno
adc
jecxz
iret
rorl
dec
jl
rclb
outsb
out
and
push
hlt
jecxz
dec
inc
stc
mov
jg
push
push
insl
sahf
ss
dec
ret
addb
mov
jle
rcll
mov
int
adc
cwtl
inc
in
mov
push
and
sub
add
xor
cmp
fists
sbb
popa
aas
sbb
push
mov
dec
int
popf
mov
arpl
mov
in
fsubp
test
lahf
addl
jbe
iret
cmp
jne
pop
add
repz
js
out
aaa
fisubs
std
mov
ret
filds
sbb
fcompl
mov
mov
movsb
int3
lret
adc
or
sahf
sti
jmp
and
mov
sub
movsb
hlt
push
jecxz
or
jmp
dec
daa
movb
or
adcb
int3
dec
cmc
xchg
ss
sbb
jns
sbb
and
xchg
pop
push
jecxz
jp
jge
lock
sbb
sbb
sti
setg
roll
xchg
and
ljmp
in
pop
insb
sub
dec
mov
jl
insl
cmp
and
pcmpgtw
lds
jbe
ds
cli
scas
fdivrl
pop
xlat
in
sbb
add
sbb
mov
jmp
insl
dec
jns
ja
div
push
aad
std
jns
xchg
cmp
aad
bound
int3
shrl
xor
mov
jmp
inc
adc
pop
out
adc
js
mov
push
inc
loopne
pushf
sbb
dec
stc
mov
xor
test
xchg
enter
lret
ss
out
cmp
pop
aam
insb
push
aaa
sahf
mov
inc
add
add
add
xor
dec
xor
lea
and
jmp
mov
jns
cltd
xor
arpl
xchg
outsb
insl
fldl
mov
cmp
mov
hlt
rclb
xor
jae
js
lahf
rcr
lcall
and
aam
mov
pop
outsl
and
stc
push
test
inc
cmpsb
mov
addr16
pop
pop
dec
les
rorl
scas
hlt
daa
add
addl
mov
pop
mov
xchg
cmp
loopne
and
dec
xor
aas
setp
int
mov
in
mov
xor
ficomps
clc
shl
mov
aad
stos
ss
loopne
cli
xchg
push
add
enter
popa
xchg
jmp
adc
sbb
pop
xor
push
inc
xor
ds
sbb
icebp
test
sbb
mov
or
leave
test
ret
or
mov
xchg
push
mov
push
fs
cmp
cvtps2pd
fldenv
jmp
insl
jno
sbb
fcomps
adc
stc
mov
out
cs
pop
adc
fistpl
dec
pop
scas
js
adc
loope
xlat
mov
lods
inc
mov
mov
enter
mov
or
mov
and
push
dec
cmp
addr16
aad
pusha
lret
pop
adc
cmc
lds
out
jp
jno
dec
sti
mov
fdivrl
call
sbb
in
cmpsb
daa
mov
fisttpll
movsb
push
or
xchg
mov
lahf
push
add
std
add
lcall
pop
mov
mov
repz
mov
out
xchg
mov
xlat
mov
xchg
cmp
jno
or
pop
jg
dec
rcll
push
pop
fsubrs
ja
in
pop
mov
repz
xor
xchg
mov
fs
or
sbb
gs
inc
mov
and
pop
stos
test
mov
xchg
int3
mov
adc
mov
movsl
jmp
repnz
test
xor
xor
push
in
or
adc
and
xor
xorl
and
jae
mov
push
test
fcoml
call
mov
imul
mov
xor
cmpsl
sub
or
ss
roll
addr16
inc
lods
arpl
outsl
add
dec
xor
es
je
jns
fwait
mov
adc
pop
scas
lret
icebp
and
add
dec
jg
or
in
mov
cmp
mov
inc
pop
xor
sub
bound
movsb
dec
sbb
aam
cwtl
aad
adc
aaa
sbb
sti
dec
pop
mov
pop
fucom
in
jge
in
inc
icebp
xor
inc
jp
sub
sub
xor
cwtl
lods
mov
int
lret
mov
or
out
fildll
sar
sbb
push
rolb
cs
cmpsb
sub
lock
pop
lods
out
fistpl
scas
push
loop
inc
sub
and
std
hlt
dec
or
je
push
cmc
push
fldenv
aaa
lcall
jo
jmp
or
lods
push
jl
mov
jmp
xor
push
dec
push
dec
or
roll
es
sub
jmp
push
ror
mov
push
sbb
icebp
push
iret
xchg
xchg
jle
and
das
pop
pushf
jbe
xor
adc
jne
and
lcall
in
lea
into
stc
push
aas
std
sub
cld
jns
mov
enter
inc
pop
xor
test
outsb
loopne
push
xchg
loop
and
fxch
xchg
jne
sbb
in
push
fsubrs
sub
mov
insl
mov
adc
fldl
fwait
cmc
sbb
cmpsl
in
sbb
ja
mov
lahf
fldcw
dec
xchg
push
je
dec
ja
and
out
sub
mov
je
aad
add
incl
movsl
cmp
dec
popf
jl
in
mov
not
and
push
and
scas
inc
xchg
xchg
bound
scas
add
mov
nop
daa
ret
cli
mov
xlat
jae
xor
leave
repz
mov
ljmp
in
cld
arpl
cmp
fnstsw
mov
rorb
movsl
mov
inc
lods
outsb
and
jnp
bound
sbb
add
stc
pop
inc
icebp
cwtl
inc
je
cmp
lods
inc
pop
xor
imul
jle
adc
js
lock
sub
fistpll
push
xchg
xor
lret
lods
or
push
out
arpl
push
ds
mov
mov
ds
jecxz
loopne
insb
adc
push
icebp
push
xchg
jbe
mov
and
cmp
xor
sub
cwtl
movsb
lcall
xchg
test
dec
push
das
addl
push
sbb
jp
bound
jnp
sbb
sbb
mov
xchg
call
pop
cmpsb
sub
out
arpl
dec
dec
hlt
outsb
xchg
imul
dec
jge
es
sti
sub
mov
lret
and
xchg
push
or
cli
std
ror
xchg
mov
in
cmp
jne
orb
mov
push
xor
lock
iret
shll
sti
mov
push
arpl
int
shrl
or
sub
pop
into
clc
jb
test
das
es
outsb
mov
int3
repz
sahf
pop
xor
mov
jb
and
xchg
inc
sbb
movsb
rol
cmp
lcall
js
xchg
jecxz
clc
neg
sbb
xor
hlt
addb
xor
aam
in
ret
js
pop
es
call
dec
shlb
mov
testl
sbb
add
loope
aaa
xchg
rcrb
orl
adc
int3
outsb
and
ljmp
inc
and
out
repz
pop
clc
fmuls
inc
sbb
aas
xlat
arpl
lret
js
sbb
out
pop
push
fnstcw
or
outsl
xchg
setge
in
cmp
inc
xchg
insb
add
imul
mov
scas
inc
and
sub
sub
mov
outsl
movsl
insl
push
cmp
xlat
loop
mov
out
fnstcw
mov
xchg
gs
add
cmp
push
rcll
call
xchg
fs
stos
cltd
xor
add
andps
ss
movsl
sub
and
hlt
or
cmp
push
push
push
test
cmp
mov
loop
inc
imul
jmp
jo
xor
cli
out
fwait
cmp
push
dec
cmp
aas
xor
fwait
pop
push
sahf
outsl
pushf
lret
mov
jo
mov
or
or
sub
roll
sub
jmp
mov
cmp
out
popa
jecxz
push
jns
iret
imul
mov
popa
push
iret
sbb
adc
mov
push
mov
jbe
xlat
xor
fnstcw
cmp
ret
data16
fwait
lods
scas
push
adc
and
cli
lret
push
xchg
mov
xor
cwtl
and
mov
sti
dec
stc
out
mov
jns
sub
cmp
or
icebp
mov
pop
sub
int3
mov
jae
push
in
or
sbb
cmp
movd
jecxz
adc
mov
test
insb
push
mov
and
orl
test
sub
xchg
xor
adc
lret
stos
fcomi
or
mov
fdivrs
lds
stos
sbb
inc
xchg
xor
sahf
fwait
xchg
mov
adc
iret
push
out
inc
ljmp
loop
insb
mov
xchg
push
sbb
lock
adc
in
add
push
add
cmpb
iret
pushf
mov
or
lret
xchg
or
xor
aad
or
fs
jo
and
shl
and
mov
stos
inc
imul
les
xor
mov
push
lcall
add
mov
lods
sub
rcll
add
je
int3
popf
pop
sbb
sbb
out
push
lock
sub
xchg
jno
or
push
pop
iret
lock
in
repnz
lcall
mov
lods
jbe
jl
pop
add
lds
scas
jo
test
xchg
cld
adc
call
push
in
jno
or
rorl
lock
dec
out
inc
rcrl
add
or
and
movsb
shrb
mov
push
test
ret
insb
lods
rorb
lods
sbb
aas
out
fildl
leave
pop
cmp
push
or
shl
fstps
and
mov
cmp
inc
xchg
and
and
aas
cmpsl
cmp
xlat
xorb
mov
push
add
imul
adc
mov
mov
je
push
iret
lock
jo
icebp
mov
daa
cmc
push
aaa
push
add
pop
jge
or
dec
jno
cmp
sub
push
mov
jge
xor
imul
aas
mov
add
xor
stos
fldlg2
pop
mov
stc
xorl
xor
int3
fmuls
sbb
push
mov
pop
outsl
ds
cmp
in
xchg
into
and
xor
mov
fbstp
leave
test
test
add
mov
mov
or
sbb
lcall
jmp
lods
xor
mov
out
aad
dec
pop
xchg
xor
ror
jbe
cli
xor
sbb
test
fbld
inc
pop
sub
mov
sarl
push
jg
pop
jnp
imul
xchg
cmp
repz
outsl
mov
imul
add
mov
fcompl
push
mov
pop
xchg
aas
dec
or
out
inc
arpl
lea
sti
loop
call
out
rclb
cmp
sub
mov
out
dec
add
or
lods
sbb
dec
push
jo
in
jmp
paddb
add
sub
mov
mov
pop
out
je
add
movsl
mov
and
out
cmc
sti
test
mov
outsb
jne
repnz
dec
and
lcall
push
pushf
fcmovb
adc
xor
cmp
pop
xchg
arpl
enter
popf
inc
cmp
fnstcw
inc
bound
cmpsl
mov
repz
out
adc
cmc
aad
fnstcw
add
cmpsb
sbb
sbb
jne
mov
jo
lret
add
sub
or
out
fisttps
jo
adc
cld
ss
test
mov
jg
push
xchg
je
mov
incb
into
cltd
mov
xchg
or
push
sbb
mov
ds
inc
push
mov
aam
mov
lds
lret
mov
xorb
ret
add
adc
adc
leave
push
les
les
out
mov
dec
js
inc
ds
mov
xchg
fildl
cmp
add
clc
lds
pop
ja
sbb
or
mov
jl
add
cmp
pop
sub
mov
sbb
outsl
mov
dec
xchg
ficoml
mov
lcall
mov
fwait
call
loope
je
fcomps
mov
add
sbbb
cmp
movsb
cmp
shl
cmp
inc
inc
js
mov
and
pushf
popf
in
cmc
fsubrs
outsl
add
dec
inc
cltd
sahf
jecxz
adc
movl
stc
js
jb
sbb
pop
jg
mov
and
or
push
lds
ljmp
testl
lods
cmp
xchg
push
sbb
and
inc
jmp
int3
push
gs
mov
jo
hlt
nop
and
cwtl
push
popa
div
lret
into
insb
dec
inc
je
ret
scas
flds
sbb
out
sub
mov
insb
sahf
sub
nop
push
popa
mov
sbb
mov
push
aaa
fdivr
jbe
or
jns
sahf
cmp
jns
rol
test
dec
xchg
shr
out
int3
sub
fists
js
xchg
xchg
mov
dec
sbb
dec
mov
xlat
adc
pushf
sbb
xchg
stos
incb
sbb
sbb
loop
pop
push
icebp
frndint
jecxz
jmp
push
xacquire
mov
mov
aad
push
dec
xchg
cmp
jl
fldt
and
jl
sub
pusha
mov
xor
jb,pt
xchg
cmpsl
pushf
jno
shlb
or
in
sahf
jmp
call
sbb
xchg
shrb
cmp
xchg
pop
in
movsb
xor
mov
into
push
insl
add
cmp
pop
ret
and
sub
jle
ja
bound
xor
xchg
push
adc
sbb
mov
pushf
cmpsb
in
jge
test
test
mov
lock
add
lds
add
mov
mov
fsubrp
decl
pop
dec
mov
jae
jae
mov
test
mov
lods
imul
aas
movsl
xor
aam
xchg
shll
cmp
xchg
lds
mov
mov
ffree
into
lods
add
cmpsl
std
lods
add
jcxz
dec
outsb
lea
adc
cmpsb
pop
cmp
orb
rolb
pusha
cli
and
mov
push
bound
mulb
pop
popa
frstor
icebp
lahf
cmp
or
sar
adcb
adc
pop
jg
xor
sbb
xchg
aad
mov
sbbb
out
lods
movsb
xor
xor
dec
fildll
ja
je
push
lea
movsl
or
roll
pop
mov
stos
andl
mov
out
pop
ficomps
pusha
scas
adc
jmp
jle
sub
nop
xor
jne
and
ret
sub
xlat
lahf
add
nop
in
push
insl
dec
test
imulb
add
or
push
inc
pushf
mov
sarl
loopne
imul
xor
dec
fs
adc
fbld
push
push
shlb
les
push
loopne
ja
incl
fistpl
cmp
push
aaa
cmpl
ljmp
rcr
test
fs
dec
cld
pop
scas
push
iret
sar
pop
lcall
loop
jns
cmp
test
mov
add
adc
lock
xchg
imul
lds
cs
movsb
mov
or
add
xchg
aad
das
in
mov
enter
adc
mov
cltd
jnp
leave
outsl
filds
push
test
rcll
sbb
mov
mov
xor
insl
iret
mov
add
dec
add
cmp
push
and
daa
ret
mov
cmpsb
mov
repz
mov
jp
frstor
adc
pop
aad
shl
icebp
ja
xchg
fdivl
sbb
sub
xor
push
push
sarb
dec
mov
or
bound
sbb
adc
nop
inc
xor
aam
mov
lret
xlat
and
inc
jge
pusha
xchg
push
pop
dec
add
cwtl
out
andb
inc
orb
jne
aas
adc
add
es
sub
sub
xchg
inc
jmp
fldcw
in
inc
push
cmpsl
lret
jno
lock
ret
jb
xchg
iret
or
sahf
mov
sbb
lahf
push
or
ret
xchg
lods
cmp
daa
mov
inc
inc
mov
pop
jp
ljmp
adc
mov
xchg
stos
sarl
push
jmp
adc
les
jp
mov
xchg
loope
push
pmuludq
sub
pushf
std
dec
pop
cmp
cmp
fwait
pop
xchg
xchg
mov
dec
cmp
sub
inc
imul
jmp
sbbb
push
inc
inc
jmp
lds
jmp
dec
mov
pop
sub
xchg
mov
subb
loope
push
aaa
pop
or
dec
jno
adc
dec
jge
aam
cmp
xchg
subl
lret
test
int3
xchg
mov
pop
mov
jge
mov
test
mov
pop
rorl
xor
and
shlb
loope
je
and
cmpsl
popa
xlat
sbb
and
sti
fcomp
push
dec
repnz
outsl
call
enter
mov
inc
shr
pop
arpl
iret
scas
jb
loope
xchg
icebp
ficoml
pushf
in
push
sub
push
jbe
fwait
addb
mov
jl
xchg
cmp
cmp
lret
mov
mov
pop
jae
cmpsb
or
adc
mov
inc
out
mov
or
or
pop
call
mov
cmpsl
int3
pop
cmpb
cmp
in
pop
lret
cmpsl
or
adc
in
push
xchg
jbe
xchg
jmp
jb
sbb
mov
cli
adc
loop
and
cmp
mov
inc
jecxz
inc
adc
inc
lcall
push
sub
lds
test
mov
call
fstps
dec
leave
pop
les
pusha
adc
mov
sbb
xor
and
sbb
mov
xchg
jnp
mov
rclb
xor
gs
repnz
sbb
push
jg
std
pop
xchg
inc
sub
jmp
repnz
xor
popa
push
xor
mov
pusha
jge
out
add
mov
inc
in
adc
iret
pop
divb
mov
xchg
adc
and
mov
test
mov
std
cmpl
sbb
jo
and
and
js
and
decl
loopne
std
adc
in
inc
test
imul
pop
cwtl
cmp
push
lret
repnz
lock
or
lahf
sbb
out
in
rcr
movsb
ret
adc
loopne
dec
dec
ja
fs
gs
dec
xchg
or
gs
sub
sbb
dec
adc
jb
shl
fisubrl
inc
cmc
mov
sub
xchg
adc
dec
lock
jae
fadds
xor
addr16
not
or
mov
xor
cmp
and
push
lahf
cwtl
pusha
in
mov
test
into
cmp
add
push
adcl
pusha
xor
cmp
sbb
dec
adc
mov
stos
jmp
cmpsl
pop
bound
cltd
lock
jp
sbb
xchg
dec
pop
das
orl
mov
or
xlat
bound
pop
jb,pn
mov
je
shll
stos
cmpsb
clc
imul
mov
adc
xor
subb
lcall
test
pop
cmpsw
test
sbb
in
call
stos
mov
xor
shll
mov
notl
lds
pop
popf
cs
shlb
loope
jp
jge
gs
imul
pushf
testb
or
in
pop
outsl
and
sbb
jb
inc
gs
xlat
pop
cli
repz
jns
xchg
pop
cmp
mov
inc
push
jmp
inc
jmp
dec
fucomp
lcall
or
shr
cmp
int3
in
pop
pop
inc
mov
fldenv
out
cltd
add
dec
pop
xor
jge
or
into
cltd
xchg
cmp
js
imul
or
in
jmp
popl
xchg
fsubrs
pop
jb
sbb
clc
arpl
out
push
dec
jne
sub
xor
adc
insl
aad
cmp
icebp
mov
iret
or
jge
mov
pop
push
jp
sbb
filds
push
inc
test
arpl
orb
int
mov
stos
addr16
pop
fstps
hlt
or
idivb
lods
inc
fistpl
sub
out
and
adc
mov
lahf
jae
arpl
ficoml
push
push
pop
mov
mov
push
iret
rcpps
jbe
jbe
into
mov
push
mov
add
jecxz
mov
int
push
aas
arpl
int3
adc
insb
arpl
or
cld
int
ret
dec
pop
lcall
inc
or
jns
out
out
scas
mov
jne
cmpb
pop
orl
or
enter
xor
aam
out
es
shl
mov
dec
dec
sti
mov
mov
cmp
dec
push
pop
push
mov
test
mov
repz
jle
pop
push
xlat
out
adc
jbe
test
jle
cs
ja
das
cltd
sbb
mov
es
mov
jge
xchg
dec
test
xlat
lret
push
sub
cltd
icebp
mov
sub
adc
int3
cmc
fists
lods
cmp
push
jg
clc
leave
imull
ds
inc
xchg
aam
int3
mov
xchg
or
jg
pop
dec
dec
fmuls
jb
into
mov
lcall
mov
sub
adc
cld
jmp
and
dec
repnz
push
stos
push
subl
add
stos
mov
sub
or
dec
cmovle
adc
xchg
sub
mov
outsb
or
out
mov
add
mov
mov
fwait
push
shlb
mov
mov
bound
or
or
push
dec
add
xor
lcall
jmp
jp
insl
mov
fistpl
lock
xchg
pop
dec
cld
push
cld
and
sub
out
adc
stos
mov
sub
push
pop
repz
push
xchg
cmp
mov
in
lcall
rclb
add
push
out
mov
repnz
out
add
pop
jl
insl
test
xchg
stos
in
les
mov
lods
pop
data16
mov
xchg
xchg
inc
cwtl
inc
cltd
and
daa
mov
addr16
adc
sub
sbb
xchg
xchg
and
pop
pop
xchg
push
mov
shl
lret
out
lret
push
jne
adc
stos
icebp
cld
push
pusha
adc
bound
fisubl
out
out
lock
add
cmp
mov
test
in
out
bound
dec
in
mov
jmp
lret
lret
aaa
rcrb
mulb
iret
cmp
test
ja
add
push
es
mov
inc
xchg
adc
ret
cmpb
pushf
icebp
faddl
stc
cli
sub
and
mov
xchg
dec
mov
mov
loope
and
shll
cmpsb
mov
sti
je
inc
mov
sbb
or
mov
pushf
pop
lahf
sub
out
stos
gs
js
push
sbb
ret
mov
popf
mov
lea
xor
scas
lock
xchg
xor
ljmp
jo
insl
test
mov
shr
jbe
pop
xor
mov
cmpsb
or
adc
leave
pushf
inc
hlt
icebp
fcmovnbe
sbb
sub
push
mov
cmc
sub
sti
scas
sbb
stc
jno
or
orb
cld
stc
xchg
jno
cmp
push
cs
add
std
shrl
hlt
push
push
fisubrl
adc
cmpsl
ret
fisubl
rorb
inc
pop
add
xlat
ret
push
aam
inc
cmp
ljmp
pop
cmpsl
sub
xchg
jbe
inc
ficoml
out
dec
adc
fwait
add
ret
add
xor
push
pop
mov
out
pmullw
and
mov
aaa
into
ficoms
sbb
mov
dec
icebp
jbe
pop
je
jns
sbb
hlt
mov
push
test
repz
xchg
pop
cs
cmpps
sub
stos
stos
or
enter
pop
jecxz
jge
imul
psllw
fnop
lret
or
mov
add
inc
dec
test
ja
fs
add
mov
cmp
sbb
xchg
fildl
mov
dec
push
mov
mov
or
inc
repnz
adc
pop
push
add
in
add
cltd
adc
into
ficoms
dec
mov
jnp
mov
adc
mov
mov
outsl
es
jae
cltd
fldl
std
imul
addl
in
clc
fisttpl
dec
push
lret
pop
call
pop
notl
or
dec
ds
push
sbb
adc
and
push
in
add
mov
adc
add
and
stc
inc
into
fcmove
mov
popf
cmpsl
inc
mov
popa
pop
push
adc
scas
out
lods
sbb
sbb
push
pop
xchg
lods
lea
jecxz
or
or
daa
test
lcall
mov
negl
icebp
mov
mov
push
add
cmp
pop
icebp
dec
sub
push
shll
testl
shl
int
je
inc
repz
or
les
add
inc
jp
mov
ss
mov
movsb
fwait
push
mov
call
out
xor
test
shlb
lea
icebp
loope
jmp
es
ret
pop
mov
add
into
inc
cltd
aad
shlb
jnp
pop
xchg
sbb
xlat
outsl
inc
hlt
in
negb
inc
das
and
pop
jle
mov
lahf
outsb
rcrl
adc
jns
sub
sbb
neg
out
rorb
push
dec
sti
ret
xor
in
or
lret
dec
fs
arpl
test
add
cmpsb
cli
dec
test
in
aad
and
xchg
xor
fnstsw
inc
clc
outsb
mov
adc
push
imul
sub
mov
fcompl
nop
js
pop
mov
mov
imul
dec
inc
mov
pop
add
shrb
mov
mov
mov
loope
lret
sbb
or
mov
sbb
push
mov
addb
mov
mov
fsubr
inc
imul
scas
pusha
in
pop
xor
xchg
cltd
and
fsubrs
inc
or
jb
movsb
jecxz
fiadds
dec
std
icebp
adc
jecxz
int3
mov
out
cmp
iret
lods
pop
jg
aam
cmpsb
hlt
sbbb
in
sbb
pop
jmp
and
adc
lret
and
cs
notl
inc
sbb
nop
adc
cltd
outsb
mov
in
insl
push
ret
mov
mov
sub
fdivr
dec
loop
popa
adc
push
push
or
xchg
mov
in
in
mov
push
pop
in
inc
xchg
ljmp
mov
nop
xor
scas
sub
inc
sbb
das
mov
or
aam
mov
mov
add
ss
add
jns
ret
aam
adc
in
xchg
lcall
sbb
inc
add
xchg
pop
aas
mov
cltd
or
jo
mov
dec
call
and
cwtl
loop
adc
shr
rorl
test
fdivr
pop
push
adc
int
add
push
sub
mov
jns
push
pop
mov
cltd
xchg
mov
daa
jne
addr16
inc
inc
ss
int3
das
addl
int3
in
or
mov
hlt
push
data16
mov
int3
call
mov
dec
pop
mov
push
aaa
ljmp
leave
in
cli
add
mov
lea
test
mov
push
imul
jl
out
push
cmp
imul
push
xlat
loope
push
sarl
cmpsl
pushaw
sbb
aas
shll
jnp
mov
fs
pop
push
rorb
sbb
cwtl
stc
inc
push
pop
repnz
test
in
test
jmp
clc
mov
or
jl
fmull
jno
push
in
xlat
in
nop
rclb
popf
and
stc
push
in
xchg
insl
mov
add
xchg
outsb
fsubs
dec
pcmpeqb
lahf
rcl
mov
xlat
inc
xchg
adc
dec
imul
xchg
mov
cmpsb
push
adc
jno
xchg
andl
popf
dec
cmp
pusha
or
xchg
and
cmp
fisttpll
mov
or
xchg
scas
imul
xchg
mov
xchg
xchg
jp
les
add
rclb
pop
shrl
lea
pop
push
pop
lcall
lock
push
and
ret
add
cs
or
cwtl
imul
loop
dec
ds
and
clc
sbb
xor
les
cli
addr16
gs
out
leave
cmp
mov
lret
ja
lcall
mov
push
fwait
into
in
add
inc
push
push
add
mov
sub
int3
jl
pop
adc
subl
adc
push
add
pushf
nop
mov
xor
call
cmp
or
cmp
push
cld
xor
pop
out
or
pop
mov
dec
sbb
push
push
or
mov
pop
jle
xchg
std
dec
mov
push
call
push
mov
lods
shr
outsb
pop
mov
enter
jb
in
fcoms
out
call
jecxz
mov
lret
pop
dec
sbb
xlat
sbb
stos
cmp
cmc
pusha
inc
pop
jg
daa
pop
cmp
inc
cltd
enter
xchg
cmp
test
mov
xchg
jnp
es
addr16
outsb
pop
or
es
and
cmpsl
mov
ficompl
pop
adc
out
inc
repnz
mov
incb
repz
pushf
fidivrs
push
sarb
mov
jg
adc
into
addb
cmp
or
inc
xchg
mov
loopne
xor
sbb
dec
gs
jp
mov
jge
jnp
jg
cwtl
shrl
pop
push
mov
xchg
mov
jg
cli
mov
test
sbb
jmp
dec
bound
inc
lods
push
in
scas
shrl
shrb
repz
ja
add
data16
add
push
sub
jmp
or
cmp
fists
js
das
mov
orl
test
iret
sbb
cmpsb
addb
jnp
fidivs
cmp
sbb
dec
and
pop
cmpb
subb
cmp
mov
lcall
pop
jle
pop
sar
mov
jmp
fwait
andl
jge
enter
push
mov
push
clc
add
js
sahf
mov
rclb
add
pop
popf
lea
and
pop
loope
sbb
dec
dec
dec
xor
xor
xor
ja
mov
unpckhps
sbb
sub
mov
cmpl
imul
dec
adc
or
cmp
les
and
test
add
jmp
hlt
or
mov
mov
movsl
fidivrs
cmp
xchg
addr16
jnp
rol
or
or
fidivs
sbb
bound
and
xor
lds
js
cli
test
jae
in
hlt
jbe
push
jnp
rorb
sub
out
add
mov
lods
lds
dec
xchg
sbb
fcomps
pop
cmp
daa
lahf
aam
in
mov
xchg
pop
bnd
sbb
xchg
cmpsl
lret
scas
inc
loope
rolb
ljmp
fstpt
xor
dec
leave
daa
cwtl
adc
cld
mov
mov
es
jmp
sub
loope
es
xor
jae
push
mov
icebp
adc
mov
xor
bound
cmp
sub
cmpsb
gs
andb
pusha
int3
cs
out
mov
jne
mov
rorb
hlt
imul
daa
je
or
addr16
cmpsb
pop
sub
xchg
xchg
or
add
cld
fists
shll
push
adc
mov
test
cs
orl
arpl
pop
jp
jmp
sbb
cmovp
ljmp
dec
lcall
mov
pop
out
add
xlat
imul
push
push
das
outsl
lret
cmp
adc
daa
push
stos
jb
pushf
sbb
in
push
or
repnz
or
and
inc
or
ja
xchg
bound
adc
test
pop
push
out
sub
sbb
shrl
mov
loopne
mov
data16
pop
scas
mov
dec
push
lock
sbb
movsb
test
cmp
sbb
fiaddl
or
ds
addl
pop
outsb
out
sbb
mov
enter
cmp
mov
mov
andnps
movsb
cld
popa
pushf
lods
mov
sub
movsb
add
mov
or
mov
in
lret
loopne
pop
addr16
fnsave
test
push
sbb
mov
xor
in
int3
jle
cmp
xchg
push
pop
outsb
xchg
into
loope
jno
pusha
sbb
out
mov
addr16
push
add
push
pop
xor
fnsave
pop
cmp
and
cwtl
xor
lods
or
stos
sti
sbbl
movl
les
lret
cs
es
imul
push
xchg
dec
test
xlat
lret
inc
es
mov
lret
xchg
push
fdivr
push
mov
sub
iret
jb
jl
in
sub
dec
xchg
dec
jecxz
add
cmpsl
push
fcoml
popa
imul
mov
lahf
and
enter
pop
test
jge
popa
cmp
xor
jmp
push
inc
inc
dec
jo
iret
lcall
push
pop
sub
loopne
ret
stos
xor
dec
mov
mov
pop
data16
mov
std
jg
loopne
lret
mov
jge
jo
fildl
inc
lahf
rcrb
add
and
mov
fstl
dec
aaa
andl
hlt
mov
sub
pushf
push
lods
int
add
sub
adc
stos
insl
outsb
mov
xor
jg
bound
pop
mov
lret
xchg
or
ds
loop
mov
cmc
nop
push
lods
dec
cmp
or
mov
shl
inc
std
jmp
jp
lret
hlt
mov
call
loop
flds
shll
ss
and
js
pusha
ret
cmp
out
je
int
dec
push
adc
xor
in
push
in
dec
testl
aas
movsb
cmp
dec
mov
movsb
sbb
dec
scas
cs
mov
pop
xor
out
scas
mov
rorb
dec
enter
and
fidivs
inc
sbb
xchg
fiaddl
mov
jne
xchg
inc
and
inc
ret
push
rcl
andl
imul
jae
pop
fbstp
cmp
arpl
lock
add
ds
sub
stos
imul
sub
arpl
in
in
call
cmpsb
and
out
dec
stos
hlt
and
add
mov
mov
inc
popf
dec
xchg
jns
push
or
push
dec
mov
fsincos
clc
cwtl
xadd
pop
sub
mov
xor
ret
mov
or
fdivrs
sbb
mov
dec
push
push
imul
or
pop
sub
xchg
popa
and
pop
aaa
cmpsb
mov
nop
mov
xor
add
lcall
mov
sbb
inc
mov
mov
es
imul
fdiv
test
scas
xchg
mov
jecxz
inc
fistpll
mov
sub
pushf
ficoms
xor
xor
xchg
sti
inc
pop
push
fst
lods
mull
popf
jae
test
dec
cmp
inc
add
xchg
pop
stos
jb
jg
lock
jns
in
adc
out
xchg
iret
xor
mov
outsl
fbstp
and
fwait
addr16
xchg
pop
add
fldcw
scas
inc
adc
sbb
inc
xor
pop
cmp
sarb
dec
or
negb
xchg
xchg
iret
dec
xor
pusha
adc
inc
ja
xchg
dec
sbb
jmp
pop
add
in
int
mov
sti
dec
test
sbbb
fildll
aam
mov
inc
pop
cmp
push
cli
mov
in
cld
out
push
sub
dec
xor
push
ljmp
adc
pop
xor
stos
mov
stos
xchg
les
jne
add
stc
cmp
xor
inc
aad
push
push
int3
test
sub
and
loop
lea
mov
xor
xor
mov
sub
out
add
sub
scas
shl
inc
iret
es
fcmovnbe
mov
das
inc
out
cmp
sub
jnp
lcall
xchg
jl
les
push
dec
inc
subl
js
adc
and
xor
ljmp
mov
lds
cmpsl
imul
mov
fwait
mov
jb
and
add
cltd
pop
jg
sub
pop
mov
hlt
xor
lock
xor
and
fdivp
popa
or
xchg
stos
inc
and
cmp
lcall
mov
ss
imul
cmpsl
mov
nop
icebp
daa
xchg
ds
ret
push
add
arpl
sub
push
push
mov
pop
sub
daa
pop
mov
cltd
pop
pop
adc
insb
pop
dec
xchg
js
sbb
push
outsl
testl
push
pop
mov
dec
mov
cli
lock
ja
fdivl
cltd
pop
push
das
not
mov
popf
out
nop
test
dec
sti
inc
push
push
push
xchg
into
add
out
repz
data16
pop
ffree
jns
rcrb
out
or
xor
and
push
adc
dec
into
push
inc
and
mov
dec
outsl
sub
cld
cli
inc
jmp
cli
mov
mov
lretw
mov
cwtl
add
test
jbe
rcll
roll
outsl
pop
mov
fdivs
inc
stos
cmc
sti
jge
mov
cmc
jmp
cmp
xlat
subl
mov
cmp
mov
dec
push
in
and
cmp
cmp
mov
add
in
adc
nop
stc
add
ret
fwait
dec
stos
in
dec
mov
and
addl
mov
dec
ret
xor
add
int3
xchg
or
jno
addps
test
lods
push
xchg
or
loopne
bswap
repnz
pop
in
imul
mov
inc
daa
inc
cwtl
push
add
jnp
mov
out
cmp
fadds
jb
push
xchg
dec
mov
add
dec
mov
dec
inc
cmp
push
mov
push
fs
inc
or
or
sub
dec
daa
inc
lock
dec
jno
adc
mov
leave
sub
jle
push
push
fdivrp
mov
or
movsb
push
xchg
rorb
dec
aad
lods
incb
aam
inc
arpl
je
pop
xlat
jae
subb
push
sub
ss
push
inc
or
mov
mov
dec
inc
cmc
ljmp
sub
lods
cwtl
lea
mov
leave
jno
out
xchg
rcl
call
pop
jo
sahf
or
jecxz
sub
leave
sub
arpl
imul
mov
subl
sub
adc
sbb
test
xlat
daa
in
lcall
lds
fldl
pop
cmp
sub
pushf
sbb
out
pop
out
mov
push
aam
scas
es
scas
lret
test
sbb
push
adc
sbb
outsb
into
fs
js
shlb
inc
jne
loopne
int3
adc
and
xor
xor
bound
pop
sbbb
xor
cmp
dec
inc
cmpsb
sbb
les
sbb
lahf
bound
jns
pushf
addr16
into
iret
mov
push
imull
mov
aad
in
mov
or
jle
add
and
jp
aaa
cmpb
rcl
fidivrl
popl
fwait
xchg
sub
testl
fisttpll
xlat
test
pop
sub
je
ja
pusha
ja
cmpsl
xlat
mov
aad
movsb
inc
insb
push
cmc
fsts
jb
push
into
xchg
sub
adc
jo
adc
pop
xchg
pop
jl
ljmp
mov
mov
mov
push
push
push
cmp
jecxz
jl
push
int
flds
xchg
or
sub
and
mov
loopne
icebp
sbb
add
sbb
inc
in
mov
jg
cmp
jle
push
orl
push
lock
sbb
cmpsl
jno
or
mov
fwait
jne
sub
gs
lahf
or
or
cmp
push
int3
xor
pop
shlb
jg
ljmp
movsl
xchg
jle
outsb
popa
popa
repz
push
or
outsl
pop
popa
arpl
insb
dec
outsl
pop
add
mov
mov
popa
adc
shl
pop
jecxz
and
pop
lods
pop
xlat
imul
mov
xchg
jb
sub
xchg
cmp
or
mov
fisttpll
out
pop
or
nop
rclb
pop
push
pop
dec
push
pop
ficomps
inc
fildll
add
adc
push
jle
and
push
loope
add
mov
xchg
pop
test
bound
daa
mov
cld
mov
sbb
sub
lret
lods
dec
mov
mov
add
mov
test
mov
mov
outsb
dec
sbb
divl
mov
ss
add
sub
mov
aaa
add
stc
leave
and
pop
scas
inc
lret
or
cmc
in
cmp
gs
jns
inc
mov
jbe
mov
jo
sub
ljmp
add
mov
push
sbb
push
imul
jge
into
mov
mov
xor
xor
xchg
fdivrp
imul
adc
pushf
cmpb
dec
adc
arpl
cmc
xchg
lock
stos
scas
push
sub
iret
idivb
out
movsl
aaa
pop
inc
adc
shrb
ja
test
clc
iret
in
test
or
xchg
jnp
mov
sahf
xor
scas
out
sub
cmc
lahf
add
sbb
sub
enter
fists
pop
jmp
cmp
dec
xchg
mov
sarl
sub
push
shrl
fstps
jb
ja
iret
popf
inc
bound
test
mov
mov
stos
cld
jb
pop
fdivr
icebp
aad
xlat
cmpsl
push
push
xor
fistps
dec
in
test
stos
fidivs
cs
add
dec
xor
sbbl
cmp
push
jg
dec
ficomps
rolb
add
out
in
mov
sub
dec
push
dec
xor
jo
lds
dec
adc
ja
movd
out
in
orl
push
jg
mov
or
cmpsl
std
xor
adc
es
sub
dec
stos
test
push
ljmp
push
inc
add
xchg
inc
pop
mov
into
sub
enter
adc
xorl
inc
xchg
addr16
jnp
cmp
and
outsl
out
jle
out
mov
jp
add
out
jae
insl
cmc
xlat
cmp
pushf
mov
lds
aas
std
push
pop
outsb
add
push
out
mov
pop
arpl
xlat
sbb
xchg
push
add
in
rclb
mov
out
out
ljmp
cmp
fstl
shll
mov
push
pop
call
pop
xchg
push
pushf
xchg
mov
pop
inc
jno
jnp
push
mov
jbe
inc
movb
movsl
pop
dec
push
int
xchg
dec
jb
xor
cmp
adc
jle
jns
pop
call
jp
add
inc
push
mov
and
pop
push
mulb
sub
shrb
jno
mov
dec
leave
aas
jae
push
inc
sub
insl
push
lods
bound
pushf
je
mov
push
call
push
xchg
adc
hlt
sub
sahf
shll
lcall
fs
dec
cmp
mov
clc
popa
scas
adc
cwtl
pusha
add
push
lods
out
xchg
jb
das
sub
popf
les
into
sti
or
and
sub
add
mov
in
push
pop
outsl
ja
icebp
jnp
and
inc
inc
add
pop
adc
cmp
xchg
dec
int
test
dec
fldl
stos
mov
shll
mov
inc
pop
aaa
xchg
int3
imul
cmovs
sbb
test
add
mov
cmp
inc
adc
movsl
movsb
and
push
xchg
sub
add
ss
rol
mov
popf
test
pop
adc
mov
out
daa
out
aad
mov
push
imul
mov
add
mov
cmp
cmp
je
pop
ficompl
inc
cmc
test
add
pop
sbb
jo
test
pop
adc
mov
lahf
stos
xchg
cmp
shrl
call
inc
stos
es
les
mov
int3
cmpsl
iret
sub
fwait
pusha
xorl
adc
add
xchg
std
les
cmc
push
mov
lret
push
pop
fdivrl
dec
xchg
cwtl
jle
sub
push
pop
test
lods
dec
leave
in
sbb
xchg
aad
pop
sub
push
addl
orb
pop
add
movsl
insb
or
loopne
xor
mov
add
andl
jg
lds
mov
aad
leave
inc
mov
xchg
and
lods
loope
mov
jecxz
test
dec
xchg
lret
rcl
add
and
or
cld
mov
push
cmpsl
jne
cmp
or
int
aas
dec
inc
das
mov
repnz
out
aam
movsb
xchg
aad
mov
jg
push
jle
sub
xor
je
xor
add
mov
sbb
sti
push
and
lea
sbb
sbb
sub
pop
mov
cmp
mov
jno
pop
add
mov
xor
je
fadd
mov
sub
mov
push
fcoml
mov
out
lods
and
mov
loopne
sbbb
pop
sbb
mov
jmp
bound
into
jb
sbb
pop
mov
pop
pop
mov
jl
stos
cmp
aas
mov
out
lret
and
xchg
pop
pop
lret
dec
stos
incb
popf
outsb
jecxz
push
fwait
dec
and
add
enter
jae
popf
icebp
shlb
in
or
and
out
inc
mov
mov
ljmp
mov
or
mov
in
test
xor
sbb
pop
inc
mov
adc
sarb
test
add
mov
decb
pop
ret
lret
insb
pop
pop
xor
mov
xchg
mov
jle
push
sub
iret
leave
sub
adc
sbb
ja
cmpsl
mov
shrb
or
mov
sub
imul
mov
orl
idivb
mov
xchg
movsb
push
mov
aam
add
xchg
pop
js
adc
add
lock
cmp
es
fwait
es
mov
daa
inc
lret
loop
mov
js
rcr
xchg
sub
lcall
cmpl
dec
lock
and
popa
pop
lea
ljmp
stos
ret
lods
das
shll
adc
or
inc
xor
add
dec
out
sahf
xor
aas
push
or
ret
dec
jmp
push
push
rorb
std
mull
je
lret
ss
mov
dec
cwtl
sarl
imul
in
mov
mov
test
js
inc
sub
adc
shll
push
mov
push
icebp
popf
add
out
mov
jle
adc
jne
loope
inc
sub
repnz
add
mov
and
js
adc
and
mov
add
rcrb
xchg
pop
int
or
cs
push
mov
movb
orl
jp
pop
or
enter
cwtl
bound
test
sbb
cmp
jb
inc
int3
add
mov
dec
sbb
js
in
inc
inc
call
push
movsb
push
xor
xchg
push
sub
mov
push
mov
mov
fwait
or
nop
test
xchg
aas
ja
xlat
outsb
mov
mov
sbb
daa
xchg
push
mov
lods
fists
push
in
stos
dec
or
mov
divps
add
cmp
adc
dec
add
and
pop
and
push
push
push
cmp
jbe
test
loope
mov
test
test
je
inc
jb
jmp
adc
pop
cmc
push
xor
add
add
xchg
addr16
fimull
cmpsl
idivl
in
jne
ret
test
cmpsl
adc
xchg
stos
in
lret
xchg
jmp
fadds
lret
and
push
and
insb
aam
mov
dec
fstps
inc
shll
cltd
pusha
fwait
stos
adc
lret
and
pop
adc
adc
dec
sub
sub
dec
adc
dec
popf
scas
push
fwait
idivl
sub
mov
sbb
clc
adc
jle
mov
sub
sbb
push
sub
push
or
cmpsl
sbb
aas
divb
mov
pop
inc
mov
adc
sti
leave
push
lods
pop
mov
xchg
sbb
icebp
dec
xchg
sub
xchg
nop
pop
lock
sbb
movsb
lea
shrl
test
mov
jb
jae
in
lret
arpl
clc
xlat
and
xchg
dec
jl
cmc
push
mov
sbb
pop
pop
aad
and
xchg
cmc
repz
filds
mov
push
sbb
adc
inc
popf
push
fwait
jle
aaa
popa
arpl
dec
arpl
xchg
shlb
xchg
out
outsb
jbe
and
outsl
ja
cmpsl
fistpll
jno
dec
aas
loopew
push
loop
sbb
mov
cwtd
ja
decb
pop
bound
ret
pushf
push
out
jns
dec
jbe
pusha
sub
sbb
in
jae
mov
test
jl
idivl
inc
rclb
icebp
clc
lds
mov
cmpsb
pop
cmpsl
and
jl
imul
pop
jmp
push
cwtl
mov
or
lods
jecxz
test
sub
ret
lahf
addr16
pop
cmc
mov
adc
into
jnp
or
push
lods
cwtl
stos
xchg
xor
ret
cwtl
or
fdivs
daa
xor
inc
imul
mov
mov
xor
jb
xorb
and
fwait
jno
ret
xor
mov
out
mov
les
or
dec
inc
inc
lret
pop
fbld
lahf
cmp
xbegin
cmpsb
mov
push
pushf
lcall
mov
mov
sahf
and
clc
inc
jns
push
mov
jp
push
stos
adc
pop
pop
stos
nop
dec
out
fucomp
xor
lea
repnz
dec
jae
pop
cwtl
jecxz
or
pop
shlb
dec
cmp
mov
cltd
nop
cwtl
mov
lds
test
rorl
int
cmp
leave
loop
push
pop
lock
push
sbb
ror
fsubrl
decb
loopne
push
xchg
sahf
test
rclb
adc
mov
insb
and
shll
mov
into
out
dec
jle
mov
mov
mov
rcll
push
jbe
inc
aas
aaa
and
mov
fs
push
stc
aad
jbe
rcl
sub
into
xchg
xor
dec
lret
inc
gs
jl,pt
roll
test
pop
inc
dec
jle
xor
clc
std
fidivs
xor
sbb
push
dec
mov
aam
orl
sub
dec
std
loopne
loopne
mov
xchg
cmp
cmpb
sbb
mov
lods
adc
in
shr
shll
and
mov
leave
leave
orb
inc
mov
lock
das
inc
mov
and
jp
pusha
adc
aad
adc
cmpxchg
test
inc
add
in
xchg
cmc
xorb
jbe
sub
aad
lods
adc
and
icebp
sbb
pushf
pop
cld
and
cmp
sarb
jecxz
dec
jl
negl
jge
jns
add
ret
jo
scas
cmp
stc
xchg
lcall
repz
int3
adc
cmp
insl
push
xchg
mov
scas
xchg
and
mov
xor
rcr
pop
aas
mov
cmp
sbb
icebp
cwtl
sbb
outsl
mov
out
hlt
jb
cmp
scas
int3
xor
cmp
test
push
lds
add
fdivr
fisttpl
dec
cwtl
cmpsb
loopne
rcrl
adc
xor
sti
mov
popa
fbld
pop
dec
in
lcall
fidivrl
pop
in
jno
aaa
nop
lock
dec
dec
sub
xor
sub
popa
adc
mov
pop
loope
inc
gs
pusha
mov
ds
xor
addb
jae
leave
xchg
push
imul
loop
fisubrs
into
add
xchg
mov
cmp
fbstp
es
ds
xor
and
pop
pop
pop
mov
push
push
dec
sbb
mov
pop
jae
xchg
adc
and
bound
je
lea
out
or
and
and
cmpl
ljmp
jb
pop
xor
push
dec
push
mov
pop
cmp
jne
fisubrl
push
pop
popa
stc
in
push
stc
xchg
dec
and
ret
pop
arpl
adc
jbe
pop
jns
jge
setg
cmc
add
push
inc
push
sub
jae
pop
push
aad
pusha
stc
mov
imul
push
push
out
dec
or
sub
arpl
sub
cmp
mov
mov
inc
bound
xor
xchg
push
cmp
cmpsb
stc
cmp
insl
mov
jmp
cwtl
out
sti
adc
dec
lds
das
mov
mov
in
jae
pop
mov
xchg
ljmp
push
pop
sbb
mov
xor
or
xlat
or
push
add
call
js
xorb
xchg
xchg
imul
sbb
es
jge
fwait
jmp
je
mov
xchg
shlb
lock
lds
jmp
outsb
cmp
adc
mov
cld
mov
jg
sbb
repz
aas
hlt
pop
jp
push
negl
mov
push
fwait
enter
inc
and
lret
cli
insl
jp
in
lods
push
popa
cmpsb
mov
sub
jnp
nop
xchg
jge
lds
mov
lret
and
mov
out
pop
aad
icebp
pop
std
jmp
das
sbb
mov
outsl
mov
xchg
in
jno
aad
nop
jne
xor
xor
mov
and
pop
test
fisubrl
cmpsl
cmpsl
repnz
and
mov
mov
lds
aas
mov
push
stos
xlat
xlat
in
or
push
and
les
inc
inc
iret
iret
lcall
pop
push
int
inc
stos
es
lret
push
sub
dec
push
push
sarl
insl
or
mov
mov
xchg
push
mov
sbb
lahf
fdiv
gs
pop
xor
popa
or
ljmp
stos
stos
ja
cmpsb
xor
cmp
jmp
cmpsw
cmp
inc
push
jo
or
scas
movsb
jg
insl
pop
inc
mov
and
push
mov
push
loope
sub
xor
xor
fisubl
rdtsc
lcall
shlb
add
std
xor
xchg
out
outsl
inc
testl
lcall
idivl
xchg
shll
and
cmp
add
mov
sub
cmp
sbb
inc
adc
sub
cmp
mov
pop
inc
add
mov
mov
xchg
fists
dec
push
pop
mov
xchg
push
lock
xor
or
dec
jbe
sbb
pop
or
insl
xor
sbb
adc
int3
xchg
sub
in
and
rorb
xor
sub
lahf
and
in
dec
jg
push
cmpsb
or
jecxz
jnp
hlt
mov
ror
cmp
popa
aas
das
cmp
jb
add
adc
lcall
mov
mov
cmc
pusha
and
popa
lock
xchg
ret
push
xchg
in
test
pop
cwtl
repnz
inc
push
and
pop
imul
stos
testb
push
std
xchg
xor
or
rcl
sub
mov
fcmovnbe
sub
insl
rcrb
cmp
sbb
mov
and
dec
nop
push
sub
jb
adc
pop
ret
push
sbb
movsl
fidivrs
inc
inc
jns
mov
sbb
clc
movsb
mov
cmp
insb
movsb
inc
cmpl
bound
shlb
out
inc
insl
dec
sbb
ffree
daa
fwait
adc
or
pop
pop
outsl
pop
cmp
xor
push
test
movsl
arpl
rclb
iret
test
fwait
sub
jl
pushw
add
push
lcall
inc
in
sar
loop
pop
mov
sbb
jle
push
orb
lahf
fistps
cmp
push
xor
lock
sbb
pop
add
js
clc
cwtl
lret
sub
inc
xchg
xor
es
sbb
loopne
mov
rclb
roll
arpl
ret
add
cwtl
sbb
call
xchg
cmp
pop
mov
lea
sub
pop
addr16
xchg
in
stos
fs
insb
push
push
loop
push
mov
imull
insl
nop
mov
fsubrs
jg
clc
fdivrs
outsl
push
push
xor
fmuls
push
adc
ds
mov
mov
out
and
or
xor
adc
inc
push
adc
add
push
mov
ja
cs
inc
fwait
xor
int
leave
bound
loope
repnz
add
inc
cmp
mov
sub
inc
arpl
fsubl
push
outsb
inc
cmp
addr16
push
push
pusha
repz
mov
in
dec
sti
stos
pop
or
mov
mov
xor
mov
mov
xor
xor
xlat
push
dec
mov
cli
cmp
dec
add
lods
dec
stos
jo
push
xor
cmp
jno
dec
lea
adc
mov
cmp
jns
pop
xor
inc
call
sub
cmp
xchg
mov
mov
mov
jb
ds
arpl
loope
xchg
dec
inc
add
sub
insb
loopne
nop
insb
xor
push
jb
mov
test
push
or
push
cmp
cmp
cmp
push
push
sahf
mov
addr16
xor
mov
push
repz
xchg
mov
dec
fnstsw
mov
pop
sub
lds
ret
cltd
fidivl
mov
mov
lret
mov
pop
mov
daa
and
clc
inc
shrd
or
scas
insb
sbb
jl
js
lock
add
bound
outsb
lret
nop
mov
leave
clc
cmp
clc
jnp
inc
jle
mov
dec
scas
scas
js
mov
cli
clc
dec
imul
xor
adc
cmp
mov
push
popa
shrb
adcl
jle
dec
and
fstpt
xor
ret
sbb
sar
xchg
add
loopne
aad
or
and
ja
inc
lret
stos
sahf
aad
add
stos
jge
xor
mov
mov
jae
js
push
fwait
arpl
inc
movsl
outsb
gs
mov
mov
ret
popa
rclb
cmp
xchg
sbb
pop
cmp
xchg
and
popa
and
push
push
inc
les
cmp
adcl
lcall
add
inc
jl
js
mov
or
lret
aad
mov
lret
in
into
addr16
nop
cmp
fxch
cli
mov
das
dec
cld
mov
int3
inc
test
scas
lahf
xchg
mov
add
xchg
pop
imul
dec
mov
and
imull
push
mov
xor
xchg
jo
divl
jns
and
cmp
fwait
call
sarl
inc
mov
jno
and
repnz
xchg
sbb
pop
outsb
pop
mov
fwait
outsb
xchg
push
pop
aas
mov
add
aad
dec
mov
add
pop
nop
mov
in
adc
scas
cwtl
xor
cld
xor
fiaddl
adc
call
loop
ja
pop
mov
insl
scas
and
add
lret
jmp
data16
cwtl
mov
es
pop
mov
notb
repnz
aas
xchg
xor
cmp
call
and
mov
cmp
sub
mov
pusha
jne
add
lcall
mov
mov
repz
decb
ds
pop
enter
ds
add
cmp
cli
xchg
test
pop
ficoml
mov
nop
or
jbe
jae
dec
fsubl
lea
inc
xchg
push
adc
mov
rcrb
das
xor
mov
or
dec
das
jl
fcom
pushf
mov
adc
xor
inc
pushf
mov
out
pop
enter
rcrl
int
add
pop
mov
sub
shrb
inc
and
insl
xor
fmuls
bound
add
stos
leave
hlt
mov
jmp
cmpsb
push
movsb
lahf
mov
xor
into
mov
pop
push
pop
jne
and
xor
jl
xchg
aaa
incl
adc
jmp
xchg
ja
int3
and
push
cmp
mov
push
fwait
bound
sti
frstor
cmp
sbb
sub
xor
pop
jne
dec
jbe
cmp
faddl
xchg
inc
pop
out
stc
fnstsw
or
cwtl
lret
jo
in
mov
or
inc
lcall
jnp
push
bound
cmp
lods
xor
mov
push
repnz
push
mov
fcmovnbe
pushf
aad
mov
stos
xor
clc
push
add
add
aam
adc
mov
xchg
clc
fwait
push
into
add
fs
mov
mov
arpl
sbb
stos
iret
dec
push
dec
ja
xchg
adc
ret
xor
mov
jg
adc
mov
push
shlb
pop
mov
vmwrite
add
and
adc
out
adc
xor
pusha
push
nop
lcall
add
clc
cs
jg
stos
lret
lods
mov
inc
push
scas
ficoml
cmp
stos
iret
jbe
clc
jl
lods
or
out
jbe
bound
push
enter
iret
arpl
lock
inc
jge
adc
adc
pop
dec
fwait
pop
test
imul
ja
or
jle
inc
adc
test
iret
movsl
or
mov
xchg
xchg
stc
and
mov
gs
push
roll
push
inc
mov
sbb
push
lret
push
aam
daa
and
icebp
push
lods
sbb
mov
nop
les
add
xchg
sbb
daa
or
andb
ds
push
nop
push
xchg
lods
stos
mov
lods
das
outsl
in
sub
and
inc
rclb
adc
in
pop
sahf
add
jo
nop
and
mov
jl
imul
bound
xorl
inc
xchg
movsl
inc
jne
jge
push
inc
dec
add
add
jbe
mov
dec
std
push
mov
xor
dec
jo
inc
jmp
dec
mov
xor
fcoml
lahf
clc
scas
push
lret
inc
and
jbe
loop
adc
dec
adc
cmp
addr16
je
aaa
adc
dec
and
jnp
jl
sbb
xchg
cwtl
iret
pop
jne
clc
inc
mov
adc
sub
and
orb
sti
mov
mov
inc
inc
push
mov
sub
shlb
clc
daa
test
inc
mov
jp
cmp
dec
orb
add
jg
fsubrs
mov
jno
mov
and
loope
pop
std
sbb
xchg
js
inc
mov
cmc
shrb
aas
leave
testl
imul
mov
gs
sub
lret
out
add
xchg
outsb
in
jle
scas
add
fwait
and
cvtps2pd
idivl
push
xor
lahf
inc
sub
xchg
jae
inc
addr16
into
mov
pop
jns
enter
cmp
bound
jecxz
mov
cmp
mov
xor
and
push
pushf
sahf
int3
lds
int3
fsubrs
popl
adc
call
pop
dec
lds
arpl
mov
cmpsb
js
repz
cltd
push
or
je
mov
sbb
clc
dec
outsb
lods
decl
cs
scas
scas
sub
aaa
adc
cmpsb
shlb
je
mov
and
ss
mov
pop
shlb
pop
sub
insb
mov
inc
xchg
sub
leave
shl
sub
inc
out
cmp
mov
push
sub
stos
jo
jg
std
shlb
inc
xlat
cwtl
icebp
fnstenv
mov
bound
mov
in
mov
mov
xchg
inc
insl
xchg
imul
out
insl
out
out
adc
in
push
jp
sti
adc
enter
and
sub
icebp
imul
dec
je
jae
popa
mov
in
lock
data16
mov
push
aam
push
lods
xorb
jp
das
mov
int
ds
xor
dec
or
mov
into
xchg
cli
cmp
adc
mov
pop
sbb
add
mov
icebp
pop
pop
arpl
fldt
lahf
es
call
imul
ret
or
cwtl
push
dec
inc
pop
mov
xchg
xor
jl
lods
xchg
sti
dec
or
js
imul
sbb
lock
mov
arpl
ret
xchg
jb
cltd
xor
outsl
xchg
int
mov
sbb
mov
cltd
ret
fmull
dec
insb
and
or
cwtl
xor
fcomps
push
mov
cli
and
cli
xchg
inc
dec
shr
add
or
loop
inc
ljmp
jns
fsubrs
cld
mov
or
or
andb
xchg
push
insb
mov
sub
pop
ljmp
mov
jbe
sub
scas
in
int
sbb
pop
nop
cli
cmp
pinsrw
pop
add
mov
xor
xlat
xchg
shl
jbe
dec
add
test
je
lods
rclb
jl
ljmp
xlat
sbb
sbbl
xchg
ficoms
int3
pop
cmpsb
lret
and
std
ljmp
fs
mov
test
inc
mov
aaa
test
out
outsl
push
sbb
jg
cmp
push
mov
jecxz
daa
aaa
adc
aad
pop
lods
insl
add
or
sti
out
push
ret
into
shll
mov
xchg
jmp
movsl
mov
out
clc
mov
fidivrs
sub
cmp
dec
insl
in
add
jno
call
fidivl
fwait
je
inc
notb
je
mov
sbb
int
dec
insl
orb
mov
mov
push
enter
dec
stos
and
imul
stos
out
mov
jb
push
insl
sbb
jge
iret
mov
shll
cltd
xor
fsubrl
fnstcw
jo
in
xchg
pop
add
inc
push
xchg
aam
and
shl
xchg
xor
inc
sahf
mov
mov
inc
sbb
sahf
cmpb
loop
add
outsl
mov
lret
gs
test
xchg
mov
jl
out
test
roll
push
mov
lods
imul
and
mov
out
cli
lods
dec
push
sbbl
add
dec
dec
jge
mov
mov
divb
push
sub
dec
or
mov
pop
cld
sub
add
shl
push
jo
clc
fadd
cmp
in
dec
xchg
jbe
inc
mov
popf
mov
jnp
add
insl
cmp
inc
repnz
add
or
jmp
xchg
movsb
int
cli
mov
inc
push
xchg
sub
out
or
inc
adc
push
filds
sub
aad
xor
jnp
lahf
pop
arpl
les
cli
and
ja
stos
mov
jg
bound
add
pop
xchg
jl
loop
dec
clc
pushl
subl
jle
daa
jo
mov
imul
pusha
add
xchg
mov
push
add
pop
popf
mov
push
add
sub
lahf
out
mov
mov
cmp
mov
out
addr16
lea
rcrb
aaa
push
fstps
add
nop
or
pop
fwait
or
adc
adc
xor
cmpsl
sub
jl
sbbl
fidivl
je
push
mov
test
orb
pop
test
sbb
pop
mov
jg
fiadds
and
call
mov
cmp
int
enter
subb
testb
lahf
mov
cmp
sub
cmp
hlt
stos
mov
dec
adc
xor
jle
test
xlat
xchg
shlb
jmp
into
imul
subl
hlt
xor
jae
je
and
mov
js
mov
outsb
rcrl
and
fld
testl
mov
hlt
sbb
adc
test
shl
jl
packssdw
loope
mov
mov
mov
xor
dec
aas
stc
push
mov
stc
das
mov
xor
mov
sbb
and
fsubrs
stc
ficomps
jp
xchg
add
loope
mov
shll
push
in
and
outsb
dec
sbb
into
cmpsb
mov
mov
not
pop
int
add
mov
mov
out
push
out
lcall
ss
inc
push
sarl
xchg
setnp
push
clc
fcomps
lret
pop
push
shl
test
xor
cli
sbb
xor
hlt
das
pushf
cmp
add
data16
dec
jb
jo
jmp
add
es
mov
aaa
test
arpl
xchg
loop
bound
and
fildl
aaa
lcall
mov
mov
pushf
shlb
jbe
push
addr16
push
push
lahf
adc
outsl
push
cmp
jg
sbb
outsb
stos
sahf
cmp
lods
adc
add
mov
dec
pop
scas
mov
adc
push
insb
and
mov
pop
pop
outsb
dec
lret
loopw
clc
jg
repnz
dec
subb
or
jge
mov
movsl
stos
inc
cmp
fisubrs
stos
dec
jb
mov
or
pop
mov
xchg
push
insl
in
shrl
mov
mov
mov
test
sbb
cli
xor
mov
lock
dec
lret
cmpsb
xor
jae
call
ds
mov
jo
or
xchg
cmp
add
mov
jmp
jl
lods
gs
mov
xlat
hlt
sub
mov
scas
xchg
pop
fisttpl
lea
rcrl
sbb
and
aaa
stos
jns
push
ret
fisubrs
nop
cmp
and
inc
or
pop
lea
neg
aas
inc
lret
sbb
cmp
mov
stos
lock
sti
jecxz
sbb
dec
xor
fsub
popf
aas
sub
nop
fldcw
cmpb
sbb
sub
inc
idivb
out
cmpsl
inc
in
xchg
ljmp
mov
inc
das
push
leave
out
sbb
xchg
js
jp
imul
pop
negl
sbb
out
mov
push
popa
lret
sub
fimuls
arpl
mov
adc
outsl
hlt
sub
and
in
clc
data16
gs
iret
cmp
mov
jp
ja
ljmp
jbe
jmp
fsubr
divl
loope
adc
adc
xor
mov
xchg
pop
push
adc
lock
push
or
push
cmp
mov
push
adc
aam
mov
jno
mov
hlt
xchg
mov
aas
mov
adc
sahf
or
push
dec
xor
pushf
cli
cmp
push
xchg
shrb
out
push
repz
or
sub
cmp
xor
xchg
dec
lods
ljmp
movsl
add
pop
nop
leave
lods
xchg
mov
cmpsb
es
test
pop
xchg
cmp
fmulp
fisttpl
mov
sbb
stc
xlat
dec
test
pop
out
cli
ficoml
jb
insl
lods
scas
mov
fmul
inc
mov
mov
out
daa
icebp
int
pop
mov
sub
sti
sub
insl
push
xor
and
cmp
jo
ja
mov
push
jle
jbe
cmp
aaa
xlat
xchg
mov
mov
dec
mov
pop
rcrb
pop
jge
xchg
out
insb
mov
dec
dec
and
cmp
cmc
ror
sub
test
adc
or
push
xchg
cmpsb
mov
daa
mov
mov
dec
addr16
inc
xor
outsl
loope
mov
or
jg
movsb
mov
insb
notl
stos
sub
sbb
jbe
hlt
sub
dec
pop
dec
pop
imul
notb
addr16
imul
add
insl
cmp
jb
add
jle
out
jb
loop
xor
enter
mov
xor
bound
lds
aam
ljmp
rcrb
sti
adc
pop
push
jmp
int3
jp
lret
cmp
aaa
add
adc
out
enter
cmp
ja
cld
push
lcall
xchg
sbb
das
pusha
insb
mov
jns
out
adc
loop
sbb
push
mul
cmpsl
enter
clc
mov
xchg
push
incb
jne
sub
inc
xchg
bound
and
mov
addr16
or
jne
addr16
sub
xchg
mov
or
popa
dec
adc
cmc
movl
and
ret
shrb
insl
cmpsl
pusha
insb
mov
repz
test
dec
mov
mov
adc
jne
scas
pusha
add
xchg
ja
jb
fists
pushf
movsb
adc
imul
mov
roll
mov
daa
xchg
jl
testl
add
fs
insl
jle
jo
loope
jg
cmp
and
scas
int
and
stos
movsb
xchg
push
pop
mov
mov
inc
cmp
iret
cld
xchg
call
and
or
mov
les
into
jg
data16
jge
ljmp
or
jmp
dec
mov
add
add
sbb
insl
pushf
pop
mov
in
push
cmp
jo
loop
jae
aas
adc
fcompl
xor
fcmovu
ss
xchg
mov
popf
in
or
scas
mov
mov
add
jnp
nop
and
sub
ret
cmp
loop
cmp
repz
ja
and
cmc
cmp
mov
aam
imul
mov
push
mov
out
cmp
push
jbe
sbb
or
mov
popf
xchg
sahf
xor
fwait
sbb
aas
adc
imul
xchg
sahf
add
dec
mov
rclb
out
fcmovu
ja
mov
jle
call
sub
jns
dec
sub
repz
in
adc
add
cmpsl
mov
repz
pop
adc
xor
lods
xchg
mov
cmpsb
cmp
lret
outsl
pop
std
or
pop
jecxz
adc
andb
or
cmp
test
ss
pushf
out
insl
aas
icebp
rolb
cs
xor
sarb
xchg
subl
jae
mov
jno
sahf
mov
fidivrl
dec
sarl
lea
or
mov
stos
adc
leave
mov
mov
subl
lea
mov
mov
js
sahf
loope
fcompl
cmp
jle
mov
mov
sub
outsb
shrb
inc
push
inc
fsub
or
gs
out
rorb
inc
popf
jae
push
loop
xchg
pop
mov
mov
add
pushf
dec
rdpmc
push
xchg
push
add
xor
into
add
iret
pop
sub
out
loope
icebp
icebp
pop
loopne
out
repnz
sbb
jg
inc
adc
pop
xor
int3
call
cmpb
ja
cmpsl
int3
in
sar
pop
ret
sti
jp
jne
fldenv
fistps
shrl
dec
mov
in
push
es
jmp
xchg
aad
mov
or
fwait
and
and
inc
adc
ret
xchg
lds
and
leave
notl
fs
out
sti
test
ljmp
fcomps
xchg
inc
jae
xor
fidivs
imul
cmp
fs
jno
mov
subl
mov
sbb
or
pop
sub
xchg
imul
inc
pop
bound
mov
ja,pn
daa
add
imul
stos
xchg
rcrb
in
sarb
xchg
jmp
or
loope,pn
xchg
mov
in
test
lret
aas
fidivrs
cmp
lahf
ret
push
psubd
call
dec
ret
idivl
cmp
pusha
or
pop
shrl
mov
mov
bound
loopne
mov
aaa
pop
test
in
out
jns
cmpsb
inc
sbb
xchg
fdivs
push
lods
pusha
dec
outsb
int
push
nop
jge
push
loop
mov
ret
call
fdiv
aad
or
mov
dec
pop
cmp
adc
std
popf
aaa
out
pop
call
push
dec
jle
fcoml
popf
cltd
shr
xor
mov
or
call
movups
sub
movsb
mov
xor
mov
leave
test
test
mov
in
out
cld
scas
hlt
popf
pop
pop
jne
xlat
js
adc
aam
pusha
push
sub
push
int
jle
shl
xchg
jae
iret
sbb
test
inc
or
popf
popa
xchg
aam
out
xor
jge
stc
out
int
mov
loope
daa
mov
jb
hlt
jne
mov
ds
mov
loope
xor
call
lahf
gs
or
stos
in
or
lds
adc
divl
mov
test
fcomip
inc
adc
dec
fwait
mov
and
mov
ds
push
mov
inc
fbld
sub
test
xchg
mov
fisubs
inc
push
dec
jmp
mov
repz
sarl
movsb
xchg
and
sarl
xor
push
jo
cmp
dec
dec
mov
and
int
jmp
or
pusha
mov
pop
nop
push
enter
pop
adc
pusha
lea
stos
movsl
and
xor
mov
std
mov
sub
xchg
in
out
sti
call
aaa
fstpt
repz
cmc
arpl
ret
lds
cmp
mov
cwtl
mov
adc
push
xchg
xchg
xchg
fadds
arpl
sahf
inc
mov
sbb
push
sahf
mov
or
subb
sbb
sbb
add
and
xchg
fcmovnb
pushf
gs
js
lods
mov
int3
xor
cmpsl
test
sub
jg
inc
fwait
adc
mov
cmp
mov
xchg
mov
repnz
stos
in
aas
mov
das
xor
cmpsl
dec
mov
push
rcrl
insl
adc
jge
cs
repz
cmp
push
xchg
idivb
xchg
sbb
cmp
adc
movsb
int3
add
lock
fimull
xchg
inc
mov
mov
loopne
mov
mov
mov
test
push
ret
leave
mov
push
ss
mov
jns
adc
adc
mov
cmc
pop
sbb
lea
pop
out
enter
jl
outsb
aaa
ljmp
out
or
movsb
jae
inc
ss
or
scas
fcompl
cltd
push
sub
cmp
negl
int
add
fs
fwait
cld
cmc
push
xor
sub
mov
xchg
je
xor
sub
mov
sub
ja
sub
gs
lcall
xor
add
dec
repnz
cmp
ljmp
into
and
leave
dec
int
cmpb
test
add
sarl
jnp
xchg
stc
push
hlt
movsl
cmpl
jnp
sbb
inc
aas
lahf
jg
add
fdivrl
mov
sbb
sub
sub
jl
push
jecxz
xor
push
mov
jg
pop
jmp
mov
inc
and
enter
loope
mov
mov
repnz
addr16
mov
lods
ret
xor
jb
fadd
mov
xchg
insb
mov
jnp
cmp
fbstp
popa
mov
imul
test
adc
pop
pop
sbb
nop
add
xor
sti
adc
inc
adc
dec
xor
stos
jne
add
out
aas
xchg
mov
push
jae
idivl
inc
stos
lock
xor
cld
pop
flds
add
xchg
mov
lods
fmull
cmp
push
pop
leave
cmp
inc
dec
addl
lret
sub
scas
int
mov
push
push
xlat
in
fbld
adc
mull
pop
cwtl
push
data16
sbb
and
lahf
push
scas
dec
pop
xor
mov
rcr
inc
call
pop
mov
repz
gs
sub
int3
jle
cmpsl
jg
inc
push
dec
jne
or
icebp
lods
ja
ret
fidivl
cmpsl
mov
outsl
sub
xchg
roll
cmpsb
ljmp
and
jne
push
clc
ret
icebp
and
mov
add
and
jbe
out
xor
push
jle
mov
mov
js
mov
or
mov
hlt
cwtl
inc
fisubrs
scas
sbbl
pop
call
add
bound
push
aaa
adc
mov
mov
fiadds
jo
rep
popa
inc
std
inc
sbb
inc
je
xchg
pop
fwait
aad
push
mov
into
cwtl
push
xor
mov
or
pop
sbb
dec
dec
pop
je
jne
mov
enter
dec
movsl
mov
imul
or
mov
xor
mov
or
jl
inc
dec
test
add
add
arpl
sarl
out
cmc
imul
rorl
cli
mov
lock
adc
mov
push
mov
sub
adc
gs
cmp
mov
mov
mov
repnz
pushf
sub
shl
xor
and
hlt
test
xchg
pop
adc
dec
sub
mov
incb
dec
out
pop
sbb
xor
pushf
repz
gs
mov
mov
xor
and
insb
xor
and
bound
scas
iret
in
jp
pop
or
xchg
and
inc
fimuls
adc
pusha
dec
lds
popf
in
add
add
cmpsl
jge
rorl
mov
pop
jae
cmpsb
int
repnz
arpl
or
and
jbe
out
fimuls
out
test
pop
or
inc
adc
lcall
pop
or
and
or
aaa
sub
lock
ljmp
cltd
mov
nop
outsb
lret
pop
adc
pop
out
es
cld
fwait
loopne
mov
adc
add
sbb
scas
jo
aam
jae
js
cmp
shll
jne
ljmp
mov
pop
shl
ja
mov
jae
push
clc
jp
sub
cld
iret
push
inc
scas
sbb
pop
push
pop
in
arpl
xor
and
cld
jbe
mov
pop
out
fisttps
inc
cmpsl
jmp
sbb
outsb
outsl
push
into
lret
push
daa
aas
pushl
loopne
pop
mov
lock
add
or
aad
or
xor
imul
adc
inc
jmp
addr16
int3
out
adc
test
sub
cli
mov
dec
adc
dec
xchg
mov
adc
pop
test
data16
add
push
dec
xchg
cmpsb
xchg
pusha
les
pop
stos
mov
sub
icebp
dec
add
inc
loope
subb
pop
repnz
cltd
mov
shlb
push
jge
cmpsb
xchg
mov
das
out
jae
cmp
ret
dec
cmc
rcl
dec
shlb
push
jp
or
mov
daa
add
mov
mov
mov
pop
xorb
in
scas
pop
cmp
loopne
aam
into
xor
aam
loopne
cmp
xor
mov
notl
lea
ficomps
mov
jle
pop
out
jle
cmc
sbb
xchg
mov
xor
and
or
xchg
jnp
in
and
pop
cmp
subb
or
jp
popa
sahf
jmp
loopne
popa
sti
fbld
jb
fistl
int
cltd
sbb
push
decl
popf
cmc
pop
push
dec
adc
xchg
leave
imul
add
push
cmp
or
loopne
outsb
out
iret
mov
test
andb
push
mov
inc
add
mov
aad
inc
xchg
push
lret
adc
shr
adc
hlt
mov
xor
cmp
mov
jne
xor
and
mov
ror
dec
sbb
xlat
addl
bound
xchg
loopne
sub
adc
lea
sbb
lods
cmpsl
push
add
les
push
jno
into
jae
int
shlb
into
inc
sbb
shlb
scas
xor
cmp
cwtl
push
cmp
mov
icebp
xchg
xor
aaa
push
pop
or
or
jnp
inc
xor
or
xchg
das
adc
cmp
fwait
dec
sbb
adc
jmp
mov
jl
push
push
stos
cltd
mov
inc
inc
mov
cmp
pop
fs
cmp
adcl
pop
fisubl
inc
dec
sbb
mov
sarb
mov
lock
punpckldq
aad
xor
sub
jl
scas
lods
and
hlt
jmp
add
andb
jae
popa
push
fldl2t
ret
and
mov
mov
add
sub
inc
cmpb
hlt
fmul
popa
inc
mov
ret
mov
cmpb
sub
jge
test
stc
xor
dec
insl
movsb
lods
ret
cmp
lahf
cltd
aad
loope
popf
aam
pop
pushf
mov
lret
cmc
pop
sbb
sbb
and
js
push
dec
or
pop
daa
sub
sub
cmp
adc
inc
ja
rcl
bound
fisubs
cmp
mov
int
insb
call
fldcw
inc
adc
jle
lock
push
test
fimull
adc
sbb
mov
inc
mov
mov
stos
mov
scas
sub
aas
mov
fimuls
loop
movsl
pop
mov
sub
dec
mov
rorl
add
std
daa
fsubrs
push
jae
mov
mov
sub
mov
add
mov
pop
fwait
mov
add
push
sub
or
movsb
fwait
je
ret
lahf
jno
push
jg
jp
mov
sub
mov
mov
fistpl
clc
fsubr
xor
or
in
cmp
or
je
xchg
dec
std
cli
in
jno
push
aas
cmp
loop
dec
std
and
sti
dec
mov
les
fists
ljmp
jge
push
jnp
scas
sarl
jmp
or
ja
add
jmp
dec
xor
push
test
cmp
mov
xorb
xchg
adc
movsl
mov
cmp
jmp
shll
int3
add
xor
movsl
cltd
and
movsb
popf
dec
aam
push
sbb
xor
loope
add
shlb
ljmp
out
inc
in
xor
sahf
sbb
push
cld
sub
mov
adc
push
mov
mov
mov
aam
pop
inc
mov
mov
add
mov
mov
in
and
jecxz
jmp
dec
das
adc
popa
scas
jmp
hlt
imul
enter
push
dec
shll
xchg
mov
loop
dec
jno
jp
push
jb
push
mov
fnstsw
inc
jns
imul
push
xor
push
out
mov
rorl
and
mov
rcr
aam
shrl
lock
and
test
popf
jae
xchg
pop
jg
cmp
mov
push
inc
pop
xlat
jmp
sub
xlat
and
lret
lahf
jle
int3
cmp
cmpsb
sbb
jle
and
xchg
lds
loop
dec
out
or
fwait
into
add
sbb
mov
aaa
hlt
cmp
imul
dec
and
and
jp
or
int3
mov
adc
subb
ja
xor
ret
xor
add
or
clc
and
push
push
sbb
sbb
cmp
icebp
sbb
sbb
bound
mov
inc
repz
mov
xor
lret
mov
jns
xchg
jecxz
rclb
mov
addr16
das
mov
out
testl
jle
mov
pop
dec
mov
scas
es
ljmp
mov
je
lcall
jb
push
mov
outsl
repz
or
loope
cwtl
push
adc
fistl
in
pop
mov
adc
push
mov
loopne
outsb
popf
mov
push
and
and
push
lahf
stos
adc
sbb
nop
jg
call
fmull
pop
xchg
aaa
pop
sti
push
sahf
movsb
insb
add
adc
adc
fwait
mull
arpl
mov
xor
jp
fistps
pop
out
cmpsl
push
mov
aad
mov
mov
dec
dec
pop
inc
test
add
std
popf
pop
lock
ja
inc
jmp
mov
sti
mov
sbb
add
leave
lcall
in
fcmovu
jns
xor
xchg
add
adc
stos
cmp
inc
xor
xchg
pop
xor
mov
jmp
fsubrp
outsl
cltd
xchg
scas
imul
es
and
push
pop
mov
inc
lcall
sbb
jge
repz
mov
add
stos
xchg
clc
jns
jns
cmpsb
pushf
aaa
lahf
cmp
push
xchg
mov
mov
xchg
push
dec
or
add
sbb
dec
in
frstor
cmp
call
jns
inc
lea
lods
scas
je
push
dec
rcl
add
aad
fiadds
pusha
out
xchg
pop
add
mov
popa
pop
cmp
fwait
in
jns
loop
stc
sub
pop
xor
jns
in
lea
push
mov
push
jno
or
jl
jp
js
mov
lock
hlt
mov
jo
xchg
mov
lds
aam
mov
mov
inc
xchg
adc
jmp
outsl
gs
stos
orl
loope
mov
mov
sbbl
mov
pop
movsb
shl
mov
das
pop
push
test
clc
mov
test
inc
lea
dec
in
dec
pop
jns
pop
xchg
mov
and
mov
xor
xlat
xchg
and
mov
divl
push
cmpsb
dec
loope
xor
dec
xchg
adc
mov
push
lds
add
pop
lret
sub
cmpsl
sbb
sub
enter
in
mov
mov
fwait
pop
jnp
push
subl
mov
scas
cltd
ja
cwtl
xchg
je
mov
popf
jb
repnz
mov
add
jge
decb
and
rclb
mov
sub
cmc
pop
ret
mov
lock
cmp
addr16
and
ret
movsb
lds
sbb
inc
pop
lods
rolb
add
mov
enter
pmaxsw
inc
push
or
icebp
push
cltd
aad
dec
ds
adc
add
loop
das
das
mov
push
xlat
ja
adc
xor
push
js
or
adc
push
inc
aaa
js
gs
sbb
repnz
aas
and
insl
xor
js
aad
popa
insb
dec
loopne
leave
loope
call
lods
push
mov
push
xchg
ret
jmp
cli
mov
imulb
dec
das
imul
addl
cld
hlt
or
out
rcrl
loop
adc
pop
subl
push
push
aaa
cld
add
scas
stc
push
xchg
xchg
jo
ds
sbb
or
out
push
mov
jae
pop
daa
xor
ja
or
push
mov
push
add
shll
mov
xchg
xchg
mov
inc
jb
bound
push
in
lock
enter
repz
iret
or
scas
leave
ret
cmpsl
sub
cmp
push
lock
imul
inc
clc
jmp
call
jnp
cmpl
mov
mov
mov
and
lods
aas
aam
lea
adc
js
decl
mov
testb
call
sbb
or
xor
xor
sbb
icebp
or
fsts
test
imul
adc
icebp
jge
out
sbb
sahf
pop
push
das
cs
sti
jmp
out
xchg
call
int
push
push
fdivs
cmp
addl
xchg
std
popa
mov
addl
add
frstor
pop
mov
das
pop
push
lock
fmull
ret
adc
push
jp
int
data16
outsl
mov
out
xchg
inc
sahf
cmp
xor
mov
cltd
pushf
push
ret
in
jbe
out
dec
adc
push
jae
mov
imul
shrl
out
aas
adc
std
negb
int
or
or
mov
lock
aaa
dec
cmp
pop
xchg
jno
sub
hlt
clc
lods
fwait
inc
mov
adc
add
add
jne
imul
and
mov
mov
pop
cs
xchg
xlat
inc
mov
push
adc
push
or
int
sbb
ret
xorb
cs
pop
push
fsubl
xlat
dec
fbstp
jno
lock
xchg
fcmovne
in
xor
out
adcl
cmp
mov
adc
sub
xchg
hlt
push
fwait
sbb
roll
ret
ljmp
mov
jecxz
mov
in
mov
jg
popw
cmp
lock
insl
mov
outsl
sub
rclb
push
lods
dec
jg
hlt
fistpll
sub
cmp
sbb
aad
mov
xor
xchg
cmpsl
adc
scas
insl
add
cmp
push
push
lea
lods
push
mov
push
adc
add
inc
adc
enter
out
dec
fwait
add
pop
jle
mov
imul
sahf
pop
push
addl
add
psrad
mov
inc
push
xor
jg
pop
and
and
loopne
xchg
pop
cmp
fmull
and
mov
dec
ja
push
shr
adc
dec
js
scas
xchg
rorb
fcoml
and
test
xchg
xchg
mov
call
fnstsw
sub
test
cmc
das
aas
mov
sub
into
jno
es
jp
lods
jbe
jb
jl
enter
insl
adc
ljmp
fsubl
xor
loop
jb
in
stos
xchg
enter
ds
cmpsl
and
add
sub
ret
aas
divb
mov
mov
sbb
mov
ljmp
dec
or
push
notb
lret
movsb
cmp
sahf
outsl
add
test
mov
mov
xlat
aaa
ret
mov
pop
das
or
out
insl
pop
jbe
xchg
sahf
xadd
loope
sub
jg
addr16
mov
adc
push
inc
lcall
jno
out
adc
lret
mov
jns
mov
xchg
push
mov
test
jb
mov
daa
loope
daa
fiadds
fildll
test
and
xchg
in
inc
cld
pop
push
pushl
push
out
dec
scas
imulb
sub
ss
je
push
aad
popa
mov
dec
insb
insb
mov
sbb
xor
mov
aaa
pop
adc
arpl
and
stos
inc
sub
movsb
adc
and
xor
arpl
dec
push
sti
pop
or
and
push
imull
mov
mov
jb
push
add
push
ss
push
xor
xchg
sbb
cmc
enter
push
lds
push
idivb
dec
push
fmull
jle
cmp
lods
int
out
add
loope
mov
repnz
cmp
dec
or
jp
xchg
cmp
repz
dec
and
rcrl
sahf
into
les
mov
add
mov
cmpsl
or
jns
icebp
pop
adcb
fldt
addr16
stos
xor
rol
fstl
lock
push
push
or
and
push
mov
sub
cmp
cmpsb
mov
loope
je
fnstsw
popf
jae
mov
dec
mov
ret
bound
repz
js
inc
dec
insb
cmp
dec
dec
out
cmpsb
jno
jecxz
or
fisttps
jns
pop
or
pushf
rorb
xchg
mov
movsb
je
loope
mov
aaa
pop
jl
cmp
inc
jl
push
fstps
fisttps
sub
xor
test
stos
mov
adc
test
cmpsb
cld
pextrw
movsb
dec
insb
mov
leave
lea
xchg
mov
jge
outsb
push
enter
dec
pop
fdivrs
push
push
mov
xlat
lret
push
mov
push
jge
in
out
dec
imul
enter
in
inc
sbb
cmpsb
out
fs
fstps
pushl
cmp
into
sbb
cmp
xchg
push
in
and
add
push
leave
sub
cmp
dec
mov
add
mov
xchg
jns
repz
lods
arpl
jae
clc
iret
pop
jle
xchg
hlt
enter
jp
mov
movsl
xor
js
mov
xor
jno
imul
aam
dec
scas
jecxz
mov
sbb
call
sbb
xorl
cmp
jno
test
test
in
mov
push
in
movsb
sub
dec
lret
in
or
test
in
imul
sbbl
jbe
jmp
pop
js
push
int
jmp
push
leave
and
clc
inc
loop
xlat
repz
cmp
out
push
fstl
inc
pop
in
mov
xchg
into
mov
fstpl
pop
imul
test
es
mov
adc
jg
add
jb
hlt
xor
push
sbb
sub
and
nop
rcr
lock
sahf
sub
push
mov
mov
jne
fstpt
popa
mov
sarb
pop
jle
dec
jmp
fwait
mov
rolb
je
mov
add
loope
mov
adc
stc
lret
into
jge
or
test
sbb
scas
pop
pop
repz
ficoml
inc
inc
add
pop
arpl
fcmovu
pop
pop
push
out
push
add
and
daa
xchg
push
pusha
cmp
es
push
xchg
aam
mov
sub
stos
inc
push
xor
fsubl
jp
xlat
loopne
cltd
std
addl
fstp
ljmp
xor
mov
lahf
das
dec
xlat
cld
xor
jae
test
ret
xchg
outsl
hlt
mov
adc
sub
inc
add
jmp
outsb
push
bound
sub
push
sbb
shlb
lret
fwait
xlat
gs
jb
stos
adc
enter
push
cmp
mov
lahf
sahf
cmp
adc
outsl
or
and
popa
data16
pop
js
imul
sbb
and
mov
cs
ret
loope
popf
sub
je
cmp
push
mov
xlat
movsl
adc
test
lods
mov
cmpb
mov
inc
xchg
push
push
cli
push
or
outsb
sub
pop
lcall
aaa
and
loope
jmp
jecxz
out
pop
fistpll
test
mov
mov
mov
add
sbb
sbbl
push
lahf
outsb
les
popa
jo
jg
cwtl
mov
sbb
repnz
push
scas
divl
shll
sahf
or
push
jle
and
mov
mov
lods
add
push
movb
push
jp
xchg
nop
cs
rol
cmpsb
add
push
test
adc
fdivrs
sbb
ret
adc
out
bound
test
ljmp
cmp
mov
clc
nop
inc
pop
daa
pop
push
or
adc
leave
add
cli
std
dec
mov
lock
push
mov
mov
jo
jle
stos
out
jecxz
cmc
jle
mov
insb
std
lods
stos
bound
mov
test
cmc
add
sahf
xor
cmp
mov
inc
cld
in
dec
inc
cmp
and
sbb
mov
fdivrp
or
cmp
jns
movsl
fsts
jp
pop
lahf
test
movsl
pop
or
adc
fsubs
mov
sbb
mov
xchg
enter
pop
jb
push
sbb
out
cmc
sbb
iret
jb
dec
je
inc
adc
cmp
xor
pushf
or
fisubrs
cmp
adc
cltd
cmp
jmp
jl
sub
cs
pushf
or
push
scas
fldenv
in
and
jle
loop
lea
sbb
push
fsubrl
out
out
jo
fneni(8087
pop
or
inc
xor
sub
aam
repnz
inc
je
jmp
icebp
in
loop
jns
aas
roll
adc
out
mov
push
mov
addr16
push
jno
add
mov
mov
sub
xchg
adc
sbb
movsb
js
imul
xchg
movsb
clc
jns
add
paddb
cmc
popf
pop
mov
insb
das
pop
rcll
xchg
ss
out
cmp
lock
adc
cmovne
xor
hlt
mov
or
ret
sahf
aas
adc
cmp
dec
push
neg
add
fwait
push
mov
outsl
sbb
movsb
push
xor
sbb
jmp
and
inc
aam
adc
sub
and
sahf
adc
scas
mov
out
jae
dec
test
scas
aam
in
sub
fstp
mov
pop
lahf
gs
cmp
testb
pop
mov
test
mov
out
loopne
pop
in
mov
dec
sub
push
add
lods
cmp
mov
lods
fbstp
pop
mov
fwait
mov
mov
sbb
fadds
shr
out
jnp
xchg
cmp
clc
int
pop
jns
cld
bound
lret
pop
push
clc
push
iret
inc
out
mov
or
jle
daa
mov
jns
aad
shlb
sahf
fs
adc
dec
xor
int3
mov
pop
inc
add
hlt
pop
push
mov
in
scas
jle
xchg
ffreep
pop
add
aad
imul
pop
mov
xchg
jns
rolb
dec
xchg
xchg
lcall
sbb
mov
stc
mov
cmp
push
lahf
inc
mull
xchg
std
iret
pusha
rcl
sbb
xchg
data16
mov
dec
lods
jg
stos
or
stos
add
xchg
fcomp
mov
inc
clc
lea
test
sub
data16
mov
xor
sub
push
xchg
lahf
mov
popf
lock
outsb
mov
fwait
mov
das
adc
leave
pop
div
pop
ss
mov
push
mov
lcall
inc
hlt
xchg
lret
out
imul
fcompl
jl
repz
fwait
add
mov
lock
ljmp
pop
sbb
pop
test
mov
dec
das
xchg
fwait
gs
cmp
icebp
cld
repz
add
mov
xor
test
cmp
or
mull
and
mov
loope
aad
enter
stos
dec
sub
ljmp
mov
out
xchg
mov
test
cltd
cmp
mov
repnz
clc
pop
cltd
sub
mov
push
and
mov
xchg
orb
xor
std
adc
test
xchg
dec
hlt
fs
lods
scas
repnz
inc
mov
fcomip
jne
data16
mov
xchg
sbb
shrl
dec
push
ss
sub
pop
jno
pop
fildl
dec
loope
jmp
inc
adc
cli
sub
clc
daa
add
dec
neg
dec
dec
dec
hlt
fistps
inc
fcomps
adc
testb
ss
mov
pop
adc
cwtl
jno
popf
jno
shl
push
in
inc
cmovl
loopne
ret
orb
cli
repnz
cmpsb
pop
outsb
sub
jmpw
gs
pop
in
sub
adc
fdivrs
add
or
stos
push
test
iret
rclb
xor
movsl
dec
nop
icebp
adc
and
dec
mov
add
sub
les
cli
inc
rcr
call
xor
inc
pusha
shll
xchg
out
mov
pop
je
mov
jb
xchg
out
sub
bound
pusha
movsb
in
adcl
push
push
inc
insb
pop
lea
cld
xlat
out
cmp
test
inc
loopne
push
cmp
adc
jb
sbb
jne
pusha
fnstsw
xorl
mov
dec
add
inc
pop
sbb
mov
sbb
xor
pop
dec
fs
jmp
cmc
cli
jl
xchg
cmp
not
mov
pop
test
fimull
cmp
leave
sub
rolb
jb
cltd
push
push
cmp
cmp
clc
sarb
fiadds
xchg
pop
xchg
sub
cmp
mov
jbe
inc
dec
mov
inc
stos
sti
xchg
jo
in
roll
and
xchg
push
daa
push
stc
lea
mov
push
push
mov
nop
subb
call
cmc
lret
mov
mov
arpl
rolb
dec
lods
lods
cmp
inc
adc
arpl
adcl
test
push
shl
or
imul
inc
clc
mov
cld
sub
pusha
ss
lds
cs
dec
arpl
shll
int3
jb
mov
inc
fistpl
push
adc
fcomps
xchg
shlb
mov
push
scas
xchg
sbb
pop
and
pop
rcl
je
jns
lds
sbb
clc
sahf
movsl
jmp
lock
sahf
hlt
mov
cli
in
ret
mov
idiv
cmp
in
mov
and
mov
push
jnp
jbe
lret
jge
stc
push
hlt
push
pop
sti
jl
xchg
ss
lret
dec
sub
mov
pop
mov
pop
cmpsl
std
loopne
add
sub
mov
dec
sar
rcll
je
inc
dec
push
sub
sbb
cmpsb
loop
sbb
inc
mov
xchg
lea
shlb
imul
jo
rcll
lret
mov
jns
cmpsb
mov
cmpsl
sbb
sbb
mov
xchg
imul
aaa
jbe
xchg
inc
push
loop
and
add
fiaddl
add
jmp
jge
dec
das
insb
push
mov
sub
shlb
fiadds
ljmp
xchg
pop
xchg
add
sti
cmp
inc
lods
pop
mov
push
test
dec
fists
push
ret
xor
xchg
cmc
ljmp
cli
pop
shl
lcall
repz
and
sbb
xrelease
pop
pop
aam
stos
mov
pop
loope
adcl
sbb
pushf
xchg
lock
mov
push
sub
out
xlat
js
xchg
pop
push
xchg
cmp
or
cmp
jno
mov
test
shld
or
je
sbb
mov
xor
arpl
dec
mov
shll
dec
adc
mov
sub
test
jle
xchg
inc
dec
sbb
lods
es
lahf
popf
sub
sbb
nop
pushf
ds
iret
nop
pop
jle
jb
repz
sub
into
or
sub
sbb
inc
mov
mov
mov
int
dec
movsl
enter
in
movsl
xor
cmp
repz
imul
mov
jl
cmpsl
adc
insb
popf
popf
xor
ss
dec
sbb
sbbb
cmp
push
or
in
mov
out
inc
hlt
icebp
std
push
push
aad
int
cltd
mov
insl
mov
loope
dec
std
stc
pop
pop
and
enter
adc
imul
sar
sub
imul
xlat
xchg
dec
insl
lcall
mov
sub
pop
in
push
xchg
xchg
push
cmp
enter
in
add
adc
je
xchg
repnz
shrl
gs
mov
sbb
lret
mov
mov
dec
ficomps
cmp
in
mov
cmpsb
inc
pop
lret
insl
fwait
pop
cmp
mov
mov
adc
popf
jp
mov
xchg
cmpsb
test
jae
es
enter
call
dec
xchg
movsb
xor
repnz
sbb
lock
push
aam
rcrl
or
xchg
jle
mov
rorb
or
std
mov
xchg
xor
mulw
outsb
cmp
fnsave
jle
insl
xor
mov
jle
shrl
pop
push
shll
subl
gs
leave
fsubl
aas
iret
push
jge
ds
inc
data16
xchg
sahf
iret
lea
mov
ficompl
lahf
inc
dec
push
or
test
into
bound
mov
addr16
jnp
negl
sbb
fldenv
jnp
pop
jbe
cmp
ja
ja,pn
and
sarb
xor
gs
std
scas
xchg
xchg
push
mov
add
pusha
notb
pop
stos
ljmp
inc
inc
out
add
insb
push
xchg
int3
lcall
mov
scas
jne
mov
mov
out
push
pop
mov
aaa
push
inc
xchg
push
das
int3
mov
sbb
js
shrb
test
lahf
xor
insb
xchg
jnp
add
pop
in
shlb
cld
sbb
sbb
inc
cmpsb
cmp
mov
aam
in
fldpi
into
adc
jns
and
out
gs
add
mov
sub
pop
imul
add
lea
mov
jbe
fwait
pop
push
push
push
inc
pop
sahf
inc
outsl
and
and
mov
js
gs
xor
mov
es
stos
cmp
fs
imul
aad
cwtl
mov
mov
sahf
stos
push
out
jg
jns
mov
push
ret
in
adc
popa
lds
mov
daa
mov
hlt
adcl
stc
mov
test
rorb
adc
mov
lea
push
cmp
imul
sbb
xor
aam
orb
pop
jno
loopne
aaa
and
pop
sub
mov
lret
stos
outsl
popa
sub
dec
xchg
cwtl
test
loope
or
mov
push
cmp
sub
push
push
pslld
leave
test
sbb
cltd
ss
mov
inc
pop
cmp
cmpsb
jno
xchg
pop
cmpsb
ja
call
test
xor
mov
scas
out
mov
fs
xchg
fldt
inc
fidivrs
mov
sti
fnstsw
jl
mov
insl
sub
shll
loopne
les
inc
push
adc
cld
imul
cmp
imul
ja
sbb
add
ss
mov
daa
push
dec
push
xchg
mov
loop
pop
shrl
sbb
add
push
xchg
pop
inc
outsb
repnz
lods
or
lods
insb
outsl
jae
js
scas
aam
fiadds
outsb
adc
cmp
push
fdivs
out
sbb
xchg
loop
jae
xor
sti
ret
cmpsb
call
sbb
movsl
cmp
mov
sahf
jbe
sub
roll
jbe
sbb
adc
ss
out
mov
mov
cmp
pop
jae
mov
sub
mov
mov
pop
or
xor
rolb
rolb
lds
popa
push
mov
pushf
insb
inc
or
and
rcr
xor
cli
icebp
jl
or
mov
mov
pop
sarl
push
out
sarb
sub
mov
je
shrb
xlat
rcrl
push
add
lcall
cld
inc
stos
daa
push
push
adc
mov
je
xchg
aad
inc
pushf
rorb
mov
cmpsl
bound
bound
add
or
dec
pop
mov
fdivl
dec
sub
andb
cwtl
sbb
int
add
add
loope
mov
fnsave
mov
jne
push
pop
sbb
cmpsl
js
inc
call
jmp
scas
xchg
sar
loopne
jmp
xchg
or
loope
adc
fs
jno
pop
imul
pop
lock
rolb
xchg
xlat
mov
sbb
stos
mov
mov
movsl
push
cmpsl
enter
imul
push
fs
push
inc
cs
mov
jo
addr16
outsb
xchg
or
or
mull
popa
and
bound
ret
xor
stos
dec
ds
add
mov
movsl
inc
out
adc
jp
xchg
test
jp
cmc
xchg
mov
rcll
cli
xchg
add
movsl
dec
dec
inc
stc
push
dec
pushf
or
sub
bound
fs
pop
in
outsb
stc
and
mov
and
sbb
push
dec
mov
push
shl
xor
dec
mov
repnz
mov
add
and
sbb
out
test
es
sbb
movl
jae
das
push
pop
jmp
mov
cmp
lock
push
fisubs
nop
in
sub
or
std
xchg
cli
pop
fcoml
xor
test
mov
xchg
call
mov
cmp
bound
mov
movsl
shlb
lock
fbstp
sahf
stos
dec
mov
and
push
cmp
je
mov
push
out
mov
mov
test
aad
dec
xchg
pop
out
lahf
cltd
pusha
popl
sbb
popa
rcrb
sbb
push
cltd
push
int
call
adc
cmp
pop
xchg
fisttpll
push
andb
jl
push
add
inc
nop
mov
iret
inc
repnz
stc
cli
and
inc
test
loop
or
icebp
stos
cmp
mov
mov
aaa
mov
push
adc
lahf
push
adc
popa
adc
dec
hlt
dec
sbb
ret
sub
add
or
pop
or
outsb
in
push
lods
and
mov
and
inc
lcall
cwtl
movsb
pop
pop
inc
push
lret
push
cld
dec
pop
shrl
mov
mov
dec
sbb
cs
ss
dec
pusha
pop
push
mov
lahf
add
mov
pop
int
sbb
out
push
rolb
negb
dec
and
scas
add
icebp
stos
add
test
add
pop
divb
or
subb
or
inc
adc
fstl
into
negb
mov
lcall
mov
jge
xlat
jbe
stc
fadds
adc
pushf
jle
jg
add
dec
call
js
mov
push
dec
inc
cltd
insl
and
mov
divl
inc
es
pop
pop
lret
jne
test
ret
xchg
xor
mov
or
inc
sbb
pushl
lret
and
fnstenv
f2xm1
leave
xchg
push
aam
rcrl
mov
push
out
xlat
addr16
sbb
shll
cmp
adc
and
js
mov
arpl
fcompl
or
xlat
xchg
scas
ror
lods
arpl
mov
xchg
ja
push
mov
psubsb
aam
stos
push
xlat
sarb
mov
fcompl
lods
out
xor
sub
push
xchg
jnp
jae
outsb
inc
notl
pop
mov
fs
push
xchg
mov
iret
or
and
in
inc
and
jge
imul
out
mov
test
or
stos
es
nop
sbb
jmp
xor
xor
ret
stos
rorl
adc
mov
dec
imul
pop
ljmp
fidivrs
inc
leave
cmp
xchg
push
sbb
sub
iret
inc
and
xor
mov
icebp
inc
or
push
mov
not
pop
cmp
out
and
sbb
adc
lods
adc
dec
xorl
out
inc
sub
in
xor
push
mov
adc
pop
pop
jmp
leave
ret
movsb
mov
movsb
jnp
out
xchg
sahf
inc
insl
mov
bnd
popf
outsb
adc
movsl
out
push
lds
imul
mov
mov
addl
sub
adc
cltd
xchg
xchg
and
push
in
mov
jle
mov
lret
aam
mov
lahf
xor
sahf
cmp
xchg
iret
subb
mov
lods
xchg
inc
adc
fisttpll
mov
leave
mov
dec
xchg
sti
pop
mov
leave
pop
mov
repnz
and
pop
into
jnp
cmc
push
inc
js
aaa
xchg
in
outsl
push
aaa
push
xor
ret
push
inc
push
shll
ret
dec
push
mov
and
xchg
es
jnp
xchg
test
call
xchg
sarl
jmp
loopne
xor
insb
mull
xor
aaa
push
xor
mov
jl
scas
aam
or
in
mov
and
lahf
fs
jge
lahf
addr16
lcall
jge
fstpl
and
jmp
xchg
pop
in
or
jmp
icebp
insb
sub
jle
or
xchg
sbb
jnp
subb
pop
sub
testb
jno
inc
lock
and
jo
ds
imul
mov
into
repz
cltd
dec
sub
jl
shrb
leave
mov
cld
insb
lock
in
sub
shrl
jne
push
imul
cmp
stc
and
cltd
daa
pushf
mov
arpl
xchg
fcompl
data16
rcll
mov
clc
lcall
add
inc
mov
subb
xor
ret
mov
test
bound
inc
popa
push
cmpsl
jp
leave
repz
imul
fmuls
arpl
mov
rcr
jmp
jnp
test
enter
ret
mov
mov
call
dec
add
pop
test
and
push
pop
ss
add
cmpsl
push
jecxz
sub
cmpsb
daa
xchg
nop
xchg
jno
xchg
data16
mov
xchg
sub
shll
fiadds
adc
cmp
and
mov
popa
clc
cmpsl
cmpsb
inc
mov
pop
loop
inc
xchg
leave
inc
add
jecxz
into
bound
dec
enter
pop
sbb
stc
cmp
cmpsb
shll
pop
and
mov
and
ret
popa
in
or
adc
ficoms
fmulp
xor
iret
ds
sbb
cmpsb
adc
xchg
stc
je
movlps
cld
jbe
stos
mov
into
jmp
jg
enter
cmp
pushf
xchg
cmp
mov
cmp
fiadds
test
push
inc
adc
jb
insl
xchg
push
push
fidivl
mov
pop
add
cmp
ljmp
xchg
outsb
std
in
nop
arpl
adc
aas
push
push
shl
cmp
mov
ret
leave
add
clc
movsb
ret
jnp
add
push
push
lods
mov
aaa
mov
dec
and
dec
sysexit
mov
mov
add
cli
imul
jle
jne
xor
dec
add
xchg
mov
int
lods
mov
mov
dec
aas
js
add
and
clc
hlt
dec
dec
movsb
loopne
mov
push
add
and
aad
push
mov
mov
cmpsb
imul
jmp
or
sub
xlat
out
adc
or
cltd
pop
scas
fcoms
fdivrp
or
mov
dec
fldl
imul
bound
jp
in
dec
xchg
jle
pop
bound
les
push
scas
xor
movsl
movsb
daa
xor
clc
ffreep
xchg
fisttpl
in
mov
sbb
test
insb
mov
fistl
mov
xor
fwait
rorb
mov
jae
pusha
orb
movsl
mov
test
adcl
mov
xor
mov
test
xor
sarl
mov
inc
rcrl
mov
fistl
inc
fidivs
dec
aaa
pop
sti
call
cmpsb
and
add
stc
mov
fs
lcall
cmc
fdivs
mov
lret
aad
cmp
dec
mov
test
aas
call
sub
inc
inc
push
jp
xlat
xor
mov
mov
lock
or
cmp
xor
and
lret
xchg
mov
cmc
xchg
popa
movsb
mov
lcall
out
add
lret
arpl
sub
gs
test
push
test
mov
shlb
mov
or
aaa
mov
movsb
jge
iret
sub
jle
sbb
push
mov
nop
inc
sbb
xchg
sarb
inc
data16
and
cs
lods
xor
cmc
ja
or
ja
cmp
inc
clc
addb
or
sbb
mov
clc
mov
inc
jae
mov
and
or
insl
lea
movsl
lret
aaa
stos
cmc
lcall
jae
outsl
int3
mov
stos
cmp
shrb
xchg
mov
sub
inc
into
out
decb
fldcw
push
ret
cs
leave
adc
ret
xchg
pause
push
jmp
aam
cmpsb
adc
sub
in
fadds
cmp
lea
in
cmpsb
cmp
xor
mov
sbb
push
and
repnz
gs
out
xchg
bound
lods
sub
stos
dec
lods
xchg
out
sub
scas
mov
aad
stos
rclb
cmpsb
pop
sti
inc
cld
push
pop
sbb
outsl
mov
xor
inc
inc
inc
cmp
inc
idivw
dec
es
dec
dec
es
mov
lods
mov
and
jae
and
inc
test
pop
mov
arpl
xor
mov
xchg
jp
cs
test
insl
ljmp
cmp
pop
in
pop
or
sub
adc
inc
jmp
aam
call
xor
push
bound
and
rcl
scas
xchg
jbe
jns
cmc
adc
push
pop
inc
mov
adc
addr16
mov
cmc
frstor
dec
xor
jp
js
jns
mov
std
jge
into
sub
std
fwait
mov
dec
add
add
repnz
into
adc
stos
out
push
cmp
xor
stos
xor
dec
adc
or
outsl
dec
mov
push
out
lods
mov
push
jp
in
pop
rcrb
or
cmpsb
in
mov
mov
inc
jnp
sti
mov
arpl
in
push
mov
mov
and
aas
dec
cmp
enter
je
jmp
mov
repz
int
adc
xchg
fidivl
mov
xchg
bound
pop
ljmp
test
imul
repnz
mov
mov
cmpl
pop
jecxz
ss
fwait
push
test
sub
nop
in
sub
cs
add
ss
cwtl
out
sub
adc
test
leave
adc
push
sbb
shlb
jbe
aas
in
out
repz
sbb
lods
mov
out
jp
cmp
jp
fimull
call
out
aaa
dec
outsb
fsubrs
jns
push
imul
or
mov
or
sub
dec
out
push
or
sbb
pop
jmp
imul
mov
mov
fldl
sbb
bound
in
inc
loop
jmp
fwait
jb
scas
andb
xor
xor
xchg
leave
pop
pop
fs
xor
lahf
xor
sbb
dec
push
jle
shl
out
scas
push
data16
or
leave
jae
xchg
sub
jp
repnz
xor
cmpsl
test
faddl
inc
loope
pop
xchg
sub
stc
adc
fistpll
pushf
adc
cmp
cld
mov
push
in
stos
clc
fs
jb
shll
scas
sbb
adc
imul
inc
into
xchg
sbb
es
lahf
insb
mov
push
rorl
xlat
fsubs
xchg
pop
popa
das
stos
mov
add
lods
lahf
out
add
les
pop
pop
push
in
popf
es
inc
and
push
inc
jmp
mov
loope
xlat
xchg
in
dec
xchg
daa
in
rcrb
adc
lahf
mov
clc
mov
cmp
hlt
lahf
mov
push
js
lahf
insb
cwtl
xor
inc
out
shll
add
xchg
dec
pop
xchg
fcoms
out
push
lea
out
cmc
mull
xor
dec
mov
mov
iret
push
iret
add
xchg
sbb
sahf
int
cmp
repz
lea
sbb
imul
in
mov
stos
jno
xor
sub
popa
rclb
lods
sub
mov
ljmp
das
dec
adc
jo
leave
cmp
dec
ret
xchg
jae
cltd
pop
aas
inc
les
mov
out
out
orl
sub
loope
xchg
xchg
leave
lret
cmpsl
cli
lods
aam
mov
js
xchg
xor
cmpsb
and
mov
ficoml
xor
mov
add
dec
sbb
mov
out
gs
addb
popf
insl
jle
sub
daa
ret
cmpsl
and
sahf
bound
xor
gs
push
jae
jbe
cltd
call
xor
fisttpl
cmpsb
push
lds
xor
dec
ret
aas
fisubrs
js
jo
inc
xor
and
cltd
and
dec
xchg
sub
pop
sbb
loopne
push
imul
xor
repnz
and
icebp
nop
xchg
sti
and
rolb
loop
mov
sbb
xor
xchg
or
fbstp
ss
xchg
pop
or
push
xchg
xor
jbe
xchg
xor
xchg
test
repz
cmc
xor
jle
mov
mov
jnp
hlt
subb
and
inc
sbb
xchg
pop
pop
fistpl
sbb
clc
dec
cmp
pop
pop
cld
push
pop
bound
xchg
insb
into
jp
and
shll
sub
dec
adc
adc
jg
jg
and
addl
or
loop
adc
lock
roll
sti
roll
int3
sbb
popf
mov
inc
and
sbb
cmc
xlat
iret
int
cmc
mov
loope
leave
jg
add
fildll
into
push
jecxz
sub
int3
ja
dec
and
lret
add
iret
jbe
aad
lods
test
sbb
lods
test
push
jbe
cmp
outsb
arpl
test
adc
xchg
xor
mov
inc
stos
test
es
rcl
jb
xchg
lahf
push
daa
pop
test
bound
push
aas
inc
xchg
outsb
add
jno
adc
dec
fsubrl
jmp
mov
jmp
xchg
pop
xchg
stc
mov
jnp
fs
dec
sub
sbb
jb
mov
iret
adcl
or
outsl
xor
cltd
lock
in
aaa
cmp
or
pop
jns
fbstp
stc
cmp
cmp
jecxz
aad
xor
add
movsb
les
xor
mov
pop
shlb
cmp
jecxz
xor
and
and
mov
and
adc
push
push
fistps
xor
adc
cmp
sub
mov
push
pop
mov
loope
sti
addl
daa
xchg
mov
xchg
out
lods
or
popa
mov
lret
mov
std
lret
jo
pop
roll
push
mov
mov
dec
push
shl
xchg
in
lock
hlt
lea
mov
repz
and
testb
xor
sub
scas
jno
fidivl
push
adc
cmpl
idivb
cld
aam
push
test
or
xchg
jo
and
push
lock
ja
repz
push
aam
add
add
repnz
dec
xchg
xchg
dec
jno
ss
dec
lret
adc
fwait
hlt
data16
mov
test
lret
dec
shl
subl
out
mov
dec
and
push
in
dec
dec
push
lcall
imul
rcl
icebp
es
adc
enter
jnp
fidivs
shl
push
jbe
inc
cmpsb
ljmp
pop
mov
repz
jecxz
mov
outsb
push
insb
inc
lods
xor
les
jg
fwait
js
scas
push
add
enter
mov
fsubrl
lock
lahf
stos
inc
insl
mov
mov
shll
pushl
loop
xor
cmp
push
test
or
push
sbb
pop
outsl
cmc
or
int3
inc
cmp
add
jl
data16
hlt
sub
cld
dec
or
daa
cmp
ss
in
ret
mov
inc
mov
push
cmpsb
bound
mov
shll
into
inc
imul
jp
fldl2e
negb
sbb
mov
xchg
mov
jge
aam
pop
test
inc
sbb
movsb
inc
popf
push
aaa
adc
imul
sub
cmp
iret
and
loop
scas
pop
cmpl
enter
dec
out
xlat
inc
jnp
add
mov
fmulp
xchg
pop
xor
pop
and
fidivl
into
sarb
std
mov
adc
mov
sbb
push
add
push
adc
test
enter
movsl
mov
lock
pusha
sbb
push
push
ljmp
cmp
imul
mov
fs
sbb
imul
out
popf
inc
lds
test
dec
push
in
adc
arpl
push
pop
negl
mov
test
fiaddl
hlt
adc
pop
adc
and
cmp
sub
add
in
dec
xor
cmp
out
hlt
clc
push
push
fwait
ror
sbb
jne
push
pop
xchg
and
std
inc
add
scas
sub
mov
clc
mov
mov
sub
mov
pop
cmp
pop
pop
mov
insl
jb
dec
mov
repz
testb
test
adc
js
xchg
mov
jb
repz
leave
push
cmp
push
imul
call
mov
aad
lret
call
icebp
in
mov
cmp
in
push
sub
or
push
mov
jnp
mov
rcll
and
arpl
outsb
jnp
jo
incb
in
xchg
xchg
outsl
xor
xor
xchg
lock
sbb
movups
add
mov
stc
lret
xor
jo
jno
push
test
dec
in
mov
pop
xlat
jo
inc
leave
repnz
mov
pop
fidivl
sti
aas
mov
dec
mov
pop
mov
pop
dec
xchg
sbb
adc
in
out
lds
movsl
cmp
lcall
repz
xchg
aam
shrb
fwait
movsl
lret
mov
jns
fcoml
rclb
and
icebp
pop
inc
or
inc
cmp
or
aam
gs
jno
shr
dec
cmp
int
std
cmp
sbb
mov
repz
fs
leave
mov
lods
add
xchg
lahf
jge
jmp
xor
mov
pop
xlat
pop
pop
int
mov
cmc
mov
rol
push
lea
inc
loop
adc
pop
pop
and
call
fists
xor
call
push
sbbb
test
xor
sbb
mov
fisubrl
icebp
sbb
dec
shlb
lds
add
jns
fdivs
stc
out
mov
sub
push
mov
stos
dec
lahf
push
out
icebp
adc
and
jns
pop
xchg
push
adc
out
pop
cmp
dec
add
or
imulb
push
pop
jle
push
mov
clc
dec
adc
mov
jge
lcall
js
and
inc
jmp
adc
rcrl
cmp
rolb
hlt
xor
pop
faddp
repz
cmp
add
out
inc
inc
adc
or
mov
inc
add
and
outsl
push
inc
lods
scas
dec
mov
mov
insb
or
mov
popa
and
call
and
cmp
xchg
add
in
and
pop
and
dec
mov
cmp
fsubrl
jge
repz
pop
xchg
mov
jne
stos
hlt
or
cmp
push
faddl
dec
in
xchg
cwtl
in
jbe
shll
inc
dec
adc
push
cmc
das
dec
mov
insl
mov
jle
jbe
xchg
das
and
jge
mov
lods
addr16
pop
pop
push
stos
push
sub
mov
jecxz
pop
mov
jo
dec
cmp
push
rorl
rclb
sti
test
fmuls
leave
roll
dec
inc
cmpsl
lds
aad
test
gs
mov
mov
sti
roll
pop
push
into
add
sub
sub
pop
pop
and
jp
cmp
inc
sahf
lds
jb
mov
cmpsl
bound
lahf
stos
std
movsl
stc
mov
loopne
scas
xchg
xchg
xor
sbb
or
push
in
fldt
psubw
fistpll
push
scas
and
pop
xchg
cmp
insl
out
and
jae
in
jns
dec
jecxz
adc
adc
dec
sub
or
cmp
mov
repnz
sbbl
ss
xor
push
in
adc
jl
loope
mov
lahf
push
sti
mov
lea
mov
pop
rorl
inc
and
sti
mov
imul
lock
sahf
shrl
stos
sub
mov
lds
cmc
sbb
jne
scas
sarb
dec
mov
sbb
ds
scas
sbb
subb
pop
call
imul
pop
arpl
add
adc
mov
or
push
in
loope
pop
arpl
cli
fstl
movsl
popa
hlt
out
sub
mov
lret
jbe
scas
xchg
sahf
mov
mov
pop
or
or
cmp
or
adc
stos
cltd
aas
xchg
and
pop
ror
push
pop
je
ds
sub
mov
mov
mov
inc
clc
in
fcomps
mov
in
out
fcmovnu
imulb
sti
jmp
frstor
mov
test
jl
add
jge
data16
test
pop
ror
ficoms
adc
mov
jb
inc
fidivs
xchg
mov
xchg
push
xchg
insl
add
mov
cmp
pushf
xchg
xchg
insl
jl
xchg
das
int
jae
cs
xor
sbb
sbb
aam
das
xlat
jb
and
cmp
pop
andl
adc
aaa
test
jecxz
mov
adc
out
xor
xchg
iret
addl
jno
xor
movsb
jne
mov
jbe
sub
insl
xor
or
push
xorl
leave
adc
sbb
int
cmpsl
test
gs
push
pop
xchg
xor
lods
xchg
sub
dec
lcall
dec
pop
inc
cmp
cld
jb
push
mov
xlat
fsubs
or
and
xor
and
jle
ret
or
jno
addb
xor
dec
hlt
cmc
sahf
inc
mov
jmp
sub
xchg
data16
add
shlb
push
dec
fcomps
repz
mov
cmpsl
xor
fld
sti
xchg
push
jmp
mov
jnp
bound
ret
jb
std
xor
jge
punpckldq
test
loopne
push
arpl
andb
addps
int
push
xchg
add
das
outsb
data16
fnstsw
sub
mov
pop
ds
mov
cmc
mov
xor
push
fisttpl
ret
xor
cmp
fldenv
dec
mov
push
jg
push
gs
push
add
jle
inc
push
xor
add
movsl
and
in
and
aaa
test
pop
ds
icebp
jno
xor
andl
std
vpcmpgtd
push
adc
popa
test
fwait
xchg
stc
fmull
seto
shrl
insb
or
lcall
imul
stos
mov
and
mov
rol
ror
mov
sbbb
shrb
sub
dec
mov
bnd
aaa
stos
into
sarb
sahf
cmova
dec
std
jle
cmp
fdivr
add
jnp
pop
sbb
ljmp
pop
jp
insl
and
incl
lds
cmpsb
js
movsb
pop
mov
dec
in
idivb
push
ja
fcoms
mov
sub
movsl
dec
test
adc
adc
or
call
fmull
inc
out
fdivrs
fcoml
cmp
xor
xchg
fstpl
aam
movsb
xchg
out
or
dec
dec
stos
je
es
movsl
sahf
and
fbld
mov
lahf
sub
mov
xor
pushf
dec
arpl
mov
and
mov
ret
fsub
jne
xlat
jp
push
loope
sbb
lret
cmpsl
ss
pmulhw
rolb
orb
add
mov
push
mov
cli
jns
sbbl
in
or
xchg
jo
xor
mov
sbb
cmp
popf
int3
test
iret
xor
inc
xchg
push
add
out
and
shlb
xchg
cmp
inc
push
lahf
sti
sub
inc
insl
sbb
sahf
pop
push
push
xchg
incl
adc
dec
add
insb
jl
push
je
cmp
xor
jno
inc
sub
stos
inc
adc
fwait
imul
es
dec
and
cmp
add
xchg
xor
inc
mov
jb
hlt
pop
test
jl
inc
out
std
pop
sub
call
xchg
enter
inc
jl
rol
add
dec
cs
leave
pop
call
sarb
lods
mov
imul
or
mov
popl
jno
imul
fdiv
pusha
mov
sbb
push
test
fsub
jecxz
mov
xor
imul
lea
xlat
inc
mov
ret
loope
sub
mov
sbb
or
or
pushf
and
sub
push
pop
push
mov
lds
lret
inc
inc
add
cs
lret
or
loopne
pop
int
cmp
push
out
loopne
add
xor
bound
pop
in
rcl
push
sbb
mov
sbb
jl
pop
loopne
cltd
dec
or
lds
pop
sti
mov
inc
test
aam
jbe
in
mov
jno
and
and
mov
add
mov
pop
mov
insb
jmp
cmpsl
or
loope
mov
push
inc
pop
push
fwait
sarl
sti
in
pop
adc
insb
sub
loope
cmp
push
and
xor
push
mov
jmp
out
cld
pop
adc
cmpsb
insb
jne
loope
jg
or
or
push
arpl
into
push
lret
jbe
jae
test
mov
mov
in
mov
loope
out
aas
pop
cmp
lret
rorl
push
mov
into
int3
push
mov
std
fidivrl
hlt
sbb
clc
leave
jb
jle
data16
loop
dec
jne
lds
jnp,pn
mov
push
add
pop
xor
add
mov
xchg
sub
cltd
pop
loopne
dec
fnsetpm(287
into
sub
sbb
mov
jb
mov
sbb
pop
aas
push
jae
mov
mov
int
repnz
mov
gs
push
cmp
stc
vprotw
lret
outsb
pushf
movsl
push
mov
fcmovb
xor
icebp
pop
aaa
nop
out
inc
rclb
or
and
xor
or
lret
cmp
test
mov
mov
addr16
dec
mov
pop
lcall
loop
push
push
sub
or
push
push
dec
jle
int3
insl
decl
adcb
or
add
ljmp
mov
xlat
jmp
icebp
fsubr
iret
js
jno
popa
push
xchg
add
and
dec
js
push
rcll
push
ljmp
loopne
add
pop
mov
add
popf
pop
push
rcrl
lret
es
in
shlb
xor
push
popf
bound
and
popa
popa
cld
pop
ret
adc
das
jo
and
iret
into
aaa
lret
adc
jnp
rolb
mov
bound
outsb
ret
cmp
pop
dec
loope
cs
fildll
pop
cmp
popa
jns
jo
inc
stos
inc
push
adcb
push
fwait
enter
pop
out
xchg
dec
mov
in
mov
fdivrl
pusha
pusha
pusha
push
cmp
fidivrs
add
mov
sub
mov
movsl
aaa
roll
xor
cmpsl
in
push
jg
aaa
outsb
adc
mov
fildll
dec
movsb
add
sub
sarb
jns
mov
inc
fsubl
fsubs
xchg
add
out
lock
pop
aaa
pop
pop
movsl
dec
leave
mov
lock
imul
adc
mov
loop
and
cmpsl
iret
out
xchg
int
iret
mov
jne
sbbb
negb
xor
sub
cmp
imul
mov
sub
stc
xor
orb
movsl
pop
mov
jb
imul
into
inc
call
add
clc
jb
dec
sub
popa
loopne
xchg
insb
nop
in
enter
sahf
dec
xchg
and
jae
cmp
push
sub
enter
xchg
pop
outsb
out
mov
mov
ret
mov
and
xor
mov
fists
jb
dec
clc
std
jecxz
mov
shrb
leave
or
adc
popf
call
add
or
repz
and
xor
xor
push
test
inc
sub
std
enter
push
shr
inc
call
push
insl
popf
test
test
jge
sbbb
popa
fchs
fistl
testb
jmp
cmp
inc
loopne
add
dec
and
push
push
aas
fstpt
xchg
xor
sub
add
negl
push
fidivrs
jl
loope
sbb
lcall
dec
sbb
pop
xor
cld
and
iret
std
ret
mov
popf
sbb
in
scas
mov
cmp
je
neg
push
xchg
cwtl
stos
mov
push
imul
push
arpl
or
cmp
fwait
das
cmc
mov
mov
ret
rcrl
add
movsb
mov
mov
es
aad
push
aas
pop
xlat
and
in
into
fidivrs
sbb
mov
sub
mov
cmc
outsl
cltd
adc
add
inc
cmp
sbb
test
push
adc
jns
das
jb
adc
mov
inc
xor
loopne
test
pop
ss
testb
mov
aad
jno
xor
incb
xchg
mov
scas
or
jnp
adc
lcall
imul
pop
ret
mov
in
push
sbb
cmp
loopne
xchg
insl
les
lcall
push
vpscatterqd
rolb
and
jle
cltd
inc
push
stc
push
lea
inc
and
jns
mov
pop
test
sbb
xor
cmovo
dec
add
sub
jp
jp
or
loope
jns
mov
xor
test
test
lds
push
push
and
mov
pop
popf
sub
sbb
xchg
cltd
outsl
rolb
into
xchg
or
icebp
stc
mov
xchg
add
dec
mov
addl
sbb
hlt
push
stos
add
cmc
pop
fsubrl
xor
pop
mov
push
push
jl
jle
mov
mov
arpl
inc
cmpsb
imul
push
push
pop
mov
pop
dec
insb
js
add
dec
jbe
mov
lock
sub
jnp
out
push
push
dec
lret
or
fadds
cld
aam
mov
ficoms
add
repnz
fwait
pop
shlb
movsl
mov
xchg
loop
fbstp
aas
ret
pop
or
pop
push
aad
icebp
sarl
dec
and
bound
in
dec
jne
aaa
xor
add
ret
subl
push
mov
pushf
xor
into
inc
dec
dec
xchg
mov
pushf
cmp
xchg
xor
push
push
adc
frstor
jno
lea
add
insb
fmull
pop
sub
sbb
je
inc
push
sbb
sahf
in
ret
es
pop
imul
or
test
sbb
mov
add
cmp
fcompl
push
or
jge
pop
jnp
outsb
xor
mov
pop
mov
sbb
in
or
data16
fistpll
aad
out
fisttps
mov
pop
sbb
push
or
mov
xor
inc
pop
bound
push
lock
subb
or
mov
sub
mov
mov
and
lahf
in
sub
icebp
and
mov
jle
sbb
or
es
and
push
sub
jmp
pop
xorl
sub
dec
push
xchg
xor
dec
jo
jmp
cmp
inc
push
xor
fnstcw
mov
lret
insb
sub
fwait
add
cmp
fcomps
aas
int3
mov
inc
int
or
inc
pushf
scas
pop
out
mov
push
dec
and
pop
mov
inc
push
cltd
mov
jg
xchg
push
cmpsb
sbb
lds
cld
into
dec
test
in
in
push
sub
xor
cmp
loopne
xor
ljmp
jae
dec
xchg
sub
js
fbstp
jmp
xchg
mov
ret
xor
sbbl
lods
dec
cmc
inc
sbb
jne
jl
sbb
lods
lods
cltd
xor
movsb
std
mov
jb
popf
push
sub
mov
inc
imul
clc
mov
test
and
xchg
jmp
jp
mov
sbb
sahf
push
pop
shlb
pop
in
js
out
pop
and
rclb
mov
xchg
aad
jl
xor
fcomip
out
out
notb
mov
cmpb
outsl
mov
xor
aaa
mov
pop
sti
cmp
and
cli
cmp
je
loopne
dec
adc
pop
mov
addr16
mov
cmp
bnd
fldcw
or
sbb
jno
sub
sti
or
jbe
and
jp
mov
subl
push
sbb
scas
push
cmpsl
mov
out
insl
and
mov
pushf
and
jg
and
sahf
add
xchg
add
mov
sub
dec
ret
sbb
mov
add
cmp
aam
adc
mov
adc
push
dec
in
adc
sub
daa
ja
inc
inc
dec
popa
imul
adc
jno
jns
push
scas
lret
sbb
add
sub
mov
and
dec
jns
ss
lret
pop
stc
orl
cmp
jecxz
pop
aaa
mov
pop
jno
push
push
lock
pop
pop
call
lea
les
clc
mulb
ja
push
aad
or
mov
lahf
rol
dec
mov
or
xchg
in
mov
lret
mov
out
aam
inc
sbb
outsl
xchg
lock
mov
sub
xor
mov
dec
popa
into
subl
mov
aam
les
adc
cs
xor
jno
sub
cmpsl
js
outsl
xlat
push
fs
jae
and
and
out
adc
xorb
mov
cli
int
or
scas
pop
int
testl
or
xor
add
push
add
mov
pushf
sbb
daa
imul
cmp
push
mov
in
mull
lret
xchg
dec
jb,pn
adc
xchg
push
push
fdivrl
adc
mov
jl
imul
cwtl
add
lds
fidivrl
add
sbb
adc
push
out
pop
xor
or
fs
pop
data16
mov
ljmp
ja
mov
dec
xchg
jg
push
mov
adc
push
push
test
adc
cld
lods
and
xchg
cs
xor
in
push
cld
xor
xlat
inc
sbb
repnz
push
or
push
mov
popa
or
fcos
inc
dec
cmp
clc
hlt
add
or
jbe
loopnew
inc
add
mov
mov
jl
push
hlt
xor
jne
xchg
fnstcw
stc
and
mov
mov
pop
ret
push
xchg
faddl
mov
js
cmp
arpl
loopne
ja
or
or
lods
movsb
mov
outsl
xchg
pop
xchg
cmpsb
jecxz
je
movsb
pusha
repnz
into
pop
outsl
clc
xchg
movsb
mov
loope
lds
daa
es
andb
loope
call
lret
jb
dec
shlb
inc
rcrb
xor
mov
add
les
repz
mov
jae
mov
sbb
sahf
stc
or
sti
mov
jmp
jbe
inc
cmpsb
lock
in
push
pusha
lods
mov
push
adc
and
pop
addl
flds
dec
add
ds
call
repz
jg
repnz
movsb
xchg
imul
sbb
sub
pop
rolb
jmp
xchg
mov
rorw
cmc
notb
rorl
jmp
mov
xchg
pop
leave
scas
mov
sar
pop
fists
cmp
std
out
mov
stc
loopne
incl
aaa
lcall
leave
push
push
gs
or
les
bound
shll
aas
jp
cmpsb
andl
fdivs
mov
mov
push
or
xchg
add
xchg
sbb
pop
mov
adc
dec
in
fcomp
pop
pop
mov
leave
pop
idivl
mov
xchg
cli
xchg
call
mov
xchg
cmp
stos
out
pop
dec
xchg
fstl
jge
addr16
pusha
lds
aaa
lret
aam
add
rcr
fwait
mov
fwait
popa
scas
adc
daa
int3
ret
xor
add
iret
test
sub
gs
mov
sbb
add
inc
fucomi
mov
mov
mov
fxch
lock
movsb
cmp
gs
xor
adc
jno
enter
movsb
sbb
pop
pop
ss
and
out
xchg
dec
stc
daa
push
inc
mov
fldenv
leave
cmc
adc
mov
daa
sbb
push
out
leave
out
xorl
dec
mov
adc
jnp
lret
enter
mov
push
rolb
pop
dec
inc
or
push
mov
adc
es
arpl
sbb
add
and
dec
ljmp
inc
cmp
xchg
insl
mov
nop
lret
sarb
pop
xchg
aam
les
pop
dec
adcl
xchg
into
adc
mov
jecxz
mov
aad
jnp
push
and
das
ds
in
inc
stc
dec
sbb
lds
adc
dec
push
adcb
add
sarl
aam
mov
xor
cwtl
ds
icebp
stc
mov
inc
adc
push
inc
lock
fwait
jbe
insb
jle
sub
mov
sub
and
movups
xchg
idivb
push
jmp
arpl
dec
icebp
je
jno
xor
sub
lret
xchg
dec
data16
adc
ja
sti
aas
mov
fwait
xchg
cli
js
and
mov
out
das
sbb
jecxz
mov
mov
cmp
stos
mov
aam
cmp
cli
std
and
push
push
or
cmp
in
fdivrs
jo
loope
aas
negb
loopne
cld
stos
enter
sub
popf
mov
dec
mov
cmpl
frstor
std
pop
inc
pushf
pusha
sbbl
lds
and
xchg
je
pop
lods
test
add
test
mov
repnz
adc
inc
push
aaa
stc
leave
mov
jnp
add
jbe
and
mov
mov
mov
les
cmpsb
cmpb
xor
dec
jo
lods
push
mov
mov
jne
dec
out
shll
popa
dec
mov
fsts
fimull
dec
and
jbe
ds
test
jae
xlat
bound
daa
jge
mov
adc
stos
mov
mov
jl
int3
pop
jae
push
mov
ds
mov
in
jbe
jmp
mov
mov
mov
inc
imul
arpl
dec
in
cltd
fs
imul
or
and
mov
inc
gs
or
jne
clc
xlat
jae
pop
jge
mov
sub
in
sub
fisubrl
add
or
push
fimuls
cmp
out
mov
cmp
iret
xlat
dec
test
inc
in
aas
and
mov
jne
jp
mov
dec
dec
sahf
in
aam
push
out
pop
push
data16
fsubl
gs
or
pop
inc
mov
sti
dec
cmp
imul
insl
repz
mov
or
hlt
das
dec
pop
push
popa
repnz
sti
imul
rorl
mov
sahf
add
cmp
shll
fcoms
push
xor
inc
xchg
ficompl
arpl
aaa
dec
nop
xchg
xor
and
fdivs
mov
and
hlt
mov
dec
enter
outsb
loope
or
insb
pop
lahf
mov
push
aas
xchg
inc
xchg
and
arpl
mov
push
lret
jb
test
in
dec
push
into
fildll
mov
cltd
cmp
pop
stos
cmp
enter
lret
jo
js
into
sbb
es
imul
fidivrs
pop
insl
stos
insl
js
inc
add
adcb
pop
xor
pop
pop
in
lods
int3
adc
and
sbb
dec
and
add
andb
into
mov
cmc
hlt
or
ret
or
data16
out
rcl
or
out
jg
lds
roll
xor
div
push
add
adcl
mov
inc
add
sbb
push
dec
push
lock
sub
shll
stos
mov
insb
das
mov
pop
push
rcr
push
add
sub
sub
mov
loop
inc
mov
mov
lods
daa
fadds
mov
push
leave
inc
cmp
jmp
outsl
les
pop
test
and
mov
dec
xchg
cmp
cmpsb
push
jg
xchg
clc
jbe
sahf
cld
sbb
push
lods
icebp
imul
xchg
fidivs
mov
lcall
movsb
inc
mov
xor
insl
mov
or
mov
jns
dec
xchg
mov
lret
jp
jae
mov
stc
pop
scas
mov
dec
repz
rcrl
and
inc
sub
ficoms
popf
jp
cmpsb
xchg
cmc
inc
push
push
nop
pop
and
out
pop
gs
jo
jmp
es
shl
xchg
ja
jmp
xor
sbb
push
or
mov
sub
xchg
pop
gs
push
addr16
out
test
push
adc
das
out
jecxz
push
dec
lock
pop
jp
stos
mov
push
pop
mov
jo
add
aam
pop
lcall
clc
xor
jge
cld
leave
push
arpl
cmpsl
push
int3
push
mov
xchg
rcll
mov
imul
adc
xchg
mov
lods
mov
loopne
js
decl
add
and
iret
sbb
fisttpl
inc
test
push
or
es
adc
mov
outsb
sub
ds
int3
sbb
mov
fstpt
lock
lret
in
movsl
mov
das
or
inc
mov
imul
add
es
shll
adc
out
mov
pop
and
imul
pop
int
hlt
daa
cmp
fdivrs
les
sbb
cmpsb
mov
mov
ret
cwtl
enter
stos
cmpsl
or
lret
sub
and
hlt
cmpl
mov
in
cmp
mov
mov
mov
enterw
xor
repz
stos
mov
mov
adc
idivl
cmp
cmp
sbb
fistpl
imulb
jae
jp
push
xchg
add
nop
xchg
dec
mov
mov
dec
jmp
and
adc
mov
sbb
cmpsl
out
stos
iret
nop
call
imul
sub
and
icebp
pop
jno
add
cld
jmp
push
leave
ret
adc
lahf
jmp
imul
aaa
jle
arpl
sub
fstpt
lock
arpl
cmp
jmp
add
xchg
cli
js
insl
ficomps
js
adc
cmp
push
cld
add
push
mov
xlat
jmp
inc
into
jbe
aam
push
ud2
xchg
insb
and
aad
push
repz
mov
cltd
mov
mov
lods
js
loope
sub
lahf
dec
addr16
pop
inc
outsl
das
lods
xor
xorl
fnstcw
repnz
xor
js
pop
ret
xchg
cwtl
repz
jmp
mov
lcall
sub
and
outsl
push
mov
lds
mov
lods
push
sbb
fisttpl
jne
adc
mov
cmp
icebp
pushf
xchg
fs
adc
bswap
aad
or
inc
add
aas
jl
je
xor
rcrb
adcb
lds
pop
stos
inc
dec
mov
xor
fnstenv
push
push
cli
or
jne
call
inc
scas
imul
jge
inc
xchg
mov
dec
pop
mov
cwtl
push
mov
xchg
adc
shrb
sbb
sbb
sarl
add
sub
sub
lods
lds
loopne
ret
xor
or
loop
cmc
pop
lahf
das
ret
sub
and
fwait
loop
fstl
inc
xor
imul
inc
in
loope
loope
das
mov
mov
lahf
inc
cmp
jns
adc
loopne
pusha
push
mov
iret
shlb
rorb
imul
clc
js
xor
imul
sub
lds
xchg
nop
in
and
rcrl
loopne
add
mov
mov
lret
xchg
gs
xor
cmp
push
jle
inc
lahf
inc
fists
xchg
pop
jbe
bound
add
mov
fmull
mov
adc
jl
push
mov
mov
add
xchg
ljmp
cld
lds
push
lods
repnz
cli
ss
enterw
cmp
cld
clc
sub
cmp
pop
movsl
lods
movb
push
cmpsb
or
imul
cld
sbb
pop
mov
aas
call
adc
pop
inc
fmuls
dec
jb
sbb
xor
xchg
rcl
sbb
mov
xor
test
aam
sub
bound
mov
and
and
into
pop
xor
and
cmp
out
fdivrs
cmp
adc
cmp
sub
arpl
je
push
and
inc
push
roll
inc
fiaddl
add
jl
push
repz
xchg
pop
hlt
fildll
icebp
outsl
sub
mov
enter
mov
pop
fimuls
sahf
div
mov
inc
push
ret
enter
sbb
aad
mov
ret
stos
or
xlat
pop
in
int3
loope
mov
stos
pop
push
jl
ret
test
push
mov
pop
mov
push
popf
mov
out
mov
les
sbb
enter
push
cmpsb
jg
lock
lret
add
test
push
leave
aaa
iret
ljmp
xchg
adcl
or
adc
cmp
dec
inc
mov
adc
ret
cmp
and
jp
sbb
lods
mov
out
sub
adc
add
orb
pushf
aas
movsl
bound
xchg
test
push
sub
jmp
pushf
mov
xor
mov
adc
insl
insl
sub
mov
push
inc
gs
mov
popf
push
adc
in
push
repnz
test
add
rcrb
xchg
and
enter
mov
testb
dec
jl
push
pop
cmp
jno
out
addr16
cmc
repz
cmpsb
cld
xchg
in
ret
ror
popa
jno
xchg
mov
stos
pusha
sub
push
dec
adc
sbb
jbe
sahf
icebp
fdivp
fs
mov
jnp
hlt
insl
notb
mov
aaa
movsl
push
std
fnclex
jle
xor
out
pop
push
jb
sub
cmp
imul
sbb
pop
shlb
mov
and
dec
cmpsl
ljmp
fs
out
cli
pusha
sbb
pusha
arpl
lahf
mov
testb
shll
pop
mov
or
lds
lret
dec
cltd
add
mov
mov
xchg
or
bound
imul
inc
ret
ljmp
xor
mov
js
jnp
mov
add
cmp
out
xchg
lahf
mov
in
adc
mov
roll
in
dec
std
mov
je
dec
pusha
test
movsl
loope
addb
push
outsb
aam
pop
in
loop
jmp
in
call
jl
mov
push
adc
push
stc
lcall
fs
push
jne
push
shrl
sti
sub
push
push
fcoml
cmp
xor
rol
mov
inc
lahf
adc
ret
pop
arpl
xor
pop
and
sar
stc
add
inc
push
adcb
js
dec
sbb
sti
pop
xor
fwait
adc
push
lods
aam
pop
test
push
pop
std
fsts
jecxz
pop
sub
ret
and
mov
iret
inc
jg
cwtl
out
mov
in
pop
or
fistl
jp
insl
add
lcall
out
aaa
mov
dec
mov
xor
fistpll
test
repnz
shl
lcall
loope
jbe
jno
or
dec
enter
dec
sbb
fwait
jb
pop
enter
sub
js
jb
lahf
xchg
dec
pop
mov
es
les
ja
push
fistl
call
xchg
add
aas
inc
orl
clc
xchg
dec
xlat
inc
mov
push
nopl
add
cltd
cmp
mov
mov
test
aas
dec
or
xchg
mov
sbb
repz
cmpsl
sbb
mov
into
mov
dec
ljmp
xchg
mov
fdivs
add
adc
rorb
test
inc
xchg
or
xor
aas
aas
fwait
sub
in
aad
sub
mov
mov
inc
adc
int
cmp
mov
or
push
test
mov
inc
lret
cmpsb
fcmovne
dec
xchg
test
cmp
cld
addr16
xor
adc
lock
fwait
cmpsb
push
mov
mov
cmp
sbb
cwtl
add
mov
sti
test
or
inc
cmp
mov
out
and
push
xchg
cmc
out
hlt
or
ret
xchg
out
and
add
mov
std
test
loop
mov
movsb
xchg
ficoml
mov
stos
sbbb
mov
dec
mov
pop
mov
dec
aad
nop
xchg
out
sbb
xlat
xor
mov
clc
adc
sbb
mov
fdivp
aas
pop
sbb
test
pop
cld
les
jle
and
push
fcmovnbe
fdivp
scas
or
shr
lret
jl
enter
in
js
mov
cmp
lret
fnsave
mov
fcmove
in
xor
pop
daa
add
cmp
mov
sub
sub
mov
fcmovu
pop
fcos
mov
js
mov
and
sbb
fisubs
rclb
insl
xor
jne
sub
xlat
roll
dec
pop
imulb
sub
push
lret
gs
jle
xchg
xchg
clc
sbb
stos
inc
xor
cli
xlat
or
popf
dec
std
fcmove
fmul
jecxz
test
mov
out
fsts
jno
stos
pop
pop
stos
xchg
imul
dec
cld
add
nop
mov
sub
add
js
adc
xor
or
lea
int
int3
cmpsb
jle
js
mov
jae
aaa
mov
xchg
push
icebp
mov
lock
loopne
test
daa
roll
or
inc
and
ja,pn
aam
imul
adc
push
cs
gs
jmp
out
push
subb
cmpsb
cwtl
pop
mov
or
incb
xor
push
mov
mov
or
and
mov
push
sti
push
addl
push
push
xor
or
cwtl
push
test
cltd
stc
iret
inc
mov
sbb
cltd
insl
mov
xchg
das
sbb
shll
inc
fmuls
out
andl
out
outsb
push
inc
ficoml
fmuls
in
sub
pop
push
or
cmp
xchg
cltd
stos
push
jns
sbb
aam
sub
add
adcb
mov
aad
push
xchg
addps
inc
xchg
add
pusha
push
add
arpl
fistpll
shrl
dec
jecxz
mov
in
sbb
pusha
flds
roll
in
push
or
mov
frstor
js
mov
cltd
push
sar
mov
leave
imul
xor
xor
adc
mov
loope
xchg
test
sub
hlt
stc
scas
dec
push
in
test
adc
cltd
adc
movsl
in
gs
sbb
stc
lret
ljmp
and
dec
jl
mov
sti
sbb
out
jmp
or
inc
mov
mov
addb
xchg
lods
jl
adc
xor
ja
mov
push
dec
adcb
inc
addb
sbb
in
and
adc
int
mov
dec
out
jns
stos
into
ret
inc
push
or
xchg
jecxz
sub
xchg
aad
or
in
cmpsb
mov
and
lret
mov
mov
xchg
movl
fisttps
mov
or
das
push
fstpt
add
xchg
les
mov
fists
sbb
and
pop
fistps
jo
pop
sahf
movl
sbb
mov
mov
cmp
in
adc
std
mov
add
je
add
xchg
add
xor
inc
sti
and
inc
xchg
lods
inc
and
add
js
jmp
rcll
dec
mov
mov
ds
and
mov
in
pop
dec
loope
stos
mov
add
sbb
test
fdivs
outsl
in
mov
loop
mov
mov
pop
sub
adc
test
push
js
aam
push
mov
ret
je
insl
xchg
inc
clc
fwait
push
jb
add
std
adc
pushw
sbb
inc
ret
shr
jno
cmp
push
xor
pop
mov
arpl
repnz
inc
pop
test
mov
cli
xchg
mov
inc
add
sub
inc
ret
pop
jne
daa
loope
mov
xchg
inc
xchg
lret
cmpsb
aad
xchg
push
shlb
rcrl
notb
movsl
inc
ljmp
inc
sbb
adc
jns
ret
jg
sub
repz
les
inc
jb
stos
add
sbb
js
popf
sar
xchg
nop
nop
outsb
xchg
sbb
jnp
pop
loopne
out
xor
loopne
push
jno
or
jmp
iret
out
std
je
aam
mov
inc
movsb
jl
mov
aam
mov
adc
loopne
lds
jg
cmpb
mov
inc
cmpsl
jne
cmc
cli
mov
push
fwait
inc
push
inc
cs
add
push
pushf
dec
into
adc
ds
mov
add
subl
mov
push
add
dec
out
xchg
xor
outsl
and
test
outsb
cmc
sbb
mov
jne
dec
push
out
sbb
xchg
cmp
add
dec
repnz
and
mov
sub
lock
xchg
mov
stc
out
jge
cmc
aad
shlb
imul
inc
inc
mov
push
add
sti
arpl
aad
push
xor
gs
pushf
test
sub
dec
cmpsb
cmp
fs
and
inc
std
mov
cmp
xchg
ret
negb
ds
cmp
add
cwtl
cli
jb
adc
btc
cmpsb
in
jb
stc
pusha
in
pop
adc
dec
add
or
jnp
and
push
xor
int3
ret
in
ret
scas
jl
cmp
mov
ds
mov
xchg
push
pushf
jp
jle
loop
outsb
mov
inc
cmpsb
mov
loopne
pop
insb
or
enter
and
sbb
xchg
btsl
sub
andl
push
dec
jo
and
lds
imul
mov
out
jg
repnz
push
fisubs
jmp
jle
dec
and
xor
int3
mov
and
add
loope
ret
jno
jmp
call
imul
lds
add
inc
cs
scas
pushf
inc
push
je
daa
call
ja
jae
xchg
mov
cmp
mov
shlb
sbb
bt
and
mov
fs
sbb
add
xor
dec
scas
dec
add
bnd
fldl
pop
aad
cltd
divl
mov
inc
lods
clc
inc
rorb
dec
sub
stc
pop
mov
lock
xchg
jb
inc
dec
es
sbb
gs
sub
jne
sbb
jle
pop
aaa
test
fildll
rolb
xchg
fdivrs
pop
sbb
scas
in
pop
int
shrb
iret
roll
push
lods
pop
pop
mov
xlat
pop
jmp
and
dec
lcall
fs
imul
rcl
sarl
mov
dec
cmpb
push
and
shlb
pushf
popf
popf
mov
and
daa
popa
mov
mov
inc
std
andb
test
addl
mov
aas
in
jb
fildll
xor
fidivrl
lcall
shlb
lock
fistpll
fstl
pshufw
fisubrs
lss
mov
and
int3
adc
mov
adc
xchg
ret
pop
imul
mov
orb
mov
push
dec
jne
jo
es
jb
in
adc
mov
loopne
rol
lods
and
sbb
in
adc
fistpl
sbb
adc
ljmp
fisubl
aaa
dec
mov
shrl
pop
sti
or
ja
pop
dec
pop
not
push
testl
in
test
mov
jmp
xchg
pop
pop
and
xchg
out
pop
push
out
pop
nop
in
mov
dec
es
sub
sub
lea
sub
push
sbb
push
push
loop
dec
xchg
test
mov
push
mov
sbb
repnz
fwait
clc
movsb
inc
cmpsl
jge
fmull
rcrl
aaa
and
sbb
es
shll
jg
cmp
fbstp
ja
lods
das
and
hlt
mov
pop
in
pop
ret
stc
jge
cmpl
aad
pop
test
cmp
bound
sahf
or
cwtl
jge
mov
push
out
sbb
sub
dec
lds
sub
scas
out
mov
shrb
pop
scas
xchg
in
add
sahf
iret
xchg
dec
shl
jae
pop
es
fldenv
dec
mov
psubw
lret
mov
test
test
loope
inc
xchg
imul
cmp
scas
add
arpl
add
fimull
dec
mov
imul
jbe
mov
push
gs
mov
shll
adc
bound
sbb
xor
mov
lds
int
popf
fbstp
in
inc
add
xor
cmpsl
into
jmp
fistl
repz
js
jae
outsb
out
cmp
imul
push
push
icebp
mov
mov
js
divb
icebp
xor
add
cli
push
outsl
xchg
xchg
push
adc
shlb
and
xchg
add
out
daa
xor
pop
scas
xor
rclb
mov
push
sub
jge
xor
mov
push
mov
addr16
lea
and
setbe
in
pop
aam
cld
les
and
cltd
push
sti
shrb
push
xchg
add
dec
sub
sahf
push
cld
test
lret
push
movaps
ret
loopne
stos
call
sbb
andb
jmp
pop
pop
dec
stc
mov
lret
bound
or
add
rcrb
xor
sahf
add
enter
lcall
insl
sbb
push
pop
mov
popw
mov
inc
loopne
cltd
das
stos
jle
mov
jae
testb
in
xchg
and
and
or
int
ss
out
movsl
jge
ss
lock
arpl
push
test
ljmp
rolb
imul
mov
out
out
xor
pop
fs
sahf
mov
cmp
loopne
dec
mov
or
clc
inc
xchg
jge
ljmp
push
push
mov
adc
mov
adc
hlt
mov
out
insb
and
push
popa
das
push
addl
jo
fmuls
cmpsl
push
sbb
sti
jno
movsb
mov
and
lcall
loopne
in
cmc
adc
cmp
mov
jl
dec
adc
and
mov
mov
dec
push
jne
cli
daa
cltd
ret
dec
mov
and
data16
fisubl
std
sbb
sbb
bnd
sub
cmp
gs
addr16
jne
sub
shlb
mov
xor
push
pop
mov
add
mov
loope
sbb
pop
out
and
dec
jecxz
pop
xlat
push
push
cmpsb
int3
mov
popa
add
mov
or
cmp
cwtl
jg
lock
jmp
push
sub
xchg
in
and
push
movsl
iret
pop
in
mov
out
lret
cmp
pop
aad
insb
popf
cmpsl
ficoms
iret
icebp
fs
adc
mov
in
rdpmc
ret
leave
int3
jl
mov
push
or
cli
outsb
insb
jno
inc
sbb
int3
cmpl
popf
addr16
mov
movsl
repnz
or
xchg
es
aaa
adc
leave
sbb
adc
dec
fstl
addr16
cld
adc
lds
xor
mov
jecxz
sahf
rcrl
inc
shrb
jmp
add
into
outsl
das
outsb
cmp
ret
cmp
mov
not
dec
inc
jp
cmp
aaa
int3
dec
mov
filds
jmp
movsb
or
clc
out
rorl
dec
cltd
pop
sbb
leave
pop
repz
jo
outsl
adc
imul
jbe
xchg
sub
mov
in
add
rorb
inc
ficoms
imul
ret
jge
and
adc
mov
outsb
pop
xchg
xor
jecxz
or
jle
add
inc
sbb
sbb
jae
inc
subl
inc
cmp
mov
sarb
inc
stc
in
sbb
and
addr16
cmc
fistps
ret
lret
ljmp
out
fistps
add
nop
adc
fs
into
add
icebp
js
adc
lea
or
data16
orps
sbb
into
jnp
mov
aaa
inc
clc
push
mov
or
mov
mov
jg
test
jbe
jmp
cld
dec
mov
mov
je
sbb
cmp
ja
xchg
call
xchg
lret
shll
cltd
cmpsb
add
adc
in
fcoms
xor
fwait
rol
nop
xchg
adc
add
mov
add
or
das
cmc
push
inc
and
rorb
loopne
xchg
mov
sbb
and
xor
push
test
xchg
mov
dec
ficoms
mov
aad
inc
iret
loope
out
add
adc
pop
push
ret
filds
cmp
call
or
lods
mov
jb
movsl
incb
inc
ret
sahf
push
in
gs
cltd
inc
in
inc
dec
scas
push
stos
pop
jp
dec
add
pop
cmp
mov
out
cltd
adcb
cmc
lea
inc
xchg
pop
int3
mov
inc
sub
mov
sub
aam
mov
sti
ja
test
xchg
sbb
xor
jo
les
sbb
and
and
mov
adc
add
mov
addr16
or
inc
dec
daa
jo
inc
cmp
imul
lods
daa
or
insl
mov
call
mov
and
aaa
mov
ja
add
cmpsl
xchg
push
ret
xchg
mov
scas
cmpsb
fcmovu
mov
jle
xorb
adc
cmp
test
loope
ret
cmp
inc
int3
cwtl
pop
xchg
insl
movsl
adc
shrl
repnz
stos
or
jbe
repz
faddp
add
dec
test
pop
das
mov
mov
loope
jge
out
xchg
mov
out
inc
mov
lea
xlat
mov
ret
shll
pop
cli
aas
push
cmp
pop
xor
inc
push
leave
mov
or
cmp
mov
or
into
xor
jne
dec
loop
imul
cmc
lret
sbb
aas
mov
pushf
xor
add
sbb
test
insb
ror
mov
mov
int
push
shl
out
xor
jae
sbb
jnp
mov
mov
xchg
out
mov
push
xchg
inc
sarl
push
call
pop
mov
sbb
xchg
scas
mov
adc
iret
insl
inc
call
add
adc
les
dec
push
sbb
les
sti
clc
scas
xor
insb
out
fs
adc
jo
imull
ss
mov
jno
or
fistps
cmp
jmp
fnsave
nop
ds
mov
push
addb
or
inc
lods
jg
std
jbe
std
mov
mov
cmp
mov
data16
push
orb
and
adc
rorb
repnz
jns
das
dec
jp
xor
loope
insb
inc
lods
push
aad
call
jp
ja
cmp
mov
adc
push
sbb
clc
pop
jno
test
out
comiss
inc
cmp
and
xor
and
adc
or
push
ss
mov
out
cli
outsb
sub
int3
sbb
repnz
scas
in
in
xchg
add
xchg
and
xchg
adc
notb
sub
dec
fnstcw
in
push
int
movsl
mov
outsb
xchg
rolb
sbb
xchg
jnp
cmp
or
pop
loop
push
mov
repnz
sub
inc
push
inc
push
or
rcll
nop
das
je
jno
int
cmpsl
sahf
mov
movsb
xorb
lret
pop
and
cltd
dec
add
or
inc
inc
lds
adc
imul
xchg
pop
push
mov
dec
pop
es
and
ja
test
cmp
sahf
pop
xor
add
sub
ficompl
cltd
stc
pop
push
inc
fwait
das
incl
mov
adc
jp
sbb
xchg
in
mov
insl
test
stos
leave
pop
mov
lods
inc
and
scas
add
mov
sub
pop
scas
push
loope
addl
fsubr
in
jge
xor
mov
xchg
shll
sarl
mov
and
flds
dec
scas
test
mov
loopne
pusha
fistpl
iret
pop
outsl
inc
jns
or
jb
dec
sub
inc
rorb
fs
xor
out
cwtl
sbb
dec
in
jo
pop
and
pop
bnd
imul
pop
xchg
and
adc
pop
push
jb
daa
stos
push
insb
jo
jnp
ret
jmp
push
jl,pn
sub
lock
fadd
push
mov
jno
mov
stos
sahf
pop
inc
vpmacsdql
or
div
or
mov
jp
iret
lds
adc
or
cmp
cmp
pop
sbb
out
xchg
cmpsb
push
mov
pop
sub
je
pop
inc
sti
cmp
pop
fwait
mov
dec
xchg
mov
and
mov
fnstcw
repz
pop
mov
sub
sbb
aas
mov
ffreep
pop
inc
mov
mov
and
mul
mov
sub
aad
mov
pop
test
xchg
mov
add
xor
int
outsb
out
cmp
mov
icebp
mov
imul
insb
jmp
and
pop
xor
into
out
jae
mov
mov
pop
lret
or
pop
jne
movsb
stc
dec
push
das
push
pop
cmpsb
sub
mov
add
jnp
mov
andl
ror
nop
adc
push
jae
pusha
add
and
push
jbe
in
fcomps
xchg
test
jmp
movsl
and
push
sbb
shl
lds
add
push
decb
in
push
or
mov
clc
test
push
cltd
dec
lods
ljmp
sub
test
lock
mov
sbb
jo
xor
insb
pop
out
pushf
cmp
xor
pop
dec
int
fwait
sub
dec
ljmp
cmp
mov
cmpsb
mov
es
in
iret
cwtl
notb
sub
ficoml
cld
and
sbb
pop
jae
mov
pop
lea
sbb
pusha
aas
movsl
sbb
neg
daa
adc
xor
inc
js
insl
test
mov
andl
xchg
lret
mov
sbb
jne
cmp
rolb
cmp
popa
subb
jg
lea
and
xchg
push
cmp
and
cmp
xchg
ret
cmpsl
btr
and
inc
imul
xchg
mov
or
mov
mov
roll
or
adc
nop
aas
mov
out
pop
xlat
pushf
fdivr
popa
fstps
add
loope
push
lret
idivl
out
sbb
addr16
push
test
stos
jmp
ds
cmpsl
xchg
pop
out
adc
inc
pop
fnsave
push
mov
int3
ret
ljmp
insb
adc
fstps
mov
lahf
or
loopne
insb
xor
sbb
fwait
test
fwait
xchg
movsl
or
ret
mov
int
and
ret
aad
inc
ficomps
jle
inc
and
cli
aas
sahf
icebp
iret
push
cmp
sbb
dec
ret
sti
xchg
jle
pop
push
sar
pop
cmp
add
mov
xchg
lret
mov
mov
enter
push
push
jae
repnz
push
clc
dec
jp
mov
outsb
xor
fidivrl
cmp
jae
push
sbb
out
lahf
pop
sub
ss
add
loope
mov
in
int
xor
cmp
mov
cmpsl
add
orl
arpl
mov
adc
and
inc
xchg
movsb
mov
ja
sub
addr16
mov
or
dec
push
adc
cmp
loopne
push
lret
pop
cs
cmp
or
adc
xchg
sahf
imull
mov
pop
cmp
imul
ret
inc
mov
ja
mov
jmp
push
dec
fs
push
mov
dec
xchg
push
shr
adc
sbb
icebp
lahf
arpl
xchg
dec
fucom
test
push
dec
inc
add
push
pop
mov
popf
pop
jne
add
add
loope
dec
mov
pop
xchg
sbb
jae
les
xchg
xor
ja
add
and
and
stos
test
sbb
mov
xchg
push
gs
push
pop
lret
push
dec
popl
pop
jae
push
lock
xor
jbe
rcrb
and
lock
push
mov
inc
cld
testl
std
and
pop
jns
push
inc
icebp
push
xor
inc
leave
test
icebp
cli
and
sub
cld
cmp
cmpsl
dec
adc
cld
mov
insl
lods
es
mov
adc
or
mov
jmp
popf
hlt
outsb
mov
and
pusha
in
lock
jl
repnz
or
cmpsl
fwait
sub
in
movsl
cmp
mov
or
dec
sbb
pop
arpl
sub
lret
mov
popa
and
xchg
scas
test
jb
mov
xchg
jno
mov
sbb
jle
add
outsb
dec
or
dec
es
mov
jle
pusha
xchg
or
fcoms
sbb
add
or
into
in
mov
mov
sub
sub
inc
rclb
ds
cli
pop
pop
sbb
mov
flds
jns
add
scas
in
dec
clc
jo
fists
cld
sbbl
adc
into
outsb
push
scas
dec
mov
ss
fcoml
clc
push
test
mov
ljmp
add
xchg
jp
mov
stos
mov
push
clc
add
es
fucomp
cmp
or
mov
jmp
xor
cs
std
xchg
ret
ljmp
push
jbe
aaa
adc
push
data16
sbb
popa
nop
adc
push
push
mov
adc
addr16
jle
mov
mov
cmp
xor
xor
hlt
lret
dec
stos
mov
pushf
sub
xchg
scas
imul
sub
mov
data16
sub
rcrl
popa
test
jmp
push
stos
ja
imul
or
aad
fmul
ret
jno
mov
stos
mov
add
out
sbb
aam
in
rorb
sbb
inc
and
in
stos
clc
js
aas
ljmp
notl
inc
icebp
fisttps
lock
sbb
xchg
andb
mov
sub
cmpl
mov
push
xchg
jnp
mov
lds
lcall
test
inc
test
xchg
hlt
andl
lock
sub
adc
lahf
mov
leave
xor
sub
jnp
cmp
lock
mov
sbb
cli
xchg
mov
daa
aaa
mov
cmp
movsb
dec
jp
xor
push
sub
xchg
dec
adc
push
xchg
fstl
add
dec
fnstsw
jecxz
shr
stos
enter
aas
pop
lock
dec
mov
pop
leave
xchg
mov
sbb
in
jmp
jns
insl
xchg
xor
xor
fiadds
pop
addr16
adc
add
outsl
push
clc
je
xchg
cmp
xor
xor
pop
cmp
jno
fnsave
arpl
xor
mov
mov
cmpsl
cmpsl
pop
stc
mov
sub
mov
gs
insb
jnp
cmpsb
mov
jmp
jns
insl
sub
out
rcrb
clc
pop
ljmp
cmc
mov
mov
sbb
out
xchg
out
xchg
dec
dec
mov
mov
loop
les
std
jge
add
xchg
insb
pop
popf
sub
test
clc
cltd
inc
sbb
stos
jmp
lds
outsl
inc
movsl
popf
sti
ret
cmpsb
lahf
pop
out
es
sbb
and
arpl
ds
cld
jns
inc
lods
lret
sbb
and
jp
fildl
dec
aas
leave
dec
sbb
sbb
or
mov
jns
inc
and
out
jns
std
adc
outsl
push
pop
or
cmp
add
push
std
insl
mov
sbbb
enter
out
clc
pop
fsub
mov
adc
scas
sbb
test
xor
int
ja
mov
xchg
fs
push
and
pop
jp
into
popa
or
sub
inc
pop
out
xor
mov
ja
xor
dec
les
mov
push
fwait
xlat
cli
stc
sub
sub
mov
scas
xlat
jno
and
mov
adc
cmp
and
and
insl
out
and
rcl
lock
adc
cmpsl
roll
jl
sti
and
push
inc
gs
mov
sahf
add
sub
lcall
stos
dec
insl
lea
ffree
dec
jbe
cld
popf
ds
pop
inc
jmp
loope
jecxz
iret
into
inc
sbb
sti
mov
movsb
movsl
cmp
ret
shll
insl
jecxz
cmp
out
adc
iret
js
xor
mov
push
frstor
mov
lahf
adc
lods
rcr
divb
adc
add
js
adc
pop
sub
mov
hlt
xchg
push
mov
fiaddl
inc
mov
xor
lret
sbb
and
jp
fstpl
cmp
push
pop
mov
pop
sbb
and
mov
and
dec
inc
cltd
ss
dec
in
shl
jne
test
out
inc
mov
sub
jnp
fisubrs
dec
sub
xor
sbb
dec
xchg
mov
mov
mov
sbb
push
popa
and
nop
scas
and
or
push
inc
insl
mov
xor
jo
aad
imul
mov
dec
xchg
jg
adc
add
aaa
imul
lahf
ficomps
mov
mov
test
std
cmp
dec
or
pop
sub
inc
daa
dec
mov
rcrl
mov
push
sbb
inc
insb
sahf
and
sbb
out
jb
enter
leave
repz
test
sbb
popf
mov
dec
jge
rorb
clc
mov
or
loope
lds
inc
mov
fldt
push
add
mov
std
ret
inc
sti
inc
mov
mov
adc
or
add
push
outsl
icebp
mov
dec
ljmp
mov
clc
stos
fcomip
fwait
and
int3
mov
xchg
cld
fnsave
add
inc
xchg
int3
jmp
sbb
call
add
testl
mov
cmp
xchg
push
adc
movsl
jns
out
push
mov
and
or
hlt
arpl
cmpsl
or
lea
lret
jge
mov
in
push
and
dec
xchg
adc
jns
cmc
xchg
inc
push
add
pop
call
shr
xorl
pop
dec
fisubrl
hlt
insb
add
and
jno
mov
in
jae
add
icebp
or
in
mov
mov
imul
leave
jne
jo
cmp
enter
loop
gs
stc
and
push
into
sub
ss
xchg
cli
xchg
xor
inc
cmp
inc
or
xchg
insl
outsl
std
mov
jp
inc
jp
cmpsb
push
pop
fidivrl
ljmp
and
roll
adc
movsb
addr16
stos
sbb
dec
gs
mov
ret
js
jbe
jmp
pop
push
pop
inc
push
jp
inc
xrelease
cmp
out
imul
jnp
movsl
test
xor
lret
fcoms
lods
mov
xor
push
jle
jo
jbe
pop
cmp
in
cmp
sbb
cmp
daa
aad
adc
stos
and
outsb
fpatan
ret
adc
xor
mov
and
lret
scas
int3
mov
adc
notl
push
mov
add
or
push
addr16
fistl
and
mov
adc
mov
shll
insb
mov
mov
cmp
in
fadds
sti
cmp
nop
push
pop
push
hlt
out
pop
lods
std
stc
outsb
repz
xchg
mov
sub
mov
pop
sub
xchg
ss
and
adc
call
add
xchg
and
mov
mov
fadd
in
popf
mov
jb
cs
adc
out
xchg
inc
mov
fsubr
fsubrl
add
fldl
aas
dec
dec
xor
sub
or
popf
dec
push
cs
lea
lds
xchg
mov
jg
popa
xor
push
add
scas
fs
adc
mov
mov
fistps
mov
mov
cmpsb
jae
imul
insl
fidivrl
cmp
pop
fmul
cmp
rolb
sbb
leave
out
mov
bound
mov
xchg
xor
xor
hlt
out
or
ljmp
ret
mov
lods
std
mov
push
push
std
jno
dec
lods
adc
push
fwait
int
dec
fadd
inc
movsb
aaa
call
lret
mov
push
push
sbb
test
fisttps
icebp
pop
ret
pusha
cmp
jns
xchg
dec
xor
cli
gs
aaa
test
xchg
lcall
and
rclb
das
inc
pop
gs
and
lcall
addl
xor
lock
inc
sbb
stos
cmp
mov
sub
jp
je
les
mov
repnz
outsb
xchg
or
adc
xor
pop
push
push
mov
mov
mov
fldcw
stos
imul
js
mov
and
lcall
fimuls
sbb
inc
lcall
inc
and
daa
mov
lret
inc
inc
das
mov
popf
or
sbb
jno
cmp
mov
and
cmpsb
out
lahf
out
or
and
mov
mov
out
jno
in
mov
js
xchg
das
sub
cmpsb
xchg
cmp
xor
xchg
xlat
iret
stos
insl
push
push
ss
add
xchg
arpl
adcb
sarl
shl
call
mov
push
jbe
dec
and
ret
or
and
mov
dec
movsl
shrl
sarl
adc
and
pop
mov
jns
inc
and
jg
sub
xor
insl
leave
inc
mov
stos
lods
rcrb
inc
sub
cmc
stos
dec
jae
out
je,pt
jg
sub
leave
out
icebp
push
sub
jecxz
and
xchg
add
call
mov
int
dec
dec
in
sub
xchg
jp
sbb
sbb
add
adc
cmpsb
inc
jae
mov
mov
inc
mov
pop
cmp
xchg
clc
jbe
ret
loope
mov
cmp
outsb
imul
in
pop
outsl
push
hlt
dec
push
js
scas
dec
ret
cmpsb
pop
xchg
ret
imul
data16
negl
in
jns
dec
inc
insl
mov
scas
popf
lds
call
movsl
out
aam
data16
dec
mov
mov
into
sahf
shrl
rep
stos
lahf
test
xchg
sbb
pop
push
sub
mov
and
aaa
mov
loopne
add
sbbl
clc
sub
fs
jmp
add
xor
inc
mov
ljmp
push
cmpb
insl
rol
stc
or
aad
ud1
pop
jmp
out
cld
mov
mov
mov
jmp
inc
push
xchg
cmp
dec
sbb
or
inc
mov
inc
cld
iret
xchg
aam
lret
dec
xchg
xor
pop
lahf
fistl
mov
adc
insl
adc
enter
rep
adc
shll
stos
pop
lret
sarb
push
stos
jno
scas
cmpsl
rcrl
or
cltd
adc
jge
push
leave
xor
mulb
push
in
ja
rclb
cwtl
dec
subl
jbe
adc
out
mov
lods
das
cmpsb
cli
xchg
mov
jno
mov
ret
sub
out
into
bound
mov
push
dec
push
add
imul
mov
bnd
add
ret
sbbl
repz
fcom
xor
in
cmpsb
mov
inc
shr
scas
imul
jbe
cmc
push
and
enter
add
je
xor
dec
fmull
mov
outsl
adc
sbb
hlt
sbb
dec
fstpl
xchg
pop
sub
adc
inc
cmp
push
test
dec
add
or
pushf
cltd
pop
lret
xchg
fs
lock
lea
int3
fldcw
cmovno
js
jbe
lods
push
scas
js
push
cmc
arpl
movsb
or
inc
mov
aad
inc
nop
call
ljmp
jmp
lret
fs
aaa
mov
call
bound
int
jle
pop
mov
lea
add
mov
aam
push
inc
jne
lea
ficompl
movsb
pushf
aas
add
out
adc
sub
cltd
xchg
addr16
push
xor
mov
and
pop
mov
int
and
repnz
ret
popf
xchg
sub
jae
mov
leave
cmpsl
add
sbb
add
push
inc
jne
sahf
cmp
inc
movsb
and
test
in
std
or
ror
pop
xor
inc
stos
scas
jle
mov
mov
or
daa
add
jecxz
arpl
shrb
lret
js
es
in
mov
stos
ficompl
popa
mov
imul
jmp
fnstsw
mov
add
jnp
mov
into
sarb
adc
pop
inc
xor
push
cld
mov
add
imul
pop
jb
or
enter
shl
jmp
loop
inc
out
cmp
pop
imul
dec
cli
xchg
dec
lret
dec
es
sar
cs
in
loope
repnz
cmpsl
xchg
adc
xchg
jne
mov
in
je
and
fldcw
movsl
loop
fisubrs
fistpl
scas
jns
paddsw
mov
sbb
cmp
sbb
jae
roll
icebp
pop
jg
adc
in
mov
adc
jl
mull
push
or
cld
rclb
pushf
adc
mov
into
or
cmp
pop
xchg
inc
mov
loopne
cmp
mov
jae
popa
sti
faddp
bound
into
mov
jp
repnz
sub
xchg
ljmp
rorl
mov
mov
sbb
sbb
aad
icebp
dec
test
in
cmp
sahf
sub
aad
push
mov
push
xor
mov
mov
icebp
cld
lea
pop
add
mov
push
push
mov
xor
hlt
in
pop
sub
add
fdivl
mov
leave
jl
inc
movsb
add
test
jo
xor
inc
sub
loope
or
setb
inc
push
and
sub
push
ss
daa
adc
xor
cmpsb
imul
mov
inc
or
pusha
out
fnsave
mov
ds
repnz
hlt
mov
es
xchg
in
cmp
cmp
repnz
mov
jecxz
mov
dec
fs
mov
mov
and
cmp
std
sbb
dec
cmp
xchg
sti
cmp
cmpsb
sub
aam
cli
inc
jns
adc
jbe
adc
xchg
jg
and
out
out
or
xlat
test
fistpll
aam
mov
cmc
mov
mov
popf
loope
int3
popa
mov
xor
sbbb
test
popa
out
dec
jp
ret
mov
loop
lcall
xor
jp
push
sbb
add
or
pushf
push
push
jb
sub
fnstenv
out
rclb
in
cltd
mov
je
pop
xor
loope
aaa
dec
mov
mov
mov
add
scas
inc
les
sbb
mov
adc
jg
je
daa
mov
daa
mov
ror
mov
je
push
cltd
push
jecxz
addb
call
inc
xor
shlb
cmp
xchg
out
and
imul
loope
in
in
out
negl
test
test
mov
test
movl
in
sub
sbb
ret
xchg
or
idiv
std
cmp
fwait
lcall
insl
movsb
lcall
push
ret
shr
imul
dec
int3
cmp
outsl
inc
jmp
mov
mov
test
fs
sub
cmp
xchg
imul
sbb
push
mov
fidivl
dec
or
vorps
test
jmp
imull
lods
das
sub
pop
pushf
mov
pop
mov
shlb
sti
stos
mov
inc
pop
inc
rorl
jns
sarl
bnd
ljmp
je
add
cmp
bound
mov
push
mov
ss
or
loopne
adc
fcomps
add
cmp
pop
out
loope
neg
enter
fwait
and
orb
inc
jle
sbb
mov
in
stos
or
pushf
jmp
pop
fwait
das
les
pop
xchg
dec
cmpsb
mov
inc
dec
xchg
mov
pop
add
cld
sbb
fcomi
jle
repz
dec
test
xchg
add
mov
mov
adc
mov
hlt
jbe
or
shrl
addr16
stc
shrb
lods
push
dec
mov
jecxz
inc
loopne
xlat
clc
pop
jecxz
mov
xor
mov
out
andb
xchg
cmc
push
loop
and
pusha
xorb
jecxz
adc
loopne
jge
jecxz
cmp
jmp
push
jno
cmp
push
movsb
push
les
or
pop
jne
pushf
xchg
mov
push
mov
add
scas
dec
mov
int3
sbb
add
xor
jbe
push
cmp
add
addb
inc
lods
or
mov
loop
insl
test
push
sahf
adc
call
cli
stos
add
iret
pop
test
lcall
ja
enter
mov
jmp
add
or
mov
loop
test
push
je
jne
in
push
loopne
xor
sbb
dec
sahf
sub
int
or
mov
insl
jp
fistpl
std
add
sbb
in
mov
je
mov
adc
pop
mov
cli
idivb
push
ss
shr
add
lods
jge
lds
jp
roll
sub
xchg
mov
pop
imul
fadds
mov
loope
pop
xacquire
pop
adc
popf
sarb
dec
movsl
into
xchg
inc
out
bound
cld
lods
push
mov
ljmp
lock
ljmp
int3
loopne
inc
mov
jbe
daa
in
pop
fistpll
jns
inc
mov
in
adc
hlt
push
adc
sbb
dec
mov
jnp
add
int3
in
nop
call
imul
push
dec
daa
into
inc
pop
div
dec
arpl
push
les
xor
push
outsb
push
xchg
fdivr
jg
push
jb
sbb
lahf
or
je,pt
jle
xchg
jb
mov
out
or
add
add
pop
into
push
pop
or
mov
jle
fwait
in
jno
jecxz
or
xchg
ret
cmp
pop
movsl
ss
jecxz
cmp
dec
mov
jno
pusha
push
sub
dec
push
cmp
or
xor
jmp
or
ljmp
shrl
mov
add
pop
arpl
cld
xor
cmpsl
out
jae
mov
mov
inc
fstpt
or
in
leave
add
mov
popf
dec
imulb
push
lret
movsl
jmp
pop
mov
mov
pop
imul
sbbl
aam
jno
mov
and
out
xor
repz
adcl
cmp
bsr
push
cwtl
fcmove
cmp
fidivrs
sub
imul
push
stos
sub
sbb
mov
sub
sbb
mov
sub
sub
das
inc
push
xor
xchg
dec
cmpsl
pop
int
mov
sub
xor
outsl
ffree
ja
pusha
lahf
popa
adc
mov
andl
xor
es
ret
imul
push
xlat
mov
incb
pop
test
dec
push
in
movsb
sub
push
ret
dec
xor
xor
mov
push
sub
xchg
pop
and
out
mov
mov
and
pop
lods
stos
jmp
push
sahf
insl
lea
pop
imul
add
pop
js
int
pop
jbe
pop
lcall
xchg
js
dec
add
outsl
mov
xchg
cmp
dec
cld
mov
ljmp
push
and
xchg
insb
fstpt
pop
jl
call
cmpsb
and
shll
test
sbb
out
clc
shll
jp
imul
stos
xor
dec
inc
adc
sub
leave
int3
aad
push
icebp
mov
add
data16
fildll
int
rcr
mov
out
mov
inc
test
idivb
dec
mov
lea
movsl
icebp
jno
fsts
pop
mov
jmp
cmpsl
push
sbb
ljmp
fiadds
outsl
xor
movsb
test
movsb
xchg
push
test
and
clc
fcomip
cmp
pop
lea
in
enter
imull
testb
mov
dec
call
xor
mov
fstps
cmp
and
push
xchg
ficoml
push
dec
pop
ljmp
rcll
jo
add
cmp
fwait
ja
popa
out
jne
jo
sahf
xchg
fmuls
daa
stos
xor
inc
mov
lcall
test
roll
mov
ljmp
mov
xchg
jmp
cmp
pop
jno
ret
and
stos
mov
jb
sahf
stos
sbbl
sbb
imul
cmp
dec
mov
arpl
add
imul
iret
or
shl
push
icebp
aaa
es
sahf
out
push
lods
call
mov
cltd
mov
dec
call
xor
lds
stos
mov
xchg
sbb
arpl
xchg
pushf
data16
movsl
pushf
rclb
sti
xor
shr
mov
pusha
xor
fnstcw
jb
leave
mov
hlt
pusha
lcall
cli
adc
cmp
outsb
bound
leave
mov
movsl
mov
out
leave
and
call
inc
dec
mov
into
dec
cmp
jbe
loope
mov
stos
mov
adc
je
pop
or
adc
into
and
sarl
pop
mov
aad
and
mov
jno
sub
mov
rcrl
in
add
sahf
loope
cli
jno
ficoms
jp
cwtl
out
mov
xor
push
inc
stos
lock
jb
mov
nop
add
iret
rcrl
fsubrl
xchg
gs
cli
aad
mov
das
loope
push
cmp
mov
repz
sub
push
jns
shrb
imul
xchg
pop
movsb
xchg
mov
xor
add
or
outsb
orl
pop
bound
jns
fstpl
jnp
inc
sbb
lahf
cs
int3
add
xchg
sbb
inc
adc
sbb
sub
scas
jge
popf
imul
int
and
sub
test
xchg
jg
push
mov
fstpl
push
dec
xchg
dec
jmp
mov
push
mov
inc
or
andb
mov
xchg
dec
std
mov
fists
lahf
sub
adc
imul
clc
hlt
mov
pop
push
inc
cmpb
xor
lock
js
mov
adc
rclb
adc
xchg
aad
push
pop
mov
hlt
aam
mov
out
add
stos
xor
cmpb
test
add
out
mov
or
mov
jno
sub
stos
mov
rolb
dec
shlb
das
cmp
int3
pop
pminsw
test
mov
out
sbb
rol
ljmp
clc
ljmp
stos
test
in
sbb
inc
pop
dec
out
fildl
aas
mov
add
lahf
sub
mov
push
push
cmc
jp
inc
dec
mov
ret
xchg
aam
sbb
add
test
xor
rcrl
scas
movsl
adcl
jbe
insb
jno
or
xchg
cli
cli
out
in
cs
push
jp
pop
jno
jae
inc
adc
mov
leave
xchg
push
jns
mov
pusha
scas
dec
cmp
icebp
rclb
jb
jmp
popf
std
aaa
pop
out
xchg
or
add
sub
and
cmp
cmp
outsl
enter
mov
cmp
xor
lahf
dec
sbb
iret
xor
mov
jge
jmp
gs
lods
rcll
scas
idivb
pop
inc
stc
sub
sub
add
ficomps
xchg
mov
shlb
mov
lahf
and
sar
ret
int
sub
stc
daa
out
dec
arpl
adc
pop
lods
pop
cli
dec
mov
xchg
inc
and
gs
into
sub
mov
xor
pop
xchg
jnp
inc
mov
cmp
add
fldl
das
ss
cmpb
imul
xor
lock
int3
dec
and
cmc
or
insb
jle
jne
mov
shll
je
mov
sahf
add
dec
test
and
mov
inc
cmp
sub
dec
jne
sbb
cmpsl
ret
test
sahf
inc
sbb
and
sbb
sub
mov
outsl
mov
sub
push
pushl
pop
pop
call
test
cmp
test
jnp
xchg
cld
std
mov
push
add
and
pop
jecxz
mov
xchg
sahf
movntq
sbb
adc
lods
out
sbb
movsb
je
mov
push
loop
loopne
xor
scas
out
mov
addr16
sbb
adc
int3
ja
pop
icebp
xchg
sahf
and
add
lds
mov
inc
push
jo
dec
test
int
lea
and
fidivrs
scas
out
les
jbe
push
jge
xchg
popa
pushf
xchg
cwtl
or
lock
imul
shl
sbb
daa
cmp
cmpsl
cmp
call
dec
ljmp
std
inc
mov
mov
xchg
adc
jns
sti
push
lea
mov
and
orb
icebp
cmpsb
inc
sahf
inc
hlt
notl
mov
rcll
pushf
jmp
aas
dec
out
js
xor
cmp
loope
jle
test
lods
mov
shr
in
jge
leave
push
mov
jae
mov
jmp
mov
je
pusha
cltd
cmp
in
push
mov
insl
xchg
adc
in
mov
xlat
adc
push
aas
es
loopne
cmp
test
imul
inc
out
out
cwtl
iret
sbb
push
push
xchg
xchg
nop
inc
cmpl
data16
dec
bound
inc
pop
pop
or
enter
jb
add
pusha
jae
jp
loop
dec
pop
cmp
das
leave
ret
push
xor
ret
mov
xor
fisttpll
cmc
jl
loopne
mov
popa
fs
js
rep
add
cld
cmp
sub
mov
push
dec
add
fnstenv
jne
leave
jo
cmp
addl
test
jp,pt
aad
jo
les
loopne
inc
or
inc
and
xchg
inc
loope
ds
xchg
in
sub
nop
ss
or
addr16
mov
cmp
vmread
mov
push
orb
jecxz
jp
lods
sbbl
fwait
dec
xor
jns
xor
xor
inc
xor
fcoml
mov
iret
pop
pushf
pop
inc
js
sub
xchg
stos
scas
lock
loopne
and
icebp
clc
xor
test
mov
cmpsl
and
enter
push
push
outsl
mov
xchg
pop
pop
jg
adc
dec
es
in
clc
mov
and
in
movsl
mov
or
scas
dec
test
cwtl
sub
ja
add
adc
rolb
clc
mov
fcomi
mov
loope
mov
xchg
or
push
nop
xchg
push
fcmovbe
jg
lock
jp
out
jae
insl
push
inc
imul
stc
mov
xchg
dec
out
or
xor
jno
in
loop
xchg
ljmp
xchg
push
xorb
sbb
xlat
rcll
xchg
or
sub
mov
ss
movsl
sub
gs
pop
fwait
and
sub
and
mov
les
mov
xor
rcl
push
jo
jb
in
dec
pop
outsl
and
lea
mov
cmp
sbb
aaa
lret
bound
mov
add
bound
dec
fistpll
sahf
jae
sbbb
inc
xchg
std
push
pop
pop
dec
xchg
xor
mov
enter
fldt
sub
jno
jl
movsb
dec
inc
jmp
mov
call
insl
xor
inc
lcall
div
adc
ss
insb
mov
mov
lret
orl
push
adc
outsl
jge
sub
dec
sub
aad
test
movsb
or
dec
or
aam
aas
fcomp
sarl
inc
addr16
in
sbb
mov
movsb
repz
mov
mov
jb
sbb
pushl
cli
fidivrs
inc
stc
lcall
test
out
and
adc
enter
mov
jo
dec
out
and
or
and
mov
iret
xchg
and
sahf
loop
lcall
sarl
xchg
in
pusha
lret
ja
add
cmp
iret
test
roll
cmp
ret
jae
mov
movsb
mov
and
push
xchg
movsb
cmpsb
or
insb
bnd
mov
pop
popa
lret
xor
aas
lret
xchg
icebp
imul
cmpsl
div
mov
sbb
icebp
push
sahf
sbb
psubq
jle
mov
xor
cwtl
mov
sub
out
and
jle
xchg
adc
and
jmp
push
into
jecxz
pop
outsb
xor
sub
leave
inc
and
pusha
out
mov
shl
lods
cs
mov
sbb
test
pop
enter
aas
insl
sub
pop
mov
mov
xchg
ja
test
jne
das
daa
lds
jbe
test
pop
out
notb
mov
test
sti
add
jb
outsb
cmc
je
pushf
fs
push
inc
pop
adc
lock
test
inc
fprem1
xor
cltd
stos
aad
jmp
adc
movsl
arpl
cmpsb
cmp
test
out
jne
mov
stos
aas
add
push
or
cmp
xor
mov
push
rorl
push
xor
ret
test
push
pop
jbe
mov
and
jp
fstp
imul
rclb
mov
bound
add
into
enter
xlat
out
hlt
in
or
push
leave
sub
fistl
frstor
lret
jmp
mov
mov
jo
mov
push
fidivrl
adc
andl
sar
arpl
push
and
aaa
adc
xor
jmp
imul
fmull
arpl
pop
and
fwait
dec
mov
imul
jns
frstor
mov
or
adc
out
cmp
jecxz
fdivs
lret
roll
cwtl
iret
or
push
fnstsw
pop
ds
inc
rclb
xchg
cmpb
mov
cmp
gs
or
das
pop
bound
movb
cmovo
ds
mov
xor
iret
lea
or
sub
or
test
les
xchg
adc
sbb
outsl
mov
test
jg
jno
lahf
ja
dec
std
cmp
xor
pop
inc
fnstcw
rcl
sbb
mov
loopne
inc
arpl
ret
les
and
mov
ret
mov
pop
fnstenv
xchg
and
dec
es
adc
mov
mov
and
es
sub
lret
jle
mov
in
ss
insl
mov
bound
push
mov
aad
out
pushf
test
sub
das
mov
lea
loope
cmp
adc
dec
or
jbe
je,pn
mov
pushf
cmp
popl
push
fcmove
je
sbb
fcmovne
aaa
dec
ja
and
push
pushf
lahf
lds
test
imul
psubusb
sub
lret
xchg
cltd
sub
sub
scas
in
add
ficoms
cmpb
inc
stos
jp
aad
xorl
or
call
scas
adc
lods
scas
mov
shrl
sbb
out
cld
adc
sub
mov
jge
xor
mov
push
outsl
fiaddl
sub
cmp
lods
jg
iret
and
insb
ficompl
pop
shlb
mov
and
jb
or
cs
push
push
ret
cld
mov
or
mov
add
sbb
test
add
daa
mov
stos
pop
xchg
sbb
xchg
loopne
daa
mov
lret
fld
fsubrs
add
lcall
sbb
rorl
movsb
shlb
pop
mov
sub
lahf
mov
xchg
add
add
movb
aad
jl
test
jecxz
add
scas
dec
inc
mov
test
xchg
add
mov
mov
push
pop
ret
pop
int3
stos
pop
repnz
jle
pop
mov
add
jl
std
std
shrl
int
pop
or
outsl
test
scas
cwtl
imul
mov
loopne
and
mov
mov
ja
sbbb
loopne
sub
loope
adc
fnstsw
leave
pop
or
dec
js
stos
push
cld
cli
inc
std
inc
add
push
jne
in
fwait
test
sub
pop
add
mov
aad
lods
mov
insb
and
test
lods
jmp
imul
cmpsl
ret
ss
and
add
or
ss
scas
sub
xchg
pop
fsubrl
in
inc
loopne
push
outsb
inc
mov
cld
xchg
push
inc
xchg
mov
adc
push
pop
scas
enter
out
movsb
mov
pop
dec
fs
cmp
loopne
mov
pop
sub
std
add
pop
mov
sbb
stos
int3
mov
xchg
inc
scas
cld
add
jbe
loopne
lret
xor
mov
adc
cli
mov
xor
mov
sbb
pop
sub
lods
sub
outsb
lods
and
cmpsb
adc
pushf
iret
test
rclb
aaa
es
adc
pushf
aas
sub
inc
mov
fiadds
cmpsl
iret
ljmp
pop
popa
fdivl
test
inc
imul
lret
xor
jmp
jg
mov
xor
test
stos
cmp
lea
aas
imul
sub
jp
aas
mov
add
clc
cmp
add
lret
sub
loope
xchg
pop
sti
xchg
add
and
or
dec
out
sahf
js
and
push
xor
test
fstpl
test
in
decl
out
cmp
inc
dec
cs
pusha
or
adc
pop
test
push
and
adc
push
mov
fdivl
imul
mov
sbb
add
es
leave
sar
lret
push
setl
movsl
add
lahf
mov
mov
fsubr
sub
aas
stos
cli
mov
out
mov
aam
push
or
push
out
sub
fnstenv
dec
imul
shl
xchg
mov
jnp
lcall
repz
out
out
xor
inc
pop
sbbl
insb
lret
js
aaa
xchg
test
jo
push
add
popf
cmp
idivl
inc
incb
out
dec
mov
or
push
jne
cmpsl
int3
fxch
test
mov
ret
mov
jge
mov
shrl
pop
cli
test
push
or
xchg
addr16
test
push
inc
mov
push
fucomip
lds
std
mov
mov
cmp
mov
adc
in
movsb
js
gs
test
inc
cs
in
add
inc
mov
push
adc
sbb
cld
out
sbb
jbe
lea
jecxz
push
ret
mov
orb
xor
cli
stc
into
sbb
popa
imul
popf
std
ret
int
push
add
call
jns
clc
xor
xor
lock
fstps
rcl
mov
shl
addb
xlat
imul
jb
xchg
xor
xchg
cmpb
xlat
jl
mov
xchg
adc
ds
pop
push
int
pop
xchg
lret
les
out
push
ds
pop
inc
sub
pop
mov
ss
pop
out
rorb
push
inc
push
push
sbb
aam
cmp
add
mov
adc
rsm
nop
sbb
mov
mov
or
loope
nop
jmp
jg
sbb
jle
in
push
in
sarw
adc
loopne
testl
ljmp
jl
insb
dec
mov
repnz
cmp
lret
imul
sbb
add
mov
pop
sbb
mov
sub
push
cs
adc
loopne
iret
stos
int3
into
push
insl
push
adc
test
mov
cs
dec
call
insb
push
push
sub
mov
mov
loopne
jb
pop
cs
cli
mov
imul
xor
rsm
into
int3
loope
popf
and
cli
mov
add
cmp
stc
jle
mov
jae
cmc
jne
adcb
sti
sbb
mov
int
cmp
je
lahf
cmc
sub
add
lahf
rcll
pop
push
fistpll
into
ret
or
sahf
cmp
ret
sbb
iret
in
dec
pop
gs
ret
or
pop
stos
imul
loopne
cmp
inc
xchg
aas
movsb
mov
stos
gs
inc
add
mov
and
stc
incl
fisubs
les
cltd
addb
clc
dec
jle
fldt
mov
out
fidivl
cmp
das
popl
jmp
dec
add
jbe
xor
cld
add
loopne
xor
les
daa
es
xor
xchg
mov
mov
mov
sub
xchg
pop
adc
dec
cmp
fst
std
jg
push
cmp
xor
or
sbb
mov
sbbl
popa
mov
pop
inc
orl
mov
lea
rolb
push
sbb
sub
jp
jno
push
dec
sub
dec
rolb
xorb
outsb
pop
imul
in
shrb
neg
cmpsb
push
cmpsb
dec
mov
divb
or
sub
gs
sbb
or
sbb
mov
pop
aas
dec
ret
bound
sbb
mov
aas
les
xor
dec
xchg
sub
xlat
fistpll
sbb
and
add
ret
bound
repz
daa
jl
dec
idiv
xchg
or
jl
loopne
sysret
aaa
cmpsb
sub
push
sub
pop
push
mov
push
pop
dec
mov
lahf
inc
ds
pop
movsl
sbb
outsb
add
push
fistl
in
loopew
lods
xchg
loopne
dec
scas
push
adc
jbe
adc
push
fimull
fistps
pop
cmp
mov
dec
call
jmp
and
and
mov
mov
outsl
scas
sub
test
aas
inc
cltd
arpl
push
popa
cmp
ret
out
mov
outsl
adc
dec
movsb
xor
sbb
dec
stc
mov
lods
jge
xlat
int
sub
mov
dec
lret
adc
mov
jmp
popa
inc
shlb
xchg
cs
cmpsb
mov
fsub
jmp
mov
leave
out
mov
xor
mov
xor
cmp
add
xor
mov
cmp
sub
insb
inc
push
adc
add
rorb
ret
add
pop
or
mov
push
adc
mov
sbb
addr16
mov
mov
xchg
ffree
push
ss
mov
xlat
cmp
das
mov
pop
movb
fs
cmpsl
movsl
jecxz
arpl
repz
fwait
push
test
xchg
pushf
dec
and
add
fstpt
test
addr16
jg
fistps
mov
test
out
dec
lret
lret
fwait
mov
mov
xchg
push
setb
cmpsb
dec
stc
pop
mov
mov
fldenv
popa
fdivl
loope
pusha
clc
shr
sub
int
stos
adc
insl
and
sub
dec
clc
loopne
cmp
and
jg
mov
aad
push
push
jo
and
sahf
stos
cmp
dec
lret
xor
cs
js
inc
shl
inc
test
popf
lcall
ja
mov
mov
jge
aad
shrl
int3
jb
push
inc
or
pusha
fnstenv
add
xchg
add
sub
lock
mov
loope
outsb
das
lret
push
out
cli
add
lods
add
mov
sbb
sbb
sbb
ror
loope
inc
mov
dec
adc
ret
ret
xchg
sahf
std
cli
inc
and
jmp
in
dec
mov
jae
hlt
ret
add
cmc
add
add
call
stos
push
cmc
sbb
or
lret
ss
mov
jmp
and
push
add
enter
sub
cmp
mov
icebp
cmp
or
adc
leave
es
mov
inc
xchg
mov
sbb
int
and
push
int3
adc
lods
xchg
popa
ja
mov
inc
shlb
fldl
or
popa
jmp
lods
sti
sbb
push
mov
push
pop
and
daa
push
cld
repz
xor
xor
popa
cmp
and
xchg
das
out
rolb
arpl
pusha
lds
adc
pop
adc
mov
loopne
jns
and
sub
mov
dec
scas
sbb
pusha
sbb
pop
aaa
rcrl
add
cmp
mov
add
mov
sahf
ss
add
rcl
outsb
jecxz
shl
sahf
adc
or
mov
jmp
sub
test
pop
jne
dec
ret
ret
or
andb
dec
enter
pop
scas
or
mov
fwait
xor
sarb
pop
add
mov
jmp
in
inc
sub
push
stos
outsl
dec
push
aas
imul
insb
xchg
lock
xor
mov
popf
aad
mov
mov
cli
jae
aaa
dec
call
pop
imul
xchg
jmp
mov
push
xchg
or
int
iret
and
ss
jnp
scas
mov
clc
mov
sbb
dec
sarl
enter
xchg
arpl
dec
xor
and
sar
in
aam
imul
jbe
ja
dec
mov
and
xchg
je
jl
les
scas
jp
xchg
imul
push
mov
adc
cmp
mov
dec
push
enter
add
dec
lret
outsl
xchg
lea
add
xchg
xchg
or
jnp
push
mov
or
jg
push
idivl
testb
sbb
jb
in
adc
cmp
int3
fs
inc
outsl
ret
mov
ret
or
mov
and
add
call
repz
fcoms
pop
repz
xchg
std
pop
loopne
xlat
xor
inc
or
mov
xor
aas
inc
mov
loop
and
adc
push
insl
repnz
push
cmp
mov
jb
mov
popf
pop
daa
dec
ds
int
call
or
mov
push
pop
adc
push
mov
mov
loop
lahf
or
addr16
xor
push
adc
add
sub
aad
and
mov
fdivrs
lds
cli
lcall
bound
loope
ret
add
jg
lea
jge
cltd
pop
lcall
pop
arpl
pop
aad
mov
inc
inc
xchg
jbe
push
es
push
cmp
in
test
cmp
push
arpl
iret
pop
out
out
stos
sbb
sub
mov
inc
pop
push
inc
lock
jno
scas
addr16
sub
push
push
mov
jmp
xchg
mov
nop
stc
aas
xchg
cs
inc
or
cmp
negl
repnz
mov
test
xchg
xor
or
imulb
mov
pop
lods
pop
out
aas
pop
aad
popf
in
outsl
pop
sub
jl
shlb
sbb
rolb
fs
stos
out
pusha
mov
rcr
out
fnstcw
call
movsl
nop
lock
lods
nop
or
lds
dec
iret
ljmp
insl
aas
in
pop
dec
jae
rclb
leave
loopne
adc
dec
mov
sub
dec
repz
mov
and
arpl
test
fdivr
sub
adc
fstl
ds
inc
and
mull
mov
lea
ds
mov
or
cmp
cmpsb
add
sbb
mov
addb
xchg
cwtl
mov
adc
pop
dec
push
jns
push
lods
jo
mov
pop
cs
push
enter
imul
stos
scas
jbe
sti
fidivs
mov
or
mov
or
push
fdivrs
dec
jle
mov
push
mov
push
cwtl
andl
hlt
mov
adc
sahf
inc
imul
jo
cmp
push
fcomps
inc
in
add
add
bound
gs
dec
and
not
pop
jns
add
mov
stc
ss
dec
cltd
gs
sub
xchg
aad
xchg
and
in
xor
aas
aas
call
push
lods
int3
je
mov
rcrl
mov
jae
fstl
pop
adc
push
push
xchg
jp
out
into
mov
aam
dec
mov
push
sahf
and
push
in
xor
add
mov
insl
movsl
sahf
mov
and
incb
jno
or
mov
lock
pop
mov
aam
filds
in
xchg
and
in
gs
fistl
fs
mov
xor
inc
cmp
jg
push
rcrl
std
mov
imul
xor
jno
lret
std
inc
dec
mov
mov
adc
imul
iret
sbb
js
movsl
inc
sahf
cwtl
pop
jmp
mov
cmc
adc
mov
pop
jae
xchg
add
imul
cmpsb
cld
lods
shrb
jp
lcall
add
xor
xor
push
cmpsl
push
dec
push
sub
out
das
mov
aas
xlat
je
test
mov
xchg
and
dec
sub
out
sub
out
dec
cmovb
jmp
out
xchg
push
movsl
dec
dec
fcmove
lods
xor
pop
lea
mov
mov
mov
cmp
and
inc
mov
xor
push
push
mov
es
mov
out
adc
popf
roll
or
cmpsl
fimuls
fdivrl
aas
mov
jg
sahf
or
dec
dec
jmp
pop
mov
push
jo
lahf
stc
shrb
hlt
sar
adc
sbb
imul
rcll
push
dec
movsl
movsl
jo
loop
dec
into
mov
mov
push
mov
cmpsb
and
loopne
dec
das
movsb
xor
pop
cmp
sbb
xor
insb
mov
inc
sub
movsl
mov
int3
xor
push
mov
popf
stc
xchg
andl
jno
ret
cmpl
or
mov
push
int
mov
shrb
pop
pop
mov
flds
push
in
or
mov
sbbb
scas
idivl
sbb
ret
and
sub
dec
xchg
stc
pop
push
mov
and
ds
add
mov
call
add
insl
sub
mov
and
xchg
push
pop
inc
out
xchg
and
add
sahf
pop
adc
pop
dec
add
ret
cmpsl
adc
fisttpll
sub
sub
pop
lock
adc
add
push
add
mov
movsl
lds
push
bound
xchg
pushf
movsl
sub
daa
fcmovnu
int3
ficomps
cmpsl
or
ljmp
lret
lar
push
mov
or
pop
push
xor
lods
sbb
and
jge
add
jns
clc
roll
clc
jne
dec
mov
cmpsb
inc
ret
ret
imull
movsb
test
ja
cmp
mov
psubsw
adc
nop
icebp
mov
sub
push
cmp
xchg
sub
popa
mov
aaa
sub
popa
dec
or
cwtl
or
or
shlb
sar
and
dec
mov
inc
inc
add
pushf
lahf
jns
ja
into
xchg
adc
mov
mov
sbb
sub
mov
fdivrl
hlt
or
ds
pop
jmp
push
insb
mov
inc
pop
roll
sbb
pop
xchg
xor
push
and
cmpsb
sbb
pop
jmp
lds
ss
add
xor
add
dec
jle
outsl
rorl
push
addr16
scas
pop
xchg
gs
aam
adcb
and
pop
mov
fsts
cmp
bound
inc
push
mov
jp
jnp
test
subb
mov
inc
cmpsl
push
pop
sbb
and
adc
fistpll
inc
arpl
lret
bnd
int3
push
es
daa
pop
sbb
and
lods
pop
into
js
imul
sahf
test
xchg
add
and
inc
stos
fistpll
test
in
les
sub
shll
xor
mov
mov
cmc
dec
add
fcomi
outsb
lret
cmpsl
jmp
movsl
xchg
scas
cmp
or
cmp
das
es
loopne
shrb
pop
jno
dec
pop
lea
pop
inc
adc
jb
push
inc
lcall
pminub
orl
dec
pushf
pop
stc
sub
popa
mov
and
push
jno
pop
out
push
pop
mov
inc
mov
loope
mov
decb
jle
out
add
push
cmp
loopne
jle
adc
ljmp
pop
xorb
lds
mov
mov
fsubs
fldt
mov
das
arpl
gs
fldenv
add
and
xor
int
fisubl
icebp
loopne
mov
outsb
movsl
dec
out
aam
out
fsub
imul
test
sar
in
inc
inc
sbb
add
dec
cmp
mov
dec
pop
add
mov
cmp
enter
shr
inc
daa
push
aam
loopne
js
test
in
ret
popf
mov
xchg
subb
jne
dec
fldenv
sub
insb
lret
xchg
fs
mov
xor
data16
or
loop
dec
dec
int
xor
movsb
imul
fnstenv
iret
in
mov
ret
mov
and
pop
or
sub
mov
cmp
mov
sbb
push
in
xor
cmp
mov
or
icebp
lcall
aad
dec
ss
outsb
aas
fnstenv
pop
sbb
out
push
out
sti
push
mov
jno
test
mov
aas
lea
dec
decl
lret
mov
jg
shl
mov
xor
sbb
mov
cmp
inc
jbe
sbb
subb
xor
pop
test
xchg
out
cmc
add
imul
sbb
cs
cmc
nop
loopne
addr16
or
faddl
ja
sbb
cmc
ss
insb
popf
call
xor
call
inc
mov
mov
test
jnp
bound
out
and
pushf
push
pop
dec
jmp
cmpsl
cmp
xchg
hlt
lock
lods
push
push
fwait
adc
nop
sub
inc
sub
push
lds
mov
jbe
fisttps
lcall
inc
fcmovb
ja
nop
in
xchg
std
sub
jmp
sbb
out
xchg
inc
subb
inc
in
cli
add
mov
dec
icebp
and
jge
xor
rolb
scas
insb
and
pop
popa
scas
xchg
inc
adc
incb
data16
cld
int
fsubs
sub
xor
cmp
push
jle
sahf
arpl
sti
jb
sub
loop
cli
dec
mov
xor
mov
push
sbb
xchg
mov
leave
aad
popf
nop
or
sub
adc
test
adc
xlat
imul
in
and
sub
stos
and
xchg
jns
adc
push
ret
add
mov
xchg
sub
and
and
inc
xchg
jbe
roll
xchg
adc
jo
ficomps
xlat
xchg
inc
pop
lea
sbb
mulb
out
mov
aad
insb
das
jmp
xchg
lcall
cmp
add
add
bound
adc
and
sub
pop
push
xor
iret
fsubl
mov
pop
or
or
das
mov
shrb
aad
in
mov
hlt
xorb
xchg
or
sub
jg
jo
jae
sahf
fistpl
adc
ret
cmp
cmp
push
xchg
and
inc
lods
out
mov
clc
scas
addb
icebp
and
jg
hlt
xlat
sbb
jno
or
pop
es
push
out
lahf
mov
jno
nop
into
das
add
stos
stc
push
fucomi
nop
jbe
int
lret
sub
mov
in
pop
xchg
nop
add
xor
add
outsb
daa
dec
ret
ds
test
and
mov
or
jo
mov
lret
leave
es
bound
fcmovnu
adc
sub
lahf
adc
sbb
jns
jo
mov
loopne
enter
ja
aad
out
xchg
cmp
out
popf
dec
scas
or
popa
sahf
pop
pop
or
pusha
jae
mov
inc
mov
cld
and
ss
jmp
stc
push
imul
push
dec
ror
mov
nop
repz
jle
inc
sarb
add
xchg
popf
xchg
stc
rclb
inc
xchg
pop
jo
insl
idivb
fistl
rorl
out
xlat
push
pusha
pusha
pop
lods
jns
mov
insb
push
pushf
or
jns
mov
test
mov
loop
aam
and
inc
pop
mov
push
inc
mov
push
push
mov
pusha
lods
push
fnstenv
and
jmp
mov
fimuls
test
cmp
mov
or
rorl
push
mov
lret
mov
sub
jno
addr16
mov
xorb
xchg
int
cmp
pop
xor
adc
jmp
mov
call
pop
lods
aas
out
cld
mov
xlat
cmp
or
push
dec
cld
mul
fnstcw
push
dec
clc
ret
test
scas
lods
lds
data16
leave
aas
pop
jo
mov
out
mov
mov
lock
xlat
pmaddwd
mov
jno
lods
pop
xchg
jmp
xchg
xchg
scas
xchg
dec
mov
cmpb
push
pop
loopne
ret
adc
push
fsubr
cmp
into
xchg
js
hlt
sbb
pop
fcmove
movl
aam
and
or
dec
inc
push
xchg
ja
dec
inc
mov
insl
test
push
inc
sub
sbbb
mov
sub
cmp
mov
sti
sub
sbb
mov
mov
sbb
pop
mov
lahf
cltd
and
jbe
rclb
leave
cmp
xchg
jl
out
pusha
nop
subb
test
std
aas
je
jno
hlt
mov
repnz
repnz
push
mov
je
gs
loop
cwtd
pop
push
cmp
adc
or
cli
test
xchg
inc
movb
push
das
xor
push
shr
and
xchg
out
cmp
repz
push
mov
xlat
and
pop
inc
push
jg
fldcw
mov
cmpl
mov
aad
insb
push
sti
xor
fsts
out
push
mov
aas
mov
jge
outsl
xchg
jae
adc
jmp
sbbl
sub
xchg
sbb
inc
test
rolb
xor
js
dec
stc
push
cmp
dec
inc
popa
aaa
xor
lods
sbb
imul
or
leave
sti
adc
ficoml
sbb
dec
fcoml
fildll
mov
in
inc
lods
les
pop
cmc
mov
jmp
ljmp
cld
aaa
out
decb
lock
dec
fcmovne
inc
nop
lcall
jecxz
push
test
xchg
sahf
pop
and
cmpl
and
popa
or
lahf
notl
ljmp
mov
sbb
daa
and
cmp
jp
negl
mov
bound
and
pop
push
pusha
inc
gs
cmc
movsl
stc
sbb
add
pop
pop
subl
pop
jp
rclb
pushf
insb
or
outsl
lods
imul
xor
lcall
or
inc
loop
and
sahf
or
add
mov
xchg
ljmp
addb
push
jecxz
ljmp
cmp
addb
xchg
loop
or
and
sub
jp
icebp
cmc
mov
xor
and
test
mov
fsubs
stos
cltd
test
push
sbb
repz
inc
or
inc
int3
add
into
enter
xchg
andl
push
outsb
movsb
jbe
pop
mov
imul
and
and
dec
test
sti
jg
mov
lea
mov
imul
dec
cltd
xor
out
pop
jne
push
rorb
mov
movb
mov
shrb
pop
adcl
inc
stos
fildl
out
sahf
lea
cmp
in
inc
icebp
sub
and
add
dec
cwtl
inc
or
dec
add
out
and
iret
jns
cld
and
aam
sbb
sahf
cmp
inc
adc
fcomps
out
mov
and
push
fldenv
sarb
cmpsb
lods
or
push
fldenv
int
mov
pop
lock
std
sub
xor
aad
jb
xor
das
dec
push
pop
test
inc
adc
mov
fcomps
call
das
arpl
push
inc
call
inc
jne
testb
dec
loop
in
test
xchg
out
int3
stos
mov
cmpl
dec
cmpsb
cmp
inc
lods
pop
mov
sarb
sub
popf
shrb
dec
bswap
cmpsl
sti
sub
pop
push
int3
mov
mov
jmp
sub
jp
pop
and
daa
insl
sahf
dec
out
xchg
sti
xlat
into
dec
dec
dec
xor
or
std
xchg
ljmp
ret
rcr
lahf
inc
or
ror
mov
mov
fnstenv
mov
adc
sub
cld
adc
and
xchg
imul
fdivrs
and
mov
xchg
dec
adc
loope
mov
xchg
sub
and
jle
dec
test
pop
icebp
add
lods
outsl
fnsave
jb
pop
pop
dec
push
stos
xor
mov
pop
call
pop
jbe
pop
fs
lret
xorl
mov
lods
dec
jnp
sbb
push
dec
push
sti
push
fildl
testl
mov
xor
jae
ret
mov
sahf
sbb
mov
and
rcrl
xor
ret
outsb
stos
cmp
sub
push
call
mov
pop
cmp
mov
fsubs
imull
ljmp
mov
xchg
or
jge
mov
aam
call
add
jecxz
push
js
nop
sub
sbb
mov
push
jnp
inc
jle
shlb
shrb
test
push
add
cld
hlt
lahf
add
or
xor
dec
pop
mov
fisttps
arpl
push
imul
ret
add
jp
stos
xchg
icebp
shlb
call
std
test
test
jnp
sub
xor
jbe
mov
dec
lods
sub
and
clc
mov
cmp
mov
mov
ror
jbe
inc
lahf
xlat
cli
gs
lods
jge
rclb
xor
mov
mov
add
jg
and
fcompl
inc
add
mov
or
sarl
hlt
xchg
adcl
or
adc
dec
int3
jno
imul
and
bound
xchg
iret
adc
fsubl
pop
fidivs
stos
cmp
les
xor
imul
sbb
push
mov
push
mov
sbb
xchg
dec
xchg
int3
jae
jmp
sti
or
sbb
mov
mov
inc
xchg
jg
outsl
push
push
dec
imul
jb
and
js
push
negl
ljmp
mov
xor
repz
pop
out
jmp
fucomp
in
das
std
lret
mov
inc
popf
mov
jg
addb
xchg
push
popl
popl
or
shll
dec
push
mov
xchg
sbb
das
pop
push
movsl
divps
inc
mov
scas
and
fs
cmp
outsl
lods
test
adc
enter
cltd
pop
sub
imul
xorb
test
sub
jecxz
push
int
mov
adc
adc
inc
mov
in
bound
mov
js
lods
imul
jg
mov
lods
cld
js
xor
es
idivb
dec
and
or
ror
mov
add
das
xor
test
out
in
add
hlt
xor
xchg
dec
js
out
mov
sub
aad
jae
sub
sub
pop
gs
in
pop
loopne
or
iret
push
in
outsb
mov
pop
mov
xlat
popf
pop
sub
push
popl
mov
inc
ret
mov
pop
xchg
jp
pop
or
cmpl
cmp
or
dec
test
sti
shrl
or
or
mov
ss
mov
inc
mov
aaa
jecxz
adc
sub
sahf
in
adc
jae
push
test
and
ret
jno
add
cmc
pop
xor
sub
lret
push
cmp
inc
mov
xchg
mov
and
xchg
sub
fidivs
inc
je
inc
loop
sbb
cmpsl
fadd
in
imul
jle
pusha
pop
ret
fstl
jbe
jno
mov
add
lock
rol
add
gs
fs
cmpsl
je
pop
test
mov
outsl
test
dec
sbb
repz
dec
es
lret
push
sti
mov
mov
cmp
ds
in
or
sub
daa
xor
arpl
stos
xchg
and
and
mov
jmp
imul
dec
mov
negl
dec
pop
stc
xchg
xlat
push
cmp
add
push
add
adc
shlb
test
inc
or
mov
dec
xchg
lret
push
outsb
mov
nop
frndint
push
test
sub
es
iret
sub
push
imul
jnp
shlb
mov
push
cmpsl
dec
arpl
mov
sbb
mov
add
mov
pop
clc
push
or
jns
jle
iret
pop
inc
xor
lock
jno
dec
jnp
loopne
es
mov
leave
xor
add
pop
or
fsts
fst
out
cmp
out
pop
jbe
lahf
xor
push
cmp
dec
adc
sbb
outsb
fsubl
sbb
iret
push
arpl
adc
inc
push
mov
and
rclb
les
inc
outsl
fwait
sbb
sbbb
adc
fcoml
fs
ret
popl
sub
pop
mov
cmpsb
sub
ds
sahf
inc
inc
xor
loopne
push
cmp
or
and
rcll
or
cmp
orl
out
mov
out
movb
cmp
sub
inc
add
xchg
jle
insl
test
loop
jp
jle
lods
pop
adc
enter
or
insb
adc
dec
cmpsb
or
add
pop
imul
mov
push
out
out
testl
pop
shrb
lods
sar
xor
pop
enter
xchg
mov
repz
fidivl
jge
fcoms
cmp
lea
dec
xor
jnp
mov
lods
lahf
mov
push
mov
insl
ja
mull
xor
fwait
xchg
jne
int3
add
loope
pop
cmp
ficomps
and
les
lock
rclb
je
stc
or
jne
aaa
and
pop
rcrl
ficompl
mov
pop
mov
sti
inc
inc
xchg
pop
dec
push
jno
pop
shlb
pop
pop
jne
in
cmpsb
sbb
push
or
sbbb
mov
sub
push
mov
xchg
les
hlt
pop
sbb
shl
jl
cmp
xchg
cmp
mov
popf
std
mov
xchg
sbb
mov
cmc
mov
loop
test
cmc
jno,pt
xchg
inc
repnz
jo
cmp
testb
ja
mov
pusha
lock
mov
iret
mov
sub
arpl
mov
scas
push
outsb
iret
loop
cmpsb
out
mov
les
stc
scas
repz
push
xchg
cmp
stos
decl
decl
push
adc
cmp
pop
shll
mov
and
dec
fstl
loopne
xadd
js
lret
int3
mov
jbe
out
push
in
xchg
adc
in
cmp
data16
ret
pop
sub
sub
cltd
int
subl
fidivrs
lret
push
xor
cmc
or
mov
outsl
cmpb
pop
pop
dec
pop
cmp
fwait
pop
pop
pop
sarb
int
jbe
xor
pusha
addr16
xor
sub
je
insb
push
pop
shrl
pop
or
jo
adc
lret
fdivr
bound
adc
in
cmp
xlat
push
jae
jo
aaa
in
inc
ljmp
add
jnp
in
jb
and
xchg
push
xor
stos
cmc
jle
cs
jmp
jecxz
cwtl
and
ja
fsubl
mov
gs
in
xor
lods
cmpb
cltd
mov
xor
sub
pushf
imull
cltd
push
cmp
add
dec
pop
aaa
jecxz
adc
mov
cld
inc
std
lods
cmp
in
ja
adc
nop
jo
les
mov
pop
jl
inc
ror
rolb
repnz
mov
out
int
sub
std
test
dec
ret
je
hlt
scas
lret
shlb
mov
push
lahf
add
cli
jmp
hlt
push
mov
negb
jmp
cmpsb
adc
bound
inc
arpl
fsubrl
hlt
stc
sub
sub
xchg
mov
testl
jne
pusha
les
push
sub
xor
push
fistpll
xor
and
in
test
aas
mov
add
cmpl
and
jno
popf
inc
xchg
jb
ret
lret
sti
mov
xchg
aaa
dec
inc
dec
add
push
ds
popf
lods
push
inc
cmp
mov
iret
int
lds
push
enter
add
and
hlt
mov
popa
mov
cs
hlt
mov
cs
aam
mov
sbb
push
mov
cmp
nop
sti
mov
sub
push
loope
fsubrs
in
xchg
jmp
pop
into
scas
and
sub
pop
popa
aad
mov
fcomps
arpl
pop
sub
push
or
pop
jg
stos
jmp
inc
sbb
xor
arpl
repnz
inc
daa
loope
mov
sbb
out
xlat
and
cmp
sbbb
push
or
out
jno
shrb
je
rclb
stc
mov
push
in
mov
pop
mov
orb
pusha
jle
mov
xchg
hlt
dec
dec
pslld
dec
mov
cmc
mov
mov
jae
add
repnz
outsb
cmp
imul
mov
lods
adc
sbb
push
xchg
xlat
int
jo
add
cmp
stc
subl
mov
and
jecxz
shl
xchg
imul
sbb
icebp
in
mov
or
adc
xor
mov
mov
dec
cmp
jp
xorb
neg
subl
cli
std
and
mov
scas
cmp
xchg
repz
jge
int3
pop
pop
dec
cmpsl
stos
xchg
lds
mov
jo
and
les
loop
xlat
hlt
push
into
mov
addr16
mov
push
xchg
call
mov
lods
arpl
pop
popa
inc
and
add
cmc
inc
cli
pop
mov
pop
cmp
pushf
dec
mov
jmp
gs
xchg
rcll
xchg
dec
sahf
clc
fistpll
xor
scas
xchg
gs
mov
pop
jnp
js
ficoms
cmpsl
data16
fildl
or
sarb
mov
pop
addr16
test
rcll
ljmp
ja
pop
stos
test
aam
xorb
jg
pop
and
jecxz
mov
cmpsl
mov
les
fstpt
lea
sahf
lea
fldt
shlb
and
cltd
incl
jns
int3
or
adc
les
int3
or
mov
shlb
insl
or
push
sbb
mov
push
movsl
mov
jmp
push
dec
or
fcmovnbe
cmp
sbb
dec
cwtl
lret
adc
jmp
out
xchg
les
faddl
test
test
ljmp
xorl
std
cltd
lods
adc
les
xor
jo
or
inc
and
pop
and
sub
jp
jl
adc
xor
cmc
leave
push
xchg
shrb
out
out
leave
xchg
lds
jmp
movsl
add
aam
jne
dec
inc
mov
insl
ret
cmpsb
sahf
or
sbbl
cwtl
sarl
mov
arpl
enter
jno
js
mov
xor
push
sar
cmpsl
sbb
repnz
rolb
andl
push
imul
les
ret
enter
pushf
fwait
pop
add
inc
cmpsb
add
int3
xchg
iret
lahf
mov
inc
out
pushf
jbe,pt
inc
jns
cmp
add
xorb
adc
dec
or
sbb
clc
testb
adcl
mov
jbe
daa
xor
call
sahf
mov
dec
jge
bound
inc
aam
pop
mov
xor
jne
orb
not
dec
out
mov
arpl
inc
insb
icebp
jl
mov
xlat
adc
fmulp
mov
mov
into
adc
sahf
pop
mov
mov
movsl
mov
subb
mov
push
mov
mov
xchg
pop
sub
sub
scas
roll
adc
pop
sub
mull
mov
sub
int
lods
pop
pop
adc
sbb
adc
xlat
dec
mov
mov
cmp
mov
push
pop
int3
xchg
cmp
daa
adc
out
popf
pop
jmp
mov
outsb
insb
mov
dec
out
add
stc
or
pop
mov
push
mov
dec
sti
inc
sub
lret
imul
and
lock
mov
ds
add
insb
jge
mov
mov
loope
jg
mov
imul
test
fisttpl
and
lods
lods
sub
ds
icebp
xchg
mov
inc
lock
jge
mov
inc
or
push
dec
jg
movsb
iret
pop
rcl
xchg
and
push
xchg
in
mov
push
jl
js
and
aad
ret
pop
ja
pop
mov
mov
jl
mov
out
cmpsl
jmp
into
pop
cltd
lahf
jl
cmp
xorb
jl
enter
adc
inc
sarb
mov
add
add
fstl
fs
fldl
and
cld
in
ja
scas
pop
adcl
push
sbb
hlt
dec
inc
out
xchg
add
push
std
es
cltd
inc
loope
cmpsl
mov
shl
pop
dec
push
lcall
push
jmp
xor
sti
pop
incb
xor
push
cltd
mov
lcall
cltd
es
push
fidivs
std
sub
sti
dec
in
js
pop
dec
adc
mov
push
daa
rcl
rcll
mov
loope
push
shlb
and
mov
adc
jbe
or
push
test
cmpb
lahf
pop
fwait
inc
pushf
pop
test
mov
mov
fcoms
test
fsubs
and
mov
ss
mov
insb
adcb
mov
dec
scas
push
mov
pop
je
push
outsl
mov
out
ret
xchg
inc
mov
mov
mov
int
fdivr
clc
cmp
es
js
mov
enter
cmp
imul
sub
pop
fsubr
decb
jl
das
scas
out
out
push
sbb
arpl
mov
xchg
pusha
push
push
in
cwtl
dec
pop
jmp
or
ljmp
mov
dec
ja
add
addb
and
mov
jmp
pop
cltd
out
test
cmpsl
ja
lock
into
and
mov
clc
cmp
lahf
cmpsl
in
add
cmp
pop
add
sbb
mov
xlat
cmp
outsb
ja
ret
add
shll
fistpl
mov
fbld
xchg
in
imul
into
test
push
fsub
bound
cmp
push
fwait
push
sub
movsl
xor
add
push
inc
fcomps
in
mov
xor
sbb
cs
mov
fs
outsl
call
cmp
inc
dec
pusha
out
hlt
or
test
cmp
add
xchg
mov
jo
or
xchg
xchg
sti
ret
xchg
frstor
out
jmp
bound
scas
jp
das
mov
outsb
loop
sub
int3
fcoml
data16
repz
mov
cmp
cld
in
repz
les
pop
clc
push
out
push
insb
and
and
enter
xchg
out
push
fsubs
dec
adc
fsubrs
addl
mov
cmpsl
mov
in
lret
inc
xchg
xor
cmc
lods
not
xchg
and
pusha
mov
outsb
jo
add
or
cld
data16
out
mov
loope
mov
xchg
adc
inc
mov
push
fbstp
mov
jne
add
dec
sub
and
arpl
enter
fstps
xchg
in
jge
add
loope
fwait
popa
cwtl
adc
test
and
inc
adc
cmc
insb
lret
and
mov
movsl
push
sbb
scas
add
sub
jecxz
push
lcall
imul
loopne
cltd
xor
and
jb
nop
mov
jne
fstl
mov
jg
mov
ja
es
fdivrl
pop
xlat
lret
ljmp
arpl
push
jbe
and
xchg
mov
pop
stos
les
cmp
adc
xor
sbb
fwait
rcrb
lcall
stos
xor
loop
je
fmulp
mov
repnz
ja
cld
imul
push
loopne
stos
fcoms
aad
mov
pop
or
mov
lret
movsb
mov
mov
cltd
mov
daa
and
lret
add
insb
sahf
mov
inc
jne
push
mov
mov
mov
push
mov
outsb
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
icebp
or
call
add
add
add
mov
add
add
or
sub
add
mov
add
addb
add
add
add
enter
sub
or
and
add
add
add
lock
addb
add
add
add
or
add
dec
cmc
or
sbb
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sbb
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
add
add
xor
xor
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
insb
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
dec
pop
jne
bound
addr16
sub
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
mov
pop
call
push
dec
dec
outsl
jl
pop
mov
into
pop
jp
mov
add
call
cwtl
icebp
push
inc
sub
scas
dec
fsub
mov
popf
xor
add
sub
pop
jle
mov
mov
push
mov
pop
xor
call
out
aam
jb
sub
pop
xor
mov
add
jae
push
mov
pop
push
adc
popl
adc
sub
dec
dec
call
fimull
call
cmp
pop
cmp
jne
jmp
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
aaa
or
test
jge
cltd
in
cmp
mov
xor
lret
mov
xchg
adc
call
adc
lcall
xchg
imul
or
dec
pop
xor
test
inc
scas
insl
mov
test
test
mov
jo
fucomi
mov
cmpb
cld
mov
xchg
and
jge
lods
inc
mov
cmp
pop
lds
cmp
jo
in
aaa
or
xlat
adc
shrb
push
mov
popf
cmpsl
sarl
das
movsb
xchg
xchg
cmp
scas
cmp
mov
jne
mov
xorl
mov
enter
iret
mov
xchg
test
imull
ja
das
movsl
dec
cmpsb
inc
cmp
cli
mov
test
mov
xlat
imul
inc
mov
dec
cld
outsb
notb
xor
daa
xchg
nop
push
xlat
imul
mov
push
mov
sti
test
or
inc
std
scas
inc
sti
mov
jne
or
pop
rol
sbb
pop
test
sbb
aad
and
dec
popa
icebp
dec
sub
pop
xor
push
addr16
mov
inc
mov
and
fiadds
fcoms
cmp
pop
jb
cmpsb
pop
jae
nop
sti
addr16
daa
fwait
sbb
orb
xor
lahf
sti
scas
mov
mov
mov
sbb
mov
lods
adc
out
pop
scas
andl
add
jge
call
pop
cmpsl
fists
fidivl
or
add
sub
movsl
xchg
xlat
cmpsb
mov
or
jg
xlat
jg
inc
das
pop
add
movsb
into
cmpsb
mov
cmpsl
mov
icebp
pop
in
fcoml
rcrb
sbb
enter
in
pop
insb
inc
fmull
mov
cmpsl
sbb
xor
aam
out
fisttpll
test
add
sbb
mov
sub
outsb
xchg
test
add
mov
imull
mov
add
mov
test
das
pop
cmp
fsubl
jmp
xor
fmull
adc
pop
push
test
lds
jmp
inc
inc
in
fsubl
jns
push
iret
ret
ret
ret
iret
rcll
enter
xchg
in
push
mov
sbb
lock
iret
pop
gs
mov
xchg
cmp
adcb
push
adc
lock
pop
fcmove
push
xlat
mov
xchg
inc
sbb
lock
mov
lock
pop
jp
sbbb
lock
push
lock
notl
lret
pop
mov
mov
mov
sets
scas
mov
jge
push
pop
rcrb
xchg
stc
mov
std
jge
lock
sbb
fwait
jmp
mov
cld
xor
lock
dec
adc
push
lock
mov
data16
aas
lock
mov
sbb
lock
lahf
bsf
fisttps
aam
push
lock
push
push
push
mov
push
ret
pop
aad
push
lock
ret
ds
add
jle
jns
mov
sbb
lock
xchg
pop
aad
sbb
cmp
add
lock
sbb
lock
fcomp
aas
pop
cltd
fdiv
jns
dec
std
push
fadds
cmp
lock
sbb
out
jns
mov
lea
push
test
push
loop
in
jl
mov
shl
adc
dec
loope
mov
xchg
orb
cmp
fsub
cld
test
mov
push
lock
push
push
push
inc
filds
xchg
cmp
jns
mov
push
xchg
addr16
jns
mov
fstl
push
xor
aam
icebp
ds
pop
jnp
push
push
cmp
add
lock
fcoms
aas
add
jns
cmc
lock
hlt
jmp
nop
and
js
mov
sub
or
fcomip
jns
jns
lahf
jmp
push
push
lock
push
push
jb
std
push
cmpsl
pop
cmp
sbb
fsqrt
push
adc
lock
in
jle
mov
jle
sbb
adc
iret
icebp
sub
in
jle
cwtl
test
jle
sbb
cmp
lods
push
rcll
out
mov
mov
push
inc
sbb
sub
in
jle
pop
dec
mov
jle
xchg
push
push
lock
dec
in
push
inc
sbb
sub
in
jle
jae
xchg
jnp
cmpsl
mov
jnp
dec
in
push
inc
sbb
sub
in
jle
jae
xor
int
std
fsubl
data16
repz
ss
xchg
xchg
and
push
lock
lods
push
rcll
out
jae
mov
push
inc
sbb
jns
lret
lock
push
push
fisubrs
xor
loopne,pt
fsubl
data16
jo
stc
dec
out
cli
pop
fmul
push
and
popf
jp
ret
xchg
push
adc
fistl
dec
pop
mov
push
and
popf
pop
jl
xchg
les
inc
mov
les
lock
push
lock
fidivrl
jl
push
xchg
popw
push
lock
mov
jns
push
sbb
out
enter
cmp
lock
lahf
cmp
dec
jp,pn
mov
add
fcomip
jns
bound
push
push
aas
and
fcomip
jns
or
sub
fdiv
jns
pop
lock
aaa
imul
pop
daa
jns
jne
cmp
xchg
push
aam
push
lock
icebp
xchg
xchg
jle
dec
jbe
lock
andl
in
sub
stos
fidivl
sbb
jb
das
fsts
aaa
fbstp
or
test
aam
rcrb
aam
or
loop
cmp
test
in
arpl
pop
dec
xchg
jo
mov
push
pop
shlb
ja
jmp
lahf
pop
test
mov
jnp
pop
mov
in
push
dec
ljmp
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
sbb
inc
aad
push
fstps
push
lock
push
lock
push
jmp
push
push
lock
push
lock
push
lock
jns
push
lock
push
lock
push
lock
push
lock
outsb
pop
mov
ficomps
leave
jle
unpcklps
cmpsb
arpl
rcrb
es
push
stc
jg
cmp
arpl
pop
jns
adc
and
lea
das
sbb
ret
movsl
adc
sub
inc
or
adc
ror
adcb
mov
stc
push
xchg
mov
popa
xchg
inc
and
int3
mov
xchg
cmp
inc
je
sbb
popa
add
test
cmp
in
adc
jmp
jp
mov
in
mov
imul
or
addr16
mov
das
nop
inc
andl
adc
or
rorb
ret
in
test
cmp
lret
pop
sub
push
pop
jle
xor
xchg
cmp
cmp
lods
or
push
rorb
mov
int
xor
ljmp
mov
xchg
mov
js
faddp
outsb
mov
inc
cmc
jno
xor
imul
jp
mov
rorl
cmpsb
jle
movb
xchg
mov
hlt
inc
addr16
jg
mov
stos
mov
adc
loopne
dec
cmp
cmp
xchg
mov
push
aas
pop
aad
out
mov
jnp
mov
fistpl
xchg
fisttpl
pop
fucomp
push
std
out
jg
cmp
add
addl
bnd
scas
test
dec
jge
aaa
inc
mov
mov
mov
push
adc
inc
mov
xchg
and
lock
xchg
insl
lret
jb
mov
mov
in
and
mov
cmpsl
xor
cld
dec
fwait
mov
cmp
rcll
xor
jge
jns
xchg
cmpb
test
cmp
dec
int3
cltd
test
inc
addr16
sahf
pop
aam
mov
insl
sbb
out
mov
and
sbb
push
mov
sbb
nop
pop
sbb
mov
mov
inc
xlat
fst
test
les
or
repz
dec
inc
mov
adc
lods
cmp
jp
adc
outsl
lods
push
push
mov
cmp
iret
mov
rol
sbb
or
sbb
push
rorl
cwtl
adc
mov
ljmp
imul
cmp
sbb
lret
sub
mov
cmpsb
fs
mov
jle
outsl
stos
loop
rol
test
mov
and
adc
xor
shrl
pop
push
inc
subl
add
jle
dec
test
or
incl
add
add
or
add
adc
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
or
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
add
or
add
add
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
fisubl
cmp
xor
pusha
cmp
je
loope
inc
pop
xchg
xlat
sarl
push
xor
test
or
pop
fcomps
push
jmp
rcl
jbe
xchg
icebp
pop
imul
sub
cwtl
cmpsl
jnp
ljmp
add
pop
test
xor
ljmp
add
push
repnz
inc
dec
imul
inc
push
in
adc
enter
or
push
push
jno
adc
dec
and
les
call
dec
or
inc
mov
sti
fstps
jb
in
ficompl
jecxz
mov
lock
xorb
xchg
aas
push
scas
test
cs
mov
xchg
mov
lock
sub
inc
int
push
cmp
loop
xor
lret
and
jns
test
ret
pop
fadds
mov
int3
cwtl
enter
push
lcall
dec
lods
xor
out
xchg
adc
pop
add
inc
add
sbb
sub
xor
and
and
cmp
xor
sbb
fwait
pop
call
xchg
popa
push
mov
mov
sti
push
mov
xchg
inc
lahf
inc
pop
cmp
or
rcr
nop
mov
lahf
push
mov
or
and
mov
js
jecxz
mov
pushf
jnp
adc
push
sbb
ret
sbb
mov
fcmovu
mov
mov
aam
loopne
aaa
mov
std
repz
pop
adc
jp
xor
fsubs
inc
sub
xor
mov
mov
push
out
popf
xchg
sti
mov
dec
pop
xchg
ja
jge
or
repz
fsubrs
popa
stos
sub
jle
sbb
shlb
shl
xor
mov
jo
sbb
mov
loopne
test
shlb
cmc
pop
adc
adc
scas
out
bound
mov
add
int
mov
pushl
xchg
and
mov
adc
stc
test
in
lods
stc
stos
mov
out
outsb
cli
xor
lds
push
stos
xchg
in
xlat
or
outsb
icebp
int3
cmpsb
mov
cmp
loop
lret
in
pop
inc
icebp
icebp
xchg
aaa
insb
cmpl
outsb
xor
mov
xor
out
cmp
dec
mov
and
cmp
gs
pop
jo
pop
jbe
pop
xchg
jl
sbb
fcomi
mov
imul
xchg
dec
add
mov
adc
adc
loop
lods
outsb
inc
testb
mov
stos
icebp
adc
int3
rolb
jp
nop
sti
or
call
sub
jb
jne
jns
mov
ret
out
xchg
sbb
lock
or
jmp
fdivl
adc
outsb
and
add
rolb
add
cmovbe
enter
xor
arpl
jbe
inc
stos
cs
jl
or
aaa
mov
cli
roll
xchg
adc
add
adc
xchg
and
xchg
mov
jle
lods
and
rcll
mov
push
stos
arpl
mov
fwait
mov
pop
sbb
in
xchg
xchg
loop
ds
repnz
lods
pop
xor
sti
hlt
sub
adc
xchg
jns
sub
cmp
pop
rcll
jmp
sbbl
sbbb
lods
inc
xchg
test
daa
xchg
sbb
std
popa
mov
pop
icebp
sub
cmpb
sbb
imul
mov
lahf
push
cs
pusha
pop
jnp
jge
adc
cli
or
enter
dec
jl
lock
cmpsl
scas
cltd
ljmp
pop
inc
or
pop
sar
xor
and
add
pop
stos
mov
int
fcomps
test
mov
mov
outsl
xchg
call
pushl
vsubss
movsb
cmpsl
stc
cli
pop
mov
imul
pop
mov
mov
adc
orb
or
shr
je
push
push
call
dec
lahf
or
jne
repz
mov
pop
in
icebp
in
clc
mov
popa
adc
adc
and
in
pop
mov
in
loop
in
inc
bound
push
push
adc
push
dec
or
enter
push
in
adc
dec
mov
mov
movsb
mov
pop
das
push
call
into
xchg
pop
es
or
out
mov
xchg
jbe
shl
push
inc
nop
xchg
add
inc
and
mov
mov
mov
outsb
mov
adc
loopne
sbb
jno
xchg
movsl
mov
dec
jl
adc
stos
inc
add
xchg
addr16
jae
add
filds
mov
pop
cmp
dec
mov
in
mov
ss
mov
ds
lret
dec
lret
adc
rcrb
addl
adc
jecxz
adc
outsl
jl
ds
mov
push
push
imul
push
and
pop
xlat
ljmp
ss
add
pop
cmpb
je
jle
fwait
sbb
daa
dec
ljmp
push
idivb
fstpl
mov
mov
mov
xor
cld
xchg
xor
push
outsl
cs
inc
loope
lds
jge
movsb
add
lret
fstps
repz
xchg
add
xor
mov
unpckhps
push
sbb
push
and
xor
pushf
lea
iret
inc
jg
outsl
pop
lods
adc
or
mov
movsb
rcr
arpl
mov
xchg
arpl
ret
outsl
repnz
add
std
jnp
ds
rorl
mov
or
inc
test
sbb
inc
lods
pop
pop
in
pusha
pop
je
mov
iret
sbb
mov
shrb
cld
jnp
xchg
ss
arpl
insl
decl
sub
ss
das
add
jb
push
inc
sti
test
imul
xchg
jp
in
in
mov
ss
adc
fmul
cld
cmp
jp
sar
push
int
popf
scas
push
sub
mov
outsl
mulb
out
inc
push
mov
jns
push
inc
in
iret
es
js
mov
stc
ds
mov
add
push
shr
xor
mov
inc
daa
ret
push
xor
and
fnstsw
lock
mov
jmp
mov
popf
ds
imul
mov
hlt
jae
or
data16
and
sbb
sub
loope
aaa
cwtl
xchg
jmp
out
add
dec
or
fcomp
add
push
es
inc
xor
cli
lret
aas
ficompl
outsb
mov
add
mov
sub
stos
inc
stos
xchg
add
out
xchg
pop
and
movl
jns
mov
mov
stos
aaa
jmp
out
or
movsl
shrl
push
movsb
mov
ds
ja
add
lods
clc
mov
add
adc
cmpsl
xor
push
xchg
mov
cmp
test
adc
es
jmp
cld
push
repz
xor
ret
push
pop
insb
idivl
push
cmpb
cli
int
dec
dec
push
xchg
ljmp
pop
in
ljmp
or
ret
mov
xchg
dec
std
mov
nop
cmc
stc
fmul
dec
cmp
jno
out
jp
cmc
mov
or
mov
xchg
push
das
in
rcl
es
sub
repz
cwtl
mov
push
cld
dec
push
pop
je
dec
adc
inc
xchg
jne
jmp
les
mov
push
jb
push
shll
stos
mov
adc
mov
push
leave
cmp
mov
inc
jb
js
jo
test
mov
outsl
jge
mov
insl
sbb
stos
mov
xor
rorl
mov
in
xchg
mov
xchg
push
push
notb
outsl
repnz
dec
test
mov
and
imul
adc
in
or
bound
pop
sub
push
int3
dec
cmpsl
fiadds
fistpll
or
aad
jb
pop
cltd
punpckhwd
stos
inc
lret
pop
fimuls
inc
xchg
push
cmpsb
mov
lahf
xor
sbb
jnp
add
inc
outsb
mov
cltd
imulb
adc
fwait
in
call
dec
data16
rcrl
dec
xchg
testl
call
repz
xchg
mov
pop
sbb
arpl
mov
jg
cltd
lea
jo
dec
dec
inc
in
mov
jns
lret
sbb
xchg
mov
jae
cli
mov
lods
pmulhuw
add
fdivs
dec
push
cmp
dec
or
inc
pop
cmpsl
jp
jle
adc
xchg
pop
adc
xchg
add
int
jne
lods
repnz
xor
addr16
push
cli
adc
stc
jnp
xor
popf
mov
loope
rorb
call
lds
mov
shl
outsl
xor
pop
jo
cmpl
hlt
lods
adc
add
inc
das
mov
mov
pop
incl
and
sub
add
lcall
add
push
ljmp
les
lods
sbb
cmpsl
test
mov
mov
jp
mov
or
mov
pop
out
aam
stc
pop
ret
adc
pop
mov
inc
jp
push
cltd
pusha
jmp
popa
adcl
shr
es
mov
and
bound
jge
dec
or
pop
addl
dec
mov
stos
or
pop
mov
sub
lea
rcll
int
xchg
aam
or
xor
mov
push
rclb
push
jae
mov
xchg
inc
es
idiv
gs
xor
mov
js
mov
inc
ret
mov
dec
jbe
imul
jecxz
enter
dec
cmp
jae
cmc
inc
or
ret
scas
mov
cmp
stos
movsb
insl
pcmpeqb
mov
cwtl
or
dec
cli
ret
sbb
sbb
fisttps
jb
lcall
and
mov
cmpsl
push
mov
sbb
int
test
mov
ljmp
inc
data16
addr16
jnp
stc
leave
int3
and
adc
cmp
sbb
ret
addb
rcll
pop
xor
ljmp
sahf
shlb
or
cmp
shll
push
out
pop
and
leave
std
pop
aam
arpl
cmp
adc
and
lcall
mov
mov
fldl
pushf
ret
push
jb
sub
add
fisubrl
or
jno
mov
and
sarb
repz
push
ljmp
mov
mov
xlat
loopne
popa
stos
popa
add
jmp
dec
pop
xor
ret
call
lods
mov
pop
stos
cmp
mov
loop
loop
lods
xchg
orl
test
pop
sbb
mov
cmpb
scas
pop
jp
push
sbb
pop
loopne
mov
add
mov
xor
push
fstl
push
or
mov
cli
cmp
hlt
lea
jnp
push
bnd
or
ja
std
stos
mov
paddb
push
xchg
push
mov
and
inc
repz
pop
cltd
or
invd
and
fsts
mov
and
popa
mov
aas
push
xor
sbbb
loop
dec
les
outsb
cmp
jp
xchg
repnz
pop
mov
adc
ss
out
fstp
movsl
daa
pop
in
lods
inc
test
ficoms
mov
int
xor
les
je
sub
out
aad
fmulp
push
add
add
data16
lret
mov
icebp
sub
nop
lret
test
cs
mov
xchg
fwait
cmp
outsl
xchg
sbb
lea
pop
jns
outsb
clc
xor
movsb
cmpsl
or
fsubr
sub
loopne
xchg
mov
jns
xchg
push
xor
or
testl
lahf
jle
imul
mov
adc
das
jecxz
inc
aad
fcoml
push
jmp
sub
jg
add
adc
pop
mov
mov
sti
cmc
icebp
pop
xchg
stos
nop
imulb
jb
cmc
iret
stos
push
xlat
shll
lock
repz
jp
lock
jge
adc
mov
das
push
cmp
cmp
sub
mov
sub
rolb
cmp
cmp
xchg
xor
cwtl
lret
xor
pop
std
mov
mov
test
fsubrp
int
outsl
jge
test
cs
cld
cmp
mov
das
sbb
dec
mov
mov
cmp
pop
jle
inc
mov
pop
xchg
xor
push
push
adc
inc
jp
call
pop
add
xor
pop
add
sbb
pop
daa
push
addr16
inc
add
xchg
sbb
mov
adc
in
jle
dec
or
decb
add
inc
mov
xorb
imul
cltd
inc
aaa
jnp
sbb
xor
gs
dec
mov
push
lret
loope
pusha
psrad
push
std
mov
stos
ret
sti
cmp
je
test
cld
cmp
push
push
ret
iret
mov
xchg
pop
pop
les
jle
out
loopne
pop
xchg
shll
mov
cmp
mov
leave
cwtl
test
and
push
mov
call
push
dec
movsl
inc
xor
pop
sub
es
scas
add
fucomi
movsl
lock
aaa
stos
sbb
test
pop
ljmp
dec
dec
push
or
mov
cmc
out
pushf
dec
lret
ret
push
nop
jge
adc
int
fcmovnb
inc
adc
ljmp
pop
rclb
fadds
add
sub
cld
in
cmp
adc
pop
fwait
mov
mov
mov
shll
ret
mov
mov
mov
cwtl
lods
xchg
cmp
xchg
jne
sub
adc
cmc
dec
mov
popl
xorl
rol
xorl
cmpsl
or
aam
out
pusha
adc
in
int3
ja
stc
jo
mov
add
popf
xor
and
xorl
xchg
roll
lret
cmp
push
int
je
enter
dec
sub
sub
push
int3
and
jae
mov
lret
cmpsb
add
cwtl
insl
push
clc
nop
mov
sbb
push
xlat
mov
push
movhlps
lods
in
arpl
rcl
adc
and
push
dec
xor
fidivrs
adc
rcrb
cld
jo
jns
icebp
mov
shlb
ds
or
in
div
out
movsb
orl
out
cmp
inc
cltd
pop
in
cwtl
jg
js
push
enter
pusha
cs
add
add
ja
sbb
xchg
rolb
mov
mov
xchg
mov
int
mov
sub
cmp
popa
outsb
jmp
mov
fwait
mov
and
jecxz
mov
inc
mov
lods
pushf
xchg
test
das
dec
or
dec
outsl
lds
rcr
scas
stos
sbb
mov
mov
push
sahf
push
add
sbb
rcrl
pop
pop
add
dec
sub
aaa
jl
aad
xchg
je
and
lods
cmp
nop
nop
xor
pop
out
jmp
xorl
adc
adcl
repnz
out
push
mov
xlat
sub
and
gs
cld
and
xor
out
popa
jns
sub
xor
add
les
pop
dec
add
mov
icebp
lods
xor
xor
into
or
jnp
movsl
xor
xor
cmp
and
mov
ret
jb
mov
push
subps
add
cmp
shrl
cmp
mov
mov
or
jecxz
sub
je
es
jl
movsb
xor
aaa
push
in
hlt
lods
daa
and
sbb
loopne
dec
inc
ljmp
pop
pop
adc
repz
ljmp
adc
sarb
stc
addr16
mov
jl
je
sub
pop
fdivr
fsubs
sbb
movsl
sbb
icebp
xor
les
aad
ds
iret
mov
ss
int
and
imul
rclb
mov
adc
mov
ss
dec
scas
sub
xor
xor
movsl
outsb
xorb
lahf
mov
mov
add
mov
adc
push
xchg
arpl
sarb
mov
pop
jp
test
ret
cli
cmp
mov
cs
xchg
mov
mov
inc
stos
pop
fbld
in
shrb
push
rolb
push
sbb
scas
fisubl
push
mov
mov
outsb
iret
out
and
es
adc
push
scas
aas
in
adc
rclb
xor
shl
xchg
jne
loop
clc
mov
cli
cmp
adc
dec
gs
outsl
push
dec
cmp
or
dec
inc
or
xor
ds
sti
aam
jmp
mov
mov
stos
jle
and
sarb
scas
lahf
dec
push
xchg
push
test
mov
add
jb
repz
bndldx
jne
pop
nop
out
aaa
movsb
leave
sbb
out
fidivl
pushf
mov
pop
jae
lea
inc
and
mov
pop
pop
inc
add
xbegin
inc
pop
xchg
int3
push
data16
lea
into
stos
es
lds
xor
fstpl
sbb
and
xchg
in
push
fimull
add
sub
bswap
lock
adc
fldl
out
fldenv
sbb
push
jl
dec
lods
hlt
push
out
out
jmp
fisubl
int3
push
aas
cmp
pushf
rcll
sbb
arpl
add
out
xchg
inc
pop
data16
mov
mov
outsb
call
add
jge
dec
mov
into
sbb
push
repnz
sbb
out
push
adc
sub
loope
movsl
lcall
or
push
xor
repnz
ds
sub
pusha
add
testl
mov
mov
je
lods
jl
shll
jmp
cmp
xchg
push
lret
jg
lods
or
pusha
inc
mov
shl
jle
call
mov
inc
ret
cwtl
jnp
dec
mov
sahf
mov
jp
or
imul
sar
fmull
pop
cmpl
mov
mov
out
pop
addb
aad
ffree
inc
fs
shlb
mov
jbe
fisubl
or
shrl
fnsave
fadds
sub
xchg
adcb
and
cmp
pop
dec
adc
ja
out
inc
or
or
cmp
cmpsb
inc
jp
movsb
push
cmp
jecxz
imul
pop
mov
inc
add
lret
insb
jecxz
test
ds
stc
inc
inc
push
imul
into
js
rorl
lods
sbb
mov
jg
shlb
xor
jae
xor
add
or
pop
test
cltd
mov
sub
push
sbb
test
sub
jb
clc
or
push
and
adc
cmp
mov
add
xor
sbb
xchg
mov
test
jmp
lahf
aam
inc
sub
sahf
push
outsb
hlt
scas
imul
mov
mul
cmp
add
mov
es
popa
ret
xchg
and
inc
jb
mov
lcall
cmp
mov
andl
movaps
repz
xchg
mov
fcmovbe
cmpsl
loope
cmpsb
sbb
stos
insb
jnp
cmc
pushf
mov
push
pop
scas
push
pop
dec
mov
sub
xor
mov
push
clc
sbb
and
cmc
in
push
call
ss
sahf
ja
add
ds
ja
jmp
inc
sbb
leave
enter
xchg
xchg
add
fmuls
jl
inc
mov
inc
jb
inc
in
cmp
sti
jg
ret
mov
cli
xchg
ret
aas
lcall
iret
xchg
lret
mov
nopl
and
dec
and
mov
fwait
aam
popa
xor
add
mov
pop
fnstenv
orb
das
add
ret
and
add
jmp
mov
pop
dec
mov
mov
push
mov
mov
in
leave
cmpsb
cmp
pop
push
push
daa
jb
xor
push
jmp
xchg
fstl
jnp
inc
mov
dec
mov
scas
jne
push
push
int3
ret
repnz
data16
ror
pushf
jmp
jne
pop
jae
aad
push
xor
lea
mov
mov
xchg
inc
dec
sbb
inc
into
cmp
jmp
push
insb
es
sarl
movsb
pusha
mov
into
inc
xchg
cmp
xchg
scas
aam
imulb
push
sub
or
popl
jmp
adc
outsb
divl
test
aam
adc
enter
aaa
cli
arpl
sub
xlat
popf
fcom
and
xchg
pushf
stc
fdivr
push
imul
xchg
jb
sub
scas
dec
rcll
pop
leave
cmp
and
sbb
inc
fisttpll
mov
and
jg
mov
out
sbb
test
add
push
add
nop
jno
pop
cmp
sahf
je
jecxz
xchg
mulb
jnp
mov
fs
mov
inc
xchg
rcl
sub
push
aad
pop
mov
je
fwait
stos
jmp
dec
ror
add
movsb
mov
outsl
nop
sub
inc
in
ret
push
rcrb
mov
outsl
push
insb
and
arpl
enter
or
sub
and
sbb
and
mov
ret
mov
add
xchg
aas
and
ret
loope
rolb
pop
repz
cmpsb
and
xor
ficoml
dec
cmc
sbb
sti
dec
dec
in
or
jg
arpl
xor
mov
lret
div
cs
inc
test
or
mov
dec
push
xchg
std
into
adc
cmp
test
in
mov
jo
lods
xchg
xchg
ljmp
sbb
inc
out
xchg
jp
cwtl
or
data16
les
out
push
leave
inc
push
mov
test
mov
cli
test
cmp
imul
add
sbb
loopne
cmpsl
leave
lret
lret
rol
in
mov
insb
pop
jns
push
dec
and
out
ficoms
dec
pusha
mov
sarb
and
clc
lret
jp
or
mov
mov
inc
jae
xchg
add
fwait
repnz
cmp
push
in
lods
loop
sub
dec
inc
loopne
test
test
dec
call
pushf
push
xchg
insb
inc
dec
popl
mov
addb
pop
scas
push
outsl
jmp
mov
inc
popl
dec
sbbb
sbb
out
call
scas
sub
xor
xor
xor
data16
ret
mov
adc
pusha
mov
mov
pop
fadds
cmp
inc
jmp
loop
stc
add
jl
leave
int
inc
mov
inc
test
cmp
mov
test
mov
adc
jns
imul
jns
adc
fdivrs
test
les
insb
jecxz
xchg
add
xor
add
imul
dec
pop
push
decl
mov
push
cmc
lret
addr16
outsl
aad
in
dec
xor
fwait
push
push
stc
push
dec
popa
popa
jb
sbb
xor
jecxz
test
pop
mov
ss
popl
push
orb
movsb
mov
decl
jmp
lods
movsb
sub
dec
or
push
or
stos
mov
push
jg
mov
inc
fcos
and
inc
jnp
push
aaa
xchg
adc
popf
cwtl
clc
aas
cmc
push
inc
cltd
ljmp
repz
ja
ds
loope
xchg
mov
mov
stc
pop
loop
mov
je
sub
pop
inc
call
lds
ss
pop
jl
inc
stos
nop
mov
push
lret
jb
dec
dec
jne
cmp
inc
xor
bound
push
sbb
add
sti
test
shlb
pop
in
inc
ja
hlt
cmp
or
sti
jp
out
test
leave
add
lods
sub
xchg
mov
jg
jmp
push
int
mov
nop
stos
cmp
fldenv
pop
lock
cmpl
les
mov
imul
roll
insl
sub
icebp
xor
decl
and
call
cwtl
or
in
imul
pop
rorl
je
push
dec
fcoml
in
in
lea
stos
adc
subl
enter
imul
gs
outsl
int
jle
scas
xchg
sbb
fbstp
notb
fstps
sarl
int
mov
pop
insb
ret
scas
int3
fadd
push
insb
xlat
mov
xor
adc
loopne
dec
dec
mov
jnp
out
lcall
scas
sub
dec
jl
std
mov
adc
inc
mull
mov
add
mov
and
test
mov
cmp
fadds
xor
sub
dec
pushfw
mov
pop
shll
cmp
xchg
js
lret
cli
push
mov
lea
lret
inc
pop
mov
jne
cli
rcr
dec
sub
fsubrs
or
loop
popa
insl
mov
dec
pop
iret
sub
cmp
inc
jbe
mov
loopne
pop
cmp
stc
jno
dec
movsl
pushf
fcomip
jp
jp
sbb
loop
add
sub
jmp
or
xor
push
pop
adc
lcall
popa
mov
into
add
ljmp
dec
inc
jl
mov
adc
loope
mov
jo
test
mov
pop
cmp
stos
inc
into
rorb
and
pushf
ds
jmp
test
fldcw
xchg
xchg
jp
or
mov
js
xor
shlb
pop
or
and
dec
das
pushf
movsb
scas
cld
adc
inc
add
jecxz
adc
mov
adc
jp
subl
cmpsb
jmp
push
scas
xchg
rcll
inc
fmuls
xchg
push
imul
imul
jae
inc
rol
cli
into
mov
dec
xchg
cld
testb
xchg
jmp
stos
rol
shl
sub
and
lret
pop
xor
stos
push
jo
nop
sub
in
pop
cmpl
cmp
jle
xchg
into
inc
and
sub
out
fistpll
cmpsl
in
imul
jmp
rcl
pop
cmc
aas
lods
xor
mov
enter
fcoms
out
mov
xchg
sbb
inc
aad
jo
ss
jns
push
repnz
inc
lahf
add
mov
cmpxchg
mov
pop
cli
cmp
syscall
stc
lock
dec
pop
mov
je
mov
inc
mov
add
rcl
movsb
pop
pop
mov
cltd
mov
imul
data16
insl
add
ret
push
jecxz
lcall
jnp
jo
cmpsw
cli
leave
mov
sbb
out
jae
pop
mov
xor
and
mov
jne
cltd
cmp
ret
movsl
lret
sub
mov
test
adc
jecxz
ljmp
or
mov
je
das
cltd
push
mov
sbb
xchg
push
push
xor
add
inc
fstpl
xlat
mov
sarl
adc
xchg
add
ret
mov
sub
lcall
jno
repz
sub
xchg
xor
aas
dec
or
daa
movsl
sbb
enter
icebp
cmp
insb
fists
lods
mov
push
mov
aas
rcrb
sbb
sub
mov
push
mov
addl
jb
push
cltd
js
into
loopne
ret
and
lahf
dec
bound
pop
outsl
add
lock
sbb
aad
push
repz
pushf
xchg
hlt
jmp
outsl
rclb
mov
xchg
or
decb
jmp
jnp
mov
push
repz
mov
aam
and
push
cmpsb
mov
popa
mov
ficompl
rcll
push
iret
lock
fnstcw
mov
ret
std
dec
int
out
dec
cmpsb
add
cltd
repnz
andb
test
aad
aad
cmp
stc
loope
dec
popa
stc
rolb
lods
jg
mov
pop
in
fbld
mov
enter
sub
jmp
xchg
or
adc
jg
mov
mov
out
inc
dec
fsubrs
pop
sub
push
outsb
mov
or
bound
inc
jg
cmpsb
in
mov
ficoml
mov
mov
test
cmpsl
ljmp
xlat
int3
movsl
mov
adc
add
inc
loopne
les
ljmp
dec
xchg
jge
cmpl
mov
test
stc
sbb
xchg
stc
fdivr
in
insl
imul
jge
sub
adc
mov
mov
xchg
inc
ret
hlt
xor
out
out
iretw
cltd
xchg
ret
pop
cwtl
sahf
hlt
or
addr16
ljmp
and
push
cltd
sar
push
ds
mov
jb
sub
jno
or
inc
scas
sti
pop
push
cmp
mov
fistpll
inc
jecxz
sti
icebp
add
xor
cwtl
cmp
iret
into
mov
push
xchg
cs
lahf
outsl
push
xor
add
jle
push
mov
loopne
sbb
lcall
xor
jle
js
mov
jnp
pop
and
sub
push
sub
das
add
inc
subl
sub
xor
xor
sub
add
pop
cld
test
jg
xchg
imul
in
adc
testb
imul
nop
mov
cmp
mov
test
inc
dec
mov
sub
lret
out
xor
jle
call
sbb
jbe
and
push
sahf
dec
jl
and
lds
mov
mov
sub
into
adc
dec
cmp
outsb
cmpsb
push
nop
xlat
pop
inc
hlt
sub
int3
movsl
sub
jle
scas
in
mov
movsb
push
xor
imul
pop
ja
andl
adc
cwtl
or
sbb
xor
dec
and
mov
fstcw
push
lock
cmpsb
jg
test
sbb
mov
cltd
jge
mov
adc
dec
pop
xlat
push
jmp
pop
repnz
sbb
pop
cltd
push
incb
mov
pop
clc
sbb
jns
and
and
push
jae
cli
insb
lock
frstor
in
adc
add
insl
test
leave
adc
inc
jb
push
test
loope
and
lods
jg
int3
lcall
sti
cmp
loop
push
or
idivl
hlt
scas
mov
fadd
pusha
xlat
jo
mull
test
das
and
push
cmp
cli
jg
test
mov
scas
push
and
and
cmpsb
into
jb
add
dec
cld
fs
aaa
jmp
pop
ret
cltd
cli
mov
mov
adc
gs
hlt
cwtl
and
mov
clc
les
fistpl
sbb
push
stos
xchg
cmp
sbb
je
jp
ljmp
fmuls
inc
fistps
ds
or
scas
push
popa
jae
sub
outsl
cmp
mov
xlat
push
in
adc
lahf
xor
sbb
sbb
inc
scas
nop
stos
inc
jne
and
or
stc
movsl
jmp
push
pusha
sbb
cmp
jae
pop
cmp
fcomi
xchg
push
or
mov
mov
push
xchg
icebp
jle
mov
adc
nop
or
add
pop
inc
stc
sbb
xor
cltd
mov
pop
aaa
rclb
out
mov
add
cmp
pop
mov
adc
dec
arpl
mov
push
movsb
cmp
fidivs
push
xchg
mov
push
or
mov
sbb
and
fldenv
mov
cmp
les
xchg
imul
idiv
or
xchg
inc
push
stc
mov
fistpll
sub
pop
add
push
gs
push
daa
fwait
xlat
cmp
mov
mov
arpl
out
mull
aad
and
jb
cmp
imul
fbld
inc
add
ja
imul
rclb
lods
mov
pop
inc
cmp
sbb
cmp
adc
and
in
lea
xchg
sbb
push
lret
cld
mov
test
mov
ret
xlat
lahf
dec
pop
loop
xchg
dec
addr16
xchg
mov
js
repz
sarl
cmp
xlat
fsub
fsubl
pop
incb
ja
push
dec
sub
push
and
cltd
jp
rol
lds
cmpsb
mov
cs
or
in
cwtl
js
mov
mov
aam
jns
jns
ljmp
xor
mov
inc
adcb
pop
cmp
push
or
ljmp
adc
and
mov
and
xor
xchg
test
and
sub
mov
dec
jnp
imul
loope
scas
jp
cwtl
daa
xchg
in
jecxz
xor
mov
inc
pop
dec
notl
jnp
in
sub
add
xchg
mov
lret
push
xchg
sbb
sub
mov
add
xchg
inc
adc
add
lods
inc
sub
repz
jp
push
loopne
repz
jnp
and
loopne
imul
inc
movsl
rcll
ljmp
or
test
pop
sbb
mov
lret
into
cmp
mov
cmp
iret
les
mov
xor
adc
loope
xor
jns
adc
mov
test
cwtl
cmp
cmp
jnp
mov
shll
testl
cwtl
pop
inc
xchg
pop
sbb
xlat
push
add
push
adc
mov
mov
cltd
aam
lret
imul
jle
daa
pop
dec
inc
mov
es
mov
or
or
sub
jb
or
movb
fisttpl
call
or
jns
mov
mulb
push
push
sbb
adc
mov
inc
pop
out
fs
negb
add
lcall
sti
loop
jecxz
rorb
add
sbb
out
into
jb
adc
fsubr
pop
xor
rcrl
sub
cmp
dec
sar
gs
mov
outsb
jns
cmp
inc
xor
mov
jae
cmpsb
pop
fcmovnu
pop
icebp
imul
pop
movsl
pop
shlb
out
add
push
push
push
xchg
mov
xchg
jg
imul
cmp
rclb
adc
out
mov
loop
out
iret
kunpckbw
in
loope
les
or
dec
lock
outsl
shr
leave
lea
mov
fdivp
push
mov
push
repz
pop
cltd
mov
nop
pusha
jl,pt
or
push
add
icebp
aaa
les
inc
inc
sar
leave
or
mov
cmp
or
jecxz
lret
in
std
jmp
adc
test
sub
cmp
cmpsw
dec
inc
xchg
stos
dec
ss
fisubl
mov
js
sub
pop
jnp
imul
lds
fs
in
xor
dec
jbe
negb
out
mov
jge
xor
fstl
mov
jno
pop
xchg
mov
rol
push
insb
pop
dec
ljmp
lods
out
sbb
les
in
cwtl
cmpsl
sahf
push
int
mov
jo
cmp
cmp
cmp
shl
cmpsb
xor
mov
js
imul
int3
jp
inc
clc
add
outsl
fcomp
and
outsl
sbb
inc
push
in
push
sarb
insl
rcl
sahf
xor
cmc
test
lock
out
pop
dec
insl
jl
mov
addr16
and
addr16
jp
push
in
in
add
icebp
adc
xor
sub
repnz
mov
mov
fbld
pop
dec
aad
cmp
subl
pop
push
cmc
loope
xorl
or
sub
ror
clc
cmp
jae
inc
inc
inc
jbe
fisubrl
jbe
aas
test
ss
into
fcmovbe
jno
mov
pop
and
ja
inc
pop
data16
lock
icebp
add
sub
jmp
hlt
xchg
push
jne
adc
mov
cmc
cmp
sub
pop
pushf
roll
icebp
inc
pushf
jnp
out
mov
loope
sbb
or
and
mov
or
loop
fs
outsl
lods
loope
repnz
cmp
popf
push
sub
dec
cmpsl
ja
mov
test
mov
into
loope
rcrb
imul
daa
mov
pop
cmp
roll
repz
ss
fs
jnp
mov
or
mov
push
push
mov
stc
scas
mov
jno
inc
imul
sbb
pop
andl
or
lods
sbb
mov
push
loope
je
inc
jo
aaa
bound
push
fiaddl
stos
ret
xchg
into
mov
add
aam
and
fcoms
mov
in
sub
mov
add
or
sub
sbb
outsl
imul
pop
popa
cmpsb
push
push
das
cltd
int
pusha
pop
push
sbb
rorb
jo
sbb
sbb
icebp
shlb
loop
orb
mull
mov
jbe
pushf
nop
dec
mov
or
cmp
mov
jnp
stos
or
xchg
push
sarl
addr16
fwait
adc
and
dec
inc
push
pop
lock
xor
sbb
faddl
sahf
and
aas
mov
jo
jno
in
add
jmp
pop
out
lahf
out
adc
inc
mov
testl
pop
mov
sub
push
mov
pop
add
aas
and
adc
xor
xor
sbb
jecxz
or
push
inc
cli
push
stos
mov
mov
inc
dec
rcll
push
and
push
repz
dec
fs
out
dec
inc
stos
xor
imul
xchg
inc
outsl
mov
xchg
aad
cmp
sub
sbb
push
out
sub
or
aas
js
adc
mov
mov
push
insl
fisubs
or
cmp
jp
add
fisttps
adc
cwtl
outsl
pop
fistpll
int
lock
xchg
cmp
jl
add
divb
xor
hlt
add
mov
push
cmp
jae
add
js
fnstenv
jae
repnz
mov
pop
and
addr16
pop
or
sub
jne
movsl
jno
mov
fistpl
lods
add
ficoml
add
lahf
add
sbb
sub
arpl
ja
in
fstps
push
int
push
jge
mov
or
cltd
inc
push
dec
pop
jg
push
sbbb
scas
add
movsl
mov
add
shrl
mov
cmpsl
dec
push
outsb
je
dec
lret
pop
cmpsb
loop
clc
ror
in
gs
loop
mov
stc
jno
dec
mov
shlb
or
loopne
xlat
test
mov
aam
jge
mov
jp
sub
jle
push
jge
push
cld
movl
dec
repnz
mov
mov
mov
adc
inc
daa
sbb
mov
pop
push
mov
das
movsb
mov
les
test
test
jbe
inc
call
js
in
xor
and
aad
sbb
sbb
lds
push
add
out
and
inc
cwtl
mov
cmp
mov
cld
ss
bound
cs
xchg
notb
add
cmpsl
jmp
aaa
jmp
nop
and
rorl
and
dec
xchg
fldt
movsl
fisubrl
out
sbb
add
sbb
sub
clc
divb
dec
xchg
adcb
loope
and
mov
sbb
test
ds
adc
sub
xchg
adc
mov
jne
cwtl
cmp
push
xchg
js
negl
jb
jo
adc
cs
into
pop
and
rcll
inc
test
inc
adc
xor
dec
sbb
cmp
in
mov
mov
lods
inc
loope
or
rcrb
pop
mov
adc
orb
sub
sbb
or
stc
out
rol
test
xchg
push
ret
push
and
icebp
add
add
cli
mov
mov
mov
lret
sbb
mov
xlat
test
cmpb
popf
filds
add
or
call
add
sbb
aas
stc
inc
aam
and
or
xchg
dec
pop
out
mov
test
dec
cs
insl
adc
test
je
fidivs
push
ljmp
mov
pop
je
in
sahf
inc
in
mov
xor
inc
and
xor
dec
ja
cwtl
and
shll
and
pusha
mov
mov
mov
adc
push
mov
jnp
mov
popa
push
test
loope
pop
push
push
loop
js
fisttps
insb
xor
jno
or
mov
iret
add
fsubr
out
ds
fcmove
fwait
les
cmpl
stos
pop
lea
es
fs
cmp
movl
je
jp
or
lea
cli
inc
in
sahf
ficoml
cld
xchg
sbb
test
test
and
sub
mov
pop
call
pop
rsm
stos
fiaddl
add
sub
out
adc
loope
sbb
cld
pop
jnp
jg
push
pop
subl
jmp
sub
ljmp
mov
dec
jle
mov
adc
lcall
and
fisubl
jmp
test
mov
inc
mov
std
or
lea
cmp
push
inc
add
cltd
bound
add
adc
shlb
sbb
fcmovnu
sub
test
in
and
out
xlat
mov
jne
mov
imul
push
xchg
movsb
xchg
mov
pop
jnp
into
push
leave
popf
mov
mov
push
stc
ret
mov
mov
movsb
and
push
scas
lds
xor
inc
ficoms
cmpsb
adc
sub
imul
fwait
jb
or
sarl
test
subb
fwait
inc
and
std
gs
outsb
out
xchg
pop
sub
xchg
fcmove
cmp
xchg
jp
cmpsb
and
pop
cmp
cwtl
mov
stc
pop
fsubr
add
shlb
sub
dec
adc
xchg
movsl
inc
fstpt
daa
lods
cmp
sub
fld
or
xor
cmc
lahf
iret
mov
and
pop
mov
mov
sub
sub
and
out
lds
in
inc
fadd
aad
xadd
je
push
int3
ja
lock
ret
mov
das
or
mov
pushf
sti
ljmp
push
xorb
or
xchg
mov
int3
pop
jge
call
mov
repz
adc
xor
sub
stc
push
sub
aaa
add
mov
xchg
pop
inc
arpl
ret
in
lds
loopne
jb
mov
scas
mov
mov
jo
fwait
jg
popf
imul
fs
shlb
pusha
push
xlat
rol
push
testb
xchg
mov
adc
mov
cltd
adc
xor
ret
sbb
jns
adc
out
sbb
sub
mov
xchg
dec
fmuls
ljmp
icebp
andb
insl
and
imul
add
push
jmp
and
out
stos
into
xchg
cs
sub
sti
cmp
cmp
movsb
lret
sbb
add
cli
dec
fs
jb,pn
mov
push
inc
rcr
adc
cmp
daa
rcrb
ficoml
mov
int3
nop
jg
or
pop
clc
scas
fwait
mov
jnp
xor
inc
inc
iret
hlt
xor
in
jno
inc
ret
aam
xchg
add
cmp
mov
push
scas
sub
mov
mov
cmp
pop
adcb
mov
mov
push
jae
addl
mov
in
mov
stos
pop
mov
mov
mov
jge
adc
sbb
fimull
sbb
es
cmp
lcall
pop
bound
inc
mov
mov
push
mov
push
mov
sbb
or
int
mov
xor
mov
inc
in
sbb
push
inc
in
test
pop
push
in
jp
roll
jl
cmpb
inc
cwtl
jno
mov
or
cs
scas
xor
xor
push
mov
bound
dec
arpl
mov
sbb
jo
mov
test
pushf
ss
cmpsb
leave
popf
dec
fdivl
arpl
mov
dec
push
mov
sbb
cmp
add
popa
pop
insb
xchg
xchg
ds
jl
test
and
aad
or
es
sub
stc
out
aaa
mov
jo
scas
icebp
dec
jbe
or
lds
cmpsb
out
add
cmp
mov
sub
pop
dec
testl
ss
jbe
xchg
jnp
mov
xchg
adc
test
movsb
test
mov
mov
mov
jle
jb
jle
scas
pop
cmp
cli
aad
and
fyl2x
data16
adc
lods
xchg
insl
cmp
jg
or
mov
jno
mov
sub
paddq
mov
mov
imul
data16
inc
sbb
in
adc
pop
movsl
push
push
cmp
nop
sbb
sbb
andl
scas
sub
xchg
mov
cmp
xor
test
adc
push
std
stc
mov
sub
fbld
xor
int
mov
int
xor
mov
push
mov
ret
sbb
mov
je
push
pusha
daa
hlt
inc
aaa
in
lds
mov
inc
testl
ret
movsl
das
mov
and
pop
jl
repz
je
cmpb
idivb
mov
jae
inc
fs
notl
jmp
bound
mov
and
scas
addr16
jno
mov
lods
jbe
aam
ret
nop
sub
or
mov
lods
mov
inc
divl
enter
add
add
push
pushf
mov
fiadds
cmp
lret
push
mov
jmp
mov
andl
out
jo
das
sbb
cmp
sub
mov
pop
sahf
xchg
imul
jp
lock
xor
jmp
ljmp
enter
cmp
sbb
pop
cmc
xchg
es
pop
sbb
test
and
xor
lea
sti
lds
mov
test
test
dec
inc
cmp
pusha
test
hlt
push
ret
out
test
loop
adc
insl
cmpb
cmp
std
add
pop
out
popf
adc
nop
testl
adcl
adc
out
dec
notb
mov
cld
cwtl
ret
pop
or
or
aam
lods
xor
fdivrs
pop
xchg
xor
xlat
pop
hlt
into
iret
and
lea
out
jge
mov
or
icebp
jge
dec
inc
stos
mov
clc
adc
stos
insb
mov
cmp
dec
xor
pushf
int3
nop
idivb
cmpsb
dec
push
mov
lods
pop
mov
test
rorl
mov
hlt
fs
fcmovb
dec
dec
pop
out
adc
inc
cmp
scas
fists
or
mov
adc
mov
js
test
cmp
stc
fs
dec
mov
and
in
sbb
fs
pop
ljmp
xor
psadbw
rolb
data16
lock
inc
out
fwait
pcmpeqb
sub
pop
rcrl
inc
pop
iret
jns
pop
pusha
sbb
push
das
daa
mov
pop
sub
les
inc
xor
mov
pusha
ficoml
mov
ficompl
das
in
mov
xor
push
sti
daa
fdivr
sub
pop
call
adc
mov
dec
mov
int
bound
decb
pop
ss
lcall
sub
btc
outsb
decl
mov
adc
ret
mov
xchg
and
mov
inc
xchg
cltd
jns
xchg
jns
push
into
insb
dec
ret
mov
fnstsw
test
mov
mov
ret
cs
or
daa
inc
fs
and
cmp
insb
cs
jecxz
cmp
xor
mov
iret
dec
mov
rolb
pop
cld
jl
xor
push
sub
mov
out
pop
fimuls
or
gs
mov
ljmp
int3
mov
lods
cmp
jno
test
and
clc
cmpsb
cwtl
call
hlt
push
add
stc
mov
loop
sahf
idiv
sub
je
add
test
fdiv
popa
lea
mov
loopne
ja
repz
scas
adc
xchg
loope
mov
sbb
sar
pop
adc
xlat
ret
jnp
ret
sti
mov
in
and
ret
cwtl
lea
test
int
adc
fcoml
add
jp
xchg
xor
mov
testl
inc
push
insb
jl
fstps
sbb
mov
test
jo
gs
sub
fldl
daa
mov
outsl
stc
fildll
adc
jo
add
imul
in
push
mov
jge
inc
loope
push
out
rcrl
pop
and
aaa
jmp
andb
xchg
lods
xorl
xchg
jle
pusha
movb
cmp
mov
adc
rcrb
or
or
pop
pop
dec
sbb
adc
fbstp
in
loopne
lds
shll
insb
add
les
xchg
std
ret
cmp
pop
js
popa
ss
or
mov
hlt
lret
adc
dec
jmp
addb
rep
sub
pop
xchg
insl
inc
lahf
pop
lahf
mov
sti
mov
mov
push
mov
xor
dec
xor
divb
jno
jg
std
out
lret
inc
mov
sbb
jb
lds
rclb
test
inc
pop
daa
mov
adc
divl
push
out
xor
adc
mov
sbb
out
shlb
imul
sahf
bound
jle
cwtl
or
shlb
mov
pop
pop
mov
repz
nop
das
icebp
xor
mov
sub
xlat
les
xchg
out
movsl
out
push
lret
fwait
outsb
into
inc
and
je
icebp
mov
inc
scas
fidivrl
daa
aaa
mov
xor
lea
adc
lret
add
push
addr16
xchg
pop
xchg
es
adc
repnz
sbb
pushf
movsl
dec
cmp
dec
pusha
pushf
mov
loop
xlat
inc
ss
push
mov
addb
sbb
adc
cli
mov
js
inc
inc
mov
sbb
cmp
enter
mov
push
cmp
adc
into
fcoms
xor
ss
mov
pop
xchg
out
fiaddl
xor
mov
cmpsb
movsb
cmpsb
add
rclb
sub
les
push
and
dec
imul
mov
rcrl
add
adc
push
repz
sbb
pop
iret
sub
fisttpl
imul
pop
les
shll
into
ror
test
insl
das
mov
jbe
das
dec
mov
push
cs
mov
push
jb
push
xchg
and
adc
into
addl
adc
aaa
mov
les
in
dec
stos
rolb
enter
add
mov
in
ja
and
lds
dec
sub
sti
push
mov
repz
mov
mov
and
adc
xchg
push
cmp
scas
daa
imul
scas
cmpsb
hlt
in
shll
lret
and
mov
xor
jb
mov
jno
pop
ficoml
ret
mov
icebp
pop
test
test
pushf
pop
out
or
pop
sub
push
outsb
fsubl
in
test
popa
pop
push
movsb
icebp
mov
addl
hlt
xor
cmp
enter
xchg
xor
int3
sbb
pop
cmpsl
icebp
das
adcl
jo
dec
push
mov
add
test
inc
shl
jl
stc
xlat
sub
mov
or
mov
mov
shrl
add
or
mov
jmp
into
test
add
insb
repnz
add
inc
pop
fcoml
dec
adc
test
xor
adc
mov
addr16
loop
jmp
iret
inc
add
rorl
cmpsb
and
sar
ss
mov
int3
sub
int
lcall
pop
cli
ud1
adc
outsl
pop
or
out
and
das
in
mov
pop
mov
imul
jb
out
popa
xchg
inc
xchg
nop
arpl
cmp
aas
mov
push
in
sbb
cwtl
xchg
inc
fsts
hlt
pusha
popf
shr
and
cmpsl
imul
mov
push
adc
jb
je
ljmp
aaa
xchg
sub
mov
xchg
push
inc
outsb
nop
lods
mov
mov
and
out
jb
push
add
mov
jno
std
xlat
lahf
mov
test
imul
imul
rolb
into
jo
adc
jbe
adc
mov
in
daa
gs
or
lahf
lea
xor
dec
jmp
lret
test
dec
push
fisubrs
cmc
pop
add
movsl
jecxz
test
dec
bound
scas
arpl
in
int
jl
xlat
lock
dec
ret
cltd
push
arpl
cmc
out
out
push
xor
pop
pop
ss
sbb
jge
sub
mov
lret
in
gs
inc
stc
shrb
loope
pop
popa
aaa
cs
dec
and
sti
enter
lahf
hlt
ror
mov
or
inc
in
insb
jbe
out
cwtl
in
dec
leave
add
movsb
cli
je
and
push
push
jbe
add
out
push
xchg
pop
shrb
stos
nop
add
push
mov
mov
mov
add
aad
repnz
ja
test
cs
xchg
pop
xor
pop
sbb
push
cmp
jns
iret
imul
test
enter
lret
jbe
scas
dec
adc
sahf
mov
test
jg
ljmp
into
sbb
jmp
subb
adc
dec
dec
imul
add
mov
std
mov
cmp
push
jo
ds
fmuls
mov
popa
push
xchg
and
jg
adc
push
fstp
inc
mov
sbb
adc
fdivl
int
and
mov
mov
repnz
es
xor
lahf
jg
mov
inc
mov
mov
add
inc
gs
aad
icebp
mov
outsl
negb
cmp
pop
mov
ja
mov
and
fdivrl
jo
push
dec
fidivl
push
int
mov
jmp
xchg
sbb
mov
cmp
and
xchg
pop
in
lret
cmc
leave
jl
sub
pop
rclb
test
ja
add
movsb
fsubrl
xlat
fisubrl
call
ljmp
jg
ss
aas
cmc
daa
jg
gs
sbb
jae
push
lret
add
cmpsl
push
pop
or
sub
cmp
mov
stos
rcrl
xor
pop
jno
cmpsb
out
int3
or
pop
call
mov
fs
test
xchg
test
test
xor
or
call
push
int3
addl
mov
xlat
nop
ss
jmp
adc
mov
inc
sti
aam
lret
xlat
lods
push
add
stc
xor
or
jne
fisttps
mov
test
pop
mov
sbb
add
shr
jg
imul
xlat
icebp
pusha
pop
xor
jb
mov
dec
push
pop
pop
mov
fadd
adc
shl
xchg
xabort
fadd
jmp
fnstenv
sbb
jne
mov
pop
cmc
jmp
movsb
xchg
xchg
and
scas
aad
cli
xor
in
aas
add
mov
cmpsb
push
mov
sub
gs
testl
xchg
aas
lcall
xor
xchg
xchg
add
enter
push
fldenv
mov
fisubrs
push
mov
xor
mov
lcall
push
push
mov
push
sub
popf
and
movsl
pop
jmp
mov
pop
jb
lods
adc
or
pop
xor
dec
into
in
push
xor
loop
push
jp
cmp
jl
or
outsl
addl
popf
mov
and
cmp
adc
jp
inc
lahf
shll
mov
adc
push
jns
inc
cmp
dec
push
cmpsb
cmp
jb
lahf
sub
mov
adc
cld
test
pop
pop
cs
push
mov
aad
add
inc
test
and
mov
push
push
mov
push
mov
shll
lods
jne
jg
lret
mov
jbe
leave
push
xchg
imul
mulb
lock
shll
insl
test
movsbl
fimuls
popa
test
cmpsl
mov
aam
inc
insl
arpl
dec
jge
jle
rcll
jo
stos
pop
test
ja
mov
imul
sub
sbb
lret
push
in
pop
out
push
xlat
mov
sbb
or
cwtl
stos
push
sbb
or
lret
add
push
mov
push
push
jae
movsb
pop
dec
mov
mov
mov
aad
out
jl
mov
mov
test
add
test
scas
mov
adc
add
mov
scas
mov
cmovne
test
xchg
and
dec
cli
and
dec
cmp
cwtl
add
fimuls
mov
scas
test
stc
loopne
or
orl
cmpsb
ret
scas
jmp
in
dec
sub
ds
repz
mov
fsubrl
insl
mov
mov
mov
rcr
jmp
push
pusha
inc
fdiv
push
cmpsb
stos
fnstsw
insl
add
into
imul
ret
enter
clc
out
mov
cmp
inc
dec
cmp
xchg
sti
loop
mov
add
ja
and
pop
imul
mov
inc
pop
enter
cmp
mov
mov
xor
clc
push
movsl
adc
push
adc
jae
fnstenv
mov
jp
push
out
call
mov
repnz
mov
ret
inc
dec
pop
cmpsb
sub
mov
aaa
or
sahf
fmull
xchg
mov
mov
mov
dec
sbb
shlb
pop
mov
and
clc
mov
fs
out
dec
cwtl
and
sbb
xchg
xchg
scas
jns
sbb
cmp
jb
xchg
jne
sub
push
cmpsb
mov
pusha
test
stc
clc
mov
lock
mov
call
fs
push
mov
push
sar
outsl
add
push
sub
das
cmc
pusha
sub
stos
pusha
mov
fsts
std
or
rorb
in
xor
add
int
cmp
push
enter
xor
sub
cmc
testl
mov
int
sbb
lret
cmp
and
pop
cmpsb
fldl
lret
out
push
adc
fdivl
dec
ret
adc
jbe
mov
ret
jle
xor
push
xchg
sahf
mov
test
les
int
cmp
fisttpll
bound
or
lods
fcmovb
lea
in
mov
jnp,pn
mov
xchg
ret
hlt
dec
mov
mov
and
jecxz
inc
mov
in
and
out
xor
fldt
push
fcoml
or
sub
fsubrs
cmp
or
pop
sbb
loope
in
xchg
adc
test
push
hlt
mov
push
pop
sub
jmp
mov
fldenv
loop
add
adc
xor
push
cs
push
adc
mov
sub
leave
lcall
mov
cmp
jg
lods
mov
push
sti
jmp
lahf
push
lahf
xchg
push
pop
into
add
jge
pushf
in
adcl
sub
loope
sbb
and
mov
stos
sub
cld
jno
cmp
outsb
xchg
jg
mov
daa
push
fs
scas
popa
in
sbbl
fdivrl
add
sbb
xchg
in
xchg
adc
cmp
sbb
out
aam
add
js
pop
mov
push
sbb
sub
mov
sub
loopne
pushf
lods
jge
mov
and
xor
or
mov
dec
out
dec
mov
xchg
test
scas
mov
push
ds
call
jne
loop
mov
test
movsb
outsl
movsl
xchg
xor
adc
loopne
addr16
sti
push
inc
cmc
int
xorb
mov
insb
or
cmpsl
push
loop
sbb
scas
adc
lcall
mov
pusha
enter
outsb
and
inc
lret
imul
jmp
push
fsubrs
int3
or
pop
jo
lcall
jae
stos
pusha
enter
pushl
sub
cmp
jnp
mov
out
pop
test
push
and
and
in
pop
lods
loopne
pop
js
cmp
inc
pop
and
mov
cwtl
test
sbb
or
scas
bound
stos
ljmp
mov
sbb
and
push
jmp
cmc
mov
loop
inc
pop
arpl
sub
in
in
xchg
scas
push
jp
or
daa
mov
add
lret
popa
rcr
jge
mov
mov
xor
mov
sti
fistps
je
aas
aaa
cmp
sbb
cwtl
lods
jl
xchg
cmpsb
movsb
stos
jmp
test
push
mov
or
mov
cmpsb
xor
decb
inc
test
out
xor
ficomps
jecxz
sbb
cmp
shlb
in
out
xchg
pop
jo
mov
push
mov
ss
adc
test
and
xor
scas
pop
push
jge
loop
mov
dec
and
test
cmp
mov
sub
cmpsb
push
insl
mov
pop
cmpsb
jle
pushf
int3
ret
bound
push
push
mov
and
dec
mov
push
adc
std
aaa
xchg
das
xchg
mov
xchg
setno
mov
shrb
fisubs
std
stos
sbb
or
inc
ja
sbb
push
movl
jne
mov
cmp
or
cli
inc
pushf
lds
push
shlb
js
lds
jl
dec
cli
and
lods
das
xchg
in
pushf
in
jb
sbb
test
aam
push
dec
jb
cwtl
and
adc
push
out
cmp
jge
testl
jo
mov
or
cmp
xchg
push
dec
mov
adc
sub
lcall
inc
pusha
or
movsb
js
jmp
mov
fwait
xchg
hlt
mov
add
sbb
cld
ja
out
jne
in
inc
mov
icebp
push
arpl
or
inc
mov
imulb
mov
push
scas
mov
nop
nop
pusha
sub
rolb
sbb
arpl
mov
sbb
xchg
mov
mov
scas
dec
mov
orb
lcall
sbbl
inc
outsb
mov
jle
xchg
ror
mov
push
inc
dec
out
mov
cmp
shlb
int
mov
fsubr
pusha
sub
stc
jno
pop
in
jmp
cmc
jnp
es
sub
and
mov
je
testl
mov
push
shll
pop
add
pop
jl
sbb
repz
rclb
inc
roll
jbe
adc
mov
cmp
js
inc
mov
movups
or
fdivrl
mov
sub
sarl
or
testb
and
sbb
ja
sarb
inc
inc
inc
xchg
jge
push
inc
lret
out
imul
mov
daa
insl
sbb
xchg
sbb
and
mov
dec
mov
outsb
mov
loop
mov
mov
out
mov
cmp
mov
dec
sub
aad
dec
dec
testl
aas
pop
push
int
push
inc
jg
fisubl
mov
test
cs
fcom
stos
out
mov
jg
loopne
mov
test
imul
cltd
in
and
sub
jmp
push
sub
mov
daa
mov
shlb
out
inc
pop
rcrb
jecxz
jle
and
mov
sub
int3
mov
inc
mov
ret
fs
pop
mov
jl
imul
cli
jecxz
fcomp
aaa
aam
dec
mov
sbb
dec
ja
loope
push
ret
mov
int3
rcll
sub
lock
popa
out
aad
cli
xchg
dec
stc
mov
inc
rcr
fisttpll
ret
and
and
mov
subl
jl
pop
hlt
cmpsl
mov
cmp
in
fisttpl
push
mov
ljmp
ret
xchg
enter
filds
dec
iret
mov
pop
in
adc
cmp
loope
sub
xchg
das
fsubs
sahf
push
push
int3
fcompl
pop
and
mov
jge
xor
scas
or
mov
or
sub
clc
cltd
cmp
repz
mov
mov
jecxz
push
jl
cmc
sbbb
out
push
cmp
cs
and
jp
sbb
add
movsb
fldcw
roll
jnp
daa
notb
lods
out
sbb
imul
and
add
lahf
inc
mov
outsb
mov
pop
add
jb
xchg
not
dec
js
rcll
fldl
add
xor
cmpsl
xchg
cmp
gs
lock
cmp
push
adc
xchg
pop
xor
in
sbb
push
sub
xchg
nop
rcll
nop
adc
mov
xchg
into
test
int3
mov
inc
je
lods
hlt
jno
xchg
lods
rol
mov
jmp
xchg
in
es
sub
les
jl
xor
cs
mov
pop
mov
stos
pop
leave
mov
dec
stc
mov
fstps
movsl
push
mov
pop
push
push
int
cwtl
notb
adc
dec
mov
scas
testb
ljmp
std
dec
imul
xchg
push
mov
xorb
push
xchg
cmpsw
add
sbb
lret
jae
imul
sbb
lds
xchg
stos
lds
jb
push
adc
bnd
fnsave
ret
les
cwtl
lcall
fdivrs
xlat
sub
push
mov
imul
fiadds
sbb
jecxz
push
xlat
test
push
or
push
je
aas
dec
sub
pop
std
xor
adc
outsl
out
ficoms
in
sti
jne
sbb
xor
mov
outsb
cmpsl
fwait
and
cmp
cmpsb
dec
aad
sahf
ja
pushf
xchg
mov
cs
inc
or
adc
add
xchg
fdivs
sahf
jns
push
mov
mov
sarb
adc
ret
xor
fwait
mull
loopne
dec
sub
mov
mov
lahf
mov
cmc
sub
xor
mov
push
lods
out
inc
pop
jne
mov
gs
repnz
fwait
mov
sahf
sbb
inc
lods
js
xchg
mov
mov
push
rorl
mov
aad
push
arpl
jns
push
in
aad
dec
jp
cmpsl
sub
shl
cmp
xlat
addr16
xor
inc
es
and
rcrl
mov
add
call
mov
pop
jecxz
pop
pop
dec
shl
subl
fidivrl
imull
inc
inc
movsb
push
clc
cmpb
adc
mov
add
inc
shll
imull
orb
sub
sub
dec
stc
outsb
shl
mov
cmpl
pop
jns
sbb
mov
repz
sarl
xor
or
pushf
push
pop
dec
in
xchg
fs
inc
arpl
xor
pmaxsw
repz
repz
js
pop
mov
idivl
jge
mov
xor
xor
dec
repnz
add
push
mov
call
sub
daa
sub
cmp
movsb
xchg
or
mov
int
xchg
cmpsb
cs
popa
in
mov
inc
fwait
push
xor
das
lret
dec
add
and
mov
aam
shl
jo
jbe
sbb
or
ds
jno
mov
add
fwait
std
lcall
push
dec
push
dec
lahf
xchg
inc
enter
add
nop
monitorx
or
incl
mov
jg
dec
cmp
jl,pt
cmpb
loope
inc
repnz
mov
bound
bound
inc
lret
sub
and
leave
cwtl
fistl
push
jecxz
dec
mov
scas
iret
aaa
std
lds
xor
fucomip
dec
adc
lcall
jmp
pop
cmp
leave
sub
dec
outsl
mov
and
push
mov
xor
inc
sbb
sub
and
pop
roll
iret
pop
cltd
mov
adc
decl
xchg
sbb
fwait
repnz
mov
icebp
loopne
sbb
daa
mov
inc
popf
icebp
mov
faddp
pop
test
jl
push
sub
data16
xchg
xor
inc
shl
mov
or
pusha
xor
icebp
loop
mov
in
lock
aas
xor
mov
push
fucomi
lret
sub
xchg
add
push
iret
shl
push
dec
cmp
mov
ds
push
sub
adc
imul
xlat
mov
mov
call
mov
inc
daa
aas
sub
iret
adc
nop
push
pop
sub
addl
inc
imul
cmpl
push
dec
and
enter
cmp
shl
dec
xchg
loope
xchg
inc
aad
pop
sbb
cmp
jg
xchg
sub
aas
loop
sbb
cwtl
add
push
inc
pushf
fucomi
sub
insb
ret
inc
std
xchg
sub
jmp
push
xlat
jmp
mov
out
jge
pop
jne
push
adc
in
push
adc
dec
sub
push
inc
cmc
fisttpll
mov
gs
push
rcrl
mov
jns
xchg
sarl
sub
sbb
jb
sub
or
in
mov
insl
cmp
lea
push
xchg
cmc
sahf
jmp
das
push
mov
cs
shlb
jmp
and
xchg
leave
out
adc
xlat
gs
fcoms
inc
cmp
and
add
fidivl
mov
dec
mov
ss
xor
sub
cli
jge
adc
clc
mov
dec
sub
es
push
sbb
mov
xchg
cmp
lret
out
aas
or
xchg
cmc
stc
out
out
and
mov
mov
lea
addr16
cmpsl
inc
ljmp
aaa
loop
xchg
ret
ret
gs
xor
int3
jae
mov
int
mov
sti
cmc
and
dec
inc
add
test
adc
jb
fwait
bound
cwtl
jno
dec
sub
cmpl
pop
insl
in
iret
js
test
mov
cmp
loopne
repz
push
cmp
pushf
mov
add
jbe
dec
jo,pt
std
mov
hlt
push
push
or
lea
leave
sbb
mov
outsl
repnz
push
fidivrs
fisubs
in
popl
dec
pop
vandnps
xchg
sub
sbb
and
or
cmp
pop
out
fdivrl
dec
inc
fdivrs
jno
mov
push
mov
divl
push
cltd
mov
dec
jbe
cmp
cmp
dec
cmp
aad
and
stos
arpl
loopne
sub
rcrl
mov
jg
in
jp
cmpsb
stos
pop
loope
mov
xchg
or
cwtl
aam
mov
in
lock
pop
jno
cli
lds
inc
dec
sub
out
arpl
fisttpll
lret
xchg
push
fwait
or
mov
ss
lds
aaa
dec
aad
mov
cs
js
js
sbb
pop
mov
mov
mov
mov
adc
out
adc
xor
pop
push
cmp
mov
push
int3
in
cltd
in
iret
lret
dec
cmp
sub
xlat
push
or
stos
or
stc
push
xchg
in
pop
cmp
outsb
fs
push
shl
pop
ljmp
test
mov
jl
jb
lds
xchg
call
mov
fistl
mov
ror
outsl
lods
add
lods
hlt
or
enter
popf
movsl
insl
adc
fbld
shrb
sbb
jmp
jb
stc
cmp
lret
mov
scas
out
pop
repz
daa
in
mov
xor
dec
ljmp
sub
and
rcll
pop
dec
mov
lret
mov
mov
dec
popf
mov
lods
pop
loopne
lock
push
arpl
inc
pop
lcall
mov
lods
and
and
jle
or
arpl
repz
inc
sbb
push
cltd
xor
sub
xlat
and
nop
push
pop
jns
jbe
loopne
and
imul
mov
das
data16
rcrb
rcrl
mov
cmpb
and
enter
sub
cmp
aaa
cmp
xchg
stos
fists
aaa
out
addr16
gs
mov
dec
int3
push
inc
cmp
inc
leave
push
pop
cmp
pusha
jbe
dec
in
shlb
fldenv
shll
xchg
mov
mov
outsl
sub
sbb
jge
inc
add
icebp
mov
cli
mov
lds
or
shll
cmc
push
and
pushf
fmull
cmp
jne
push
out
sahf
sub
in
or
fldenv
cs
xchg
adc
shll
sbb
push
xchg
sub
cmc
sbb
orb
push
cmp
push
es
mov
and
dec
cmp
iret
jae
iret
sub
push
jle
mov
pop
mov
fnstsw
bound
arpl
fcomp
insl
xchg
pusha
dec
ret
cltd
dec
pop
es
jno
imul
cmpsl
add
and
push
dec
push
cmp
mov
loopne
in
outsl
clc
ds
mov
lea
fdivl
pop
sbb
cmp
mov
in
ja
push
imul
sbb
mov
aam
and
in
jg
push
stos
pop
mov
push
outsl
pop
popa
xchg
and
and
xor
xor
cmp
mov
lods
inc
ljmp
cmp
push
xchg
stos
xor
jne
sub
lret
aas
outsl
aas
stos
inc
and
int3
int
test
daa
or
fbstp
leave
movsb
fisubrl
dec
les
ret
push
xor
sbb
xor
jl
sbb
xor
cmp
mov
push
outsb
stos
xor
pop
std
add
sub
fnstenv
loopne
cmp
testl
push
push
loope
movsb
leave
jmp
arpl
xor
lea
fildll
lcall
push
data16
arpl
mov
cmp
dec
pop
cmovle
pusha
std
leave
sbbb
into
xchg
xor
mov
mov
loop
repz
js
int
cwtl
sbb
loop
and
xchg
out
mov
xor
xchg
aad
mov
inc
lret
loop
add
out
mov
addr16
int3
mov
or
or
lods
sub
int
xchg
decl
arpl
dec
jle
jmp
adc
fiaddl
ret
jno
dec
sbb
inc
dec
lds
pop
pop
mov
sub
pushf
mov
repnz
arpl
mov
shr
popa
outsb
stos
add
outsb
push
test
sub
pop
stos
xchg
aaa
mov
push
add
mov
popf
nop
pop
adc
or
lcall
add
shlb
cmc
push
push
hlt
mov
and
and
int
js
fistpl
leave
movl
mov
in
mov
scas
aas
imul
sub
pop
sub
addr16
mov
cmp
pop
sub
loop
loopne
inc
dec
pop
insb
imul
out
int3
rorl
mov
mov
lahf
inc
addr16
pop
mov
fstpt
xlat
scas
out
xchg
cmp
jb
mov
xchg
xor
mov
mov
movl
enter
test
cmp
sub
mov
popf
icebp
subb
or
mov
test
lahf
push
pop
adc
push
cltd
and
xor
mov
push
lcall
mov
outsb
frstor
mov
popa
mov
pop
outsl
pop
frstor
xor
ret
sbb
mov
stc
sub
scas
mov
cmp
shll
adc
mov
xor
cmc
mov
jo
ja
outsl
pop
and
movsl
sub
mov
call
aas
inc
scas
mov
adc
xchg
push
orl
jmp
inc
leave
scas
xchg
cmp
cmp
mov
jbe
dec
mov
test
call
faddl
stc
mov
jmp
jge
push
pop
xorl
lds
jnp
das
fsubs
outsl
fidivrs
test
jae
add
sub
jmp
sub
mov
add
push
add
inc
scas
xor
and
sub
or
pop
mov
int
ja
mov
repnz
aam
sbb
cmp
into
fmul
fwait
xor
sbb
pop
inc
pop
scas
arpl
pop
out
test
lock
int3
mov
push
inc
dec
xor
mov
imul
es
out
repz
sahf
test
sbb
or
xor
dec
lret
ret
sbb
test
out
fildl
cwtl
jb
sbb
xor
adc
xlat
inc
fiaddl
daa
sbb
adc
lcall
loope
jl
repz
mov
arpl
imul
cmpsl
xor
cmova
cmpsl
rolb
jl
cs
or
loopne
cld
lods
inc
fnstcw
cld
cmpsb
out
je
pop
or
ror
sub
sub
push
idivb
mov
aaa
ljmp
pop
cltd
leave
arpl
das
mov
mov
pushf
adc
dec
into
mov
xor
dec
mov
nop
sbb
fsubrs
inc
add
mov
cltd
push
dec
arpl
mov
or
aaa
xor
jmp
dec
icebp
rcl
sarb
fisubl
push
dec
push
adc
mov
jl
scas
loopne
into
and
aaa
lea
popl
xchg
or
inc
mov
popa
fwait
stos
add
in
sbb
and
and
movsb
xchg
push
lods
insl
inc
push
sbb
sub
popa
mov
dec
enter
insl
das
inc
xor
lds
pop
jle
jecxz
jo
iret
jmp
jb
push
jnp
mov
push
adcl
and
sub
push
mov
shll
push
sbb
shlb
mov
xchg
pop
fnstcw
push
je
jg
lea
fimuls
or
or
cs
inc
andb
inc
and
inc
xor
in
fimull
lret
mov
rcrb
cltd
popf
out
cmpsb
adc
stc
test
ror
inc
jp
jp
les
js
orl
inc
mov
xchg
pop
sbb
sahf
xchg
mov
outsb
out
popa
scas
cmpsl
jecxz
xchg
or
mov
inc
cmp
sbb
lret
sub
dec
test
enter
pop
cli
scas
std
mov
pop
cwtl
jnp
pop
jo
scas
jmp
adc
add
jecxz
push
mov
lds
jo
movsl
psubusb
mov
stc
loop
push
mov
cltd
xchg
sarl
or
xor
outsl
xor
inc
pop
pop
push
icebp
mov
jo
fprem
aaa
or
push
push
sbb
testl
inc
or
subb
sbb
xor
cmp
and
sbb
mull
lret
and
lret
pop
push
pushf
push
cwtl
fadd
sti
sbb
inc
test
andb
adc
ja
cmp
je
cmc
jmp
fiaddl
add
push
hlt
enter
es
jo
push
stos
bound
stos
xor
imul
mov
mov
rorl
push
dec
stos
sti
frstor
mov
imul
shl
push
nop
jp
cmc
fwait
in
inc
xor
mov
cmpb
xor
ljmp
movsl
dec
clc
adc
sub
mov
dec
inc
fisubrs
xor
sub
cmp
inc
idivl
dec
adc
lret
cmpsb
push
mov
cmp
sbb
lds
xchg
inc
rolb
popf
inc
ret
push
mov
stos
jl
adcb
insb
and
and
add
push
rcl
sarb
add
dec
inc
or
mov
ficompl
dec
int
call
sub
pushf
push
sahf
imul
dec
add
int
push
push
icebp
mov
pop
repnz
je
sbb
mov
in
outsl
xchg
test
add
sbb
in
shll
xlat
pop
mov
ret
cwtl
dec
enter
pop
jns
add
hlt
sbb
fwait
rcll
sbbb
daa
sbb
inc
sub
test
lock
sbb
into
or
mov
imul
ss
jmp
test
mov
jo
fldl2t
test
lods
aam
ja
mov
stos
mov
adc
outsb
adc
and
outsb
stos
adc
inc
add
mov
fwait
scas
les
repnz
xchg
popa
outsb
mov
cmp
mov
aad
repz
fnsave
inc
repz
sbb
nop
ficompl
push
repz
sbb
rorb
cmp
xchg
fstps
sub
sbb
and
cmp
cmpsl
cmpsl
or
sbb
aad
fs
xor
popf
xlat
mov
mov
jb
mov
mov
xor
jo
sarb
ret
cmp
adc
cltd
sub
cs
cmp
pop
adc
out
into
mov
js
in
fimuls
jmp
loopne
fsubrl
jbe
add
or
into
mov
xor
pop
mov
adc
adc
mov
es
mov
cmpl
repnz
cmp
xchg
jbe
push
cmp
push
rclb
jnp
jbe
adc
sub
jge
loop
cmpl
jle
push
in
and
cmp
mov
fldl
jnp
and
pop
or
aas
testb
mov
cld
imul
cltd
mov
and
or
or
pop
add
mov
repnz
je
call
push
xor
mov
jo
popa
out
mov
sub
fs
mov
dec
jle
loope
repz
inc
lahf
and
sahf
mov
pop
cli
adc
jb
sub
adc
xor
xor
xor
pop
push
mov
jns
fcoml
dec
dec
rorb
adc
addl
or
insb
sahf
xchg
pop
cmp
add
mov
in
mov
mov
pop
aaa
dec
cmp
mov
clc
loop
push
jle
paddq
mov
roll
jl
popa
mov
nop
dec
cmp
or
cmpsl
shlb
push
shrb
pop
cltd
push
and
cld
or
lea
iret
fbstp
sti
decl
mov
inc
inc
inc
les
mov
test
and
repnz
sar
sub
and
xor
push
xchg
cld
pop
cltd
ja
in
cmp
mov
pop
test
and
dec
insl
jp
inc
mov
insl
popa
lahf
movsb
or
cmp
loop
in
stos
ljmp
ds
andb
mov
jbe
mov
inc
inc
xchg
out
mov
jbe
loopne
cld
sahf
in
fsub
sub
sbb
fimuls
mov
jae
dec
inc
stos
push
adc
sub
mov
outsb
push
daa
jle
mov
add
push
ljmp
int3
aaa
sub
repnz
les
dec
fadds
mov
inc
daa
add
mov
jp
sub
not
ret
xlat
cmpl
fisubrl
cmp
mov
xchg
pop
mov
test
outsb
mov
inc
enter
lods
aam
and
xchg
jecxz
mov
adc
jg
mov
test
and
push
dec
test
push
or
lods
sub
mov
cmp
pop
out
jg
dec
sub
scas
xor
push
mov
add
sbb
sbb
lahf
sbb
xchg
in
out
call
stos
jne
xor
jnp
insl
push
jl
jl
testl
sbb
sbb
xor
xor
mov
xchg
push
rorl
push
mov
insl
jecxz
push
cmp
popf
in
inc
push
mov
mov
dec
lock
mov
in
dec
sbb
pop
push
aas
stc
xchg
mov
rorl
push
ror
jg
in
mov
idivb
mov
xchg
push
lods
sub
out
mov
lahf
fisubrl
hlt
frstors
pushf
into
mov
in
mov
insb
mov
and
js
xchg
push
aam
divb
push
cmp
dec
outsl
xchg
lea
mov
stos
movsl
pushf
stos
rorb
scas
clc
insl
cwtl
adc
loopne
out
pop
and
mov
insb
mov
adc
and
sub
cltd
lods
jnp
add
clc
mov
in
push
adc
jnp
cs
test
aaa
loope
out
add
aaa
nop
sbb
sbbb
mov
cli
pcmpgtb
jge
ja
ret
inc
stos
add
push
cs
mov
stc
aaa
mov
scas
mov
out
push
sbb
inc
adc
pop
push
shr
push
rcrb
cmp
sub
and
data16
mov
adc
push
popa
add
pushw
aas
mov
push
push
push
push
clc
dec
shll
loopne
pop
push
mov
sub
insl
pop
push
mov
add
xchg
je
enter
divl
adc
ljmp
lods
cmp
js
inc
aad
and
add
xchg
mov
xor
popf
sub
add
push
jns
mov
mov
arpl
les
sbb
cmp
mov
inc
andl
je
jl
ljmp
mov
iret
inc
cld
addb
mov
sbb
in
in
push
popf
ljmp
test
inc
in
ds
push
or
mov
in
push
jo
mov
jo
test
or
and
fisubs
push
and
outsl
lret
xchg
dec
andb
std
scas
loopne
cmp
pusha
and
dec
adc
pop
je
sbbb
xchg
je
jl
mov
dec
out
jno
fucomi
call
push
mov
les
ret
push
in
out
addl
mov
adcb
fs
shl
vaddpd
pmullw
test
rcrb
push
test
jno
or
cmp
sub
push
addr16
mov
dec
faddl
in
les
jo
ds
adc
fldenv
xlat
mov
lret
in
lcall
inc
or
ljmp
jge
outsb
mov
cmp
mov
xor
jae
fimuls
pop
xchg
std
leave
jg
mov
enter
out
lret
out
movsl
ret
sub
xchg
xchg
sub
int
inc
out
mov
jo
mov
fsubrl
icebp
jg
jns
icebp
ja
inc
data16
arpl
jmp
gs
cmp
dec
xchg
arpl
inc
jge
stos
aam
push
ljmp
dec
inc
repz
lret
repnz
mull
jnp
loope
adcl
jae
imul
addl
jne
xor
iret
out
rorb
jle
jo
push
cmp
mov
and
jg
inc
ja
jne
mov
push
pop
movsl
outsb
jno
into
add
ds
clc
popa
fistl
sti
add
jl
adcl
xchg
xorb
cmc
fdivrs
fmull
stc
push
pop
mov
cwtl
sbb
add
mov
addl
in
jnp
aas
repnz
pop
subb
sti
movsb
out
sahf
cmp
sarb
add
jg
subl
popf
pop
sub
xor
jbe
leave
bound
pop
xchg
popf
mov
cwtl
ds
in
jbe
jecxz
or
insl
jecxz
enter
adc
ja
xor
pop
mov
test
ret
popf
mov
push
in
fwait
cmp
xor
push
cmpl
bound
add
jae
sbb
push
sbb
mov
dec
jb
gs
or
cmp
sub
movsb
or
or
xchg
add
pop
mov
sahf
mov
jnp
mov
adc
sbb
fdivrs
push
ja
cltd
mov
push
in
rcl
dec
mov
lcall
aaa
aaa
and
pop
sub
jae
or
stos
stos
lret
dec
xchg
into
ss
dec
jle
ret
inc
cltd
jnp
add
mov
mov
repnz
rcll
lahf
adc
sbb
mov
sbb
popf
push
sbb
leave
js
in
lret
pop
imul
jg
jbe
out
xchg
cmpsb
cmp
dec
jae
repnz
pop
cmp
out
ret
ret
repz
out
and
mov
bound
sbb
push
cmp
lret
xor
js
fidivrs
cmc
test
pushf
add
jno
inc
pop
sbb
pop
cmp
sub
push
pop
push
and
popa
xchg
sub
mov
inc
mov
imul
icebp
incb
cmpsb
fcompl
mov
nop
xor
add
popf
add
fisttpll
cmp
xlat
xor
add
loope
xor
aad
sub
gs
mov
mov
jbe
fbld
imul
and
jmp
sub
jae
xor
dec
aam
cmp
push
sarb
out
cltd
in
in
insl
scas
mov
lock
jo
ljmp
add
cmpsl
sub
jo
add
nop
roll
or
pushf
arpl
into
add
jns
add
test
cli
aaa
mov
cs
xor
inc
fsubl
leave
adc
lahf
imul
xchg
mov
mov
dec
sub
pusha
and
popa
and
jns
loope
xchg
cwtl
xor
sub
xor
jb
jl
mov
rcrb
dec
mov
push
in
inc
jmp
sbb
fstpt
mov
dec
clc
movl
gs
push
mov
mov
lret
and
hlt
ss
jo
add
imul
dec
roll
iret
std
sbb
movsb
rorl
pushf
and
shrl
mov
inc
add
mov
cwtl
cmc
pop
mov
das
mov
mov
xchg
mov
and
pop
cs
shlb
aas
and
or
xor
mov
sahf
sbb
stc
cmpsb
inc
hlt
dec
movsb
or
sti
outsl
mov
xor
daa
dec
or
cld
push
hlt
insl
mov
dec
mov
push
sti
cmp
jae
pusha
mov
xchg
xlat
xchg
push
push
mov
sub
int3
dec
clc
mov
mov
daa
in
scas
xor
mov
pop
pop
rorb
xchg
mov
dec
push
mov
push
sbb
cli
into
nop
dec
rorl
cmpsb
addr16
aaa
ljmp
mov
pushf
xchg
jne
cmc
cwtl
and
dec
or
xchg
shl
push
sub
and
jg
lret
fwait
push
ficoml
adc
je
adc
inc
loope
adc
rcrb
xorl
mov
xchg
shll
gs
pop
daa
inc
in
push
adc
jo
outsl
pop
pop
jns
and
nop
and
addr16
arpl
and
cmp
loopne
or
shrl
pop
xlat
sub
inc
addb
add
daa
pop
jno
sbb
add
jle
dec
dec
or
dec
icebp
push
imul
pop
fucompp
nop
sahf
into
dec
imul
and
sti
repz
mov
ficompl
orb
or
mov
push
cmp
js
cmc
xlat
dec
sub
inc
pop
rorb
cmp
push
push
es
rcrl
testl
or
in
loop
hlt
pop
push
popa
enter
incb
imul
and
repz
xor
jae
ret
test
and
xor
push
in
iret
clc
or
das
fisttpll
into
push
jle
xlat
and
xor
xor
pop
call
or
cltd
jae
sbb
mov
fadds
stos
stos
rclb
stc
fwait
aam
outsb
xchg
mov
adc
xchg
popa
mov
sub
loope
andl
mov
stos
and
mov
stos
pop
add
test
test
sbb
shrl
outsb
sub
xchg
xchg
jmp
push
fiadds
add
jbe
std
jae
pop
dec
sub
loopne
push
push
jo
push
fwait
xchg
adc
dec
sbb
inc
dec
adc
rol
inc
ficompl
popa
dec
mov
xchg
and
mov
out
sbb
xchg
push
add
sbb
ds
shlb
test
dec
and
xor
lods
fisubrl
out
xlat
adc
xlat
mov
sbb
mov
adc
push
inc
jns
xchg
sub
cltd
sarl
push
push
into
popa
scas
xchg
leave
popa
xchg
dec
decb
data16
imull
mov
ret
ret
mov
fisttpl
mov
repz
mov
imul
dec
call
or
fsubrl
out
mov
sbb
shll
fwait
push
jo
rolb
iret
jl
jo
lods
out
xorl
xchg
xchg
cmc
shr
push
jne
mov
mov
pop
out
pop
inc
mov
or
sbb
sbb
sbb
and
les
xchg
jns
or
mov
sbb
push
ss
ljmp
pop
mov
xchg
or
int3
push
loopne
stc
loope
cmp
addb
push
lcall
jns
sub
xchg
repnz
pop
jo
imul
fwait
pop
mov
arpl
aaa
mov
loopne
mov
scas
aas
jne
out
out
aam
out
loopne
xor
inc
out
jns
mov
xor
andb
xor
arpl
sbb
jnp
cmc
das
ret
sub
and
lret
ret
clc
ljmp
aam
dec
icebp
out
pop
dec
rorl
adc
push
popf
and
cmp
fwait
cld
ljmp
mov
aam
dec
lds
cmovne
jne
jne
aas
push
lret
fmul
inc
cld
ret
sub
inc
imul
call
cmp
mov
int3
fistl
shlb
test
stc
frstor
les
jb
push
push
outsb
mov
fcoms
fwait
out
fsub
lods
jmp
push
pop
scas
jno
mov
mov
jno
push
add
pop
mov
sub
xor
jp
test
xchg
mov
mov
push
adc
lods
pop
add
lods
jl
into
movsb
ror
leave
jl
inc
mov
cmp
loopne
stc
lret
xor
add
jge
loopne
addr16
in
dec
imul
icebp
arpl
add
gs
loop
orl
mov
cmp
lods
ja
loop
dec
mov
aam
popa
cmp
lret
jmp
adc
pop
inc
add
xchg
test
dec
and
xchg
jmp
pop
mov
dec
sub
shlb
shll
mov
div
cs
push
rcrl
mov
repnz
in
mov
or
push
push
mov
movsl
jmp
xchg
push
pop
pop
add
mov
out
js
push
xor
mov
push
mov
or
roll
and
pop
jecxz
cmpsl
push
mov
outsb
xchg
adc
inc
out
xchg
fldcw
jo
push
in
gs
mov
jge
mov
mov
cmp
adc
inc
idivl
dec
and
or
mov
fcomps
movsl
addr16
and
clc
cmp
sbb
rorl
int3
jle
xchg
or
imulb
adc
shll
lea
out
mov
mov
jns
pop
pop
or
cmc
push
popf
pop
popa
add
stos
cmp
or
lret
and
xchg
or
xor
mov
ja
cli
xor
cmpb
addr16
cmp
cmp
push
inc
outsb
xchg
mov
inc
sbbl
enter
aaa
or
pop
sbb
adc
or
push
mov
xor
push
or
mov
test
filds
xchg
inc
lods
ljmp
ret
cmp
stos
sbb
cmp
push
lock
xor
cmp
mov
add
cmp
ss
push
xor
sbb
cmpsl
shll
or
mov
pop
inc
test
jne
jmp
jecxz
inc
fisttpll
sahf
or
scas
loopne
imul
dec
test
cmp
mov
cmpsl
push
sub
cmpsl
xchg
jmp
dec
sbb
jg
xchg
adc
push
adc
iret
xlat
pop
dec
es
push
sub
cld
cmp
pop
fcomip
xchg
mov
addr16
adc
adc
xchg
lods
scas
xor
hlt
dec
jne
and
ds
cmc
scas
jnp
insl
jle
pop
mov
lds
and
jmp
js
cld
loop
adc
xlat
mov
ret
mov
movsl
push
mov
or
cmpsb
cmp
mov
aas
aad
xchg
bound
mov
sbb
das
pop
leave
lds
jle
ja
mov
dec
in
xor
adcb
push
mov
sbb
dec
xor
shll
cmpsl
into
data16
xchg
leave
pop
mov
sbb
lods
scas
daa
jp
adc
loopne
mov
sbb
mov
inc
adc
stc
push
sbb
xchg
sub
or
mov
pop
or
cmp
cmp
jns
mov
mov
push
xchg
inc
fiaddl
lahf
call
add
add
sti
in
clc
hlt
addl
mov
mov
dec
test
xchg
mov
xrelease
out
mov
add
pop
fsubr
mov
bound
dec
xchg
rcr
adc
nop
rolb
xchg
jmp
jmp
mov
out
int
xchg
push
cmp
cs
or
mov
orl
mov
and
sbb
sbb
or
inc
jnp
aas
imull
test
or
pop
out
lock
popf
shll
inc
jecxz
arpl
loopne
sub
icebp
cld
xor
call
jo
cmpsl
aaa
jl
pusha
out
fstpl
stc
mov
les
add
mov
in
ljmp
int
dec
push
dec
mov
scas
cmpsl
xchg
test
fwait
lcall
pop
xchg
loopne
jecxz
in
add
mov
ds
xchg
mov
imul
sbb
sbb
in
shrb
dec
in
arpl
jg
les
dec
cmp
and
cmp
xor
adc
nop
cs
xor
mov
fimull
lods
or
push
pushf
inc
insl
sub
jb
sbb
dec
xchg
dec
pop
int
push
pop
fistps
mov
sub
xchg
inc
push
shl
add
or
cmpsl
xchg
and
cmp
aas
push
ss
pop
stos
outsb
pop
insl
or
push
lret
sub
mov
mov
repz
jnp
cmp
jno
sbb
lcall
sarb
push
jnp
xchg
cmp
repnz
lock
sahf
dec
sbb
mov
inc
vpsrlq
xchg
mov
sub
or
cmp
sub
pop
insb
insl
sbb
aad
ljmp
add
out
out
cmp
adc
inc
adc
xchg
es
fs
arpl
lcall
dec
and
jg
je
popf
adc
popa
mov
out
sub
and
rolb
bound
pop
pusha
cmp
int
push
je
imulb
mov
add
rclb
sbbl
push
push
mov
pushf
push
rcl
push
loopne
xor
cltd
jmp
fisttpll
sbb
adc
test
cltd
cmp
xor
jns
dec
loopne
sti
hlt
sub
pushw
rcrl
push
sub
call
push
cmpsb
xchg
jmp
enter
xchg
outsl
jne
int
ljmp
jbe
sahf
enter
mov
pop
adcl
stc
pop
adc
mov
dec
adc
sub
xchg
pusha
inc
adc
in
fisubrl
clc
in
mov
inc
adc
pop
sub
mov
sbb
push
cmpsb
icebp
jmp
call
push
inc
into
pusha
iret
and
lock
jmp
insl
or
ljmp
adc
jl
sub
fisubl
push
rcl
jg
outsl
imul
mov
clc
or
inc
jge
mov
movsl
cwtl
mov
mov
mov
dec
cli
cmp
cmp
leave
or
adc
inc
ja
imul
cmpsb
xor
push
ja
pop
mov
xor
punpcklwd
mov
or
shrl
fiaddl
sub
mov
mov
enter
mov
mov
js
add
jae
cmp
mov
arpl
dec
xor
cmp
je
mov
xor
xor
not
mov
imul
outsb
call
fbld
js
shll
hlt
lea
push
adc
pusha
push
adc
rcrl
push
js
cmpsb
aas
or
dec
xchg
fyl2x
das
adc
aad
scas
mov
mov
sbb
mov
stos
rolb
pop
mov
aam
push
push
xor
mov
mov
pushf
int
xchg
outsl
jae
mov
xor
in
cmp
int
bnd
and
push
outsl
sbb
repz
pop
loop
and
xlat
inc
mov
cmpsl
push
leave
xor
pop
jmp
pop
sti
pushf
adc
push
mov
add
lahf
adc
mov
lea
push
xor
int3
adcl
clc
test
insb
cmp
imul
mov
lret
mov
xchg
push
mov
add
mov
adc
data16
cmp
clc
mov
sbb
sbb
cmp
or
rcr
sbb
std
daa
jae
inc
lret
inc
sbb
inc
push
mov
fwait
adc
mov
mov
addr16
or
sub
cmpb
out
xor
iret
xor
add
mov
iret
xchg
sahf
dec
js
pusha
cli
and
and
bnd
pop
jns
add
push
push
lret
jns
int3
jno
add
movsl
adc
mov
mov
xchg
push
xor
dec
sub
out
lock
xchg
inc
cmp
fs
cld
mov
jae
shll
sub
jle
daa
js
mov
or
and
and
icebp
faddl
add
repz
jge
hlt
add
cwtl
cmp
in
cli
stc
xor
adc
ds
movsl
jns
pop
add
push
clc
in
cli
mov
mov
mov
cli
sbb
int
pop
insl
dec
popf
inc
pusha
mov
inc
loopne
push
shr
adc
arpl
and
enter
pushf
push
push
filds
mov
les
sub
push
pop
mov
xchg
mov
cmp
jns
push
data16
jp
adc
push
xor
or
or
pop
aad
testl
mov
mov
push
or
mov
pop
lods
insl
aad
leave
lea
aaa
fiadds
stos
pop
cmpl
fists
testb
add
stos
je
dec
mov
setno
lret
inc
cmp
mov
jae
test
adc
lods
aas
cld
pop
sub
fdivrs
mov
ja
adc
iret
icebp
ret
push
dec
sahf
pushf
cmp
push
jmp
divb
mov
int
ss
jg
mov
mov
adc
jmp
jge
lahf
aam
or
jp
scas
xchg
inc
out
je
xchg
cmpsl
xchg
adc
into
call
pop
jmp
push
xlat
sarb
jg
push
pop
rcrb
int3
insl
pop
and
imul
imul
pushf
arpl
mov
xor
xor
idivl
loope
or
xor
push
les
or
scas
mov
mov
add
jnp
cmc
jg
mov
pop
pop
pop
movsl
cmp
in
loopne
subl
mov
dec
pop
out
imul
jbe
mov
pop
fimull
sbb
pop
and
inc
popa
jns
jno
sub
dec
out
iret
jmp
fwait
inc
lret
mov
inc
sti
cmp
add
mov
inc
or
es
imul
scas
pop
in
or
test
into
test
cmpsb
fdivl
jae
js
and
jno
jnp
add
xchg
inc
cmpsb
or
cmp
test
ja
mov
sbb
rclb
jo
cs
mov
pusha
sbb
add
les
mov
xchg
adc
or
mov
add
mov
repnz
or
xchg
push
jg
mov
insl
pop
dec
jae
add
nop
push
cld
movsb
lea
int3
sub
pop
sarl
jae
int3
daa
fxch
jg
xchg
data16
std
daa
mov
jnp
add
jns
push
pop
cs
xor
sahf
xchg
imul
dec
daa
mov
or
inc
sbb
jb
jbe
dec
cld
mov
dec
mov
adc
mov
es
pop
insb
and
sbb
movb
icebp
push
cli
insb
inc
scas
pushf
enter
sub
and
iret
idivl
cmc
adc
jp
cmp
push
inc
cltd
add
push
shll
mov
es
out
imul
jbe
insl
ss
sbb
sbbb
mov
gs
jmp
xor
out
sbb
sub
push
xor
or
enter
mov
and
push
int3
outsb
mov
rcr
int
in
es
xor
adc
in
inc
push
push
divb
push
scas
popa
test
ljmp
inc
xor
addr16
das
sbb
jno
sahf
pop
push
fcom
lcall
popa
mov
repz
sbb
and
jle
mov
push
icebp
sbb
and
lcall
sbb
int
stc
xlat
insl
or
sbb
out
mov
pop
movsl
inc
push
dec
pop
mov
dec
xor
bound
roll
fbstp
sti
and
sbbb
mov
gs
sub
gs
movsb
and
cmp
inc
in
or
mov
push
or
jecxz
mov
mov
sbb
cmc
fs
xchg
push
test
mov
xor
sub
sub
fwait
xor
pop
dec
jns
dec
int
push
mov
add
lahf
dec
pop
sub
fldenv
cmp
jne
ja
mov
inc
jae
or
or
xchg
adcb
xor
fisubl
sub
cmp
jne
or
sub
sbb
movsl
jns
lock
cmp
fisubs
and
arpl
daa
cli
xchg
popf
pop
sbb
sbb
xchg
push
adc
ja
call
andl
pushf
in
cmpsb
jno
leave
xor
jno
mov
rcr
repnz
test
cmpsb
push
or
pop
out
mov
jecxz
sbb
sub
pop
imul
push
mov
jnp
icebp
scas
push
sti
cmpsb
jb
pop
stc
xlat
jo
mov
js
cmp
adc
ficoml
push
out
aad
jmp
cltd
jmp
imul
xlat
mov
and
popf
add
push
iret
xchg
push
test
shll
mov
push
add
jecxz
inc
xor
repz
and
sbb
pop
mov
ret
ret
movl
push
adc
dec
push
loopne
sbb
je
pop
mov
cmp
lret
pop
xor
jmp
iret
xchg
inc
insl
scas
cli
xchg
mov
push
mov
xchg
rcl
imul
fisubrl
fwait
aam
rclb
jno
or
imul
clc
lods
xor
lcall
dec
dec
push
and
mov
jg
neg
loopne
add
iret
mov
sub
push
mov
inc
add
inc
sti
push
mov
jmp
cmpsb
dec
addr16
jno
repnz
fisttps
xchg
dec
paddd
fs
push
xchg
ljmp
pop
xchg
ret
mov
mov
addl
es
pusha
lods
jnp
cmpsl
test
mov
insb
fiaddl
xchg
inc
mov
dec
out
push
pop
and
inc
sub
inc
pop
cmc
insb
inc
subl
data16
dec
gs
cwtl
loopne
push
test
in
aaa
js
aas
pop
rclb
jnp
test
lods
insl
cld
or
mov
mov
int3
ja
adc
mov
inc
mov
add
imul
and
into
xchg
cmpsb
jbe
cli
xchg
xchg
push
or
mov
hlt
nop
push
xor
sbb
jp
dec
push
push
in
sub
test
mov
add
mov
adc
popa
cmp
mov
xchg
add
or
jne
subb
jo
mov
roll
fs
shlb
es
mov
sbb
fadds
mov
inc
fmul
fwait
or
out
stc
sub
sti
lcall
stc
les
mov
in
out
enter
pop
push
and
insb
stc
mov
pop
decl
gs
xlat
imul
ret
xchg
pop
mov
push
inc
sub
jg
jecxz
adc
sbb
and
out
cltd
jo
scas
push
and
aas
and
ja
cmp
pop
inc
aas
xchg
mov
mov
iret
js
ds
arpl
popf
aam
test
repnz
sarb
mov
inc
stc
adc
scas
push
jg
aad
addb
cli
nop
or
cmp
push
fisttpll
sbb
negb
shll
fnstenv
sub
movsl
fcomps
lods
mov
inc
pop
mov
sub
repnz
icebp
sbb
shrd
pop
mov
xchg
mov
sahf
out
loop
adc
inc
adc
ret
sub
cmpsb
movd
pop
cmpl
movsb
ficomps
push
xchg
push
shrl
xchg
sbb
fldcw
dec
jne
in
imul
or
jo
jg
and
cmpb
sbb
loopne
call
fcomp
aas
mov
inc
cmp
mov
sbb
push
cmp
mov
cmpsb
das
mov
inc
scas
fstps
aas
int
fwait
cs
mov
stc
mov
pop
mov
cmp
inc
cwtl
xlat
adc
inc
fimull
bound
fisttpl
stc
xchg
lahf
test
adc
sub
lods
cwtl
xchg
sub
inc
jne
inc
mov
jb
sti
iret
orb
cmp
jmp
push
dec
xchg
push
jne
pop
hlt
test
inc
mov
mov
sub
push
out
xor
cmp
into
and
and
jge
pop
mov
out
leave
imul
mov
mov
into
pop
pop
inc
cmc
and
dec
stos
lods
insb
adc
arpl
mov
add
inc
mov
enter
test
pusha
clc
jnp
xchg
push
cmp
mov
bound
pop
outsb
sub
xor
and
ja
int
mov
cmc
iret
scas
sbb
jae
sarb
andb
sbbl
mov
mov
pop
scas
xchg
mov
fstpt
jbe
adc
adc
pop
movsl
jno
cmpsl
arpl
xor
loope
mov
fadds
fisttpll
aad
or
inc
inc
cmp
test
orb
scas
inc
xor
jns
popa
aas
push
sti
xchg
add
pop
cmp
fistps
test
loop
fs
loop
jl
ficoms
fimull
sbb
dec
lds
popf
sub
fwait
test
in
lock
mov
pop
inc
xchg
daa
imul
incl
and
jns
addb
xor
orl
jno
es
sbb
jecxz
icebp
jns
outsl
mov
add
fiadds
cmp
sub
test
mov
mov
loopne
test
insl
bnd
sub
icebp
xorb
les
das
sub
cwtl
xchg
mov
repz
dec
pop
xchg
mov
test
ficoml
icebp
rcrl
daa
dec
std
pusha
push
adc
mov
adc
int3
lcall
scas
adc
roll
jnp
and
xchg
push
das
pop
pop
cmp
stc
subb
xlat
cmpsb
mov
pop
andl
pop
popa
cmp
ja
stc
push
jge
mov
push
jae
aam
adc
dec
jae
shlb
les
aad
shr
fstpl
icebp
and
dec
xor
xchg
mov
bound
sbb
ss
mov
push
xchg
add
inc
nop
rcll
and
xor
sub
ja
test
or
lods
or
subb
idivl
or
fimuls
pop
lahf
and
sub
in
cmp
mov
fwait
mov
pop
mov
lret
jg
lcall
adc
inc
sub
cmp
rcrl
jnp
xchg
or
cltd
mov
pop
lock
mov
nop
aad
lahf
and
adc
in
stc
les
adc
mov
and
test
jae
enter
sti
int3
loop
in
insb
jge
dec
rcrl
lcall
mov
pop
jle
cmp
jmp
test
mov
bound
mov
pop
mov
push
jne
jp
insl
push
imul
ss
movsl
adc
es
xchg
outsb
inc
and
jns
push
mov
or
dec
adc
fistpll
lret
cmpsb
leave
cmp
aam
pushf
jb
sarb
jb
cmp
dec
sbb
repz
cmp
add
lret
inc
xor
cmovae
les
push
xor
cmp
into
testl
sbb
pop
mov
lods
inc
jb
xchg
subl
push
xchg
sbb
pop
xchg
loopne
ss
jnp
ljmp
cltd
jl
inc
mov
jo
inc
adc
or
stos
je
inc
or
sub
xor
call
ret
xor
into
call
insl
or
pop
jne
mov
jmp
push
std
jo
inc
test
das
mov
push
insl
jl
aam
mov
sub
out
decl
xor
fmull
jge
sbb
cli
sbb
ss
dec
mov
rorb
push
aam
or
jno
in
pop
mov
sub
idivl
mov
mov
lahf
push
insb
xor
xor
leave
push
or
xor
int
cmp
or
mov
mov
fisubl
sub
mov
and
adcb
daa
mov
push
je
jns
test
dec
cltd
faddl
lds
call
xor
int3
bound
mov
jecxz
stos
out
xor
fildll
sbb
and
cmpsl
inc
lds
outsb
push
and
ss
mov
lcall
movsl
adcl
js
mov
mov
mov
scas
sbb
inc
movsb
dec
nop
stos
aas
outsl
sub
add
not
mov
push
pop
nop
push
push
cmp
popf
out
jnp
mov
in
sub
subb
leave
aam
fwait
cmp
inc
jge
xor
push
inc
jge
pushf
mov
fcoml
cmp
or
in
cli
es
popf
aas
jmp
enter
negl
shrb
sub
mov
lods
pop
jl
jge
or
add
arpl
push
mov
lods
sbb
cld
int
mov
push
test
sbbb
inc
cs
sub
cmc
and
notl
jecxz
cmp
xor
fmul
aam
repnz
dec
or
scas
pop
imul
inc
imul
clc
mov
aad
sahf
nop
cmpsb
cmp
sbb
stc
push
dec
insl
cwtl
stc
ficomps
mov
mov
and
outsl
pop
mov
inc
cmp
outsl
aam
push
cs
lret
popf
jnp
dec
out
sbb
imul
int
pop
sub
std
add
cmp
mov
push
ffree
jl
fisttpll
popa
sub
dec
imul
inc
aaa
add
popf
scas
sbb
jp
pop
dec
push
cs
scas
mov
xchg
push
sub
lock
jnp
xor
cmpsl
jo
test
ficoml
jp
pop
pop
popf
ret
mov
jbe
mov
sbb
imull
xchg
or
sbbb
pop
add
push
and
data16
sahf
out
jmp
ljmp
inc
std
movb
fsubr
mov
mov
and
adc
ljmp
push
push
ds
push
test
arpl
jns
fs
ljmp
mov
int3
add
pop
sar
push
sahf
scas
call
xchg
mov
mov
mov
push
loop
dec
cmp
sub
out
mov
pop
stc
dec
in
inc
pop
in
or
loope
in
aas
stos
xchg
js
and
inc
ljmp
pop
inc
mov
push
xchg
and
pop
push
jns
pop
dec
cld
jne
out
pop
mov
push
fs
in
push
fdivs
adc
jne
mov
mov
in
xchg
test
xor
sub
push
or
out
faddl
sub
mov
jbe
push
pop
sub
mov
adc
hlt
mov
lock
jns
adc
fucomp
inc
in
sub
cmp
mov
cld
scas
push
or
insl
sti
imul
cmpsb
xchg
addl
lret
jne
sbb
mov
push
jbe
mov
shr
insb
cs
push
mov
inc
lret
jns
sub
pop
cmp
xchg
sub
rorb
ret
in
imul
mov
jo
adc
mov
aaa
sbb
adc
ja
dec
inc
push
loopne
adc
mov
sbb
inc
inc
adc
sti
jmp
in
sbb
jmp
stos
add
dec
push
addr16
ret
mov
cwtl
dec
call
push
out
pop
xchg
aad
and
shlb
mov
mov
sti
sbb
cmp
sti
adc
jbe
or
or
cs
roll
cwtl
adc
push
test
xor
test
push
js
negb
dec
or
std
mov
cld
fwait
inc
cmp
xor
mov
shlb
sub
orl
jne
push
loopne
int3
push
outsl
and
xchg
hlt
imul
and
and
add
inc
movsl
andb
insl
shlb
mov
sub
in
cwtl
xor
cmp
fucomip
test
jge
cmpl
jg
dec
insb
pusha
xchg
enter
xor
fiaddl
xchg
aaa
mov
push
mov
fdivr
pusha
cmp
add
add
adc
xor
sbb
mov
sub
push
adc
sbb
mov
loop
lods
dec
lret
shlb
std
fcmovne
push
mov
rcr
imul
aaa
lods
jg
pop
jne
xchg
ss
inc
mov
test
out
stc
shl
out
jge
sub
pop
popf
add
push
cmp
loope
lcall
scas
jge
cmp
cmp
sbb
mov
daa
jp
bswap
sbb
mov
push
or
add
fstpt
add
out
das
fnstsw
imul
or
xchg
dec
outsb
xchg
jg
fldenv
pop
insl
test
push
inc
pop
add
fadd
add
imul
push
rcl
lods
or
mov
aam
pop
and
add
sbb
cld
and
fisttpll
mov
xor
lcall
cli
data16
lds
adc
push
add
mov
jno
in
sarb
cmpsl
inc
stc
js
loope
les
mov
inc
ljmp
pop
add
cmp
inc
lds
or
loop
call
xchg
dec
repnz
pop
loopne
bound
mov
push
xlat
push
popa
fucomp
movsl
cs
rclb
cmp
adc
mov
adc
out
mov
ret
cmp
mov
clc
mov
rcrb
fmuls
loop
mov
out
outsl
mov
or
je
mov
sub
into
xchg
imul
mov
cld
imulb
jnp
psubq
fstpt
xor
jno
fs
xchg
fistl
push
sub
sub
lret
sahf
sbb
sti
aas
push
mov
jae
push
imul
jmp
out
add
iret
ret
data16
fldenv
dec
lods
sbb
mov
fnstcw
aad
scas
mov
sbb
jg
das
andb
int3
hlt
dec
scas
inc
sub
xor
push
ficomps
hlt
and
lea
aas
outsl
adc
lret
cltd
popf
inc
push
xchg
cmp
cmp
or
jge
mov
sub
std
rclb
andl
stos
sbb
jnp
adc
arpl
sbb
stc
xor
lods
dec
fs
push
adc
mov
push
scas
inc
or
iret
aam
cmp
test
mov
sub
pusha
cmpsl
andl
inc
ss
fs
clc
fimull
les
sbb
sub
lret
test
arpl
adc
add
jg
lcall
lcall
ficoms
push
add
int3
test
andl
test
jmp
jae
mov
lock
jno
out
insb
jns
jb
outsb
jbe
inc
loop
and
or
outsl
sbb
sub
mov
mov
shlb
loopne
je
fnsave
pushf
outsl
xor
test
test
cmp
xchg
cmp
loopne
dec
les
jne
push
xchg
jle
lret
movsl
lods
mull
lds
add
pusha
testl
mov
rcrb
pushf
imul
add
btc
in
jnp
mov
jo
mov
popa
fwait
rclb
inc
lcall
in
adc
out
loopne
sub
outsl
push
addb
sbb
mov
fldcw
adc
sbb
xchg
or
fbld
inc
mov
sahf
imul
rcrb
call
mov
sub
pusha
xchg
mov
push
ljmp
push
mov
adc
jnp
pop
jno
cmp
dec
rolb
mov
xorb
jmp
push
fildl
pushf
insb
out
push
mov
andl
push
adc
xor
push
pop
adc
nop
xchg
cmp
jle
cwtl
sub
dec
cs
test
popa
addr16
fcmovne
and
ret
out
scas
add
data16
fcmovnu
js
fiaddl
ret
in
jo
xchg
pop
xor
jg
divb
stc
or
push
xchg
mov
test
into
or
xchg
mov
cmp
sbb
dec
nop
mov
lods
test
mov
push
shlb
mov
cmp
adc
lods
in
into
out
dec
repnz
mov
mov
add
je
push
sbb
loopne
popa
test
int3
scas
sti
imul
icebp
add
loop
sbb
popl
push
mov
lods
out
pop
repz
push
inc
movsl
das
pop
or
and
ds
add
ds
ret
outsb
sub
test
sub
movsb
fsubr
rorb
test
xor
dec
imul
pop
in
jmp
xor
in
or
xchg
icebp
push
xchg
pop
mov
rcr
icebp
lahf
inc
mov
mov
insb
test
push
dec
pop
cmp
paddusw
jmp
push
test
cmp
pop
xor
pushf
in
mov
mov
sbb
repz
aas
jle
loope
sbb
outsb
lcall
dec
and
or
mov
mov
lret
movsl
mov
xchg
aam
dec
adc
sub
inc
jmp
mov
loope
inc
repz
int
sbb
xchg
cmp
and
cmpsl
xor
cmpb
sti
lahf
push
mov
cli
pop
cmpsl
jne
imul
xchg
loop
xchg
fcompl
xor
jno
mov
movsb
jle
sub
popf
out
mov
test
sahf
fwait
pop
test
loop
pop
out
out
mov
mov
push
cmc
inc
dec
icebp
dec
sbb
jno
lcall
dec
inc
les
mov
int
lds
jl
rolb
sub
sbb
sbb
and
es
pop
xchg
and
or
push
lret
arpl
je
xchg
lret
subb
aas
or
push
rcll
sbb
or
loopne
shlb
pop
cld
rolb
aam
jbe
dec
dec
and
inc
js
scas
hlt
or
jb
sti
mov
xor
xor
test
xor
mov
ret
add
xor
dec
xchg
inc
cmp
pop
fsubrl
and
incb
jnp
imul
push
outsl
scas
push
fldln2
in
cmp
sahf
out
sub
mov
test
inc
and
dec
movsb
enter
test
dec
dec
int
je
cmp
rcr
imul
and
sarb
lcall
xor
dec
and
in
or
and
gs
jecxz
xchg
in
orl
rcl
adc
roll
xchg
jns
inc
mov
les
mov
out
mov
es
xchg
mov
lret
call
daa
je
fwait
dec
add
movsb
pop
xor
dec
insb
and
sti
fstpt
pop
mov
data16
fldcw
and
shll
insl
lods
filds
in
bound
mov
scas
dec
and
repz
insl
or
dec
pop
sub
ljmp
mov
jbe
das
sarl
rorl
std
xor
or
lahf
cltd
jl
jmp
stc
ret
test
outsb
pop
gs
adc
push
lods
out
sub
mov
das
sbb
jns
pop
fisttps
mov
jmp
dec
jne
pop
jl
in
adc
sbb
mov
pop
xchg
jg
dec
daa
pusha
in
test
or
fldcw
cmp
je
enter
sub
mov
lret
pop
fldl
adc
push
pop
in
aas
daa
cmpsl
mov
add
in
mov
push
test
jg
pusha
addr16
mov
inc
roll
push
daa
adc
push
push
std
mov
add
push
cmp
and
movsb
rol
mov
add
frstor
pop
mov
jns
xor
add
ret
pop
jle
xor
cmp
lcall
cmp
sub
int3
mov
mov
jl
xchg
jne
inc
jge
mov
adc
jo
ds
stos
and
fsubl
test
mov
pop
xchg
or
test
idivl
and
mov
cltd
fldl
fadds
jae
xor
movsb
and
mov
push
hlt
xchg
lods
in
popf
or
pop
int
jns
ss
add
jbe
xor
icebp
sbb
dec
inc
sub
test
sbb
test
sub
mov
rolb
cltd
loopne
movsb
or
pop
popa
cmp
pop
cmp
bound
aam
mov
pop
mov
cmp
test
fidivl
mov
sub
movsl
dec
jmp
insb
mov
xor
aaa
push
repnz
cmp
and
stos
push
mov
insl
cs
sbb
arpl
sbb
or
lea
gs
sti
jb
gs
push
jp
push
add
cwtl
out
mov
fstps
or
in
sub
sub
push
sub
sub
pop
xor
fwait
dec
sbb
shlb
inc
adc
adc
add
push
jecxz
xchg
aas
cmp
in
xchg
stc
leave
cmp
ret
pop
les
shll
loop
mov
fs
test
dec
sub
ja
negl
ret
jmp
mov
lret
add
repnz
mov
enter
xor
inc
incl
movsb
sub
popf
push
mov
popa
add
xchg
pop
jl
mov
pop
mov
mov
sarl
xchg
cs
loopne
mov
xchg
int3
arpl
inc
pushf
lock
xor
jns
add
xchg
lea
roll
loope
dec
dec
pop
lret
fsubl
or
jnp
mov
lea
xchg
addr16
sbb
ja
shrl
add
pop
xor
enter
mov
xchg
pop
adc
sbb
add
mov
cmp
inc
push
dec
sbb
andb
lahf
cmp
push
jno
sub
outsl
add
insb
xor
mov
out
adc
push
frstor
cltd
sbb
jmp
push
mov
int
xchg
clc
jnp
rcll
add
fidivl
gs
scas
mov
xchg
mov
xchg
shl
lahf
xchg
gs
xlat
xor
sbb
push
enter
dec
or
movsb
jae
mov
lds
movsl
push
rcrl
out
jno
enter
outsb
cmp
test
or
mov
pushf
nop
jne
lds
inc
push
stos
sahf
out
jne
xchg
xchg
cmc
rcrb
mov
mov
jmp
inc
neg
push
popa
sub
cmp
jg
xchg
outsb
pop
dec
rcrl
mov
mov
xor
into
leave
mov
cmp
xchg
lcall
fdivrl
or
sub
mov
mov
xchg
icebp
push
or
int
test
and
out
lcall
mov
push
mov
dec
test
sbb
pushf
bound
mov
xor
enter
sub
cmpsb
mov
cwtl
xchg
adc
xchg
fadds
ficoml
out
notb
shrl
out
shrl
negb
in
out
shl
gs
jl
pop
shrl
sbb
push
add
fs
lahf
mov
cvtdq2ps
insl
cmpl
pushf
movl
leave
and
jbe
stos
push
jb
mov
push
jno
outsl
in
int
mov
in
ss
imul
js
add
or
std
inc
aaa
push
cs
je
fcmovb
ljmpw
cli
daa
jmp
je
mov
scas
xchg
cmp
inc
adc
jmp
jns
adcl
xchg
and
test
xchg
out
sti
xchg
inc
push
shll
inc
outsl
mulb
xchg
insl
roll
xor
mov
rcll
xchg
int
bound
fcmovbe
jno
sub
nop
and
popa
inc
push
cmp
mov
add
das
xchg
in
sub
dec
jp
push
mov
pop
mov
pop
std
push
lcall
or
dec
movsb
int
cli
push
cmc
xchg
aas
filds
mov
out
daa
mov
pop
outsb
rcr
xchg
repnz
outsb
out
pushf
push
sarb
pcmpeqb
push
int
fdivrl
adc
mov
xor
jns
outsl
mov
fwait
imul
ja
adc
mov
repz
gs
lds
stc
shrl
cmp
scas
adc
sub
xchg
cmc
stos
insl
rorl
fs
sbb
repz
in
int
pop
and
pop
add
popf
sbb
lret
mov
dec
or
int3
popa
mov
imull
outsl
xchg
push
dec
cmpsl
pop
mov
jmp
sub
ret
mov
test
ret
lea
popa
jmp
push
mov
aas
pop
add
lea
je
arpl
push
jmp
pusha
sub
pslld
inc
aad
je
push
mov
in
dec
lds
add
adc
jmp
aad
jbe
mov
cmp
push
fsub
mov
inc
stos
in
jge
pop
mulb
lea
and
adc
mov
xor
or
sbb
sub
inc
cmp
out
adc
push
pop
stos
jle
sub
test
aad
daa
mov
xchg
es
stc
mov
not
mov
jmp
outsl
xchg
xchg
cmc
mov
and
lds
les
sub
in
les
rcl
sbb
or
add
jg
dec
insb
sub
inc
mov
fstpl
arpl
iret
stc
or
int3
xchg
les
sbb
push
lea
out
cmpsl
iret
pop
inc
jp
mov
shrb
call
sub
daa
mov
cli
pop
lods
aam
add
out
stc
cmp
xor
add
dec
std
sub
cli
mov
ret
cld
out
sbb
mov
inc
push
repz
dec
daa
pusha
lahf
loop
mov
mov
aad
leave
push
imul
sti
ss
popf
mov
std
inc
dec
fimuls
jmp
stos
cmpsl
pop
in
nop
and
add
es
pop
icebp
int3
xchg
adc
mov
inc
movsb
push
xor
int
add
ja
cmp
shrb
or
jmp
popf
jne
imul
pop
les
pop
and
add
pusha
out
pop
cmp
js
push
call
sbb
fisubl
pushf
out
or
xor
cmp
mov
arpl
imul
divl
enter
fcoml
pop
fadd
dec
les
shlb
pop
aam
push
clc
pop
sub
repz
cmp
and
sub
mov
mov
imul
xchg
mov
in
jg
inc
lret
ljmp
pop
xchg
ljmp
ret
movsb
adc
dec
out
mov
lcall
dec
inc
sbb
addr16
lock
xchg
inc
test
mov
sar
and
aad
insl
dec
out
cmpb
push
stos
scas
xchg
lcall
leave
adc
cli
push
nop
xchg
sbb
sub
sbb
cmp
xor
call
pop
mov
mov
mov
das
and
and
or
pop
popf
and
fdivl
repz
test
inc
outsl
jno
or
loop
andb
popl
xchg
xchg
mov
clc
sub
sbb
jle
dec
sbb
push
enter
pop
inc
out
cmp
mov
sub
jmp
fdivp
mov
sti
cs
lock
xor
jbe
mov
inc
mov
adc
cmp
cmp
sti
pop
xchg
mov
pop
jmp
xor
scas
ljmp
or
je
sub
std
test
adc
jb
mov
and
cli
inc
jmp
insb
stc
mov
xchg
adc
and
sarl
jg
arpl
push
repnz
popa
fstps
loop
push
in
jb
out
bound
inc
mov
or
jle
mov
xchg
stos
xchg
and
sub
add
out
inc
cli
ss
cmp
cmp
int
ja
jmp
int3
mov
insb
mov
sub
push
repnz
xchg
cmp
cltd
arpl
dec
pop
pushf
mov
adc
adc
pusha
push
leave
adc
repnz
outsb
inc
mov
lods
inc
daa
movsb
mov
dec
lock
int3
cmp
mov
test
jbe
mov
mov
and
lahf
xchg
pop
inc
sahf
jmp
jno
sarb
stos
arpl
and
int3
jne
movsb
cld
orb
mov
stc
cmp
pusha
pop
mov
mov
fiaddl
stc
mov
inc
jne
inc
imull
mov
jmp
outsb
mov
adc
les
test
test
push
aas
xchg
fwait
imul
xchg
call
lock
jne
adc
adc
psrlq
xor
int3
adc
outsl
not
dec
push
nop
nop
mov
xchg
jns
cmc
rclb
fstl
xlat
aaa
xchg
adc
add
push
pop
inc
sahf
push
lret
mov
cmovbe
cmpxchg8b
add
fidivrs
aad
mov
repz
dec
mov
mov
subb
fimuls
callw
inc
mov
repz
cltd
mov
dec
inc
inc
sbb
inc
rcrb
or
mov
fildll
mov
xchg
xchg
leave
scas
repz
nop
into
popf
leave
cmp
ror
and
push
sbb
xor
sub
enter
cs
fdivrl
mov
adc
pop
ret
jno
scas
jbe
or
pop
adc
or
lock
mov
xor
addb
fcomp
pop
stos
and
push
mov
cltd
mov
mov
cmpsl
pop
push
xchg
jno
pop
aaa
xor
out
push
adc
fisttpl
and
test
pop
divl
lock
aaa
sbb
fsubrp
xchg
cld
popa
jg
cmp
push
aad
pop
lds
and
stos
js
jmp
add
inc
mov
xchg
cmp
xchg
out
aad
mov
jbe
sub
lret
xor
adc
pop
jmp
sub
popf
jg
roll
mull
mov
sub
loopne
dec
dec
push
mov
std
and
jg
push
cmp
and
sub
js
fsubrs
in
mov
mov
loopne
xlat
daa
jne
mov
scas
cmovae
jno
pop
xchg
mov
mov
fildl
subb
daa
sahf
jg
js
scas
mov
pop
shlb
push
int
ror
xor
fildll
inc
pop
xchg
pop
adc
jle
faddl
push
sub
insb
xchg
push
pop
mov
jnp
xchg
sbb
loope
dec
jae
sub
fldcw
mov
jns
test
roll
je
cmp
addr16
paddusw
inc
fnstenv
or
push
xchg
sbb
ret
jnp
cwtl
mov
orl
pop
jnp
mov
push
mov
roll
mov
and
pop
sar
add
add
dec
sahf
xlat
adc
cwtl
mov
pop
cwtl
fnstenv
cli
popf
mov
cltd
frstor
imul
les
repnz
out
jg
fmull
cmp
and
sahf
clc
stos
pop
ret
cwtl
and
jb
into
jmp
lods
pop
sub
sbbb
mov
dec
mov
inc
pushf
jnp
decl
add
lret
addr16
mov
enter
cmp
sub
bound
add
push
inc
push
push
lods
pop
pop
ljmp
xor
sub
fildll
fsubr
testb
inc
leave
inc
push
cmpsb
fists
jnp
add
jns
pop
push
dec
jp
mov
movsl
dec
cmp
nop
mov
fidivrl
jne
mov
sbb
mov
pop
aaa
je
inc
pushf
fs
in
fcmovne
and
push
das
xor
xchg
outsl
jbe
lea
stos
lock
pop
enter
loope
shrl
lcall
hlt
or
push
push
outsb
mov
sub
fmull
mov
or
sbb
stos
lret
adc
cmp
lods
jl
xchg
pop
dec
clc
jle
xor
lret
xlat
inc
stos
or
scas
xchg
push
xchg
lds
lcall
pop
out
rcll
or
dec
mov
popa
test
cmpsl
fnsave
sbb
xor
xor
movsl
cmpsb
mov
xchg
imul
mov
cmp
pop
xor
fs
jmp
cmpsb
xchg
pushf
cli
xchg
sub
mov
mov
ficoml
jbe
ljmp
mov
int3
push
lods
mov
les
jmp
jge
loop
mov
clc
sbb
adc
dec
mov
cmp
into
cwtl
jbe
push
mov
jge
adc
xor
arpl
int3
lods
pop
mov
mov
lret
jae
xchg
out
scas
mov
pop
push
xchg
xchg
pusha
push
rol
out
inc
testl
ret
sub
sbb
imull
inc
xchg
lock
push
loope
mov
adc
and
inc
sti
cli
sbb
push
fyl2xp1
ss
mov
cmp
pop
cltd
sub
sub
and
jl
iret
imul
mov
mov
dec
ror
xor
adc
stos
rcl
lahf
sahf
mov
les
movsl
insb
ret
fsubrs
inc
inc
gs
jno
dec
xchg
jmp
sub
mov
xor
mov
xlat
in
aas
fiaddl
mov
and
ds
das
lea
xchg
adcl
repz
sbb
cmp
cltd
cs
leave
inc
mov
push
xchg
das
cwtl
dec
lret
test
xor
and
xchg
sub
or
push
dec
lcall
mov
sti
xchg
fidivrl
jmp
mov
icebp
inc
sbb
ret
dec
mov
push
dec
ret
mov
xchg
leave
cmpsl
dec
adc
sti
sets
dec
inc
cmpsl
sahf
jge
jp
adcb
fistpl
push
testl
lods
jbe
jne
aad
adc
icebp
jae
mov
sbb
xor
clc
mov
push
xchg
cmp
jecxz
shl
adc
mov
movsl
roll
sahf
cs
xchg
loopne
outsl
clc
xchg
int3
adc
inc
xchg
movsl
jecxz
mov
pop
mov
cmp
enter
xor
out
mov
int
outsb
push
mov
sbb
sahf
rolb
push
cmpb
inc
test
adc
arpl
test
cmp
push
movsl
shll
ss
cld
cs
out
arpl
mov
hlt
jle
shl
out
lret
inc
xor
fcomp
push
out
mov
adc
repz
sarb
in
nop
xchg
mov
in
test
sbb
mov
push
xchg
ret
loopne
push
adc
mov
sub
push
dec
int
sbb
aad
push
or
jne
mov
mov
outsl
cs
push
movsb
inc
fmulp
int
and
fidivl
dec
in
fs
or
mov
inc
lds
shll
repz
lods
cs
movsl
cmpsb
xchg
stc
mov
mov
test
ret
sub
and
xchg
imul
fldt
push
aaa
xchg
cmp
lcall
outsb
clc
outsb
hlt
aas
insl
in
xchg
add
mov
mov
int
mov
out
push
add
les
pop
mov
in
or
andl
ds
jb
insl
push
inc
rcl
fbstp
sbb
stc
loope
sbb
jg
popf
dec
bnd
cmp
in
es
lock
xor
or
test
in
pop
dec
pop
das
jnp
mov
lods
pop
push
cmc
dec
pop
inc
andl
sub
add
mov
ds
pop
jmp
and
xchg
out
inc
sub
pop
ds
fcompl
sbb
pop
push
ds
out
mov
mov
fisubrs
or
add
test
rcrl
pop
cmc
sub
cmp
cmp
pop
lahf
hlt
ja
adc
mov
sub
pop
adc
movsb
sub
mov
mov
pop
outsb
adc
sarl
mov
jnp
clc
sti
mov
push
xchg
cmp
push
inc
adc
sub
mov
jae
pop
inc
inc
ljmp
test
mov
mov
dec
cmp
mov
addr16
jmp
sub
call
in
sbb
push
loop
push
add
lcall
das
jns
das
sti
xor
xchg
into
imulb
push
scas
mov
xchg
sub
repnz
push
imulb
lods
ja
xchg
jae
imul
mov
inc
mov
hlt
aam
dec
fidivl
loop
or
mov
sub
cmpb
pop
xlat
out
mov
sub
mov
dec
pop
lret
ljmp
xor
push
pushf
jo
cli
jnp
push
les
popf
pop
arpl
aad
xor
adc
dec
adc
lret
jnp
inc
mov
dec
xorl
jp
dec
shll
dec
lret
lret
xlat
ja
cld
mov
xor
icebp
negb
out
mov
xor
stos
daa
out
bnd
dec
fsub
ret
cld
gs
or
jbe
test
loope
jecxz
push
mov
pop
call
movsb
es
mov
and
and
jo
in
mov
jnp
int
adc
leave
gs
ja
sbb
mov
aas
or
cmpsb
or
sub
add
inc
mov
lahf
or
aam
push
ficoml
pushl
sub
imull
mov
in
pop
sbb
push
ljmp
adc
mov
jae
xchg
in
push
push
jp
pusha
pushf
out
bound
mov
mov
add
dec
add
fmulp
cmp
dec
sub
pop
test
sbb
jbe
jne
ljmp
add
adc
ds
out
inc
lahf
sub
ret
mov
jg
stos
popa
pop
jmp
inc
push
xor
sub
stc
xchg
mov
out
push
xchg
pop
and
and
sbb
xchg
faddl
dec
leave
lret
in
jae
xor
xor
xor
mov
sahf
xchg
lret
pop
adc
ret
loope
js
mov
divl
inc
xchg
fwait
inc
xor
js
add
or
es
je
lock
stc
xchg
mov
xor
pop
lods
loopne
pop
inc
movsb
and
adc
inc
test
test
rorb
scas
shrl
loope
inc
sbb
lret
jle
pop
mov
fsts
mov
popa
shlb
fdivl
imul
cmp
fdivrs
jb
xor
sbb
inc
lss
fwait
jg
xsave
or
jnp
ja
dec
push
mov
sbb
cmc
idiv
repnz
sbb
inc
add
vaddss
or
mov
jmp
pop
je
in
xchg
and
cmovbe
dec
test
cltd
mov
sbb
cmp
pop
mov
and
movsl
sbb
fwait
ljmp
and
aaa
sbb
jmp
cmp
insb
jmp
lock
enter
std
push
mov
sbb
icebp
push
mov
mov
and
push
shrb
xor
fcomip
daa
xor
or
test
sub
loop
ret
and
fidivl
movsl
sub
addb
call
iret
stc
test
push
imul
push
rclb
pop
int3
mov
or
mov
mov
cmp
adc
pusha
cmp
lods
lods
dec
pop
xor
cmpl
aas
mov
loop
jae
lahf
sub
push
test
or
push
jnp
ror
imul
mov
adc
aam
xchg
ljmp
lods
sbb
cltd
mov
xchg
lcall
push
addr16
xchg
outsb
cmp
popa
pop
sub
adc
daa
dec
ja
jge
rcrb
lock
cmp
jb
into
jo
dec
push
stos
cmp
push
push
mov
lods
insl
xchg
mull
pop
outsb
sbbl
es
decb
fidivs
mov
jl
push
popf
adc
dec
inc
out
and
jae
ret
rcrl
sub
sbb
or
dec
jnp
mov
add
leave
out
movsl
cli
inc
jg
dec
rclb
xchg
inc
and
nop
dec
pop
shlb
jge
fwait
icebp
pop
xor
daa
sub
push
push
fsubrl
and
cmp
idivl
es
inc
imul
and
jmp
rolb
in
xor
and
pop
ret
jae
inc
movsl
leave
or
fisubl
jmp
ficoml
mov
and
out
ljmp
mov
xchg
cli
and
shll
lahf
out
lcall
adc
mov
jl
fisttpl
or
mov
std
lods
push
mov
icebp
daa
push
and
add
inc
dec
sub
mov
push
push
shr
pop
inc
pop
mov
ljmp
dec
and
dec
lahf
cli
sub
jg
je
fdivrs
mov
lock
pop
inc
popa
or
ljmp
push
fstps
mov
mov
arpl
loopne
mov
mov
cmp
jp
leave
xchg
and
mov
sub
and
fistps
push
nop
adc
repz
xor
lods
inc
insl
inc
es
in
jae
mov
sbb
pop
adc
arpl
and
data16
or
scas
insl
loopne
adc
xor
mov
sub
or
stos
movsl
ret
adc
das
movsl
aaa
stos
add
sti
movsl
out
ds
lock
fidivl
lahf
or
clc
in
loop
sbb
aaa
pop
xchg
push
pop
sub
cmp
or
fdivrl
movsl
push
sub
xchg
arpl
leave
outsl
jecxz
sbb
notb
pop
push
mov
arpl
scas
hlt
xchg
push
test
shll
cmpsl
push
dec
orb
es
stc
leave
mov
lods
dec
rorb
inc
or
and
sbb
ss
into
mov
cmc
fisubrl
push
xchg
cmpsb
icebp
cmpsb
inc
xchg
xor
xchg
mov
inc
and
imul
mov
subl
push
outsl
stos
cmp
sub
cmp
inc
mov
andb
adc
psllw
mov
aam
pop
or
addr16
adc
and
mov
mov
mov
ds
adc
mov
cmc
jno
dec
xorb
mov
push
fisubrs
mov
add
push
mov
lock
sub
adc
sahf
dec
inc
mov
inc
push
or
mov
lods
ds
xchg
lock
push
popa
sbb
cmpb
dec
ds
xchg
fs
daa
sahf
inc
movsb
push
dec
sub
mov
outsl
clc
sbb
dec
pop
add
sbb
scas
sbb
push
in
es
mov
pop
add
mov
sub
dec
push
xor
test
add
mov
int
or
xchg
icebp
aas
fidivrl
scas
stos
jne
cmp
icebp
mov
sbb
test
clc
movsb
test
test
fdivl
mov
jp
push
mov
push
mov
pop
int3
dec
imul
xor
js
cmp
push
xchg
jecxz
dec
mov
xor
leave
loopne
push
sbb
jnp
jbe
orb
xchg
scas
or
dec
sarl
inc
inc
adc
dec
pop
mov
mov
bound
push
jo
jmp
push
pusha
sar
mov
inc
scas
and
jnp
enter
out
jo
je
mov
out
aaa
popf
stos
jecxz
or
lods
js
mov
stc
pop
sub
xchg
jne
icebp
fidivrl
dec
push
push
jl
pop
pop
dec
mov
xor
xor
stc
xor
push
mov
pop
sbb
xchg
bound
cwtl
ss
dec
test
cs
add
sub
jp
stos
insb
push
fsubrl
cmc
jg
fdivrs
fwait
jne
fs
jae
imul
jecxz
push
add
and
pusha
jns
pushf
cmp
fdivs
and
outsl
adc
mov
lret
mov
and
aas
cmp
nop
adc
mov
or
bnd
lcall
push
adcb
dec
fstp
sub
fwait
push
test
lret
jecxz
jnp
pop
push
outsb
cmpsb
sarl
cmc
stos
lods
cltd
icebp
fmuls
sub
into
sub
or
jno
int
jb
mov
jle
xchg
jg
xchg
cmp
and
mov
fdivl
pop
int
test
mov
and
xchg
shrb
jno
pop
test
pop
xchg
mov
mov
nop
xor
into
mov
popf
xorb
push
cwtl
lea
insl
lret
and
mov
fwait
in
sbb
enter
ret
adc
subl
dec
xor
jne
push
je
lock
sub
ret
jbe
pop
jae
xor
insb
aam
je
cmpsb
bound
jne
jge
or
lea
sub
js
or
adc
in
mov
or
jno
xchg
aas
int3
cmp
or
cmpsl
pop
in
jnp
lea
lahf
lret
adc
mov
sarl
sbb
add
sarb
or
push
mov
enter
jnp
sarb
inc
jo
dec
lea
add
out
push
jb
pop
lods
fnstenv
sbb
aas
push
mov
dec
inc
arpl
je
std
out
jo
out
loopne
push
jno
dec
std
int
push
ret
leave
js
mov
rorb
sbb
adc
mov
and
mov
nop
adcl
xor
jg
pop
adc
stos
out
jp
mov
sub
in
push
inc
pop
cmpsl
bnd
xorl
add
dec
jnp
push
jle
jbe
mull
int
cmp
pop
push
dec
cmp
fdivl
rcl
and
lds
or
rcrl
add
mov
ja
sub
ror
xor
xchg
sahf
and
shr
adc
outsb
stos
xlat
push
mov
pop
inc
push
js
xor
das
and
xchg
jno
lcall
jge
lahf
pop
mov
push
lds
dec
out
pop
lods
dec
test
cld
cmpsl
jne
mov
ret
or
pusha
jae
inc
addl
xchg
jns
stc
les
adc
xor
sbb
hlt
pusha
movsl
cmp
dec
push
aaa
mov
pop
xchg
outsb
lcall
cli
loop
cli
mov
fistpll
add
daa
or
mov
inc
nop
in
cmpsb
push
or
insb
inc
stc
inc
in
call
push
jmp
jge
mov
and
sbb
pusha
sbb
fisttpll
push
pop
cmp
adc
jns
push
mov
mov
push
icebp
mov
loope
push
stos
jbe
testb
and
mov
dec
int
addb
or
mov
xchg
adc
stos
fstpl
fs
or
adcl
inc
test
xor
loopne
aas
mov
mov
lret
dec
mov
sbb
mov
pusha
or
sbb
inc
lret
shl
outsl
roll
jge
dec
lret
adc
xchg
pop
cmp
sbb
and
xchg
xchg
adc
negb
ja
ss
aaa
inc
and
adc
xchg
xchg
inc
out
ja
inc
jg
popw
enter
sub
fwait
sahf
mov
addr16
jmp
aaa
pop
inc
mov
dec
jo
inc
les
mov
ss
shlb
idivl
push
lret
into
mov
cltd
lahf
pop
sub
arpl
mov
mov
mov
mov
mov
and
in
push
dec
or
mov
mov
push
daa
aaa
jmp
xchg
out
inc
cmpsl
push
mov
call
bound
mov
push
jno
ficomps
mov
add
mov
out
lea
pop
jae
adc
fcomps
push
dec
xchg
lds
lcall
out
fsts
dec
and
pop
outsl
cmpsl
pop
push
test
jecxz
xor
gs
inc
sub
aam
xchg
inc
sbb
jecxz
xchg
clc
imul
sarl
out
adc
insb
jle
std
in
js
int3
sub
aaa
out
fwait
mov
xor
mov
pop
out
mov
std
cmpsb
add
xchg
sbb
pop
fnstsw
mov
lcall
test
pop
jmp
jne
pop
rolb
sbb
inc
or
ss
pop
add
xor
mov
and
dec
ficompl
xor
or
jo
fsubrl
xchg
das
jmp
mov
cmc
insb
xor
sub
popa
cmp
and
mov
mov
sbb
mov
inc
lds
add
pop
push
je
jmp
push
mov
push
cmp
sbb
add
or
dec
sub
jmp
ljmp
xchg
inc
cmp
or
out
dec
notb
cmpsb
clc
ja
dec
ficoms
lods
xchg
popa
or
pop
push
pop
jns
mov
fcom
lods
addb
lock
push
movsb
mov
in
in
mov
jp
insl
pop
mov
into
xchg
pop
mov
stc
ljmp
mov
adc
push
jp
sbb
das
pop
jne
sub
cmp
inc
xchg
test
jbe
sub
into
mov
sarl
sarb
loope
sti
lods
and
add
xchg
lods
in
xchg
push
repnz
std
sti
xchg
sub
xor
aaa
add
shrl
push
lcall
loope
xor
inc
movsb
sub
sahf
or
xor
aad
fs
ljmp
test
mov
aad
cltd
push
jp
cmc
into
ret
mov
dec
jp
rolb
cmp
lahf
movsl
jae
add
scas
ret
orl
orl
mov
add
nop
mov
int
sub
cmp
das
stos
cmp
icebp
add
out
cwtl
imul
push
stos
and
fsubrs
popa
mov
cmp
jns
jge
pop
mov
in
mov
data16
pop
push
aas
pop
pop
jecxz
aas
addb
and
xchg
icebp
jo
sub
and
popf
jge
jb
xchg
movsb
fldenv
mov
lods
popa
inc
and
cwtl
in
addr16
pop
test
and
mov
dec
popf
push
hlt
mov
subb
mov
lods
les
adc
jmp
sbb
inc
out
outsl
inc
iret
sarl
fisttps
stc
cmc
pop
mov
add
clc
xchg
push
xchg
mov
fwait
test
daa
in
movsb
push
rorb
out
fcompl
shrl
pop
cmp
or
in
es
int
or
xchg
mov
push
ljmp
cld
insl
test
xor
sarb
jp
in
push
mov
movsb
decb
xchg
mov
adc
and
sbb
mov
sbb
mov
cmpl
mov
sbb
hlt
sbb
insb
ljmp
lods
call
out
in
std
mov
and
sub
push
mov
jns
lods
cmp
xchg
fcoml
in
xchg
es
lcall
rorl
sub
divb
xchg
lahf
es
push
adcb
arpl
inc
xchg
cmp
and
cmp
in
and
rorl
insl
inc
add
jl
sub
fisttpll
je
jecxz,pt
pusha
mov
dec
mov
enter
lret
jns
xor
sbb
pushl
icebp
and
mov
pop
and
dec
mov
xchg
cmpl
jl
mov
in
xchg
pop
cwtl
push
push
out
xchg
ss
xchg
or
orb
jbe
cmpsl
in
data16
popf
xor
adc
jge
cmpb
ljmp
push
cmp
xor
pushf
and
mov
mov
mov
cltd
imul
iret
cli
fs
jge
out
jns
test
pop
aaa
lret
pop
add
mov
pusha
hlt
cld
cli
pop
cwtl
cmc
pop
in
pop
pushf
jmp
out
adc
outsb
mov
mov
xchg
insb
xor
pop
push
loopne
jns
ret
lock
adc
sti
and
mov
inc
xchg
enter
jmp
mov
and
stos
adc
fidivs
pushf
je
aad
and
mov
es
iret
dec
jmp
or
test
xor
jno
cmp
test
and
and
xor
adcb
push
adc
in
or
and
daa
xchg
cmp
test
jecxz
movsl
gs
loopne
cmp
xor
pop
pop
pop
push
addb
lods
lret
nop
stc
jo
loope
mov
and
in
xor
popa
pop
pop
jg
test
sub
jg
sbb
fsubrs
lods
inc
js
scas
in
iret
ja
add
mov
sub
insb
lret
das
ret
in
ss
lods
ds
pop
adc
fcoml
mov
loopne
jbe
shll
fs
sbb
inc
call
xchg
pop
dec
mov
cmpsb
jns
jb
jle
jg
push
mov
pushf
xor
aam
xor
mov
and
das
lret
adc
jp
sub
addr16
mov
andl
sub
ja
xchg
aaa
add
mov
nop
mov
dec
imul
xchg
xchg
fdivrs
cmp
cltd
sub
aaa
arpl
and
scas
jecxz
bound
sub
leave
aas
out
aas
mov
cmp
cltd
sub
xlat
insl
pop
jl
mov
xchg
in
lea
dec
pop
hlt
loope
and
fistl
pushf
lret
sti
and
push
fld
xor
or
or
pop
lcall
in
push
mov
xchg
in
pop
adc
xlat
stos
clc
mov
mov
push
cmp
das
or
pop
mov
pop
enter
pop
aam
xor
and
mov
bound
fsubrp
fimuls
xor
clc
xor
sub
fcomps
mov
roll
sbb
in
pop
lahf
pop
add
unpcklps
xor
xchg
inc
xor
xlat
rorl
ss
adc
cmp
aam
lds
cs
cltd
fistl
faddl
sbb
in
or
imul
adc
add
mov
scas
cld
sub
mov
dec
das
mov
sub
xlat
je
dec
or
lods
cmp
jp
shrb
cmpsl
dec
ss
jbe
lea
cmp
pop
inc
stos
jge
push
lcall
add
dec
mov
data16
lods
jbe
dec
inc
test
lods
inc
xchg
shld
or
sahf
std
push
dec
fldenv
mov
or
jne
inc
fstpt
lods
insb
out
aad
jle
in
add
andb
movsl
int3
add
cmp
adc
mov
and
movsl
jl
adc
xchg
cmpsb
loope
call
xchg
xor
test
xlat
stc
pushf
dec
adc
in
xor
sub
stos
sbb
ror
cwtl
xlat
std
and
xchg
sbb
shlb
mov
dec
pusha
shll
dec
xor
push
enter
push
push
sbb
dec
out
ret
sbb
xor
ljmp
sbb
jmp
xor
ret
xchg
dec
call
add
or
mulb
jecxz
ja
mov
in
mov
mov
and
mov
push
repz
dec
lret
nop
push
or
fnstcw
out
push
and
jb
fisubrl
aam
dec
lock
push
lods
inc
pop
push
mulb
sub
repz
cwtl
aas
icebp
xchg
mov
fwait
xor
das
dec
fsubl
dec
push
push
pop
je
insb
add
cmpsb
add
popf
xchg
inc
test
popa
lea
rorl
xlat
xchg
les
mov
fnstcw
push
jb
test
dec
scas
adc
push
and
imul
or
mov
ss
fstpl
push
stos
int3
cmp
push
ja
mov
out
push
arpl
int
stc
cmp
pop
jl
fcomp
fstl
mov
fwait
gs
push
outsl
pop
divb
pusha
das
cmp
xchg
loope
rcll
imul
inc
xor
xchg
cmp
imul
mov
mov
xor
lods
dec
cmp
notb
xorb
push
mov
aad
mov
push
mov
iret
ret
mov
test
sbb
cmpsl
imul
and
sub
dec
xor
flds
push
and
inc
dec
out
push
inc
mov
add
scas
gs
xchg
mov
pop
pop
divl
dec
sub
xor
pop
call
lret
adc
leave
or
adc
std
xchg
mov
xor
fcmovne
iret
cmpsl
jns
out
mov
das
stos
mov
movsb
inc
add
jecxz
jbe
lret
out
addr16
dec
int
cmpsl
xchg
xchg
xorb
xor
mov
and
inc
movsl
push
movl
and
jae
fcompl
jl
scas
pop
in
xchg
xchg
pop
pop
dec
cwtl
dec
jp
add
add
sbb
outsl
mov
cmp
adc
ficoml
push
jo
imul
xor
aas
aas
push
in
bound
je
mov
or
stos
xor
xchg
negb
mov
insl
aad
ss
mov
out
jns
ss
in
sub
pop
mov
sarl
mov
lret
push
sub
in
ds
dec
mov
out
test
icebp
cmpb
and
mov
popa
pop
adc
mov
push
lret
sub
shl
cmp
xchg
cli
int
hlt
adc
push
xchg
loop
lret
outsl
popf
aas
fs
fadds
ret
adcl
inc
lcall
dec
inc
test
addr16
fdiv
cmpb
lea
jmp
and
lds
pop
add
or
lds
xorps
stos
repnz
imul
lcall
subl
pop
pop
out
mov
push
das
mov
pushf
out
jge
lods
and
cmp
inc
or
mov
loopne
dec
lock
aas
lcall
adcl
fistpll
xor
pop
testl
andl
cltd
jp
xchg
dec
sbb
test
outsb
sbb
pop
pop
mov
in
loope
das
jne
cmp
adc
cmp
pop
cld
les
adc
jno
lea
fidivrl
sbb
inc
mov
cmc
stos
and
sbb
mov
vpmacssdql
es
jns
mov
loope
jp
xchg
xor
loope
xchg
and
cs
fldcw
jl
xchg
xchg
adc
je
je
clc
popa
and
in
ljmp
repnz
mov
or
aam
mov
movsb
mov
jno
insl
and
ret
jns
add
xchg
inc
repz
mov
mov
jnp
mov
pop
out
xchg
cltd
jecxz
push
or
sbb
testb
iret
cltd
jp
mov
dec
and
pop
ljmp
js
mov
sub
jmp
movsb
cmp
inc
fldenv
fcmovne
cwtl
jbe
pusha
das
mov
push
int3
mov
mov
jb
inc
sub
cmpsl
cs
les
test
js
cmpl
jae
push
shlb
cmc
push
jle
sub
mov
push
sub
jbe
or
jmp
int3
mov
inc
mov
cmp
out
cltd
les
repz
xor
fs
mov
enter
push
out
fmull
and
out
les
data16
pop
pushf
iret
mov
jne
movsl
inc
sub
jo
insb
mov
mov
xor
movsl
lods
aad
test
test
pmaxsw
test
dec
dec
ror
mov
lea
jb
insl
test
adc
jge
add
add
lea
mov
fs
fstp
sub
fists
arpl
jmp
dec
xchg
imul
adc
dec
nop
xchg
sahf
test
movsl
loope
cmc
or
xchg
lcall
cmp
pop
and
ljmp
jl
lret
aas
push
push
add
push
repnz
inc
and
jge
jecxz
imul
push
push
adc
clc
sub
dec
sbb
xor
adc
xor
sbb
imul
jae
sbb
imul
leave
cmpl
popa
cld
andb
jne
pop
adc
pop
int
inc
jl
popf
sub
aaa
out
aas
mov
push
in
adc
inc
addr16
or
in
movsb
inc
test
pop
pop
insb
fdiv
push
ror
mov
jmp
push
loope
jle
ss
add
stc
inc
fnstenv
cmp
add
cmp
scas
loop
sbb
fbld
lods
or
aam
push
mov
les
inc
call
push
xor
imul
sarb
repz
pop
cli
shll
insb
aad
stc
mov
sub
hlt
jb
cmpsb
or
sub
scas
and
ret
xlat
and
cmp
in
push
ret
inc
lods
mov
mov
es
mov
inc
jge
xchg
cmpsb
dec
and
je
stos
jecxz
cli
aam
cmp
lahf
cmpsl
push
sbb
repnz
mov
lods
fidivrs
sahf
test
loope
rolb
xchg
push
lock
pop
fwait
cmpsb
test
lahf
xor
jmp
andb
pop
ds
inc
in
cmp
movsl
ret
std
mov
aaa
inc
dec
das
imul
into
les
dec
jno
pusha
shlb
in
not
push
sub
dec
je
xlat
stos
mov
sbb
ucomiss
sub
ss
adc
aaa
inc
mov
aaa
pop
xchg
jge
insl
lahf
mov
pop
mov
repnz
and
and
push
imul
xlat
cmp
inc
pop
ss
or
jbe
mov
xor
jg
adc
cmp
mov
adcl
divb
jge
mov
mov
mov
jge
jo
mov
push
fistps
push
mov
or
jmp
jle
jnp
movsl
in
lret
xlat
fiadds
andb
dec
mov
pop
jg
cmp
mov
jne
inc
jne
mov
cs
mov
xor
lods
pop
cmpsb
pop
outsb
je
mov
sahf
es
hlt
mulb
scas
jbe
jbe
cmp
iret
cmpsb
les
dec
in
out
inc
popf
or
ret
lcall
pop
test
movsb
and
bound
xchg
or
xor
data16
shrb
inc
jl
xor
adc
sahf
jno
lcall
mov
and
dec
pop
jecxz
jge
adc
mov
dec
xchg
jno
les
or
in
or
sbb
fimull
call
rcll
popf
pop
adc
daa
sub
dec
lcall
xor
sub
divb
cltd
nop
and
jecxz
inc
mov
sub
fcoml
shlb
in
rcrb
pop
mov
add
xorl
cld
je
out
sbb
push
in
push
xor
push
testl
data16
cmp
push
int
ljmp
fistpll
mov
inc
es
mov
jl
jmp
frstor
scas
mov
xchg
in
sub
xlat
cmpsl
sti
cs
mov
and
xor
adc
shl
faddl
int
mov
lea
lea
stos
mov
mov
ja
and
dec
jp
mov
fidivl
cli
rorl
and
leave
lahf
lcall
push
pop
cmpsl
lock
mov
mov
pop
mov
push
pop
dec
lahf
incb
pop
xchg
pop
dec
sub
xchg
sub
nop
pop
adc
pop
in
mov
cmpsb
loopne
jecxz
cs
jb
sub
mov
in
mov
aaa
mov
fstps
add
fisubl
mov
cld
lods
outsb
sbb
test
cmp
cmpsb
mov
add
pop
shlb
sub
fdivs
gs
push
or
adc
sahf
in
add
xchg
adc
xchg
mov
mov
addb
lea
sub
lock
in
fists
out
shrb
dec
mov
push
xlat
xorl
fxch
enter
cli
std
pop
cmp
cltd
pusha
jbe
jae
aam
mov
lds
sbb
jg
mov
test
mov
mov
sbb
sbb
imul
test
out
cmp
sub
fcoml
mov
cmp
aam
inc
int
fsubl
fst
orl
aad
cmc
test
cmpsl
inc
pop
repnz
lock
mov
cmpsb
or
iret
xor
cmp
mov
test
cltd
data16
xchg
out
loopne
imull
sti
xor
add
dec
cltd
test
pop
popfw
icebp
aaa
fisubrl
mov
dec
rcrl
pushf
decb
xchg
insl
or
adc
and
mov
cld
mov
xor
dec
rcrb
mov
xlat
jae
sbb
and
push
imul
push
jmp
jbe
jle
shl
das
push
in
cld
enter
pop
xor
pop
adc
mov
or
dec
inc
sbb
stc
lock
inc
mov
pop
dec
adc
std
lret
mov
sub
cmpsb
loopne
dec
dec
sbb
lret
mov
ror
jne
daa
xor
in
sbb
addl
sub
dec
stos
pop
xchg
mov
adc
sub
jle
sub
fdivrl
ret
mov
lcall
js
repnz
pop
jbe
movsl
mov
sarb
jp
mov
push
out
jns
xchg
aaa
test
sbbb
andl
mov
mov
shr
mov
cmp
mov
fldt
xor
fnstsw
xchg
movsl
call
mov
scas
sub
sarb
pop
out
push
jne
rorl
daa
int
aad
adc
or
jmp
scas
sub
xor
mov
push
mov
das
fwait
mov
sbb
jno
adc
mov
rcrl
cwtl
mov
mov
movsl
xchg
test
xor
std
dec
movsl
mov
cmp
push
inc
stos
xlat
push
jne
stos
ja
xor
and
inc
adc
lea
mov
jae
in
in
mov
push
fdivrl
pop
loopne
repz
loope
insl
sar
cmpsb
fsubp
ja
fmul
pusha
xchg
mov
scas
lcall
jle
cmp
inc
mov
add
push
orl
int3
arpl
insl
mov
dec
ljmp
cli
cmpl
popa
repnz
ret
cmpsl
cld
jnp
in
sub
dec
adc
dec
dec
cmp
fists
scas
jnp
je
icebp
in
mov
dec
out
mov
adcl
sarb
in
insl
fnstsw
adc
hlt
bound
jge
rorb
mov
jge
inc
xor
jle
fbstp
sub
dec
push
add
icebp
add
rcl
cmpsb
addr16
mov
push
and
mov
adc
adc
addr16
push
mov
mov
es
fs
cld
daa
nop
xchg
jmp
movsl
dec
std
int3
das
stc
mov
ret
je
les
inc
scas
push
loop
inc
sbb
xchg
clc
mov
test
pusha
push
push
sbb
push
fidivl
aaa
lea
out
inc
xor
dec
lahf
sbb
cmp
inc
xor
pop
inc
mov
fstpl
cmp
inc
in
addl
sub
or
aad
mov
cmp
outsl
mov
cmp
xor
mov
clc
dec
ror
xchg
adc
es
xchg
lods
fadds
in
add
out
sbb
clc
xchg
or
jnp
mov
push
aam
jnp
in
cli
adc
mov
cwtl
push
add
loope
mov
das
daa
mov
out
sbb
stos
orb
pop
xlat
xor
hlt
jb
ljmp
mov
push
cmp
dec
dec
sbb
das
pushf
mov
ret
jne
push
jo
lods
push
mov
jp
xlat
push
test
rcl
fcomp
das
pop
into
fsubrl
testl
icebp
ret
test
inc
and
mov
sarb
ja
or
cmc
lods
sub
push
jp
adc
aaa
fisttps
xchg
jp
ds
rorl
fwait
pushf
push
int
dec
jnp
sti
xchg
mov
cmc
pop
jmp
push
lods
outsb
xchg
jmp
push
jmp
mov
int3
pop
pusha
cmp
mov
cs
jg
test
das
addr16
jae
in
cmpsl
in
sub
push
xor
push
mov
pop
and
add
inc
lds
mov
jg
mov
loop
std
or
negl
inc
sbb
mov
sub
fisubl
dec
xchg
icebp
xorl
sub
fcmovnu
push
aas
test
dec
cmc
mov
xor
push
std
in
faddp
js
imul
adc
push
or
inc
rcr
mov
pushf
cmp
adcl
mov
out
pop
xlat
push
or
aas
mov
adc
and
mov
push
fildll
fistl
pop
fs
push
xchg
rolb
repnz
xchg
jl
add
xor
div
push
inc
je
fldpi
pop
or
pop
jmp
xchg
loope
sub
clc
leave
mov
lcall
call
incb
rolb
jns
xor
jmp
push
push
xor
and
sti
stos
or
arpl
cmp
outsl
and
insb
punpcklwd
xchg
ds
test
insb
xor
sbb
push
cmc
cmpl
mov
int3
jno
mov
sar
pusha
sahf
push
out
sahf
mov
mov
lock
and
mov
xor
arpl
loope
jge
imulb
das
js
and
out
mov
std
int3
mov
adc
popa
cmp
mov
xchg
in
repz
jbe
pop
scas
xor
cmp
jecxz
lahf
sub
jle
gs
jmp
ja
mov
lock
loope
sbb
dec
inc
dec
mov
cmp
and
jns
mov
cmpsl
sbb
jmp
pop
inc
sbb
pop
vmovapd
cmpsb
je
cmp
repz
sbb
std
inc
fs
lods
and
fldt
mov
sbb
jmp
rcrb
pop
mov
or
sub
js
outsb
js
inc
inc
imul
mov
and
icebp
fucomp
or
push
pop
bound
mov
addr16
mov
jae
inc
add
jle
enter
mov
xchg
movsb
mov
mov
test
jae
sbb
pop
mov
out
fstpl
ret
or
xchg
lods
pop
and
rcl
cmp
or
rcll
test
movsl
cld
ss
imul
pop
push
call
mov
adc
mov
add
lret
jno
cmp
enter
add
in
das
aas
mov
ljmp
js
mov
es
loope
inc
das
sub
fsubrs
push
add
mov
and
pop
cli
mov
ljmp
iret
pop
in
insl
ss
cmp
aad
add
out
mov
pop
popf
add
sti
popl
jb
pop
call
daa
in
pop
pop
jl
pop
fcmovb
xorl
mov
xchg
scas
aaa
insl
fmull
pop
shll
inc
or
test
aaa
loop
push
mov
adc
inc
iret
mov
jae
cwtl
inc
fstpl
inc
into
loope
scas
cmc
ret
in
add
push
dec
int
sub
sahf
cmp
js
leave
or
addb
dec
je
pop
leave
aam
popf
push
mov
outsb
shll
iret
scas
pop
test
or
test
repz
add
xchg
xor
jl
imul
insb
insl
inc
ja
divl
fs
popf
mov
xchg
jmp
mov
imul
into
xchg
in
in
xchg
pop
test
rcll
clc
add
test
xor
jbe
lcall
add
sub
jo
xchg
mov
or
push
mov
xchg
dec
mov
sub
shlb
sbb
insl
cmp
push
rclb
sub
xchg
mov
sbb
daa
push
lods
cld
cli
repnz
jp
aad
lret
xchg
shlb
jne
repnz
mov
aam
xor
xchg
adc
cmp
in
mov
or
lret
dec
mov
loope
mov
sub
les
xor
fucomip
jecxz
sbb
je
unpckhps
mov
push
mov
test
sub
mov
pop
call
mov
mov
xchg
mov
mov
fldenv
mov
cli
fs
pushf
push
stos
dec
push
xchg
cmpsb
popf
and
pop
imul
mov
inc
fcom
mov
dec
mov
arpl
and
icebp
push
mov
or
jbe
push
and
push
dec
push
shrb
jp
in
inc
out
pop
jae
fisttpl
or
xor
lret
fcmovne
mov
cmpsl
std
xor
rcrl
outsl
jge
cmp
out
push
std
scas
cwtl
sub
lahf
xor
cmp
dec
cli
clc
jbe
mov
fimull
adc
cli
test
daa
adcb
dec
sti
push
push
mov
lds
inc
repnz
fcomip
outsb
xchg
aad
sub
sbb
shlb
punpckhdq
inc
leave
test
repz
rcl
jmp
inc
stos
mov
aam
test
xchg
xchg
inc
hlt
sbb
cmp
repnz
in
xchg
xor
sbb
sbb
and
xchg
out
mov
add
ss
test
das
faddl
push
lahf
aad
mov
xor
xchg
shrl
push
je
bnd
fdivs
jne
xchg
and
dec
cwtl
enter
mov
inc
daa
xor
imul
mov
fs
cmp
stos
add
mov
out
cmp
add
xchg
stc
mov
push
int3
fwait
addr16
add
mov
fistpll
fwait
add
hlt
xlat
in
mov
xor
xor
imul
sub
sahf
mov
pop
filds
cmp
out
adc
xor
adc
xorl
movsl
jnp
push
xor
xchg
pop
lret
pusha
mov
int
mov
mov
pop
xlat
nop
push
push
lcall
pushf
inc
cmpsb
ret
and
cmc
outsl
clc
call
mov
jp
lcall
pop
test
push
add
mov
dec
cltd
sbb
imull
stos
push
test
mov
sbb
add
cli
dec
and
rorl
add
popl
mov
adc
addl
xor
jb
stos
int3
fisttpl
adc
ret
out
jl
lahf
xchg
xor
pushf
out
and
add
pusha
push
movsl
add
rorb
lock
in
cmp
jnp
and
lock
aam
and
adc
pop
add
xchg
inc
and
pop
mov
adc
add
add
jecxz
aad
les
inc
sbb
sbb
pop
push
dec
xor
pop
aam
test
aaa
mov
movsb
xchg
jge
and
iret
push
adc
xchg
out
jle
mov
repnz
aas
push
or
adc
cmp
fsts
add
cli
mov
add
call
xor
clc
pop
popa
inc
jecxz
or
add
ja
repz
sub
jo
mov
insb
push
sarb
mov
adc
sbb
jecxz
ficoml
pop
mov
jno
xor
and
jno
inc
pop
mov
jne
dec
shll
pop
and
or
clc
pop
xor
jb
push
hlt
fisubl
data16
icebp
push
repz
xor
repnz
inc
xor
scas
loopne
xchg
pop
pushf
lods
out
int3
inc
testl
lcall
in
cmpsb
mov
test
xchg
repz
sub
cmp
push
cmpsl
lock
pop
imul
fcompl
xor
fidivs
sub
push
lret
scas
mov
jl
insl
mov
leave
push
push
xchg
in
aas
mov
add
idiv
pop
or
sbb
ret
in
rcll
add
push
imulb
sbb
dec
sub
stos
add
add
fildll
notl
or
cmp
sub
sahf
mulb
cmp
clc
mov
jl
jbe
jle
test
pop
sbb
pop
fucomip
add
lcall
clc
inc
adc
or
nop
fldcw
push
lahf
inc
cmp
in
xchg
xchg
push
mov
dec
outsl
push
lea
pop
push
or
adc
sarb
test
lret
sbb
aam
or
add
outsb
fisubs
js
and
push
movsb
les
cld
dec
leave
mov
hlt
gs
stos
sar
push
cmp
ljmp
dec
aam
or
dec
adc
call
ljmp
mov
adc
out
clc
loopne
popf
and
imul
aam
stos
bound
mov
pop
cltd
and
fisttps
popa
and
pop
xchg
arpl
cwtl
mov
mov
jmp
jmp
jg
and
xchg
adc
test
and
cmp
rol
in
shll
int3
add
or
std
and
and
fistl
ja
sub
mov
stos
loop
mov
outsl
pop
jle
sub
push
pushf
in
mov
divl
lcall
mov
xchg
sub
lds
test
xor
xchg
push
aad
sub
pop
push
imul
aam
movsl
lods
test
jp
sbb
in
pop
js
push
repnz
lods
sbb
pusha
inc
mov
cltd
into
aad
cmp
sub
sbb
jmp
sbb
push
push
jecxz
aaa
add
repnz
jp
pop
test
fldenv
clc
cmp
jne
rcrl
xor
pop
xchg
repnz
sbb
imul
loop
div
push
add
repz
imul
mov
scas
push
cwtl
lret
in
inc
sbb
mov
mov
test
push
fwait
xchg
lea
ljmp
adc
ret
mov
shll
loope
push
inc
sbb
mov
and
sbb
pop
jecxz
xlat
repnz
sub
sarl
inc
in
jg
cmpl
lds
inc
mov
loop
and
xchg
jmp
cltd
mov
sahf
cmpsl
mov
sub
xchg
test
insb
into
dec
in
mov
mov
popaw
mov
and
cmp
enter
pop
inc
test
sub
sbb
mov
add
test
inc
lock
repz
stos
xor
cmp
test
decb
sarl
sub
call
out
push
imul
sti
callw
xchg
jae
mov
and
fmull
sti
mov
mov
dec
lods
mov
dec
push
and
xchg
addr16
addr16
gs
inc
pop
cld
jb
or
adc
push
stos
mov
push
push
lds
cwtl
iret
imul
add
inc
dec
aaa
es
addb
and
sub
pop
addr16
icebp
scas
out
mov
push
test
gs
sbb
call
test
mov
out
stc
jp
out
xchg
std
pop
push
movsl
imul
push
out
and
les
xor
je
mov
cld
test
mov
fs
push
cmp
scas
insb
push
mov
lods
adc
dec
jg
adc
jnp
rorl
sub
arpl
mov
or
lock
mov
sarb
mov
xor
xchg
movsl
jbe
test
jnp
out
cmc
adc
mov
out
or
popa
adcb
mov
sub
lods
jle
lret
rep
sub
pop
popf
ja
mov
nop
outsb
mov
cltd
loopne
inc
or
xor
dec
scas
out
add
cmpl
sbb
int
mov
pushf
mov
scas
dec
inc
rorl
xor
mov
pop
push
sub
decl
dec
jg
xor
lret
xor
ret
push
dec
push
cmp
pop
call
dec
call
dec
inc
jmp
mov
popf
shufps
mov
or
rorl
mov
data16
mov
dec
mov
pop
mov
mov
or
jmp
in
js
adc
sub
lret
outsl
adc
adc
ret
addr16
fmul
sub
bnd
add
add
and
scas
adc
pop
mov
das
rorl
into
arpl
pmuludq
lock
sub
cltd
imul
push
out
xor
jbe
xchg
or
shr
sub
pop
dec
stos
push
and
xchg
stos
addr16
push
push
les
sbb
mov
mov
jne
adc
ja
add
fcomps
jmp
or
push
sbb
fldz
xor
mov
sub
mov
lock
pop
xchg
mov
jno
dec
cmp
pop
pop
inc
or
and
ret
sbb
roll
cltd
pop
fwait
cmp
fimull
fsts
adc
jae
loopne
addr16
stc
nop
loopne
and
cmpsl
mov
pop
cmp
cmp
add
mov
inc
data16
iret
imul
insl
movsb
shrb
lret
loop
cmp
pusha
and
pop
aaa
lea
shr
sbb
mov
fptan
jns
sub
cmpl
push
sub
ljmp
xlat
pop
std
push
iret
push
cwtl
inc
leave
mov
mov
cmp
test
mov
bound
mov
outsb
dec
mov
test
mov
add
sti
xchg
xlat
test
in
lds
pushf
mov
imul
or
inc
mov
lock
mov
dec
xchg
pop
repz
notl
cli
and
sbb
xchg
mov
mov
cli
or
test
call
or
adc
iret
cmp
jae
jge
cmpsb
sti
or
mov
lods
dec
decl
push
iret
iret
les
in
and
adc
out
lret
pop
inc
sbb
dec
test
ss
cmp
subb
and
je
mov
mov
adc
xor
or
push
nop
out
mov
shrl
and
clc
sar
bound
jne
cmpl
xor
xchg
movsb
adc
scas
xor
mov
sbb
adc
dec
push
dec
xor
mov
fiadds
dec
push
lods
fimuls
adc
addl
das
or
stos
sub
adc
push
les
push
mov
lock
sbbl
lds
and
fsubs
or
cmp
push
fstl
scas
outsb
xchg
mov
xchg
cmp
jp
mov
stos
xor
movsl
mov
inc
add
repz
outsl
inc
es
int3
dec
cmp
outsb
cmpsl
loop
sbb
cltd
ds
rcrb
dec
or
add
adc
loopne
rclb
outsl
aaa
cmp
cmp
dec
push
xchg
push
incl
add
or
dec
sahf
adc
and
jnp
fcom
mov
adc
jne
lahf
dec
push
int
mov
pop
sbb
shl
pop
fsubs
adc
mov
xor
outsb
js
mov
fwait
test
mov
idiv
int
or
add
xchg
xrelease
mov
test
in
call
and
das
mov
cmp
add
jmp
push
dec
jl
fbld
xchg
xor
dec
pop
dec
pop
push
orb
and
out
out
in
cld
aas
lds
dec
les
das
inc
jle
leave
outsl
inc
dec
sbb
pop
dec
in
xor
sub
xor
je
mov
mov
mov
add
xchg
cmp
pop
or
xchg
xchg
ret
mov
aas
adc
int
and
mov
fdivs
inc
sahf
add
cmc
in
inc
or
adc
stos
dec
mov
sbb
push
mov
gs
scas
sub
adc
loope
jo
shrl
inc
lea
cwtl
inc
xor
fildll
sbb
add
dec
sbb
bound
and
inc
rorl
into
jg
out
movsb
sbb
popa
int
add
xor
je
fs
sub
adcb
packssdw
mov
add
hlt
loope
mov
pop
sbbb
and
mov
inc
es
movsl
stos
in
fwait
loope
cmpsb
xchg
mov
jnp
ret
outsb
fisubrs
sti
adc
arpl
shrl
outsb
push
xor
jp
and
jmp
scas
testl
cmp
test
lods
add
les
mov
and
push
or
pusha
sbb
xchg
sbb
shlb
ljmp
push
mov
mov
popf
jp
mov
adc
aas
sti
inc
loope
jns
ds
pop
mov
push
aam
les
pop
enter
push
push
iret
add
je
sub
or
inc
dec
mov
cmc
push
inc
lock
or
pop
enter
fidivs
adc
movsb
jno
jle
jmp
mov
or
lods
cmp
xchg
xor
xchg
inc
mov
stc
or
jge
mov
lea
and
jae
mov
inc
in
inc
inc
ljmp
mull
jle
or
xchg
push
jb
adc
dec
shlb
jecxz
xchg
gs
or
ficoms
sub
shrb
or
stos
sub
jge
lea
loopne
push
mov
jge
xchg
aaa
jl
add
sbb
jle
aas
cmp
in
mov
ret
lock
test
es
mov
xor
mov
loopne
or
lahf
nop
mov
jne
jl
jbe
out
lahf
jecxz
adc
mov
mov
dec
xor
xor
inc
das
mov
inc
fwait
scas
xor
cs
lock
aad
in
jmp
insl
adc
jno
shl
sub
cmpsb
lea
add
jle
out
cltd
sbb
mov
je
xor
cmpsl
sub
jnp
cli
mov
cmp
rol
cmpsl
adc
pop
mov
fidivrs
test
icebp
fstpt
and
aam
in
mov
repnz
xchg
les
sbb
mov
push
test
scas
pop
and
sub
pop
data16
loop
pop
into
cmpsl
adc
addr16
insl
and
cmpsl
pop
les
sarb
ds
xchg
and
repz
out
subb
sbb
or
cmpsl
out
testl
jno
or
mov
sub
sub
shrl
int3
jb
fldenv
sub
lret
cmpb
ds
ljmp
fcomps
push
fwait
mov
or
fistps
add
pop
fsubrs
xor
aad
loope
dec
mov
out
roll
sub
std
inc
cmc
sbbb
sarb
loope
fsubl
mov
test
mov
mov
xlat
mov
fsubrl
sti
push
mov
push
cmp
jb
push
fstl
mov
decl
xchg
stos
mov
sub
cmp
lock
lea
jle
xchg
sbb
fnsave
lea
scas
cmp
nop
jae
push
mov
mov
out
or
out
mov
cmp
adc
and
lods
adc
and
jb
pushf
popl
lds
out
mov
push
mov
pop
pop
sbb
push
fs
pop
or
xchg
jmp
xchg
leave
push
inc
nop
push
dec
call
sbbb
enter
cwtl
addr16
loopne
cmp
mov
pop
add
jns
stos
mov
out
dec
inc
test
fidivl
inc
lret
inc
mov
clc
fildl
mov
pop
shrl
jns
fidivs
aad
push
push
push
minps
mov
mov
adc
cmpsl
jmp
scas
in
outsb
sahf
xor
stc
test
loope
ret
test
mov
mov
outsb
mov
rorb
cmp
mov
out
dec
lret
and
mov
add
dec
or
lea
or
idivb
aam
or
fisttps
mov
cltd
inc
lcall
and
clc
aas
mov
adc
push
outsb
cmpsl
xchg
xlat
das
push
adc
adc
loope
jecxz
mov
inc
jl
inc
xorb
movsb
inc
outsl
xor
dec
lods
push
xor
fs
outsb
imul
pop
xor
mov
inc
add
mov
arpl
push
fpatan
sbb
cmp
and
icebp
loop
cmp
mov
ss
fcomip
leave
mov
test
pop
je
xor
cld
adc
xor
shll
fisubl
subl
sti
mov
rclb
xor
push
inc
pop
fstps
imul
loop
push
cmp
and
cmp
push
adc
arpl
addr16
and
stos
lcall
hlt
int
aad
das
int3
xchg
push
in
das
adc
dec
testb
outsb
sbb
push
shlb
pop
insl
dec
adc
pop
in
or
js
shll
out
inc
or
adc
sub
out
cs
int3
lahf
cs
mull
mov
imul
dec
icebp
and
xlat
cli
lods
out
mov
enter
jecxz
lahf
iret
aam
mov
sbb
sbb
mov
repnz
lds
sbb
ljmp
fwait
out
mov
mov
adc
sub
dec
jge
addr16
es
cmpl
imul
jl
test
mov
or
mov
sub
dec
inc
arpl
dec
jns
or
and
ror
and
jo
sub
lahf
icebp
fidivl
adc
fidivrl
ret
push
sbb
mov
mov
jg
mov
cmp
adc
sub
push
repnz
lods
xor
ds
cmp
stc
sahf
cmp
or
mov
int
add
addr16
add
xchg
jno
pop
push
ret
int3
dec
xchg
jge
push
inc
test
arpl
mov
xchg
daa
mov
scas
mov
dec
es
xchg
jl
repnz
mov
or
jbe
loop
push
lcall
shl
into
movl
mov
inc
jae
sub
jmp
push
pop
in
inc
dec
lret
xchg
pusha
xchg
ret
and
cmpsb
pushf
mov
cltd
aam
dec
add
adc
xor
dec
mov
xor
jecxz
mov
ljmp
mov
push
jns
stc
xchg
jl
lahf
jb
jno
adc
jne
fwait
jecxz
inc
nop
pop
dec
imul
add
push
lret
sbb
mov
sahf
jp
pop
pop
rorb
mov
dec
pushf
lock
adc
cli
mov
fists
inc
es
xchg
sbb
sbb
xchg
lods
pop
or
lahf
je
cld
test
outsl
fucomi
inc
mov
mov
sarb
mov
fnsave
dec
mov
jbe
xchg
push
xor
cli
imul
adc
aas
rorl
push
inc
test
daa
negb
aam
or
leave
pop
in
push
xchg
cli
aam
loop
mov
fidivs
mov
xchg
xchg
cli
mov
fbstp
addr16
fcmovnb
dec
jb
ret
ss
jnp
inc
dec
pop
jae
inc
dec
movsl
add
cmp
cmp
jl
dec
stos
mov
popa
loop
fldcw
ss
cli
test
and
xchg
cmp
in
stos
pop
leave
loop
scas
adc
dec
imul
sbb
mov
dec
inc
jbe
stos
jg
pushf
jbe
mov
movsb
es
push
dec
cld
jecxz
pop
bound
in
add
aas
ljmp
or
adcl
sahf
and
cmp
loop,pt
adc
jle
lock
and
lcall
dec
mov
subl
insb
xor
pop
push
in
or
inc
aas
fxch
int3
jl
loope
dec
shl
and
mov
sbb
stc
jmp
mov
mov
inc
dec
push
fs
jno
sub
or
push
cmc
test
dec
fstpl
test
adc
mov
pop
fnstcw
cli
cltd
dec
mov
jmp
add
jg
sbb
add
filds
sarb
mov
dec
xchg
insl
inc
lcall
arpl
inc
fadds
outsl
push
mov
inc
mov
push
out
cmp
orl
es
lds
cmovp
jnp
sarb
jbe
sbb
mov
adc
adc
rolb
add
out
jns
loope
fwait
nop
mov
xor
jg
shlb
lock
inc
sbb
inc
mov
jp
enter
aas
inc
pop
dec
ljmp
xor
sbb
or
push
jp
jg
aaa
xor
xor
adc
and
jae
andb
mov
aam
into
jns
cmpsl
ja
and
pop
mov
ja
clc
push
enter
mov
out
adc
mov
rclb
and
je
jno
dec
das
add
aad
out
ds
fcompl
roll
test
movsl
xor
in
in
les
mov
aad
or
ss
daa
addl
sbb
addr16
push
inc
mov
sbb
popa
jecxz
xchg
int3
add
stos
leave
fadds
adc
push
imul
hlt
das
lcall
lods
pop
in
bound
jecxz
ret
or
ljmp
mov
mov
sbb
mov
test
cwtl
lret
inc
popa
fsts
divb
scas
push
pop
sahf
inc
xchg
pop
imul
sbb
xchg
sbb
rcl
mov
in
mov
cld
jo
push
push
sbb
xchg
lds
ds
jne
lret
aam
inc
movsl
sub
ficompl
mov
gs
out
push
lret
inc
mov
hlt
add
jae
out
push
xor
in
cltd
adc
fisttps
push
add
ljmp
xor
insl
jns
xor
jnp
xor
push
push
orb
adc
mul
jns
xor
jecxz
stos
lods
in
addb
adc
and
mov
jae
mov
dec
xchg
aas
in
lea
mov
and
or
xor
jne
mov
dec
inc
mov
cmp
push
rcr
mov
pusha
ds
iret
xchg
lahf
mov
mov
add
test
cmpsl
sarl
and
shl
popl
xor
jbe
std
adc
xor
cli
sar
gs
jg
push
sahf
iret
mov
popa
sti
lret
inc
xchg
iret
push
pusha
push
aam
pop
pop
mov
ror
shrl
fldt
xor
cmp
icebp
mov
fdivrs
sbb
rolb
cmp
mov
pop
mov
add
xor
push
push
clc
testl
push
cmpsb
sub
leave
faddp
mov
roll
pop
xor
data16
sarb
cmpb
cmc
sub
hlt
mov
and
xor
mov
or
push
inc
outsb
subb
cli
pop
pop
jg
pop
aas
ret
test
bound
ja
xor
out
jno
or
add
push
movsl
andl
mov
clc
push
out
in
lret
sarl
mov
and
sbbl
xchg
scas
outsb
pop
leave
sbb
jnp
or
lahf
jae
xor
pop
loop
fs
dec
push
rolb
test
mov
lds
lret
and
daa
push
daa
inc
jbe
sub
or
lret
mov
es
in
repz
cmp
cmp
pop
pop
mov
pop
jae
add
inc
mov
mov
inc
xchg
test
gs
outsl
pop
add
jns
sbb
adc
push
push
loopne
jnp
push
jp
in
dec
stos
shll
sti
popa
cld
mov
insb
in
or
call
ljmp
insl
ds
test
inc
adc
call
xor
imul
fisubs
dec
adc
test
test
inc
jno
iret
push
jp
push
add
push
dec
movl
fs
icebp
lcall
and
sahf
fistl
shrb
push
xchg
mov
and
stos
cwtl
es
mov
call
aam
jo
sub
jmp
pop
call
rcrb
out
je
inc
div
data16
rcr
add
fstl
jp
inc
iret
jle
hlt
add
test
push
mov
push
out
jle
push
xchg
sti
jmp
ss
aas
inc
xor
push
mov
mov
push
and
mov
sub
in
pop
in
or
push
push
push
xchg
sub
mov
fwait
push
mov
lds
dec
lods
dec
mov
mov
cmpsb
out
cmp
mov
pop
std
push
adc
test
mull
in
jns
xor
loope
dec
lahf
je
push
fwait
jecxz
inc
inc
cltd
mov
lea
sbb
gs
mov
jo
mov
aad
negb
in
aas
and
ret
repnz
aam
shll
mov
add
das
xchg
popf
dec
dec
jmp
jge
idivb
nopl
stc
cmp
sti
shlb
iret
loopne
mov
and
cs
dec
push
adc
scas
addr16
mov
xchg
pop
clc
sbb
rcll
jne
inc
mov
mov
lods
dec
lock
jmp
inc
testl
jl
sbb
dec
xchg
cmp
icebp
cmp
test
push
dec
test
mov
or
cld
hlt
insb
xchg
cmp
cmp
test
test
repnz
daa
int
roll
add
out
or
inc
cmp
adc
sti
inc
xorb
iret
test
test
lods
aas
and
adc
sahf
inc
ud0
or
or
inc
cs
pop
pop
pusha
fbstp
imul
adc
adc
test
loope
jnp
movsb
rorb
jg
aaa
xchg
xchg
int3
mov
xlat
and
xorl
push
int3
adc
neg
iret
add
mov
int
mov
pop
mov
add
hlt
pop
outsl
sti
add
les
sub
ret
cmp
inc
adc
xchg
push
adc
jle
ret
lea
pusha
inc
mov
xchg
push
and
sbb
inc
repnz
int3
xor
mov
ljmp
fcoms
fs
iret
leave
push
xor
aad
inc
enter
mov
mov
mov
lret
and
sar
aas
cmpsl
int3
cmp
push
adc
add
leave
cmp
loope
push
movsb
das
sbb
lret
mov
lahf
push
sbbl
cmpsl
mov
push
xor
lcall
mov
ljmp
insl
or
je
cwtl
cld
cmc
shr
stos
mov
dec
push
sbb
call
push
sub
jg
imul
inc
xor
xchg
pop
loope
mov
lret
popl
adc
xor
push
jl
adc
cmpsl
mov
nop
dec
jecxz
inc
mov
fistps
in
cmp
int
out
pop
push
fcoms
clc
jns
xchg
cld
out
sbb
dec
cld
and
loop
pushl
mul
sbb
mov
sbb
daa
sbb
add
fstl
cmc
push
xchg
push
sub
test
adc
js
pusha
push
mov
inc
inc
mov
movsb
idivl
clc
xchg
testl
push
pop
aaa
lret
xchg
sub
mov
push
xchg
xlat
shlb
inc
data16
movsb
jecxz
in
add
icebp
cs
dec
outsl
mov
dec
cmpsb
cs
loopne
mov
xchg
jge
negl
movsb
in
cmpsl
push
rolb
cmp
inc
sub
rcl
mov
adc
fildll
xchg
xchg
lods
push
out
dec
or
pop
cltd
rcrl
xchg
test
push
inc
popl
les
mov
je
sbb
and
popf
add
jnp
jbe
lods
fisubrl
test
xchg
cmpsl
adc
add
or
lret
xor
adc
sbb
dec
and
jae
fs
xor
mov
daa
incl
loop
xor
add
pop
out
pushf
cli
insb
mov
faddp
fmul
and
push
loope
sbb
idivl
pop
fsts
push
jo
mov
ja
out
aad
add
dec
icebp
cld
or
daa
ljmp
mov
xlat
loope
notl
mov
sbbb
mov
cmp
adc
and
int3
xchg
cmp
lds
sarl
hlt
incb
daa
mov
jbe
add
mov
inc
sbb
gs
in
test
sub
dec
insb
fildl
ret
cmp
shlb
adc
arpl
sti
idivl
movsb
mov
fmull
pop
shrb
lahf
imul
cmp
lahf
add
sbb
jns
and
inc
fsubs
mov
push
or
pushf
dec
sti
add
sbb
jae
mov
lcall
imul
push
pop
stc
adc
fs
mov
xchg
insl
inc
mov
fmulp
and
xchg
xor
jbe
fwait
jl
nop
add
ljmp
std
iret
sub
xor
fsubs
lcall
daa
test
ja
inc
mov
sbb
in
inc
stc
pop
je
mov
mov
insl
rol
xchg
daa
mov
lds
ror
sarb
lret
pop
arpl
mov
insl
lahf
or
imul
fisubl
arpl
cwtl
dec
loopne
cmc
test
lods
call
sbb
xchg
cmp
jmp
stos
xchg
icebp
fs
mov
pop
pop
add
push
mov
jmp
adc
and
xor
pop
mov
outsb
dec
int3
or
insl
xor
dec
fildl
ja
ret
out
mov
rorl
repnz
int
add
enter
xchg
addb
into
in
in
mov
test
jne
dec
xlat
xchg
dec
ds
stc
repz
add
mov
push
fdivrl
adc
gs
fnsave
add
sub
lahf
gs
std
into
cmp
xchg
outsb
cmp
inc
scas
mov
mov
andl
movsb
dec
inc
sbb
lret
sbb
jne
sti
test
inc
call
cwtl
fwait
clc
lods
std
cld
mov
popf
out
pop
fcoml
pusha
in
sub
sbb
mov
dec
lds
xchg
xchg
mov
fndisi(8087
push
pop
ret
push
cs
ret
add
mov
pop
daa
and
add
cmp
xchg
inc
mov
fistpll
push
adc
test
sarb
xchg
ret
xor
push
xor
jns
dec
sub
test
and
mov
jno
lcall
orb
mov
or
int3
shlb
fs
dec
sti
fsts
test
push
idivl
dec
add
xor
mov
jnp
push
or
xlat
nop
mov
ja
sbb
loope
fistpl
gs
cmp
dec
cmp
add
and
out
cltd
and
cmp
inc
mov
movsb
in
and
push
xlat
pop
sub
push
inc
mov
mov
int3
lret
mov
and
sahf
fidivl
leave
adc
mov
sbb
dec
repnz
adc
sub
xchg
xchg
pop
ss
shrb
cmp
push
cmpsb
lcall
dec
jae
jo
push
and
sub
notl
pop
add
cld
push
or
adc
or
cmp
adc
adc
aas
and
jg
xor
mov
in
mov
aas
fnstsw
lcall
ljmp
test
mov
sti
inc
rorb
jp
and
sbb
scas
mov
cmc
jl
lret
test
adc
adc
shlb
and
xor
push
movsb
das
sbb
jae
dec
xor
les
xchg
pop
xchg
jg
cmp
or
cltd
jae
xchg
jnp
cmp
mov
pop
int
test
es
das
push
add
mov
scas
andl
out
xchg
mov
mov
xor
jae
xor
mov
push
daa
xor
push
sub
push
clc
repnz
sub
int
mov
jmp
lcall
ja
mov
add
mov
sub
ljmp
lock
sub
fcoms
loop
sub
push
shrb
out
lret
movsl
push
push
fistps
add
les
stc
mov
loop
mov
clc
iret
sti
and
jbe
fs
rol
inc
jg
cmpsl
and
fidivrs
dec
adc
pop
mov
lahf
pop
je
in
adc
push
jno
inc
pop
in
cmp
inc
xor
fsub
inc
and
outsl
xchg
faddl
adc
jecxz
pop
pop
mov
ret
mov
inc
lds
mov
sbb
sti
insl
xor
in
and
or
cwtl
icebp
inc
cmp
cmp
and
pop
lcall
xchg
ja
aas
popa
decl
jae
pop
fcmove
sub
rolb
ss
in
test
hlt
std
nop
pop
mov
cmp
sub
rcrb
lret
mulb
ja
je
fwait
icebp
mov
sti
mov
and
cltd
fs
adc
jle
mov
and
lock
pushf
ror
stos
xor
loope
lret
cmp
push
dec
or
lret
fnstsw
and
jg
enter
push
cmc
mov
jb
pop
mov
test
jns
ljmp
test
out
in
push
test
int
xchg
hlt
hlt
push
into
daa
sbb
xchg
mov
hlt
and
jns
xor
inc
dec
push
lcall
rcrl
iret
inc
sub
sbb
repz
scas
dec
fdivrs
dec
add
mov
sti
add
rcll
shl
push
andl
sbb
movsb
adc
push
int
jle
pushl
out
add
into
arpl
call
arpl
aas
mov
in
lock
aad
ss
pop
ja
xchg
push
pop
inc
pop
inc
bswap
pusha
mov
pop
leave
ja
mov
mull
fldl
imul
jp
sbb
gs
int3
jbe
ret
cmp
xchg
ret
mov
int3
out
out
add
mov
or
mov
inc
in
mov
icebp
int3
shll
and
shlb
pop
test
dec
pusha
movsb
shlb
cwtl
dec
frstor
ss
mov
lret
scas
cltd
cld
hlt
dec
push
imul
jl
jecxz
mov
sbb
push
jl
adc
and
xchg
sub
mov
mov
cli
aam
xchg
icebp
jne
mov
stos
or
inc
ret
test
push
ret
or
xchg
jmp
xchg
sub
icebp
push
and
dec
add
mov
sti
add
or
xor
push
jnp
lret
das
mov
and
dec
sub
ret
lahf
lods
adc
dec
push
dec
adc
pop
xchg
sbb
pushf
lds
xor
stc
lcall
xchg
flds
sbb
movl
test
inc
sbb
pop
dec
add
and
cli
sbb
mov
cmp
out
adc
mov
aad
fwait
add
mov
popa
out
pminsw
mov
loope
lret
inc
push
push
jo
int3
adc
jge
or
lods
ds
add
and
dec
aaa
sbb
mov
jnp
jle
xor
mov
inc
andb
jo
mov
popf
pop
xchg
pop
loope
push
cmpsb
dec
dec
aam
mov
cmc
out
pop
out
adc
stos
out
out
lods
xchg
add
int
cmpl
cmp
dec
rcll
or
dec
popf
mov
xchg
ds
inc
push
or
xor
movhps
fimuls
adc
push
jo
mov
sbb
add
pushf
icebp
ret
mov
dec
dec
push
add
mov
pop
call
fistpl
shlb
aas
add
pop
popa
fwait
xor
decb
into
xchg
cmp
cmp
repnz
les
mov
add
mov
aas
sub
mov
imul
outsb
push
cmpsl
jb
inc
aad
sbb
stos
inc
ss
add
mov
stc
sti
ss
or
pop
test
in
sbb
loop
stc
xchg
les
pop
scas
or
iret
lds
shrb
mov
mov
mov
mov
jecxz
js
psrlw
xchg
mov
cmp
cmp
xor
addr16
inc
test
test
ja
rorl
jne
pop
lcall
mov
mov
adc
adc
inc
mov
adc
push
xlat
mov
mov
cmpsl
mov
push
pop
fistpl
inc
cs
lret
js
xor
or
pop
outsb
cmp
mov
lods
sub
ret
jmp
and
imul
xchg
or
cs
cmp
xchg
mov
push
sar
sub
cmc
mov
sti
ss
out
cmc
and
jecxz
cmp
jnp
xchg
or
cs
clc
xchg
int3
ja
xchg
cld
repz
movsl
xor
aas
dec
add
mov
das
or
cs
fwait
out
inc
inc
fs
adc
imul
ljmp
sub
jno
mov
xor
movsb
jb
jecxz
pop
push
jae
push
sub
lods
push
jae
xor
mov
mov
dec
cltd
arpl
in
imul
shl
xor
sub
aaa
jl
in
movb
xor
clc
push
xor
lods
shlb
out
inc
outsl
out
ss
ret
mov
out
aaa
clc
cmp
cmp
pop
mov
and
sub
sbb
xchg
cli
xchg
mov
insl
add
repz
inc
popf
stos
pushf
push
jbe
mov
adc
ljmp
out
xor
lcall
cmp
into
pop
mov
xchg
lahf
lret
add
loopne
adc
cmpsb
mov
adc
sub
pop
sub
repz
mov
subl
inc
filds
ja
push
cmpsl
rol
cmp
enter
inc
mov
int3
mov
and
out
ljmp
mov
mov
push
xor
cwtl
es
xchg
sub
cmp
fldt
cmp
push
push
rol
scas
add
call
sar
data16
popf
fldl
mov
sbb
rol
scas
dec
popf
test
aad
aas
test
out
ret
notb
push
cmpsl
mov
out
mov
sub
inc
jns
jbe
jg
aad
fwait
scas
repz
pop
push
mov
inc
fbstp
push
stos
pop
add
jo
mov
stos
mov
xchg
dec
fs
ret
aad
cmpsl
subb
and
or
xchg
inc
xchg
imul
leave
or
int
fcomps
mov
dec
sarb
in
icebp
scas
out
stos
lcall
stos
fisttps
rcrb
mov
jmp
xor
lods
hlt
cli
sarl
push
sbb
loop
mov
xchg
pop
scas
das
aad
inc
add
inc
movsb
aam
inc
cmovge
sahf
jecxz
les
mov
pop
movsb
dec
mov
fildll
sub
add
cmp
mov
ret
dec
out
or
pop
inc
pop
dec
jecxz
insb
ret
mov
test
or
movb
mov
xor
shll
pop
mov
lods
mov
and
cli
notb
or
arpl
dec
push
test
mov
inc
lcall
test
jae
jnp
lods
mov
mov
dec
mov
cld
out
shlb
pop
dec
mov
cmp
out
out
fstpl
add
adc
cmp
cmp
sbb
xchg
loope
int
movsl
pop
popf
std
mov
push
xor
mov
and
sahf
and
les
add
lret
sbb
xchg
mov
mov
push
lret
hlt
mov
movsb
pusha
cli
or
pop
clc
fwait
dec
adc
in
jge
push
jmp
pop
mov
or
sub
and
loop
fidivs
or
mov
out
sbb
mov
sbb
pop
xor
or
cmpsl
sub
sbb
mov
daa
pop
fcmovbe
cmpb
ja
xor
stos
xor
scas
loop
dec
das
inc
loope
aam
and
dec
stos
cltd
fcompl
jp
aaa
pop
pop
inc
daa
shrl
bound
adc
mov
call
scas
addl
xchg
movsl
pmaddwd
pop
enter
jnp
adc
mov
sbb
fnstsw
in
fwait
rorl
into
sbb
adcl
divb
add
stos
gs
call
lcall
jne
add
push
mov
add
sub
add
pop
cmp
add
mov
lds
shll
ficoml
jl
je
push
out
nop
test
insl
jb
jge
sub
and
jo
jne
sbb
adc
sti
push
or
lock
test
int3
or
inc
in
jo
cwtl
cli
jo
push
mov
and
sub
xchg
jl
test
sarb
xchg
cld
mov
dec
gs
pushf
push
fwait
cmp
mov
and
mov
jb
shrl
jb
jp
mov
rcrb
pop
xchg
nop
or
add
push
jl
xchg
mov
fbstp
bound
sbb
xchg
cmc
sbb
imul
out
adc
sbbb
cwtl
push
pop
mov
pop
mov
lret
mov
jl
jp
imul
adc
sbb
push
sub
repnz
insl
mov
sub
cmpsb
xchg
test
adc
test
and
dec
mov
stos
pop
xlat
popa
push
adc
out
dec
es
lds
popf
scas
ja
lods
xchg
sbb
call
jbe
sti
pop
gs
andl
js
push
test
xor
push
cs
shl
ror
outsl
dec
or
sbbb
rcr
adc
sbb
fistpll
outsb
jge
in
cs
xchg
add
xchg
addr16
mov
fisubrs
sbb
push
scas
or
sbb
cmp
dec
push
mov
lods
push
fdivrp
loop
sub
pushf
add
addr16
jb
jno
cmp
pop
shll
mov
dec
dec
sub
mov
push
mov
iret
fcoms
shll
ljmp
push
lock
rolb
xlat
push
jo
notb
dec
mov
cmp
addr16
pop
inc
mov
mov
shlb
jp
dec
jmp
sub
popf
or
push
push
push
jecxz
lock
bound
jge
cmc
lea
inc
xchg
fstps
hlt
mov
movsb
mov
push
xchg
in
and
fstl
out
sbb
jmp
mov
and
outsl
xor
arpl
sub
mov
mov
push
mov
xchg
cli
xchg
out
loop
xor
cmp
mov
test
sarl
lret
mov
jmp
cmp
push
mov
pop
cld
repz
test
pusha
adc
mov
and
inc
insb
push
pop
mov
fs
xchg
mov
ja
das
or
test
mov
add
adc
dec
xorb
pop
outsb
push
shufps
mov
fsubs
or
mov
and
cld
mov
mov
dec
mov
mov
sub
movsl
rorl
sahf
inc
cwtl
xor
cmpb
jmp
add
or
jmp
gs
dec
adc
cmpsl
arpl
xchg
mov
mulb
dec
adc
mov
int
sbb
int
mov
mov
jl
pop
jl
in
arpl
adc
in
xchg
mov
lret
repz
ja
cwtd
xchg
pop
fs
sbb
ljmp
popa
sahf
jno
pop
inc
out
mov
insb
sub
scas
jge
dec
inc
cmpsb
cmp
cltd
jle
mov
add
arpl
mov
pop
dec
adc
inc
sbb
into
sbb
xchg
iret
arpl
loop
adc
mov
xchg
cmp
jbe
mov
or
jb
cwtl
das
into
fiaddl
adc
stc
enter
scas
cmp
scas
iret
scas
out
and
cmpsb
mov
lea
sub
pop
test
pop
fildll
hlt
ja
sahf
iret
adc
push
es
shlb
cmp
dec
dec
mov
fsubl
xlat
sbb
je
jae
loop
adc
shr
ja
std
stos
mov
daa
mov
xorb
fdivs
out
cmp
sub
roll
mov
hlt
sbb
jo
sbb
ljmp
fcmovbe
insb
or
inc
mov
aam
mov
sub
add
adc
sti
aad
in
mov
clc
lods
dec
scas
ss
or
dec
sbb
jns
jns
mov
cmp
sahf
add
iret
sub
into
insl
mov
push
sub
sub
mov
fsubs
cs
pop
sbb
xchg
test
mov
or
xor
clc
shrb
popf
jbe
inc
test
cld
sub
lret
mov
ret
xchg
cmp
pop
adc
push
scas
inc
out
std
jnp
adc
aam
lret
jmp
sahf
mov
push
push
jmp
and
out
mov
and
inc
loopne
sahf
lcall
sbb
cs
jo
mov
cld
cld
and
into
scas
add
std
push
mov
lods
push
xchg
push
lods
xchg
js,pt
lcall
mov
cmp
test
push
mov
push
pop
into
mov
add
pushl
xchg
and
insl
mov
fwait
add
decl
ja
jle
sbbb
dec
fdivr
nop
push
lcall
out
dec
popa
jle
dec
icebp
dec
push
xchg
pop
lcall
clc
jb
psrlw
fdivrl
xor
push
sub
loope
sbb
sub
sbb
arpl
outsb
xor
lret
jae
insb
push
insb
or
cmpsl
jecxz
scas
xor
cltd
test
or
js
pop
push
test
lods
scas
or
pop
lds
lahf
mov
repz
push
jge
jl
out
pop
jmp
dec
mov
out
fisubrs
fwait
repz
aad
into
mov
jmp
dec
mov
insb
shll
dec
push
adc
pop
xor
mov
jecxz
cmp
mov
les
add
int
mov
insb
cmp
and
loop
cmp
mov
pop
mov
dec
xlat
push
aaa
addr16
test
js
xor
test
loope
xor
adc
sbb
push
xchg
mov
loopne
je
leave
inc
mov
or
out
xorb
sub
mov
loope,pn
repnz
adc
loopne
or
inc
xlat
xchg
dec
mov
mov
pop
cli
cmpl
xor
orb
mov
dec
xor
ret
out
out
pop
inc
sbb
sahf
lcall
lcall
outsl
lret
into
dec
jge
decb
cmc
jg
dec
ja
cltd
icebp
add
sub
lds
xchg
xor
push
cmp
scas
packsswb
js
jge
scas
test
jmp
test
int
mov
mov
sahf
lods
jg
cmp
push
xchg
les
push
jo
dec
out
inc
jg
push
adc
loopne
inc
inc
fstpl
dec
mov
negl
jno
cmp
lea
dec
sbb
mov
push
je
cmp
cmp
fmul
aas
repz
in
xor
jns
movsl
scas
push
mov
lods
insb
sahf
mov
sbb
stc
cmpsb
jbe
lahf
dec
in
cltd
outsl
cmp
jnp
int
push
arpl
ljmp
in
push
std
cwtl
pop
add
inc
imul
les
scas
outsl
dec
loope
stos
ljmp
push
sbb
jle
in
aas
pop
jnp
xchg
xlat
sub
ret
or
fildl
and
sti
sahf
lds
hlt
fildll
shrb
mov
aaa
loope
add
jnp
into
xchg
cwtl
addr16
ds
fistl
jns
adc
ficomps
jecxz
shll
adc
jne
lds
das
push
inc
push
add
sub
rcrb
jle
push
jae
mov
insl
jb
sti
repnz
mov
cmp
sbb
adc
adc
inc
add
outsb
adc
xchg
decl
sub
push
jo
imul
mov
jnp
add
and
sbb
push
fdivrs
jo
pop
pop
xchg
sub
dec
cltd
and
push
add
jnp
fisttps
cmp
mov
sbb
mov
int3
daa
add
jo
fmull
hlt
adc
cmp
movsb
mov
inc
sbb
xor
scas
rcrb
cmp
pop
gs
sub
ja
sbbb
sub
xchg
xchg
ret
fs
dec
mov
fadds
sub
popf
js
xchg
xchg
mov
lock
jmp
xor
arpl
cmp
mov
les
sarl
lock
mov
arpl
stc
outsb
clc
xor
cli
cmp
xchg
sub
sbb
add
adc
mov
mov
cmc
and
or
mov
cmpsb
fiadds
adc
dec
cmp
and
push
push
dec
mov
dec
xor
adc
das
scas
divl
fs
jns
iret
test
inc
mov
imul
push
sti
dec
xor
mov
cwtl
orb
add
test
dec
mov
adc
mov
cmp
test
stos
movsl
daa
rorl
sub
mov
push
jle
ror
je
ss
insb
dec
ja
xchg
add
ljmp
lea
push
sub
push
pusha
jo
jbe
es
ja
outsb
mov
mov
hlt
xchg
loope
repz
int3
xor
lods
cltd
mov
mov
adc
or
inc
jb
scas
adc
mov
xor
mov
lret
es
fmuls
ret
fwait
shl
dec
mov
insb
in
xor
xor
inc
pop
push
push
xor
cs
xor
mov
xchg
sbb
fdivrl
in
sub
mov
data16
loope
adc
mov
xchg
aad
jp
push
mov
mov
dec
xor
mov
gs
rcrl
fdivs
inc
xor
hlt
xor
cmp
loope
into
jo
xor
xor
mov
aam
jbe
arpl
jmp
test
or
iret
fs
push
mov
add
add
cli
jg
mov
dec
scas
push
jb
inc
arpl
xchg
pop
or
shlb
push
popf
and
or
cs
pushf
and
stos
push
imul
stos
cld
push
xor
xor
jne
lods
stc
daa
mov
ds
mov
xchg
rcrw
lds
push
dec
push
pop
add
ljmp
push
cld
xlat
outsl
dec
je
fldenv
iret
jns
xchg
jp
dec
jp
fimuls
fcom
jmp
push
cmpb
fistl
aam
scas
movswl
sub
inc
xor
es
call
xlat
mov
das
and
xchg
lods
fwait
les
je
pushf
mov
in
loop
jmp
pop
in
adc
xor
mov
repnz
rorl
faddl
mov
adc
out
cmpsb
sub
add
lods
dec
movsl
inc
push
xor
jp
stos
pop
pop
mov
add
dec
in
sbb
jmp
jns
mov
pushl
ror
clc
gs
jb
and
mov
sbb
jbe
adc
iret
dec
or
mov
xchg
push
les
sbbl
and
clc
dec
add
push
lea
push
fs
or
mov
iret
mov
push
rol
cmp
sbb
data16
lds
mov
xor
lock
mov
or
and
xor
lret
and
jmp
call
outsl
adc
xchg
push
cltd
lret
dec
or
mov
pop
pop
shll
outsb
test
xchg
mov
cmp
lret
std
inc
in
add
mov
aad
cmp
inc
mov
xchg
pusha
idivl
lahf
int3
stc
aad
jl
sbb
mov
loope
add
jbe
jp
sahf
cmpsb
jge
jg
sahf
push
mov
fldl
insl
lods
adc
popf
orl
mov
test
jne
outsl
repz
loopne
js
pop
push
fsubrs
decl
lods
bound
adc
mov
add
out
addl
cmc
cmp
push
les
and
and
mov
mov
in
mov
sub
insb
pop
imul
mov
xchg
les
fcomps
cmpsb
sub
push
mov
jl
inc
push
sub
test
lds
ficompl
dec
aad
mov
scas
and
movsb
mov
cmp
inc
mov
adc
mov
jae
jl
pop
mov
roll
rcl
fiadds
arpl
arpl
xchg
push
out
mov
jmp
cmp
pop
loopne
shrl
mov
ss
imul
cwtl
insb
dec
pop
lcall
mov
add
rorb
xchg
nop
lds
xchg
test
movsl
mov
leave
mov
sbb
movsb
mov
cld
or
inc
clc
xchg
lcall
in
mov
push
push
xor
mov
cmp
adc
jnp
iret
fs
inc
out
data16
push
repz
mov
xor
ja
sub
movsl
fsubs
cmpb
mov
jl
mov
stos
push
inc
and
and
in
es
inc
jl
movsl
pop
mov
push
ja
pop
loop
add
sub
dec
mov
sub
mov
mov
and
fldln2
xor
or
xor
jno
lods
imul
mov
mov
shrl
lock
js
pushf
cmp
or
jmp
push
flds
inc
lock
mov
jg
fnstenv
push
std
sub
fcomps
insl
add
inc
in
pop
stos
add
push
cmpsl
mov
xor
mov
addr16
jle
push
icebp
mov
push
popf
pop
xor
aad
sbb
pop
les
outsl
xorl
lods
sub
cmp
cltd
mov
bound
pushl
adc
sbb
pop
sbb
mov
cltd
push
cmpsb
int
cmp
sbb
adc
notl
out
lods
push
push
dec
dec
sbb
jmp
test
mov
dec
ret
subb
shl
in
cmpsl
rcl
lods
mov
outsl
pop
adc
ficoms
sub
les
mov
xchg
imul
pop
jmp
adc
in
rorl
leave
addr16
or
fs
push
js
sub
xchg
mov
cmpsl
testl
js
or
dec
fstpl
and
jno
popa
and
jne
xor
and
out
subb
out
pop
dec
jne
and
leave
inc
or
les
in
pop
ss
in
jbe
out
sbb
dec
jmp
and
xor
cltd
cltd
fidivrl
push
pop
lret
push
cmpsl
or
fmull
stos
pop
int3
inc
mov
xchg
dec
arpl
mov
mov
add
pop
jno
loope
sti
push
std
sub
jp
cmpsl
dec
or
sbb
pop
dec
lods
pop
lock
fdiv
inc
cmp
xchg
daa
and
add
cli
js
std
jb
jg
imul
test
je
int
leave
add
dec
inc
sahf
cwtl
cmc
sahf
outsl
das
jns
jecxz
imulb
lea
es
sbb
jp
jb
xchg
sub
out
sub
out
call
fwait
mov
rorb
ja
jno
sub
jp
sti
dec
das
sub
cmp
mov
inc
xchg
sbb
loope
mov
push
test
cmc
out
sub
inc
dec
mov
movsl
xchg
mov
scas
add
and
cmp
sub
xchg
mov
rclb
sub
ds
fbld
sub
sahf
push
in
jo
or
cmp
les
pop
mov
sbb
push
mov
dec
dec
test
cmc
enter
rcrb
lret
sub
push
movsb
aas
jno
jmp
es
jae
dec
in
or
mov
js
test
mov
pop
sarl
cmc
arpl
shll
fcoml
and
fdiv
out
cmpsl
jecxz
xlat
cmpsb
je
iret
dec
repz
popf
lock
movsl
sub
add
sbb
negb
xchg
sbb
out
xchg
loop
ds
sbb
mov
sub
iret
adc
orb
inc
addr16
lcall
jo
icebp
cmp
sbb
pushf
les
cmp
mov
pop
mov
push
pop
stos
jmp
push
in
std
mov
sub
movsb
ja
cltd
sbb
pop
cmpb
stos
adc
scas
xor
pop
dec
mov
mov
pop
psrlq
inc
std
add
push
or
or
jne
cmp
int3
inc
aas
cmp
xchg
sbb
jae
mov
aas
mov
push
loope
lahf
sbb
dec
sbb
ret
push
sub
sub
adc
popf
or
or
add
roll
jp
xchg
xchg
repz
imul
sti
fwait
adc
inc
pop
jne
dec
out
ret
enter
jnp
stos
mov
add
mov
sbb
xchg
fildl
outsl
pop
xor
inc
mov
testl
or
inc
xchg
push
test
dec
add
cvtpi2ps
movsl
jbe
pop
mov
ret
loope
inc
cli
ja
push
or
test
fisubs
in
enter
cwtl
cmpsl
sub
inc
mov
adc
nop
inc
ror
fwait
sbb
or
enter
scas
mov
out
lods
jg
xor
mov
repnz
je
dec
sbb
aaa
cli
inc
sahf
bound
sarb
xor
push
sbb
xchg
lret
jbe
push
mov
cmc
or
aas
cmp
mov
pop
sbb
adc
adc
mov
xchg
pop
loop
inc
inc
or
sbb
dec
add
test
jo
jbe
push
and
and
scas
push
adc
subl
inc
pop
or
movsl
mov
dec
cmp
mov
sub
icebp
fsubs
push
fs
pop
push
pop
pop
mov
push
push
inc
xor
dec
imul
inc
fstpl
xchg
adc
ljmp
xchg
dec
xlat
mov
mov
fcomps
sub
jnp
adc
cmp
clc
cmpsl
movsb
pop
inc
loope
push
dec
loop
sub
arpl
out
xchg
sbb
mov
nop
rcrl
cmp
adc
xchg
mov
add
jg
shlb
popa
and
shlb
inc
push
cli
in
adc
mov
enter
adc
mov
cltd
push
repz
adc
imul
xchg
gs
into
and
adc
dec
cltd
xchg
push
mov
sub
aad
popa
mov
cwtl
stos
sub
cld
aas
lds
push
dec
xor
sub
loope
mov
shrb
sub
lods
add
sbb
fcmove
add
pop
pushf
pop
and
mov
xchg
mov
dec
fiaddl
sub
iret
cwtl
sbb
jp
fdivrs
pop
add
sarb
int3
pop
mov
sub
in
and
adc
cmp
das
daa
nop
daa
ja
out
lds
adc
mov
fists
int
daa
fisubl
sub
mov
daa
sub
int
pop
mov
mov
mov
je
cmp
jne
js
jmp
xor
jne
mov
adc
mov
pop
in
rcr
jnp
loopne
in
adc
add
xchg
shll
arpl
mov
mov
arpl
mov
dec
mov
ret
ret
ret
mov
jno
mov
or
dec
enter
ret
daa
nop
cmp
repz
mov
mov
mov
jle
mov
ljmp
push
iret
in
setl
and
pusha
inc
imul
test
dec
mov
jb
pop
pop
adc
out
cmpsl
inc
push
jp
das
cmp
xlat
mov
adc
popa
pop
movsb
aad
dec
pop
sti
cs
push
repz
cmp
stos
int3
ret
xor
fistpll
mov
pop
test
test
popf
loope
movsbl
lods
pushf
loop
out
cltd
mov
or
jl
aas
pop
dec
aas
mov
js
stos
insb
pop
lea
pop
sbb
inc
movsb
out
xchg
push
or
xor
push
insb
leave
in
lret
jle
jae
gs
dec
inc
shl
scas
andb
push
jp
jb
sub
fisttpll
or
mov
sub
movsb
mov
in
out
loop
shll
notb
add
rcll
pop
stc
mov
and
call
xor
arpl
mov
sub
sub
movsb
push
sarb
mov
mov
gs
mov
jecxz
add
mov
out
mov
cli
xor
ja
aaa
mov
iret
adc
or
cmp
xchg
adc
mov
lret
in
inc
dec
outsb
adc
lahf
ljmp
inc
xor
filds
and
lahf
inc
cmpsl
sub
push
or
out
dec
xchg
nop
push
and
jo
adc
or
out
xchg
iret
mov
jo
adc
mov
pop
add
lods
loope
pop
and
outsb
lcall
push
inc
mov
inc
aam
pop
pop
dec
add
decl
or
add
andb
jno
mov
es
mov
mov
add
cmp
sbbl
or
sbb
mov
adc
out
mov
pop
inc
daa
stc
out
jne
mov
dec
das
sbb
pop
add
ss
fisttps
pushf
mov
lret
xchg
mov
lds
xlat
add
daa
test
aaa
jecxz
lock
adc
aaa
aas
fwait
push
pop
inc
shr
add
out
adc
movsb
into
repnz
mov
xchg
pop
xchg
dec
mov
fs
inc
cmc
or
pop
test
sbb
xor
andb
out
sub
add
mov
cmpb
push
push
gs
ss
pop
movsb
mov
ret
add
cld
inc
xor
push
rclb
dec
sbb
ds
out
add
call
push
add
xchg
lods
call
mov
loope
add
xor
or
test
cltd
rcll
aam
xor
insb
jnp
aas
cmpsl
ret
xorl
jle,pt
sbb
adc
xlat
rcr
std
lret
push
scas
jmp
inc
testb
xchg
mov
jo
das
bound
ds
or
ffree
adc
ficompl
mov
mov
mov
stos
insb
sbb
pop
jno
fbstp
jecxz
cmp
movsl
mov
mov
int
lea
fcoms
sub
dec
ret
sub
imul
shll
cmpsb
and
rorb
push
rcrl
and
hlt
xor
in
adc
cs
and
ss
sbb
fst
jo
and
xor
sbb
lldt
ret
cmpl
bound
add
xchg
mov
sbbl
xchg
jns
iret
scas
or
jbe
mov
inc
jo
cmp
cmp
mov
ret
hlt
mov
out
imul
push
js
cli
mov
cld
inc
sbb
aad
das
mov
adc
dec
or
insb
lods
inc
xchg
mov
inc
xchg
iret
or
pop
jmp
fwait
jbe
ja
notb
out
loop
ret
lds
jge
sbb
popf
jne
ret
xchg
cmp
data16
mov
mov
stos
cmp
insb
shl
addr16
jle
hlt
lock
cwtl
xchg
add
stos
stos
push
jne
sbb
dec
jnp
push
dec
jb
insb
push
jae
sbbl
lret
mov
std
mov
pop
mov
bound
adc
mov
paddusw
dec
cli
ds
filds
sbb
cld
add
fsubrp
pushf
addl
sbb
mov
out
call
xchg
adc
ja
lock
divb
insl
push
push
xlat
jecxz
repnz
cmc
or
paddsb
xlat
jb
daa
and
lcall
jae
cld
in
inc
addr16
add
aam
dec
mov
xor
push
mov
out
enter
stos
ret
xor
add
dec
pop
cmp
mov
add
insl
arpl
jmp
and
int3
adc
mov
outsl
leave
inc
sbb
adc
into
loope
test
adc
outsl
mov
les
movsl
push
xor
sti
xchg
jo
lret
and
clc
inc
in
adc
cmp
push
lea
popf
mov
outsb
and
in
inc
cmp
aaa
push
jbe
aas
add
pop
and
mov
xchg
sti
repnz
lea
jle
add
jbe
xlat
mov
push
adc
add
cmp
jge
in
imul
js
mov
dec
out
mov
xor
jnp
aam
add
or
pushf
inc
mov
inc
dec
dec
out
mov
sahf
cld
repnz
cmp
push
xchg
dec
mov
cmp
jnp,pn
push
xchg
pop
sub
js
pop
aas
mov
lret
dec
mov
dec
test
repnz
jle
xchg
rolb
pop
testl
pop
xchg
icebp
sub
dec
insb
sub
scas
stos
out
mov
roll
sub
outsb
add
mov
out
mov
jle
jl
bound
push
loopne
test
aaa
in
iret
dec
and
cmp
xlat
std
out
add
adc
and
xchg
sbb
inc
pop
pop
mov
xchg
lods
in
push
aam
add
lea
pop
int
es
or
inc
lahf
adc
add
jp
loopne
inc
out
cmpsl
or
jp
jle
inc
shr
les
je
bound
and
mov
mov
mov
insb
idivb
ljmp
out
gs
sbb
into
mov
push
jo
adc
notb
fsubl
popa
push
push
sub
js
popf
jae
aaa
call
adc
ret
ficompl
xor
inc
in
sbb
sbb
xchg
sbb
xchg
inc
pop
xchg
aas
les
mov
and
mov
in
cwtl
test
mov
leave
xor
mov
cmpsb
sbb
negb
movsl
lahf
push
rsqrtps
pop
dec
push
mov
or
push
or
or
push
fists
and
js
aad
pop
fnsave
adc
hlt
mov
aam
insl
shlb
test
mov
jp
ror
or
inc
ret
sub
mov
cmpsl
or
fldcw
adc
dec
dec
enter
add
sbb
push
inc
repz
rcrb
sub
dec
pop
jns
insl
sbb
pop
lahf
mov
fnsave
pushf
push
and
aam
sub
pushf
rol
imul
add
pop
add
fidivs
fsubs
push
roll
sti
pop
cmc
out
pop
and
mov
adc
xchg
leave
loopne
inc
stc
push
daa
pushf
mov
insl
xchg
cmp
jbe
movsl
dec
scas
js
dec
lods
sub
mov
sar
cltd
test
or
fstps
int3
jae
xlat
push
pusha
xor
fistpl
in
push
jae
test
mov
and
jp
and
push
aam
lret
repz
clc
inc
std
mov
test
dec
fildl
inc
pop
ret
shrl
xchg
ficoms
sbb
ret
inc
push
inc
and
and
jns
lahf
mov
mov
inc
test
ficoml
imul
out
lods
ficoms
pusha
xlat
insl
sti
or
mov
or
fsin
test
cmpsl
mov
sahf
jg
adc
fld
jo
les
movsl
fstpl
cld
xchg
mov
sbb
inc
sbb
push
push
inc
mov
xchg
cmp
test
and
das
ja
je
jbe
xchg
dec
sbb
cwtl
mov
cmp
call
daa
add
and
jmp
mov
stc
test
xlat
jns
dec
out
xor
scas
jo
out
test
jge
jne
push
aam
jmp
mov
push
sub
int
hlt
mov
xor
sub
sub
adc
adc
ja
push
xchg
icebp
in
inc
lods
ret
jno
cmpl
xor
aad
repnz
int3
data16
ret
sbb
call
add
sbb
rorb
and
push
or
adc
test
push
sub
out
mov
iret
test
scas
shr
mov
int
mov
test
bound
mov
add
movsb
and
addb
mov
sbb
loop
stos
cmp
sub
and
inc
cmp
daa
add
in
arpl
or
cmp
jl
push
adcb
outsb
xor
pushf
das
sbb
jl
adc
hlt
xchg
mov
stos
repnz
xlat
and
inc
jb
repnz
mov
xchg
jae
ds
pop
inc
and
imul
and
pop
push
adc
mov
cmpsl
sbb
add
cmc
rcll
mov
push
icebp
leave
sbb
lret
aam
aad
lret
and
pop
jg
enter
mov
mov
rdtsc
rorb
rcrb
in
aad
hlt
test
push
enter
push
xor
jmp
xchg
mov
stos
sbb
pushf
cwtl
xchg
roll
and
cli
fbld
or
into
outsl
xchg
outsb
insl
bound
pop
jne
mov
ds
cmp
dec
stc
in
mov
scas
jne
pop
int3
pop
leave
dec
dec
fidivrs
adc
sbb
icebp
mov
mov
cltd
mov
cwtl
pushf
xchg
bound
xchg
shl
aam
int
je
add
sahf
add
lahf
pop
push
leave
mov
nop
push
sbbb
mov
test
sbbb
sbb
mov
ds
ret
stos
mov
jg
nop
dec
push
shl
lods
xor
jno
sbb
mov
das
sbb
cltd
sbb
repz
int
outsb
mov
inc
mov
add
adc
adc
mov
lret
test
adc
mov
fucomi
movsl
iret
pop
and
cmc
aad
mov
push
jb
add
ds
aas
push
outsl
dec
je
ljmp
sub
fnstenv
dec
fnstsw
push
int3
mov
add
sub
sub
add
hlt
or
xor
into
jp
shrl
or
mov
arpl
out
sub
mov
ret
jns
and
cmpsl
shrl
mov
or
dec
push
inc
mov
cmc
leave
pushf
fmull
loope
std
shrl
mov
pop
jnp
enter
sub
xchg
loopne
clc
sbb
xor
inc
sahf
outsl
pop
ret
aam
hlt
fsubrs
scas
jnp
lcall
sbb
enter
push
je
pop
ds
fcom
dec
dec
jnp
push
xchg
repnz
insl
jno
dec
iret
jle
mov
imul
rclb
push
mov
gs
jnp
clc
rolb
cmpsl
push
test
stc
add
insl
push
dec
sub
xor
add
sub
pop
int
xchg
pop
andb
sahf
adc
xchg
adc
add
sub
sbb
fsubl
sub
mov
push
dec
outsb
xchg
cmp
rcr
test
adc
out
cwtl
sbb
dec
pop
cs
mov
dec
aas
push
mov
test
movsb
mov
inc
add
mov
data16
in
mov
mov
mov
pop
mov
pushf
pop
adc
jp
lea
arpl
push
stos
mov
out
add
testl
mov
jge
mov
mov
jne
mov
shr
gs
cmpsb
mov
add
and
aad
sarb
loope
fstpl
push
add
es
jnp
arpl
cli
lea
push
push
pop
stos
mov
pop
inc
xor
xchg
push
stc
imul
in
push
jno
inc
rcrb
pop
into
pusha
or
cmpsl
pop
stos
addl
push
outsl
mov
jbe
sub
and
iret
xchg
lret
ds
fs
rclb
repnz
int
out
mov
push
inc
outsb
stos
push
mov
adc
xor
dec
fstpl
mov
jns
fdivrl
aad
pop
push
xchg
pushf
adc
or
mov
pop
pop
adc
ljmp
inc
push
cli
insl
ss
leave
aaa
in
inc
cmpsl
push
hlt
ljmp
adc
ret
xor
je
test
xor
dec
cmp
addr16
mov
call
inc
xchg
nop
jg
pop
das
xor
loop
jbe
leave
fsubl
dec
cwtl
in
out
pop
sbb
arpl
mov
cltd
xor
sbb
pop
cmp
dec
dec
inc
sbb
test
loopne
mov
scas
testb
mov
jnp
cmpsl
push
lds
inc
jo
scas
hlt
arpl
push
jmp
inc
in
jae
push
xchg
add
shr
xchg
fdivp
push
pop
mov
int
pop
ja
leave
xlat
dec
movsl
lcall
cmpsb
loope
sar
xchg
mov
or
fcom
imul
or
test
add
add
pop
scas
push
cwtl
std
dec
fs
ja
aam
mov
push
add
mov
in
iret
or
arpl
hlt
adc
add
xor
popf
xchg
nop
push
pop
adc
pop
push
fsubl
xchg
cmp
out
sarl
xor
mov
inc
or
or
jne
push
xlat
add
jmp
shll
lret
add
or
dec
jne
std
push
cmp
jecxz
iret
ficompl
int3
sub
inc
imul
jae
xchg
xchg
push
push
adc
xorl
or
pop
daa
notb
dec
std
jecxz
daa
jl
ja
out
push
pop
ret
mov
mov
in
ds
je
iret
mov
rol
push
and
add
jge
cmp
inc
sub
arpl
sbb
mov
xchg
jns
push
mov
push
in
aaa
jmp
out
sbb
fdiv
movsb
xchg
xorb
dec
dec
addr16
jnp
and
sti
notl
fwait
adc
dec
xchg
out
shll
add
push
and
mov
scas
insl
cltd
cld
sub
jmp
mov
in
fisubl
dec
adc
sbb
mov
adc
mov
subl
mov
push
or
mov
shrl
xor
inc
xlat
lock
and
and
xor
test
mov
mov
sbb
xor
test
std
test
iret
cwtl
push
aas
inc
outsb
stos
imul
push
inc
push
sbbl
or
push
fucomip
inc
lods
out
mov
imul
icebp
adc
adc
cmpsl
movsl
sub
or
incl
stos
movsb
sti
push
mov
mov
movsl
insb
cmp
adc
loop
mov
jae
push
lock
add
push
stc
rorl
int
fs
fisubs
inc
test
scas
inc
push
jbe
aam
and
fstpt
push
bound
in
lods
out
sub
dec
jmp
mov
daa
hlt
pop
dec
sbb
shlb
push
mov
in
xchg
xchg
push
cmpsl
in
in
mov
xorb
out
push
jns
shl
xchg
push
lret
dec
lods
sub
in
pop
stc
idivl
cmp
jnp
bound
sti
pop
pop
sbb
jecxz
adc
cmp
lock
inc
hlt
dec
pop
inc
adc
xor
push
cmc
lcall
inc
push
sub
push
call
mov
fsubrl
test
adc
out
repnz
and
pop
movzbl
div
outsb
sti
icebp
leave
mov
in
das
les
dec
cltd
out
lret
dec
cs
xchg
sub
pop
in
leave
xor
dec
loope
inc
lret
lret
pop
scas
mov
or
aad
add
sbb
xlat
lods
hlt
paddusw
sub
insl
mov
lock
fisubl
sub
cmp
and
mov
ja
jle
insl
enter
mov
sub
push
and
jb
test
outsb
jl
jae
jmp
out
dec
lahf
ret
jo
test
add
cld
inc
in
xchg
inc
ret
cmpsl
xchg
and
cmp
fnstcw
adc
clc
lods
jecxz
xor
or
pop
orb
fs
int
shrb
jl
or
adc
push
sahf
out
xchg
iret
pop
sub
jecxz
scas
pop
subl
mov
add
stos
ds
flds
insb
or
sbb
adc
scas
movsl
sbb
push
ret
das
cs
in
ficoms
clc
dec
lods
cmp
jb
mov
push
cmp
push
mov
test
and
test
lods
cmpsb
inc
into
arpl
pop
or
sub
nop
addr16
iret
cmc
sub
stos
rcll
push
xor
fcomp
inc
xchg
xor
sbb
jb
push
sbb
push
into
sub
mov
fidivrl
adc
popf
lahf
push
sarb
loop
sub
outsb
pusha
jmp
sbb
mov
arpl
mov
daa
push
jmp
pop
xchg
push
xchg
adc
xchg
jmp
test
pushf
mov
ds
test
test
iret
xor
repz
pop
xor
insl
mov
mov
add
scas
loopne
fs
xor
mov
mov
jo
and
and
test
div
xor
repnz
outsb
push
iret
popf
and
int
adc
pop
repz
xchg
cld
dec
xchg
ss
dec
or
and
dec
je
lds
adc
xchg
inc
or
mov
dec
imul
pop
jl
inc
daa
pushf
sub
dec
push
into
cmp
cli
stos
out
into
enter
mov
les
xchg
jge
lahf
fucomip
dec
fs
mov
cmp
dec
inc
popf
outsl
jp
push
mov
mov
xlat
int
add
jns
fcoml
pop
xor
jmp
clc
push
push
mov
lock
push
adc
pop
xchg
dec
aaa
push
xchg
push
mov
out
call
pop
cmp
dec
inc
mov
stc
and
mov
mov
stc
inc
jae
adc
ret
pop
sbb
mov
popl
dec
mov
sti
or
leave
popa
imul
es
addb
pop
push
mov
nop
xor
lcall
adc
push
push
stc
test
sbb
stos
scas
lcall
imul
cmpl
xor
fnstcw
outsb
add
std
adc
push
test
fcompl
adcl
lds
cmp
sbb
into
fwait
push
gs
ss
bound
fldl
inc
fisttpl
dec
stc
out
and
scas
shlb
add
in
les
pushf
scas
int3
sbb
sub
jg
and
popa
jmp
imul
adc
xorb
sub
add
in
cmp
in
jb
inc
inc
xorl
dec
adc
loopne
leave
nop
mov
shll
inc
ljmp
lcall
in
sbb
jecxz
clc
movb
mov
inc
popf
and
fistl
sti
pop
jo
lods
shlb
push
ret
mov
mov
or
ljmp
loopne
dec
pop
movsl
repnz
mov
mov
mov
push
or
sbb
movsl
fidivrs
popf
sbb
decl
fistl
mov
cmp
mov
cmp
loope
scas
add
enter
js
mov
cmp
mov
fwait
add
addr16
movsb
in
fwait
mov
add
mov
cs
fs
pop
jmp
testb
popf
lock
scas
je
pop
test
shlb
pop
push
xor
and
dec
loope
xchg
pop
hlt
mov
inc
pushf
dec
pop
inc
fwait
mov
jb
push
sub
mov
mov
and
inc
add
xchg
subl
pop
aaa
sbb
mov
scas
flds
mov
loop
mov
insl
xchg
add
data16
sub
xor
insl
jp
punpckhbw
je
in
jge
jg
dec
fsubr
daa
mov
imul
int
inc
dec
in
mov
and
push
pop
cwtl
adc
dec
insl
mov
mov
pop
test
mov
sub
sbb
lock
jnp
or
mov
insb
clc
or
mov
dec
test
lret
mov
mov
sub
loop
into
lahf
dec
popa
mov
sub
jg
mov
and
pop
mov
cmc
and
outsl
out
shll
bound
mov
sub
sub
cld
repz
and
std
cld
lds
hlt
pop
and
cltd
leave
arpl
mov
insl
stos
stos
inc
dec
and
gs
cmpsl
popl
nop
jae
sarl
dec
call
jb
push
push
ds
pop
mov
int
rcl
xor
fnsave
loope
in
cli
xchg
aaa
pop
xor
test
sbb
mov
sub
cmp
push
mov
cmpsl
or
or
add
jo
es
repz
dec
repz
roll
push
out
popa
mov
push
jno
insl
dec
jb
hlt
sbb
cmp
sub
rcrl
or
movsb
xor
add
into
test
sub
test
mov
xor
cmc
mov
jae
jg
mov
lods
add
in
xchg
call
mov
pushl
popa
insb
out
leave
rclb
rcrl
adc
idiv
pusha
or
cmp
shll
push
adc
inc
inc
mov
sub
out
cmp
das
fs
xor
or
in
out
jp
pxor
mov
data16
xchg
pushf
sub
xor
scas
fmul
inc
push
jb
mov
enter
roll
inc
mov
testb
les
mov
shrb
mov
mov
xor
mov
xchg
push
aam
inc
mov
mov
hlt
xchg
cmp
idivl
rcl
xor
sbb
and
in
dec
cmp
test
inc
stc
sbb
cmp
test
dec
call
and
sub
sbb
data16
test
push
xor
cli
mov
mov
inc
pushf
shll
xor
or
ss
lods
dec
fwait
aaa
sarl
cmp
hlt
add
mov
sbbb
sti
cmp
xor
xchg
js
rolb
lret
jno
jnp,pn
pop
in
push
shrl
pushf
or
add
dec
imul
jg
jge
push
inc
inc
pop
mov
jge
cltd
push
dec
mov
sbb
mov
push
add
and
clc
adc
mov
push
mov
push
hlt
in
mov
popa
xor
test
xor
loop
arpl
push
dec
mov
add
test
bound
cmc
pop
sub
popa
dec
sub
loope
movsl
xor
xor
jecxz
pop
andb
sub
es
mov
push
fnsave
or
lahf
fsubrs
xchg
xchg
int3
push
int3
inc
pusha
out
test
jo
clc
lcall
xchg
fsubs
xchg
fbld
inc
out
test
cmc
clc
int3
jmp
sub
mov
mov
push
nop
push
mov
cmp
mov
mov
push
jo
das
mov
push
push
inc
pop
daa
mov
jb
cmp
add
jg
or
lcall
push
mov
mov
iret
dec
jge
mov
cwtl
mov
cs
lret
push
ret
testl
mov
insb
mov
mov
push
dec
push
push
inc
incb
and
das
sbb
fwait
cwtl
lahf
popf
in
xchg
add
pop
inc
add
mov
out
inc
jo
outsb
push
mov
jns
sbb
pushf
popf
or
xchg
out
out
sbb
add
adc
and
stc
dec
xchg
xor
jl
pushf
outsl
xor
mov
divb
mov
sbb
repnz
mov
gs
and
test
fistps
push
cmp
fadds
mov
outsb
inc
sbb
bnd
gs
lahf
xor
mov
fildll
cwtl
pop
leave
xchg
jne
shr
jbe
sbb
pop
jle
in
jl
hlt
or
xor
xor
enter
xchg
aas
or
cld
push
pop
cmp
shll
jne
outsb
xor
push
dec
popf
mov
push
rcrl
rcl
adc
dec
mov
xlat
xchg
sbb
decl
outsl
fcoml
lods
outsl
in
adc
popa
pop
enter
mov
mov
sbb
jl
mov
push
mov
aaa
pop
adc
mov
sub
cmp
js
mov
xchg
sub
in
push
idivb
sarl
int3
setnp
mov
push
in
xchg
push
push
ljmp
cld
jle
mov
cmp
jnp
movsb
fnstsw
je
test
cmpsl
fmull
dec
out
vpshufd
outsl
pop
rolb
jmp
jmp
sub
ljmp
cmp
xlat
aad
sbb
lods
jmp
out
jg
cmp
insb
pop
jl
fistps
ljmp
lahf
lods
xacquire
mov
adc
popf
jle
enter
test
lret
mov
aad
push
stos
xor
mov
cmp
fiaddl
pop
mov
mov
inc
mov
addr16
stos
mov
clc
stc
add
sar
pop
test
inc
fadds
xchg
inc
cmp
paddb
adc
scas
push
fs
cmpsl
dec
mov
adc
push
pop
add
mov
das
mov
push
pop
pop
pop
xor
and
push
push
sti
test
aam
xchg
sbb
cmpsl
mov
sbb
fs
test
inc
mov
adc
ss
fsubl
daa
jle
and
fsubl
and
inc
dec
adc
dec
scas
arpl
sub
mov
fcmovb
leave
in
xchg
call
push
js
clc
mov
out
in
sahf
cmpb
lock
jecxz
out
mov
push
lods
push
fisubs
lods
fwait
cmpsl
loope
xor
and
cmp
mov
dec
jle
in
sbb
sub
sbb
or
pop
in
mov
bound
popf
add
or
sub
cmp
outsb
js
out
lcall
add
loop
ds
cs
mov
adc
js
pop
push
add
push
jge
or
pop
pop
ret
stos
mov
cmpsb
out
cltd
insb
es
das
and
cmp
xor
testl
pop
arpl
call
enter
test
push
push
fdivrl
mov
ret
popa
pushf
test
add
fldz
sub
ja
adc
iret
aad
sub
cltd
js
push
pop
mov
add
clc
adc
mov
mov
xchg
mov
adc
test
adc
mov
jo
loop
adcl
into
add
stc
xchg
mov
adc
fs
shlb
das
cmp
fcomps
mov
sub
in
popl
loop
push
add
fmulp
mov
and
out
in
push
push
cmpsl
stos
outsl
xor
cld
add
push
inc
mov
mov
inc
lds
dec
push
out
jb
dec
fmull
mov
sbb
inc
inc
xor
mov
dec
sbb
rorb
add
in
xor
loopne
adc
in
xchg
rcll
jns
stos
push
outsb
lods
adc
rcr
xchg
push
push
mov
mov
mov
test
mov
outsb
pop
adc
mov
insl
dec
pop
or
icebp
lea
push
xchg
add
and
xor
lds
xlat
std
xchg
outsl
lea
sub
and
sbb
cld
mov
pop
data16
mov
push
ret
mov
test
pusha
jo
fsubrl
cmp
mov
mov
mov
sbb
ss
jl
jb
push
sbb
out
scas
dec
jae
call
or
idivb
aam
cwtl
in
addr16
mov
subl
pop
sub
cmp
xchg
or
push
stc
jmp
mov
mov
aas
les
cmp
out
test
loop
sbb
sub
aad
je
mov
int3
inc
cs
and
mov
pop
in
repnz
push
adcb
stos
xchg
arpl
xorl
lcall
sbb
out
ret
shrl
mov
out
ja
mov
orb
adc
cmpsb
dec
gs
in
mov
stos
lds
jmp
inc
dec
inc
sbb
out
lret
xorb
jnp
daa
jns
pop
mov
out
push
fistps
cmp
xor
fstpl
pushf
add
sub
jge
and
jmp
lahf
loope
mov
xchg
cmp
stos
jecxz
movsb
fsincos
inc
decb
lret
cwtl
je
rcrl
mov
jb
out
dec
jb
jecxz
xor
into
push
std
int
xlat
ret
cmp
adc
adc
scas
push
mov
inc
shlb
in
jp
pop
dec
stos
xor
mov
movsl
stos
adc
shlb
shll
pop
imul
loope
sahf
xchg
scas
and
movsb
ljmp
cmp
sti
into
inc
jb
adc
sub
jecxz
jbe
and
in
lds
sbb
mov
imul
mov
and
out
bnd
lea
inc
cmp
cmp
jae
addb
push
or
leave
push
sub
leave
dec
sub
fdivrl
sub
mov
std
stos
mov
fsubr
rorb
push
jbe
icebp
out
dec
add
mov
jb
popa
push
sti
sbb
xchg
xchg
mov
xor
and
jg
leave
mul
int3
push
cmp
jne
or
es
sbb
mov
dec
or
aaa
into
mov
fwait
or
dec
fbstp
fdivl
push
jo
movsl
pop
push
popf
outsl
push
mov
xor
push
mov
into
push
mull
adc
dec
pop
push
and
or
in
pushf
dec
popa
fmuls
mov
or
xchg
dec
pop
test
cmp
pop
ret
icebp
push
add
pop
jno
js
mov
bound
mov
xor
push
jmp
mov
sahf
mov
ja
in
mov
adc
add
out
insl
push
dec
or
pop
sbb
jno
push
mov
cmp
xchg
movsb
cs
sbb
sub
lahf
fs
in
inc
fs
mov
dec
out
mov
sub
mov
roll
push
mov
cli
loope
push
subl
adc
mov
lea
jmp
mov
mov
inc
mull
sarb
ljmp
sbb
rol
push
inc
sub
mov
dec
sub
cmp
mov
jl
scas
fiadds
sahf
adc
inc
add
inc
inc
mov
inc
fadds
adcb
pop
inc
adc
mov
adc
je
or
imul
mov
iret
aaa
fwait
mov
movsl
and
xor
movsl
mov
ds
push
mov
imul
cmp
cmp
sbb
and
jle
sub
imul
lock
repnz
mov
out
cli
stos
inc
sbb
rorb
je
add
imul
inc
jge
mov
xlat
lods
adc
mov
fsubs
inc
jns
fsts
add
rcr
mov
mov
gs
dec
push
inc
jbe
pop
and
push
and
add
jne
movsb
mov
es
int
hlt
jne
xchg
pop
sbb
pop
lret
add
push
push
pop
jae
pop
xchg
xchg
push
in
outsb
in
dec
nop
mov
mov
push
push
cmp
push
pop
mov
ja
sbb
add
dec
es
lock
movsl
repz
outsb
mov
xchg
add
or
out
xorl
mov
dec
mov
sbb
mov
nop
ja
sbb
xchg
lock
ds
pop
push
push
push
add
jb
sub
aaa
and
bound
sbb
rcll
add
push
movsl
out
cmpsl
das
jae
test
dec
fdivr
hlt
sbb
mov
stc
stos
inc
dec
mov
sub
lret
lret
sub
mov
xchg
jo
jns
add
mov
inc
sub
inc
lret
ja
mov
add
jmp
inc
and
mov
push
jg
fidivrl
idivl
sbb
fistl
sub
ror
jb
mov
jnp
pop
pop
jge
push
or
ss
outsb
fistpl
mov
xchg
add
jg
dec
and
arpl
sub
and
hlt
pop
fimuls
arpl
sbb
dec
cld
push
test
jmp
jmp
xchg
sub
outsb
ja
push
pop
cli
iret
test
mov
jge
add
mov
xchg
ficoml
dec
jmp
insb
jmp
pop
adc
sub
pop
or
and
iret
mov
int
cld
ds
cmp
jg
into
insb
mov
lahf
push
xlat
stos
add
fcoms
xchg
xchg
fwait
cmpsb
imul
inc
or
inc
loope
insl
adc
ss
out
aam
sarl
or
in
movsb
or
push
xor
je
cmp
hlt
lods
test
mov
cmp
mul
push
sbb
jnp
idivb
sbb
xchg
mov
scas
sbb
and
mov
testl
popl
or
or
out
cmpsb
fistpl
jae
add
aad
imul
pushf
pusha
repnz
or
in
pop
and
cmp
add
sub
sbb
addb
not
mov
jo
sub
mov
pusha
pushf
mov
sahf
shll
mov
sbb
lods
add
push
scas
xlat
mov
jae
sub
mov
into
lahf
inc
or
xchg
jp
leave
jp
in
lods
sub
call
and
jae
push
xchg
cwtl
pop
out
repz
pop
add
push
push
xchg
xchg
lods
fcomps
or
xlat
movb
sbb
xor
fldt
mov
cmp
xchg
dec
jnp
inc
or
loope
and
dec
loope
scas
sbbb
sar
xchg
cld
pop
ds
pop
sbb
inc
add
inc
push
dec
jo
add
jbe
or
jg
scas
movsl
push
jmp
push
stos
pop
jns
mov
push
rcl
in
mov
clc
outsl
mov
jae
mov
add
gs
mov
mov
pop
xchg
pop
push
or
jecxz
data16
and
scas
fdivrl
add
push
pop
or
clc
lods
fcoml
pop
jns
mov
jno
test
xchg
pop
inc
lods
sub
shll
loop
pop
imul
and
xor
movsl
inc
pop
test
mov
mov
rorb
shl
es
push
mov
mov
xor
sub
mov
jl
jbe
adc
hlt
sti
mov
sub
jne
xchg
pop
mov
and
xlat
mov
fstps
mov
inc
cld
iret
test
pop
sbb
out
push
movsl
mov
mov
jb
jno
push
pop
fbstp
mov
or
into
jb
test
jmp
lods
mov
gs
pop
popa
cmp
ret
mov
repnz
lds
fidivl
addb
fwait
sub
stc
mov
cmp
pop
ja
mov
push
sbb
mov
ja
pop
rorb
out
shrl
and
cwtl
mov
cmp
in
or
and
adc
repz
pop
out
icebp
loope
cli
pop
add
mov
pop
pop
mov
ja
jmp
in
icebp
inc
int3
push
aas
divl
pop
jge
hlt
hlt
movsb
mov
pushf
or
sbb
xchg
mov
mov
insb
xchg
into
push
andb
cmpl
xchg
push
iret
fs
pcmpeqw
pop
lds
cmp
fidivrl
pop
cmp
mov
and
mov
jmp
outsb
mov
pop
movsl
data16
or
testb
call
dec
out
xor
stc
fsubr
sub
outsl
add
lret
dec
int3
out
jmp
gs
aas
dec
pop
mov
lea
push
cld
mov
cs
fwait
test
inc
sbb
in
mov
inc
pop
insl
das
jmp
adc
xor
mov
loop
jg
aad
fxch
inc
out
inc
jbe
mov
lret
loope
insl
cmpsb
dec
fcompl
dec
xor
insl
das
cld
in
scas
mov
jg
jp
int3
rorl
xchg
pop
mov
fdivrp
dec
mov
inc
test
jecxz
leave
and
enter
repnz
bound
mov
jmp
dec
mov
and
mov
cli
inc
jne
fistl
mov
add
fwait
leave
mov
cwtl
stc
lret
or
ja
mov
aam
lds
xchg
test
pop
stos
jo
add
push
bound
mov
xchg
and
jns
jo
push
add
in
mov
lods
lods
aaa
or
inc
sbb
addr16
popf
pop
les
imulb
loope
cmpsb
les
pop
xor
sti
cmpsl
cld
xor
mov
out
add
fwait
test
inc
mov
and
sub
mov
dec
es
cmp
jg
rorb
loope
sub
inc
imul
cmp
in
sub
in
outsb
push
lea
xor
xchg
stos
dec
flds
cmpsl
enter
frstor
inc
lret
insb
stc
jl
repnz
cmp
jge
nop
add
fiadds
fsts
adc
cmc
mov
loop
js
stos
test
adc
notb
add
fdivs
stc
loope
or
adc
inc
jg
jecxz
mov
jmp
jle
cmp
sub
jp
xchg
inc
pop
adc
mov
mov
cmp
leave
mov
mov
sub
out
in
push
push
aam
cwtl
cmp
hlt
mov
and
mov
xchg
dec
cmc
shl
jo
lods
xchg
cmp
leave
icebp
mov
movsb
int3
xor
in
xor
xchg
add
jno
lods
outsb
mov
mov
pminsw
stos
adc
out
mov
repz
lahf
gs
adc
mov
rorl
sub
push
stos
jae
loopne
jle
adc
mov
inc
jge
and
xor
test
out
dec
jns
cmp
enter
rorb
adc
and
inc
pop
adc
pop
and
jne
add
shll
int3
js
data16
shll
js
jge
xor
repz
fcompl
inc
sub
mov
fmul
fdivrs
jge
inc
out
arpl
sub
mov
dec
sti
mov
pop
dec
pop
xor
enter
pop
sbb
gs
imul
sahf
mov
inc
stos
jp
test
leave
cmpsb
loopne
idivl
imul
loope
mov
mov
mov
inc
xchg
push
rcr
push
xorl
pop
sbb
in
sar
mov
lret
repnz
pop
std
sbb
adc
sti
stc
test
or
xchg
fcmovnb
dec
daa
lahf
push
xor
push
scas
inc
pop
jecxz
test
push
mov
jg
sub
push
aam
ss
call
dec
jbe
mov
stc
mov
or
jge
pop
push
push
fwait
aam
xchg
jg
adc
adc
sbb
mov
dec
aam
push
and
testb
mov
lods
sub
xchg
int
outsb
push
rcll
aam
ret
jge
and
xchg
jae
inc
lods
xlat
lret
sbb
arpl
popl
adc
dec
pop
lds
push
sbb
mov
es
fildll
gs
mov
mov
aaa
jmp
in
enter
das
arpl
loopne
das
aad
jmp
loopne
stos
out
dec
or
shlb
fisubrl
fucom
adc
adc
cld
adc
or
xchg
mov
andl
pop
test
divl
adc
lods
sbb
aam
std
inc
fstp
mov
mov
pop
cmpsl
popf
imul
or
xchg
dec
xorb
xor
pop
xchg
cmp
fnstenv
es
cmp
or
pop
loope
add
or
test
jmp
int
cs
ror
cmpsl
icebp
call
pop
ja
jmp
push
push
movsb
daa
xor
mov
mov
decl
test
pushf
inc
test
mov
xchg
push
jne
mov
cmp
divb
or
fnop
fcmove
loope
inc
xchg
jmp
mov
mov
jns
xor
es
sub
shr
dec
jg
rcrl
lods
or
inc
pop
inc
xlat
and
adc
dec
push
mov
push
sub
jno
movsb
adc
subb
lods
cmp
outsb
jno
jecxz
jno
mov
sti
mov
cmp
test
in
lds
or
aad
fldl
cmp
cmp
cli
mov
lods
xor
add
push
rol
leave
lock
outsl
lods
int
cmpsl
lahf
test
xor
mov
testb
sarb
rorl
xor
lods
inc
jl
loop
movnti
in
data16
repnz
bound
mov
fcoml
cmpsb
test
inc
cmp
call
mov
scas
cmpsl
xchg
inc
pop
pop
shrl
add
mov
jmp
adc
xchg
pop
imul
cld
push
sub
or
bound
mov
pop
dec
movsl
clc
call
ja
push
mov
dec
sub
mov
add
pop
lret
aad
int3
mov
cmp
pop
pop
sbb
das
mov
or
mov
int3
out
leave
cmpsl
mov
test
fimuls
lods
das
cmp
pop
mov
out
mov
sbb
fldt
mov
pop
std
inc
repnz
dec
or
mov
mov
or
mov
and
push
stos
jo
jg
insb
sub
cmp
jp
xorl
out
out
fisttpl
aam
cmpsl
lahf
cltd
aam
jno
insb
out
in
std
in
lret
mov
lahf
add
sahf
inc
adcl
mov
jl
pop
test
pusha
or
pop
or
fwait
mov
pop
cmp
sub
imul
adc
in
mov
shr
push
rcll
push
jg
push
inc
mov
adc
cmc
mov
movsl
loope
mov
xchg
arpl
in
test
mov
outsb
jp
cli
adc
and
bound
jmp
push
inc
cmp
add
lcall
sar
mov
xchg
adc
mov
insb
in
arpl
fs
in
adc
mov
ret
repz
push
xchg
inc
pop
push
jb
sub
and
dec
sbb
ja
fsubr
adc
mov
pop
add
lcall
mov
mov
and
test
out
js
lcall
push
or
xor
lock
and
mov
sub
xlat
imul
adcb
or
mov
pop
sub
pop
cmp
sbb
inc
mov
movsl
sbb
or
jg
daa
addr16
jecxz
xor
aad
xchg
push
fidivl
xchg
mov
push
cmpsb
adc
mov
lock
cwtl
mov
jge
and
sub
dec
mov
imul
jb
mov
fwait
dec
shll
xchg
jle
loop
rorl
sub
loopne
test
sti
mov
push
pop
decl
into
flds
xor
inc
mov
rorb
pop
sub
clc
xor
cmp
mov
leave
lcall
inc
stos
jle
les
lret
cmpsl
cwtl
daa
hlt
pop
jnp
xor
into
jne
push
lret
mov
xchg
sub
mov
call
inc
inc
into
inc
dec
mov
cmp
push
dec
inc
aad
rorb
popf
sarl
fstps
sbb
scas
movsb
cmp
adc
mov
adc
daa
mov
dec
jbe
das
out
add
mov
cmpsb
mov
mov
sbb
xchg
mov
dec
loope
add
sub
xchg
insb
push
dec
cmp
cmp
or
pop
ret
adc
pop
bound
icebp
movsb
test
sar
fisttps
dec
dec
pusha
xchg
xchg
mov
push
jne
mov
mov
rcrb
cmp
mov
jns
test
xchg
cli
jbe
test
stos
cmp
pop
aad
adc
mov
ljmp
scas
imul
jg
out
push
pop
stc
or
mov
dec
ret
mov
add
repnz
sbb
xor
xchg
xor
frstor
sub
out
test
pop
je
insb
mov
pushl
in
clc
adc
push
cltd
mov
lcall
dec
addr16
test
inc
push
jo
push
dec
sbb
test
mov
push
fidivrl
imul
or
dec
jb
cltd
dec
lock
nop
mov
and
repnz
mov
gs
inc
cld
mov
jns
jno
cmp
add
cmp
insl
xchg
sbb
pop
inc
movsb
dec
test
fwait
div
adc
fbld
dec
push
jle
mov
sub
loop
jns
imul
mov
shll
adc
xchg
outsl
xor
das
push
push
sbb
enter
and
jp
gs
cmp
add
sbb
push
push
xchg
inc
call
inc
jns
sub
push
repnz
lock
xchg
xchg
sbb
lahf
test
scas
mov
pusha
dec
push
ror
mov
mov
inc
push
cmp
test
lcall
repz
mov
push
lea
out
push
sub
out
pop
cmp
or
loope
add
gs
cwtl
and
sbb
or
xlat
mov
or
or
mov
stos
inc
pop
leave
iret
rcl
ss
xchg
cmpb
sbb
sbb
ds
jbe
xchg
das
xchg
push
push
in
lcall
repz
outsb
and
cmp
cmp
jo
jae
pop
aad
popa
out
jg
mov
xchg
movsl
sub
lds
pop
pop
xor
cmp
out
and
jle
mov
mov
lahf
adc
mov
cmpsb
ljmp
pop
add
xchg
les
aad
stc
in
pop
in
mov
sbb
out
testb
pop
add
mov
aad
xor
insl
icebp
xor
and
shll
push
xchg
dec
xchg
jo
push
pop
inc
das
add
xchg
sub
fs
dec
dec
dec
sub
sub
pop
repnz
rcr
shll
repnz
jbe
icebp
mov
sbb
pop
xchg
or
out
mov
loopne
pop
test
mov
mov
push
shlb
jmp
jg
pop
movsb
in
aas
pop
je
inc
loope
aam
std
add
adc
and
mov
adc
call
scas
pop
jl
test
and
pop
dec
jns
xlat
add
push
add
int
shl
lea
mov
cld
cmp
mov
inc
sub
mov
sbb
test
cld
ljmp
xor
mov
and
adc
adcb
test
repz
jg
pushf
ds
testl
cli
jg
xor
out
sbb
lods
jl
xor
jns
pop
inc
inc
test
push
fidivrl
addl
mov
jae
push
add
sbb
inc
xchg
into
push
insb
pop
and
adc
fsubrs
xchg
sub
test
push
mov
cmp
mov
icebp
pop
out
xchg
cmp
lret
pop
xor
test
shll
xor
lock
dec
pushf
leave
or
imul
add
pop
pop
fisttps
aam
push
imul
dec
pop
sub
scas
scas
mov
out
mov
add
and
xor
into
stos
dec
inc
int
or
or
or
sbb
cmp
sbb
pop
lds
push
sbbb
sub
ret
pop
cli
cmp
sbb
mov
ret
cs
lods
and
cmp
pop
lret
aas
cmp
imul
test
in
mov
fmull
and
xor
jno
pop
fwait
mov
xchg
clc
arpl
inc
iret
shrb
popf
pushf
and
mov
push
outsl
shll
in
pop
fsubrs
sbb
jns
out
or
sbb
cwtl
hlt
sub
add
lods
imul
fsts
adc
lcall
test
dec
out
jbe
jge
adc
or
sbb
sbb
loopne
daa
loopne
push
or
add
xlat
inc
xchg
push
mov
out
in
push
mov
pop
mov
fistps
jno
ficoms
jp
fwait
lods
and
fildl
push
into
adc
stc
xlat
in
mov
cmpsb
xlat
xchg
out
add
outsl
cmp
repz
out
or
xlat
dec
sub
xchg
inc
out
cld
cmpsl
jns
sbb
jg
out
xchg
sbb
rorb
dec
xor
jle
pop
or
fdivr
fwait
xor
pop
inc
mov
xor
insb
add
lcall
inc
sub
int3
int
xor
dec
xchg
xchg
jle
call
ds
mov
pop
add
add
cmpsl
jmp
lret
in
mov
addl
push
dec
jo
sbb
xchg
mov
and
mov
sub
xchg
out
push
cmpsl
imul
cmp
push
push
cmp
dec
add
mov
xchg
jbe
adc
popf
or
push
sbb
jne
rcrb
sbb
data16
push
aam
ja
arpl
shll
aas
out
iret
inc
pop
add
imul
bound
jae
inc
in
pop
add
dec
inc
sahf
sbb
xchg
lahf
or
pop
adc
adc
mov
enter
insl
sub
stos
cmp
xor
jle
push
or
push
ljmp
aaa
add
add
or
shlb
lea
add
call
mov
repz
mulb
lods
insl
dec
leave
jbe
inc
rol
xor
adc
and
or
mov
mov
movsl
out
mov
adc
mov
xor
and
dec
xor
jbe
cmpsl
and
fstps
or
mov
and
aad
je
in
imul
xchg
pop
jmp
adc
mov
rorb
icebp
cmp
sbb
int
data16
add
xchg
pushaw
lret
add
xor
jbe
rcr
shl
aas
mov
and
jmp
lcall
loope
mov
sbb
cmp
inc
cmp
out
jb
test
mov
sahf
and
sbb
test
xor
inc
gs
inc
cmp
xor
and
push
aam
mov
jns
push
lahf
out
jne
jp
push
inc
xchg
adc
fidivrl
mov
sub
pop
sbb
mov
or
and
adc
jl
adc
cmp
or
dec
aas
imul
in
mov
jecxz
pop
scas
loopne
pushf
aad
push
popa
adc
test
cli
mov
cmp
adcl
sub
xor
inc
leave
leave
sub
mov
mov
test
xor
sbb
enter
mov
ffree
push
das
lods
mov
add
stos
add
addb
testb
dec
and
inc
ret
xor
xor
aad
cmp
das
mov
sub
mov
ror
xchg
fcom
push
sahf
push
pop
add
iret
cmp
stc
daa
popf
sti
and
mov
and
adc
mov
pusha
insl
sbb
jmp
cmp
mov
mov
fucomp
xor
push
mov
bnd
fwait
xor
cwtl
xchg
repz
daa
and
test
outsl
mov
hlt
dec
add
xchg
mov
cmpb
mov
sbb
sub
ret
xlat
clc
in
push
iret
insl
sbb
cmp
gs
popa
stc
mov
push
mov
push
fstpt
mov
test
xor
xor
sahf
adc
into
push
xchg
iret
xorb
lret
jg
gs
gs
dec
sbb
push
pop
cs
xchg
scas
mov
pop
pusha
dec
push
push
mov
mov
imul
icebp
sub
mov
push
inc
push
xchg
xchg
aam
sbb
je
jb
dec
lock
rcrl
and
or
test
xor
outsl
lods
clc
int3
sti
iret
adc
mov
cli
sub
outsl
shl
and
mov
sbb
or
das
sbb
add
mov
jecxz
mov
sbb
ljmp
iret
iret
pusha
pop
jbe
add
pop
out
sub
int3
sbb
mov
push
icebp
xlat
hlt
sbb
mov
push
and
pop
out
les
sub
push
outsl
sti
or
xor
es
stos
push
jae
les
pushf
clc
out
je
xchg
adcb
stos
mov
push
pop
ja
xlat
push
dec
sbb
xchg
mov
stos
or
inc
sbb
dec
fidivrs
test
sub
ret
adc
jge
pop
daa
sub
js
lret
dec
sahf
lahf
dec
testl
loope
push
sub
jecxz
mov
pop
notl
testl
fdivl
lret
scas
loope
hlt
lods
or
movsl
leave
mov
clc
or
xor
adc
cwtl
pushf
scas
push
inc
jmp
lret
and
cmc
addr16
inc
movsl
testl
mov
jecxz
and
mov
mov
arpl
dec
push
fcomps
mov
jp
rorb
mov
mov
and
pusha
lea
jb
aam
popf
inc
fs
mov
fwait
sbb
pusha
sbb
out
pusha
pusha
xchg
fcoml
push
pop
aas
add
das
stos
mov
dec
bnd
adc
pop
stos
cltd
cmp
andb
call
aaa
cmp
mov
imul
xlat
pop
je
fsubs
add
icebp
stos
in
add
push
sahf
push
into
mov
je
sbb
scas
xor
dec
mov
push
xchg
repz
push
pop
cmp
cmpsb
jne
lcall
jo
fldz
cmpsl
test
cmp
scas
push
push
mov
popa
dec
lret
sub
mov
add
fwait
adc
call
sahf
clc
mov
cmp
out
stc
push
es
pop
dec
pop
je
mov
add
xchg
dec
imul
cmp
mov
sub
addr16
in
xor
nop
pop
shll
out
sub
inc
sub
mov
lahf
insl
mov
mov
mov
fcmovu
pop
sbb
mov
sub
push
add
repnz
lcall
fisttps
add
aad
mov
fs
out
mov
stos
dec
xchg
xchg
je
dec
pop
add
notl
fs
mov
fistpll
xor
sbb
and
in
sub
js
mov
cmpsb
mov
shll
aam
ja
fimuls
xor
fnsave
mov
cmpsl
shll
fs
ret
push
mov
cmp
stos
fsubrl
gs
popa
cli
mov
jp
fstps
jg
jnp
rcl
or
cs
ss
sahf
inc
pop
rolb
in
das
and
pop
jl
scas
mov
insl
mov
nop
sarb
cmp
and
loope
sbb
movb
and
out
fsubrs
sahf
push
or
cmp
pop
pop
lret
xchg
dec
add
fisttpl
jne
int
push
inc
cmp
repz
in
ret
jl
add
ret
fisttps
out
xchg
sub
repz
pushf
test
mov
push
or
xchg
in
mov
or
andb
mov
addr16
out
insl
fstps
fs
out
or
aad
mov
mov
push
and
stc
outsl
inc
sub
mov
sbbb
mov
mov
call
pop
mov
clc
inc
int3
pop
xor
shrl
dec
mov
cmp
cs
lahf
int3
xchg
mov
cmc
sbb
add
jne
sub
mov
cmp
jb
cltd
iret
dec
cld
insb
and
cmp
clc
mov
sub
in
mov
xchg
xchg
int3
imul
fsts
stos
mov
mov
sub
mov
cmc
popa
stos
push
popf
adc
and
and
pop
movsb
in
cmpsb
fidivs
jb
push
repz
or
test
stc
std
mov
scas
cmp
pushf
js
xchg
lods
sbb
outsb
std
mov
in
mov
out
xor
cmp
cltd
hlt
add
movl
jne
repnz
mov
sbb
cmp
pop
lahf
push
jo
mov
lret
sbb
in
xor
mov
shlb
or
ficomps
pop
ljmp
scas
adc
dec
cmp
clc
adc
test
pop
cwtl
add
inc
out
mov
bound
scas
xlat
loope
lcall
push
cwtl
pop
nop
or
call
xchg
in
add
je
lock
maskmovq
repnz
push
call
scas
hlt
cmp
jmp
sbb
jnp
jnp
addb
adc
mov
stos
pop
mov
pop
sub
mov
adc
iret
sbb
jl
pushf
loop
hlt
movsl
xor
addr16
enter
rorb
and
xor
or
sub
js
fstpt
test
inc
mov
inc
scas
add
pop
adc
push
mov
or
xchg
inc
xor
jmp
ljmp
mov
or
rclb
push
lcall
shll
jmp
pop
jns
jmp
mov
inc
or
sti
call
push
das
push
jp
lds
mov
movsb
mov
stos
cmp
inc
das
xchg
mov
mov
or
sbb
cwtl
pop
stos
movsl
pop
cltd
dec
sub
push
xlat
stos
test
aas
nopl
ret
imul
mov
out
mov
decb
js
mov
push
pop
addr16
data16
movsl
dec
mov
mov
hlt
inc
pop
sub
in
test
mov
sub
xor
add
scas
mov
mov
mov
clc
hlt
addl
sbb
adc
dec
popf
scas
fs
iret
icebp
mov
lret
ja
dec
gs
dec
sahf
inc
ja
int
stc
mov
addr16
sub
pop
mov
xchg
loope
mov
shl
mov
daa
ja
out
jne
adcb
test
lock
mov
mov
insb
xchg
cmpsl
loopne
jg
pop
cwtl
andl
cld
popa
jecxz
mov
popf
add
pop
jmp
jb
cmc
dec
adc
xchg
inc
dec
enter
mov
js
pop
push
cli
cmp
icebp
pop
fstpl
sbb
push
sub
fmulp
cwtl
mov
push
adc
add
sbb
jno
lock
push
ss
mov
jo
insb
xchg
or
inc
xchg
adc
mov
scas
dec
xchg
xchg
jno
je
pop
mov
lods
mov
lds
lea
push
ljmp
cwtl
push
ds
add
lds
sub
shll
popa
imul
inc
dec
lock
mov
push
pop
sbb
rolb
lcall
in
popa
sbb
add
jmp
jge
push
outsl
pushf
dec
enter
sbb
push
jmp
jo
ret
mov
ds
insb
movsb
add
xchg
pop
adc
in
xor
push
je
jbe
sub
lods
aas
cwtl
mov
loop
outsb
push
imul
cli
jo
or
sub
fcoms
jae
mov
shlb
iret
sub
cmpsb
mov
dec
pop
dec
js,pt
sub
stc
leave
adc
outsb
xchg
ret
repz
in
js
or
shl
jnp
mov
jl
sbbl
add
lcall
mov
xchg
push
or
jmp
pop
insl
xchg
xchg
cmpl
jns
cmpl
mov
jecxz
aam
orl
or
in
jle
inc
sbb
shr
mov
or
cmp
stos
insl
mov
sub
jb
sub
jp
stc
push
mov
ret
dec
mov
int3
push
pop
addr16
std
hlt
pop
or
pop
push
push
negl
fwait
push
mov
ja
arpl
sbb
pop
dec
stos
jnp
xor
xchg
shl
xchg
push
das
insb
cmp
dec
mov
bound
fisttpll
gs
xor
in
mov
sbb
push
lret
mov
out
shrb
add
xor
js
jmp
ja
jl
insl
push
insl
push
outsb
push
mov
cmp
into
mov
and
jb
test
out
inc
xchg
and
xchg
mov
xchg
gs
push
xchg
mov
jb
rolb
mov
les
arpl
popa
popl
push
dec
das
jg
or
shlb
inc
adc
jmp
pop
mov
lea
cli
lahf
and
jecxz
xchg
xchg
pop
pop
mov
adc
jecxz
or
fmul
cmp
subb
inc
shlb
dec
or
orb
push
dec
add
mov
rcll
jns
pop
into
addr16
sbb
ficoml
cmp
cmp
mov
xor
pusha
adc
sub
out
std
jns
mov
cmp
cs
rorb
jecxz
imul
dec
push
dec
int3
pop
out
or
adc
mov
aas
push
push
and
jp
jge
repnz
dec
lret
insb
imul
xor
pop
shll
mov
mov
mov
fbld
dec
and
pop
xchg
push
mov
lahf
imul
loop
arpl
or
ja
stos
test
subb
push
andl
mov
dec
xchg
adc
test
cld
pcmpeqw
bound
insb
mov
mov
adc
xor
pop
push
out
or
sti
jno
les
mov
gs
fnstsw
sub
mov
mov
cmpsl
fwait
mov
das
daa
je
inc
cwtl
mov
dec
rcrb
add
fbld
xlat
inc
ret
push
cltd
or
lret
negb
jbe
cmp
push
loop
lret
and
int3
lock
mov
and
push
inc
push
loope
test
and
notl
addr16
adc
mov
sti
rcll
clc
es
jmp
pop
mov
repz
fsubrp
mov
adc
cmp
or
push
add
repnz
cs
je
leave
xchg
loope
or
aam
inc
neg
xor
cltd
imul
pop
insl
jg
out
mov
fstpl
adcl
jbe
adc
sbb
push
test
mov
pop
mov
and
mov
imul
aam
addr16
icebp
clc
int
shlb
xchg
sti
sbb
test
sbb
out
and
pop
pop
sub
scas
dec
adc
push
mov
sbb
stos
pushf
xchg
imulb
mov
btc
push
mov
xorb
mov
data16
sti
ret
jp
stos
cmp
push
aas
and
scas
in
shll
jnp
rcrb
testb
inc
inc
shrl
pop
mov
sub
xchg
cmp
leave
seta
lods
lea
xor
ret
push
iret
xor
lds
or
sbb
pop
xor
outsb
cmp
inc
mov
dec
fadd
push
sahf
sub
shrl
pop
pop
jmp
add
data16
or
aad
insl
mov
jmp
sbb
aas
shl
inc
stos
lock
test
adc
and
pop
mov
int
mov
xor
jl
rclb
pop
or
imul
test
cmpsw
sub
cmc
loopne
pop
dec
sbb
dec
jl
inc
push
jmp
cmp
fidivrs
push
popa
or
leave
cmc
aam
or
jb
or
cmpsb
xlat
clc
cmp
loope
imul
mov
mov
loopne
adc
sarb
push
lea
adc
or
xchg
add
dec
or
pushf
dec
aas
sub
cmp
fnsave
xor
pop
test
pop
in
stos
inc
call
and
ffree
and
mov
mov
mov
and
sbb
sub
aam
dec
add
cmp
jecxz
push
fyl2x
or
test
xchg
or
in
push
nop
mulb
call
pop
in
pusha
stc
out
imul
std
stos
or
test
inc
push
lahf
or
or
push
hlt
sti
leave
fs
mov
int
dec
mov
scas
outsb
inc
cmp
fists
fistpl
hlt
inc
push
or
arpl
xchg
sub
loope
jno
fisubl
xchg
pop
fdivrs
mov
inc
inc
lahf
mov
pop
or
mov
push
aas
test
filds
push
cwtl
push
add
mov
jecxz
insl
cmp
aam
pop
enter
popf
cmc
stc
outsl
dec
popa
fisubl
subl
outsl
pop
icebp
int3
cmp
pop
pop
jmp
cs
mov
test
xchg
and
shl
pop
push
imul
test
cltd
jbe
js
xchg
fidivs
add
mov
lcall
inc
adc
inc
sbb
jae
int3
lods
push
adc
mov
and
xchg
mov
sub
leave
mov
mov
push
jns
lahf
and
sbb
push
in
stos
out
mov
or
int3
test
sahf
fs
lock
jl
loope
lods
movsb
jae
jno
insl
fstpt
dec
mov
pop
or
mov
xlat
push
into
sti
mov
fs
mov
xor
mov
or
or
sbb
jmp
lock
mov
cltd
or
push
sbb
jo
push
push
push
aaa
imul
sub
dec
mov
cvtdq2ps
fldl
lds
fmuls
inc
add
fs
aas
pop
test
xchg
mov
mov
es
insb
xor
mov
dec
adc
imul
mov
ljmp
shll
adc
pop
data16
xor
sub
push
mov
cmpsb
jnp
es
lret
push
out
ror
push
pop
adc
mov
or
push
dec
xchg
lret
cli
xchg
cmpl
hlt
pop
lret
es
js
adc
insb
mov
add
outsb
jge
outsb
repnz
mov
jecxz
std
cwtl
int
out
lcall
sub
and
test
loopne
dec
mov
call
arpl
mov
nop
into
pop
jecxz
cwtl
rcll
cld
cwtl
sbb
adc
in
movsb
xchg
jle
movsl
cmp
xchg
push
dec
lcall
leave
pusha
xchg
pop
push
imul
mov
imul
lcall
rcrl
inc
xor
jo
int3
fadd
push
fwait
jl
mov
push
sbb
enter
pop
std
or
insb
jbe
inc
or
and
mov
lcall
sti
scas
push
or
movsb
push
into
addb
adc
in
dec
push
imul
cmp
icebp
fcoms
fidivrs
inc
insl
shlb
pop
insb
mov
xlat
push
std
and
jns
xor
lret
and
and
ljmp
push
and
jp
mov
iret
int3
sub
mov
das
sbb
mov
shll
inc
call
jg
fiadds
inc
mov
mov
xor
cwtl
aas
mov
stc
xlat
cmp
jmp
out
push
ret
flds
pusha
cltd
push
lods
xchg
fwait
push
in
cvtdq2ps
pop
out
sub
minps
inc
iret
cmp
dec
bnd
jae
push
std
clc
jl
xchg
mov
push
mov
hlt
je
sbb
std
jns
sbb
into
xlat
mov
mov
or
fwait
and
push
sbb
adc
push
sub
scas
sbb
adc
pop
xchg
push
mov
outsb
mov
mov
outsb
cli
shrb
pop
xor
cli
xor
or
scas
sarl
int
add
in
leave
and
cmpsl
aad
imul
xor
sbb
xchg
cmp
dec
inc
bound
cmpsb
fimuls
movsl
cmp
hlt
push
inc
or
in
xchg
mov
pusha
cmp
mov
cmp
icebp
cmpsl
lods
loop
mov
cmp
sbb
ret
incb
xor
inc
sub
sub
add
ficompl
lods
lods
enter
and
inc
sub
xor
sbbb
testb
ljmp
fucompp
mulb
mov
mov
push
push
into
pop
roll
lock
push
and
js
mov
push
jle
jmp
mov
cli
das
push
hlt
scas
jns
pushl
jae
dec
mov
sbb
fnstcw
sahf
inc
out
int3
test
sahf
inc
cmp
dec
cmp
add
pop
and
and
mov
out
cmp
or
push
sbb
adc
or
imul
leave
pop
out
aam
leave
push
mov
mov
jno
lea
jno
jle
mov
mov
pop
repz
imul
dec
and
cltd
jo
mov
cmc
ret
dec
push
dec
test
inc
push
or
push
insl
fsqrt
out
fwait
das
jmp
cmp
mov
hlt
das
mov
enter
repnz
lock
mov
sub
pusha
dec
push
or
adcl
cmp
pop
mov
cmc
add
xor
sub
enter
mov
test
sbb
insl
cmpsl
and
dec
fldcw
jae
inc
sbb
mov
adc
xor
repnz
jg
inc
pusha
loope
test
hlt
les
sbb
mov
xor
push
jbe
push
daa
or
sbb
mov
mov
cld
mov
sub
sahf
gs
inc
cmpsl
test
test
fsts
sti
js
jae
loopne
loope
popf
fcomp
cmp
push
mov
scas
dec
adc
dec
push
into
clc
ret
cltd
mov
pop
insl
fidivl
cmp
fildll
mov
and
xchg
sub
xchg
jae
jl
or
inc
out
mov
or
pop
insb
enter
hlt
xchg
aam
ja
aas
push
aas
lea
pop
negl
pop
mov
xchg
inc
sbb
cs
sti
into
movups
bound
in
test
fs
pop
or
fdivrs
les
aad
lods
or
jbe
jl
int3
cs
clc
mov
movsb
iret
push
mov
or
dec
enter
cwtl
dec
xchg
mov
dec
and
push
nop
and
push
lcall
sbb
insb
int
mov
mov
lods
lret
pop
push
xchg
pop
ljmp
cs
pop
sarl
addr16
jle
rcll
imul
jge
sub
add
xchg
or
sub
jbe
fs
data16
sbb
xchg
lret
shll
adc
gs
lahf
jb
and
adc
mov
sbb
insl
loope
xor
movsb
adc
add
add
cld
ja
cli
mov
mov
xor
shlb
cmp
das
pop
sub
shrb
gs
mov
push
jnp
out
mov
lret
movsl
or
icebp
push
ljmp
es
mov
enter
sbb
mov
sbb
in
pop
jbe
popl
test
repz
scas
jle
dec
sbb
lock
movsb
mov
add
mov
mov
sahf
add
or
ss
pop
mov
sarb
sahf
dec
call
je
jge
mov
jmp
fidivs
ret
popf
cli
add
sub
sti
aad
pop
cmp
push
sahf
bound
xchg
push
icebp
jecxz
mov
into
pop
adc
xchg
or
mov
aas
dec
inc
popf
insb
pop
adc
ljmp
xor
je
jmp
shrl
jnp
jmp
xor
lahf
aas
pop
jle
xchg
mov
imul
aad
xor
pop
pushf
cmp
aad
insb
test
test
pop
int3
loop
movsb
xchg
lock
mov
push
push
xor
int3
subb
outsb
xor
and
idivb
je
push
mov
lret
and
pop
and
aam
pop
movsb
les
or
je
inc
or
pusha
jnp
fwait
sub
jbe
mov
dec
leave
mov
jae
push
pop
mov
add
mov
repnz
insb
cmpsb
sub
or
in
sarl
enter
loop
inc
xchg
test
sub
ret
xor
negl
mov
out
inc
mov
sarl
mov
dec
sbb
lea
imul
movsb
fldcw
ficoms
sbb
push
shlb
xor
dec
outsl
jb
jg
stos
andb
stc
dec
test
insl
pop
xor
sbb
sbb
xor
fldcw
mov
cmp
xor
lock
cmp
outsl
inc
mov
arpl
cli
ret
push
lds
popw
lret
les
pop
in
jecxz
pop
testb
mov
test
js
pushf
mov
pop
jae
mov
ret
bswap
clc
into
scas
mov
mov
dec
lret
pop
sub
sub
or
subb
into
xchg
and
jns
dec
int3
fimuls
subb
addl
clc
sahf
and
push
xchg
push
roll
add
sub
sbb
das
inc
in
xchg
pop
stos
sub
loop
adc
pop
mov
fstpl
adc
mov
lods
fstpt
push
sub
and
mov
xlat
cmp
pusha
push
fildll
int3
xchg
repnz
dec
subl
cwtl
sti
in
mov
sbb
cld
adc
or
adc
jecxz
dec
push
arpl
push
repnz
jecxz
push
mov
push
xchg
jmp
cld
jno
aam
subl
cs
cmp
aaa
addr16
popa
jae
cltd
sub
test
cmp
sub
or
or
int3
dec
adc
and
fldenv
sbb
test
xor
or
mov
or
fcmovnu
insl
arpl
aam
mov
pop
or
mov
shlb
loope
sbb
out
sti
and
jbe
and
pushf
clc
push
push
jb
dec
mov
push
stc
out
gs
lock
dec
dec
and
jno
cwtl
je
mov
scas
scas
push
xor
mov
jp
cmp
sub
fs
inc
mov
sub
les
ret
or
cmp
jb
or
pop
popa
movsl
lea
and
in
push
push
std
inc
icebp
hlt
xorl
mov
xor
sbb
xor
es
sub
mov
pop
fstp
aam
test
nop
ss
mov
aas
incb
adc
jo
sbb
sbb
shr
fcompl
xchg
xchg
inc
fcompl
dec
stos
jle
mov
dec
pop
mov
ljmp
outsl
pop
shrl
push
std
mov
push
mov
xchg
cmp
jmp
iret
cld
lods
and
xor
popl
fisubs
adc
and
aam
daa
push
mov
mov
mov
in
mov
ret
or
pop
sub
sbb
mov
nop
pop
mov
pusha
xor
sqrtps
out
cmp
mov
xchg
ds
aam
mov
cmpsb
lods
psubd
popf
mov
rorb
stc
rolb
shl
lcall
xlat
mov
cwtl
in
rclb
mov
aam
sbb
dec
add
loop
mov
outsb
jb
xor
mov
add
icebp
bound
daa
aam
xor
in
dec
aam
push
mov
add
imulb
test
push
or
jmp
xlat
or
jg
lret
inc
xor
mov
add
addr16
sub
mov
xchg
xchg
ljmp
pop
shll
scas
mov
ret
packssdw
xor
and
cmp
xchg
lcall
dec
sbb
aad
cltd
mov
shrl
mov
xorb
frstor
loopne
mov
jb
jb
push
frstor
cmp
ret
sbb
aad
xor
cmp
fildl
mov
pop
cmp
jne
je
xchg
pop
repnz
dec
mov
cltd
sbb
bound
mov
insb
pusha
test
pop
jmp
loope
lock
push
out
push
lods
mov
jb
lock
stos
cmc
mov
cmp
push
push
add
push
scas
pop
pop
ret
shlb
or
sub
jmp
adcb
stos
cmc
fistps
adc
inc
and
jns
imul
dec
jb
and
frstor
stos
dec
sub
in
sahf
jecxz
sub
pusha
stos
jmp
jle
hlt
aaa
enter
adc
sub
adc
outsl
sub
fidivrs
and
xchg
jg
push
mov
push
inc
ds
test
cwtl
adc
cs
stos
shrl
das
mov
push
outsb
mov
push
mov
outsl
mov
pop
test
rcrb
push
lcall
pop
dec
sbb
sbb
out
jne
aaa
and
roll
lcall
leave
and
adc
xor
clc
rcll
adc
insb
and
pop
add
das
icebp
sub
inc
jge
mov
ret
jg
pop
daa
out
mov
iret
cmp
mov
xchg
or
push
mov
pop
dec
out
add
ljmp
jmp
mov
call
sbb
xchg
xor
fnsave
inc
mov
cld
into
into
adc
cmpsb
mov
push
push
push
xchg
popl
mov
cli
sbb
add
sub
test
push
push
lret
aad
lds
jno
aaa
mov
sbb
dec
push
mov
push
xlat
xor
push
push
out
inc
dec
xchg
push
stos
push
and
or
or
iret
in
and
inc
arpl
fmul
sub
gs
pop
cmpsb
lahf
fwait
mov
push
xchg
add
adc
xchg
rcll
lcall
xor
and
mov
in
dec
insb
push
arpl
scas
jns
pop
scas
aad
push
and
insl
outsl
gs
inc
lahf
xor
pop
leave
dec
out
dec
das
in
lret
ret
mov
xor
arpl
inc
enter
aad
scas
sbb
xor
fisubrl
sbb
in
sub
ficoms
jmp
pop
and
push
mov
cmp
fdivs
mov
addl
and
inc
jl
inc
push
mov
call
push
cmpb
dec
jp
les
shll
jno
mov
call
inc
shlb
loope
ja
mov
mov
mov
insb
xor
cmp
pop
fidivrl
pop
fidivl
lret
inc
mov
rolb
adc
jnp
push
cs
dec
xor
push
lcall
mov
mov
aas
repz
sub
in
pop
sbb
push
popa
sbb
xor
rolb
negl
outsl
imul
in
inc
movsb
and
xchg
aas
and
xlat
adc
in
xor
add
sti
mov
pop
add
dec
ret
push
insb
sub
mov
cmc
ret
or
pop
fwait
add
lock
mov
js
call
jmp
jl
test
loop
stc
push
neg
in
and
orl
jp
ret
aam
jbe
test
mov
adc
arpl
lods
xchg
and
fwait
xchg
jle
lahf
sub
lock
cmc
mov
inc
push
in
mov
sbb
jmp
jge
int
scas
mov
mov
pop
sub
push
popa
rcll
icebp
jp
insb
repz
mov
imul
repz
inc
aaa
sub
jo
fprem
pop
sub
inc
int3
mov
imulb
in
enter
lcall
fidivrs
orb
jno
aam
mov
arpl
jle
jg
mov
test
mov
std
pop
or
sbb
sbb
mov
icebp
adc
ret
mov
sti
inc
xchg
fldenv
pop
adc
aam
xor
push
test
mov
add
dec
and
xchg
lret
pop
xchg
lret
cli
inc
mov
fxch
subl
aam
lea
pop
pop
xchg
cwtl
fmuls
std
mov
inc
popa
aas
xchg
or
add
inc
sub
jge
fldenv
inc
ret
stos
adc
pop
fwait
lods
or
repnz
scas
sbb
pop
xor
test
stos
shr
loop
sahf
lds
in
outsl
or
push
movsb
xchg
sbb
mov
jmp
jge
cmp
adc
cmp
hlt
fistpl
push
xchg
pop
inc
mov
mov
jb
jae
push
mov
jecxz
cmc
jb
push
mov
and
xor
push
je
xchg
mov
mov
adc
ficoms
ja
mov
ja
adc
insl
bound
mov
jo
cmp
test
stc
loope
mov
xor
lds
std
out
sub
push
int3
mov
push
out
dec
stos
push
sbb
fsubrs
xchg
fdivr
cmp
push
mov
addr16
mov
xchg
add
bound
jne
push
fsubs
cli
aas
ds
inc
and
push
int
fimull
call
sbbl
ss
lret
push
or
inc
pop
xor
or
push
jle
cmpsl
into
js
sub
or
fdivrl
gs
test
imul
cmp
into
cmp
idivb
cmp
mov
roll
ss
jp
mov
jo
cmp
addr16
insl
add
aad
xor
pop
push
and
popfw
iret
push
xchg
outsb
das
push
lock
inc
or
push
xor
lcall
inc
pop
fcmovnb
sub
dec
xor
mov
dec
inc
xor
xchg
pop
cmp
das
daa
jno
jmp
xchg
cmpsl
cmp
jmp
xchg
mov
xor
loop
inc
sbb
lahf
dec
cs
xlat
inc
xor
movsl
push
fimull
and
enter
jle
jl
call
cmp
inc
sub
push
cmpsb
inc
xor
cs
cli
shll
pop
mov
mov
cmp
pop
fs
adc
dec
mov
sbb
cmp
ljmp
xchg
fdivr
xlat
xchg
cmp
fldl
sub
pop
mov
imul
mov
mov
mov
in
mov
in
pop
adc
es
and
pop
pop
insb
lcall
jl
mov
xchg
add
mov
dec
icebp
push
push
or
xor
inc
loop
dec
adc
in
xor
loopne
outsl
daa
bound
dec
lods
cmpsb
repnz
faddl
and
push
outsb
aaa
push
push
fnstsw
xlat
sub
popf
int
inc
cmpsl
icebp
sbb
pop
lret
leave
pop
xor
insb
cmpsl
mov
aad
dec
loop
inc
mov
bound
shr
and
addl
sbb
out
repz
dec
movzbl
mov
dec
outsl
sbb
cmp
sub
or
and
and
mov
cmpsb
cmp
adc
aam
mov
and
test
dec
mov
fimuls
dec
xlat
ljmp
adc
xchg
adc
or
and
imul
sbb
xor
inc
fcmove
inc
scas
jl
ja
lea
and
xor
jle
test
or
and
pop
aas
mov
push
pop
sbb
in
popf
xor
fwait
rcrl
and
shl
ss
cmp
pop
int
or
cwtl
lods
jge
inc
lret
fmuls
mov
notb
rcr
mov
aas
mov
jl
insl
lods
sub
out
mov
sub
xor
mov
leave
ret
cmpsl
mov
lahf
sbb
lcall
mov
je
adc
push
xor
jp
fistpll
xor
ljmp
into
loop
push
mov
jo
adcl
xor
lcall
enter
sbb
jb
push
insb
lahf
insl
add
rolb
mov
daa
cmpsl
test
popa
jle
aaa
or
push
push
jp
test
nop
xchg
jmp
testb
lcall
bound
pushf
xchg
dec
insb
outsl
sbbb
stc
or
cmp
inc
mov
rolb
andb
jo
or
inc
jle
mov
mov
pop
out
or
rcl
jno
dec
adc
dec
mov
adc
jns
or
testl
pop
dec
sub
add
insb
push
imull
adc
push
icebp
jmp
and
fbld
roll
jns
jecxz
aam
pop
shr
jp
dec
mov
daa
inc
enter
push
mov
cltd
cmc
aas
xchg
push
inc
pop
mov
sub
loop
or
mov
or
inc
pop
imul
pop
repz
std
outsl
call
cmp
nop
test
jae
xchg
popa
and
mov
in
inc
cmp
mov
data16
push
call
cmp
lret
sbb
lahf
idivl
fwait
mov
push
imul
imul
and
imul
in
mov
ss
mov
nop
cmp
push
adc
pop
jmp
rcrb
jae
cli
cmp
fsubs
mov
shrl
adcb
fnsave
mov
add
push
stos
or
sbb
pop
pop
leave
ljmp
sbb
mov
lea
pop
call
sbb
or
sbb
push
sbb
ljmp
pop
lods
mov
fists
and
mov
addr16
ficompl
mov
xor
loop
mov
aad
xlat
xchg
cwtl
dec
jmp
std
sbb
int3
mov
out
fisubl
stos
inc
in
lea
popf
pop
mov
add
lods
loope
mov
nop
repz
stos
xor
lods
rolb
jno
cmpsb
aaa
pop
xor
aam
scas
add
rcl
pop
dec
ret
xchg
rcrl
mov
cmc
insb
mulb
add
flds
pop
push
stos
push
xor
push
ljmp
bound
fiadds
ret
and
vpminub
sbb
mov
sub
mov
test
sbb
lock
pop
inc
and
lret
mov
cmp
pop
imul
sbb
push
and
sub
pushf
aas
mov
sub
push
or
xor
push
dec
cli
jmp
jp
dec
pavgb
push
inc
rcr
add
fldl
or
notl
adc
mov
aam
jae
pop
dec
in
sar
out
invd
fcomi
xor
rorl
add
sbb
xchg
aas
jbe
jmp
pop
lret
mov
fdivrs
cmp
push
outsb
fsubs
mov
sar
cwtl
fdiv
jmpw
xchg
lods
xlat
addb
cmp
and
cmpsl
push
push
mov
jbe
enter
cmp
lret
push
movsl
daa
lret
pop
jp
lcall
cmp
jbe
xchg
and
dec
sbb
ljmp
ds
in
mov
cmp
fcmovne
adc
dec
outsl
xchg
adc
jnp
es
ljmp
popa
leave
push
inc
pushf
jne
pop
std
lahf
xchg
in
or
cwtl
lret
xor
bound
sahf
add
push
and
int
mov
and
mov
and
mov
cmp
fistps
pop
mov
fdivrs
push
inc
add
adc
xchg
inc
scas
rclb
popf
fdivrl
dec
or
imul
aam
jbe
mov
dec
pop
loopne
outsl
sub
pusha
sbbb
test
xor
sub
jg
subb
fwait
or
pusha
dec
test
es
bound
imul
push
lret
je
jmp
and
mov
dec
xchg
lds
rolb
add
call
popa
aas
out
popa
out
or
scas
lods
jno
push
mov
mov
pandn
lret
shrb
scas
data16
js
inc
mov
sahf
mov
jmp
pusha
push
mov
fninit
addl
and
jecxz
fsubp
jno
test
cvtps2pd
popf
sbb
adc
sbb
xlat
cmp
push
sbb
dec
stos
mov
jb
cld
fmuls
adc
and
sti
push
lea
stc
jge
sbb
sub
fwait
out
fisubl
pushf
adc
das
jnp
mov
imul
sub
sbb
adc
push
inc
sub
gs
sbb
scas
lahf
adc
fstpt
ror
mov
xchg
inc
stos
bnd
jp
inc
cmc
jns
cmc
push
aaa
insb
jecxz
xor
dec
adc
je
adc
jo
mov
adc
cmp
inc
lods
fwait
arpl
insb
cltd
or
stos
outsl
cmp
insb
pusha
inc
push
daa
stos
and
lcall
jp
adc
and
scas
in
push
js
andb
adc
ljmp
lods
dec
outsb
push
not
int
ja
jle
dec
mov
mov
outsl
pop
inc
in
pop
nop
cmp
sahf
mov
push
cmp
sbb
sub
or
outsl
sbb
test
dec
in
ja
sti
dec
rorb
movb
bound
pusha
std
jbe
in
test
push
sbb
aad
sbb
in
or
fs
hlt
inc
shrl
inc
outsb
push
lea
test
insl
mov
jp
aad
or
cld
and
mov
pop
pop
mov
jg
pushf
jno
inc
rcl
jmp
pop
jl
out
jmp
jae
cmpsl
hlt
in
pop
scas
icebp
mov
daa
xchg
push
lods
sbb
into
mov
inc
jge
in
cs
lock
lods
jb
jge
jl
lods
mov
jbe
int3
inc
mov
rcr
dec
fists
pop
imul
or
push
loop
cmpsl
xor
daa
and
ret
mov
jo
scas
and
scas
aad
sahf
sub
sbb
jnp
inc
and
xchg
mov
sbb
addl
imul
mov
rcl
sbb
mov
mov
lret
push
mov
mov
scas
incl
dec
inc
dec
adc
mov
shrl
jb
and
in
mov
repz
inc
jmp
cmp
jge
add
popf
adc
popa
sub
add
stos
popf
outsl
lds
push
push
mov
or
pop
pop
dec
sbbb
or
sub
jmp
ljmp
inc
cmp
imul
mov
sub
sub
adc
push
rep
loopne
repnz
mov
and
or
cmp
jle
aam
enter
test
repnz
sub
aaa
lret
test
push
sbb
insl
xor
cmp
sub
aad
lock
push
lret
test
push
push
xor
loopne
push
mov
mov
add
inc
adc
xor
sbb
xor
bnd
lock
push
mov
xchg
fs
jecxz
out
nop
mov
stos
fnstsw
mov
js
mov
add
xchg
stc
jge
fucompp
pop
pop
into
xor
xchg
push
cmpsb
pop
push
push
xchg
in
push
push
inc
out
sub
ja
xor
and
push
out
cmp
and
stc
mov
pop
mov
xor
and
xor
push
je
fdivl
and
pusha
out
or
sti
xor
xchg
outsb
lret
outsb
dec
push
inc
jl
std
add
dec
push
std
lock
movsb
mov
or
mov
lods
gs
mov
dec
xchg
adc
imul
lods
sbb
mov
push
loop
clc
sub
or
jecxz
std
jno
sub
add
pop
jno
stc
xor
jg
inc
jae
inc
pop
sbb
mov
push
std
loop
mov
mov
xchg
mov
xchg
fnstcw
pushw
xchg
insl
repz
add
push
movsb
fidivrs
pusha
dec
jge
int3
test
call
sub
mov
sub
std
fldcw
jp
sub
cmp
in
push
fmul
xor
and
sahf
mov
es
fsubs
aad
jl
adc
push
push
adc
mov
mov
outsl
aad
add
lcall
dec
sbb
out
and
or
fcomi
repnz
xchg
movsl
cmp
rorl
mov
in
xor
sbb
cs
fldenv
mov
add
jmp
sbb
stos
lock
sub
jb
jne
gs
inc
addr16
popa
xchg
sub
outsb
out
pop
daa
jp
rolb
jo
dec
test
add
jb
loope
movsl
out
cmp
scas
xor
and
int3
mov
pusha
shlb
cmpsb
mov
fisubrl
cmp
int3
or
xor
je
sbb
sbb
dec
std
mov
jb
xchg
ret
fistl
sub
mov
arpl
cwtl
out
xchg
mov
lret
lea
vcmpss
ret
repz
mov
dec
mov
test
insb
fs
shll
inc
loop
inc
in
fdivs
push
fnstsw
jo
adc
test
sbb
pop
mov
dec
pushf
push
dec
mov
pushf
mov
push
ret
mov
addb
daa
push
dec
test
or
call
lret
mov
and
push
ja
mov
cli
adc
bound
test
xchg
push
dec
popa
sti
hlt
and
nop
sahf
mov
adc
es
add
and
xchg
cmp
loop
mov
xchg
add
divb
and
and
jecxz
mov
cvttps2pi
inc
dec
mov
lret
dec
enter
daa
call
shr
aaa
shrl
and
ret
jmp
xchg
and
fcmovnu
cmp
imul
movsl
lahf
ljmp
and
xchg
ds
insb
xchg
push
or
aam
int3
push
jo
xlat
cmc
mov
push
rorb
fcoml
pop
ret
dec
sbb
xchg
or
inc
jo
stos
dec
jb
pop
and
xchg
aam
inc
inc
movsl
xchg
ja
mov
cld
jge
push
or
loope
fwait
je
mov
lock
lret
in
xchg
cmp
bound
or
cmp
movsl
jl
mov
pop
cmp
add
outsb
mov
sahf
xlat
pop
push
cmc
or
mov
scas
adc
icebp
xchg
insl
mov
or
mov
in
fists
xchg
shl
sub
clc
xchg
xor
inc
addb
insl
add
cmp
pop
sub
add
inc
lret
lods
push
cmp
sti
sub
lods
sub
inc
cmpb
stos
jo
sbbb
push
in
lods
push
ja
jmp
arpl
stc
xor
add
pop
mov
pop
pop
aaa
adc
cwtl
test
stc
cmpsb
test
stc
loop
dec
negl
pop
lods
push
push
dec
sbbl
xchg
mov
xor
mov
arpl
fbstp
sarl
xchg
mov
lret
xlat
das
clc
cmpsl
movsl
or
mov
xlat
call
ljmp
je
cmpsl
adc
or
cmp
mov
mov
sub
out
cmc
fadds
xchg
inc
mov
jne
sbb
jnp
jnp
mov
push
xchg
sub
cli
mov
cmpsl
xchg
out
aad
leave
pop
jle
add
pusha
mov
adc
sub
das
sub
pushf
fs
cli
pop
pop
sbb
out
popa
ljmp
in
and
cld
int
fs
sub
and
js
jp
enter
movsl
push
repnz
jne
push
int
inc
inc
mov
test
testb
mov
ret
xchg
ds
push
std
jmp
and
addr16
loop
arpl
mov
lahf
dec
dec
in
js
dec
outsl
imul
dec
inc
dec
shl
pop
xor
leave
sub
rorb
icebp
roll
icebp
mov
sbb
jg
jns
in
xor
mov
ret
dec
and
mov
cmpsl
aam
mov
mov
xchg
add
sbb
lret
add
inc
push
sar
or
pop
sbb
fimull
xchg
loope
dec
inc
jge
cltd
sub
call
push
nop
push
mov
out
mov
sahf
push
cli
insb
icebp
mov
scas
lods
dec
hlt
mov
pop
lret
dec
hlt
or
js
cvtdq2ps
xchg
xor
cs
cmp
das
or
or
mov
cmpsl
mov
jle
xor
scas
repz
or
mov
stc
in
shl
fcomps
js
cmpsb
jl
aas
in
es
frstor
dec
xchg
inc
inc
pop
ljmp
xchg
icebp
dec
pop
pop
arpl
sbb
pop
fwait
xchg
adc
loopne
inc
xchg
mov
xor
mov
ret
mov
iret
testl
cmp
jge
inc
pop
pop
sbb
xor
rcrl
repz
lcall
aad
adc
dec
mov
jge
bound
add
push
loop
dec
xor
cmc
xor
stos
scas
pop
mov
sbb
cmp
xor
sub
push
xor
outsl
cmp
adc
loope
mov
jl
jecxz
xor
add
mov
lahf
inc
sub
out
je
rorl
xor
sub
outsb
push
xchg
mov
add
or
xor
mov
adc
daa
das
and
xchg
push
test
sbb
dec
inc
shrb
cmp
xor
sbb
xchg
test
in
mov
pop
pop
xlat
lcall
jp
fimuls
movsb
in
or
sbb
and
push
dec
inc
ret
inc
jmp
dec
sbb
xor
jae
dec
imul
faddl
mov
pop
in
or
inc
xor
pop
dec
test
lods
xlat
xlat
cmpsb
push
pop
mov
test
pop
xchg
push
mov
in
lahf
clc
aaa
testb
lds
das
jecxz
jge
push
mov
xor
dec
js
cmpl
clc
nop
je
imull
jb
cmp
outsb
movsl
insb
lret
xchg
pushf
cmp
outsl
adc
mov
ficoms
dec
cmp
adc
shl
into
fmull
mov
adc
xor
sbb
push
nop
mov
loopne
andb
mov
xchg
mov
es
mov
dec
mov
in
jmp
stos
ja
push
pop
aas
push
xchg
push
or
push
dec
mov
test
lea
mov
xor
ret
pop
fidivs
insl
sbb
push
mov
jecxz
cmp
outsl
mov
pop
add
mov
sbb
sti
out
je
ret
xchg
test
push
pushf
lods
mov
mov
pop
add
and
pop
lahf
mov
outsb
jo
fcmovnb
ret
shrl
daa
test
push
jb
pop
fistps
loope
cmpl
aad
arpl
outsl
sub
lret
inc
mov
in
das
pop
xor
stos
adc
or
mov
iret
jbe
push
arpl
inc
ljmp
ljmp
ret
mov
mov
stos
mov
jno
xchg
scas
aas
adc
lea
xchg
insb
mov
and
push
mov
pop
data16
jecxz
pop
stos
jae
and
js
iret
les
mov
push
pusha
push
jae
push
cmp
out
pop
dec
cmp
lcall
jecxz
enter
pop
dec
xor
sub
test
es
jae
or
push
push
push
mov
bound
cli
xchg
int3
and
mov
jns
add
jb
push
aas
movsl
mov
mov
xchg
scas
int3
mov
inc
xchg
pop
je
js
in
cmp
cmp
xchg
hlt
inc
movsb
nop
sbb
jle
mov
int3
enter
dec
dec
jmp
sub
xchg
xchg
lods
sub
inc
sub
jo
fcmovnbe
sbb
lahf
fldl
dec
fwait
stos
std
stos
jl
lea
cmp
or
repz
sbb
jns
cld
repz
ret
push
push
lods
movsl
xchg
loop
xor
repnz
xchg
test
mov
std
and
mov
out
fsubr
mov
add
jnp
cmc
dec
pop
inc
pcmpgtw
test
xor
ljmp
adc
mov
les
jge
pop
jno
cmpsw
testl
mov
loope
in
push
mov
adc
xchg
lret
cmp
pushf
stos
and
mov
xor
pop
add
adc
mov
add
dec
nop
ljmp
jecxz
out
xor
imul
xchg
aas
addl
jmp
sbb
pop
xor
pusha
fimuls
sub
movsb
and
lret
mov
dec
dec
fxam
shl
cmpsl
push
mov
and
adc
xchg
jo
mov
add
xchg
mov
bound
jns
aaa
movsb
mov
ret
clc
mov
pop
inc
adc
lods
push
cmpsb
push
loop
add
lea
mov
adc
out
fs
fadds
push
mov
dec
or
inc
fstpl
inc
hlt
adc
insb
and
lahf
mov
out
sbb
ljmp
lahf
jle
dec
cld
aas
or
daa
cmp
push
pop
cs
sti
fincstp
data16
daa
jns
cmpl
in
test
mov
call
adc
mov
and
hlt
xchg
lods
jbe
out
sub
mov
xor
mov
shll
mov
xor
and
icebp
xchg
pop
and
popf
int3
insb
push
cmp
mov
es
push
or
xchg
push
js
dec
sub
data16
add
xor
pop
cmpsl
adc
mov
xchg
sub
shrb
push
icebp
xchg
lds
xor
and
psrad
adc
xor
lods
mov
xchg
sub
add
mov
inc
loop
shlb
movsl
test
int
sub
push
push
add
mov
mov
xchg
sbb
push
push
out
popf
xchg
pop
in
mov
sbb
daa
cltd
add
push
mov
mov
clc
shr
dec
jns
in
mov
mov
push
push
sarb
je
jne
pop
sub
das
sbb
add
xor
fwait
pop
scas
adc
add
and
clc
aam
xchg
sbb
mov
dec
inc
jne
push
and
data16
pop
adcl
sahf
aas
dec
into
push
out
and
add
ret
jb
je
add
faddl
rcrb
pop
test
rcr
xchg
sbb
push
push
inc
cmp
loopne
loop
ret
in
out
jns
hlt
mov
repnz
add
popf
mov
data16
loope
out
or
data16
outsl
sbb
jo
mov
ret
gs
test
out
mov
mov
pushf
ljmp
rolb
in
outsl
fistpll
les
in
push
sar
imul
or
lret
lods
out
dec
push
mov
push
push
cmp
or
dec
cmp
push
xor
popa
and
sub
xorl
mov
and
jl
xor
xchg
sbb
fs
xchg
sub
sub
inc
pop
mov
inc
mov
jne
xor
lahf
jb
mov
cltd
push
pop
mov
dec
cmpsb
cli
loope
xlat
add
icebp
in
xlat
jg
sti
xlat
cli
test
mov
adc
es
jp
cmp
es
add
cmp
lds
fisttpll
in
or
leave
or
sbb
shrb
mov
push
or
enter
fdivl
jae
movsb
pop
loop
mov
stc
lods
loop
push
cwtl
aam
pop
ljmp
push
cmp
cmp
idivb
jp
pop
mov
xor
jp
cld
mov
adc
xor
repnz
mov
fsts
divb
fldenv
push
arpl
int
daa
lcall
aaa
je
das
or
scas
out
or
stos
out
xor
push
sbb
sahf
or
and
out
lea
hlt
mov
fidivl
popf
fmuls
pop
repnz
stos
sub
gs
lods
lret
mov
xchg
test
fprem
mov
out
mov
ret
pop
icebp
out
imul
imul
iret
mov
lcall
sti
clc
pop
fcomps
sub
add
loopne
lcall
xchg
dec
cli
adc
dec
mov
or
loope
fnsave
inc
pop
add
xor
or
inc
nop
pop
sub
dec
call
pop
sahf
xor
cmp
mov
jno
es
hlt
and
int3
sarl
xchg
or
cltd
mov
pop
cmp
lds
insb
jmp
test
xchg
mov
sbb
stos
pop
popa
test
pmaxsw
cmc
lahf
in
leave
xor
xchg
inc
addl
add
scas
inc
or
pop
cmp
jg
pop
leave
inc
and
mov
cmp
sub
test
mov
cmpl
xchg
xor
or
mov
pop
js
sub
mov
shll
add
aaa
rcll
ret
push
into
js
mov
jp
mov
fldt
mov
sbb
adc
mov
js
sbb
gs
inc
nop
dec
dec
jecxz
leave
leave
js
push
cmp
pop
leave
scas
aam
xor
jl
leave
into
in
loope
leave
call
xor
xor
rcll
add
pop
push
out
lock
cwtl
popa
sub
cmp
add
lret
sbb
jecxz
lret
xchg
stos
into
push
pop
jg
sbb
jecxz
dec
sub
repnz
daa
xor
jae
into
dec
inc
pop
dec
jns
loop
imul
lods
cmp
xchg
clc
ss
mov
xlat
jns
lods
mov
popa
mov
mov
pop
imul
data16
aaa
or
mov
lock
xor
imulb
test
sti
push
lcall
leave
add
or
test
subb
stos
das
shlb
xor
mov
mov
stos
mov
aad
xchg
jg
pusha
adc
scas
in
or
adc
in
js
aam
ss
js
pop
aaa
ljmp
rorl
push
and
jne
outsb
in
loope
pushf
mov
test
add
rorl
xchg
out
mov
enter
outsl
hlt
jecxz
xchg
push
dec
repnz
cmp
dec
cmp
jne
xorl
sbb
cs
mov
mov
arpl
xchg
sbb
or
mov
mov
xor
mov
fisttpl
hlt
lcall
js
clc
add
cld
and
and
mov
nop
in
push
insb
mov
mov
xor
sarl
or
xchg
xchg
cmpxchg
movsb
inc
inc
ds
pushf
sub
lods
sub
or
push
adc
sbb
nop
in
jmp
aaa
icebp
mov
and
cmpsl
pusha
shlb
test
sbb
push
or
adc
andb
test
fsubrl
adcb
xor
adc
fs
adc
cli
cmp
test
and
lds
jge
push
sbb
jbe
xor
cmpb
xor
push
lea
arpl
imull
cmpsl
cmp
cmp
mov
adc
sub
es
xchg
lds
std
fiadds
pop
movsb
in
sub
mov
lahf
jge
loop
insb
cmp
xor
scas
or
cmp
xor
jmp
pop
adc
enter
outsl
cltd
pop
cmp
test
vmaskmovdqu
mov
aam
arpl
dec
insb
movsl
mov
xor
jl
out
inc
pop
pushf
fs
cltd
xchg
in
pop
mov
in
mov
ror
bound
xchg
cmp
insl
or
rcr
mov
loop
xchg
jnp
xchg
imul
sub
dec
inc
cld
pop
pushf
adc
mov
mov
daa
push
inc
movsl
sub
dec
cltd
bound
out
aam
or
sub
pop
sub
dec
pop
ja
pushf
sbb
push
adcb
es
nop
pop
fs
roll
out
add
push
mov
decl
pop
mov
testl
stos
cs
mov
jns
dec
jae
outsb
xlat
je
pusha
js
cmp
push
or
fstp
out
sub
jno
jmp
leave
in
je
loopew
cmp
lahf
inc
fnstenv
lahf
sahf
fwait
test
xlat
outsl
mull
sub
scas
lcall
outsl
icebp
cld
cmpb
and
daa
into
jmp
fadds
mov
sub
mov
roll
icebp
and
insb
int
adcl
adc
pop
dec
into
mov
lahf
ds
pop
and
mov
sahf
mov
and
stos
loop
mov
pop
push
lods
les
pop
pushf
movsl
jl
xor
lahf
scas
inc
mulb
pop
pop
jnp
out
out
dec
xchg
bound
mov
push
or
sbb
xor
stos
cmpsb
sbb
or
pop
pop
jbe
flds
jmp
cwtl
subl
stos
mov
leave
mov
xchg
inc
shll
repz
cmp
xchg
or
mov
das
nop
adc
mov
divb
test
push
je
sahf
cmp
mov
lock
std
into
cmc
outsb
adc
or
aad
ja
mov
lock
popf
test
inc
test
mov
cmp
mov
mov
cltd
dec
icebp
inc
aam
push
je
xchg
pop
pop
pushf
mov
lods
mov
push
test
test
insb
mov
jecxz
adcl
lea
out
fs
cmp
es
imul
idivb
xchg
xor
out
sbb
in
cmp
ja
inc
cmc
sub
dec
imul
sbb
cmp
and
fiadds
gs
aam
scas
popf
js
adc
lods
hlt
imul
jmp
hlt
mov
dec
daa
jmp
jnp
int
and
das
test
shr
lcall
jp
ds
pop
popa
dec
test
and
iret
mov
xchg
push
xchg
xor
pop
push
notl
cli
adc
inc
or
insl
lds
mov
push
bound
xchg
cmp
out
xor
not
fwait
and
repz
sub
mov
sub
int
mov
or
test
and
ret
push
pop
es
or
out
and
shll
push
inc
outsb
imul
push
push
or
push
int3
loop
jo
popa
mov
fildll
fidivrl
int3
pop
loop
fcmovne
into
push
rcrl
xchg
push
or
inc
adc
jecxz
xor
mov
pop
addl
outsb
xchg
mov
cmp
lods
adc
adc
mov
mov
push
lock
stos
xchg
sbb
pop
mov
dec
arpl
popf
adc
fistl
repnz
iret
mov
cs
mov
inc
popa
scas
xchg
cmpsb
push
repz
xchg
mov
inc
aad
sub
sub
jmp
frstor
mov
or
or
cmp
pop
jne
jg
xor
adc
adc
cmc
in
add
daa
ret
adc
sti
fstl
pop
arpl
mov
fiadds
xorb
push
mov
pop
pushf
and
sbb
movsb
movsb
fisttpl
sub
or
fstcw
dec
jne
adc
addl
cmpl
sbb
mov
insb
xchg
mov
int3
and
sbb
dec
in
xor
icebp
sbb
xchg
add
add
mov
loope
ret
push
aad
xchg
mov
push
or
in
out
arpl
pusha
dec
cltd
rclb
les
in
xchg
addr16
pop
add
out
addb
in
and
pop
cmp
mov
and
and
push
push
fwait
outsb
mov
fmul
adc
jae
aas
push
sub
fstl
mov
xor
inc
addb
test
int3
mov
push
imul
push
push
idivl
jae
outsl
rcrl
pop
int
xchg
dec
push
test
stos
sbb
xlat
cmc
and
ds
lret
mov
in
xchg
jnp
lret
stos
inc
std
addl
jp
or
jle
push
lds
jmp
cld
inc
mov
outsb
inc
mov
in
pop
lock
sbb
cmp
inc
out
add
mov
sti
fs
fwait
mov
sbb
fadds
sub
adc
jb
sahf
pop
jae
es
aad
fldenv
shll
dec
pop
push
lods
sarb
pop
mov
xchg
and
in
insl
movl
pop
and
cmc
sbb
lods
push
adc
jno
dec
adc
and
jb
addr16
mov
enter
inc
cli
mov
xchg
jmp
into
imul
leave
lcall
test
in
loop
lret
xchg
fwait
daa
ss
imul
je
pushf
hlt
mov
aas
addr16
cli
daa
fmull
xor
cmp
cwtl
xchg
mov
cmp
insb
aam
push
arpl
dec
pop
xchg
xlat
lods
lock
fdivr
lcall
int3
jne
ss
mov
loop
push
gs
dec
nop
test
scas
pop
jne
push
inc
xor
cmp
cmp
mov
mov
bound
jl
push
push
test
xor
sub
adc
sub
lods
inc
pop
cmpsl
sbb
mov
sub
pushf
fistl
push
xor
jg
outsb
inc
fmuls
int
inc
aaa
cmpsl
faddl
mov
or
fstps
lods
push
jg
addl
imull
iret
mov
cmpl
jl
jns
xor
cmp
inc
cld
add
and
ja
dec
lret
push
cmp
loope
popa
push
into
xor
nop
cmp
mov
loope
sbb
dec
sbb
jecxz
push
pusha
xlat
out
lret
pop
aaa
sbb
push
xchg
jl
insl
sbb
sbb
pushf
jl
lret
cmp
shlb
mov
in
popa
push
mov
test
sub
ljmp
int3
sub
leave
outsb
xchg
sbb
pop
mov
xor
insb
in
add
repz
scas
sbb
bound
xchg
stos
sbb
push
popf
shlb
popa
inc
add
scas
add
popf
and
jmp
jno
call
push
xorb
cmp
sbb
in
mov
sti
daa
scas
es
scas
jae,pn
movsl
inc
inc
push
jge
cmpl
pextrw
jp
push
mov
out
xchg
pop
jecxz
loope
lods
cmp
xchg
lret
shlb
mov
mov
sub
jb
jne
jb
pop
jo
sub
gs
adc
push
mov
dec
aaa
int
cmpsl
and
test
dec
mov
popa
and
push
std
adc
inc
jns
mov
mov
scas
hlt
fldenv
imul
and
push
pop
xchg
mov
xchg
inc
inc
push
stc
loopne
xchg
movsb
pop
xchg
mov
fsts
mov
xor
jo
add
push
je
aaa
add
add
fidivs
push
dec
or
clc
xchg
lret
aam
add
jge
adc
jo
push
add
cwtl
les
rcll
add
dec
in
icebp
sbb
in
mov
cmp
aam
dec
in
adc
push
cmp
fcmovu
fldl2t
push
rorl
mov
mov
mov
or
pop
push
pop
cmpsl
fistl
gs
mov
inc
and
inc
iret
mov
lods
fdiv
fiaddl
jb
fistl
push
ja
popa
out
pop
cs
sbbb
fnsave
jo
inc
xchg
or
jb
addl
mov
aam
in
jae
fadds
fwait
test
imul
jmp
inc
xor
pop
mov
loope
mov
les
adcl
or
push
fbld
xchg
jo
insb
sbb
testl
imul
loopne
aam
push
fs
cmp
fstpt
xor
aad
jle
cmp
or
add
std
lcall
arpl
sub
nop
mov
push
xchg
add
sub
xchg
rorl
cmc
mov
jo
mov
out
mov
inc
sahf
popa
loopne
fsubrs
sub
add
and
repnz
stos
mov
add
mov
subl
into
sbb
pop
movb
ljmp
jbe
testl
mov
pop
decb
mov
int3
push
cmp
pop
xorb
cmpb
jl
into
jecxz
pushf
insb
push
das
js
cmc
rcrl
fidivrs
pop
mov
aad
imul
sbb
xchg
adc
cmp
fsubl
xor
out
mov
imul
sub
sub
add
icebp
xchg
dec
cmp
insb
roll
or
lahf
mov
or
xor
or
ss
insl
sti
test
mov
enter
loopne
popf
fiaddl
aaa
xchg
mov
je
xchg
mov
lock
pop
gs
mov
rcrb
cmp
out
repz
push
rcrl
sub
nop
push
adc
xor
sbb
jle
sbb
sti
testl
in
inc
push
pop
mov
std
push
mov
stos
push
or
stc
inc
sti
sub
mov
push
mov
sahf
xor
mov
pop
mov
cmp
cmp
test
jb
mov
cvtpi2ps
hlt
cmp
xchg
gs
mov
pop
mov
das
arpl
js
push
push
mov
and
loope
sbb
mov
or
aas
add
jg
adc
mov
inc
enter
pusha
daa
subl
dec
int3
pop
add
pusha
push
xchg
fimuls
cmc
jae
loope
jp
mov
ljmp
mov
jb
dec
xchg
cltd
inc
in
movsl
lock
lcall
push
mov
rorl
in
mov
aam
add
jnp
nop
frstor
sub
xchg
imul
outsb
mov
pop
xchg
aad
scas
cmovle
pop
pop
pop
dec
lret
lret
xor
movsb
adc
stos
lods
fdivs
fs
stos
pop
pop
out
test
lret
mov
push
dec
sub
mov
popf
inc
filds
fisttpll
jo
pop
pop
lcall
push
xlat
lock
jnp
mov
dec
int3
push
fdivs
out
jp
push
jo
mov
push
pop
sbb
push
sti
outsb
and
setge
jae
xor
add
ror
testb
xchg
xchg
jbe,pt
dec
hlt
push
pusha
ljmp
rorb
out
mov
les
inc
xor
push
imul
int
jbe
test
add
adc
rcrb
jp
or
fisubrs
mov
push
arpl
scas
popf
push
popa
mov
mov
sbb
xchg
jo
mov
int
inc
test
adc
xchg
inc
jl
sahf
xchg
outsb
sub
add
dec
adc
ljmp
in
test
and
push
loope
xchg
jbe
and
in
mov
or
sub
fwait
push
or
lret
in
stos
enter
mov
add
jp
push
inc
stos
dec
or
cmp
imul
into
mov
push
pop
mov
jmp
add
or
popf
pop
fcmovbe
cmp
cmp
insl
xchg
cld
cmovb
arpl
sbb
jno
fucom
adc
jnp
cmp
mov
ljmp
cltd
push
add
add
and
push
sbb
test
or
pop
mov
fmul
rolb
add
inc
push
jbe
pop
xor
jg
pop
icebp
push
dec
lock
mov
mov
pop
or
mov
pop
add
adc
dec
fisttps
xor
add
mov
lods
pop
outsl
or
cmp
into
cmp
or
xor
clc
jnp
push
dec
stc
push
dec
jno
out
fs
inc
pop
mov
dec
or
hlt
inc
cmc
dec
xchg
subb
gs
faddl
sbb
movsb
lods
popa
div
dec
sbb
jbe
leave
xorb
mov
test
test
and
push
sub
sub
lods
mov
mov
adc
mov
call
jecxz
xchg
sub
jecxz
mov
cmp
cld
dec
push
repnz
popf
je
or
insl
mov
sbbl
dec
insb
in
dec
adc
xor
insl
mov
scas
add
popa
or
mov
mov
mov
mov
push
das
jle
cmpsl
test
sub
pushf
call
xor
push
stc
scas
sbbb
xchg
dec
inc
sub
arpl
jno
lods
test
adc
add
pop
scas
adcl
mov
add
jno
inc
imul
adc
dec
cmc
push
pop
add
push
xor
jae
movsl
stos
ds
xchg
arpl
popf
sbb
cmpl
stc
shlb
mov
dec
jmp
into
mov
fisubrl
addr16
add
add
or
pop
arpl
and
insl
adc
mov
dec
iret
xor
inc
cmpsl
dec
mov
jg
lds
mov
shl
mov
cmp
cmp
jmp
jmp
fs
pop
dec
es
cld
shlb
sub
mov
xor
pop
push
add
or
xchg
sar
in
pop
idiv
into
xchg
pop
xlat
jmp
mov
negb
lret
test
call
jnp
mov
dec
mov
aas
xor
and
leave
lahf
mov
push
mov
and
mov
inc
jb
repz
cmpsb
sub
and
ljmp
movl
cmp
rolb
sbb
sub
or
ljmp
ss
sbb
xor
adc
and
scas
arpl
int3
out
lds
mov
pop
xlat
fwait
shlb
gs
in
out
call
jno
xchg
xor
mov
stos
add
and
inc
fistpl
cmp
push
inc
fiadds
mov
pop
adc
or
fs
mov
xchg
fcmovbe
push
jno
daa
out
xlat
add
fdivrl
iret
ds
push
add
shlb
mov
cmpsl
inc
mov
cs
insl
cmp
push
pop
test
jae
orl
dec
hlt
inc
shll
adc
repz
mov
sahf
call
lock
pop
or
add
ret
pushf
lret
inc
dec
jbe
or
dec
mov
jg
sbb
push
in
sub
lahf
cmpsl
add
daa
mov
and
push
pop
ljmp
fisttps
push
cltd
xchg
pop
cmp
xor
in
push
sub
fs
lcall
pop
jne
dec
repnz
pop
idiv
je
loope
xchg
sbb
push
js
add
add
ret
or
subl
xchg
mov
xchg
jmp
mov
int3
xchg
sub
fcomps
add
sti
mov
loop
jg
xchg
fidivrs
mov
test
iret
not
or
into
push
mov
shll
js
mov
out
int3
fisubl
jnp
or
push
sub
sarb
sub
sbb
aaa
push
inc
mul
jae
dec
mov
xchg
lds
sbbb
inc
rcr
daa
ret
int
and
lods
jmp
pusha
or
pop
lcall
int3
lds
adc
mov
cmp
leave
in
cmp
icebp
std
lahf
enter
fcompl
daa
and
and
cmp
push
out
pop
faddp
inc
push
iret
ffreep
movq
negb
dec
pop
adc
or
add
iret
movsb
out
add
fsts
cmpb
ret
cmpsl
cmpsb
jle
stc
imul
or
cs
add
rcrb
push
dec
leave
scas
nop
cmpsb
cmp
cs
rcll
pop
cmp
cmp
repz
js
push
inc
test
pop
xor
lods
sub
and
bound
pop
adc
xor
sbb
js
adc
and
lcall
push
xorb
and
aam
rorl
fs
outsb
mov
mov
or
fs
lds
insl
mov
andb
mov
jg
sbb
cmpsb
sbb
mov
test
jg
in
xchg
sub
cltd
fs
cmpsb
cwtl
mov
jge
xorb
pop
fldenv
adc
mov
push
movsb
or
mov
int
or
int
jl
flds
sarb
jns
mov
in
pop
mov
leave
mov
inc
jbe
aam
jmp
push
mov
and
pop
xchg
fnstenv
push
mov
aas
adc
scas
ss
inc
xchg
jae
subl
jl
jmp
fsubs
mov
mov
dec
mov
out
ja
cltd
pop
sar
mov
inc
jmp
push
mov
mov
outsl
lret
inc
pusha
xchg
cmpsl
inc
jge
aad
notb
aad
jnp
xor
call
lods
inc
test
cmp
test
popf
sbb
loope
pop
rolb
bound
inc
or
jecxz
and
rolb
mov
icebp
pop
ljmp
rcrb
repz
cmp
adc
xor
mov
fucom
int
and
and
popf
movsb
push
rolb
insl
idiv
fimull
aas
jo
icebp
ret
inc
ja
movsl
insb
and
std
push
mov
pop
inc
lret
lock
push
push
jno
adc
out
stos
mov
outsl
xchg
mov
nop
arpl
push
add
cmpsl
xchg
push
fidivs
outsl
adc
pop
out
rcrl
jne
mov
cmpsb
movsl
or
iret
int3
stos
in
fistps
jecxz
adc
testb
fildl
sub
daa
or
movsl
push
insl
in
push
lock
dec
push
arpl
mov
mov
imul
idiv
popf
in
test
jle
mov
clc
scas
cmp
adc
mov
xor
xchg
mov
xchg
lret
rclb
push
lea
int3
and
or
test
sub
sub
inc
arpl
push
in
inc
cmp
xor
aaa
das
or
jecxz
cmp
pushf
js
inc
push
cltd
movsl
decl
outsb
jnp
cltd
inc
push
lods
ret
push
mov
addb
lds
push
in
jge
sti
xor
push
dec
jae
sbb
pop
jne
mov
xchg
std
jp
icebp
and
int3
fldcw
mov
cltd
and
iret
nop
das
pusha
outsb
push
out
jle
push
mov
enter
lods
add
or
jp
aaa
out
mov
sub
outsl
out
inc
int3
jecxz
aam
cmp
movsl
mov
cmc
dec
call
mov
and
cwtl
in
subb
clc
sub
jae
mov
rcll
pushl
xor
cld
fstps
arpl
test
sbb
pop
loop
lods
aad
jns
push
adc
mov
mov
dec
fcmovb
push
inc
dec
dec
repnz
in
sub
pushf
outsl
insl
lods
sub
fidivs
les
adc
or
xchg
imul
daa
test
std
fldt
dec
or
clc
sbb
pop
xor
cmpb
mov
es
jg
pop
jg
enter
movsb
and
imul
cwtl
sub
imul
jmp
inc
jecxz
addr16
mov
call
outsb
fldt
push
xor
inc
mov
insb
add
std
lcall
sub
dec
cmp
pop
std
jle
inc
dec
lods
cmp
mov
into
sbb
sbb
andl
jnp
rolb
xchg
lds
fs
push
inc
loope
adc
adc
fbld
popf
outsb
jo
cwtl
movsb
add
test
add
mov
or
rclb
xlat
adcl
pusha
lret
xlat
xchg
cltd
xorl
mov
icebp
adc
fistpl
cwtl
shlb
cmpsl
or
lea
jb
jmp
test
cwtl
push
call
adc
adc
mov
ljmp
icebp
addr16
nop
mov
inc
push
jno
ss
outsl
popa
or
sub
mov
push
lea
jecxz
movsb
subl
aaa
sbb
mov
mov
les
sbb
xchg
aas
ficompl
aam
jle
aam
mov
dec
in
and
mov
insl
xor
pop
cmpsb
fstps
xchg
add
sbb
cmp
inc
pop
push
leave
push
into
add
dec
clc
js
pushf
and
mov
inc
in
xchg
xor
stc
fidivrl
and
icebp
or
lds
and
pop
fs
hlt
popf
repnz
cltd
ss
xlat
adc
mov
mov
pop
rorb
dec
sub
jns
xor
jnp
ja
xchg
in
pop
add
mov
pusha
outsl
hlt
mov
loop
cmp
test
adc
mov
push
pop
popa
xlat
xchg
xor
jb
cmpsb
nop
icebp
lahf
div
mov
cmp
decl
mov
inc
or
movsb
ror
add
lahf
mov
bound
cltd
xor
fsubp
adc
les
jo
push
jns
out
je
jbe
insb
sbb
cmp
shl
dec
add
arpl
cmpsl
push
fs
pop
jns
lds
jbe
inc
dec
jg
mov
mov
scas
mov
pop
xor
divl
jo
mov
jno
hlt
cmp
frndint
pop
pusha
sub
or
xor
fwait
push
mov
shrl
adc
mov
pop
mov
aas
mov
jo
sub
adcl
mov
in
adc
push
addr16
and
aaa
xor
xor
and
jnp
adc
add
icebp
dec
dec
inc
cmpsl
adc
jne
sti
push
sub
cmp
popf
sbb
mov
cltd
in
lcall
add
std
mov
je
fsubrl
sub
jecxz
push
jne
repnz
arpl
or
adc
js
add
cmpsb
movsl
in
and
jg
movsl
mov
sahf
ja
imul
out
mov
mov
adc
les
mov
add
sbb
ss
fnstsw
movsl
das
in
es
cmp
jge
insl
jno
lock
jl
hlt
mov
push
les
pop
sub
mov
ss
adc
xchg
mov
gs
lahf
jle
loope
add
repnz
test
push
sbb
repz
bound
repnz
jp
lcall
xchg
testl
sub
stc
test
push
xchg
cmp
push
or
pop
lahf
out
cmc
ret
dec
xlat
cltd
adc
mov
je
fcoms
decl
push
add
sub
scas
cmp
loop
and
sub
pop
test
dec
mov
mov
inc
sbb
pushf
add
das
icebp
and
test
xchg
push
xchg
adc
ljmp
adc
into
mov
cmp
lea
es
mov
mov
sti
adc
mov
dec
in
fldcw
and
in
lds
int3
cmp
and
dec
jns
xor
jbe
dec
dec
lods
sbb
and
pop
add
push
push
lret
push
mov
ret
popf
mov
xor
xchg
push
jno
aad
insb
push
push
mov
jb
subl
inc
es
jb
in
push
ret
call
mov
cmp
adc
rol
sti
movsl
jge
pushf
out
and
push
push
lods
pushf
mov
adc
mov
mov
jg
notb
insb
mov
loopne
fs
sub
outsb
stos
lods
push
pop
test
push
pusha
cwtl
adc
shll
and
mov
cmp
adc
ret
jecxz
leave
cmc
ljmp
into
mov
xor
jno
hlt
fnsave
sbbb
mov
and
mov
shrb
jg
adc
and
dec
add
rorb
pop
jns
insl
and
out
stos
adc
cld
je
xchg
insl
jns
shll
xchg
pop
xor
in
fs
fisubs
jae
adc
sub
sarl
mov
aaa
es
add
dec
jnp
clc
xchg
fbld
orb
and
lret
mov
or
mov
xchg
add
pop
push
enter
mov
mov
xchg
jno
or
scas
loope
pop
push
popf
adc
jnp
ss
inc
or
loop
nop
cmpsb
xchg
ja
and
sarb
rorb
push
andb
add
push
fmulp
bound
mov
mov
popf
lahf
cmpsb
add
sub
in
jl
fwait
adc
call
std
xor
ret
adc
pop
int
in
push
out
push
mov
rolb
nop
xchg
jp
pop
jne
inc
xchg
push
fwait
dec
or
js
jl
xchg
divl
stc
push
sbb
das
pop
pop
xor
mov
cli
jno
mov
pop
or
push
and
push
pushf
aas
adc
adc
sub
hlt
or
adc
jmp
xor
and
xchg
push
test
in
add
mov
push
lds
sbb
faddp
xchg
xchg
and
and
loope
mov
das
mov
in
iret
pop
mov
mov
loop
in
rclb
push
mov
inc
mov
adc
mov
lods
pop
xrelease
jno
xor
mov
inc
or
pusha
mov
aad
int3
loopne
test
les
jmp
pop
movb
push
test
or
sbb
mov
xor
pop
adc
add
in
roll
xor
jmp
aad
aaa
xchg
cltd
and
sbb
out
mov
push
dec
pop
xlat
jb
push
and
ret
dec
or
mov
cmp
lods
dec
xlat
jo
sbb
sbb
cmp
cmp
xor
add
popa
mov
mov
cmpb
rcrl
ret
mov
and
and
repz
xor
xor
enter
rcrl
jecxz
and
inc
insb
stc
fwait
push
xlat
pop
or
push
jae
lods
xchg
lahf
insl
movsb
mov
fwait
inc
lea
adc
out
inc
in
inc
cmpsb
fistpl
xchg
in
pop
push
cmp
fcmovnbe
adc
in
add
lea
add
sub
imul
test
jae
mov
mov
and
dec
and
jbe
std
dec
aaa
ljmp
sbb
inc
lds
iret
lods
pop
fldcw
mov
in
and
push
xor
jge
lock
xorb
lock
mov
xor
in
hlt
decl
dec
xor
lret
and
xchg
inc
jb
hlt
add
fbstp
out
je
or
dec
cld
mov
orb
mov
adc
inc
push
ljmp
out
jne
sub
stc
fstpl
xlat
pop
xchg
int
push
pop
fsubrl
adc
in
adc
xchg
imul
fstcw
movsl
stos
movsl
jnp
in
inc
decb
pop
sbb
push
mov
fs
sarb
mov
dec
or
and
dec
lods
lods
add
mov
sub
and
xchg
xchg
jbe
lods
or
mov
insb
pop
call
dec
dec
rcl
rclb
ret
addl
sbb
mov
iret
fistpl
xlat
mov
mov
xor
lahf
mov
sub
test
divb
jle
xchg
popf
jnp
insl
mov
rol
inc
and
jmp
mov
lret
pop
adc
xchg
sbb
mov
repnz
jle
dec
dec
testl
pop
sbb
xor
pop
adc
pop
adcb
aam
repnz
ljmp
adc
andl
and
sahf
cli
pusha
repz
jo
aam
adc
fistl
stos
popa
fwait
push
out
add
dec
jnp
mov
icebp
nop
or
mov
out
in
roll
shr
push
repnz
test
mov
cwtl
into
sbb
cltd
popl
push
inc
inc
fistl
dec
push
adc
cld
add
push
dec
xor
push
aaa
outsl
stos
popf
mov
insl
mov
xor
mov
call
icebp
iret
pop
mov
jp
cli
or
jl
xchg
fmuls
inc
clc
xchg
cld
inc
loopne
cmpsl
mov
cmp
dec
jg
add
adc
cltd
pop
mov
xchg
add
lret
jge
out
daa
push
in
es
ret
adc
push
out
jae
push
xchg
or
sahf
les
and
in
adc
and
out
sti
test
mov
fucom
into
int3
add
sub
cmp
xchg
cmp
add
xchg
xor
insl
jmp
pop
cmpsb
mov
pop
leave
test
cmp
push
mov
and
fwait
insl
flds
xchg
sti
movsl
mov
in
cmpsb
inc
lds
adcb
sbb
addr16
pop
dec
mov
and
inc
jo
adc
mov
mov
ja
repnz
sbb
push
je
cmp
icebp
mov
mov
fstpt
pop
enter
std
setnp
xchg
test
mov
jp
test
aas
xchg
addl
fistl
sub
xchg
aad
xchg
xchg
pop
cmp
sbb
xor
or
mov
lret
cmp
test
mov
test
sub
xchg
pop
test
push
pop
in
movb
test
cmp
test
or
cmp
add
xor
hlt
lods
cld
in
and
rep
fldenv
leave
fldcw
pop
lret
dec
nop
jp
mov
ror
sbb
lds
sbb
shrb
and
daa
adc
sbb
push
inc
push
xor
shl
mov
mov
xchg
out
push
sub
sub
sbb
push
int3
stc
in
fwait
repnz
mov
xchg
movsb
dec
lock
dec
sub
add
xorl
hlt
test
pop
push
pop
mov
xchg
mov
adc
je
pop
xchg
notl
in
push
adc
or
lea
rcll
push
mov
mov
cld
movsb
xlat
sarb
xor
push
push
xchg
xchg
sub
mov
orb
sub
sbb
aaa
sub
call
into
jl
test
adc
jo
xor
jne
mov
jns
sti
add
das
sub
xchg
aam
sti
imul
test
inc
ret
lds
adc
mov
push
fwait
je
dec
mov
jl
rclb
xor
shll
mov
dec
or
jecxz
dec
or
jmp
push
inc
adc
jmp
call
xchg
mov
out
mov
jecxz
jae
cmp
popa
fcomp
adc
pop
push
ja
or
out
and
mov
je
sbb
mov
inc
mov
lret
inc
pop
mov
popf
fs
ficomps
and
es
out
sub
push
rorl
repz
mov
test
out
mov
aaa
jp
xchg
add
jbe
pop
pop
hlt
cs
nop
push
sahf
pop
negl
repz
iret
push
fwait
mov
jge
dec
repnz
leave
std
scas
js
sarb
mov
xchg
ror
or
jae
jecxz
inc
sti
call
fs
jns
sub
cwtl
jl
sbb
push
xchg
leave
push
mov
mov
jg
insb
cli
out
jns
sbb
jmp
inc
lods
jecxz
mov
sub
shlb
xor
xchg
ret
xchg
push
inc
mov
fimull
mov
xor
fdiv
xchg
xchg
shrb
push
outsb
divb
lret
jno
int3
daa
movsb
stc
idivb
cmp
xchg
inc
xor
mov
es
mov
and
dec
xchg
sbb
je
sbb
xchg
sub
dec
popf
jle
jmp
ret
jle
movsb
js
imul
sarb
dec
imul
repnz
adc
into
sub
sub
dec
sti
clc
hlt
lock
xor
pop
in
cmp
xchg
xchg
sti
and
pop
rsm
fldt
lret
push
dec
push
movsl
mov
sbb
add
adc
push
sti
int
mov
lret
dec
fwait
mov
add
loop
dec
xor
roll
in
add
enter
xchg
push
mov
dec
cwtl
add
add
pop
imul
cmp
mov
sbb
jns
shl
enter
daa
or
dec
jp
push
sub
cmpsl
dec
jl
in
jmp
cmpsl
lock
cmp
adc
mov
fstpl
imul
jmp
leave
inc
pop
in
mov
adc
jno
aad
loop
stos
xchg
mov
jbe
andb
fs
loope
fmuls
rcrl
jo
push
iret
cmp
push
mov
in
mov
mov
or
divl
mov
sti
sbb
add
xchg
shll
rorb
sbb
push
movsl
lods
paddb
xchg
or
sub
arpl
pop
cmp
push
into
xlat
in
inc
ret
pop
movsl
int3
enter
test
js
aam
shlb
sbb
in
fdiv
mov
addr16
sub
fninit
sub
aaa
mov
out
jbe
inc
mov
xor
pop
aaa
pop
xchg
cmp
mov
pop
lcall
mov
fwait
hlt
ret
pand
mov
sub
stc
or
inc
rol
hlt
push
mov
or
in
adc
pusha
repz
ffreep
pop
jne
mov
mov
stc
dec
je
outsb
pop
jne
incb
rclb
fs
and
and
ret
and
sbb
inc
push
mov
jl
cs
inc
dec
sub
mov
dec
mov
xor
pop
cmp
repnz
lock
nop
bound
inc
sbb
xchg
in
popa
jo
in
imul
les
mov
push
push
pop
lods
mov
adc
sub
sbb
sub
sbb
jae
in
mov
mov
std
xchg
pop
ss
jge
andb
mov
lahf
inc
sub
cltd
aas
mov
cmp
out
xor
mov
clc
outsl
sub
push
inc
add
and
outsb
rolb
and
ljmp
push
sbb
jle
sub
add
cmp
dec
mulb
mov
xchg
mov
push
mov
push
xor
insb
fbld
mov
adc
inc
dec
mov
jge
jo
pop
xchg
dec
xchg
in
inc
mov
inc
push
xchg
lret
xlat
lods
out
inc
sahf
xlat
lahf
xchg
xor
jge
pop
bnd
push
jne
data16
and
icebp
out
or
shr
inc
mov
cmp
pop
adc
jecxz
fs
and
mov
lock
jno
negl
lea
cmp
test
jecxz
insl
ss
adc
xor
dec
ljmp
fs
fmull
xchg
leave
inc
and
or
push
js
dec
leave
adc
cmpsl
push
enter
test
sbb
imul
das
xchg
sahf
push
dec
shlb
test
movsb
and
rclb
jp
jg
xchg
cmp
iret
lods
rorb
push
rcrl
xor
xor
popa
stos
pop
ss
mov
mov
fldcw
pop
push
dec
inc
xchg
xor
int
mov
xchg
cmpsb
xchg
insl
pop
xor
aam
fimull
jl
idiv
fwait
js
cld
xchg
pop
pusha
pop
mov
icebp
xor
sbb
and
pop
jp
and
mov
mov
mov
add
jbe
or
jp
pop
or
mov
cld
mov
or
pop
fbstp
in
iret
into
lret
jp
movsb
pop
popa
cmc
lods
in
cmp
xor
imul
jno
sub
sbb
xchg
inc
pop
push
jbe
xor
sti
aaa
and
test
in
dec
cmp
enter
inc
mov
push
stos
scas
inc
inc
sbb
or
insb
push
mov
or
movsb
cs
test
cmp
mov
or
sub
jmp
pop
fisubs
or
cmp
lods
aas
lret
lock
jl
inc
in
pop
pop
cmp
outsl
and
xor
stos
xor
jmp
push
cmp
mov
xor
inc
adc
loopne
fdivrp
call
push
pop
movsl
adc
jp
mov
out
or
inc
or
hlt
fimuls
adc
cs
pusha
cmc
sub
fs
das
sbb
cmp
or
push
xor
mov
pop
cs
daa
ss
mov
popl
cmp
cmp
pop
fwait
sbb
addr16
pop
push
push
sub
je
and
and
add
rcrl
inc
movsb
insl
iret
mov
test
addr16
test
fists
aaa
ss
mov
jbe
adc
mov
adc
mov
cmp
add
pop
sub
cmp
outsl
mov
jge
or
lds
leave
fisubrs
push
lock
adc
and
lret
pop
sub
mov
xor
adc
fdivrs
cmp
fisubrl
adc
popf
mov
xor
and
xchg
loopne
push
cmp
js
repnz
mov
das
js
xor
xchg
mov
push
cmc
xor
fisttps
sub
js
into
mov
jb
dec
xchg
sbb
cli
lahf
test
jnp
addb
div
adc
sub
xlat
xchg
cmp
mov
insl
sarl
fcmove
packuswb
pop
and
icebp
dec
mov
pop
push
mov
movsl
jne
jmp
sahf
xchg
rol
adc
jmp
fistpll
loope
stos
adc
call
loop
ljmp
sub
negb
dec
aad
jle
das
jle
xchg
sub
out
jg
mov
pusha
xor
sub
dec
dec
jnp
cltd
mov
push
add
mov
xchg
addr16
inc
cmp
test
adc
lahf
xor
sub
xchg
xor
jnp
mov
push
xor
push
jle
dec
je
es
lahf
xor
stc
ret
xchg
push
adc
mov
pushl
push
punpckhdq
push
leave
xor
mov
ret
sbb
gs
es
es
mov
mov
mov
test
push
jg,pn
jne
aas
test
dec
cmp
jle
sarb
mov
or
cmp
loop,pt
xchg
fdiv
fsts
pop
dec
pop
mov
add
and
outsb
xor
sbbb
dec
in
adc
call
in
add
cmp
jne
xchg
sub
cmpsl
and
xchg
lahf
and
fnstsw
mov
cltd
push
call
pop
mov
lods
cmp
sarl
daa
int
stos
repnz
cmp
mov
aas
in
in
loopne
rep
test
add
dec
insb
and
xlat
jle
mov
and
pop
out
aam
insl
inc
sub
ljmp
bound
leave
sub
shlb
push
mov
popa
jmp
out
xor
clc
push
in
xorb
arpl
call
jg
enter
push
ja
scas
jnp
dec
and
mov
repnz
cld
pop
cld
fs
mov
loopne
aas
pop
jae
jae
enter
and
push
and
lret
xchg
xchg
dec
test
loopne
out
xchg
sub
push
sbb
arpl
out
push
out
dec
psubw
repz
mov
icebp
cmp
stos
daa
cmp
push
pop
packssdw
aas
in
mov
adc
icebp
adc
cld
sahf
lock
jb
in
pop
into
lea
ja
sub
cld
ss
fdivs
leave
shl
icebp
pop
leave
imul
or
mov
mov
push
ja
rcr
xchg
mov
xchg
inc
ljmp
xlat
add
jg
inc
add
push
fisttpll
cmp
hlt
in
sbb
scas
out
repz
imul
sbb
lret
into
xchg
cwtl
insl
push
or
xor
jmp
xor
gs
in
dec
push
int
pop
nop
in
out
into
insl
xlat
mov
lret
mov
jo
mov
lcall
mov
sbb
dec
sub
adc
push
push
mov
insl
adc
or
sub
loope
cmp
jl
fsubr
mov
cmp
mov
sahf
adc
mov
pop
movsl
js
jmp
xor
cwtl
push
lods
psllq
pop
pop
mov
jmp
jnp
sub
inc
cmp
outsb
sbbl
dec
shll
mov
cmp
out
ds
cmp
jno
pop
divl
jmp
inc
aas
arpl
jmp
xorb
push
adc
push
stc
adc
stos
mov
lods
adc
fstps
cmc
mov
je
push
jb
mov
insb
dec
fdivr
fbstp
mov
xchg
cmpsl
iret
test
mov
fwait
insb
scas
pop
push
jecxz
push
mov
dec
pop
jmp
sbb
push
imul
push
aaa
dec
out
js
hlt
cmp
xchg
xchg
jl
ss
sti
inc
xchg
popa
inc
dec
outsl
mov
push
dec
pushf
sti
pop
andb
jb
sub
pop
mov
in
sbb
fisttpll
popf
inc
cmp
cld
mov
or
inc
pushl
or
js
xor
sbb
pop
mov
push
xor
repnz
mov
cld
mov
inc
sbb
ss
mov
cmpsl
xchg
jle
ljmp
ret
ja
sbb
xchg
popf
fwait
adcb
mov
or
or
xor
and
scas
test
ja
jae
add
and
dec
and
addr16
mov
loop
mov
ljmp
mov
or
out
xchg
aam
int
and
std
or
and
pusha
sbb
outsl
xor
or
push
xlat
xchg
scas
cmp
pop
and
jae
enter
cli
mov
mov
xchg
into
mov
push
xor
pushf
sub
repz
testl
or
add
and
push
test
or
in
jl
addl
dec
sub
mov
push
pusha
push
pusha
mov
scas
sbb
mov
cltd
mov
movl
cmc
jp
hlt
sbb
mov
negl
mov
cltd
push
jnp
test
es
jmp
gs
sbb
cld
mov
aad
mov
push
rdmsr
cmp
out
xchg
pop
push
and
mov
mov
pusha
lcall
incb
xlat
add
push
pop
cmpsl
lret
push
dec
jnp
xchg
push
jns
lds
xor
enter
jne
adc
adc
or
or
shlb
sahf
pop
lods
icebp
lahf
hlt
push
jl
cs
xchg
fadd
dec
jle
adc
pop
aaa
cli
sub
scas
sbb
lcall
adc
cmp
adc
push
push
xchg
cltd
or
ret
into
push
push
pop
jnp
out
xor
outsb
push
lods
and
mov
sti
pop
nop
jns
jl
int3
push
in
ret
and
iret
and
sti
cwtl
push
jb
xor
test
inc
rolb
loop
pusha
rep
push
jl
push
shrl
ds
jle
xchg
fsubr
xor
insb
xor
push
in
andb
lock
inc
or
cmova
dec
mov
fcomps
cmp
mov
push
dec
jmp
cs
and
and
gs
lret
lret
ss
add
add
es
push
mov
negl
xchg
sahf
dec
cmpsl
fistpll
cmp
cmp
sub
mov
insb
inc
test
test
int
pop
stos
mov
into
push
outsl
pop
cmp
inc
ret
lea
sub
les
inc
pop
lahf
adc
pop
jno
scas
add
cmp
sarb
pop
in
insl
sub
push
dec
cltd
stc
xchg
and
dec
or
fucom
fcoms
push
lret
jae
xchg
lret
hlt
aad
insb
aam
pop
jp
jge
push
int3
sahf
int
mov
js
mov
lret
sub
movsb
pop
sbb
fidivrs
sti
popa
fs
mov
cld
fiaddl
imul
sub
mov
or
xchg
sub
dec
aam
jae
mov
inc
pop
int3
jns
or
mov
ficompl
mov
push
add
insb
lds
sub
mov
incb
sub
mov
push
push
outsb
pop
sbb
movsb
xor
push
lods
cmpsl
divb
push
xchg
add
js
sbb
mov
ret
es
sub
mov
ja
xchg
push
hlt
js
pop
fdivrs
test
push
adc
clc
sbb
xchg
call
jge
ret
repnz
cltd
mov
mov
enter
stos
and
xchg
outsl
std
pop
dec
or
inc
sarb
cmp
movsb
movsb
push
mov
scas
or
lods
mov
shl
pop
push
adc
aaa
mov
cld
popf
add
out
add
xor
adc
mov
sti
out
lret
pop
or
ffree
mov
mov
jle
cli
movsb
iret
dec
adc
fnsave
and
pop
iret
aaa
movsl
mov
jl
xor
fistpll
inc
fstps
mov
repnz
pop
sub
mov
cmp
cmpsb
outsl
jns
sub
mov
fucomp
pop
xchg
mov
jp
or
jns
fstpt
leave
in
pop
jb
lret
jmp
xchg
mov
mov
sbb
xor
rcl
cmpl
imull
add
sbb
xchg
imul
popl
aaa
mov
sbb
mov
mov
or
mov
stc
test
xor
xchg
icebp
xor
popa
ss
rol
mov
jmp
xchg
cmp
and
cmp
push
jg
test
push
std
adc
mov
aad
fdivl
fs
ret
sub
movsl
imul
loop
sub
addr16
js
les
inc
fisttpl
add
fwait
lea
call
adc
in
xorl
push
dec
sub
clc
pop
lahf
pop
push
sub
sbb
push
inc
test
mov
movsb
cmp
add
hlt
jmp
cltd
inc
out
mov
rcll
xchg
lods
sub
adcl
inc
cmp
int3
mov
lods
add
imul
xchg
std
cmpb
mov
fisubl
fstpt
lods
arpl
pop
lods
idivb
sub
cmp
jnp
pop
and
in
adc
mov
pop
out
push
iretw
inc
gs
fwait
dec
push
leave
test
ds
cmc
cltd
mov
and
xor
inc
mov
test
imull
in
dec
inc
jl
mov
add
or
lahf
sub
or
jge
mov
or
ljmp
mov
sub
add
push
inc
add
aad
pop
lahf
add
add
jb
jl
cld
sub
sub
xor
lds
loope
fadds
add
sub
add
rclb
jg
or
repnz
js
es
fldt
jmp
and
cmp
cmp
dec
add
nop
jmp
mov
movsl
cld
notl
xchg
jmp
fcompl
pop
in
ja
dec
jge
mov
stc
das
fldcw
or
jge
icebp
adc
fwait
pop
and
sub
subl
rcl
cwtl
arpl
inc
jp
lods
imul
dec
xorl
popf
fwait
inc
inc
test
out
jge
icebp
popa
call
pop
out
rcl
inc
add
lahf
add
mov
std
in
inc
fstpt
sbb
aaa
clc
cmpsl
test
adc
inc
or
and
repz
lcall
jo
sub
sahf
fs
add
nop
in
je
lods
rclb
mov
bound
clc
mov
idivl
outsl
js
xor
arpl
jo
push
dec
mov
jb
lret
sub
out
inc
cmpsl
inc
rorl
push
les
mov
aam
les
mov
psrlw
cmpsl
pusha
stos
aam
sar
into
sbb
lret
lcall
pop
and
add
dec
push
mov
sbb
mov
and
mov
mov
jg
adc
mov
out
pop
int3
fs
add
dec
lds
iret
std
xor
mov
shr
or
dec
adc
je
jae
lret
sbb
lock
add
jo
in
cmpsl
jecxz
adc
in
into
inc
cmc
or
pop
cmp
cld
cwtl
xor
cmp
popa
sti
xchg
xor
mov
pop
js
ret
mov
aad
adc
xor
pop
outsl
aam
mov
notb
mov
xorl
xor
inc
jge
mov
in
jmp
fnsave
test
cltd
push
push
mov
mov
sbb
mov
imul
add
ret
or
mov
xchg
xor
xor
cmp
jo
mov
push
aas
mov
enter
mov
out
data16
inc
scas
jle
out
and
jge
movsl
dec
cmp
or
sahf
add
rsqrtps
subl
arpl
push
testl
sbb
mov
jbe
fcompl
mov
mov
adc
mov
rcll
sub
add
cmp
add
mov
sub
or
mov
mov
mov
ljmp
outsb
ret
jmp
xor
fwait
sub
sbb
cmpsb
xchg
stc
xor
testb
fistps
xchg
mov
push
and
scas
inc
add
jns
js
dec
mov
les
das
xchg
jge
shll
ret
stos
mov
mov
cwtl
sbb
mov
cmpsb
or
add
cmp
sub
cmp
mov
or
push
test
add
cmp
or
jle
lods
in
in
orl
and
sub
enter
iret
notl
scas
jb
add
or
incl
test
les
xchg
inc
pop
push
mov
fcmovbe
mov
nop
mov
fldl
ficomps
popa
leave
int3
mov
adc
aam
pop
lods
inc
sub
bound
imul
push
fs
mov
xor
fisttpl
lahf
inc
loope
sub
or
mov
popa
pop
decl
fldl
sub
lret
stos
xchg
inc
jge
pop
ss
sbb
push
call
clc
push
push
repz
push
out
insl
sbb
clc
inc
adc
cld
dec
andb
xor
cmp
cld
call
xchg
add
mov
and
aaa
sarl
sbb
aas
lret
fcmovu
or
sbb
mov
cmp
hlt
mov
dec
lret
sub
or
push
xor
jne
mov
ret
add
or
call
gs
mov
test
nop
jbe
js
lcall
sbb
and
xchg
rorb
cmc
cwtl
or
mov
mov
aaa
test
ret
test
mov
je
sbb
fiadds
in
or
push
icebp
lret
iret
push
mov
ffreep
out
and
jo
mov
int
aas
sbbl
push
fcoms
mov
fisttpl
push
in
pop
andl
and
pop
test
jp
mov
and
in
dec
mov
mov
inc
fimuls
adc
sub
pusha
mov
repz
mov
sub
cli
popa
and
sbb
xchg
lea
test
mul
xchg
insl
pop
lret
inc
iret
mov
aas
call
pushl
mov
push
xlat
icebp
movb
pop
stc
xchg
sub
jg
mov
outsb
cmpsb
mov
sbb
push
xor
jg
and
jo
pop
fldcw
sub
xlat
push
rcl
clc
push
mov
add
pop
fdiv
and
jl
xor
in
sbb
pop
jnp
sbb
and
test
fsts
xchg
jns
sub
dec
adc
push
cmp
mov
add
push
cmp
adc
ds
movsl
repz
mov
sub
push
sub
pop
into
in
pop
fcmovnbe
jbe
mov
mov
loopne
mov
or
fsubp
scas
mov
fwait
pop
fldt
mov
xlat
xchg
pop
dec
fs
arpl
call
ljmp
imul
cmpsb
xchg
and
xor
rclb
push
xchg
cmovb
movsl
ds
jle
lock
cmp
add
ret
add
daa
lcall
out
cmp
lods
push
push
stos
jne
andb
mov
aas
mov
ljmp
fiadds
mov
xchg
fcmove
aaa
enter
push
rorb
jge
std
ds
push
cmp
pop
popa
xlat
rol
iret
into
and
loop
in
mov
loop
mov
fldcw
jl
dec
fistps
lods
daa
xchg
lea
xchg
int3
push
xchg
xchg
sbb
mov
sbb
jo
sub
shrb
cmpsb
out
jmp
jl
adc
repz
adc
mov
xchg
push
or
sarb
push
push
add
or
sub
add
jg
pop
ds
in
sub
or
mov
push
rep
add
jmp
mov
or
inc
shlb
negl
mov
icebp
popa
xchg
repz
pop
ficoms
push
mov
lods
fbld
fimull
sbb
mov
adc
test
dec
mov
ljmp
lods
inc
sti
xchg
pop
rol
mov
gs
inc
add
push
sbb
push
xchg
lret
adc
sti
mov
mov
adc
pop
mov
pop
xchg
ret
jmp
push
and
stos
mov
sbb
push
pop
mov
cmc
ret
stc
cmp
shr
scas
xlat
cltd
sahf
loop
adc
push
stos
inc
inc
mov
repnz
xor
lret
leave
in
or
xor
mov
call
cli
push
inc
dec
pusha
nop
inc
add
mov
dec
xchg
cmc
add
sub
fiadds
imul
mov
mov
dec
jmp
mov
fdivrl
ret
jmp
mov
add
mov
mov
ja
jb
mov
dec
mov
xchg
fwait
jae
and
sbb
cmp
lods
mov
js
dec
std
outsb
add
pushf
mov
testb
inc
inc
mov
xor
mov
rcll
imul
inc
fdivp
stc
xchg
mov
mov
inc
repnz
fcoml
mov
xor
add
or
mov
jg
test
jbe
xor
hlt
xor
fisubrl
push
lods
sbb
inc
nop
xchg
and
lods
imul
loopne
outsl
popa
sbb
test
rcr
fstp
imul
sti
lcall
scas
push
jae
enter
pop
xchg
test
xchg
mov
jcxz
sbb
adc
lahf
mov
leave
mov
sub
cmc
xchg
lea
fcompl
je
cmp
divl
adc
bound
sbb
or
push
and
mov
adc
imul
xchg
es
icebp
push
xchg
lods
adc
int
inc
adc
push
mov
or
jbe
mov
jmp
pop
rcpps
and
adc
mov
mov
imul
jbe
push
mov
xchg
pop
testl
inc
inc
daa
cmp
aaa
pushf
mov
push
pop
dec
xchg
popf
roll
pop
cmp
push
enter
mov
ret
fidivrs
mov
cmp
mov
inc
mov
adc
out
pop
xchg
dec
pop
dec
adc
sub
iret
repnz
aas
adc
mov
rclb
inc
movsb
cmp
push
sbb
bound
add
sar
sub
add
mov
lret
hlt
fidivrl
push
adc
dec
sbb
jo
or
lock
in
push
repnz
test
stos
fsubrl
mov
in
repz
xor
icebp
nop
lea
mov
ret
pop
xchg
jle
mov
inc
in
shrb
fidivrl
daa
xor
in
rol
cmp
in
test
subl
out
hlt
dec
jmp
adc
lods
push
xor
add
or
jmp
and
fwait
into
sub
jl
dec
imul
in
push
std
das
pop
hlt
fsts
cmpsb
imul
js
sub
cld
fs
xchg
popf
push
add
sub
call
dec
pop
xor
or
dec
lods
and
xchg
out
or
xlat
pop
cwtl
decb
dec
outsl
pop
jns
adc
repz
xchg
loopne
jnp
int3
push
data16
jle
mov
outsb
mov
leave
jno
stos
cwtl
xor
jle
or
sbb
lret
lock
pop
push
xor
test
xchg
clc
xor
cmpsl
sbb
mov
xchg
imul
lret
movsl
adc
add
fisttpll
pusha
fstpl
test
popa
xor
inc
test
jge
xor
jb
sbb
sbb
push
enter
mov
repz
pushf
stos
mov
into
jmp
insb
fldl
ss
mov
dec
popf
cwtl
sti
jle
daa
inc
icebp
mov
pop
ret
or
jl
xchg
jno
test
cwtl
cmp
aad
sahf
loop
mov
or
jbe
and
sbbb
push
aas
sub
das
pop
lock
ret
cwtl
movsb
push
imul
out
and
xchg
nop
rcll
sbb
outsb
mulps
mov
fmull
repnz
xchg
les
fs
sub
lcall
xchg
mov
pop
pop
fst
xchg
or
adc
outsl
ja
jmp
or
mov
pop
sub
in
cmp
insb
es
push
push
cmpsb
imul
test
clc
and
and
xchg
cmp
xor
test
inc
pop
sbb
xchg
popa
mov
ljmp
mov
xor
lret
inc
ljmp
mov
mov
jnp
sbb
out
scas
int3
flds
lock
in
mov
test
push
or
or
test
shll
ret
test
icebp
dec
inc
aad
rclb
sub
scas
inc
xchg
jcxz
loop
imul
rcrl
push
fxtract
in
repnz
pop
repz
mov
sbb
inc
enter
imul
fstps
pop
mov
inc
jb
out
inc
push
and
jbe
mov
xchg
pop
test
das
mov
or
and
dec
inc
add
hlt
mov
sub
mov
int
mov
sub
xor
int3
shll
mov
and
or
dec
cld
jnp
les
sbb
pop
es
insl
and
mov
fiaddl
movsl
pop
jb
sahf
repnz
outsb
push
fwait
pop
inc
mov
mov
or
aad
mov
mov
xchg
stos
xchg
push
dec
mov
adc
jbe
dec
in
push
add
xor
pop
adc
add
sub
mov
push
xchg
cli
test
pop
ljmp
xchg
dec
xor
jge
xchg
icebp
and
call
inc
mov
aaa
mov
jno
lcall
pop
stc
mov
jo
lret
xor
aam
loope
dec
mov
mov
les
pop
pop
cvtps2pi
nop
mov
dec
mov
and
rcll
adcl
xchg
adc
lahf
dec
hlt
into
enter
lcall
mov
mov
add
mov
push
sub
mov
add
mov
ffree
jp
lock
sbb
mov
rol
pop
outsb
popa
shl
popa
ret
xor
or
and
sbb
adc
mov
mov
add
insl
lcall
cs
gs
out
movsl
add
cmp
aam
jp
sub
mov
mov
ds
push
xor
push
out
jg
add
int3
ret
pop
lahf
movsl
mov
in
mov
dec
aam
cs
adc
jb
pusha
dec
mov
sub
add
test
or
call
sbb
adc
mov
iret
jbe
jb
sti
adc
pop
scas
push
clc
xchg
jo
insl
mov
sub
adc
ds
mov
hlt
push
cmp
add
sar
or
ss
adc
in
or
mov
sbb
push
pop
fistl
in
sahf
cwtl
cli
out
jbe
into
icebp
sbb
add
xor
xor
mov
jbe
fcoml
cmpsl
orl
xchg
or
jae
loop
and
inc
into
and
insb
mov
jbe
pushf
addr16
push
fldl
nop
and
push
cmpsl
push
rcr
imul
mov
popa
cmp
sbb
xor
dec
dec
cmp
cli
sub
xchg
mov
pop
cwtl
sbbl
pop
push
inc
adc
repnz
loope
imul
adc
shll
hlt
out
jns
pop
push
push
inc
addl
mov
in
jbe
call
adc
adc
sbb
cmp
insl
fwait
mov
nop
out
ds
mov
test
fs
sbb
lods
ss
scas
xchg
jae
shrl
add
into
hlt
push
mov
loope
sbb
pop
rolb
lock
add
mov
je
cmpsb
xor
jecxz
ror
addr16
push
mov
xor
adc
xor
test
iret
mov
cmp
or
stc
sub
xlat
loop
sub
in
repz
sbb
js
sti
xchg
xchg
xlat
push
xor
jno
ret
pop
inc
pop
sbb
add
xchg
inc
adc
or
or
arpl
jecxz
xchg
shl
stc
cmpsl
jbe
lods
lcall
inc
mov
scas
loopne
mov
dec
jecxz
ss
pop
pop
adc
aad
inc
js
movsb
insl
xor
add
inc
jb
push
into
movsl
nop
adc
jg
cmpsb
js
enter
and
sub
push
dec
add
and
fadds
inc
lret
test
xchg
shr
out
daa
cmpsl
jl
sbbb
lock
sbb
inc
mov
fstl
dec
aad
mov
out
cld
stos
add
ja
mov
fucomi
cld
scas
scas
jge
xchg
into
ds
js
mulb
js
je
xor
cmpsb
sub
and
sbb
sub
xor
mov
dec
call
movsl
dec
cmp
xchg
subl
cmp
adc
pop
dec
and
mov
aas
fsts
pop
insb
xor
shlb
xchg
cmp
inc
push
in
int3
cmp
dec
jo
mov
rorb
fidivl
sbb
push
adc
and
push
push
jne
cmp
inc
pop
dec
popa
std
pop
cli
leave
movsl
cld
mov
out
xor
mov
nop
pop
out
clc
rcll
jo
pop
dec
imul
sbb
clc
inc
sbb
inc
cmpsb
push
jae
mov
mov
jl
push
sub
cltd
adc
and
loope
push
fdivrs
and
sub
mov
loopne
scas
mov
jns
sbb
movsb
mov
add
sbb
push
push
mov
cwtl
mov
mov
jae
sbb
cltd
imul
jae
push
push
aam
lock
ja
adc
sarl
or
dec
adc
mov
dec
pop
mov
adc
movl
mov
enter
add
test
inc
push
lret
popa
lahf
xchg
and
ss
sub
dec
out
iret
dec
inc
xchg
xchg
xchg
pop
lcall
pop
shl
das
stc
and
and
and
sub
insb
cmove
nop
xchg
lea
out
cmc
mov
sbb
enter
dec
stc
rorb
movsb
sub
lcall
lea
cmpsl
loopne
xchg
cmp
stos
pop
sub
push
std
dec
cs
push
xor
fdivr
xchg
add
or
mov
lret
fdivs
in
jae
pop
pop
je
out
repz
adc
iret
imul
insb
das
das
data16
lahf
xor
xor
sti
lahf
cmp
pop
add
lahf
and
mov
or
inc
bound
xor
ja
push
int3
cmc
xchg
in
xor
call
pop
inc
pop
mov
stc
lret
mov
ljmp
dec
mov
mov
mov
ds
cs
das
loope
sti
andl
stc
xchg
mov
mov
lods
ljmp
movsl
les
mov
cmp
js
add
xchg
pop
in
call
popa
jg
in
mov
push
or
jne
sbb
xor
mov
fidivl
rcrl
leave
sbbb
mov
leave
out
cld
ret
dec
mov
pop
mov
push
inc
addr16
add
test
mov
mov
jns
mov
and
movsl
jle
loope
mov
imul
in
lahf
test
push
orl
std
int
add
adc
jne
adc
push
pop
fisttps
xchg
jb
std
or
sub
test
loop
sub
fsubs
jle
sub
cmp
dec
mov
in
mov
mov
cmpsl
sbb
negl
jae
sub
sub
out
mov
ficompl
enter
ja
push
je
je
sbbl
leave
jae
mov
jmp
ret
testb
xor
and
sbb
adc
out
sbb
mov
fsub
cmpsb
pusha
pop
hlt
inc
in
mov
cmc
lods
gs
pop
bound
pop
das
pop
test
mov
outsb
cwtl
insl
xchg
nop
push
cmp
push
mov
fisubs
add
ljmp
cltd
inc
mov
mov
xchg
inc
gs
repz
fs
hlt
inc
les
pop
add
pop
xor
mov
push
or
inc
scas
lea
rcrl
das
xchg
lcall
xor
mov
xchg
dec
mov
enter
stos
js
jl
pop
jecxz
clc
cmp
push
fstps
xchg
in
mov
sbb
jmp
fildl
mov
dec
or
sub
mov
pop
jmp
gs
lret
push
ja,pt
mov
out
pop
mov
sahf
sub
ljmp
jnp
add
icebp
mov
out
push
lret
lcall
iret
ret
popf
stos
aas
aam
divl
leave
dec
mov
outsb
loope
repnz
sar
push
mov
xor
inc
cmc
jp
data16
outsb
out
pop
add
or
sub
aaa
mov
dec
jg
mov
push
in
add
push
mov
ror
sbb
xchg
testb
inc
fcomip
adc
cli
xchg
mov
jge
push
xlat
ljmp
adc
mov
pop
add
xchg
push
lods
mov
inc
mov
push
shl
icebp
orl
push
data16
daa
mov
dec
adc
adc
js
sbb
pusha
lods
adc
sub
ds
orl
jne
mov
fdivrs
inc
jg
sub
stos
jne
xor
frstor
xchg
jo
adc
push
inc
cmpsb
push
add
dec
test
cli
popa
popa
cmp
pop
cmpsl
cltd
out
xchg
add
push
mov
add
push
adc
cs
push
sahf
push
cmp
and
test
rorb
hlt
add
sbb
sbb
ficompl
inc
jo
popa
out
outsb
push
mov
sbb
mov
popa
xchg
leave
loope
fsubs
out
lea
out
mov
mov
cmp
ljmp
and
out
arpl
aaa
push
sbb
scas
adc
dec
xchg
es
jg
ficoms
iret
mov
sar
and
lods
push
xor
cs
js
test
test
sbb
dec
xor
fisubrl
pop
cmp
nop
mov
mov
into
push
xor
xor
sbb
sar
xor
inc
cmp
shl
xchg
cmp
push
or
repnz
ficoml
xchg
push
inc
sbb
mov
test
aam
push
inc
outsb
icebp
xchg
scas
repnz
les
lcall
inc
addr16
xor
jae
mov
push
mov
inc
daa
pop
lock
push
sahf
xor
sub
cmpsl
jmp
xor
push
outsb
xor
test
sbbb
sbb
cmpsl
push
out
xor
inc
add
imul
xchg
push
lea
push
lock
in
aam
addb
or
idivl
in
and
mov
jl
sarb
cmp
cmp
jl
lock
sbbl
pop
loope
testl
aaa
arpl
roll
xchg
out
movsb
lret
sub
pop
fistpl
adc
mov
stos
enter
aad
inc
fstl
push
xor
sub
call
mov
or
enter
mov
adc
out
leave
mov
jo
add
push
push
mov
les
ret
pop
into
inc
test
cmc
pop
insb
aaa
pop
lea
add
dec
mov
clc
add
push
insl
pop
fs
xchg
xor
pop
sbb
lock
sbbb
sub
cmp
xor
dec
incb
mov
fstl
aad
ljmp
fildll
sti
stos
mov
int
sbb
xcrypt-cfb
cmpsl
out
and
scas
sbb
xor
hlt
sbb
cs
sbb
arpl
fdivp
push
add
lret
pop
xor
mov
jb
pop
insb
fsubrp
push
xchg
les
pop
insl
and
in
inc
orb
jp
or
testl
inc
xor
inc
add
leave
dec
sar
mov
jp
mov
std
push
cmpsb
xchg
test
fisttpll
push
nop
mov
lods
cmp
push
and
mov
in
jmp
fs
push
sub
loop
add
xchg
enter
mov
lret
stos
and
xchg
leave
jmp
jl
add
popf
pushf
shlb
xor
in
fldcw
or
mov
jmp
inc
mov
movsl
jo
xchg
inc
push
icebp
add
xor
cltd
or
cmpsl
je
push
fcoms
xchg
mov
mov
gs
adc
xchg
inc
cmp
jo
pop
xor
sbb
rcr
out
and
sub
out
stc
les
addb
ljmp
push
in
jnp
xchg
and
mov
rol
and
iret
xor
mov
sub
jmp
jmp
cmpsb
dec
out
pop
xor
xor
and
push
popf
mov
sahf
outsl
lods
mov
jl
or
pusha
fnsave
mov
cmp
dec
mov
popf
mov
inc
cmp
movsl
lahf
mov
adc
pop
push
jp
add
adc
clc
adc
insl
adc
int3
add
xchg
dec
hlt
rcrl
lret
ljmp
jae
hlt
inc
int
aaa
cs
adc
inc
repz
in
pop
cli
push
mov
loope
inc
mov
cmp
leave
pop
mov
mov
push
sub
out
mov
adc
xchg
loop
xor
adc
aas
les
loop
adc
sbb
or
xchg
in
pop
hlt
mov
and
pop
cwtl
stos
insl
leave
pop
adc
inc
dec
jne
outsl
sbb
outsl
inc
in
mov
movl
mov
jg
or
mov
aad
adc
mov
mov
enter
out
sbb
and
jle
loopne
int3
mov
sub
dec
clc
and
push
ds
ljmp
test
stos
aaa
xchg
xor
out
arpl
xchg
add
pop
mov
psraw
or
add
aaa
das
cmp
mov
movsl
inc
or
mov
mov
mov
cmc
popf
enter
movl
aam
sub
xor
sub
dec
pusha
pop
aas
sub
jle
mov
jle
fisttpll
xchg
pop
push
mov
dec
out
mov
lahf
test
mov
pop
sub
fcmovnb
push
iret
sti
xchg
daa
adc
cmp
call
enter
int3
gs
dec
mov
inc
fsubs
xorb
mov
loopne
xchg
mov
ds
jmp
dec
mov
add
sub
test
test
add
push
and
jg
mov
cwtl
jns
in
sub
test
jl
ficompl
dec
push
inc
leave
pop
lret
movsl
sahf
or
fs
add
dec
xor
cmpsb
and
andb
inc
mov
lea
daa
add
sub
stc
jo
imul
lahf
clc
ljmp
mov
int
rcll
jmp
mov
jg
stc
jge
push
in
hlt
fidivrl
xchg
sbb
mov
cltd
jno
loopne
pop
ret
aaa
sub
push
ja
jne
mov
jle
sub
sbb
scas
mov
mov
in
std
sahf
nop
xchg
bound
adc
insb
pop
fcoml
insl
iret
or
sarb
cwtl
aad
dec
xchg
xlat
iret
stos
ds
inc
mov
push
adc
cmc
push
ja
add
or
inc
xchg
or
and
pop
dec
xor
inc
popa
add
pop
cmpsb
daa
ret
cmovge
test
add
xor
dec
sbb
fcomp
out
mov
and
aam
clc
xor
adc
sbb
lret
pop
iret
icebp
dec
add
aas
sti
andb
and
xlat
mov
testl
cmp
sti
enter
mov
and
popa
and
ss
arpl
jno
popa
or
pusha
dec
sub
mov
push
xor
outsb
pop
data16
test
xchg
push
lret
incb
out
loop
xchg
sub
adc
mov
add
scas
mov
in
sti
add
xchg
iret
dec
popf
rorb
test
ss
cmp
push
mov
xchg
std
sbb
adcb
fcmovnb
daa
mov
cs
inc
dec
mov
jmp
ret
jge
adc
sub
leave
mov
mov
test
xor
stos
movsb
popf
or
push
gs
cmpsl
mov
pop
andb
outsb
jl
inc
cmpsl
sar
loope
add
lods
mov
mov
out
and
fildll
addr16
fcmovne
cmpsb
add
jae
dec
out
xchg
and
xor
insb
es
cmpsb
mov
jb
pop
imul
imul
add
push
mov
fwait
xlat
adc
pop
ret
jae
inc
jbe
sbb
pop
add
testl
sbb
adcl
add
iret
mov
shll
push
aad
sbb
pop
les
mov
dec
scas
pushf
ficompl
xorb
add
fwait
pxor
sub
int
sub
push
and
fsincos
in
fldenv
push
loopne
mov
jle
xchg
repz
xor
push
mov
or
push
inc
push
ret
jge
push
xor
rcr
arpl
movsb
and
out
dec
or
push
mov
les
adc
aas
push
enter
sub
sub
jae
pop
mov
jo
idivb
mov
aaa
add
enter
sbb
adc
leave
xchg
and
push
xchg
pop
xor
mov
int
addr16
daa
cmp
push
dec
push
mov
cmp
testb
mov
outsl
xor
lahf
test
in
shll
dec
das
lods
mov
and
stos
jbe
out
mov
icebp
xchg
popf
sbb
jbe
lods
or
decb
outsl
jmp
loope,pn
add
mov
xor
or
dec
inc
bound
daa
popf
shlb
shlb
pop
and
cli
jge
pop
test
fadd
icebp
dec
dec
hlt
jg
cltd
xor
push
pusha
jecxz
into
out
popf
rcpps
jge
loope
cmc
lret
xor
pop
in
xchg
lcall
nopl
and
pop
cmp
jmp
ret
jge
cli
push
xchg
xchg
aad
mov
or
push
test
push
mov
into
in
add
mov
xor
sub
mov
mov
ljmp
mov
dec
dec
mov
outsb
movsl
cmpsl
cs
mov
neg
loopne
add
testb
dec
out
mov
lret
sahf
in
sahf
inc
popf
cmp
dec
test
push
addl
sub
sbbl
cltd
mov
inc
xchg
xchg
push
lret
push
mov
pop
sub
cli
call
rolb
sub
nop
or
icebp
jmp
mov
ret
test
enter
inc
imul
dec
cs
adc
and
push
nop
mov
sub
lea
jne
push
mov
mov
cmp
add
push
mov
sbb
shlb
mov
cmp
xchg
divb
pop
or
subl
lea
fs
and
or
mov
mov
mov
push
icebp
loop
pop
mov
push
popf
loop
fidivrs
mov
pop
mov
daa
imul
hlt
aaa
loopne
xor
dec
mov
adc
test
xor
add
incl
nop
clc
lret
push
sub
test
sbb
cmc
aam
ss
fcomi
cmp
scas
popa
lret
jle
test
or
add
adcb
out
jmp
inc
sti
xchg
xchg
incl
or
add
sarl
push
out
push
lods
push
pop
mov
stos
mov
pop
movsb
ret
fnsave
lret
leave
arpl
add
cmpsb
pusha
or
call
cmp
mov
das
pop
sti
add
les
hlt
stos
int3
pop
push
mov
sub
test
jb
or
dec
fbld
jl
cs
push
shll
or
lods
popl
sub
cli
divl
push
push
ficoml
popf
stos
ja
mov
dec
hlt
mov
pop
loope
popa
stc
mov
mov
cs
mov
push
fmuls
out
movsb
xor
push
repz
cmp
aas
std
inc
scas
fwait
jb
pusha
sar
sahf
xor
xchg
int3
jae
xchg
pop
lret
jge
ficoms
push
testl
sub
lea
std
std
ret
pop
ret
pop
sub
sarl
out
hlt
dec
pop
sub
dec
xchg
movsl
movsb
xchg
jo
mov
and
jge
cmp
aaa
lahf
lea
inc
out
in
xor
adc
shlb
push
shrb
lahf
or
jne
jmp
stos
idivl
shll
bound
in
lock
dec
or
adc
add
jle
xchg
xor
call
cmp
push
mov
inc
jo
push
subl
cmp
xchg
pop
or
fistl
jmp
insl
mov
pusha
fldl
fwait
mov
pop
rorb
repnz
sbb
mov
fsubl
mov
dec
inc
in
sub
mov
ret
pop
movnti
and
and
push
xchg
push
ss
sar
jo
lret
mov
pop
xchg
cmpsb
push
mov
mov
ret
cmp
mov
mov
xchg
scas
jnp
add
ja
xchg
ljmp
mov
xchg
dec
xchg
aas
mov
or
jno
mov
lret
mov
loope
xchg
pop
out
jp
andb
mov
fistl
mov
or
jno
adc
adc
in
je
mov
out
jecxz
in
lcall
addl
jb
push
push
sbb
cmp
mov
cs
fcmovnu
scas
sub
inc
js
notl
add
lcall
int3
xor
std
loop,pt
and
dec
sbb
test
dec
mov
mov
and
aas
andl
movsl
cmp
leave
fildl
or
mov
mov
jns
dec
dec
adcl
je
shll
mov
mov
fs
in
pop
in
cmc
xor
aam
sub
stos
xchg
test
cmp
call
dec
pslld
xchg
cwtl
inc
test
hlt
push
cld
jb
push
nop
fs
cmp
fcompl
dec
inc
into
sub
xchg
and
xor
lret
movb
ficompl
cmpsl
or
rolb
addb
orb
lock
xchg
dec
dec
out
push
fildll
adc
and
mov
mov
add
test
inc
jne
jns
outsb
lret
xchg
push
mov
jo
inc
mov
out
int3
movsb
jge
mov
pop
xchg
or
lcall
dec
xlat
rolb
imul
loope
mov
mov
aas
inc
push
cmc
push
inc
decl
dec
test
mov
push
or
push
test
insb
mov
push
pop
sub
inc
sub
push
mov
imul
pusha
sub
lahf
loop
orb
xor
xchg
ret
fimull
cld
jmp
adc
add
lahf
sub
add
aas
pop
lea
and
rcrb
dec
rcrb
pop
push
mov
decl
jge
test
mov
imulb
out
xor
jle
mov
fcoml
inc
stos
enter
test
jne
inc
cltd
and
inc
fldt
adc
push
jno
jae
adc
and
mov
clc
cld
int3
loope
test
jb
inc
or
xor
and
call
jno
jns
pop
xlat
sti
enter
mov
push
ret
je
pop
repnz
mov
call
sbb
dec
push
pop
inc
mov
jbe
insl
adc
and
adc
sub
cltd
xchg
push
scas
or
jo
gs
repz
shrl
test
sub
pop
shlb
lret
add
dec
fcmove
add
inc
add
and
repz
orb
popf
stos
mov
fistps
mov
out
xchg
notb
push
lods
loop
xchg
cmpsl
dec
inc
dec
xchg
dec
mov
sbb
pop
mov
mov
mov
push
and
stos
push
sub
ret
movb
sbb
dec
sub
cld
nop
mov
in
adcb
and
pop
aam
adc
adc
pop
jmp
add
into
jle
adc
mov
inc
inc
stc
sbb
daa
push
dec
xor
push
ja
sub
insb
xlat
or
sub
sbb
enter
add
adc
xor
mov
xchg
cld
xchg
lahf
imul
lahf
pop
inc
lods
addb
jno
lret
and
add
mov
pop
inc
cs
insl
mov
mov
idivl
popf
xor
jle
mov
ss
push
outsl
stos
int
add
cmp
dec
negl
jg
ds
stc
faddl
mov
mov
fidivrs
mov
ljmp
in
inc
sbb
push
push
mov
int3
iret
mul
rclb
cmp
pop
data16
insl
lods
popa
xlat
mov
ss
sbb
aaa
call
and
in
mov
jne
pop
iret
push
push
enter
scas
subl
roll
mov
lods
in
fisubl
add
pusha
push
push
mov
mov
cmp
xchg
mov
push
cmpsl
add
adc
stc
or
addr16
inc
push
outsb
aaa
jecxz
dec
fwait
push
scas
repz
loopne
nop
call
mov
mov
jmp
stos
and
ret
je
stos
jle
rcr
cld
call
inc
fbstp
mov
mov
je
outsl
adc
in
xor
mov
dec
mov
shrb
sti
xchg
mov
jnp
iret
testb
add
pop
push
hlt
sbb
pop
iret
pop
xchg
scas
jnp
sbb
mov
sub
std
sbb
pop
ret
imul
movsl
mov
std
lock
push
arpl
lret
ljmp
mov
movzwl
mov
push
lcall
lret
ret
inc
std
imul
xor
and
je
mov
dec
add
inc
out
jno
repnz
sub
pop
das
aaa
sub
xor
mov
nop
adc
xchg
arpl
jae
lds
push
pop
add
mov
dec
push
mov
fisubrl
stos
test
dec
dec
dec
sub
xor
outsl
lret
push
cltd
negl
fld
fdiv
push
inc
inc
inc
js
mov
lds
and
cld
popa
fcomps
lods
iret
mov
cmp
lret
out
nop
loopne
aam
xchg
mov
dec
pop
lock
repnz
repnz
and
nop
and
fldcw
mov
lret
push
dec
movb
xchg
mov
dec
imul
rorb
negl
or
sub
repz
or
inc
rorb
ss
cmp
lea
shll
and
mov
loop
lods
mov
imul
call
iret
xchg
movsl
adc
outsb
push
or
pop
mov
sub
mov
cmp
inc
pop
scas
cli
cmp
pop
or
push
add
in
pusha
cmp
add
jle
sar
mov
rcll
ds
xor
adc
clc
jecxz
xor
xor
jbe
inc
popl
push
sbb
lret
arpl
sbb
and
dec
mov
push
adc
ret
das
adc
jbe
leave
jge
in
jb
push
ljmp
jp
jge
in
testb
pusha
repz
pop
inc
aam
into
jmp
int
rorl
daa
orl
mov
pusha
loopne
cmp
sti
xor
mov
adc
iret
cmp
dec
dec
adc
cmp
stc
cmp
jnp
pop
pop
in
adc
mov
call
js
xor
xorl
cmc
insl
adc
add
mov
outsb
or
in
jne
test
adc
int
fsubl
in
stc
or
addr16
cmp
shll
sbb
sbb
movb
and
sub
testl
inc
mov
mov
mov
or
test
cmpsl
les
cmp
hlt
fs
sub
punpckhwd
imul
mov
jnp
int
imul
out
adc
leave
xchg
pop
pop
cwtl
adc
call
adc
lock
in
mov
push
add
push
test
push
push
sbb
pop
mov
jno
je
pcmpgtb
and
xor
in
push
jl
add
je
insl
sbb
aaa
inc
mov
aaa
and
ror
jb
aam
aad
lret
cmp
arpl
push
outsl
push
xor
mov
rcll
clc
and
stos
jns
jle
xchg
add
xchg
and
add
cmc
push
outsl
push
mov
loopne
dec
imul
inc
mov
loope
add
pushf
in
outsb
lret
xchg
out
movsl
cmp
into
aaa
cmpsl
push
popf
pop
outsl
pusha
hlt
sbb
inc
mov
fstl
gs
pop
std
cli
loopne
pop
cmp
lods
lret
out
xchg
and
jb
mov
push
dec
inc
mov
lret
in
mov
and
mov
mov
je
xor
ja
push
push
test
inc
cltd
cltd
addr16
mov
outsl
lock
sub
inc
stos
xchg
xor
pop
sbb
test
jbe
test
into
push
ficoml
cmp
and
xchg
popa
or
xchg
popf
sub
dec
inc
mov
jb
and
scas
clc
stc
cmp
adc
lcall
mov
fmull
pusha
sub
cmp
add
mov
adc
insl
pop
push
cltd
sbb
inc
push
mov
cmpsb
aas
push
faddl
push
arpl
inc
adc
mov
jbe
xchg
sti
cmp
mov
adc
inc
lea
xchg
sti
mov
xchg
cmp
push
dec
xchg
outsb
sub
jmp
mov
in
cwtl
stos
xchg
fdiv
add
sub
imulb
jns
lods
and
mov
ret
inc
leave
jmp
stc
sti
push
popa
push
sub
daa
daa
rcr
cmpsb
xor
push
or
mov
testb
add
xor
xlat
mov
outsb
push
lock
pop
jecxz
cmpsl
ret
lods
mov
add
pop
adc
das
loopne
pusha
push
xchg
and
das
dec
adc
aaa
das
jmp
data16
dec
push
fnstenv
and
add
popa
or
sbb
jecxz
pop
cmp
xor
insl
fildl
and
aad
mov
shlb
and
xchg
xor
mov
pop
mov
je
out
mov
inc
imul
lret
orb
ret
insb
dec
jns
mov
push
aaa
addl
pop
scas
xchg
or
mov
outsb
or
gs
inc
sub
inc
out
scas
sub
pop
icebp
movsb
flds
xchg
jl
xchg
fnsave
shrl
aam
daa
ja
xor
fbstp
out
push
mov
popf
or
mov
push
push
xor
push
mov
push
sbb
jle
fmuls
push
pop
les
rcl
and
push
popf
icebp
bound
dec
sti
and
sahf
or
xchg
push
mov
sbb
adc
push
push
movsb
jmp
movb
pop
jbe
pop
and
cmc
pop
pop
test
or
cmp
lods
dec
push
aad
bound
adc
jns
mov
cmp
jl
xor
scas
icebp
xchg
testl
lods
aaa
mov
fildll
mov
addb
xor
xchg
adc
add
sub
xchg
mov
or
and
notl
and
mov
mov
test
sub
xor
jl
cltd
xor
or
stos
shll
mov
pop
loop
jno
daa
xchg
dec
test
sbb
sbb
jne
popa
inc
mov
insb
shll
mov
cmp
imul
addr16
adc
mov
movsb
or
jmp
jns
sti
imul
push
adc
movsl
fsubs
jnp
xor
dec
push
jae
xchg
jo
ds
les
aam
ja
push
jno
jp
jg
sbb
shlb
sub
mov
pop
pop
mov
mov
push
cltd
jns
in
sarb
dec
stc
lahf
mov
mov
hlt
inc
lahf
mov
bound
ret
fucomp
sub
fcomp
stc
stos
add
out
cmp
push
cs
in
jno
popf
in
push
movsl
jne
sarb
mov
cltd
adc
inc
push
shll
mov
popa
aaa
loopne
les
jbe
aaa
or
mov
clc
leave
jo
test
mov
xchg
pop
adc
ljmp
outsb
ret
aas
mov
push
movsl
jo
pop
lock
lods
sub
test
int3
xchg
stos
inc
in
pop
or
xlat
inc
xchg
daa
inc
fstpl
or
adc
xchg
add
test
movsl
sbbb
xchg
sub
jl
iret
cmp
insb
xchg
jmp
mov
and
ja
adc
shll
pop
dec
sbb
testl
jecxz
and
dec
sub
inc
int3
insb
lret
mov
and
mov
cmovl
mov
cltd
and
xchg
push
adc
rclb
mov
mov
shrl
push
jmp
dec
xor
ljmp
push
aas
in
dec
or
cltd
cmp
cltd
xor
jmp
jbe
in
pusha
xchg
addr16
iret
sahf
rcr
cmp
mov
xchg
stos
jae
jne
xchg
adc
test
inc
inc
xchg
xlat
cmp
pop
dec
outsl
mov
inc
data16
pop
push
adc
bound
shl
lea
push
andl
mov
pop
xchg
pop
xchg
fsts
and
xor
jae
or
ja
xor
mov
push
popa
fmull
xchg
loopne,pn
imulb
mov
adc
int3
push
cmp
lds
xor
lock
out
sbb
sub
inc
lret
push
scas
xor
mov
mov
cmp
dec
lahf
push
fwait
mov
inc
or
push
dec
enter
dec
fcmovnbe
xor
pop
mov
cmp
cmpsl
mov
jp
sti
notb
mov
lds
adc
lahf
repnz
dec
sub
popl
jmp
sub
add
or
pusha
int3
sahf
movsl
nop
sahf
push
sub
or
push
insl
cmpsb
adcl
ja
out
cmp
and
lcall
xchg
andb
push
cmc
clc
mov
jne
dec
pop
bound
bound
fcoms
rclb
and
loope
nop
test
mov
lods
xor
bound
sarl
enter
dec
cmp
xchg
stos
pop
add
xor
sub
mov
mov
in
push
push
push
xor
and
pushf
pop
dec
mov
jmp
add
repz
jmp
push
enter
mov
adc
jns
lret
mov
mov
mov
jmp
testb
xor
loop
cmp
cmp
pop
data16
mov
enter
push
jl
jmp
rcll
xchg
fistl
lret
add
mov
and
mov
and
dec
out
ficoms
nop
and
sti
jno
and
test
pushf
jmp
lods
xchg
out
ret
bound
mov
test
mov
cmp
leave
xor
xchg
mov
mov
push
jno
jae
mov
iret
shll
loopne
scas
pushf
gs
sbb
sub
add
adc
xor
in
xor
cs
add
cld
in
ss
cmp
and
xchg
sbb
pop
imul
mov
pop
fnsave
xchg
add
lods
xchg
aaa
lahf
sbb
loop
outsl
inc
enter
pop
mov
out
jp
dec
sbb
xchg
inc
jne
out
std
aas
cmp
mov
cmc
push
sub
shlb
xchg
mov
mov
flds
mov
repz
lret
jmp
sub
mov
pushf
pop
movsl
fimull
pop
push
mov
pop
movsb
or
cmp
and
popf
sti
movsl
mov
and
inc
aaa
test
mov
mov
and
mov
jns
fidivrs
stos
outsl
jg
fidivl
mov
fisubrl
aam
xor
stos
mov
push
fs
sbb
jb
jg
push
mov
jp
cli
cmp
push
push
sbb
jg
outsl
adc
shll
fisubrl
xor
mov
push
rcll
out
sbb
icebp
mov
inc
dec
add
sub
sti
or
inc
test
adc
adc
xchg
pop
lret
xor
test
mov
int3
arpl
lds
lea
pop
dec
adcl
out
rorb
into
sbb
xor
push
xor
je
xor
lods
loop
test
pop
push
mov
push
xor
nop
sub
mov
fdivp
ret
adc
xor
inc
in
mov
nop
lods
rolb
cmp
mov
push
dec
pop
mov
dec
lahf
lea
popf
inc
aas
out
lock
xor
inc
jecxz
lcall
add
les
push
xchg
inc
mov
scas
lret
or
roll
fidivrs
push
movsl
mov
mov
sub
mov
push
movb
cmp
cmpsb
sbb
addr16
nop
sbb
ret
sbb
stos
lods
sti
push
js
ret
adc
stos
das
xor
insb
nop
ss
jb
test
mov
arpl
xor
jbe
lret
push
pop
and
popa
or
es
outsb
les
fsts
xchg
xchg
cmc
fs
ds
xchg
out
stos
add
lock
insb
js
rorb
in
lock
mov
lock
inc
add
enter
lea
loop
ret
and
jae
mov
push
outsl
or
mov
push
icebp
mov
jmp
dec
out
xchg
ljmp
inc
pop
decb
pusha
testb
add
pop
push
mov
push
or
ret
lea
fisttpll
sub
and
ret
xchg
mov
clc
sub
and
push
loopne
fnstenv
fwait
mov
js
icebp
stos
dec
jnp
mov
mov
cmc
test
sbb
jo
addl
loope
cmp
jge
pop
int
lret
jl
aaa
inc
fisubl
stos
bound
fldcw
xchg
adc
sbb
jno
xor
mov
es
push
jno
mov
mov
sarb
test
mov
jbe
leave
stos
push
insb
fisubl
pusha
mov
mov
adc
adc
fiadds
out
rcl
lods
and
push
cmp
repz
fs
adc
pop
clc
push
pop
lcall
ljmp
xchg
arpl
sub
mov
arpl
add
fcmovnb
bound
pusha
cwtl
pop
iret
jl
mov
pop
mov
and
jmp
cltd
loopne
jmp
ret
cwtl
lds
jo
femms
add
pop
sub
andl
cmp
pop
leave
popf
mov
xchg
mov
outsb
jmp
orb
mov
movsb
dec
push
mov
mov
jae
jae
pop
leave
repnz
cmp
xor
dec
push
xchg
jbe
outsl
xchg
insb
add
cltd
inc
aaa
inc
add
cld
pushf
cs
dec
sbb
adc
movsl
into
mov
adc
cltd
fdivrl
int3
fstpl
mov
lea
out
sub
data16
sub
cld
push
clc
mov
inc
loope
loope
pop
rclb
jbe
sub
xor
jmp
mov
jb
repz
xchg
jmp
pop
fsts
sbbl
xor
push
sub
xor
std
pop
lock
arpl
pop
add
movsb
dec
xor
dec
arpl
jl
inc
xchg
stos
ret
jo
jmp
scas
xor
pop
push
mov
jecxz
and
cld
stos
adc
out
les
xchg
loopne
int
out
jbe
pop
ficompl
leave
xchg
dec
inc
xorb
loopne
pop
mov
stos
and
divl
cmp
sub
out
sub
mov
jle
inc
rcl
inc
and
and
gs
jb
pop
and
jl
jg
mov
sahf
cltd
cmpsb
sub
repz
pop
xchg
adc
sub
jo
pop
movsb
cwtl
push
out
jns
or
add
dec
pop
fwait
fwait
mov
pop
rolb
pop
lret
mov
icebp
xor
mov
inc
and
arpl
aad
mov
cmpsl
or
dec
loopne
or
adc
xchg
and
push
mov
lea
sub
std
rclb
fwait
jmp
push
movsl
shll
push
outsl
cltd
mov
lds
out
in
xchg
jp
icebp
push
aas
stc
or
bound
jecxz
arpl
adc
divl
or
add
cli
push
mov
cmp
enter
rcr
or
pop
dec
dec
ret
mov
cmp
mov
fiadds
sub
mov
stc
pop
test
mov
xchg
mov
fwait
call
sbb
adc
mov
out
jg
aam
gs
dec
xor
subb
pop
pop
pop
mov
cltd
xchg
or
insb
hlt
fucomi
and
mov
cwtl
lods
inc
jecxz
push
in
cmc
test
and
mov
lods
xor
sbbl
jg
dec
dec
or
mov
shl
sub
icebp
call
pop
fcmovu
fdivrs
jge
jbe
lods
or
mov
in
adc
scas
jge
push
jg
cli
cwtl
lahf
sub
stos
sbb
loopne
jg
aas
movsb
mov
dec
pop
fstpl
sbb
and
xchg
inc
std
or
xchg
push
xlat
test
adc
bound
jo
jns
push
sbb
xchg
or
roll
adc
push
add
lock
and
pusha
das
stos
fwait
sub
pop
add
lret
add
popf
out
sub
shlb
fcmovne
mov
and
sbb
sub
push
jge
mov
or
ss
in
movsl
xor
mov
pop
scas
in
mov
mov
imul
mov
sbb
mov
and
test
repz
je
jecxz
add
sbb
cmp
into
inc
enter
leave
xor
out
cmp
cli
mov
movhps
shl
cmp
mov
sbb
sti
fisubrs
mov
loopne
mov
out
pop
pusha
dec
subb
fisttpl
jo
jno
and
mov
push
in
icebp
jns
push
data16
jbe
cmp
divb
fidivrl
push
push
jbe
in
add
pop
outsl
inc
dec
in
gs
mov
cmp
mov
in
movsl
cmp
xchg
mov
rolb
xchg
cli
jl
lret
cmp
stos
cmpsb
jp
sbb
gs
adc
dec
xor
dec
movsl
cmpsb
scas
or
dec
push
test
leave
inc
in
pop
clc
gs
pop
jb
fincstp
fisttps
gs
cld
aam
push
bound
iret
pop
dec
call
jp,pn
jmp
mov
adc
cmp
inc
sahf
imul
enter
push
stos
loopne
or
call
pop
fs
adc
jno
hlt
mulb
dec
xor
xorb
sbb
pop
pop
sbb
inc
mov
loop
or
mov
sbb
cs
cmpsl
repnz
jle
push
xorl
sub
xchg
jno
cwtl
mov
imul
rolb
loopne
ret
dec
subb
scas
adc
hlt
xchg
dec
lock
loopne
pop
push
fwait
stos
loope
insl
sbb
loope
ss
mov
or
hlt
xchg
or
xor
pop
xor
ja
out
pop
aad
daa
out
mov
lahf
and
add
push
into
outsl
dec
jle
sbb
jno
mov
mov
sub
jno
push
add
xchg
mov
pop
lcall
push
pop
mov
sub
mov
adc
pop
mov
add
loopne
dec
and
jae
jmp
jmp
xor
mov
stos
jg
fdivl
xchg
fmul
lahf
sub
pusha
inc
stos
lea
sub
shl
out
lret
adc
hlt
mov
mov
jecxz
insl
mov
test
fs
dec
popa
hlt
jl
or
lret
jle
mov
mov
inc
pop
xor
cmpsl
adc
adc
xchg
dec
or
sbb
sub
fcmove
ret
ja
lods
popa
dec
enter
xor
imul
inc
dec
outsl
dec
and
pop
aas
cmp
iret
addr16
or
mov
mov
lds
xchg
cltd
clc
mov
adc
jg
add
xchg
sub
pop
inc
stos
ljmp
jl
rol
jl
jl
mov
mov
pop
adc
scas
test
jge
sahf
lret
insb
ffreep
out
lods
inc
cmp
dec
inc
lret
xor
scas
sbb
je
stos
int3
mov
mov
dec
test
aam
js
or
adcl
mov
push
push
or
inc
push
rorb
mov
rorb
cmpb
or
sbb
daa
inc
mov
shll
sbb
mov
divl
cmp
stos
pop
mov
push
cwtl
lcall
pop
xor
ljmp
sub
enter
lods
sti
ficompl
xor
push
sub
in
push
andb
push
mov
or
cs
mov
rcrl
jp
js
repz
add
pusha
icebp
cmp
adc
sarb
lret
dec
pop
js
push
popf
jg
loop
xlat
mov
test
cs
sub
insl
sub
jg
or
gs
jo
lcall
lods
mov
pop
mov
lcall
sbb
mov
push
mov
jno
push
xchg
in
sbb
in
mov
cs
cltd
loope
lds
scas
stos
dec
push
add
filds
arpl
shrl
xchg
sarl
unpckhps
aas
hlt
push
stos
push
arpl
jbe
add
mov
add
inc
pop
out
jns
cli
scas
and
inc
mov
fidivl
mov
xor
rcl
or
and
inc
xchg
xchg
xor
push
sbbb
pop
aas
fwait
pop
out
jno
add
lds
lea
insl
pop
into
push
mov
shll
xchg
and
sub
daa
push
inc
addb
notl
fldt
test
push
mov
pop
mov
sub
push
add
fwait
icebp
push
mov
cmp
xor
and
rcll
push
pop
in
icebp
push
out
sbb
jne
mov
inc
ret
arpl
jmp
jne
in
scas
inc
add
jns
clc
in
scas
mov
stc
shlb
test
adc
into
pop
shrl
mov
lret
shll
scas
push
ss
aad
pop
fwait
dec
sub
or
cmpsl
imul
adc
lret
je
and
bound
dec
jno
cmp
roll
sub
add
jbe
repz
addl
jle
xor
adcb
mov
pop
inc
push
lret
add
int3
dec
into
and
mov
mov
stos
bound
lea
pusha
jns
incb
and
aad
xor
in
imul
outsl
icebp
shl
jge
add
mov
xor
mov
lahf
mov
inc
mov
adcl
mov
inc
les
in
jnp
stos
int
mov
inc
das
popa
and
add
fwait
jbe
mov
push
xchg
mov
xchg
test
xor
bnd
mov
jnp
mov
les
imul
mov
cmp
xlat
mov
ret
cmpsb
push
dec
dec
enter
lds
lods
sub
pop
test
scas
test
stos
cwtl
push
jns
fcmovnb
push
dec
cmpl
sub
arpl
hlt
sbbl
jns
jno
jb
pusha
aam
out
dec
and
mov
xor
fwait
sbb
test
rcrl
or
mov
xor
repnz
cmp
push
rcl
mov
mov
int
sahf
test
rclb
dec
leave
push
xor
push
xchg
pop
aam
aas
addr16
mov
call
cmpsl
mov
xor
lcall
sbb
and
iret
repnz
mov
popa
or
aad
sahf
cli
dec
mov
ljmp
pop
dec
cmp
jl
ljmp
push
rcr
int
mov
xchg
pushf
xchg
into
popf
and
mov
sahf
jnp
js
sahf
out
cld
ret
lods
mov
ds
rcrb
or
divl
aad
call
mov
hlt
inc
push
cmpsb
sub
or
in
or
fdivrp
test
sbb
push
xchg
call
sub
pop
test
int3
aas
push
les
ret
adc
and
daa
repz
lahf
mov
push
xchg
in
xchg
ja
data16
push
mov
add
repz
ds
jle
push
jp
xor
setp
inc
mov
nop
stc
fbstp
mov
mov
ds
xchg
add
xchg
lods
sbb
sahf
movsl
call
test
xchg
pop
jo
imul
jl
cli
inc
pop
or
in
fcoms
xor
cltd
cmp
or
ds
or
cmpsl
cmp
mov
push
incb
mov
shrb
cwtl
dec
mov
adcb
imul
mov
xchg
xor
push
inc
scas
in
fnstsw
mov
aad
popf
push
and
js
fcmovnb
push
outsl
scas
jne
and
and
sbb
push
setge
push
xor
shrb
push
jns
adc
std
daa
test
or
dec
sbb
fisttpll
enter
addr16
xor
aam
jle
gs
add
inc
cltd
call
clc
stc
inc
push
mov
dec
adc
xlat
mov
mov
lea
cmp
ja,pt
jl
push
fsubp
movsl
xchg
push
not
pop
es
fisttpl
cltd
cwtl
test
repz
sbb
push
enter
fwait
push
jno
sub
inc
in
mov
add
leave
lcall
cwtl
fistpl
mov
lods
in
sbb
nop
cmpsl
dec
je
sbb
add
loop
push
xor
rorb
jle
lcall
sub
insl
add
mov
push
push
push
aas
test
adc
xor
mov
icebp
mov
mov
cli
scas
mov
ja
push
inc
xorb
cmp
es
or
inc
enter
or
add
jge
add
movsb
pop
fsts
in
jl
daa
mov
mov
sub
rorb
cwtl
orb
inc
fstpt
je
icebp
xlat
cmp
adc
addb
pop
adc
cltd
jp
sbb
mov
cmc
cmp
mov
inc
lea
outsb
push
leave
popa
pop
outsl
mov
xor
push
xchg
mov
mov
shlb
and
cltd
into
fldl
xor
xor
pop
jne
arpl
jae
ja
mov
sub
and
shll
and
clc
dec
mov
add
xor
cwtl
xor
test
orb
mov
mov
stc
or
push
insb
pop
hlt
sub
arpl
and
add
xor
pop
adc
xchg
add
ljmp
mov
ret
fcom
push
test
dec
sub
fs
in
dec
cmovge
push
repnz
push
mov
push
insl
xor
push
xlat
sbb
xchg
iret
cmp
scas
rorb
outsl
jmp
aad
pusha
bnd
pushf
loopne
arpl
and
loope
fwait
mov
cmp
inc
cli
mov
mov
fwait
cli
push
fcmovnbe
shr
or
iret
mov
mov
out
push
xor
ds
pop
dec
pop
jg
ret
inc
xchg
pushfw
xchg
je
cmp
adc
out
or
mov
mov
adc
and
sub
jg
mov
cwtl
outsb
imul
or
xor
xor
fsts
add
pop
jns
sub
dec
dec
out
mov
sub
mov
inc
test
inc
mov
repz
cmp
out
pop
jno
xchg
jae
outsl
jbe
xchg
sbb
and
insb
push
sub
xchg
cmp
addl
jo
xor
jmp
xor
addr16
pop
push
push
sti
scas
xor
cmp
imul
ss
push
test
mov
dec
mov
xor
out
pop
mov
sub
xlat
push
fisttps
lea
lcall
out
xor
or
enter
add
xor
mull
cmpsl
das
rcrl
repnz
push
push
popf
mov
fistpl
push
push
orl
lahf
jne
stos
pop
adc
daa
jo
push
les
sar
lahf
xchg
mov
test
cwtl
and
imul
std
out
inc
leave
jmp
addr16
cmp
imul
nop
fnstcw
repz
push
loopne
inc
adc
mov
jmp
mov
pop
or
dec
add
jno
or
add
mov
add
outsl
jo
pushf
stos
or
imul
or
dec
mov
outsb
nop
add
xor
sub
or
add
movsb
jg
loope
leave
adc
mov
push
pusha
cmc
inc
push
pop
stos
sub
and
pop
cli
icebp
int
add
mov
push
jge
popf
mov
and
cmp
and
lods
xchg
fstps
jb
enter
and
lahf
out
sub
icebp
or
sub
xchg
dec
sub
out
scas
xchg
and
inc
pop
adc
push
cmp
dec
add
rcr
adc
fldpi
pop
gs
sahf
leave
fists
and
lods
insl
sub
clc
pop
movsb
popa
xor
out
adc
sahf
mov
arpl
xor
jl
xchg
ret
je
mov
jecxz
adc
dec
cwtl
stc
lcall
xchg
subl
push
and
cmp
cmp
pusha
aaa
adc
pop
aas
push
rorl
jbe
mov
xor
scas
mov
cmp
dec
lret
pushf
push
jecxz
ret
pop
arpl
push
leave
sbb
add
jg
cmp
pop
fs
fldl
pop
enter
jl
mov
mov
jnp
or
iret
js
in
lret
sbb
out
jl
xor
jmp
insl
and
cmp
or
in
enter
or
mov
fildl
xor
aam
into
lret
cltd
push
sbb
jle
faddl
mov
lea
addl
adc
popf
out
adc
loope
les
push
sbb
cmp
xchg
addr16
xchg
fstps
and
sbb
mov
enter
xchg
adc
push
mov
xor
mov
testl
xor
int3
ror
mov
or
lahf
sub
or
mov
cmp
push
iret
fsubrp
cltd
stos
loope
imul
es
sbb
xchg
mov
jecxz
into
jb
popa
lret
xchg
pop
xor
push
int
add
sbb
xor
jae
rclw
pop
pop
mov
into
aad
into
idivb
pop
push
cli
mov
push
ret
push
push
outsb
test
imul
mov
adc
test
aas
leave
sbb
xchg
aaa
fcmovu
dec
jg
stos
js
mov
in
outsb
imul
mov
out
xor
in
push
sbb
push
fwait
jecxz
jno
in
not
jmp
mov
pmaxub
push
jne
xor
inc
push
cli
xor
icebp
int
sbb
mov
insb
adcb
pop
hlt
jne
jns
push
jo
xchg
sbb
xor
ss
jbe
faddl
ljmp
repnz
gs
sbb
add
jmp
mov
pusha
in
push
imul
sbb
and
in
in
or
add
lret
ret
fsubs
pop
mov
out
adc
aad
mov
push
and
repnz
sub
push
imul
dec
test
aaa
insb
es
sbb
inc
xor
push
mov
mov
daa
jnp
test
mov
or
inc
fidivrs
jp
adc
push
or
data16
jle
jnp
imul
popa
add
sub
movsl
mov
in
xchg
dec
das
fwait
sub
popa
idivl
popa
cmp
dec
icebp
push
dec
gs
das
out
pop
aaa
ss
inc
push
jo
mov
lock
mov
movb
xchg
inc
mov
mov
push
mov
das
dec
or
push
sub
xlat
pop
sbb
movsl
stc
out
ret
outsb
lea
out
mov
mov
clc
add
dec
adc
arpl
adc
int3
mov
les
ret
enter
dec
es
outsb
pop
jns
imul
pusha
jo
imul
mov
push
mov
ret
addr16
ljmp
adc
and
mov
or
push
stos
loopne
and
sbb
sub
sub
adc
sub
aad
pop
push
xor
popa
mov
faddp
cs
icebp
lods
cmpsl
fld
pop
lds
mov
rcl
jl
pop
gs
adc
mov
sbb
cld
sahf
sbb
pop
loopne
mov
clc
in
sbb
mov
adc
repz
sub
xor
imul
xor
loope
call
jb
lea
fcomip
and
lds
enter
lahf
mov
test
mov
aas
loop
pop
mov
mov
xor
xchg
or
ljmp
add
push
or
cmp
cmpsb
cmp
xor
loopne
xchg
or
sbbb
inc
in
fs
xor
loop
je
inc
inc
and
out
or
lcall
add
iret
lret
and
insb
repnz
nop
inc
loope
daa
push
les
or
inc
mov
sub
out
fs
data16
cltd
arpl
xor
inc
hlt
rcll
xor
mov
js
mov
jl
add
ljmp
faddl
pusha
shll
nop
mov
or
xor
inc
pop
das
push
mov
pop
icebp
cld
fsts
fldcw
mov
push
and
dec
clc
fdivs
xor
sub
stos
repnz
int3
mov
xor
adc
pop
lret
icebp
xchg
xchg
mov
mov
call
clc
stos
ljmp
es
shrb
movsl
subb
into
lret
rol
jae
repnz
out
add
stos
push
cmp
jo
jbe
dec
imul
std
push
jnp
movl
sbb
mov
and
lahf
sub
xor
dec
cmpsl
lret
or
cmp
outsl
arpl
mov
fnsave
rclb
mov
pop
adc
sahf
mov
orb
popf
out
jg
push
cld
cmpsb
outsb
ljmp
ret
fdivs
add
idivl
fs
test
sub
dec
mov
dec
in
lcall
scas
inc
js
inc
inc
inc
push
jle
jnp
clc
inc
xor
sti
movsl
iret
mov
dec
in
sub
cmc
xlat
adc
jmp
jb
cmpsl
mov
fwait
pop
inc
push
fsubl
and
fwait
cmc
push
mov
jbe
sahf
add
in
mov
mov
xchg
and
sti
stc
fs
push
xchg
insl
mov
loope,pt
arpl
outsl
mov
xchg
mov
xor
scas
inc
adc
lahf
inc
and
nop
cmpb
push
out
and
dec
js
push
push
xor
pop
ss
lods
pop
into
sbb
xor
cmp
outsl
xchg
jp
sub
mov
cmpsb
data16
mov
inc
adc
outsb
into
mov
cmp
push
insb
push
repnz
xchg
mov
sbb
jnp
loope
add
pop
ret
sub
mov
inc
xor
xor
jns
push
mov
sub
lret
ljmp
add
lea
iret
leave
xchg
add
inc
int
push
loope
sub
push
push
push
pop
jno
push
lahf
dec
out
xor
cmpsb
sub
shll
xor
xor
test
pop
nop
xor
cmpl
test
cmc
cmovl
fwait
ss
ret
adc
sbb
ja
mov
push
outsl
mov
mov
ljmp
pop
das
and
push
ds
cld
cli
push
xrstor
lahf
repnz
dec
push
pop
add
mov
mov
test
in
mov
cmpsl
mov
loopne
and
lock
mov
add
xchg
cld
lret
mov
sub
lds
inc
dec
jecxz
fmul
xchg
inc
mov
mov
mov
sub
xchg
test
jl
imul
enter
push
bswap
lret
hlt
mov
push
sub
cmp
push
xor
xor
jg
mov
daa
mov
push
lret
mov
insl
and
fstpl
lcall
or
xorb
add
sbb
dec
iret
pop
pop
xlat
outsl
mov
mov
popf
cmc
cs
xlat
pop
pop
subl
or
inc
mov
mov
xor
out
lea
xor
cmp
lods
push
xchg
inc
leave
decl
fwait
xchg
xor
loopne
jg
nop
inc
jmp
mov
rcll
cmp
xor
adc
xor
pop
mov
xor
in
push
pop
lret
mov
dec
cmp
xchg
rcrl
mov
xchg
mov
mov
mov
dec
add
shlb
fcomi
xchg
inc
jbe
inc
movntps
jnp
adc
mov
mov
aam
fwait
ret
cmpsl
jo
into
sarl
or
hlt
cmpsb
or
add
sub
lods
sbb
negl
mov
adc
test
sub
mov
fs
xchg
pop
jo
in
or
push
push
mov
mov
fdivrl
push
xor
jl
jnp
xchg
mov
jbe
mov
lods
imul
daa
aam
jl
test
xchg
fst
mov
mov
xchg
or
shll
sbb
ljmp
ds
add
sbb
cli
adc
adc
or
aam
int
jg
xchg
push
cmp
dec
stos
jb
rolb
sub
cmpsl
ret
nop
cs
sbb
adc
sbb
arpl
cld
outsb
fistpl
pop
add
aad
repz
jns
mov
mov
push
loop
arpl
xchg
sbb
pop
nop
and
out
mov
scas
sbb
pop
vaddpd
out
test
cmpsb
cli
outsl
pop
fwait
scas
xchg
ficoml
in
push
cli
popa
adc
or
push
lods
adc
push
mov
mov
inc
pop
cmpsl
aad
lret
pop
mov
lret
sub
ret
or
jle
dec
repnz
sbb
loope
gs
xchg
mov
adc
cli
ret
pusha
stc
das
mov
lea
pop
cmpsl
mov
or
cmp
jb
mov
add
jo
or
sbb
lock
ficompl
cli
cs
mov
pop
push
fnsave
clc
negl
dec
pop
sub
and
movsb
addl
mov
inc
sar
stc
cmp
xor
sub
mov
ffree
dec
hlt
pop
xor
add
loop
mov
jnp
inc
mov
ja
rolw
orl
ret
mov
movsb
addb
push
in
xorb
sub
stos
lods
xchg
push
mov
cmp
mov
jmp
repz
repnz
std
sbb
notb
nop
sarb
insb
out
fmull
out
jmp
test
mov
push
mov
out
mov
and
push
sub
sarl
cld
lea
ficoml
xor
test
push
adc
push
int
fisubrl
adc
dec
aas
lock
and
adc
es
cmp
repnz
icebp
data16
mov
mov
mov
push
imul
dec
xor
movsb
out
add
fnstcw
dec
jmp
xchg
sub
ficoms
or
xorl
fiaddl
and
push
iret
repnz
jle
imul
aam
add
mov
or
pop
icebp
jne
or
cs
pop
fistpll
xchg
imul
push
dec
mov
lcall
xor
pop
pushf
enter
jae
lods
lock
and
mov
inc
cwtl
or
iret
rcl
jns
movsl
lret
jg
popa
pop
inc
movsl
jae
ss
bound
dec
popa
jge
movb
jnp
lahf
lds
inc
mov
adc
leave
outsb
pop
and
mov
pop
test
mov
cs
sbb
out
scas
in
inc
jmp
ret
dec
out
das
jno
jbe
sbb
adc
out
sbb
into
mov
dec
adc
js
dec
and
ror
adc
jne
pop
into
pop
cmp
aas
and
add
lods
cmc
popa
test
or
leave
aas
xlat
pop
call
xchg
pushf
movsl
int
enter
or
xchg
sbb
mov
mov
hlt
cwtl
jl
inc
mov
push
jns
rcll
xchg
imul
xchg
mov
adc
dec
jne
sub
pop
mov
dec
data16
sub
icebp
or
mov
pop
push
mov
adc
inc
xchg
adc
jl
push
dec
in
push
or
push
loope
xor
dec
cltd
mov
test
push
inc
icebp
adc
push
test
insb
pop
lods
repnz
or
sahf
pop
scas
adc
pop
lock
jnp
lock
xchg
scas
cmp
cwtl
cld
out
or
mov
sbb
xchg
or
sbb
shrb
rol
lahf
mov
mov
test
scas
in
stos
xchg
pop
ja
fcompl
or
fwait
je
int
cmc
adc
and
leave
jge
test
lea
jl
inc
and
xchg
mov
xchg
lds
imul
cmp
sub
adc
mov
subl
test
inc
movsl
flds
push
int3
mov
xor
xchg
jnp
sbb
test
or
jbe
mov
push
js
xchg
push
in
daa
sbb
cli
in
push
jb
cmp
ss
insl
rorb
xchg
sbb
mov
js
push
int3
jecxz
mov
sub
scas
in
inc
cmp
jns
pushf
inc
and
dec
mov
add
xchg
stos
add
jo
cld
jle
pop
cmp
cmp
dec
daa
sti
in
insl
cltd
sbb
xchg
dec
adc
movsl
leave
mov
movsl
ret
fwait
hlt
incl
scas
lock
adc
xorb
adc
orl
fdivs
push
xchg
dec
jb
inc
push
rcl
mov
in
std
jo
test
jae
cwtl
loopne
mov
push
div
sbb
test
das
adc
push
adc
ror
inc
cmp
mov
out
pusha
in
rcrl
mov
cwtl
sbb
xchg
clc
test
test
mov
adc
push
out
mov
or
jnp
or
shlb
sar
test
jne
sbb
jecxz
dec
icebp
mov
lret
sub
int
das
jno
lcall
into
jg
shr
push
int
enter
lds
jecxz
lock
mov
lea
cmp
aaa
jbe
addl
shrb
xchg
lret
mov
jl
jae
outsl
xchg
sbb
jl
cmp
cli
jge
cmp
pop
inc
jecxz
out
cli
outsl
mull
subb
mov
cld
jo
lret
mov
add
pop
add
lret
les
orl
es
fucomp
scas
lock
lods
dec
jne
jle
ficoms
cmpsl
sub
add
inc
lea
stos
mov
mov
inc
int3
fcmovu
lcall
dec
mov
sbb
loope
pop
push
out
mov
shl
push
mov
sbb
dec
xor
insb
cmp
andb
jge
cmp
dec
fwait
push
xor
mov
xchg
add
sub
cltd
push
aad
xchg
int3
mov
aaa
mov
jnp
sub
inc
push
jno
xor
sub
lcall
dec
bnd
mov
or
loop
shll
cmp
xchg
outsb
sarb
pop
push
mov
sub
mov
movaps
andb
fisttpll
fnstsw
insb
daa
xchg
in
xchg
dec
stos
shl
call
loope
adc
fstl
fisubrs
repz
adc
shrl
pushl
adc
fisubl
imul
jge
push
mov
dec
sarb
movsb
push
repnz
sbb
icebp
out
or
mov
xchg
fsubrl
jnp
outsl
fyl2x
sahf
notb
shlb
fstpt
jbe
pop
es
out
add
dec
or
cmp
or
xor
lds
adc
js
sbb
scas
cltd
lds
xor
push
in
xchg
test
clc
push
pop
mov
dec
dec
out
ljmp
push
scas
jno
scas
loop
mov
xchg
xchg
adc
sti
loope
fcmovb
sti
pop
faddl
mov
mov
icebp
iret
ds
jg
and
push
test
std
leave
mov
and
jns
test
xor
out
or
mov
aam
xchg
cmp
or
sub
pop
mov
cmpb
cmp
inc
repnz
push
sbb
lods
scas
mov
adc
sbb
popf
data16
mov
push
add
repnz
inc
sarb
xor
and
or
in
les
dec
adc
push
dec
mov
pop
mov
shrb
aas
neg
pushw
aam
xchg
in
rcr
movl
and
mov
bound
imulb
pop
arpl
lahf
push
dec
incb
jp
mov
out
or
int
or
daa
mov
rorb
adc
fidivrs
cli
outsl
xor
add
jbe
insb
fisttpl
testb
ds
lcall
mov
pop
shlb
jne
push
mov
sub
dec
mov
xor
pop
fiadds
sbbb
mov
mov
sbb
mov
lahf
mov
iret
in
push
out
or
cmp
xlat
xor
xchg
push
bound
dec
pop
xchg
repnz
push
nop
mov
adc
jne
or
adc
cmp
sahf
add
lods
inc
pop
aad
fldt
mov
jnp
rorl
sar
adc
decl
and
xor
shl
fst
fwait
inc
mov
lahf
jne
fnstcw
int3
fildl
mov
in
test
ljmp
les
or
decb
push
aaa
cmp
rcrb
in
cmpsb
pop
in
jo
xor
jecxz
and
sbb
and
lock
push
sub
mov
das
ret
out
es
and
mov
jbe
xchg
in
pop
popf
mov
imul
test
sti
xor
and
push
jg
fcomps
mov
std
fdiv
mov
lahf
lret
and
pop
pop
inc
outsb
adc
inc
int
pop
shll
pop
in
popf
xchg
mov
bound
xchg
sbb
lea
xchg
aad
out
addr16
mov
push
fwait
aad
repz
add
jle
and
push
scas
pop
je
sete
std
xor
push
jl
push
mov
cltd
stos
outsb
out
cltd
jg
out
add
and
xor
fdivr
in
mov
in
pushf
shll
sahf
in
scas
test
pusha
xchg
jmp
pushw
pop
xor
or
or
or
dec
ljmp
jp
popa
cwtl
scas
bound
ds
pop
adc
mov
push
dec
shll
cmpsb
jb
in
push
int
aaa
cmpl
push
stos
inc
imull
mov
ds
inc
ret
sub
mov
jp
add
push
push
loop
mov
xchg
addr16
mov
pusha
ja
xchg
jb
jne
sbbb
sbb
nop
mull
sbb
loop
dec
add
inc
scas
xchg
out
mov
or
sbb
mov
dec
lret
or
ds
xchg
pop
jb
mov
xchg
jmp
add
sahf
jne
daa
outsl
mov
add
xchg
lds
pop
addr16
adcl
jl
mov
xor
cs
out
mov
pop
inc
and
add
xchg
leave
stc
xchg
add
cmp
and
cmp
sbb
cmpsb
cmp
aas
mov
mov
adcl
arpl
mov
or
mov
pop
pusha
movsl
pop
mov
or
inc
push
stos
les
sarb
mov
push
cld
roll
pop
sub
repz
mov
pop
pop
outsl
jl
sarl
lcall
arpl
xchg
lods
insb
lcall
dec
xchg
mov
popf
lret
mov
and
dec
xchg
in
mov
pop
divl
mov
jnp
sbb
jbe
scas
mov
neg
loopne
add
cmp
movsb
ss
xchg
repnz
imul
add
jmp
sbb
mov
test
and
std
inc
sub
movl
pop
shrb
movsb
xor
ret
xchg
cli
inc
addr16
cmp
lret
jp
and
outsb
adc
mov
mov
xor
cmpsb
lock
cmp
loope
push
pop
mov
push
cmpsb
fsubrl
movsb
pop
cmp
sahf
nop
ss
mov
out
jecxz
push
dec
stc
sbb
xor
test
lods
xor
cmp
jmp
cmpsl
xchg
cmp
movsl
mov
and
inc
stos
xor
jle
call
aad
cmp
mov
outsb
jecxz
lret
repz
xchg
push
sbb
hlt
xchg
dec
jecxz
adc
outsl
sub
int3
inc
in
sahf
out
sub
mov
icebp
mov
mov
jl
cmp
and
in
outsb
mov
imul
pop
jb
mov
or
ss
jecxz
pop
sar
and
or
add
popa
or
cld
sbb
push
push
sub
test
js
dec
pop
cmp
inc
inc
stc
sbb
cmp
cltd
mov
mov
shrl
clc
lcall
cmp
mov
test
push
das
sub
clc
cmpsl
pop
pop
addr16
out
ficoml
xor
scas
xchg
xorb
mov
fists
inc
mov
cli
ds
mov
leave
mov
fwait
mov
jae
std
je
xchg
mov
pop
xchg
sub
scas
mov
jmp
mov
in
jne
and
test
aam
les
xor
out
in
lret
push
cmp
fildl
or
cli
mov
mov
jo
sbb
add
mov
pop
jmp
mov
cmc
pop
std
sti
fisubrs
and
lock
into
call
xor
idiv
repz
arpl
clc
popf
insb
xchg
mov
jne
pop
outsl
dec
add
cmp
push
pop
shlb
xchg
ss
loope
scas
xor
dec
pop
aam
bound
stos
inc
sub
and
test
sub
inc
and
and
cmpsb
test
xchg
add
xchg
mov
inc
adc
test
test
ucomiss
mov
cmp
jne
sbb
aam
pop
hlt
out
or
addb
sbb
mov
jno
cmpsb
jmp
add
out
xor
sti
ja
popa
cs
leave
sarb
mov
sbb
sbb
sbbl
pop
aad
pop
add
inc
inc
cmp
incl
insb
data16
jo
inc
lahf
sub
fwait
cli
jl
aam
mov
clc
jnp
pop
pop
adc
imul
jns
in
das
mov
cmpsl
xor
sub
cli
insl
je
push
popa
loope
insb
mov
adc
bound
stos
in
pop
pop
jae
loopne
es
lock
ljmp
jl
add
inc
lret
in
xchg
loop,pn
cmpsl
xlat
adc
dec
add
mov
dec
mov
test
jge
cmpb
xlat
mov
lods
enter
les
js
pusha
xchg
dec
or
cs
loopne
sbb
rorb
cld
mov
and
mov
sub
lret
in
xchg
lret
lahf
sbb
insb
and
pushf
cmpl
and
subb
lock
enter
jb
mov
repz
repz
sub
int3
pop
in
mov
mov
sti
and
cmp
mov
pop
aam
add
es
hlt
xor
sub
pop
jge
pusha
xor
inc
push
movsb
mov
sbb
test
push
test
insb
sbb
dec
sub
mov
jmp
rcl
push
scas
out
cmc
or
dec
fidivl
movsb
pop
pmaddwd
cvtps2pi
lret
sbb
dec
sahf
xor
jno
adc
mov
fisttpll
xor
xorb
mov
fsts
data16
lock
int
sbb
daa
inc
xchg
push
mov
filds
and
mov
imul
stc
mov
add
xchg
mov
insl
mov
pusha
mov
xchg
sub
cmp
pop
loope
test
push
push
inc
psrlw
push
jns
data16
iret
sub
push
out
mov
and
mov
add
and
lret
pushf
xchg
aas
jle
out
cmc
dec
shr
cmp
push
lods
and
testl
addr16
jnp
mov
aas
pusha
lods
movsl
cmpl
push
lcall
js
dec
lea
jnp
or
cmp
mov
ret
xor
sub
jle
imul
ss
or
mov
sbb
rcrl
mov
or
sahf
mov
ret
scas
stos
mov
mov
cmpsb
test
insl
lcall
pop
cs
mov
sbb
xlat
repz
mov
decb
add
adc
cltd
bound
imul
and
fldenv
pop
flds
push
and
outsb
rorl
icebp
cltd
lods
jb
cli
out
test
loopne
int3
shrb
dec
ljmp
push
pop
rorb
inc
loop
and
push
call
mov
xor
sarb
jmp
push
xchg
sbb
sbb
cli
xchg
cwtl
or
mov
mov
mov
dec
das
addr16
arpl
mov
mov
cs
iret
push
adc
movsb
dec
sbb
scas
enter
imul
mov
push
mov
popf
push
sbb
pop
in
fstpt
push
inc
iret
out
jecxz
rorb
gs
sar
jmp
add
cmpsl
imul
sbb
or
sub
dec
sbb
xchg
int3
inc
push
ljmp
lock
addl
mov
ljmp
xchg
sbb
gs
adc
in
fnstcw
mov
ss
test
xor
clc
aaa
cmp
lods
mov
out
das
push
out
push
clc
clc
dec
ret
outsl
jno
xor
push
pop
pop
pop
push
add
sahf
cmp
adc
test
pop
sar
test
test
sbb
and
and
mov
dec
xchg
psubw
dec
inc
leave
aad
mov
dec
ds
sub
outsb
test
mov
stc
das
jp
mov
in
ficomps
outsb
push
lret
loop
or
pusha
leave
jg
das
mov
fxam
xor
mov
xchg
push
jle
fists
jl
sbb
add
out
jae
mov
push
adcb
sarl
das
mov
je
test
rcl
icebp
nop
or
fcmovb
loop
in
outsl
scas
fwait
xchg
mov
xchg
xchg
fsts
push
adc
out
aaa
shrb
mov
aam
xchg
aaa
pop
push
xchg
int
pop
inc
scas
aaa
add
lods
adc
mov
loop
shll
mov
in
fldenv
add
cmp
mov
dec
aaa
or
js
inc
hlt
lods
mov
mov
cmp
mov
jnp
std
push
pop
sbb
pop
inc
lret
xchg
fdivs
pushl
xchg
test
test
dec
insb
sub
mov
xlat
jle
mov
lods
cmp
or
pop
divl
fildl
xor
in
fistps
mov
mov
xor
push
incl
inc
test
and
inc
scas
arpl
mov
xchg
and
cmpsb
aas
add
out
xchg
push
sub
pop
scas
testb
mov
fwait
jo
cltd
lcall
fcompl
adc
jp
xchg
jbe
push
adc
inc
into
stos
fldenv
js
movsb
cltd
cmp
pop
outsl
jg
lock
fiadds
dec
sbb
cltd
push
andb
iret
jo
inc
cmpsl
jp
test
xchg
dec
lea
fisttpl
jp
push
push
int
insb
movsl
and
and
loopne
hlt
sbb
add
jmp
fistl
and
adcl
bnd
cmp
dec
rcrb
cmp
ret
insb
addr16
int3
pop
popf
faddl
ja
jno
inc
lret
xchg
repz
loopne
mov
xchg
scas
or
in
subb
cmp
cs
or
xor
jnp
outsl
mov
xchg
cmp
insl
test
inc
jmp
lret
inc
lock
and
nop
in
nop
iret
aaa
movsb
xchg
mov
sbb
mov
aad
push
cmp
push
pushf
cmp
jbe
aam
cld
pop
mov
aaa
xchg
hlt
loopne
sti
xchg
cmp
aad
push
pusha
adc
js
xor
sub
insb
leave
int
pushf
jmp
lods
adc
bound
or
sub
in
add
dec
stos
stos
cld
add
aad
je
in
inc
push
in
jp
ljmp
push
seta
hlt
and
cmp
or
inc
mov
and
ss
enter
inc
xchg
mov
in
mov
mov
adc
repnz
cs
sbb
adc
add
popa
xchg
test
pop
aas
sbb
sbbb
sub
in
scas
push
adc
test
push
std
loop
stos
push
cmp
push
mov
mov
jge
mov
lock
mov
pop
daa
in
pop
or
bound
push
cmp
push
mov
mov
imul
push
sti
xchg
jbe
int
inc
mov
fisubrl
cmpsb
jae
shll
jecxz
lods
int
push
cltd
clc
mov
adc
pop
push
fistpl
mov
adc
adc
dec
mov
xor
inc
mov
inc
out
add
inc
jecxz
out
es
out
mov
lods
push
insb
mov
mov
xchg
cli
mov
daa
mov
rorb
arpl
pop
ljmp
pop
int3
pushf
es
int3
pop
mov
and
sbb
pop
nop
add
gs
clc
das
inc
rol
jp
or
sbb
bound
xchg
mov
sbb
movsb
mov
push
ffreep
ja
rcrb
jno
sub
ds
push
and
xor
test
push
or
outsb
jbe
les
sbb
inc
fwait
sbb
mov
call
loopne
cld
cmp
inc
push
scas
mov
inc
push
pop
add
popa
int
les
jp
ja
lock
and
or
lods
sub
aas
pop
stc
xor
adc
mov
test
mov
mov
push
push
ret
jne
sbb
pop
inc
shlb
sub
inc
cmc
sti
xchg
scas
and
stos
add
pop
mov
test
scas
lods
pop
cmp
jnp
mov
push
and
fmull
rcll
pop
pop
mov
push
jl
es
jg
and
jecxz
push
xchg
adc
add
out
test
out
cmp
mov
jl
jnp
jae
mov
jnp
mov
dec
test
cli
adcb
xor
in
and
sub
or
push
test
mov
or
popf
mov
dec
cmp
mov
xchg
pop
add
test
pop
shll
push
mov
sahf
psrld
int3
sbb
inc
aam
push
cli
adc
scas
xchg
add
out
js
mulb
cwtl
lods
xchg
push
imul
add
or
rclb
pop
fldcw
je
arpl
add
push
sub
sub
pop
sub
and
iret
sub
add
pop
imul
xor
ds
and
xor
out
test
jle
outsb
pop
lea
push
mov
out
inc
mov
shl
inc
sub
insb
leave
jo
or
inc
ffreep
notb
mull
dec
popf
push
inc
repz
xchg
push
sbb
inc
sbb
push
cld
addr16
add
xlat
ljmp
jnp
enter
push
add
sub
cmp
adc
outsl
cmpb
dec
scas
lret
mov
out
ljmp
lret
add
push
or
outsb
ret
je
jo
mov
xchg
and
lods
sbb
jne
lcall
repnz
adc
sahf
sub
jmp
loope
push
sub
pop
xchg
addr16
nopl
out
inc
pusha
push
pop
sbb
andl
rcr
mov
pop
cltd
test
ds
push
loop
out
fmull
or
cli
outsl
push
mov
mov
sub
fidivrl
and
adc
orl
adc
lods
stos
jnp
fs
xor
mov
sbbl
loopne
rcll
push
adc
movsb
nop
je
mov
adc
sub
in
pop
sub
mov
xchg
imul
lret
or
daa
lret
and
mov
lcall
es
jmp
cmp
mov
xchg
xchg
lds
fistps
or
movsb
or
xchg
inc
dec
imul
xor
das
ret
pop
ret
divb
dec
cmp
add
sub
pop
adc
scas
add
xor
iret
loop
mov
sti
mov
rclb
repnz
jno
popf
mov
fdivs
push
stc
dec
out
or
xchg
cli
mov
or
pop
lock
xchg
or
hlt
pop
stos
rolb
cmp
insl
fwait
outsl
test
outsl
pop
mov
addr16
das
xor
gs
ret
lret
movsl
mov
sti
add
and
cmp
push
aad
xorl
in
andb
stc
imul
repz
pop
lret
shl
lods
ljmp
int
or
pop
pop
jle
mov
inc
jne
pop
xchg
xor
iret
jecxz
cmpsb
pop
lds
jmp
adc
and
sbb
pop
xchg
imul
dec
mov
add
cltd
fwait
or
ja
cmp
xchg
cmp
mov
or
mov
mov
sub
jb
cmp
out
mov
push
xor
mov
lcall
push
cmp
aaa
jae
add
gs
test
jle
jg
call
lcall
push
xchg
push
mov
rclb
sub
gs
outsl
loope
jecxz
pop
inc
push
cli
cmc
sub
mov
adc
inc
lahf
enter
lcall
dec
fsub
xchg
fiaddl
or
int3
sub
rorb
lds
testb
into
adc
xchg
movsb
or
cwtl
sub
xor
js
cmp
rclb
out
divb
pop
lea
repnz
sbb
mov
jg
jle
rorb
xchg
push
aad
mov
inc
sub
add
sub
filds
jecxz
mov
mov
lcall
int
lret
out
jge
in
push
int3
mull
idivl
icebp
xor
pop
xchg
sub
inc
mov
xlat
push
and
cltd
ss
xchg
add
out
sarl
in
or
jmp
sub
sti
inc
mov
push
lcall
mov
je
sbb
insl
loopne
sub
ljmp
fsubl
fimuls
add
push
push
fwait
cmp
push
lret
lcall
in
lods
mov
cmc
mov
sub
add
sub
xor
loop
xchg
jmp
jmp
jmp
add
xor
shrl
stos
push
jae
inc
pushf
test
ds
mov
mov
adc
cmpsl
pop
dec
fldpi
out
imul
fs
arpl
das
push
test
enter
adc
adc
loope
adc
adc
aam
xchg
or
or
in
cmp
jg
decb
pushf
lock
add
and
lret
test
sti
frstor
das
jae
sub
mov
out
jl
xlat
je
inc
push
push
repz
mov
mov
dec
fidivrl
ret
sbbb
xchg
stos
jge
and
sub
movsb
xchg
cmpsb
sbb
lret
lock
mov
lock
imul
lcall
inc
fst
cmp
jecxz
mov
pop
inc
mov
in
dec
fisttpl
pusha
dec
sub
lret
mov
cmpsb
cwtl
and
enter
fisubrs
shlb
xor
inc
mov
out
push
incb
push
adc
or
jb
mov
mov
or
push
repz
out
aam
jns
loope
lahf
into
stc
sub
jge
mov
out
mulb
jl
lds
scas
add
cmp
cmpsb
icebp
add
mov
jge
sahf
adc
stc
daa
pop
add
mov
mov
out
loop
int3
jb
loop
jg
imul
outsb
push
mov
scas
mov
xor
or
jmp
rol
pop
dec
sbb
cmpsl
subb
stos
sub
mov
subb
test
int3
push
ficoml
shrb
and
mov
xor
sbbl
mov
fmull
insl
xchg
mov
jnp
inc
mov
je
cmp
inc
pop
out
add
shll
mov
mov
xchg
mov
std
or
adc
jmp
xor
jmp
dec
loop
movsl
iret
adc
mov
dec
cmp
in
into
add
cmpsl
arpl
in
fsubs
xor
lahf
lock
adc
add
divb
lret
mov
push
xchg
jg
nop
cli
cmpsl
pop
mov
in
add
aaa
dec
repz
mov
rolb
cmp
cmpsl
dec
lock
ret
fcomi
out
cmp
andl
jg
outsb
loopne
sub
lret
arpl
mov
imul
xchg
dec
cmpl
inc
jmp
xor
mov
test
ljmp
iret
mov
ss
loope
js
ficoml
sarb
lea
sarb
gs
rcrb
sbb
push
inc
pushf
adc
inc
dec
mov
ja
adc
jecxz
loope
fstpl
dec
and
adc
mov
in
jg
stos
adc
mov
and
sbb
lret
pop
fidivrl
pushl
pop
push
fsubrl
shll
movl
call
sub
dec
sahf
js
cmp
arpl
int
or
mov
cmp
icebp
stos
mov
loope
push
outsl
js
inc
pop
frstor
movsb
sbb
jle
aad
scas
or
jnp
adc
andl
js
add
pop
lock
sbbl
icebp
sahf
pop
xchg
adc
inc
xor
pop
sub
cld
or
mov
pop
lods
xlat
jns
lahf
mov
cmpsb
idivb
and
shlb
jp
test
sbb
mov
inc
out
ljmp
das
rcrb
cld
fsubl
push
imul
fwait
dec
pop
enter
mov
and
sarl
sbbl
cli
scas
mov
xor
movsb
sub
cmpsb
jns
sbb
pop
aad
mov
pop
pusha
roll
xchg
jb
push
sbb
mov
mov
pop
gs
jbe
push
mov
adc
cmp
and
adcb
mov
call
adc
pop
rcl
cltd
ret
fidivrl
inc
nop
mov
bound
cwtl
aam
sbb
in
mov
ret
cwtl
push
in
iret
addr16
outsb
pushf
ds
mov
movsb
pop
clc
aaa
or
dec
sub
fld
aam
and
sahf
adc
xchg
xchg
mov
in
xchg
js
mov
push
das
mov
out
test
pusha
outsl
mov
or
fdivs
sahf
mov
jle
sbb
pusha
outsl
iret
mov
lcall
dec
cmc
stos
out
aas
les
xor
adc
xchg
xchg
ljmp
mov
adc
xor
add
fstps
repz
mov
jmp
xchg
sub
rcl
push
mov
sub
and
cmp
sti
nop
ror
out
rcll
or
push
pop
inc
adc
lods
sub
xchg
cmp
test
ss
and
dec
subl
je
pop
ror
popa
sbb
xchg
mov
cs
subl
aad
mov
xchg
cmc
in
das
jo
adc
lcall
mov
push
cmp
inc
jae
xchg
orl
mov
adc
or
or
pop
mov
lods
sub
orb
outsl
and
and
mov
xchg
icebp
test
fldenv
mov
mov
push
push
popa
sbb
data16
ja
lcall
cmp
pop
sub
insl
popl
push
pop
push
push
pop
outsl
add
dec
xchg
movsb
movsb
divb
aaa
jp
mov
cmpsl
in
leave
ret
xorb
and
or
ja
jp
or
and
lea
fcomp
pop
cmp
xor
jl
fists
inc
sbb
int
xor
cmc
pushf
and
clc
cmp
xlat
jnp
inc
xlat
xor
std
or
mov
mov
and
or
mov
mov
addr16
xor
js
icebp
fstpl
lea
sbb
leave
test
popa
scas
push
addr16
push
mov
cwtl
add
adc
js
cmp
or
addl
into
mov
aaa
or
stc
cltd
mov
stos
out
sahf
ds
xchg
dec
mov
jns
ljmp
test
sbbb
mov
mov
addl
pop
xchg
repz
jne
into
rorb
and
repz
rcrl
sbb
subb
repnz
out
adc
adc
xchg
jbe
or
decb
mov
subl
mov
push
movsl
in
and
sar
bound
sbb
push
loopne
mov
std
mov
pop
pushf
mov
push
ret
cmp
test
pop
push
push
or
pop
outsb
in
xor
test
or
push
pop
pop
pop
push
mov
sbb
jb
push
sti
sub
fcoms
out
into
push
mov
mov
jo
add
dec
xchg
je
inc
ret
lret
into
adc
out
jp
imul
mov
stc
jmp
pusha
cs
cmc
dec
xchg
pop
addr16
stos
aaa
cmp
jns
stos
push
icebp
loope
fdivl
popa
inc
xor
cmp
mov
xor
xchg
repnz
inc
insl
lahf
js
mov
scas
in
xor
adcl
jno
mov
and
enter
and
divb
jge
xchg
mov
mov
dec
leave
inc
xor
jo
aaa
stc
and
data16
cli
jg
into
fcmovb
sub
movsl
aas
jmp
xrelease
fcmovb
dec
int3
jo
jae
orl
and
cmp
jl
lahf
test
xlat
insl
dec
pop
lods
ret
pop
inc
dec
in
aad
test
arpl
lahf
cmpsl
sub
dec
jg
adc
jb
js
inc
pop
ds
lahf
out
repnz
sub
mov
jp
jno
insb
loop
je
mov
movsb
inc
or
imul
rorb
repnz
mov
es
pop
scas
mov
mov
addb
shrb
dec
addb
mov
std
bound
insl
in
sub
or
gs
pop
sbb
data16
sub
add
jle
sbb
sbb
std
mov
xchg
xor
insb
lcall
hlt
pop
sbb
mov
pop
and
xchg
test
call
fisttpll
ja
mov
adc
js
push
js
push
iret
add
xor
outsb
and
leave
and
mov
xor
sbb
mov
push
cmp
or
cmp
sti
subl
sub
js
out
sub
jecxz
inc
pop
push
mov
inc
mov
inc
ds
in
cmpsb
jl
sub
push
mov
or
or
pop
pop
mov
push
insb
daa
or
int
imul
clc
nop
sub
out
mov
out
dec
push
sub
xchg
push
mov
add
dec
lret
mov
fisubs
lods
in
cltd
sub
or
cmc
pop
inc
lahf
pop
inc
cld
in
or
cltd
sub
scas
in
int
mov
push
mov
add
enter
roll
ficoml
fldl
mov
sub
mov
pop
inc
js
mov
ficoml
mov
out
cmp
cltd
dec
cmp
ficoms
cmpsl
lock
in
pusha
dec
mov
xor
in
sbb
push
cmp
aam
wbinvd
in
push
test
xor
subb
imul
sahf
sarl
cmpsb
add
xchg
movsl
je
jbe
sbb
or
cmp
xchg
fildll
mov
insb
mov
sbb
adc
int
cli
movsb
dec
out
mov
mov
and
xchg
jne
or
sbb
ljmp
xchg
mov
incl
daa
pushf
push
movl
cwtl
and
das
fistpll
lret
jp
push
stos
inc
repnz
adc
or
pushl
fldl
outsb
jns
pop
mov
test
cmpsb
fisttpll
sbb
ffree
gs
cmp
repz
js
add
mov
inc
push
mov
pusha
jecxz
mov
inc
pop
test
xor
adc
xlat
lods
js
push
sti
push
aaa
lcall
inc
call
js
icebp
cmc
cmc
data16
sbb
and
popa
jne
aas
mov
cmpsb
jo
mov
inc
dec
mov
pop
aad
mov
mov
test
sbb
add
mov
mov
cmc
lods
nop
pusha
pop
xor
and
push
ret
sbb
jbe
rolb
inc
ret
mov
fldcw
out
pop
enter
fadds
inc
dec
ja
pop
orb
addr16
fisttps
sbb
rclb
shll
push
mov
mov
push
into
xchg
jg
lock
adc
pop
push
xor
test
xor
pop
in
fld
int3
lods
out
icebp
test
pushf
cwtl
sbb
fcoml
ja
sub
outsl
pop
ja
daa
sti
enter
push
and
clc
fidivs
jmp
ss
rclb
cmpsl
daa
pop
pop
sub
data16
or
sarl
push
lret
adc
lods
call
pop
int3
arpl
insb
add
mov
sbb
or
sbb
sub
mov
sbb
xor
adc
orl
icebp
sbb
fldl
scas
xor
push
ss
idivl
jp
rorl
add
arpl
in
ret
mov
js
add
paddsb
or
push
xchg
ffree
and
or
sbb
mov
push
fnstsw
pop
jo
sub
jb
mov
jae
xchg
imull
sarb
xchg
mov
and
test
mov
cmp
mov
cmc
outsl
xchg
sub
sahf
pop
or
jb
test
jmp
insb
sub
jmp
mov
clc
into
adc
and
push
cld
xor
pusha
cmp
push
aas
xchg
mov
leave
lds
das
pop
cmp
ja
adc
jge
scas
inc
mov
cmc
sahf
sbb
lea
lret
and
out
xchg
jmp
mov
sbb
mov
xchg
cltd
fldt
mov
movsl
pop
aam
int3
aam
out
lahf
inc
sarb
lret
es
loope
add
test
cwtl
lret
mov
sbb
jecxz
psubusb
lock
push
xor
xor
aad
cltd
lea
mov
push
cmp
sti
xchg
aas
pop
jle
unpcklps
inc
je
or
nop
dec
out
stos
andb
enter
cmp
pop
push
hlt
pop
rcl
in
cld
pop
and
jnp
clc
mov
or
jle
xchg
xor
and
ret
pushf
out
and
dec
insl
call
and
lret
insb
addl
out
rcrb
mov
and
pop
enter
pop
call
xor
aad
das
fwait
mov
stos
aam
stc
lea
sub
movsb
stos
scas
or
mov
adc
iret
mov
lret
mov
lcall
js
pop
xchg
outsb
psubw
arpl
mov
in
and
scas
pop
push
mov
cmp
lea
scas
repz
insb
and
negl
popa
ret
push
fisttpl
xchg
adcb
ds
repz
dec
fs
jp
pushf
jb
mov
hlt
push
inc
movsb
jp
inc
add
lret
sbb
jne
inc
push
insl
mov
sub
xor
shrl
cmpsl
das
sbb
cmp
mov
outsb
or
dec
jbe
mov
cs
lea
daa
lret
adc
add
mov
pop
fsubr
xchg
sub
mov
push
dec
loop
sub
jo
xchg
pop
mov
pop
and
lods
mov
jne
xchg
lods
adc
psrad
loopne
jo
sbb
inc
add
jb
rcrl
pop
lret
ret
ss
xchg
dec
or
dec
lea
push
aas
pop
push
and
and
mov
xchg
shrb
adc
sub
push
lret
xchg
add
cmp
and
hlt
or
addr16
mov
adc
insb
push
mov
bound
xor
jne
push
jle
movb
push
sarl
mov
inc
movsl
lahf
mov
pop
pop
inc
adc
inc
sub
loope
insl
jg
jecxz
imul
fists
cli
and
pop
and
and
dec
adc
shrb
mov
lret
push
push
push
push
scas
mov
cmpsl
inc
outsb
dec
xor
mov
and
and
roll
and
cwtl
push
or
mov
xor
loope
vmptrld
dec
ss
es
mov
cmpl
in
ret
repnz
jne
pop
sar
pop
std
inc
scas
test
mov
in
int3
or
adc
xchg
cli
xchg
ljmp
aas
daa
test
pop
mov
push
ljmp
xchg
push
xchg
decb
inc
daa
pop
sub
pop
sbbb
orb
mov
dec
xlat
lock
sbb
and
push
xchg
and
cmc
in
pop
sbb
into
jmp
xchg
adc
add
inc
cmc
movl
gs
mov
xchg
in
push
cltd
cwtl
lock
xchg
dec
jle
add
xchg
popa
and
mov
adc
xor
pop
mov
idivb
xor
xchg
sub
xor
or
jmp
adc
jne
lds
add
decb
jmp
leave
mov
dec
int
dec
fiadds
shl
jle
icebp
ja
fisttpll
mov
and
pusha
lods
in
ds
mov
push
and
insb
aaa
mov
jg
outsl
pusha
push
test
sub
mov
add
cwtl
pop
js
mov
xlat
xor
loopne
adc
mov
sti
sbb
cs
inc
hlt
js
mov
xor
loope
insb
mov
int
lret
pop
sbb
push
fidivl
stos
pop
mov
cmp
insb
jne
sub
xchg
mov
add
sub
fisubs
lret
or
mov
jp
clc
int
sbb
out
and
movsb
out
adc
sbb
pop
xchg
fldl
cld
jp
es
mov
or
rcrb
pop
pop
stc
scas
push
int3
mov
push
and
ret
push
rorb
scas
pop
add
adc
dec
jge
call
icebp
xor
xor
adc
out
pop
jne
decl
bound
int
in
ret
in
push
mov
push
jge
adc
mov
pop
mov
orb
sbb
inc
jp
inc
int3
adc
inc
shll
mov
adc
rcl
xchg
repz
ret
fstl
int
add
cmp
sub
adc
mov
inc
out
xchg
xchg
outsb
enter
iret
fsubr
out
pop
jg
xchg
cwtl
rcrl
cmpsb
rclb
ficomps
dec
loopne
sub
jmp
mov
and
sbb
lock
in
rcrl
mov
xchg
adc
ds
leave
mov
sti
fadds
hlt
lret
push
into
xchg
cmpsb
ljmp
add
pop
dec
xchg
push
mov
xchg
mov
int
out
lcall
jle
and
push
mov
sbb
xor
std
sbb
test
fidivrl
into
out
fldcw
dec
dec
in
into
je
dec
xchg
lods
mov
inc
inc
scas
mov
inc
mov
out
and
sub
add
jmp
sbb
inc
pop
das
pop
aam
push
inc
psubusb
dec
add
and
adc
jnp
data16
inc
rolb
mov
movsl
test
or
idiv
inc
jl
cmp
push
jnp
jns
xchg
adc
sar
dec
inc
pop
fwait
or
std
jb
fiadds
cli
pop
lods
and
movsb
xor
js
mov
add
push
jecxz
std
in
pop
sahf
jbe
jp
jg
out
pusha
out
bound
and
in
mov
leave
ljmp
cld
subl
cltd
or
mov
stos
sbbl
pop
mov
push
pop
ret
adc
into
or
adc
sbbl
sbb
cwtl
mov
pop
lcall
add
scas
lret
cwtl
push
je
std
daa
pop
mov
xor
add
lret
and
xchg
popf
push
and
xor
popf
std
jb
pop
and
cmpsl
loop
mov
icebp
jb
outsb
in
outsb
fldcw
pop
dec
mov
mov
pop
and
roll
andb
ss
leave
leave
imul
push
or
fwait
scas
pop
dec
dec
or
mov
lcall
cmpsb
push
movb
mov
jmp
popf
nop
mov
ds
inc
jmp
inc
fwait
in
dec
push
lock
jno
pop
inc
or
dec
cmp
mov
inc
add
or
dec
sbb
ljmp
lds
fidivs
in
sbbb
scas
mov
xchg
mov
lahf
icebp
into
xor
xor
and
insl
subl
and
xor
xchg
pop
mov
xchg
aam
and
imul
loopne
les
icebp
pusha
outsb
insb
xchg
jb
or
in
push
jge
out
dec
jp
icebp
arpl
es
scas
xchg
mov
or
xor
fdivrs
jle
sbb
out
mov
lea
sub
insl
pop
mov
or
repnz
mov
outsb
push
jnp
push
push
outsl
pop
imul
cmpsl
mov
std
fmul
xchg
loop
dec
std
mov
inc
mov
fcom
popa
outsb
push
xor
mov
pop
loop
std
sahf
ss
scas
aaa
movsl
call
xchg
in
out
int3
sti
sub
imul
lret
mov
cltd
stos
dec
ret
dec
xchg
lcall
jb
out
jb
jmp
jge
rorb
into
fnstsw
or
push
mov
jmp
dec
and
adc
les
push
sub
cmp
sar
in
nop
jg
mov
lock
adc
xchg
push
jge
or
xlat
jp
hlt
push
add
dec
rol
dec
adc
mov
inc
push
lods
sahf
in
inc
rol
cmpl
push
mov
out
mov
push
movsl
pop
sarb
sub
mov
sub
jnp
add
cmp
push
cmp
lret
fstpt
push
inc
daa
les
aas
cwtl
into
rolb
jns
sbb
xorl
mov
lret
sub
mov
cmp
jae
out
cmc
aaa
cmc
sbb
mov
dec
lods
add
push
cmpsb
cmpsl
loopne
xor
jmp
xor
sub
mov
push
test
sbb
sbb
cld
dec
popa
or
adc
dec
arpl
jge
mov
sbb
andl
mov
dec
mov
sbb
mov
or
pop
in
stc
nop
jmp
lods
xchg
or
lock
mov
sbb
lret
mov
les
and
jmp
lock
call
jbe
lret
repz
bound
mov
test
inc
decb
adc
leave
lret
mov
and
inc
or
aaa
mov
or
out
gs
jmp
mov
neg
rorl
inc
out
push
or
lahf
out
mov
rol
xchg
mov
shlb
cmpsl
test
subb
out
out
popa
and
jbe
dec
jb
ficomps
scas
dec
outsl
sbb
xor
rcll
aas
push
insl
jge
subb
and
inc
mov
or
mov
fcmovu
jge
notl
pop
int
inc
jns
aaa
pop
sbb
mov
daa
inc
test
outsl
cmpsb
or
push
leave
cmc
xchg
pop
sahf
out
popf
cmp
lret
imul
xchg
pop
fsts
mov
bound
mov
cmp
dec
popa
mov
hlt
popf
mov
sub
in
lods
jo
outsb
mov
imul
shlb
daa
rolb
call
shl
pop
cmp
cmc
pop
and
push
rcrb
mov
mov
jno
in
aaa
add
jae
loopne
rcl
leave
pop
mov
push
fcomip
or
mov
mov
jno
in
repnz
aaa
lea
cmp
imul
cs
pop
add
xchg
add
aaa
test
out
js
icebp
cmp
loopne
push
loop
add
push
add
gs
push
inc
dec
and
and
mov
mov
mov
loope
pop
inc
dec
jle
enter
cmp
bswap
inc
pop
fimuls
cmp
mov
out
dec
dec
push
adc
and
mov
pushf
es
xchg
lret
cmp
sarb
mov
loope
pop
or
or
inc
shr
mov
rclb
mov
aas
cli
mov
out
out
dec
mov
cmp
in
pop
stos
xor
cmp
inc
dec
add
cwtl
ret
pushf
lock
scas
test
jnp
mov
popa
jecxz
sub
leave
adc
mov
fnstenv
mov
xchg
jl
pop
jecxz
hlt
je
cmp
inc
mov
jne
push
fldcw
and
cmc
fdivs
mov
jecxz
pushf
xor
cmp
push
sbb
push
mov
push
lcall
enter
pop
mov
xor
iret
pop
loope
lods
jns
sbb
fucomp
call
add
push
jmp
lds
cwtl
xchg
ljmp
popa
aaa
mov
fidivs
mov
push
int
sub
scas
inc
addr16
nop
dec
pop
or
outsl
pop
pop
orl
stc
cltd
mov
jecxz
jl
and
inc
push
cwtl
mov
fmull
pusha
cld
loopne
fistl
mov
push
loop
cmp
dec
cwtl
shlb
mov
fidivs
jge
shll
or
cmp
lods
dec
jo
add
shl
outsb
or
pop
int
cld
loopne
mov
aam
and
cwtl
idivb
scas
mov
or
scas
lods
mov
or
ret
iret
sbb
or
push
shr
inc
rcrb
lds
mov
idivb
ret
xlat
dec
mov
dec
fiadds
jnp
cmp
bt
dec
push
or
push
cmc
jge
mov
pop
popf
ror
xchg
adc
sbb
pop
sbb
jb
jo
scas
inc
mov
fmul
sub
add
inc
scas
jae
ret
fsub
lods
xchg
mov
popa
pop
xchg
pop
push
add
loope
sti
jmp
out
addr16
daa
or
mov
icebp
dec
push
push
gs
cmpsl
xor
sbb
pop
lea
sbb
push
insb
adc
aaa
push
jmp
test
push
leave
lds
icebp
mov
aaa
pop
sub
push
xchg
add
movsl
repnz
xchg
adc
pop
das
hlt
icebp
ljmp
in
inc
adc
dec
les
lods
call
shll
cld
clc
mov
pop
pop
cmpl
push
mov
cmc
outsb
stos
repz
aam
push
aaa
rcll
jmp
or
or
lods
pop
jmp
lock
dec
stos
push
pop
sbb
ret
push
sbb
sbb
fdivrs
fwait
inc
scas
inc
mov
icebp
jno
jge
inc
es
mov
jg
fsubp
pop
clc
inc
ficoml
xchg
lods
sbb
es
dec
sub
mov
enter
sbb
popf
popa
inc
movsl
dec
sbb
cmp
xchg
jge
jne
cltd
inc
sub
sub
sahf
and
cmp
subb
xor
rcl
and
outsb
aas
shll
mull
call
and
mov
in
dec
vsubpd
lods
cmp
or
aad
adc
mov
cmpsl
pop
out
inc
out
push
and
push
das
push
push
arpl
mov
addl
add
mov
mov
bound
xor
cmp
rol
cmp
sti
nop
pop
sub
fs
adc
jns
and
pop
mov
push
pop
hlt
adc
xor
mov
testl
je
push
jmp
and
push
sub
xor
out
mov
dec
jnp
jp
sub
gs
in
mov
dec
xchg
xchg
and
jl
sub
jo
out
jb
out
mov
inc
pushf
xor
cmp
sbb
cmp
sub
dec
push
mov
push
jbe
mov
push
push
test
inc
andb
jae
les
icebp
dec
lds
sub
subb
sbb
cmp
sbb
popf
shrb
adc
stos
sbb
ret
mov
stos
inc
and
mov
and
arpl
int3
mov
adc
cli
push
pop
adc
mov
loope
lods
les
addl
leave
nop
scas
pusha
or
jo
lahf
cmc
push
xchg
pop
inc
pop
sbb
mov
fsubs
cs
int
jmp
dec
cmp
jbe
jp
inc
push
cmpsb
aas
pop
loope
fidivl
testl
dec
lcall
ss
fcomps
shll
aam
stc
jo
dec
mov
or
adc
xchg
iret
out
jl
mov
sarl
nop
sti
ret
dec
shrb
icebp
inc
stos
push
add
popf
add
mov
scas
mulb
pushf
out
sub
mov
fcmovnb
push
leave
cmpsb
ljmp
xor
daa
outsb
repnz
mov
mov
fistpll
ficoms
arpl
adc
sahf
in
inc
jmp
sub
add
and
pop
aaa
sarl
je
adc
sbb
pop
jnp
cmp
repnz
or
pop
clc
adc
mov
adc
lea
insl
adc
pop
push
and
adc
pop
xlat
ret
popf
pop
into
or
out
mov
call
sbb
mov
lret
xchg
xor
sahf
int
mov
frstor
xlat
sbb
xor
mov
in
imul
mov
sbb
clc
mov
bound
sti
loope
nop
and
jl
mov
push
ss
jns
inc
mov
sbb
test
stos
sbbb
jb
pop
pusha
or
imul
aas
sub
and
pop
xchg
and
mov
or
cmp
js
scas
or
les
mov
mov
and
mov
stos
cmp
flds
test
adc
int3
js
outsl
mov
pop
jbe
xchg
inc
std
xor
test
jno
out
pop
imul
out
es
call
cmc
inc
push
add
pop
into
xor
dec
imul
stos
jne
jns
xchg
pop
scas
sbb
jmp
das
gs
cli
adc
and
jg
fldenv
sub
test
push
int
mov
out
sub
ds
cwtl
sub
mov
push
push
movsl
pop
jnp
arpl
pop
adc
icebp
rclb
add
mov
xchg
std
stos
subl
add
mov
dec
fs
je
enter
in
pop
fucomip
in
dec
mov
or
push
dec
sti
lea
pop
add
and
sarl
jge
ds
cmp
ret
lcall
sbb
mov
stos
inc
lret
adc
icebp
cmp
mov
inc
xchg
lods
roll
pushf
inc
or
out
cmpsl
xchg
out
testb
fs
push
lret
push
xchg
xlat
mov
pop
or
aas
rorl
fcoms
ret
push
negl
mov
dec
pop
add
sub
test
mov
pusha
stos
loope
or
or
inc
adc
mov
sahf
fldt
push
xchg
xor
imul
fwait
push
pop
push
mov
iret
and
popf
loopne
mov
pop
test
push
push
popf
jp
insb
jecxz
add
stos
dec
gs
pop
mov
int
outsl
adc
inc
leave
popf
pop
outsb
inc
xchg
mov
divl
lret
fstl
push
jne
ljmp
cld
push
sahf
arpl
testb
sub
sbb
fnsave
scas
ds
push
inc
in
and
call
mov
mov
rcrl
dec
in
ret
fucom
pop
sub
repnz
movsb
out
clc
pusha
mov
das
push
cmp
bound
mov
rcl
jne
movsl
xor
cs
movsb
iret
push
cwtl
mov
dec
pushl
ret
adc
and
mov
or
or
cld
mov
push
pop
adc
push
aaa
mov
xor
xlat
add
out
mov
loop
xor
fldl
vmaxsd
into
lcall
in
clc
pop
fsts
lcall
jl
sahf
clc
sub
int3
movsb
and
pop
stc
and
movsl
pop
pop
cmp
data16
mov
sbb
inc
test
or
mov
or
rorl
movsl
pop
mov
inc
call
sbb
in
subb
sbb
jae
int
pop
inc
in
or
pop
ret
fisttps
mov
and
and
outsl
mov
push
jb
mov
pop
shll
insl
idiv
and
lahf
sub
out
or
inc
mov
and
xchg
mov
inc
clc
push
imull
int3
test
sbb
sbb
mov
jg
fidivrl
mov
into
mov
scas
lcall
cld
mov
stos
mov
cs
lcall
lea
push
mov
mov
hlt
mov
sbb
cmp
mov
iret
test
push
test
push
xchg
lret
add
out
pop
jecxz
out
mov
xchg
adc
ss
mov
jmp
cwtl
lahf
shrl
inc
int
stc
adc
and
dec
jecxz
pop
dec
rcll
sbb
notb
iret
sub
inc
push
lea
jbe
insl
adc
outsb
adc
cmpsl
dec
shrb
test
add
lret
popa
int3
ja
mov
mov
orl
out
dec
mov
jecxz
pusha
clc
and
mov
fs
push
jbe
rolb
pop
sbb
pop
leave
cs
adc
jne
xor
or
xor
adc
cmp
aas
dec
push
adc
pushf
jp
pop
adc
idivb
pop
and
test
out
mov
xchg
ret
push
cs
fmulp
pop
in
loopne
push
int3
cs
ret
out
mov
pop
insl
inc
dec
pop
mov
xchg
arpl
jne
ret
sub
adc
imul
push
rclb
outsb
jg
xor
sub
clc
clc
jg
jp
es
and
stos
insb
xchg
or
cmp
enter
jns
je
hlt
mov
mov
add
xchg
jb
mov
cmp
xchg
stc
xor
insb
mov
int3
xchg
loop
xchg
stos
dec
outsb
mov
hlt
cwtl
and
stos
lods
xor
sub
xorl
add
ret
imul
idivb
dec
jne
ds
pop
inc
xchg
lds
xchg
pop
int
in
fldenv
mov
ljmp
rcrl
ds
mov
and
sbb
outsb
enter
lret
add
mov
jmp
mov
jnp
mov
push
cmp
test
xchg
mov
push
mov
jle
imul
sbb
lods
xor
inc
aaa
ljmp
xchg
aaa
or
xchg
arpl
fdiv
jne
or
xchg
fwait
movb
xchg
mov
xchg
popf
inc
mov
add
out
adcb
mov
push
jmp
and
cs
cmp
dec
xchg
in
xchg
bound
dec
ret
or
pop
hlt
sbb
mov
cmp
int
inc
push
rclb
fidivs
lock
roll
mov
mov
aaa
jmp
sub
xchg
ja
sbbl
sub
mov
push
sarb
jecxz
sub
pop
cltd
cld
imul
mov
fisubl
insl
out
push
mov
rclb
mov
ss
lret
les
add
scas
fisubrs
sbb
add
leave
mov
or
xchg
sub
das
cwtl
mov
pcmpeqd
lcall
sub
ret
mov
xchg
das
pop
int3
fisubl
dec
xor
shl
jge
sub
cmp
jne
imul
jmp
in
movsl
push
cmc
out
dec
dec
rolb
dec
fld
adc
scas
test
aad
shlb
ror
cmpsl
clc
mov
ret
xchg
xor
shll
in
imul
insl
sub
mov
inc
push
fisttpl
push
mov
mov
inc
mov
xlat
orb
pushf
rcll
lea
xchg
mov
xchg
sub
lds
fs
and
xchg
jbe
ljmp
lret
adc
out
call
jl
stos
xor
and
and
add
sti
jmp
ficomps
ljmp
ret
xor
icebp
icebp
fcompl
inc
mov
les
add
pop
hlt
cld
data16
adc
pop
pop
pop
dec
push
sub
mov
loopne
cwtl
jnp
dec
stc
cld
lcall
pop
xor
aad
call
xchg
pop
xor
sub
jmp
test
adc
mov
sbbl
int
push
xchg
popa
enter
add
or
ja
inc
xchg
mov
cld
fsubrs
imul
mov
test
sub
lods
push
pop
push
clc
andl
popa
lds
test
and
add
inc
fsub
xor
mov
insb
movsl
xor
cmc
and
sub
xor
setns
addr16
into
insb
add
fwait
adc
enter
and
adc
jp
cmp
imul
add
pop
or
int3
sti
mov
je
mov
xchg
and
nop
cmpb
jae
repz
das
insb
and
cs
iret
mov
jno
jl
inc
mov
xor
arpl
adc
sbb
inc
pop
add
and
mov
aaa
test
jmp
int3
add
mov
cwtl
lcall
int
sahf
aam
xor
xchg
jle
test
jbe
lods
js
xor
ss
pop
mov
pusha
popf
pop
je
int
or
mov
cmp
xchg
mov
test
jne
fisubl
push
stc
imul
lods
push
in
add
mov
cmp
lock
and
adc
cld
mov
int
mov
std
mov
mov
add
and
pop
inc
sub
xor
or
push
iret
gs
lock
hlt
xor
push
jns
mov
mov
xor
aam
or
sub
sarb
cltd
lret
leave
dec
repz
mov
xor
add
cmpsl
xchg
fwait
add
hlt
in
notb
notl
aad
inc
pop
sbb
xor
xor
jp
push
sbb
icebp
aaa
pop
fnsave
arpl
into
ds
or
mov
popf
mov
andl
push
jle
mov
neg
inc
into
ret
jmp
mov
test
xchg
shrl
cmp
lret
into
imul
pushf
jo
dec
push
sbb
add
jle
mull
sbb
stos
push
es
mov
cmp
cmpsl
mov
xchg
pop
stos
ja
or
ss
rcl
mov
jle,pt
lods
sti
jo
in
mov
sbb
in
dec
mov
bound
sbb
xchg
sahf
lahf
mov
dec
sbb
jne
dec
dec
in
mov
lea
xchg
mov
jge
int3
test
adcb
push
push
adc
stc
inc
fs
fwait
push
outsl
fcmovnbe
dec
imul
stos
dec
add
or
or
dec
mov
hlt
cmp
inc
jbe
push
mov
loope
in
popf
and
in
and
cmpb
dec
xor
aad
aaa
popa
push
dec
imul
adc
mov
cmp
push
dec
cmp
popf
jl
fcomip
repnz
xor
lret
shld
rorb
test
dec
push
bound
mov
adc
popa
jnp
test
lea
jnp
leave
fwait
xor
add
into
fadds
add
pop
dec
inc
mov
dec
lods
sbb
pusha
sub
cmp
in
sbb
ja
cmp
jge
push
int
or
jnp
adc
lock
inc
sbb
fsts
mov
dec
xchg
out
xchg
push
das
sub
cmpl
mulb
scas
inc
sub
aad
mov
daa
cmp
je
mov
bound
orl
push
mov
jg
mov
xchg
or
sbb
sbb
pop
add
insl
in
xchg
sbb
and
mov
pop
jb
hlt
int
js
xor
mov
cwtl
sub
lock
mov
xchg
sub
sbb
sub
notl
mov
les
cmp
mov
cs
stos
sub
fisubl
test
lods
je
adc
cld
sbb
lea
inc
push
mov
sbbb
insl
push
fcomp
push
inc
enter
xchg
aaa
cli
mov
test
ss
jo
pop
xor
adc
jo
test
jg
cmpsl
pshufw
jne
adc
jnp
xchg
pop
outsb
mov
rolb
mov
jb
imul
or
mov
in
aas
test
rclb
in
pop
pop
inc
call
mov
mov
mov
jmp
xchg
xchg
dec
movsb
jne
data16
mov
aas
gs
or
bound
cld
xor
inc
cli
int
adc
pop
xchg
dec
mov
fnstsw
xor
mov
jmp
movsl
adc
push
ret
dec
jbe
pusha
fs
mov
xor
leave
mov
es
jmp
push
push
std
add
inc
ljmp
inc
inc
idiv
push
enter
iret
pop
daa
shll
out
lods
xchg
lock
test
fidivrs
xchg
cld
jbe
adc
or
insb
imul
mov
push
xchg
fmull
adc
mov
fistl
jno
pop
andl
lcall
mov
aas
pusha
leave
rorb
xorl
or
pop
jno
xchg
lcall
es
jae
mov
icebp
in
push
dec
das
sbb
jp
sub
sbb
mov
and
or
ret
ja
cmc
mov
pop
repnz
insb
pop
stc
push
rorb
or
repnz
insl
jecxz
lahf
jecxz
and
mov
pop
mov
cmp
dec
mov
or
fdivs
pop
lahf
xorl
mov
lods
pop
shl
pop
loopne
add
dec
xor
jle
pop
arpl
aas
xchg
andl
out
dec
inc
stos
jmp
sub
aaa
cwtl
pop
cld
sbb
call
rcr
or
mov
cmpsb
enter
inc
mov
stos
hlt
int
push
adc
push
out
jge
push
and
fwait
mov
dec
imul
mov
push
xchg
idivl
ret
lock
mov
adc
mov
dec
sbb
xor
adc
xorb
lahf
push
das
xor
sti
loop
pop
pop
mov
into
rcl
and
insb
imul
mov
cwtl
lods
negl
jp
lcall
jg
out
xchg
adc
push
push
int
pop
jo
ret
in
mov
cmp
sbb
mov
ja
andl
and
stos
jl
idivl
inc
out
xchg
sbb
cmp
jecxz
pop
insb
bound
add
lods
sub
pop
scas
scas
aaa
lcall
adc
ljmp
mov
hlt
pop
jl
addb
movsb
add
rorl
inc
lds
icebp
rol
add
addr16
cmp
pop
dec
testb
fsubl
sti
out
stos
icebp
mov
out
incb
cmp
or
pusha
push
repz
repz
push
leave
repnz
xchg
xchg
and
sub
inc
pop
sti
mov
jb
cld
mov
dec
test
jmp
adc
pusha
jbe
setg
lock
popa
push
dec
lret
fmul
icebp
lcall
add
and
mov
push
push
mov
gs
fwait
xlat
dec
bsr
in
out
cld
rorl
test
dec
shrb
divl
ror
out
pop
push
xchg
rolb
or
fisttps
dec
and
inc
mov
mov
rcll
sub
mov
push
dec
mov
in
jg
lock
cmp
lds
and
adc
es
inc
aas
push
sub
loop
xchg
mov
lret
and
pop
jb
pop
nop
repz
fiadds
pop
jecxz
xchg
flds
dec
cld
icebp
dec
dec
xchg
inc
cmp
sub
dec
mov
mov
dec
xor
cmp
xchg
jnp
push
scas
lahf
or
mov
pop
adcb
scas
cmp
and
sbb
inc
mov
mov
dec
push
xchg
and
js
fwait
insl
fdivrp
pop
add
js
das
add
xchg
cli
mov
loop
lea
cltd
movsl
jl
pop
fsubr
xchg
rorb
ret
pop
das
ret
sbb
insb
and
test
mov
enter
cmp
adc
or
xchg
pushf
sub
das
or
aaa
sbb
add
sub
pop
add
popf
dec
push
mov
sub
jmp
jns
and
pusha
cmp
xor
es
imul
filds
cmp
xchg
xchg
mov
inc
leave
fs
mov
fnstsw
scas
hlt
fidivrl
repnz
ljmp
or
int3
mov
and
mov
cmp
inc
jnp
inc
push
cmpsb
jmp
add
sbb
inc
inc
cs
daa
push
cli
add
sub
fisubrs
arpl
iret
fs
cwtl
cld
sub
pop
cwtl
inc
mov
lods
cli
mov
sbb
xchg
test
pop
bound
xor
mov
fcomp
leave
adc
fisubs
dec
out
nop
rcll
xor
nop
mov
mov
and
shlb
in
xchg
cmp
idiv
adc
and
mov
rcll
and
loop
out
jecxz
mov
idiv
jecxz
inc
js
outsb
push
add
jge
stos
insl
dec
outsb
in
jb
pop
aam
in
fcmovbe
loopne
cli
int
or
mov
pop
mov
sahf
jo
mov
or
insb
in
inc
dec
xchg
enter
mov
or
jno
push
test
out
and
mov
dec
push
mov
scas
add
call
pop
adc
cmpsl
pusha
movl
test
or
cs
or
outsl
add
push
cmp
sub
sub
aad
push
nop
arpl
mov
lods
pushf
pop
outsb
jns
lds
pop
in
jb
xlat
fstpl
aas
aam
ficompl
adc
mov
push
xor
iret
xchg
shrb
ret
mov
jl
in
scas
jae
add
lret
jle
cli
cmc
imul
divl
cmp
jne
jnp
add
idiv
insl
enter
fnstsw
add
shrb
xor
daa
js
or
loopne
add
out
cmp
outsl
sub
mov
jmp
add
lcall
lret
sbb
adc
jg
dec
cmc
shl
popf
inc
std
and
jbe
sub
ja
push
dec
pop
std
cmp
pushf
inc
sub
imul
xor
mov
add
dec
cmc
testl
mov
mov
loopne
das
mov
movsb
bound
clc
lret
loop
dec
xlat
jge
bound
sahf
xchg
out
shlb
repnz
sti
mov
push
and
jbe
and
mov
fiadds
pusha
stos
insl
pop
in
mov
jno
pop
xchg
pop
shll
jne
push
out
jle
add
stc
xor
cmp
testl
ss
imul
dec
popa
xchg
push
pop
ret
jmp
sbb
test
mov
mov
mov
imul
sbb
mov
mov
mov
inc
sbb
push
lret
pusha
jns
icebp
push
xchg
dec
ret
in
sub
hlt
and
dec
subl
movb
mov
mov
sub
mov
das
jg
pop
mov
repz
add
in
fmul
add
sbb
repnz
pop
scas
mov
xor
jne
cwtl
insb
pop
movzbl
es
mov
add
xchg
aaa
int3
hlt
fs
adc
sbb
je
leave
outsl
jnp
jnp
sbb
hlt
mov
add
mov
cld
sbb
cmpsl
mov
pusha
pop
jmp
cwtl
insb
popl
stos
add
cmpb
push
mov
cmp
sbb
xorb
xor
mov
add
shl
lcall
dec
and
je
mov
mov
push
test
lods
ja
pop
test
adc
out
jp
fidivrl
push
repnz
inc
test
fwait
imull
mov
push
mov
add
aad
inc
fbstp
loop
outsb
mov
mov
mov
lcall
lret
outsb
cli
dec
jp
jne
sbb
pop
enter
inc
push
add
xchg
dec
push
sub
xchg
mov
sub
fs
pop
in
inc
outsb
fs
nop
fwait
rclb
mov
add
fwait
repz
imulb
ret
pop
into
cmp
lea
push
into
adcb
aaa
or
lret
or
fxch
push
jae
mov
aam
mov
add
sub
mov
js
xchg
sub
sbb
xor
movsb
std
mov
es
mov
outsl
mov
jbe
jecxz
jge
and
in
iret
xchg
fs
es
mov
insb
and
std
aaa
and
push
add
xchg
pop
cmp
in
push
dec
cld
add
shll
aas
pop
sub
mov
imul
aaa
out
push
add
lods
ljmp
mov
jno
and
movsb
int3
lock
ret
push
test
dec
sub
mov
mov
pop
cmp
icebp
sub
mov
xchg
out
loop
int
mov
inc
cmpsl
push
pop
ja
pop
push
add
out
iret
lods
or
pop
mov
push
or
jl
jae
pop
fisubrl
push
push
in
dec
sbb
cmp
in
push
xor
cld
sub
and
ret
dec
scas
daa
into
pop
cmp
movsb
and
push
gs
mov
test
shrl
sub
imul
gs
xlat
xchg
mov
mov
dec
jecxz
call
pop
lods
out
sbbl
push
pop
mov
mov
in
sbb
dec
sbb
xor
sti
nop
mov
sub
push
mov
lods
test
pop
jge
pop
jle
andl
test
mov
jp
mov
lcall
lock
adcb
push
in
push
sbb
sbb
rorb
jb
add
out
pop
mov
inc
and
inc
lcall
sub
lea
mov
dec
outsb
jecxz
fcmovne
sub
push
ss
xor
ret
and
aam
in
pop
outsb
loopne
pushf
mov
repnz
add
or
pop
pop
mov
out
inc
pop
ficoml
roll
subl
inc
xor
or
cmp
imul
xorl
jge
outsl
sub
shll
dec
pop
add
pop
iret
push
push
cmp
and
insl
sahf
and
into
cmovp
mov
std
daa
fsubrs
push
out
jno
xchg
repz
push
js
lea
data16
lods
pop
mov
xchg
push
fcoml
push
adc
bound
fcmovnu
ljmp
pop
cmp
dec
mov
adc
xlat
mov
dec
in
cli
lahf
inc
es
xchg
loop
test
adc
inc
cmp
and
subl
mov
xchg
out
jle
pop
xchg
pop
or
mov
movsb
dec
lcall
filds
mov
push
mov
xchg
mov
ss
sbb
jg
cmp
inc
add
icebp
adc
ret
test
xlat
pop
jo
xchg
mov
push
add
mov
out
outsb
mov
mov
and
mov
jb
jecxz
pop
fmuls
dec
les
aad
xchg
push
cs
add
sub
shlb
aad
lahf
xchg
jnp
jae
mov
cs
std
mov
mov
sarb
scas
xlat
sub
mov
cmc
ss
jecxz
xchg
xchg
aaa
loopne
xchg
push
hlt
enter
out
cltd
push
push
rcll
push
xchg
and
jl
mov
testl
pop
mov
xchg
pop
lods
push
mov
dec
add
adc
mov
push
shlb
leave
pop
fbld
or
jno
sub
cmp
or
xor
jge
sar
aad
adcl
jg
and
xor
nop
dec
sub
test
in
sti
jge
inc
inc
inc
mov
rcrl
ljmp
jb
and
pop
dec
lcall
push
jp
mov
push
pushf
je
pop
int
cltd
or
cli
inc
pop
xor
repnz
pop
xor
call
shll
adc
mov
cltd
fwait
xchg
clc
add
mov
mov
stos
sbb
fimull
shrb
pusha
pop
push
inc
dec
xchg
out
sub
cmp
lahf
inc
and
ja
inc
scas
popf
outsl
rcr
sbb
add
sub
cmp
add
mov
sub
lods
push
mov
pop
xor
jns
jmp
lds
xchg
negl
xor
mov
shrb
mov
and
shll
cmc
nop
jecxz
push
pop
xchg
adc
inc
lcall
enter
out
fcoml
mov
mov
mov
ljmp
cmp
fstps
jmp
lcall
in
push
jecxz
test
or
or
pop
mov
scas
mov
std
inc
insb
sbb
aam
lds
hlt
inc
pushf
mov
rorl
sbb
outsl
out
mov
stos
loop
pop
and
fwait
add
loopne
push
lret
andps
inc
outsb
or
or
stos
insb
mov
jp
or
cmp
add
cltd
lret
sub
fwait
pusha
or
scas
test
jmp
and
push
lcall
decl
cmp
inc
sub
js
je
mov
mov
xchg
pop
fisubl
sarb
cltd
mov
dec
dec
xchg
jp
loop
bswap
mov
in
adc
fs
leave
cmp
bnd
inc
cmp
mov
and
fwait
or
pop
test
push
add
and
add
mov
inc
fisttpl
aas
jl
mov
cs
dec
lock
ds
pop
mov
pop
mulb
dec
out
nop
mov
in
xchg
sbb
mov
adc
in
and
jp
out
jp
dec
mov
push
fwait
aad
inc
inc
imul
add
cmp
mov
or
pusha
pop
popf
sbb
repnz
or
sbb
aaa
repz
sub
xchg
mov
sub
lret
jo
aaa
mov
xor
insb
mov
and
xchg
ljmp
aam
or
push
lock
adc
mov
inc
lods
inc
movsb
pop
cmp
rclb
cmp
xorb
orl
dec
mov
or
mov
add
mov
push
in
insb
mov
negl
in
pop
es
mov
dec
stc
out
fwait
dec
push
jnp
inc
and
loope
imul
dec
push
or
sub
push
fs
add
xor
mov
dec
mov
and
pop
cmp
testl
push
into
jmp
mov
pop
push
lods
xor
icebp
push
xor
dec
lcall
loop
hlt
fiaddl
jl
arpl
lea
lock
lret
inc
ds
inc
js
adc
cmp
xor
movsl
loope
lods
int
es
push
adc
mov
je
jbe
lret
das
jl
xchg
popa
pushf
push
jle
pushf
pop
jae
mov
sbb
lea
das
bound
inc
pop
or
insb
ficoml
and
xchg
out
jle
jae
mov
out
lret
dec
sub
add
xor
iret
mov
aad
jne
stc
jle
mov
inc
cwtl
lods
sbb
mov
imul
jne
repz
ret
push
cmc
jae
adc
xor
neg
pop
repnz
nop
movsl
mull
xor
test
and
fldl
rcl
fisttpll
mov
data16
lea
push
jge
mov
push
daa
js
adc
mov
aam
enter
repnz
lea
cli
cmp
sub
adcb
loope
fimuls
ds
cmc
es
jno
ja
push
dec
arpl
xchg
cwtl
pop
sub
xchg
es
cmp
pop
popa
dec
cli
jg
sarb
in
outsb
push
loop
push
dec
das
inc
lahf
popf
arpl
pcmpeqd
push
xchg
insl
andl
xchg
push
jns
fimull
sahf
push
add
icebp
add
ficompl
or
jge
or
insl
adc
xor
xchg
ja
add
cs
lcall
pop
popf
xor
popf
popa
sbb
push
mov
jb
aad
dec
mov
sbbl
mov
push
and
mov
fisubrs
cltd
or
in
in
add
repz
orb
pop
sbbb
add
jecxz
setge
enter
dec
dec
shr
cltd
test
lods
add
in
pop
or
insb
jae
jecxz
mov
aam
int
xchg
jnp
pop
inc
aam
sahf
cmp
adc
icebp
movsl
ret
aas
add
pushf
push
out
jl
mov
lcall
pusha
push
loop
inc
cmpsb
test
or
aam
pusha
lsl
xchg
jbe
inc
testb
dec
jns
aad
jp
add
add
push
add
adc
fcompl
add
pop
mov
pusha
out
pushf
fldenv
jne
cli
test
or
mov
mov
mov
loope
or
xor
sub
in
and
push
xor
sub
rol
cmp
lahf
sub
lds
xchg
xchg
xchg
push
leave
rcl
xchg
notb
mov
mov
loope
xor
sub
outsb
xor
scas
dec
test
daa
aam
push
adc
inc
xor
sbb
sbb
mov
adc
cmove
xchg
jg
xor
pop
jmp
stos
mov
dec
cmp
cmc
xchg
and
adc
dec
or
jns
mov
lret
fucomi
cmpsb
imul
out
or
cmpsb
sub
call
or
fwait
and
adc
dec
mov
mov
adc
rorl
imul
xchg
insb
sub
shrb
nop
js
lods
enter
adc
jle
mov
iret
aam
push
daa
mov
push
pushf
adc
push
pop
cli
fisubl
mov
jmp
mov
nop
pop
xchg
test
xchg
sub
ret
fwait
cmc
repz
adcb
loopne
lret
loop
mov
les
movsb
ret
das
sbb
mov
scas
pop
inc
pop
add
or
mov
int
ljmp
mov
mov
jno
in
jb
scas
imul
dec
je
mov
lods
dec
divb
loop
shrl
xorb
sub
sub
test
inc
cmp
cmc
cmp
outsb
pop
fidivrl
xor
pop
mov
xchg
push
or
pop
loopne
lods
add
pushf
orb
pop
jle
fnstcw
sahf
popf
enter
add
pop
sbb
fs
stos
cld
lock
andl
pop
lods
and
fmuls
test
scas
in
inc
sahf
das
mov
sub
dec
lods
not
sub
int
shll
pop
shll
or
js
jp
xchg
aad
mov
sbb
xchg
je
inc
es
jbe
clc
pop
movsl
cmp
xchg
mov
or
movsb
dec
sbb
and
fstps
pop
inc
or
in
aam
jbe
cltd
mov
repnz
adc
or
xchg
outsl
mov
iret
add
push
push
push
push
cmp
int3
daa
sbb
pop
mov
int3
and
adc
bound
jl
inc
aad
xor
push
add
gs
and
inc
push
loope
shll
shrb
out
pop
mov
xchg
jnp
xchg
mov
andb
xchg
and
js
or
subb
cmc
inc
fwait
icebp
inc
cld
imulb
cmovne
cltd
add
xchg
movsb
mov
jmp
popf
or
add
sub
dec
dec
jmp
movsb
in
clc
xor
add
test
push
inc
mov
cltd
cwtl
test
outsb
dec
inc
nop
xlat
scas
push
xchg
jne
add
cmp
std
xchg
rolb
sbb
ret
movsl
mov
dec
mov
mov
xchg
mov
adc
jne
or
adc
xor
lret
dec
mov
push
pop
dec
push
pop
por
mov
jno
mov
inc
mov
pop
cmpsl
mov
mov
clc
sti
into
and
frstor
sar
jmp
movsl
das
mov
cmp
pop
ljmp
mov
pop
xchg
hlt
lcall
pusha
or
push
pop
outsb
xchg
xor
mov
sahf
push
ja
jne
mov
sarl
fwait
insl
jmp
in
lcall
leave
clc
sub
push
jne
inc
lds
add
dec
jmp
loop
add
jecxz
into
jne
pop
pop
fisttps
fwait
out
mov
mov
sub
dec
xchg
aad
mov
movsl
sub
pop
xchg
cmp
pop
cmp
mov
cmp
dec
incl
std
mov
sbb
cld
add
loopne
pop
xchg
ljmp
pushf
xchg
das
or
xor
testb
insb
pusha
sbb
push
pop
shlb
fstpt
mov
lea
push
sbb
adc
xor
aas
dec
jns
mov
pop
or
pop
sub
jae
jecxz
jmp
dec
mov
aam
mov
in
loopne
fidivrs
sahf
pop
xor
shrb
pop
adc
daa
lahf
outsb
imul
outsl
and
push
addr16
and
cmpsl
jmp
push
mov
xlat
inc
add
mov
rcrl
leave
and
add
aaa
adc
cmp
mov
or
lret
movsl
pop
or
cmp
xchg
sbb
and
je
adc
jle
adc
test
mov
les
movl
out
pop
and
out
mov
jge
cld
pop
pop
testb
push
mov
mov
subb
push
cmp
add
inc
int
sbb
sub
adc
xchg
aad
dec
cwtl
or
fsubl
mov
aad
scas
or
sbb
insl
inc
pop
movsl
or
add
xchg
adc
lahf
clc
out
decb
mov
out
outsl
xchg
pusha
leave
xchg
push
push
jb
cmp
xchg
push
dec
cmp
nop
lret
dec
or
push
jae
outsl
paddw
in
sbb
xor
inc
out
outsb
rcr
enter
xchg
out
pop
mov
iret
pop
outsb
stos
dec
lret
xor
frstor
jbe
mov
mov
stc
jl
pop
or
andb
mov
lods
mov
jle
push
fisubl
clc
test
mov
mov
sti
and
push
clc
pop
cmp
mov
sbb
jg
imul
xor
inc
push
mov
add
stos
mov
sbb
into
out
xchg
leave
das
and
xor
mov
ja
or
cmp
add
fidivl
inc
xchg
pop
hlt
mov
aas
xchg
or
mov
js
jle
xor
mov
push
push
and
out
dec
sti
adc
mov
and
data16
pop
cli
jle
inc
and
fsts
sub
nop
push
add
pop
cmp
lock
mov
mov
sub
sti
bound
push
testl
add
repz
shl
out
mov
jl
int
nop
in
mov
out
idivl
lods
lret
mov
and
xor
leave
je
jg
mov
cld
xchg
pusha
pop
cmpsb
push
fs
cmpsb
lcall
setle
push
fmuls
inc
push
push
cmpb
or
xchg
dec
sub
add
or
das
rcr
xorb
mov
sub
icebp
bound
sbb
loop
ss
divl
ja
cmp
jno
sarl
addr16
aaa
gs
jbe
lea
xchg
hlt
add
pop
dec
inc
rcr
cmpsb
jg
sbb
push
push
push
jne
push
jbe
stos
icebp
add
mov
inc
ds
sti
es
aad
fs
lods
jp
inc
lret
mov
data16
sbb
fdivrl
popf
adc
pop
fs
pop
stos
cmp
sub
bound
cli
fbld
aaa
cwtl
test
xorl
and
imull
pop
int
hlt
and
jp
mov
cltd
xchg
push
pusha
fs
or
mov
push
cmpsl
or
sahf
loope
mov
mov
cltd
and
adc
pop
leave
adc
nop
roll
insb
dec
outsl
cld
ret
xchg
push
jle
jp
cltd
sbb
push
icebp
jbe
cmp
add
call
jb
das
fimull
push
loope,pn
pusha
mov
inc
add
repz
cmp
or
repnz
xor
mov
sub
sub
add
dec
and
not
inc
push
xchg
cmp
cmp
sbb
cmp
xchg
sbb
jg
rclb
in
in
pop
ret
mov
xchg
sahf
mov
ret
sub
mov
int
dec
mov
mov
jecxz
popf
adc
push
mov
cmc
xchg
xor
pop
dec
inc
jmp
or
inc
add
dec
inc
ss
js
mov
and
ret
inc
insl
sarl
fcmovne
aaa
xchg
popa
bound
mov
sbb
fists
cmc
mov
and
rcll
pop
clc
inc
fbld
inc
aas
daa
test
pop
scas
jge
xchg
push
jge
xchg
aad
push
outsl
xor
cld
shrb
or
lahf
cmp
cwtl
ret
mov
fidivrs
xor
fisubs
cmpsl
aad
pop
shl
fucomi
xor
out
rcrl
xchg
mov
jge
push
dec
pop
enter
add
push
int3
pushf
es
std
insb
shr
and
repnz
cmp
ljmp
xlat
mov
push
outsl
das
push
in
sub
sbb
cmp
sub
cmpsl
mov
dec
mov
cmp
fldcw
or
bound
aas
orl
xchg
pop
cmp
jge
dec
pop
mov
inc
cmp
mov
mov
jo
stc
dec
pop
cmp
call
inc
sti
pushf
es
jg
scas
mov
push
test
push
stc
sbb
or
pushf
dec
sbb
lods
ss
movsb
mov
xchg
and
fstpl
xchg
iret
push
push
cld
sub
int3
mov
repnz
dec
pop
outsb
orb
or
bnd
insl
notb
jns
aaa
and
mov
add
sbb
test
adc
push
adc
jp
push
or
mov
or
jnp
mov
mov
fcomps
push
xor
aam
imul
test
addr16
fwait
xchg
add
mov
sti
cltd
mov
ss
pushf
and
and
lcall
and
std
adc
xchg
ds
pop
xchg
adc
mov
xor
sub
pop
jbe
xor
mov
test
mov
std
add
or
mov
ss
in
dec
pop
repnz
jnp
jns
or
lret
ret
jg
inc
decl
push
jb
out
xchg
mov
pop
adc
mov
xor
mov
inc
negb
xchg
push
cld
test
aam
xchg
cmpsl
pop
push
jbe
lock
xchg
add
fidivrl
into
mov
insb
loopne
pop
adc
lods
aad
insb
mov
imul
jo
jns
pop
jle
mov
rcl
push
pop
call
mov
add
jg
fs
cltd
enter
push
xor
inc
in
hlt
dec
inc
andb
cmp
into
js
pop
push
dec
mov
test
cmc
fisttpl
mov
fidivl
fimull
loopne
imul
lea
sbb
in
mov
jnp
jbe
mov
and
addl
ficompl
mov
lret
ror
xlat
or
ja
dec
aas
sbb
xchg
aas
sarb
unpcklps
les
pop
pop
pushf
sbb
mov
loopne
arpl
adcb
mov
rcl
je
xchg
repz
push
test
push
mov
xchg
mov
fadds
leave
pop
jno
out
xor
add
inc
jge
xchg
in
jnp
mov
cwtl
andl
mov
fs
or
sarb
movsb
push
and
insb
and
xchg
mov
stos
dec
sub
jnp
test
jp
lcall
mov
movl
sub
nop
lret
mulps
sahf
idivl
add
cwtl
les
sahf
scas
iret
xchg
movsl
adc
fdivrl
mov
outsb
stc
jle
popf
dec
inc
sub
mov
ss
cmpl
jmp
jo
ds
xchg
push
pop
in
test
push
cmp
mov
jo
or
inc
pop
xchg
mov
cwtl
insb
roll
in
mov
jmp
fstpl
test
xchg
cmp
fcomps
mov
push
repnz
dec
imul
lcallw
cmpsl
mov
test
mov
adc
ret
mov
cmc
cmp
mov
dec
and
scas
leave
in
scas
jmp
mov
subb
repz
jns
je
dec
ret
mov
xchg
jne
hlt
sbb
mov
inc
movsl
shl
jo
push
lea
mov
cmpsl
cmp
pop
pop
movsl
adc
in
fadds
fs
in
int
jmp
dec
pop
dec
fldenv
stc
fcmovnu
add
push
and
rcll
pop
jns
mov
pop
jmp
popa
in
push
shl
call
pop
shll
xchg
push
dec
mulb
movsb
stc
and
push
or
fists
arpl
fs
push
in
into
dec
dec
idivb
in
fsubrp
xor
jb
mov
icebp
shl
push
jl
stc
loop
sbb
stos
adc
in
xor
jg
ret
mov
dec
or
sti
cmp
push
ret
idivl
movsl
outsl
mov
outsb
pop
lock
pop
movsb
mov
lcall
out
adc
mov
dec
or
push
cli
jno
pop
daa
aam
add
mov
sbb
stc
test
xor
das
cmp
pop
sub
repnz
cltd
ret
out
mov
pop
insb
jl
inc
inc
add
sbb
cmp
ffree
push
add
xor
mov
push
outsl
ds
and
scas
rcll
or
lret
into
adc
out
push
xchg
or
xchg
push
mov
mov
cmp
sub
add
popf
add
and
push
fnstenv
out
mov
shll
jp
jnp
sub
dec
mov
mov
test
pop
dec
repz
fwait
sbb
setno
dec
pop
push
push
mov
rcrb
stc
ljmp
lret
add
and
xor
stc
mov
stos
and
iret
mov
push
mov
mov
andl
jns
sbb
leave
mov
adc
xor
sbb
call
mov
lret
scas
or
push
addl
inc
sub
sbb
aaa
out
insl
adc
rorb
xchg
add
in
ficomps
fnstsw
xor
xor
push
je
or
pop
inc
cld
xor
stos
mov
mov
push
popa
pop
dec
aam
xor
cmp
jp
jnp
mov
roll
outsb
lods
xchg
lret
pop
inc
mov
or
addr16
jl
lret
scas
mov
mov
cmp
add
mov
mov
jne
push
jbe
loopne
dec
repz
fcmovbe
out
adc
movb
test
cs
jg
jge
imul
das
mov
pushf
push
aas
mov
loope
lea
push
dec
add
imul
lahf
and
add
in
cwtl
cmpsl
aam
pop
pop
ret
jmp
jle
push
mov
shlb
out
sbb
cmp
push
imul
in
fadd
movsb
ficompl
test
jbe
mov
cmp
lahf
fisubl
mov
mov
inc
push
fadds
push
dec
fnstsw
mov
and
dec
icebp
and
movsl
jbe
arpl
mov
and
adc
sarb
xchg
out
or
scas
insb
es
xor
or
pop
leave
pushf
mov
outsb
cmp
loopne
repnz
out
xor
inc
xchg
out
stc
ficoms
xor
mov
sti
fdivrp
cmp
push
lahf
bound
xor
rclb
mov
xor
mov
arpl
addr16
jno
mov
pop
pop
sbb
dec
sub
mov
sub
out
aam
fidivrs
cmpsb
dec
loope
push
push
lods
jp
add
cli
in
and
ret
sbb
mov
.byte
