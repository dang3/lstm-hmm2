add
add
add
add
addb
add
js
add
test
add
sbb
add
pop
add
addb
add
push
xchg
cmp
add
add
add
add
add
add
add
push
xchg
cmp
add
add
add
add
add
add
add
rclb
add
test
add
push
xchg
cmp
add
add
add
add
sldt
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
addb
addb
add
push
xchg
cmp
add
add
add
add
add
add
add
add
add
addb
add
xchg
cmp
add
add
add
add
add
add
add
add
and
add
add
add
xchg
cmp
add
add
add
add
add
add
add
add
and
add
push
xchg
cmp
add
add
add
add
add
add
add
cmp
add
xchg
add
add
xchg
cmp
add
add
add
add
add
add
add
shrb
add
pop
add
add
xchg
cmp
add
add
add
add
add
add
add
addb
add
xchg
cmp
add
add
add
add
add
andb
add
push
xchg
cmp
add
add
add
add
add
add
add
add
add
push
xchg
cmp
add
add
add
add
add
add
add
add
add
push
xchg
cmp
add
add
add
add
add
addb
add
push
xchg
cmp
add
add
add
add
add
add
add
shlb
add
adc
add
push
xchg
cmp
add
add
add
add
add
add
add
push
xchg
cmp
add
add
add
add
add
add
bound
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
int3
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
cmp
add
aas
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
jns
inc
add
add
and
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
jns
inc
add
add
add
outsl
add
insl
add
add
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
jns
inc
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
jns
inc
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
shl
push
cs
inc
push
mov
pop
out
push
ljmp
jecxz
dec
push
sub
fisttps
pop
test
adcb
js
das
hlt
sub
fistpl
jle
jne
cmp
bswap
xchg
adc
add
repz
aaa
rcrb
adc
xchg
jno
cmp
adc
mov
icebp
xor
shll
push
sbb
mov
loop
xchg
sti
mov
movl
mov
fldl
push
movsl
cmpsl
inc
and
daa
subl
rcr
fsubl
dec
popa
scas
mov
pop
mov
and
jecxz
mov
sub
dec
dec
push
ret
cltd
std
fisttpll
inc
call
fcompl
pop
in
mov
ja
push
pushf
fdivr
push
aam
fs
rorb
push
mov
in
jae
add
lds
sub
int
les
fidivs
push
out
call
repnz
mov
ljmp
fcmovb
fadds
pop
outsl
fcoms
sti
rclb
testb
fcos
in
jbe
inc
inc
nop
adc
ss
push
mov
lahf
xchg
cli
push
leave
popa
xor
adc
shrb
pop
push
fisubrs
sti
pop
or
xchg
adc
push
shr
push
lahf
pop
lcall
jo
mov
pop
nop
fimull
mov
xchg
jl
push
cld
jns
shlb
push
pop
xchg
out
dec
jae
test
xchg
xchg
mov
jle
xchg
mov
sar
jne
std
mov
inc
je
xchg
sbb
rcrl
inc
loop
mov
mov
xchg
xchg
mov
into
cmp
jbe
icebp
cmc
push
jge
pop
in
sbb
out
scas
fists
pop
mov
ficompl
ds
or
dec
fs
bnd
pusha
sbb
inc
imul
or
outsl
inc
push
sbb
mov
js
pusha
xor
iret
outsb
in
jle
or
xchg
inc
sub
pop
sbb
in
push
mov
sarl
hlt
jne
scas
mov
hlt
adc
mov
lahf
push
orb
test
je
ja
add
pop
lock
lcall
aam
or
les
sbb
cmp
iret
lret
mov
ljmp
mov
test
sahf
add
mov
sub
sub
imul
mov
and
or
push
add
sbb
popa
das
dec
clc
stos
enter
dec
loope
push
jge
mov
shrl
sub
mov
xor
jae
mov
mov
mov
pop
push
lcall
mov
repz
push
jl
out
dec
jo
xorb
mov
leave
lret
xchg
jg
sub
daa
aas
mov
mov
mov
sub
mov
sub
ja
mov
pop
je
faddl
popf
inc
jge
push
pcmpeqd
movsb
mov
lret
das
fwait
xor
cmp
sbb
sub
mov
inc
xor
push
mov
and
dec
jmp
mov
mov
test
stc
or
notl
jle
sub
inc
in
ficoml
sbb
push
outsb
sysexit
lds
out
in
push
movsb
mov
or
adc
mov
push
mov
out
and
cli
test
jg
scas
mov
cli
cmpsl
xor
cwtl
inc
xor
mov
jmp
jnp
cmp
pop
push
add
in
lea
jg
cli
mov
mov
rolb
mov
lahf
sahf
mov
xchg
sbb
add
jg
out
xor
jae
xorl
adc
aaa
std
mov
xlat
pop
ss
xor
and
push
js
xchg
xchg
mov
notl
pop
loop
pop
sub
adc
fsubs
mul
inc
xchg
cmp
xor
stos
imul
pop
jns
icebp
or
cltd
stos
sarb
in
xlat
loop
dec
xchg
pop
icebp
xor
mov
lods
stos
pushf
pmaxub
and
movsl
and
inc
loope
dec
add
sub
cld
xchg
dec
push
or
add
mov
rcll
xchg
push
adc
sbb
push
mov
cmpb
cmpsl
xchg
movsl
cs
loop
rorb
test
adc
lods
push
ret
jge
ja
push
xor
sbb
into
sub
lock
mov
mov
sahf
mov
or
push
pop
in
add
cli
cmp
mov
sub
add
fistl
cmpsb
rcrb
mov
divl
in
int
lret
jp
inc
push
insl
mov
xchg
jns
sti
mov
sub
and
mov
movsb
test
ljmp
jmp
mov
mov
and
cwtl
bnd
mov
sub
icebp
jecxz
mov
xchg
mov
and
push
pop
push
loopne
movsb
pop
sub
and
jmp
or
add
clc
mov
pushf
fisubrl
in
pop
test
cld
test
mov
xchg
rcl
pop
andb
fwait
push
cmp
ret
jg
xorb
pop
loopne
mov
jle
adc
xor
cli
mov
mov
push
jno
pop
repz
mul
scas
stc
jae
imul
cmpsb
dec
jmp
mov
in
cmp
into
ja
pop
xor
out
imul
inc
dec
mov
mov
stos
mov
xor
sub
jb
cld
cmp
lret
shll
add
pop
outsl
call
ss
xchg
xlat
or
psubsw
subl
inc
and
or
sahf
mov
mov
rcr
loopne
lret
test
mov
push
pop
or
sbb
arpl
pop
data16
jmp
xor
movb
cmp
and
sub
rcrl
aad
or
lds
add
ja
adc
into
ret
ret
dec
xchg
std
mov
cltd
adcl
sti
outsl
inc
jns
sbb
xor
lret
inc
out
push
jae
inc
jge
mov
sub
mov
pop
mov
stos
push
outsb
daa
lods
outsb
push
rclb
je
dec
repnz
mov
cld
popf
and
xor
jecxz
inc
add
cmp
mov
mov
push
dec
add
ret
fidivs
jae
jl
stc
cmp
push
dec
pushf
inc
jb
inc
and
jg
lods
adc
or
inc
and
mov
mov
mov
mov
mov
arpl
jmp
cmp
ja
cmp
test
dec
push
xor
orl
mov
in
mov
mov
mov
clc
xchg
pop
in
dec
stos
push
clc
adc
push
fisttpll
push
jmp
loope,pt
push
int3
xchg
mov
dec
mov
and
jl
shrl
mov
add
cltd
imul
into
add
sbb
xchg
mov
testb
dec
fidivs
aaa
sbb
jo
inc
xor
ds
orl
pop
cmp
and
stos
rcrb
es
jecxz,pt
or
aam
enter
push
lret
mov
fisubs
iret
ret
or
shll
cltd
mov
mov
pop
cwtl
push
mov
add
fisttps
shrb
aaa
pop
fmull
out
rcl
addb
cwtl
aad
lds
sbb
pop
xor
xchg
mov
insb
loopne
sub
pushf
add
mov
repz
or
dec
or
inc
into
jl
lds
xchg
add
mov
mov
jnp
ljmp
lods
fidivs
mov
enter
mov
sub
xor
mov
mov
sbb
stos
cmp
ret
fildl
cmp
dec
sub
hlt
jnp
or
push
cmp
mov
mov
fucomip
lahf
jg
fsubs
xlat
push
cmp
jg
pop
loope
and
enter
fnsave
out
xlat
in
insb
sub
pop
rcrl
jno
in
add
lds
pop
sub
mov
sub
jg
mov
ret
and
sbb
push
cmp
sub
das
add
push
sbb
fadd
in
sbb
mov
mov
and
ret
xor
popf
lods
movsb
xchg
xor
shl
cli
jb
and
lret
sahf
sti
fimull
bound
dec
fmul
inc
js
pop
push
fcoml
ret
adc
ror
inc
cmc
sar
daa
test
adc
and
push
xor
push
and
into
mov
jb
ljmp
xor
mov
test
rcrb
gs
bound
jmp
daa
in
mov
in
xor
dec
and
cmc
imul
or
mov
jle
test
xor
sarb
mov
pusha
das
mov
adc
loopne
aam
ja
loop
pop
sbb
ud1
ret
lret
ret
popf
add
mov
sub
icebp
je
int3
into
adc
cmp
or
xlat
cltd
stc
imul
std
prefetch
aaa
andl
aad
in
inc
cmc
shlb
mov
insl
mov
sbb
lods
jg
ja
sub
xchg
das
jle
inc
ljmp
outsl
push
pop
out
mov
mov
test
jp
testl
addr16
lea
ficomps
dec
out
lahf
lret
ret
mov
int3
or
icebp
sub
dec
dec
stc
mov
xchg
inc
xchg
test
xchg
add
mov
push
and
fsub
js
mov
test
xchg
out
cmp
rcll
xor
or
push
vhsubps
push
xor
aas
sbb
clc
sub
xor
in
and
lret
imul
jae
inc
leave
shlb
jecxz
in
mov
jnp
pop
cmpsl
clc
lret
test
xor
daa
xchg
sbb
push
repnz
movsb
repnz
sbb
or
test
pusha
sub
push
mov
out
bound
outsb
push
arpl
out
test
fisttpl
xchg
mov
add
push
lahf
rcrb
std
aad
pop
push
jno
mov
mov
flds
or
out
pop
call
or
stc
int
xchg
push
jno
aaa
and
push
ret
pusha
cmp
fldcw
or
pop
push
mov
nop
loope
shl
ljmp
dec
push
jns
in
push
cmp
lret
pushf
inc
cld
sub
outsl
scas
xchg
cmp
sbb
insb
imul
out
mov
test
xchg
dec
and
outsb
adc
aam
scas
loopne
scas
or
fdivr
call
add
imul
dec
push
cli
out
push
pop
dec
jo
jns
js
fidivs
outsl
sahf
mov
pop
lods
xlat
mov
cmp
pop
add
stos
enter
popf
add
pop
arpl
xor
fs
scas
mov
imul
movsb
scas
int3
aad
sub
mov
testb
into
data16
insl
push
mov
ds
cltd
lahf
ret
iret
jns
icebp
nop
loop
data16
sbb
or
sahf
adc
mov
not
mov
jge
dec
mov
pop
dec
push
out
std
push
add
xor
lds
mov
cmp
sub
jge
cmp
lret
nop
push
fistpll
cli
push
cmp
das
ret
test
cs
mov
add
jno
pop
sbb
orl
cmp
mov
enter
xor
push
call
and
movsl
dec
push
fcmovnb
or
movsl
cmpsl
adc
xchg
cld
movsl
inc
pusha
mov
pop
fwait
jecxz
andl
aas
pop
mov
push
pop
ret
xor
in
inc
or
dec
sub
mov
dec
push
das
xor
sarl
sub
sbb
push
sbb
pop
clc
add
push
dec
or
in
insb
or
add
dec
sub
ret
xchg
cmovo
test
mov
xor
pop
ror
rcr
pop
les
push
mov
push
pop
or
jns
cmp
fsubrl
mov
add
js
or
cmp
outsb
xor
pop
inc
aaa
cmp
mov
imul
dec
mov
insb
mov
sbbl
lods
das
cld
mov
xchg
mov
sbbl
mov
jae
xchg
hlt
cmp
add
cmp
loope,pn
mov
loopne
imul
jle
jl
jmp
push
mov
jmp
lcall
cmp
sbb
and
mov
cs
in
shrb
insl
je
out
xchg
fldenv
mov
adc
fucomip
push
and
and
dec
mov
icebp
inc
push
test
mov
fidivrs
sarb
jecxz
pop
push
lods
pop
xorb
cs
dec
jns
mov
and
jb
lock
push
sbb
mov
mov
sub
sahf
inc
jmp
add
in
mov
fstl
outsb
adc
cmc
test
xchg
push
push
mov
sbb
jp
out
and
popf
clc
nop
adc
out
das
aas
mov
dec
mov
sti
jp
int3
dec
cli
xchg
cltd
into
jbe
cld
jmp
out
or
adc
xchg
in
jnp
inc
repz
or
cs
push
cmpl
add
testb
push
ret
and
inc
or
inc
pop
jecxz
orl
mov
push
xor
bound
cmp
stc
jbe
ret
icebp
mov
mov
sub
pop
movsb
daa
loop
push
mov
int3
xchg
divb
fisubl
hlt
subb
gs
outsl
leave
adcb
sbb
imul
loope
mov
adc
jne
or
stos
sahf
jnp
push
push
bound
in
push
dec
mov
jg
fwait
push
mov
cmp
inc
sahf
jmp
lret
lret
int3
cmp
mov
jg
push
daa
pop
out
xor
stc
fs
xor
pop
or
adc
punpcklwd
xchg
stos
dec
mov
xor
in
push
ja
call
dec
or
or
sti
jmp
lret
mov
cmp
outsb
sbb
or
push
pop
mov
adc
imul
arpl
dec
mov
mov
lcall
imul
movsb
adc
insb
repz
sbb
push
ret
loopne
movsl
jge
out
pop
cmpsl
in
testl
std
outsb
ss
sub
insl
out
lahf
enter
pop
adc
push
lods
mov
or
stos
test
lret
xchg
and
popa
in
repz
xchg
sti
lock
inc
mov
lock
sub
xchg
xchg
xchg
stc
mov
in
xchg
add
or
dec
jg
aad
es
adcb
cmp
out
call
lret
adc
sahf
inc
iret
cmp
lahf
mov
cmpsl
fists
mov
add
in
jmp
push
fcoml
daa
dec
sbb
adc
testl
in
loope
insb
jge
rcr
dec
xor
pop
push
sub
or
jae
lods
jbe
mov
adc
sbb
in
push
adc
dec
int
repz
popa
cmpsl
jl
jle
pop
and
mov
insb
jl
iret
testl
je
insb
dec
jae
les
cli
imul
push
pop
xchg
cld
adc
pop
int3
nop
movsb
clc
mov
inc
lret
shll
jnp
sahf
or
fadds
fdivrl
out
inc
xchg
mov
push
sub
jb
repnz
scas
lds
jle
cmp
mov
inc
xchg
popf
jo
leave
pop
jno
js
dec
orl
inc
enter
add
mov
xchg
imul
adc
gs
cmp
adc
repz
xchg
mov
inc
add
xchg
pop
ljmp
cmp
aas
je
fcmovne
mov
pop
test
mov
ret
add
outsl
dec
arpl
jae
test
inc
in
lea
lret
lret
out
push
inc
ljmp
mulb
xchg
rcll
jo
outsl
stc
sub
rcl
int3
push
and
add
jnp
movsb
mov
ljmp
xor
mov
sbb
cmp
mov
push
dec
or
ljmp
jns
aam
inc
stos
and
fs
pop
call
ret
nop
add
loopne
or
aas
in
mov
daa
daa
xchg
popf
cmp
orb
out
test
outsl
xor
data16
icebp
jnp
and
aas
mov
sarl
add
add
test
out
push
dec
or
sbb
negb
fstps
xor
aad
jmp
mov
aam
inc
cmp
xchg
mov
cmc
push
cmp
lock
push
sub
lret
dec
push
add
jb
push
rcrl
aad
nop
adc
and
push
mov
iret
push
stc
adc
imul
pop
cltd
xorl
mov
mov
or
sbb
dec
inc
mov
ljmp
dec
aam
and
add
add
jno
movsl
sub
mov
jbe
add
push
jns
movsl
push
xchg
fidivrs
popf
push
and
mov
sub
dec
out
bound
adc
push
mov
outsb
inc
enter
cli
xor
or
xlat
notb
dec
cmp
scas
loop
add
dec
rcrl
push
fldt
lret
gs
add
jecxz
mov
or
in
inc
mov
xor
and
jo
sub
aaa
xchg
into
adc
cmp
in
es
pop
lcall
jmp
aad
push
stos
test
std
mov
adc
das
inc
pop
or
js
subl
or
cmp
mov
pop
cwtl
mov
add
adc
int
iret
mov
push
into
int3
dec
sub
push
cwtl
jmp
das
out
ds
pop
cmp
aas
pop
cmc
sahf
push
inc
xor
stc
popf
jno
movsb
jns
imul
dec
dec
xchg
insl
js
push
cltd
lret
call
cmp
dec
cmpsl
push
jecxz
stos
push
pop
shrb
int3
xchg
bound
push
add
mov
push
cmp
shlb
pop
push
dec
ftst
adc
popa
dec
cli
inc
or
cmc
cld
movsl
rcr
loope
push
loopne
in
adc
dec
mov
mov
jmp
push
stos
or
out
jge
dec
mov
inc
push
std
jmp
jp
ror
cld
pandn
adc
push
ret
rcll
mov
sbb
fdivrl
out
dec
fsub
xor
out
add
imul
sub
aam
mov
mov
xchg
pop
sbb
icebp
adc
rcrb
jp
sbb
stos
mov
repz
adc
add
sub
cmp
insl
ss
insb
test
leave
lret
sbb
sbb
sub
lods
in
xchg
adc
mov
js
push
jl
push
cmp
sub
mov
cmpsl
ss
sbb
cld
movsb
fwait
or
xchg
movsl
ret
notl
or
fmul
mov
jl
dec
pop
xor
adc
repnz
icebp
inc
adcb
or
insl
test
inc
movsl
popf
scas
xchg
inc
lea
loope
jle
popf
stc
sbb
pushl
mov
je
es
aad
jno
cwtl
loop
mov
add
or
sub
push
and
sbb
int
cmp
pop
outsl
out
cli
jne
fdivp
mov
outsb
sbb
les
cmp
push
mov
dec
ss
dec
imul
or
dec
pop
test
jl
cwtl
jg
mov
lock
imul
xor
inc
pop
mov
jne
dec
bound
shlb
aas
add
fsts
fnstsw
lahf
pusha
pop
xchg
pusha
rcr
out
mov
mov
or
mov
stc
insl
js
test
adcb
mov
xor
pop
or
ljmp
sahf
push
repnz
dec
jbe
sub
mov
cltd
xchg
xchg
ljmp
scas
xor
in
fsubl
cmpsl
movsl
jge
iret
testl
lea
cmp
imul
inc
iret
out
in
ljmp
xchg
sbb
fcmovb
cmp
jae
hlt
dec
fimull
add
push
lar
sub
sbb
mov
or
stc
sub
mov
pop
inc
das
mov
mov
xchg
mov
ljmp
das
dec
xorb
jae
lea
ja
pop
cmp
sub
repnz
cmc
mov
pop
mov
jae
mov
add
or
popf
int
inc
je
ss
inc
clc
das
pop
sbb
fidivrs
scas
pop
lods
call
sbb
inc
sub
pop
std
shll
bound
adcl
rcll
jae
and
jb
jnp
cmp
popl
cmp
cmp
jmp
jae
cmpsb
cli
sbb
in
and
xchg
rclb
xchg
or
pushf
sub
adc
popf
push
out
outsb
lock
dec
push
imul
and
das
movsb
into
xor
jno
mov
in
mov
dec
adc
clc
pop
sahf
sbb
gs
pop
je
out
sbb
mov
xchg
lock
test
mov
add
js
in
addb
das
cmpsb
test
cmp
dec
sbb
jge
xor
pushf
stos
xchg
mov
repz
pop
jo
xchg
leave
les
add
imul
insb
mov
sbb
sub
inc
test
inc
icebp
mov
ja
shll
fldcw
cmp
cs
cs
loope
aas
cmp
mov
std
shrl
wrmsr
pop
stc
mov
imul
sbb
pop
xchg
rcll
stc
or
fcoms
lea
aas
cmp
aas
push
mov
sbb
push
ficompl
movsl
into
roll
xchg
test
fcom
sahf
lea
inc
mov
insb
cld
jno
orb
pop
aad
rolb
mul
insb
cmp
mov
push
lods
mov
cs
push
addr16
sbb
mov
hlt
xor
std
outsl
fisttps
fbstp
sbb
or
iret
xchg
bnd
out
test
or
addr16
aad
test
xchg
mov
xor
xchg
xor
lahf
or
and
les
aaa
or
pop
mov
fimull
mov
mov
mov
mov
jle
mov
addr16
lock
rcrl
loopne
daa
jbe,pn
repnz
sub
xor
mov
out
cmpsb
pop
leave
decl
outsb
daa
into
pop
or
jecxz
movb
bswap
mov
and
dec
scas
aas
push
push
pop
ds
push
cmpsl
hlt
mov
dec
or
cmc
fsubrs
fldenv
push
stos
scas
es
pop
pop
mov
push
out
cmpsl
popf
jo
movsb
dec
cwtl
add
adc
adc
cmp
sub
movsl
add
in
out
sbb
lahf
mov
loop
and
mov
mov
xchg
add
loopne
mov
popf
test
push
jge
inc
inc
fiadds
jp
add
mov
lcall
xor
cmpsl
sbb
jmp
cli
cmpsb
jne
xchg
pushf
mov
adc
leave
push
push
sub
out
pushf
std
xor
mov
push
adc
js
arpl
and
pslld
dec
xchg
jmp
or
rorl
arpl
jnp
add
sbb
xchg
add
sbb
int
jg
shrl
adc
lock
jnp
xchg
push
inc
adc
mov
mov
imul
subb
jecxz
xorb
into
in
mov
jb
sub
mov
dec
cmp
out
xor
jl
pop
push
dec
mov
lret
pop
xchg
pop
mov
ret
gs
cmc
mov
hlt
out
pop
leave
pop
in
xor
and
loopne
add
out
add
cmpsb
das
out
xchg
mov
pop
mov
mov
setle
mov
xchg
jg
movsb
vprotq
test
or
int
push
rclb
and
or
pop
sub
and
push
mov
push
xchg
jno
iret
mov
pushf
ja
or
pop
bswap
fdivs
sbb
popl
sbb
adc
cmp
les
imul
je
sti
dec
cmpsl
ss
jp
cmp
jg
cpuid
and
fwait
into
cmp
mov
push
int
add
pusha
sub
outsb
and
loop
lock
clc
rcr
push
xchg
mov
push
sub
sub
mov
sub
sub
test
cld
fstpl
pop
jp
inc
std
roll
jo
pop
pop
test
adc
xchg
les
or
adc
jge
xchg
cmp
push
sub
aam
mov
dec
shll
scas
and
xor
shll
push
int3
je
jge
and
sahf
xor
stc
andl
movb
adc
pavgb
adc
mov
mov
sti
and
sub
pop
fwait
cltd
fsub
ficomps
loop
ret
mov
adc
lahf
push
lods
mov
scas
and
mov
xchg
jns
xor
es
push
lcall
andb
ret
int
ficoml
lock
arpl
xor
push
pusha
pop
cld
loop
lock
imul
and
inc
das
pop
dec
iret
mov
add
mov
pop
das
mov
add
jl
scas
xlat
dec
inc
mov
mov
pop
adc
nop
mov
inc
test
inc
aas
push
pop
jle
adc
cs
mov
shr
sbbl
cmp
dec
sbb
dec
call
push
adc
stc
or
push
and
dec
jb
push
pop
xchg
ds
rcrb
xchg
inc
xchg
pop
fisttps
mov
lcall
jecxz
rcrb
mov
sub
pop
cmpsw
add
push
dec
or
and
fidivrl
sub
ret
push
outsb
test
repz
pop
add
fnstcw
adc
dec
in
xchg
mov
arpl
out
add
mov
push
lds
mov
idivl
popf
mov
adc
int
inc
xor
or
cld
aad
mov
repnz
adc
mov
repz
loop
pop
adc
rorb
mov
enter
sub
cmp
dec
incl
xor
dec
dec
cwtl
mov
in
pusha
mov
cmp
imull
test
adc
sbb
push
inc
in
dec
push
repz
push
repnz
xchg
lods
arpl
dec
stc
cli
movq
lds
xchg
jae
xlat
mov
and
js
sub
push
xchg
aaa
popa
dec
js
dec
jmp
stos
inc
pop
rolb
outsl
xor
adc
insl
mov
jo
hlt
jmp
push
or
jo
aas
repnz
aas
or
data16
dec
pop
dec
sbb
aad
mov
lahf
xchg
leave
scas
outsl
adc
sahf
scas
xor
mov
nop
pop
jecxz
int3
popf
push
jno
clc
cmp
jno
call
or
sbb
cwtl
adc
inc
hlt
cmp
sbb
and
cwtl
jl
scas
mov
inc
ss
pop
lret
test
into
cmpsl
xchg
aad
arpl
add
pusha
inc
push
sbb
push
ficoms
pop
sub
pop
push
inc
mov
fimuls
fildll
sub
jnp
clc
into
jnp
xor
call
repnz
testb
ret
js
stc
dec
push
push
lock
test
sbb
jecxz
inc
and
adc
sti
mov
cli
xlat
inc
and
push
mov
dec
jae
insb
pop
adc
inc
cmpsl
xchg
fistl
stos
repz
loope
test
cmp
dec
mov
dec
lret
test
pop
aas
push
mov
std
lea
jge
scas
fmull
rorl
scas
fildl
adc
movsl
pop
pop
fstps
cs
mov
and
ret
inc
lret
sbb
ret
add
test
ds
push
ss
jg
nop
pop
aam
jnp
stos
xor
and
cmpsb
loopne
mov
mov
imul
sbb
lods
int3
push
fcoml
mov
subl
lods
mov
mov
mov
mov
push
ljmp
cli
pop
mov
adc
and
pop
mov
xor
call
adc
xchg
cwtl
test
mov
sbb
addr16
mov
lea
cmp
rcll
sub
adc
add
mov
mov
inc
adc
inc
mov
adc
ljmp
xchg
xchg
add
int
jmp
pop
cmc
shll
lret
rcrb
loop
cmpsl
test
adcb
xor
pop
jbe
dec
pop
shll
fmull
or
jl
xchg
xchg
xchg
addr16
sahf
xchg
jnp
mov
or
sahf
mov
lods
pop
lahf
in
push
mov
push
add
outsl
cmpsl
lcall
pop
or
dec
sti
pop
push
jae
sbb
pop
adc
rolb
ja
xor
andb
sbb
stos
cmpsl
inc
mov
arpl
imul
sbb
out
out
mov
sbb
dec
cmpsl
cmpsl
inc
stos
rep
dec
mov
sti
add
jl
lahf
test
sarb
call
ds
shrb
cli
cld
cmc
dec
sbb
dec
jae
lret
jge
pushf
xchg
inc
mov
mov
fs
scas
insl
call
cs
leave
push
mov
lret
jno
xchg
out
mov
and
mov
cmc
and
cmp
mov
fwait
push
pop
mov
dec
mov
cmpb
and
out
stos
orb
arpl
dec
lret
adcb
dec
adc
dec
into
pop
fistpl
fldcw
mov
or
lea
adc
dec
cli
scas
push
inc
jmp
mov
outsb
leave
es
fs
lock
jae
cmpsl
outsl
ja
js
mov
fsubrs
pop
xchg
sbb
push
jno
sub
idivb
std
ja
rcrb
xchg
push
sbb
mov
lcall
add
or
aas
pop
cmp
mov
imul
jo
mov
leave
and
fsub
cli
adc
std
movsl
jno
mov
add
hlt
les
out
fcoms
fwait
add
out
lock
xchg
xchg
dec
lods
scas
lods
inc
mov
in
mov
lds
imul
cmp
dec
sub
aam
popf
scas
cmp
add
orl
sub
and
and
mov
ja
lods
ror
fwait
inc
test
add
addr16
mov
dec
pushf
add
add
pushf
ja
fs
shrb
xor
pusha
push
int3
push
jo
inc
inc
sbb
nop
jns
jle
xchg
xor
ficompl
fldenv
insl
loopne
aam
out
jbe
pop
int
les
adc
cmc
push
xchg
icebp
aas
mov
xor
rcrl
lcall
arpl
fwait
daa
adc
mov
add
pop
mov
dec
fadds
cmp
repnz
fbld
push
push
sbb
outsb
mov
lret
add
cmp
ret
cmpb
dec
call
int
mov
mov
ret
stos
mov
ret
push
push
arpl
add
ss
sbb
movsb
pop
pop
sti
mov
mov
mov
pop
in
dec
sub
aaa
outsb
jmp
sub
cmp
icebp
pop
mov
pop
adc
test
test
dec
jmp
push
push
mov
test
jbe
int
imul
cmp
mov
xor
popf
bnd
dec
std
shrb
jb
xchg
sbb
int
xchg
sub
inc
lcall
or
push
mov
lret
popa
mov
xchg
inc
mov
pop
call
mov
dec
xor
adc
push
out
cltd
mov
jle
icebp
dec
sbb
movsb
push
iret
add
outsb
loopne
in
inc
jle
mov
dec
shll
sbb
js
sbb
or
inc
aad
adc
rcr
mov
mov
fsubl
push
xchg
push
or
and
xchg
xchg
inc
jmp
test
adc
adc
mov
mov
stos
ss
call
adc
packuswb
int
popa
popf
lret
aad
jmp
push
push
push
movsb
pop
arpl
and
and
js
outsb
repnz
jns
in
adc
inc
ss
push
aad
add
push
out
push
loopne
mov
aas
inc
fs
test
add
mov
dec
mov
daa
push
and
pop
icebp
shr
gs
mov
and
xlat
das
sub
jbe
sarb
sub
jmp
les
movsb
pop
std
out
xor
fistl
mov
adc
push
jnp
add
xchg
aas
lea
or
call
xchg
int
cli
mov
out
xor
testl
and
sbb
jp
xorb
adc
push
jo
inc
jge
mov
fnstsw
jmp
adc
cld
jns
sub
pop
push
sub
dec
xchg
ds
mov
fcom
pop
mov
lahf
sbb
mov
jbe
movsb
les
xor
xchg
test
loopne
sahf
mov
adc
fs
push
push
add
cmpl
mov
pushf
sub
pusha
popa
adc
jns
cmp
sub
pop
loope
pop
sub
in
mov
jg
mul
sbb
push
pop
fimuls
cmp
sbb
xchg
add
out
xor
aam
stc
aaa
mov
and
popf
pop
pop
add
sbb
aaa
jbe
and
aad
dec
cmp
xchg
mov
imul
dec
xchg
mov
aas
fldcw
pop
daa
fiaddl
adc
sbb
add
dec
cs
adcb
jno
iret
push
mov
cltd
inc
push
jl
push
pop
sub
and
pop
lret
add
ficomps
xor
incl
lcall
mov
push
mov
adc
popa
jmp
testl
add
mov
xchg
push
std
clc
mov
outsb
push
loop
xlat
push
xor
inc
in
or
scas
bound
inc
ds
xor
push
iret
xchg
jp
push
shll
push
imul
pop
out
es
or
add
sahf
ljmp
jecxz
push
xor
enter
and
xlat
jl
ret
pop
push
push
dec
mov
jo
lods
push
jo
orb
clc
mov
adc
fisubrs
popa
fstpl
out
sub
subb
pushl
test
pushf
gs
push
insb
jns
mov
and
movsl
test
aas
mov
adc
mov
mov
dec
call
xlat
es
pop
inc
cmp
sub
jl
sub
lret
loopne
jmp
inc
into
pop
cmpsb
stos
test
push
test
jbe
jle
rolb
iret
dec
xor
adc
jb
shll
add
push
test
ja
lock
loope
push
jo
jae
and
in
pop
lcall
aad
into
int
jecxz
lcall
and
arpl
or
xchg
insl
inc
fstps
lret
mov
out
mov
test
mov
sbb
repz
mov
inc
lock
cmp
jb
out
cmp
lods
clc
xchg
inc
out
jns
movsl
sub
idivb
aas
subb
and
sub
stc
out
sub
push
add
loop
loop
lods
gs
ds
in
jl
and
sbb
stc
adc
adc
push
aaa
outsl
movsb
lods
jno
cmp
xchg
xchg
fstcw
and
sub
test
insb
daa
pop
jl
mov
xchg
pop
jne
xor
mov
lcall
fsubs
mov
test
out
dec
mull
cmp
loop
out
add
push
sti
cmp
lock
cwtl
aas
pop
push
dec
push
inc
jbe
in
lea
mov
orb
mov
and
hlt
dec
ja
cltd
jns
jp
rcl
sbb
sub
cmc
mov
sbb
pop
lods
stc
incb
dec
push
jmp
add
sub
je
inc
cmp
cli
pushf
and
stos
add
push
adc
or
aam
pusha
add
adc
nop
fadds
sarl
js
pushf
test
out
negb
xor
mov
xor
into
sti
cmpsl
loope
popa
cmp
push
add
shll
insl
add
ds
dec
dec
push
mov
sbb
aaa
add
push
fldt
cmc
imul
mov
mov
insl
pop
dec
jnp
stos
inc
stos
add
cld
js
mov
xor
rcrb
aam
je
dec
mov
nop
cmp
test
pop
mov
fcmovbe
pop
mov
es
xor
sti
or
mov
cmp
mov
sbb
clc
sbb
mov
adc
out
jl
loop
fwait
mov
mov
xchg
pusha
push
cli
xchg
or
dec
jns
fstps
loop
cmc
dec
cmp
xchg
mov
aam
and
sti
sub
repnz
aaa
mov
and
push
mov
sub
jmp
mov
push
mov
cmp
xor
sbb
push
fs
push
fs
jns
mov
xchg
fs
sub
nop
adc
fs
dec
pusha
mov
xor
sub
push
out
pop
add
stc
and
xchg
das
sahf
les
adc
icebp
aaa
fsubr
cs
movsb
fisubs
inc
add
lea
insl
pop
ficompl
in
and
fisttps
and
pusha
dec
scas
negl
dec
xchg
ds
js
inc
mov
xchg
int3
bound
xchg
aad
xor
mov
fsub
out
fsts
xor
in
int3
jle
add
sub
jl
lret
js
inc
int
and
fisubrl
movb
insb
loopne
aas
pushf
cmp
jne
push
inc
stos
insl
xchg
dec
xchg
push
sti
sbb
insb
pusha
jmp
add
add
xchg
dec
lods
jp
mov
adc
je
and
stos
cli
ret
shll
inc
call
and
xor
fnstcw
lret
cwtl
lret
jb
dec
dec
inc
or
add
div
mov
xchg
cmp
ret
aad
jmp
xchg
xchg
push
cmp
or
xchg
jmp
lods
adc
pop
pop
popa
int
add
xor
mov
roll
push
pop
idivb
xchg
loope
and
enter
arpl
mov
adc
sub
sub
sbbl
std
mov
pop
std
iret
stos
push
and
jae
sti
xor
cmp
pop
xor
out
mov
inc
pop
adc
inc
adc
shlb
and
nop
inc
or
nop
daa
pop
sahf
testl
test
adc
add
arpl
rorb
mov
sahf
call
mov
mov
xchg
mov
cs
scas
sub
cli
mov
mov
inc
stos
adc
ljmp
fsubrl
mov
and
xchg
lret
pop
pusha
jns
jo
arpl
leave
setae
es
xchg
push
jge
add
lahf
pop
loope
aas
sbb
mov
fsubrl
shll
add
adc
mov
jo
out
in
xchg
loop
test
popa
xchg
cmp
adc
jae
jge
movsl
and
sub
sub
mov
imul
xorl
out
rorl
lods
ret
out
icebp
mov
pop
out
pop
cmp
fcom
rdmsr
push
push
push
lods
inc
and
lock
push
sub
inc
jae
int3
sub
push
cmc
cmp
cld
std
lock
mov
fldt
push
aaa
push
imul
add
pop
enter
cwtl
test
cltd
inc
push
mov
sarl
arpl
pop
mov
arpl
xchg
cld
hlt
or
imull
or
or
push
sbb
lret
subb
sarb
xor
stc
mov
int3
push
ror
xor
das
stc
xor
imul
mov
pop
cmp
xchg
mov
xor
xor
jle
std
jle
ret
xchg
mull
mov
jne
mov
iret
imul
lods
xorl
jns,pt
nop
insl
cmpsb
imul
rolw
pop
fidivl
fs
out
fsub
xchg
add
call
out
jb
dec
adc
pop
xchg
addr16
or
push
lods
xor
pop
clc
xchg
roll
mov
cmc
cmp
adc
mov
add
xlat
cmpsb
inc
push
pop
pop
pop
int
mov
xchg
mov
pop
in
jge
popa
xchg
and
add
pop
mov
push
mov
pmuludq
xlat
mov
popa
inc
imul
pop
inc
mov
aam
push
adc
xor
jecxz
dec
fstp
mov
ja
pop
cmp
scas
fwait
mov
loop
xchg
inc
cmpsl
mov
xor
in
scas
popl
sub
dec
dec
dec
mov
mov
mov
cmp
or
add
cwtl
jae
xchg
xchg
lock
xchg
fimuls
popf
jae
jns
jb
adc
dec
xor
push
leave
cs
fiadds
ljmp
sbb
je
repnz
icebp
lock
jnp
sahf
pop
xchg
and
rcrb
insl
xchg
mov
jp
push
or
pop
mov
scas
les
mov
pusha
xlat
movsb
lods
push
push
xor
push
xor
sbb
fdivs
xchg
sbb
ds
movsl
jmp
push
pusha
movsl
pop
ds
loop
add
addr16
inc
inc
imul
and
in
mov
sub
inc
fsubrs
sarl
sahf
arpl
scas
mov
mov
insl
jno
fadd
push
and
rclb
add
movsb
stos
movsl
mov
xor
ret
ss
pop
push
pop
addr16
ds
xchg
fstpt
pop
lock
jno
test
bound
or
sbb
pop
adc
add
repz
jmp
jmp
xlat
push
rclb
mov
insl
in
pusha
pusha
mov
cmp
and
in
scas
in
stos
pop
into
push
xchg
fsubs
call
add
jb
nop
std
cmpsb
pop
sti
daa
in
cmp
pop
filds
idivl
or
adc
popl
lods
stc
sbb
mov
stos
sub
sub
es
inc
and
rcr
inc
add
push
insb
pop
sbb
enter
gs
sbb
roll
nop
stc
mov
ja
scas
stos
push
imul
xchg
ret
push
adc
int3
dec
and
fcmovne
push
mov
hlt
jle
xor
outsl
mov
inc
sbb
call
inc
and
loopne
push
cs
pop
and
push
sbb
iret
mov
leave
mov
in
negl
push
cmp
in
cmp
push
xor
jg
inc
pop
mov
pop
es
xor
popa
push
mov
or
pop
sbb
test
addr16
xor
dec
or
jb
es
popf
inc
sbb
jno
movsl
mov
loop
stos
adc
popf
pusha
cmpsl
pop
push
mov
in
pop
adc
out
arpl
imul
push
jnp
mov
aam
shll
mov
add
inc
roll
cwtl
inc
fdivrs
frstor
adc
adc
shll
daa
or
into
jne
adcb
push
fistl
add
mov
and
pop
mov
push
cmp
or
sbb
mov
jp
insl
outsl
cmp
push
adc
push
lret
cmp
loopne
lea
sub
xchg
pop
lods
test
jo
lcall
dec
clc
cltd
mov
scas
in
xchg
ret
lcall
and
xor
das
sbb
rolb
adc
push
rorl
or
dec
lret
iret
int
stos
test
es
mov
inc
outsl
and
push
fmull
clc
rcr
iret
cs
inc
xchg
sbb
fildl
mov
cmp
xor
imul
popa
aad
sarb
push
lods
pushf
pop
mov
xor
in
mov
and
xor
inc
pop
adc
xchg
or
xchg
mov
outsl
lea
xchg
fs
in
mov
inc
sbb
fwait
aam
iret
cwtl
addl
inc
scas
in
aad
dec
push
sub
loop
push
cmp
cmpb
inc
in
test
icebp
mov
sahf
pop
sbb
data16
push
mov
in
arpl
mov
test
or
jnp
in
dec
out
outsb
or
jecxz
sbb
mov
enter
mov
pusha
mov
sub
xchg
dec
pop
inc
lods
and
pop
cld
enter
jle,pt
sahf
jp
xchg
sub
sbb
inc
cmp
mov
sbb
bnd
xor
and
shrl
cmp
xchg
add
pushf
xchg
outsl
faddl
mov
sub
out
inc
out
mov
lahf
leave
mov
and
sub
inc
aas
xor
mov
mov
arpl
subb
ret
and
cli
sbb
loope
lock
loopne
add
stos
fisubrl
pop
dec
cmp
mull
pop
sahf
xchg
xchg
lock
test
aam
cmp
jo
into
cmpsl
sbb
xchg
and
sbb
pop
add
inc
push
ret
jg
mov
xchg
pop
mov
sti
sub
adc
scas
jg
test
pop
cmp
hlt
fmuls
adc
inc
shl
xchg
mov
mov
in
addr16
adc
cli
sub
out
jno
js
add
inc
lret
mov
icebp
add
fs
push
xchg
movsl
cmpsl
in
dec
jns
push
frstor
lcall
popf
data16
popf
jp
and
call
jbe
es
in
int3
ret
dec
and
sub
add
cwtl
mov
jnp
mov
xchg
icebp
lret
stos
lahf
mov
xchg
sbb
insb
cmp
data16
mov
fcoml
push
iret
mov
arpl
inc
push
dec
cmp
sbb
or
and
dec
test
in
cli
pop
adc
test
addr16
sbb
mov
sub
mov
inc
outsl
aaa
xchg
imul
inc
test
and
xor
popa
pop
incl
sbb
jmp
js
repz
cmpsl
sub
mov
dec
inc
sahf
and
dec
dec
notb
testb
lock
lea
ljmp
jno
addb
push
mov
mov
aam
cmp
pop
add
out
movsl
icebp
push
repz
jp
pop
ret
fldt
add
faddl
in
in
rorl
jle
js
bound
sbb
gs
pop
inc
cmp
test
add
push
xchg
and
imul
xchg
outsb
pop
pop
stc
jmp
out
lea
std
mov
adc
adc
lods
jo
faddl
pavgw
call
jne
add
into
jg
add
sub
and
js
xchg
push
mov
cld
mov
lret
clc
imul
mov
sti
adc
test
sti
jo
xorl
ds
outsl
push
add
dec
sub
icebp
pop
lods
div
call
std
movsl
fstpt
fs
sbb
xchg
push
mov
mov
jl
js
inc
bound
fldl
ret
push
sbb
scas
out
outsb
out
ror
push
add
mov
jl
negb
xchg
adcb
rolb
incb
mov
addr16
xchg
sub
fistl
adc
ss
inc
cmc
nop
cwtl
inc
cmpsl
ror
adcl
mov
adc
xor
lahf
xchg
and
cmp
mov
and
adc
cmpsb
subl
mov
fdivrs
inc
add
mov
add
scas
xlat
jo
pop
movsb
pop
jmp
out
add
dec
lret
mov
addr16
or
imul
imul
cmp
adc
mov
cld
int3
lock
movsl
call
stc
pop
mov
jbe
push
js
sbbb
jp
insl
stos
mov
loope
loopne
lret
push
jmp
push
add
jmp
pop
sub
in
sarl
test
add
jl
dec
pop
test
fldt
popf
popa
dec
stos
pushf
xchg
xchg
sarb
push
clc
sub
cli
stos
adc
lahf
dec
inc
lcall
arpl
divb
mul
jl
test
push
mov
out
xchg
jnp
jbe
or
ret
addb
insb
push
stos
xorb
test
sub
push
xor
sahf
xor
int3
adc
or
or
shl
sub
inc
out
addb
shrl
sub
das
inc
ss
insl
or
adc
inc
retw
push
subb
fisubl
xchg
push
push
adc
and
loope
push
arpl
push
or
les
or
sahf
jl
fisubl
mov
cli
pop
push
xchg
jns
dec
cmp
enter
mull
xor
sub
mov
mov
mov
test
lds
mov
pop
into
not
daa
cli
push
dec
cmp
xchg
add
xchg
sub
roll
pushf
into
cs
nop
das
cld
pop
lret
xchg
popa
jae
xchg
mov
push
shrb
mov
adcl
repz
std
ss
dec
xlat
repz
mov
fwait
adc
das
xchg
enter
in
data16
xchg
outsl
add
rol
xchg
add
jge
xchg
or
cltd
clc
dec
orb
sti
inc
dec
dec
jbe
dec
inc
aad
jl
inc
inc
ja
cmp
sarl
pop
loop
aad
movsl
lahf
rcll
cmp
cmp
lods
xchg
pop
wbinvd
stos
lods
adc
and
lcall
mov
sbb
lods
pop
jmp
inc
loope
inc
xor
mov
adc
jmp
mov
inc
data16
and
jb
mov
scas
xchg
mov
mov
or
mov
and
or
iret
ds
jnp
cmc
mov
or
out
js
rcr
scas
mov
push
int
shrb
mov
xchg
fistps
imull
adc
insl
in
repz
inc
lahf
out
lret
adc
gs
pop
mov
test
ss
pop
mov
inc
fcoml
movsb
mov
xchg
pop
insl
scas
mov
mov
adc
push
int3
sub
bound
fs
mov
lret
sbb
dec
fcompl
xor
js
cmp
int
loop
mov
adc
mov
popa
inc
ljmp
and
out
pop
fsubrl
xchg
pop
imul
pop
lea
sub
clc
rdpmc
fnstenv
mov
jnp
add
adc
int
add
arpl
fdivs
cs
sbb
cmp
xchg
stos
add
xchg
pusha
inc
out
test
jnp
dec
jecxz
and
push
sbbb
imul
mov
aaa
fcoml
push
loopne
mov
inc
xor
xchg
fnstcw
or
mov
daa
js,pt
adc
mov
push
ficompl
shl
int3
and
sub
or
pop
lahf
insl
pop
xchg
adc
mov
aaa
jns
test
add
mov
dec
scas
xlat
rorb
mov
shl
notl
mov
push
test
clc
insl
popf
xchg
pop
add
sbb
aaa
rcrb
aaa
or
adc
shrb
outsl
jle
cmp
mov
out
and
xchg
in
adc
cmpsl
push
enter
push
nop
cli
xchg
adc
mov
xchg
or
repnz
roll
mov
mov
outsl
pop
add
push
sub
add
outsl
and
in
and
cmp
add
sbb
and
cld
pop
and
add
daa
into
cmp
inc
cli
pop
jge
xchg
call
xor
mov
imul
fwait
out
jae
sahf
mov
scas
lcall
je
mov
sbb
repz
lds
lods
adc
in
cltd
rclb
je
in
pop
ljmp
lods
outsl
mov
movsl
stos
test
push
adc
pop
mov
add
iret
fdivrl
cmc
cmp
lds
imul
in
insb
mov
jecxz
pop
push
divl
dec
mov
sbb
jne
ja
fmull
rclb
jmp
pop
inc
jg
push
cwtl
xlat
sbb
sub
fisttpl
and
push
xchg
ret
clc
cmp
testb
adc
pop
sbb
mov
push
mov
jns
sub
push
pop
jne
icebp
add
xchg
repz
jge
push
dec
add
clc
jno
mov
push
fcomip
inc
pop
push
mov
fisttps
jne
pop
stc
or
shll
repz
lock
pop
std
sub
cmpsb
call
or
in
adc
lahf
cmp
jo
adc
push
pop
orb
and
xchg
loope
sub
cs
pinsrw
ficompl
les
dec
pop
fdiv
icebp
adc
cmp
push
fstpt
pop
loopne
ret
mov
arpl
cmc
push
mov
mov
mov
mov
push
leave
xor
push
imulb
adc
in
lcall
mov
xor
jp
mov
lds
mov
dec
inc
sbb
loopne
fistpl
pop
std
push
xchg
mov
push
pop
xor
adc
fisubrl
xor
cmp
xchg
jo
ss
jb
clc
cli
ja
loope
jae
dec
mov
out
jp
add
push
scas
ja
jle
jmp
mov
mov
mov
sbb
rcrl
push
cmc
push
mov
dec
pop
mov
loop
clc
and
or
push
cmp
aam
sub
std
fldenv
std
lock
push
or
push
stos
aas
add
out
jmp
test
clc
lds
stos
sbb
jmp
mov
sub
and
and
xor
pusha
fldl
sbbl
cmpsb
repnz
in
negl
jmp
int
test
mov
pop
mov
mov
movsl
pusha
xlat
and
mov
int
push
call
lcall
sbb
aas
mov
negl
bswap
mov
and
mov
push
mov
sbb
push
and
test
xchg
push
ljmp
mov
fbld
mov
mov
cmpb
jl
test
xor
je
mov
push
ror
xlat
int
das
push
sbb
cmpsb
int3
jge
push
arpl
ja
or
jbe
mov
xlat
cmpsb
imul
call
sub
inc
ss
mov
hlt
test
xlat
xchg
and
pushf
jge
pop
dec
adc
mov
int3
mov
fisubrl
fcomps
dec
mov
mov
pushf
jmp
cwtl
lret
sahf
xchg
push
mov
inc
rcrb
leave
loope
push
xor
push
mov
dec
lahf
xorb
scas
fs
lods
sub
mov
xchg
ljmp
nop
shlb
sbb
xchg
mov
mov
and
pop
loopne
in
xchg
jg
cmp
call
push
je
loopne
cli
js
add
cmp
sbbl
inc
mov
jp
bound
xchg
ja
movsb
or
loopne
lds
xchg
es
or
ja
lret
mov
mov
sahf
pop
clc
push
in
lret
or
jbe
cld
sbb
idivb
pop
cmp
push
cmp
pusha
push
pop
jge
inc
mul
stos
scas
cmc
pop
cmp
pop
mov
repz
cmp
inc
lds
mov
ret
clc
push
xchg
mov
icebp
cmp
fmull
push
and
leave
movsl
dec
mov
push
mov
shrl
cmp
fucomp
xchg
in
je
test
ljmp
or
addr16
inc
clc
sub
add
add
ljmp
or
fmulp
dec
adc
jns
mov
fists
lret
inc
dec
lcall
lea
adc
inc
adc
pop
inc
test
js
pop
lret
pop
cwtl
sbb
pop
repz
cmp
popa
pop
test
mov
in
lods
roll
mov
ljmp
dec
icebp
ds
mov
xrelease
in
ficomps
inc
push
add
sarl
loopne
test
bound
std
pop
dec
aam
jg
sbb
fimuls
mov
xlat
aad
mov
adc
push
mov
fsub
div
adc
out
cmp
mov
mov
fcmovbe
das
pop
insl
mov
mov
nop
adc
or
mov
cmpsb
push
sahf
mov
es
sbb
fsubrp
out
push
repz
repz
arpl
adc
push
data16
lea
popf
sub
not
add
rcrl
lock
adc
clc
int3
sub
sub
addr16
mov
mov
cmpsl
js
into
lods
scas
in
das
or
inc
ja
ds
inc
pop
sbb
dec
repz
sbb
and
add
jo
and
vphadduwq
adc
adc
aaa
outsb
xchg
outsb
or
sub
cmp
les
popa
fwait
stos
faddl
daa
sub
adc
sub
mov
sbb
mov
mov
in
ret
ds
pop
push
aam
fbld
or
xchg
or
fxch
idivl
inc
in
lods
cmpb
call
mov
sbb
test
xchg
and
sbb
jle
pop
outsb
lods
sbb
fwait
pop
movsb
inc
jbe
daa
into
push
movsl
arpl
sbb
lock
xchg
divl
fadd
hlt
pop
ret
lret
loopne
std
mov
inc
xor
out
mov
leave
loopne
scas
dec
data16
test
mov
jge
out
push
mov
jns
sub
xor
push
sub
push
insl
loopne
push
repz
in
sbb
repnz
adc
shll
push
jl
ja
push
fstl
shll
and
cltd
jnp
sub
lahf
out
shrb
dec
ds
and
mov
leave
xor
sbb
ljmp
imul
cli
out
xchg
jo
mov
or
xchg
xchg
sbb
jbe
rclb
sub
out
xchg
pmaddwd
jbe
scas
incl
hlt
or
inc
rolb
pop
ss
pop
xorl
xor
pop
dec
loop
lock
pop
xorb
pop
fs
mov
push
ss
sbb
mov
xchg
fs
popf
data16
enter
insb
lea
add
jp
push
sahf
sub
divb
xchg
push
sub
pop
push
mov
icebp
sub
outsl
push
stc
fwait
roll
xor
lea
dec
lods
cwtl
test
adc
mov
push
xchg
cmc
or
das
aaa
cmp
jb
test
cmp
dec
jnp
into
sbb
xchg
iret
pop
jne
dec
xor
ja
add
sub
sub
into
mov
cld
int
pop
mov
inc
inc
jnp
mov
xchg
jg
add
add
stc
lret
lds
mov
or
push
testl
sbbl
lods
or
jns
jne
aam
add
je
call
daa
adc
jecxz
push
adc
das
mov
push
in
nop
pop
push
or
testl
adc
clc
xor
call
or
loope
adc
lahf
mov
jle
inc
fwait
cltd
notb
add
fsubr
cltd
mov
mov
pop
cmpsb
mov
addr16
in
addr16
pop
sbb
xor
mov
in
je
subb
push
dec
xor
add
mov
or
inc
mov
repnz
fdivl
psubb
das
adc
fwait
jne
xchg
icebp
rcll
out
push
insb
mov
mov
lock
outsb
inc
cmp
addr16
dec
loopne
sub
pop
test
cmp
out
div
stos
inc
outsl
push
sbb
pcmpeqd
or
and
add
sti
pop
or
mov
imul
aaa
pop
mov
in
repnz
and
ljmp
nop
subb
scas
mov
pop
lea
sarb
add
sub
les
inc
sub
adc
mov
push
jg
mov
in
pop
dec
xchg
add
movsb
xor
mov
sub
arpl
call
int
push
xchg
mulb
xorb
in
push
cmp
mov
jns
dec
mov
scas
int
jns
cmp
jb
add
in
pop
sbb
pop
jmp
and
testl
outsb
cltd
in
out
or
xor
push
ss
xchg
sbb
clc
mov
rcrl
pop
add
fwait
subl
sub
adc
or
cmp
or
icebp
mov
dec
xchg
adc
or
je
inc
outsb
addr16
int3
push
test
inc
and
xchg
xor
pushl
popa
mov
mov
jle
cmpsl
insb
pop
jmp
pop
mov
pop
aaa
jmp
pop
vunpcklps
mov
into
rorb
call
addr16
jge
rcrl
jmp
out
enter
and
je
cltd
jnp
ljmp
mov
test
lods
cs
pop
push
and
ds
inc
cmp
loopne
out
not
sbb
xchg
lds
inc
mov
push
int3
cli
std
imul
jg
stc
pop
outsl
xchg
lds
xchg
repz
cmp
ds
icebp
cmp
fwait
bound
mov
or
and
push
cmpsb
jl
ja
fisubs
cmp
fwait
outsb
xlat
hlt
pop
mov
pop
testb
stos
mov
jmp
inc
sub
adc
adc
xor
dec
add
sub
dec
cmp
push
lock
pushf
ss
mov
pop
push
cmp
push
lea
sub
or
cmpsl
lds
movsb
in
aad
sbb
push
test
cwtl
mov
mov
iret
in
dec
sub
sub
dec
test
mov
adc
inc
add
mov
xchg
fwait
in
push
loopne
sti
sbbl
int
and
imul
lods
sub
insl
push
aas
lods
popa
sub
inc
push
jbe
stos
and
in
icebp
mov
jne
test
dec
lods
mov
aad
outsl
lock
mov
sbbl
loope
ja
dec
xchg
cmp
das
xor
sub
stos
or
cmpsl
pop
add
negl
jle
inc
jne
mov
dec
push
mov
jle
sbb
mov
sbb
mov
insb
dec
mov
mov
nop
inc
cs
loop
mov
cld
sahf
cmpsl
push
or
stos
adcb
add
stos
ds
sub
pop
cmp
pop
pop
mov
cmp
mov
adc
decb
or
lds
fisttps
xlat
jb
xchg
or
and
push
lock
cmp
popa
inc
repz
movsb
repnz
mov
xor
sbb
or
dec
pop
test
test
jbe
inc
push
repnz
les
stos
dec
shlb
movsb
imul
inc
shrb
add
pop
and
mov
rolb
add
daa
orl
fimuls
aaa
sti
cmc
mov
inc
cwtl
mov
in
lds
mov
lods
mov
aad
pusha
sub
leave
mov
or
xor
adc
sarl
mov
sub
in
lcall
rcrl
mov
add
jp
lods
stos
sub
movsl
sahf
jne
mov
fimuls
stos
dec
iret
es
stos
xlat
add
das
mov
testl
jno
or
and
pushf
sub
pop
out
sbb
fidivs
inc
stos
repnz
inc
or
cld
bound
incb
mov
out
mov
or
test
in
cwtl
mov
sub
jo
add
insb
xor
pop
inc
push
clc
inc
rorb
jp
test
pop
pushf
cmp
sub
cmp
push
pop
cltd
pop
pop
outsl
stc
pop
dec
and
jbe
xchg
cmp
test
js
and
pop
aam
jle
in
xchg
jmp
mov
sbb
lret
or
lcall
lds
in
lret
add
sbb
xor
imul
inc
cmp
cmc
je
insb
sbb
adc
cwtl
cmc
je
xlat
fidivrs
xor
shlb
scas
mov
daa
mov
sbb
fisubrs
outsl
xor
jb
mov
and
ret
dec
lret
jg
sbb
mov
mov
nop
sbb
cmp
sahf
test
pop
int3
out
mov
cmp
pushf
aam
or
xchg
insl
es
dec
xor
cmp
fcompl
int3
pop
mov
in
mov
mov
fistpl
int
icebp
adc
jns
xchg
lea
lds
sbb
cmpsb
add
and
jns
xchg
jns
adc
and
mov
xchg
out
xor
cmp
je
lret
jbe
mov
adc
adc
push
movsl
loop
mov
and
pop
out
icebp
sbb
push
xchg
js
movsl
sti
dec
movsb
les
popf
icebp
add
test
mov
jns
add
jl
lods
pop
cmpsl
repnz
mov
add
cmp
push
inc
dec
and
mov
enter
data16
or
push
mov
jg
jg
leave
les
sbb
sbb
push
pop
pop
pop
aam
ret
shl
call
adc
jg
sub
jecxz
add
xchg
outsb
iret
pop
jnp
outsb
in
cwtl
sbb
jb
adc
fisttps
mov
pop
out
adc
xchg
push
jl
rcrb
lret
rorl
mov
rclb
mov
sbb
insl
adc
cmpsl
enter
jg
mov
xor
push
test
sbb
ja
cli
loopne
repnz
and
mov
dec
test
jle
mov
hlt
pop
cmpsl
inc
mov
scas
outsl
int3
pop
scas
addr16
aaa
push
pop
mov
and
mov
mov
dec
bound
mov
xchg
cmp
sbb
push
out
xchg
dec
xchg
push
dec
andb
sbb
fnstsw
test
jae
pinsrw
mov
cmpsb
pop
aam
aaa
je
repz
mov
test
jl
insb
in
int
xchg
xchg
ss
inc
in
out
lret
jg
push
loope
shlb
lea
gs
cmc
es
and
sbb
xor
add
inc
loop
mov
or
lcall
jmp
jno
adc
mov
add
push
cmp
test
mov
jno
out
and
mov
sbb
cmp
rcrl
and
add
es
mov
mov
icebp
in
ss
push
fs
xchg
xchg
sub
xchg
es
push
icebp
stos
loop
dec
jge
xchg
cmp
pop
roll
repnz
insl
adc
aaa
cmpsl
jg
xlat
sub
sbbb
subl
fdivrl
paddd
push
leave
outsl
push
jg
inc
add
or
daa
inc
lds
cmp
pop
jbe
lret
in
sbb
pusha
dec
fldt
xor
or
pop
sub
fistps
pop
ss
or
jge
push
mov
incl
pop
mov
sbb
enter
fmuls
ffree
jmp
mov
pop
fistpll
cmp
andl
dec
xor
clc
test
xor
stos
dec
dec
std
mov
js
movsb
cmp
mov
mov
xor
or
out
push
mov
jb
scas
jae
test
mov
jae
jp
mov
cwtl
ret
int3
jge
add
pop
addl
mov
pop
lods
xchg
mov
call
sub
test
add
enter
mov
sbb
sub
pusha
dec
jl
dec
mov
or
rorl
or
out
and
sbb
jecxz
add
sub
lcall
mov
jmp
sub
mov
push
sub
mov
inc
inc
adc
mov
iret
outsb
pop
shr
and
mov
jo
xchg
incb
push
outsl
pop
popa
jb
pushf
movsb
jne
push
aaa
lds
mov
jae
or
stos
push
mov
mov
test
out
dec
sub
ss
and
sub
sbb
or
pusha
fisttpl
adc
sti
add
jnp
jg
shlb
in
lods
pushf
mov
stos
je
testl
sub
test
testl
leave
adc
cmp
out
fildll
inc
lcall
inc
xchg
ficompl
sbb
or
dec
sub
and
add
jecxz
rorb
frstor
dec
jb
dec
adc
jmp
xchg
jbe
mov
repnz
aas
lret
jae
mov
rorb
call
aad
or
jns
popf
icebp
pusha
andl
aas
mov
das
loope
pop
rcrb
outsb
cmp
shrb
mov
stos
jns
and
test
push
jbe
test
test
add
or
push
pop
dec
ds
xchg
mov
sub
int
pop
testb
adc
or
aas
lret
cmpsl
adc
scas
inc
cmp
aad
mov
fildl
sbb
push
sub
pop
fisubs
pop
dec
cs
pop
mov
and
test
pop
orl
xor
or
pop
or
xor
dec
sub
xchg
sub
cmp
or
mov
pop
jp
out
push
mov
enter
jnp
int3
pop
popa
sbb
iret
ret
scas
pop
ret
xor
sub
sbb
pop
xchg
jg
mov
sbb
pop
mov
jnp,pn
mov
xor
cwtl
mov
mov
dec
addr16
lods
test
jbe
fs
jo
rorl
jnp,pt
cmp
xor
push
inc
fistpl
shll
dec
inc
xchg
add
rcrb
sub
lock
xchg
in
mov
add
insl
pop
mov
jb
ja
xchg
test
adc
or
enter
in
jl
mov
lret
scas
and
inc
mov
fstps
mov
in
jmp
stc
push
and
dec
std
scas
and
test
xchg
pop
xlat
jne
pop
and
rorb
push
push
push
and
push
push
mov
mov
pop
mov
popa
loop
jecxz
sar
inc
mov
cmp
and
cs
add
imul
cmc
pop
sbb
jmp
add
andb
jns
mov
jo
outsb
ret
push
jp
mov
push
lds
pushf
mov
sub
mov
cli
jae
push
xchg
xor
or
in
xchg
push
xchg
xor
jecxz
and
dec
fs
stos
sub
cmpb
xor
lea
cmp
push
or
pop
mov
mov
scas
ret
cmp
mov
rcl
mov
gs
jnp
add
out
mov
mov
and
popa
push
lock
jecxz
mov
cld
dec
cwtl
cmp
bound
int
lcall
ds
aam
repnz
or
das
cmp
mov
jmp
fistl
rorl
push
into
sub
pop
xlat
push
lods
pushf
inc
jo
xchg
inc
push
sub
ljmp
pop
sahf
sarl
pop
call
cmp
scas
pop
jecxz
jo
in
mov
sub
jb
stos
and
aam
stc
outsl
and
pushl
lock
sub
jbe
dec
push
push
fiadds
fcomps
daa
mov
pop
cltd
pop
xor
mov
out
sbb
sbb
dec
xchg
ss
lds
jg
push
mov
push
lock
test
or
ss
inc
outsb
push
inc
pop
out
aaa
sbb
je
mov
loop
ja
inc
or
fnstenv
push
mov
add
inc
sub
add
jp
or
add
cmp
rclb
in
add
lds
scas
push
adc
outsl
inc
sahf
cwtl
adc
sub
inc
out
xlat
sub
pop
stc
pop
pop
fmull
ss
mov
cmp
jb
and
jg
xchg
sbb
push
int
sbb
in
sub
xchg
test
enter
mov
faddl
out
jmp
repnz
in
imul
cli
push
outsl
les
lret
popf
sbb
jmp
es
jecxz
xor
out
imul
xor
je
movsb
adc
or
add
xchg
ss
mov
sbb
loopne
push
sub
fists
sbb
mulb
adc
ret
add
sbb
sbb
push
mov
pop
inc
mov
inc
ret
mov
sbb
bound
push
sbb
cli
dec
jo
dec
xchg
shlb
push
mov
mov
push
sub
sub
and
mov
push
and
jp
ja
mov
sarb
mov
fldenv
movsl
imul
es
insl
xlat
xchg
sbb
out
jns
mov
jne
lcall
pop
mov
xchg
insl
push
xlat
pop
lcall
sar
mov
mov
es
or
ret
xor
fsubl
mov
repnz
sub
loopne
subl
push
jb
ret
push
out
repz
pushf
les
add
lret
icebp
sub
mov
mov
mov
xor
xchg
inc
stc
mov
out
adc
outsb
sub
outsb
xlat
pop
mov
outsb
pop
add
mov
popf
ficompl
lock
arpl
hlt
fisubrs
scas
hlt
jno
mov
jmp
xor
out
mov
inc
inc
cmp
insb
fistpll
lods
pop
and
loope
movsl
sbb
mov
mov
fwait
mov
ds
popa
lcall
mov
in
dec
jp
mov
jge
xchg
sub
adc
sbb
push
stc
lods
or
push
mov
sti
push
and
push
adc
mov
jnp
imul
sub
jns
test
mov
pop
loope
dec
rclb
jp
dec
or
xor
or
dec
push
insb
pop
mov
data16
or
fstl
adc
push
inc
push
sahf
add
stos
cmpsl
mov
in
xor
gs
mov
adc
out
loop
lahf
adc
jecxz
fs
adc
xor
adc
adc
add
test
cmp
jae
int
xchg
dec
lds
adc
imul
bound
pop
pop
sarl
dec
or
iret
mov
es
jns
arpl
mov
cmp
int
dec
ja
sbb
mov
sbb
lods
fs
pop
loop
xor
pop
sub
mov
push
jle
jecxz
pop
push
sub
movsb
cwtl
cmp
mov
mov
fwait
mov
insl
ds
cmp
insb
mull
fsubr
js
mov
adc
push
push
push
fmuls
or
pop
lods
sbb
push
ds
dec
xor
mov
fs
int
push
sub
bound
icebp
cmp
cmc
addr16
nop
mov
call
fdivrs
popa
jo
dec
mov
aas
sub
jne
xchg
outsl
loope
ror
cmpsb
pop
mov
out
cmp
fcmovb
fidivrs
divb
xchg
pop
in
jl
and
imul
mov
mov
adc
add
lds
cli
ljmp
in
jae
inc
rcrl
das
xor
popf
jnp
jns
into
out
sbb
ss
fldcw
xor
in
xchg
dec
jle
call
xlat
lea
dec
add
lea
aam
cmpb
je
sbb
push
mov
inc
imul
inc
mov
lahf
cmp
dec
cmpsw
out
pop
fimull
jae
dec
mov
add
insl
pop
inc
popa
cmc
sarb
lret
mov
lahf
cmc
gs
cmc
dec
mov
xor
paddw
jno
or
xor
fmuls
cmp
arpl
test
dec
jne
rcll
mov
dec
xchg
dec
jb
sbb
push
jecxz
cld
lret
lods
adc
mov
cwtl
in
in
dec
sub
jne
add
int3
fiaddl
push
push
in
sbb
xchg
dec
shrb
call
jp
call
mov
pop
mov
jns
xor
stos
xor
add
adc
inc
lods
hlt
mov
repnz
adc
jb
hlt
in
aam
mov
mov
add
mov
insl
clc
fisubrs
sub
mov
and
shlb
lret
mov
inc
and
xchg
fcmovnu
sbb
faddl
test
ds
std
fimuls
xchg
aas
arpl
imul
jo
lret
pop
ret
cli
repz
stc
jae
sub
rcrl
sub
and
nop
dec
hlt
sbb
aas
test
outsb
push
mov
popa
inc
cmpsl
nop
decb
jmp
loopne
sub
push
cmpsl
fwait
xor
addr16
push
cmp
enter
stos
std
test
outsl
mov
mov
mov
cmp
testb
sbb
or
jge
pop
ljmp
lcall
cmp
inc
pop
and
mov
lret
push
jmp
sahf
pop
fyl2x
rorl
jo
lock
push
xor
hlt
xor
dec
inc
or
mov
sahf
mov
lcall
inc
and
mov
or
ss
jle
xor
and
sbb
sub
mov
out
icebp
popa
js
xchg
int
hlt
cs
mov
sub
xor
add
mov
cli
pop
data16
movsl
jle
sub
mov
lods
sub
or
jnp
fs
icebp
stc
rolb
jecxz
dec
std
aam
fcomps
adc
sbbb
fnstsw
pop
scas
test
sbbl
mov
mov
lock
ret
insb
add
clc
cltd
fcompl
lcall
sbb
shl
sub
outsb
mov
and
orl
cli
divl
mov
ljmp
aas
jno
cmp
dec
add
pop
adc
daa
int
push
mov
clc
repz
dec
cld
push
xchg
lea
xor
push
pop
push
fnstenv
cwtl
xlat
mov
pop
sub
lods
xor
out
pop
mov
rcrb
mov
hlt
test
push
or
add
dec
cli
dec
cmp
xchg
cmp
xorl
pusha
add
mov
aad
sbb
lret
adc
push
adc
mov
and
mov
mov
cli
ss
jl
or
or
movsb
and
repnz
test
pop
mov
push
or
mov
ret
jmp
dec
in
stc
rcl
mov
push
pop
and
mov
ret
test
das
pusha
adc
dec
mov
mov
push
leave
add
fiadds
je
out
jnp
icebp
pop
jne,pn
dec
dec
mov
ss
mov
xchg
cltd
ljmp
popf
adc
scas
pop
xchg
ret
inc
push
jo
rcr
and
lea
dec
popf
lret
outsb
inc
pop
cli
sarl
jle
sbb
sub
mov
dec
jl
sub
sub
ret
mov
sub
xchg
jno
pop
xchg
sbb
shr
call
adc
pop
inc
push
mov
adc
jb
sub
mov
stc
inc
aaa
inc
pop
cmp
adc
sbb
bound
inc
push
push
mov
mov
sub
xor
adc
enter
jb
pop
jns
or
push
mov
sub
jmp
and
nop
adc
ss
mov
sbb
push
shll
mov
outsl
in
mov
sub
mov
cltd
sbb
mov
int3
in
shll
mov
sbb
movsl
adc
pop
cmp
xor
fldcw
lret
or
cli
imul
and
fwait
mov
cmp
mov
mov
xor
jne
iret
push
mov
push
repnz
sub
mov
arpl
jg
dec
xchg
jno
or
outsl
adc
leave
mov
mov
loope
xchg
int
insb
sahf
pop
pop
mov
sub
or
icebp
pop
jle
cmc
or
push
or
lret
xchg
jp
dec
adc
data16
inc
ss
or
xor
ss
loope
addr16
js
dec
ss
mov
sbb
jnp
cwtl
push
std
vrcpss
mov
mov
or
in
mov
ficompl
jne
push
push
ficoml
adc
push
or
xor
es
cs
stos
rolb
jno
push
jge
jns
in
cld
dec
jg
adc
rcr
inc
adc
jle
mov
xor
pop
mov
and
outsb
mov
jp
adc
xchg
adc
inc
popf
inc
ljmp
imul
into
repnz
in
xlat
in
cmpsb
fsubrs
add
sbb
gs
outsl
xlat
test
imul
movsb
aas
jge
sbb
sub
mov
and
js
or
hlt
in
fnstenv
cmp
shlb
ljmp
cmp
data16
dec
mov
pushf
cwtl
scas
jae
into
dec
cmp
inc
addb
inc
xchg
aas
lcall
mov
addr16
in
aam
lods
sub
add
js
jae
mov
lcall
jmp
adc
fcomps
pop
pop
mov
shrl
sub
clc
in
inc
push
cmp
fprem
or
lods
lret
aaa
jg
pop
lods
cli
das
sub
cmp
loopne
scas
sbb
shrb
mov
mov
frstor
stos
jns
sbb
sub
outsb
cwtl
cwtl
fs
loopne
push
ljmp
or
mov
mov
mov
mov
push
adc
pop
loopne
mov
loope
imul
test
xorl
daa
sub
jge
xchg
inc
dec
sbb
push
sub
sahf
loopne
call
rcrb
rol
scas
movsl
cli
inc
mov
shlb
addr16
xchg
cli
push
pop
outsl
std
cmp
cld
add
sub
inc
test
lahf
addr16
add
jecxz
jne
xchg
pop
add
inc
sub
or
int3
lahf
je
int
jl
idiv
push
ret
and
or
int
cmp
xor
fwait
jge
dec
dec
cmp
mov
jmp
xchg
mov
into
std
fmull
popf
popf
outsl
cmc
test
sub
mov
fcoml
pushf
test
or
stos
pop
and
add
mov
scas
mov
xchg
sub
imul
insl
mov
cmp
mov
mov
pushf
xor
addr16
inc
add
lods
add
aam
ret
shrb
rcll
rcrl
lret
sbb
loope
push
daa
inc
roll
out
stos
mov
into
repz
xor
pop
add
lret
xlat
mov
insl
push
rolb
cwtl
in
push
cmp
scas
lcallw
notl
mov
pop
push
and
test
or
lahf
aad
sbb
inc
rol
ret
int3
inc
push
push
aad
pop
sbb
sbb
mov
fidivrs
fidivrl
and
adc
addr16
sarb
stos
lods
push
push
xlat
popa
cli
xchg
scas
pop
addr16
adc
inc
add
and
add
dec
lahf
fcompl
xchg
int
fldt
jns
sbb
out
and
cmpb
pop
jle
adc
adc
fdiv
mov
stos
decl
xchg
loope
or
dec
bound
sbb
or
inc
mov
jno
fsubrl
adc
push
or
setge
or
mov
in
es
cmp
fwait
lock
data16
cmpsb
jbe
lret
rcl
int
mov
mov
or
and
push
fs
in
scas
scas
fsubl
and
cmp
xor
inc
dec
ljmp
mov
xor
into
int
leave
test
imul
outsb
or
cli
jns
test
dec
dec
cmp
ja
pop
or
ja
call
and
and
jb
pop
sub
pop
add
fs
dec
or
pusha
cmpsb
shrb
test
inc
mov
mov
scas
pop
or
mov
jp
aad
addr16
push
stc
enter
xchg
add
or
js
mov
enter
fidivrs
ret
or
in
jae
dec
inc
mov
mov
repz
imul
mov
lea
pusha
enter
add
adc
dec
daa
sbb
mov
outsb
jae
rcll
rol
stc
lds
push
int
ret
dec
mov
adc
xchg
loopne
dec
sub
mov
xchg
push
ljmp
inc
call
jns
xchg
in
pop
ljmp
sbb
andl
push
mov
fstl
cld
or
movsl
pop
push
rorb
out
out
push
mov
jl
cli
and
popa
pop
jge
pop
lret
mov
dec
cld
shrb
inc
insl
mov
sub
mov
dec
sbb
out
and
or
and
fwait
mov
add
cli
dec
sbb
mov
push
mov
or
cmpb
add
push
loope
adc
pusha
pause
mov
ja
add
mov
out
sub
sub
cmp
adc
loope
popa
xor
jmp
push
ja
cmp
outsl
push
xor
mov
cmpsl
push
push
mov
inc
jg
test
pusha
mov
and
test
pop
ret
ja
inc
pusha
sysret
arpl
add
push
lods
mov
cmp
jg
adc
push
inc
inc
aaa
pop
dec
jecxz
out
repnz
xor
and
lea
mov
or
out
repnz
mov
inc
icebp
addl
fcmovnb
cmp
or
cltd
mov
mov
lahf
pop
pushf
push
adc
or
jle
loope
int
or
stos
arpl
mov
add
imul
fadd
dec
push
mov
arpl
mov
stc
ljmp
jae
bound
js
jg
cli
and
rcrl
mov
xor
sub
repz
fisubrs
adc
loopne
stos
lock
mov
sbb
xor
mov
icebp
mov
in
es
fsubrs
sub
mov
xor
adc
dec
rorb
mov
sbb
inc
jnp
nop
xchg
add
insl
xchg
shrl
sub
push
insb
xchg
xchg
dec
repnz
sar
out
cmc
lods
push
shlb
data16
or
push
ja
add
pop
lret
pusha
mov
inc
push
call
push
xchg
iret
je
and
push
je
call
push
mov
and
icebp
lea
shrb
ljmp
addr16
xor
mov
inc
pusha
faddl
mov
pop
mov
mov
dec
andb
xchg
movsl
cmc
dec
push
stos
jge
jne
cmp
icebp
sbb
mov
dec
jmp
sahf
test
imul
mov
sbb
test
out
dec
jle
std
aad
aam
sarl
jl
add
stos
cmpsb
pop
jge
lods
cmp
mov
sub
xlat
push
mov
test
mov
xor
iret
movsl
idiv
sti
ja
mov
fisubrs
jmp
or
es
mov
cmpsb
xchg
fisubrl
cltd
inc
mov
xchg
sbb
pop
les
xchg
int3
lcall
or
inc
lea
and
lcall
es
lods
and
ret
sbb
xor
iret
push
jg
jbe
xor
jg
push
inc
movsl
jecxz
or
or
mov
adc
xchg
jl
jg
sub
lcall
fbld
repz
stc
lahf
test
int
lcall
jne
xor
je
dec
cmpsb
xor
inc
ret
push
dec
inc
hlt
push
jae
icebp
lds
pop
cld
push
dec
out
lahf
insb
cmp
cmp
aas
test
pop
push
pop
pop
adc
push
jp
out
stc
xor
rorl
add
xchg
xlat
addl
inc
jae
lods
rolb
xchg
mov
mov
xor
mov
ret
lret
jmp
mov
int3
xchg
xchg
pop
shll
fcoms
in
inc
cmp
jns
push
mov
sahf
sbb
pop
stos
dec
les
dec
inc
or
adc
testl
mov
push
pushf
ret
adc
imulb
call
add
and
dec
dec
adc
incl
stos
lret
pop
add
and
adc
mov
xchg
out
mov
jle
mov
fisubl
cmp
fwait
mov
movsb
fldt
dec
aad
aaa
and
dec
push
xchg
fistl
int3
loopne
lock
pop
dec
xchg
sarl
cwtl
or
add
enter
sub
out
mov
pop
dec
je
leave
sbb
mov
add
xor
outsb
pop
push
or
pop
in
loope
mov
cli
int
jns
jbe
movsl
lods
pop
enter
fwait
xor
add
adc
xchg
mov
insl
and
data16
push
icebp
aaa
pop
cmp
mov
insl
bound
les
and
cltd
pusha
or
mov
test
jnp
negl
repnz
xchg
and
lret
cmpsl
sub
mov
aaa
adc
mov
sahf
movsb
cltd
addr16
notl
mov
and
arpl
popa
push
mov
sbb
fldt
rorl
and
and
in
xchg
dec
add
popa
mov
xchg
rclb
jmp
pop
mov
mov
mov
lret
ljmp
jne
sub
scas
push
popf
add
push
lcall
pextrw
jle
xchg
mov
std
lea
pop
mov
aam
or
out
mov
mov
mov
inc
push
or
outsl
push
outsl
add
jle
sahf
mov
je
fs
int
leave
cmp
addb
in
mov
fcomps
imul
dec
dec
mov
hlt
adc
fs
insl
scas
xor
inc
test
dec
mov
dec
inc
sub
or
outsb
pop
xor
shrl
clc
jg
incl
jge
popa
dec
xchg
sub
sub
pop
pop
xchg
adc
in
push
mov
sub
adc
shrl
std
aad
push
insl
xorl
xor
pusha
adc
std
dec
pop
in
pop
dec
pop
mov
mov
dec
popa
bound
iret
ja
lods
adc
sbb
fisubs
loope
xor
cwtl
xor
add
sbb
jle
das
iret
andl
leave
sub
imul
jg
stos
loopne
jbe
sub
gs
sbbl
xor
ret
jno
jb
add
push
fxtract
and
and
sbb
jo
lods
mov
mov
data16
fs
lcall
jle
out
sbb
lea
jns
push
in
test
fidivl
incl
pop
dec
roll
fcoml
mov
xabort
push
cmp
fwait
add
gs
mov
jae
xlat
xchg
ret
out
mov
shrl
std
push
pushw
dec
xchg
mov
or
xchg
adc
arpl
or
in
mov
push
out
loopne
push
or
stc
das
ljmp
icebp
ljmp
mov
icebp
int3
mov
cmp
cmp
xchg
ret
lret
pushl
out
daa
mov
mov
add
out
pop
push
xor
js
or
insl
data16
dec
cld
stos
sbb
xchg
mov
iret
fisubrl
mov
adc
out
aam
es
mov
mov
lahf
call
dec
shlb
push
int
jne
je
mov
xor
jge
test
ret
xor
add
ja
imul
imulb
mov
sub
clc
push
xchg
ret
mov
or
mov
maskmovq
mull
fld
arpl
aas
out
inc
fsts
inc
dec
pop
push
cmc
rorb
push
inc
mov
lea
sbb
xchg
push
or
fcomps
fstl
in
push
sarb
ds
or
or
push
push
mov
lret
dec
aam
jmp
shrb
and
sub
cmc
cmc
lea
mov
push
jne
or
push
mov
jb
enter
aas
or
test
pop
movsl
add
push
cmpsl
mov
cmp
dec
in
shld
pop
cmp
lret
popf
cmp
cmp
ljmp
popa
pop
dec
cmpb
adc
mov
sub
or
popfw
sub
data16
push
icebp
stos
mov
std
xchg
in
jl
lods
inc
push
inc
cmc
sbb
xchg
pushf
xor
pop
ret
popa
aaa
mov
fwait
sti
call
push
fisttpll
iret
dec
pop
mov
hlt
fildl
pushf
daa
dec
jbe
subb
nop
or
lds
cli
test
dec
gs
icebp
andb
jo
and
iret
jo
pop
adc
inc
mov
out
dec
pop
pop
mov
xchg
cmp
jge
sbb
jbe
sbb
pop
add
mov
test
cli
ret
scas
mov
push
or
cmp
or
shlb
ds
inc
or
push
lret
rcll
incl
push
mov
push
popa
adc
lds
lret
loopne
lea
jae
outsl
pop
aam
popf
mov
iret
sub
repnz
imul
shlb
adc
ficoml
jmp
nop
mov
mov
pop
inc
push
jo
enter
adc
insb
xor
mov
pop
je
jne
push
sub
add
cmc
repnz
xchg
leave
xlat
push
and
add
push
pop
xor
push
aaa
scas
inc
add
inc
mov
loope
mov
into
inc
and
mov
pop
aas
xchg
add
rcl
adc
ljmp
inc
out
fnstsw
test
jg
pop
inc
mov
xchg
adc
enter
fisubrl
jnp
xchg
xor
cmpsl
mov
and
test
inc
xchg
dec
ret
mov
in
jno
mov
shrl
ss
imul
mov
in
bound
stos
sti
jle
xchg
jecxz
fwait
mov
xchg
stos
ljmp
jmp
pop
lds
adc
js
inc
mov
inc
cmc
inc
arpl
call
cmpsl
xor
adc
int3
scas
fldt
mov
add
add
inc
cmp
or
sbb
loop
cwtl
inc
adc
mov
dec
pop
scas
out
int
jns
xor
push
test
outsb
xor
xchg
jno
or
cmp
fisubs
xchg
es
sub
jnp
int
icebp
dec
sub
sbb
shll
popa
adc
test
or
xchg
faddl
out
arpl
inc
daa
mov
fcoms
pusha
outsb
lock
fsubs
adcb
and
adc
adc
rorb
jb
movsl
push
dec
dec
sbb
fwait
mov
or
out
xchg
push
je
mov
ds
mov
outsb
cld
dec
pop
loop
sbb
pushf
pop
mov
stos
imul
int3
dec
insb
sub
or
enter
pushf
int
shll
mov
out
sbb
mov
jno
mov
rcll
pop
ja
push
scas
into
and
cmpb
jbe
loop
and
test
test
add
jae
icebp
repz
pop
jle
mov
insb
je
aas
jns
fcmovne
ficompl
jns
inc
adc
jg
add
jnp
and
push
data16
lret
mov
cmp
cwtl
loop
inc
xchg
push
mov
add
sub
dec
push
popf
and
dec
out
fstl
orl
adc
leave
push
inc
insl
stos
pushf
cwtl
dec
fcoml
in
jge
rcrl
ret
out
std
mov
lea
pop
repz
xchg
movsb
pushf
loopne
leave
jecxz
push
xchg
or
xchg
ret
loopne
repnz
fiadds
les
fxch
cmp
lods
or
mov
cs
or
aam
dec
cld
movsl
popf
inc
mov
and
leave
bnd
movl
jl
mov
mov
sti
mov
jge
xor
pop
inc
call
push
mov
stos
inc
sarb
xor
call
cmp
imul
inc
xchg
lods
addb
data16
cmc
gs
into
repnz
cmp
lea
sub
adc
pop
dec
mov
fadds
ret
mov
aad
push
out
loopne
pop
pop
data16
in
insl
jo
mov
jno
lea
fs
and
adc
aam
xor
adc
outsb
dec
aaa
xchg
pop
xchg
pop
and
stos
pop
xchg
jmp
sbb
or
hlt
dec
gs
ss
add
ss
jmp
mov
sbb
lret
popa
mov
mov
inc
ss
mov
sbb
push
aas
test
sub
ret
mov
cs
imul
ja
inc
mov
int3
out
test
repnz
stos
jecxz
or
scas
pop
shlb
add
paddsw
mov
adc
inc
jmp
out
shrb
lea
fincstp
in
cmpsl
mov
in
mov
arpl
movsb
jl
mov
push
cwtl
push
shr
or
push
cmp
dec
das
daa
fcmove
mov
jbe
adc
cmp
jmp
cmc
mov
fiaddl
mov
fdivp
daa
mov
sub
inc
outsb
ret
imul
jae
dec
xlat
std
imul
mov
and
add
cmc
dec
ret
aam
jecxz
pop
inc
movsb
inc
mov
xlat
inc
aad
aam
loopne
fnsave
inc
adc
cmp
pop
or
popf
xor
test
pop
imul
mov
push
outsb
jg
xor
addr16
shll
mov
adc
add
inc
pop
adc
daa
ljmp
mov
pop
and
testl
std
push
popa
mov
cli
fsubrl
inc
cmp
pop
int3
popf
mov
pop
mov
inc
add
clc
mov
scas
std
out
xorb
and
and
cmpb
jp
in
out
rclb
cwtl
or
and
mov
cli
out
add
jmp
cmp
lcall
popf
cmp
push
mov
sub
mov
stc
aas
je
pop
test
repnz
fcmovne
cmpsl
in
outsb
arpl
xor
sub
fwait
enter
mov
pop
aad
mov
jecxz
call
sub
mov
ret
daa
cmpsl
hlt
into
dec
pusha
inc
nop
daa
js
push
mov
jno
out
arpl
je
lahf
test
call
pop
ja
bound
fldt
dec
mov
push
push
out
inc
fcmovbe
adc
gs
movsb
neg
jl
ret
adc
lcall
or
push
push
cmpsl
sahf
mov
sbb
enter
pop
and
outsb
dec
ss
fucomp
pop
aaa
dec
push
bnd
aam
mov
into
in
lods
ret
jge
fnstenv
sub
jge
xchg
and
shrb
inc
repnz
pop
repnz
sbb
outsl
inc
leave
or
xlat
cmc
adc
and
mov
sbb
into
pop
fwait
pop
in
aad
push
test
fistpl
pop
jae,pn
in
xchg
mov
inc
pop
mov
ljmp
cltd
out
arpl
cmc
mov
push
loop
add
lret
mov
mov
icebp
outsl
lds
lods
divps
cmp
pusha
jge
or
mov
pop
in
aas
dec
push
adc
push
xchg
push
push
pop
popa
out
push
xorl
xor
push
jecxz
and
xor
pop
pop
dec
icebp
jmp
fs
inc
cmp
sarl
inc
cmp
loop
cli
rcll
pop
jecxz
daa
cmp
lods
repz
lahf
or
stos
pop
mov
add
test
shrl
mov
nop
outsb
pop
inc
push
xor
dec
les
add
lahf
sub
cmpsb
and
xor
adc
push
cmpb
xchg
or
xor
or
shrb
or
jnp
mov
push
daa
lcall
push
adc
dec
sbb
mov
adc
mov
jg
test
mov
xor
sub
lahf
shlb
dec
xor
vmread
push
xor
inc
mov
push
cmp
push
inc
xor
xchg
iret
inc
add
mov
cltd
push
sub
ret
jmp
ss
je
sbb
jne
sub
cwtl
push
jb
fs
sub
dec
out
mov
xchg
shl
lret
fcmove
sbb
mov
rorb
mov
popa
es
pop
nop
imul
cld
fldl
pop
repz
or
iret
mov
cmp
xor
orb
mov
xlat
imul
stc
gs
aad
pop
das
clc
xchg
arpl
sarl
in
or
xor
test
les
rcr
push
mov
add
adc
lds
push
sub
adc
jmp
or
cmp
lock
xor
dec
inc
lds
repnz
xchg
aas
arpl
pushf
inc
inc
stc
mov
cmpsb
fwait
lods
mov
daa
fstps
mov
mov
cwtl
enter
mov
xor
add
push
xchg
dec
cmc
cmp
push
adc
and
data16
je
xor
int
xchg
pop
pusha
add
mov
mov
in
loopne
mov
lret
push
push
push
jb
mov
jbe
pop
into
xchg
sub
push
mov
das
or
dec
lret
push
sbb
jbe
xchg
mov
dec
repnz
adc
fisubl
loope
lahf
lahf
arpl
xchg
adc
dec
mov
sub
adc
mov
std
stos
sub
cli
dec
stos
setp
xchg
arpl
mov
shlb
js
cld
sbb
jbe
adc
xchg
push
repnz
mov
pop
sbb
pop
mov
iret
or
fcoms
arpl
imul
xchg
xor
xchg
xor
stos
sub
les
ljmp
push
icebp
pop
arpl
jl
cmc
out
xor
xchg
flds
push
notl
in
mov
sub
int
loope
sub
sub
push
dec
mov
repnz
adc
push
sub
mov
lret
cwtl
mov
push
xor
fisttpll
dec
jl
pop
repnz
mov
std
insb
imul
inc
das
push
fs
jmp
dec
leave
out
push
enter
pop
sub
andl
inc
mov
or
sub
xchg
pop
push
sarb
in
dec
and
jno
xchg
mov
in
sti
xchg
popf
push
cmc
sbb
ja
je
ror
sti
div
repnz
inc
or
add
pop
pop
gs
and
push
mov
xor
ja
pop
test
outsb
es
imul
xchg
andb
xor
addr16
popa
dec
enter
mov
jb,pt
int3
arpl
sub
cs
pop
xchg
mov
rolb
inc
xchg
adc
out
pop
mov
dec
les
dec
stos
cwtl
repnz
mov
shll
imul
lret
subb
adc
stos
stos
pop
or
pop
push
mov
sub
insl
scas
xchg
jnp
rcl
mov
fs
lods
inc
push
mov
nop
jmp
scas
pop
iret
js
or
stc
in
cmpsb
lret
dec
inc
inc
mov
jmp
mov
jmp
mov
insl
out
xchg
jp
dec
cmp
adc
adc
mov
sub
lods
fldt
andb
mov
pop
adc
ficoml
sbb
je
sub
sub
jecxz
ljmp
sub
inc
fidivrs
inc
aas
into
pop
xchg
arpl
sarb
cmp
in
ret
mov
and
sub
cmp
mov
frstor
xchg
jecxz
shld
mov
dec
int3
adc
roll
mov
xchg
inc
mov
dec
aad
cmpsl
push
mov
fdivrs
inc
mov
add
and
pushf
movsb
imul
push
js
dec
arpl
stos
push
in
add
scas
add
dec
int
sub
nop
push
cmc
jle
rorl
in
aam
jb
std
lods
push
mov
xor
push
add
push
sub
scas
mul
mov
je
ljmp
aaa
loopne
je
dec
push
pop
push
mov
mov
mov
nop
push
dec
pusha
xor
test
push
jle
popa
test
xor
xor
mov
xchg
mov
ja
clc
ret
or
repnz
jmp
dec
adc
cmpsl
cmp
icebp
mov
xor
dec
jb
out
mov
divl
insl
daa
idivb
mov
mov
add
jmp
inc
or
fistpl
in
inc
pop
std
cmpsl
mov
mov
or
xchg
xor
and
seta
aam
lgs
test
sbb
mov
vxorps
mov
dec
rcrb
adc
sub
test
mov
xorb
arpl
or
adc
push
xor
mov
adc
idiv
adc
xor
daa
mov
out
out
sarb
cmp
bound
in
fldenv
fwait
sbb
add
cmp
repz
scas
or
and
jbe
sbb
lods
aas
add
xchg
sbb
add
movsb
cmp
jo
and
int3
xchg
and
arpl
dec
and
dec
and
cmp
in
mov
scas
adc
cmpsb
jle
jns
test
push
negb
ret
jno
in
xlat
or
mov
stc
stos
dec
inc
push
in
or
ss
xor
xor
popf
jge
bound
stos
gs
sbb
outsb
fst
in
insb
push
out
leave
pushf
and
and
mov
and
ds
clc
inc
mov
cmp
ljmp
xchg
test
mov
shrl
cmp
fbstp
xchg
mov
jno
lret
adc
fchs
cmpsl
outsl
lcall
movsl
mov
out
fdivp
inc
test
sub
sbb
sbb
clc
dec
sbb
sti
push
arpl
mov
mov
sub
adc
aaa
and
pusha
mov
push
int3
jnp
sbb
cmc
mov
popf
inc
aam
xor
shrl
xchg
cmp
dec
jb
out
ja
adc
lock
scas
les
daa
js
cmp
xchg
lret
xchg
loope
mov
iret
test
shll
jnp
cmpsl
ss
adc
andb
das
inc
jge
or
and
sarl
pop
cli
repnz
push
pushf
lcall
mov
fwait
jne
push
lahf
mov
mov
jl
or
cmpsb
mov
cmp
push
out
xchg
mov
mov
xchg
xor
sub
cli
imul
hlt
or
mov
dec
lock
daa
dec
std
in
in
jnp
mov
cmp
bound
mov
fisttpl
mov
aad
out
lret
into
mov
jo
or
dec
fs
push
jae
fucomp
inc
cmpsl
inc
loopne
pushf
mov
in
rclb
inc
outsl
jge
nop
mov
add
ret
cwtl
leave
push
loopnew
xchg
dec
mov
lret
sahf
cmp
xor
mov
lahf
mov
mov
add
xchg
aaa
hlt
cmp
lock
insl
push
lret
nop
add
pop
dec
cmp
leave
lcall
push
add
decl
push
xor
popa
jb
cmpsl
aas
outsl
inc
mov
enter
cwtl
sub
sub
ja
mov
fmul
in
pop
gs
sbb
sbb
lds
lock
daa
push
icebp
rcrl
movsb
ss
out
sbb
std
cmovno
mov
inc
aaa
inc
jbe
insb
mov
jge
pusha
daa
sub
stc
lea
mov
push
test
int
test
jns
cmc
inc
mov
mov
mov
sahf
xor
adc
outsb
push
sbb
loop
repz
mov
fs
into
in
ret
mov
pop
pop
cwtl
cmp
clc
sbb
add
fs
xchg
jg
mov
nop
xor
ja
dec
cli
imul
loope
inc
adc
les
pop
dec
mov
mov
das
xlat
stos
mov
cmpsl
sub
pop
push
test
cmpsl
stos
ds
mov
int3
scas
std
cmpsb
add
pop
dec
pop
pop
pop
lods
adc
sbbb
push
rcrb
int
add
mov
hlt
sub
xchg
mov
and
lret
icebp
sub
aad
and
std
adc
mov
icebp
sbb
push
mov
lods
pop
inc
int3
popf
popf
call
xchg
cmpsl
in
and
mov
inc
jp
dec
lds
inc
mov
mov
mov
mov
xchg
xchg
push
fadd
fldl
dec
mov
dec
jbe
mov
jl
ret
or
mov
xchg
sbb
mov
sub
out
and
dec
gs
mov
push
into
xchg
add
std
addr16
or
imul
mov
adc
mov
lock
jb
sbbl
inc
cmp
push
push
mov
pop
pusha
int
jnp
insb
push
test
pop
sub
mov
cmc
jns
add
cld
jne
xchg
xor
fistl
ret
xchg
lods
adc
insl
stos
or
ja
xor
mov
jle
mov
mov
movb
sbb
subb
scas
call
jp
int
adc
mov
push
pop
or
shl
cmp
mov
lock
sbbb
movsl
pusha
mov
cltd
xchg
ljmp
movups
andb
movsb
lods
es
das
stos
popa
or
popa
movsl
cmp
xchg
mov
and
mov
out
aas
js
sub
fcom
xlat
mov
sbb
sub
sahf
ret
test
jno
ret
out
repz
sbb
cmp
adc
mov
sti
push
ficompl
das
shll
lods
aaa
mov
test
add
sub
mov
jae
jns
xchg
mov
aad
xor
cmp
sbb
adc
sub
cmp
cwtl
adc
and
cvttps2pi
mov
push
aad
in
push
lea
arpl
jg
in
mov
popf
pop
push
out
cwtl
scas
les
fwait
add
dec
and
xlat
mov
add
and
sbb
loope
in
ds
xchg
cmpsl
push
adc
lcall
scas
xor
scas
jbe
mov
push
inc
sub
cli
sbb
test
dec
push
faddl
cwtl
es
add
xchg
in
fists
loopne
jmp
dec
movsl
sub
lcall
mov
movsl
mov
sub
push
mov
mov
insb
jns
lea
das
mov
push
mov
sub
stos
stos
insb
push
adc
adc
adc
inc
stos
aad
iret
sbb
xor
mov
sub
fstl
push
mov
push
fbstp
pop
in
jne
push
add
mov
iret
lahf
adc
add
or
aad
nop
pop
inc
inc
lea
in
push
mov
sbb
mov
or
inc
lahf
loopne
sarb
sar
pop
sbb
in
stc
pop
adc
sub
xor
stos
cs
imul
test
lock
icebp
lret
lahf
add
or
xchg
mov
imul
lret
dec
sub
das
cmp
inc
xor
inc
pop
jnp
and
inc
andl
nop
dec
push
lock
mov
shl
cmp
mov
cmp
addl
mov
push
lods
xchg
ss
aas
adc
push
dec
xchg
cmp
lods
mov
js
pop
mov
mov
in
mov
pop
lcall
cmpsl
or
int
pop
jp
push
jne
mov
outsl
sub
xchg
mov
or
cmp
fidivs
repz
out
out
in
jmp
pop
mov
lahf
xchg
dec
inc
sbb
mov
push
add
mov
out
shlb
pop
push
jecxz
and
sub
lret
or
sbb
add
aam
pop
pop
sbb
movsl
mov
xchg
fnstenv
jno
imul
push
cmp
in
cmp
movl
and
aam
pop
adc
xchg
ss
mov
andl
sub
jae
lahf
pop
cmp
repz
xchg
push
jb
lods
insb
mov
out
je
setbe
ja
scas
xchg
push
call
mov
cmpsl
out
cmp
mov
cmp
aam
sarl
pop
inc
xchg
xlat
lret
jae
inc
imul
and
aas
xchg
mov
cs
dec
sbb
push
adc
aad
js
jecxz
in
push
push
lcall
test
cmpsb
cmpsb
ret
pop
aad
sahf
pop
push
sub
jmp
out
dec
xor
stc
std
scas
popf
inc
dec
push
lret
call
mov
jl
inc
sbb
ja
mov
sub
jnp
lcall
dec
inc
jl
movsl
jbe
cmpsl
pop
popf
lock
dec
mov
mov
loope
fwait
push
jl
jp
sub
or
and
push
mov
adc
xor
add
mov
test
cmp
pop
add
jnp
cmp
mov
int3
sub
ret
imul
sub
pop
movsl
mov
aas
scas
and
out
aam
popa
pop
repnz
dec
cmpsl
cmp
mov
xchg
cmc
arpl
test
add
pop
jnp
fs
mov
inc
push
lcall
inc
mov
mov
push
icebp
popa
xchg
pop
xor
hlt
sti
push
ror
cmpsl
fnstenv
dec
xchg
mov
sbb
push
xor
pop
mov
loop
sub
in
jmp
adc
cmp
cmpxchg
cmp
in
xlat
sti
idiv
and
insb
loop
incl
hlt
sbb
popa
mov
sbb
mov
cltd
or
cmpsl
jo
xchg
adc
xchg
lahf
push
sub
or
cmp
or
stc
pop
nop
out
sub
mov
mov
push
aas
xchg
jbe
clc
xchg
dec
into
sub
scas
mov
jp
outsb
orl
jae
mov
push
gs
shl
xor
pop
mov
rcrl
mov
xorb
stc
in
popf
mov
dec
scas
shrl
mov
lods
and
mov
jmp
sbb
xor
outsb
mov
add
jle
push
pushf
xchg
cli
mov
and
cmpsb
scas
sbb
mov
or
or
add
andb
xchg
scas
test
cmpsl
inc
dec
call
out
outsb
cmp
in
aas
addl
cwtl
pop
outsb
cmp
shrl
xor
fisttps
or
mov
sub
jb
fldenv
mov
pop
ss
lds
mov
or
cmpsb
rcl
and
and
pop
and
sbb
add
inc
test
cltd
jle
rorb
imul
mov
jbe
pop
or
inc
loop
xchg
xchg
and
sbb
sahf
add
in
subb
cld
scas
fimull
setg
sti
ss
out
je
in
xor
icebp
insl
out
and
jne
xchg
fwait
lds
call
or
pop
dec
or
sbb
dec
icebp
aaa
xor
les
pop
ljmp
jbe
fstps
loopne
add
mov
dec
mov
movsb
iret
repnz
push
add
mov
ja
push
lcall
jecxz
fnstsw
mov
inc
or
iret
sub
cltd
mov
mov
lret
cmpsb
stc
sahf
xor
pusha
fxch
rolb
loop
xchg
jle
pushf
or
push
mov
mov
push
test
inc
xchg
movsb
aam
jae
inc
repz
mov
mov
nop
roll
out
xor
test
sub
in
pop
popf
pop
xchg
dec
std
scas
loopne
xorb
rclb
fsub
cmp
mov
ja
fs
test
jecxz
mov
lret
mov
out
jecxz
ss
and
cmp
es
cmp
shrl
sbb
add
ss
adc
lods
stos
ja
sbb
les
mov
sub
test
mov
cwtl
mov
inc
out
push
pop
and
rcr
ficoms
xchg
test
xchg
andl
daa
or
adc
icebp
mov
std
out
fs
mov
in
in
inc
mov
jl
fs
push
cli
dec
mov
mov
and
xor
iret
sbb
aam
loop
push
xchg
mov
pusha
aad
add
into
cltd
pop
hlt
push
mov
dec
insb
fs
mov
bnd
ss
jmp
pusha
fbld
pop
mov
test
xchg
cld
jle
push
xor
aaa
iret
mul
inc
xor
test
mov
movsb
mov
cmp
test
xchg
mov
je
cld
mov
test
dec
shl
mov
or
jp
push
sbb
cmp
in
fcmovu
mov
std
mov
sbb
iret
out
pop
in
jbe
jecxz
jle
int
enter
inc
jge
pop
lea
shrb
inc
es
in
mov
or
lea
mov
jl
pop
cld
xchg
push
xlat
and
repz
pop
jp
jecxz
insb
xorl
cmp
adc
xchg
popf
ljmp
lcall
inc
popa
rcrb
stos
lds
in
cmp
xchg
mov
in
sub
inc
sub
shrl
aaa
pop
mov
in
jnp
rol
jmp
lret
adc
pushf
add
test
dec
sbb
jb
lcall
pop
inc
adc
stos
jbe
xchg
stos
inc
cmpsb
fstl
insb
mov
cmc
push
idivl
stos
and
pop
in
jns
popa
xor
push
add
pop
das
jne
call
hlt
ja
mov
jg
shll
cmc
push
xor
push
repz
add
mov
adc
imul
mov
or
mov
fbstp
or
rorb
mov
cltd
out
mov
add
mov
imul
cld
inc
loopne
or
cmp
std
rclb
fnsave
push
loopne
adc
dec
int3
and
cmp
rclb
xor
aam
add
or
cli
mov
inc
jno
add
inc
inc
ret
cmp
jns
enter
jno
in
pushf
adc
loop
jmp
sub
rcrb
xor
add
fisttpll
jl
sbb
mov
pop
dec
jo
lret
lret
mov
ss
xchg
inc
fxam
add
xchg
outsl
cmp
gs
xchg
mov
in
outsl
add
pushf
mov
cmp
mov
in
mov
mov
xchg
cmc
cld
inc
pop
push
inc
cld
inc
iret
push
dec
fcoms
shll
mov
in
xlat
mov
adc
mov
mov
imul
enter
outsl
inc
jp
and
test
push
xchg
adc
jbe
pop
insl
pusha
gs
mov
shll
sti
sbb
fwait
nop
cmpsl
adc
cwtl
sbb
adc
dec
fmull
dec
and
imulb
sbb
dec
sbb
jmp
stos
loopew
cmp
vpcmpeqd
mov
and
push
add
sarb
pushl
fldt
lahf
xor
out
mov
cmpsb
jno
sarl
sbb
int
xor
fs
out
push
mov
loop
test
pop
repz
adc
adc
pop
adc
jae
cmp
adc
stos
shlb
popa
lods
ret
dec
aaa
mov
ret
iret
popf
mov
fs
jae
addr16
xchg
mov
enter
xor
cmp
sbb
repz
add
call
inc
fsubl
addr16
clc
loopne
and
xor
jae
jb
sbb
sbb
test
adc
out
aad
imul
stos
push
icebp
movsl
mov
shlb
inc
adc
jb
lahf
xor
cmpsb
mov
dec
out
xchg
test
mov
mov
loop
popa
popa
jge
wbinvd
into
add
push
test
decl
inc
loop
rcrb
leave
daa
hlt
lods
mov
dec
out
jl
xlat
nop
enter
aas
outsl
das
jp
cli
xchg
pushf
lods
fldcw
out
cmp
stc
push
and
dec
clc
shll
es
mov
cld
leave
rolb
bound
add
add
imul
jne
jp
int3
sub
mov
cmp
fldenv
cmpsb
lea
int3
insl
clc
test
lods
mov
in
shll
cltd
mov
xor
lret
adc
adc
cmp
in
xchg
pop
push
xchg
sub
inc
lret
ds
mov
bound
clc
and
cmpsl
inc
lds
jbe
movsl
add
out
outsb
xchg
out
stos
test
xor
lods
xor
popf
les
pop
repnz
pop
and
dec
and
pop
or
xlat
mov
and
lods
inc
aad
mov
xor
and
push
mov
fisubs
mov
fcoml
mov
scas
es
xor
adc
aaa
loop
pop
nop
in
enter
add
mov
jo
xchg
pushf
cmp
insb
inc
adc
icebp
notb
jae
out
icebp
mov
push
cmpsb
andb
or
push
dec
mov
dec
xchg
mov
in
add
jnp
aam
mov
sbb
inc
jecxz
loopne
stos
sub
stos
lcall
out
pop
sbb
fxch
daa
add
jne
pushf
imulb
adc
stos
movsb
jae
insl
gs
movsl
sbb
mov
jle
dec
jl
jnp
push
push
or
pop
inc
fstps
hlt
dec
notl
scas
and
lret
xlat
mul
movsl
std
inc
sub
ss
mov
sub
sub
pop
bound
xchg
and
outsl
or
jl
jmp
out
fsubrl
jg
jbe
je
lods
or
adc
js
xor
push
add
imul
sub
mov
sbb
cmp
sub
ss
fstpl
sub
xchg
adc
jno
iret
lock
sbb
jecxz
gs
ja
mov
sahf
lock
mov
fistpll
into
out
xlat
jmp
mov
xchg
push
lret
mov
xchg
sarb
adc
push
roll
nop
cmp
aas
sub
sarb
jbe
je
jl
test
lods
sbb
cmpsl
mov
jg
popf
add
aam
je
pop
out
adc
shll
bound
aad
xor
or
adc
mov
inc
lahf
xchg
add
rcrb
adc
in
fwait
addb
into
add
lods
cmpsl
fsts
movsb
jo
out
aad
sub
xchg
mov
shlb
mov
daa
and
sub
dec
inc
mov
push
outsb
jge
inc
push
dec
imul
adc
int3
in
and
lcall
and
call
mov
je
pop
jmp
push
cmp
insb
cld
stos
or
ret
faddp
cltd
test
jns
mov
ja
lahf
xchg
mov
leave
enter
and
mov
sub
xor
xchg
aaa
je
xor
mulb
rcrb
dec
in
or
add
mov
jmp
dec
add
sub
shlb
les
fsubs
or
xor
mov
int3
mov
dec
ja
into
add
mov
xor
mov
out
mov
sub
jge
dec
sti
imul
xor
mov
out
dec
and
fdivl
hlt
movsb
sbb
sub
or
mov
enter
enter
xchg
jecxz
in
fdivr
lahf
fnstcw
cmp
loop
lods
loope
aaa
sub
arpl
subb
xchg
sti
aas
popa
mov
dec
mov
mov
mov
andl
jmp
or
stos
std
adc
inc
xor
fwait
and
ret
cmp
iret
pop
ret
lds
xor
rcr
push
lret
push
and
sub
dec
xor
cmp
rolb
jae
sti
cs
pop
add
and
dec
inc
dec
adc
std
insb
jae
push
mov
dec
jle
aaa
inc
fcomi
outsb
push
jp
inc
jne
cmpsl
aaa
int3
lahf
dec
jle
out
js
mov
je
mov
push
rorb
cld
test
cmpsb
movsl
push
sub
fstpl
out
mov
or
pop
rol
cmp
lea
int
js
mov
jl
sub
push
cmp
lcall
adc
mov
out
test
shrl
sti
mov
xor
and
xchg
add
add
jae
movsb
fdivr
test
out
cmp
or
push
shll
jge
aad
out
nop
movsl
arpl
js
leave
xor
push
mov
inc
in
mov
cmp
scas
mov
adc
loopne
imul
add
push
adcl
pop
xor
repnz
aad
xor
lcall
mov
cmp
loopne
ljmp
mov
inc
cmpsl
sub
lods
mov
fwait
aam
inc
lods
fs
xlat
sub
cwtl
pop
mov
dec
jnp
push
inc
sbb
sbb
xor
push
adc
or
jae
xchg
fwait
push
xor
jle
imul
test
fcom
in
ja
xchg
and
rcrl
jnp
lock
pop
repnz
ljmp
inc
lods
fistpll
sub
pop
fstps
call
dec
dec
xchg
jno
cmpsb
stos
add
sbb
mov
mov
push
or
xor
sbb
sub
popf
mov
lds
dec
xlat
and
xor
orb
jle
cmp
inc
xchg
sbb
adc
xchg
int
mov
adc
sbb
pop
mov
test
test
test
cmp
mov
movsl
stos
xorl
lds
push
outsb
mov
jmp
and
fxch
sub
adcb
push
sub
in
in
clc
xor
adcb
cli
movsb
data16
mov
sub
out
mov
mov
popf
popa
ret
jge
or
outsb
ja
imul
sbb
pop
shr
sahf
fcompp
testl
insl
mov
push
xchg
dec
fcoms
sbb
jl
xor
mov
cmp
inc
cmpsl
adc
fsub
arpl
ss
mov
xchg
pusha
jns
fcmove
clc
aad
in
cli
or
out
mov
cs
lea
jb
and
test
push
jle
jno
rorl
stos
loopne
lea
movsl
mov
mov
movsl
inc
push
mov
test
enter
dec
or
pop
pop
icebp
setp
roll
inc
mov
jae
dec
movsl
cmp
cmp
dec
scas
fs
sbb
sti
aaa
push
mov
jae
test
xchg
pop
test
xchg
pop
cltd
lea
cmpsb
xchg
or
or
adc
in
ret
aad
cli
xchg
mov
daa
aas
push
lcall
les
insb
add
adc
ljmp
es
orb
dec
nop
rorb
add
les
or
sar
mov
sti
icebp
call
jl
pop
sub
stos
inc
div
xor
push
xchg
sbb
lods
pop
jp
cmp
inc
inc
cmpsb
mov
xchg
aad
das
or
jae
inc
cmpsb
call
cmpsl
jg
in
out
icebp
add
leave
int
mov
adc
add
inc
loope
int3
adc
pop
xor
aad
clc
adc
mov
loopne
in
xchg
cli
mov
mov
lahf
lret
or
fisubrs
mov
mov
mov
dec
adc
mov
fimuls
leave
pop
sbb
push
sbbb
dec
add
jns
in
in
push
pusha
xchg
dec
xor
inc
xchg
mov
into
mov
add
sub
mov
cmp
ret
rcll
js
fmuls
clc
xchg
mov
addb
adc
sbbl
push
adc
cmp
cmpsb
shlb
sub
and
out
lahf
sbb
test
pop
and
jnp
inc
je
adcl
push
popl
js
mov
lds
xchg
jnp
sbb
imul
sbb
pushf
push
jb
into
into
lods
in
sub
push
add
pop
push
repz
pop
movsb
push
test
lock
jo
adc
xchg
lahf
mov
pusha
cmpsb
adc
mov
inc
jb
shlb
xchg
mov
daa
jl
xchg
dec
mov
pop
mov
ljmp
mov
pusha
add
test
stos
out
mov
test
ficompl
or
jae
xchg
dec
push
test
cmp
sbb
cmpsl
mov
pop
lret
fcomps
or
ret
fstpl
int3
jbe
insb
sbbb
cmp
cmp
fs
cmp
inc
adc
inc
fwait
push
adc
nop
js
xlat
mov
test
cmp
imulb
pop
push
nop
in
scas
loope
pop
push
repnz
push
sti
sahf
das
lcall
addl
dec
pop
scas
adc
push
rol
lds
cmp
pop
pushl
mov
data16
mov
daa
cmp
jne
sub
lret
test
xchg
mov
in
inc
xchg
fnstsw
sarb
and
fldl
stos
mov
xchg
in
cmp
icebp
psubusb
icebp
stos
mov
cmp
sub
or
ss
mov
sar
sahf
mul
pusha
and
mov
cmp
imul
icebp
xor
repz
adc
push
aaa
xor
movsb
faddl
pop
pop
xchg
dec
xor
aaa
aas
ficoms
shl
stos
jne
or
data16
sahf
lret
idiv
jno
es
stc
add
xchg
xor
sub
jp
push
loopne
xor
or
add
or
mov
inc
cmc
and
pop
int
pop
es
hlt
jg
adc
sti
xor
adc
into
mov
pop
mov
sbb
cmp
jne
mov
imul
in
test
popf
bound
insb
mov
adc
mov
roll
xchg
sbb
daa
push
sbb
or
in
mov
and
nop
fiaddl
sbb
mov
stos
push
push
inc
mov
call
mov
xor
imul
lcall
hlt
fs
fsubrl
bnd
cs
sub
rcrb
mov
adc
sub
mov
cld
daa
or
and
fidivs
cmpsb
sbb
sti
xchg
jmp
jns
or
adc
push
es
incb
inc
add
lods
pop
mov
mov
push
sahf
fldl
lcall
xchg
shll
sbb
dec
faddl
mov
hlt
mov
mov
movsb
adc
pop
int
mov
in
cwtl
and
fisttpl
jecxz
adc
cs
fiadds
mov
or
outsl
push
cmp
mov
lret
imul
sbb
mov
lds
xor
jo
pop
jp
inc
pop
dec
pop
sti
mov
mov
stos
dec
outsb
jge
inc
sub
mov
pop
fistpl
adc
movsl
push
push
dec
fs
test
jae
push
dec
and
call
sub
fsts
sub
push
add
push
jo
inc
dec
lcall
sbb
call
addr16
add
ds
or
and
scas
icebp
lcall
pusha
xor
repnz
in
notl
inc
in
push
xor
ret
mov
pop
inc
cli
mov
mov
aam
cmp
es
sti
xchg
in
pop
mov
sub
dec
sarl
in
jmp
inc
sub
test
lret
test
into
jno
jge
sub
xor
aam
dec
push
shlb
imul
fsts
sbb
sub
ja
in
and
push
push
jecxz
test
add
jge
xchg
xchg
mov
cmp
mov
xchg
fisttpl
jo
dec
shll
icebp
fs
xchg
insl
adc
mov
mov
sahf
inc
fnstsw
inc
call
jo
aaa
xchg
push
repnz
pop
imul
scas
jmp
jmp
push
lods
test
lret
add
out
xchg
pop
jb
cmp
sbb
push
adcb
dec
ja
stos
and
push
insb
out
cld
xchg
or
or
leave
add
imul
sub
test
pop
inc
xor
adc
repz
xor
mov
fucom
dec
or
or
push
push
mov
pop
or
sbb
xchg
in
cmp
loopne
js
ret
pop
dec
mov
test
cmp
and
xchg
or
add
add
xchg
stc
xchg
pop
insl
sahf
fistpll
test
pop
or
inc
cmp
pop
mov
andl
cwtl
loope
addl
cmc
inc
xor
lods
add
sbb
lods
mov
les
int3
mov
jbe
sbb
stos
jne
leave
mov
pop
inc
and
dec
gs
sub
xchg
dec
or
cld
loop
xlat
stos
rcrb
dec
push
push
shrb
adc
or
rcll
xor
mov
mov
scas
insb
cmp
xchg
jno
adc
mov
mov
push
fwait
dec
mov
add
ja
outsb
xor
and
cmp
loopne
fdivs
or
orl
inc
cld
jns
js
mov
lret
push
addr16
shll
sarb
lahf
popf
fcmovb
repz
dec
in
add
jns
mov
out
cmp
mov
adc
outsl
or
fwait
pop
scas
mov
push
movsl
mov
cmp
notl
out
popa
fdivrl
dec
sbb
xchg
dec
shl
jp
int
xor
iret
xorb
cmc
out
push
and
sbb
mov
inc
pop
jb
adc
push
pop
sub
xlat
xchg
aas
mov
xor
ret
pop
mov
push
pop
dec
dec
fcoms
loopne
lret
loope
mov
inc
cmc
adc
push
sub
call
gs
int3
mov
lcall
sbb
add
loope
or
inc
pusha
scas
xor
std
fnstenv
pushf
or
pop
mov
mov
dec
out
cmp
jbe
push
insb
cs
movsb
push
mov
mov
into
pop
push
out
cmp
jmp
cmpsl
push
mov
jl
jno
cmc
cmpsl
jmp
ror
sbb
dec
sub
js
dec
sbb
xchg
sbbb
divl
pop
push
lret
jp
ret
adcl
popf
add
scas
pop
lret
call
xor
roll
test
xor
rcl
push
sahf
sbb
pop
jno
fnsave
xchg
dec
push
jecxz
and
pop
mov
jns
lea
cli
xor
xchg
cmpsl
inc
add
insb
je
aas
xor
adc
lock
cltd
mov
imul
rclb
clc
jns
ficompl
fisttps
out
adc
mov
loop
mov
pop
fdivs
xor
nop
es
in
lret
jmp
dec
or
xchg
hlt
adc
loope
cmpsl
jns
repz
xor
add
shll
hlt
in
jns
sub
xchg
in
and
xor
cmp
pop
mov
push
ss
das
popf
push
pushf
xchg
adcl
aad
popf
ja
hlt
fistps
cld
jmp
in
nop
cli
js
test
shrb
subb
in
adc
movsb
test
aad
cmpsl
addr16
fsubs
rcrb
rcr
mov
in
ds
dec
jb
sti
andl
lds
or
sbb
enter
xor
push
out
int
in
or
lds
out
inc
jae
add
xchg
add
mov
mov
mov
push
mov
ret
add
arpl
and
aas
lock
pop
nop
fnstenv
int
push
adc
aas
mov
cmp
inc
scas
inc
outsl
fbld
imul
mov
jge
rcrb
fdivrp
arpl
jno
cmp
adc
mov
data16
pushf
movb
jbe
jl
stc
pushf
mull
nop
pushf
mov
nop
and
das
mov
jo
sbb
mov
xor
outsb
adc
dec
les
xchg
ret
popf
xchg
mov
shl
stos
imul
cwtl
mov
cli
faddl
test
or
sbb
push
das
ret
mov
lods
push
leave
dec
leave
adc
pop
pop
jb
je
cmp
iret
and
pop
mov
lods
test
and
sbb
rclb
fsubl
cli
jp
loop
out
lcall
cs
push
adc
in
test
mov
stos
les
adc
imul
jne
stc
xchg
sub
sbb
repnz
cltd
fadds
fsubs
pop
mov
lods
pop
mov
xor
movsl
mov
testl
int
adc
push
xchg
and
aad
hlt
xor
pop
ret
clc
adc
lret
pop
adcl
mov
divb
adc
mov
xor
ljmp
pusha
and
into
inc
dec
xchg
lret
sbb
dec
adc
imul
dec
xor
out
test
xchg
or
lods
sub
in
dec
in
jmp
out
shlb
pushf
mov
sub
jb
in
or
push
bsr
dec
fcompl
outsl
sbb
inc
push
pop
dec
push
or
pop
outsl
sbb
push
push
cld
in
cmp
cmp
test
mov
adc
ret
out
xchg
jmp
ror
stos
xor
sbb
or
roll
imul
jns
xor
mov
and
adc
nop
aam
lock
sbb
aas
ficomps
add
ja
and
clc
or
popa
xchg
dec
mov
movsb
dec
aam
cs
or
xchg
rsqrtps
pushf
sbb
bound
dec
push
rorl
nop
rclb
xor
pushf
mov
into
cmc
lahf
in
xor
pop
add
nop
aad
lcall
aam
repz
lods
xor
sub
subl
mov
cltd
stc
ss
jae
jle
pop
mul
pop
lahf
mov
dec
loop
cwtl
pop
and
add
adc
add
push
and
jo
mov
inc
mov
jbe
daa
mov
jae
sbb
dec
punpckhdq
testl
mov
insb
fldenv
sub
push
mov
jmp
imul
xor
mov
inc
xor
sub
pop
lea
mov
add
mov
aas
xchg
addr16
cmp
mov
sub
data16
ret
test
fists
or
negb
cmpsb
loop
mov
subb
dec
dec
dec
pop
je
addr16
stos
add
fs
sbb
sub
and
mov
push
jmp
loop
sbb
push
xor
ret
rcrl
pop
addr16
shll
orb
jno
pop
push
movsl
cmp
test
test
into
iret
test
mov
ret
fwait
mov
dec
lea
fistpll
jb
add
inc
movsb
mov
test
into
sbb
ja
std
push
arpl
jno
insb
imul
push
sbb
pusha
pop
add
lret
mov
fmull
pop
push
and
mov
push
movsl
ret
sub
out
mov
xchg
ret
push
jo
mov
cmp
sti
scas
addr16
push
jmp
daa
sahf
ret
and
xor
xchg
xchg
dec
push
sahf
jge
stc
xchg
shr
jge
aaa
cld
dec
test
cmp
jns
arpl
mov
push
subb
xchg
jl
dec
cli
lods
fwait
test
sarb
ss
cmp
sub
xor
adc
into
push
gs
jns
mov
ds
or
jp
pop
jns
mov
inc
mov
mov
gs
push
sbb
cmp
insb
sahf
dec
jmp
xchg
test
cwtl
test
pop
lea
hlt
add
adcb
or
fsubp
neg
add
test
mov
mov
ret
dec
dec
inc
pop
jne
jne
nop
pop
in
add
rol
clc
push
and
fsubrs
fwait
xor
pop
test
scas
je
in
mov
pop
adc
jo
fldt
movsb
dec
subps
test
or
mov
adcl
push
sbb
mov
out
pop
dec
daa
ret
sbb
and
or
lock
fst
lret
sub
push
fldt
outsb
data16
xlat
nop
mov
or
loope
xor
mov
ficoml
mov
out
jbe
movsl
push
lret
stc
mov
add
mov
push
push
cmp
add
sub
xchg
pop
fcmovne
ljmp
mov
sbb
ret
fcmovne
icebp
sub
dec
mov
add
cmp
das
cmp
sbb
xor
lods
mov
sbb
out
icebp
jecxz
sti
and
in
out
add
mov
pusha
out
nop
aam
movsb
imul
lret
and
pop
std
xor
adc
shlb
ffreep
jmp
cmp
xlat
push
sbb
in
dec
movsb
test
inc
jle,pt
dec
cmpl
repz
ljmp
adc
xor
mov
mov
call
push
pop
cmp
out
push
adc
sbb
jge
cltd
pushf
insl
fdiv
xorl
cli
push
imul
adc
pop
cwtl
mov
js
cmpsl
mov
jp
iret
push
sub
cld
popf
nop
test
test
dec
nop
jne
xlat
scas
stos
fs
push
or
mov
fidivl
jne
lods
fwait
out
xlat
or
jb
clc
outsl
stos
or
mov
ret
push
in
pop
mov
inc
out
repz
data16
or
out
aaa
fbld
lock
push
fs
mov
ret
push
xor
imul
aaa
add
fadds
cs
push
sti
daa
jae
or
xchg
pop
int
xchg
push
je
xor
xchg
sbb
jecxz
fucom
fldt
and
popf
cmpsl
loopne
rcrl
mov
mov
insb
sarl
lods
dec
and
cmp
push
mov
out
ficoml
add
fsubp
adc
fmuls
xor
popa
cli
dec
add
loopne
enter
leave
jecxz
push
pushf
sahf
sbb
daa
ss
sbb
stos
xlat
pusha
jo
lea
loop
dec
pop
repnz
push
xchg
ror
mov
popf
pop
mov
clc
loopne
mov
push
sbb
push
hlt
test
pop
mov
in
ret
push
jbe
jns
pop
sbb
sub
mov
pop
or
or
add
pop
mov
adc
stos
cmp
add
sbb
mov
sbb
pop
jmp
sahf
mov
cwtl
movl
xchg
in
icebp
add
sbb
test
or
xor
jo
sbb
mov
es
cmp
mov
add
jae
icebp
lret
mov
loop
lahf
mov
sub
mov
and
adc
dec
orb
mov
push
leave
xchg
mov
sub
sub
cmp
pop
xchg
mov
push
subb
push
popa
lahf
adc
push
mov
cld
fwait
test
arpl
mov
nop
mov
clc
movb
push
pop
enter
push
jmp
xlat
cwtl
fdivrl
lds
fwait
or
push
lock
push
push
lcall
xchg
sbb
js
sarb
rorb
sbb
push
cld
out
ja
sti
pop
std
xor
scas
push
arpl
enter
push
int3
sub
and
inc
or
gs
xchg
add
ret
lds
or
pop
out
ds
jae
sbb
imul
movl
and
xor
outsb
adc
fidivrl
lods
cmp
stc
lahf
or
or
or
aas
pusha
ret
xchg
add
shlb
add
sar
sub
push
mov
mov
fadds
xchg
lods
sbbl
adc
iret
lahf
xchg
add
adc
hlt
xchg
adc
dec
dec
adc
adc
add
cs
scas
push
in
xor
mov
push
sti
scas
scas
add
loopne
and
mov
xchg
ljmp
xor
mov
pop
sbb
in
popf
iret
fnstenv
pop
xchg
sub
in
sub
add
mov
lods
movl
push
xor
pop
popl
inc
pop
or
and
sub
imul
test
je
pop
aaa
mov
in
xlat
inc
dec
rolb
out
push
mov
outsb
dec
cmpsl
gs
and
hlt
mov
fldt
mov
imull
fs
je
lea
cmp
dec
std
xchg
push
mov
add
int
xlat
dec
mov
into
arpl
gs
das
ja
xor
inc
push
mov
in
adc
cmp
in
sbb
inc
popa
jns
pop
arpl
outsb
shrl
pop
and
push
and
sub
and
scas
add
adc
inc
mov
mov
and
icebp
dec
pop
lret
aad
outsl
cmp
aaa
add
push
xchg
jne
lret
push
mov
dec
and
loop
xchg
aaa
mov
dec
int3
add
mov
hlt
pop
loope
mov
sub
insl
ljmp
movsl
out
daa
dec
loope
cmpsl
add
ret
inc
xchg
mov
lret
leave
inc
sub
stos
xchg
pop
dec
xor
out
mov
sahf
or
mov
aas
sar
inc
outsl
testb
cmp
lods
out
popa
push
adc
mov
insb
push
add
dec
insl
mov
ret
jp
test
cs
sub
mov
cmp
push
movsb
aam
xchg
mov
add
or
add
hlt
push
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
adc
add
add
add
add
add
add
push
add
adcb
add
add
mov
pop
add
dec
pop
add
xor
add
add
add
add
xchg
adc
add
adc
add
gs
gs
push
dec
add
je
outsl
jb
popa
je
gs
imul
dec
popa
jns
jb
gs
imul
jae
push
push
inc
push
gs
insb
je
