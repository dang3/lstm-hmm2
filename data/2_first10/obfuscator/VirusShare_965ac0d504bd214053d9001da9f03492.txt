push
call
ret
ret
aas
jle
and
inc
sub
faddp
shrb
lea
lret
lock
and
into
mov
pop
int3
push
inc
jo
in
mov
jno
push
jne
sub
enter
cmc
pop
xchg
insl
cmpsb
pop
hlt
leave
fnstenv
fwait
mov
inc
loopne
add
cld
mov
pop
lret
nop
mov
loope
arpl
sub
push
or
push
cmp
xchg
std
aas
xchg
fmull
add
ds
in
into
test
nop
daa
xchg
push
dec
rcll
test
jno
and
cs
stc
aas
js
xor
or
rcrl
xor
clc
or
cmc
dec
repz
adc
into
mov
in
sub
stos
loopne
in
daa
xchg
loope
jge
ss
jb
repz
shlb
mov
adc
sbbb
sbb
int3
cmp
mov
mov
iret
sbb
push
push
xchg
pop
pop
test
add
mov
pop
xor
jmp
xchg
inc
fdivp
sbbb
or
push
lret
or
icebp
and
push
int
mov
mov
pusha
lcall
leave
shrl
mov
or
inc
mov
cmove
or
xchg
pop
push
lea
mov
jp
push
xchg
int3
into
icebp
lcall
xchg
mov
and
sar
jae
xchg
inc
sbb
cmp
scas
and
aas
xchg
mov
pop
les
push
adc
xchg
icebp
je
shl
or
gs
lret
fimuls
icebp
push
add
aam
stc
xchg
inc
jbe
jnp
loopne
pop
cwtl
in
jbe
jge
jae
test
out
ss
add
mov
jl
ret
cmpsb
inc
and
in
into
jle
push
ret
lds
push
dec
test
push
sarl
sbb
pop
dec
cmpsl
ss
std
pop
jne
mov
inc
mov
add
push
cmp
mov
jecxz
jecxz
test
sti
ret
es
ret
jmp
push
push
push
outsl
or
push
shlb
stc
xor
dec
and
or
push
movl
scas
xchg
jecxz
test
mov
mov
fimull
add
hlt
jmp
cmp
add
cmp
mov
iret
pop
xlat
gs
mov
push
mov
out
loope
pop
xchg
fildl
imul
push
adcl
insl
cmp
mov
pop
dec
inc
aad
or
or
sub
xchg
push
sbb
aas
aad
data16
mov
jl
xor
xchg
pushf
inc
hlt
call
adc
fldt
leave
popf
add
xor
movsl
pop
mov
fcmovbe
out
xlat
add
in
xchg
pop
sub
loope
inc
add
sbbl
push
fcmovnb
xlat
scas
pusha
xor
sahf
int3
aad
sub
cmpsl
cmp
sarl
mov
cmp
je
pop
je
mov
mov
push
cmp
and
mov
test
faddl
popf
xchg
imul
and
push
push
in
hlt
ret
in
inc
inc
xor
rolb
pop
xlat
push
xchg
mov
mov
cmpsl
push
or
push
aad
xor
push
pop
mov
push
leave
inc
push
push
enter
xchg
jae
ret
jg
xor
test
cmp
or
inc
bound
mov
dec
cmp
gs
jne
xchg
sbb
data16
into
and
dec
movsb
daa
test
dec
xchg
insl
add
in
push
xor
mov
pop
stos
call
jo
and
cwtl
mov
leave
dec
ss
pop
and
int
xor
jbe
and
mov
in
pushf
xor
sub
add
xchg
jne
push
ljmp
fistl
aas
and
pop
xchg
mov
pop
addr16
mov
fs
insl
lds
mov
mov
add
pushf
push
push
divl
xor
idivl
mov
lret
mov
mov
add
and
push
lret
orl
cli
pop
cwtl
inc
insb
aad
xchg
bswap
xor
insl
push
addr16
dec
adc
sub
ja
push
and
sbb
outsb
mov
loop
xor
dec
or
sub
sahf
imul
mov
mov
pop
repz
push
and
nop
data16
sti
int3
popf
cmpsl
out
je
cwtl
out
push
cwtl
hlt
mov
pop
loope
in
mov
sub
xor
dec
and
add
mov
out
rorb
int3
gs
outsl
scas
xor
stc
mov
inc
mov
hlt
ret
jne
dec
das
cld
inc
adc
jae
loop
or
xchg
sbb
pop
xchg
dec
or
popf
test
xchg
out
dec
inc
mov
filds
add
sbb
mov
lock
add
rolb
fdivrl
sub
add
movsw
adc
into
ret
std
stc
ret
fmuls
mov
and
add
mov
in
jecxz
push
jb
mov
stos
iret
movsb
mov
jb
mov
and
insl
out
int3
mov
sub
mov
bound
jnp
loop
inc
addr16
push
je
inc
cmpsb
inc
push
lea
mov
inc
popf
mov
mov
test
test
mov
xchg
dec
lret
mov
stc
dec
xor
cmpsb
mov
mov
sti
cmc
adc
icebp
pop
outsl
in
pop
jnp
ret
mov
xlat
mov
loopne
and
les
adc
mov
lahf
cmp
jae
dec
mov
daa
sbb
hlt
sahf
shlb
out
repz
dec
sahf
popf
lds
data16
cmpsb
repnz
shl
les
xchg
sub
repz
rol
push
loopne
push
sbb
xor
loope
fsubs
cmpsl
aad
cmp
inc
ljmp
push
sub
ret
mov
adc
lahf
pop
pop
inc
push
push
iret
inc
ja
les
mov
xchg
push
test
dec
stc
repnz
je
sub
loope
lcall
add
mov
xchg
xchg
scas
cmp
and
and
jb
pop
dec
dec
int3
lret
test
push
insl
jae
inc
dec
aad
arpl
mov
lods
std
subl
pop
sbb
lcall
xor
cmp
adc
dec
shlb
push
mov
fldl
mov
lcall
mov
out
cltd
mov
ja
pop
dec
iret
pop
mov
sbb
sub
dec
scas
test
je
xchg
ds
mov
and
jbe
scas
adc
fisttpll
mov
jae
dec
pop
insl
mov
mov
arpl
and
loopne
xchg
sbb
push
push
test
in
sbb
mov
mov
int
leave
push
adc
rcrl
cmpb
inc
inc
mov
insl
inc
insl
je
xlat
cs
mov
ficoms
orb
loope
rep
in
cld
cmp
addr16
sub
repz
in
pushf
xor
push
xor
xchg
imul
xchg
lahf
ret
and
in
in
cmp
fistl
xor
push
rol
sub
inc
add
or
fwait
pop
sbb
jle
push
dec
popa
cwtl
mov
cmp
sbb
rol
dec
test
ds
add
inc
inc
scas
aas
add
into
out
xchg
test
js
ds
dec
iret
jmp
lret
mov
push
and
jle
sbb
shll
and
and
lock
dec
pop
mov
cltd
inc
sub
fscale
mov
push
jns
loopne
cs
mov
jp
popf
push
xor
sub
pop
leave
add
inc
push
mov
jp
lods
fidivrl
sub
and
sarb
orl
cmp
cld
adc
sbb
jmp
aaa
push
push
movsb
outsb
push
pushw
inc
jmp
and
mov
sub
pop
mov
repz
inc
dec
xchg
pop
fadds
popf
xchg
mov
pusha
jge
ret
cli
add
divl
jmp
idivl
adc
aad
dec
xchg
dec
or
ret
lcall
ret
jnp
inc
jmp
mov
jecxz
or
sub
clc
ss
je
push
xor
lcall
popf
xor
ret
sub
sub
mov
mov
fisttpl
call
push
push
insb
or
mov
in
jb
push
call
add
clc
mov
pop
add
adc
je
roll
add
push
jns
repz
out
test
mov
adc
leave
sub
mov
mov
inc
in
dec
cmovns
mov
mov
pop
int3
sub
popa
movb
mov
dec
lods
sarb
out
jb
inc
test
cmpsb
fnstenv
adc
imull
xor
xchg
imul
add
sub
pop
pop
xchg
pop
cmp
ret
pop
xchg
push
inc
lea
lock
jmp
pop
add
cmpsb
mov
sbb
mov
or
sbb
cmc
std
js
push
sub
inc
jg
fdivrs
dec
cmpsl
sbb
scas
sub
dec
pop
xchg
mov
and
dec
cmp
mov
add
xchg
push
nop
push
adcb
push
adc
stc
aas
pop
mov
sub
mov
fcomps
push
xor
inc
in
insl
shlb
dec
lret
inc
ret
xor
popf
es
decl
xlat
enter
lock
call
jb
lret
cmp
mov
mulb
pop
or
fisubrs
jnp
testl
cmp
pop
jmp
mov
test
jmp
xlat
push
std
aaa
aam
mov
cmp
into
fwait
xchg
sbbb
pop
inc
dec
mov
dec
jnp
ret
ret
xchg
mov
loop
bound
aam
fists
movsb
rcll
xchg
roll
and
xchg
or
add
sbb
xchg
pop
stos
cs
aas
dec
pushf
pushf
cld
fxch
lods
je
pop
push
push
cmp
mov
push
mov
mov
jns
in
adc
bound
mov
xchg
and
fldl
lods
fdivr
aas
mov
divb
into
hlt
out
je
lods
orl
sbb
mov
mov
sar
xchg
dec
out
pusha
pop
mov
or
xchg
ljmp
inc
loopne
sub
jl
xchg
sahf
jb
jo
pop
sbb
xor
cld
mov
xor
cmp
repz
cmp
sub
xchg
pop
std
frstor
jae
cmp
loop
jb
sahf
jge
sti
add
jnp
sub
xchg
xchg
cmp
int3
add
cmp
stc
in
push
js
xchg
lcall
daa
and
push
jne
popf
pop
inc
call
in
jl
lea
jnp
mov
or
shll
gs
mov
xchg
jle
inc
xor
outsl
nop
xchg
imul
fwait
in
in
lods
insb
push
or
xor
std
cmp
xor
popa
mov
push
jmp
ja
mov
jecxz
popf
cs
out
pop
in
or
add
push
scas
xchg
popa
ror
sbb
inc
mov
outsb
push
jne
push
shlb
sbb
ljmp
cmc
shlb
xorb
loope
lret
cltd
in
shrl
or
movsb
int3
jle
pusha
stos
insb
mov
les
cmpsb
aas
fiaddl
sbb
xor
inc
cli
addr16
and
sbb
mov
fidivrl
adc
push
fs
push
jb
aad
cmpsb
sahf
lret
inc
pop
into
test
xchg
dec
fidivrl
clc
mov
adc
sub
add
iret
andl
shll
icebp
adc
jae
outsl
addr16
pop
and
mov
fwait
mov
sub
andb
push
and
sub
xor
mov
and
rorb
adc
mov
sbb
test
add
push
loop
xchg
insl
cs
addb
lock
cs
pop
adc
sub
xor
shlb
pop
pop
fsubrl
imul
and
push
inc
mov
xor
int
xchg
popf
scas
in
clc
js
sahf
sbb
imul
hlt
mov
ja
lret
add
nop
jg
jp
inc
insb
mov
push
cld
mov
push
ss
in
adc
pop
outsl
imul
add
orb
fdivrl
pusha
lock
and
enter
imul
lock
aam
mov
js
iret
or
mull
fiadds
out
and
push
pop
mov
lods
cltd
cli
scas
icebp
sahf
hlt
mov
pop
scas
orl
inc
mov
sub
fwait
xchg
xchg
sbb
scas
pop
inc
jbe
add
mov
xchg
adc
sarb
lods
cmp
popa
jge
lods
out
fdivrl
test
fnstenv
mov
loop
or
pop
into
sub
and
leave
jo
aad
xor
jno
movsb
push
stos
and
jo
jo
loopne
add
mov
mov
xlat
int3
in
dec
les
lds
fldl
in
inc
mov
punpcklwd
and
imul
sbb
sarl
das
lea
arpl
aad
and
pop
cmp
adc
test
jo
shl
and
call
les
mov
mov
cwtl
fwait
xchg
mov
push
aas
scas
pop
scas
pop
jbe
test
add
mov
int3
loope
inc
adc
dec
push
lcall
lods
fucomp
int3
push
inc
xor
aad
dec
popa
addr16
mov
movsl
dec
bound
out
stc
push
ret
aas
movsl
jg
lret
push
mov
cmp
js
mov
push
lock
fcomps
push
lret
xchg
aam
rclb
pop
pop
cmp
inc
mov
cmpl
jp
cld
test
aad
test
add
xor
jge
push
ret
fsubp
pop
pop
notb
gs
jle
inc
push
scas
movsb
add
push
jb
adc
fs
jmp
mov
xchg
bound
movsl
dec
push
sub
adc
aas
fcmovu
mov
push
sarb
leave
test
data16
pop
mov
cmc
aad
mov
int3
loopne
ja
xchg
xor
jne
xor
lea
es
mov
sbb
adc
push
mov
push
repz
xor
jge
add
outsl
xor
in
or
dec
xchg
call
adc
mov
mov
lret
pop
mov
jne
scas
or
xchg
adc
inc
loope
sub
sub
test
arpl
sub
xchg
push
aad
clc
imulb
shll
rol
inc
clc
cld
ret
add
jge
insb
or
pop
mov
add
idiv
push
dec
pop
decb
mov
xor
mov
mov
push
scas
cmpsl
and
push
or
adc
and
mov
aam
sub
sbb
and
dec
shrl
cltd
mov
and
stos
push
cmp
nop
movsb
sub
adc
aad
xchg
lcall
push
xor
xchg
lods
lds
popa
sahf
leave
out
gs
mov
mov
into
jne
and
das
and
rclb
test
xor
in
test
test
mov
ja
aas
cmp
mov
sarl
lods
push
sub
aam
fucomi
enter
jmp
gs
test
jecxz
insb
mov
xchg
inc
lea
pop
cmp
mov
mov
add
sahf
cmp
inc
scas
cmc
or
push
pop
sbb
inc
mov
dec
jno
push
or
sub
sbb
int
cltd
lock
add
cmp
imul
lret
cmp
imul
loopne
push
les
rorb
std
je
jno
movsb
into
dec
push
hlt
pop
inc
xor
sub
mov
push
xchg
sbb
les
cwtl
je
pop
dec
andb
push
mov
xlat
adc
out
std
push
loopne
scas
pop
or
and
pusha
lods
mov
pop
pop
inc
dec
loopne
adc
popa
mov
fadd
test
orb
test
das
pop
out
push
std
adc
scas
js
leave
xor
in
fists
sub
nop
iret
push
into
in
jo
mov
cmp
imul
popf
jbe
popf
or
sbb
dec
dec
fstpt
cld
mov
outsl
push
or
or
jo
push
and
int
into
pop
sub
imul
out
out
pop
push
dec
push
jecxz
or
or
shlb
xchg
cwtl
xchg
pop
mov
aas
xlat
lahf
adc
xchg
ds
mov
sahf
or
jne
incl
xor
lret
cs
and
dec
add
sub
popf
scas
jmp
pop
push
rcrb
xor
jl
xor
pop
mov
fwait
ljmp
out
call
cmp
out
out
or
lock
add
push
imul
jae
push
adc
sub
es
jb
xor
jg
scas
repnz
xacquire
cmpsl
push
fstpt
jne
mov
mov
loope
imul
test
add
addl
and
add
inc
es
mov
push
pop
jns
push
or
sahf
dec
pop
dec
add
test
leave
notl
test
test
xchg
fisttpl
imul
lcall
pop
jg
imul
sbb
fists
mov
mov
xchg
rolb
rorb
cmc
sbb
push
repz
lods
push
inc
leave
or
cmpsb
mov
aaa
pushf
out
rcr
mov
mov
push
pop
loopne
mov
imul
push
cmp
pop
add
lods
rclb
push
stos
into
pop
hlt
sbb
inc
fisubl
jle
dec
sub
mov
dec
cltd
sarb
cld
xor
xor
adcl
rcrb
xor
push
insb
mov
xor
leave
rolb
or
xchg
loope
dec
idivb
cmpsb
xor
into
jge
mov
adc
rorl
mov
shr
adc
loopne
cmc
xchg
data16
push
lahf
roll
cltd
ficompl
jae
cmp
orl
pop
sub
add
and
sub
clc
shl
scas
and
mov
fs
dec
inc
cmp
daa
fcmovnbe
push
sahf
and
and
mov
jne
outsb
sub
jbe
cmp
sbb
dec
adc
dec
fildll
les
pop
dec
std
dec
xchg
xchg
push
aam
xchg
pop
mov
mov
mov
ret
addr16
pop
jle
in
mov
cmpsl
mov
add
xor
das
stc
mov
out
dec
lret
xchg
add
inc
sub
div
mov
inc
loop
push
addr16
and
cli
push
mov
inc
adc
ficoms
mov
ja
push
sbb
test
jle
decb
fidivs
lods
or
stc
loopne
push
mov
imul
ja
lcall
push
dec
xchg
outsl
subb
outsl
fs
out
test
mov
xchg
aam
lahf
sarl
mov
xor
jl
and
shll
add
xchg
xchg
push
pop
lods
pop
mov
push
adc
mov
test
inc
dec
mov
dec
fmul
mov
add
movsl
cmp
ja
movsb
fcoms
adc
adc
daa
mov
mov
outsl
jmp
mov
dec
cmc
pop
je
mov
mov
jg
cmp
outsb
push
icebp
sahf
or
cwtl
cmp
lret
aam
pop
jmp
aad
pop
std
add
call
nop
sub
gs
sub
fisubs
lods
out
or
inc
mov
dec
sub
cmpsl
mov
mov
push
arpl
enter
in
arpl
ja
fsubl
xor
popf
add
lea
rorb
loopne
sbb
push
xchg
movsl
and
prefetcht1
inc
jno
cltd
push
cld
mov
dec
add
sub
repz
std
dec
jbe
dec
jecxz
add
mov
pusha
pusha
jp
pop
leave
cmpsl
dec
das
int
cmp
sti
cmp
cltd
xchg
or
cmp
mov
lret
mov
push
sahf
faddl
and
push
sub
or
sahf
daa
jmp
pop
cmp
rcr
sti
pusha
pop
shlb
je
adc
pop
dec
rcr
decb
mov
mov
gs
mov
adcb
sub
cmp
flds
add
outsb
push
xor
roll
push
xchg
pop
add
mov
or
daa
pop
fnstcw
mov
subl
cmp
stos
fwait
mov
cltd
sarl
pop
ret
mov
adc
push
inc
jns
scas
aam
out
les
cmc
addl
lds
pusha
sti
insb
ffree
js,pt
fwait
shlb
and
in
std
xor
mov
lcall
scas
inc
insb
cmp
inc
sbb
popa
add
insl
ret
add
fstps
inc
add
or
cmp
mov
in
test
jne
or
add
test
pusha
xchg
push
mov
dec
adc
divb
ja
mov
mov
mov
add
cmp
bound
and
addl
out
and
pusha
nop
add
mov
mov
test
stc
testb
adc
sbb
xchg
cld
pop
jge
lahf
adc
ja
mov
aas
icebp
jmp
adc
icebp
pop
mov
lcall
xlat
cld
lds
sbb
data16
xchg
popf
inc
jl
push
pop
cmp
pushf
and
call
push
mov
push
mov
mov
loopne
mov
jl
call
push
xchg
mov
cmp
fcompl
or
and
insl
bound
jnp
xor
mov
jnp
push
je
mov
ror
xchg
and
gs
adc
and
out
xor
push
inc
in
push
inc
jl
jg
jmp
or
fsqrt
sub
sbb
out
push
bound
and
stc
out
jb
mov
std
pusha
xchg
ja
push
push
loopne
mov
cwtl
mov
cmp
lret
sbb
cld
cs
sti
mov
inc
movsl
and
ds
mov
into
das
jp
les
add
xchg
cmpsb
jmp
dec
aad
xor
adc
push
jno
mov
fiadds
inc
adc
ss
incb
cld
and
cmc
cs
in
xchg
test
pop
jns
insl
adc
mov
movsb
sbb
cmpsl
jecxz
xchg
and
cmp
xchg
cmp
mov
nop
repnz
loop
xor
iret
aad
cwtl
inc
cltd
movsl
inc
imul
and
sahf
pop
mov
loop
popf
cmp
xor
aas
dec
and
sahf
addr16
and
adc
lock
adc
mov
in
jno
push
push
jl
push
or
lods
xchg
adc
incb
and
adcb
ja
arpl
mov
jo
mov
decb
mov
push
neg
aaa
dec
imul
jnp
inc
cmp
in
push
jmp
mov
dec
pop
add
je
sub
pop
jbe
lds
cwtl
jnp
pop
mov
dec
pop
lcall
cwtl
call
mov
add
xor
ds
push
movsl
jge
fildll
cmp
sub
repnz
aam
test
mov
push
or
adc
sbb
in
into
mov
mov
pop
repz
dec
cmp
sub
or
dec
and
int3
mov
cmpsb
pop
mov
aaa
dec
ret
stos
mov
mov
jge
ja
ret
fs
push
icebp
stos
movb
cmp
cmp
mov
testb
in
xor
es
sub
imul
popf
repz
xchg
mov
rcl
xlat
outsl
cmc
stc
sub
jmp
or
mov
mov
dec
inc
adc
rcll
inc
cmpsl
xchg
les
lock
xchg
outsl
enter
leave
mov
dec
repz
test
clc
push
enter
hlt
mov
lods
cmp
and
or
out
push
outsl
cwtl
cltd
je
fistps
mov
add
pop
stos
and
scas
and
sbb
sbb
mov
push
jmp
pop
ret
push
push
cmp
aad
lahf
pop
sbb
mov
rcl
adc
sti
pop
pushf
sub
sbb
fisttpl
or
mov
dec
pushf
sar
dec
pop
push
sub
aaa
xchg
inc
sti
imul
test
cmpl
add
cmp
hlt
jl
les
sbb
mov
bound
int3
adc
cmp
fistpll
popa
and
mov
adc
repnz
adc
xor
stc
and
dec
inc
pop
stos
lods
daa
dec
adc
out
jl
scas
adc
dec
adc
outsb
out
shrb
movntq
sbb
mov
aas
xor
repz
xor
sbb
xchg
rolb
iret
add
xchg
mov
movsb
aaa
roll
sub
iret
mov
jg
out
or
rcrb
test
add
insb
imul
fisttps
sbb
mov
jne
dec
sbb
dec
xchg
xchg
cmc
popf
mov
scas
cltd
add
aaa
mov
stos
nop
or
lods
insl
or
push
push
cmp
fnstenv
rcrb
pop
mov
mov
sbb
xchg
aas
popf
pushf
in
mov
mov
movsl
imul
push
pop
pop
mov
out
adc
rolb
or
dec
ss
fs
inc
jae
push
js
sub
mov
xchg
push
inc
sub
cmpsl
icebp
add
mov
ljmp
aas
in
into
push
dec
sbbl
add
repz
xchg
js
inc
aas
adc
pop
and
mov
mov
sub
je
stos
sbbl
movsb
lret
fbld
clc
subl
aam
xor
out
scas
daa
imul
jmp
roll
lods
mov
loope
lcall
pop
dec
push
notb
xlat
push
lret
mov
or
out
iret
inc
test
and
mov
mov
dec
or
mov
mov
mov
into
imul
int
in
add
mov
mov
ret
sub
or
das
sub
fidivrl
nop
xchg
lret
movl
lahf
in
test
ret
bound
je
lcall
dec
dec
stos
adc
das
push
cld
test
jnp
mulb
sub
fdivs
adc
push
xchg
test
sub
mov
cld
jb
push
fisubl
nop
loope
adc
cltd
jmp
cs
mov
mov
and
mov
mov
fistpl
jmp
mov
mov
ret
idiv
mov
inc
iret
and
nop
ja
pop
add
add
xor
cmpsl
or
fildl
repz
ja
enter
push
lret
pop
jb
ljmp
push
lods
addb
jno
incb
push
out
data16
jne
push
pop
dec
mov
xchg
call
push
ret
xchg
shrl
loop
jbe
rol
cmp
sub
fwait
dec
scas
gs
xlat
dec
xorb
inc
or
push
add
bnd
add
jp
out
dec
push
les
arpl
dec
test
popf
jno
sub
cmp
rolb
push
leave
mov
aaa
outsl
sub
mov
dec
mov
jo
pop
mov
xchg
inc
dec
call
mov
inc
sti
ljmp
jg
or
call
roll
test
imul
or
lret
test
push
jo
xchg
pop
out
mov
inc
cmp
and
or
sbb
adc
cmpb
add
adc
in
mulb
cmp
fisttps
mov
lods
xchg
movsl
adc
sbb
out
mov
fstpl
add
loope
push
or
stos
push
mov
cmp
sub
ljmp
dec
cmpsl
jecxz
or
fisttpll
mov
filds
rolb
aaa
add
out
pop
in
or
adc
mov
cmp
xlat
std
jecxz
mov
dec
sahf
sbb
or
jge
mov
mov
cmp
hlt
fcmove
xor
dec
cmc
fwait
dec
add
in
pop
fldcw
fmul
sub
aaa
ljmp
dec
pop
sbb
adc
out
idivb
sub
pusha
mull
enter
push
aaa
add
pop
lcall
adc
test
adc
pushf
dec
adc
jne
negb
jge
jne
adc
aam
pop
cmc
xor
rolb
mov
jecxz
rol
jae
push
sbb
adc
movsl
sub
test
inc
mov
scas
lcall
push
mov
dec
push
test
movsb
pop
push
mov
sub
and
jae
xorb
and
xor
jo
not
sti
std
lds
data16
jne
ljmp
and
cmp
lret
xor
test
mov
jb
add
jecxz
pop
jae
flds
lods
mov
dec
push
or
push
cmp
lahf
jo
push
lea
divl
add
xchg
andb
out
popl
punpckhbw
xlat
push
lods
pusha
ja
sbb
cmp
shlb
add
int
test
dec
movsb
push
hlt
dec
or
adc
jo
inc
cmp
test
dec
call
add
out
pop
mov
jp
xchg
pop
adc
cmpsl
or
dec
xchg
dec
stos
test
popa
cmpsl
sahf
pop
ret
pop
outsl
shrl
test
or
ja
pop
in
fsubrl
sbbb
fsubrs
inc
adc
push
inc
mov
jle
or
lret
jle
mov
sarb
inc
dec
add
fcom
fs
aad
mov
into
adc
mov
xlat
and
lds
cmp
and
mov
dec
bound
repz
fidivl
daa
dec
dec
mov
mov
outsl
cli
add
sub
push
mov
movsb
iret
mov
imul
aas
add
fistpl
sbb
call
sbb
js
pushf
sahf
mov
je
lret
mov
sbb
insl
orb
pop
xor
aam
pusha
ja
ss
and
lds
mov
jbe
mov
xlat
xchg
mov
jnp
gs
ds
sbb
jb
test
and
lock
je
test
je
scas
xchg
cmp
xor
jg
jno
stos
lock
movsl
sub
push
loope
mov
mull
sub
outsb
loope,pt
lahf
cmpsl
shl
filds
mov
in
pop
popa
cmp
ljmp
pop
add
xchg
adc
pop
ljmp
or
inc
test
lock
js
outsl
fucomi
orps
sahf
xor
inc
stc
int3
jp
jge
sub
loopne
pop
je
call
dec
xor
test
cmp
xchg
cs
jbe
lahf
pusha
lret
mov
mov
aas
jle
jle
add
movsb
loop
mov
data16
dec
push
cmp
das
outsb
int3
pop
cmp
xchg
mov
inc
and
lock
addr16
int3
mov
sub
mov
paddq
adc
push
cmpsl
pop
cmp
cmc
popa
int3
aas
cwtl
sub
mov
dec
pop
repnz
jle
shrl
sub
lods
movsb
inc
jmp
and
cmpsb
mov
arpl
mov
mov
pop
imul
xchg
cmpsb
sub
loop
sbb
add
push
mov
jns
mov
pop
xchg
ljmp
jmp
lods
arpl
adcl
pop
xchg
xchg
aaa
dec
int3
out
rclb
jnp
or
xor
dec
movsb
xchg
sub
adc
sahf
imul
pushf
jg
test
adc
mov
push
sbb
jae
orb
mov
adc
jmp
jae
add
mov
xor
push
addr16
fcomps
and
xor
inc
xchg
lock
sub
and
xor
push
ja
repz
popf
stos
and
xchg
xchg
fdivrl
fnsave
lea
mov
jle
insb
jae
cmc
xchg
sub
mov
sbb
fisttps
mov
out
push
mov
push
jnp
xor
stos
and
pop
dec
mov
xor
addl
loop
lds
dec
lcall
clc
cmp
jae
add
push
mov
jno
mov
pop
cmpsl
sbbb
mov
js
jnp
jg
adc
in
push
je
shl
cmp
push
mov
xchg
cmpsl
insb
sbb
dec
sbb
and
daa
xchg
stos
jp
inc
movsb
pop
sti
pop
rclb
add
xorl
gs
or
shrl
xchg
test
jle
mov
cmp
loope
jmp
xor
sub
and
ljmp
nop
mov
mov
js
sbb
jbe
cmpsl
cmp
hlt
ja
mov
jmp
inc
mov
sbb
sub
iret
sbb
sahf
jl
push
sahf
pop
cmp
daa
dec
roll
mov
mov
outsl
xor
or
mov
in
fwait
stc
mov
fimuls
dec
and
movsl
cmp
mov
test
jge
xchg
fcmovu
fcmovnu
jne
adc
idivl
xchg
pop
mov
sbb
push
push
sub
sbb
pop
dec
inc
daa
xlat
mov
fisubrs
cmp
mov
out
xlat
inc
cmp
scas
adc
sbb
out
jg
add
cmp
xor
sti
je
or
scas
or
fldl
add
cmp
cmpsl
pop
enter
pop
mov
and
ds
cmp
mov
imul
and
push
inc
loopne
cld
in
cmpsl
dec
leave
lods
repnz
vpacksswb
mov
adc
pop
mov
lds
fwait
add
inc
mov
or
sub
and
dec
or
aad
sbb
adc
sbb
jg
jg
or
pop
mov
or
cmp
insb
dec
jg
dec
cld
into
test
test
inc
scas
lods
or
mov
mov
bound
pop
leave
insl
and
test
rcll
clc
icebp
dec
clc
mov
mov
leave
mov
movw
jle
xchg
sub
sub
push
pop
and
lock
jle
fwait
mov
repnz
lea
cmp
xchg
cmp
insl
xor
cltd
sub
popf
pop
outsl
les
sbb
sub
mov
or
mov
movb
iret
int
ds
lods
popa
int
andl
jecxz
pop
hlt
jp
push
iret
std
call
int3
rorb
push
sbb
push
pop
mov
fdivr
push
movsl
lock
and
add
fwait
ja
bound
jge
int
mov
out
sti
adc
outsl
rolb
std
std
sti
int3
jno
pop
mov
cmc
or
hlt
inc
cmp
jmp
out
subl
dec
adc
mov
mov
jns
rolb
xor
mov
data16
cmpsl
arpl
stos
xor
xchg
pop
fidivrs
xchg
dec
shl
mov
in
ss
fimuls
pop
dec
jnp
andb
sbb
mov
movsb
fisttps
fdivrl
iret
inc
xor
sub
jns
shll
push
adc
mov
ds
daa
pop
ds
ret
xchg
push
cmc
lods
and
loopne
outsb
and
sub
pop
outsb
cmc
pop
pop
mov
push
add
mov
enter
cmp
mov
cmp
add
push
xchg
aam
xorl
pop
jae
js
roll
sbb
in
add
push
xchg
sub
jns
jge
mov
mov
rcl
mov
movsl
mov
js
sbb
push
lret
xor
dec
stos
stc
mov
insl
or
hlt
xchg
jl
stos
inc
mov
pop
sbb
in
ja
jno
or
sub
aam
mov
int
fists
sti
ljmp
jbe
jns
pop
fsubs
mov
fs
gs
repnz
dec
adc
push
loop
inc
je
add
push
pop
mov
shrl
push
hlt
fdivrl
mov
mov
repz
push
cltd
insb
jmp
push
aad
sub
les
jmp
outsl
xchg
setnp
idiv
lret
dec
xchg
mov
inc
dec
add
cmp
hlt
mov
and
les
pop
ret
popw
xor
dec
and
sbb
js
mov
sbb
cmp
inc
sbb
push
xor
push
mov
inc
aaa
sarl
rcrb
imul
sub
imull
or
iret
sub
int
mov
arpl
push
add
jmp
xchg
insb
inc
and
and
dec
mov
cmp
sbbb
push
pop
and
sub
rolb
inc
pop
mov
adc
fisubl
xor
mov
adc
mov
loop
add
cmp
js
std
fsubrs
xorl
and
addr16
and
es
movsl
imul
add
adcl
sub
out
clc
shlb
push
or
or
jge
cmpl
xchg
and
mov
adc
pop
add
mov
or
jge
out
in
inc
add
xor
icebp
imul
mov
pop
scas
lahf
xchg
cmp
das
rclb
mov
popa
nop
pop
inc
shll
add
insl
lret
pop
sbbb
jns
jge
loop
rcl
lds
fcmove
jmp
sbb
pop
lods
in
dec
pop
icebp
insl
jns
or
and
inc
add
pop
xchg
jo
ret
xchg
jno,pt
scas
out
lret
addr16
inc
sub
or
add
pushf
dec
shrl
loop
sub
lahf
sub
fwait
xchg
shll
adc
dec
pop
outsl
test
pop
adc
ficompl
xchg
sbb
mov
mov
fxam
sbb
add
cmovp
sbb
pop
mov
sahf
jl
and
jge
mov
inc
fwait
dec
add
stc
movsl
dec
mov
mov
sub
dec
inc
int3
sub
dec
aam
mov
jns
sahf
ljmp
sub
mov
std
jmp
cs
or
cltd
out
dec
rolb
fbld
jmp
xchg
mov
or
push
sbb
sub
stos
sub
adc
mov
stos
jo
pop
xchg
jnp
adc
xlat
dec
xor
rorl
fimull
mov
add
out
adc
andl
idivb
loop
or
lds
jno
ss
xor
jnp
test
sbb
daa
cltd
push
in
xchg
pop
out
mov
mov
pushl
rolb
fidivs
jecxz
pop
pushl
adc
push
rcrl
pop
icebp
in
jne
fcmovne
sbb
outsl
int
mov
outsl
in
aaa
jecxz
sahf
inc
sub
and
sbb
adc
xchg
mov
xor
push
sbbb
mov
inc
idivl
fsts
mov
push
bound
ss
xchg
mov
sbb
fistpl
dec
pop
jne
inc
mov
push
int3
add
aad
daa
test
push
js
hlt
jp
movsb
pop
push
inc
mov
imul
scas
insb
fdivs
cli
inc
clc
cmpsl
pop
lcall
xor
outsb
push
icebp
pop
sar
pop
mov
inc
or
adc
mov
div
test
add
sbb
ret
or
sbb
insb
adc
imull
jb
daa
inc
fs
cld
sub
jp
out
inc
fistl
cmc
sbb
push
push
sub
cmp
jmp
leave
repz
loope
sbb
jle
pop
adc
js
or
dec
inc
mov
decl
or
les
dec
cs
ja
add
xor
jns
mov
dec
sbb
movsl
mov
daa
les
sti
mov
mov
pushf
lock
cmp
lret
or
je
and
xor
mov
jp
lret
js
inc
jmp
or
cmp
lcall
dec
loope
adc
int3
cmc
jg
int3
out
sbb
nop
sub
sahf
fisttpll
cmp
loopne
aaa
adc
adc
dec
jnp
pop
or
pushf
xchg
xchg
push
loop
jmp
aad
incb
mov
shll
dec
insb
idiv
mov
cli
jl
mov
jae
jl
pop
mov
sahf
mov
bound
es
ja
xor
adc
stos
jo
fcompl
mov
sbb
adc
sbb
inc
repnz
and
mov
out
inc
leave
mov
pop
fmuls
sti
imul
push
lock
scas
cmpb
clc
fsubs
and
dec
inc
rol
scas
push
mov
popa
push
cli
jo
or
das
inc
cmpsl
inc
or
pop
call
rcrw
aam
scas
sbb
call
test
daa
ret
jp
mov
adc
pop
cmp
ja
pop
pop
aas
mov
shll
data16
push
in
adc
js
enter
in
dec
sub
push
subb
fistpll
dec
nop
call
sbb
mov
xchg
mov
lcall
sahf
pusha
pop
out
sarb
imulb
ficomps
and
or
cmpsb
xchg
rcrl
xor
sub
sbb
sbb
xchg
dec
mov
arpl
je
mov
mov
std
mov
movsl
aad
inc
and
mov
mov
out
fiadds
mov
adc
inc
cmpsb
mov
leave
daa
ja
test
xchg
scas
add
imul
push
lahf
xchg
shrb
mov
dec
nop
imul
sbb
pop
pop
cltd
adc
adc
add
int
imul
aam
adc
xor
lock
insb
out
inc
les
lods
mov
inc
pop
inc
shlb
mov
xor
pushf
adcb
mov
push
mov
xor
adc
inc
jb
negb
mov
clc
stc
xchg
mov
mov
xlat
aas
mov
jl
cmp
xchg
stos
or
xor
mov
rclb
aam
test
or
pop
sahf
sbb
lahf
shll
test
xchg
popf
cmp
xchg
sub
shlb
orl
mov
mov
sbb
aam
imul
in
aam
sub
test
xchg
stos
cld
adc
stos
dec
mov
or
lods
sbb
lock
mov
or
lcall
lds
jb
icebp
enter
out
cmp
mov
daa
movsb
shlb
ret
pop
jl
mov
sar
inc
sbb
dec
enter
cmp
push
imul
test
ret
xor
or
leave
xchg
add
xchg
inc
sub
push
jecxz
lods
movb
add
mov
dec
stos
sub
imul
int3
mov
adc
fnstcw
fdivp
inc
push
sarb
ds
addr16
xor
lret
xchg
xchg
stos
jnp
outsl
push
iret
cmc
and
icebp
xor
std
or
sbb
push
dec
insl
adc
ret
mov
jns
xorl
jle
adc
or
aam
or
ret
lds
loopne
mov
stos
sbb
icebp
cmp
jmp
mov
addb
mov
mov
jne
out
pop
sub
mov
push
pop
scas
push
cld
in
aam
and
xchg
xchg
int3
xor
lods
xor
and
sub
or
cmpsl
xor
pop
aad
test
adc
mov
gs
mov
add
dec
adc
xchg
add
xorb
jae
test
dec
inc
jmp
cwtl
lea
push
test
aaa
test
pop
push
add
jae
pop
inc
mov
aam
js
inc
push
xor
jno
jmp
rclb
cmp
adc
dec
loopne
dec
xchg
xchg
popa
pop
inc
push
int
lea
int
or
jl
leave
pop
iret
fwait
dec
mov
fiaddl
je
mov
enter
imul
adc
ret
jmp
aad
loope
jg
rclb
mov
inc
mov
add
inc
jl
cmc
lret
mov
or
or
stos
xchg
out
push
mov
pop
push
int3
xchg
jb
push
fcom
pop
lea
shlb
jmp
push
clc
imul
aas
jge
xchg
scas
mov
clc
and
or
sub
pop
test
clc
add
pop
inc
in
cmc
adc
fcmovnbe
and
pop
int
adcl
cmp
pop
add
sbb
repnz
outsb
leave
and
roll
scas
pusha
fs
aas
lret
pop
lea
fadds
popf
out
leave
lahf
push
out
lret
xchg
add
popf
fildl
or
inc
jb
sbb
aam
sarb
jmp
adc
push
adc
jge
mov
mov
dec
dec
hlt
and
push
adc
js
aad
and
sbb
push
popf
mov
mov
inc
add
add
divl
call
or
mov
fs
cmp
dec
in
inc
pop
out
jmp
fs
inc
clts
shr
inc
mov
mov
popa
xor
xchg
xor
bound
xchg
or
or
and
outsb
cmp
faddl
cmpsl
arpl
xorb
sarb
je
mov
dec
sahf
sahf
push
push
test
fcomps
jl
ds
scas
int3
ffree
ret
xor
push
or
mov
sarl
dec
sbb
xor
mov
out
dec
test
mov
dec
jo
mov
in
xchg
xchg
in
lahf
test
fistps
and
jle
jg
push
ret
jae
cwtl
notb
aaa
pop
sub
negb
add
pop
push
or
insb
mov
cmp
add
xchg
dec
popa
lods
and
mov
push
push
pusha
fiadds
mov
mov
xor
pop
cmp
cwtl
xchg
cmp
mov
cmp
in
cmp
add
inc
popf
or
xor
test
pop
sahf
mov
clc
in
dec
imul
and
stos
mov
push
push
sbb
sbb
loope
bound
push
add
and
mov
pusha
adc
and
dec
jecxz
mov
pop
push
dec
adc
test
and
hlt
xor
in
movsl
cmp
addr16
insl
xchg
pusha
movsb
adc
add
loopne
dec
mov
rcrb
faddl
loopne
aam
push
inc
fdivl
stos
mov
dec
dec
add
mov
push
stos
mov
pop
out
cmp
jmp
idivl
lcall
pop
mov
shrl
inc
adc
mov
mov
insb
add
sbb
adc
add
jns
jmp
adc
ljmp
jb
movsl
xchg
into
inc
test
int3
movsb
push
dec
rorb
sub
das
xchg
daa
scas
test
cmpsb
clc
cmp
test
mov
cmp
ds
mov
ja
fs
jb
loope
ljmp
sub
mov
mov
mov
insl
leave
xor
stos
cmc
mov
jl
mov
dec
movsl
xlat
mov
cwtl
sbbl
xor
into
into
adc
sahf
mov
cmpsl
incl
lods
sub
dec
stos
push
jmp
loope
inc
mov
aas
mov
jle
mov
out
sub
jne
sbb
insl
mov
pop
lcall
mov
mov
inc
pop
rorb
je
fnsetpm(287
fcmovu
in
xlat
in
dec
xor
hlt
push
push
adc
ffreep
in
popf
jbe
sarl
daa
in
xchg
negl
outsb
frstor
addr16
into
cmp
sbb
pushf
icebp
dec
adc
or
sahf
scas
inc
pop
jge
xor
lcall
into
dec
test
cmp
xlat
fs
mov
push
enter
fmul
add
jb
out
aaa
mov
sbb
push
jle
xor
or
stc
lock
and
push
mov
xchg
gs
ds
jb
jbe
mov
jecxz
xchg
dec
mov
lcall
cmc
subb
std
xchg
mov
xor
movsb
pop
fildl
inc
jo
mov
and
stc
aad
sub
pop
push
mov
clc
imul
shll
bound
rclb
inc
inc
mov
mov
fs
rep
insb
clc
push
jg
movsb
jb
lret
mov
fists
jp
pop
imull
incb
push
sub
sub
mov
mov
xor
mov
mov
jno
jno
ret
and
dec
mov
lock
add
push
pop
inc
loopne
loope
jbe
loop
xor
stos
notb
stc
repnz
inc
mov
sbb
test
stc
xor
pop
inc
das
sbb
out
mov
or
rcrl
and
jmp
and
int3
push
sub
ret
and
cs
sbb
push
and
sbb
jecxz
xlat
mov
nop
lret
lret
cmp
jecxz
jg
clc
push
add
xchg
adc
test
cmc
mov
imul
je
jle
lret
adc
jg
std
ds
mov
cmpsb
inc
dec
es
dec
mov
bound
mov
jae
xchg
push
pop
add
pop
cld
or
lock
xor
jne
addb
mov
sbb
xor
inc
test
inc
movsl
inc
lahf
sub
push
iret
push
es
addr16
pop
dec
rcrl
mov
insb
loop
cmp
shlb
pop
push
fsubrl
ss
add
mov
pushf
lock
or
lea
nop
xchg
es
dec
mov
test
test
pop
sbb
in
test
jmp
pop
jbe
push
adc
and
movsb
ss
or
or
mov
outsl
mov
mov
sub
or
adc
std
stos
fisubrs
sbbb
dec
or
xor
xchg
nop
aad
sub
push
arpl
jb
xchg
clc
or
add
lds
sub
aas
xchg
add
jp
fnsave
fldcw
dec
xor
cmp
insl
jmp
pop
mov
adc
push
lea
push
push
in
push
inc
addb
sub
mov
jbe
aam
ficompl
movsl
sarb
cmp
push
insb
lods
movsl
fsubrs
push
adc
xchg
jae
mov
fdivl
ret
aam
fldl
mov
mov
pop
xor
or
jle
inc
lods
adc
cmp
fcoml
insl
out
cmp
ss
adcl
shrl
cs
mov
sarb
inc
outsb
fucomip
and
add
push
into
out
shlb
pop
lds
roll
dec
outsl
lret
mov
mov
into
imul
push
mov
sbb
jne
push
xchg
cmp
xchg
out
add
push
or
jb
sub
or
xor
scas
dec
jo
inc
dec
inc
stc
sub
in
adc
cld
lcall
pop
enter
mov
scas
int3
in
mov
mov
pop
mov
xor
xor
lea
dec
adc
cmp
mov
fistps
fcmove
sti
push
sub
lahf
mov
test
push
scas
insl
add
popl
sbb
or
insb
ds
daa
or
mov
loopne
rorb
push
pop
imul
sub
call
jge
xchg
or
sub
cmp
divl
stc
test
test
mov
call
out
xor
sbb
stc
xor
sbb
cs
cmc
inc
sbb
scas
add
clc
push
cmc
test
pop
pop
in
pop
je
push
mov
aas
in
adc
testl
int
sbbl
repnz
cmp
cs
repnz
cs
add
fisubrs
mov
push
movsl
into
push
icebp
pop
jnp
pmaddwd
in
pushf
mov
mov
je
add
bound
int3
in
repz
out
sub
fs
fdivl
lock
cli
pop
mov
addr16
add
mov
inc
sub
and
in
mov
sbb
pop
push
cmp
adc
int3
test
cmp
xor
mov
inc
or
and
mov
clc
jg
pop
dec
in
adc
stc
lods
out
jecxz
stos
sbb
insb
xchg
dec
mov
xchg
jae
cmp
clc
test
dec
xor
loope
test
mov
inc
addr16
dec
nop
jne
lea
jmp
mov
scas
divb
lahf
mov
fwait
xchg
insb
inc
xor
dec
push
jecxz
mov
mov
dec
inc
jmp
and
or
jle
dec
nop
out
xchg
sti
xchg
sbb
pop
jle
in
jae
mov
mov
aad
test
into
mov
test
insb
test
addl
daa
pop
test
lods
shlb
inc
aas
add
jae
adc
enter
clc
fwait
push
fimuls
fidivrs
sub
fnsave
mov
add
pop
xor
outsl
and
push
xchg
xor
cli
in
imul
fsubs
xchg
in
dec
scas
cmp
in
mov
sub
push
inc
cmp
ja
inc
push
dec
stos
or
jle
incb
lods
pop
fildl
dec
js
jle
ja
dec
int3
out
xchg
sti
hlt
sbb
lds
pop
or
sbb
sub
pop
xlat
mov
fisubl
jl
xor
or
push
or
stos
enter
popf
mov
out
jae
stos
push
mov
add
sbb
push
lds
jmp
outsb
sbb
dec
jne
cmp
sbb
cli
jb
fisubl
adc
js
das
add
cmp
insl
mov
loope
fildll
jmp
outsl
adc
xchg
and
js
pop
adc
call
data16
and
sub
lahf
xor
cmp
fisttpl
adc
addr16
mov
add
mov
lzcnt
popa
inc
int3
shrb
es
test
push
dec
and
xchg
mov
into
inc
push
mov
sbb
lods
xor
std
dec
fst
push
cmc
ja
rorb
lahf
inc
ss
fidivs
push
cmpsb
inc
bnd
test
out
cmp
in
push
and
xchg
dec
pop
outsl
in
dec
push
ljmp
xor
push
mov
xor
stos
in
fnstsw
mov
dec
jg
sbb
jne
sbb
xor
xor
mov
adc
jl
orb
dec
adc
pusha
lret
sbb
dec
mov
in
rolb
cmp
enter
out
int3
hlt
call
dec
shll
js
je
ret
push
cmp
sbb
not
and
mov
in
and
imul
jl
lods
jne
dec
adc
cmc
mov
ljmp
add
xchg
bound
in
in
add
add
jp
mov
lods
in
adc
sbb
sbb
jecxz
repnz
ret
cmp
test
and
fiadds
xor
xor
sbb
dec
jl
jnp
cmc
lods
jge
mov
pop
fiadds
push
mov
mov
mov
cld
iret
jl
nop
jo
mov
xchg
push
add
ficoms
lods
repz
hlt
add
adcb
mov
fidivl
nop
fsubs
jle
push
fs
cmp
mov
call
cmp
out
mov
nop
cmp
hlt
add
dec
loop
mov
ljmp
cwtl
jmp
subl
mov
ret
int
add
clc
and
notb
inc
pop
mov
in
rcll
adc
mov
jle
cli
mov
push
mull
movsb
lret
xchg
and
and
lds
cmpsl
jb
in
cmp
test
pushf
out
cmp
or
dec
xchg
jno
dec
and
outsl
loope
dec
iret
fmuls
mov
or
xor
test
jns
ja
lret
mov
orl
and
and
mov
jg
cwtl
push
repnz
popf
aam
cmpsb
sarl
adc
repnz
repnz
outsb
lcall
cmp
and
faddl
sub
mov
dec
mov
xchg
push
out
mov
mov
adc
loop
daa
dec
pop
insb
int
movsb
repnz
sti
mov
xchg
pop
movsl
sub
adc
push
sbb
xor
dec
jp
or
sub
push
popl
outsb
sbb
jae
sti
dec
or
neg
push
xchg
or
dec
xor
mov
inc
shrl
imul
push
xchg
mov
fbstp
ret
lds
mov
arpl
jecxz
adc
data16
mov
test
bound
inc
mov
aam
data16
sarb
or
cmpsl
imul
xchg
arpl
add
cmp
push
into
pop
jo
les
inc
xchg
adcl
in
lods
test
mov
icebp
clc
mov
sbb
push
and
lret
dec
mov
add
mov
loope
ds
test
pop
sub
addr16
lods
cs
mov
adc
bound
jns
rorb
add
jbe
xor
fcmove
shl
mov
aam
cmp
into
lahf
clc
insb
out
ds
push
sti
sbb
mov
add
gs
pop
sbbl
subl
dec
jno
xor
jl
je
mov
adc
add
lcall
addr16
leave
mov
in
popa
jl
lods
js
nop
xchg
lods
adc
mov
dec
jg
mov
sub
mov
imul
push
fwait
mov
bound
and
in
cltd
inc
aaa
jns
mov
call
loop
dec
mov
loop
add
jns
xorl
lock
mov
sub
sub
jb
pop
idiv
sub
mov
aaa
cmp
push
and
int
in
push
and
mov
jg
cmc
rclb
pushf
mov
mov
push
pop
add
jg
dec
xor
stos
je
aaa
lcall
mov
jl
nop
pushl
or
mov
adc
fsub
int3
adc
cmp
popf
mov
pop
loope
das
add
rcl
push
mov
addb
xorl
mov
fldcw
and
test
icebp
popa
push
scas
icebp
imul
push
sbb
mov
les
daa
lds
jge
and
out
mov
fs
movsbl
bound
mov
daa
jae
sub
add
pop
xor
mov
xchg
adcb
inc
mov
dec
xor
jae
insb
js
fcomip
fstpl
mov
iret
int
and
and
sub
or
shll
inc
dec
movsl
xchg
or
fs
adc
dec
in
sub
in
dec
imul
ds
cmc
inc
mov
fistpl
js
xchg
imul
sbb
aam
adc
in
out
jb
inc
into
jne
cmp
sbb
pop
fcoms
je
xorl
xchg
sub
add
arpl
lds
mov
icebp
out
push
test
rolb
pop
mov
nop
inc
push
push
adc
inc
movsl
mov
sub
or
addl
mov
lcall
icebp
shrl
adc
mov
and
jns
fcompl
ds
andl
hlt
icebp
sti
or
test
roll
lock
loopne
cmp
inc
pop
and
push
mov
xor
cld
xor
xchg
xor
xchg
sub
nop
jns
xchg
data16
dec
cmc
sti
pusha
jg
xchg
packsswb
inc
lret
int
lret
je
mov
scas
push
or
lods
dec
pop
repz
mov
adc
cli
shll
shrb
push
cmpsl
into
and
out
aam
mov
sbb
call
mov
push
movsb
dec
lcall
sbb
lock
or
mov
ss
addr16
movsb
sbb
sbb
dec
ror
ret
jg
xor
cmp
mov
xchg
fs
out
xcrypt-cfb
cmpsl
out
mov
pop
ds
push
mov
out
and
scas
popf
popa
into
mov
inc
pop
mov
jp
mov
lret
pop
jge
call
pop
inc
mov
cmpsb
imul
cmp
lds
fstpt
adcb
ljmp
iret
out
push
hlt
mov
xchg
xchg
int
decl
cmp
push
stc
mov
and
movsb
imul
stos
es
in
cwtl
mov
enter
jne
push
jb
adc
nop
cld
ss
or
cmc
add
in
xchg
pop
mov
imul
xor
es
ljmp
loopne
movsl
dec
or
push
ret
xor
clc
mov
inc
insl
jb
mov
dec
adc
pushf
mov
popf
push
lock
daa
arpl
dec
add
cmpsb
orb
mov
push
adc
sbb
cmp
dec
ret
in
popf
mov
inc
mov
sti
sbb
aas
subl
pop
dec
pop
out
push
mov
add
mov
iret
mov
xchg
test
add
shll
gs
dec
mov
xlat
mov
xor
mov
or
pop
mov
jle
imul
pushf
push
fbld
sbb
adc
xchg
add
aaa
and
mov
or
sub
sbb
data16
inc
repnz
out
xchg
fnsave
ret
mov
and
xchg
push
or
iret
arpl
mov
jbe
push
imul
xchg
jp
aaa
mov
cmp
aaa
out
xchg
add
les
jge
push
cmpsl
and
in
inc
mov
pop
mov
xor
mov
dec
mov
jo
push
lea
sub
outsb
add
movsb
fadds
ja
fwait
cmpsb
mov
or
int3
jmp
push
fs
sub
das
xchg
out
add
ja
sbb
stos
or
and
jg
cwtl
add
and
mov
bound
movsb
xchg
dec
cmpl
dec
call
xor
movsb
out
jge
or
leave
xchg
xchg
lods
fadds
xchg
ja
lcall
lods
mov
cld
fistl
enter
mov
clc
jmp
push
xchg
stc
out
scas
adcb
hlt
pop
pop
and
repz
push
jl
je
and
xor
mov
dec
push
f2xm1
jmp
aaa
push
aad
movsb
push
dec
clc
xchg
lret
mov
lock
shr
aad
pusha
mov
and
ficompl
repz
cld
mov
shlb
repz
in
and
mov
stc
out
inc
inc
loope
lahf
add
jecxz
mov
or
or
movsl
and
imul
push
add
jbe
sub
aad
gs
xlat
sub
outsb
mov
cmp
hlt
cmp
adc
movsb
hlt
ss
pushf
cwtl
and
jp
dec
and
adc
push
shlb
stos
jo
inc
jp
push
push
jno
pop
xor
roll
sub
pushf
lods
xchg
fcmovb
dec
in
sub
out
dec
nop
test
pushf
mov
push
movsb
mov
popf
push
mov
sbb
js
es
cmp
xchg
sub
sbb
jle
pop
cmp
mov
pop
pop
or
ret
bnd
lea
fidivl
ret
sub
jnp
jge
scas
jo
push
xchg
mov
mov
jb
fwait
xor
aas
mov
jecxz
xor
sbb
mov
test
ret
out
adc
and
in
xchg
or
adc
out
cmpsl
pop
orl
mov
jno
andl
push
aaa
out
sahf
adcl
shlb
das
mov
rol
out
pop
cmpsb
mov
xor
loopne
imul
std
push
enter
jnp
mov
test
outsb
sbb
dec
push
lret
xlat
cwtl
or
mov
into
push
and
fmuls
dec
and
out
adc
aam
xor
jbe
mov
jnp
xor
mov
adc
incb
mov
push
lea
fstl
call
adcb
outsl
mov
hlt
mov
mov
and
mov
adc
outsl
out
int3
inc
aam
pop
jp
insl
mov
jb
aaa
les
test
inc
or
push
jmp
jl
jmp
fsubrl
in
xor
or
sub
clc
sbb
add
test
push
push
sbb
aas
adc
scas
mov
xchg
out
xor
xchg
js
fistpl
ds
mov
aad
dec
lret
pop
sahf
aad
mov
lods
test
test
push
test
aas
cltd
cmp
filds
test
xchg
in
dec
jecxz
inc
mov
cld
lock
adc
push
jnp
pop
pop
cmp
test
lahf
push
nop
sub
mov
xchg
stos
inc
jge
mov
dec
or
xor
sub
xchg
jg
pop
push
shlb
push
and
sub
pushf
push
test
xor
dec
xchg
and
push
jecxz
cld
push
out
aad
jae
nop
into
aam
imul
int
movsl
mov
icebp
and
dec
insb
cmc
lret
jo
cmp
jp
movsl
jmp
push
mov
push
jae
addr16
inc
and
fimull
cli
cltd
adc
inc
cmp
stos
inc
in
shlb
fcompl
cmp
sub
cmc
jecxz
outsb
scas
call
sti
mov
cltd
arpl
xor
jge
sbb
daa
repnz
pop
test
stos
pop
inc
fistpl
mov
dec
xchg
adc
pop
in
and
mov
shl
loope
incb
lret
push
sub
mov
xchg
push
inc
lcall
inc
lahf
and
fistps
popf
dec
mov
xchg
lret
fstpt
sub
jecxz
dec
lret
and
and
cmp
sbb
int3
sub
stos
push
adc
inc
and
das
and
sarl
mov
dec
push
outsb
push
jge
mov
jae
mov
dec
mov
iret
add
push
sahf
lock
add
cmpsb
xor
lock
hlt
add
mov
pop
xchg
adc
jae
mov
scas
dec
shll
scas
movsb
lods
cmp
fstpl
cmp
nop
out
adcb
lret
clc
inc
dec
nop
push
mov
jno
adc
dec
or
in
jne
sbb
push
js
push
mov
push
push
lea
popa
push
std
repz
mov
push
adc
shll
xchg
pusha
or
pop
imul
daa
dec
push
pop
popa
in
xchg
adc
push
mov
jmp
jmp
adc
mov
xor
cmpsl
mov
andb
and
cmpsl
arpl
ja
pop
mov
and
mov
pop
push
lds
sti
bound
cmc
test
add
insl
sub
push
cmp
out
mov
push
test
repz
jl
movsl
out
mov
popf
js
push
outsb
push
xchg
xor
scas
mov
fisttpl
push
aas
fistpl
mov
lds
pusha
fsubrs
mov
rolb
xchg
push
outsb
xor
mov
or
push
and
das
test
xchg
mov
std
xor
pushf
xchg
mov
mov
sbb
clc
and
lret
pushf
loope
pushf
mov
das
inc
jle
mov
xor
adc
pop
fs
sbb
cwtl
and
push
cmp
mov
pop
mov
dec
nop
mov
outsb
adc
mov
inc
test
jns
jl
cmovg
cmp
movsl
ret
movsb
jbe
and
into
jns
adc
fdivrl
pop
dec
and
dec
lds
ds
in
out
negb
imul
outsl
jae
mov
jg
aas
push
fnstsw
les
add
mov
xor
enter
jmp
sti
lret
inc
push
mov
pop
jp
inc
adc
int
mov
je
icebp
imul
mov
xor
xchg
xor
dec
inc
jle
pop
mov
and
push
ret
flds
sub
ja
or
enter
movsl
lret
or
sbb
shlb
pop
lret
lods
fiaddl
lds
xchg
xor
out
add
inc
movsb
push
imul
out
xlat
push
mov
jb
std
cmc
cmp
cmpsl
or
push
out
mov
dec
rcll
aaa
cld
mov
data16
outsl
mov
fwait
cmpsb
loopne
icebp
insb
or
add
mov
ret
mov
add
or
outsl
dec
push
outsb
or
sti
imul
imul
.byte
adc
xor
nop
add
add
test
mulb
mov
mov
jns
cmp
xchg
sbb
dec
xor
and
addr16
and
cmp
lea
test
test
nop
mov
int3
cmpsb
std
xchg
adc
pushf
xchg
sub
rorl
call
es
push
pop
imul
pop
and
lret
adc
jge
aam
add
lock
mov
or
cmp
or
xchg
hlt
addr16
test
pop
sub
daa
pop
mov
push
out
sbb
sub
int
nop
xchg
out
xor
dec
lds
sahf
hlt
addr16
cld
ret
das
or
adc
rorb
movsl
inc
into
or
or
cmpsb
push
out
or
pop
into
sub
and
jo
pop
sbb
mulb
mov
sbb
ficompl
push
pop
push
mov
and
cmp
in
pop
test
lahf
push
xchg
or
xchg
jb
xlat
sbb
and
gs
dec
and
jmp
int3
lahf
pop
or
aam
sbb
insb
sub
iret
inc
jle
adc
push
xchg
inc
outsb
daa
and
lods
lahf
loopne
push
testb
adc
jne
push
xor
mov
sub
jnp
push
adc
jae
jno
push
insl
add
mov
test
ret
cmpsl
leave
xor
sub
lock
fucomi
mov
sbb
sub
mov
fcompl
push
lods
mov
daa
hlt
sub
push
jo
pop
gs
xchg
cmp
int
xor
mov
mov
bound
std
pop
std
jg
rcrl
fildll
into
pop
test
stos
dec
xchg
xchg
inc
rolb
mov
fimull
cli
inc
inc
push
mov
inc
jg
cmp
and
xor
add
rclb
loope
.byte
.byte
fwait
.byte
es
add
add
outsb
testl
add
push
add
add
add
pop
add
addb
add
rolb
add
adc
add
nop
add
addb
add
outsb
testl
add
add
addb
add
outsb
testl
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
outsb
testl
add
pop
add
cmp
add
push
add
adc
add
push
pop
add
addb
adc
add
cwtl
add
adc
add
mov
add
outsb
testl
add
add
add
add
orb
loopne
add
clc
add
adcb
add
add
adcb
add
add
adcb
add
add
outsb
testl
add
push
add
call
add
cmp
add
push
pop
add
and
add
ss
add
inc
pop
add
bound
add
addb
sbbb
add
xor
andb
cmpb
add
js
add
nop
add
addb
add
outsb
testl
add
add
addb
add
outsb
testl
add
add
rolb
add
add
outsb
testl
add
add
rolb
add
add
add
test
add
add
add
add
add
add
loopne
add
add
add
outsb
testl
add
add
lock
add
add
add
test
add
add
add
add
add
add
add
add
outsb
testl
add
add
adc
add
outsb
testl
add
add
and
add
outsb
testl
add
add
xor
add
outsb
testl
add
add
inc
add
add
outsb
testl
add
add
push
add
add
outsb
testl
add
add
pusha
add
add
outsb
testl
add
add
jo
add
add
add
outsb
testl
add
add
addb
add
test
add
add
add
add
add
add
nop
add
add
outsb
testl
add
add
mov
add
add
test
add
add
add
add
add
add
mov
add
add
add
outsb
testl
add
add
rolb
add
test
add
add
add
add
add
add
rolb
add
outsb
testl
add
add
add
add
add
outsb
testl
add
add
add
add
add
outsb
testl
add
add
add
push
add
add
add
outsb
testl
add
add
add
push
add
add
add
outsb
testl
add
add
add
push
add
add
add
outsb
testl
add
add
add
push
add
add
add
outsb
testl
add
add
add
add
add
add
outsb
testl
add
add
add
add
add
add
outsb
testl
add
add
add
add
add
add
outsb
testl
add
add
add
add
add
add
outsb
testl
add
add
add
add
add
test
add
add
add
add
or
add
add
add
test
add
add
add
add
or
add
add
add
test
add
add
add
add
or
add
add
add
test
add
add
add
add
add
add
rolb
add
movl
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
addb
insb
add
add
add
add
add
add
inc
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
inc
add
inc
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
dec
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
dec
add
pop
add
add
add
add
add
add
add
outsb
sub
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
loopne
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
ja
add
add
in
add
add
add
hlt
ja
add
add
add
add
add
add
add
ja
add
add
in
add
add
add
add
add
add
add
add
add
add
add
js
add
add
in
add
add
add
or
add
add
add
add
add
add
js
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
lea
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
loop
xchg
push
or
gs
vmwrite
and
sub
pop
sbb
cmp
dec
cmp
cli
cmp
sub
add
xchg
cld
divb
xor
inc
dec
inc
mov
push
xchg
dec
pop
pushf
iret
out
adc
mov
sar
clc
test
xor
push
call
mov
push
jns
mov
test
adc
cmp
int3
mov
and
mov
leave
push
jecxz
push
sbb
stos
test
cs
leave
sbb
xchg
dec
pushf
cmc
push
mov
xchg
and
hlt
xchg
sbb
push
dec
and
sbb
pop
xchg
arpl
in
and
fisttps
std
push
cld
outsl
lret
fnstcw
sti
adc
loop
shrb
pop
stc
test
inc
faddl
punpcklbw
call
adc
clc
mov
mov
push
jae
jp
mov
loope
mov
ficompl
xor
fmuls
test
add
stos
jae
test
inc
lcall
les
insl
in
and
mov
push
jb
jnp
or
hlt
and
subl
jns
push
sbb
iret
mov
cmpb
outsb
inc
out
mov
scas
push
sbb
and
add
mov
leave
stos
xchg
fistpl
jae
gs
sub
adc
daa
cli
adc
data16
inc
jae
mov
mov
or
add
xor
fdivrs
push
loope
adc
scas
jmp
pop
pusha
pop
loop
test
xchg
ljmp
fdivl
and
inc
lahf
fs
jmp
cmp
sarl
and
out
enter
push
pop
lret
xchg
jnp
add
jo
data16
dec
das
loop
lret
mov
mov
dec
mov
cmpsb
cmp
inc
aad
mov
cmp
and
xchg
sbb
xchg
out
clc
push
pusha
loope
xchg
fsubs
and
sti
and
jnp
mov
loopne
xor
xor
loope
ret
lock
push
into
test
or
xor
stos
test
aaa
aad
xchg
push
stc
pop
mov
ja
push
add
push
loop
es
les
loope
dec
in
in
pop
movsb
int
adc
mov
out
leave
xor
mov
jp
xchg
fcoml
or
mov
aas
mov
outsb
add
divb
jae
mov
test
outsb
cltd
idivl
add
pop
leave
adc
data16
xor
push
push
push
push
push
lret
daa
sub
mov
inc
adc
add
jge
and
xchg
test
cmc
and
mov
push
or
fists
test
out
inc
push
mov
sti
js
stos
shl
aad
into
ss
aad
loope
cli
pusha
push
imul
dec
sahf
jmp
jno
movsb
ret
iret
divl
mov
inc
pop
push
xchg
insl
fs
add
nop
jnp
fisubl
inc
dec
xlat
div
cmp
xchg
fsubl
addr16
std
or
cltd
fnstsw
fldenv
mov
insl
mov
and
or
popf
enter
sbb
xchg
mov
movsb
or
mov
insb
push
mov
adc
adc
jecxz
xchg
add
call
int
mov
jb
mov
ret
stc
std
pop
repnz
cmp
jg
mov
mov
fildl
jne
icebp
cmp
jno
aas
xchg
sbb
cmp
pmulhw
call
cmc
sti
ljmp
xchg
mov
sbb
int3
sub
cmp
pop
push
push
int
pop
mov
push
pop
xchg
les
jbe
lea
movsb
push
int
inc
sub
pushf
and
out
incl
stc
test
mov
mov
scas
inc
xsha1
cmpsb
lret
out
lret
dec
xchg
test
inc
mov
cs
xchg
jbe
xor
cwtl
lahf
jbe
dec
dec
mov
incb
in
test
push
aad
cld
mov
mov
xchg
mov
push
std
fucomip
stc
mov
or
dec
xchg
cmp
jo
dec
sbb
cmp
push
bound
push
mov
stos
rcrl
nop
lcall
nop
cmp
jge
mov
mov
dec
pop
sbb
out
test
arpl
orps
jnp
jno
or
mov
mov
mov
sbbb
fmuls
inc
or
xchg
das
or
mov
fwait
jle
dec
ss
stos
ja
lods
loopne
insb
std
push
dec
and
or
and
cld
cmp
mov
insb
je
and
mov
cmp
and
pop
add
insl
out
add
int
jb
pushf
jb
cmp
mov
or
repnz
jnp
out
mov
popa
test
inc
lea
push
lea
aaa
push
jle
push
aad
sub
and
push
xchg
bound
movsl
jg
inc
in
mov
pop
xor
fbld
les
stos
lods
nop
pushf
dec
jnp
lret
mov
push
imul
cmpsb
jl
ror
scas
xor
ds
flds
lds
push
repz
in
push
sbb
sub
sbb
xlat
dec
cmp
jno
fstpt
push
xchg
adc
jne
adc
movsb
xchg
cld
loop
dec
inc
ds
inc
imul
push
pop
mov
dec
popf
sbb
imul
movsb
push
mov
lahf
jns
shrl
int
ljmp
cmp
mov
or
adc
mov
fwait
add
ljmp
dec
rcll
je
jae
repnz
rcrb
mov
lcall
ja
dec
daa
loope
sbb
dec
fcos
mov
lds
adc
cmp
pushf
xchg
sbb
jb
xchg
mov
and
dec
out
in
stc
setg
test
sahf
mov
mov
out
jae
loopew
cmp
mov
aaa
and
cmp
movsl
insl
sti
notl
sub
pop
fisubl
repz
jmp
xorl
xchg
and
aam
mov
pop
aaa
mov
dec
adc
mov
mov
pop
pushl
inc
cmpsl
scas
lods
inc
jno
aam
dec
rolb
mov
push
pop
filds
mov
lea
leave
fadd
andl
es
daa
mov
jge
mov
icebp
push
call
fucomip
nop
mov
cmpsb
push
push
sti
int3
outsb
scas
mov
mov
dec
jnp
xchg
sbb
ret
test
in
adc
lahf
xchg
nop
lea
popf
xor
sbb
pop
xchg
stos
shl
mov
mov
xchg
add
test
movsl
test
dec
aad
shlb
mov
push
mov
add
mov
add
loope
pop
ja
test
inc
mov
and
repz
jmp
js
andl
mov
fsubs
cmpsw
and
pushf
xlat
push
das
test
cmp
sbb
cmp
lahf
mull
mov
lret
fstpt
pop
xlat
cmp
and
shll
pop
pop
mov
imul
mov
jns
adc
mov
xchg
lahf
add
enter
arpl
scas
bswap
pop
movsl
andb
xor
jmp
aaa
aas
cwtl
fmul
push
cmp
mov
arpl
rorb
push
jae
mov
sbbb
ret
mov
pop
scas
clc
sbb
mov
pushf
mov
cmc
push
jp
cmc
jae
call
dec
imul
xchg
insb
xorl
and
ss
out
xchg
shrl
add
stos
ja
inc
movsl
mov
push
bound
out
js
fsubrl
icebp
ds
hlt
popf
pop
rcr
xchg
pop
fisubl
jl
stos
aam
imulb
pop
testl
xor
aam
enter
mov
add
or
jns
or
push
pop
jno
hlt
stc
pop
sub
in
mov
inc
inc
cmp
insb
push
data16
lea
lcall
and
ljmp
cmpsl
cwtl
adc
push
pusha
mov
xchg
pop
xchg
es
cmp
mov
xchg
push
test
fwait
push
leave
repnz
and
push
jl
push
insb
imul
fcmovnbe
mov
adc
xor
pop
aam
call
loop
jae
or
add
cmpsl
mov
or
js
ret
xchg
ret
sub
push
cltd
cli
sahf
imul
sub
shlb
test
sub
push
jae
addb
push
mov
sub
lret
stos
andl
dec
add
mov
dec
pop
cli
je
cmp
xchg
jae
les
aam
js
clc
pop
xchg
outsb
mov
xor
add
sbb
xchg
out
fwait
xchg
xor
mov
mov
push
inc
xchg
pop
xchg
or
lret
scas
push
lock
popa
or
mov
js
data16
test
and
scas
fnstsw
mov
and
mov
or
xchg
fs
fisttpll
frstor
sub
push
pop
mov
insl
pop
test
lcall
mov
push
adc
jp
cmp
insb
xchg
sub
sbbb
add
adc
int3
and
in
jbe
bsr
das
lea
xor
fcmovnbe
cmp
cmpsb
sub
in
sbb
imul
int3
xor
inc
out
notb
push
inc
jecxz
or
je
pop
sbb
test
adc
test
mov
stc
mov
or
fcomip
mov
pushf
xchg
or
ret
mov
dec
out
mov
pusha
roll
cmp
mov
je
xchg
jns
cld
xchg
popa
data16
push
je
shlb
in
or
and
xor
xchg
xor
xchg
notl
popf
stos
inc
or
js
push
lcall
popa
stc
sti
sbb
je
inc
stos
jne
ret
pop
mov
in
rorb
mov
jae
xchg
inc
push
cmp
and
loop
outsl
in
dec
mov
cld
cmpsb
mov
adc
cld
stc
fwait
mov
repz
orl
in
inc
mulb
negb
je
inc
es
mov
addr16
xor
and
xchg
or
bound
arpl
add
adc
lds
cmp
jb
mov
in
sub
insb
movsl
cmpsl
jmp
ja
stc
xor
fsub
jg
outsb
ds
pusha
mov
pop
ret
add
rclb
or
sti
pushf
loop
int
mov
pop
dec
cmp
xchg
pop
jp
ja
popf
xor
adc
pop
cmpsb
xchg
ds
and
or
movl
pop
ljmp
jp
sbb
and
cmp
jg
xor
mov
test
mov
cmp
sub
xor
and
sahf
lahf
xlat
add
mov
push
inc
inc
ja
into
ja
jbe
gs
inc
fimull
jnp
inc
jae
mov
and
pop
ficomps
pushf
mov
fcomps
mov
xor
mov
cli
inc
jne
mov
es
jns
xor
dec
fistps
shl
stc
push
sar
movsb
loop
repz
mov
push
and
lds
jmp
lods
scas
dec
xchg
xchg
jno
inc
out
in
sub
fstps
stos
std
fldl
add
inc
mov
mov
xor
pop
sub
mov
mov
pop
lds
pop
mov
lods
pop
scas
cli
xchg
xchg
cwtl
pop
pop
aas
jae
inc
add
lds
loope
pop
sahf
sub
push
cmp
pop
cmp
mov
jmp
and
or
clc
inc
scas
insl
std
sub
aad
js
jo
sub
dec
aaa
mov
rcll
repz
lret
stos
mov
or
mov
sub
pop
movsl
adc
icebp
nop
sahf
add
xchg
cwtl
in
sub
inc
jmp
out
aad
sbb
push
cwtl
mov
les
in
out
push
movsb
cmpsl
xlat
jmp
ljmp
cmpsb
cmp
cmp
fsubrs
popa
adc
ret
dec
add
mov
ret
out
inc
cmpsb
pop
insb
mov
jl
data16
xchg
insl
cltd
push
in
fwait
mov
sub
popf
sub
jge
shrl
mov
js
in
fcompl
lcall
into
ret
xchg
mov
xor
sbb
cmc
xchg
cmc
notb
out
xchg
xor
ret
iret
sub
mov
push
movsl
mov
add
sahf
sub
xor
inc
in
add
jge
mov
mov
popa
pop
jge
frstor
and
push
pop
mov
push
cmp
cmpsl
sbb
ret
xlat
arpl
pop
mov
xor
cmp
inc
push
jno
push
adc
push
sbb
in
adc
mov
inc
xor
jno
sbb
push
mov
add
in
xchg
or
imul
pop
data16
jmp
add
pop
imul
test
cmp
xor
push
xchg
shl
dec
andl
sub
scas
test
xrelease
lret
int3
cmp
dec
in
jae
add
mov
imul
in
sub
pop
pshufw
out
push
sbb
jp
add
cmpsb
jecxz
out
imul
xor
push
adc
les
js
stc
jbe
inc
push
fidivs
inc
pop
loope
arpl
arpl
mov
push
cmp
je
or
sbb
cwtl
int
xor
pop
xchg
sbb
test
stc
addb
insl
lahf
xorl
push
lcall
sub
jmp
sub
mov
es
inc
jge
adc
call
lea
pop
daa
mov
xchg
aaa
fimuls
sahf
imul
lock
push
cmp
cmp
add
pop
addr16
lahf
pop
mov
aad
lret
push
push
adc
into
cmp
imul
ja
inc
xchg
jmp
or
xor
jae
jbe
fdivrl
imulb
xor
jp
sti
lods
jae
fldl
sub
or
jbe
sti
jb
aaa
pop
adcb
and
sub
add
pop
lds
lret
cld
sbb
pop
pop
sarb
int3
call
cmp
cmpsl
mov
fwait
mov
pop
mov
insb
xor
fcmovu
push
mov
push
mov
and
mov
mov
ljmp
loope
mov
xchg
sti
dec
test
mov
loopne
aad
mov
insb
into
lret
xor
cwtl
xchg
xchg
shlb
stos
cmp
shr
sahf
clc
ret
int
test
cmc
stos
sbb
push
cmp
popf
jno
mov
dec
mov
sbb
mov
stos
lea
sahf
sub
std
popa
out
pop
jmp
pop
hlt
lret
push
rcl
mov
jae
fnstsw
bnd
lods
jge
sub
int
cmp
sub
mov
ss
sbb
push
sub
popa
mov
xchg
daa
jg
sbb
mov
pop
dec
cwtl
xor
lret
dec
xchg
pop
ja
sbb
and
sub
shl
inc
gs
clc
lcall
mov
or
gs
rorl
int
xchg
pop
loope
aas
and
mov
fimuls
pushf
icebp
cmp
pop
xchg
stc
push
mov
loop
stc
mov
mov
xchg
cmp
pop
sbb
sub
dec
pop
dec
jecxz
pop
test
adc
push
arpl
mov
ljmp
lret
inc
je
mov
or
cmpsl
test
mov
push
mov
jecxz
popf
jae
push
sbb
mov
pop
bound
lret
dec
cmp
pop
int3
daa
in
add
popa
movsl
or
pop
nop
pop
mov
dec
je
adc
sub
push
add
cltd
add
insl
loopne
lods
fistl
pop
push
ss
push
cmp
xchg
lahf
pop
push
xor
icebp
xchg
dec
adc
mov
arpl
xchg
cwtl
mov
fldt
popf
sbbb
push
loope
loope
sbb
lret
andl
mov
xor
pop
icebp
push
fmull
jo
mov
mov
mov
into
repz
js
clc
std
gs
insb
mov
inc
lds
or
and
dec
pop
inc
cmp
add
fisubrs
jmp
add
pop
out
jge
sbb
cmc
outsl
fildll
xor
insl
xor
ljmp
daa
adc
sti
les
fimull
scas
out
jno
xor
push
add
fadds
mov
ja
and
xor
pop
mov
inc
lret
push
add
pop
clc
mov
es
push
xchg
push
push
xor
xor
repz
jmp
into
mov
stos
ljmp
cmpsb
add
andl
pop
shll
addr16
int
movsl
xor
adc
add
mov
test
xchg
sub
clc
roll
in
out
int
stc
and
jae
fcmovbe
ja
fucomi
mov
out
filds
repnz
bnd
sub
ja
and
xchg
push
adc
insb
push
in
cwtl
popa
adc
sbb
ss
std
sbb
inc
adc
adc
in
mov
out
lret
enter
insb
ljmp
outsb
inc
std
es
shll
enter
push
push
pop
and
mov
jno
in
ret
dec
and
cmpsl
jns
xorb
fadd
out
xchg
or
pop
jnp
inc
test
das
arpl
or
mov
test
xchg
sti
add
cld
add
dec
cmpl
mov
ds
inc
dec
movsb
add
jg
sbb
sub
pop
pop
inc
mov
inc
cmp
sbb
je
bound
call
mov
mov
inc
pop
js
mov
push
jle
aam
jmp
jmp
inc
pusha
repnz
sahf
hlt
xlat
jp
dec
aam
xor
incl
test
mov
jle
cmc
cli
xchg
or
and
mov
push
js
ja
in
lret
sbb
push
dec
movsb
lds
std
mull
fwait
add
incb
out
scas
lds
mov
fidivrs
and
es
in
rcrl
loop
je
fcompl
je
loope
js
aaa
or
cld
pop
dec
dec
mov
push
and
js
add
sti
sub
jle
dec
lods
xchg
aaa
or
or
pop
jo
fwait
outsl
jp
pop
sub
adc
push
leave
rolb
sub
sbb
cs
lock
fsubs
clc
imul
std
adc
in
cmpsb
int
sbb
jl
sbb
imul
mov
push
rolb
sbb
jle
jl
loop
pop
cmp
call
sbb
mov
xchg
aaa
and
jmp
xchg
push
push
nop
xor
cwtl
repnz
adc
and
fisubrl
in
call
push
gs
mov
repz
rclb
mov
fbld
mov
add
fnstcw
subb
aaa
mov
fcmovnbe
xchg
mov
lods
push
adc
lods
mov
jae
fcomp
cmp
movsl
xchg
in
sbb
pop
movsb
loopne
shlb
outsb
aad
xchg
fs
add
sbb
insl
jecxz
pushf
int
mov
loopne
and
enter
lods
lahf
inc
lock
aas
andl
xor
ja
jno
mov
cld
mov
nop
push
and
jecxz
cmp
dec
mul
push
lock
sbb
clc
sbb
popf
inc
pop
lahf
xor
mov
scas
xlat
jo
dec
sub
sub
fnsave
inc
enter
pushf
xor
push
out
jecxz
pushf
mov
aas
data16
enter
inc
pop
pop
add
mov
push
shr
out
popa
repz
out
and
fcomi
or
pop
into
ds
sbb
mov
xchg
in
lea
addr16
enter
daa
lods
aam
enter
mov
or
sub
in
flds
jnp
sub
push
mov
mov
ret
pop
mov
sub
inc
mov
pop
outsl
das
les
pop
sub
sub
sbb
cmp
sbb
jg
mov
lock
ljmp
push
xor
cmp
add
mov
or
fucomip
adc
insl
xchg
das
insb
stos
into
jnp
ret
imul
inc
ret
orb
and
cmp
dec
fistps
push
pop
loop
sbb
les
push
mov
pop
jbe
dec
dec
sub
jnp
mov
ret
inc
jnp
repnz
cwtl
inc
jns
mov
jno
rorl
stos
arpl
fsubrl
cmp
mov
aad
movsl
cli
sahf
mov
leave
jne
les
pop
jae
insl
lock
outsl
in
inc
xor
nop
stos
orl
pushf
push
sbb
jp
lods
repnz
loope
fisttps
push
hlt
cltd
jl
ljmp
icebp
cmp
ljmp
jmp
push
cmpb
push
pop
mov
arpl
fldt
out
push
decl
les
addr16
lret
out
shrb
mov
imul
pop
or
sub
and
ja
cmp
xchg
pavgb
cmpsb
mov
in
xchg
push
push
pop
inc
sti
push
push
dec
dec
mov
js
xchg
ds
addb
mov
pop
imull
mov
dec
mov
and
push
arpl
mov
xchg
sbbl
cmpsb
push
arpl
xor
imul
add
or
mov
dec
sbb
stos
pop
pop
movsl
mov
add
movsl
imul
inc
sti
adc
cmp
or
dec
cmp
outsl
ficompl
xlat
sti
ds
cmp
fdivrs
test
lcallw
out
std
shlb
paddq
adc
rcrl
pop
dec
int3
shlb
and
insb
mov
scas
xchg
cltd
jl
mov
add
mov
call
adc
sbb
sarb
repz
mov
xor
dec
loope
arpl
jae
mov
mov
rcl
sbb
addr16
fisttpl
or
inc
mov
negb
mov
jns
xor
mov
mov
bound
cmp
les
sbb
add
cmpsl
mov
push
scas
scas
ljmp
out
out
nop
in
and
ja
inc
cltd
sbb
add
adc
cmp
test
cmp
shlb
idivl
jge
loop
ds
add
dec
call
es
cmpsl
jg
jecxz
in
add
jmp
xchg
test
out
push
outsb
push
mov
pop
sti
sub
ja
call
repz
fstpt
mov
mov
addr16
dec
push
sbb
in
fbld
adc
cmc
jl
jnp
addr16
mov
add
mov
faddl
test
adc
adc
repnz
lret
les
jg
test
sub
mov
iret
push
sahf
mov
mov
lds
mov
rclb
xchg
xchg
add
lods
adc
fs
dec
adc
lahf
pop
inc
xlat
sbb
or
jnp
pop
sbb
push
lock
insl
pop
push
mov
cmc
mov
lock
lahf
int3
ljmp
and
dec
push
test
lretw
bound
push
jecxz
sti
jge
test
movsl
push
xchg
cs
add
cmp
lret
movsb
add
insl
fsubrs
pop
movsl
out
mov
mov
xchg
xchg
outsl
sub
stos
adc
xlat
pop
or
jne
and
or
mov
ds
push
jns
xchg
and
inc
xor
inc
sbb
shrb
adc
or
mov
and
and
mov
hlt
js
sbb
jg
lds
mov
sbb
iret
sub
push
mov
and
dec
cltd
push
inc
and
cmp
out
push
sarl
sbb
aam
subl
or
sahf
rclb
daa
mov
arpl
subb
cmp
add
rorl
cmc
mov
data16
dec
imul
mov
mov
icebp
aaa
int
aam
xchg
call
lock
ss
push
mov
daa
inc
popaw
icebp
mov
inc
jnp
pop
sbb
mov
xlat
push
test
pop
pop
dec
push
das
into
icebp
sahf
cmp
loop
cmp
repz
cmpl
or
lret
xor
and
pusha
dec
scas
xor
into
mov
ljmp
pop
shll
pop
cmp
mov
popf
push
jae
in
pop
and
inc
enter
and
iret
mov
stos
outsb
pop
or
imul
and
and
jle
and
inc
popf
jno
inc
pop
cli
cmpb
push
les
adc
cwtl
movsl
mov
test
stos
xchg
inc
popf
xchg
sbbl
mov
stos
cmpsl
lcall
inc
dec
hlt
mov
push
movsl
jge
adcl
bound
inc
repz
out
xchg
dec
add
pushf
add
repz
and
lods
xchg
ljmp
out
push
and
mov
xchg
jmp
outsb
mov
pushf
add
insb
push
in
jmp
sbb
mov
scas
and
mov
and
inc
decl
xor
adc
jne
adc
dec
clc
sbb
nop
adc
out
xor
icebp
jg
subb
out
das
add
fisubrl
addl
movsl
stc
jg
jo
fistpll
cmp
ret
pop
add
pop
daa
subl
mov
loopne
mov
cmpsl
stc
jns
ds
fnstsw
push
pop
adc
movsl
lods
mov
xor
pop
adc
es
fldenv
push
cmpsb
mov
repnz
sbb
ret
rorl
adc
cmpsb
ret
mov
xchg
xor
stos
push
je
stos
int
cmp
push
hlt
mov
and
es
push
jbe
mov
inc
lahf
mov
xchg
loop
scas
test
jb
xlat
push
je
mov
xor
movsl
popa
mov
adc
cmp
sbbb
cmp
hlt
mov
shrl
push
outsb
jnp
sbb
sbbb
mov
dec
push
mov
inc
xchg
sub
shlb
pop
and
pop
mov
iret
mov
mov
outsl
or
jb
xor
or
jne
je
push
jbe
loope
add
rorb
jbe
inc
jecxz
daa
outsb
in
xchg
lcall
int
dec
leave
xor
mov
ljmp
lods
fisubs
out
cmc
lods
lcall
popf
adc
dec
and
repnz
mov
daa
out
xchg
in
and
insl
in
mov
rep
sbb
stos
ret
pop
into
sbb
mov
sbbl
out
scas
sub
lods
adc
decb
outsb
xor
jg
mov
mov
xchg
dec
lahf
sbb
gs
lds
cli
add
push
sbb
xor
push
add
cwtl
roll
cmp
pop
jbe
inc
popa
frstor
mov
push
or
sub
and
sbb
and
stos
xor
lods
dec
int
loop
push
pop
out
sbb
pop
xchg
pushf
push
dec
mov
out
in
les
scas
xchg
mov
or
xor
out
insb
push
hlt
push
mov
lods
leave
sub
inc
xchg
xor
jo
outsl
mov
scas
xchg
jo
mov
push
lcall
daa
out
jmp
inc
dec
inc
out
movsl
cmpsl
mov
cmp
or
sub
sbb
in
adc
push
test
aaa
add
scas
mov
fwait
mov
pop
adc
ljmp
nopl
and
mov
imul
push
popa
loopne
das
xlat
test
decb
into
test
dec
add
out
cmp
pop
fiaddl
add
decb
repnz
pop
cmp
and
mov
outsb
in
roll
ficomps
push
lret
or
popa
or
adc
push
mov
cmp
enter
push
roll
testl
scas
fwait
mov
clc
sbb
mov
int
inc
lea
iret
xchg
mov
jge
outsl
pop
xor
out
jbe
ja
dec
mov
imul
aam
cmpb
addr16
or
neg
mov
js
rorb
xchg
lods
gs
adc
pushf
lcall
filds
or
xor
jb
lds
ret
in
sbb
xchg
add
and
cmpsb
stc
pop
das
adc
movsb
call
mov
es
fisubrs
scas
inc
adc
sub
fcomp
jp
sbb
dec
fstpt
or
add
stos
mov
xchg
daa
out
or
rol
ds
push
nop
loopne
sbb
xchg
mov
mov
mov
sarb
or
xchg
pop
mov
test
push
push
mov
outsb
test
push
mov
lock
dec
lock
add
mov
dec
xchg
mov
iret
lahf
xchg
cmp
call
sbb
js
sbb
and
sub
inc
stos
insb
push
insb
dec
insb
loop
aaa
lahf
push
xor
cmp
jbe
sbb
icebp
fimuls
imul
hlt
bound
jge
stos
repnz
js
xchg
xor
outsb
bound
pop
ds
sub
cli
iret
mov
and
push
cmp
dec
arpl
inc
cmp
popf
adc
sbb
aad
jbe
mov
mov
fwait
mov
xor
addr16
lods
inc
sub
xchg
xor
xchg
cs
xor
adc
iret
dec
out
jbe
fsubp
leave
fwait
test
imul
xchg
mov
aas
push
add
xor
lods
dec
fs
notl
inc
cmp
fidivs
scas
jle
sub
xchg
mov
push
sbb
test
sbbb
jae
mov
inc
dec
idivl
and
cmpsb
sub
aas
sarb
pop
loop
icebp
xchg
jns
xchg
je
xchg
int3
mov
ret
sarb
mov
pop
enter
into
psubq
add
mov
clc
mov
mov
push
in
sbb
or
and
loop
fdivrs
inc
sbb
lcall
aaa
or
cli
roll
insl
jmp
mov
mov
xor
je
xchg
mov
mov
repnz
imul
mov
stos
sbb
sahf
test
dec
adc
lret
xor
sbb
dec
mov
jp
xor
fimuls
push
sub
test
push
and
or
addr16
ret
mov
jmp
mov
ja
in
pop
push
in
inc
flds
inc
faddl
cmp
data16
in
xchg
jb
subb
sub
adc
aas
mov
addl
icebp
sbb
mov
mov
or
lds
les
scas
gs
cmp
in
test
adc
push
imull
nop
shrb
mov
sbb
adc
aaa
jo
sahf
cmp
loope
out
inc
xor
mov
mov
fcoml
mov
outsl
orl
test
xchg
icebp
xlat
cmp
add
loop
jo
push
fidivs
sbb
pusha
aad
in
imul
fnsave
gs
add
ficoml
pop
xor
xchg
adc
push
adc
lods
sti
push
aad
cwtl
pop
xchg
jae
std
dec
dec
pop
and
cmp
or
stos
es
mov
sahf
push
je
add
loopne
lahf
je
push
subb
loopne
sti
cmp
mov
and
int
iret
jae
mov
push
mov
stos
and
addl
push
push
aam
es
or
es
fistpl
repz
insb
int
push
mov
repnz
shrb
mulb
or
sub
jg
sbb
mov
shll
js
shlb
lret
sbb
out
adc
aas
cld
cmpsb
insb
cwtl
test
push
test
adc
pop
testb
fsts
iret
add
pop
pop
push
xchg
sub
inc
pop
mov
rorl
cli
pop
mov
das
scas
push
and
inc
dec
lods
push
mov
stc
adc
xchg
mov
mov
js
ljmp
add
xor
loopne
or
inc
pop
mov
mov
mov
jo
xchg
mov
push
mov
in
xor
sbbl
add
inc
pop
jp
xor
xchg
sbbl
adc
dec
out
scas
jp
mov
mov
push
popaw
cmp
push
gs
loopne
psrld
pop
clc
cwtl
jmp
outsb
or
into
pop
lea
filds
and
clc
fstpl
lcall
int
aam
sbb
das
add
xor
xchg
in
scas
jbe
sub
lahf
ss
aad
enter
jno
das
jno
add
and
push
and
iret
test
xchg
sbb
test
xchg
dec
cmpsl
lret
fs
cwtl
mov
mov
jbe
les
icebp
dec
push
xor
xchg
popa
inc
sub
stos
test
movsb
dec
incl
fcompl
adc
test
ljmp
in
cmp
insl
push
or
popf
cwtl
xchg
movsl
xor
rorb
or
aaa
mov
cmp
dec
lds
xorl
call
in
mov
out
sbb
mov
mulb
das
jbe
push
sub
cltd
je
arpl
mov
das
adc
shl
daa
xchg
push
sarl
xor
ret
pop
cmc
mov
mov
mov
test
call
repz
in
dec
loop
or
ret
ds
pop
lods
adc
repnz
test
xchg
inc
lret
aam
mull
insl
rorl
xor
daa
fs
int3
inc
aad
cmp
lret
mov
nop
sbb
or
lods
mov
imulb
mov
ss
jge
pusha
inc
repz
lods
test
mov
andl
das
sub
mov
or
bound
mov
inc
scas
pop
idivl
jmp
or
fcomps
or
adc
fstps
or
sub
popl
pop
fists
rcll
push
repz
pop
xor
mov
cmp
fisubrl
sub
subb
scas
mov
fcompl
jmp
cltd
or
inc
sbbl
notb
push
imul
pop
xchg
cld
xor
inc
sbb
jne
jno
pop
or
fstps
mov
nop
shrl
sbb
pop
xchg
leave
clc
iret
pop
leave
push
push
cmp
sub
dec
aaa
jp
and
testl
mov
mov
adc
xor
lods
sub
xchg
inc
jns
call
mov
lret
ljmp
mulb
call
shlb
test
lds
xchg
ja
jmp
sub
xor
mov
addb
fucomip
ljmp
push
pop
push
xor
mov
sub
inc
loopne
pushf
mov
sub
psraw
pop
mov
arpl
and
repnz
dec
cmp
add
js
adc
mov
mov
inc
outsl
and
lods
aad
jmp
push
xor
jle
iret
mov
daa
shl
mov
mov
add
pop
mov
out
add
sbb
out
and
xchg
add
push
jb
xchg
push
sbb
xor
push
out
push
roll
push
jb
rolb
lods
testl
add
mov
sti
dec
add
out
dec
std
sarl
mov
cwtl
fsubr
add
enter
rcll
ja
or
mov
push
mov
mov
mov
cmp
data16
mov
test
sub
shll
and
sti
mov
mov
setns
xchg
sbb
lds
dec
outsb
pop
mov
inc
out
out
test
call
in
call
jl
leave
mov
jne
and
mov
outsb
jbe
dec
stos
int
jecxz
or
adc
daa
add
dec
fnstenv
lret
pop
push
xlat
rorl
shll
mov
and
mov
pop
mov
lock
push
jb
jle
mov
dec
roll
out
test
ds
fisubl
adc
pop
push
fwait
aaa
and
inc
inc
dec
xchg
inc
sub
adcb
mov
pop
add
sub
xchg
call
loope
fsubs
mov
stos
clc
rolb
rcl
adc
mov
test
inc
lahf
jb
sbb
push
jb
jne
fwait
cltd
enter
mov
leave
xchg
rcl
mov
adc
jecxz
scas
shlb
imul
std
clc
loop
out
cmp
cmp
addr16
xor
fdivl
notl
shll
xlat
cmpsl
pop
lcall
ds
and
popf
loopne
add
lcall
xor
add
fcmovbe
pop
push
jmp
jns
sbb
bound
out
nop
xor
push
rorl
jl
popa
stc
imul
push
lock
inc
in
out
adc
out
stos
cmpsl
popf
xchg
ret
xchg
mov
mov
sbb
scas
loopne
xchg
enter
in
ret
adc
sahf
int
push
das
test
xor
shrl
mov
out
stos
into
into
pop
mov
rol
mov
orl
push
test
stos
ret
and
mov
push
inc
sbb
xchg
in
fdivl
jp
inc
mov
and
sbb
pusha
adc
ljmp
addl
mov
or
jo
iret
sbb
pop
outsl
push
lret
mov
cmpsb
sub
sub
adcb
adc
push
das
push
sub
mov
or
mov
shl
fcoms
jb
pop
xchg
fsubl
arpl
sub
mov
inc
lods
movsb
mov
inc
and
cmpb
loopne
adc
cmp
dec
xchg
mov
add
pop
xor
lea
mov
out
insb
pop
push
add
mulb
nop
nop
inc
fucom
mov
mov
inc
sbbl
lods
sbb
inc
adc
fisttpl
test
icebp
or
imul
inc
and
jbe
sbb
push
bound
add
xor
pusha
push
push
jne
mov
stos
iret
addb
xchg
repz
sbb
addr16
or
outsl
cmc
add
mov
adc
rcll
cli
inc
mov
pop
clc
icebp
adc
scas
cltd
and
cmp
ljmp
stos
push
inc
mov
mov
dec
jae
dec
pop
adc
mov
xor
jmp
out
jno,pt
push
mov
stc
syscall
xor
mov
xor
mov
jp
sub
inc
scas
jl
iret
pop
jmp
xchg
push
lahf
jae
xchg
pop
mov
loope
push
and
inc
inc
in
jbe
and
or
xor
inc
rclb
push
jb
jmp
mov
inc
loop
lcall
inc
aad
jge,pt
les
sbb
sub
notl
or
or
add
loopne
cmp
int3
dec
mov
in
xchg
filds
nop
shll
and
xchg
dec
iret
pop
mov
or
dec
rorl
cmp
jno
ficomps
push
sub
add
dec
ret
sbb
outsb
popa
pop
add
dec
cmp
sub
pop
dec
jle
xor
shlb
xor
fucomip
push
jl
lcall
fstp
push
xchg
ret
xchg
lods
shl
sbb
mov
sub
dec
ds
cmc
inc
insb
jne
mov
push
popa
cmp
inc
push
xor
mulb
sti
jge
sbb
ret
sbb
jecxz
out
push
add
loop
sub
das
fstl
sub
rep
inc
push
mov
xor
orl
cmc
jbe
sbb
and
das
cld
int3
pop
push
sub
pop
or
aas
fldt
mov
inc
pop
cld
js
stos
cmc
and
dec
daa
movsb
xchg
std
pushf
sbbb
testl
cwtl
arpl
mov
push
pop
push
sub
xor
pop
sbb
and
xor
mulb
push
jg
cld
mov
cmp
loopne
stos
adc
fcomp
fs
test
pop
cmp
lret
and
aam
jae
nop
add
xor
hlt
xor
shlb
outsl
fidivl
and
faddl
pop
ds
or
dec
lds
inc
lods
frstor
lret
xor
xor
dec
bound
pushf
inc
aam
jno
mov
add
mov
ss
fcompl
arpl
leave
mov
add
mov
mov
mov
fadd
lahf
sti
es
out
jnp
and
leave
dec
stos
adc
je
mov
add
mov
int
xchg
fnsave
xchg
push
jne
je
jg
repz
fistl
js
and
pushf
in
jl
scas
popa
adc
leave
push
int
aaa
jbe
idivl
pop
aas
out
movsb
cltd
cmp
inc
call
sub
mov
push
repnz
push
pop
pop
push
and
sub
and
iret
xor
mov
inc
inc
mov
lock
adc
or
and
enter
mov
dec
lret
les
enter
addr16
pop
xor
mov
daa
pop
fisttpl
adc
jmp
xor
add
cmpsb
in
inc
bnd
add
adc
push
inc
jbe
or
add
mov
fwait
shll
xchg
pop
lcall
cmpsb
cmpsl
aad
push
in
pusha
imul
ds
negl
xor
popf
and
sarl
loop
inc
and
add
int
mov
cmc
leave
dec
in
les
imul
lods
sbb
js
cli
mov
in
and
popa
aaa
push
pushf
ret
cld
pop
inc
push
cltd
or
jae
mov
stos
xor
push
push
push
popf
lds
adc
lods
shrl
adc
test
sbbl
adc
mov
pop
inc
hlt
pop
gs
int3
cli
dec
outsl
fmull
inc
clc
sbbl
inc
rorl
add
cmc
mov
xchg
or
rolb
mov
sub
dec
add
test
add
sbbl
lcall
shlb
cmp
mov
push
dec
ljmp
stc
scas
pop
lret
sbb
ljmp
stos
out
cmpb
addr16
repz
bound
insb
push
push
sbb
jp
dec
adc
mov
push
stos
pop
out
mov
lret
in
arpl
cmpsb
outsl
sub
cltd
fmulp
push
into
jle
fcomps
push
sbb
adc
push
pop
or
dec
push
das
sub
jl
push
std
in
pusha
add
mov
push
call
sahf
out
inc
pop
bound
push
call
dec
out
wrmsr
dec
mov
xchg
into
jmp
inc
orl
movsb
mov
pop
push
fmulp
pop
adc
and
pusha
out
lret
insl
mov
cmp
outsl
inc
in
lock
dec
clc
mov
pop
jo
and
insb
inc
push
jb
test
xchg
push
sahf
lcall
sub
test
ja
es
stc
sub
mov
aad
mov
in
sub
mov
lock
jmp
mov
in
mov
sub
rorb
push
sarb
filds
cltd
rep
movsb
xor
push
ret
mov
leave
daa
sbb
bound
sub
adcl
scas
and
inc
movsb
lods
je
cmp
repnz
pushf
fisubrl
xchg
ja
xor
cmp
inc
xlat
clc
das
or
and
mov
cmp
ret
adc
lret
mov
insl
push
movsb
adc
adc
or
add
outsl
test
jo
add
mov
lahf
test
in
lret
fs
jb
fs
xchg
jmp
add
fwait
xchg
xchg
sti
cmp
repnz
lret
jnp
add
pop
sarl
xor
xor
and
ficoms
scas
xchg
aam
lahf
inc
pop
pop
sub
jbe
inc
out
xor
inc
jnp
mov
js
mov
idivb
data16
adc
and
mov
push
push
inc
out
out
add
push
xor
fsubrs
movsl
leave
inc
xor
jbe
mov
push
jb
and
shl
imul
loopne
push
sbb
mov
jno
aam
sub
sti
push
fdiv
fs
data16
std
cmpsl
insl
inc
xor
ljmp
lods
out
jns
outsl
mov
xlat
pop
pop
xor
jmp
icebp
dec
insb
std
mov
add
or
pop
insb
mov
call
sub
mov
cmp
leave
dec
gs
aad
add
xchg
inc
leave
aad
or
pop
cmpsb
fs
daa
iret
jmp
mov
ret
mul
loop
fadds
mov
and
mov
scas
add
or
data16
scas
in
fcompl
mov
out
jno
xor
out
je
int
cmpsl
lea
call
ja
fcomp
icebp
sbb
sti
push
sbbl
add
in
nop
andb
nop
or
cmp
push
pop
lcall
lahf
popl
adc
add
mov
sub
sbb
and
rcll
push
insl
jb
jne
sub
test
repz
pop
dec
aaa
out
or
jb
sub
inc
lea
test
hlt
lock
push
popf
sub
mov
xchg
cmovne
jp
fcomip
mov
insl
jo
lret
es
jge
adc
mov
mov
xchg
mov
sbb
aam
adc
pushf
bound
movsb
inc
push
sub
dec
aad
pop
cmp
cmp
inc
movsb
xchg
jno
inc
push
jns
rcrb
jmp
xor
js
ja
sbb
and
fildll
jne
cmpsb
add
pop
sbb
popf
ja
cmp
pop
xchg
mov
shll
mov
xor
cmp
jnp
mov
sbb
mov
sbb
xchg
mov
mov
jg
cmp
cmc
adc
push
xchg
pop
ret
cmpxchg
mov
outsl
and
adc
sub
cmp
loopne
ret
xor
fcoms
arpl
add
fcmovne
ud2
cld
cmpb
push
xor
pop
push
lahf
mov
mov
mov
xlat
std
lds
cmp
xchg
xchg
adc
jge
rorb
stos
cmp
dec
adc
sub
lea
lcall
cli
dec
imul
repz
add
jnp
push
jecxz
lock
lods
mov
inc
nop
addr16
xchg
add
sbbb
ss
ds
add
addl
or
cs
test
push
xchg
stos
inc
es
add
dec
sub
pusha
xchg
clc
cmp
or
repz
bound
leave
fiaddl
jmp
cmp
mov
lret
mov
arpl
push
ret
stos
mov
mov
or
ja
dec
pop
push
vsqrtsd
pop
loope
hlt
cwtl
imul
xlat
jg
or
les
repnz
mov
pop
mov
cmp
mov
dec
pop
cmpsl
sbb
cmp
into
push
cmpsb
mov
mov
dec
inc
push
mov
hlt
lret
push
std
lahf
mov
mov
cmp
inc
outsl
xor
in
int
or
fs
adc
aam
mov
or
fdivrl
idivl
pop
inc
jp
sahf
mov
pop
adc
jno
in
push
pusha
or
jo
ljmp
inc
mov
push
xlat
stc
es
xchg
and
sbb
xor
and
leave
jae
xor
andb
adcb
inc
inc
pop
call
out
mov
mov
mov
push
inc
dec
std
test
mov
cli
scas
xor
fs
cli
or
inc
dec
xlat
movsl
mov
in
jae
hlt
fisttps
andb
pushf
xor
lcall
sub
arpl
dec
sbb
lret
push
aam
cld
push
cmp
das
daa
pop
int3
loopne
lret
pop
inc
xchg
mov
jno
xchg
xchg
out
jecxz
fs
cmp
mov
add
mov
pop
dec
jb
orl
xor
pop
imul
xchg
std
inc
xchg
cmp
scas
fimull
push
add
dec
inc
xlat
popa
stos
paddsb
js
lahf
add
xchg
or
fs
jno
xor
push
out
cmp
or
out
cmp
adc
mov
jne
lock
lea
xor
mov
stos
pop
cmp
rolb
sub
cmp
or
into
stos
cmp
mov
movsb
jmp
jbe
fisttpll
fwait
pop
cmp
addb
xchg
gs
pop
pop
cvtps2pd
test
dec
push
add
popf
fcomi
fcmove
add
adcl
pop
mov
xchg
idivl
inc
in
pop
imul
xor
mov
xchg
cmp
add
xor
fs
inc
add
push
sarb
push
call
mov
inc
scas
adc
inc
pop
cmp
pop
jecxz
arpl
test
int
cwtl
push
xchg
js
xchg
outsb
and
sub
rcrb
sub
dec
xor
jmp
ficompl
add
das
sarb
cmp
sbb
fwait
jb
xchg
pop
decl
insl
xor
fisttps
xchg
adc
and
jb
push
sub
xor
subl
sbb
inc
jge
in
inc
lods
xchg
rcr
sub
dec
pushf
push
mov
xor
and
or
pop
jb
xchg
cmpsb
test
idivl
and
jne
dec
rorb
add
das
dec
popa
or
je
decl
insl
fimull
aas
mov
sub
aad
xchg
test
mull
rorb
notb
cltd
xchg
mov
dec
lea
xor
cmpsl
lea
xor
aad
jle
mov
not
pop
pop
insb
neg
push
gs
outsb
mov
cmp
pop
popa
cmpsl
outsl
into
ljmp
mov
mov
push
sub
outsl
cmpsl
popa
mov
es
loope
stos
cmp
fstpl
loope
dec
jge
sti
mov
lock
fstpt
test
lds
jnp
leave
xchg
jmp
and
cli
shr
cwtl
dec
pop
lds
push
call
xchg
push
add
mov
rclb
ret
fwait
imul
outsb
cld
jmp
ss
hlt
xchg
xchg
nop
stos
incl
dec
arpl
imul
mov
lcall
shll
xchg
out
outsb
push
and
pop
packssdw
enter
aam
outsl
ds
mov
lret
and
xor
mov
fstpl
out
pop
cmp
ss
mov
add
test
mov
stos
dec
dec
sub
push
and
aaa
mov
and
cmpsl
jae
push
imulb
adc
movsl
sub
test
dec
jg
lds
mov
fs
inc
popf
mov
aaa
fucomip
ss
mov
sub
mov
mov
or
xchg
and
jge
mov
dec
jbe
and
dec
cmp
mov
es
xor
sub
into
inc
ficoml
test
mov
dec
je
jo
pop
sub
adc
test
xchg
xor
mov
out
cmpsb
adc
ljmp
cld
sub
jmp
mov
mov
popf
cmp
xchg
movsl
out
xchg
inc
jb
inc
outsb
adc
stos
adcl
push
or
out
lock
push
mov
xor
fcom
out
in
andl
mov
jg
sbb
outsl
gs
repz
popa
nop
add
jecxz
fs
inc
and
mov
jno
arpl
pop
xlat
push
fdivrs
decl
bound
and
inc
imul
pushw
xchg
stos
jne
and
fnsave
lret
adc
inc
pop
cmp
lds
add
in
mov
in
test
in
inc
fisubrs
cli
add
xchg
out
negb
in
in
add
sbb
scas
dec
loope,pt
cmpsb
add
ret
nop
jecxz
iret
jl
adc
lret
pop
ret
scas
mov
arpl
mov
sub
xor
jl
stos
jmp
lods
lds
les
push
loop
xorb
xor
fdivl
add
addr16
xchg
aad
pop
sbb
lret
insl
pop
add
sub
pop
dec
cltd
icebp
adc
inc
out
es
push
inc
mov
in
inc
dec
imul
loope
jp
inc
repz
mov
ret
inc
ljmp
pop
jmp
jl
dec
fisttps
inc
push
cs
rolb
imul
stos
push
inc
outsl
pop
pushf
cwtl
or
jnp
js
mov
ds
push
push
jle
xlat
mov
jnp
ljmp
loop
jmp
add
sub
push
shll
xor
xchg
cwtl
fdivs
xor
in
adc
scas
scas
sbb
jge
xchg
movsb
jl
jae
cmp
addr16
push
jecxz
jno
fistpl
sbb
sub
pop
dec
loop
add
repz
mov
stc
jns
sub
xor
push
sub
mov
stos
inc
sbb
pop
inc
in
jp
loop
fwait
mov
cmp
sbb
rorl
jae
imul
das
hlt
xor
ds
orl
fdivrs
pop
nop
jbe
into
ret
mov
lods
xchg
jo
insl
fisubl
dec
xor
sahf
outsb
mov
mov
adc
jns
lea
cs
inc
mov
adc
cltd
inc
or
scas
out
clc
repz
gs
mov
push
cli
rorb
cmp
out
inc
cmpsl
xchg
movb
xchg
push
repz
xlat
cmp
dec
outsb
xor
sbb
mov
mov
xor
fimuls
movsl
mov
and
icebp
and
inc
lds
das
jne
cltd
addb
jns
mov
xchg
xchg
dec
sbb
mov
push
outsb
and
dec
push
pushw
pop
ret
xchg
mov
repz
lods
pop
icebp
clc
sbb
ret
cmp
popa
movb
pop
xor
lidtl
xchg
movsl
sub
mov
add
testb
les
movsb
xor
stos
mov
xorl
adc
cli
sbb
les
ljmp
mov
ljmp
out
clc
lods
sub
movsb
leave
xor
loopne
test
loopne
sub
fwait
cmp
sub
imul
dec
sbb
mov
jnp
push
jl
inc
xchg
lcall
in
arpl
rclb
xchg
push
push
xchg
nop
cltd
iret
cli
mov
scas
mov
cmp
subl
cmp
adc
xchg
inc
add
mov
fwait
mov
js
lea
add
add
jae
sbb
cmp
add
outsl
cmc
add
xchg
jne
pusha
or
icebp
push
cld
jmp
imul
mov
mov
fildl
push
mov
pop
stos
aad
cmp
jo
ljmp
dec
test
inc
and
pop
mov
jnp
fwait
dec
sub
jbe
push
mov
inc
xchg
jb
ss
icebp
into
and
out
rorb
sbb
lods
lcall
xor
xchg
fistpl
aaa
add
adc
fdiv
xchg
fcomip
sbb
sbb
test
outsl
pop
jbe
mov
inc
cld
icebp
bound
adc
push
jbe
inc
push
jbe
popl
out
and
inc
xchg
jp
adc
sbb
std
pop
in
jne
in
xor
jno
ja
mov
pop
into
shlb
mov
jecxz
lds
cli
fsubp
pop
sbb
popf
mov
jecxz
xlat
outsl
flds
pop
fdivrs
cmc
repz
pop
rolb
fs
mov
daa
push
rcll
pop
stc
cmp
mov
outsb
push
rclb
add
push
stos
sbb
inc
adc
push
xor
push
cmp
inc
add
mov
les
pushf
jo
aas
mov
into
sbb
lds
std
xchg
jb
add
adc
nop
dec
stc
and
fists
fidivrs
mov
mov
out
addb
jne
ds
and
mov
mov
insl
dec
dec
in
mov
test
aad
pushf
stc
push
push
xor
pop
pop
fildll
jmp
pop
lcall
hlt
stos
fisubl
mov
cmp
and
std
cltd
roll
pop
fadd
out
pop
stos
mov
dec
jne
into
outsb
jbe
cmpsl
clc
testl
fiaddl
iret
and
adc
lahf
sbb
scas
repz
and
bound
cmc
popa
iret
adcb
cmp
xor
repnz
and
stos
cmp
push
test
dec
sbb
mov
outsb
sbb
pxor
aad
ret
push
bnd
sbb
pusha
mov
stc
pop
fadd
sbb
or
cwtl
push
sbb
add
stc
aam
xor
jmp
mov
xchg
pop
pop
sahf
push
stos
xchg
xor
or
mov
je
mov
pop
inc
fcompl
adc
add
outsb
aas
xor
fwait
fwait
pop
dec
dec
pop
sbb
xor
xchg
daa
add
or
jae,pn
pushf
fistpl
outsb
cmp
shr
aad
add
popa
sub
sub
mov
mov
enter
fucom
lods
xchg
push
daa
out
xor
dec
push
xor
pop
mov
sub
sub
sbb
mov
lcall
and
inc
adc
adc
lret
sbb
sbb
adc
mov
push
xor
push
outsl
sbb
jp
rcll
add
jg
cmp
and
ja
jmp
mov
xor
mov
call
pop
ficoml
sbb
sbb
and
push
lret
dec
sub
mov
popl
jnp
or
sbb
push
and
gs
insb
shlb
jl
pop
fsubr
lods
or
cmpsb
and
fst
dec
lock
mov
dec
js
ret
push
xchg
in
or
push
mov
pop
shl
cmpsb
jae
icebp
stos
or
ds
dec
es
add
sti
sub
std
jbe
xchg
sbb
fnstcw
jmp
bound
dec
aaa
std
rolb
jmp
mov
fbld
sahf
jge
sub
pop
mov
into
mov
cmpsl
pop
or
das
std
and
in
in
mov
ret
aam
cmp
lods
test
bound
clc
pusha
shlb
dec
pop
pusha
cmp
mov
inc
add
test
clc
xor
dec
mov
jge
filds
enter
jmp
mov
out
and
sbb
or
sbb
sbb
jecxz
pop
lahf
ficomps
xchg
inc
frstor
je
mov
hlt
inc
bound
pop
pop
pop
cmp
dec
adc
mov
lret
add
add
xchg
inc
daa
fiaddl
xor
ds
lea
into
and
pop
movsb
push
in
add
mov
mov
cwtl
push
jmp
xchg
cld
add
and
mov
ss
addl
arpl
jne
push
sub
cmp
sub
int
cs
xor
mov
mov
in
into
mov
xorb
jno
or
inc
mov
adc
adc
enter
mov
mov
and
pop
push
lahf
data16
mov
adc
test
cmp
push
mulb
xor
xchg
js
mov
data16
out
imul
push
addl
faddl
jno
stos
sbb
lret
shll
xor
push
push
mov
pop
mov
loop
xchg
adc
or
out
add
dec
popf
scas
shll
fsubl
lock
sbb
dec
jecxz
in
adc
das
xor
mov
xor
pushf
fisubrs
dec
and
orl
pop
mov
rclb
cmc
pop
mov
and
sbb
mov
push
std
pop
mov
and
lret
pusha
adc
aas
mov
xchg
add
out
mov
fstl
fcomps
push
adc
mov
dec
icebp
xor
scas
nop
push
push
mov
lret
jno
movsl
push
pushf
and
ret
or
jp
mov
sbb
divl
pop
add
int3
jecxz
pop
in
sbb
or
xor
fdivr
dec
fmull
out
pop
sbb
movsl
das
inc
mov
mov
cmc
sub
test
shr
sub
jns
pop
imul
ret
mov
inc
jne
xchg
fcompl
and
and
mov
lahf
xor
xchg
jne
leave
cmc
jae
or
pop
xchg
adc
sub
arpl
mov
mov
or
xchg
fnstcw
call
lcall
xor
xor
push
jo
or
xchg
mov
or
loopne
lea
insl
mov
mov
or
jmp
pop
insb
scas
dec
xor
adcl
dec
add
stos
or
xchg
insb
ret
xor
mov
fidivs
sub
lods
dec
mov
xchg
sub
adc
test
loop
lahf
xlat
push
push
dec
inc
imul
lock
gs
add
mov
insb
sbb
add
incl
and
or
das
cmpl
jecxz
shll
mov
pop
test
scas
sti
dec
insl
sahf
inc
push
jmp
insl
lea
xchg
dec
mov
out
push
cmc
and
inc
xor
enter
aas
mov
aad
push
adc
leave
loopne
in
sub
jmp
xchg
pop
call
cmp
test
add
xor
cmp
sbb
inc
xor
imul
leave
and
mov
push
xchg
inc
adc
mov
xchg
jmp
pop
loopne
inc
or
jle
mov
or
pop
popf
add
ret
aam
lret
inc
fdivs
xchg
outsl
pop
jge
daa
div
icebp
sbb
decb
pop
dec
sarb
mov
pop
fsincos
push
push
mov
ja
jno
nop
sbb
sbb
xchg
or
test
cmovs
and
int
lret
popa
inc
cmp
xchg
mov
push
cmpsl
clc
jns
mov
or
jge
or
lock
pop
jmp
add
xlat
pusha
cli
and
sub
cltd
andl
testb
fnstenv
xor
dec
ljmp
ret
popa
cmp
fidivs
negl
add
cmp
js
mov
out
xchg
test
rorb
outsb
fsubrs
aad
sbb
pop
shl
lods
pusha
ficompl
sub
pop
pop
fstpl
inc
inc
dec
mov
or
pop
add
ljmp
dec
mov
lds
enter
xor
nop
test
dec
mov
cwtl
sti
scas
inc
sbb
jbe
stc
cmp
fstl
xor
adc
push
ja
fidivrs
inc
popl
ljmp
push
scas
push
mov
loope
popa
sti
pop
int
dec
fs
cli
add
adc
pop
cli
xor
xchg
sbb
pushf
fnstenv
rorb
in
ss
aaa
mov
mov
daa
xorl
jmp
cmp
pop
es
dec
jmp
push
adc
mov
loop
dec
lea
adc
xorb
popf
pop
das
xchg
push
push
fnsave
xor
adc
inc
fidivl
push
fs
mov
es
out
xlat
mov
dec
test
jae
stos
clc
in
sti
cmp
fildl
dec
cmpsl
ja
cmp
jne
iret
mov
outsl
fstl
loopne
xchg
adc
pusha
mov
jb
ret
loope
or
add
mov
je
adc
pop
fs
pop
cmp
mov
inc
and
sub
add
fsubl
cld
push
mov
in
mov
mov
mov
xor
sbb
sbb
or
cmpsb
cwtl
add
push
mov
mov
pop
mov
rorb
xchg
fdivrs
fisttps
cmp
jbe
stos
cli
and
add
imul
pop
gs
movsl
xchg
inc
dec
js
jns
xor
movsb
and
mov
das
jno
cmp
ror
mov
inc
push
xchg
jge
pop
dec
rclb
fcoms
pop
xor
pop
nop
out
ret
xchg
or
lret
inc
xor
adc
aas
mov
pop
bound
gs
adcl
mov
shl
mov
or
cwtl
scas
jno
dec
sub
lret
bound
lock
sbb
or
data16
mov
scas
icebp
in
fidivrs
mov
pop
in
push
mov
fistps
ret
je
or
das
pop
xorb
sbb
mov
out
jnp
push
push
pop
sub
jl
xchg
push
and
and
add
ds
call
mov
add
fadd
sub
jl
mov
mov
in
xor
loopne
ret
fidivrl
jmp
sub
rcl
lcall
icebp
add
push
out
add
test
push
and
mov
stos
cmp
lods
scas
adc
mov
sbb
push
jmp
sub
inc
xchg
cmpsb
sbb
jecxz
jle
movsb
stc
pop
in
aam
mov
adc
and
cmpsb
sub
aaa
push
addr16
cs
pusha
cmpsl
cmp
sti
nop
xor
xor
xor
push
or
adc
add
mov
pop
lods
cli
fnstsw
lds
lds
adc
xchg
adc
mov
jnp
fistpl
ret
fs
lret
xchg
outsb
mov
hlt
dec
cwtl
adc
neg
bound
xchg
inc
pop
pop
pop
mov
pushfw
sbb
outsl
hlt
incl
dec
and
icebp
mov
push
rol
movsl
leave
testb
in
lcall
and
push
xchg
inc
xlat
fxch
push
stc
cli
in
aaa
addr16
push
dec
inc
and
sbb
adc
sbb
ret
mov
adcl
jae
jmp
mov
movb
into
mov
out
pop
inc
mov
nop
jno
ljmp
popa
js
sub
mov
mov
jae
sub
and
stc
mov
daa
pop
cmp
jne
adc
ljmp
or
jae
popa
sahf
pop
mov
sahf
in
sbb
frstor
jo
lock
and
and
xchg
das
pop
mov
sub
int
inc
enter
and
inc
cmp
out
aas
jmp
outsl
ss
lea
inc
stos
push
mov
loopne
cli
cld
and
scas
les
aas
add
and
daa
repz
jmp
mov
and
jp
pushf
dec
movsb
popa
ret
push
push
or
popa
cmp
jle
push
lret
into
fwait
scas
pop
fldenv
shrb
and
xor
stc
out
sbb
repnz
and
scas
adc
cmp
in
xor
add
call
sub
lahf
inc
mov
jnp
rolb
out
jle
mov
outsb
or
insl
call
clc
iret
xchg
add
fchs
or
in
pop
add
sbb
jns
lahf
jb
push
adc
xchg
push
scas
dec
jo
rcrb
pop
inc
lea
adc
mov
fiaddl
in
outsb
cld
sbb
int3
jnp
pop
fs
addr16
xor
xor
pop
into
push
and
out
jo
xlat
cmpsb
sub
scas
clc
ljmp
scas
or
mov
push
out
fsubr
sbb
jnp
mov
cwtl
int3
sbb
add
pushf
and
repz
insl
and
push
les
adcl
add
jo
adc
cmp
mov
mov
cmp
or
movl
pushf
pushf
iret
inc
movsb
xchg
mov
ss
nop
mov
and
add
dec
outsb
mov
mov
ss
xor
cmp
shll
in
sbb
std
xor
cld
scas
or
or
ffreep
das
test
movsb
sahf
jae
cs
jle
pusha
inc
push
or
leave
lahf
faddl
mov
push
dec
xor
pop
mov
mov
cmp
xor
inc
pop
stc
xchg
imul
icebp
jecxz
cld
out
imul
or
repz
fcompl
icebp
mov
mov
or
shrl
mov
scas
ds
mulw
push
dec
mov
pop
jmp
add
lahf
xchg
cmpsb
aaa
pop
pop
in
movsl
out
add
int3
push
xor
xchg
jecxz
dec
into
testl
loope
shl
cli
sub
int
and
insb
fcompl
mov
adc
push
pop
xor
dec
adc
enter
inc
rcrl
push
cli
push
ss
sbb
mov
bound
or
sub
lods
fisubl
hlt
xchg
mov
insl
inc
mov
pop
jle
and
in
mov
mov
jge
imul
outsb
rcl
dec
or
jbe,pt
mov
cwtl
insb
test
loopnew
inc
mov
das
cmp
mov
jb
jg
push
mov
mov
mov
xchg
inc
mov
pop
inc
mov
out
das
xchg
lret
in
adc
add
mov
sbb
or
js
lds
push
fwait
stos
dec
repnz
mov
dec
pop
mov
loope
jns
stos
stos
jo
insl
xchg
add
jp
mov
cmpsb
and
dec
fdivr
movsb
jl
shrl
outsb
int
divl
pop
std
sub
test
cmp
sub
out
and
fidivrs
sub
test
jecxz
inc
mov
pop
inc
lods
leave
add
push
cmp
andl
js
loop
test
xor
scas
cwtl
test
sub
andl
add
aad
int
mov
mov
addr16
les
mov
lea
int
shlb
fcmovb
rcll
and
jne
xchg
or
lea
sahf
rclb
lds
mov
push
sbb
add
test
dec
pop
jle
jae
insb
xchg
shll
int
push
dec
popf
inc
out
imul
call
aam
dec
cmp
add
jmp
loopne
daa
iret
jle
jmp
popa
je
movsb
cli
call
out
mov
das
xor
ret
fildl
scas
pop
leave
jl
ja
mov
movl
lock
sub
or
fstpl
int
ret
jbe
and
xchg
inc
cmp
out
arpl
mulb
in
or
aaa
sahf
mov
jne
pop
xor
insl
aad
call
cmp
cmpsb
lcall
push
movsl
and
popf
mov
movsl
movsb
rorl
insb
ret
inc
test
mov
jge
push
leave
lods
sub
aaa
loop
xchg
cwtl
leave
xor
lds
dec
sbb
mov
enter
test
imul
insl
mov
clc
push
ret
push
shrl
adc
or
dec
js
dec
add
inc
jmp
add
adc
notb
hlt
mov
aaa
add
or
pushf
std
or
pop
sbb
arpl
scas
arpl
jne
or
xchg
movsb
push
in
xchg
lods
mov
inc
imul
jnp
loope
data16
xor
jns
imul
es
mov
push
and
xchg
mov
sbb
out
adc
addr16
ds
jb
lret
fidivs
jge
cli
pop
stos
and
xchg
cmp
jbe
out
outsl
and
shrb
ljmp
add
sbb
cmp
aaa
xor
cltd
fsubrp
push
lret
xorb
lods
enter
test
std
outsb
xchg
sbb
lods
mov
mov
in
adc
call
into
ficompl
sti
sub
js
rcll
pusha
jmp
xlat
inc
pop
push
ja
mov
or
in
js
jbe
adc
stc
popa
movl
cli
jmp
or
mov
sub
adcl
mov
or
cs
gs
or
sahf
jmp
dec
bswap
inc
dec
mov
inc
add
cmp
cwtl
ss
mov
ss
sbb
adc
aaa
sbb
dec
fbld
arpl
popf
mov
sahf
dec
sbb
cli
and
mov
insl
jle
inc
xchg
sbb
mov
lods
cmp
xor
pop
fidivrs
adc
push
add
mov
lret
jb
pusha
add
mov
cmpl
mov
cmp
adc
mov
fld
cmp
push
pop
aaa
mov
xchg
incl
sbb
popa
rcll
std
fwait
xchg
dec
jbe
pop
add
fsubrs
xor
sahf
cmp
in
mov
mov
adc
test
xchg
outsb
adc
jge
aaa
sub
mov
aam
stos
dec
add
dec
adc
mov
xchg
rcrb
xchg
push
nop
nop
jmp
pop
cli
xor
shl
mov
cmp
cld
xchg
add
push
jg
inc
clc
aaa
xchg
mov
mov
jb
add
inc
sbb
sub
lret
adc
mov
outsl
cmc
fwait
ljmp
jle
and
and
push
sbb
aam
test
cmpsl
mov
xor
and
sbb
mov
mov
loope
add
sbb
pusha
fists
sub
gs
cmp
into
sub
cmp
scas
and
fisttpl
iret
adc
idiv
cmp
inc
dec
loope
xor
in
clc
pushf
addr16
data16
imul
rcrb
stc
scas
je
and
sbbl
mov
mov
into
inc
or
adc
cmpsb
add
fdiv
mov
orl
mov
divb
dec
sbb
fwait
in
dec
pop
mov
in
mov
mov
or
inc
dec
pop
pop
mov
pop
jle
cld
jmp
shrb
inc
lea
stc
push
ja
cs
dec
and
mov
xchg
inc
jge
and
add
xor
xchg
jae
xor
je
ja
arpl
pushf
adc
pop
repnz
rorl
stc
mov
je
pushf
pop
xor
pop
iret
and
and
dec
and
lahf
mul
arpl
sbb
xchg
sti
push
push
aam
xchg
ret
scas
inc
push
popf
cmp
xchg
stc
ds
push
jle
inc
xor
leave
jle
test
rcrb
mov
enter
mov
rcr
aas
nop
jp
fstps
popa
negb
sbb
push
jae
fcomi
lea
push
jo
sbb
dec
loope
popa
lods
popf
repz
inc
xchg
lahf
loop
xor
add
jmp
or
mov
adc
mov
push
xor
jl
test
ret
pop
sahf
js
js
out
fwait
mov
outsb
mov
add
sbb
imul
or
xor
mov
lods
fmulp
inc
jne
pop
sub
xlat
jmp
dec
dec
pop
mov
arpl
dec
adc
popf
and
fsubr
add
das
adc
jno
pop
les
push
stos
aad
lret
xchg
inc
roll
mov
ret
loopne
insl
and
ss
in
add
add
push
rcl
sbb
lahf
in
decb
lock
arpl
mov
enter
lcall
sbb
sti
and
out
jg
mov
mov
sar
sub
mov
push
pop
out
xor
rcl
rolb
add
jmp
lcall
cmp
and
lods
rolb
or
or
loopne
adc
hlt
les
cmc
outsl
clc
fistl
mov
imul
clc
cwtl
or
jp
jl
mov
stos
cmp
pop
rorl
shrl
and
mov
cmpsb
lds
ds
into
dec
int
xor
jge
test
pop
cmp
lods
dec
xchg
pop
nop
mov
in
sbb
lea
push
aam
and
mov
cmp
mov
loopne
shlb
adc
pop
cmc
jne
cmp
sub
test
inc
stc
sbb
mov
in
xchg
lret
mov
je
ret
outsb
push
int
jecxz
pop
and
cs
adc
loope
ret
in
out
mov
rol
fs
pop
es
mov
and
xchg
pop
mov
push
xchg
loop
aaa
mov
sbb
in
adc
mov
sbb
fadds
test
dec
into
mov
stos
and
mov
lret
jno
mov
test
stos
and
jne
mov
mov
test
cmpsb
in
fsubl
xor
mov
push
add
or
lret
or
and
jg
gs
inc
or
jno
es
sbb
pop
sbb
fwait
and
sub
mov
and
xchg
pop
mov
xchg
sbb
and
mov
push
sub
xor
xor
and
mov
cmc
inc
jle
scas
in
pop
jae
dec
sbbl
fs
or
data16
movzwl
sarb
idiv
cmpsb
insl
inc
cmp
frstor
fdivrl
mov
movsb
sbb
fs
mov
or
mov
adc
loope
dec
movsl
es
jge
test
idivl
data16
mov
xchg
aad
push
sbb
push
lods
jmp
or
push
leave
push
scas
das
shll
ss
lret
inc
in
mov
imull
aad
out
in
scas
push
in
mov
push
enter
das
jp
lods
or
movsl
jnp
jmp
test
and
in
xchg
cmpl
sti
pop
and
sub
sub
mov
push
test
xchg
add
cld
jb
add
rolb
test
push
addr16
xor
hlt
xor
xor
cmp
mov
dec
or
dec
mov
dec
out
iret
loop
addb
ja
xchg
jae
dec
arpl
hlt
sbb
inc
cmp
aas
and
sbb
addr16
cmp
mov
push
sub
xchg
cli
or
inc
mov
adc
daa
enter
sahf
fnsave
mov
push
mov
add
cwtl
mov
outsb
fisubrs
repnz
test
dec
or
in
xor
sbb
jnp
fildll
stc
pusha
inc
in
stos
shll
jb
pop
imul
jne
jecxz
movsb
shll
push
mov
pop
lret
sahf
lock
add
mul
insl
out
shrl
pop
gs
addr16
or
pusha
cmpsl
hlt
mov
add
ja
dec
lret
jns
andl
stos
js
shrb
jne
rorl
fistps
hlt
pop
jle
loopne
mov
dec
sbb
pushf
mov
fs
scas
cmp
mull
popa
adcb
xor
out
mov
test
pop
pop
xorb
xlat
pop
mov
cmp
inc
hlt
int
lods
mov
into
inc
clc
shrb
mov
jge
push
clc
movsb
cmp
or
imul
call
into
insb
dec
mov
jnp
sub
xor
stc
push
and
cli
pop
sub
push
inc
jbe
in
je
lcall
jp
out
sar
adcl
push
mov
jp
mov
jp
imul
ror
cld
mov
or
cmpsb
jbe
push
cmp
pop
insb
addr16
inc
adcb
sbb
stos
jmp
mov
mov
outsb
sbb
ja
or
roll
sub
jne
push
adc
in
insl
mov
or
dec
mov
and
mov
aaa
jns
sbb
rcll
mov
adc
loop
lahf
jge
push
inc
jbe
outsb
cltd
mov
call
sahf
addl
inc
pusha
loope
and
inc
or
mov
loopne
mov
and
jmp
xchg
ja
es
cmp
cs
and
shlb
lea
enter
mov
repnz
push
repnz
adc
in
mov
scas
daa
jle
inc
addb
insb
ret
rcll
ret
cmp
xor
add
nop
jae
movsl
fcmovnu
in
pop
inc
addl
add
or
stos
inc
push
call
cmp
shll
es
sub
bound
repnz
icebp
shrl
mov
test
int3
sbb
orb
addr16
dec
movsl
clc
adc
pushf
add
rorl
mov
std
mov
mov
push
push
xchg
aad
push
fisubrl
rorb
in
sub
xchg
pop
adc
outsb
xchg
in
xchg
inc
sbb
test
std
and
in
mov
lods
je
imul
movsl
adc
movsb
insl
push
cltd
test
cwtl
dec
mov
xchg
or
lahf
inc
repz
sbb
adc
fidivs
shlb
icebp
aad
movsl
add
xor
outsb
test
pusha
mov
sar
or
xchg
pop
inc
sub
cmp
mov
fstpl
popl
xor
bound
push
and
dec
pop
or
rolb
jae
adc
or
ds
fcoms
mov
and
je
arpl
call
arpl
add
cmc
les
inc
cmp
pop
out
lods
leave
inc
cld
lock
inc
lods
pop
cltd
lcall
push
jg
sarl
or
ret
sbb
dec
lods
pop
jnp
cltd
leave
cmp
enter
or
das
ret
cmpsl
sbb
pop
pop
push
xchg
addr16
loopne
xchg
mov
mov
movsb
mov
push
sub
mov
jl
ret
rclb
lret
xchg
pushf
push
adc
int
lods
add
jmp
mov
repz
sarl
testl
mov
dec
sbb
and
mull
inc
lahf
mov
lods
sbb
sbb
out
inc
adc
xor
int3
and
out
xchg
fisubrl
lcall
notl
subl
xchg
bnd
jge,pt
sub
aas
and
pop
mov
fisubrs
sarl
cltd
loope
xchg
cwtl
adc
in
cmpsb
inc
lock
in
jge
or
pop
mov
enter
rcr
das
lret
xlat
add
dec
add
xchg
rcl
dec
mov
popl
jl
sbb
int
push
fwait
lods
push
int3
sbb
pop
cmpb
pusha
shlb
out
aad
mov
dec
test
test
pop
jge
lods
mov
mov
add
mov
sbb
pop
inc
dec
or
ret
dec
jno
leave
adc
mov
pushf
jl
sbb
or
jge
pop
lods
cmp
test
test
ret
and
or
inc
adc
mov
mov
sarb
and
frstor
mov
popf
inc
lods
mull
divb
jns
mov
mov
es
stos
mov
sahf
rcrb
lock
jl
js
xor
xchg
inc
scas
sub
incb
mov
sti
inc
test
dec
ja
jp
insl
xchg
outsb
out
mov
xorl
int
mov
pop
mov
pop
push
mov
testb
dec
fisubrs
mov
cltd
stos
aad
ret
xchg
call
gs
mov
inc
pop
lcall
int
sub
mov
sahf
adc
pushf
xchg
pop
loop
push
pop
xchg
sbb
jno
xchg
sbb
cmc
and
addr16
cld
shlb
es
ret
mov
dec
pop
mov
adc
shlb
inc
lcall
icebp
mov
call
movsl
sbb
adc
mov
js
xor
rolb
or
dec
pop
mov
gs
icebp
mov
xor
test
adc
jb
cmc
mov
push
inc
aam
jo
and
xchg
or
cmc
mov
aad
fwait
xchg
aad
and
lret
jmp
sbb
ficoml
loop
int
jecxz
adcl
stc
cli
sahf
repnz
mov
ss
cmpsl
push
or
aam
enter
adc
cmc
xchg
lret
xor
mov
cltd
scas
mulb
inc
jmp
add
xor
fcom
cs
outsl
pop
xchg
in
inc
dec
lods
orb
and
mov
adc
pop
sbb
dec
icebp
mov
xchg
out
push
inc
push
mov
adc
js
test
pop
jp
pusha
push
aas
lods
push
inc
daa
mov
clc
test
popa
mov
xor
iret
xchg
lods
fistps
adc
ficoms
adc
orl
lret
outsl
test
mov
xor
pop
jnp
cmp
lahf
cmp
sahf
cmp
mov
push
and
jmp
sub
mov
test
cld
mov
insb
nop
scas
xor
inc
inc
repnz
rolb
dec
out
sub
imul
js
stos
je
rol
mov
cmp
or
jg
push
lock
es
pop
lock
sbb
ja
fisubrl
insb
pop
fcmovnb
dec
jno
loop
mov
adc
lods
stc
jnp
ret
pop
push
xchg
pop
int3
mov
loop
push
lret
call
push
pop
ret
dec
bound
xchg
mov
adc
dec
in
out
add
mov
imul
cmpsl
aad
sub
fidivrs
popf
mov
mov
or
cmpsl
push
ror
dec
sti
ljmp
xor
ja
inc
jae
mov
jnp
xor
movsb
loopne
test
es
pop
mov
test
add
rcr
jge
mov
iret
repz
xor
dec
or
sbb
push
pop
mov
aam
es
cmp
xchg
jmp
mov
mov
out
push
lds
shl
jp
je
scas
or
pop
push
and
xor
dec
loope
stos
rorl
fisttps
out
inc
les
cmp
inc
je
pop
in
sbb
push
mov
xchg
sub
insl
cmp
rcrl
imul
ljmp
pop
sbbb
sbb
aaa
mov
cld
jae
shrl
imul
ljmp
adc
xchg
loopne
push
inc
lods
cli
mov
les
outsl
cmp
add
mov
nop
cs
repnz
dec
xor
mov
push
push
pop
repz
cmp
push
lret
cld
aas
enter
jno
test
add
adc
cmpsl
shlb
mov
mov
outsl
push
fsts
mov
imul
hlt
cmp
scas
sarl
push
xor
dec
into
test
sahf
cld
jo,pn
cmpsl
out
mov
in
mov
xor
pushf
mov
sub
push
das
repnz
mov
lcall
loopne
notb
orl
push
pop
nop
mov
hlt
js
aas
fmull
dec
nop
popf
mov
mov
fcompp
mov
test
lcall
mov
repz
jmp
out
lock
das
jae
pop
mov
mov
insl
sbb
in
mov
xchg
sbb
jnp
jnp
cld
push
xchg
fsub
xchg
cmp
push
in
sarl
jae
fidivrs
or
xchg
lret
aam
adc
mov
icebp
pop
or
sbb
xor
mov
cs
out
ljmp
lds
fwait
dec
fstps
mov
push
inc
push
test
inc
cli
insl
dec
sti
push
sub
sub
mov
cmp
outsb
cld
sbb
paddsw
sub
data16
out
add
jp
and
xchg
sub
and
shll
lock
dec
push
jno
mov
push
add
sarb
push
or
lods
scas
mov
dec
xor
mov
sub
adc
inc
cli
mov
rorl
inc
test
jns
jb
jo
sbb
icebp
imulb
pop
xchg
fimull
mov
jbe
fcompl
outsb
xor
gs
push
in
cmpsb
rolb
add
push
add
dec
jle
fldl
lods
and
popl
add
pop
lahf
ret
xchg
outsl
sbb
and
fdivrl
cltd
dec
cmp
push
inc
fdiv
rclb
jbe
lret
out
shlb
jno
imul
jmp
js
pop
xabort
in
aad
jns
push
inc
xor
pop
mov
ret
xor
fildll
or
shll
add
dec
inc
jns
adc
sbb
inc
ja
dec
adc
mov
pop
cs
sub
mov
sbb
inc
or
arpl
lds
sahf
jge
idivb
lds
sbb
lock
push
or
bound
jnp
inc
arpl
pop
push
pop
push
cmp
cmp
mov
ljmp
push
sbb
pop
dec
test
sahf
jge
leave
mov
dec
lea
mov
add
leave
pop
and
or
push
sub
add
lret
ljmp
sub
xor
dec
jnp
push
lea
xchg
sub
std
jb
inc
jnp
fisttpll
push
sub
push
adc
ljmp
jecxz
xor
dec
xor
mov
push
test
cmc
xchg
hlt
and
add
mov
mov
shr
mov
xor
nop
xor
lods
sbb
adc
cmpsl
jp
jl
jmp
test
and
or
cmpsl
mov
sub
mov
sarb
or
cs
sub
adc
xchg
fildl
adc
lods
mov
imul
cwtl
sarl
inc
sbb
les
jno,pt
pop
xchg
sub
call
and
adc
rcrb
add
into
daa
jmp
in
loop
lock
hlt
jns,pn
add
push
dec
dec
add
out
push
clc
mov
ljmp
frstor
repnz
mov
mov
sub
xchg
or
std
xor
hlt
sub
dec
aaa
push
ja
sahf
push
jo
sbbb
mov
lds
dec
sbbl
push
fwait
inc
scas
mov
push
xor
jb
mov
dec
inc
mov
pop
mov
subb
dec
addl
jecxz
test
fcoml
or
daa
adc
mov
mov
pop
icebp
xchg
and
js
mov
dec
xor
pop
ficomps
jno
cltd
xor
in
jge
xchg
dec
push
aad
rcll
mov
in
mov
fs
sbb
cs
les
lock
add
and
stc
in
xchg
cmp
jae
fimull
or
jne
lret
rcl
mov
sarl
cmpsl
push
pop
push
xchg
in
es
or
adc
dec
cmp
adc
mov
clc
aam
mov
push
mov
mov
ret
mov
jmp
ror
xor
in
aaa
data16
or
sbb
cli
data16
sub
cmp
je
fisttpll
call
sbb
pop
jp
lods
or
je
aaa
push
mov
sahf
cmp
mov
fnstsw
ret
daa
mov
pop
pop
sarl
mov
sbb
mov
dec
call
lods
adc
add
inc
stc
sub
inc
mov
ja
data16
dec
xor
nop
jo
jbe
xchg
bound
dec
xor
inc
xor
popl
je
out
lods
xor
and
fcmovb
xor
aam
test
scas
xorl
inc
add
inc
adc
es
jnp
jmp
loop
mov
daa
adc
or
into
iret
push
lahf
faddl
sbb
das
aad
xchg
xor
mov
outsb
nop
ljmp
sbb
arpl
dec
jne
loopne
xchg
out
add
cmp
scas
inc
sub
dec
cltd
inc
mov
jno
inc
push
out
sbb
decb
aad
adc
xor
or
sub
fdivrp
xchg
jno
jge
mov
nop
jge
mov
stc
iret
jge
loope
movsb
mov
sbb
cwtl
mov
int
mov
pop
xchg
fwait
mov
jnp
in
bound
pop
push
jno
add
andb
insb
scas
mov
mov
jno
push
add
add
pop
loop
ss
sbb
and
inc
fs
mov
test
stos
push
test
sub
add
fisttpll
jmp
xchg
scas
mov
std
inc
jge
int3
dec
stos
add
cltd
mov
sbb
inc
add
insb
mov
cli
pop
outsl
dec
xchg
cmp
mov
mov
fisttpll
xlat
jp,pt
into
cmp
mov
dec
bound
bound
out
xor
xchg
jle
dec
out
enter
push
and
cltd
in
push
xor
fdivr
rol
sarl
test
jae
rcr
popa
xchg
outsb
jl
xor
lock
adc
dec
mov
pop
fwait
push
filds
push
pop
fwait
cmp
mov
int
jnp
mov
or
or
push
mov
mov
mov
repnz
f2xm1
pop
xchg
pop
aam
mov
cmp
push
lock
lret
ds
popf
mov
sbb
adc
das
aam
sub
leave
mov
mov
in
mov
test
ss
es
xchg
sub
mov
outsl
dec
jg
fisubrl
fdivr
cltd
jne
mov
adc
mov
aam
loopne
jl
fdivl
mov
xor
dec
rcrb
std
out
lods
add
mov
mov
xchg
mov
sub
push
xchg
mov
test
pop
dec
and
push
mov
clc
mov
xchg
jae
int3
loop
roll
xchg
aad
leave
sahf
or
push
stos
push
dec
inc
roll
shrb
arpl
leave
in
pop
add
in
mov
test
push
push
shll
xor
cmp
into
iret
dec
sbb
inc
ret
mov
sahf
sub
imul
sti
test
lods
add
push
push
dec
addl
cld
stos
and
mov
and
jg
xor
data16
jne
push
mov
mov
fs
movsl
scas
jg
movb
and
cmpsl
sbb
rcll
cmpsb
pop
push
xchg
mov
rep
and
hlt
jecxz
dec
ror
icebp
call
rcr
scas
inc
pop
das
stos
mov
add
iret
cltd
pop
cmc
mov
add
mov
fdivp
inc
push
popa
sub
std
add
in
dec
jg
andb
or
insl
pop
loopne
fbld
mov
adc
inc
sub
push
and
jge
imul
cli
sarl
mov
xchg
and
sarl
sbb
push
cmp
rcrb
cmpsb
mov
jnp
hlt
jp
into
mov
mov
xchg
pop
adc
or
ss
xchg
or
jmp
sbb
addb
insb
or
lds
fs
gs
hlt
xor
ljmp
mov
data16
add
ljmp
decl
pop
push
int
int
pop
aas
std
int3
add
dec
push
das
push
repnz
mov
enter
ret
xchg
and
or
cld
rcrl
cmpsb
es
or
add
out
stos
mov
dec
shlb
pop
add
in
in
fcompl
repnz
in
xchg
jecxz
add
call
sbb
or
adc
in
dec
jl
sbbl
pusha
call
mov
cmc
stc
ret
xor
bound
test
gs
xor
ss
jecxz
xchg
sbb
fisubrs
push
sbb
out
add
fmulp
shr
jns
faddl
es
addr16
cmp
leave
xor
shlb
jl
xor
jge
icebp
scas
sbb
imull
mov
test
or
daa
push
rcrl
fucom
mov
and
jns
pop
es
dec
jno
aam
mov
cmp
dec
add
cmp
icebp
lahf
mov
sbb
shrl
jnp
inc
xchg
mov
scas
xor
cmp
push
push
push
test
sarl
int
pusha
jo
arpl
sub
popf
pusha
push
jp
inc
std
stos
cltd
dec
fs
inc
cmp
inc
mov
ficoml
adc
lret
call
sarl
cli
or
mov
aam
cli
adc
into
mov
fdiv
loop
mov
sub
mov
cmc
xor
mov
into
in
mov
push
addr16
and
lret
push
nop
xchg
outsl
mov
rcr
test
jo
cmp
sbb
pop
sbb
into
jnp
pop
cmp
cli
fs
jecxz
shlb
inc
fmuls
cmpl
aas
adc
push
or
mov
jns
push
repnz
and
movsl
dec
jae
fs
fnstsw
das
sub
clc
mov
inc
fistl
fcoml
dec
xchg
add
xchg
daa
sbbb
jl
cmp
test
xchg
fdivrl
in
jmp
mov
popa
rcrl
sbb
movsl
mov
leave
dec
loope
loope
push
xchg
lahf
xchg
and
in
push
sbb
ljmp
cmp
xor
test
mov
shll
dec
adc
leave
and
scas
push
addr16
pop
add
inc
fstps
mov
out
sub
cmp
mov
mov
repz
clc
sti
test
or
pop
clc
fs
cmp
fwait
inc
test
lcall
repz
mov
popa
xor
fldl
addr16
stos
pop
loop
mov
out
in
or
dec
scas
stc
aaa
dec
lds
rcrl
or
in
je
mov
je
push
xchg
les
sbb
fmul
mov
lret
fiadds
dec
les
rol
xchg
iret
stos
adc
sbb
cmpsb
movsb
xor
fsubrl
dec
push
jmp
inc
sbb
loopne
les
test
scas
pusha
pusha
lahf
adc
sub
mov
jns
mov
inc
push
ret
stos
or
outsl
adc
rclb
enter
outsb
gs
test
inc
test
aad
fistl
cmp
push
or
add
jnp
or
sti
add
sub
js
je
mov
sub
shll
push
iret
mov
dec
xchg
outsb
cmc
pop
pop
inc
xchg
popa
int3
add
xlat
mov
std
xchg
ror
stos
sub
movsb
or
std
cmpsl
in
mov
cltd
mov
mov
jecxz
cmp
pop
xchg
mov
ret
pop
nop
adc
jae
lods
push
push
fstl
daa
push
push
lock
add
pop
test
mov
insb
and
push
cmpsb
lret
inc
inc
cmp
mov
xchg
nop
movsb
mov
and
cmpsb
test
xorb
lret
add
cld
in
fs
xor
je
ret
mov
xchg
xorl
adc
scas
and
xchg
sub
das
adc
cli
rorb
stos
leave
xor
add
insl
dec
push
add
mov
and
adc
sub
add
js
jno
xchg
fisttpll
js
lea
push
enter
mov
ret
shlb
pop
adcb
imul
lock
mov
aam
jne
fsts
lret
xor
std
aam
repz
push
lret
mov
inc
sti
xchg
sbb
sub
fs
pop
imul
sbb
pop
les
repnz
inc
aas
iret
jmp
mov
add
orb
pop
xor
icebp
es
loop
int3
mov
jb
fwait
xchg
out
lret
jecxz
insb
pop
repnz
and
cmp
sti
clc
adc
jp
pop
repnz
mov
rclb
jo
xor
dec
in
lahf
dec
mov
mov
mov
xor
mov
in
push
enter
cs
sbb
repz
outsl
sub
push
xchg
and
push
jo
stos
sti
and
cmp
loope
push
popa
jmp
shl
sub
maskmovq
negl
lcall
stos
or
jmp
xchg
dec
jns
js
cmp
mov
and
repz
and
cs
scas
xchg
repnz
dec
xchg
xor
xor
arpl
orb
pop
inc
mov
mov
sub
add
in
into
movb
aas
lahf
test
xchg
xchg
cli
aas
push
test
test
push
dec
pop
mov
stos
adc
pop
mov
insb
out
mov
cmp
pop
push
xor
std
in
mov
out
rdtsc
add
jnp
stos
das
lret
add
ret
arpl
jbe
add
sbb
lods
popl
add
and
mov
sahf
jo
into
pop
sub
mov
adc
loope
jle
mov
aad
cmpsl
mov
mov
cmp
icebp
add
mov
xorl
sub
xchg
shrb
xchg
pusha
sbb
popf
loope
mov
out
out
fwait
adc
push
es
aam
pop
shrl
imull
jg
lret
bnd
gs
xor
jle
push
mov
neg
pop
push
lods
js
pop
fisttpll
int3
jb
mov
frstor
xchg
mov
inc
subl
push
js
sar
mov
cld
pushf
pop
cmp
mov
inc
arpl
loope
loopne
popa
pandn
leave
ja
and
dec
pop
mov
bound
sbbb
out
mov
mov
stc
loop
sbb
xchg
jp
out
jnp
jns
aam
call
out
mov
inc
inc
imul
or
push
arpl
jne
aaa
cli
pop
cmp
jne
enter
and
sub
push
js
push
pop
setbe
aaa
push
xchg
iret
push
dec
cwtl
dec
orl
jg
cmp
mov
fsubrl
pushf
nop
xchg
inc
adcb
mov
mov
repz
push
mov
mov
jae
pop
jns
mov
jg
adc
mov
jle
and
push
mov
pop
jbe
adc
or
cltd
dec
lahf
fmul
repnz
or
mov
lret
fldcw
push
lock
test
sbb
dec
mov
lret
outsl
cld
andl
dec
mov
or
pop
loopne
sub
cmpl
jl
jae
or
leave
push
sahf
je
xchg
enter
js
mov
mov
xchg
adc
int3
push
stc
mov
inc
ret
jne
push
jmp
mov
outsb
inc
outsb
mov
sbb
sahf
popa
idivb
aam
inc
fsubrp
outsb
push
inc
shrb
jnp
xchg
rcl
and
xchg
fidivs
in
aam
movsb
pusha
shl
pop
jmp
repnz
lret
cs
add
lds
add
and
jno
xor
add
jmp
iret
pop
roll
push
ret
push
xchg
shlb
or
sbb
mov
insb
mov
pop
mov
cli
scas
hlt
js
mov
pop
xchg
divl
push
pop
jl
xor
orb
repnz
test
push
rcl
lahf
add
inc
and
sbb
test
inc
test
pop
inc
stos
inc
mov
inc
pop
mov
repz
inc
jnp
jbe
add
iret
push
inc
test
mov
sub
aas
jl
cmp
test
jg
pop
jl
loope
rorl
jno
repnz
mov
fcmove
push
add
sahf
stos
dec
in
fldcw
jmp
mov
mov
xor
cmp
cmp
xor
inc
lahf
cwtl
mov
add
add
or
mov
movsb
stos
test
subb
jmp
push
shlb
mov
addr16
jle
inc
out
mov
mov
fisubrs
insb
mov
iret
iret
jle
jl
lds
mov
js
mov
adc
outsl
mov
push
fwait
mov
nop
lods
pop
xor
les
cli
out
arpl
rclb
sbb
cmp
fs
popa
xchg
cmpsb
popa
lea
mov
push
push
jl
inc
cmpb
jb
and
mov
shll
xor
testl
mov
adc
repnz
jl
push
repnz
jb
into
cmp
clc
sub
mov
jl
or
fistl
jne
daa
inc
xchg
out
scas
jae
jno
mov
sbb
pop
xor
or
daa
lods
sbb
dec
mov
jl
adc
inc
sbb
aaa
sbb
test
loop
xor
mov
into
les
jae
mov
push
cmp
add
in
mov
sbb
leave
push
sub
pop
sarl
shrl
push
dec
mull
sbb
rorb
repz
fwait
lret
xchg
xlat
mov
mov
fistpll
push
xor
mov
sbb
and
pop
in
pop
push
cmp
push
mov
pop
adc
in
jns
jp
lds
loopne
mov
push
adc
pop
outsb
icebp
pop
mov
mov
mov
mov
adcb
inc
jecxz
loope
test
shlb
int
call
lret
sarb
dec
out
xor
dec
sub
insl
push
xchg
sub
mov
movsl
outsb
add
das
loope
call
fmull
dec
fisubrl
or
adc
das
lcall
iret
repz
pop
mov
mov
test
push
lahf
in
das
mov
mov
pop
xor
rcll
mov
sub
ljmp
and
add
sub
pop
sahf
bound
inc
adc
pop
imul
cmp
jecxz
jmp
and
jbe
sub
mov
xchg
cmp
jbe
orl
sub
testl
adc
scas
inc
cmp
add
dec
adcb
shlb
mov
cmp
dec
push
xchg
dec
cmp
cmpsl
mov
xchg
lods
jmp
mov
mov
pop
imul
xchg
mov
testb
pop
fucom
or
mov
dec
mov
sub
jmp
je
stos
aas
dec
jae
push
and
cmpsb
dec
ret
ret
out
mov
into
inc
cmp
mov
mov
push
test
mov
js
ljmp
sub
nop
pop
sbb
arpl
add
cmp
sub
mov
int
arpl
fisubrl
xor
out
mov
div
out
sbb
scas
jecxz
pushf
push
pop
jno
lods
dec
adc
ljmp
sub
xor
test
fdivr
mov
inc
insb
xor
scas
inc
or
or
outsb
int3
xchg
out
push
add
es
arpl
sbb
mov
xchg
imul
adc
mov
mov
ljmp
mov
push
sub
stc
mov
cmc
fistpll
sbbl
loop
sbb
shl
inc
daa
or
pop
test
or
mov
cmc
xchg
es
test
push
shrb
add
sub
jle
and
sahf
pop
push
cli
adc
add
mov
pop
xor
or
jno
adc
std
inc
insb
pop
lods
cmp
stos
dec
in
insb
jnp
divb
lret
pop
mov
cmc
ficoml
rclb
iret
mov
fidivrs
movsb
jno
cmovnp
mov
mov
add
aaa
mov
jl
xor
mov
inc
int3
adc
dec
sbb
jg
sbb
mov
out
ret
cmp
mov
mov
mov
mov
sbb
or
lea
js
into
movsl
jnp
sub
bound
pop
xor
xchg
das
cmpsl
movsb
ljmp
jl
outsl
add
mov
scas
data16
into
jecxz
cmpsl
ss
or
dec
xor
pop
rorb
sbb
flds
lret
sub
jge
cmpl
subl
xchg
movsb
mov
ret
dec
push
inc
rcr
orl
fnstsw
pop
jnp
fidivl
mov
mov
imul
and
je
push
mov
inc
aad
xchg
ja
cltd
xchg
dec
insb
mov
dec
sub
fidivs
mov
mov
outsb
out
loop
or
hlt
sub
mov
mov
stc
dec
out
jne
gs
xchg
sub
xchg
lods
pop
ljmp
std
repz
insl
jl
fs
imul
sbb
pop
sub
bound
std
loope
cmpsb
jns
loop
sti
xor
jno
movsl
dec
xor
jmp
lretw
call
pop
loopne
push
push
int3
fwait
mov
inc
incb
push
jne
in
pop
shll
aam
jnp
loopne
lahf
xor
inc
sub
inc
repnz
das
iret
aaa
xor
notl
fstps
cmc
ret
addl
cmp
jle
push
mov
xlat
icebp
in
into
ljmp
mov
sub
push
aam
mov
mov
dec
xor
aaa
xchg
inc
repnz
jl
push
cmp
mov
lock
mov
add
test
sub
inc
mov
imul
jo
in
inc
dec
lret
mov
or
and
push
lret
aas
scas
inc
cmpsl
pop
push
xchg
and
out
mov
sub
mull
pusha
je
jp
test
lea
outsb
icebp
sbb
jle
jl
adc
push
call
lods
push
mov
sub
shrb
dec
inc
movsl
movsb
outsl
and
aam
inc
cmp
fs
aaa
ss
add
xor
fsubr
xor
in
adc
inc
addb
shll
out
push
inc
sub
and
stc
test
movsb
xchg
mov
push
rorb
fcomps
mov
jbe
pop
lock
inc
idivl
adcl
jg
mov
xlat
lds
inc
jge
jmp
jg
and
ds
sbb
dec
pop
insb
int
inc
fisttpll
jns
jle
out
in
push
sub
pop
pop
aam
push
add
or
and
pop
lahf
lret
sahf
shr
mov
add
inc
rcl
dec
fiaddl
push
xchg
ljmp
aas
sbbb
in
xchg
adc
jb
adc
jnp
gs
xor
frstor
dec
ja
or
sub
cmp
add
repz
fsubrl
rcrl
dec
cli
push
fwait
scas
or
stos
mov
push
push
cmp
enter
push
pop
adc
lret
or
in
mov
pushl
nop
mov
movsb
es
call
adc
adc
lcall
insb
mov
aas
mov
clc
sub
pusha
jmp
outsb
and
pop
shll
inc
dec
push
repz
fucompp
gs
sub
iret
xchg
repnz
cmp
sub
jns
mov
push
jne
fdivrs
imul
dec
mov
inc
push
lods
mov
or
mov
int
iret
stos
das
jl
mov
pop
push
mov
into
int3
mov
inc
fdivrs
dec
fcompl
add
lods
ret
xor
arpl
pop
loope
pusha
sti
cmp
sbb
pop
inc
movsb
outsl
push
pop
in
and
std
inc
inc
imul
xchg
xor
addb
adc
jae
mov
stos
dec
push
and
jne
jns
jge
in
imul
lea
dec
cmc
xorb
iret
jmp
mov
call
jb
stos
mov
cmpsl
mov
lea
mov
mov
sbb
ds
jp
dec
dec
dec
adc
pushf
cmpsb
sub
inc
add
sbb
js
pop
or
insl
test
fisubl
mov
sbb
inc
lods
jg
pop
xchg
pop
push
jmp
cmpsl
loop
pop
adc
lds
shll
sbb
jmp
dec
repz
movsl
enter
fnstenv
jns
mov
inc
cmp
lret
arpl
enter
pop
clc
jbe
mov
insb
arpl
xor
out
xchg
popf
test
mov
out
lds
shrb
cmp
cli
xor
sti
hlt
mov
mov
push
mov
xor
mov
push
mov
jb
adc
adc
xor
xlat
movsl
pop
and
lahf
xor
iret
aam
mov
push
xor
jl
enter
push
lods
pop
in
ret
pop
adc
jnp
clc
pop
aas
mov
inc
sbb
adc
inc
rcl
adc
mov
ljmp
sbb
and
or
rorl
push
cmp
jle
imul
inc
fsubs
jmp
dec
in
stos
push
inc
lock
cmp
pop
or
in
mov
lret
jl
pop
ds
subb
cmpsl
cld
xor
adcl
in
movsb
int3
lcall
mov
imul
mov
mov
xchg
inc
mov
addr16
incl
call
xor
test
in
mov
out
jne
mov
cmpb
sbb
cmp
test
xchg
les
jb
int
sbbl
ja
popa
loop
dec
xchg
push
iret
mov
sahf
cmp
test
or
divb
sub
xchg
lds
jle
push
xor
call
fstl
imul
dec
jnp
jmp
mov
adc
popf
pop
cli
mov
stc
jnp
mov
sbb
jbe
cltd
adc
jp
lahf
sub
inc
cmp
pop
repnz
std
jo
xchg
packssdw
mov
sbb
sar
cmp
fisttpl
rep
jno
push
mov
and
scas
mov
or
enter
or
clc
mov
pop
loopne
mov
test
das
mov
lods
into
xchg
mov
add
lcall
jle
pop
jg
xor
mov
dec
mov
test
popf
jbe
jmp
add
inc
aas
loop
scas
cmp
sbb
cmpl
insl
adc
mov
dec
sub
xchg
jns
lds
jmp
fcompl
push
int3
push
in
fs
xor
sbb
cltd
outsl
add
loop
mov
ss
xor
dec
mov
lahf
adc
lods
les
popf
ror
mov
mov
and
xor
les
xor
sbb
testl
fstl
push
xor
sub
lock
outsl
lods
jno
mov
adc
pop
inc
sbb
xor
lds
inc
jle
push
ljmpw
push
xchg
adc
or
test
icebp
push
mov
push
je
cmc
aaa
andl
sub
not
and
repnz
cmp
dec
adc
jge
fisubl
xor
clc
and
mov
or
mov
fnsave
std
dec
sti
popa
inc
adc
push
adc
xor
ds
mov
jle
sub
mov
movl
int3
ficoml
bound
xchg
dec
pxor
cmpsb
mov
xor
fwait
add
jo
aad
push
jecxz
rclb
xor
adc
ret
jne
push
repnz
sahf
xor
cmp
addr16
cwtl
lods
fwait
int
sbb
cltd
mov
aam
add
cmp
xchg
mov
xor
cmpl
mov
mov
into
fmul
mov
iret
push
and
jle
push
lret
icebp
mov
scas
outsl
in
loope
sbb
nop
xchg
negb
push
lret
imul
xchg
in
clc
scas
add
cltd
or
cmp
sahf
mov
test
xchg
mov
jno
test
movsb
testb
sbb
neg
push
fildl
aam
leave
lds
in
xchg
inc
add
shll
cltd
mov
xchg
int
mov
xor
out
ret
cmp
mov
loop
push
xor
sbb
xchg
in
dec
push
or
adc
data16
gs
mov
sbb
std
in
ret
or
push
push
aas
or
cwtl
shll
pop
sbb
or
insl
mov
push
mov
cwtl
addr16
fsubr
dec
xchg
adc
jg
or
xchg
push
aam
ret
and
loop
gs
and
push
in
in
jp
sub
and
jbe
cltd
rol
dec
jmp
mov
push
shll
icebp
addr16
adc
sbb
int3
push
shll
xor
mov
out
leave
and
mov
in
shrb
add
xlat
cltd
repz
push
or
psubd
mov
sbb
sub
push
and
push
inc
xchg
fdivl
insl
mov
jo
jecxz
xchg
lods
xorl
stos
xor
fabs
rcl
pop
fisubl
adc
or
bound
enter
mov
push
pushf
mov
cmp
test
mov
cld
int
push
addr16
sbbl
mov
jne
je
cmc
and
or
jno
mov
mov
popf
mov
out
inc
inc
cmp
push
test
push
out
sub
scas
flds
jne
push
sub
jae
cmc
hlt
sbb
addr16
hlt
out
mov
jnp
push
sub
mov
mov
dec
pop
icebp
addr16
push
mov
imul
fwait
pop
dec
lds
pop
outsb
shll
ljmp
inc
lds
test
insb
xchg
enter
loope
fcoml
cwtl
gs
pop
jo
mov
mov
inc
mov
lret
shlb
arpl
sub
rorl
movsl
inc
dec
mov
shrb
or
push
repnz
pop
test
mov
or
orl
movsl
stc
nop
cmp
outsb
pop
shll
push
std
jne
test
imul
shlb
shl
xor
mov
pushf
fwait
nop
dec
jl
and
hlt
push
std
cld
lock
sbb
pop
cmpsb
fstps
test
addr16
inc
cmpsl
iret
ja
xor
add
sbb
cli
lcall
ret
sub
pop
jle
or
lock
pop
insb
sub
sbb
shrl
hlt
inc
adc
mov
mov
sub
mov
dec
int3
imul
lahf
and
cmpsl
aas
pop
xor
adc
jle
push
enter
hlt
mov
xor
cwtl
ja
push
add
adc
xchg
daa
sub
cmpb
mov
in
add
lods
add
insl
nop
adc
dec
stos
xor
mov
loope
bound
xchg
fucomi
stos
xor
push
sarl
cs
cli
jb
in
shl
outsb
cmp
or
cmp
fisubl
je
push
mov
outsl
mov
push
ljmp
push
adc
cld
mov
push
jo
push
movsl
push
out
pusha
or
bound
jae
xor
ljmp
roll
fisttpll
cmpsl
pop
push
push
or
out
dec
mov
test
fildl
sub
in
out
sahf
js
sbb
push
xchg
cmp
jmp
movsl
leave
xchg
jne
jns
xor
adc
pop
sub
sub
or
subb
add
mov
or
cmp
and
icebp
sbb
jns
cmc
cmc
sbb
lahf
aad
lcall
and
cmp
cmc
std
sbb
inc
les
xor
pop
mov
sbb
ficoms
dec
lcall
mov
pusha
adc
mov
mov
sub
scas
arpl
ja
hlt
cmpxchg
stos
mov
imul
adc
dec
push
sub
jbe
movsl
lods
push
bound
out
clc
mov
jnp
arpl
and
sbb
lds
cs
push
push
test
ljmp
inc
xchg
fnstcw
js
cmp
dec
ljmp
std
or
fidivrl
pop
push
test
fdivr
jbe
es
int
shlb
movsb
jne
les
fnstenv
shrb
jge
fistpl
xor
mov
lahf
jl
outsb
nop
dec
pop
fs
mov
clc
pop
pop
imul
cmp
es
adc
cmp
fldcw
xlat
aas
jecxz
pushl
and
pop
das
cld
cmpsb
stc
cmp
lahf
in
and
jge
out
add
sbb
pushf
cmpsb
jb
insl
ja
lock
jecxz
sub
add
jae
testl
mov
cmp
nop
mov
sub
inc
xor
pop
call
in
add
pop
jno
xor
dec
xor
dec
lods
out
scas
xlat
cmp
dec
mov
cli
sbb
mov
outsb
push
push
dec
mov
push
add
test
cmp
push
jmp
mov
jne
inc
cwtl
adc
test
lcall
xorl
add
mov
out
lcall
jle
fstpt
sti
sbb
leave
fistpll
cmp
and
call
pushf
divb
pop
push
add
mov
test
jge
lahf
mov
push
out
inc
mov
fwait
lcall
ljmp
mov
sbb
push
add
test
cmp
lods
or
pop
push
loopne
dec
and
pop
sarl
add
sbb
es
cmpps
xor
stos
sbb
mov
push
lret
iret
mov
jecxz
loopne
adc
mov
inc
mov
icebp
cmpsb
mov
or
pop
xor
and
and
adc
int3
test
push
gs
sahf
ds
push
out
loop
inc
push
roll
dec
jl
ljmp
insl
add
sub
mov
iret
fs
ficompl
mov
sbbl
cmp
dec
lcall
pop
aam
in
lret
je
sub
cmpb
scas
fsubr
imul
and
not
testl
jmp
push
jb
ret
ja
jmp
add
imull
pop
mul
jb
cmpsl
cmpsb
lahf
scas
cmp
sbb
mov
cs
je
adc
aad
stos
jl
out
nop
cmpsl
hlt
mov
xchg
push
mov
aas
aaa
pop
ds
sbb
sbb
movsl
out
sbb
push
leave
jmp
adc
push
push
mov
pop
mov
or
in
lea
fdiv
mov
pop
add
roll
lock
fwait
or
leave
add
aas
sbb
push
xchg
mov
push
add
and
adc
push
mov
and
outsl
out
popf
cmp
movsb
int
jle
push
daa
cmc
inc
dec
push
cmc
jge
inc
add
push
mov
mov
pop
addr16
push
test
dec
je
mov
xchg
pop
pushf
add
scas
xor
aam
mov
movsb
pop
mov
push
out
fisttpl
pop
dec
mov
sbb
idivb
imul
xor
cltd
lea
push
fmul
sub
inc
or
push
das
aaa
pop
in
fsubrs
ret
imul
imul
ss
pushf
and
mov
leave
lods
mov
cli
or
dec
xchg
es
cmp
jns
mov
mov
mov
hlt
sub
pop
test
repz
repnz
negl
mov
adc
dec
dec
jg
mov
sub
rcr
loope
scas
push
out
fcomps
neg
push
or
pop
lcall
and
fdivrp
add
mov
or
dec
inc
lds
push
mov
lods
jae
lods
mov
fs
xchg
fidivl
fwait
pop
dec
jno
jg
rclb
rcrb
or
cmp
push
jns
or
lcall
sub
push
push
push
sbb
xorl
cmp
push
and
and
push
dec
push
pop
icebp
or
xlat
cmc
mov
in
aam
pop
xchg
fmuls
sbb
aam
inc
and
mov
test
pop
jae
jge
cwtl
jp
sub
mov
repz
rcrb
mov
dec
lods
gs
lock
mov
inc
add
add
les
mov
mov
hlt
mov
inc
sub
in
mov
push
or
adc
test
cmp
out
pusha
fs
xor
nop
xchg
pop
add
movsb
jnp
pop
xor
scas
arpl
dec
mov
pushw
out
and
xor
mov
int
insl
aad
fnstenv
adc
aam
mov
jns
mov
push
outsb
xor
faddl
dec
test
js
pop
xchg
out
xor
cmp
cmpsl
jmp
sbb
notl
jne
xor
jbe
and
push
xlat
xchg
enter
iret
mov
jne
jecxz
jge
push
mov
xlat
lahf
sbb
aas
arpl
ds
and
push
stos
adc
push
inc
aaa
std
test
sbb
daa
ss
scas
insl
jecxz
int3
and
testb
fld
inc
test
mov
lock
enter
cmp
aaa
pop
adc
lods
fwait
mov
mov
sti
mov
cltd
icebp
jb
pop
mov
xchg
or
and
mov
and
and
fwait
insb
icebp
mov
arpl
mov
cmc
repz
xchg
xchg
inc
pop
or
mov
daa
sub
pop
lock
xchg
add
jmp
adc
cs
add
mov
scas
ret
mov
addr16
in
jo
cltd
cmp
pop
cltd
add
div
mov
sbb
push
into
int3
dec
filds
mov
pushf
push
sub
imul
aas
es
add
mov
push
mov
mov
pop
loope
push
cltd
pop
fwait
inc
pop
pop
lods
mov
mov
popf
imul
sbb
xchg
and
js
and
cltd
cmpsb
out
in
cmp
in
inc
xor
into
jle
jnp
insb
test
fcoms
xchg
nop
mov
pop
cld
fistpll
sub
andl
out
mov
inc
sti
mov
sbb
leave
in
sbbb
mov
pushl
inc
shrb
fldenv
mov
sub
cs
jb
sub
xchg
add
jno
mov
xchg
add
call
in
lret
mov
mov
add
sbb
mov
add
test
or
leave
jo
cmc
add
pop
dec
out
mov
jb
test
inc
xor
negb
divl
add
xor
adc
sahf
mov
imul
or
add
hlt
xchg
or
mov
cwtl
adc
jp
mov
pushf
mov
dec
jnp
int3
sub
xchg
sub
mov
sub
inc
push
jbe
jecxz
xchg
jle
rorb
cmp
adc
push
enter
mov
jae
lea
mov
neg
loop
leave
gs
mov
dec
add
rcrl
and
leave
dec
ret
or
mov
shrb
aam
int
inc
dec
test
jnp
into
push
cmp
cli
cmpsb
push
push
daa
test
dec
pop
jmp
xor
outsb
icebp
mov
sub
push
stos
aas
dec
pop
lock
insl
pushf
inc
xchg
pop
sub
mov
pushf
pusha
sbb
addb
add
mov
mov
ja
add
loope
outsb
xor
xor
pop
or
mov
jbe
xor
fcmovne
cwtl
out
push
pop
mov
test
rcrb
mov
mov
leavew
repnz
insb
cmp
mov
orb
jne
adc
add
jmp
repnz
dec
jo
mov
xor
pop
mov
pop
jbe
loope
adc
xorl
dec
mov
fistps
outsl
mov
mov
pop
shll
or
in
pop
pushf
cs
lahf
js
sub
ljmp
xorb
pop
pop
mul
jle
xor
orl
xchg
mov
adc
mov
pushf
test
insl
add
mov
sbb
jmp
fsubs
sbb
push
cmp
insl
xchg
push
mov
sub
sbb
icebp
add
mov
pop
fcomp
in
mov
shrb
or
jmp
out
mov
dec
mov
insl
cmp
popa
popf
je
imul
orl
push
loope
sbbb
addr16
insb
popf
add
lds
mov
and
stc
call
lret
cs
loopne
inc
xor
add
into
and
mov
push
adcb
mov
inc
insb
add
imul
pop
in
mov
out
mov
movsb
and
sti
mov
and
dec
ds
jle
cltd
xchg
adc
nop
dec
xchg
cmpsb
sbb
sub
cmp
scas
pusha
dec
pop
mov
ud0
inc
xor
mov
test
out
pop
pop
shlb
xchg
xchg
and
outsb
insl
dec
in
stos
rcrb
call
cmp
pop
fcompl
jne
and
cltd
pop
or
lret
mov
add
aad
xor
mov
aam
push
mov
cmp
dec
movsb
mov
mov
rcrb
inc
fxch
pop
adc
shr
test
push
sbb
inc
xchg
fbstp
pop
pop
fucomi
mov
icebp
pop
cmc
out
rorb
mov
push
adcb
xchg
call
xor
push
inc
aaa
ljmp
data16
ret
aam
dec
mov
les
push
pusha
dec
pop
fcmovnb
or
mov
pop
gs
shlb
and
rcll
xlat
fdiv
sub
aas
mov
mov
insb
lret
xor
dec
cs
cli
inc
jle
mov
mov
and
xor
scas
xlat
or
arpl
stos
mov
js
shll
sbb
negl
lret
in
das
inc
addr16
sub
int
sub
in
sbbl
mov
cltd
push
jbe
leave
insl
push
int3
neg
mov
les
pop
adc
rcrb
cmpl
pop
xor
pop
xor
out
push
xor
fisubl
shrb
test
xcrypt-cbc
addb
cmpl
cmc
stos
jo
jne
les
ficoml
or
fidivs
push
mov
push
ljmp
xor
mov
fnstsw
pop
pop
test
push
pusha
roll
aaa
mov
je
insb
fstpt
dec
int
xchg
mov
sub
pop
repz
jl
dec
call
xor
jne
mov
aad
mov
jg
shl
shlb
popf
subb
nop
mov
mov
pushf
into
and
sbb
cli
sar
pop
pushw
cmp
bound
fistps
adcl
jmp
divl
jns
fcompp
fucomi
repnz
shl
jecxz
and
fadds
xlat
aad
sbb
mov
mov
dec
jbe
cmc
daa
jne
mov
mov
out
sub
sub
cltd
fs
enter
movsb
xchg
jnp
repnz
sub
movsl
imul
aam
jo
add
mov
sti
stos
repnz
fsubl
add
or
into
sbb
test
lds
jge
icebp
adcb
lcall
ja
cmpsl
mov
inc
std
mov
and
jnp
mov
pop
cmp
das
test
inc
xchg
sti
mov
xchg
enter
lods
rolb
cmpsl
dec
push
xor
push
insb
loope
data16
jo
in
jp
push
in
and
addr16
inc
xchg
iret
mov
ja
lcall
loop
pop
scas
and
jb
ret
fwait
jl
mov
sub
int3
dec
sbb
lcall
outsl
push
test
mov
loop
cmpsb
stos
push
mov
rolb
imul
jp
cmp
pop
sub
mov
ja
aaa
cli
push
adcl
adcl
jb
push
test
icebp
or
fsubr
pop
aas
inc
inc
sbb
mov
test
mov
lods
test
scas
mov
stos
sbb
xchg
test
or
push
and
push
xchg
xchg
fbstp
adc
push
stos
push
lret
pcmpeqb
scas
cmc
mov
es
leave
mov
aam
dec
cwtl
push
jle
scas
lods
and
xchg
lret
dec
push
or
adc
xor
insl
lret
mov
push
and
fiadds
stos
xlat
aas
in
dec
nop
sub
sub
je
or
add
and
stc
jo
cmc
int3
aam
mov
test
cmp
mov
inc
cltd
data16
dec
jo
jmp
push
adc
lods
aam
pop
push
jb
mov
xor
pop
inc
lret
push
push
pop
jbe
sub
test
into
addr16
pusha
int3
mov
push
jecxz
dec
iret
mov
fisttpl
push
fildll
jg,pn
cmp
and
outsb
or
or
addb
xchg
cmp
enter
jl
push
movsb
jnp
ror
mov
repz
mov
icebp
cwtl
dec
xchg
fidivrs
rol
addr16
pop
inc
rol
adc
jno
into
roll
dec
sti
inc
pop
into
jns
outsl
sar
movsb
arpl
mov
ret
outsl
out
insl
iret
sbb
fisttps
push
xor
dec
mov
jno
mov
sahf
fwait
es
fcompl
pop
outsb
iret
cmc
fwait
arpl
xchg
sahf
pop
bound
jb
test
dec
arpl
gs
dec
into
fidivl
xchg
mov
mov
orb
test
jo
mov
cmp
jl
fbstp
lahf
sub
aas
pop
es
aad
sbb
and
loope
cmpsb
push
mov
adc
push
aam
jne
out
int3
das
mov
or
push
rcrb
into
add
popa
and
mov
hlt
jbe
xchg
rcrb
cs
test
out
fwait
and
popa
rcrb
push
mov
loopne
pop
pop
sbb
fwait
sbb
push
sbb
sub
call
movsl
mov
jmp
cmp
sbb
fidivl
arpl
addr16
jne
cmc
push
adc
xorb
ret
out
clc
stos
cmp
mov
movsl
jle
cmp
cmpl
lcall
or
pop
jnp
pop
nop
out
pop
pop
push
sbb
jge
dec
outsb
imul
dec
mov
es
mov
cld
adc
xchg
rorb
push
mov
dec
sub
cmpsb
mov
shrl
inc
lods
xorl
cmp
cltd
das
sub
push
jne
bound
mov
push
aaa
int
clc
xchg
and
jne
dec
mov
pop
das
sbb
cmp
addr16
aad
addb
repnz
adc
jg
and
fstps
and
add
sub
icebp
scas
xlat
lret
sbb
sbb
push
ficoml
mov
adc
imul
fstps
cld
sbb
psadbw
cmp
loopne
lock
mov
bound
mov
rolb
mov
xor
and
aad
aas
fidivrs
movsb
cli
xchg
and
jae
mov
mov
js
dec
lret
aam
pop
sbb
fdivrs
enter
xor
insb
mov
mov
adc
mov
and
gs
in
xchg
in
xorb
test
inc
push
pop
inc
jns
int
lcall
cmpsb
fsub
add
sahf
popl
movsb
inc
sahf
jl
sarl
cmp
sbb
call
push
scas
jg
or
test
js
mov
adc
xor
lea
sub
daa
jecxz
jle
mov
push
pushf
out
inc
repnz
or
stos
imul
aaa
push
jle
aaa
mov
cmp
mov
aaa
lea
pop
pop
clc
or
outsl
pop
sarl
add
addb
loope
ds
jp
sbb
jl
ljmp
jp
neg
testl
jge
neg
add
fwait
stos
xchg
popl
pop
loop
xchg
push
jnp
stc
cmp
or
sbb
dec
leave
cmc
pop
xor
scas
pop
jae
xchg
loope
out
adcl
leave
in
pop
and
test
pop
push
jbe
jg
push
lahf
xchg
pop
stos
int3
xor
jecxz
stos
push
out
hlt
lcall
insl
xchg
xor
test
mov
js
cmpsl
fwait
leave
cmpsb
adc
shrb
mov
js
sub
into
jge
and
sbb
lds
jmp
arpl
cs
or
push
sub
pushf
decl
or
clc
xchg
lea
jb
xor
sbb
jge
add
adc
pop
psubsb
push
fsubrl
inc
inc
push
jbe
imul
add
xor
xor
xor
in
out
mov
mov
fucomi
enter
cmpsb
push
dec
mov
cmp
jg
xchg
cltd
sbb
xchg
pop
mov
mov
cmp
enter
mov
mov
mov
xchg
and
jp
lods
inc
cld
sbb
cmpsb
cmpb
sbb
fisubl
mov
and
sahf
daa
pop
jo
arpl
js
xlat
pop
js
fbld
jb
orl
imul
fwait
mov
push
vpshlq
dec
ret
inc
out
xchg
mov
shl
out
xchg
push
ret
push
rcll
pop
xchg
push
mov
mov
into
dec
and
mov
lret
loope
fisubl
xor
lods
dec
add
movsb
iret
sahf
bound
std
sbb
flds
ror
push
and
das
je
add
pop
notb
aas
out
and
test
je
dec
test
and
dec
std
stos
sbb
or
mov
push
add
scas
mov
aam
jne
in
movsl
mov
inc
cwtl
loop
xor
sbb
aad
pop
addr16
fisubrl
popa
add
pop
or
push
mov
pop
xlat
and
and
les
mov
les
enterw
neg
je
lahf
jne
data16
mov
ret
ret
aam
cwtl
idiv
cmp
xor
das
inc
scas
xchg
add
cmp
xchg
gs
jne
xchg
mov
push
lods
clc
cld
xor
js
aas
pop
sub
dec
pop
sbb
xchg
sbb
icebp
or
mov
fistl
inc
rorb
mov
push
jo
clc
mov
xlat
lea
xchg
and
shrl
iret
adc
arpl
das
or
or
xchg
sti
subl
push
daa
jl
jno
jl
loopne
xchg
aam
add
inc
cmpb
inc
std
mov
and
jae
xchg
loop
xor
mov
jge
icebp
mov
mov
xchg
or
or
mov
cs
inc
leave
adc
in
mov
imul
repnz
dec
mov
sub
in
outsl
sbbb
jne
sbb
push
pop
arpl
xor
arpl
mov
mov
mov
push
aam
mov
push
gs
lcall
push
sbb
add
or
push
pop
shrb
pop
outsl
gs
cltd
jg
inc
cmc
movsb
cmp
std
mov
sbb
pcmpeqw
mov
loop
stos
addr16
shrb
pop
es
and
call
stc
inc
stos
mov
jae
imul
add
inc
push
pop
addl
test
inc
sub
mov
fmuls
sub
stc
div
stc
adc
inc
bound
sub
loop
les
adc
jne
adc
ror
dec
xlat
sbb
mov
push
push
jo
dec
pop
mov
inc
shll
adc
jmp
pshufw
rcr
cmp
das
mov
pop
cmpsb
mov
out
fnstcw
aaa
fcomip
daa
repz
daa
xorb
xchg
lods
push
clc
jns
mov
popl
pop
jmp
xlat
push
test
repnz
push
mov
push
cs
int
push
imul
into
in
inc
xor
fst
mov
mov
sub
outsb
jmp
or
xchg
mov
inc
and
inc
cmp
sahf
push
xor
rorb
inc
jbe
mov
into
out
les
and
push
sti
or
shl
dec
xchg
fwait
add
shll
das
mov
jg
test
das
sbbb
cmp
bound
xorb
mov
lds
and
movsb
and
or
mov
push
sub
out
fstpl
adc
pop
sbb
das
xchg
mov
mov
roll
das
sete
mov
shr
xor
popf
push
insl
lret
mov
push
loopne
push
and
stos
ficoms
sbb
push
dec
aaa
test
adc
xchg
dec
cmp
or
ficoml
adc
cs
cmp
jle,pn
jo
fcomi
jmp
mov
call
pop
jns
adc
xchg
ss
sub
inc
stos
insb
scas
jp
and
cli
clc
fcompp
dec
fs
adc
sub
cmpsb
sbbb
push
push
jle
js
cmp
lret
dec
jo
cs
cmpsb
mov
ljmp
jns
imul
out
jl
dec
dec
fcoml
or
cmp
xchg
jne
mov
cmpsb
in
mov
dec
loope
mov
test
dec
xchg
add
jbe
adc
jmp
fisubs
fcoml
xchg
xchg
test
xchg
cmp
push
data16
jle
fidivs
jbe
ja
and
inc
push
in
negl
ret
push
jo
stos
into
repnz
lcall
inc
xchg
add
inc
lds
lret
stc
push
sub
lret
rcll
pop
pop
or
js
scas
jmp
loopne
imul
cmp
pop
push
sub
dec
jne
xchg
lods
or
test
ret
cmp
sub
leave
stos
add
fiadds
mov
mov
inc
mov
test
and
roll
jbe
lock
sub
enter
and
push
and
mov
loope
jge
sar
fneni(8087
frstor
mov
inc
adc
aam
daa
je
pop
pop
cmp
mov
roll
cmp
mov
pusha
inc
es
out
stos
push
xlat
cli
xchg
jp
fidivl
jb
jns
pop
xor
xlat
add
sbb
cltd
mov
aaa
mov
in
cld
in
in
mov
out
cmp
mov
ja
push
iret
inc
push
push
jnp,pn
mov
xchg
addr16
adc
das
jo
fcomi
jge
mov
inc
push
into
or
push
test
jge
add
inc
in
jl
scas
dec
aaa
enter
jle
loope
mov
fsubrs
jg
mov
shl
shll
imul
xchg
mov
inc
pop
aaa
adc
add
jb
fbld
mov
repz
sbb
pop
insl
pop
cmp
sub
lret
in
cmpsb
clc
lods
and
lret
mov
jno
mov
aad
pop
dec
shrb
xchg
mov
or
dec
dec
in
rolb
pop
dec
test
mov
or
mov
es
jnp
cwtl
pop
mov
xchg
mov
mov
shrb
mov
out
clc
loop
and
sub
sub
arpl
jge
jno
pop
repz
repz
sub
pop
pop
shll
or
rolb
cmp
or
cmpsb
cltd
mov
cs
arpl
pop
loop
push
jb
mov
in
pop
or
mov
cmp
not
jo
inc
sbb
pop
je
cmp
jo
int
stos
push
push
jge
mov
imul
inc
sbb
dec
jmp
dec
stos
push
into
mov
xchg
les
loop
sub
adc
icebp
mov
jne
out
push
cmp
xchg
fmuls
inc
adc
adc
cmp
in
pop
mov
push
push
mov
mov
std
xor
in
mov
aam
xchg
inc
frstor
add
push
jbe
cmp
mov
mov
cmp
cli
push
xor
out
rcrb
pop
xchg
jno
call
icebp
mov
popa
in
loopne
jl
mov
jno
dec
mov
sub
int3
inc
and
jge
mov
xor
xor
adc
arpl
insb
cli
pusha
add
push
sub
mov
in
adc
into
popw
ret
call
out
jo
add
or
inc
mov
pop
mov
testl
push
cmc
mov
inc
clc
jae
adc
and
js
push
iret
xor
sbb
add
push
jno
int3
mov
fnstenv
dec
call
out
cs
mov
stos
dec
push
push
cmpb
js
jbe
leave
icebp
inc
jmp
inc
cmpsb
test
cmc
jo
and
mov
mov
cli
shl
sub
mov
cli
xor
jb
aaa
insl
scas
jg
dec
movsb
pusha
dec
sarb
mov
push
scas
xchg
lods
out
aas
xchg
pushw
cmc
jp
jmp
mov
pushf
dec
xchg
sahf
inc
dec
and
fwait
jmp
xchg
je
pop
push
lret
xor
int3
fwait
push
cmc
sub
and
cld
mov
xor
dec
push
hlt
sbb
adc
pop
lock
test
adc
arpl
sbb
iret
mov
push
sahf
fcmovnu
ret
mov
stos
xor
adc
jecxz
push
dec
mov
add
and
dec
call
je
adc
lret
mov
mov
jecxz
dec
stc
inc
pop
jle
insl
enter
das
xchg
in
pop
mov
or
pop
cmp
and
outsb
or
cmp
and
mov
mov
jle
in
push
cmp
cmp
cwtl
push
pop
out
hlt
dec
xchg
jecxz
mov
les
fcomps
or
adc
pop
sub
nop
sbb
rcrb
adc
repz
pop
inc
insl
mov
cmpsb
stos
pop
hlt
sbb
jmp
adc
repz
andb
sub
out
cmp
push
xchg
dec
xor
xchg
hlt
and
mov
outsb
ljmp
push
inc
adc
sbb
xchg
stos
add
xchg
cmp
fwait
adc
scas
xchg
aas
sahf
mov
or
adc
cmp
xor
mov
pop
mov
or
xor
test
mov
inc
mov
jb
dec
aam
pushf
mov
jp
jmp
js
xor
jl
inc
push
xor
jge
shrl
mov
aas
dec
pop
scas
cltd
shrl
mov
mov
inc
cld
gs
imul
push
inc
adc
mov
out
dec
iret
lea
call
std
mov
mov
mov
lcall
lds
bound
repnz
and
or
xchg
mov
xor
out
ret
shll
xchg
inc
push
lahf
popa
fimull
mov
imul
push
ffreep
popa
leave
hlt
sub
jbe
shr
mov
icebp
repz
xlat
xor
icebp
daa
push
lds
add
icebp
pop
mov
sbb
out
mov
inc
daa
idivl
inc
shrb
jne
mov
push
and
adc
ret
or
es
hlt
mov
sub
jne
xsaves
jnp
xor
sbb
fneni(8087
and
outsb
cmc
mov
test
sbb
dec
cli
mov
mov
leave
jle
jne
inc
ret
rcrb
push
test
xchg
arpl
call
sarb
arpl
mov
enter
sbb
cmp
es
or
cli
or
fwait
imul
loopne
sarb
ljmp
adc
mov
sbb
adcl
out
lret
or
movsl
lcall
clc
cmp
enter
div
pop
fsubr
out
inc
mov
mov
test
test
mov
xlat
or
lret
cmp
std
add
into
jbe
sub
or
push
xlat
ljmp
mov
cld
or
leave
pop
jnp
fndisi(8087
sub
xor
int
jns
rcr
gs
popa
xchg
test
std
add
mov
outsl
dec
fs
movsl
push
or
in
mov
sahf
pop
xchg
mov
push
insl
adc
fstpt
test
push
jecxz
jno
dec
add
jge
jecxz
inc
push
loope
mov
mov
push
xchg
or
aad
mov
lar
jo
dec
dec
mov
loop
dec
xchg
in
mov
add
mov
flds
ror
inc
out
fnclex
mov
movsl
xor
stos
div
inc
mov
cmp
push
ljmp
jl
jle
loop
int3
clc
jp
out
pop
addb
addr16
jp
into
push
aad
jl
mov
mov
mov
cmp
sub
in
out
jo
loopne
aam
fs
das
cltd
mov
cltd
arpl
or
inc
cmp
fmull
and
ret
mov
and
xor
sti
int
mov
inc
xchg
mov
imul
mov
pop
sbb
or
dec
cld
dec
aam
lret
daa
xchg
iret
mov
sarb
repz
push
pop
adc
fcmove
fs
or
pop
loopne
jnp
andb
push
dec
xchg
mov
insl
mov
xchg
sub
cmp
aas
movb
out
mov
shl
dec
mov
mov
push
shrb
insb
stos
sub
mov
popf
adc
xchg
stos
shll
ja
packuswb
cmp
sbb
jle
cmp
arpl
mov
push
add
mov
fcomps
leave
lds
fisubrl
xchg
add
push
dec
cmc
fidivrs
sub
sub
lahf
test
ror
ss
mov
dec
mov
mov
mov
fcmovnb
push
push
dec
or
xor
inc
push
roll
sti
call
popl
mov
jl
cmp
and
aam
arpl
pop
jg
repnz
add
or
pop
mov
or
arpl
test
sbb
ljmp
gs
or
mov
xor
roll
push
icebp
fisubrl
cmpsb
scas
lds
ret
cmpb
push
inc
sub
ficomps
xlat
loopne
cmpsb
sbb
mov
scas
xchg
adc
xchg
cmp
fwait
cmc
jl
aam
xchg
or
push
std
dec
sbb
subb
lds
test
leave
jge
jo
cmp
pop
xchg
jp
cld
loop
dec
aam
xor
mov
jp
pop
xchg
push
mov
and
lahf
push
mov
ret
adc
mov
adc
dec
add
xorl
int3
popf
cmpb
pop
mov
xor
pop
dec
push
out
sub
cmp
inc
test
roll
inc
mov
subb
movsl
inc
push
jl
adc
sbb
fsubrp
mov
sbb
or
loope
mov
sub
fs
mov
cmp
push
xor
pop
mov
ss
pop
push
pusha
and
out
addb
ljmp
or
mov
pop
in
inc
sbb
mov
loopne
mov
sbb
add
mov
fs
ds
arpl
xchg
sbb
push
add
mov
add
addb
push
mov
jg
fucomp
lret
push
add
cli
mov
fs
fs
jmp
js
xor
push
push
repz
je
sahf
xchg
test
fdivrs
lret
aad
xchg
lock
lret
dec
inc
scas
sahf
pop
decl
jb
repz
lds
cli
sahf
mov
cmpsb
popf
push
and
jecxz
add
popf
cli
test
pop
jg
loop
bnd
jg
jnp
test
loope
adc
mov
adc
popf
dec
je
jmp
cmp
movsb
pop
ret
test
dec
inc
clc
adc
xchg
mulb
xor
and
mov
lret
xchg
cmp
jg
outsl
sub
fucomp
outsb
jecxz
cwtl
mov
rcrl
popa
xchg
inc
xchg
jnp
fcompl
ror
and
stos
sbb
bound
mov
sub
hlt
pop
sub
jnp
imul
mov
leave
loope
add
mov
je
cs
and
bound
xchg
and
mov
cmp
inc
shlb
mov
and
sbb
roll
add
jp
mov
jmp
pop
xor
mov
inc
inc
es
movups
sub
xchg
cmp
cmc
mov
call
sbb
leave
sub
cs
push
jmp
pop
pop
xor
inc
movhps
movsb
sub
mov
pop
nop
sbb
inc
mov
cmp
in
or
dec
inc
add
sahf
jns
cmp
dec
loope
nop
add
inc
ja
andl
push
popa
mov
jne
rcrl
shll
push
sbb
std
jno
add
lahf
jmp
sbb
pop
xchg
add
int
mov
loop
loopne
add
pushf
bound
dec
sub
test
sbb
cmp
push
idivl
daa
fimuls
xor
fnstenv
icebp
dec
cmp
jb
xchg
outsb
xor
cltd
and
rcrl
inc
int3
subb
sbb
data16
and
push
enter
pop
hlt
cwtl
adc
pop
cmpsb
xchg
pop
shlb
pop
dec
pop
jl
jl
icebp
fsubrl
cwtl
rcrb
jecxz
pop
mov
push
or
jl
xlat
popf
je
push
fsubs
movsb
nop
inc
xor
dec
bound
inc
test
das
or
sub
add
addr16
sbb
repnz
jg
add
bound
adc
test
pop
and
and
gs
pop
inc
adc
pop
add
push
mov
cltd
sbb
test
cmp
call
pop
stos
leave
push
ret
das
lret
mov
outsl
sbb
test
jbe
dec
es
dec
gs
cmp
test
push
sub
mov
or
sub
jmp
inc
adc
mov
insb
cmp
mov
xor
add
mov
mov
sbb
test
fists
push
test
sub
and
sbb
push
dec
cmpsb
sub
dec
xor
xchg
popl
jge
shl
into
lea
jb
arpl
mov
mov
les
or
mov
add
pop
cmpsb
sbb
fs
sbb
test
xor
xchg
mov
mov
xor
pusha
je
mov
mov
cmp
jge
pop
jg
scas
aas
and
and
int3
js
imul
jo
mov
lahf
incl
aad
leave
scas
in
jae
rol
mov
addr16
dec
dec
push
loopne
or
inc
xor
xchg
jmp
mov
outsb
cmc
mov
aad
sbb
or
mov
shlb
into
hlt
mov
inc
xor
push
cmp
push
xchg
mov
xchg
pop
aaa
in
inc
fwait
sbb
push
mov
xor
pop
sub
jl
and
adc
inc
lcall
fldt
fadd
lahf
pop
popa
cmp
cmpsb
idivb
cli
outsb
push
dec
cld
sub
test
rorl
lock
adc
es
ret
cmpl
test
aam
xchg
lcall
inc
add
dec
int3
sbb
ljmp
hlt
sub
leave
or
call
aas
pop
mov
roll
xchg
repnz
cmpsl
sbb
adc
hlt
mov
call
scas
lcall
je
mov
or
or
push
movl
out
test
jp
out
paddb
push
enter
jne
or
les
sub
pusha
xchg
sahf
xor
aas
add
mov
xchg
call
mov
xchg
cmp
std
lea
push
pop
aas
cmpsb
or
push
mov
jno
repz
popa
add
ret
pushf
scas
sbb
stc
jle
dec
sub
pop
fwait
sub
xlat
push
xchg
repz
dec
push
cmp
imul
mov
push
xlat
xchg
adc
fsubrl
mov
jg
sbb
aas
push
ljmp
mov
mov
push
mov
pop
cltd
insl
test
mov
pop
xchg
mov
mov
fdivp
and
pop
cmp
jo
adc
fists
icebp
add
subb
les
sub
xor
sbb
data16
mov
and
movsb
dec
outsl
les
ss
repnz
into
movsl
and
mov
inc
or
pop
jne
or
fwait
int
inc
xchg
stos
dec
or
outsb
xor
jge
mov
test
ret
xchg
cwtl
inc
cmp
ret
movsl
cmp
adc
cld
jp
into
lret
push
add
dec
pusha
ss
loope
and
sub
xchg
ret
pop
pop
es
call
or
mov
jne
shr
push
sbb
mov
dec
sahf
cs
lret
shrb
jl
xorl
sub
jo
add
add
push
aaa
cmc
iret
xchg
xor
push
inc
in
push
out
out
sbb
mov
lods
inc
cs
clc
ljmp
add
xor
jnp
shrl
in
outsb
xor
push
push
mov
mov
mov
pop
xor
adc
in
pop
sbb
lret
aad
cmp
decl
imul
pop
pop
push
in
push
pop
adc
pushf
add
xlat
pop
sbb
sub
aaa
mov
mov
dec
cwtl
push
mov
or
mov
xor
imul
leave
and
in
in
jo
mov
xchg
es
icebp
cmpsb
xor
and
mov
dec
mov
in
mov
mov
push
outsl
stc
and
sahf
insb
enter
lds
inc
mov
add
incl
or
adc
das
inc
sbb
xchg
in
ds
mov
pop
xchg
fstl
stos
cmp
shll
sbbb
imul
mov
enter
cwtl
mov
mov
sahf
rorl
dec
xchg
jne
into
and
and
push
jb
cld
add
mov
pusha
dec
movsl
and
insb
push
fdiv
loop
push
jae
mov
pop
fcmovbe
std
and
adc
cmp
cmpsb
adc
cmp
xchg
imul
repz
inc
push
pushf
sbb
das
sub
jns
or
movsl
int3
jne
pop
stc
nop
jmp
add
lcall
jne
jmp
in
push
and
stos
adc
pop
jnp
jmp
mov
popa
xchg
sbb
jbe
jbe
test
mov
and
iret
and
inc
lret
imul
inc
xor
ret
jg
pushf
and
jecxz
and
jge
inc
jg
mov
lcall
sbb
ret
pop
clc
dec
int3
sbb
in
lock
movsl
pop
mov
in
stc
sub
push
push
mov
sbb
jle
aam
ja
add
fwait
push
mov
push
xchg
or
or
test
inc
aam
xor
scas
and
out
sbb
cmc
fisttps
pop
xchg
adc
jp
pop
movsl
xchg
fcmovnbe
jmp
jno
add
out
sbbl
iret
pop
push
out
shrl
out
fwait
jae
popa
sahf
in
push
and
pop
dec
stos
icebp
sub
nop
sub
stos
push
dec
rcrb
outsl
add
add
jp
mov
js
xor
fnsave
pop
roll
dec
xor
and
fs
fwait
mov
jno
cmp
adc
mov
aaa
sar
jns
in
sub
jns
enter
xor
cmp
stos
shl
outsb
pop
push
inc
inc
inc
or
andb
pop
jp
hlt
dec
push
dec
xor
and
pop
mov
pop
push
popf
in
mov
jp
jge
sti
pop
mov
inc
insl
fsubrs
bound
clc
pusha
es
daa
loopne
or
and
push
cmp
xchg
mov
cmpb
cld
call
sub
cli
push
mov
inc
cmp
sub
pusha
insl
xor
or
dec
insb
jmp
inc
pushf
jle
push
xor
outsb
push
fiaddl
cmp
or
leave
add
frstor
loop
in
mov
xchg
xor
and
repnz
and
mov
sbb
sub
dec
mov
jb
bound
pushf
mull
and
xor
dec
add
ljmp
push
xlat
dec
addr16
and
les
adc
mov
mov
jg
jle
in
jmp
and
sbb
sahf
inc
cmp
push
gs
jno
push
adc
push
outsl
push
dec
pop
jmp
xchg
addr16
lcall
pop
pop
push
xchg
testl
repz
mov
adc
push
addb
cmpb
and
enter
test
or
dec
sbbb
pop
sub
mov
jo
mov
loop
lret
xorb
out
jmp
inc
mov
sbb
jmp
add
add
pop
add
and
movsl
popf
filds
fdivrs
and
push
push
adc
mov
scas
sahf
loope
xchg
enter
cld
jnp
repz
testb
cwtl
dec
outsb
add
je
cs
pop
sub
in
mov
lcall
insb
pop
in
iret
mov
and
fsubr
xor
mov
ret
jo
repnz
dec
imulb
or
in
popf
adc
fwait
aaa
inc
xchg
fcompl
ret
jae
inc
lret
xor
jl
xchg
cmc
test
sub
lcall
ret
imul
adc
scas
std
push
push
mov
adc
jmp
cwtl
xchg
jl
rol
test
popf
sbb
jb
sub
jno
sahf
leave
push
pusha
outsb
sbb
out
insb
adc
inc
mov
popa
fwait
fwait
push
mov
jne
movsl
mov
or
je
es
and
test
push
fldt
cld
pop
and
hlt
insb
mov
shr
xchg
mov
fiaddl
xor
cmpsl
adc
mov
xchg
jnp
cmpsl
rolb
lret
repz
data16
popf
test
xchg
xchg
es
xchg
pop
cmpsl
and
lahf
arpl
and
icebp
icebp
mov
int
sub
mov
cltd
cld
leave
adc
mov
lcall
inc
cmpb
sub
push
mov
pop
jg
stos
or
cld
cmpsb
cmp
push
pusha
mov
xchg
cmp
jmp
inc
mov
cmp
mov
push
xlat
jbe
push
pop
sub
sahf
xorl
xadd
cmp
dec
lret
adc
shl
sub
dec
dec
clc
pop
ret
in
ficoms
xchg
sbb
pushf
adc
or
mov
test
jb
mov
mov
sub
addr16
loopne
imul
mov
stc
sbb
movsl
repnz
add
sub
adc
scas
pop
adc
mov
js
filds
xchg
xchg
sub
in
push
inc
stos
pop
xchg
mov
mov
int
iret
push
cmp
push
mov
scas
inc
int
mov
mov
xchg
or
sar
add
cwtl
jmp
je
testl
or
and
sub
mov
sbb
mov
sub
mov
xor
insl
scas
and
fimuls
mov
mov
sub
pop
lock
sub
repnz
cs
lods
xchg
fidivrs
mov
inc
sub
mov
rcr
fs
sub
popa
ds
sarl
pop
fs
orl
ljmp
pop
mov
jo
fistpl
fiaddl
xchg
pop
je
xchg
into
push
jmp
fildll
pop
dec
xor
and
sub
jae
or
xor
add
cmp
pop
enter
cmp
xor
sub
int3
into
into
or
xchg
mov
mov
inc
sarl
inc
out
adc
ret
jns
hlt
cmp
push
lods
fdivs
sub
fucomi
cltd
adc
fcmovnu
out
je
into
or
mov
mov
into
jns
xchg
dec
jne
push
into
mov
insl
int
insb
test
sbb
cmp
ficompl
fimuls
cli
jnp
je
push
push
movsb
stc
jmp
imul
mov
movsb
out
or
dec
mov
mov
cmp
add
inc
inc
jae
and
ret
je
jbe
lds
pushf
adc
mov
dec
je
mov
jb
mov
hlt
ljmp
pop
cwtl
adc
loopw
ret
fsubrs
inc
stos
cmp
fisubrl
mov
dec
sbb
repnz
jecxz
enter
sub
adc
outsb
imul
stos
pop
data16
fdivrl
xor
or
repz
aas
leave
inc
mov
in
test
or
scas
fisttpll
fbld
or
mov
adc
cmp
dec
mull
test
xor
jno,pt
gs
push
sqrtps
out
mov
unpcklps
mov
xor
mov
bound
add
sub
dec
cld
imulb
lock
loope
pusha
mov
and
sbb
push
xchg
lock
or
fnclex
jbe
adc
xor
subl
pushf
aad
sub
nop
inc
mov
out
mov
lock
and
subb
push
push
scas
mov
push
shr
push
pop
hlt
test
jnp
mov
repz
jbe
xchg
clc
sbb
orps
cmp
hlt
popf
and
movsb
dec
xor
sbb
popa
push
dec
cltd
sti
adc
mov
mov
call
cmpsb
adc
push
in
add
addl
cltd
pop
pop
clc
inc
les
add
mov
xchg
jge
add
nop
or
fiadds
popf
js
sub
stos
scas
jge
daa
cmpl
call
pop
ds
imul
cs
bnd
mov
pop
push
stc
outsb
inc
iret
sbb
cmp
dec
mov
cli
les
stos
gs
jno
in
sbb
lods
push
repz
mov
arpl
outsb
js
mov
and
push
pop
rcl
jno
pop
xchg
sub
add
and
mov
rolb
add
jae
nop
xor
xor
out
jl
fcoms
cld
sti
sub
fsts
fs
int3
push
inc
paddd
mov
mov
cmpsl
cmpsb
filds
pop
xor
pop
xchg
dec
shll
dec
mov
cmpsl
imul
sti
scas
inc
repnz
dec
jo
notb
push
add
adc
fs
adcb
xor
pop
cmp
movsb
outsb
and
and
andb
sbb
xchg
divl
in
out
xor
cld
in
adc
ret
cmp
push
pop
add
ljmp
push
test
ret
insl
cmpsl
test
inc
and
das
jo
popf
cmp
or
hlt
and
jo
xor
mov
data16
xor
lret
repz
aam
gs
iret
ficoml
mov
inc
mov
cmp
pop
and
mov
pop
sub
adc
dec
pusha
mov
pop
jne
push
out
aas
add
js
nop
shll
nop
push
xchg
aad
jecxz
mov
mov
outsl
dec
pushf
scas
bound
adc
lods
ljmp
das
inc
scas
iret
push
cmpsb
repnz
fs
cmp
test
push
mov
push
mov
cmc
cmp
push
pop
test
dec
dec
mov
pop
xchg
push
adc
jae
rcl
fsubr
aas
subb
cmpsl
mov
xchg
xlat
cmp
dec
ret
push
int3
imul
mov
stc
insl
pop
jle
and
sbb
mov
push
cmp
push
aas
lock
mov
push
xchg
dec
jle
test
in
pop
and
rcrb
dec
mov
dec
cmp
sub
add
aam
xchg
add
aas
dec
mov
pop
in
mov
lcall
and
jge
or
jge
pusha
fs
xor
sub
xlat
push
lret
ds
sbb
xchg
dec
mov
sub
ljmp
leave
cld
sub
adc
ret
loope
mov
push
adc
adc
cmp
je
pop
shrb
pop
jg
mov
xor
std
xchg
sbb
test
push
jbe
sub
pop
mov
or
std
cmpsb
adc
add
push
js
iret
push
dec
inc
adc
int3
imul
fildll
stc
cmp
xor
mov
inc
out
xchg
lret
leave
rol
sub
gs
mov
dec
sbb
cli
jge
push
stc
mov
mov
add
sti
cld
aaa
xor
pop
or
mov
sub
mov
jge
and
jns
xor
sub
and
int3
notb
sub
xchg
sahf
mov
fmull
cmpsb
pop
xchg
movsl
bound
test
push
lret
mov
arpl
dec
aaa
aad
not
scas
adc
gs
sbb
inc
xor
mov
jg
sbb
jne
dec
sub
fcmovne
cmc
xchg
in
push
jmp
jb
push
jno
jp
lahf
push
add
out
mov
push
sar
xchg
lret
cmpsb
ret
hlt
mov
addr16
lods
push
int
repnz
mov
mov
sub
push
test
imul
jge
cmp
mov
push
testl
jne
xchg
dec
test
popf
out
cli
int
aas
inc
sarb
or
and
xor
ljmp
pop
push
inc
fabs
cwtl
dec
repz
mov
sbb
cs
test
int
adc
adc
jae
and
leave
sub
ret
shlb
mov
dec
and
pushf
cld
pop
add
mov
push
jl
adcl
jle
xlat
pavgb
test
aas
call
sbb
and
loop
insl
add
sub
adc
cltd
lahf
push
movsl
mov
je
dec
adc
dec
push
sub
push
outsl
fdivrs
call
jmp
fisttpll
inc
fnsave
sahf
nop
push
and
popa
out
cmp
scas
pop
mov
fldenv
stos
popf
rorb
je
pop
and
adc
adc
push
add
xor
pop
jne
data16
iret
call
cmc
cmp
lock
add
fwait
xor
mov
iret
lea
lahf
arpl
test
mov
sub
add
push
sbb
jg
lods
push
hlt
lcall
repz
cmp
mov
and
or
in
sub
mov
sub
and
das
decb
addb
mov
daa
les
nop
dec
mov
rcrl
ret
xchg
out
shll
pop
icebp
xchg
ljmp
pop
pop
subb
pop
sbb
lcall
pusha
and
jbe
add
stos
mov
lds
dec
sub
xor
lcall
xchg
xor
hlt
repnz
cmpsb
dec
sbb
das
inc
dec
mov
rorl
inc
test
fs
dec
mov
xchg
push
mov
fildll
mov
es
jl
sub
popa
dec
js
lcall
stos
dec
inc
mul
sub
xor
leave
or
adc
mov
imul
push
fistl
inc
inc
cmp
mov
jbe
call
jg
sub
fcmovnbe
push
push
out
cld
rolb
xor
fisubrs
mov
ret
mov
ret
stos
mov
iret
xlat
jge
sub
sub
lahf
test
jl
or
insb
adc
in
cmp
jne
daa
ja
int3
loope
inc
lcall
inc
filds
int3
aaa
es
mov
xchg
test
leave
fs
push
into
adc
cmovns
movsb
in
mov
in
rorb
pop
or
mov
sub
test
ret
iret
nop
jmp
or
hlt
cmp
rcll
movl
stos
xchg
xor
packsswb
push
lods
sub
imull
outsl
imul
cmp
sub
arpl
jnp
pop
adc
int
daa
cld
insl
in
xor
imul
iret
xor
insb
cs
cmc
aas
test
mov
sbb
jmp
cli
fisubrs
push
and
pop
xor
fnstcw
rcrb
and
or
mov
cmc
lods
mov
scas
cmp
fmuls
aas
pusha
cmpl
cld
inc
test
mov
pop
or
dec
cs
pop
jne
loop
xor
rcll
subl
lods
addr16
lahf
mov
pop
sbb
loopne
xor
imul
push
sub
sub
test
pop
jmp
pop
or
cmp
jl
adc
loop
loope
fbstp
jg
xchg
mov
pop
push
dec
les
xchg
test
inc
ret
cwtl
push
push
jl
addr16
out
or
gs
cld
and
or
cmpsb
cmp
lret
mov
scas
cwtl
sbb
out
mov
subl
out
and
repz
not
push
and
adc
inc
in
loopne
jecxz
xchg
sahf
mov
pop
popa
cmp
cmp
fbstp
addr16
aaa
mov
imull
mov
sahf
mov
jb
jmp
mov
mov
mov
mov
fnstsw
dec
dec
andb
cs
lahf
lcall
sub
mov
jb
cmp
inc
test
rorb
icebp
movsb
aam
and
and
mov
iret
jno
xchg
add
jb
nop
pusha
ficomps
mov
dec
imul
cli
inc
adc
xor
repnz
sahf
mov
pop
cmp
dec
cmc
xor
mov
pavgb
inc
psadbw
mov
and
decl
push
mov
sub
push
in
jo
in
add
stos
cmp
dec
out
xchg
imul
mov
aas
mov
mov
jg
stc
int3
lods
mov
dec
enter
jno
dec
dec
push
and
inc
les
lret
and
cmp
sbb
jge
cmp
mov
lds
push
pop
or
fsts
ja
jmp
mov
out
inc
test
jl
sbb
mov
mov
test
push
dec
nop
xchg
sub
popf
mov
and
pop
cmc
mov
js
mov
mov
int3
and
cmp
jl
repz
inc
test
xor
push
inc
mov
pop
insl
cmp
push
push
nop
add
jge
add
cmp
test
lds
pop
std
push
jne
ret
and
inc
out
mov
cwtl
dec
adc
jmp
and
and
push
push
sbb
lahf
and
data16
cmp
fnstenv
cmc
mov
cli
popa
pop
ljmp
cli
call
jae
dec
ffree
xchg
inc
fisttps
dec
cmp
xchg
das
pop
je
mov
int3
mov
into
dec
mov
mov
xor
jo
jmp
push
add
bound
jne
sar
sub
into
push
and
popf
push
pop
decb
js
lods
adcb
fstpl
test
mov
mov
inc
ds
outsl
xchg
lock
arpl
stos
mov
lods
sub
and
jecxz
test
dec
pusha
xchg
jae
std
inc
fisubl
mov
pop
adc
lods
xchg
mov
jge
pop
mov
cltd
xchg
pop
out
jo
sub
outsb
enter
stc
stos
in
xchg
insb
xor
stos
push
lcall
or
cmp
lret
pop
pop
inc
sbb
insl
loope
mov
xchg
mov
aad
out
es
cmpsl
mov
xor
out
adc
mov
outsb
mov
gs
cmp
mov
in
jg
add
pop
dec
insl
das
mov
mov
ljmp
icebp
in
xchg
cmpsb
js
push
xchg
lcall
jp
fildll
ljmp
imul
jb
push
mov
scas
mov
xchg
push
add
daa
fisttpl
aam
lds
repz
aaa
mov
lea
std
cmp
icebp
mov
ja
mov
mov
test
xlat
mov
shr
cmc
ja
push
repnz
stos
xchg
pop
orl
sub
rclb
and
jo
mov
lret
cmp
rcrl
int
adc
loop
scas
in
lahf
sysenter
xor
xor
out
xlat
popf
mov
sbb
xchg
and
sub
xor
jl
in
popf
sbb
rorl
cmp
test
insb
lea
mov
push
stc
lcall
movsb
hlt
xchg
out
fwait
arpl
push
push
mov
shll
les
xchg
add
fwait
leave
mov
fists
or
jb
scas
or
xor
les
test
je
sarb
dec
inc
js
int3
mov
ljmp
mov
test
fists
movsl
popa
dec
sub
pop
stc
pop
mov
push
fiaddl
adcb
hlt
outsl
and
mov
lea
and
lret
jnp
mov
cld
dec
les
mov
mov
mov
dec
lods
mov
cmp
adc
pop
js
cmp
cmp
push
xchg
mov
adc
das
push
xchg
jno
test
adc
pop
or
pop
sbbb
out
dec
int3
pop
test
iret
fistpll
jecxz
pop
sti
and
lret
out
add
lret
mov
std
shlb
mov
dec
int3
cmp
in
mov
mov
in
ja
mov
cmpsl
outsb
sbb
jmp
int3
daa
sbb
or
call
in
jg
in
imul
xchg
add
mov
sbb
inc
js
xlat
lods
pop
adc
mov
and
insb
mov
ja
fs
aam
jns
sbb
int3
mov
popa
ret
mov
iret
dec
out
push
xor
int
pop
adc
dec
adc
mov
ljmp
jl,pt
outsl
insb
ror
dec
mov
lds
and
push
faddl
cmpsb
mov
xchg
xchg
pusha
add
xor
fldenv
mov
mov
decl
xor
sub
mov
pinsrw
pop
movsb
mov
mov
mov
jp
mov
cmp
aaa
inc
and
lods
cmp
mov
data16
inc
dec
pop
cmpsl
xchg
xor
leave
push
mov
add
jg
xor
int3
mov
out
inc
pop
mov
scas
inc
cli
mov
mov
mov
js
in
sub
mov
iret
in
mov
mov
out
test
and
push
and
out
cmp
mov
out
subb
pop
imul
mov
dec
pop
push
jbe
lahf
movsb
push
sbb
xlat
popa
idivl
xor
push
insb
insb
xchg
sub
or
loop
xor
test
mov
cltd
je
jmp
addr16
sub
in
push
pop
jb
xchg
or
nop
add
int
jns
lcall
lcall
popa
sub
or
sub
inc
inc
mov
fcoml
mov
pop
add
inc
hlt
pop
push
adc
pop
iret
jo
lea
jne
scas
xchg
test
pop
xor
dec
mov
push
icebp
sahf
push
jo
push
add
or
push
test
mov
stos
dec
aam
dec
fyl2xp1
mov
xchg
cld
ja
mov
and
int3
mov
mov
shrl
push
pop
mov
sti
jo
dec
push
cld
bound
and
xchg
mov
sub
pop
push
movsl
adc
cs
in
test
dec
repz
loop
adc
cld
repz
mov
xlat
call
ljmp
xchg
cmpsl
aaa
lock
test
jmp
aad
arpl
gs
push
out
xor
push
test
insb
pop
push
sub
inc
xchg
das
cmpb
cmpsb
mov
fs
fsubrl
or
sub
arpl
cmp
dec
mov
hlt
sahf
movsb
sar
mov
sti
dec
mov
push
sti
adc
and
popf
adc
insl
pop
pop
cmp
mov
mov
or
cmp
jp
dec
inc
sarl
inc
xchg
pop
mov
inc
sbb
das
jmp
dec
add
mov
nop
rcll
mov
push
or
popf
leave
push
jmp
dec
add
mov
in
xchg
movsb
xor
pop
rcrl
into
aam
out
call
lahf
rcl
jl
jmp
ret
js
adc
sub
and
push
push
scas
out
rorb
int3
pop
inc
push
gs
call
orb
repnz
rol
lahf
enter
mov
and
adc
or
nop
xchg
add
int
enter
mov
aad
jmp
pop
dec
inc
adc
mov
int
lea
sbb
mov
sub
lret
and
inc
mov
cmp
mov
push
dec
frstor
fnstenv
repz
sarb
sub
popf
fdivrl
sti
mov
adc
sbb
sub
ljmp
mov
divb
pop
xor
and
sub
iret
dec
bound
mov
stos
fidivrs
lret
mov
xchg
testl
cmp
fildll
push
icebp
sub
mov
in
insl
cli
iret
dec
insl
in
pushf
or
lahf
jb
shl
lcall
movsb
add
int
mov
mov
mov
test
lret
sub
push
mov
mov
stc
mov
pop
jb
jno
push
add
out
movsl
jo
fcmovnb
out
cmp
cmp
sub
mov
es
movsl
dec
insb
xor
push
shll
in
or
lea
iret
pop
jb
mov
fsts
sbb
test
or
push
xor
sbb
push
test
lcall
test
sbb
jge
sub
or
add
mov
sub
cmpsb
adc
push
lret
jno
ss
jg
and
ss
inc
in
jle
xchg
dec
pop
pop
push
pop
aas
inc
dec
jp
jo
jae
inc
mov
inc
mov
test
adc
jp
xchg
popa
std
lods
lock
loope
cmpsl
jecxz
pop
push
out
jecxz
dec
mul
jno
cmc
cmpsl
ljmp
mov
shlb
mov
insl
pusha
outsb
scas
cmp
lahf
imul
jno
rcr
add
iret
mov
xor
sarl
pop
fsub
jo
les
in
jl
xchg
adc
loop
xor
in
stos
jp
mov
jb
ds
fcoms
mov
loopne
pop
flds
dec
xchg
xchg
shlb
hlt
xchg
out
xchg
mov
mov
jno
in
jge
mov
pop
or
pop
rorb
push
xor
cmp
xchg
xchg
push
xchg
lret
insl
pop
lahf
dec
rcr
add
out
pop
jmp
lods
jns
test
js
iret
push
adc
leave
addr16
sub
ja
xchg
bound
lods
jle
mov
cmp
push
inc
scas
mov
and
sbb
mov
jp
fdivrl
sti
int
imul
jmp
call
jge
xchg
out
enter
mov
inc
shrl
mov
sub
push
loope
or
xchg
enter
jno
xor
sub
mov
sbb
lds
lea
push
xor
mov
popa
pop
in
push
mov
dec
sub
clc
cmp
fdiv
imul
jae
fldl
mov
hlt
push
mov
pop
rep
scas
jne
mov
out
mov
call
in
xorl
fst
pop
fidivrs
inc
xor
push
gs
test
pop
mov
push
xor
shl
notl
orb
mov
bound
movsb
add
mov
imul
inc
add
xor
jle
xchg
xchg
cli
mov
stos
das
jno
mov
fbstp
sbb
mov
inc
push
insl
mov
jecxz
and
push
mov
rcr
push
dec
or
das
mov
pop
adc
addr16
pop
clc
push
xor
outsl
addr16
push
loopne
cmp
out
push
sub
neg
lods
mov
fcmovne
dec
cmp
jnp
icebp
inc
jmp
push
cmpsl
sahf
aaa
in
repz
fs
repz
add
insb
sub
ret
mov
pop
fimull
mov
jle
jne
popf
mov
orb
test
scas
dec
fistl
test
inc
bound
cmp
jl
mov
stos
sbb
int
rolb
pushf
dec
repnz
dec
fcompl
push
push
push
pop
mov
lahf
mov
push
inc
je
inc
sub
js
and
pop
fdiv
mov
push
leave
and
cs
mov
icebp
inc
sub
dec
xlat
mov
xlat
std
pop
hlt
arpl
outsl
sub
push
ss
and
mov
insl
jge
sub
pop
imul
sbb
lahf
pusha
aam
mov
pop
push
fcoml
ret
ds
lock
popf
arpl
push
add
movsl
jecxz
xor
xorl
fiadds
xor
mov
sbb
push
imul
pop
jno
xchg
clc
out
jbe
mov
out
or
decl
and
ljmp
pop
inc
jmp
sti
or
sbb
pop
mov
mov
lea
jns
push
mov
jb
xchg
pop
clc
sarb
mov
lcall
into
xchg
mov
lret
ds
ret
cmp
das
push
movsl
imul
push
mov
sub
jl
xor
sbbb
xchg
fs
or
xchg
mov
adc
sbb
mov
jle,pn
andl
adcb
cmpsl
loope
mov
xor
outsb
adc
movsb
aam
das
jge
pop
mov
lods
out
sub
fistps
or
cld
sbb
in
cmpsl
outsb
add
adcb
aam
in
lods
movsl
add
imul
and
stos
subl
mov
dec
adc
imul
push
cmp
pop
jbe
mov
aad
sti
dec
into
das
stos
faddl
mov
or
sub
xchg
add
or
mov
push
fs
sbb
jmp
stos
add
aaa
in
jge
or
daa
mov
push
outsw
out
xchg
sar
shrl
mov
les
scas
xchg
test
xor
and
popa
outsb
xchg
sbb
xor
mov
ds
adc
push
loop
clc
les
pop
dec
daa
fdivs
and
cmp
mov
or
icebp
lret
fdivr
cwtl
adc
xor
and
test
fsubl
daa
movsb
and
scas
inc
jno
daa
ret
sbb
push
add
stos
cmc
out
inc
jge
jne
sbb
pop
mov
fldenv
mov
mov
mov
cli
mov
cmc
xchg
ljmp
add
and
repz
andl
cld
pop
lahf
pop
inc
mulb
rcr
call
push
hlt
mulb
das
jns
insl
stos
cmpsl
lods
jo
repz
adc
push
cmp
xchg
sarb
xchg
xchg
adc
sub
mov
sti
andb
mov
dec
loopne
cmp
cmovo
jae
aad
jp
push
les
push
lods
ljmp
arpl
xchg
and
xor
cmp
inc
add
stos
inc
mov
jo,pt
inc
mov
ds
dec
ret
icebp
out
popf
mov
dec
mov
or
data16
lea
pop
inc
jbe
dec
out
daa
js
xor
push
jp
push
addr16
or
push
loop
mov
mov
mov
inc
std
arpl
test
movsl
cmp
sub
xor
lcall
xchg
mov
cs
push
push
adc
adc
jne
jp
fs
dec
test
andb
inc
sub
in
mov
inc
xor
adc
pop
adc
mov
fwait
jmp
mov
repz
aaa
mov
outsl
nop
cltd
cs
int3
movsl
and
fisubrs
or
out
jae
test
mov
cmp
dec
test
dec
xchg
sahf
fisttpll
sbb
scas
dec
xchg
cmp
jb
shlb
sti
push
bound
pusha
adc
jge
mov
lcall
sub
sbb
xchg
idivl
sbb
pop
inc
pop
popa
sub
andb
loop
int
add
cmpsl
loop
lods
or
adc
xchg
or
mov
das
sbb
xchg
xchg
xchg
lahf
add
nop
push
cmpsb
vpshufhw
fsubrl
rolb
mov
cwtl
mov
sbb
cltd
adc
inc
out
cli
addb
jbe
test
inc
jno
ficomps
cmpl
jmp
sub
push
jnp
cmp
push
addr16
push
int3
jmp
imul
jae
push
aad
sti
cmp
sub
jbe
mov
cmp
sub
out
pop
mov
sahf
out
inc
shrb
ret
lcall
enter
sub
rorb
dec
push
sbb
lahf
dec
mov
aas
cmpb
lahf
stos
push
xchg
jl
dec
loope
test
insb
mov
xchg
std
mov
inc
jae
in
fmull
test
mov
repz
pop
mov
sub
out
cmpsb
inc
mov
ss
jmp
cld
add
stos
dec
xor
sbbb
adc
pop
fs
daa
js
or
das
roll
stc
cli
inc
popf
mov
jb
push
pop
test
movsb
shlb
fwait
movsl
inc
stos
sahf
pushf
loope
andb
shlb
mov
sbb
and
aam
ret
rcll
int
out
inc
push
xor
sub
dec
mov
pop
insb
pusha
adc
sti
mov
dec
mov
mov
lods
jg
je
fs
dec
outsb
dec
sbb
dec
mov
cmp
ss
xor
jbe
fnstenv
shlb
data16
sbb
adc
pop
jp
jo
mov
into
mov
addr16
or
jg
mov
or
jno
mov
daa
push
lcall
in
mov
mov
outsl
movsl
cltd
xchg
dec
lods
data16
or
add
loope
mov
movsb
dec
enter
aam
pushf
arpl
and
and
and
or
fcoml
push
adcb
lcall
adc
jbe
mov
ret
push
stos
and
dec
jle
arpl
mov
mov
mov
xchg
jle
shll
sbb
jge
out
add
push
jo
add
sub
xlat
and
imul
pop
sti
cwtl
push
enter
lock
push
test
push
inc
dec
test
in
aad
cld
inc
js
sbbb
pop
inc
aam
sub
popf
pop
repz
jne,pt
inc
inc
or
daa
cmp
mov
push
mov
add
or
lret
lods
adc
lret
pop
adc
je
jge
outsl
fisttpl
fucom
xchg
int
aad
in
iret
push
xchg
pop
adc
imul
mov
sub
cmpxchg
ja
xchg
pop
push
popf
std
or
int
mov
stc
jno
cmpsl
xor
xchg
out
jl
push
and
test
in
je
add
add
xchg
push
jle
push
push
jl
sarl
inc
jo
outsb
ficoml
xchg
or
mov
aad
loop
dec
aam
clc
mov
add
jns
cltd
out
jp
pop
inc
into
pop
and
mov
sub
int3
xor
out
insb
and
and
loopne
mov
xchg
sbb
int3
push
push
sti
je
add
lret
mov
pusha
cmp
insb
jge
in
xor
push
push
adc
das
mov
inc
fsubrl
aam
enter
xor
jmp
push
and
dec
mov
cmpb
jbe
jno
push
mov
fsub
cs
lahf
adc
insb
in
inc
fistps
cli
sbb
loope
xchg
es
push
fst
xchg
push
fiadds
adc
scas
test
pop
jge
adc
xchg
gs
cmp
test
pop
pop
je
mov
out
mov
negl
add
fldcw
or
cmp
sub
test
mov
out
fldt
jg
fmul
adc
cmpsl
insl
xor
pop
cmpsb
leave
outsl
out
icebp
lcall
mov
or
das
cmp
clc
mov
xor
fwait
xor
cmpsb
xchg
xor
adc
stos
iret
mov
loop
fstps
jo
cld
test
xchg
jno
mov
out
mov
fcoml
lcall
or
loope
mov
adc
jb
mov
out
aas
add
lret
lods
or
jnp
add
sub
inc
aas
adcb
add
push
dec
mov
push
outsb
pop
test
daa
xchg
mov
push
imul
mov
sbb
mov
jb
mov
fsubl
or
and
ss
cli
xchg
imul
in
dec
push
or
adc
out
cmc
subl
fcompl
je
adc
inc
lahf
mov
imul
inc
sub
sub
mov
adc
cmp
divl
pop
aas
sbb
xchg
lods
repz
clc
sbb
xchg
sbb
bound
arpl
lret
test
add
imul
push
push
ds
aad
push
adcl
imul
sub
pop
rolb
and
call
mov
add
ljmp
push
subl
mov
dec
pop
ficoml
add
test
imul
in
fldcw
test
inc
push
movsl
push
mov
testb
add
add
stos
roll
sbbl
mov
xchg
lds
imul
dec
sbb
fidivs
jnp
and
cmp
test
lods
cs
loop
gs
mov
js
rcrb
ret
popf
jp
into
shl
and
cmp
adc
inc
in
xchg
mov
or
and
test
jl
xchg
outsb
mov
cmp
jns
es
test
addr16
outsb
cmp
les
and
ja
mov
rolb
jge
scas
mov
call
sub
adc
lea
dec
or
push
lds
insb
mov
xor
mov
pop
dec
xor
xchg
sub
ret
cmp
pop
and
mov
repnz
xchg
sub
ret
mov
mov
lods
cld
push
dec
mov
ljmp
sahf
adc
pop
int
jmp
sub
loop,pn
sbb
gs
mov
adc
dec
cs
sbb
pop
cmpsl
and
xor
push
jno
push
xor
pop
adc
jo
fcmovu
jno
leave
stos
inc
dec
sbbb
xor
mov
inc
add
test
add
subb
xchg
push
dec
lods
testb
iret
cmp
repz
add
cmc
mov
push
in
out
jg
test
push
ja
push
repz
test
jecxz
mov
pop
aaa
cmp
das
jns
dec
loopne
adc
or
sbb
push
cmp
cmp
loope
ret
insb
dec
jg
jo
sub
repz
sub
mov
mov
ret
cwtl
add
out
nop
inc
les
popf
lret
jne
loope
mov
push
mov
cwtl
xchg
push
lds
and
xor
fwait
in
pop
pop
aas
cmpb
pop
mov
in
mov
test
mov
mov
push
dec
dec
sub
iret
mov
pop
fs
inc
push
xchg
mov
jne
cltd
dec
test
mov
loopne
cli
cmpsl
lahf
gs
lcall
and
jp
xchg
and
mov
or
push
mov
dec
jno
xchg
mov
loop
mul
aad
pop
test
fdivrp
add
loop
push
rorb
push
jns
leave
mov
test
call
mov
add
mov
and
jae
jl
adc
add
adc
push
das
sub
mov
mov
popf
mov
push
je
add
inc
loope
scas
inc
fstpl
cs
lret
fs
lahf
pusha
out
push
ss
mov
loop
ja
stc
xchg
mov
sar
ja
jmp
js
xchg
and
in
jbe
cmp
sbbl
jecxz
xor
icebp
mov
mov
pushf
es
popa
and
int
mov
jmp
jno
jp
mov
cmpsl
orl
jno
test
test
adc
sti
cmpsb
lea
mov
sbb
mov
into
sti
mov
or
lahf
shl
jg
movsb
inc
stos
stos
stc
cld
or
in
nop
adc
dec
cwtl
xchg
jns
pushf
mov
jb
xlat
int3
push
jmp
dec
iret
je
mov
push
jb
aad
cmp
xchg
push
out
lcall
adc
add
je
jge
fistpll
pop
fistl
jno
dec
mov
lods
mov
lahf
and
loope
dec
pop
cmp
das
js
jne
mov
jbe
shll
pop
inc
xor
push
fdivs
aaa
inc
int3
arpl
sub
push
outsb
cwtl
ror
lea
shll
std
pop
pop
pop
subb
stos
inc
xorl
orb
xor
mov
out
jne
insb
mov
std
push
mov
xchg
roll
cmpsb
xchg
clc
sub
clc
cs
xor
jmp
adc
mov
cmp
ss
add
outsb
mov
xchg
push
sub
repnz
data16
es
repnz
xchg
out
mov
lock
push
aas
ret
pop
orb
iret
stos
or
cmpsb
adc
sub
aam
lcall
clc
sbb
dec
xchg
test
loope
out
fcomps
enter
pushf
pop
cmp
push
push
out
lea
mov
lret
loopne
push
mov
cmp
aam
ficoml
popa
iret
mov
xor
cmp
movsb
inc
out
sbb
or
mov
inc
mov
fwait
inc
pop
add
jns
sbb
mov
cmp
popa
jbe
fs
push
mov
cmp
stos
push
xor
dec
lea
push
repz
xchg
dec
mov
ret
cmpsl
dec
cmp
icebp
jecxz
xchg
repnz
dec
imul
jecxz
pop
push
xor
popf
mov
lahf
jae
add
and
pop
ljmp
std
movl
mov
jp
pop
inc
hlt
or
loope
jg
xor
push
xor
mov
sbb
lret
idiv
mov
imul
fimull
data16
jno
jecxz
pop
inc
out
shr
xchg
fucomip
dec
cmp
popa
js
inc
jo
addr16
mov
sub
mov
je
fmul
sbb
dec
divb
mov
adcl
dec
lret
dec
or
push
jle
jnp
sub
cli
into
dec
xorl
jnp
out
mov
mov
push
inc
add
hlt
push
mov
cmp
ljmp
pop
dec
add
hlt
and
scas
gs
sub
inc
push
std
xchg
inc
jns
xor
pop
jbe
jo
call
push
jbe
shll
ret
aad
xor
hlt
cmp
xchg
shll
or
mov
sub
lret
mov
cmc
mov
push
lods
jmp
xchg
data16
pop
pusha
mov
out
lret
xor
mov
cltd
cmp
subl
lock
mov
iret
sbb
rcll
inc
ja
xchg
cltd
mov
ja
adc
push
aaa
std
lret
sbb
push
psubw
sub
mov
add
scas
insl
ret
lret
mov
daa
repz
cwtl
int3
mov
repz
movsb
stos
or
cmpb
mov
leave
inc
nop
fcompl
in
add
pop
mov
test
jp
stos
cwtl
mov
arpl
mov
ja
xchg
test
sahf
push
jge
pslld
pop
pop
pop
lock
inc
loop
jns
mov
add
insl
dec
lea
inc
icebp
push
jp
mov
mov
cmp
ror
lods
mov
xor
hlt
dec
out
sbb
fwait
dec
mov
pop
sub
xor
stos
pop
cmc
mov
adc
pop
js
out
jge
int
lea
addb
xor
jecxz
ret
jmp
cmpsl
inc
push
sub
add
es
sub
imul
adc
dec
or
cwtl
out
adcl
adc
mov
xchg
cltd
jae
sbb
add
stc
pop
mov
sti
add
mov
push
cmp
sbb
ficompl
prefetch
or
pop
sbb
loop
shll
in
mov
xlat
pop
dec
add
mov
lahf
jbe
sbb
subps
adc
xor
mov
pop
int
pop
jne
push
in
add
and
out
es
gs
mov
es
shrl
stos
lahf
ja
xlat
add
data16
leave
or
imul
add
arpl
mov
mov
pop
pop
out
adcl
fidivrl
sub
pop
imul
rol
pop
and
push
jp
mov
xchg
push
add
hlt
icebp
and
lds
dec
aam
jle
mov
push
xor
ljmp
mov
cmp
mov
mov
sar
ds
sbb
jmp
fmul
sahf
ror
dec
pop
and
test
mov
and
fldl
xchg
jbe
outsl
arpl
movsb
mov
cmpb
mov
inc
insb
push
push
mov
pop
jmp
dec
push
xchg
lock
nop
scas
xor
loop
testl
cld
insb
cmpsl
fistpl
xchg
add
cmp
pop
adc
shrb
inc
daa
cli
and
lahf
xor
dec
cwtl
sub
test
mov
not
xchg
push
in
mulb
por
mov
addl
subb
outsb
sub
dec
sti
push
mov
in
dec
mov
push
push
and
add
stos
cmpsb
imul
lcall
fcmovne
xlat
sbb
lock
xorl
xor
jge
data16
xlat
jne
scas
push
inc
ror
ljmp
repnz
push
ret
mov
shlb
cmpsb
mov
pop
ret
shll
push
je
mov
add
push
xor
lock
pushf
rorb
ficoms
mov
add
push
sbb
jg
in
into
adc
pop
in
sub
stos
int
adc
fists
ret
stos
add
pop
sbb
test
push
dec
jle
sti
mov
int
inc
imul
dec
pop
push
sub
stos
jb
insb
hlt
push
sbb
push
lea
mov
stos
add
dec
mov
aam
and
mov
repnz
repnz
mov
in
insb
cli
stos
sub
les
xchg
in
cltd
leave
jno
out
dec
clc
pop
xor
mov
loopne
pusha
mov
dec
mov
push
mov
mov
and
inc
fiadds
adcb
in
aas
sub
add
in
adc
jmp
mov
cmp
scas
loopne
stos
add
lea
arpl
iret
xchg
repnz
push
out
or
or
mov
bound
add
adc
mov
push
sahf
xor
icebp
and
jb
ret
addb
push
jnp
insl
and
inc
imul
loop
faddl
out
inc
mov
inc
mov
lods
clc
mov
dec
sub
mov
add
xor
mov
icebp
out
pop
cmp
sub
add
sub
jae
jge
lods
nop
je
lret
mov
cmp
jp
mov
sub
mov
js
rorl
adc
arpl
add
lock
jns
dec
lea
mov
loop
pop
and
push
ja
lret
out
mov
out
push
loope
outsb
imul
andl
das
cld
cmp
or
and
xchg
cli
lods
push
inc
push
mov
mov
fmuls
daa
fmull
sbb
jb
cmp
pop
nop
fildl
mov
popf
and
pop
out
dec
push
and
mov
and
xor
xchg
lods
fsubp
pop
leave
mov
ret
sti
pop
or
in
es
ret
sub
mov
stc
shll
jne
addr16
aas
dec
pop
and
sub
psubsb
fwait
jmp
lods
js
or
icebp
cmp
cmpl
clc
icebp
scas
sub
lods
dec
cli
imul
imul
movsl
or
add
or
push
inc
leave
fadds
jle
add
fnstcw
push
idivl
sub
pop
add
cmp
int
adc
rcr
cld
or
mov
gs
std
dec
mov
adc
sub
shrb
inc
push
fdivp
jb
jg
ds
push
jecxz
fsts
xchg
les
in
cli
inc
mov
adc
mov
ss
sub
mov
sti
js
dec
sub
cmp
xor
repnz
adc
push
int
push
int3
inc
push
mov
pop
outsb
xchg
js
pop
lcall
xchg
mov
or
movsl
mov
fidivrs
movsb
adcb
pop
mov
or
xor
push
les
xor
stos
sbb
and
dec
rcl
test
xor
or
ds
ljmp
mov
lcall
aaa
mov
movsl
mov
lock
test
ret
cmp
outsb
fdivs
xchg
bound
arpl
rcll
jg
xchg
jmp
push
sbb
sti
daa
jp
jg
lcall
cltd
outsb
out
lds
fmull
and
dec
imul
aaa
xlat
test
sub
insb
sahf
xchg
sub
daa
pushf
lcall
push
clc
cmpsl
addl
outsb
pop
mov
or
das
and
lret
mov
mov
xor
jae
lods
xchg
loope
xchg
adc
push
fbstp
mov
and
loopne
sbb
cmp
dec
xor
mov
outsb
into
mov
mov
mov
push
dec
xchg
aam
push
bound
inc
das
ss
mov
adc
outsl
mov
lret
cmp
cmp
xor
fsubl
jb
dec
dec
xor
fadds
ds
jp
in
das
call
jge
mov
push
push
cmp
lahf
movsl
mov
jnp
fidivrs
es
or
adc
jmp
mov
add
fdivrl
sub
mov
xchg
aad
mov
rcrl
scas
mov
dec
mov
push
xchg
cmpsb
fnsave
jnp
ljmp
xchg
cmp
scas
and
ljmp
movsb
rcll
ds
dec
xchg
or
and
addr16
jg
mov
sbb
xchg
inc
sub
test
and
add
mov
test
sbb
add
test
pop
addr16
jne
mov
loopne
push
les
jp
into
adc
pop
jmp
fisttps
pop
mov
sbb
sbb
dec
jae
sub
mov
call
dec
xor
push
xchg
shrb
push
outsl
jle
test
xchg
rolb
sti
stos
jbe
add
cmp
imul
lcall
inc
cmp
pop
int
clc
je
jmp
mov
test
in
mov
fwait
stos
rcrl
xlat
jle
gs
and
loopne
rclb
jo
arpl
mov
lds
into
sub
movsl
add
mov
mov
pop
xchg
bndstx
movb
sbb
sti
aad
xor
stos
in
arpl
xchg
aas
mov
mul
in
mov
jo
add
addb
xchg
decb
mov
sub
xchg
in
ljmp
cmp
jae
mov
jb
lcall
mov
mov
pop
insl
rcr
out
hlt
js
fisubl
mov
pop
push
lods
pop
push
pop
lods
adcl
cs
leave
sub
mov
push
lds
mov
adcl
sbb
inc
inc
imul
sub
xchg
xchg
mov
lret
maxps
cmp
and
xlat
insb
adc
pop
imul
jae
or
adc
int3
xor
mov
aam
dec
out
inc
inc
popa
jl
fmull
cmpb
xlat
xchg
outsl
xchg
arpl
add
inc
mov
push
push
frstor
fcmovu
icebp
fadd
and
sbb
cld
mov
rol
pop
ja
psubsw
inc
popa
out
imul
movsl
sbb
addr16
push
fsubr
sub
add
push
testb
cmp
outsl
es
add
and
pop
or
cmp
lock
mov
iret
inc
fstps
mov
lea
add
sbb
mov
or
and
jns
aas
test
sub
push
sub
or
hlt
int3
cmp
sti
sahf
fmuls
mov
imul
jne
in
mov
std
outsb
mov
lods
sbb
add
rolb
sbb
dec
in
pop
sub
push
shrb
xlat
mov
xchg
fistpl
pop
adc
or
xchg
xlat
pop
outsl
or
push
int
and
pusha
jp
adc
ret
fdivl
mov
test
mov
cmp
or
std
sbb
jne
jecxz
or
stc
mov
test
jno
js
stos
inc
int
test
lea
sbb
add
sbb
jbe
testl
sbb
adc
xor
cmp
stc
imul
lret
lahf
mov
pushf
test
jp
popa
mov
loope
jo
pop
pop
shl
jmp
cs
jbe
xadd
pushf
lcall
addr16
push
fdivrp
xchg
pop
dec
arpl
cmpsb
ljmp
and
or
cld
jp
insl
das
pop
mov
gs
imul
imul
lods
sahf
aas
rclb
test
into
adc
inc
repnz
in
outsb
push
sub
les
and
add
mov
lock
inc
lea
sub
pop
in
les
test
les
cmpl
xor
into
popf
and
mov
adc
jmp
insl
pop
and
out
mov
pop
inc
pop
addr16
pusha
jne
nop
pop
mov
push
jmp
mov
aam
pop
call
lods
rolb
and
push
adc
mov
lahf
aaa
sbb
mov
mov
pop
rcll
js
in
addr16
dec
ret
mov
mov
loopne
pushf
imul
lret
aaa
jne,pt
fucomp
cs
push
lock
shlb
and
test
dec
cmp
ficompl
movsb
and
push
insl
nop
xor
sbb
daa
es
jno
cltd
jmp
dec
movsl
call
icebp
sbb
ljmp
inc
push
je
cmp
mov
xor
cmp
hlt
inc
mov
mov
aas
and
inc
and
rcrb
push
dec
push
in
mov
pop
nopl
rorb
imul
mov
inc
mov
jno
iret
cltd
or
push
mov
xlat
cltd
mov
add
and
pusha
and
adc
jb
pop
pop
dec
cmp
push
lahf
popa
cmp
dec
ss
cmpsb
aad
xor
loopne
cmp
popf
enter
ja
shlb
or
adc
push
mov
or
sbb
adc
notl
sbb
iret
je
fs
adc
popa
or
xchg
les
xor
xchg
mov
movsb
jne
les
sub
incb
dec
popf
arpl
int
shrb
add
mull
mov
shrb
insb
inc
mov
sub
insl
push
sarb
int
and
enter
das
sub
adc
mov
mov
mov
fwait
call
dec
jo
jne
test
sub
mov
cmpsl
lock
pusha
mov
dec
imul
jns
movsl
or
mov
sbb
loopne
movsl
push
and
les
inc
push
test
jnp
scas
mov
test
outsb
adc
sbb
xor
mov
mov
jne
pop
jne
repz
lret
fildll
jecxz
inc
jmp
out
aas
arpl
movsl
cmp
cmp
or
clc
dec
mov
mov
frstor
leave
pop
fimull
inc
pop
and
xor
ss
cltd
inc
pusha
pop
ds
mov
sbb
dec
adc
popf
shl
jae
lock
mov
insl
cmp
sbb
jle
imul
fwait
movl
in
scas
pusha
or
subl
sub
pusha
sbb
inc
cmc
rorl
aaa
ret
outsb
jg
ja
les
lea
ret
pop
dec
fstp
pop
cs
xchg
push
mov
or
dec
out
jbe
jae,pt
and
pop
add
sbb
jp
adc
dec
outsb
or
pop
mov
out
lret
js
popf
xchg
xchg
sub
scas
cmp
rolb
xor
movsb
push
sbb
add
push
ret
scas
aad
jno
cld
in
imul
jp
xchg
sbb
repnz
mov
out
cmp
and
mov
psllw
in
sub
and
arpl
fcomps
inc
mov
cmpsb
addl
nop
add
mov
xorl
xchg
loopne
cwtl
inc
sub
fldenv
je
stos
xor
pop
pop
jno
push
sti
in
fmulp
xchg
lea
aas
sub
das
daa
mov
cmp
js
loopne
into
lock
adc
adc
movsl
in
std
outsl
jl
inc
fwait
pop
mov
lea
dec
and
xor
sub
inc
fsubp
sub
sbb
stc
adc
aam
int3
push
fs
ss
mov
repz
mov
arpl
adc
fsubrs
jno
das
push
outsl
xchg
jb
es
js
dec
pushf
push
mov
sub
pop
ljmp
popf
mov
add
jne
sbb
mov
and
sub
sti
pop
dec
adcb
sbb
xchg
xchg
out
roll
or
pop
test
xor
loope
stc
cmp
loope
dec
jg
test
cld
jle
or
mov
fidivs
mov
or
dec
and
or
xor
xchg
xchg
loope
aas
mov
inc
push
pop
mov
popa
dec
lods
add
scas
sub
add
dec
popf
out
aam
out
bsf
sbb
mov
scas
inc
adc
sub
xchg
mov
jb
mov
dec
pop
or
mov
xor
sbb
aaa
sti
sbbl
mov
in
rolb
xchg
add
jne
fsub
mov
repz
mov
push
inc
stos
jb
mov
jno
inc
dec
fmuls
xor
sub
jnp
xor
lock
jbe
xchg
dec
pop
aas
dec
jne
daa
movsb
add
call
ret
ret
xchg
push
pop
les
push
lea
pop
jnp
dec
pop
ret
pop
sub
mov
push
scas
dec
dec
movsb
add
mov
add
sbb
lret
xor
ret
es
pop
sub
dec
inc
mov
mov
fisubrl
add
pop
inc
scas
pop
std
mov
fsubrl
and
in
js
sub
popa
cmpsb
ret
cmp
xor
add
or
data16
fistps
mov
mov
cmp
sub
rclb
arpl
or
or
pop
and
mov
add
mov
shrl
fistl
push
orl
jecxz
mov
adc
add
mov
dec
enter
enter
stos
fstl
int3
inc
repnz
stc
sub
movsb
cmc
in
inc
cmp
xor
arpl
repnz
sti
std
movsl
rclb
cld
test
and
gs
fisubrl
jo
pop
pop
cmp
add
jle
xchg
test
fildl
push
add
in
dec
jmp
fwait
and
mov
in
xchg
daa
das
push
and
dec
mov
mov
mov
pop
flds
pop
dec
aaa
pop
int3
jns
adc
mov
popa
and
xor
sahf
sbbb
out
incb
mov
fs
es
repz
sbb
mov
lea
fnsave
cmp
jns
xor
and
push
ret
or
popa
fsub
or
inc
sbb
mov
bnd
cli
push
les
mov
inc
cld
jmp
test
cmp
push
imul
adc
popa
pusha
repz
imul
jbe
inc
pop
ja
gs
mov
pop
sub
xchg
add
lahf
push
xchg
mov
je
jmp
xchg
call
inc
xor
mov
loope
jae
pop
sbbb
jbe
fstpl
push
popa
test
push
sbb
daa
pop
push
fidivl
clc
cmpsl
shrb
rorl
mov
sub
in
add
mov
jg
sub
aam
mov
ljmp
xchg
nop
inc
sti
mov
std
test
data16
icebp
add
mov
mov
and
jge
mov
xor
scas
test
add
xchg
mov
lds
outsb
dec
cld
idivl
ljmp
push
xchg
dec
lods
push
sub
mov
faddl
xchg
xchg
pop
mov
xchg
dec
lret
hlt
std
and
push
arpl
xchg
insb
inc
xor
inc
sub
inc
cmp
xor
push
scas
mov
and
maxps
rcrb
pop
dec
and
out
clc
es
test
lods
xor
mov
movl
mov
push
shlb
les
cmp
and
gs
nop
testb
cltd
mov
inc
js
adc
or
jb
test
int3
inc
add
push
or
and
ret
mov
rclb
jb
test
fnsave
pop
pop
test
sahf
mov
push
jl
pop
adc
jl
loope
out
push
and
hlt
jo
loopne
ss
jmp
or
push
jle
push
call
and
out
inc
cmp
sub
shr
xor
mov
cwtl
rolb
adc
or
xchg
mov
daa
and
hlt
out
xchg
lahf
out
out
mov
iret
dec
sbb
in
cmp
cltd
pop
lock
and
xchg
mov
in
jbe
mov
adc
mov
inc
inc
push
pop
xchg
fcompl
cmp
cmpsb
sub
xor
push
jne
lods
jmp
xor
jg
popf
out
stc
jp
sub
pop
lret
imull
dec
pop
inc
push
sbb
sub
das
mov
mov
ss
pop
inc
pop
das
pop
cltd
xor
jb
sub
sbb
sbb
rol
test
xchg
xchg
xchg
jae
adc
push
in
and
pop
add
aad
insl
cmp
push
or
or
pop
sbb
pop
out
stc
dec
lods
dec
call
mov
inc
mov
xchg
and
out
das
lea
add
es
idivb
gs
mov
mov
mov
imul
aam
xchg
push
adc
aad
sbb
data16
adc
jae
xchg
sub
add
ret
dec
mov
push
inc
mov
mov
sbb
mov
ret
adc
insb
and
mov
dec
jo
adcl
fistpl
mov
pop
aaa
bound
lret
pop
aam
cmpsb
dec
mov
ficompl
into
daa
vmovshdup
and
lock
outsb
lds
jge
repz
loop
aad
fsubrl
jo
stos
xchg
push
mov
mov
and
idiv
xor
mov
aaa
xor
or
leave
jl
decl
cmc
inc
push
ljmp
std
push
xchg
test
sub
and
jl
fwait
or
xlat
pop
test
mov
xorb
aas
in
rcrb
stc
imul
adc
test
sbb
movsb
daa
stos
sbb
lahf
mov
sbb
sahf
stos
push
dec
fisubl
out
adc
stc
mov
inc
in
stc
fsubrl
fs
jbe
add
add
arpl
in
popa
xchg
das
jl
clc
mov
adc
cli
data16
sub
push
hlt
fiaddl
push
xlat
inc
inc
ret
cld
sub
lret
jp
push
ss
movsb
jg
addr16
nop
or
daa
pop
mov
inc
data16
mov
es
mov
fisubrs
fcoml
sbb
daa
sti
cmp
clc
aaa
negl
imul
cmpsl
sub
inc
ret
orl
mov
ffreep
sub
and
in
inc
jmp
test
or
movsl
fidivrs
outsl
dec
xchg
cmc
sub
fimuls
jecxz
fnstsw
int
orl
push
inc
add
loopne
aam
fmul
adc
xchg
outsb
imul
cmpsl
dec
loope
push
packuswb
imul
shr
std
mov
jbe
jg
or
xlat
xchg
add
jnp
push
pop
cld
ljmp
and
lcall
aad
mov
jecxz
pop
or
lods
ret
or
lds
jle
aam
sub
clc
pop
cmp
je
inc
dec
cmovne
jle
mov
movsl
dec
mov
imul
stos
js
fwait
popf
repnz
fildll
outsl
subb
cmp
or
ds
xlat
push
push
push
test
or
dec
scas
dec
mov
add
je
sub
pop
es
cli
xchg
aad
inc
call
fistl
mov
jl
xchg
jo
in
xchg
mov
mov
xchg
mov
in
pop
popf
repnz
ss
fists
inc
jmp
push
in
into
into
xchg
sahf
mov
fnstsw
mov
pop
rcrl
add
mov
call
push
inc
ja
sarb
add
push
or
xor
add
cmpsl
cmp
mov
outsl
add
int3
mov
inc
sub
mov
call
mov
add
testb
in
lret
int3
popf
xchg
sti
and
mov
lret
mov
push
addr16
pop
adc
jl
sbb
or
cs
imul
test
scas
test
or
mov
lods
xor
dec
mov
pop
xchg
or
mov
mov
pop
sub
andl
mov
xchg
dec
movsl
lock
mov
mov
mov
xchg
inc
adc
cmp
sub
jne
fisubl
xchg
or
mov
mov
int3
add
or
mov
push
sub
xchg
sub
inc
mov
arpl
dec
and
push
sbb
outsb
fwait
mov
dec
add
and
pop
or
fimull
cmp
or
adc
xchg
outsb
push
inc
mov
scas
in
movsl
in
int
cmc
mov
and
in
inc
outsb
out
jg
mov
jmp
mov
clc
scas
rdpmc
mov
lret
push
dec
fdivp
fidivl
cmp
dec
push
fdivrl
ficoml
and
push
sub
mov
jnp
out
sub
lret
lods
push
mov
and
adc
or
fs
jle
push
cwtl
xor
push
loopne
dec
icebp
dec
ret
xor
mov
or
push
icebp
adc
test
orl
pop
dec
pop
adc
add
hlt
xchg
inc
leave
rclb
mov
decb
lahf
inc
les
and
jns
pop
imul
sarb
mov
mov
scas
loop,pt
dec
popf
xchg
out
sub
xor
sub
xchg
inc
mov
mov
mov
ss
enter
push
outsb
fldt
popa
clc
inc
inc
inc
or
repz
sub
enter
repz
inc
pop
leave
ret
insb
das
cmp
fisubrs
scas
xor
adc
es
add
into
fnsave
cmp
adc
sub
or
es
cmc
push
lds
orb
xchg
jl
adc
test
push
fsubrp
subb
jns
mov
and
sbb
or
adc
inc
xor
cwtl
mov
sub
mov
bound
push
out
or
push
adc
push
mov
pop
inc
mov
xor
add
loop
push
cmc
test
xor
sub
jg
inc
sarl
xchg
lds
jle
insb
push
mov
stc
int
jae
js
push
pop
hlt
dec
fwait
cwtl
adc
flds
popf
out
push
push
fucomp
ds
push
or
or
insl
insb
int3
out
pop
jle
aam
stos
dec
inc
fiaddl
mov
jle
in
and
adc
cs
sub
lahf
sbb
dec
movsl
add
and
lcall
inc
sub
inc
subb
xchg
daa
out
xchg
adc
mov
sahf
pop
sbb
jmp
sub
mov
pop
out
push
loop
ret
jecxz
xchg
pop
popa
maskmovq
push
rolb
push
jbe
jl
shr
jae
test
in
cmp
sbb
and
aad
imull
mov
add
movsb
aaa
push
xor
mov
adc
fdivs
push
insl
test
or
daa
dec
dec
push
mov
rcrb
fs
insb
jnp
nop
adc
and
lods
js
and
xchg
pop
pop
lods
inc
sti
pop
mov
sbb
mov
cmc
jecxz
or
cmp
test
adc
push
add
sub
jae
mov
ret
and
and
test
add
push
and
xchg
sub
lcall
dec
and
ficoml
popa
js
pusha
daa
add
pop
hlt
xor
dec
mov
ljmp
cmp
fiadds
outsl
or
loopne
jne
test
fimull
inc
aad
or
in
shlb
cmc
mov
stc
sbb
subl
scas
mov
idivl
pop
xchg
stos
add
leave
push
xchg
inc
fisttps
push
add
sahf
mov
xor
cld
in
mov
pop
cltd
and
sub
mov
xchg
adc
dec
enter
mov
adc
ds
in
inc
xor
push
push
mov
inc
inc
xchg
jecxz
das
stos
sbb
push
xchg
pop
ja
stos
push
adc
movsb
in
decb
push
outsl
adc
sub
jns
out
imul
ror
lret
jl
push
popa
call
push
jnp
xor
or
lcall
or
repnz
out
mov
sub
rorl
jb
loope
enter
imul
jns
sbb
pop
rol
roll
dec
sub
push
jg
push
out
loop
mov
cld
adc
mov
xchg
jle
sub
fcomp
bound
sbb
aaa
mov
and
aas
cwtl
inc
push
mov
mov
cmpsb
mov
xchg
pop
into
cwtl
shll
xchg
aaa
push
jmp
in
out
stc
inc
ja
or
into
call
stc
shlb
pop
mov
bound
mov
fldl
mov
lds
push
call
xlat
xchg
xchg
mov
imul
inc
and
enter
push
cmpsl
xchg
inc
ret
dec
inc
jl
arpl
mov
in
xor
jmp
out
imul
adc
add
cmp
jp
jp
pop
lea
imul
fs
or
or
fxch
sbb
loope
jbe
mov
mov
rorl
mov
iret
fsubl
pushf
imul
ficompl
mov
sub
adc
add
repz
sbb
push
xor
mov
icebp
fistpl
dec
xchg
cmp
div
sti
and
jne
bound
sbb
js
popa
xlat
fiaddl
and
mov
inc
add
test
sbb
jp
inc
mov
pop
adc
xchg
lahf
push
in
xor
std
lahf
sbb
hlt
popf
cmpsb
push
mov
push
jle
pop
xchg
cmp
inc
inc
pop
loopne
ds
inc
mov
or
adc
sbb
jmp
inc
mov
rcll
jp
test
stc
rcrl
push
pusha
pop
lock
out
pop
or
jae
aad
out
call
cwtl
mov
pop
into
xor
and
das
sub
mov
ret
jmp
dec
mov
mov
test
loope
adc
fsubs
movsb
mov
std
push
lods
mov
das
or
test
jl
inc
push
inc
fstl
cmp
add
fucomi
test
sub
aaa
in
push
imul
cmp
aas
les
dec
xchg
inc
mov
jo
mov
cli
mov
adc
test
fdivrp
cmp
icebp
mov
hlt
xor
fstpt
push
insb
xor
sbb
jl
dec
jns
sub
push
mov
pushf
ja
cmpsb
pop
and
pop
xlat
jbe
cmp
int3
shll
jge
fnstcw
or
test
fisttps
cmpb
adc
cmp
or
addr16
ja
sub
insb
es
jge
std
inc
xchg
mov
xor
loope
repnz
pop
js
hlt
xorb
fdivl
movsl
ja
ljmp
bound
in
xor
mov
call
inc
dec
scas
hlt
sub
push
andb
pop
jb
jg
in
sub
out
daa
stos
iret
push
add
mov
cmp
add
inc
int
cmp
test
mov
xor
inc
push
lea
inc
div
imul
push
enter
outsl
push
mov
xor
fcmovnu
notl
fbstp
sbb
mov
lods
cmp
pop
dec
or
ret
repnz
and
jmp
sarl
movsb
jnp
repnz
push
or
stc
mov
jmp
test
shll
xchg
cmpsb
sbb
dec
cmp
xor
cmpsb
xchg
int
ljmp
fwait
sub
shll
in
test
js
rclb
mov
data16
loopne
out
scas
xchg
sti
xchg
inc
xchg
sbb
inc
mov
mov
mov
out
lods
loopne
push
cmp
xchg
and
xor
adc
sbb
inc
dec
or
popf
clc
mov
pop
lea
sub
ja
jbe
fsts
adc
and
push
add
jnp
inc
subl
std
push
pop
jno
nop
add
jo
mov
fstps
cmp
jmp
jge
mov
out
jb
jp
out
icebp
xor
lods
aas
cmp
mov
cld
loop
xor
adc
mov
jecxz
inc
add
test
pop
fwait
insb
je
mov
fdivp
adc
mov
add
mov
push
lcall
lcall
push
loopne
cmc
add
in
ja
stc
or
dec
xchg
jno
push
mov
push
jge
clc
pushf
je
jns
or
mov
fstpt
jns
sub
popa
jg
imul
dec
jp
cmc
cmp
adcb
out
cmc
lock
sbb
sti
pushf
loop
jno
ror
outsl
stos
jne
scas
call
outsb
pop
or
push
and
stc
dec
jno
xor
lock
fcomps
adc
test
and
jmp
or
sbb
jmp
loopne
cmp
imul
sbb
rcl
enter
xchg
and
rorb
sbb
dec
fwait
mov
repnz
adcl
dec
jbe
fst
pushf
push
cmp
mov
or
cltd
test
jo
leave
dec
es
sbb
adc
test
icebp
cmp
es
cs
xchg
into
aas
ret
sub
add
jns
push
jne
das
sbb
xchg
lret
repnz
cli
sahf
xchg
jb
fsubrp
lods
push
outsl
mov
jns
pop
adc
inc
add
popf
data16
popf
dec
adc
test
mov
cmp
clc
sub
pop
out
jae
js
xor
mov
sub
mov
xchg
leave
inc
adc
xacquire
push
stos
mov
loopne
and
ljmp
jmp
ffreep
and
add
push
mov
mov
sub
and
xor
in
pusha
cs
cmpl
sbb
inc
int3
fdivs
cmp
imul
mov
ds
xchg
pop
movsl
push
iret
inc
and
xor
push
stos
movsl
push
xchg
push
jae
repnz
mov
dec
push
in
adc
hlt
ljmp
inc
insl
pusha
fidivrl
jge
sbb
mov
inc
dec
ds
cld
inc
push
out
adc
stos
jmp
cmc
push
xchg
inc
cmp
mov
xor
mov
dec
call
cmp
jmp
cmpsb
sbb
mov
rclb
fisubl
inc
pop
sub
mov
adc
dec
xlat
fs
mov
ds
jp
scas
cmp
add
push
add
and
add
in
std
icebp
jmp
mov
adc
icebp
rsm
cmpsl
into
stos
inc
in
ja
push
sub
inc
aam
cmp
mov
xchg
mov
pop
fstpt
mov
leave
test
in
pop
mov
incl
sbb
xchg
int3
cmp
sbb
stc
push
jns
push
mov
movsl
mov
addb
inc
mov
mov
mov
pusha
stc
ja
in
jns
hlt
pop
inc
jns
add
xor
xchg
jno
cli
or
pusha
pusha
and
add
xlat
push
fbld
xchg
mov
jbe
cmp
jae
pop
fwait
dec
out
roll
push
aad
pop
sarl
mov
inc
lcall
or
icebp
inc
sub
stos
out
leave
repz
divb
movsb
mov
loopne
xchg
xor
stos
scas
dec
and
je
and
mov
pop
xlat
fdivr
dec
push
and
leave
or
and
cmp
sbb
mov
hlt
inc
fcmove
pop
icebp
std
adc
inc
adc
imul
pop
cmp
jnp
hlt
lds
scas
neg
or
mov
testb
pop
leave
dec
orb
adcl
cmp
into
adc
jns
fnstcw
pop
loope
das
sub
je
rol
rclb
jo
shll
sub
cmp
inc
pop
ja
dec
daa
jle
cli
xor
pop
mov
loope
lret
adc
add
das
mov
mov
add
dec
sbb
fisubrs
adc
sbb
push
ret
push
leave
lods
ss
push
test
flds
scas
adc
mov
ljmp
dec
and
fmuls
outsb
dec
inc
adc
jl
bound
testl
cmp
add
ficomps
dec
out
or
and
gs
mov
cli
nop
sbb
jnp,pn
shll
dec
insb
mov
push
int
cmc
sub
notl
jo
andl
and
nop
movsl
mov
nop
insb
scas
in
xor
dec
test
rcll
lods
mov
cmpsb
out
push
imul
arpl
data16
popa
cmp
inc
stc
and
xor
xchg
lret
nop
imul
stos
lcall
sub
sbb
xchg
lret
mov
cmp
pusha
ds
and
int
arpl
jmp
cmp
jmp
out
lods
loopne
xor
es
push
inc
shll
ret
mov
call
into
mov
cmpsb
mov
popl
lcall
out
rolb
mov
out
or
mov
movb
and
imul
push
fistpl
in
int3
fimull
lods
mov
shl
jnp
pop
sub
cwtl
push
sbb
or
daa
adc
repnz
jle
divb
mov
mov
push
jb
sbb
js
bound
arpl
and
mov
dec
outsl
scas
push
sub
ret
inc
inc
adc
pop
dec
xor
clc
sahf
fdiv
cltd
mov
insb
pop
push
dec
shrl
call
insb
jns
xchg
stos
mov
cmp
add
push
in
in
sahf
adc
dec
addb
and
fidivrl
icebp
mov
xchg
jno
outsl
in
and
int3
mov
mov
sarb
shrb
pop
rcl
push
sub
sarl
cmp
je
jp
jo
or
loop
jg
pushf
rcrl
mov
jne
mov
in
cli
adc
addr16
sub
inc
subb
pop
pop
cmp
pop
cmp
sbb
inc
incb
scas
add
add
sub
sbb
adc
aam
stc
jb
hlt
gs
insl
movl
xchg
mov
arpl
ret
cmp
arpl
pop
lret
or
rcrl
dec
inc
or
sub
jno
nop
movsl
scas
mov
subl
pushl
adc
cli
in
and
and
fst
sti
sub
mov
add
xor
int
inc
lcall
xor
add
mov
add
ljmp
cli
sbb
stos
and
cli
dec
xchg
adc
int3
shrl
std
and
cmp
rcrb
pop
jns
lods
rclb
leave
fnstenv
das
sub
xor
out
push
sti
jbe
cmp
jae
scas
sarb
pop
into
push
or
push
addr16
mov
push
push
pop
insl
scas
ret
sbb
or
dec
and
stos
cmp
out
xlat
leave
ss
pop
data16
daa
cmp
dec
jmp
sbb
aad
imul
jmp
popa
ss
xchg
into
outsw
repnz
pop
std
cmc
or
insb
rclb
jmp
lret
aas
ljmp
popf
incl
jo
push
mov
das
cmp
cmp
jecxz
mov
xor
std
mov
sub
pop
dec
mov
mov
outsb
fwait
sub
xor
mov
sub
add
aad
pop
xor
movsb
lret
aad
std
mov
arpl
jb
mov
mov
lods
push
lahf
mov
mov
shr
xchg
rorl
divl
int
stos
iret
addr16
inc
loop
mov
imul
insl
fcomi
xchg
es
jno
rcrb
repz
jmp
std
jp
arpl
je
lret
lret
jnp
int3
mov
ss
outsb
lods
movsl
pop
xchg
inc
mov
xor
push
xchg
andl
mul
imul
jne
cltd
rcrl
mov
inc
mov
pop
popa
loop
outsb
lods
xchg
xchg
inc
sbb
mov
sbbb
hlt
ds
dec
mov
sub
push
inc
mov
jp
sbb
cli
and
scas
xor
rcll
mov
subb
cwtl
add
mov
jo
out
idiv
rol
mov
mov
das
mov
rcll
sahf
aam
ljmp
pop
fbld
adc
outsb
iret
adc
sahf
bswap
lods
jecxz
jns
push
and
lea
in
icebp
in
mov
lock
mov
jmp
rep
mov
pop
pop
mov
add
mov
mov
adc
xchg
jbe
push
push
dec
xor
cltd
ljmp
int3
mov
pop
or
xchg
test
xchg
inc
push
and
pop
mov
dec
mov
add
sub
in
leave
cmp
ljmp
xor
adc
fwait
in
addr16
cmpsl
out
push
movsb
xchg
fidivrl
cli
cmpsl
dec
addr16
insb
mov
repz
push
sahf
fmull
pop
push
mov
aam
adc
fisubl
jmp
std
add
push
xchg
int
sub
fisubrl
outsl
inc
cmp
mov
push
pop
mov
sbb
mov
push
test
inc
int
loop
ss
lock
push
inc
std
pop
pop
cs
shl
and
ret
push
and
mov
decb
and
pop
mov
jg
push
adc
jge
lret
mov
cli
repnz
repnz
outsl
enter
and
pop
inc
or
leave
cmpsl
xchg
shl
sahf
dec
jecxz
adc
popa
dec
push
xor
and
or
xbegin
enter
sarl
ret
or
xor
add
jne
lret
ds
sbb
dec
push
push
into
cmpsb
lock
stos
mov
in
inc
add
in
xor
jno
in
cmc
sub
in
mov
fdivl
sahf
nop
xchg
fdivl
mov
adc
push
mov
sbb
negb
fmulp
mov
inc
movsl
jnp
sbb
test
or
push
popa
int
mov
push
jg
adc
cmp
leave
fildl
dec
int3
in
int
fwait
inc
push
and
rclb
loopne
or
pop
cwtl
xrelease
dec
bnd
sti
cmp
icebp
cld
enter
data16
mull
jnp
cmc
push
pop
ja
cmp
addl
jb
dec
cmp
addr16
les
sub
jmp
xor
and
loope
inc
sub
mov
rcrl
mov
idivb
xchg
lret
sub
repz
pusha
push
ret
lret
jmp
stos
leave
imul
xor
inc
and
out
out
test
in
mov
mov
mov
push
aad
enter
jnp
add
sbb
mov
cmp
sahf
ficomps
adc
jno
fwait
dec
inc
shlb
add
inc
test
adc
pop
push
mov
cmp
mov
fstps
bound
pop
jle
lods
jns
adc
inc
fisubrs
out
stos
rolb
pusha
add
pop
outsb
fisttpll
pushf
mov
cmpsl
push
stos
mov
dec
and
mov
movb
jbe
jl,pn
jmp
jae
inc
jl
pop
shl
pop
inc
fwait
push
scas
lahf
mov
jmp
inc
adc
lock
cli
mov
fsubs
push
sub
xchg
int
outsb
insb
cmp
xor
flds
jecxz
push
inc
fsubrp
add
or
or
dec
rcrb
mov
inc
push
mov
jne
jecxz
inc
mov
das
ds
add
adc
rcr
lret
inc
sub
push
xchg
out
or
mov
es
or
add
sub
jne
xlat
jo
jnp
ss
mov
pushf
push
insl
mov
lock
xor
rcrb
dec
mov
loopne
adc
sub
fildll
andb
fidivrs
js
mov
fstpt
dec
out
sbb
std
test
or
dec
andb
js
imul
xor
jge
xor
or
xchg
pop
in
mov
jae
adc
or
pop
dec
int
fisttpll
idivb
jns
data16
xchg
mov
fldt
popa
mov
pop
sbb
test
jecxz
pop
push
mov
mov
lods
cli
stc
lds
push
xor
pop
leave
hlt
sub
mov
int3
xchg
and
jns
repnz
test
cmp
subl
adc
dec
xchg
jo
std
push
inc
cli
sti
dec
repnz
mov
addl
mov
mov
mov
mov
mov
cmp
icebp
mov
testl
jnp
add
dec
mov
or
je
arpl
cmp
sahf
mov
cmp
mov
ja
and
inc
stos
hlt
daa
and
xchg
fdivrl
sbb
push
push
adc
cmp
mov
or
inc
or
mov
in
jl
add
mov
jb
sbb
xchg
inc
scas
or
xchg
pop
mov
sahf
orl
call
movsb
popa
push
ret
js
test
into
mov
or
dec
or
fiadds
xchg
xor
sbb
push
push
rol
cmp
mov
mov
adc
adc
negb
ficoms
xor
insl
push
xchg
rolb
xor
das
add
xchg
shrl
and
enter
fistl
cs
mov
daa
mov
aaa
fxch
push
lods
mov
or
push
stc
pop
aas
popw
adc
inc
and
scas
sub
mov
jns
ljmp
dec
ds
out
push
xchg
lret
in
jle
js
stc
pop
push
idivb
push
or
mov
cs
xchg
mov
dec
negb
mov
mov
mov
push
inc
in
leave
or
pcmpgtb
mov
mov
jg
dec
mov
outsb
in
repz
xlat
aam
jno
shr
jb
mov
and
cmp
cwtl
loope
ljmp
or
roll
movsb
sbb
movl
sub
pop
cmp
jns
xor
cmp
xchg
mov
mov
xchg
pop
repz
insl
add
xchg
pop
and
push
mov
pushf
bound
sbb
push
push
pop
or
int3
push
add
push
xlat
rcrb
xchg
addr16
rcrl
daa
dec
std
movsl
inc
ret
adcb
lea
lds
mov
arpl
enter
cmpsb
jnp
push
jb
mov
xchg
int3
mov
popa
or
and
lcallw
and
sahf
pop
push
sub
stos
test
out
bound
fildll
pop
push
daa
xor
adc
jecxz
pop
rclb
fwait
push
stos
mov
aam
dec
cs
lea
push
in
jge
push
cmp
and
ret
xchg
in
and
in
mov
sbbb
inc
in
pusha
cld
add
jp
mov
pop
adc
xchg
rorl
test
cmp
xchg
or
lcall
xor
jae
shrl
jge
aas
insl
lret
dec
push
out
scas
fisubs
outsb
clc
pop
mov
cltd
mov
scas
aas
mov
jmp
xor
mov
sub
sub
ljmp
mov
aaa
subl
dec
sbb
and
outsb
int3
imul
testl
les
repnz
mov
int3
or
into
pop
cs
and
or
fists
mov
movsb
iret
sahf
jecxz
sarl
pop
push
and
mov
mov
lret
xor
mov
fldl
inc
jmp
aad
ret
lods
js
das
inc
sub
fsubrl
jnp
mov
sbb
sahf
sub
arpl
mov
adc
xorb
fstpl
repz
pop
mov
icebp
inc
insb
push
lahf
jmp
push
xor
or
cld
sub
mov
in
adc
imull
loop
mov
lds
addr16
aaa
jno
sbb
push
pop
and
lods
pop
and
popa
jb
or
adc
cmpl
mov
mov
push
xor
push
cmp
stos
loop
dec
cld
xchg
add
scas
push
nop
fisubl
ret
stos
lods
or
out
es
movsl
push
inc
subl
lods
xchg
add
mov
pop
mov
daa
in
jp
stos
mov
xor
rcr
hlt
inc
sti
inc
sbb
or
xchg
inc
imul
xor
push
cmp
shrb
jb
clc
cmp
mov
cmp
adc
test
xchg
movsb
fbstp
mov
pusha
push
jp
sub
rcrb
loopne
jno
jge
adc
arpl
xchg
sbb
xchg
dec
daa
mov
sbb
inc
leave
cmp
jecxz
xor
push
scas
and
leave
int3
cmp
cltd
cmp
mov
andb
ljmp
dec
dec
xor
mov
daa
in
jle
dec
xchg
xor
sahf
adc
sub
xchg
add
rol
or
jne
mov
mov
pushf
stc
bound
scas
ljmp
arpl
lahf
out
xor
cmp
pop
lock
loopne
pop
cltd
pop
aad
fdivrl
or
mov
dec
out
or
pop
imul
dec
xchg
ss
inc
mov
cmp
pop
xchg
sub
rcrl
mov
maskmovq
idivl
jle
push
lret
arpl
inc
push
push
inc
mov
and
sub
or
push
ret
pop
and
call
idivl
sub
ror
mov
cmp
out
xlat
adc
cmp
push
sub
mov
sbbb
mov
popa
cmpl
inc
dec
out
jno
imul
sti
subl
into
adc
add
push
xchg
ja
jne
jecxz
add
and
into
das
fildl
je
std
xor
in
mov
xor
pavgb
cmc
add
cmp
lea
pop
int3
jecxz
test
int3
cltd
sub
fstps
sbb
or
jno
mov
mov
adc
sbb
push
mov
lods
fisttps
or
shrb
sbb
andl
lret
mov
pop
mov
test
fidivs
movsl
sahf
add
mov
pop
js
add
clc
shll
and
cmp
fcomp
insl
cmp
daa
cld
ret
xchg
gs
fistpll
int
adc
icebp
test
lea
fnstsw
xchg
test
mov
stos
outsb
cmp
popf
lret
sbb
mov
push
ret
mov
cmp
dec
inc
popf
add
dec
subl
pop
xchg
shr
dec
jnp
add
lods
and
xlat
std
mov
mov
push
lret
js
loopne
insl
pushf
testl
dec
inc
out
decb
std
hlt
pop
inc
mov
fimull
jl
das
stos
je
popa
mov
xchg
mov
cli
pop
jl
cltd
adc
lcall
fmull
mov
testb
lret
fsubr
cs
xlat
push
cld
mov
js
fcoms
fiadds
jnp
sub
mov
out
in
fimull
hlt
pop
int
jmp
jbe
pop
cmp
test
push
das
insb
mov
jne
lahf
fstp
and
shl
and
xchg
mov
jb
push
out
push
lea
ss
into
mov
int
pop
push
cmp
into
cmp
xchg
mov
jno
in
pop
cwtl
mov
loope
dec
inc
stos
leave
push
inc
movsb
push
daa
adc
add
adc
je
sub
ret
fistpl
ret
rcrb
pop
ds
mov
repnz
mov
fwait
mov
insb
roll
xchg
repnz
lahf
add
loope
es
push
sub
xchg
ds
mov
adc
mov
mov
mov
mov
mov
addr16
inc
shr
xchg
mov
jl
lock
lret
add
dec
int
push
sub
cli
lods
ljmp
insl
fwait
test
push
repz
les
xor
pop
into
ja
inc
dec
mov
icebp
add
cmpsl
insl
xor
sbb
popa
jne
inc
pushf
ret
mov
jae
adc
push
dec
outsb
xor
js
lds
cmp
loopne
mov
aam
sbb
imul
test
ret
adc
jo
push
xor
dec
adc
add
cmp
lock
cld
mov
sub
fmul
sbb
ljmp
cmc
hlt
mov
mov
adc
pop
pop
call
ficompl
adc
add
jo
pop
pop
ljmp
cmp
cmpsb
mov
mov
pop
hlt
daa
push
cltd
pop
push
sarl
cmp
test
push
or
repnz
imul
dec
ret
cmp
pushf
push
xorl
out
or
add
imul
out
pop
jno
mov
xchg
add
push
sub
orl
in
loop
xchg
push
add
mov
notl
int
fisubrs
sbb
fwait
in
sub
add
ja
push
scas
push
lret
xchg
pop
out
cmp
ss
sub
cld
xchg
stc
decl
pop
cltd
gs
mov
cmp
inc
stos
cli
mov
push
pop
lret
cld
inc
dec
xor
bound
mov
inc
mov
mov
fdivs
sub
rclw
mov
insl
out
fwait
jbe
fld
add
sub
sbb
fiadds
daa
mov
das
and
xor
jb
fistps
sub
out
ja
arpl
sbb
jmp
mov
loope
addl
das
inc
dec
jp
and
addb
xacquire
pop
jo
movl
lock
dec
mov
mov
scas
repnz
fs
mov
insl
test
fimuls
xor
mov
call
sbb
jnp
rorl
mov
add
popf
mov
add
and
pop
or
adc
popa
scas
push
and
xchg
jle
jns
insb
push
repz
adc
enter
mov
and
or
inc
and
inc
movl
pop
and
ret
shrb
addr16
incl
addl
lea
jbe
jnp
pop
mov
dec
adc
fstpl
cmp
jb
sbb
in
add
sti
jmp
loope
and
insl
call
daa
sub
cmp
push
cld
mov
push
mov
push
or
in
sub
imul
sahf
xor
sub
cli
mov
and
xchg
push
scas
xor
mov
pop
sbb
mov
in
out
lock
xor
insl
push
hlt
outsl
dec
dec
mov
xor
ljmp
paddsb
popf
mov
mull
in
adc
xor
push
leave
dec
dec
inc
popa
add
ficompl
xlat
or
popf
fadds
dec
sub
or
lret
cmp
lret
jmp
or
mov
jecxz
sub
stc
js
out
mov
jecxz
xchg
jle
aaa
add
xchg
adc
pop
xchg
or
fistpll
test
repnz
inc
cmpsb
loopne
dec
jne
pop
popa
jmp
pop
xor
inc
not
imul
mov
lock
sub
inc
pop
lock
lret
jp
or
in
rcl
in
mov
andl
out
outsb
rclb
push
jb
jbe
mov
jo
dec
mov
sbb
imul
ljmp
daa
adc
sti
aas
sub
stos
sub
inc
insb
lea
das
xor
pop
cmp
call
aam
mov
cmp
mov
inc
in
dec
call
and
and
push
cmc
call
adc
sbb
add
mov
jmp
sbb
das
push
add
insl
dec
sub
push
dec
xor
cli
shll
and
jbe
movsb
mov
stos
or
movsl
dec
js
dec
mov
fwait
cli
and
adc
dec
jl
test
in
clc
inc
jle
pop
scas
cmp
and
aaa
fidivl
cmp
inc
out
stos
aad
popa
xchg
cmc
mov
mov
sahf
and
jno
cmp
xchg
ds
iret
sbb
mov
pop
adc
test
fwait
push
xchg
in
mov
into
sbb
out
les
sahf
incl
ret
add
in
sub
pushf
mov
std
xchg
mov
sbb
add
lcall
or
fstl
outsb
push
loope
cmp
outsb
sub
push
jbe
mov
jns
test
cmp
cmp
push
leave
pop
out
ret
outsl
ss
jo
popf
xor
pop
jmp
sbb
ret
and
mov
xchg
addr16
inc
lahf
cmpsl
jg
sti
inc
push
dec
inc
or
mov
loop
clc
or
cmpsb
and
fisttps
pop
push
xchg
sub
movsb
clc
js
hlt
js
lods
rclb
jecxz
sbb
sub
sbb
das
adc
ret
cltd
imul
dec
inc
and
adc
mov
xchg
sbb
pop
arpl
jl
jp
sub
fdivl
or
mov
or
mov
inc
mov
xor
lods
push
call
adc
lahf
cmp
mov
mov
mov
movsb
mov
mov
popf
je
jns
jg
mov
push
xchg
pushf
ret
cmp
cmp
stos
sub
pop
add
jp
inc
add
or
inc
pop
ja
push
sbb
jp
xor
add
test
test
or
push
lds
lods
or
out
in
cltd
loope
xchg
xor
test
lods
scas
mov
cld
jne
leave
inc
stos
outsl
les
movsl
mov
repz
loop
add
testl
xchg
sbb
iret
outsb
aad
push
js
dec
jg
pop
dec
mov
mov
sbb
jne
pop
adc
mov
jnp
lods
jge
popf
dec
xlat
ja
add
mov
adc
inc
ds
test
jg
mov
push
mov
sub
pop
mov
sub
or
jbe
pop
cmp
mov
aaa
pop
pushl
pop
aam
lret
fadds
stc
add
scas
push
mov
lahf
movsl
xlat
ss
cmp
push
push
dec
add
rcll
xchg
sbb
dec
mov
jb
sahf
cmp
int3
scas
gs
pop
add
orl
mov
sarb
add
cli
adc
pop
add
idivb
mov
testl
mov
leave
mov
dec
adc
inc
and
mov
test
or
mov
and
or
sub
push
clc
pop
or
adc
pop
inc
push
outsb
xor
fisttps
dec
je
inc
js
mov
test
cmpsl
lods
jl
imul
shl
lods
or
fdivrp
pop
cmpsb
gs
sub
mov
xor
sub
rorb
lret
jmp
fcoms
popf
jbe
cmc
cltd
test
dec
jl
leave
loopne
arpl
daa
out
fsincos
sbb
xlat
pop
cmp
pop
jl
fcomps
ja
les
push
out
and
leave
cs
out
sub
frstor
dec
enter
dec
push
sub
bound
cmc
imul
add
imul
cmp
dec
push
jnp
adc
adc
test
mov
add
xchg
add
pop
test
push
add
in
and
je
add
and
dec
frstor
add
imul
cmc
repnz
aam
mov
fs
in
movsb
adc
sbb
cmp
cltd
je
movsb
adc
sarb
sub
je
inc
fcoml
xchg
or
dec
hlt
scas
sbb
lcall
iret
jmp
lea
jae
push
dec
test
out
xchg
repz
subl
dec
ret
push
rorb
xchg
iret
push
and
mov
pop
cli
mov
or
xor
mov
mov
sti
push
inc
mov
stos
dec
mov
out
es
sub
mov
sbb
aas
cmp
sub
inc
xor
pop
inc
out
xor
testb
popa
cltd
dec
pop
jmp
xor
or
and
xchg
sahf
xor
aad
push
adc
pushf
xchg
mov
dec
imul
ss
inc
xchg
rcll
jle
lods
mov
inc
adc
cmp
lods
xchg
sahf
cltd
in
iret
ret
jb
or
add
add
add
jmp
int3
ds
adc
shll
pop
out
mov
xorb
cmp
cs
mov
push
lods
and
sub
or
lret
mov
push
adc
pop
mov
loope
sbb
xchg
inc
push
ret
mov
shlb
xor
pop
xor
sbb
stos
icebp
jmp
movsb
scas
mov
inc
jnp
stos
mov
push
add
jb
sub
xor
sbb
aad
imul
ljmp
dec
lahf
hlt
aaa
add
loop
shr
ja
out
je
jmp
push
sub
loop
push
es
pop
dec
xor
ficoml
test
shr
mulb
mov
sub
lock
sub
pop
and
sbb
mov
inc
cmp
ror
dec
out
lods
jmp
adc
fwait
jnp
jmp
ja
xlat
jo
sub
xlat
jnp
rorl
stc
jp
cmpl
mov
mov
test
dec
paddb
arpl
loop
dec
push
int3
movsl
adc
mull
out
lcall
mov
mov
push
mov
pop
das
xchg
mov
lea
inc
inc
test
rcll
xchg
rcrb
push
movsl
fs
out
or
lcall
mov
pop
cmp
call
mov
add
dec
mov
test
sub
sbb
jg
rorb
jno
out
xchg
repz
sbb
ljmp
call
mov
loop
push
mov
mov
mov
mov
sub
ds
push
xchg
push
imul
rcr
int3
rolb
jb
out
rolb
sti
fmull
dec
leave
negb
push
subb
mov
xchg
test
addr16
pop
cld
xchg
xor
jno
out
mov
sbb
in
ss
cmp
scas
jae
add
add
outsb
pop
push
mov
sbb
rcll
je
sarb
mov
mov
popa
mov
pop
pusha
sub
mov
dec
sbb
xor
xor
sub
aas
sbb
das
jp
mov
sbb
pop
mov
in
cmp
xchg
jle
in
push
adc
sahf
inc
mov
adc
pushf
stc
sbb
cld
xor
cmc
cmp
insl
scas
and
out
lahf
mov
sbb
cwtl
mov
das
jmp
js
mov
jns
in
cmpsb
fnsave
xchg
cmp
jns
stos
add
test
repz
pop
xor
xor
outsl
stc
jo
mov
xchg
cmp
int
fisttps
scas
addr16
xorb
push
sbb
pop
sbb
xchg
stos
push
stos
push
lret
push
stos
mov
mov
sbb
mov
js
lods
xor
les
xchg
fcmovbe
pop
adc
imul
cld
xorb
and
xchg
cli
adc
add
lock
iret
cmp
test
push
or
mov
dec
data16
sub
js
fwait
xor
cld
paddd
mov
or
daa
scas
jbe
mov
in
mov
aaa
sbb
outsb
or
sub
cmc
xchg
pop
fistl
dec
vmovlpd
inc
cmc
nop
int
fninit
arpl
push
pop
shlb
xor
aad
lcall
movl
test
jmp
ret
or
outsb
sbb
jp
lahf
jp
stc
xlat
sub
in
adcb
insl
cld
xor
sbb
ret
sbb
xchg
lock
out
sbb
inc
jmp
bound
lock
add
mov
dec
arpl
bound
xor
mov
dec
lds
pop
xor
mov
cmpsb
jge
stos
repnz
cmpsb
jmp
or
ja
cmpsl
jg
je
sarl
push
ja
sbb
nop
and
cmc
js
aaa
inc
scas
stos
and
pop
out
into
dec
popf
xchg
orl
ja
mov
movsl
pusha
jns
rcll
out
sbb
rcrb
mov
push
hlt
inc
xchg
in
xor
cmpsb
flds
cmpsb
arpl
pop
or
mov
or
inc
cs
add
dec
lods
dec
aas
cmp
mov
cmpsb
testl
fwait
sub
or
push
ss
jne
mov
sub
cmp
push
out
cmp
or
lods
sbb
lret
pushf
dec
push
jae
inc
mov
repnz
jno
xchg
call
xchg
push
mov
and
cmp
sbb
push
cmp
test
xchg
dec
mov
jae
iret
loopne
inc
addr16
ret
fwait
shll
ss
xchg
bound
jns
popa
cmpxchg
push
addr16
inc
adc
jmp
jnp
popa
leave
fst
repnz
dec
shr
and
inc
iret
jno
jecxz
or
cltd
push
pusha
into
jmp
rolb
test
into
jmp
inc
mov
jb
outsb
xor
loope
dec
xlat
out
ret
lock
mov
mov
clc
mov
jg
stc
xor
call
inc
jecxz
or
mov
mov
fnstcw
scas
jg
cs
ret
sub
sbb
in
pop
cmp
push
and
jl
data16
adc
pusha
into
mov
adc
setno
xchg
or
test
pop
popf
fldl
or
jno
and
xchg
test
push
xchg
nop
orl
rcr
xor
mov
xor
movsl
not
or
outsl
or
add
and
lea
sbb
xchg
xchg
xchg
xchg
jae
xchg
subb
not
mov
movsl
jecxz
inc
or
sarl
call
jae
je
push
push
fisubs
aam
dec
cmpsb
loopne
int
jnp
xor
sbbl
xchg
dec
add
or
push
mov
dec
cld
xlat
in
sub
pop
rclb
mov
add
push
push
adc
mov
cmpsb
aam
mov
fsts
mov
fiadds
pop
dec
jo
xlat
adc
push
rol
mov
scas
fnsave
or
push
movsl
enter
sahf
jle
out
ds
mov
xchg
xor
iret
push
outsb
and
inc
add
jne
sub
adc
jae
xor
mov
sub
jge
mov
scas
sar
sub
call
push
xor
sbb
pop
call
ret
loop
add
pop
add
mov
cmp
dec
loopne
jecxz
ret
arpl
pushf
sti
mov
repz
cmc
jns
fcompl
clc
cmp
xor
cltd
dec
cwtl
mov
popa
xlat
test
fcomps
mov
pushf
fldt
bound
lret
cmp
insl
cli
movsb
insl
dec
or
in
cltd
mov
les
xchg
adc
sub
fwait
push
in
je
jl
cwtl
xor
xchg
xchg
fcomi
fwait
int3
xchg
clc
clc
pop
and
sub
mov
fs
add
inc
test
sbb
adc
mov
int3
data16
mov
rcrl
in
lods
xor
cmp
pop
bound
add
xchg
sahf
outsl
pop
adc
inc
jmp
and
ja
jl
icebp
lds
pop
lods
pop
aaa
jb
adcb
push
fdecstp
ficomps
nop
lcall
mov
cmp
in
xchg
jnp
call
sahf
enter
fdivp
jo
incl
jl
addr16
mov
test
jbe
adc
xchg
mov
nop
hlt
std
cmpsb
fsubp
in
jns
or
pop
pushf
loopne
fidivrs
arpl
cs
mov
pushf
lcall
lea
pop
daa
pop
pop
xor
xchg
cli
mov
sti
push
int3
outsl
fisttps
test
les
dec
fwait
pop
sbb
and
cld
data16
dec
fstpl
test
sbb
rorb
pusha
jae
mov
les
inc
leave
nop
mov
mov
cmp
cmp
mov
jg
sbb
test
shrl
adc
mov
lods
outsl
rcrb
mov
lods
aam
sbb
mov
shl
shl
mov
loope
iret
dec
aaa
dec
sbb
mov
push
pop
mov
cmc
inc
dec
int
and
mov
sbb
es
lret
cwtl
adc
or
cmpsl
aam
jle
push
popa
mov
add
fnsave
cmp
cmp
dec
clc
jge
cmp
aas
jmp
adc
jne
mov
imulb
adc
fidivrl
push
mov
ror
adc
or
pop
jmp
inc
pop
sbb
mov
fs
popa
xor
jg
push
aad
sbb
xchg
cmp
jae
cli
sub
sub
and
inc
adc
in
insb
adc
push
mov
inc
sbb
and
pushf
sub
xchg
mov
mov
ljmp
pushf
call
cmp
push
decl
inc
mov
pop
mov
mov
std
in
xor
sub
pop
in
jae
dec
movsl
push
xchg
mov
lods
cmp
outsl
roll
movsl
test
cld
fnstenv
mov
hlt
cs
pop
cmc
or
mov
xor
xor
fsubl
jmp
std
setl
push
jmp
mov
add
mov
jmp
xchg
jbe
adc
jne
movsl
pop
hlt
lds
mov
push
xor
inc
repz
cmp
jp
lret
out
xchg
push
or
shll
sub
cmp
mov
jecxz
jo
push
cltd
add
pop
pop
dec
dec
movsb
adc
ret
inc
jmp
cmpsl
pop
cld
sbb
lcall
or
dec
inc
div
push
into
out
out
sbb
cmc
mov
cmp
addl
shrb
inc
testb
xor
lcall
adc
fs
mov
mull
cld
das
in
imul
fwait
or
lea
ficompl
sub
pinsrw
or
lea
sub
push
popl
mov
gs
ds
ucomiss
mov
xchg
fstl
pop
je
mov
jbe
in
daa
cmc
jmp
jle
sbb
insb
push
mov
cltd
and
in
frstor
jmp
jno
pop
mov
loope
sub
mov
pop
ss
jns
mov
dec
pop
out
lods
pop
movsb
inc
fstp
cld
jg
pushf
cmp
clc
fmul
hlt
push
jne
cld
mov
push
leave
cwtl
ja
mov
call
mov
xchg
inc
mov
in
pop
std
fmuls
pop
sti
out
aad
std
push
dec
fisttpll
pop
inc
adc
and
daa
jb
pop
aas
out
mov
sub
sbb
fwait
lret
or
movsb
enter
aad
in
and
xor
xchg
fdivs
cmpsl
xor
adc
dec
lods
push
clc
imul
add
dec
sub
xchg
mov
bnd
loopne
lea
cmp
mov
or
movsb
data16
push
pop
outsl
stos
jns
jno
adcl
imul
mov
adc
dec
inc
adc
fldl
test
mov
mov
push
lret
jecxz
fadd
movsb
inc
iret
mov
popa
popl
sub
cmpsl
sub
pop
icebp
data16
fisttpl
lret
pop
mov
ror
addr16
outsb
push
lods
xchg
sub
push
inc
scas
jecxz
cmp
ret
dec
xchg
mov
xchg
push
fisubs
or
jle
inc
jge
test
popa
sub
int3
jno
gs
test
xor
or
lahf
push
sbb
test
and
or
xor
test
mov
insb
int
sbb
add
loope
loopne,pt
lret
xor
push
scas
adc
mov
sub
lret
sbb
xchg
mov
dec
jecxz
sub
outsb
xor
ret
fsubl
mov
add
mov
xor
hlt
pop
popa
ds
mov
rcl
js
mov
jmp
xchg
push
and
pop
lret
in
and
dec
out
sbb
mov
dec
loopne
or
ss
pop
enter
test
subl
hlt
adc
test
mov
and
mov
fs
rdtsc
add
lcall
shl
mov
out
mov
or
adc
fs
jns
daa
lcall
pop
scas
xchg
test
aaa
xor
push
jnp
cs
nop
test
outsl
adcb
fldenv
jb
cld
iret
in
mov
and
rcl
dec
cmpl
cmpsb
aas
and
sub
pcmpgtw
in
mov
adc
cltd
sub
mov
or
pop
icebp
in
cs
adc
xchg
or
sub
cmpsb
lret
xchg
sti
cld
xor
sarb
xor
lods
mov
push
push
lea
clc
je
sub
pop
and
or
push
inc
fsubrs
mov
outsl
imul
popf
ror
stos
jbe
outsb
lods
cld
push
outsb
xchg
pop
dec
mov
mov
mov
jbe
mov
testl
add
sub
sub
aam
add
ljmp
jb
bound
and
xchg
mov
sub
mov
lds
mov
in
fldt
js
cmp
sub
rcrb
popl
sbb
xor
ret
inc
sbb
ds
and
push
xor
testl
mov
cmp
fucomip
cmp
push
rcrl
pusha
xor
loope
adc
cwtl
xchg
push
fdivrl
cltd
mov
xchg
and
in
mov
xchg
ret
mov
in
shll
xor
movsl
push
push
jge
iret
sbb
or
idivb
pop
cmc
ret
jne
imul
fldt
shll
dec
frstor
mov
push
das
movsb
mov
sub
inc
add
inc
ljmp
popf
jmp
pop
movsl
shrb
cmp
xchg
adc
popl
jns
cmc
outsb
fadd
movsl
iret
mov
cmpsl
inc
pop
add
pop
adc
xor
add
pop
inc
push
mov
xchg
add
push
movsl
xlat
jne
ljmp
test
mov
or
mov
cmpsl
clc
lret
sti
inc
out
movsb
cmp
dec
nop
jmpw
fisubrl
and
mov
idivl
xor
imul
xchg
pop
xlat
or
sub
cmc
sbbl
icebp
out
adc
jecxz
dec
mov
sbb
xor
dec
rorb
and
or
in
mov
pop
pop
es
adc
xorb
loop
ljmp
shrl
jp
add
pop
sti
xor
push
data16
xchg
repz
sub
mov
jb
out
pop
test
fcoms
movsb
outsl
daa
ja
dec
inc
test
jbe
sahf
imul
jp
sub
sbb
sbb
in
mov
imulb
stos
les
xor
xchg
lods
sub
aas
mov
sub
fbld
xor
pop
scas
jmp
jae
mov
pop
and
outsl
es
adc
loope
add
jbe
stos
push
mov
dec
jns
adc
mov
jo
adc
cs
int
int3
sbb
dec
test
loopne
out
dec
cmc
hlt
add
add
fcmove
insb
imul
ss
mov
jnp
sahf
int3
cli
popa
jnp
pusha
dec
xorb
aas
xor
adc
jbe
jne
shlb
lret
loope
mov
pop
add
mull
mov
cli
aaa
sahf
adc
pushf
mov
lea
jae
loop
out
shlb
repnz
xchg
inc
mov
cld
stc
out
mov
dec
fsubrs
inc
pushf
daa
adc
ljmp
popa
mov
inc
xchg
mov
mov
jb
and
int3
gs
or
aad
xchg
aaa
mov
lcall
cmp
mov
pop
ds
mov
cmp
int3
test
adc
mov
mov
mov
imul
test
cld
add
arpl
sti
jnp
push
inc
push
lds
shlb
xchg
adc
enter
imul
sbbl
cmpsb
aam
xor
out
pop
repz
xchg
loope
imull
cmc
adc
clc
lock
add
divb
push
pop
push
lods
dec
jge
fisubrs
pushf
into
jno
mov
xchg
inc
out
sbb
cmp
cmp
sub
sub
or
cmp
orl
xor
in
fiadds
repz
out
aaa
jne
loopne
dec
lahf
pop
test
inc
in
add
ljmp
push
sub
scas
and
adc
pop
outsb
inc
ja
jg
mov
aam
rcrl
ja
movsb
sub
aas
bnd
pop
xor
loope
cltd
adc
lret
test
iret
xor
loope
inc
arpl
push
filds
mov
mov
enter
pop
int
sub
add
das
mov
sarl
pusha
xlat
sti
jle
jmp
pop
adc
nop
stos
jmp
pushf
sub
fistl
loopne
fisubrl
imul
mov
or
repz
mov
stc
adc
jbe
mov
jle
aaa
jo
inc
xor
setno
dec
jecxz
int
test
sti
ljmp
mov
mov
sahf
inc
add
sub
push
sub
repz
rcll
aam
xor
mov
mov
movd
pop
mov
pusha
cmp
aam
imul
mulb
out
enter
xor
lods
dec
rcl
xchg
push
add
sub
sti
add
pusha
in
int
lea
sub
mov
and
stos
mov
data16
movsb
mov
daa
pop
addr16
in
mov
jmp
pop
mov
jno
shlb
mov
int3
cmp
dec
fiaddl
ljmp
pop
sbb
push
jp
loop
loop
inc
test
mov
ss
iret
add
ljmp
sbb
lret
iret
in
insl
sub
loopne
xchg
dec
roll
dec
repz
cli
inc
add
push
mov
lds
cld
fisubs
sti
loopne
or
jb
mov
pop
in
mov
out
inc
lret
sbb
mov
mov
push
bound
or
xchg
leave
sbb
mov
or
fisttpl
add
mov
dec
adc
pop
out
dec
fstpt
push
repz
sub
aad
pusha
sbb
mov
ljmp
mov
ja
sbb
push
nop
rorb
pop
sbb
daa
addb
roll
fstpt
in
leave
lret
or
push
aaa
and
inc
lret
xor
xchg
push
test
sub
jg
ret
mov
xchg
repnz
fwait
out
aas
lds
mov
mov
shrb
pop
and
add
or
xchg
leave
sbb
cmpsl
jo
cmpsb
das
mov
rolb
pop
xor
xchg
push
cmp
xchg
adc
pop
icebp
hlt
outsb
ficoml
repnz
sub
in
mov
push
cli
and
ret
dec
xchg
cmp
gs
jno
cmp
cli
adc
sbb
lret
push
inc
fists
into
cmp
in
ret
popf
arpl
cmp
dec
push
pop
jle
clc
idivb
jge
add
dec
inc
js
push
outsb
mov
sub
mov
clc
aam
scas
push
mov
xor
imul
cmpsl
adc
push
out
es
loope
incb
mov
aas
bound
scas
sub
jle
mov
or
jl
cltd
sti
mov
adc
mov
imul
adc
mov
cmp
movsl
js
ret
stc
sub
adc
scas
mov
inc
dec
inc
call
jnp
sbb
out
lods
outsl
stc
fdivr
popa
clc
adc
ja
xchg
pop
inc
mov
rol
sub
lcall
cwtl
inc
pop
mov
inc
das
in
mov
add
rcrb
sbb
xlat
mov
xchg
mov
mov
xlat
inc
xor
fst
push
jg
arpl
push
mov
push
fnstenv
hlt
pop
mov
xchg
pop
mov
xchg
scas
adc
mov
mov
dec
add
fmuls
xchg
sbb
js
cmp
cmp
int
cmpb
lds
dec
addb
ret
outsb
js
mov
in
xchg
add
bound
sarb
inc
push
sarl
cmp
mov
repnz
push
sbb
dec
inc
repnz
add
mov
add
iret
data16
stc
fdivs
dec
in
iret
out
adc
mov
inc
push
inc
nop
pop
add
pop
lods
aaa
sbb
stos
into
and
mov
sbb
mov
push
cmp
sub
pop
dec
loop
add
in
xchg
jno
jns
jmp
push
pop
mov
and
insb
dec
dec
push
jmp
xchg
push
mov
daa
pop
addr16
sbb
mov
xlat
xchg
repnz
sub
in
or
mov
sub
cmp
adc
mov
adc
jp
cli
aas
jne
cmp
mov
push
lcall
lods
in
int
cmp
ljmp
pop
test
pop
xchg
lea
dec
and
push
mov
mov
xor
fldcw
int
sbb
outsl
mov
xchg
add
adc
cmp
xlat
call
cmp
repz
fmull
or
js
scas
cmp
jne
iret
dec
movsb
bound
ret
je
mov
sub
mov
cwtl
movsl
lcall
fwait
arpl
jnp
scas
mov
bound
mov
into
popa
mov
mov
repz
cmc
xor
out
pop
inc
aam
pushw
int
int
or
push
notb
add
rcrb
inc
mov
mov
or
out
sti
mov
shrl
lcall
push
xor
push
lds
fidivrs
xchg
mov
mov
fldt
mov
mov
sub
sbb
hlt
cwtl
jge
mov
nop
adc
or
cmp
fmulp
sbb
mov
xchg
mov
call
inc
inc
xor
and
addr16
xlat
cmp
cwtl
cli
xchg
push
sub
repz
sahf
xor
sub
insl
add
jns
ret
and
cmc
cmc
sbb
ret
filds
dec
lds
dec
push
xor
push
add
push
shlb
stc
popf
mov
or
fldenv
dec
or
or
xlat
push
sub
mov
sbb
lahf
dec
mov
jle
xlat
inc
pop
and
add
repnz
dec
push
popa
sbb
repz
jge
mov
mulb
cs
clc
jne
adc
jg
repz
in
push
loope
mov
daa
iret
sub
mov
mov
and
flds
sbb
test
arpl
jbe
adc
ret
popf
cmpsl
push
mov
lock
loope
sub
xlat
sbb
aad
outsl
cmpb
mov
push
lret
hlt
cltd
dec
xor
push
lahf
enter
pop
hlt
cmp
cmp
inc
and
shrl
int
popf
mov
xor
mov
or
dec
mov
xor
jno
mov
sub
je
add
repnz
add
dec
pop
out
dec
mov
arpl
inc
aad
mov
add
jg
loopne
push
gs
imul
and
aaa
je
jl
in
sub
or
rcll
das
mov
test
push
xchg
shrb
jl
clc
adc
ficompl
sub
adc
jmp
ljmp
mov
int3
add
xchg
sbb
sub
inc
cltd
xlat
push
lahf
out
stos
enter
pop
pop
testb
es
popf
es
cs
iret
push
in
repz
mov
mov
pop
sub
push
and
dec
xchg
lret
stos
xor
and
push
loop
loope
scas
popa
cmp
sub
jg
pop
ss
inc
popa
test
cmp
mov
lea
out
mov
or
sahf
mov
stc
scas
jbe
outsb
cmp
sbb
xchg
push
dec
out
scas
inc
aas
sub
dec
stos
push
pushf
lods
jg
xor
nop
jg
xor
pusha
in
adc
push
pop
repz
mov
addb
or
cmc
mov
repnz
inc
out
popa
sbb
mov
in
ljmp
in
xchg
adc
inc
loop
and
mov
jecxz
sub
xor
xchg
pop
add
sbb
cld
inc
aad
subl
into
mov
mov
fs
add
pop
vsubsd
cltd
loope
std
call
sbb
stos
jae
out
lea
dec
pusha
mov
jmp
push
or
xor
inc
adc
push
ret
mov
aas
int3
or
loope
xor
pop
xor
stos
push
cli
lea
add
test
lods
call
ss
pop
jge
ficomps
inc
and
cmpsl
sub
jnp
rcrl
ret
fsts
xchg
je
lock
push
mov
das
pop
je
fwait
insl
xchg
xchg
adc
cmp
xchg
repnz
dec
mov
dec
mov
imul
rol
ret
fcoms
leave
jnp
cmp
xor
fwait
mov
jmp
insb
ss
sub
xchg
mov
adcb
aad
cltd
sub
js
popf
testl
cs
cmpsl
pop
outsb
sub
in
leave
and
movd
xor
pusha
das
push
cmp
jns
rcr
pop
arpl
adc
ja
test
push
pop
rorl
xor
cltd
cmpsb
mov
add
in
jbe
andl
sahf
mov
dec
insl
or
push
mov
pop
lods
adc
sub
xchg
mov
mov
sbb
xchg
xchg
jg
pop
leave
xor
jb
xchg
and
lea
in
call
cmp
ss
lea
add
out
cmc
dec
mov
pop
fcomi
addl
pop
push
lock
int3
mov
or
roll
or
sahf
movsl
push
add
lret
or
and
outsb
pop
ficomps
pop
out
mov
pusha
jecxz
sbb
movsl
pushf
mov
xchg
inc
adc
lods
cs
shrl
je
int
insl
inc
aam
fwait
and
es
pop
lods
xchg
xor
jbe
in
mov
rclb
cmp
xchg
xchg
cmp
mov
mov
or
ja
mov
pop
lock
push
int3
mov
jae
subl
leave
je
and
mov
aam
in
xor
push
pop
jg
data16
cmpsl
repz
mov
adc
stos
mov
lods
ljmp
and
push
push
loopne
testb
fisubl
mov
or
mov
out
mov
lcall
scas
hlt
push
push
das
sbb
in
xchg
clc
pop
jecxz
cmp
hlt
push
or
push
mov
cmp
xor
sbb
aam
push
sti
lods
pop
mov
gs
push
mov
inc
cmp
int
push
adc
or
mov
cmp
or
xlat
mov
loope
cwtl
inc
sahf
xchg
loop
inc
std
lret
fdivrs
pop
sbbb
fisubrs
add
inc
push
test
rclb
adc
or
dec
shlb
adc
add
cmc
je
adc
repz
faddp
pop
lret
shlb
imul
mov
or
mov
shld
int3
inc
push
lock
lret
int3
insb
pushf
jge
fnstenv
xlat
adc
xchg
loop
dec
xchg
int
pop
push
es
sub
xchg
sbb
push
and
pop
enter
xchg
outsb
ror
mov
mov
xor
insl
cmpsb
clc
or
je
cmp
decl
movsb
push
mov
repz
leave
dec
cmp
shll
mov
fstl
int
out
cmpsb
or
cmpsb
mov
xor
sub
icebp
mov
push
and
mov
sub
cwtl
xor
aas
inc
adc
sbb
push
mov
and
daa
bnd
sub
sub
das
aad
repnz
call
add
fldcw
cs
pop
inc
mov
add
in
rorl
int
scas
xchg
push
js
push
mov
pop
mov
pop
jne
pop
data16
jl
sahf
cltd
daa
pop
cwtl
jo
dec
add
repz
in
push
dec
mov
stc
xchg
jo
jle
and
inc
clc
hlt
cli
scas
repz
popl
push
sub
das
shlb
cmpsl
push
dec
cmp
daa
aaa
pusha
xchg
jnp
sti
icebp
mov
jnp
sti
dec
sbb
scas
leave
mov
inc
push
imul
jl
leave
jne
xchg
dec
stos
pop
insl
xor
ds
cs
ret
mov
jecxz
cmpsb
fs
ficoml
icebp
cwtl
clc
mov
hlt
sti
test
sbb
xchg
idivl
fdivrl
lods
push
and
popa
sbb
mov
lret
stc
gs
in
outsl
cwtl
lock
outsl
push
fs
les
add
xchg
shlb
add
mul
clc
add
mov
rcl
repnz
push
mov
adc
mov
sub
lcall
aam
mov
or
mov
or
scas
xchg
in
and
test
jne
cli
jp
inc
xor
sbb
call
inc
shrl
stos
int
push
jmp
int3
out
enter
cld
shrl
jae
sbb
icebp
out
cltd
pushw
jns
xor
push
inc
dec
hlt
xchg
pop
inc
xor
je
stos
clc
pushf
mov
fiadds
xchg
fadd
inc
sub
das
daa
loopne
dec
jp
jle
dec
adc
xchg
xor
in
inc
arpl
in
lahf
ds
push
xor
xchg
mull
out
cwtl
cwtl
stos
xchg
test
pop
adc
nop
test
jecxz
imul
mov
push
jle
pushl
inc
aam
sub
mov
in
mov
lret
cs
cmp
push
std
lods
callw
push
lods
push
notl
iret
dec
mov
jne
push
mov
add
bound
sbb
xlat
xor
and
or
add
mov
fistl
adc
call
fxch
jg
fwait
sarl
mov
lods
insl
jo
sub
int3
data16
add
pop
sbb
stc
inc
push
test
mov
sub
rorl
adc
cmp
pop
mov
sub
mov
pusha
inc
cld
push
mov
mov
stos
cmp
push
movsb
add
mov
jno
fidivl
fcompl
add
popl
inc
out
dec
adc
hlt
push
and
jl
xchg
mov
mov
in
mov
ss
in
aad
sets
leave
lds
mov
mov
addr16
or
inc
push
pop
lods
push
test
je
pusha
int3
das
je
cmp
decl
scas
and
repz
fistpll
fists
ret
adc
sub
push
aas
pop
inc
les
fildll
adc
sub
stos
and
inc
mov
xchg
lahf
jge
in
mov
mov
aad
in
mov
jecxz
xchg
xchg
inc
dec
or
xor
addr16
lods
movsb
cli
xor
aam
xchg
repz
ret
cmp
testl
dec
mov
rcll
aas
mov
cli
inc
mov
enter
xchg
gs
xor
pop
sub
rcr
pop
imul
andb
pusha
mov
sub
int
mov
lock
adc
mov
pop
rcll
and
push
sbb
xchg
loopne
adc
loopne
xchg
xchg
push
popa
ret
push
arpl
xor
insl
aad
std
aaa
scas
sahf
push
sub
bound
cmp
mov
in
cld
jns
jno
mov
pop
push
ja
aam
hlt
xor
cmc
ss
call
shlb
aas
enter
lds
bound
pop
es
incl
push
pop
mov
sub
hlt
sahf
scas
mov
gs
icebp
mov
jg
xchg
bound
pushf
mov
int
inc
xchg
in
lods
stos
dec
je
rorb
jbe
pop
push
scas
gs
mov
push
jnp
iret
adc
sub
mov
push
cs
les
xchg
push
mov
xchg
jno
xor
hlt
dec
outsl
xchg
lds
mov
icebp
sahf
stc
mov
out
mov
into
es
sub
or
pop
outsb
mov
adc
mov
inc
pop
sbb
and
and
dec
sti
ljmp
push
and
xor
and
neg
lret
fimull
mul
xor
dec
jns
and
insl
add
adc
push
dec
mov
ficompl
loopne
add
rcrl
fidivrl
pop
out
fcoml
dec
divl
lods
mov
lods
je
push
sbb
mov
add
dec
dec
lds
jp
fcoms
push
mov
xlat
in
cmpsb
push
jmp
out
push
jb
sbb
inc
sbb
sub
push
shrl
js
sbb
les
in
movsl
mov
into
jo
mov
into
jecxz
sbb
cmp
fistpl
push
dec
test
lods
loopne
jnp
mov
pop
inc
push
out
pop
inc
or
mov
dec
xchg
arpl
sbb
xor
adc
sub
xor
jno
call
ds
sub
adc
arpl
xchg
mov
mov
fistpl
mov
faddl
arpl
lock
pushf
out
xchg
inc
subps
pop
fadds
push
sbb
fnstcw
cmp
cmp
jle
imul
push
push
movsb
inc
mov
jle
test
mov
sub
fstpl
xor
or
lahf
das
test
and
in
jne
sub
xor
xchg
sbb
cmp
jp
push
mov
imul
aam
pop
cmp
mov
sbb
sbb
jl
jno
lcall
adcl
xor
push
add
mov
pop
ficomps
shrb
shrl
cmp
fisubrl
and
rcr
xor
lcall
cmpb
fildl
stos
cmp
lock
fsubrl
pop
mov
dec
data16
mov
or
cli
loopne
push
pop
push
xor
jbe
mov
dec
jb
test
adc
inc
rolb
xor
insb
xchg
nop
xor
cmp
in
jae
aas
inc
cmp
jmp
cmp
test
mov
in
ljmp
bound
mov
dec
push
sbb
cltd
xlat
mov
lods
or
jmp
or
mov
fnstenv
cli
add
fsubr
cmp
pop
xchg
lds
loop
call
loope
dec
not
aaa
inc
pop
jbe
ja
rclb
mov
jne
insl
aam
ds
dec
flds
xchg
stos
jl
fstpl
in
addr16
mov
int
jg
movsb
ret
cmp
inc
xor
jp
jp
test
pop
popf
outsb
aad
nop
xchg
gs
fadd
subl
and
inc
loope
jecxz
sbb
jle
inc
scas
movsl
mov
cmp
lea
fnsave
lcall
out
xchg
out
cld
popa
into
push
shrl
les
lock
lods
xor
push
sub
ja
dec
push
jecxz
jae
jecxz
fcoms
sbb
fsubs
jmp
push
add
pop
sub
jg
sbb
imul
fistps
out
or
mov
loopne
cwtl
cmp
out
bound
sbb
roll
rolb
inc
in
adc
jne
jecxz
mov
in
xchg
pop
cmp
xorl
push
adc
sbb
out
aam
cld
test
adc
aad
cmp
sub
enter
mov
jle
cmp
lcall
xor
sti
movsl
adc
and
cmpsl
clc
repnz
scas
pop
jp
xor
push
pop
xchg
jns
mov
flds
cmpsl
out
mov
inc
lods
push
pop
pop
rcrb
push
xchg
and
in
xchg
add
jns
inc
sub
pusha
cld
sarl
mov
and
and
outsb
stos
add
scas
dec
gs
aam
dec
nop
clc
ret
aaa
add
xchg
incb
pop
xchg
mov
push
mov
push
pop
xchg
in
dec
test
mov
popa
fs
and
xorb
pop
or
xchg
fimull
lahf
pop
lods
pop
or
xchg
int3
cld
repz
std
lret
add
ja
insl
ljmp
and
mov
and
outsl
push
ret
adc
dec
mov
dec
test
andb
sub
icebp
bnd
into
les
mov
push
pop
and
loop
les
in
xchg
adc
sbb
xor
pop
push
out
dec
les
xchg
outsl
push
ds
pop
int
test
movsl
xchg
cmp
add
sub
nop
je
js
mov
cmp
aas
out
popf
pop
mov
inc
or
iret
inc
push
jge
xor
pop
jno
pushf
mov
outsb
outsb
mov
in
inc
xchg
outsb
push
cmp
test
in
vunpckhps
add
xchg
jmp
lret
push
add
inc
jecxz
cmp
or
gs
mov
filds
mov
cmp
push
dec
jmp
pop
sarl
in
jecxz
iret
xlat
shl
mov
lret
and
mov
inc
mov
andl
cmp
mov
out
mov
andl
outsb
bound
lods
stos
int3
mov
pop
int
daa
lret
push
das
dec
out
sub
push
lods
mov
in
fsub
lds
stos
cmp
rorb
push
test
mov
lahf
test
mov
sub
orl
sbb
xor
adc
xchg
push
data16
cs
fstpl
push
into
test
mov
adc
ret
add
mov
xchg
jo
test
repz
test
push
fwait
sub
dec
std
pop
pop
mov
and
dec
lds
pop
push
push
lret
and
fmul
push
xor
xchg
leave
fnstenv
mov
lods
xchg
and
jo
in
xchg
or
add
xchg
test
bound
sub
sbb
pop
in
xchg
popf
into
insb
popa
out
cs
push
cmp
sub
mov
outsb
and
leave
sbb
jnp
repnz
out
push
jb
mov
jp
push
lcall
xchg
mov
jp
or
pusha
pop
push
ljmp
negl
pop
stos
mov
sbb
loope
adc
jge
jb
es
hlt
lcall
jle
fcmovb
xor
sbb
popa
mov
inc
ja
movsl
mov
adc
testb
jmp
bound
and
xchg
aam
mov
hlt
orb
fwait
ss
ljmp
inc
bound
jo
das
mov
gs
add
push
fcoms
scas
or
jnp
sub
push
sbb
cmp
das
ret
cld
xor
lret
shl
xor
insl
and
xor
pop
mov
cmp
mov
push
sbb
mov
dec
jno
xor
adc
cwtl
jne
mov
adc
or
inc
int3
inc
xor
sbbb
mov
sbb
gs
into
adc
dec
dec
lahf
jno
rcl
lret
imul
les
lods
jle
push
sub
leave
cmp
pushf
add
sbb
jnp
jmp
scas
mov
mov
add
outsb
cmpsb
shl
insl
lea
dec
movsb
cmp
cmp
cmp
je
cmp
hlt
lcall
stos
mov
cmpsl
dec
lret
stos
mov
outsb
loop
adc
scas
pop
sub
sub
jnp
lds
test
jmp
cmp
addr16
dec
cli
inc
movsl
popa
sbb
xchg
test
lods
inc
xchg
add
not
and
leave
push
stos
xor
sub
cli
xor
das
jmp
pop
fidivrl
xor
xor
or
loop
mov
add
fs
jp
rcrw
push
cmpsb
and
lods
push
sbb
or
loope
pop
sub
in
add
and
cmp
aam
lret
xchg
insl
add
pop
inc
scas
std
jb
dec
or
cmpsb
rorl
mov
rcrl
xchg
repz
jo
cmpsl
mov
imul
pop
sub
push
arpl
jnp
pop
sub
hlt
cmp
dec
leave
lret
in
sbb
push
adc
sbb
pop
mov
mov
outsb
aam
add
lods
sub
test
cmp
iret
add
outsb
mov
mov
outsb
or
data16
or
sub
ss
outsl
mov
jns
lock
jecxz
jmp
into
jg
sub
ret
or
lea
mov
mov
lret
jo
and
xchg
push
sub
rcl
pop
lret
fwait
insl
sbb
jmp
or
xchg
mov
xchg
sbb
push
push
rcrb
in
popf
imul
popf
mov
jne
and
int3
lock
movsb
clc
lret
cltd
push
test
out
fldenv
in
insl
aas
outsl
fwait
sbb
bound
sub
and
jmp
sub
mov
repnz
mov
push
shll
pop
and
cmp
jl
testb
ja
adc
mov
pusha
incl
test
scas
mov
in
mov
and
sbb
add
aas
add
shlb
mov
xor
loope
test
dec
jl
out
nop
mov
dec
sarl
mov
mov
test
mov
addr16
fs
cmp
stos
xor
cmp
in
xchg
cmpsb
xor
out
js
out
mov
es
dec
mov
xorl
inc
push
call
sbb
xchg
aad
push
xchg
js
pop
jecxz
add
outsl
js
insb
daa
add
and
dec
adc
mov
adc
or
fildll
sahf
iret
fiaddl
out
xchg
jae
enter
and
dec
outsl
fiadds
mov
pop
loope
sti
cld
shlb
adc
into
jbe
mov
ret
pushf
loope
sbb
cltd
subb
popa
flds
adc
cmp
inc
cltd
xor
inc
into
and
test
loope
out
fdivl
jno
mov
xor
outsb
mov
xchg
mov
xchg
cmp
push
repnz
lss
and
mov
xchg
mov
lahf
jo
mov
mov
fs
jb
stos
xor
pop
mov
je
push
sub
sub
mov
movsl
bound
adc
out
imul
sub
xchg
icebp
fsubl
cmpsb
pop
leave
xchg
lret
mov
ljmp
adc
out
movsl
mov
dec
test
test
in
cltd
pop
pushf
mov
clc
push
jae
jg
test
mov
lret
addr16
aad
out
adc
fdivs
setne
pop
mov
pop
pop
fsubs
jecxz
or
sbb
lea
xchg
cltd
xchg
rcrb
ss
jb
fldlg2
pop
jbe
add
mov
js
ds
mov
sbb
mov
and
xchg
pushf
push
inc
adc
jp
mov
mov
popf
sbb
jg
imul
sbb
arpl
loop
dec
test
add
sti
fs
popf
mov
enter
and
lret
pop
out
jmp
jb
lea
dec
xor
int
gs
insl
add
sahf
inc
repnz
popa
rorl
sbb
fstps
inc
pop
call
and
repz
push
lahf
frstor
jl
pop
inc
mov
pop
ljmp
xor
cmc
test
or
xchg
aad
mov
or
ret
sarl
xchg
sbb
dec
fcmovb
inc
inc
sbb
pop
in
shrb
mov
jp
popa
scas
leave
push
das
lret
inc
inc
add
jmp
inc
data16
dec
and
mov
sub
dec
movsb
xchg
orl
mov
xor
lods
add
pop
in
sbb
cmp
mov
inc
dec
out
gs
lock
and
mov
push
jbe
fwait
mov
movsb
adc
mov
lock
xchg
sub
push
dec
popf
dec
xor
js
xchg
ret
inc
in
pop
sub
cwtl
outsb
xor
adc
or
imul
rcrb
mov
outsl
call
pop
aam
lods
mov
negl
hlt
mov
cs
arpl
fdivrl
ficoms
dec
aad
or
dec
or
gs
sbb
or
pusha
dec
push
lahf
inc
cli
push
lea
add
dec
out
loopne
cwtl
notb
inc
mov
popa
leave
xchg
repnz
mov
aam
lcall
dec
cmp
mov
sub
mov
add
push
inc
fidivl
dec
bound
arpl
rcr
scas
clc
sub
sahf
or
stos
cmc
in
adc
xor
pop
scas
lret
cld
mov
movsb
or
pop
mov
add
adc
cltd
jmp
mov
arpl
push
lock
adcb
mov
movsl
dec
xor
mov
mov
xchg
xchg
stos
movsl
jp
sub
mov
inc
popf
scas
mov
sbb
push
std
xchg
mov
xorb
lods
pop
mov
int
push
dec
mov
pop
add
cli
mov
js
sahf
and
jae
cwtl
test
inc
pop
jo
sbb
fdivs
push
push
mov
xorb
mov
aam
mov
dec
pop
sub
xchg
push
push
pop
lock
test
add
fcomip
adc
das
and
mov
xor
les
out
movsb
mov
mov
add
pop
and
push
je
jbe
outsb
dec
xor
mov
js
or
adc
mov
outsl
inc
inc
in
mov
pop
jae
dec
vpsubq
mov
sub
sbb
adc
in
shll
lret
repz
dec
lods
rcll
ja
or
dec
xlat
pop
outsl
icebp
sub
mov
shll
mov
pop
js
mov
pop
inc
shl
leave
jns
subl
mov
cmpsl
push
out
fbld
pushf
loope
jl
push
mov
dec
or
daa
fs
repz
sbb
add
mov
xlat
shlb
jl
jge
daa
shlb
pop
xor
lods
mov
data16
xor
movsl
xor
pop
jmp
xor
xchg
sub
rorl
mov
sub
fsubrl
lods
ss
mov
shlb
ljmp
and
loope
mov
adc
xchg
xor
out
xchg
fdivr
jb
jmp
scas
fs
push
cmc
jl
roll
dec
in
hlt
daa
lahf
mov
mov
sti
into
pop
fwait
stos
aas
cmc
bound
add
mov
test
inc
loopne
imul
in
cwtl
mov
icebp
or
loop
push
xlat
into
mov
and
and
sub
jae
inc
inc
into
aas
outsl
scas
repnz
or
mov
adc
inc
lock
jnp
ljmp
dec
mov
mov
xchg
sbb
jne
push
and
adc
mov
dec
xchg
jns
ret
jmp
and
dec
stos
or
stc
mov
std
xchg
jp
jae
and
dec
fimuls
pop
xor
outsb
pop
jns
lock
xchg
jecxz
rcl
sbb
push
subl
and
repnz
nop
pop
cli
nop
dec
cmpl
sbbl
push
add
dec
cli
sub
xor
shr
popa
icebp
mov
mov
sarl
xor
out
mov
jns
xor
fstpl
mov
inc
sbb
xor
scas
divl
outsl
in
inc
fcmovnu
mov
mov
test
adc
rcr
xor
cmp
mov
int
fdivp
sbb
or
add
fcmovbe
push
jmp
loope
insb
shrb
mov
fldl
es
sbb
sub
dec
jecxz
jb
mov
push
cld
jno
sbb
jo
sbb
sti
sbb
sbb
je
mov
ljmp
mull
andb
push
inc
xchg
mov
ja
sti
mov
cmp
out
adc
and
insb
and
cmpsb
xor
popf
ljmp
cmpl
dec
sbb
sbb
gs
mov
mov
jne
mov
inc
cli
bound
sub
jne
push
jle
pop
aaa
and
ljmp
sub
dec
push
jno
adc
add
push
cwtl
sub
inc
xchg
out
and
push
xchg
repz
cli
push
mov
xlat
rorb
lret
jnp
xor
rcrb
dec
sahf
cwtl
pop
inc
ret
out
mov
xchg
ja
fistl
cmp
xchg
inc
lock
sahf
out
mov
je
test
add
dec
sarl
dec
jmp
pop
cmp
scas
push
dec
je
inc
out
jae
xor
xchg
adc
and
shrb
push
cli
pusha
nop
sbb
add
mov
sbb
add
cwtl
repnz
jne
push
mov
add
gs
jmp
mov
xor
dec
dec
mov
mov
add
jb
xor
in
fsubs
js
iret
inc
fadds
sbb
dec
jbe
push
repz
xchg
and
fidivrl
xchg
notb
lods
push
ret
inc
cmp
jns
sahf
cld
jmp
push
lcall
jnp
and
xor
sti
into
mov
sbb
add
pop
xor
aaa
test
fildl
jg
or
in
add
push
scas
jge
sti
and
lret
leave
mov
or
cmp
xchg
jns
dec
add
push
mov
sbb
aam
hlt
mov
mov
add
and
stos
mov
pop
add
sub
cmp
pusha
mov
ror
xchg
adc
sbb
aas
je
add
dec
xor
mul
cmp
and
inc
popl
xchg
inc
pop
inc
cwtl
and
rolb
mov
enter
or
mov
outsl
adc
int3
clc
xor
mov
push
clc
ror
cli
das
xor
xchg
mov
je
rolb
lods
call
movsb
stc
jl
imul
adc
pop
cmp
jg
push
sbb
bnd
push
xorb
aaa
lods
ret
cltd
sub
lods
fimull
test
mov
mov
cltd
sbb
aam
cmp
inc
gs
mov
inc
mov
rcr
sahf
add
aaa
sub
mov
push
addr16
pop
and
xor
xchg
jge
sbb
movsb
das
jg
fnsave
inc
ss
aas
idivb
mov
std
dec
leave
in
and
or
pop
test
mov
or
dec
adc
mov
hlt
mov
fdivs
mov
ret
sbbl
mov
sub
and
pop
inc
jl
ds
sub
or
imul
in
push
sub
sahf
in
daa
fcoms
pop
out
test
sbb
sub
pop
push
pop
xor
icebp
outsb
outsb
ljmp
arpl
push
dec
xorb
repz
imul
in
cmc
mov
fwait
lock
jecxz
and
cmp
and
push
jns
xchg
dec
sbb
jl
lods
pop
xor
push
stos
mov
push
xchg
dec
cmp
fcomps
int
mov
mov
push
sbbl
pop
sub
jno
scas
cmp
fsubl
out
inc
and
xchg
add
push
fwait
pop
into
dec
pop
loope
xorb
xor
push
leave
shlb
lret
mov
mov
adc
xor
out
jmp
jne
lahf
add
mov
or
pop
mov
gs
in
imul
inc
inc
sti
or
insb
mov
cld
ss
pushf
ror
adc
addr16
add
xchg
inc
pop
and
pusha
hlt
add
mov
xor
aaa
or
test
pop
clc
cmp
lods
pop
imul
ss
std
or
pop
mov
ds
push
inc
insb
dec
or
fcoml
cmp
fstpl
push
mov
lret
jmp
std
sbb
sbb
test
lock
test
xchg
scas
mov
addb
add
mov
lahf
loopne
dec
jmp
jg
jbe
mov
insl
inc
jns
and
into
pop
lret
sub
aad
xchg
push
mov
jg
jge
and
insb
jl
push
xor
dec
sti
repnz
fs
cmp
mov
pusha
aad
data16
cmpsb
movsb
push
in
mov
inc
movsb
mov
enter
cmp
sub
push
test
jmp
inc
enter
or
rolb
inc
dec
adc
icebp
adc
or
scas
add
fcoml
pop
mov
addr16
in
and
add
sahf
fucomp
sti
and
fisttps
sbb
adc
inc
psubusw
jecxz
push
adc
les
xchg
jb
out
lods
inc
ljmp
mov
jecxz
loop
orb
mov
pushf
push
stc
rcll
fwait
mov
sarl
jg
movsb
jnp
add
jne
jecxz
xchg
add
jecxz
and
xchg
inc
xor
push
push
outsb
cmp
push
imul
pop
dec
fistps
push
ss
push
pop
outsl
and
das
fsubl
outsb
jp
dec
cmp
jnp
dec
mov
cli
dec
rcl
ss
stos
pop
xchg
push
inc
xlat
outsb
cmpsl
aaa
mov
adc
shrl
xchg
inc
sbb
xchg
xchg
call
enter
mov
pop
mov
rcl
movl
mov
lock
lods
sti
push
insl
mov
pop
sbb
or
rcrb
inc
jnp
push
sub
sub
jnp
popf
inc
sub
adc
sub
add
mov
stos
inc
or
lret
jmp
mov
clc
dec
in
jmp
sahf
inc
xor
daa
adc
fwait
aaa
lret
popf
popf
int3
mov
aas
cmpb
dec
sub
mov
sbb
insb
lods
js
movsl
mov
mov
add
int
std
xor
repz
cmp
mov
lret
jb
adc
pusha
pop
out
loopne
out
popl
cmp
fnstcw
xchg
jle
add
add
xor
sub
insb
add
xchg
gs
jns
jns
jmp
mov
cmp
cli
out
jmp
jmp
pushf
push
adc
rcrb
push
pop
dec
fs
and
mov
cmp
lret
adc
ja
das
shrb
mov
shlb
int3
add
sar
pop
stos
jl
add
and
push
sbb
lods
insl
adcl
lcall
int
js
mov
repnz
iret
pushf
in
repz
cmpl
test
and
fsubrs
xchg
jo
mov
inc
and
push
cwtl
call
jne
pop
inc
insl
add
xchg
inc
push
xchg
out
pop
and
insb
fstl
mov
mov
aad
repz
push
pop
mov
xlat
sub
cmpsl
int
jl
mov
push
orl
mov
int
sub
add
sbb
xorb
dec
lret
jae
hlt
cmp
mov
int
and
add
cmp
rcrl
cmp
add
jae
cmp
and
adc
cltd
stos
rcr
push
adc
sbbb
add
es
icebp
cmp
aas
loop
mov
xchg
aaa
xchg
cmpsb
mov
mov
daa
test
xchg
mov
push
cmp
dec
xchg
aas
cmp
lret
cltd
jne
push
xchg
add
adc
lret
lcall
add
mov
push
popf
mov
xchg
lahf
cmp
jo
loopne
stos
pushf
mov
cmc
outsl
lods
enter
insl
or
pop
dec
pop
imul
add
and
add
repz
pop
popf
push
fadd
add
lods
mov
loope
mov
xor
xchg
stos
push
or
jbe
ret
inc
or
notb
inc
lock
cs
mov
mov
xor
lret
adc
jb
inc
add
cmpsb
bound
cmpsb
and
mov
idivl
mov
dec
cmp
cwtl
sub
xchg
inc
lock
inc
pop
cmp
outsl
mov
in
jecxz
call
es
mov
push
push
sub
faddl
scas
inc
cmp
pop
dec
movsb
sahf
mov
sar
sbb
jge
les
mov
testl
and
inc
push
sub
leave
movsl
test
mov
inc
ja
lea
xchg
shr
and
inc
mov
rolb
test
clc
sbb
xlat
pop
sub
sub
sub
adc
popa
decb
dec
cmp
incb
dec
loope
pusha
cmp
cmpsb
in
andb
gs
sti
test
mov
pushf
mov
outsb
and
xchg
xor
fisubrs
xorb
les
movsb
fs
enter
lods
cwtl
sbb
rcl
cmp
int
iret
mov
lret
pop
movsb
outsl
jbe
dec
jmp
sub
pop
icebp
cmp
jmp
dec
cltd
insl
std
pusha
and
setb
cmp
cld
or
in
stos
sbb
jecxz
out
cmp
les
jne
inc
jae
mov
sub
pop
dec
repnz
push
sbb
inc
cmpsb
nop
and
add
sbb
mov
add
sar
pushf
cmp
lds
add
jnp
lea
mov
mov
lcall
movsl
out
rclb
jo
jecxz
xor
cmp
movsb
jo
in
mov
popf
andb
jp
pop
popf
mov
adc
add
dec
icebp
push
arpl
bound
pop
mov
pop
push
lds
add
jge
adc
add
xor
insb
pushf
iret
adc
outsb
stc
repnz
gs
xchg
out
jns
add
lods
sbb
push
pusha
repz
and
add
or
bound
add
test
lret
sub
push
jnp
clc
lea
fists
mov
orb
sbb
roll
push
cmpsl
jns
cmp
add
adc
or
push
mov
dec
out
or
loopne
lods
lret
insb
or
sti
js
rol
cltd
loop
ret
out
xadd
out
out
mov
lret
push
or
adc
flds
adc
pusha
adc
loopne
in
lret
adc
movsb
dec
jns
and
mov
into
popf
push
rol
daa
shlb
inc
scas
adc
icebp
mov
or
hlt
xor
fsubrl
nop
mov
sarb
adc
xchg
cmp
jmp
data16
mov
xorl
adc
test
aaa
subb
mov
and
fmul
mov
test
mov
and
adcl
xchg
xchg
and
dec
mov
mov
mov
cltd
and
notl
or
jo
inc
icebp
mov
and
fs
test
lock
or
cmp
fists
sub
jne
dec
sub
in
test
add
cmp
dec
xor
nop
cmp
mov
data16
insb
arpl
cmc
movsl
ret
mov
int3
mov
call
pop
fidivs
movsb
and
xchg
sti
out
fiaddl
incb
out
and
pop
ret
jno
xchg
pop
mov
or
sti
pop
inc
fdivrp
pushf
sub
sbb
jle
in
jb
xor
iret
clc
sbb
lods
add
int
push
mov
stos
and
jb
pop
jp
xlat
mov
imul
int3
sub
andl
ljmp
insl
or
stos
lods
js
loope
lods
jns
int3
sbb
pop
push
pop
frstor
add
out
lock
int
adc
inc
sbbb
rcl
movsl
mov
adc
aam
or
dec
jmp
popf
aad
lret
pop
or
pop
insb
sub
push
aad
int3
fistl
push
mov
jnp
stos
shrl
insl
mov
push
and
pop
inc
rcrl
jne
push
aad
std
stc
sbb
push
xchg
mov
subb
hlt
ljmp
lock
adc
and
gs
and
jp
repnz
jmp
push
adc
add
and
inc
into
mov
or
xchg
ret
cli
sbb
jno
pop
addr16
imul
imul
icebp
mov
enter
hlt
mov
xchg
xchg
out
loope
jns
clc
stos
cmp
loop
push
lea
jb
mov
sahf
jnp
cmp
xor
add
insl
push
je
mov
pop
add
out
outsb
clc
sub
mov
sub
jae
mov
jo
incb
shlb
into
or
cmp
pusha
adc
and
cmp
jno
cwtl
dec
pushf
ja
js
pop
mov
jae
lcall
xor
nop
adc
cmpsl
aad
aaa
rcrb
stc
jp
or
dec
int3
add
xchg
push
clc
imul
pop
push
mov
add
cld
mov
push
dec
scas
daa
and
and
gs
jb
xor
add
sub
arpl
in
mov
mov
rorb
and
inc
xlat
lret
xor
pusha
insl
mov
push
sti
in
sub
inc
loop
jge
push
bts
gs
insl
sbb
jns
jb
adc
jmp
aam
nop
push
sub
rcrb
xor
push
mov
mov
ret
pop
jmp
and
sbb
add
adcl
sub
add
sub
mov
adc
bound
stc
aas
ss
cmp
adc
data16
loopne
add
adc
mov
into
inc
dec
pusha
add
jmp
in
addl
sti
je
ret
lret
xchg
pop
outsl
clc
enter
cltd
sub
xor
dec
inc
add
mov
mov
stos
arpl
push
in
push
aas
dec
inc
movsb
cmc
xor
xor
ss
cmp
jle
call
dec
add
lret
or
mov
push
fwait
xchg
push
shrl
push
jle
inc
pop
leave
xlat
ret
lret
test
stos
xchg
pop
push
sub
pop
adc
jl
xchg
shrb
add
fcoml
movsb
xchg
imul
push
out
stos
add
out
movsb
xchg
lret
out
add
es
out
les
das
test
cmc
sbb
add
faddl
jl
rcrb
scas
push
mov
int
out
ds
insl
test
daa
frstor
leave
loope
adc
cli
mov
scas
mov
test
push
push
push
insl
in
ret
or
incl
jne
push
inc
idivl
pop
cmp
stos
ss
test
mov
cltd
push
in
ja
in
pop
sub
inc
push
add
fsubrs
dec
cmp
movsb
sub
inc
lods
lock
iret
add
xchg
mov
xchg
pusha
adc
add
xchg
aaa
inc
test
mov
cmpsl
out
mov
inc
enter
add
daa
sbb
or
and
mov
cmovne
and
imul
in
pop
mov
shl
cmc
outsl
movsb
pop
fnstenv
mov
mov
stos
mov
sahf
and
mov
sahf
imul
fstl
jp
cmpsl
mov
cmp
inc
or
or
or
jge
leave
inc
ret
and
pop
push
push
add
pop
test
fistps
in
xorl
lret
mov
mov
bound
cmp
repz
mov
imul
push
adc
push
dec
mov
xor
or
mov
ud0
fcompl
insl
ss
es
daa
insl
cmpsl
data16
shl
ret
enter
jle
jmp
mov
movsb
or
jg
insb
in
cmp
adc
call
call
nop
inc
leave
test
mov
jb
jle
xchg
sbb
lret
pushf
test
mov
out
stc
cmp
mov
dec
sti
mov
loop
mov
pop
repnz
or
inc
mov
iret
ret
xor
leave
movsl
jg
dec
rolb
or
xor
js
push
repnz
pushf
pop
test
mov
std
pop
js
mov
lock
add
out
push
sub
cmpsb
push
dec
mov
xchg
add
call
mov
pusha
addr16
mov
mov
cmp
mov
lret
in
bound
aam
sbb
repz
les
orl
xchg
push
fistpl
jbe
popf
test
jbe
cmpsb
inc
cli
js
repz
mov
test
jno
mov
pop
push
sahf
movsl
pop
fstpt
outsb
mov
enter
loop
pop
idivb
fdivp
and
cmpsl
imul
fs
xor
jge
and
pop
flds
lods
dec
pop
enter
add
loop
fisttps
mov
lcall
ret
mov
push
ljmp
lds
xchg
adc
and
mov
xor
repnz
lock
arpl
xor
ja
into
imul
pushf
out
xchg
fldl
scas
mov
or
fwait
mov
mov
pop
pop
es
in
inc
adc
stos
mov
clc
repz
nop
je
xor
dec
ret
ja
cwtl
daa
loop
jne
dec
imul
scas
or
add
cmp
fstl
aad
sbb
add
fidivl
add
into
push
inc
rcll
xor
popa
mov
aaa
das
mov
pop
aam
pop
mov
in
sub
mov
lcall
add
das
iret
adc
sarb
mov
pop
into
pop
adc
stos
es
push
sahf
or
cmpsl
enter
dec
call
dec
mov
fsubl
es
nop
dec
xchg
pop
or
inc
sarl
lods
mov
loopne
dec
mov
lahf
mov
xor
inc
push
jb
ret
out
fadd
loop
lock
sti
mov
testb
xchg
fnsave
out
mov
mov
jmp
imul
loope
rcrl
out
mov
jecxz
cmc
test
popf
push
push
sub
rclb
gs
jmp
fdivs
test
jl
lods
pop
xchg
into
xorl
bound
mov
rcrl
or
icebp
aaa
cmpsb
outsb
pop
insb
jb
mov
and
subb
push
outsl
lahf
push
jecxz
jmp
mov
jnp
xchg
movsl
pop
lea
aad
pop
popa
adc
sbb
ja
mov
scas
and
cmp
push
leave
dec
or
jecxz
cmp
xchg
push
or
pusha
mov
xchg
clc
rcr
mov
mov
mov
or
mov
adc
dec
icebp
cwtl
aam
dec
cmp
stos
loopne
pop
inc
push
cmc
jle
and
shrl
xchg
xor
add
adc
push
sub
pop
int3
cmp
aam
inc
ss
cwtl
sub
cmc
adc
stc
sar
cmpb
sbb
lea
adc
lock
ss
jmp
or
mov
xor
int3
mov
xchg
mov
pop
pop
int3
xchg
jb
mov
jb
jl
cmp
cwtl
xor
push
dec
fldcw
jle
lea
bound
movsb
rorb
sub
xchg
cmpb
cmp
or
lds
mov
xchg
cmc
push
jbe
xchg
dec
mov
jp
es
or
notb
stos
scas
and
mov
out
fadds
in
sub
adc
push
sub
popf
int3
cli
mov
cli
daa
loopne
jg
fsubs
pushf
sbb
and
mov
push
mov
cmpsl
hlt
in
mov
pop
sub
cld
les
or
fstp
mov
out
pushf
mov
cmc
jmp
out
sahf
into
das
sub
bswap
scas
inc
push
call
pop
cmpb
pushf
jnp
mov
and
scas
cmp
pop
adcb
cmp
aad
mov
adcb
inc
idivl
outsb
das
push
and
push
ss
jmp
sub
loopne
pop
rcrb
mov
outsl
adc
cld
mov
dec
inc
adc
shl
jle
int
movsb
lret
out
sbb
cmp
loop
jge
pop
rorb
loope
cmpsb
scas
aas
ljmp
fistpl
mov
inc
imul
jecxz
fbstp
jnp
imul
inc
ret
scas
dec
int
xlat
inc
mov
jne
hlt
movzwl
aaa
jge
outsl
enter
sbb
lods
in
fcoml
xchg
cwtl
pop
icebp
push
ret
and
sbb
xchg
push
push
fs
jno
jge
push
imul
pop
fdivl
xor
fmul
dec
mov
loope
movsb
inc
pop
aas
push
insb
add
mov
mov
pop
out
jmp
jno
shll
std
loopne
scas
int
mov
cmp
jmp
jb
jmp
push
int
outsb
mov
mov
cs
fisttpl
xor
pop
mov
xchg
fs
sahf
sub
call
xlat
inc
pop
stc
cmp
mov
into
scas
addr16
jnp
push
cmc
dec
lahf
pause
loope
or
push
popf
pop
dec
push
adc
pop
mov
out
and
cmp
enter
daa
rorb
js
sti
pop
push
stos
push
enter
sarb
push
into
adc
mov
mov
aam
adcl
int3
sahf
xchg
sub
jo
ret
sub
out
ret
les
add
lods
xchg
in
pushf
lock
mov
roll
mov
scas
fidivrs
pusha
jne
adcl
call
inc
je
pop
jae
aas
fldt
in
sbb
push
lret
xor
iret
pushl
xchg
xchg
popf
out
addr16
jb
ja
sub
into
mov
pop
sbb
adc
mulb
push
cmp
push
sbb
stos
add
xchg
jae
push
add
mov
jns
or
mov
dec
xor
mov
insl
xchg
pop
jb
aas
ret
aas
in
sbb
cli
sub
sbbb
push
arpl
sbb
sti
jge
sub
inc
stos
sahf
jno
or
int
and
daa
sbb
pop
add
call
mov
bound
scas
gs
jns
push
lods
xor
push
rolb
cmp
jge
push
mov
inc
cmp
test
fistl
mov
sbb
mov
mov
aaa
mov
inc
movsb
les
leave
sbb
push
int
loopne
lock
rcll
lods
stos
test
jbe
cs
repz
xlat
cmpsb
test
aam
adcl
imul
xlat
ds
cli
xrelease
loope
cltd
ret
int
scas
add
push
lock
mov
pop
call
icebp
xchg
dec
cs
or
pop
xchg
iret
pop
sub
lea
sub
pop
pcmpeqw
daa
aas
es
imul
test
scas
cmp
and
out
mov
arpl
aam
or
adc
call
adcl
andl
xchg
mov
cs
cmp
in
movsb
cmc
inc
fs
lds
and
stos
pop
dec
sti
aaa
xchg
shlb
out
jno
jo
rolb
xchg
dec
pop
fmul
invd
jb
inc
dec
sub
or
cld
xor
pop
outsl
rolb
mov
dec
push
iret
xchg
or
push
lods
ds
push
mov
cmp
pop
sbb
arpl
std
in
push
sti
sbb
and
test
add
mov
cmp
cld
mov
jp
cs
mov
imul
jbe
scas
dec
dec
xchg
scas
inc
and
dec
sbb
stos
orl
call
sar
sub
jne
lods
or
adc
sbb
loop
mov
aam
push
cmc
imul
adc
outsb
iret
aad
jge
insb
mov
cmpsb
dec
mov
sbb
or
insl
bound
cmpsb
stc
mov
loopne
cmpsb
xor
fwait
in
dec
mov
imul
popa
pop
in
adc
jae
pusha
test
fnsave
out
mov
inc
jecxz,pn
and
inc
daa
adc
push
xchg
ret
sbb
into
cltd
bound
xor
into
aas
dec
push
mov
dec
ficompl
mov
dec
xor
pop
cld
imul
jl
fbld
jg
es
add
dec
dec
nop
sahf
imul
jge
mov
adc
jmp
adc
outsb
lret
imul
dec
cmp
push
jg
adc
sub
mov
mov
xor
out
data16
jle
iret
pop
xor
mov
push
xlat
cli
xor
js
xchg
xor
add
inc
movsb
or
fdivs
xchg
in
pop
fwait
call
ljmp
xchg
nop
inc
mov
xor
sub
adc
fcmovnu
adc
not
aam
scas
xlat
mov
adcb
cmp
add
pusha
lea
xor
adc
lret
aas
mov
adc
inc
in
das
xchg
add
loope
xor
stos
mov
cmp
cmp
sub
adc
lret
mov
movsb
shl
sbb
lahf
stos
pop
jo
mov
jmp
imul
sahf
jmp
add
lret
daa
xchg
xor
ret
dec
pop
mov
cmpl
cmc
push
popf
ja
and
das
pop
push
aad
mov
cmp
push
mov
clc
push
mov
add
in
stos
aaa
jno
imul
xchg
imul
stos
adc
mov
nop
ds
lods
sahf
jge
scas
pop
sbb
mov
push
xchg
adc
ja
pop
sub
add
xlat
add
push
iret
sub
inc
xchg
mov
fiaddl
lahf
mov
sbb
lcall
inc
jp
and
and
and
in
pop
pop
xchg
out
lret
movsl
insl
or
loopne
in
lods
dec
fisttps
jp
loop
push
repz
and
cli
mov
cwtl
fstp
les
cmc
mov
fdivrl
outsl
pop
insb
xor
arpl
pop
movsb
jecxz
jecxz
into
and
jl
out
popa
movsl
inc
pop
mov
sbb
cmp
daa
mov
add
mov
nop
call
aas
push
push
inc
adc
int3
cli
lods
xchg
jb
out
or
xchg
rcll
sbb
in
icebp
adc
mov
repz
mov
scas
xor
jp
icebp
or
mov
repnz
pop
lahf
sbb
jnp
lods
push
cmc
xchg
dec
pop
mov
sarl
mov
cmp
and
add
int3
ljmp
sbb
pop
fstl
jmp
adcb
adc
mov
xchg
in
xchg
pop
pop
jo
or
popf
cmpl
jbe
movsb
xchg
inc
int
insb
addl
mov
and
pop
scas
dec
in
cmp
cmpsl
loopne
add
push
jno
popa
int3
jge
in
stos
lahf
sbbb
mov
xlat
outsb
pop
test
jge
cmc
or
insb
iret
inc
mov
outsb
repnz
pop
sti
or
cmp
out
setb
mov
je
cmpsl
xor
insb
pop
in
cmp
jo
and
or
pop
in
mov
or
test
lret
cmp
stos
add
rol
outsb
jno
out
imul
movsl
sub
sbb
xchg
lods
jg
adc
insb
or
jge
mov
enter
lods
dec
adc
test
fwait
pop
xor
mov
or
cld
mov
js
add
push
sbb
inc
insb
repz
cwtl
mov
push
inc
xor
push
dec
out
mov
jecxz
xchg
sbb
outsl
push
cld
stc
fisubrs
jae
jge
loope
mov
sub
add
mov
pop
fwait
pop
jnp
shlb
int3
fists
inc
sahf
cmp
movl
ficompl
cmp
sub
or
test
vpshlq
fwait
cmpsb
jl
es
aaa
lahf
inc
iret
mov
jecxz
scas
mov
imul
xchg
mov
jbe
sbb
or
cmp
inc
mov
popf
stos
mov
jne
xor
add
adcl
ljmp
xlat
lods
jb
or
push
jae
pusha
sbbl
or
xor
insb
out
adc
mov
pop
fcomp
pushf
in
inc
xor
xchg
idiv
sbb
jns
andb
push
pop
push
and
sub
cmpsl
adc
pusha
xchg
dec
stos
loop
cs
loope
add
ret
js
dec
enter
pop
outsb
dec
out
ret
mov
pop
daa
insl
add
jle
movsb
add
pop
ficoms
jns
cmp
pop
mov
push
test
aaa
add
cwtl
adc
call
cmp
dec
mov
xor
pop
mov
pop
and
mov
jge
mov
negb
test
das
movsl
pusha
data16
jmp
test
clc
ja
int
mov
lcall
mov
add
xor
xchg
in
pop
dec
jnp
pop
or
pop
cmp
out
cmp
mov
adc
xor
jbe
fldl
pop
mov
test
jmp
out
mov
dec
xchg
ds
xchg
adc
dec
pop
push
inc
inc
sub
test
adc
add
jg
adc
mov
sahf
mov
mov
add
pop
rcrb
repz
mov
cwtl
and
cmc
jg
cmp
inc
jo
popf
sub
push
push
pop
pushl
mov
mov
mov
popl
or
inc
neg
push
mov
jb
xchg
rclb
jl
jg
movsb
test
hlt
xchg
cmp
inc
inc
lds
out
xchg
push
cmpl
mov
lret
fisttpl
sub
mov
xchg
mov
ljmp
jge
fnstenv
xor
push
mov
or
inc
popa
and
or
fldt
stos
scas
adc
and
outsl
scas
and
imul
fs
cmpsb
psrlw
mulb
mov
jmp
aaa
push
add
test
push
adc
stos
sub
add
and
fisttpll
cli
jg
arpl
or
ds
xor
or
dec
cmp
xor
lods
jne
mov
or
inc
xor
mov
jno
hlt
out
loop
aad
xchg
pop
sbb
and
fildll
ret
ljmp
xchg
xor
cs
inc
jg
lea
ss
push
insb
or
pop
in
push
push
inc
dec
insl
dec
mov
mov
in
shll
mov
repz
popf
test
jle
mov
xchg
sub
imul
addl
xlat
out
jge
adc
jl
insb
mov
and
data16
push
xor
xchg
or
jmp
sbb
icebp
mov
negb
pop
dec
cld
mov
add
popa
gs
or
push
icebp
lds
xchg
push
dec
pop
or
cmp
cmpsl
inc
dec
fcoml
pop
xchg
push
mov
out
outsb
lds
dec
jl
insb
fs
cmp
mov
mov
push
sub
lret
lahf
aas
out
fldcw
out
add
imul
push
mov
popa
adc
adcb
push
out
ja
out
testb
mov
jle
gs
je
lods
sahf
nop
rclb
popa
push
push
xchg
and
push
in
add
icebp
xchg
cs
pop
in
ret
ja
mov
mov
cmpsb
bound
push
xchg
mov
sub
xor
mov
xchg
push
in
ljmp
js
xchg
mov
rcrb
enter
push
or
push
inc
sbb
or
sbb
inc
jno
xchg
imul
inc
push
jmp
pop
aaa
shll
xchg
mov
leave
ds
mov
iret
push
scas
enter
inc
pop
movsl
test
into
jo
cwtl
pop
mov
cli
cmp
xor
lret
mov
mov
aam
or
xchg
mov
inc
mov
xor
jns
clc
cltd
mov
or
mov
jns
add
push
hlt
sbb
mov
cmpl
sti
pop
gs
push
test
setb
push
stos
dec
mov
stos
lock
pop
popa
das
fsubr
or
jle
ret
add
jb
adc
xor
enter
jns
jns
mov
es
adc
add
or
push
bound
inc
je
cmp
je
or
pop
cmp
lods
call
pop
add
xchg
adc
inc
adc
inc
mov
inc
mov
loope
add
cmp
dec
xchg
xchg
dec
lea
add
mov
fnstenv
jns
add
loopne
or
adc
sarl
pop
scas
call
or
fidivrl
inc
roll
cld
push
inc
fadds
dec
fisubrs
or
fisttpl
or
nop
sti
push
mov
lds
setg
cmp
imul
jmp
call
or
movsl
xchg
push
addr16
out
xor
and
andl
jmp
jno
movsl
mov
jo
and
mov
stos
mov
gs
enter
iret
add
fsubl
cmp
test
in
jp
jb
mov
adc
clc
call
stos
aad
dec
dec
clc
ds
ja
mov
mov
fisubrs
xorb
cmp
out
scas
or
cltd
mov
aaa
hlt
or
mov
pop
loopne
insl
nop
lods
jmp
cmpsb
ret
push
pop
out
push
fisubl
xor
mov
outsb
aam
out
jmp
sbb
and
push
flds
ss
pop
push
mov
dec
xchg
xchg
cmp
cmp
es
sbb
cwtl
stc
loopne
jmp
arpl
jne
push
es
orl
mov
cmp
lods
jmp
fstpl
xchg
mov
mov
les
push
adcb
icebp
pop
loopne
imul
push
lahf
add
add
fisubl
push
mov
inc
movsb
cmp
imul
jp
mov
push
cmc
repnz
imul
testl
subl
cmpsl
ja
mov
xor
lods
cs
rclb
cmpsb
test
flds
xchg
cmp
or
sbbl
xchg
popa
xchg
sub
jp
inc
movsl
in
mov
test
inc
xor
int3
and
data16
loopne
int
movsb
xor
cmc
cmp
fstl
xchg
andb
icebp
mov
xchg
add
in
rcrl
or
insb
insb
sub
test
pusha
cli
stos
pop
add
lods
jecxz
js
or
mov
adc
add
add
cmp
sbb
int3
inc
fsub
mov
out
xor
mov
stc
pop
cwtl
scas
dec
pop
pop
add
pop
int
sub
pushf
lahf
mov
mov
mov
hlt
xorl
xor
insb
outsl
push
gs
inc
outsb
pop
or
into
jecxz
push
je
add
pusha
add
xor
or
enter
cmp
jae
jmp
aas
lods
jg
add
xchg
jb
mov
xchg
push
and
addb
aaa
or
pushf
sub
mov
cmp
lods
dec
push
cmpsb
or
jmp
inc
das
mov
add
cld
sbb
push
xor
lahf
xor
adc
push
sti
mov
testb
roll
mov
mov
xchg
inc
cltd
sbb
mov
mov
add
mov
cli
repnz
fwait
adc
loop
and
lds
jns
mov
stc
push
les
data16
sbb
jae
xchg
push
cmp
js
jle
xchg
ficompl
frstor
data16
test
repz
ret
icebp
sti
cld
stc
inc
inc
or
popf
mov
cli
push
push
mov
dec
sbb
mov
insl
pop
xor
scas
inc
ret
ret
add
das
stos
lods
push
loope
stc
mov
aad
rol
add
aaa
or
inc
clc
pusha
or
fistl
out
and
xlat
leave
cmp
push
negl
ficoml
loope
push
stos
add
lret
cwtl
les
faddp
enter
mov
int
sub
mov
xchg
lods
loope
fbld
sbb
jle
mov
dec
inc
adc
push
xor
inc
add
inc
and
mov
jge
jle
fisttpl
mov
push
leave
pop
xor
repnz
sub
mov
add
in
sbb
adc
inc
push
ror
dec
jo
bound
dec
pop
lcall
inc
lea
pop
dec
xor
or
dec
push
fst
decl
rclb
ljmp
jp
sbb
das
mov
mov
jno
shlb
dec
adc
popa
and
nop
sbb
sbb
mov
jmp
push
lods
fstl
roll
xor
cltd
out
dec
or
push
adc
lahf
add
mov
daa
outsl
adc
add
push
icebp
cwtd
sbb
outsb
mov
xor
xchg
and
sub
movsb
xchg
and
jbe
daa
mov
clc
push
adc
fadd
pop
pop
mov
test
fsubs
das
jo
push
shll
sbb
adc
dec
mov
mov
imul
mov
xchg
in
and
ds
sub
rcrl
mov
mov
mov
dec
mov
mulb
test
pop
mov
add
fwait
push
sub
repnz
or
fs
push
inc
inc
push
push
lods
mov
sti
clc
sahf
jb
and
dec
nop
lret
int
push
push
jl
and
or
es
mov
xor
push
and
aam
add
dec
shlb
repnz
xor
cmpsl
inc
sub
push
mov
sbb
aam
pop
call
pop
aam
out
fwait
push
and
xchg
push
fs
mov
test
test
ss
pop
fisttpll
mov
sbb
fcomps
std
sub
lahf
dec
out
push
ret
sub
sahf
fwait
mov
frstor
ljmp
and
cmpsl
stos
dec
adc
dec
sub
rep
xchg
cmp
sbb
mov
and
pop
cs
mov
in
lcall
rol
push
int3
dec
lea
dec
xchg
mov
jne
loop,pn
xchg
and
lock
andl
pop
and
jne
adc
jecxz
and
push
cmp
and
jb
or
mov
xchg
cmp
incl
cmpsb
das
dec
fwait
xchg
insl
jbe
into
fbstp
test
or
iret
loop
sbb
lret
hlt
inc
add
fdivs
xchg
or
out
sbb
repz
outsl
shrl
repnz
jns
sbb
gs
imul
pop
outsb
mov
mov
adc
xor
aad
add
in
pop
jle
mov
lret
xor
shl
mov
out
inc
xchg
xor
ljmp
stc
pushl
mov
pop
pop
out
and
push
lock
jge
cmp
cld
mov
xchg
adc
inc
inc
jb
sub
xchg
push
xlat
ss
cmp
fdivr
jae
push
iret
out
loope
arpl
je
imul
jae
adc
jle
jl
add
dec
sbb
lea
mov
xchg
pop
xlat
outsl
ja
inc
push
pop
cmc
xor
movl
outsl
mov
inc
or
cli
cmp
mov
clc
sub
sbb
mov
aaa
mov
mov
popa
adc
ljmp
stos
clc
ja
in
jg
xor
push
sub
pop
pop
lcall
lcall
call
jge
roll
gs
shl
stos
cltd
out
fdivr
ret
dec
test
push
rclb
and
jecxz
movsb
test
dec
push
in
push
mov
insl
jl
cs
sti
jae
cltd
pop
fisubrl
mov
push
call
mov
repnz
test
test
sub
aam
xor
jno
les
nop
hlt
sub
jae
cld
ljmp
add
add
mov
mov
lds
in
adc
fnstsw
xchg
xor
mov
hlt
dec
mov
test
retw
inc
movsb
sar
out
insb
xchg
xchg
in
or
insl
bound
sub
les
or
lcall
shrb
add
movsl
fwait
pop
mov
sub
icebp
xor
or
imul
add
xchg
mov
faddl
push
sbb
outsl
adc
lds
mov
xchg
inc
pop
adc
mov
sbb
fnsave
inc
sub
nop
cli
jecxz
inc
jae
not
jae
xchg
mov
dec
scas
fmulp
inc
inc
ja
jae
and
push
cmp
cli
dec
and
outsl
dec
sbb
ja
pop
nop
jns
pop
xchg
sti
lea
shll
pusha
lretw
imul
cmp
mov
fsubrl
push
mov
jg
push
lahf
adc
mov
push
pop
xlat
pop
sbb
out
jae
xchg
pop
pop
or
imul
loop
and
xchg
adc
push
das
sahf
dec
inc
cli
int
pop
push
dec
and
and
sub
and
dec
jl
bswap
cmp
xchg
sub
cmc
test
add
sbb
imul
mov
cmp
sbb
xor
sti
cmp
xchg
inc
mov
pop
cld
icebp
and
pop
test
mov
fmull
pushf
push
shrl
or
test
loop
mov
aad
xor
and
push
push
in
fcoms
push
das
mov
cmp
mov
sub
loopne
mov
adc
xor
xor
pop
push
cmpl
sub
iret
adc
xor
mov
mov
gs
mov
push
push
lea
lret
mov
rcl
test
fstpt
sub
dec
pop
mov
in
test
inc
test
mov
daa
arpl
hlt
jo
daa
ds
aam
or
mov
push
nop
fwait
or
mov
pop
ret
mov
pop
pop
in
push
hlt
add
push
mov
and
jae
orl
imull
jne
lds
mov
fisttps
repnz
sub
popf
mov
ljmp
add
enter
dec
and
mov
sub
or
jle
or
dec
push
pushf
fcoms
pop
pop
scas
fiaddl
in
sub
dec
xchg
scas
or
inc
addr16
mov
mov
loope
xchg
mov
adc
xor
xchg
std
cmp
call
andl
mov
jae
insl
push
inc
out
inc
mov
cmc
mov
clc
imul
scas
sub
imul
call
sahf
mov
cmp
jno
jecxz
and
sti
je
mov
lds
icebp
adc
push
pushf
jnp
cmp
xor
daa
lods
loope
bound
flds
xor
lods
rolb
push
aam
dec
imul
sbb
ret
xor
mov
out
pusha
imul
test
mov
subb
insb
repz
fdivrl
adc
or
and
cmp
xchg
addr16
stos
or
in
dec
testl
dec
mov
sbb
shrb
push
xchg
shll
push
ret
mov
push
in
jno
mov
arpl
loop
sbb
filds
fmul
insl
pop
or
and
in
out
xor
dec
sbb
mov
xchg
adc
adc
jecxz
push
test
fcmovnb
std
fisubl
push
pop
mov
add
or
and
inc
loopne
lahf
cmpb
ret
cmp
pop
popa
outsl
sub
lods
inc
add
xor
jno
dec
push
nop
jecxz
cs
aaa
mov
cs
pusha
out
fiaddl
movsb
push
and
jnp
daa
icebp
das
iret
arpl
in
mov
pop
push
and
insl
mov
addr16
xor
and
gs
or
loopne
pop
push
cmpb
orl
stos
pop
mov
mov
push
imul
inc
shlb
decb
popf
xlat
fnstenv
pop
rorb
outsb
xlat
outsl
cmp
pop
mov
pop
pop
scas
cmp
aaa
mov
jle
in
inc
pop
mov
dec
ljmp
sahf
push
add
dec
cld
sub
stos
inc
and
and
push
popa
xor
popf
mov
xor
jbe
outsl
mov
jae
and
and
dec
jp
xchg
in
cwtl
pop
adc
mov
push
mov
jnp
movsb
fnstsw
imul
adc
sub
mov
test
test
mov
add
out
lret
cmp
adc
jle
test
cmp
mov
xor
mov
mov
add
lea
das
push
push
data16
dec
dec
in
push
fdivr
mov
sbb
jmp
bound
lds
out
out
cltd
and
push
jmp
push
sub
cmp
lds
cmc
clc
sarl
in
mov
dec
leave
fs
cli
insb
fmull
sbb
push
ds
fbld
gs
loope
adcb
push
or
adc
pushf
pop
and
add
sub
xchg
pop
add
mov
or
cwtl
lea
sub
loop
mov
mov
pop
push
inc
dec
loope
cld
js
lret
xchg
adc
pop
xor
jmp
adc
mov
movntps
push
jb
popa
push
clc
dec
sub
xchg
dec
cmp
and
lea
adc
call
mov
imul
loop
jb
scas
mov
and
das
popl
std
out
out
jnp
roll
dec
andb
xlat
xchg
lret
mov
ja
mov
push
cmp
cltd
sub
xlat
inc
xor
and
int3
out
jno
inc
mov
mov
pusha
inc
cmpl
jmp
xchg
pop
into
ss
inc
xchg
imul
xchg
divb
jbe
enter
xor
pop
and
inc
pop
mov
xor
les
jns
cli
jnp
sub
cmpsb
scas
inc
or
jns
and
mov
adc
cmp
lret
dec
xor
or
sbb
imul
in
sbb
lods
shl
test
enter
cmp
iret
nop
xchg
out
jge
mov
sbb
sub
movsl
pop
push
shll
jo
adcb
mov
cmp
mov
xlat
call
test
cld
dec
loop
dec
aaa
sub
or
in
ljmp
and
cmp
pop
push
ja
lock
data16
xor
outsl
data16
repz
xor
gs
jae
mov
rorb
inc
jne
nop
stos
loope
inc
stos
inc
sahf
leave
stos
lods
stc
mov
add
mov
das
jne
int3
push
pop
hlt
push
sbb
xor
and
loope
std
and
das
push
int
sti
or
add
pop
adc
mov
sub
mov
jb
push
sub
ljmp
cs
pushf
push
xchg
adc
clc
gs
sbb
in
push
pop
scas
push
pop
test
lret
loope
rorl
or
xor
pushf
sub
jp
fnsetpm(287
enter
lods
pusha
ret
or
inc
data16
scas
add
cmpsb
and
in
xchg
add
call
cwtl
push
inc
dec
sub
push
in
movsl
unpcklps
scas
loopne
andb
and
push
enter
insb
fldl
cmp
mov
dec
in
insl
fwait
int
insb
add
cld
jge
or
jmp
dec
jle
cmpsb
mov
leave
jmp
xlat
xor
rcrb
push
outsl
jmp
cmpsl
xlat
ret
dec
jle
nop
addr16
xchg
insb
aaa
sub
xorb
add
adc
jne
pop
mov
mov
mov
je
fsubrs
push
lret
mov
mov
sub
mov
and
std
jb
movsb
movb
ret
add
test
jne
mov
insb
jmp
inc
xchg
dec
sub
xor
hlt
xor
cmp
sub
int3
inc
outsb
icebp
iret
stc
xor
inc
les
xor
or
rclb
dec
inc
xchg
and
lret
push
popf
ret
out
outsb
dec
ja
pop
call
out
lods
clc
push
jecxz
popf
pusha
push
mov
sub
mov
sub
aaa
add
es
cmp
and
sbb
rorb
outsl
mov
daa
mov
inc
xorb
and
and
aad
fsubrs
iret
xor
loopne
fwait
jg
das
inc
int
stc
test
mov
or
push
add
dec
shll
mov
jns
clc
inc
aad
and
pop
xchg
gs
movsb
movsb
xlat
xor
enter
in
lcall
xor
ja
test
add
xchg
in
imul
movsb
hlt
or
jnp
fs
mov
or
leave
das
inc
movsb
loopne
aad
pop
jns
rcrb
inc
out
call
ja
mov
pop
jns
or
test
push
out
adc
ficoml
ds
xor
cmpsb
lock
mov
mov
ja
push
fsubrs
dec
scas
leave
movsl
and
sub
pushf
push
testb
out
loope
mov
pop
repz
add
ficoml
sti
jno
xchg
je
cltd
sub
dec
pop
mov
mov
out
pop
inc
sub
jg
xor
movsb
and
lea
add
push
pop
loopne
xor
ljmp
ss
dec
or
test
inc
mov
mov
push
xor
inc
ljmp
jno
and
sub
mov
in
adc
sbb
scas
mov
mov
in
je
sbbl
and
xor
aad
add
ja
ds
pop
mov
int
jb
sbb
ja
cmp
pop
adc
xchg
aad
insl
lods
mov
nop
pusha
sub
js
mov
scas
js
ds
aam
outsl
or
pop
sbb
popa
cmp
push
inc
and
sub
lahf
int3
mov
xchg
lcall
push
stc
xorb
sahf
mov
fisttpll
or
cmp
xor
lea
jg
fstpl
sbb
add
mov
add
ss
test
pop
jns
ror
imul
mov
iret
jg
mov
imul
mov
push
sbb
loop
in
push
lods
fstps
sub
rclb
pop
mov
jb
in
mov
fistpl
fmul
xor
outsb
mov
mov
sub
xchg
pop
aam
aam
aam
ret
mov
rcll
xchg
adc
or
dec
dec
xchg
imul
dec
lock
notb
dec
add
insl
jg
retw
int3
dec
push
ja
in
es
cs
and
fdivr
popl
addl
add
les
std
or
movsb
cs
xor
mov
dec
into
cmc
mov
sub
into
dec
pop
mov
cmp
imul
jp
cmp
adc
mov
fidivs
jns
daa
mov
ja
iret
cmpsb
mov
pop
int3
or
call
xchg
test
addb
test
push
pop
xchg
icebp
mov
loopne
lock
mov
add
ljmp
inc
mov
pop
adc
jle
push
test
jno
lock
jo
fcomps
movb
in
movsl
mov
idiv
mov
pop
inc
dec
pop
incl
bsr
ficoml
das
add
inc
aaa
lret
js
test
or
push
mov
popa
mov
pushf
sbb
das
pop
cs
mov
push
lds
jg
jl
loopne
xchg
mov
movsb
or
mov
or
gs
mov
pop
lods
or
shlb
sbb
adc
dec
push
adc
push
nop
incb
mov
lahf
iret
test
pop
pushf
imul
stos
ficomps
xlat
adc
push
mov
inc
jge
mov
dec
or
xor
jb
and
stos
mov
aad
cmpsl
fs
movsl
or
stos
aas
push
or
pop
or
aam
out
mov
das
lcall
jl
mov
cmp
push
loop
js
mov
mov
lods
loope
fidivrs
cltd
push
and
xor
push
or
and
or
jnp
incl
jnp
xchg
or
mov
stos
jmp
repnz
mov
dec
gs
mov
sub
rcrl
lea
outsl
xchg
insb
sbb
in
ja
inc
fisubs
jle
xchg
sahf
cltd
fld1
and
imul
into
fadd
cmp
in
adc
push
sub
mov
sub
es
adc
iret
sub
fists
adc
jne
mov
pop
jbe
mov
mov
xor
lea
add
rol
mov
cmc
xchg
xchg
jns
cltd
sbb
sbb
fs
mov
mov
push
push
stos
cli
ret
jge
ret
leave
popf
cmp
inc
pop
andl
aad
rol
push
pop
and
xchg
in
fsubs
cli
add
clc
inc
loope
outsb
test
lods
jp
and
sub
mov
outsl
fildll
nop
je
adc
mov
xor
cmc
pop
mov
cmp
shlb
mov
xor
pop
mov
into
adc
adc
fsts
inc
or
imul
test
adc
shlb
xor
inc
ds
nop
imul
sbb
push
adc
js
ss
push
and
dec
clc
xchg
dec
lret
data16
shlb
xor
clc
sub
adc
lods
jmp
xchg
sbb
lods
stos
cs
rolb
pusha
jl
stos
loop
test
stos
sbb
movsl
cmpb
clc
sbb
ret
push
stos
mov
mov
sbb
popf
decb
dec
dec
xor
sahf
or
cld
loopne
push
mov
repnz
mov
mov
add
js
pushf
or
cmc
push
cltd
sub
jg
fs
scas
call
lcall
stos
mov
adc
imul
mov
xlat
xchg
cmp
push
pop
dec
das
inc
sub
in
loopne
sub
fadds
or
xchg
call
in
jmp
xchg
push
add
xchg
sbb
loope
bound
mov
cld
scas
pop
loopne
mov
cmp
movsb
lods
mov
ret
xlat
mov
mov
les
mov
les
push
mov
lods
xchg
push
mov
test
loop
cmp
inc
push
mov
clc
xchg
insb
push
loopne
pop
roll
fptan
sbb
hlt
mov
add
jle
mov
push
js
cmpsl
movsb
int
in
jp
mov
cld
jmp
mov
mov
ret
sarb
dec
add
int3
mov
loop
push
pop
jle
mov
xchg
sbb
pop
sahf
faddp
addr16
sti
sub
movsl
cltd
outsb
xchg
cmc
add
hlt
push
inc
dec
mov
pop
dec
jmp
fstl
lods
pop
popf
jp
mov
mov
ret
push
int
test
adcl
push
pop
jp
adc
jmp
lahf
pop
fdivr
insb
jmp
xor
ds
jmp
and
into
sub
in
lock
sub
cwtl
andps
mov
add
or
cltd
adc
popf
xchg
pop
loopne
hlt
scas
ja
sub
xor
clc
cltd
push
jp
sahf
dec
mov
repz
push
fiadds
dec
dec
jae
pop
das
jbe
push
lret
les
loopne,pt
mov
bound
add
and
mov
aaa
mov
std
loope
sbb
jno
inc
jno
pushf
inc
dec
sbb
loope
inc
out
xlat
and
inc
pop
ss
push
adc
loopne
rorb
insb
push
push
add
inc
in
and
inc
fidivs
sarb
adc
loopne
lcall
insl
xor
dec
sti
jb
or
add
scas
pop
inc
and
push
gs
xchg
push
or
shll
mov
sub
daa
push
mov
daa
les
lahf
adc
in
push
cmpsb
outsb
xchg
mov
and
mov
das
mov
pop
test
test
subb
cmp
sbb
xor
packssdw
cmpsb
call
mov
cli
movl
out
add
pop
out
adc
pop
jb
testb
addr16
push
test
ja
stc
jbe
divl
das
sub
pop
loope
mov
loopne
insb
adc
push
test
jns
repnz
ss
int
cmp
mov
dec
jge
push
sbb
lahf
pop
in
sbb
fs
mov
push
mov
push
icebp
dec
in
fstl
in
mov
mov
or
pop
in
jmp
add
cmp
jae
ds
cltd
mov
movsl
adc
sbb
push
nop
dec
ret
or
xor
push
inc
xor
in
dec
popa
dec
imul
das
scas
jne
and
pop
notl
adc
dec
je
popf
sub
sub
mov
jae
or
cli
ja
push
jbe
stc
inc
dec
test
mov
sbb
test
sti
mov
movsl
lock
cmp
and
out
data16
jmp
nop
int3
or
test
or
adc
std
cmp
outsb
and
push
lret
mov
mov
sti
inc
leave
shlb
sbb
lcall
les
dec
int3
ljmp
xor
rcr
out
scas
push
into
sbb
addr16
in
cld
or
sub
int3
je
push
out
sti
repnz
mov
imul
or
mov
cmp
cwtl
in
push
push
mov
pop
dec
cld
clc
push
andl
mov
jmp
dec
stos
mov
push
insl
mov
cli
jne
mov
cmpsb
lods
push
mov
mov
out
sbb
sbb
sub
and
mov
fcmovnb
xchg
and
nop
js
pop
jne
insl
adc
test
andl
xor
xor
push
shlb
repz
jge
jbe
dec
inc
jecxz
add
cmp
in
je
bound
scas
daa
mov
sarl
bound
mov
outsb
adc
mov
mov
sbb
adc
mov
jb
dec
movsl
or
pop
mov
inc
adc
push
add
ja
xor
in
or
testb
xor
xor
out
mov
cmp
test
in
xor
imul
push
push
add
sarl
in
push
js
lds
add
imul
xor
and
mov
jae
in
or
loopne
cmp
in
cmp
movsl
hlt
lods
test
add
push
push
in
xchg
jo
inc
add
pextrw
and
shlb
add
aad
inc
fldl
stos
mov
sub
arpl
jecxz
test
js
imul
inc
lods
bound
mov
test
fbstp
loopne
mov
lret
inc
xchg
lcall
mov
dec
enter
xor
insb
xor
pop
lcall
sti
dec
xchg
je
mov
cmp
fidivrs
xor
aaa
xlat
pop
sub
jge
push
pushf
dec
cmc
push
xor
lods
mov
jle
jae
xor
jns
pop
dec
sbb
dec
sbb
pop
jle
iret
lock
push
sbb
xor
cmc
cmp
icebp
adc
push
and
scas
mov
test
pop
xlat
push
cmp
push
test
gs
int3
mov
cmp
fistl
orl
insb
mov
mov
dec
adc
scas
loope
clc
scas
test
test
int3
ret
add
dec
sub
ds
mov
ret
incl
add
inc
mov
ret
inc
or
jbe
push
ret
sbb
aad
push
adc
cltd
decb
bound
xor
jmp
in
lret
mov
or
jno
aaa
jge
cmp
push
jge
sbb
lods
mov
lods
stos
inc
fstps
mov
pop
xchg
ficoml
ret
jmp
xchg
repnz
call
sti
movsl
aad
jmp
pop
das
in
or
stos
fwait
mov
jecxz
test
xchg
jge
sbb
mov
or
test
outsl
pop
or
popf
sbb
and
lret
jg
mov
jp
xchg
pop
mov
arpl
ret
jle
add
add
jle
nop
pop
cltd
jno
push
jg
call
inc
jae
xor
scas
xchg
push
pop
leave
mov
push
mov
std
sbb
push
add
or
cmpsl
stos
fstl
xor
popa
mov
das
inc
mov
fwait
adc
sbb
leave
ljmp
aam
movsb
push
xchg
pop
stos
cltd
scas
fstpl
xchg
push
fs
outsb
dec
std
icebp
mov
in
nop
addr16
push
push
pop
cmp
sub
insb
sbb
negb
dec
dec
ret
sbb
loopne
inc
xor
and
adcl
sahf
fsts
cld
aad
stos
mov
ficoms
out
into
arpl
inc
aas
test
fwait
mov
lcall
jne
jne
mov
add
cmp
ds
jo
cwtl
stos
hlt
jle
daa
pop
cmp
add
in
out
sti
loopne
mov
push
xor
xor
cld
xchg
ds
or
loop
mov
mov
xchg
enter
push
pop
push
mov
addl
add
inc
out
fnstcw
pop
stc
mov
dec
adc
lcall
stos
xchg
inc
outsb
fmull
pop
test
popa
add
in
and
fs
jl
add
pop
cmpl
jne
xor
and
mov
std
hlt
mov
loopne
pop
jb
inc
test
nop
js
insb
mov
or
dec
enter
xacquire
je
loope
addl
outsl
roll
outsl
icebp
popa
out
icebp
daa
mov
out
jbe
scas
push
pusha
push
mul
mov
mov
cmp
pop
shrb
fldcw
lret
cmp
mov
pusha
cmpsb
and
inc
pop
adc
xor
jbe
scas
xchg
pop
fucomp
pop
mov
or
and
gs
negl
mov
jp
mov
push
push
inc
cmpsb
sub
jb
shrl
xor
mov
out
xchg
mov
mov
jo
pop
test
xchg
sbb
fnstsw
pop
jp
xor
icebp
popf
jns
cli
leave
lahf
push
mov
fnstcw
imul
rcll
xchg
pop
mov
adc
lock
dec
loopne
stc
sub
icebp
mov
cs
mov
dec
pop
mov
xchg
mov
mov
mov
test
xchg
mov
pop
inc
filds
cmp
dec
and
mov
push
cld
mov
xorb
sub
out
fistl
loop
data16
les
push
or
jecxz
repz
jp
xor
mov
and
xchg
bound
lret
loop
insl
jp
popa
insl
xor
test
xchg
jle
pop
fisttpl
scas
push
pop
inc
std
aas
js
and
loope
mov
inc
sti
and
test
adc
mov
inc
popf
mov
pop
jne
mov
jnp
mov
jo
dec
or
or
adc
and
push
lret
cwtl
hlt
daa
sub
inc
fsubs
lret
arpl
sub
and
jle
jb
and
icebp
pushf
test
arpl
xchg
ja
je
icebp
test
xchg
ss
sub
pop
fs
enter
xchg
enter
sbb
xor
orb
cmp
push
mov
shll
push
daa
or
cmp
adcl
mov
pop
mov
and
stos
sar
push
test
test
inc
repz
nop
or
inc
cmp
movsb
sbb
push
adc
aaa
cld
and
mov
sub
mov
imul
mov
jecxz
jno
frstor
xor
cld
cmc
adc
or
das
sub
push
testb
movsl
mov
pop
pop
push
cmpsl
in
and
pop
out
xor
mov
inc
pop
mov
jp
cmp
cwtl
popf
mov
push
insb
pusha
mov
and
inc
mov
xchg
repz
test
jne
push
int
rcl
scas
aam
ret
leave
shrl
sarl
jl
pop
jmp
mov
rorl
push
add
push
rclb
jb
lahf
mov
ja
jg
in
scas
jecxz
rorl
push
push
test
pop
sti
xor
cmpsl
nop
mov
push
fs
mov
push
imul
push
imul
je
sub
pop
ljmp
sbb
std
jg
loopne
pop
outsb
int
insb
repnz
fs
xchg
jmp
push
xchg
push
lods
cli
pop
imul
pop
push
inc
mov
rclb
pop
cltd
aam
pop
push
pop
hlt
es
xchg
lock
mov
cmc
call
add
jnp
insl
lgs
inc
ljmp
iret
test
sbb
or
nop
sub
sub
xchg
sbb
dec
inc
js
cwtl
iret
repnz
xchg
sub
mov
les
cmp
out
popf
hlt
jge
or
ljmp
add
fmuls
adcl
mov
jo
fimull
sbb
mov
in
adcb
loopne
adc
cmp
jmp
lret
lods
ds
rep
fs
cmp
mov
repz
in
xor
and
lods
lcall
dec
push
loopne
mov
cwtl
nop
pop
hlt
mov
mov
pop
mov
push
rcrl
lret
stc
push
fdivrl
inc
repz
aas
daa
cld
pop
mov
test
arpl
sbb
inc
stc
or
push
and
mov
stos
sbb
mov
arpl
push
lahf
jmp
jbe
call
xlat
or
xor
mov
shll
mov
lea
push
push
mov
into
inc
dec
es
leave
testl
lcall
cmp
push
in
xor
test
ret
mov
xor
leave
pop
cmp
pop
orl
lcall
jns
test
stc
sbb
in
mov
adc
xor
arpl
scas
lret
dec
movsb
ret
push
push
out
sub
and
sbb
mov
das
pop
insl
sarl
jno
xor
mov
or
arpl
dec
setp
div
rcll
int
add
add
jmp
jbe
cmp
inc
enter
cli
addr16
xchg
jae
mov
xchg
xchg
cmp
push
iret
dec
loope
jnp
repnz
aaa
test
dec
dec
mov
cmp
ret
add
lds
psubsb
outsl
inc
call
mov
lret
xchg
sub
jmp
lock
cmp
mov
jp
inc
xchg
push
mov
sub
push
int3
or
loopne
rol
out
sbb
cltd
lret
int3
lock
aaa
xorl
xor
hlt
lea
mov
or
xchg
aam
push
add
adc
and
ret
fwait
xchg
out
adc
and
je
mov
stc
arpl
cwtl
jbe
and
lods
xchg
pop
iret
pop
loop
ret
add
loopne
js
jg
mov
fstpt
mov
int
push
cmpsl
es
repnz
mov
jl
sbb
add
shlb
lds
dec
popf
sbb
jns
cmp
les
bound
stos
insl
mov
or
stos
adc
out
and
inc
fildll
dec
test
pop
ret
lods
mov
xor
xchg
scas
cmp
rol
dec
lret
add
sub
cs
iret
sbbb
lea
sub
into
mov
push
push
hlt
fnstenv
in
pop
dec
cmp
sbb
jne
mov
repnz
outsl
lahf
xlat
dec
sub
cmp
push
arpl
and
mov
add
inc
jae
pop
cmp
pop
add
jmp
adc
mull
dec
adc
ret
andb
popl
pusha
mov
mov
iret
mov
data16
lret
inc
pop
outsb
fs
add
aad
dec
jne
cmpsb
push
adcl
xchg
jb
mov
arpl
pusha
cmp
push
push
rorl
xor
pushl
andl
mov
sbb
aas
jne
mov
in
ret
pop
loop
cmp
pop
nop
or
aad
dec
in
daa
mov
and
popf
lea
xor
dec
pop
pop
in
movntq
out
xor
adc
aas
push
mov
and
rclb
jp
add
leave
pop
sbb
xlat
fnstenv
push
and
add
mov
dec
ds
xor
add
push
pop
clc
gs
scas
and
out
xchg
mov
popa
pop
dec
jg
mov
in
es
xor
movsl
and
add
call
packsswb
mov
mov
mov
imul
inc
js
xor
cmp
mov
in
ret
dec
ret
push
push
sbb
jge
inc
and
stos
je
and
xor
jl
lods
mov
outsb
fdivl
stc
cmpsl
and
mov
jecxz
or
mov
mov
xor
pop
adc
cmpsl
push
sub
cmp
fs
cwtl
pop
movsb
packssdw
dec
inc
push
mov
shrl
je
mov
lret
or
or
lcall
lret
inc
sub
mov
jg
and
icebp
test
add
pop
mov
jmp
int
in
pop
movsb
es
jp
adc
add
jnp
lret
je
shl
mov
insl
pop
push
dec
sbb
hlt
addr16
hlt
lods
sub
addr16
insb
mov
ljmp
push
cs
movsl
jmp
jo
push
cmpsb
mov
daa
or
sahf
out
es
xor
adc
add
mov
test
sbb
mov
push
add
ficoms
and
loope
aas
leave
stos
pop
cmp
pop
pop
push
movsl
push
add
jbe
cli
sbb
add
aad
pop
ficoms
xchg
push
pop
jge
imul
mov
dec
fdivrl
mov
fldt
inc
stc
mov
and
cmp
gs
sbb
cmp
push
cmp
cltd
cld
jl
mov
mov
pop
jno
mov
insl
push
movsb
sbb
in
lods
sub
pop
into
sbb
ret
mov
push
dec
pop
mov
insl
or
or
ds
mov
dec
mov
push
inc
inc
xchg
pop
fldcw
loopne
and
loopne
sub
adc
push
into
and
sahf
icebp
cmc
das
add
pop
mov
rclb
popf
adc
invd
lock
or
pop
dec
fcmovbe
sub
repnz
aaa
out
daa
std
mov
lret
add
and
mov
jo
sbb
jb
xchg
rorb
in
add
popa
jl
sbb
lcall
rorl
jno
cmp
push
or
push
mov
or
push
daa
jo
or
sbb
xor
imul
mov
push
filds
dec
fs
mov
ljmp
push
push
push
sti
cs
arpl
pop
dec
dec
loop
sbb
mov
and
aas
pop
add
xlat
mov
mov
pop
adc
jmp
lea
stos
mov
dec
ja
cltd
in
jge
out
out
daa
jmp
insl
mov
cmp
jl
pop
push
and
mov
pop
xchg
push
cmp
mov
pop
js
pop
mov
sbb
inc
or
rcrb
sbb
pushl
bound
jmp
sbbb
jae
vmovupd
or
nop
push
jle
outsl
inc
int
adcl
adc
cmpsb
push
mov
adc
pop
int
lcall
mov
xchg
cmp
dec
add
and
add
insl
ja
mov
jbe
notl
stc
jbe
dec
push
lods
push
mov
outsb
outsl
jnp
aaa
out
push
xor
adcl
jp
ljmp
dec
lret
lcall
and
xchg
cmp
xchg
dec
jmp
lahf
aam
nop
cmc
sbb
cs
jnp
ret
push
cs
cmpsl
mov
lds
icebp
clc
xchg
dec
int3
in
jp
xchg
sbb
vpmacsdd
sub
sbb
movsl
pop
daa
or
xor
cltd
dec
bound
stos
arpl
loopne
mov
pop
aad
and
xchg
sbb
jecxz
fdivrs
repz
das
push
cwtl
mov
out
addl
dec
push
sub
cmp
pop
fisttpll
adc
dec
js
jns
mov
add
fimuls
shl
push
aad
sub
mov
aam
add
add
test
mov
icebp
sbb
mov
xchg
add
inc
stc
bound
xchg
test
idivl
add
call
cmpsb
stc
es
sub
or
in
add
ss
test
hlt
iret
fcmovb
insl
imull
or
jae
loop
mov
xor
push
insl
fstpl
out
push
mov
xchg
pusha
xor
inc
push
xor
in
xchg
add
ss
outsb
scas
call
pop
mov
jns
or
mov
pusha
mov
adc
dec
shrb
xchg
stc
in
jmp
push
addr16
outsb
hlt
cmp
mov
sub
inc
loop
imul
sbb
lods
cwtl
dec
mov
inc
inc
mov
notb
pusha
repnz
xchg
mov
mov
imul
cmp
out
ja
icebp
dec
lret
std
sub
push
adc
movsb
cmpsb
jae
cmp
xchg
pop
ss
stc
push
test
sbb
aaa
mov
cmp
insl
cs
mov
pop
lcall
pop
xchg
sbb
jno
mov
pop
pop
cs
test
lds
dec
sub
mov
insl
dec
xchg
repnz
ds
xchg
sbb
test
mov
mov
jo
repnz
adc
shll
mov
mov
lahf
add
xchg
mov
cmc
mov
inc
mov
ret
adc
or
inc
mov
adc
maxps
mov
dec
dec
cwtl
mov
mov
or
stc
adc
adc
inc
xchg
pop
ret
in
call
jge
ss
js
push
js
pop
jmp
mov
cmp
inc
ret
mov
dec
test
rorb
pop
jmp
lods
testl
jb
test
pop
xor
xchg
rolb
das
sub
scas
xchg
xchg
les
iret
jecxz
pop
scas
repnz
fisubrl
imul
mov
cmp
mov
idiv
loopne
adc
adc
mov
out
mov
icebp
xor
mov
std
pop
cmp
xchg
and
pop
sub
nop
test
clc
push
xchg
lahf
in
scas
pop
dec
and
cld
loope
inc
lahf
push
inc
aam
inc
jnp
movsl
cmp
ret
insl
jl
insl
int3
sub
out
daa
adc
loopne
cmc
adc
sub
xlat
adc
lock
mov
subb
dec
dec
ficoms
dec
gs
adc
clc
fistps
shlb
push
lahf
lods
aaa
flds
pop
mov
sub
cmc
jle
xor
repz
aaa
jp
pop
mov
testb
icebp
cs
sti
push
js
pop
or
jg
cs
push
fldl
in
push
cmp
jae
idivb
out
cwtl
xor
insl
push
inc
cld
inc
sahf
in
xchg
ss
inc
cmp
sub
mov
push
aam
mov
mov
push
jecxz
test
jbe
inc
inc
bound
ljmp
iret
add
add
pop
inc
cmp
mov
in
xor
mov
popa
dec
adc
mov
add
or
push
sahf
loopne
mov
mov
or
adc
mov
cs
fidivl
or
lea
rorl
lock
push
add
mov
and
mov
sub
movsb
or
lods
xor
mov
jne
dec
xchg
neg
call
pop
shr
or
dec
jle
push
mov
mov
pusha
bound
cmp
popa
push
mov
pop
insl
nop
xchg
push
dec
xor
std
jnp
mov
aas
sbb
dec
inc
mov
push
xchg
scas
std
outsl
iret
mov
lahf
jg
push
pop
fs
fnstcw
pop
sbb
push
jbe
push
inc
jns
mov
add
inc
or
ss
fstpt
ret
loopne
fdivl
xor
jecxz
or
xchg
jbe
das
shlb
mov
adc
stos
addb
and
iret
and
or
stos
xchg
xor
push
lods
or
lods
or
adc
and
scas
pop
jge
fstps
ffreep
movsl
lcall
test
xchg
jmp
int3
loop
xor
fidivrl
mov
inc
push
and
sbb
std
mov
mov
clc
sub
sub
rcll
lea
out
cmpsl
shl
xor
ret
add
stos
out
mov
mov
pop
xor
mov
or
fbstp
imul
sbb
xchg
jp
cmp
and
xor
ret
cmp
fistl
lods
push
push
stos
in
dec
aam
mov
or
addr16
sub
jo
popf
pop
arpl
je
mulb
mov
pop
dec
xor
jl
pushf
sbb
sti
fsubr
or
sub
insl
inc
jns
push
dec
pop
pop
imul
cs
jg
xor
inc
popa
test
adcb
pusha
dec
jb
mov
push
clc
cmp
cmovo
test
cmp
test
pop
jnp
ds
gs
shrl
lcall
andb
hlt
ret
jns
sbb
pop
outsl
pop
cmp
mov
jecxz
stos
cmc
xchg
rol
lods
sbb
sub
lcall
lahf
aaa
jns
out
data16
dec
rorl
or
xchg
sub
sbb
aad
out
sub
and
xchg
aas
dec
xchg
jbe
test
andb
imul
xor
out
enter
sbb
mov
int3
sub
xchg
and
daa
insb
mov
stos
mov
adc
aaa
out
test
cmp
dec
mov
add
add
jl
loopne
mov
push
adc
std
inc
xchg
add
cmp
loop
mov
inc
insb
inc
imul
xchg
push
jg
jne
stos
sbb
popf
sbb
arpl
dec
loopne
aad
mov
adc
mov
sub
scas
inc
and
imul
stc
into
test
pop
lea
jmp
lods
inc
jecxz
cmp
sbb
sbb
mov
push
lcall
dec
pop
enter
sbb
inc
ja
jns
inc
mov
xchg
loopne
mov
fbld
mov
mov
mov
ljmp
lods
mov
cltd
jnp
add
imul
repz
bound
cmp
mov
jl
stos
xor
aas
sub
xchg
fistpll
shll
addl
pop
xchg
xchg
push
out
popa
sub
rcr
xor
scas
pop
sub
lcall
and
xchg
std
mov
int
jne
dec
lcall
fidivrs
pop
sbb
aaa
adc
xchg
aad
imul
mov
xchg
aas
ret
test
dec
enter
inc
adc
sub
and
mov
popf
lahf
xor
push
dec
sub
aad
jl
adc
out
xchg
cmp
les
mov
movsb
vmovaps
cmp
imul
cmpb
jo
mov
xor
enter
and
movsb
lret
clc
and
shrl
push
jmp
cmp
lods
jmp
insb
push
jns
inc
rorl
or
mov
lods
push
and
icebp
or
xor
xchg
jbe
dec
adc
sub
mov
dec
jmp
pop
addr16
mov
jnp
das
sbb
pop
std
and
xchg
iret
xchg
lock
mov
pop
std
push
loop
test
arpl
lods
jmp
mov
test
push
jnp
inc
stc
daa
inc
enter
sub
sbb
rcr
sub
pop
dec
aaa
icebp
cwtl
lahf
pop
cltd
or
push
mov
cmp
test
sub
imul
xor
shl
fbld
push
sub
dec
outsl
jmp
xor
push
sbb
xor
mov
call
push
pop
ror
push
and
sti
cwtl
setno
adc
jl
push
or
xchg
xacquire
jp
mov
je
sub
or
lds
sbb
dec
ficoms
sbb
std
iret
inc
faddl
cmp
aaa
loope
in
aas
ja
or
inc
mov
idivl
test
and
dec
add
mov
add
sbb
adc
addr16
xchg
mov
repz
jno
cmp
push
xor
sti
inc
cltd
push
test
cmovns
mov
and
mov
mov
lcall
lahf
popf
fsubrs
xchg
dec
rorl
pop
icebp
sub
cmpsb
push
mov
pop
sub
pushl
dec
ljmp
mov
cli
shl
add
or
in
mov
cmp
fwait
sti
in
es
bound
mov
add
sub
lods
icebp
sub
jae
mov
insl
and
loope
test
call
mov
add
test
mov
sbb
loopne
sbb
dec
sbb
test
cmp
add
pop
cmp
sahf
adc
movsb
mov
jbe
cmpsl
dec
mov
shlb
cld
daa
push
pop
push
mov
push
jmp
sbb
mov
in
inc
jo
cmp
aad
xor
js
push
adc
inc
out
mov
mov
cmp
adc
jle
nop
jbe
clc
call
cli
cmpsl
scas
bound
xor
xchg
push
call
xor
das
sti
iret
mov
cld
xor
ljmp
arpl
imul
stc
cs
fnstenv
sti
push
jmp
pop
rcll
jmp
mov
dec
js
sbb
loop
sbb
out
push
scas
popa
inc
mov
insb
xchg
sbb
int
inc
mov
int
std
sub
cmp
dec
in
mov
add
movsl
dec
in
add
fsubrl
arpl
into
jae
out
cmpl
xchg
lods
pop
add
insl
shll
inc
inc
sub
or
jo
pop
or
jmp
inc
and
xchg
fstp
mov
enter
xor
pushf
iret
mov
sbb
mov
loop
pusha
out
stos
movsb
adc
bound
sti
xor
xchg
jno
inc
addr16
mov
test
mov
fcoms
push
adc
push
and
dec
rorl
dec
jne
or
sub
cmp
mov
std
push
icebp
lods
mov
test
jns
cld
js
ds
mov
push
fdivp
and
sbb
sbb
fwait
mov
pop
lea
lods
sub
aad
sbb
pop
or
test
xor
in
cs
pushf
and
sub
loopne
mov
shll
pop
adc
push
loope
sub
cmp
in
in
add
xor
mov
cmp
or
push
hlt
jb
pop
in
stc
sbb
mov
or
pushw
imul
inc
mov
fwait
into
in
add
popa
pop
movsb
sub
sbb
inc
out
mov
ja
xor
add
cmp
ja
jo
int3
lods
mov
mov
push
je
jecxz
loope,pt
push
add
mov
push
insb
lahf
mov
pop
gs
sbb
xor
cmp
and
ljmp
cwtl
repnz
fwait
adc
in
mov
sbb
mov
test
xchg
jg
cmc
mov
adc
roll
jle
in
pop
mov
jae
push
sub
enter
ljmp
or
cmpsl
dec
leave
ja
and
xlat
lahf
int
cmp
insl
insb
fdecstp
dec
lods
faddl
pushf
dec
add
mov
add
bnd
jnp
mov
inc
xchg
sti
iret
jae
add
sub
xchg
shlb
sti
or
nop
rorb
test
fsubs
popf
rolb
ret
test
mov
push
adc
xchg
pop
inc
add
lea
adc
fisttps
cmp
jb
in
mov
xchg
fnstenv
xor
jle
repnz
push
mov
ss
mov
jg
in
push
mov
mov
pop
or
pushf
fdivs
scas
adcb
insl
push
push
or
xor
ret
cmc
xlat
and
orb
and
mov
or
push
addr16
inc
test
and
and
dec
fsubr
or
mov
cltd
mov
dec
push
cmp
into
iret
aad
test
loopne
inc
xorl
testl
fs
fstps
fistps
jbe
aam
xor
mov
inc
stc
mov
mov
iret
fstpl
les
jge
pop
or
popf
mov
sahf
mov
and
jno
and
in
mov
icebp
xor
lcall
outsl
push
or
insb
mov
inc
lock
mov
xchg
pop
jno
lcall
aaa
iret
test
dec
ja
push
mov
mov
fld
test
pop
jno
loope
mov
les
push
add
cmpsb
jne
into
mov
fistpll
sarl
cmp
jae
add
popa
je
in
mov
nop
cltd
ret
insb
adc
js
sub
ljmp
out
fs
push
arpl
adc
mov
or
push
jge
mov
shlb
ljmp
cmpb
test
mov
push
inc
adc
push
cmp
fidivrl
pop
sbb
jp
dec
jno
ds
in
das
ret
mov
rcrl
mov
fdivl
pop
push
call
lds
jno
xchg
push
push
rorl
out
mov
das
sub
xchg
imul
and
add
xchg
pop
ret
pop
adc
pop
pushf
test
sub
ret
xlat
or
cmp
pop
jbe
mov
movsl
jge
call
or
js
mov
mov
iret
cld
subb
xchg
pop
loope
jo
out
xlat
adc
das
cmp
repz
int
push
movsb
out
xor
cld
dec
nop
pop
sahf
out
in
outsb
movsb
cwtl
or
mov
das
mov
push
fimuls
lret
shrb
pop
frstor
xor
stos
ret
mov
lcall
sbb
hlt
xchg
out
xchg
inc
mov
xor
adc
sbb
insb
out
mul
packsswb
movsl
rorl
imul
mov
incb
outsl
cmp
dec
and
xor
cmc
stc
std
mov
mov
and
mov
in
dec
xchg
clc
jbe
pop
inc
sub
pusha
loope
mov
out
sub
es
add
sub
test
add
cmc
mov
mov
jecxz
jb
cmp
roll
fidivl
cmp
lahf
jmp
fisttpll
jne
rolb
inc
call
mov
jecxz
or
xchg
or
push
sahf
xor
and
adc
lcall
fidivl
xchg
sar
inc
fcomps
xchg
push
push
mov
mov
xchg
and
call
stos
jmp
fcoml
jecxz
sub
xchg
mov
stos
in
push
scas
mov
mov
push
xchg
inc
or
add
xlat
xchg
fistl
pop
push
pop
pop
outsb
jns
mov
mov
out
add
jo
dec
push
clc
adc
sbb
divl
icebp
xchg
mov
mov
fwait
pusha
push
sbb
cmp
aas
mov
push
test
mov
in
add
out
adc
xchg
imul
jp
jo
mov
inc
sub
mov
loope
ja
loop
in
pushf
in
dec
or
sbb
mov
sub
jae
daa
lods
push
adc
sahf
aaa
pop
fcmovb
loopne
mov
inc
jbe
mov
mov
inc
xchg
jle
jno
jl
fimull
enter
rol
aam
mov
jb
sub
test
daa
call
inc
lahf
and
call
cld
sahf
fs
das
push
jp
lock
cmp
dec
jmp
sbb
pop
imul
leave
adc
dec
xor
sarb
xor
jbe
push
inc
pushf
data16
andb
imul
aaa
dec
mov
sti
lds
and
repz
outsl
movsb
xor
insb
pop
in
cwtl
pusha
stc
in
int
jns
adc
cmp
mov
loop
mov
jmp
mov
xor
sbb
mov
pop
mov
jmp
stos
push
mov
xchg
mov
jns
xor
scas
insl
xchg
fwait
sti
and
inc
shlb
adc
lret
aad
sbb
nop
test
dec
and
or
insb
fcoms
lods
cmc
aas
gs
into
test
push
jmp
pop
xlat
adc
mov
xchg
call
test
xlat
cmp
out
fildll
xor
inc
adc
inc
in
push
adc
or
mov
std
adc
pop
and
mov
outsl
lahf
das
out
roll
lods
sub
shrb
scas
pushf
jmp
pop
fcmove
sub
push
insb
fnop
sub
pop
pusha
sbb
scas
in
jnp
mov
push
sar
cld
inc
and
sysenter
jl
or
push
sbb
stos
in
xchg
sub
insl
mov
adc
iret
cmp
lea
in
sbb
jecxz
ret
push
out
push
push
sarl
sub
mov
ret
jg
and
in
jno
outsb
adc
sbb
and
mov
fsubr
pop
jns
push
mov
in
push
dec
fucomi
leave
xchg
imul
jmp
movsl
mov
test
repnz
fdivr
fisubl
pop
test
cmpsl
push
addr16
out
inc
sub
clc
cwtl
jne
ljmp
out
or
int3
jne
fs
inc
lock
in
or
xlat
push
push
sbb
lods
addl
test
loop
cltd
rolb
xor
pop
mov
ret
adc
xor
daa
lds
push
mov
pop
ds
mov
or
xlat
or
fimuls
or
push
push
int3
sub
xor
dec
xor
hlt
lods
addl
test
push
stos
stos
addl
mull
xchg
mov
push
fs
inc
pop
stc
and
es
adc
sbb
mov
jecxz
bound
loope
shr
sub
lcall
imul
jg
imul
cli
fucompp
test
ja
add
mov
add
and
repnz
push
inc
test
fadd
push
cltd
mov
inc
add
push
xchg
pop
out
dec
inc
sub
pop
xor
imul
scas
push
aam
inc
sub
repnz
ljmp
gs
int3
sub
scas
sub
in
pop
les
out
jg
cmc
rolb
jmp
mov
adcb
jp
sbb
iret
push
dec
push
iret
int
dec
std
push
movsb
mov
call
push
xchg
jb
mov
ret
lock
adc
mov
mov
push
mov
mov
ss
pop
xchg
push
pop
xchg
ficompl
icebp
std
movsl
pop
rorl
lret
das
lea
add
pushw
sbb
jle
xor
mov
xchg
add
sbb
dec
adc
cmpsl
dec
orl
and
pop
pushf
add
insb
popa
add
testb
bnd
add
jg
pusha
adc
enter
adc
and
push
arpl
fstp
imul
or
xor
push
jmp
push
std
sub
push
mov
iret
cli
fistpl
or
in
xchg
cli
cmpl
jb
mov
dec
push
bnd
pushf
or
mov
pop
sbb
xor
inc
mov
dec
addl
lds
and
mov
jne
xchg
xchg
es
fistpl
shll
lret
aad
sub
pushf
mov
dec
xchg
jo
push
push
adc
out
std
adc
dec
mov
push
mov
orb
push
dec
xor
out
mov
fs
test
dec
mov
psubsw
aas
pop
adc
add
dec
adc
hlt
inc
nop
lea
in
leave
out
pop
cmp
pop
inc
sahf
xor
sbb
fmuls
loopne
in
pcmpgtw
dec
jne
nop
push
test
sahf
jo
and
aas
push
jnp
push
push
add
xchg
jmp
cmp
imul
or
xchg
cmp
push
dec
lret
push
in
cmpl
xlat
adc
leave
mov
jge
inc
push
mov
hlt
mov
cltd
cmc
or
out
mov
ret
test
xchg
jae
pusha
inc
rorb
pop
jnp
cmc
out
leave
mov
loop
addr16
mov
mov
rcl
pop
in
mov
icebp
test
cmpsl
notb
repnz
push
xlat
xor
cld
lcall
adc
xlat
pop
hlt
and
push
push
out
or
mov
rcrb
xchg
dec
mov
leave
addr16
mov
cmp
repz
dec
lock
mov
loope
xor
pop
cli
xchg
fsubrp
ret
adc
mov
jl
push
test
lret
out
repnz
jle
insl
in
cmpsl
mov
pushf
pop
lret
mov
jo
aam
jmp
lock
cld
test
lods
add
fcmove
sahf
push
sbb
sbb
rcrl
or
fisubl
xor
popf
pop
mov
inc
insb
or
adc
icebp
pop
ljmp
into
push
outsb
xor
sub
out
sbb
add
mov
popa
adc
inc
mov
dec
dec
push
lret
mov
enter
or
add
les
push
or
push
inc
or
dec
fadd
out
fldl
add
adc
popa
shrl
sub
daa
adc
pop
or
sbb
aas
daa
jmp
lods
rcrb
loopne
mov
dec
jb
cmp
ret
mov
lcall
pop
cltd
mov
adc
imul
pushf
xchg
cmc
sub
roll
xchg
push
imul
add
dec
xlat
addr16
popf
xchg
mov
dec
cs
popa
icebp
shlb
enter
int
and
adc
sub
adc
dec
pop
nop
in
ret
cmp
inc
pop
inc
sub
rorl
mov
hlt
ljmp
xchg
jns
clc
lahf
outsb
or
dec
test
inc
ret
fucomi
es
arpl
fs
pop
dec
mov
xor
test
mov
shll
fwait
rcl
popf
mov
cmp
sub
jecxz
gs
cmpsb
xor
adc
push
rcrl
iret
icebp
mov
test
out
or
xchg
mov
mov
xor
mov
cmp
sbb
push
gs
iret
les
dec
enter
dec
or
sar
sbb
es
loopne
jb
add
cmp
repz
lods
lret
pop
lock
lret
xor
pop
add
mov
lods
add
idiv
jecxz
cmpsl
das
and
inc
jb
int
pop
pushf
bound
lods
mov
cmpsb
push
push
pop
jne
aam
cld
cmpsb
iret
push
sbb
stc
and
mov
push
mov
or
mov
xchg
dec
dec
xchg
jae
cmp
insb
imul
inc
dec
sti
or
insl
mov
xchg
xor
push
sbb
ja
cmp
ds
mov
imul
mov
xchg
aas
xadd
and
stc
stc
cmpl
daa
push
sbb
pop
push
and
cs
mov
jmp
and
mulb
rorb
lret
pop
pop
add
xchg
out
mov
add
cmp
mov
insl
aaa
lock
arpl
cmp
test
mov
sbb
push
sbbb
cmp
fsubrl
js
lods
xlat
adc
pop
into
cmp
out
jp
es
pop
hlt
adcl
jecxz
scas
sbb
cli
cmpsb
cli
loop
gs
cld
inc
int3
adc
lock
popf
pop
loopne
icebp
mov
cmp
fneni(8087
or
jle
push
adc
sub
push
xor
adc
es
out
cmp
out
sub
add
aad
mov
cmpsl
xchg
jp
pop
loop
fisubrs
or
mov
les
adc
jbe
cmp
sbb
lods
fs
repnz
mov
into
fistps
xor
int3
pop
movsl
outsb
push
xchg
jno
xchg
aaa
icebp
test
cwtl
or
sub
shrb
mov
in
into
pusha
jo
xor
nop
pandn
inc
xchg
mov
mov
dec
push
jnp
enter
xchg
dec
rclb
xlat
mov
cmpsl
fimuls
xor
leave
je
mov
int
dec
les
push
mov
mov
cs
push
mov
xchg
nop
xchg
mov
movsl
pop
ss
in
movsb
add
es
adc
xchg
je
pop
jbe
jo
pop
mov
pop
inc
mov
push
lret
mov
fmuls
add
in
xchg
test
dec
mov
shll
lods
add
jl
repnz
cmp
arpl
cmp
test
push
mov
and
fstps
das
pop
cli
popl
mov
ret
jnp
cmpb
ds
xor
mov
cmp
sbb
notl
mov
clc
shl
nop
enter
pop
cli
outsb
lea
rol
adc
push
pop
jne
in
lods
or
or
mov
cmp
jnp
cwtl
mov
loopne
cwtl
scas
int
jns
or
push
shll
xor
jg
jo
add
inc
ficoms
xchg
lds
mov
mov
inc
and
push
add
or
mov
xlat
movsl
std
pop
xchg
and
shlb
fbstp
mov
xor
movsl
mov
jmp
adc
int
in
in
ja
xchg
cltd
and
pop
xlat
loope
mov
mov
arpl
cmp
xchg
pushf
jbe
jae
and
pop
sub
sub
popf
or
das
es
cmp
add
data16
sub
push
jg
and
movsb
mov
push
mov
mov
movsb
fcmovbe
mov
pop
mov
cmp
inc
push
or
cmp
lock
add
dec
dec
xchg
in
pop
stc
in
gs
xchg
xor
mov
or
sti
jne
int
sbb
mov
das
push
mov
aad
mov
and
cmp
xorb
int
mov
shll
sbb
cmp
pop
leave
jle
xchg
sub
and
mov
xor
bound
mov
aaa
fs
add
fcoms
sarl
cmc
lods
cld
xor
adc
das
dec
cltd
pusha
xlat
jo
movsl
mov
sbbl
push
frstor
fs
jb
and
fmuls
iret
xlat
inc
in
into
sbb
jecxz
jnp
mov
xchg
sbb
mov
lret
daa
mov
and
test
stc
add
xor
pop
adc
insb
dec
push
and
insb
add
aaa
mov
sbb
mov
push
into
cltd
decb
push
outsl
mov
mov
sbb
imul
and
pop
out
mov
inc
inc
push
fcoms
and
filds
and
pop
test
inc
jp
js
cli
inc
popf
inc
pop
mov
in
mov
popa
into
sub
lahf
in
es
hlt
xor
aas
cld
sub
rolb
out
test
push
int3
into
mov
out
in
jl
dec
add
cltd
aas
insl
out
ljmp
leave
pop
mov
loope
data16
hlt
xor
daa
and
add
and
ret
pop
sbb
inc
push
push
sbb
das
mov
jne
lods
sbb
aad
mov
into
shll
push
xor
scas
push
in
xchg
out
ficompl
inc
sahf
jle
loop
pop
in
aas
shll
enter
hlt
push
scas
and
cmp
adc
or
add
pop
sbb
or
cmc
loopne
mov
rcrb
xchg
cmp
or
test
xchg
adc
ljmp
bound
stc
outsb
pop
mov
bound
iret
xlat
mov
adc
mov
sbb
xor
jp
mov
mov
pop
fwait
enter
js
int
popf
in
sub
xor
testb
xchg
shr
data16
aaa
xor
sbb
fwait
in
xchg
jns
jmp
cld
test
incb
push
jl
sbb
stos
adc
xlat
test
insl
inc
xchg
pop
lock
arpl
lds
in
fsubs
pop
mov
sbb
xor
imul
push
mov
arpl
andb
jbe
cmova
push
ljmp
jge
push
call
bound
sbb
mov
imul
or
mov
sub
cld
sahf
cli
push
test
daa
sbb
jp
fwait
pop
mov
loope
sbb
popf
and
roll
sbb
push
scas
ss
sti
rorl
xor
popa
adc
xchg
iret
aam
mov
lock
xchg
mov
pop
xchg
jb
fadd
mov
sub
xorl
fsubrp
sbb
push
mov
push
fisttpl
xchg
or
call
or
jbe
mov
xor
filds
lds
ja
clc
mov
sti
fnsave
imul
push
enter
jecxz
dec
mov
or
fwait
cwtl
sub
xor
cmp
andl
jno,pn
dec
daa
mov
push
cmp
adc
xchg
dec
push
mov
xor
outsl
iret
ret
loopne
les
shl
adc
inc
repnz
into
jae
and
jg
mov
rol
cmp
mov
pop
sbb
enter
dec
ss
push
pop
xchg
inc
sub
nop
adc
jle
xor
or
js
movsl
cmp
jmp
fbld
jbe
xchg
pop
in
inc
leave
inc
sbb
popa
bound
jmp
mov
int3
imul
mov
movsb
xor
out
aas
nop
push
pop
rcr
sub
mov
or
jns
fldt
mov
fnstenv
es
js
sub
pop
sbb
out
jp
push
adc
mov
loope
pop
mov
shl
sti
cs
pop
jmp
popa
or
fists
cmovs
mov
popl
addl
jl
push
fadd
xor
jns
addr16
adc
int
movsl
cmp
pop
and
insb
hlt
stos
mov
dec
dec
mov
in
dec
clc
xchg
jmp
jg
imul
fimuls
dec
mov
nop
rcl
ljmp
dec
repz
fildll
aad
ret
add
shrb
cli
aas
and
xor
les
sub
push
int
xchg
shl
xor
sbb
rcrl
sub
loop
mov
xchg
and
or
lret
sahf
outsl
addl
add
test
jl
sar
mov
pop
cwtl
movsb
fwait
mov
shrb
jp
std
or
fwait
notb
jge
ror
mov
outsl
sub
cmp
test
iret
pop
mov
repnz
push
pop
inc
in
fisttpll
ret
mov
adc
cld
imul
aaa
fmulp
inc
push
mov
stos
cmp
pop
lret
adc
dec
in
sub
jecxz
fisttpl
ret
cmpsb
mov
and
xor
data16
loop,pt
stos
mov
mov
jge
sbb
nop
stc
loop
pop
jns
mov
mov
mov
std
ret
std
sub
jae
push
mov
add
out
push
dec
mov
dec
in
movsb
cmp
sbb
adc
pop
push
or
pop
test
pop
pop
and
mov
mov
repz
sub
sub
ficompl
clc
cltd
pushf
jmp
xchg
push
ret
daa
adc
fcoml
dec
xor
fisubrs
inc
mov
cs
lcall
mov
dec
xor
add
pushf
lcall
mov
in
hlt
xchg
es
pop
outsl
fcompl
in
adc
jbe
pop
add
cmp
sbb
mov
addl
dec
and
mov
sarb
push
jbe
jb
cmp
repz
xlat
jmp
push
mov
xchg
test
xchg
pop
out
insl
stc
lahf
xlat
and
mov
aam
ds
cmpsl
pop
fwait
stos
xchg
rcll
xlat
aad
xchg
dec
lds
adc
add
xchg
xchg
cmp
hlt
push
cmp
jecxz
and
sbb
imul
loop
and
cwtl
sub
or
mov
popf
les
aam
pop
jmp
cmp
lea
outsb
mov
push
dec
mov
add
mov
jno
cmp
push
shrl
jne
lcall
push
outsl
ret
sti
aaa
cld
imul
push
insl
sbb
and
or
fdivrs
fiaddl
js
scas
mov
lock
push
int3
lea
mov
mov
mov
jmp
jp
xchg
mov
lret
sysenter
fimuls
jge
popf
mov
or
push
outsl
cld
scas
cmpsb
and
std
jg
xor
imul
xchg
xchg
loop
out
lret
std
adc
cmp
mov
adc
aad
call
cmp
loope
dec
in
popf
daa
cwtl
loopne
pop
cmc
cmp
andl
movsl
mov
jp
sbb
mov
addr16
xchg
dec
mov
fsts
cmp
imul
jl
int3
inc
xor
orl
or
mov
aaa
pop
adc
hlt
mov
pop
xchg
sub
rcrb
cmp
inc
bound
movsl
inc
and
sahf
jecxz
movsb
outsl
push
fimuls
js
jo
xchg
jb
push
sub
cld
push
lcall
insl
add
mov
cld
cmp
nop
cld
mov
add
js
out
imul
test
fs
add
mov
das
jne
mov
sbb
push
xchg
pop
pop
jle
lcall
out
cmp
in
mov
aam
adc
pop
jmp
mov
xchg
dec
dec
lods
jg
and
rcll
push
scas
imul
jecxz
push
xchg
rorl
add
daa
imul
and
hlt
and
mov
lcall
outsl
and
lret
shlb
ljmp
sbb
pop
enter
fwait
jb
das
int3
sbb
imul
out
mov
xor
mov
test
add
add
cmpsl
lahf
xor
inc
hlt
mov
pop
sbb
xor
jle
adc
xor
out
inc
testl
or
sbb
sbb
lret
icebp
pop
xchg
cmp
mov
rorl
add
mov
sub
xor
fistpll
inc
inc
pop
ret
xchg
dec
je
les
push
pop
pop
jns
xorb
and
sub
sub
xchg
push
adc
es
bound
dec
push
cli
cmpsl
jmp
mov
xchg
icebp
dec
inc
mov
or
xchg
xchg
mov
or
and
xor
push
push
ja
jno
and
hlt
push
gs
xor
inc
incl
mov
and
xor
and
aaa
push
push
inc
adc
scas
dec
imul
into
and
mov
mov
in
insb
sbb
jae
nop
js
push
mov
jg
mov
stc
lods
mov
mov
aas
mov
mov
data16
int3
bound
push
loopne
pop
mov
mov
push
stos
push
lea
mov
push
int
mov
xchg
imul
jg
xchg
mov
dec
sub
movsl
jecxz
in
xor
pop
cmp
lahf
add
and
or
ss
sbb
shll
sbb
adc
and
mov
xchg
mov
xchg
mov
rolb
push
dec
jnp
push
xchg
push
dec
inc
lahf
xor
cmp
dec
cmc
add
pop
cmc
sti
jmp
stos
mov
and
mov
xor
mov
fcmovnu
mov
cmp
push
xchg
rolb
and
in
es
int3
dec
mov
loopne
cmp
bound
cmp
icebp
fists
xchg
arpl
adc
ret
xchg
rcrl
push
dec
xor
cmpsb
lds
mov
jl
mov
lds
aaa
dec
and
pop
cmp
mov
rolb
icebp
and
outsl
pusha
dec
and
int
fs
shlb
push
mov
mov
jecxz
pop
fwait
addr16
ljmp
sbb
inc
loopne
push
xor
mov
push
fdivp
test
dec
sbb
dec
out
pop
cld
iret
movsl
inc
jecxz
cmp
dec
push
and
cmp
leave
push
divl
sub
dec
or
mov
fists
pop
adc
leave
push
lret
aas
cmp
bound
xor
das
sub
cld
iret
add
xchg
iret
inc
mov
jno
cld
shl
jns
clc
mov
or
pop
enter
cmp
lock
pusha
inc
int3
pop
loop
xchg
dec
pop
push
jns
cvtps2pi
sub
fiaddl
in
mov
rol
popf
and
pop
mov
cmpsb
pushf
jecxz
sub
sbb
cld
xchg
and
mov
orl
jae
jae
inc
xchg
into
fsubrl
xchg
inc
sahf
scas
in
push
push
ds
adc
lock
sbb
loop
icebp
sahf
popa
mov
outsb
into
xor
mov
jne
lock
rorl
mov
lret
mov
lret
insl
lcall
sti
outsb
sbb
sbb
push
aam
insl
xor
jae
rolb
inc
test
add
leave
insb
mov
lock
add
mov
in
xchg
sbb
insb
pop
stos
in
mov
xor
iret
sbb
adc
les
ja
popf
xchg
xor
push
push
add
dec
mov
ds
inc
cs
test
xor
lods
xchg
pop
std
in
fbld
jecxz
sbb
jno
mov
mov
mov
lea
sub
in
adc
out
cmp
mov
outsb
xchg
sub
sub
jne
add
sbb
xchg
cmc
loop
jb
int
dec
or
push
scas
fmull
xchg
mov
cmp
push
and
movsl
dec
xchg
arpl
lahf
aas
or
pop
xlat
pop
lret
sbb
or
cmp
sub
sub
push
js
repz
sti
sbb
push
fs
xchg
adc
insl
mov
push
inc
push
int
dec
stc
fwait
stc
mov
adc
lahf
pushf
inc
data16
rclb
push
rorb
dec
call
pop
ljmp
fwait
repnz
mov
mov
jbe
cld
add
add
xlat
lcall
cmp
pusha
repnz
lods
xchg
lcall
cmp
popf
adc
dec
pop
pusha
jmp
xor
in
subb
dec
dec
addr16
xchg
add
lcall
push
pop
pop
push
inc
and
ja
rorb
sub
out
jbe
adc
cmc
jp
fimull
cld
jg
into
xchg
outsl
push
fildll
outsb
sub
bound
bound
leave
mov
xor
sub
add
mov
test
mov
mov
or
fbld
sbb
mov
mov
inc
jge
insb
inc
jecxz
mov
hlt
cwtl
mov
enter
mov
sbb
adc
ljmp
lret
push
aad
cs
sub
imul
cmp
mov
mov
and
inc
dec
nop
add
dec
mov
roll
sbb
lea
pusha
jbe
jnp
in
loopne
or
insl
mov
dec
xchg
lret
leave
into
mov
or
push
jnp
sti
mov
mov
sbb
nop
add
and
xchg
dec
dec
dec
xorb
imul
add
rcr
xchg
xchg
mov
in
push
les
jmp
pop
mov
cld
jne
cld
mov
rclb
cmp
mov
fistpl
pop
insb
sti
insb
sub
cmc
bound
inc
popa
xchg
lock
mov
sarl
rorb
push
das
sti
imul
mov
ret
jge
cmp
xchg
iret
xchg
test
adcb
mov
mov
stos
push
mov
add
xchg
adc
sbbb
cltd
inc
push
sbbl
jmp
cmp
sub
pop
cmp
push
ljmp
and
xchg
lods
sub
xor
pop
mov
mul
lcall
out
inc
rcll
arpl
push
fisubs
je
push
or
jl
add
jmp
rcrb
ret
and
ljmp
jge
bound
or
mov
mov
shll
xchg
jp
jecxz
in
iret
loop
adc
les
call
xchg
add
jbe
fistl
testl
ret
lods
enter
xabort
out
sub
imul
popa
sahf
shlb
jle
das
inc
pop
and
loope
pop
fistpll
jb
adc
lahf
dec
inc
xor
jg
cld
mov
fnstenv
bound
dec
cmp
je
loope
frstor
lods
sbb
jae
mov
jle
pop
push
fisttpll
mov
push
lods
push
adc
lock
inc
dec
fidivrl
stc
xchg
jae
loopne
inc
jo
loop
pop
arpl
inc
lea
add
int
inc
dec
fidivrs
push
mov
je
jno
or
mov
push
or
jae
or
in
icebp
push
jp
lret
xchg
push
mov
cmpsb
adc
jns
rcl
push
rol
pop
push
jge
push
xorb
mov
xlat
and
stos
jmp
into
lea
sbbl
add
add
inc
inc
dec
cmp
xchg
test
mov
mul
incl
sbb
adc
icebp
pop
add
jns
ret
mov
jp
popa
idivb
pop
shll
push
dec
mov
out
sub
lea
enter
fldt
fadds
add
xor
dec
jnp
dec
jne
push
inc
clc
sbb
push
add
repnz
loop
lret
outsb
or
call
rolb
cltd
repnz
cmp
lret
movsb
inc
out
cmp
lcall
es
and
rcl
call
adc
test
pop
mov
cmc
mov
les
hlt
dec
shr
add
loope
mov
loop
pop
out
cmc
and
xor
out
add
sub
int
adc
nop
cli
decb
inc
sub
stos
inc
and
stc
mov
cmp
jg
or
enter
cmpsb
dec
xchg
cs
add
imul
arpl
out
mov
sar
lahf
xchg
inc
jmp
mov
push
jmp
shrb
lods
jle
int3
add
loopne
ret
and
or
out
rorb
aam
je
cmp
cmp
fwait
movsl
ja
sub
xor
push
jl
push
int3
mov
aaa
and
call
push
dec
sub
and
sahf
jge
xchg
inc
mov
jecxz
sbb
jne
popf
adc
sahf
mov
pop
sbbl
inc
stos
inc
stc
fldl2t
push
mov
test
imul
adc
dec
cmp
iret
arpl
mov
fcomip
cli
adc
shlb
inc
int
jle
and
stos
lods
fs
int3
push
and
adc
push
adc
adc
sbb
std
sahf
pop
xchg
jecxz
dec
jo
daa
mov
sbb
enter
mov
lods
lret
fwait
repz
add
test
ss
xor
ss
push
push
cmp
mov
or
fsub
js
les
xchg
xchg
jbe
or
cmp
mov
mov
daa
sub
pop
adc
push
fisttpl
mov
call
std
imul
fwait
outsl
xor
fcoms
push
mov
outsb
adc
push
sbb
stc
mov
loopne
test
loop
or
cmp
and
mov
ja
cwtl
test
ds
out
inc
jmp
pop
fadds
push
xlat
stos
mov
rcrl
mov
xchg
js
iret
and
arpl
out
or
rcrl
dec
les
push
rol
sbb
or
iret
mov
ret
cmpsl
insl
loopne
add
add
aaa
mov
mov
divb
pushf
imul
mov
add
jnp
and
jle
mov
push
sarb
pop
jmp
call
aad
add
arpl
mov
jmp
lret
fsub
dec
pop
cmp
and
adc
mov
aaa
sub
sbb
call
cld
sbb
push
jecxz
sbb
daa
std
mov
mov
jp
jbe
cmpsl
lds
hlt
xor
sbb
add
aam
cmp
lods
clc
scas
int3
mov
and
cltd
mov
fsubrp
mov
sub
cmp
cmpsl
imul
inc
jo
mov
mov
mov
stos
pop
jno
and
xor
mov
and
aas
stos
fiadds
subl
xlat
xor
dec
cmp
test
or
ret
dec
push
push
or
xor
pop
ja
fcompl
adcl
xor
xor
movsl
testb
insl
cmp
dec
push
or
cltd
jne
in
popf
test
lods
movsb
pusha
aad
sti
cwtl
test
sub
pusha
mov
jo
shll
fadd
mov
lods
icebp
xchg
adc
jne
jg
cs
add
xchg
mov
dec
sub
mov
xchg
inc
movsb
fwait
test
jecxz
sbb
mov
dec
sub
dec
mov
dec
xchg
pop
pop
jno
inc
xlat
je
cltd
xchg
mov
ds
push
and
push
adc
add
leave
pop
xchg
leave
add
push
sub
jmp
push
mov
mov
stos
test
inc
and
pushf
cmpl
icebp
int3
mov
mov
pushf
push
loopne
aas
inc
fisubrl
cwtl
cmpl
xchg
mov
push
imul
mov
cs
xchg
push
xchg
fwait
sbb
fs
sbb
or
aam
test
jnp
cmp
lods
xor
and
xchg
push
in
adc
sbb
stos
adc
popf
in
cli
jmp
adc
dec
in
test
cmp
adc
fsubs
gs
roll
xor
xchg
sub
mov
jmp
fsubs
push
sbb
and
dec
out
xchg
add
mulb
mov
imul
add
mov
in
xchg
xor
sub
icebp
xchg
cmp
adc
sbb
insl
sahf
cmp
jbe
dec
shlb
ss
rclb
mov
movd
orl
out
lret
sbb
push
push
mov
out
iret
imul
pop
push
xchg
xchg
int3
mov
push
dec
sub
and
cmp
and
push
inc
jae
in
cmp
mov
add
out
mov
sti
rorl
cli
jo
add
ss
mov
add
scas
addr16
mov
and
imul
lods
testl
ret
sub
ljmp
pop
lds
test
iret
mov
and
inc
gs
cltd
xchg
push
adc
ret
sti
sbb
dec
cltd
lret
lret
out
outsl
outsl
fmulp
adc
ljmp
cmc
jno
cmp
xchg
bswap
pop
dec
sahf
mov
rclb
cmp
mov
sti
sub
mul
es
shrl
or
jbe
jno
jg
and
or
push
lds
adc
sub
cmc
lea
push
lods
cli
pop
sub
jne
out
outsl
aad
in
loopne
rorl
pmullw
rcr
xchg
lods
lret
mov
inc
shlb
and
bound
jne
repnz
out
cmpsl
mov
mov
sarl
pop
sarb
lds
add
aas
pusha
xor
cmp
jle
xchg
ljmp
cmp
inc
aam
call
lods
dec
sbb
mov
arpl
in
ja
add
xchg
add
jg
ljmp
pop
fistl
nop
cmp
sub
das
icebp
add
sbb
scas
adc
pop
sbbb
jns
fcoms
xchg
jle
outsb
sbb
aam
jns
js
out
sti
clc
and
sbb
loopne
and
fnsave
fbld
imul
popa
jbe
cli
lds
ja
imul
out
inc
out
mov
inc
pop
dec
lock
int
lea
cmc
test
mov
mov
inc
push
mov
adc
lea
and
xchg
sbb
mov
addr16
sub
pop
and
outsl
popf
inc
push
das
imul
pminsw
mov
ror
int
cmp
xchg
je
imul
mov
xor
push
mov
test
lret
sbb
test
push
es
int
push
repnz
xchg
inc
pop
push
shr
pop
add
jb
lret
pop
and
adc
imul
adc
sub
gs
dec
pop
pusha
int
movb
xchg
push
cli
xchg
jno
std
jmp
dec
sub
int
shlb
es
push
push
inc
stos
or
lret
incb
push
pop
pop
cmp
outsb
jns
push
popa
xchg
sub
rcl
mov
cs
mov
clc
xor
push
lcall
fbld
or
or
xor
adc
fistps
clc
mov
mov
pop
out
ja
sarb
rcrb
out
imul
ret
mov
jg
lret
popa
inc
out
ljmp
pop
je
out
std
pop
and
xlat
adc
stos
ja
imul
xor
in
pusha
inc
lret
mov
mov
push
addb
jecxz
pop
mov
cmp
mov
mov
fwait
mov
insb
or
inc
xor
jmp
jno
pushf
xor
dec
aaa
ss
jle
popa
push
pop
scas
decb
cltd
movsl
into
push
cmpb
mov
pop
stos
popf
outsb
push
sbb
loopne
int
repz
mov
rcrl
shlb
in
fidivrl
sbb
or
mov
or
push
repnz
push
or
or
sbb
lcall
mov
pushf
test
ds
movsl
cmp
test
pop
rorl
push
sbb
hlt
dec
ficoml
add
hlt
adc
in
xor
call
xchg
jns
push
jmp
iret
jne
das
cmp
fadd
movl
lahf
fistpll
in
dec
mov
xchg
gs
mov
ficoms
test
leave
mov
out
or
pop
pop
xchg
dec
std
push
sbb
les
jb
clc
jnp
lods
addr16
enter
mov
adc
shlb
sbb
mov
dec
mov
into
mov
fldcw
and
xchg
or
fdivrp
push
cmc
push
jno
sti
push
rcrl
push
fidivl
sti
pop
push
testl
xor
mov
push
pop
mov
pop
mov
jp
je
nop
rolb
sbb
ja
dec
ret
imulb
sub
shr
adc
xchg
jo
mov
jno
in
inc
cmc
mov
jle
sbb
xchg
repz
in
popf
cmp
mov
cmc
movsb
cmp
jno
dec
mov
shll
push
out
je
ja
xor
pop
and
dec
movsb
gs
inc
xlat
aaa
cmpb
mov
adc
xchg
sbb
or
movb
push
stc
aam
popa
cltd
bound
mov
mov
mov
pusha
cmp
sahf
in
leave
cmp
dec
push
lret
sbb
push
test
or
push
lock
lea
xor
xchg
loope
xchg
or
xor
inc
loope
dec
pop
sub
xor
or
mov
and
jno
ljmp
fbstp
and
sbb
test
int3
stos
inc
inc
dec
inc
cld
mov
fmull
push
add
jecxz
dec
xor
dec
test
xor
xchg
jno
push
clc
insl
in
lea
popl
shrb
adc
push
sbb
jbe
xchg
inc
outsb
sub
and
inc
mov
add
pop
and
dec
or
addr16
scas
dec
cmp
xchg
sub
jmp
xor
ficompl
pop
rcll
jbe
fcoml
movsl
push
jns
shl
rcl
in
addr16
and
lret
leave
pop
add
dec
xchg
cmc
ds
dec
icebp
adc
ret
lock
cmp
out
add
dec
je
divl
mov
lret
daa
mov
outsl
aad
adc
shlb
jecxz
add
jge
int
hlt
mov
gs
lret
rorl
mov
mov
lahf
dec
mov
push
sbb
adc
mov
aad
pusha
and
mov
sbb
cmpb
mov
sahf
mov
cli
mov
cltd
aas
sbb
rcll
ret
ds
lret
icebp
or
dec
xchg
roll
frstor
adc
loope
xor
leave
stos
mov
jns
pushf
mov
push
xorb
pop
add
fwait
notl
pusha
mov
mov
mov
sbb
push
sub
cld
cli
fisttpl
adc
inc
adc
adcb
movsb
mov
or
push
fmulp
push
fcmovu
dec
push
repz
sub
push
scas
faddl
shrl
lahf
xor
push
loopne
xchg
xchg
mov
and
fs
xchg
ret
das
and
sti
in
cltd
mov
dec
sbb
pushf
jp
divb
popf
stos
jnp
dec
daa
roll
jl
sbb
push
push
jp
es
inc
test
lcall
es
mov
lods
scas
inc
inc
mov
mov
dec
pushf
push
sti
inc
xchg
shll
lock
mul
imul
lcall
loopne
fwait
push
in
cmp
mov
adc
jg
or
sub
or
sti
add
enter
add
outsb
not
mov
movsl
stc
mov
xor
aas
mov
mov
in
pop
dec
into
adc
movsb
arpl
add
mov
cmp
stos
pop
jle
dec
mov
inc
mov
in
add
cmp
and
xor
loop
xlat
pop
push
addr16
pop
pop
or
movsl
mov
cmp
mov
or
lock
monitor
icebp
clc
push
ss
outsl
and
dec
jmp
pushf
pop
insl
dec
daa
sub
or
imul
pop
add
mov
jae
test
jnp
sub
and
popf
mov
lret
rol
or
in
mov
pop
xchg
std
mov
in
loope
push
or
xchg
add
daa
ss
jne
dec
add
pop
push
call
call
and
or
cmp
pop
sti
dec
rcr
scas
sub
inc
rcl
xchg
notb
sub
aaa
sarb
sarb
jmp
mov
pop
mov
out
aad
gs
subb
push
ljmp
std
aaa
loopne
cwtl
or
aad
cmp
hlt
push
push
jmp
sub
xor
aad
pop
mov
ds
aam
push
rclb
cmp
sub
dec
add
loopne
fiadds
adc
jo
cs
push
adc
sub
push
jle
pop
mov
mov
push
push
mov
negb
repnz
add
dec
int3
cli
dec
nop
cmp
cmp
jns
jle
cmp
mov
test
inc
ret
mov
cwtl
add
and
stc
push
add
loop
or
lret
inc
push
mov
mov
loope
fidivl
mov
sbb
lds
addr16
sahf
sbb
add
dec
sub
push
js
std
jp
out
mov
cltd
add
xor
mov
gs
sub
pop
lods
inc
cld
rorl
add
jmp
and
cmp
fimuls
jg
pop
rorb
imul
sbb
div
jecxz
mov
repz
test
jp
mov
mov
push
mov
add
or
mov
add
shrb
imul
sub
ret
push
jo
iret
jb
cmp
ja
jne
add
push
xchg
pop
or
mov
xchg
cmpsb
in
mov
xchg
dec
sbb
pop
aam
out
outsb
mov
shr
push
mov
rolb
sbb
jle
mov
and
addr16
jge
je
add
push
jo
shrl
push
sub
int3
cmp
fbld
cmp
jne
and
clc
cmp
xor
inc
lods
mov
and
xor
sub
stos
cmp
in
in
in
sbb
adc
cmp
fs
cmpl
mov
imul
dec
jmp
adc
jo
ja
fidivs
das
mov
movsl
addr16
fdivrs
stos
sbb
enter
sarb
cmp
lcall
addb
xor
daa
xchg
mov
int3
fcomps
and
mov
syscall
addr16
pop
xchg
rclb
adc
or
jns
call
int
leave
lea
hlt
testl
test
cltd
outsl
pushf
xchg
andl
mov
pop
cmp
iret
add
hlt
cmp
mov
inc
or
rorb
shl
push
lods
sbb
fisttpl
jnp
sbb
mov
mov
sbb
inc
and
js
jns
and
jns
stos
lret
inc
hlt
lea
loopne
jbe
ret
testb
jbe
fs
pop
mov
mov
xorl
jg
repz
lcall
lods
fcoml
shl
ds
xor
push
scas
or
arpl
mov
adc
mov
and
xor
imul
xchg
jb
lods
jge
aaa
in
pop
mov
mov
push
fistps
cltd
das
adc
pushf
mov
lcall
and
xor
setbe
xorb
lret
jne
fisubs
stos
cmc
adc
jecxz
dec
mov
lret
inc
bound
add
mov
mov
repz
sbb
andps
jnp
fildl
movsl
fistps
push
add
popa
xor
mov
mov
sub
sub
aam
mov
lods
out
push
jne
xlat
cmp
or
jno
nop
aad
and
cwtl
mov
push
add
sbb
or
push
mov
lods
mov
mov
jmp
test
cltd
out
and
cltd
bound
xchg
xchg
pop
pusha
addr16
adc
xchg
aam
push
movsb
and
enter
ret
lods
and
je
pushf
push
sub
xchg
push
fldt
jmp
sub
push
adc
xchg
jb
mov
jecxz
cwtl
or
in
aad
xchg
add
imul
cmp
ja
mov
aad
push
xchg
sbbl
push
out
cmp
sbb
adc
xor
inc
sub
ficomps
fcmovnbe
aaa
bound
pop
sbb
pop
ficoms
jne
pop
mov
aam
out
mov
add
sbb
or
or
add
lcall
sbb
and
mov
mov
dec
jae
dec
pushf
jecxz
pushf
jbe
add
push
sbb
daa
scas
mov
mov
mov
loopne
adc
data16
sbb
mov
or
xchg
xorl
lcall
add
es
mov
divb
cld
push
or
mov
and
scas
xlat
lock
inc
xchg
push
xlat
data16
push
xchg
sbb
mov
cld
cmc
dec
mov
imul
sub
xor
jl
dec
enter
cmc
insl
lahf
cmp
aas
push
stc
jl
mov
pop
mov
mov
std
leave
and
test
es
or
mov
jmp
out
mov
and
or
mov
push
jb
movsl
cmpsl
push
dec
mov
mov
jmp
insb
lock
imul
adc
or
pop
dec
mov
lret
jg
add
jp
lods
out
fcmove
in
mov
adc
pusha
loope
stos
mov
and
imul
incb
dec
adc
inc
jle
pop
add
and
out
jmp
rol
ss
pop
or
add
pop
push
mov
jae
test
xchg
das
inc
dec
pop
ret
mov
or
popa
pop
je
in
push
pcmpeqb
out
insb
sub
mov
in
jo
testb
gs
repnz
dec
sub
lcall
loop
mov
jg
out
xor
push
cmp
scas
pop
mov
dec
into
lock
sbb
int3
ficompl
or
es
pop
sahf
rolb
add
add
mov
out
fsubr
pop
sub
movsb
stos
je
cmp
mov
push
sub
out
jae
pop
fidivrl
adc
xchg
mov
test
out
add
jbe
aam
and
orb
jns
pushf
inc
push
mov
push
clc
addr16
lods
rolb
pop
addl
mov
lcall
scas
jo
mov
aad
bound
iret
test
in
mov
xchg
jbe
notb
cmp
pop
mov
lret
pop
loope
cmp
lahf
mov
dec
lea
and
push
scas
enter
mov
ljmp
pop
jae
insl
int
cmp
push
pop
aas
xor
lods
and
in
and
sbb
push
enter
call
movsb
or
data16
pop
mov
jl
mov
push
divb
dec
int3
and
popa
and
dec
pop
daa
push
mov
out
mov
push
test
xchg
or
insb
cmp
cmp
test
flds
mov
sub
sbb
mov
mov
or
das
imul
sub
mov
add
into
adc
jge
xor
and
fisubrl
add
xor
xchg
loope
call
mov
jl
pop
fisubl
inc
shlb
sbb
call
xor
mov
in
inc
mov
xor
test
mov
or
xlat
orl
test
ss
ja
leave
jae
loope
mov
int3
xor
aaa
dec
popf
xchg
inc
cmp
inc
xor
add
mov
add
fistpl
add
lock
cwtl
leave
jle
and
in
adc
sub
lret
fwait
jb
lret
int
push
loope
call
pusha
mov
loopne
or
daa
push
dec
mov
out
in
xchg
mov
sub
inc
arpl
cmp
mov
mov
jp
stos
sub
hlt
add
iret
and
push
scas
ret
sub
shll
pop
lods
mov
dec
pop
jne
flds
movl
das
xchg
pushf
lret
push
in
lds
lcall
test
cmp
jns
cmp
inc
frndint
xchg
movsl
dec
xor
push
add
cmp
rorl
cmp
repz
dec
jno
outsb
subl
in
push
sub
jecxz
xorl
jle
je
pushf
cmpsb
mov
xor
arpl
std
out
cwtl
pop
xor
cmc
and
dec
fdiv
cmp
mov
pop
ret
xchg
or
pop
jg
pop
mov
jae
pop
mov
int3
je
mov
fcmovnbe
adc
mov
sbb
push
test
int3
aam
pop
pop
pop
sub
push
movsb
jecxz
and
js
insl
add
outsb
mov
jp
pushf
sti
mov
cs
ret
push
cmp
add
or
repz
inc
js
sub
push
imul
sub
popf
ds
dec
add
cmc
fnsave
and
dec
jbe
movsl
cmp
jo
cmpsl
dec
iret
cmp
add
jp
ret
int
and
xchg
push
dec
loope
push
mov
enter
aas
mov
and
pop
push
cli
sbb
mov
xchg
mov
fcoms
cld
lds
inc
cmp
loope
adc
xchg
das
popf
pop
xlat
push
push
repz
fisubrl
inc
or
rclb
xor
out
xchg
in
inc
push
cwtl
in
int3
out
pop
hlt
outsb
icebp
lahf
ds
shlb
test
das
nop
jecxz
add
jbe
xchg
push
sbb
scas
add
imul
clc
mov
push
mov
stos
mov
inc
xlat
cmp
mov
or
xor
movsb
xchg
mov
mov
dec
mov
mov
test
cmp
test
and
push
lods
mov
andl
pop
aaa
fadds
push
lcall
cmpsl
and
pop
sti
mov
inc
cmp
leave
or
push
dec
cmp
sub
mov
sar
push
mov
fimull
iret
shll
data16
add
mov
jmp
cmp
pop
pop
sub
cmpsb
out
inc
js
in
pop
mov
scas
push
mov
mov
in
and
test
add
xor
ret
sub
mov
and
les
jbe
sub
jb
ds
pop
jge
stos
loop
aad
push
or
add
repz
pop
popf
adc
adc
std
cmp
mov
inc
xor
lods
mov
cmp
pop
jle
shr
mov
and
dec
inc
add
outsb
pop
stc
sub
xchg
push
push
icebp
nop
sbb
mov
lods
and
movsl
rclb
iret
sar
mov
imul
or
sub
pop
dec
sbb
in
and
dec
xchg
repz
jmp
jbe
cli
sbb
jno
mov
ret
cwtl
xchg
push
sbb
je
pop
pop
movsl
inc
nop
xchg
icebp
nop
mov
cwtl
in
adc
xor
ja
pushf
xor
jge
rcl
jae
loop
dec
add
xor
jmp
and
jmp
dec
aaa
mov
in
lret
sarl
shll
cmp
pop
and
push
add
dec
jmp
inc
cmp
popf
mov
push
mov
inc
xchg
jge
out
stos
adc
and
outsb
sub
pop
cmp
mov
int3
push
sub
outsb
adc
adc
orb
mov
arpl
jae
cmp
mov
aaa
jecxz
xchg
pop
adc
in
gs
aad
out
mov
sub
pop
pop
insl
inc
aad
or
sbb
mov
popf
callw
pop
mov
lds
pop
pop
orb
xchg
test
inc
fcmove
dec
stos
mov
push
xorb
sbb
lods
inc
pop
faddl
mov
sti
jg
ljmp
push
adc
pop
adc
adc
push
shlb
jns
arpl
jns
je
add
lods
dec
dec
adcl
push
dec
dec
jecxz
in
jge
movsl
mov
jnp
push
push
testb
inc
shlb
shrb
sahf
push
dec
and
lds
sbb
mov
xchg
adcl
adc
stc
in
push
xchg
in
mov
mov
xchg
pop
jno
cmp
add
or
adc
xor
cmp
sbb
sub
shlb
mov
pminub
nop
fwait
popa
adc
repnz
mov
push
cs
sarl
xorps
sbb
lock
xchg
xchg
jne
shrl
fists
xchg
jg
jb
pop
sub
fcmovne
and
mov
xor
lahf
dec
lock
or
ret
addr16
inc
cmp
cmpsl
int3
inc
inc
and
hlt
jnp
outsl
sub
cmp
les
dec
mov
rclb
or
aam
inc
iret
sbb
jns
pop
xorl
shrb
pop
bound
jecxz
add
inc
add
sub
fisttpl
xor
orl
cmp
mov
test
pop
sbb
inc
lods
jmp
inc
popf
adc
fbld
lods
push
into
dec
stos
sbb
mov
in
loop
sbb
mov
fdivs
inc
lods
in
mov
and
mov
xor
xor
mov
setge
fisubs
push
jae
pop
xor
mov
test
mov
or
mov
mov
fsubl
cmp
es
xchg
adc
cmp
mov
xchg
bound
jle
jne
adc
daa
out
sub
xchg
rcr
xchg
adc
cld
pop
sub
add
pushf
icebp
daa
cmp
lahf
cmp
popa
jp
add
xchg
fwait
adc
lret
ror
bound
rcrb
in
in
out
push
push
add
dec
push
push
xor
xchg
notl
cmp
mov
int3
or
nop
arpl
aas
aad
sbb
rcr
or
fbld
imul
mov
pop
leave
sbb
jns
push
cs
imul
adc
in
add
pop
sbb
fidivrl
sub
stc
add
xchg
mov
repz
adc
xor
sub
xor
stos
push
jmp
lods
adc
out
sbbb
fwait
insl
dec
xor
xlat
pop
push
jge
pop
fisttpl
adcl
sub
and
push
xor
loopne
fisttpl
scas
mov
movsb
sub
test
out
stc
xor
je
adc
aad
or
roll
mov
jns
jb
loopne
sbb
push
js
fs
movsb
push
xor
shlb
inc
cmp
out
xchg
cmp
xchg
dec
and
popa
dec
and
aam
into
jge
sti
sarb
mov
jmp
or
xchg
jnp
cmp
mov
stos
hlt
push
movsb
jmp
lods
mov
dec
adc
inc
or
icebp
leave
xchg
das
repz
push
xchg
divb
aas
lock
popa
fdecstp
mov
lcall
int3
in
and
pop
pop
sahf
mov
jg
in
cmpsb
scas
daa
decl
mov
rorl
jae
scas
ret
and
xchg
jns
mov
sti
rolb
pop
sbb
pop
imul
inc
xor
and
hlt
sbb
xor
inc
lcall
push
jp
pop
add
ljmp
mov
cmp
mov
frstor
jo
xchg
out
xor
scas
adc
pop
xor
mov
gs
pop
xor
jmp
mov
mov
stos
sbb
inc
sub
insb
pop
les
mov
push
push
sbb
sbb
stos
jle
inc
adc
dec
or
test
sub
inc
aad
inc
cld
mov
ret
and
push
fcom
cmp
jo
lcall
and
hlt
aad
mov
and
inc
into
lret
cld
ja
dec
cmpsb
adc
das
add
or
push
daa
je
pop
sbb
cmpl
jno
data16
or
popa
pop
inc
ret
xor
testb
mov
shr
notl
stos
adc
int3
lret
xchg
flds
jmp
mov
pcmpgtb
sub
mov
adc
add
in
imul
ds
jno
push
jae
lock
or
aad
decb
test
jmp
jp
in
dec
inc
subb
mov
imul
lahf
adc
sub
bound
push
popf
mov
shrl
loope
mov
rcrb
sti
jns
adc
inc
pop
rorl
pushf
or
mov
pop
and
outsb
sub
adc
push
and
jl
push
or
ret
insl
sub
or
adc
cmp
jmp
and
ret
xor
push
shll
push
cmp
mov
adc
push
fcoms
test
fxch
mov
mov
add
les
and
xchg
rcl
push
cmp
adc
lahf
jl
mov
cmp
mov
xor
loope
adc
pusha
dec
andl
xor
lods
in
insb
jecxz
or
dec
pop
orb
fstps
add
jmp
dec
out
fdivrp
rcrb
fistpl
pop
or
cld
push
push
cmp
adc
inc
rcrb
add
sub
or
jmp
enter
sti
testl
push
loope
in
negl
sbbl
jbe
outsl
scas
stos
add
cwtl
sbb
jp
bnd
dec
mov
or
hlt
xor
rcll
loop
stos
js
lds
mov
sub
cmpsl
pop
push
fcmovb
xor
cmp
movswl
sbb
or
and
gs
cmp
std
and
xor
idivl
pop
mov
out
mov
repnz
mov
mov
repnz
mov
jecxz
dec
fnstcw
dec
call
movsl
gs
mov
arpl
rolb
add
pop
stos
xorl
jle
cmp
mov
add
add
repz
mov
mov
sbb
aas
push
mov
fimuls
push
imul
shrb
cld
push
cld
dec
sub
ljmp
mov
cmpsl
popa
rcrb
push
ret
fidivrl
sub
or
lret
pop
mov
xchg
jnp
loope
jbe
dec
test
dec
pop
cmpsl
jno
mov
mov
sahf
xchg
pop
scas
sbbb
sti
push
sbb
jge
cli
test
pop
inc
xor
sbb
dec
clc
cmp
mov
js
push
sub
xor
jecxz
add
cld
je
mov
loopne
js
adc
cmc
sub
test
out
fdivrl
jnp
mov
repnz
adc
mov
cs
add
lods
cmp
stos
xchg
in
push
imul
fwait
dec
xor
andl
pop
jg
push
jnp
push
addr16
sarb
out
rcll
jmp
push
and
jne
movsl
out
icebp
testl
mov
ror
mov
loop
jge
add
rorl
ja
rorl
mov
es
test
inc
jle
sbbl
mov
jnp
int3
or
lods
mov
xchg
scas
das
lret
mov
movsl
repz
test
ret
es
sub
mov
adc
pushf
mov
adc
mov
mov
xchg
pop
adc
aad
popf
nop
int3
jno
adc
jmp
enter
push
and
scas
add
bound
mov
out
sarb
sub
xchg
xchg
popf
sbb
int
loope
adc
add
fists
lahf
xchg
adc
fistps
jle
loopne
mov
int
xchg
lret
or
sbb
ljmp
out
ljmp
sarl
and
add
push
nop
js
sub
lret
jg
test
lds
mov
pushf
cs
iret
or
ljmp
xchg
hlt
ret
pushf
jnp
cmp
jle
imul
mov
lea
mov
mov
adc
insb
sub
sbb
cmp
mov
insl
push
sub
ror
stc
scas
hlt
test
pop
jne
jb
adc
daa
lea
fsubrp
add
add
mov
ret
mov
mov
cwtl
xchg
xlat
repz
jecxz
sarb
movsl
push
sbb
rolb
das
dec
arpl
adc
mov
pop
rcr
es
insl
fwait
cmc
jle
loope
xor
xchg
mov
shr
bound
push
or
and
scas
mov
movsl
adc
lods
je
sub
jle
xchg
outsl
rcrl
flds
inc
xchg
test
xor
arpl
add
sbb
rcl
in
stos
fdivl
mov
push
mov
mov
dec
pop
xchg
aam
inc
cli
mov
push
mov
gs
loope
rcll
push
mov
les
loop
xlat
roll
jo
cmp
add
mov
jl
out
push
outsl
cmpsl
dec
mov
mov
xor
sub
es
mov
xor
pop
arpl
jmp
adc
in
push
movsl
push
xor
xor
xchg
sbb
adc
jbe
and
xchg
bound
lock
and
lods
xor
or
lods
cmp
call
mov
and
xor
pop
out
sbb
xor
daa
bnd
dec
xchg
cmp
test
dec
loopne
xor
sti
por
ljmp
inc
cmp
nop
dec
in
out
outsl
lods
icebp
call
mov
int
xchg
push
sahf
jb
cs
mov
test
pop
aas
mov
andb
bound
push
inc
and
fcoml
mov
add
mov
mov
cmpsl
cmp
scas
pushf
pop
enter
jp
sbb
add
jg
shl
push
push
pop
dec
adc
repnz
push
pop
les
xchg
add
sub
call
jno
rorb
aas
add
add
arpl
xchg
xor
shrl
push
mov
fs
pop
add
int
int
in
jg
mov
call
add
scas
fsubs
or
and
test
mov
sbb
xchg
and
mov
push
mov
aaa
ss
enter
sbb
push
out
lcall
adc
jns
outsl
fisttpl
dec
add
lcall
fldt
in
iret
incb
dec
test
xor
xchg
xchg
les
movsl
test
or
push
adc
jge,pn
mov
push
mov
leave
fmull
ror
inc
mov
xor
repnz
ljmp
mov
xchg
jge
cli
jne
sbb
mov
and
and
sbb
insl
pusha
in
sbb
gs
repnz
test
adc
push
mov
in
outsl
insb
mov
inc
sbb
sbb
repz
lret
adc
mov
mov
lahf
xor
outsb
pop
mov
or
jb
cmpsl
jb
pop
fwait
push
ret
jl
inc
mov
sub
pop
es
insl
pop
scas
flds
in
ja
jbe
popf
das
popa
test
add
cli
or
pop
movsl
nop
mov
sub
dec
or
xor
or
lea
push
outsl
daa
roll
or
dec
test
jmp
shlb
inc
sub
inc
fmulp
sbbl
imul
jns
cmpsl
fimull
lock
mulb
out
and
jmp
jmp
lret
nop
rclb
xchg
faddl
in
fldt
xchg
daa
or
pop
xor
lds
adc
mov
orl
in
mulb
mov
fstps
lret
xor
jp
hlt
lds
push
loop
xchg
lret
push
rcrl
pop
jle
pop
jmp
pop
out
xchg
pop
test
or
adc
sub
sbb
push
stos
fstpt
les
xlat
push
xor
lods
sbb
inc
mov
jbe
sti
cwtl
outsb
jecxz
int3
and
lea
mov
dec
adc
leave
inc
jae
mov
orl
push
dec
test
loopne
mov
daa
cwtl
test
sub
jnp
scas
int3
std
fidivrs
dec
loop
mov
dec
mov
ljmp
stc
pusha
bound
cs
xchg
mov
repnz
idivl
aas
scas
out
push
aas
cltd
jg
cltd
lea
arpl
loope
stc
add
sahf
out
push
sub
dec
aaa
cmc
mov
out
sub
mov
andb
bound
xchg
mov
outsl
or
mov
test
sbbl
mov
or
les
push
or
mov
xchg
dec
lock
test
adc
sub
mov
imull
sti
mov
cld
clc
jb
pushl
cs
pop
data16
jecxz
movsl
or
cmp
dec
cwtl
gs
shll
pop
or
fstpl
sub
mov
mov
in
xchg
dec
lret
mov
mov
add
dec
aad
mov
clc
lahf
mov
mov
pop
cld
shl
mov
mov
cmpsb
sub
xor
pop
orl
cmc
mov
in
add
mov
iret
sarl
push
imul
xchg
faddl
leave
mov
mov
jne
fcmovb
jp
sub
into
lcall
int3
cli
jns
mov
stos
imul
movsl
push
mov
insb
add
insb
pop
dec
xchg
rcll
pop
mov
jns
arpl
fldl
dec
sahf
or
jmp
sbb
decl
mov
pusha
pop
enter
sbbl
cmp
jecxz
gs
popa
fwait
dec
aaa
mov
pop
je
lcall
mov
dec
sahf
push
inc
push
div
add
dec
jle
out
pop
push
pop
inc
mov
scas
arpl
fsqrt
sbb
sub
lcall
ficomps
shrl
jne
ja
aas
das
mov
mov
out
dec
xchg
xchg
inc
jbe
xor
xchg
push
gs
adc
addl
and
jno
popa
xor
inc
jge
inc
xor
ss
mov
xor
rcl
mov
lahf
repz
rcll
stos
sub
cs
cmp
sbb
xor
xchg
lds
aad
es
ljmp
jnp
sbb
jl
jno
and
xor
mov
imul
popa
movsl
xor
push
dec
in
cmp
mov
jle
dec
fnsave
shll
jl
jle
and
test
sub
imul
jg
mov
int
push
into
xchg
stos
cld
ljmp
rorb
jno
fwait
cmp
addl
dec
push
enter
mov
or
in
pop
pop
in
push
sub
adc
mov
mov
pop
xchg
nop
xlat
je
cwtl
jge
mov
les
lods
mov
dec
imul
or
imul
imul
pop
pop
cltd
aaa
je
jmp
clc
data16
jecxz
sbb
adc
clc
mov
jno
incl
jns
pushf
dec
into
jbe
or
mov
mov
sbb
pop
call
mov
inc
jnp
cvtps2pi
push
and
cmp
aam
or
mov
add
fistps
pop
adc
push
insb
xor
es
test
in
push
sbb
repz
and
sbb
pop
xor
rorb
cmc
clc
jnp
add
scas
sti
shl
insl
xlat
inc
lods
xchg
add
mov
cld
out
out
jbe
cmp
out
in
aaa
stos
mov
push
cmp
jb
sbb
js
scas
orl
lahf
dec
xchg
pushf
mov
dec
xor
lods
jnp
jl
ljmp
imul
lret
xor
insl
xchg
test
icebp
cmpsl
xor
inc
dec
jno
lar
mov
and
adc
cmp
sub
or
call
stos
enter
add
inc
xor
sub
sub
mov
mov
das
imul
fidivrs
mov
mov
dec
mov
jle
lret
inc
sub
movsl
lcall
xchg
fadds
cmp
xor
jecxz
orb
fiaddl
ret
cmp
je
loopne
pop
out
lods
adc
popa
adc
fucomi
mov
add
leave
mov
andb
jecxz
dec
scas
xor
sub
leave
cmp
xorl
sub
mov
xchg
and
in
sbb
xchg
inc
fiaddl
mov
mov
negl
je
jge
sub
jl
add
shlb
push
int
sbb
je
fwait
insl
inc
push
dec
inc
dec
mov
mov
or
mov
shl
push
push
inc
insb
sub
sub
dec
mov
push
jl
push
sbb
sub
push
stos
pop
mov
push
cwtl
pusha
push
out
mov
dec
dec
test
cmp
jae
inc
fcompl
pop
orl
sub
inc
scas
pop
mov
sbb
xchg
loop
scas
in
dec
repnz
cs
inc
xor
and
divb
mov
add
sub
and
xchg
test
cli
adc
imul
pop
mov
and
ljmp
cmp
ret
stos
fcomps
hlt
xchg
int3
inc
jge
ret
dec
adc
cmp
out
in
cmp
in
arpl
sub
das
sbb
gs
adc
cmp
ss
push
jnp
xor
cmc
lock
mov
sbb
lods
jmp
cmp
cmp
mov
dec
xchg
jo
icebp
dec
fwait
mov
sti
pop
out
add
ljmp
test
add
aaa
cmp
lods
imulb
shll
sti
mov
in
cwtl
sahf
push
cld
or
dec
jle,pn
je
ret
lret
mov
mov
enter
xor
xchg
pop
dec
sub
sub
xor
loop
inc
ficomps
push
sti
lods
cmpsb
xchg
loop
std
repz
and
inc
pushf
jle
movb
mov
lds
and
into
jo
inc
push
jbe
inc
jge
push
jnp
mov
cltd
cmpsl
mov
sub
int
push
popa
jge
mov
or
sub
xor
bound
sbb
out
or
cmc
mov
jmp
mov
mov
pop
movsb
repnz
push
mov
dec
or
and
xchg
jmp
cmp
push
mov
or
add
imul
loop
add
shll
sub
lret
or
and
scas
lret
addl
mov
push
dec
jge
push
outsl
add
into
sub
adcl
mov
pop
mov
pop
mov
xchg
mov
pop
lds
dec
test
and
jmp
lcall
mov
jae
xchg
stos
les
dec
and
movsb
stos
call
xor
popl
lods
mov
mov
lahf
inc
pop
mov
into
mov
repnz
inc
scas
das
push
mov
or
addr16
sbb
xchg
xchg
gs
mov
sbb
popf
push
ja
dec
push
sub
pop
adc
ret
fsubrl
cmp
sbb
push
popa
pop
pushf
dec
movsl
jns
jae
sub
or
aas
in
mov
sti
ja
addr16
adc
imul
imull
jecxz
stos
xchg
inc
xor
mov
mov
fcmovne
adc
mov
jbe
xor
mov
rcrl
cmpsl
in
lret
inc
loopne
fdivl
cli
cmpsl
and
scas
sub
mov
ret
inc
mov
aam
mov
daa
inc
and
cmp
jb
sti
push
fdivrp
sub
sbb
adc
dec
push
xor
xchg
and
sarb
adc
push
rcrl
lea
notl
pop
adc
addr16
sbb
rcrb
jnp
pop
or
cmp
call
jp
sti
jge
cmpsl
pop
scas
mov
jge
jle
mov
xchg
xchg
shl
out
loopne
xchg
es
fildll
scas
cwtl
jo
xchg
mov
sub
addb
movsl
dec
andl
mov
and
lds
push
les
mov
lea
aam
cltd
scas
push
mov
adc
push
sub
adc
mov
aaa
inc
in
aas
lods
dec
fdivp
std
fs
pop
inc
mov
decl
lods
lods
xchg
mov
cmp
dec
into
push
mov
xor
je
test
test
xchg
sbb
mov
mov
inc
imul
push
out
inc
push
mov
add
jl
rcrl
ret
adc
adc
mov
ror
shrb
pop
sahf
adc
push
pop
push
outsb
xchg
jnp
xchg
mov
and
rcrb
movsl
es
or
ss
mov
sub
aad
orb
push
pop
fsts
pop
repz
stos
pop
andl
test
vpunpckhbw
xchg
mov
mov
ret
mov
push
ljmp
xchg
cld
push
in
sub
fsts
popa
pusha
loope
pushf
lods
xor
jne
mov
shr
std
sbb
or
and
add
jle
and
adcb
insl
push
lahf
inc
lods
and
jno
loope
pop
mov
clc
dec
inc
test
in
adc
xor
std
pop
arpl
jge
adc
push
and
call
dec
pop
cmp
mov
lock
lret
pop
out
cmp
and
mov
jnp
sbb
mov
loop
sub
stc
sbb
add
or
inc
pop
aam
pop
dec
loop
jnp
lahf
xchg
dec
stc
int3
sbb
stos
test
test
int3
push
xchg
jnp
pop
mov
xor
jle
add
xor
mov
push
aaa
mov
js
nop
ss
nop
jb
in
pop
cmp
jo
imull
push
aad
mov
push
mov
lock
scas
pop
in
mov
jns
mov
fadds
xchg
ret
movsl
cld
sbb
in
inc
push
pop
out
mov
pop
aam
outsb
cmpsl
frstor
mov
xchg
jno
addl
add
daa
push
aad
jl
rep
loope
xor
push
dec
or
outsb
sbb
lods
sbb
insl
adc
lock
pop
clc
popa
imul
and
lahf
xor
dec
mov
popf
insb
ljmp
inc
jno
mov
or
pop
dec
cmovg
mov
jne
sub
aam
push
and
in
pop
mov
inc
rcr
ds
mov
mov
std
cmp
sbb
test
xor
shll
or
jne
add
xchg
xchg
mov
insb
dec
dec
adc
pusha
addr16
gs
insb
jb
das
clc
jno
xchg
shl
mov
fistpl
sbb
pop
fbstp
push
imul
arpl
mov
in
popa
rclb
enter
push
test
push
popaw
ds
inc
mov
mov
mov
xorb
add
testb
fbstp
idiv
or
add
inc
mov
pop
cmp
mov
cmovo
push
cmp
adcl
jp
sub
mov
xor
pusha
push
add
add
fisubrs
cmpsb
data16
movsb
adc
std
mov
movsb
adc
test
gs
lret
sbb
divb
lea
dec
dec
sbb
nopl
push
mov
sbb
jno
insb
stos
rcrl
jns
mov
out
xchg
dec
and
aas
test
or
scas
mov
ss
sbb
ret
pop
les
dec
jae
pop
stos
call
cmp
movsb
enter
stos
jb
dec
lea
and
and
out
je
inc
xchg
aas
out
cmp
shr
fcmove
inc
out
les
sbb
xlat
push
stos
mov
mov
out
sbb
push
mov
cmpsb
inc
and
movsl
in
insb
scas
jp
mov
xor
adc
sub
push
push
in
cmp
sub
rolb
jle
mov
test
out
js
jb
cmp
je
or
sub
outsl
and
cs
fistpll
pop
mov
push
mov
sbb
and
xchg
test
push
adc
loopne
inc
add
inc
or
jbe
jge
add
shl
dec
nop
dec
sub
mov
shr
out
and
add
inc
fs
into
stos
enter
pop
dec
mov
dec
enter
lcall
out
call
aam
inc
mov
push
push
pop
mov
ret
cmpb
rorl
clc
push
xchg
jo
test
stc
pop
int3
mov
lods
jl
push
sub
mov
enter
lret
stos
and
scas
out
inc
aad
repnz
push
cmp
andl
sub
ret
scas
mov
outsb
jecxz
test
adc
call
adc
xchg
cmp
lea
sub
xchg
sbb
shll
xlat
out
aad
and
xchg
out
aam
loopne
aad
mov
rcrb
push
andb
or
xchg
mov
cmp
mov
xor
sub
sub
cmpsl
fwait
roll
cs
inc
shll
out
stos
cmpsl
outsl
cmp
test
pop
add
xor
jae
xor
movsl
neg
dec
lret
call
sbbb
sub
lret
and
sub
xchg
roll
fisubrs
adc
dec
push
rcrl
into
leave
shll
inc
push
movsl
lahf
je
and
into
addr16
pushf
cmp
hlt
mov
mov
or
mov
push
imul
jo
mov
arpl
jae
cmpb
in
mov
cmp
xor
mov
dec
in
out
push
loope
scas
outsb
add
mov
mov
pop
es
jmp
cmp
pusha
push
dec
inc
sbb
scas
in
sti
scas
mov
in
xor
in
test
scas
scas
mov
jno
pop
rcrl
xor
fcoms
scas
out
das
outsb
stos
jecxz
insb
leave
loop
or
dec
lret
addl
inc
pop
adc
or
sbb
sbb
mov
sub
gs
jg
jg
call
jne
jnp
mov
push
ljmp
lock
in
push
push
loope
xchg
ret
popf
aaa
xchg
inc
call
push
outsb
push
dec
call
mov
mov
ljmp
bsr
loop
sbb
clc
mov
data16
mov
cwtl
mov
cltd
outsb
mov
ret
icebp
movsl
lahf
add
hlt
loope
hlt
cs
pop
lds
mov
mov
or
gs
push
xor
daa
jg
pop
or
xor
push
scas
in
lods
push
imul
mov
jns
ja
and
adc
insb
ja
cltd
lods
mov
movsb
push
mov
packssdw
into
aam
movl
inc
cmpsl
push
push
jns
push
push
add
or
cltd
fs
add
cltd
mov
sub
pusha
lock
add
cwtl
rclb
xor
jmp
cmp
sti
jp
cmp
ficoml
repz
ljmp
xchg
jne
add
mov
xchg
aam
in
or
imul
inc
dec
mov
insb
pop
fsubr
mov
sarb
inc
call
mov
addr16
andb
jnp
fdivrl
scas
mov
jecxz
decb
faddp
mov
inc
inc
and
sbb
int3
mov
sbb
cmpsl
addr16
fbstp
into
push
dec
rcrb
bound
shll
test
es
les
xor
dec
dec
aas
fcomps
lahf
pop
xor
movsl
pop
sub
push
mov
xchg
or
and
jbe
dec
cmp
sti
loope
sub
sbb
inc
jecxz
in
or
rcr
stos
push
aam
xchg
insb
mov
dec
imul
pop
xchg
iret
inc
xchg
mov
daa
mov
addr16
jecxz
test
push
add
js
xchg
push
aad
cwtl
sbb
push
loope
pop
add
xor
aad
loope
fidivs
cmp
push
bound
mov
loope
adc
lods
cwtl
jp
push
inc
push
es
add
mov
testb
mov
jmp
add
xchg
jp
jmp
hlt
fldcw
sbb
adc
fdivl
js
fidivl
cmp
test
xor
pop
call
lds
cmp
in
add
sbb
or
xchg
repz
push
or
sbb
sub
js
xor
push
ret
cs
in
sub
cld
and
or
jecxz
sbb
adc
aaa
jb
cmp
adc
popa
and
add
cmpsb
mov
dec
xchg
mov
enter
push
scas
or
stos
daa
xchg
mov
jp
insb
adc
and
imul
inc
jmp
sahf
fadds
js
xor
sbb
in
addb
mov
pop
add
sub
outsb
add
insb
cmpsl
or
push
fdivrl
repz
movsl
xor
jbe
xchg
pushf
aas
push
rep
sub
ljmp
int3
push
roll
scas
mov
das
and
mov
sbb
in
stos
jecxz
adc
mov
mov
hlt
adc
dec
addb
and
adc
scas
adc
inc
jmp
jo
mov
cmp
push
dec
pop
rol
sbb
or
das
xor
lds
jl
call
cmovge
dec
xor
add
das
jb
pushf
fadd
dec
mov
mov
notl
xchg
mov
notb
cmpsb
push
adc
mov
jno
popf
xchg
mov
or
mov
pusha
lods
pop
fbld
ds
push
in
rep
pop
inc
mov
loopne
xor
xchg
dec
add
adc
jp
out
sbbl
cmc
mov
cld
stc
sub
sub
xchg
lcall
cltd
jo
test
dec
dec
les
mov
aaa
data16
jnp
lock
inc
cli
gs
mov
repnz
push
cmpsl
inc
cmc
in
sbb
cs
imul
push
cwtl
imul
or
das
jnp
in
pop
inc
push
mov
adc
xor
faddl
sahf
out
push
and
outsb
pusha
push
repz
pop
iret
inc
in
jbe
dec
mov
psllq
cmc
shll
mov
in
lock
jecxz
cmp
sbb
and
testb
mov
jbe
testl
lods
or
mov
jnp
aaa
les
mov
lret
inc
ret
in
stc
inc
jnp
inc
push
stc
xchg
jmp
dec
js
xor
add
dec
iret
and
adc
outsb
add
mov
fs
out
ret
push
cmp
push
cltd
mov
nop
lret
jmp
add
in
shl
in
mov
mov
push
mov
or
jns
fcoms
add
dec
xchg
sub
inc
xlat
inc
mov
mov
or
icebp
sub
inc
in
xadd
rorl
cmp
mov
inc
pop
mov
stos
xor
pop
cmpsb
mov
fsubr
roll
mov
push
cmp
push
add
es
jns
shl
imul
jmp
arpl
sub
pop
ret
mov
fwait
jae
xor
std
inc
push
ljmp
or
divb
je
lahf
push
jmp
insb
dec
dec
jb
pop
rcrb
xor
jge
divl
add
push
aad
inc
push
popf
pop
and
scas
jle
fcmovnbe
stc
mov
cmp
dec
loope
push
sub
lods
mov
loop
clc
pop
cld
loopne
fidivrs
roll
in
sbb
xor
sahf
dec
sbb
pop
xchg
dec
dec
inc
and
cmpsl
into
icebp
sbb
fs
mov
lods
push
mov
subl
mov
add
lock
imul
or
xor
mov
add
into
data16
cmp
js
ret
or
cs
mov
inc
push
jns
pop
dec
sub
cmp
sbb
cmp
jae
loopne
and
mov
pop
inc
cmp
test
mov
push
add
iret
pop
jl
inc
into
and
lods
add
or
cltd
or
lods
fldl
jmp
movsb
mov
dec
int
scas
pop
rcrb
addb
push
lock
in
xchg
jp
pop
fnstcw
push
test
push
adc
orl
jmp
iret
lret
ds
fdivrs
xchg
pop
fdivrl
int
jb
mov
or
lds
adc
inc
inc
test
fisubl
ret
sbb
cmp
cli
push
dec
push
jg
adc
jl
fsubl
sub
out
sbb
dec
out
insl
xlat
inc
push
mov
repz
leave
or
in
xor
xor
inc
xor
push
xchg
jo
or
and
insb
jbe
mov
cmpsb
aad
and
icebp
push
imul
je
or
fbld
mov
inc
sbb
mov
or
sub
xor
adc
out
in
mov
iret
lret
lock
inc
sarb
popf
test
pop
dec
lods
ficoms
xor
out
out
fbld
push
loopne
push
sub
fs
test
inc
lock
cmp
mov
in
xor
lock
mov
cmp
js
mov
outsb
fisubl
mov
mov
jmp
mov
jg
pop
and
or
call
adc
roll
shr
outsb
sahf
dec
fimull
inc
or
int
fidivrs
push
dec
pop
mov
add
iret
push
jge
add
pop
pop
popa
dec
or
jb
ficoms
test
cmp
lcall
xchg
das
daa
ret
nop
jbe
incb
out
fmull
dec
inc
adc
call
and
fwait
jb
rcrl
shrd
sbb
in
push
jae
std
sub
jl
lods
xchg
cmpsb
test
mov
mov
idiv
push
sub
pop
xchg
loop
popf
outsl
and
repnz
cmpl
inc
daa
xor
and
and
out
jo
inc
jecxz
jmp
sbb
lods
pop
cmc
ret
or
jb
adc
and
bound
leave
or
in
add
daa
cli
lgs
or
popa
das
int
int
sti
loop
insb
bound
lock
dec
xchg
test
cwtl
icebp
adc
sbb
cld
js
dec
out
bound
xchg
mov
xchg
rclb
insb
in
jmp
cmp
xlat
cmp
xor
test
mov
es
addb
jmp
mov
jecxz
mov
daa
enter
cmpsb
sbb
jne
aaa
mov
test
sbb
push
sbb
imul
jl
push
xor
fs
xchg
aas
subb
mov
aas
adc
sub
or
int
jp
movsl
pushf
pop
popl
imul
test
xchg
aad
dec
mov
cli
ficoml
mov
scas
popa
mov
arpl
mov
pop
push
xlat
lods
ret
sub
dec
iret
insb
sbb
iret
adc
repnz
or
mov
movb
cmp
ret
fwait
dec
and
pushf
mov
push
sbb
scas
jecxz
xchg
rep
inc
pop
sub
loopne
or
pop
mov
jb
rcpps
stos
std
add
cmp
fwait
jecxz
mov
clc
fisttpl
rclb
std
xorl
dec
inc
fcomp
iret
jo
mov
out
jne
xor
out
enter
rcr
pop
or
inc
push
out
lods
xchg
jb
adc
mov
jmp
jae
sti
clc
arpl
nop
mov
mov
test
add
out
sti
test
xchg
daa
callw
mov
scas
outsb
in
sbb
outsl
aam
out
subb
pop
addr16
pop
add
arpl
fsubrs
loope
mov
dec
dec
cmp
fidivs
cmp
iret
jg
imul
cltd
pop
xlat
out
inc
outsl
inc
addr16
push
xlat
sbb
rclb
movsl
test
es
jae
sarb
xchg
jp
mov
das
xor
test
jle
popa
leave
inc
or
dec
pop
clc
sub
inc
imul
add
mov
in
jge
enter
xchg
pushw
cmp
xchg
inc
in
testb
shl
cld
aaa
es
dec
fistl
data16
mov
loopne
mov
push
fdivrl
jns
lret
sti
add
cmp
fmull
jg
xchg
jle
push
push
add
pushf
dec
dec
pop
bound
or
pop
jo
xor
test
xchg
inc
mov
lret
push
add
sbb
dec
mov
jle
fwait
mov
dec
sub
xlat
mov
out
pop
fwait
loopne
shr
cld
lcall
adc
sub
movsb
cmc
iret
dec
call
gs
or
imul
xor
cmovb
scas
adc
jg
xor
jmp
jmp
and
lock
and
adc
loope
add
push
divb
adc
and
arpl
rclb
xchg
out
jmp
fsubp
leave
mov
adc
mov
inc
sbb
or
cmp
bound
mov
insb
mov
sahf
inc
dec
adc
dec
ds
pop
movsl
adc
or
popa
dec
sbb
mov
xor
das
xchg
jl
in
or
es
stc
fdivp
mov
or
imul
rcrb
inc
fimull
repnz
insl
xchg
add
or
mov
test
mov
loop
pop
mov
lock
jle
add
adc
movsl
pop
cmp
adc
aaa
jecxz
sbb
cli
movl
mov
sbb
aas
fdivrs
lcall
mov
cmp
cs
cld
adc
mov
cmp
hlt
ss
sbb
jo
inc
iret
sub
and
addr16
sub
je
xchg
dec
mov
inc
push
sub
sbb
ret
stos
mov
cs
mov
push
pop
lock
xor
dec
inc
sub
cmp
loope
and
orl
add
scas
ss
xor
pop
sbb
loopne
or
out
lods
adc
xchg
gs
mov
sti
in
add
cmp
js
pop
sbb
fstpl
int
adc
xchg
mov
repz
dec
push
push
pusha
cmc
in
fistps
push
pop
push
cmp
mov
call
cmp
insb
inc
cltd
push
pop
cmpsb
jb
ljmp
out
out
jl
les
and
out
mov
repz
test
and
push
sti
adcb
pop
ja
xchg
or
adc
and
pop
loope
pop
pushf
inc
shrl
std
cmp
arpl
mov
xlat
mov
jmp
xor
or
xor
xlat
shll
sub
sahf
rol
das
and
cmp
data16
insb
inc
xor
ljmp
std
rcll
jo
dec
repz
adc
loope
and
in
xlat
or
push
sub
mov
inc
mov
rcrl
mov
fiadds
loopne
xchg
in
sub
jbe
inc
cli
icebp
or
and
add
mov
push
andb
nop
xchg
call
jno
imul
fucomi
test
cmpsl
add
dec
jmp
bound
mov
testl
sbb
addb
or
sbb
ja
sarl
sub
hlt
mov
lds
stos
inc
sbb
mov
dec
inc
push
test
data16
or
leave
dec
mov
scas
cltd
insl
xchg
jae
sbb
sbb
sub
push
lea
add
jns
push
adc
cmovp
or
out
jb
gs
sub
lock
inc
outsl
jl
aad
xchg
cmp
xor
test
jb
sub
mov
sbb
fisubl
fisubrs
ret
fdivs
mov
and
dec
and
lcall
and
fwait
xchg
addr16
push
outsb
aaa
fucomi
loop
mov
mov
sti
dec
mov
pop
and
out
fsts
jle
jns
es
and
outsb
sbb
xor
jl
pop
or
adc
pop
sbb
das
jl
dec
pop
xchg
lcall
mov
lods
mov
pop
jmp
push
lret
or
out
cwtl
adc
loope
sub
mov
pusha
mov
jg
mov
jb
fs
xor
in
imul
or
jg
roll
iret
pop
mov
jns,pt
push
cmp
pop
lahf
or
xlat
mov
jge
fdivl
sub
or
pop
adc
xlat
lcall
shrb
mov
rol
loop
mov
push
repnz
dec
cmpsb
shll
fimuls
add
jns
repnz
sbb
fucomp
and
lea
jmp
into
icebp
sarl
ficomps
or
andl
dec
push
addr16
lods
pop
push
sub
cmp
aas
neg
dec
aas
sub
pop
jl
mov
mov
notb
orb
outsl
ret
sub
push
jbe
cmp
mov
cmc
mov
mov
mov
or
stc
sub
js
cmp
cmp
adc
push
pusha
mov
gs
jecxz
xor
insl
xchg
jg
clc
adc
push
xor
adc
xor
adc
lcall
mov
pop
cmpsb
or
lcall
pop
xor
bound
inc
int
mov
dec
and
mov
or
cmp
out
inc
mov
in
in
andl
aaa
mov
push
pop
cmp
xor
dec
jmp
pop
and
into
or
push
lods
stos
adc
popl
ret
pop
popf
push
cli
dec
mov
hlt
or
mov
dec
push
int
inc
movsl
mov
lret
lcall
repz
add
pop
jle
aad
movsb
jmp
mov
in
movsl
call
or
incl
sbbb
xor
loop
inc
clc
ret
sub
push
mov
and
jno
mov
xor
outsb
jge
push
js
add
lods
push
aaa
imul
cmpsl
inc
stc
push
inc
xlat
enter
sbbb
xor
loop
inc
and
pusha
movsl
mov
test
pushf
or
jmp
stos
mov
inc
lret
jmp
icebp
loopne
fdivs
and
add
loopne
mov
add
dec
aaa
pop
enter
test
bound
cld
lods
cmp
into
addr16
cs
mov
dec
xchg
lock
mov
les
hlt
popa
imul
push
mov
pop
mov
movsl
in
jge
out
lods
stc
insb
jecxz
jae
cmp
decb
fcmove
mov
test
lods
add
test
cmp
and
iret
and
test
pop
lods
adc
bt
es
mov
imul
mov
xor
fistpll
push
xor
cmp
lock
sbb
pop
xchg
fisttpl
mov
arpl
xor
and
aaa
sub
xchg
cmp
cltd
jmp
fwait
sub
rcrb
mov
lds
scas
push
xchg
inc
adc
cmp
xchg
xchg
mov
pop
adc
lcall
pusha
dec
cmp
aas
xor
cmp
push
je
cmc
sub
and
ljmp
push
jmp
mov
add
je
scas
jmp
out
xchg
mov
pop
push
dec
xor
lock
mov
lret
testl
scas
jns
scas
or
mov
int3
dec
mov
popa
fmull
mov
add
fsubrl
addr16
adc
inc
addr16
add
mov
mov
cltd
add
pop
fwait
insb
es
scas
xchg
bound
inc
inc
xor
enter
dec
leave
pop
imul
jae
or
rcl
rcr
fdivrl
xchg
push
dec
sub
sbb
test
cmpsl
push
test
jbe
jl
jnp
jo
adc
pop
stos
mov
aas
loop
add
jge
xor
jns
mov
and
add
lret
popf
cmp
in
mov
dec
sub
mov
mov
testl
insl
mov
popf
iret
sub
xchg
not
mov
mov
fwait
int3
gs
arpl
cld
in
mov
adc
scas
fs
push
jb
sub
pop
pop
jecxz
pop
stos
and
pop
int
mov
dec
stc
outsl
in
mov
imul
and
call
out
adc
es
and
or
sub
in
or
cld
xchg
mov
int
lea
gs
mov
dec
ret
inc
outsl
stos
test
mov
mov
fisubrs
adc
aam
push
leave
jns
cli
or
adc
hlt
jecxz
jl
or
ficoms
add
cmp
scas
inc
dec
jecxz
inc
mov
inc
aas
enter
test
sbb
xor
hlt
out
int
xchg
xor
cmp
add
push
scas
repz
in
lds
call
cli
dec
jge
scas
lret
pop
mov
lcall
xchg
enter
imul
mov
scas
adc
adc
in
clc
dec
pop
gs
sub
cs
ljmp
inc
xchg
mov
and
int3
shlb
pop
rol
sbb
dec
push
push
mov
aam
sahf
xchg
negl
mov
xor
imul
mov
pushf
push
aam
bound
add
int
lcall
imul
leave
ret
aaa
mull
insb
dec
nop
add
inc
pop
lcall
imul
adc
pop
scas
repnz
sbb
xlat
or
mov
sub
ja
pop
jnp
adc
out
outsb
mov
add
mov
hlt
lahf
pop
push
inc
sbb
inc
jp
xor
stos
pop
xor
mov
pop
sbb
add
aaa
js
sarl
adc
and
mov
or
jg
mov
inc
cmp
and
push
push
lds
lea
insb
std
dec
adcb
jle
xor
dec
lods
pop
adc
mov
add
xchg
mov
sahf
sahf
sti
int3
mov
mov
sbb
and
sbb
lods
mov
sub
cmp
mov
mov
and
pop
cli
inc
data16
test
loope
sbb
push
mov
sbb
mov
jmp
aad
jo
popa
in
test
data16
pop
sbb
lret
and
push
mov
sub
cmp
test
mov
xchg
cmpsb
insl
dec
mov
add
rcrb
add
in
push
lods
push
adc
or
int
bound
subl
and
cmpsl
ds
clc
test
out
push
imul
pop
push
xchg
cwtl
adcl
popf
pushf
mov
adc
adc
cmpl
push
es
fsubp
pop
mov
and
lock
scas
xor
cs
dec
cmc
pop
xorb
imul
inc
cmp
sub
xchg
mov
adc
shlb
cli
mov
or
pop
stos
scas
and
mov
je
loopne
sub
lcall
fsub
fisubs
aam
push
inc
lret
mov
inc
push
push
pop
adc
outsl
or
dec
push
pusha
mov
sahf
mov
mov
inc
dec
testb
sbb
sti
dec
pop
dec
popa
xor
fwait
sti
cmp
shrb
enter
xor
mov
pop
fdivrl
cs
enter
xor
dec
sbb
fistps
lock
lods
sarl
nop
sub
divl
fs
out
pusha
lds
cmc
lcall
xor
xor
sbb
push
aad
sbb
nop
out
loopne
hlt
add
decb
das
inc
or
pop
lods
jns
mov
push
inc
sub
sbbb
repz
push
sahf
mov
push
pop
adc
sub
jl
in
mov
out
leave
imul
and
loop
decb
fwait
or
imul
pop
rcl
jnp
sub
pop
sbb
sub
xlat
and
fnsave
and
push
inc
aaa
jecxz
push
add
pop
hlt
cltd
cld
in
call
adc
dec
pxor
pop
push
cmp
fcoms
cmp
push
pop
push
dec
outsl
cmc
cmpsl
or
jle
je
cltd
jnp
xchg
movsl
orb
cli
aam
int3
imul
jbe
push
outsb
fmulp
adc
rcrb
push
fdivrl
adc
or
pop
sub
cmpsb
lahf
xor
int3
xor
imul
call
cmp
cltd
outsl
in
and
or
test
in
jl
fdivs
aaa
mulb
stc
xchg
push
dec
jecxz
xchg
jg
push
pop
mov
shr
lods
mov
sbb
scas
inc
insl
jnp
sarl
scas
and
mov
rcll
arpl
fnstenv
mov
xchg
push
bound
dec
pop
daa
out
sub
inc
pop
dec
jmp
pop
push
stc
hlt
inc
mov
pop
test
inc
aaa
inc
adc
dec
mov
jnp
hlt
icebp
inc
fisttpll
in
mov
sbb
fdivs
add
loope
jno
xlat
lds
stos
fidivs
dec
shlb
mov
bound
pusha
pop
adc
xor
xor
and
cmc
out
les
dec
cs
loop
push
rcll
push
cmp
sahf
cli
in
repz
test
shld
jo
sub
mov
xchg
test
fld1
sub
leave
mov
jl
cld
repz
add
loop
jl
inc
loop
out
mov
adc
shlb
cmp
pop
out
mov
pop
mov
cld
div
cmpsb
jne
pop
add
push
mov
stos
lret
shlb
dec
movsl
fiadds
mov
js
push
test
test
add
out
enter
jle
and
inc
and
repnz
mov
idivb
push
xchg
jge
dec
inc
lock
inc
xchg
push
cmp
cmp
mov
inc
sar
jp
push
cmpsl
ljmp
test
xchg
mov
push
inc
cmpsb
sub
in
in
rcrb
and
call
imul
sub
testb
inc
mov
loop
popf
insl
jbe
fistl
nop
stc
push
sbb
outsl
mov
dec
mov
fxtract
clc
lret
jmp
fwait
mov
outsl
inc
xlat
jecxz
pusha
jge
lock
movsb
xor
adc
cmp
cmp
xor
pavgb
cmp
adc
repnz
inc
dec
dec
pusha
mov
test
mov
add
lahf
or
mov
outsl
pusha
add
pop
pop
dec
cmp
dec
or
add
pop
imul
inc
fwait
mov
cmp
sub
fdivrl
jb
pop
pop
lahf
push
or
inc
mov
divl
lock
jp
fiadds
stc
cmpsb
jns
popa
repnz
fisttpl
jmp
fcmovb
aam
insb
adc
loope
sbb
xor
xor
ds
mov
pop
and
shl
jp
out
pop
movsl
push
adc
mov
insb
pop
adc
xchg
push
xor
fsubs
mov
cmc
mov
movsl
mov
loopne
loop
jae
inc
mov
jno
or
and
iret
in
cmp
mov
jp
hlt
jge
sub
adc
xchg
andl
lcall
ss
pop
es
pop
pop
mov
dec
mov
inc
ret
sub
push
dec
push
push
sub
adc
adc
sahf
push
out
xchg
cmp
testb
xor
sub
lret
fwait
lock
mov
rcr
test
popa
jle
es
imul
dec
mov
or
adc
jl
clc
pop
mov
outsl
ret
gs
repz
imul
leave
popf
jp
lods
cmpb
xor
jge
xor
mov
adc
dec
add
jae
xor
and
and
push
and
icebp
je
sbb
popa
sub
stc
xor
out
stos
ss
ret
nop
movb
xchg
dec
je
ljmp
in
adc
in
jo
xor
push
movsl
cltd
sbb
push
out
repz
push
jle
sub
js
insl
cmpsb
out
lcall
mov
adc
fwait
cwtl
adc
fdivl
test
dec
push
out
push
sub
lret
add
rdmsr
sub
gs
lar
pop
mov
sbb
mov
stc
sbb
mov
push
jns
jo
xchg
in
fldcw
lea
mov
sub
and
cltd
xorl
pop
mov
in
pop
repz
clc
sbb
ret
or
loope
divl
loopne
addr16
push
jmp
idivb
scas
sbb
sub
test
ds
sub
mov
insb
push
mov
sbb
aad
fldt
mov
mov
test
cld
add
xchg
ret
imul
mov
je
jge
jae
gs
pushf
loop
enter
stos
add
or
loop
pop
xchg
xchg
popf
mov
cmp
mov
mov
nop
movsb
inc
push
xchg
jg
mov
xchg
xchg
stos
mov
fwait
test
shll
fmuls
mov
enter
pop
imul
xchg
cmovo
or
test
add
cmp
pushf
jge
das
adc
lahf
mov
mulb
jno
sti
jo
pop
mov
nop
fcoml
stos
mov
mov
rcrl
enter
push
or
mov
push
fimull
test
cltd
add
pop
aaa
or
repnz
call
repnz
mov
imul
pop
sbb
push
fisttpl
and
mov
add
jae
fstps
jno
mov
mov
sahf
fucom
and
pop
fsubrs
push
aam
jb
lcall
mov
into
pop
std
cld
xor
mov
rol
ljmp
hlt
lahf
jnp
std
xor
fldt
pop
cmp
cmpsl
pusha
shl
in
aad
icebp
push
ret
sbb
out
test
dec
lods
mov
add
mov
outsw
mov
test
or
pop
jmp
fcmovbe
mov
xchg
mov
pop
xor
inc
out
in
movsl
add
cwtl
mov
std
repnz
sub
push
inc
adc
pushf
pop
pop
popa
les
int
lret
inc
mov
cmpsl
ret
fisubl
rcr
mov
mov
push
mov
cli
and
stos
fwait
add
insl
pop
rcl
popa
sub
testl
lcall
inc
les
fwait
lret
fisttpl
pop
nop
xlat
sub
sti
push
sti
mov
lahf
jbe
mov
lahf
aam
ljmp
in
ds
push
jl
cmpl
dec
push
es
pop
dec
stos
shrb
xor
aaa
sub
les
repz
pop
mov
cld
pop
fnstenv
das
imul
sbb
mov
das
test
mov
jo
cld
std
cmpsw
xor
sbb
stc
es
cld
stos
jne
ret
out
mov
ficomps
aad
rol
xchg
xchg
leave
push
js
or
mov
inc
mov
or
cmc
cmp
ljmp
out
sbb
popa
dec
fimuls
daa
xlat
xor
test
xor
lods
mov
test
cmp
jbe
fistpl
or
push
sbbb
icebp
pop
lods
jbe
mov
test
inc
data16
push
adc
dec
mov
stc
bound
mov
mov
rcr
iret
cmp
cli
add
jbe
mov
movsb
insl
in
xchg
cmp
repz
mov
push
aaa
dec
add
into
sar
push
pusha
lcall
adc
mov
fs
sbb
sub
std
jb
loopne
subl
adc
jne
mov
sarb
iret
testl
imul
popa
enter
lea
popl
push
insl
add
adc
sbb
stc
icebp
sbb
inc
jmp
test
hlt
push
jae
lock
fisttpll
sahf
fcomps
movsl
dec
xchg
in
or
push
adc
jnp
orl
push
pop
roll
xchg
xchg
pop
sub
dec
mov
add
jbe
or
jle
andl
into
out
pushf
int3
pusha
pop
test
lcall
stc
shlb
xlat
sbb
outsl
mov
in
xchg
sarb
mov
cmpsb
mov
fiadds
pcmpeqw
ljmp
jmpw
sbb
jae
iret
cmp
mov
mov
fwait
inc
div
mov
lea
aas
or
dec
xor
hlt
mov
into
in
mov
popf
xchg
lret
mov
jne
jp
outsb
pop
cmc
push
mov
push
and
jle
xchg
xchg
cmc
or
and
adc
sahf
lods
mov
std
ret
xor
repnz
add
lods
sbb
jmp
xchg
or
sti
mov
repnz
imul
xor
cmp
mov
lret
push
adc
repz
popa
test
loop
xchg
loopne
das
xchg
pop
push
dec
shll
lods
into
insl
cmpsl
adc
push
into
mov
pushf
inc
xchg
cmp
and
mov
jb
push
jns
test
test
hlt
push
daa
fwait
or
ds
mov
xchg
stos
jns
arpl
in
sub
rcrb
xchg
cmp
lcall
stc
mov
scas
in
roll
sahf
shld
jecxz
pop
dec
dec
xor
stos
mov
mov
cld
jl
push
xor
xor
ljmp
xchg
sub
es
mov
das
sub
pop
cmpsb
mov
add
sub
mov
push
pop
or
std
jnp
add
xlat
and
dec
add
out
dec
in
shl
xchg
adc
pop
mov
int3
jecxz
mov
daa
pop
mov
clc
lahf
ds
loope
imul
lret
inc
fidivl
mov
movsl
and
in
push
cmpsl
paddsw
ss
xchg
lret
sub
loopne
pop
jbe
outsl
mov
nop
adc
repz
in
pop
ja
jb
rcll
lret
mov
lea
fs
inc
icebp
incl
iret
cmp
into
stos
sti
subb
ja
fsubrl
decl
pop
sbb
mov
mov
in
lcall
xchg
push
sbb
jp
icebp
sub
mov
inc
sbb
push
rcll
push
dec
lods
mov
xor
sub
daa
test
sbbl
ja
shlb
iret
add
test
mov
xor
movsb
imul
lahf
adc
outsb
in
xchg
xlat
adc
test
dec
cmpsl
imul
fisubrs
shll
pusha
cmp
xor
jns
jmp
xor
in
ss
test
mov
out
or
xchg
pop
sub
sub
popa
push
arpl
mov
loopne
sub
cmc
xchg
outsb
push
jo
pop
roll
add
mov
and
pusha
mov
cmpsl
mov
push
mov
unpcklps
imul
sti
clc
stc
push
mov
mov
adc
int3
pusha
xor
stc
rorl
aam
call
push
cmp
fdiv
fs
mov
inc
mov
cwtl
sub
stc
dec
jae
orl
arpl
and
add
cmp
mov
cld
in
jg
in
loope
rol
dec
xor
mov
int
jmp
insb
lods
nop
lret
lret
testl
les
push
mov
je
pop
mov
push
xlat
js
and
gs
mov
pop
ss
add
jnp
repz
aam
ret
mov
movsl
xor
es
cmpsl
push
stos
scas
cmpsb
jne
test
jns
jbe
test
pop
jb
xchg
imul
jge
mov
and
push
mov
or
mov
mov
mov
out
mov
push
and
mov
or
in
imul
add
adc
mov
adc
adc
sbb
clc
inc
cmp
ja
push
push
test
rcrl
cmpsl
sbbb
repz
inc
sub
push
push
fwait
ret
add
jno
push
and
or
push
addr16
lret
add
lret
jg
and
int
jmp
js
push
subl
jl
mov
shlb
xlat
sti
push
andb
test
mov
push
hlt
push
inc
push
insl
jae
repnz
add
mov
xchg
push
fs
rorb
sti
mov
inc
xor
jne
sbb
push
pusha
jge
enter
push
adc
test
add
mov
nop
push
push
sbb
xchg
into
or
repnz
fistpl
shlb
or
sbb
in
jmp
leave
add
mov
mov
cli
movsl
ds
inc
imull
pop
icebp
test
fs
dec
sub
in
sti
into
stc
int
aaa
sbb
inc
dec
pop
add
lahf
mov
jo
pop
mov
iret
out
subb
sub
shrl
sub
mov
adc
xor
push
popf
lret
sbb
sub
sub
mov
int3
inc
xchg
push
sub
std
inc
and
loope
push
testl
lds
and
mov
dec
mov
or
cwtl
aad
push
pop
cwtl
out
test
lods
sbbb
mov
inc
add
xor
arpl
das
or
adc
sbb
add
xor
fdiv
leave
lahf
dec
pop
pop
sub
cli
push
inc
or
cmp
loopne
out
imull
jnp
xor
push
dec
movb
rcll
in
aas
rclb
xor
insb
notl
sub
insl
jle
loopne
aad
es
sub
push
sahf
les
repz
push
add
in
jecxz
xchg
jo
fucomip
mov
sub
and
ret
andl
push
sarl
or
mov
cmpsl
sub
movsb
lods
lret
mov
mov
jge
jle
test
xor
div
popa
rcr
xor
xchg
push
dec
lds
imul
push
mov
test
push
jae
jbe
cmp
lock
fs
jnp
out
popf
jle
loopnew
sti
xor
ljmp
add
repz
dec
xor
xor
cmp
cmpsb
and
pop
inc
insl
gs
jge
jo
out
mov
int
dec
adc
adc
lcall
out
dec
pop
pop
std
dec
ret
out
sbb
fstpt
push
mov
je
iret
mov
push
mov
dec
cmpsb
xchg
cltd
and
gs
addr16
repnz
out
fwait
loopne
cmp
mov
mov
push
jp
mov
pop
cmp
pushf
inc
add
fmulp
fldcw
loope
mov
fsubrl
aad
dec
nop
add
pushf
lret
arpl
js
pushf
leave
in
into
xor
cmc
push
mov
cmp
out
int
xchg
xchg
stos
cli
sbb
lock
fcmovnb
pushf
push
pop
addb
xchg
into
jl
hlt
mov
fistpll
rcrb
push
mov
or
out
mov
insb
lods
out
dec
test
out
imul
or
cmpsb
int
fwait
xchg
daa
test
jecxz
lcall
adc
lods
daa
je
in
xor
jo
inc
es
add
sub
cmpsb
test
roll
cmp
mov
lods
jb
cwtl
mov
or
or
popf
dec
clc
lock
pushf
cmc
int
add
test
jns
sahf
addr16
sbb
dec
xchg
les
jge
insl
mov
sarb
fsubp
xor
out
pop
sbb
cmp
mov
xchg
xchg
xor
outsb
cwtl
aas
xor
push
cmp
aam
mov
cs
inc
dec
fnstenv
push
or
fdivrs
pop
addr16
mov
imul
scas
adc
push
mov
sbb
cli
lea
fimuls
jp
insl
or
loope
repnz
mov
jo
insl
lcall
sahf
scas
repz
std
jmp
push
sbb
push
inc
mov
popa
jl
mov
mov
mov
cltd
arpl
mov
mov
popl
data16
add
cwtl
cmp
inc
sbb
mov
xchg
outsb
sub
cwtl
mov
pop
mov
sbb
xchg
aam
cmp
or
cmp
jb
stc
pop
lret
ret
test
and
jle
dec
fisubrl
dec
mov
cmp
or
mov
test
in
xchg
xchg
jns
inc
push
imul
adc
pusha
pusha
and
and
add
and
sbb
gs
mov
adc
fsubrs
xor
xchg
adcb
cmp
xchg
xor
jg
jge
lret
ret
and
add
ja
and
rcrb
adc
adc
fisttpl
fsubrl
adc
out
push
dec
adc
jnp
les
jl
push
stos
jl
adc
xchg
test
mov
xor
loop
mov
mov
idivl
inc
pop
cmp
sbb
imul
sbb
push
inc
mov
pop
cld
dec
test
aam
sub
add
sbb
and
ss
lea
mov
mov
lock
and
or
lods
sbb
sub
mov
add
xchg
pop
add
push
outsl
jle
xlat
scas
inc
mov
dec
or
pop
push
xchg
pop
cwtl
icebp
movsb
add
xchg
popa
addb
aam
call
pop
test
ja
cmp
fnstcw
fxch
mov
xchg
add
add
in
mov
mov
shl
jb
in
sbb
and
cmp
add
mov
lret
movsl
mov
and
imul
fisubl
jb
fiaddl
jl
inc
xchg
scas
adc
sahf
cmp
push
dec
lock
xchg
or
dec
mov
inc
dec
dec
xchg
fimull
adc
outsb
fstp
inc
mov
cmpsb
dec
es
adc
popa
pop
popf
pop
std
sub
sbb
mov
stos
fldcw
xor
loop
mov
inc
adc
lds
ja
sbb
mov
frstor
dec
outsb
movsl
shrb
je
mov
les
dec
hlt
mov
jl
rcl
mov
int
lods
sahf
pop
xorb
jge
fs
jne
mov
sahf
cli
jbe
sbb
test
or
jg
jle
hlt
sub
ds
or
cs
in
push
clc
lret
jle
or
sbb
imul
sub
lea
pop
jle
push
jnp
pop
mov
js
add
bound
cltd
fsts
push
ficomps
dec
jmp
jp
jns
jecxz
xchg
adc
push
popf
sbbb
adc
stc
outsb
cmp
test
xchg
movsl
jno
push
jle
dec
in
adc
iret
movsl
and
aam
lock
push
dec
mov
call
inc
push
dec
shll
push
push
nop
pop
push
xor
or
jno
leave
sbb
mov
test
lret
incb
mov
adc
mov
shl
pushf
sub
or
dec
aaa
inc
push
jno
pop
cmc
in
pop
jb
arpl
adc
xorb
fs
popf
cmpb
jbe
jae
stc
dec
imul
mov
outsb
pop
cmpsb
pusha
shlb
outsb
inc
movsb
cmp
jg
and
cli
pop
mov
push
push
jne
or
fstpt
into
mulb
pop
inc
stos
jbe
push
rclb
ljmp
sub
sbbl
mov
popa
cmc
and
sub
jmp
pop
stc
add
scas
and
clc
cmp
mov
in
sbb
pop
sub
sbb
pop
out
ret
jbe
test
ja
std
inc
lods
and
cmp
adcl
nop
mov
out
ljmp
ret
push
imul
sbb
pop
cmpsl
pushf
mov
out
add
xchg
gs
mov
pushf
stc
cmp
adc
subl
call
dec
jg
lcall
mov
sub
in
sub
mov
jbe,pn
cli
push
clc
cmp
cmpsb
and
scas
clc
sbb
int
lock
orl
std
lea
mov
enter
roll
call
or
jns
jle
push
cld
cmp
xchg
jbe
xchg
mov
mov
mov
cmp
cwtl
mov
mov
jne
shl
aas
sub
pop
mov
outsl
mov
fnstcw
mov
cli
cmpsl
cmp
repnz
rolb
movsl
xchg
fistpl
jb
scas
movb
punpckhwd
mov
mov
mov
xor
imul
bound
sub
or
mov
gs
popf
mov
incl
mov
cmp
mov
jb
push
outsl
pop
lahf
jmp
aad
idivb
enter
repz
mov
sbb
sub
neg
jle
mov
adc
cmp
jmp
mov
adc
cld
fucomi
out
mov
stc
mov
lcall
push
ljmp
sahf
popa
xor
xchg
and
jo
jmp
in
ret
scas
push
add
xor
dec
jge,pt
and
cmpsb
cmp
xlat
call
adc
pop
push
mov
jl
movsl
inc
mov
sbb
lods
inc
mov
cmp
push
mov
xchg
aaa
mov
scas
xchg
ret
mov
addr16
pop
jg
aas
and
mov
in
push
in
enter
xchg
outsb
ja
jmp
adc
ficompl
inc
cmc
pop
cmpsl
in
mov
dec
sub
adc
xchg
leave
push
add
inc
sub
dec
or
jp
rolb
or
cmpsl
repz
xor
movsl
imul
pop
jmp
popa
out
andl
insb
repnz
outsb
pop
jp
lea
ret
loopne
add
lods
aas
pop
jge
in
dec
cs
xor
sub
pop
push
or
xchg
dec
dec
ret
or
rcrl
sbb
mov
aas
or
lods
pop
dec
xor
xor
mov
inc
push
pop
dec
jp
push
ficoms
and
jp
xor
push
push
ds
imul
ret
out
xchg
lret
xchg
bound
shlb
mov
mov
add
inc
outsl
xchg
sub
adc
aam
cwtl
in
sbb
sbb
adc
fcomp
jg
pop
mov
ds
mov
cmp
movq
pop
mov
push
sbb
sub
sbb
and
pusha
loopne
push
adc
and
dec
jns
rorb
lcall
xchg
incl
cld
pop
dec
inc
dec
test
mov
fwait
popa
test
push
out
in
es
mov
cmp
in
add
and
sub
loopne
or
xchg
hlt
adc
dec
movsb
and
lds
jae
jp
push
sbb
cvtpi2ps
adc
xchg
sti
js
xchg
movsl
sub
mov
test
mul
aaa
pop
fwait
pop
icebp
in
add
pop
lea
icebp
sub
adc
xor
cmp
pushf
push
adc
dec
jns
or
mov
push
sarl
inc
adc
dec
pop
push
lock
and
cwtl
mov
add
dec
cmpsl
ljmp
mov
outsl
sbbl
push
pop
xchg
push
mov
or
cli
push
mov
mov
ret
push
ret
and
adc
dec
cmp
adc
pop
add
and
xor
push
jbe
lcall
mov
aaa
and
push
test
shll
loop
cmp
cld
jp
or
sbb
adc
cmpsl
mov
imull
push
mov
and
pop
push
cmp
push
cmp
push
repz
jg
xor
or
mov
mov
out
rcr
or
sub
lds
xlat
add
fstps
and
call
cmp
mov
inc
cmpsb
xor
jg
in
jne
mov
mov
fwait
jb
dec
push
mov
xor
lea
jno
mov
hlt
aam
popa
fabs
movsb
icebp
aas
pushf
cwtl
cmp
lods
cmp
or
es
xchg
scas
cmc
pop
mov
sbbl
jl
mov
movsl
mov
or
or
xor
out
adcl
filds
outsb
push
xchg
lea
dec
scas
jmp
dec
popf
xor
pop
sub
mov
dec
test
cwtl
pop
int3
jecxz
sub
cmp
out
mov
dec
nop
adc
mov
cld
jns
xor
jno
cmp
xor
or
sbb
inc
pop
and
ja
imul
sahf
jge
add
imul
push
mov
jp
adc
addl
out
mov
out
enter
or
jg
rcl
in
inc
jb
std
cwtl
xchg
sbb
xchg
or
adc
in
pop
add
xchg
loope
push
rcll
jae
in
scas
in
cmp
and
mov
cmp
pop
test
insb
arpl
sbb
xor
pop
rcrb
and
xchg
push
subb
sub
or
scas
inc
cltd
jp
or
push
inc
mov
data16
repz
adc
test
out
in
loop
pop
dec
jmp
and
inc
jle
or
aas
ficoml
cmp
inc
inc
mov
lret
mov
dec
cs
jnp
test
addl
add
lret
cmc
loope
or
xchg
pushw
rcrl
int
xchg
jmp
dec
je
les
inc
sub
sbb
and
inc
pusha
xchg
add
shll
lock
sub
aaa
push
sub
aas
fsubl
sahf
scas
xchg
shlb
mov
ss
lock
mov
les
decb
xlat
jbe
pop
mov
cmpsl
jnp
lret
mov
fsubr
cmp
xchg
in
stos
daa
or
movsl
inc
mov
addr16
mov
pop
dec
mov
daa
lock
cmp
aam
ljmp
xchg
popf
cmc
mov
ljmp
adcl
push
mov
dec
mov
in
mov
dec
lret
inc
lea
cmp
loopne
or
aam
loope
push
adc
test
or
cs
pop
dec
cld
push
and
dec
pop
fistpl
cltd
push
sbb
js
push
sbb
mov
xchg
mov
and
xchg
xchg
mov
jb
cmpsl
fnstenv
pop
jle
adc
jno
push
out
scas
mov
stos
subl
push
pop
lret
sub
and
insl
inc
lret
lds
mov
inc
mov
sahf
or
add
cmpb
xor
or
test
or
nop
clc
push
xor
xor
daa
push
mov
xchg
jae
mov
test
lcall
gs
xor
or
xor
jne
push
stos
sub
pop
jb
push
sarl
or
inc
icebp
dec
dec
cmp
test
repz
out
and
rolb
xchg
inc
pusha
add
mov
sbb
int3
or
jo
std
out
fdiv
mov
bound
fsubrl
ds
mov
push
outsb
push
subl
iret
clc
scas
adc
cmp
sbb
addr16
add
xchg
out
dec
jne
mov
adc
dec
ret
in
fsubl
sti
push
push
xor
dec
das
fimull
jle
fs
mov
push
adcl
jecxz
mov
les
repz
data16
orl
add
mov
sbb
call
mov
hlt
loopne
in
stos
mov
arpl
mov
shrb
push
mov
mov
lahf
es
cmc
or
ja
je
pop
mov
mov
imul
icebp
add
insb
push
addr16
lods
imul
fdivs
xorl
sbb
mov
shrl
xchg
fcoml
mov
iret
xor
xchg
ret
stos
xchg
xor
sbb
or
dec
mov
jecxz
ja
mov
push
gs
loopne
mov
mov
jns
fcompl
movzbl
push
lods
mov
mov
mov
push
push
and
call
pop
inc
dec
sbb
lods
xorps
and
insl
sub
mov
jo
mov
dec
out
fildl
rcrl
mov
mov
jmp
mov
inc
xchg
fiaddl
divl
xchg
cmpsl
or
mov
sti
call
js
mov
pushf
fisubrl
pop
adc
mov
out
into
mov
pusha
les
out
sub
xor
cltd
jmp
repz
ja
xchg
mov
sbb
rclb
push
xor
idivb
dec
ret
mov
mov
adc
jne
adc
or
or
pop
push
mov
pop
pop
pop
or
inc
clc
insl
add
imul
pop
sbb
mov
and
inc
ret
adc
mov
imul
jl
jmp
push
das
ds
in
imul
dec
push
jae
xor
cli
addr16
push
jne
test
and
mov
push
xchg
push
dec
xlat
push
adc
je
test
inc
data16
xchg
rcl
out
dec
push
mov
shrl
fmull
mov
imul
lcall
mov
pop
loop
xor
or
popf
rorl
push
mov
pop
sbb
adc
push
iret
xchg
add
cmp
sub
inc
fwait
add
pop
mov
enter
adc
cmpsl
ljmp
clc
inc
sbb
pop
pop
lds
sub
mov
add
ljmp
unpckhps
xchg
pop
sti
inc
jge
inc
rcrl
inc
fadds
and
mov
inc
out
or
shrb
cmp
div
insb
sbbl
adc
push
fcmovbe
mov
mov
push
out
push
jbe
sbb
mov
dec
and
jb
repz
adc
cmpsl
jo
fmull
or
sub
sti
push
ljmp
cmp
inc
pop
mov
pop
bound
adc
shlb
xchg
jle
sahf
out
loopne
adc
jg
jmp
sbb
mov
movsb
div
and
int3
int
mov
or
mov
sbb
cmp
cltd
daa
push
sub
sbb
cmpsb
mov
je
inc
add
xchg
mov
mov
out
sbb
mov
iret
ret
push
fisubrs
and
fstpt
inc
lods
cmpb
xchg
xor
sub
pop
inc
mov
movsb
cmp
aaa
dec
xlat
xchg
or
lock
pop
xor
out
mov
mov
movsb
fidivrs
fs
and
js
divl
lret
test
cmpsb
cwtl
into
outsb
sub
inc
lret
pop
mov
movsb
jecxz
imul
sub
mov
fs
push
cmpsl
mov
inc
les
jo
scas
lcall
or
xchg
inc
test
mov
push
int
add
test
scas
cld
es
cli
dec
scas
mov
add
mov
imul
push
inc
mov
out
stos
outsl
push
ds
std
push
push
clc
into
int3
mov
iret
sub
mov
inc
jmp
lock
jno
cltd
jo
adc
in
imul
mov
bnd
sub
push
loopne
inc
inc
cwtl
cmc
xor
lret
xchg
push
and
dec
sar
aaa
scas
cltd
or
inc
lods
repnz
adc
inc
sbb
cli
add
test
sbb
fdivr
jmp
sub
pop
xchg
xor
popf
jbe
iret
std
clc
sbb
dec
dec
cmp
mov
jecxz
fucomp
add
orb
mov
mov
es
mov
hlt
in
adc
imul
in
ds
jp
into
or
inc
ds
xor
pop
inc
sub
outsl
movsb
iret
jnp
inc
jbe
adc
mov
pop
icebp
fistl
ficomps
pop
ret
cmp
pop
jno
sbb
mov
stos
movb
daa
jg
mov
out
sub
nop
mov
icebp
cld
sbb
adc
xor
mov
sub
push
shll
arpl
int
insl
fwait
push
ljmp
cmp
or
scas
pop
or
loope
stc
movsl
aas
lcall
mov
fs
xchg
es
bound
insb
add
push
ret
jne
hlt
imulb
jl
dec
loope
pop
ret
adc
call
into
jb
ja
mov
aad
jp
dec
imul
out
pop
and
icebp
xchg
cmp
addr16
xor
sbb
faddp
dec
dec
scas
mov
xor
sti
movb
add
jge
in
movsl
cli
xchg
imul
pop
movaps
mov
repnz
nop
enter
mov
xchg
fidivrs
xchg
mov
iret
call
xchg
out
cltd
jl
lret
sbb
pop
jnp
and
inc
mov
adc
imul
out
sahf
push
sbb
daa
aam
cltd
inc
xchg
inc
repnz
jne
pop
pop
dec
cmp
mov
jge
cmp
out
andl
xor
jb
lods
lds
push
repnz
dec
scas
rcrb
test
fstp
stos
loop
and
mov
es
pop
dec
push
jno
mov
push
cmp
xchg
std
mov
rcr
jno
cmpsb
add
adc
outsb
cwtl
jne
or
into
lock
and
scas
imul
repnz
sub
repz
rcl
or
lods
mov
or
out
dec
or
cmp
pop
rclb
mov
ret
outsb
xor
loop
xor
xor
mov
mov
pop
scas
out
sub
outsb
pop
xor
jmp
arpl
sbb
movsl
mov
push
fcmovu
pusha
add
inc
pop
mov
outsb
jl
mov
add
aam
insb
pop
push
lcall
jle
outsb
nop
test
inc
orl
jle
bound
pop
setb
pop
jae
push
lahf
mov
pop
pop
shrl
or
into
jp
inc
in
scas
ret
loopne
dec
adc
nop
or
sbbl
or
sub
cmp
xor
leave
sbb
push
pop
outsb
lcall
xlat
jnp
loop
ret
jo
int3
jge
in
loop
les
push
jp
sahf
jmp
xchg
movsl
imul
aam
dec
cs
push
jmp
sbb
daa
xor
mov
cmpsl
pop
xorl
std
jnp
and
mov
mov
call
jl
rolb
cltd
rol
inc
or
sti
and
ss
ds
aad
jmp
mov
mov
xchg
imul
stc
adc
adc
lods
pop
pop
add
mov
ljmp
subb
push
decb
movsl
mov
fstpl
enter
mov
dec
mov
popa
cmpsb
or
sub
fs
rcrw
out
add
call
daa
mov
jmp
push
push
mov
dec
fs
fwait
test
fucomp
xchg
pop
sahf
sti
xchg
ret
mov
call
aad
hlt
sahf
mov
push
pop
mov
cld
movsb
xor
notb
ret
xchg
adc
rcl
insb
mov
pop
jo
push
xor
dec
cmp
or
dec
ds
pop
aad
ret
ljmp
fildl
or
and
insb
xor
jno
cli
add
push
jbe
dec
or
test
ss
xchg
push
mov
lret
pop
nop
sbb
mov
gs
and
mov
ret
sbb
mov
loop
cmp
or
mov
lock
hlt
sbb
shlb
cmc
or
sar
mov
jo
sbb
jge
sbb
aam
push
fmull
adc
and
daa
cmp
shlb
jge
js
cwtl
data16
xor
inc
pop
leave
aam
jae
cmc
and
pop
push
dec
dec
xor
adc
mov
pop
clc
push
inc
cs
sub
xor
mov
add
sbbb
inc
lcall
dec
test
xor
dec
out
dec
sbb
dec
scas
sub
jle
movsb
test
out
pop
cmp
out
iret
pusha
fisttps
fists
and
adc
xchg
inc
push
dec
jmp
in
bound
arpl
leave
cmc
out
xorl
scas
mov
sub
mov
ljmp
push
jne
push
outsb
mov
subl
test
mov
xchg
lret
cld
mov
cmp
ret
push
jg
sub
pop
and
mov
in
cli
sub
cmp
in
cmpsb
cmp
stc
in
aas
pop
pop
sbb
and
cmpsb
add
xchg
call
and
add
push
popa
repnz
push
fwait
adcb
jae
cmp
cmp
mov
and
pop
jp
and
push
push
movsl
sbb
inc
mov
dec
mov
and
push
lock
repz
mov
lods
add
lahf
jp
lods
std
dec
push
push
outsl
loop
xchg
mov
cltd
mov
fisubrs
mov
dec
dec
pop
jno
mov
push
and
ror
cmp
mov
cmp
adc
add
add
adc
add
adc
ljmp
inc
dec
jmp
push
arpl
mov
pop
std
dec
insb
mov
sbb
pop
into
mov
mov
dec
jp
inc
mov
popf
sbb
mov
lea
jnp
cs
fisubrl
sub
push
mov
push
notl
pop
dec
mov
cmp
push
mov
lock
leave
fsub
popf
ret
mov
int
push
xchg
xor
cmp
out
add
push
inc
mov
movsb
cld
xchg
mov
cltd
push
lock
cltd
push
jno
push
pop
aaa
mov
pop
hlt
ljmp
mov
ret
push
cmpb
pop
xchg
pusha
test
mov
adc
stos
movb
loopne
addr16
flds
push
int
in
sti
mov
mov
pop
lds
scas
lahf
scas
adc
fld
xchg
mov
cltd
scas
add
lret
loopne
shrl
jmp
ret
add
xchg
mov
xchg
movsb
sub
iret
add
lahf
in
inc
or
repnz
hlt
add
or
loop
ret
or
ss
out
inc
addr16
ss
in
scas
andb
adc
or
aad
dec
push
out
push
xorl
fldenv
pop
jge
xchg
dec
sbb
in
nop
fdivrl
idivb
jecxz
outsl
dec
mov
es
xchg
push
mov
fbld
push
ds
jle
cltd
mov
pop
iret
add
stc
xor
inc
pop
mov
movsb
in
shlb
cmpsl
mov
jmp
cmpsb
iret
lds
ret
jmp
xchg
add
xor
stos
xorl
popa
stc
mov
and
and
inc
lahf
in
mov
dec
test
hlt
xor
jno
dec
and
mov
mov
adc
xchg
cli
cmpsl
arpl
mov
in
cmp
lcall
lret
hlt
sbb
mov
xor
push
mov
adc
pop
nop
xchg
ret
adc
sarl
cli
in
or
pop
push
stc
and
faddl
fdivrl
lret
inc
dec
sti
inc
xlat
rclb
jl
or
fstpl
pop
out
rcr
cltd
das
cmc
adc
out
fdivrl
test
movsb
aaa
sbb
sti
lret
xchg
andl
or
mov
insb
nop
out
imul
sub
mov
xor
std
ss
mov
in
or
repnz
xor
push
sbb
roll
dec
addr16
dec
inc
fcoms
sbb
out
nop
ret
mov
dec
lahf
dec
xchg
adc
add
xchg
dec
mov
ljmp
shrl
cmp
rclb
sbb
pop
daa
test
or
xor
pop
je
stos
add
daa
add
sbbb
repnz
cld
scas
dec
leave
mov
sbb
fcomi
fcmovb
add
cwtl
sbb
xchg
dec
inc
push
sub
rorw
sbb
hlt
mov
xchg
and
pusha
dec
cli
cmp
ds
xor
pop
scas
and
orb
dec
mov
stc
jnp
aam
loope
adc
cmp
data16
stos
jp
loop
cmc
xor
sbb
ret
clc
xorb
loop
sbb
mov
push
addb
lock
jb
or
mov
pop
lcall
ficoml
dec
ret
jg
lea
push
enter
inc
xchg
pushf
sub
mov
adc
arpl
cmp
fistpl
jbe
jecxz
jecxz
dec
mov
adc
faddl
mov
fcoml
lds
loopne
dec
loopne
add
mov
mov
jae
xchg
xchg
push
and
mov
fisubl
jae
arpl
xchg
inc
pop
inc
outsl
push
test
jne
cli
mov
push
repnz
fistl
xchg
sbbb
fmuls
push
dec
sbb
lret
mov
mov
cmp
cmp
je
std
sarb
daa
fwait
imul
jne
out
das
fimuls
icebp
mov
add
add
add
xchg
stos
movsb
mov
mov
daa
fstpl
or
das
loope
or
jno
test
cwtl
cld
mov
pop
es
add
clc
pop
jbe
scas
stos
xorb
xor
mov
xor
jne
push
sarl
jbe
jl
lahf
push
sbb
sbb
xor
pop
inc
push
adc
inc
shlb
pop
mov
sti
icebp
movsl
pusha
inc
adc
or
fstp
data16
adc
push
roll
pop
nop
and
movsb
and
mov
fcmovbe
mov
mov
rol
pop
enter
cmpsb
das
fstpl
dec
mov
xchg
pop
sub
jecxz
subb
ds
lret
fidivrl
or
jno
mov
dec
inc
xchg
je
pop
std
push
jmp
sahf
push
test
hlt
icebp
ret
pusha
mov
mov
movsb
add
sbb
xchg
pop
jno
push
sub
jg
adc
pop
mov
out
push
jl
sub
insb
jbe
insb
sbb
jl
cmpsb
or
arpl
fisttpll
push
in
std
movsb
sbb
and
jo
and
mov
and
into
pop
xchg
fwait
pop
popf
adcl
lret
and
dec
aad
inc
jmp
ret
mov
xor
xchg
cmpsb
lds
dec
pop
in
sub
out
fimuls
xor
cmp
dec
stos
xchg
xor
adc
add
or
mov
pop
push
cmp
out
divb
stc
lret
inc
sbb
bound
shlb
lret
jbe
into
pop
rcrb
xor
repz
cld
push
outsl
dec
bswap
pop
inc
dec
in
mov
xchg
insb
sbb
inc
cmp
mov
inc
jmp
mov
shll
shll
mov
sub
add
stc
dec
sbb
fldt
pushf
daa
ds
push
xlat
fbld
dec
jecxz
insl
nop
fists
jge
or
pushf
jbe
in
lods
std
xchg
ss
sahf
xchg
insl
pop
adc
add
orl
cli
jns
push
mov
lret
xchg
ror
push
jae
ds
in
mov
or
mov
pushf
roll
mov
xlat
arpl
stos
gs
mov
jl
lret
ljmp
mov
dec
movsb
dec
push
pop
pop
das
mov
out
fisubs
or
sti
out
fwait
in
outsb
sub
or
and
push
adc
push
add
testl
imul
pop
ss
dec
and
stos
hlt
push
lahf
pop
xor
mov
and
out
mov
mov
out
cs
xor
sar
lods
sbbb
mov
cmpl
adc
call
fadds
cld
mov
aaa
mov
pop
dec
and
sbb
sub
out
lea
cmp
mov
jo
jecxz
decl
lcall
insl
xlat
pop
ss
or
cmpsb
or
lahf
pop
push
mov
loope
jbe
jo
pop
mov
int
cmpsb
sub
add
dec
adc
xchg
sub
and
sub
hlt
xchg
add
sub
insl
loopne
jo
js
std
adc
scas
push
sub
sti
inc
adc
adc
pushl
or
xor
push
dec
out
and
scas
xchg
mov
loope
mov
mov
pop
add
rorb
jbe
lods
mov
sahf
add
xchg
xchg
sahf
ds
add
jp
rolb
inc
push
rorl
pop
cli
xchg
or
jp
es
jae
paddw
movsl
sti
iret
ljmp
test
push
insb
scas
loop
pop
popa
inc
insb
int
xchg
nop
fldl
stc
sbb
mov
bound
stos
inc
sbb
ljmp
mov
mov
or
add
mov
ljmp
in
jo
cmpsl
lock
cmp
cmp
ds
and
sub
and
inc
insl
mov
outsb
int
add
cs
jno
popa
xorb
mov
xor
mov
push
addr16
mov
mov
dec
adc
lds
pop
jle
imul
cmp
pusha
xor
shlb
lahf
loope
cmp
pop
cmp
movsl
dec
pusha
push
jno
pop
in
sbb
jns
in
or
sbb
add
bound
xor
neg
aas
lcall
fsubl
call
pop
jb
es
fcompl
clc
xor
sbb
jns
pusha
cmp
lahf
imul
enter
aad
out
xchg
sub
loopne
cmpsb
dec
xchg
xchg
das
out
xchg
sub
stos
adc
jle
shlb
stos
icebp
xlat
mov
xor
movsl
js
inc
mov
pop
xor
xor
cld
ljmp
xor
cs
xchg
adc
icebp
mov
icebp
jmp
inc
popf
loop
lds
sbb
mov
push
test
jecxz
jp
imul
inc
mov
pop
pop
or
shlb
cmpl
es
int
ret
loope
pop
andl
mov
cmp
idivl
adc
ja
lret
pop
push
xor
dec
rcr
cmp
mov
loopne
mov
cmp
mov
dec
mov
xchg
sub
and
repnz
lahf
fstl
fwait
loope
arpl
stos
dec
pop
nop
xchg
arpl
pop
inc
xchg
ljmp
dec
cmp
sarb
and
idiv
or
push
subl
cld
adc
jo
sbb
mov
es
aad
and
xchg
mov
xor
xchg
mov
popf
ds
sub
lret
pop
mov
scas
push
pop
aam
cmp
push
stos
popa
mov
jl
inc
xor
pushf
rcrl
loopne
in
mov
or
test
xchg
adc
xchg
dec
mov
adc
test
stos
repz
stc
and
add
mov
push
popa
push
or
pushf
and
test
inc
mov
out
daa
adc
adc
pop
inc
imul
fistps
rcll
sub
mov
iret
pop
int
mov
push
or
movsb
or
aas
rorl
cmpb
pop
je
push
cmc
ja
pushf
decl
into
out
ficoms
sub
addr16
lock
stos
and
inc
test
sbb
stc
popa
rorb
or
test
xchg
sbb
inc
stos
stos
mov
aam
push
js
outsb
cmp
mov
fs
dec
mov
xchg
jge
rorl
popf
jg
pop
dec
data16
sub
jo
mov
ret
mov
adc
icebp
xchg
test
sbb
movsl
and
mov
orl
sbb
aaa
push
sbb
loope
aaa
sbb
stos
in
pminub
sbb
push
stos
and
sbb
ds
fwait
lcall
cmp
inc
dec
push
ds
popa
out
mov
cmp
add
ret
mov
sub
dec
pop
xchg
dec
xchg
hlt
popf
mov
xchg
dec
push
jnp
adc
hlt
fwait
xor
jecxz
scas
es
jp
cmp
in
mov
scas
lahf
leave
and
and
nop
fsubrl
dec
inc
shlb
sahf
xlat
and
out
rorb
cwtl
cmc
lods
enter
mov
jns
mov
jmp
rcll
mov
sbb
jo
sub
push
sbb
push
sbbb
or
and
xchg
xor
addb
jecxz
in
insl
adc
scas
int
and
mov
lret
mov
cmp
shl
hlt
sbb
or
fdivrl
jb
xor
push
sti
loopne
sbbl
mov
sahf
xor
or
and
inc
adc
mov
stc
daa
cli
ret
aas
xor
data16
imul
inc
inc
push
fisubrl
testb
cmp
bound
fucomi
test
out
sub
dec
mov
lds
xor
sbb
repnz
fsubs
sbb
int3
ret
mov
outsb
mov
cltd
or
add
shll
add
mov
sti
push
pop
out
call
xchg
int
cld
cmp
pop
insl
lds
fisubrs
mov
sub
pop
iret
jo
push
imul
xor
sahf
ret
cmp
sub
inc
lock
mov
stc
cmpsl
je
mov
pusha
jl
push
lods
scas
mov
jecxz
sub
and
dec
push
imul
hlt
mov
push
enter
jnp
es
inc
or
int
ficoml
or
inc
mov
lock
scas
xchg
jmp
adc
cmp
lods
or
push
loope
ds
cltd
iret
movsl
ret
xor
insb
pop
cmp
je
jno
add
addl
xchg
cltd
mov
sbb
sbb
int3
push
call
icebp
test
fldt
cmp
adc
int3
imul
sbb
lahf
mov
add
fnsave
pop
test
mov
lds
cmpsl
mov
mov
ret
mov
stc
push
out
movsl
in
mov
jmp
imul
ficoml
and
dec
adc
movsl
mov
jmp
stos
mov
and
add
xor
jg
dec
bound
or
mov
int3
push
push
xor
orl
mov
stc
mov
add
mov
cwtl
mov
in
out
xlat
dec
mov
xchg
xor
push
sub
test
or
push
call
test
nop
mov
enter
push
loope
jnp
push
mov
fidivrl
bound
data16
xlat
das
dec
mov
xlat
rdpmc
mov
or
std
inc
sub
xchg
pop
dec
repz
cmp
insl
cs
adc
mov
insl
or
inc
int
dec
mov
fnstsw
xor
inc
dec
xor
mov
sbb
ds
cmp
and
popf
loop
fnsave
das
and
imul
inc
sbb
fs
dec
pop
enter
pop
cwtl
sub
popf
dec
dec
and
jae
mov
int3
cs
cmc
sbb
subb
pusha
and
popf
sub
cltd
cld
push
xor
je
lods
cmp
jmp
push
push
lock
mov
mov
call
stc
pop
pop
pusha
jmp
mov
fidivrl
test
inc
ljmp
loopne
mov
fs
mov
and
mov
mov
mov
xor
inc
xor
xor
pop
std
rol
or
notb
mov
inc
dec
xor
call
test
adc
mov
mov
mov
ret
push
jnp
mov
mov
repnz
dec
addr16
xchg
cmp
mov
lcall
mov
icebp
mov
lods
cwtl
sub
decb
push
je
sti
fwait
and
dec
mov
fimull
movsb
inc
add
mov
les
sar
mov
out
mov
jp
jo
shl
adc
out
pusha
mov
cmp
jbe
cmpsb
dec
inc
xchg
push
inc
push
sub
js
mov
fs
jb
lock
mov
adc
dec
xor
loop
jb
xorb
test
pop
push
mov
movsb
cltd
stc
inc
inc
inc
faddl
addr16
cmc
sub
aam
test
pop
mov
push
mov
cld
int
xchg
fucomp
aas
pop
loop
ljmp
sub
and
xor
ret
jl
sbb
jg
pop
in
andl
dec
jmp
sbb
mov
sub
outsl
or
call
xchg
outsl
cmp
push
pop
cmp
aad
psubusw
xchg
sti
and
push
aaa
xchg
ds
jb
imul
dec
mov
add
mov
mov
and
nop
xchg
icebp
out
push
dec
inc
jp
add
movsb
or
cmp
popa
shrl
cmp
inc
and
push
adc
jle
imul
ret
push
outsl
stos
adc
dec
jmp
inc
sub
cmpb
test
shrb
add
ds
test
test
gs
jmp
push
sub
add
or
dec
mov
dec
das
inc
cwtl
aam
xchg
adc
stos
mov
fcmove
aad
sub
mov
push
dec
stos
pop
pop
sahf
das
sub
aam
mov
insb
stc
bound
push
cmp
fldenv
xchg
fucomip
mov
out
mov
sbb
add
xchg
or
inc
stos
dec
je
stos
mov
lcall
lcall
or
push
add
push
rcrb
lods
mov
adcb
call
int
jge
jnp
sti
testb
in
mov
mov
out
or
jg
int
sti
movsb
jne
add
jno
sub
jg
push
jne
mov
mov
out
jg
enter
or
cli
add
mov
loope
hlt
shlb
fwait
and
mov
mov
jne
push
add
cmp
inc
fiadds
leave
outsl
out
adc
inc
pop
dec
inc
lods
xchg
lods
inc
push
fsubrs
mov
mov
adc
bound
out
adc
add
imul
add
add
cmp
mov
dec
push
xchg
push
imul
sbb
hlt
data16
push
enter
data16
stos
outsl
aam
xchg
mov
pushl
es
adc
adc
js
sbb
insl
sbb
sub
ret
jne
out
cwtl
gs
popa
mov
jge
sbb
in
mov
jmp
out
in
cmove
and
cmp
ffree
in
mov
and
cmp
xchg
lods
cmpsb
xchg
fbld
inc
ljmp
jp
sub
pop
ds
stos
add
adc
hlt
popf
rcrl
mov
xchg
xchg
jge
push
insb
xchg
xor
or
fmull
inc
call
add
mov
mov
mov
cs
pop
jnp
push
rcrb
adcl
repz
or
cmpsl
rclb
dec
test
sbb
add
test
cmpsb
or
aam
sub
orl
sub
cmpb
imul
xchg
pandn
add
dec
daa
gs
and
mov
xchg
std
sub
push
sbb
mov
lcall
add
lret
add
cmpsb
dec
mov
stos
push
mov
nop
loopne
xchg
inc
and
xor
ss
sub
jmp
xchg
sbb
jo
js
mov
cmpsl
inc
jnp
fadd
push
xchg
repz
cwtl
xor
cld
divl
jp
lcall
sbb
jmp
sbb
xor
mov
dec
pop
pop
mov
mov
fdivrs
jg
and
rorl
or
shl
push
outsl
mov
nop
jae
fidivrl
sahf
imul
mov
jnp
jge
mov
fs
push
push
outsl
mov
lods
mov
push
cmp
and
enter
xchg
jns
mov
pop
add
rorb
xchg
push
push
jl,pn
mov
ja
sarl
mov
push
sbb
mov
cmp
inc
int3
push
mov
out
mov
fistpl
adc
inc
and
add
subl
lret
cmpsl
fnstsw
and
sub
pop
xchg
mov
sub
jo,pt
dec
cwtl
sbb
sub
mov
adc
jnp
hlt
cmp
sbb
adc
je
cltd
mov
lods
dec
sub
and
cli
cmpsl
dec
test
inc
inc
cs
mov
and
testl
test
test
out
test
cmp
mov
idivb
sub
jle
sub
aaa
les
pop
fdivrs
arpl
jbe
mov
pop
push
inc
inc
jecxz
ds
insb
cld
jl
insb
inc
and
stos
lds
mov
repz
lods
and
repz
addr16
fisttpll
icebp
and
das
repz
outsb
add
or
mov
adc
mov
sub
pop
push
sub
shl
or
push
xchg
outsb
mov
xor
insl
lret
xorl
inc
test
iret
ret
inc
scas
pop
lock
cmp
inc
mov
inc
push
fs
test
mov
adc
mov
xorb
add
xchg
jno
repnz
xor
movsl
in
sbb
repz
sbb
pop
jmp
xchg
loop
mov
mov
pop
add
sub
je
add
mov
sub
adc
sahf
aad
mov
xchg
hlt
fnstsw
ljmp
repnz
xchg
and
xor
dec
sub
jl
arpl
sub
test
adc
inc
xchg
in
daa
jge
fidivl
movsl
add
xor
add
test
cmp
jne
xchg
test
je
stos
cmc
adc
and
call
sahf
lret
mov
push
add
or
mov
mov
jmp
jb
xor
cmp
ss
mov
or
xor
jle
pusha
mov
popf
dec
dec
mov
xor
cmp
and
in
out
out
loopne
test
push
jge
add
sub
loope
out
ds
dec
mov
inc
mov
adc
push
fstps
xchg
icebp
cmp
mull
pop
mov
push
inc
xchg
lret
nop
sub
idivl
fadds
daa
aad
jmp
inc
aaa
addr16
in
inc
js
mov
xor
cmp
and
cs
jb
push
sbb
loopne
testb
in
data16
add
fnstenv
sub
es
test
loope
or
sub
mull
jo
push
sti
cmpsb
sahf
rcr
pusha
xchg
scas
adc
mov
insb
inc
mov
flds
jns
ret
mov
jnp
xchg
xchg
fisubrs
lods
xor
sarb
filds
sbb
xchg
lds
arpl
push
popf
inc
sbb
ja
adc
jecxz
cmp
pop
movq
cmpb
push
mov
jmp
fwait
and
fxch
cmp
inc
cld
inc
pusha
mov
xor
insl
add
mov
lods
arpl
enter
jmp
xchg
dec
push
int
and
add
popa
cs
shll
das
insl
jp
nop
inc
mov
adc
mov
dec
mov
fst
cld
mov
jo
push
mov
xor
pop
shlb
sbb
jecxz
mov
aam
test
enter
mov
clc
leave
push
push
filds
jno
sbb
push
xor
mov
popa
inc
sub
rorb
push
pop
iret
stc
shll
push
and
add
xchg
cli
adc
xor
stos
sbb
imull
insl
add
pop
dec
loope
repnz
repnz
movb
mov
and
adc
and
fisubrl
xlat
in
add
jne
add
add
lods
scas
or
fbstp
sbb
sbb
push
orl
mov
lcall
jnp
ljmp
insb
push
stc
fadd
add
mov
test
loop
lds
popf
mov
lock
clc
les
pop
insb
mov
repz
scas
aad
add
xchg
pushf
pop
insl
fmulp
inc
sbb
mov
xlat
add
mov
jo
or
arpl
int3
icebp
jle,pt
push
lds
std
inc
and
pop
lods
nop
push
add
cmp
mov
jo
fistl
mov
pop
jg
mov
faddp
ret
cmp
dec
cmpsl
ljmp
jo
jg
sbb
dec
mov
pop
push
mov
add
push
aad
aas
std
cmc
ret
cwtl
mov
adc
pop
push
popl
inc
daa
out
rcrb
xchg
insl
rorb
mov
cmpl
movb
test
das
mov
lea
and
or
xchg
imul
test
arpl
mov
leave
or
cld
arpl
movsl
popa
dec
sbb
add
inc
dec
arpl
jno
pop
inc
adc
or
cltd
lock
ret
xorb
mov
jns
or
pop
ljmp
mov
jo
jb
aas
js
sbb
mov
add
mov
adc
push
fbld
test
inc
cmpsb
push
dec
lret
push
sahf
loop
popf
pop
jae
jge
lods
cmc
jmp
rorl
call
dec
mov
add
cld
xchg
out
sub
or
mov
sub
cmpsb
fcoml
add
aas
addr16
or
sbb
rcrl
sbb
sub
inc
dec
jno
aam
cmpsl
jne
xlat
pop
push
pop
je
mov
pop
dec
scas
lahf
movsl
and
scas
mov
cltd
dec
rcll
outsb
mov
or
adc
std
shrl
jno
lahf
xor
subl
ds
int3
push
xchg
pop
xchg
idivb
fadd
dec
cmp
jb
cmp
push
jl
jb
cmpsl
mov
xor
jle
je
sub
jecxz
jbe
loopne
or
cld
test
pop
negb
enter
mov
lret
add
jnp
xor
rcrb
push
xchg
cltd
fadds
dec
push
mov
xor
jae
xor
add
lock
ss
sbb
ficoml
loop
loopne
dec
ret
push
data16
fdivp
push
mov
xor
mull
adc
pop
add
inc
push
fcompl
fdivs
dec
testb
add
add
std
aaa
mov
in
in
xchg
mov
jb
mov
dec
push
pop
push
push
pop
push
jle
mov
jmp
cmpsl
push
sahf
scas
clc
out
dec
popl
push
mov
xchg
xchg
push
inc
push
rclb
dec
cmp
jb
xlat
int
lahf
js
xchg
jb
inc
pop
mov
mov
arpl
hlt
repz
cmp
adc
add
mov
dec
push
mov
pop
call
cmpsb
mov
in
push
fldcw
repnz
mov
in
xor
hlt
movsb
and
stos
mov
ret
and
int3
movhps
jmp
lds
pop
and
adc
xlat
popf
int
mov
push
mov
outsb
addl
leave
mov
xor
jnp
inc
xorl
and
daa
fsubr
mov
inc
push
and
inc
cmp
mov
push
imul
subb
lods
sbb
imul
insl
mov
pop
cmp
xchg
sbb
push
mov
mov
cmpsb
lahf
rcr
dec
arpl
dec
js
sahf
je
xchg
out
dec
xlat
dec
dec
mov
int
fiadds
push
das
arpl
cmp
in
xchg
push
mov
lea
js
push
inc
movsb
add
xchg
pop
int
dec
or
test
iret
jo
and
repz
and
mov
push
fidivl
jge
sarb
insl
in
sti
xor
scas
inc
inc
sbb
xchg
gs
xchg
adc
push
outsl
pop
outsw
pop
fbld
arpl
push
repz
xorl
insl
ret
jmp
inc
scas
shll
sarb
jge
adc
pop
xchg
xchg
ds
enter
fimull
je
ret
xchg
js
lret
push
sti
mov
or
mov
popl
push
sub
int3
xor
xor
xor
sahf
outsb
into
rclb
pop
gs
sahf
cmp
jp
test
lret
scas
imul
call
fsubrl
es
lea
insl
out
xor
mov
dec
cmp
fsub
movsb
imulb
and
pop
push
rolb
cmp
pop
loop
adc
lods
call
pop
cld
je
cmp
and
and
jno
mov
test
nop
or
stos
adcl
dec
jmp
ja
cmp
pop
xor
out
and
xor
sbb
pushf
es
std
and
mov
cltd
and
sub
cmpsl
dec
dec
sbb
push
jns
sbb
adcb
adc
push
shlb
jns
fsubrl
mov
leave
insb
mov
sbb
in
xchg
loop
lods
addr16
inc
pop
sub
xchg
cltd
cs
in
dec
jecxz
insb
ja
lea
into
pop
cltd
push
in
mov
fstp
mov
inc
shrb
ret
inc
sbb
clc
je
cs
mov
lahf
mov
mov
inc
mov
jg
mov
and
push
sbb
adcb
inc
dec
add
repnz
push
xlat
outsb
fwait
pusha
cmp
lcall
xchg
int
push
andb
mov
sub
pushf
inc
mov
or
push
ret
setb
fldcw
mov
xchg
or
dec
cltd
nop
je
ret
daa
mov
lea
mov
subb
cmp
jmp
or
adc
outsb
ljmp
push
xor
push
push
clc
lahf
pusha
outsl
lods
js
dec
jecxz
pop
fimuls
xchg
inc
pop
add
ret
lods
cmc
and
or
and
in
sub
ret
xchg
shrl
mov
out
lahf
test
add
mov
cmp
cmc
inc
push
dec
or
push
int
and
orb
psllw
jl
inc
mull
es
mov
shrb
imul
add
xor
cmp
or
in
cmp
shlb
rcrb
xchg
push
fs
and
sub
loopne
xchg
sub
pop
int3
cmp
es
jb
dec
cmp
cltd
daa
mov
loopne
imul
hlt
lods
les
xchg
test
roll
or
fidivrl
adc
adc
fldl
fnstcw
cwtl
inc
xor
lahf
ret
clc
int
sbbl
repnz
adc
ljmp
in
jnp
add
clc
add
dec
shrl
add
add
popa
sbb
or
out
sbb
int3
rorl
into
fmuls
sti
notb
ja,pt
test
push
and
mov
out
push
dec
notb
pop
daa
loopne
or
out
sbb
popa
lcall
dec
pop
andb
into
inc
scas
pop
and
cld
fisttps
int
inc
scas
and
out
int3
out
fdivl
shll
pusha
fidivs
xor
nop
in
nop
mov
fstps
mov
mov
sar
cwtl
sahf
dec
or
xor
adc
adc
inc
pushf
pop
push
inc
ss
rorl
mov
pop
pop
int3
mov
inc
loop
mov
sub
leave
orb
and
pop
pop
stos
aas
sbb
fwait
inc
outsb
xor
push
pop
lret
sbb
aas
cli
pop
xor
inc
mov
jno
add
test
fmul
mov
sarl
loopne
sub
jnp
jb
jl
lret
xor
aas
and
enter
xor
movsl
sub
inc
dec
and
popf
mov
pop
cmp
subb
push
xchg
dec
pop
jbe
fs
push
nop
mov
shll
pop
call
mov
push
inc
sub
add
fimull
cmpsl
aam
daa
xor
in
add
mov
xlat
in
inc
jae
ret
xlat
orl
fildl
mov
icebp
dec
rorl
jle
lret
jae
inc
lcall
inc
jp
push
ljmp
in
or
inc
cmpl
adc
adc
jne
insb
xchg
cmp
gs
aaa
dec
sbbb
fisttps
inc
sub
inc
xor
mov
and
jno
mov
fcoml
mov
mov
jbe
fxch
out
push
sahf
mov
or
icebp
es
or
or
sti
fadds
inc
or
pop
jno
pop
and
mov
mov
push
clc
insb
dec
aas
mov
push
or
mov
add
inc
cmp
xor
out
mov
adc
pop
push
add
sbb
jno,pn
sahf
repnz
fwait
movsl
sbb
add
mov
lods
xchg
xor
adc
mov
adc
adc
or
dec
push
cmpl
jns
push
shlb
fildl
in
fnsave
ret
sub
or
int3
je
push
adc
mov
sub
cmp
insl
cld
adc
test
xchg
outsl
mov
sti
mov
setb
out
jp
test
ss
in
jg
jb
les
loope
jae
dec
aam
movsb
leave
movups
call
les
push
subb
push
jmp
int
or
fs
enter
hlt
inc
mov
jns
movsb
or
in
push
push
mov
sbb
push
shrb
mov
inc
test
xlat
add
loopne
adc
xchg
xchg
push
pushf
and
ffree
ss
jbe
out
fcmovnu
test
xchg
add
nop
ljmp
push
lcall
push
mov
adc
dec
inc
xchg
xor
fwait
sub
call
push
pop
sub
mov
push
scas
push
lcall
inc
pop
dec
push
lds
scas
out
cli
adc
mov
aam
loop
pop
xor
aad
mov
lcall
pop
add
insl
in
std
fs
inc
cmp
stos
bound
sahf
dec
subl
loopne
or
mov
inc
cmpsb
repz
imul
push
testl
jp
cmp
loop
test
scas
xor
subb
ret
add
dec
adc
push
ja
mov
test
and
mov
pushf
sub
pop
imul
pusha
xchg
adc
popa
or
scas
and
and
imul
pop
jae
cmp
push
lahf
ds
ljmp
inc
xor
pmaxsw
inc
xchg
mov
int
jne
and
stos
push
inc
insl
pop
mov
ficompl
mov
adc
ret
push
ljmp
pop
loop
dec
mov
xlat
mov
popf
dec
xchg
sbb
cmp
es
popf
lods
push
pusha
fistps
push
jbe
cli
mov
push
cld
orl
inc
adc
in
jle
sarl
sbb
mov
pushf
cmpsb
add
adc
pop
gs
xchg
cmp
sbb
repz
addl
into
mov
test
xor
xor
int3
sub
into
fldcw
cmpsb
jb
shlb
in
dec
rcll
xchg
adc
fcmovnb
test
mov
push
sbb
int3
cmp
fidivs
sarb
or
sbb
in
mov
pop
jecxz
outsl
sub
pop
pop
dec
xchg
es
cmp
ss
hlt
dec
push
faddl
mov
out
or
arpl
xor
xor
jle
leave
add
push
inc
and
xchg
aaa
loope,pn
rorl
test
xchg
dec
pop
ss
and
sub
jbe
jno
mov
ret
aas
mov
das
jp
fwait
dec
fmull
xor
notl
push
xor
add
repz
cmpsl
cli
lods
push
xor
insl
cs
push
cs
incl
test
in
pop
outsb
push
jns
adc
loope
mov
lods
cwtl
jb
mov
or
sti
xchg
dec
lret
sub
push
out
ret
inc
sahf
xor
sub
xor
adc
push
mov
insb
lcall
in
or
test
jbe
and
movsb
add
dec
xor
dec
adc
mov
add
push
dec
xor
xchg
mov
and
push
imul
dec
aas
inc
inc
cld
daa
add
or
ret
jp
stos
push
xor
jns
pushf
mov
xchg
push
sbb
adc
and
stos
push
push
in
push
popf
xchg
add
jnp
stos
sub
ret
inc
adc
mov
outsl
movsb
insl
movsb
fmulp
scas
les
lahf
sub
repnz
das
adc
mov
xor
cmpsb
xor
jl
test
imul
frstor
xorb
popf
cli
fldenv
or
jmp
pop
mov
call
and
stc
push
cltd
or
dec
xchg
cmpsb
mov
ret
mov
mov
jmp
fcmovnb
add
nop
popl
pop
mov
cmp
ja
sub
in
fnstcw
push
movsl
stc
test
icebp
xor
cmc
out
mov
push
iret
imul
lahf
sbb
sub
xorl
shrb
cmpsb
sbb
push
shlb
aaa
out
or
inc
pusha
je
jo
in
pusha
fldcw
in
push
ds
xor
pop
loop
add
lret
push
push
or
sub
push
movsl
mov
fmuls
sti
xor
mov
or
cmc
inc
mov
dec
adc
mov
shrl
mov
mov
pushf
addl
mov
data16
js
call
dec
mov
movsl
sbb
fcom
repz
into
jb
ja
push
dec
jp
stos
es
dec
mov
add
mov
sbb
sub
je
dec
jp
shlb
jbe
and
insl
pusha
lods
fimuls
cmp
cmc
cmp
ret
jle
push
mulb
mov
cmc
lret
xlat
clc
outsb
sti
mov
dec
cmp
addl
adc
cmp
inc
imull
push
and
out
push
cmp
arpl
ret
bound
jo
mov
popf
in
xchg
xchg
lods
or
loope
pop
lret
outsb
mov
mov
cmp
stos
aam
mov
mov
sbb
xor
mov
and
arpl
adc
mov
and
or
or
cmp
dec
ret
popa
loope
mov
inc
jbe
xor
mov
mov
icebp
lock
fmull
imul
ss
dec
stos
mov
loope
out
xor
outsl
add
bound
and
jge
rcl
fs
sbb
and
jmp
push
fwait
cmp
inc
cli
add
addb
xor
adc
rcrl
ljmp
jge
dec
nop
pop
fxch
aad
sbb
vpsadbw
aas
arpl
adc
sbbl
aas
jl
rol
inc
jmp
mov
pop
or
cltd
adc
mov
sahf
jp
dec
subb
mov
mov
addr16
aaa
or
inc
leave
pop
mov
in
pop
sub
gs
mov
out
push
mov
or
outsl
popa
ja
mov
xchg
sbb
push
fiadds
nop
mov
and
sti
aaa
lods
push
ds
lret
mov
dec
cs
imul
mov
or
out
hlt
fdivs
jge
mov
sahf
mov
aam
lds
dec
sahf
mov
mov
pop
cwtl
jns
sub
adc
dec
out
inc
mov
sbb
and
jo
ds
sub
repnz
sti
dec
adc
mov
enter
fisubs
incl
xor
push
cmp
lret
mov
das
adc
mov
cmp
movsl
xlat
aas
push
out
and
xchg
cwtl
jle
sub
push
fcoms
inc
andb
xchg
stc
jge
xor
push
xchg
lret
int
ss
push
adc
pop
add
repnz
mov
mov
or
sbb
mov
loopne
clc
test
adc
call
mov
dec
popa
cmp
lea
xchg
nop
ret
sbb
mov
xor
sbb
push
insl
xor
mov
xchg
icebp
stos
out
pop
or
insb
xchg
dec
push
ror
sbb
fists
lock
xlat
lcall
pop
bound
xor
pop
mov
and
scas
or
repnz
push
stc
int
inc
sarb
or
mov
jno
lods
orb
push
sbb
shll
fisttps
ja
adc
push
lds
jbe
pop
pusha
adc
mov
mov
cmp
adc
test
sti
dec
mov
mov
sub
dec
imul
inc
pop
sub
pop
add
and
adc
mulps
jge
addr16
inc
int
roll
dec
xchg
cmp
adc
mov
adcl
movsb
ret
aas
test
jecxz
jne
push
rclb
add
mov
mov
aas
add
jnp
jle
arpl
jmp
pop
dec
mov
xchg
dec
in
daa
popa
or
sarl
sbb
mov
addr16
imul
and
mov
and
xchg
jae
insb
mov
sbb
call
xor
inc
scas
xor
mov
mov
and
outsb
add
xchg
rcr
mov
test
add
jnp
inc
xchg
adc
adc
mov
mov
in
testl
xor
nop
add
pop
mov
xchg
jns
loope
pop
clc
shl
dec
xor
fwait
stc
mov
and
jmp
mov
aam
mov
jl
icebp
sti
imul
inc
ss
sbb
insb
jmp
jmp
sub
movsb
cmp
scas
or
inc
sbb
sub
sub
ret
push
movsb
and
sub
push
xor
sub
or
insl
popf
out
outsl
xchg
insl
inc
cli
jmp
movsb
out
hlt
jg
repnz
xor
adc
jae
iret
stos
and
adc
shr
cwtl
add
cmpsb
sub
add
sub
clc
mov
add
popa
outsl
loop
clc
in
and
push
mov
add
xor
sbb
xchg
mov
lcall
xor
sub
mov
sub
push
lods
mov
jmp
andl
shll
cmp
in
mov
icebp
and
ret
sti
or
pop
stos
and
stc
std
sarl
mov
stos
adc
xchg
add
aam
inc
xorl
int
mov
into
mov
addl
sbb
pop
push
and
lods
mov
in
nop
dec
add
xchg
pop
or
out
jnp
add
push
movsw
jmp
rcrb
aaa
xchg
icebp
or
push
cmc
in
popa
std
pop
mov
push
inc
adc
or
adc
xchg
and
sub
js
dec
out
jp
test
inc
out
mov
out
fiaddl
adc
movsb
scas
jmp
sbbb
sbb
test
add
jb
imul
and
push
inc
mov
adcb
dec
nop
mov
pop
outsb
in
addr16
jmp
push
inc
std
pop
mov
inc
frstor
mov
jmp
ret
xorl
insl
xchg
push
sti
cmp
in
and
mov
lret
sbb
test
jo
ja
testb
xchg
lret
aam
loop
xor
in
pop
pushf
add
lahf
push
lock
mov
jmp
das
jl
ret
js
bound
je
jge
mov
xor
daa
add
mov
mov
arpl
fcomp
int
xchg
andl
pusha
mov
dec
pusha
scas
pop
add
mov
iret
mov
lcall
pop
lds
ss
fisttps
pop
cld
push
shl
cmp
xor
and
mov
cmpsl
inc
and
stc
mov
mov
imul
loopne
jle
fwait
mov
out
pop
sub
add
jecxz
arpl
and
test
push
js
cmp
iret
cmp
int
ljmp
cmpsb
cli
lds
mov
xchg
jo
dec
cld
aas
dec
call
test
push
stc
mov
clc
movsb
sahf
pop
xorl
test
movsb
mov
push
lea
inc
shll
mov
rcrl
dec
xchg
add
mov
inc
sbb
sti
jns
imul
stc
dec
pop
mov
outsl
xchg
mov
sahf
add
outsb
adc
loope
add
stos
push
mov
xchg
movsb
sahf
mov
fsubs
jle
aad
je,pt
and
pop
mov
fiadds
icebp
aad
fwait
add
xchg
adc
and
mov
jecxz
fmuls
lahf
je
mov
test
jl
or
or
xor
leave
pop
ret
arpl
or
push
or
xorb
xchg
push
xchg
fcmove
push
jg
jg
cli
xchg
add
mov
cld
inc
sbb
and
int
xchg
adc
or
arpl
mov
jae
cli
inc
decb
mov
sbb
repz
ja
pop
xchg
pop
test
addr16
jmp
add
rcl
aam
sub
pop
jle
mov
leave
mov
add
es
lret
xor
jl
or
jo
lahf
in
jo
je
jo
xchg
xchg
or
iret
mov
shlb
arpl
jge
push
sub
ss
sub
outsb
inc
inc
push
addr16
icebp
loope
xchg
cmpsb
push
mov
xchg
adc
dec
xorb
pop
cmp
push
sub
fdivrs
push
dec
sub
ljmp
pushf
into
pop
mov
divps
rclb
test
cld
adc
dec
ret
adc
add
mov
add
loope
outsl
push
lds
rorb
outsb
cs
mov
jb
dec
pop
inc
dec
adc
in
mul
rorl
out
xchg
adc
dec
inc
inc
push
cmp
add
jecxz
leave
gs
jmp
jns
jecxz
pop
test
ret
addr16
nop
cli
xor
inc
xlat
pop
push
xchg
pop
movsb
das
aam
pop
mov
leave
dec
js
fldcw
dec
push
mov
mov
loopne
aas
mov
jg
int3
pushf
sbb
pop
fimuls
mov
leave
pusha
mov
sbb
in
pop
in
push
cmc
push
inc
dec
sub
mov
mov
mov
sub
push
lret
insb
cwtl
or
mov
es
test
fimuls
dec
inc
cmpsl
jmp
inc
out
inc
mov
cmp
or
std
lds
aam
into
mov
shl
cs
push
add
sbb
adc
test
out
pop
jo
xor
sub
inc
outsb
cmpsb
pushf
in
xchg
enter
mov
mov
sarl
sbb
or
imul
enter
mov
pop
and
and
cmp
jmp
dec
pop
ds
adc
mov
or
pmovmskb
test
pop
cmc
ds
lods
sub
cmp
imul
pop
sbb
cmp
fldl
in
or
add
fildll
shl
cld
jecxz
xchg
leave
stos
cmp
or
fcoms
jno
ja
sbb
sub
dec
cmp
pop
xchg
add
insb
xchg
cwtl
jecxz
adc
lods
push
jg
scas
data16
mov
mov
iret
pop
std
xor
mov
pop
mov
push
sub
inc
mov
cltd
cmp
popf
in
or
lret
imul
dec
and
rcrl
mov
imul
fnstsw
fcomp
cltd
ret
or
push
cs
jo
arpl
fadd
bound
pop
std
cwtl
mov
mov
or
aam
jge
add
int3
out
lahf
cwtl
scas
dec
fstp
mov
mov
ja
mov
sbb
notb
pop
pop
stos
jge
arpl
shr
stc
adc
cmp
add
mov
pop
stc
enter
pop
inc
mov
jmp
jl
or
repz
lds
sti
dec
dec
and
push
sbb
mov
push
dec
cmp
data16
or
out
ljmp
dec
or
mov
cmp
sub
pushw
jo
push
mov
push
xchg
xchg
popa
sbb
sbb
mov
jecxz
xor
ss
pop
jge
popf
jg
lock
dec
bound
andb
mov
scas
inc
mov
fimull
dec
cmp
mov
daa
cmp
ljmp
dec
sbb
lds
incl
inc
sbb
xchg
pushf
mov
jmp
or
mov
nop
mov
dec
dec
ljmp
int3
jb
cmp
aad
mov
jl
jns
clc
mov
jnp
lock
sub
fisubrs
jmp
aad
fs
les
in
push
cwtl
jecxz
mov
repnz
out
mov
mov
pop
lret
cs
inc
fs
js
pusha
aam
nop
and
ds
in
dec
lock
incl
lret
adc
push
adc
jb
sahf
repnz
in
sbb
xchg
xor
push
mov
addb
sub
sahf
in
sbbb
outsl
xor
pop
cwtl
sub
movb
repz
cmpsb
inc
ret
add
add
and
and
inc
out
pop
addr16
hlt
lahf
in
push
inc
sbb
lds
add
pop
dec
or
sbb
cld
jmp
and
cmpsl
lret
push
pop
aad
push
fisubs
push
fisttpll
movsbl
cmp
jns
daa
fists
adc
jae
push
addr16
in
jbe
mov
adc
jecxz
es
pop
lock
add
bound
mov
rcrb
xlat
aas
fldt
scas
imul
push
and
cltd
mov
mov
insl
imul
repnz
lcall
lods
mov
inc
lea
push
addr16
ja
push
movsl
icebp
aad
add
mov
cmpsb
mov
outsl
in
and
shlb
mov
nop
jecxz
lods
test
in
sub
test
lret
sahf
out
clc
loope
pop
pop
dec
out
cmp
stc
fwait
sub
and
test
shll
stc
leave
xchg
cmp
scas
pop
inc
dec
sbb
pushf
and
fmul
xor
popa
jno
mov
repnz
jnp
cli
repnz
mov
xchg
jl
ret
add
sub
aaa
mov
repnz
ficomps
bound
into
mov
xor
mov
mov
loopne
cmp
add
push
xor
inc
addr16
aas
aaa
nop
pushl
add
jb
mov
je
movsb
mov
fs
adcl
sbb
dec
lods
mov
mov
jle
fucomip
inc
sbb
mov
xlat
aaa
adc
clc
cwtl
imul
arpl
mov
leave
gs
outsb
push
int
sbb
xor
cli
mov
xchg
out
aaa
mov
sub
pop
push
in
sub
mov
push
inc
fst
mull
sub
sub
sub
or
and
xchg
jecxz
popf
int3
fistpl
push
or
lods
cmp
out
add
xchg
push
xchg
jns
addl
adc
test
rol
pop
sub
pop
outsl
sbb
jge
mov
dec
mov
mov
xchg
in
inc
iret
les
out
movb
stos
lock
adc
mov
xchg
and
inc
insl
mov
dec
leave
ja
stc
mov
daa
das
xor
mov
mov
push
popa
jae
repz
xchg
hlt
aad
mov
add
mov
xchg
lcall
cld
push
jge
into
adc
dec
jo
jge
enter
mov
test
pushf
fdivl
adc
pop
je
les
sbb
cmp
mov
or
mov
les
out
inc
lret
mov
mov
lret
push
imul
lods
pop
movsb
dec
push
mov
dec
xchg
aad
push
clc
push
push
int
inc
leave
lea
lret
xor
aaa
pop
fwait
sbb
jbe
mov
pop
mov
push
clc
loop
mov
les
and
test
jo
fdivl
movsl
xor
mov
cmp
cmpsl
sarl
add
push
in
mov
inc
cltd
xchg
lock
addr16
pop
addb
or
adc
dec
or
mov
dec
mov
aad
and
mov
addb
shll
sbb
jns
add
into
jp
pop
pop
mov
aas
iret
and
push
xchg
jl
sub
fists
jbe
les
lcall
fistpl
arpl
mov
push
roll
mov
jae
pop
pop
jno
aas
scas
sti
stos
in
jecxz
push
cmp
pop
loope
in
pop
test
andl
pop
lock
ret
pop
es
jno
in
jbe
mov
js
adc
pushf
xor
loopne
or
insl
or
add
mov
xchg
dec
fs
sbb
ss
test
mov
pop
fwait
arpl
mov
fadds
inc
sbbb
jge
cmp
and
pop
pushf
dec
or
dec
push
cmp
sti
adc
mov
cmc
cmpsl
sub
inc
mov
ret
mov
jg
mov
dec
dec
cmpb
aas
inc
pop
shrb
call
xchg
push
and
mov
ds
mov
mov
in
sbbl
pop
in
pushf
and
or
icebp
pop
inc
inc
scas
mov
inc
dec
test
jb
push
xlat
push
cmp
cmp
movsl
lea
and
pop
mov
push
or
scas
lret
xchg
and
adc
outsl
repnz
mov
dec
sub
cli
sub
rcrl
js
mov
push
add
sbb
imul
cmp
xchg
incl
jg
rclb
lahf
xor
gs
pop
and
mov
adc
push
adc
adcb
movlhps
sbb
fdivl
cmp
or
scas
sbb
test
imul
xlat
or
push
loopne
inc
xor
fidivrl
cmp
in
negl
cmpl
cvtdq2ps
mov
push
inc
les
into
pop
xchg
int
ss
mov
movsb
and
jecxz
dec
cmpsl
mov
inc
sbb
sbb
xchg
outsb
sbb
ror
cmpsl
cmp
pop
stos
mov
pop
push
andl
cmovs
and
xchg
lea
mov
xlat
jmp
or
jns
push
mov
pop
xchg
imul
test
cmpsl
push
movsl
cmp
pop
push
aas
mov
lret
jns
inc
lods
fwait
cwtl
cli
aam
xchg
mov
mov
inc
scas
or
cmpsb
mov
nop
jge
dec
aad
mov
das
sbb
sarb
hlt
repnz
mov
scas
jp
jb
mov
mov
jne
fldt
aas
and
lret
jg
or
sbb
js
mulb
jne
mov
sub
fistpll
add
pop
pop
out
test
nop
mov
into
lods
adc
jle
or
jno
jle
call
jns
cmp
sbb
mov
sub
xchg
or
subl
inc
jmp
push
cmpsl
dec
lcall
pop
fwait
in
jns
lret
mov
std
nop
pushf
pop
movsl
pushf
mov
lret
sbb
js
sbb
or
lret
push
fsubrs
dec
cmp
jo
inc
mov
repnz
lcall
bound
into
leave
push
fnsave
test
pop
inc
mov
sbb
test
in
cmpsl
pop
mov
insb
cmc
sbb
mov
sub
dec
push
mov
andb
lods
sti
xchg
sbb
test
push
push
xchg
push
orl
ss
xchg
aam
fsubrs
iretw
test
out
fdivs
js
in
lds
jg
or
jo
inc
aam
dec
mov
push
xor
pop
fimull
and
mov
cmp
inc
xor
mov
dec
mov
test
rcrb
stos
les
or
pop
xchg
push
sub
inc
das
pop
iret
dec
xchg
inc
cmp
ds
jl
test
je
cwtl
aas
jle
xor
mov
std
jb
fs
les
idiv
push
mov
jmp
xor
mov
fsts
out
ljmp
jp
ds
push
in
out
imul
scas
cmc
jbe
scas
mov
js
xchg
jge
rorb
scas
fldt
fadd
lock
xchg
mov
xchg
inc
sub
fcompl
in
ficompl
dec
mov
repz
mov
bound
fcoml
ret
int
testb
inc
andb
imul
jb
std
lret
ret
mov
dec
inc
insl
daa
adc
inc
xlat
dec
movsl
ss
xchg
lods
mov
xchg
divl
add
jo
mov
jg
xchg
into
pushf
cmp
cmc
lea
mov
in
pop
pop
mov
cmp
sbb
add
mov
pop
idivl
mov
movsb
fsub
jno
mov
inc
pop
adcl
dec
push
or
mov
aas
inc
aam
xchg
xor
test
outsl
fwait
mov
mov
lret
rcll
mov
mov
add
fiaddl
lods
int3
ret
mov
push
push
cmp
push
stos
cltd
out
ret
fistpl
addr16
movsb
mov
loop
lds
jle
ds
fwait
xor
fbld
aad
test
add
aaa
jg
in
inc
push
jbe
cmp
xchg
cmp
jge
mov
pop
mov
fucomi
fs
xor
enterw
and
push
inc
and
mov
sbb
xor
bound
xchg
adc
mov
addr16
xor
mov
inc
popf
and
lods
push
xchg
mov
cli
add
cltd
and
scas
sub
outsb
sub
cltd
clc
dec
insl
mov
lret
xor
cmc
frstor
push
push
mov
fimuls
fldenv
jle
sbb
push
xor
jmp
mov
dec
cli
out
xchg
imul
sub
loop
pusha
push
dec
xchg
inc
cmp
add
popw
and
ds
mov
out
xchg
push
lock
lret
addr16
xor
xor
popa
ss
sbb
es
rcll
add
cli
and
mov
pop
push
repz
xchg
in
mov
xchg
fldcw
andb
test
pop
xor
leave
xchg
aaa
insb
push
mov
sub
and
in
mov
imul
fisubs
pop
push
xchg
popa
cwtl
mov
outsl
jbe
mov
or
cmp
fsubs
lret
sbb
add
adc
cwtl
addl
test
leave
mov
dec
out
push
shll
xlat
inc
clc
mov
mov
roll
les
pushf
dec
arpl
cltd
add
aas
or
faddl
iret
xor
mov
lods
pop
sub
dec
aam
adc
gs
aad
cli
mov
aad
clc
xor
jne
rorb
imul
add
test
popa
lods
ret
dec
mov
mov
shrl
pop
and
sbb
sbbl
add
mov
fdivrl
add
ret
push
dec
mov
inc
out
mov
and
ret
mov
add
scas
sbb
imul
jg
pop
dec
sbb
repz
out
jnp
sbb
shrb
mov
xchg
sub
push
rol
aaa
in
ss
sahf
xorl
jno
mov
adc
ss
sahf
jo
xchg
push
push
xchg
imul
push
cmp
adc
out
enter
call
ficompl
pusha
jp
pusha
sub
jo
mov
dec
xor
testl
mov
movsb
test
bswap
or
pop
xlat
mov
push
xchg
jle
mov
popa
adc
xchg
fwait
popf
fildl
or
fwait
ret
sbb
jo
arpl
sub
pusha
pusha
outsl
mov
repnz
lea
loopne
in
sbb
js
jle
rcr
test
sbb
sub
lret
pop
dec
inc
dec
lock
inc
negl
mov
push
std
outsb
and
popf
in
lea
pop
mov
enter
mov
pop
fdivs
xor
mov
pop
scas
cld
adc
pop
sub
jle
out
loopne
movsl
mov
cmpsb
push
inc
fcoml
inc
out
mov
xchg
mov
dec
scas
negb
push
fmuls
inc
push
or
bound
xor
adc
and
pop
fidivrl
push
ds
shrb
imul
mov
xchg
jbe
mov
aaa
mov
xchg
xor
mov
movsb
outsl
sbb
mov
ret
inc
jns
push
mov
scas
loopne
pop
xchg
mov
cmp
pop
aaa
pop
add
or
jns
and
imul
outsl
jnp
and
out
add
cwtl
mov
jecxz
imul
js
das
outsb
movsb
push
pop
adc
xchg
out
jle
int3
push
sbb
nop
fs
mov
adc
jae
mov
mov
pushl
dec
shll
aad
sub
fwait
aaa
jno
inc
inc
or
push
cltd
xchg
or
inc
fdivrs
orb
push
pusha
arpl
mov
lahf
push
test
pop
insb
cmp
push
loopne
mov
add
cmp
mov
int
cmpsb
into
out
mov
data16
push
cmp
jmp
pop
fs
mov
push
xor
pop
pusha
fstpl
sub
xor
in
repnz
mov
lret
rcrl
in
pop
icebp
push
adc
lock
in
or
fucomip
iret
cmp
roll
fildll
sahf
xchg
sub
or
xchg
rcrb
inc
mov
shl
mov
and
add
or
mov
mov
loopne
xchg
leave
jno
out
or
xor
int3
stc
inc
hlt
out
fucomi
scas
lret
iret
fdiv
mov
int3
dec
xchg
adc
jae
push
filds
imul
xchg
dec
xchg
and
repnz
shll
testb
call
cld
orb
subps
mov
cmpsl
mov
stc
es
fcmovne
jne
sbb
xchg
int
jge
imul
call
out
in
out
inc
push
cmp
fildl
in
hlt
mov
rol
lcall
addr16
dec
divl
movsb
inc
push
ds
xchg
out
xchg
dec
ljmp
jns
sbb
mov
and
xor
jmp
pop
bound
xchg
mov
andb
aam
sub
in
mov
clc
and
in
ljmp
inc
push
and
cmp
dec
call
outsl
pop
in
adc
out
pop
push
out
cmp
xchg
insb
sbb
xchg
sub
xor
sbb
js
int3
jge
gs
mov
stos
cld
jge
mov
sti
pop
mov
pop
sub
and
and
or
mov
xor
rorl
push
push
mov
hlt
xchg
lock
insb
mov
and
and
cwtl
jg
fs
or
jns
mov
jns
out
sub
ret
fcoml
xchg
rorb
ja
push
jno
lea
sub
push
xor
in
mov
icebp
cmp
shl
lods
inc
xchg
mov
mov
mov
mov
sbb
orl
mov
push
sbb
mov
test
jge
and
bound
scas
push
es
adc
stos
data16
inc
sbb
movsl
lods
aaa
bound
xchg
scas
sub
xor
aad
out
cmc
xor
loopne
insb
lods
aad
lock
push
stos
loope
into
mov
rcll
cmpsb
and
mov
pushf
push
lcall
jmp
int
pushf
repz
jmp
jno
test
push
mov
lods
subb
sti
enter
insl
mov
and
dec
pop
sbb
xchg
aad
cmp
outsb
out
data16
push
call
jp
add
dec
loopne
and
adc
and
loopne
inc
fldcw
sbb
mov
mov
adc
cmp
mov
fistpll
subb
jmp
mov
std
call
dec
inc
in
ficomps
cmpsl
insl
add
setne
mov
dec
jmp
sbb
jns
loop
ffreep
loope
outsb
adc
push
std
add
jns
jae
int3
icebp
inc
shrb
addb
cmp
aam
in
and
cmc
sarb
dec
dec
je
push
xor
jb
sub
ss
mov
adc
push
dec
mov
into
sub
or
jb
fldenv
fildll
adc
jne
push
shll
jg
or
add
cmp
or
pop
fsubrs
ljmp
lret
dec
jp
fsubrs
mov
mov
std
xchg
incb
int
loopne
jecxz
sub
mov
sbb
inc
rclb
mov
and
je
xchg
dec
pop
jg
cmp
sbb
add
movsl
sub
mov
cmp
in
mov
pop
out
lods
mov
imul
add
fisubl
loope
mov
mov
outsl
inc
ljmp
pushf
aaa
xor
push
adc
notl
int
xchg
outsb
stos
iret
rorl
dec
mov
fstps
dec
ja
sub
sub
loop
or
push
insb
xor
xor
jecxz
cmp
and
sub
add
into
stos
je
pop
inc
lea
cmp
sub
stc
mov
and
es
cmp
fiaddl
cltd
ss
mov
xlat
out
sub
pusha
repnz
shr
fs
out
adc
xchg
jmp
inc
fdiv
mov
push
sbb
aaa
cld
loope
mov
loope
ljmp
mov
into
mov
rcll
fidivrs
push
xor
jmp
lret
outsb
fwait
sub
into
ja
insb
add
push
push
push
add
out
insb
and
lret
movsl
pop
es
inc
mov
inc
iret
cmpsb
ljmp
mov
lret
xor
fldenv
mov
inc
push
jno
sub
jo
jmp
dec
and
test
pusha
adc
inc
add
jnp
fdiv
popa
shlb
cmc
sub
mov
les
dec
aad
mov
test
xchg
inc
out
xor
repnz
negb
xchg
cmp
orb
inc
rorl
ret
out
inc
xorl
push
xchg
pop
das
jno
pop
mov
jmp
std
push
dec
loop
inc
and
mov
fistpll
xchg
lock
sahf
bound
lods
test
fs
or
mov
push
and
sarb
fwait
test
popf
imul
sub
imul
and
movl
popa
dec
sub
adc
enter
jecxz
pop
mov
cmc
add
lods
aas
in
in
push
mov
xor
das
mov
adc
es
pop
adc
or
and
and
add
loopne
mov
mov
les
or
bound
dec
push
pop
dec
notl
adc
mov
call
mov
out
xchg
push
xchg
push
outsb
movsl
pushf
in
pop
mov
push
cmp
push
push
mov
in
in
ret
lods
pop
jo
movsb
cmp
dec
inc
inc
mov
jne
push
fwait
loopne
ljmp
in
push
inc
inc
loopne
and
mov
inc
add
lahf
iret
dec
into
into
mov
movsl
lcall
test
iret
out
cli
mov
outsl
adc
mov
lret
lret
dec
inc
xor
mov
hlt
jbe
xchg
jb
push
out
fldt
mov
push
mov
or
pop
cltd
mov
sub
popa
add
xor
leave
inc
insb
jns
fiadds
into
sbb
popf
fsts
inc
and
loopne
testl
fistpl
jl
sub
sbb
xchg
adc
arpl
pop
in
sub
dec
dec
insb
sbb
es
hlt
fwait
pop
pop
mov
xor
sahf
je
cmp
xor
sbb
adc
sbb
push
xchg
stc
inc
int3
mov
fs
cmp
sbb
inc
adc
and
dec
sub
movsb
rcrb
and
dec
leave
mov
jmp
xor
mov
xor
xchg
int
mov
mov
out
test
mov
stos
mov
mov
fnstcw
jbe
adc
xchg
ljmp
inc
fisubrs
and
addr16
dec
inc
push
mov
pop
xchg
pop
jne
addl
cmpsb
jmp
push
jmp
out
enter
pop
test
cli
xchg
es
dec
cltd
sub
cmpsb
dec
not
in
or
lods
rolb
ret
push
jo
icebp
push
mov
mov
bound
aam
out
adc
adc
lret
inc
mov
dec
jne
cwtl
sub
push
add
xor
int
or
enter
adc
fistpll
mov
xchg
inc
cmp
xchg
xlat
cli
repnz
loopne
pop
ss
imul
int3
pop
add
pop
xor
cmp
xor
cmpsl
add
outsb
repz
in
out
call
and
sbb
fsts
stc
nop
xchg
and
das
push
repz
xchg
gs
repnz
out
mov
fs
mov
or
into
shll
pop
and
notb
mov
xchg
xor
xlat
aad
fadds
imul
ss
in
pusha
xchg
xor
mov
dec
test
sub
cmp
inc
in
or
xlat
dec
scas
mov
dec
aaa
addr16
clc
fs
in
std
aam
stos
fistpll
stc
jbe
pop
sbb
mov
and
add
loopne
movsl
jne
pop
insb
sub
add
jmp
rorb
icebp
mov
xor
popf
or
mov
outsb
push
mov
ss
and
mov
divb
imul
cmp
jge
or
cmpsl
inc
cltd
pop
jle
sub
imul
xchg
popf
clc
mov
dec
loop
fiadds
in
mov
fcoms
cmpsl
mov
push
dec
es
mov
pop
adc
jle
loope
arpl
jg
inc
xor
push
cli
dec
outsb
xor
xlat
cmp
pop
call
fs
and
jle
jno
xor
inc
sub
mov
pop
test
dec
mov
xchg
sub
mov
lcall
mov
fsts
outsl
cmp
inc
shll
sub
gs
fcomp
adc
push
sbb
stos
mov
into
fisubrl
movsl
sbb
inc
pop
push
test
pop
mov
fs
adcl
mov
xorl
sbb
stc
mov
shrb
ss
push
xchg
cmp
xor
fsubl
xor
ss
add
adc
ds
cmp
mov
scas
shrl
clc
jl
or
and
pushf
dec
imul
push
pop
and
mov
out
mov
sub
jecxz
add
xchg
add
push
jge
loopne
stc
mov
insb
loop
test
ss
orl
ret
je
inc
add
push
test
cmp
mov
jp
aam
rorl
mov
cwtl
movsl
shll
or
out
xor
jge
mov
daa
int
loopne
sahf
xor
in
sub
mov
dec
dec
jno
dec
insb
leave
adc
add
push
jl
jmp
xor
ss
jae
cltd
jae
adc
mov
push
mov
xchg
mov
fstps
inc
dec
pop
mov
ret
inc
xchg
sahf
sbb
aas
sbb
insl
inc
add
or
in
fcmovne
pop
mov
sub
fimull
dec
out
mov
fsts
aaa
fisubl
fs
mov
or
fstpt
sbb
mov
shl
mov
and
loop
push
jns
sub
pusha
xchg
pop
add
cmpsb
insl
mov
xor
push
dec
dec
fcmove
ja
int
movups
jb
cmp
call
adc
out
mov
xlat
xchg
aas
loope
int
pushf
bound
add
cmp
xchg
call
adc
ds
cmpb
add
cltd
dec
out
and
mov
data16
je
in
pop
inc
outsl
cmpsb
dec
xchg
or
mov
jne
fnstcw
insl
adc
loope
inc
add
fcoml
jge
bound
jae
jecxz
fisubs
gs
jns
mov
aam
js
shr
mov
sub
and
subl
cmp
fucomp
stc
adc
out
push
xchg
mov
js
std
push
pop
pop
jnp
cmpsb
mov
push
jmp
aaa
shlb
mov
subl
and
inc
xchg
xor
or
xchg
mov
mov
cmpsl
cmpsl
ds
push
iret
ds
cmp
mov
inc
cmc
pop
lcall
mov
lods
pop
cltd
stos
adc
addr16
sbb
jno
lcall
fstpt
int
xor
cld
sub
pop
cmpsb
inc
pop
ret
mov
das
inc
sbb
sbb
lret
insl
xor
inc
fdivrl
and
dec
push
xchg
inc
sbb
lock
xor
fcoml
add
and
shrb
aaa
or
loope
sbb
outsb
movsb
sbb
inc
sub
xor
jb
test
test
mov
mov
andl
ds
sbb
adc
fildll
cld
adc
cmpsl
sbb
in
mov
aas
xor
jo
mov
jns
pop
cmp
enter
cmpsl
pop
mov
sbb
lods
scas
push
adc
fildll
dec
push
cmp
push
jnp
mov
push
and
enter
repz
mov
pop
dec
ret
lret
pop
pop
lods
mov
addr16
push
stc
fidivs
and
loopne
inc
dec
pop
mov
fs
push
lods
adc
popf
rcll
xchg
in
add
jl
aas
and
jo
sbb
adc
pop
fstl
shrb
ja
js
sub
or
fdivrp
lret
inc
shl
data16
mov
inc
pop
clc
or
jnp
mov
pusha
cmpsl
push
mov
sub
loope
jmp
push
in
jns
sbb
sbb
adc
inc
mov
fucompp
cmp
inc
pop
enter
setnp
dec
sysret
incl
dec
cmp
xchg
cltd
and
push
push
sbb
mov
jecxz
rcrl
sbb
mull
dec
jo
cmpsb
jle
cmp
pop
push
orb
xchg
jmp
into
adc
jmp
movsb
xchg
in
lods
jbe
vaddpd
aaa
push
loopne
mov
xchg
dec
mov
push
xor
add
ljmp
shlb
out
out
mov
out
mov
std
lods
insl
adc
add
pop
xchg
movswl
add
mov
aas
push
adc
xor
cld
je
lahf
mov
sub
xor
dec
xor
ja
addr16
or
or
scas
pusha
lret
loope,pn
mov
repnz
test
mov
push
mov
bound
mov
ret
push
inc
mov
fld
test
mov
add
xchg
and
ret
pop
jp
mov
into
sbb
push
cmpb
inc
jae
jge
sti
in
push
out
mov
sub
pop
push
fcmovnbe
insb
mov
push
inc
cld
pusha
jae
stc
push
mov
mov
test
out
cmp
or
icebp
mov
xor
cmpsl
sub
ret
or
fucomp
xor
pop
add
aaa
aam
daa
icebp
jle
adc
rorb
fs
cmp
rclb
pop
mov
mov
push
ljmp
push
pusha
fimuls
dec
jl
xchg
ret
xor
lock
jmp
out
inc
and
ret
sub
notl
add
jp
dec
or
imul
adc
ss
dec
push
stc
pop
jb
push
insl
hlt
repz
lods
xchg
movsb
and
dec
lea
mov
mov
cltd
cmp
mov
mov
sbb
xchg
andl
or
jge
fidivrl
xor
insl
mov
push
ret
test
jno
dec
sbb
aad
add
ret
pushl
hlt
xlat
lds
push
test
outsl
pop
out
xchg
xlat
adcl
xchg
repnz
mov
mov
das
xchg
mov
or
mov
and
pop
sti
push
movsl
test
movsb
mov
jle
dec
out
push
jle
enter
and
insb
push
mov
fstps
arpl
loop
aas
lea
cmc
jns
lods
inc
jecxz
mov
push
das
aad
into
fistpl
stos
inc
fwait
pop
pop
inc
ljmp
call
push
pop
arpl
push
sarb
in
push
adc
sub
pushf
jmp
jo
imull
sub
sub
addl
add
adc
shl
pushf
stos
inc
negl
jne
or
or
mov
mov
sub
popa
push
je
add
lods
mov
insl
inc
push
add
lcall
mov
fsts
jmp
pop
and
int
inc
or
dec
aaa
daa
jns
cli
arpl
push
dec
paddw
gs
add
and
add
es
test
jle
cmc
out
jg
mov
or
jmp
aas
push
in
pop
add
outsl
jecxz
js
idivb
imul
shrb
movsl
mov
sub
sub
lret
pushf
leave
jecxz
jns
pop
in
dec
test
shr
sarb
movsl
push
aaa
lret
popa
in
mov
ret
arpl
jae
pop
mov
mov
sub
xchg
aas
mov
push
insb
or
shll
ret
loopne
jmp
dec
mov
mov
ss
jnp
xchg
aas
dec
mov
dec
cmp
enter
mov
insb
insl
mov
aad
inc
les
in
stc
dec
jecxz
sub
cmpsb
lahf
dec
push
dec
inc
mov
xchg
das
orl
lret
aad
scas
insb
je
cmpl
mov
aad
jge
lret
fs
sbb
xchg
daa
clc
in
imulb
outsl
inc
shrb
push
pop
or
dec
push
rolb
and
loopne
leave
stc
fsts
ljmp
fdivrs
in
movsl
popa
push
pop
fisubl
imul
jl
cltd
pushl
sti
or
add
push
mov
into
inc
test
lret
xor
repz
ret
lods
addr16
push
lods
xchg
dec
inc
xchg
xor
cmp
mov
cli
mov
push
repz
push
fldl2t
stc
imul
push
sub
inc
mov
cld
out
jmp
rcll
push
daa
shl
jnp
jo
enter
mov
icebp
xor
outsl
mov
pop
daa
jbe,pn
cli
call
lods
add
mov
scas
inc
add
mov
mov
adc
xchg
jmp
cs
cmpsb
push
rorl
enter
aad
les
mov
xor
lahf
add
arpl
neg
sbb
xchg
dec
movsl
push
fadds
stos
pop
mov
imul
ds
out
sub
ljmp
push
sub
js
in
rcll
out
leave
jl
in
and
orl
sbb
xor
sub
fsubp
mov
cld
mov
add
scas
ja
ljmp
xlat
add
pusha
mov
push
xor
mov
jecxz
mov
pop
popa
push
push
pushw
jl
push
mov
mov
pop
cmp
push
lret
pushf
mov
imul
in
xchg
call
inc
push
add
test
shr
adc
push
lcall
add
orl
fs
addr16
in
xchg
insl
xchg
or
loope
fistpll
xlat
mov
popf
out
jae
popf
jle
insl
dec
cmc
dec
fcompl
les
add
dec
mov
dec
mov
jmp
xchg
rcrb
in
dec
movsl
sti
jo
mov
fisubrs
pusha
lret
data16
or
adc
xor
aas
es
push
lods
lods
fs
js
pop
notl
jge
enter
push
mov
imul
xor
repz
and
mov
xorb
in
cmp
add
mov
fcoms
les
cmpsb
je
sbb
xorl
test
xor
sub
xchg
pop
stos
nop
pop
scas
mov
push
jne
subb
adc
fnstenv
jno
aam
out
fisttpll
xchg
pop
call
mov
bound
xchg
aam
cmp
pop
and
repnz
enter
dec
aam
jno
cs
popf
push
call
adc
mov
jg
test
outsl
lods
incl
push
out
je
je
scas
or
rcll
xchg
cmc
fdivrs
out
add
out
push
sbb
fwait
in
pop
clc
pop
push
das
stc
fdivr
mov
sti
push
out
or
xor
mov
leave
add
sbb
pop
mov
ljmp
sbb
and
insb
stos
popa
jo
ja
sbb
inc
and
scas
call
pop
add
pop
loopne
fldl
daa
xchg
push
dec
test
rolb
js
mov
push
xchg
xchg
jno
fs
lret
xchg
lods
xor
cmp
test
mov
cld
cmp
aas
lahf
scas
js
sbb
xchg
iret
rcl
test
cmp
repnz
test
loopne
jb
cld
or
sub
mov
fldpi
xchg
scas
sahf
xchg
sub
lahf
xchg
mov
lea
icebp
xchg
sahf
fwait
into
inc
fcomps
xchg
test
outsb
jnp
pop
jle
mov
push
mov
punpcklwd
pushl
shrb
arpl
mov
ret
add
sti
dec
mov
rorl
call
sub
pop
int
pop
push
std
add
mov
mov
sub
ja
ds
xchg
fdivs
icebp
mov
bnd
sub
xor
dec
cmp
mov
sbb
xchg
pop
or
lds
sub
addr16
or
fildl
push
mov
test
jmp
out
xchg
push
inc
or
mov
int
mov
sbb
push
add
adc
lods
mov
dec
mov
in
rcrl
and
inc
pop
rolb
aam
or
insl
push
iret
ret
sub
sub
inc
imul
mov
cmpsb
cwtl
mov
aam
roll
ja
divb
testl
lods
ret
lcall
mov
push
inc
xor
je
fadds
fsubs
push
dec
mov
pusha
mov
ja
mov
lret
dec
sahf
sbb
cmpsl
and
add
sub
loop
add
inc
pop
adc
dec
movsl
psrld
sarb
add
or
cmpsb
mov
out
mov
and
push
mov
loope
imul
outsb
cmp
lahf
lds
andb
mov
inc
out
loope
std
mov
je
roll
flds
jl
or
fmull
insb
cmp
inc
jmp
clc
pushf
pand
in
and
leave
clc
jle
mov
or
lret
xchg
mov
mov
call
dec
push
cmpsl
ffreep
push
jmp
das
cmp
dec
mov
mov
clc
iret
dec
lahf
jmp
cmpl
xor
xchg
add
pushf
pop
outsb
or
mov
sub
jbe
test
add
xchg
cmp
clc
imul
and
aam
dec
daa
clc
out
pop
or
xor
scas
imul
xor
int
sbb
dec
push
mov
pop
cli
mov
mov
push
add
sub
add
jp
and
xchg
adc
test
iret
add
and
lea
sbb
xchg
mov
push
sarl
ds
adc
rcr
push
mov
jg
inc
fimull
test
pop
out
push
scas
mov
lret
je
mov
icebp
mov
or
or
lods
pusha
xchg
test
add
sahf
mov
ret
ja
lea
sbb
imul
pop
pop
and
mov
cli
stos
loop
push
ja
repnz
jg
rorl
aaa
lret
cmp
stos
add
pop
mov
shlb
cmp
adc
lcall
or
cmp
and
shlb
jg
xor
out
roll
out
mov
into
insb
repz
inc
add
arpl
les
stc
pop
jb
dec
insb
xchg
insb
adc
idivl
mull
jg
ja
scas
int3
dec
je
mov
in
cmp
sti
sub
xor
push
mov
lods
jle
adc
fwait
out
rclb
or
mov
mov
lret
mov
push
aam
xchg
or
mov
jp
stos
or
mov
arpl
xor
ljmp
sub
xchg
dec
and
or
add
inc
repnz
dec
in
dec
fs
xchg
or
xchg
je
push
push
dec
jl
push
in
pop
mov
out
pop
pop
pushf
xor
xchg
sbb
push
fs
dec
cmp
mov
xchg
xchg
clc
ja
jns
inc
scas
cltd
sub
test
adc
cmc
jae
mov
stos
adc
mov
adc
movsb
inc
mov
sbbl
repz
lods
call
jns
gs
ja
pop
xor
data16
push
jno
jnp
imul
imull
jnp
rep
ret
shll
sbb
mov
and
out
and
mov
add
mov
popa
je
dec
pop
mov
idivl
idiv
mov
fsubs
inc
mov
mov
and
and
or
mov
nop
adc
mov
mov
fnsave
lock
xor
sbb
mov
loope
pop
sbb
mov
mov
jecxz
ljmp
push
push
fdivrl
cmp
nop
movsb
shl
push
push
lods
or
insb
mov
int3
addl
lock
sbb
test
std
xchg
mov
or
daa
add
stos
pop
ja
rcrl
pop
or
mov
rcrb
push
cmp
mov
pop
pop
push
leave
or
mov
lods
pop
and
sub
cs
adc
mov
mov
jbe
and
and
ja
push
jo
pop
cmp
jle
stc
add
or
outsl
dec
pop
test
scas
push
std
mov
jno
cmp
or
out
or
push
ljmp
rcl
loopne
jle
pop
repz
cmpl
movsl
fstps
xor
aam
data16
pop
adc
inc
sbbl
inc
sbb
call
mov
push
test
nop
or
ficompl
mov
notl
adc
mov
jae
xlat
imull
sub
dec
pop
cmp
mov
push
jnp
jno
clc
int3
and
mov
daa
xchg
loopne
mov
aaa
ficoms
xchg
jmp
xor
push
sub
ficoms
insb
xchg
bswap
rcrl
pop
sub
cmpsb
gs
add
int3
mov
out
clc
imull
jge
loopne
dec
cltd
pop
sbb
stos
js
ret
sbb
outsl
sbb
es
inc
sbb
or
pop
leave
jmp
add
and
push
clc
xchg
insl
mov
mov
xchg
inc
xchg
outsl
out
dec
negl
mov
pop
scas
outsb
pop
icebp
xor
or
add
mov
xchg
xor
cmp
xor
mov
push
aas
int3
aad
mov
add
adc
popf
or
or
pop
fcompl
or
lret
push
lods
test
sahf
push
negl
sub
mov
lods
rorl
test
aad
adcl
xchg
sbb
sbb
lahf
push
incb
int
cmp
inc
cwtl
das
pop
mov
or
sub
cmpl
sbb
ds
and
mov
ret
adc
aaa
addr16
mov
mov
dec
or
push
xorl
mov
div
ret
and
jge
mov
hlt
test
insl
repz
lds
inc
notb
push
inc
mov
stos
jns
outsl
shl
cmp
inc
add
xchg
mov
leave
add
mov
jmp
sahf
lods
or
mov
icebp
cmpb
mov
inc
xchg
psubusb
mov
leave
xor
add
fnclex
aas
mov
into
lcall
xchg
test
jmp
sub
mov
push
xorl
cmp
insb
mov
clc
inc
push
mov
mov
cmc
decl
test
les
pop
mov
xchg
pop
push
daa
sbb
inc
pop
add
pusha
cld
testb
addr16
push
sub
sub
daa
popf
push
dec
negl
enter
push
push
aad
mov
or
xchg
xor
outsb
mov
mov
icebp
jmp
sbb
sbb
ret
jl
in
arpl
out
cmp
push
enter
aaa
mov
fstps
and
mov
xlat
aaa
mov
and
push
inc
lcall
es
int3
stos
iret
call
sub
std
xchg
cltd
xchg
cmc
loope
aad
xchg
mov
cmc
xchg
xchg
repnz
repnz
xchg
fmuls
inc
cmc
jae
xorb
push
arpl
inc
inc
out
fxch
mov
add
jns
sub
pop
popf
cwtl
fwait
xlat
cmc
test
dec
test
add
mov
pop
push
push
jne
rcl
scas
xchg
int
inc
ljmp
mov
test
out
addr16
pop
cli
fsubs
xor
fisubrl
cwtl
lods
lds
enter
arpl
sbb
sub
adc
add
loope
add
cmp
inc
sti
sub
mov
pop
out
mov
mov
pushf
in
inc
or
mov
xchg
jp
lds
es
xchg
pop
lret
inc
dec
xor
pop
imul
xor
inc
mov
sbb
lcall
mov
inc
negb
jl
dec
and
mov
repz
push
mov
dec
movsb
jmp
xlat
dec
and
int
push
cmp
mov
and
mov
mov
mov
xorb
repnz
lcall
jb
out
jg
mov
mov
iret
mov
xchg
popf
sbb
fwait
jno
inc
inc
cwtl
stos
push
paddw
stos
pusha
sbb
sbb
std
xchg
and
repnz
mov
int3
jl
xor
sarb
pusha
cmpsb
mov
mov
mov
cmpsb
dec
call
in
xchg
or
adc
pop
push
or
daa
movsb
je
test
test
les
loopne
sbb
cmpsb
addr16
loopne
jns
lods
xchg
lods
negb
inc
gs
sbb
adc
lea
jnp
or
mov
stos
subl
lock
jnp
mov
ficoms
xor
jmp
stos
push
push
mov
jecxz
mov
ss
mov
sbb
lahf
mov
sbb
ljmp
xchg
pop
cmp
inc
sub
jle
outsl
shlb
push
mov
call
push
sti
jl
divb
add
pop
mov
int
jnp
add
dec
dec
jmp
test
xor
and
subb
popa
or
stos
cmp
bnd
dec
in
je
loop
mov
mov
pop
dec
or
sbb
xchg
xchg
mulb
dec
or
push
mov
cltd
pop
adc
or
sbb
lret
push
pop
adc
push
iret
stc
sbb
scas
hlt
inc
push
mov
je
clc
inc
jbe
pop
cmp
add
test
xchg
push
push
add
in
ret
rcrb
lods
xchg
push
stc
cmc
lock
dec
mov
xor
fildll
aam
lods
mov
inc
push
cmp
xor
dec
lcall
test
adcl
xchg
loope
loop
push
cmpsb
mov
popf
cmovbe
ret
sub
pusha
adc
or
inc
or
mov
push
sbb
xchg
loop
mov
lods
cmpsb
icebp
loopne
add
lret
xchg
inc
in
mov
and
out
xchg
icebp
fstps
sbb
jno
add
mov
xor
pushf
rcl
fprem
ja
cli
movsl
xor
out
movsl
pop
jecxz
xchg
mov
stc
dec
mov
movsl
pop
out
lahf
push
add
push
xlat
sbb
bound
addl
pushf
arpl
mov
push
imul
jmp
sarl
push
and
scas
inc
out
ds
xchg
pop
or
and
ja
outsl
inc
rep
faddp
dec
jne
xor
dec
aam
js
mov
loopne
leave
je
and
orl
pop
js
push
adc
jns
pop
jmp
mov
xchg
xor
or
pop
scas
int
arpl
popa
rcll
es
mov
pop
sbb
xlat
shr
push
push
jge
insb
push
pop
scas
loopne
cmp
paddsb
pop
enter
cmp
inc
test
push
arpl
js
dec
xchg
pop
add
ret
jg
xor
xor
xor
stc
xchg
clc
out
fsubs
mov
inc
pop
fists
lahf
mov
add
cmc
xchg
cmp
fistpl
jl
bound
cmpsl
push
insl
pop
adc
add
xor
mov
dec
ret
fisubrl
or
jl
inc
out
pop
cltd
shll
and
push
pop
sbb
mov
movnti
jns
shll
and
sbb
insl
mov
in
into
sbb
inc
hlt
push
pop
nop
xchg
test
jne
popf
push
jle
incb
test
fadds
push
jns
jp
pop
mov
and
pop
sub
xchg
jp
mov
xor
or
nop
pop
xchg
push
dec
aad
insb
dec
idiv
lret
movb
fsubl
xor
nop
int
andb
xor
mov
adc
push
in
mov
aad
xchg
jp
adc
lock
mov
int
popf
pop
fiaddl
pushf
sti
pop
add
xlat
fbstp
ret
cwtl
icebp
push
pop
cmpsb
mov
dec
test
cwtl
add
lcall
jge
and
fsubrl
mov
sub
mov
cmpsb
cmpsb
fnstsw
add
es
xchg
push
aam
mov
lods
lret
fmull
sub
bound
mov
scas
not
cmp
test
sbbl
adc
nop
and
decl
lock
insb
cmc
sbb
decl
lcall
pop
icebp
and
and
bound
xchg
dec
je
and
push
ss
mov
fdivrp
lods
rorb
subb
jg
or
movsb
imul
rdtsc
pop
sub
pop
out
popa
or
jmp
and
pop
and
inc
loope
inc
jb
and
int
pop
mov
cmp
arpl
inc
xor
mov
sbb
pop
pop
or
fiaddl
xorl
mov
jbe
push
adc
adc
outsl
cltd
sub
dec
xlat
pop
inc
dec
xor
jnp
xlat
or
test
es
pushf
sbb
loopne
mov
push
call
dec
lcall
or
iret
shll
or
or
adc
cmp
das
xor
sbb
mov
adc
fcmovne
sbb
ja
sbb
or
out
daa
push
xchg
and
add
sti
cs
lret
mov
lret
cmp
leave
adc
add
or
jmp
sub
loop
mov
add
test
in
ljmp
jnp
push
pusha
pop
lods
stos
jne
dec
pop
call
lret
pop
sbb
xor
movsb
push
or
sub
enter
sbb
pop
jae
adc
dec
or
pop
sahf
lods
pop
mov
dec
addr16
inc
js
ret
shlb
int3
addl
xor
bound
stc
add
test
jg
push
dec
fildl
mov
hlt
scas
imulb
fwait
cmp
cwtl
xchg
xchg
cmp
add
fcomps
sub
jl
xchg
cmp
aam
testb
rcrb
pop
cmp
mov
adc
pop
jmp
xchg
jnp
mull
push
push
lock
and
bound
cmpsl
and
in
push
sub
cmpsl
cmp
lcall
aam
scas
add
dec
xlat
scas
and
mov
or
or
addb
in
sbb
fisttpll
pop
lods
loopne
push
stc
in
cs
jne
call
sub
xchg
dec
lds
inc
notl
sub
mov
inc
jge
movzwl
cmp
out
lcall
aaa
xchg
mov
fcmovb
scas
mov
movsl
add
xchg
cld
xor
inc
lret
or
jbe
out
push
add
ds
cmpb
cmpsb
mov
or
int3
mov
mov
mov
loope
loopne
outsb
pop
popf
xchg
adc
out
in
mov
testb
jb
mov
in
jnp
in
xchg
scas
push
test
add
xchg
lret
jb
addr16
mov
mov
mov
fmull
mov
xor
inc
je
out
cmpsb
mov
popa
out
aad
sahf
ja
and
fsubr
fsubrl
jmp
jo
xor
shll
fistpll
add
xlat
cs
cmc
sahf
xchg
pop
and
sub
cmpsb
mov
sbb
fdivp
jecxz
sub
incl
loop
cwtl
mov
pop
push
aam
mov
decb
jp
push
xchg
and
mov
and
jg
ljmp
push
arpl
adc
arpl
repnz
mov
loope
lahf
lret
pop
xor
loopne
das
inc
mov
pop
insl
adc
je
and
and
xlat
and
out
stc
xor
mov
push
stos
xor
xchg
test
lods
scas
mov
and
outsb
pop
shrb
outsb
cmp
dec
test
lea
repz
leave
add
test
clc
ret
xchg
or
sbb
xchg
jbe
gs
mov
rol
aam
aad
out
imul
mov
jle
shl
imul
push
sbb
push
je
mov
mov
xor
aas
mov
xor
in
stos
std
push
adc
pop
push
stc
dec
sub
jo
cmpsb
subl
cmp
dec
and
pushl
adc
jns
xchg
xor
mov
pop
push
je
cmp
push
loope
neg
aad
or
cmp
ret
jge
pop
enter
mov
jae
imul
ljmp
shll
add
leave
xor
in
or
lods
jo
lea
cmp
repz
out
dec
and
int
sub
jbe
mov
shll
mov
adc
out
int
dec
pop
sti
xor
or
lea
mov
inc
lahf
jb
cmp
fsubrs
std
std
imul
push
inc
call
cmp
jge
lds
pop
sub
add
xor
mov
inc
xchg
or
rcr
push
js
xor
mov
add
daa
addr16
push
repz
add
ljmp
push
push
sahf
cli
push
mov
outsl
jno
mov
jns
xor
imul
ja
push
ja
sbb
cld
mov
fcmove
aas
jae
mov
pusha
pop
movsl
mov
mov
push
stos
mov
cmp
adc
fidivrs
std
ucomiss
lret
hlt
insb
push
cmpsl
adc
mov
mull
xchg
fidivrs
loop
xchg
add
mov
pop
out
scas
fistps
or
sbb
mov
adc
jb
stos
gs
aam
shll
in
pop
pop
into
in
or
xchg
jbe
or
int
dec
or
insl
push
gs
push
sbb
aad
rclb
pop
aad
jl
ficoml
mov
sbb
ret
mov
loope
adc
pop
sbb
xor
call
mov
sbb
fmuls
mov
push
lea
mov
and
jb
dec
adc
mov
xchg
inc
push
pop
xchg
test
cmpl
xchg
call
sbb
aaa
jl
mov
pop
scas
mov
sbb
ljmp
and
mov
dec
cld
nop
xchg
cmp
push
pop
lods
frstor
xchg
cltd
cmp
ret
adc
test
int
jl
mov
push
sub
imul
ss
mov
aas
adc
mov
aaa
dec
mov
inc
mov
popf
jbe
jns
loopne
stc
xchg
push
pop
add
xor
add
jg
daa
sbb
jecxz
mov
stc
clc
imul
cltd
ror
push
in
addr16
sbb
cmpsl
loop
bnd
enter
roll
mov
jbe
pop
ljmp
jecxz
das
adc
inc
lahf
xor
sbb
aam
inc
inc
fdivs
add
push
into
enter
and
sub
jge
or
loopne
or
mov
push
es
sub
pop
adc
or
pushf
loope
push
movntq
dec
add
test
xchg
pop
lods
push
pop
xchg
ret
out
ljmp
gs
sar
or
bound
xchg
movsl
inc
inc
es
pop
add
cwtl
vsqrtpd
scas
push
pop
add
xchg
sub
je
aaa
and
addr16
sar
dec
mov
rclb
add
or
add
add
pop
or
push
test
inc
jecxz
sub
inc
jl
imul
movsb
andb
inc
lds
jne
push
push
fucomp
pop
pop
or
and
leave
outsb
aad
shlb
aaa
adc
sub
rorb
bound
xor
jmp
dec
std
icebp
cmp
mov
push
sbb
sub
stc
add
andl
jns
nop
or
aas
lcall
adc
xlat
fldenv
test
xor
enter
adc
cmp
fisubrs
out
punpcklwd
bnd
push
pop
mov
imul
mov
push
jecxz
loopne
repnz
mov
cmp
je
icebp
ret
loopne
jo
loopne
nop
cmpsl
in
mov
loop
and
leave
or
cwtl
sbb
xchg
aas
xor
popf
pop
mov
aaa
mov
xchg
idivl
cwtl
xchg
adc
push
int3
mov
jbe
lahf
push
cmp
inc
out
mov
ljmp
enter
push
jg
adc
inc
xor
xor
push
mov
aam
jge
mov
int3
fildl
cwtl
xor
pop
stc
shlb
and
xor
push
out
pusha
int3
jmp
int3
aas
inc
inc
fdivl
ljmp
imul
push
mov
dec
rorl
scas
and
insl
ficoml
out
insl
pop
in
xchg
mov
adc
add
push
idivb
into
das
incl
xchg
sbb
mov
push
sub
or
pop
imul
inc
push
mov
jns
sbb
fldenv
out
adc
mov
fcompl
add
lret
fstpl
cmpb
add
add
mov
ds
and
adc
fcmovnbe
icebp
roll
lret
ljmp
shlb
test
jp
ja
lods
cmp
fwait
cmc
roll
jmp
sbb
call
and
sahf
lcall
cwtl
mov
lods
push
dec
test
ljmp
nop
xchg
and
jg
add
mov
push
dec
mov
and
call
inc
mov
sub
lds
push
push
daa
jge
mov
cmpsl
pop
pop
push
mov
int3
out
and
out
in
or
mov
mov
and
pushf
mov
test
mov
sub
ja
cwtl
rcll
out
sbb
iret
or
call
cmp
aam
cli
rcrl
mov
jge
test
cmpsl
push
dec
push
pop
mov
jns
decb
sbb
xor
add
lea
xchg
push
push
push
lds
cmp
mov
dec
imul
jg
dec
mov
jp
lea
mov
aas
mov
sub
call
jns
scas
bound
add
pop
cmpl
sub
jmp
jns
stos
ss
dec
daa
or
fldl
jno
in
xchg
push
sti
dec
pop
loope
test
int
xchg
inc
push
aas
push
test
cmpsb
adc
mov
push
popa
or
cmp
push
adc
mov
pop
leave
decb
push
inc
stos
mov
lods
pop
ss
cltd
je
mov
lock
not
sub
sub
cmp
stos
xor
xchg
push
in
out
push
ss
outsb
cmp
jecxz
sbb
pop
stos
jno
cmc
mov
sub
ret
and
and
xor
sub
mov
sbb
sub
mov
sub
xor
fists
int3
in
clc
in
or
ret
xchg
add
xchg
pop
nop
dec
adc
or
int
mov
test
pop
adc
mov
ds
xchg
ljmp
test
xchg
aam
std
inc
jmp
add
pop
cmp
pop
fists
jp
bound
pop
es
aam
loope
adc
out
inc
xchg
ficoms
xchg
push
mov
ss
xor
test
lahf
inc
pop
out
lds
cltd
push
test
jecxz
imul
lods
dec
sub
cli
push
add
dec
pop
cmpsl
ficoms
inc
jmp
movsb
xchg
clc
stos
insb
stos
test
add
adc
cmpsb
pop
cld
xlat
das
jmp
out
movsl
jmp
fdivrs
add
mov
stc
leave
mov
mov
add
pushf
push
sub
or
pop
imul
bound
loop
ret
mov
jae
ss
mov
in
adc
gs
mov
sub
sbb
sbb
movsb
add
add
aas
adc
out
test
lods
cmp
sbb
mov
mov
pop
pop
mov
nop
lcall
or
add
ret
imul
or
ret
xchg
cmpsl
adc
and
out
dec
push
shlb
dec
lea
xchg
push
push
rcll
lea
pop
js
and
adc
jbe
push
and
sti
dec
movsb
pushf
out
stos
sbb
popa
cli
clc
in
sbb
hlt
fmull
push
fidivrl
jno
ret
cli
imul
insb
cltd
mov
fstpl
pop
pop
xor
test
mov
lret
cmpsb
inc
adc
cmp
sub
clc
push
and
lea
xchg
retw
add
mov
sahf
shlb
cmp
sbbb
inc
xchg
hlt
jge
mov
cmp
sub
movsl
add
in
adc
pop
pop
test
push
ret
dec
pop
sbb
dec
adc
cmp
scas
scas
test
clc
mov
enter
jae
loop
out
shll
mov
xchg
lock
or
dec
cmp
pop
push
or
push
and
cmp
sbb
pop
xor
pop
mov
cli
xor
fwait
push
enter
adc
ja
jnp
push
mov
inc
push
mov
addl
outsb
xchg
lcall
in
inc
adc
out
mov
insb
rcr
scas
repz
stos
push
cld
outsb
adc
into
aad
mov
cmp
pop
fwait
mov
aam
ljmp
add
testl
test
push
pop
call
in
cvtdq2ps
jno
fidivs
icebp
and
aam
je
mov
mov
inc
and
leave
in
in
cmp
jecxz
pop
mov
pushf
outsl
jmp
dec
pop
inc
push
pop
rcrl
add
les
clc
jae
mov
dec
xlat
imul
test
js
cmp
ss
and
sbb
stos
pop
inc
cmp
xchg
vpandn
add
push
add
sbb
cmp
push
jb
lods
int
fs
xor
mov
sub
addr16
or
push
loope
or
fs
fldt
adc
mov
mov
icebp
xor
aam
scas
push
fldcw
dec
cmp
and
xlat
mov
leave
or
dec
outsl
lock
xlat
push
cmpsb
sbb
pop
jl
cmpsl
pop
jl
push
mov
and
mov
cmp
jns
cmpsl
jp
push
das
mov
stos
fdivs
jne
pop
cmpl
mov
jle
mov
jae
dec
jmp
add
push
test
and
insb
test
shrb
xchg
test
add
mov
adc
das
sub
mov
insl
jnp
sub
arpl
jl
cmp
jp
add
pop
dec
cmp
fcmovnbe
dec
mov
loope
lods
fs
xor
mov
loopne
inc
lock
ljmp
mov
push
and
iret
mov
int3
add
mov
xor
xor
pop
pop
dec
push
das
loope
lahf
ret
mov
inc
adc
cmp
dec
bound
out
cmp
outsl
testl
lock
test
xchg
jp
add
lods
pop
push
loop
push
fisubl
mov
dec
lods
into
xchg
js
inc
xor
stc
or
mov
sub
in
movsl
add
lds
push
aaa
xor
add
orb
push
imul
inc
xchg
mov
sub
xchg
fsubrl
cs
xchg
stos
in
daa
iret
insb
mov
or
mov
mov
or
pop
sbb
popf
mov
xorb
cmp
xchg
lret
push
and
push
cmp
and
pop
mov
or
add
enter
mov
xor
rol
mov
addb
hlt
stos
idiv
gs
adc
xor
cltd
test
or
dec
jne
mov
cmpsb
shll
push
sub
push
xor
jl
mov
or
jnp
into
xchg
rclb
leave
jbe
dec
jbe
mov
jle
mov
into
and
xchg
pop
xchg
mov
jle
cwtl
adcl
xchg
sar
shl
xor
mov
sub
out
dec
pop
cmc
mov
mov
pop
add
out
hlt
sub
or
pop
int3
xchg
cmp
mov
pusha
jbe
and
imul
mov
std
sub
lahf
jnp
push
lret
xchg
push
ss
sub
add
xchg
jp
cmpl
and
arpl
ss
ficoms
cwtl
rorb
cmpsb
orb
pop
rcr
mov
cmc
pop
mov
stos
or
mov
or
je
mov
inc
add
jnp
repnz
adc
pop
ret
xchg
std
pop
js
mov
mov
sahf
mov
in
in
out
js
lds
jns
fwait
dec
cs
int3
jecxz
cmp
stc
ret
and
repnz
xor
xchg
mov
enter
xchg
fdivrs
or
add
pop
mov
adc
stos
out
call
adc
push
add
outsl
mov
in
xchg
pop
fs
mov
sub
bound
insl
add
je
push
test
adc
fmulp
jbe
add
es
mov
ss
fmuls
dec
push
sub
mov
dec
or
clc
mov
jne
das
imul
push
loop
jae
popf
sub
stc
xchg
push
out
mov
loope
call
arpl
movsb
pop
xchg
mov
xchg
sti
and
orb
sbb
out
lock
roll
cmp
incl
inc
adc
add
call
jo
out
test
and
push
dec
push
cmpsl
movsb
in
sbb
or
lock
jae
push
mov
rol
mov
jnp
and
push
mov
std
push
sbb
and
mov
pop
and
mov
imul
idiv
ficomps
pusha
pop
cmpsb
xor
stos
inc
cmp
int3
or
push
mov
out
lahf
and
sbb
inc
clc
dec
hlt
sub
enter
mov
lahf
popa
xor
lods
mov
add
push
mov
shll
ds
and
mov
mov
xchg
mov
pop
mov
add
lret
mov
push
inc
pusha
fildl
xor
ljmp
pop
loop
rorb
out
xchg
into
cltd
stos
inc
fists
sar
push
out
les
jb
call
outsb
mov
sub
dec
lret
jp
cmpb
mov
js
fwait
sbb
jnp
out
rorb
sub
xchg
jnp
pop
xor
add
add
lahf
bound
mov
stos
xchg
ja
aas
into
into
jb
sbb
js
adc
or
stos
stc
mov
repnz
add
lret
ja
mov
imul
sbb
push
mov
add
pusha
mov
sub
negb
sub
inc
out
in
jno
ret
es
inc
push
fs
jb
addr16
push
sub
mov
lea
mov
out
cltd
jae
mov
movsl
xchg
popf
mov
in
adc
dec
xchg
sub
lahf
dec
out
mov
ja
jecxz
mov
enter
mov
mov
ja
mov
lods
loopne
jl
push
pop
imul
fs
icebp
mov
inc
mov
rcr
cmp
jb
jb
add
out
sbb
repnz
jo
add
fsub
jmp
mov
mov
push
int3
jp
pop
inc
push
xchg
inc
push
in
pop
pop
push
insl
or
scas
pop
xor
add
mov
testl
outsl
adc
jmp
pop
push
jge
adc
mov
add
mov
shlb
lret
and
xchg
push
xchg
xchg
addb
xchg
sub
and
jbe
or
test
add
inc
movsb
imul
jbe
and
aas
test
cmp
dec
mov
scas
das
stos
loope
push
sub
cmp
pushf
or
inc
imul
dec
mov
mov
iret
shlb
std
cmp
push
jns
sarb
xchg
cmp
lock
ficoms
add
dec
gs
add
xor
aaa
adc
vmwrite
mov
or
mov
fildll
inc
push
das
jg
xor
or
xor
push
repz
jne
mov
jg
adc
nop
aad
xchg
data16
ret
leave
aas
loopne
shl
rcr
ss
add
popa
jne
mov
stos
addl
mov
push
cmp
pop
mov
leave
mov
cmp
pusha
out
adc
pop
xchg
into
sbb
pinsrw
lahf
inc
and
adc
sbb
sbb
mov
xchg
sbb
sbb
fidivrs
sub
xor
sbb
lods
or
imul
mov
repz
mov
mov
add
shl
jne
jmp
movsl
mov
in
xor
pop
ljmp
fbstp
jbe
mov
dec
cli
push
arpl
iret
adc
inc
pushf
mov
and
jg
push
dec
cmpsb
out
cmpsl
xchg
stos
mulb
jp
stos
int3
inc
fsubs
sbb
sub
pushf
cmp
dec
rclb
mov
mov
dec
cmpsb
ja
jo
rcl
ljmp
push
hlt
fdivs
movl
loopne
pushf
mov
sub
and
xchg
push
add
xor
es
jle
dec
iret
or
movsl
jo
ret
jnp
mov
jl
icebp
fs
mov
cmc
mov
pop
nop
add
outsl
pop
mov
out
or
shl
loope
and
xor
mov
ret
or
imul
movsb
popa
data16
inc
and
mov
ja
cltd
mov
push
aas
adc
mov
jecxz
test
and
leave
test
sub
push
xor
sti
jns
cld
push
sbb
pop
aaa
push
or
repnz
adc
shlb
or
sub
sub
sahf
fdivl
fisubrs
pop
das
out
push
jne
test
mov
lahf
ds
add
mov
lret
pushl
ljmp
popa
xchg
mov
out
data16
xor
sub
pop
fwait
fwait
notl
sbb
jmp
arpl
imul
shrb
test
jno
mov
or
xor
scas
es
test
movsb
xor
adc
cmp
not
call
iret
xchg
dec
and
cli
sub
or
daa
sbb
jecxz
mov
mov
pop
in
pushf
dec
cmp
sbbl
insl
jge
test
sub
fisubrs
push
mov
fwait
xchg
push
mov
andb
movsl
test
add
sub
enter
xchg
or
divb
fstpt
jp
dec
adc
mov
in
adc
jae
mov
xchg
sbb
bound
outsb
lea
negb
or
mov
sbb
daa
je
push
and
jmp
inc
sub
sti
add
pop
jl
mov
sub
popa
sbb
cli
fcmovbe
jecxz
push
stos
cmp
xchg
push
mov
mov
cmp
dec
filds
cmp
int
lahf
jp
shlb
dec
in
insb
leave
mov
aas
cmp
je
or
lds
jecxz
xchg
frstor
shlb
jne
testl
or
push
cmp
iret
xchg
sbb
fildl
sbb
fucomp
jp
sub
sub
push
lods
mov
xor
mov
in
repz
ds
and
mov
or
mov
into
mov
fsubrs
cmpsb
xor
loop
bound
sbb
cmp
add
sub
ret
lea
inc
mov
lea
cltd
outsb
inc
mov
lods
push
ret
pop
push
pop
popa
mull
jno
and
sbb
movsl
jns
adc
mov
inc
imul
nop
mov
scas
aam
add
xchg
adc
sbb
pop
xchg
int
xchg
in
dec
xor
inc
sahf
vpsrlq
lods
inc
lret
sarl
cmpsb
adc
and
outsb
fwait
add
popf
and
shlb
and
cmpsb
and
pop
push
out
xchg
mov
fisubs
cmpsb
pop
sbb
out
sbb
jbe
test
jmp
dec
fsts
pop
xchg
stos
cwtl
gs
mov
inc
jmp
int
test
aam
stos
xor
sub
fbld
push
jmp
and
outsb
scas
mov
push
movsl
repnz
push
push
mov
adc
push
dec
sub
lds
pop
jne
addr16
jno
les
scas
imul
inc
lds
mov
push
cmp
adc
mov
mov
repnz
dec
sub
cmp
lcall
xor
arpl
xchg
bound
cmp
xlat
cmp
jb
insl
mov
dec
sub
pop
xchg
push
push
lods
aaa
inc
sub
or
scas
xor
mov
lea
test
xor
xlat
and
stos
push
cltd
insb
in
out
data16
shrl
icebp
in
gs
adc
popf
or
outsl
orl
cmp
es
sbbl
inc
push
mov
inc
loope
pop
jnp
dec
daa
push
movsb
and
ljmp
xchg
stc
pop
and
outsl
test
pushf
rorb
mov
rcrl
fsubrs
xor
inc
and
add
xchg
push
cmpsl
out
js
mov
cmp
lahf
pusha
inc
dec
mov
push
mov
lock
adc
sti
data16
nop
push
arpl
divl
mov
jg
push
inc
add
dec
loop
adc
in
dec
push
adc
std
sti
imul
or
dec
lcall
jns
xor
or
je
xchg
pop
sarb
mov
das
stos
pop
insl
into
pop
int
inc
fisttpl
push
cld
xor
jo
xchg
mov
sahf
sbbl
inc
xchg
int3
dec
lahf
lcall
repnz
ja
les
mov
sub
lahf
aam
pop
in
int3
aaa
stos
jae
xor
mov
fistl
inc
pusha
loopne
jecxz
sbb
outsl
jmp
or
out
pop
int3
fstl
sub
mov
sub
mov
lds
test
pop
push
mov
test
push
jno
dec
test
pop
pop
in
add
addr16
nop
push
inc
pop
adc
and
clc
lds
sub
lock
sti
out
fistpll
je
or
mov
mov
pop
jle
pop
imul
jne
push
mov
adc
std
dec
add
jbe
mov
pushf
cltd
jne
mov
in
ret
or
xchg
pop
xor
xor
adc
in
movsl
mov
pop
and
pop
push
mov
sub
lea
dec
mov
inc
push
leave
std
jno
mulb
jbe
cmp
sub
or
out
dec
popf
loopne
aam
lds
scas
arpl
nop
addb
mov
int
fwait
cmp
xor
push
pushf
jnp
jmp
mov
mov
mov
inc
sbb
inc
xchg
cmp
inc
cmpsl
int
outsb
out
jnp
push
mov
gs
lret
push
into
inc
cmp
cld
negb
jne
pop
sti
popa
dec
jp
cli
lret
mov
cmpsl
ja
push
outsl
sub
push
rcll
add
lods
movsl
adc
pusha
sbb
outsb
pop
add
idivl
jecxz
adc
ret
xchg
cwtl
arpl
pop
arpl
dec
mov
dec
mov
push
or
stos
in
inc
sbb
push
adc
ja
dec
and
dec
mov
push
leave
int3
lcall
outsl
enter
in
cwtl
test
fld
mov
xchg
sub
mov
icebp
in
sbb
cmp
dec
nop
push
mov
push
jb
cmp
jo
test
pop
pop
adc
xchg
movsb
out
lods
mov
sub
push
in
jecxz
jg
mov
adc
hlt
loopne
pop
lcall
cmp
repz
aas
pop
movsb
loop
lods
pop
jbe
push
mov
pusha
enter
sbbb
mov
xchg
push
test
cmp
sbb
rol
pop
xor
test
enter
or
sub
clc
dec
lds
faddp
in
cmp
stos
icebp
dec
sub
daa
inc
xor
das
movsb
adc
cld
nop
dec
outsb
push
out
push
movsl
into
pop
pop
ret
cmc
stos
mov
enter
out
xor
add
xor
or
int3
pop
or
adc
dec
sbb
xor
sub
xor
and
js
mov
mov
daa
jge
adc
or
sbb
insl
loopne
cmp
cmp
leave
sbbl
xchg
lret
ljmp
mov
mov
sbb
mov
add
insb
popf
scas
cli
scas
push
aad
bound
cltd
jnp
push
repz
pop
in
inc
inc
or
dec
daa
sahf
push
jno
add
cmp
adcl
out
dec
xor
addb
sbb
and
xor
mov
ja
xchg
in
bound
rcll
pop
sbbb
cmp
or
lret
repz
lret
push
ja
pop
jmp
shlb
push
sub
add
test
dec
aas
cmc
pop
jmp
in
add
mov
aad
ljmp
rol
fists
lret
das
nop
movsb
mov
dec
xor
popa
sub
out
mov
inc
je
inc
adc
aad
lahf
push
lock
das
mov
movsl
cmp
clc
dec
jns
test
push
and
dec
pop
mov
sub
scas
push
xchg
pop
mov
xchg
data16
jns
jle
lock
pop
xchg
cmp
sbb
mov
jo
ja
dec
aaa
lea
sub
adc
adc
jno
cld
je
negb
aam
fstl
cmc
loop
lret
push
mov
dec
and
adc
mov
popa
cmp
scas
mov
mov
fstl
ja
sahf
push
mov
into
notb
jne
clc
jmp
jg
adc
ret
test
sbb
cmp
cld
je
in
pop
cmp
sub
add
xchg
loopne
shlb
mov
out
dec
mov
push
add
test
xor
es
test
loop
ljmp
dec
push
and
clc
sub
jmp
dec
sbb
cmp
stc
das
cmpsb
aas
push
outsl
fmuls
cmp
sbb
loop
in
inc
jb
popf
imul
inc
fisubs
mov
jbe
mov
lods
sub
stos
loop
repnz
sbb
sbb
cwtl
lods
add
pop
pop
ss
in
push
mov
roll
pop
mov
pop
addr16
mov
pop
pushf
lret
xorb
nopl
in
sbb
and
add
xchg
mov
fistpl
pushf
fwait
jmp
push
test
rolb
sahf
jmp
dec
mov
jmp
adc
popf
or
and
inc
mov
jo
sbb
fcomps
nopl
into
cmp
xchg
and
in
ja
fsubrs
dec
iret
mov
push
and
cmpsl
add
fs
pop
sbb
enter
loope
xchg
add
cltd
or
insl
shl
ss
cld
mul
ret
lcall
sarl
rcll
mov
add
or
das
js
div
mov
dec
mov
xor
cld
pushf
xchg
jns
shlb
out
sub
cmp
mov
enter
sbb
inc
sahf
jb,pn
inc
fiadds
ja
pop
pop
test
dec
dec
adc
insl
orl
aam
bound
mov
loopne
sub
ja
std
push
dec
pop
cmp
jnp
dec
xor
das
ja
pop
mov
aaa
jnp
jnp
xchg
test
int
add
push
pushf
sbb
ss
and
jg
inc
inc
xchg
sti
xchg
fs
mov
lcall
add
mov
sub
jns
push
pop
ljmp
sbb
sub
imul
and
addr16
shl
cmp
xchg
call
outsl
dec
push
int
jle
inc
push
ret
addr16
adc
sub
adc
rcrb
movsl
and
movsbl
inc
cs
adc
pop
push
mov
xchg
pop
add
jnp
jns
lahf
dec
and
pop
ds
mov
cmp
mov
mov
push
mov
nop
int3
in
mov
dec
out
sti
add
call
xchg
std
jp
mov
mov
mov
fnstcw
and
cltd
mov
xlat
dec
dec
add
mov
jecxz
adc
fnsave
insb
mov
sub
pop
xor
mov
loope
jge
mov
call
movsb
add
stos
shll
mov
lahf
cmp
data16
dec
jle
push
popf
cmpsb
push
es
cmp
jnp
popa
nop
jo
cmpsl
clc
pop
mulb
lods
dec
or
clc
push
ljmp
mov
dec
sub
dec
mov
outsb
ja
out
lds
xchg
rclb
dec
lods
mov
sahf
push
jno
push
mov
xor
mov
inc
in
pushf
xor
mov
push
ret
test
sbb
adc
notb
adcb
pop
daa
pop
mov
jns
mov
out
jo
cmp
sbb
push
mov
fstpt
dec
mov
addr16
in
aaa
cmp
addr16
push
sbb
hlt
shll
or
and
int
adc
add
sbb
sti
mov
mov
dec
sub
jg
addb
adc
les
push
dec
add
fistps
sub
outsl
xchg
and
mov
es
fcomi
jl
into
mov
adc
mov
mov
push
sub
or
sahf
mov
mov
adc
push
xchg
push
mov
push
or
inc
xchg
cmp
inc
int
bound
sub
sub
leave
mov
imul
mov
or
frstpm(287
sub
cs
les
cltd
sub
jae
inc
sub
pop
dec
sub
adc
cmp
mov
outsl
popf
and
std
cmp
pop
jecxz
mov
ja
and
lcall
outsb
xor
or
lods
xor
insb
jmp
dec
aad
loop
pop
mov
enter
xor
call
loop
or
mov
add
ja
bnd
shlb
xchg
sub
fwait
inc
andl
mov
sarb
mov
inc
mov
int3
imul
mov
test
negl
sub
sub
adc
push
pop
repz
jl
test
xchg
push
pop
dec
mov
movl
pushf
dec
cs
mov
adc
adc
jbe
call
xlat
test
sub
out
mov
sbb
lahf
adc
xchg
orb
jmp
xchg
fs
lods
pop
cld
adc
pop
roll
lock
pop
cmc
enter
ds
stos
fimuls
mov
outsl
and
ljmp
push
add
push
mov
xchg
add
sti
sbbl
sbb
daa
add
dec
add
fcoml
lods
int
add
orl
push
fnstenv
ljmp
aaa
dec
xchg
adc
inc
and
sahf
pop
dec
gs
mov
inc
push
sbb
pop
cmp
insb
xchg
jno
jecxz
idivb
stos
pushf
out
dec
clc
aaa
insb
sti
inc
js
aad
sahf
xor
push
sbbl
notl
mov
mov
xor
call
xchg
mov
hlt
int3
jmp
adc
lock
fstpt
xor
push
xor
mov
cmp
mov
cmpsl
aas
mov
je
xchg
inc
clc
mov
inc
stos
jmp
mov
gs
and
jecxz
xchg
divb
vmread
sbb
xchg
movsb
cmp
mov
aad
inc
test
and
bound
das
clc
out
mov
shl
scas
or
push
dec
into
aad
push
dec
stc
imul
ficomps
stos
add
dec
push
adc
outsb
mov
inc
out
pop
or
jmp
sbb
dec
and
jno
inc
cmp
or
test
sar
jbe
mov
adc
jle
push
push
stos
cs
and
cmp
xor
mov
mov
jnp
push
cmp
jl
mov
outsb
sub
cmp
push
cmc
and
mov
out
mov
adc
ljmp
inc
aam
cli
stc
or
or
and
ds
jae
adc
push
lahf
cmp
lahf
sbb
sbb
pop
je
mov
inc
into
push
dec
pop
and
adc
pop
mov
xchg
gs
pop
in
lret
inc
mov
mov
arpl
or
jmp
mov
arpl
lods
int
sbb
adc
xorb
dec
pop
pop
cmpsl
out
push
adc
lret
and
dec
cmp
mov
test
popa
loopne
cmc
popa
iret
daa
cmp
push
test
cmpsb
pop
rcr
lock
xor
or
inc
sub
outsl
and
and
out
repnz
jbe
inc
mov
mov
out
add
push
or
rcll
outsl
sti
xchg
jno
in
xor
data16
jmp
cltd
mov
movsl
adc
pop
sub
in
mov
call
mov
test
int
das
adc
cmp
add
adc
repz
fdivrl
mov
test
xchg
fisubl
sub
and
adc
es
stos
imul
xchg
in
aaa
xchg
xor
scas
push
imul
push
out
cmp
inc
out
xlat
fbld
pusha
in
push
shl
ret
scas
aam
dec
clc
mov
loop
hlt
scas
ror
mov
int
fwait
sub
jns
mulb
imul
push
pop
xchg
sbb
push
pop
push
pop
jo
loope
js
xchg
mov
pop
cmpsl
jle
pushf
push
cmp
mov
iret
pusha
jl
sbb
das
adc
xchg
out
orb
sbb
lea
add
jnp
jbe
pop
int
cmp
popa
dec
movb
sbb
scas
aad
jne
outsl
rcll
add
and
aas
push
pop
xor
mov
mov
cmp
stos
mov
pusha
je
ret
push
sbb
cmpl
sbb
stos
sar
sbb
loope
push
and
xchg
sub
loop
cmpsl
std
lahf
jg
shrl
sub
inc
out
cli
jae
sbb
fdivl
dec
cli
dec
cmpsb
repnz
push
cltd
xchg
ffree
sbb
bound
xchg
loopne
movsl
lock
mov
dec
test
push
xchg
push
or
stos
das
xor
shl
movsl
sub
out
add
adc
fcmovne
addr16
popf
mov
imul
imul
jo
out
loope
cmp
cwtl
push
jg
or
sbb
inc
adc
adc
out
outsl
sbb
jmp
cmc
jne
push
mov
fcomi
sub
mov
pop
pop
jo
enter
jg
lea
xlat
mov
test
les
or
shlb
imull
outsb
movsl
pop
jecxz
in
sbb
mov
jmp
cmc
jge
mov
mov
outsb
push
gs
pop
pusha
mov
sbb
sub
arpl
call
rorb
icebp
ret
pop
adc
and
mov
stos
test
stos
push
cmp
out
mov
loop
aad
in
in
fdivs
loopne
jecxz
call
push
mov
inc
pop
jns
mov
lahf
mov
mov
fadds
pop
scas
xchg
enter
add
mov
pop
sub
mov
adcb
jae
add
sbb
xor
and
aaa
xchg
daa
or
mov
out
adc
inc
xor
mov
stc
ret
adc
xorl
mov
xor
cmp
or
loope
cli
popa
mov
and
xchg
sub
popa
sub
adc
popf
testl
sti
jae
sbb
mov
in
push
movsb
dec
add
jb
scas
loope
jmp
pop
sbb
fcmovnb
mov
or
js
int3
insl
pop
fst
js
jle
aas
inc
dec
and
xchg
adc
fwait
sub
fisttpl
fisubrs
clc
sahf
adc
mov
scas
enter
in
jmp
mov
push
rorl
mov
in
enter
pop
or
sbb
cltd
sub
cmp
sub
pop
sbb
mov
or
pushf
push
push
mov
jbe
divl
cmp
lcall
je
sti
ss
btr
cltd
movlps
mov
sub
xor
pop
mull
mov
iret
inc
mov
popa
dec
mov
popf
inc
sbb
loopne
xchg
jbe
test
pop
add
xchg
mov
sbb
ljmp
mov
lods
dec
xor
in
pushf
jb
shrb
lea
sbb
loopne
push
dec
inc
mov
sbb
add
ljmp
add
mov
adc
js
sub
or
add
xchg
test
fbstp
pop
xchg
push
lods
xchg
es
test
pop
jnp
les
adc
je
dec
cmp
cmp
cmp
cltd
inc
test
jne
mov
leave
repnz
inc
outsb
sub
cmp
sbb
test
das
sub
sbb
add
sbb
sub
shlb
or
imul
movsl
rolb
bound
xchg
shlb
icebp
add
aad
and
cld
and
pushf
in
outsl
mov
scas
aas
repnz
fwait
xor
mov
movsb
and
lods
into
mov
push
int
xchg
cld
mov
out
call
dec
jg
call
cld
stos
test
adc
out
aas
stos
mov
sbb
imul
mov
push
or
mov
out
aad
sbb
andl
inc
sets
repz
stc
lea
stc
out
xchg
popa
jbe
ja
push
inc
inc
cld
lods
sbb
divl
xchg
sub
sub
xor
lds
mov
or
xchg
sbbl
pop
pop
cmpsb
cltd
fnsave
add
add
adc
or
mov
shl
xorl
mov
sarb
mov
sub
fcomps
cmp
ret
add
arpl
popa
xor
add
mov
jns
popa
and
ljmp
cltd
mov
nop
or
mov
enter
test
inc
test
dec
pop
add
adc
mov
das
aad
push
xchg
mov
inc
test
shll
test
in
jnp
lock
push
cltd
mov
int
nop
addl
adc
bound
inc
inc
fucomi
sbb
roll
sbb
cmpsb
pusha
push
or
xchg
sub
addb
inc
sbb
mov
cmpsl
pushf
outsl
add
xchg
xor
sbb
cli
lods
addl
pop
xor
mov
xchg
shlb
dec
mov
cltd
fcomp
and
dec
imul
push
lds
pop
arpl
inc
arpl
es
pop
stos
mov
movsl
push
mov
cmp
popf
push
and
fwait
xor
jb
test
mov
push
cltd
popf
daa
inc
out
or
jmp
inc
sub
cs
cmpsl
outsl
insb
loopne
inc
jp
mov
push
adc
out
jnp
mov
or
out
sub
movsl
xor
push
mov
or
mov
in
adc
fsts
mov
aas
push
outsl
imul
or
iret
jne
cld
dec
int
test
mov
shrb
adc
gs
sbb
mov
cmpsb
push
xchg
sahf
int3
mov
xchg
dec
mov
div
test
sbb
pop
and
scas
divl
adc
xor
sbb
int3
jmp
roll
inc
mov
mov
lods
scas
mov
xor
and
lret
jno
xchg
and
shl
stos
cmp
mov
aad
push
inc
sub
inc
ljmp
push
and
test
jne
mov
mov
lods
into
hlt
arpl
mov
sub
push
pop
xchg
push
jp
mov
sti
cmp
js
adc
mov
lds
std
pop
sbb
sub
sbb
cmp
sub
dec
aam
addr16
loop
mov
pop
in
clc
push
movsb
mov
jno
inc
out
cmpsl
and
xor
dec
sbb
push
test
xor
jle
inc
mov
movsb
xchg
lahf
mov
mov
mov
scas
mov
mov
adc
cmpsb
xchg
in
lahf
fisubrl
cmpsl
cmpsl
xchg
jecxz
lods
add
or
sub
fisttpll
orb
addr16
je
stos
jb
inc
jl,pn
dec
cmpsl
mov
test
pop
dec
cmpsw
xlat
int3
inc
shll
lahf
inc
sub
xchg
ret
movsb
ret
scas
jmp
pop
jl
xlat
and
push
cmc
shl
ret
ds
adc
inc
cltd
mov
jecxz
cltd
cmp
addr16
mov
and
notl
xchg
int3
cwtl
stos
pusha
pause
ret
mov
push
mov
scas
cwtl
loopne
es
and
mov
xorb
xchg
adc
mov
insl
sarl
test
enter
fbld
pop
rsm
icebp
mov
leave
ret
and
pop
mov
or
into
sahf
adc
add
lods
add
je
mov
mov
mov
and
cwtl
insb
xchg
sbb
es
sahf
sub
mov
aam
push
in
xorb
sbb
adc
fidivs
push
adc
sti
outsl
or
jge
cld
cmp
push
lea
mov
dec
sbb
cmpsl
push
inc
ss
xchg
push
fcoms
jnp
add
dec
sahf
dec
in
ret
push
xchg
mov
jl
mov
jle
and
shll
sub
dec
andb
int
mov
stos
and
pop
cltd
cmpsl
fs
lods
pop
nop
andl
lcall
hlt
mov
cld
jmp
leave
roll
mov
jns
sahf
and
out
jno
ret
inc
icebp
lret
rcrb
pop
inc
cli
sti
dec
insl
fld
jne
mov
pop
addr16
adc
stc
sbb
push
mov
and
jl
arpl
mov
jb
adc
dec
out
dec
lea
mov
add
add
cs
insl
pop
inc
jp
loopne
in
out
pushf
pushl
or
adc
cs
nop
cmp
dec
ja
test
repnz
daa
mov
jne
dec
sub
inc
xor
into
cmp
repnz
mov
cmp
jecxz
sub
test
push
inc
cmp
push
imul
mov
push
lret
mov
push
xor
aaa
mov
jp
adc
jne
sahf
inc
xlat
jns
xor
mov
nop
ja
icebp
cmp
aas
or
sti
jl
dec
pop
loop
cmp
sbb
pop
mov
jecxz
test
pop
xor
cmpsl
ret
xchg
and
movsl
xor
cmp
pop
mov
and
int3
sbb
xchg
add
mov
push
int3
fmul
push
ja
loope
push
jb
xor
cmpsl
adc
mov
sbb
jns
push
lcall
fwait
dec
lret
fidivrl
push
cmp
out
or
fsubs
jo
enter
roll
or
andb
pop
gs
push
adc
mov
cli
jge
inc
insb
mov
sub
mov
push
push
and
repz
inc
sbb
pop
inc
cwtl
xchg
xchg
mov
rcrb
stc
sbb
icebp
pop
push
dec
sub
aas
bound
mov
pop
sbb
sbb
orb
mov
and
push
lahf
adc
push
stos
or
inc
adc
jmp
imul
push
stos
dec
lahf
lret
xor
je
pop
stos
push
lahf
pushf
bound
jnp
gs
lret
pop
jo
call
xchg
xor
mov
sbb
vsubpd
stos
mov
iret
enter
test
xchg
or
pusha
pop
ret
testb
lds
cs
out
pop
mov
cmp
adc
fld1
jg
mov
frstor
pushf
clc
aam
fwait
jmp
ljmp
insl
cmp
cmpb
in
add
into
and
outsl
das
scas
pop
mov
push
pop
ljmp
in
jns
push
ret
int3
mov
add
sub
ss
cmp
mov
ret
cltd
pop
rcr
jbe
jle
mov
shrl
cld
jae
xor
jnp
lsl
aas
insl
fisttpll
sub
test
pushf
ret
jns
and
bound
pop
jns
sbb
daa
and
inc
rep
sarb
jne
pop
icebp
mov
mov
jmp
jp
push
movsb
mov
mov
insl
nop
jg
jmp
movd
sti
push
sub
sub
lcall
push
and
popa
hlt
iret
add
push
shl
inc
cltd
add
pop
scas
add
xchg
cmp
mov
loope
lock
hlt
mov
inc
jne
xchg
arpl
incl
xor
sub
add
rorl
in
dec
push
add
sbb
mov
inc
iret
adc
notl
and
add
xchg
push
movsl
sbb
mov
or
push
movsb
jecxz
xchg
sub
frstor
adc
adc
push
or
jle
inc
mov
pop
adc
push
inc
jge
cmp
popa
sbb
cwtl
call
mov
cmpsb
rorl
mov
cmpb
add
jmp
test
cli
inc
insl
jns
ja
sbb
mov
sub
gs
jns
outsl
iret
cli
or
pop
movb
sbb
stc
mov
jnp
or
inc
out
xor
icebp
push
push
jae
add
jl
sbb
xlat
loopne
sar
data16
cmp
sbbb
lea
dec
cs
push
imul
jb
adc
popa
mov
loopne
xorb
cltd
cmpsb
pop
rcrl
lcall
and
cmp
jmp
push
iret
push
loopne
jae
inc
xor
movsl
mov
ja
sbbl
outsb
dec
sub
mov
pop
iret
dec
xchg
jg
or
pop
lahf
in
jle
stc
push
jmp
dec
pop
mov
outsb
shrb
outsb
iret
xor
ficoml
in
xor
and
jns
enter
sub
jnp
dec
bound
and
and
mov
fldt
sbb
sbb
ds
jp
cmp
lods
dec
xchg
movsb
jecxz
lock
repnz
push
lcall
sbb
or
xor
into
xor
cmc
loope
daa
imul
or
js
inc
push
std
cli
or
imul
fbstp
lret
inc
imul
mov
cmp
or
add
std
sbb
xor
pop
leave
mov
jp
in
sub
push
push
sub
lods
jg
loope
mov
roll
xor
out
incl
mov
push
imul
jb
movsl
xchg
and
daa
sbb
mov
repnz
jl
xchg
aad
push
jne
test
fnsave
arpl
cli
clc
sub
jbe
out
pusha
xchg
data16
pop
inc
push
jg
mov
gs
adc
outsl
in
shll
pop
lahf
shlb
test
sbb
jecxz
mov
mov
repnz
cmp
loopne
jmp
mov
std
out
mov
loop
popf
out
out
lahf
mov
imul
clc
data16
dec
adc
test
testl
aam
insb
pushf
data16
loopne
push
dec
or
imul
and
mov
stc
push
sahf
ret
or
cs
xor
popa
inc
mov
mov
push
mov
inc
xorb
shll
add
sbb
mov
jge
xchg
dec
inc
mov
das
fcoms
aad
cmpsl
push
sub
rclb
sahf
test
mov
mov
test
sarb
lahf
adc
lret
arpl
xchg
pop
hlt
aaa
dec
icebp
mov
push
xchg
jg
jne
inc
mov
ret
clc
mov
out
mov
inc
adc
icebp
mov
or
mov
js
setl
test
jmp
xchg
jge
mov
xchg
mov
xchg
pop
mov
xor
pop
popa
leave
aam
scas
cmpsb
addb
fsubrs
pop
mov
rcll
das
dec
dec
dec
aad
mov
addr16
push
repnz
mov
add
cwtl
push
pop
pop
int3
sbb
aad
xor
mov
jns
pop
nop
fidivrl
test
sub
adc
data16
sahf
or
popa
pop
cmc
and
lock
insl
mov
and
pop
cltd
jae
jle
sub
push
dec
mov
enter
or
mov
xchg
in
clc
les
nop
jae
inc
xchg
icebp
movswl
pusha
shlb
popf
daa
repz
push
insl
lock
adc
jae
jb
ds
leave
push
sahf
push
and
mov
stc
push
out
add
ret
fimuls
pop
adc
xchg
aam
adc
pop
xchg
xor
jns
ss
jo
inc
sub
pop
sti
jne
pop
add
fmuls
sbb
enter
jne
decl
sti
pop
inc
stc
lods
pushf
cmp
outsb
imul
xor
push
pop
push
fists
in
clc
mov
inc
jnp
cmp
jae
sbb
popa
fucompp
pop
aad
aas
fldenv
inc
xchg
les
cld
xchg
cmpl
pop
mov
and
or
fmuls
pop
mov
pushf
sub
xor
fwait
mov
loop
pushf
jp
jmp
mov
fwait
push
mov
js
jge
scas
mov
push
or
jb
cmc
ret
sbbl
aaa
jmp
sahf
pop
pop
pop
mov
popa
adc
int3
sub
adc
pop
lcall
leave
dec
std
sti
sarb
imul
testl
lret
sub
pop
jns
cmc
data16
pop
rorl
imul
loop
lret
jmp
call
add
ret
pop
fistpll
stos
icebp
fdivr
inc
out
lods
jns
out
xor
dec
jl
mov
daa
fidivrl
jl
les
nop
faddl
lret
dec
push
xchg
jb
nop
out
mov
addr16
les
xchg
into
imul
add
add
out
ds
popf
sbb
sbb
out
repz
ljmp
mov
test
and
xchg
xor
rorl
enter
cltd
sbbb
inc
js
inc
rorl
loop
push
test
mov
sub
and
sahf
stc
pop
jmp
shlb
ds
lret
inc
sub
addr16
push
out
adc
xor
and
imul
push
jmp
in
loope
and
or
daa
adc
das
ret
xor
or
dec
into
dec
ds
mov
loop
pushf
sbb
dec
and
jns
jg
stos
dec
dec
dec
jns
or
xor
repz
cwtl
mov
sub
mov
jp
cmp
pop
call
inc
not
pusha
enter
into
jne
cmc
insb
adc
fsub
and
sbb
add
pushf
das
pop
dec
sub
in
jecxz
ficomps
ds
sub
into
xor
xlat
fcompl
sub
icebp
adc
aas
push
outsl
jb
xchg
sbb
sub
jmp
in
pop
in
push
inc
jg
movsl
cmp
xchg
add
fildl
mov
and
sbb
orb
push
push
xor
or
ja
and
mov
inc
cmp
out
pop
pop
in
in
loope
cmpsl
adc
fisubl
das
fstpt
sub
push
push
xchg
outsl
loop
xor
in
cld
xchg
adc
mov
stos
pop
xorl
or
or
dec
inc
movsb
mov
out
lock
add
cmpsb
into
inc
cmp
or
sti
pop
ds
inc
or
sbb
cmpsl
jbe
push
rorl
aas
sub
cmpsl
lret
mov
add
in
adc
xchg
mov
scas
sbb
or
or
test
shlb
dec
mov
dec
test
and
fisubrl
dec
sti
int3
add
mov
lret
inc
lods
mov
out
dec
pop
push
sbb
lods
push
jae
test
xor
jae
push
stc
inc
loope
add
repz
mov
pop
clc
mov
test
lods
and
or
sub
faddl
dec
out
fldenv
xchg
lahf
aaa
imul
call
sub
dec
and
pop
pop
jns
scas
inc
adc
cmpsb
aam
sbb
loope
cmpb
inc
mov
sarb
mov
xor
push
das
arpl
mov
js
fdivl
jge
pop
xchg
adc
dec
xor
leave
add
jbe
cmp
cmp
inc
xchg
adc
rcl
mov
adc
dec
adc
and
dec
mov
leave
cmpsl
int3
mov
lea
in
cmpsb
xchg
inc
push
or
inc
mov
xorl
and
adc
and
sahf
sarl
imul
inc
incl
adc
push
aaa
lock
xchg
cltd
test
pop
lods
in
sbb
dec
pop
sti
pop
mov
jo
and
mov
sbb
push
cmp
dec
imul
ss
stos
mov
sti
test
das
xchg
lods
daa
gs
mov
leave
popf
add
cmc
cmp
ljmp
and
pop
push
sti
cmc
cmp
xchg
jnp
insb
sbbl
lcall
movsl
lock
mov
adc
push
xor
add
fstpt
icebp
xchg
ficoms
jp
jp
int3
fldlg2
push
test
jnp
scas
push
je
inc
fmuls
mov
repnz
outsl
das
dec
loopne
flds
sbb
movsb
sar
xchg
in
xor
inc
or
das
add
push
jp
std
inc
lcall
fistpll
or
mov
clc
sbb
xchg
arpl
or
pop
mov
sahf
bound
sahf
lods
and
mov
sub
int3
mov
cmp
sbb
cmp
testb
mov
adc
xorl
insb
test
out
jne
iret
pop
nop
xor
sbb
hlt
mov
mov
adc
mov
adc
movsl
lock
aad
jae
test
dec
jo
imul
test
cmp
insl
fsin
divl
dec
sub
clc
push
sbb
push
and
dec
maxsd
lods
cmp
and
xor
popf
test
dec
or
and
dec
inc
pusha
sub
pop
mov
addb
movb
ljmp
sbb
sbb
cmpsl
xor
leave
cmp
mov
jno
jns
add
jg
mov
push
jno
out
mov
jb
fsubs
stos
push
fdivs
push
repz
ss
lret
sub
daa
mov
sarb
daa
hlt
mov
adc
jp
sub
sub
adc
xor
mov
nop
add
mov
js
inc
mov
push
cmc
bnd
xor
outsl
push
pop
or
push
arpl
sbb
fisttps
jl
push
inc
roll
xor
movsl
mov
sbbb
sbb
mov
adc
fcoms
sub
lret
cld
xor
inc
dec
push
sarb
rcrb
cmp
jle
repz
pop
in
dec
sub
je
mov
lret
jecxz
mov
out
cmp
fisttps
int
jmp
int3
or
jmp
jl
int3
out
pusha
inc
cmp
mov
into
bnd
push
or
mov
jmp
push
mov
das
hlt
aam
lret
or
bound
test
in
sub
xor
inc
pop
aaa
enter
dec
and
outsl
rcr
fs
sub
adc
outsb
testb
mov
cs
adc
in
loop
add
push
push
and
inc
fisubrs
stos
mov
xchg
xchg
push
and
mov
xlat
dec
and
xchg
cmc
lret
xchg
adc
mov
and
sbb
sbb
fcoms
test
loope
cmp
and
cmp
cmp
jle
arpl
lahf
pop
mov
repnz
mov
push
scas
stos
mov
mov
in
scas
arpl
icebp
leave
sub
test
cmpsb
in
xchg
es
iret
hlt
sbb
sbbl
xor
add
inc
cs
push
scas
mov
mov
fistps
das
lret
mov
aaa
ja
out
cmpsl
sub
cmpb
outsl
andl
outsb
cmp
or
lds
ud2
pop
cmpl
ret
dec
mov
and
push
sbb
lds
gs
dec
ret
xor
test
cltd
inc
sub
test
jg
jmp
leave
in
push
push
jns
inc
add
test
call
mov
mov
inc
pop
lods
mov
fsubrp
test
outsb
jbe
xchg
es
fmull
cwtl
push
inc
mov
mov
rcrl
xor
in
push
xchg
mov
push
push
shl
or
scas
jl
ss
jne
xchg
test
and
insb
push
pushf
xorb
loop
or
mov
bound
mov
cmc
or
mov
add
inc
loope
inc
xchg
inc
jbe
hlt
cmp
mov
rolb
les
aam
mov
xor
xchg
dec
aaa
cmpsl
mov
popf
mov
icebp
add
subb
fwait
push
stos
mov
xor
fmuls
lea
mov
mov
adcl
loopne
ret
sub
jns,pt
testb
clc
lock
jae
inc
test
ljmp
nop
xchg
jo
insl
repz
xor
notb
scas
jnp
adc
mov
outsb
pminsw
mov
mov
cmpb
dec
mov
test
mov
mov
pop
mov
imul
dec
ds
and
sbb
insl
cmovo
sbb
arpl
and
in
xor
cwtl
mov
ds
fnstenv
jbe
imul
and
and
sbb
aaa
jae
mov
imul
pop
and
sbb
aad
lods
sbb
dec
cmc
out
lret
dec
fidivs
ljmp
and
outsl
inc
cmpsl
adc
and
add
sbb
mov
js
sbb
aas
xor
sti
xchg
sub
jle
cmc
mov
mov
cmpsb
bound
push
push
dec
push
push
mov
push
lahf
sbb
mov
imul
xchg
es
mov
xchg
loope
lods
mov
int3
scas
mov
add
jb
ficomps
mov
push
into
cmpsb
adc
push
mov
icebp
ret
call
fwait
push
xor
test
hlt
adcl
xor
nop
pop
icebp
jp
les
mov
jne
mov
into
add
mov
in
xchg
pop
ficompl
es
or
insl
cwtl
mov
sahf
fdivrl
adc
call
mov
cmc
scas
sbb
pop
gs
sub
jp
inc
or
hlt
jmp
xchg
in
xchg
cmp
stos
mov
dec
xchg
jae
add
lock
int3
mov
mov
push
lea
data16
loopne
out
xor
add
push
adc
add
xor
or
sub
lret
cmp
xchg
mov
stos
mov
sub
push
leave
roll
repnz
inc
xchg
lahf
nop
std
adc
inc
stos
repz
lds
push
mulb
lds
js
adc
add
pop
int3
adc
std
ja
push
push
cmp
cltd
dec
cmp
jle
daa
pop
cltd
cmp
and
scas
nop
inc
fbld
in
inc
xchg
lods
fwait
es
sub
adc
xor
into
xchg
out
dec
addb
and
xchg
test
clc
lds
mov
push
sbb
sahf
push
ret
lcall
fdivrl
std
sbb
or
fldt
sarb
sbb
insb
hlt
enter
mov
test
xchg
and
adc
clc
std
mov
lods
pop
imul
xor
jnp
and
jecxz
fmul
add
xchg
mov
faddl
outsb
xchg
pushf
icebp
enter
in
mov
add
in
push
hlt
mov
jb
xchg
or
cmpb
push
dec
sbb
mov
push
adc
adc
dec
push
xchg
imul
bound
pop
stc
scas
pop
testb
mov
add
xchg
aad
das
xor
cwtl
adc
push
imull
dec
mov
sti
push
pop
stos
in
push
cmp
repnz
fsubrs
cmp
nop
insl
gs
sub
sub
popf
add
sbb
push
add
ljmp
push
out
mov
sbb
mov
mov
cld
inc
and
pop
cmpsl
mov
push
and
gs
nop
jl
test
icebp
cld
pusha
jne
adc
out
lods
lahf
adc
ret
shlb
movsl
mov
mov
mov
jno
and
repz
xchg
dec
sub
xchg
push
adc
mov
je
pushf
ret
cmpsl
xor
push
mov
mov
mov
inc
push
jb
sarb
mov
fsubl
dec
out
stc
push
aam
inc
dec
cmp
ret
add
dec
test
into
jb
stos
pop
test
nop
mov
inc
and
mov
ret
xchg
jo
xchg
jl
aas
int
sub
push
mov
cli
add
or
mov
aaa
adc
out
mov
dec
ffreep
loopne
push
mov
loope
pmulhuw
daa
push
faddp
loop
push
adc
adc
sub
push
stc
fdivrs
lret
xlat
dec
cwtl
inc
ja
xlat
sub
in
mov
add
rcl
fs
cmp
sub
xor
mov
je
jge
jne
in
loopne
ret
movb
xchg
and
scas
cmp
pop
and
sub
cli
mov
test
gs
pop
test
cld
stos
dec
fs
lds
enter
sbb
fdivrs
into
je
add
arpl
push
inc
mov
fwait
andb
sbb
sub
mov
iret
and
ja
and
fsubl
xor
jne
pop
sbbb
leave
lahf
aaa
and
inc
cmp
cs
dec
mov
add
cmp
xchg
cmp
inc
or
mull
mov
ja
dec
aam
call
xor
sahf
pop
sbb
mov
fstl
or
scas
movsl
sbb
adc
test
data16
mov
mov
jmp
ret
leave
out
test
mov
sti
adc
repnz
leave
mov
jb
fdivl
jo
hlt
push
jge,pn
sub
xchg
enter
jmp
inc
push
or
cmp
xlat
xor
push
inc
scas
or
xchg
sbb
jp
pop
stos
xchg
in
adc
js
push
inc
mov
pop
clc
cs
andl
add
add
dec
jl
or
mov
daa
dec
cmpsb
lret
jecxz
into
ds
mov
sahf
push
mov
fucom
fiadds
dec
loope
or
ds
cmp
xor
xlat
xchg
ret
or
rclb
jl
pusha
in
lods
add
ficoms
inc
xor
pop
adc
pop
insb
xor
jmp
icebp
xchg
test
imul
mov
jns
mov
mov
mov
movsl
mov
xorb
mov
push
lods
loop
push
dec
icebp
hlt
mov
dec
mov
shll
cmp
loopne
mov
fstl
mov
cmp
and
stos
hlt
cmp
add
cs
cs
mov
imul
stos
cmpb
and
fisubs
xchg
cmp
stos
in
in
outsb
pop
out
rcrb
bound
aaa
fdivrs
incl
jge
lahf
or
icebp
cltd
adc
push
mov
scas
add
pop
rclb
mov
je
loop
test
nop
dec
aad
inc
sub
sbb
inc
mov
rcrb
push
adc
mov
sub
data16
insl
repnz
mov
insb
sarb
pop
ret
sbb
loope
jno
inc
loope
jl
mov
mov
jbe
push
sbbl
lcall
gs
inc
xchg
lret
ret
dec
xchg
movsl
mov
sub
push
mov
adc
push
cltd
in
sahf
lret
mov
repz
push
ja
add
stos
jmp
data16
faddl
jg
xorl
aam
mov
jnp
dec
sub
cmpb
int3
sbb
mov
leave
mov
mov
or
jp
mov
mov
mov
repz
inc
mov
out
ja
cmp
mov
sbb
push
sbb
fs
xchg
test
dec
cmpb
stc
insl
fsubs
adc
xchg
fwait
es
insl
xchg
adc
and
mov
inc
jns
loope
push
add
outsl
shl
jg
clc
pop
fwait
jp
jge
xlat
out
lock
icebp
adc
mov
pop
or
xchg
lret
mov
mov
addr16
pop
test
inc
shlb
clc
inc
dec
jg
in
imul
push
loop
setns
cmp
xchg
aas
cmp
mov
mov
jl
adc
aaa
out
push
xor
mov
add
jo
jecxz
rcrl
mov
scas
outsl
cmc
arpl
je
xchg
inc
inc
test
mov
rcr
ret
imul
fdivrl
fdivrl
in
loope
inc
pop
or
sub
add
adc
pushf
clc
test
scas
lds
mov
repz
incb
adc
mov
mov
fwait
insl
jns
xchg
cmp
and
jg
dec
lods
sub
cmp
les
mov
jns
push
dec
loope
mov
adc
mov
mull
lahf
ja
add
in
mov
pusha
shll
stc
xchg
cmp
sub
inc
js
outsb
fnstenv
and
lret
rcrl
sbb
inc
sbbb
xchg
pop
sbb
aam
subb
icebp
xor
mov
shlb
xor
jge
or
rorb
pop
mov
gs
dec
push
aad
das
inc
lcall
xor
movsl
cli
cmc
popf
daa
fisubrl
jp
testb
pop
dec
outsl
stos
repz
hlt
adc
and
es
popa
ret
icebp
mulb
sub
imul
push
dec
mov
mov
leave
test
adc
push
xchg
shrb
jns
jb
fldenv
outsl
adc
rorl
mov
inc
sbb
lret
mov
mov
pop
adc
in
mov
out
std
xchg
popa
push
int
dec
push
rorl
add
or
pusha
scas
mov
mov
xchg
xor
loopne
outsl
push
adc
and
repnz
sahf
out
stos
sbb
sarl
ss
push
bound
xor
mov
and
xchg
mov
push
xchg
mov
cmp
mov
push
out
or
cmpb
and
inc
ffree
mov
push
xchg
dec
add
cmp
mov
into
mov
cwtl
aam
push
cmp
fildll
addr16
scas
repnz
sbb
xchg
lcall
add
insl
mov
add
jge
sub
push
xor
movsb
lret
jl
xlat
cmp
inc
cmp
ret
pop
cs
adc
inc
aad
nop
lret
xor
and
xchg
jg
jno
pop
mov
insl
add
cwtl
ficoml
add
adc
stc
lds
cwtl
scas
pop
sub
push
cwtl
shlb
sbbl
dec
inc
mov
push
push
ljmp
adc
scas
mov
int3
cmp
mov
xchg
das
ret
mov
push
cmp
icebp
test
sub
mov
das
ret
pushf
push
mov
adc
xlat
mov
pusha
sahf
jg
iret
lods
clc
ljmp
hlt
cwtl
inc
jb
hlt
sub
add
push
in
loopne
xchg
xchg
in
inc
bound
enter
int3
in
fwait
lds
cli
shrb
jae
jae
cmp
sahf
mov
push
or
int3
inc
mov
pop
push
inc
nop
xchg
popa
lret
int3
cltd
subb
add
loopne
ret
mov
mov
push
jle
dec
mov
mov
mov
xor
insb
movsb
js
sbb
push
jo
adc
or
repnz
leave
inc
icebp
test
or
addr16
filds
push
subb
ja
push
mov
mov
idiv
and
lcall
dec
pop
pop
inc
cwtl
cmp
rol
lahf
fcomps
xor
dec
mov
sbb
inc
pop
or
sub
push
cmp
subb
shr
inc
pop
jnp
inc
inc
add
test
push
shlb
sbb
inc
dec
xor
jmp
cmpsl
dec
in
or
pop
lods
fcompl
sbb
cmp
rorb
mov
fcmovnb
hlt
jmp
xor
sub
pop
jno
ss
jle
scas
mov
mov
out
sub
outsl
sub
pop
or
clc
jp
mov
sbb
inc
pop
jno
arpl
lahf
add
je
je
jp
dec
or
adc
ljmp
sahf
mov
aam
out
pop
xlat
icebp
push
jne
out
push
adc
jmp
sbb
sub
fadds
ficompl
adcl
mov
enter
mov
xor
lcall
sbb
mov
fisubs
sbbb
add
jno
int
ret
xor
imul
in
sub
fldt
arpl
cmc
fdivl
std
sub
dec
cld
outsl
pushl
out
repz
lods
in
sub
xor
cmp
leave
pop
rcl
cwtl
fistpll
adc
push
scas
rcrb
mov
jp
pop
fildl
imul
adc
clc
inc
jge
scas
dec
ret
xchg
mov
out
inc
or
lea
sbb
jno
stc
std
outsb
pop
adc
pcmpeqb
popa
orb
mov
data16
push
xchg
loopne
repz
les
xor
jb
cmp
mov
aaa
sbb
pop
aam
popa
cmp
aas
std
sub
push
push
stos
lcall
dec
push
sbb
mov
adc
add
dec
push
jge
add
icebp
jne
ljmp
push
jae
fdivp
sahf
push
lock
xchg
add
xchg
add
out
imul
negl
pop
inc
imul
xor
ds
scas
push
leave
jne
sbb
xchg
jb
rcrb
hlt
push
frstor
mov
scas
sub
out
addr16
aaa
stos
out
scas
adc
xor
stos
divb
push
dec
test
and
stos
dec
jmp
fcmovnbe
dec
inc
pop
inc
xchg
push
sub
les
dec
sub
and
pop
mov
or
loope
xor
lea
fwait
mov
in
pop
xchg
pop
or
lea
test
mov
shlb
fwait
xchg
inc
jg
sub
pop
in
lds
ljmp
lods
xlat
arpl
push
mov
inc
push
or
push
imull
and
mull
adc
cmp
test
add
aad
xor
push
or
or
mov
xor
pop
mov
cmpsl
sub
xor
lahf
ret
cmp
jl
jbe
ss
out
sbb
clc
hlt
add
jbe
xchg
jle
out
out
cmpsl
xor
add
orl
cmp
adc
sub
cltd
xor
push
in
loope
mov
adc
xor
repnz
ret
sub
movsl
mov
pop
inc
cmp
daa
cmp
mov
push
decb
pop
idivb
dec
mov
sbb
push
xlat
out
mov
dec
mov
mov
cmp
bound
fisubs
push
leave
dec
add
push
shrl
sub
shrl
mov
into
mov
xchg
mov
outsl
and
call
sub
xor
or
fs
stos
lcall
repnz
xor
dec
jp
stos
push
xchg
repz
nop
cld
dec
pop
mov
insl
ret
jns
or
movsb
or
jmp
loope
mov
aaa
fsubs
enter
ret
inc
push
adcb
jae
push
dec
fnsave
pusha
sbb
xchg
or
dec
sbb
sbb
push
cmovae
and
sahf
out
add
mov
cwtl
sub
fwait
xchg
and
push
sub
sbbb
xchg
lret
pop
push
and
mov
leave
and
ret
push
dec
in
push
mov
inc
in
pop
mov
cmp
xchg
aas
sub
js
repnz
insb
in
adcb
mov
insl
pusha
xor
cmp
cld
push
add
imul
stc
imul
lds
xor
dec
loop
out
push
pop
loop
mov
inc
dec
stos
sub
mov
push
xchg
and
loop
orl
and
push
mov
adc
aaa
mov
lcall
sub
sbb
mov
adc
mov
stc
ss
dec
mov
call
rclb
mov
sub
cmpsb
int
sub
es
dec
insb
pop
mov
or
loop
scas
sub
push
mov
and
cmp
cwtl
add
inc
pop
add
push
xchg
pop
inc
mov
sahf
loop
dec
inc
cmc
loopne
int3
clc
inc
dec
push
mov
push
fisttpl
mov
dec
addb
fcomps
int
push
adc
cli
add
push
sub
pop
enter
cwtl
or
dec
in
out
sbb
push
out
gs
int
adc
jle
push
or
mov
bound
fidivs
cmp
inc
push
lock
pop
mov
popa
push
pop
jae
roll
sti
addl
filds
jmp
add
sub
fsub
js
dec
cmp
cmp
test
xchg
cld
jb
daa
imul
xor
daa
scas
jne
dec
ret
inc
cmpsb
xchg
lods
loope
push
push
sahf
sub
outsl
pop
xchg
lsl
add
xchg
stc
mov
push
pusha
rcll
shll
jne
sbb
or
in
push
or
jge
mov
cmp
aad
scas
jg
jle
loope
stos
rorl
and
cmp
mov
icebp
arpl
lret
jne
xor
popa
fimuls
cmp
pop
xor
push
jno
repz
jne
xor
dec
xchg
pusha
fdivrl
sub
cmp
mov
mov
adc
movsl
cmc
jae
sahf
xlat
rclb
lcall
or
mull
fwait
xchg
jl
pop
nop
sbb
sbb
ffree
ljmp
daa
icebp
pop
jb
sbb
dec
sbb
sbb
das
mov
imul
dec
shrl
aas
dec
mov
js
popf
xchg
data16
in
cli
jnp
dec
fisttpl
js
test
xor
lods
xchg
lahf
ror
push
test
icebp
sbbl
fnstcw
mov
fs
aam
insb
mov
cwtl
repnz
and
rcrl
pop
push
mov
pop
fs
out
in
xor
popa
push
rcll
cmp
imul
mov
pop
dec
dec
stc
pop
or
jb
lret
cmp
popf
dec
lods
out
xor
dec
mov
cmp
cltd
test
dec
mov
cmp
jp
lods
insl
sub
aas
cmp
fsts
mov
mov
popf
dec
push
mov
pop
mov
xor
pop
sbb
mov
jo
push
lcall
cmp
nop
sbb
movsl
add
jp
jmp
sti
sub
aam
je
push
stc
sub
fidivrl
mov
push
cmp
sub
je
push
jmp
inc
fistl
cmpl
jecxz
mov
pop
out
pusha
rcrl
xchg
jmp
fstpl
jo
aas
jnp
mov
mov
mov
inc
rolb
push
dec
and
imul
pop
sbb
mov
mov
or
pushf
sub
fnstenv
jb
loope
dec
adc
xor
and
mov
adc
sub
add
or
vpmacsww
jno
addr16
mov
pop
addr16
pop
inc
sub
mov
push
adc
mov
cli
mov
je
inc
sbb
mov
cli
data16
js
fwait
and
pop
movsb
iret
arpl
jae
inc
cltd
out
je
pop
imul
inc
int3
lret
jae
mov
aaa
jl
mov
sub
fwait
pop
jg
stos
xor
scas
xlat
lods
aad
adcb
imul
jno
pop
xchg
movsb
enter
idivl
adc
subb
sti
pop
xchg
pop
xchg
aam
fidivl
movsl
das
push
call
imul
in
push
pop
testl
and
dec
add
xchg
movsl
sub
or
popa
ret
mov
mov
or
jmp
pusha
xchg
xor
loop
dec
aad
rcll
out
cmp
push
inc
imul
push
jb
ss
stc
aad
mov
or
into
lea
sbb
and
xor
mov
jmp
mov
dec
testl
mov
lret
inc
push
lret
out
das
or
cmp
jecxz
and
mov
nop
jl
mov
scas
mov
inc
popf
leave
into
lods
pop
nop
jle
pop
pushf
in
dec
jp
cmp
or
inc
mov
sub
and
push
adc
cltd
pop
sarl
fnstcw
or
movsl
jecxz
test
ds
jmp
sub
mov
jo
enter
push
sbb
lahf
pop
loope
std
jge
arpl
jno
sarb
xor
ficoms
imul
mov
xchg
call
cmp
fidivl
loopne
xor
push
enter
popa
xchg
iret
mov
and
pop
lods
lret
inc
push
xchg
inc
mov
lock
fwait
stos
inc
and
dec
adc
pop
rcrb
leave
lods
add
mov
data16
ljmp
clc
fistps
cmc
loop
hlt
daa
pop
stc
xchg
or
dec
mov
adc
mov
add
add
jmp
insl
jge
aas
icebp
add
mov
add
add
cs
sbb
xchg
std
jp
jp
mov
lock
div
lcall
scas
cmp
data16
mov
gs
fnsave
fs
mov
add
lods
ffreep
movsb
inc
mov
cmpsb
xchg
out
jbe
add
daa
popa
pop
cmp
mov
fdiv
mov
and
aaa
iret
sub
int3
test
adc
dec
movsb
pcmpgtd
aam
mov
jae
xor
jo
mov
and
add
in
mov
sbb
and
call
divps
rcrb
xor
inc
add
hlt
cmp
in
mov
cld
cltd
hlt
lds
out
call
cmp
out
loop
push
enter
push
cmpb
mov
pop
adc
inc
std
mov
mov
test
push
dec
lock
les
repz
decb
movsb
pop
and
leave
push
outsb
popa
out
dec
mov
inc
rorl
cmpl
add
xchg
dec
sbb
into
sub
pop
cmpsb
jne
jae
and
mov
xchg
inc
popf
xor
dec
xor
stos
sbb
cmpsb
and
into
ret
out
lods
imul
nop
rcrl
inc
or
adc
mov
mov
inc
pop
adc
fldenv
scas
push
fwait
jb
fsub
sub
data16
nop
stos
push
fisttps
repnz
adc
scas
repnz
dec
cltd
loopne
jle
int3
aas
push
enter
jo
stos
iret
xcrypt-cfb
cmpsl
mov
ljmp
sbb
leave
cli
stos
jg
push
sbb
dec
popf
add
xchg
push
mov
mov
hlt
into
fcompl
insl
cmpsl
jl
addr16
aaa
call
mov
scas
adc
or
addr16
mov
sbb
lods
mov
add
jp
adc
or
scas
pop
data16
inc
scas
inc
fistpl
cmpsb
faddl
cmpsb
jns
xchg
sub
in
cmp
loopne
cmp
bound
add
shrl
aaa
xlat
xor
push
movsl
test
pushf
out
mov
jmp
in
into
adc
push
shrb
std
dec
xchg
cmpsb
push
adc
sub
imull
ss
stos
mov
bnd
shl
add
test
rorl
jnp
pop
cli
stos
push
jnp
mov
mov
mov
push
jle
sbb
pop
or
wrmsr
sbb
arpl
inc
inc
setp
or
mov
dec
into
out
fcoml
popf
daa
popl
mov
std
pop
addr16
mov
cmpsb
xor
add
test
lret
leave
pop
lahf
jmp
aam
mov
lahf
or
inc
les
mov
movsl
out
mov
and
pop
lahf
stos
fidivs
cmp
xor
movsb
rorb
fwait
sbb
rclb
roll
and
pusha
adc
dec
cmpb
push
inc
aad
mov
insl
daa
and
call
mov
inc
mov
xchg
push
and
dec
dec
dec
mov
loop
enter
pusha
add
or
cmp
mov
sbb
jecxz
sbb
push
push
pop
push
cwtl
hlt
test
aas
sbb
xor
lret
scas
outsb
cs
aaa
rcr
lods
popa
ds
or
lods
push
ja
fs
inc
test
popa
imul
mov
lahf
adc
mov
push
cmp
sbb
inc
and
xorb
and
sti
inc
std
pop
cmp
movsl
add
push
rcll
jmp
into
fdivr
inc
jmp
jge
inc
push
mov
jg
aam
mov
test
outsb
mov
jmp
xchg
mov
leave
dec
jnp
lea
outsb
xchg
xlat
jo
lret
cmp
int
negl
pop
push
dec
shrl
cmp
and
scas
outsb
sbb
or
test
dec
cmp
ds
dec
lretw
sub
loop
fnsave
sub
imul
stos
arpl
fsubl
sub
pop
imul
cmp
xor
xor
testl
xchg
add
push
jae
mov
and
out
sbb
call
cmpl
xchg
mov
ret
shrl
sahf
imulb
dec
mov
mov
lea
fmuls
jbe
dec
aas
ss
jne
iret
push
hlt
lods
lret
push
pop
lret
mov
adcb
and
xchg
popf
sub
cmovs
sub
or
cmp
or
call
stos
cltd
icebp
sub
das
js
aaa
sahf
aam
repz
push
mov
out
add
xchg
sbb
insl
outsb
cmpsb
jmp
in
dec
and
sbb
enter
pop
sarl
scas
fst
loope
pop
andb
pop
lcall
pop
inc
ret
xor
je
ds
mov
xor
fdivl
mov
and
pushf
dec
adc
jg
popa
and
mov
sbb
mov
addr16
and
test
cld
mov
cmpsl
mov
inc
mov
mov
fcomps
cmp
adc
xchg
adc
push
cwtl
test
push
inc
sub
adc
fmul
sbb
in
sbb
mov
mov
pop
aam
test
bound
jb
add
add
and
inc
popf
mov
sbb
scas
cmp
mov
cmpsb
stos
sbb
fldcw
xchg
shlb
sarb
fadds
mov
cmpsl
sub
outsb
mov
inc
push
dec
clc
mov
mov
push
nop
icebp
ljmp
or
inc
pop
out
bound
jge
or
call
jo
push
jb
inc
jo
xor
andb
adc
paddsw
out
test
push
pop
lret
add
inc
loopne
std
push
and
in
cld
sete
cmp
jae
int3
mov
mov
lock
sub
dec
addr16
in
nop
push
test
push
cld
or
sti
adc
ret
mov
scas
outsb
test
ret
jge
pop
jne
dec
fs
or
pop
aas
fisubrl
insl
push
popf
scas
or
inc
jge
mov
jne
mov
add
imulb
inc
inc
clc
mov
inc
mov
js
stos
mov
dec
sbb
lcall
cli
loopne
test
dec
jp
cmpsl
adc
xor
cltd
es
fisubl
lods
shlb
js
adc
xor
int
stos
push
insb
inc
outsl
sub
outsl
add
movsl
and
enter
das
inc
jae
push
push
inc
mov
int
cmp
cli
and
or
push
xor
clc
aaa
inc
dec
loop
adc
jecxz
ffree
cmp
mov
sti
iret
mov
pop
inc
fisttpl
aaa
out
aad
inc
loopne
push
mov
out
call
push
pop
addb
cmc
pop
in
lahf
lods
lahf
sbb
fwait
mov
and
sarb
movsb
cmpl
ss
jl
subl
jge
enter
loope
leave
daa
inc
xchg
popf
fisttpl
orl
jns
xor
in
imul
stos
mov
js
xlat
pop
ss
je
fstl
lock
push
xchg
cli
clc
push
or
pushf
pop
pushf
and
jns
pop
movsb
or
xchg
push
aad
stos
insl
pusha
add
sub
inc
xchg
push
cmp
fldcw
es
js
lret
adc
jo
sub
cltd
xor
out
mov
insl
test
outsb
insb
mov
sub
dec
inc
add
add
cs
lcall
in
loope
jg
pop
pushf
movsl
les
outsb
adc
adc
and
lretw
lods
in
and
mov
or
jbe
pop
jne
lock
paddusw
insl
sbb
enter
loope
mov
or
inc
popf
test
push
rcr
je
mov
sub
mov
xor
adc
adc
faddl
insb
dec
mov
push
mov
xchg
mov
popa
ljmp
loop
out
pusha
mov
push
adc
and
sbb
mov
or
cmp
pushl
repz
sub
pushf
fisubrl
or
mov
popa
pop
or
jb
jae
sahf
icebp
popf
daa
or
inc
test
xchg
shll
add
add
or
jmp
js
add
push
push
jae
push
lods
and
jne
scas
test
add
cld
cmp
ja
js
icebp
pop
dec
push
fists
xchg
subps
inc
adc
adc
or
dec
test
inc
xchg
gs
loopne
push
sub
push
aad
inc
xor
jge
cld
fs
ljmp
mov
push
imul
mov
dec
lock
mov
push
clc
add
repz
icebp
pop
movl
pushf
pop
sub
loope
mov
clc
ret
add
mov
lock
aas
stos
xchg
das
xchg
arpl
pop
mov
push
imul
pop
dec
mov
mov
sub
xchg
lods
mov
xor
push
and
dec
or
push
push
adc
cld
cs
add
sbb
adc
cmp
jb
push
push
loop
jl
cld
mov
push
xlat
xor
pop
jae
pop
ret
cmc
or
sbb
stos
add
scas
mov
orb
aam
or
adc
jl
fists
pop
or
jne
pop
cmp
mov
xchg
ljmp
insb
lds
adc
lods
xchg
pushf
mov
negb
nop
shr
xchg
int
jecxz
incl
mov
test
pop
xor
lret
sbbb
cwtl
or
out
or
fidivl
inc
sahf
jl
leave
out
add
scas
cmpsl
fistl
bound
pop
fmull
cmpsb
sbb
mov
stos
outsb
dec
cli
subb
xor
scas
aad
sub
pop
push
or
xchg
lret
iret
jge
xor
sti
in
fistpll
lds
mov
mov
mov
jbe
lahf
mov
fwait
push
test
lcall
bound
xor
push
test
lods
cld
push
sbb
mov
fs
pop
leave
dec
sbb
mov
test
movsb
imul
inc
mov
call
inc
push
rcl
lock
and
repnz
sub
enter
inc
or
mov
dec
loopne
fmul
mov
adc
dec
nop
movsb
jnp,pn
pop
into
sbb
xlat
or
inc
lahf
rorb
pusha
inc
mov
xchg
iret
and
std
mov
jge
ljmp
clc
mov
sbb
jmp
sbb
cmp
scas
out
inc
rcrl
xchg
je
in
movsl
xor
shlb
aad
jbe
xchg
lret
push
jne
lods
fidivl
cmp
xor
in
xor
mov
stos
lret
repz
es
hlt
and
mov
jmp
stc
or
in
and
pop
or
jbe
mov
stos
imul
ja
mov
inc
jns
xor
xchg
xor
lahf
clc
lds
iret
adc
movsl
adc
ja
cmp
mov
btc
push
inc
dec
call
push
dec
jns
pop
push
sbb
lret
sbb
shlb
jl
shrd
std
push
fimull
pop
push
filds
mov
mov
ficompl
sahf
inc
mov
adc
lret
sbb
xlat
mov
push
xchg
dec
insb
insb
mov
xlat
dec
insl
fdivrp
in
or
imul
inc
xlat
ret
pop
stos
ja
lahf
mov
decl
and
lods
nop
jnp
gs
rclb
fidivs
test
repz
pushf
inc
test
dec
in
adc
imul
cli
mov
in
imul
call
pusha
orl
shl
adc
and
adc
xor
xchg
mov
je
jns
in
retw
loop
sub
fisubrl
fsubr
leave
test
pusha
sbb
repnz
in
sub
pop
movsl
mov
clc
cwtl
dec
notb
fstpt
fldl
pusha
call
dec
movsl
jmp
or
addr16
sbb
and
sbb
movsl
mov
jle
test
cmp
sbb
adc
cmp
inc
mov
add
push
push
ret
shlb
xor
ret
jbe
jns
mov
pop
sub
shrl
popa
jg
jbe
aad
ret
jg
imul
dec
sub
pop
dec
daa
xchg
push
imul
call
xchg
cld
ret
xchg
lcall
out
and
or
jp
sub
std
ja
sbb
push
cmp
shlb
outsb
leave
out
dec
in
clc
lret
scas
addr16
push
inc
sbb
or
and
test
dec
sbb
and
mov
jns
cmp
push
icebp
test
mov
cmp
fldenv
mov
stos
push
cwtl
xchg
scas
subl
jae
rcrb
mov
cmp
dec
cmp
es
mov
pop
mov
dec
mov
das
negb
sub
mov
and
sbb
sahf
pop
fcomip
xchg
pop
pop
inc
inc
sub
mov
cs
ret
pop
pushf
addb
cltd
sub
inc
das
xchg
aam
fwait
sbb
lahf
lcall
sub
cmp
or
xchg
ss
jbe
adc
std
lods
rorl
aam
push
sub
mov
xlat
fs
shll
jnp
out
pop
xor
jbe
dec
and
mov
or
cltd
lcall
add
or
rcrl
mov
cmc
inc
imul
enter
fisubl
mov
add
cmp
xchg
adc
xlat
lds
xor
mov
std
dec
je
cmp
cmp
inc
and
fcmovnu
jle
or
sbb
or
je
repnz
pop
mov
imul
mov
and
mov
test
add
inc
popf
ja
lea
mov
push
push
ret
jno
mov
mov
or
dec
cld
in
test
xor
cltd
ficompl
out
push
roll
rclb
dec
xlat
jl
loope
in
in
stc
cmpsl
mov
hlt
lds
aaa
lcall
out
push
dec
scas
das
repz
xchg
dec
dec
mov
fidivs
stc
fsub
test
adc
and
out
jnp
and
fstps
fstl
or
jmp
add
and
mov
mov
xchg
xchg
jo
xchg
cmpsl
jle
cmp
out
pusha
sub
push
jge
and
ss
mov
out
in
add
or
insb
sbb
pop
fwait
push
mov
enter
jl
movsb
hlt
ror
addb
lods
pop
add
mov
test
jnp,pn
xchg
inc
lods
pop
dec
mov
lahf
or
sub
jbe
rorb
stos
sar
mov
cmpsb
out
call
lds
xchg
js
mov
imul
cmp
jno
int
rolb
in
in
lahf
cmp
jp
cmpsb
ret
and
pop
addb
sub
test
clc
sub
pop
ja
sbb
addr16
dec
stc
subb
fimull
jmp
mov
loopne
mov
xchg
sub
push
lret
add
adc
lahf
sub
push
xor
lods
dec
dec
pop
inc
mov
adc
xor
push
mov
leave
jo
fcomps
jb
ret
and
push
icebp
or
dec
jae
movsb
sbb
movsl
mov
repz
add
and
je
mov
add
out
testb
pop
or
xor
adc
fs
repnz
movsl
jns
xchg
outsl
movsl
pop
das
mov
rcrl
mov
cmpsl
test
or
pushf
inc
mov
and
adc
jmp
rcll
aas
sub
push
xor
sbb
enter
xadd
aad
andb
jl
iret
js
cs
idivl
lods
add
insb
es
sahf
bound
sub
push
popf
xchg
out
int
dec
or
mov
mov
popf
outsl
dec
inc
addr16
cmp
or
adc
clc
les
cld
loopne
shl
adc
sub
add
xchg
inc
adc
inc
xlat
add
dec
mov
lea
ljmp
xlat
jb
filds
pop
xchg
cs
cmpsl
dec
cmp
and
iret
xor
into
pop
icebp
leave
cmp
shlb
xor
add
enter
sub
mov
jle
mov
jge
fs
pop
pop
adc
xchg
imul
fwait
icebp
mov
enter
pop
jle
sbb
lcall
leave
in
jno
in
dec
shll
sbb
xchg
sub
and
ljmp
dec
mov
mov
aam
inc
aaa
sbb
icebp
repnz
je
fidivrs
andw
icebp
mov
mov
lods
sbb
imul
test
push
and
daa
sub
call
push
out
jnp
and
dec
bound
jmp
xor
fnstsw
dec
xchg
xchg
pop
nop
rol
mov
enter
jae
dec
xchg
xchg
shl
ret
mov
push
mov
loopne
out
pop
shlb
push
xchg
jno
gs
lea
cmp
xor
dec
imul
fimuls
xchg
mov
sub
and
mov
and
and
int3
inc
jns
stc
xchg
xor
movl
fisttpll
jbe
ret
sub
fisubrl
lea
in
sbb
idivl
push
in
mov
cmp
jne
inc
aas
push
sbb
daa
sub
dec
sti
scas
mov
mov
daa
mov
pop
fnstenv
pop
aad
mov
mov
jmp
ret
mov
mov
xlat
xor
add
jae
setae
ret
push
add
adc
sti
adc
xor
sub
jp
mov
pusha
iret
rorb
add
and
push
cmp
inc
sti
outsb
mov
hlt
or
movsl
fwait
loope
addr16
popa
jns
mov
mov
sub
xor
push
sbb
xchg
in
test
imul
push
jmp
pop
cmpsb
push
and
inc
xchg
std
cmp
adc
stc
xchg
in
push
mov
icebp
pop
adc
js
rcrl
sub
jae
mov
test
add
sti
cld
into
pop
mov
and
mov
jns
out
ret
xchg
xchg
orl
xor
pop
cmc
sahf
xor
sahf
fcoms
sbb
dec
ja
ljmp
xchg
lret
int3
mov
repnz
inc
clc
inc
xor
arpl
mov
add
jnp
inc
inc
fistpl
out
leave
dec
divb
mov
sub
sub
lods
sti
pop
lds
loope
adc
inc
add
jg
ds
pusha
movsb
aas
push
test
push
push
pop
ds
out
mov
sub
fisubrl
dec
adc
push
cli
mov
lods
mov
pop
js
inc
or
xor
loope
jbe
inc
fsubs
aaa
minps
pop
jge
mov
stc
in
je
add
xchg
in
je
ficompl
jp
mov
sub
fsubs
iret
pop
je
or
jnp
mov
adc
loope
lock
and
rorl
mov
test
in
mov
lds
in
lods
cld
cmp
sarb
cmpsl
iret
shr
aad
mov
insl
imul
fs
mov
xchg
inc
jl
shl
andl
es
xor
mov
scas
jb
nop
pop
jmp
loopne
pop
and
cld
test
dec
popa
xchg
in
mov
rcl
sub
sbb
test
mov
call
enter
jae
cmp
cltd
popa
inc
and
pusha
inc
xchg
mov
xchg
fcompl
add
js
sub
add
pop
pop
adc
adc
jg
xor
insl
xlat
jnp
add
jb
push
gs
iret
xchg
mov
faddl
cmp
mov
scas
cmp
lea
in
sahf
int3
pop
mov
push
outsb
bound
sbb
pushf
pop
les
insb
mov
loop
incb
aaa
jne
xor
or
stos
inc
xor
mov
lret
mov
jbe
cmp
jbe
mov
xchg
push
lea
fstp
mov
lahf
ljmp
push
push
lcall
aas
add
jnp
int
and
ss
xchg
push
mov
sub
xlat
icebp
adc
jo
inc
insb
xor
test
sbb
in
or
push
and
test
stos
jmp
xor
jmp
shll
aas
pop
ficompl
ror
ja
adc
add
mov
pop
aam
adc
std
push
test
frstor
pop
jmp
inc
roll
sub
jne
bswap
push
and
insl
xor
push
sbb
mov
cmc
inc
imul
push
jecxz
ja
das
loope
cwtl
adc
iret
popf
movsl
mov
xchg
test
mov
mov
iret
shlb
xor
dec
stos
mov
pop
pop
cltd
mov
xor
jno
pop
daa
xor
mov
stc
in
push
or
jp
sbb
mov
testb
aaa
mov
les
insb
in
mov
in
pop
jp
sub
aad
mov
in
imul
mov
stc
cld
int
aam
adc
addr16
push
mov
mov
adc
ljmp
or
jecxz
mov
jno
sbb
das
fnstsw
addr16
and
cmp
out
push
clc
mov
mov
scas
jnp
xchg
test
aaa
lods
xchg
int3
mov
pushf
jp
jae
xchg
lcall
push
xchg
push
or
mov
mov
stos
je
icebp
add
nop
in
or
mov
add
scas
ret
mov
pop
bound
pop
stos
sub
mov
fdivl
in
xor
jae,pn
nop
inc
add
jbe
jb
rclb
dec
loopne
imul
inc
jle
add
and
mov
cmp
hlt
mov
push
pop
insl
daa
push
mov
mov
and
fs
or
xor
test
adc
and
sbb
mov
in
test
jg
xchg
inc
rorl
das
aaa
fldl
pop
xor
ss
jge
loopne
int
sub
movsb
pop
mov
push
fnsave
or
fs
addr16
imul
imul
inc
inc
mov
cmc
mov
pop
jle
push
jns
sahf
arpl
mov
pop
fs
jns
test
pop
push
and
aad
dec
sahf
mov
dec
and
cmp
ror
test
aad
movsl
bound
loopne
repnz
in
xchg
popa
mov
jns
lret
xor
mov
and
push
mov
jae
mov
repz
xchg
inc
push
dec
cmpb
xchg
cmp
or
stos
scas
inc
add
dec
cmc
or
leave
add
jbe
jp
repnz
xchg
sbb
sbbb
mov
adc
dec
in
insb
inc
inc
dec
pushf
add
xor
adc
xlat
push
cmp
nop
adc
lds
add
jmp
cmc
div
test
es
mov
scas
repnz
lcall
cmp
fsubl
mov
adc
das
lahf
ficoml
inc
cmp
lret
mov
sbb
lahf
jle
mov
adc
xchg
roll
xchg
divl
pop
push
mov
cs
roll
repz
push
mov
mov
xor
sbb
stos
pop
fidivl
xchg
mov
add
pop
rorl
fs
test
adc
les
push
jmp
lods
push
dec
mov
cmp
sbb
xor
sub
cmp
pop
nop
test
daa
mov
frstor
push
dec
xchg
cmp
cld
cmp
jecxz
mov
adc
push
push
add
hlt
inc
inc
push
jno
and
in
js
bound
loop
mov
filds
sub
pop
cmp
imul
fs
fsts
xor
push
jb
cmp
ficompl
mov
mov
iret
insl
sbb
xorb
mov
stc
aam
loop
stos
pop
jmp
dec
insb
int3
call
lods
mov
imul
xchg
sbb
cmc
adc
jmp
cwtl
scas
or
pusha
into
test
lock
into
xor
test
and
xor
xchg
iret
in
push
cmp
pop
or
rcl
add
xor
ds
inc
push
aam
imul
dec
xchg
movl
sbb
cmp
adc
push
sahf
cmp
add
cmc
cmp
aad
dec
test
pop
outsb
cli
das
gs
xor
adc
je
imul
cmp
jg
stos
cmpb
fsubrs
sbb
ret
mov
fildll
repz
cmp
je
call
int
cmp
cmc
xchg
sbb
xchg
arpl
shl
and
les
jge
shl
inc
sbb
pop
pusha
ret
stos
sbb
mov
push
inc
mov
mov
mov
and
repz
xor
cmp
jne
adc
cwtl
in
mov
insl
xor
scas
dec
scas
mov
mov
js
pusha
fucomp
into
sub
mov
and
mov
repnz
xlat
sarl
or
das
dec
orb
jae
mov
push
xchg
mov
adc
mov
sub
mov
mov
ficompl
push
gs
xor
inc
adc
addr16
in
mov
mov
lret
dec
test
adc
fsubs
out
cmp
xchg
outsl
enter
mov
lcall
pop
xchg
inc
aaa
mov
inc
add
jl
mov
xor
add
loop
outsb
ret
in
dec
and
mov
cmpsb
rcrl
incb
shrl
testl
or
js
lock
pop
mov
push
daa
arpl
add
dec
cmc
inc
shrb
jns
inc
mov
or
adc
pop
and
xchg
sbb
insl
push
lods
sbb
int
xlat
in
cmp
and
dec
sbb
popl
pop
push
ja
out
jp
lretw
push
jmp
dec
xchg
fistps
mov
sti
test
stos
ds
inc
movsl
cli
mov
mov
pushf
out
sbbb
lods
jle
inc
ret
insb
leave
adc
adc
or
stc
pop
xor
ds
popa
in
push
push
aad
adc
jle
or
jnp
cmpsb
and
or
cmp
cmc
ljmp
xor
inc
pop
fsts
lea
std
mov
xor
sbbl
xchg
pop
shll
mov
js
adc
in
loop
sub
push
jne
push
out
pusha
out
xorl
orl
mov
out
adc
call
test
inc
ds
adc
mov
filds
into
test
pmullw
lods
dec
stos
fdivrl
rcr
push
dec
mov
or
loop
pop
bound
fistpll
push
loopnew
xchg
jecxz
mov
fmull
subl
pusha
mov
add
inc
fs
test
fmulp
test
mov
mov
adc
int3
inc
mov
lods
outsl
inc
lret
pop
movsl
sbb
out
inc
adc
mov
test
fiaddl
mov
lock
clc
xor
scas
and
clc
jo
pop
push
repz
insb
xorl
cmp
xor
out
stc
daa
je
int
fdivrs
scas
cmp
jno
andl
mov
addr16
pop
cli
jl
jp
jne
fbstp
inc
push
int3
jns
int3
movsb
gs
repz
mov
nop
iret
pop
stos
test
jp
orb
lcall
ljmp
mov
ljmp
gs
in
aaa
mov
fs
loopne
inc
sub
imul
js
shr
icebp
inc
movl
sub
adc
jge
inc
in
xchg
fldt
dec
adc
xor
imul
add
xlat
mov
call
daa
sub
xchg
stc
push
sbb
cmpsb
fisttps
mov
je
gs
mov
mov
add
and
and
pop
iret
lods
jl
fs
arpl
jo
xchg
cltd
movsl
loope
xlat
lahf
dec
xchg
ret
mov
sub
cltd
sbbl
xlat
adc
movsl
ljmp
dec
jp
shrb
push
insl
fwait
cmp
cmp
rcl
aas
repz
rcrl
lret
push
imul
xchg
ret
push
std
push
jle
pop
mov
imul
sbb
mov
ds
pop
dec
xor
mov
inc
imul
pop
cmp
bound
subl
cmp
lds
xor
stos
fucompp
dec
cmp
jne
push
pop
sub
xlat
repz
aad
jnp
js
popf
loop
inc
fmull
movsb
push
pop
mov
in
data16
and
ret
sub
mov
in
cmpsb
ret
movsb
add
clc
fisubs
push
push
push
sbb
hlt
mov
lock
inc
mov
sti
repz
dec
in
cmp
add
and
and
lret
es
add
or
mov
xchg
mov
fwait
or
mov
aaa
push
add
ficompl
sbb
mov
add
xor
testl
mov
out
inc
mov
outsb
adc
test
movsl
cmpsb
ja
dec
mov
cmp
jl
int3
sub
bound
idiv
sub
movl
sub
jmp
das
scas
mov
je
xor
insb
cld
cmp
dec
pop
sbb
leave
js
pusha
sahf
int
dec
xor
lea
adc
pop
and
jno
sbb
mov
or
xor
fnstsw
cmp
push
dec
push
movb
cwtl
pop
stc
sbbl
pop
test
xlat
in
fucomi
cmp
xchg
adc
cmp
mov
xchg
push
pop
pop
nop
or
movsb
jno
xchg
repnz
test
cmpsb
cmp
pop
outsb
sbb
imull
pop
out
movb
mov
mov
push
mov
mov
cmp
xor
fcoms
push
sub
std
test
jge
inc
mov
mov
les
mov
addr16
outsb
int3
fcomps
pop
gs
clc
fidivs
inc
and
fwait
mov
mov
ficomps
jle
sti
in
cmp
test
test
lock
add
xor
mov
rorl
add
outsl
test
jns
repz
push
mov
jle
iret
and
jmp
cs
mov
adc
jle
rorl
ja
sbb
sub
jl
repnz
leave
jno
out
xor
or
xor
in
sub
pop
sub
sub
xor
sub
aad
iret
jb
sub
rcrb
shrb
and
add
inc
popa
jmp
xchg
jg
and
adc
in
loopne
push
enter
cltd
xorl
mov
aam
in
fistl
push
outsl
stc
shrl
mov
sbb
or
pusha
lret
cmpsl
mov
dec
sti
adc
cs
lcall
or
hlt
sbb
fmull
sbb
cld
into
fimuls
popa
cmp
adc
stc
mov
iret
cmpsb
icebp
repz
cmp
push
mov
sbb
repnz
lock
and
mov
out
jb
mov
mov
mov
mov
mov
cmp
jns
dec
call
sti
adc
add
mov
test
js
ret
or
push
jne
sbb
mov
fidivrs
sbb
push
aad
movsl
lret
insl
insb
and
lcall
cltd
shlb
mov
fisubl
shrl
gs
test
push
pushf
vmread
xchg
ja
lret
test
cwtl
stc
mov
jl
loope
sahf
aaa
cwtl
adc
jbe
ret
js
mov
iret
xor
data16
popf
or
sti
inc
or
clc
jbe
mov
sbb
push
ljmp
pop
adc
iret
fsubs
or
sbb
sub
pop
outsb
mov
xorb
mov
add
mov
mov
mov
ljmp
mov
in
add
and
into
loopne
mov
stos
jge
out
aad
xchg
xchg
pop
cmp
incb
add
shlb
ds
mov
icebp
idivl
fstps
jne
xchg
test
mov
cmp
push
jle
nop
aam
pop
insl
xchg
ror
sub
enter
mov
iret
fcompl
mov
sub
jno
mov
mov
mov
add
iret
fsubl
icebp
mov
lock
lcall
sbb
lahf
jg
pop
xor
xor
sahf
xchg
lods
mov
adc
or
mov
jb
ret
imul
add
or
jo
dec
xchg
pop
mov
in
leave
jae
inc
mov
sbb
dec
cmpsb
or
or
mov
adc
adc
add
data16
ret
mov
ljmp
mov
push
jno
xchg
stc
decb
push
int3
sub
jge
push
inc
mov
test
shl
and
jg
shr
jo
lods
mov
pop
es
or
xor
xchg
dec
hlt
cmp
jg
movsb
cmp
adc
mov
lcall
xchg
iret
and
ficomps
iret
xchg
mov
mov
lahf
pop
and
cld
imul
adc
push
outsb
pushw
lods
cmc
add
cmp
mov
pop
pop
xchg
pop
rolb
mov
mov
mov
roll
adc
leave
xor
aam
lret
insl
loop
sahf
imul
jecxz
sbbb
or
pop
nop/reserved
mov
sub
adc
dec
jmp
es
and
xor
jns
inc
pop
pop
mov
je
stos
inc
shr
loopne
jbe
sub
mov
mov
sub
insb
mov
dec
test
movsb
adc
and
jl,pn
lods
cld
lcall
inc
addr16
test
dec
add
popa
cwtl
ret
xchg
push
lock
mov
in
push
pop
xchg
jb
das
dec
ja
xchg
in
loope
and
jbe
pop
bnd
lret
jns
xor
js
aaa
int3
cwtl
icebp
pop
in
jno
adc
jnp
push
jnp
and
adc
mov
sbb
roll
les
dec
enter
dec
iret
sti
cltd
aad
fmuls
dec
sub
fmuls
inc
lret
mov
pop
mov
or
mov
lret
adc
shufps
mov
stos
les
mov
xor
pop
pop
ja
fcompl
mov
mov
push
push
test
pop
movsl
aas
dec
adc
xor
jne
cmp
cli
repz
jbe
sbb
inc
cmp
insb
cmpsb
aam
in
dec
sbb
pushf
xchg
aam
mov
test
addr16
rcrl
push
fists
push
ja
out
jle
fsubrl
push
fldenv
lret
adc
xor
daa
xchg
stos
out
shrb
and
lea
stc
adc
mov
popa
stos
sub
cwtl
adc
loopne
sub
push
add
fs
cwtl
or
adc
xchg
push
add
or
cmpsl
shll
mov
dec
loopne
adc
pop
jbe
outsl
or
push
into
jnp
and
xchg
in
mov
xchg
mov
and
jns
mov
sub
cli
sbb
inc
pop
and
sbb
fs
int3
lock
popf
mov
dec
and
mov
outsb
xor
clc
adc
jecxz
test
xchg
enter
inc
lods
push
jmp
sub
mov
enter
call
rcr
adc
and
sbb
jle
jae
and
stc
insb
push
repz
jb
out
push
repz
jb
ret
pop
xchg
xchg
outsb
xchg
daa
adc
xor
sub
push
jns
dec
scas
sahf
pop
fistpll
add
sarb
adc
lods
pop
movsl
icebp
xor
dec
shrb
inc
jmp
xor
fcmovu
adc
dec
aas
leave
dec
pop
or
sahf
js
mov
aam
jne
dec
jecxz,pn
icebp
lea
insb
lahf
stc
popf
scas
jb
stos
out
pop
loopne
enter
ret
cmpsl
adcl
clc
mov
adc
sti
imul
idivl
sahf
leave
ret
mov
fs
inc
test
or
adc
and
mov
cmp
adc
lcall
pop
xchg
cs
addr16
sti
outsl
ljmp
fldl
outsb
loope
pop
cmp
testl
shrl
pop
ds
sbb
add
sti
imul
mov
pop
lret
cmc
rcrl
push
popa
in
loope
pop
repnz
ljmp
bound
or
lret
dec
pushf
sbb
adc
add
cmp
addl
sbb
mov
cmc
loopne
stc
xor
mov
lods
add
cmpsl
cmpsb
jg
pushf
repz
fwait
cwtl
add
mov
loope
gs
leave
adc
pop
les
inc
fldt
popf
out
and
or
dec
aas
push
adc
addl
mov
out
add
lods
pandn
cmp
or
pop
test
mull
movsb
mov
ds
push
call
dec
dec
shl
xor
dec
mov
aad
int
jge
lcall
ret
sbb
fwait
mov
lds
pop
outsl
adc
pop
inc
dec
xchg
pop
stc
shlb
mov
ss
xchg
pop
hlt
inc
mov
push
lds
lahf
stos
je
cli
mov
dec
outsl
repz
out
cmp
pop
dec
sahf
jecxz
mov
jge
mov
mov
or
pop
ds
or
push
mov
out
insb
pushf
jne
lcall
adc
mov
pop
nop
pop
cmp
and
scas
out
jno
jnp
outsl
dec
jns
ljmp
adcl
xor
adc
push
pushf
and
sbb
pop
push
loopne
int3
movsb
loop
pushl
add
pushf
add
jae
mov
adc
sbb
push
cmc
ret
clc
lret
jg
lret
iret
cltd
ja
push
test
xor
sbb
mov
mov
cmp
pop
inc
iret
ror
pusha
and
andb
sbb
push
adc
aam
pushf
fsub
out
scas
incb
ret
ret
cs
mov
fistpll
mov
cmpsl
imull
pop
jb
push
mov
jge
shl
aas
sub
subb
movsb
inc
fidivrs
repz
in
add
push
add
adc
inc
xchg
or
inc
sbb
test
mov
pusha
jp
data16
mov
ljmp
dec
and
mov
xchg
sti
mov
cmc
add
sub
je
roll
jnp
xor
adc
in
xor
xor
lret
arpl
adc
movsb
push
int3
icebp
lds
packssdw
bound
add
sbb
js
test
ja
mov
imul
adc
repnz
mov
inc
xor
inc
xor
pop
push
push
js
xchg
rcll
roll
orl
mov
mov
out
inc
sub
aas
fsts
out
pop
or
jp
cltd
add
call
push
xlat
add
and
jp
push
cmp
andb
jg
lcall
movsb
inc
jbe
pusha
jge
les
inc
sbb
lods
scas
jmp
int3
xor
sub
adc
cmp
adc
sbb
aam
divb
fwait
jae
inc
or
xchg
scas
sub
out
mov
jle
sub
stos
or
push
pop
ljmp
and
adc
ret
ret
movsb
movsb
or
add
mov
mov
xchg
dec
cltd
mov
insb
mov
les
cld
repz
test
jmp
jb
fsts
mov
push
push
adc
push
xchg
fwait
andb
iret
or
pop
or
ss
mov
xor
xlat
mov
das
iret
test
adc
cld
mov
sarl
inc
mov
xlat
sti
cmp
cmp
ret
les
int3
ret
push
and
popa
pop
and
jae
dec
scas
cmp
adc
mov
sbb
add
mov
xchg
mov
xchg
or
scas
jns
loop
pop
jns
repz
pushf
inc
fbstp
cmp
pop
fs
add
call
enter
xchg
lahf
lret
inc
lret
std
out
ret
stos
loope
cmp
clc
inc
jg
pop
popa
loop
sub
rorb
scas
rcrl
aad
inc
in
cmp
fists
or
loop
dec
mov
scas
xor
insb
aad
int
movl
mov
add
and
outsl
sbb
xchg
push
out
push
and
scas
inc
xchg
loope
adc
pushf
mov
push
fdiv
add
repnz
sbb
xchg
mov
fisubrl
nop
cmp
xor
lret
adc
pop
mov
xchg
xor
addr16
mov
push
mov
shrb
or
mov
push
mov
pop
out
push
in
int
jmp
gs
add
fwait
push
xchg
repz
sbb
mov
test
enter
cmp
mov
icebp
outsl
int3
pop
or
xor
sbb
dec
mov
sbb
stos
push
cwtl
lahf
aam
cmpsb
adc
test
mov
pusha
mov
popf
fnsave
push
or
jmp
add
je
test
jmp
ret
es
cmpsb
mov
bound
sbb
pop
mov
push
icebp
pop
mov
jmp
stos
incl
dec
popa
xor
xor
mov
mov
xchg
out
and
cld
and
dec
xor
into
pop
mov
jge
syscall
insb
aam
sbb
inc
inc
cs
movsl
lea
mov
or
insl
shlb
and
ds
pop
cmp
cltd
fidivl
mov
mov
push
and
push
icebp
jl
clc
das
sub
out
cwtl
cmc
lock
repz
adc
push
xor
in
push
cmpsb
aam
jns
jnp
aad
fisttpll
movsl
cmc
and
movsl
ss
int
pop
leave
xchg
lret
adc
bound
fsubrl
sbb
out
test
rcrb
popa
fstl
sti
push
ljmp
or
call
add
mov
rcrb
fidivrs
std
gs
jle
mov
pop
mov
inc
jmp
arpl
mov
mov
mov
push
in
stos
pop
xchg
aam
ja
daa
pop
mov
data16
inc
inc
dec
ja
fidivrs
ret
es
mov
loop
mov
xchg
cmp
mov
out
adc
adc
shll
cli
pop
jle
cltd
xchg
mov
sub
pop
xchg
inc
insb
push
inc
das
jnp
and
mov
and
cltd
dec
inc
jge
cwtl
inc
pop
mov
xchg
push
lock
test
sbb
repz
push
lahf
sub
ds
or
dec
outsb
fcoml
jb
xchg
decb
adc
jo
push
fists
pusha
sti
popf
push
pushl
mov
or
dec
and
mov
xchg
inc
stos
dec
push
scas
jg
aas
fstps
ds
stos
push
ret
in
xchg
lret
add
es
rcrl
orb
repnz
mov
push
jl
cmp
lahf
sbbl
mov
xchg
inc
adc
mov
pop
mov
and
js
idivl
test
repnz
xchg
push
mov
dec
pop
stos
fcmovne
cltd
push
enter
pop
jbe
push
jl
xor
push
inc
mov
or
in
pop
ret
xchg
loop
inc
test
pop
mov
pop
out
jo
inc
stos
mov
cmp
stos
shlb
cmpb
loopne
or
adc
fstpl
fsub
imul
in
stos
mov
add
jae
pop
mov
mov
jbe
lret
cmp
push
bound
adc
mov
add
pushf
sbb
rclb
inc
int
out
fistps
inc
dec
jmp
inc
repz
pop
leave
and
test
subl
jmp
cmc
xorb
add
push
lds
mov
lods
out
pop
sbb
xor
push
pop
push
pop
push
sbb
js
fwait
cmpsb
pop
and
mov
adc
jecxz
adc
dec
bound
daa
cmp
rclb
push
xchg
ret
and
out
jp,pt
fldt
out
imul
mov
add
lds
xor
mov
xor
mov
iret
imul
or
testb
jl
xchg
inc
xchg
jne
xor
sbb
lret
xor
xchg
mov
stos
pop
xor
and
fmulp
jmp
mov
call
lret
iret
sub
xchg
decl
lea
loope
sub
pop
std
cmp
or
xchg
lahf
mov
sbb
pop
jb
mov
out
xor
mov
xor
imul
and
pop
loopne
pop
pop
push
and
out
call
outsl
push
and
xchg
ret
sub
xchg
loop
call
shrb
mov
mov
loop
int
fs
fcoml
sahf
push
mov
lds
push
inc
and
cmp
aam
imul
sbb
enter
movsb
ja
mov
push
dec
sbb
xchg
or
int3
mov
leave
gs
adc
lock
outsl
lds
aam
pop
mov
sbb
pop
ljmp
mov
popa
ret
cld
inc
dec
mov
out
jo
jl
iret
mov
jnp
xchg
loopne
pop
pop
ja
lods
pop
aad
jbe
inc
out
fsubl
sbb
js
call
mov
jle
xlat
out
bound
push
mov
outsb
stc
push
jge
cld
aam
icebp
dec
dec
mov
out
nop
std
cmp
jp
rcll
sarb
ss
fisttpll
mov
sub
jo
cld
jl
flds
xlat
xlat
and
mov
lcall
cltd
xchg
lea
sbb
mov
xchg
pop
sub
mov
in
bound
sub
out
out
xlat
jnp
test
lods
xchg
mov
hlt
repz
pop
inc
dec
mov
aas
xchg
jno
in
or
mov
addb
mov
loopne
imul
mov
pop
clc
pop
inc
je
out
adc
shl
mov
iret
mov
out
std
inc
cmpsl
subl
push
insb
in
lcall
jp
jle
pusha
and
jg
dec
add
push
cwtl
and
ds
jb
fbld
mov
jmp
in
inc
jbe
mov
push
mov
add
mov
mov
inc
jne
arpl
rol
lahf
mov
in
sbb
pop
jo
xchg
fadds
xor
stos
addr16
or
cmpsb
lret
js
repnz
pop
jle
lds
xchg
std
xchg
addr16
addb
loope
lods
add
mov
bound
inc
shrb
add
or
push
ljmp
jno
aad
mov
and
das
int
call
xchg
pop
cmp
repnz
lock
xor
fnstsw
jecxz
mov
test
inc
inc
xor
adc
fmul
xchg
sbb
sub
pop
loope
inc
fisubrl
push
jp
jno
sbbb
pop
or
jg
pop
mov
or
inc
or
shrb
and
push
lds
push
push
je
fldl
or
add
data16
pop
ljmp
mov
sbb
jbe
or
add
xchg
adc
jecxz
loope
insb
mov
incl
jbe,pn
jle
sub
xchg
ret
xchg
add
lret
aad
lods
sti
and
cmp
pop
cmp
rcr
jo
outsb
enter
push
dec
addr16
gs
scas
and
imul
popf
inc
cmpsb
xor
aas
stos
pop
ficomps
or
sbb
cmp
push
adc
mov
iret
lods
adcb
pusha
jmp
sbb
xchg
arpl
xchg
pop
pusha
stos
sub
push
aam
push
mov
into
dec
mov
imul
bound
test
iret
repnz
inc
pop
pop
jns
outsl
add
push
insb
sub
dec
sti
cwtl
xchg
or
lds
je
out
fs
lret
jnp
and
xor
int
xchg
mov
xchg
jne
scas
inc
jbe
ljmp
push
or
jno
cmpsb
dec
cmp
mov
dec
push
arpl
pop
sub
jecxz
mov
enter
mov
scas
push
fisubrs
popf
fwait
adc
mov
mov
mov
or
mov
pop
cmp
ret
push
popf
nop
loope
and
fneni(8087
and
mov
adc
out
lds
mov
fcompl
mov
cli
cmp
aas
flds
or
pop
push
push
repz
insl
pushf
sub
bound
stos
adc
into
aaa
xchg
insb
cmp
mull
mov
loope
mov
aaa
std
jp
test
dec
movsl
je,pt
in
stos
dec
jecxz
xchg
sbb
lock
push
je
xchg
aad
movsl
cmpsb
cmp
add
test
sbb
and
pop
add
sti
xchg
lock
add
stc
shl
cltd
dec
jne
or
xlat
das
rolb
pop
shll
xchg
and
add
cmpsb
repz
or
mov
adc
jb
dec
sbb
xchg
stc
add
cmp
sahf
pop
and
lds
jae
lahf
dec
mov
jo
int3
lods
pop
xor
jmp
adc
sub
jno
scas
mov
jo
test
xchg
ja
push
arpl
dec
daa
xor
out
or
mov
les
xorb
fs
add
add
dec
popf
mov
aam
rcl
push
das
pop
add
sarb
jl
ljmp
int
or
daa
add
pop
testb
mov
les
or
cmp
push
pop
pushl
mov
imul
inc
ret
inc
pop
jb
jne
aas
cmp
adc
jle
add
sti
inc
and
jns
xchg
mov
jne
sbb
loope
sbbl
cmp
or
push
iret
lods
mov
jae
push
fnsave
or
adc
mov
inc
repz
adc
repz
cmp
mov
adc
pop
add
or
cmpsl
cli
out
int3
dec
or
das
mov
in
cwtl
pop
flds
add
mov
fwait
jge
scas
cmpsb
adc
fwait
mov
hlt
in
pop
cmp
sbb
mov
push
cs
inc
popa
stos
mov
cmpsl
push
jge
insb
rcr
xchg
inc
hlt
or
push
fsub
mov
stos
stos
xor
imul
mov
jnp
or
fdivl
in
pusha
and
sbb
jmp
addb
push
jne
imul
sub
adc
imul
cmpsb
and
jecxz
icebp
cmp
push
pusha
hlt
or
cmovae
enter
jne
mov
loope
jecxz
sub
movsb
scas
sub
jle
test
cld
push
add
pusha
cmp
imul
adc
and
repz
mov
sbb
aam
pop
nop
cmp
aam
mov
iret
add
and
lret
outsl
lea
addr16
and
cmpsb
ret
dec
and
adc
fsubrl
mov
jns
leave
test
out
dec
jl
addps
inc
mov
pop
sbb
vcmpps
ror
and
cs
push
ret
jecxz
inc
shrl
in
pop
adcb
cli
mov
loop
xor
xorps
adc
and
sbb
lock
adc
fcoml
push
cmpsb
decl
push
add
inc
sbb
xchg
nop
mov
cmpsl
bswap
fdivr
shrb
push
icebp
dec
ret
mov
sbb
jae
out
add
jns
jle
push
push
repnz
ja
jb
aaa
dec
xor
outsb
out
stos
ret
jecxz
and
pop
popa
stos
imul
lret
mov
mov
popa
outsl
je
add
out
fimull
aas
in
sahf
fisubl
jp
xor
sub
bound
cmp
stos
dec
cmp
xchg
hlt
icebp
inc
jmp
adc
add
mov
test
imul
dec
pusha
leave
ficomps
cmp
sub
test
imul
and
xlat
cmp
aam
sbb
push
aam
mov
xor
mov
xchg
mov
jle
add
adc
or
pusha
xchg
xchg
je
push
sbbb
sti
js
jecxz
mov
cmc
cmpsl
cmpl
cmp
movsl
scas
faddl
and
pop
cmovns
icebp
sub
lds
loope
mov
nop
sbb
push
inc
bound
neg
xor
popf
stc
js
cmc
jl
dec
scas
fistl
popa
daa
pushf
decl
mov
mov
fimuls
mov
push
xchg
pop
push
mov
push
sahf
push
sti
inc
jno
rolb
cmp
adc
and
icebp
or
push
cs
pop
add
jecxz
clc
xor
jo
adc
mov
sbb
dec
cmp
movsl
mov
fcomps
dec
mov
arpl
pop
cld
or
inc
mov
adc
clc
movsb
rcrl
pushf
arpl
jo
fimuls
shlb
adc
sub
xor
cmpsl
push
int3
jmp
out
js
pop
adc
lds
cwtl
pushf
mov
mov
aaa
sti
lock
neg
mov
mov
pop
rclb
xchg
aad
push
out
jbe
aam
mov
sarb
sahf
xchg
div
repz
cmpsb
je
xchg
insb
fistl
aaa
xor
jmp
push
cmpb
lcall
dec
push
adc
xchg
add
xchg
dec
push
cmp
xor
and
addb
sti
add
js
sbb
je
xor
out
aas
aad
mov
sub
push
pop
mov
xlat
mov
adc
xor
mov
ret
js
movsl
test
sahf
jo
adc
cmp
enter
push
cmc
push
lret
es
xchg
fisubrs
inc
stos
mov
adc
cmp
jo
rcll
mov
js
cmpsb
mov
inc
mov
les
mov
fcmovu
nop
push
rorl
cs
adc
movsl
not
in
lods
ljmp
stos
movsl
in
xor
out
sbb
mov
mov
das
or
dec
cmp
out
cmc
mov
in
shll
or
jecxz
xchg
pop
cmp
push
push
mov
pop
gs
sahf
cmpsl
jge
jg
mov
insl
dec
aam
and
jnp
int
mov
fwait
insb
xor
aaa
jb
sbb
arpl
aad
outsb
outsl
imul
push
and
fsubp
jne
inc
dec
arpl
aad
ljmp
std
mov
ja
mov
mov
cld
bound
xchg
push
push
imul
iret
test
or
sub
pop
jbe
ds
nop
aaa
test
pop
push
inc
sbb
and
lahf
fwait
and
or
ljmp
pop
jb
scas
insb
addb
pushl
fstps
push
in
cmpsb
add
bound
adc
frndint
iret
mov
or
mov
les
xor
mov
mov
push
test
insb
sub
lret
hlt
adc
imul
pop
sub
jae
or
sub
push
icebp
push
push
lea
addr16
mov
movsb
sbb
lock
js
sbb
xchg
dec
cmpsl
fsubs
mov
mov
push
inc
xor
pop
setp
sar
inc
mov
push
stos
dec
insb
into
mov
xchg
aaa
aam
pop
jno
sbb
incb
adc
std
test
stos
icebp
aad
scas
push
out
sub
add
and
ljmp
in
sbb
xchg
es
xor
pop
leave
icebp
inc
rorl
in
fidivrs
test
repz
int3
paddsw
adc
cmp
lds
and
sub
jmp
pusha
mov
push
inc
ds
lods
in
aaa
jg
jmp
arpl
cmc
xchg
fsts
push
imul
pop
out
push
insb
mov
cmpsb
adc
sub
icebp
xor
mov
cmp
dec
sub
pusha
mov
lods
push
pop
nop
xchg
in
loope
add
adcl
pop
sbb
int3
cmpsb
dec
adc
sbb
movb
xchg
inc
mov
cmpsb
in
dec
in
xchg
daa
lock
or
push
loope
xchg
push
inc
lock
jne
adc
aaa
add
out
jo
hlt
jecxz
xor
cld
pop
pop
rorb
push
mov
fwait
lds
sbb
pop
stos
adc
mov
int3
sbb
pop
rcll
mov
rorb
pop
lds
addr16
xor
or
enter
cltd
mulb
push
add
decl
pop
shlw
mov
push
dec
out
cltd
mov
call
pop
mov
and
lds
dec
add
jg
testl
pop
shl
aad
mov
int
push
jbe
mov
out
dec
cmp
inc
push
cmp
movsb
inc
xchg
je
mov
jns
stos
rolb
push
daa
fsubs
sub
in
hlt
pop
adc
or
and
sbbl
dec
sub
push
push
cmpsb
mov
pop
movsl
add
aad
in
adc
std
aad
cwtl
pop
mov
lea
and
insl
jp
cmp
ljmp
adc
xchg
push
dec
or
adc
push
stos
cmp
nop
xor
out
icebp
fldlg2
cmp
imul
inc
and
add
loopne
xchg
call
int
call
imul
jnp
dec
stc
cmp
fwait
inc
push
mov
mov
fs
push
arpl
into
mov
mov
xchg
cwtl
or
fstps
sub
les
lcall
in
mov
pop
rcrl
test
ljmp
insl
lahf
sahf
in
mov
scas
xor
clc
inc
enter
inc
fildll
mov
testl
dec
sub
lcall
lret
xor
scas
imul
cmp
cli
cmp
jmp
test
sub
int3
adc
ret
imul
jge
jl
push
clc
mov
xlat
fbld
lock
sbb
ja
add
sub
sbb
pop
stos
je
jmp
jge
test
xor
or
ficoml
aaa
cmc
xchg
ds
call
adc
mov
sbb
mov
lcall
xor
insb
je
sub
jge
movsl
in
imul
jle
adc
cld
mov
in
push
cmpsb
jle
aam
mov
loopne
push
xchg
outsb
iret
cmp
dec
dec
pop
fmull
pop
ds
adc
inc
shrl
xor
jle
repz
xchg
jne
inc
xchg
push
popf
jg
jge
inc
push
dec
mov
pop
js
out
or
xor
pop
sbb
mov
out
test
and
mov
inc
leave
insb
loopne
xchg
or
xor
mov
fstpt
add
and
xchg
jbe,pn
xor
lea
loopne
push
jmp
loope
pop
sti
addr16
outsl
cld
pop
stos
jg
into
das
daa
outsl
sahf
mov
mul
dec
mov
aas
lret
in
add
xchg
sbb
inc
pop
ret
or
call
imul
push
cmp
into
push
scas
push
dec
lea
pop
mov
push
ds
aaa
cmp
pop
adc
push
hlt
and
cmp
imul
sbb
gs
out
sub
out
hlt
adc
push
or
das
mov
mov
fnstenv
push
or
shrl
mov
aad
cli
nop
imul
movb
adc
jecxz
std
xor
mov
mov
jge
aad
pop
jae
pop
xor
or
out
pop
in
ja
pop
test
dec
cmpsb
cmp
cmp
pop
and
popa
test
gs
sbb
xchg
shll
das
test
daa
jl
dec
lock
push
push
mov
xor
adc
or
shr
repnz
je
pop
mov
into
adc
fcomi
xlat
cmpsb
mov
test
inc
ror
decb
std
fcoms
loopne
mov
inc
cwtl
loop
jne
lods
aaa
movb
push
jl
fs
xchg
jmp
rolb
jg
pop
pop
ficomps
mov
xlat
pop
or
imul
leave
mov
inc
pushf
in
lock
test
mov
xor
frstor
push
out
mov
push
or
je
mov
stos
jmp
in
lds
fwait
repnz
mov
push
rcrl
mov
clc
leave
inc
aas
repnz
fldcw
jp
out
push
mov
sub
adc
cld
sbb
xchg
and
into
in
aad
or
jg
sbb
test
mov
arpl
ljmp
mov
dec
std
les
push
pop
xlat
mov
or
jp
dec
jns
clc
loop
pop
cmp
int3
mov
andl
mov
imul
dec
xor
addr16
ljmp
daa
jno
or
dec
or
push
mov
lret
pop
push
mov
inc
mov
add
xor
pop
adcl
xchg
add
jo
enter
std
scas
cmc
mov
jl
roll
outsb
adc
xor
adc
dec
lahf
add
cmp
sub
xlat
jo
data16
test
data16
lds
xlat
aam
gs
daa
mov
push
sub
dec
lret
sbb
cmp
insb
and
and
jb
rcr
sbb
add
ljmp
ret
and
jbe
cmp
jae
pusha
push
push
aam
insl
pop
pop
ss
pop
fistps
sahf
fists
popa
int3
arpl
test
rorb
jmp
enter
adcl
inc
sbb
mov
inc
adc
dec
aaa
loop
mov
push
or
movsl
pusha
ljmp
jno
hlt
pop
ljmp
jecxz
arpl
jmp
lods
lock
test
jecxz
xchg
out
in
adc
les
push
fwait
inc
pop
mov
sub
mov
and
dec
add
push
pushf
cwtl
dec
mov
add
xchg
lret
sub
xor
sbb
sub
loope
mov
jo
fst
insb
iret
push
je
cmp
iret
lea
stc
ret
jnp
aaa
and
scas
sub
jns
xchg
xor
or
and
inc
push
lret
xchg
xchg
sub
dec
lret
pop
fmuls
mov
mov
xchg
dec
fisubs
xchg
test
push
adc
jle
aas
in
or
or
dec
call
leave
and
fistpll
or
dec
pop
movsb
cs
dec
mov
ss
mov
inc
out
mov
inc
lds
mov
xchg
test
into
push
add
fwait
xor
cmc
jns
ja
ret
out
lcall
rcrl
mov
add
and
dec
cmpsb
pop
mov
xor
lods
push
or
loope
lock
shr
outsl
repnz
mov
insb
sub
and
out
les
into
aaa
sub
mov
xchg
xchg
lock
cmc
imul
lret
and
sbb
int
js
fwait
adc
jp
push
leave
aad
cmpsb
sub
lds
adc
mov
sub
push
inc
and
shlb
jle
data16
push
pop
add
push
dec
push
test
xor
repnz
mov
xchg
push
arpl
push
ss
aaa
out
ds
push
test
jge
mov
jg
test
rcll
mov
jg
xor
push
out
or
pop
cmc
and
fcoms
adc
in
or
jne
fisubl
pop
fisubs
clc
and
fildll
jnp
lea
xchg
movl
insl
push
les
test
xchg
mov
loope
movsb
movsb
pop
fdivl
call
lret
icebp
fldenv
xchg
je
mov
aaa
imul
adc
xchg
enter
add
stos
push
jb
inc
xorl
scas
lahf
xchg
movsb
and
adc
popa
xor
adc
gs
jno
mov
push
cli
cltd
mov
nop
sarl
inc
movsb
lret
repnz
cmp
mov
and
sti
das
push
sbb
sbb
loopne
and
orl
imul
mov
shll
adc
mov
popa
dec
ja
push
inc
test
cld
in
call
xor
or
cs
movsl
rolb
pop
jne
out
js
pop
clc
loop
stc
pop
push
push
cmp
pop
shll
jae
push
sbb
imull
xchg
leave
lret
sub
es
clc
jp
in
jnp
jne
loope
dec
icebp
jecxz
adc
ret
in
pusha
bound
mov
push
cmc
call
mov
mov
iret
test
aas
push
push
add
loope
push
ja
xor
jmp
inc
pop
fsubs
sbb
jmp
lods
jne
fwait
push
jl
inc
pop
jae
push
cmp
movsb
mov
or
mov
sub
adc
or
pop
jmp
pop
cmp
fimull
or
xor
or
mov
mov
xor
pushf
push
ret
add
mov
add
insl
mov
fsubr
sub
aas
xchg
lock
stos
repnz
iret
xchg
shrb
pusha
inc
dec
jge
and
and
movsb
and
ja
push
mov
jno
mov
gs
rcrb
loop
mov
add
js
mov
bound
sbbb
mov
nop
pop
inc
cld
mov
paddsw
jg
inc
pop
int
data16
insl
xchg
movsl
mov
xchg
loopne
and
in
daa
mov
push
std
inc
repnz
gs
inc
inc
leave
jmp
adc
and
shlb
imul
add
scas
ds
cmp
add
test
dec
xorb
jns
or
icebp
mov
pop
test
dec
movsl
imul
cmp
dec
fcoml
mov
addl
jbe
push
rol
dec
iret
int3
sarl
cmpsb
inc
cs
cmp
dec
or
mov
dec
int3
pop
sbb
jl
js
imul
ja
cltd
insb
jl
lahf
xor
clc
les
jbe
jmp
imul
aad
jl
xchg
mov
mov
and
pop
xor
insb
push
mov
pop
sub
dec
repnz
shr
xchg
jmp
xor
dec
mov
dec
mov
inc
jnp
jns
icebp
push
imul
and
mov
jns
jne
push
into
xor
jl
cwtl
aam
dec
mov
sub
and
lret
mov
in
xchg
int
pop
data16
daa
popf
xor
lds
loop
lods
pop
ret
daa
insb
push
clc
adc
xchg
sub
xor
xchg
test
icebp
repz
push
lea
mov
faddl
jo
lods
xor
fstpl
dec
inc
pop
xchg
mov
clc
imulb
outsl
ljmp
xchg
popf
dec
aaa
xor
mov
push
and
sub
aas
das
jns
insb
push
push
push
lahf
sub
fisttpl
mov
inc
lcall
mov
dec
faddl
aaa
add
test
rcll
sbb
and
jne
repnz
test
pop
cltd
cmp
mov
dec
test
sub
xor
pop
je
outsb
jb
dec
xchg
inc
das
dec
cli
test
dec
cli
clc
aaa
pop
inc
mov
jmp
movsb
fcomps
mov
mov
xchg
hlt
out
mov
mov
push
sbb
mov
pop
sbb
das
mov
push
loope
leave
sub
movsl
arpl
xchg
je
xchg
push
xor
push
aam
mov
jns
cmpsb
testb
rcll
shr
pop
pop
loopne
fsubrl
push
outsb
jge
repz
popf
cmpsl
out
fstl
fimull
xchg
je
pop
sbb
flds
inc
popf
shr
dec
ja
push
mov
adc
daa
sub
das
sub
push
push
add
xchg
in
cwtl
movsl
cmp
movsb
jmp
call
mov
mov
call
arpl
xchg
lea
jmp
push
push
ja
sub
lods
push
inc
in
xchg
addr16
movsl
or
dec
push
ja
stos
inc
fwait
pop
daa
mov
xchg
lds
xor
push
pop
roll
iretw
sub
adc
pop
in
sub
xor
int3
rcrl
xchg
les
lahf
sbb
mov
cmpsl
jo
fldcw
pop
insl
ds
jae
adcb
mov
or
arpl
shrb
cmpsb
sbbl
mov
mov
sub
out
xor
xor
push
xor
sbb
imul
add
movsb
and
push
lods
pop
mov
add
push
jmp
aas
std
roll
gs
enter
mov
inc
notl
sub
movsl
pop
aaa
push
jg
test
and
les
stos
cld
jp
ss
imul
scas
in
inc
pushf
xor
jne
sub
lahf
lcall
icebp
sub
mov
cltd
sbb
cmp
mov
insl
sahf
mov
mov
xor
ljmp
jp
push
xchg
push
mov
or
pop
mov
cmp
xor
lahf
mov
mov
mov
ja
xchg
loope
push
loope
popf
xchg
ljmp
insb
mov
jmp
push
jl
push
push
jge
pop
nop
fldl
cmp
jmp
jmp
call
jae
cmp
xchg
dec
xchg
repz
jo
cmp
ja
lock
xchg
std
cltd
push
add
push
xor
cltd
test
and
lret
push
je
cmp
xor
push
push
jb
in
cwtl
iret
mov
ss
push
dec
xchg
ljmp
sub
ja
shlb
out
out
test
push
faddp
mov
and
xchg
mov
mov
jnp
sbb
clc
loope
mov
int3
sti
insl
in
in
pop
negb
fstps
sbb
mov
sub
fisubl
leave
filds
pop
pop
push
pop
ds
jnp
mov
jecxz
int3
in
mov
test
stc
mov
dec
imul
add
jnp
push
aam
add
jns
mov
les
mov
aaa
mov
cld
sbb
mov
adc
or
add
rorl
push
add
gs
and
xchg
stos
inc
insb
and
push
repz
push
jmp
cmp
in
sbb
add
pop
sbb
test
sbb
dec
jmp
mov
jle
in
pushf
testl
lret
adc
xchg
out
je
fdivs
push
out
filds
sbb
inc
test
popf
fidivrs
jae
pusha
call
pop
mov
fwait
or
shrb
inc
mov
sbb
shll
mov
inc
push
lods
and
aas
ficomps
sbb
pop
sbb
cmp
sbb
loop
push
cwtl
cltd
mov
cmp
xchg
inc
pushl
xchg
pop
xor
fcmovbe
imul
stc
cmp
icebp
pushf
lea
jo
cmp
mov
xchg
fucom
movsb
fsubr
sbb
xor
fdivrl
pop
aaa
pop
sbb
sarb
clc
out
sub
xor
dec
shlb
add
pop
mov
js
sbb
mov
scas
insl
push
jmp
push
lahf
adc
or
adc
pushf
pop
xor
hlt
push
repz
or
stos
cmp
fs
fistl
ret
cmpsl
cmp
mov
jl
pop
cmc
fbld
and
push
cmc
pop
mov
jne
jb
mov
hlt
leave
ss
lsl
add
push
pop
fwait
jge
aam
outsb
sub
pop
popf
sti
inc
leave
dec
pop
sahf
fs
lods
push
jo
ss
mov
shrl
pop
sahf
add
aaa
and
std
push
or
sbb
jbe
mov
out
jmp
daa
sbb
dec
add
cmp
cld
push
jle
and
or
rolb
push
mov
rolb
xlat
pusha
cmpsb
add
pop
and
sbb
pop
lcall
adc
sub
ja
pop
pop
cmpsb
cmc
push
jne
mov
cmp
mov
aaa
lods
in
mov
test
xor
xorb
adc
je
jle
push
dec
jl
xchg
das
dec
push
xchg
add
clc
mov
int3
pop
mov
xor
cmp
xchg
pushf
inc
repnz
arpl
push
cltd
mov
jg
test
fstl
in
decl
out
nop
lret
pop
movb
cld
add
insb
arpl
jae
fnstcw
and
and
mov
xor
mov
insl
test
mov
out
push
fwait
sbb
stos
mov
and
cmpsl
mov
xchg
push
adc
clc
add
fiadds
adc
enter
pop
and
xchg
add
addr16
jbe
repnz
mov
mov
jae
bound
lcall
repz
sbb
and
sbb
mov
mov
lea
jecxz
jmp
adc
arpl
lret
inc
lcall
nop
push
icebp
jne
in
movsl
mov
outsb
jno
ljmp
jbe
aad
xchg
scas
jge
mov
notl
loope
mov
sbb
pop
rolb
or
ja
dec
pop
rclb
fbstp
push
mov
add
jbe
lret
stos
insb
and
fsubl
ret
cltd
xor
xchg
add
lods
xchg
sbb
cwtl
mov
fisttps
and
xor
jmp
xchg
xchg
mov
lahf
mov
test
les
or
mov
sti
icebp
popa
cli
arpl
xorl
cmpsl
sub
stos
mov
stc
pop
fnstenv
pop
aam
lds
shll
push
push
and
pop
jns
push
pop
dec
idivb
mov
aaa
out
rcrl
inc
xor
sub
or
in
les
mov
out
loop
loope
dec
dec
icebp
and
lds
cmp
push
lods
mov
jge
sub
out
jg
and
xlat
int
sub
lret
rorb
adc
imul
mov
subb
mov
push
and
or
stc
dec
es
clc
push
dec
fstpl
in
and
dec
cwtl
rorl
scas
loopne
and
dec
xchg
icebp
pop
ljmp
repnz
xor
lret
or
mov
icebp
push
push
subb
divb
sub
push
lea
es
jo
int3
add
pop
cmc
xor
mov
mov
outsl
shlb
sub
jl
cmp
jne
faddp
jecxz
jns
jns
lret
std
fucomp
pop
xchg
les
mov
push
xor
mov
jnp
sti
sub
push
sti
stc
in
mov
leave
icebp
popf
mov
test
movl
pop
push
lock
sbbb
dec
sahf
xor
mov
fbstp
pop
lcall
loopne
adc
push
lcall
subb
push
aaa
outsb
fimuls
orl
and
subl
xor
inc
mov
jge
ja
idivb
jp
sbbl
xor
aas
lods
inc
daa
pusha
dec
add
lahf
movb
in
sbb
sbb
or
jle
das
xchg
repnz
mov
jb
inc
mov
cmc
js
inc
movsb
insl
addr16
js
out
mov
cld
cmp
aam
jecxz
mov
push
pop
push
and
jno
jp
jecxz
std
mov
lods
pusha
cli
cmp
push
ficompl
repz
mov
out
push
dec
xchg
test
sbb
hlt
icebp
pop
mov
jno
mov
test
lret
pop
sub
or
ret
xor
pop
ret
fidivs
lahf
add
mov
xchg
mov
fcmovnbe
lea
fcmovu
js
cmovg
out
inc
daa
out
xchg
subb
fsubrp
dec
sarl
loope
bound
test
lret
inc
fwait
pop
inc
pop
stos
adc
adc
sahf
out
dec
das
and
cld
xchg
outsl
dec
cmp
xchg
fldl
sub
adc
dec
mov
lds
inc
sub
mov
mov
enter
xor
push
and
pop
sbb
xor
sahf
aaa
mov
jecxz
repnz
sbb
ret
pop
int
mov
sbb
loop
in
pop
imul
jbe
inc
cmc
imul
aad
pusha
jns
jns
jno
out
fwait
bound
add
cmp
or
call
aas
int
sti
sub
push
ljmp
lret
loop
mov
jl
stc
iret
iret
scas
jge
and
call
out
movsl
or
xchg
loope
cwtl
mov
adc
sarl
push
sahf
sbb
jne
shr
call
mov
shr
ss
cmp
arpl
scas
jg
adc
loopne
mov
xchg
cmp
xchg
cmp
rcrb
adc
mov
out
dec
adcl
fadds
sub
bound
aaa
sbb
or
dec
jp
pop
out
push
xor
aas
pop
push
sub
test
orb
lods
fwait
mov
dec
push
lds
enter
mov
push
pop
mov
stos
into
mov
idivl
or
int3
bound
ljmp
sub
dec
cmpsl
inc
nop
repz
movsb
cmp
xchg
xchg
jbe
rolb
or
xchg
adc
ljmp
ret
pop
inc
fstpl
push
adc
mov
aas
or
push
daa
cmpsb
fmuls
inc
adc
imul
loope
or
insb
aad
mov
cmpsb
mov
inc
mov
clc
fistpll
pop
mov
sub
js
cmpsb
mov
pop
xor
addb
aas
scas
arpl
in
adc
and
movsb
cld
iret
dec
or
movsb
in
push
daa
mov
add
out
call
icebp
and
lock
xor
jle
push
cld
popf
mov
lret
fldenv
adc
xchg
jp
pop
jg
jns
push
pop
int3
pop
pop
stc
push
cmp
push
lret
push
sbb
sahf
lahf
cmp
negl
dec
or
lcall
sahf
sub
push
ret
xlat
jecxz
mov
int
xchg
cs
mov
ret
mov
jo
fadds
xlat
outsb
test
push
or
ljmp
bound
iret
clc
xchg
shlb
addr16
sub
jno
adc
ret
jge
xor
sbb
mov
icebp
push
sbb
cs
xorb
sub
ds
jnp,pt
cmp
mov
push
or
add
fildll
dec
inc
in
out
xchg
xchg
mov
movsl
push
jbe
push
icebp
jne
dec
or
mov
and
and
xchg
ret
ret
mov
shll
dec
xchg
mov
jnp
cltd
mov
decl
jnp
and
jbe
aam
into
nop
sbb
add
jo
and
pop
hlt
and
jnp
sbbl
inc
lods
addr16
xchg
ror
pop
inc
mov
lret
lock
iret
into
addr16
add
xchg
pop
cmpsl
test
push
call
xor
dec
iret
and
les
fwait
mov
ss
test
xchg
xor
imul
pop
cmp
icebp
sub
xor
sbbb
stos
rcll
push
sbb
xchg
xor
pusha
mov
or
adc
mov
fidivl
mov
js
fidivs
pop
pushf
int
arpl
mov
lret
add
cltd
dec
xchg
adc
fs
or
jle
fs
ljmp
or
js
sub
sarb
testb
mov
test
or
xchg
sbb
jo
sub
rclb
mov
jle
bound
pop
leave
dec
rcll
mov
dec
mov
pop
jp
dec
xor
or
sub
cmpsb
push
aam
mov
and
mov
ss
clc
in
xor
sbb
dec
fdivl
cmp
push
pop
push
jle
jno
outsl
lods
cli
lock
and
pcmpgtb
xchg
outsb
and
mov
push
or
pusha
push
fwait
out
sbb
adc
and
lds
cmp
popa
andb
pusha
and
test
or
scas
arpl
sub
lods
xor
xor
testb
sarl
int
out
mov
mov
test
std
mov
xchg
fs
addr16
je
insl
mov
imul
mov
push
sbb
call
mov
or
sub
imul
pushf
bound
xor
ficoml
jo
mov
je
mov
adc
xchg
mov
mov
imul
jge
ljmp
aas
pop
fsub
roll
jl
mov
shrl
std
mov
pop
aam
push
mov
dec
in
rclb
and
sarl
dec
inc
pop
sbb
lret
aas
ret
xchg
dec
std
push
test
mov
inc
jmp
fisubs
jno
push
jb
data16
sub
mov
test
mov
sub
stos
mov
mov
xchg
pop
inc
call
lret
mov
or
pop
dec
test
xor
mov
pushf
ljmp
cmp
cmpsl
mov
out
iret
and
adc
cmc
pop
das
jno
out
xchg
shrb
push
dec
jnp
lret
mov
mov
push
fnsave
cmc
xchg
jg
cmp
mov
mov
sub
fnstsw
fstpt
xor
mov
loop
cmc
xchg
sub
ljmp
je
xchg
xor
fildl
add
mov
mov
enter
xchg
adc
int3
or
loope
adc
cmp
out
scas
and
and
inc
cmpsl
add
mov
jmp
cmp
xchg
or
push
loop
mov
cmpsb
out
mov
cmp
mov
int
mov
mov
push
aam
jbe
xchg
jge
add
ret
or
mov
int3
or
mov
test
mov
repz
ljmp
add
int
imul
or
pop
mov
nop
cmp
cwtl
xor
pop
xor
sbbl
dec
inc
sub
out
stc
xor
test
jno
or
jg
ja
mov
nop
cmp
push
enter
pushf
adc
in
rcrl
and
in
pusha
and
jns
outsb
xchg
aaa
mov
jmp
pop
adc
les
xchg
jbe
jmp
loope
fimuls
mov
and
addr16
neg
loopne
lods
pusha
jecxz
and
sahf
in
pop
jl
lret
loope
and
push
inc
in
mov
xor
in
mov
sub
inc
push
pop
outsb
mov
mov
cmp
cmp
push
pop
add
mov
mov
fldl
das
jp
add
xchg
jns
sub
xor
outsl
mov
loope
jb
push
jg
repnz
push
aas
xchg
jecxz
int
lods
sbb
lahf
jmp
mov
sub
cmp
lock
pop
iret
daa
xchg
push
iret
and
addb
xor
mov
mov
rcll
je
pushf
ss
into
mov
jg
pop
mov
pop
insl
retw
xchg
xor
sub
or
adc
sub
mov
scas
xlat
mov
ret
pop
das
inc
adc
insb
sbb
test
pushf
xorl
jb
rcrl
xchg
mov
iret
out
in
dec
daa
das
sarl
xchg
in
in
mov
daa
or
push
mov
fwait
jecxz
mov
jmp
call
xor
jmp
out
leave
xorb
mov
jns
popa
adc
xor
mov
dec
jo
fcomi
ret
cmp
push
mov
inc
dec
xor
mov
push
cmpsb
cmp
sub
and
mov
sub
ret
out
in
cmp
ljmp
scas
adcl
in
mov
cmp
mov
lods
cs
and
and
mov
and
jb
jl
push
lret
pushf
fdivs
lcall
repz
jp
and
ds
cmp
cmpsl
shlb
jmp
mov
dec
out
popf
sub
mov
cmp
cld
cmp
xchg
cmc
mov
int3
in
imul
jne
stos
ror
pop
push
jns
dec
mov
mov
sbb
test
dec
mov
cmpsb
int3
and
pusha
pop
in
sub
daa
mov
xchg
cmc
cs
xor
mov
call
push
inc
pop
cli
aad
lods
jmp
int3
gs
jns
ljmp
mov
push
fildl
jno
ljmp
cld
xchg
dec
test
adc
mov
dec
stos
je
popa
fldl
ficomps
aas
ret
pop
and
ds
adc
add
and
loop
jb
clc
aaa
sbb
push
add
leave
pop
rclb
xchg
dec
cmpsl
adc
xchg
stos
into
xchg
dec
mov
sbb
test
in
repz
scas
cli
imul
enter
or
inc
insl
or
pop
jnp
rcrb
cmpsl
shlb
mov
cmp
and
inc
sbb
cld
out
test
inc
xor
cmpb
xchg
mov
lea
dec
jo
adc
sahf
sub
rcrb
loop
mov
ds
testl
notb
fildl
movsb
xchg
andb
icebp
arpl
sub
push
mov
jecxz
mov
fisubrl
push
sti
xor
ss
add
xchg
test
xchg
stos
push
mov
imul
xor
negb
or
mov
xchg
and
test
addl
stos
in
ja
and
bswap
and
fstl
outsl
fs
or
mov
or
vmovsd
subl
lods
push
ljmp
cmp
mov
pop
sub
or
rorb
loope
in
out
sub
add
in
dec
inc
fdivrs
mov
mov
xor
sbb
dec
dec
mov
and
push
cmc
test
std
stos
jmp
xor
cmp
dec
repz
nop
outsl
mov
push
dec
push
cmp
rorb
shlb
out
cmp
or
test
mov
mov
mov
int
mov
mov
addr16
test
jg
mov
fistpll
cmpsl
test
fiadds
inc
xchg
and
dec
movsl
imul
shlb
push
es
or
or
jo
scas
lds
sbbb
pop
jl
in
shlb
loope
dec
outsl
mov
cmp
aam
fdiv
mov
xchg
in
ret
cmp
jg
xchg
mov
pop
mov
hlt
in
stos
rdpmc
xor
test
negl
jne
add
mov
fildl
add
xchg
lret
push
movsl
mov
mov
jmp
cmpsl
push
into
push
sti
and
loope
aas
cwtl
xor
pusha
shlb
lds
stc
cmp
sti
mov
testb
repz
pop
scas
mov
fstpt
xchg
std
add
and
jno
sub
ss
mov
or
daa
push
push
jg
sub
dec
fwait
xor
pop
and
scas
add
sti
cs
mov
xchg
aas
int3
dec
dec
adcl
stos
push
xchg
fildl
push
dec
cmpl
or
mov
dec
cmpl
adc
push
sub
movaps
out
gs
cmc
dec
inc
addr16
fisttpl
in
add
sub
mov
repnz
sub
adc
mov
mov
and
xor
or
mov
adc
mov
add
mov
daa
lret
bound
mov
fisubs
scas
movsb
adc
dec
jbe
ret
es
inc
sub
jg
icebp
int
outsb
push
insb
sub
sub
sub
cmp
call
popa
dec
mov
mov
rolb
stos
inc
sti
sub
test
aam
popf
xchg
sub
fiaddl
cs
push
mov
mov
hlt
lods
dec
push
inc
fldt
or
jns
adc
in
es
int
pop
inc
idiv
test
xchg
dec
or
in
push
les
popf
xchg
adc
cmp
xchg
xor
sub
mov
fsubrs
std
mov
jge
jp
xor
add
push
add
mov
in
push
jne
dec
orl
test
adc
mov
and
xor
hlt
stos
xor
stos
mov
ja
lds
test
mov
xor
cld
movsb
faddl
les
cmc
test
outsl
sarb
push
jnp
dec
out
stos
fwait
pop
xchg
lea
xor
adc
test
mov
mov
frstor
mov
arpl
dec
stos
sbb
pushf
xor
push
rcll
outsl
adc
test
jle
icebp
xchg
mov
cmp
js
nop
sbb
ss
and
mov
cmpsb
pop
icebp
mov
and
aad
fstp
pop
loop
or
xchg
inc
daa
fnstsw
jnp
lods
mov
mov
cmpsl
in
bnd
and
imul
pop
subl
adc
test
xor
rorl
push
jp
sub
push
movsb
cs
cmc
ror
aad
sub
popf
jnp
jp
rolb
push
cmpsl
and
or
mov
adcl
es
sbb
xchg
ret
xchg
pop
arpl
and
sub
lock
ret
dec
dec
data16
inc
std
adc
shll
adc
push
xchg
cmp
inc
mulb
aaa
lods
into
mov
mov
mov
cwtl
cwtl
outsl
in
and
pop
pushf
adc
adc
insl
dec
lea
dec
pop
xchg
ss
enter
adcb
push
popa
loope
iret
aam
movsb
lret
push
imul
pop
pop
add
jmp
push
xor
call
jns
lcall
cmp
enter
addr16
jo
push
sbbl
cmp
mov
mov
shr
adc
arpl
mov
dec
dec
cli
out
fwait
xor
pop
fwait
mov
mov
mov
gs
cmp
imul
ds
movb
mov
xchg
mov
notl
into
repnz
loop
adc
test
shl
dec
inc
adc
dec
jp
add
sub
std
sbb
sub
into
mov
mov
sahf
sarb
xor
jb
sbb
cmpsl
aad
or
or
cmp
push
xchg
mov
xor
loope
mov
cmp
outsb
xor
jge
aad
push
xor
jo
mov
and
fldl
mulb
ret
je
aam
loop
bound
inc
fnstsw
ret
dec
cmpsl
das
push
add
adc
or
xor
push
adc
orb
jo
imul
loope
adc
ffree
shufps
mov
in
xor
mov
dec
cmp
inc
and
call
test
es
xlat
nop
int3
cmp
mov
fwait
add
fwait
push
mov
mov
insb
dec
xor
sub
sarb
mov
jle
into
jge
scas
cli
test
xchg
dec
icebp
pop
mov
stos
sbb
test
sar
fs
cs
and
dec
jb
cmpsb
add
lods
xchg
sbb
xchg
fwait
pop
sub
mov
sbb
xor
or
cmp
jno
sarb
outsl
xor
push
loope
jbe
outsl
sub
adc
cld
shl
sbb
adc
lea
test
aad
pop
jmp
scas
lcall
jno
movsb
or
xor
aam
jecxz
mov
pop
ds
ljmp
lock
jmp
jl
mov
enter
out
and
mov
movsb
and
gs
mov
jno
pushf
fnstsw
jne
sahf
aas
test
sub
inc
mov
stos
lock
cmpsl
bound
mov
loopne
mov
mov
push
in
mov
lea
sub
out
in
hlt
maxps
push
insl
ret
call
ret
ucomiss
movl
fwait
cmp
icebp
insl
inc
addr16
pop
repz
xor
fwait
pop
xchg
mov
cmp
stc
xor
lahf
aas
shll
out
cltd
enter
and
add
inc
nop
adc
loopne
add
repz
sub
je
sub
xor
jo
and
xlat
pop
inc
push
mov
cmp
inc
jns
add
xchg
sub
add
mov
sbb
xchg
pusha
inc
mov
mov
jbe
and
mov
mov
add
test
and
and
mov
cmp
push
shl
push
popf
jecxz
test
imul
sahf
stos
sub
repz
call
mov
ja
cmpl
xor
pusha
loop
lea
lods
push
mov
push
test
add
or
sbb
lds
xchg
inc
rolb
mulb
pop
mov
loope
add
pop
and
mov
xor
cld
mov
push
cmp
push
jb
es
jo
out
xchg
cmp
js
repz
xor
pop
push
sbb
in
fs
xchg
inc
mov
jg
mov
xor
xchg
push
insl
jns
jne
loop
xchg
in
pusha
iret
mov
inc
xor
adc
addl
loope
mov
mov
adc
negb
mov
cmp
jl
sbb
outsl
pop
movsb
xor
xlat
cmp
pop
xlat
lret
jle
jge
jmp
sub
sub
nop
xchg
shlb
mov
xchg
cli
mov
mov
dec
or
iret
sbb
mov
stos
test
mov
fwait
enter
mov
js
imul
enter
stos
inc
fs
mov
lea
insb
stos
xchg
xchg
dec
das
inc
xor
jo
test
iret
repz
inc
adc
cmp
mov
movsl
pop
jo
push
xor
in
push
jno
mov
out
ja
fnstcw
push
or
sub
fwait
jo
pop
jns
pop
lods
ret
mov
inc
aas
mov
xorl
or
pop
rcrb
jne,pn
pop
push
into
shl
outsl
lock
out
iret
enter
xor
push
xor
dec
xlat
xchg
mov
mov
aam
js
add
push
rcrl
stc
es
mov
in
jmp
mov
cltd
add
cmp
or
mov
sarl
in
xor
inc
call
std
aad
xchg
cld
add
leave
mov
nop
fwait
cmp
pop
test
xor
loop
jns
incl
aas
int3
lcall
xchg
hlt
push
nop
loopne
inc
mov
movsl
mov
sti
jmp
mov
xchg
lock
sub
ja
negb
aad
ds
mov
sub
loop
je
test
loopne
loop
xchg
test
dec
mov
aad
insl
xor
into
dec
lock
xor
lds
imul
push
pop
pop
cmp
inc
pop
lock
pop
test
inc
pop
hlt
daa
adc
leave
imul
mov
mov
sarl
or
mov
out
dec
lods
in
not
movl
popa
or
mov
adc
fadds
dec
push
or
inc
cld
das
xchg
add
inc
shlb
or
in
push
sub
jns
rorl
fsubrl
call
adc
pop
ds
loope
loopew
loope
mov
xchg
pop
test
fwait
or
and
inc
adc
add
sbb
std
jne
jnp
cld
movsl
push
mov
inc
loope
fistpl
xchg
jno
sub
jno
stos
ret
or
repz
adc
div
fs
add
stos
cld
popa
in
or
sbb
dec
sub
mov
inc
cmc
mov
arpl
sarb
mov
data16
mov
pop
arpl
jno
push
ret
call
movsl
and
jns
das
adc
scas
push
mov
popa
push
pop
rcll
loopne
stos
sti
ja
arpl
and
xchg
divb
mov
or
lods
jmp
cmp
in
xlat
xor
ljmp
fs
dec
push
sbb
imul
insb
push
pop
push
and
lods
sub
push
test
fs
and
jbe
ljmp
lret
jl
xchg
and
inc
ret
scas
adc
and
or
js
in
dec
lods
fcmovne
cld
enter
iret
ret
fisubrl
xor
lods
popf
cli
mov
push
gs
call
dec
aaa
push
js
gs
pop
imul
test
jno
gs
dec
lcall
xor
jg
mov
scas
pop
outsl
repz
pop
mov
cmpsl
sbb
or
and
or
fs
inc
mov
enter
jnp
fs
mov
cmpsb
fcoms
inc
push
in
mov
mov
fsubrl
cwtl
mov
sbb
mov
movsb
pop
mov
leave
mov
lahf
and
js
sahf
mov
jge
cwtl
xor
and
sti
sbb
inc
aaa
popf
and
add
and
jno
jle
movsl
pop
and
mov
daa
sub
test
not
cs
hlt
inc
ja
push
scas
test
adc
push
or
or
aas
fincstp
sahf
xchg
popf
cmp
mov
stos
mov
push
push
clc
es
mov
nop
pop
cmpsl
pop
ja
pop
push
stos
inc
xchg
jecxz
fnsave
insb
ja
clc
dec
arpl
jnp,pt
fists
sub
jo
std
clc
scas
fbld
cmp
lret
and
lahf
mov
jp
jmp
cmpl
mov
and
mov
inc
jae
and
mov
push
call
and
loopne
xchg
mov
jp
cmpsb
inc
add
cmp
test
scas
mov
mov
add
loope
cmc
mov
or
xacquire
jnp
lcall
sbb
jmp
lock
lds
adc
sbb
or
sub
enter
rolb
cmpsl
mov
inc
or
lods
pop
das
xor
dec
pop
pop
std
jg
lret
in
subb
addr16
sub
mov
addr16
arpl
xor
orl
dec
popf
filds
in
sbb
addb
pop
push
xchg
mov
mov
dec
mov
jb
les
call
test
into
push
mov
imulb
add
pop
push
aaa
push
pop
inc
sub
addr16
sbb
sbb
sbb
mov
jo
out
pop
or
popf
out
sub
sub
jne
mov
mov
xchg
sbb
adc
popf
outsb
lods
clc
sub
leave
aaa
xchg
add
push
shrl
push
inc
mov
mov
pop
dec
sbb
push
pop
rorb
inc
lcall
push
icebp
or
adc
jb
inc
and
repnz
mov
mov
push
jae
cli
pop
push
mov
fistl
xchg
dec
push
es
or
push
ret
movsb
cmpsb
jb
es
stc
stos
jne
mov
bound
cltd
rcrb
sbb
fs
sbb
bound
movsl
xor
daa
lea
cli
mov
lahf
ret
sub
outsl
addr16
mov
or
or
cwtl
inc
call
inc
cltd
adc
and
mov
mov
jg
jne
cmp
mov
inc
push
or
insb
andl
push
lods
out
icebp
icebp
test
jmp
mov
dec
dec
insb
arpl
fisubrs
in
nop
shlb
test
mov
lret
push
mov
cmp
xchg
insl
lods
scas
jecxz,pn
testl
aam
js
cmp
adc
popf
imul
jns
in
aaa
repz
or
mov
orb
lock
cs
imul
loope
popf
mov
dec
sub
ret
sub
lret
out
incl
push
mov
test
xor
push
clc
jmp
jecxz
nop
int3
sbb
push
movsl
and
or
pop
mov
jo
adc
fadd
pop
fs
fxch
enter
adc
test
popa
test
push
lcall
push
call
js
inc
into
push
int
shlb
adc
je
call
jl
nop
xor
xchg
xor
adc
adc
addr16
sbb
dec
jge
push
aad
cs
out
or
jg
and
mov
mov
popa
shrl
fistpl
jno,pn
ja
inc
xor
and
cltd
jp
jecxz
nop
push
xchg
xor
faddl
mov
stc
sub
outsl
in
xchg
sub
call
ret
sub
cmp
fcmove
cmp
mov
pop
cld
popa
inc
cs
imul
dec
clc
cmp
jb
jns
ret
int
arpl
loop
rorb
clc
aaa
repz
lods
sub
and
cmp
adc
pop
test
adc
cwtl
gs
mov
add
out
jl
inc
sub
fucom
sub
inc
repz
and
sbb
adc
mov
ret
sti
js
aaa
dec
sbb
dec
fidivs
rorl
xchg
shr
jnp
mov
inc
sbb
clc
idivl
push
inc
dec
adc
add
fldz
pop
dec
push
stos
repnz
gs
std
sbb
cmp
imul
iret
aad
inc
sbb
jb
pop
shr
std
dec
scas
adc
jg
mov
js
inc
int3
add
popa
cmp
ja
shr
dec
push
or
clc
popa
sub
arpl
bound
pop
pop
clc
movl
push
cmp
add
cld
push
test
arpl
inc
xor
xor
mov
rclb
je
or
sub
and
mov
rcll
mov
jge
or
cmp
mov
pop
lods
pop
lcall
fadds
fcoml
adc
sbb
call
inc
adc
mov
add
int3
mov
clc
sbb
xor
mov
push
mov
in
mov
push
outsl
cmp
sbb
lods
orl
cltd
lahf
imul
xchg
dec
mov
lcall
add
jnp
rcr
mov
jecxz
loopne
cmp
sub
cmpsl
adc
iret
movsb
leave
insb
shlb
jo
adc
les
enter
or
and
fstpl
mov
mov
pop
jmp
aaa
push
outsl
jecxz
cmc
adc
xchg
call
or
adc
add
jns
loopne
sbb
cmp
push
imul
jecxz
dec
push
inc
adc
call
cmp
dec
adc
shlb
iret
lods
add
pop
and
dec
sub
xchg
std
sbb
iret
sar
dec
sub
mov
out
xchg
sbb
daa
aam
jne
push
pop
pop
pop
ljmp
jl
scas
and
rcrl
mov
mov
cmp
ret
iret
fisubl
jae
daa
insb
lahf
mov
mov
push
and
loopne
aas
in
pop
push
pop
sbb
test
in
dec
mov
xchg
gs
sub
jg
out
sub
mov
push
data16
popa
mov
or
ret
xchg
fs
xor
shlb
aaa
repnz
andl
daa
pop
dec
dec
cmpsb
inc
sarb
in
xchg
rorb
iret
out
lret
fldlg2
nop
cwtl
dec
lret
repz
jns
mov
adc
notl
je
scas
test
jg
adc
push
adc
cld
mov
jnp
sub
addr16
pop
pop
pop
adc
int
dec
movsl
inc
leave
pop
lret
and
sahf
sbb
dec
cmp
pop
ret
adc
sti
bound
out
cmpsb
xchg
mov
inc
call
data16
inc
mov
das
xor
rorb
sti
and
loop
push
mov
scas
daa
or
mov
sahf
pop
xchg
shlb
clc
jmp
xlat
stos
dec
and
push
out
sub
into
in
movsb
movsb
andb
xchg
push
jnp
lods
mov
adc
adcl
and
pop
negb
xor
aad
test
pusha
fs
mov
jecxz
xchg
sub
movsl
cmpsl
jmp
mov
out
mov
mov
rclb
and
inc
insb
sub
xor
adc
mov
pop
sahf
aam
jno
es
or
mov
test
mov
cwtl
inc
loopne
enter
fimull
fldt
scas
dec
dec
jns
in
cmp
jno
mov
daa
adc
mov
sub
or
push
je
xchg
repnz
loopne
sahf
pop
std
mov
testb
pop
imul
or
stos
stc
imul
or
mov
shr
push
sbb
sbb
pop
sarl
jae
fldt
or
sub
push
jae
inc
inc
or
sar
or
sub
mov
push
and
shll
std
outsb
stos
adc
mov
xor
xchg
push
stos
aam
enter
pop
jle
mov
sbb
das
int
sub
push
inc
stc
mov
pop
push
clc
pop
push
rcrb
push
ds
push
lret
mov
mov
cmc
dec
cltd
and
addb
iret
xor
xor
and
and
xchg
test
cmpsb
sub
in
cmp
mov
nop
rorl
je
mov
iret
xor
push
push
jl
fnsave
lcall
xor
cs
mov
sbb
dec
inc
adc
mov
jne
and
adc
pop
jb
cmp
pop
xchg
xchg
xor
in
pop
add
daa
jne
call
mov
adcl
mov
aaa
mov
out
dec
push
into
enter
ds
imul
frstor
gs
mov
jbe
xchg
pop
push
mov
insb
lret
ljmp
in
insb
loope
in
popa
lods
mov
adc
ds
ret
les
jg
sub
call
and
addr16
in
aam
jnp
fwait
cmp
les
fnstcw
stc
mov
mov
xor
pop
fwait
cmpsb
adc
sub
pop
mov
mov
xchg
xchg
ret
pop
ljmp
mov
into
fsubs
aaa
adc
daa
shll
repz
mov
inc
inc
jb
add
cld
and
mov
int
sbb
sti
adc
loope
arpl
add
adc
subb
das
push
cs
pop
stc
rorb
push
aam
ljmp
je
dec
inc
jp
sbb
fstpt
jae
cmp
movsl
fcoml
mov
mov
lods
sbb
jg
cmp
jl
mov
icebp
pusha
cwtl
pop
ljmp
insb
into
pop
xchg
jae
xor
addl
aam
push
pop
les
in
lods
push
dec
test
popa
jns
shl
cmp
sbb
decb
or
push
xchg
add
cli
or
add
xlat
insl
ret
xlat
arpl
js
push
mov
iret
inc
cmp
sub
add
mov
nop
ret
testb
push
xchg
popf
push
lahf
gs
out
aam
jl
pop
push
and
xchg
sbb
pop
dec
xlat
stc
jns
mov
jmp
lret
mov
loope
adc
pop
or
mov
test
jae
add
and
jmp
ret
sub
jnp
pop
dec
in
jmp
xor
dec
js
mov
push
cmpsl
mov
jle
inc
cmp
inc
std
adc
les
ss
es
into
sub
subb
clc
mov
psubusw
js
leave
addr16
stos
xchg
pop
fbstp
xchg
mov
fidivl
jno
cmp
mov
or
push
xlat
mov
lea
lock
jg
stos
xchg
mov
bound
lea
lds
adc
pop
stos
mov
push
inc
pop
mov
out
add
das
daa
sub
sub
mov
xchg
mov
or
push
cltd
inc
push
sbb
aas
jle
push
insb
xor
aaa
xchg
sub
cmpsb
movsl
push
fnstcw
inc
inc
mov
xchg
cmp
inc
mov
clc
pop
cmp
sbb
out
sub
pop
mov
cmp
sbb
inc
fcomp
aam
mov
adc
mov
shrl
add
xor
inc
aad
test
loope
leave
shl
int3
movsb
insl
test
stc
idivb
sbb
popa
push
sbb
cmc
add
rclb
orl
xchg
fs
pop
loope
leave
add
jl
xchg
mov
sub
xlat
pop
lods
cmpsl
es
sub
iret
cmp
cmpsb
ss
mov
ret
out
ss
cmp
mov
in
jl
sub
sahf
dec
pop
adc
mov
or
mov
push
and
add
popa
scas
mov
popf
jl
call
inc
sbb
std
jp
insb
and
add
scas
cli
das
out
and
push
in
push
pop
test
lods
cmp
sub
lahf
add
lea
js
pop
shrb
mov
sbb
cmpsb
adc
add
xchg
out
pop
out
push
sub
fwait
sub
pushf
add
cmpsb
adc
adc
lcall
jnp
cmp
iret
lods
icebp
call
mov
jle
rcrl
adc
mov
add
xchg
and
xor
lcall
mov
hlt
mov
stos
jg
mov
push
iret
sub
stos
ss
test
clc
push
or
xchg
inc
push
rol
int3
test
aaa
aad
lods
gs
mov
cmpsl
and
pop
inc
push
stc
push
pusha
lcall
stc
pop
push
jl
int3
fwait
inc
popf
lret
cli
push
call
mov
add
xchg
xchg
popa
mov
push
movsb
imul
cld
in
in
out
stos
xchg
ret
and
cmpsl
add
das
push
cmp
loope
loope
jb
cmpsl
es
mov
sub
mov
jmp
sti
ret
cmpsl
ret
fsubr
mov
jge
mov
icebp
fisubs
push
sbb
dec
test
jge
mov
jge
jp
xchg
xor
jnp
mov
sub
scas
mov
mov
mov
movsl
pusha
lods
mov
jnp
lods
mov
mov
dec
jae
mov
xchg
pop
cmp
les
fcompl
popf
sbb
imul
sub
cwtl
mov
dec
in
insb
mov
mov
aas
dec
sbb
shl
stos
push
cld
rorl
jge
movsl
dec
sbb
mov
movsb
daa
mov
push
lods
in
add
xor
mov
pop
test
test
sahf
push
or
je
mov
adc
test
andl
pop
fisttps
cmp
pushf
ss
add
xor
in
nop
data16
cmpsl
js
subb
or
pop
popf
cmp
fwait
xchg
inc
and
repz
xor
stos
cmp
shll
lret
push
jo
pushf
sar
add
jae
clc
push
cltd
int3
adc
cld
fldl
dec
fisubrl
jle
fs
cltd
dec
jmp
pop
rcrl
cmc
inc
or
xchg
testb
cltd
sub
fcompl
gs
xor
jbe
sub
jne
leave
add
loope
outsl
out
rorl
push
in
fldt
xchg
xor
and
shll
sub
in
xlat
subl
mov
add
lock
sub
mov
int
aad
pushf
fstpt
jns
and
mov
and
test
mov
js
xchg
xchg
fisttpll
lds
sti
mov
pusha
sbb
sub
pop
icebp
scas
xchg
sub
inc
push
pop
sar
adc
pop
mov
gs
mov
adcb
cmpl
jmp
sub
popa
pushf
add
addb
xchg
lock
les
cmpsl
lds
or
sbb
pop
in
neg
inc
es
int3
xor
push
leave
arpl
lods
enter
cwtl
call
jnp
adc
imul
pop
js
cs
push
out
inc
sub
pop
aam
push
add
adc
inc
repnz
stos
aad
out
cld
lcall
out
repnz
fidivrl
xchg
jb
cmpl
test
cltd
push
popf
sbb
and
clc
or
pop
push
into
inc
cwtl
insl
ja
jns
push
dec
xlat
and
jne
sbbl
or
jge
inc
mov
push
and
cmp
dec
std
insb
rcrb
ss
test
jo
imul
pop
and
push
mov
and
xchg
inc
addr16
add
jno
xchg
cmpb
or
sar
xor
cmp
add
add
cmp
test
and
ss
mov
mov
and
cmp
jb
jbe
lcall
mov
aas
jo
test
loope
dec
mov
adc
lods
lods
adc
sub
movsb
test
stc
stos
divl
sub
enter
movsl
dec
fists
mov
ret
cli
sub
xor
mov
loopne
icebp
sub
mov
in
inc
mov
cltd
and
cmp
test
xor
fbld
fcmovbe
jo
cwtl
nop
loopne
sbb
sahf
add
leave
or
jp
xchg
fdivl
jle
orb
jmp
cmp
nop
lahf
push
addl
or
cmc
pop
pop
mov
in
mov
popf
repnz
push
mov
addr16
icebp
push
and
jmp
fsubs
sub
dec
ret
jns
and
push
loop
and
out
sbb
add
test
dec
sbb
sub
inc
in
adc
jne
jmp
out
orl
adc
add
adc
or
unpckhps
aad
push
adc
cmp
add
jnp
mov
or
mov
outsb
jle
jb
dec
lret
add
push
lods
fprem1
pop
add
adc
daa
and
dec
pop
pop
mov
mov
shrb
mov
movsb
ja
jmp
cmc
mov
jl
cmpsl
or
pop
mov
fs
add
adc
lret
repz
loop
inc
icebp
ret
jb
cwtl
and
jmp
mov
je
push
or
push
in
popf
imul
mov
dec
add
lcall
test
xchg
int3
in
mov
iret
insl
sub
lods
or
aas
sub
mov
inc
sbb
jns
cmp
inc
pop
repz
sub
add
xlat
ss
jne
xchg
or
das
jnp
jecxz
js
fistpl
cmp
mov
and
stos
dec
std
loopw
push
in
adc
push
int3
ror
push
add
lahf
and
push
dec
leave
mov
push
pop
sbb
enter
mov
sti
pushf
jg
movsb
lret
sub
and
pop
mov
xor
shr
mov
test
push
lods
les
shlb
sbb
push
scas
leave
mov
add
test
dec
icebp
movsb
mov
addl
enter
jg
scas
xor
in
jo
repz
cmp
mov
aaa
notl
negb
outsb
mov
lahf
jg
aas
ds
jl
mov
imul
inc
adc
push
mov
mov
pop
jae
add
in
push
lock
hlt
jge
jns
jns
mov
cmpsb
mov
scas
push
and
xchg
ret
mov
or
daa
cld
cmp
in
lcall
js
add
movsl
aam
jecxz
push
aas
pop
mov
add
push
jae
sub
sahf
mov
sbb
push
pop
popf
aas
lahf
shl
test
inc
push
jno
stos
movsb
jne
lds
out
mov
movsb
idivb
xchg
and
xchg
jae
mov
mov
sub
mov
jae
dec
push
sub
imul
push
inc
xor
mov
xor
hlt
push
mov
rcrb
inc
inc
negb
stos
dec
or
iret
push
arpl
outsb
aaa
or
jp
daa
cld
xchg
lret
jle
repnz
jmp
out
adc
jmp
mov
inc
adc
sbb
enter
bound
mov
mov
sub
out
fldl
ljmp
mov
mov
xchg
popf
inc
sti
jge
into
sub
sub
rorb
and
push
pop
enter
lds
and
arpl
and
stos
and
sar
mov
test
or
cmp
out
inc
ficoms
aad
int3
mov
fbstp
mov
je
dec
mov
cmpsl
add
cmp
push
bound
xlat
ret
loop
or
mov
jb
iret
or
or
jecxz
pop
pusha
repnz
scas
and
into
add
in
lea
cwtl
cmp
movsl
jmp
outsl
pop
fwait
pop
ret
mov
and
int3
out
dec
out
push
and
imul
push
add
arpl
jge
in
add
data16
dec
sub
ret
jbe
outsl
cmp
jae
cmp
sub
les
imul
xchg
push
push
inc
dec
lcall
mov
push
mov
or
add
nop
movb
int
inc
int3
mov
push
lahf
mov
shr
or
cmc
sti
sub
ret
sbb
inc
pop
les
dec
mov
sbb
jbe
in
push
or
adc
fistl
jne
inc
cmp
inc
jne
sti
add
jb
mov
shrl
or
fwait
push
repnz
int3
xchg
je
mov
lcall
cmp
call
jo
jb
aaa
pop
stos
aam
jnp
iret
mov
inc
sub
push
xchg
sub
cs
icebp
leave
mov
jne
dec
cwtl
sbb
mov
mov
add
xchg
lds
cld
pop
sub
idivl
fadd
push
loopw
and
jae
int3
push
rcrb
psubusw
lock
cmp
mov
pop
or
iret
mov
loope
stos
sbb
ficoms
hlt
jg
pop
daa
sub
mov
xor
or
pop
adc
cmpsl
sbb
imul
fsubs
lret
push
xchg
mov
fldcw
outsb
xor
xchg
xor
push
mov
data16
rcl
pop
mov
into
sub
adc
mov
mov
push
jne
js
xor
mov
out
pop
sahf
cmp
iret
mov
cmpsl
cltd
sub
mov
stos
or
or
mov
repnz
mov
pop
mov
sub
pop
fistl
pop
push
orb
jg
adc
add
cmp
mov
dec
jnp
cs
pop
loop
pop
mov
jnp
xchg
and
jge
cs
loop
mov
loope
nop
lret
es
push
or
or
jno
stos
lods
cld
addr16
mov
fmull
inc
sbb
push
xchg
dec
jb
xchg
or
push
das
cli
arpl
cli
shlb
pop
fcmovb
fsubrl
ja
push
in
in
addr16
add
int
outsl
in
sub
pop
pop
mov
xor
adc
stc
adc
lahf
add
and
sbb
sub
mov
pop
or
pushf
inc
add
lods
cmp
int
sbbb
mov
adc
mov
cmpsl
and
sarb
outsb
mov
adc
fistpll
in
push
xor
mov
sbb
orb
popf
cmp
jecxz
sub
sahf
jle
icebp
sbb
push
xor
mov
cmc
enter
sbb
adc
pop
jbe
ret
xor
in
into
rcl
dec
dec
mov
aas
inc
aad
enter
xchg
pop
add
jne
sub
sti
js
ss
mov
daa
pop
ret
fwait
mov
test
sbb
in
adc
mov
xor
adc
pop
lahf
dec
add
jmp
push
out
das
ficoms
ret
inc
xchg
mov
xchg
insb
xchg
in
mov
hlt
sbb
inc
test
and
push
and
adc
fsubr
fbld
add
cmp
mov
shrl
mov
xchg
in
ret
stc
push
pop
sub
hlt
sti
sbb
inc
mov
imulb
and
jmp
mov
test
addr16
dec
icebp
lods
push
jge
pop
js
push
push
scas
mov
and
inc
faddp
and
aam
lods
mov
add
ja
sub
rcl
inc
cmp
out
mov
push
flds
cltd
sbb
cmp
leave
adc
shrb
or
aam
jmp
je
lea
repz
pop
data16
jmp
setns
mov
ljmp
push
mov
int
push
mov
aaa
and
int3
xor
mov
sbb
xlat
aas
jg
mov
jle
lea
insb
sti
fsub
jle
and
imul
mov
aam
leave
xor
in
andl
jecxz
dec
clc
pop
fwait
push
bound
test
sub
xchg
test
jnp
mov
mov
xor
sub
imul
xor
add
adc
add
cmp
ss
and
in
push
inc
push
aam
stos
inc
jnp
loop
std
cs
inc
and
push
pop
call
mov
lret
inc
push
decb
icebp
adc
adc
or
mov
int
cmp
icebp
rcr
daa
dec
dec
rcrl
adc
shrb
popa
adc
inc
pop
jp
push
or
int
jp
fdivrs
addr16
stc
jb
dec
enter
out
shl
das
lret
push
in
adc
xor
shrb
mov
push
mov
lcall
movsl
stos
push
inc
or
test
xchg
sbbb
cld
cmp
xchg
out
mov
inc
push
ret
sbb
insb
xchg
pop
repz
inc
fsubs
loope
loopne
xor
inc
insb
in
dec
xor
movsb
outsb
mov
jno
in
lahf
sbb
jo
cmp
cmp
mov
or
movsl
outsl
mov
fstp
insb
sub
nop
psadbw
pop
jecxz
xlat
fsubl
cmp
in
aaa
xlat
mov
jecxz
dec
mov
cwtl
add
ja
xchg
movsb
ss
push
dec
mov
rorb
adc
mov
or
bound
or
ds
or
mov
in
mov
stos
icebp
gs
cmc
scas
jb
mov
loop
fsubrl
sub
xor
cltd
mov
into
jbe
adc
mov
mov
aas
scas
in
jmp
pop
iret
and
inc
fidivs
xchg
and
sbbl
mov
jg
cmpl
mov
xchg
push
mov
loopne
int
jp
notl
mov
or
flds
jne
stos
fistps
inc
loope
in
sub
pop
data16
push
out
mov
pand
mov
or
mov
clc
shll
test
js
ret
dec
notb
lea
cmp
aas
push
add
lahf
ror
mov
mov
xchg
inc
push
xchg
push
repnz
sbb
xor
jo
sbb
lcall
push
mov
rcr
mov
jmp
and
pop
into
jecxz
scas
daa
and
inc
leave
dec
stos
loopne
mov
sbb
sahf
test
push
sarb
mov
add
imul
sbb
mov
mov
daa
imul
mov
adc
je
dec
hlt
inc
addb
dec
xchg
ret
add
pop
int
xlat
xchg
test
dec
repz
pop
neg
dec
and
jbe
pop
cmp
inc
out
jo
jo
xchg
ret
inc
push
xlat
sub
push
data16
pop
push
and
movd
popf
add
push
inc
bound
sbb
add
out
sub
sub
hlt
pop
imul
cmc
lods
inc
sub
sti
xchg
hlt
adc
xor
dec
xor
sub
sbb
ljmp
test
cmpsl
sbb
ret
sbb
popa
mov
stos
jns
jae
mov
test
stos
push
and
cmp
jle
and
into
cmp
push
xchg
aaa
pop
sahf
jg
jno
or
push
inc
dec
dec
js
mov
imul
leave
pop
dec
in
popa
xor
mov
ljmp
scas
jp
sbb
das
sub
mov
pop
daa
sti
inc
scas
lods
pushl
test
mov
rorl
mov
mov
or
xor
adc
mov
dec
pusha
sbb
and
jb
cmp
and
jo
dec
jbe
xchg
divl
mov
dec
pop
shll
movsl
inc
mov
jecxz
idivb
out
sub
xor
cli
inc
adc
pop
push
mov
test
out
popf
int
sub
iret
iret
sbb
xchg
leave
out
mov
mov
mov
and
in
jno
inc
mov
jle
mov
in
cli
daa
cs
pop
mov
jmp
sti
push
jb
mov
cld
sbb
pop
addb
aas
inc
ficoml
adc
sub
sbb
xor
dec
das
pop
popa
stos
adc
lock
daa
pop
arpl
aas
mov
mov
outsl
roll
sub
in
pushf
xor
xor
sti
cmp
push
sbb
icebp
fbstp
test
jae
mul
out
push
sbb
jae
call
sub
fimuls
fucom
fucomp
sti
into
or
movsl
inc
xor
mov
js
das
inc
int3
or
in
inc
lock
jmp
jge
aas
or
jo
pop
cmp
cwtl
fwait
add
sub
xchg
cltd
push
or
lret
jle
adc
test
mul
out
cmp
jle
jns
push
fstpl
movb
dec
icebp
push
rol
sub
cwtl
cmpsl
shll
pop
mov
out
arpl
or
test
cmp
push
fdivrp
xor
je
shll
jecxz
inc
ja
rorl
or
add
sbb
mov
xor
int
mov
arpl
jecxz
pop
pop
fcoms
popa
jecxz
les
leave
pop
push
test
mov
lds
rcrl
inc
xchg
dec
scas
ficoml
adc
and
fadd
and
ja
mov
sarb
jo
cmpsb
xchg
clc
das
mov
cmp
pop
adc
inc
cmp
and
pusha
inc
jbe
in
out
dec
jle
dec
lcall
cltd
or
mov
inc
cltd
xor
inc
mulb
xor
push
sub
jle
push
pushf
pop
cwtl
xchg
cs
inc
mov
fisubl
clc
fstl
ds
gs
in
popa
mov
push
pushf
cmp
jns
mov
daa
inc
cmp
mov
in
jno
push
jg
inc
inc
dec
in
scas
fstps
aaa
or
notl
daa
and
ret
jecxz
and
push
mov
push
sbb
xchg
and
push
je
in
add
push
rclb
jae
stos
inc
mov
mov
sub
dec
cwtl
mov
enter
loop
sar
pop
xchg
lret
mov
mov
clc
stc
xchg
inc
sub
stos
xor
ret
adc
jg
add
or
xor
or
in
dec
js
mull
inc
push
dec
repnz
adc
adc
xlat
sbb
and
mov
sbb
jo
push
jne
lret
xor
mov
loopne
filds
dec
mov
call
sbb
cmp
add
int
add
xor
inc
xchg
cli
dec
mov
test
pop
or
movsl
pop
pop
dec
scas
mov
add
ret
daa
mov
push
stos
push
mov
es
xchg
cmpl
loop
cmp
mov
jo
ficomps
and
or
fcmovu
adc
pop
mov
shll
shrl
or
insb
fdivp
stos
sbb
lfs
jg
in
cltd
jl
ret
fadd
mov
push
jp
adc
ljmp
adc
aaa
inc
aad
pop
cmp
add
clc
cmp
lret
shlb
enter
ret
repnz
orb
pop
xchg
out
xor
add
mov
add
cmpsb
lahf
call
push
pop
mov
repz
shll
mov
pop
xchg
mov
adc
outsb
mov
dec
adc
push
mov
xor
enter
mov
test
pop
cmc
sbb
push
jge
add
or
mov
mov
lret
adc
imul
adc
fdivrs
dec
scas
xchg
adc
fdivl
fcoml
xchg
fnstenv
xchg
out
in
add
sub
jnp
mov
push
or
push
mov
out
or
outsl
mov
sbb
mov
popl
sbb
mov
loope
jle
mov
sbbb
les
xchg
sub
fistpl
stos
mov
jg
int3
cmpsb
mov
push
loop
dec
bound
outsl
inc
lcall
rsqrtps
lods
lcall
ss
sbb
clc
and
stos
clc
ja
pop
in
mov
add
add
divb
pop
dec
fs
mov
push
rcrb
test
enterw
lret
imul
cmpl
loopne
xor
mov
push
inc
adc
mov
fdivr
add
cmp
inc
jnp
xor
lods
pop
dec
adc
push
mov
or
lahf
sub
popa
out
adc
push
les
test
mov
add
shr
adc
mov
or
out
xlat
add
adc
idivb
in
sbb
and
mov
xor
cmc
xlat
out
shlb
push
add
outsl
roll
inc
movsb
push
cmp
test
adc
lret
cs
jge
push
mov
sbb
lahf
int3
and
inc
push
xchg
je
pop
inc
mov
cmp
pop
jbe
jo
jecxz
fstl
aad
and
leave
imul
aam
popf
stos
out
stos
xor
mov
fstl
stos
pop
jl
shrb
outsb
mov
xlat
pushf
xorl
dec
and
repz
ja
add
movsl
ret
xchg
dec
arpl
mov
mov
mov
lods
aaa
push
sub
out
sbb
rorl
fstpt
cmpsb
push
lock
fbld
xor
xchg
mov
sarl
in
arpl
sub
rcrl
adc
and
loope
add
repz
hlt
out
cld
sub
push
lods
dec
stos
mov
xor
lods
test
rcrb
adc
cld
dec
lea
popf
or
ret
leave
push
sbb
pop
notl
xchg
jno
test
sbb
jg
sub
mov
cmp
sub
cmp
repnz
enter
adc
and
push
sub
inc
sbb
aas
sbb
or
dec
adc
aaa
repnz
lret
sbb
add
int3
push
or
pop
out
jmp
or
inc
inc
cs
aaa
mov
push
push
jnp
cmc
adc
pop
xchg
ret
inc
cmp
shl
in
xor
push
ret
mov
je
cmpsl
mov
addr16
jge
and
or
loopne
push
cmp
adc
xlat
push
or
inc
aaa
jle
hlt
bndstx
arpl
cmpsb
jmp
push
loop
lret
jbe
pusha
sbb
mov
jge
ss
xchg
sbb
fcompl
pop
mov
mov
push
mov
aam
add
sbb
inc
mov
insl
mov
insl
pop
fsubrs
aas
addb
mov
or
test
mov
mov
pop
push
ja
dec
lods
mov
add
fnstsw
addl
adc
mov
cs
lds
movsl
aas
fiaddl
fcomps
jno
arpl
fs
jbe
in
mov
nop
push
repnz
lahf
cltd
push
jbe
loope
std
jg
sbb
mov
inc
mov
sbb
pusha
dec
push
testl
leave
loopne
mov
mov
scas
adcb
dec
leave
sbb
je
into
cli
add
xchg
hlt
cmp
sub
in
fcomp
pop
daa
inc
je
adc
mov
mov
mov
mov
cld
xor
rol
imul
jno
mov
dec
je
in
cmp
or
add
jno
ja
shrl
outsl
add
stc
scas
mov
es
imul
add
call
dec
mov
movsb
xchg
subb
inc
loop
push
mov
and
dec
icebp
lcall
stos
sbb
js
mov
jbe
push
adc
shl
lret
mov
sbb
push
and
sbb
loop
popf
cs
lock
das
gs
or
movsl
push
cwtl
sub
ljmp
rcr
dec
popf
dec
lahf
lds
mov
addb
rcl
pop
push
xchg
int3
mov
add
dec
js
cmpsb
outsb
xorb
pop
jne
jns
sbb
loop
je
pop
and
cli
inc
dec
jmp
adc
adc
add
and
sbb
mov
push
and
jnp
std
in
fs
dec
adc
pop
sarb
add
mov
push
fldcw
xor
insb
hlt
jecxz
sub
cmp
push
xor
and
cmp
dec
lahf
icebp
lahf
mov
mov
dec
nop
cwtl
add
stos
iret
push
ret
push
adc
sti
and
push
ret
inc
sub
xor
push
ret
lods
enter
je
cmpsl
mov
or
xchg
sahf
push
popf
rclb
mov
push
push
aaa
mov
lods
lods
add
mov
pop
xor
test
test
push
out
push
out
or
movsl
cmc
push
cmp
das
ja
fs
insb
mov
cmpsb
adc
cmp
aas
adc
add
sbb
jb
addr16
out
and
gs
jl
dec
ja
xlat
lret
out
and
je
jno
cli
mov
stos
stos
rcrb
adc
push
dec
mull
mov
inc
adc
lahf
inc
andb
mov
pop
std
test
stos
mov
ljmp
inc
testl
pop
clc
push
bound
lahf
cmc
mov
jg
xor
subb
mov
cmp
cmc
xor
ja
sbb
fcoms
and
test
pop
out
std
push
or
and
bound
push
aaa
int3
adc
xchg
test
add
nop
pop
pop
sti
repnz
outsb
mov
aas
loope
out
mov
outsl
sub
gs
xchg
sbb
sahf
cmp
mov
xor
mov
xchg
outsb
adc
cmp
mov
adc
aaa
int3
jg
cli
and
pop
mov
repz
aaa
aaa
sahf
push
inc
out
test
xor
shlb
mov
jg
movsl
and
cmpsl
gs
xchg
inc
pusha
loopne
push
mov
jnp
pop
pusha
lcall
enter
lahf
xlat
jb
adc
mov
es
cmp
sbb
cwtl
dec
mov
lods
rcr
test
dec
xor
xchg
sti
push
and
sub
jg
push
xor
xor
cmpsb
out
ret
push
test
dec
inc
mov
std
sbb
out
or
xor
inc
mov
push
xor
mov
push
pop
mov
stos
aaa
sub
and
cmc
mov
pop
cld
arpl
fcomps
popf
out
and
and
mov
dec
sbbb
xchg
jmp
or
nop
pop
data16
mov
fldcw
mov
jo
jle
arpl
fstpl
pop
ret
pop
mov
flds
call
es
enter
mov
jbe
inc
call
cmpsl
test
repnz
inc
xor
outsb
in
sti
cmpsb
sbb
xlat
inc
sub
test
es
test
popa
add
mov
ja
arpl
mov
mov
mov
jbe
imul
fstpt
lods
adc
clc
jo
pop
mov
pop
mov
pop
add
adc
jb
icebp
push
dec
jmp
jno
hlt
insl
push
cmp
cmpsb
sbb
sub
pushf
jle
ret
push
push
scas
sbb
arpl
dec
push
dec
lock
leave
pop
das
out
fnstsw
ljmp
push
push
sub
ja
clc
push
mov
ja
fs
mov
stc
out
aaa
mov
jae
xchg
pusha
loope
ja
mov
adc
jnp
nop
pushf
lcall
lret
rsm
xchg
out
test
adc
push
xor
clc
in
jne
loop
scas
xchg
fwait
jle
mov
aam
in
jnp
enter
pop
jge
out
push
aaa
fisubs
mov
mov
sbb
jmp
xor
inc
xchg
push
popa
pop
mov
imul
sub
xor
pop
ss
call
dec
es
inc
loope
sub
les
inc
bound
xchg
or
sub
pop
rolb
movsl
sbb
lock
or
int3
leave
mov
adc
cmp
add
cmpl
pop
mov
mov
xor
scas
aam
mov
cmp
test
inc
xor
sarl
add
jge
xor
shrl
out
test
into
fs
fs
iret
cmp
adc
jns
rcrb
mov
enter
aaa
mov
sti
pop
outsb
and
lods
movsl
fbstp
push
push
call
out
rcl
outsl
mov
jno
les
mov
bound
sbb
cmp
sub
fcompl
push
or
mov
ret
sbb
addr16
and
je
push
pop
aaa
or
xchg
mov
jae
push
cli
xchg
aaa
cli
movsb
imul
popf
cmp
pop
mov
add
into
cmc
stos
mov
jno
sub
cmpsb
xchg
or
ljmp
testb
add
test
outsb
aas
xchg
scas
mov
push
jbe
fisubrs
or
xchg
push
push
and
ret
fsubrl
mov
mov
cmc
jp
lods
push
inc
pop
in
cmc
mov
test
hlt
xchg
jge
adc
test
xchg
pop
fbld
cmp
mov
lods
push
sbb
sbb
mov
daa
mov
adc
movsb
movsb
loopne
push
cwtl
daa
clc
gs
sub
push
sub
mov
cmp
dec
inc
test
mov
setge
jl
fstpt
loopne
test
mov
add
mov
add
repz
xor
jmp
cmp
mov
mov
pop
add
cs
mov
jl
je
enter
rcrb
mov
dec
ss
dec
les
in
xchg
idivb
ret
xor
dec
cld
sub
add
filds
adc
push
xor
inc
sub
dec
jle
pop
into
xchg
xor
inc
or
mov
rorb
jl
mov
sarl
push
pop
repz
ret
mov
andb
vpand
dec
cmp
push
pop
dec
pushw
mov
fwait
dec
mov
jle
jg
inc
pop
sbb
scas
dec
jb
sti
add
inc
xchg
movl
adc
fisubrl
daa
dec
xor
daa
decw
pop
xlat
push
aad
pop
lcall
in
out
out
jg
cmp
popf
sub
xchg
sub
ret
jmp
rol
test
pop
xor
mov
mov
mov
out
hlt
push
rcrb
pop
jne
movsb
xor
sti
xchg
test
fs
test
jb
data16
ficoms
jmp
jmp
pop
testb
jle
or
loope
stos
divb
add
jl
cli
mov
sbb
inc
subb
add
ljmp
scas
das
stos
loopne
add
jg
dec
int3
hlt
out
lods
mov
push
pop
out
std
pop
lock
push
jg
mov
lret
ja
adc
fstps
gs
and
sub
pop
jo
aaa
add
in
enter
cmp
outsl
movsl
dec
and
icebp
dec
std
inc
es
dec
in
or
mov
pushf
int3
lret
int
xchg
bound
sub
dec
push
imul
mov
inc
mov
push
mov
imul
loopne
sti
xchg
xor
adc
fwait
or
mov
cmc
xchg
push
in
cwtl
int3
rorl
outsl
fists
call
xchg
sbb
or
mov
xor
stos
push
cmp
jmp
les
pop
fimuls
lea
cmp
cmp
sub
repz
mov
mov
cwtl
add
or
or
mov
sbb
cld
ja
cmp
pop
test
pop
sub
aad
test
adc
stos
mov
jno
int
cmpsb
cmp
loopne
outsl
cwtl
cmc
movsb
adc
mov
scas
and
mov
pop
hlt
add
jmp
push
sub
and
mov
jl
das
sub
cmp
aaa
pop
std
pop
outsl
mov
lods
jecxz
push
mov
cmp
pop
xor
lods
shll
mov
sahf
cmc
or
jp
in
cmpsb
push
cmp
pushf
rcrl
adc
mov
pop
adc
lahf
inc
aas
ret
jl
mov
sub
sbb
mov
sbb
push
cmc
push
ror
in
cli
sub
or
in
out
push
std
jno
jmp
scas
test
inc
lods
adc
cmp
jbe
mov
dec
push
and
add
cli
cs
lret
xchg
mov
add
mov
test
sarl
pop
push
inc
jl
pop
adc
cmp
inc
pop
aas
adc
std
pxor
xor
lret
orb
adc
test
jecxz
movsl
les
daa
and
mov
or
add
std
stc
andl
fisttpll
ret
shlb
inc
push
push
cmp
ffreep
inc
insl
cli
jbe
xchg
aam
add
jbe
jbe
xchg
add
fs
push
mov
add
push
movsl
lods
adc
outsl
movsl
mov
sub
or
fdivrs
jp
test
jb
and
mov
int3
and
dec
in
movsl
push
ljmp
cmp
sbb
and
push
push
xchg
adc
xchg
xor
jbe
jns
ret
xchg
js
sbb
ret
enter
or
cmpsb
cmp
dec
sbb
jno
or
addr16
wrmsr
cmpl
jo
dec
mov
pop
adcl
jns
dec
adcl
xor
pop
repnz
rcl
repz
xchg
int
push
cmpsb
fldcw
outsl
xchg
pop
aas
inc
xor
imul
inc
pop
mov
addr16
mov
lret
xchg
xchg
insl
lods
xchg
out
aas
scas
loopne
arpl
push
add
ret
and
repz
push
ret
jb
stc
stc
mov
mov
rol
pop
testl
add
ret
insl
jle
rcr
pop
stc
mov
popl
mov
pop
mov
sub
inc
xlat
std
mov
in
cmp
cmp
ret
push
jb
addr16
call
fldt
stos
into
cmpsb
push
and
icebp
xchg
pop
xor
les
mov
or
mov
icebp
and
test
popa
aas
jecxz
sahf
push
data16
out
pop
dec
mov
xchg
std
inc
and
js
mov
xchg
xchg
out
sti
shrl
jno
inc
lods
daa
ret
sarl
rcll
adc
enter
add
popa
popa
sub
or
and
jg
jmp
clc
mov
sub
out
or
mov
mov
aad
bound
xor
in
sbb
insb
nop
jecxz
sbb
cltd
ja
inc
xchg
and
aaa
insb
insb
test
cmp
xchg
pop
push
push
inc
inc
sti
or
in
jle
addb
arpl
lods
ret
xor
pop
push
frstor
gs
pop
adc
shrb
cs
sti
imul
pop
inc
addr16
daa
or
xchg
dec
in
mov
repz
pop
ficoml
xchg
dec
xlat
xchg
lock
and
push
movsb
negb
mov
fsubrl
mov
neg
lds
int
sub
ret
mov
mov
test
call
movsb
xchg
xchg
sysexit
loop
cld
lret
fildl
leave
movsb
in
lods
and
xor
iret
add
in
jb
movsl
dec
pusha
pushl
or
fidivl
pop
cmp
cltd
and
sti
stos
dec
aam
xchg
ret
stc
aad
adc
lea
mov
mov
loop
mul
das
and
mov
jmp
cs
mov
xor
mov
rcll
fcmove
xchg
hlt
ret
dec
dec
xchg
or
repnz
inc
and
xchg
outsb
push
mov
gs
outsl
pop
cmp
mov
xchg
jp
inc
adc
imul
jecxz
repnz
inc
repnz
std
test
lcall
sub
sbb
pop
movl
int3
push
sbb
jg
lock
push
jle
adc
mov
mov
jl
dec
lcall
pop
out
fwait
mov
xchg
shrl
fcmovu
js
xlat
popa
arpl
lret
sbb
mov
mov
cmc
xor
mov
jns
int3
aas
loope
xor
shlb
jp
shl
mov
out
lcall
mov
test
and
xor
xchg
mov
sub
pop
popa
mov
jno
or
adc
cltd
lret
pop
out
xor
xchg
stos
fcomp
mov
out
push
push
insb
bswap
arpl
scas
inc
sub
lods
or
dec
jo
aam
out
xchg
jo
sbb
stc
aad
std
popa
or
adc
push
mov
jg
pop
shll
jmp
xorl
xchg
dec
mov
test
testb
scas
add
sarb
xchg
jg
and
les
ret
mov
cs
pop
mov
adcb
fwait
cmp
roll
repnz
in
xchg
cld
leave
inc
add
jb
fprem1
pop
mov
jnp
jecxz
mov
sahf
shll
jae
stc
popf
mov
je
fwait
pop
add
mov
xchg
push
insb
scas
xchg
inc
call
lds
data16
sbb
mov
lods
push
jns
out
dec
decl
jae
testb
je
adc
xchg
cmp
mov
outsl
hlt
mov
in
or
pop
and
and
fwait
jmp
jbe
ret
cmp
mov
mov
into
dec
sub
mov
add
cmpsb
jp
lcall
fmull
push
push
rclb
fbld
dec
dec
sub
dec
sub
out
push
aam
les
or
scas
or
shl
lock
mov
shlb
test
pop
fildll
je
cmp
fidivrl
adc
ds
jnp
lds
outsb
mov
add
cmpsl
mov
inc
jne
pop
sub
xor
jno
cltd
pop
lcall
leave
sbb
divl
es
lods
add
pop
and
mov
xor
or
lds
fdivrl
mov
sub
adc
aas
jns
das
push
inc
fldl
mov
test
push
call
add
jno
mov
addl
mov
add
out
pop
je,pt
popa
into
cmpsb
cli
sub
sub
lods
mov
fildl
or
iret
or
xor
xchg
push
roll
ja
sub
push
sbb
pop
jno
cmpsl
pop
aam
xor
test
out
scas
in
hlt
mov
aaa
jl
out
inc
pop
mov
repz
adc
xor
orl
jmp
pcmpgtb
adcb
popa
mov
js
outsl
mov
mov
in
pop
sbb
negb
testl
aaa
dec
mov
fucom
adc
xor
fidivrs
cmp
arpl
push
pop
inc
cld
rcr
push
cmp
cwtl
jae
fistps
or
clc
adc
roll
out
push
push
mov
jmp
cmpsb
aaa
mov
or
sbb
pusha
or
and
jge
imul
cs
jg
push
dec
aad
inc
cli
sbb
int3
dec
fnstsw
das
jae
repnz
pushf
ds
shrb
sbb
push
jne
mov
sbb
push
pop
imul
faddl
push
cmp
cmp
jg
mov
inc
test
aam
idivb
fiadds
fs
fnstenv
int
inc
mov
lret
add
mov
into
sbb
and
test
and
out
sar
inc
std
mov
decb
mov
mov
mov
and
cltd
pop
shrb
jno
aam
mov
sub
out
adc
sub
pop
repz
ret
test
ret
mov
dec
sti
ds
aaa
imul
fcomps
add
adc
popa
fnstenv
negl
jo
jae
or
movl
or
fimull
hlt
ficoml
pop
push
sarl
mov
bound
push
lods
es
sahf
push
enter
out
sub
mov
ss
xlat
cmp
push
sbb
sbb
push
divb
cwtl
push
sbb
rclb
inc
or
inc
aas
mov
pop
fimuls
mov
out
jae
call
aas
sub
clc
xor
std
or
dec
shll
ficoml
or
cmp
fwait
xchg
scas
ljmp
out
cmp
xchg
jnp
push
js
cmpsl
daa
jo
mov
enter
sbb
stc
fmul
push
je
jo
imul
xor
sbb
stos
cmp
fcom
mov
jno
mov
cs
and
xor
pop
mov
mov
xchg
push
mov
dec
push
dec
fmull
je
lea
repnz
ss
iret
in
cld
pop
mov
xchg
mov
cmp
lods
mov
fildl
fimull
xchg
outsb
ss
jae
add
mov
cmp
xchg
add
movsb
cmpb
adc
jge
in
mov
repz
and
outsb
pop
loope
xchg
add
or
and
mov
adc
test
jo
xor
pop
rclb
mov
xchg
faddl
inc
mov
es
fcoms
jge
sbb
sbbb
adc
add
imul
mov
dec
arpl
and
mulb
ror
jecxz
clc
jnp
cli
push
mov
enter
push
push
inc
lret
cmp
xchg
pop
or
jg
jge
mov
in
addr16
sti
mov
add
js
pop
loop
mov
incl
sub
xor
pop
adc
jnp
mov
mov
scas
scas
pop
lods
push
add
or
inc
movsl
and
cmp
shl
xchg
cmp
inc
movsl
add
inc
pop
nop
insl
xor
sahf
adc
pop
pop
xor
jae
cmpb
push
leave
nop
mov
push
xor
loopne
repz
inc
add
mov
adc
fdivrs
aam
push
repnz
adc
fbstp
bound
push
sbb
rclb
popf
xor
xlat
and
mov
outsb
push
inc
das
jle
cmp
or
ss
loopne
cmp
mov
inc
lcall
push
js
and
loope
sti
sub
mov
jbe
push
mov
push
jmp
jg
aaa
mov
cmp
testb
push
icebp
repnz
cs
fwait
gs
imul
mov
push
in
popa
lods
adc
pop
mov
pop
jbe
flds
dec
push
mov
hlt
inc
clc
js
xchg
fsubs
andb
push
stos
cmc
ror
pop
mov
stc
repz
mov
push
iret
movsl
jle
mov
divl
sub
push
fwait
xor
mov
out
gs
es
movb
jns
popa
xchg
scas
cs
sub
mov
jnp
dec
je
jne
loopne
adc
lahf
and
sub
mov
sti
ss
movsb
cmpsb
lret
jbe
pushf
fnstsw
in
lock
add
pusha
fnsave
aam
aaa
jmp
lock
aam
pop
push
aaa
icebp
pop
insl
fimuls
mov
mov
int
push
add
popf
pusha
lcall
std
lret
in
pop
sbb
pop
mov
add
dec
inc
push
cltd
sub
push
icebp
xchg
sbbb
mov
psrld
jne
pop
and
scas
test
pmulhw
xchg
outsb
vpshad
lods
imul
mov
dec
outsl
mov
pop
sub
orb
fdivrl
jbe
mov
mov
and
sti
dec
cld
lock
jno
mov
mov
add
and
aam
xor
popa
push
divl
inc
cltd
cmp
jns
clc
pop
or
ljmp
dec
sbb
xchg
in
pop
je
cmpsb
mov
push
inc
mov
fstps
cmp
inc
cltd
or
mov
shlb
test
inc
add
aad
jecxz
mov
xchg
inc
jbe
hlt
xchg
cli
pop
add
mov
cmpsb
lock
xor
cmp
aas
adc
jge
xor
movsb
inc
in
mov
shrb
sbb
nop
nop
test
rcr
scas
xchg
fwait
movl
jl
sti
mov
jns
pop
and
inc
ffreep
cmp
mov
adc
insb
cmp
fs
sub
xchg
inc
movsl
add
xor
sbb
fldenv
popf
push
jo
in
mov
pop
es
mov
fwait
inc
aas
popa
jae
sbb
add
rcll
xchg
jmp
pop
out
add
mov
mov
fidivl
ljmp
push
sub
mov
icebp
out
das
ja
inc
fs
push
idivl
inc
out
adc
pushf
sub
mov
bound
pop
movsb
jno
fiaddl
add
push
fistpll
test
fcoms
test
loope
cld
repz
in
sbb
ljmp
inc
das
sub
out
addr16
data16
mov
sti
pop
fsubrp
je
mov
mov
lahf
in
pop
jae
dec
lahf
cmpsl
add
lret
xchg
fdivrs
mov
sahf
fcomp
push
and
sbb
popa
pop
rorl
sbb
cwtl
loopne
cmp
stc
dec
push
dec
hlt
and
dec
cmp
mov
mov
add
jecxz
sbb
sar
inc
enter
shrb
dec
xchg
jl
inc
stos
iret
sub
fadds
pop
je
sbb
xchg
jp
mov
inc
sbb
cld
and
popa
cli
out
in
rcll
fiadds
lods
inc
xor
xor
xchg
hlt
addb
and
inc
xchg
inc
lods
ja
sbb
and
xchg
movsl
clc
mov
inc
jmp
fidivrl
scas
loop
xor
stos
xor
mov
out
xor
cmc
mov
xor
jp
sub
jnp
loope
outsb
jnp
push
icebp
subb
dec
mov
jmp
rorb
ret
lret
dec
pop
pop
mov
mov
prefetchwt1
insl
pusha
fwait
sub
testl
popa
shlb
sahf
lock
dec
inc
jge
imul
ds
push
mov
adc
cmp
or
pop
cmp
mov
and
pop
pop
push
mov
pop
dec
scas
xchg
imul
addb
mov
std
insb
nop
rcr
aad
xchg
jg
bound
mov
sub
pop
xchg
xchg
or
add
adc
scas
movb
negl
mov
fiaddl
mov
pop
stc
xor
imul
aas
stos
xchg
std
ret
shl
add
inc
arpl
cwtl
jo
lahf
inc
jp
and
add
mov
pop
or
add
pop
adcl
inc
leave
movsb
sbbb
dec
movsb
pop
or
pushf
xor
leavew
call
jno
mov
adc
dec
in
std
mov
enter
sti
pop
push
ja
and
sbb
sub
out
fistpl
dec
lcall
shlb
loop
fidivrl
out
insl
jl
fadds
pop
xor
idiv
leave
mov
jmp
imul
ljmp
mov
data16
pop
test
push
ss
cwtl
xorl
or
pop
mov
testb
push
pop
add
lahf
mov
mov
ret
adc
or
ljmp
shlb
loop
or
mov
push
loop
icebp
mov
aad
icebp
lahf
ja
repnz
fstpt
sub
rcr
insb
loop
mov
or
ret
cmp
or
out
pop
xchg
cli
push
pusha
mov
loopne
ret
into
add
in
xchg
enter
mov
xchg
sbb
les
pushf
fstpl
pushf
addr16
sub
rcrb
jb
movsb
stos
in
jmp
nop
test
xor
mov
lahf
xchg
sbb
lret
mov
mov
inc
xchg
insb
dec
out
sahf
ljmp
ret
xor
imulb
xchg
dec
xchg
ret
push
popa
rclb
mov
xor
cmpl
inc
inc
outsb
xlat
lds
stos
rcrl
sbb
xchg
adc
leave
imul
pop
and
testb
outsb
push
xchg
jns
adc
push
in
inc
mov
test
mov
fs
lret
and
in
repnz
dec
es
add
call
rorb
cs
ficoms
sbb
loop
gs
scas
into
adc
adc
and
jp
ret
mov
pusha
and
in
cmpsb
push
and
repz
lock
inc
dec
mov
inc
jl
jne
imul
cmp
lock
enter
popf
mov
out
dec
xchg
decl
cmp
pmaxub
das
pop
mov
add
aam
std
sbb
push
adc
int
jbe
mov
push
mov
std
pop
inc
cmp
sbb
adc
xor
hlt
test
loopne
iret
loope
int3
aaa
or
sbb
scas
loopne
cmp
push
xchg
lods
scas
dec
test
or
add
popa
jo
jmp
adc
mov
std
je
inc
les
push
push
fistps
icebp
lods
cmpsl
int3
inc
mov
mov
mov
dec
xchg
jno
lods
and
cmp
mov
push
aam
or
movsl
mov
mov
push
insb
out
test
mov
and
xor
add
inc
xor
fwait
pop
loop
jp
xchg
test
mov
filds
sub
dec
dec
push
cmp
jbe
int3
lret
mov
decb
lret
cld
cwtl
fs
push
push
dec
int3
push
movsb
inc
pushf
sub
xchg
leave
sbbb
cmp
add
cltd
xchg
or
push
sub
mov
xor
les
jne
int3
lahf
data16
ss
movsl
cmp
stc
pop
xchg
in
cmp
xlat
pop
and
dec
jecxz
je
and
cmp
push
cwtl
push
inc
sbb
imul
popa
cmp
iret
test
mov
mov
sbb
mov
cmp
mov
pop
lret
sbb
cmpsl
insl
je
add
sbb
mov
jbe
jne
cld
xchg
adc
mov
popa
imul
mov
mov
sub
out
or
xor
aad
mov
mov
dec
scas
push
mov
add
imul
jecxz
cwtl
inc
les
sbb
xchg
ljmp
mov
pushf
js
bnd
adc
mov
movsl
adc
sbb
jns
push
jp
mov
je
add
add
add
mov
sbb
pop
in
mov
push
xor
push
jge
or
shll
xchg
dec
mov
negb
lea
xor
shrb
fs
shrl
je
call
dec
push
out
lcall
xchg
jmp
mov
xorb
cmpsl
arpl
stc
dec
je
pop
pusha
inc
icebp
popf
movsb
pop
ret
or
test
int
fstp
mov
sub
sbb
test
inc
movsb
mov
sub
adc
mov
lcall
add
mov
arpl
movsl
repz
in
sti
inc
pop
sbb
cs
stos
sbb
in
in
pop
pop
push
dec
xor
add
cmp
lahf
mov
test
hlt
xchg
jae
inc
scas
inc
fucomip
xor
xchg
mov
dec
and
call
and
xor
cmpsb
mov
add
ss
push
sti
cmpsl
sbb
mov
cltd
insl
mov
push
pop
insl
xchg
mov
push
sub
std
rorb
js
jno
outsb
int
dec
xchg
jmp
lods
jecxz
or
sti
jle
sub
cld
out
jae
call
in
fcos
iret
lods
int
adc
add
jge
pop
popa
push
push
ds
ret
jmp
mov
mov
add
jge
inc
movsb
dec
push
js
pop
mov
or
cmp
push
lea
pushf
cli
int3
clc
inc
add
dec
jae
in
jnp
xchg
pop
push
inc
repnz
lods
or
push
testl
sbb
or
mov
call
cmp
mov
push
push
loop
and
jecxz
mov
cli
stc
cmp
orb
int
sub
adc
lahf
add
dec
bound
fs
pop
sbb
or
push
xchg
imul
dec
mov
push
mov
mov
out
jno
mov
scas
shrl
out
adc
rcl
pop
mov
mov
cmp
and
mov
mov
scas
imul
jno
movsl
adc
jns
fstpt
fisttpl
insb
sbb
movsl
aad
pushf
in
int
mov
push
idivl
lcall
pop
cld
mov
je
nop
xchg
adc
push
mov
into
imul
aas
shll
test
rcll
addr16
add
ja
movsl
xchg
roll
out
xor
pop
lret
aas
dec
leave
mov
aas
fadds
dec
or
jle
incb
push
xor
test
cmp
insl
movsb
or
aas
pop
dec
mov
inc
and
scas
fdivrp
fxch
inc
movsb
xor
iret
fnstenv
pop
adc
enter
or
push
enter
scas
divl
movsl
aaa
xor
insl
pop
cmp
or
inc
jbe
popa
xchg
xor
or
push
std
mov
pop
ret
adc
add
push
cmp
popa
mov
push
push
pushf
pop
cmp
pusha
notl
test
pop
mov
lea
mov
ss
adc
fwait
nop
jb
sbb
xchg
std
cmp
adc
loope
push
es
sbb
pusha
xchg
sub
mov
pop
rol
xorl
pop
rol
ljmp
pushf
cmc
ret
clc
out
outsb
dec
ret
fistpll
test
cmp
and
adc
and
sti
ucomiss
shll
int3
add
xchg
pop
add
sub
dec
push
push
addr16
mov
mov
stos
mov
lds
stc
or
xchg
and
mov
sub
test
xchg
ljmp
clc
stc
push
lds
hlt
and
pushf
inc
mov
or
jp
pop
notb
fld
cmp
xor
sub
adc
add
lds
or
sbb
ret
jmp
arpl
std
int3
inc
push
add
xchg
cmpsb
mov
cwtl
jb
mov
jae
mov
mov
xor
xor
test
xor
push
and
sbb
mov
cmc
sub
sbb
lods
icebp
cmpsl
mov
inc
lods
lods
sbb
loop
mov
stos
jp
ss
loope
dec
xor
rcrb
xor
pushf
ss
test
pop
cld
jle
cli
and
mov
pop
jns
adc
inc
sub
negb
hlt
cltd
into
xor
pop
pushf
inc
mov
sub
xor
sbb
xchg
add
rclb
test
ss
inc
lods
je
dec
lods
mov
daa
aam
sbb
or
ret
mov
pushf
push
repz
testb
pop
mov
xchg
shlb
push
adcl
pop
rcrb
cmpl
test
sbb
aaa
add
inc
mov
or
fwait
sub
cmp
dec
popf
lret
pop
cwtl
rorb
push
pusha
jns
push
nop
roll
or
lcall
sbb
in
mov
in
or
stos
add
sbb
sbb
push
xor
mov
outsb
push
gs
jecxz
cwtl
clc
jo
dec
jns
push
add
stos
cmc
adc
push
cwtl
mov
cmpsl
cmpsl
hlt
push
cmp
data16
loope
pop
daa
mov
xchg
push
ss
mov
scas
out
and
xchg
lods
pop
cmp
and
jbe
xchg
cli
fsts
call
and
jae
xor
sbb
inc
popf
mov
in
insb
push
imul
mov
gs
in
inc
mov
mov
test
subl
push
out
and
movsb
js
jo
call
and
xor
adc
xchg
aas
mov
popl
sbb
outsb
mov
mov
ss
in
stos
movsl
les
stos
lahf
fs
cld
mov
movsl
jecxz
xchg
xchg
clc
cs
pop
lea
lods
shll
sbb
inc
mov
popa
jle
xor
out
ljmp
mov
xchg
sub
aam
mov
mov
lcall
sbb
adc
or
cmp
mov
loopne
imul
cmpsl
sbb
dec
sar
mov
out
das
and
push
cld
inc
iret
lods
setge
iret
std
inc
shlb
inc
sub
sub
sub
adc
imul
push
andl
ja
sub
sub
dec
xchg
push
and
jns
mov
mov
in
dec
loope
push
inc
sub
cmp
push
add
das
push
jno
int
inc
mov
dec
cmp
mov
movsb
adc
sbb
pop
ljmp
push
push
faddl
cmpsl
enter
lods
push
mov
popa
push
ret
jge
xchg
ror
addr16
cmc
movsb
repnz
jmp
fs
ret
mov
mov
test
testl
fwait
mov
push
push
sbb
xor
push
dec
loopne
or
mov
and
jle
fldl
je
xor
loopne
adcl
out
mov
or
lcall
mov
shll
jp
or
shrl
cmp
pop
clc
mov
or
arpl
adc
jb
cld
mov
sub
clc
maskmovq
idivl
push
inc
int3
inc
inc
adc
xchg
aas
ret
mov
call
cmp
add
je
mov
mov
mov
jns
cltd
loope
xchg
rclb
rcrl
cmp
aaa
negl
je
dec
add
adc
lret
repnz
push
jmp
or
inc
inc
cmp
outsb
jne
arpl
pushf
cmp
das
mov
stos
mov
mov
lret
inc
pop
xor
sti
in
inc
and
ds
and
add
cmp
sbb
les
mov
pop
lahf
and
scas
push
je
incl
xchg
pop
mov
lods
insl
fwait
dec
and
xlat
add
inc
dec
lret
cmp
popf
adc
ret
xor
inc
test
and
add
sub
xchg
cmp
xchg
out
repnz
scas
adc
push
or
pushf
leave
push
imul
insb
icebp
mov
cmp
sahf
xchg
mov
popf
add
jecxz
imul
jno
xlat
inc
cmp
adc
ljmp
pop
mov
or
loop
xor
dec
ret
push
nop
and
fxch
vpcmpgtd
push
cmp
cmc
call
aaa
cmp
mov
push
repz
je
int3
test
mov
loop
jns
addr16
out
sub
inc
jno
imul
in
sub
leave
xchg
pop
or
outsl
movsb
lcall
cmp
adc
pop
adc
xchg
je
pop
fidivs
nop
aaa
imul
in
inc
repz
cmp
xchg
loop
out
mov
push
fisubrl
inc
arpl
pushf
aam
movb
inc
mov
cmp
rorb
mov
or
lds
xchg
clc
shlb
xorb
mov
je
sbb
adc
sub
xchg
or
pop
push
shrl
lret
movsb
inc
mov
bnd
ss
out
push
loop
arpl
xor
dec
xor
dec
ja
aas
or
inc
xor
push
pop
jmp
xchg
xor
les
jmp
jnp
push
sub
jnp
phsubsw
cmpsb
dec
ret
mov
fisttps
icebp
mov
test
mov
scas
out
enter
repz
mov
dec
and
lods
in
xchg
mov
repz
ja
fcoml
mov
fdivrs
mov
es
negb
hlt
dec
add
jmp
movsb
sbb
xor
push
and
repz
jno
icebp
sub
clc
jns
imulb
or
lret
sub
insl
fcomp
mov
cli
test
mov
mov
jecxz
in
and
mov
xor
or
mov
xchg
pop
push
lcall
mov
sbb
jmp
cmpl
rolb
push
das
and
and
jge
jp
push
push
add
leave
test
lea
add
cmpsl
mov
in
lahf
dec
in
mov
push
sub
xor
or
iret
adc
adc
repz
adc
xchg
inc
sub
push
dec
xchg
add
cmpsl
mov
dec
push
dec
mov
sub
adc
jle
enter
test
mov
adc
cmp
add
sbbl
inc
cmp
push
and
mov
push
cmpsl
or
mov
sbb
cwtl
fs
pop
fsubs
mov
dec
mov
std
and
int
mov
out
out
in
or
dec
pop
mov
push
push
popf
fistl
mov
pop
jmp
dec
jns
frstor
mov
jne
aaa
sbb
loop
or
testb
pop
mov
loope
lock
popf
dec
or
push
mov
mov
loopne
rorb
in
pop
dec
int
mov
pop
xchg
pop
lcall
sahf
mov
xlat
loop
movsl
sub
cmp
dec
sti
call
icebp
xchg
xchg
mov
mov
pushf
lret
aam
xor
add
aam
fisttpl
out
push
xchg
adc
lcall
cltd
adc
into
imul
mov
push
dec
jp
pop
dec
xlat
stc
dec
flds
neg
or
cmpsl
mov
ljmp
in
ja,pt
movsl
inc
add
stc
leave
add
or
loope
xchg
insl
sti
cld
outsb
arpl
adc
add
lods
push
int
shll
scas
sti
repnz
fwait
int3
mov
roll
pop
push
test
jo
sbb
int
mov
dec
div
scas
dec
and
out
add
sar
xor
stos
lret
loop
clc
lods
add
int
adc
movsl
int3
jnp
and
adc
clc
scas
nop
dec
fcmove
adc
xchg
push
loop
ja
or
xchg
scas
outsb
ss
aad
fwait
cli
cltd
push
xchg
sbbl
stos
lea
sbb
fcoml
imul
mov
xor
dec
test
insl
inc
pop
loop
sbb
inc
lcall
test
aad
push
popa
sar
mov
repz
pop
aas
pop
fisubrl
jb
mov
dec
leave
inc
mov
mov
fldt
and
les
popf
outsl
push
pop
mov
insb
pop
call
int3
mov
ss
dec
mov
inc
xor
adc
add
out
into
inc
adc
lret
inc
xlat
dec
int3
mov
pop
es
push
jecxz
jnp
mov
cmp
sbb
int
int3
dec
xchg
ja
addr16
dec
insb
push
hlt
mov
push
lahf
cmpsl
mov
or
mov
pop
fldcw
jp
outsb
insl
or
imul
loope
sahf
adc
add
in
aaa
mov
addr16
into
mov
xchg
scas
add
xchg
lock
inc
push
mov
sbb
pop
xlat
out
aaa
ljmp
fs
xchg
fildl
iret
inc
jo
ds
pop
jecxz
cli
and
stos
xchg
cli
xchg
cmc
cmp
je
aas
lcall
es
mov
ja
lret
loope
lret
xchg
movsb
das
adc
pop
cmc
add
loopne
movsb
dec
sub
ja
lock
mov
adc
push
adc
out
xchg
les
dec
mov
mov
rcl
bound
scas
jno
ret
and
stc
xchg
call
inc
add
sbb
inc
repnz
adc
fiaddl
sbb
cmp
jmp
gs
xlat
scas
inc
cmp
xor
out
inc
sub
xlat
mov
sbb
pop
shl
lods
mov
adc
cli
test
and
repz
jg
add
sahf
stc
mov
dec
fiadds
in
addr16
sti
shlb
inc
testb
loopne
out
sub
inc
pop
test
sbb
inc
cmp
int
inc
pop
fbld
jbe
inc
les
insb
push
addr16
iret
dec
stc
pop
cli
mov
sub
inc
cmp
add
cmc
je
in
sub
mov
mov
dec
jne
inc
loope
mov
lods
sahf
mov
dec
nop
push
fnstcw
pop
std
xchg
fsubr
mov
outsb
fnstcw
push
or
xchg
add
test
jmp
int3
sbb
jno
gs
subps
mov
xchg
cmpl
in
gs
lret
inc
adc
fwait
jb
jne
push
aad
repz
push
mov
icebp
inc
cld
xchg
sbb
jae
dec
clc
movl
mov
out
xchg
ficomps
add
sub
imul
cmp
in
push
push
cwtl
inc
adc
popa
repz
pop
dec
or
pop
sbb
inc
das
mov
xchg
mov
push
mov
push
test
fsubrs
loopne
fnstcw
lcall
fidivl
pop
imul
jp
jle
cmp
jo
rcr
add
dec
ds
out
ds
sbb
jle
sub
or
push
lods
gs
test
push
sbb
xor
cwtl
pop
fists
jp
imul
or
xchg
jne
fnstsw
add
leave
or
mov
sbb
scas
int
mov
adc
xlat
jmp
mov
ss
xchg
jmp
rol
in
notl
aas
adc
jl
ret
cmp
shrb
sbb
ds
cmp
lahf
icebp
sti
popf
cmp
mov
cmpsl
pop
loopne
inc
mov
lock
andl
dec
repz
add
jecxz
cld
dec
test
rorl
nop
push
lcall
xchg
clc
pop
mov
testl
mov
push
mov
lods
push
mov
pop
jae
icebp
insb
das
fstpl
or
push
add
data16
cmc
ret
sub
sub
xchg
test
push
or
call
les
pusha
cmpsl
mov
idivb
and
mov
idiv
adc
ds
adc
inc
je
push
xchg
imul
stos
push
jmp
aam
pop
jg
dec
rcrb
enter
or
flds
outsl
pop
icebp
jp
dec
jb
pop
pusha
inc
sub
scas
stc
inc
mov
xlat
xchg
loopne
mov
rcl
incb
cmp
cmp
sub
daa
mov
cmpsl
pop
xchg
lds
fwait
lea
add
and
outsb
mov
adc
inc
fimuls
testb
push
xor
aam
inc
outsb
mov
mov
adc
int3
mov
cmc
push
jp
jns
scas
fstpt
dec
push
xor
mov
add
mov
adc
jge
into
mov
pop
mov
adc
lea
ud0
addb
fs
scas
clc
insb
and
lock
imul
mov
roll
rcll
repz
movsb
sub
push
lods
arpl
sbb
cmp
push
popa
jb
ret
sbb
xor
mov
or
jns
push
sbb
push
dec
xchg
pop
mov
push
out
and
xor
enter
push
dec
jbe
insl
mov
ja
ja
push
lret
inc
loop
or
mov
fcomp
lret
cmp
ret
sub
dec
repz
jbe
in
mov
pop
hlt
adc
cli
daa
xor
mov
pop
jp
shrl
pop
or
xchg
insl
push
mov
leave
jne
bound
fnstsw
ss
mov
push
aam
xchg
xor
in
mov
sub
stos
int
inc
inc
cli
xchg
sub
add
jb
mov
mov
add
filds
cmp
test
add
sub
mov
inc
dec
mov
loopne
js
jge
sbbl
jmp
mov
xlat
dec
xchg
inc
arpl
inc
dec
pushf
pushw
jmp
dec
dec
stos
pop
inc
stos
xchg
or
jo
shll
mov
and
push
cs
xlat
scas
or
insl
mov
pop
pushf
mov
out
frstor
jge
inc
pushf
pop
pop
and
jae
iret
cli
push
mov
clc
mov
or
cmp
mov
ret
in
sub
sahf
ds
inc
scas
cs
fdivrl
mov
cmc
pusha
push
repz
dec
and
nop
pop
push
in
ss
dec
int
add
call
lds
sub
je
js
push
je
fnstenv
push
lea
int
sub
mov
cmp
push
mov
jle
pusha
xchg
js
mov
ja
xchg
aas
mov
outsl
int3
mov
cmp
push
pusha
mov
cli
cltd
mov
dec
cld
ljmp
repnz
lret
xchg
std
adc
and
sub
rol
mov
aad
mov
xor
push
xchg
sub
push
jmp
dec
fisttps
add
sbb
filds
sti
inc
pop
mov
push
mov
add
mov
scas
shll
adc
nop
dec
mov
outsb
xchg
leave
inc
repnz
outsl
mov
push
pop
jmp
fstpt
fidivl
push
out
xchg
mov
and
push
push
or
jae
jl
dec
mov
pushf
int3
call
pop
loope
ficoml
sahf
push
wrmsr
sub
cmp
mov
xor
push
inc
xchg
add
adc
aaa
fwait
clc
scas
pushf
cltd
outsb
and
and
jp
repnz
in
cwtl
sub
push
sbb
orb
pop
imull
inc
jp
dec
jge
cld
jns
mov
test
out
mov
cli
sbb
mov
rorl
lds
push
dec
sahf
sbb
lret
jo
addl
int3
add
dec
subl
sar
xchg
hlt
mov
adc
enter
or
mov
mov
pop
xor
mov
or
mov
popa
pushf
gs
in
mov
stos
mov
jge
cmp
add
ret
fdivrs
js
pop
sbb
cli
repnz
mov
jae
fadds
dec
mov
xchg
int3
fdivrp
mov
les
stos
test
in
jno
dec
mov
shll
mov
mov
and
jecxz
mov
add
jg
sub
stos
popa
adc
xchg
push
ret
dec
loope
push
je
les
nopl
lret
mov
jno
mov
sub
sti
test
lcall
das
jo
ljmp
rorb
bound
sbb
mov
pop
jg
sbb
fs
mov
mov
loop
add
cltd
inc
addr16
pushf
xor
sub
cltd
add
negl
inc
and
popf
loope
add
dec
fs
sbb
out
loop
in
adc
mov
hlt
mov
out
movsl
push
cmc
xor
xlat
inc
call
outsb
sahf
lock
dec
push
mov
in
jge
aad
mov
fsubrl
push
or
xlat
or
adc
adcb
mov
jae
ficomps
xchg
push
arpl
in
jp
jne
mov
push
lds
scas
xor
and
mov
xchg
aad
pop
mov
mov
loope
js
fisttpll
aad
sbb
dec
sub
insl
dec
push
aas
mov
mov
lods
xor
fcomip
nop
int
out
jg
push
push
inc
psllq
xchg
pop
shrl
in
jmp
sbb
jae
test
jle
mov
pop
loop
scas
test
or
rclb
dec
jnp
jbe
gs
push
sbb
sbb
inc
bnd
aam
xor
xchg
jg
jae
movsl
jmp
in
fs
pop
ss
pop
mov
xchg
cmpsb
and
push
pop
adc
dec
gs
xor
ss
lods
cmp
outsl
fldt
add
xor
add
sub
push
in
in
xor
movsl
lods
and
xchg
loop
mov
push
ret
lods
jmp
stos
mov
imul
and
cwtl
addr16
xchg
stos
call
ds
das
loop
cmc
movl
pop
sti
popa
push
inc
dec
pop
mov
adc
xor
stos
xor
push
adc
push
add
jg
add
xor
mul
adc
add
pop
mov
mov
cmp
pop
sub
push
stc
test
out
mov
mov
cltd
dec
cld
or
test
push
leave
pop
sub
add
add
enter
iret
js
xchg
sub
sub
xor
adc
jo
out
lock
iret
mov
jge
push
imul
add
lcall
sbb
filds
mov
push
mov
cmc
fnstenv
sub
movsl
dec
adc
call
pushf
jno
dec
xchg
cmp
inc
jns
popf
add
push
xorb
testl
push
in
addr16
mov
repnz
rolb
xor
clc
outsb
mov
mov
jnp
push
enter
pop
dec
xchg
nop
iret
adc
ss
out
pop
xchg
lods
adc
dec
xor
push
xchg
aas
pop
and
and
lds
call
jmp
mov
sahf
push
imul
adc
pop
and
cmp
xor
aad
fstpt
and
and
and
icebp
popa
add
icebp
or
lods
mov
testl
mov
push
pop
mov
add
adc
xchg
shll
test
adc
insb
aad
inc
pop
sub
mov
xchg
test
push
mov
lea
rclb
cwtl
fidivl
loop
repz
push
or
scas
xor
mov
sti
sbb
sahf
pop
dec
test
bound
movsl
xchg
sub
push
or
lods
sub
daa
xor
fwait
push
cmp
lahf
addr16
push
and
xchg
fcmovbe
lock
push
add
push
roll
pop
jle
dec
mov
rcll
dec
mov
dec
sbb
adc
test
incl
and
cmp
outsb
push
int3
jno
adc
add
push
xchg
dec
scas
jl
test
aaa
add
sbb
pop
pop
cwtl
mov
fsubrs
enter
or
inc
flds
xor
andb
into
pop
repz
into
cmc
and
insb
popa
jne
or
mov
cmpsl
sahf
aam
in
inc
jg
in
in
jnp
scas
hlt
fdivs
add
sbb
cltd
or
mov
mov
mov
in
xchg
inc
into
stos
sahf
push
xchg
pop
std
out
push
jmp
adc
jl
xchg
push
add
sub
out
std
movsb
dec
test
or
or
push
cmc
subl
add
pusha
in
mov
cld
jb
aas
xchg
js
leave
insb
pop
lds
shl
out
pop
imul
and
inc
mov
push
rcl
push
nop
xchg
mov
mov
cmp
fldt
mov
movsl
dec
xchg
pop
mov
xchg
sub
dec
hlt
repz
cltd
into
lock
popa
cli
or
dec
jp
aaa
pop
add
out
mov
add
sarb
xchg
lahf
xor
pusha
inc
dec
sbb
mov
std
xchg
adc
leave
xor
imul
push
push
jnp
mov
jge
mov
push
cli
jl
ja
pop
aaa
addb
stos
fisubrl
push
sub
sub
push
or
shrl
rclb
or
stos
xor
sarl
pop
dec
push
or
add
nop
and
mov
pop
push
pop
pop
gs
lret
scas
mov
xor
jge
xchg
adc
out
scas
add
shrb
out
and
add
pop
push
xlat
cli
jo
int
movsl
mov
loop
lret
iret
jg
cmp
or
pop
mov
lods
aam
repz
sub
mov
fs
jb
sbb
xchg
loopne
pop
mov
loopne
aam
repnz
sbb
and
mov
repz
xor
pop
sarb
out
repnz
inc
push
and
and
push
daa
mov
mov
add
push
jno
and
lds
or
inc
adcb
mov
aaa
out
out
call
add
iret
jle
lods
mov
sub
jecxz
fucompp
push
and
inc
popf
icebp
and
jle
stc
sbb
imul
ret
rcll
roll
inc
or
xor
repnz
sub
andb
mov
push
std
into
dec
inc
inc
fildll
xchg
lea
mov
mov
sub
aas
out
ds
dec
jle
les
mov
outsl
stos
les
sbb
cmp
fstpt
sbb
cltd
sub
rcrb
and
clc
and
outsl
movb
insb
or
mov
jle
stos
aas
inc
rorl
inc
pop
push
jecxz
icebp
rolb
and
or
and
pop
ljmp
fcomp
fdivs
sbb
out
pop
adc
xchg
or
pop
fsubl
es
inc
iret
stos
outsl
inc
pop
shlb
jge
lds
pop
movb
mov
pop
js
pop
loopne
mov
frstor
decl
push
lock
dec
jge
lds
cmp
scas
mov
cli
jge
shll
test
pop
mov
in
jle
jne
pop
sub
lods
das
clc
mov
inc
push
jl
rol
aas
imul
mov
test
test
xchg
dec
adc
jae
xorl
jecxz
jg
jecxz
cmpl
pop
pop
inc
mov
push
out
push
jae
fs
inc
shlb
or
popf
iret
push
test
es
ffreep
push
popa
pop
cmp
fiaddl
pop
or
in
sub
movsb
fnstenv
dec
mov
sbb
iret
push
mov
dec
sub
xchg
inc
int
sbb
loope
repnz
sbb
lret
adc
sahf
fs
lret
rol
stos
imul
leave
fildl
imul
sbb
mov
lahf
add
xchg
inc
jp
pop
or
les
mov
and
packsswb
xor
daa
xlat
adc
frstor
sub
inc
xchg
cmp
ja
dec
ja
or
mov
mov
cmp
dec
lods
icebp
sub
push
mov
repz
daa
int3
sbb
popa
das
jl
rolb
xor
or
add
mov
or
lret
mov
pusha
or
mov
inc
pop
jl
dec
pusha
lahf
or
clc
dec
pop
lock
pop
push
xchg
pop
xor
mov
ss
cmp
xchg
mov
in
cmpsl
sbb
out
dec
mov
adc
adc
jae
xor
aad
lret
out
fildl
and
ds
in
aas
inc
stos
and
sbb
mov
sti
mov
jge
xchg
inc
stos
pop
xchg
scas
adc
fsubr
fnsave
aad
or
jmp
dec
mov
scas
inc
rclb
or
ret
arpl
imul
outsb
dec
imul
xor
sub
call
mov
mov
hlt
mov
popf
push
fisubs
loope
mov
cmp
mov
test
pop
jecxz
std
pop
mov
mov
jbe
lea
mov
sar
rcrb
popa
int3
sub
jmp
add
lahf
lods
stos
ds
jge
sbb
insl
pop
adc
call
aad
enter
sahf
std
pushf
fdivl
mov
int3
std
and
iret
jb
xor
inc
js
push
stc
dec
rclb
or
mov
mov
adc
and
jno
test
sti
into
cmpsl
and
js
push
xchg
xchg
push
adc
push
sbb
fwait
ja
jne
cmp
dec
nop
lahf
pshufw
mov
movsl
pusha
imul
mov
test
lret
jb
aas
js
add
jg
lds
scas
mov
not
shl
mov
mov
mov
mov
and
andl
loopne
jmp
cmp
xchg
sub
gs
lds
xor
cmp
popa
call
and
add
cs
das
push
aam
inc
movsb
push
mov
and
sub
test
ds
xchg
sbb
ret
fiadds
repnz
movsl
ret
pop
fs
cli
pop
stos
bound
lods
mov
inc
add
std
into
cld
or
pop
adc
add
es
dec
mov
and
xchg
mov
sahf
bound
mov
icebp
dec
jbe
lret
loopne
cmp
cs
cmp
push
add
bound
dec
sbb
loop
push
shll
clc
mov
jne
pop
adc
inc
fs
div
mov
sub
xchg
jb
sub
lock
push
repz
dec
mov
ret
jg
out
xor
fsubs
das
je
mov
fadds
daa
test
dec
ds
mov
pop
repz
rolw
sub
fs
cmp
mov
ljmp
jnp
aas
hlt
push
sahf
mov
loopne
ds
mov
movsb
out
push
movsb
fnstsw
mov
xchg
pop
add
addl
insl
lcall
push
pushl
hlt
cs
pop
jmp
inc
mov
pop
lcall
xchg
mov
aaa
push
lret
cmpsb
push
jnp
lret
push
sbb
and
rcrl
mov
imul
or
cmp
push
leave
je
out
mov
inc
lcall
lret
xchg
jb
rcl
cwtl
std
out
js
xor
loope
push
subb
cld
cli
xor
ds
xor
jmp
faddl
push
inc
dec
test
into
ficompl
mov
lahf
sbb
push
xor
jecxz
divl
out
and
rcll
xor
popa
outsb
enter
mov
jb
mov
pop
dec
inc
jg
pop
les
adc
mov
rol
lret
int3
fistl
xchg
mov
push
pop
push
inc
inc
cmp
jo
adc
push
imul
inc
cmp
push
and
mov
int3
xchg
and
or
dec
pop
jae
lcall
push
inc
loop
bound
xor
or
testb
mov
out
cmpsl
ret
adc
aam
push
dec
test
sub
mov
inc
fwait
fwait
stc
fstpt
or
fsts
inc
sbbb
xchg
xchg
and
inc
mov
clc
lret
cmpl
cvttps2pi
push
mov
test
sub
fsubrl
sbb
xor
fst
orl
fs
hlt
leave
pop
enter
mov
stc
mov
jl
mov
lods
mov
and
mov
cmpsl
enter
sti
scas
xorb
dec
mov
xchg
mov
dec
sub
test
pop
sahf
jne
ret
stc
sbb
jnp
cmp
sbb
fmull
mov
pop
enter
subb
scas
pop
pop
xchg
add
pop
pusha
leave
mull
or
addr16
mov
lods
stc
mov
lret
xorb
pop
sahf
repnz
push
leave
pushf
insb
int
sbb
fstps
push
pop
imul
or
and
jbe
pop
jae
and
xor
push
xchg
pop
adc
cmp
adc
ss
add
xchg
mov
adc
test
jg
xchg
push
sbb
lds
lock
insb
test
mov
or
xchg
je
inc
xor
outsl
test
jecxz
loop
push
in
adc
mov
sub
mov
dec
mov
rorl
mov
pop
iret
out
popf
mov
outsb
jae
imulb
pop
cs
pop
push
inc
imul
mov
cli
xorb
jae
pop
push
pop
lea
xchg
movhps
fidivl
loope
decl
daa
push
sbb
inc
aad
mov
repz
cmpsl
add
arpl
in
xlat
std
stc
pop
outsl
dec
andl
or
repnz
rcrl
xchg
sub
jg
or
out
mov
cmpsb
push
inc
into
les
pop
sub
lcall
daa
aam
push
adc
add
cmp
cmpsl
inc
pop
inc
add
sahf
adc
cmp
and
fcomps
add
scas
adc
lahf
xor
pop
lock
add
push
subb
xchg
push
leave
leave
and
aaa
push
cmp
xchg
mov
repnz
fbstp
repnz
popf
popa
les
or
and
push
loopne
mov
loop
fcoms
cmp
scas
sub
les
insl
cmc
test
mov
sarl
add
lea
xchg
aas
repnz
mov
mov
aaa
mov
xor
mov
pop
push
nop
mov
mov
adc
cmp
and
rcll
pop
iret
mov
fldenv
rclb
mov
xchg
ret
push
stos
js
out
xor
faddl
addr16
jle
ja
hlt
andl
push
mov
negl
stos
mov
mov
cmp
jno
cmp
loope
jg
sti
pop
lds
in
gs
push
mov
int
push
movl
arpl
lret
jns
in
mov
int
xchg
imul
pop
mov
fistpl
jns
add
cmp
sub
mov
jl
adc
dec
xor
mov
fmuls
or
xchg
popf
aas
nop
or
rcr
and
mov
shrl
cmpsb
inc
insl
cltd
jo
pop
inc
daa
in
xor
jp
imul
ror
mov
mov
fdivrs
movsl
xor
hlt
jle
pop
andl
and
popa
xor
sbb
out
sbb
cmpsl
or
loop
add
push
pop
jl
imul
addr16
jo
movsl
mov
adc
movsb
or
dec
loope
adc
and
xchg
mov
ds
and
int3
cs
xchg
in
and
icebp
xchg
sbb
sub
cwtl
adc
xchg
inc
sbb
cmp
clc
ljmp
pop
sbb
sbb
fs
push
pop
data16
cmp
jno
mov
out
lds
add
loope
or
jbe
cli
inc
sub
call
push
mov
add
ds
loopne
ja
cld
cld
mov
sbb
push
loope
mov
in
or
nop
gs
push
lcall
incb
jae
sub
adc
and
jno
dec
pop
pop
cs
cld
enter
xchg
adc
cmp
mov
mov
in
mov
adc
sub
dec
repnz
dec
inc
push
mov
dec
aam
jns
push
mov
sub
cltd
lea
imul
jmp
mov
movsl
cmp
cmp
sub
scas
insb
ret
call
outsl
sbb
movsb
addr16
insb
scas
dec
pop
inc
cmpb
adc
cmpsb
add
inc
or
or
xchg
dec
push
lods
push
push
dec
fistl
fcmove
push
das
pushl
pop
push
lds
xchg
iret
cmp
loopne
mov
das
push
ss
mov
cmp
leave
das
sbb
fistl
push
cmp
arpl
or
cltd
fwait
pop
test
pop
test
sub
loopne
in
rclb
or
jg
add
sbb
dec
dec
jp
lcall
stc
jmp
mov
dec
pop
mov
push
jge
sti
daa
rclb
shll
in
addr16
inc
sbb
cli
xor
mov
lock
mov
adc
or
mov
mov
mov
mov
scas
jle
mov
sub
or
cs
inc
mov
test
inc
js
icebp
lds
pop
or
jl
rcrb
pushf
or
add
fdiv
push
dec
push
leave
lcall
push
pop
gs
int3
iret
mov
popf
adc
push
inc
add
std
je
bound
pop
xor
sbb
iret
xchg
inc
jae
sub
popf
fadd
inc
xor
shrl
sub
sub
push
fcoml
jmp
cmp
jle
and
mov
adc
push
ret
scas
sub
scas
or
gs
xchg
das
xor
jecxz
fstpt
bound
addr16
sub
and
in
inc
or
lcall
mov
shrl
ja
adc
or
aam
insb
cltd
pusha
dec
mov
cmc
jp
hlt
daa
movsb
lret
mov
inc
loop
jo
nop
and
fs
div
sub
aaa
ljmp
icebp
in
cmpsl
aas
ljmp
addr16
aaa
pop
shll
and
or
inc
mov
cmc
divl
and
pop
xor
and
pusha
push
xchg
cwtl
in
sti
adc
sbb
mov
xor
mov
add
lret
add
push
pushf
and
out
jb
ret
or
xchg
jbe
xchg
cmp
mov
mov
mov
pop
imul
outsb
int3
das
and
jge
mov
negb
jg
lods
enter
movsb
jmp
sub
and
repnz
and
shrl
pop
addl
cmpsl
mov
adc
insb
adcl
pusha
test
dec
fiadds
stos
cmp
pop
ret
subb
imul
pop
cmp
jb
adc
or
call
mov
xchg
pop
dec
sub
ss
push
fnsave
xchg
dec
mov
and
push
mov
ljmp
add
push
mov
repnz
movsl
shll
stos
in
aaa
je
lds
mov
adc
mov
adc
in
mov
push
mov
fdivl
mov
daa
mov
push
movsl
movsl
xorl
or
mov
insb
mov
adc
movsb
jne
call
push
or
dec
mov
sbb
push
jb
das
pop
sub
inc
jmp
jmp
and
andl
mov
xor
xchg
xchg
dec
sub
add
in
ljmp
mov
jmp
hlt
rcll
xchg
jns
outsb
pop
aam
das
push
pop
sub
nop
shr
sub
xlat
and
mov
cmp
cmpnleps
adc
mov
stos
cs
push
xor
lret
add
sub
mov
xor
fimull
adc
jge
in
lock
outsb
cmp
pop
roll
adcl
pop
push
imul
lock
pop
add
in
mov
insb
cs
stc
cmp
enter
jmp
sahf
sub
inc
pusha
sbb
push
mov
jl
ja
and
roll
mov
leave
mov
xchg
in
mov
push
sub
int3
jg
push
popa
addr16
or
jo
adc
pushf
lods
jae
and
test
daa
sub
push
inc
jnp
ret
in
add
jge
arpl
cmp
push
pop
mov
out
and
movsl
jg
rorb
cmpsl
mov
or
push
pop
sbb
idivl
jecxz
nop
int
mov
adc
idivb
sub
aad
cld
addl
adc
out
arpl
fs
or
jmp
pop
call
loop
in
sbb
aaa
mov
les
push
loopne
xor
mov
sub
ja
cld
std
int
push
lds
ds
pop
iret
into
fbld
sarl
mov
lds
mov
cmp
jnp
or
cli
push
dec
test
add
bound
or
pop
sub
adc
cmp
adc
and
sbb
aas
hlt
test
push
lds
out
lds
out
sahf
in
insb
and
cmc
mov
scas
sub
pop
mov
loopne
out
loop
idivb
mov
icebp
jl
fdivrl
push
popf
mov
jbe
jae
bound
add
xchg
inc
fistpl
testb
jbe
std
dec
aam
loope
test
outsl
mul
add
daa
xor
mov
pop
dec
pop
dec
xor
mov
cld
aad
js
aad
mov
dec
inc
dec
and
lret
jb
lods
push
dec
mov
and
fisubl
push
cmpb
out
or
and
or
push
add
push
sahf
pop
adc
into
pop
dec
and
icebp
sub
out
sub
push
sbb
dec
mov
sbb
inc
add
aaa
scas
in
jge
inc
ret
scas
sti
add
lahf
outsl
pushf
jle
dec
sub
aad
inc
jbe
popa
push
dec
mov
enter
jno
lock
fs
call
js
shl
fdivr
xor
xchg
and
mov
int
xchg
or
xor
clc
std
pop
mov
sub
mov
and
in
sub
inc
lcallw
fbld
or
rolb
mov
cmp
push
mov
pop
pushl
inc
mov
adc
nop
test
dec
inc
test
push
adc
enter
cmp
jae
xlat
sub
mov
cli
outsl
cmp
push
jb
cli
push
lock
xchg
push
dec
xchg
add
mov
xorps
push
fwait
arpl
cmp
cld
xchg
pop
in
mov
adc
pop
jo
cmp
or
jl
out
std
and
pop
insl
aaa
sbb
scas
jno
mov
fstpt
mov
mov
aas
and
icebp
fwait
popa
pop
scas
subb
pop
shll
jecxz
shl
mov
adc
sub
iret
adc
ficoms
mov
sub
mov
fsts
loop
xchg
mov
xchg
sub
push
fadds
cmpsl
xchg
scas
ret
arpl
loope
inc
sbb
enter
mov
sub
decb
cwtl
jae
out
mov
xorl
cmp
in
adcb
cmp
fcompl
sub
stos
das
inc
mov
sbb
loope
inc
loop
fcomi
xlat
outsb
lret
adc
cmpb
enter
add
loopne
daa
inc
push
mov
aam
cli
xchg
xor
mov
pushf
jb
imul
and
xor
mov
dec
dec
sub
lock
and
daa
lock
shrb
je
add
push
sbb
jne
pusha
push
and
jp
push
fwait
sahf
mov
cmp
fdivl
dec
hlt
stc
lock
push
cmp
and
or
sub
popf
int
enter
mov
jl
fsubl
push
adc
mov
sub
cmp
xchg
incb
jns
sbb
fadds
lock
dec
leave
popaw
xor
loopne
test
push
or
ret
lods
cmp
dec
mov
mov
mov
add
sub
inc
movsb
mov
dec
insl
data16
xchg
dec
lea
or
sbbl
ss
jmp
mov
sbb
mov
cmp
sar
lea
adc
push
loope
adc
scas
xchg
cmc
loopne
inc
insl
pop
in
popa
dec
jb
js
or
mov
add
push
leave
jp
mov
mov
fstpl
mov
mov
stos
adc
jb
xchg
fimull
jl
fsts
dec
cmp
or
add
sbb
subb
adc
dec
xor
outsb
cwtl
mov
pop
ss
xchg
hlt
sbb
push
enter
add
push
inc
js
push
push
in
lcall
repz
mov
pusha
pop
xchg
sbb
pusha
testl
inc
sub
insb
jns
or
jg
or
push
data16
aad
test
or
pop
fsubrl
sub
imul
push
ret
mov
shrl
arpl
push
lods
movsl
addl
scas
sbb
xchg
dec
insb
or
mov
daa
cmp
inc
mov
arpl
fadds
aaa
setnp
xor
push
ljmp
add
loop
or
xchg
dec
arpl
int
ret
pop
jge
andb
mov
xor
mov
lret
cltd
pop
out
and
fldt
call
pop
rcll
pop
add
das
test
mov
dec
aad
jp
dec
aas
jg
loope
test
adc
xchg
mov
jnp
pushf
and
fildll
scas
cmpb
mov
jl
inc
mov
ds
jae
push
and
pushf
mov
add
xchg
pop
pop
mov
in
push
jl
es
negb
aas
test
inc
das
pop
insl
out
cmpsb
scas
push
and
sub
dec
loope
inc
popa
scas
out
cltd
rolb
cwtl
add
add
pop
push
pushf
xor
mov
mov
daa
add
and
jno
or
add
jno
mov
sub
pushf
movsb
add
mov
push
mov
movsl
out
cmpl
add
bnd
jbe
insl
jmp
je
movsb
packssdw
cmpsl
nop
ja
cmp
dec
jns
movsl
push
dec
jo
fnstcw
in
mov
cmc
enter
sub
in
pushf
fcoms
gs
mov
push
pop
popf
out
loop
fwait
mov
nop
inc
ljmp
jge
inc
adc
pop
mov
mov
popf
mov
or
sub
inc
push
mov
or
inc
in
jecxz
cli
sub
daa
xchg
rcr
dec
int3
mov
test
pop
pop
stos
dec
sub
inc
mov
das
push
test
jne
push
sarb
pop
cmp
lea
cmp
popa
xor
xchg
sahf
insl
stos
mov
cmc
bound
dec
add
jb
sub
loope
orb
jp
lret
into
sbb
inc
mov
add
inc
push
frstor
enter
sub
mov
loop
cmp
pop
repz
push
pop
mov
decl
mov
adc
push
push
cltd
rorb
outsl
loop
push
addl
dec
rcr
out
int
hlt
test
mov
fcomps
pop
fcomps
push
cwtl
pushf
and
icebp
clc
sub
jo
push
push
inc
repnz
mov
push
out
push
scas
leave
scas
arpl
dec
bound
mov
pop
pusha
into
fisubs
push
xchg
or
lds
or
lds
mov
lods
outsb
shrl
and
imulb
or
ja
gs
pusha
inc
mov
xchg
push
cmp
sar
mov
inc
movsl
push
push
pop
or
fdivs
mov
pop
push
aam
lea
in
mov
lcall
sbb
push
jl
xor
enter
aad
sbb
lret
jl
lock
xchg
out
lcall
pop
pop
ret
lods
dec
jo
out
or
sub
xchg
xor
aas
sub
outsl
fwait
xchg
adc
sub
push
sbbl
lahf
mov
jle
mov
mov
jb
ljmp
lods
aam
jl
xlat
insl
push
icebp
mov
cli
push
xchg
mov
addb
mov
xor
ret
out
add
adc
loop
dec
lret
lahf
cmp
mov
outsb
mov
sub
cmpsb
aaa
jge
cmp
cmpsl
mov
sarb
mov
xor
js
jge
dec
mov
int3
mov
mov
mov
dec
push
repnz
in
dec
sbb
fdivl
pop
jb
sbb
sub
inc
in
adc
loop
fimull
adc
sbb
add
movsl
jo
cmc
xchg
rcrl
sub
int3
pop
fwait
cmp
dec
cmp
insb
ds
inc
adc
fsub
imul
mov
fsubp
mov
xchg
push
pop
jecxz
test
push
cs
xchg
mov
jne
dec
xchg
lods
imul
push
pop
frstor
inc
push
mov
sbb
cmp
mov
sub
mov
push
push
lret
push
lods
dec
pop
cmp
pop
and
add
adc
call
inc
pop
mov
std
dec
mov
jnp
rcrl
jnp
mov
pop
ret
notb
jb
shll
ds
cmp
mov
mov
mov
mov
and
sub
shl
jmp
fmull
adcl
mov
jno
sbb
cmp
mov
shlb
in
aad
movsl
iret
push
xor
xchg
adc
nop
out
mov
movsb
mov
add
ror
out
repnz
std
cmpsb
add
or
daa
dec
dec
or
dec
mov
xor
std
sbb
rorb
dec
push
or
fisubs
addr16
nop
repz
push
push
fnstcw
xchg
cmc
test
cmp
lods
popf
adc
jbe
fstp
inc
jle
fidivl
test
mov
add
mov
dec
fimuls
mov
push
aam
jno
rcr
xchg
es
scas
mov
mov
lods
stos
mov
addr16
cli
stos
pop
lret
lea
mov
dec
push
rorl
mov
fnstsw
scas
sbb
mov
test
mov
cmpsl
aas
sbb
rolb
xchg
notl
cmp
adc
xor
out
sub
add
fwait
jnp
pop
xlat
mov
cltd
jmp
add
push
cmc
inc
fs
pop
push
inc
movsl
sub
jge
shrl
mov
fstl
mov
cmp
addl
call
xor
mov
mov
mov
jns
and
bound
divb
cmp
jns
pop
hlt
out
xor
bound
iret
hlt
rclb
into
rorl
mov
loop
fwait
jmp
xchg
jg
sbb
scas
adc
mov
inc
hlt
sub
test
out
inc
fstp
and
sbb
sbb
rorb
xchg
jecxz
test
add
call
aam
inc
push
cltd
cmp
and
gs
mov
repz
mov
fsubrl
jl
push
fisubl
inc
push
mov
outsb
mov
call
mov
sub
push
xor
loopne
xor
xorb
les
sti
das
sbb
push
xor
xor
push
out
out
js
out
pusha
cs
popf
imul
push
pusha
cmpsb
add
push
mov
in
in
call
push
scas
movsb
jb
mov
xchg
xor
rcll
movsb
xor
add
sub
xor
insb
aam
push
adc
inc
mov
cmp
push
out
lcall
xchg
insb
inc
and
or
sub
pop
mov
dec
sbb
xchg
pop
xchg
sub
mov
inc
stos
fwait
out
cld
incl
mov
jmp
sbb
inc
sbb
mov
test
cmp
cmp
cwtl
pop
adc
out
or
lods
aam
testl
jge
sbb
enter
xlat
pop
outsb
adc
dec
sbb
push
fsubrp
hlt
xchg
lsl
xor
es
or
mov
and
mov
xchg
sub
orl
les
xor
pop
sub
loop
push
das
negb
sbb
dec
cli
imull
fimull
outsl
movsb
mov
rcll
pop
or
and
fbstp
stos
fwait
jbe
loopne
repnz
in
push
pop
and
mov
adc
jne
aaa
fcmovnb
inc
lret
iret
lea
and
imul
lods
xchg
cwtl
fs
jb
mov
lret
cmp
mov
call
daa
xchg
shlb
std
test
enter
mov
nop
push
pop
aad
mov
or
paddq
aad
jmp
mov
enter
inc
dec
popa
mov
sbb
xor
mov
shl
adc
into
hlt
mov
xorb
sbb
add
mov
shl
test
aas
inc
loop
outsb
fdivl
negb
xlat
lods
jne
push
push
mov
cmp
test
mov
push
popa
or
movsl
ljmp
lods
push
dec
cmc
call
in
add
les
int
shl
or
cmp
ss
push
lcall
int
shrl
add
shlb
int3
xchg
xchg
rcrl
xor
stos
in
xlat
js
mov
lea
push
or
and
stos
lahf
in
cmp
inc
arpl
iret
adc
cmp
lcall
test
and
icebp
cwtl
mov
popf
hlt
data16
es
cli
mov
mov
pop
cmp
ret
aad
add
cmp
jmp
cmc
xorb
pop
jmp
cmpl
and
xor
int3
enter
xor
sub
jne
mov
loopne
loop
mov
hlt
icebp
inc
out
cmp
xchg
test
and
cmp
mov
negb
clc
arpl
lds
mov
gs
hlt
outsb
xchg
sti
adc
shlb
adc
addl
pop
jo
inc
xor
or
jge
mov
testl
dec
test
movsb
cmp
cwtl
jne
mov
dec
pop
clc
cli
mov
sarl
mov
mov
mov
jns
xchg
sbb
push
cmpsl
jb
pop
mov
mov
idivb
mov
dec
rorl
or
ljmp
mov
pusha
outsb
outsb
xchg
sbb
cmp
push
aad
cmp
test
mov
pop
pop
rcrb
imul
incb
push
lock
in
lock
dec
imul
cmp
fidivs
sub
inc
bound
repnz
repz
jo
cmpsl
adc
ret
or
add
xchg
jl
dec
out
clc
in
xor
jnp
mov
bound
jno
scas
ficoml
mov
pop
adc
test
adc
xor
sbb
andl
adc
out
out
in
sub
les
cli
xchg
adc
lcall
outsb
das
xchg
aad
and
insb
jns
cmp
or
rolb
sbb
push
sub
movsb
outsl
jle
mov
push
cmp
jne
sbb
pop
xor
inc
ja
out
cmpsl
test
jbe
pop
int3
je
vcvttss2si
cmc
jecxz
psubsb
inc
and
sbb
cld
pop
push
clc
cwtd
xor
adc
repz
pop
pop
jae
insl
ret
cmp
loope
fstpl
in
pop
adc
pop
xchg
mov
idivb
cmp
lock
in
jns
sub
push
sub
loope
daa
pop
mov
mov
and
mull
in
movsb
nop
jnp
in
jno
repz
xchg
jge
dec
lods
mov
sub
dec
lret
jbe
inc
jle
btc
out
mov
adc
cs
dec
out
je
add
push
popa
das
push
leave
jg
fbld
scas
xchg
cmc
enter
pop
cltd
insl
fbld
dec
lods
or
loop
pop
sbb
sbb
rorb
push
dec
imul
fwait
xor
or
aaa
and
mov
mov
pop
fs
cmc
sbb
jp
or
pop
shll
and
out
mov
cmp
mov
xchg
xchg
ret
and
lods
add
hlt
xor
fidivs
loopne
pop
fnstenv
cmp
adc
xchg
ficomps
xor
mov
inc
and
into
mov
sub
frstor
icebp
cmc
lahf
dec
jmp
sahf
loope
xor
or
or
test
push
or
mov
lds
cmp
call
out
dec
loop
cmpsb
fs
jb
not
lret
sbb
mov
icebp
call
jo
and
and
cwtl
xor
mov
fidivrs
and
dec
dec
mov
pop
dec
out
repz
loop
pop
flds
mov
mov
push
shrl
sar
in
and
shl
xor
push
loop
imul
xor
cwtd
xor
push
ss
mov
push
insb
fldl
mov
roll
loopne
dec
rorb
pop
sbb
outsb
aaa
xchg
xor
lock
jp
sbb
sbb
bound
xchg
lahf
loop
adc
jl
xchg
mov
cmp
jp
lcall
in
dec
inc
stos
mov
inc
jg
ds
loope
dec
cmpsl
jle
push
pop
push
movsb
pop
xchg
mov
lcall
das
sbb
and
cmp
cwtl
outsb
adc
pop
fldenv
inc
movsl
mov
and
cld
scas
mov
lods
mov
mov
jno
mov
faddp
sahf
mov
decl
test
fdivrs
das
pusha
enter
je
cmp
lods
arpl
jns
xchg
stos
in
sahf
in
sbb
fnstcw
and
inc
cltd
pop
xor
mov
subl
dec
add
xchg
mov
mov
add
jecxz
pusha
push
dec
in
outsl
mov
jb
inc
int
fcmovb
xor
cmp
mov
call
fcompl
imul
xor
in
sub
or
dec
jo
inc
pop
in
xor
aas
cmp
cli
mov
scas
lahf
test
or
cmp
lret
cmp
arpl
lds
push
fbld
xchg
inc
sbb
sarb
pop
xor
addb
ss
jnp
add
cmpsl
andb
popf
push
sub
cli
xchg
lret
movsb
mov
out
cli
mov
iret
sbb
push
xor
jae
push
mov
mov
cmc
mov
aam
xchg
into
and
mov
ret
loopne
mov
insl
hlt
cli
in
adc
std
lods
push
sbb
xchg
push
lcall
push
mov
ss
and
push
sub
lea
and
cltd
daa
push
arpl
inc
stc
push
push
popl
mov
cmp
and
sarl
dec
dec
aam
retw
add
aam
and
int3
pop
in
insb
rcll
add
scas
inc
pop
sbb
sub
jae
pop
ds
pop
push
mov
mov
jmp
setae
push
psllq
inc
xlat
sbb
push
leave
enter
int
ds
outsl
sets
mov
push
xchg
mov
testb
arpl
iret
jo
add
and
xor
mov
xchg
mov
or
sub
ja
shlb
sbb
cmc
in
inc
push
hlt
jnp
jp
jbe
repz
movsl
out
xchg
test
pop
iret
outsb
les
add
jb
push
or
dec
es
inc
add
dec
mov
je
aas
cmc
cmp
mov
mov
cld
mov
iret
xchg
mov
stos
pop
mov
dec
jo
pop
data16
loopne
cmp
pop
out
rcrb
xchg
out
push
push
movsb
push
cli
hlt
pushf
inc
jge
loope
mov
jp
test
pop
dec
xor
aam
aas
cmpl
push
addr16
mov
cmp
add
leave
test
leave
ret
jp
fmulp
sub
test
mov
jp
cltd
lahf
jae
cmp
mov
mov
adc
pop
sbb
ficoms
xor
mov
jb
int3
in
js
call
xor
dec
xor
outsb
adc
jmp
xchg
clc
sub
jecxz
adc
je
xor
jecxz
push
adc
and
test
mov
mov
inc
add
je
in
mov
jp
inc
lcall
mov
pop
sti
mov
xchg
movsl
inc
stos
cmpsl
pusha
dec
mov
sbb
inc
fdivrp
js
fistl
jge
lods
mov
adcl
dec
pop
xchg
stc
ljmp
pushf
mov
scas
xor
std
test
andl
inc
pop
xchg
aas
jno
mov
fs
and
imul
push
pop
movsl
mov
les
sbb
mov
int3
cmp
pop
dec
roll
scas
xor
scas
int
mov
stos
sub
in
cld
pushf
movsl
je
in
ret
imul
lea
insl
fistpll
lcall
cmp
pop
mov
outsb
ljmp
sbb
push
loope
divl
scas
shll
fimuls
mov
outsb
adc
add
pop
adc
pop
not
testb
hlt
mov
push
fdivrs
cmpsb
enter
aas
push
adc
push
mov
repz
xchg
cltd
lahf
or
add
repz
in
adc
into
stc
sub
mov
pop
xchg
loop
sbb
add
and
dec
aam
cmp
push
clc
lret
push
lret
inc
jb
push
rolb
xchg
jle
add
mov
sub
iret
jecxz
inc
shrb
jbe
test
inc
scas
push
mov
arpl
nop
daa
in
mov
cmp
sbb
clc
add
mov
icebp
mov
outsb
test
outsb
xchg
push
push
divb
pop
pop
mov
movsb
jl
popa
int
jns
inc
mov
iret
shl
sbb
mov
mov
jge
cli
cs
jns
mov
jl
addr16
add
aad
lret
mov
imul
inc
mov
dec
add
int3
arpl
jnp
stc
scas
fists
test
andl
rorb
int3
dec
faddl
mov
and
fmulp
fwait
and
xchg
cld
arpl
gs
push
mov
fcmovnu
or
aad
fisttps
sub
mov
outsl
cmp
dec
xchg
adc
jecxz,pt
sub
sahf
sub
sbb
lods
jnp
adc
jne
in
das
test
dec
sahf
xchg
out
insl
ret
dec
adc
test
mov
test
jae
cwtl
stos
mov
mov
adc
add
adc
bswap
dec
in
out
push
jl
pop
ja
xchg
call
push
rorl
fiadds
ret
insl
adc
js
fbstp
jnp
ds
pop
xor
sub
adc
sbb
fidivs
mov
sub
and
dec
in
pop
jo
mov
xor
out
or
ss
pop
add
jae
iret
mov
jb
and
insb
ret
mov
cmpsl
imul
stos
xchg
jo
pop
lret
xchg
xor
stos
mov
and
imul
pop
inc
sti
repz
stos
pop
jno
sbb
cmpl
pusha
cmp
lahf
mov
jge
mov
in
imul
ds
cmp
and
insl
pop
je
int
jp
mov
mov
jns
adc
sbb
repnz
xor
pushl
xor
xchg
inc
imul
gs
dec
mov
mov
xchg
pop
popa
cmp
pop
pop
stos
cmpsl
lock
xor
ds
sbb
add
jg
and
gs
dec
enter
call
pop
es
pop
sub
jle
jle
add
lods
jl
pslld
push
int
in
lcall
stc
fimull
sti
xchg
rorb
add
cmp
ljmp
dec
xorl
popa
adc
xlat
mov
adc
sub
and
pop
push
cmp
pop
mov
lcall
es
aam
call
cmp
dec
in
xchg
dec
xor
pop
fidivrs
adc
out
mov
rclb
popf
xchg
pop
sti
in
mov
into
aad
jo
mov
jg
mov
or
sti
cltd
sahf
add
cltd
mov
jmp
sbbb
clc
scas
jge
negb
pop
dec
pusha
adc
movl
in
jns
mov
in
loopne
pop
mov
jno
jnp
jp
fwait
ds
mov
mov
push
sbbl
imul
sub
xor
fwait
mov
addr16
and
mov
mov
xchg
push
mov
dec
test
ja
sahf
repnz
stos
lret
lcall
dec
push
xor
sbb
popa
adcl
aas
sbb
mov
cltd
jecxz
mov
mov
shl
popa
jbe
pop
pop
test
inc
mov
push
rcrl
addb
push
xchg
lock
add
orl
fimuls
mov
sbb
sarl
popa
mov
adc
jmp
push
fwait
pushf
sbb
jo
dec
jae
fs
jmp
inc
sahf
ret
push
fscale
jmp
adc
xor
xchg
cmpl
cmp
pop
icebp
imull
fsubr
mov
int3
or
mov
lcall
jp
jecxz
sbbb
xchg
fmull
test
fwait
jl
mov
cmpl
jae
inc
mov
cmpb
xchg
add
fbld
ret
loop
insl
mov
cltd
in
adc
lods
pop
mov
mov
cld
mov
xchg
nop
sbb
add
sub
xchg
pop
xor
rclb
jle
jae
mov
mov
nop
stos
add
rolb
lock
cmp
cmpsb
push
or
xchg
repz
xchg
in
mov
inc
cmp
inc
push
xchg
lcall
and
mov
push
movsb
dec
les
in
pusha
sarb
pusha
mov
sbb
sbbb
sahf
inc
les
movsl
or
jb
fdivrs
mov
subb
in
sbb
sub
mov
sub
sub
sub
push
xchg
movsl
cmp
pusha
movsb
xchg
popa
mov
dec
cmp
and
mov
mov
jecxz
push
int3
xchg
arpl
adc
icebp
scas
cwtl
jbe
scas
xor
xor
mov
mov
test
mov
jnp
lods
mov
por
sub
or
cs
aaa
gs
or
adc
xor
jns
xchg
inc
orl
sbb
daa
stos
xchg
mov
push
fninit
fdivl
fcomp
aad
mov
cmpsb
cmp
jbe
push
aad
mov
popf
repnz
movsb
test
mov
add
lds
mov
shll
lods
test
pop
shlb
pop
leave
push
or
mov
xchg
lods
cli
sbb
jmp
in
data16
pop
mov
stos
lret
mov
pop
insl
sar
call
jnp
push
xchg
xchg
aad
xor
pop
adc
push
lds
lock
add
push
lds
jnp
popa
aam
int3
loopne
fprem1
xchg
push
hlt
xor
dec
cmpsb
cwtl
cmp
jg
shrl
sub
mov
mov
adc
in
sub
sbb
stos
sbb
fidivrl
out
popa
leave
repz
cli
mov
pop
and
loopne
adcl
adc
adc
jae
test
pop
mov
sub
xorl
leave
sub
clc
mov
adc
test
inc
fnstcw
mov
test
std
mov
popa
adc
and
arpl
icebp
dec
sub
pop
pop
movsl
dec
ljmp
dec
xchg
or
pop
inc
sbb
cmc
pop
in
cltd
in
jecxz
arpl
xchg
test
pop
xchg
repnz
xorl
pop
mov
mov
cmpl
mov
loope
inc
and
adc
inc
pop
and
stos
lea
out
mov
not
idivl
jg
xor
aaa
inc
xchg
push
cltd
xchg
sahf
ficoms
push
in
rolb
in
lret
sub
mov
fisubrs
cmp
sarl
xor
and
jns
lea
xchg
in
add
jp
ret
push
testl
jl
int3
std
jmp
jbe
inc
fcomps
xchg
inc
mov
sbb
movsb
jg
mov
std
sbb
lcall
lea
cli
push
lds
mov
in
test
fdivrl
ficoms
jbe
adc
sub
movb
popa
cmp
aaa
pushf
pop
xchg
add
xchg
mov
sbb
pop
fstpl
and
roll
imul
lret
push
repnz
mov
dec
bnd
lods
icebp
jo
or
loop
in
xor
rcrb
xchg
jno
mov
mov
adc
bound
stc
push
mov
test
sub
jo
arpl
jb
push
jmp
push
out
iret
loope
lock
scas
outsb
lock
sub
das
das
xor
int
loope
fstps
adc
jbe
mov
inc
and
pushf
jne
sub
mov
insb
stc
cmp
lret
dec
mov
xor
dec
repz
mov
lcall
xchg
sub
repz
jecxz
lds
lcall
and
push
fstps
pusha
push
lcall
jecxz
testl
xor
xchg
inc
xchg
mov
enter
adc
ret
cmpsb
or
movsl
rcr
sti
mov
es
push
jmp
cmp
cmp
test
bound
ret
into
das
add
hlt
mov
dec
ficoml
mov
mov
cltd
add
push
test
sub
gs
in
xor
ret
testb
inc
xor
in
sub
rcrl
int
flds
fwait
jmp
scas
mov
outsl
push
sub
xor
add
fs
xlat
out
sbb
pushf
in
jge
cmpsb
in
push
mov
sub
repz
fisubrs
xor
sti
ret
iret
jb
mov
add
data16
int
addr16
aas
int
pop
cmpsl
jp
fdivs
repnz
add
inc
fistl
cmp
xchg
rcrl
jge
call
mov
add
ret
push
pusha
and
xchg
loopne
dec
mov
adc
movsl
ror
adc
sub
addl
mov
xor
pop
pop
test
xor
rcrl
xchg
shrl
pop
xlat
inc
xchg
inc
mov
pop
daa
sub
adc
mov
push
mov
mov
jo
mov
cmc
out
test
cmpsb
aam
pop
sbb
loop
sbb
std
add
pop
std
popf
repz
leave
xchg
jl
jb
movl
pop
xor
fwait
test
jge
xchg
lods
fwait
add
or
pop
ret
mov
add
sub
pop
cmp
jne
inc
das
push
inc
arpl
leave
pop
stos
lret
and
push
popa
xor
outsb
fistps
scas
cwtl
in
mov
and
jns
add
dec
mov
and
mov
add
adc
cmpsb
movsl
fs
dec
add
out
adc
sbb
or
xchg
mov
mov
cmpsb
sub
insl
loop
pop
clc
push
sub
or
loopne
lock
hlt
cmpb
add
scas
mov
mov
pop
dec
mov
xchg
sub
das
mov
mov
aam
xchg
lret
arpl
or
ljmp
adc
fs
mov
inc
mov
imulb
push
scas
jae
and
add
xchg
mov
outsl
ljmp
pushf
popf
adc
arpl
and
popf
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
mov
mov
test
xor
imul
rcrl
fcmovu
xchg
clc
dec
add
movzwl
mov
sub
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
mov
sub
sub
add
adc
add
add
mov
jge
js
sbb
sub
or
add
push
xor
pop
sub
jne
movswl
dec
xchg
outsl
push
bound
sbb
mov
jo
in
sub
mov
loop
iret
xchg
and
js
bound
dec
pop
mov
xchg
jle
mov
jno
outsl
lret
js
xchg
or
popa
psubw
xchg
cmpb
jge
xor
ret
xor
jecxz
push
je
fst
aad
gs
xlat
loope
mov
push
bound
outsb
adc
xchg
dec
stos
and
in
je
adcl
push
in
mov
cs
into
cltd
dec
mov
jne
outsl
push
jecxz
repnz
xchg
sub
adc
popa
jnp
push
lds
popa
xchg
shr
mov
cmp
mov
jbe
add
xor
sub
fisttpll
dec
cmp
dec
adc
dec
pusha
icebp
jno
adc
in
add
sbb
jmp
cmp
add
mov
cmp
rcr
push
mov
movsb
dec
cmp
xor
lock
int3
repnz
aad
popa
lcall
xor
xor
jns
inc
in
mov
adc
inc
shl
sub
dec
enter
sqrtss
enter
daa
in
fmulp
and
mov
dec
addr16
or
cmp
pop
pop
mov
mov
test
mov
or
add
adcb
std
mov
ljmp
call
out
dec
js
roll
jns
sub
hlt
jns
js
inc
loope
in
xchg
lods
sarl
out
push
cmpsb
in
sbb
lret
jbe
bound
sub
je
pop
scas
pusha
pop
lock
idivb
push
dec
js
push
lods
jl
mov
push
ja
hlt
aaa
les
mov
adc
movsb
in
inc
mov
jge
gs
hlt
jns
js
jecxz
add
xchg
and
sbbb
dec
mov
mov
cli
test
cwtl
out
lods
jl
pop
xor
out
pop
not
cmpb
dec
xlat
fistpll
test
sbb
out
jp
pop
mov
fisubrs
cld
fisubrs
std
fidivs
popa
jne
insl
ja
xadd
flds
aad
jae
add
addr16
cs
rcrl
dec
mov
sbb
inc
mov
test
pop
jb
imul
pop
sbb
inc
mov
test
jns
pop
mov
pop
fstpl
and
aam
in
pushf
sbb
inc
inc
mov
fiaddl
xor
pop
mov
in
cwtl
ret
mov
mov
pop
mov
aaa
pop
xor
test
mov
jg
jp
ds
dec
mov
sarb
jle
pop
loopne
mov
pop
mov
jns
lret
ss
pop
xor
jns
hlt
pop
jle
pop
mov
xor
or
inc
mov
pop
dec
sub
ret
xchg
pop
mov
jns
and
ja
iret
mov
mov
or
sti
test
jns
inc
mov
jns
push
xor
cmp
xor
imul
xor
mov
je
imul
jns
pop
mov
repnz
pop
mov
popf
inc
mov
sub
mov
test
sub
cmpsb
repz
ja
pop
mov
int3
mov
xor
pop
dec
mov
jns
fsubl
imul
imul
jns
pop
mov
jns
pop
mov
shl
pop
mov
xor
push
js
mov
cmc
pop
mov
or
sti
ja
mov
push
cmp
inc
pop
ss
cmc
fdivrl
pop
loopne
or
push
push
cmc
fdivs
jp
pop
lds
xor
jns
pop
cmc
jns
pop
mov
pop
mov
mov
aas
xor
pop
dec
or
fidivs
inc
insl
inc
jno
adcl
xor
add
in
sub
lods
divb
dec
jl
adc
lret
in
out
cmc
pop
cmp
sub
lods
divb
call
inc
ret
jbe
mov
imul
lods
xorb
adcl
xor
add
jg
jl
xor
or
push
pop
mov
jbe
jp
xor
xor
jl
adc
lret
in
and
lahf
cmc
pop
mov
jbe
jp
xor
xor
jnp
adc
lret
in
and
inc
leave
pop
or
mov
mov
xor
add
jns
inc
call
inc
ret
jbe
out
bnd
jp
xor
adc
aaa
jp
dec
mov
pop
mov
pop
popa
xor
or
lahf
test
stc
pushf
sub
js
xchg
insb
xchg
popf
leave
mov
test
je
scas
xchg
pop
ja
ss
repnz
insb
xchg
popf
leave
mov
test
lret
mov
sub
add
mov
add
pop
ficompl
les
pop
fwait
jns
push
mov
jbe
jnp
sub
jp
fucom
xor
lret
add
cs
pop
xor
repnz
mov
popa
movsb
xor
das
imul
jp
pop
sbb
xor
aaa
mov
jns
sbb
xchg
scas
cltd
jns
pop
or
pop
push
sub
mov
pop
iret
mov
pop
jns
fs
mov
inc
xor
xor
inc
add
sub
cs
mov
or
xchg
insl
scas
adc
cwtl
ret
mov
scas
test
lods
leave
push
xchg
sub
neg
add
movlps
aas
mov
mov
fwait
jg
cmc
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
inc
mov
cli
inc
mov
inc
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
fnsave
jp
pop
mov
pop
mov
pop
mov
pop
mov
mov
or
mov
mov
mov
mov
xor
cmp
subb
pop
shlb
xor
outsl
fstl
push
push
leave
xor
adc
lret
mov
scas
pop
int3
scas
mov
dec
mov
fdivp
or
adc
test
repnz
push
nop
or
dec
dec
or
iret
ss
loop
sti
das
in
aaa
pop
push
xchg
and
jnp
adc
ret
xor
int
movsl
adc
aam
add
cmp
xor
nop
imul
subb
lea
jle
aaa
loopne
lcall
rclb
sub
xlat
fdivl
adc
jl
addr16
or
rcll
lcall
stos
cwtl
cmp
inc
adc
push
fwait
idivl
mov
sarb
sbb
and
inc
mov
push
sbb
xlat
loop
cmp
cltd
testl
movsb
iret
xlat
push
inc
mov
mov
stos
mov
xchg
cmp
mov
jb
pop
mov
lcall
dec
inc
fwait
xor
test
xor
aaa
mov
sub
inc
lcall
test
in
mov
mov
dec
out
mov
aaa
lods
les
enter
push
inc
into
mov
bnd
fnop
or
xchg
nop
mulb
jmp
mov
popf
cmp
jmp
mov
cmp
mov
into
pop
into
aad
fs
das
sbb
inc
cs
repnz
pop
ret
cmpsb
or
mov
bound
jo
push
mov
inc
ficoms
ret
add
push
enter
add
push
jge,pt
add
xchg
mov
pushf
pop
mov
xchg
hlt
dec
mov
shlb
jp
shlb
dec
push
jmp
loopne
inc
lods
pop
sarb
mov
cwtl
push
jns
cmovb
popa
out
jp
ficoms
pop
mov
in
fstpl
in
lret
out
and
cmp
mov
push
insl
je
enter
in
test
cltd
add
adc
daa
xor
adc
out
push
popa
jb
out
scas
adc
or
sbb
push
mov
inc
jecxz
je
pushf
popa
push
ljmp
or
xchg
xlat
push
into
cmc
aas
pop
push
cmpsb
fisubrl
imul
ret
fists
xor
jge
mov
sub
fadd
pop
jmp
mov
xchg
pop
loop
cmp
sub
push
outsl
jae
mov
arpl
hlt
loope
insl
jmp
into
test
and
add
and
add
add
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
lea
add
lea
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
movb
lods
xchg
add
call
popf
add
fcmove
add
sahf
push
add
mov
add
std
sti
add
xchg
dec
add
cwtl
push
add
clc
repnz
mov
dec
add
mov
add
test
dec
add
scas
pop
add
ret
test
idiv
std
add
incb
outsb
fnsave
mov
lahf
xchg
pop
xchg
dec
add
mov
jo
pop
aam
add
incl
incl
hlt
cld
cld
add
xchg
dec
add
lods
pop
add
mov
addb
int
add
popl
sub
add
cld
stc
add
cmpl
pushf
xor
add
stc
repz
mov
pop
add
mov
std
add
test
in
mov
xchg
sub
adc
pop
add
cli
cld
add
idiv
add
mov
add
scas
pop
add
xchg
cmp
xchg
mov
add
lock
add
leave
mov
add
stc
hlt
add
xchg
daa
add
lahf
aas
add
stc
cld
add
idiv
add
movsl
dec
add
in
add
fmulp
add
leave
mov
add
out
out
adc
add
lcall
out
hlt
add
cltd
xor
lret
mov
add
jo
add
fsubp
add
fsubp
add
imul
mov
jge
push
addr16
add
fmulp
add
loope
add
lret
mov
add
into
rolb
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
or
add
adc
add
pop
pop
add
sub
cmp
cmp
inc
inc
inc
add
push
add
pop
add
add
js
test
xchg
add
stos
stos
add
rcl
rolb
fiadds
jmp
jmp
clc
clc
clc
add
sti
incl
movsb
mov
rolb
lret
add
add
add
add
jl
add
fwait
add
add
add
add
add
incl
dec
dec
incl
insb
insb
incl
nop
nop
incl
mov
incl
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
incl
insb
popf
incl
nop
mov
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
incl
dec
ret
insb
into
incl
nop
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
incl
dec
incl
insb
incl
nop
incl
mov
incl
add
sub
add
add
jl
add
fwait
imul
add
xchg
add
lock
add
mov
dec
inc
add
add
jmp
add
ds
add
add
jl
add
fwait
xor
add
inc
add
lock
add
insl
add
test
insb
lcall
add
add
add
add
jl
add
fwait
add
add
add
add
add
and
and
dec
decl
insb
ljmp
call
add
add
push
pop
add
sub
xor
add
inc
flds
add
add
insl
jmp
test
dec
add
call
add
add
aas
pop
add
push
jl
add
add
jle
add
xchg
flds
add
jmp
ret
add
ljmp
call
add
add
pop
pop
add
jl
add
fwait
fwait
add
mov
flds
add
lock
jmp
add
add
add
bound
add
add
inc
inc
popa
pop
add
push
pop
pop
push
add
add
add
add
pop
add
pop
pop
pop
pop
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
dec
dec
dec
dec
cs
dec
dec
dec
add
xor
cmp
cmp
ds
inc
inc
inc
add
sub
xor
xor
xor
add
sbb
and
and
add
sbb
push
add
add
add
and
push
add
add
sbb
sbb
pop
sbb
add
add
adc
adc
push
pop
sbb
adc
sbb
add
or
push
or
or
or
push
add
sldt
add
pop
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
sahf
cmp
sahf
cmp
cwtl
jp
mov
fmulp
stc
hlt
stc
hlt
push
icebp
mov
add
add
push
fcmove
decl
addr16
decl
addr16
push
fcmove
pushl
add
add
push
fcmove
call
jo
call
fsubp
call
fsubp
decl
imul
repnz
mov
add
add
mov
out
repnz
call
jne
decl
lcall
out
hlt
decl
cltd
xor
adc
push
fcmove
cli
out
out
shlb
add
movsb
xchg
stc
hlt
call
xchg
daa
call
lahf
aas
push
stc
cld
jmp
sti
lcall
movsl
dec
decl
pushf
xor
call
in
in
fmulp
mov
add
add
add
add
test
in
mov
xchg
sub
adc
pop
push
cli
cld
in
idiv
pushl
mov
ljmp
scas
pop
call
xchg
cmp
xchg
mov
stc
lock
std
mov
cld
stc
lcall
cmpl
pushf
xor
incl
jl
ljmp
incl
jl
aaa
mov
pop
jmp
mov
std
mov
add
add
add
add
lcall
xchg
dec
jmp
lods
pop
pushl
mov
cmp
int
decl
mov
pushl
mov
push
sbb
ds
mov
add
add
add
add
push
fcmove
push
cld
cld
push
fcmove
mov
add
add
add
add
lcall
xchg
dec
call
mov
jo
pop
aam
std
std
ljmp
mov
cmp
dec
mov
add
add
add
add
call
test
dec
jmp
scas
pop
aas
ret
test
idiv
std
cli
ljmp
mov
inc
ret
cmp
pop
test
mov
add
add
add
add
mov
std
sti
push
fcmove
call
xchg
dec
jmp
cwtl
push
jmp
clc
repnz
aas
mov
dec
lcall
xchg
dec
push
fcmove
std
sti
dec
mov
incl
add
add
add
add
mov
inc
mov
push
call
push
fcmove
lcall
sahf
push
lcall
sahf
push
push
fcmove
push
call
popf
inc
mov
mov
jns
les
push
call
push
call
xchg
inc
lods
xchg
mov
add
add
lods
xchg
mov
lods
xchg
inc
lods
xchg
inc
lods
xchg
mov
add
add
aas
add
clc
pop
add
lock
loopne
add
rolb
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
test
mov
add
push
add
addb
call
test
aam
les
mov
movsb
pop
add
add
fsubrl
shlb
add
mov
add
call
les
and
lods
add
insb
add
les
nop
mov
dec
add
add
aam
add
enter
in
add
insb
add
pushf
add
adcb
js
pop
movsb
add
add
les
sub
pushf
add
js
mov
lods
xchg
add
aam
add
lods
add
addb
les
and
mov
add
int3
mov
sub
mov
in
add
hlt
hlt
add
je
fdivl
add
shlb
les
add
mov
pusha
add
mov
nop
add
mov
add
test
add
rol
add
push
add
mov
loopne
add
rolb
js
enter
js
and
enter
mov
sub
test
in
loopne
add
fadd
add
shrb
add
call
js
and
mov
add
int3
add
loopne
add
int3
pushf
add
js
int3
mov
fadds
loopne
fadds
adc
mov
add
enter
loopne
add
fdivrs
add
call
rolb
clc
hlt
hlt
add
rclb
cmp
test
clc
loopne
add
lock
cmp
add
incl
add
cmp
cmp
add
add
push
insl
insl
push
cmp
cmp
push
outsb
outsb
outsb
je
cmp
inc
push
push
dec
imul
add
add
xor
adc
insl
sbb
add
fs
cmp
insl
insl
cmp
add
inc
xor
push
dec
dec
dec
dec
pop
push
or
insl
sbb
je
pop
insb
or
pop
pop
pop
pop
push
pop
imul
pop
cmp
push
pop
insl
sub
outsl
inc
outsb
outsb
outsb
outsb
inc
sbb
insl
je
add
add
push
pop
inc
imul
incl
pusha
jb
pop
insl
push
aaa
add
push
insl
insl
push
ss
and
outsl
incl
and
imul
cmp
aaa
push
insl
add
and
pop
aas
incl
pop
pop
or
insl
insl
aaa
inc
insb
inc
push
pusha
xor
aas
aas
and
and
pusha
push
insl
pop
add
add
add
add
add
and
sub
aas
sub
push
sub
je
add
add
add
je
and
push
sub
aas
or
sub
insl
outsb
aaa
add
add
add
inc
outsb
xor
pop
sub
ljmp
or
sub
outsb
inc
add
add
add
outsb
das
pop
push
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
dec
pop
pop
pop
pop
pop
pop
jne
outsb
sbb
add
add
pop
sbb
pushl
pop
pop
inc
add
add
inc
ljmp
call
das
insb
jmp
add
add
sbb
decl
or
call
add
add
cmp
xor
sbb
syscall
pushl
gs
add
add
adc
cmp
adc
dec
dec
dec
dec
and
cmp
sub
cmp
adc
add
add
push
sbb
xor
dec
es
ljmp
xor
dec
xor
sbb
jmp
add
add
pop
cmp
adc
sub
cmp
pop
pop
dec
jb
or
pop
jmp
add
add
pushl
sbb
sub
push
adc
pop
dec
pusha
dec
sbb
je
incl
add
add
aaa
je
lcall
cmp
ds
jmp
sub
sbb
ljmp
inc
push
push
push
lcall
dec
jne
pop
es
dec
sbb
pushl
aaa
push
add
inc
ljmp
and
ljmp
aaa
add
aaa
inc
cmp
add
incl
add
inc
outsb
call
ljmp
add
outsb
ljmp
add
add
addr16
add
cld
aas
push
ud0
loopne
inc
add
incl
add
incb
add
add
jg
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
pop
incl
add
inc
add
push
ud0
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
adcb
add
adcl
ret
out
mov
push
andb
add
mov
dec
push
ret
xchg
push
stc
jecxz
clc
loope
jmp
ret
ret
out
scas
js
push
mov
lods
mov
stc
fcmovnb
cld
bnd
std
div
cld
icebp
out
cli
in
jbe
lods
jbe
adc
mov
mov
cld
loopne
jmp
out
mov
xlat
int
cli
lock
cld
loopne
cld
jmp
lds
mov
scas
jns
adc
xchg
push
out
lret
scas
cld
fadd
sti
out
call
lret
ret
leave
sar
leave
sar
lret
ret
lret
test
rcr
sar
out
ret
nop
push
adc
add
add
xchg
jno
out
int
cld
faddp
jmp
sar
pop
mov
jmp
movsb
push
fcom
xlat
fcom
xlat
fcom
xlat
call
lcall
mov
ja
jmp
sar
std
loop
push
fmul
inc
xchg
outsb
lahf
les
lods
std
call
int
cmp
pushl
cmp
loopne
loopne
loopne
sub
jl
and
pop
call
fld
std
in
in
xlat
inc
xchg
imul
add
add
mov
fdivr
mul
incl
jmp
lods
push
ljmp
mov
call
jmp
out
ljmp
mov
mov
pop
lods
incl
gs
clc
in
jmp
fidivrs
xor
add
add
mov
sti
jmp
stc
jecxz
ljmp
jnp
pop
stos
pushw
lds
jmp
icebp
icebp
push
repnz
repnz
lock
mov
xchg
incl
lcall
mov
stc
jecxz
cld
in
loopne
shrl
add
mov
mov
jmp
movsb
pop
pushl
xchg
jmp
jmp
rolb
sti
sti
sti
sti
sti
stc
stc
stc
jmp
mov
xchg
pushl
int3
cltd
decl
mov
jmp
out
out
fadd
inc
xchg
jb
fidivrs
sar
hlt
ljmp
mov
mov
das
int3
cltd
lcall
lret
and
mov
jmp
mov
xchg
lcall
xchg
call
stos
cmp
xchg
ljmp
mov
int
std
jmp
fidivl
add
int
xchg
fcmovnb
sti
in
decl
scas
insb
incl
cmpsl
lcall
xchg
lcall
int3
xchg
lcall
int
lcall
les
lcall
mov
lcall
int3
cwtl
lcall
mov
sbb
mov
sti
out
push
fmul
dec
popf
jns
fidivrs
xlat
fcmovbe
sar
mov
lcall
into
lcall
rcrb
lcall
mov
push
rcrl
call
rcrb
ss
ljmp
std
jmp
fdivrl
add
shlb
mov
call
scas
push
call
iret
pushf
call
rcrl
call
shll
lcall
ret
call
aad
call
aam
call
mov
cmp
lods
lcall
scas
push
cmpsb
mov
in
sarb
aaa
fnstcw
loopne
mul
into
lcall
ljmp
incl
scas
call
aam
call
aad
call
xlat
cmpsl
lcall
lret
xchg
lcall
les
call
xlat
cmpsl
call
cmpsb
call
aam
jmp
test
jmp
addr16
loope
cld
bnd
jg
add
add
lods
fdivr
cmc
in
call
into
mov
and
lods
lcall
aad
call
aad
call
xlat
cmpsl
decl
fldcw
lcall
int
lcall
xchg
decl
scas
decl
fldcw
call
cmpsl
jmp
shll
in
aam
imul
jmp
enter
add
add
lahf
jl
jmp
imul
jl
xchg
das
scas
je
cmp
cmp
sub
test
sub
test
push
rclb
push
rclb
and
jnp
sub
test
sub
cmp
mov
cmp
scas
ja
popf
mov
lock
in
xlat
ret
dec
lahf
jl
fdivs
fdivr
cld
out
stos
mov
cmc
std
std
std
dec
stos
cld
out
clc
jmp
test
fnstcw
push
in
mov
cmc
cmc
std
std
std
call
in
in
jnp
jnp
cmc
in
call
mov
add
fdivrs
in
aam
fcmovnu
iret
push
hlt
hlt
std
std
std
jge
enter
mov
in
aam
call
mov
out
add
add
mov
call
leave
stos
ljmp
pushl
popf
jmp
xchg
jmp
jmp
xchg
jmp
xchg
jmp
xchg
jmp
xchg
decl
test
ljmp
shll
call
fisubrl
call
call
mov
testb
add
shlb
jmp
mov
push
lcall
stos
decl
loopne
incl
loope
incl
loop
incl
jecxz
call
enter
out
std
sti
ljmp
sar
aad
incl
loop
decl
loope
call
scas
call
test
jmp
mov
call
mov
incl
add
add
mov
jmp
lds
lcall
enter
fbstp
incl
loop
incl
in
incl
in
call
lret
jmp
fidivl
incl
mov
jmp
in
call
lret
xchg
ljmp
lahf
dec
jmp
les
dec
mov
incl
add
add
mov
push
ljmp
inc
mov
jae
pop
lret
xchg
call
fisubrl
incl
in
call
lret
out
std
sti
call
lret
fnstenv
call
jl
sar
dec
aad
jmp
mov
pop
pushl
jmp
dec
mov
incl
add
add
mov
stc
out
in
ljmp
call
test
cmp
fsubrs
adc
popf
decl
aam
incl
out
decl
xlat
pushl
lret
cmp
xchg
call
insb
call
mov
mov
fidivrl
add
mov
mov
in
ret
mov
test
nop
lcall
leave
fwait
push
std
incl
leave
decl
mov
or
lret
pushl
jecxz
lcall
lret
bound
js
in
ret
std
cli
cld
stc
cld
clc
sti
idiv
imul
in
faddp
mov
mov
add
mov
mov
pusha
out
ret
lahf
out
loop
out
jmp
ret
pushl
mov
lcall
int3
mov
incl
out
call
mov
pushl
ret
std
std
cld
cld
cli
clc
ljmp
test
mov
add
add
mov
jo
lret
cld
cli
stc
cld
clc
cmc
dec
mov
cmp
fsubrs
incl
jle
fnstenv
hlt
cld
cli
cmc
jmp
lret
shlb
jno
int3
test
mov
jmp
out
call
mov
pushl
gs
mov
cld
sti
jmp
lret
lret
jae
add
add
movsl
test
in
fld
push
loopne
stc
lock
aam
lahf
lcall
add
aad
mov
stc
icebp
in
call
mov
jo
add
add
shrb
fadd
mov
fidivrl
add
clc
pop
push
ud0
loopne
incl
add
incl
add
incb
add
add
aas
cld
add
aas
clc
add
pop
clc
add
pop
lock
add
pavgb
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
paddd
add
rolb
jmp
pop
clc
pop
cld
aas
ljmp
add
add
add
add
add
add
and
add
add
andb
add
jns
xor
mov
mov
ja
sahf
scas
js
sub
add
add
js
mov
addr16
mov
jmp
int
call
stos
mov
mov
je
jp
jb
or
add
add
adcl
mov
lods
cli
loop
call
clc
loopne
jmp
lds
std
mov
push
int
jl
cmp
add
add
xchg
insb
cmc
jecxz
cltd
in
lods
std
fnstcw
cld
fnstcw
cld
fnstcw
push
aad
fidivs
gs
scas
jp
jns
add
add
adcb
movsb
jle
out
leave
stos
sti
fnstcw
cld
fadd
std
in
loopne
cld
cli
sti
stc
std
ljmp
cld
fnstcw
jmp
mov
int3
sahf
js
mov
push
sahf
scas
jns
add
add
add
pop
mov
mov
sti
hlt
shll
cld
fidivrl
sti
cmc
repnz
in
ljmp
fstp
fdivr
out
out
in
std
hlt
lock
jmp
cld
fnstcw
push
xlat
sar
lods
mov
mov
push
popf
mov
push
add
add
add
mov
fistpll
mov
std
ffreep
push
repnz
xlat
fcos
fcmovbe
fcos
aad
call
aad
fcmovnbe
fcos
fcmovnbe
fcos
out
push
out
jecxz
std
jecxz
std
ffreep
push
fmulp
fidivl
pop
sahf
mov
push
pop
mov
mov
mov
in
loopne
sti
repz
pop
cwtl
movsb
pop
jmp
xlat
fdivr
loopne
fdivr
aad
call
aad
jmp
fcomp
jmp
fcomp
cmp
ret
cld
repz
in
std
loop
clc
in
fnstsw
pop
lahf
mov
push
add
add
add
cwtl
sti
stc
fnstcw
in
loop
sar
pusha
mov
lcall
popf
dec
pushl
addr16
fcmovu
jmp
fcmovu
fdivr
fcomp
fdivr
in
loopne
in
loopne
xor
dec
ljmp
call
in
loopne
out
clc
out
fnstsw
pop
mov
add
add
mov
icebp
not
mov
in
loop
fsub
leave
call
call
popf
dec
jmp
mov
incl
cmp
call
fdivrp
ljmp
cmp
lcall
pushf
dec
lcall
jno
jecxz
into
jmp
iret
push
out
call
mov
in
mov
add
add
stos
xchg
hlt
aad
ljmp
push
stos
call
dec
jmp
xchg
call
fwait
cmp
jmp
jmp
in
jmp
in
push
out
push
out
aas
mov
mov
and
dec
jmp
outsb
jmp
loop
jmp
push
dec
mov
pop
cmp
add
add
cltd
je
out
iret
mov
std
jecxz
call
sar
pop
lods
imul
xor
lahf
pushl
nop
pushl
in
out
push
in
out
ljmp
push
jmp
push
jmp
pushl
mov
nop
aas
xchg
jmp
pushf
dec
ljmp
jne
cmc
out
call
fdivr
ljmp
mov
test
rclb
clc
sti
jmp
int
jmp
insb
mov
lcall
mov
pushl
nop
ljmp
mov
xor
repnz
cld
repnz
push
lock
out
lock
repnz
repnz
xor
mov
cmp
cwtl
incl
cltd
lcall
mov
lcall
dec
jge
jg
jmp
jmp
sar
cli
call
cmpsl
repnz
add
add
mov
fadd
in
ljmp
daa
sahf
dec
jmp
mov
pushl
xchg
ljmp
nop
jmp
lds
xor
cli
cld
cli
cld
push
div
push
div
clc
std
clc
std
pushl
mov
mov
and
mov
inc
into
lahf
decl
lahf
lcall
mov
ljmp
push
jmp
jmp
ljmp
iret
movsl
or
mov
fwait
jbe
out
sarb
jmp
aad
int
mov
cmp
lods
pushw
xchg
ljmp
leave
xchg
jmp
lcall
nop
lcall
mov
xor
mov
std
cld
cld
cld
cld
cld
pushl
mov
lcall
nop
jmp
leave
xchg
decl
decl
lahf
call
test
pop
call
aam
jmp
xlat
std
call
mov
xchg
ret
sub
mov
int
jmp
sar
jmp
fcos
bound
push
ljmp
les
jmp
leave
xchg
lcall
leave
xchg
call
enter
ret
pushl
mov
xchg
lcall
enter
into
pushf
call
scas
cmp
nop
call
mov
jae
jmp
jmp
sar
xlat
mov
fld
xchg
insb
and
add
add
sahf
jnp
repnz
cld
std
out
jmp
aad
mov
mov
js
ds
mov
lcall
xchg
lcall
xchg
lcall
lret
xchg
call
xchg
pushl
lds
pushl
mov
xchg
lcall
int3
cwtl
lcall
int3
xchg
lcall
lret
inc
aam
lcall
mov
adc
dec
int3
lods
jmp
xlat
std
jmp
mov
xchg
ret
and
mov
sar
jmp
sar
pop
cmpsl
arpl
sbb
fwait
pushl
shlb
lcall
int3
xchg
lcall
int
lcall
int
call
int
pushl
ret
mov
ljmp
rolb
sbb
lcall
int3
xchg
jmp
into
pushf
decl
scas
incl
sahf
call
test
pushl
outsb
jmp
aad
jmp
clc
in
call
mov
fld
xchg
insl
sbb
add
add
mov
ret
jmp
mov
mov
cmp
aam
jmp
int3
cwtl
lcall
into
lcall
rcrb
pushl
lds
ljmp
mov
adc
pushf
call
rcrl
call
iret
popf
call
cltd
pushl
shll
adc
mov
test
jmp
fcos
ljmp
imul
add
add
xchg
outsb
add
sti
in
in
jmp
sar
cmpsw
lcall
stos
popa
incl
mov
lcall
iret
pushf
call
iret
fwait
call
rcrb
call
rcrl
ljmp
nop
decl
rcrb
call
shlb
lcall
stos
pushl
int
lcall
test
pushl
outsb
jmp
in
mul
iret
std
shrb
add
enter
ljmp
in
fcmove
lods
pushl
dec
lcall
mov
mov
sub
mov
call
rcrl
call
mov
decl
aam
ljmp
xchg
ljmp
enter
aad
call
aam
call
aam
call
aam
call
mov
jmp
cmpsb
cmp
stos
call
mov
incl
push
jmp
iret
mov
out
fdivrp
cld
jmp
test
das
shrb
sar
in
std
jecxz
call
cmpsb
pop
pushl
int3
cltd
incl
mov
pop
shll
call
mov
call
aad
call
cmpsb
decl
movsl
ljmp
xchg
jmp
lret
or
cmpsl
call
xlat
test
adc
cmpsl
call
cmpsb
call
aad
call
aam
lcall
aam
ljmp
stos
lcall
mov
sub
xchg
jmp
xlat
out
repz
test
test
add
add
mov
fcos
push
loope
std
fadd
call
pop
call
mov
decl
mov
sub
test
call
aam
call
aad
call
cmpsb
call
fsubrs
incl
fsubrs
jmp
lret
xchg
incl
fldcw
decl
fldcw
call
xlat
test
adc
cmpsb
call
aam
lcall
test
shlb
jmp
popa
fmul
push
jecxz
stc
out
call
mov
rolb
add
add
mov
mov
push
loope
fcmovnb
cmpsb
jmp
fwait
dec
call
mov
mov
pop
aad
decl
shll
decl
cmpsb
decl
xlat
cmpsl
decl
fisubrl
incl
fisubrl
jmp
lret
xchg
incl
fldt
pop
fldt
or
test
decl
movsl
call
xlat
movsl
lcall
cmpsb
decl
mov
dec
jmp
lret
push
in
cld
jmp
jmp
lods
ljmp
add
shrl
sar
push
loope
cld
out
ljmp
stos
popa
ljmp
into
pushf
incl
mov
fsubrs
lcall
fldcw
lcall
cmpsb
lcall
xlat
cmpsl
lcall
xlat
test
pushl
ret
mov
sbb
jmp
jmp
jecxz
pushl
mov
call
fnsave
lcall
fdivl
lcall
lcall
fldcw
lcall
leave
xchg
cmp
mov
jmp
out
loop
icebp
fcmovne
icebp
shrl
add
fnstsw
cld
push
in
repz
lcall
test
cwtl
jmp
sahf
jmp
lret
cwtl
jmp
lret
daa
lret
daa
lret
daa
lret
daa
lret
daa
lret
sub
mov
sub
xchg
incl
cltd
ljmp
int3
lcall
lret
cwtl
jmp
lret
cwtl
decl
xchg
jmp
lret
cwtl
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shlb
jmp
xchg
jmp
xchg
pushl
test
lcall
repz
mul
xlat
stc
fdivs
add
mov
mov
std
lock
push
out
in
int
mov
std
std
cli
sti
out
repnz
mov
shll
cli
in
fidivrs
jg
shrb
std
icebp
in
push
in
fidivrl
lret
cld
std
idiv
pushl
mov
stos
stc
lock
cld
icebp
jecxz
out
mov
iret
cmpsl
xchg
mov
pop
cmc
out
sti
push
out
std
icebp
in
mov
jge
jecxz
fdivrp
jmp
div
call
lret
daa
popf
dec
fidivrl
ljmp
fcmovne
out
aad
xchg
pop
xlat
mov
mov
out
loopne
push
ljmp
scas
cmp
inc
hlt
call
decl
fldcw
ljmp
cmpsb
pop
pushl
ljmp
mul
hlt
fstpt
add
shrb
out
clc
in
push
fmulp
jmp
in
hlt
call
loopne
incl
fldcw
decl
rcrb
call
in
stc
out
push
in
loopne
aam
movsl
mov
aam
lahf
int
imul
stc
lock
aad
incl
cmp
int
decl
movsl
decl
cmpsb
decl
cmpsl
decl
test
decl
stos
decl
lods
decl
lods
decl
lods
incl
lods
decl
xchg
stc
std
mov
out
incl
fldt
decl
loope
decl
mov
push
aad
jmp
mov
call
fcmove
sti
repnz
out
loopne
aam
mov
add
shrb
sti
icebp
push
aad
incl
lods
decl
iret
cltd
decl
incl
fbstp
incl
loope
incl
loope
incl
loope
incl
loop
incl
loop
incl
loop
lcall
shll
fdivr
repz
mov
incl
mov
incl
loope
decl
rcrl
call
fcmovb
std
cmc
cli
hlt
call
in
out
mov
sti
repnz
fadd
jmp
movsl
push
call
ret
test
sbb
scas
call
loopne
decl
loop
incl
jecxz
incl
mov
incl
mov
incl
in
incl
jecxz
jmp
shrl
out
cld
cli
pushl
in
incl
fnsave
add
mov
decl
in
call
in
lcall
fsubrl
jmp
mov
lret
std
cmc
cli
cmc
jmp
in
mov
jmp
clc
repnz
sti
repz
in
fildll
dec
lcall
popa
call
xchg
adc
mov
decl
mov
or
mov
incl
sar
in
incl
in
incl
in
jmp
shrl
cld
call
stc
repz
fcos
pop
loopne
incl
loopne
incl
in
lcall
call
leave
ljmp
out
ljmp
loop
jmp
stos
lcall
lds
jmp
push
jmp
mov
stc
lock
cld
idiv
sti
div
jmp
aam
incl
add
add
lds
sti
idiv
sti
out
fcmovb
call
scas
xchg
jp
pusha
mov
push
call
leave
nop
call
aad
decl
fidivs
incl
in
incl
in
incl
in
jmp
aam
call
hlt
call
incl
loopne
incl
out
jmp
ljmp
pop
ljmp
pop
aam
incl
test
lods
push
cmp
pop
incl
mov
push
std
sti
idiv
sti
div
scas
hlt
aam
sahf
sahf
clc
repz
cld
idiv
push
out
push
int
fbstp
decl
pusha
ljmp
scas
push
sbb
shll
decl
in
incl
out
jmp
aad
stc
std
dec
clc
repnz
xlat
incl
loop
incl
jecxz
call
call
sar
jno
aad
mov
enter
xchg
ljmp
scas
imul
mov
jmp
mov
push
iret
mov
cld
clc
cld
clc
push
call
mov
add
mov
scas
fdivr
repz
cld
cli
push
jmp
not
push
mov
mov
mov
insb
lcall
rorl
or
lods
jmp
cld
stc
lcall
in
incl
loop
incl
out
call
call
into
call
mov
jmp
mov
jp
idivb
push
out
cld
cli
std
sti
clc
push
icebp
in
fcmovnb
lods
leave
iret
test
add
shll
scas
repnz
fdivr
cmc
lock
clc
std
cli
cld
out
call
dec
movsl
jns
jp
ljmp
mov
call
xchg
ljmp
repz
push
in
fdivr
add
ret
in
incl
out
call
out
ljmp
loope
lcall
int
jmp
mov
incl
movsl
jnp
hlt
les
cld
cli
cld
cli
idiv
sti
div
cmc
clc
repz
mov
xchg
and
add
add
movsb
xchg
push
aam
mov
xchg
in
mov
repz
in
stc
cmc
cmc
std
sti
cli
std
sti
repz
out
mov
mov
stos
outsb
call
roll
add
out
incl
out
decl
pop
test
inc
fwait
imul
mov
repnz
std
std
cli
clc
sti
div
hlt
repnz
jecxz
lds
mov
mov
push
shrl
add
rcrb
in
int3
rcl
repz
push
jecxz
jmp
mov
mov
pmaxub
decl
mov
sbb
mov
mov
jnp
repz
std
cld
cli
stc
push
out
out
ljmp
test
mov
add
les
mov
clc
repnz
std
cld
cld
div
in
mov
jl
push
sbb
shlb
lcall
rorb
out
mov
stc
std
cld
sti
hlt
call
scas
lret
cmpsb
xchg
pop
ret
movsb
lea
leave
mov
cli
div
clc
std
jmp
fwait
popa
decl
outsl
decl
lcall
ret
test
std
std
clc
repz
cmpsb
mov
add
add
popf
xchg
stos
xchg
xchg
repnz
jmp
cld
sti
std
jmp
shlb
rcll
mov
cld
sti
cli
cld
out
into
loopne
stos
xchg
jb
movsl
mov
lret
scas
cltd
cmp
lds
sti
cli
div
stc
in
scas
mov
lds
mov
std
sti
clc
hlt
cld
call
add
add
mov
sbb
int
mov
cld
stc
idiv
jmp
mov
lret
scas
xchg
push
in
mov
cmpsl
repnz
push
iret
call
mov
adc
add
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incb
add
add
cld
add
aas
incl
add
clc
add
aas
incl
add
lock
ud0
add
lock
ud0
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
aas
add
clc
add
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
lock
add
sldt
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
cld
add
add
aas
add
inc
add
add
add
clc
add
pop
incl
add
incb
add
add
incl
add
incl
add
inc
add
incl
add
jmp
ud0
add
push
ud0
add
clc
pop
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
mov
add
add
add
sbb
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
mov
lret
push
test
ljmp
cmp
xchg
xchg
inc
cmp
shlb
push
cmp
ja
cmp
out
data16
dec
daa
ficompl
xor
cld
xchg
push
xor
inc
bound
pusha
scas
inc
inc
scas
push
lods
cld
add
pusha
rclb
test
push
clc
test
lods
sub
daa
das
mov
cltd
cmp
jmp
adc
daa
cmp
mov
dec
pop
jno
fistps
pop
dec
xchg
movsb
pop
mulb
and
mov
loope
aam
insl
fimull
pop
cmp
push
lds
lea
rcrl
in
push
jecxz
xchg
test
pop
gs
xorb
clc
cltd
pop
inc
les
push
xor
jae
lds
cld
add
movsl
jno
jnp
pop
mov
aam
mov
mov
popa
lret
and
bound
test
rorl
ds
jno
inc
enter
xor
in
repz
repz
mov
fwait
dec
add
mov
aad
mov
out
lds
test
jns
test
call
out
popa
pop
lcall
adc
adc
mov
xor
push
mov
cmpl
pop
adc
dec
cli
shlb
leave
in
and
rcl
mov
mov
sbb
cmp
mov
cmp
xchg
addb
jp
pop
pop
xor
dec
sar
cmp
mov
out
leave
mov
inc
jg
popf
repnz
xchg
cmp
mov
fwait
std
pop
sub
sbb
mov
jl
mov
mov
sub
adcb
jae
mov
in
adc
pop
mov
sub
aas
scas
test
jb
dec
push
mov
push
clc
xchg
push
out
das
mov
mov
mov
or
pushf
mov
sub
xor
cmp
mov
dec
fwait
je
push
dec
scas
dec
fcoml
add
outsb
lock
adc
xor
cmpsb
test
fcomps
test
sub
leave
and
adc
inc
aam
dec
sbb
add
adc
pop
mov
and
loop
sub
or
dec
rcrl
add
push
jle
mul
in
dec
outsl
dec
cmpsl
xor
sbb
shrb
jns
push
xor
inc
mov
cmp
add
outsb
jnp
loope
mov
mov
in
loope
or
mov
fwait
pop
sbb
inc
ficoms
sbb
add
mov
cs
out
outsb
out
jmp
cmpsb
sbb
mov
sub
je
mov
jecxz
xchg
out
mov
mov
int3
jb
jle
notl
dec
enter
rclb
add
shr
xchg
addr16
sub
mov
adc
fwait
incl
mov
xor
sbb
loope
mov
jo
movsl
xor
fsts
inc
inc
xchg
add
stc
subl
js
jle
sbb
xchg
adcl
xor
aam
jmp
jecxz
dec
jecxz
xchg
xor
nop
cld
jno
or
lgs
popa
repnz
push
jb
sub
jp
cmp
outsb
dec
mov
push
mov
inc
rorb
xchg
push
xor
aam
xchg
andb
pushf
inc
mulb
sbb
lds
mov
jne
out
loope
push
sub
pop
push
test
mov
adc
dec
mov
in
mov
divb
sahf
inc
aad
loop
inc
in
arpl
sub
jbe
jg
loopne
addb
pop
dec
mov
arpl
lcall
xor
lock
adc
push
mov
ss
dec
arpl
test
repz
lcall
shr
cmp
or
aas
xlat
rcrl
sub
insb
xorb
testl
out
dec
xchg
out
inc
inc
pop
jbe
jl
xor
mov
imull
jne
and
jnp
addb
sub
das
movsl
push
add
sahf
test
xlat
xor
dec
cmp
mov
stos
pop
cltd
xchg
mov
js
pushf
popa
aad
push
lret
cwtl
and
call
cmp
lods
in
in
call
mov
cmp
shll
push
ds
ret
loope
jmp
pop
aad
add
lahf
push
dec
jle
in
popf
leave
xchg
add
xchg
mov
mulb
cmpsb
mov
xchg
aaa
cmp
insb
dec
call
mov
popf
icebp
popa
addr16
jle
xor
cmpsb
mov
in
push
mov
add
jg
jle
popf
and
or
and
pop
mov
pop
aaa
xor
push
movsb
and
xor
rolb
aas
das
or
std
cmp
xchg
pop
and
sub
inc
lret
jae
push
jp
lock
stos
mov
scas
stos
shlb
jnp
xor
test
adcb
push
sub
pusha
mov
and
sbb
mov
data16
add
inc
push
inc
dec
sbb
dec
and
push
xchg
inc
dec
out
loope
mov
xchg
mov
xor
push
xchg
enter
adc
and
and
enter
sub
sbb
pop
mov
xchg
sub
push
xor
pop
push
and
aam
sub
and
adcl
mov
dec
stc
test
cmp
imul
dec
add
pop
push
add
mov
or
hlt
shll
mov
mov
pop
test
xor
ljmp
adc
int3
cltd
mov
lods
lahf
mov
or
icebp
xor
sti
testb
jb
jns
fwait
loop
pop
push
jl
inc
xchg
test
jne
shlb
cmp
xchg
and
xchg
rcll
xchg
cmp
das
and
push
and
sarl
xchg
push
cmp
mov
outsb
xchg
in
push
push
adc
popa
insl
shll
aas
popa
pop
shrb
push
jp
sub
ret
and
ret
cwtl
int3
sbb
jne
add
fsubr
scas
adc
pop
mov
jg
int3
dec
js
mov
scas
push
pop
clc
mov
dec
or
inc
adc
les
add
int
fs
cld
data16
lahf
and
mov
push
dec
push
divl
dec
mov
add
imul
xchg
xchg
mov
inc
int
add
sub
inc
mov
xchg
inc
xor
arpl
fsubrl
incl
cld
stos
pop
jne
leave
sar
es
loop
pushf
mov
jbe
nop
inc
mov
shll
inc
xor
cmp
jmp
add
mov
mov
stc
xchg
jge
mov
rorb
and
mov
mov
mov
sbb
js
and
jb
mov
mov
sbb
jmp
mov
clc
repz
lcall
imul
and
out
in
mov
shrb
and
and
cmp
scas
push
popf
push
sbb
jae
dec
adc
or
lahf
icebp
cmp
mov
cwtl
scas
aaa
and
gs
pop
jge
mov
ror
mov
mov
xchg
lods
lock
in
mov
sub
mov
ss
clc
mov
data16
js
movsb
and
cld
daa
mov
pop
jno
dec
iret
pop
jo
fdivs
stos
repz
stos
jle
repz
xchg
fisttps
dec
mov
mov
inc
xor
lods
movsl
adc
dec
popa
push
fsubrl
sahf
idiv
mov
popa
mov
dec
push
jl
pop
cld
lock
push
pand
push
sti
push
bound
jb
and
ret
js
imull
xchg
imul
cmpsb
or
out
out
das
notl
xor
cmp
lods
dec
mov
and
xor
jno
mov
xchg
sub
xor
mov
xor
jp
cli
inc
fimuls
je
jg
push
gs
in
cmp
add
test
push
mov
dec
xchg
dec
xchg
aaa
push
iret
in
mov
cmpsl
mov
or
cmpsb
fsts
add
lds
xor
add
ljmp
dec
gs
lahf
add
movsl
inc
add
mov
in
decb
insl
mov
cmp
insl
dec
leave
dec
addr16
test
sub
dec
xchg
stos
mov
cmp
sti
jg
fwait
add
sub
into
es
sbb
cld
scas
test
sub
stos
rolb
sbbb
sub
int3
enter
or
cmp
jnp
mov
and
jb
out
insb
inc
mov
cmc
jecxz
sub
pop
and
lcall
adc
cli
mov
icebp
orl
jb
add
in
push
jnp
pop
mov
dec
mov
bound
movsb
mov
sub
dec
enter
jne
adcb
int
adc
mov
adc
lock
jno
jno
mov
dec
adc
sub
or
sti
jp
push
test
and
lret
or
push
insb
xchg
sub
sahf
aam
scas
mov
cmp
in
and
and
je
cltd
xchg
sub
scas
jnp
add
pop
scas
lods
out
fimuls
or
je
push
fsub
daa
push
or
fldt
or
push
iret
adc
pop
pop
ds
fists
mov
lahf
aas
push
xchg
inc
pop
or
popa
movsl
das
in
pop
gs
adcb
lock
in
jb
shlb
mov
outsl
push
sbb
hlt
xor
lret
and
sub
or
push
adc
push
into
inc
bound
jmp
cmp
mov
or
enter
sarb
inc
sub
push
les
loopne
ljmp
repz
imul
xchg
cmp
mov
jnp
mov
push
pop
and
lret
in
cmp
add
lds
je
pop
js
aam
mov
rorl
lret
insl
cmp
in
scas
stos
ds
outsl
dec
mov
xchg
inc
scas
jmp
xor
test
or
mov
push
dec
xor
adc
ret
cmc
je
clc
cld
jg
push
pop
pop
dec
mov
jne
sbb
dec
in
xor
push
fcoms
pop
pop
jmp
push
test
xchg
jecxz
jae
call
jo
mov
in
adc
stos
out
fwait
jle
xor
stos
test
xor
pop
or
mov
inc
lods
jo
loopne
enter
int
leave
dec
push
outsb
jb
jle
lcall
out
xor
push
push
notl
xor
repnz
movsl
jno
or
mov
sbb
icebp
cmpsb
jg
sbb
aaa
stc
pop
mov
push
dec
jl
push
xchg
add
and
xchg
mov
lahf
xchg
push
lods
sub
sbb
mov
aad
xchg
fbld
les
mov
sti
pop
mov
mov
lock
push
sbb
sbb
inc
xor
xor
cmc
out
cs
sub
jo,pt
inc
int
dec
push
addb
sbb
sbb
test
pop
pop
adc
mov
push
push
sub
xchg
mov
jo
sarl
cmp
fidivrl
enter
mov
mov
cmp
cmp
popa
push
lds
test
ja
xor
les
mov
loope
mov
and
lods
nop
mov
push
adc
lahf
ret
cmp
pop
cltd
cmp
lahf
inc
inc
rcrb
inc
sub
pop
mov
in
mov
jl
push
sahf
jae
ret
in
add
aas
out
das
stc
push
mov
out
stos
dec
test
xchg
xor
mov
dec
test
loop
pusha
mov
sbb
loopne
push
jg
sbbl
ja
or
cmp
add
push
sub
and
movsb
jns
test
pop
inc
aam
or
andl
jns
mov
mov
xlat
mov
andb
cld
pop
movsb
mov
jmp
inc
inc
xchg
iret
rcrb
lods
out
or
cmp
fists
cld
shrb
jns
xchg
jae
addr16
shll
adc
cli
divb
or
xchg
cs
sub
fnsave
dec
leave
mov
and
sub
aad
dec
negl
mov
pop
cltd
add
jmp
inc
jg
ret
jle
and
lods
mov
and
iret
xor
mov
jae,pt
xchg
mov
stos
sbb
shlb
movl
xchg
in
out
fists
push
pop
xchg
test
pop
lret
ret
pop
jnp
and
ret
outsb
cmp
adc
rorb
inc
jno
test
add
lret
repz
fbstp
scas
adcl
nop
mov
inc
sub
nop
mov
lcall
jae
dec
loope,pn
and
js
sbb
push
xor
fdivp
pop
mov
addl
xchg
sbb
and
aam
sub
add
mov
pop
dec
push
push
call
dec
imul
rorl
popa
jmp
pop
addr16
popa
adc
in
ja
xor
enter
les
add
mov
movb
shrl
lret
pop
add
jno
cli
in
add
xchg
call
push
hlt
cmp
movsb
rclb
xchg
mull
std
fists
out
xchg
xchg
fmull
dec
sub
fs
repnz
mov
xor
mov
stc
mov
inc
mov
lds
xchg
push
mov
mov
xchg
jge
fwait
sbb
cli
cmc
inc
rcr
add
fptan
jno
adc
add
or
shll
mov
daa
add
mov
xchg
push
xchg
sub
adc
lea
push
enter
push
test
mov
sub
push
pusha
repnz
addr16
lock
out
inc
mov
xchg
popf
pop
pop
ds
pop
into
repnz
push
lret
xchg
test
push
cwtl
pop
int
hlt
dec
sbb
jecxz
and
lcall
aaa
pop
daa
pop
mov
mov
js
ret
inc
pop
enter
test
cld
sbbb
pop
shrl
ss
sarb
dec
jns
push
sbb
sbb
out
adc
inc
jno
mov
sbb
jmp
stos
rclb
leave
add
pusha
fists
mov
mov
jno
int
inc
mov
imul
inc
rcrl
jp
loopne
cli
and
mov
push
mov
cmp
pusha
pop
mov
in
addr16
xor
insb
or
shrl
pushf
or
dec
icebp
cmp
or
lods
jnp
sub
fs
xor
jbe
out
xchg
xchg
cmpsb
or
pushf
hlt
xchg
mov
sub
jo
test
test
cmpsl
mov
test
dec
or
or
fldl
mov
adc
mov
mov
lcall
mov
loopne
mov
push
jge
js
rcll
sub
mov
scas
and
test
fwait
int3
ss
mov
loopne
repnz
pop
xchg
sbb
je
xchg
push
or
pop
pop
push
ss
aaa
fstps
mov
mov
ret
loop
js
mov
popf
nop
int
popf
inc
inc
adc
andb
imul
imul
xlat
cwtl
addr16
fucomip
fcompl
lret
lcall
mov
rcl
mov
ret
pop
loope
test
fisubrl
insl
dec
jae
sbb
scas
enter
xchg
mov
mov
xchg
repnz
pop
sbb
pop
inc
mov
movsb
push
faddl
cmc
insl
into
mov
inc
or
sahf
push
dec
xchg
imul
rcll
inc
jmp
out
adc
adc
pop
loope
into
fildll
inc
idivl
dec
xchg
lea
inc
test
jo
cmp
xor
xor
xlat
aam
cltd
subl
add
pop
sub
mov
fcomip
cmc
or
lods
add
push
jl
push
inc
push
and
sub
stos
movsb
add
sub
adc
ficompl
xchg
in
xlat
pop
lea
enter
pop
add
mov
mov
cmpsb
int3
mov
jmp
in
xchg
ficompl
movsb
dec
mov
adc
xchg
pushf
jne
aam
call
sbb
andl
sub
adc
call
lret
cs
cmp
das
enter
dec
shll
int3
sub
lret
insl
lods
in
in
nop
mov
loope
push
outsl
outsl
outsb
push
mov
lea
jne
repnz
pushf
mov
mul
mov
repz
jo
mov
scas
insb
out
push
stos
or
jne
int
adc
repz
int
daa
push
imul
cmp
iret
lock
fdivrs
sbb
cmpsb
js
and
jb
cltd
xchg
clc
mov
movl
xchg
jnp
pop
out
pop
pop
add
pop
xor
stos
inc
pop
jne
std
fsubp
cld
andl
pop
cmpsb
pop
cwtl
jg
leave
inc
and
inc
jl
rorl
sbb
addr16
lods
sahf
data16
and
jecxz
scas
mov
test
pop
lods
popf
das
jnp
lds
jecxz
mov
fcmovb
pop
xchg
xchg
in
push
xor
neg
sub
sbb
loope
arpl
jno
xor
das
fiaddl
popl
inc
icebp
pop
jl
stos
xor
insl
lods
out
inc
or
inc
mov
adc
sar
xor
call
mov
and
psubq
xchg
fists
jl
enter
add
hlt
daa
push
outsb
xor
call
jo
bound
stos
fisttpl
scas
insb
cmp
mov
xor
or
into
inc
or
inc
mov
mov
in
fsub
cmp
scas
dec
mov
mov
pop
mov
adc
lds
jbe
imul
mov
test
xchg
cmp
adc
aam
sub
xchg
xchg
enter
popa
insb
cltd
popa
and
in
sbb
mov
mov
addr16
gs
add
pop
xor
jg
or
in
mov
cmp
sbb
xor
scas
mov
popf
js
mov
cs
gs
mov
stc
cs
mov
pmaxub
int
cmpsb
sbb
dec
daa
sbb
lock
hlt
mov
push
popf
mov
xchg
sbb
push
sbb
lcall
imul
jne
mov
inc
jb
orb
loope
jg
add
test
pusha
or
push
leave
aad
test
imul
mov
xor
jb
mov
fisttpll
and
pop
dec
jmp
int
out
arpl
pop
mov
pop
enter
jbe
dec
dec
mov
and
or
xor
ds
mov
push
add
mov
add
loope
pop
pop
dec
push
lcall
push
sbb
adc
xor
push
inc
hlt
xor
inc
and
jae
inc
add
mov
adc
inc
push
test
lcall
jae
adc
icebp
push
std
inc
jmp
fsubs
or
push
cmp
shlb
or
jmp
mov
ss
out
imul
and
and
jns
out
push
dec
xor
fnstcw
out
pop
xor
jle
fsubrs
jb
out
test
add
cmp
arpl
add
sub
out
inc
fdivrl
and
inc
hlt
xor
fadds
push
sbb
test
jmp
jb
and
outsb
data16
jns
scas
mov
lret
mov
add
lods
inc
cmp
inc
add
test
dec
dec
imul
cli
pushf
dec
mov
sbb
and
dec
mov
dec
xchg
inc
ljmp
cs
fwait
mov
mov
mov
sub
pop
out
inc
mov
lods
mov
outsl
push
lret
in
inc
xchg
inc
inc
add
in
mov
xor
xlat
or
push
mov
cmp
sbbl
ljmp
sub
mov
inc
jp
inc
jae
jmp
into
and
sub
cmpsb
inc
shlb
aaa
gs
sub
sbb
dec
mov
clc
mov
sub
xlat
xchg
add
movsl
sbb
movl
or
insb
aad
jp
scas
push
inc
adc
insl
movsl
mov
adc
lret
test
loopne
xchg
sub
nop
jp
scas
call
out
dec
clc
movsl
xchg
das
popf
loope
push
in
clc
pop
lret
sahf
cmp
js
shlb
cld
int
inc
pop
inc
fs
pop
enterw
rcr
daa
addr16
push
rclb
fistps
sub
mov
xchg
js
movl
shll
cmp
lcall
and
xchg
movsl
and
aad
push
sub
jnp
xor
sub
dec
push
xor
xchg
sub
xchg
inc
ret
and
in
xor
loope
or
ret
aam
dec
pop
test
mov
test
mov
mov
cmp
ljmp
and
dec
outsl
outsl
je
cwtl
sub
nop
mov
cmp
pop
rorb
xor
dec
adcl
shlb
inc
dec
xor
add
sarb
fldcw
and
fistps
cmpsb
call
sbb
lret
push
xlat
push
andl
cmp
xchg
test
lds
hlt
xorb
adc
adc
jecxz
sbb
xchg
rcr
out
cli
xor
push
arpl
inc
pop
mov
ljmp
fs
insl
mov
test
stos
push
fcomi
jo
fiadds
ljmp
mov
and
cli
movsl
sbb
in
mov
test
dec
sbb
adc
fildl
sbbb
sbb
xchg
leave
lret
add
jp
sarb
push
out
sub
fistpl
inc
inc
mov
cmc
rcrl
popa
out
out
mov
dec
loopnew
ja
cmp
negl
loope
mov
sbb
aad
pop
and
xchg
mov
pop
mov
push
and
arpl
arpl
cli
imul
mov
out
dec
sub
movsb
fdivr
outsl
int3
test
movsl
shll
cmp
pop
push
scas
fsubr
push
std
gs
aam
push
cmc
inc
pop
sarb
mov
repnz
mov
dec
jp
sar
xchg
sub
inc
push
sbb
xchg
das
push
ret
neg
sub
iret
loopne
pop
and
sahf
push
mov
leave
imul
cmp
inc
cmp
mov
xor
mov
cld
iret
add
mov
xchg
mov
mov
dec
mov
int
arpl
ja
ljmp
repnz
mov
aaa
mov
add
and
scas
fxtract
sub
loopne
mov
mov
adc
mov
push
decb
movsl
jb
in
scas
dec
sahf
cmp
dec
lret
icebp
cld
dec
bound
shrb
movsb
or
adcl
dec
xor
jle
dec
mov
jmp
sub
cmp
in
lds
dec
dec
mov
int3
adc
cmpsb
test
push
mov
es
dec
out
lods
mov
sbb
outsl
mov
mov
shl
mov
cmpsb
sbb
test
cmp
mov
sbb
dec
mov
rcl
push
fldlg2
or
lods
inc
andb
rol
test
mov
int3
push
fs
fldenv
arpl
cmp
mov
jp
mov
xchg
push
lahf
imulb
or
and
into
inc
push
dec
stc
scas
scas
and
sbb
xchg
scas
stos
repnz
mov
add
fcompl
cmp
jnp
cmp
cmpsl
les
notb
mov
sbb
xchg
sar
jns
fwait
jns
jno
dec
dec
adc
jnp
xor
mov
or
jbe
leave
rcr
mov
stos
xchg
shrb
jmp
pop
and
in
imul
jno
push
xor
push
pop
xor
repz
int3
cmp
repz
and
xorb
adc
enter
inc
cmp
mov
inc
mov
push
xorl
lcall
mov
call
pop
or
mov
cmc
and
add
jae
sub
xor
sub
andb
xor
adc
jge
mov
dec
cmp
iret
inc
jo
out
dec
sahf
into
sar
xor
xchg
push
shlb
jg
aam
loopne
popf
lahf
mov
out
jno
pop
lcall
imul
pop
jmp
outsb
insl
jns
push
or
lds
dec
data16
xchg
aaa
fsubs
dec
mov
sub
test
pop
xor
add
lods
popa
test
iret
scas
insb
lds
jne
pop
pop
cld
call
popf
lret
insl
popa
call
push
and
adc
das
push
jb
shll
mov
xchg
inc
push
fs
fs
dec
pop
cwtl
jno
notb
std
mov
pop
dec
dec
lods
je
clc
js
push
sub
cmpsl
fldt
mov
mov
shlb
or
dec
inc
push
sahf
in
push
inc
and
dec
andb
cltd
xchg
jb
fucomip
xchg
frstor
adc
adc
adc
jne
repz
sbb
es
mov
in
sbb
xchg
mov
push
mov
inc
add
pop
or
jns
mov
mov
out
sahf
xchg
je
loopne
push
xor
xchg
movsl
add
bound
popf
jnp
xor
sbb
cwtl
ret
je
in
sti
sub
ds
adc
or
jp
jae
push
std
pop
ss
sbb
mov
rcr
xlat
or
jl
loop
movsl
mull
jno
push
sti
sub
mov
jns
cmp
mov
cmp
xor
cvtps2pd
insb
jns
ja
mov
imulb
enter
mov
pop
cmp
fcmovnbe
sub
adc
pop
jno
mov
mov
bound
mov
xchg
cmpsb
fnstcw
jl
inc
jae
adc
rcll
dec
push
mov
shlb
cmpsb
push
out
je
jno
cmp
push
or
lahf
addb
bound
arpl
xor
cs
aad
outsl
int
test
sbb
cmp
sar
ja
insl
inc
xchg
mov
notl
icebp
cmpsl
add
add
je
loope
xchg
mov
dec
sbb
fldenv
pop
push
sbb
sbb
ficoml
jo
jmp
pop
pop
nop
je
cmc
rorl
insb
pop
pop
or
cmp
jbe
iret
pop
mov
lret
jmp
fiaddl
ljmp
sbb
pop
xor
addr16
stos
nop
push
xchg
lahf
int
add
shlb
fidivrs
and
jnp
in
gs
pop
sahf
sbb
cmp
push
jo
sub
cmp
inc
fadd
push
fcoms
pop
fdivs
xchg
mov
dec
pop
xchg
adc
jae
cwtl
addr16
xchg
jo
into
test
int
mov
add
sbb
inc
sbb
mov
inc
add
dec
xchg
mov
rolb
ret
mulb
fdivr
xchg
cmp
or
jp
xchg
or
pop
lcall
cs
das
add
scas
lods
fwait
dec
jno
fwait
into
cmp
pop
mov
xor
pop
sub
aaa
loope
adc
filds
and
rcll
cmpb
inc
loop
addr16
pop
push
or
das
loope
sub
aad
cmp
in
lds
jp
jae
pop
aas
repnz
aad
fimull
mov
and
adc
lods
iret
xchg
mov
daa
mov
inc
mov
inc
pop
ja
sbb
dec
or
push
ror
mov
jns
imul
dec
inc
ljmp
fimull
mov
insb
enter
xchg
push
adc
mov
xchg
gs
movsb
mov
sti
inc
xchg
rcll
loopne
test
aad
pop
test
notl
icebp
inc
pop
loop
jbe
arpl
xchg
mov
and
sub
xor
addr16
rcll
fcomp
mov
add
xor
sub
mov
mov
outsb
mov
fiadds
les
push
and
int3
cmp
jl
aas
sbb
mov
jno
xchg
jo
or
mov
scas
stos
test
js
jns
and
mov
leave
mov
pop
lahf
out
lret
int
dec
into
mov
add
xor
cmp
imul
test
and
daa
push
or
push
out
lcall
push
xor
xor
and
add
lock
repnz
mov
fwait
push
pop
or
cmp
arpl
xchg
es
xchg
fucomi
pop
lods
sub
sub
add
cmp
rcrb
pop
jg
pextrw
jle
stos
jo
cmp
testl
mov
sub
jne
leave
push
push
fmuls
int
mov
push
add
shlb
jns
jle
arpl
hlt
popl
ror
sub
pusha
sahf
push
rcrb
lea
jmp
add
pop
scas
dec
sub
mov
into
in
dec
inc
sbb
push
pop
sub
inc
push
cmpsb
cwtl
pop
pop
in
push
xchg
ljmp
aam
inc
adc
movsl
out
xchg
mov
movsb
loope
pop
xchg
mov
movsb
adc
sahf
cmp
imull
fxch
icebp
mov
pop
mov
mov
xorl
pop
test
pop
lods
adc
xchg
mov
cmpl
dec
xor
add
add
inc
fcoml
jb
inc
imul
mov
cmc
lahf
int
push
lods
mov
gs
push
sub
arpl
inc
mov
popf
jmp
or
je
and
iret
lcall
icebp
adc
mov
rorl
add
mov
cmp
scas
adc
xor
add
adc
filds
dec
jae
jmp
in
xor
add
daa
shlb
out
or
add
leave
es
push
push
test
in
jg
stos
loop
cmp
xor
mov
mov
adc
inc
fidivl
idivb
fmull
and
mov
addb
mov
push
or
testb
or
sbb
or
mov
int
fnsave
data16
push
loope
out
sub
cmp
lcall
lods
dec
lods
popa
mov
in
dec
mov
sub
loopne
sbb
test
mov
cwtl
inc
adc
cmp
inc
cmp
or
mov
loop
sub
jge
sbb
das
jg
xor
fdivp
mov
push
testb
in
or
or
or
in
add
mov
cli
lock
cmp
push
dec
pop
jns
mov
clc
aas
pop
fidivs
aaa
push
jnp
or
repnz
xchg
ds
data16
out
push
jae
outsl
pop
or
cmc
cmc
xchg
push
test
mov
dec
not
jbe
inc
cmp
stc
lcall
popa
add
aad
xchg
mov
shl
xchg
rcl
mov
test
xchg
test
gs
push
popf
pop
inc
mov
pop
adc
jbe
nop
addb
mov
dec
or
mov
or
adc
jae
pop
sub
rclb
sbb
push
xchg
rol
repnz
and
idivl
adc
push
addr16
popf
in
xlat
loop
push
mov
add
cmp
cld
rolb
pop
mov
loope
movsl
ja
fldcw
cmp
jb
imul
lea
fistps
push
inc
and
xchg
roll
ret
scas
out
jnp
dec
pop
jb
xor
test
inc
dec
es
push
sbb
or
sub
jl
ljmp
imul
or
xchg
sbb
fstp
cmp
mov
pop
mov
xchg
inc
aad
pop
arpl
pop
and
cmc
out
inc
scas
aad
daa
or
clc
insb
xor
push
sbb
mull
addr16
aas
lock
in
mov
jbe
inc
sbb
mov
cmp
lahf
inc
mov
mov
sbb
jne
add
nop
mov
jle
add
jmp
and
arpl
sahf
lahf
test
out
je
inc
push
out
mov
inc
push
and
dec
je
inc
or
scas
repnz
mov
push
lahf
insb
les
hlt
pushw
pusha
lds
xor
mov
cmpsl
xchg
inc
testl
fld
movsl
dec
pop
cld
stc
jp
inc
push
lods
popf
and
rolb
jne
sub
xchg
lods
jnp
outsb
pop
sbb
arpl
out
inc
shlb
nop
out
xor
add
jno
xchg
mov
lock
rolb
les
push
cmp
inc
adc
insb
rcrb
in
dec
scas
xlat
out
in
dec
lcall
jmp
adc
mov
push
lods
aaa
add
cli
jne
pop
jecxz
mov
data16
loope
iret
cmovb
push
hlt
fbld
cli
cmp
and
sub
mov
jmp
mov
loope
pop
enter
xchg
int3
fcmovnu
lcall
or
xor
imul
jp
in
fcoml
popf
sub
lods
movsb
dec
rcrl
jle
sahf
fsubs
jnp
fiadds
fs
lahf
imul
jne
sbb
pop
ss
ud0
movsl
mov
sub
and
xchg
pop
aam
jl
das
sub
jge
arpl
rolb
fidivrl
pop
jmp
lods
cmp
sub
jae
jno
mov
arpl
orl
cmp
popf
aaa
push
mov
sbb
sub
or
xor
push
pop
mov
xchg
xchg
jbe
mov
lret
pushf
pushf
mov
ds
cmp
scas
jl
adc
in
repnz
lds
imul
cs
clc
into
test
outsb
stc
add
jo
jo
popf
das
and
add
sarl
cmp
sub
pusha
push
cmpsb
stos
jnp
hlt
mov
loop
scas
push
xlat
int3
addr16
cmpsb
lds
jle
js
sbb
adcl
iret
jecxz
daa
pusha
pop
mov
inc
call
in
imull
add
jge
jne
mov
in
shrl
xorl
cmpb
in
mov
shrb
ja
repz
outsl
mov
jne
pop
leave
cmp
popa
aam
into
hlt
adc
add
xlat
sub
cmc
cmp
iret
sti
std
loop
lret
adc
dec
call
fnstcw
inc
insl
enter
aam
and
push
adc
cmc
or
mov
mov
shlb
jne
aam
add
popf
add
test
sub
mov
ja
movsb
push
push
xchg
mov
jns
dec
dec
pop
mov
ljmp
cli
inc
mov
es
in
out
enter
dec
mov
nop
inc
jmp
and
jo
jg
cmp
test
mov
xchg
int
jo
outsl
inc
int3
cmovno
jmp
stos
jae
call
inc
test
dec
in
push
dec
aas
and
mov
cmc
xchg
or
or
inc
adc
or
insl
lods
cmp
pop
out
leave
aas
outsb
fsubrs
or
leave
test
enter
xchg
or
movsl
add
js
push
movsl
push
dec
cwtl
xchg
push
dec
mov
das
mov
pushf
jne
dec
push
mov
je
icebp
idivb
imul
xor
push
filds
mov
lea
ds
jne
xor
jbe
pop
and
inc
sub
add
aaa
mov
cmpsl
ret
data16
jbe
or
aam
test
mov
outsb
scas
sbb
sub
mov
lret
out
shl
cmp
scas
pop
or
or
in
imul
bound
pop
outsl
inc
sbb
imul
mov
daa
push
stos
pop
out
mov
lea
xorl
add
cmp
jae
mov
fstpl
rol
adc
pop
aam
daa
cmpsb
fldl
ljmp
cmpsb
add
into
inc
call
scas
jecxz
out
inc
jge
sbb
mov
jae
lcall
insl
adc
into
pop
mov
sbb
cmp
scas
mov
xchg
test
fsts
jp
xchg
dec
push
fcomi
or
inc
and
decb
scas
insl
loop
stos
inc
lcall
inc
inc
pop
arpl
mov
push
jle
push
lock
cmpsb
xchg
notl
dec
mov
je
push
push
stc
ljmp
push
lcall
lcall
add
mov
das
movsb
sub
xor
arpl
xor
sub
in
mov
leave
jl
mov
sahf
xor
in
push
cli
icebp
inc
fistpl
testl
push
adc
lds
fcmovnb
push
nop
jl
lret
and
imul
xchg
or
in
push
stos
cli
push
stc
rclb
inc
mov
lods
jb
fistpl
int3
fwait
out
push
sbb
sub
jne
push
mov
fdivp
jns
in
out
rcrl
mov
push
loopne
mov
push
adc
in
test
ret
fdivrs
int
jecxz
xchg
icebp
sahf
je
xchg
cs
jge
adc
enter
fmuls
dec
fs
inc
fisttpll
cmp
jl
or
adc
jecxz
hlt
push
loopne
into
cmp
pop
lret
fmull
push
sub
add
aas
cmp
in
pop
dec
push
add
inc
lcall
ret
pop
lds
push
push
gs
inc
push
mull
xor
add
sbbl
mov
push
cmp
addb
out
sub
mov
push
add
adc
in
push
jg
cmp
fcmovu
adc
or
xor
add
bnd
sub
insb
mov
leave
add
cmc
jecxz
push
or
dec
and
fcompl
or
test
popa
test
push
adc
xchg
dec
inc
aaa
ja
cld
sub
ret
enter
sbb
ret
mov
into
xor
lahf
xor
xchg
xchg
clc
xor
leave
test
mov
inc
test
push
adc
xor
iret
icebp
ja
add
daa
stc
pop
sbb
push
fisubrs
fstpt
testb
pop
xchg
scas
fcoms
push
fildl
sub
jns
dec
add
lods
xchg
cmp
idivb
cmpsb
repz
push
mov
sbb
pop
pop
adc
push
cld
jmp
pop
pop
into
dec
push
xchg
push
sub
repz
push
or
popa
mov
cld
fcmovnbe
lock
xchg
add
lds
mov
cmpsl
fildll
sbb
inc
fisttpll
clc
es
and
or
xchg
stc
lods
enter
mov
loope
mov
pop
xadd
jns
xlat
dec
push
mov
lods
mov
fdivl
ds
xchg
jmp
incl
mov
sbb
outsb
shl
cmp
jns
cwtl
mov
in
xor
xchg
dec
and
lret
push
inc
mov
sub
pop
inc
andb
repnz
js
fs
rcll
adc
popf
sub
popf
adc
in
adc
scas
in
xchg
pop
enter
push
sbb
icebp
jl
enter
or
lea
popa
jbe
pop
push
xor
in
xorl
xchg
dec
data16
cmpsb
lods
pop
and
and
push
in
mov
xor
mov
or
paddsb
cmp
sbb
adc
adc
leave
pop
rolb
lret
jns
xor
adc
out
divb
cmc
lock
or
dec
adc
xorb
push
jae
scas
repz
sbb
inc
cmp
test
jns
pop
enter
inc
jle
inc
inc
jns
gs
xchg
jne
data16
mov
fists
fildll
or
add
xor
cwtl
out
mov
lods
cmp
enter
repnz
punpcklbw
push
shrb
fsubs
stc
and
into
pop
and
lods
std
sbb
fists
push
xchg
add
clc
inc
scas
and
inc
xchg
inc
xchg
xor
out
lret
pop
push
inc
stos
jle
repnz
cmp
xchg
sbb
test
cmp
aad
lock
cmp
push
inc
jmp
jg
imull
push
xchg
dec
mov
shrb
and
aad
daa
lahf
jmp
fucomi
push
pop
jbe
mov
insl
es
les
ds
repnz
jae
mov
push
popa
jecxz
cmp
jmp
ret
cli
xor
add
loopne
lahf
popa
inc
jne
ja
xchg
loope
or
js
lret
and
xor
popf
or
fsubr
das
icebp
cmpsb
sub
enter
xchg
nop
imul
push
decl
movsb
cmp
adc
jp
in
das
out
scas
sbb
mov
lahf
cmpsb
test
test
and
popf
and
pop
test
adc
rolb
sbb
ficompl
or
sub
lods
mov
rol
in
movsb
ds
or
pop
out
std
hlt
fs
mov
mov
dec
imul
dec
xchg
popa
sbb
adc
mov
cli
and
ss
es
cmp
cmp
sbbl
dec
pusha
ja
pop
push
ss
jo
in
lret
pushf
insb
jae
and
fistps
and
pushf
rcrb
push
jae
xor
xor
sub
sbb
mul
jo
mov
jge
push
lds
xor
lods
xchg
ljmp
xchg
xor
or
or
xchg
insb
aad
loopne
outsl
mov
and
adc
es
out
xchg
or
and
ds
pop
inc
sbb
call
push
cmpl
mov
adc
mov
jmp
pop
je
popf
in
jns
push
data16
push
shrb
mov
mov
jg
arpl
add
jno
add
aas
pop
gs
and
push
jmp
jbe
mov
adc
push
dec
xor
ja
paddd
xchg
jp
cwtl
pushf
adc
jle
incb
push
xor
jnp
imul
scas
adc
push
push
lods
jle
lods
sub
jns
pusha
into
shlb
rorb
cmp
adc
mov
into
insb
push
jmp
cmp
outsb
movsl
lds
or
ss
mov
es
lods
pop
fwait
scas
and
jnp
adc
sub
in
jg
pusha
mov
popa
mov
test
cmpsl
and
arpl
fdivrl
rcr
nop
in
outsl
adc
pop
push
pop
dec
jnp
call
rolb
pop
cmpl
xchg
popf
addb
mov
std
dec
dec
stos
dec
and
lods
dec
loopne
into
dec
mov
jo
sub
add
iret
out
ja
popa
jbe
push
cmp
push
adc
ret
push
cltd
cmpb
push
in
fsub
and
xchg
push
add
cmp
es
mov
dec
jp
shlb
out
stos
repz
dec
loope
inc
or
mov
lcall
test
xchg
mov
mov
mov
insl
pop
popa
int
test
dec
mov
nop
sbb
ss
lods
and
inc
adc
cltd
jmp
movsb
int3
fstpl
aas
es
dec
pushf
movsb
outsl
mov
cmp
ljmp
leave
xchg
jno
fcoml
cld
es
int
push
inc
or
jecxz
mov
popa
cs
std
clc
icebp
fadd
test
xor
mov
add
mov
fadd
fs
xor
and
push
out
xchg
dec
and
add
ds
pop
xor
pop
in
adc
les
jb
andb
addl
push
xorl
ds
lods
adc
stos
jne
out
loop
lret
mov
cld
mov
and
mov
shlb
stc
cld
cmp
hlt
mov
outsl
cltd
xchg
bound
dec
pop
push
imul
in
mov
call
mov
lods
dec
cmp
jns
add
ficomps
clc
loop
stc
rclb
pushl
mov
jp
movsb
xor
gs
orb
cmc
sbb
xor
mov
dec
enter
lcall
lahf
scas
cld
pop
or
clc
jnp
subb
and
push
sti
adc
xchg
and
xchg
mov
pop
shll
xlat
add
push
xlat
sbb
je
or
fmull
rcrl
mov
inc
push
adc
adc
xchg
cwtl
cmp
repz
adc
test
ja
aad
adc
push
scas
dec
xchg
fwait
inc
jmp
push
mov
mov
in
and
push
mov
in
shlb
mov
jmp
or
out
jp
inc
adc
cli
daa
in
mov
cmp
gs
push
push
idivl
mov
sahf
mov
rolb
imul
xchg
add
or
push
addl
pop
xchg
add
jg
loopne
cmp
pop
xchg
push
mov
push
mov
adc
das
popf
mov
and
daa
fdivl
xor
xchg
scas
push
push
das
hlt
movsl
or
stos
aaa
xchg
add
popf
in
and
adc
sbb
mov
jge
sar
add
inc
inc
push
scas
psubsb
test
xchg
jae
pop
rcrb
mov
and
add
dec
aas
fwait
push
push
xchg
cmovge
or
mov
cwtl
and
pop
sahf
push
lret
mov
repnz
lret
adc
std
rcll
and
gs
inc
cmpsb
sbbl
arpl
loope
inc
outsb
gs
mov
mov
loopne
sbb
or
adcb
sub
pop
mov
xlat
and
xor
loop
cmp
repnz
or
stc
mov
in
pop
popa
jp
dec
sbb
jne
mov
in
int3
mov
shlb
cwtl
outsb
cmp
loop
and
push
gs
pop
out
push
mov
jo
shl
cs
ret
and
into
dec
or
into
pusha
jmp
pop
arpl
inc
mov
mov
sbbl
das
jmp
xchg
out
aaa
loopne
cmp
mov
mov
in
fisttps
or
movsb
sub
cli
and
pop
jbe
xchg
mov
push
push
push
nop
cmp
cwtl
push
call
sub
popa
stos
ficoms
dec
xor
dec
add
inc
les
addr16
jae
rorl
jl,pn
lods
adc
xor
stc
jg
das
xlat
int
jl
xchg
mov
dec
into
pop
imul
xchg
inc
xchg
lods
cmpsb
add
pushf
cmp
loopne
sahf
jl
ja
iret
pop
fidivrs
xor
pop
les
jnp
jmp
sbb
sub
test
cmp
loopne
jno
pop
adc
push
push
shll
and
xor
insl
add
aad
pop
adc
loop
xchg
push
scas
int
in
fs
inc
mov
popa
outsb
mov
into
adc
dec
out
xchg
inc
jb
push
pushf
jle
out
sub
dec
std
xchg
sub
inc
add
int3
mov
push
pusha
and
xor
jge
addr16
icebp
and
and
ror
xor
outsl
.byte
