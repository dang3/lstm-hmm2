dec
pop
add
filds
xor
psubusb
fsubs
sub
adc
or
adc
jae
fstpl
das
loop
jne
add
sub
das
test
push
call
ja
adc
mov
cmp
ljmp
push
and
inc
insl
in
pop
ss
jnp
add
enter
jecxz
dec
jg
sub
outsl
and
aam
decl
aaa
lods
mov
sbbl
test
mov
cltd
pop
pop
aas
sub
int
cmp
push
mov
push
mov
arpl
in
mov
inc
add
xchg
cmp
gs
lds
xchg
std
out
vmwrite
inc
xor
sub
in
pushf
sbb
mov
test
or
fldl
fsubr
psubb
add
imul
es
and
cmpsb
loop
adc
sub
pop
push
pushl
ret
jmp
pushf
jmp
call
popf
rdtsc
nop
je
pushf
mov
pusha
movl
pusha
call
inc
shlb
fwait
add
jno
mov
push
cmpl
jo
xor
iret
aas
jbe
jmp
fwait
mov
fstpt
sbb
cmp
ucomiss
loope
pop
hlt
cmp
sbb
cld
mov
data16
cmp
dec
clc
cmpsl
js
pop
jp
mov
add
sub
cmp
movsl
out
sub
push
sbb
ficoms
idiv
ljmp
pop
push
testl
ss
lret
mov
xchg
xor
rorb
and
adc
inc
lea
mov
adc
xor
lea
je
bt
push
push
sub
cmp
cmp
mov
movw
pusha
lea
ja
clc
imul
bt
cmc
add
push
lea
jmp
pushf
inc
dec
mov
pushf
mov
pushl
stc
cmpb
pusha
lea
jne
or
aas
movzbl
movsbw
sub
ror
shld
aas
daa
mov
neg
neg
add
ror
shl
mov
clc
call
seta
mov
pushf
pusha
lea
jmp
mov
rol
mov
test
cmc
xchg
sub
bswap
mov
bt
sub
pusha
rep
mov
mov
mov
pushf
mov
push
mov
lea
jmp
jmp
in
add
add
cmp
dec
xchg
pushf
scas
xor
fs
xor
xchg
xorl
xchg
and
jle
jb
unpcklps
stos
ror
xchg
or
adc
sbb
test
movsb
mov
ljmp
repz
fwait
add
sub
inc
pop
jnp
lods
mov
cmpb
jo
pop
aad
nop
mov
and
mov
push
and
mov
lds
dec
inc
sub
mov
cmc
out
shr
int3
jmp
xor
sbb
dec
pop
and
in
dec
fdivp
mov
cmp
sub
fsubs
push
lret
dec
push
jne
ret
inc
xchg
jecxz
enter
inc
dec
pusha
cmp
cmp
ljmp
or
out
lcall
fs
je
shld
bts
sbb
add
shrd
movzbw
sar
sub
mov
test
add
clc
mov
btc
inc
bts
jmp
movl
pushl
pushl
popl
movw
mov
mov
pushf
pushl
ret
pushf
lea
ja
pushf
lea
jns
inc
pusha
setle
inc
rcr
sub
xchg
xchg
mov
inc
or
test
rol
mov
call
sub
test
cmc
stc
clc
cmp
call
pushf
movl
jmp
bt
add
jmp
stc
repnz
movb
lea
jne
cwtl
lahf
not
not
movb
cwtl
mov
lea
push
setbe
pushf
push
lea
jmp
movzbw
jmp
cmp
push
bts
lahf
shl
mov
clc
stc
sub
aas
shr
bsf
aas
push
btc
rcr
shrd
mov
push
rol
dec
bsr
push
adc
movzbw
push
aam
jmp
push
pushf
sub
clc
cmp
pusha
lea
ja
pushf
mov
imul
bt
cmp
test
add
pusha
lea
jmp
jmp
test
pushf
lea
je
pushf
test
cmc
sub
movw
mov
cmp
jmp
cmp
pusha
pusha
pushf
pushf
lea
ja
cmc
call
lea
jae
pushf
stc
cmp
pushf
jmp
inc
jmp
pushf
mov
pushf
push
lea
call
pusha
pusha
movb
mov
pusha
lea
jmp
sub
bt
cmp
jmp
lea
jne
bswap
mov
pusha
pusha
lea
jmp
cmc
bt
cmp
pusha
lea
ja
setae
adc
rol
add
clc
mov
jmp
mov
test
inc
mov
push
bt
call
pusha
call
rol
mov
clc
jmp
pushf
pushf
movl
inc
mov
pushf
adc
pusha
pushf
movb
pushf
pushl
ret
mov
shl
lea
shld
add
and
mov
pop
add
movsbw
movl
cmp
mov
cmp
pusha
cmp
push
call
pusha
jmp
movb
jmp
cmp
lea
pushf
pusha
pushl
ret
lea
js
push
pushf
lea
jmp
fbstp
pop
fwait
add
ds
loopne
sbb
xchg
mov
pop
lret
lcall
xor
dec
pop
and
fidivrl
xchg
adc
out
dec
cli
push
adc
jne
xchg
movsl
lods
and
push
inc
jbe
cltd
out
mov
push
movl
call
test
pop
mov
cmc
sub
push
pusha
rep
not
not
mov
push
push
lea
jmp
jmp
seta
lea
mov
xchg
pushf
not
bswap
movzbw
pushl
popl
movsbw
not
jmp
add
add
mov
call
bt
movzwl
sub
inc
btr
btr
shld
mov
cmc
pusha
add
pusha
stc
mov
cmp
mov
clc
test
test
pushf
lea
je
clc
jmp
or
sub
add
bswap
inc
add
add
call
pushl
popl
pushf
pushf
mov
push
pushl
ret
jmp
mov
mov
bt
or
mov
movb
movw
call
das
xchg
clc
pop
fwait
add
lret
cmc
inc
dec
test
sbb
jb
dec
sub
jmp
sbb
push
bound
addr16
pop
cmp
pop
stc
push
arpl
push
fbstp
out
push
insl
ss
movsl
xor
ret
fcmovne
push
mov
pop
adc
pop
inc
fucom
cwtl
pop
inc
pop
outsb
mov
pop
pop
inc
xchg
fdivrs
mov
loop
and
rcrl
cmp
inc
outsb
sti
inc
ja
dec
mov
test
and
jno
lahf
aaa
push
inc
setae
push
neg
bsr
sub
xor
mov
jl
movsbw
lea
call
clc
sub
fsubs
sbb
lea
pop
rcll
cmp
xor
filds
xchg
dec
add
and
jns
out
iret
sub
out
lock
xlat
aad
fisttpl
insl
mov
or
inc
std
aad
xor
dec
outsl
xlat
inc
or
mov
inc
in
in
cmp
gs
ss
add
sub
ficoms
icebp
jbe
sub
fsubs
cmpsb
and
cmp
dec
out
aad
or
cmp
cmc
neg
push
add
jmp
call
pushf
cmp
and
mov
pushf
xor
pusha
repnz
mov
jmp
lea
ja
dec
pushf
pushf
inc
setge
inc
setns
add
rcl
sbb
xchg
push
bswap
mov
sar
sar
sub
pushf
mov
cmp
push
mov
cmp
shrd
dec
mov
mov
call
lea
call
pusha
mov
jmp
lea
ja
cmc
pusha
jmp
pusha
call
movl
push
pushf
lea
jmp
movl
lea
jae
pushf
lea
jne
pushf
pusha
lea
jge
stos
pusha
pusha
lea
jmp
pushl
bt
xor
pushf
cld
jmp
push
pushf
pusha
lea
je
jmp
mov
lea
call
push
lea
jne
mov
movzbw
mov
push
pushl
push
lea
jmp
cmp
xor
pusha
shr
push
mov
pushf
lea
je
jmp
call
stc
mov
ror
pushl
neg
shl
shr
sar
add
pusha
jmp
push
movl
jmp
bsr
or
inc
bswap
mov
bt
cmp
test
cmpb
pusha
pusha
call
lea
mov
pushl
lea
ja
jmp
cmp
add
push
sub
in
xor
mov
add
mov
cli
adc
sti
imul
int
xchg
cmpsl
xor
mov
sbb
adc
insb
mov
xchg
inc
mov
adc
loop
pop
pop
notl
sbb
repnz
mov
mov
lea
jne
cwtl
mov
movb
movzbw
not
setnp
push
mov
lea
jmp
pushf
call
jmp
jne
add
or
sub
rol
mov
add
sub
btr
btc
bts
jb
mov
stc
stc
pusha
sub
mov
pushl
popl
clc
clc
cmp
lea
jne
ja
call
movl
pushf
push
pushf
push
lea
jmp
pushf
cmp
jmp
sbb
add
setge
mov
pusha
push
cmc
jmp
push
adc
pushf
jmp
jmp
pushl
dec
inc
call
call
push
lea
jae
stc
call
mov
movl
jmp
mov
pushf
pusha
mov
lea
jmp
push
pusha
pushf
lea
jmp
movl
sub
pushf
jmp
lea
call
pushf
push
movb
pusha
mov
push
pushf
lea
jmp
lcall
fwait
add
mov
inc
fwait
rcl
mov
dec
les
sub
inc
mov
push
lcall
xchg
adc
in
lahf
stos
fadds
out
jg
addl
mov
or
cmp
mov
stc
jns
push
mov
dec
dec
add
insl
sub
jne
fstps
js
call
xor
cmpsb
test
mov
inc
inc
lahf
lret
lods
testb
dec
outsb
add
and
xlat
push
jg
adc
bound
pop
and
xchg
sbb
sbb
jge
outsl
mov
cmp
rol
inc
les
out
inc
pop
push
xor
les
xor
sub
sub
lret
mov
imul
lods
clc
repnz
sbb
sti
inc
and
lods
mov
cmpsb
ds
les
push
lret
or
and
or
pop
incl
xor
test
mov
data16
cmp
sub
pop
and
lods
pop
les
dec
fwait
adc
jns
mov
scas
mov
ja
cmc
mov
pop
push
fcomi
or
sti
add
sbb
aam
jmp
push
xchg
mov
sahf
cmp
sub
loop
push
inc
in
jne
xchg
ret
dec
addb
mov
sbb
loope
sbb
pop
or
sar
or
cmp
dec
cmpsl
es
lock
fs
and
outsb
xchg
pushl
popl
pushf
pushf
pushf
pushl
ret
shld
pusha
bsr
inc
mov
call
movl
pusha
movb
lea
jmp
mov
jmp
cmc
test
jmp
pushl
popl
push
pushl
ret
cmp
call
xor
push
test
repnz
mov
push
jmp
mov
call
jmp
bswap
jmp
jmp
push
pusha
adc
pushf
pushf
lea
jmp
xor
fs
jp
sub
clc
push
clc
call
lods
lock
cli
push
jnp
mov
je
add
fdivs
push
rorb
inc
nop
dec
comiss
loopne
jb
or
mov
push
jns
insl
mov
mov
dec
cmpsb
jb
add
jge
xchg
mov
sbb
add
jbe
out
jmp
mov
lret
fstps
jge
xchg
popf
sub
es
dec
mov
scas
stos
xchg
jle
dec
stos
mov
imul
inc
and
mov
aam
stc
in
arpl
push
addl
in
jne
cmc
push
xlat
loope
pusha
mov
pop
nop
dec
cmp
rclb
inc
subb
movsb
ficompl
cwtl
sub
cmp
decl
inc
xor
dec
and
cmc
mov
xchg
inc
clc
nop
sub
sub
push
mull
fidivl
cwtl
adc
adc
add
xchg
sub
ljmp
push
push
arpl
push
pop
add
add
je
outsl
fs
gs
imul
add
imul
lock
push
xor
std
clc
jo
std
popfw
jmp
movl
pusha
mov
push
movl
push
push
pushf
movb
lea
jmp
lea
je
stc
cmc
push
pusha
cmp
pusha
push
lea
je
pusha
pushf
push
lea
jmp
pushf
neg
mov
bt
cmpb
call
jnp
or
call
and
mulb
add
ret
repnz
mov
cmpsb
jg
cs
fidivs
out
and
mov
aam
repnz
push
test
and
jbe
mov
mov
cmc
imulb
and
cmp
push
add
mov
mov
and
mov
add
iret
jg
out
jb
cld
mov
mov
jb
dec
cmp
repz
fildll
cltd
popa
movsb
adc
xlat
es
jmp
add
mov
mov
jg
in
pushf
rcll
jmp
add
add
push
fs
je
xchg
movsbl
lea
xchg
movzwl
call
call
pushl
lea
jne
pushf
push
pushf
mov
pushf
call
and
imul
les
or
bound
lahf
test
push
xchg
lahf
dec
and
lcall
sub
incb
push
sbb
enter
leave
div
mov
lret
movsb
insl
int
jmp
jmp
jnp
cmc
lds
add
sarb
cltd
xchg
adc
addr16
jl
sub
xor
dec
mov
cld
wrmsr
pop
js
mov
inc
xchg
adc
ret
orb
orb
leave
adc
std
call
add
dec
xor
or
dec
jl
jp
xor
mov
mov
fadd
cli
in
pusha
pusha
movb
movl
lea
jg
pushf
movl
pusha
movb
pushl
mov
lea
jmp
xchg
pushf
mov
movl
pushf
movl
push
pusha
mov
pushf
lea
jmp
xor
mov
lea
fiaddl
cli
pop
cmp
jb
loopne
out
inc
xchg
and
mov
pop
and
push
jo
pop
test
ja
or
mul
shlb
or
into
subb
lahf
jg
push
or
notb
popa
sbb
addr16
sub
sub
cmpsl
scas
sub
cmp
hlt
adc
lds
je
mov
push
aam
js
inc
icebp
icebp
lods
test
bound
dec
xchg
mov
cmpl
sbb
xor
pusha
pushf
call
movb
lea
jne
rol
daa
sub
cwtl
mov
or
jmp
sti
int3
cltd
push
mov
or
adc
jge
add
stos
xchg
imul
lcall
test
or
mov
enter
stos
jmp
popa
xor
cmp
ja
mov
ffreep
inc
cmpsb
add
sub
dec
mov
aam
push
lds
or
fcoms
mov
rorb
rolb
or
in
add
jge
mov
jbe
push
ret
push
cltd
shlb
jo
and
sti
jo
dec
stos
jl
test
bt
add
lea
jp
pushf
push
lea
jne
mov
pushfw
mov
stc
rcr
rcr
mov
bt
pusha
call
lods
bt
ror
movw
clc
neg
pusha
test
cmc
call
in
and
add
aas
xor
orl
pop
cmc
xchg
lahf
dec
les
ljmp
xor
jne
fiaddl
cmp
pusha
jbe
test
sub
fldenv
adc
dec
sbb
sub
jmp
jecxz
and
mov
mov
xor
inc
mov
mov
adc
cs
subb
loope
jp
or
xor
jl
sub
dec
mov
ljmp
sub
out
dec
xchg
and
adc
xchg
out
xchg
aad
mov
hlt
xor
push
add
shl
clc
sti
adc
sub
scas
sub
mov
test
inc
mov
push
fisubl
sbb
pushf
sub
mov
mov
inc
cltd
sahf
add
test
pop
mov
dec
dec
rorl
cmp
adc
test
mov
rep
mov
xchg
dec
dec
out
mov
lahf
aam
dec
inc
push
push
mov
jecxz
scas
push
mov
inc
mov
jl
xor
add
jnp
lods
cwtl
xlat
inc
adc
out
pop
jbe
sub
je
xchg
xchg
sub
jne
loop
jns
add
bound
push
xchg
aam
pop
mov
movsb
mov
mov
cld
mov
mov
mov
mov
xchg
sub
dec
mov
push
inc
inc
adc
inc
push
or
cld
cmc
out
out
bound
xchg
xchg
xchg
roll
xchg
mov
dec
or
jge
scas
shll
pop
jmp
jp
out
leave
mov
cld
mov
into
mov
lea
and
mov
push
sub
xor
bound
bound
push
adc
jp
mov
mov
dec
adc
cld
aad
das
push
loopne
jb
jae
xchg
arpl
and
es
pop
mov
out
fwait
mov
or
call
lea
ja
rcr
shr
sete
adc
sub
jae
bswap
not
add
shrd
pusha
stc
mov
shl
cmp
mov
pusha
cmp
jmp
dec
cmp
insb
fwait
add
sub
test
sub
jo
mov
sti
decb
add
push
nop
popa
jmp
jbe
jb
sbb
test
js
xor
out
xor
mov
fwait
add
les
nop
jge
jmp
fistpl
mov
imul
adc
and
stos
test
adc
ret
sbb
sti
xchg
inc
or
cmp
aaa
mov
or
adc
mulb
pop
dec
push
inc
aam
fldenv
push
insb
fwait
add
xchg
or
and
lea
dec
ds
pop
pop
popa
outsb
dec
fs
cmpsb
mov
jbe
loopne
xor
xchg
je
rorb
and
lods
jae
cmpsb
inc
in
xor
insl
andb
cmp
xchg
xchg
fnsave
sub
test
cmpl
orb
adc
cwtl
xchg
clc
mov
mov
jne
call
push
mov
jnp
mov
mov
xchg
insl
fwait
add
movsl
mov
push
das
push
xchg
int
and
or
fisubrs
lahf
into
add
stos
ret
mov
mov
clc
aas
das
movsl
mov
and
push
test
mov
or
jmp
dec
or
push
pop
clc
and
xchg
enter
sti
fisubl
ss
int
arpl
jno
or
mov
cmp
adc
scas
cmp
aas
shl
sub
jle
sub
imull
push
fwait
add
mov
pop
inc
dec
movsb
loope
mov
and
or
into
pop
cmp
add
jnp
xorl
mov
add
repz
push
mov
mov
fiaddl
inc
or
fwait
es
outsl
sub
cmp
add
stc
stos
rolb
lds
movsl
and
and
fnstcw
outsb
fwait
add
loope
cmp
js
aam
cld
pop
xchg
mov
pop
and
xlat
mov
movsl
jne
inc
cld
jo
in
std
mov
rcrl
shr
in
ret
sar
aam
dec
adc
call
lea
pop
mov
jno
xor
mov
test
mov
lea
jne
lea
movb
movzbw
push
push
movb
push
bswap
lea
pushf
pushl
pushf
jmp
pusha
mov
lea
jb
jmp
jmp
cmp
fsubrs
add
jnp
jno
hlt
and
and
xor
jle
xor
loopne
cmp
pop
push
test
dec
sbb
mov
xor
mov
adc
and
add
xchg
ret
add
push
add
adc
insb
jge
cmp
mov
push
xchg
pushf
ljmp
or
push
decl
dec
ret
dec
add
ret
shr
push
sbb
xadd
mov
mov
clc
rcr
pushf
bts
mov
cmc
shl
push
mov
and
push
sbb
xchg
xadd
push
shr
bsr
shrd
push
bsf
test
mov
shl
sub
sub
pushf
mov
shr
bts
inc
and
mov
pusha
jmp
and
jo
add
and
stos
faddl
imul
out
hlt
jmp
mov
test
ss
loop
mov
lcall
jmp
adc
xlat
rcr
adc
add
or
lods
adc
or
test
out
movb
jns
push
pop
jle
frstor
sub
push
mov
mov
add
movsl
mov
je
loopne
ret
mov
inc
int3
mov
jns
xor
xchg
mov
inc
psubusw
out
add
mov
add
push
fldl
mov
jle
mov
xchg
mov
rorb
mov
push
mov
mov
ret
adc
sarl
jl
gs
gs
xor
cs
insb
add
aas
js
add
jo
jno
add
xor
jle
sahf
lods
mov
inc
int
sar
idiv
roll
fadds
std
xorl
fstl
adc
jno
repz
sbb
jmp
stos
mov
jae
cmp
in
pushf
popf
mov
cmc
jb
dec
rclb
mov
out
push
les
lods
hlt
in
mov
dec
stc
sub
lea
jne
mov
mov
bts
clc
shr
neg
sub
clc
mov
test
pusha
sub
pushf
clc
pushf
clc
pushl
popl
test
cmp
pusha
lea
ja
pusha
rol
sub
or
btr
add
sub
add
inc
call
in
mov
lea
enter
push
pop
xchg
mov
cmp
or
cwtl
daa
mov
pop
xchg
mov
ret
mov
outsl
add
push
sbb
pop
lret
repnz
inc
xchg
ret
push
nop
pop
sub
loop
sbb
cs
into
jmp
lret
jg
mov
je
lea
xchg
pop
cmp
or
mov
dec
pusha
pop
add
adcl
xor
add
es
mov
xchg
mov
add
cs
inc
mov
inc
rorb
lock
loop
mov
jbe
pop
mov
addr16
aad
out
stos
adc
lea
push
bswap
not
movzwl
call
not
lods
clc
movw
not
pusha
cmc
mov
mov
neg
test
push
sub
lea
je
rol
pusha
test
call
cmp
or
push
jmp
sbb
sahf
jb
add
fwait
out
cli
adc
fs
mov
and
lods
pop
mov
inc
out
xchg
inc
push
add
xor
out
addl
fnstenv
ret
adcl
cli
iret
rclb
sarl
loope
xlat
push
popa
loop
mov
mov
mov
loopne
cltd
rcl
cmpb
jmp
jp
jns
fwait
add
jp
fcom
fdivrp
ds
pushf
dec
add
add
mov
dec
cmp
xlat
lcall
sub
push
movl
sub
jo
fimuls
lahf
sbb
sub
test
or
subl
ret
roll
movsl
rcrb
hlt
and
repnz
orb
ljmp
jl
push
icebp
or
repnz
xor
in
xchg
loop
xchg
incl
sbb
or
xor
push
test
call
lea
je
not
movzbw
not
call
bt
cmp
pushf
pusha
pushf
lea
jb
test
cmp
push
mov
call
mov
bswap
not
not
pop
push
mov
pushf
pushl
ret
lods
lock
fisubs
out
xor
add
fsub
push
ficomps
movaps
ss
or
mov
mov
mov
push
pop
aas
jbe
shrl
test
xlat
jecxz
add
pop
inc
add
out
mov
push
ret
cmp
frstor
fldt
out
or
mov
scas
sti
daa
adc
mov
push
jne
dec
lods
gs
in
sub
insl
pushf
les
aad
movsb
adc
fucomi
fimuls
stc
loopne
std
add
inc
jecxz
test
xor
push
lahf
lock
cmp
fildl
out
arpl
fcmovu
lcall
cmp
mov
stos
and
hlt
sbb
orl
lcall
sahf
xor
xchg
repz
outsb
out
sub
lret
cltd
adc
jecxz
jnp
fs
addr16
cmpsb
adc
sub
jmp
ficoms
dec
jecxz
shlb
fwait
add
xor
mov
add
mov
aam
jno
aaa
inc
add
or
fs
lods
mov
sti
inc
in
pop
xchg
je
xor
mov
maskmovq
negl
push
sbbl
or
jns
adc
js
lods
out
in
enter
push
xor
out
addb
or
mov
mov
loope
push
stos
jle
sbb
push
or
and
add
push
fisubrs
imul
jmp
and
nop
fistl
call
mov
std
or
add
aad
fwait
add
cltd
mov
or
sub
insl
popa
xchg
adc
lock
jg
fcos
sbb
aam
incl
mov
xchg
enter
shll
in
and
push
popf
xchg
test
mov
test
dec
stos
mov
jg
inc
jb
imul
dec
imul
popa
int3
inc
push
hlt
sub
repz
xor
sub
push
pop
dec
je
fadds
xchg
jl
xchg
pushf
sahf
fcmovbe
repnz
jne
test
daa
push
dec
mov
mov
xchg
sbb
cli
xchg
mov
dec
cwtl
push
in
fwait
add
cli
out
or
mov
or
mov
movsl
pop
mov
push
cmp
jb
jnp
shr
aam
aam
pop
callw
add
enter
adc
fwait
pushf
leave
aam
lods
or
lcall
adc
in
cld
add
setb
movzbw
or
cmp
mov
push
rcr
setg
jmp
pushf
mov
jmp
lea
je
call
mov
lea
je
cmc
bt
stc
add
cmp
pushf
cmc
cmp
call
cmp
push
call
pop
aam
ja
add
test
jbe
adcb
pop
push
in
sub
repnz
sub
int
aas
ret
jmp
fsubs
mov
and
sub
fbstp
leave
jmp
not
movsbw
mov
pusha
lea
jmp
enter
fwait
add
add
pop
inc
xchg
pushf
xchg
int3
ror
outsb
addr16
xchg
pop
push
iret
adc
lcall
stos
sbb
call
into
mov
sub
ficomps
cs
add
jg
ss
ror
lret
and
and
dec
pop
dec
movsb
nop
stc
fsubl
call
and
test
cmc
mov
fildl
fcomp
mov
dec
and
shrb
push
push
imul
and
out
push
sbb
cmp
adc
das
out
xchg
add
xchg
mov
fsubrl
jmp
add
push
xor
mov
aad
rcll
pusha
lea
push
or
mov
mov
mov
xchg
sbb
movsl
mov
adc
out
push
scas
push
or
scas
push
into
out
xor
outsl
xor
mov
imul
cmc
test
pushl
add
push
pushf
lea
jmp
pusha
movl
pushl
pushl
popl
push
push
mov
movb
pushl
ret
pop
and
fwait
add
out
push
push
pop
andb
jo
xchg
arpl
sbb
mov
mov
int
dec
inc
add
jae
lret
sbbl
cmp
loop
es
lret
xchg
add
fildl
adc
dec
and
mov
rorl
mov
aaa
jle
repnz
je
mov
movsb
push
mov
lods
pushf
clc
ror
test
pushf
test
neg
call
clc
not
rol
mov
clc
cmpb
pusha
call
mov
add
push
ja
mov
or
xor
mov
fstpt
cmp
jbe
jo
pop
add
loop
jp
mov
dec
mov
mov
cmpsl
mov
cld
adc
push
shll
mov
lahf
ljmp
xchg
sub
aaa
lcall
sarl
pop
and
pusha
add
pushf
dec
pusha
lea
jne
push
btc
xor
mov
clc
call
push
pushf
movl
pusha
jmp
not
ror
movsbl
inc
mov
not
jmp
lea
call
mov
lea
ja
dec
jmp
setns
lahf
pushf
lea
jmp
cmp
jp
add
cwtl
in
out
push
cmp
mov
loope
xchg
lcall
mov
and
mov
mov
and
insl
jb
mov
or
fisubs
add
mov
push
pusha
pushl
ret
clc
and
fadds
inc
test
xlat
fmul
mov
repz
fcomps
ss
jg
int
ss
mov
into
adc
push
lds
cmp
idivb
lea
mov
and
push
push
nop
std
adc
idivl
fisttpl
mov
adc
push
lahf
cmp
sbb
push
std
push
shl
sub
jbe
loopne
lcall
or
enter
js
sbb
or
push
jmp
pushf
clc
pushf
rol
cmp
jmp
jmp
mov
movzbw
movl
pushf
setae
lea
pusha
movl
pushf
pushf
pushl
popl
mov
pushl
ret
lret
jnp
add
mov
add
add
mov
sbb
adc
inc
push
pop
clc
jle
jb
mov
inc
nop
mov
fst
dec
popa
mov
rorb
xchg
mov
cmp
inc
fcmove
sbb
in
jle
jle
cmc
cmp
pop
xor
push
arpl
and
adc
mov
mov
clc
mov
and
pop
dec
sbb
int
jno
or
repnz
and
or
cmc
aas
push
adc
adc
jb
jno
jg
inc
sar
jo
xor
mov
jl
add
inc
test
add
fs
ja
stc
call
mov
movb
pushl
ret
movl
pushl
push
call
mov
pushf
call
pusha
movl
call
movl
mov
pushf
lea
jmp
push
jmp
mov
lea
not
pushl
movsbw
mov
movb
pushf
lea
call
jmp
shl
jmp
lea
jne
lea
seto
movb
cwtl
not
call
push
pushf
movl
mov
push
movl
pushl
mov
pushf
lea
jmp
faddl
fwait
add
hlt
pop
cmp
imul
sub
nop
push
xor
cmp
incb
push
add
dec
push
into
xchg
push
add
ret
jbe
sub
pop
enter
and
hlt
pop
lods
and
sbb
and
lahf
not
seta
shl
add
movzbw
and
mov
bsr
mov
shl
mov
clc
repnz
jmp
repnz
fwait
add
aad
loope
pop
inc
subl
kaddb
repz
test
fisttpl
dec
adc
test
ror
inc
and
sub
js
dec
xchg
sbb
and
fs
xor
lea
jb
push
lea
jne
jmp
pusha
lea
jae
dec
btr
mov
btc
lea
mov
call
movl
pushl
pushl
popl
pushf
pushf
pushf
pushl
ret
movzwl
pushf
movsbw
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
bswap
bswap
mov
pusha
pushl
movw
pushl
ret
int3
pop
jge
fwait
add
pop
stos
mov
adc
jo
lds
nop
mov
das
cltd
je
mov
ljmp
cli
add
in
ffreep
adc
lods
push
cltd
push
mov
or
in
jb
aas
cmp
lock
mov
lods
stc
or
out
cmp
jb
test
dec
aaa
inc
dec
pop
pushf
and
out
data16
mov
jecxz
and
dec
lods
dec
icebp
xor
test
sub
and
add
idivl
bound
aad
dec
sub
es
dec
mov
adc
pop
mov
lret
pop
rolb
jb
inc
jns
jle
dec
sti
test
shll
jmp
pusha
lea
jmp
pusha
pushf
pushl
movl
pushl
pushf
call
dec
push
bt
cmc
shl
pushl
jmp
mov
movl
push
pushl
pushf
pushf
lea
jmp
stos
lea
lea
out
scas
outsl
adc
scas
xor
into
scas
lods
xor
insl
lea
scas
lea
scas
lea
mov
dec
xor
xor
or
dec
xor
sti
jbe
xor
push
not
pushf
setp
stos
not
mov
lea
jmp
pusha
movl
movb
mov
movl
mov
mov
lea
jmp
or
shl
xchg
push
pushf
lea
shl
mov
stc
bts
push
movzbl
ror
mov
bts
mov
inc
mov
adc
bt
sub
not
mov
not
not
lods
push
jmp
push
jmp
movl
pusha
movsbw
bswap
lea
pusha
movl
jmp
lea
je
pusha
pusha
cmp
mov
lea
jne
push
movb
push
pusha
inc
movb
inc
movb
movb
pushf
lea
jmp
push
pushl
cmc
cmp
call
lea
pop
jmp
pushf
imul
cmc
add
jle
clc
pushf
add
mov
pusha
lea
jmp
call
inc
not
call
mov
outsb
xor
sub
mov
test
jne
or
sub
sub
inc
mov
mov
jae
pop
je
inc
xor
in
jmp
dec
and
adc
fs
push
pushf
movsl
xchg
shll
stos
sub
fimuls
cvtps2pd
js
ss
mov
clc
cmc
neg
inc
mov
cmp
bt
and
call
push
adc
push
pushf
movw
lea
call
jmp
push
pusha
movl
push
movl
pusha
movb
pushf
lea
jmp
push
lea
jne
ror
not
shl
adc
sub
cmc
shr
shld
mov
shl
clc
rol
add
cmc
test
mov
pushf
cmc
cmp
stc
test
pushf
jmp
pushf
pushf
pushf
mov
mov
mov
lahf
not
movl
pushf
lea
mov
movl
call
mov
cmp
jp
mov
adc
cmpsl
dec
std
hlt
divps
inc
pop
in
lahf
sbb
jnp
mov
xchg
lahf
out
dec
popa
iret
pushf
adc
cmpsb
out
jo
xchg
mov
iret
nop
pop
fwait
rclb
xor
pop
pop
push
mov
cmp
jp
out
xchg
xor
inc
nop
mov
insl
fistl
cmp
jno,pn
xor
jp
push
cwtl
mov
into
call
fs
lea
jne
xor
sub
xchg
mov
bt
btc
clc
shr
sub
test
mov
pushf
sub
bt
bt
pushf
pushl
popl
cmc
pushl
push
cmp
push
lea
ja
mov
rcl
sub
rcl
sub
dec
call
xchg
jbe
sbbl
ds
cmp
js
call
sbb
jbe
cld
cmc
je
out
sub
outsl
pushf
xchg
sub
int
in
adc
rolb
shl
fmuls
xchg
cmp
xchg
iret
cwtl
mov
push
clc
mov
clc
clc
cmp
test
sub
test
clc
pushl
pushf
cmp
jmp
lea
jne
bswap
movb
movsbw
call
sbb
subb
cmpsl
into
add
inc
test
cmp
int3
fwait
nop
cs
decl
or
push
push
imul
add
push
or
mov
leave
negb
pop
pop
hlt
mov
lods
in
in
imul
jg
call
insl
pop
mov
fildll
lods
ljmp
xor
dec
emms
roll
js
pop
out
xor
jno
xchg
jl
sahf
mov
psubusw
fs
ret
fsts
push
int3
popl
fwait
push
repnz
adc
sbb
lret
lea
pop
dec
lods
mov
scas
cmp
lahf
leave
sbb
sbb
inc
dec
inc
push
lcall
pop
mov
insb
mov
rcrl
mov
sub
and
jne
setle
lahf
movb
not
push
not
bswap
not
jb
lea
jmp
cmp
neg
push
not
jmp
sbb
add
push
das
push
inc
je
stos
fstpl
pop
pop
mov
icebp
mov
or
or
mov
push
inc
mov
test
inc
pop
xchg
je
icebp
cmp
lret
xchg
imul
push
mov
adc
loope
add
mov
or
mov
out
les
sub
in
int
mov
addr16
test
xchg
and
adc
mov
jg
adc
mov
cmpsb
pushf
add
movb
push
lea
jmp
mov
push
lea
call
call
adc
mov
bt
stc
pushf
mov
cmp
push
pushf
call
lea
jb
pushf
lea
jb
stc
cmp
push
lea
ja
setae
push
neg
add
sub
or
mov
jmp
or
push
pushf
movb
pusha
lea
jne
xor
rol
mov
jmp
dec
sbb
xchg
sub
incl
loop,pt
notb
loopne
call
pop
imul
mov
in
lahf
add
cli
pop
push
xchg
pop
jne
mov
xchg
mov
xchg
xchg
mov
push
pop
outsl
mull
das
dec
sbb
xor
adc
mov
pop
loope
jmp
xchg
adc
or
xchg
pop
jl
cltd
mov
push
xchg
shlb
add
cmp
je
xchg
mov
test
loope
addb
fcomip
or
inc
sub
cmp
cmpl
mov
xchg
cld
mov
stos
xor
pop
out
mov
xor
int
lahf
push
ret
xor
decl
adc
test
push
imull
jecxz
xchg
les
cmp
addl
pop
test
push
in
xchg
jl
xor
xor
mov
push
inc
stos
pop
jle
sub
or
aad
mov
repz
mov
lea
jne
cwtl
xor
sub
movsbl
mov
cmc
clc
sar
bt
add
xor
mov
call
pusha
or
pusha
call
xchg
push
mov
fwait
add
scas
in
add
popf
lcall
or
lods
ret
mov
dec
sub
punpcklbw
cltd
xor
jns
push
sbb
out
add
sbb
ljmp
fcomi
lahf
mov
add
lock
mov
jo
sub
fs
push
fcoms
not
scas
jge
cmpb
push
xchg
xchg
scas
add
loope
dec
xchg
jl
rorb
cmc
inc
insl
ror
in
or
jge
add
or
jno
pop
dec
sti
test
mov
jb
hlt
rorl
sub
inc
jne
scas
fstps
push
pop
sub
pop
mov
jno
xchg
and
push
mov
push
pop
sbb
and
xor
jbe
inc
push
or
fs
insl
loope
xchg
scas
fstps
lret
inc
mov
xchg
mov
hlt
adc
inc
xchg
out
push
mov
call
xor
in
scas
fstps
jns
adc
xchg
xor
dec
xchg
fimuls
dec
sarl
jecxz
sbb
mov
outsb
js
dec
into
cmpsl
adc
mov
scas
pop
mov
mov
sahf
daa
mov
fsts
jb
pop
pop
sbb
adc
mov
fs
sbb
inc
mov
outsl
xchg
dec
jle
push
mov
dec
push
sub
in
mov
push
roll
sub
xor
sub
mov
cwtl
rcll
inc
cmp
bound
sbb
xchg
inc
dec
sbb
mov
dec
mov
lcall
cmp
stos
jbe
sbb
jmp
or
jmp
idivl
jae,pn
aaa
scas
sbb
pushl
popl
pushf
movb
pushl
ret
adc
pushl
push
pushl
ret
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
adc
incl
adc
ret
orb
jmp
shl
mov
push
cmc
bt
bt
shl
push
pusha
jmp
fists
fwait
add
roll
test
pop
into
xor
or
dec
dec
mov
mov
out
and
je
shrl
mov
jno
cmp
call
push
sub
and
jbe
mov
and
sti
test
rolb
lahf
push
pop
fcompl
xor
pop
inc
aaa
jle
xor
mov
call
ja
nop
or
xchg
cmpsb
fnstsw
popf
adc
cli
mov
and
orb
insl
jle
aas
cwtl
xchg
outsb
insl
xchg
movsl
loopne
push
dec
imul
pop
aas
mov
inc
fcompl
inc
aas
inc
stos
dec
add
and
and
sub
sahf
popf
enter
xor
jae
imul
sbb
sub
sbb
fimull
daa
std
call
mov
adc
mov
or
push
inc
dec
cmp
jns
mov
add
arpl
dec
mov
popa
rolb
lock
dec
and
xchg
test
les
mov
add
clc
cmc
clc
or
push
lea
je
sar
pushf
clc
add
bts
sub
test
cmc
shr
push
shl
adc
mov
or
add
shr
add
sub
movsbw
dec
mov
stc
cmp
stc
push
shr
clc
cmp
pushf
pushf
lea
je
push
cmp
pusha
mov
jmp
mov
add
mov
mov
aad
add
out
lods
testb
sbb
test
xchg
lret
fists
rcll
add
int3
nop
sbb
sbb
xchg
dec
out
push
mov
jge
pop
and
movsl
mov
mov
fwait
add
rcr
cld
daa
inc
lea
push
and
js
sbb
out
push
test
in
or
shll
pop
or
mov
and
pop
lock
fwait
inc
jne
pop
cli
test
sub
ret
push
jecxz
pop
mov
shll
xchg
sahf
jno
add
lea
xchg
pop
mov
adc
xchg
xchg
pop
sub
push
lds
or
xor
pop
pushf
and
lds
movw
pushf
mov
jmp
mov
insl
mov
jge
jle
or
xchg
mov
xchg
xor
pop
pop
lcall
mov
jb
pusha
mov
push
shlb
jmp
xor
adcl
addb
loop
jl
inc
lods
adc
testl
sub
add
imul
stos
push
gs
jno
mov
mov
loope
or
sbbl
movb
shl
add
adc
dec
push
mov
add
scas
inc
scas
xchg
xchg
xor
ds
mov
push
out
fdivl
push
mov
inc
mov
out
cmp
inc
xor
push
daa
jmp
add
pop
push
inc
cs
xor
jo
dec
jl
and
push
in
aaa
jmp
or
pop
leave
mov
cmc
push
pop
pop
stos
and
push
push
ljmp
cmp
xchg
in
cmpsl
adc
pop
add
vmulps
adc
inc
push
pushf
push
adc
lea
pushf
pushl
ret
call
add
mov
out
das
cmp
cmp
mov
jge
cmp
mov
test
mov
scas
lock
dec
lret
mov
mov
push
or
push
jne
add
bsr
imul
lock
outsl
push
scas
adc
cwtl
jb
mov
cmp
adc
aad
mov
mov
mov
cmp
imul
bnd
mov
pop
pop
inc
ss
cld
sbb
dec
jnp
cmp
pop
xor
xchg
dec
decb
mov
dec
int3
lods
add
mov
mov
inc
jg
cmp
add
repnz
repnz
xor
out
xor
jg
psubd
outsl
mov
adc
mov
ljmp
lahf
test
mov
lods
cmp
pop
inc
dec
or
sbb
jo
dec
ret
adc
cmp
test
les
mov
sahf
mov
div
pop
cmp
aam
push
inc
push
xchg
les
mov
mov
mov
mov
sbb
inc
cld
lods
lock
cmp
xchg
inc
test
inc
mov
addl
lods
test
cld
test
add
cmpsb
clc
sub
mov
pop
int3
mov
rorb
daa
pusha
shrl
fcomps
lods
hlt
jbe
mov
mov
and
pop
pop
test
fwait
add
jecxz
out
aaa
ds
out
pop
sub
into
add
movb
or
je
and
jno
cmp
adc
push
popf
popf
aas
fisubrs
or
mov
and
insb
punpckhwd
ret
or
mov
add
fstpl
aaa
and
test
add
xor
ja
fldt
aas
fnclex
mov
dec
sub
out
adc
rolb
jp
xlat
jle
lret
sub
pop
push
mov
in
bound
mov
xor
cltd
and
pushf
xchg
lcall
xor
jne
xchg
sbb
fwait
sti
cmpl
pop
and
shll
jnp,pn
mov
gs
xchg
pop
pop
lea
push
and
daa
test
es
aad
jg
sub
aaa
push
std
inc
std
insl
js
jns
push
xchg
jmp
sub
cmp
aad
sbb
dec
data16
hlt
fildll
loop
addr16
jp
es
outsb
jno
xchg
in
out
jo
addr16
push
into
test
icebp
arpl
cs
pop
cmp
jbe
int
mov
in
repnz
fcmovnu
ret
inc
mov
je
pop
sub
std
xor
sub
sub
pop
int3
or
mov
fwait
add
mov
popf
xchg
aad
sub
cmc
jp
dec
jp
mov
and
push
cmc
lcall
rcr
arpl
cli
add
insb
jns
sbb
repz
push
pop
cmpb
push
and
out
sbbl
jl
dec
cld
sbb
repz
push
test
daa
and
int3
cmc
mulb
or
mov
mov
sbb
adc
sub
clc
push
sbb
ret
aam
nop
push
shll
push
int
sti
push
gs
je
and
icebp
push
pop
adc
lret
icebp
lea
jle
ja
call
pusha
lea
jae
push
setl
dec
mov
jmp
mov
arpl
jns
xlat
lret
pop
and
insl
loope
iret
dec
push
push
pop
add
call
das
push
pop
test
sbb
pop
pop
pop
fwait
pop
and
and
pop
cmp
in
pop
jb
pop
fs
insb
loope
clc
adc
add
or
cmp
test
xchg
movsl
mov
xchg
mov
fwait
add
adc
sub
pushf
sbb
push
jmp
push
sbb
or
pop
popa
xchg
call
mov
orb
xchg
fwait
jnp
outsl
jbe
out
sbb
imul
xorl
push
push
test
icebp
sarl
movsb
ret
jo
stos
enter
dec
pop
xor
sub
and
fnstenv
jno
scas
test
xchg
ret
arpl
pop
dec
pusha
ljmp
mov
ljmp
push
xchg
in
sti
jnp
dec
inc
daa
mov
movsl
fmuls
jecxz
push
and
fisttpl
sub
mov
lea
call
jge
pusha
movl
mov
pushf
pushf
mov
call
call
call
sbb
xchg
fwait
add
sbb
pop
test
in
sarl
inc
fcomps
idiv
sbb
fistpll
push
roll
daa
shrb
js
scas
sbb
pushf
pusha
out
push
je
sub
out
sub
push
sub
add
or
inc
and
push
movzbw
pushl
popl
jmp
call
pushl
popl
pushf
push
push
pushf
pushl
ret
jmp
or
xchg
ror
and
xchg
mov
rol
shr
cmc
mov
call
movl
pusha
lea
ja
pusha
bt
imul
push
clc
movw
pushf
add
pushl
pushf
pushf
movb
lea
jmp
adc
xchg
xchg
fwait
add
xchg
mov
adc
and
sti
adc
rcll
stc
and
push
mov
test
mov
cmc
ja
andb
pop
add
xchg
add
xchg
cmp
jl
inc
lea
cmp
push
lock
std
std
mov
fs
popa
ret
ja
xchg
cwtl
leave
out
pop
sub
xchg
pushf
mov
pop
push
ss
aas
lcall
jl
in
fmuls
pop
and
aam
push
int3
add
out
sub
test
out
xchg
and
scas
or
dec
mov
and
xchg
push
test
mov
fdivs
push
cwtl
pusha
enter
rolb
fwait
sub
add
cmp
lea
je
jmp
call
add
xchg
xchg
mov
bound
cmp
jae
mov
and
cs
push
arpl
and
mov
sbb
mov
in
jecxz
push
fnstcw
pop
out
dec
enter
sub
test
xchg
test
cltd
dec
js
scas
pushf
pusha
lea
jne
seto
mov
pushf
pusha
movb
lea
jmp
pusha
movl
mov
and
call
jmp
jb
add
sbb
ds
push
enter
mov
fisubrs
loopne
aad
ret
popa
push
adc
xor
jns
fstpl
orb
rcll
out
push
push
sub
xlat
cmp
int3
dec
pop
mov
xor
jl
repz
jbe
jp
aaa
and
mov
mov
lea
cmpsb
cmp
push
pop
scas
pushf
pop
xor
ljmp
pop
lock
pop
test
and
pop
fistpl
xchg
outsb
add
sahf
jo
ja
sbb
fcmove
push
mov
rol
mov
dec
cmp
cmp
fcom
ljmp
inc
push
lcall
pop
and
aam
jge
xchg
daa
cltd
pop
or
jl
pop
ds
sbb
icebp
ljmp
cmc
popf
mov
cmp
jge
aas
xorb
dec
cmc
xchg
push
imul
mov
add
sub
sub
addr16
fwait
scas
sti
or
enter
loope
insb
testl
test
sbb
negb
in
nop
mov
fisttpll
sbb
xchg
xor
adc
out
repnz
sbb
addb
xchg
scas
inc
jnp
dec
mov
push
mov
lods
scas
repnz
je
add
lea
jne
mov
cmc
mov
clc
add
push
pusha
movzwl
bts
add
lea
btr
mov
pushf
add
cmc
mov
test
pushl
jmp
jmp
or
jmp
pusha
pushf
call
pushf
lea
jae
pushf
push
push
pushf
lea
jmp
jmp
pushf
lea
je
jmp
les
xchg
fwait
add
clc
add
or
xchg
cltd
adc
or
loopne
cs
incl
fldt
stos
push
andb
addr16
ret
jmp
xor
test
cmpsb
jg
out
dec
mov
icebp
in
mov
pushf
int3
push
adc
jno
push
out
xor
fwait
push
add
mov
add
stc
call
rcl
mov
pop
xchg
in
ds
rcl
stc
or
jl
dec
add
inc
cmp
push
xchg
loopne
clts
push
push
outsl
pop
cltd
int3
in
jmp
mov
insb
mov
push
xchg
add
jbe
movsl
mov
jg
pop
mov
cwtl
fwait
add
xchg
mov
push
jo
mov
divb
hlt
aam
mov
jp
or
fwait
adc
fiadds
mov
enter
loopne
adc
pop
sbb
ret
out
sub
je
out
xchg
mov
into
mov
imul
or
mov
bnd
out
mov
or
lock
push
inc
sub
jmp
dec
mov
xor
cs
movb
imul
jmp
or
js
insb
or
pop
js
ja
dec
cltd
jns
or
dec
push
int3
xchg
or
rclb
inc
push
mov
loope
insl
or
mov
out
fdivl
aas
jns
or
mov
insb
or
sbb
insl
or
pop
pop
xchg
mov
xor
jno
or
pop
add
sub
or
imul
filds
call
lahf
jge
jns
or
adc
mov
jns
or
pop
test
cltd
jle
inc
jns
or
pop
arpl
jns
or
sbb
jo
jns
or
xchg
pop
add
aaa
fidivrs
rcll
pop
gs
or
pop
xorl
pop
pop
test
xlat
inc
outsl
sub
or
pop
ljmp
insb
or
pop
pop
mov
inc
jns
or
pop
sbb
inc
push
pop
gs
or
pop
testl
jno
or
insb
cmp
and
or
loop
imul
mov
cli
mov
jns
or
pop
jae
daa
pop
cmp
pop
pop
xor
and
add
inc
mov
inc
push
pop
pop
jne
sbb
test
or
pop
pop
mov
aas
pusha
add
insb
or
and
gs
insb
or
pop
mov
push
cltd
je
insb
or
jne
push
lods
jb
or
sub
xor
mov
jge
jno
or
dec
jns
sub
orb
pop
push
push
adcl
inc
xchg
pop
mov
jns
or
add
xchg
jns
or
push
pop
call
xorl
mov
out
lods
mov
or
fiaddl
sub
or
pop
jae
daa
call
xchg
or
jp
push
call
mov
push
pushf
pushl
ret
ror
call
push
lea
mov
pushl
lea
push
movl
call
std
jl
lcall
test
cmp
lea
insl
and
xor
jns
adc
popf
shlb
dec
dec
lods
jecxz
dec
and
out
adc
in
test
scas
aaa
sarl
in
jle
inc
shll
mov
jmp
insb
mov
push
or
add
mov
dec
mov
push
cmp
mov
cmp
dec
idivb
adc
dec
mov
adc
push
stc
pop
mov
sti
test
shll
mov
popf
adc
gs
sub
cli
loopne
std
daa
pop
movsl
mov
dec
sarb
jp
andb
xor
out
and
and
in
in
and
lret
mov
jg
cld
outsl
jo
fs
xor
lea
pusha
not
mov
mov
push
mov
push
lea
jae
call
jb
jne
movzbw
mov
pushf
push
mov
pusha
lea
jmp
test
js
push
cmp
or
jmp
call
call
in
adc
fwait
out
xor
xlat
mov
cmc
cltd
repnz
repnz
fisubrl
jecxz
xchg
mov
ja
imul
cli
rorl
push
lods
jnp
mov
je
std
insb
cld
pusha
sbb
enter
pop
faddp
sbb
fsubl
mov
call
xchg
bswap
dec
fstps
or
mov
xor
lret
cwtl
jae
adc
push
insb
pop
xor
test
cmp
xchg
xor
movsl
insb
dec
jp
fcomip
mov
add
dec
xorb
test
xlat
mov
fdivrs
mov
out
repz
lods
jge
lret
fildll
pop
subl
rep
lock
pop
cmp
xchg
test
ss
jnp
pop
sub
js
mov
fldcw
or
fmuls
lods
xor
dec
xor
arpl
adc
in
inc
lock
mov
repnz
add
insl
mov
xlat
mov
mov
push
adc
jbe
push
out
jo
sbb
mov
mov
out
push
jne
hlt
push
aam
xchg
xchg
mov
jnp
mov
out
cmp
shlb
mov
bound
push
jo
movsb
hlt
pop
enter
inc
inc
mov
clc
and
stc
and
push
std
jmp
jo,pn
sbb
adc
pop
cld
adc
aad
sbb
sbb
jmp
pop
fwait
scas
cmp
xchg
xchg
call
clc
not
insb
pusha
ja
cmpsb
sbb
lcall
ret
enter
cli
xor
sbb
sbb
inc
pop
xor
stc
push
cmc
pop
inc
sbb
mov
or
sbb
imul
inc
xor
ds
push
add
xlat
or
xor
push
testl
add
mov
lcall
cld
cmp
or
js
xchg
mov
adc
jmp
add
sub
cmp
fimull
mov
jmp
add
pop
ja
cmp
sub
lret
mov
mov
adc
jmp
add
enter
sbb
cmp
mov
adc
jmp
add
or
cmp
mov
adc
jmp
add
call
mov
mov
adc
jmp
add
lcall
mov
pop
mov
jmp
add
jmp
fidivrl
add
dec
shll
cmp
nop
out
aam
sub
pop
ret
stos
repz
jb
call
les
xor
imull
jmp
lret
mov
pop
insb
in
call
outsb
cld
xor
popa
stc
dec
sarb
jne
adc
sti
mov
fsubl
out
push
sbb
mov
js
cs
enter
or
sub
add
sub
out
sti
rcrb
sub
ficomps
cmpb
jae
mov
in
jg
addr16
and
rorl
out
lahf
lahf
add
mov
jb
scas
pusha
mov
bound
pop
call
mov
leave
jp
jmp
aaa
divl
sub
jecxz
or
add
test
and
add
xor
ficoml
add
lods
pop
cmp
xchg
mov
pop
sub
sbb
sti
inc
lock
ja
sbb
sti
jo
insb
pop
lods
arpl
in
jno
or
stos
sbb
mov
push
popa
fldt
push
xlat
jmp
insb
stos
mov
xor
jae
or
push
fld
test
add
sub
sbb
and
aam
ljmp
jnp
inc
rcll
fwait
test
jo
mov
out
std
mov
jo
adc
mov
jnp
add
sub
mov
cmc
lret
or
stos
ja
adc
stc
clc
neg
add
sbb
xor
lock
adc
sub
ficoml
jns
push
cli
ja
xlat
adc
dec
aam
mov
xlat
dec
rcrl
adc
push
divl
test
js
push
add
dec
ljmp
lahf
or
and
jo
xor
push
or
jae
sarb
jns
xlat
xlat
adc
adcb
xor
dec
sub
std
or
xchg
xor
fwait
sbb
sti
dec
jl
sub
cmpsb
cmp
lret
sbb
mov
test
sti
xor
dec
jl
dec
lods
xlat
std
or
loop
rcl
aad
pop
dec
cmp
call
jp
and
outsb
sub
ja
mov
lock
xchg
sbb
rcl
loope
imul
leave
fnstenv
or
xor
dec
fldpi
call
imul
xor
stc
notl
jp
xlat
push
std
sti
push
jno
or
pop
lock
push
shlb
out
bound
and
lds
mov
fldenv
sti
mov
jge
jns
dec
scas
repz
in
xchg
sub
lret
add
mov
insb
jnp
in
or
inc
aas
jbe
je
daa
sub
pop
sub
iret
ret
arpl
call
fwait
cld
or
or
imul
mov
cmp
mov
loopne
xor
andl
dec
test
mov
mov
sub
sarb
add
dec
sbb
or
cli
or
repz
jp
leave
mov
push
cmp
dec
jl
loop
xlat
call
lret
cmp
fwait
xlat
outsl
jg
shlb
adc
arpl
ljmp
lret
sub
cmp
arpl
pop
fs
into
xor
loope
xlat
jo
cmp
ljmp
mov
or
fnstcw
loope
cmp
call
iret
nop
outsb
and
sahf
or
fwait
cmp
insb
xchg
xchg
push
pop
jns
out
mov
xchg
jmp
adc
cmp
pop
stos
xchg
hlt
ret
push
cltd
loop
outsl
shlb
test
sbb
mov
inc
inc
hlt
cwtl
mov
sahf
sahf
mov
subb
mov
enter
mov
inc
mov
sub
outsl
stos
aad
mov
jne
mov
call
dec
loopne
lock
mov
lods
cmpl
lret
sub
scas
cmp
loope
imul
jne
data16
fildll
dec
push
push
insb
dec
imul
test
js
sub
scas
outsb
test
xchg
cmp
mov
inc
pop
scas
jo
jg
pop
lock
jnp
xor
cmp
pop
and
dec
test
notl
out
inc
js
and
jno
loopne
arpl
adc
mov
or
pop
adc
rcrb
mov
pop
lods
fsubrs
xchg
sbb
fmuls
sbb
push
out
ljmp
jae
pop
mov
pop
mov
mov
fcomi
imul
inc
cmp
add
scas
ret
stos
test
xchg
fstpt
lods
and
jmp
pop
fiaddl
sbb
fisubl
add
dec
stc
mov
movsb
jp
sahf
sbb
in
add
test
stos
out
jmp
addl
pop
add
push
mov
inc
fidivrl
xor
inc
sub
add
adc
cmp
test
cmp
arpl
jp
xchg
add
xor
or
les
xor
pop
mov
jg
add
xor
mov
loopne
pop
sbb
repz
lret
sbb
out
or
std
cmp
or
idiv
mov
sub
push
out
in
pop
fstpt
mov
not
lret
mov
lcall
xor
dec
cmc
cmp
add
scas
adc
jnp
cli
fsubrs
add
out
fsts
cmp
pop
ficompl
movsl
addr16
loope
add
cmp
inc
cmp
mov
lret
lcall
imul
mov
push
jns
test
xor
jb
add
fists
and
ror
xlat
xchg
xchg
cmp
cmp
scas
sub
mov
pop
sbb
sub
jae
xchg
rol
fisubl
rcrl
cmp
lock
lret
xor
and
push
jo
mov
cmp
adc
xor
push
and
sub
or
cli
push
inc
das
xor
adc
jnp
xor
sbb
add
hlt
ss
pop
xlat
les
xor
cs
or
cli
cmp
stc
fcomi
cmp
fstl
mov
fstps
jne
mov
or
dec
int
dec
pop
sub
cs
ror
inc
and
xor
dec
js
inc
arpl
int
shll
mov
cmpsl
mov
adc
in
lret
mov
cmp
mov
cmp
inc
push
sub
cld
dec
jno
and
xor
sub
cmp
gs
loope
and
mov
lret
add
mov
in
mov
fisttps
adc
cmpsl
cli
test
inc
pop
fadds
ljmp
mov
sub
push
repz
jne
mov
push
test
inc
lods
add
xor
aaa
dec
sbb
dec
pop
push
dec
aas
fildll
inc
mov
jae
sbb
add
in
aam
jg
shr
sbb
es
cmp
push
ja
repz
add
xor
in
call
das
aad
push
loopne
or
inc
sbb
sahf
push
pushf
cmp
push
es
ds
pop
sub
sub
cmpsl
cmp
xchg
sub
cltd
jb
inc
mov
push
imul
push
cwtl
xchg
adc
cmp
cmp
fistl
pop
cltd
xor
xor
rcll
xchg
aad
adc
cwtl
inc
sub
cmp
fsin
adc
adc
shrl
movsl
sbb
in
add
in
int
inc
xor
inc
call
ja
pop
in
ret
pop
ret
inc
icebp
in
cs
sbb
repnz
push
mov
cld
pop
jbe
or
push
cs
call
repz
insl
popa
fisubrl
cs
lods
mov
jmp
fisttpl
pop
fstl
dec
cmp
push
or
push
push
xlat
or
jb
ljmp
dec
and
cmp
push
xlat
or
loope
xchg
mull
cltd
mov
int
pop
add
loope
out
andb
xor
mov
push
pop
fiaddl
mov
cwtl
push
int
jmp
data16
mov
xor
jp
push
lcall
or
in
lods
pop
xchg
cmp
mov
clc
test
in
pop
out
ja
repnz
test
push
jo
xchg
mov
lret
ja
test
add
pop
sbb
imul
sub
mov
xor
test
in
mov
inc
ljmp
in
out
and
test
sub
testl
cmp
test
xlat
adc
sbb
push
lcall
pop
ret
aad
xor
mov
repz
xor
xor
sub
xlat
or
aad
cmp
arpl
ljmp
and
lret
scas
lock
sbb
adc
jo
mov
jno
fidivl
xor
pop
lcall
ss
jae
or
and
lock
insl
push
nop
xor
xlat
or
fidivl
ss
jae
mov
xlat
xor
out
movsb
inc
fdivr
sbb
lods
pop
shll
push
and
mov
sub
gs
cltd
rclb
or
push
js
push
shlb
into
nop
xor
cmp
push
ror
out
fwait
int3
loop
xor
lret
mov
xor
cmp
and
inc
mov
dec
fsubrs
dec
cld
adc
repz
sbb
dec
hlt
mov
jg
sbb
mov
les
xchg
push
pop
inc
in
sbb
jmp
stos
cmpsb
pusha
adc
push
mov
repnz
enter
xor
test
je
bound
push
sbb
fcoms
mov
inc
and
insl
push
sarl
fdivrs
jne
jns
loopne
fmulp
das
insl
loopne
movsl
ret
lds
push
jg
adc
ret
pop
imul
inc
lock
gs
xor
test
mov
test
gs
lock
leave
push
into
or
out
add
insb
sbb
stc
jecxz
xor
or
pop
ror
pop
mov
sbb
sbb
imul
aad
xor
imul
sbb
nop
sbb
in
sbb
cmp
hlt
mov
xor
or
adc
clc
in
mov
mov
sbb
repz
repz
stc
cld
je
jnp
testl
sub
add
neg
mul
test
sbb
pop
movsl
or
mov
xor
fmuls
pop
xor
gs
ss
les
add
pop
push
adc
cmpsl
je
lods
xor
enter
push
dec
dec
cmp
sbb
sub
jl
rolb
fwait
xlat
lret
adc
jne
js
mov
add
xchg
icebp
loopne
das
gs
jae
push
jbe
xchg
mov
mov
repz
stc
xor
lods
and
push
ret
jmp
movsb
sbb
mov
mov
ror
subl
adc
fwait
stos
jae
fcomp
xor
jl
push
imul
dec
lret
gs
fiadds
jb
push
stos
mov
aam
push
sub
aad
scas
mov
aam
jae
fadd
in
shrb
cmpsl
inc
cli
dec
adc
jo
stos
xor
hlt
repz
mov
jne
sahf
inc
out
cltd
fs
repz
push
mov
mov
out
fbld
mov
sbb
jecxz
insl
xlat
mov
jmp
dec
shrl
clc
out
cli
or
call
ficompl
pop
xchg
mov
outsl
pop
or
repz
mov
mov
mov
mov
dec
div
jnp
add
cmp
pop
fldcw
push
sub
jmp
bound
cmp
jecxz
std
fldt
sahf
lods
negb
divl
sbb
jmp
jnp
push
negl
out
sahf
lcall
xor
pop
xchg
int3
pop
iret
add
mov
inc
lcall
cmp
pushf
out
cmpsb
dec
mov
cmpsl
je
cmp
mov
in
jbe
testl
stc
jbe
inc
adc
sbb
stos
mov
stos
in
cmp
fwait
scas
jp
rep
iret
testl
xchg
div
cmp
loopne
cltd
fidivrl
inc
hlt
mov
fisubl
lcall
add
or
pop
shrl
cmp
adc
out
inc
call
mov
call
adc
add
loopne
fcomps
push
mov
iret
cmp
aam
fistpl
adc
jl
cltd
dec
sub
ljmp
fildl
jmp
frstpm(287
pop
cmp
mov
sub
pop
test
xlat
jno
leave
or
cmp
jp
cwtl
fdiv
movsl
xor
jae
or
inc
aad
push
mov
xlat
xchg
xor
sub
jecxz
stos
lea
jae
or
rcl
xor
mov
fdivr
xorb
lret
adc
jecxz
or
xchg
or
jae
or
aad
xor
mov
fdivrs
call
jnp
jecxz
fcmovnu
mov
xor
jae
or
xchg
aad
xor
mov
fcomps
or
fwait
aad
xor
lcall
or
or
aad
xor
and
call
or
fsts
xor
add
ret
sbb
cltd
shll
and
sub
or
adc
mov
rcrl
jmp
pop
cmp
fcmovbe
adc
popa
jae
or
push
aad
xor
jae
add
cmp
and
push
jae
or
adc
push
xor
ss
jae
or
jp
lret
repz
mov
jae
or
ljmp
and
leave
jae
cmp
dec
xlat
jno
imul
fdivrs
or
clc
idivb
mov
fdivs
or
mov
repnz
xlat
pop
mov
fcom
shll
dec
icebp
aad
xor
xor
clc
inc
jae
mov
xlat
mov
adc
jb
push
adc
mov
fadds
ss
jae
or
jecxz
out
mov
dec
xor
xlat
jno
loope
test
fidivl
lock
adc
sbb
xor
jae
dec
subb
lret
jae
or
or
mov
cmc
mov
sbb
imul
enter
xor
lock
lcall
lcall
stc
aad
xor
ss
jae
or
aad
xor
mov
fdivr
ss
stc
aad
xor
mov
fmuls
ss
jae
or
xor
or
movsl
repz
mov
or
enter
jp
or
mov
mov
fcomps
jnp
fimull
pop
sbb
or
imull
mov
jmp
sbb
jae
adc
ficoml
notl
adc
cmp
dec
jae
or
aad
xor
div
jne
mov
insl
fcom
ss
jae
or
aad
xor
jno
or
rcl
test
adc
mov
xor
cmp
or
fcmovnbe
xlat
xor
mov
cmp
cmp
je
icebp
loop
cmp
sub
fdivp
orl
push
mov
xlat
sbb
or
xor
enter
sbb
or
mov
repz
or
fadds
or
aad
xor
mov
fdivrs
or
or
arpl
stos
jae
or
mov
mov
fcomps
mov
mov
pop
xor
jae
out
sbb
imul
jae
or
push
aad
xor
mov
jae
or
mov
jae
push
or
cmp
lcall
cmp
cmp
jmp
fistpl
scas
popf
jb
inc
pop
popf
movsl
adc
add
sub
xchg
ljmp
jg
repnz
xchg
sub
cwtl
and
cli
in
sahf
add
jecxz
loopne
or
xor
cmc
adc
cmp
in
arpl
mov
imul
ja
add
xor
xor
repz
adc
jmp
cmp
lret
rcl
add
sub
jae
xor
xlat
fisubrl
jle
or
loop
ror
mov
pop
fildl
cmp
or
stc
jecxz
adcb
adc
aas
mov
call
xor
or
adc
jbe
xor
out
sbb
sbb
sbb
or
in
popa
fdivl
in
fisubrs
mov
mov
lods
push
enter
inc
sbb
fcoms
mov
popf
in
mov
mov
scas
sti
seta
or
dec
int
loop
add
cmp
xor
stc
in
adc
in
lret
test
sahf
nop
rolb
call
xchg
adc
out
cmp
arpl
jne
jp
ficoml
push
xchg
xchg
jne
pop
inc
cmp
int3
mov
icebp
dec
xor
sub
cltd
stc
sub
rcll
xchg
pop
xchg
test
dec
pop
fsubrs
iret
cli
jb
mov
xchg
ror
xor
mov
jae
add
pop
lret
loop
jns
xchg
add
sub
or
imul
mov
xchg
jo
and
sub
mov
dec
sbb
push
repz
enter
cmp
ss
out
ret
mov
add
dec
pop
jae
push
cs
rol
rcr
add
repz
jo
mov
aas
xor
scas
sub
mov
dec
in
movsb
cmp
and
dec
popf
pop
cmc
cli
dec
scas
mov
stos
jp
push
or
fnsetpm(287
jo
fcmovnu
int
push
ror
fnstenv
fisubrl
pushf
xchg
out
repz
cmp
cwtl
adc
sbb
or
mov
sbb
sub
mov
mov
push
and
ret
sub
jae
mov
jae
xchg
insl
cmp
mov
adc
mov
lods
andl
sbb
mov
out
xor
jmp
mov
or
mov
stos
ret
push
aas
addr16
shrl
int3
xor
push
mov
pop
clc
add
sub
push
mov
inc
pusha
adc
adc
test
lods
mov
fadds
imul
repnz
std
xlat
xchg
mov
fwait
mov
mov
mov
call
push
or
pop
aad
mov
xlat
or
icebp
cmpl
jno
jp
sti
movsl
mov
aad
jbe
js
int
inc
jbe
fidivl
mov
imull
xor
jnp
cli
sub
cmp
sub
mov
xchg
mov
mov
xchg
cmpsl
sbb
mov
fnsave
hlt
mov
mov
outsl
mov
xchg
xlat
add
gs
dec
test
dec
inc
cmp
ss
mov
cmp
xchg
ficoml
dec
sbb
data16
jl
loope
add
jno
insl
sbb
mov
xchg
add
aad
ja
outsl
jae
leave
cmp
in
lds
ficompl
movsl
int
outsl
rorb
ss
cmp
xchg
inc
sbb
ja
mov
and
jae
outsl
mov
test
xor
sub
sti
sub
cs
cmc
js
es
dec
fildll
mov
cmpb
test
lock
cwtl
jnp
mov
in
cmp
pop
ret
jnp
xchg
sub
inc
stos
lahf
mov
fs
mov
in
sbb
jnp
sub
mov
mov
pop
push
pushf
lock
fmull
mov
push
mov
mov
cmp
mov
or
xchg
pushw
lods
gs
fmuls
dec
sub
aaa
std
lret
insb
lock
mov
pusha
ds
xlat
dec
pop
add
jo
pop
pusha
clc
push
jo
sub
xor
sub
sahf
pop
xor
mov
cmp
mov
mov
adc
xor
fistpll
ret
arpl
lea
xchg
or
push
aam
test
jmp
mov
xchg
or
stos
insb
pop
mov
adc
sub
mov
ss
cmp
pop
loope
icebp
and
add
std
fdivrs
mov
aam
cmp
movsl
xlat
adc
cld
stos
ja
pop
clc
adc
mov
sbb
fistpll
push
add
inc
cmp
sub
cmp
sub
in
pushw
lock
xchg
pop
jecxz
lock
jecxz
ss
cmp
shrb
dec
int3
and
dec
pop
and
mov
ljmp
lods
cmp
mov
repnz
sub
ss
pop
lret
cmpsl
jns
or
pop
sub
ds
in
xorl
sub
and
pop
stos
sbb
push
arpl
sub
loop
int
push
out
arpl
es
repnz
and
in
add
fisttpl
std
dec
inc
mov
in
mulb
cmc
xor
sbb
stc
push
cmp
mov
les
scas
pop
fstpt
cmp
mov
lahf
jae
sbb
lcall
and
jnp
cmp
xor
xchg
test
adc
sahf
cmp
gs
out
ljmp
iret
cwtl
sbb
mov
dec
sbb
in
mov
nop
dec
sub
into
hlt
stos
xchg
ljmp
cmpsl
mov
pop
cli
adc
add
fstpt
xchg
xor
popf
cmpsb
lcall
or
cmp
jns
mov
adc
or
mov
movsb
rcrb
les
cmp
out
ljmp
stos
rorb
sub
push
sahf
push
adc
xor
add
fisttps
aad
stos
mov
repz
add
loop
and
fwait
es
cmc
fsub
clc
cmp
pop
clc
out
inc
adc
imul
inc
mov
jne
add
mov
add
jl
rcr
outsb
add
or
cmpsl
icebp
iret
lret
mov
push
pop
adc
add
jle
jl
mov
push
jg
jge
aad
jns
push
rolb
pop
xor
jmp
sub
xor
notl
adc
int
cmp
les
out
add
fwait
int
sbb
push
jmp
xor
in
inc
dec
popf
out
cmpsl
push
shll
fcomps
add
lock
add
or
push
sub
sub
pushf
push
test
or
orl
ret
dec
cmp
jp
jnp
xchg
mov
iret
fldt
cli
jmp
push
dec
repnz
push
jnp
shll
cmp
scas
mov
jle
cmc
fisubrs
and
repnz
and
mov
andl
xchg
jmp
aad
stos
adc
mov
loopne
pop
pop
out
lock
scas
ja
std
in
aaa
in
sub
jp
in
cmc
mov
loop
es
arpl
or
pop
xchg
pop
mov
pop
test
inc
shll
cmpsl
sbb
or
in
shl
pop
addb
cmp
and
push
mov
js
sbb
mov
enter
push
xlat
out
adc
dec
test
jnp
or
bound
in
divb
sub
mov
xchg
decb
cmp
sbb
and
push
dec
mov
cmp
addl
dec
jmp
stc
loope
mov
cmp
ret
lahf
enter
and
sbb
and
mov
mov
jns
mov
xchg
mov
scas
cmc
add
add
pop
fnsetpm(287
pop
clc
fwait
sub
stos
push
push
in
aad
mov
js
jne
stos
mov
pusha
test
xor
ja
inc
cmp
dec
cltd
inc
cmp
lods
sbb
lcall
xlat
push
notl
mov
sbb
or
ja
cmp
test
fsubrs
push
dec
dec
fwait
cmp
out
and
add
clc
pop
lret
shll
icebp
sub
xor
pop
xor
test
or
loopne
mov
icebp
pop
add
repz
movsb
push
cmpsl
cmpb
idivl
and
popf
inc
push
pop
data16
arpl
pop
imull
out
stos
pop
pop
sub
rcr
popf
cli
cmp
jnp
pop
sbb
in
sahf
jnp
in
sbb
jmp
les
and
aad
movsl
lcall
adc
sbb
jecxz
dec
lds
cs
mov
jmp
mov
or
loopne
das
ljmp
adc
in
hlt
clc
enter
pop
mov
scas
les
out
jae
xor
fcompl
mov
lret
das
and
stc
out
lcall
dec
mov
inc
out
or
sub
dec
cmp
loopne
stos
std
icebp
xchg
dec
mov
scas
adc
jae
mov
dec
mov
cmp
push
xorb
mov
cmp
fnstcw
sub
dec
or
aam
aad
jmp
mov
rorl
mov
js
jl
addl
les
repnz
aas
mov
mov
lods
ss
add
inc
add
and
push
sub
stc
dec
jne
cmp
scas
pop
mov
inc
in
test
fdivrp
pop
sti
in
jbe
cmp
add
inc
pusha
int
push
pop
add
jmp
adc
jmp
jecxz
dec
add
imul
gs
aam
aas
push
mov
inc
test
jno
imul
mov
popa
jle
jnp
xlat
imul
xchg
lods
js
cmc
cmc
fstpt
mov
adc
in
jnp
enter
xchg
sub
dec
cmp
push
movsb
pavgb
stos
jecxz
ret
jnp
xor
sbb
dec
pop
push
jmp
mov
aad
cwtl
or
in
fmuls
loopne
inc
ljmp
bound
xchg
dec
adc
jno
sti
js
sbb
xor
jns
int3
or
cmp
repz
scas
cli
out
xorl
mov
adc
ret
cmp
xchg
cmp
cld
lahf
or
xor
jp
mov
xchg
cmc
insl
or
in
addr16
mov
adc
and
xor
mov
lret
pop
mov
push
push
ss
adc
jecxz
lods
shlb
push
into
fcmovne
out
in
std
mov
in
test
push
jnp
and
imul
mov
xor
scas
cli
xor
jecxz
mov
jnp
arpl
push
and
js
fbld
fildl
push
xchg
sbb
pop
sbb
icebp
lds
jmp
inc
stos
rol
and
ret
or
sub
mov
pop
add
jmp
fdivrs
lcall
icebp
pop
sbb
ret
in
pop
sub
adc
mov
in
outsl
fsubrs
divl
test
cmpb
sbb
mov
inc
xor
ss
sbb
arpl
jnp
fucomip
mov
push
xor
jg
lcall
fisubrs
les
add
loopne
jne
and
mov
fxch
gs
hlt
mov
fadds
or
cmp
xor
iret
mov
mov
testl
leave
or
imul
jbe
ret
sbb
add
imul
xor
pushf
jae
add
sbb
hlt
jne
comiss
jg
xor
pop
leave
mov
leave
mov
jns
pop
rcr
xor
fisubl
leave
push
cmp
fwait
jmp
test
loope
push
jg
mov
enter
fld
test
push
fsubr
or
std
cmp
pop
in
cmc
lcall
xor
bound
dec
leave
push
lock
xchg
jae
dec
clc
in
fadds
cmpsl
in
mov
in
pop
cmp
push
imul
add
xchg
dec
repnz
add
call
sbb
xchg
xor
push
adc
pop
mov
adc
notb
dec
or
mov
rol
outsl
mov
add
mov
jecxz
and
jne
mov
or
sub
jnp
jbe
push
jp
jns
pop
repz
inc
loop
mov
ss
or
mov
sub
int
mov
inc
or
sbb
sub
jbe
sub
xor
imul
mov
enter
mov
cwtl
popf
jnp
or
les
jnp
push
clc
cmp
bound
jmp
pop
dec
add
ficompl
push
arpl
aaa
pop
ss
inc
ds
inc
pop
imul
xor
adc
mov
mov
repz
movsb
shll
mov
mov
jge
xor
fmulp
cwtl
push
cmp
inc
mov
ret
dec
ja
or
cmp
cmp
std
aad
cmp
outsb
xor
and
inc
mov
pop
repz
stc
cmc
mov
scas
lock
jo
push
mov
or
out
js
lret
or
icebp
or
push
sub
out
out
lret
in
and
mov
xchg
loopne
pop
add
cmp
and
rorl
xor
mov
fbld
xchg
push
lahf
dec
cmp
mov
jmp
sbb
aad
mov
mov
sbb
iret
clc
test
mov
jge
dec
scas
sahf
out
lcall
fidivl
sbb
insb
jl
pop
imul
cli
sub
dec
pop
fs
cmp
sbb
or
adc
and
xlat
js
fwait
aam
das
nop
adcb
xor
fmuls
aam
ljmp
mov
mov
dec
lret
test
push
pop
add
or
sub
in
jns
dec
les
lcall
inc
sbb
in
dec
and
cmp
xchg
dec
jecxz
jbe
push
ss
les
or
inc
mov
testb
mov
movzwl
rcl
pop
gs
jmp
out
arpl
out
jl
and
cltd
sbb
push
aam
repz
mov
cli
mov
dec
fisubl
int
pushf
enter
mov
push
sub
fcomp
cmc
xchg
test
neg
push
pop
dec
xor
popl
mov
mov
xor
push
inc
sbb
lcall
cltd
lret
or
jns
adc
cmp
pop
mov
dec
pop
lds
adc
sbb
popf
out
adc
and
xor
or
pusha
cmp
in
push
mov
jo
repz
clc
arpl
add
jnp
or
cltd
aad
inc
mov
movsl
fldl
ljmp
mov
fdivs
inc
pushf
jle
push
in
sbbl
dec
subb
ret
mov
mov
or
mov
in
fisubrs
or
in
insl
mov
mov
fistpl
inc
divl
lock
jecxz
je
push
stos
movsb
jp,pt
dec
jne
mov
and
jo
mov
iret
ja
in
xor
dec
dec
repnz
push
jne
arpl
les
cmpsl
dec
push
push
rorb
rorb
clc
ficoml
or
hlt
or
or
add
enter
push
out
notl
push
or
jno
test
pop
mov
push
scas
sbb
mov
repz
mov
fildl
jnp
in
sbbb
mov
shl
int3
into
mov
sub
fcmovnb
in
xlat
jne
pushf
xchg
jne
cmp
mov
xlat
repz
and
sub
and
loopne
sbb
jmp
adc
movsb
out
jecxz
int
subb
inc
mov
repz
dec
fidivl
push
add
pop
aad
repz
sub
rcrl
jecxz
mov
testl
pushf
test
sbb
pop
add
loope
outsl
fimull
test
movsb
pop
icebp
sbb
movsl
xchg
add
and
out
or
dec
sbb
pusha
neg
sub
jns
out
pop
dec
insb
repnz
lahf
addr16
xchg
jno
push
cmp
out
loope,pt
nop
nop
fldt
jmp
inc
jg
mov
jo
call
mov
mov
fwait
mov
sub
add
jge
inc
push
in
popa
adc
adc
repz
sarb
xlat
loop
lock
jae
stc
jnp
cmp
add
jae
jmp
xor
or
lds
idiv
shl
pop
jg
repz
cmp
iret
pop
jecxz
fdivrp
shrb
adc
fwait
testb
scas
jp
mov
int
sub
ja
mov
mov
mov
cld
sar
sahf
inc
cmp
das
dec
cmp
sbb
xlat
and
in
stc
jnp
pop
adc
shlb
aaa
cmpsl
mov
mov
in
in
repz
mov
dec
jo
mov
test
dec
div
adc
push
jge
sub
rolb
cmpsb
push
lret
adc
movsb
out
pop
std
scas
dec
jno
jge
jo
jne
cmp
push
repz
add
sbb
push
stc
jne
pop
scas
jae
push
pop
push
lock
repnz
cmp
lret
xlat
loop
ret
add
and
or
out
xor
or
ljmp
mov
ja
ljmp
ss
xchg
jae
xor
xchg
or
popa
ljmp
xor
jae
push
add
jo
xlat
into
in
or
scas
adc
jae
ja
inc
mov
aam
xlat
loope
jno
in
mov
jbe
add
xlat
fildl
or
shl
clc
adc
inc
mov
clc
pop
repnz
add
adc
mov
int
mov
les
or
out
xchg
enter
dec
scas
hlt
rorl
rcll
aad
sbb
jnp
bound
jbe
subb
mov
iret
pop
or
dec
or
loope
data16
dec
cs
adc
hlt
in
xchg
outsl
add
repnz
or
rol
iret
inc
adc
orl
xchg
mov
push
jl
enter
push
adc
fs
test
cmp
jp
sarl
mov
adc
aas
ds
dec
jmp
orl
mov
cmp
test
mov
jne
les
jmp
mov
data16
add
xchg
test
jae
imul
xchg
or
ss
repnz
xchg
mov
lock
dec
mov
inc
dec
std
movnti
fwait
pop
xchg
aam
add
add
mulb
in
cwtl
pmaddwd
mov
aad
mov
cmp
call
in
pop
ja
inc
dec
pop
add
stos
xor
sbb
clc
in
jle
outsl
lods
jmp
jnp
jmp
cli
jno
jmp
xor
shlb
inc
clc
jo
mov
push
cltd
sbb
or
cltd
fidivrl
jmp
push
adc
lds
push
xchg
adc
jnp
and
adc
loope
test
cmp
fwait
insl
mov
orb
add
negl
mov
push
inc
sti
daa
sbb
sub
xor
in
inc
push
mov
aad
add
mov
enter
xlat
mov
test
or
out
push
lret
incb
fidivrl
pop
clc
mov
fstps
jb
mov
loope
pop
inc
ljmp
iret
shr
or
lock
xor
enter
rcll
ljmp
imul
orb
sbb
sub
push
scas
inc
mov
xchg
mov
and
mov
aad
cld
fimuls
add
jb
mov
iret
shlb
out
aad
test
or
mov
xor
test
jae
xlat
mull
mov
xchg
sbb
enter
inc
aad
out
xchg
cmp
imul
or
or
xchg
mov
xor
cmpsl
imul
shrl
psllq
pop
imul
adc
mov
subb
shl
cmp
addl
fldl2t
push
xchg
ljmp
scas
bound
in
sarl
sub
pop
cmpsb
xchg
fildl
test
cmp
ret
in
or
sbb
cld
inc
scas
aaa
sbb
xchg
push
dec
dec
cli
mov
gs
push
addr16
xchg
aam
pop
test
pop
fdivl
loop
aam
divl
loopne
pop
jnp
push
int3
cmc
clc
or
mov
jns
repz
adc
push
or
xchg
mov
cli
cld
fisttpl
in
lcall
int
nop
bound
bound
adcb
fstpt
test
add
icebp
or
mov
aam
fdivrl
outsl
in
jmp
xor
jnp
jae
add
loop
arpl
mov
xchg
or
stc
xor
or
push
or
jbe
pusha
lock
icebp
jns
mov
cmp
stos
xchg
pop
push
jle
scas
dec
or
clc
fsubrs
add
lods
imul
movsl
fdiv
xchg
sbb
mov
sbb
dec
and
int
lret
mov
ds
call
enter
in
cmp
pop
fcmove
jnp
sbb
inc
aad
mov
mov
fmul
jb
pop
fcoml
insb
repz
mulb
mov
in
xor
inc
xchg
in
add
cmp
dec
in
cli
adc
fidivrl
js
stc
mov
adc
and
test
or
cli
dec
adc
sbb
into
shll
jbe
push
mov
dec
repz
into
fsub
stos
lock
sbb
xor
loopne
dec
xchg
sub
lret
movsl
dec
loopne
inc
cmp
enter
bound
fisubs
ja
idivl
vpavgb
jg
push
pop
fbld
cmc
mov
xchg
incb
push
push
and
add
sbb
out
xor
jp
or
xchg
imul
dec
lret
ss
aaa
push
out
adc
dec
jb
cmc
leave
cmp
mov
notb
cmpsl
scas
test
sub
std
lock
dec
ret
fcmovb
mov
mov
cld
hlt
mov
aad
les
sub
out
pushf
sbb
into
xchg
jnp
jge
xlat
scas
aaa
pop
pop
mov
int3
jg
cmp
cs
loop
lahf
sub
and
dec
and
xor
mov
xchg
enter
lock
jmp
mov
push
std
into
sbb
dec
roll
xor
mov
cmp
enter
cmp
pop
push
mov
mov
fs
mov
in
test
xchg
xchg
hlt
pop
lods
mov
sub
jb
inc
dec
in
hlt
and
scas
repnz
adc
popf
in
pushf
lcall
adc
cmp
dec
scas
adc
sahf
or
arpl
dec
jmp
les
jge
cmpb
les
clc
enter
jmp
xor
mov
cld
dec
jae
insl
lcall
jmp
push
jl
inc
rcr
fildl
popa
xor
adc
mov
pop
mov
pop
dec
sub
in
in
cmp
rclb
lcall
dec
aad
into
jno
and
cltd
xor
mov
js
jecxz
stc
dec
lock
inc
test
test
es
stos
push
outsb
jg
pop
int
add
pushf
xor
push
test
jo
cmp
fldt
cmp
or
stos
cmp
out
repz
les
or
xor
sub
mov
clc
scas
xchg
daa
sahf
clc
insb
or
dec
jns
lods
data16
rolb
sub
jmp
subl
lds
xchg
or
add
jno
push
sbb
test
push
fildl
fcoms
je
push
out
or
inc
xor
cmpsl
xor
pop
das
das
or
mov
mov
jno
fwait
push
in
fcmovu
jns
and
ljmp
xor
or
sbb
pop
jnp
lret
scas
sbb
cmp
xor
shll
cmp
out
jb
clc
sub
imul
sub
in
mov
cld
inc
xor
and
pop
mov
imull
cs
sub
add
loope
mov
ja
sbb
jbe
inc
inc
and
inc
pop
cmp
fnstenv
fsubp
ret
mov
add
sub
popf
ja
ret
cmp
inc
dec
cmp
sub
add
jae
xor
mov
loopne
lods
inc
in
xor
icebp
stc
gs
rorl
push
aas
icebp
repz
push
lock
dec
insl
sbb
and
outsl
ret
sub
add
pop
sub
xlat
mov
sahf
inc
add
loope
int3
les
cmp
ljmp
cmp
repnz
mov
dec
pop
loopne
aas
fcmovnbe
lods
and
mov
xchg
mov
repnz
fistps
lcall
or
pop
and
mov
add
ss
mov
shlb
les
scas
xlat
jp
jnp
out
mov
inc
into
mov
xlat
add
push
aad
pop
fwait
repnz
stos
mov
cs
scas
imul
in
mov
cltd
and
xlat
pop
xor
lods
sbbl
or
popl
cmp
addr16
pop
push
mov
adc
mov
repnz
outsl
mov
add
inc
pop
loop
fs
or
sbb
push
fsts
cld
clc
or
dec
xchg
adc
lret
cmpsl
inc
adc
cmpsb
mov
daa
jge
cmp
inc
xchg
xlat
data16
push
js
filds
leave
cltd
lahf
lea
cmpsl
or
adc
inc
mov
push
and
iret
xor
lock
rolb
leave
mov
clc
hlt
dec
adc
xchg
ret
enter
bnd
jae
lock
cmp
sbb
ss
xor
dec
sub
push
lcall
fsubrs
pop
mov
lock
dec
xchg
xchg
mov
cltd
pop
sub
test
mov
sub
lret
xor
lcall
outsl
mov
cmp
pop
aas
icebp
inc
bound
add
mov
push
lahf
cltd
ja
or
leave
mov
aad
or
xor
sbb
mov
jmp
adc
or
or
fcomi
mov
and
ret
pop
call
cli
cli
mov
inc
cmp
pop
ds
cmp
cmp
pop
xchg
pop
lds
popa
adc
mov
xchg
gs
movsb
insl
insl
div
xor
enter
mov
ja
adc
dec
pop
inc
addr16
out
loopne
fistps
push
jp
adc
aad
mov
jmp
sahf
add
xchg
jb
or
push
jnp
and
ss
out
cmpsb
or
xchg
fcomps
idiv
lret
lahf
or
arpl
jmp
xor
int3
jnp
cltd
add
mov
imul
jmp
pusha
aam
xor
adc
js
push
hlt
scas
xor
jmp
xchg
fimuls
lcall
call
lds
mov
jnp
mov
icebp
xchg
popf
sub
adc
inc
dec
mov
jge
ret
leave
in
mov
mov
fistl
mov
cltd
testl
inc
mov
lret
aad
mov
pushf
pop
ja
jo
jnp
sbb
sbb
xchg
in
pop
add
mov
int
shlb
inc
ss
cmp
add
mov
or
jge
mov
sbb
mov
cwtl
push
sub
int3
shll
ficompl
das
xchg
xor
xlat
xlat
lcall
jo
sarl
cmp
cmp
mov
cli
cmp
and
jp
xchg
cli
pop
aam
or
iret
cmc
out
pop
mov
adc
sahf
add
call
jecxz
cmp
jge
mov
bound
cmp
repnz
xor
std
std
out
test
push
mov
in
gs
scas
ret
aas
daa
decl
fistpll
in
pop
cld
rcr
aam
notb
es
insb
cmp
cmp
adc
xchg
mov
xlat
pop
lret
cmp
mov
arpl
xor
xor
imul
in
xchg
repz
sbb
movsb
pushl
jne
mov
mov
and
lcall
xchg
test
jmp
xchg
push
pusha
pop
push
sub
xchg
pop
hlt
inc
jo
push
mov
pop
sbb
fwait
imul
jne
add
cmp
pop
cmp
xor
out
int
imul
neg
xlat
fisubs
dec
push
clc
subl
fsubs
testl
cmp
imulb
jmp
repnz
xorl
mov
jp
int
not
or
enter
cmpsl
push
inc
test
sbb
repnz
sar
repnz
filds
lock
mov
push
sbb
lahf
loop
imulb
cmp
fistps
gs
repz
aas
ret
js
rcl
xor
call
mov
lcall
popf
int3
orl
in
add
jp
fwait
ds
fbstp
adcb
and
adc
push
add
cmp
adc
sete
fsubr
inc
push
pop
in
fsubrl
inc
stos
cmp
mov
add
add
in
outsl
xchg
aaa
sarb
pop
inc
out
outsl
sbb
sub
pop
jae
dec
pop
cs
push
and
movsb
bound
fisubl
add
xor
mov
cmp
push
shlb
cmp
repz
js
leave
dec
flds
cmpps
out
gs
mov
sbb
in
and
loopne
jecxz
scas
mov
add
test
sbb
mov
cld
outsb
daa
fsts
imul
leave
ror
rcrl
jecxz
cwtl
cs
inc
push
shlb
aad
pop
loopne
andl
sbb
push
rcl
lret
cs
push
or
xlat
inc
stc
lock
mov
adc
stos
lock
stos
adc
fimull
fcmovnb
outsb
jmp
aad
jmp
insb
ficompl
inc
sub
movsb
shlb
cwtl
clc
mov
cmp
or
add
outsl
xchg
mov
pop
shll
sub
fidivs
ds
gs
imul
lret
fidivs
mov
sbb
fwait
addr16
pop
sbb
imul
jp
cmp
pop
xor
mov
push
cmp
in
mov
xchg
xlat
stos
sub
fldenv
inc
cmp
les
cmp
jnp
cmc
stc
mov
and
aas
imul
xor
add
jl
shll
jge
addb
or
div
xlat
jne
push
aam
push
adc
cmp
sub
inc
inc
cli
bnd
stc
add
arpl
test
jae
jmp
fnstcw
aaa
outsl
inc
sub
jge
dec
cmc
or
in
call
jge
lahf
cs
sub
in
cmpl
fwait
daa
adc
mov
jo
sbb
or
sub
aad
inc
ret
in
outsl
mov
push
clc
fcomps
lret
sbb
rcrb
and
push
dec
jl
test
std
mov
test
idiv
or
dec
cli
imul
push
mov
fists
cltd
pop
mov
in
aad
stc
mov
out
mov
clc
xor
dec
dec
xchg
and
fistpl
imul
icebp
pop
stos
xchg
pop
or
add
insb
pop
mov
jae
popf
mov
inc
or
lcall
sub
aas
clc
sbb
ror
and
mov
mov
sbb
fdivrs
jg
add
sub
jge
int3
cmp
or
fbstp
in
mov
pop
int
cmp
pushl
pop
pop
dec
cltd
out
lcall
loopne
ja
test
imul
push
cmp
mov
cs
jno
aaa
or
push
aad
xchg
mov
fildl
push
repz
add
adc
sbb
push
mov
out
loope
adc
sbb
inc
lahf
xchg
lods
mov
mov
push
js
mov
in
xchg
aad
les
arpl
out
in
popf
cmp
shl
mov
insb
out
fiaddl
loopne
jo
inc
clc
test
in
lds
xor
pop
push
in
lock
push
in
cmpb
and
xchg
jmp
neg
enter
roll
mov
jmp
dec
daa
inc
rol
popf
push
jmp
dec
in
mov
add
jp
dec
daa
or
jnp
cmpsb
adc
mov
add
imul
stos
cmc
lret
repz
icebp
add
cmpsb
icebp
jae
pop
jno
jnp
mov
push
sub
int3
mov
ret
es
lret
xchg
cmpsb
iret
stos
add
jns
push
jnp
pop
mov
loopne
fnop
sbb
pop
mov
adc
outsl
addb
mov
iret
adc
int3
push
cmp
dec
out
sbb
clc
xor
clc
sub
add
cmp
push
out
sbb
xlat
lahf
rcll
movsb
xor
xlat
add
add
cld
xchg
fstps
out
es
stos
xchg
scas
xor
mov
push
pop
ret
mov
shr
push
sbb
les
add
pushl
ds
shll
jg
shl
scas
pmullw
sbb
loop
arpl
or
mov
and
cmp
mov
stos
jne
ds
inc
adc
jo
xlat
xchg
cmp
xchg
shll
test
fadd
or
pop
insl
or
repz
pop
fwait
mov
xor
popa
lock
test
jmp
dec
adcb
popa
xor
cmp
in
push
pop
je
repz
xchg
and
leave
xor
loope
pop
fildl
fstl
push
pop
push
testb
jecxz
mov
push
pop
loopne
mov
sub
sbb
stos
outsl
inc
dec
mov
pop
add
dec
in
xchg
repz
jae
arpl
mov
hlt
pop
fld
sub
cltd
sub
xchg
pop
or
pop
dec
dec
movsl
jge
fsubr
out
fcoms
mov
add
mov
imul
xchg
and
aad
in
add
aad
xchg
pop
xor
inc
xchg
hlt
test
xchg
or
or
fsts
adc
xor
fstpt
mov
test
out
hlt
mov
jg
xchg
outsb
subb
icebp
sub
mov
cmp
xor
pop
pop
cmp
cltd
icebp
out
inc
cmp
in
div
push
xlat
pop
hlt
inc
and
pop
push
subb
jbe
sbb
aam
sbb
add
jns
add
stc
lock
pop
nop
xlat
les
stos
je
stos
lcall
arpl
jns
pop
add
cmp
xor
jmp
pop
pop
push
mov
clc
scas
dec
jnp
ret
jns
mov
pop
mov
mov
nop
lods
inc
aad
xlat
pop
stos
insl
imul
das
sub
sti
mov
cmp
push
sbb
pop
enter
push
xor
cmp
out
xor
in
adc
add
xlat
test
push
cld
outsb
xor
stc
push
lds
imul
jae
pop
dec
aad
dec
adc
aad
arpl
cmc
hlt
les
push
add
pop
or
pushf
out
sarl
push
jg
loopne
push
stc
and
sbb
jecxz
mov
inc
cltd
push
pop
or
shrb
xor
mov
inc
mov
repnz
test
ja
fimull
mov
sub
mov
mov
cwtl
dec
xor
stos
clc
dec
out
cmp
cmpsl
dec
mov
mov
fadds
arpl
loopne
loopne
addr16
and
call
xchg
shrb
aaa
test
in
in
pop
xchg
mov
xchg
hlt
inc
stc
loop
inc
jmp
xchg
jb
arpl
sub
add
in
xor
xor
lret
jg
sbb
adc
enter
mov
dec
mov
xchg
jg
sbb
movsb
enter
inc
inc
or
sbb
add
inc
ja
int
dec
data16
sub
and
push
fs
mov
fidivl
dec
test
adc
outsb
dec
push
inc
repz
add
push
dec
inc
leave
xchg
js
dec
leave
in
push
dec
push
scas
adc
cs
cmpsl
cmp
fldt
mov
ficompl
test
loop
and
fnstsw
pop
pop
jo
mov
push
mov
push
ds
adc
xor
into
fcoms
push
dec
jmp
mov
push
and
sub
pop
je
mov
push
js
xchg
inc
or
inc
popa
cmp
rcrb
lods
negl
pop
or
mov
and
in
dec
rorl
cmc
xchg
fildl
adc
aad
arpl
push
daa
push
push
sbb
ret
inc
mov
sub
add
inc
int
mov
loopne
jbe
push
call
ljmp
mov
dec
dec
int
loopne
dec
imul
les
mov
adc
stos
aad
push
lock
adc
clc
jo
jbe
adc
push
mov
dec
push
rorl
add
cmp
pop
dec
adc
ja
mul
xchg
dec
notl
fcomps
cs
dec
jecxz
jnp
fcmove
or
cmp
mov
stos
iret
cmp
sub
lret
push
add
hlt
push
and
inc
in
or
cltd
out
mov
in
jbe
hlt
aad
mov
fs
jecxz
or
pop
fldenv
xor
int3
push
adc
imul
rol
cs
lea
ja
xchg
loopne
pop
adc
sbb
rorl
scas
fs
cmp
out
or
imulb
imul
xchg
lods
xor
je
repz
fnstcw
mov
in
xor
xor
out
mov
sub
xchg
pop
mov
xor
cmp
lods
repz
stc
lret
pop
aaa
xchg
mov
pop
imul
shll
add
sub
bound
sbb
add
jnp
aad
adc
adc
in
nop
in
test
dec
and
fildl
out
pop
add
push
push
sub
cmp
cmp
in
cwtl
cmp
fwait
or
sbb
ja
fcmovu
sbb
js
add
cwtl
sub
push
inc
inc
fcom
jae
in
fwait
jae
or
push
fadd
dec
mov
fbstp
push
aad
imulb
xor
add
fstpl
cmp
mov
jecxz
fcomps
pop
loope
in
int
sbb
push
inc
insl
gs
je
pop
scas
dec
sbb
sub
add
push
stc
xlat
lret
or
lahf
pop
dec
jg
or
lds
mov
mov
imul
aad
cmp
pop
xchg
push
cmp
fwait
clc
in
fisttpl
sbb
call
cmp
decl
or
mov
jmp
pop
pop
cli
add
jns
js
in
inc
push
sub
fistpl
ficompl
clc
sbb
ja
mov
call
add
decl
jmp
in
mov
js
mov
mov
aad
xchg
or
imul
dec
mov
jmp
xchg
in
xchg
fdivrs
cmp
mov
adc
jmp
fxch
fstpt
adc
cmp
jbe
ja
sbb
fistl
daa
lcall
xlat
mov
mov
repz
fchs
pop
in
mov
imul
lret
popf
test
mov
push
jae
pop
shrb
xor
les
jnp
movsb
cmp
vmovsd
ja
aaa
andb
adc
iret
cmpb
sub
andl
mov
dec
cwtl
imul
testb
lcall
fwait
imul
sbb
push
dec
fiaddl
fstpt
sbb
clc
pop
fwait
cmc
clc
rep
decl
mov
sub
shlb
cmp
push
ffreep
sub
mov
arpl
sarl
iret
test
cli
cmp
hlt
rclb
jo
daa
push
js
add
mov
mov
in
lahf
fwait
xchg
mov
xlat
sbb
push
in
fsubr
je
pop
ds
inc
dec
in
jle
lcall
push
push
loopne
push
enter
test
dec
imul
xchg
mov
jge
cld
dec
clc
enter
sub
mov
hlt
cmp
shl
in
sub
sahf
mov
aam
jmp
cli
jmp
xor
cmpsb
sub
test
int
mov
cmp
aad
int3
jns
adcb
mov
in
dec
lock
stos
loopne
sahf
sub
or
jmp
and
scas
in
cmp
or
jmp
jmp
add
add
push
xor
pop
leave
lahf
sbb
cmpl
sahf
cmp
ds
movsl
and
in
xchg
loopne
in
lcall
cmp
xchg
loope,pt
or
add
cmpsl
dec
mov
xchg
sbb
cmpsb
cmp
divb
ficompl
imul
push
or
jle
out
push
mov
pop
repz
pop
test
push
dec
mov
hlt
adc
push
jae
xchg
cmp
loope
cmpsb
or
inc
adc
mov
mov
pop
sarl
ret
loopne
mov
mov
les
jno
sbb
hlt
mov
stc
xor
push
int
hlt
sbb
stc
xchg
fisubrs
movsb
fs
div
dec
fidivrl
cmpsl
xor
jno
rcr
push
cmp
movsl
arpl
xchg
mov
lahf
or
mov
aam
sub
test
ret
lcall
xorl
xlat
test
int3
push
inc
and
push
rdmsr
stos
arpl
cmp
xchg
adc
sub
mov
aad
xchg
ret
cwtl
push
pop
ret
mov
add
enter
sub
or
aaa
dec
pushf
add
sub
mov
inc
cmp
outsb
dec
mov
repz
pop
repz
pop
cmp
ret
movsl
pop
inc
cmp
and
iret
push
mov
push
xor
inc
int3
sub
jp
xlat
fcoml
mov
add
sar
jmp
inc
in
outsb
pop
sbb
addr16
sub
inc
dec
fs
imulb
rclb
clc
sub
test
cmp
add
aad
stos
cmp
clc
pop
add
adc
call
out
clc
jnp
addr16
inc
push
dec
push
imul
filds
outsl
shr
mov
iret
loop
test
xor
or
push
xlat
mov
cmp
mov
outsl
mov
in
lea
int3
or
int
sbb
incb
pop
cmp
out
mov
add
sub
imul
cmp
jecxz
clc
cmp
pop
sbb
xlat
jp
add
xchg
or
mov
jo
popf
mov
cmp
fstl
adc
fcmovu
jmp
cmp
push
lods
stc
aad
adc
mov
in
add
jbe
mov
rcrb
fidivrs
xchg
pop
fdivs
or
out
jg
shll
ja
pop
stc
mov
incb
shrl
inc
faddl
sbb
mov
stos
sub
leave
inc
scas
add
stc
jmp
mov
pop
insl
mov
dec
loope
in
iret
jbe
jo
loop
cmc
fwait
repz
cmp
push
pop
mov
adc
mov
mov
pop
mov
lds
add
inc
fnsave
xlat
jmp
sub
js
shlb
mul
in
or
cmp
fisttpl
lods
lret
jg
shlb
jecxz
add
push
dec
xchg
jae
loope
jmp
stc
in
pop
add
mov
sbb
incb
cmp
clc
jae
rolb
pop
fcoms
incb
addr16
cmp
fwait
lcall
clc
pop
jo
stc
adc
mov
cmp
lcall
cli
jmp
in
mov
mov
mov
mov
inc
cmp
jae
lock
inc
lcall
jae
lock
inc
mov
inc
and
and
mov
add
and
adc
loopne
or
push
iret
jo
std
aam
mov
or
xchg
int
cmc
jmp
ss
mov
and
js
mov
outsl
jecxz
push
mov
xchg
movsb
add
cmp
mov
cmp
std
ja
pop
or
add
outsb
pop
or
sub
dec
mov
or
rcrb
fnstcw
sbb
cmp
dec
inc
pop
xor
push
icebp
push
jmp
sbb
inc
xchg
sbb
outsb
or
xor
inc
mov
or
pop
aam
xchg
int3
adc
push
xchg
or
repz
sbb
pop
pop
and
incb
icebp
out
and
mov
das
leave
xor
xor
pop
xchg
inc
outsb
lock
xchg
mov
xchg
sarl
clc
and
or
push
or
pop
fldt
push
test
in
out
inc
push
or
aad
mov
arpl
inc
orb
xchg
lods
test
rorb
add
pusha
add
pop
jmp
push
int
in
sbb
jo
js
inc
push
iret
daa
test
fmul
lret
sbbl
fnsave
xchg
adc
shrl
fcom
lret
and
idivl
mov
ret
in
lahf
sbb
cmpsl
sub
mov
subl
or
mov
out
cltd
push
les
in
add
cmc
mov
mov
ret
or
and
out
clc
je
jmp
xchg
adc
inc
pop
jnp
aaa
dec
mov
dec
jb
xor
xlat
hlt
or
les
pushf
push
rolb
insb
mov
sub
sub
xor
iret
push
add
insb
clc
sbb
orb
repz
sarl
push
jl
push
movsb
loopne
pop
daa
cmpsl
mov
mov
lcall
add
popf
xor
and
test
jp
cwtl
jbe
loopne
add
xchg
ss
push
xor
mov
rorb
stos
test
or
inc
pop
dec
dec
mov
mov
push
adc
fmul
or
int
cmp
cld
mov
pusha
pop
adc
xchg
lcall
icebp
mov
imul
jns
arpl
inc
ror
or
sbb
filds
stc
xchg
out
pop
sbb
pusha
js
mov
mov
lret
pop
js
sti
test
fldz
inc
enter
mov
jmp
not
and
and
in
jmp
ficompl
mov
jae
jmp
in
sahf
loopne
fwait
xor
cmp
push
and
out
xchg
mov
iret
cmp
fistl
cmp
loope
add
test
mov
push
adc
jae
cmp
gs
lret
mov
sub
jmp
outsl
out
jmp
add
lcall
push
and
adc
lret
popf
scas
jecxz
cmc
test
adc
stc
inc
out
testl
in
pop
dec
je
jmp
stos
adc
repz
scas
mov
mov
sub
sbb
xchg
ds
inc
push
xchg
divl
mov
sub
ljmp
inc
push
inc
jmp
sub
xor
cmp
lock
jne
push
fidivl
push
add
int
fldt
jl
add
insb
xor
fwait
mov
xchg
fbstp
cmp
and
cmp
cld
jecxz
cmp
sub
fsts
jns
mov
clc
mov
cmp
rorl
and
jbe
js
scas
dec
mov
fstps
lock
sub
mov
stos
inc
cmp
je
mov
adc
pop
mov
mov
jo
lret
add
lcall
imul
xor
xchg
daa
or
or
repz
hlt
outsb
js
pop
xor
sbb
iret
cmp
xchg
pop
repz
stos
jnp
dec
mov
sti
cmp
mov
mov
bound
or
in
int
test
cmpsl
pop
movsb
or
xor
ss
push
pop
jno
mov
jmp
stos
aaa
cs
imul
mov
xchg
daa
pop
adc
dec
add
inc
in
enter
in
out
stos
js
mov
xorl
aaa
fsubrs
ficompl
mov
push
jmp
inc
cltd
dec
pop
push
inc
fsubr
divl
cmp
mov
xchg
inc
pop
call
fmuls
mov
cmp
push
jns
dec
sub
or
pusha
fsubs
jl
lret
mov
adc
add
sub
out
mov
clc
or
cmp
fnstenv
jmp
inc
ds
push
sub
dec
mov
or
enter
rol
repz
fidivrl
xchg
or
mov
cmp
mov
add
in
add
test
push
jp
test
xor
rorb
push
inc
sub
mov
in
cli
cmp
xchg
adc
cmc
lret
fsubr
insl
xchg
xor
jne
mov
dec
mov
shrb
addr16
xchg
push
pop
pop
adc
repz
je
inc
mov
fs
or
dec
orl
int
insb
inc
fisubl
xor
xor
adc
stc
cltd
movsb
dec
outsl
jb
sub
dec
mov
mov
push
scas
vmwrite
add
and
cwtl
sub
mov
sub
ret
mov
stos
sbb
mov
fiaddl
ljmp
mov
pop
test
test
inc
sub
sbb
cmp
call
cmp
int3
lcall
xor
jns
or
cwtl
push
xor
lock
icebp
push
stos
mov
scas
dec
add
ret
xor
outsb
cmp
cmp
pop
sbb
fisubrs
cmp
xchg
mov
sbb
std
dec
xchg
cmp
in
add
movsb
outsl
ret
fcmovnb
push
fidivrs
inc
cmp
sbb
aad
mov
jo
clc
adc
js
aam
test
xor
inc
xor
ds
mov
or
stc
jnp
hlt
stc
mov
loopne
push
cmp
sub
cwtl
mov
mov
xchg
and
enter
add
rolb
rorb
gs
mov
arpl
andb
ret
clc
and
nop
mov
sbb
mov
xor
call
sub
in
divl
dec
scas
dec
mov
enter
test
xchg
in
jb
shlb
adc
outsl
or
push
sbb
lcall
insl
xchg
add
xchg
popf
xor
xchg
push
inc
mov
jmp
sub
fldln2
cmpb
xchg
das
test
sbb
dec
std
cmpsb
inc
scas
dec
aad
mov
enter
scas
in
or
mov
add
cwtl
js
dec
out
bnd
sbb
add
aad
mov
add
loope
or
fcos
xchg
jns
xlat
dec
fsubr
cmpsb
pusha
push
fwait
sbb
outsl
incb
inc
popa
jp
xor
cmp
xor
test
ja
lds
push
das
fimull
in
push
pushf
fists
mov
lea
out
lds
cmp
sbb
jo
loope
jb
aas
cmp
ljmp
out
mov
ja
shll
inc
sbb
sbb
add
subb
je
in
dec
lea
in
les
daa
sbb
mov
mov
xor
jnp
dec
imul
mov
divb
clc
icebp
pop
aaa
cmpsb
and
push
popa
mov
xchg
enter
sarl
xchg
jmp
fnstsw
imul
repnz
das
and
adc
dec
mov
fs
adc
movsl
push
mov
adcl
sub
ror
mov
scas
jp
repz
or
sub
dec
lret
jg
in
shlb
pop
push
mov
xlat
jne
cli
pop
in
dec
cld
dec
popf
or
mov
aad
inc
xor
das
jmp
cld
adc
jmp
cmp
mov
mov
inc
mov
mov
dec
in
loope
cmp
jecxz
dec
add
out
push
in
stc
sbb
add
push
sbb
aaa
pushf
mov
scas
sub
jg
je
cmp
cmp
cmp
cmc
pusha
sub
mov
ljmp
jo
xchg
orb
jmp
rcr
push
into
sub
dec
sahf
imul
pop
lock
rcl
int3
clc
xchg
sbb
out
sub
in
jb
fsts
pop
cli
and
les
xor
mov
cmp
mull
js
mov
jbe
in
pop
stos
in
repz
sub
sub
mov
pop
lret
xchg
out
mov
jae
push
lret
mov
jmp
mov
test
push
pop
xchg
ret
jne
adcl
xor
imul
mov
scas
lods
fisttps
aaa
mov
rorl
lods
xlat
scas
ret
xchg
sbb
ret
test
dec
push
rol
iret
pushf
dec
jg
in
dec
adc
aaa
das
add
scas
push
pop
popa
adc
or
pop
jno
inc
adc
xor
or
dec
int3
dec
cmp
sub
clc
push
inc
lds
js
in
add
incb
jecxz
mov
sbbb
shll
mov
inc
aaa
stos
or
or
rorl
or
repnz
shlb
jo
insb
and
lret
sbb
add
or
dec
test
xor
mov
clc
mov
mov
add
rcrb
in
call
clc
pop
stos
lods
pop
addr16
ret
fistl
outsl
arpl
int
stc
jge
divb
bound
inc
arpl
idiv
cmpsb
mov
dec
popf
cmp
push
jae
aas
push
xchg
xor
sbb
stos
aad
mov
data16
flds
pop
jns
add
xchg
or
test
add
xchg
inc
mov
cs
rep
sbb
push
rorl
iret
sbbb
out
xlat
and
clc
bound
cmp
rcrl
iret
jl
popf
pop
pop
mov
push
out
sbb
or
iret
cmp
stc
cmp
xor
addl
or
add
fdivs
hlt
testl
loop
shrl
mov
dec
out
sub
in
xlat
aam
out
fimull
rclb
mov
add
or
or
out
fs
dec
jecxz
testb
cmp
popf
sbb
jmp
fmul
dec
or
stos
ljmp
out
xlat
rcl
and
xor
rcr
icebp
xlat
cmp
xor
sub
out
pop
adc
shrb
insb
push
bound
jne
jle
movsl
scas
insb
push
xor
iretw
mov
stos
push
idivb
push
xlat
lods
mov
dec
popa
or
std
imul
mulb
test
sub
cmp
push
xchg
cmp
mov
mov
sbb
inc
aad
mov
mov
cmc
enter
push
xor
fdivrs
pop
mov
xor
jo
pop
lcall
cmp
mov
hlt
fsts
out
outsb
and
repz
jmp
testl
xchg
push
cmpsb
sahf
icebp
push
xlat
test
jmp
sub
sbb
push
adc
cmovo
dec
pop
push
or
jg
push
or
stos
imul
jge
aas
pop
jne
sub
out
imul
dec
jge
lret
mov
push
lret
call
mov
pop
mov
pop
adc
adc
pop
dec
out
lods
out
jp
outsl
faddl
out
lret
stos
pop
or
testl
dec
aaa
mov
xchg
stos
inc
popa
jae
jns
jg
mov
dec
mov
repnz
dec
out
cmpsb
int
lret
mov
rcrl
push
hlt
loop
sub
push
adc
pop
fs
fwait
in
jmp
xlat
loop
enter
pop
jb
inc
daa
loopne
repz
mov
pop
lret
or
mov
lcall
test
hlt
jg
sarb
pop
adc
imul
cwtl
aaa
mov
outsl
ja
push
and
inc
pop
out
xor
ja
in
lock
fiadds
jo
pop
lds
mov
call
js
in
pop
outsb
pop
lret
inc
dec
out
fwait
jne
fadds
pop
in
add
dec
xlat
xor
cmp
dec
rorb
clc
cld
cmp
dec
std
in
and
cmp
mov
xor
cmpsl
mov
js
xor
push
pop
dec
pop
inc
or
lock
or
inc
jne
cltd
or
fwait
sbb
fildl
and
or
add
fdivrs
call
jmp
in
mov
sub
bnd
inc
cmp
cmp
add
shll
in
fnstenv
lock
and
jle
pop
xor
and
cmp
dec
aaa
shrb
cltd
sti
jmp
jae
mov
fcmovne
fldln2
xorl
and
fucomip
cmp
sub
in
jnp
mov
fsubr
stc
loope
out
sbb
mov
dec
lcall
in
daa
mov
fwait
mov
or
mov
mov
fxam
or
pusha
mov
ja
fxch
cmp
pop
aad
mov
out
add
leave
in
bnd
jnp
adc
call
mov
jo
sar
and
rclb
mov
mov
int3
js
xchg
push
inc
mov
sarl
xor
lcall
add
fistps
inc
push
adc
jecxz
imul
pop
sbb
mov
or
mov
mov
pop
mov
sbb
mov
int
jns
sbb
call
xor
iret
push
xor
push
jp
xchg
lahf
fidivrl
repnz
call
out
pushf
orl
push
sahf
add
rolb
lock
sub
xchg
movsl
jp
cmc
fidivrs
inc
fiaddl
into
mov
cltd
pop
fdivr
xor
test
cmpb
test
push
pop
sbb
int
fiaddl
push
or
push
sahf
aas
stos
pusha
andb
scas
rorl
or
sub
test
cmp
mov
sbb
in
fidivrs
sbb
ret
mov
pop
repz
jle
dec
ljmp
or
sbb
mov
into
repnz
pop
xlat
shrb
into
push
dec
call
dec
or
add
and
pop
es
iret
pop
push
xchg
test
mov
pop
and
pop
add
jae
dec
mov
xor
mov
or
repnz
sti
add
divb
iret
fidivl
int3
dec
stos
outsl
stos
mov
test
add
in
das
jne
xlat
mov
pop
imul
mov
xchg
mov
add
pushl
dec
xor
xchg
loope
cmp
add
stc
cli
sti
out
clc
dec
sbb
sahf
add
pop
lret
sub
jo
nop
shr
enter
es
and
mov
out
jp
idivb
sti
and
clc
pop
xlat
shl
jmp
loopne
vpmuludq
sub
mov
pop
mov
cmp
and
out
or
or
test
out
fmull
lahf
add
or
out
sub
push
lock
hlt
cmp
ljmp
cltd
cmpsb
sbb
std
pop
or
pop
jecxz
in
and
cmp
pusha
sub
inc
insl
mov
and
and
aaa
cmp
hlt
mov
mov
mov
jmp
popf
mov
je
daa
adc
aas
mov
aas
fldt
mov
and
leave
fadds
sar
cmp
dec
leave
or
repnz
cmp
mov
test
pop
xchg
incb
lea
pop
jp
push
adc
dec
jns
mov
test
pop
cmc
add
sbb
sub
pop
inc
mov
shrb
aad
jae
mov
js
fildl
test
fiaddl
cmc
je
out
pop
mov
iret
add
jns
xchg
sbb
mov
push
iret
fcoml
stos
jmp
add
imul
ljmp
adc
pusha
sbb
cmc
enter
jecxz,pt
imul
enter
les
jmp
pop
stc
dec
rol
jnp
idivb
fcoml
cmp
jnp
xchg
ds
push
fwait
sbb
or
jecxz
inc
movsl
out
or
sub
push
bound
fimull
gs
cmc
add
sbb
repnz
jmp
adc
fwait
int3
cmpsb
leave
sbb
and
xchg
mov
lcall
das
arpl
xchg
sub
jne
mov
push
or
pop
in
hlt
aam
pop
cmp
add
lcall
test
mov
test
cmp
inc
incl
fsubr
xchg
and
mov
aaa
push
mov
jmp
or
xor
out
push
arpl
int3
mov
dec
lods
mov
cmp
add
jp
sbb
jns
shrb
loop
in
loopne
lcall
dec
push
add
rorl
push
sub
stc
add
push
push
pusha
in
mov
or
push
bound
int
test
sbb
scas
icebp
and
repnz
inc
sub
jle
movsl
mov
dec
xor
fadds
mov
push
outsb
or
repz
push
pop
pop
lock
leave
dec
jae
dec
dec
in
es
sahf
shlb
adc
mov
mov
movups
ja
mov
and
adc
jecxz
outsl
mov
push
add
mov
addr16
ds
jnp
and
lcall
xor
jno
xor
lcall
fwait
lret
jno
push
jnp
xchg
cli
lock
cmp
mov
fsub
pop
fucomi
call
cmp
jo
sbb
sbb
add
cwtl
sub
or
pop
fcmovnb
sarl
mov
shr
fidivrl
cmp
dec
or
dec
repz
push
mov
inc
mov
outsb
scas
pop
mov
not
aad
cwtl
repz
mov
or
add
adc
addr16
mov
icebp
test
cld
or
adc
roll
lock
fstps
cld
js
jl
sbb
jl
dec
jl
cs
fdivrl
decb
imul
rcrl
repz
cmpsb
sbb
push
pop
sub
aam
xchg
fidivs
sahf
inc
ret
imul
adc
lock
xchg
xlat
pop
jae
mov
cmp
sub
and
lods
mov
outsl
add
pop
movsb
sbb
mov
and
imul
stc
loopne
cmp
dec
xlat
add
jo
call
push
call
or
mov
jmp
mov
xchg
fcoml
ret
ja
cmp
mov
imul
in
addr16
jecxz
shl
out
cmp
das
repnz
ss
fcmovbe
ja
pusha
scas
mov
cmp
or
push
xlat
in
pop
mov
pop
aad
lahf
faddl
cmpsl
and
mov
enter
cmp
bound
jmp
push
jle
addr16
rorl
ds
stc
fcoms
pusha
std
arpl
cmp
clc
cmp
call
mov
aad
cmpsb
scas
mov
jb
sbb
ret
inc
add
push
shlb
and
dec
pop
int3
sbb
test
sub
jp
push
ret
stos
xor
or
imul
sahf
aas
dec
adc
jne
dec
push
pop
lret
mov
adc
mov
adc
dec
ficompl
movsl
xchg
imul
adc
xlat
sbb
js
test
loopne
and
roll
out
out
in
xchg
stos
dec
stc
mov
sub
jl
sub
or
pop
pop
loopne
mov
popf
int3
mov
jg
xlat
fisubrl
js
mov
xchg
loopne
fmull
adc
pop
sbb
cld
xchg
movsb
ret
clc
adc
hlt
adc
incb
sub
test
out
lock
popf
loope
fisubrl
sub
scas
aas
stos
push
cmp
xchg
sbb
loop
movsb
mov
ja
jo
or
sub
pop
in
ja
mov
popl
add
pop
fwait
cmp
clc
pushf
mov
out
cmp
aad
sbb
add
das
dec
cltd
cmp
and
jnp
mov
push
ljmp
pushf
jns
lock
js
inc
mov
enter
pop
sub
dec
dec
jae
fidivrl
mov
clc
div
ds
sbb
push
rcrl
int
sub
add
push
lcall
popf
cmp
pop
in
mov
jo
mov
stos
rorb
lock
fcoml
cwtl
pop
dec
lcall
or
sti
hlt
out
dec
fadd
and
add
stc
imul
mov
movsl
and
mov
cmp
sub
popa
repnz
jmp
cld
jg
mov
and
pop
aam
or
call
sbb
adc
or
xor
xor
loope
or
xchg
mov
lods
sbb
mov
lret
push
add
xchg
mov
test
mov
add
fildl
dec
fs
lret
out
loope
xchg
mov
jno
mov
stc
mov
and
xchg
pop
lret
in
imul
pop
lock
stos
shll
ljmp
dec
pop
inc
mov
or
out
cwtl
popf
les
jb
cmp
arpl
push
dec
in
sbb
sahf
shlb
pop
test
inc
js
imul
es
mov
xor
jnp
dec
dec
add
adc
lea
pop
xor
fistpll
imul
ljmp
or
push
sbb
xlat
pop
sub
mov
push
or
mov
xlat
in
mov
lahf
cwtl
add
jmp
pop
shr
test
in
das
mov
outsl
pushl
lahf
dec
lds
pop
sbb
subl
popf
outsb
subb
pop
dec
dec
int3
lea
adc
not
or
xor
cmp
cmp
jbe
xor
ja
sbb
xor
roll
push
test
push
hlt
cmp
shll
pop
xor
mov
in
pop
and
push
mov
sbb
outsl
inc
sub
ljmp
xor
addr16
nop
push
xor
xor
test
xor
push
adc
out
cmp
xlat
cmp
ja
add
sub
mov
mov
rcrl
enter
lcall
js
test
mov
into
sbb
les
hlt
in
xor
stc
jns
mov
jns
shll
sbb
mov
sbb
mov
mov
pop
jmp
je
sub
aam
aam
out
inc
xchg
testb
jmp
jecxz
ds
rclb
push
dec
cmp
push
xor
dec
xchg
hlt
or
dec
xlat
sbb
les
dec
inc
or
sbb
hlt
sbb
push
mov
pop
mov
jg
les
in
mov
dec
mov
jg
or
jmp
clc
mov
or
fsubrl
inc
ret
ret
clc
mov
inc
xchg
rol
jns
lret
mov
add
sbb
loopne
or
testl
mov
aad
mov
cmp
mov
mov
aad
nop
test
pop
mov
iret
pop
loope
popa
in
leave
push
and
ficomps
cmp
in
cmp
jg
rcrl
dec
pusha
push
push
fimull
push
xchg
test
int
mov
scas
and
push
imul
mov
jno
xor
in
ja
jnp
subl
jnp
push
and
hlt
jmp
rorb
test
adc
or
cmp
or
call
ret
inc
stos
bound
sahf
sbb
clc
or
fs
inc
sub
addr16
push
mov
cmp
arpl
cs
mov
dec
sbb
addr16
test
pop
pop
xchg
gs
xchg
jge
cmp
lcall
gs
xchg
filds
aas
xchg
test
enter
mov
ret
sub
shll
repnz
repz
insl
hlt
cmp
mov
xlat
mov
call
in
or
pop
mov
xor
adc
add
add
jae
rcrl
addr16
aad
inc
mov
sbb
inc
dec
xor
mov
or
mov
jp
push
pop
xchg
loope
xlat
in
cmpsl
dec
cmp
cmc
test
scas
pop
inc
sahf
or
dec
jp
inc
sub
dec
or
pop
fimull
pop
mov
insl
aad
and
subl
xor
adc
aas
cmp
xor
jecxz
mov
sbb
or
rolb
and
push
dec
jmp
dec
jmp
add
insl
mov
test
push
jmp
ficompl
xor
repnz
enter
sub
mov
std
sbb
in
fnsave
pop
aas
mov
mov
ret
test
cmc
and
mov
push
add
enter
push
lret
std
iret
inc
test
repz
dec
adc
xor
push
xchg
jle
rorb
push
inc
xchg
jmp
xchg
push
ss
cltd
or
leave
int3
push
inc
and
mov
in
cli
out
mov
stos
or
jnp
shl
jg
sub
jecxz
dec
std
and
dec
mov
jmp
stos
mov
and
mov
add
aam
call
jp
nop
dec
dec
mov
jmp
js
pushf
in
imul
dec
xchg
mov
adc
pop
dec
cmp
xchg
aad
and
adc
and
or
inc
xchg
aaa
rcrb
dec
gs
fstpl
xchg
lds
cmc
cltd
push
jnp
vpaddsw
mov
or
lahf
cmp
dec
fdivp
jnp
add
les
cmp
push
jmp
repz
int3
push
jmp
push
test
hlt
sub
fsubr
adc
pop
loopne
adc
leave
lock
inc
xor
sub
mov
ror
push
push
test
cld
jg
adc
fnstsw
dec
inc
push
aaa
push
insl
jmp
push
movsb
pop
jmp
xor
jnp
lea
aaa
add
inc
mov
cmp
and
and
push
mov
mov
rolb
fistps
sub
roll
in
mov
rorl
icebp
inc
stc
sub
sub
addb
mov
jge
xchg
pop
add
scas
or
xlat
pop
mov
pushf
pop
pop
push
stos
enter
jg
push
pop
pop
add
xchg
sahf
jmp
inc
cmc
int
repz
mov
iret
bound
imul
pushf
in
push
mov
xchg
daa
mov
mov
stos
test
cmc
cmp
frndint
dec
sub
pop
in
sub
pushl
inc
push
cmc
daa
stos
dec
lds
sub
jmp
inc
xor
pop
test
pop
hlt
std
outsb
jne
inc
js
movsb
fcmovnu
add
fsin
cmp
fwait
popf
mov
fsubrs
inc
dec
clc
lcall
clc
stos
push
rcrl
sub
mov
pop
xor
lds
cmp
xor
inc
xchg
mov
mov
je
fistpl
jg
cwtl
cmp
cmp
rol
push
orb
jnp
ljmp
lcall
fwait
stos
jns
push
pop
fadds
jne
lret
clc
or
mov
enter
cmp
lcall
cmp
cmp
repnz
cmp
dec
push
call
adc
jae
aaa
cmp
xlat
sub
or
xchg
push
loopne
mov
xor
decb
loop
mov
int
xor
add
mov
mov
jg
cmc
cs
out
mov
mov
pop
xchg
repnz
das
push
int
fstpt
mov
and
pop
push
xchg
movsb
and
shll
push
fisttps
push
pop
arpl
inc
xlat
mov
scas
inc
in
mov
sub
cmc
rcrb
imul
stc
xor
sub
xchg
in
xor
cmp
idivl
aam
mov
cmp
add
pop
sar
jmp
pop
pusha
mov
test
jnp
mov
jmp
pop
lds
push
movsl
lcall
gs
shlb
adcl
mov
subl
add
mov
ss
pop
ficompl
xor
js
stos
xchg
js
and
mov
pusha
mov
push
das
and
mov
sbb
jmp
cmpsl
shrl
inc
cli
lock
xchg
xor
mov
aam
sub
add
cltd
pushf
jb
fdivl
jg
dec
jne
push
lret
mov
lods
cmp
xchg
arpl
test
add
dec
fadd
arpl
xchg
lret
mov
pop
paddusw
faddl
fsts
mov
jnp
sbb
mov
sub
xorb
pop
repz
in
mov
test
adc
aaa
add
ja
cwtl
pop
mov
pop
jno
js
dec
and
pusha
xlat
xchg
lods
dec
ret
jecxz
dec
popa
push
stc
push
xchg
arpl
mov
cmpsb
adc
ret
pop
pusha
sbb
push
mov
pop
or
inc
imul
hlt
push
fbld
sub
sahf
pop
bound
fiadds
cwtl
adcl
cmc
pop
mov
xor
mov
jmp
add
inc
sbb
jae
inc
sub
jbe
push
pushf
or
cmp
std
ds
xchg
popa
cmp
std
mov
shrl
add
xchg
adc
dec
jb
movsb
sub
jge
or
push
cmp
lds
xor
xchg
jmp
int
cmp
xchg
scas
lods
lock
imul
fisttpl
xchg
stc
xor
and
in
push
out
push
lea
dec
test
mov
es
sbbb
pop
pop
adc
fldcw
pop
in
mov
out
mov
or
in
inc
or
cmp
push
sub
mov
push
mov
mov
leave
and
stos
iret
ret
jbe
jno
mov
fisttpl
lods
mov
stos
in
fidivrs
cltd
clc
xor
lock
xor
add
loop
in
out
lock
lret
inc
clc
cmp
pop
jg
pop
inc
add
aas
scas
mov
ficomps
push
aad
lcall
test
les
jne
lahf
mov
push
dec
push
pop
adc
aas
xor
sbb
dec
mov
js
fnsave
jns
out
adc
fistl
mov
stos
dec
xor
pop
and
or
cmp
shll
jmp
mov
inc
jb
dec
fcoms
nop
call
pop
xchg
or
jmp
mov
xchg
xchg
and
scas
mov
mov
hlt
adc
movsb
outsb
mov
inc
lock
dec
daa
inc
mov
ds
push
mov
sahf
les
pop
push
xchg
push
or
in
mov
push
dec
cmp
pop
mov
xor
cmpb
xlat
lods
cmpsl
lret
xchg
jp
loop
and
mov
mov
inc
or
aas
test
in
xchg
xrelease
xchg
outsl
lods
cmp
orb
jns
dec
punpcklbw
cmp
dec
mov
add
sbb
subb
cmp
aam
mov
cmp
out
push
orb
fdivrs
xchg
rcrb
or
scas
aad
in
dec
rorl
hlt
das
ret
dec
ret
mov
mov
scas
inc
jge
dec
lret
pop
mov
cwtl
enter
rorb
sub
scas
ret
mov
sbb
mov
and
bnd
xor
mov
mov
mov
xor
push
fnstenv
or
pushw
add
imul
cmp
fucomip
xor
cmp
or
sub
sbbl
lcall
test
push
ret
mov
stos
jecxz
xlat
fmull
stos
std
fisttpll
push
repz
test
int3
inc
xor
pusha
and
pop
add
mov
aaa
inc
add
push
scas
mov
lock
rorl
rcll
scas
or
loopne
inc
and
mov
mov
dec
xchg
push
push
cmpsb
jge
outsl
ss
pop
adc
or
fcmovne
xor
mov
inc
jno
enter
fstps
sub
lret
lret
and
das
dec
or
cmp
test
fcoms
jne
xchg
repz
clc
pop
or
mov
xchg
cmpl
rcrb
out
xchg
in
lahf
xchg
jns
movsb
push
sub
xchg
imul
adc
fiadds
cmp
adc
decl
xor
xor
xlat
push
jae
sbb
fistps
repnz
add
cmp
mov
dec
dec
jnp
jnp
mov
mov
add
arpl
jbe
lret
scas
out
xlat
dec
mov
jp
scas
xorps
xlat
ror
cwtl
push
out
or
int3
call
adc
out
lret
sub
or
jmp
jmp
sub
outsl
enter
pop
call
push
mov
test
sub
data16
pop
dec
frstor
sbb
inc
and
inc
mov
xchg
pusha
mov
or
inc
add
or
cmc
fwait
adc
sbb
inc
loopne
das
xchg
test
xor
xor
les
adc
sub
xchg
sbb
pop
xchg
pop
in
loopne
inc
lret
arpl
mov
pop
ja
fwait
and
xor
arpl
cs
jp
out
or
ja
lret
fdivs
outsl
cmp
pushf
sbb
xchg
lock
push
ja
cli
dec
cmc
flds
and
cmp
add
xchg
lret
dec
push
loop
cmpl
pop
mov
sub
scas
test
out
fcoms
les
or
sbb
cmc
pop
add
jae
mov
idivl
lcall
imul
lds
lret
push
nop
lods
arpl
or
pop
sub
inc
pop
lock
pop
add
add
ret
pop
fptan
mov
stc
pop
jae
add
mov
stos
pop
xchg
push
sub
sub
jae
popf
jb
add
mov
adcl
cwtl
mov
repnz
jns
push
lods
and
movsl
cmp
out
lret
mov
imull
nop
fld
std
movsl
pop
ds
andb
aad
sub
repz
cmp
xor
xchg
cmp
jns
mov
std
add
dec
mov
std
hlt
in
add
bound
aad
fcmovnbe
push
mov
repz
lock
pop
arpl
scas
stc
fisttpll
rcl
fisttpll
dec
cmpl
idivb
push
add
ficompl
pop
andl
sbb
lret
inc
or
stos
aad
add
dec
enter
imul
repz
repnz
sahf
aaa
divb
sbb
mov
jmp
dec
cmp
cmp
out
and
pop
ja
jne
jnp
ljmp
in
cli
jo
add
sbb
cld
jle
test
cs
notl
or
cmp
aad
jmp
add
testl
pop
lahf
mov
dec
in
jg
imul
jbe
addr16
dec
jae
dec
out
in
sbb
push
mov
fiaddl
mov
dec
add
xchg
inc
pop
cmpb
pop
xchg
dec
push
fldenv
inc
pop
and
push
aad
inc
test
jns
mov
mov
movsl
mov
pop
cwtl
in
int
mov
mov
inc
lahf
jg
test
cwtl
cmc
test
or
xchg
mov
pop
testb
lcall
dec
lcall
inc
add
inc
dec
jecxz
pop
sarb
xchg
sahf
clc
imul
test
mov
sbb
mov
and
dec
jnp
ja
lret
sbb
cmp
jmp
popf
idivb
xor
lahf
ljmp
push
out
add
testl
xor
stc
pop
mov
or
jmp
lret
xor
mov
popa
ror
xor
adc
insb
int3
out
mov
dec
add
mov
cmp
cmpsb
in
aad
jmp
add
jns
sbb
loopne
cmpsb
stos
and
add
sbb
insl
jnp
pop
sbb
jnp
mov
pop
push
lcall
call
cmp
in
xor
sbb
call
cltd
xchg
sarl
xor
mov
dec
add
mov
lods
int3
lcall
sub
and
lods
jne
mov
xor
sarb
jae
cmp
dec
loop
les
sbb
push
add
call
add
sarl
ret
xchg
cmp
mov
dec
dec
fwait
rcrb
fcomps
cmc
mov
and
lods
xor
cmpl
idivb
stc
fwait
call
fldcw
xchg
dec
test
popf
fidivrl
sub
sub
xor
jno
push
fidivs
roll
stos
jbe
cmp
nop
fdivs
imul
add
test
cmp
jo
add
dec
out
sub
arpl
jle
pop
test
cmp
inc
cmp
adc
push
mov
mov
adc
test
out
dec
imul
xchg
mov
mov
mov
jns
mov
cld
psubusw
ficompl
jmp
xor
pop
mov
das
mov
mov
jecxz
das
ss
lock
sbb
or
push
aaa
dec
pop
stc
pop
cmpsb
cs
adc
add
and
dec
cmp
xor
jmp
lods
hlt
aad
sahf
mov
mov
jns
rcrl
push
mov
jg
lret
adc
jg
push
dec
loopne
ja
hlt
and
scas
clc
mov
dec
push
shrl
stos
pusha
mov
dec
mov
or
mov
mov
jnp
dec
mov
icebp
sbb
add
cltd
imul
jmp
divl
mov
pop
mov
sub
fwait
mov
hlt
mov
mov
imul
jge
add
dec
jb
pop
jnp
push
nop
test
and
xor
mov
mov
push
or
add
dec
dec
pop
mov
dec
jnp
xchg
add
cs
lods
pop
mov
jno
mov
data16
decb
sbb
in
repz
mov
les
and
pusha
sbbb
xchg
jge
andl
jecxz
pop
loopne
outsb
xlat
cmp
mov
insl
imul
in
ficomps
add
je
lret
clc
mov
pop
sub
andl
outsl
jmp
clc
js
inc
outsb
xchg
cmpsl
xor
inc
push
add
repz
dec
je
mov
lds
jge
insw
or
insb
mov
fistpl
shll
cmpsl
ljmp
lahf
aas
pop
icebp
gs
mov
out
sub
and
stos
cmp
jge
xchg
jg
shrl
mov
adc
sbb
cmp
mov
jb
adc
jmp
icebp
push
or
mov
dec
cmp
loop
inc
clc
popa
push
lcall
inc
xchg
je
dec
dec
jmp
loope
jno
sub
test
mov
ds
add
adc
daa
add
flds
cld
jbe
gs
or
pop
and
daa
addr16
jle
test
pop
test
mov
xor
cmp
sbb
aad
pop
dec
xchg
decl
and
xor
fists
cmpsb
xorl
cmc
add
mull
in
test
sub
inc
mov
mov
jecxz
fcomps
ror
fistpl
pop
dec
push
test
js
hlt
lea
xchg
enter
mov
aam
push
cmp
mov
xchg
mov
fwait
call
test
gs
push
stos
shll
push
adc
dec
das
out
jno
imull
bound
int
cmp
outsb
ret
jb
sbb
dec
inc
add
fcompl
js
mov
movsb
cmpsl
push
mov
sub
mov
adc
enter
sub
xchg
stc
int3
sub
adc
jmp
lods
dec
addr16
aad
ja
jo
rcll
rorb
movsb
sub
xchg
add
add
scas
dec
lods
cltd
in
sbb
insl
mov
stc
and
inc
mov
pop
popf
adc
pop
loopne
push
mov
add
lret
fildll
test
call
mov
xor
sub
cmp
pop
or
and
mov
aad
call
xchg
pop
sub
sar
add
and
leave
inc
inc
xchg
sbb
mov
movl
dec
fcoms
dec
in
and
inc
in
je
in
test
add
mov
mov
cmp
mov
loop
pusha
outsb
cmp
mov
clc
sbb
add
in
ljmp
jnp
add
cmp
inc
sbb
lock
in
jnp
push
in
add
push
test
mov
push
imul
mov
les
mov
loopne
stc
xlat
push
jle
adc
stos
cli
jmp
das
roll
cmpsl
xchg
push
clc
ds
fadds
repnz
mov
fucom
or
pop
mov
ds
jmp
mov
inc
sarb
inc
addr16
aaa
int3
les
pusha
sub
jnp
and
out
sbb
mov
push
imulb
adc
pop
fsubrs
xchg
pop
movsb
dec
cltd
test
test
test
imul
fucomi
ljmp
bound
mov
les
js
dec
rorb
and
into
daa
mov
jnp
repnz
cmp
jbe
jb
xchg
inc
push
push
xor
xor
dec
sarl
xchg
int3
dec
mov
and
outsl
filds
sarl
in
mov
mov
test
je
sub
xchg
xor
rcl
pop
fcomps
or
xlat
push
jns
mov
movsl
pop
loope
pusha
adc
xlat
cmp
hlt
cmp
pop
repz
cmp
or
ljmp
jg
jp
es
mov
inc
mov
fldt
xlat
int
or
cmpsb
sbb
add
aad
or
pop
mov
mov
inc
sbb
mov
fsubl
jp
cld
push
push
lock
notb
pop
cmp
outsl
sub
jae
mov
out
jnp
fistl
mov
test
rclb
loop
pop
xchg
inc
sbb
rcrl
stos
ljmp
pop
lods
adc
lret
mov
cmp
pop
mov
movl
enter
into
inc
orl
fwait
cmp
pop
mov
inc
jbe
ss
movsb
add
adc
push
xor
pop
dec
or
cmp
cld
push
push
lods
cld
ds
je
cmp
movsb
mov
out
adc
dec
leave
adc
push
fisttpll
sub
test
mov
adc
adc
adc
pusha
xor
adc
and
clc
xlat
xor
icebp
scas
pop
popa
dec
cs
icebp
pop
out
push
cmp
mov
adc
imul
negl
lcall
add
jecxz
mov
sub
cmpsb
dec
rorl
lret
scas
js
les
rcr
cmp
jbe
div
repz
xor
xchg
hlt
inc
mov
lret
repz
dec
stos
xlat
push
mov
cmp
icebp
pop
inc
xchg
jbe
jp
shlb
pop
pop
cs
xor
flds
adc
jne
push
cmp
mov
xor
add
ficompl
enter
xor
out
xchg
ror
arpl
push
sub
nop
jmp
mov
jns
imul
xchg
dec
idivl
movsb
xor
mov
into
int3
add
mov
bound
int
mull
testl
jecxz
orb
fcmovne
xchg
jno
add
lds
stos
jno
xor
xor
loopne
jecxz
sbb
and
cmp
imul
xorb
cwtl
aam
mov
or
shl
daa
jae
xlat
add
adc
adc
dec
adc
fpatan
add
aad
inc
jg
adc
mov
std
jge
push
xlat
stos
push
lods
test
fcomps
popa
sbb
cmpsl
aam
frstor
push
stos
xor
inc
shll
or
xchg
pop
jmp
pop
mov
xor
pop
mov
sahf
inc
push
out
jae
pushf
or
popa
aad
cmpsb
enter
pop
jbe
out
xchg
cmpsb
sub
ja
xor
imul
jo
mov
lret
loop
mov
pop
rolb
repz
notb
cli
dec
les
andb
scas
pop
jecxz
fcmovnbe
fs
cmp
inc
adc
pop
dec
in
icebp
xor
cmc
cmp
mov
test
sbb
or
dec
in
or
dec
push
mov
push
xchg
in
pop
mov
enter
mulb
cmp
push
pop
cmp
pop
int3
push
sub
in
sbb
jbe
cmc
adc
xchg
test
daa
pop
and
pop
mov
out
fcomi
xchg
aad
loope
add
sub
xor
in
xlat
enter
cmc
movsb
stos
cs
push
push
jae
fimull
mov
sub
xchg
jnp
rcrl
xor
cmp
or
fisttpl
xor
mov
insl
sub
mov
aad
dec
mov
lcall
aad
jnp
mov
adc
jb
popf
pop
stc
push
in
test
mov
xor
out
xor
sbb
pop
xor
int3
mov
es
jmp
mov
or
dec
sub
mov
mov
or
or
or
dec
pop
fstps
inc
jns
es
inc
jo
in
mov
clc
or
add
adcl
aam
mov
iret
addl
push
arpl
mov
popf
mov
hlt
aad
repz
cmp
cmpl
pop
inc
xor
shrb
xor
cmp
push
inc
mov
dec
out
cmp
push
roll
hlt
sbb
movsb
dec
inc
in
into
lcall
mov
mov
add
sbb
add
xchg
cmp
and
outsb
pop
inc
adc
ret
xor
mov
push
mov
jae,pn
adc
jnp
xor
jae
or
stc
or
pushf
jae
addl
std
popf
orl
pop
ds
rcll
out
into
inc
fstpt
ljmp
pop
cli
les
xor
xor
aas
fsubrs
adc
aaa
scas
adc
jmp
pop
push
dec
inc
ds
adc
cmp
test
out
lcall
cmpsb
ss
mov
mov
dec
outsl
sbb
test
mov
push
stos
xlat
rcrb
imull
push
pop
iret
jl
push
xchg
add
incb
roll
mov
mov
mov
mov
push
adc
or
dec
or
xlat
dec
fstps
cmpsb
or
scas
push
pop
mov
pop
mov
cs
pop
push
cmp
hlt
cltd
dec
testl
hlt
xorb
lcall
rol
lds
xchg
adcb
xchg
jae
and
dec
or
mov
xchg
in
lcall
add
ficoms
scas
test
jmp
lret
jae
ret
lds
adc
pop
aad
mov
dec
repz
jo
bound
add
in
sahf
lock
divl
xlat
mov
icebp
loopne
shlb
iret
loope
xor
dec
ja
cmpsl
hlt
pop
dec
xor
shrl
sbb
fld
jae
sub
clc
insb
add
testl
or
ret
jns
jmp
fldenv
out
mov
pop
test
dec
into
sub
imul
add
dec
jp
jp
call
dec
cmp
push
jmp
idivl
inc
test
cwtl
std
test
in
js
aad
xor
lret
je
jo
in
sub
stos
cmp
dec
aas
dec
jl
add
jg
ret
enter
dec
mov
sahf
orb
adc
lock
ret
int
mov
es
je
and
cmpsb
push
jmp
enter
test
push
in
add
sbb
xchg
sarl
add
shrl
jns
dec
lahf
shll
xchg
or
mov
inc
lret
daa
jne
loop
fisttps
negb
mov
nop
icebp
insl
outsl
movb
xlat
in
insl
adc
call
mov
xor
aam
mov
add
aam
or
or
icebp
push
mov
jmp
aas
enter
jne
jae
test
dec
and
in
cli
push
jmp
lods
iret
hlt
cmp
mov
sarb
mov
popa
mov
cmc
mov
aam
inc
aad
lea
inc
es
mov
call
cmp
insl
and
dec
icebp
rcrl
pop
mov
fdivrl
and
mov
imul
jle
mov
sahf
cmp
and
lcall
test
ror
jo
cmp
repz
xor
jno
mov
xor
adc
or
dec
daa
dec
pusha
xor
pop
pop
ljmp
push
fcomp
push
divl
mov
jmp
jns
or
push
mov
in
insb
mov
lcall
mov
push
out
or
mov
sarb
icebp
repnz
sbb
jo
sub
pop
xor
insb
sbb
jmp
cmpsb
adc
fldenv
divb
leave
cwtl
mov
add
insb
dec
inc
ljmp
aad
jle
loopne
sbb
clc
mov
cli
lret
xor
loopne
stos
push
shl
xor
divb
cltd
pop
insb
push
or
mov
pop
popa
xchg
inc
shl
out
or
out
rolb
push
cld
jne
fidivl
cmp
stc
in
mov
dec
fcmovbe
mov
aad
inc
sbb
ss
dec
arpl
or
xor
sub
jl
fdivp
jp
in
testb
rcl
sbb
push
stc
repnz
enter
inc
fucom
test
cmp
fsubs
filds
out
into
inc
fimull
push
leave
out
xor
push
dec
inc
xchg
pop
aam
scas
mov
imul
les
mov
outsb
out
cmp
popf
cmp
jle
repnz
dec
adc
cltd
rcrl
sti
fmull
daa
orb
jae
jge
mov
mov
cltd
jno
fs
pusha
out
or
es
push
pop
mov
mov
imul
fmulp
xchg
adc
lods
test
sub
and
imul
shrb
xor
icebp
in
pop
shrb
push
and
cmp
loope
jecxz
pop
sbbl
or
iret
or
pop
jbe
repz
add
cwtl
cmp
imul
inc
cmp
movsb
fists
jns
ja
dec
jecxz
add
lret
add
xor
repnz
fst
in
jb
sub
mov
in
jne
cmpsl
add
sbb
std
mov
cmp
cmp
testb
ficoms
adc
lock
sbb
jmp
mov
popa
fnstsw
daa
stc
in
add
xor
xchg
xor
or
mov
in
pop
dec
pop
mov
sbb
xchg
roll
push
inc
sbb
xchg
push
cs
shl
push
ds
stos
shlb
call
push
mov
adc
inc
addr16
aad
in
sti
popf
popf
js
iret
aaa
aad
cmp
leave
or
push
repz
adc
adc
fwait
or
xchg
jecxz
add
mov
push
lods
outsl
adc
jno
add
mov
cmp
test
cmp
dec
inc
pop
repnz
mov
aad
and
shrb
and
cmp
scas
add
push
sbb
cmc
pop
push
aas
mov
inc
pop
and
dec
std
pop
mov
aad
pushf
cs
scas
adc
push
sub
stc
cmp
and
dec
pop
mov
jmp
sarl
jecxz
add
cmp
stos
mov
push
sbb
add
jg
mov
lock
lods
int3
decb
add
ja
cmp
inc
sbb
dec
outsb
mov
std
mov
xchg
ja
sar
pop
pop
fsts
xchg
inc
hlt
fisubrs
add
push
push
test
arpl
and
imulb
movsb
xor
lcall
adc
clc
mov
mov
dec
rcrl
cld
jae
sub
sbb
rol
enter
dec
das
in
stos
in
add
fcmove
mov
ljmp
lret
idiv
pop
cmpsb
fldenv
xor
roll
lret
and
xchg
mov
sub
push
cmp
out
xchg
aam
jb
pushf
xor
inc
mov
jne
sub
test
int3
pushf
and
orb
mov
add
jnp
sbb
xor
cmp
sbb
push
popa
cmp
or
cwtl
in
xor
mov
or
imul
out
jne
jb
stos
inc
inc
jns
cmp
pop
movsl
fldt
scas
cmpsl
js
push
ret
jnp
rcrl
cmp
aas
ljmp
inc
test
into
roll
mov
pop
cmc
cmpsb
cmpsl
mov
aas
fdivs
adc
imul
call
in
mov
fcompl
mov
popa
fstpt
mov
jg
xor
repz
repnz
mov
ljmp
test
outsb
xchg
mov
mov
out
mov
lods
out
sahf
in
cmp
pop
inc
fsts
inc
cmc
push
add
push
repnz
or
mov
add
pop
adc
clc
stos
insl
xor
insb
or
enter
push
or
mov
xor
or
aam
mov
movsl
and
push
dec
call
stc
aad
ret
incb
inc
out
adcl
enter
stc
xchg
stos
enter
mov
fldcw
dec
cmp
adc
cmp
adc
in
fistps
fisttpl
cmp
add
loope
outsb
mov
xchg
sbb
xchg
mov
cmp
mov
xlat
pop
cwtl
test
out
or
aas
cmpsb
in
add
jmp
add
sbb
adc
jae
mov
les
adc
sub
push
adc
rol
jg
inc
scas
js
clc
cmp
add
jecxz
push
push
adc
or
mov
out
and
xchg
shlb
les
and
mov
arpl
mov
adc
jg
or
in
sub
faddl
cmc
repz
rol
mov
add
clc
ror
pop
mov
push
out
aad
xor
xchg
lret
sbb
pushf
cmp
sbb
add
sarl
and
int
and
aaa
sbb
cmp
pop
push
aad
mov
mov
inc
clc
adc
cmp
or
inc
mov
shl
lods
outsl
add
ret
push
data16
addl
out
repz
add
mov
daa
shl
jns
xor
jb
std
adcb
je
int
sbb
outsl
scas
dec
inc
cltd
ret
ljmp
add
movsb
sub
in
in
inc
stos
lret
cmc
imul
aam
popfw
jle
enter
test
cmp
jmp
repnz
ret
xchg
cs
out
les
push
sbb
sub
fsubr
push
cmpsb
mov
xorl
push
adc
xor
in
addr16
es
lahf
mov
jne
jp
and
aad
sbb
cltd
pop
jnp
mov
cltd
pop
ljmp
and
mov
test
shlb
cmpb
xor
stos
add
lret
xchg
clc
push
dec
pop
xor
stc
push
in
test
fmul
std
sub
jmp
jp
push
int
inc
xor
xor
mov
ret
pop
mov
push
add
xchg
xor
aaa
lea
dec
aam
mov
sub
testl
std
push
inc
mov
mov
fmuls
cmpsl
mov
adc
push
sbb
lahf
or
fistpl
sbb
call
insb
pop
sub
jnp
mov
stc
mul
jmp
xor
and
or
dec
bound
push
jmp
mov
enter
sti
fcmovnb
fdivs
stos
cmp
and
incb
or
mov
dec
incl
push
lock
xor
mov
sub
xlat
out
dec
jnp
sbb
fwait
jae
lret
sbb
pop
arpl
fistpl
cld
sub
adc
push
mov
adc
xor
or
jnp
and
mov
dec
mov
fidivrl
std
imul
jecxz
dec
mulb
jbe
sbb
sbb
mov
aaa
es
pop
fimull
sti
hlt
stc
mov
les
popf
jecxz
jp
push
xor
shll
sbb
mov
pop
xor
sub
dec
repnz
aaa
push
dec
push
stos
hlt
loopne
add
add
sbb
aam
push
mov
cmc
jbe
loope
mov
cli
mov
sbb
cmp
inc
dec
inc
pop
sub
pop
jo
sbb
movsl
fstps
adc
jae
xor
mov
stos
lods
out
leave
inc
add
outsb
loopne
in
xor
fcmovnu
cmp
insb
add
aad
clc
dec
pop
imul
adc
btr
ret
shlb
adc
das
dec
dec
aad
out
adc
sub
iret
jnp
mull
add
stc
imul
fisttpl
or
fiaddl
sbb
dec
sti
or
cmp
int3
xor
je
mov
dec
mov
xlat
jno
fisubs
addr16
ret
roll
push
daa
shl
jne
mov
or
ja
add
mov
add
add
or
xchg
aad
sti
lcall
rorl
shl
add
imulb
enter
aaa
mov
jbe
roll
lds
cmpsb
push
xor
mov
stc
xchg
cmc
lock
pop
js
sub
add
fs
mov
mov
inc
dec
xchg
insb
sub
pop
fwait
mov
xor
cmp
inc
mov
nop
dec
add
or
mov
iret
pop
cmp
or
cmp
mov
or
inc
icebp
scas
push
enter
or
pop
inc
and
mov
aam
stc
rolb
or
fwait
cmc
aad
cmp
xchg
idivb
repnz
add
movsb
pushl
sub
pop
add
fcomps
jnp
cmc
xchg
pop
pop
adc
pop
jns
divb
filds
lds
and
cli
xchg
add
les
mov
and
xchg
cmp
push
xchg
in
aaa
mov
and
xchg
ljmp
jl
das
sahf
push
shlb
add
pop
faddp
insl
cmpsl
nop
das
inc
jo
pop
insb
aaa
pop
add
sub
notl
pop
fdivrl
dec
mov
in
adc
mov
inc
out
jo
sbb
jl
xor
sub
hlt
xlat
jge
cmp
or
or
push
leave
movsl
push
cmpsl
dec
sub
cmp
andl
in
int
fucomi
dec
and
fmul
subb
mov
add
lahf
inc
lock
cmp
xor
xlat
out
mov
and
insb
pop
cli
fsubs
hlt
inc
ja
add
pop
cmpsl
fimull
rorl
or
je
lods
stos
and
dec
fistl
sbb
sub
xor
xor
lret
push
insl
test
adc
rcr
jp
fisttps
mov
sub
in
dec
add
sub
lcall
pop
scas
inc
xchg
lret
jbe
or
pop
repz
lods
cmp
add
mov
out
sub
dec
out
xchg
xor
xor
stc
cmc
cmp
dec
mov
popf
repz
int
test
lods
or
pop
loopne
cwtl
inc
pcmpgtw
cmpsl
pop
pop
and
push
rol
inc
sbb
data16
push
das
lret
sub
lcall
lcall
or
inc
xchg
nop
or
xorb
test
scas
sti
cmp
and
xchg
lret
movsb
mov
dec
mov
imul
dec
xor
mov
int
ret
and
xchg
cmp
aaa
lahf
dec
fstps
pushf
call
cmp
fildl
dec
sub
jnp
call
repnz
stc
sahf
inc
ficompl
fwait
aam
jecxz
test
inc
outsb
sahf
mov
pop
push
inc
divl
pop
jnp
ja
cmpsb
int3
or
cmp
or
ljmp
pop
mov
clc
idiv
xlat
pop
hlt
inc
jmp
ja
lret
xchg
dec
push
aad
fistl
jns
inc
jns
xchg
cld
adc
mov
xor
jg
add
add
fldt
ret
fwait
adc
xchg
cltd
dec
enter
adc
mov
mov
repz
fcos
cld
dec
lret
fwait
dec
and
inc
sbb
shlb
aad
add
clc
sbb
jmp
fisubrs
shl
mov
aas
fucomi
xchg
hlt
inc
push
mov
mov
test
loop
add
sar
shlb
roll
xor
jmp
bnd
fidivrl
jbe
repz
and
clc
rol
jecxz
dec
xchg
enter
sbb
sahf
mov
out
xchg
out
mov
inc
mov
movsl
push
xor
push
lret
outsb
fsubrs
sub
or
adc
adc
and
inc
repnz
mov
mov
jecxz
pop
fucomi
imul
arpl
adc
repz
dec
aaa
pushl
jge
hlt
dec
testb
sbb
and
xchg
insl
mov
lcall
push
cmp
pop
ror
mov
cmp
cmp
dec
daa
into
idiv
mov
add
cmp
js
adc
dec
stos
lahf
cs
mov
dec
sbb
sbb
sbb
rorb
mov
mov
jp
cmp
pop
fstpt
jp
add
pop
cmp
pop
addr16
fadds
cmc
mov
out
cmp
mov
andb
xchg
or
dec
push
mov
movsl
jbe
fsubrs
pop
in
add
cmpsb
push
shr
or
enter
jnp
dec
pop
pushf
mov
mov
pop
test
cmpsl
rcrl
bnd
mov
jae
stos
repz
or
mov
enter
mov
hlt
sbb
xlat
out
ret
subl
or
hlt
pop
mov
adc
xor
sar
xchg
pop
sbb
jnp
mov
cs
jecxz
int3
lret
into
xor
pop
mov
mov
xchg
sub
in
test
jmp
xchg
sub
inc
in
inc
orb
adc
inc
insl
enter
das
jne
dec
scas
and
lret
sbb
int3
and
dec
ss
mov
movsl
mov
or
mov
mov
jmp
ret
mov
add
xor
xchg
test
xor
pushf
lods
inc
ret
insl
stc
jge
movsl
lods
scas
jnp
inc
mov
push
pop
test
inc
inc
aam
sbb
fcoml
sub
push
xor
jge
cmp
or
adc
push
fiaddl
pop
inc
rclb
ss
fdiv
jge
filds
mov
in
fwait
adc
dec
bound
jge
imul
cmp
inc
cmp
loop
iret
or
mov
addr16
in
add
mov
cmpsl
lock
inc
push
dec
mov
int
stc
hlt
fadds
andb
inc
clc
dec
or
insb
cmp
hlt
mov
in
jno
fisttpl
add
repz
adc
pop
mov
push
lock
cmp
ljmp
fwait
sub
fildl
dec
lret
cmp
dec
cmp
push
sub
dec
mov
mov
mov
pop
loope
mov
not
push
xor
cmpl
cli
incb
test
push
mov
adc
cmpsb
jne
sbbl
xor
pop
stos
lea
enter
jge
notl
jmp
js
mov
jb
xor
xlat
pop
jb
xor
inc
mov
inc
sub
jnp
push
or
push
subl
mov
adc
repz
cmc
stc
hlt
add
and
int3
sub
fistpl
adc
sbb
sbb
fnstenv
test
jb
notl
pop
fnstcw
aad
insl
fwait
or
jmp
lcall
xor
jbe
shll
cmp
sbb
cmp
int
push
imul
lock
in
mov
in
jmp
jb
xor
dec
adc
inc
in
mov
insl
inc
sbb
push
cmp
mov
mov
xchg
jge
pop
decb
xchg
pop
mov
dec
jne
cwtl
test
mov
stos
nop
insb
dec
inc
out
cli
xchg
mov
xor
ja
daa
xor
ja
negl
cmp
sub
scas
pop
push
push
push
xor
sbb
xorl
stos
ret
pop
push
and
repnz
inc
xchg
fcoml
mov
es
mov
sbb
lea
pop
int
jmp
stos
movsl
jne
test
mov
cli
int
inc
ljmp
or
stc
sub
and
cmp
jge
lds
iret
pop
stos
pop
testl
jp
or
mov
testl
sub
pop
dec
and
mov
sub
push
test
cmp
std
mov
icebp
mov
and
cmc
mov
cmp
push
push
inc
mov
cmp
xchg
xchg
mov
or
fidivl
jp
or
jge
ja
mov
fdiv
and
inc
push
mov
fnstcw
mov
mov
fcmovu
mov
inc
fmul
mov
mov
adc
fisttpl
or
inc
sub
push
cmc
mov
imul
popa
push
push
mov
incb
into
pop
jle
movsl
popa
pop
and
cltd
xchg
inc
stos
push
mov
mov
test
test
xchg
mov
test
sub
test
in
pop
neg
add
scas
in
out
xchg
cmpsl
mov
loopne
fimull
nop
mov
rcrl
and
icebp
lret
mov
ret
lcall
fistl
aad
push
scas
cli
mov
movsl
aam
lret
cmp
add
rclb
or
enter
aad
xchg
lret
loopne
push
cwtl
ficompl
lret
sub
stos
aad
xor
test
xchg
popf
mov
sti
sar
pop
mov
and
int
popa
les
inc
pop
jnp
out
in
addr16
mov
inc
clc
xor
mov
sbb
xchg
pop
push
daa
xor
inc
cmpsl
dec
loopne
or
xor
xchg
fdiv
lcall
push
jno,pn
cmpsl
fstps
jg
adc
cmpsl
xlat
popf
cmc
xor
cmp
adcb
or
dec
and
add
repz
adc
sbb
loopne
mov
or
mov
add
ja
xor
repnz
fidivl
insl
xchg
nop
or
cmc
mov
sbb
pop
cltd
pop
or
ds
repz
out
movl
jae
in
add
mov
fcomi
sbb
not
and
in
dec
inc
mov
dec
cmp
push
adc
mov
hlt
lret
daa
mov
bound
dec
out
xchg
xor
or
fsubrp
imul
sahf
push
rcr
iret
outsl
ljmp
xor
mov
inc
pop
idiv
stc
flds
jmp
fldl2t
cmp
dec
jle
cltd
clc
dec
aad
leave
jecxz
xor
fdiv
mov
stc
rcr
or
ljmp
or
rcll
hlt
shrl
iret
xchg
cmp
add
pop
push
icebp
xor
jge
jb
lcall
aas
and
cli
test
push
ret
or
jae
pop
hlt
dec
jne
pop
xchg
inc
xchg
aam
xlat
lahf
jnp,pn
cmp
mov
mov
cmp
jne
stc
push
jb
inc
stos
rorb
movsl
sub
push
or
pop
pop
sbb
mov
lahf
lahf
sub
jmp
jnp
add
sub
mov
add
clc
sub
push
xor
pop
call
xlat
fildl
or
icebp
fnstcw
cmp
outsl
in
fdivs
stos
inc
shlb
push
test
jmp
mov
inc
mov
stc
enter
sbb
clc
dec
dec
or
xor
sbb
jae
sub
dec
cmp
pop
es
xor
loopne
cmp
rcrb
dec
add
imul
jno
cs
dec
jae
inc
mov
sbb
inc
inc
sbb
push
in
pop
gs
andb
sbb
cmc
movsb
das
mov
pop
cmp
mov
mov
data16
fists
in
subl
popa
add
ret
mov
dec
fldenv
div
je
mov
push
pop
leave
sti
sbb
mov
addr16
rorb
arpl
add
push
mov
add
inc
xlat
adc
sub
dec
fisubrl
enter
ja
push
leave
adc
filds
dec
cmp
sbb
nop
aad
and
push
adc
pop
repz
jne
inc
jnp
out
add
mov
cli
out
xor
sbb
or
btc
push
icebp
sub
ffreep
or
aas
in
lds
call
push
mov
mov
loopne
rcrb
into
mov
test
mov
adc
shr
lds
std
push
cld
stc
in
add
neg
faddl
mov
or
sbb
cmc
and
pop
cmp
test
lds
shll
cmp
stos
lahf
push
adc
aaa
aaa
xlat
jae
dec
mov
paddw
dec
out
sbb
mov
sbb
cmp
nop
mov
popa
and
out
dec
mov
add
pop
jge
roll
lds
jns
outsl
notb
sbb
mov
mov
rcrb
idivb
jo
mov
mov
fwait
inc
notl
lahf
lcall
flds
test
mov
add
inc
loope
push
cmp
lock
lock
pop
lods
jg
or
fs
push
push
imul
adc
insl
or
pop
xor
cwtl
lock
xchg
pop
inc
adc
cmp
or
out
jo
xor
shlb
icebp
aad
inc
std
cmp
cmp
and
stc
cltd
inc
xchg
imul
push
hlt
shlb
in
lcall
popf
inc
fmuls
leave
fstpt
sbb
push
jno
or
dec
sbb
fcompl
or
mov
rcrb
or
out
jnp
jle
add
push
push
inc
xchg
push
movsl
das
sbb
insb
fwait
js
push
dec
xchg
pop
mov
jp
filds
loope
movsl
xor
xchg
xchg
or
iret
cmp
popa
jns
out
repz
mov
out
pop
popa
adc
xchg
ja
mov
dec
data16
test
add
or
in
mov
sbb
fistl
inc
pop
andl
mov
into
movl
aam
fistps
pop
mov
push
xor
aas
movsb
xor
push
fdivr
adc
adc
xor
dec
pop
cmp
imul
les
jp
popa
cmpl
jbe
mov
dec
push
push
mov
fwait
ds
mov
xlat
cmpb
lods
pop
mov
cmp
stc
cmc
test
and
xor
outsl
scas
mov
stc
fidivs
mov
inc
adc
out
push
mov
ss
or
jmp
jecxz
sar
scas
std
mov
call
or
sub
mov
xlat
fidivl
push
mov
xchg
icebp
jae
mov
xor
add
cmc
or
cmp
push
subb
xchg
cmp
flds
cmpl
xlat
cmp
jns
xlat
push
addr16
sub
aad
stc
push
push
push
or
mov
call
xchg
in
loope
xlat
fsts
subl
aam
out
bound
loopne
xor
pop
shr
xlat
jmp
or
mov
stc
dec
add
sbb
add
push
and
out
mov
mov
jnp
fdivrs
and
jecxz
add
cmp
jno
jbe
mov
adc
mov
pop
ja
sub
sbbl
loop
cmp
fsubl
fisubs
sbb
into
push
fcomps
ret
cmpsl
sub
ljmp
fisttps
inc
sub
inc
pushf
cmp
cmc
fnstenv
push
sub
out
lret
cmpsl
js
or
in
ret
adcl
scas
aad
xchg
push
push
xor
shrb
sub
push
enter
clc
es
in
and
mov
repnz
rcr
js
cs
mov
jns
fisttps
dec
cmpb
mov
xchg
add
fwait
in
sub
pop
pop
cmp
flds
clc
sub
stc
jmp
push
cmp
mov
xchg
jmp
movsb
inc
ret
or
cmp
mov
pop
mov
adc
push
scas
or
addr16
inc
mov
push
cld
fmuls
add
xor
hlt
call
jmp
jns
sbb
xor
and
push
ret
fcompl
fdiv
jb
mov
jb
cmp
fwait
lcall
int3
jnp
call
popa
rcrb
rolb
and
mov
pop
js
xor
mov
jb
cmp
pusha
xchg
mov
cmp
lcallw
xchg
mov
add
out
push
loop
add
jmp
arpl
notb
addr16
jmp
inc
ss
cmp
mov
and
cmpsl
dec
xor
ret
clc
mov
xchg
cmpsl
cli
in
mov
inc
adc
add
dec
rcll
add
lock
jae
cltd
sbb
adcl
in
addr16
xor
cmp
sub
or
push
fidivrl
or
notrack
lret
mov
jge
mov
test
cmp
pusha
sar
xor
jg
sub
rorb
push
pop
xchg
cmc
mov
imul
push
jns
xor
or
aam
xchg
cmp
stos
cmp
cmp
cmp
cmp
jecxz
cmp
cmc
stos
pop
jl
cltd
fwait
out
dec
sbb
scas
mov
sbb
xchg
stc
cmp
xchg
loop
out
out
push
stc
pop
or
jle
das
dec
mov
cmp
data16
dec
dec
arpl
sub
es
or
mov
jo
popf
add
jns
xlat
out
fadd
fstps
loopne
loopne
popa
add
out
sub
cmp
xchg
cmp
call
xlat
adc
in
leave
push
repz
adc
or
lcall
test
pop
adc
jnp
int
fbld
mov
xchg
neg
sbb
pop
mov
mov
dec
fadd
pop
fwait
pop
add
insl
push
sub
pop
push
filds
xchg
subb
xor
inc
pop
cltd
push
mov
lcall
negl
fcomp
loopne
dec
call
loopne
xchg
jnp
cmp
clc
out
in
mov
sub
lcall
and
dec
or
cmp
pushf
jb
test
adc
imul
stos
add
and
or
in
xchg
mov
test
aad
les
inc
aaa
sahf
leave
ret
mov
pop
test
sahf
ret
push
cmp
popl
stos
mov
or
adc
sbb
jnp
in
pop
mov
xlat
jne
pop
ja
or
jae
push
gs
bnd
fldenv
clc
outsl
mov
clc
lret
leave
cwtl
and
leave
mov
xchg
ret
out
icebp
mov
cld
jns
jle
or
cli
push
ds
aad
push
cmp
jl
dec
mov
gs
mov
sbb
movsb
add
sbb
cmp
pop
push
xchg
loop
jbe
sub
dec
dec
in
imul
nop
ret
fxch
mov
imulb
add
xor
push
dec
xabort
aad
pushf
fwait
dec
in
mov
enter
xor
mov
ret
hlt
adc
hlt
aaa
pop
int3
push
jmp
cs
or
xchg
call
hlt
cmp
cmp
clc
adc
cmp
or
pop
out
xchg
xorl
dec
aam
jecxz
xchg
inc
int3
add
popa
cmp
jo
or
mov
xor
lcall
and
enter
fildll
xchg
cmp
shrb
or
jp
or
hlt
inc
cmp
jne
adc
xor
outsl
dec
sub
pop
paddd
xchg
cmpsb
xchg
dec
lock
dec
aas
movsb
pop
not
hlt
xchg
mov
int3
in
jp
jle
jnp
sbb
cwtl
or
or
pop
add
sbb
pop
dec
mov
outsl
cwtl
inc
outsb
xor
mov
test
push
std
pop
fidivs
xchg
repnz
clc
or
or
stos
aad
and
lds
xchg
movsb
repnz
dec
aaa
push
les
push
stc
aas
mov
mov
decl
in
sbb
xchg
out
aad
daa
xor
mov
outsl
cmpsb
add
xchg
push
push
cs
lret
iret
test
inc
leave
pop
cmp
pop
adc
movsl
mov
into
xor
loop
jg
cmp
cli
sbb
ret
xchg
cmp
xchg
cmp
outsb
mov
inc
aam
lcall
sub
shr
jecxz
in
and
fmul
mov
imul
lock
stos
pop
xchg
stos
pop
or
mov
sahf
cmp
into
pop
mov
iret
jae
add
pop
les
pop
cmp
sub
cmp
add
ret
test
pop
cmp
adc
inc
stos
sbb
adc
cmc
fucomip
sbb
mov
add
jnp
push
push
mov
mov
test
push
fidivrs
fmull
addr16
hlt
adc
jg
mulb
inc
and
mov
in
or
fcmovne
xlat
add
sbb
jno
repnz
mov
mov
mov
pop
fsts
sub
pop
pop
push
pop
jns
pop
xor
insl
clc
sub
inc
xchg
mov
jno
xor
fldcw
or
cmp
and
mov
mov
imul
hlt
add
pushf
jbe
cmpsb
loopne
fidivl
iret
ja
outsb
pop
lret
mov
jnp
push
pop
sub
and
mov
sbb
out
leave
and
pop
enter
nop
push
or
fildl
pop
pop
or
mov
xlat
stos
jnp
out
adc
dec
xlat
or
jo
cld
xor
cmp
mov
xlat
cli
call
xlat
test
mov
push
ja
xlat
jno
mov
xor
xlat
or
testl
xlat
addb
or
stc
xlat
xor
xlat
or
hlt
lret
xlat
mov
push
xlat
popa
dec
mov
fists
lds
xlat
jnp
xchg
jae
xor
xchg
popa
jnp
call
ljmp
or
fisttpl
jmp
repz
ljmp
jmp
ret
xor
cmp
jae
or
mov
xlat
scas
push
roll
pop
cltd
jo
xor
leave
mov
add
xlat
or
call
jnp
lock
imul
jnp
ljmp
sbb
or
pop
aad
mov
aad
sbb
jnp
ss
jae
mov
negl
shr
fnstenv
xchg
xor
adc
or
sbb
xlat
lods
jo
sbb
int3
call
dec
mov
xor
pop
addr16
sbb
lds
pop
stc
or
leave
cltd
cmp
cmpsl
jmp
adc
pushf
dec
sbb
push
neg
jno
dec
aam
or
or
dec
aad
xchg
inc
add
mov
jl
cmp
xor
pushf
jnp
movsl
stc
mov
imul
cmp
fistl
rcrb
fstpl
std
cmp
out
cmp
adc
sub
xor
sbb
mov
cmp
or
movl
lcall
jae
in
stos
outsl
push
push
cmp
js
imul
mov
pop
lcall
jecxz
dec
adc
mov
pushf
clc
sahf
adc
xlat
dec
adc
and
mov
xchg
clc
mov
add
mov
shlb
add
scas
sub
xchg
or
jmp
mov
mul
dec
enter
sub
ss
fstps
dec
push
pusha
dec
sbb
mov
sti
jnp
test
in
and
jge
sbb
imul
les
data16
ret
or
lcall
mov
scas
jmp
es
fidivrl
dec
push
sarl
xchg
sbb
faddl
jnp
pop
test
pop
sahf
jl
enter
inc
or
push
rorl
mov
ret
add
cli
subb
adc
daa
stos
mov
mov
dec
icebp
inc
je
inc
aad
les
sub
sbb
dec
inc
adc
pop
xchg
xchg
iret
pop
fstpl
repz
leave
fisubrs
jns
dec
repnz
out
or
ret
xchg
cmp
loope
mov
scas
cli
push
aam
mov
push
insl
into
lock
addb
ret
jnp
cmp
push
push
and
pop
cmp
sbb
lcall
mov
cltd
outsb
movsb
sbb
mov
shll
jmp
int
pop
add
inc
lds
pop
xlat
sbb
sub
lea
xlat
push
mov
scas
xchg
mov
and
jg
pop
adc
test
jl
add
test
jnp,pn
dec
ror
sub
push
xchg
pop
loop
sub
lea
pushw
lretw
jbe
push
dec
push
jecxz
dec
clc
adc
jne
dec
or
mov
sub
or
cmp
sbb
out
mov
cmpsb
das
stos
add
pop
jecxz
mov
adc
repnz
jecxz
cmpsb
test
pop
out
sbb
jnp
nop
mov
xor
call
xlat
add
lods
pop
mov
je
mov
mov
rorl
cmp
jl
aam
js
daa
xchg
jo
pushf
adc
adc
mov
sbb
iret
popfw
and
notb
mov
push
cli
mov
xchg
xchg
pop
out
repnz
enter
or
and
ret
xlat
sub
push
int
sbb
mov
adc
mov
sbb
lret
shlb
push
pop
jl
sarl
sbb
stos
pushf
dec
cmp
adc
push
call
pop
xor
inc
outsb
rcll
test
fs
lahf
imul
jbe
pop
mov
pop
jb
and
andl
and
xchg
jbe
lds
cld
dec
dec
sbb
xchg
xor
cmp
pop
and
or
add
es
jmp
inc
aad
dec
out
jnp
loope
dec
in
xchg
dec
adc
in
fisubl
xor
mov
es
mov
stos
adc
dec
rcl
inc
enter
int3
cwtl
notl
xchg
fldenv
ss
push
sub
mov
test
in
enter
into
sbb
pop
mov
stos
or
jp
fwait
ret
enter
arpl
adc
out
push
push
fstpt
lret
dec
out
pop
dec
mov
jnp
xchg
lret
rcr
pop
inc
ret
push
inc
pop
sub
popf
adc
mov
fdivl
fisubrl
jne
and
int
leave
lods
sbb
mov
sbb
rcrb
sub
mov
adc
into
ret
repnz
iret
pushf
psubw
into
out
mov
in
pop
cmp
ljmp
dec
stos
cmp
aam
adcb
add
cmp
pop
scas
test
fistpl
test
cmp
pop
or
aad
cmpsb
pop
push
int3
out
or
jg
loope
loop
cmp
sbb
data16
xchg
stos
mov
adc
and
jmp
mov
jmp
xor
fdivl
xlat
cmp
push
pushf
mov
or
enter
in
arpl
xlat
dec
mov
stos
lret
scas
aas
lret
ljmp
test
divl
sbb
jl
mov
fnstenv
lret
mov
pop
outsb
xchg
mov
sbb
inc
push
mov
imul
inc
aas
or
out
les
test
loopne
cltd
in
cmp
adc
cmp
ja
andb
push
jno
xlat
cmc
xlat
in
lods
xor
stos
sbb
inc
ljmp
aaa
outsl
shl
push
lret
out
iret
lcall
repnz
push
clc
push
sub
mov
mov
pop
mov
jae
stos
inc
xchg
sbb
insb
inc
hlt
imul
mov
jmp
les
mov
push
cli
rcll
jle
popf
pop
out
jno
loopne
pop
loop
cmp
mov
xchg
adc
dec
mov
dec
paddq
mov
sbb
sub
mov
add
inc
outsb
das
mov
inc
dec
jb
fwait
xchg
scas
xor
add
fwait
sub
xlat
imul
cmpl
sbb
pop
fisttpll
sub
data16
xlat
sbb
mov
test
add
bound
jp
cmc
push
jae
inc
sbb
movsb
adc
push
inc
pushf
je
or
hlt
mull
and
pop
ds
pop
or
jb
dec
aas
hlt
add
push
adc
rorl
sbb
aad
jnp
cmp
mov
or
push
sub
pusha
sbb
dec
mov
popf
stos
xor
aam
pop
mov
add
repz
testl
enter
pop
mov
pop
mull
std
pop
les
xor
fcmove
jno
xor
xchg
inc
mov
or
fdivrs
ds
cmp
sbb
mov
jecxz
pop
mov
ret
testl
in
pop
or
icebp
xchg
dec
iret
mov
enter
sbb
les
pop
adc
mov
jg
inc
scas
xor
jge
add
ficomps
push
adc
xchg
mov
mov
in
in
adc
outsl
and
xchg
popa
mov
arpl
mov
mov
jp
enter
aas
push
popa
into
in
mov
mov
js
fstpt
add
sbb
add
dec
sub
enter
jle
cmp
into
cltd
imul
dec
dec
ret
xor
dec
lret
movsl
dec
mov
xor
push
rcrb
mov
popf
and
inc
not
fstps
addr16
jl
jae
push
push
sbb
insb
xor
testl
jp
sbb
pop
data16
popf
mov
test
add
sbb
lock
cmp
mov
xchg
sbb
sub
cltd
jo
cmp
push
adc
add
cmp
xchg
mov
in
sbb
jle
push
arpl
insl
cmp
mov
cmc
dec
push
push
push
scas
adc
ja
ja
mov
aam
loop
rolb
rcrb
and
rorb
mov
sbb
inc
jmp
xlat
in
sbb
cmc
add
jp
andb
xlat
or
int
popa
mov
mov
fidivs
out
sbb
inc
jmp
mov
pop
mov
adc
mov
sbb
jmpw
lea
daa
adc
or
sbb
cmpb
dec
pusha
into
aad
xlat
orl
mov
pop
fistl
push
fucomi
sbb
lcall
test
imul
cmpsb
fwait
or
or
mov
or
mov
iret
cmp
inc
push
stos
xor
fildl
cmc
outsl
xlat
orb
jnp
test
sbb
xor
jno
sub
push
ljmp
clc
cwtl
cs
push
push
push
mov
pop
or
cmc
xlat
add
mov
inc
mov
xlat
push
dec
xchg
mov
push
adc
fldt
mov
fwait
xlat
lock
cltd
mov
adc
mov
mov
out
add
call
fcmovbe
pop
test
mov
loop
mov
mov
mov
cmp
xor
sbb
sub
lods
sarl
xchg
aam
out
hlt
arpl
sbb
jno
xlat
imul
cmp
insl
or
je
xor
out
xchg
mov
jge
test
xor
lret
sbb
icebp
xor
adc
jns
aam
xor
lods
cmp
inc
cmp
int3
push
mov
dec
sahf
in
mov
cmpl
xor
cmp
sub
sub
jbe
jb
cmp
xor
fdivr
arpl
flds
mov
fistps
lcall
mov
xor
mov
mov
pop
pop
ja
negb
pop
std
ljmp
inc
lcall
sbb
cs
push
jno
test
aam
jmp
stc
mov
inc
mov
enter
je
xlat
or
je
cs
jns
push
inc
add
and
scas
iret
sahf
mov
out
xchg
call
cmp
cmp
xchg
sbb
mov
cmpsl
add
and
xlat
cmp
scas
pushf
clc
mov
test
mov
sub
fxrstor
cltd
xlat
inc
mov
cltd
or
hlt
or
xchg
mov
cmp
sahf
jo
out
push
jmp
xlat
nop
js
in
mov
fldt
push
ljmp
sbb
pop
fnstenv
adc
jnp
xchg
dec
leave
xchg
repnz
dec
cs
mov
bound
cld
mov
jmp
clc
sbb
inc
in
into
xor
stos
push
sbb
int3
sub
int
cltd
xchg
in
lret
pop
push
daa
jb
and
jg
jl
mov
test
jbe
call
aam
dec
adc
orb
adc
push
mov
ljmp
push
and
stc
pop
and
or
test
and
dec
popa
sbb
sbb
mov
mul
pop
inc
scas
mov
xor
shl
inc
push
jbe
repz
bswap
lret
mov
dec
stos
and
inc
ret
cmc
pop
test
xor
enter
stc
mov
sbb
inc
xchg
xchg
fbld
imul
jb
addb
cmp
fwait
aad
inc
push
icebp
or
dec
mov
and
clc
les
cmp
insl
in
add
les
mov
mov
pop
idivb
mov
xlat
stos
jae
push
sbb
inc
in
sbb
push
sbb
xchg
xlat
add
call
imul
sbb
in
rcrl
js
insl
push
fidivrl
inc
fnstsw
jns
test
jae
scas
dec
xor
push
loopne
sub
push
xchg
xchg
ficomps
andb
cmp
xchg
dec
add
outsl
sbb
sub
ljmp
int
jecxz
mov
scas
push
push
pop
xlat
orb
imul
rorl
mov
push
mov
xlat
jno
leave
jns
pop
xor
push
push
jns
xorb
jns
fcoms
ja
xlat
sub
jns
ljmp
jns
jmp
inc
xlat
add
repz
ja
cmp
sub
dec
push
std
fneni(8087
outsl
pop
lcall
mov
outsb
jns
sub
hlt
or
xchg
loope
pusha
jns
cmp
adc
xlat
mov
cmp
hlt
test
inc
jns
fsubrs
subl
cmpl
jmp
loope
rcl
dec
xor
lods
jb
add
ja
fisttps
jae
mov
lock
mov
add
push
jl
sbb
cmp
xchg
orl
xchg
fcomps
cmp
fstpt
cltd
cmpsb
in
and
pushf
pop
and
sbb
jp
adc
mov
mov
stc
enter
jg
pop
insb
shll
and
xlat
js
sbb
pop
stos
inc
in
and
nop
pop
adc
iret
jno
data16
fistpl
push
or
mov
insl
mov
aam
sbb
xlat
pop
je
jae
popa
mov
fnstcw
jmp
push
cwtl
xor
and
imul
mov
pop
hlt
pop
arpl
data16
or
push
addr16
or
les
dec
pop
sub
lahf
mov
clc
sub
cmpsl
pop
cmp
and
negb
dec
xchg
repnz
add
cmpb
cmc
mov
sbb
movsl
and
xchg
push
xchg
mov
test
mov
lret
loope
xchg
lods
fsubrl
jbe
dec
jno
and
or
sahf
fistps
inc
ja
sbb
and
mov
xchg
xor
push
in
sub
pusha
jne
inc
negb
mov
popf
pop
loopne
enter
mov
xchg
sub
pop
out
lea
dec
mov
shrb
xor
add
jg
pop
out
push
push
mov
loop
mov
or
fstps
sahf
xchg
sub
lods
mov
push
xchg
outsb
xchg
or
scas
or
jnp
push
negl
mov
popf
mov
xlat
scas
cli
inc
cmpsl
cmp
mov
stos
mov
dec
inc
addr16
pop
mov
inc
iret
push
outsl
aaa
add
push
cmp
bound
cmpsb
mov
mov
fcomps
loopne
xor
mov
xor
fst
into
dec
int3
rol
sub
mov
aam
inc
pop
xchg
and
stc
push
and
arpl
stos
mov
repnz
lcall
push
ja
pop
cmp
mov
jae
jmp
adc
hlt
jae
int3
out
xor
push
aad
ss
jne
sub
sub
xor
push
jecxz
mov
mov
push
ja
stc
mov
enter
repz
sbb
arpl
push
outsl
xlat
bound
push
sbb
xchg
cmp
lret
mov
jmp
into
and
inc
aaa
sub
fwait
mov
int
mov
add
sarb
sbb
inc
mov
mov
inc
xor
call
sub
xor
xchg
in
cli
mov
adc
repnz
mov
xchg
int3
lods
subl
cmpb
xlat
or
imul
ss
mov
aad
xchg
add
mov
add
fistl
sbb
xchg
jmp
ljmp
lods
popf
jns
lods
js
push
ds
mov
and
mov
mov
fnstcw
ret
lret
notl
dec
adc
movsb
or
xlat
xor
sbb
ja
pushf
cltd
xchg
divb
pop
jo
ja
popf
cmp
sbb
xlat
xchg
ljmp
mov
sub
scas
mov
cmp
in
push
icebp
xor
ds
sub
push
ss
sbb
fisttpl
or
mov
rcr
pop
push
pop
fisttpl
insb
lods
fwait
scas
xchg
notl
adc
mov
xlat
sbb
scas
pop
push
push
mov
out
adc
push
movsb
mov
sub
pop
add
in
cli
or
xor
outsl
sbb
inc
jecxz
cwtl
dec
add
adc
inc
fnstcw
pop
dec
lcall
xlat
fs
xor
push
fmul
mov
into
aam
ljmp
xlat
cmc
xor
aaa
imul
cmp
fiaddl
xlat
inc
fcoms
clc
adc
xlat
or
ja
xor
xlat
aaa
jae
inc
mov
in
mov
xlat
pusha
mov
and
sbb
push
mull
sar
notb
jg
fisubl
popa
sbb
cmp
mov
cmpsb
xor
and
pop
ds
adc
fstpt
enter
jecxz
sub
and
pop
sub
outsb
or
out
out
pop
adc
stos
mov
icebp
jno
ja
cmp
pop
mov
out
ja
fnstcw
into
push
xor
popf
xor
cmp
pop
fidivl
in
and
push
aad
cltd
cwtl
jge
aas
mov
lret
sbb
mov
sbb
cmp
inc
add
test
mov
popl
mov
and
mov
mov
in
stos
or
out
mov
fucomip
ret
sub
sbb
ret
lret
daa
inc
push
xor
adc
int
andl
mov
pop
pop
les
or
pop
test
or
dec
lcall
mov
pusha
into
test
lret
nop
fadds
fs
mov
cli
out
xchg
jno
roll
aad
dec
cmc
cmp
sbb
push
dec
out
inc
test
cmp
cmp
or
mov
lret
push
pusha
xor
and
outsb
pop
mov
ja
nop
xor
cmp
fldenv
adc
mov
push
sub
int
ja
not
mull
or
add
nop
cmp
mov
repz
xor
xor
jg
xchg
roll
or
popa
test
push
icebp
fidivl
xchg
out
cwtl
push
bound
idiv
sbb
mov
sbb
fcmovb
push
sbb
adc
lods
testl
lea
ret
and
cs
or
cmp
adc
mov
pop
aad
lcall
mov
cltd
xchg
mov
and
jle
and
dec
fdivrl
jp
pop
scas
xor
inc
inc
xchg
mov
pop
fwait
dec
dec
push
push
lret
mov
imul
divl
bound
or
mov
xchg
out
pushf
xchg
add
mov
cmpsb
bswap
shr
repz
les
mov
cmp
cli
lcall
pop
sarl
push
adc
sbb
repz
ret
not
dec
mov
add
cld
pop
popf
sbb
mov
push
xchg
adc
inc
push
in
dec
cmp
movsl
xor
inc
lods
aaa
xor
mov
dec
dec
fsubrl
scas
jmp
dec
push
pusha
push
cmp
push
testb
cmc
dec
sbb
mov
push
sbb
fadds
inc
pop
or
jnp
imul
and
jbe
dec
into
lcall
and
insl
or
jae
and
sub
push
fsubs
mov
sub
arpl
jnp
repnz
scas
push
pop
jg
lock
jg
or
xor
sub
loop
movsb
or
mov
cmp
js
xchg
cmp
call
push
and
xchg
push
xchg
sub
inc
cmp
jne
repz
outsb
inc
sahf
mov
xor
cmp
roll
mov
jl
push
and
movsl
dec
cbtw
push
cmpsl
rol
call
lods
cmpsl
xlat
ss
mov
ror
sub
arpl
and
sbb
enter
mov
in
mov
add
jl
fstpt
xor
sub
in
xor
lea
std
cwtl
rep
in
mov
jnp
fstps
fst
xor
aaa
lcall
out
dec
inc
cmc
push
sbbl
fldcw
and
adcb
mov
fdiv
aad
mov
ljmp
bound
clc
lahf
pop
mov
inc
fcomi
jne
pop
adc
cmp
xlat
andb
fildl
pusha
adc
ja
ret
sbb
mov
clc
push
mov
add
xchg
clc
jo
adc
repz
inc
add
jnp
push
or
xlat
mov
outsb
stos
cmp
sbb
dec
mov
outsl
test
and
shrb
mov
inc
or
mov
cwtl
cmp
fbstp
arpl
xchg
mov
xlat
xchg
insl
repz
scas
or
insb
cmp
pop
adcl
xlat
jl
sub
imul
mov
xlat
or
ret
push
dec
mov
cltd
sub
jnp
test
mov
outsb
test
cmp
fisubrl
mov
fmull
fisubrl
xlat
pop
es
add
stc
xlat
add
sbb
fcmovbe
push
push
xor
xlat
loopne
data16
fwait
aad
shlb
sub
ret
xor
xlat
pop
fcmovu
test
mov
hlt
mov
es
jg
ficoml
jb
cmc
adc
sbb
fstpt
xor
xor
je
pop
cmc
data16
pop
sbb
cld
shr
pop
mov
push
fisubrl
in
sub
add
jo
in
imul
subl
mov
in
test
data16
pop
int
sbb
pop
fnstenv
cmp
sbb
nop
add
bnd
mov
jne
mov
cwtl
adcb
xlat
fmuls
jbe
pop
fildl
mov
push
push
nop
fstpt
xchg
push
jbe
cld
jb
cmp
cmp
sbbb
xor
sahf
cli
xchg
add
adc
hlt
xorb
jl
mov
je
fsubl
fidivrs
cwtl
mov
dec
fcomps
fnstcw
xchg
sbb
test
inc
adc
dec
sub
pop
mov
aad
in
shrl
cltd
inc
cmpsb
xor
sahf
jmp
or
pop
sbb
loope
inc
mov
adc
sarb
mov
push
hlt
cs
ret
and
xchg
adc
xor
sahf
aas
jmp
add
leave
sub
test
and
in
cli
out
test
stc
dec
mov
loope
fstps
or
dec
aad
inc
mov
dec
jo
cmp
jne
jns
push
repnz
mov
lcall
and
repnz
push
or
mov
fcmovbe
mov
divl
cmc
stc
leave
add
insl
xchg
fincstp
xor
add
xor
adc
std
fistl
loop
push
cli
adc
jno
xlat
daa
sub
pusha
arpl
cmp
cmp
jae
or
ljmp
jo
xlat
aaa
pusha
sarb
jo
insb
sbb
dec
sbb
sbb
push
jns
mov
mov
mov
cmp
xor
push
adc
pop
dec
out
fistpl
push
js
mov
or
xlat
outsl
mov
mov
add
mov
mov
jno
out
ss
test
fstpt
mov
push
sbb
roll
nop
pop
jae
orb
les
jge
cmp
push
addr16
and
cli
jne
movsb
mov
addr16
enter
imull
push
push
sahf
sbb
xchg
cmp
push
data16
cmp
sub
mov
fucomip
pop
shl
jg
lret
es
cmc
lahf
imul
push
xor
out
lock
je
enter
xchg
cli
or
or
sahf
xchg
push
lret
inc
cs
jb
jmp
ljmp
dec
mov
out
nop
out
sti
pop
enter
popf
rolb
lahf
dec
popf
push
pop
or
leave
inc
push
outsb
or
lock
xor
ror
inc
sub
sbb
clc
idivb
out
repnz
push
movsb
cmp
pop
sbb
inc
popa
jo
fisubrs
icebp
sbb
iret
insl
fidivrl
inc
enter
push
mov
es
and
jns
scas
jne
mov
push
pushf
inc
mov
push
or
or
xchg
outsl
int
mov
sbb
jnp
add
add
add
dec
and
mov
insl
ja
pop
or
mov
movsl
mov
enter
cmp
test
mov
push
jbe
cmp
push
xor
movsl
sbb
in
notl
inc
in
in
adc
pop
cwtl
pop
aad
adc
outsb
imul
mov
push
int3
and
xor
popa
in
shl
sub
jle
or
xchg
in
sbb
das
mov
bound
imulb
outsl
loop
jmp
mov
outsb
xor
hlt
jns
test
mov
sbb
push
icebp
push
ret
pushf
loop
shrb
aad
js
cmp
das
aas
fcoml
sub
in
stos
in
decb
cltd
mov
pop
push
cwtl
dec
xor
lahf
insl
rorb
inc
fisttps
mov
in
lcall
rclb
jb
outsl
int
mov
jmp
adc
or
stc
int
xlat
hlt
fcmovnu
adc
mov
aas
cmp
and
mov
xor
adc
divl
add
cs
iret
loop
cmp
out
sbb
jae
xchg
ljmp
pop
addr16
data16
push
in
jecxz
or
repnz
loopne
stos
jne
cmp
sub
ss
pop
es
das
adc
in
add
push
jmp
aad
sbb
bound
adc
pop
jg
dec
mov
sub
inc
mov
std
mov
mov
hlt
sbb
push
loope
repnz
subb
push
or
sahf
mov
lods
mov
mov
test
aaa
xor
fmuls
cltd
mov
fdivrs
shlb
ret
les
jb
out
xorb
imul
pop
aad
dec
sbb
and
dec
and
push
and
notb
inc
shll
scas
cli
mov
dec
push
clc
mov
in
add
dec
lods
ret
sub
scas
rcrl
aam
jp
dec
adc
jle
mov
cli
scas
push
not
scas
ljmp
arpl
je
mov
insb
xor
and
in
or
lahf
aaa
add
hlt
sbb
cli
js
call
cmp
loopne
popf
and
icebp
inc
sub
adc
jmp
mov
sahf
in
jle
push
push
sahf
insb
jle
iret
popf
pop
andl
adc
push
mov
mov
repnz
int
mov
mov
dec
xor
iret
daa
mov
adc
xchg
add
or
out
mov
movsl
mov
les
pop
xchg
mov
ror
pop
sbb
into
sub
add
mov
mov
dec
loopne
pushl
test
mov
fmull
fisttpll
cwtl
pop
test
clc
ljmp
jnp
cmp
push
movsb
push
jne
lcall
stc
cmpsb
sbb
dec
pop
jnp
fsubrs
sbb
xchg
mov
cmpl
cmp
xor
dec
clc
mov
out
sub
in
sarb
cmp
sbb
sti
add
pushf
mov
rorb
insb
std
mov
dec
add
mov
iret
and
loop
nop
faddl
out
cmp
cmp
xor
loopne
pop
mov
pop
lret
mov
cltd
or
mov
popf
in
shl
fcmovbe
jnp
xchg
or
jbe
icebp
mov
sahf
int3
shll
fisttpl
js
inc
cld
int
and
inc
push
xchg
cwtl
ficompl
xor
mov
into
jge
inc
outsl
mov
pop
adc
cmp
mov
xlat
dec
mov
dec
int3
sub
cmp
xchg
fxam
fmuls
int
aas
cltd
into
add
stos
and
jp
xchg
stos
data16
cmp
lock
jmp
popf
dec
xchg
ds
mov
adc
addr16
dec
mov
inc
cmp
testl
les
rorl
bound
push
stos
rolb
push
into
mov
jae
pop
fcompl
scas
out
mov
push
mov
push
insb
into
add
xchg
jno
loopne
mov
cs
ja
imul
lock
adc
jmp
dec
push
push
adc
inc
xchg
inc
repnz
mov
dec
out
lcall
adc
add
pop
dec
cmp
imul
js
roll
cmpsl
sbb
ds
cmp
pop
fwait
inc
lods
dec
test
sub
push
mov
xor
push
repnz
mov
push
xor
xor
fldl
push
sbb
lods
jle
inc
repnz
iret
aaa
jge
enter
andl
loopne
add
cmc
push
mov
cmp
sahf
fldl2e
inc
addr16
sahf
mov
xchg
test
pop
sbb
lcall
add
jnp
or
jmp
in
sbb
cmp
sbb
cmp
repnz
or
shll
or
fidivl
ss
sub
jae
pop
xorl
cld
add
cmp
fistpl
cmp
clc
jns
or
fld1
sbb
out
fisttpl
fidivrl
sbb
js
jmp
in
cwtl
fwait
pop
repnz
add
push
dec
addr16
dec
add
icebp
cld
pop
mov
xor
add
pop
dec
mov
jnp
or
mov
dec
dec
pop
add
pop
or
pop
ljmp
push
xchg
push
adc
pushf
mov
repnz
inc
test
or
xlat
cmp
cld
push
das
cmp
loopne
mov
iret
scas
add
cmp
fsts
adc
xlat
push
mov
xor
insb
mov
nop
pop
fdivr
in
push
adc
scas
inc
sbb
and
inc
lret
mov
jecxz
test
les
outsl
pop
cmp
cltd
mov
or
lock
inc
into
int
aas
inc
gs
jns
push
jnp
pusha
mov
cwtl
xchg
push
movsb
or
jae
fwait
hlt
shl
sub
movl
mov
inc
cmpsb
mov
adc
aad
adc
lcall
lahf
or
xchg
es
push
aaa
mov
or
outsl
inc
mov
imul
pop
nop
jb
dec
dec
test
mov
movsb
push
repz
pushl
fincstp
add
sub
xor
xor
lcall
sahf
mov
enter
push
xchg
pop
pop
inc
repnz
cwtl
cmp
jns
adc
and
mov
loop
and
cmc
dec
mov
dec
jb
cmp
enter
fwait
mov
add
add
ss
enter
imul
iret
inc
mov
jno
lret
jg
xor
dec
and
mov
inc
je
sbb
xchg
xchg
je
mov
xor
out
in
push
lcall
subl
add
lock
cmp
push
add
leave
inc
add
mov
adc
xchg
jg
xchg
aaa
cwtl
test
test
les
aaa
test
outsl
xor
dec
mov
scas
mov
mov
xchg
pusha
dec
push
dec
mov
enter
xor
cli
xchg
and
test
cmp
add
pop
shlb
pop
xchg
and
adc
jo
jmp
pop
lret
sub
push
jbe
fcmovnbe
int
add
ss
adc
jnp
cmpsl
xchg
jae
popa
ja
pop
outsl
inc
loop
adc
mov
imul
mov
stos
stos
nop
jbe
orb
jecxz
jle
imul
inc
dec
inc
mov
xchg
sub
cld
mov
stos
mov
or
cmpps
inc
clc
aad
sub
mov
or
and
mov
mov
or
xlat
in
fsubrl
mov
sub
dec
mov
and
ja
xor
call
and
or
pop
out
aad
add
mov
push
cwtl
push
ret
fwait
mov
fstl
jae
mov
insb
xor
or
iret
mov
fs
xor
leave
std
cmp
test
iret
mov
dec
jbe
pushf
das
in
cmp
je
jge
and
mov
xchg
sbb
xor
sar
ja
cmp
or
sbb
sub
lock
jnp
adc
fdivrs
pop
jecxz
cli
add
dec
xor
push
add
fcoms
into
jne
adc
sub
mov
lds
ds
or
loope
shl
xchg
jmp
inc
movsl
sub
dec
mov
aas
xor
stos
xchg
dec
aas
aas
dec
psubb
in
cmp
pop
and
lock
xor
ja
pop
pop
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
xor
mov
fldl
and
jo
push
jne
pop
jae
cs
cmp
imul
sub
pop
lock
adc
or
bound
enter
sub
dec
call
les
sbbb
push
aad
ret
or
mov
rcll
or
bound
push
js
jae
sahf
push
stos
aas
int3
mov
loop
dec
and
cwtl
cmc
jmp
int3
aaa
imul
or
mov
movsb
int3
stos
pop
pop
ficoms
fdiv
mov
adc
dec
sub
clc
notl
int
and
jp
aas
lcall
fdivrs
imul
sub
jle
pop
jno
push
std
and
in
fisttpl
lret
in
inc
push
mov
mov
cmp
ret
jnp
jge
cmp
scas
fiaddl
push
xchg
call
pop
push
js
lock
stc
loopne
clc
xor
outsb
out
dec
inc
or
jne
ss
fistl
xchg
lahf
or
out
clc
pusha
fstpt
lret
add
repnz
sub
dec
call
inc
out
sub
jo
lret
push
lret
iret
jnp
les
jmp
jnp
clc
out
test
nop
mov
push
cmc
cmpsl
addr16
inc
sub
pop
xchg
mov
rorb
cwtl
int
add
and
adc
or
xor
cmp
js
mov
clc
inc
or
jns
lret
mov
sub
in
mov
into
dec
push
and
enter
icebp
inc
sub
out
fidivl
aad
lock
lret
imul
push
mov
or
pop
sahf
sub
ret
adc
mov
fisubrs
ja
xchg
ret
adc
and
test
xchg
imul
dec
push
fimuls
dec
add
daa
jae
xchg
mov
xor
lds
push
or
inc
ret
hlt
sbb
jmp
cmp
popa
out
stc
mov
out
xor
imul
imul
cmpsb
pop
mov
dec
xchg
ds
jae
test
or
cli
and
cmpsb
aad
sub
mov
xor
cmpsb
out
xadd
dec
jle
repz
and
cmc
test
cmp
dec
icebp
negb
mov
jbe
jo
push
sub
fidivrs
imull
or
sbb
mov
andl
cmp
sbb
pop
scas
fdivl
in
aad
mov
pop
inc
aas
rclb
aad
rorb
loope
xlat
mov
mov
arpl
icebp
mov
out
sbb
add
shlb
lahf
sub
cmp
repnz
outsl
lcall
hlt
stos
andl
into
pop
xchg
and
sarl
ss
dec
pop
pop
sub
adc
ljmp
les
notl
shl
ljmp
jecxz
push
xchg
push
inc
adc
add
js
xchg
popa
lock
dec
dec
and
xchg
sahf
in
out
ss
push
fcmovnb
scas
jg
jb
and
mov
adc
addr16
mov
sub
pop
mov
out
addr16
add
dec
sub
push
int3
out
clc
ss
or
jns
les
aas
adc
repnz
incb
cmp
add
in
and
mov
push
daa
out
lret
nop
mov
pop
sbb
cmp
dec
in
mov
arpl
mov
jmp
sarl
mov
mov
icebp
xor
pusha
nop
adc
sbb
pop
lds
dec
mov
pop
lock
cwtl
cmc
rolb
aad
push
jo
jl
mov
out
stos
pop
pop
leave
mov
adc
mov
loope
loope
xor
pop
or
scas
fsubrs
sbb
scas
sbb
fists
dec
adc
or
pushf
mov
jge
nop
hlt
adc
lahf
lcall
cmp
mov
enter
addb
pop
dec
xor
pop
xchg
xor
repz
test
push
or
inc
or
jmp
push
jno
inc
or
inc
lods
add
mov
addr16
lock
js
jmp
cmp
in
xchg
call
int3
movsb
into
fildll
add
mov
movsl
inc
pop
lods
mov
push
fadds
pop
push
fisttps
mov
rorl
test
cmpsl
insb
add
jmp
xchg
dec
cwtl
stos
fdiv
xchg
mov
scas
jbe
mov
shlb
mov
cli
sbb
sub
cmp
mov
xor
lahf
addl
mov
lock
daa
adc
adcb
addb
stc
or
mov
pop
adc
lock
jae
lock
or
lock
inc
xor
data16
mov
cmc
aas
jae
mov
inc
adc
sbb
cmp
fwait
or
ret
adc
pop
mov
in
rcrl
or
mov
jno
int
adc
mov
aad
sbb
push
cmpsl
inc
cmpsl
mov
mov
xlat
in
movb
iret
adc
adc
cmp
incb
jecxz
pop
cmp
cltd
in
jg
daa
sub
scas
jo
popa
adc
push
out
dec
mov
push
mov
cwtl
imul
and
mov
out
insl
xchg
cltd
rclb
cld
jnp
test
push
ja
idivb
pop
or
add
fcoms
das
inc
lahf
xor
les
mov
sbb
jo
fwait
or
fldenv
and
lcall
jb
jne
jmp
adc
xchg
and
or
xor
scas
inc
cmc
add
xchg
pop
sbb
cld
dec
out
mov
test
xlat
sahf
fcoms
rorl
aam
dec
sbb
inc
jmp
push
or
mov
and
cmp
in
mov
popf
call
cmc
sbb
mov
cmp
ljmp
dec
or
pop
mov
mov
jg
fimull
enter
pop
mov
js
aas
dec
sbb
cmp
in
sbb
jb
fmuls
out
call
mov
lcall
or
adc
push
les
add
lds
mov
fcomip
dec
or
inc
loope
les
iret
out
cmpsl
sbb
daa
ljmp
and
and
fstps
int
push
jne
cmp
inc
add
cmp
cmp
insb
mov
sbb
jmp
clc
aaa
add
xor
mov
push
mov
ds
pop
out
cltd
mov
fldt
xchg
movsb
out
sbb
stos
mov
mov
and
xor
mov
sub
cli
iret
es
outsl
add
xor
clc
xor
fcmovnbe
mov
leave
pop
pop
pop
out
adc
nop
sub
in
stc
test
je
mov
pop
sahf
in
inc
mov
sub
inc
push
xlat
xor
sub
lock
repnz
cmc
js
mov
mov
popf
out
out
add
add
xor
xor
mov
dec
lret
cs
lock
je
iret
pop
jb
clc
movsl
pop
rcrb
cmp
movsb
xor
sub
js
lods
aam
and
addr16
sub
pop
add
dec
sarb
dec
in
push
sub
xchg
and
fisttpl
rcrl
pop
mull
mov
sbb
popf
fbld
inc
cmp
lahf
aad
push
ret
mov
or
mov
or
add
cltd
nop
scas
lret
jg
jo
dec
jmp
ret
cmp
or
xchg
out
adc
decl
out
pop
in
ret
fcomi
mov
lods
test
mov
cs
insl
adc
mov
popa
push
cmpb
stos
lcall
mov
test
repnz
push
fwait
jmp
pushf
out
adc
add
repz
cmp
in
adc
enter
stos
fisttpl
popf
adc
or
jnp
fsubr
lcall
lret
jae
xor
add
in
inc
dec
xor
mov
int3
xchg
inc
pop
xchg
push
mov
test
inc
xor
cmp
xlat
add
jmp
popa
pusha
mov
pop
dec
and
inc
cltd
popa
insl
jae
mov
daa
inc
jnp
pushf
shll
sub
shl
pop
bound
or
sub
insl
jo
enter
and
fldenv
ljmp
pop
xchg
mov
clc
out
loope
nop
add
repz
pop
int3
xchg
xchg
inc
xor
sbb
xchg
inc
jmp
xor
jmp
insb
xor
and
cmp
sbb
bnd
xchg
add
leave
test
int
xor
push
outsl
jae
push
sbb
mov
cmp
ficomps
xchg
sbb
inc
in
aad
arpl
adc
cld
adc
inc
inc
xchg
jnp
testb
outsb
imul
pop
out
enter
adc
xchg
cmovnp
popa
mov
mov
scas
repz
mov
inc
out
aaa
mov
pop
cli
mov
jp
insl
test
dec
ret
push
test
clc
sahf
stc
test
xchg
repz
jns
cmp
pop
daa
xor
sahf
xchg
jno
mov
dec
push
and
jbe
pop
stc
int
and
fwait
inc
fcmovnbe
xchg
and
xlat
fwait
in
jp
sub
fimull
inc
xor
aam
cltd
test
xlat
ret
cmp
fildl
fdivrl
aas
dec
or
dec
aas
jge
sub
repz
stc
add
les
jnp
cmp
scas
mov
lds
jge
xor
xor
cmp
sub
inc
jnp
cli
cs
sbb
ds
mov
or
retw
cld
xchg
mov
mov
ds
adc
sbb
cmp
cmp
jae
mov
aad
sbb
rcr
roll
add
xlat
sbb
inc
jmp
adc
pusha
add
and
push
addl
cmp
jp
fadd
icebp
add
cmp
sub
sub
or
in
jae
add
add
imul
roll
ss
jnp
fsubrl
xor
aam
stos
test
xchg
in
sub
mov
and
cmpsl
lahf
or
repz
cmp
dec
cmp
mov
mov
dec
or
mov
and
xchg
lret
popa
jns
sub
jns
jmp
lret
pop
and
mov
inc
sub
pop
test
lea
lcall
call
xor
sbb
mov
repnz
in
xor
mov
inc
jp
bound
and
xor
push
mov
cmpsb
and
cmp
cltd
sub
sbb
inc
out
in
ss
push
subb
mov
jg
popf
mov
mov
shl
cmc
cmp
ljmp
rcl
and
cmc
insb
sbb
jecxz
dec
cmp
jmp
cmc
loopne
das
and
jmp
popa
add
cmpsl
adc
mov
or
xchg
add
dec
push
cli
fdivrs
mov
or
lret
mov
mov
sbb
aam
loopne
add
fistpl
add
test
jnp
sbb
push
xor
test
fstp
sbb
arpl
cmp
leave
rcl
mov
cmp
pop
test
add
mov
adc
mov
sub
or
xchg
mov
cmp
mov
pop
iret
aaa
fwait
inc
push
mov
add
enter
iret
and
pop
icebp
jmp
push
xchg
jecxz
incb
pop
cmp
lds
and
or
or
outsl
dec
xchg
daa
decb
mov
push
nop
shl
loope
std
divb
pop
push
sbb
aad
lahf
sub
outsb
cli
repz
lret
dec
in
mov
ret
jbe
call
add
fdivrl
mov
mov
and
data16
mov
and
ljmp
cmpb
dec
in
cmc
test
jb
mov
pop
dec
hlt
xor
sbb
dec
mov
lahf
dec
inc
jb
nop
sub
mov
sbb
test
out
xorl
xor
aad
dec
sti
add
xchg
jg
dec
sub
shll
sahf
mov
dec
xor
pop
mov
mov
lds
outsl
push
test
scas
push
sub
sarb
scas
sbb
xchg
add
lods
inc
cmp
pop
imul
cmp
or
in
add
lret
mov
push
cmpl
pusha
roll
lcall
cmp
jl
sub
sub
aad
lcall
flds
xor
and
addl
lahf
adc
push
xor
mov
stos
loopne
pop
pushf
test
cmp
or
mov
imul
cmp
ret
or
lock
or
dec
fsubl
loopne
pop
dec
or
js
cli
movsb
jmp
dec
sbb
jp
jo
je
or
and
lcall
addb
daa
push
mov
jnp
fmuls
or
sbb
ja
jnp
jbe
notl
scas
sub
jne
cltd
inc
loopne
mov
ljmp
add
das
aad
xor
sqrtps
xchg
cmp
popf
pop
cmpsl
dec
adcl
dec
mov
aaa
cmp
out
ficompl
shl
push
filds
loope
stos
shl
out
jne
pop
lahf
jmp
jae
dec
out
inc
in
in
out
mov
sahf
jecxz
xor
pushf
test
sub
pop
adc
xor
sub
fwait
repz
cs
cli
and
fsubs
fadds
xchg
jno
push
in
pop
or
aas
stc
in
mov
jo
sbb
mov
and
repz
mov
or
rorb
enter
or
sbb
hlt
dec
dec
test
arpl
arpl
pop
mov
jns
out
mov
scas
push
dec
ret
cmc
mov
xlat
in
cmp
xor
xor
stc
shlb
push
cmpsl
fcomi
das
mov
aam
mov
fistpll
cld
sbb
dec
cmp
xlat
pop
and
pop
inc
lcall
pop
ficompl
add
cmp
fldcw
adc
jne
jns
mov
cmpsl
lock
xor
cmp
dec
adc
and
adc
mov
int
push
push
or
insb
lods
push
out
iret
xchg
out
sub
incb
jbe
mov
add
and
fsubl
sbb
out
adc
mov
inc
pop
dec
mov
lret
iret
jne
dec
data16
movsb
cmp
xor
or
pushf
call
out
fidivs
mov
jnp
das
jne
or
adc
jns
or
call
scas
pop
nop
in
dec
mov
out
push
js
mov
push
in
popf
shlb
mov
pop
dec
testl
or
fisttpll
sbb
notl
xor
aad
cmpsb
into
inc
rcll
test
sub
dec
sbb
push
gs
inc
orl
pop
int3
sbb
sbb
enter
in
pop
das
ja
clc
imul
or
jo
jae
jle
cmp
xor
lret
cmp
inc
mov
mov
mov
sub
dec
rcrl
dec
outsb
fcmovu
cli
sub
mov
xor
das
xor
push
xchg
pop
lahf
in
out
test
mov
add
adc
jb
sbb
mov
jnp
stc
xchg
repz
iret
push
ss
cmp
mov
mov
shlb
add
xchg
imul
cmpb
clc
fsubr
lret
push
cmc
and
outsl
ljmp
jo
stc
out
das
iret
scas
push
ret
out
or
mov
out
jg
dec
test
push
int
fildll
cld
stos
popf
lock
mov
lea
testl
fisttpl
lret
xor
sub
sbb
lock
fbstp
adc
aad
fwait
ja
mov
popf
mov
popa
cmc
mov
in
pop
jg
xor
fisubrl
xchg
addl
outsl
push
out
adc
leave
sub
adc
cmp
fstpt
jno
test
xor
dec
xchg
das
stc
inc
scas
xor
dec
cmp
xchg
inc
xor
fimull
scas
fistpl
mov
mov
fs
or
out
push
jb,pn
jmp
cmp
push
aam
add
jne,pn
push
out
ret
push
notl
xchg
fsubp
fisubrl
stos
push
inc
xchg
repnz
cltd
inc
sbb
mov
xchg
inc
jg
movsb
fwait
out
aam
fs
je
jl
test
lods
scas
enter
inc
ret
ja
and
mov
lret
lods
cmpl
mov
pop
aaa
mov
sahf
pop
xor
mov
or
test
pop
lods
leave
cmp
ficompl
loope
daa
scas
xor
push
repz
ret
lcall
or
cltd
fxch
pop
sbb
xor
push
inc
sub
sub
lods
mov
in
add
repz
loop
dec
loopne
pop
add
out
xchg
mov
pop
psadbw
into
mov
sbb
aad
mov
clc
mov
xchg
imul
add
add
jg
adc
push
mov
nop
clc
dec
xchg
cmp
daa
aad
out
jbe
adc
mov
cld
je
imul
dec
std
xlat
inc
adc
les
mov
enter
jmp
xorb
cmp
push
lret
negl
fiaddl
cmp
outsl
adc
imul
xor
sub
xor
aad
arpl
ret
out
pop
mov
pop
stc
sbb
aad
je
pop
push
lock
sbb
mov
or
mov
mov
je
popf
jno
mov
dec
pop
jg
clc
pop
iret
push
mov
cmc
or
repnz
aam
outsl
sub
inc
mov
lea
mov
lcall
mov
dec
or
std
and
push
decl
lret
adc
mov
pushf
lock
add
or
push
in
sbb
jle
xor
adc
fistpl
repnz
pop
je
test
cltd
pop
int
cmp
mov
add
ja
adc
adc
iret
pop
fstpt
sub
std
jnp
out
jne
repz
ja
cltd
mov
push
ss
adc
sbb
stc
ficoml
ror
outsl
mov
inc
scas
stc
inc
xor
dec
lcall
xor
mov
inc
mov
xor
loope
mov
ss
xchg
iret
sub
sub
enter
out
cld
dec
in
mov
pop
shlb
inc
sub
jb
jmp
sub
pop
fcmovu
repz
jmp
pop
lock
fstps
xchg
in
or
aad
cmp
test
pusha
push
inc
cli
lock
aad
inc
push
jecxz
push
bound
push
out
stos
in
test
movsb
dec
mov
or
pop
clc
xchg
divb
push
shl
stos
fcmovu
pop
push
and
out
movsb
out
fmulp
es
push
sbb
jge
stos
test
movsb
xchg
scas
xor
adc
jecxz
sbb
stc
jb
mov
cmp
call
sbbb
mov
aad
or
pop
mov
or
div
push
inc
mov
inc
test
loopne
dec
fwait
sbb
les
jg
xlat
stc
enter
or
fwait
add
adcb
or
loopne
repz
jbe
sbb
push
mov
mov
ja
or
dec
loope
lahf
enter
inc
les
or
mov
mov
xlat
lock
out
daa
int3
sub
sbb
add
out
fsubrs
mov
mov
mov
push
pushl
nop
out
lods
sti
fmul
mov
add
dec
cmp
cltd
dec
mov
lahf
adc
bound
add
fidivrl
jns
mov
test
stos
mov
sbbb
aad
sub
cli
adc
in
outsl
ret
test
aaa
fstl
addr16
cwtl
xor
call
push
test
rclb
pop
ret
jnp
cmp
stos
lds
lret
ja
xlat
fwait
cmp
jnp
push
push
push
xchg
sub
sub
mov
push
mov
mov
lds
rcrl
mov
inc
pop
iret
imul
cmp
enter
jae
or
scas
adc
xchg
decb
dec
jp
sbb
xchg
cs
fwait
les
mov
insl
aas
dec
lahf
xchg
pop
dec
ret
pop
cmpsl
jb
pop
nop
sbb
movsb
leave
stc
in
lods
xchg
xchg
mov
pop
and
mov
dec
sub
and
sbb
mov
mov
in
cmpb
andl
pop
mov
inc
subb
jnp
jno
sbb
push
data16
xor
enter
cmp
add
add
mov
daa
or
repz
inc
adc
add
pop
cmpsl
push
ss
jmp
mov
mov
nop
inc
sbb
dec
jne
fdiv
jmp
xor
repz
clc
xor
ljmp
aaa
popl
lahf
rcl
add
add
insl
ljmp
fldcw
lock
mov
xor
sbb
jae
lahf
jp
push
js
sbbb
fsubrs
leave
jns
mov
lcall
push
or
int3
pop
lock
mov
mov
xchg
pushf
sub
subb
jae
pop
xlat
sub
hlt
adc
popf
dec
pop
mov
xchg
cmc
loope
fwait
dec
fstpt
xorl
aam
mov
lahf
or
rorl
pop
xor
mov
cmp
xor
outsl
mov
lret
or
push
pxor
loope
call
push
test
push
lock
cmc
adc
pop
lahf
cmp
dec
scas
fistps
adc
dec
jb
inc
leave
out
scas
ret
popa
repz
int
add
add
ljmp
adc
dec
mov
out
add
add
sbb
cmp
ds
imul
xchg
fwait
inc
dec
ja
xor
mov
ja
mov
je
dec
lods
xchg
xchg
and
sbb
cmp
or
jmp
in
mov
popf
jmp
inc
inc
mov
inc
scas
add
ljmp
or
fisttpll
lds
xor
push
sbb
xlat
jg
adc
mov
movsb
inc
rcl
lret
or
mov
ret
aaa
scas
shl
repz
notl
adc
cmp
repz
je
xor
or
xchg
jecxz
mov
push
jo
xchg
stos
jo
lret
push
inc
movsb
mov
pop
scas
inc
pop
aaa
mov
cmp
sbb
push
das
sub
inc
lcall
jmp
stos
jb
xor
fildl
cmp
mov
jns
push
repz
daa
or
push
xor
jmp
pop
lcall
loope
mov
pop
out
and
loope
xor
lcall
test
movsl
pop
push
or
mov
lock
jne
mov
ljmp
pop
cld
iret
dec
xor
or
inc
push
aas
int
add
cli
out
icebp
push
shlb
dec
push
sbb
insb
dec
xor
popf
jb
fcompl
repnz
cmpsb
dec
fs
xlat
mov
aad
add
jp
xlat
fdivrp
shll
pop
adc
cmpsl
das
fidivrl
or
mov
sub
stos
scas
lcall
cmp
dec
inc
cmp
in
mov
scas
gs
pop
xor
cmp
cltd
es
cmp
mov
popf
dec
fcmove
sbb
pop
inc
rol
movsb
call
jle
rclb
xor
mov
and
popf
mov
outsb
enter
mov
sub
jmp
adc
jnp
scas
pop
lahf
jl
out
in
pusha
jp
notb
and
xchg
fadds
push
popf
adc
or
add
lods
mov
jp
movsb
lret
or
or
mov
pop
cmp
and
test
mov
pop
ss
shlb
ror
inc
mov
jno
test
sbb
movsb
jmp
in
adc
dec
not
cmp
lret
xor
icebp
jmp
add
pop
sub
xchg
adc
mov
stos
test
xchg
xchg
fildll
scas
rcr
xor
loop
stos
mov
clc
add
test
add
jp
pop
repz
add
call
fistl
mov
xchg
inc
andb
mov
sbb
lret
test
aaa
xor
sub
insb
jp
les
push
sbb
fdiv
dec
mov
test
scas
adc
icebp
out
loope
enter
jno
jno
mov
mov
push
sub
mov
dec
adc
testl
and
mov
daa
pushf
cmp
jl
fnstsw
into
and
call
rcrb
or
dec
aaa
insl
dec
cmp
js
dec
xchg
les
mov
jecxz
fdivl
push
ret
xchg
mov
mov
pop
or
mov
js
enter
mov
adc
push
mov
or
int3
bound
or
mov
push
iret
adc
sub
jecxz
and
mov
xor
int
adc
movl
or
outsl
fmull
sbb
xor
mov
dec
insl
cmp
pop
xor
mov
ds
dec
push
test
push
cltd
test
jge
cmp
pushf
sbb
dec
add
push
lcall
push
xchg
cmp
cltd
sahf
loopne
xor
xchg
mov
cmp
aaa
jl
les
push
mov
es
mov
in
adc
jb
xor
cmp
mov
sbb
das
fucom
mov
cmp
lahf
jno
lret
lcall
mov
lock
jg
rclb
scas
inc
int3
mov
cmp
jmp
add
cli
mov
xchg
mov
mov
push
push
sarl
xlat
insb
movb
call
sbb
mull
int3
cmc
xchg
mov
xchg
insl
stos
fnsave
pop
fwait
les
mov
push
cmp
fidivs
ret
enter
ficompl
mov
push
cs
dec
imul
repz
loopne
or
sarb
or
sbb
adc
clc
jb
inc
or
or
enter
jp
lcall
outsl
fldl2e
adc
mov
push
call
mov
lcall
cmp
pop
sub
dec
or
mov
push
repz
std
xor
xchg
arpl
xor
adc
jecxz
dec
mov
jae
cmpsb
fcmovu
and
enter
xor
dec
cmp
imul
xor
xor
aad
dec
pop
ret
test
fidivrs
imul
jl
je
xor
xor
mov
enter
push
jmp
call
lcall
cmpsl
adc
test
cs
fdivrl
test
xchg
xchg
lret
xchg
mov
cmp
stc
xor
jb
stos
push
fs
dec
out
mov
or
pop
insl
lods
daa
addr16
iret
mov
cmp
mov
or
mov
push
push
cltd
xlat
fldcw
popf
sub
clc
popf
fcmovb
cmp
jp
enter
popa
xchg
imul
fstps
xchg
jge
jbe
roll
fcmovnu
pop
jno
jno
xchg
movsl
jmp
mull
pop
or
or
lret
repz
movsl
je
xor
popf
lock
jno
xorl
addr16
je
lcall
dec
cs
mov
imul
sbb
push
fbld
sub
add
fs
adc
jbe
pop
icebp
sub
adc
xor
xlat
jl
gs
pop
dec
or
mov
xor
punpckhwd
xchg
int3
mov
inc
xorb
and
or
sub
jecxz
xorb
testb
movsb
push
jno
cmp
fwait
mov
test
cmp
sbb
sub
mov
or
ret
movsl
dec
in
inc
pop
pop
add
inc
push
lcall
loope
pop
icebp
cmp
push
ret
fidivrl
jmp
jg
xor
adc
inc
pop
add
xor
pop
test
or
cmc
mov
in
and
add
adc
jle
mov
fsubrs
cs
cltd
mov
jae
adc
mov
xchg
movsb
lcall
push
push
mov
jo
xor
cmpsb
jp
les
test
jb
fsubrl
aas
out
jp
xchg
mov
dec
xchg
test
push
int3
jbe
ljmp
les
adc
ret
cmp
fwait
xchg
nop
mov
mov
sub
cmp
or
and
push
inc
int
jnp
mov
and
and
jnp
mov
jp
test
icebp
dec
cld
hlt
mov
pop
rcrb
mov
negl
inc
sub
rclb
in
out
pusha
dec
imul
testb
xor
aas
dec
jne
mov
hlt
or
add
int3
aaa
adc
push
push
sarl
push
pop
cmp
xor
leave
and
stos
lds
xchg
cmpsb
sbb
int3
fistpl
mov
shlb
lcall
mov
xchg
add
jecxz
or
ror
jg
mov
repnz
add
mov
fstps
nop
repnz
insb
pop
mov
dec
lock
cmp
sub
mov
dec
roll
xor
mov
jne
sub
fnstcw
iret
pop
add
cmc
pop
sub
xchg
nop
mov
mov
sbb
dec
hlt
shlb
in
fistpll
mov
mov
andl
hlt
les
in
int3
stos
lock
or
pop
mov
xor
xchg
jp
enter
enter
mov
dec
or
lock
call
or
cmp
es
dec
std
aam
sub
sub
mov
movsl
testl
ljmp
pop
fadds
inc
dec
jo
bnd
sbb
jmp
sarb
cmp
xor
push
cmp
sti
stc
xor
mov
lahf
mov
out
std
rol
rsm
mov
push
mov
inc
cld
scas
das
inc
stos
mov
sarl
add
mov
dec
aas
dec
jo
pop
out
cli
jp
cmp
fs
mov
cmp
pop
inc
icebp
fbstp
push
loope
sbbb
push
aad
fcmovnu
addl
cmp
fidivs
ja
nop
lea
or
lcall
push
sub
leave
mov
push
das
pop
inc
addr16
jnp
push
add
inc
cmp
jl
divl
push
pop
jno
xor
adc
lahf
mov
test
jne
inc
notl
xchg
xchg
lret
ret
jp
shll
xchg
mov
jle
or
iret
dec
mov
sarl
mov
sti
aaa
jb
xchg
iret
mov
or
jle
mov
dec
push
dec
sbb
imul
inc
aad
push
sub
or
xor
lcall
or
sbb
mov
cmc
or
mov
clc
dec
fildl
mov
xor
cltd
sub
lcall
clc
and
int
jb
sti
add
repnz
cmp
mov
in
repnz
push
or
jmp
add
mov
cwtl
jb
mov
adc
rorb
inc
add
lods
leave
cwtl
mov
xor
mov
jb
aad
add
sub
stos
repz
in
fwait
xor
lock
test
nop
cmp
out
mov
xchg
stc
mov
jno
cmpsb
cmp
cmp
aaa
and
clc
add
fwait
jnp
or
push
aas
mov
push
enter
mov
or
pushf
lock
daa
ljmp
push
adc
xchg
mov
adc
pop
pop
add
cmpsb
mov
nop
or
das
in
stos
sub
sbb
das
je
xlat
push
pop
movsb
rolb
inc
iret
dec
sbb
cmp
and
sbbb
lret
jo
ds
add
sub
push
clc
lcall
adc
mov
mov
enter
mov
insl
jae
adc
xchg
aad
cmp
mov
sahf
add
js
mov
stos
test
jl
lret
add
push
jb
lret
out
adc
loope
fcompl
or
rcrb
xchg
pop
rcr
fxch
popa
inc
or
lods
xchg
mov
fistpll
pushf
mov
popf
jne
xlat
in
test
xchg
dec
mov
jg
fcomip
aad
lret
outsl
xor
sbb
stc
or
pop
dec
adc
xor
xchg
test
stos
cmpsb
test
mov
pop
cmpsl
or
xchg
sub
ret
arpl
loopne
sbb
les
sbb
cmp
es
xor
aam
jp
sub
pop
outsl
mov
dec
insl
mov
pop
xor
sub
push
out
push
mov
push
mov
or
stos
hlt
and
inc
push
or
and
cmpsb
test
test
jg
sub
lea
idivl
jg
notl
jp
push
jns
sub
xlat
xor
mov
inc
stos
pop
cmp
aaa
xlat
dec
repnz
mov
call
es
add
adc
repnz
aam
pop
or
std
mov
and
fcoms
mov
in
pop
mov
insl
lods
fsubrs
xlat
fwait
in
cli
loope
fimull
dec
call
xchg
lods
mov
mov
xor
add
cmp
inc
add
ss
aad
cmp
or
mov
mov
mov
fldcw
mov
mov
insl
jmp
pop
jmp
cmpsb
jmp
cmpsb
fistpl
jno
fsubr
lahf
fwait
cld
es
hlt
mov
out
mov
pop
inc
mov
enter
mov
xlat
fildl
adc
movl
jne
jl
loope
loop
push
rcrb
inc
xor
pop
mov
ret
cld
fists
pop
sti
jno
and
inc
mov
ds
in
shll
inc
cmp
cmp
xchg
push
sbb
lahf
mov
pop
sub
sbb
push
in
jp
push
ja
jmp
add
hlt
add
imul
mov
push
mov
push
push
mov
jp
adc
xor
mov
mov
inc
stos
cmp
push
xchg
sub
lret
push
cltd
pop
pop
mov
ss
and
sub
leave
nop
data16
mov
xchg
inc
push
xor
loop
xchg
push
or
push
sbb
inc
jmp
fsubs
add
js
lock
fsubrs
push
push
shll
loope
adc
test
ljmp
xchg
aad
sub
push
jmp
mov
lret
rcl
sub
fcomps
sub
push
inc
mov
xchg
push
or
adc
cmp
xchg
dec
jmp
adc
mov
mov
fisttps
adc
fs
insl
cmp
sbb
ljmp
cmp
repnz
lods
js
or
lcall
sub
test
pusha
mov
xorb
xchg
popf
xor
pop
sbb
in
jbe
repz
rclb
pop
mov
outsl
or
lds
mov
sub
or
cmp
pop
and
in
mov
jb
jno
popl
imul
ljmp
lret
dec
and
dec
mov
das
in
mov
cmp
sbb
cmp
fildl
scas
lds
in
inc
adc
mov
mov
repz
xor
insl
sbb
inc
sbb
add
aaa
add
adc
xlat
cmp
in
clc
inc
fcomps
push
sub
jg
add
jecxz
das
fildll
xor
fimull
cmpsb
dec
movsb
stc
xor
sbb
xor
jno
rorb
jge
adc
dec
mov
shrl
push
jmp
mov
add
xchg
xchg
jno
lock
aas
xchg
or
daa
rol
xchg
pushf
sub
jmp
movsl
test
dec
repz
xor
icebp
cwtl
decl
in
push
xor
dec
cmp
stc
lret
cmp
pop
mov
or
sbb
ja
cmp
jmp
sahf
mov
hlt
adc
sbb
xchg
dec
dec
pop
sub
xor
in
xchg
mov
mov
adc
dec
testl
shrb
cltd
dec
pop
test
out
or
imul
mov
jno
jo
xor
aad
daa
aam
sub
sub
jns
mov
pop
xchg
pop
push
shlb
push
xor
push
cmp
mov
jecxz
div
xor
push
popf
in
push
out
in
add
rorb
xor
xor
ret
inc
das
lds
aas
subb
enter
adc
lcall
xchg
mulps
push
fxch
out
mov
fcomps
pop
mov
in
out
and
out
outsb
xlat
aas
jmp
mov
daa
aaa
pop
mov
add
pop
cmc
popa
out
out
stos
adcl
inc
stos
lret
adc
xor
pop
gs
fiadds
lock
mov
push
pop
dec
xchg
lret
push
dec
mov
push
hlt
xchg
iret
in
or
fmuls
mov
popl
gs
push
ficomps
push
out
push
clc
iret
inc
loopne
insl
addr16
int3
jnp
push
jl
lret
pop
cld
decb
adc
cmp
stc
sbb
mov
cmp
js
pop
mov
cmpsb
mov
out
mov
out
cmp
and
fidivs
daa
adc
mov
std
out
test
push
aam
jmp
add
adc
jmp
mov
add
or
lock
dec
mov
adc
inc
repz
bnd
xchg
add
jbe
shlb
inc
rorl
call
xor
cmp
or
dec
orb
aad
scas
aam
cmp
mov
stos
cmp
pop
cltd
movb
dec
sbb
into
jae
imulb
jmp
xor
pop
lret
xor
xorl
int3
push
daa
adc
mov
cmp
add
xor
cmp
imul
inc
jns
sbb
inc
xchg
xlat
in
push
subl
std
jg
ror
int
mov
outsl
ss
insb
cwtl
sarb
hlt
cmp
pushf
xor
in
or
xchg
data16
sub
data16
and
enter
pop
jmp
cmp
ja
add
add
ds
inc
std
push
cmpsb
push
imul
lahf
mov
inc
jecxz
iret
lret
inc
mov
pop
adc
shrl
pop
es
sub
sub
lret
add
dec
pop
push
mov
xor
and
adc
or
xor
jnp
mov
pop
imul
test
mov
jnp
adc
divb
mov
mov
insl
lahf
loopne
imul
add
cmpsb
sbb
and
stos
jnp
enter
mov
dec
push
repz
in
int3
adc
pop
jp
popf
orb
add
leave
or
pop
repz
cmp
sarl
or
push
push
xchg
cmp
push
in
filds
cmc
jle
in
xlat
imul
int3
mov
pushf
cs
cmp
sub
ja
enter
add
jo
cmpsb
mov
jnp
and
repnz
mov
pushf
mov
jnp
jmp
mov
push
lcall
imul
test
xor
aas
dec
in
leave
cltd
std
xchg
or
scas
push
loope
xlat
jo
aad
sbb
sub
lds
inc
sub
arpl
and
xlat
aad
icebp
xor
aam
xlat
and
ds
sar
fcmove
lds
outsl
mov
xorb
fwait
dec
loopne
jg
lea
in
jne
and
mov
mov
fwait
in
add
mov
xchg
mov
lock
clc
push
test
int
sub
push
xor
cmp
inc
stos
adc
jmp
jb
ds
fidivs
pop
xor
je
add
ds
mov
cmp
mov
xlat
daa
cmp
dec
pop
jnp
shrl
push
or
pop
lds
xchg
add
dec
aas
lret
jns
out
out
repnz
xor
hlt
mov
mov
int3
inc
ja
or
aad
dec
push
das
jmp
movsb
sahf
stc
pop
in
dec
cmpb
mov
mov
test
add
pop
xor
push
inc
out
xchg
aaa
das
les
push
popa
hlt
add
insb
fadds
and
fcmovnb
fcomps
xchg
fistpll
mov
adc
ja
or
cltd
pop
and
rcll
and
repnz
les
js
push
or
push
pop
push
les
sub
pop
adc
jmp
sar
jnp
in
push
or
jle
dec
out
bound
push
call
testl
push
lock
or
in
xor
xor
fs
ljmp
imul
stos
cli
jbe
fwait
cmp
aam
lcall
adc
mov
xor
outsl
fdivrl
insw
sbb
add
in
je
xlat
divb
std
dec
les
dec
push
aad
stos
arpl
jne
cmp
icebp
in
aam
subl
ja
mov
loope
mov
dec
mov
jns
stc
ljmp
mov
ds
mov
jp
enter
clc
popf
ja
enter
pop
inc
imul
cmp
pop
or
ss
inc
and
or
cmc
faddp
into
jbe
or
ror
inc
test
test
sub
lcall
pop
arpl
push
push
inc
push
xchg
mov
sub
pop
popf
mov
nop
jnp
and
jecxz
lock
enter
xor
aad
dec
lret
mov
les
pop
xor
pop
clc
sbb
dec
arpl
aad
push
pop
mov
out
pop
scas
inc
or
flds
lret
ss
mov
jg
xlat
dec
xor
mov
jnp
cmp
cmp
pop
sbb
enter
fcomi
cmpl
or
push
stc
mov
les
mov
insl
es
mov
xlat
mov
adc
mov
mov
pop
xchg
push
fnstenv
dec
pushf
xchg
fwait
cltd
push
mov
xlat
xor
fwait
adc
movsb
fmuls
test
fwait
scas
ss
and
dec
mov
jp
lods
push
mov
xlat
std
inc
popf
cs
push
sbb
pop
sbb
dec
push
pop
ret
int3
mov
fcmovbe
sbb
addr16
ja
xlat
hlt
inc
popf
fbstp
dec
pushf
xchg
xlat
add
jb
fwait
push
mov
leave
pushf
jno
pop
pop
fwait
and
lock
sub
fiaddl
in
sarb
pop
jnp
sbb
or
or
pop
data16
pop
lds
cmc
popf
xlat
inc
popf
push
fwait
ljmp
fs
pushf
ds
jo
jbe
in
ja
shll
push
ret
cmp
xchg
jb
subl
imul
clc
or
pop
xor
aam
mov
repz
pop
icebp
lock
jb
and
adc
sbb
pop
fistpl
out
pusha
sbb
ljmp
mov
inc
mov
sbb
push
xchg
mov
xchg
fdivs
fpatan
xchg
scas
fnstenv
jae
pusha
sahf
test
sub
aam
mov
je
push
xlat
test
or
cmp
sbb
cmp
xlat
mov
insb
push
mov
rorb
ja
push
inc
sbb
and
scas
sub
pop
xchg
fldl
mov
xor
fnsave
rcl
pushf
mov
push
sbb
pop
xlat
sub
mov
pusha
xlat
das
xchg
repz
jae
mov
xor
mov
xchg
mov
jo
xlat
add
add
call
clc
mov
clc
movsb
mov
lods
icebp
or
andl
pop
ljmp
test
push
ljmp
mov
in
xlat
in
push
push
cmp
mov
orb
xchg
pop
inc
mov
cmp
loope
in
fnsave
mov
dec
xlat
ficomps
sub
inc
cmp
sub
lcall
mov
mov
fistl
add
mov
lahf
loope
jbe
jnp,pt
mov
imul
cltd
lods
ja
adc
xlat
xchg
jmp
out
xlat
adc
cmp
cmpsl
pop
xlat
addl
fldt
lea
repz
xor
iret
adc
cmp
cs
fsqrt
mov
mov
iret
pop
in
outsl
mov
or
sbb
cltd
and
jmp
jp
cmp
sub
inc
mov
or
sub
stos
repz
mov
cmp
sbb
in
stc
lahf
fsubr
cmp
jnp
cmp
add
cli
fldcw
mov
mov
add
mov
cmp
sti
shr
fldenv
push
mov
call
jne
xchg
lcall
in
cmpsl
popf
pop
add
mov
mov
es
stos
dec
in
or
cmp
mov
jmp
out
lds
int3
out
push
adc
aas
xor
lret
pop
mov
gs
cltd
mov
cltd
loopne
jge
mov
add
cmp
movsl
cmp
lea
ds
push
leave
inc
xchg
adc
mov
ret
mov
fdivs
sarb
fnstcw
jo
js
fstl
fcoms
mov
mov
fcmovnu
inc
loopne
scas
adc
lret
fs
cmp
nop
push
adc
mov
sbb
mov
jmp
adc
mov
aad
sub
and
jo
imul
push
adc
or
subb
mov
add
sahf
rol
xchg
push
dec
loopne
jg
enter
bound
out
cmp
lea
clc
arpl
insb
lods
stc
and
sub
and
jae
cmp
stos
or
jo
icebp
adc
and
or
cmp
aam
dec
jecxz
xchg
in
mov
xlat
dec
int
cmp
jns
je
and
mov
push
in
out
pop
xor
jp
add
inc
jne
xor
dec
pop
mov
adc
les
rolb
pop
adc
mov
inc
mov
sbb
nop
xchg
xorb
repz
in
ss
inc
cmp
cmp
mov
xchg
sub
inc
mov
cs
sub
vphaddubw
push
push
jp
xor
lds
jmp
xchg
js
mov
push
subl
fwait
loope
cmp
pop
jns
cmp
or
shr
jg
and
jo
js
jecxz
icebp
nop
ror
or
in
loop
lret
aad
sub
pop
addr16
pop
aam
mov
mov
fistl
jno
dec
lcall
xlat
add
xor
repz
pop
pop
pop
aas
repnz
mov
mov
pop
xor
rclb
les
dec
mov
imul
push
in
xchg
adcl
lret
sarl
imul
int3
sbb
roll
mov
dec
mov
inc
cs
daa
stos
ja
cmpsl
cmp
or
mov
dec
mov
not
cld
repz
stos
adc
out
mulb
pop
jle
es
int
xlat
push
add
stc
mov
cmp
cmp
sar
mov
sbb
pop
sahf
ja
or
add
sbb
cmp
call
fxch
inc
xor
faddl
pop
testl
fsubrs
dec
shr
add
xchg
in
popf
fmul
pop
test
sbb
push
lock
insl
jno
in
iret
cld
sbb
jmp
jmp
cmc
pop
sti
test
mov
mov
das
inc
rorl
fists
sbb
lret
loopne
jns
adcb
mov
sub
inc
xchg
je
pop
adc
repz
ret
mov
sub
repz
cmp
push
xorb
sar
add
lret
mov
in
enter
sahf
push
int3
pop
clc
icebp
add
sub
dec
int3
sbb
push
rcrb
mov
icebp
pop
pop
adc
push
movsl
ret
xor
cltd
jmp
mov
xor
and
aaa
pop
lcall
dec
movsl
pop
sbb
clc
sbbl
add
mov
dec
fndisi(8087
or
mov
or
divl
or
inc
xor
dec
xor
cld
xchg
jnp
sub
mov
ljmp
lcall
ja
gs
pop
xor
out
in
stos
mov
lret
or
xchg
int3
lock
jmp
aaa
psubw
jnp
les
out
push
sub
sub
subb
dec
test
popf
inc
int3
mov
aad
mov
das
gs
mov
dec
mov
adc
xor
jg
repnz
idivb
xor
sub
stos
mov
mov
lea
xor
fs
std
pop
cmpsl
inc
lahf
ljmp
xlat
push
xchg
xor
icebp
pop
and
into
pop
hlt
fsubrp
ds
in
dec
sti
insb
rcrl
mov
aas
movsb
movsl
pop
dec
adc
inc
dec
push
aam
dec
xor
xchg
push
sub
xchg
mov
xor
or
int3
xor
add
rcrb
aad
fistpll
stc
xchg
bound
dec
inc
repz
jns
into
or
dec
sub
mov
loopne
push
iret
fidivs
movsb
xchg
pop
aaa
xchg
push
cmp
sar
enter
xor
idivl
xor
jg
test
xor
inc
cmp
movsb
popf
rol
cmp
cld
sbb
dec
decl
xchg
aad
lahf
lcall
ficomps
mov
fcmovne
lock
repnz
inc
inc
cmc
dec
add
adc
jb
mov
repz
adc
stos
sbb
sub
push
lock
dec
inc
xchg
cli
aad
push
pop
sbb
fsts
shlb
adc
js
inc
lret
dec
testl
cmc
dec
fiaddl
jle
arpl
in
dec
mov
sub
mov
or
and
sub
and
sbb
stos
daa
jmp
ja
movsb
cmp
adc
jecxz
sarl
inc
dec
push
movsb
or
into
cmp
daa
clc
negb
cmp
xchg
daa
pop
push
popf
imul
roll
adc
aad
inc
sbb
mov
imull
mov
inc
movsb
jmp
or
push
cwtl
cmp
lret
lods
stos
add
xchg
sahf
test
jge
adc
jmp
mov
xchg
movsb
les
jmp
lock
lcall
cmpsl
lret
aad
popf
pop
fisubl
add
adc
push
neg
mov
lock
stos
notb
xor
xor
inc
push
jbe
dec
add
xchg
adc
dec
push
in
lods
negl
mov
mov
in
iret
out
cmp
xchg
mov
pop
aad
pop
sub
imul
add
dec
int3
aas
dec
inc
fldt
fcmovb
dec
xchg
imul
dec
or
jno
mov
popl
sub
inc
cmp
xor
mov
jb
in
pop
cmp
cmc
imulb
aas
mov
jbe
pushf
jae
xor
lds
sub
dec
gs
or
loopne
pop
lcall
jmp
cmp
or
sub
pop
lods
mov
or
hlt
add
mov
stc
cmp
and
lahf
sbb
loopne,pn
mov
cmp
mov
jno
jecxz
xchg
and
inc
mov
ficomps
ror
hlt
arpl
sti
rcl
fisubrl
inc
imul
imul
mov
add
int3
pop
xor
cmp
incb
inc
mov
das
and
mov
mov
stos
mov
cmp
xor
in
loopne
lds
sbb
sub
cmp
int3
sub
pop
mov
jmp
inc
inc
out
test
cmp
inc
sarb
add
enter
test
ja
jns
cmp
push
dec
adc
push
lds
aad
jae
mov
mov
cmpsb
add
aas
xchg
xchg
roll
push
lret
in
xchg
push
std
test
scas
inc
push
mov
mov
xchg
repz
lret
jne
clc
add
lds
fsubrs
jnp,pn
mov
and
ret
lods
and
or
mov
dec
adc
pop
div
xchg
fcoms
dec
enter
xor
dec
xchg
or
xor
push
xlat
call
or
repz
dec
adc
mov
ja
imul
movsb
ss
hlt
std
cwtl
cmpsl
dec
jmp
sub
adc
or
outsb
mov
dec
cld
jnp
in
jle
cld
outsb
mov
sub
rcll
or
in
xchg
out
pop
stos
xlat
fisubrl
cmpsl
adc
mov
mov
sbb
stc
aas
popa
outsb
aad
loope
lea
xchg
cmpsb
xor
cmp
sbb
cli
xchg
jge
lret
test
mov
jl
sti
aam
not
fsubrl
mov
sbb
add
sub
addr16
data16
movsl
mov
mov
and
out
jo
cmp
mov
dec
flds
int
pop
push
scas
xchg
mov
loopne
in
dec
dec
mov
dec
cmp
mov
xor
repz
xchg
pop
sub
adc
cli
ss
xor
rep
out
sub
popf
dec
dec
ja
mov
push
jbe
push
xchg
sub
jp
dec
shlb
jae
or
ja
mov
iret
cmp
inc
sub
fcomp
lods
pop
shll
data16
or
sub
lods
testb
lods
iret
xchg
fwait
add
les
dec
mov
add
decb
enter
mov
xor
mov
fmulp
jbe
xor
dec
or
stc
jbe
mov
pop
out
mov
and
or
mov
dec
popf
mov
mov
int
sub
sbb
out
sub
aad
sbb
into
int3
fcmovnu
std
stos
faddp
sbb
jae
dec
ret
mov
push
aad
sahf
gs
mov
imul
enter
lret
cmpsl
bnd
fildl
ljmp
mov
sub
mov
sub
cmp
sbb
call
enter
mov
add
ljmp
adc
mov
or
sbb
mov
lcall
xor
aas
shlb
repnz
dec
stc
xor
mov
or
dec
or
cmp
fisttps
mov
int
fcmovne
mov
xor
insb
jmp
jmp
mov
push
dec
xchg
ret
aam
or
pop
cmpsl
subl
in
movsl
adc
jge
jae
rorb
movsl
xor
mov
dec
push
cltd
xchg
mov
mov
stos
or
push
hlt
pop
sbb
sub
pop
dec
clc
call
ror
test
mov
jb
insl
fcoml
in
or
popf
ja
leave
cmp
shl
imulb
mov
fdivrl
push
xor
scas
popf
lahf
lds
enter
adcl
loope
enter
lock
or
out
push
inc
stos
dec
push
hlt
jl
or
sub
cmpsb
enter
jg
cmp
shll
xchg
orl
push
mov
and
or
int
mov
int3
jo
cmp
imul
dec
push
dec
mov
ljmp
and
stos
mov
jmp
aam
ds
lahf
ljmp
test
insl
lahf
fs
xchg
cltd
jne
jns
scas
stc
lret
lret
push
pushl
or
xchg
sub
fmul
lret
in
cltd
in
xor
pop
pop
and
das
fmull
cmp
mov
lock
gs
pop
add
or
sub
pop
fdivl
mov
lds
cmp
mov
or
jnp
mov
cltd
xlat
jno
out
sub
dec
mov
push
fnstenv
es
mov
sub
and
je
mov
shll
scas
cmp
in
loopne
out
or
in
mov
scas
adc
cwtl
xlat
mov
add
das
xchg
jmp
jl
daa
jnp
arpl
int
fidivrl
js
jne
mov
mov
and
cmc
pop
inc
stc
jge
cmp
cmc
mov
scas
add
xor
dec
sti
fdiv
push
dec
je
movsl
cmp
pop
lahf
and
xchg
inc
jmp
dec
insl
cmp
jns
cmpsl
cmp
mov
bound
pop
popf
pop
or
addl
scas
pop
add
push
adc
mov
push
loope
mov
inc
cltd
xchg
lcall
push
or
cltd
mov
out
mov
lock
xor
add
neg
cmp
push
push
fildl
pop
fbstp
pushf
arpl
daa
cmp
cwtl
pop
cmp
push
mov
fucomi
adc
pop
pop
xchg
dec
pop
nop
lret
ret
or
sarb
pop
push
cmp
dec
cmpl
cmp
inc
nop
aad
mov
cmp
mov
divb
cmpsb
pop
push
movl
xor
sarl
out
aam
push
dec
fnstcw
lds
adc
lcall
inc
sub
inc
sub
mov
das
xlat
sbb
int
mov
mov
xchg
enter
mov
out
shr
movsb
cltd
mov
push
stos
ret
and
popf
inc
int
jo
xchg
and
les
inc
les
out
xor
pop
sahf
iret
mov
add
inc
xorb
cmpsl
rcrl
imul
xor
jne
arpl
nop
jg
cmp
push
aam
xorb
testb
call
iret
sahf
dec
aaa
sub
or
les
lcall
add
out
push
rcrb
jno
stos
inc
leave
push
icebp
sbb
out
cmp
lcall
dec
pop
xor
pop
push
jbe
pop
movntq
out
fldcw
jmp
add
jmp
adc
adc
mov
xor
mov
cmp
cmpsb
rclb
jne
push
push
adc
inc
push
int
les
pop
jno
xor
xor
outsb
aas
lahf
xchg
push
mov
dec
out
and
mov
js
xchg
aad
fdiv
pushf
sahf
xchg
xchg
arpl
fucomp
mov
push
dec
xlat
push
jnp
cmp
out
dec
dec
lahf
jne
mov
pop
dec
sub
out
push
mov
es
sbb
xor
inc
nop
sub
iret
sub
daa
js
negb
stc
rclb
ficomps
mov
pop
xchg
sub
loope
dec
mov
jg
in
mov
repnz
faddp
add
fmuls
dec
cmp
fstl
div
mov
adc
rorb
lods
push
inc
out
lcall
mov
push
arpl
cmp
loope
mov
mov
pop
or
jb
fdivs
repnz
and
cld
aaa
pop
xor
stc
mov
ds
inc
cwtl
add
lcall
ss
sbb
xchg
add
inc
inc
xor
fmuls
jecxz
jmp
jae
outsl
mov
inc
cmp
pop
in
jmp
pushf
xor
addr16
add
dec
inc
jne
push
leave
xchg
lods
pop
iret
pop
inc
insb
jnp
into
aam
mov
sub
ljmp
out
adcl
loop
cmp
push
loopne
pop
xchg
stc
arpl
dec
aaa
xor
clc
orl
out
xchg
sbb
sbb
mov
or
dec
flds
repz
cmc
daa
test
jg
mov
aad
jecxz
repz
rcrl
xchg
sahf
aam
dec
into
pop
out
in
cmp
adc
push
and
in
hlt
inc
popf
testl
pop
mov
or
inc
into
call
push
sbb
mov
cmp
mov
jo
pop
jno
adc
mov
int
mov
and
add
cmp
mov
or
mov
rcl
mov
adc
cwtl
imull
pop
stc
push
xlat
movsb
repz
std
or
loop
jne
dec
inc
mov
fildl
stos
sub
mov
jnp
mov
clc
dec
in
in
mov
mov
testb
mov
fisttps
cmp
push
ljmp
sub
aam
test
lcall
cmp
test
add
cmp
push
pop
jg
das
fildl
jnp
push
or
ja
adc
cwtl
cld
add
lret
push
rolb
push
adc
mov
rorl
incl
aam
or
lds
dec
sbb
dec
xchg
or
outsl
jl
cmc
jg
addr16
push
inc
sub
xor
sbb
xor
push
dec
clc
pop
and
adc
and
sbbl
cmpb
push
jne
pop
jmp
pop
mov
push
sbb
scas
dec
enter
fcmovbe
inc
fidivl
fwait
jmp
rcr
fistl
mov
and
push
inc
xchg
jo
cmp
iret
movl
xchg
scas
sbb
push
xchg
sbb
sub
or
aaa
adc
or
inc
rorl
daa
adc
mov
sub
and
mov
cmp
repz
rcrl
movsl
dec
push
movsl
push
cs
mov
fbstp
xor
xor
int
fsubl
mov
aaa
ss
mov
add
rcrl
adc
repnz
dec
adc
in
sbb
les
adc
aas
mov
jo
bound
mov
mov
mov
or
xor
scas
pop
inc
jle
je
fnstenv
pop
rorb
or
sbb
jo
fs
not
sbbl
es
ret
lock
jae
mov
xor
pop
lret
sbb
push
adc
xchg
mov
dec
mov
add
push
test
cmpsb
test
mov
sbb
iret
inc
or
add
add
dec
cwtl
aaa
sub
sbb
add
inc
clc
jg
fwait
inc
push
push
pop
loope
lret
nop
js
and
pop
jns
dec
fistpll
popf
xchg
cs
lret
aam
mov
enter
repnz
imul
in
into
cs
cs
push
mov
inc
jns
cmc
int3
jbe
loopne
jo
into
xlat
dec
pop
push
mov
inc
sbbl
lcall
loope
enter
or
and
xor
movsb
ss
testl
mov
add
pop
js
out
push
sbb
xchg
push
fcmovnu
jg
fsubrl
jne
pop
imul
adc
inc
aas
mov
cmp
adc
sbb
jne
push
rcrb
and
xchg
dec
mov
jo
js
ret
mov
es
xlat
repz
rolb
fs
das
dec
mov
or
stos
adc
fisubs
pop
sub
dec
and
push
sbb
mov
insl
out
out
movsl
xor
dec
pop
cmp
mov
adc
jae
mov
lret
ficompl
gs
dec
or
neg
loopne
lods
movsb
or
pop
pop
sub
mov
or
mov
in
dec
ds
test
jmp
psubw
loop
enter
inc
enter
inc
mov
shld
into
nop
mov
mov
dec
icebp
sbb
ss
out
jnp
mov
push
dec
dec
pop
xor
lret
push
ljmp
dec
fiadds
test
inc
nop
cmp
call
stc
cmp
ret
pusha
insl
js
or
or
clc
enter
out
ret
mov
or
adc
insb
xlat
and
lods
dec
imul
add
push
stos
ret
stc
mov
outsl
inc
sahf
mov
add
sub
mov
ja
mov
scas
cli
movsb
pop
enter
loop
mov
pop
out
add
add
or
dec
in
clc
testl
cltd
pop
icebp
or
jo
jle
repz
cmp
fdivl
or
cwtl
inc
stos
addr16
and
repz
js
inc
xor
js
clc
or
cld
imul
xlat
sub
cmp
aad
sub
lret
inc
sbb
cmp
sbb
mov
or
in
pop
lock
stos
cmp
cmpsl
movsb
add
inc
mov
mov
lea
and
nop
sub
sbb
push
mov
add
or
mov
sub
jnp
lret
xchg
cmp
stos
cmp
cmp
mov
pop
imul
in
out
push
mov
movsb
jne
out
lret
push
fmull
jb
mov
out
pushf
jnp
lret
in
insl
pop
addr16
xchg
jb
daa
int
push
inc
mov
and
xor
or
mov
pop
xor
pop
push
iret
inc
jae
jae
hlt
dec
sbb
aad
test
jg
push
or
cltd
mov
xchg
jp
movsb
mov
movsb
lods
aaa
pop
jno
dec
scas
or
mov
addps
cmp
jnp
mov
mov
push
pop
scas
jae
cmp
pushf
cmp
mov
mov
pop
mov
xchg
aad
aam
mov
mov
push
sub
dec
inc
and
les
mov
cwtl
int
push
and
jo
sbb
movsb
shrb
out
cltd
lcall
mov
bound
inc
pusha
mov
sbb
jne
inc
imul
aad
loopne
mov
jle
ret
jle
mov
cli
or
jbe
lock
fdiv
enter
or
ss
and
mov
sbb
jbe
dec
xchg
mov
sbbl
in
sbb
dec
lcall
jg
into
mov
sub
aad
inc
cld
jecxz
incb
sbb
push
aaa
test
or
xchg
insl
mov
daa
cmpsb
into
mov
mov
orl
sbb
xor
sahf
xchg
loopne
mov
xchg
or
adc
test
stc
mov
call
adc
push
push
test
nop
negl
cwtl
enter
pop
inc
push
xor
or
cmc
push
cmp
sub
fidivl
inc
mov
leave
adc
test
mov
stos
cmp
or
int3
stos
fimull
lods
cwtl
test
and
and
dec
or
rorl
shl
sarl
or
rcrl
xchg
push
pop
push
ja
mov
jno
mov
lret
enter
sahf
imul
rolb
jb
mov
in
or
fnsave
sbb
mov
call
jne
push
or
ljmp
jnp
inc
mov
push
scas
mov
sbb
cwtl
lock
rorl
jno
jg
loopne
movsl
sbb
jg
or
int3
sub
popa
mov
ret
xchg
dec
cmc
or
add
adc
cmp
int
add
test
sbb
jg
enter
pop
mov
sub
fdivl
out
dec
ret
je
pop
or
xchg
sahf
sarb
stos
push
aam
sbb
cltd
lret
shrl
push
clc
pop
xor
mov
sub
dec
loop
ja
int3
cmp
addr16
ljmp
pushf
jno
lock
push
movsb
xchg
or
add
push
daa
adc
cld
fcmovbe
daa
inc
fmuls
jg
add
cwtl
sub
adc
or
das
lea
xor
sahf
or
arpl
dec
push
stos
repnz
cmc
gs
dec
in
add
pop
add
test
mov
inc
out
xchg
lea
nop
lret
mov
pushf
rcrb
jmp
loopne
imul
es
add
jmp
sbb
xlat
movsl
sbb
or
sub
pop
xchg
sbb
inc
repnz
lods
cli
and
and
xlat
dec
sbb
xor
movsl
mov
hlt
mov
out
lods
push
jmp
fucomi
pop
out
int
in
mov
cs
loope
and
push
call
push
or
and
stos
cmpl
jae
jbe
jne
fimull
insl
xchg
add
sub
pop
mov
aam
cmp
push
or
les
enter
or
xor
hlt
cld
mov
mov
pop
mov
fwait
lock
adc
jmp
mov
dec
inc
in
call
iret
cmpl
cwtl
adc
jmp
mov
in
js
jne
imul
stos
add
mov
movl
push
cld
sbb
fldt
mov
testl
mov
imul
pop
inc
adcb
sbb
movsb
jmp
dec
aas
sahf
in
aaa
pop
mov
loop
lea
mov
movsb
pop
flds
leave
icebp
push
into
cmpsb
inc
sub
add
push
sub
or
dec
das
outsl
push
adc
xor
adc
out
and
mov
add
sahf
rorb
pusha
scas
into
cli
cmp
pop
sbb
mov
shl
mov
daa
cmp
jnp
add
xor
cli
out
jg
test
push
test
mov
add
lods
jns
ljmp
stos
mov
cmc
fcompl
mov
push
adc
out
lods
xor
lahf
cli
lcall
pop
jg
test
les
sub
jno
fdivs
imul
mov
sub
lea
pop
push
shll
out
arpl
adc
mov
aas
or
add
mov
cmp
or
ja
cs
dec
test
iret
ss
sub
ljmp
movsb
lcall
lret
aam
stos
mov
ja
mov
stc
xchg
int3
or
mov
negl
and
xor
sahf
test
aad
test
filds
dec
les
mov
lods
mov
or
or
test
rcl
mov
in
sub
add
mov
fistpl
push
sbb
lret
dec
aad
mov
mov
and
dec
data16
ja
in
jnp
incl
add
cmp
push
sub
or
ss
xchg
push
push
or
movsb
out
les
pop
pushf
adc
xor
enter
cltd
sbb
push
push
inc
aad
arpl
xchg
jae
inc
inc
push
pop
stos
sbb
dec
loope
clc
pop
in
xchg
in
inc
sbb
dec
test
loope
cmc
mov
out
push
insb
jp
push
dec
loope
mov
aam
xor
pop
cs
icebp
or
xchg
popf
mov
mov
stos
xor
mov
xchg
inc
add
negl
sub
sahf
jnp
mov
imul
sub
mov
mov
in
mov
sub
adc
jo
sbb
inc
shlb
gs
js
shr
push
daa
jge
adcl
pop
pop
out
push
xchg
jg
in
movsb
iret
cmp
mov
jmp
std
mov
jge
mov
sbb
pop
cli
stc
idiv
sub
aaa
insw
xchg
sub
sbb
fistl
adc
lds
cmp
sbb
mov
aaa
jge
mov
and
lock
aam
mov
inc
inc
lea
fildl
rorb
xlat
cmp
cltd
testl
mov
loope
arpl
pop
mov
push
addb
sbb
cmp
jge
xchg
daa
lods
xor
cwtl
aad
int3
dec
pop
clc
jnp
dec
in
jns
and
or
and
mov
sub
sub
push
icebp
dec
push
repz
add
jnp
movsb
add
xchg
pop
imul
xor
in
cmp
les
ljmp
jmp
xchg
dec
jnp
jp
les
fists
cmp
and
sub
jmp
in
ss
jmp
mov
xor
in
jmp
adcb
sub
dec
mov
cmp
js
shrb
rol
lods
or
mov
pop
mov
xchg
shrl
or
jns
push
shrb
aaa
lret
adc
nop
xor
mov
lcall
lods
movsl
popa
jmp
push
mov
adc
push
dec
sub
jmp
stos
xor
sbb
or
fs
stos
mov
pop
sbb
inc
loope
mov
jno
jle
dec
sub
jnp
dec
mov
ficompl
sub
call
inc
xchg
push
fmulp
push
sub
adc
sbb
sub
loop
stc
rolb
push
pusha
jae
repz
int3
jle
push
iret
pop
inc
push
daa
mov
pop
loopne
repz
repnz
lcall
daa
push
inc
adc
stos
les
cmp
test
xor
and
jbe
push
or
mov
pop
xor
xchg
rcll
stos
mov
ret
pop
sub
lods
movsb
cmp
sbb
sbb
cld
daa
lods
push
jbe
xlat
and
sbb
arpl
lcall
out
out
pop
mov
jnp
xlat
mov
fstps
cmp
cmp
push
mov
imul
pop
or
lret
pop
xor
sbb
push
sub
fcmovu
je
add
int3
ret
cmp
stos
xchg
dec
dec
pop
stos
fisttpl
cwtl
mov
or
fisttpl
mov
fstps
xchg
adc
dec
imul
xlat
mov
add
mov
or
cmp
push
out
in
pop
or
sbb
mov
pop
int
je
lret
shlb
mov
imul
cltd
sub
mov
cltd
xlat
pop
xor
fidivrl
imul
hlt
mov
xlat
and
popa
mov
inc
dec
jecxz
xorb
mov
pop
sub
dec
sbb
pop
movsl
fisubrl
xlat
xor
and
cmpb
xlat
add
repz
fimull
xlat
lcall
hlt
xchg
aam
dec
test
in
imul
lcall
pop
xchg
fidivl
xchg
add
hlt
cmp
enter
shlb
addr16
repz
fisubrl
mov
push
mov
push
shlb
sbb
push
mov
insl
sub
fimuls
xor
fisubl
sub
xor
xchg
js
bound
xor
dec
sub
mov
push
cmp
pop
xor
scas
fidivrl
lret
pop
cmp
sub
fldenv
repnz
shl
mov
fcmovbe
loope
cmc
ja
data16
sbb
clc
sbb
xor
loopne
sbb
fimull
jno
filds
mov
mov
pop
cwtl
xlat
lods
xor
cmpsl
lcall
jae
out
add
cmpb
pushf
das
pop
notb
sub
loop
add
mov
mov
xchg
xor
lock
jnp
xlat
cmp
bound
sbb
mov
or
ret
cmp
ficomps
push
cs
sub
add
and
adc
jg
clc
movsb
ss
cmc
ja
dec
xlat
pop
in
sbb
and
jo
lock
imul
push
xor
xchg
lahf
call
ljmp
push
mov
call
dec
into
pop
scas
loop
add
xchg
stc
cmp
mov
mov
mov
scas
dec
xlat
fists
pop
pop
cmp
pop
sbbl
jae
divl
cmp
xor
popa
arpl
inc
fwait
addr16
iret
std
sbb
xor
ret
add
imull
cmp
add
fistpl
mov
ficoml
sbb
test
mov
fstps
mov
mov
sbb
leave
mov
and
sti
js
add
mov
loopne
insl
cmpsb
sub
scas
xlat
rcll
or
mov
ja
xlat
cmp
jae
xlat
jo
aam
rolb
enter
xlat
jmp
push
cmp
add
push
fcmovnbe
ror
jmp
push
idiv
out
fistpll
xor
sti
sub
inc
inc
cmp
adc
ds
dec
lcall
jne
arpl
mov
mov
mov
jl
cltd
sub
ror
jb
jp
fwait
mov
or
cld
xlat
fwait
test
adc
movsb
jns
les
jnp
cltd
rcrl
lods
fisubrl
pop
pop
je
pop
out
xor
sbb
mov
stc
cli
pop
mov
in
add
sub
xchg
mov
cwtl
or
cwtl
fidivs
push
insl
lahf
add
popl
mov
scas
lret
fidivrs
mov
and
movsl
lock
daa
jge
inc
pop
or
pop
ljmp
repnz
jb
pop
and
xchg
adc
xchg
adc
xor
push
pop
cmp
pop
and
inc
scas
push
or
repz
loopne
ljmp
mov
or
or
adc
cmp
icebp
mov
push
repnz
aam
add
adc
inc
in
stos
aam
pushf
mov
cwtl
lods
sub
xor
dec
and
not
rorl
cmpsb
xor
pop
pop
push
pop
jecxz
sbb
icebp
fsubrl
shrb
test
repnz
dec
add
xlat
adc
jbe
cmp
pop
mov
add
jmp
add
sbb
out
xor
in
out
cmp
push
xchg
scas
cmp
jae
iret
dec
jnp
daa
ds
pop
sub
je
adc
aad
pusha
adc
or
dec
roll
cld
xchg
pop
call
jle
cmp
dec
or
decl
fimull
pop
andb
mov
xchg
test
pop
out
sahf
rcrl
stos
push
ds
xchg
lcall
movsb
movsl
aaa
sub
jno
inc
xchg
inc
popf
cwtl
lods
and
pop
out
mov
in
ljmp
mov
mov
add
and
pop
jecxz
push
in
push
sbb
lret
jno
in
jb
jle
inc
imul
mov
iret
mov
inc
sarl
outsl
das
pusha
xchg
test
aad
inc
pop
cmp
arpl
subb
dec
ret
mov
rcrb
push
jae
xor
iret
jae
dec
and
lds
pop
jg
push
mov
addr16
sbb
xchg
es
inc
or
adc
xorl
popf
jmp
adc
adc
xor
jmp
sar
sbb
xor
out
pop
and
pop
loope
cmp
push
ja
cwtl
test
dec
repz
shrb
xor
iret
fidivrl
lock
sub
inc
dec
repz
loop
int3
ja
repz
push
mov
xor
mov
and
insl
out
gs
mov
mov
sub
pusha
icebp
pop
xor
sbb
pop
jmp
jmp
loopne
mov
inc
push
dec
insl
clc
inc
fs
shll
pop
call
push
xchg
icebp
cld
inc
and
or
adc
rcl
out
mov
and
lret
xorb
cld
rcrb
inc
ficompl
int3
out
lock
mov
mov
dec
pop
stos
dec
or
and
bound
idivl
mov
pusha
or
push
adc
das
jae
fbstp
cmp
ficompl
std
leave
addb
imul
test
and
mov
inc
test
mov
in
fistl
jnp
out
xlat
sarb
and
sbb
shll
and
pop
jbe
xlat
in
ret
int3
out
insb
cmp
mov
mov
cmp
loopne
mov
dec
or
push
xchg
pop
in
in
cmp
dec
mov
jmp
jns
loopne
inc
outsb
mov
test
cmp
jle
movsb
loope
or
imul
pop
push
movsl
subb
adcl
add
rclb
out
cmp
les
jns
cld
or
testb
sbb
je
pop
inc
jp
arpl
jecxz
rclb
ret
fwait
out
clc
enter
inc
pop
dec
pop
jae
add
cmp
rorl
xchg
aad
or
lds
hlt
lods
jae
mov
lahf
in
loopne
clc
or
mov
mov
addl
jns
add
lcall
push
jbe
orl
insl
ljmp
mov
mov
xor
add
loope
add
mov
inc
fidivs
sbb
cmp
mov
dec
inc
popa
rclb
jg
mov
pop
mov
push
jge
mov
cmp
hlt
jmp
outsl
std
sub
mov
iret
mov
fidivrl
push
rcll
test
ss
push
fmull
fmuls
mov
mov
mov
xlat
in
out
inc
adc
mov
into
movsb
jg
sbb
les
popf
neg
fcompl
lock
sbb
gs
sbb
repz
fmuls
loop
dec
sbb
xlat
xchg
aad
dec
enter
xchg
xor
in
add
inc
ljmp
stos
dec
jge
or
or
lods
dec
xchg
or
mov
pop
lret
inc
fisttpl
insb
in
jnp
icebp
pop
pop
jecxz
loopne
rolb
add
sub
xor
cmp
cmp
into
pop
daa
notl
cmpb
lock
and
dec
jnp
mov
push
cmp
sub
sub
xor
or
add
xchg
sub
inc
pop
cmpsl
sbb
ficompl
cmp
inc
cmc
mov
adc
sbb
ja
mov
test
lcall
adc
enter
mov
out
or
sbb
sbb
enter
rorb
fildl
xor
sbb
cmp
sbb
mov
data16
mov
movsl
xor
add
xor
adc
lods
imul
sub
nop
mov
sub
dec
loope
movsb
xchg
adc
hlt
jmp
xchg
cld
mov
inc
addr16
fildl
sub
or
inc
xor
repz
jno
pop
mov
adcl
or
inc
stos
movsl
fs
add
cltd
push
inc
cwtl
ror
mov
fsub
xor
inc
lock
cmp
mov
add
in
out
mov
or
insb
iret
xor
push
shlb
xchg
cmp
stc
int3
iret
mov
cmpsl
dec
pop
in
std
pop
mov
pop
mov
sbb
cmc
cmc
sbb
dec
jge
cmp
xchg
sbb
sahf
jg
test
xchg
cmp
dec
out
je
cmpsb
inc
xchg
sahf
dec
ret
stos
push
repz
out
stc
inc
sub
pop
mov
xor
orl
rcrb
les
xchg
roll
lahf
cs
lods
jmp
mov
loopne
popa
int
cmp
jecxz
stc
movsb
enter
inc
cmp
out
dec
cltd
pop
xchg
push
dec
jae
add
fcmovnbe
addl
mov
sbb
enter
les
jg
add
inc
popa
out
hlt
pushf
icebp
jmp
rcrl
aad
repz
cmp
cmp
mov
push
push
cmp
mov
clc
decl
inc
sbb
jae
sbb
fisubrs
cmp
aad
or
inc
xor
aam
mov
or
lahf
jg
dec
cmp
in
mov
imul
in
sbb
and
pop
mov
inc
aas
push
lds
jae
lret
sub
or
movsb
add
xor
pop
ljmp
dec
hlt
jnp
pop
cmp
loope
mov
lea
fdivl
push
pusha
cmp
ret
xor
cmp
push
xor
add
rolb
or
not
add
inc
jno
sub
imul
rcr
js
icebp
push
fisttpl
in
insl
ret
cmpsb
out
imul
js
jb
and
mov
cmp
enter
xor
das
dec
arpl
and
mov
lret
out
int3
int
mov
inc
lcall
push
test
adc
cmp
cmc
or
and
adcb
cmp
cmp
fxch
pop
stos
dec
jmp
or
test
in
xchg
out
mov
ret
scas
jmp
in
fnsave
mov
jae
fcoms
in
dec
pop
ret
xchg
sub
stos
jnp
pop
roll
cmp
dec
or
mov
cltd
and
mov
leave
mov
mov
fists
leave
mov
les
add
repz
mov
add
test
into
push
jbe
cs
xchg
icebp
shr
dec
push
add
xor
adc
sti
test
push
cmp
decb
sbb
mov
jae
push
add
xor
push
pop
cwtl
mov
sub
cmp
push
inc
cmp
cmp
aad
xor
xor
and
adc
push
imul
sub
adcb
cs
xor
ret
jmp
out
push
push
sbb
adc
outsb
scas
mul
adc
and
cmp
dec
loop
push
inc
inc
and
dec
push
xor
in
mov
pop
lock
jno
cmpsb
xchg
pop
push
clc
push
dec
es
pusha
xchg
cmc
or
mov
pop
enter
enter
imulb
sub
gs
sub
pop
jne
arpl
xor
imull
out
mulb
push
add
daa
lods
add
jmp
fs
orb
inc
push
cmc
mov
push
mov
dec
ret
pusha
lret
sub
xor
idivl
lahf
adc
sub
pop
imul
push
lcall
in
sbb
jp
les
div
inc
pop
movsb
mov
jmp
neg
adc
jb
cmp
push
icebp
in
pop
cmp
fst
outsb
fisttpl
inc
adc
sbb
out
enter
js
jmp
ja
dec
mov
cmp
aaa
lcall
hlt
lret
push
pop
ret
sub
mov
push
and
xchg
fwait
dec
int3
outsb
stos
orb
cmp
or
in
ja
pop
push
or
xchg
cmpsb
out
fsubs
incl
aaa
in
xchg
movsb
subl
fcos
lcall
mov
sbb
inc
xchg
jecxz
stos
push
aad
add
or
pop
push
cwtl
fcmove
in
int3
loope
clc
popa
ljmp
les
cmp
cmp
xchg
dec
jge
mov
sbb
xor
inc
cmp
or
dec
test
inc
cmp
and
hlt
pop
mov
stos
dec
push
xor
inc
stc
ja
sub
jg
cmp
push
inc
fxch
pop
out
dec
add
out
push
fidivrl
xor
ljmp
or
ret
aaa
xchg
sub
pop
les
xchg
pusha
or
push
mov
jno
add
inc
out
hlt
mov
iret
pushf
dec
or
xorb
dec
ljmp
rcrb
fnstcw
and
cmp
clc
aaa
jo
xor
add
dec
stos
out
or
in
xchg
cmp
push
mov
sbb
or
inc
mov
adc
fwait
testb
call
xchg
mov
mov
add
mov
in
clc
mov
and
in
mov
jnp
jg
dec
outsb
divl
pop
mov
mov
inc
push
inc
mov
fcom
movsb
mov
add
cmp
movsb
adc
imul
ljmp
call
iret
adc
pop
lods
test
sub
subl
lock
fisubrl
inc
adc
add
jg
cmp
pop
ja
maxps
dec
inc
and
and
mov
sbb
inc
add
cmp
stos
cld
dec
jae
lds
mov
daa
cmp
lock
pushf
sub
lods
ss
lock
cli
int
dec
scas
push
push
iret
and
and
gs
cmp
into
or
adc
mov
sub
cld
dec
insb
aas
cmp
fstpt
call
in
adc
pop
sub
incb
push
pop
orb
push
lret
cwtl
mov
push
push
pushf
dec
ja
mov
mov
bound
divl
mov
cmp
and
out
lahf
out
xchg
int3
jg
xchg
fsubrl
xchg
jns
lods
cmp
pop
cmp
cli
in
test
xchg
jg
and
addr16
dec
push
call
mov
int3
enter
or
add
push
or
push
mov
push
mov
test
sub
and
out
scas
scas
repz
jns
arpl
ljmp
scas
mov
and
int3
dec
push
pop
loopne
and
adc
insb
popl
in
cmp
test
xor
pushf
jne
xor
stos
push
inc
sub
pop
push
imul
sahf
cmp
insb
fldenv
xor
insl
aam
push
jge
outsl
dec
dec
sub
mov
dec
sbb
stc
in
test
shll
add
mov
pop
jo
jbe
and
lock
int
cmp
cmp
mov
sbb
pop
add
repnz
daa
scas
inc
test
dec
cmp
or
loope
and
out
call
pop
adc
repz
arpl
fcomp
sahf
xor
sub
bound
cwtl
push
lret
mov
fwait
push
in
in
mov
mov
mov
ss
or
xchg
ja
imul
int
movsb
loope
in
xor
daa
cli
or
shrl
lcall
xchg
push
idivl
les
jno
jo
or
aas
fpatan
dec
xor
repz
xor
add
adcb
test
mov
lcall
outsb
andb
dec
xchg
ljmp
dec
push
pop
push
iret
mov
out
jg
cmp
jmp
stos
mov
sbb
sub
sub
inc
lcall
test
repz
repnz
int3
pop
adc
and
sub
adc
andl
fistps
popf
jae
mov
lds
sbb
cmp
push
jmp
lret
out
and
sahf
jns
mov
adc
pop
sub
dec
test
push
mov
dec
add
fincstp
and
fdivl
stc
mov
test
and
fildl
jp
mov
adc
push
movsb
mov
jmp
jbe
test
rcrb
aas
xor
cmp
ja
int
fistps
in
sub
pop
push
mov
incb
mov
icebp
nop
or
adc
jb
inc
mov
sub
je
nop
in
dec
sbb
pop
cmp
or
push
mov
in
fwait
sahf
or
imull
stos
jo
mov
stc
inc
jmp
jecxz
xor
pop
jmp
movsl
sub
in
fstpl
movl
in
rolb
sub
jae
xchg
mov
lret
ss
filds
std
mov
sti
stos
lcall
or
repz
dec
pop
cltd
sub
push
mov
pop
xor
dec
xchg
adc
lock
imulb
loope
cld
push
adc
pop
adc
adc
mov
sbb
div
push
nop
mov
cwtl
jp
lret
push
xchg
pop
mov
fcomip
jmp
or
stc
dec
lcall
fdivs
inc
jns
rcrb
aas
outsb
pop
jae
mov
cmp
sbb
adc
push
insb
aas
xlat
test
jae
xchg
scas
and
mov
jae
or
clc
shll
jmp
fsts
adc
mov
aaa
inc
push
ficoml
cmp
adc
or
add
arpl
out
fwait
push
ja
mov
xchg
push
mov
es
mov
fnstcw
pop
adc
xlat
mov
pusha
jae
in
dec
xor
and
xlat
stos
test
mov
or
insb
inc
jmp
xlat
mov
or
sbb
add
scas
mov
jae
mov
push
xor
xlat
cmp
xor
jecxz
sbb
push
jae
scas
es
clc
inc
jmp
pusha
enter
clc
inc
mov
iret
mov
clc
pop
ljmp
cmp
xor
pop
xlat
fisubrs
xor
jae
mov
out
subb
aam
or
inc
test
jecxz
in
inc
jmp
push
push
cld
inc
in
hlt
test
sbb
fstpt
or
nop
clc
mov
xor
xor
jnp
lret
lret
pop
inc
ss
xchg
ljmp
iret
lock
fs
cmpsb
jbe
mov
or
jo
xor
dec
mov
sub
jp
sub
call
shlb
mov
clc
insb
cwtl
jecxz
pop
jge
pop
xor
cmp
es
push
fnstcw
adc
mov
xlat
je
adc
clc
lcall
xchg
scas
aad
xor
mov
clc
pop
xlat
sbb
jmp
xchg
cmp
fidivl
jne
cmc
outsb
ss
and
lock
outsl
jmp
cmp
adc
jmp
and
lods
jae
and
inc
xlat
cmpb
jbe
addb
and
test
sub
arpl
xor
adc
or
jp
or
mov
fcomps
jo
pop
adc
repnz
lock
cmp
fimull
sub
mov
fnstcw
pop
cwtl
xor
fstpl
and
fsubs
loope
sbb
jnp
ja
add
lds
inc
cltd
outsl
pop
push
pop
mov
inc
in
imul
xchg
add
and
pop
xchg
inc
dec
jmp
adc
jle
and
subl
repz
and
sbb
cmp
adc
jecxz
xor
inc
xor
lcall
sbb
jnp
mov
adc
jmp
in
out
cmovo
push
clc
pop
and
lock
xchg
std
and
loope
mov
and
pop
pop
xchg
dec
test
fldcw
enter
dec
je
pop
xorb
scas
pop
icebp
in
orl
test
sbb
enter
jns
ficoms
fdivr
arpl
pop
cmp
enter
lea
int
lret
and
repz
in
jbe
out
cmp
inc
pop
out
pop
lcall
push
push
orb
mov
jmp
sahf
lods
jecxz
lds
les
daa
lods
cli
dec
test
pusha
and
loop
cmc
imul
subb
fyl2xp1
iret
and
pop
sub
pop
xor
pop
and
sub
cltd
xlat
sarb
mov
jnp
adc
hlt
push
repz
lret
adc
cmp
xchg
and
inc
rol
pop
cmc
loop
adc
ds
push
repnz
int
pop
sub
and
inc
test
stos
arpl
stos
adc
aam
sub
enter
in
scas
mov
and
push
loopne
and
stos
daa
add
repz
push
mov
insl
pop
aad
mov
sub
cmp
pop
ret
cmp
pop
mov
cmp
add
int
aas
push
jns
jmp
in
xchg
leave
cmpsb
lea
sbb
popf
cs
mov
mov
xchg
stc
fisttpll
push
jl
arpl
rorl
and
mov
sub
scas
cmp
dec
adc
xchg
sub
sbb
popl
sub
push
pop
push
push
inc
pop
xor
int
adc
dec
push
mov
fisttps
adc
xor
lret
pop
inc
adcb
pop
pusha
jb
sarb
cmp
imul
xlat
not
out
sub
jns
pop
xchg
data16
mov
sbb
xchg
add
jae
inc
pop
sbb
xchg
mov
cmpsb
out
popa
xchg
sbb
xor
icebp
pop
sbb
add
pushf
jns
imul
addr16
sub
mov
int
or
mov
mov
sbb
jl
push
or
orb
jl
mov
hlt
pop
rolb
clc
inc
sub
notb
pop
pop
lcall
mov
mov
sbb
sub
pop
mov
mov
or
fadds
cmpsl
out
std
push
jmp
mov
addr16
dec
loope
xor
adc
repz
movsb
mov
insb
jne
inc
sbb
cmp
loopnew
mov
mov
adc
stos
pop
and
sbb
push
xchg
aad
sahf
or
xor
cmp
std
dec
loopne
push
fstps
fsubr
pop
or
adc
and
pop
arpl
hlt
cmp
rolb
lcall
jmp
mov
dec
xorl
imul
negb
xor
sub
fistpll
pop
loope
fcmovb
sbb
lock
ja
mov
std
repz
lahf
cmp
sbbl
xor
xchg
icebp
out
add
cmp
jb
mov
add
cmp
and
outsl
xor
mov
cmp
or
cmp
rorl
shll
cmp
sub
mov
stos
xor
imul
in
sbb
xor
or
pop
fsub
jmp
iret
inc
lret
push
shll
xorl
pop
sti
mov
sub
mov
imul
into
es
repnz
inc
inc
movsl
stos
scas
rorl
cmp
lret
int
dec
enter
ds
sub
pop
addr16
cmp
and
ret
or
mov
sbb
in
enter
mov
je
mov
cltd
les
pop
sub
mov
pop
lcall
pushf
in
pop
sbb
les
adc
or
xchg
outsl
notl
dec
dec
fldcw
mov
lods
mov
xchg
or
outsb
aad
icebp
sbbl
inc
jns
mov
sub
in
dec
xchg
inc
js
fistpl
cmpsl
bound
in
inc
mov
lcall
enter
fucomip
loope
pop
pop
inc
xchg
mov
cs
fsts
cwtl
pop
sub
testl
clc
adc
popf
add
int
pop
xchg
stos
jmp
rcll
insl
faddl
xchg
mov
loope
cmp
or
fstl
inc
push
xchg
call
jg
cwtl
xor
dec
movsb
pop
or
and
cmp
les
enter
jnp
lcall
sub
cmc
push
xor
icebp
popl
cld
jns
inc
insl
testl
lods
sbb
jne
inc
adc
or
and
xor
cmp
sbb
es
sbb
ja
fwait
outsl
cmp
jg
mov
push
std
popa
orb
mov
jne
in
inc
pop
dec
call
movsb
cmp
mov
movsb
jmp
jno
mov
mull
mov
push
inc
aas
mov
fcmovnb
loope
cld
fcomip
js
aad
add
mov
or
and
and
sbb
xchg
icebp
inc
push
sbb
out
mov
bound
sbb
add
sbb
shlb
jg
jo
arpl
rcl
push
sbb
notl
repz
test
and
sub
and
xchg
jno
or
test
push
stc
push
add
lcall
arpl
jb
inc
jns
add
popa
int
cmp
lods
int3
push
jl
notl
mov
scas
test
fcoms
notl
idiv
pop
mov
test
test
sub
iret
arpl
mov
push
sbb
mov
out
push
or
or
popa
int3
inc
push
cs
cmpsl
mov
mov
xchg
scas
mov
jg
test
cmpsl
mov
imul
les
add
enter
mov
jnp
paddq
clc
adcl
mov
arpl
dec
dec
pop
pop
jle
pop
add
add
dec
jae
xchg
ja
aam
add
cmp
jnp
iret
xlat
in
subl
lahf
popa
and
cs
lea
adc
aaa
hlt
imul
mov
inc
jnp
fdivs
ljmp
push
test
fmull
jmp
sbb
imul
enter
jmp
cmp
pushf
pop
pop
arpl
xor
pop
into
inc
pop
jecxz
incl
cld
push
iret
mov
pop
pop
inc
adc
mov
sbb
repz
or
push
insb
inc
ja
cmp
loopne
sub
fadds
cs
aam
clc
jae
loopne
pop
shll
es
sbb
mov
or
pop
fsts
add
aam
ds
fildl
mov
xchg
jb
or
out
dec
cmp
loopne
inc
lock
inc
xor
in
jmp
int
push
jne
les
test
adc
xor
and
or
push
add
int
dec
int
sbb
ret
push
xor
or
repnz
pop
inc
add
mov
fisubl
cmpsb
add
flds
inc
stos
mov
fdivl
pop
or
test
add
jg
shlb
testb
mov
jge
xor
mov
xor
and
into
add
pop
imul
push
test
stos
dec
or
xor
mov
or
pop
negl
insb
mov
mov
inc
add
sub
out
dec
sbb
or
aam
xlat
or
lcall
stc
cmpsl
and
add
in
out
cmp
jbe
test
sbb
adc
incl
cmp
cmpsl
test
jns,pt
push
sbb
jo
lret
js
xchg
xchg
ja
mov
mov
xlat
cmp
mov
imul
xchg
mov
cmp
test
and
add
vphaddbd
xorb
xor
jecxz
dec
leave
ds
fsubs
cmpb
push
out
shlb
cltd
loope
or
pusha
mov
mov
xchg
adc
fistpll
imul
je
int
hlt
and
xchg
stos
shll
sarl
or
clc
stc
je
pop
dec
pop
inc
js
push
shl
aad
mov
test
in
sub
inc
xchg
add
fnstsw
push
imull
in
jbe
stc
xchg
ficoms
hlt
push
iret
or
jnp
mov
inc
push
test
daa
stos
push
jmp
pop
mov
xor
inc
sub
sahf
cmc
dec
iret
testb
and
push
aad
xchg
dec
clc
lret
pop
or
fiaddl
or
jae
sbb
pushf
js
cmp
iret
add
leave
sub
popl
cmpsb
stos
ret
cli
dec
xor
les
jnp
sub
in
jmp
xor
enter
pop
rclb
xor
mov
repz
cmp
fwait
lret
loop
xor
dec
test
es
sbb
mov
mov
inc
cltd
pop
fimull
jno
popf
repz
and
popa
push
xchg
xor
mov
push
push
mov
cmp
repz
test
bound
lcall
or
out
popw
push
shlb
cwtl
test
lret
enter
negl
inc
popf
insb
push
loop
xchg
cmpsb
mov
xchg
lds
mov
add
movsb
inc
push
mov
mov
mov
in
xchg
out
add
loopne
in
ret
xor
sub
pop
les
bound
dec
push
mov
fisttpl
push
movsl
lock
dec
adc
int3
rclb
icebp
cmc
rcrl
xor
sar
dec
in
rol
enter
fwait
in
mov
cmp
or
js
imull
xchg
scas
mov
xor
lret
or
jb
into
sub
insl
in
mov
enter
sub
xchg
pop
daa
mov
inc
mov
test
cs
jns
lahf
test
out
mov
pusha
push
sbb
shrb
dec
xchg
pop
clc
inc
xchg
repnz
stc
fcomi
repz
cmp
mov
lea
mov
or
lret
les
test
xor
mov
and
and
push
and
cmp
in
xchg
hlt
arpl
in
test
pop
jno
lock
xor
outsb
adc
jmp
rcrb
xchg
lock
dec
mov
or
push
sub
lock
sub
fistps
ret
dec
and
xchg
ret
cmp
or
bound
push
pushf
cmpsl
es
push
pop
pop
dec
mov
hlt
cs
mov
cli
sbb
pop
push
in
enter
adc
xlat
out
orb
xor
xchg
mov
lock
cmp
fistpl
ret
mov
cli
xsave
add
and
sbb
mov
pushf
sbb
dec
mov
jae
xor
xor
notl
in
mov
inc
push
dec
lea
dec
xchg
cs
test
push
pop
push
dec
mov
jg
cwtl
push
pop
sub
popf
outsl
push
int3
add
mov
or
adc
scas
sbb
call
repz
in
xchg
and
arpl
les
xor
insl
mov
push
mov
sub
scas
adc
ret
inc
xor
mov
cmp
push
mov
jmp
iret
cmc
jb
xor
pop
jb
cltd
sub
xor
jp
shl
dec
ret
add
enter
cmp
xor
dec
std
cmp
xor
sbb
mov
aad
mov
ja
xchg
sbb
repz
and
mov
sub
repnz
xchg
mov
adc
hlt
aas
enter
jae
sub
loopne
rcrl
in
js
cmpsb
dec
scas
lahf
aam
das
mov
sub
or
pop
shl
and
xor
add
cmpsl
sub
jno
sub
clc
arpl
out
xor
mov
dec
in
dec
and
loope
xor
lea
and
dec
enter
inc
adc
lcall
inc
xchg
lahf
inc
std
test
dec
xor
add
cmpsl
add
jae
stc
fsubl
aam
xor
jb
cmp
fsts
pop
pop
and
adc
mov
dec
sub
cmp
jmp
adc
lock
lock
aad
push
ss
mov
jg
repnz
iret
fadd
cmp
add
out
or
test
add
mov
dec
and
or
sub
lock
mov
adc
scas
fcmovbe
xor
repz
pop
xlat
repz
mov
fld
outsb
popl
mov
loope
xor
mov
das
popf
scas
add
or
jecxz,pn
loope
sub
ret
les
sub
jo
xchg
add
push
or
test
and
push
test
and
jmp
xor
lea
out
mov
out
or
push
sarb
imul
sbb
jmp
sub
pop
shrb
jne
out
or
cmc
sub
shr
xchg
pop
jnp
xchg
cltd
and
or
mov
les
jbe
inc
push
cmp
stos
push
mov
ret
ficoms
dec
and
add
cmp
les
leave
fstpl
mov
pop
cltd
dec
pusha
jae
lods
mov
cld
stc
loope
mov
push
leave
add
or
adc
xor
mov
cmp
xor
sbb
push
ja
push
jl
jne
xor
call
push
dec
mov
sub
cmp
out
stos
test
sub
js
jge
aaa
xchg
dec
gs
jne
jnp
or
add
push
add
mov
popf
call
dec
out
mov
leave
ljmp
dec
rcll
out
addb
fstl
or
mov
inc
add
testl
insl
jmp
testl
dec
xor
adcb
pop
ds
movl
push
fbld
flds
mov
push
in
hlt
mov
mov
mov
jg
nop
add
mov
pusha
roll
sti
mov
test
push
push
sub
xchg
pop
mov
out
mov
push
loopne
int3
jae
aas
mov
or
mov
or
mov
sub
sbb
xchg
pusha
les
xlat
aad
in
ja
aaa
loope
notb
or
movsl
sbb
push
add
into
scas
xor
sub
xor
les
lcall
cmp
jnp
pushl
pop
stc
and
cmp
sbb
cmp
mov
aad
or
adc
dec
pop
adc
mov
mov
int
mov
cmp
sarb
xlat
adc
cmp
mov
loop
cld
mov
cwtl
adc
pop
iret
xor
dec
addr16
push
loopne
sahf
sub
aas
iret
adc
jmp
dec
push
stc
or
clc
sub
mov
mov
out
cmp
xor
inc
pop
fstpt
mov
out
ja
pushf
lret
or
lock
adc
pop
mov
mov
fisubs
push
mov
loop
call
shll
repz
xor
sbb
add
into
and
inc
push
mov
xor
lret
mull
xorb
rcr
mov
jne
inc
jnp
jp
int3
mov
mov
js
rcrb
cs
push
js
orl
and
jg
clc
movsb
or
xchg
popa
cs
adc
pop
jnp
mov
cmp
pop
ds
sbbb
jbe
jnp
fucomip
or
inc
and
sub
add
test
dec
cmp
jmp
add
les
jecxz
cltd
add
js
mov
lods
inc
insl
push
call
pop
lock
sti
in
loopne
dec
sahf
add
push
pop
jmp
rcll
xchg
sub
xor
add
jmp
out
jle
clc
les
dec
fwait
les
inc
inc
imul
and
mov
xor
mov
or
jmp
ficompl
pop
mov
lock
inc
fstpl
cmp
jae
jmp
adc
add
fimull
pop
xor
dec
shrl
adc
push
in
sbb
ss
jmp
pop
enter
dec
and
jmp
or
repz
sbb
lock
pop
dec
adc
mov
dec
and
out
inc
mov
fistpl
out
sbb
test
ret
add
mov
mov
aas
xor
mov
sub
ljmp
jg
cli
cmp
or
pop
or
adc
xor
lcall
or
inc
jmp
fisttpl
lret
push
push
cmc
adc
in
mov
inc
or
int3
xor
repz
sbb
jnp
jecxz
fists
sub
insb
mov
jne
cld
pushf
leave
fildl
or
ja
mov
lret
je
mov
jne
adc
pop
pop
adc
inc
arpl
mov
fcmovne
push
lds
test
iret
cmp
outsl
xchg
in
loope
cmp
and
clc
enter
dec
sub
jecxz
shrb
pop
mov
ret
insl
pop
scas
sub
or
lcall
call
pop
fistl
dec
inc
push
aad
mov
popf
add
lock
mov
sub
jo
pop
lods
push
add
pop
sar
idivb
mov
repnz
xor
push
pop
mov
call
cmp
dec
add
jmp
adc
fisttps
xor
pop
movsl
dec
arpl
push
sub
jnp
inc
in
sub
ja,pt
mov
push
push
sbb
push
enter
sub
ficompl
pop
jbe
repnz
ret
out
lock
dec
insb
hlt
sbb
pop
into
enter
dec
cmp
inc
and
lock
xlat
xchg
cmp
mov
push
jecxz
pop
adc
ficompl
enter
inc
test
xor
add
gs
aam
test
jmp
movsl
mov
fdivrs
cs
adc
mov
mov
xchg
fisttpll
fdivs
jae
xor
int
imul
mov
mov
add
pop
mov
fistpl
std
int
fwait
int
scas
faddl
cmp
popf
cmc
jecxz
call
fadd
push
or
mov
bound
rcrl
test
and
add
out
loope
push
push
xchg
mov
jle
and
add
mov
loopne
mov
scas
push
test
dec
shr
aaa
sbb
movsb
sbb
pop
dec
lahf
aad
in
mov
mov
sbb
inc
int
and
dec
jmp
bound
aas
negb
test
jle
pop
je
cmc
push
sbb
adc
nop
movsl
out
or
jno
cmp
in
sti
pushf
daa
test
xchg
push
push
push
inc
dec
push
inc
mov
sub
fildll
sbb
push
xchg
adc
sbb
or
cmp
popa
mov
lods
les
and
push
inc
pop
xchg
popa
dec
push
pop
jmp
mull
jg
fsubrs
inc
sub
mov
adc
fisubrl
mov
jnp
fcompl
fs
mov
shlb
enter
inc
inc
ljmp
pextrw
push
add
add
pushf
pop
cmp
lret
lret
mov
icebp
cmp
cmp
mov
pop
jl
mov
sub
dec
cltd
xor
jmp
adc
mov
ja
inc
insb
dec
xchg
shl
rcrb
mov
and
in
sub
mov
aad
add
xor
decb
lock
lock
pushf
xchg
ds
mov
addr16
aam
adc
jbe
mov
stos
inc
cmpb
mov
xchg
jmp
or
push
shrb
bound
add
mov
push
test
rol
add
je
mov
int
sbb
sbb
jle
cld
mov
sbb
in
and
add
inc
jnp
stc
addb
xlat
or
clc
mov
roll
cmp
inc
adc
xlat
mov
in
iret
push
or
sub
mov
fcmovbe
cmp
mov
inc
sbb
xlat
sahf
call
fcmovbe
mov
sub
pop
adc
jmp
inc
adc
jmp
mov
rolb
adc
xlat
mov
clc
xorb
sub
xor
jae
pop
push
push
clc
or
pop
dec
sahf
pop
clc
mov
mov
mov
test
fdivs
and
out
lcall
xor
xchg
mov
scas
cmp
push
in
clc
xchg
in
cmp
xchg
clc
rclb
jle
mov
clc
ljmp
jge
xchg
clc
hlt
clc
sbb
cmp
xchg
das
cmp
clc
jecxz
jge
sbb
ja,pn
add
add
cmp
xchg
pop
push
push
sar
pop
inc
jl
test
aaa
imul
push
cmp
dec
adc
sbb
test
cmp
sbb
mov
rorl
iret
or
int
loopne
clc
insb
orb
pop
add
add
cmpsl
test
cmp
rorb
and
inc
mov
mov
xlat
orb
jmp
xlat
pop
jbe
pop
mov
pop
flds
pushf
push
sbb
sub
jae
mov
push
cmc
or
out
icebp
fidivrl
je
adc
loope
jnp
push
xlat
lock
mov
mov
mov
int
pop
imul
sbb
sbb
push
mov
ficoml
ljmp
mov
adc
mov
fwait
or
fldt
fwait
xchg
xlat
rcl
xor
xor
xlat
sarl
inc
inc
or
scas
adc
sbb
inc
hlt
add
sbb
subb
adc
fwait
insb
shl
sbb
push
xor
fcmovu
push
ss
cmp
loope
pop
jnp
fisttpll
sbb
aad
xor
cmp
push
jae
or
push
xlat
push
and
xlat
sbb
out
fwait
mov
call
pop
jo
add
push
sbb
fistl
hlt
jmp
out
xlat
aas
aad
mov
push
pop
out
movsl
xor
lods
fsubl
push
push
mov
sbb
popf
jne
adc
push
xlat
sbb
aad
lcall
das
inc
imul
xor
out
jmp
ja
fcmovbe
inc
push
jbe
ret
sub
ret
aad
mov
jno
je
hlt
add
xlat
icebp
mov
outsb
fidivrl
adc
xchg
push
aad
push
ja
xlat
and
scas
sub
cmp
insb
pop
mov
cmp
mov
or
hlt
xlat
leave
fdiv
adc
ret
cmp
sub
xchg
fstpt
es
adc
outsl
test
dec
neg
ja
xlat
movsb
mov
xchg
stos
xlat
adc
dec
or
outsl
stc
lods
xchg
mov
mov
ljmp
pop
cltd
push
push
xor
std
repnz
and
es
cltd
cwtl
stc
and
jg
pop
xchg
xor
ljmp
mov
dec
ss
sbb
shlb
inc
xchg
pop
mov
pop
sbb
fwait
mov
rcr
ljmp
sbb
mov
mov
jae
lock
mov
cmp
das
push
mov
cli
xchg
sbb
and
not
mov
enter
xor
sub
xlat
stos
out
fwait
push
mov
dec
jo
sub
cmp
adc
or
mov
jmp
fld
and
lock
or
jbe
stos
shrl
xor
jae
or
stos
cmpb
adc
xlat
or
add
not
mov
notl
xlat
in
addb
xlat
and
scas
push
sub
repz
fistl
fistpl
dec
adc
mov
pusha
ss
mov
hlt
or
ja
aaa
xorb
aad
push
mov
aam
push
xchg
arpl
push
xor
xlat
mov
ret
push
xor
mov
push
push
pop
xor
push
xlat
xchg
push
pop
xlat
scas
jae
jnp
xchg
add
xlat
sub
add
aam
adc
adc
dec
xor
ja
push
or
jmp
pop
enter
inc
xchg
dec
sahf
outsb
push
insb
ror
or
aad
data16
cmp
mov
addr16
adcb
pop
push
pop
dec
jne
jbe
sbb
out
inc
aad
lahf
mov
mov
dec
jp
out
popf
test
lock
mov
jbe
shl
cmp
cs
mov
push
enter
push
jmp
cmp
sub
dec
ja
testl
add
pop
in
jae
sub
pop
jecxz
popf
mov
mov
out
lahf
fildl
mov
and
pushf
imul
pop
pushf
or
dec
shrb
scas
jae
rcrb
dec
test
push
testb
lods
mov
ja
pop
or
fadds
add
aas
fsts
mov
popf
pop
push
cmp
and
enter
cmp
sub
mov
cwtl
hlt
mov
lock
orl
add
mov
inc
and
xchg
rcrb
push
jnp
sahf
test
jno
ja
pop
cmp
push
imul
mov
aam
xor
repz
sbb
aaa
popf
ficomps
mov
cltd
ret
adc
xor
stos
in
jnp
ja
fisttpl
fidivl
fstps
call
clc
jo
fistpl
sub
jp
mov
mov
cltd
xlat
call
sub
fld
shll
cmp
mov
fiaddl
cmp
sbb
pop
mov
into
andb
sub
jns
sbb
cmpsl
sub
push
enter
xchg
sarb
lea
mov
xchg
aad
inc
aaa
sbb
lret
cmp
loop
mov
mov
aaa
cmp
jbe
out
xor
lods
sarl
insb
cmp
pop
sahf
nop
jmp
mov
jecxz
xorb
jno
or
sub
dec
jecxz
iret
test
iret
sbb
js
mov
pop
mov
testb
jp
nop
frstor
cmp
imul
xor
mov
sub
call
add
out
mov
pop
adc
aad
dec
dec
sbb
shll
sbb
adc
adc
push
sbb
dec
stos
popf
aad
mov
sub
sub
lock
ja
pusha
aad
fldpi
sub
iret
pop
scas
sub
inc
lods
inc
jle
adc
and
cld
pop
cmpsb
in
imul
sahf
ja
pop
pop
es
sub
rorb
das
jnp
repz
pop
ja
adc
jns
mov
in
call
aaa
dec
jb
adc
jmp
std
add
cmpb
mov
adc
fnstenv
sbb
les
imul
fildl
pop
mov
or
adc
clc
sub
pop
jnp
dec
flds
testb
add
push
add
jae
repnz
add
rcrl
cli
fucomi
jns
fldpi
pop
aam
ss
filds
mov
sub
or
xor
sub
push
push
mov
xor
xchg
push
xor
jecxz
xchg
and
cmp
notb
or
outsl
push
pop
sub
xor
lods
mov
push
psubusw
mov
negb
inc
ja
cmp
mov
sub
sbb
hlt
or
add
pop
std
cmpsl
js
sahf
stc
ljmp
rorb
push
ja
test
pop
popf
jl
mov
insb
cmpsb
or
loopne
mov
movsb
xchg
adc
fcomip
cmp
pop
in
jo
inc
inc
mov
mov
stos
xchg
add
aad
sbb
adc
jg
add
pop
hlt
push
cmp
jb
and
fcoml
mov
sahf
nop
fiadds
inc
pop
ljmp
dec
xor
push
adc
enter
cmp
adcl
jl
dec
pop
iret
movsb
pusha
dec
arpl
adc
stc
sub
nop
adc
xlat
in
js
lret
inc
push
cmpsb
jne
int
lea
lds
cmp
xor
aad
inc
xor
add
or
inc
sub
shl
lods
mov
stos
int
testl
fistl
subb
add
sbb
iret
mov
adc
outsl
inc
loopne
sbb
dec
scas
xor
inc
sbb
adc
jecxz
inc
out
outsl
daa
or
popf
imulb
jbe
imul
repz
sbb
jle
pushf
add
ret
xor
int
push
mov
cmc
sbbb
ret
cld
dec
cmp
inc
shll
xor
jno
dec
lock
pop
pop
or
jmp
sub
cmp
jno
xor
adc
or
mov
mov
jge
cmpsb
fdivs
or
mov
xor
pop
adc
das
mov
aas
lods
pop
int
aam
in
jbe
negb
sub
jb
mov
js
iret
shlb
fistpl
adc
mov
xor
imul
xor
sub
je
mov
int
sbb
cmp
sub
aad
fsubs
lret
xchg
add
lahf
scas
push
fistpl
stos
adc
imul
mov
mov
gs
dec
push
stos
dec
adc
fdivs
movsb
mov
imul
fbstp
ret
repz
out
add
call
pop
int3
sahf
shl
rep
dec
pop
cmc
movsb
mov
jge
dec
pop
mov
mov
or
mov
rcll
xor
test
or
outsl
cwtl
adcb
push
jmp
dec
mov
clc
jae
stos
stc
ja
std
std
xchg
or
lahf
vpsllq
mov
cmp
repz
in
fisttpl
push
ds
mov
sbb
stos
adc
sbb
loope
or
popf
loope
int3
cltd
aad
sahf
ret
mov
jecxz
mov
cld
adc
mov
enter
enter
sub
pop
cmp
xor
imul
lcall
clc
push
xchg
mov
in
add
sbb
cmp
sbb
scas
mov
jmp
into
xor
and
enter
jp
add
dec
add
into
test
int
dec
sahf
jecxz
clc
inc
mov
rcr
lret
or
push
pop
jecxz
lret
push
int3
movsb
test
cmc
in
in
add
je
fdivs
movsb
addr16
out
jmp
mov
lock
sahf
dec
jbe
fwait
jae
adc
mov
bound
sbb
mov
push
pop
pop
stc
xor
fwait
cmp
pop
stos
rorb
and
rorb
dec
pop
jecxz
mov
push
jp
or
cmp
nop
pop
cmp
mov
ljmp
mov
aad
pop
push
addr16
pop
jo
and
leave
mov
stos
fsubs
sbb
pop
aad
aad
sbb
mov
xlat
inc
mov
mov
add
pop
orl
pop
popf
xchg
xchg
xor
cmp
and
int
mul
pinsrw
repnz
cs
push
mov
int
daa
scas
push
lret
add
dec
mov
cmpsl
mov
jae
ds
jns
xor
rcr
sub
aad
je
in
mov
jo
sub
addr16
jmp
pop
dec
mov
adc
mov
jns
xlat
imul
das
mov
rorb
dec
dec
cld
loopne
mov
pop
mov
out
cmp
orb
push
sbb
jl
scas
inc
cmpb
mov
negl
jle
add
xchg
cmp
mov
xor
stos
repz
dec
sbb
xchg
add
mov
bound
enter
outsb
loop
jnp
sbb
xor
jae
jmp
or
fisubs
sub
shlb
lea
movsl
outsb
push
test
push
or
repz
xchg
incl
mov
jmp
lds
jl
out
hlt
jo
jne
and
out
lock
sbb
mov
dec
xchg
xor
push
dec
stc
jnp
add
in
jg
xor
fwait
ret
cmp
xchg
cwtl
in
loopne
ror
sub
in
cmpl
jmp
push
in
cli
push
stos
pop
in
hlt
adc
cmp
dec
scas
jnp,pn
outsl
add
jle
rclb
cmp
cmp
aas
push
cmpsl
pop
or
dec
mov
not
in
jg
inc
mov
hlt
cwtl
out
mov
outsl
fistps
cmpsb
dec
xor
mov
sub
jo
pushf
call
int
xchg
dec
insl
insb
sub
je
leave
or
test
popf
jb
pop
int3
loopne
test
and
scas
jae
sbb
xor
sbbb
mov
outsl
adc
out
dec
add
cltd
or
jo
pop
fisttpl
add
sbb
mov
test
repz
xchg
int3
stos
lds
or
pop
or
xor
adc
cs
xchg
add
mov
repz
sub
jno
add
addr16
cmp
fstpt
cmp
adc
faddl
sbb
pushf
push
sbb
and
mov
pop
push
fadd
insl
add
xchg
sub
arpl
rcr
and
bnd
jae
jne
xchg
sub
add
jp
and
or
out
cmc
cmp
add
js
pop
in
sbb
mov
lahf
jnp
cmp
ficomps
cmp
mov
ficomps
fidivrs
cmp
lcall
shll
cmp
dec
ja
sub
cmpsl
pop
or
hlt
out
shll
pushf
addr16
pop
bound
adc
sub
sub
fildl
sarl
jnp
sbb
scas
cli
cs
test
pop
cltd
jmp
xor
add
loopne
or
cltd
cmp
movsl
test
rcrb
jns
fwait
xchg
add
xchg
and
loop
cli
cmp
int
cmc
shlb
fisubl
in
faddl
aad
popa
mov
fcmovu
clc
fcoms
fdivrp
cmpsb
dec
dec
rcrl
clc
mov
repz
mov
and
outsl
in
test
test
in
cmpsl
aad
mov
popf
fidivl
sub
mov
xchg
in
arpl
jno
xchg
inc
xor
mov
sbb
pop
sbbl
cli
sub
aam
bound
pop
pop
aas
xlat
es
sbb
or
pop
jp
mov
jo
cmp
js
std
push
dec
xchg
shlb
dec
adc
pop
aad
mov
andb
nop
jge
and
loop
aas
das
das
lcall
dec
insl
subl
add
test
jl
mov
sub
outsb
jae
dec
shll
outsl
and
xor
call
loopne
ficoms
stos
and
inc
xor
push
jecxz
cwtl
or
pshufw
inc
push
dec
mov
cmp
loop
lcall
out
add
pop
cmp
dec
push
addr16
dec
lcall
and
mov
dec
cmp
imul
pusha
loope
xchg
les
loope
adc
shlb
inc
int3
push
scas
insl
out
idivb
mov
pop
jbe
scas
arpl
cmp
mov
and
les
scas
jb
and
adc
jae
inc
cli
call
xlat
mov
sub
add
and
push
pop
repnz
jne
into
pop
movsl
inc
movsb
shll
idivl
adc
or
or
xchg
fcmovnu
les
out
mov
aam
cld
adc
mov
insb
mov
jle
iret
xchg
lea
pop
cmp
jmp
sub
xor
imul
push
xchg
sbb
in
jge
pop
cmpsl
xor
xchg
push
xchg
cmp
or
jbe
pop
inc
aad
test
mov
cld
test
sarb
inc
dec
roll
cld
jnp
rorb
in
jbe
ljmp
imul
cmpsb
arpl
add
mov
mov
sub
or
aam
inc
push
std
and
or
xchg
cltd
sbb
aas
enter
jg
sbb
or
inc
stos
stos
aaa
dec
fnstsw
inc
fldt
popf
mov
dec
cmp
pop
pop
jl
inc
sbb
das
clc
cmpsb
cmp
cli
cmp
outsb
push
mov
add
mov
sub
mov
enter
cwtl
sti
sbb
xchg
pop
pop
ret
rep
dec
hlt
es
xchg
dec
mov
mov
clc
and
das
test
push
dec
packssdw
scas
adc
packuswb
cmp
jo
cmp
inc
inc
sbbb
notl
sub
lahf
xchg
js
inc
stos
int3
stos
push
repnz
jb
sbb
mov
pop
out
dec
mov
popf
ss
lods
das
rcl
push
rorl
das
mov
jne
or
into
jbe
enter
aad
sub
dec
jmp
mov
sbb
sub
xchg
xor
mov
repnz
ljmp
lahf
jb
and
and
inc
enter
cmp
or
insb
or
cltd
jp
jg
aaa
sub
inc
fadd
int
sub
jmp
lahf
in
fistl
xor
inc
out
dec
mov
push
movsb
clc
fcomi
ds
stc
hlt
cmpsl
int3
or
jmp
push
dec
cmp
or
mov
inc
mov
decl
cmp
jp
xchg
dec
jb
or
das
ds
mov
push
cmpsl
andb
cmp
cmpsb
leave
pop
cmp
adc
fcmovne
mov
cmpsl
adc
test
ss
popa
sahf
mov
jne
dec
loopne
ss
push
add
ljmp
adc
stos
dec
mov
es
jnp
xlat
add
das
mov
mov
std
ja
xlat
mov
loop
data16
call
xchg
push
outsb
hlt
push
imul
js
int3
push
adc
ljmp
enter
ja
daa
xlat
jb
nop
stc
push
clc
das
push
mov
xlat
fcompl
scas
imul
and
xlat
sbb
mov
jbe
out
mov
xlat
mov
push
mov
inc
mov
mov
jae
das
es
push
jne
dec
xlat
mov
xlat
sarl
pop
xlat
xchg
mov
mov
cmp
jp
xor
aaa
jbe
xor
lret
jns
cmp
test
hlt
pop
sub
push
ljmp
mov
adc
loop
outsl
cs
mov
jnp
cltd
push
fistpl
xor
mov
faddl
cmp
jmp
jbe
adc
imul
push
xor
bound
add
repz
cmp
call
push
cltd
sarl
ja
out
insl
cltd
xchg
lahf
stc
lahf
int
fldl
or
pushf
jnp
lock
cmp
aad
int
mov
int
fsubs
jbe
not
call
fdivrl
push
jg
xlat
jae
sbb
por
rcrl
pop
cmpsb
adc
imulb
lahf
js
mov
out
stos
inc
repz
jne
iret
incb
ret
cmp
int
or
pop
jne
jmp
mov
sub
out
cmpb
jnp
sbb
cmpsl
cmp
out
jp
jp
sbb
adc
push
jmp
imul
pop
cmp
xchg
add
lret
mov
mov
insl
mov
cmpsl
add
push
mov
mov
ds
ret
inc
dec
data16
test
cmp
add
jae
pop
lods
jg
mov
test
ror
mov
inc
mov
sbb
mov
cmp
inc
fsubl
adc
dec
cmp
lret
mov
mov
lret
dec
orb
les
xchg
stos
ja
fistl
sub
push
cmp
jle
sbb
sub
xlat
sub
lock
push
fldt
std
cmpsl
repnz
mov
adc
push
push
aad
cmp
jmp
fcomps
test
mov
rorl
testl
xorb
fldt
cmpsl
ljmp
pop
sar
imul
rcr
rcll
dec
clc
stos
rcll
inc
adc
fldt
or
mov
add
lcall
xchg
fs
ret
pop
aaa
test
mov
sub
xor
repz
in
test
pop
xchg
xchg
jle
stc
inc
cmpsb
xchg
cmp
add
and
popl
aad
mov
sub
push
pusha
test
inc
clc
sbb
push
inc
adc
pop
jp
inc
dec
mov
adc
adcl
jbe
dec
mov
shlb
imul
scas
push
jo
outsb
jno
mov
or
dec
nop
push
pop
pusha
sarl
mov
pushf
mov
scas
dec
imul
add
addr16
inc
xchg
sbb
xor
lods
in
xor
cmp
cmp
shll
mov
les
xor
popa
mov
sbb
enter
xchg
int
fdivrl
pop
dec
or
loope
idivb
xchg
mov
out
or
lods
mov
insl
rorb
leave
rolb
int
dec
add
imul
dec
into
adc
aad
pop
lcall
mov
ss
jnp
dec
pop
push
sub
stos
ret
sbb
mov
nop
nop
pop
loopne
enter
mov
lods
sub
cmc
sbb
cmp
cs
fnstenv
fcomi
pop
inc
in
jle
jnp
stos
out
popf
fiadds
lahf
imul
call
lret
jbe
stos
push
dec
mov
pop
in
pop
adc
or
mov
stos
push
clc
inc
out
popf
sahf
cwtl
cld
push
push
push
push
and
aaa
inc
jg
imull
test
mov
mov
mov
push
cmp
fstps
cmp
sbb
jg
xor
push
lahf
or
outsb
int3
int
movb
lds
dec
lcall
sbb
mov
xchg
clc
inc
mov
pop
fisubl
sub
push
test
mov
sarb
xor
repz
sbb
push
aam
push
add
iret
push
add
enter
cmp
ret
dec
subl
fcmovnu
inc
cmp
in
jnp
add
ret
adc
xchg
or
mov
adc
inc
int
sahf
or
jnp
cld
jo
pop
dec
and
xchg
sarl
lcall
mov
or
dec
rolb
mov
cli
out
addb
mov
mov
add
xor
mov
ss
fnstcw
xor
cmc
jle
mov
fcmovnbe
cmp
lcall
or
arpl
mov
inc
ret
or
sbb
adc
jno
dec
out
sub
ljmp
lcall
jb
jns
add
out
sbb
int3
push
stc
and
inc
fs
movl
or
movsb
ss
or
and
hlt
xor
faddl
fldenv
cli
xchg
and
add
pop
aas
fidivl
pop
dec
sbb
cs
jge,pn
dec
jp
pop
notb
dec
stc
fdivrl
ja
ss
sbb
mov
sbb
imul
incl
pop
sahf
xchg
lock
mov
fstpt
pop
sub
test
imul
lods
sub
int
pop
xlat
jbe
jle
xlat
inc
mov
or
add
and
fcomip
add
push
sub
add
sub
sbb
cmp
mov
xlat
popf
mov
lcall
mov
enter
or
sub
add
mov
jnp
dec
xor
aam
push
movsl
ficoml
mov
lods
push
inc
test
lret
ds
cmc
les
leave
stos
imul
les
in
int3
bound
les
int
int
movsb
xlat
pusha
cmp
rep
mov
in
andl
add
jnp
div
mov
xchg
xor
sbb
popf
push
icebp
rcll
clc
gs
sbb
dec
aaa
aad
xchg
sub
jmp
stos
cmp
pop
push
cmpsl
xchg
dec
ds
and
and
mov
aad
stos
ljmp
in
movsl
fstpt
lret
cmc
scas
push
repz
iret
adc
xor
mov
push
pop
je
outsl
test
dec
xlat
movsb
or
jmp
xchg
into
clc
enter
pop
pop
sub
shlb
xlat
ljmp
xor
sub
bound
cmpsl
push
insb
ds
dec
mov
or
cmp
stc
rcl
arpl
mov
cmp
add
jb
push
pop
movsb
xor
xor
sbb
mov
inc
mov
xchg
das
ds
inc
out
mov
lock
rorb
stc
arpl
xor
lods
mov
mov
ret
mov
add
xchg
pop
add
and
cwtl
jecxz
cmp
xor
enter
loopne
testl
adc
inc
xor
aam
cmp
mov
ret
fwait
xchg
int
cmp
push
aam
or
mov
test
xor
sbb
shr
clc
xor
shrl
pop
jnp
clc
cmc
out
cmc
pop
cwtl
mov
loop
imul
das
mov
sbb
imulb
sub
repnz
out
pop
add
fldenv
pop
add
bound
jo
pop
shl
jne
push
in
imul
add
hlt
imul
jle
xor
push
lahf
psadbw
dec
test
mov
popa
in
ja
testl
sbb
fistpl
arpl
sbb
inc
mov
nop
test
cmp
dec
dec
xor
std
nop
mov
adc
in
jbe
mov
jp
sbb
movsb
iret
neg
jmp
pop
push
call
dec
cmp
push
mov
or
and
sahf
cmpsl
lea
cltd
push
mov
into
test
fucomip
mov
popa
mov
lret
lock
adc
cmp
repz
push
mov
and
shl
jmp
xchg
es
jb
cmpsb
cmp
dec
mov
ficompl
rcll
or
sub
xlat
sarl
loop
mov
sahf
adc
clc
jno
mov
push
mov
leave
mov
sahf
mov
sub
std
adc
mov
lret
dec
mov
sbb
aad
pop
inc
out
jo
enter
fmull
and
movsb
xchg
or
insl
int3
xchg
xor
inc
and
enter
mov
in
adc
jle
lock
add
mov
jg
outsl
mov
xlat
cwtl
jnp
test
or
imul
test
int3
sahf
jl
inc
dec
jmp
repz
ja
xchg
mov
sub
xchg
push
sbb
cmc
mov
jmp
cmpsl
xchg
out
cmpsb
add
sbb
xchg
dec
sub
arpl
into
shrb
test
call
push
testb
adc
mov
cmp
lret
mov
pop
lods
cmp
xchg
and
mov
adc
or
scas
cltd
mov
pop
lds
ss
lahf
mov
cmp
fistl
mov
and
ja
mov
pop
cmpsl
add
mov
repnz
daa
repz
dec
mov
add
out
mov
enter
cld
xchg
dec
dec
mov
dec
cmpsl
xchg
aaa
sarl
ret
sbb
sbbb
xor
mov
inc
int3
jnp
fisttpl
adc
jmp
dec
test
daa
push
xchg
xchg
inc
xor
loopne
stc
xorb
jo
cmp
stos
lcall
xchg
xor
jno
dec
inc
xchg
ret
aad
pop
inc
into
int
cs
xchg
movsb
pop
testl
subb
jg
adcb
shll
inc
pop
divb
jmp
imul
js
adc
hlt
sub
dec
cltd
xor
aas
jne
lods
push
dec
fistpll
or
nop
add
adc
jg
mov
xchg
cmp
or
jmp
stc
mov
in
mov
ja
push
hlt
out
data16
pop
stos
jbe
dec
rorl
scas
xor
int
xor
out
popf
sub
mov
enter
pop
mov
fsubr
leave
xlat
outsl
iret
mov
add
jns
ret
xchg
aas
loop
inc
mov
push
stos
dec
mov
insl
popf
mov
cmp
in
jb
popa
fdivrl
insl
push
and
push
add
aaa
push
js
mov
pusha
mov
mov
xor
inc
pushf
dec
adc
push
orb
push
shll
dec
push
stos
xchg
loop
fcoml
mov
scas
cmp
cmp
leave
popf
lods
and
mov
mov
mov
jno
in
hlt
outsb
into
out
test
pop
fcmovu
aad
shrl
les
ret
xlat
out
es
pop
clc
in
mov
jmp
cmpsl
sbb
mov
cmpsb
xchg
lret
sub
jne
dec
cmp
iret
push
scas
inc
jae
test
xchg
or
cli
add
push
sbb
sbb
fdivrs
sbb
xor
aaa
repz
add
repnz
inc
or
xchg
leave
fwait
in
hlt
cmp
aad
jns
in
lahf
add
divb
les
cld
mov
cmpsl
pusha
addr16
adc
push
jae
sub
mov
dec
cli
dec
ficoml
adc
or
sub
or
xlat
cmp
cmp
push
sbb
cmpsb
mov
repnz
or
sbb
call
pop
dec
dec
jne
ss
testb
ds
push
rcll
es
dec
out
pushf
outsl
mov
push
dec
sbb
push
push
cmp
push
dec
mov
imul
add
stos
lahf
push
rorb
repz
push
cmp
lds
xchg
mov
mov
aas
into
mov
inc
or
clc
dec
dec
add
push
jnp
add
out
fmuls
adc
dec
out
pushf
cmp
stc
fldt
lea
adc
or
js
out
xor
jnp,pt
clc
dec
sub
jae
xor
movsb
sub
pop
mov
xlat
aam
in
clc
sub
adc
pop
push
aad
icebp
bswap
dec
sbb
fimull
adc
clc
popa
push
sbb
pop
dec
xor
jo
lea
les
add
inc
imul
mov
repnz
into
cmp
dec
add
int
jbe
ficompl
dec
movsl
jno
push
push
cmpsl
dec
sub
push
jno
cwtl
int3
in
lds
fwait
hlt
and
dec
adc
push
jmp
fadds
roll
ljmp
rcr
xor
sbb
jp
sub
jecxz
test
push
jne
inc
arpl
cmp
push
push
dec
popf
or
arpl
mull
inc
rcrl
fidivrl
mov
in
push
adc
rorl
enter
mov
sbb
fsubr
and
dec
jb
fimuls
mov
pop
shrb
daa
fs
xchg
xchg
push
shrb
dec
jp
test
cmp
test
enter
mov
pop
mov
fsubr
loop
fwait
ret
adc
sub
outsb
out
or
pop
fistps
ds
adc
ficoml
outsb
loopne
leave
mov
xchg
sbb
mov
jge
dec
dec
popf
xchg
and
xchg
imull
in
pop
and
lcall
xor
push
in
or
cmpsl
mov
cmp
loop
mov
or
mov
int
pushf
repz
xchg
imul
ja
flds
fiadds
test
sbb
imul
sub
jmp
orb
cmp
jmp
les
or
neg
sbb
fwait
pop
jl
dec
repz
pop
cltd
push
sbb
mov
movsl
sarl
add
push
f2xm1
mov
mov
sub
mov
leave
repnz
imul
in
cli
cmp
dec
sub
iret
inc
push
sub
dec
decl
lds
push
aad
or
outsl
test
out
lock
arpl
and
push
movsb
jnp
xor
loop
pop
inc
mov
pop
pusha
test
xor
xchg
sbb
aad
dec
xor
popf
addr16
testb
mov
es
cmpsb
icebp
int
xchg
std
in
add
popa
lcall
in
ret
push
mov
adc
pop
mov
lret
and
aad
jnp
dec
iret
adc
sbb
idivb
and
popa
jo
sbbb
and
arpl
dec
fldt
enter
cmc
lock
or
pop
aas
shlb
enter
mov
mulb
adc
mov
dec
xor
test
loopne
bound
and
cmp
mov
mov
arpl
pop
xor
loopne
adcb
and
pop
cmc
add
mov
je
or
fidivl
mov
sar
xchg
adc
sbb
sbb
xchg
pop
pop
sub
movsl
nop
aas
neg
pop
in
jbe
roll
dec
jp
call
xchg
mov
mov
mov
add
mov
mov
or
ret
sub
aad
xor
mov
xlat
cwtl
aad
repz
test
test
mov
jmp
test
cmp
std
adc
dec
pop
cmp
cwtl
jne
sbb
ja
dec
pop
daa
mov
cld
pop
pop
mov
dec
jl
xlat
insl
mov
and
imulb
mov
dec
shlb
lret
jl
pop
rorl
lock
sahf
movsb
xchg
cmp
addr16
xchg
and
in
dec
and
cli
iret
fistpll
xor
aam
in
cmp
mov
push
or
mov
adc
inc
add
jnp
lds
xlat
cmp
mov
jecxz
in
cmpsl
cwtl
lods
inc
lds
adc
dec
popf
jb
pop
out
mov
iret
inc
imul
call
jecxz
pop
push
inc
push
dec
pop
and
dec
rcrb
mov
repz
or
sbb
add
cmc
gs
sub
mov
int
adc
xchg
jg
pop
pop
adc
cwtl
mov
xor
fs
stos
lret
add
int3
cmp
stos
ret
int
dec
and
test
inc
jno
pop
xorb
fcoml
dec
cwtl
fdivl
aaa
out
adc
in
mov
jmp
jmp
dec
or
sub
mov
ret
jge
inc
or
insb
lock
aad
daa
push
mov
jns
stc
xor
xor
xor
test
dec
test
jne
xor
xor
xchg
xor
or
xchg
insl
xor
or
sbb
sti
jnp
mov
movsb
dec
or
or
aam
adc
icebp
sbb
icebp
push
call
adc
cmpsl
jae
xor
xor
mov
cmp
mov
popa
push
sahf
inc
mov
jge
jg
inc
cmp
ja
ret
or
and
test
data16
sbb
js
adcb
push
test
mov
lret
dec
hlt
dec
add
push
add
xor
movsb
inc
inc
idiv
rorl
push
sbb
outsb
inc
pusha
iret
cld
dec
pop
mov
sarb
xchg
cmp
mov
cmp
xor
mov
push
lret
mov
mov
call
pusha
sub
int3
xchg
das
push
stos
mov
pushf
push
jp
mov
test
stos
cmp
push
repz
insb
outsl
push
push
or
mov
hlt
stc
ljmp
mov
je
or
jecxz
sbb
cwtl
xchg
adc
addb
xlat
adc
dec
adc
test
mov
jns
enter
lret
add
cmp
sbb
push
ret
push
sbb
mov
lcall
pushaw
pop
mov
sub
xor
add
mov
enter
jns
scas
and
call
scas
les
sbb
dec
inc
or
scas
orl
or
aam
mov
sbb
xchg
divb
push
xor
sub
sbb
mov
mov
mov
shrl
and
or
adc
stos
or
sahf
js
aad
data16
repz
adc
pop
cmp
ret
lods
mov
mov
lret
add
cli
loopne
fistpll
xor
aam
scas
xchg
repz
icebp
adc
jae
mov
inc
shrl
jno
mov
in
jne
pop
icebp
push
arpl
arpl
push
pop
popf
inc
ret
and
pop
lock
jg
scas
addl
enter
add
push
pop
jns
xor
xor
sub
xchg
jmp
imul
sbb
out
push
sarl
scas
test
nop
sub
int
and
xchg
xor
out
jno
or
cmp
or
ljmp
cmc
and
fcmovnb
xlat
in
xchg
sbb
or
xchg
test
xor
jns
negl
fsub
xor
xchg
mov
cld
add
jecxz
adc
xor
addr16
adc
int
movsl
fisubl
pop
adc
mov
jg
out
adc
enter
pop
sbb
xchg
cmp
jmp
cwtl
lret
rolb
xlat
push
cmc
inc
das
mov
out
xchg
popf
hlt
pop
or
stc
enter
fidivs
cltd
or
mov
fincstp
pop
ja
cmp
jmp
inc
int
xlat
nop
xchg
xor
test
addr16
xchg
nop
dec
jecxz
mov
pop
ret
sub
pop
cmp
stos
xchg
std
xlat
pop
push
ret
cmp
ja
inc
push
mov
loop
nop
and
xor
push
mov
pushf
ss
xor
mov
fadds
ss
jae
or
or
or
repz
fcom
dec
int
inc
cmp
mov
sarb
dec
mov
notb
sub
lahf
out
dec
add
xchg
in
out
jg
push
jmp
ss
imul
xor
or
xlat
and
pop
fnstenv
add
cmp
pusha
insl
jb
bound
sbb
pop
repz
shl
addr16
stos
cmp
nop
mov
pop
sub
xchg
cmp
mov
popf
push
sub
add
push
out
enter
mov
cmp
lods
mov
scas
and
or
stos
arpl
test
notb
cli
xlat
xlat
add
hlt
stos
adc
sub
pop
cmc
or
shrb
test
jns
sbb
pop
dec
gs
xor
leave
add
popa
dec
cltd
aad
test
cmc
mov
bnd
cmpsb
pop
cltd
fwait
rcll
pushf
popa
insb
pop
mov
mov
mov
cwtl
sub
iret
inc
ret
mov
mov
or
inc
clc
pop
out
xor
jmp
push
fsubs
inc
jns
sbb
pop
xor
addr16
xlat
test
inc
clc
xchg
and
repz
jmp
dec
sbb
mov
jo
cmp
fs
add
cltd
incb
or
jecxz
sub
xor
mov
inc
add
xchg
pop
pushf
lret
and
inc
and
add
sub
push
sarl
pop
bound
jmp
cmp
sbb
aaa
push
lcall
sub
jmp
nop
cmc
es
xor
outsl
jne
push
enter
mov
dec
mov
out
push
pop
std
out
sbb
dec
cld
jge
sbb
imul
adc
in
pop
sbb
sub
int3
push
xor
es
cmp
dec
xchg
push
jae
pop
inc
mov
rcl
hlt
test
fcomps
pushl
mov
jl
out
stc
loopne
push
cmp
inc
xchg
aad
imul
fmuls
add
arpl
or
jmp
in
aam
fisttpl
outsl
xor
add
sbbl
stos
clc
mov
rcrb
xchg
jne
inc
in
lock
mov
cmp
xlat
mov
mov
ja
mov
js
dec
dec
sub
dec
adc
leave
in
fimuls
add
jo
push
cld
das
pop
sub
shrb
mov
push
pop
sahf
sub
pop
xor
push
mov
icebp
mov
dec
inc
add
adc
jmp
jbe
mov
out
inc
mov
mov
imul
sbb
xor
sub
jo
les
jle
pop
and
add
xchg
call
scas
jo
dec
out
pop
jns
cmpsl
mov
cmp
adc
outsl
mov
mov
pop
sub
les
sbb
leave
mov
mov
insl
mov
iret
rcl
or
and
cmp
mov
mov
adc
push
sbb
cmp
aas
test
pop
cmp
shlb
mov
push
push
aam
jbe
fmul
fiadds
push
jge
and
mov
jmp
dec
inc
cmp
cwtl
call
imul
fcom
jmp
hlt
add
orl
aam
xchg
pop
xlat
push
or
fdivr
mov
test
in
test
pop
nop
fisttpll
das
sub
sbb
sbb
lret
decl
ret
fcmovne
dec
shlb
lahf
pop
daa
movsb
add
subl
and
aaa
es
cmpsb
iret
negb
subb
out
in
xor
mov
or
les
dec
push
fldcw
jle
sub
scas
cmp
jp
mov
cmp
mov
cmp
mov
or
dec
jg
fistpl
mov
cli
adc
push
enter
cmp
mov
jmp
mov
jno
test
sahf
or
pop
pop
xchg
ret
icebp
out
into
jo
pop
xor
adc
mov
push
cmpsb
rcrb
les
sub
xchg
loop
mov
roll
pop
mov
mov
cmp
fstpt
shll
xchg
add
cltd
mov
repz
mov
mov
out
push
jge
lods
inc
cmp
push
pop
push
out
inc
add
loopne
xor
mov
fxch
popf
add
sub
ds
mov
mov
mul
xor
testl
ljmp
lret
fwait
cmp
test
in
stos
test
xor
mov
cmpsl
push
iret
xorb
inc
cmp
imul
xlat
cltd
roll
mov
xor
popf
outsb
shrb
cmpsb
aas
dec
inc
and
push
lret
xor
cmp
lcall
xchg
mov
sub
call
sbb
xor
jnp
int3
and
lret
xchg
cmp
cmp
aaa
mov
in
or
dec
repnz
notl
ja
test
push
jnp
mov
call
and
pop
fstl
addr16
jmp
add
das
cmp
fisubrl
pop
ja
mov
shll
mov
mov
imul
pop
je
out
or
lahf
fcoml
inc
je
pop
mov
out
adc
xor
leave
inc
loope
rorl
push
push
stos
jmp
jg
xchg
into
pop
inc
aad
dec
adc
dec
sub
andl
lds
or
mov
scas
xor
cmp
pop
mov
cmp
sahf
movsl
xlat
rorb
xchg
gs
and
mov
sbb
mov
dec
scas
jnp
and
lret
testb
and
push
adc
mov
imul
fwait
mov
sbb
movsl
pop
stos
cmp
add
mov
sub
mov
mov
aad
nop
pop
dec
cmpsl
ret
mov
sbb
jno
sub
mov
jmp
adc
call
lods
xor
rcll
or
mov
insb
popf
sub
add
sbb
repnz
sbb
dec
rcr
cmp
mov
xchg
cwtl
mov
dec
ss
out
jge
or
sbb
jmp
mov
pop
sbb
js
cld
in
add
testl
cltd
inc
enter
mov
dec
pop
push
int3
nop
dec
and
aam
mov
xchg
nop
enter
les
fistps
sbb
in
cwtl
cmpsb
pusha
sbb
mov
aam
cmp
cwtl
es
call
xchg
daa
inc
jae
clc
insl
dec
fldenv
mov
push
ret
sbb
jg
adc
out
rorb
pop
fwait
cmp
mov
mov
in
out
mov
js
xchg
call
or
pop
inc
jno
movsl
shlb
jmp
insb
jmp
scas
or
into
and
inc
pop
inc
nop
mov
xor
int
mov
mov
rolb
call
out
push
inc
out
mov
lcall
icebp
dec
xchg
add
jl
adc
ficomps
fnstsw
jl
sbb
mov
jg
aad
sbb
jne
sbb
imul
mov
cmp
testb
aam
les
or
cmp
cmp
add
mov
stos
xlat
cmp
jg
pop
cli
hlt
jmp
push
sarl
xor
xor
divl
sbb
les
int
mov
out
fsubrs
sub
jns
pop
jl
daa
dec
inc
dec
rclb
pusha
xchg
inc
sbb
cwtl
add
pop
popf
mov
and
jns
inc
xlat
adc
ja
sbb
jno
mov
fnstcw
adc
and
pop
jnp
sbb
mov
scas
mov
jmp
pop
call
pop
sub
icebp
cmp
icebp
mov
jmp
bound
test
rol
cwtl
inc
les
push
movsl
ret
iret
ss
add
push
dec
ret
pop
sbb
xchg
mov
and
pop
test
adc
test
in
sub
stos
adc
jle
repz
fneni(8087
popf
lcall
dec
in
or
pop
adc
xor
xchg
inc
popl
sarb
lock
out
fsubrs
in
sahf
xchg
adc
inc
mov
cmp
mov
push
cmp
jmp
push
cwtl
sahf
jbe
dec
mov
sbb
mov
jmp
jmp
cmc
mov
mov
mov
fimull
xor
lods
pop
sbb
and
dec
cmp
aad
ljmp
pop
jns
test
inc
sbb
mov
pusha
sahf
sub
dec
dec
push
mov
inc
inc
cmc
std
cltd
jns
les
or
icebp
push
fidivrl
cli
and
xchg
jmp
test
fnstsw
jae
aad
push
pop
pop
or
inc
les
in
dec
jb
sbb
mov
mov
jnp
lods
pop
test
test
dec
loop
jmp
cmpsb
pop
stos
ret
add
mov
pop
cmp
xchg
and
rcrb
cmp
adc
je
dec
imul
cli
arpl
loopne
out
aad
sbb
pop
shl
jo
dec
repz
imul
lock
aas
cmp
movsl
add
out
fs
fidivrl
in
int
pop
sbb
sbb
xor
sete
sbb
jb
xchg
dec
ss
adc
int
addr16
jle
rcr
les
or
dec
icebp
mov
scas
jnp
fisttpl
push
pop
and
cltd
leave
insb
lea
shlb
cmovg
inc
cmp
xor
mov
fsubrl
sti
aad
ja
jle
aas
push
sbb
sub
stc
inc
lahf
and
push
insl
stos
pop
cmp
and
adc
add
aas
pusha
stc
lret
and
jl
enter
leave
sti
mov
test
mov
mov
stos
ret
aas
es
push
popa
enter
pop
or
or
xor
outsl
jge
dec
mov
and
dec
in
orb
mov
cld
iret
int
cmp
pop
subb
mov
int
inc
ljmp
mul
mov
xbegin
mov
or
aas
pop
xor
lcall
xor
arpl
fcomps
sbb
out
inc
aas
xchg
mov
cmpsb
xor
pop
je
mov
adc
and
pop
loopne
js
enter
bound
push
xchg
xchg
push
mov
mov
jge
mov
pop
pop
icebp
scas
hlt
loopne
imul
lock
aad
xlat
cmp
rorb
aad
mov
inc
lret
dec
stos
pop
add
fnstsw
jnp
jmp
movsb
add
lock
add
xor
mov
lds
mov
ret
and
pop
xlat
fwait
pop
sbb
movsb
xor
pop
pop
scas
std
subb
stos
mov
or
outsl
add
sub
adc
loope
jg,pn
xchg
and
out
and
dec
cmpb
orb
cmp
cmc
xor
out
xlat
in
xchg
sub
sub
pushf
sbb
xchg
inc
imul
or
out
jecxz
dec
jmp
and
mov
cltd
daa
into
fwait
cmpsb
jmp
sub
daa
leave
leave
pop
stos
xlat
mov
repz
sbb
repnz
pop
dec
push
in
jnp
out
inc
into
ds
shl
pop
in
xor
adc
dec
push
sub
add
or
push
jb
movsb
icebp
mov
cmp
shll
xchg
pusha
dec
pop
dec
in
out
cltd
lods
jne
lea
and
sub
xor
mov
pop
jmp
lret
lods
inc
in
enter
les
inc
cwtl
push
iret
movsb
sbb
pop
int3
and
mov
lret
add
jae
mov
lret
inc
xlat
sub
sbb
lds
int3
xchg
xlat
mov
pop
cld
cwtl
scas
or
push
jns
loope
sub
std
icebp
int
ja
lods
jne
pop
push
xor
lds
dec
push
rol
iret
enter
out
pop
lahf
leave
jb
or
and
pushf
fsubs
sub
push
inc
dec
dec
adc
negl
pop
mov
dec
mov
aaa
cmp
xchg
push
daa
push
xor
pop
sbb
push
cmpsl
popl
xchg
lret
je
add
in
jl
inc
mov
cld
repz
or
xor
inc
inc
subb
xor
icebp
test
and
jmp
pop
fcomps
jnp
mov
mov
out
lds
and
aas
nop
lds
sub
mov
jns
notb
fcomps
jae
cmpsb
fnstenv
push
jmp
scas
jb
and
or
cmc
jbe
xchg
push
pop
out
push
sbb
dec
push
repz
les
sub
dec
mov
sti
imull
push
or
sub
sub
loop
sub
xchg
jnp
rcrb
les
push
test
and
in
mov
jg
or
cmp
cmp
jns
es
xchg
ret
pop
int
repnz
mov
add
scas
jbe
repnz
mov
xchg
mov
fmul
pop
mov
push
bound
xchg
xor
sub
mov
add
xchg
jmp
lret
inc
mov
jecxz
scas
add
xchg
pop
mov
fcompl
add
push
stos
test
push
mov
test
lea
inc
scas
ret
aas
cmp
lcall
mov
aad
rcrb
mov
jmp
daa
jb
aas
pop
sub
sub
push
mov
xor
lock
pop
xorb
pop
cmp
cmc
mov
jnp
xor
mov
sbb
stos
mov
cmp
out
jmp
xor
sbb
jo
out
adc
push
inc
fidivl
addr16
push
arpl
lret
cmp
push
pop
mov
mov
pop
shrl
repnz
aad
sbbb
and
fwait
pop
mov
cmpsl
loop
xchg
test
push
clc
lret
jbe
subb
imul
add
pusha
ss
push
or
xor
or
push
add
gs
fxch
dec
mov
es
or
sbb
inc
cmp
add
dec
add
push
jmp
ret
aam
sub
xor
iret
mov
test
sub
addr16
xlat
and
jae
sbb
fs
push
jno
fstp
dec
mov
int
sbbl
int3
mov
cmp
divb
dec
in
xchg
shlb
fbstp
mov
push
lret
or
lcall
xor
ja
mov
push
jg
enter
push
mov
sbb
lret
fldt
mov
test
mov
data16
out
mov
mov
or
dec
inc
popf
jb
and
lea
and
mov
push
orb
or
stos
cmc
pop
dec
jl
lock
inc
xchg
cmp
popa
test
cmp
sub
jp
inc
dec
dec
inc
repz
sub
mov
jnp
repz
mov
sub
and
int3
jp
pop
stos
adc
ret
mov
xorb
cs
push
jb
mov
mov
push
or
mov
push
push
adc
jb
cmp
iret
cmp
cld
ja
adc
test
push
or
sahf
mov
xchg
sub
ds
loop
mov
inc
mov
jecxz
sbb
ficompl
and
add
icebp
adc
ret
jmp
out
mov
testb
and
adc
pop
test
mov
les
pusha
sar
xor
mov
clc
packuswb
mull
sub
fstpt
pop
call
push
divl
or
adc
xor
iret
aad
sbb
xchg
and
aas
mov
enter
icebp
je
hlt
arpl
xor
lock
or
or
test
jno
inc
push
stos
testl
mov
sahf
mov
adc
xchg
in
rorl
adc
and
repnz
out
push
jmp
test
cmpsl
or
ds
mov
stos
loopne
mov
leave
sub
pushf
or
sbbl
mov
add
fcoms
or
inc
adc
sub
mov
lock
mov
mov
sarl
nop
xchg
hlt
int3
xor
cmp
lock
jecxz
cmp
jmp
inc
mov
push
std
or
sbb
add
push
fldcw
sbb
inc
or
push
sbb
and
mov
push
out
rclb
enter
inc
repz
sbb
push
or
outsb
adc
iret
lret
xor
lahf
test
and
xchg
mov
ja
das
sbbb
jae
adc
xor
notl
xchg
inc
fsubs
movsl
ss
or
jbe
pop
int
test
jge
pop
ljmp
inc
icebp
lock
ss
inc
clc
or
sbb
xor
dec
loopne
cltd
inc
aad
cmp
int
inc
and
in
mov
out
push
dec
scas
out
ja
fidivrl
stos
fstps
test
sbb
ljmp
xor
xor
aad
cltd
xor
sbb
shll
cmp
mov
repnz
mov
jmp
fucomi
mov
pop
and
adc
outsb
out
movsb
sub
lock
cli
int3
pop
sbb
fimuls
repnz
inc
ficompl
cld
sbb
jno
jno,pn
cs
jp
mov
addr16
adc
jmp
ja
repnz
dec
es
stos
fcoml
add
adc
or
xlat
pop
adc
mov
sub
mov
iret
fwait
mov
test
sbb
mov
dec
pop
incl
popf
xchg
addr16
test
adc
xor
jnp
or
and
call
xor
int
mov
popa
sbbb
add
jmp
cmp
inc
jmp
sbb
add
mov
les
cmc
sahf
iret
pop
sub
lds
dec
mov
sbb
sub
jae
jb
rorl
mov
adc
xor
arpl
sbb
stos
mov
mov
stos
enter
sarb
inc
stos
mov
ss
xchg
push
xor
arpl
xor
in
pop
aad
xlat
pop
adc
cmpsb
mov
xor
jb
ja
push
add
mov
mov
or
imul
insl
adcl
sub
or
sbb
shlb
dec
aaa
dec
mov
sbb
or
sub
pop
jns
test
sub
leave
loop
pop
sub
push
daa
push
add
xchg
jge
cs
shlb
cltd
mov
repz
ret
push
dec
add
mov
mov
jnp
setle
inc
aad
sub
outsb
cmpsl
sbb
adc
adc
pop
push
lcall
cmp
int
pop
push
cmp
xor
xor
cmpsb
sbb
pop
sbb
test
inc
mov
fmul
push
leave
adc
mov
es
ja
mov
cmp
push
cmpsl
mov
mov
and
sbb
cwtl
inc
cmc
negb
divb
hlt
add
test
add
fidivl
outsl
cmp
inc
addr16
lret
inc
outsl
mov
sub
test
mov
repnz
push
mov
cmp
fdivp
test
xchg
in
int3
add
jae
roll
xor
pop
sub
sub
jge
pusha
jmp
or
and
int
roll
mov
xchg
dec
sub
std
push
xchg
pop
jo
fwait
xor
repz
cs
mov
push
cld
cltd
add
push
adc
in
and
jp
cmp
std
jg
push
push
sbb
call
cmp
inc
sbb
and
scas
call
int
cmpsb
pop
subl
fcmovb
push
sub
add
dec
lods
aam
leave
mov
aaa
in
repz
xor
int3
xchg
shlb
ja
or
fdivl
mov
lret
cmp
ja
cmp
pop
cmp
mov
movsb
sar
out
lret
adc
clc
jae
es
frndint
inc
les
cmp
repz
cmpsl
pop
cli
jg
mov
out
push
cs
jns
inc
lods
sbb
popf
jle
dec
pop
mov
pop
or
outsl
fsts
rep
adc
mov
add
pop
jnp
dec
sbb
enter
test
cmpb
rcrb
pop
cmp
test
sarb
push
push
xor
shl
fmull
and
nop
pop
decb
pop
push
inc
out
pop
push
inc
and
ja
lret
xor
fsubs
cmc
sbb
imulb
movsl
push
lret
dec
mov
sub
mov
fs
cmp
negl
icebp
lcall
aaa
mov
sub
pop
out
jecxz
jp
add
or
xor
ss
lods
add
lea
xchg
iret
stc
xchg
add
push
jecxz
scas
lret
push
clc
out
xchg
shll
ret
and
sub
sbb
mov
lcall
jg
jne
lret
jle
xor
lret
sahf
icebp
aam
mov
fimull
xor
int
call
insl
cmp
mov
scas
mov
cltd
xor
adc
mov
dec
cmp
lret
orl
fidivrl
repz
mov
in
enter
jo
push
xchg
stc
jmp
fcmovnbe
out
mov
iret
cmp
out
push
or
xchg
mov
jmp
or
xor
cmp
fwait
xor
xchg
mov
daa
test
inc
cltd
idiv
cli
xchg
dec
jle
in
xor
dec
repnz
sbb
xchg
jl
add
pop
shl
adc
add
pop
cltd
cmc
movsb
pop
js
mov
push
or
or
push
or
call
cmp
add
stc
in
rolb
aad
sahf
shll
loope
lods
and
in
aad
negl
xor
push
fwait
add
inc
xchg
aaa
add
fiaddl
fistps
into
movsl
xchg
jno
inc
aam
dec
sbb
jo
ljmp
inc
push
btr
sbb
sbb
out
stos
xorb
adc
sbb
enter
xorl
mov
cmc
clc
aam
cmp
aaa
pop
outsl
mov
aaa
je
inc
out
out
mov
push
jmp
or
dec
mov
enter
xor
dec
test
sbb
pop
push
loopne
clc
xchg
push
mov
xchg
cmp
lock
and
push
cmpsb
test
icebp
inc
fldt
mov
andb
xlat
push
xchg
stc
xchg
in
xor
mov
cs
sub
in
fsubr
mov
or
dec
mov
mov
repnz
lcall
push
movsl
jns
pop
push
leave
mov
dec
xor
pop
xchg
stos
or
dec
xor
inc
push
lds
sub
les
cli
jp
mov
in
dec
rcr
sbb
jnp
sbb
hlt
sbb
mov
push
pop
jmp
dec
in
sub
xchg
popf
inc
out
pop
jp
mov
push
xchg
loopne
pop
aas
inc
push
xor
les
lods
daa
xchg
cmp
xchg
dec
out
shlb
and
fmul
int
adc
int3
mov
inc
mov
sub
stos
mov
lods
subl
aam
insl
lds
mov
popa
xchg
xor
xchg
adc
repz
fwait
xchg
mov
mov
sahf
repz
pop
cltd
jae
lea
and
cmp
mov
xchg
push
add
in
andb
mov
dec
pop
mov
movsl
mov
sbb
jecxz
pop
into
std
xchg
lret
rorb
xchg
cmp
imul
movsb
ljmp
movsb
xor
mov
mov
fistpll
lcall
add
add
movsl
icebp
loope
sub
rol
xchg
push
xchg
mov
xor
lds
call
ss
enter
pop
xchg
dec
out
and
imul
stos
mov
enter
pusha
das
movsl
fs
inc
xchg
pop
aam
inc
roll
add
lret
sub
shll
fsubrs
push
enter
int
adc
pop
and
ja
or
adc
mov
mov
and
addr16
add
js
int
mov
insl
push
jno
rcrb
fdivrp
push
add
mov
xchg
in
movsl
ja
roll
mov
in
sbb
or
add
inc
xor
bound
cmp
shlb
jge
mov
jge
xor
imul
mov
cmp
sbbl
pop
lret
test
pop
inc
ss
repz
sbb
les
or
push
lock
and
push
xor
sbb
icebp
movsb
mov
mov
sbb
icebp
mov
nop
pop
bound
or
cmp
pop
std
inc
inc
sbb
jo
or
xlat
sub
aaa
addl
mov
mov
mov
xchg
xchg
mov
cmp
mov
notl
xlat
or
mov
lock
adc
test
push
cmc
frstor
ds
subl
mov
test
inc
push
mov
pop
int3
jmp
aad
xor
rcrb
and
xchg
subb
mov
sbb
std
testb
sub
cmpsl
insl
and
push
push
jg
shr
out
loopne
sahf
add
addr16
out
out
dec
outsb
ss
sbb
dec
into
lock
hlt
idivb
pop
or
or
pusha
call
cmc
inc
dec
popa
add
jmp
out
shrb
xchg
inc
mov
ret
in
notl
pop
jns
push
jne
call
jno
les
pushl
inc
popf
icebp
inc
dec
ret
roll
xor
jp
xor
in
jmp
hlt
negb
lods
or
push
jl
hlt
adc
pop
add
adc
or
gs
out
mov
arpl
in
outsl
pop
loopne
pop
iret
xchg
je
loopne
dec
mov
xor
jg
and
fidivrl
dec
fcomi
cld
mov
push
xchg
add
fsubs
jle
daa
sahf
sti
jo
push
mov
out
popf
xlat
cmp
sub
fistps
aad
ret
push
pop
cmp
ret
dec
data16
mov
mov
popf
dec
out
add
mov
cltd
pop
and
mov
lea
push
lret
lret
and
mov
sub
cmp
orl
push
loop
push
push
sbb
adc
xor
adc
inc
dec
js
xchg
jp
mov
enter
cld
xchg
sub
add
sbb
sbb
mov
stos
cmp
mov
fwait
add
pop
inc
mov
mov
add
scas
and
cs
jecxz
fisttps
or
std
jno
jns
aaa
mov
xor
imul
dec
add
mov
icebp
ja
push
adc
int
dec
xor
icebp
push
cwtl
into
push
test
stos
or
add
sahf
in
fsts
dec
popf
jo
test
sbb
pop
out
out
fisubl
jno
out
scas
test
cmc
leave
fstps
fcoms
lock
outsb
xor
push
loope
adc
lret
out
repnz
cmp
mov
add
out
in
sti
xchg
in
divb
xor
ss
lea
insb
lea
loopne
adc
xchg
scas
inc
les
cmpsb
dec
mov
or
iret
ficomps
movsb
mov
mov
mov
adc
and
js
push
adc
ljmp
cmp
test
scas
add
stos
aas
imull
les
cli
aad
clc
or
dec
xchg
es
fistpll
pop
mov
lock
dec
test
test
test
cmp
inc
or
jmp
jb
and
push
cmp
pop
loope
mov
mov
cwtl
pop
xchg
xchg
xor
out
or
pop
xor
repnz
mov
aad
rolb
xorb
sub
adc
js
xor
loope
stos
xorb
pop
sbb
cmp
dec
lret
jg
add
mov
adc
out
and
xor
mov
dec
lods
lock
push
xlat
pop
xor
aam
inc
mov
stc
outsb
int3
sub
sbb
lahf
jno
and
or
inc
not
mov
add
cmpsb
or
sbb
mov
dec
std
xchg
jg
int3
sbb
mov
cmp
movsb
sarl
test
jae
add
imul
and
in
fsubr
loop
mov
fdivs
and
add
cmp
add
mov
mov
jne
fcomi
in
sbbl
jge
xor
cmp
mov
or
outsl
mov
pop
mov
cli
insl
out
lcall
mov
popf
pop
mov
rclb
lahf
cmp
add
mov
test
dec
sub
mov
cli
outsl
jns
sub
pop
xor
pop
bound
mov
add
pop
inc
aad
aad
movsb
lock
mov
xchg
mov
mov
fadds
test
js
lcall
shl
aad
mov
adc
xchg
adc
clc
fiaddl
fistpll
ss
push
test
ds
sub
xchg
inc
xchg
sbb
arpl
adc
scas
loopne
data16
test
push
pop
mov
dec
adc
jno
sbb
xlat
jae
cmpsb
xor
jg
outsb
sbb
inc
sub
lcall
cmp
push
imul
add
aam
imul
fdivrs
in
push
dec
dec
sbb
cmpsb
mov
or
pop
cmp
sub
fld
jb
xor
cmp
in
popa
lahf
fcmovne
pop
push
sub
cmp
jo,pt
test
in
cmp
clc
sbb
inc
std
xchg
pop
cmp
in
inc
jl
inc
loopne
cmp
inc
orl
testb
test
add
jp
xchg
or
mov
cmpl
inc
mov
ss
pusha
notb
sub
sub
idivb
inc
push
push
cmp
in
and
nop
int3
dec
push
or
xor
xchg
or
cmp
push
sbb
dec
in
or
adc
jno
and
divl
into
les
aad
mov
xor
jo
jo
push
cwtl
mov
cmc
lcall
jmp
xchg
test
pop
movsb
push
dec
adc
in
jnp
in
jge
repz
mov
xor
shll
mov
cmp
jecxz
int
fsubr
mov
in
pushf
fdivrs
add
ds
xlat
movsb
jmp
push
sbb
imul
aad
mov
pop
inc
fs
mov
sbb
or
out
out
adc
cmp
or
rclb
stc
xchg
ret
sbb
cltd
roll
stc
enter
sysret
lcall
inc
jbe
adc
cmpsb
cwtl
lsl
jae
mov
sbb
add
mov
jbe
cmpl
push
xor
cmp
mov
rcrl
gs
mov
or
add
push
fdivrl
or
mov
xor
cmp
mov
push
fadd
loopne
pop
mov
notl
push
mov
aam
popa
ret
aas
sbb
popa
xor
int3
push
or
sbb
out
lock
add
dec
mov
hlt
push
cmp
mull
ror
clc
xor
jb
sbb
sub
xor
in
and
pop
mov
xchg
push
shl
cmp
jg
sub
xchg
int
push
iret
scas
lds
jecxz
mov
ja
pop
sbb
pop
int3
fmuls
iret
ja
xor
int3
mov
mov
in
arpl
sub
xchg
jb
adc
mov
ljmp
les
add
jmp
notb
sbb
xchg
aad
lea
sbb
and
push
adc
sub
stos
dec
mov
test
push
mov
cmp
jmp
adc
lea
sbb
sub
xchg
pop
test
sub
shlb
int3
jmp
sti
add
push
xor
and
cmpb
shlb
daa
sbb
push
clc
mov
sbbb
int
push
mov
pop
xor
xor
pop
enter
add
inc
es
cmpsl
mov
jmp
sbbl
mov
pop
dec
lea
ficompl
and
enter
dec
jns
sub
cmp
mov
hlt
js
pop
jno
enter
aam
sbb
or
and
popa
xor
pop
loop
xor
enter
int3
cs
add
rolb
lret
push
enter
pop
stos
cmpsb
jmp
inc
push
xor
mov
shlb
pushf
popa
and
in
pop
pop
and
sbb
cmpsb
sbb
orb
pop
push
or
movsl
fdiv
mov
mov
ficoml
aam
cmp
mov
xchg
jae
fcomps
out
xor
sbb
jp
mov
jae
test
clc
xor
loop
dec
ss
push
addr16
pop
xchg
mov
or
adc
insl
int
and
xor
mov
jle
test
adc
and
xchg
aas
mov
negb
lds
iret
in
faddl
jl
test
jnp
dec
in
outsb
cmpsl
or
enter
mov
mov
sub
pop
into
repnz
pop
jbe
dec
pop
leave
sub
mov
jmp
pop
xor
mov
push
fidivl
adc
in
add
int
pop
jns
add
xchg
in
sbb
pop
loop
jg
adcb
jmp
cld
inc
and
in
cmp
loope
or
sub
imul
or
sub
aam
std
mov
adc
in
std
push
leave
in
cwtl
bound
out
xchg
sti
jmp
lods
jbe
fnstsw
mov
mov
cmp
jo
cli
add
fnstcw
loop
jecxz
repnz
inc
lret
jecxz
sarb
mov
js
outsl
negb
in
jmp
fcmovne
inc
mov
xchg
inc
hlt
mov
inc
inc
pop
lret
in
cmp
loopne
in
jg
loopne
lret
std
push
sub
xchg
test
add
fisttpl
dec
out
jmp
imulb
stc
test
push
or
adcb
pushf
mov
cmp
xchg
fldt
enter
notb
mull
xchg
mov
sahf
cld
cwtl
repz
js
out
test
fsubrl
lea
mov
call
sarl
sbb
js
cld
dec
mov
daa
cmp
lock
std
mov
sub
push
xor
and
cld
sub
fwait
sahf
dec
jmp
cmc
sarl
stc
inc
mov
cmpsb
adc
test
lahf
into
ret
xchg
sbb
sub
jl
sbb
xor
or
fisttpl
hlt
sbb
test
or
or
enter
and
popf
int3
clc
iret
xlat
mov
js
jnp
jp
mov
adc
xor
adc
jnp
cwtl
inc
inc
int3
inc
mov
xor
jo
stos
xchg
adc
cmp
add
inc
imul
ljmp
inc
cwtl
aam
add
add
aad
lret
push
ds
lock
out
andb
lods
xchg
adc
leave
and
xchg
pop
shr
or
cmp
mov
jo
inc
sbb
push
stos
mov
mov
inc
test
mov
mov
out
xor
xchg
xor
mov
in
and
sar
lea
ds
js
nop
mov
jmp
je
mov
mov
add
dec
fistpl
sbbb
cmp
cmp
scas
data16
pop
aad
pop
mov
xor
repz
xor
xor
ljmp
enter
pop
lods
fsubrs
cwtl
push
fsubl
mov
xchg
movsb
inc
mov
xor
pop
hlt
popf
mov
sub
add
fistpl
sbb
iret
popf
das
pop
mov
lret
aas
lock
test
or
sahf
jecxz
and
push
aaa
sbb
xchg
push
sub
ja
sub
cmpsb
mov
dec
add
leave
jmp
and
andl
insl
ds
sarl
insb
clc
cmp
jg
ja
sbb
cs
rcr
repz
mov
repz
dec
test
std
fidivl
add
dec
and
inc
in
sub
inc
jle
fdivrs
inc
cmpsl
or
rcrb
enter
repnz
daa
iret
lret
and
popf
jae
mov
pop
xor
cmpb
and
sarl
filds
rep
xlat
pop
data16
cld
out
movsb
mov
insl
fildl
xor
mov
enter
jnp
xor
aam
sahf
add
les
cmpsl
sub
add
or
push
cli
jbe
dec
xchg
inc
and
sub
sub
add
mov
aad
xor
xchg
sbb
jmp
push
cld
call
sub
jg
andl
jnp
mov
and
sub
and
mov
push
dec
loopne
mov
pop
dec
xlat
dec
xchg
pop
cld
movsl
inc
jp
and
mov
xchg
mov
ds
mov
xor
add
cmp
insl
inc
xchg
or
subb
jno
sbb
xchg
fwait
dec
mov
add
sbb
les
mov
repz
subl
mov
stos
adc
jnp
mov
push
inc
cmp
or
clc
ljmp
imul
ret
out
jmp
sub
enter
dec
push
nop
shl
jle
xor
lret
cmp
enter
popa
loopne
aad
xor
mov
mov
out
lret
add
inc
cs
push
cmp
or
inc
dec
es
xor
mov
enter
cmp
inc
pusha
xor
movsb
outsl
out
jae
xor
sbb
mov
stos
cwtl
popa
sub
add
pop
hlt
mov
lret
icebp
sbb
fsubp
mov
xchg
push
addb
mov
lock
mov
outsl
sbb
test
testb
and
decl
mov
push
mov
aas
stos
dec
lock
iret
sub
dec
push
pusha
xlat
xor
or
pop
add
mov
iret
sub
hlt
push
cli
cltd
add
lret
aaa
pop
mov
fisubrl
cmp
ret
sbb
mov
repz
pop
xor
fldt
sbb
inc
and
sub
lods
jo
add
jno
pop
fadd
sub
and
push
testl
loopne
push
mov
int
scas
fnstenv
cmp
cmp
inc
or
push
xor
imul
bound
sahf
in
mov
mov
dec
sahf
push
mov
push
mov
pop
ss
cmpsb
push
mov
jmp
pop
outsl
mov
or
sub
add
addr16
mov
inc
call
or
cmp
call
sbb
in
shlb
insl
xchg
push
push
ja
sbb
inc
fabs
mov
push
adc
or
lret
or
cmp
stos
sahf
xor
fadds
push
cmpb
gs
jnp
push
lods
rcll
sub
mov
fsubl
fsubrl
inc
lcall
push
icebp
xor
xchg
lea
sbb
mov
stos
pop
aam
cmp
xor
adc
cmpl
and
jne
adc
iret
sub
or
push
mov
xchg
loopne
aad
aaa
dec
dec
or
push
repnz
arpl
jmp
aaa
mov
int3
int
mov
xlat
enter
test
lcall
mov
push
roll
jo
dec
cmp
dec
lock
dec
jle
sbbl
mov
mov
subb
sahf
or
adc
jge
les
sbb
dec
or
cmpsb
cltd
loope
cmp
out
data16
insl
and
cmp
out
cwtl
and
lds
stos
push
jp
mov
ds
lahf
rcrl
jo
in
fcomps
pop
scas
icebp
sbb
dec
dec
ret
outsl
add
jns
xchg
mov
push
jl
jbe
add
or
mov
dec
xlat
push
sub
jg
add
sti
mov
mov
in
sbb
loope
pop
adc
std
jnp
pop
jmp
cwtl
scas
test
jmp
mov
call
mov
fsub
mov
inc
sar
inc
pop
jno
lahf
push
int3
push
aad
lahf
cli
xchg
movsb
mov
flds
jmp
and
aad
nop
add
fistl
ret
testb
add
lahf
pop
ret
stc
push
cmpsb
nop
and
dec
jb
cmp
mov
lcall
aaa
cmp
int3
dec
jno
pushf
in
not
dec
fisttpl
dec
adc
dec
push
hlt
sbb
jo
rcl
fcmovbe
test
push
lds
cmp
cltd
out
movsb
cli
popf
fstpt
cmpsl
mov
add
movsb
cmp
das
in
out
ljmp
lock
jnp
out
or
or
into
cmp
int
dec
and
mov
into
ror
loope
add
mov
into
xor
cli
inc
and
dec
es
in
cmpsl
push
push
sbb
sub
add
push
mov
lcall
stc
xchg
add
add
pop
dec
ja
and
push
gs
xor
jmp
cmc
cmpsl
lret
cmp
lock
xor
mov
int
mov
negb
inc
pop
jne
pop
xor
dec
and
mov
push
jp
aad
repnz
inc
stc
sub
jmp
dec
es
cli
int3
cmp
js
dec
mov
mov
xor
shl
in
dec
loope
mov
setl
ret
pop
inc
inc
adc
cmp
cs
push
in
outsl
popf
push
das
or
loop
scas
in
repz
out
repz
xor
sbb
or
mov
shr
in
std
xchg
daa
rcl
ja
jg
paddusb
mov
aad
leave
or
jmp
rcr
lret
in
mov
push
adc
imul
outsb
xchg
mov
cmc
imul
gs
add
into
fs
inc
ss
and
xor
hlt
push
add
lods
sbb
jnp
andb
fisubs
inc
pop
mov
pop
lods
xor
rolb
scas
test
mov
hlt
enter
ds
cmp
sbb
sbb
out
ja
repz
and
in
cwtl
mov
jl
inc
xchg
jnp
push
mov
ds
loopne
call
lock
inc
mov
jnp
add
fists
aaa
cmp
mov
int3
or
notl
out
imulb
js
fisubl
adc
sbb
hlt
cmp
in
mov
nop
call
xor
pop
push
xchg
mov
jp
imul
in
idivl
ds
xchg
jo
jnp
call
pop
pop
push
xchg
not
cld
ljmp
cli
lcall
cltd
mov
enter
xchg
out
mov
push
mov
sbb
mov
out
mov
js
fld
in
push
insl
aas
sarl
jb
lods
jns
xchg
and
rolb
aaa
or
dec
int3
adc
jmp
inc
stos
jae
cli
enter
adc
mov
stos
xor
xor
jp
sub
ljmp
pop
push
xlat
cmp
mov
test
das
fsts
pop
dec
shrb
imul
pusha
cmp
cmp
out
push
das
mov
icebp
jmp
push
ret
mov
inc
aad
cmp
int3
out
jo
xor
aad
mov
and
cwtl
mov
jmp
fimull
or
dec
sbb
mov
ds
gs
xor
dec
mov
stos
stc
mov
leave
idivl
cwtl
ret
and
mov
add
pop
pop
mov
imul
cltd
iret
sub
mov
sub
ljmp
enter
push
xchg
xor
aad
push
shlb
in
xor
pop
xchg
add
and
leave
or
cs
sbb
test
add
decb
repz
out
inc
js
dec
push
push
mov
js
cmpsl
inc
mov
sub
jne
sbb
push
js
and
cli
imul
sub
mov
mov
frstor
icebp
mov
enter
inc
xchg
xor
sbb
ja
lret
mov
bound
jae
jo
cmc
add
arpl
xchg
jno
add
mov
dec
or
cmp
jbe
push
dec
sub
mov
sbb
xchg
rorl
xor
xor
rclb
mov
movsb
mov
out
push
in
mov
sbb
lcall
hlt
out
hlt
fdivl
call
das
xor
push
pop
mov
pop
mov
jp
test
adc
ss
psubsb
mov
dec
aam
loope
and
pop
jae
stc
mov
add
sub
xchg
or
pushf
or
xor
mov
sbb
jp
imul
sub
lahf
scas
xor
bnd
int
and
cmp
add
hlt
push
ficompl
dec
ja
adc
jmp
test
rcr
shlb
insl
cli
sarb
jmp
fbstp
mov
mov
and
sub
in
arpl
pop
icebp
enter
and
imul
mov
out
fldcw
adc
or
aad
or
popa
jae
jmp
stos
xchg
subl
dec
cmp
ss
aam
je
bound
jmp
inc
out
push
push
les
adc
xor
in
or
mov
divl
scas
popf
int3
xor
mov
cmp
xchg
sbb
pop
and
hlt
pop
in
and
dec
in
adc
cmp
or
aad
movsl
movsl
sbb
loope
enter
iret
pushf
int3
dec
and
lcall
adc
cmpsl
jne
mov
imul
lret
cwtl
mov
inc
sar
fcomps
push
aad
or
sub
xchg
es
jp
dec
ja
dec
pusha
or
pop
add
sbb
push
inc
push
pop
cltd
xchg
pop
dec
lock
and
dec
cmp
and
inc
jne
sbb
mov
pop
or
hlt
loop
mov
scas
adc
pop
mov
fstpt
and
add
in
into
add
pop
imul
mov
loopne
faddp
mov
xor
mov
cmpsb
andb
movsb
xor
mov
hlt
push
movsb
dec
sar
xchg
aam
popf
or
sub
mov
mov
lock
mov
fwait
data16
push
out
jge
outsl
imul
and
pop
cmpsb
mov
popf
cmp
movsb
je
cmp
adc
cmp
and
xchg
push
inc
inc
jle
aam
inc
nop
mov
xchg
mov
lea
aad
test
mov
fildl
test
iret
lock
inc
lods
addr16
movsl
mov
mov
jne
out
jo
and
fisttpl
adc
sbb
lret
test
sub
xchg
push
data16
pop
adc
aaa
ret
mov
push
repnz
push
xor
std
jecxz
sbb
fcoms
jae
scas
imulb
pop
sbb
dec
mov
and
dec
in
mov
iret
xor
psrlq
lods
or
and
inc
into
movsb
adc
sti
pop
push
clts
in
lahf
out
pop
repnz
mov
xor
xorb
cmp
dec
push
xlat
mov
pop
orb
cld
xor
inc
std
iret
xlat
cmp
in
fstps
in
jl
sbb
push
in
rclb
js
or
mov
repz
inc
sub
dec
push
jl
lcall
or
dec
stos
xlat
aad
mov
sub
xchg
mov
enter
scas
cmp
popa
mov
nop
xor
outsl
into
xchg
jge
ret
sbbl
fs
notl
mov
sub
loop
xchg
mov
sub
pushf
movsl
jnp
mov
cmp
popa
xchg
mov
enter
repz
xor
outsl
fisubrl
xor
das
push
and
cmp
add
sbb
test
pop
pop
repz
daa
adc
ret
pop
movsb
mov
sub
xchg
inc
jo
and
mov
and
mov
cmpsb
adc
ja,pt
sub
mov
xor
sti
enter
fistps
and
stos
cmc
mulb
sahf
adc
push
cmp
mov
fndisi(8087
mov
dec
pop
sbb
imul
jp
sub
aas
int3
dec
scas
sbb
mov
je
test
aam
mov
sub
dec
pop
iret
mov
push
mov
jl
push
call
std
xlat
adc
inc
push
aam
jle
int3
nop
pop
pushf
hlt
adc
lret
out
lcall
cmp
aaa
iret
cmp
and
pop
dec
rcl
xor
frstor
aad
cmp
jmp
inc
dec
imulb
dec
in
arpl
je
jae
pop
movsb
aaa
nop
cmp
sub
add
mov
adc
imul
ljmp
ret
mov
lret
xor
scas
scas
dec
push
lods
sbb
dec
fldenv
adc
das
fiadds
test
aaa
jg
sub
jecxz
mov
jo
out
mov
call
inc
sub
mov
inc
into
push
iret
pop
mov
pop
jae
mov
xchg
test
adc
jmp
fsubrl
jg
pop
inc
fldcw
repnz
xor
push
mov
push
inc
jmp
push
inc
xchg
pop
add
in
xor
fsubs
inc
or
rcr
push
mov
pop
cmp
push
sub
aam
clc
xor
push
add
or
lcall
out
inc
dec
dec
inc
repnz
and
jge
inc
iret
mov
cwtl
cltd
aaa
and
xchg
mov
mov
in
xchg
stc
and
dec
cld
in
pop
xorb
mov
decl
jo
data16
xchg
imul
or
sahf
shlb
add
ss
pop
jp
jecxz
jle
lcall
dec
sub
xchg
and
and
and
cld
mov
or
push
sbb
out
dec
rsqrtps
pop
inc
mov
lret
push
jbe
aad
pusha
repnz
push
jbe
clc
mov
data16
mov
sbb
sbb
ret
xchg
mov
mov
hlt
mov
jb
mov
cmpsl
jp
jge
mov
jg
sbb
xor
mov
mov
and
mov
out
mov
jne
and
xor
jne
xor
aaa
test
fldt
scas
pextrw
es
jbe,pn
in
mov
push
mov
dec
push
push
jb
loop
nop
and
cmp
jb
add
adc
jp
test
xor
lds
stos
sbb
popaw
aas
iret
sbb
xor
ret
insb
scas
ja
stc
inc
aam
pusha
add
pop
mov
cld
sub
sub
les
mov
jg
mov
jp
cld
lods
xor
in
rcl
les
in
xchg
addr16
test
jns
std
sti
lcall
fiaddl
cmp
mov
jnp
fmuls
nop
xor
out
mov
enter
inc
clc
sub
push
dec
push
xor
push
sbb
imul
add
or
pop
push
dec
dec
stc
cs
shrl
je
outsb
sbb
mov
xchg
dec
xchg
push
push
cmp
movsb
xchg
pop
inc
jo
jecxz
xor
cmp
stc
jle
adc
cltd
cmp
clc
pop
rclb
xor
rorb
stos
sbb
das
movsb
clc
lock
je
pop
adc
int
sub
jmp
sub
mov
cmpsl
push
push
fmul
sbbl
push
repz
mulb
adc
dec
jecxz
int
icebp
daa
cmp
xchg
inc
adc
fcomp
jle
sbb
add
aam
push
shll
notl
dec
aaa
out
repnz
or
ret
sub
leave
cmp
jo
mov
pop
stos
ror
pop
aas
pop
call
in
clc
jno
into
xor
out
and
mov
movsl
and
add
lea
sbb
xor
xchg
int
mov
loopne
inc
xor
pop
rcl
dec
out
jbe
sbb
cmp
cmpsl
mov
gs
shrb
js
jmp
repnz
les
or
adc
mov
mov
xor
inc
or
mov
loop
xchg
out
scas
out
xlat
mov
enter
mov
and
repnz
xchg
fstps
xor
and
or
jnp
xchg
pop
or
pop
test
pop
xor
stos
sahf
xchg
mov
inc
in
ret
sbb
incl
clc
add
jle
cltd
adc
dec
js
dec
out
pop
int3
cmp
sti
paddsw
in
orb
pop
or
or
add
adc
sar
jl
inc
inc
clc
mov
xlat
dec
push
pop
pop
dec
mov
or
add
fcmovu
mov
mov
in
pop
scas
jl
mov
stos
mov
lret
les
shl
jge
and
clc
xchg
or
mov
mov
outsb
out
mov
lret
hlt
jmp
cltd
and
pop
cmp
aaa
xor
stc
out
push
sarb
adc
loop
sbb
testl
pusha
imul
mov
adc
xor
add
test
repnz
xchg
jmp
push
add
pop
mov
mov
hlt
sbb
es
mov
mov
xor
mov
aaa
sbb
mov
cmp
movsl
imul
loope
lods
lea
insl
pop
ljmp
cmp
icebp
out
cmp
jo
cs
mov
adcb
adc
adc
popf
aam
mov
pop
fsubr
adc
test
idivb
lock
ret
outsl
mov
fiaddl
jmp
pop
arpl
mov
sahf
popa
fdivs
push
into
iret
pop
pop
stos
and
dec
sbb
call
sub
jmp
xorb
adc
push
or
aas
pop
push
cwtl
mov
in
popa
fisubl
stc
nop
mov
aaa
fists
mov
loopne
daa
pusha
jno
inc
push
int3
mov
cmp
std
lcall
ja
fst
inc
cmp
jnp
inc
aad
jmp
idivl
push
subl
sbb
repz
cmp
fnstenv
nop
jmp
xor
int3
dec
mov
pop
inc
adc
xchg
hlt
sub
ja
and
xor
imul
xor
and
cmp
jae
test
add
in
repnz
sbb
xlat
mov
inc
cmpb
roll
and
dec
fmuls
xor
pusha
xor
fcomps
sub
and
sub
push
test
dec
mov
int3
sbb
jbe
orl
push
dec
daa
pop
pop
inc
out
clc
push
jle
or
add
dec
paddusb
jnp
ljmp
imul
hlt
dec
xchg
lret
out
push
and
jae
cwtl
push
popl
sti
push
or
pop
push
out
mov
ja
les
shlb
ja
in
jmp
jbe
stc
xchg
sub
mov
xor
jge
sub
mov
mov
es
dec
pop
sub
mov
dec
or
bnd
dec
sub
sub
mov
pop
pop
inc
iret
in
movsb
jnp
push
or
dec
sub
jmp
xlat
jg
and
int3
push
repnz
enter
sarb
jp
cmp
mov
adc
iret
nop
pop
add
or
into
xlat
in
out
push
dec
push
les
cmp
jno
or
aas
mov
mov
sbb
push
and
xchg
sub
mov
iret
add
jns
jnp
int3
mov
cwtl
cmp
mov
in
clc
jnp
and
adcl
jp
data16
xchg
xor
xlat
jmp
in
ret
mov
and
test
cmp
adc
inc
fistl
lds
push
cmpsb
clc
cld
in
or
cli
xor
aam
pop
pushf
lcall
subb
lock
out
xchg
push
lods
and
fimuls
and
pop
mov
into
pop
jbe
add
fcomip
sub
scas
cmpsl
icebp
lret
movsl
mov
rolb
add
icebp
jmp
outsb
idivl
cmpsl
push
arpl
test
pop
pop
negb
xlat
dec
fnstcw
sub
sub
jo
lahf
ret
ja
cmc
std
jge
mov
sbb
pop
push
dec
pop
mov
pop
ja
notl
arpl
hlt
cmp
inc
test
arpl
fisubrs
pusha
xchg
out
imul
imul
out
pushf
scas
in
pop
bound
shlb
movsl
lret
cmc
sbb
faddp
inc
mov
inc
lcall
aas
fwait
mov
or
add
jmp
addr16
out
popf
sub
lds
and
xchg
cmp
insl
push
mov
adc
and
add
lods
pusha
push
or
adc
xchg
movsl
int3
cmp
ret
aas
enter
and
shl
add
lahf
xchg
sbb
xchg
dec
sti
call
sub
rcrb
push
add
cmp
xorl
push
ljmp
cwtl
push
fmuls
imul
fmuls
cwtl
int3
in
es
sarb
sbb
mov
push
sbb
stc
sub
enter
jno
cmc
out
fwait
pop
mov
push
repz
mov
sbb
cmp
rclb
popf
rcll
mov
sbb
sbb
inc
xchg
mov
add
xchg
cmp
dec
add
out
push
adc
pop
repnz
add
mov
pop
xchg
mov
fisubl
cmp
jnp
inc
dec
push
cmp
inc
mov
mov
sub
sbb
dec
xor
negb
stos
push
out
pop
mov
call
dec
push
mov
and
inc
nop
inc
addr16
hlt
mov
sbb
int3
add
sub
push
imul
add
mov
cli
fiaddl
test
daa
fstpl
jecxz
fidivl
ret
xchg
add
xor
int
mov
test
repz
sbb
fstl
sbb
dec
outsl
inc
test
adc
clc
iret
pop
imul
mov
dec
ss
cmp
mov
or
sahf
mov
push
dec
stos
cmpsb
push
gs
cmp
pushf
rcll
lret
jg
jnp
enter
inc
adc
aas
mov
faddl
pop
dec
lods
dec
loope
adc
ficoms
jmp
repz
jno
or
aam
push
or
mov
push
fs
mov
ja
xor
jmp
xlat
or
loop
mov
cmp
inc
cmp
jb
sbb
jecxz
insl
repz
pop
fwait
sub
dec
xor
fstps
lock
sbb
xchg
hlt
mov
lret
in
sahf
pushw
aam
xor
push
gs
mov
fwait
pop
pop
or
jecxz
lock
inc
add
pop
pop
aad
push
mov
or
shrb
jns
add
add
xor
or
lods
xor
xor
sub
xor
enter
iret
test
lock
cmp
dec
xchg
fisubrl
sbb
cmp
mov
inc
sub
pop
mov
sub
daa
inc
push
shlb
inc
xchg
and
jmp
outsl
push
fsubl
dec
shrb
lea
pop
das
push
out
mov
xor
adc
adc
pop
and
jecxz
and
push
sbb
inc
xor
adc
mov
pop
cmp
shl
fcomip
xor
das
sbb
fwait
jae
xor
xor
mov
aam
xchg
pop
dec
pop
pop
out
mov
xor
cmp
iret
cwtl
adc
xor
out
or
mov
adc
call
mov
dec
popf
iret
lcall
clc
cmp
sbb
dec
ror
jecxz
cmpl
sti
loopne
dec
dec
jnp
cmp
jmp
cld
dec
testl
mov
sbb
test
jmp
push
or
dec
mov
loope
cwtl
jg
jnp
mov
push
fimull
js
mov
add
jno
addb
in
add
movsl
dec
test
xchg
jno
xchg
jae
xchg
and
push
sub
aad
push
lret
xchg
mov
dec
aaa
mov
pusha
mov
xor
in
out
rcll
cs
test
dec
insl
push
mov
push
xchg
and
mov
rclb
xorl
enter
rorl
cwtl
xor
call
add
xor
stos
popf
ds
fwait
jg
push
fdivs
int
bound
mov
pop
mov
fs
sahf
add
ret
iret
and
in
sub
pop
mov
out
addr16
mov
sbb
jnp
mov
jmp
leave
inc
out
test
dec
fildl
mov
xor
sub
js
mov
cmp
or
xor
jecxz
stos
add
ficompl
fidivl
jmp
or
push
test
std
cli
stos
cmp
mov
jmp
ljmp
jmp
and
in
addl
and
jecxz
int3
fildll
aas
mov
push
xor
and
push
or
enter
repz
fwait
xor
mov
jmp
jmp
fwait
mov
rcll
pop
loopw
dec
lret
and
cltd
inc
jle
lea
mov
and
pop
add
adcb
mov
cmpsl
loopne
lret
int
inc
mov
je
jge
or
mov
sub
das
ret
in
dec
xchg
mov
rorb
addr16
sbb
or
imul
mov
mov
pop
pop
mov
sbb
dec
adc
std
mov
mov
jecxz,pt
sub
jb
dec
icebp
xchg
xchg
sbb
stos
mov
add
fwait
sub
xchg
cmpb
pop
jb
arpl
jno
push
lods
mov
dec
inc
push
mov
sbb
ret
leave
sbb
scas
mov
mov
lcall
dec
pop
or
popf
sbbl
pushf
movsb
cltd
pop
mov
adc
mov
mov
fs
xor
mov
cmp
ffreep
jne
inc
stos
into
jecxz
inc
jg
lahf
dec
add
les
les
aas
mov
pop
jl
leave
aad
inc
sub
dec
adc
push
inc
jmp
inc
cmpsb
shlb
enter
aas
adcb
xlat
xchg
lea
insl
in
mov
in
inc
lea
ret
rcr
sarb
dec
aad
mov
jge
fucomip
movsb
inc
xor
stc
adcb
stc
push
mov
dec
sbb
cmc
popf
pusha
cmp
push
mov
xchg
sub
or
out
js
aam
jecxz
lcall
push
ja
cmp
mov
scas
cmc
test
mov
xor
mov
or
adc
sahf
test
repnz
movsb
sub
sub
out
outsb
int
and
stos
outsl
sub
js,pt
nop
sbb
dec
testb
dec
ret
dec
mov
push
out
xchg
lahf
push
jmp
arpl
test
mov
or
ret
mov
sbb
cmc
pop
cmc
xor
mov
mov
loopne
pop
or
icebp
inc
mov
add
test
arpl
jge
lds
and
cmp
pop
add
lods
xor
xor
xchg
jae
and
sub
lods
stos
int
ljmp
mov
xchg
mov
int
lret
sub
dec
outsl
mov
ja
pop
add
pop
pop
push
push
sub
ret
push
inc
or
inc
push
fs
dec
xchg
fsubrl
dec
inc
mov
sarb
jno
pushf
jo
cmp
pop
xor
dec
rorb
fiadds
aad
stos
pop
push
cmp
cmp
in
cmp
xchg
lods
pop
cmp
or
and
fistps
inc
stos
pop
or
popa
jp
sbb
cmp
mov
ret
cmp
fsub
xchg
cmp
jnp
fldt
data16
cmp
pop
mov
jmp
mov
test
pop
or
mov
stos
sub
mov
in
sbb
mov
xlat
dec
in
stos
inc
push
cli
pop
cld
xor
clc
mov
mov
xchg
xchg
std
xor
dec
decb
sub
or
mov
add
jmp
cmp
int
pop
or
adcl
sbb
ds
pusha
leave
or
add
or
jae
mov
int
clc
call
jge
aaa
and
aad
imul
adc
push
sbb
inc
idivl
xor
clc
mov
lahf
loopne
ja
pop
mov
pop
push
frstor
ret
sub
addr16
out
int
icebp
sbb
push
mov
xor
or
es
mov
push
push
mov
xchg
jge
xor
hlt
push
dec
mov
int
push
or
and
arpl
pop
xchg
out
push
fs
xor
les
cmpb
cmpsb
lods
mov
jns
ljmp
cmp
jg
divl
pop
push
pop
mov
add
and
fisttpl
lcall
call
call
sahf
jae
lret
add
xor
lcall
pop
xchg
popf
loopne
fldt
and
xor
mov
rcr
movl
rolb
shll
and
movsb
imul
fwait
in
aad
dec
gs
imul
mov
mov
jnp
sub
rcr
cmp
sbb
imul
push
push
mull
mov
push
and
dec
iret
sub
pop
cmp
jmp
push
pop
xchg
cmp
dec
aad
stos
sbb
enter
inc
xchg
push
inc
int3
imul
sbb
imul
aam
sbb
xor
dec
repnz
cmpsb
adc
mov
jb
and
mov
push
xlat
idiv
cmp
cmp
xchg
mov
mov
and
shll
pop
in
xor
mov
repnz
pop
outsb
pop
sbbl
mov
sahf
fsubr
inc
pop
cmp
add
lret
enter
mov
inc
js
ret
outsl
mov
stc
sub
adc
pop
jne
test
add
arpl
or
fnstenv
mov
fdivs
and
add
pop
xchg
adc
es
cmp
cmp
dec
repz
or
push
mov
inc
sub
or
jnp
mov
js
lcall
xor
sahf
leave
mov
pop
dec
inc
dec
scas
mov
sbb
test
call
sub
pop
orb
out
push
or
add
or
cld
pop
mov
ret
jns
adc
pop
jle
inc
mov
bswap
pop
andl
mov
testb
rcll
rolb
jg
mov
mov
sbb
xchg
lea
cmpsl
loope
imul
dec
inc
iret
adcb
sbb
mov
dec
jae
hlt
push
cmp
popf
sbb
add
add
pop
rcrl
aam
xchg
int3
jne
addb
sahf
aas
bound
mov
lea
cmc
ljmp
jo
and
fadds
add
push
xchg
push
imul
arpl
sbbb
fistpl
out
inc
and
scas
outsl
inc
push
add
pop
push
test
sbb
xor
lock
lcall
mov
fdivrl
in
insb
pop
fwait
and
xor
mov
mov
dec
sbb
jecxz
jmp
cmp
mov
cmp
pushf
and
testl
cld
sub
add
in
pop
lock
jmp
pop
cmp
inc
popa
es
jns
sub
les
sub
sar
fistpl
sbb
stc
inc
aad
cmpl
xchg
int3
cli
popf
daa
loopne
int3
orb
fsub
xchg
mov
repnz
adc
or
repz
inc
lods
inc
lock
rcll
xlat
xor
jmp
add
dec
sar
jns
lret
jmp
jmp
lods
push
insl
sbb
sbb
nop
jnp
push
xlat
xlat
dec
roll
mov
addr16
jge
pushl
test
iret
stos
sub
cwtl
pop
cmp
xor
sbb
cmp
or
fxch
cmp
xchg
sbb
jbe
in
sbb
pop
add
jl
lea
aad
popl
pop
cld
sbb
dec
dec
popa
dec
ljmp
repnz
lock
adc
call
pop
fmuls
push
stc
test
popf
fiaddl
pop
ljmp
jnp
push
mov
pop
adc
aad
add
lods
or
mov
mov
xor
inc
mov
sbb
jmp
les
lret
sub
cmpsb
lret
loope
shlb
imul
xor
fildl
add
adc
xchg
in
xchg
ja
push
in
popl
pop
sbb
xchg
jae
jnp
mov
adc
push
lcall
sahf
add
cmp
fdiv
dec
idivb
sbb
sbb
or
push
and
jg
ss
aad
bound
xor
ss
xchg
in
push
push
and
out
push
sahf
mov
jne
pop
mov
adc
rcrb
stos
and
xchg
rcrl
test
dec
imul
mov
pop
inc
mov
inc
or
call
dec
test
lahf
cwtl
fnstsw
lcall
inc
hlt
arpl
push
and
int3
sbb
int
sub
aas
or
test
das
stos
ss
lcall
repnz
dec
stos
mov
lds
cmp
or
mov
pop
cli
xchg
push
inc
int3
mov
test
mov
je
sub
mov
sub
das
rcl
push
call
rorl
cmpsb
js
cmp
clc
sub
sub
add
aas
enter
mov
lret
sub
arpl
outsb
mov
cmc
loop
clc
testb
fildl
clc
push
jmp
repz
mov
jnp
sbb
sbb
cmp
imul
fidivrl
lcall
int
sub
jo
cmp
cmp
repz
out
mov
mov
test
fidivrl
inc
scas
aaa
pop
repnz
push
mov
not
cmp
ss
stc
fisubl
pop
das
and
mov
inc
dec
add
mov
nop
pop
lds
stc
je
out
in
mov
lds
xchg
sbb
dec
xchg
cmp
cs
mov
aam
movsb
xchg
mov
pop
pop
pusha
in
std
movsb
test
or
iret
lcall
push
push
scas
cltd
mov
repnz
jmp
add
mov
dec
add
out
sbb
add
sub
mov
lea
mov
das
mov
scas
push
dec
inc
div
pop
pop
xor
xorb
or
xor
sub
fdivl
mov
cmp
mov
xor
dec
pushf
scas
and
mov
add
push
push
mov
sbb
cmp
or
cmp
loope
leave
clc
es
jns
lds
dec
clc
inc
adc
lret
in
aad
mov
stc
adc
jp
loopne
inc
mov
addr16
lock
insl
dec
sbb
data16
lret
es
push
jge
mov
mov
movsb
mov
xchg
stos
adc
adc
lret
cmpsl
or
aam
xor
clc
mov
ret
mov
pop
pop
in
pop
sbb
push
shrb
lahf
inc
stos
xchg
ljmp
pop
jmp
sahf
inc
call
and
cmp
xchg
dec
in
pop
sub
out
xor
jp
and
jnp
out
jae
fld1
jb
pop
fcoms
into
addr16
cmp
push
xchg
lret
je
leave
mov
neg
fwait
sub
push
pop
rcrb
movsl
xorb
xchg
aad
cmp
std
aas
mov
loope
xor
rcrb
in
scas
cmp
es
outsb
xchg
cmc
cmp
adc
lcall
pop
lret
mov
in
mov
pop
jnp
fcmovnb
mov
push
int
cmpsl
sub
repz
xchg
aad
xchg
dec
cmp
xchg
fists
and
adc
mov
push
daa
sub
sbb
aaa
cmp
int3
sub
rorl
dec
dec
enter
inc
sbb
test
int3
stos
adc
sbb
cli
lock
or
mov
add
dec
in
push
loop
pop
pop
cmp
dec
sub
mov
cmp
aad
push
lock
adc
add
jno
repz
or
inc
jae
cmp
or
or
ja
aas
inc
xchg
add
push
mov
scas
icebp
jmp
int3
mov
cmp
or
mov
mov
mov
sub
loopne
xchg
fldenv
cs
in
inc
loope
sub
sbb
enter
dec
call
xchg
mov
xchg
loope
xchg
flds
stos
stos
xchg
push
inc
dec
pop
xor
mov
xor
mov
inc
mov
lret
cs
ljmp
push
inc
out
int3
or
loop
dec
xchg
pop
lret
incl
fcomps
mov
cmp
enter
pop
sti
pop
popa
iret
icebp
sub
cmp
push
xchg
test
icebp
cmp
sbb
dec
sbb
jo
cmp
pop
roll
outsl
lcall
loop
or
push
cmpsb
mov
jp
sub
mov
mov
popf
push
cmp
pushf
adc
div
pop
in
into
clc
ss
inc
push
xor
sbb
add
test
cmpsb
int
and
sub
bsr
stc
cmp
leave
incb
mov
ficoml
sbb
test
xor
loopne
fsts
mov
neg
inc
mov
in
neg
out
add
out
fidivs
repnz
push
mov
insl
pop
sahf
ljmp
adcl
mov
mov
mov
nop
mov
cmp
stc
sbb
stos
sahf
sbb
ljmp
negl
dec
iret
mull
xchg
pop
rolb
imul
push
out
and
pop
mov
pushf
xchg
sub
adc
xor
inc
fcmovnb
add
movsb
pop
inc
fisubrs
add
dec
ja
pushf
ds
les
jmp
cmp
pop
xor
cmp
inc
dec
mov
cltd
cmp
push
xor
dec
ds
lods
sub
mov
mov
jns
popa
pop
push
jnp
xchg
cwtl
jp
test
inc
and
lcall
lock
js
call
and
push
jecxz
adc
icebp
fnstsw
dec
push
es
push
cmc
mov
xchg
sahf
int3
lcall
push
cmp
sbbl
cmc
mov
dec
cmp
cld
sub
rclb
rorb
ret
lcall
outsb
xor
or
mov
mov
dec
and
push
cli
sbb
cmp
outsl
or
ss
dec
lods
test
mov
addb
mov
clc
es
mov
ror
add
jne
mov
cmpsl
push
or
lcall
mov
jae
adc
les
sub
jb
pop
popf
sti
jo
jnp
or
xchg
pusha
pop
leave
stos
sahf
pop
std
les
stos
int3
jb
rol
cwtl
in
cmp
xchg
xchg
inc
cwtl
cwtl
sbb
mov
loopne
es
in
jo
push
dec
in
les
push
scas
or
inc
cld
jmp
je
inc
sbb
cmp
and
inc
xor
in
mov
dec
repz
dec
pop
and
into
xor
or
aam
nop
sti
and
add
push
sbb
sbb
or
cltd
cmp
inc
dec
jge
cmc
ds
mov
loope
int3
dec
pop
mov
fcoms
sbb
or
hlt
cs
xor
in
imul
jo
xchg
adc
xor
into
popf
movsb
hlt
pop
lret
mov
iret
sub
jno
mov
add
adc
jnp
mull
les
aad
lahf
inc
vsubpd
out
push
clc
adc
xor
in
dec
push
sub
jge
sbb
fsubl
test
test
push
loope
repz
data16
cmp
push
cmp
sbb
inc
adc
cmpsb
jb
sarb
shrb
idivl
dec
enter
popf
jnp
jae
ret
add
cmp
andl
cmpsb
cmp
or
out
ror
cmp
pop
jae
rcll
in
sub
sub
jnp
sbb
cmp
inc
cwtl
stos
fdivrl
std
insl
std
shr
in
and
mov
add
fwait
call
jbe
jnp
cmpsl
inc
mov
out
lcall
orb
or
aaa
mov
mov
cmp
enter
jnp
push
rcr
sbbl
pop
push
mov
stc
cwtl
mov
imul
pushf
xlat
xor
or
push
stos
adcl
push
add
push
dec
push
xor
pop
movsb
js
push
std
pop
inc
pop
dec
repz
pop
xor
sbb
je
pop
mov
inc
or
inc
xor
out
enter
sarb
adc
loope
lcall
add
xor
daa
dec
outsl
jbe
out
enter
ss
fdivrs
push
incb
ds
inc
or
dec
xchg
cmp
jb
jnp
jo
cmp
or
lcall
and
jne
jns
mov
mov
add
mov
dec
sarb
insb
push
stos
fwait
jg
sbb
mov
push
sub
and
sbb
aas
pop
adc
ret
in
jle
scas
cli
jp
negb
jecxz
lcall
nop
outsb
or
in
pop
adc
test
into
fstpt
adc
rcrl
stos
out
mov
jp
in
mov
hlt
test
xchg
out
inc
jecxz
insb
xchg
xchg
ds
out
xor
pop
mov
in
int
pop
jnp
or
add
mov
push
frstor
sbb
add
sub
cld
cmpsb
add
pop
inc
sub
imul
cmp
mov
xor
dec
mov
popf
mov
lds
dec
jge
mov
sbb
adc
cli
push
xchg
adc
add
mov
adc
stos
sub
lcall
scas
or
xchg
les
shll
xchg
movsb
pop
outsl
and
and
sbb
cmp
add
mov
mov
mov
sub
add
inc
mov
pop
rclb
xor
mov
aam
loop
aam
cltd
arpl
sub
imul
mov
lods
jo
mov
dec
sbb
out
inc
pop
or
stos
mov
test
and
lahf
cmpsb
mov
push
or
rcrl
out
in
fs
cmp
decb
inc
enter
out
outsl
testl
es
cwtl
push
neg
inc
add
cld
dec
cmp
inc
push
imul
adc
test
xlat
movsb
mov
and
mov
pop
cli
popl
movsb
iret
andb
rep
sub
aad
rclb
xor
jl
pop
out
lods
fsubl
mov
adc
pop
push
cli
test
dec
cmp
movsb
dec
jno
and
lret
js
test
sahf
jecxz
mov
or
jns
shll
adc
dec
mov
dec
mov
nop
ret
fcompl
call
mov
aaa
das
cmpl
nop
cmp
jbe
lahf
pop
cmpsb
sub
rcrl
stos
pop
call
rclb
cmpsl
mov
jne
repz
ja
push
hlt
push
out
out
lahf
mov
pop
pusha
movsb
jno
je
fcomps
ds
fnstcw
fwait
sarb
pop
lcall
sbbb
or
js
ds
ret
clc
lods
les
jg
xchg
fmuls
cmp
adc
aad
sbb
out
add
xchg
popa
mov
adc
fwait
sub
cmp
mov
fildl
insb
loope
stos
push
dec
jno
cmp
xor
pop
push
adc
mov
outsb
pop
and
je
adc
ljmp
xlat
pusha
jmp
xlat
shlb
aam
cmp
scas
xchg
xlat
repz
in
mov
inc
dec
push
sub
fwait
pop
adc
add
hlt
enter
xlat
mov
jae
icebp
or
rclb
xlat
sarl
js
or
mov
outsl
cmp
mov
addr16
jge
inc
pop
fisubl
aas
cmp
push
inc
push
pusha
lcall
fdivrs
daa
cmovns
pop
mov
mov
xor
mov
or
jmp
mov
xlat
bound
mov
in
xor
mov
pop
addl
sbb
add
fcoms
cmc
xorb
xchg
inc
mov
add
xchg
mov
xor
movsl
call
fcmovbe
mov
das
les
jmp
mov
mov
mov
xlat
add
cmp
sbb
inc
sbb
push
xchg
fsubrs
loopne
popa
and
aad
xlat
jae,pn
jnp
xchg
or
cwtl
popf
dec
jnp
adc
call
je
pop
dec
mov
push
jne
xlat
cmp
ss
pop
int
jae
mov
push
negb
scas
adc
adc
cmp
call
aad
aam
out
xchg
jno
push
add
dec
mov
mov
xor
mov
dec
mov
imul
or
cmp
cmp
stos
mov
xlat
mov
std
fcomps
and
pop
xlat
inc
adc
or
or
mov
xchg
sub
into
sbb
imul
mov
fcmovnu
jmp
sbb
hlt
mov
sbb
jns
and
jnp
clc
adc
xlat
mov
cmp
ja
dec
or
sbb
or
cmpl
rcrb
lret
bound
inc
jnp
and
shrb
dec
or
xchg
or
add
imul
add
sub
orl
push
push
rcl
sbb
adc
test
push
fsubr
ret
push
xchg
sbb
or
push
jnp
dec
jmp
or
add
jl
hlt
rcrl
iret
sbb
sub
scas
adc
xlat
inc
sub
es
test
add
push
push
mov
xchg
repnz
mov
das
push
in
sub
mov
add
mov
fdivrl
rcrl
lods
pop
addr16
sbb
pop
sbb
jbe
mov
js
cmp
dec
add
notb
mov
stc
ljmp
leave
mov
enterw
lcall
test
repnz
in
xor
pop
sbb
push
add
pop
out
cmpsb
jecxz
sahf
push
mov
or
pop
jmp
les
jo
in
pop
cli
enter
xchg
mov
push
dec
adc
jno
inc
lods
inc
add
dec
shrb
mov
lahf
mov
bound
mov
jl
loopne
push
mov
jns
pop
idiv
add
shlb
in
pop
add
pop
ret
cmp
sahf
push
fwait
inc
and
and
jle
jmp
xor
fprem1
insb
sbb
imul
ds
in
jge
adc
sub
xor
cs
jb
cmp
in
lahf
sub
push
jnp
clc
js
adc
rol
cmp
iret
ficompl
faddl
out
fnstsw
das
mov
or
and
push
xor
sbb
lock
pop
pop
rcr
rorl
stos
adc
int
inc
cltd
adc
mov
sbb
das
dec
stos
add
insb
jl
mov
inc
push
in
mov
add
ljmp
mov
lock
and
ret
inc
aaa
std
out
xor
push
movsl
dec
or
and
adc
dec
lcall
xchg
xchg
sub
xor
std
enter
and
or
pop
dec
pop
push
sub
sbb
lcall
clc
stos
mov
fisubl
shrb
sbb
mov
icebp
shll
sbb
repz
test
inc
loopne
xchg
repz
or
dec
pop
test
add
in
test
ljmp
loope
cmp
in
loopne
or
fbld
out
jge
fwait
pop
inc
push
xchg
mov
repnz
aam
enter
dec
lds
shl
int3
bound
jmp
lods
lahf
lds
pop
or
cltd
or
cmpsl
xchg
popf
mov
outsb
out
jge
mov
scas
daa
xor
mov
int3
aam
sbb
xchg
jb
or
mov
lea
pushw
fcomp
xchg
mov
mov
xchg
andb
jae
cmpb
adc
or
dec
mov
cmp
fcoms
push
aas
stc
xor
aad
dec
dec
add
mov
or
jle
push
xchg
loopne
lret
mov
mov
cwtl
mov
aaa
xor
mov
loopne
addr16
cmp
jbe
xor
aaa
cltd
jge
jb
mov
jno
adcl
sub
hlt
xchg
mov
xor
fisubl
fcmove
mov
sub
testb
pop
xchg
cs
aad
lret
and
addr16
jmp
xor
and
or
aaa
cmp
mov
in
sub
cmc
repnz
add
mov
daa
mov
rcll
xor
xlat
dec
xchg
test
mov
dec
pusha
rclb
fldenv
shrb
jmp
sti
dec
or
inc
lcall
add
int
hlt
fldenv
push
int3
test
int
add
in
repz
or
add
movsb
xor
inc
jae
loop
ret
push
or
lea
push
ss
cmp
pop
mov
out
sbb
lock
adc
int3
lcall
pop
mov
stos
cmp
and
jecxz
inc
adc
xchg
imul
cmp
or
dec
lahf
pushf
and
mov
or
sub
dec
pop
xchg
div
push
movsb
outsb
mov
pop
cmp
inc
lods
adc
clc
and
and
add
jmp
out
lods
mov
dec
xchg
mov
xor
adc
jb
int3
loopne
stos
lret
shrl
jge
jl
sub
ja,pn
cmp
or
and
popf
fcmove
ret
sbb
clc
les
and
lcall
cmp
inc
inc
subl
pop
int
enter
aaa
lds
mov
jmp
adc
out
shlb
and
pop
mov
cli
push
jno
clc
xchg
or
dec
sub
cmp
push
cs
pop
or
test
mov
mov
mov
lahf
cmp
or
bound
ja
repz
outsb
nop
mov
xor
popa
xor
out
aas
adc
xor
adc
or
fmuls
mov
and
testb
or
enter
jbe
rclb
les
clc
mov
enter
or
rcll
bound
mov
xor
ret
repz
sbb
inc
fcompl
test
fucomp
push
push
xchg
iret
stc
dec
sub
xlat
fsubs
pop
sub
push
xchg
inc
sub
mov
cmc
cmp
mov
stos
xor
xor
cld
push
cmp
cmc
mov
dec
fmull
iret
dec
stos
fwait
or
jne
xchg
sub
in
sarb
mov
jcxz
mov
in
aad
adc
inc
adc
adc
xchg
sub
sti
repnz
iret
aad
mov
dec
ljmp
stc
inc
jnp
testb
adc
xchg
cmp
mov
fistps
into
mov
lret
pop
pop
pop
cmpsb
int
stos
sbb
and
dec
pop
movsl
pop
mov
mov
push
cmp
roll
movsl
push
test
popa
aam
les
cmpsl
arpl
lock
aaa
xor
outsl
push
pop
lcall
pusha
cmp
cmp
mov
fcoml
imul
movsl
and
or
in
mov
pop
call
xor
shlb
and
mov
test
cld
push
sub
cmp
in
xchg
movsl
mov
inc
cmpsl
rcll
test
fsubrs
pop
inc
add
and
pop
inc
test
dec
das
inc
addr16
ds
pusha
push
aas
push
into
dec
pusha
pop
lcall
iret
xchg
mov
xor
jmp
ret
xor
adc
xor
push
dec
arpl
cmp
mov
stc
jbe
clc
loope
jbe
mov
mov
popf
fldenv
pop
pop
mov
add
sbb
add
in
add
mov
sub
sbb
test
scas
pop
fimull
cmc
dec
push
subl
int
xchg
sub
mov
or
mov
add
pop
test
fmull
mov
in
mov
push
in
mov
xchg
push
mov
push
adc
rorb
adcl
enter
sbb
les
ds
mov
cmp
fidivs
mulps
pop
or
pop
sbb
and
add
mov
cmp
push
and
in
cmpsl
sbb
addr16
insl
jae
jg
sahf
mov
mov
adc
fucom
repz
loopne
cs
pusha
and
inc
clc
leave
xchg
das
mov
nop
cmp
mov
mov
das
inc
ja
lret
addb
rol
icebp
mov
cmpsb
dec
xchg
rclb
fisttpl
push
sbbb
jmp
mov
sbb
aam
mov
dec
das
test
xor
jmp
mov
subb
xor
lea
aad
xchg
add
aam
out
and
inc
mov
mov
push
repz
test
fistl
ds
dec
shrb
ljmp
icebp
xchg
pop
iret
mov
pushf
movsl
cmp
aad
shlb
fwait
arpl
scas
adc
pop
push
movsb
std
xor
cwtl
xor
fisubrl
arpl
les
pop
rcll
jg
test
clc
iret
outsb
xor
nop
fistps
mov
cmp
push
ja
shlb
or
iret
arpl
or
sbb
mov
sub
dec
sbb
sub
loop
testl
push
test
loope
ds
test
dec
std
inc
ljmp
add
xor
repz
packssdw
or
sbb
in
sub
xchg
or
pop
test
stc
jge
jnp
fiadds
jp
push
xchg
es
xchg
icebp
es
popf
add
bound
cmp
scas
fdivrs
sbb
popa
mov
mov
mov
decb
fsubrl
push
dec
and
sbb
call
cmp
push
xor
cmp
cmp
inc
cmp
xor
test
aad
mov
hlt
es
mov
je
push
js
push
mov
imul
lret
xlat
inc
pop
and
pop
and
ja
jae
shlb
cmpsb
sub
clc
outsl
outsb
roll
inc
out
xor
rcl
pop
pop
add
dec
sahf
pop
inc
sub
inc
adc
std
mov
add
fadd
push
or
test
icebp
mov
insb
lds
lods
xor
cmp
mov
int3
mov
cmp
mov
jnp
pop
push
fwait
mov
negl
inc
mov
or
aam
mov
imul
adc
cmp
mov
insl
xlat
xchg
js
fnstsw
mov
inc
mov
xlat
aas
dec
mov
fwait
mov
lock
nop
cmp
pop
fnstenv
mov
pop
in
aam
andb
in
cmc
sub
dec
jo
in
movsb
loop
jecxz
mov
xchg
fidivrl
fisubl
in
mov
push
push
das
test
push
in
sbb
mov
das
or
test
xor
rolb
xchg
or
xchg
into
aam
ljmp
and
push
test
cmp
cmp
dec
and
jl
or
and
pop
pop
xchg
mov
adc
push
xchg
filds
pop
xor
cmc
pop
xor
imul
rcr
and
nop
aaa
sub
push
dec
xchg
repnz
mov
inc
pop
pop
adcl
ja
mov
mov
dec
sahf
aam
pop
jge
and
sub
dec
sub
sbb
mov
or
mov
adc
lret
dec
dec
mov
pop
mov
fwait
iret
out
inc
jns
testb
sbb
ret
mov
ss
pop
out
inc
push
and
lock
loope
adc
pop
subl
movsl
push
test
cmp
add
jp
cmc
pop
lahf
ljmp
pushf
andb
das
test
popf
clc
cwtl
loop
pop
ds
sbb
stc
out
in
fsubrp
cli
jae
push
xchg
ds
mov
lcall
int3
push
out
cmp
mov
stc
pop
divl
and
adc
or
fstpt
out
mov
test
push
test
cmp
repz
movsl
push
es
sbb
pop
jmp
sub
js
push
or
test
or
add
js
js
jne
jno
mov
testb
inc
pop
jnp
inc
adc
pop
sbb
cmpsb
xlat
jae
inc
mov
pop
aas
inc
xchg
shrb
aam
cmp
test
mov
stos
pop
pop
dec
mov
lret
sub
hlt
dec
xor
pop
outsb
cmp
xchg
jg
fcmovbe
popl
adc
dec
mov
imul
sub
add
subb
in
sbb
lahf
shlb
push
lret
test
and
xor
out
bound
cmp
lahf
insb
bound
cmp
and
dec
mov
outsl
push
mov
stos
lcall
ljmp
cmp
mov
mov
jle
sbb
mov
mov
addr16
inc
mov
mov
jb
movsb
jno
out
outsb
ljmp
and
test
decb
push
or
fldcw
or
push
xor
xchg
incb
xchg
mov
add
xor
sub
test
loopne
ss
aad
out
cmp
fcmovb
jae
mov
cmpsl
addb
jl
xor
roll
push
xor
xor
fmulp
test
sub
stos
pop
cmp
jmp
mov
pop
push
mov
repnz
push
aam
fcompl
sub
add
add
cmc
sub
enter
sub
or
xlat
hlt
shll
mov
fstpt
sbb
icebp
aaa
adc
xor
mov
inc
xor
shr
xchg
and
scas
mov
jmp
repz
inc
cli
sti
dec
cmc
ljmp
xchg
mov
or
int
mov
adc
xchg
cmp
hlt
mov
jbe
mov
arpl
lods
mov
aad
or
push
call
sub
sub
adc
cmp
inc
mov
test
adc
mov
aam
pop
mov
push
jae
or
cmpsl
mov
cmpsl
fistps
sbb
mov
adc
in
out
nop
fwait
repz
push
loope
pop
mov
cmp
xchg
shlb
pop
fcompl
jg
jo
cmpsb
call
test
arpl
inc
mov
cmp
push
cmp
push
lcall
cld
xrelease
clc
lret
xchg
dec
rorb
pushf
push
push
sub
push
xor
mov
sub
les
adc
or
dec
cmp
mov
clc
mov
out
add
orl
in
mov
xchg
push
sbb
popa
les
outsl
jmp
jb
aas
aas
mov
fwait
repz
xchg
fucom
jge
mov
sbb
lods
xchg
sahf
jg
test
movsl
xchg
pop
inc
mov
mov
mov
clc
sbb
cmp
lahf
out
sub
mov
fisubs
movsl
or
ljmp
in
xchg
pop
xor
in
jge
lock
push
mov
jg
sbb
call
xchg
repz
in
stc
aaa
fisubrs
jge
stos
dec
sub
hlt
mov
add
aam
jbe
dec
jge
cmpsl
adc
iret
ss
cmp
mov
loopne
mov
push
and
pop
xchg
in
flds
cld
stc
dec
sub
das
dec
stos
pop
adc
popf
pop
popf
test
mov
repz
pop
dec
pop
sahf
push
outsb
cmp
cs
sub
push
push
mov
ja
cmpsl
dec
xor
mov
add
pop
or
xor
jnp
adc
cmp
adc
icebp
adc
cmp
cmp
mov
pop
dec
pop
add
ss
adc
sbb
jl
adc
sbb
adc
cs
xor
jb
pop
inc
and
popa
xor
lret
jae
or
in
out
push
outsb
cltd
addr16
xor
xlat
jnp
jae
cmp
push
sub
or
sahf
nop
sti
ds
aad
fistpl
mov
dec
mov
fmull
inc
mov
dec
mov
or
testl
ljmp
sbb
aam
jb
add
out
pop
out
arpl
jnp
and
jo
loopne
outsl
test
or
ja
dec
sbb
loopne
jmp
sub
sub
addr16
lock
xor
mov
int
arpl
lods
push
lds
cld
das
and
xlat
and
jno
aas
mov
or
daa
stos
mov
mov
lock
fisubl
aaa
sub
cmp
jae
sbb
mov
iret
movd
int
mov
sbb
adc
mov
cld
ret
dec
cmpsl
or
jl
cmp
lret
jmp
arpl
std
loopne
inc
fstps
pop
sub
inc
jo
cmc
dec
icebp
mov
cmpsl
rorb
rcrb
xchg
call
cmpsb
mov
xchg
les
jo
inc
xor
shrb
push
xlat
dec
subb
ja
call
jnp
lds
mul
cmp
lahf
ret
rcll
imul
cmp
push
icebp
daa
fmull
jne
or
or
sbb
xchg
sbb
insl
mov
stos
push
hlt
or
movsl
pop
mov
xor
add
clc
out
popf
sbb
iret
pop
mov
xor
jecxz
into
adc
push
and
lret
mov
xor
adc
cwtl
scas
mov
clc
mov
hlt
mov
mov
les
inc
int
and
inc
xlat
mov
cmp
push
ret
pop
in
and
add
xor
iret
out
imul
lcall
add
es
sahf
stos
out
call
outsb
push
inc
push
xchg
push
dec
dec
cwtl
pop
int3
push
and
jno
xlat
pop
insb
fmull
add
cmp
fxch
fcoms
lcall
cmpsb
orb
call
stos
fistps
pushf
int
cmp
cmp
fnstsw
pop
adc
add
push
shll
std
inc
dec
iret
push
sbb
jne
dec
xor
jmp
sahf
xor
lcall
pushf
xor
mov
push
subb
ja
aam
jg
jmp
das
push
aad
adc
aaa
and
ds
adc
popf
or
fsubl
fistl
dec
jmp
or
push
cmc
nop
and
jg
inc
ss
or
cmpsl
and
loope
ljmp
rorl
repz
jo
pushf
mov
mov
push
xor
pop
or
jb
push
sbb
cmp
dec
xchg
adc
pop
sub
push
jne
addr16
adc
movsb
loopne
popa
xchg
pop
xchg
push
push
or
cmpsl
inc
bound
xor
es
jge
mov
rorb
adc
jmp
adc
frstor
daa
dec
lret
call
movsl
test
loop
pop
lret
or
pop
jbe
mov
rcll
add
adc
add
in
pushf
repnz
imul
aad
pop
mov
ja
mov
sbb
jecxz
cmp
popa
cmpsb
jge
int3
bound
shrb
xor
cmp
sbb
inc
dec
add
inc
out
push
out
lds
bound
leave
adc
hlt
nop
lcall
sbb
push
xchg
jp
test
adc
push
xor
xlat
les
pop
enter
cmp
sbbl
mov
and
jnp
lret
int
and
xor
aad
mov
sahf
dec
mov
cld
mov
mov
popa
pusha
cmp
stc
jae
lcall
enter
xor
sbb
loopne
mov
je
or
xchg
pop
dec
cmp
jg
sbb
push
test
into
hlt
mov
inc
outsb
push
lods
cmp
out
adc
scas
jle
mov
and
imul
jae
insb
inc
mov
fstl
lcall
addr16
and
xor
sbb
js
pop
dec
cmp
push
mov
sar
idivb
jg
lahf
sarb
mov
aad
cmpsl
fsubr
inc
add
stos
inc
inc
test
sbb
sub
xchg
cmp
dec
cmp
stos
pop
sbb
cmpsb
mov
iret
ret
mov
dec
out
fwait
sub
adc
jmp
ljmp
mov
lcall
jecxz
fdivs
jmp
daa
dec
call
or
xor
mov
dec
mov
xor
mov
and
sbb
les
sbb
les
inc
and
cwtl
or
cmp
pop
add
jbe,pn
int
sbb
mov
sub
cmc
ret
cmpb
sub
int3
adc
and
or
add
mov
out
adc
xor
stc
xchg
xchg
js
xchg
in
sub
bswap
out
jae
in
jnp
lock
lret
test
xor
sub
ret
into
cmp
ljmp
jge
mov
fnstsw
fldt
repnz
adc
bnd
dec
mov
jmp
mov
pop
xchg
inc
push
add
les
push
je
mov
sub
push
push
inc
lods
mov
push
xlat
xor
inc
mov
jo
push
pop
cmp
scas
test
lahf
cwtl
cld
clc
lock
xchg
push
cmp
mov
addr16
or
fmuls
jmp
inc
dec
jnp
shl
add
xor
mov
shl
aad
xchg
push
mov
push
fcmovnb
jl
jle
stos
add
jno
mov
sbb
ret
lock
add
mov
xchg
sbb
pushf
cmpsb
cmp
les
mov
jg
xchg
xchg
xchg
sub
sbb
adc
push
and
stos
shrl
lcall
movl
daa
insb
mov
popf
dec
mov
fcomi
sahf
xchg
jnp
push
xor
fmuls
or
mov
cmp
mov
jnp
test
int
dec
loope
inc
in
out
jp
pop
xor
clc
inc
jmp
out
dec
fbld
dec
sub
sbb
push
loopne
ret
add
ret
fistl
sub
sahf
push
jae
dec
or
xor
xchg
scas
lods
loop
hlt
lods
nop
popa
js
dec
fidivrs
push
aaa
addr16
or
mov
mov
xchg
js
mov
repnz
or
push
ljmp
add
cmp
pusha
dec
xchg
xchg
mov
and
stos
sub
mov
add
aas
push
inc
add
pop
test
arpl
push
jb
in
or
pop
leave
movsb
inc
clc
mov
jl
jecxz
xchg
iret
nop
icebp
pop
sbb
fstpt
push
dec
add
ror
sub
aam
lret
push
mov
xor
sbb
outsb
add
mov
mov
adc
call
or
jle
mov
adc
xchg
ret
cmp
push
sbb
adc
gs
aad
dec
dec
lret
add
and
mov
xchg
aas
push
pusha
xchg
cmp
mov
sub
in
jp
inc
in
cmp
mov
das
mov
pop
movsl
jae
hlt
adc
xchg
lcall
inc
jecxz
sbb
adc
and
lcall
and
stos
out
lock
test
pop
push
or
adc
mov
pop
or
sahf
sub
sahf
sbb
lock
jbe
mov
iret
add
cmp
pop
mov
inc
test
fildl
cmp
sub
pop
cltd
fnstsw
mov
insl
int
stos
pop
lahf
cmp
xor
mov
mov
sbb
xorl
cs
arpl
inc
test
mov
mov
pop
xor
xchg
call
mov
aad
mov
jns
out
das
mov
fcomi
outsb
popa
fisubl
and
aad
repz
lock
add
pop
mov
imul
sub
faddp
cmp
movsb
adc
xor
out
orl
mov
ja
cltd
rcr
push
lcall
dec
aas
rcll
mov
fisttpl
jg
inc
clc
push
call
pop
pop
lods
add
dec
xchg
lods
or
inc
mov
xor
and
data16
inc
je
cmp
mov
popa
jp
repnz
push
mov
adc
nop
rcrb
test
nop
icebp
insl
jns
mov
mov
jns
xchg
lds
dec
and
and
sbb
xchg
aaa
dec
dec
imul
cmp
aas
pop
cmp
mov
fcom
mov
aad
repz
mov
add
movsb
rclb
ss
xor
add
incb
sub
dec
sub
mov
xchg
xor
repnz
arpl
dec
xor
hlt
and
in
sahf
insl
stos
xlat
lcall
fstl
add
inc
xchg
mov
sub
adc
add
adc
inc
push
lahf
xchg
mov
xchg
push
jmp
add
sbb
sub
or
push
cmpsl
cld
cli
xchg
fisubl
and
push
sbb
lcall
cmp
cld
pop
sbb
push
ss
cmpsl
push
add
dec
movsl
add
push
movsb
mov
andl
sahf
jge
jno
or
push
pop
jb
movsb
test
or
lods
loopne
iret
dec
mov
xchg
jmp
cs
iret
loopne
mov
xor
pop
ljmp
les
jno
shrb
rcr
pop
pop
addr16
ss
shll
fiadds
loopne
call
mov
push
xor
stos
sub
and
loope
cmp
insb
movsb
mov
sbb
jns
hlt
ror
push
adc
imul
cmp
or
inc
loope
rcrb
jl
mov
dec
aad
aad
nop
push
int3
ficompl
cmpsl
jb
inc
fcoms
jmp
pop
or
movsb
mov
or
push
pop
inc
mov
mov
and
in
test
adc
jmp
push
push
pop
xchg
dec
mov
push
repnz
int
movsb
pop
xchg
ret
movsb
adc
test
shlb
stos
mov
mov
jae
mov
xlat
dec
mov
fwait
es
inc
das
push
adc
adc
ljmp
addr16
stos
jecxz
jae
enter
cmpsb
push
and
hlt
jecxz
mov
lods
repz
ficoml
enter
ret
ljmp
add
repz
add
les
pop
lods
lcall
in
add
mov
lock
mov
movsb
add
pop
sub
push
inc
test
mov
pusha
sbb
out
movsl
insl
shlb
out
out
push
and
daa
hlt
or
fistpl
pop
cmc
sbb
faddl
pop
dec
or
xor
in
pop
out
stos
bound
jmp
push
mov
dec
in
inc
jge
dec
sbb
xchg
push
ljmp
sub
inc
icebp
je
out
cmp
add
les
sub
in
imul
in
xchg
testl
sub
cmp
sbb
test
sahf
pop
xchg
or
pop
cmc
jnp
loope
lock
sahf
andb
daa
fs
sarb
inc
imul
aaa
call
cmp
fucompp
fadds
lret
out
cmp
mov
sti
pop
mov
sbb
jle
fdivr
adc
repz
repnz
pushf
adc
idivl
popa
pop
mov
negl
xchg
rol
mov
and
ret
push
lret
inc
push
aam
xor
aad
test
in
pop
lcall
mov
sbb
xchg
inc
add
pop
int
sub
dec
or
and
xor
mov
stos
add
and
leave
in
add
push
sub
jnp
jnp
cmpsb
or
xchg
repz
dec
lock
mov
or
inc
in
pop
xchg
mov
loopne
mov
xchg
jmp
in
cmp
mov
dec
add
out
das
enter
adc
xchg
rclb
pop
inc
cmp
js
pop
cmpsb
jb
repnz
ret
push
push
nop
sbb
push
lcall
mov
test
subl
adc
sbb
or
lds
cs
or
aad
fcmovnb
and
add
mov
sahf
lcall
sbb
mov
inc
or
pop
ljmp
xor
xlat
inc
cmp
xchg
movsl
jno
hlt
test
dec
mov
call
inc
mov
in
loope
dec
sbb
int
les
push
lods
mov
test
xor
dec
mov
movsl
xlat
enter
or
sbb
inc
and
dec
pop
jp
cmp
jecxz
push
xor
fisubrs
iret
int
inc
je
pop
xor
dec
push
cmp
lock
icebp
xchg
push
aam
add
aad
or
lea
lea
xchg
and
scas
sub
or
bnd
jne
xlat
jle
sarl
sub
or
decl
fistl
test
dec
xchg
inc
jnp
in
shrb
xchg
imul
jae
adc
dec
sahf
push
leave
pushf
jge
aas
sbb
stos
dec
rclb
jns
push
sub
mov
sbb
roll
mov
jmp
out
stc
roll
mov
leave
addr16
call
sahf
push
movsb
pop
cmp
int
fbld
jno
fcmovnu
xor
in
sub
cmc
and
shrb
shlb
xor
jmp
repz
sbb
mov
out
notb
mov
jmp
mov
mull
adc
fstl
mov
dec
add
mov
sbb
mov
inc
in
cmp
adc
cmp
iret
adc
cmp
adc
cmp
fcmovu
adc
test
mov
ja
je
int
sti
push
sub
adc
decl
xchg
sbb
stos
into
adc
push
lcall
mov
icebp
or
xor
stc
mov
add
dec
lcall
xchg
js
mov
pushf
jb
or
lret
jp
cmpsb
xor
lock
mov
les
fwait
jnp
jle
mov
or
out
testb
sahf
add
ljmp
out
pop
jo
orl
and
add
push
cmp
inc
loopne
test
xorb
shrd
inc
adcl
out
push
sub
inc
dec
notb
mov
mov
mov
sub
push
lds
stos
mov
xor
pop
fwait
and
ret
jp
cmc
push
popf
adc
push
sub
in
inc
sbb
pop
pop
jae
cmp
cmp
jb
sbb
fmulp
xor
popa
fs
dec
cmp
mov
fs
scas
test
ja
xor
fnstenv
adcl
xor
mov
ret
add
cmp
mov
and
pop
data16
arpl
xchg
in
xchg
push
jmp
dec
test
push
inc
je
mov
insl
mov
ss
es
dec
mov
sbb
mov
push
or
aas
xor
sbbl
mov
fists
cmp
repz
xor
cmp
das
mov
nop
xor
xchg
cli
xor
jecxz
sbb
in
xor
in
xor
and
lret
ret
test
xor
dec
xor
inc
testb
cld
cmpsb
mov
inc
lahf
repz
daa
rorb
push
cmp
xor
cmp
clc
push
xor
dec
clc
repnz
cmc
movsb
jp
jmp
ja
ret
mov
fidivrl
xlat
ja
pusha
dec
push
repnz
adc
out
std
jle
lock
sub
add
mov
pop
cmc
cmpsb
pop
daa
add
fcoms
addr16
pop
into
repz
xorl
xchg
addr16
dec
xchg
dec
stos
cmp
sahf
xor
push
repz
fcoms
fcmovnu
or
add
xor
dec
mov
sbb
inc
fildl
fldln2
int
js
sahf
xchg
xor
mov
arpl
inc
scas
fcomps
mov
inc
add
xor
fchs
xchg
mov
loope
adcb
jns
sub
cs
cmp
test
iret
dec
or
adc
loop
lea
or
dec
in
loope
cwtl
jp
loop
sbb
push
push
popa
xor
mov
imul
mov
xor
xlat
adc
lock
mov
add
repnz
sub
sub
hlt
cmpsb
mov
popf
sub
or
pop
sbb
jns
mov
xchg
in
add
xor
stos
into
sbbl
nop
and
dec
xor
ds
mov
iret
filds
ja
xor
mov
mov
bound
mov
cmp
cmc
dec
and
add
and
jge
out
mov
dec
pop
sti
cmc
fdivr
je
es
adc
lods
test
fcoml
sub
xor
sahf
int
push
mov
dec
movsb
enter
pop
and
xchg
mov
mov
jge
and
int
mov
insl
ja
mov
cmp
sub
dec
lods
pop
dec
imul
sbbb
xor
stos
xchg
loope
icebp
pop
cmp
loop
and
xor
xchg
stos
mov
fnstcw
dec
bound
push
mov
xchg
push
sub
mov
lea
fnstcw
clc
roll
fistl
mov
bound
xor
aas
and
dec
lcall
push
push
stc
sub
sbb
pop
fcompl
in
and
leavew
ror
lret
sarl
push
xor
sub
int
jg
cmp
movsb
mov
or
dec
addr16
cli
jns
or
mov
mov
push
jnp
inc
add
sbb
push
sbb
cld
movsb
dec
out
lock
cmp
sbb
cmp
shl
inc
fsubs
jg
xchg
enter
push
pop
dec
ret
ror
loop
mov
aad
cmp
in
mov
int3
inc
pop
mov
sub
adc
popa
cli
ja
test
lahf
leave
iret
cmpsl
and
clc
bswap
cmp
mov
cmp
cltd
jmp
inc
les
decl
push
jmp
imul
xlat
aaa
iret
sub
jno
ret
lret
popf
jnp
cmp
xchg
enter
enter
and
jno
jle
sub
jl
ss
enter
ret
mov
movsl
aad
pop
or
out
pop
sub
xchg
test
idiv
loop
cltd
and
enter
pop
ljmp
fstpl
popf
inc
jae
test
popa
jle
pop
enter
popf
or
lock
cmp
jne
out
enter
testl
mov
imul
ds
inc
les
das
mov
in
or
or
leave
loop
addr16
fnstcw
and
sub
mov
outsl
lret
clc
xlat
dec
adc
call
jo
shrl
adc
lahf
inc
mov
adc
testb
ds
pop
mov
sahf
dec
movsb
fcmovnbe
mov
ljmp
xor
adc
js
fld
sub
lods
bnd
das
stos
mov
add
cltd
dec
add
sub
mov
imul
pusha
sbb
cmp
in
aaa
pushf
lret
test
outsb
aam
leave
or
dec
movsl
jl
es
lea
jg
or
push
sub
and
mov
fisttps
call
shrb
mov
test
das
enter
push
pop
add
cmpsl
lcall
test
clc
cmp
aas
dec
mov
enter
in
jg
mov
sahf
jb
addb
inc
fimuls
fsubs
dec
mov
pop
incb
test
cmp
repz
out
sbb
andl
sub
dec
mov
in
add
outsb
repnz
jnp
daa
adc
dec
jg
stos
push
mov
inc
aad
mov
scas
rcrb
push
push
mov
add
decl
lods
cmp
cld
jo
outsl
into
les
cmp
xlat
pop
sarl
cmp
jae
movsl
jecxz
inc
scas
xor
pop
mov
adc
rolb
or
dec
lcall
mov
aad
jae
push
loopne
mov
jl
cld
in
test
test
out
xor
mov
xchg
add
sub
xor
add
lcall
ret
xor
pop
scas
test
movsl
or
js
sub
roll
adc
outsb
rcrl
xlat
jno
dec
push
sub
pop
jae
xor
stc
mov
shll
or
test
mov
push
sub
arpl
mov
inc
push
xchg
xchg
mov
aad
xor
notl
sbb
mov
js
xor
test
aaa
adc
fstl
ss
ret
mov
cmpsl
call
jp
xor
pop
or
aas
mov
pushl
stos
mov
sub
sub
idivl
jg
stos
cmp
out
push
test
scas
cmpsb
loop
inc
stos
movsb
loope
jmp
nop
inc
imul
push
inc
push
aad
mov
inc
movsl
push
ss
ljmp
and
lret
andl
dec
int
jg
mov
scas
sbb
jo
in
test
in
xor
fcoms
adc
xor
pop
mov
or
test
pop
cmc
add
xchg
or
fidivl
add
enter
jmp
and
ss
dec
call
js
mov
lret
call
aad
push
loop
adc
sbb
lahf
ret
test
add
imul
out
sbb
dec
repz
pop
int
xchg
int
fistpll
stos
aas
adc
fcoml
fsubrs
fldt
clc
call
mov
jbe
scas
icebp
xor
jae
cmp
adc
ret
cli
xor
pop
loopne
mov
jns
mov
adc
notb
ljmp
lahf
in
cmp
xchg
imul
inc
xor
sbb
rcrl
fwait
cmpsb
ret
jae
sbb
add
stos
enter
pushl
popf
inc
mov
or
popa
movsl
pop
xor
adc
mov
lahf
mov
cmp
add
xchg
fstpt
aaa
enter
and
stos
test
iret
inc
push
aam
aaa
enter
cmc
stos
add
fidivrl
dec
or
daa
mov
imul
ret
in
cmp
outsb
mov
fistl
mov
shl
adc
jne
ss
imul
aad
repz
push
ret
in
inc
or
inc
mov
push
cmpb
daa
test
cwtl
xchg
in
lock
inc
push
flds
mov
ja
sbb
jmp
pop
cmp
scas
sarb
iret
fwait
jnp
jg
loop
inc
add
das
mov
pop
ret
mov
pushf
pop
xchg
movsb
or
out
or
sub
loop
loopne
scas
pop
popf
out
cli
int3
pop
ss
scas
dec
mov
and
adc
pop
out
add
jg
ds
push
ja
lds
dec
ja
sub
inc
mov
jnp
addr16
xor
stc
das
loopne
mov
sub
and
dec
clc
outsl
add
xor
outsb
ss
xor
jno
cs
jmp
clc
rcrl
and
mov
cmp
lock
pop
mov
iret
xlat
dec
ss
add
fnstcw
jo
fcmovnbe
jmp
add
lahf
push
or
sbb
mov
pusha
leave
jmp
in
enter
int3
stos
les
out
add
imul
cmp
cltd
xor
dec
add
or
lret
movsb
jno,pt
lods
add
outsb
std
addr16
lds
in
mov
dec
mov
in
xor
sub
hlt
rcrl
lahf
sbb
lods
lret
sub
out
push
or
pop
cmp
jb
adc
lret
gs
stos
in
lock
mov
fcomi
stos
nop
je
lea
aam
les
lods
or
jb
fstpt
xor
movb
popf
xlat
or
je
ljmp
push
ficoml
cmp
les
in
dec
dec
jge
lret
mov
push
fwait
daa
dec
push
loopne
mov
les
aaa
push
ror
aad
dec
jg
int3
movsb
sbb
int
mov
mov
in
fidivs
xchg
xor
aad
dec
or
push
push
pushf
movsb
hlt
lret
test
aam
sub
into
pop
repz
lret
jmp
scas
sbb
push
fcmovnbe
jbe
xchg
xor
test
inc
ret
cltd
decl
lock
scas
lret
pop
mov
sarl
int3
call
cmp
mov
aam
aam
inc
mov
jne
andb
xchg
ja
xor
cmp
incl
push
sbb
add
stos
xor
jnp
negl
fbld
imul
push
cmp
int
dec
sub
add
dec
icebp
orl
loopne
enter
mov
jg
sub
mov
jno
mov
cli
xchg
mov
jnp
roll
or
mov
adc
dec
sub
cmpsb
lret
out
dec
addr16
pop
repnz
loop
mov
xor
addr16
mov
fcomps
loop
and
into
pop
outsb
jg
cmp
adc
dec
add
pop
test
add
cmpsb
mov
mov
dec
adc
int3
arpl
cmp
in
xchg
je
lock
movsb
out
loop
jmp
add
mov
sbb
jp
and
mov
or
mov
enter
fsubrl
pop
clc
fldln2
xor
mov
stos
inc
bound
push
imul
jo
das
lret
push
add
mov
xchg
and
das
push
cmp
in
mov
jp
pop
add
cmc
push
mov
xchg
cmp
inc
xor
das
jnp
dec
shlb
add
mov
inc
xchg
jno
and
mov
push
inc
movsb
inc
pushl
sbb
das
stos
sub
mov
cmp
dec
dec
out
add
jb
lcall
cmp
stc
jae
or
inc
pop
mov
js
popf
movsl
sub
jns
mov
in
popa
mov
movsb
xchg
in
daa
int
enter
mov
mov
jg
inc
add
maskmovq
or
inc
fidivrs
and
call
fwait
dec
int
icebp
js
ss
gs
sub
scas
aas
inc
mov
es
mov
shrb
cwtl
fistps
mov
mov
mov
movsb
sub
mov
out
cmp
mov
dec
outsb
shl
mov
test
push
in
dec
dec
xor
test
sbb
and
mov
mov
jae
add
sub
cs
repnz
iret
push
cwtl
gs
fwait
cmp
out
repz
and
mov
or
das
add
out
adc
pop
in
incb
jno
jne
jmp
in
repz
stos
cld
testb
add
pop
push
lahf
lods
adcb
sub
xor
jno
lret
push
mov
sbb
jae
fnstenv
mov
rol
push
xchg
pop
sub
fimull
sbb
aad
cmp
int3
push
pop
test
insl
or
or
jmp
and
jg
and
daa
fwait
push
jbe
push
xlat
adc
shrb
inc
ret
sub
mov
mov
in
test
cmpsb
pop
mov
sbb
mov
cmpsb
js
and
ds
push
addr16
inc
dec
adc
scas
mov
leave
push
mov
pop
dec
out
subb
mov
rclb
enter
clc
test
icebp
and
aaa
into
roll
pop
hlt
sub
repnz
mov
sub
sub
outsl
mov
cmp
mov
mul
jp
outsl
loop
mov
jecxz
loope
cmp
mov
mov
sahf
mov
rcrb
aas
loope
lock
mov
dec
stc
mov
cmc
cmp
inc
lahf
cmp
xor
pop
or
adc
jae
inc
or
mov
xor
adc
sub
out
stc
dec
jb
push
cmpsb
roll
je
pop
dec
mov
xor
add
in
push
cld
or
push
jnp
pop
pushf
or
and
jg
or
xchg
int3
push
inc
fwait
ds
aad
imul
or
add
fwait
sub
pop
iret
data16
popa
jno
pop
push
fcmovnbe
adc
in
daa
into
push
cmpsb
dec
out
sub
rorb
out
pop
shrb
sahf
xchg
adc
cmp
inc
iret
sbb
cli
lcall
scas
pushf
test
test
dec
pop
cmp
push
fdivl
scas
call
add
fsubs
mov
push
popf
loopne
add
push
jns
jge
xor
pop
push
int3
out
jecxz
test
dec
inc
fcoms
xchg
or
sub
arpl
and
xor
popf
jb
orb
icebp
in
pop
xchg
inc
iret
test
bnd
cwtl
mov
clc
inc
push
stos
sbb
xor
sahf
cmp
xlat
dec
gs
addb
stos
sbb
aaa
pop
je
mov
lcall
adc
cli
push
push
pop
arpl
add
cmpsb
or
lea
out
std
jecxz
pop
or
sbb
and
mov
repnz
cmp
ficompl
iret
push
cmp
ret
xchg
test
lods
or
push
fwait
cs
push
or
aaa
daa
sbb
dec
out
aad
int
out
xchg
iret
dec
test
cmp
lea
pop
lock
jp
jae
aaa
ja
mul
lock
add
push
in
sbb
leave
pop
pop
insl
xor
mov
in
movsl
hlt
pusha
sbb
loopne
pop
jle
add
popf
xchg
inc
lret
inc
bound
repnz
mov
pop
cwtl
sbb
mov
sub
jns
mov
les
lcall
add
das
stos
mov
mov
inc
movsl
mov
cmp
sub
xchg
and
pop
mov
leave
mov
mov
mov
pop
cmp
adc
test
fmulp
pop
mov
dec
dec
into
mov
mov
cmp
in
pop
sbb
pop
or
pushf
xlat
mov
sbb
sub
in
push
mov
xor
enter
mov
xor
imul
pop
jnp
mov
cmp
ss
fdivrp
ljmp
je
pop
or
mov
leave
cmp
pop
aad
fdivrs
cltd
aas
mov
xor
dec
ss
fistl
dec
dec
mov
call
aaa
test
or
xor
pop
pop
enter
int
or
lahf
addr16
sub
outsl
lcall
push
jp
fldl
cmp
es
shrd
xchg
inc
js
mov
push
stc
decl
icebp
jnp
loope
fstps
les
ja
push
inc
test
sbb
pop
inc
fcomp
mov
mov
and
add
call
int3
xlat
das
lock
inc
mov
pop
nop
bnd
mov
jmp
fldcw
sar
cmp
mov
pop
push
fwait
jns
repz
mov
pop
pop
sub
subl
xlat
pop
in
adc
lcall
ficompl
je
or
xchg
dec
addr16
adc
pop
push
mov
jg
or
sub
or
jns
add
push
es
clc
sbb
movsl
add
cmp
cmp
mov
mov
sbb
mov
push
fwait
sbb
ja
cwtl
fprem
fdivs
jnp
push
jp
fucomi
in
cli
cmp
sbb
dec
mov
sub
cmp
or
mov
jle
cmp
rorl
aad
jmp
int
mov
mov
aas
pop
and
inc
fdecstp
inc
pop
jle
stos
movsb
outsl
fwait
mov
shrl
sub
xchg
dec
inc
xchg
into
call
stos
or
shlb
adc
sub
pop
or
jnp
mov
xchg
push
push
push
jge
jecxz
out
in
dec
cmp
dec
outsb
mov
adc
or
pop
pop
adc
pop
in
add
push
cmp
or
pop
mov
add
jp
sub
cwtl
repz
jmp
add
jmp
je
mov
orl
inc
pusha
push
nop
aad
mov
ja
int3
mull
sbb
sti
clc
cltd
pop
mov
cmpsb
xchg
and
mov
jmp
enter
jmp
aas
cbtw
mov
negl
sub
cli
sbb
dec
jle
sbb
add
push
jae
fisubl
sbb
fstp
or
sbb
pop
stos
pop
aad
sub
mov
jmp
mov
add
fwait
cmp
into
or
push
jmp
jmp
push
fwait
in
mov
sub
mov
inc
sarb
sbb
mov
mov
mov
or
popf
pop
push
mov
nop
mov
push
clc
rclb
cmpsb
mov
add
xor
mov
push
cmpsb
dec
pop
movsb
cmp
cmp
lahf
movsb
movsl
xchg
ljmp
sbb
sti
imul
xchg
outsb
cmpsb
adc
addr16
xor
inc
push
mov
mov
cmp
iret
psubusb
nop
ds
adc
cmp
pop
sub
xchg
aam
icebp
add
test
cmc
sbb
pop
inc
xorl
iret
cmp
cmp
lret
push
dec
cmpsb
push
in
and
jbe
adc
jg
gs
sahf
cmc
sbb
cmp
mov
dec
outsl
xlat
mov
mov
push
push
jl
shrl
xor
lods
add
shll
and
notl
ja
arpl
scas
notb
aad
jecxz
ds
mov
or
dec
cli
xchg
dec
imul
jo
or
or
arpl
int3
mov
pop
pop
sbb
xchg
xor
jecxz
sbb
adc
popf
mov
out
ror
enter
mov
inc
stos
adc
inc
ljmp
filds
ds
jmp
cmc
fimull
fisttpll
div
xchg
repz
out
jnp
int
sbb
lret
int
clc
in
fstps
dec
adc
ficoms
xor
or
out
xchg
sub
mov
jb
inc
inc
fcmovnu
mov
mov
inc
mov
int3
xchg
movsl
jns
push
add
push
sub
dec
jns
fsts
inc
mov
les
imul
cltd
xchg
xchg
in
cs
cwtl
sbb
pusha
push
xchg
mov
sub
cs
jns
mov
pop
cmpsl
imul
sub
cs
mov
or
lods
sbb
ja
jno
or
in
dec
mov
mov
jnp
and
pushf
lods
imul
leave
fmuls
and
sub
int
pop
add
add
xchg
add
repnz
aaa
cmp
mov
test
and
fistl
pop
fists
sub
cmp
push
es
sbb
fmul
out
jp
stos
xor
push
jmp
push
sbb
jg
push
add
sahf
iret
xor
rcr
mov
push
gs
fmuls
jecxz
in
xchg
enter
in
nop
movsb
dec
dec
les
mov
inc
stc
popf
jmp
shrl
cmc
fidivs
inc
cmp
in
imul
sahf
push
jecxz
cmp
cld
push
adc
push
testl
pop
adc
adc
inc
rolb
jns
mov
add
mov
adc
lock
fs
jmp
in
mov
push
dec
jmp
jmp
push
mov
repnz
int3
adc
pop
scas
ja
push
scas
jne
jno
sub
icebp
cmpsb
dec
inc
dec
outsb
daa
mov
or
ss
repnz
lods
in
sahf
inc
test
rcll
out
mov
xor
mov
nop
ja
and
insb
dec
outsl
sbb
and
cmc
sahf
repz
cltd
jecxz
or
out
stc
mov
and
xlat
jmp
and
xchg
enter
negl
or
dec
les
xor
sbb
push
jo
xchg
lods
out
adc
adc
jnp
push
xor
clc
aam
test
jmp
int
xor
push
ljmp
jo
pop
adc
enter
or
popf
outsl
or
ret
ficoms
imul
cmp
fsubrs
pop
sub
add
iret
mov
movsl
fdivr
cmpsl
pop
push
xor
mov
dec
mov
or
decl
test
iret
jo
nop
pop
mov
neg
push
out
xchg
push
xor
out
mov
dec
and
dec
dec
mov
pop
fs
xchg
inc
dec
push
cmp
jnp
sbb
loopne
sbb
jo
hlt
jno
dec
mov
iret
and
xchg
clc
jae
xchg
aad
fimull
sub
mov
add
push
ret
jmp
cmc
mov
mov
xor
push
outsl
fsubrs
pop
push
ja
mov
jmp
rcrl
mov
inc
and
sbb
int3
sub
in
cs
das
mov
es
test
add
inc
sahf
rorb
mov
push
inc
lahf
lahf
out
jp
dec
xor
dec
mov
int3
mov
sbb
sbb
pop
es
and
cmp
in
push
aad
aaa
xor
inc
les
arpl
mov
add
fcoms
pop
or
sub
mov
popa
addr16
fnstenv
push
in
jecxz
jle
repnz
inc
mov
jo
sub
fidivl
sub
sbb
fistps
cmc
cmpb
jg
rclb
sar
mov
clc
jne
inc
xchg
or
xor
inc
inc
mov
mov
inc
add
rorb
mov
lods
mov
pop
aad
sbb
shlb
out
cmp
or
mov
inc
loop
dec
jecxz
mov
jg
jmp
fdivrl
cld
imul
pop
mov
ret
push
and
insl
adc
repnz
and
sahf
push
add
xor
mov
fcmovbe
fcmovnbe
inc
fcompl
push
jg
push
hlt
adcl
ljmp
or
inc
xchg
lret
xlat
pop
mov
fnstenv
mov
test
aad
ret
add
in
stos
add
enter
mull
aad
js
jmp
into
push
mov
int3
sbb
ds
sub
mov
sbb
sub
add
add
das
mov
sbb
xchg
test
rcrl
fiaddl
dec
enter
mov
aad
movsb
or
mov
xor
cmp
jnp
push
dec
pop
or
dec
pop
mov
jne
pop
pop
push
ja
stos
push
cmp
fldt
mov
mov
ss
xchg
or
push
loopne
popf
jo
pop
push
daa
addb
cmp
jnp
inc
add
cmc
mov
cs
cld
push
mov
lret
lea
lahf
dec
shlb
add
cmp
jbe
sbb
loopne
add
xchg
xchg
adc
mov
or
hlt
filds
sysret
cld
inc
xchg
or
fld
or
sbb
sub
repz
mov
lahf
xor
mov
clc
les
and
push
repz
mov
and
cs
cli
es
lret
adc
or
sub
cmpsb
dec
sbbb
xchg
add
sub
aam
mov
cs
aas
push
andb
sbb
jp
rcll
xchg
inc
xor
addl
inc
or
xlat
mov
jmp
dec
int3
add
icebp
icebp
cltd
mov
call
adc
push
repz
xchg
mov
out
pop
xor
addr16
iret
enter
xchg
xchg
repnz
cmpsb
mov
cmp
inc
das
repnz
stc
cltd
mov
sbb
adc
push
sarl
pushf
ret
adcb
ja
dec
outsl
cmpsb
pop
add
pop
lret
mov
xor
addl
xlat
jnp
in
pop
out
lods
les
push
fimuls
adc
xchg
jmp
stos
adc
lret
xor
xor
push
leave
dec
cld
mov
push
mov
bound
pushf
lcall
pop
pop
dec
popa
xchg
push
cmp
xor
xchg
pop
dec
push
dec
jo
addb
movsb
fmul
mov
sbb
jns
in
sub
dec
bound
mov
pop
lret
mov
sub
and
add
adc
push
add
xchg
pop
dec
decl
lock
test
popf
jb
cmp
xchg
mov
jno
sbb
sub
into
clc
cmpsb
sub
cmc
jmp
inc
loop
sub
arpl
xchg
or
push
inc
cmp
mov
xor
xchg
sbb
loop
pop
lods
scas
or
sbb
cmp
imul
add
and
out
fimull
mov
divl
pop
push
popf
sbb
andb
push
jl
inc
dec
xor
or
fimull
aaa
xor
scas
fdivrs
aaa
test
jno
or
repz
les
add
pop
stos
ret
fcoms
xchg
les
sbb
out
jne
fdivrl
fildl
mov
xchg
inc
push
xchg
and
stc
jg
arpl
sbb
or
push
adc
mov
arpl
ljmp
test
aas
cmp
popf
jns
jne
xor
aad
fs
pop
aad
pop
or
mov
push
inc
ret
sbb
jno
mov
dec
fldcw
popa
roll
jbe
mov
jns
cmp
test
adc
xlat
int3
jo
hlt
in
push
mov
in
add
cmpsb
icebp
mov
cmp
test
aaa
into
pop
adc
or
hlt
imul
push
jmp
inc
pop
shll
das
xchg
movsl
popf
lods
cmp
jno
push
push
movsb
hlt
lock
mov
pop
jno
push
mov
xchg
dec
lret
das
pop
dec
imul
stos
cmp
jp
sub
inc
fsts
jecxz
and
inc
xchg
jg
insb
push
inc
xchg
jmp
xor
fcomp
mov
add
ret
shlb
inc
push
xchg
and
xor
repnz
mov
pusha
or
pop
test
xor
mov
inc
xor
jo
clc
mov
mov
cmpsb
sub
ss
or
movsb
mov
pop
cli
fistpll
mov
pop
cmpsl
and
ds
push
push
out
flds
shll
cld
notl
lret
jns
roll
lahf
or
or
sub
faddl
lcall
lock
xor
cmp
imull
int3
jmp
sub
ret
add
loopne
enter
pop
mov
mov
out
sahf
pop
xor
in
cmp
hlt
into
in
pop
out
sub
xor
or
repnz
push
div
movsl
push
nop
and
xor
sbb
jbe
data16
pop
incl
jnp
fcmovnb
add
cmp
out
lods
or
dec
loope
or
push
sub
in
push
sub
dec
int3
ss
push
mov
push
sub
test
jo
mov
sub
iret
stc
add
fxch
jns
fwait
cmp
xor
dec
add
xor
clc
jnp
xor
je
testb
push
fwait
xchg
jl
cltd
or
cmp
lahf
add
in
mov
jno
fdivs
in
cmp
mov
cli
jecxz
scas
ret
in
adc
stos
mov
adc
xor
testl
dec
test
mov
dec
pop
mov
pop
add
fwait
add
jns
testl
pushf
push
adc
bound
aad
sub
das
xor
arpl
and
sarl
add
xor
cmc
movsl
xchg
or
mov
or
cs
repz
not
cmc
pop
negl
sbb
int
pop
push
or
scas
and
jl
add
xor
lret
xor
lcall
push
scas
data16
test
sarb
sub
xchg
pop
addr16
pop
cmp
test
mov
mov
mov
repnz
pushf
pop
jmp
mov
xor
lods
and
xchg
jno
sub
cmc
add
add
in
imul
ret
dec
loop
or
out
sbb
cmc
mov
or
jge
mov
mov
xor
fnstcw
pop
xlat
pop
mov
lcall
insb
addb
sub
test
dec
lret
test
loop
or
sbb
fists
in
jmp
mov
notl
lods
sub
mov
sbb
cmp
arpl
mov
dec
pop
mov
or
or
test
aas
fucomip
mov
and
andb
push
xchg
es
mov
cmc
int
mov
xchg
xor
cmpl
in
pushf
sub
enter
jo
jnp
or
mov
loopne
sub
push
xor
pushf
xor
sub
in
sub
cmpsb
adc
add
sbbb
clc
in
inc
mov
or
xchg
add
mov
iret
inc
dec
cmpl
mov
mov
pop
xchg
dec
pop
into
lcall
lret
mov
pushf
mov
xor
enter
mov
mov
ljmp
movsb
adc
mov
incl
mov
push
pop
inc
fsubrs
lea
xor
mov
sbb
mov
jecxz
out
xor
mov
imul
pop
adc
das
mov
aam
in
cmp
mov
rclb
jge
push
or
sbb
dec
push
outsl
pop
scas
mov
stc
xor
dec
mov
pop
mov
jne
repz
aas
jg
insb
lret
or
xor
mov
dec
push
jae
int3
sbb
stos
mov
jnp
pop
mov
ret
jmp
xor
enter
inc
sbb
mov
jg
pop
mov
lds
hlt
sub
fcmovne
cmp
push
mov
movsb
test
iret
in
cli
mov
mov
inc
int
iret
lock
and
xor
pusha
les
push
fnstenv
add
push
aad
call
nop
sbb
and
xchg
call
mov
jg
lcall
add
lea
subl
add
mov
push
loopne
mov
jg
adc
xchg
mov
add
mov
inc
pop
dec
cwtl
push
sub
pop
imul
jmp
ss
xor
imul
jg
mov
and
jmp
jp
in
adc
jae
lret
ret
mov
adc
lea
shrl
test
out
sub
fprem1
jmp
test
data16
pop
stos
push
fidivs
rolb
lahf
aam
ret
hlt
cmp
cmpsb
xor
inc
cld
nop
xchg
sar
add
lods
cmp
jp
popf
dec
imul
push
pop
xchg
push
dec
pop
stos
ja
pop
addr16
jg
jge
lcall
mov
repnz
std
lea
mov
adc
and
mov
jmp
pushf
adc
or
shr
scas
mov
aas
inc
cmc
les
cmpsb
ret
pop
aad
enter
hlt
leave
add
jb
adc
push
mov
mov
insl
mov
addr16
sub
mov
scas
push
dec
mov
mov
inc
dec
and
sbb
mov
add
arpl
jg
xor
loope
mov
lahf
jle
jnp
lock
shlb
lock
mov
cs
mov
fsubrl
xlat
dec
xor
dec
mov
mov
lock
jns
lret
sub
in
data16
xor
in
dec
inc
push
das
popa
push
sub
int
pop
gs
clc
sbb
add
or
lahf
ja
sbb
ja
or
dec
shll
adc
fwait
sub
mov
fistps
fwait
xchg
cmp
clc
push
in
xchg
les
xchg
dec
cmp
enter
sbb
shl
jg
testb
push
outsl
xor
jno
sub
jnp
insl
fldt
mov
cmpb
jno
int3
imul
pushf
sub
cwtl
inc
mov
pop
adc
sub
dec
clc
es
mov
mov
fdivs
adc
jmp
out
mov
jb
movsb
dec
push
test
dec
out
outsl
test
cli
pop
js
or
mov
xchg
inc
ljmp
xchg
push
das
push
aad
sub
stos
shl
and
xchg
and
mov
insb
cli
cmp
dec
dec
faddp
xor
inc
cmp
in
icebp
les
xchg
jb
pop
pop
cmpsl
inc
adc
stos
mov
dec
pushf
mov
mov
push
out
push
jg
mov
add
js
lcall
inc
and
jmp
jno
or
icebp
mov
dec
cmpsb
bnd
fsubl
or
clc
inc
inc
shlb
xor
imul
ss
pop
mov
enter
insb
inc
pop
shlb
loope
ficompl
push
lea
enter
mov
sahf
or
sub
movb
addr16
xchg
mov
sbb
flds
fnstenv
call
mov
inc
mov
cmp
fidivl
fistpl
cmpsb
xor
in
sub
sbb
xor
imul
add
sbb
push
add
xor
adc
push
inc
aad
movsb
jle
aam
xchg
fnstcw
cltd
mov
sbb
xchg
f2xm1
in
dec
dec
xchg
shlb
ds
rclb
fimull
jae
xor
fiaddl
mov
jae
and
or
mov
in
leave
aam
faddp
cmp
imul
subb
pop
pop
mov
xlat
pop
mov
cmpsb
cmp
insl
sti
in
ficompl
ds
cli
inc
jmp
hlt
dec
or
idiv
int3
push
imul
xor
test
pop
inc
sbb
test
mov
sub
aaa
add
xlat
mov
push
jb
mov
cwtl
shrb
xor
mov
jmp
pop
inc
jbe
mov
mov
enter
jp
xor
add
mov
mov
inc
cmp
mov
das
subl
stc
mov
test
call
xor
test
adc
add
pop
add
mov
scas
xorb
aas
xchg
out
inc
cmp
pop
pop
and
out
add
xchg
push
je
test
xchg
mov
les
or
sbb
ja
std
add
int3
mov
adc
out
addl
xor
cltd
pop
or
xchg
mov
inc
push
sahf
mov
pushf
ds
inc
push
fdivs
or
jnp
jne
das
pop
push
mov
pop
pushf
pusha
fisubrl
bound
out
sbb
jg
pop
sbb
fucomi
hlt
sbb
xchg
xchg
lahf
idiv
stos
or
lahf
add
lret
jmp
xor
sub
cmp
popf
inc
mov
add
pop
jnp
ljmp
add
and
sub
jnp
add
pop
fldcw
sbb
inc
dec
fidivl
sbb
in
xchg
arpl
cmp
and
add
ss
jb
iret
in
out
test
dec
and
pop
mov
jns
inc
sbb
adc
dec
cmp
adc
in
fmull
imul
sub
jbe
xor
movsb
inc
imul
pop
rcrb
lret
mov
dec
sub
int3
mov
mov
jo
mov
leave
popa
or
inc
xchg
mov
ret
les
repz
xchg
or
pop
shrl
push
enter
jnp
subl
push
push
not
cld
cmp
xchg
cmp
or
fcomi
cmp
ror
jb
sub
fisttpl
cmp
outsl
lcall
pop
sbb
lock
add
mov
lahf
outsl
xor
ja
or
dec
add
pop
and
into
mov
pop
cmpsl
pop
dec
insb
dec
popa
imul
jae
push
push
into
and
add
enter
inc
jle
cmp
daa
loopne
sub
xchg
jp
push
stos
les
and
sbb
xchg
xor
mov
imul
sbb
fnsave
and
push
aam
and
push
xlat
les
sbb
cmc
xchg
cwtl
rolb
sub
je
inc
pusha
jecxz
mov
cmp
fmull
push
sarb
stos
inc
les
call
stos
sbb
jns
dec
xchg
adc
xor
out
mov
mov
push
arpl
pusha
lock
add
sub
push
pop
rorb
mov
mov
arpl
fs
sub
test
mov
dec
popf
leave
enter
stos
pop
test
movsl
or
dec
cmp
int3
sbb
sub
movsb
lock
sbb
mov
push
shrl
fsubr
cmp
lcall
sbb
mov
pop
roll
aad
fdivrs
push
lcall
fstps
int3
cmp
in
xchg
dec
pop
or
jno
add
dec
inc
mov
sub
adc
lahf
sbb
enter
icebp
jecxz
aad
or
push
jnp
push
addr16
orb
gs
fistps
dec
fcomip
jnp
add
test
or
ret
aas
lock
and
pop
dec
lods
stos
shll
in
jg
jge
dec
sbb
inc
mov
add
sbb
cmp
into
push
sbb
xchg
gs
cmp
enter
cmp
cmc
inc
dec
or
and
jp
push
in
jl
fildl
mov
adc
push
push
in
fadds
js
pop
fmulp
cs
or
jmp
fnsave
lret
test
incl
pushf
insb
je
push
shr
jge
pop
mov
cmp
adc
jmp
lock
sub
rcll
xor
jb
and
movsb
test
outsl
icebp
mov
les
inc
lahf
jecxz
xor
xchg
lods
sbb
pop
or
and
sar
cltd
insb
xor
mov
out
push
cmp
bound
movsl
add
aad
mov
mov
in
mov
arpl
ss
add
mov
inc
cmpsb
cmp
lods
jmp
add
das
xlat
int
daa
jbe
push
fcmovnb
cmc
fistl
out
cmp
adc
repnz
pop
push
inc
xor
or
ljmp
cmp
mov
fucomi
add
sti
dec
dec
cltd
cmc
jmp
xchg
or
or
dec
xor
push
fstps
jae
sub
ds
std
jnp
sub
std
sbb
lcall
add
stos
inc
in
and
pop
movsl
mov
xchg
pop
and
cld
jno
pop
mov
xor
and
fists
cmp
subb
dec
popf
fldt
gs
sbb
aam
add
dec
jp
enter
add
ljmp
loopne
shlb
incb
subb
fstpt
mov
sbb
xchg
ds
fadd
mov
adc
add
cmpsl
mov
stos
scas
sbb
std
aad
and
mov
inc
dec
jp
ss
pusha
adc
aam
test
and
pop
ret
cmpl
jmp
adc
out
inc
aam
jp
lods
es
lods
icebp
jo
call
sub
icebp
sub
xchg
sub
cmp
sahf
jmp
sub
xor
xchg
scas
stc
xchg
movsl
shrb
shr
sbb
mov
pusha
push
push
repz
mov
fwait
mov
jno
adc
rclb
popa
cmp
ds
fsubrs
pop
aas
xlat
sahf
xor
mov
aam
out
dec
stc
xchg
js
xchg
adc
xchg
test
xchg
and
or
js
sbb
call
cmc
push
shll
inc
xor
jae
inc
repnz
pop
add
scas
psubb
sbb
subl
push
cmpl
push
mov
test
enter
stos
xchg
fiadds
ljmp
mov
stc
mov
enter
jg
add
dec
pop
das
fcoms
or
movsl
sbb
loop
sbb
sbb
dec
loopne
insl
jo
mov
cmp
in
push
mov
inc
lret
or
adc
fistpl
cmp
lret
ja
and
jp
rcrb
clc
js
in
push
js
into
and
sub
or
negb
testl
call
lret
pop
mov
cmp
mov
jge
or
test
insb
jb
aad
cmp
dec
aaa
push
out
cmp
jecxz
mov
fbstp
or
sub
cmpb
jae
sbb
cmp
cmpsb
mov
push
outsb
repz
xorb
xor
xor
cmc
ja
adc
in
inc
ss
push
les
mov
cltd
xchg
mov
inc
adc
sub
jae
pop
daa
scas
mov
sahf
cmp
push
sub
add
and
ja
fidivrl
stos
jl
hlt
stos
shr
add
popf
jae
idivl
pop
lcall
in
hlt
jno
movb
dec
xor
das
and
call
test
sub
mov
xor
rcr
dec
lret
xchg
jecxz
out
cli
sub
enter
jnp
pop
scas
movsl
add
sub
ss
jno
add
mov
jae
imul
push
pushf
fnsave
cmc
sbb
aaa
mov
xor
xlat
dec
push
outsl
jp
jp
inc
or
pop
mov
movsb
fmuls
lods
out
pop
lcall
scas
mov
adc
sub
mov
sbb
std
insl
icebp
add
inc
subb
cwtl
dec
xor
adc
xchg
xor
sub
xor
fsubl
mov
mov
xor
in
add
test
pushl
call
mov
lods
movsb
fdivrl
lcall
jp
jge
fs
out
mov
lret
cmp
stos
cmp
lcallw
cmpsb
pop
lods
push
cmp
hlt
sbb
popf
and
fnsave
sbb
into
sbb
call
dec
icebp
inc
insb
stos
mov
or
xlat
inc
clc
xlat
jnp
in
mov
cmpsl
inc
inc
sub
ret
push
mov
dec
and
jge
and
pop
int3
test
andb
les
push
push
jmp
dec
jb
inc
jmp
sbb
push
add
jg
mov
inc
adcb
popa
jg
std
call
xchg
or
mov
jmp
mov
loopew
dec
cs
cld
jmp
popfw
ret
push
xchg
aad
out
mov
pop
in
jnp
ficoml
or
adcb
addr16
and
ljmp
push
cmpsb
bound
xor
inc
mov
add
icebp
cmp
stos
inc
mov
jg
cmp
lods
lds
mov
cmpsb
in
xor
pop
rcr
loop
push
rcr
cwtl
lcall
movsb
repz
adc
pop
dec
dec
xchg
add
scas
and
fcmovbe
fcompp
mov
sbb
aad
xor
andl
xchg
roll
fnstsw
jnp
jne
xor
jno
insb
xchg
sbb
mov
idivl
and
xlat
outsb
push
fnstenv
pop
adc
xlat
je
fisttpll
sub
xlat
stc
dec
sbb
cmpsl
lret
mov
sbb
sbb
fldt
push
loopne
push
push
call
sub
mov
lcall
fimuls
jecxz
mov
push
xlat
mov
repz
lcall
lret
clc
scas
cmp
cmpsb
sbb
jmp
inc
mov
or
call
xlat
test
xor
sub
xor
repnz
xor
leave
dec
adc
ret
out
ljmp
sbb
pusha
mov
cs
hlt
adc
nop
push
sbb
push
ja
xlat
sub
scas
mov
fadds
sbb
pop
lods
out
mov
outsl
or
xor
jmp
mov
cmpsl
scas
xlat
test
add
cmp
add
push
ja
xlat
mov
mov
xor
xlat
dec
or
divl
ret
jae
or
stc
call
xlat
adc
fistpl
mov
mov
aam
into
xlat
clc
cmpsb
ss
adc
fwait
out
jo
jecxz
repz
fadds
xor
xchg
popa
jae
or
repnz
inc
iret
jae
xor
or
adc
fcmovbe
rcr
dec
jmp
ret
jae
add
mov
outsl
jne
xchg
push
push
push
rcl
pop
mov
jge
mov
jnp
jo
xor
xlat
inc
call
clc
lock
mov
sahf
lods
add
cmp
xlat
daa
mov
sbb
lcall
xlat
fwait
aad
adc
xchg
sub
shl
pop
loop
call
push
xchg
dec
sbb
adc
test
fwait
cmp
xchg
sbb
sbb
mov
cmp
sub
cs
sbb
cwtl
outsl
clc
out
loope
push
mov
xlat
ja,pn
rorb
cmp
outsb
adcl
movsl
cmc
inc
test
jo
cli
mov
in
popf
push
cmp
fsts
or
sbb
neg
sub
fcomps
xor
call
andb
dec
mov
aam
int3
pushf
xchg
jnp
cli
mov
xlat
dec
fnstcw
cmp
fstpt
shlb
std
out
cmp
adc
xor
xchg
gs
je
xor
inc
and
pop
xchg
mov
jmp
mov
icebp
xlat
and
inc
pop
clc
and
inc
mov
repnz
sahf
add
xlat
or
sbb
scas
xor
ja
jb
jae
jae
push
sub
outsb
mov
or
popa
ljmp
es
xchg
jns
xor
arpl
scas
mov
mov
and
iret
jae
lods
les
pop
or
push
out
out
jnp
xor
int
fcmovnu
leave
xlat
jnp
cmp
mov
fdivrs
scas
pop
repz
lods
fidivs
push
sbb
sub
jnp
jnp
stc
sbb
dec
mov
stos
scas
xchg
pop
pop
cs
or
mov
dec
jnp
or
sub
jo
je
jno
jmp
stc
dec
fwait
xor
mov
aam
and
or
xlat
ljmp
fisttpll
push
pop
int
or
add
or
sarb
leave
adcb
xlat
mov
int3
sbb
call
fistpl
adc
push
inc
repnz
dec
sub
sbb
mov
into
fsts
xlat
mov
in
fdivrs
gs
sub
and
jg
and
or
leave
or
add
sub
pop
xlat
push
and
fsubr
or
scas
aad
push
adc
adc
test
andb
xor
inc
negb
jae
xor
xor
lods
push
xor
xlat
insl
xor
repnz
arpl
mov
repz
daa
push
mov
adc
scas
fs
xor
pusha
repnz
clc
fildl
leave
pop
xorb
add
mov
sbb
je
push
daa
mov
push
sub
sbb
mov
rol
cmpb
add
fnstenv
ds
lea
popf
pop
mov
push
outsb
mov
pop
sub
mov
jmp
adc
jbe
pusha
sbb
add
sub
fadd
push
pop
loop
ds
rolb
mul
dec
dec
pop
cmp
pop
mov
xchg
out
jae
stos
nop
shr
mov
cld
or
rorb
or
fcomps
or
lock
mov
shll
mov
inc
dec
and
bnd
or
and
or
adc
mov
xchg
arpl
dec
cmp
mov
pop
inc
cmp
ss
icebp
stos
dec
adc
xor
or
clc
xor
push
insl
cli
lea
sbb
sbb
pop
pop
mov
je
mov
cmpsl
cltd
cltd
dec
add
dec
fidivl
adc
mov
mov
int
or
inc
mov
mov
sbb
lret
movsb
add
cmp
ds
jns
sti
jbe
xor
fidivrs
add
dec
xchg
jmp
mov
mov
jg
dec
loop
push
rcr
push
adc
mov
dec
ds
jb
sub
out
adc
lret
insb
loope
dec
adc
inc
test
andps
push
mov
ds
shl
xlat
pop
repz
bound
mov
outsl
out
push
sbb
adc
mov
in
mov
adc
outsb
mov
sar
mov
mov
mov
enter
adcb
lea
stos
xchg
jo
lahf
cmpsl
or
stos
cmpsl
xor
inc
in
popf
pop
push
mov
ret
inc
mov
jg
cmp
add
jp
sub
imul
ss
mov
les
ss
mov
aas
sbb
subl
scas
jnp
xchg
out
decb
dec
idivl
pop
in
addr16
jns
jmp
jmp
aas
shrl
xor
add
test
adc
adc
pop
fcomp
data16
stos
call
enter
mov
sub
es
sbb
daa
mov
or
or
xor
sub
xchg
pop
cmp
neg
jp
cmp
call
push
jb
add
inc
icebp
mov
test
push
inc
pop
insl
mov
fdivs
pop
sub
clc
jle
sbb
das
and
jg
pusha
xor
outsl
mov
pop
push
sbb
popa
cmp
push
and
xor
fcoms
dec
call
sbb
push
inc
xchg
dec
ficoml
cmp
adc
jae
cmp
xor
idiv
shl
or
hlt
aad
jmp
icebp
sahf
jecxz
mov
or
fsubs
push
fucomi
mull
inc
cmp
arpl
mov
jae
xor
sbb
test
or
js
shll
cmp
les
ret
cld
std
pop
loop
iret
pop
rolb
hlt
aad
jmp
lret
push
ja
jb
imul
cmpb
xchg
aas
arpl
mull
add
xchg
lcall
add
outsl
pop
dec
iret
sbb
jne
sahf
lock
or
add
cmp
mov
iret
mov
in
cli
js
xor
adc
mov
in
stos
clc
sbb
add
or
incl
cmpsb
cmp
test
mov
or
cmp
rorl
sarl
ficoms
inc
jecxz
sbb
fstpt
mov
mov
cmp
inc
push
neg
adc
sub
mov
pop
xor
cmp
fs
outsb
imul
aad
aam
arpl
popf
or
lret
xchg
popa
decl
and
bound
mov
xchg
adc
jp
pop
ja
dec
adc
les
mov
ljmp
in
inc
hlt
icebp
test
adc
lret
cmp
xor
pop
or
lds
dec
pop
decl
in
stos
sbb
cmp
icebp
jge
les
int3
fldcw
int
and
xorb
imul
cmp
jbe
mov
int
cmp
mov
cmp
add
mov
fidivrl
xlat
pop
push
cwtl
or
pop
sub
sbb
sub
jno
sbb
fsubs
stos
ret
push
data16
sbb
cld
lods
mov
push
mov
js
fstps
into
arpl
jbe
les
pop
dec
inc
adc
or
daa
fldcw
sub
adc
xor
cmp
pop
add
nop
in
dec
nop
ljmp
lcall
lret
repnz
add
fwait
in
mov
movsb
push
mov
pusha
sbb
sub
pop
push
mov
lea
jg
add
scas
or
fcomps
leave
inc
pop
fsubs
mov
add
xor
xchg
clc
fmul
dec
cs
or
ret
lcall
bound
in
mov
mov
cltd
mulb
and
bound
inc
jae
int3
mov
mov
enter
dec
add
dec
push
jmp
push
adc
imul
cmp
cld
mov
cmpsb
cs
jno
das
iret
jl
sahf
push
shll
pusha
cmp
hlt
or
add
cmp
repnz
arpl
outsb
dec
jo
pop
push
testl
mov
jle
int
addb
jno
lahf
out
sub
or
pop
jo
mov
push
arpl
repz
sub
xor
mov
add
jae
mov
repnz
inc
enter
push
cli
and
test
es
roll
cmp
xlat
sub
out
cwtl
fldt
inc
push
lea
xchg
push
dec
aaa
iret
ror
int3
ret
js
aad
jno
movsb
shlb
aaa
push
push
xchg
sti
js
push
jnp
cmp
pop
jl
jne
jmp
and
lock
jae
popf
pop
push
xchg
int3
mov
xor
push
outsb
out
enter
pop
jns
cs
xlat
scas
sti
rcll
mov
repz
pop
mov
lret
pushf
jno
in
xor
cmc
xchg
and
lods
adc
movsl
or
es
pop
lret
push
imul
test
ljmp
dec
ss
in
inc
xor
jae
inc
sbb
ds
or
cmc
mov
mov
xchg
xor
sarl
xor
ja
dec
cmp
cmc
mov
filds
pop
inc
push
loop
iret
or
xchg
xchg
les
cmp
cmpsb
dec
adc
sbb
push
xchg
shrb
push
sub
adc
sub
sbb
lret
adcl
repnz
xor
lcall
fistl
stc
xor
mov
dec
aad
pusha
fisubl
mov
xlat
dec
mov
lock
test
xor
popa
xor
or
push
jl
push
mov
leave
icebp
mov
movsb
xor
and
jp
sub
fisubl
pushf
dec
lcall
cmp
scas
xchg
movsl
mov
movl
testb
pop
hlt
hlt
jnp
insl
pop
stc
ja
mov
es
or
icebp
push
cs
xchg
pop
dec
int3
ljmp
clc
cmp
aad
and
pop
mov
in
test
jge
inc
out
aas
cld
bound
push
mov
scas
int3
lds
mov
xlat
mov
fadd
jo
jb
jnp
jmp
insb
repz
cmc
cmp
jbe
sbb
icebp
and
and
je
lods
push
loope
fstpl
aaa
cmp
shrb
mov
inc
outsb
sbb
insb
notb
cmp
xchg
iret
inc
test
cmp
loope
cmp
and
sahf
or
setnp
into
fldl
inc
sbb
xor
sub
dec
insl
aam
push
imul
pushl
rorb
jecxz
js
xchg
xchg
pop
out
int3
fsts
addb
fwait
xchg
or
xchg
imul
into
jmp
ret
mov
mov
cmp
out
add
cmc
repz
std
out
inc
inc
dec
imul
push
scas
jp
adc
hlt
pop
loop
or
sub
xchg
adc
mov
cmp
mov
mov
add
jl
sarb
pop
or
popa
je
int
adc
cmp
aas
cmp
sbbb
fcomps
cmp
fiaddl
push
xor
add
cmpsl
or
mov
pop
adc
mov
xor
mov
cmp
and
xlat
sbb
ds
loop
xchg
or
xchg
iret
cmp
les
ret
xlat
outsl
pop
cmp
or
sahf
jo
ficoml
dec
imul
mov
jo
in
aam
jge
adc
pop
or
lret
jmp
out
mov
mov
inc
sahf
jl
mov
sbb
inc
dec
out
cmp
dec
and
sbb
test
pushf
test
xchg
mov
loop
scas
inc
mov
xchg
sbb
test
test
enter
jmp
sbb
mov
add
dec
out
and
dec
xlat
divl
jg
nop
and
mov
mov
stc
andb
xor
push
scas
or
adc
jns
cld
pop
mov
inc
hlt
mov
jns
adc
mov
push
shrb
lock
jmp
imul
int
jns
push
xrelease
push
mov
lahf
ja
push
scas
jmp
enter
mov
popf
add
pop
fnstcw
mov
and
jae
adc
jmp
mov
push
jne
add
mov
lods
and
cmp
es
ss
loope
or
inc
sbb
and
inc
fwait
inc
xchg
xorb
mov
insl
xor
xlat
mov
pop
or
add
adc
pop
sbb
jecxz
push
iret
pop
cwtl
inc
mov
testb
xchg
stc
fcomp
add
pop
out
xchg
outsl
imul
push
inc
pop
or
into
xor
pop
icebp
push
cmp
cmc
subl
popa
in
xor
addr16
add
pop
subb
xchg
push
cmpsl
popf
ror
push
jmp
inc
sub
mov
mov
popf
dec
jns
xchg
sbbb
in
inc
out
cmp
cmpsb
xchg
pop
lea
mov
cli
push
inc
cltd
adc
iret
dec
mov
jo
inc
shlb
jl
inc
jno
jp
pop
adc
addr16
dec
jecxz
lret
adc
addr16
and
sub
push
sbb
xchg
push
loopne
push
push
fsubs
sub
add
adc
fstp
pop
sub
xor
sub
add
sbb
sti
xor
cmp
cmp
or
shrb
mov
sbb
adc
pop
pop
dec
out
mov
cmp
sahf
std
repz
or
cmp
mov
cmp
sbb
and
cmp
fcmovu
int3
jecxz
mov
add
stc
adc
inc
enter
or
ljmp
inc
inc
or
hlt
mov
lods
lock
cmp
dec
push
decb
inc
divb
jns,pn
mov
xchg
loopne
mov
inc
xor
cmp
imul
push
add
or
mov
sub
sub
dec
dec
pusha
xchg
stos
stos
mov
push
cmp
pop
jnp
push
repz
ficoml
pop
imul
sub
dec
or
rcr
test
int
in
mov
and
rorl
pop
and
lds
sti
or
mov
test
inc
push
jne,pt
cmc
arpl
add
pop
test
pushf
or
adc
leave
dec
jne
and
dec
imul
inc
lret
sbb
test
push
xor
mov
imul
mov
or
push
loopne
outsl
mov
lahf
pop
dec
push
enter
or
xchg
add
repz
fnstcw
jp
test
xchg
cmp
sbb
adc
and
jo
out
inc
lret
out
in
in
or
mov
je
jmp
cmp
movsl
xor
and
xchg
jle
leave
push
inc
add
inc
divl
mov
nop
inc
xchg
jno
cmp
clc
inc
insl
movsb
lds
xchg
mov
movsl
sub
xchg
test
addr16
scas
jb
add
add
les
icebp
cld
mull
mov
out
sahf
popf
and
mov
ljmp
enter
pop
les
add
repnz
std
xchg
cmp
cltd
int
dec
dec
jnp
pop
sarl
jg
ss
clc
sub
cmp
xchg
insl
in
push
xchg
or
jne
mov
dec
ficoms
popf
mov
cmpsl
push
int
jno
enter
mov
movsl
pop
xor
xchg
jecxz
les
fistpl
rcll
mov
jg
bound
or
pop
sbb
arpl
dec
andl
ret
and
xchg
les
fiadds
aam
dec
lock
mov
pop
bound
movsb
xor
mov
fbstp
dec
loopne
insb
idivb
mov
xchg
ds
out
test
lds
sbb
dec
leave
les
aam
ss
das
jo
sub
daa
jecxz
mov
mov
pop
movsl
push
ss
fcompl
repnz
sub
cmc
je
add
hlt
sub
arpl
jle
jns
push
dec
and
stos
les
push
out
data16
sub
sbb
call
in
mov
outsl
aaa
pop
pop
out
insl
and
roll
xchg
and
push
mov
xchg
sub
aam
cmp
adc
negb
out
xor
loop
mov
incb
sbb
mov
xor
rcr
out
push
je
imul
or
adc
xor
das
cmp
sbb
data16
test
add
sbb
jb
dec
jp
daa
jns
pushf
fwait
pop
add
clc
clc
mov
pop
movsl
mov
jg
negb
idivb
sbb
nop
outsb
mov
adc
add
sub
sub
jb
sbb
and
pusha
ds
or
or
shrl
ljmp
sbb
dec
imul
test
pop
and
pop
out
or
pop
inc
jno
add
sub
lods
stos
adc
int
dec
sbb
xchg
fistpll
adc
jp
call
test
xchg
pop
pop
xchg
xchg
cmp
or
xchg
pop
ljmp
mov
dec
mov
flds
adc
pop
xor
xchg
iret
fnstenv
outsl
inc
xchg
fdivr
xor
mov
pop
pop
pop
cmp
xchg
and
fidivrl
iret
lcall
pop
and
outsl
xlat
jb
xor
sub
les
aam
add
or
or
pop
test
subl
in
dec
cmp
inc
xor
inc
ds
lcall
or
addr16
mov
inc
movsb
adc
sbb
inc
test
mov
xor
aas
sbb
imul
push
movsb
imul
xor
ja
aad
movsb
cmp
pop
mov
aaa
dec
clc
pop
pop
mov
ficompl
cmc
int
mov
sbbb
adcl
in
decb
cmpl
lret
push
pop
cmp
cmp
cli
mov
sbb
or
pop
sub
enter
pusha
xchg
mov
rorb
fcoms
xchg
outsb
xchg
aad
in
xchg
add
loope
dec
jg
into
mov
mov
stos
mov
jp
sub
adc
mov
push
and
or
popa
adc
dec
sbb
scas
in
test
lock
imul
lret
or
jge
xlat
pop
pop
test
fwait
repz
jg
sbb
pop
mov
divl
stos
mov
inc
push
jne
bound
int3
jmp
cmp
mov
cmc
sub
xor
mov
mov
xchg
neg
cli
pop
adc
mov
nop
ljmp
movsl
xchg
mov
push
add
rcr
jo
xchg
orb
popl
in
xchg
sbb
mov
sub
jnp
pop
mov
imul
push
pop
fcoml
xor
popf
das
dec
jb
pop
and
mov
hlt
push
pusha
or
popf
ss
cmp
ss
mov
inc
lahf
stos
fldcw
fcomps
cli
lods
cmp
sub
xchg
lds
or
insl
jge
sub
shrl
jns
push
lds
lahf
rcl
adc
fbstp
cmp
es
pushf
jno
jbe
xchg
rcrb
dec
xor
dec
mov
sub
cs
jp
es
out
lea
inc
mov
push
int3
mov
dec
and
and
push
pusha
xor
es
stos
xchg
inc
in
mov
or
enter
mov
cwtl
add
inc
add
loopne
out
mov
mov
leave
je
repz
mov
jnp
xor
jae
fidivrs
test
int3
outsb
sub
push
fs
mov
leave
push
mov
cmpb
xlat
or
scas
jns
mov
scas
cwtl
and
aas
mov
imul
es
mov
stos
lods
cmc
push
pop
bound
cltd
push
cmpsl
inc
cmp
add
jo
out
les
lds
stos
adc
inc
dec
cmp
int3
stos
imul
lcall
cmp
flds
stos
call
iret
mov
iret
loope
jg
dec
jmp
nop
cmp
pop
jo
sub
fimull
repnz
popf
mov
pushf
ja
inc
ficompl
mov
lret
cmp
movsb
adcl
lret
in
bnd
jmp
lret
xor
xor
cmp
mov
popw
hlt
fstpl
sub
rorl
ss
add
pop
iret
ja
bnd
repz
push
cmp
xchg
push
dec
lret
les
test
or
cmp
sbb
add
ja
sub
cwtl
dec
cmp
push
imul
out
test
insb
test
sub
loope
out
add
insb
inc
xor
iret
sbb
cmp
and
adc
aas
add
xor
movsb
dec
rcrl
dec
push
scas
rorl
call
inc
adc
test
movsl
int3
stos
dec
adc
fbstp
mov
inc
cmp
jno
mov
test
sub
jns
xchg
ds
dec
push
jne
adc
xchg
lahf
push
mov
notb
outsb
push
or
pop
push
and
jnp
aaa
xchg
movsb
push
mov
ja
bound
rolb
mov
push
clc
inc
mov
inc
sarl
xchg
insl
stos
inc
into
sbb
pop
pop
xchg
jo
sbb
lods
in
in
aaa
out
out
ljmp
sub
or
mov
sbb
scas
push
stos
add
insb
loopne
push
ret
dec
xor
fcomi
in
jne
fcmovnbe
or
insl
lods
sbb
xchg
jmp
or
in
xlat
jg
push
adc
fs
push
xchg
lds
sub
cwtl
jae
xor
mov
xor
ja
stc
addl
int
sbb
fcmovnb
push
cmp
or
sbbb
enter
fisttpll
mov
bnd
pop
sub
mov
pop
jg
xchg
fcoml
mov
jae
dec
rcrb
loop
sbb
pushf
pop
daa
movsb
mov
jecxz
cmpsb
test
dec
nop
push
jl
sbb
cld
push
cmp
xlat
sbb
cmp
lock
popa
push
pop
push
adc
mov
lret
jmp
inc
in
inc
jnp
clc
push
add
lret
pop
or
ret
and
inc
movsl
mov
push
stos
ss
pushf
xchg
xor
dec
ret
jne,pt
fimull
enter
cmp
mov
movsb
or
push
jmp
sbb
or
push
cwtl
test
pop
mov
xchg
mov
xchg
aam
clc
mov
mov
in
or
sti
stc
jnp
hlt
in
cli
dec
fimuls
fcomi
sahf
leave
pushf
push
jns
mov
stc
in
sub
pop
sar
pop
or
mov
mov
add
pop
pop
fsubr
ss
mov
mov
lahf
lcall
mov
push
cmpsb
inc
fcomps
out
mov
dec
mov
sub
loop
xor
addl
push
cmp
shlb
cmp
add
stos
inc
pop
scas
out
mov
or
xchg
xchg
push
loop
sbb
xchg
cld
cwtl
movsb
out
xchg
jge
mov
imulb
aam
mov
pushf
scas
and
sub
cmpsl
fcomps
ja
imul
shrb
das
jnp
dec
rorb
lods
pop
rorl
add
sbb
push
repnz
in
inc
xchg
fdiv
or
adc
push
jnp
hlt
pop
push
push
add
xchg
test
mov
outsl
and
adc
jnp
fs
pop
jno
xor
xor
adc
and
adc
dec
mov
rcrb
mov
fcomps
das
out
add
dec
sub
sahf
xor
or
ret
push
adc
mov
call
pop
jmp
or
push
cmp
pop
sbb
outsb
push
push
loopne
out
mov
cmp
out
xchg
xchg
cmp
jb
xor
mov
mov
ja
rolb
pop
mov
xor
or
lret
into
pop
sub
mov
pop
cld
testl
mov
es
pop
push
and
pop
mov
adc
cmc
cwtl
sub
mov
cmc
mov
stc
int
add
xorl
enter
mov
pop
sbb
add
pop
adc
or
or
hlt
pop
cmp
fmuls
adc
jno
fcmovnu
sbb
inc
aam
jae
mov
mov
and
int
xor
sti
pop
xor
xchg
add
nop
or
xchg
xchg
movsb
stos
mov
push
dec
mov
fidivrs
sahf
adcb
xchg
or
addr16
inc
fistps
insl
call
pop
mov
mov
jl
add
or
cmp
jno
enter
pop
dec
in
cmc
inc
test
lahf
scas
es
inc
pop
popa
push
enter
outsl
sub
pop
cs
repnz
push
cmc
cmp
push
or
lret
cli
jmp
inc
addl
pop
int
fistpll
pop
xor
mov
loope
inc
mov
xchg
popf
test
test
dec
pop
lcall
jno
jne
or
xchg
sbbl
incl
movsl
xlat
xlat
or
dec
fwait
xchg
cmp
es
enter
aad
cmpsb
adc
popa
mov
int
and
inc
sub
repz
shlb
sbb
mov
js
inc
xchg
imul
dec
int
xorl
shrb
outsb
or
add
or
mov
outsb
push
jno
push
out
aam
sbb
add
lcall
mov
stos
xchg
das
mov
fldcw
add
jmp
int
mov
mov
dec
jmp
ret
inc
xchg
mov
cmp
std
fs
sbb
dec
pop
push
push
lcall
inc
cwtl
movsb
hlt
in
int3
hlt
push
nop
nop
outsb
loopne
sbb
cmp
jle
pop
fistl
cltd
out
sbb
mov
out
lock
mov
xchg
mov
int
fdivl
xchg
cmp
pop
lock
fisttpl
pushf
stos
ret
xor
pop
adc
xor
jg
pop
cwtl
cli
idivl
stos
js
fadds
cltd
mov
push
popa
lods
addr16
pop
fcmovnbe
mov
gs
inc
sbb
inc
cwtl
int3
push
insl
xor
cs
mov
cmp
adc
mov
pop
addr16
inc
pop
dec
std
jne
cmp
push
cmp
xchg
jbe
xchg
shll
cmp
lock
mov
push
cmp
sbbl
sbb
loope
xor
test
and
push
mov
cmp
cmc
icebp
sbb
int
imul
inc
or
mov
test
pushf
or
sarb
xor
push
sub
mov
xchg
xchg
cmc
testb
xor
ret
repz
enter
or
cmp
mov
jmp
or
or
fstpt
stos
jnp
clc
sub
mov
xor
lcall
repnz
notb
inc
jmp
sbb
int3
and
popf
mov
movsb
dec
cmpsb
mov
repnz
inc
aad
fcompl
fdivr
mov
mov
call
add
dec
add
fistl
mov
aam
clc
imul
mov
push
ja
scas
test
jb
decb
cltd
cmp
cmp
pop
sqrtps
ret
inc
jne
leave
push
jnp
push
pop
xor
dec
sbb
aad
repz
popf
jnp
lock
xor
cmp
sub
push
adc
aas
sbb
popf
sbb
into
fst
sub
andl
cmpsb
pushf
icebp
pop
test
clc
test
push
ss
xchg
frndint
call
sub
or
iret
out
pop
ret
cmp
xor
fcompl
dec
mov
mov
mov
pop
mov
mov
jae
xchg
or
push
add
push
rclb
push
sub
pop
xor
test
stos
cld
in
fcomi
arpl
inc
inc
lods
movsl
stc
aad
inc
jbe
dec
or
or
mov
dec
push
mov
leave
or
cmp
dec
lds
sarb
je
mov
and
lcall
shrl
pop
xchg
cmp
repnz
gs
mov
repz
jns
lods
pop
das
jg
and
cwtl
dec
loop
outsl
test
lods
or
jmp
icebp
cmp
das
mov
or
cmp
jnp
sbbb
push
mov
inc
mov
jecxz
outsl
loop
leave
ffreep
lret
imul
fstps
cmp
mov
xor
mov
repz
mov
jl
dec
inc
xchg
sbb
rolb
sbb
xchg
filds
jmp
mov
ljmp
mov
inc
rclb
push
gs
mov
fsts
or
push
pop
dec
lods
sub
jns
jl
arpl
addr16
lret
hlt
fucomi
testb
out
or
and
cld
mov
xor
mov
sarb
mov
adc
pop
cmc
jmp
in
leave
sbb
shlb
subl
loope
fists
rcrl
xor
daa
aaa
jns
in
cmpsl
cmp
mov
sbb
cmp
in
repnz
insl
icebp
and
dec
adc
cmp
pop
ss
or
and
mov
sbb
push
mov
out
jle
fcmovnu
out
inc
sub
cltd
rcrb
dec
cmp
mov
sub
jmp
and
nop
add
lahf
mov
sub
cs
or
add
jecxz
inc
mov
mull
insb
mov
mov
shl
or
loopne
mov
fmul
inc
inc
xchg
mulb
fistpll
test
mov
pushf
or
xor
subb
adc
cmpsb
and
leave
xor
jno
scas
test
stos
push
xchg
cld
fcmovu
aaa
sbb
or
fsubr
jle
sbb
xlat
mov
sbb
xchg
andb
jmp
loopne
loope
mov
sub
int
les
cmp
sub
jge
xor
cmp
in
or
in
sub
jae
xor
sub
dec
clc
fcoms
ds
adc
bound
inc
cltd
data16
scas
aad
sub
mov
and
push
mov
sub
mov
inc
cltd
sub
jmp
cmp
xorl
cmp
xor
call
test
inc
fbstp
push
mov
cmp
in
jmp
jbe
sub
inc
in
mov
inc
and
cmpsb
fwait
scas
les
pop
inc
mov
sbb
cmp
mov
cmp
loope
and
mov
inc
cmp
test
xchg
cmp
shll
adc
movsb
les
pop
repz
jmp
cmp
push
adc
leave
push
popf
popf
or
pop
nop
mov
cmpsb
sbb
fiaddl
dec
pop
pop
icebp
mov
lds
adc
ja
pushw
dec
pusha
cmpsb
xchg
dec
lret
lods
lret
sub
dec
test
mov
sti
enter
jnp
xor
into
cmp
sbb
ss
sbb
imul
out
mov
jg
into
aas
out
cmp
jne
mov
orl
orl
xchg
in
outsl
outsb
pop
push
aad
mov
dec
outsb
imul
std
int3
xchg
test
pop
shll
out
enter
stos
mov
xor
xor
aad
test
int
dec
dec
inc
test
into
outsl
push
pop
push
mov
push
ljmp
leave
mov
cs
sbb
push
sbb
sub
mov
jmp
fcmovu
jns
icebp
enter
mov
fndisi(8087
dec
mov
xchg
pop
mov
imul
ss
dec
cmc
popa
dec
orb
icebp
je
sarl
inc
das
pusha
pop
aad
add
inc
incb
push
jne
lods
jp
repnz
jl
sar
or
fucomip
sbbb
mov
repz
imul
testl
pop
out
inc
cmp
and
std
jno
pop
test
dec
mov
dec
leave
lret
decl
enter
imul
inc
mov
add
jmp
or
push
pop
mov
lods
cmp
add
xor
fistl
outsb
cs
push
xor
test
xlat
ja
push
add
xor
lods
scas
jecxz
mov
data16
lcall
xchg
pop
xchg
push
shll
rcll
sub
xor
out
cmp
xor
iret
sub
mov
jg
jbe
mov
lret
sbb
test
mov
jge
testl
pop
and
and
xor
loopew
fcomi
dec
xchg
in
cwtl
popa
movsb
jmp
in
jnp
pop
pushf
repnz
sub
cltd
je
pop
in
push
adc
out
lods
lahf
roll
or
or
adc
decl
xlat
ret
fcomi
mov
loop
outsl
pop
add
xor
or
cmpsb
movsl
int
and
lock
repz
out
sub
out
stc
lods
pop
stos
push
mov
dec
pop
outsl
mov
jno
or
test
fcomps
add
jno
mov
in
loopne
stos
adc
add
xlat
aad
add
cli
inc
dec
ficoml
add
daa
mov
aad
movsb
xchg
pop
test
push
dec
enter
nop
out
mov
mov
or
repz
aam
and
fxch
sub
in
cmp
pusha
rcll
stos
data16
jae
mov
add
es
jl
sub
jnp
lret
or
mov
cmp
call
sbb
mov
repnz
push
mov
fdivrs
jnp
int3
jp
push
testl
adc
jo
imul
sbb
lcall
mov
mov
sub
pushl
adc
and
cmp
jg
aaa
jge
or
push
aas
testb
stos
stc
in
cmpsl
xchg
sar
mov
jbe
ja
cmp
and
loope
clc
dec
rcrb
and
fcmovne
or
push
xchg
daa
xor
sti
sar
xor
dec
mov
jecxz
push
xor
fmuls
ficompl
push
popa
sbb
dec
xchg
add
fidivl
stos
enter
mov
pop
add
push
jne
stos
xlat
inc
mov
cmp
mov
test
fwait
clc
lcall
jle
adc
and
jns
aas
sahf
dec
jae
cltd
mov
jnp
xchg
sar
test
push
cli
popa
rcrl
or
insb
imul
jp
les
inc
inc
cld
push
inc
int3
pop
rcrl
or
in
sub
dec
loop
xor
aad
sbb
and
mov
enter
lcall
ds
cltd
jo
push
adc
fnstsw
xor
cltd
cltd
int
xor
or
dec
cmc
xchg
and
add
popa
jno
mov
fcom
sbb
mov
xor
sbb
addb
out
lcall
popa
fsubs
popf
push
jb
nop
sbb
loopne
and
leave
repz
adc
or
and
or
scas
repnz
data16
mov
data16
leave
gs
movsl
adc
push
and
jg
ds
add
fsubrl
pop
pop
popa
xor
flds
stos
loop
std
testb
bound
stos
add
xchg
and
xchg
push
jb
or
pop
dec
fnclex
stc
push
enter
stc
sbb
cmp
out
repnz
xor
out
stos
mov
xchg
stos
pop
lock
sbb
cmp
out
imul
pop
fs
sbb
mov
ret
loop
pop
outsb
dec
jg
fcmovnbe
clc
mov
in
pop
scas
test
clc
push
jecxz
lds
cmp
add
mov
add
loopne
dec
and
dec
sbb
jmp
add
adc
xor
adc
add
rcrb
or
ss
sbb
les
lret
mov
test
in
mov
or
push
pop
pushf
lret
mov
push
mov
je
and
push
pop
js
dec
mov
inc
shrb
push
push
push
cwtl
fnstsw
cs
test
daa
clc
clc
cmp
imul
int3
hlt
gs
and
push
push
cmp
mov
jae
in
xchg
mov
fildll
cmc
mov
or
in
xor
adc
mov
dec
jne
jle
sbb
int
lcall
in
fisttpl
inc
aad
cmp
imul
in
mov
cmp
dec
xlat
sbb
lret
or
xor
testl
add
mov
cmp
pop
ror
insl
js
bts
arpl
adc
clc
lcall
push
lea
pop
pop
jnp
ljmp
in
outsb
repnz
popf
ja
lcall
push
mov
jns
push
setge
fdivl
test
sub
dec
xchg
adc
mov
dec
movsb
sub
mov
cmp
iret
rcrl
sldt
gs
out
test
xchg
push
call
jmp
outsl
idivb
das
pushf
movsl
fisubrs
xchg
out
mov
nop
or
seta
shll
mov
push
in
push
dec
test
rorl
pop
mov
dec
mov
sbb
fdivrs
stos
popa
ss
sbb
add
push
sbb
add
pop
xor
xor
js
mov
stos
sub
push
lock
add
dec
mov
fisubl
mov
icebp
movsl
rorb
scas
in
rolb
mov
xor
jno
pop
adc
cmp
iret
mov
cltd
outsb
mov
hlt
dec
lods
popl
lock
repnz
jecxz
add
mov
adc
lock
push
xor
push
mov
pop
adc
or
or
add
ljmp
test
sahf
pushf
lret
fimull
inc
jbe
sub
fsubrs
pop
cmp
mov
cmp
sbb
into
jne
pop
test
lods
and
ret
nop
cmc
sub
jp
mov
aad
cmp
mov
dec
fstpt
aas
lret
gs
xor
or
sub
sahf
enter
lahf
pop
xchg
popf
mov
arpl
cld
add
xor
cld
inc
mov
es
int
or
sar
stos
pop
leave
mov
loope
jo
arpl
add
jb
loope
in
mov
or
ja
repz
icebp
pusha
fnsave
inc
clc
pop
dec
pop
js,pt
mov
cmpl
adc
pop
jns
xchg
das
rclb
faddl
sbb
mov
sarb
mov
lahf
iret
loopne
and
in
nop
sub
mov
out
test
fdivrl
xor
int3
popf
xchg
jg
cmp
mov
mulb
das
cmp
incb
call
popa
sbbl
inc
xor
jmp
imul
pop
sub
sub
xor
add
xor
lgs
mov
mov
lahf
imul
loop
cmp
jp
lcall
adc
iret
adc
movsb
sub
lahf
int
sbb
ret
fsub
and
pop
add
ret
adc
push
or
out
pushf
xchg
icebp
inc
lcall
lret
in
out
mov
mov
sub
lcall
daa
je
test
cs
sbb
cmp
stos
mov
rorl
sbb
sub
add
dec
or
fadds
cmp
imul
xchg
fs
movsb
xor
cmp
cmp
mov
cmc
lea
jg
sahf
ds
cltd
lock
fsubr
mov
mov
xlat
cmc
add
and
cmp
sarb
rclb
pop
xchg
aam
inc
inc
push
mov
popa
xlat
imul
fisubrl
stc
add
sbb
jg
mov
aas
mov
xor
and
sub
push
ficompl
ja
mov
jmp
aad
sub
dec
sbb
lcall
dec
jmp
movsb
lcall
les
stos
add
lret
dec
cmp
fldcw
xchg
push
cltd
rep
js
inc
mov
sbb
pushf
lcall
mov
lea
imul
pop
push
sub
mov
xor
pop
xor
adc
jge
pop
fistpl
les
stc
jbe
mov
ljmp
jb
out
mov
orl
rcr
sbb
push
xchg
imul
aas
dec
mov
mov
push
int
je
lret
dec
jno
ss
das
push
and
mov
mull
jecxz
loope
adc
les
add
mov
mov
pop
cltd
and
ss
test
xor
call
int3
cmp
add
mov
dec
mov
cmp
push
int
mov
fwait
or
sbb
loopne
or
mov
xchg
pop
roll
dec
xchg
sbb
xchg
xchg
addb
les
push
mov
nop
sbb
add
orl
test
pop
inc
outsl
and
outsl
sub
ja
negl
mov
add
xlat
xor
dec
sahf
sahf
cld
fistl
jge
dec
push
mov
cmp
negl
dec
ja
xchg
pusha
shlb
sarb
cwtl
sbb
pop
cwtl
in
push
testb
ja
pop
push
nop
aad
mov
fwait
jmp
xchg
sbb
in
jle
lcall
sub
sbb
push
inc
jnp
adc
jg
cld
mov
inc
xchg
add
xor
negb
pop
jno
mov
xor
rcr
movsb
cwtl
popa
rcr
mov
filds
rcl
fiaddl
inc
mov
loopne
call
repz
fisttpl
add
pop
mov
scas
push
push
idivl
xor
fisttpl
outsb
push
add
inc
lea
xchg
add
push
shll
rcr
dec
dec
mov
aam
jbe
push
adc
xchg
loopne
rolb
push
add
pop
add
mov
icebp
fsubs
push
jb
sbb
ret
dec
add
mov
push
cmp
adc
mov
iret
enter
test
mov
gs
and
xchg
iret
fsubrl
cwtl
pop
test
and
clc
cmp
jg
adc
mov
pushf
sub
jge
add
pop
dec
pop
ljmp
inc
lret
fcomi
and
lods
fscale
jge
pop
pop
std
jmp
dec
movsb
icebp
and
inc
mov
inc
push
gs
js
sbb
rorl
in
roll
pushf
pop
cwtl
mov
jg
cmpb
lds
pushf
push
adc
xchg
addr16
pushf
mov
out
or
cmp
ja
cld
sbb
fistpll
lret
or
push
inc
and
and
in
js
mov
aad
stos
adc
ret
lock
mov
cmpsb
inc
jl
add
mov
lret
les
daa
jo
push
popa
adc
cld
xchg
push
pop
popf
dec
movsb
int
adc
ljmp
fdivrs
test
bound
or
in
fistps
xchg
cmp
ret
mov
pusha
adc
insb
cli
pop
dec
test
or
stc
in
xchg
pusha
mov
lock
shll
in
enter
pop
sub
mov
push
sbb
mov
icebp
dec
out
les
repz
mov
add
cs
jae,pt
or
jmp
push
scas
dec
push
pop
push
sub
bound
mov
dec
cmp
movsl
push
pop
les
jmp
imul
sub
jo
fsts
hlt
test
pop
lahf
inc
inc
cmp
adc
xchg
lret
aad
les
cli
mov
loopne
ljmp
adc
out
cmp
dec
dec
lods
and
ja
add
mov
cwtl
subl
push
fsub
in
mov
cltd
iret
push
pop
test
push
add
xchg
aad
cmp
mov
xchg
lds
pusha
nopl
sub
xchg
daa
enter
lods
pop
mov
sbb
sub
and
aad
mov
lahf
cltd
sub
mov
jo
testb
mov
shr
cmp
lock
aas
xchg
xor
sbb
sub
fisttpl
sbb
sub
pop
and
fwait
aam
push
sarb
xchg
xor
ret
xor
les
push
out
movsb
mov
adc
loop
cmc
std
rcr
xchg
mov
xchg
subl
cli
jns
testl
stc
fwait
xorl
int3
clc
xor
int
leave
xchg
cmp
cmp
popf
dec
mov
pushf
pop
subl
jle
jbe
mov
aad
sbb
nop
mov
and
cmc
lods
sub
xor
xlat
test
neg
enter
sub
or
leave
lock
fstl
bnd
testb
stos
add
adc
les
pushf
js
push
or
xorl
and
in
jmp
or
hlt
inc
lcall
nop
push
jmp
aad
clc
add
push
mov
adc
aas
mov
cmp
jnp
sbbl
mov
cmp
sbb
into
jge
mov
fiaddl
inc
fcmovnbe
sbb
xor
xchg
xor
insb
push
jmp
inc
jno
ss
pop
fnsave
or
test
sbb
sbb
pop
add
aas
jge
call
fsts
xchg
push
mov
jne
bound
in
test
push
rcll
dec
sti
xor
and
push
or
pop
jp
dec
dec
fmulp
mov
mov
dec
mov
push
cmp
xchg
jl
lret
push
cltd
and
stos
loope
cmpl
inc
sub
adc
test
pushf
cmpb
cli
mov
xchg
shl
push
xchg
int3
gs
test
in
popa
mov
dec
cmp
sub
dec
and
ljmp
leave
mov
bound
lock
xor
sti
rep
movsb
testb
ss
int3
sub
mov
test
fs
sub
ror
add
out
sub
inc
mov
sbb
mov
cli
jge
xchg
mov
test
data16
mov
stos
ja
movsb
jnp
shrl
fildll
xchg
xor
xor
test
scas
inc
xor
or
mov
push
in
imul
repz
pop
test
push
mov
jno
ja
out
popa
push
enter
ja
xor
sbb
xchg
lods
xchg
add
or
inc
add
aas
popf
mov
icebp
inc
mov
jle
mov
sahf
xchg
test
gs
and
sub
or
dec
rol
push
ja
in
lcall
inc
jno
loope
or
aaa
mov
ds
or
idiv
mov
and
int3
and
pop
out
sub
push
fnstcw
es
lcall
add
pop
dec
push
iret
dec
xchg
stc
movsl
inc
stc
ljmp
and
mov
dec
lcall
mov
fisttpl
je
test
xlat
pushf
ljmp
xor
data16
fistpl
movsb
mov
jp
sbb
xor
enter
add
je
inc
popa
scas
popa
mov
iret
shlb
gs
push
jecxz
ja
lret
fwait
push
add
scas
push
xchg
std
neg
cmpsb
mov
cld
stos
mov
push
adc
mov
mov
or
add
dec
add
pop
add
mov
loopne,pn
sahf
fcompp
xorl
ja
cmp
mov
jge
fistpl
movsb
inc
popf
pop
sarb
out
lock
lahf
enter
jns
jnp
popf
mov
lock
mov
mov
call
pop
cltd
fsubrs
shll
xlat
lcall
jge
rolb
mov
repnz
sahf
gs
fildll
aam
mov
add
mov
xor
loop
ret
push
pop
mov
xor
push
pushf
incb
push
pushf
adc
push
loope
mul
jl
out
imul
stos
xlat
xchg
and
mov
icebp
movsb
push
mov
ds
outsb
push
fidivs
hlt
push
sub
lret
dec
push
mov
leave
dec
aad
repz
inc
test
cmpsl
pusha
or
incb
jnp
pushf
sbb
aad
mov
adc
lods
sbb
add
jo
jnp
out
adc
divl
aad
call
dec
dec
cmp
iret
fcomps
dec
fdivs
jmp
sbb
mov
test
ret
or
lock
xchg
aad
xchg
or
push
int
adc
mov
and
and
sahf
push
xchg
sbb
fwait
imull
mov
or
out
add
xlat
lret
aam
sarb
xchg
push
fnstcw
in
xor
mov
and
ficomps
jg
enter
mov
jo
sub
jmp
inc
xchg
jecxz
mov
loop
push
aas
jecxz
repz
xchg
sub
pushf
push
xor
sahf
arpl
or
dec
jmp
jg
scas
ret
xor
ss
mov
xlat
add
out
mov
in
xlat
mov
out
repz
xor
push
lods
dec
or
xchg
lods
pop
in
push
not
loope
jnp
outsl
into
faddl
cmp
jbe
pushf
iret
mov
fistpll
inc
xor
pop
and
rorl
popa
aam
repz
and
xchg
icebp
xchg
mov
popa
lods
or
jp
or
loope
jle
jnp
mov
inc
fidivl
andl
ds
jbe
sbb
hlt
add
sub
icebp
push
mov
sub
mov
imul
push
xchg
lock
jbe
popa
jo
xor
ret
mov
mov
xchg
test
lret
add
enter
xlat
push
int
dec
out
cli
sbb
mov
jnp
aad
xchg
sbb
jg
mov
sub
xor
sub
jne
add
sub
mov
lods
adc
cwtl
pop
push
sub
stc
ds
sbb
aam
push
xchg
stos
inc
lret
xchg
pop
add
pop
push
inc
mov
or
pop
xor
cmp
dec
sub
push
inc
in
into
mov
es
gs
aam
stos
push
les
mov
iret
aam
mov
add
aaa
dec
ret
xchg
inc
jg
ja
jb
fs
adc
push
daa
test
loop
daa
jb
adc
adc
xor
pop
or
jno
sbb
std
aam
daa
dec
call
repnz
push
lea
pop
or
mov
cli
jnp
adc
fimull
xlat
inc
pop
popf
mov
aad
pop
pop
les
test
stos
sar
push
sarl
pop
cmp
cmpsb
xor
dec
jo
sub
push
xor
xchg
and
xor
add
das
fcoml
cmp
jno
inc
xor
sub
mov
sub
and
lds
mov
sub
mov
jg
ljmp
xor
inc
jmp
aas
lea
gs
cmpl
add
xchg
movsl
mov
sbb
mov
sbb
das
out
push
adc
adc
pop
adc
inc
dec
das
xchg
es
xlat
mov
and
or
pop
adc
lret
dec
push
nop
sbb
inc
dec
rorb
mov
dec
pop
mov
add
cli
fcos
xchg
push
lods
cmp
scas
jo
inc
sbb
pop
stos
inc
add
in
adc
mov
cld
pop
dec
aaa
arpl
std
stc
mov
xchg
xchg
sub
push
sub
ret
cmp
mov
int
mov
or
jle
xor
repz
sbb
sbb
lret
push
icebp
rcrb
cmpsl
push
push
dec
outsb
test
in
das
pop
fimull
jnp
pop
pop
pop
adc
jae
int
cmp
ja
jae
clc
xlat
repnz
pushf
dec
dec
or
outsl
sub
in
ds
jmp
push
inc
xor
pop
xlat
fimull
mov
and
aam
inc
mov
jb
mov
in
and
lods
sarl
test
and
stos
aas
pop
fsubrl
int
lcall
inc
pushf
or
pop
pop
jb
sub
ja,pt
cmp
icebp
dec
jne
inc
inc
add
stos
mov
inc
fisubs
fidivrl
push
movsb
fwait
lret
imul
imul
pop
icebp
pop
iret
mov
push
mov
loopne
and
mov
cmp
pop
push
sub
mov
or
inc
mov
and
cld
adc
mov
fnstsw
sub
sub
mov
fcmovb
and
or
cmp
aaa
mov
adc
outsb
stc
sarb
and
fsubl
jns
cmc
clc
rol
loope
loopne
dec
sub
pop
push
dec
pop
lods
sub
movsb
adc
or
enter
sbb
loopne
xchg
aam
inc
les
ljmp
dec
xchg
jl
and
pop
out
jg
leave
andl
or
popf
xchg
loop
xlat
data16
jnp
jnp
lea
xor
pop
mov
jae
pop
fcmovu
and
and
loopne
or
xor
xor
pop
das
and
popf
rep
sub
in
ret
jl
cmp
mov
xor
jmp
test
mov
push
mov
in
leave
jb
jno
lods
or
mov
in
jmp
pop
and
mov
loop
mov
inc
push
lret
les
fisubrs
repnz
push
inc
cmp
push
jg
xchg
into
xor
mov
aaa
subl
cmp
hlt
mov
mov
and
push
and
jae
push
dec
or
xor
adc
rcrb
dec
arpl
test
jne
sub
call
cli
ja
or
sbb
push
gs
fsubrl
icebp
lds
jmp
sbb
pushf
add
movsb
push
cmp
lcall
xor
aad
daa
inc
out
imul
mov
int
cwtl
pushf
mov
push
lock
out
push
push
aad
fstps
xor
das
in
nop
fisttpl
aam
add
sub
subl
jnp
movsb
xor
sbb
fnstsw
pop
dec
mov
test
mov
adc
fs
jae
sbb
mov
fwait
dec
sbbl
aad
dec
notl
dec
movsl
repz
xor
rcrl
inc
dec
test
inc
push
cmpsb
das
fists
fmuls
and
and
fcmovbe
jmp
xchg
frstor
dec
sub
jo
xchg
sbb
pop
and
fsubrl
push
insl
lahf
jb
js
inc
fisttpl
jbe
pop
pop
iret
cmp
xchg
and
test
gs
dec
fwait
lods
mov
or
mov
les
out
sarl
out
lods
rcll
les
inc
xchg
loopne
cmpsb
cmp
std
negb
inc
or
lcall
inc
inc
adc
sbb
outsb
sbb
pushf
adc
sahf
mov
push
adc
aam
pop
or
shrl
call
orb
mov
fcom
xor
les
rcl
sbb
cmp
adc
pushf
inc
je
loopne
mov
dec
sbb
rcr
sub
and
cld
fnstsw
mov
outsl
mov
push
dec
nop
mov
dec
fmul
inc
dec
imul
loopne
xor
push
lahf
hlt
xchg
fisttpll
push
pop
iret
fsts
adc
repz
mov
dec
sbb
ds
mov
or
jno
repz
lret
push
sub
adc
rorb
sahf
aam
xor
push
xor
cmp
mov
jno
xchg
addr16
test
dec
ficompl
push
pushf
pushl
jne
loopne
mov
sub
sbb
and
jb,pt
inc
mov
pop
dec
xor
repz
add
cmc
mov
jns
xor
in
push
adc
mov
iret
fiaddl
out
outsl
sbb
sub
or
add
ja
xor
out
pop
test
push
push
and
lds
pop
and
push
pusha
and
inc
cltd
idiv
pusha
aad
jbe
pop
push
repz
mov
pop
mov
fstps
divb
call
add
out
add
in
pop
cmp
movsl
jb
std
inc
adc
nop
mov
pop
arpl
inc
lcall
xor
cmp
pop
sbb
cmc
cwtl
call
push
xor
sahf
mov
pop
inc
jp
ljmp
xor
into
ret
adc
and
adc
clc
mov
and
mov
sahf
sti
pop
and
scas
ret
dec
das
rclb
pop
push
shlb
push
pop
mov
pop
dec
sbb
es
cmc
gs
xchg
xorl
adc
out
stc
cmp
add
lret
lods
jbe
push
mov
stos
inc
xchg
pusha
jl
fucom
adc
inc
pop
mov
fstpt
push
mov
aas
aaa
and
cmp
fimull
push
xor
or
push
jnp
pop
rcll
pop
andl
in
andl
xor
push
xchg
ret
inc
jae
or
das
push
into
sbb
pop
test
pop
jno
bound
jae
mov
std
cmp
jno
fisubrl
dec
and
cltd
mov
pusha
adc
rolb
andb
mov
pop
mov
push
inc
cmp
xchg
ss
rcl
cmp
outsl
inc
ljmp
aaa
insl
dec
or
adc
jg
add
and
outsb
inc
mov
sahf
xor
jmp
push
dec
or
sarl
cmp
add
sbb
xor
insb
xor
push
pop
ja
loop
aad
fcomps
sbb
jle
sub
sub
push
cmp
mov
cli
dec
notb
fidivrl
testl
adc
fcomps
mov
inc
clc
lret
cmp
lret
hlt
leave
divb
sbb
in
dec
inc
mov
call
or
jb
cmpsb
popf
fdivrl
movsl
xlat
stos
cld
daa
xor
mov
pushf
ret
inc
out
xor
out
rol
lock
ljmp
int
push
fsubrl
xchg
xor
insb
xchg
xchg
mov
xor
mov
negl
popf
hlt
loop
das
iret
mov
sahf
inc
scas
insl
inc
into
imul
mov
push
clc
mov
lret
in
inc
mov
and
clc
in
jp
das
pop
cmp
not
cmp
mov
mov
and
mov
aaa
jbe
int3
mov
je
mov
add
lds
or
sahf
addr16
lret
sbb
mov
jmp
mov
jo
aad
bound
nop
pusha
push
adc
adcl
pop
mov
jecxz
in
sbb
jae
icebp
xor
and
out
cwtl
shl
sub
loopne
and
xchg
xchg
xor
mov
mov
je
nop
xor
cld
cmp
js
mov
cmp
lcall
int
sub
xor
out
cmp
sbb
fcmovu
fcmovnb
pushf
sbb
inc
inc
bnd
sub
cltd
xchg
sbb
cli
ds
or
fstps
inc
dec
xchg
jae
jo
cld
sub
push
lds
out
xor
jecxz
pusha
movsb
cmpsb
popf
mov
arpl
in
dec
xorb
popf
add
sbb
nop
lret
dec
or
sbb
mov
loopne
shll
inc
xchg
icebp
js
mov
pop
sub
test
lret
popf
inc
or
icebp
aas
xchg
ret
or
pop
mov
jns
mov
lret
sub
inc
sbb
in
gs
imull
or
in
pop
add
imul
loope
aad
repnz
inc
xchg
shlb
cmp
jne
aad
cmp
or
cmp
or
icebp
ret
bound
mov
repnz
pop
clc
shr
mov
sbb
testb
or
or
fmull
sbb
sbb
lds
ret
jecxz
pop
cmp
ja
mov
outsl
add
mul
lods
mov
xor
xor
cmp
ror
into
lods
cwtl
jle
jnp
pop
in
dec
xor
shrl
mov
cmpsb
sbb
das
test
arpl
mov
jg
cld
jbe
dec
mov
or
fildl
movl
lahf
incb
mov
mov
or
mov
dec
sahf
fwait
cmp
xor
cmp
jmp
mov
fimull
mov
lret
popf
pop
imul
dec
jp
jp
jp
das
dec
xchg
scas
jmp
sahf
lock
adc
and
fistpl
hlt
leave
enter
and
in
inc
in
mov
jae
ja
mov
aam
xchg
mov
cmp
scas
rorl
pop
das
pop
cmp
ret
pusha
das
pop
add
inc
bound
mov
jg,pn
push
mov
adc
subb
popw
xor
mov
adc
aad
lds
mov
push
fsubrl
fisubl
xchg
lret
mov
aad
enter
stc
je
sbb
fsubr
repnz
xor
enter
fadds
int
shll
ret
int
sub
std
cmp
adc
or
dec
jp
mov
jecxz
hlt
clc
sbb
push
pop
push
push
pop
adc
sbb
rol
lret
sbb
shr
iret
loop
lods
push
xchg
add
repnz
jle
mov
int3
addb
imul
or
xchg
notb
add
push
cmc
add
imul
popf
jno
jge
adc
outsl
addb
stc
jns
pop
int3
cwtl
add
sub
rorb
cmpsl
iret
xor
mov
les
cmp
idiv
sub
mov
pushf
and
or
movsl
aas
jmp
fcmovb
mov
or
mov
stos
outsb
mov
out
mov
sub
aam
stos
jp
cmpsl
jle
pop
lahf
clc
fsubr
and
ss
pop
sub
mov
cmp
das
insb
sahf
jle
mov
mov
int3
jbe
mov
mov
out
lcall
shlb
test
push
xchg
daa
addl
flds
jmp
rcrl
repnz
inc
mov
in
jnp
mov
push
into
mov
pop
xor
cwtl
xchg
mov
or
clc
xlat
mov
daa
pop
sti
xor
scas
xchg
adc
hlt
repz
stc
jb
push
adcb
inc
ss
fsubrs
xor
into
push
ret
cltd
test
dec
mov
xor
pop
ss
and
inc
xchg
add
adc
and
enter
mov
or
test
push
xor
cmp
jmp
inc
pop
mov
add
cmpsl
stos
jge
stos
loopne
scas
xchg
sbb
aad
jb
xchg
pushf
int3
and
pop
add
fwait
push
and
dec
or
xor
lret
popf
insl
lahf
xor
and
test
scas
inc
push
jae
mov
add
push
sbb
enter
xchg
imul
push
out
xlat
lahf
pop
js
cmp
sahf
jno
loopne
aaa
cwtl
adc
add
mov
xor
add
fwait
xor
loopne
xor
orb
pusha
pop
arpl
lret
test
xor
cmp
mov
xlat
cltd
out
clc
idiv
daa
pop
enter
ret
adc
test
mov
in
sbb
pop
stos
clc
xchg
pop
aam
xchg
sbb
adc
mov
jbe
negb
dec
push
andl
ja
aas
int3
cmpsb
fwait
mov
mov
cmp
sarb
cmp
lret
xchg
fsubrs
pop
add
sub
mov
jg
or
and
mov
lea
mov
loop
ja
pushf
push
xchg
fs
xchg
and
xor
movsb
cmp
mov
or
mov
jmp
aaa
cmp
addl
outsl
call
adc
lea
mov
fldcw
pop
dec
std
inc
pop
jo
mov
aam
shrl
or
jns
xchg
mov
fildll
popf
ja
inc
lds
cmp
or
imul
not
pop
xchg
das
mov
jg
and
ror
pop
or
int3
jmp
mov
mov
sbb
cmp
inc
mov
jne
dec
aas
push
ret
shlb
push
sbb
test
xor
pop
inc
jne
dec
les
xchg
inc
mov
mov
lcall
loope
test
outsb
inc
xchg
into
in
pushf
xor
push
mov
mov
mov
cli
jle
das
stos
jp
or
adc
mov
or
push
push
or
mov
or
jp
mov
faddl
push
mov
leave
pop
test
ret
sbb
aad
aad
jp
pop
int3
lds
aas
scas
imul
repz
lods
jnp
lods
subb
jae
mov
push
and
popf
push
pop
aaa
loope
cmp
adc
jbe
fistl
cs
dec
cmp
std
lods
mov
ss
fldcw
push
test
lods
cmp
jns
sub
push
pop
mov
sub
mov
stc
pop
clc
or
jo
aad
aad
sbb
pusha
mov
and
call
pop
test
cmpsb
add
scas
push
sbb
dec
leave
imul
add
aas
xchg
mov
lcall
inc
int
sbb
and
iret
mov
xchg
hlt
and
dec
rolb
dec
sub
sbb
xchg
cmp
mov
mov
test
xchg
aad
adc
mov
adcl
orl
jnp
stc
mov
cmp
mov
sbb
int
and
add
aad
aad
cmp
adc
les
and
add
and
xchg
movsl
and
or
and
jge
mov
into
mov
sar
jnp
cmp
in
jne
les
lahf
in
imul
dec
xor
js
bound
mov
dec
xor
repz
testl
cmp
ret
addl
jg
jmp
cmpsb
arpl
pop
inc
push
push
sbb
ss
enter
lcall
add
lods
xor
dec
fsubs
adc
or
fadd
popa
cmc
mul
sbb
mov
or
shl
pop
inc
mov
push
test
in
fsqrt
or
mov
dec
pop
add
imul
pushf
inc
sbb
push
add
mov
mov
insb
ja
cmp
mov
fwait
mov
cs
mov
cmp
mov
or
imulb
mov
sbb
nop
pop
adc
mov
ljmp
mov
add
adc
out
loope
push
add
testb
das
add
flds
mov
sarl
aam
lds
add
push
and
inc
test
in
add
nop
add
xor
ret
or
test
outsl
dec
sahf
in
flds
pusha
add
rorl
jmp
mov
out
stos
jae
mov
push
addl
enter
push
inc
das
dec
data16
cltd
inc
dec
push
in
in
cmp
iret
xor
call
sub
push
xor
xor
mov
sbb
xor
cmp
icebp
icebp
xor
roll
aam
xchg
cs
dec
loop
repnz
imul
dec
cmp
push
xor
push
add
in
mov
out
loopne
fcom
jmp
mov
ss
out
dec
loope
imul
push
test
jecxz
rcrb
jp
decl
fwait
bnd
loop
jge
shll
sbb
adc
and
and
cwtl
mov
jae
pusha
mov
jo
xor
push
sub
dec
mov
jb
mov
xor
push
and
xlat
xchg
cmc
pushf
dec
div
dec
ret
test
sub
enter
xlat
or
bound
sub
xor
aaa
jbe
xchg
call
jmp
sbb
sbb
jmp
mov
inc
jns
push
and
mov
sub
in
fdivs
imulb
ja
mov
jmp
dec
add
push
repz
iret
subb
rcrl
xor
inc
mov
idivl
mov
rcll
sub
xor
or
enter
dec
mov
jle
mov
leave
stc
or
jae
sub
mov
mov
mov
test
cmp
inc
imul
ret
ds
adc
push
cmp
adc
test
sub
aas
sub
xor
test
xor
mov
jg
pxor
adc
leave
or
sahf
xchg
adc
pop
ljmp
push
mov
jmp
flds
dec
mov
rclb
sub
ret
and
shl
aad
jne
adc
ja
subl
sub
jb
add
dec
sbb
das
int3
dec
jmp
in
mov
xchg
loopne
mov
push
or
jl
lret
pop
push
jp
flds
divl
gs
cmp
add
mov
movsl
scas
int3
push
push
movsl
js
sarl
out
pop
fs
fistpll
sub
lcall
dec
mov
add
push
sbb
aaa
shlb
mov
fidivl
pop
int3
mov
imul
sbb
and
push
jl
pop
insl
and
rcl
jmp
inc
ffreep
inc
xlat
clc
cmp
adc
sub
dec
sub
jnp
pop
arpl
out
jae
mov
mov
add
dec
mov
sub
jmp
xchg
repz
int3
movsl
out
mov
push
mov
and
pop
lods
addr16
pop
or
sbb
in
push
jmp
mov
loope
jp
mov
xor
mov
test
or
adc
aas
mov
xor
dec
xor
call
aad
mov
test
inc
sti
and
cli
jp
adc
neg
ljmp
jmp
lock
enter
bound
jno
rolb
pop
mov
mov
or
inc
push
int3
pop
in
hlt
xor
mov
sbb
pop
sub
jmp
or
out
pop
jnp
dec
fsubrl
lock
cmp
cmp
arpl
js
dec
in
in
sbb
pop
sbb
mov
mov
lcall
sarb
inc
and
aad
and
fnstenv
clc
xlat
dec
mov
mov
in
sbb
enter
gs
imul
dec
xlat
mul
or
mov
hlt
icebp
push
mov
adc
jnp
jo
xor
popa
pop
enter
and
sbb
mov
sub
lcall
insb
cmp
pop
cmc
ss
push
jne
loop
jno
mov
or
push
enter
push
shl
xor
sbb
jns
in
push
dec
cs
inc
mov
sbb
fwait
in
lock
xor
cmp
lea
iret
shr
adc
nop
hlt
aaa
lret
pop
or
inc
jnp
dec
xchg
mov
loopne
fiadds
inc
jg
mov
inc
dec
mov
call
xchg
fdivs
and
out
sub
xchg
call
jno
jo
inc
inc
popa
insl
xchg
fucomi
cli
sub
lahf
mov
stos
pop
pop
fisubl
sub
push
add
mov
ss
sbb
xor
loope
add
cwtl
inc
jne
mov
pop
cmp
popa
lcall
pop
pop
ss
dec
roll
push
push
das
out
popf
inc
xchg
scas
repnz
mov
loope
pop
aaa
in
adc
adc
dec
rorl
fs
fwait
aas
int3
std
std
mov
push
xor
mov
sub
dec
mov
popl
gs
pop
orl
out
mov
movsb
out
push
push
fimull
dec
mov
inc
sub
lret
mov
fmuls
cmp
add
adc
push
cmp
lea
mov
in
push
xor
mov
sbb
xchg
sub
into
incb
xchg
xor
push
pusha
xlat
jns
mov
faddl
jo
add
sbb
ja
mov
aad
pop
jp
icebp
stc
ret
or
dec
add
int
jmp
or
xchg
scas
inc
pop
test
ja
jecxz
adc
inc
add
lret
cmp
lods
jge
xor
mov
jg
data16
mov
mov
nop
dec
or
mov
pop
test
clc
sbb
jb
stc
jnp
aaa
jg
mov
hlt
mov
and
pop
test
xchg
cmp
dec
pop
test
xchg
lcall
add
and
dec
aam
decb
xlat
sub
dec
jns
pop
inc
mov
xchg
stc
int
push
test
out
and
orb
jns
cmp
mov
rcrl
pop
stos
mov
xor
loope
xor
mov
xchg
inc
cmpsb
fdivs
addr16
sarb
js
adc
pop
out
out
lahf
jge
test
pop
mov
cmp
mov
jbe
arpl
dec
adc
mov
cmpsb
ss
aad
jnp
enter
cwtl
mov
jmp
sub
stos
push
cld
ljmp
lds
pop
mov
jmp
cmc
xor
negl
lret
pop
fistpl
mov
adc
lock
mov
dec
lods
sbb
lret
jp
shll
ljmp
cmpsb
xor
lcall
pusha
inc
test
daa
popf
aam
pushf
les
lods
icebp
movsb
xor
out
popl
cltd
les
cmp
shrb
mov
fidivrl
hlt
out
cmp
inc
push
imul
xchg
push
xlat
ljmp
push
les
insl
mov
dec
and
inc
out
in
mov
or
cmp
lcall
dec
fdecstp
ds
xchg
jmp
mov
iret
cltd
push
fs
lods
cmp
arpl
pop
jg
inc
loope
lock
clc
aam
xchg
ror
outsb
push
aad
ljmp
jle
mov
insb
lret
sub
jmp
js
aad
or
jae
cmp
cmp
mov
sub
xchg
pop
or
push
mov
scas
mov
sbb
js
mov
mov
cmc
fwait
ss
jnp
dec
jecxz
add
std
fcmovu
xchg
data16
lods
shr
sub
arpl
push
movsl
or
test
cmp
std
in
or
xor
adc
sahf
or
mov
cld
fcomps
scas
push
fwait
xor
inc
iret
add
loopne
adc
ss
push
fcompl
frstor
fnsave
dec
mov
sbb
add
push
or
stc
movsl
xchg
dec
pop
push
in
xchg
mov
out
ja
pushl
or
mov
das
add
push
push
mov
or
or
addr16
out
xchg
fiaddl
xchg
jae
sahf
mov
sbb
or
in
jp
mov
je
test
mov
sub
jl
cmp
addr16
rcrl
outsb
not
repz
test
or
sub
mov
pop
orl
lods
insb
lea
adc
loopne
push
xor
pop
push
adc
shlb
or
lret
loop
push
into
mov
dec
and
inc
popf
dec
repnz
dec
inc
xchg
pop
loop
inc
cmp
dec
outsb
cld
adc
mov
mov
pop
and
mov
shll
ja
and
aaa
push
lock
stos
fildl
repz
aam
mulb
sub
pop
cmp
pop
jge
inc
ljmp
mov
jo
jmp
scas
adc
cmp
je
sub
js
and
or
mov
sub
dec
pushf
jg
cwtl
movsb
mov
xchg
cmp
pop
les
mov
inc
pushf
dec
cmp
mov
or
mov
filds
mov
jb
sbb
leave
sbb
in
das
iret
lret
orl
pop
jbe
dec
and
out
jns
push
fists
jp
cli
and
test
lret
inc
lea
fidivrl
imulb
jbe
ret
lret
inc
push
ficomps
xor
mov
in
in
fdivrs
aad
addr16
enter
sbb
stos
mov
stos
int3
cmp
jp
stc
xchg
popa
movsb
add
mov
lret
out
fdivl
fldt
scas
stos
dec
loope
in
xorl
lods
out
fnstcw
fsubs
pop
lahf
lock
movsb
mov
dec
call
iret
jns
cmpsb
xor
stos
mov
ret
out
mov
or
jns
and
imul
in
orb
cmp
loopne
xor
mov
sbb
int3
sbb
dec
loopne
into
adc
scas
and
out
push
cltd
and
pop
int
dec
xchg
sub
mov
ret
xchg
sahf
inc
int3
test
dec
push
inc
test
loop
loope
rol
sub
cmpsl
shl
aam
testl
fisubrl
sbb
or
fcmove
out
jne
jge
pop
ljmp
cmp
jp,pt
cli
add
mov
xor
dec
lahf
add
lods
mov
and
not
insb
push
scas
lock
xor
test
and
imul
adc
movsb
push
leave
out
addl
mov
sti
jmp
jb
dec
test
leave
push
or
cmp
aad
inc
cs
fstpt
jmp
cwtl
xchg
test
mov
mov
inc
dec
add
das
sub
fistpll
mov
push
adc
push
jmp
call
cld
xchg
and
aam
or
xor
pop
sbb
rorb
mov
ret
mov
ljmp
fdivrl
mov
cltd
lods
mov
xchg
jmp
outsl
push
dec
leave
jl
cmpl
aaa
popf
inc
orl
pushf
shlb
add
adc
sbb
sub
std
or
add
push
es
inc
push
mov
sub
pop
push
popa
outsl
mov
xor
push
mov
xchg
arpl
xchg
into
es
mov
int
pop
outsb
loop
call
lcall
jp
mov
sbb
dec
sbb
ret
movsb
loop
rcll
mov
jae
and
inc
adc
push
dec
sbb
lahf
dec
pop
cmpsb
lcall
rcll
inc
xchg
sub
pop
dec
call
movsl
fsubrp
movsl
cmp
mull
xor
loope
sub
cmp
pop
addr16
mov
ud2
push
lcall
push
idivb
in
pop
pop
push
data16
pop
add
pop
bswap
mov
cli
adc
hlt
jae
sbb
xor
pusha
jbe
sti
pop
lcall
ret
mov
sar
add
in
sbb
repz
das
in
inc
js
sbb
gs
pop
lcall
add
mov
pop
add
jg
addr16
dec
cmp
mov
xor
dec
lret
test
cmpsb
push
adc
mov
arpl
gs
test
in
shlb
fsubrp
xor
sub
repnz
add
out
lret
lods
mov
cwtl
xchg
test
mov
pop
hlt
mov
jo
xchg
arpl
jp
lret
cs
scas
xor
sahf
sub
mov
rcrl
and
and
loopne
push
lret
loop
ss
fstpt
sarb
mov
xchg
adc
fnstcw
mov
dec
xor
mov
push
insl
lock
add
push
out
outsl
insl
cmp
je
cld
test
stos
mov
and
aam
lcall
in
xchg
scas
clc
and
add
repz
cmp
push
mov
cltd
or
ss
fldl
les
adc
inc
mov
mov
mov
mov
addr16
lahf
cmp
lret
cmpb
aas
sbb
inc
sub
ss
push
les
in
ss
fldenv
aaa
scas
inc
mov
mov
pop
jg
outsl
adc
mov
jo
jg
jae
das
or
add
std
in
mov
sbb
xchg
sbb
testl
push
inc
cli
xor
cld
icebp
or
jg
mov
push
sarb
stos
mov
aad
pop
les
int
pop
jecxz
call
cmc
pop
ret
jmp
adc
jecxz
dec
dec
sbb
sbbl
imul
in
lahf
pop
push
or
pop
ss
lret
ret
fcmovnbe
sub
or
arpl
dec
xchg
mov
cmp
hlt
jb
sub
mov
cmp
repnz
shll
xor
or
gs
cli
lret
stos
adcb
mov
jne
dec
out
push
pop
ds
mov
out
add
std
leave
xor
cld
jp
cmp
das
ret
xor
jb
cmpsl
push
pop
push
or
mov
stc
aad
xlat
fldcw
mov
ljmp
call
jnp
clc
mov
testl
nop
icebp
push
add
xchg
nop
clc
out
pop
adc
dec
testl
into
pop
pop
cmpsl
sarb
and
fmull
pop
imul
pop
call
movsl
mov
mov
push
test
push
cmc
xor
jnp
dec
mov
adc
inc
call
xor
sbbb
xor
dec
mov
add
test
xor
aad
mov
jecxz
cs
xor
mov
sub
add
pop
inc
sub
cmp
sbb
add
int3
int3
dec
int
mov
sub
iret
push
push
les
mov
rolb
into
int
punpckhwd
lret
push
xchg
dec
add
addr16
sahf
pop
dec
imul
jb
fwait
daa
inc
fwait
popf
mov
push
enter
pushf
cmpsb
cmp
divl
call
fmul
sahf
mov
fidivl
lahf
hlt
adc
jl
fwait
ss
adc
xchg
pop
inc
and
in
pop
adc
jae
outsl
pop
xchg
fucomi
cmpsl
rcrb
vphadduwq
pop
lret
int3
je
fnsave
dec
fisubrl
ud0
cli
mov
negl
pop
sub
jnp
adc
jbe
xor
add
pushf
xor
in
add
test
lcall
out
fldenv
enter
call
enter
fists
loope
stos
jmp
inc
xchg
lock
fisubrl
mov
and
mov
dec
test
ja
mov
add
sbb
push
flds
inc
stc
xchg
or
mov
lods
fildll
mov
inc
fcmovnbe
stos
call
lcall
and
sub
sbb
push
xor
ljmp
imul
mov
sahf
fnstenv
xor
mov
pop
arpl
clc
sbb
ret
scas
xor
jnp
sahf
repnz
xlat
jge
idivb
iret
sarb
xor
pop
cmp
outsl
fdivl
imul
lods
pop
aas
and
xchg
lock
dec
adc
mov
ljmp
mov
shll
gs
popf
sub
adcl
out
out
call
loope
pushf
imul
add
push
mov
mov
push
push
xchg
add
inc
fistl
or
push
and
xchg
pusha
add
test
xor
jae
inc
mov
lret
sbb
add
cmp
sbb
insl
or
or
stos
xor
and
rcr
stos
xor
cmp
adc
gs
or
pop
test
pop
in
in
add
lret
pop
popf
sbb
subb
and
xchg
fistpl
push
inc
sahf
cwtl
push
push
push
push
mov
jmp
pop
mov
rorl
lock
inc
test
jns
push
repz
rolb
insb
jae
in
repnz
mov
dec
inc
or
lods
jp
mov
lock
in
adc
jbe
nop
inc
and
and
mov
push
and
mov
and
cmc
inc
pop
jg
sbb
in
jl
add
roll
inc
jmp
les
mov
cmp
rorb
bound
mov
sbb
xor
jecxz
lret
dec
stos
dec
cmp
cltd
enter
adc
and
fistl
insl
or
lea
mov
mov
ss
cmp
pop
xor
mov
test
std
fs
and
iret
pop
xor
fisubrl
stos
mov
fbld
mov
ljmp
outsl
into
mov
ja
inc
mov
pop
cmpsb
aaa
jp
iret
into
ret
sub
and
pop
cmp
jo
popf
test
movsl
mov
test
xlat
xor
add
or
lahf
aad
int3
lahf
cmp
cmp
loopne
jnp
add
mov
cmp
mov
mov
shl
test
add
jbe
repz
dec
xchg
repz
test
sti
movsl
xchg
dec
pop
jno
xchg
xor
repz
pop
or
adc
ret
xchg
cltd
jo
or
sub
cmp
fisubrl
or
sbb
and
sbb
jmp
sbb
mov
mov
push
mov
add
fidivrl
fwait
mov
and
jge
rcrb
ljmp
mov
call
arpl
xor
testl
aad
push
inc
or
jmp
test
loopne
ljmp
arpl
or
mov
imul
in
pop
jo
enter
std
subb
lret
loopne
pop
dec
into
sbb
syscall
rolb
inc
pop
cmp
es
xor
and
movsl
mov
cmp
sbb
loopne
mov
xorl
adc
pop
int
cmpb
push
cmp
lea
fldl
inc
ds
sub
pop
jge
rcrb
test
push
cmp
ljmp
mov
lock
test
xorb
cmp
rcl
and
fdivl
lds
pop
xor
pushf
lcall
cmp
out
lods
dec
jp
add
mov
popa
mov
or
or
in
push
rclb
push
cmpsb
pop
mov
enter
xchg
sub
mov
js
pushl
in
sbbb
mov
mov
and
shlb
jbe
dec
lods
inc
xor
sbb
mov
pop
fists
inc
xor
xor
and
cmova
cmp
mov
cmp
push
pop
mov
cmp
jbe
cwtd
rcrl
inc
mov
mov
xor
sbb
js
adc
xchg
mov
aas
ret
jb
and
rcll
xchg
and
or
cmc
shlb
cmp
pop
jae
in
jo
inc
xchg
jmp
dec
pop
test
and
ja
enter
pop
adc
stos
pop
subb
hlt
add
popa
popf
ljmp
dec
cmp
jns
ljmp
mov
in
and
xor
mov
or
cmp
stc
jmp
adc
imul
movsb
cmp
and
mov
adc
bound
scas
int
or
sub
sahf
cs
mov
mov
and
add
sbb
sbb
xlat
mov
add
rcrl
sahf
cmp
xor
lods
cld
xor
and
sub
lcall
pop
cmp
imul
lahf
fldt
jl
add
imul
add
jns
mulb
jae
imul
test
dec
test
fisubrl
cmp
inc
cmp
scas
flds
dec
push
cmp
jg
mov
push
xor
hlt
xchg
lock
mov
adc
insb
pop
fiadds
jp
cmp
ficomps
cmp
imulb
and
sbb
lret
int3
enter
mov
popf
lods
ss
outsb
or
or
call
push
jmp
cmc
mov
xchg
add
cmp
jne
into
xchg
sub
cwtl
int3
loope
in
cmp
gs
aaa
cmpsl
fistl
icebp
flds
fidivrl
cmp
cmpsl
xor
popf
outsl
daa
add
inc
mov
pop
ret
jnp
fsubrl
pop
int3
push
jbe
jge
xchg
adcb
test
pop
adc
emms
xor
rol
imul
test
enter
fisubs
nop
int3
in
shll
lods
jecxz
or
aad
sub
outsl
cmc
push
xchg
sbb
outsl
pop
adc
adc
outsl
push
repz
roll
out
mov
dec
stc
es
scas
fldenv
popf
ja
mov
sub
cmp
pop
aas
fisttpl
sub
mov
xchg
or
lock
cmpsl
js
inc
inc
cs
lods
inc
mov
add
inc
jp
cmp
icebp
xchg
pop
daa
scas
mov
mov
in
or
in
sbb
rcrb
jg
lock
mov
push
inc
insl
adc
sbb
lret
pushf
push
clc
mov
cmp
or
repz
xor
push
dec
test
movb
int3
sub
js
adc
sub
enter
dec
loope
nop
dec
sbb
cmpsb
dec
arpl
push
mov
mov
ficoml
out
inc
pop
cmp
pop
xlat
ret
pushf
xchg
fcmovne
sub
in
popf
stos
pushf
cli
loopne
idivb
out
lods
cwtl
in
ds
loop
sub
add
pop
xorl
stc
mov
sub
not
or
or
mov
faddl
jp
cmp
push
movsb
cmpsl
ja
in
inc
or
push
sub
mov
lret
repz
fidivl
pop
stos
mov
ret
cmp
loope
xchg
and
xchg
push
mov
pusha
mov
xor
mov
movl
push
fnstsw
xchg
xchg
or
pushf
outsl
xor
cmp
push
push
mov
movsb
cmp
jno
out
repnz
lock
xlat
push
jg
mov
adc
or
jl
inc
stos
movsl
punpckhdq
inc
adc
sub
imulb
ljmp
jno
in
jnp
lret
inc
sbb
xor
enter
rcrb
mov
sub
jns
pop
xor
sti
sub
testb
aad
mov
imul
enter
mov
jnp
in
or
sub
popa
xchg
mov
push
push
dec
lret
inc
mov
test
in
addl
pop
mov
rorl
dec
andl
lret
pop
mov
dec
test
jge
bound
ljmp
pop
xor
xchg
or
cld
or
imul
mov
xor
aam
pop
jp
sub
mov
cld
pop
daa
outsl
xchg
fsubrl
xchg
scas
ret
loope
movsl
cs
repnz
cld
inc
lods
jl
aam
mov
jmp
mov
dec
js
inc
mov
clc
cli
or
add
stos
or
pop
sti
add
les
aad
fcoml
insl
mov
and
insb
es
jmp
add
aaa
xor
mov
rclb
dec
iret
dec
dec
jecxz
int
mov
inc
xor
sub
jns
xchg
push
and
xchg
into
mov
pop
stos
cld
mov
cld
sbb
ss
sbb
cmp
imul
pop
rolb
inc
xor
inc
fmuls
xor
outsb
mov
add
sbb
xor
and
ja
mov
cmpsl
test
xor
insl
mov
sub
mov
ss
imul
daa
mov
mov
dec
repnz
sbb
test
xchg
add
xor
lea
and
mov
jp
jp
jp
jp
jbe
divl
add
and
jmp
xor
push
clc
cmc
fwait
cltd
xlat
shlb
sub
test
pushf
jb
jb
sahf
ficomps
ret
lret
movsb
mov
jg
ljmp
adc
out
inc
mov
dec
int
out
xor
mov
dec
cmc
push
jmp
addr16
push
negl
out
lods
push
fcmove
or
adc
jbe
xor
pop
adc
js
arpl
mov
sti
in
call
mov
pop
lock
sarb
add
jb
out
rcll
mov
cmpsl
lock
aam
mov
test
inc
add
jne
movb
popf
cld
out
fnstsw
push
mov
mul
jo
lahf
popl
pop
fcmovu
in
inc
cmp
sbb
mov
icebp
idivl
adc
jno
mov
pop
call
cmp
aad
lret
mov
mov
addr16
out
aas
push
dec
loopne
lcall
pop
pop
xchg
sbb
pop
mov
test
inc
jb
cmp
or
xorb
or
cmp
imul
aad
mov
mov
add
int3
sub
std
pop
xor
ret
and
jmp
mov
out
stos
cmp
movsl
adc
test
inc
add
pop
jb
int3
push
xor
test
lcall
mov
lods
inc
and
push
mov
xor
cmp
or
push
xchg
mov
addr16
or
movsb
rcrl
ljmp
sbb
lock
rcrl
pop
inc
stos
mov
push
clc
aas
aas
push
cmp
shl
in
outsl
pusha
mov
xor
push
lods
adc
and
rclb
adc
stc
push
mov
adc
fsubs
cmp
mov
iret
push
adc
ja
sub
sbb
pop
maxps
add
lds
jg
dec
call
pop
pop
cmp
push
adc
mov
test
inc
mov
sub
aas
or
cmp
dec
mov
fcoms
test
jns
mov
test
mov
lahf
xor
dec
jg
mov
in
sbbb
lahf
mov
mov
adc
jmp
push
xor
cld
mov
insb
dec
push
test
jle
js
mov
jnp
sbb
mov
sbb
mov
sahf
sbb
xchg
sbb
out
sbb
mov
pop
stc
mov
jbe
push
xor
rorl
fxam
push
ret
ja
pop
or
mov
mov
inc
xor
jae
adc
push
dec
mov
lcall
std
adc
mov
cwtl
push
sbb
mov
loopne
je
mov
mov
and
xorb
jne
push
add
sub
out
int3
inc
stc
or
mov
push
cmc
mov
mov
cwtl
push
inc
xor
sbb
mov
sub
pop
dec
xor
out
or
repnz
fmuls
repz
sbb
ljmp
xchg
iret
inc
sahf
mov
cld
sub
fsubr
push
decl
pop
push
dec
insl
xor
push
pop
cmpsl
int
dec
pop
dec
imul
inc
lock
movsl
dec
jg
rol
in
in
popa
cmpsb
lret
ljmp
xor
popf
dec
mov
fwait
dec
testl
in
sbbb
sub
jge
daa
jo
std
mov
iret
push
sarl
mov
pop
stos
or
xlat
mov
mov
iret
lret
cmp
sbb
push
mov
pop
push
popf
scas
pop
push
add
shl
or
cmpsl
pop
and
fnstenv
roll
mov
sub
lcall
dec
cld
inc
and
and
mov
out
xor
sti
ror
mov
bnd
lods
ficomps
fwait
sub
pop
cmp
in
clc
and
insb
pop
inc
pop
fsubrs
push
jne
pushf
ljmp
out
xchg
jae
dec
lea
pop
leave
ljmp
push
cmp
stos
in
dec
add
pop
lret
mov
dec
xor
sbb
xchg
imul
xor
xor
outsb
inc
xlat
inc
out
in
iret
mov
dec
push
pop
push
notl
in
sets
xchg
mov
ljmp
jmp
mov
ret
in
inc
lahf
mov
pop
cmp
fsubrs
popf
xor
lcall
loope
mov
leave
or
stos
test
aam
sub
leave
cmp
sbb
sti
lock
fimuls
pop
test
enter
sub
pop
movsl
push
sub
sti
add
xchg
test
sbb
incb
push
fwait
dec
lods
cmp
jnp
push
mov
pop
inc
push
fistps
cmc
notb
xor
inc
pop
add
dec
stos
jl
xchg
nop
pop
popf
out
adc
xchg
fiaddl
sbb
and
jae
dec
pop
or
or
or
fsts
je
mov
arpl
fcmovnu
sbb
jb
sbb
not
jnp
stos
lock
cmp
and
lcall
cmp
into
or
or
shl
cwtl
push
mov
outsl
xchg
cmp
out
lea
mov
dec
data16
clc
lret
subb
sbb
in
movsb
jmp
fmulp
jnp
fsubrs
fnstenv
add
out
in
jmp
jg
jbe
lcall
aad
dec
push
mov
push
jnp
dec
cmc
mov
mov
xor
add
cmp
xchg
dec
xlat
push
jnp
aad
not
inc
inc
push
scas
movmskps
adc
xlat
inc
or
jg
popf
psubusw
pop
push
lods
in
es
and
cmpsl
mov
pop
das
rcl
hlt
cmp
ja
pop
xchg
inc
and
sbb
mov
inc
fsubrl
enter
push
jae
adcl
pop
xchg
sbb
mov
sub
outsl
pop
jecxz
out
xlat
pop
arpl
cmp
mov
fisttpl
adc
lds
adc
mov
adc
cmpsb
sbb
dec
cmp
inc
out
xchg
push
aad
inc
mov
sbb
pop
push
lds
test
popf
jp
pop
push
sub
jmp
cmp
pop
call
or
push
cmp
sub
in
xor
xchg
scas
lret
mov
dec
mov
lcall
aad
loope
fsubrl
test
out
test
jne
push
pop
jge
jne
mov
dec
outsb
add
pop
scas
rorb
fsubr
popa
out
dec
jno
fnstsw
mov
push
or
fwait
mov
in
push
div
dec
sbb
leave
add
inc
aas
push
push
mov
and
xchg
sbb
in
scas
ja
xor
into
or
insb
sbb
nop
fstps
jo
mov
add
cmp
push
add
mov
sbb
push
sub
or
in
push
sub
mov
lods
or
dec
and
xor
xchg
mov
and
in
inc
jecxz
int
call
shr
sub
test
scas
or
and
sub
in
or
popa
xchg
xchg
xor
jnp
cmp
or
mov
push
xchg
movsl
cmpsl
repz
dec
cmp
mov
int3
or
sub
xchg
sbb
sub
cmp
add
stc
adc
inc
sbb
stos
or
jbe
inc
int
stc
loope
maskmovq
notl
insb
pop
jg
push
jmp
pop
xor
or
pop
ficoms
ljmp
jge
je
jbe
adc
xor
push
and
inc
xchg
sbb
fnstsw
pop
sbb
xor
movq
mov
shll
sbb
jnp
in
cmp
or
and
mov
shll
movsb
jmp
mov
mov
jmp
test
lods
or
dec
lock
inc
mov
xchg
or
les
ja
ss
clc
xchg
add
jae
outsl
pop
jmp
or
push
mov
shlb
test
pop
pop
mov
movsl
stos
or
mov
je,pt
repz
iret
mov
jo
and
in
jmp
cmpsl
and
loope
lods
sahf
and
mov
mov
and
stc
lahf
mov
xchg
push
xor
cmp
loop
icebp
dec
cmp
clc
mov
cmp
jle
test
shlb
je
cmp
dec
aad
iret
cwtl
aas
shlb
cltd
in
icebp
outsl
call
inc
cmp
add
adc
xor
lcall
dec
lods
scas
mov
xchg
std
mov
ljmp
int3
pop
ja
dec
outsl
or
jbe
mov
cmc
add
lock
or
fimull
push
add
mov
incl
adc
inc
xorb
dec
jp
mov
cmpl
outsl
mov
dec
push
xchg
rcll
or
lea
fcompl
or
xchg
outsl
mov
and
test
cmp
stos
in
jo
int3
enter
jecxz
mov
imul
outsb
adcl
leave
bnd
pop
sbb
and
cmc
les
in
js
mov
sbb
cltd
mov
fldt
ret
jmp
mov
cld
cmp
int
push
sub
push
out
lret
cmpsl
loopne
test
pop
adc
push
dec
imul
push
xor
mov
les
pop
jne
cmp
movsl
xchg
xchg
in
cs
cltd
and
pop
sub
inc
jecxz
inc
cltd
mov
sbb
xchg
mov
imul
adc
outsl
pushf
cmp
cld
out
jne
sub
mov
mov
inc
jmp
mov
les
fldcw
mov
bnd
push
pop
cmp
dec
imull
and
mov
xchg
adc
imul
or
int
imul
scas
in
push
inc
iret
xchg
in
cmp
mov
jnp
jb
enter
pop
mov
xchg
mov
or
or
inc
push
fiaddl
mov
iret
stos
cmc
pushf
fcmovnb
mov
sahf
cmp
js
pop
sarb
inc
mov
and
dec
stos
sahf
sbb
iret
push
adc
cmp
sbb
lea
push
xchg
pusha
lea
cmp
cmp
pop
inc
push
jnp
mov
in
mov
or
pop
dec
xor
stos
imul
popa
pop
leave
cli
and
jne
scas
push
clc
cmp
mov
nop
insb
int
in
add
imul
cmp
jno
cmp
mov
push
xchg
pop
popa
mov
rclb
stos
pop
pop
stos
xor
sub
testl
push
inc
es
in
and
in
add
out
xlat
inc
mov
fisttpl
inc
pop
mov
sub
fndisi(8087
insb
add
dec
fnsave
or
inc
or
lret
lret
push
cmp
push
sub
jnp
cmp
les
pop
push
xlat
sbb
rep
push
pop
stos
arpl
or
int
pop
sbb
loope
or
cld
scas
jecxz
xchg
jmp
scas
add
sub
mov
sub
xchg
stos
test
je
jmp
ja
jecxz
cmp
or
jae
push
add
or
inc
popf
lcall
ja
cmp
in
cli
arpl
cmp
xchg
popf
adc
adc
rcrl
jle
inc
in
mov
push
in
jl
js
push
cmp
and
xchg
imul
or
mov
idivl
xchg
jo
mov
sub
xlat
shlb
and
xor
les
in
push
cmpsb
addl
or
mov
xlat
mov
mov
call
cld
xchg
les
enter
add
push
and
mov
cmp
cwtl
jmp
sbb
adc
sarl
dec
add
mov
hlt
cmp
jns
loope
add
cmp
divl
fildl
cmp
pop
testb
lret
push
fbstp
call
sub
sub
loop
jae
mov
test
pop
movsb
jmp
cmp
gs
jb
mov
add
scas
dec
xor
cmp
aam
push
inc
jnp
add
xchg
add
push
sbb
movsb
fistpl
adc
out
mov
cmp
xchg
xlat
in
mov
cli
or
cmp
push
dec
or
mov
xor
push
mov
xchg
orl
xor
lods
pop
insl
shlb
nop
sbb
xchg
xchg
mov
push
fs
out
mov
xlat
sub
sbb
and
ret
add
jg
popa
xor
aas
insl
push
jns
cmp
sub
jmp
dec
xchg
pop
push
addr16
cltd
or
adc
dec
insl
add
or
fisttps
dec
jno
sub
xlat
or
fnstenv
xchg
bound
add
seto
stos
push
cmc
cmp
cli
les
scas
jno
lods
aad
mov
ret
dec
je
into
push
or
clc
inc
or
pop
sub
add
add
cmp
lock
ljmp
ljmp
rolb
xor
loope
daa
mov
out
orb
addb
add
and
hlt
add
cltd
dec
push
xor
in
leave
or
and
aad
inc
icebp
sub
jae
out
loopne
dec
push
stos
and
push
pop
cs
xchg
fcmovnbe
adc
mov
out
out
repz
jecxz
cs
jmp
lret
mov
xchg
mov
or
xchg
mov
loop
in
lock
adc
mov
fnstcw
adc
mov
inc
mov
push
sub
xchg
cli
shrb
movsl
bnd
adc
test
ds
push
mov
add
stos
das
add
mov
mov
mov
fisttpl
sub
jmp
stos
push
xor
inc
jo
pop
imul
out
adc
jb
or
add
and
aad
and
cmp
cmp
loop
fwait
in
xchg
mov
mov
out
pop
dec
sarb
imul
roll
xchg
pop
stos
mov
cmp
out
and
sub
lcall
fcompl
cli
lods
push
mov
sub
inc
xor
jns
repz
pop
aad
dec
jnp
xchg
das
xchg
add
ret
addl
inc
lcall
scas
cld
inc
jae
mov
neg
cmp
push
jnp
stos
jae
movsb
inc
cmp
fcmovu
lock
or
adc
jno
push
enter
push
sub
cmpsb
fcoml
push
pop
push
mov
jbe
fcoms
je
imul
mulb
cmp
and
xchg
jle
mov
mov
pop
insl
pop
pushl
dec
adc
mov
idiv
sub
repnz
mov
aad
cmc
mov
ret
fdiv
cmp
icebp
in
lcall
lds
mov
push
pop
mov
xchg
movsl
push
cmpsb
arpl
mov
mov
jnp
push
sbb
add
int3
rcll
sbb
add
pop
or
loope
mov
cltd
xor
adcl
push
jb
pop
mulb
lret
push
xor
lock
pop
add
cmp
rcrl
and
in
sub
jle
pop
aad
cmp
and
push
mov
mov
inc
inc
dec
sbb
xor
int3
mov
push
fistpl
cltd
xor
mov
cmp
in
push
insl
inc
insl
int
and
cmp
das
into
dec
addb
or
push
mov
ret
clc
sbb
push
cmp
rorb
cmp
mov
xor
in
in
dec
cmp
push
stc
cli
pop
fistl
popa
sbb
inc
and
out
hlt
stos
mov
lock
cli
jge
in
add
pop
push
ret
adc
pop
pusha
leave
pop
icebp
sub
jbe
or
cli
fldl
das
mov
dec
adc
dec
test
mov
fdivrs
andb
pop
mov
fdiv
inc
dec
iret
cmp
pop
ret
nop
in
push
cs
iret
hlt
mov
pop
jo
loope
pop
hlt
inc
xchg
cmp
or
and
jp
inc
cmp
add
loopne
rcrb
dec
roll
daa
sbb
aaa
push
es
dec
mov
mov
push
lea
fwait
push
mov
mov
lds
pusha
sbb
xor
mov
movsl
mov
repnz
cmp
mov
es
je
cwtl
jbe
lret
enter
clc
jmp
je
cmp
notl
add
bound
fadds
jne
inc
fistpl
pop
outsl
call
hlt
pushf
adc
or
cltd
sub
add
ja
imulb
pop
xchg
cmp
sub
xchg
or
ja
lock
xchg
sub
push
adc
cmp
roll
sti
cwtl
pop
inc
xchg
orl
adc
int
mov
jae
jmp
xlat
sbb
or
push
mov
push
inc
int
sbbb
dec
sub
xchg
and
sarl
mov
add
adc
jb
out
les
sub
dec
test
fidivrs
pop
cmpsl
dec
adc
aad
mov
xlat
and
enter
ljmp
lcall
dec
sub
mov
lret
fldz
pop
stc
jp
or
add
lret
push
or
pop
sarl
or
mov
enter
push
push
and
xchg
mov
enter
mov
popf
gs
sub
mov
xchg
test
ficompl
xchg
and
mov
fmul
and
and
mov
fcoms
int
mov
popf
jge
out
xchg
mov
pusha
push
mov
push
and
repnz
scas
mov
add
inc
jg
xor
test
and
es
xor
add
jae
xor
push
sbb
lods
aad
pop
dec
push
flds
lret
jmp
outsl
test
push
add
sub
xchg
xchg
subb
inc
aas
mov
xlat
push
or
ljmp
pop
clc
xchg
je
and
testb
xchg
in
cmp
mov
xchg
stos
lock
or
xchg
stos
fcomp
test
arpl
in
push
lods
and
test
popf
cmp
aad
mov
jnp
pop
hlt
mov
xchg
and
daa
sbb
pop
xor
lods
out
pop
in
xchg
jmp
lcall
fstps
jne
inc
inc
xor
out
sbb
add
adc
xor
xchg
cmpl
mov
mov
jns
aad
add
adc
or
test
loope
xchg
pop
leave
push
mov
test
push
or
mov
adc
and
clc
and
add
push
rcll
jmp
push
cmp
push
stos
sub
lcall
inc
sbb
sub
or
sbb
add
aad
pop
int3
daa
xchg
roll
sub
daa
icebp
xchg
jno
sarb
or
mov
aad
push
mov
cmp
imul
sbb
pusha
adc
add
xchg
push
inc
fwait
xor
ja
cmp
xlat
fistl
sbb
xor
jecxz
rcrl
pop
movsb
mov
dec
test
xchg
nop
cmp
jb
ficoml
ret
pop
in
sub
xlat
lret
insl
incb
or
int
in
or
inc
jmp
or
mov
xchg
or
int
stos
sbb
xchg
mov
adc
sub
out
push
cmp
xchg
dec
ds
movsl
pop
sub
mov
loope
jp
or
out
pop
sub
jmp
sarl
insl
or
xchg
imul
fwait
jbe
div
jmp
mov
sbb
xchg
inc
out
mov
xor
loopne
push
and
lds
popf
ljmp
rcrl
inc
sahf
xlat
jmp
repnz
movb
outsl
push
insl
xor
int
mov
sbb
popf
dec
and
in
jmp
mov
outsl
dec
xor
jo
into
icebp
lods
adc
lods
repnz
adcl
in
addr16
adc
xlat
push
ss
or
sub
mov
jo
push
adc
dec
jae
scas
ret
jmp
pop
and
movsb
pop
add
jae
adc
fwait
and
xchg
mov
rcrl
pop
out
insb
addr16
jb
mov
adc
xor
std
loopne
mov
xchg
inc
cld
pop
xor
roll
outsl
fldenv
or
dec
xor
fcmovnbe
or
add
rcrb
jno
mov
jge
inc
dec
or
stos
popf
cmp
stos
xchg
ja
mov
insl
push
mov
push
test
mov
xchg
test
or
ficoms
pushf
jo
add
fwait
ss
mov
mov
or
dec
sbb
addr16
cmp
outsb
stc
push
mov
or
mov
dec
inc
cld
fsubr
push
fnstsw
movsl
jge
fadd
xor
fisubrs
lcall
outsl
mov
out
repz
idivl
addr16
sub
push
xor
fisttpll
sub
fcomps
sub
inc
xor
xchg
lds
push
push
sub
lods
or
adc
mov
sub
sbb
push
mov
test
mov
imul
movsb
int3
cltd
fbld
testl
push
repnz
leave
aad
shll
mov
cmp
dec
outsb
shl
xchg
leave
scas
push
ljmp
addl
mov
nop
push
mov
inc
mov
xchg
daa
pop
into
xor
dec
subb
jo
sbb
mov
mov
int3
stos
test
lret
or
ja
sub
test
in
fmul
jecxz
clc
les
ljmp
scas
int
mov
or
dec
clc
rcl
sub
push
and
cmpsl
jne
jbe
test
int3
test
iret
push
ss
dec
pop
cmpsl
rcr
xchg
push
lahf
in
xor
cwtd
or
jmp
add
lret
nop
xchg
and
lcall
or
sub
cwtl
dec
push
add
enter
jno
inc
aam
adc
jb
pop
and
push
mov
in
pop
test
cltd
dec
es
inc
call
in
leave
in
repz
jp
sub
mov
out
xchg
cmp
mov
push
pop
out
push
cmpsb
xlat
cltd
es
xor
sbb
dec
das
ds
and
divb
jp
in
fs
xchg
sbb
bound
cmpsb
push
pop
sbb
cmpsb
pop
or
popf
adc
pop
and
or
ds
icebp
xchg
lret
int
stos
scas
mov
jbe
into
jb
jnp
repnz
cmp
inc
xchg
or
push
jge
sarl
adc
jge
sbbl
mov
mov
rcll
xor
push
pop
test
je
push
push
adc
xor
mov
das
jge
mov
mov
sar
push
movsl
rolb
je
dec
jle
pop
hlt
pushf
test
lret
push
cmpsb
stc
cmp
iret
pop
or
ret
add
pushf
ja
add
loopne
stos
add
mov
stos
ja
gs
adc
push
push
and
adcl
pop
cwtl
into
shr
push
mov
mov
jmp
cmp
pop
fimull
sub
leave
cmp
lds
fsubs
jb
mov
jne
mov
test
cmp
dec
out
or
lret
sbb
cmp
pop
sahf
mov
add
and
repz
adc
xchg
mov
push
iret
loopne
mov
cwtl
sub
sub
push
out
sahf
hlt
xor
xchg
aaa
pushl
mov
ss
jb
stos
icebp
pop
mov
cmp
jecxz
cmp
sub
cwtl
add
fs
adc
cmp
mov
mov
push
mov
inc
out
int3
pop
dec
jmp
sti
mov
dec
rorl
mov
sub
inc
imul
add
adc
fwait
pop
and
add
or
sub
sub
stc
push
test
adc
fstl
push
or
pop
mov
cmpsl
int
les
push
mov
rcll
test
mov
stos
aas
dec
aam
sub
ljmp
sbb
and
lock
add
push
xlat
in
jbe
test
int3
leave
sti
loope
push
aam
mov
ja
loopne
mov
cmp
shl
sbb
fadd
and
pop
loopne
sub
hlt
jmp
sbb
cmpsb
aaa
jge
pop
dec
mov
jns
andl
adc
mov
jo
adc
addl
lahf
xchg
cmp
cld
mov
dec
pusha
ret
dec
jp
arpl
fs
inc
jmp
mov
fcoms
push
test
aas
jno
pop
inc
mov
lock
jbe
dec
call
idivb
or
adc
mov
push
ss
bound
loope
xchg
scas
or
adc
mov
fistpl
lcall
adc
sbb
push
mov
stc
fcomi
mov
mov
fildl
cmp
stos
lds
jecxz
push
cmp
bound
out
cmc
ss
push
xor
push
sub
mov
hlt
jecxz
add
sub
cmp
rolb
mov
cmp
ljmp
pop
loop
test
in
pop
jmp
ret
jmp
shll
adc
mov
out
cli
dec
shlb
clc
fistpl
cmp
aam
xchg
pop
xchg
sbb
sbb
pop
inc
stos
push
sbb
cmp
shlb
xor
add
in
pop
xor
push
jb
or
pop
stos
lods
lods
xchg
or
push
leave
sbb
mov
fldt
xor
adc
aas
dec
rcrl
les
nop
das
movsl
stos
gs
push
push
repnz
and
lea
jmp
xor
jne
and
add
pop
stos
popa
mov
cmc
xchg
imul
inc
iret
xorb
fxch
xchg
ret
jmp
aad
xor
stos
mov
cltd
in
fadd
data16
xchg
pop
call
sub
xlat
jnp
xchg
sbb
aaa
pop
lds
dec
dec
push
push
sub
mov
ss
push
or
push
jae
cmc
cmpsl
add
inc
sarl
test
pop
jnp
outsl
push
jnp
outsl
xchg
das
inc
iret
mov
fcomp
dec
mov
jo
cmp
and
aam
push
hlt
or
stos
add
xchg
or
arpl
jno
sbb
push
cld
stos
mov
repz
or
sub
loope
xchg
fmull
sub
xor
add
ljmp
rcl
orb
mov
push
cs
push
out
inc
sub
pushf
mov
mov
sbb
loope
pop
rorl
sbb
fsts
and
std
push
xlat
in
xchg
hlt
scas
ljmp
in
mov
sub
int3
mov
xchg
inc
arpl
daa
pop
push
pop
das
arpl
mov
xchg
and
add
mov
lret
loopne
rclb
dec
mov
push
nop
jecxz
push
sub
adc
dec
fldz
adc
inc
cltd
aad
mov
add
jae
inc
push
pop
repnz
pop
push
scas
inc
dec
sbb
lds
imul
movntq
cmp
jge
js
lcall
xor
xlat
in
dec
mov
mov
add
mov
dec
imul
add
aas
shlb
and
loope
in
fstpt
test
or
arpl
imul
fimull
icebp
mov
fnsave
xor
mov
cwtl
in
sub
add
jmp
cmc
cmp
les
loope
dec
and
adc
jns
add
add
xchg
xlat
dec
mov
xor
fdivrl
ja
movsb
add
push
lcall
outsb
push
xchg
cmp
iret
ds
sahf
cltd
repnz
mov
adc
sbb
push
dec
lea
or
repz
clc
mov
lcall
lods
decb
insl
xor
leave
test
and
rol
fdivr
lock
test
or
mov
pop
xor
push
xor
imul
xor
pop
cmp
dec
pop
mov
add
or
and
pop
ret
inc
es
cmc
jge
dec
sbb
mov
outsl
icebp
notb
xor
ror
hlt
cmp
push
mov
mov
js
fmul
add
xlat
test
clc
rorb
cmc
dec
fdivrs
lcall
sbb
cld
nop
icebp
std
icebp
nop
jg
adc
mov
adc
inc
pop
mov
mov
mov
sbb
fucomip
jge
and
in
mov
add
mov
les
jecxz
cwtl
add
sbbl
sub
adc
sarl
jnp
mov
orl
xchg
cmp
jecxz
adc
cmp
cmc
mov
out
add
sub
xor
je
hlt
push
out
sbb
or
mov
enter
sub
push
ljmp
icebp
mov
jns
push
mov
dec
inc
cs
mov
or
jecxz
ror
dec
cwtl
or
jbe
cmp
out
fisttpl
mov
fcomi
mov
das
les
xor
shr
xor
loope
add
add
ss
fcom
stc
fcomi
inc
gs
lret
jl
xor
jmp
clc
jbe
jmp
mov
call
add
push
jae
xlat
and
jnp
cmp
mov
lock
and
enter
cmp
or
jg
in
mov
jg
mov
out
shl
out
xlat
data16
cmp
outsl
dec
mov
inc
jb
inc
hlt
jmp
add
scas
iret
xor
sub
push
pop
nop
mov
sbb
popa
jl
aad
lods
jmp
in
js
jnp
lret
adc
dec
test
out
in
lods
lods
jl
push
movsl
lret
cs
cmp
mov
push
rep
mov
or
imul
sbb
aam
and
call
movsb
pop
subl
mov
lret
ret
out
xchg
enter
movsb
push
mov
mov
cmp
push
push
loope
fidivrs
call
add
inc
iret
pop
in
orl
fistps
pop
or
clc
repz
adc
in
jge
add
push
xchg
jbe
mov
lds
ficoms
lods
mov
fdivrl
mov
aam
dec
mov
xor
or
mov
push
lods
dec
pop
add
lds
mov
int3
xlat
mov
jge
push
loop
daa
addr16
lret
push
cs
aad
lds
leave
xchg
les
in
fisubrs
cmp
leave
jg
and
rcrb
out
add
push
xor
push
lret
mov
and
jnp
cmp
in
jo
imul
in
test
jb
insl
inc
jle
mov
stos
imul
push
test
aaa
sbb
ja
fstpt
ss
into
cmp
push
icebp
or
movsb
mov
inc
cwtl
in
xchg
xchg
pop
jge
lock
dec
scas
fldt
pop
push
xchg
std
xchg
mov
dec
je
ret
push
enter
add
ss
outsl
nop
xchg
test
notb
and
andb
repnz
pop
cmp
rclb
add
adc
add
pushf
insb
lret
mov
xor
aad
test
lock
jno
dec
mov
in
pop
sti
enter
repz
loopne
popa
pop
add
inc
adc
je
aas
or
sarb
mov
inc
test
jae
test
bound
cli
int3
shll
mov
mov
lahf
cmp
mov
fs
push
stc
adc
xor
add
pop
bound
gs
lea
stc
mov
xor
cmp
mov
or
sarb
xlat
cmpl
mov
push
nop
enter
dec
fisttpl
jg
xchg
dec
lock
push
cmp
or
xchg
push
into
add
xchg
xor
mov
rclb
jl
roll
fistpl
rcll
fisubrl
inc
cmp
lods
cwtl
aas
or
das
cmpsb
ss
sub
leave
mov
xchg
int
mov
xor
sub
sbb
rcr
push
lock
lret
out
lea
pop
mov
in
mov
mov
shlb
mov
mov
push
mov
push
or
push
inc
int3
in
push
xlat
mov
cmp
shrb
xor
mov
push
sub
xor
outsl
adc
dec
insb
test
jb
xor
loopne
clc
and
mov
or
jg
ret
int
es
sub
xor
mov
jmp
xchg
add
adc
lcall
or
add
inc
pop
mov
mov
mov
push
dec
adc
shlb
or
mov
mov
sub
jno
icebp
sub
stos
push
mov
int
loopne
dec
xor
xor
maskmovq
mull
xor
inc
xchg
test
push
mov
jg
lret
mov
pop
aas
cmp
cs
push
dec
dec
in
sub
add
cmp
pop
jmp
popf
fs
insb
icebp
pop
and
imul
jne
jmp
jno
mov
mov
lock
xchg
jb
xchg
iret
sbb
dec
int3
cmpsb
das
ret
cwtl
outsb
sub
cmp
push
ret
in
inc
or
or
add
in
fcoms
mov
fisubrs
push
test
xchg
or
mov
loopne
hlt
add
pop
mov
jb
fistl
pop
mov
push
mov
stos
jecxz
xor
xlat
xchg
daa
xor
adc
sbb
test
sub
push
lret
aad
adc
enter
ds
inc
fsubl
sbb
int3
push
je
xchg
mov
mov
jno,pn
scas
stos
fistpl
cwtl
ret
fsubr
xor
lret
sub
scas
mov
or
or
test
push
mov
inc
cmp
mov
xor
push
ja
int
imul
mov
cmp
xor
scas
hlt
int3
bnd
xchg
inc
inc
pop
movsb
xchg
inc
dec
and
jle
lret
mov
adc
xchg
cmp
stos
lods
pushf
mov
and
andl
inc
mov
dec
push
sbb
jb
xchg
sbb
scas
mov
imul
imul
imul
out
imul
mov
icebp
pop
loope
enter
jb
or
lcall
loop
pop
mov
mov
xchg
or
ja
movsb
sbb
cwtl
mov
mov
push
sub
add
lods
add
movsl
push
jp
scas
xlat
repnz
enter
pop
cmp
and
aaa
pop
ja
xor
pop
in
mov
dec
mov
pushf
adc
xlat
les
iret
xlat
pop
jle
adc
mov
cltd
mov
inc
adcb
or
push
and
cmp
outsl
sbb
xor
mov
jae
push
fldt
pop
repz
cmp
mov
out
int
ds
add
xor
xor
in
xchg
mov
sub
stos
jg
mov
dec
mov
mov
xor
adc
xor
outsb
imul
cmp
adc
pop
xchg
shrl
fisubrs
lods
push
aas
sahf
and
push
fdivrs
lea
mov
adcb
mov
mov
ja
jmp
icebp
xchg
push
je
jne
ret
icebp
mov
push
fldl
mov
fidivl
cwtl
cmpsl
cmp
sub
add
or
inc
ds
and
dec
lahf
push
mov
mov
pop
add
mov
sbb
enter
mov
cmp
mov
cs
add
iret
push
cmp
mov
add
rcl
xor
inc
mov
movsl
mov
xchg
xor
adc
xor
rcrb
or
insl
fdivrs
add
movsl
mov
mov
and
pop
std
sub
pop
lock
mov
jge
mov
mov
push
fsubs
or
lret
std
jns
ljmp
push
lods
fs
push
ja
mov
out
loopne
xchg
or
adc
xchg
cmp
flds
push
push
test
cmp
xchg
mov
cmp
movsl
adc
mov
inc
ljmp
sahf
ss
into
aam
jmp
pcmpgtd
mov
ja
or
jge
adc
rorl
popa
roll
in
push
push
adc
lret
sbb
cmp
sarl
xor
clc
and
sbb
or
enter
push
addr16
add
jne
add
xlat
jns
push
insb
fnstenv
mov
int3
ret
push
sub
rcl
mull
adc
or
jmp
xchg
xlat
ret
mov
adcb
fists
mov
mov
xchg
mov
stos
adc
xor
rcll
ret
pop
cmp
jecxz
adc
xor
and
or
or
jbe
dec
faddl
mov
xchg
popa
xor
cwtl
xchg
sub
adc
pop
push
insb
ds
repz
adc
aad
stc
in
pop
fisttpl
add
cmpsl
repz
fucomp
repnz
sbb
inc
mov
xchg
rcll
xor
in
ret
fwait
sub
ljmp
or
mov
jne
pop
pop
pop
data16
push
fwait
mov
test
xor
icebp
xchg
mov
mov
and
bswap
hlt
adc
xchg
jo
add
aaa
sarb
enter
sub
dec
xor
imul
gs
sbb
dec
outsb
call
push
enter
fcomip
clc
dec
daa
roll
sbb
repz
pop
pop
rorl
popf
pop
xor
mov
push
arpl
cs
loopne
jnp
dec
xchg
cmp
rorl
and
ss
adc
adc
and
nop
pop
js
jmpw
test
lret
and
int
mov
adc
push
lcall
add
out
adc
cld
or
mov
ror
aam
mov
mov
or
enter
adc
out
sarb
dec
or
mov
enter
mov
xchg
cmc
aad
in
jmp
inc
cmc
dec
mulb
out
adc
adc
loopne
mov
and
mov
push
xor
sub
sbb
fwait
negl
popf
mov
loopne
cmp
cmp
ja
scas
notb
adc
jecxz
mov
or
inc
xchg
jno
out
push
add
and
fcomi
fwait
or
xor
pop
cltd
mov
adc
pop
dec
dec
cmp
mov
sub
pop
repz
jecxz
outsl
dec
jmp
lock
jbe
inc
iret
or
inc
mov
sub
clc
popf
mov
adc
je
fsts
insl
and
xor
adc
int3
adc
iret
mov
ss
cmp
out
push
jno
fcomp
sbb
xchg
nop
mov
cmp
jb
imul
cmpsl
test
dec
or
and
lret
lret
push
int
or
sub
fst
les
daa
xchg
mov
test
dec
cmp
pop
mov
js
xor
repz
icebp
sahf
mov
adc
cmpsb
popf
outsb
xor
push
or
lcall
push
dec
jae
dec
add
fucomip
mov
mov
sub
xor
jnp
rolb
cmp
dec
mov
sbb
dec
adc
add
pop
in
dec
lods
or
test
or
xchg
push
repz
fldt
sub
xchg
pop
and
add
mov
pusha
stc
or
cmp
in
jecxz
jl
pop
dec
aad
inc
xor
and
jp
int
jmp
fmuls
inc
jnp
push
mov
es
movsb
cmp
ficompl
push
rcl
test
sbb
ja
inc
cmpsb
cmp
gs
addl
pop
inc
inc
pushf
jno
lods
jmp
xor
inc
and
mov
mov
jno
loopne
aad
cli
dec
jno
jnp
mov
or
jp
sti
subb
ljmp
cmc
sub
xchg
loopne
push
jo
lcall
jmp
dec
rolb
mov
repz
or
mov
dec
jo
jg
aas
mov
clc
and
sub
xor
sub
jecxz
enter
xlat
cmp
xlat
pop
inc
inc
int
stos
bnd
sarb
xor
rsqrtps
pop
stc
pop
push
cli
sahf
xor
sub
leave
xchg
movsl
clc
es
test
fbstp
lcall
cmpsl
rcpps
xchg
jnp
pop
hlt
and
clc
imul
sub
inc
sbb
aam
stos
mov
in
popf
out
in
sub
fnstsw
jo
xchg
dec
orl
jmp
lcall
xchg
sbb
fwait
out
insb
xchg
push
jmp
push
mov
push
dec
jp
jmp
add
popf
cmp
xor
pop
out
enter
add
scas
pushf
rolb
clc
mov
jae
ss
mov
mov
xchg
lea
pushf
ss
stos
xor
fiaddl
or
pop
iret
cmp
ja
mov
dec
pop
dec
dec
fadds
pop
popf
add
ror
cmp
sub
pop
push
in
aas
jne
pop
xlat
pop
ljmp
jecxz
clc
xor
xor
outsb
fstps
lods
jae
fcomi
in
xor
pop
fs
dec
xchg
es
mov
xor
js
xor
push
sbb
mov
or
sbb
or
cmp
mov
shrb
mov
xor
iret
mov
lods
pop
ds
shr
movsl
mov
push
mov
jne
jg
xor
jmp
fdiv
xchg
jl
or
add
jmp
add
push
iret
mov
int
ds
mov
push
sbb
dec
inc
cmp
shlb
mov
cld
mov
pushf
add
and
insb
push
iret
imul
dec
aam
mov
clc
js
pop
lods
or
insl
int3
out
mov
insb
in
out
in
popa
mov
mov
xchg
mov
inc
cmp
enter
xor
fcmovne
in
insb
js
xchg
rep
push
ds
es
push
cmp
cmp
mov
mov
int
dec
mov
mov
loopne
pop
ljmp
inc
fsubrl
out
mov
les
out
pop
dec
test
sub
sbb
out
dec
sub
sub
cmp
rcll
aad
inc
outsb
cltd
sahf
pop
cmp
and
mov
into
insl
mov
jo
imul
dec
repz
popf
cmpsb
shl
mov
lcall
pop
std
pop
in
imull
ss
adc
mov
sub
pop
jl
cmp
icebp
test
sbb
pop
sub
in
ja
add
add
push
bound
clc
cwtl
mov
and
test
in
push
das
fwait
lcall
xchg
rolb
and
dec
lcall
ja
cmp
jmp
or
xchg
stc
int
das
cli
pop
das
lcall
dec
xchg
or
mov
ds
push
ud0
jmp
pop
xchg
pop
pop
stos
or
pop
sbb
mov
mov
mov
fwait
sbb
sub
cmp
sub
lods
in
test
cmp
test
in
xor
xor
jne
xor
jmp
insl
adc
or
stc
mov
mov
sub
mov
add
xlat
shll
in
xchg
jp
jecxz
adc
add
clc
popf
ret
js
sub
pusha
xor
xlat
mov
js
mov
sahf
rorb
mov
aas
cmp
add
leave
fmull
daa
mov
add
sbb
adc
mov
clc
scas
enter
adc
jmp
mov
add
mov
es
and
cmp
mov
mov
movsb
jle
jno
add
cmp
push
shlb
int
imul
shll
mov
aam
js
and
add
sub
jg
mov
pop
outsl
lea
or
sub
in
movl
mov
aaa
adc
test
movsb
inc
fldln2
cmp
push
inc
std
push
xor
sbb
inc
cmpsb
sub
lock
add
jb
lahf
pop
stos
in
test
inc
and
inc
cmpsb
push
pop
cmp
sbb
out
pop
mov
ds
push
popa
gs
movsb
inc
rcrb
push
mov
sarb
lock
in
loop
xlat
aas
mov
jg
xor
test
mov
xchg
inc
jae
aaa
mul
test
lods
pop
jp
in
pop
xor
dec
push
and
push
ret
mov
fcomip
outsb
xchg
mov
sub
jne
movsl
sub
aaa
stos
dec
out
dec
movsl
cmp
ljmp
mov
mov
push
cmp
les
inc
sub
and
and
bound
fldt
subl
or
popa
ret
rolb
jmp
dec
clc
flds
or
enter
push
outsl
loop
in
push
add
call
inc
cmp
lock
ja
or
or
cmp
pop
ja
mov
js
ljmp
adc
adc
imul
ljmp
jae
mov
cmpsb
lock
jg
pop
insb
outsb
stos
and
jae
jmp
mov
imull
mov
stos
and
out
jmp
or
fimuls
pop
mov
jo
mov
pushw
or
pop
add
lahf
insb
movsl
xor
mov
xchg
js
repnz
mov
xor
fbld
test
pop
dec
call
shll
mov
lcall
ja
icebp
shl
push
add
cmp
and
ror
ljmp
inc
aaa
clc
sub
jo
mov
and
aaa
loope
xchg
and
sbb
cmpxchg
cmp
or
xor
aad
jae
ljmp
int3
mov
pop
je
mov
mov
insb
leave
mov
xchg
push
inc
add
shlb
inc
pop
push
fmul
in
xchg
inc
sbb
cmp
mov
addr16
or
cmp
das
sub
lock
cmp
mov
cltd
addr16
repz
pop
add
sarb
push
fisubl
cmp
imul
fidivl
cmpsb
es
fstpt
add
push
idivl
push
test
mov
int
sbb
jbe
out
je
xchg
popa
fs
mov
jo
fs
xor
jge
in
outsb
movb
mov
jmp
jnp
lret
hlt
je
mov
xor
cmp
sub
orl
dec
adc
cmpb
xor
fldenv
icebp
adc
sbbl
sub
in
cmpsb
lea
iret
adcl
imul
fstpt
cmp
rclb
outsl
cmp
sbb
out
cmc
mov
sub
pusha
sbb
test
xor
adc
sbb
push
add
or
cld
cmp
cmp
repnz
mov
in
and
test
sbb
dec
je
nop
mov
xor
mov
out
in
lcall
inc
add
shrl
mov
push
lcall
je
repnz
cld
cmc
dec
xlat
inc
inc
or
mov
push
pop
jnp
add
xchg
cmp
es
mov
sub
push
jno
jb
jbe
stc
sub
arpl
cmp
cmp
sub
cmpl
movsb
sub
mov
adc
lret
sbb
sbb
cmp
adc
or
push
lahf
mov
pop
les
lods
mov
out
jnp
fistl
adc
pop
inc
jp
int
push
mov
xchg
inc
xlat
pushf
getsec
icebp
sub
xchg
dec
pop
movsl
inc
loope
lret
das
xor
mov
call
gs
rorl
sub
iret
fldl
outsl
mov
xchg
rcrb
movb
mov
es
jb
jecxz
out
sbb
dec
ret
aam
adc
push
shlb
mov
add
es
int3
mov
jns
mov
sub
test
jno
push
inc
pop
sbb
call
cmpsb
add
iret
dec
test
mov
cmp
add
lea
cmp
mov
jmp
sub
mov
fsubs
add
and
popf
xor
sbb
sub
dec
fdivs
dec
adc
jnp
mov
in
sbb
aad
pop
stos
incl
xchg
bound
in
cltd
clc
sub
shll
fisttpl
lock
rcrb
xor
cmp
imul
dec
jne
out
xchg
sub
into
dec
inc
sbb
add
and
gs
addl
outsl
pop
cld
sub
sbb
fsts
ficoms
pop
or
jno
ja
call
scas
test
je
sbb
jae
inc
pusha
aam
icebp
aad
mov
dec
jo
add
loope
addr16
mov
in
mov
and
fidivrl
loopne
jno
jge
sbb
test
cmp
jmp
add
adc
fdivs
dec
outsb
cmc
mov
test
mov
pop
jecxz
cmpsb
pop
adc
xor
dec
fwait
cli
cmc
cmp
je
xchg
inc
fwait
pop
jno
cmp
loope
test
mov
jp
push
loope
arpl
jmp
jmp
jbe,pt
or
lahf
jno
jo
aaa
shl
jecxz
adc
out
or
inc
push
arpl
xor
push
icebp
outsl
push
mov
sbb
xchg
shl
das
mov
das
or
jns
ret
sahf
or
arpl
sbb
dec
in
jb
inc
xlat
jno
es
mov
shrb
addr16
nop
pop
in
xchg
cmp
leave
in
popf
push
mov
scas
mov
pcmpeqw
enter
int3
mov
out
pop
mov
inc
stos
outsl
mov
fstpt
loopne
lret
in
pop
sub
shll
into
pop
pop
pop
adc
ja
iret
xchg
lret
es
sub
bound
and
loop
aad
js
in
mov
push
sub
push
insb
popl
out
xor
xor
jecxz
mov
mov
mov
shl
cmp
lret
xor
adc
adc
mov
ja
xchg
ljmp
divb
sbb
and
negb
cmp
jp
add
jno
inc
ss
pop
jle
and
push
mov
leave
xor
mov
pop
enter
stos
jno
mov
test
pop
xchg
and
and
mov
mov
dec
repz
les
fstpt
pop
cmp
insb
mov
jo
push
push
stc
repnz
icebp
iret
push
repnz
jbe
sbb
popw
mov
mov
cmc
add
fistpl
mov
addr16
cmp
test
pop
les
add
ss
shrb
inc
in
pop
adc
dec
push
jnp
movsb
ljmp
call
shl
push
lcall
jae
cwtl
push
pushf
pop
dec
int
mov
add
je
push
in
pop
sbb
test
fidivrs
add
repz
mov
mov
addb
mov
xchg
fstl
ja
adc
cmpsl
adc
lcall
sbb
rcll
pop
add
inc
mov
or
es
bound
cs
repz
jp
inc
inc
cltd
cli
pop
fiaddl
std
xchg
aad
jbe
sbb
mov
mov
loop
add
loope
cmc
adc
add
mov
aas
rol
sbb
sub
lret
cmpsb
inc
iret
xchg
dec
or
mov
pop
dec
xchg
clc
out
cwtl
int
cli
dec
xchg
in
dec
aas
xor
fstl
adc
sub
dec
mov
push
and
sarb
jb
ljmp
not
cmp
jnp
in
sbb
rorl
add
cmp
xor
sbb
sbb
jecxz
mov
lahf
lahf
dec
rcrb
stos
jo
mov
inc
pusha
gs
cwtl
xchg
and
enter
fcoms
orb
in
js
stos
cs
dec
mov
dec
fcoml
repz
mov
lock
data16
imulb
push
and
arpl
inc
inc
cmp
outsl
das
repnz
sub
stos
xchg
push
cmpsb
cmp
jg
hlt
insl
mov
hlt
jns
mov
inc
roll
mov
enter
lahf
test
adc
xchg
sub
pushf
mov
mov
mov
lds
lods
aad
pusha
pop
inc
arpl
add
or
push
sub
test
and
popl
mov
std
or
xchg
nop
sahf
pusha
loop
in
push
push
mov
enter
mov
dec
jb
add
cmp
es
adc
cmp
mov
mov
mov
mov
push
adc
movnti
adc
sarb
leave
push
sub
xlat
ljmp
push
fcomps
mov
movl
inc
xchg
and
mov
bound
fdivrl
ds
jecxz
cltd
xor
rcll
loopne
test
push
add
dec
add
test
xchg
icebp
stos
mov
or
lret
push
jp
fstps
xor
lahf
fdivs
xchg
mov
push
fucomp
mov
decl
cltd
xor
cmpsl
aad
add
lods
mov
pop
lret
inc
adc
js
jns
jg
pop
sub
insb
mov
fucomi
or
push
mov
and
in
fstl
popf
insb
cld
rcrb
mov
pop
ret
sahf
mov
les
and
lock
movsb
xlat
or
ds
test
push
test
ss
movsb
iret
stos
add
fdivrl
loopne
enter
loopne
or
das
jg
fwait
add
lcall
lea
insl
hlt
and
test
cwtl
pop
daa
bound
in
stos
dec
stc
push
enter
ja
int3
daa
out
mov
mov
adc
es
sub
inc
sub
pop
or
jl
sbb
js
mov
mov
mov
and
mov
nop
cltd
and
cmp
out
push
add
inc
adc
xor
xor
dec
or
jg
push
jbe
dec
lret
int3
std
lock
and
sbb
ds
stos
int3
scas
ja
pop
inc
adc
cld
mov
cmc
adc
call
ljmp
cld
or
scas
sub
xor
jb
xchg
cmp
jnp
add
je
sbb
leave
cmp
rorb
xor
xchg
and
ja
add
add
ja
sub
or
mov
lret
jae
sub
call
push
pop
adc
daa
ss
fmul
ja
lods
test
push
xor
cli
cmp
add
inc
lcall
scas
in
jl
int
xchg
lea
pop
sbbb
and
add
movsb
test
fimull
out
cmp
ret
mov
inc
inc
lock
mov
fwait
test
add
dec
mov
std
xor
inc
inc
insl
cmp
jo
add
fs
lahf
cmpsl
aad
movups
clc
or
cli
hlt
out
sub
lret
add
in
sahf
push
and
or
sbb
test
mov
daa
jle
fucomip
les
clc
and
iret
cmp
in
mov
push
cmp
xor
stc
lods
cmp
jne
or
xor
ds
lods
adc
out
push
cmp
imul
inc
pushf
ds
aad
stc
shrb
cmpsl
rclb
sub
mov
stc
fdivrs
or
sbb
xor
sbb
popa
pop
or
push
push
clc
loopne
in
cmp
dec
test
pop
adc
cli
inc
shlb
cld
cmp
push
nop
jge
cmpb
or
dec
jne
add
mov
int
adc
add
scas
pop
push
out
loope
add
add
enter
jecxz
cmpsb
adc
cmp
jne
popf
fisttpl
stos
cltd
or
jecxz
sub
add
fimull
out
adc
fbstp
and
cmp
popl
repnz
or
cmpsb
roll
outsl
mov
repnz
xchg
adc
insl
mov
lret
lcall
pop
sub
sbb
sub
cli
jno
jbe
cli
fnsetpm(287
stc
out
xor
pop
inc
outsl
imul
inc
cmp
inc
in
push
push
imul
xchg
lret
sub
sub
ja
popfw
pop
out
movsb
jae
test
sub
lock
and
dec
xchg
or
pop
int3
sbb
push
inc
cmc
gs
jbe
and
sub
rclb
xchg
cmp
mov
das
daa
or
ljmp
cmpsl
mov
xchg
icebp
loope
popf
aaa
sarb
inc
cld
add
test
jnp
cmpsb
in
dec
inc
mov
pop
pop
hlt
dec
or
mov
fcom
cmp
xor
sbb
mov
jae
sub
dec
cmp
js
les
ds
mov
pop
popf
mov
add
mov
sahf
loop
sbb
movsl
mov
xchg
push
test
pop
lahf
and
and
mov
xchg
push
jb
hlt
sbb
sbb
cld
aad
in
jecxz
lods
in
std
fcomi
or
cld
stc
jle
or
xchg
push
inc
es
push
es
or
add
incl
add
pop
mov
lods
fwait
add
mov
cmpsl
popf
mov
fnstenv
pushf
pop
push
mov
push
ja
mov
xchg
mov
xchg
cmp
or
fstp
adc
fnstenv
clc
fwait
and
xor
dec
xor
imul
cltd
jae
mov
fstps
or
cmp
sub
stc
pop
pop
insb
mov
lret
sub
adc
pop
adc
rolb
lds
mov
ss
push
cmc
fucomi
pop
mov
aad
cmp
or
mov
stc
dec
out
scas
lret
dec
rolb
push
or
sbb
dec
subb
and
sub
flds
push
push
sti
in
negl
pop
adc
mov
sub
in
lcall
cmp
cmp
ret
sbb
cmp
add
xchg
fdivrl
xchg
dec
xor
fwait
cli
or
iret
les
or
inc
cli
dec
ja
sbb
lods
or
jae
sub
ds
nop
and
dec
in
sahf
inc
fisttps
xchg
notb
enter
dec
sub
push
popf
fstpt
dec
sbbl
repnz
inc
mov
mov
mov
lret
jns
pop
int3
mov
lret
xor
jno
add
lahf
mov
jp
leave
fistl
mov
fxch
dec
lret
push
orb
dec
pop
clc
fucomp
mov
push
xchg
lret
outsl
in
push
add
dec
mov
and
xchg
arpl
cmpsl
fistpll
mov
xchg
leave
pop
insl
rorl
jg
cmp
addr16
jnp
or
aad
jo
sub
fwait
xor
sbb
pop
aad
pushf
sbb
loopne
movsb
sbb
xchg
dec
cltd
and
or
dec
outsb
inc
mov
movsl
ljmp
sahf
sub
orb
xchg
rcrb
push
mov
cmp
cmpsl
imul
add
mov
aas
lock
adc
inc
aad
cmp
jbe
mov
aaa
out
jns
pop
pop
or
sarl
cmpb
in
mov
sbb
lret
add
sub
adc
and
xchg
push
fstpt
imul
jae
movsl
mov
mov
jg
data16
aam
addr16
es
mov
arpl
push
push
mov
ss
lds
fiaddl
dec
leave
ds
dec
mov
int3
in
jle
lock
mov
out
or
sbbl
cmpsb
jg
xchg
les
repz
in
add
lret
aas
lods
gs
lcall
pop
scas
notl
xor
sub
sbb
xchg
mov
cmp
sub
adc
ficompl
or
sub
cmp
cwtl
or
jmp
scas
add
mov
stc
mov
mull
mov
sbb
in
push
jo
aaa
lods
or
adc
cmp
pusha
icebp
cmp
test
mov
mov
cmp
mov
sbb
pusha
mov
pop
mov
xchg
pop
sbb
clc
push
jge
scas
cmc
int
push
push
in
mov
jae
lret
xchg
push
xlat
inc
out
cmp
push
pop
lds
add
hlt
push
dec
rorb
stos
fldpi
fisttpl
dec
push
jle
add
dec
xor
xor
repz
cli
xlat
pop
pop
mov
testl
xchg
and
fistpll
and
xchg
loope
xor
jb
addr16
sub
ljmp
push
filds
pop
push
jmp
add
std
sub
push
fwait
nop
cmc
adc
mov
mov
add
mov
gs
lods
adc
jbe
add
ss
es
dec
sub
mov
sbb
cmp
mov
sbb
mov
lcall
dec
mov
xchg
sbbb
push
lret
imul
aas
lock
adc
pop
xor
xor
pop
jns
mulb
jp
mov
sahf
inc
pushf
iret
mov
jmp
aam
mov
cwtl
jmp
push
fidivs
stc
inc
xchg
nop
sbb
add
andl
and
xchg
pushf
dec
outsl
dec
pop
cmp
cmp
cmc
hlt
dec
cmc
test
push
inc
ss
rorb
jge
mov
nop
gs
cmp
mov
dec
xchg
xor
ficoml
sbb
sbb
add
sbb
mov
fidivl
call
sbb
mov
mov
fimull
lods
xor
rolb
int
and
mov
jle
outsb
fildll
or
test
xchg
and
xor
or
gs
lea
addr16
jns
mov
mov
cmp
lcall
mov
push
sub
lcall
dec
add
mov
sub
popf
getsec
push
insb
lret
lcall
cmp
fs
arpl
bound
mov
call
es
xchg
sub
xor
cmp
int
mov
int
iret
inc
mov
add
call
insl
adc
xchg
jno
lods
loope
sbbl
pop
stc
push
xor
mov
in
push
or
fdiv
push
push
imull
cmpsb
loope
fldl
add
add
iret
movsb
aad
mov
add
cli
mov
into
dec
aaa
cmp
bnd
pop
cmp
cld
mov
pop
mov
sbb
in
or
iret
stos
xor
xchg
xchg
mov
repnz
test
sbb
mov
jmp
ss
inc
dec
cmp
repnz
sarb
cs
dec
into
out
cltd
stc
arpl
xchg
rcrb
cmp
les
and
pop
outsb
test
inc
xlat
sahf
cltd
js
aad
sbb
mov
fsubrp
mov
push
sub
ficoml
add
nop
or
dec
pop
sbb
jae
mov
int3
add
push
dec
sub
push
icebp
jecxz
stos
xor
push
fists
insb
sub
mov
in
mov
jge
fsubrs
pop
jecxz
int3
inc
repz
jle
fsubrs
add
test
jne
nop
fmuls
push
test
jp
jo
mov
arpl
in
mov
sahf
shll
push
iret
xchg
or
inc
popf
das
rol
test
enter
mov
popf
icebp
rcrl
addr16
pop
mulb
fimuls
dec
sub
xchg
insl
or
call
sahf
or
popf
mov
xchg
push
ds
movsl
or
mov
push
fnstenv
and
sub
call
jmp
jb
cwtl
mov
jnp
data16
fisttpl
mov
push
add
mov
mov
sahf
sub
dec
lods
inc
push
inc
stos
add
inc
leave
inc
ds
pop
fists
arpl
rolb
inc
mov
push
push
jge
sub
adc
out
dec
sbb
stos
dec
push
mov
inc
xor
test
and
into
mov
int
push
xchg
popf
add
cld
cmp
test
into
test
pop
jne
andps
adc
dec
cmp
jg
sbb
or
inc
sbb
imul
jnp
sbb
dec
dec
xor
jge
push
das
xchg
jns
lret
dec
dec
scas
adc
xchg
mov
decb
adc
lret
movsl
inc
pop
push
mov
xchg
sbb
pop
or
cmp
imul
add
sbb
sar
xor
cmp
aad
in
inc
cmp
ljmp
dec
inc
ja
xchg
rorl
mov
insb
jg
cli
cmp
pop
sbb
insl
dec
pop
and
dec
adc
aam
xor
std
xchg
mov
or
fcmovnbe
cmpsl
imul
icebp
pop
jnp
inc
pop
nop
stc
xchg
xor
sub
stos
ds
and
xchg
and
xor
pop
or
hlt
aam
adc
pop
js
insb
push
jmp
adcl
xchg
mov
push
in
cmp
adc
pop
mov
dec
iret
xor
cltd
andb
repz
dec
jae
mov
add
in
fimull
inc
inc
dec
bound
ja
divl
xor
iret
lcall
sub
out
cmp
popl
adc
leave
and
xchg
sahf
in
popf
ja
jg
fpatan
insl
pop
mov
dec
xchg
in
into
pop
jmp
or
pop
jae
adc
cmpsl
mov
mov
adc
lcall
jae
cmp
mov
xchg
notl
cmpsl
es
xchg
xor
neg
or
stos
cmc
or
lcall
mov
pop
sbb
cmp
in
in
jnp
jle
xor
xchg
stc
mov
pop
in
insb
insl
pop
hlt
xor
mov
jbe
pop
icebp
daa
ljmp
hlt
pop
jmp
add
clc
loop
sbb
xor
mov
jecxz
cmp
inc
mov
fimull
inc
sub
fiaddl
ss
sub
cltd
cmp
mov
xor
mov
les
push
sub
sub
pop
lock
arpl
pop
jno
mov
jle
push
mov
pop
jnp
inc
inc
test
or
xchg
test
xor
mov
rol
xor
ja
mov
inc
mov
xor
mov
cmp
add
in
subl
dec
rcrb
or
mov
lcall
adc
popf
xchg
mov
aam
cli
leave
push
enter
fimull
push
es
mov
push
cmp
cld
test
or
int
int3
rclb
sub
divb
push
or
jae
cmpsl
lds
mov
cmp
push
stos
cmpsb
xchg
push
pop
or
inc
fcmovnb
xor
in
iret
push
and
lahf
fimull
mov
imul
dec
testb
aam
ret
cmp
cmp
push
pop
fucomip
mov
adc
add
push
pop
data16
pop
out
mov
push
sub
dec
aam
and
inc
adc
loop
fisttpl
add
inc
shll
adc
test
mov
pop
xchg
fisttpl
cs
filds
decb
jnp
jae
cmp
not
out
data16
pop
fwait
cld
repnz
xor
jae
fpatan
jne
hlt
test
push
out
cmp
jae
stos
out
sbb
dec
add
or
mov
jmp
es
ljmp
in
sarb
cli
lret
mov
pop
sub
imul
stos
popf
insb
jmp
jecxz
or
pop
scas
xchg
cmc
loopne
in
cs
dec
nop
xchg
mov
stos
mov
cwtl
and
lret
jb
sbb
push
add
push
sbb
inc
aam
dec
ljmp
xor
ud0
xor
testl
xchg
test
adc
and
lcall
inc
jae
fistps
lock
add
lods
les
xor
in
fwait
scas
sahf
xchg
pop
add
pop
mov
xchg
repz
mov
iret
or
outsl
scas
bnd
adc
sub
scas
pop
shll
imul
push
ret
mov
call
push
lret
jnp
mov
int3
rcrb
sti
sti
int
aas
aad
sbb
dec
xchg
movsl
mov
out
in
xorl
ficomps
call
cmc
add
cli
or
repnz
in
fidivl
lret
in
mov
sarl
leave
pop
aam
xor
adc
xchg
pop
xchg
inc
xor
inc
test
repz
getsec
lcall
jb
ljmp
cmp
mov
xchg
cltd
pop
jle,pt
jg
mov
fildll
push
fs
in
push
test
mov
dec
add
xor
or
jbe
cltd
dec
xlat
jbe
pop
sub
mov
fsubs
dec
mov
int
sub
outsb
xor
ja
xchg
outsl
sub
scas
stc
shlb
jp
movsl
lea
fdivrs
fnsave
sub
cmp
sub
outsl
lret
sar
mov
inc
xor
mov
cmp
dec
test
cld
jle
in
xorl
stc
clc
jae
and
lcall
push
cmp
pop
daa
inc
pop
rorb
add
dec
mov
mov
and
mov
cmp
inc
in
movsl
mov
movsb
xchg
ss
or
loopne
in
in
add
mov
sbb
ror
sbb
in
cmp
shll
pop
lret
inc
mov
test
xor
enter
cli
dec
push
mov
inc
push
cmp
mov
rorb
mov
sbb
push
or
pop
les
mov
js
popl
aas
mov
jnp
sbb
mov
and
out
sub
dec
push
dec
fstpl
sbb
out
repz
cmc
xor
add
dec
xor
loope
lods
cmpl
add
imul
sti
in
jl
mov
push
nop
shrl
iret
int3
mov
cmp
push
sbb
icebp
push
andb
push
and
inc
add
push
xchg
cmp
add
add
mov
fcomps
fisttpl
xor
adc
pusha
loopne
jae
das
es
insl
jnp
mov
ret
int
xor
mov
push
out
cltd
mov
or
lret
sub
dec
or
sub
inc
jecxz
sbb
mov
cs
mov
clc
push
roll
jae
add
hlt
aad
dec
cmp
xor
jb
cmp
inc
cmpsl
insb
push
icebp
enter
cmp
sbb
test
mov
jns
pop
das
jl
and
ja
incb
jge
mov
mov
aad
sub
fldl
dec
test
mov
pushf
and
mov
push
ficoml
xor
or
aad
rorb
je
fistpl
std
and
or
adcb
jecxz
decb
or
xor
sbb
popa
jg
aaa
addr16
sub
pop
ret
mov
mov
std
or
pop
cmpsb
popf
jno
insl
out
nop
lods
mov
sub
test
jl
rol
cmp
push
inc
or
sub
mov
mov
push
sarl
fwait
cmp
add
or
test
dec
std
inc
xlat
inc
cltd
rcll
mov
cmp
and
push
push
shll
lods
fsubrl
lock
inc
xlat
std
icebp
xorb
push
and
add
jb
lods
dec
cwtl
dec
fdivrs
pop
fbld
push
xor
mov
testl
pop
jno
scas
xchg
mov
arpl
cmp
fisttpl
xchg
jae
or
xor
comiss
dec
jo
inc
mov
sub
push
fmulp
cmp
and
ret
push
xchg
xor
push
ret
rcr
inc
dec
jl
sbb
mov
gs
cmp
jle
icebp
xor
xchg
pop
je
pop
pop
jl
fwait
stc
aad
or
data16
jbe
shll
cmp
addl
cmp
js
sbb
rorb
mov
dec
int
jno
and
xchg
clc
rolb
dec
scas
aad
hlt
rolb
stos
popa
pop
and
pop
pop
xor
add
movsb
insl
or
cmp
jg
sbb
push
sbb
mov
mov
and
rcr
mov
addr16
jl
add
ja
lahf
stos
in
out
bswap
add
push
fstps
aad
subl
sbb
pushf
aas
mov
and
clc
xor
pminub
stc
jns
das
add
fwait
int3
mov
movsb
sbb
andb
push
pop
jo
push
mov
or
gs
int3
lock
jno,pt
ret
sbb
call
push
mov
or
insl
fcompl
enter
and
aam
mov
cld
and
fs
es
jmp
aad
push
or
in
pushf
lods
jg
mov
fcmovnbe
aad
addb
pop
ret
cmp
jge
out
cmp
jp
aad
mov
mov
stc
cmp
mov
bound
or
in
orl
adc
sarb
add
rolb
repz
mov
ffree
dec
dec
xlat
aad
cmp
and
mov
xchg
xlat
clc
outsl
cmpsb
sbb
into
pop
mov
mov
and
es
mov
push
push
imul
mov
phsubd
icebp
mov
mov
stc
pop
sbb
jnp
pop
sub
test
jmp
retw
lock
push
or
cmp
outsb
sbb
add
jmp
xchg
jmp
xor
xrelease
inc
jae
mov
pop
lahf
push
sbb
outsl
pop
pop
rolb
sub
mov
jmp
orl
repnz
cmc
sbb
fmuls
loop
cmpb
jmp
push
xor
in
mov
and
push
pushf
lock
cmpsb
jle
je
jae
or
pop
cltd
inc
ja
stos
xor
mov
hlt
sarb
cwtl
jno
sub
dec
mov
mov
add
add
mov
fistpll
mov
cmp
xor
push
cmp
in
mov
scas
dec
adc
xchg
mov
testl
jnp
pop
or
in
mov
mul
je
jbe
pop
cmpsb
outsb
ja
arpl
sbb
sbb
or
movsl
ret
out
sbb
jo
cmp
lods
jno
clc
pop
sub
mov
cwtl
jnp
and
sbb
jp
adcl
incl
aam
lods
adc
sarb
insl
int
mov
jnp
or
mov
andl
ror
int
js
in
push
repnz
dec
jnp
xchg
jno
mov
cmc
scas
pushf
bsr
mov
pusha
inc
es
jecxz
sub
xlat
cwtl
sbb
mov
dec
test
dec
mov
mov
pop
xchg
xor
iret
xor
cwtl
ja
lock
xorl
cmp
int3
pop
cmp
push
push
stos
lea
sahf
mov
orl
inc
lods
sarl
mov
add
cmp
jae
or
mov
testb
ss
xlat
cmc
movsb
mov
mov
or
inc
pop
xchg
jmp
xchg
mov
lock
mov
cmp
ds
adc
jge
dec
adc
scas
test
xchg
bound
push
xor
je
not
fmul
std
mov
add
jns
aad
into
in
inc
mov
sahf
xorb
dec
xor
out
sub
mov
dec
dec
pushl
aam
jb
dec
in
cmp
stos
add
xor
into
incl
cmp
fabs
outsl
push
shl
and
shlb
adc
lds
ja
sub
sar
das
in
fadds
cmp
scas
inc
leave
mov
ret
jne
push
stos
xor
pop
mov
test
in
loope
jmp
jmp
cmp
fs
aam
or
cmc
jbe
dec
divb
mov
gs
dec
push
mov
data16
loop
jo
mov
mov
in
outsl
jbe
xchg
hlt
dec
out
sbb
aad
mov
lods
or
push
ret
dec
repz
insl
fwait
xchg
hlt
xor
mov
ja
cmpl
sbb
notb
aaa
cmpsl
hlt
jbe
jae
les
fmul
xor
pop
push
incb
cmpsb
adc
mov
lcall
aas
cmp
test
mov
mov
lahf
aad
loope
enter
jmp
xchg
pop
incl
sub
xchg
nop
push
add
sahf
xchg
lods
adc
and
out
aad
xorb
and
mov
rorl
add
repz
fisubrs
adc
imul
mov
sub
mov
loopne
stc
cmp
xor
cmpsb
in
js
sub
and
mov
stc
stc
xor
push
push
loopne
dec
push
pop
mov
cmp
das
add
jle
and
stos
cmp
inc
sbb
inc
in
fdivp
jp
bound
pop
stos
push
pop
out
enter
sti
mov
and
or
repz
ret
cmp
sub
or
iret
jmp
test
pushl
xor
pop
ficomps
lret
or
jmp
ss
xchg
add
push
cmp
inc
cmc
xchg
lock
cmp
inc
lret
fidivrl
inc
ss
out
ficompl
ss
sub
mov
das
lret
loope
dec
push
pushf
call
clc
sub
mov
jbe
mov
ret
push
mov
loop
xchg
mov
fwait
scas
mov
and
push
out
push
jo
cltd
dec
mov
push
mov
jp
ds
mov
arpl
push
cwtl
stos
or
stos
add
and
sub
pop
jg
jp
mov
shrl
sbb
pusha
cmp
add
pop
icebp
mov
insl
xchg
xor
mov
jp
xchg
pop
and
les
mov
and
int
or
popa
xchg
adcb
pop
cmpsb
in
sub
mov
pop
push
or
popa
out
dec
roll
repnz
jne
clc
enter
fcmovnb
add
adcb
push
cmpsb
mov
sub
push
cltd
mov
dec
push
cltd
mov
outsl
aam
cmp
sub
mov
test
es
push
push
outsl
sahf
div
fstpt
fwait
inc
js
out
push
int
aas
imul
les
and
mov
out
xchg
cld
out
push
add
sbb
aad
inc
lahf
int3
push
push
lods
push
and
out
test
test
xchg
aam
insl
and
add
sub
inc
cmp
addb
ja
cld
movsb
push
push
dec
les
mov
hlt
pop
call
in
mov
scas
push
mov
fmull
push
push
ja
imul
push
dec
test
dec
jae
sub
int
jnp
mov
pop
adc
repnz
adc
sbb
cs
cmp
inc
daa
jle
addr16
repnz
int
dec
loopne
pushf
mov
and
mov
mov
sub
in
shrl
shrl
push
push
je,pt
test
in
scas
repz
js
add
mov
jno
push
leave
push
enter
or
stc
xchg
xorl
ds
or
mov
fists
inc
stos
test
fwait
and
push
xchg
cmpsl
sarb
inc
fscale
inc
ret
popf
and
dec
jb
cmp
das
neg
popf
xor
mov
jecxz
cld
fsubs
repz
fisubrl
dec
stos
in
mov
cmp
push
fisubrs
cltd
xchg
popf
ret
mov
fwait
add
loopne
call
sub
shl
flds
add
mov
lret
shll
inc
mov
daa
loop
inc
mov
mov
iret
enter
jae
mov
sub
mov
mov
pushf
jecxz
int
ss
sbb
cmp
jg
lods
sbb
sbb
jp
fisubrl
loopne
daa
ss
clc
popf
mov
in
outsb
sti
mov
outsl
push
push
std
iret
enter
loope
sbb
rcr
ror
and
push
push
adc
cmp
call
jne
sub
xchg
or
cmc
cmp
fdiv
mov
dec
sub
rcl
sub
add
and
adc
pop
aam
pop
cmp
cmp
adc
inc
jg
daa
xchg
pop
cmp
push
xchg
pop
cmp
mov
inc
sub
mov
mov
ljmp
add
adc
lods
and
lret
test
popa
lods
push
mov
inc
sbb
gs
adc
sbb
sbb
lret
iret
hlt
mov
sub
pop
pop
dec
dec
das
notl
fisttps
pop
les
xor
fisubrl
pop
xor
xor
pop
mov
push
xor
cmpsl
pusha
sbb
icebp
idiv
jp
outsl
loop
push
sub
adc
push
and
or
outsl
add
imul
pop
push
jb
nop
cltd
jecxz
enter
add
aas
mov
enter
in
out
jne
iret
loopne
xchg
dec
pop
add
pop
js
pop
mov
and
icebp
xor
cmp
inc
lret
fdiv
push
xchg
imul
inc
mov
lock
shlb
popl
xchg
lock
lcall
in
jae
fdivl
stos
nop
inc
sbb
dec
fcmovu
push
aad
and
testl
fcomps
enter
cmp
rorl
cmpsb
push
push
enter
aad
jmp
push
stos
ss
xlat
pop
jb
scas
sub
dec
lock
or
jae
pop
xor
adc
mov
push
dec
call
push
jmp
jecxz
clc
data16
add
or
push
lods
cli
repnz
inc
int
or
jo
inc
in
mov
ror
loopne
jae
or
scas
out
cmpsb
inc
clc
dec
xchg
mov
push
mov
dec
dec
mov
push
int3
insb
lods
enter
and
aas
fcomip
pushf
int3
sub
aad
fisttpl
add
jle
cmp
sbb
sbb
add
fwait
xor
fsubrp
std
out
pop
mov
test
sub
mov
xor
jmp
addr16
pop
sub
push
pop
or
mov
fisttps
jmp
leave
push
push
cwtl
dec
pushf
lock
mov
fistpl
lret
sbb
sub
pop
inc
lcall
sub
fstpt
jno
mov
mov
lcall
cmp
sub
int
in
add
orb
pop
rclb
cmp
and
dec
test
mov
fwait
hlt
or
dec
push
pop
andb
mov
jo
inc
add
lcall
pop
cltd
cltd
adc
sub
testb
hlt
fs
sbb
js
insl
repz
faddl
dec
lret
adc
lahf
imull
ss
jmp
dec
xchg
in
rcr
dec
jae
dec
je
jae
lds
jno
jp
push
ret
jbe
mov
cltd
aad
dec
sub
mov
xor
push
adc
xor
push
outsl
inc
cmp
adc
idivl
int
add
adc
xor
pushf
dec
jecxz
mov
cmp
cltd
fists
cmc
sbb
push
push
bound
add
mov
icebp
adc
xor
pushf
into
sti
dec
enter
add
push
jnp
inc
cmp
or
or
or
mov
mov
addb
mov
cmpsb
or
cmc
xchg
mov
xchg
lret
mov
xor
xor
jno
inc
cli
cmp
aaa
out
pop
mov
pop
stc
lock
pop
loopne
adc
fldenv
push
aad
inc
pop
xchg
dec
iret
in
cmp
mov
clc
xor
lahf
xchg
pop
sti
fstps
add
fcomp
int
inc
push
dec
cmc
repnz
mov
jne
arpl
dec
int3
adc
ja
pop
test
cwtl
cmp
pop
mov
insl
jae
in
xchg
stc
fmulp
ret
sar
lds
iret
xor
mov
xchg
add
jp
in
sahf
or
inc
jns
mov
aad
fcmovnbe
cmp
cmp
call
pop
fdivs
push
dec
pop
popa
push
pop
jbe
inc
repnz
jae
jmp
push
loopne
xchg
sarl
or
inc
filds
inc
or
jnp
test
xlat
pop
mov
hlt
xor
sbb
fimull
popf
fldt
scas
jge
pop
cmpb
sti
rcr
idiv
stc
xchg
jae
and
or
xor
lods
inc
nop
cmp
pop
add
xchg
int
lock
and
test
iret
rcr
fsts
add
cmp
fidivrl
add
add
fwait
jae
or
cmp
scas
push
pop
outsb
fcoms
ja
jnp
imul
fbld
aad
xchg
sbb
push
iret
or
adc
stos
xor
popf
and
testb
jnp
inc
fmuls
aam
mov
push
rcrl
addr16
mov
into
lock
fsub
mov
clc
stc
into
or
push
xlat
clc
jmp
idivl
xorb
out
cmpsb
jmp
cmpsl
lahf
divl
sub
or
pop
inc
hlt
jmp
or
stc
in
xchg
lret
enter
movl
push
pop
jg
or
inc
ret
xchg
clc
fdivrs
sub
sbb
dec
push
or
or
add
mov
pop
push
adc
mov
fstpt
test
xor
xlat
push
repz
or
das
or
sbb
push
rcrl
insl
mov
test
fildll
cs
in
xor
cs
out
sbb
enter
push
imul
pop
pop
push
mov
dec
sbbb
xchg
add
fbstp
lock
push
adc
sub
leave
sbb
repz
pop
and
sub
loopne
xchg
adc
popa
jae
out
jbe
icebp
call
sub
jne
dec
sbb
mov
fucomi
je
ror
jbe
mov
cmp
in
cmp
lcall
ror
stos
out
sar
push
data16
inc
stc
mov
loopne
aaa
notb
cmpsb
nop
sbb
sub
jae
ja
cltd
popa
jne
cmp
jae
mov
xor
ds
push
jne
mov
or
es
jnp
dec
ljmp
or
lea
mov
iret
aad
jne
push
lds
jns
push
bound
cmp
outsl
scas
xchg
mov
add
adc
cmc
ficomps
pop
jnp
cmpsb
fbstp
adc
pop
jo
pop
jmp
std
sub
jns
jb
stc
or
pop
dec
and
shll
mov
stc
inc
aad
cmp
xor
sti
push
push
outsl
loop
pop
sar
sub
jnp
pop
cmc
cmpsb
addr16
enter
inc
lods
ret
js
mov
insl
jnp
insl
xlat
int
inc
and
cmp
leave
sub
xor
sbb
lret
repnz
bound
xchg
mov
pop
lods
mov
out
test
xchg
and
rclb
sub
hlt
dec
mov
lods
mov
fwait
jnp
fstpt
outsb
js
adc
mov
mov
out
inc
popa
inc
into
loopne
mulb
movsl
xor
adc
decl
movsb
fs
jl
mov
ds
mov
idivl
jp
adc
adc
insl
cld
aad
xor
mov
cmc
outsb
int3
aam
push
add
cmp
sub
adc
sbb
inc
xchg
fistl
sbb
push
pop
outsb
negb
aaa
mov
ret
in
scas
movsb
iret
call
mov
jnp
mov
or
jp
pop
mov
adc
js
xchg
lret
dec
xor
imul
mov
in
sbb
sti
inc
stos
add
lret
xchg
pop
idivl
push
mov
mov
add
call
pop
les
xchg
in
mov
adc
lods
jecxz
xchg
sahf
add
sbb
ffree
adc
push
adc
into
pop
loopne
add
in
fs
xor
mov
iret
aaa
sbb
test
or
pop
sbb
shrb
fadds
jo
enter
pop
test
imul
repnz
les
aad
or
addb
mov
pop
mov
push
pop
icebp
sub
cmc
adc
mov
adc
fidivl
mov
stc
jp
mov
adc
icebp
outsl
pop
cltd
call
xchg
mov
adc
loopne
pop
aaa
sarl
adc
popf
push
push
mov
out
lods
sub
aad
incl
pop
pushf
fldcw
mov
repnz
sbb
xlat
repnz
mov
cld
cmpsb
cmp
clc
add
outsb
dec
mov
bound
sbb
fmuls
arpl
mov
push
ficompl
pop
xchg
or
or
stc
or
pusha
push
repnz
repz
fwait
imulb
or
mov
notb
cmp
stos
loop
pop
jl
mov
push
mov
sbb
jg
dec
mov
in
lahf
xor
stos
jmp
mov
xor
daa
mov
test
mov
and
lds
hlt
out
movsb
hlt
xor
mov
mov
jbe
mov
sub
inc
outsl
add
mov
pop
fucom
cltd
mov
mov
lea
in
into
insb
sahf
jg
mov
int
outsl
add
div
jo
adc
sbb
out
mov
iret
pop
push
imul
jl
xchg
xchg
jno
pop
clc
sub
pop
cwtl
js
adc
cmpsl
mov
cmpsb
add
lcall
aaa
iret
sbb
lret
lock
in
xor
xacquire
inc
imul
fucompp
loopne
mov
jnp
mov
popa
xor
jmp
push
pop
imul
jnp
pop
sbb
cmp
icebp
mov
sub
sbbl
pop
jnp
cmp
mov
pop
pop
fisttpl
int
in
xchg
dec
outsl
pop
fisttpll
adc
add
dec
mov
imulb
jmp
clc
or
xor
xchg
fdivrs
insl
cmp
test
pop
xchg
and
sbb
dec
mov
sub
cmp
mov
sbb
push
loopne
sub
and
jge
mov
fcompl
inc
mov
das
inc
in
mov
dec
push
jns
mov
xlat
pop
dec
pop
outsl
inc
sbb
add
mov
imul
fsubrl
inc
and
addr16
lret
mov
xchg
adc
xor
lcall
aam
xchg
aaa
popf
scas
lahf
dec
add
ds
lcall
cld
mov
nop
jg
and
pop
outsl
out
aad
dec
je
inc
cmp
mov
cmp
sbb
jae
mov
and
add
cmp
push
loopne
xchg
add
inc
lcall
dec
fbstp
sub
fcmovnb
jg
in
jmp
aad
xlat
xor
cmp
rolb
xchg
or
shrl
inc
jnp
mov
mov
test
cmp
rcrl
mov
rorl
inc
les
jbe
and
xor
push
pop
int
ret
jp
inc
fadds
sbb
out
clc
cmp
mov
sub
pop
xchg
mov
inc
xor
mov
shll
sbb
idivb
or
bound
cmp
or
movsl
jb
inc
jnp
push
leave
cmp
sbb
inc
faddp
orb
push
cmp
adc
cmp
das
or
dec
iret
push
icebp
dec
xchg
adc
cmp
shll
dec
or
xchg
gs
decb
jp
idivl
jb
add
dec
bound
sub
stc
pop
fldcw
mov
ficompl
and
mov
jge
cltd
cs
sbb
fstps
dec
roll
jno
cld
insl
imul
mov
push
xor
ljmp
scas
sbb
test
mov
mov
or
ljmp
or
xchg
dec
jmp
mov
pop
scas
popa
subl
add
xchg
int3
or
iret
cmp
jle
js
sub
addr16
lret
in
adc
or
ja
stos
pop
ss
je
or
int
push
cmp
sbb
hlt
leave
aas
icebp
dec
sub
push
jb
lea
ja
and
out
in
fists
xor
call
subb
add
cmp
shll
test
dec
dec
add
and
in
jbe
in
fucomi
mov
jmp
xchg
add
les
stos
lret
into
pop
in
clc
scas
mov
fldcw
add
sbb
cmp
cmp
lods
movsl
cmp
cmc
mov
fadds
or
ror
push
call
stc
rcrb
cwtl
cmp
push
mov
and
clc
mov
mov
mov
fs
int3
fsubs
xchg
hlt
leave
sarl
push
mov
inc
scas
js
cli
mov
pop
dec
in
jmp
push
decb
xor
fisubrs
icebp
jge
call
rcl
aad
push
rorl
mov
xor
mov
mov
imul
mov
out
cmp
fwait
and
mov
shlb
inc
stos
cltd
mov
mov
repz
xchg
mov
or
cmp
inc
fst
push
add
add
inc
orb
dec
and
mov
pop
pop
cmc
addr16
jbe
pusha
push
insl
jecxz
ret
sbb
rorb
jbe
mov
push
sbb
mov
mov
push
xlat
dec
adc
sar
sub
mov
mulb
ljmp
call
lock
out
lcall
je
pushf
jbe
test
add
inc
insb
test
call
sub
out
fidivrl
sub
repz
cmp
aam
inc
mov
push
hlt
xor
xor
dec
mov
scas
inc
xchg
int
sub
cld
or
cmp
notl
loopne
lret
lds
andl
dec
push
leave
out
jp
fwait
mov
add
or
jmp
pop
shr
inc
shl
mov
adc
dec
std
cli
fistps
mov
dec
in
test
cmp
inc
push
push
inc
xchg
inc
data16
inc
lds
push
lea
cmpsw
xchg
ja
sarl
cmp
mov
pop
jg
out
scas
rolb
dec
add
sub
inc
sbb
inc
pop
add
fldenv
mov
stos
sbb
dec
bound
mov
stos
push
dec
clc
clc
int
iret
sub
lock
or
mov
mov
aas
push
sbb
or
fidivs
push
call
ljmp
insb
fbld
shrb
or
xor
dec
ficompl
mov
jno
or
stos
icebp
jmp
and
xor
stc
cltd
pop
pop
push
inc
fxch
push
sub
andb
push
fists
sbb
loopne
lock
ret
ds
int3
xchg
add
xor
popf
or
aam
aas
repz
sbb
mov
sub
jle
sbb
or
mov
adc
sarb
orl
roll
cmpsl
mov
clc
sbb
sbb
or
sub
sbb
mov
les
xor
cmp
shl
xor
aaa
call
pop
mov
cmp
gs
sub
into
xchg
mov
out
push
xchg
sub
add
cmp
sub
test
dec
cmp
cmp
lret
dec
cmp
loopne
rcr
adc
xor
lcall
rcll
fmul
cmpsb
jae
adc
imul
mov
std
mov
cmp
call
cmp
aad
push
mov
in
and
jae
or
ret
popa
testb
fmulp
mov
mov
cmp
or
lret
nop
jl
cmp
mov
jnp
mov
and
mov
out
in
sbb
scas
loop
cmp
pop
mov
arpl
aad
mov
jge
mov
dec
sbb
inc
fdiv
cmp
sarl
cs
aas
xor
mov
daa
cmp
push
std
push
mov
mov
mov
into
ds
and
cmc
test
int
cld
xor
stos
nop
cmc
adc
mov
aad
add
repnz
in
mov
mov
add
jecxz
gs
stc
adc
int
imul
sbb
mov
mov
pushf
xchg
xchg
mov
out
jle
cmp
jmp
mov
fiaddl
aaa
cld
ja
fs
push
cld
ss
sbb
in
in
aam
jne
cli
mov
sbb
add
or
ret
jnp
cmp
cmp
roll
push
out
or
ss
ds
js
lret
mov
aad
js
das
xor
hlt
in
cli
lret
pop
mov
xlat
push
jp
mov
dec
pop
push
lods
popf
push
std
add
xchg
in
jns
sub
mov
dec
adc
xlat
push
popa
cmpsl
aam
mov
nop
pop
xor
scas
adc
pop
jnp
jg
divl
outsl
mov
mov
mov
or
pop
gs
arpl
imul
cmp
pop
cmp
cmpsl
dec
decl
int3
sub
and
cmp
fnstcw
fxch
adc
push
or
mov
add
dec
inc
in
dec
xor
jmp
jnp
inc
mov
in
out
mov
fwait
cmp
pop
imul
repz
les
inc
je
jns
inc
push
mov
jg
sahf
stc
lahf
lahf
cmpsb
enter
fldl
xor
xchg
xchg
add
stos
add
mov
insb
push
cltd
fdivrs
mov
push
fnsave
and
mov
xor
dec
pop
xlat
mov
add
aam
jo
push
dec
or
add
adcl
mov
or
repnz
jp
imul
enter
cmpb
ja
mov
out
sahf
scas
inc
and
fidivs
outsl
js
iret
add
out
mov
sbb
adc
xchg
mov
xor
dec
fsubl
xor
pop
mov
mov
ljmp
leave
push
inc
sti
pushf
inc
or
addl
inc
popl
mov
mov
dec
jmp
or
mov
sbb
mov
fld
scas
or
test
aam
roll
push
sbb
call
enter
push
movsl
cmp
or
cmpsl
push
subb
mov
aas
jnp
adc
test
fldt
jnp
lods
fisttpl
subb
call
lcall
jg
dec
lock
lods
push
fbld
in
cmp
loopne
sub
mov
popf
push
mov
add
cmp
dec
cmc
adc
and
dec
repnz
test
jno
movsb
ljmp
cltd
add
cwtl
movsb
cmp
in
repnz
not
fdivp
add
push
dec
sub
fwait
sub
push
outsl
lcall
adc
mov
fsubrl
cwtl
sbb
pop
lret
int
mov
fcmovu
bnd
push
movsb
xchg
xlat
xorl
fcom
sub
xorb
jge
and
and
fs
or
je
cmp
jecxz
add
insl
or
cltd
lret
mov
inc
push
xchg
jmp
xor
outsl
orb
fidivs
jbe
inc
fcmovnbe
addr16
jg
jg
iret
ret
xchg
jmp
mov
inc
pop
cmovs
pop
ret
in
dec
mov
cmp
sbb
clc
jnp
adc
cmp
pop
lcall
mov
xor
mov
push
jecxz
dec
mov
dec
rol
add
mov
mov
sub
adc
rcll
cld
sbb
fstpt
or
out
cwtl
pop
mov
push
daa
pop
adc
pop
jmp
xor
jge
pop
xlat
scas
arpl
push
inc
xchg
movsl
and
pusha
jbe
or
or
lea
push
out
cmp
xchg
push
mov
lcall
sub
adc
cltd
imull
push
or
mov
add
insb
rcrl
pop
int3
shrb
xchg
jle
push
cmp
cmp
fucom
les
les
dec
add
stos
out
push
ffreep
fwait
in
fisttpl
enter
xor
rorb
xor
pop
das
mulb
adc
inc
xor
icebp
hlt
pop
mov
insl
dec
fimull
out
notb
pop
aaa
jne
or
or
ja
mull
cmpsb
mov
adc
icebp
xchg
adc
push
stos
iret
inc
mov
sbb
scas
add
and
ja
cmp
xor
popa
add
repnz
fistl
stos
aam
inc
xchg
and
test
sbb
js
mov
jae
scas
cs
in
cmp
sub
push
pop
xor
aaa
movl
out
imul
xchg
imul
xchg
jmp
cmp
lods
inc
aad
xor
xchg
rcrl
pop
mov
cmp
inc
test
sbb
adc
out
mov
mov
cmp
mov
mov
pop
mov
loopne
and
fincstp
hlt
cmp
xor
push
rolb
sbb
push
lods
dec
aaa
aad
stos
call
dec
adc
pop
pop
mov
mov
mov
mov
push
jnp
enter
cmp
jge
lret
jae
test
xchg
inc
or
movsl
add
pop
pop
into
or
sub
cmpsb
mov
pusha
push
inc
arpl
pop
mov
inc
mov
lahf
repz
dec
push
xchg
xchg
or
xchg
and
clc
pop
lock
cmp
pop
cmc
out
mov
int
xchg
mov
lret
adc
daa
or
mov
sbb
loopne
scas
scas
xor
sub
sub
jge
xor
mov
xor
mov
out
jecxz
lcall
sub
pop
push
push
out
out
sub
inc
sbb
das
pop
mov
imul
rcll
addb
push
push
ljmp
loopne
cltd
sarl
les
pop
in
in
pop
xlat
clc
enter
push
iret
outsb
stos
inc
clc
xchg
and
enter
jne,pt
push
icebp
mov
loop
jmp
cmc
data16
sbbl
mov
mov
clc
cmp
dec
or
ja
shufps
push
addr16
adc
jg
and
mov
jl
shrl
icebp
sub
push
push
sahf
movsb
xor
dec
neg
xchg
addr16
xchg
or
loop
in
icebp
push
mov
dec
xchg
fldenv
fisubrl
incl
xchg
sbb
sub
imul
ljmp
xchg
ret
xorl
cmp
inc
inc
ret
std
mov
imul
mulb
cmp
jg
xchg
imul
adc
inc
xor
push
inc
add
aad
movsb
inc
cmp
fisubrl
pop
or
addb
aam
sub
repz
cltd
jns
mov
daa
inc
mov
repz
repz
in
sbb
fmuls
cmpsl
sbb
iret
sub
imulb
fnstenv
popa
xchg
repz
clc
test
cmp
mov
cmp
std
xchg
cmpsb
cli
sbb
sub
push
sub
in
subb
xchg
mov
xchg
xor
push
fucom
addr16
aam
and
and
xchg
push
insl
fistpll
inc
sub
pop
mov
nop
es
loopne
aad
ret
in
mov
pop
jnp
in
pop
inc
cmpsl
inc
inc
hlt
jg
and
inc
push
sbb
or
ljmp
mov
aas
dec
xor
lret
movsb
out
outsl
popf
imul
insb
jmp
mov
imul
sbb
in
push
in
xor
mov
repz
repz
sahf
loopne
push
popa
hlt
pushf
xchg
out
adc
dec
ret
hlt
mov
jo
je
fdivrp
jl
dec
adc
in
loopne
and
fadd
data16
stos
je
ret
repz
jge
das
insb
clc
in
cmc
fistl
fcmovnbe
in
iret
sub
lret
adc
and
add
popw
insl
int3
stos
pop
adc
fadds
mov
nop
leave
fwait
jle
xlat
inc
cmpsb
les
mov
cli
dec
push
xor
in
fdiv
outsb
scas
data16
mov
out
lea
cmc
rolb
and
fs
fstl
pop
mov
jbe
jp
in
mov
rolb
add
cwtl
ds
add
mov
test
cwtl
mov
xor
sbb
cmc
add
mov
test
out
mov
scas
and
lock
arpl
mov
or
cmpsb
adc
mov
in
cmp
sub
aaa
push
cmpsb
sbb
add
fmulp
clc
imul
cld
lds
outsl
aam
sbb
fcmovnu
sbb
gs
repz
or
jbe
push
or
xchg
mov
in
push
add
out
inc
mov
int3
hlt
sub
mov
ret
xor
and
mov
xchg
aad
test
push
adc
and
cs
js
push
push
mov
add
aas
pop
ja
add
pop
sub
scas
push
or
les
loope
pop
int3
fs
cld
xchg
or
lahf
push
dec
pop
ja
es
dec
and
or
mov
pop
jmp
dec
in
add
pushf
lahf
in
add
mov
push
fisttpl
pop
pop
aad
cwtl
fwait
lret
dec
in
stc
xchg
ret
xlat
push
and
lret
ja
sbb
ljmp
enter
xchg
test
insb
stos
xchg
lret
cltd
into
inc
ror
popa
int
mov
pop
push
add
gs
nop
inc
add
ret
test
shlb
ret
cmp
and
cmp
lods
adc
insl
and
loope
dec
outsl
insl
dec
out
fnstenv
pusha
cmp
rcll
mov
push
cmp
jae
mov
stos
mov
out
out
or
enter
push
je
adc
pop
std
jmp
cwtl
int
pop
mov
adc
arpl
sbb
mov
icebp
pop
sub
ret
cmp
lahf
push
inc
push
and
insb
in
aad
js
cmp
adc
mov
and
lods
jmp
xchg
push
jp
movsl
xorl
repz
ss
int
in
dec
sub
push
xchg
sbb
mov
sub
repz
xor
xchg
xor
int
pop
rcll
cmp
rcl
ret
js
or
orl
inc
shl
fisttpl
adc
in
mov
lods
and
sbb
imul
jae
mov
in
push
test
stc
in
insb
cmpsb
out
pop
fistpl
dec
scas
aad
cmp
clc
ja
int3
pop
movsb
xchg
jns
rolb
js
sahf
lret
fnstenv
fbstp
xor
add
or
push
movsb
repnz
pop
adc
push
clc
adcl
cmc
lcall
sbb
test
ds
dec
nop
lcall
stos
xchg
xchg
or
jl
stos
sub
rcrb
mov
dec
leave
dec
rcrl
movsb
inc
add
pop
in
es
or
outsl
push
sub
clc
repz
movsb
mov
sub
scas
adc
xchg
mov
mov
fdivs
ljmp
adc
lret
dec
xor
leave
jns
push
jecxz
in
inc
scas
stc
idivb
ret
mov
pop
and
movsb
out
lahf
xchg
jns
and
orl
cmp
daa
mov
aam
cmp
lock
adc
outsl
inc
les
mov
in
cmp
adcl
dec
pop
fwait
mov
repz
xor
mov
scas
int
or
jecxz
popl
rorb
push
jmp
mov
out
into
outsl
dec
push
jg
mov
push
in
xor
adc
repz
cmpsl
lcall
mov
adc
add
push
add
daa
icebp
in
jne
add
cwtl
or
ds
push
enter
cli
aad
jno
xchg
lock
jae
pop
push
cmp
or
mov
aad
leave
stc
insl
cli
and
dec
mov
add
fldl
or
test
decb
cld
daa
mov
mov
in
cmpsb
cmp
xor
xchg
xchg
mov
jae
and
xlat
or
xlat
xchg
xchg
xor
dec
pusha
push
sbb
mov
fildll
jmp
icebp
mov
movsl
shll
and
xor
dec
cmp
add
stos
jb
dec
and
pop
dec
mov
addb
xor
shll
inc
cmp
aas
int
arpl
movsl
test
add
push
adc
push
das
jge
inc
sbb
inc
adc
cld
lock
inc
cmc
dec
fcmovbe
loopne
dec
adc
xlat
les
inc
divb
adc
mov
cmp
fld
xor
mov
insl
jno
nop
pop
jg
or
push
adc
dec
dec
sti
jae
pop
pop
sbb
pop
js
enter
cmp
mov
xor
mov
sbb
pop
jnp
ljmp
test
dec
sub
aad
shrb
xchg
mov
in
cmp
aaa
lcall
shrl
and
cmp
into
idiv
jge
pop
out
sbb
mov
popl
in
adc
pushl
xlat
mov
sbb
fnsetpm(287
lcall
sahf
shrb
in
outsb
sub
pop
aas
cmc
stos
cld
lcall
sbb
aad
mov
fpatan
dec
pop
int3
decb
int
aad
pop
or
lret
xorl
push
inc
inc
je
mov
leave
mov
repnz
xor
inc
pop
in
test
cmp
sub
movsb
mov
hlt
mov
mov
mov
shrb
and
test
jle
jecxz
push
stos
sbb
stc
aam
test
in
push
dec
jmp
pop
fdivs
stos
pop
lret
xchg
xor
cmp
push
xchg
ja
jb
jae
cli
adcb
or
mov
aad
pushf
cmp
sbb
fstpt
mov
mov
xor
xorl
jmp
mov
mov
xchg
mov
add
dec
testb
pushf
stos
test
ja
jnp
negb
adc
daa
mov
pop
push
loop
fwait
and
xlat
mov
mov
shlb
dec
ds
push
pop
movsb
dec
insl
xchg
mov
sahf
mov
rorl
rcll
in
loopne
jnp
pop
pop
xchg
scas
add
pop
mov
push
xchg
repz
cmp
into
fmull
xor
cmp
xor
imul
sarb
data16
outsb
sbb
enter
cmpsl
cld
mov
je
push
xor
xor
mov
xchg
pop
stc
inc
shrl
xlat
iret
sbb
adc
jae
xchg
xchg
loopne
push
inc
and
mov
jne
adc
jecxz
icebp
aas
mov
jae
pop
in
dec
fimuls
add
sbb
int
jnp
push
call
hlt
adc
inc
push
mov
mov
repz
fadd
mov
gs
cli
push
stc
mov
inc
aad
popf
push
pcmpeqd
mov
dec
mov
sbb
xor
jge
loopne
jp
sti
in
pop
inc
inc
daa
out
pop
push
push
nop
and
jno
ds
xchg
addr16
dec
mov
inc
or
cmp
jnp
dec
mov
jle
decl
xchg
rolb
jb
push
cli
and
xchg
fcompl
test
dec
or
xchg
sub
and
cwtl
adc
leave
add
imulb
mov
jne
scas
bnd
rorl
clc
cmc
loope
pop
cmp
js
sub
mov
cmp
pop
les
add
pop
test
cmp
jo
sbb
pop
push
push
add
ja
test
or
ss
cmp
clc
cmp
pop
mov
aad
dec
xchg
cwtl
je
les
xor
sub
mov
mov
dec
int
fadds
sahf
and
fwait
sbb
adc
and
add
mov
arpl
es
jbe
xor
dec
rcrl
lds
add
jp
pop
push
outsl
sub
inc
sbb
and
xlat
sub
das
or
cmp
test
add
mov
sbb
in
lock
enter
sahf
dec
push
push
jno
fmull
ljmp
cmpsl
repz
mov
add
push
sbb
loope
out
repz
and
mov
xor
xorb
mov
mov
hlt
dec
adc
cwtl
jnp
pop
fcmovbe
push
mov
or
stos
nop
negl
lods
ss
stos
and
sbb
sbb
xchg
test
cmp
faddl
sbb
mov
aas
fisubl
outsb
into
pop
fbld
xlat
jle
xchg
jb
add
pushf
in
add
out
aam
into
test
or
cltd
enter
push
in
pushf
cmp
push
adc
jno
cmp
cmp
xchg
mov
add
xor
scas
rorb
sub
xor
rcrl
enter
idivb
pop
lea
insb
dec
iret
xor
popf
in
jns
mov
mov
popf
ss
leave
clc
pop
cmp
mov
jbe
clc
push
out
out
push
test
out
loope
sbb
movsb
lcall
stos
mov
and
ljmp
ret
ret
xchg
sub
inc
std
iret
or
xor
mov
xchg
and
fists
mov
push
mov
cmp
aad
loopne
and
cmp
sub
add
jp
fisttps
mov
into
sub
cmp
dec
cld
fsubr
scas
hlt
lahf
add
int
les
mov
mov
repz
sub
pop
xor
cmp
leave
jp
jecxz
cmp
aam
fmul
xor
leave
incl
jmp
sub
int3
enter
repz
add
clc
dec
lock
pop
cmp
push
mov
enter
inc
mov
pop
testl
scas
jmp
xchg
not
les
pushf
sbb
cmp
fildl
bound
fildl
mov
adc
jnp
sarl
add
sub
in
jae
sub
jb
test
arpl
pop
popl
xchg
sti
push
les
sahf
xor
sub
orl
cwtl
inc
ja
xchg
add
clc
inc
call
insb
fdivs
push
cwtl
add
push
frstor
push
mov
pusha
mov
xor
arpl
xor
fdivrs
push
ss
shl
stc
cwtl
or
imul
add
mov
push
push
pop
mov
jae
cwtl
fildl
adc
popf
sub
fwait
mov
pop
xor
and
clc
aad
idiv
hlt
or
fs
jnp
mov
test
xchg
cmp
sub
dec
dec
or
je
cmpb
inc
in
push
lahf
repz
inc
fisubrl
xor
cmp
insl
rclb
push
sahf
sub
pop
jmp
jp
lods
mov
dec
pop
mov
fidivrs
cld
sbb
iret
incl
jae
cld
inc
and
add
jno
mov
mov
fcmovnbe
movsb
xor
hlt
dec
sbb
cli
int3
sub
fistpll
and
rcl
mov
dec
imul
lock
cmp
dec
push
insb
sbb
mov
data16
sbb
ja
xorb
adcl
inc
or
enter
cmp
xlat
test
add
cmp
pop
lds
lcall
cli
cmp
add
push
push
shrb
mov
sbb
and
das
sbbl
xchg
xor
lcall
jmp
push
pop
in
push
addb
mov
das
mov
inc
jle
ljmp
in
fsubrl
scas
push
and
aam
stos
inc
jle
out
push
hlt
xchg
push
adc
imul
add
fisubs
cmp
sbb
int
and
lock
inc
rclb
arpl
enter
mov
add
movsl
das
cmpl
adc
fs
cmp
mov
push
sarb
aad
fistpl
dec
leave
icebp
xchg
fldcw
mov
fsub
jmp
cmp
push
push
adc
rcr
sbb
ds
sbb
mov
fnstsw
pop
aas
jo
scas
push
cltd
stos
or
cmp
not
pop
add
test
call
add
mov
dec
push
push
aas
sahf
ljmp
adc
sbb
test
jns
pop
fcoms
call
xchg
in
xchg
xchg
cmp
out
or
mov
push
inc
out
int3
push
dec
and
pop
lcall
mov
sub
subl
sub
and
aas
mov
inc
cmp
push
jecxz
int3
lcall
xchg
sarb
aad
aam
xchg
mov
jge
push
or
subb
xchg
aas
aam
mov
cmc
mov
lret
mov
xor
mov
rolb
insb
jge
shl
xlat
fcomps
test
les
addb
mov
or
xor
aad
mov
sub
pop
enter
and
sub
aam
addr16
inc
inc
add
shrl
cmp
pop
pop
aad
dec
mov
push
jmp
jmp
idivl
sub
inc
sbb
outsb
push
scas
das
pop
lret
scas
pushf
orl
andb
jns
or
cmc
add
cmpsb
int
flds
movsl
aam
xor
dec
fimull
xor
fstpl
inc
mov
dec
sahf
cmpl
sbb
int
sub
icebp
pop
loop
push
lods
fdivs
in
sbb
xor
fcmovnbe
adc
sbb
rclb
dec
fiaddl
xor
lds
scas
or
loope
int
pop
xor
roll
ja
cmp
flds
xchg
addr16
popa
mov
dec
cmpsl
pop
pop
xchg
push
repz
pop
std
fistpl
jae
add
pop
push
jno
adcl
mov
arpl
sahf
add
testb
push
subl
pop
xor
mov
cmc
std
xor
xor
dec
xor
iret
addr16
mov
xchg
mov
sub
inc
sbb
or
cmpl
aad
inc
aad
mov
dec
sti
push
shll
and
imul
jmp
lcall
cld
test
jmp
xor
mov
jmp
mov
cmp
dec
lock
loope
dec
mov
push
cmp
add
sahf
mov
roll
popf
stos
repnz
shrl
popa
dec
xchg
mov
movsb
rcrl
enter
adc
sbbb
and
lcall
out
aas
pop
dec
jno
loopne
push
aas
aad
mov
inc
lods
xlat
jg
outsb
jo
js
insl
shlb
aaa
dec
cmp
mov
jno
add
cs
dec
and
shlb
mov
xchg
push
imul
mov
cmp
mov
or
movsb
out
js
int
jno
std
in
repz
dec
bound
cmp
pop
xchg
aaa
pxor
pop
lcall
mov
lret
gs
mov
inc
movsb
jae
and
insb
mov
xor
jmp
lret
xlat
in
outsb
or
xchg
aam
mov
mov
push
adc
sbb
add
add
xor
shl
push
fucom
or
imulb
push
mov
imul
or
pop
mov
xor
jae
lds
fsts
cmpsb
jle
cmc
ret
jae
and
jle
lcall
sti
inc
or
negl
es
fs
adc
cmpsl
cmpsl
test
mov
mov
imul
mov
jg
popa
inc
sbb
nop
dec
repnz
adc
add
push
fdivrl
or
or
add
sub
cmp
mov
lret
leave
inc
mov
xor
leave
rcl
ret
inc
inc
or
leave
push
int
gs
jg
mov
cmp
jp
sbb
std
mov
xor
aaa
int3
or
sbbl
mov
xor
sbb
or
adcb
xchg
loope
and
pop
out
mov
insb
enter
ljmp
jmp
inc
enter
adc
mov
mov
fsts
jecxz
pop
fcompl
mov
je
stos
dec
fs
rorb
pop
pop
or
or
push
negl
divps
int3
dec
push
sbbb
jmp
push
inc
sub
fcomp
jecxz
add
or
and
sub
pop
xchg
js
and
lahf
in
or
mov
stc
cltd
and
insl
push
mov
xor
repz
into
insl
mov
dec
push
push
jmp
repnz
mov
cmpsb
lret
testl
lods
call
jg
mov
pop
xor
repz
sub
shl
les
mov
or
in
in
mov
xlat
aad
pop
pushf
mov
adc
sub
pop
rcrl
ret
nop
je
sbb
add
jmp
jecxz
cmp
xor
jnp
fdivrl
push
fninit
push
mov
push
stc
xchg
adc
ret
push
div
stos
fdivrs
mov
and
lock
mov
mov
int3
fistps
dec
stos
mov
bound
fldenv
fsubr
lcall
dec
pop
arpl
cmp
xor
adcl
out
imul
ljmp
mov
mov
pop
divb
add
ret
loop
xor
out
jae
ljmp
loopne
lods
cmc
push
push
addb
adc
test
jecxz
divb
test
mov
in
loopne
pop
testl
xchg
jne
popa
push
cmp
movsl
mov
xlat
pop
movsl
xchg
and
jmp
arpl
cmp
xchg
add
jmp
cmp
inc
dec
xor
add
movsl
std
test
inc
cmp
repnz
imul
adc
ja
xlat
mov
adc
dec
or
inc
sbb
mov
add
push
inc
and
adcl
adc
shll
nop
mov
rcrb
fcomps
in
sbb
add
push
jo
push
jecxz
fstpt
insb
pop
outsl
cli
or
lcall
cmp
cmp
jecxz
scas
dec
ret
shrl
fs
popf
jmp
mov
xchg
in
cmpsb
pop
out
pop
int3
dec
sahf
and
push
xchg
test
inc
mov
mov
jns
push
fldt
cwtl
sub
xor
mov
and
insl
or
pushf
ret
xchg
adc
inc
aad
ja
sub
hlt
int
lret
in
mov
adc
mov
or
lcall
mov
jbe
out
sub
cmp
scas
xor
dec
inc
in
mov
movsl
pop
pop
sub
adc
movsl
sbb
sub
cmpsl
dec
mov
shll
int
adc
cltd
shl
mov
dec
xor
lret
dec
daa
int
mov
movsb
inc
mov
xbegin
and
stc
addr16
mov
fldl
divl
jnp
adc
js
fisttps
cmp
mov
adc
das
push
xor
cwtl
xchg
mov
stos
cmp
dec
xchg
ds
leave
adc
jmp
push
mov
jnp
mov
nop
call
movsb
shl
ss
inc
inc
pop
sbb
jmp
inc
sbb
in
lret
ret
iret
shll
and
das
pop
ljmp
fnstcw
lods
dec
pop
loopne
or
shll
hlt
enter
mov
sub
movsb
mov
fmuls
insb
xor
enter
adc
std
es
mov
mov
sahf
mov
push
add
int
mov
sti
adc
loope
push
lock
and
fcmove
adc
xlat
adc
add
iret
lock
insl
arpl
and
lcall
pop
push
jmp
inc
dec
xor
mov
hlt
pusha
add
inc
loopne
xchg
push
and
in
cmp
lret
aaa
das
inc
push
cld
stos
jb
xor
add
push
test
cld
call
fsubr
cmc
mov
cmpsl
sub
push
fisttpl
pop
mov
xor
mov
inc
bound
loopne
sub
dec
or
les
test
mov
hlt
mov
push
and
and
mov
inc
lret
push
lahf
fnstenv
hlt
sub
push
cmp
out
jnp
dec
bound
mov
outsb
dec
imul
int
inc
sub
in
sbb
xor
sbb
mov
insl
jb
adc
dec
in
jne
and
enter
adc
cmp
in
mov
out
jmp
rcll
xchg
dec
jae
and
dec
pop
sbb
jns
int
sub
je
or
lock
sub
xchg
aam
sbb
mov
out
dec
in
pop
xorl
push
pop
mov
hlt
pop
sbb
pop
in
fmuls
or
jle
push
out
loope
lahf
mov
or
shll
dec
mov
mov
orb
sbb
jle
cmpsb
mov
pop
dec
test
adc
lret
in
sbb
jl
cltd
xchg
cli
sub
or
dec
shll
push
negb
cmp
adc
push
test
add
dec
push
pop
sbb
xchg
dec
cmp
sbb
imul
jo
out
sub
iret
subl
fldl
ret
cwtl
or
pop
ja
push
js
and
pop
push
xlat
fs
in
sub
out
pop
ds
mov
lret
mov
pop
cmc
clc
xchg
push
push
push
add
and
and
or
adc
xlat
sub
test
repnz
add
leave
inc
fisttps
cmc
cmp
fdivl
in
sub
adc
ret
sbb
je
or
add
lcall
cltd
fisubrl
movsb
jae
clc
icebp
test
add
jg
mov
cmp
imul
pop
push
test
int
dec
das
testl
mov
iret
jns
in
adc
push
and
out
jnp
fldl
outsb
xchg
push
pop
inc
in
bound
iret
xor
or
jmp
sahf
add
sub
push
jmp
dec
xchg
lret
and
push
push
pop
cmpsl
dec
xchg
cli
mov
cmpsb
or
and
and
aam
sub
pusha
fildl
inc
in
cli
and
cmpsb
adc
mov
and
pop
xchg
xchg
pop
xor
out
add
sub
pop
jae
repz
int3
in
iret
and
aam
push
adcb
jmp
es
jnp
test
jg
loopne
das
mov
cmpsb
mov
mov
cmpsb
add
mov
inc
not
add
fcoml
xchg
in
decl
sahf
iret
jl
mov
rcrl
mov
and
dec
mov
cmp
cltd
push
xor
dec
imul
filds
stos
loopne
mov
pand
test
add
stos
ljmp
jnp
jmp
mov
mov
or
lea
xlat
lods
or
push
aaa
outsb
inc
add
dec
jbe
insl
aad
push
xchg
outsl
mov
xor
clc
cmp
mov
and
cmp
and
in
test
jnp
stos
mov
inc
jo
js
jnp
jle
add
push
test
dec
stos
sub
push
repnz
dec
fnsave
leave
or
dec
fwait
xor
jae
movsl
sub
lret
cltd
out
mov
inc
repz
lret
iret
push
cli
sbbl
add
mov
aaa
add
jecxz,pt
test
lcall
fldcw
sub
mov
in
scas
or
mov
mov
fmuls
stc
cmp
or
addl
shl
ds
mov
sbb
adc
or
pop
clc
mov
clc
pop
sbb
push
sti
jbe
push
fists
xor
inc
cltd
xor
adc
lds
repnz
bound
or
xor
push
aad
inc
stc
nop
int
dec
inc
es
fiaddl
sahf
or
and
pop
xor
dec
test
sbb
call
sbb
xor
adc
ret
pop
lahf
mov
push
mov
addb
mov
inc
xchg
fildll
int3
int3
inc
mov
arpl
mov
stos
and
lods
cmc
in
testb
addr16
and
es
pop
xor
jg
cmp
inc
or
push
cs
lret
and
sbb
jg
jp
push
sub
int3
in
inc
mov
cld
pop
mov
xor
jl
stos
fs
adc
dec
sub
pop
inc
int
repnz
dec
sarb
mov
stos
inc
mov
js
int3
test
cmpsl
dec
push
rcrl
ret
out
mov
enter
pushf
pop
les
mov
pop
scas
sbb
icebp
dec
fisubrl
or
pop
movsl
nop
and
adc
pop
cmp
ss
test
and
sub
mov
out
or
push
sub
and
rolb
xlat
push
cmp
jne
xor
mov
shlb
adc
daa
out
or
jns
sbb
xor
add
xchg
clc
in
in
pop
push
and
mov
mov
dec
testl
dec
ljmp
push
mov
aad
xchg
cmp
jmp
xor
loopne
jns
sub
pop
fildl
gs
sbb
pop
cmp
loop
dec
cmc
cmp
lahf
jae
lret
adc
adc
insb
je
sbb
fsubrp
testl
mov
in
push
push
jg
sbb
orl
xchg
mov
pop
sti
enter
mov
mov
pushf
addr16
lret
jae
push
icebp
mov
imul
jg
rcl
jns
lods
jg
enter
xchg
xchg
pop
xchg
jno
nop
and
lcall
clc
mov
jmp
xor
inc
scas
push
push
mov
adc
imul
push
ja
add
add
xor
xchg
and
and
stos
inc
dec
inc
xor
sbb
mov
mov
pop
rcr
aad
fsubrs
sbb
pop
add
fdivs
out
cwtl
adc
fists
or
push
cmp
push
lcall
mov
and
jl
cmp
push
dec
sbb
aaa
xor
in
add
movsl
jnp
jno
daa
mov
repnz
lret
rclb
pop
mov
push
dec
dec
cmpsb
mov
sbb
arpl
and
int3
addr16
mov
push
sub
ret
mov
test
popf
xor
mov
xchg
pop
es
shll
mov
add
xlat
mov
pop
sub
call
push
enter
cli
dec
in
es
insl
jp
inc
dec
imul
es
rcr
clc
pop
mov
ret
cmpsb
out
pop
xchg
or
mov
cltd
fdiv
xor
mov
xor
fsubrl
xor
fimuls
pop
mov
mov
shll
sar
inc
xchg
sbb
fldenv
addr16
sti
out
or
inc
outsb
xchg
jae
and
mov
mov
popa
or
mov
push
rorl
call
std
in
dec
mov
sbb
in
add
mov
or
jnp
sbb
fdivrs
xor
jecxz
outsb
fld
imul
ja
rorl
add
dec
pop
ja
push
inc
mov
pop
inc
test
stos
and
ret
loopne
dec
mov
sbb
pop
fsubrs
adc
mov
stos
cld
push
push
inc
stos
sbb
mov
inc
dec
rorb
in
mov
pop
xchg
sub
addl
insl
fcompl
mov
fdivrs
inc
dec
mov
sti
filds
aaa
pop
in
jle
mov
aas
ret
pop
push
in
movsl
enter
repz
aad
fsub
aad
inc
inc
jo
push
jns
jbe
dec
xchg
dec
mov
cmc
jae
sbb
jb,pn
shlb
dec
test
fcomi
orl
insb
popa
adc
call
cwtl
mov
sahf
xor
mov
pop
mov
jbe
pop
pop
add
push
push
and
jmp
fldl
fadds
pop
dec
lcall
push
call
dec
sub
lock
sub
mov
mov
xchg
mov
xchg
in
dec
fwait
clc
stc
add
test
clc
or
sbb
dec
adc
dec
sub
jne
push
add
jae
pop
test
cmpsb
or
jg
fldcw
dec
jo
inc
cmp
lret
imul
mov
and
imul
xchg
dec
mov
mov
mov
mov
lret
leave
and
push
es
mov
nop
cmc
je
add
pop
sbb
mov
push
aad
xchg
loope
push
mov
cmpsb
push
xor
outsb
push
cmp
xor
and
dec
rorb
scas
xchg
ja
ss
push
push
mov
mov
xor
enter
and
push
sub
orl
jl
inc
inc
sbb
clc
cmp
push
or
aas
inc
jb
int
push
mov
aas
lds
lea
movsb
xchg
mov
loop
inc
jae
jg
inc
test
jbe
enter
xlat
push
cmpsl
insb
mov
mov
pushf
push
les
addr16
es
inc
jg
cli
pop
sbb
fildl
fnstsw
xor
fnstenv
insl
cmpsb
insb
or
cld
jnp
pop
mov
int3
les
dec
mov
lock
mov
gs
cmp
ficompl
jnp
enter
cmp
leave
push
repnz
in
imulb
xor
inc
fwait
cmc
in
ljmp
cmc
adc
lock
or
shl
pop
pop
mov
imul
pop
dec
jae
cmp
ljmp
add
jb
call
cmpsl
cld
sub
rep
or
int
data16
loope
xor
lcall
dec
nop
stos
sub
pop
cmc
cmp
and
ja
cmp
jo
es
pop
ret
adc
div
cmp
aam
pusha
mov
mov
in
sbb
xor
sub
daa
fcomps
leave
and
cmpsl
divl
in
adc
test
push
int3
or
int3
ss
lock
fldl
repnz
arpl
out
add
mov
mov
xchg
fsubr
scas
jb
pop
push
jmp
in
or
stos
add
lods
dec
xor
mov
outsb
cmp
pop
dec
add
stos
mov
dec
pop
dec
dec
into
call
cmp
popf
mov
stos
cmp
xor
mov
iret
mov
scas
pushf
inc
jno
xlat
mov
xor
in
ret
sbb
repz
pop
imul
shr
lret
in
out
sub
int
andl
add
mov
pop
in
jecxz
dec
sub
cvtdq2ps
pop
xor
sub
js
stos
xor
popa
push
dec
stos
cld
inc
push
out
xlat
imul
ja
xor
sbb
sbb
cltd
fistpll
sbb
adc
nop
jmp
add
jecxz
inc
pop
roll
dec
and
pop
repnz
fs
jnp
dec
xchg
mov
pop
inc
jnp
testl
jmp
xorb
or
cmp
aad
adc
sbb
ljmp
adc
xchg
mov
lret
inc
enter
rcrb
test
and
shrl
jmp
push
mov
inc
mov
jmp
cmp
push
xchg
dec
xor
add
popa
jns
pop
mov
push
shlb
dec
sbb
leave
xorl
and
cmp
fadds
xchg
popa
add
mull
push
dec
mov
adc
fcom
rol
daa
test
pop
in
shlb
dec
dec
xchg
fwait
jg
dec
lcall
cmpsl
lret
push
lahf
and
mov
lods
dec
sub
mov
int3
pop
rcr
sub
out
aaa
mov
mov
sub
mov
imul
lock
pushf
les
push
cmp
add
xor
gs
je
iret
mov
adc
mov
in
push
add
repz
je
stc
xchg
xor
pop
mov
mov
mov
jnp
clc
adc
je
fisttpl
and
xlat
or
scas
or
cmp
sbb
fcmovnu
dec
push
dec
xor
inc
xchg
mov
daa
push
mov
jmp
inc
loope
cltd
mov
dec
int3
cwtl
mov
push
add
push
daa
cmp
push
bswap
pop
xchg
stos
hlt
xlat
roll
insb
aad
iret
xchg
in
add
sub
mov
movsb
cmpl
push
movsl
sub
movsb
mov
icebp
push
pushf
sub
jmp
sub
lods
movsl
and
aam
lock
mov
repz
jp
xchg
mov
and
xor
jb
fwait
dec
test
aas
popf
and
lcall
lret
xor
sub
pop
mov
lret
clc
mov
lock
fiadds
int
pushf
mov
or
adc
rol
std
repz
aas
pop
sub
lcall
xchg
fcomps
push
scas
pop
or
fwait
imul
mov
out
sbb
movsl
and
inc
sbb
inc
xor
xchg
jp
ljmp
xchg
lods
repnz
rorl
daa
push
fiadds
sub
pushf
mov
pushf
testl
sub
in
mov
add
sti
mov
clc
and
loopne,pt
scas
cmp
adc
sub
jp
xor
call
sarb
mov
jmp
mov
shr
mov
fwait
or
test
dec
cmp
inc
mov
int3
lock
lods
or
mov
xor
les
std
pop
or
lret
dec
fidivl
push
neg
add
scas
mov
dec
mov
cmp
fistl
sbb
cmp
mov
mov
aad
repnz
loopne
mov
xor
adcb
movsl
add
icebp
pop
push
push
mov
add
movsl
cmpsl
leave
sbb
sub
lret
lahf
sub
lods
arpl
outsl
shr
xchg
mov
cld
sub
xchg
or
ss
popf
xchg
pop
mov
or
mov
or
cmc
jbe
cltd
adc
or
jae
aad
lcall
cmp
aad
xor
jae
rclb
xor
sbb
lret
fstps
loopne
lret
fdivl
and
cmp
call
jp
mov
add
mov
or
hlt
pop
push
mov
jnp
fistpl
add
imul
mov
mov
inc
imul
fcoms
imul
jp
popa
shl
xor
dec
das
sub
cmpb
stc
mov
stos
les
mov
dec
lods
imul
mov
xlat
test
jp
xchg
das
cmp
adc
int
ret
mov
mov
xor
mov
dec
inc
lcall
xor
mov
les
fistps
dec
cmp
push
sub
push
push
insb
xchg
jo
and
lock
hlt
popf
xor
pop
nop
out
ljmp
push
test
ret
cmp
adc
adc
stos
dec
addl
xor
addr16
xor
outsb
mov
arpl
xor
leave
inc
add
sbb
fdivs
addl
mov
push
rcrb
sahf
push
cmp
push
mov
mov
es
mov
aam
pop
jae
jl
cmp
insl
clc
loopne
pop
xchg
push
push
mov
fsub
push
in
xchg
insl
push
and
push
dec
adc
popf
adc
jecxz
test
push
mov
push
fmul
jae
loope
test
movsb
adc
into
mov
mov
push
pop
cmp
sbb
test
pushf
push
pop
jne
add
aad
imul
in
ds
stc
jl
mov
stos
out
jmp
lods
enter
sub
mov
enter
les
andb
xorl
dec
pop
int
cmp
cwtl
lret
out
inc
dec
push
ljmp
cli
sub
mov
mov
es
in
pop
xchg
xchg
inc
fstpt
sub
cld
cwtl
pop
popf
in
dec
es
repz
pop
mov
inc
es
test
jmp
push
daa
popf
mov
add
fcomi
stos
mov
push
dec
ss
repz
add
jns
loope
pop
sbb
stos
add
sbb
cmp
push
xchg
push
inc
inc
add
sub
stos
pop
adc
add
cltd
stc
incl
or
mov
ljmp
push
sbb
adc
mov
ror
add
aad
rol
call
xor
xor
jae
shl
sub
dec
xor
pop
shl
test
sub
std
cmp
cmp
jmp
in
dec
xchg
or
dec
dec
mov
stos
adc
add
and
xor
fsubrs
sub
sub
sub
adc
lret
xlat
insl
jno
push
test
je
or
pop
dec
mov
cld
cmpsb
aad
sbb
scas
mov
int
add
jge
out
jmp
pop
inc
stc
out
daa
push
movsl
xor
fimull
out
mov
pop
insl
rcrb
mov
push
push
mov
shll
cmp
sub
iret
ja
cld
xor
clc
jns
add
lea
and
cmp
enter
fcmove
mov
jae
int
in
cmpsl
mov
mov
add
xlat
mov
adc
jmp
cwtl
scas
les
push
dec
aad
pop
and
sbb
push
stos
sbb
movsb
and
test
jl
sbb
scas
rorl
xchg
call
jmp
push
imull
sub
pop
sub
addb
inc
stc
xchg
fistpll
and
xchg
xor
aad
mov
cmp
xchg
pop
roll
fsubl
push
out
std
idiv
loopne
add
je
les
mov
ret
sbb
sub
add
xor
push
push
rorl
sub
aam
pop
lcall
xor
jp
cmp
jbe
add
mov
repnz
sbb
sub
fdivl
int3
mov
mov
pusha
dec
fisubs
je
xlat
enter
xor
cmp
jns
jns
movsb
ljmp
pop
lock
enter
into
jne
ljmp
push
mov
add
jae
or
in
fucomi
addr16
enter
add
xlat
adc
jnp
imul
in
cmp
inc
sub
xlat
dec
pop
aas
add
xor
cmp
int3
je
adc
push
and
sbb
cmp
lret
popf
and
cmpsl
jno,pn
mov
fnstsw
js
mov
sub
xor
push
aad
inc
enter
faddp
lret
push
or
push
scas
dec
idivb
add
insl
inc
fdivrl
out
fdivs
xchg
or
cwtl
push
rcrb
cmpsb
cmp
xor
xchg
jp
inc
ljmp
or
int
and
jmp
arpl
incl
xchg
ja
jmp
jp
leave
jmp
mov
sub
jb
jnp
imul
les
or
sbb
or
imul
dec
and
sbb
cmpsl
or
pop
in
in
xor
and
rcll
sub
xchg
jns
enter
or
jge
dec
or
and
jp,pn
aaa
or
inc
and
xor
cmp
insb
xor
inc
jnp
pop
jg
mov
jno
popa
test
nop
data16
fidivrs
imul
inc
cmp
xor
and
cmc
int
jmp
scas
xchg
das
insl
out
addl
mov
shrl
cltd
mov
mov
jmp
aam
add
out
add
xor
das
enter
mov
jmp
fildll
jmp
pop
inc
enter
lcall
inc
clc
pop
xor
das
in
mov
rolb
sahf
pop
jmp
enter
divl
repz
pop
out
das
inc
cmc
dec
cmp
pusha
pop
cmp
pop
outsl
movsb
mov
add
add
dec
addb
adcb
and
jae
out
xor
mov
out
stos
or
fcmovne
jl
jmp
jl
icebp
jne
inc
pop
imul
mov
jno
cmp
cmc
lock
hlt
ja
xorb
sbb
xor
jae
popf
cmp
pop
dec
push
dec
push
jecxz
in
mov
movsl
cmp
jl
or
movsl
jnp
iret
pop
and
cmpsl
lret
rcll
xchg
mov
jp
ret
xchg
divl
test
or
int3
mov
nop
and
jl
insl
xchg
jmp
sub
jae
jle
push
and
aam
in
fs
cltd
insb
mov
sbb
push
mov
or
enter
mov
popa
xor
packsswb
es
subps
sbb
and
dec
xor
test
push
cmc
cmp
push
sbb
sbbl
mov
or
push
notl
dec
jae
xchg
int
mov
movsb
mov
loop
movsb
xor
inc
xchg
push
lods
aad
in
mov
addr16
bound
add
cltd
fmul
fstpt
sbb
add
push
adc
movsb
jne
cmc
mov
mov
cmp
push
fcoms
mov
sbb
or
nop
mov
orl
ss
ja
xchg
loopne
jb
sub
jecxz
push
addr16
pop
mov
adc
test
mov
insb
gs
pop
out
incl
add
pushf
sbb
mov
cwtl
dec
cmp
stos
fnstcw
jo
sbb
adc
jge
gs
iret
inc
mov
jo
adc
enter
add
test
bnd
orl
pop
or
jae
cmpsb
dec
adc
adc
mov
cmc
push
dec
jp
mov
lods
movzwl
push
in
je
or
or
loop
pop
outsl
dec
push
push
es
in
xchg
xchg
jo
cmp
mov
into
and
imulb
xor
cli
sbb
cmp
movsl
jne
inc
gs
jnp
outsl
mov
mov
xorb
aad
push
or
or
inc
push
sarb
fsubrl
add
lea
gs
lea
je
sbb
leave
aam
imul
in
daa
push
pop
ret
xor
jg
push
xor
inc
mov
sbb
movq
pop
mov
sbb
push
fildl
dec
sub
in
inc
xchg
pop
xlat
dec
dec
adc
pop
lret
push
pop
add
push
subb
icebp
xlat
pop
repz
push
pop
push
inc
jg
adc
jp
stos
mov
loopne
jmp
sbbl
push
mov
dec
jecxz
insb
ljmp
xor
pop
mov
and
into
sahf
js
in
ss
in
loopne
and
jb
mov
scas
push
ficompl
mov
adc
fstps
ss
xchg
jl
repnz
dec
jae
js
or
sub
xor
imul
daa
repnz
xor
mov
or
pop
and
pop
mov
stos
mov
fistpll
je
out
xor
xchg
inc
cmp
lods
shll
xor
or
sbb
jmp
je
jg
adc
lahf
aam
mov
movsb
orb
ret
mov
jl
popf
add
cmp
fadds
std
mov
inc
ljmp
out
or
inc
fsub
cwtl
arpl
mov
mov
sbb
push
lds
insb
inc
xchg
mov
sbb
or
imul
in
test
repnz
jecxz
xchg
mov
stos
jmp
push
push
cld
inc
sbb
inc
daa
jne
push
sbb
jge
popa
gs
gs
sbb
daa
and
pop
inc
bound
mov
jmp
add
outsb
aam
rorl
mov
mov
in
stc
test
dec
or
dec
ss
sbb
sbb
xor
fbld
jnp
movsb
push
xchg
sub
push
cmp
scas
mov
neg
adc
pop
pop
outsl
xor
jae
pop
mov
jo
add
cmp
sub
jp
lahf
cli
push
sub
ss
mov
or
repnz
lods
push
lret
outsl
outsl
or
xchg
sub
outsl
xchg
dec
mov
iret
lds
adc
pop
lods
inc
shll
call
add
into
mov
icebp
mov
xor
pop
xor
jnp
in
cmp
mov
sbb
mov
adc
stc
xchg
and
and
cs
fstps
push
jmp
jmp
shr
aas
fwait
push
or
lret
push
outsl
push
enter
inc
or
or
aad
xor
leave
sbb
cmp
cmp
jae
sub
dec
jbe
test
in
cmp
popa
call
shll
sbb
hlt
and
dec
inc
adc
adc
sub
and
jnp
sbb
pusha
shr
repz
push
test
add
enter
fadd
pop
mov
cs
fmuls
je
int3
cmp
adc
push
pop
xchg
or
cmp
cmpsl
cmp
fs
mov
lods
insl
push
and
iret
cltd
jne
and
rclb
stos
aas
mov
cmpsb
cmc
div
dec
xor
and
sbb
pop
mov
fmull
or
inc
xor
pop
aad
sbb
push
jmp
fwait
sub
mov
push
ja
mov
ret
pop
adcl
jb
dec
inc
inc
subl
mov
push
jbe
sbb
mov
adc
pop
imul
push
xlat
arpl
out
imul
and
cld
cmc
jb
cli
xor
sahf
xlat
lcall
xor
fs
inc
xor
enter
jge
mov
jge
or
pop
xchg
inc
mov
jb
and
sub
in
dec
ljmp
fwait
inc
mov
jnp
jnp
xor
pop
dec
clc
mov
add
sti
pop
imul
popf
mov
pop
out
mov
pop
arpl
jb,pn
and
cmpsl
cld
cwtl
sub
cmc
and
xlat
ljmp
push
xchg
xor
clc
jae
adc
pop
scas
mov
sbb
out
inc
sbb
imul
pusha
or
push
xchg
sar
adc
scas
xor
dec
jl
fwait
xor
loop
enter
lret
stos
add
sbb
jecxz
jns
adc
pop
out
xor
cmpsb
mov
clc
iret
inc
or
adcl
out
cmp
or
add
cmp
fiaddl
faddp
or
data16
test
mov
dec
notl
lahf
lcall
into
fdivp
repnz
jge
or
push
aam
aaa
arpl
vmovups
xor
xor
inc
imul
mov
fucomi
mov
jmp
fcoml
arpl
add
mov
jne
loope
shrb
or
call
in
iret
mov
xor
lock
sbb
mov
call
dec
daa
test
sub
xchg
pusha
in
in
or
repz
aas
es
dec
or
xchg
loopne
inc
fiadds
xchg
in
jp
mov
negb
insl
or
mov
jne
das
push
pop
gs
sahf
test
push
jmp
push
inc
mov
mov
jb,pn
std
in
jmp
xor
mov
scas
cli
inc
sub
cmp
xlat
xor
pop
add
cwtl
outsb
popf
loopne
xchg
lea
or
dec
jbe
hlt
pop
dec
stos
out
and
lods
scas
pop
mov
adc
push
int
enter
mov
dec
sub
icebp
adc
and
push
imul
xor
add
or
cmpl
xchg
ror
add
jo
shlb
test
jl
adc
sub
pop
aad
stos
push
dec
cwtl
mov
fdivp
ret
xchg
push
loop
rcrb
cld
in
and
cmp
aad
jge
lock
fnstenv
repz
or
xchg
ret
shrl
dec
fdivs
jg
ss
cmp
jbe
jl
pop
loopne
xchg
movsb
out
outsb
ja
daa
idivb
filds
inc
jp
lcall
jae
arpl
mov
aas
jp
or
fsubs
adc
sbb
cmpsl
fisubl
lock
aad
cmp
xor
mov
icebp
xor
test
sar
cmp
fstpt
adc
loop
mov
jne
out
fld
push
mov
cmp
pop
jle
hlt
jecxz
pop
call
dec
lret
push
xor
xchg
cmpsb
addr16
sub
jl
pop
and
or
xchg
push
dec
aas
mov
lods
rcll
sub
and
inc
dec
lret
shl
loope
ja
jecxz
sbb
xor
dec
test
push
jmp
dec
icebp
out
clc
xor
fsubr
jnp
add
loopne
inc
popf
lret
pop
les
loopne
fadds
scas
fisubl
ja
or
adc
outsl
insl
stos
cld
fsubrs
sub
je
shll
jb
push
cmp
fbstp
int3
ja
int
xchg
rcll
or
mov
rclb
repz
push
xchg
dec
cmp
push
jns
or
jbe
pop
lcall
shlb
enter
dec
push
aam
sbb
xlat
mov
push
add
out
push
popa
dec
push
push
fnstenv
adc
rolb
clc
dec
inc
cmp
iret
ret
and
ja
movsb
jbe
sub
add
pop
sbb
mov
inc
cmc
jle
lods
dec
mov
pop
mov
into
add
mov
push
mov
insl
xor
sbb
sbb
push
js
or
add
adc
arpl
mov
repz
jp
push
sub
mov
push
jns
aam
rcl
hlt
stos
mov
lret
push
push
sbb
jl
mov
sbb
inc
mov
imul
adc
pop
xorb
fxch
cmpsl
loopne
mov
pop
aad
mov
cld
insb
dec
mov
repnz
arpl
jmp
repnz
dec
inc
je
xor
lahf
lcall
fiaddl
inc
icebp
add
jecxz
and
dec
imul
enter
sub
add
cmp
adc
xchg
xor
popa
shrb
int
adc
outsl
push
adc
lret
push
es
mov
pop
xor
int
cmc
sbb
outsl
mov
cmc
scas
test
insl
scas
dec
int
xlat
push
pushf
mov
mov
cmp
test
mov
imul
fdivrs
sbb
and
sbb
test
repz
subps
mov
pop
add
dec
push
repnz
add
dec
or
int
gs
cmp
mov
xchg
xor
push
stos
sbb
cmp
jo
cmp
mov
addr16
out
out
outsb
push
loopne
out
mov
lahf
adc
lods
pop
fsub
cmp
push
dec
call
mov
in
mov
loope
sub
dec
xlat
in
loop
js
push
mov
mov
ret
test
stos
adc
inc
lea
mov
xor
cmpsb
je
push
mov
int
lret
xchg
inc
insb
movsl
popa
in
jo,pn
sbb
clc
pop
cwtl
push
testb
sti
in
jmp
dec
mov
cmp
xor
outsb
dec
mov
and
std
in
inc
clc
stos
xor
xor
fwait
add
cvtdq2ps
inc
outsl
in
push
mov
lret
mov
sub
pop
into
insl
lcall
hlt
jae
sub
inc
jecxz
call
mov
in
aad
dec
xchg
mov
inc
dec
nop
pop
pop
popa
dec
outsl
push
and
sbb
aad
cmp
dec
sbb
add
lock
imul
repz
add
mov
cmp
mov
idivb
pop
xchg
pop
mov
jo
iret
adc
mov
jae
mov
or
add
sbb
cmp
dec
enter
data16
adc
adc
or
dec
cwtl
cmp
jnp
mov
jg
pop
sbb
inc
mov
cmpsb
jp
jnp
cmp
pop
sar
pushf
jmp
add
mov
mov
incb
dec
mov
push
sbb
test
js
push
jg
adc
lret
inc
xor
rcl
inc
xchg
jns
std
js
addr16
fistpll
fisttpl
ja
mov
mov
hlt
xor
adc
fisubl
push
fcmovnbe
sub
cmp
sub
stos
push
imul
neg
sub
jl
mov
push
dec
sub
repnz
mov
mov
into
push
scas
cmp
jp
aad
inc
lret
push
add
jae
mov
mov
aad
mov
add
mov
out
cwtl
sub
and
mov
fcomps
push
divl
inc
xchg
or
fists
sbb
repz
jno
aam
inc
lds
xor
dec
ljmp
pusha
int3
stos
push
push
mov
push
sub
jl
cmc
xchg
adc
add
push
das
dec
inc
mov
mov
mov
jns
fstpt
psubw
cld
punpcklwd
repz
xchg
push
mov
repz
ret
movsl
mov
jmp
adc
cmp
scas
jnp
inc
or
or
popf
int
or
movsl
pop
inc
fisttpl
jo
adc
cs
imul
scas
pop
mov
aad
test
hlt
lcall
jnp
mov
cli
push
test
jecxz
repnz
ret
lahf
sbb
dec
xchg
daa
jb
mov
adc
pushf
adc
cltd
popa
rcrb
clc
test
jmp
jg
add
arpl
jle
dec
in
cld
flds
sbb
mov
and
cmp
scas
add
lcall
cmp
dec
push
js
enter
sbb
movsb
dec
pop
div
and
add
sbb
fmuls
jb
push
mul
xchg
and
aam
adc
fcmovu
int
js
ljmp
dec
dec
lods
scas
sub
jo
dec
xchg
pop
mov
aam
movsl
adc
stos
pusha
dec
fnsave
mov
add
gs
lret
cmp
loop
push
push
insl
iret
cmp
or
mov
loop
sahf
mov
sbb
lock
add
push
neg
fisubl
mov
xchg
les
cmp
or
mov
and
dec
outsb
mov
jae
mov
dec
mov
repnz
loopne
jnp
repz
insl
cltd
in
insl
enter
push
xlat
std
or
cmc
adc
in
call
sti
outsl
insl
loope
cmp
inc
scas
jle
or
sub
jp
pop
inc
popa
push
rorb
jp
jmp
adc
imul
pop
mov
imul
dec
fistpll
mov
clc
lret
test
or
decl
sti
mov
aas
out
in
xor
jecxz
lods
xchg
xchg
mov
mov
xor
mov
into
repnz
enter
dec
mov
fdiv
pop
mov
adc
out
loopne
stos
xor
and
inc
stos
xchg
push
mov
lock
outsb
push
or
lds
int3
outsl
and
mov
add
out
outsl
mov
es
push
mov
jl
hlt
fdivp
push
lahf
sub
mov
negb
mov
push
or
outsb
push
arpl
push
mov
jle
add
jle
xchg
cmp
outsl
adc
cmp
mov
pop
sbb
xchg
imul
xlat
pop
add
aad
dec
aaa
pop
imul
push
icebp
jecxz
push
imul
cmp
push
pusha
ljmp
jae
sub
loop
cmp
aam
fnstenv
jnp
sub
and
push
mov
fs
sbb
inc
add
sbb
ret
hlt
vshufps
sub
andb
adc
push
push
dec
mov
test
or
adc
iret
in
push
fistpl
and
das
popa
xor
push
pop
inc
inc
popa
mov
push
push
repz
pop
xchg
mov
jae
mov
add
rcrl
imul
inc
cltd
mov
jmp
sbb
xchg
add
sbb
add
out
fisubrl
and
out
fwait
cs
pop
in
add
inc
fdivr
or
imul
xchg
lock
lret
gs
pop
mov
mov
dec
aaa
add
out
sub
dec
cmp
xchg
push
xor
or
pop
and
mov
and
stos
push
aad
sahf
sbb
sbb
das
imul
and
mov
in
inc
push
lods
inc
arpl
cmp
in
mov
fisubrs
jl
xchg
jno
shlb
cmpsb
add
xor
cmc
mov
fstl
aam
push
int3
jne
out
sahf
dec
sbb
lahf
addr16
in
out
xor
sarl
adc
pop
adcl
or
aad
pushf
inc
in
push
mov
pop
in
push
sub
shll
xor
and
cmp
shl
mov
int3
cli
sar
fucomip
cmp
mov
call
lret
out
xor
push
adc
mov
mov
cmpsb
pop
aam
xor
in
fldt
xor
xor
fcoms
push
cmp
aad
stos
mov
inc
push
mov
push
mov
jmp
and
mov
jp
in
xchg
push
cmp
stos
insb
out
xor
mov
sbb
test
ror
out
ds
lret
loope
addr16
in
dec
adc
lret
xor
ds
loopne
addr16
div
adc
mov
cld
cmp
iret
and
aaa
xor
cli
pop
imul
mov
or
or
clc
rclb
cmpsl
xorb
add
dec
sub
sub
mov
sbbl
xchg
js
and
mov
mov
jmp
jae
jae
fiadds
and
aad
inc
ss
inc
pop
mov
test
ds
jo
and
fwait
dec
imul
out
xor
push
loopne
bound
mov
mov
inc
lret
in
inc
outsl
mov
es
mov
cmp
mov
cmp
int
xor
jne
movsb
repz
imul
scas
push
jbe
lahf
sub
push
ret
or
imul
fistpll
push
or
cmpsb
mov
in
negl
push
fists
test
popl
inc
test
dec
ror
popa
stos
incb
mov
rclb
cwtl
addr16
xor
lret
inc
adc
mov
arpl
daa
add
repnz
xchg
jae
dec
pop
jmp
or
and
imull
xor
push
cmp
cmp
iret
les
lahf
rcl
cltd
stos
cmp
xchg
iret
pop
dec
test
and
repz
xlat
fnstsw
test
adc
stc
mov
inc
xchg
xorl
cmpsl
and
test
pop
repz
pusha
shrl
mov
mov
or
pop
cli
add
push
nop
add
add
test
push
xor
add
popa
sbb
cs
lahf
xchg
mov
add
inc
mov
push
or
scas
xor
lret
fisttps
xor
daa
les
repnz
test
dec
inc
fistl
push
jp
out
jbe
rcrl
aas
leave
movsl
mov
dec
int
cmpsl
or
cltd
jnp
cmp
enter
fisttpl
push
mov
xor
stos
inc
pop
pusha
enter
push
xor
out
rcl
and
sbb
push
insb
loopne
or
movsb
out
data16
nop
adc
enter
inc
ja
fstp
sub
inc
cmp
sub
xor
jecxz
jae
xlat
cmc
ja
aas
test
jmp
dec
sbb
and
sbb
mov
jne
push
jnp
scas
push
fcmove
or
dec
and
inc
mov
les
sub
push
push
es
inc
adc
jge
sub
outsl
dec
out
sarb
adc
xor
in
test
xchg
cmp
cmpsb
cmp
dec
pop
icebp
sahf
or
cmp
out
subl
jb
dec
xlat
iret
iret
dec
add
mov
shll
nop
les
mov
adc
dec
and
es
push
shl
clc
mov
inc
add
mov
loope
movsl
dec
mov
and
inc
data16
pushf
cmp
fmull
pop
cmp
pop
test
or
dec
rcll
sbb
fidivl
cmp
inc
push
iret
fcmovb
les
adc
fs
cmp
xor
lret
lea
add
scas
in
stos
push
stc
xchg
nop
xlat
add
imulb
jb
xor
gs
jns
daa
out
jmp
adc
imul
fcomip
test
mov
xor
add
adc
out
jl
sbb
or
add
adc
mov
jae
fldl
mov
subb
sub
aas
jns
testl
mov
pop
push
js
sarl
inc
mov
mov
faddl
mov
dec
adc
xacquire
dec
negb
sahf
adc
dec
in
aam
and
mov
cmp
out
shrl
xchg
xchg
repz
aad
arpl
xchg
add
inc
sub
adc
pop
sbb
scas
inc
jg
or
clc
stc
push
pusha
cmpsl
lret
shll
sbb
nop
fsubrl
js
cwtl
mov
dec
dec
jnp
xor
sub
mov
rol
jl
aam
in
es
shl
pop
mov
push
jge
sahf
in
into
cmp
sbb
xchg
rcl
repnz
add
arpl
jl
mov
push
dec
xchg
xchg
mov
mov
icebp
push
pop
push
mov
decl
mov
sub
gs
sarl
mov
enter
jp
pop
out
sub
mov
sbb
sub
fwait
aam
in
mov
jno
inc
cmp
adc
xchg
inc
lcall
xlat
dec
dec
and
jae
mov
dec
inc
call
insl
mov
xor
clc
add
xor
ret
ljmp
xchg
rorb
and
nop
jno
shrb
gs
or
mov
test
dec
rcr
xchg
loopne
cld
push
pushf
push
movsb
scas
subb
and
les
adc
sub
dec
sub
adc
cmc
insb
repnz
int
jae
or
test
mov
sub
xor
ret
testl
inc
push
out
ds
jl
xor
jns
xchg
jp
dec
or
xchg
mov
cld
push
and
out
xlat
sbb
shrb
stc
mov
std
testl
jg
adc
mov
cmp
pop
int
faddl
call
push
pop
xchg
into
push
fdivs
cltd
repnz
popa
out
aas
pop
push
mov
pop
ja
and
jge
ljmp
xor
and
push
dec
aas
call
jnp
xchg
jnp
add
xor
popa
loopne
cmp
jb
stc
notl
or
inc
in
mov
pop
test
push
dec
cmpsb
push
or
lret
out
push
xchg
and
pop
xchg
sbb
xor
sarb
aaa
pop
and
sub
pop
pop
ror
dec
test
into
inc
aaa
fsts
loope
ret
mov
shrb
inc
mov
ja
fsubrs
cmpsl
mov
cmpsl
rcr
lock
loopne
add
mov
lret
mov
iret
rcll
mov
jmp
stc
xor
jmp
out
sub
movsl
and
aam
jbe
loopne
push
stc
stc
loopne
lret
int
repnz
clc
sub
sbb
and
cmp
inc
in
mov
movsb
es
mov
and
fbstp
sbb
mov
leave
pop
fmul
mov
movsl
push
movsb
call
xor
ficompl
xchg
push
sub
xor
test
jnp
pop
mov
clc
pop
lahf
sub
cmp
jnp
jg
fldln2
and
mov
mov
in
sub
ljmp
cmp
cmpb
jne
push
inc
fmuls
or
push
dec
or
shll
add
jnp
adc
adc
add
adc
pop
jo
jecxz
dec
and
push
andl
jmp
test
movsb
cmpsl
int
popa
mov
mov
jo
fistpll
mov
rorb
int3
pop
js
loope
xchg
cmpsb
je
dec
xor
inc
jns
sub
cmp
jne
pop
inc
lcall
dec
insb
cmpsl
cmp
out
div
sbb
sbb
dec
jno
and
dec
jb
clc
outsl
pop
add
dec
in
lret
stc
xchg
cmp
arpl
pop
and
mov
outsl
jl
cmp
jno
sbb
sub
mov
xchg
cmp
or
rorl
outsl
push
push
shrl
cltd
xor
push
jno
inc
ss
xor
jnp
add
jge
cmp
sbb
mov
xchg
mov
adc
xor
push
sbb
and
out
icebp
sahf
ja
fidivl
xchg
pop
push
dec
push
popf
dec
and
lret
cmp
xor
dec
adc
push
jg
aam
ficompl
or
in
into
lcall
bound
or
jp
imul
dec
inc
xor
subl
movsl
cmp
fisttpl
cmc
aas
xor
cmp
adc
jbe
pushf
repz
stos
cltd
mov
cmpsl
push
xor
xor
or
fwait
insb
jg
daa
lahf
cmpsb
aam
shll
fbstp
mov
mov
cmp
cwtl
into
stc
push
shll
cmpsb
xor
lods
cs
scas
dec
lcall
cmp
testl
lods
cmc
rclb
push
lret
mov
loop
int
movsb
cmp
dec
sahf
push
int
lret
sub
xlat
pop
or
or
adc
mov
in
hlt
aaa
dec
ja
out
int
int3
stos
xor
xlat
ds
in
js
dec
xor
or
mov
int
xlat
outsb
inc
ja
aas
cmp
push
inc
outsl
mov
and
stos
outsl
clc
xchg
mov
xlat
sub
repz
testb
push
xor
push
cmc
jno
sub
shrl
dec
cmp
imull
dec
cltd
lock
cmp
shrl
fadds
add
rcrb
xchg
cld
sbb
shr
dec
daa
xorb
push
mov
call
lock
and
lock
mov
xor
cmp
cmp
adc
scas
shll
mov
in
roll
or
rorb
and
cld
push
mov
repz
mov
int
cmpsb
cmpl
pop
test
push
adc
jg
push
push
inc
sub
test
jge
mov
rorb
out
cltd
pop
fisttps
cmpsl
add
call
sbb
mov
int
sub
pop
push
inc
loop
push
hlt
xchg
cwtl
cmp
dec
mov
out
fwait
push
inc
mov
sarl
jns
or
mov
add
sub
sub
or
adc
movsb
or
test
loopne
xchg
sbb
dec
loope
hlt
les
cmc
movsb
cmp
mov
sbbb
inc
inc
inc
xchg
mov
sbbl
sbb
addr16
fwait
jg
call
mov
pop
imul
nop
rcl
jnp
sbb
or
pop
dec
xchg
xchg
or
add
adcb
aas
pop
adc
add
in
fisttpll
cvtdq2ps
push
rorl
rcr
cmp
fistl
or
lret
or
push
adc
push
adc
lret
adc
mov
cmp
xor
push
and
add
dec
imul
fmul
and
in
std
xlat
lods
jb
sbbl
add
ja
mov
popl
in
test
push
shlb
dec
testl
mov
sub
mov
xlat
cmp
xchg
loop
jns
cli
aad
in
adc
or
dec
aaa
popa
xor
enter
fst
adc
daa
jle
xchg
lcall
loope
sbb
cmp
mov
or
ja
cwtl
test
pop
mov
dec
clc
lcall
cmp
aam
xlat
divl
cwtl
jb
fadds
or
aad
out
mov
cmp
pop
inc
pop
jmp
or
sahf
mov
out
push
fsts
cmp
xchg
mov
pop
aam
int
fdiv
out
div
mov
in
mov
insb
fstl
pushf
stos
sbb
pop
rolb
cmpsb
mov
mov
pop
mov
jne
jno
int
cmp
cmpsb
sti
xchg
sbb
mov
lret
dec
push
push
enter
in
cwtl
dec
test
jp
cmp
sub
or
mov
dec
jae
clc
cmp
mov
sub
jo
mov
out
stc
fwait
test
xchg
push
push
ret
pop
and
jmp
lods
sbb
cmp
dec
in
and
and
xor
mov
call
dec
fisubrl
scas
inc
ljmp
jmp
push
xor
dec
scas
sti
push
mov
ja
shrl
add
jnp
das
ljmp
adc
mov
aad
iret
push
stos
add
pop
test
push
mov
rcr
pop
dec
jo
pop
add
or
xor
rcr
out
add
test
aas
insb
sbb
int3
addr16
dec
fldenv
dec
test
movsl
dec
jno
xchg
mov
and
aas
xor
fnstsw
in
ret
popf
add
jmp
push
sbb
movsb
push
xchg
inc
test
fmul
xor
jne
repnz
dec
sbb
inc
pop
cmp
out
out
mov
dec
popl
jg
push
jae
xor
cmp
movsb
mov
xorb
inc
push
and
mul
sub
push
out
xchg
add
mov
sbb
pop
jmp
cmp
ror
inc
ljmp
in
daa
cmc
xor
sbb
add
lret
loopne
dec
std
repnz
es
fsubrl
ss
xor
outsl
cmp
imull
add
mov
es
cmp
ljmp
add
cmp
dec
push
sbb
mov
mov
xor
inc
ljmp
lret
fdivrs
movb
enter
inc
arpl
popf
add
rorb
jp
mov
xor
pop
test
xchg
dec
dec
dec
idivl
mov
sub
or
pop
sub
dec
fwait
pop
push
and
pop
adc
xchg
mov
dec
aaa
insl
mov
test
xchg
in
jne
fsubrs
insl
push
fcomps
filds
popa
lods
and
fucomip
ror
aam
jge
mov
mov
mov
cmp
aad
or
repnz
test
insl
jl
push
cs
dec
push
mov
adc
add
imul
mov
mov
mov
addr16
xor
push
out
fsubr
jmp
inc
xchg
ret
imul
testl
sahf
pop
inc
xor
inc
inc
sbb
loop
scas
ret
movsb
adc
jae
mov
sub
test
dec
icebp
jle
jp
outsl
jle
mov
lret
push
pop
fdivrl
mov
jbe
movsb
mov
xor
ss
fadds
and
sub
repz
pop
dec
mov
or
inc
lds
mov
inc
cmp
adc
jl
clc
in
imul
sbb
mov
aad
sbb
xor
cltd
mov
pop
ret
mov
jb
fcomi
dec
ret
loopne
clc
adc
enter
out
mov
pop
in
cmp
pop
add
sbb
fstp
dec
loop
add
lcall
sbb
cmp
jne
cmp
inc
aaa
clc
dec
scas
xchg
pop
inc
stos
mov
mov
jecxz
cld
inc
push
sub
mov
mov
sub
sub
jns
pop
or
sub
test
fwait
xchg
add
fdivl
mov
push
jns
push
clc
mov
jno
mov
xchg
incb
dec
aam
dec
mov
sbb
mov
lods
xor
mov
imul
jmp
lock
mov
inc
loop
xor
test
xor
pop
mov
xchg
sbb
xchg
pop
gs
aam
dec
lea
int3
jp
lds
adc
cmp
mulb
jne
clc
add
enter
out
arpl
in
sbb
lods
mov
xchg
pop
addb
cmp
ja
pop
xchg
stos
jge
int
sub
xchg
imul
nop
iret
cmp
adc
int3
cmp
fcomps
mov
jmp
movsb
stos
fcmovnu
sub
cmp
sbb
mov
cmpsb
iret
pop
sbb
push
dec
int
xor
sub
cmp
dec
push
mov
sbb
jmp
cmp
cmp
sub
xor
xor
cmpsl
shrb
cmp
sub
xor
xor
push
stos
outsl
xor
push
rcr
pop
repnz
repz
xchg
loop
lret
inc
or
push
push
cmp
cmp
shll
les
inc
push
or
inc
in
cltd
adc
stos
imul
jbe
aad
imul
or
add
pop
push
xchg
test
pop
fsubrp
mov
sbb
fisubl
xor
inc
out
imul
add
out
mov
orl
xchg
push
stc
pop
jne
xchg
mov
cmp
int
arpl
jne
pop
xchg
aas
ret
jg
jae
scas
pop
push
cmp
sbb
jle
cmp
bound
fwait
in
xor
das
inc
test
xchg
shrl
jno
inc
mov
jbe
das
je
scas
emms
or
and
cs
or
jge
or
fsubr
mov
push
arpl
add
jmp
mov
cld
xor
sub
addr16
aaa
jns
and
add
lea
dec
xchg
xor
test
iret
cmp
or
xor
or
cmpsl
jg
test
fcoms
aam
dec
xor
cmp
inc
cmp
fisttpl
cmp
cltd
jmp
cvtdq2ps
enter
pop
divl
dec
inc
and
lock
mov
inc
add
pop
add
mov
pop
fnstenv
push
jmp
mov
call
push
add
fucomip
mov
mov
int3
out
fidivl
push
xchg
xlat
xchg
mov
mov
add
sbbb
call
test
jg
and
mov
add
push
mov
xor
mov
negl
push
jo
mov
xor
push
cmpsb
fidivs
pop
inc
aaa
in
dec
and
inc
daa
push
mov
push
sbb
fnstsw
fadd
xor
cmp
adc
xchg
inc
mov
push
gs
push
pusha
clc
mov
mov
in
cld
mov
push
fldl
aad
mov
andl
pop
lret
lret
cmpsb
dec
loopne
test
rorl
lock
into
fisubrs
sbb
inc
xor
ficompl
add
mov
push
ljmp
xor
add
xor
enter
iret
xor
stc
in
loopne
shll
out
mov
add
jb
xchg
mov
in
jae
xor
xchg
int3
in
bound
sub
sub
insl
inc
jmp
mov
push
pop
jg
fidivrl
jnp,pt
dec
js
sub
aad
movsb
scas
jg
aaa
mov
data16
push
dec
fld
or
outsl
icebp
mov
test
andl
push
sbb
cmp
stc
addr16
cmp
jmp
das
in
fxch
pop
fildll
pushf
cmp
prefetcht1
repz
add
sub
mov
fucomi
cmp
fldcw
pop
aam
inc
aad
jo
out
jmp
or
fldcw
loopne
xor
mov
ret
pop
cmp
test
shll
xchg
xchg
adc
dec
add
push
mov
fs
pop
lret
dec
push
or
mov
mov
push
sub
xor
push
jne
pusha
divb
mov
pop
or
adc
iret
mov
adc
and
lret
fbld
xchg
cmp
testl
xlat
mov
arpl
call
mov
loopne
push
sbb
push
stos
fiaddl
dec
dec
test
and
fstp
mov
cmp
enter
pop
out
mov
fdivrs
out
mov
lcall
sbb
lock
dec
cmc
push
lret
int
pop
insl
inc
jo
das
inc
pop
fldcw
push
lahf
inc
xlat
or
adc
xchg
aam
sub
and
mov
lds
sahf
xor
push
orb
add
sbb
stos
not
and
mov
in
xchg
push
mov
in
inc
jnp
cmp
rol
jge
fildl
int
dec
cmp
pop
icebp
ss
cmp
aad
daa
stc
push
mov
lods
sub
sbb
mov
das
sbb
add
push
inc
cmp
in
scas
mov
inc
in
out
pop
int3
add
add
mov
incl
sbb
xor
jo
push
jbe
lea
dec
push
sarl
popa
icebp
nop
enter
cwtl
sub
inc
mov
inc
ljmp
rcrb
pop
fdiv
adc
dec
dec
jo
sti
outsl
cwtl
fistps
test
test
or
mov
fldt
popa
push
mov
int3
stc
aad
inc
mov
xchg
hlt
repz
jmp
and
mov
pop
xchg
cmp
xchg
xor
xor
pop
xchg
mov
clc
dec
jge
jg
popf
fsubrs
rol
dec
inc
fcomps
jae
lcall
pop
cmp
subl
das
adc
mov
rcr
inc
jg
fwait
xchg
cwtl
push
shrb
push
adc
push
inc
push
nop
adc
mull
cmp
fmull
rcr
scas
jecxz
stos
dec
imul
sbb
jmp
cmp
or
mov
int3
cli
cltd
stc
test
mov
loop
dec
mov
jge
nop
push
js
push
jecxz
and
aas
jb
outsb
mov
cvttps2pi
pop
imul
loope
xor
mov
push
repz
mov
or
imul
enter
scas
aas
pop
mov
cmc
push
mov
loope
scas
xor
push
dec
addr16
xchg
adc
jmp
xor
push
or
jno
and
imul
pop
sbb
ljmp
jge
inc
dec
jno
outsb
pop
dec
sub
insb
lahf
pop
push
or
iret
int
test
jecxz
cltd
adc
dec
cmp
data16
testl
sbb
mov
ljmp
xchg
mov
adc
push
add
mov
jg
dec
cmp
pop
jnp
fadds
or
jl
popa
sbb
mov
xchg
and
ss
jo
repnz
add
mov
out
imul
sbb
ret
jmp
clc
adc
inc
sbb
adc
les
out
in
sbb
pushf
cld
jl
pop
inc
ljmp
sub
jp
cmp
dec
aaa
sub
imull
xchg
pop
mov
lock
cmp
pop
insl
mov
shrb
dec
sti
sbb
sub
dec
ret
daa
jmp
movsl
and
push
xchg
xlat
and
xchg
mov
jmp
ljmp
push
push
stc
pop
or
cmp
lcall
mov
ja
xchg
push
pop
xlat
sub
push
sbb
add
xor
cmc
mov
outsl
sub
add
mov
lret
mov
roll
fisttpl
in
or
ss
pop
mov
push
sbb
sub
xchg
jecxz
iret
or
stc
xchg
ficomps
cmp
cmp
xor
push
dec
pop
add
add
sar
cltd
lods
sub
pop
pop
push
sub
mov
out
or
sub
addr16
sub
pop
ret
dec
jo
sub
jae
lods
jg
imul
das
stc
mov
cmp
dec
pusha
mov
rcrl
push
jo
addb
push
in
out
not
shr
movsb
orb
pop
xor
or
jne
jns
out
movsl
mov
shlb
jg
lret
mov
aaa
dec
jmp
lcall
jne
adc
fdiv
and
xchg
std
gs
lret
dec
bound
cmc
stos
pop
fsubl
cmc
test
adc
jno
orl
lret
push
out
sbb
fs
xchg
int
addr16
ret
fwait
jno
imul
xchg
out
loope
and
mov
shl
ja
ljmp
cld
lahf
rorb
sahf
iret
bswap
cmp
and
test
maxps
mov
clc
lock
lcall
rorl
repz
jp
cmpsb
idiv
xchg
movsb
mov
inc
pushf
dec
xchg
xchg
jge
add
loope
scas
dec
jge
repz
out
pop
enter
fcoml
pop
add
push
fs
insl
out
and
repnz
in
fcomps
jbe
inc
mov
cwtl
dec
add
rep
cmp
stos
scas
loope
mov
cmp
pop
xchg
ja
iret
add
in
out
lret
pop
mov
cmp
jno
out
sbb
add
push
or
jnp
push
cmpsb
outsl
ss
outsb
scas
inc
add
imul
sbb
mov
fcoms
popf
push
shlb
ljmp
pop
add
dec
sbb
sub
ret
imul
rorl
fwait
jp
aas
or
inc
jp
fcom
fstpt
js
mov
inc
test
xchg
dec
push
jno
mov
bnd
or
mov
mov
stos
add
popa
mov
add
stos
mov
dec
jns
or
mov
in
cld
lds
stc
cs
fisubrl
lret
iret
pop
ljmp
sbb
sub
xchg
inc
insb
es
mov
jg
xchg
mov
lcall
adc
push
loop
or
mov
in
cmp
or
or
lea
add
sbb
xor
test
outsl
test
outsb
sub
int
out
push
and
sahf
scas
add
scas
les
mov
inc
xchg
adc
mov
les
xchg
mov
dec
pop
push
push
xor
push
and
xchg
jmp
in
testl
out
or
sbb
fdivrl
clc
out
dec
outsb
mov
pop
mov
push
fwait
insb
mov
sub
and
mov
sub
lods
jae
sub
out
fnstenv
fisubs
pop
lcall
idivb
inc
sbbl
mov
dec
sbb
inc
add
add
les
repz
lret
lret
push
stc
xor
popl
inc
add
ret
pop
lods
xor
mov
mov
in
add
sahf
sub
or
mov
sar
pop
cmc
jecxz
jmp
fnstenv
push
dec
lock
ret
stos
pop
and
add
stc
fsubrl
mov
out
push
xor
push
lds
mov
addr16
fsubr
outsb
repz
outsl
adc
and
push
mov
aam
push
in
jnp
sub
in
insl
push
pop
mov
adc
sbb
or
sub
pop
sub
dec
fidivl
aam
inc
adc
popf
hlt
sbb
sub
sar
test
or
in
mov
shll
sbb
repz
mov
stc
subl
cmove
mov
cwtl
lahf
or
mov
outsb
inc
ss
pop
jmp
fldenv
push
jbe
paddusb
push
mov
fdivrs
lods
xor
je
dec
addr16
mov
pop
gs
int3
in
cli
xchg
in
push
dec
push
dec
and
push
mov
fucomi
orb
cltd
stos
mov
push
sahf
sti
in
adc
push
loop
cmp
js
int3
sub
fs
leave
mov
imul
push
outsb
push
test
mov
add
sarl
pushf
hlt
fisttps
pop
scas
test
xchg
xchg
ret
mov
mov
sub
call
int
inc
lods
imull
cmp
sbb
ljmp
aas
je
or
xor
and
mov
stc
ljmp
stos
pop
aam
mov
or
sbbb
test
test
xchg
cli
xchg
cwtl
mov
xor
xor
cmp
pop
addr16
int
scas
push
add
jne
dec
hlt
jmp
or
mov
sbb
sti
mov
scas
xor
bnd
mov
leave
aad
in
add
cs
nop
inc
jne
es
xor
xor
in
int
fsts
sbb
jae
je
push
push
pop
cmp
in
xor
pusha
push
inc
es
cmp
xor
mov
xor
jp
adc
sub
or
sbb
sbb
lret
jnp
hlt
sub
xchg
repz
add
or
bound
xchg
xor
or
das
inc
jnp
adcb
andb
pop
enter
push
sbb
jge
and
push
xor
cmp
dec
in
dec
or
or
into
xabort
pop
push
push
sbb
cmp
mov
test
mov
cld
clc
aad
cs
cli
jo
icebp
mov
cmp
mov
flds
cltd
dec
push
mov
xor
iret
jns
push
mov
out
lret
cmc
popa
fld
cld
inc
mov
xchg
mov
jno
sub
and
mov
popf
xchg
aam
dec
rorl
jl
inc
xor
xchg
aad
aad
push
sub
aam
dec
push
xchg
mov
sbb
outsl
push
mov
lock
notl
jmp
mov
sub
jle
inc
popf
das
jnp
nop
out
xor
stc
adc
fcomp
or
pusha
les
sbb
mov
push
sub
pop
lahf
mov
xor
cmp
mov
lret
pop
mov
xchg
push
and
aas
int3
out
lods
mov
mov
cwtl
push
mov
ja
mov
scas
pushf
sbb
mov
and
pushf
and
push
cli
jbe
jbe
ljmp
or
or
mull
das
add
enter
and
pop
lods
push
jmp
jns
push
push
notl
out
pop
jno
xor
push
sbb
push
sbb
mov
into
jbe
or
ret
sbb
roll
lock
in
or
adc
in
mov
test
inc
xor
xlat
repz
fldenv
dec
call
icebp
mov
out
lds
mov
inc
clc
outsb
dec
adc
std
jne
sarb
inc
cmc
rclb
push
aaa
jb
call
xor
adc
sub
cmp
test
mov
fistpl
push
xchg
call
aam
sub
mov
std
lret
sub
jbe
clc
stos
stc
clc
inc
loopne
idivb
or
inc
jmp
xorl
pushf
repz
adc
sub
int
jae
jge
xlat
mov
mov
leave
push
and
lret
xor
inc
hlt
jno
pop
in
imull
movsl
mulb
fcmove
ret
jae
mov
pop
jo
sub
cmp
call
push
mov
dec
or
push
pop
push
mov
jl
sub
xor
xor
jg
pop
jecxz
jo
sub
sbb
pop
pop
out
mul
or
test
sub
aaa
dec
ret
push
rolb
pop
nop
xor
fmull
sub
mov
outsb
scas
aam
xlat
xchg
adc
insl
mov
call
repz
cmp
lock
notb
cld
nop
enter
in
movq
in
cwtl
mov
test
into
or
mov
or
sub
mov
daa
pop
mov
mov
mov
fsubs
lods
ja
or
xchg
mov
push
add
cmpl
jo
xor
xlat
in
shrb
cmc
mov
mov
sbb
insl
in
xlat
add
fstps
shll
rorl
add
stos
mov
outsl
push
jnp
std
inc
outsb
xchg
ds
fsts
xchg
jmp
add
enter
mov
pop
mov
aam
mov
and
jge
aad
outsl
mov
outsl
push
xor
movsb
fcompl
dec
negl
mov
adc
rorb
fldcw
sbb
out
push
inc
mov
les
pushf
lcall
cmpsb
mov
test
cmp
push
fsubr
test
int
shll
test
add
icebp
lcall
jg
icebp
pop
mov
mov
outsl
sbb
fcom
xor
dec
and
sbb
leave
scas
ja
les
ret
pop
mov
cwtl
dec
mov
dec
aaa
pop
jae
jle
add
mov
fsubs
push
mov
ja
in
and
or
roll
pop
outsb
xchg
in
mov
push
xor
jno
movsb
xor
xor
pop
cltd
jmp
xor
test
jl
xor
jno
push
cwtl
pop
clc
das
bound
mov
pop
cmc
xchg
or
mov
push
mov
pop
mov
xor
shll
out
stos
pop
je
shrl
mov
cmp
out
or
xlat
rclb
subl
aad
aam
negl
shll
outsl
cmp
mov
push
cmp
ret
xor
or
sbb
mov
loop
xchg
inc
icebp
jmp
fldenv
loop
bound
xor
inc
enter
call
mov
fs
hlt
mov
inc
popa
cmp
rorl
aam
fnstenv
fcmovu
pop
jns
sub
inc
popf
xor
pushf
mov
push
push
dec
aad
inc
xchg
push
out
add
les
out
adcl
adc
pop
outsb
push
cli
mov
inc
not
mov
mov
inc
xorl
cmp
hlt
nop
cmp
dec
xorb
in
xchg
add
in
movsl
xchg
js
push
arpl
int3
mov
outsb
adc
inc
repz
pop
inc
or
or
mov
push
fs
arpl
out
pop
fdivrs
mov
aaa
ss
mov
push
push
mov
sarb
push
pusha
in
inc
sub
cmp
and
dec
int3
ds
and
idiv
ret
sub
aam
mov
sub
mov
push
mov
dec
push
push
xor
mov
lock
xlat
inc
out
shl
xchg
cmp
cmpsb
scas
lock
or
jae
ljmp
adc
or
push
or
fwait
insl
in
jno
xor
in
add
inc
and
ret
sarb
xor
xor
xchg
jnp
lret
dec
out
cmpsb
jo
mov
dec
cltd
jno
pop
icebp
test
cli
or
das
inc
call
js
les
fs
pop
adc
sub
std
imul
das
enter
inc
or
xchg
pushf
loopne
mov
repz
sbb
repnz
je
push
and
sub
or
cwtl
lahf
rcr
mov
mov
add
mov
stos
std
ret
xor
in
xor
mov
jae
dec
mov
mov
xor
or
push
ud1
add
dec
test
aam
enter
mov
push
icebp
push
push
jp
mov
sub
jmp
cli
mov
in
lcall
sub
repnz
cmpb
xchg
icebp
sar
jl
fbld
mov
push
xchg
lock
ret
fnsave
or
mov
jp
sbb
mov
inc
and
jmp
in
fdivrs
mov
mov
mov
lock
outsl
push
xchg
jl
mov
push
pop
xchg
iret
jb
in
pop
mov
sub
or
or
sarl
fcmovnbe
xor
leave
dec
xchg
xor
push
fistpl
sub
or
cmp
push
xchg
cltd
mov
in
mov
in
imul
cmp
sbb
mov
jmp
lcall
enter
cmp
dec
movsl
jbe
ficoml
xchg
jnp
cmp
addb
sub
cmp
stos
loop
lret
xchg
or
sbb
xchg
pop
out
ds
inc
out
clc
mov
loop
push
xor
ds
out
push
mov
push
add
ljmp
test
sub
jnp
test
inc
scas
ficomps
xchg
neg
cwtl
ja
add
sbb
cmpsl
mov
aas
jg
aas
sar
shrl
daa
jo
xor
les
push
xor
cmp
push
push
mov
out
cmp
loop
cltd
gs
and
pop
xchg
add
adc
inc
int3
cmp
stos
or
xchg
fisttps
push
or
call
xor
jg
and
test
or
sahf
sbb
jg
pop
fwait
lods
dec
andb
pushl
cmp
xor
out
int3
jns
rcrb
fsubrl
adcl
mov
push
sbb
aam
aas
out
pop
mov
mov
jp
roll
or
enter
lret
js
sub
jg
cli
xor
dec
add
jmp
lods
jmp
insl
out
adc
jo
jnp
sub
push
and
inc
add
xor
es
outsl
addr16
inc
xor
lret
push
sub
sub
or
xor
cmp
xchg
aas
xchg
lret
jnp
push
stc
lret
mov
aas
imul
popf
fstpl
lcall
adc
loope
cld
and
lret
cmpl
sub
stos
rcrb
mov
jp
and
icebp
xchg
dec
lret
sub
mov
loopne
in
sbb
hlt
jg
sub
dec
push
movsb
adc
repnz
test
lds
push
mov
call
or
icebp
shl
jne
test
js
std
lahf
pop
and
pusha
dec
dec
add
inc
rcll
jmp
imul
mov
pop
arpl
or
rolb
repnz
hlt
dec
xor
inc
pop
mov
jns
lods
adc
push
ja
lea
cmpsb
in
fcomip
adc
mov
shll
pop
imulb
outsl
sub
loopne
jne
test
adc
jecxz
mov
xor
dec
or
std
ret
xchg
andl
xor
and
andb
jne
push
mov
mov
dec
hlt
scas
cmpsl
xor
cmpb
inc
add
pop
and
dec
mov
jecxz
push
cmp
mov
out
cmp
mov
mov
jne
mov
cli
xlat
jmp
int3
mov
hlt
xor
pop
test
xor
cmp
mov
sbbb
in
sbb
data16
and
sub
mov
sarb
incl
imulb
and
icebp
out
int
add
mov
mov
cmp
fwait
clc
mov
pop
jo
gs
xor
je
mov
adc
or
jge
cld
jg
movsb
in
jg
mov
pop
outsl
mov
cld
mov
dec
dec
daa
push
mov
repz
xchg
xor
movsb
jnp
jmp
fistps
inc
aaa
neg
negb
pushf
dec
rorb
jl
ret
fisttps
xchg
mov
decw
inc
jl
and
insb
pop
push
cli
and
sub
out
imulb
jo
add
lods
push
cmp
add
pop
cmp
xchg
mov
in
ret
push
pop
mov
addr16
test
dec
jg
and
dec
in
ss
pop
orb
repnz
cwtl
outsl
mov
lds
pushf
jge
imul
js
mov
lods
out
bnd
outsl
xchg
sarl
jns
mov
sub
pop
dec
sbb
add
dec
mov
jl
and
jo
xor
adc
push
dec
xchg
bound
int
lret
movsl
pop
enter
dec
inc
into
jnp
jae
and
call
aad
ja
and
pop
imul
int
jnp
pop
data16
fmul
or
add
mov
sbb
sbb
push
inc
fsubrl
sbb
xor
add
adc
cmp
jae
iret
mov
in
outsl
faddp
sti
out
fcmovne
repnz
push
cmp
cmp
jo
mov
cltd
xor
push
add
push
or
negb
lods
inc
loope
pop
in
fildl
roll
mov
stc
sarl
shlb
repnz
clc
in
jl
jbe
xchg
addr16
adc
int3
imulb
or
fstpt
sub
dec
sbb
bound
mov
fisubl
cmp
or
or
dec
subl
ja
sub
and
fcomps
and
cmpsl
xor
inc
popf
in
xor
mov
cmpsb
inc
xor
insl
or
int
mov
ja
in
mov
popl
imul
test
push
adc
xor
aaa
pop
inc
xchg
sahf
in
cmpsb
sti
fsub
int3
cwtl
dec
pop
in
test
jne
loopne
sub
ftst
fisttpl
inc
push
popa
fcomip
jmp
icebp
and
sub
cmp
jae
in
rcrb
dec
pop
out
fwait
and
repz
ficoml
out
je
mov
sti
iret
add
imul
pop
rcrl
pop
xchg
dec
add
decb
repnz
out
sbb
or
fisubs
dec
or
dec
xor
cmp
out
repnz
sbbb
sub
lods
stos
pop
cli
inc
aam
out
add
push
lret
mov
sub
mov
lds
cmp
push
mov
fnsave
dec
push
nop
or
rorb
push
in
cmp
scas
push
or
xlat
int
hlt
and
cmp
sbb
out
pop
test
pop
mov
inc
xor
lret
fwait
xchg
adc
ja
nop
push
pop
imul
sub
mov
testb
cld
popa
sti
cmp
dec
xchg
movsl
push
xor
or
fidivrl
sbb
daa
movsl
xchg
testl
test
mov
xchg
xor
outsl
aam
ja
dec
add
imul
pop
mov
sbb
push
xchg
hlt
push
lcall
je
mov
out
lret
dec
ret
mov
add
xor
sbb
and
jg
inc
shll
popl
mov
iret
adc
jmp
test
movsb
jns
mov
aaa
jae
aaa
sbb
inc
push
mov
leave
sub
call
push
adc
xor
ficoml
lock
out
or
jbe
cmp
ja
aad
xor
or
mov
jo
adc
ret
cmp
ds
popa
fnsave
pop
fwait
push
roll
add
in
mov
adc
or
and
cmp
mov
xlat
sub
cmc
mov
arpl
mov
mov
dec
notl
ja
jecxz
pop
repnz
movsb
xlat
ficomps
jb
add
in
push
movsl
in
aaa
hlt
ret
loope
inc
lock
mov
xchg
sub
push
add
out
add
inc
test
imul
sub
hlt
xchg
jmp
int3
cltd
inc
xchg
rclb
imul
ljmp
ficoml
popa
xchg
xchg
or
fcoml
dec
popf
xor
add
paddusb
pop
popa
int3
add
addr16
mov
scas
add
inc
scas
add
in
outsl
ret
or
xchg
mov
xchg
jge
addr16
mov
mov
jbe
adc
sahf
cmc
inc
push
or
mov
pop
ficoml
xchg
or
inc
inc
dec
fwait
inc
xchg
push
ljmp
and
lcall
add
pop
cmp
fidivrl
mov
in
add
inc
jecxz
mov
out
push
outsl
ja
xchg
jnp
dec
loope
cli
inc
idivb
add
mov
out
test
repnz
cli
xor
dec
push
hlt
push
dec
arpl
cmp
addr16
sub
jp
mov
pop
pop
sbb
push
popa
jp
ficompl
out
call
add
cmpsl
xchg
mov
lret
fldcw
xchg
das
pop
stos
xchg
xor
imul
mov
mov
dec
pop
mov
mov
cmp
adc
xlat
outsl
test
mov
xor
dec
jbe
pop
xor
and
xor
jl
shl
sbb
pusha
add
ja,pn
movsl
loop
add
push
ljmp
lret
sbb
or
scas
adc
lcall
in
mov
and
sub
cmpsb
cwtl
add
mov
mov
dec
and
test
lcall
xchg
aam
out
inc
cmp
push
fidivrl
stc
das
in
push
aam
imull
aad
pop
mov
jbe
xor
add
jg
mov
stos
lcall
pop
fisubrs
sub
jne
mov
xchg
lods
adc
in
and
sub
mov
and
or
int
mov
add
loope
inc
push
mov
xor
or
cli
insb
je
stc
ljmp
sub
aas
pop
xor
pop
fsubs
ret
cld
and
loopne
push
push
addr16
neg
xlat
add
fwait
lods
xor
test
adcb
lock
imul
in
inc
andb
cmp
popf
sub
daa
sbb
test
or
or
fmuls
mov
mov
repz
mov
adc
add
mov
int
or
out
mov
loop
pop
lret
jge
hlt
sub
pop
and
lods
sub
xchg
pop
pop
mov
int
xlat
xchg
adcl
cmpsl
xor
imul
lods
out
pop
test
iret
push
xchg
ret
lods
lock
push
imul
test
in
hlt
fisttpl
stos
xor
ja
enter
cmp
stos
mov
push
out
loop
out
push
dec
lret
sbb
inc
xor
movsb
inc
out
xchg
pop
sub
mov
mov
enter
ret
mov
arpl
dec
dec
imul
hlt
pop
jnp
fistl
xchg
xor
push
adc
out
push
or
dec
push
cmp
bound
dec
xor
pop
incb
iret
scas
xchg
leave
clc
arpl
test
dec
mov
mov
push
in
adc
push
sub
sti
jle
ss
jbe
jo
out
mov
pop
adc
int3
xor
or
dec
cmp
xor
stos
xor
not
add
adc
push
ja
jge
dec
pop
test
cmpsl
mov
out
mov
pusha
xlat
addr16
in
add
sub
add
xor
xchg
aad
pop
xor
outsb
inc
pop
dec
sbb
mov
cmpsl
inc
mov
aaa
scas
repnz
ret
add
or
sbb
popf
push
gs
sar
jge
xor
ret
pop
rcr
push
lock
xchg
inc
cwtl
sbb
xlat
push
out
fildl
sub
cmove
cmp
icebp
or
cli
fwait
dec
push
inc
jne
outsl
push
or
daa
or
inc
push
int
mov
ds
call
arpl
inc
movq
idivl
xor
and
ljmp
jo
stos
fsubrp
push
or
ror
or
xor
fdivr
fsts
aam
into
jmp
mov
pusha
sahf
lret
rcrl
sbb
into
pmulhuw
jbe
test
scas
adc
movsb
dec
dec
pop
mov
push
repnz
and
mov
xor
sub
popa
ret
test
mov
leave
mov
push
push
sbb
test
xor
repnz
xchg
insb
mov
repnz
sahf
orl
stc
pop
dec
lds
int3
xor
notb
dec
mov
adc
mov
sub
mov
and
movsb
cmp
ret
jmp
jnp
arpl
in
lret
jne
mov
jb
lret
mov
mov
lahf
mov
repz
les
xor
or
ret
xchg
sub
out
jnp
or
insl
fs
pop
out
xor
aam
cmp
fmulp
cmp
sbb
cmc
test
stos
mov
aas
mov
cmp
jecxz
enter
xchg
cwtl
lcall
aaa
sbb
stos
mov
xchg
sar
mov
lcall
ja,pn
leave
mov
sub
imul
cmp
or
scas
ret
arpl
xor
mov
mov
xlat
push
cs
lret
movsb
xlat
and
mov
stc
cltd
inc
fadds
dec
int
adc
neg
xlat
sub
sub
pop
dec
fcoml
stc
and
mov
mov
cmp
or
cmpsb
mov
xor
stc
add
xlat
jb
adc
aad
fcomi
push
jbe
mov
jecxz
inc
bound
jnp
mov
jmp
clc
test
fsubp
loopne
dec
mov
not
inc
fbld
cwtl
stc
or
jmp
fwait
xchg
push
push
cltd
lods
mov
int3
rclb
mov
popf
pusha
mov
push
mov
cltd
addb
es
out
jmp
cmp
enter
jge
push
test
push
les
jb
push
mov
cmc
jb
mov
add
add
and
and
test
sbb
push
push
add
or
push
stc
in
mov
inc
jbe
outsl
cwtl
xchg
movsb
dec
add
cmp
xchg
and
rorl
jns
adc
in
stos
cmc
sbb
in
sub
in
ds
stos
aad
ljmp
add
loop
pop
std
cmpsb
jb
in
push
add
jae
lahf
add
push
jl
sahf
mov
sub
adc
inc
rol
add
popa
sub
lret
add
sbb
cmp
repz
int3
pop
jne
xor
xor
cs
pushf
ljmp
ljmp
mov
cli
repz
pop
jno
xchg
scas
inc
jae
repnz
add
push
inc
or
mov
jmp
inc
scas
ror
xlat
mov
insl
hlt
lock
dec
rclb
cmp
sub
xlat
repz
clc
rorl
popa
xchg
lock
iret
pop
xchg
aad
sbb
test
call
inc
or
lods
into
mov
out
out
idiv
jb
xor
add
push
cmp
in
push
sub
in
cmp
into
test
xchg
cmp
push
xchg
aam
insl
in
out
arpl
fiadds
push
and
sub
jp
push
insb
stos
jg
cld
mov
xor
jg
lret
xchg
pop
fwait
cs
pop
xchg
mov
rcrb
cmp
sbb
nop
nop
les
inc
xlat
loopne
push
subb
pop
sbb
aad
sbbb
movsb
je
fsub
aam
cmp
sbb
push
xchg
dec
fwait
mov
fimuls
cmp
movsl
pop
ja
mov
jae
xchg
in
add
add
fidivrl
jno
stos
lret
jns
iret
jmp
pop
mov
push
ds
mov
pop
aaa
aad
mov
push
addb
mov
sbb
push
push
scas
push
xor
sub
mov
mov
lods
xlat
add
sbb
jmp
xlat
jbe
repnz
in
stc
mov
xchg
inc
xlat
out
cld
in
out
sti
adc
push
mov
cmp
fldcw
ret
lds
ja
cmp
leave
call
mov
inc
notl
into
jecxz
push
dec
addr16
aaa
leave
lock
sahf
icebp
push
adc
or
mov
push
cmp
hlt
dec
loopne
mov
andb
leave
es
xor
inc
aaa
jge
rorb
aaa
lcall
iret
int
lods
scas
xchg
aas
int3
or
cmp
movsl
cmp
inc
add
stos
xor
xchg
inc
push
jmp
pushl
mov
insl
mov
popf
addr16
in
sub
xchg
out
popf
arpl
push
xchg
in
loopne
ret
enter
mov
xchg
add
add
cli
in
xor
int
mov
addr16
repnz
and
push
push
shlb
cmp
push
or
sub
dec
ficompl
mov
mov
pop
bound
and
xor
mov
sub
lock
int3
xchg
js
in
or
xor
leave
pop
cwtl
hlt
fbstp
adc
test
or
sbb
rcrl
mov
cmpsl
and
hlt
xor
cs
xchg
sbb
adc
mov
cmp
pop
inc
fidivs
testl
rorb
xor
mov
jl
es
or
popa
ljmp
add
jp
icebp
mov
into
sub
ss
mov
in
test
cmp
shlb
ljmp
cli
repz
std
jno
iret
push
mov
sub
jb
or
imull
sub
push
pop
jge,pn
clc
inc
xchg
xchg
jne
popl
push
daa
dec
int
cmpsb
dec
inc
pop
enter
outsb
andb
clc
mov
mov
mov
cmp
in
xchg
lods
sub
add
dec
lret
mov
jno
pop
inc
cmc
aam
dec
roll
lahf
insl
and
mov
add
mov
cmp
xchg
lcall
pushf
adc
daa
aam
push
pusha
pop
xchg
mov
cmp
test
jae
lock
sub
ja
arpl
mov
repz
xchg
movsb
push
in
push
insl
or
add
cmp
cmp
xor
jecxz
dec
add
jb
ljmp
ss
adcb
push
lods
or
aas
fidivl
pop
outsl
inc
add
pushf
out
mov
jo
fwait
sarl
lret
xchg
mov
push
mov
xchg
mov
lock
fistpl
filds
jp
daa
xchg
es
mov
add
aaa
in
add
js
xor
out
push
sub
test
mov
jle
roll
inc
call
cmp
jns
in
jmp
jae
or
jnp
or
ss
dec
pop
test
mov
idivl
and
les
pop
pop
jno
push
arpl
xor
outsb
out
ret
or
mov
aam
and
pop
adc
lods
mov
inc
fwait
xor
filds
jp,pt
sub
dec
cwtl
sahf
add
dec
popa
add
fdivl
jo
mov
mov
fdivl
xchg
lret
ja
xor
mov
mov
push
push
shrb
fcomps
aas
out
xchg
rorb
push
loopne
addl
popf
adc
cli
or
sub
ljmp
mov
movsl
adc
das
sub
seto
sahf
xchg
sub
int
xor
arpl
mov
out
popf
xchg
xor
call
jg
dec
out
adc
jnp
stos
cmp
mov
xor
cmp
push
stos
pop
fdivr
cld
jecxz
rcll
icebp
ret
push
ret
cld
add
pushw
jbe
push
lcall
inc
arpl
mov
push
xchg
inc
fs
mov
cmp
cmp
sub
cmp
push
outsl
mov
pop
xor
push
add
fistpl
in
aad
fisttps
lea
mov
xchg
sbb
fdivrs
rcrl
mov
and
pop
fimuls
jg
and
xchg
adc
jno
push
aad
sahf
inc
dec
add
lret
pop
sahf
mov
das
cld
or
pushf
adc
ret
leave
adc
pop
pop
add
mov
iret
xor
movsb
cltd
shll
sbb
pop
xchg
and
mov
xor
popf
rolb
or
pop
mov
pop
sbb
sbb
and
push
je
push
cmpsl
xor
fldt
popf
xor
inc
in
dec
mov
push
shrb
sub
cwtl
cmp
push
test
xlat
or
xor
and
jne
mov
jg
sub
jmp
mov
sbb
push
fcmovb
std
mov
movsb
adc
pop
push
arpl
pop
fmull
adc
jnp
fbstp
or
jmp
lahf
push
out
jecxz
push
movsb
ljmp
push
std
clc
jmp
add
push
dec
add
jne
out
int
inc
add
scas
movsb
lcall
dec
stc
pop
cmp
aam
sbb
pop
mov
push
mov
or
inc
fwait
sbb
andb
stos
xchg
sarl
and
sub
and
xor
or
stos
cmp
std
or
stos
xlat
iret
ret
movsl
test
dec
mov
push
nop
xchg
or
inc
sub
jmp
jmp
pop
in
out
xor
pop
sbb
imul
and
or
cwtl
inc
in
jb
sub
adc
ret
divl
in
test
jmp
mov
push
cmovo
xor
sbb
aad
xchg
outsl
jno
hlt
xor
push
mov
sbb
sbb
add
mov
jg
xor
fwait
nop
add
pop
lods
pop
icebp
outsb
mov
xlat
cmp
jmp
cs
adc
les
and
jmp
fsts
das
adc
js
adc
xor
sahf
ss
dec
push
pushf
loopne
dec
je
addr16
out
push
push
cmp
ror
jmp
dec
xchg
dec
dec
imul
scas
pop
jbe
cmpsb
sbb
xchg
jl
in
test
fcmovnbe
dec
adc
add
lahf
lds
jg
repnz
xor
mov
in
push
cmpsb
enter
movl
push
in
mov
push
or
jmp
int
sbb
sbb
push
testl
repz
stc
lods
cmc
lcall
rcrl
inc
pop
cmp
cs
and
mov
jb
sbb
mov
xchg
jp
inc
aad
cmp
sub
mov
sbb
outsl
push
shll
insb
fwait
dec
adc
iret
stos
fildll
pop
and
sub
in
inc
divl
stc
sub
clc
push
cmp
adc
popa
cmc
mov
mov
add
push
xchg
push
and
les
adc
ljmp
ror
dec
in
cwtl
jnp
mov
mov
jbe
pop
sub
sub
cld
mov
xchg
jle
jg
cvtps2pd
loop
int
dec
out
or
pop
test
stos
hlt
stos
push
xlat
xor
jb
ljmp
sbb
call
inc
shlb
dec
add
inc
mov
addr16
and
pop
mov
mov
sbb
aam
clc
testb
enter
pop
mov
loopne
or
jecxz
aad
xor
mov
mov
out
pusha
xor
push
in
lock
mov
imul
add
mov
addb
test
rcll
movsb
adc
repz
je
test
repz
in
mov
ja
or
aam
dec
push
inc
adc
pop
fcomps
insl
push
int3
in
movsb
or
out
testb
popf
subl
pop
data16
cmp
adc
mov
iret
sub
add
pop
or
pop
test
cmp
test
jne
or
pop
loopne
clc
cmp
add
add
out
pop
sub
jmp
xchg
jne
adc
mov
push
push
push
dec
imul
and
popf
mov
push
call
imul
sbb
scas
sbb
sbb
shr
mov
cmp
repz
das
dec
cs
test
rorb
ja
ret
clc
sahf
inc
mov
es
sbb
and
sbb
sti
pop
shr
dec
inc
nop
fsubl
mov
stos
test
std
fsubrl
cmc
sbbb
mov
sbb
ret
lea
cmp
inc
mov
add
out
das
inc
sub
mov
jnp
inc
push
sarl
repz
push
jmp
xor
jp
pushf
jmp
adc
mov
ficoml
or
in
into
jmp
adc
les
and
mov
push
mov
pop
testl
xorb
jb
adc
sarl
je
lea
mov
cmc
mov
test
test
ss
lea
in
stos
lret
fwait
cmc
add
inc
out
loope
pop
fmulp
pop
inc
sbb
loop
out
fdivrp
sbb
jae
inc
rcll
lock
dec
mov
jnp
mov
cwtl
push
pop
jp
push
in
and
or
sbb
push
cmp
subl
jb
inc
leave
xor
dec
xchg
int3
adc
pop
and
bound
shrl
lret
dec
push
lret
or
popf
or
or
bound
cmp
sub
fs
pop
or
call
ret
faddl
fstl
hlt
and
test
arpl
jno
mov
cwtl
adc
lcall
movsb
push
jns
and
pop
fimuls
xor
cmp
imul
push
pop
repnz
sub
push
fucom
rcrb
rcrl
int3
outsb
in
add
mov
incb
stc
jbe
xchg
scas
iret
jecxz
mov
flds
cmpsb
sub
in
adcl
lahf
jb
repz
pop
push
mull
add
sub
nop
inc
mov
sbb
or
enter
jmp
out
cmpsb
sub
inc
addr16
pushf
popa
xor
dec
das
imul
fidivl
out
cmp
jg
inc
mov
jb
hlt
dec
test
cmp
cmp
cmpsb
fcomps
scas
and
je
and
cmp
in
push
jmp
ds
add
and
stc
int
jno
adc
into
pop
xchg
mov
jnp
insl
mov
int
pop
lds
xlat
dec
fdivp
push
sub
shlb
mov
mov
insl
jge
add
jbe
hlt
cmp
dec
sbb
add
fldcw
out
add
lret
addr16
and
mov
mov
adc
or
imul
mov
in
fwait
mov
sub
jl
dec
inc
addr16
enter
mov
sti
divb
iret
aaa
jo
fcomp
cmp
pop
in
outsl
loope
lret
push
out
iret
repz
dec
adc
inc
pop
nop
mov
xlat
rcl
fstpl
xor
xor
loopne
cmp
mov
icebp
lret
int3
sbb
pop
clc
fcmove
mov
xchg
xorl
cltd
cld
push
int
push
cmp
test
or
sbb
jae
push
and
scas
pop
fsts
pop
lock
push
into
or
inc
push
dec
cmp
pop
push
sbb
popa
cmp
in
hlt
or
popa
orb
jns
pop
aad
in
xchg
jmp
cld
shr
or
loope
outsl
or
je
lcall
mov
fnstcw
inc
sbb
sub
sub
and
lods
or
inc
movsl
cmpb
cmc
xchg
pop
lods
enter
out
cltd
call
es
imul
adc
adc
inc
int3
cltd
arpl
push
cmp
mov
xchg
jb
clc
in
pop
fistps
pusha
push
push
ret
mov
dec
or
add
add
xor
pop
addr16
xor
xchg
add
push
push
pop
or
cmp
jne
sub
mov
push
add
dec
add
adc
aas
jmp
addb
jg
pushf
pushf
fcomi
mov
push
nop
xchg
lock
or
scas
lea
int
xchg
testw
inc
lods
sbb
mov
scas
jmp
xlat
fldcw
inc
pop
and
push
pop
dec
sarb
rcll
ja
push
imul
adc
sub
pop
dec
mov
repz
ret
shll
push
hlt
into
mov
and
ret
sarb
ficoml
push
lods
push
mov
jge,pt
mov
dec
or
or
mov
fiaddl
sub
pop
jb
mov
push
xlat
call
mov
jmp
push
imul
mov
cmp
div
loope
cmp
jno
or
xchg
out
add
jmp
cld
push
shr
pop
roll
pop
sti
gs
push
rcrb
cmpsb
psllq
scas
mov
push
mov
in
repnz
xor
loope
pop
test
jbe
push
aaa
int
mov
mov
push
sti
mov
lods
push
es
dec
lods
in
and
xor
std
leave
rcrl
clc
ret
mov
fcomps
mov
adc
mov
flds
or
pop
mov
dec
out
hlt
xor
dec
xchg
popf
outsb
pop
jg
pop
adc
sub
mov
fadd
add
cmp
pop
adc
add
hlt
inc
xchg
add
xchg
ret
and
aas
inc
mov
test
test
test
lock
push
add
mov
nop
jmp
sub
test
sub
jns
cltd
int
dec
sub
xchg
pusha
pop
and
lds
ja
sub
jbe
push
mov
mov
dec
repnz
das
mov
int
xchg
cwtl
loop
or
in
in
pop
pusha
xchg
or
xchg
mov
cmp
lret
lcall
mov
std
xor
pop
ja
cmpsb
mov
and
scas
cwtl
ficomps
pop
sub
lds
dec
sahf
mov
pop
int
in
cmp
mov
lahf
lock
dec
mov
push
mov
sbb
or
cmpl
cwtl
cmp
jmp
push
jae
test
mov
out
sub
filds
add
ret
jae
testl
sub
jmp
roll
sub
adc
aam
rcl
out
shrb
pop
xchg
adcb
sbb
add
fmul
or
inc
sub
jecxz
movsl
ds
push
aad
mov
jl
jae
rorl
sub
lock
cmpsb
pop
in
add
dec
hlt
sub
mov
dec
cmpsl
cwtl
mov
les
or
addr16
xchg
repz
inc
rclb
pop
jmp
repz
adc
cli
jge
push
sbb
aad
jmp
clc
or
xchg
mov
out
ficompl
enter
ja
jle
pop
push
adc
aaa
mov
cmp
xor
adc
mov
sub
push
jno
fs
adc
cmpsb
dec
pushf
or
mov
in
loope
ds
repz
lret
std
or
sbb
cmp
pop
add
mov
shll
xor
xor
sub
das
int3
cmp
push
jae
ds
push
add
or
push
mov
ds
into
insl
ss
cmp
mov
ss
adc
mov
cmp
pushl
mov
loopne
mov
push
sub
fwait
js
rorl
jb
add
aas
dec
add
ljmp
jmp
je
fistl
xor
insb
movsl
pop
mov
fisttpl
dec
fsubs
aad
cmpsb
idivl
sub
dec
call
cwtl
rcrb
and
les
and
lea
cmp
pop
pop
inc
cmpsb
mov
pop
mov
sahf
sub
insb
xchg
xor
xor
jl
mov
add
or
jo
push
dec
cmp
inc
xor
sub
or
xor
lcall
out
outsl
push
into
jnp
stc
mov
mov
gs
mov
fistps
mov
std
ss
mov
lahf
in
adc
cld
jbe
jb
outsb
sbb
jns
fwait
loope
and
sbb
outsl
push
jbe
xchg
in
xor
outsl
xor
movsl
int
in
fnsave
or
cli
jl
es
dec
std
stc
outsl
fcmovnu
mov
or
idiv
arpl
sub
or
or
mov
fistps
mov
outsl
mov
int3
add
cmp
push
sti
jns
filds
mov
sarl
pop
clc
mov
sarl
push
bound
dec
cmp
pop
pop
sub
pop
roll
jns
pop
enter
sub
jge
test
fsubrl
sti
xchg
push
inc
dec
cmp
pushf
mov
stos
jg
stc
aas
scas
cmp
xor
icebp
jecxz
mull
fwait
divl
negl
add
pop
movsb
icebp
mov
or
inc
lock
cmp
mov
shrl
push
jo
and
icebp
and
test
xlat
adc
cmpsl
mov
fsubrs
jnp
sub
loope
scas
fwait
mov
cmp
loopne
sbb
aaa
test
in
lods
inc
int
xchg
inc
int3
ja
jns
jmp
cmp
jg
jle
shl
xor
test
push
jb
xchg
or
int3
jns
jbe
int
scas
sbb
ja
sbb
movsl
fcomip
in
aam
mov
sub
push
or
fdivrs
jmp
or
loopne
sbb
divl
iret
jae
or
fsubs
cmp
call
mov
xlat
inc
fcomps
or
icebp
clc
fisubrl
aad
xor
loope
jbe
push
cmp
cmpsl
dec
fstpt
lcall
dec
xlat
ja
adc
xor
outsl
or
aad
cmp
nop
jnp
xchg
mov
je
fildl
adc
adc
inc
int
sbb
call
flds
out
mov
xor
jp
mov
pop
orb
xchg
aad
jmp
jecxz
icebp
fcmovnu
cmc
jnp
lret
jmp
cmp
enter
pusha
in
stos
fadd
clc
push
pop
lock
out
add
mulb
loop
nop
lods
jmp
lods
push
pop
jnp
loop
je
jl
dec
inc
xor
call
outsb
xlat
sbb
sub
rcl
cli
insb
add
cmp
lock
lret
mov
fistpl
sbb
mov
sbb
xlat
mov
pop
xor
mov
dec
sub
xor
cmp
dec
xchg
cmp
in
cli
mov
repnz
clc
js
fldl2t
xchg
jne
mov
fnstsw
stc
mov
mov
mov
jnp
stc
cltd
and
ja
add
sub
filds
addr16
test
icebp
xchg
mov
xor
std
repnz
repz
in
sub
add
fdivr
mov
xlat
pop
jae
or
inc
flds
les
ja
dec
mov
jl
outsb
fwait
inc
mov
sbb
push
push
cmp
or
loop
pop
fcmovbe
xlat
fwait
or
fwait
pop
or
enter
les
int
push
std
repnz
or
fwait
mov
xor
jae
sbb
push
sub
sbb
jbe
es
dec
adc
jle
mov
jbe
rcr
mov
mov
test
mov
jecxz
push
stc
jbe
out
fucomip
cli
mov
sub
xlat
pmullw
scas
jns
loop
aas
mov
adc
push
adc
pop
cmp
pop
movsb
in
into
jbe
ljmp
xchg
add
mov
mov
jb
adc
in
or
xchg
outsb
jae
clc
jg
sarb
in
enter
mov
test
xor
cmpsb
arpl
call
lret
clc
pop
inc
cmp
jno
sarl
mov
testl
gs
enter
xchg
mov
inc
cmp
adc
pop
mov
std
insb
xchg
mov
sub
cmpsl
add
sti
jnp
ds
jb
or
xor
adcb
mov
xchg
mov
shlb
cli
sbb
cmp
push
cmpsl
test
icebp
or
sarl
cli
cli
xor
out
add
xor
push
cmc
lahf
cmpsl
lods
dec
sub
dec
or
clc
fwait
mov
insl
pand
ret
mov
xor
add
insl
push
outsl
cli
roll
xor
sbb
jbe
dec
inc
clc
js
mov
mov
leave
xchg
adc
shrl
test
incl
push
int
in
mov
imul
shll
inc
sbb
or
fidivs
rcrl
lret
cmp
js
ja
push
jg
jns
sarl
mov
mov
lcall
lret
stc
ss
imull
mov
mov
jnp
repz
insb
jg
fwait
ss
pop
pop
push
sbb
mov
cld
clc
fcmovb
xor
lods
mov
pop
leave
push
or
or
mov
jmp
xor
clc
mov
ss
fstpl
scas
lock
jae
enter
clc
fs
push
pusha
or
dec
add
push
fwait
stc
xchg
add
cld
adc
or
adc
cltd
sahf
imul
cmp
mov
mov
leave
clc
flds
xor
enter
sub
loop
fwait
pop
and
imul
dec
ret
jbe
les
cs
movsb
pop
fcmovbe
pop
ss
push
mov
nop
leave
fadds
or
outsb
aad
jmp
hlt
fstps
cmc
aad
rcrb
jnp
mov
mov
xor
ljmp
sub
scas
mov
arpl
mov
cmp
je
jl
push
pusha
cld
lods
pop
sarl
jbe
les
sbb
jnp
cwtl
jl
mov
scas
pop
pusha
lret
push
stc
add
sub
sahf
push
xlat
cli
repz
xlat
and
test
or
cmpb
pusha
add
push
test
lret
mov
out
rcr
dec
call
xor
jno
loopne
and
sub
in
hlt
xorl
xor
sbb
jnp
sbb
out
enter
shlb
loop
nop
sub
jbe
aam
repz
mov
enter
cmpsl
jl
dec
lods
mov
xchg
enter
push
xchg
dec
adc
mov
pop
enter
jnp
les
cmp
pop
xorl
pop
dec
lret
js
sbb
xchg
pop
jns
push
daa
xor
js
xchg
pop
lcall
lods
mov
pop
shrb
fwait
adc
loope
and
xor
repz
push
cli
je
sbb
cmp
xchg
out
shl
cltd
nop
add
or
icebp
fdivrl
lock
inc
cmp
xchg
cmp
inc
into
sbb
and
in
sub
ss
je
imul
jl
stos
pop
jmp
push
xchg
inc
stc
mov
arpl
bnd
subb
and
dec
fwait
in
dec
mov
xor
mov
or
add
call
cmp
add
inc
cmp
xchg
cmpl
test
adc
mov
nop
xlat
call
das
out
rclb
hlt
pop
rcrb
cmp
push
xchg
in
lods
mov
ja
dec
les
mov
dec
mov
dec
clc
popa
inc
sbb
xchg
and
jnp
icebp
xlat
push
and
scas
stc
sbb
bnd
xchg
mov
jecxz
cmp
xlat
pushf
xchg
jae
or
stc
lods
shlb
mov
pop
mov
xchg
cli
push
test
mov
ja
xor
dec
adc
mov
dec
addr16
xchg
scas
sub
push
add
je
push
sub
dec
dec
mov
lods
jns
mov
jl
jmp
test
in
lahf
int3
cmp
sbb
jnp
clc
bound
jo
lock
in
jg
insb
fucomi
fisttpl
or
add
ja
add
in
jnp
pop
xor
aaa
repz
pop
int
add
jp
add
cmp
xchg
popa
ret
dec
mov
cmp
xchg
sub
lods
xchg
mov
xchg
enter
mov
lods
and
add
jno
popa
cmp
mov
js
pop
dec
push
stos
fdivrs
or
push
arpl
cmp
xlat
inc
aad
xor
pop
sbb
aam
in
hlt
mov
vphadduwq
mov
out
xor
or
rcl
fidivs
int
fcomp
divl
or
loope
into
xor
mov
fdivrs
insl
idiv
out
xor
frstor
xor
jle
sbb
cltd
xor
jae
pop
dec
ja
mov
test
jb
sub
mov
push
jne
filds
add
lret
in
shlb
negl
adcb
int
push
out
cmp
push
and
arpl
and
cmp
pop
push
and
or
pshufw
ja
shlb
xchg
mov
jne
cmc
rorb
sti
xchg
sub
mov
fwait
outsl
cmpsl
cmp
movsb
sub
jne
xchg
xchg
jmp
sub
mov
mov
fcmovne
cmp
or
dec
and
fbstp
clc
xlat
cmp
pop
shll
stos
dec
insl
mov
aad
in
scas
cld
pop
fsubs
stc
aad
jbe
dec
inc
and
aad
sbb
aad
and
mov
sub
je
or
mov
mov
mov
push
mov
xchg
sarl
add
sbb
testl
in
out
or
aaa
in
and
repz
popf
aad
daa
xor
adc
pop
das
jle
inc
fdiv
mov
repnz
je
mov
jne
mov
or
and
mov
xchg
or
shlb
das
jns
xchg
jle
sbb
xor
in
mulb
aas
jp
mov
pop
lret
push
popa
sub
adc
out
icebp
loopne
sub
les
imul
mov
fcoms
or
cli
cmp
movsb
lcall
in
and
mov
int
push
aad
pop
pop
mov
cmp
dec
aad
shr
inc
shrb
dec
mov
inc
lcall
inc
mov
sahf
push
arpl
jp
xor
pop
sub
cmp
xlat
int
dec
mov
repz
mov
clc
cmpb
xchg
push
dec
or
sub
and
test
mov
test
fdivp
decb
lock
jne
inc
pop
mov
lret
push
dec
das
mov
jmp
dec
mov
addr16
out
cmc
popf
int
dec
and
repnz
lock
or
push
cvtps2pd
jno
out
icebp
or
aam
mov
adc
jl
add
sar
mov
je
xchg
sbb
scas
xlat
sbb
inc
into
jmp
hlt
jg
mov
dec
mov
shl
pusha
in
jmp
pop
clc
arpl
inc
add
cmp
adc
repnz
fisubrs
popa
mov
out
mov
add
and
shlb
pop
mov
ret
test
push
pop
bound
mov
xchg
cmp
pop
xchg
dec
outsb
mov
sub
mov
out
shll
or
sar
mov
pop
jge
and
les
jne
sahf
mov
pop
mov
or
inc
arpl
movsl
lret
lcall
push
out
addl
lcall
xchg
arpl
mov
clc
lcall
mov
pushf
imul
push
in
mov
jecxz
repz
cli
add
loop
call
fisubs
add
lea
fcmovne
aas
jno
out
or
clc
lods
test
ds
test
jmp
jmp
and
sub
and
aam
xor
test
add
and
dec
cmpsb
adc
pop
xor
or
test
jo
sbb
aam
mov
aas
jno
dec
loope
push
fmull
mov
dec
sub
mov
jnp
mov
sbb
add
pop
out
fcmovu
aam
jo
sub
or
pop
cmp
sbb
vpsrlq
cmp
push
leave
fdivl
and
aas
shll
mov
sbb
pop
cs
aad
sub
sub
mov
jecxz
out
jno
les
ficomps
or
sbb
or
mov
test
lret
ss
mov
push
cmp
repz
insl
imul
fcomi
fnstsw
jmp
fwait
std
movsl
std
and
arpl
mov
pop
jecxz
loopne
push
cmc
in
ds
lret
xchg
mov
sbb
test
mov
cmp
inc
mov
add
shll
dec
and
inc
pop
xchg
es
cs
rcr
cmp
jmp
call
sbb
aad
add
and
cs
test
enter
cmp
sbb
xchg
mul
sub
test
mov
sbb
xchg
cmp
pop
je
xlat
sbb
in
rclb
ljmp
mov
jo
fimuls
jno
lock
pusha
test
xchg
test
inc
xor
mov
push
rorb
int3
mov
mov
jns
sub
xor
sbb
fwait
hlt
lods
lcall
clc
sub
pop
add
dec
and
mov
mov
aad
cmc
stos
fsubs
cs
xor
dec
mov
or
les
or
or
dec
xor
int
fldl
or
pop
xchg
xchg
out
in
sub
clc
pop
mov
xlat
jle
cmp
call
enter
das
xchg
push
dec
mov
and
push
mov
dec
xchg
mov
jb
or
fcmovb
sbb
iret
stos
into
add
stos
icebp
dec
fiaddl
xor
sbb
and
xor
push
adc
movsb
pop
mov
mov
sbb
repz
push
loopne
addr16
jmp
mov
stos
aam
fsubr
imul
mov
mov
push
xchg
jmp
test
sub
add
push
mov
aaa
in
push
dec
or
loope
divl
mov
mov
xchg
lahf
repnz
jg
inc
imul
rol
sbb
pop
jmp
imul
mov
xor
int3
iret
outsl
insb
dec
jnp
mov
cwtl
push
cs
lds
shr
mov
xor
aas
ja
push
repz
pop
and
push
jmp
mov
adc
rorb
sub
adc
aaa
out
fcmovbe
adc
adc
fimull
test
sub
cld
pop
out
pop
sbb
mov
and
leave
dec
or
js
mov
add
outsl
into
xor
icebp
cmc
add
jns
and
movsb
adc
mov
mov
std
out
adcl
or
insl
sbb
pop
xchg
testl
in
cwtl
mov
mov
insl
sub
sbb
test
dec
adcb
outsb
fwait
repz
sbb
fstps
jns
mov
mov
test
cmp
mov
inc
pop
sub
pop
cmp
lcall
jb
push
xchg
cmp
mov
stos
lea
leave
fwait
push
push
adc
adc
shlb
inc
lock
xchg
or
je
bound
stos
xchg
bound
jecxz
cmp
dec
mul
fcomps
js
mov
ja
dec
stos
add
mov
cmp
dec
loope
xor
not
add
js
faddl
jne
movsb
fcmovnb
cld
loop
ret
pushf
or
xlat
or
out
and
or
pop
outsb
add
cmp
out
ss
imul
mov
loopew
jp
cmp
inc
test
movsl
xchg
sbb
sbb
cltd
gs
andb
ficompl
pop
repnz
fmull
cltd
scas
mov
add
add
pop
pop
cwtl
icebp
test
cmp
dec
add
mov
shr
sbb
and
xchg
loopne
mov
adc
or
lret
loope
cmp
jnp
or
repz
cmc
movsb
lret
pcmpgtb
mov
jmp
dec
gs
mov
stos
and
xchg
outsl
pop
add
xchg
xor
add
loope
fmuls
out
jne
pop
jg
xchg
out
insl
sbb
dec
cs
aad
mov
pop
mov
ss
ljmp
dec
jae
cld
adc
sbb
shrb
loope
pop
shll
testl
icebp
shll
outsl
inc
mov
loope
cmp
mov
dec
test
jg
in
cmpsl
sbb
or
mov
incb
outsl
dec
jecxz
hlt
movsb
pop
fbld
jae
xorl
cmp
rorb
fmuls
fdiv
mov
xor
insl
lds
mov
and
cmp
xor
fbld
sub
repz
rol
shrl
repnz
mov
lods
icebp
mov
inc
push
lahf
mov
jl
adc
stos
shll
push
movsl
in
pop
test
jb
xor
imul
add
cmp
mov
in
cli
cltd
pop
xor
cli
insb
cltd
pop
xor
aam
dec
or
int3
stos
pop
sar
lret
inc
dec
test
cmp
and
imul
ja
jl
addb
push
lods
in
xor
inc
mov
pop
add
pop
aas
icebp
pop
gs
enter
mov
gs
add
shrb
jg
jns
cmp
jp
pop
adcb
int
mov
sub
add
or
inc
push
icebp
adc
push
pop
dec
mov
jae
nop
out
jmp
insl
jecxz,pn
mov
cmp
adc
clc
sub
addr16
test
fistps
push
aaa
pusha
rep
cmp
int3
cltd
adc
neg
rcr
test
fcoms
in
xor
stos
jnp
sub
out
mov
ficoms
push
mov
movsl
inc
mov
cmp
dec
imulb
sub
xor
inc
mov
pop
in
mov
cmp
repnz
inc
nop
mov
pop
pop
push
mov
add
cmc
and
jbe
adc
xchg
fwait
cmp
mov
shll
popf
fadds
add
out
lock
fcmovu
test
push
fwait
or
pushf
cmp
inc
test
call
shll
pop
dec
sub
lods
jo
or
sbb
daa
stos
fcompl
call
or
lock
aaa
mov
dec
xorl
push
xchg
imul
decb
sub
fcoms
arpl
sbb
rolb
lock
in
imul
mov
loopne
cltd
xor
mov
and
cwtl
dec
dec
push
daa
lea
jg
iret
add
sbb
inc
jne
add
xchg
and
filds
mov
adc
xchg
sbb
leave
pop
lods
cmp
mov
mov
mov
scas
cld
inc
andb
sub
mov
cld
dec
cld
out
shr
add
jnp
jg
fstpt
xor
sbb
outsl
cmp
jecxz
dec
pop
lock
roll
add
fsubs
mov
jo
int
test
shl
dec
xchg
xor
cmp
popl
fildl
xchg
dec
cld
mov
adc
sub
daa
jmp
stos
or
mov
aad
fstps
inc
repz
or
jmp
inc
dec
mov
cmc
loope
inc
cwtl
mov
lret
jl
in
loope
adc
xchg
cmp
cmp
fistpl
stos
outsl
mov
lock
or
jecxz
outsl
sub
clc
movsb
xor
aam
sbb
mov
stos
in
pop
fscale
cmp
movsl
lret
std
jnp
lea
xchg
fcmovnb
ret
movsb
dec
mov
enter
shrl
imul
mov
or
pop
cmp
scas
bound
divb
int
dec
dec
push
jno
push
dec
call
xor
add
jo
push
mov
cmp
jne
sub
adc
ss
imul
in
pushf
cmp
ficompl
test
loope
or
pushf
cmp
aam
push
outsl
mov
stos
loope
insb
sbb
mov
in
or
push
stos
mov
mov
testb
add
in
aad
mov
add
inc
aas
loop
sbb
lds
sahf
repnz
and
in
lcall
hlt
inc
aad
gs
or
dec
fninit
pop
pop
push
mov
push
mov
imul
mov
jg
mov
jmp
xor
jle
add
push
std
mov
inc
dec
aam
mov
push
iret
fmul
xor
lods
rcl
das
xchg
mov
inc
fistps
push
cmp
in
cld
pop
lret
mov
adc
stc
mov
in
pop
mov
jge
setns
in
daa
daa
daa
incl
lcall
mov
jmp
push
aad
fisttps
dec
repz
jo
or
shll
mov
sub
push
add
fildl
xlat
in
cmp
pop
jp
iret
dec
mov
lock
ficompl
stos
inc
in
push
mov
dec
scas
in
pop
je
es
cmp
fcompl
add
add
sub
xlat
cmp
daa
add
es
push
xlat
or
fldt
dec
or
scas
fwait
jp
xchg
jge
dec
into
push
fstps
ret
mov
movsb
dec
add
jbe
jb
lahf
sbb
add
mov
xchg
xlat
fwait
and
cmpsl
outsl
jmp
data16
not
fcompp
add
or
push
fidivl
add
and
xlat
movsb
push
mov
dec
in
jbe
iret
jnp
hlt
repz
outsl
loope
adc
mov
mov
dec
add
push
jae
int3
in
flds
pop
decb
xlat
mov
or
pop
jae
inc
movsb
or
mov
and
lcall
mov
push
les
push
jbe
rcrl
repz
xchg
out
mov
fildl
rcl
pause
push
cli
mov
popa
ret
outsl
push
test
cmpsb
xlat
mov
iret
ret
sbb
inc
cmpsl
cmc
mov
aas
xchg
addr16
sub
les
int
int
mov
sbb
fildl
adc
add
aaa
loope
push
cltd
push
jle
add
xchg
ljmp
cmp
bound
fildll
push
adc
fidivrl
jp
mov
mov
adc
push
fisttps
clc
aad
dec
push
push
cmovno
rcr
mov
jp
cmp
jge
cmc
xor
pop
mov
into
xlat
add
and
repz
ret
jns
popl
cmp
xchg
push
loopne
sbb
push
add
shl
xor
mov
movsb
out
jp
sub
imul
add
imul
inc
sarl
push
mov
mov
shrl
sahf
push
addl
outsl
int3
sbb
in
sub
fnstcw
push
stos
out
pop
scas
nop
jg
testl
call
dec
mov
adc
lret
mov
or
jmp
xchg
mov
mov
cmc
mov
repz
sbb
in
test
xchg
xlat
lahf
nop
xor
call
sub
push
lock
xchg
cmp
pop
or
mov
xor
cmp
sub
or
dec
fcmove
call
sar
fistl
in
les
add
shr
cmpb
mov
sub
popa
sbb
rcrb
enter
sub
sar
push
js
mov
mov
inc
flds
jmp
int
movsb
clc
sbb
fistps
inc
and
sahf
mov
dec
push
adc
aad
stc
cmc
pop
push
test
push
lock
xlat
dec
roll
adc
mov
sarb
sbb
test
push
inc
cmp
pop
pop
adc
inc
stos
repnz
and
call
mov
dec
scas
or
cmp
pop
add
fstl
or
lea
outsb
dec
ja
subl
jne
mov
sbb
sub
cltd
or
hlt
push
fcmove
lret
repz
mov
pop
cmpsl
sbb
lret
aad
mov
mov
movsl
inc
in
subb
aaa
inc
xor
je
bound
orb
xchg
popa
and
test
inc
lcall
pop
outsl
mov
push
es
andl
test
cmp
xchg
jmp
enter
cmp
mov
xor
cmp
sub
xor
cld
ret
enter
push
mov
pop
inc
jp
add
push
inc
cmp
out
imul
mov
imul
adc
test
inc
jne
mov
rcrl
repnz
pop
jno
outsb
xchg
mov
sub
jne
xchg
loope
call
loope
test
inc
xchg
pop
clc
fisubl
mov
cmp
aad
dec
mov
cmpl
xchg
popa
int3
add
clc
js
cmp
cmp
cmpsb
cld
xchg
stos
push
fsubrs
inc
lock
bound
jno
jne
cmp
shll
or
pop
mov
inc
cld
mov
fsubrs
and
cmp
mov
inc
or
cmc
rcrl
fchs
aaa
insb
sub
add
sub
or
adc
leave
scas
out
sbb
pop
jns
lahf
cmp
mov
loop
and
outsb
push
into
cld
stos
shr
mov
out
fisttpll
mov
outsl
pop
or
mov
nop
aad
xchg
iret
pop
ficompl
test
in
xchg
negl
sahf
fiaddl
loope
in
stc
add
loope
xor
hlt
cmp
sub
test
in
loope
in
mov
pop
jecxz
test
pop
icebp
adc
les
data16
xchg
in
or
dec
cltd
add
mov
fldenv
cmp
push
mov
xchg
repnz
adc
stc
insl
add
jmp
add
push
arpl
sahf
call
faddl
push
pushf
add
loope
push
cltd
ret
jb
repnz
jbe
mov
rcl
add
pop
outsl
es
sub
hlt
enter
inc
movsl
subb
ds
in
push
neg
pop
leave
arpl
and
cltd
rcl
push
and
push
adc
mov
jmp
add
sub
jnp
movsb
mov
dec
or
repz
sbb
and
dec
divb
sarl
les
add
inc
icebp
sbb
stos
fstl
lahf
movsb
popf
sbb
fistpll
pop
sbbb
sub
cmp
push
jl
inc
into
xchg
xor
and
sbb
loopne
push
mov
enter
and
das
xchg
shr
int3
aad
daa
add
jnp
xor
mov
stc
lret
dec
cwtl
or
add
loope
aas
das
inc
rorl
dec
push
test
ret
or
test
push
xor
sub
dec
in
pop
lcall
pop
push
sub
add
mov
xchg
lods
hlt
pop
push
les
mov
fnstenv
sbb
out
icebp
clc
cmp
aam
lcall
aam
scas
mov
add
xchg
les
fldl
cmp
imul
mov
loop
inc
xorb
push
mov
adc
mov
les
dec
les
imul
and
jle
out
lcall
xchg
xchg
test
push
inc
xlat
pop
insb
mov
sbb
and
pop
or
fsubrs
push
xchg
fisttpll
cmp
mov
mov
cmp
sub
mov
mov
mov
fs
ja
pop
ss
jmp
inc
and
lret
divb
stc
pop
push
outsb
add
jo
sub
sbb
les
pop
fistps
cmp
inc
lods
mov
loope
cmp
add
add
and
mov
cmpsl
cmp
int
pop
cmp
dec
ljmp
sub
push
fildl
jmp
cmp
cmp
lea
push
cmp
sbb
pusha
push
ja
xor
pop
mov
movsb
jmp
int3
add
xor
add
cmp
jnp
test
mov
dec
and
and
inc
out
outsl
es
test
jecxz
or
pop
jae
sbb
inc
pop
sub
sbb
mov
outsb
cmc
jle
adc
mov
sbb
mov
mov
inc
cmp
mov
pop
mov
jecxz
outsl
jecxz
clc
movsl
out
arpl
int3
push
jns
adc
xchg
fs
jecxz
popf
adc
les
fildll
jne
jnp
add
cmp
adc
pop
push
pushf
pop
cmp
and
sub
cmpsl
adc
sub
dec
cmp
xor
jo
int
sbbl
push
mov
cmp
int3
push
add
rorl
xor
or
sbb
in
xor
shl
push
movsl
mov
sub
les
mov
cmpsb
or
and
clc
aaa
aad
adc
xchg
sahf
sbb
clc
xor
cmp
push
mov
xor
enter
fildl
and
cmp
aaa
xchg
mov
enter
pop
cmpsb
cmp
push
imul
xor
jno
ret
in
or
ja
inc
add
lds
mov
addl
mov
ja
jae
mov
ja
stc
mov
cmp
lods
inc
stos
clc
jne
cmovno
dec
enter
int
xor
dec
andb
xorb
dec
or
sub
lahf
data16
add
test
sbb
add
in
testl
test
popf
cmpsl
je
dec
mov
cs
pop
js
mov
call
cmpsb
and
xorl
ds
stos
repz
into
enter
out
cmp
dec
pop
js
and
xor
leave
push
pop
jb
repz
sar
mov
pushf
xor
pop
popf
xor
imull
mov
sbb
in
jb
cmc
jle
pushf
xor
cmp
iret
aas
lcall
jb
mov
imul
or
add
orl
xorl
cmp
cmp
inc
cmc
mov
mov
ss
xor
sbb
dec
aas
call
cs
orb
mov
adc
xchg
cltd
and
pop
pop
fsubrl
xchg
lock
sbb
push
jne
adc
inc
jbe
lahf
fimull
mov
pop
ds
jmp
inc
push
mov
xor
mov
dec
and
adcb
jnp
mov
cltd
pop
incl
xchg
call
xchg
jns
mov
dec
ret
dec
and
dec
cmp
dec
cmp
xor
in
repz
ljmp
fstpt
sub
jl
mov
hlt
mov
pop
icebp
out
popa
dec
add
aas
adc
cmp
icebp
clc
sub
sbb
jecxz
lods
sub
xor
cmp
inc
mov
fnstcw
movsl
ret
sub
add
enter
mull
mov
cmp
je
adc
enter
out
out
jns
xlat
sbb
aas
aaa
hlt
jge
dec
clc
inc
and
jae
cmp
pop
mov
mov
jae
sbb
mov
mov
call
fsubrs
mov
pop
movsb
lret
addb
popa
fbstp
std
int
adc
sub
push
xor
xor
push
notl
push
aam
je
fdivr
in
mov
hlt
stos
ljmp
xchg
sarl
jecxz
jmp
jae
add
mov
hlt
and
cld
mov
cwtl
add
jnp
jl
loope
sub
jg
pop
xchg
xchg
jmp
push
cmp
add
in
push
xchg
in
sub
lock
xor
jl
arpl
fcmovnu
outsb
lods
lock
stos
inc
xor
inc
add
sbb
xchg
dec
int3
push
mov
mov
jnp
shll
add
pushf
push
cmpsl
sbb
fdivrs
bound
push
sbb
pop
lret
clc
ss
xor
call
ficompl
out
jmp
clc
push
scas
sub
adc
or
pop
or
pushf
in
push
icebp
ss
std
ret
in
ja
les
push
sub
fildll
stos
xchg
das
mov
lock
clc
push
pop
cmp
popa
mov
inc
jnp
lret
decl
fdiv
push
js
in
test
sahf
outsb
cwtl
jnp
push
xor
movsb
xor
cmp
push
push
out
sbb
cmp
call
call
out
cmp
mov
adc
push
or
sbb
or
sbb
add
xor
pushf
jmp
repnz
mov
xchg
xor
loop
and
mov
mov
popa
jp
or
rcl
mov
jb
mov
mov
jp
hlt
xchg
pop
sbb
and
sbb
sbb
addr16
push
mov
fstps
sub
loopne
mov
dec
in
push
repz
dec
xor
lods
mov
clc
adc
in
fcoml
mov
xor
add
sub
xor
xlat
push
int
fimuls
cmpsl
test
pop
loopne
dec
pusha
jae
cltd
std
mov
gs
fcompl
cmp
out
loopne
adc
ljmp
adc
dec
inc
or
mov
dec
or
inc
rorl
testl
jp
add
test
cltd
loop
inc
push
mov
andl
gs
pop
mov
and
mov
pop
jmp
lock
xlat
decb
inc
mov
xor
mov
dec
mov
lock
adc
jo
int
pop
sbb
fsubr
fwait
and
rorl
and
pop
mov
sbb
popf
jp
sbb
and
pop
jae
insb
add
pop
mov
notl
jmp
cwtl
mov
xor
aas
and
mov
adc
jmp
ret
std
testl
pop
sahf
loopne
sub
jmp
push
pushf
mov
mov
or
sbb
arpl
inc
addr16
rcl
insl
pop
aad
cmp
push
jns
lea
xchg
push
add
jmp
enter
rolb
pop
bound
jne
lcall
hlt
repnz
mov
pop
mov
mov
inc
add
cmp
and
rcrb
cmp
pop
les
test
sbb
stos
outsb
and
aam
mov
pop
jecxz
or
loop
dec
push
sarb
fcomps
sbbl
out
mov
push
push
sbb
push
stos
cmp
jae
dec
mov
pop
aas
lock
mov
push
dec
test
daa
lea
add
jnp
test
mov
aam
and
aam
ret
mov
clc
aam
fstpl
sub
loopne
or
negl
xchg
dec
inc
sub
dec
loop,pt
cld
fildl
xlat
xor
fldenv
inc
je
ficoml
and
inc
cld
inc
sbb
int3
inc
dec
add
fstps
arpl
sti
pop
or
cmp
jp
dec
mov
dec
push
mov
imul
aam
cmpsl
ficompl
sub
or
int3
inc
ds
call
mov
xchg
push
pop
sbb
roll
inc
filds
es
adc
ficoms
xor
lods
inc
jg
aas
ljmp
sub
jb
and
sbb
rcrb
pop
fdivl
test
repnz
pop
loope
inc
imul
and
xor
push
arpl
and
add
sub
cmp
repnz
roll
and
xchg
inc
cmp
add
dec
sub
cltd
xchg
pop
scas
psllw
cmp
mov
rcll
jae
inc
dec
mov
pop
jnp
xlat
sbb
pop
xor
pop
sbb
inc
loop
scas
sub
pop
fwait
into
es
enter
mov
jbe
dec
push
inc
cmp
sbb
adc
fnstenv
rorb
or
out
test
xchg
mov
xchg
add
hlt
sbb
aaa
lret
in
jmp
movsl
push
jmp
popf
repz
aad
ss
adc
cmp
or
sub
lret
fcomps
xor
out
nopl
stos
ja
and
xor
sub
jecxz
push
ss
jb
inc
pusha
dec
aaa
adc
in
sbbl
pop
add
out
addr16
ds
adc
fcmovu
ror
stc
jns
xchg
mov
xor
jmp
insb
cmp
inc
jns
jecxz
clc
mov
xchg
enter
xor
aad
or
dec
or
pop
pop
and
and
pop
xlat
xor
xchg
cmp
xor
jae
mov
in
stos
in
sub
pop
jb
orb
int
mov
popa
cs
mov
pop
dec
push
inc
mov
jns
xor
pop
jmp
ficomps
or
and
cltd
dec
enter
fcmovnb
mov
xchg
push
fldcw
adc
add
fnstcw
and
dec
xor
cmp
or
cmc
or
in
xchg
inc
mov
pop
test
outsb
push
push
stc
insl
jp
pop
inc
adc
cmpsl
mov
ss
and
mov
add
ds
mov
push
movsl
scas
sarl
pop
lret
xchg
pop
cmp
fwait
pop
mov
ss
stos
fdivrs
xor
outsl
push
and
cmp
mov
pushf
rcll
dec
and
popf
cmp
jno
xchg
fcoms
call
loope
dec
popa
adc
push
out
shll
xchg
imul
jno
xchg
mov
out
fstpt
in
xchg
or
out
sbb
xchg
or
orb
into
mov
rcr
adc
mov
out
stc
pop
scas
add
mov
and
xchg
add
sbb
cmp
into
mov
addr16
sub
enter
jae
movsl
xor
movsb
adc
int
mov
rorl
imul
cmp
add
stc
in
pop
push
clc
sarb
mov
cmp
loope
xchg
js
cmp
stos
std
adc
push
sbb
add
push
sub
push
out
pop
mov
mov
cmp
xchg
inc
icebp
mov
mov
ret
sub
dec
jno
xchg
xlat
pop
cli
lahf
xlat
push
stc
popl
xlat
in
mov
in
lods
fsts
loopne
je
xchg
or
adc
xor
in
in
xchg
inc
out
fstpt
aad
push
shl
xchg
mov
jg
jne
push
test
and
and
repz
add
out
xor
out
inc
inc
in
pop
aad
or
je
lods
sbb
cmpsl
repnz
stos
pop
dec
pop
and
leave
or
cmp
cmp
shrb
jp
or
rorb
jnp
sbb
inc
hlt
fsts
repz
test
lock
pop
xor
mov
lods
outsl
pop
fmuls
mov
jmp
sbb
pop
sbb
mov
and
jbe
mov
mov
ret
iret
outsl
loopne
inc
dec
ja
fdiv
push
int3
and
pop
cld
mov
dec
pop
dec
xchg
mov
aam
scas
cmp
xlat
movsb
stos
enter
xchg
sub
outsb
insl
or
xchg
mov
xor
aam
scas
sbb
mov
mov
in
lcall
inc
inc
push
call
xor
xchg
push
in
call
stc
fs
movsb
inc
test
jno,pn
iret
xchg
pop
mov
mov
fsubr
in
adc
cltd
aad
or
subb
cmp
inc
shrl
xchg
push
push
je
mov
xchg
fmuls
stos
mov
add
lock
add
add
cld
les
xor
or
sub
inc
adc
adc
push
xorl
dec
clc
out
rcl
jmp
or
add
cmp
or
xor
jl
adc
les
ja
cmp
fstps
fistpll
cmp
cmp
lock
mov
jae
sub
aad
nop
int3
mov
mov
mov
jge
leave
cmp
xchg
lock
dec
and
out
push
pop
mov
cmp
fdivrl
aaa
les
lods
shll
mov
jb
cmp
xor
mov
mov
adc
cli
sbb
dec
bnd
notl
test
jns
or
aaa
das
fisttps
cmpsl
add
inc
dec
aam
rolb
neg
lock
xor
das
mov
sti
clc
divb
iret
cmp
mov
aad
ret
mov
add
call
cmp
dec
pop
jmp
int3
and
fcmovnb
xor
jmp
cmpsb
and
push
sarl
notl
fcomps
mov
into
mov
loop
rorb
pop
sbb
sub
in
inc
inc
cmp
call
lds
lds
aam
lcall
sub
ret
clc
inc
lret
stos
sub
aas
sbb
lret
lret
dec
mov
lock
push
xor
jmp
mov
mov
test
das
mov
dec
loop
imul
fcomps
cmp
loope
mov
outsl
das
popf
out
decb
mov
je
popf
push
or
sub
jae
movsl
jnp
notb
or
ljmp
les
mov
call
jno
inc
push
xchg
cmp
pop
bound
std
push
add
das
jg
mov
shlb
mov
stos
pop
into
scas
mov
gs
and
pop
jmp
and
ss
jg
jp
lods
jae
jno
fs
push
les
dec
add
lcall
test
cmp
inc
rcrb
pop
fcmovne
movsb
cmp
fnstenv
jnp
sbb
cmp
hlt
xchg
inc
popa
mov
pop
cmc
sub
xor
repz
inc
sub
rorl
add
push
stos
arpl
loop
mov
test
xlat
dec
rorl
pop
mov
or
adc
enter
cmp
jne
pop
pop
xor
lret
cmp
mov
xchg
stos
push
ror
pop
mov
lods
clc
xor
inc
lock
jo
or
mov
sub
call
adc
shll
std
ss
fisubrl
shrl
loop
loop
mov
cld
and
xor
mov
js
jb
xchg
scas
push
aam
xorb
mov
sbb
cmp
mov
lahf
sbb
cmp
imul
pop
adc
cmp
fcmovnb
hlt
xor
sbb
mov
cwtl
mov
dec
sub
mov
add
fwait
sbb
outsb
jo
ret
ret
lds
fmuls
cmp
add
cmp
pop
orb
repz
inc
insl
jae
or
mov
jg
cmp
mov
dec
inc
nop
mov
mov
pop
adc
dec
sub
xchg
mov
or
and
cmp
out
loopne
gs
rclb
pop
test
mov
pop
adcb
lahf
mov
inc
out
pop
mov
out
lds
aad
ror
mov
pop
pop
scas
sub
test
xchg
int3
xor
inc
ds
pushf
push
mov
inc
pop
pop
mov
fwait
lret
dec
mov
imul
popf
xchg
push
jg
loope
jno
mov
lea
pop
test
out
sub
cmp
fucomip
rorl
xor
sbb
dec
shlb
dec
xor
or
jge
sub
rorl
push
mov
dec
fstps
out
fucompp
stos
pop
iret
fadd
add
mov
mov
sub
int
test
xchg
test
sbb
cld
pop
pop
scas
dec
aam
icebp
push
subb
ret
and
sbb
push
pop
test
shll
inc
cld
push
or
or
daa
xchg
pop
insl
or
pop
fsubrs
stos
enter
iret
outsl
mov
add
jbe
mov
sub
mov
ljmp
jne
or
jmp
movsb
xor
sarl
fucom
bound
or
dec
push
ss
add
int3
int
negb
push
inc
add
hlt
mov
and
jne
cltd
in
idivl
insb
rorl
aam
bound
idivb
mov
lcall
push
cmpb
push
mov
sahf
out
mov
cmc
xlat
movl
mov
fmull
mov
dec
inc
shll
dec
aad
in
xchg
out
pop
mov
repnz
test
pop
sti
in
loopne
pop
pop
out
mov
xor
stos
loopne
in
pop
pop
mov
into
rcr
cmp
mov
mov
aad
xchg
jl
movsl
adc
rcrl
mov
enter
mov
adc
cmpsb
inc
das
aam
sub
mov
flds
pop
cmpsb
adc
xchg
cwtl
cmp
sarl
fildll
mov
add
mov
and
add
sbb
ss
mov
add
cs
in
bound
inc
mov
out
or
dec
jmp
repnz
xchg
mov
std
and
sub
idivl
mov
cltd
dec
std
dec
sub
and
idivl
pop
xchg
push
xchg
or
test
xchg
dec
push
pop
xchg
cmp
pop
push
push
test
imul
push
test
dec
stos
ja
cmp
push
xor
cmpsb
shr
shrl
mov
sbb
stos
sbb
push
xor
xor
lds
lds
loopne
push
in
ret
lcall
sahf
xor
inc
out
or
hlt
loope
addr16
xchg
push
push
inc
stos
dec
mov
cmp
data16
or
sbb
insl
adc
arpl
call
and
lods
cld
mov
sbb
adc
dec
cmp
or
sbb
int
inc
pop
js
aaa
push
jbe
movb
mov
inc
clc
arpl
sbb
mov
in
in
cmp
pop
aas
push
cmp
roll
in
mov
hlt
push
jae
jbe
fldenv
fistpl
clc
mov
test
mov
shrb
fidivrl
and
and
clc
aaa
loope
push
test
mov
je
add
sbb
loope
xchg
xchg
inc
subl
xchg
xor
cmp
sub
cmp
movsb
jno
inc
mov
lds
fwait
pop
lods
std
addr16
mov
aad
add
test
pop
ss
sub
cmp
notb
jb
push
das
test
jbe,pn
lahf
adc
dec
add
aas
jno
adc
rorl
xchg
lea
aaa
or
sub
mov
inc
fistl
dec
mov
adc
cmp
xchg
mov
test
idiv
adc
push
dec
push
ja
in
aad
pop
mov
mov
cmp
xchg
int
iret
shl
cmp
cwtl
sub
lret
pop
pop
push
rorl
rcr
xor
sub
repz
mov
lock
popa
loope
stos
lock
cwtl
adc
pop
push
cmp
mov
xchg
or
iret
ja
mov
fdivrs
lcall
push
imul
fstpt
test
out
xorb
loope
mov
or
aas
xchg
fwait
imul
adc
out
push
and
mov
push
shlb
popf
xchg
popf
rcll
cli
push
adc
incl
xor
pop
add
cld
repz
fisttpl
cld
sub
push
pusha
jg
xchg
loopne
scas
mov
enter
clc
cwtl
or
mov
iret
jmp
xorb
js
xor
fidivl
test
mov
push
shr
mov
loopne
pop
mov
clc
xor
jp
stos
outsl
repz
or
mov
mov
cld
in
or
add
inc
cmp
adc
loop
out
outsl
add
adc
pop
sahf
loopne
mov
hlt
or
dec
jmp
xchg
xchg
out
adc
pushf
cmp
dec
mov
fsts
dec
dec
ja
popf
add
insl
add
rcrb
cmp
sub
mov
jp
sub
cmp
push
rcll
cmc
adc
fisttpl
adc
ja
push
aas
sbb
xchg
push
xchg
fistl
iret
ja
mov
in
or
stos
jp
iret
xchg
fnstcw
mov
jecxz
pop
xchg
shrl
pop
inc
in
stos
mov
xchg
mov
jo
ja
cmp
jo
push
xchg
mov
push
xchg
cmp
jo
int3
rcrb
pop
mov
adc
cmp
adc
sub
mov
sbb
fcomps
push
add
fucomi
repnz
jmp
pop
aam
fistpll
jns
stos
int
roll
cmp
inc
shrl
cli
fnstcw
jo
cmp
mov
push
dec
js
xchg
je
push
lahf
lods
mov
push
xchg
xchg
sbb
push
xor
int
or
test
pop
mov
imulb
dec
adc
das
inc
iret
popl
cmp
mov
adc
mov
outsl
int3
cmp
jb
or
mov
dec
add
sbb
addr16
mov
sbb
jnp
mov
cmp
jns
dec
add
fcompl
insl
in
aam
enter
push
hlt
bound
push
and
les
in
outsb
push
mov
xor
shr
mov
dec
es
dec
pop
xchg
inc
jbe
gs
mov
loopne
mov
cmpsb
les
lret
lahf
mov
mov
cmp
stc
sub
lock
les
das
inc
mov
ret
inc
inc
and
xor
pop
inc
push
fmull
enter
cmp
xchg
adcl
ds
es
fndisi(8087
and
daa
fcmovne
cmp
jl
cmp
push
pop
cs
std
mov
sub
aad
add
ret
jns
pop
enter
pop
push
fldt
or
aam
fsubrl
jmp
dec
ret
shrb
int
xor
push
lds
cmp
adc
imul
xchg
fs
mov
fldl
sbb
stos
or
pop
addb
xor
inc
inc
enter
xor
push
leave
xlat
lret
or
pop
and
rcl
xchg
sbb
ss
ds
or
mov
push
negl
jmp
pop
adc
dec
push
push
mov
push
mov
lret
sbb
aam
mov
stos
cmp
fistps
in
mov
push
iret
cmp
aas
sbb
cmpsl
cmp
outsl
lcall
xlat
cmp
into
cmp
loopne
lea
loope
pop
add
dec
cmp
add
add
rclb
add
or
push
inc
or
rcll
test
lea
lock
jp
xor
and
sub
in
clc
lret
add
mov
lret
clc
sub
jmp
xor
ja
dec
sub
pop
aad
or
push
pop
xchg
addl
xor
loop
aam
clc
sahf
repnz
sub
pop
and
loopne
push
xor
inc
mov
imul
xor
mulb
add
les
mov
ljmp
lea
stos
cmpb
dec
adc
mov
sub
xor
in
push
in
mov
mov
negl
dec
nop
xor
aas
sbb
cwtl
fsin
cmp
push
dec
mov
mov
clc
dec
pop
xor
fwait
xor
pusha
jb
mov
in
or
fidivrs
inc
fidivl
ja
jae
aad
and
push
fbstp
dec
mull
lahf
jb
xor
mov
jge
loopne
cmp
push
inc
jb
cmp
pushf
mov
insb
jmp
stos
cmp
inc
cmpsl
pusha
or
sub
dec
cmp
leave
mov
popf
ja
fdivrl
lock
lret
clc
jno
mov
mov
pusha
mov
icebp
cmp
mov
ljmp
lds
pop
pop
mov
fwait
mov
inc
sub
add
repz
pushl
and
test
mov
mov
cmp
push
pop
push
loope
pusha
fidivrl
jne
out
push
inc
adc
mov
outsl
ror
cli
push
mov
bound
push
loopne
enter
ficompl
mov
sbb
jecxz
in
mov
sub
pop
mov
push
jae
dec
push
mov
fisttpl
dec
int3
jne
jns
in
add
xor
ret
int
pop
lods
mov
mov
jae
pop
movsl
push
scas
insb
addr16
jbe
xor
popf
jns
enter
cmp
dec
aas
adc
std
cmp
outsb
push
cmp
insb
and
movsl
insb
push
lret
cmp
arpl
cmpl
cltd
pop
repnz
insb
ret
sbb
dec
xor
lcall
and
adc
es
jmp
push
pop
fndisi(8087
cli
mov
mov
sbb
pop
push
sub
inc
pop
jo
jnp
jmp
or
fs
scas
mov
loop
cmpsb
mov
aam
sub
or
push
jnp
int3
cltd
aad
in
inc
pop
mov
xchg
mov
pop
push
negb
cmp
les
iret
xchg
pop
das
sub
stos
jb
sub
rclb
pop
xchg
addr16
out
movsb
sbb
cmp
dec
jmp
test
loopne
js
sbb
in
fnstenv
incl
ja
mov
dec
fbstp
mov
rcrb
enter
dec
into
xchg
mov
add
push
test
pop
lods
inc
mov
movsb
fadds
cld
iret
outsl
sbb
mov
inc
cld
hlt
sbb
push
cmpsb
mov
push
lock
xchg
insb
ret
repz
jmp
inc
mov
add
mov
adc
adc
repz
push
mov
push
mov
les
mov
mov
int3
xchg
fbstp
test
xor
inc
pop
and
inc
dec
and
rorl
pop
dec
push
xchg
mov
push
pop
push
cwtl
or
sub
lret
cmp
shrb
loope
xchg
mov
dec
jno
xchg
rcll
push
imul
das
iret
cmp
or
xchg
mov
inc
dec
jne
xchg
jns
sbb
ret
or
pop
ds
lret
int3
ja
jne
lock
loop
or
xchg
sbb
lds
popl
out
mov
repz
data16
add
cmp
imul
pop
xchg
xor
or
cltd
cs
cmc
dec
sub
xlat
mov
rep
js
pop
sbb
icebp
or
imul
pop
xchg
aad
jmp
int
pop
or
add
test
fidivl
cmp
mov
add
push
lahf
call
cwtl
dec
xchg
mov
pop
cmpsb
out
cmpsl
test
rclb
pop
mov
pop
xor
add
jnp
in
sub
mov
jg
flds
push
xor
imul
sbb
jecxz
out
ret
xorl
mov
data16
into
dec
adc
nop
stos
sbb
aad
int
and
fimuls
repnz
cmp
add
pop
xchg
mov
cwtl
mov
testb
int
shlb
imul
loopne
sub
out
fstpl
fisttps
fmull
jae
jmp
repz
dec
test
test
sar
xor
or
lods
pop
xor
lock
mov
push
adc
or
adc
hlt
inc
shr
fwait
lret
cmp
mov
xchg
testb
sar
push
sbb
scas
mov
xchg
loope
sbb
ss
fcomp
lret
jle
mov
sub
cmp
lret
and
xlat
xor
adc
push
jb
or
pop
and
gs
xchg
aad
xchg
fwait
loopne
outsl
in
in
fisttpl
mov
gs
ljmp
movsb
repz
cmp
mov
imul
inc
sbb
jp
aad
test
cli
imul
adc
loop
cmp
dec
scas
fwait
mov
inc
cmp
or
xchg
iret
pop
shlb
imul
cli
fcmovne
cmpsl
stos
popf
and
push
add
mov
inc
leave
jmp
movsb
stos
mov
filds
int
sahf
fwait
sbb
lahf
pop
jmp
or
pop
int3
jb
xchg
iret
cmpsb
xor
push
inc
iret
inc
xor
inc
fistpl
and
xchg
addr16
jo
xor
stos
sub
clc
cmp
add
popl
dec
sahf
jle
pop
int3
pop
push
inc
adc
mov
mov
pop
cmp
adc
in
push
or
es
js
mov
or
pop
push
mov
les
lea
mov
loopne
outsb
lret
cs
pop
jae
and
movsb
mov
ficompl
mov
clc
mov
jae
mov
sub
cwtl
jns
cmp
jp
mov
lahf
outsb
cmc
mov
les
dec
dec
lcall
das
sub
lods
jns
xchg
or
add
cmp
addr16
pop
inc
push
adc
xor
dec
aam
push
out
sub
cmpsb
iret
mov
cmpsl
leave
cmp
jnp
addr16
test
fstps
repz
pop
jge
int3
push
or
inc
je
lds
mov
cmp
movsl
or
mov
inc
push
rcll
ret
mov
inc
arpl
xchg
add
mov
les
mov
ljmp
insb
jne
xor
popl
mov
nop
cmp
cmp
mov
addr16
lahf
pop
push
push
fwait
xor
adc
and
cmp
add
fisttpl
mov
shll
sbb
lds
jecxz
xlat
pop
jl
out
jb
repz
mov
leave
popf
test
mov
mov
mov
add
repz
shlb
xchg
out
dec
test
aas
mov
ja
cli
xchg
bnd
xchg
divb
nop
lret
lret
push
xchg
ss
sbb
ss
stos
test
lcall
ljmp
add
mov
jb
lds
mov
fstps
sbb
pop
mov
stos
lods
sub
pop
or
int
ja
fcomps
pop
imul
imul
mov
dec
cmp
xor
pop
jno
mov
mov
or
in
mov
xor
inc
cmp
adc
std
add
hlt
iret
mov
out
dec
mov
dec
xor
incl
dec
mov
jmp
mov
movsb
xchg
add
pop
shrb
or
ficompl
pop
sub
rolb
add
sbb
std
xor
pop
stos
push
pop
dec
adc
inc
dec
ja
pop
mov
pushf
pusha
adc
cmp
test
fisubrl
jne
mov
fistps
pop
test
aam
in
or
inc
xorl
pushf
inc
sub
daa
pop
pop
and
dec
mov
add
dec
lcall
dec
das
js
js
adc
fwait
lds
je
add
sbb
sbb
lock
fs
sub
fisubl
mov
sub
dec
aaa
jnp
pop
or
sub
bound
lds
xchg
rolb
mov
leave
imul
inc
pop
call
xlat
test
xor
lea
iret
aad
cli
dec
pusha
int3
mov
mov
nop
in
xchg
xchg
loop
imul
xlat
test
mov
lret
xor
jecxz
jg
adc
jbe
ret
cmp
add
movsb
cli
lcall
mul
xchg
mov
jae
mov
add
inc
je
icebp
sub
fdivs
jmp
neg
cli
jp
mov
jge
push
dec
xor
adcb
fists
push
push
xchg
dec
jbe
add
orb
les
sahf
push
test
lahf
lcall
cld
or
aad
sub
aad
in
loopne
mov
mov
mov
or
mov
push
mov
fdivs
lock
xor
jnp
jmp
lcall
lret
add
inc
dec
sahf
jnp
fistps
mov
icebp
or
vpsadbw
jmp
outsl
mov
movsl
xchg
add
jne
cmpsl
out
out
pop
fisttpl
lea
mov
mov
push
push
std
enter
jmp
enter
xchg
add
push
and
data16
dec
mov
jge
add
mov
sbb
adc
adc
sbb
sub
aad
xchg
push
call
mov
lret
mov
xchg
xchg
aaa
mov
ss
fcomps
adc
test
push
fsts
mov
mov
jbe
aam
rol
rcrb
fisubl
adc
into
mov
icebp
testb
xchg
inc
mov
aam
out
rcrb
pop
shlb
pop
fld
pop
fdivr
test
pop
sub
add
sub
adc
sub
orb
cmp
gs
sbb
push
mov
adc
dec
cmpsb
icebp
jne
sbbb
out
pop
out
popa
shll
in
or
lods
imul
xchg
push
dec
rcl
xchg
aaa
sarl
imul
push
adc
mov
inc
int
fisubl
xlat
fs
shl
sbb
mov
rcr
call
lock
xlat
fucomip
xor
jbe
lock
cmp
cmpsb
das
imul
inc
pop
leave
xchg
cmp
mov
mov
mov
sub
cld
pop
sbb
push
mov
sbb
jbe
xor
bound
or
adc
roll
dec
nop
inc
loop
inc
add
or
xor
mov
sarl
pop
jmp
jne
jmp
or
or
fstpt
stos
sbb
dec
mov
pop
mov
push
push
xchg
sbb
mov
mov
push
mov
add
pop
xor
pop
stos
repnz
sbb
add
test
xor
ss
inc
inc
cmp
xor
clc
pop
pop
arpl
sahf
rclb
shr
jmp
nop
pop
pop
lret
adc
aam
loope
mov
pop
adc
xor
rcrb
mov
and
es
add
xchg
fistl
iret
ja
mov
enter
aaa
sub
stos
outsl
shrl
fcmovu
push
xchg
shrb
pop
mov
int
cmp
loope
inc
mov
fnstenv
add
stos
out
xlat
cwtl
and
add
mov
flds
xlat
xor
mov
inc
cmp
ja
fmull
mov
xor
mov
lock
dec
and
mov
test
in
mov
dec
pop
add
xchg
xchg
shlb
cli
cmpsb
mov
dec
push
dec
cmp
clc
lret
pop
push
notl
lds
push
xchg
popl
lret
pop
jae
loope
inc
pop
push
pop
nop
int
sub
repz
daa
pusha
or
add
sub
lcall
mov
cmpsl
pop
addr16
xor
sub
sahf
shll
cmp
xor
jnp
xor
sub
inc
dec
movsl
fwait
inc
dec
scas
sub
sub
call
adc
lret
cmp
ret
sub
adc
int
sub
mov
cli
fistpl
push
and
jne
in
scas
shrl
xchg
xchg
cwtl
sti
add
cmp
nop
xchg
sbb
shrl
and
inc
cld
call
cmp
mov
xchg
je
imulb
shrl
cmpsl
insl
sub
shl
int3
fisubrl
xor
aaa
stos
sub
add
mov
xor
adc
pop
xchg
mov
xchg
mov
arpl
xor
fistpll
dec
mov
xchg
xchg
stc
loopne
outsl
inc
test
das
pop
sub
ds
add
mov
add
jb
inc
mov
cmp
lods
xor
cmp
mov
subb
and
inc
orb
pop
loope
in
int
push
dec
daa
mulb
aas
mov
or
dec
push
je
lret
repnz
aam
mov
sub
cltd
scas
test
imul
xor
lock
xor
rcr
sbb
push
addr16
shll
ffreep
pop
ss
int
and
imull
xchg
pusha
adc
call
out
inc
or
fistps
sub
imul
lock
cmp
xchg
shl
iret
outsl
adc
jne
jl
xor
sub
and
repnz
cltd
sarl
push
call
rcl
dec
jle
dec
dec
leave
mov
rorl
ss
das
jno
ror
imul
test
mov
cld
enter
aad
fwait
lret
cld
in
imul
xorl
das
push
sub
pop
stos
mov
cltd
ret
xchg
out
cmp
dec
and
cmp
sub
ds
adc
pushf
shr
movsb
lcall
push
fnstenv
dec
add
push
xor
dec
dec
nop
mov
jecxz
mov
sbb
mov
jp
fistps
in
fwait
xchg
mov
xor
jp
or
and
ljmp
push
aaa
fcomps
nop
add
inc
jns
lcall
push
dec
fstps
or
pushf
mov
aad
test
out
int
sbb
mov
xchg
mov
adc
mov
or
and
mov
fcmovu
add
xlat
icebp
mov
lcall
jno
pushf
js
out
movsl
das
push
inc
ja
ss
stos
les
push
pop
and
push
or
cmp
ss
lret
in
movsl
aaa
xor
lds
dec
insl
movsb
lret
cmp
into
test
or
ret
enter
mov
adc
cmp
int3
fwait
mov
mov
push
dec
out
pop
mov
fucom
insb
push
test
daa
stos
sub
or
mov
ja
and
cmc
nop
mov
xchg
sub
or
rorl
scas
fstp
cmp
dec
mov
fstl
insl
jns
pop
inc
popa
shl
fcomp
js
test
outsl
sarl
push
mov
xchg
pop
fisttpl
rorl
pop
fisttpl
shll
mov
arpl
scas
movsl
xor
dec
sarl
add
insl
sub
aaa
mov
ljmp
lret
cld
in
ja
xor
or
fmul
aaa
xchg
adc
pop
data16
ja
add
gs
popf
imul
ljmp
out
adc
call
xchg
sub
or
movsl
xor
inc
out
or
xlat
xchg
and
dec
xor
jne
fwait
xor
aam
xchg
loope
std
sbb
lret
push
cld
dec
sbb
pop
clc
jmp
in
adc
imul
inc
mov
pop
fidivl
sahf
faddp
loopne
pop
xlat
xlat
dec
daa
dec
push
in
nop
or
push
sub
in
fstpl
inc
jmp
mov
cmp
jp
iret
stos
cmp
aam
in
fsubs
sarl
int
lds
jge
aas
and
mov
and
xor
pop
jge
push
and
jno
imul
add
scas
and
negb
mov
adc
mov
xchg
and
scas
cmp
mov
sub
scas
dec
inc
sub
jne
shll
sbb
ds
jle
loope
test
or
popa
ja
in
aam
test
loopw
outsb
movsl
repz
pop
ja
loop
outsl
mov
in
mov
mov
adc
xlat
adc
mov
in
jge
sbb
lcall
dec
aad
dec
jle,pn
aam
pop
test
xor
sub
mov
xchg
loope
inc
stos
xchg
or
mov
xchg
cmp
adcl
push
cmp
cmpsb
xor
pushf
cmp
jp
out
fimull
test
aam
gs
mov
and
sbb
mov
dec
cmp
hlt
shll
test
stc
lcall
pushf
out
cs
ja
lcall
lods
mov
inc
fcomps
loop
lcall
ss
imul
mov
sub
mov
jg
jecxz
jbe
into
scas
addl
pop
sub
ss
push
xlat
xchg
dec
mov
inc
outsb
roll
sub
pop
pop
mov
cmpb
cmp
pop
pop
pop
jg
push
insl
inc
sub
adc
add
adc
or
fdivr
jbe
inc
xchg
xlat
xor
insb
xchg
or
cmp
pop
insb
mov
cmc
sbb
iret
and
adc
xor
jl
sti
in
cmp
add
test
popf
das
push
test
pop
repnz
stc
enter
fdivp
dec
insb
jg
ret
mov
hlt
add
nop
add
flds
stos
dec
inc
and
dec
lods
xchg
sbb
jne
in
fcmovnb
std
or
ja
xchg
outsl
out
inc
pop
popa
jae
jle
mov
subl
mov
mov
leave
cld
xchg
hlt
sbb
in
mov
cmp
movsl
xchg
fincstp
add
push
xchg
sub
push
jmp
subl
lock
ret
ret
in
add
ret
mov
push
popf
std
xlat
sub
fcoml
xor
jmp
aas
add
mov
sub
xchg
repz
pop
aam
pusha
in
and
test
aad
dec
push
adc
cmc
push
aaa
cmp
pop
aad
and
mov
jno
lret
cmc
mov
pop
or
xor
mov
and
mov
addr16
stos
dec
sub
scas
repnz
sbb
dec
imull
out
in
aad
pop
sub
jl
test
hlt
cmp
enter
sub
xor
sbb
fstpt
fwait
xor
inc
data16
lret
dec
xchg
int
jg
subl
outsl
pop
push
cmp
pushf
repz
inc
int
mov
mov
mov
inc
and
adc
test
scas
popf
pop
cmp
jns
xchg
int
mov
scas
xchg
movsb
adc
mov
inc
xchg
add
shrb
aam
ja
data16
ja
scas
arpl
xchg
hlt
sbb
fnstsw
push
xchg
or
incl
test
pop
aam
inc
fcmove
and
addr16
pop
enter
les
rclb
xlat
cmp
push
push
pop
xor
and
add
into
clc
sbb
mov
ficoml
adc
xchg
rolb
pop
sti
rorl
dec
mov
arpl
mov
stc
out
add
lcall
in
xor
pop
in
cwtl
or
mov
mov
data16
cmp
mov
xor
mov
push
cmc
push
dec
push
or
add
add
fldt
jno
cmp
test
push
addl
imul
pusha
imul
mov
popa
xor
dec
mov
inc
mov
in
mov
iret
sbb
fildl
xchg
outsl
into
xchg
mov
fstpt
mov
mov
mov
lock
int
fs
lahf
idivl
adc
in
aad
or
push
scas
call
sbb
cmp
lds
inc
sahf
add
dec
sbb
movsb
je
int
mov
inc
inc
mov
fidivl
dec
pop
out
decb
xchg
cmp
mov
clc
subl
ss
int3
push
ja
pop
loopne
cmc
cltd
popl
mull
lods
out
cmp
add
fsub
icebp
ja
sub
add
les
pop
inc
pop
or
iret
ja
xchg
mov
push
add
jge
pop
ret
sbb
popf
add
adc
testb
inc
jp
cmp
mov
fwait
movsl
jae
mov
out
aad
xchg
mov
pop
les
add
or
xchg
mov
cmp
xchg
out
out
js
or
aam
add
add
jae
test
push
inc
cli
inc
int3
out
or
cmpsl
or
jns
sub
mov
sbb
cmp
pop
mov
loopne
inc
and
scas
lock
inc
pushf
add
push
jmp
loope
mov
add
divb
jns
and
or
pop
in
xor
int
mov
stos
neg
or
lods
mov
jb
movsb
xor
hlt
and
js
cmp
xor
and
loop
aam
decl
push
cmpsl
cmp
xor
je
inc
bound
int
jns
cmp
jne
sbb
jg
push
sbb
lods
pop
sbb
out
and
cmp
inc
inc
push
dec
or
xor
vfrczps
cmp
lcall
decb
lret
loop
fwait
clc
cmpsl
loopne
jp
shlb
push
and
fcoml
mov
cli
or
mov
imul
lret
or
sub
cmpsl
pop
or
fcomip
mov
push
cmpsb
xor
sbb
dec
repnz
aam
fnsetpm(287
mov
scas
xlat
mov
jmp
push
ret
jno
bound
das
fwait
push
fcoms
and
push
repz
cwtl
dec
or
push
mov
xlat
jl
dec
pushf
jb
or
stc
movsb
icebp
mov
ja
rcpps
mov
mul
fistl
notb
stc
sahf
shrb
jne
push
in
adc
int3
ret
xor
adc
mov
mov
stc
push
and
cmp
sahf
cmpsb
pushf
jo
lret
dec
inc
std
pushf
les
test
cmc
repz
add
dec
cmp
iret
xchg
mov
mov
push
mov
mov
mov
testb
push
jmp
mov
out
lcall
push
sarb
fs
fimull
insb
mov
cmp
mov
xor
rcr
sub
enter
mov
aad
mov
stos
fiaddl
mov
xor
test
aad
or
push
cs
sbb
inc
and
xchg
cmp
or
aad
jnp
or
ss
mov
jmp
pop
enter
sub
dec
ret
lea
add
clc
leave
mov
xchg
mov
inc
in
ret
mull
mov
xchg
insb
aas
loopne
in
pop
xchg
and
movsb
xchg
sbb
repz
and
int
mov
int
sub
lahf
mov
pop
inc
mov
fs
ljmp
movsb
cmpb
push
lea
mov
adc
or
pop
or
inc
fcomps
or
pop
sub
and
mov
jp
test
lret
jg
lods
push
iret
stos
push
add
lret
sub
dec
jb
shr
add
pop
fsubr
sub
add
sahf
sub
lds
dec
mov
xor
adc
sub
cmp
inc
int
out
xor
ret
fidivl
mov
out
pop
push
jecxz
popf
enter
xchg
cmpsb
add
xorb
mov
mov
outsl
pusha
xchg
push
sub
imul
cmp
add
jbe
jbe
xor
imul
jle
sub
in
cmpsb
cmp
sub
mov
sub
pop
push
dec
outsl
lea
xor
xor
fbstp
dec
cmp
jl
xchg
inc
sbb
mov
pop
push
inc
jp
push
dec
pop
pop
cmp
lcall
clc
xor
std
xor
dec
clc
and
int
fwait
or
insb
sahf
inc
fcmovu
inc
or
push
in
sub
test
jnp
test
sub
movsb
shl
repz
mov
and
ss
sbb
xchg
fcmove
push
xchg
movsl
sub
adc
fs
mov
xor
aad
mov
inc
mov
aas
xchg
mov
push
or
cmp
dec
les
popf
cmp
ficompl
inc
bound
incb
movsb
jmp
out
stc
insb
lds
sub
or
dec
loope
lcall
test
pcmpeqd
ja
mov
mov
mov
inc
test
xchg
pop
fadds
rorb
test
fiadds
jecxz
test
mov
ret
pop
push
addr16
or
inc
mov
inc
push
test
fmuls
cmp
mov
pusha
xor
iret
fcomi
inc
xchg
cmp
mov
stos
push
loop
and
pop
das
cmp
aas
cmp
loopne
jno
cs
ljmp
leave
aad
or
mov
sbb
fsubrs
sbb
cltd
movsb
add
adc
test
dec
mov
mov
addr16
or
neg
imul
mov
jp
dec
sub
test
or
test
ror
xchg
mov
jmp
fcmovnbe
mov
cmp
mov
sub
sbb
insl
incb
jg
in
jno
jp
icebp
mov
mov
notl
hlt
adc
or
pop
fistl
pop
cmp
jne
pop
sub
lret
sbb
xchg
loope
or
sahf
out
inc
popa
popf
mov
and
andb
out
dec
movsl
xchg
popa
lds
pop
jbe
movsb
adc
ret
call
pop
push
adc
test
pop
fcmovnbe
xchg
xor
repz
in
imul
add
loop
ds
jo
repz
push
sub
sbb
mov
pop
add
fldenv
mov
push
jo
fdivrs
ss
mov
xor
ds
xor
xchg
or
mov
mov
rcll
add
or
pop
shrl
adc
mov
inc
sub
mov
dec
or
fsts
adc
or
jo
mov
iret
outsl
push
inc
in
pusha
shll
pop
testl
sbb
mov
fwait
iret
ja
mov
jo
inc
lock
rorb
xor
cwtl
pusha
cmp
nop
fstps
xor
sub
or
test
fadds
ljmp
inc
xor
mov
jnp
iret
xchg
icebp
inc
pop
sbb
inc
call
xchg
stos
mov
push
xchg
jae
cmp
xlat
xlat
in
or
out
dec
repz
xor
xchg
dec
stos
lea
fs
jae
xor
push
mov
jge
and
in
add
fdivrs
xor
sahf
jg
cltd
mov
aaa
es
outsl
xorl
xchg
call
sub
mov
mov
repz
lock
pop
dec
jmp
in
cmc
xchg
lcall
cmp
push
outsl
sub
pop
outsl
cli
mov
push
fnstcw
mov
ficompl
inc
push
fisttpll
adc
mov
sbb
cmc
clc
jecxz
push
dec
add
dec
test
stc
fidivl
sbb
mov
push
sbb
push
pop
shl
xchg
stos
add
ljmp
outsl
mov
pusha
cmp
mov
or
mov
fxch
or
fldt
mov
jo
or
push
sbb
push
cmc
dec
inc
cmpsb
xchg
movsb
sub
mov
shrl
and
shlb
xchg
popf
outsl
ss
and
dec
dec
inc
pop
jnp
outsl
ss
dec
add
jl
divl
outsl
mov
mul
jp
ficomps
adcb
pop
xchg
mov
in
insl
lret
dec
fucomi
testl
dec
in
cmp
lcall
pop
fisubrl
inc
jae
ja
or
push
mov
lock
fldcw
cltd
or
pop
cmp
xor
push
push
or
xchg
jae
and
push
xor
xchg
negl
xchg
aam
dec
mov
jno
cwtl
jnp
mov
aad
jp
sbb
je
int
fidivs
xor
lret
push
add
adc
les
sbb
xor
pushf
in
enter
xchg
sbb
push
pop
mov
sub
dec
add
out
pop
or
pop
iret
sbb
cmp
adc
clc
mov
push
adc
gs
repnz
push
push
cwtl
jne
fldcw
push
lcall
ja
inc
or
fcmovnu
push
mov
rcr
repnz
push
fisttpll
jl
js
push
adc
pushf
cld
enter
push
js
xor
sub
scas
xor
sub
pop
xchg
ja
dec
negb
adc
cld
in
pop
scas
enter
in
xlat
mov
adc
pusha
xor
mov
cmpsb
ja
rorl
rclb
lret
iret
repnz
push
xor
iret
repnz
push
mov
enter
jae
repnz
mov
nop
push
mov
mov
insb
mov
jle
mov
rcrl
fdivl
fistpll
data16
cwtl
jg
in
xor
add
js,pn
xchg
push
mov
pushf
mov
sbb
cmpsl
lcall
and
sub
xor
cld
das
scas
inc
xor
add
aad
add
add
pop
or
mov
add
mov
js
or
push
fcmovbe
sbb
xor
les
fdivs
jge
adcl
fcoms
jo
sub
xor
cmp
int
sub
mov
and
testl
dec
mov
mov
out
jecxz
cmp
jns
cld
enter
ret
arpl
sbb
fmul
ss
xchg
adc
dec
pushf
mov
inc
sub
lock
out
fsubrl
add
push
sbb
or
xor
shlb
mov
xor
lods
pop
push
jmp
js
repz
dec
add
outsl
sub
lock
loope
xor
and
xorb
test
outsl
leave
dec
mov
loope
pusha
cmp
mov
testb
arpl
push
mov
sbb
or
mov
ljmp
rcll
push
pop
xor
nop
jo
inc
cld
inc
fnstcw
cwtl
jl
sbb
call
sbb
shlb
ss
jb
xor
shrl
cmp
outsl
xor
stos
fidivl
add
jno
mov
iret
outsl
pop
or
xor
sub
push
push
pop
sbb
movl
insb
imul
or
mov
mov
mov
lods
lock
outsl
jns
js
push
fsubrs
add
js
clc
lock
pop
pop
test
adc
push
es
xchg
dec
or
leave
mov
mov
nop
push
or
imul
fnsave
pop
xlat
lock
cmp
ficomps
cs
rcl
orl
inc
push
mov
popa
ja
notl
arpl
arpl
cmp
jnp
ja
and
pminub
out
andb
testl
sahf
xor
cmpsl
rcr
jmp
jo
ret
cld
pop
jb
ja
enter
imul
lret
ret
add
orl
dec
push
jno
push
or
fwait
out
les
addr16
out
xchg
sub
std
fnstcw
sub
pop
enter
mov
xchg
mov
xor
ret
enter
pushf
and
pop
dec
arpl
cmp
xchg
add
pusha
loope
outsb
ss
inc
lcall
cwtl
xor
or
or
hlt
fmuls
mov
movsl
xchg
repz
decb
cmp
dec
dec
or
ss
cmc
jbe
or
or
aad
int
cld
dec
outsl
adc
cmpsl
xor
aad
bound
jecxz
popf
cmp
cmp
cltd
jb
int3
addr16
push
pop
sahf
push
pushf
pop
test
cmc
cmp
enter
lods
xor
add
pop
jge
inc
and
cld
or
loop
or
mov
pop
jae
bound
int
les
fmuls
pop
pop
and
jg
fidivrl
lods
bound
inc
movsb
add
fs
sub
addr16
mov
add
cmp
sub
jle
mov
dec
imul
decl
cmp
mov
xor
pop
imul
jae
lahf
and
outsl
jb
xor
insl
dec
fmull
and
jnp
loopne
jp
ficompl
jnp
fidivrl
fisubrl
dec
mov
out
jmp
cltd
add
pop
xchg
or
aam
sub
jp
sub
stos
xor
stc
sbb
mov
mov
or
sub
lret
jmp
popf
mov
or
fidivrs
pop
dec
xchg
es
mov
xor
out
dec
pusha
cmp
shrl
cmpsb
sub
or
in
jl
lock
fstpl
stos
mov
mov
fimull
mov
test
inc
notb
push
jne
mov
xchg
aad
pop
mov
enter
imul
iret
cmp
testl
loope
int
mov
cmpsb
repnz
or
xor
pop
xchg
insb
push
mov
call
push
shlb
hlt
ds
jnp
cmp
push
cmc
fcmovu
ss
add
inc
adc
fstpl
aad
pop
mov
or
enter
popf
dec
cmp
mov
imul
push
sub
iret
xor
add
xor
add
add
in
divl
or
popa
inc
push
adc
add
jae
out
stos
mov
ja
or
outsl
mov
cmpsb
adc
dec
pop
je
ljmp
les
mov
test
adcl
cld
ret
cmp
popa
inc
mov
das
stos
or
testl
iret
bound
sub
ret
push
pop
dec
sub
lods
aam
imul
mov
or
pop
mov
mov
test
and
and
or
jns
push
loopne
cmc
popa
lret
ficomps
inc
push
rcr
in
test
mov
mov
out
jmp
les
mov
adc
mov
loopne
xchg
cmp
mov
dec
daa
sbb
add
loop
cmp
dec
cltd
imul
or
or
into
inc
push
xchg
fisubrs
pop
dec
push
ret
dec
call
pop
loopne
cmp
rcr
insl
jp
leave
sbb
mov
int3
les
sbb
sub
js
fwait
pop
dec
adc
add
pop
xlat
dec
mov
cmp
fisubrl
sub
push
es
xor
aas
aad
mov
js
cmp
pop
cmp
pop
adc
mov
sbb
addr16
scas
cmp
xor
fdivs
jg
ss
xor
je
and
push
mov
test
cltd
jbe
lcall
bound
mov
xchg
lods
or
push
or
sti
xchg
in
sbb
mov
inc
gs
insb
or
cmp
cmp
jno
mov
dec
pop
int
or
push
dec
sbb
adcb
test
in
jae
mov
les
in
js
xchg
mov
imul
mov
mov
mov
adc
dec
lahf
xchg
int3
dec
mov
push
movsl
in
inc
shrl
fldcw
xor
aas
pusha
mov
sbb
or
push
fs
in
dec
or
lods
jp
dec
adc
pop
adc
xor
ja
or
dec
ljmp
push
xor
sbb
test
daa
cmp
cmp
ss
call
inc
jb
stc
or
test
sbb
ss
jp
movsb
loopne
push
daa
ficomps
add
pop
in
enter
aam
fcomp
adc
adcl
int
in
inc
add
std
addr16
jno
enter
dec
mov
dec
jp
and
addl
into
push
aam
data16
daa
xor
aam
jnp
rol
das
sbb
rcrl
dec
dec
or
js
aas
xchg
push
ret
cmp
fisttpl
mov
js
test
mov
test
cmp
enter
sbb
js
pop
push
es
jecxz
fisubrl
pop
inc
repnz
pop
outsl
push
or
mov
xor
mov
sbb
test
in
dec
rcll
test
cmp
pop
mov
and
mov
mov
fisubrs
aam
cwtl
inc
imul
out
jg
int3
mov
fmul
cmpsl
push
out
lock
xor
push
xchg
mov
inc
xchg
pop
jmp
dec
lock
fistpl
or
mov
lret
lea
mov
dec
test
fadds
adc
jle
jge
movsb
ja
push
jae
cmp
pop
mov
adcl
popf
out
pop
daa
pusha
call
cmp
cli
and
cmpl
xor
push
addr16
mov
xchg
js
fwait
inc
lock
enter
shl
sub
mov
cmp
das
shrl
cmp
enter
inc
xor
std
pop
dec
lret
sbb
cmp
push
jbe
add
out
jno
sub
call
jg
sub
fistps
lahf
repnz
inc
pop
aaa
dec
repnz
pop
xchg
hlt
fsubrs
inc
push
or
dec
iret
inc
negl
jbe
outsl
adc
test
in
das
mov
mov
sub
lock
pop
or
aas
fs
scas
cmpl
addr16
xchg
aad
dec
push
rorb
loopne
out
popf
xor
push
testb
xor
jmp
lea
cmpsl
pop
sbb
pusha
lret
xor
xchg
jp
xor
sub
push
ror
iret
in
mov
push
cmp
ficompl
fnstsw
out
pop
cmp
jmp
xchg
jge
and
or
fptan
or
cmp
push
or
mov
sub
jo
cmp
lods
int3
test
fs
sub
push
mov
jecxz
or
scas
or
jmp
jb
xor
sbb
push
jnp
or
pop
cmc
push
out
rcrl
xor
push
xlat
sub
ljmp
fldt
imul
push
aad
fwait
mov
rcr
ret
imul
sub
std
rcrl
sbb
out
push
pop
cmp
push
outsb
pop
loope
jns
in
stos
aad
fcmovb
or
js
jmp
pop
popa
cmpsb
es
dec
mov
cmp
and
ljmp
inc
fmuls
int3
mov
mov
push
pop
push
sbb
jle
ds
sarl
adc
inc
ficompl
bound
mov
or
andb
shlb
imul
cmp
clc
add
jle
shlb
jmp
add
ja
xor
pop
loopne
lcall
test
cmpsl
mov
dec
incl
rorb
outsl
sbb
loopne
aad
cmp
test
sarb
sbb
sub
inc
mov
mov
push
fists
lret
fsubl
inc
dec
xor
pusha
int
clc
cmp
push
pop
ficompl
push
add
out
outsb
jmp
movsl
xchg
std
ljmp
xor
push
mov
push
popf
mov
xlat
jmp
call
pop
xor
mov
xor
ret
push
idivl
repnz
push
test
icebp
xor
or
sbb
sub
and
outsl
mov
outsb
xchg
jb
out
repz
rcrb
pop
pop
mov
dec
mov
add
jae
loop
pop
jl
mov
test
test
push
inc
or
jecxz
aam
jecxz
fwait
cmc
fistpl
sub
push
mov
inc
jecxz
in
testl
jmp
movups
in
inc
shlb
notl
lds
push
add
xchg
idiv
push
movsb
adc
pop
push
dec
xor
cli
inc
adc
sub
iret
aaa
push
mov
sub
mov
shl
cmp
cmpsb
mov
mov
inc
fcoms
push
pop
xor
stos
subl
icebp
les
add
jb
or
lock
fsubs
jg
sub
add
idiv
adc
add
pop
mov
outsl
pop
jo
stos
mov
ljmp
loope
add
mov
xchg
lahf
mov
pop
inc
dec
jecxz
pop
xor
xor
pushf
push
mov
push
jecxz
cwtl
cmp
push
jnp
enter
je
in
mov
rorl
repnz
pop
pop
test
testl
dec
mov
push
cltd
push
dec
mov
incl
mov
add
sahf
rcr
cmp
xor
cmc
or
cli
and
push
jnp
lret
es
fcmovu
or
jl
aas
ss
loopne
mov
jnp
pop
sub
push
mov
scas
bt
aam
inc
xlat
add
adc
add
in
xchg
push
jg
popf
cmpsl
or
out
movsl
sbb
or
addr16
lret
sub
out
pop
stc
js
fsubs
aaa
push
addr16
outsb
test
jmp
lret
dec
sub
pop
pop
inc
lcall
scas
sarb
inc
jb
sarb
mov
add
mov
pop
pop
lret
enter
imulb
cmp
mov
add
and
mov
push
cmpsb
cmp
adc
fnstcw
daa
das
cmp
and
scas
xor
loop
enter
sbb
add
cmp
repnz
pop
sbb
fisubrs
stos
or
shrl
fwait
outsl
idivl
sbb
leave
outsb
jno
mov
inc
push
loop
cmp
testl
sub
sub
outsl
mov
iret
ja
or
mov
leave
arpl
or
fidivrl
inc
cmp
arpl
mov
sub
test
or
xchg
ss
lock
mov
jo
push
push
jb
jnp
jg
jp
insl
ret
fdiv
adc
mov
pop
les
sarl
jb
fidivrl
adc
gs
mov
enter
xchg
inc
mov
pop
out
test
clc
or
cmp
cli
fidivrl
add
adc
cmp
xor
pop
jp
jle
roll
mov
pop
sbb
dec
mov
pop
leave
add
pop
fisubl
lcall
push
push
add
lock
push
aad
mov
lock
mov
sub
add
jno
adc
sub
ror
adc
imul
ja
or
mov
fwait
test
push
inc
test
push
into
ret
aam
rolb
adc
sti
mov
les
mov
jbe
xor
out
movsl
sub
and
jnp
movsl
lock
and
push
dec
out
ss
fmuls
std
or
jecxz
cltd
add
or
adc
push
sub
push
aad
add
js
js
xor
add
xor
ja
ss
xchg
outsb
adc
ja
sbb
jnp
out
lcall
mov
aas
sub
cmc
cmp
leave
push
inc
cmp
adc
mov
jno
sbb
lcall
imull
sub
ss
xchg
adc
jbe
or
add
pop
repz
jae
dec
lock
cmp
out
lods
mov
mov
ljmp
xchg
dec
jecxz
cmp
lds
sub
test
cmp
push
jp
mov
mov
adc
stos
sub
cmp
jns
sbb
leave
fsubrs
adc
xor
jp
inc
dec
push
adc
cmp
xor
inc
dec
fistps
test
dec
sub
xor
inc
lcall
jae
pop
jb
lea
scas
mov
jmp
imul
pop
cld
cmp
mov
fistpl
in
neg
sub
ja
dec
or
jae
ljmp
mov
aas
outsb
jmp
sbb
lock
fdiv
xchg
je
push
aam
push
sbb
ja
mov
addr16
xor
add
mov
jg
int
push
xlat
fistpll
pushf
ret
pop
jae
sbb
outsl
mov
fnstcw
mov
enter
jmp
sbb
xchg
sub
or
and
movsb
mov
stos
pop
mov
ss
sahf
sbb
shrb
divl
mov
std
enter
or
lds
dec
popa
jns
in
xchg
xchg
testl
stos
mov
iret
dec
push
pop
ficoml
fldt
mov
mov
cmc
inc
jmp
outsb
and
xor
ret
aad
lret
add
repz
loope
ror
sbb
push
inc
mov
xchg
enter
jp
pop
imul
jb,pt
fwait
push
or
cmp
jb
push
stos
sbb
aam
or
mov
add
enter
aad
ret
imul
dec
fstpt
push
xor
adc
or
filds
xor
std
pop
leave
sahf
mov
ds
jmp
or
add
add
xchg
enter
mov
mov
xlat
rcrl
mov
dec
jle
adc
test
repnz
lods
mov
repz
enter
and
outsb
fxch
mov
adc
sarb
mov
and
sbb
lcall
es
and
mov
scas
daa
push
xchg
addr16
or
nop
lock
ljmp
aam
imul
add
addr16
nop
std
cmp
pop
sbb
cld
inc
daa
cmp
mov
mov
jp
stos
mov
pop
jae
cld
dec
fidivrl
outsl
or
movsb
div
iret
ja
aaa
mov
hlt
push
sub
es
mov
adc
rcrl
or
xchg
hlt
dec
lret
and
ds
cmp
xchg
mov
mov
shrb
or
push
xor
mov
pop
push
dec
scas
cmp
xlat
and
aam
fcmovnbe
inc
inc
dec
loopne
mov
jge
ret
push
adc
dec
cmp
outsb
sbb
dec
mov
inc
xchg
pop
xchg
aas
push
adc
in
cmpsl
inc
lock
pop
hlt
jae
or
or
fcmovnu
shr
dec
and
leave
jmp
push
push
and
xlat
lahf
push
sub
enter
sbb
cld
ja
pop
xchg
jae
jns
js
lahf
fadds
cltd
jns
mov
fdecstp
or
lock
jb
or
call
or
cmp
adc
add
adc
add
arpl
sub
adc
pop
mov
mov
mulb
mov
insl
sbb
insb
ss
cmp
cmp
dec
outsl
scas
inc
fisubrs
dec
or
jae
ljmp
mov
inc
xor
sbb
pop
leave
jae
and
xor
jp
dec
cmpsb
or
dec
jl
or
xor
jo
cmp
and
std
and
iret
pop
ficompl
mov
push
lock
ret
popf
mov
xchg
daa
jns
fldenv
and
lock
xor
pop
xor
fimull
push
xor
scas
cmp
aaa
push
shr
xchg
xchg
lock
stos
cmp
xor
cmp
sub
popf
pop
mov
sbb
filds
add
cmp
je
popf
pop
xor
stos
dec
fcoms
lock
mov
enter
mov
call
cli
ds
imul
add
flds
cmp
pop
add
or
mov
in
push
xor
push
addr16
xor
dec
in
leave
ja
mov
mov
lock
lcall
pop
dec
in
sbb
mov
insb
pop
adc
enter
mov
ret
fiaddl
lock
dec
mov
mov
add
pop
stos
cmp
scas
jbe
ss
fsubl
stos
test
insl
pop
xor
and
and
xor
pop
jb
ficompl
jno
and
push
fwait
loop
mov
scas
movsb
test
pop
or
mov
aaa
mov
mov
into
jg
test
adc
cli
fldl
xor
sbb
fldcw
add
ja
cmp
jne
repz
adc
enter
push
adc
jo
cltd
and
leave
shll
ljmp
add
sub
sbb
dec
sarb
cltd
insb
cmpb
adc
adc
test
ds
push
shlb
lock
repz
jne
mov
xor
sbb
or
dec
pop
jp
pop
xchg
dec
rclb
push
xchg
dec
int
sub
outsl
sub
xchg
into
inc
cmp
xor
pop
sub
lret
xlat
xchg
imul
dec
and
adc
mov
aas
cmpsl
cli
shll
fcomps
or
pop
cmp
adc
lock
or
sub
stos
and
dec
pop
in
cmc
dec
xchg
jo
inc
adc
imul
in
adc
sub
mov
push
aam
test
push
inc
mov
fstps
outsl
fnstsw
and
jno
dec
in
sub
outsl
or
xchg
lret
lret
imul
ficompl
mov
push
in
lcall
ret
xor
cmp
mov
movsb
pushf
xor
add
pushl
xor
xchg
dec
ja
enter
mov
sub
enter
in
jecxz
mov
arpl
mov
jnp
lods
mov
out
xchg
mov
mov
hlt
icebp
jge
cmp
sub
or
xchg
adc
mov
scas
sahf
shlb
incb
lock
xlat
in
sub
into
pushf
repz
enter
mov
repz
mov
ja
jno
movsb
fstpt
push
hlt
push
mov
fcomp
xor
ss
add
out
cltd
leave
or
repnz
jnp
out
inc
in
mov
std
mov
sub
sbb
loope
add
push
lds
xor
jno
stos
pushf
fnsave
sbb
xor
add
xchg
push
mov
cmp
jno
jle
jne
xor
hlt
mov
fisubrs
lods
xor
pusha
dec
mov
jl
inc
cli
outsb
xchg
push
cmp
and
jae
lods
mov
outsl
psubd
cmp
dec
mov
int3
roll
mov
cmpsb
xchg
mov
idivb
jae
xchg
pop
push
dec
js
or
cmp
shl
ljmp
sbb
sbb
std
cmp
dec
fisubrl
mov
pop
rcrb
mov
hlt
arpl
repnz
mov
shll
jae
ds
and
mov
rcrb
lret
xor
or
outsl
arpl
movsb
cmp
fmuls
xlat
mov
insb
push
mov
cltd
xlat
clc
xor
dec
add
jae
sub
xor
jae
aaa
or
rorl
cli
pop
pop
bnd
hlt
cmp
shlb
mov
ljmp
lea
test
out
aas
dec
mov
outsl
add
pop
add
xchg
jo
pushf
lds
fs
fcomip
test
mov
jge
push
mulb
fadd
push
dec
fldenv
iret
xlat
stos
in
add
xlat
cmc
or
lods
lods
push
mov
test
push
es
lds
pop
add
mov
loopne
cmp
in
mov
movsl
test
rcll
call
inc
jae
cmp
inc
pop
cmp
lock
xchg
movups
out
test
add
pop
cwtl
sub
push
inc
lcall
lods
mov
mov
xchg
sub
leave
jo
mov
inc
test
out
xlat
jcxz
fcmove
cmp
fwait
cmpsb
cld
ja
insb
sbb
lock
mov
inc
add
sbb
pusha
aad
movsl
xor
out
outsl
mov
outsb
dec
into
inc
dec
pop
jl
sbb
aad
sub
adc
mov
dec
push
xchg
sbb
mov
icebp
sti
fcmovu
sahf
sub
dec
xor
inc
test
adc
jae
mov
fldt
pop
iret
jmp
nop
mov
and
cmp
in
es
bound
or
or
dec
or
cmp
lret
popf
push
xor
push
fsub
xor
pop
dec
xor
cmpsl
lahf
xlat
cmp
fidivl
in
cmpsb
cmp
andb
and
dec
mov
xchg
mov
sbb
pop
dec
cmp
cmp
sub
lret
add
jecxz
xchg
xchg
xlat
jns
or
pop
dec
mov
push
sarl
orb
lock
or
jle
xor
pop
push
mov
cmp
das
mov
sbb
xor
push
mov
jbe
push
push
adc
xor
loop
jno
movsb
scas
pop
aaa
dec
lcall
outsb
xlat
daa
mov
jns
or
push
pusha
cmpsl
iret
mov
sbb
fistps
mov
sbb
add
push
dec
xor
iret
or
jmp
jno
jae
and
sarb
cmp
inc
xor
pop
cmp
les
push
stos
fldt
dec
or
out
addr16
jb
dec
movsl
jle
aam
imul
out
mov
sub
addr16
jg
aaa
xor
imul
out
dec
testl
cmp
adc
stc
pop
or
fidivrs
loopne
pop
jg
je
xchg
dec
mov
push
mov
punpckhdq
sbb
xor
add
enter
jecxz
mov
test
cmp
int
pop
push
push
or
xchg
inc
adc
dec
shrl
fldcw
fwait
dec
or
repz
in
lahf
test
lock
repz
add
or
add
lret
mov
out
or
jp
into
pop
adc
gs
xor
mov
sbb
jno
jg
push
inc
rclb
sub
leave
pop
dec
add
cmpl
fidivrl
jo
outsb
inc
xlat
lock
mov
push
mov
ja
pop
dec
pushf
cmpsl
cmp
into
aaa
mov
jge
mov
ljmp
popa
mov
pop
pop
lea
mov
xor
in
lahf
cmp
add
pop
ss
mov
mov
ret
mov
sahf
aad
and
mov
imul
sbb
dec
cmp
jl
sbb
jne
enter
ret
popf
pop
fstl
js
divb
int
cmp
jb
dec
addr16
cwtl
cmpb
push
adc
push
les
ljmp
ja
push
mov
inc
fsubr
int3
pop
scas
push
cmpsl
cs
sub
mov
in
push
ljmp
push
inc
mov
sub
cmp
cmpsb
sbb
adc
fisubrl
sub
enter
cmpsb
push
mov
pop
movsl
fiaddl
adc
push
stos
fidivrl
adc
cmc
jp
roll
inc
and
shll
cmp
adc
ret
shll
cmp
cmp
xor
enter
fcmovu
mov
ret
sbb
sbb
mov
pop
aam
out
cmpsl
push
push
dec
mov
adcl
ljmp
inc
imul
inc
inc
mov
adc
dec
std
xchg
aaa
test
lock
cmpb
cmp
in
mov
clc
adc
nop
jge
shr
fcompl
mov
loopne
hlt
mov
call
mov
pushf
xchg
inc
clc
pusha
add
jmp
aad
jmp
mov
xchg
jb
mov
repz
shlb
sahf
lock
test
xchg
pop
or
lret
data16
movsb
test
ret
out
add
push
repnz
iret
and
xchg
fprem
sub
in
incb
cmp
cmp
mov
ficoms
xchg
pushf
or
jb
in
lds
lock
imul
stos
xor
ret
cld
sbb
fsubrs
add
jle
lock
add
sbb
push
adc
repz
or
test
push
cmpsl
mov
fwait
pop
scas
pop
mov
das
ja
ja
add
sbb
loope
cs
cmp
insb
mov
cmp
clc
cmpsb
mov
pop
fisubrl
in
mov
jecxz
sub
xor
out
stos
addb
or
dec
or
inc
test
pop
iret
fsubs
adc
mov
sbb
dec
pop
dec
mov
out
push
and
push
add
ret
push
and
sbb
fimull
nop
xor
mov
inc
sahf
and
jnp
sub
sub
mov
les
gs
xor
imul
pop
js
aaa
daa
mov
outsb
xchg
movsb
add
aam
dec
mov
mov
add
aam
inc
inc
mov
mov
push
les
mov
enter
jecxz
sub
leave
sbb
mov
jbe
cmpsl
outsl
or
mov
out
lahf
pop
add
stc
out
lahf
pop
or
cld
jge
mov
pop
mov
add
or
mov
dec
fdivp
push
iret
inc
dec
fwait
jae
add
enter
addl
xor
popl
mov
sub
or
add
xchg
jbe
mov
xor
mov
mov
push
add
adc
sub
cmp
xlat
pop
sub
mov
jmp
scas
lods
fcomps
fcom
sbb
mov
loope
lock
xor
cwtl
pop
and
lock
jne
xchg
cmp
mov
int
mov
add
fldt
mov
xchg
xlat
dec
pop
push
xor
sub
push
jne
and
add
sarl
call
push
fnsave
pop
pop
push
push
mov
popa
xchg
mov
rolb
adc
push
or
push
push
push
xor
insb
std
shrb
jg
dec
inc
inc
outsl
outsb
imul
cmp
dec
mov
cli
addr16
xchg
push
xchg
shll
cmp
add
pushf
push
cmp
sbb
loop
sbb
adc
int
inc
aas
int
jmp
leave
popa
lret
sbb
xchg
mov
mov
or
cmp
xor
enter
dec
xor
std
xchg
arpl
or
jp
pop
test
mov
and
jbe,pt
lahf
sub
mov
ljmp
jle
lret
add
mov
mov
adc
xor
xor
dec
in
dec
outsl
push
adc
sbb
push
sub
mov
scas
inc
cmp
xor
daa
fstps
mov
jo
inc
shll
jnp
ja
or
lods
push
sbb
mov
xor
pop
cli
pop
dec
push
sub
cmpsb
outsl
and
or
ror
or
inc
adc
pop
fisubrl
sub
test
iret
dec
push
shlb
sbb
mov
sbb
mov
int3
aaa
int3
mov
ja
pop
js
lods
jle
fistpll
repz
sbb
and
push
dec
ror
out
mov
jno
sarb
cmp
xchg
or
rcll
sub
push
push
inc
adc
mov
inc
sub
sbb
aaa
or
sahf
test
sahf
jmp
pop
inc
jae
mov
pop
pop
ljmp
mov
lock
and
adc
imul
stc
adc
push
or
mov
cltd
sbb
pop
imul
push
loop
movsb
rorb
icebp
push
xor
adc
xchg
jno
xor
jbe
sbb
cmp
pop
imul
cwtl
imul
pusha
lock
adc
out
or
imul
pxor
jno
rcr
lock
mov
rcr
push
xor
push
iret
jns
adc
aad
push
sub
cmp
push
mov
stos
pop
out
xor
dec
lret
xchg
sub
loopne
jle
lret
int
dec
mov
stos
dec
inc
push
jecxz
dec
cmp
int3
pop
mov
or
xlat
aad
push
mov
cmp
jb
fsqrt
fmuls
aad
repz
cwtl
lret
in
ret
cmp
inc
inc
xor
es
and
or
hlt
mov
mov
or
mov
in
adc
mov
mov
mov
mov
arpl
jle
jp
fcmovb
inc
lea
inc
cmp
dec
mov
add
cli
or
or
mov
cs
or
shlb
fcompl
push
repz
or
mov
test
leave
fwait
jb
and
es
pop
adc
es
pop
mov
xchg
movsl
ja
mov
sbbb
pop
loopne
xchg
adc
sbb
xchg
push
call
xchg
push
sbb
add
adc
ret
lock
cld
mov
sub
xor
jne
cmpsb
jecxz
orl
or
pushf
mov
es
fadd
lret
stc
das
inc
int3
mov
mov
ret
adc
lcall
in
or
scas
jecxz
sbb
add
movsb
mov
mov
inc
push
push
cmp
mov
rcr
sbb
or
cld
mov
enter
jle
xor
mov
pop
loope
jnp
orl
les
pop
pop
fcomps
das
iret
lock
scas
xchg
scas
sahf
mov
outsl
pop
sub
dec
insb
cmpsb
dec
lret
jb
movsb
pushf
mov
stos
fisubl
movsl
cs
push
xor
hlt
mov
dec
adc
sbb
lret
sbb
add
loope
lcall
stos
in
and
adc
fisttps
sub
add
jno
stos
or
dec
shlb
xchg
push
or
dec
sarl
push
fldt
mov
xchg
test
loopne
and
inc
pushf
lods
enter
pop
jge
gs
sti
test
or
xchg
lcall
rcrl
fwait
call
lock
movsb
jle
xor
or
mov
pop
jmp
mov
jmp
add
ja
dec
cmp
nop
icebp
cmp
fnstenv
mov
stos
pop
cmp
cmp
mov
xor
add
cmp
xchg
sbb
cmp
jmp
add
arpl
aam
lcall
add
pop
inc
sub
push
aaa
xchg
js
mov
ret
stos
add
aam
dec
push
pop
pop
out
clc
or
sub
inc
or
add
outsl
sbb
or
lahf
xchg
sbb
mov
icebp
and
rcl
lcall
or
loope
loopne
cld
dec
add
cmpsb
xchg
lods
add
lds
cmpsb
popa
mov
cltd
dec
push
add
xor
cmpsb
fmull
cmp
cmpsb
mov
cmp
push
xlat
cmp
bnd
and
call
out
fcmovnu
test
loope
cmp
jnp
mov
jecxz
jns
pop
pusha
sar
mov
movsb
in
inc
jne
mov
push
loope
sbb
cmp
xor
adc
xlat
bound
outsl
inc
popf
repnz
push
leave
popa
fs
insb
popa
xor
ljmp
or
jmp
xor
sbb
cmc
dec
sub
lea
xchg
dec
dec
addr16
or
addl
loopne
adcb
in
shrb
lcall
mov
sub
stos
add
test
scas
add
clc
pop
pop
aad
test
adc
pop
mov
pop
sub
outsl
int
call
mov
out
dec
inc
outsl
dec
dec
xor
inc
fistl
cmp
push
test
jnp
pop
xlat
adc
test
jbe
lds
dec
cmp
jnp
jno
in
jo
cmpsb
lea
div
inc
andb
movsb
push
xlat
fimull
push
push
mov
dec
ds
pop
add
mov
outsl
fdiv
xlat
add
pop
negl
inc
stos
in
sub
push
fcmovnb
dec
cmp
fcomps
mov
aad
mulb
xchg
cmp
je
addr16
dec
test
int
sub
les
fisubl
je
dec
cltd
jg
fmuls
std
mov
mov
ja
cmc
mov
pop
ja
scas
xchg
cmp
push
fcompl
sti
clc
test
fwait
xchg
dec
and
fmul
jno
clc
pop
cmp
fdivrl
xor
sbb
mov
and
pop
mov
divb
outsl
xchg
cwtl
cmpb
repz
jl
pop
aad
and
jne
sbb
mov
hlt
pushf
cmpsb
nop
mov
xchg
cmp
pop
push
stos
mov
jbe
mull
mov
lret
jae
xor
lret
in
scas
ljmp
bound
push
and
movsl
clc
and
inc
mov
call
mov
out
rcl
mul
sub
mov
or
ret
jns
inc
or
or
inc
iret
dec
push
inc
lcall
fistpl
xchg
stos
xchg
js
xor
sub
sbb
mov
out
pop
xor
fdivs
ds
dec
test
cmc
dec
into
call
fsubrs
pop
stos
clc
lcall
pusha
lret
daa
jle
dec
jmp
mov
adc
in
mov
adc
arpl
outsb
fnop
stos
or
int3
push
jno
or
mov
popf
xchg
mov
mov
orl
jbe
xor
and
test
fwait
sbb
add
pop
adc
mov
mov
push
mov
outsb
lock
pop
orl
pop
or
out
cs
push
mov
notl
mov
or
sarl
arpl
pop
pop
es
cmp
int3
jle
pop
dec
es
mov
les
push
hlt
cmp
mov
outsl
cmp
sub
out
in
jb
je
out
int3
xchg
xor
xchg
mov
iret
clc
cmp
insb
fmull
mov
pop
stc
mov
or
cli
lret
sbb
in
iret
lock
push
bound
js
and
lret
jp
add
shlb
int3
mov
arpl
leave
push
ret
push
push
push
sub
aad
rclb
adc
push
cwtl
push
mov
cmp
mov
mov
aam
adc
and
ficoms
or
nop
cmpsb
xor
fwait
jmp
dec
cs
mov
sti
dec
std
push
mov
mov
sbb
or
dec
jne
xchg
xchg
xor
mov
sub
mov
add
push
lret
pop
jmp
mov
mov
mov
icebp
loop
sbb
sbb
jno
push
gs
fidivl
sbb
int
and
das
in
xor
or
outsb
push
sahf
add
pop
sub
rorb
pop
mov
lea
mulb
stos
ja
popf
lock
jns
pop
test
mov
cmp
negb
imulb
push
cmp
inc
jp
scas
ds
test
mov
jge
jnp
push
pop
sub
paddusb
lret
outsl
cltd
pop
fwait
mov
cmpsl
ret
bnd
pushf
imul
jle
aas
push
sbb
fwait
dec
ja
movsl
mov
fwait
scas
ljmp
sbb
cltd
pop
shll
inc
mov
cli
inc
sub
addr16
cli
sqrtps
mov
lret
les
xor
cmc
fwait
or
leave
cld
outsl
fwait
rclb
push
imulb
iret
pop
vpunpcklwd
fsts
cmp
sub
xor
fsub
xchg
adc
ja
test
push
and
and
in
dec
sub
sbb
mov
fwait
sub
ljmp
jb
lea
lret
fnsave
or
push
cmpsl
mov
sahf
dec
les
xchg
iret
push
mov
fidivrs
leave
mov
fldcw
mov
adc
int3
add
stos
sub
ja
add
lret
add
mov
mov
inc
sbbl
pop
dec
pop
adc
sbb
xchg
xchg
dec
data16
imul
stos
mov
cmpsb
xor
imul
or
xlat
cmp
bound
push
mov
push
jo
push
xchg
xor
leave
or
push
fisubrs
loopne
xor
inc
add
fmulp
xlat
mov
cmp
xchg
es
and
and
jg
insb
cs
cmpl
inc
sub
outsl
inc
movsl
sub
jle
mov
inc
add
xchg
les
xrelease
adc
sbb
jae
mov
push
mov
xchg
lds
xchg
and
jp
pop
hlt
add
jb
cs
xchg
ficompl
cmpsl
mov
mov
das
out
adc
cs
or
or
lret
ficomps
adc
or
mov
stos
fistps
out
pop
push
leave
dec
es
jnp
popf
jp
and
pop
rorb
xor
pop
pop
xlat
mov
fwait
cmp
mov
or
in
flds
fisubl
fcomp
mov
repz
or
xchg
es
mov
lock
add
rorl
les
cmp
and
call
cs
inc
insb
mov
shrb
mov
roll
nop
adc
loope
adc
repnz
cmp
inc
lcall
mov
sub
pop
iret
test
jg
out
repz
test
test
repz
mov
jg
mov
ficoml
rcll
mov
out
out
aad
fdivp
mov
push
jmp
fcoms
ljmp
roll
or
pop
mov
push
in
pop
dec
dec
test
shrl
lods
cmp
fwait
mov
fbstp
xchg
xor
enter
sbb
xor
xor
sub
clc
loop
or
testl
cmp
adc
es
and
lret
or
fldt
out
lods
sbb
xor
cmp
inc
dec
push
inc
fabs
jle
lcall
dec
fmuls
bound
dec
push
mov
call
fmull
cmp
xor
add
cmp
xchg
scas
movsl
push
fisubl
or
fsubrl
sub
xchg
inc
sub
mov
sub
adc
and
aas
inc
cmpsb
dec
imull
int
or
decb
xchg
rcl
sbb
xchg
test
enter
jbe
cs
jne
jnp
sbb
dec
cmp
das
jle
dec
lret
dec
bswap
pop
mov
rcll
cs
inc
or
int
lret
jle
mov
xchg
setl
or
add
or
inc
adc
mov
and
cwtl
add
int3
pop
sub
or
daa
and
inc
aam
dec
fwait
enter
enter
sub
mov
stos
lret
sub
jns
dec
mov
push
dec
addr16
arpl
enter
and
pop
adc
adc
test
sbb
sub
adc
enter
inc
xorb
outsl
stos
fisttps
mov
push
sub
inc
inc
and
jg
sbb
push
push
les
cmc
aam
pusha
ljmp
jne
dec
jno
pushf
and
in
jb
mov
cmp
mov
ret
push
dec
xchg
jae
lcall
repnz
fistpll
fsubrs
loope
ljmp
pop
clc
mov
jecxz
push
xlat
and
mov
cmp
lret
xor
sbb
inc
mov
call
push
dec
sbb
fisubrl
mov
push
ds
and
cmp
xchg
cmp
sbb
pop
movsl
dec
dec
icebp
jnp
ja
mov
mov
dec
sarl
mov
mov
lret
or
dec
pop
imul
sub
lock
mov
mov
dec
cld
dec
sub
dec
ret
push
mov
stos
lret
loop
cltd
mov
or
popa
popf
into
loop
push
das
pop
addr16
xor
cmp
dec
jmp
stos
test
adc
test
push
lret
test
fidivrs
aaa
fimull
cmp
push
pop
mov
fwait
inc
jne
dec
test
xor
in
pop
cmp
and
pop
sub
push
jo
notl
loope
sbb
jne
sub
ss
cs
push
sti
dec
pop
xchg
sbb
lret
xor
repz
cld
cld
pop
push
repz
dec
and
mov
pop
ljmp
or
fidivs
aas
outsb
shll
or
ljmp
addr16
aaa
xor
mov
pop
dec
xchg
fnstenv
fdivrs
ja
adc
notl
cmpsl
mov
or
cld
dec
fcoms
inc
stos
ss
sbb
loope
cmp
fimull
jne
mov
cmp
sbb
fisubl
dec
lock
fwait
sbb
jo
dec
or
jae
lret
push
fadd
add
xchg
popf
ds
pop
arpl
neg
cmpsl
or
addr16
inc
push
out
test
jl
jae
adc
xor
stos
fsubl
cmp
fisubrl
fstps
jg
pop
jg
adc
mov
xorb
or
repnz
dec
leave
mov
push
push
xor
inc
xchg
push
or
ss
sub
sub
pop
xchg
cmp
inc
sub
mov
loopne
inc
aad
js
and
and
mov
jg
ja
mov
imul
addr16
and
fwait
das
out
sti
lds
dec
mov
imul
nop
inc
push
xchg
add
xorl
dec
cltd
fnstcw
mov
cltd
jbe
jns
pop
pop
les
pop
adc
inc
adc
jmp
pop
mov
rorl
enter
les
cld
jno
lret
push
xchg
jns
push
mull
jge
add
mov
sub
ds
xchg
mov
repz
cmp
pop
xchg
jb
daa
jns
lea
sub
sbb
imul
test
loop
in
out
pop
and
lcall
gs
push
cmpsl
movsb
mov
addr16
mov
push
cli
icebp
ret
pop
or
push
or
clc
lds
cmpsb
mov
gs
ss
xchg
xchg
jno
pop
xor
push
and
test
decb
lret
mov
mov
xor
pop
insl
dec
fisttpl
dec
cmp
jge
xor
xor
mov
inc
push
push
sub
in
mov
sub
sub
in
sbbb
je
aas
sbbl
outsl
rorl
dec
aad
xor
sbb
cmc
jno
enter
cmp
mov
cmp
jno
adc
enter
xchg
mov
xchg
push
popf
xchg
addl
xor
cmc
mov
fld
fistl
sub
enter
test
aam
cmpsl
scas
fsubrs
rcll
mov
enter
lock
movsb
and
call
push
fsts
jne
sub
lock
repz
xlat
xchg
or
loope
xor
xchg
cmc
push
sahf
push
idivl
nop
and
inc
repnz
fs
pop
xor
push
mov
jl
cmpsb
pop
cs
popf
mov
and
ror
cltd
sbbb
mov
scas
stc
jg
push
cs
movsb
fdivr
mov
call
dec
ret
stos
xchg
insl
sub
ljmp
mov
fildl
and
divb
jne
jg
xchg
mov
adc
mov
int
das
pop
mov
das
jne
fcmovb
xchg
mov
xor
stos
mov
stos
addb
pop
out
mov
jge
clc
jp
inc
jp
pop
adc
iret
add
or
imul
or
repz
push
mov
push
sbb
cmp
jns
xchg
loopne
popa
lret
daa
shl
stos
mov
test
aam
or
cmp
ret
popf
adc
cmp
fnstcw
cmp
pop
fldt
xchg
xor
xchg
addr16
cltd
dec
add
cmp
fnstcw
push
rclb
mov
mov
dec
xchg
push
cmp
test
cmp
ja
mov
cltd
mov
stos
test
mov
or
fstps
push
cmc
fdivl
dec
sahf
jmp
call
push
xor
mov
xor
iret
cmp
xchg
mov
jl
sbb
xchg
fldcw
xchg
dec
sarl
js
cmp
mov
mov
inc
push
jnp
add
movsb
scas
cltd
inc
data16
movl
out
mov
in
mov
mov
jle
adc
dec
pop
pop
adc
and
add
arpl
ret
add
call
cmp
sub
aas
cwtl
jl
pop
aas
fstpt
xor
jl
pop
fnop
pusha
jg
push
dec
stos
xchg
sbb
lret
lcall
sarl
jl
fcompl
call
push
nop
add
outsl
add
ficoms
ficoms
rcll
inc
scas
xchg
mov
xor
mov
pop
sbb
mov
push
mov
les
jmp
push
mov
stos
cmp
fwait
sbb
dec
fadds
les
pusha
mov
add
ja
iret
dec
jecxz
xchg
lret
jmp
pmuludq
pop
leave
dec
cmpsl
es
sub
xchg
pop
scas
out
mul
imul
test
ljmp
js
jle
stos
sub
cmp
ret
push
pop
adc
sub
call
push
fnstcw
enter
scas
mov
pop
cmp
ljmp
shrb
enter
mov
aam
mov
mov
pop
mov
xor
add
lds
lret
lret
mov
dec
sub
inc
adc
push
aad
push
cltd
mov
repz
imul
mov
cmp
ja
scas
or
rol
loope
mov
roll
pushl
gs
mov
pop
sub
mov
in
jp
pop
in
jg
or
xor
jmp
mov
mov
jecxz
cld
pop
shr
jmp
mov
and
int3
add
popa
mov
inc
mov
xor
ja
insl
out
cmp
lret
or
inc
ja
mov
ljmp
mov
repz
jge
push
imul
lret
int
jg
stos
das
testl
les
jo
repz
inc
sbb
pop
add
out
cli
jns
cmp
jp
dec
jg
sub
cmp
fisttpl
sbb
sub
push
adc
cmp
xchg
sbb
cwtl
scas
sbb
inc
add
sub
jle
cmc
ja
xor
inc
sarl
sbbl
adc
imul
or
mov
cmp
xchg
sub
jg
add
or
jp
mov
int
nop
mov
out
inc
cmp
cmp
sub
mov
push
jge
cmp
es
nop
and
rcrb
jne
adc
loopne
cwtl
fimull
jl,pt
jg
ror
cmc
cmp
popf
mov
fisubrl
repnz
or
pop
lret
popa
scas
or
fmuls
xchg
loopne
cmp
int3
clc
mov
push
mov
fsubl
jbe
stos
lods
inc
pop
mov
add
test
jno
xor
dec
addr16
xchg
sub
pop
cmp
inc
divl
mov
mov
fiadds
pop
sub
rcr
xchg
mov
jns
xchg
xor
jo
rcl
cld
aad
das
insl
in
hlt
xchg
xchg
scas
mov
xchg
xlat
pushf
push
scas
out
enter
iret
cld
iret
ss
and
fs
mov
int
aas
sub
pushf
jg
negb
rcll
pop
push
mov
fistps
aad
jnp
aaa
or
movsl
jo
inc
mov
sub
divl
dec
in
insl
jle
sub
add
stc
mov
test
xchg
pop
pop
mov
or
sbb
cli
fs
cli
jp
cmp
flds
cld
cmp
adc
fisubrl
sbb
add
lods
cmpsl
xor
rcrb
popa
fnstenv
sub
cmp
in
inc
inc
or
dec
fwait
sbb
or
mov
add
lds
fwait
loope
jbe
mov
mov
sbb
sub
scas
inc
aad
or
ds
xchg
and
xor
push
cmp
mov
dec
sbb
cli
repz
lods
mov
mov
repz
mov
cmp
aaa
mov
lods
js
rcr
mov
pusha
ljmp
mov
dec
inc
cmc
cmp
fcmove
jmp
mov
mov
push
pop
pop
dec
pop
leave
outsl
int
ret
cltd
aam
les
arpl
ljmp
pop
push
cmp
sti
adc
das
mov
mov
sbb
test
in
push
aaa
mov
pop
int3
pop
sub
mov
int
or
sub
or
dec
data16
sti
ds
mov
incb
xchg
xor
hlt
outsb
iret
or
lds
adc
sbb
mov
jl
cmp
fimull
xor
adc
jb
jmp
hlt
stos
dec
imul
push
fldenv
adc
xor
mov
push
cmp
cltd
inc
in
clc
push
dec
out
jbe
std
jmp
mov
adc
push
rorb
push
mov
jne
xchg
push
dec
xchg
pop
ja
push
or
test
sbb
lds
sub
xor
or
adcb
cs
out
push
into
mov
and
push
jecxz
dec
cmp
test
ja
jmp
xor
stc
jp
add
ret
mov
in
in
jmp
lods
fcomi
mov
cmp
das
aad
mov
mov
fildll
jnp
or
and
jecxz
xchg
into
enter
cmp
add
fwait
iret
and
in
sub
inc
lea
cmp
ret
cmp
stos
movaps
and
dec
pop
sbb
mov
xchg
xor
jb
mov
sub
push
cmp
fwait
and
mov
mov
pop
xchg
sub
cmp
inc
shrl
fld
add
aad
xchg
cli
lock
out
push
dec
dec
es
test
mov
repz
adc
insl
fsubr
jnp
lret
push
mov
test
cli
int3
sbb
inc
rcrb
dec
jp
lea
xor
lods
mov
dec
xchg
vminsd
enter
sbb
push
lcall
push
mov
loop
dec
ljmp
ss
xchg
aad
aas
jae
imul
jg
jne
loop
lcall
or
xor
mov
jno
ret
mov
jnp
jnp
sbb
popl
shll
aas
mov
imul
mov
push
jl
cmpsl
stos
sbb
ret
jg
pop
out
jnp
or
mov
fdivs
cld
mov
pop
mov
xchg
or
movsb
cmp
loop
push
cld
mull
and
mov
or
xchg
jecxz
xbegin
sbb
adc
xor
jbe
int3
and
xor
or
pop
sbb
sub
xchg
mov
sub
and
mov
cmp
loop
xlat
xor
mov
mov
outsb
lods
xchg
sub
push
push
push
fwait
xor
cli
or
pop
push
popa
stos
jge
test
in
addr16
inc
pop
icebp
in
inc
adc
mov
and
inc
ja
aam
xchg
jecxz
xor
dec
inc
push
or
sub
fldcw
mov
lret
test
or
jnp
shlb
lret
add
enter
xor
test
add
jbe
mov
icebp
cmp
jp
push
mov
or
push
iret
adc
push
dec
or
xor
jg
sub
test
xchg
pop
sub
sub
push
xchg
and
mov
in
fcompl
fldcw
ror
fdiv
pop
xchg
push
data16
int
add
inc
inc
pop
or
out
ja
cmp
inc
and
enter
stos
mull
dec
xor
imul
shlb
push
cmp
inc
pop
leave
cwtl
inc
push
or
dec
cmp
data16
fdivrs
add
xor
lcall
pusha
dec
inc
inc
mov
daa
int3
xchg
inc
daa
jmp
lcall
stc
xchg
jle
mov
les
jae
sbb
jne
sbb
imul
and
dec
cltd
fcmovnu
inc
fs
xor
or
add
cltd
dec
fidivl
jae
out
push
iret
rcrl
mov
negb
pop
sub
sbb
sbbb
sub
sub
sbb
in
jp
pop
cmp
jnp
cmp
jns
pusha
ret
mov
add
push
rcrl
sub
flds
adc
cmp
ljmp
orl
xor
pusha
lret
cmc
stos
cmpxchg
iret
or
add
pop
and
push
xchg
stos
xlat
add
outsl
lea
xor
cmpsb
xchg
sub
xchg
sub
enter
fwait
test
mov
lcall
sub
aam
mov
iret
sub
pop
xor
dec
cld
insb
inc
mulb
mov
push
bound
push
inc
pop
aad
pop
out
stos
sbb
or
jnp
ja
mov
into
shl
rorl
pushf
pop
inc
add
rorb
dec
shlb
xor
cmp
ss
jecxz
or
or
test
xor
jl
sub
lahf
xor
cmp
push
movsb
push
jnp
cmp
or
xlat
sub
pushf
dec
pop
outsl
mov
pop
jg
jbe
fstpt
in
sub
cltd
mov
cmp
sub
cltd
test
sub
and
jle
rcrb
out
dec
push
ss
sbb
aaa
pusha
mov
pop
mov
or
in
mov
lods
into
push
fsubp
add
xchg
imul
dec
mov
arpl
mov
loop
fcoml
dec
ret
mov
mov
mov
bound
in
adc
sub
ss
fisttpl
fadds
push
xor
xchg
pop
dec
mov
sbb
roll
sub
or
add
mov
sub
test
pop
fwait
subl
sbb
les
aad
push
test
or
and
loopne
movsl
inc
aad
pop
adc
mov
into
adc
sub
es
jge
cld
mov
and
imul
les
inc
lret
out
lcall
push
push
cmp
sub
les
xchg
stos
filds
fimull
sarl
mov
and
stc
jnp
xor
insl
xor
aam
lcall
lret
push
pop
lods
push
roll
es
push
ds
dec
add
jb
jno
ret
into
jae
add
or
cmpsb
mov
xor
or
add
jg
sub
fwait
incl
pop
pop
pop
mov
push
sub
pop
pop
sbb
in
flds
xchg
fldt
or
and
stos
jmp
aad
cmpsl
pop
ficoml
cmp
xlat
xchg
repz
add
jmp
cmp
push
stos
movsb
stos
test
packuswb
cmp
push
rsqrtps
insl
push
and
lock
and
test
pop
lret
jmp
cltd
dec
sar
data16
xor
push
pop
and
xchg
jno
sub
dec
add
inc
pop
cmp
cmp
pushf
std
test
out
fcmove
or
data16
lret
adc
into
mov
out
mov
jle
add
int
je
xor
fisttpll
fstpt
jmp
fwait
in
cmp
cmp
fwait
cmpsb
xor
dec
cmpsl
push
push
xchg
pop
add
push
xor
jmp
std
xor
mov
xchg
mov
or
adc
fistpl
and
push
jecxz
sbb
cltd
orb
lods
add
jp
decl
dec
gs
ja
push
ja
loope
add
pop
inc
rorl
push
mov
cmc
jae
or
lcall
or
sub
mov
pop
pop
inc
lret
test
repnz
mov
xchg
in
lret
movsl
inc
lcall
mov
mov
mov
jp
fnstcw
pop
into
fs
or
daa
mov
cltd
and
xorb
cmp
cld
insl
cs
push
stos
rorb
aaa
sti
pop
dec
push
sarl
movsl
or
sub
cmp
testl
cmp
or
push
clc
popl
fwait
cmp
add
inc
mov
or
dec
clc
sub
out
sarl
enter
aaa
out
pusha
fsts
cmp
nop
int
adc
mov
leave
int3
push
push
leave
mov
mov
add
out
cmp
dec
adc
inc
mov
js
jb
mov
pop
inc
cmpsl
fcom
mov
jecxz
mov
lock
xor
je
or
scas
and
push
enter
popf
cmp
outsl
rorl
sbb
pop
stc
jmp
or
mov
xor
jecxz
popf
ss
push
push
sahf
insb
mov
call
fcoml
pop
jmp
pop
icebp
dec
sahf
ret
int3
mov
mov
lock
push
cmp
cmp
and
jbe
mov
imul
stos
and
call
dec
pop
sub
xchg
pop
mov
xchg
push
inc
sbb
xor
mov
mov
out
pop
outsl
mov
ja
mov
pop
std
out
sub
xchg
fs
inc
fcoml
add
scas
push
cs
popf
inc
mov
fbld
pop
movb
and
jno
ret
xchg
fistpl
xchg
cmp
stc
sub
add
movsb
int3
add
test
enter
and
movsl
pusha
int3
xchg
std
lret
aaa
int3
data16
lea
movsl
push
inc
stc
fwait
dec
pop
clc
test
fs
stos
dec
arpl
cwtl
test
or
xor
in
enter
shlb
push
pop
arpl
xor
sub
dec
in
mov
or
pop
sub
clc
sbb
xchg
dec
add
mov
mov
adc
sbb
mov
push
scas
faddp
xor
mov
xchg
add
sbb
imul
jno
xor
stos
mov
ficoml
cmp
dec
add
cmp
and
dec
ss
cltd
lock
xchg
sub
xchg
pop
dec
mov
and
daa
repz
cmp
icebp
call
mov
outsl
mov
lcall
lret
inc
xlat
outsl
add
lods
mov
rclb
cmp
add
imul
pop
aas
subb
mov
movsb
aas
inc
mov
lret
lods
jp
cmp
cmc
loop
xor
fcmovnbe
adc
push
repnz
adc
fwait
rcrb
inc
xor
pop
mov
dec
arpl
test
int
inc
ss
inc
int
mov
aad
sub
stos
jns
pop
push
sbb
and
or
ja
mov
mov
or
jno
mov
iret
dec
cmp
movsb
adc
and
add
xchg
or
push
mov
xchg
push
push
cmpsb
mov
push
pop
sub
inc
mov
mov
sub
jnp
sbb
inc
push
rorl
push
inc
jge
xor
inc
bound
es
xchg
cmpsl
xor
and
iret
pop
mov
cmpsb
daa
test
add
or
sbb
push
arpl
pop
fimull
ja
nop
or
cmpsb
push
imul
xor
cltd
and
jmp
jo
add
mov
jge
mov
cmp
imul
shrb
xor
outsb
mov
or
bound
mov
mov
outsl
fimull
push
inc
sub
inc
inc
inc
inc
mov
xor
push
mov
aad
or
mov
jmp
mov
fimull
mov
cmp
fwait
cmpsb
adc
mov
and
xchg
jae
cld
adc
into
stos
xchg
mov
or
and
aaa
repz
inc
pop
mov
mov
add
popf
out
rcrl
xchg
pop
or
inc
ja
add
pop
mov
addr16
cld
inc
pop
fimull
repnz
movsb
mov
cmp
rcl
xor
sub
push
mov
add
push
cs
push
les
and
jnp
ds
mov
xchg
leave
sbb
push
sarb
aas
je
adc
lea
jae
lret
or
iret
xor
and
mov
jle
lret
mov
inc
dec
and
mov
repz
xor
test
xor
faddl
rcr
sbb
push
cmp
sahf
stos
arpl
leave
loope
ss
dec
push
mov
jle
fwait
test
push
sub
cmc
jg
pop
vunpcklps
pushf
outsb
or
sbb
push
loope
jecxz
mov
dec
int3
enter
in
rcll
xchg
test
lahf
enter
pushf
test
into
out
fs
addr16
adc
dec
pop
xchg
add
push
mov
iret
pop
add
sub
pop
xor
mov
aas
inc
pop
push
jno
mov
jecxz
shrl
jp
inc
ja
mov
mov
sarb
dec
push
mov
pop
xor
ss
xor
jb
inc
lcall
pop
jne
mov
aas
or
sbb
jno
cmc
out
pop
icebp
xor
jg
xchg
mov
xchg
jmp
xor
and
fcmovne
mov
addr16
std
mov
adc
fwait
xor
lock
int
push
jno
shl
or
daa
mov
aam
mov
outsl
cmpsb
sub
ret
pop
dec
int
cmpsb
or
les
mov
fcoms
add
dec
scas
inc
add
mov
popf
push
and
mov
push
in
xchg
mov
sub
cld
out
push
pop
fnsave
js
sar
adc
mov
inc
mov
dec
dec
or
movsb
mov
or
jg
inc
dec
test
frndint
pop
arpl
cmpsb
mov
and
mov
in
add
orb
in
mov
sbb
xchg
repz
or
fnstcw
xchg
jecxz
push
mov
push
mov
aad
push
imul
xor
ljmp
lds
ja
inc
sbb
mov
imul
xor
insb
lahf
movsb
pusha
out
xor
dec
lock
and
mov
dec
ljmp
inc
loopne
mov
daa
repnz
iret
gs
icebp
mov
out
xrelease
add
push
mov
fisubl
ljmp
popf
cmp
into
pop
xor
roll
cmpsl
add
lahf
lret
fs
mov
out
cmp
push
fsubrs
dec
jp
mov
mov
out
rolb
loop,pt
mov
add
fdiv
in
scas
cmp
xchg
and
add
add
repnz
rol
jg
insb
ljmp
jg
cmp
enter
inc
popa
lret
sbb
add
mov
sti
in
lcall
pop
push
cmp
mov
mov
out
es
iret
les
push
add
add
jo
jae
or
iret
daa
pusha
pop
push
xchg
dec
cld
lods
cwtl
repnz
pop
aas
rcll
inc
cmp
incl
adcl
std
dec
imul
aad
mov
testl
lock
test
push
dec
mov
or
mov
push
lahf
or
fwait
dec
into
sub
leave
mov
aad
pop
mov
aas
negb
jns
and
scas
xor
add
outsl
iret
popl
dec
test
into
stc
rcl
push
scas
xor
test
popf
lods
xor
lock
add
cmp
stos
test
and
pop
xor
or
pushf
mov
aam
in
push
enter
fisubrl
pop
push
xor
ret
pop
popf
xor
adc
cmpsl
xchg
cltd
or
push
xor
push
jbe
enter
mov
enter
cmp
imul
jg
inc
push
out
add
cmp
inc
in
mov
xchg
jne
push
xlat
push
shll
mov
or
mov
mov
push
outsb
xchg
data16
sbb
frstor
aam
outsl
orb
lcall
xor
fcomps
xorl
out
dec
loope
cld
sahf
xchg
icebp
xor
aad
addr16
lea
push
sub
lret
sub
nop
fmuls
icebp
or
add
in
dec
fldcw
xchg
jnp
jp
lahf
xchg
ret
frndint
fmuls
test
add
rcl
les
test
add
outsl
dec
push
scas
cmpsb
mov
rcr
lcall
movsb
adc
add
mov
xlat
pusha
sarb
sub
push
pop
in
mov
add
mov
push
and
leave
sarl
mov
mov
xchg
pop
cmpsb
mov
jnp
shll
cld
add
mov
dec
cld
leave
fxch
pop
cmp
mov
pop
or
dec
les
shlb
lret
lock
cld
lret
outsl
or
lret
pop
int
inc
mov
jae
mov
fstpl
lahf
aad
daa
xchg
jg
sub
mov
int3
ds
dec
xchg
or
xchg
push
insb
mov
inc
inc
sar
cmp
push
subl
aas
mov
xor
arpl
and
nop
mov
repz
and
leave
mov
call
packsswb
sbb
sub
mov
imul
ds
xchg
pop
inc
fs
inc
jl
and
cltd
popf
cmpsl
loopne
scas
mov
popa
mov
mov
xchg
dec
mov
dec
pop
push
add
or
adc
adc
mov
mov
inc
jp
push
in
or
clc
cmp
fcmovnbe
scas
mov
or
dec
jle
loopne
add
dec
addr16
and
and
rol
mov
sub
xchg
mov
mov
adc
xchg
stos
cli
movsl
push
pop
fisubl
pusha
and
mov
mov
stos
fisubrl
das
xor
cmp
stos
sub
shlb
shlb
cmp
jg
fadd
xor
add
mov
clc
popf
mov
pop
rorb
mov
sar
cmp
dec
dec
or
sub
mov
sarl
shlb
outsl
cmp
xchg
das
mov
adc
nop
int
xchg
fldl
mov
cmp
xor
cmp
mov
add
mov
pop
mov
sub
cli
sub
repnz
dec
fs
add
cltd
jno
sbb
in
adc
mov
dec
cmp
push
ret
leave
adc
pop
mov
mov
pop
and
mov
les
jno
xchg
jbe
add
jmp
test
lahf
mov
jl
xchg
pop
lret
xor
or
ficompl
add
pop
cmc
or
andb
mov
push
or
int3
jmp
xchg
pop
fidivs
test
leave
outsl
ret
clc
sbb
jnp
lea
mov
fs
cld
or
popf
mov
cmpl
jg
test
and
or
pop
or
push
pop
enter
sub
je
lcall
test
enter
sub
mov
cld
or
stos
xchg
call
and
jno
shl
dec
movl
dec
xchg
ret
pop
lock
fdivrs
cmp
jg
mov
xor
cmp
jmp
jo
inc
cmp
pop
addb
pop
fwait
add
xor
sbb
fs
mov
xchg
out
jo,pt
push
scas
sarl
lock
je
incl
enter
mov
in
cmp
xor
lea
cmp
mov
mov
adc
pop
nop
lret
fidivl
fwait
outsl
mov
add
mov
inc
loopne
xor
and
mov
cmp
test
arpl
push
push
jns
mov
or
cmp
adc
in
testl
ret
pop
add
push
pop
lahf
sahf
and
or
movsb
add
in
ljmp
scas
ret
xchg
loope
mov
pop
or
and
cltd
pop
push
cmpb
rcrl
inc
mov
push
push
sahf
enter
stos
adc
stos
int3
aaa
rorb
movsb
inc
mov
mov
aad
jne
sahf
mov
lret
push
lds
arpl
js
jo
mov
sahf
pop
iret
or
ret
add
cmp
fsubrs
incb
and
dec
xor
dec
frndint
xchg
testl
push
cmp
pop
mov
push
inc
jne
dec
pop
loope
xchg
lcall
and
popf
and
sarb
sub
pop
rcrl
lea
ror
inc
and
inc
jmp
cmp
add
insl
and
xlat
cmpsb
in
and
sbb
dec
xchg
and
cli
bound
pop
std
movsl
adc
in
xchg
mov
adc
or
les
sbb
aam
enter
adc
jmp
stc
jnp
mov
mov
movsb
jns
pop
lea
call
jp
lea
daa
inc
idivb
pusha
aad
sbb
push
insb
pop
adc
int
stc
test
cwtl
mov
fildll
xchg
xor
push
cmp
inc
dec
repnz
sbb
lret
andl
jmp
ficompl
in
mov
mov
loop
push
fldcw
je
bnd
sbb
loopne
mulb
push
test
sub
into
mov
out
push
enter
std
xor
leave
sbb
sub
dec
stos
ret
cmp
sbb
mov
stos
scas
cmp
xchg
push
cmpsl
cmp
jnp
mov
shl
mov
addr16
bound
inc
popf
out
out
repz
xchg
dec
mov
push
xor
adc
sbb
jae
mov
mov
dec
stos
push
negl
repz
cs
mov
ljmp
and
or
xchg
or
xchg
mov
cmp
push
inc
in
push
xor
sbb
jmp
dec
push
popa
add
xchg
dec
adc
fists
mov
inc
mov
dec
dec
pop
mov
aad
rcrb
xor
das
loopne
clc
jno
push
inc
cmp
xchg
fwait
dec
jb
mov
arpl
inc
xchg
js
jge
fnsave
mov
cmp
jb
jmp
icebp
xlat
xor
pop
arpl
sbb
push
dec
sbb
stc
in
notl
hlt
adc
adc
mov
mov
mov
jge
enter
push
adc
or
addl
incl
sbb
jbe
mov
pop
iret
aam
inc
mov
adc
int
enter
xor
xchg
xor
mov
push
xor
call
jae
in
ljmp
cmp
movsb
sub
inc
js
xchg
sbb
jge
lcall
test
xchg
dec
xchg
inc
jg
lret
loopne
jbe
xchg
cmpsb
or
test
pop
int3
push
out
inc
cmp
in
dec
add
hlt
push
ja
jmp
xor
out
mov
jmp
jnp
hlt
adc
es
int3
addr16
adc
inc
xor
pop
mov
xlat
push
cltd
xor
mov
repnz
cmp
in
aad
sub
push
stc
ret
jno
sbb
test
cmc
fcompl
jbe
ret
add
js
cmpsl
mov
xor
call
dec
dec
decl
inc
pop
sub
xor
sbb
jne
out
jae
sbb
ficomps
dec
jae
adc
lock
push
cmp
inc
cli
jmp
push
in
daa
jle
popl
adc
mov
xchg
or
push
cmp
mov
rorb
enter
les
pop
imul
xor
push
fldl
sub
sub
mov
inc
mov
imul
jmp
pop
push
add
add
dec
cmp
movsl
add
and
xchg
insl
cld
xchg
icebp
in
or
mov
pusha
test
pop
pop
iret
aam
dec
jae
xlat
pop
les
xchg
and
ror
out
pop
sbbl
mov
out
ffreep
fmuls
xor
out
jmp
iret
jae
xor
fcmovnu
cmc
mov
sbb
das
insb
xor
ror
out
jmp
cmp
cltd
inc
pop
mov
cs
out
jb
xlat
nop
es
dec
adc
dec
int
call
fidivrl
pop
mov
dec
out
cmpsb
push
lret
dec
sub
sbb
push
jmp
call
jne
mov
jg
jne
and
test
loopne
sub
xor
inc
das
cmp
cmp
testl
xorb
push
jmp
jns
outsl
or
faddl
xor
pop
fwait
lahf
enter
fldcw
add
loopne
rcll
paddusw
and
enter
mov
add
adcb
push
cmc
adc
sub
jae
pop
push
cmp
xlat
fdivl
repz
inc
loope
mov
outsl
pop
stos
xchg
and
stos
test
rclb
in
or
je
shrl
sbb
or
push
in
loope
mov
mov
mov
jno
pop
out
xor
out
pop
ljmp
xor
pushf
fdivrs
pop
ja
xor
mov
fldl
imul
dec
or
xor
loop
aad
mov
and
test
and
sub
dec
push
lock
repz
lds
fimull
rorl
mov
sbb
fnstenv
mov
mov
js
mov
je
lods
jmp
insl
push
xor
inc
mov
mov
leave
dec
mov
inc
jge
sar
repnz
imull
ss
mov
sub
push
divl
and
or
stos
orl
mov
repnz
lret
std
les
inc
pop
or
fists
push
mov
fwait
lahf
jae
in
cwtl
outsl
fcmovne
mov
and
jecxz
xlat
pop
adc
mov
cmp
push
pop
movsl
pop
loope
cmp
inc
sub
xor
sbb
mov
in
dec
dec
sbb
sbb
and
and
mov
test
push
adc
insb
pop
aad
pop
dec
iret
lea
jno
push
xor
sbb
cmc
lret
dec
xchg
pop
ret
popf
into
push
xor
xor
movsb
imul
adc
mov
lock
sbb
mov
sbb
sub
xlat
out
enter
xchg
and
adc
in
jmp
jae
test
pushf
mov
mov
lret
js
cld
repz
jno
std
ret
cmp
fisubrl
add
mov
inc
sub
cmp
fldenv
pop
out
sarl
mov
adc
lcall
ret
sbb
mov
cwtl
popa
outsl
rcll
cs
push
and
inc
dec
adc
fwait
dec
xor
icebp
mov
clc
jg
fidivrs
lds
or
mov
cmp
push
fsubrs
lods
repnz
push
int
in
xchg
insl
add
or
mov
sub
mov
imul
add
jecxz
inc
int
lock
test
or
xor
inc
push
test
int
cmc
adc
imul
xor
jnp
jne
leave
in
jns
fcmovnu
data16
pop
sub
xchg
mov
push
stos
sub
xor
push
sub
or
pop
fdivl
push
and
dec
into
sbb
inc
add
test
test
inc
mov
jmp
jle
fisttpl
xchg
adc
inc
pop
js
hlt
lock
idivl
jge
jp
pop
andl
pop
inc
mov
rclb
hlt
arpl
mov
cmp
dec
iret
adc
mov
mov
int
inc
xor
inc
cmp
and
out
divl
sbb
xchg
ret
out
sti
push
test
test
cmp
push
jbe
scas
popa
inc
addr16
adc
fsubrl
push
or
lock
and
or
mov
mov
mov
xor
jmp
xorb
jp
sbbl
sbb
lcall
leave
in
fcom
test
in
mov
jmp
sbb
inc
ret
dec
adc
and
add
outsw
faddl
leave
or
dec
inc
or
push
jb
sub
mov
jno
pusha
adc
loop
lock
add
popf
add
dec
mov
mov
enter
sbb
sub
xor
mov
popf
jae
cmp
push
dec
jge
hlt
rolb
or
jnp
scas
pushf
cmp
push
sbb
in
add
cmp
aad
mov
int3
or
pushf
out
mov
adc
fwait
jnp
push
xor
subl
cwtl
mov
aaa
lahf
jns
or
ja
dec
out
add
mov
iret
ja
or
aas
jno
cmp
ss
inc
adc
add
and
lret
inc
cltd
lahf
mov
je
inc
pop
in
test
or
or
fisttps
ret
inc
mov
dec
xchg
add
les
std
xchg
mov
sub
rcrb
mov
pop
fstpl
ss
or
push
xor
lcall
xor
add
sbb
add
add
fdivrs
andl
in
xchg
lock
and
outsb
pop
addr16
shrb
movsb
dec
jl
sub
loopne
lcall
pop
xlat
sub
adc
call
or
leave
push
mov
jnp
sub
inc
test
mov
ss
fst
or
or
add
push
push
xchg
mov
in
lcall
ja
int
xor
adc
lcall
lret
lods
out
outsl
out
jnp
iret
add
mov
sarb
push
pop
jecxz
mov
sti
aam
cmpsb
negl
xchg
arpl
in
pop
adc
out
add
cmpsb
sub
inc
push
pop
mov
dec
fs
xor
adc
or
xor
mov
add
data16
mov
call
rcrl
dec
inc
aad
sub
sub
outsb
aad
mov
iret
stc
fwait
arpl
fadds
lret
out
and
push
mov
movsl
jo
xchg
sbb
jnp,pn
pop
sbb
adc
push
fcomp
jae
mov
mov
adc
std
clc
mov
xor
push
lods
mov
mov
mov
or
iret
sbb
ret
and
cmp
xchg
iret
cmp
add
pusha
imul
out
adc
xor
leave
stc
adc
fcmovne
imul
inc
bound
ficomps
stos
enter
mov
pop
mov
in
and
mov
mov
js
sub
lock
cmp
jnp
cmp
das
pop
dec
xorl
xchg
dec
ret
lds
imul
fdivl
scas
mov
int3
insl
jne
enter
scas
outsl
sub
inc
mov
les
jae
rcrb
and
push
or
arpl
pop
push
or
pop
pop
push
dec
or
pop
ds
cmp
cmp
push
mov
out
lcall
dec
rclb
jmp
in
faddl
loopne
fisubrl
ds
or
fsub
jno
shr
sub
dec
lahf
cmp
xlat
aad
or
fistl
lcall
xchg
xor
dec
nop
push
fcmovnbe
add
pop
hlt
outsb
xchg
cmp
cmp
lods
xchg
icebp
scas
and
ljmp
call
adc
push
fstpt
adc
inc
in
or
sub
popa
mov
lcall
mov
test
fbld
int3
cwtl
repnz
cwtl
fnclex
sbb
sub
add
pop
int
jmp
sub
adc
js
and
xlat
lret
ds
repz
mov
popf
sub
sbb
xchg
rolb
call
cmpb
dec
les
or
cmpsb
mov
movsl
dec
mov
add
jp
adcl
out
pop
pop
stos
mov
test
mov
pop
or
js
jmp
idivb
out
clc
or
xor
popf
pop
pop
scas
mov
add
inc
jp
idivb
out
cmp
mov
dec
outsl
push
das
push
sbb
jmp
cld
mov
mov
xchg
fsubr
mov
push
aam
cmp
sbb
int3
in
cld
and
jno
mov
pop
in
mov
xchg
inc
or
js
call
imull
hlt
out
movsl
fcmovne
enter
mov
xlat
xor
lea
or
sbb
sbb
and
mov
imul
shlb
int
aas
push
movsl
sub
mov
sbb
xchg
stos
pop
icebp
out
pop
out
sbb
pusha
lock
test
fimull
lods
mov
test
mov
cmpsl
sbb
inc
lcall
in
xchg
cmpsb
cmp
jne
xchg
pop
jae
pusha
popf
loope
bound
pop
nop
jg
mov
iret
inc
and
addr16
sbb
pop
fists
negl
push
mov
xor
pop
xchg
sbb
push
sbb
repnz
or
mov
xchg
fwait
imul
cmp
movsb
xor
pop
xchg
push
jg
dec
stos
cld
xchg
and
mov
lock
cmp
scas
rclb
or
sbb
inc
mov
aas
fnstcw
push
fmuls
inc
sbb
push
cmp
xlat
clc
jnp
or
test
pop
outsl
divl
mov
xor
lcall
add
mov
or
repz
outsb
testl
incb
in
stc
mov
mov
loope
xor
inc
jecxz
sbb
jmp
ljmp
aas
add
push
cmc
fwait
ss
dec
mov
jecxz
sarl
lock
idiv
add
push
sbb
cltd
and
push
mov
dec
lret
cmp
jmp
aad
cmp
xchg
test
xchg
jmp
push
shrd
sbb
outsb
or
ja
or
or
push
jno
push
stos
jbe
sbb
sahf
mov
sub
jmp
sbb
or
jle
jnp
icebp
int
jmp
pushf
scas
clc
xor
cmp
jae
les
loope
sub
into
rol
push
xlat
or
mov
data16
mov
sbb
push
pop
mov
add
sarb
mov
aaa
arpl
sbb
pop
test
mov
or
push
ss
push
iret
lcall
popf
xor
mov
popa
les
sahf
xor
mov
das
fbstp
shl
pusha
xor
cmpsb
repnz
jg
enter
jnp
cwtl
les
and
xchg
mov
into
push
movsb
fmul
popa
js
inc
pop
hlt
hlt
cmpsl
adc
and
jl
inc
push
mov
mov
dec
sarb
mov
sub
outsl
sbb
ja
xor
jecxz
add
sbb
inc
mov
inc
stos
aad
xchg
movb
or
daa
jmp
test
pop
sub
les
std
dec
or
xor
pop
jo
outsl
sub
sbb
in
jle
and
mov
in
roll
test
in
test
and
enter
jmp
xor
scas
sbb
add
jp
aam
fnstenv
jg
and
int3
test
mov
pop
jmp
insl
fadds
and
scas
lods
lret
shrl
xchg
cli
jle
out
insl
sub
rcl
jp
lods
int3
sbbl
or
inc
fcomps
pushf
cltd
adc
sub
mov
sub
shr
sub
pmaxub
outsb
and
jbe
xchg
sahf
mov
lret
stos
inc
hlt
dec
cmp
addr16
lcall
dec
leave
adc
movsb
adc
loope
cmp
movsl
cmp
mov
mov
sub
out
clc
stc
cmp
enter
cmpsb
cmp
jg
out
xchg
or
xchg
or
in
xor
popf
jp
or
in
sub
lret
movsb
fwait
dec
jae
out
cs
and
pop
sub
in
push
adc
add
aad
push
lret
mov
xor
sub
addr16
adc
or
push
mov
loopne
stos
sbb
testl
sub
jae
imul
jmp
dec
jnp
xchg
cltd
roll
push
xor
pop
cmpsl
cmp
jae
cltd
xchg
dec
cmp
sarl
pop
popa
shl
adc
mov
imul
dec
fidivrs
iret
outsl
shlb
cmp
mov
inc
cld
sbb
and
mov
inc
cld
mov
jo
jnp
sub
dec
push
rcr
sub
lret
cmp
ja
dec
mov
fcomp
jae
mov
cltd
loope
call
icebp
mov
xor
loopne
lret
and
aaa
int
sub
dec
jno
out
ret
roll
fcomp
inc
sub
in
mov
mov
daa
mov
in
stos
in
or
in
jp
outsl
cltd
notl
and
jnp
push
daa
mov
icebp
clc
sub
or
ret
enter
test
cmp
pop
jecxz
in
jp
sahf
sbb
xchg
ror
and
sub
cmp
jl
sbb
mov
xor
cmp
aaa
imul
mov
cltd
stc
divl
xchg
stc
dec
popa
int
xchg
xor
cmpsb
inc
pop
xor
mov
mov
add
scas
test
mov
jecxz
adc
push
jg
fldt
mov
dec
inc
xor
fwait
pop
outsl
sbb
xor
cmp
xchg
dec
sub
dec
mov
inc
rcl
xor
pop
cli
mov
and
fcomp
out
dec
adc
pop
push
pop
insl
std
into
in
aaa
jecxz
sahf
sub
addr16
cmpsb
fcomp
cmp
jnp
push
inc
pop
fwait
pop
dec
inc
adc
mov
mov
mov
adc
mov
lcall
inc
in
cwtl
mov
jno
inc
or
call
lds
push
add
or
jmp
dec
test
mov
ja
cmp
xor
add
test
and
dec
mov
test
test
jbe
sub
xchg
cltd
mov
dec
ret
mov
jb
out
mov
sarl
add
pop
mov
out
xor
xor
jnp
hlt
mov
cli
in
loop
mov
sub
cmp
sub
clc
push
shr
iret
fwait
mov
loopne
sbb
mov
jmp
mov
in
outsl
idivb
or
call
mov
xor
in
jmp
xor
jne
ret
call
movsb
xor
mov
inc
xchg
and
pushf
xlat
int3
add
into
inc
ret
jp
lcall
cmp
push
pop
jmp
jmp
in
push
pop
push
xchg
das
and
into
adc
stos
ljmp
ret
hlt
dec
shlb
ss
lahf
cmp
stc
loopne
and
mov
sbb
sbb
fbld
pop
es
dec
popf
int3
dec
pop
or
push
sub
and
adc
mov
xor
repnz
ljmp
popl
xor
xor
add
sbb
sahf
xlat
shlb
ja
mov
cmp
jmp
sbb
jo
mov
jnp
sub
adc
sub
sub
sahf
idivl
pop
sbb
adc
jno
mov
mov
inc
idivl
fcmovnb
xlat
dec
xor
mov
fdiv
adc
fbstp
dec
movsb
ret
das
rcll
xor
shr
cltd
sbb
dec
ficomps
xor
xchg
cmp
movsb
jno
addr16
push
imul
mov
fistpl
imul
cltd
cmp
jae
add
jae
cmp
orb
inc
aad
push
cmp
je
frstor
add
push
pop
int3
push
enter
push
test
adc
jg
jmp
jne
jnp
or
lret
pop
sbb
push
je
or
enter
repnz
xchg
inc
push
mov
sbb
leave
cmp
cmp
fsubrl
out
lahf
iret
cmp
cmp
inc
and
lret
cmp
ds
cltd
rclb
testb
sbb
aad
cs
sbb
ja
mov
or
adc
mov
cli
lret
ds
fcoms
aad
aad
adc
jo
pop
or
mov
mov
xchg
fstpl
test
push
fadd
popa
jnp
cmp
jbe
data16
enter
xchg
jno
fisttps
xchg
or
sbb
add
ljmp
mov
ljmp
sbb
and
shl
inc
enter
in
push
hlt
daa
mov
rorl
es
adc
jmp
int
push
or
imul
loopne
mov
shl
cltd
pop
dec
push
xchg
cs
enter
mov
mov
or
in
mov
pop
add
repz
les
repz
fsubrl
xchg
shl
into
je
mov
jno
jg
adc
neg
mov
in
std
push
sarl
sbb
push
lcall
dec
or
mov
jo
mov
push
inc
pop
ljmp
xchg
push
and
lret
xor
fxch
cmp
push
mov
mov
lahf
sahf
jmp
lods
fstpt
push
xor
popa
cmp
jo
in
movsb
xor
jnp
cmp
in
clc
jnp
movsl
mov
rcll
in
mov
lock
mov
cmc
add
addl
push
in
aas
mov
dec
call
out
test
int3
cmp
ds
aam
add
pop
dec
or
inc
aas
in
loop
pop
fs
and
push
iret
cmp
push
cmpsl
inc
ficoml
stos
ja
aad
int
out
fcom
adc
stc
push
push
jg
cltd
mov
add
mov
jbe
aam
push
cmpsl
inc
dec
jp
lret
arpl
or
inc
icebp
mov
repnz
mov
aas
insb
adc
adc
and
xchg
fimull
cmpsb
rorl
dec
fsubr
and
adc
mov
out
into
dec
inc
test
and
xchg
ret
popf
mov
pop
dec
cmp
dec
pop
lds
rcrb
mov
mov
in
sbbb
add
fwait
cmp
jnp
cmp
sub
imul
inc
mov
leave
aad
add
mov
inc
pop
aad
pminub
add
or
mov
mov
mov
or
stos
mov
les
cli
test
lret
xchg
dec
lcall
sbb
dec
adc
jno
mov
movsl
push
cmpsb
xchg
and
xor
arpl
pushf
xchg
cmpsb
js
in
push
clc
xchg
lcall
xor
jmp
les
arpl
or
in
loopne
subl
into
mov
int3
sub
xor
lret
xchg
pop
movsl
and
inc
cmp
or
mov
sbb
test
aad
cmp
fildl
dec
cltd
xor
sbb
in
lcall
push
xchg
fisttps
iret
mov
mov
inc
mov
in
sbb
jbe
pop
adc
mov
cld
cmp
sahf
mov
push
inc
insb
add
jmp
dec
pop
jl
das
aam
pop
loopne
enter
cmp
xchg
negl
int
addr16
sbb
push
in
sbb
imul
aas
and
jmp
andl
out
fisttpl
or
push
int3
into
sub
mov
add
jo
imul
fimuls
fcomps
cltd
sbb
xlat
push
and
clc
idivb
or
stos
inc
mov
cmp
outsb
imul
push
rcrl
fmulp
mov
xor
cmc
sbb
xchg
popa
mov
into
sbb
xor
or
pop
mov
jg
ret
mov
push
adc
cmp
pushf
cwtl
cwtl
lods
dec
xchg
mov
movsl
jo
cmp
inc
in
arpl
fidivs
xor
cmp
test
push
mov
mov
dec
movsb
dec
sbb
sbbl
fidivl
push
ret
mov
mov
or
and
pop
mov
add
dec
mov
cs
jne
inc
lret
fcoml
and
inc
jnp
outsl
push
outsb
dec
inc
push
lock
xor
inc
mov
xchg
adc
pusha
mov
pop
xchg
cmp
push
fmul
jle
and
pop
clc
loope
cld
mov
pop
xor
rclb
iret
cli
fbld
idivb
nop
cltd
je
movsl
add
mov
push
cmpsl
pushf
ja
cwtl
mov
sub
push
stos
scas
pop
mov
add
nop
cmp
in
fistpll
cmp
add
lret
inc
pop
shlb
push
adc
or
push
pop
jmp
inc
pop
pop
adc
ja
pop
pop
cmp
dec
xor
push
jmp
dec
push
fidivl
not
fldenv
sub
outsb
push
jb
mov
and
jle
pop
cmp
mov
xchg
sbb
jg
cld
mov
test
jp
fucomi
xchg
out
enter
sub
mov
push
fcoms
lcall
ficompl
mov
pop
outsl
mov
lret
inc
lock
push
cltd
mov
adc
pop
not
cmp
dec
pop
fcmove
push
in
push
lods
add
in
pushf
fcmovnbe
dec
or
pop
imul
xor
inc
cld
jecxz
inc
ror
jne
xor
jo
or
pop
xchg
cltd
rcrb
fiaddl
jg
xchg
xlat
int3
sub
mov
inc
adc
xlat
pop
inc
sbb
jecxz
and
fwait
pop
inc
or
mov
push
mov
pop
xor
out
xor
ret
sbb
iret
lret
cmc
pushf
or
je
pop
mov
inc
and
mov
sar
cmp
mov
cmpsb
dec
mov
xchg
xchg
inc
xchg
xor
or
enter
cmpsl
jge
enter
out
cmp
nop
pop
add
les
dec
std
js
pop
ja
jg
mov
movsl
jns
or
mov
xchg
icebp
negl
cmpsl
iret
sbb
enter
dec
sbb
pop
std
push
das
xor
faddl
adc
jae
xchg
ljmp
xor
movsl
lock
xchg
and
pop
incl
jle
fcmove
sub
sbb
pop
out
sub
lcall
push
add
or
mov
clc
xlat
mov
jle
dec
iret
mov
mov
dec
xor
xchg
adc
inc
pop
push
aam
mov
xchg
xor
arpl
cmp
xchg
fwait
fwait
out
in
jmp
xor
add
dec
adc
sub
sub
mov
sub
mov
add
mov
es
mov
aaa
cltd
stos
mov
cld
xlat
mov
sbb
orb
xor
out
int3
and
xchg
adc
in
xor
fiaddl
mov
cmp
ficoml
jp
into
inc
mov
cmp
cmpsl
pop
out
xchg
sbb
add
sti
dec
in
cmc
in
xchg
jns
xor
data16
xorl
enter
pop
cmp
xchg
or
aad
dec
mov
sbb
pushf
pop
data16
movsl
call
pop
mov
jae
dec
inc
xor
cmp
out
in
and
pop
repz
hlt
fwait
test
notl
out
xor
cmpsl
cwtl
lret
adc
shrl
add
jno
icebp
and
adc
mov
cmp
xor
dec
lret
pop
mov
cmp
sub
notl
sti
pop
pop
rcll
addr16
lods
dec
mov
test
pop
dec
pop
mov
mov
cmp
cmp
mov
add
mov
imul
in
sbb
test
aad
idivl
in
insb
mov
mov
jmp
jmp
cmc
sbb
or
sbb
insb
nop
pop
dec
pop
fsubr
and
jle
push
cmp
and
fsubs
mov
decb
pop
cmpb
mov
dec
inc
sub
pop
pop
pop
lret
dec
add
cmp
xlat
repz
xor
ret
mov
mov
aam
fildll
out
ds
xor
call
sub
aad
xchg
loopne
jb
lret
and
sbb
pop
jecxz
out
push
jnp
or
stos
and
sbb
mov
out
and
add
xchg
loop
call
xor
sub
cltd
in
out
jmp
mov
jb
and
sarl
cltd
out
rorb
mov
pushf
push
sbb
pop
jns
frstor
push
insb
in
js
dec
cmp
sub
dec
adc
jns
and
pop
xor
and
xchg
fwait
cmp
or
clc
sbb
xor
cmp
inc
jle
sti
in
push
aad
inc
fwait
idivb
jmp
fidivl
mov
inc
add
shr
ja
movsb
stos
push
sbb
imul
mov
das
and
pop
push
enter
test
jne
ret
popa
sub
popf
xor
mov
inc
inc
dec
xchg
imul
fildll
mov
cmp
fistpll
pushf
mov
aad
add
xor
iret
into
jge
int
and
cmp
pop
lahf
sahf
sbb
pop
adc
push
rcrb
sub
mov
push
push
pmulhuw
fidivl
cltd
psubsw
mov
popa
es
aad
pop
and
sbb
jp
xlat
dec
pop
push
cli
out
icebp
insl
stc
call
leave
repz
jne
inc
pop
push
out
or
pop
lret
pop
popl
outsl
mov
xlat
cltd
xor
pop
push
or
inc
ds
xor
jbe
xor
jg
xor
pop
mov
movsl
or
or
pop
add
inc
dec
mov
fldl
and
push
pop
clc
xchg
sub
or
bound
cli
incb
rorb
movsb
push
ss
xchg
testl
push
and
cld
divl
push
fbstp
mov
mov
hlt
test
sub
xchg
jo
iret
or
out
mov
add
nop
lds
jns
jp
and
aam
mov
dec
je
pop
mov
dec
int
dec
cmpsb
jo
jecxz
inc
push
inc
insl
or
sub
xor
sub
xlat
fcmovbe
adc
inc
cmc
enter
lock
xchg
xlat
outsl
push
jecxz
inc
push
xor
icebp
sub
xlat
cmp
lea
jb
jg
dec
adc
sub
pop
push
and
stos
les
lahf
mov
inc
fcomps
iret
cld
and
test
mov
int
mov
in
xchg
les
sbb
rcl
js
clc
or
ds
and
in
cwtl
sub
and
fdivrs
in
pop
es
jge
nop
orb
cmc
shl
mov
adc
or
cld
clc
dec
inc
inc
stos
mov
sub
sbb
push
fwait
xlat
rolb
sbb
sub
aad
jb
xor
pop
and
es
dec
mov
cmp
adc
jns
jmp
movsl
ja
pop
adc
das
push
andl
pop
leave
jb
sbb
ds
adc
fmul
in
cmp
sbb
sbb
or
arpl
inc
push
jmp
cmp
cmp
int3
xor
push
sar
dec
cmc
movsb
mov
lods
les
in
ljmp
test
stos
dec
fsubs
adc
rcl
jg
sbb
fcmovnu
int
push
ret
push
mov
mov
cmpsl
xchg
push
out
pop
jae
dec
sbb
inc
push
jecxz
les
sub
and
gs
mov
pop
int
sub
test
push
inc
test
adc
dec
cmp
sbb
or
cwtl
testl
jmp
popa
aad
dec
and
sbbl
popf
jg
xchg
and
and
jl
loope
mov
xchg
cmp
scas
inc
lret
outsb
testb
adc
lock
inc
dec
push
push
mov
in
adc
dec
mov
shlb
xchg
in
adc
jno
sbb
inc
mov
sahf
jmp
mov
and
jle
cmc
test
push
aad
outsl
add
jnp
cmp
in
js
mov
sbb
push
mov
xchg
aaa
push
insb
mov
enter
xor
jmp
in
cmp
test
lret
xchg
out
and
and
dec
ljmp
repz
imul
push
ljmp
adc
outsl
mov
fstpt
aam
mov
pop
sub
pop
cmp
lock
adc
das
sub
sbb
mov
out
les
xchg
es
push
push
stos
fdivrl
or
cld
cmc
lock
sub
aad
pop
lods
jno
pushf
mov
clc
movsb
fsts
clc
int3
jle
cmp
cmp
pop
test
push
xchg
mov
es
stos
add
outsb
mov
mov
xchg
cmp
or
push
cwtl
adc
popl
je
enter
push
or
jp
xor
je,pn
dec
std
inc
insb
dec
cmc
int3
pop
add
push
dec
loope
push
fistps
loopne
ja
inc
pop
mov
jg
jno
loope
stos
jl
out
rorl
dec
je
bound
popf
test
push
imul
ret
push
loop
fiaddl
shll
movsb
data16
dec
push
cmc
lret
shll
jg
add
lock
mov
cld
mov
sbbl
adc
pop
dec
popf
bound
andb
dec
repnz
cli
push
hlt
loop
jae
aaa
les
sbb
test
imul
adc
push
repz
dec
cmpb
xlat
aad
repz
xchg
cmc
xchg
lcall
mov
lods
or
dec
aas
mov
test
aam
mov
cwtl
scas
int
pop
jb
inc
mov
lret
xor
inc
pop
int3
inc
mov
dec
push
push
adc
lock
push
enter
or
jns
sbb
push
cmp
xor
and
jmp
stos
inc
cmp
pop
xchg
adc
sub
pop
mov
lea
aad
inc
int3
add
cmp
push
sub
aad
mov
test
cmpsl
jbe
push
xchg
or
addr16
cmp
int3
imul
outsl
enter
cmp
cmp
les
int
cltd
shr
push
jg
cwtl
pop
repz
xor
outsl
adc
cmp
inc
mov
mov
into
aad
pop
aaa
das
insl
xor
xchg
inc
push
mov
in
or
ret
and
addr16
jp
dec
mov
popf
inc
mov
scas
cmpps
add
in
xor
sahf
aad
mov
add
nop
sub
sbb
or
stos
jae
insb
xchg
xor
add
cmp
push
fistl
dec
test
fwait
dec
cli
popf
fistpll
or
int3
into
fidivrl
into
xor
jbe
cli
call
iret
ficoms
xlat
xor
sbb
and
iret
add
roll
aas
xchg
mov
leave
ds
cmp
enter
inc
push
mov
enter
xchg
pop
xor
fwait
cmp
sahf
in
imull
dec
lahf
ljmp
jns
data16
sbb
aam
adc
jbe
sti
int
lods
or
fldenv
xchg
cmp
sahf
sub
lret
fdivl
or
xor
pushf
xlat
arpl
and
pop
jmp
in
in
mov
jge
nop
ficomps
jl
jl
adc
enter
inc
inc
pop
jno
iret
xchg
cmp
test
push
mov
lea
jmp
test
xchg
addr16
in
aam
js
sbb
shlb
ljmp
sbb
cmp
and
and
xchg
xor
adc
and
ja
or
inc
ja
or
ja
cmp
movsb
cmp
sub
or
out
in
or
push
mov
xor
add
adc
shrb
jnp
or
shrl
sub
lods
mov
fstps
pop
stc
jb
iret
rolb
cmp
stc
lods
pop
int
xchg
in
cmp
sub
cmp
inc
in
lock
lock
sub
add
mov
pop
mov
jp
frstor
and
adc
jno
pop
and
mov
clc
enter
repz
test
cmp
cmc
popa
inc
push
xlat
or
repz
jo
mov
xor
shrb
ja
sbb
fsubr
xor
in
jne
and
imul
lea
cmp
repnz
into
add
cmpsb
loop
mov
or
fidivl
jnp
mov
mov
xor
jge
mov
icebp
dec
cmp
jae
and
outsb
test
and
cmpsb
pop
xor
push
add
cmpl
shrb
dec
shll
stos
inc
sahf
loopne
and
inc
stos
bound
aaa
cmp
jecxz
cltd
xlat
lea
mov
and
arpl
jg
test
inc
shlb
inc
push
std
sub
cmp
jp
adc
mov
jbe
je
loop
mov
ljmp
test
fisubrs
scas
rcl
sub
enter
rcr
iret
or
sahf
subb
hlt
in
lcall
mov
out
bound
ror
sbb
mov
stos
repnz
cmp
jl
sbb
mov
jle
hlt
and
jns
je
enter
sbb
fcomip
in
dec
stc
jnp
mov
or
mulb
mov
aam
cmp
mov
sbb
sub
in
movsl
dec
in
aaa
sbb
push
int
leave
xor
testb
and
inc
scas
mov
pushf
jae
inc
shlb
and
ljmp
pop
cli
rcrl
mov
imul
inc
mov
mov
add
pop
cmpsb
repz
clc
cmp
mov
add
xor
jg
adc
das
sbb
stos
pop
std
pop
sbb
fstpt
lcall
cmp
inc
push
xchg
mov
pushf
popf
mov
pop
lret
cmp
sub
dec
test
xchg
fwait
mov
aad
add
or
mul
outsl
lods
lret
lods
mov
push
in
subl
fildll
dec
out
mov
sub
loopne
movsb
and
xor
jge
cwtl
imul
imul
int
sub
inc
mov
jo
and
cmp
pop
fdivs
scas
adcb
es
mov
sub
mov
fstl
dec
dec
sub
test
movsb
mov
jbe
push
in
ja
adc
xlat
lea
mov
jmp
jp
pop
inc
pop
add
pop
cld
in
mov
cs
push
cmp
sbb
or
sub
pop
int
jno
dec
add
insb
lock
sbb
rep
fists
not
aad
and
pushf
adc
push
call
jo
stos
inc
dec
dec
lret
test
add
mov
cmp
out
sbb
jge
jb
dec
repnz
and
cmp
shr
sbb
jge
xor
fstpt
mov
xor
xchg
add
ljmp
iret
ffreep
loopne
pop
xchg
out
dec
xchg
stos
out
xchg
jg
adc
js
dec
adc
mov
inc
jg
lcall
sub
adc
mov
xor
and
inc
xor
mov
pushf
xlat
pop
mov
xor
jp
adc
add
les
and
scas
sbb
adc
loope
pop
dec
xchg
xchg
mov
loopne
imul
shlb
push
pop
cmpl
fcmovne
xchg
jo
negl
xchg
add
inc
xlat
jb
sub
sub
shr
push
and
pop
mov
shl
inc
xchg
pop
cmp
movsl
pop
and
or
jge
enter
xchg
pop
or
jg
scas
outsl
xchg
leave
imul
int
xchg
mov
pop
adcb
cld
sbb
out
cli
out
mov
xor
pop
dec
outsb
out
or
xor
xor
push
add
stc
jmp
push
cmp
jns
icebp
jl
mov
xchg
movsb
dec
cmp
lcall
cmc
imul
cltd
dec
mov
ljmp
leave
dec
pop
cmp
adc
lretw
shll
adc
cli
mov
cmp
xor
xor
cmp
lods
mov
lcall
fcmovbe
sbb
ret
sub
enter
and
stos
dec
shll
pop
add
or
jnp
inc
rclb
lcall
dec
pop
add
xor
xor
lret
dec
xchg
xor
inc
loop
mov
es
dec
mov
int3
fisubrs
pop
pushf
sbb
imul
test
or
or
push
sbb
push
add
jecxz
push
dec
jae
ds
sbb
ret
xor
pushf
xchg
sbb
out
mov
sbb
sub
lahf
cmp
aam
lret
stc
pop
jnp
dec
clc
cmp
or
cmp
lret
das
sahf
pop
out
or
xchg
mov
popa
add
xchg
dec
mov
dec
and
out
inc
lea
ss
add
mov
mov
mov
insl
mov
jbe,pn
sbb
or
xor
pop
inc
movsb
sbb
in
insl
push
nop
xor
aad
sub
xor
sub
mov
sbb
mov
mov
fs
cmp
or
xchg
xchg
push
test
xor
fsubl
mov
sub
pushf
cmp
jmp
out
loop
jnp
ljmp
in
or
fwait
shl
inc
xor
sub
mov
sarl
or
xor
xchg
ds
notl
adc
inc
xor
aad
fwait
sub
dec
mov
push
inc
adc
jmp
sahf
push
lcall
sub
not
sbb
sbb
inc
or
mov
out
pop
test
stos
cmp
mov
and
xor
adc
inc
sub
stos
clc
fdiv
cmp
sarl
and
dec
mov
cwtl
frstor
or
hlt
sub
clc
xchg
inc
enter
xor
xchg
jecxz
and
mov
mov
out
pop
xchg
les
or
push
insl
dec
test
loop
test
lods
in
and
pop
pop
mov
dec
jb
sbb
loope
sub
mov
mov
xchg
mov
repnz
jmp
cmp
xor
fidivl
xlat
repz
lahf
scas
or
loopne
aad
iret
push
sub
sbb
out
pop
jno
pop
inc
xor
xchg
stos
out
enter
push
push
add
add
push
cmp
fdivrs
push
ss
xor
mov
sets
inc
cmovnp
mov
cmp
fsubrp
or
test
shl
or
aam
cmc
std
mov
aas
cmp
inc
arpl
sub
push
addr16
cmpsb
pop
and
addb
addr16
jno
sahf
adc
push
scas
ret
mov
xor
adc
xchg
add
sbb
and
in
int
dec
out
pop
or
arpl
pusha
daa
repz
and
mov
cs
push
test
mov
mov
loope
out
xlat
in
or
adc
or
cwtl
add
sbb
loop
cmp
rorl
add
and
inc
test
cltd
adc
add
adc
jmp
cli
add
cld
int3
sbb
push
cmp
stos
cmc
xchg
test
dec
xor
jmp
rcr
dec
or
and
and
dec
xchg
xchg
pop
add
loopne
nop
mov
or
sti
sbb
jecxz
dec
lds
popf
ljmp
movsl
jp
aad
int3
dec
push
and
fcoml
mov
rcr
cmpsb
in
notb
xchg
into
jnp
fnstcw
and
mov
pop
fwait
lock
fxch
dec
mov
xchg
xor
xlat
push
jo
repz
xor
dec
or
or
dec
adc
inc
cmp
in
push
jo
mov
test
xchg
jnp
add
jno
sarl
inc
xor
int3
pop
mov
leave
xor
std
sarb
push
insb
jnp
test
adc
inc
cmp
fidivrl
rcrl
scas
cmc
mov
repnz
xlat
in
pop
xchg
dec
cmp
into
cmpsl
cmp
pop
rcll
mov
xor
cmp
cmpsl
rorl
push
mov
pop
ss
mov
mov
movsl
and
test
test
xchg
sbb
and
fnstcw
cmc
dec
sbb
iret
flds
xor
dec
cmp
pop
inc
in
mov
xor
lret
int
insl
call
clc
lcall
insb
mov
cwtl
jne
in
sub
iret
push
add
test
mov
add
xchg
fadd
mov
addr16
inc
lcall
nop
inc
in
roll
cli
in
lcall
mov
aas
aas
icebp
xor
movsb
test
mov
xlat
lods
push
cmpsl
je
call
cmp
cmpsl
add
fnstenv
repnz
xor
int3
mov
xor
lcall
add
lea
inc
ret
sub
pop
sarb
inc
xor
pop
maxps
ljmp
jle
loop
cmp
outsl
mov
sahf
xchg
cld
test
xchg
mov
lods
fxch
or
xchg
arpl
mov
xor
outsl
inc
int3
test
inc
call
rcl
pop
jmp
rcl
ror
arpl
adc
xor
or
repz
mov
icebp
sub
jae
popf
mov
or
sbb
out
or
xor
push
scas
mov
fwait
stc
mov
push
push
cmpsl
mov
mov
adc
gs
shll
out
stos
outsl
jnp
mov
mov
sbb
jge
rcrb
xor
inc
ret
and
mov
inc
pop
jmp
imul
test
fnsetpm(287
push
out
cmp
dec
add
incl
lahf
stc
mov
enter
pusha
js
dec
roll
stos
cmpl
and
add
and
xchg
mov
out
and
pop
ret
test
in
pop
bound
xchg
frndint
jp
das
int
inc
or
mov
or
adc
iret
pop
push
fidivs
scas
adc
mov
daa
fwait
cmp
stos
xchg
mov
mov
adc
adc
or
dec
adc
mov
scas
out
clc
xchg
call
fcmove
jecxz
enter
sbb
pop
push
dec
push
cmp
addr16
lahf
and
dec
data16
mov
fcoml
push
out
jnp
ffreep
push
popf
jo
or
adc
or
in
addr16
mov
scas
les
sub
arpl
jecxz
call
push
sbb
in
jge
loopne
mov
iret
daa
dec
add
imul
gs
mov
ds
int3
xchg
loope
lea
ja
in
cmp
lods
fstps
inc
cmp
imul
sub
lret
mov
loopne
xor
cmp
xchg
fidivrl
ret
mov
fstp
push
ds
aam
push
fsubp
sub
mov
lds
push
stos
sbb
xlat
inc
inc
sbb
ds
xchg
out
sbb
dec
mov
stos
in
shlb
push
scas
sahf
sar
xchg
aam
outsl
xor
cmp
movsl
lret
lea
inc
sbb
pop
dec
lahf
rorb
push
jns
out
sbb
and
imul
sbb
pop
mov
data16
pop
lcall
dec
repnz
les
cwtl
xchg
leave
mov
enter
jbe
lahf
xchg
mov
cmp
mov
mov
jmp
jnp
push
pushl
rcl
fcomp
xchg
ljmp
jge
sbb
xchg
addr16
mov
sahf
pushf
scas
in
int3
xchg
pop
xlat
cmp
dec
mulb
loopne
aad
xlat
dec
out
mov
cmp
and
in
mov
cltd
cmpsb
test
sub
and
stc
dec
xchg
popa
mov
xlat
pop
movsb
inc
dec
inc
xor
dec
jne
test
sub
pusha
ja
cmp
fidivl
sub
sbb
cmc
sbbl
mov
xchg
imul
add
adc
push
add
pop
inc
cmp
xchg
inc
daa
daa
pusha
xor
repnz
jne
out
std
mov
sub
fldenv
stos
repz
add
out
dec
jg
inc
hlt
test
add
xor
cmp
and
test
push
fistpl
mov
or
fsubrs
xchg
mov
pop
idivl
shr
mov
clc
cltd
inc
stc
loopne
pop
out
imul
pop
push
data16
fisubrs
and
sub
and
inc
xchg
pop
or
mov
stos
cmp
cltd
mov
ja
xchg
scas
jae
sbb
cmp
push
or
jo
dec
es
sub
lea
pop
lret
adc
cmpsl
sbb
sbb
jmp
mov
lret
mov
lods
out
cltd
mov
aas
pop
incl
jecxz
pop
sbb
dec
lods
ficoml
test
inc
sub
mov
adc
test
fistps
jne
mov
add
popf
fiadds
test
les
jl
sub
clc
xchg
and
fdivrs
aas
mov
or
inc
lock
pop
ljmp
out
and
add
stos
arpl
sbb
loopw
cmc
mov
mov
dec
outsb
test
mov
jp
jmp
bound
shrl
nop
mov
inc
out
in
push
adc
aaa
push
or
sbb
and
xor
pop
scas
ficoml
sub
jg
jo
cmpl
xorb
push
sub
shll
lock
leave
mov
mov
pop
leave
mov
pop
mov
and
xor
or
je
les
push
enter
int
dec
mov
shll
clc
ftst
mov
ds
es
push
and
xor
sub
xchg
mov
ds
dec
movsl
test
or
loope
mov
jo
pop
test
sub
push
shlb
scas
add
stos
pop
sub
add
pop
push
out
mov
jmp
cmp
mov
sub
int3
sub
shl
jle
scas
call
insb
add
pop
xchg
scas
scas
test
sbb
popa
xchg
sub
fwait
jmp
lret
jns
jo
mov
mov
bound
pop
lret
lcall
mov
in
add
sbb
aad
divl
jecxz
dec
cs
dec
jp
mov
jno
jmp
sub
cmp
das
pop
inc
shrb
cmp
scas
out
xlat
test
nop
int3
mov
sub
out
cmpsb
outsl
out
iret
fcmovbe
add
cmp
jp
mov
lret
pop
mov
ret
sub
pushf
xchg
jno
jg
inc
cmp
je
push
add
js
imul
lcall
inc
adc
test
rorb
les
mov
jne
stos
pushl
negb
daa
mov
movsb
xor
and
mov
inc
xor
or
fdivs
int3
sub
in
inc
pop
dec
iret
mov
jnp
movsb
test
stos
dec
adc
add
rcr
or
mov
and
or
xlat
mov
lock
fwait
push
aam
and
xor
stos
cmp
loopne
stos
imul
mov
xor
icebp
cmp
fimuls
imul
push
fidivs
or
or
call
inc
xchg
mov
mov
dec
mov
lock
cli
fisubrs
cld
pop
dec
mov
sbb
movsl
mov
add
sarl
test
ss
outsl
cmpsb
mov
mov
dec
jb
adc
push
pop
test
push
push
and
sbb
test
mov
les
cli
jo
xor
xor
and
in
arpl
fistps
dec
push
and
popf
imull
inc
cmp
pop
dec
das
sbb
leave
pushf
and
cmc
rcpps
clc
sbb
dec
fsubrs
in
imul
std
push
add
inc
das
pop
xor
lahf
xlat
push
inc
jb
dec
add
popa
addr16
add
js
and
popf
dec
es
mov
dec
push
xchg
testl
and
and
xor
cmp
mov
je,pn
aad
cmp
inc
imul
cmp
jae
cli
and
fcoml
test
xchg
pop
jae
adc
jp
hlt
imul
fldt
sub
xor
dec
adc
push
and
dec
jecxz
or
pushl
mov
add
or
pop
enter
xchg
jo
lret
ss
mov
test
das
xchg
repnz
nop
dec
jae
fdivr
fmulp
xor
call
stos
xchg
fsubrl
negl
aad
xor
cmp
dec
xor
mov
xor
ja
sti
fdiv
ror
rorb
aam
movsb
cld
mov
dec
pop
jns
or
sahf
mov
repz
enter
iret
in
sti
xlat
xor
pop
xchg
fcomp
repz
frstor
jns
cmp
addl
dec
jno
inc
idivb
mov
and
dec
out
jg
mov
pop
jae
adc
test
xlat
fldt
nop
in
cmp
repz
mov
std
push
xor
ret
arpl
cmp
call
xor
test
jmp
lock
out
cmp
add
dec
sbbl
arpl
xlat
in
sub
jbe
mov
and
xlat
subl
imul
pop
call
ret
sbb
fcmovnbe
ds
lahf
xchg
mov
inc
imul
dec
jo
xor
cmp
mov
xchg
shlb
or
popa
jnp
jmp
pop
aam
xor
jecxz
mov
mov
fnstenv
cs
push
lcall
mov
push
fstpt
lock
sub
xchg
aaa
add
xchg
push
mov
jmp
push
movsl
or
in
or
clc
inc
lock
sub
hlt
add
popf
lahf
rcrl
movsl
cmpsb
add
lcall
sub
imul
ret
push
jnp
mov
jge
mov
je
or
test
cmp
jno
mov
dec
jns
inc
xchg
dec
jmp
cld
add
and
pop
mov
div
dec
jmp
int
and
mov
xor
popa
mov
repnz
jl
xor
out
add
sahf
aam
shl
out
sahf
call
cmp
cmp
stos
mov
xchg
dec
xor
shll
enter
sub
insb
mov
repnz
mov
or
mov
imul
sbb
les
xchg
cltd
jmp
dec
xor
add
out
arpl
dec
iret
cmp
xor
into
adc
pop
sub
jecxz
filds
in
rorl
repz
lcall
outsl
cmp
adc
push
pop
push
rorl
lods
xlat
rorb
das
push
xchg
pop
lret
add
inc
push
cmpsl
dec
ret
repz
rcrb
loopne
adc
mov
push
repz
in
xchg
add
mov
fsubrs
mov
insb
push
cmp
mov
mov
jge
inc
out
mov
aaa
mov
imul
add
int3
mov
jmp
push
cmp
fwait
aad
stos
dec
xchg
cmp
dec
imul
xor
andl
decb
mov
insb
add
fwait
xor
les
imul
lret
test
in
or
mov
cmpl
lock
xor
fidivrl
sub
movsl
stos
cmp
lcall
jbe
ficomps
clc
push
pop
movsl
push
sub
in
clc
push
xor
xchg
adc
sub
mulb
mov
mov
inc
or
xor
idivb
mov
pop
or
dec
cmc
stos
fcom
dec
lods
xchg
or
dec
aas
xchg
mov
mov
mov
fcompl
mov
aad
cmp
hlt
sub
or
sbb
pop
mov
test
push
icebp
les
mov
das
scas
les
jmp
pop
cmp
jmp
cmp
push
lods
ftst
cmpsl
ljmp
movsb
adc
in
add
gs
int3
ret
fstpt
sbb
gs
xor
mov
imul
ret
int
inc
xlat
pop
mov
inc
inc
xorb
imulb
dec
xor
cli
mov
dec
jle
into
push
jmp
adcb
jo
push
mov
lcall
inc
repnz
cmpsb
test
imul
pushf
mov
rcrb
xchg
dec
dec
jp
cmp
pop
dec
mov
aam
push
sbb
fldt
test
lahf
mov
lods
xor
xor
lds
aas
scas
jbe
enter
adc
ret
jbe
or
out
pusha
lret
mov
not
push
jg
add
ljmp
xchg
jmp
out
mov
sbb
in
fdivl
cmp
cmp
rcrl
hlt
lods
xor
xor
dec
ffree
call
or
bt
int3
fistpl
cmp
ja
pop
out
push
jne
adc
pop
nop
push
in
and
mov
cmp
xchg
lcall
jno
cmp
mov
xlat
and
js
jmp
push
or
daa
cmp
std
cmp
out
out
fmul
into
into
push
fs
cmp
lea
dec
xor
pop
pop
scas
inc
and
pop
or
xchg
fcmovb
jb
fistpl
out
jp
aaa
rcrl
push
push
mov
test
jb
inc
jnp
scas
add
sbbl
jae
lret
or
lret
aaa
lock
das
xchg
jp
jmp
subb
push
imul
fldt
jg
jmp
cmp
pop
repnz
mov
push
jmp
popa
nop
jnp
jno
pandn
jne
dec
pop
push
push
pop
lock
leave
fistps
sahf
and
in
iret
loop
cmpsl
test
cmp
out
call
adc
and
cmp
xor
xchg
negl
out
outsb
popf
mov
push
dec
add
mulb
jmp
test
mov
jp
scas
xor
out
pop
pop
add
dec
jg
push
dec
adc
sub
inc
cwtl
dec
sbbl
lds
add
mov
cltd
pop
dec
pop
das
fucomp
js
xchg
lahf
fsubrs
cmp
lock
push
xchg
dec
outsb
dec
test
lds
or
test
sub
arpl
push
inc
xchg
push
pop
out
xchg
mov
cmp
cmp
mov
call
mov
pop
call
mov
sub
ror
mov
cmp
dec
fidivrs
rorl
dec
mov
int3
sbb
jp
lcall
mov
shr
xlat
xor
mul
enter
psubusb
sbb
mov
push
mov
cmp
sbb
jae
adc
or
pop
out
pop
clc
loope
lahf
xor
pushf
cmp
xor
mov
pop
xlat
cmp
jns
push
push
add
xor
cmp
or
push
cmp
mov
inc
test
test
jmp
cmc
or
lcall
test
mov
sub
pushf
cli
fadds
inc
mov
lret
mov
pushl
hlt
scas
sub
bound
jle
loop
sub
mov
inc
jecxz
hlt
cmp
push
jge
add
cmp
and
mov
or
push
sub
inc
inc
jecxz
inc
or
stos
imul
jae
les
push
cld
and
popf
addb
mov
mov
jmp
movsb
xor
dec
fsub
scas
test
test
movsb
rol
mov
pop
cmp
xor
lods
dec
jbe
sarb
stos
mov
hlt
call
pop
test
push
add
mov
sub
inc
aad
jp
int
movsb
ret
xor
in
pop
jns
mov
adc
mov
xchg
in
repz
xlat
adc
push
lret
inc
pop
dec
les
enter
push
xchg
rclb
mov
push
xchg
and
jbe
idivb
pop
rcrb
mov
mov
ror
xchg
adc
cmp
xor
push
sbb
dec
sub
sub
mov
or
cmpsb
ss
ljmp
rep
xlat
cltd
mov
pop
scas
leave
inc
xor
shrl
leave
mov
fneni(8087
and
cli
inc
mov
mov
and
cmp
aad
xor
lock
push
mov
cmp
push
into
cmp
les
nop
lcall
out
xlat
dec
or
popf
out
mov
outsl
fildl
jnp
add
xchg
icebp
push
sbb
out
sbb
cld
inc
jmp
xor
cmp
sbb
out
out
push
mov
dec
sbb
imulb
inc
adc
jae
cmc
repz
loop
xor
jmp
lds
lahf
fcomi
lea
mov
push
iret
xor
ret
test
push
jl
fistl
adc
rclb
mov
xchg
out
sub
push
mov
add
lds
daa
out
lea
iret
mov
cmp
mov
aad
add
sub
cmp
idivl
push
sbb
xchg
jecxz
aam
enter
dec
xchg
adc
mov
jg
imul
inc
push
fsubrs
ljmp
push
cmp
jge
mov
call
jae
cmp
push
mov
icebp
rorl
rcr
sbb
mov
jb
pop
mov
jle
cmp
cmp
and
fwait
mov
sub
loope
jmp
ret
ret
lret
push
jbe
dec
dec
cli
and
jmp
add
sub
mov
mov
fiaddl
fildl
sbb
sbb
sub
aas
cmp
cs
test
sbb
jle
push
push
dec
icebp
xlat
neg
cmp
lret
ss
repz
add
push
mov
ds
fcmovnbe
mov
or
and
jnp
ja
or
xorl
push
xchg
insl
dec
jae
push
rcr
das
mov
lea
jo
mov
add
shlb
sub
mov
cli
sub
outsl
out
adc
push
adcl
sbb
mov
jg
cld
popa
inc
imul
into
xchg
push
jae
addr16
out
dec
roll
pop
sahf
mov
xchg
je
pusha
push
in
fdiv
lret
scas
enter
inc
lods
nop
aas
xor
movsb
in
arpl
push
lret
and
inc
stc
in
cmp
xor
imul
fcmovnb
rclb
les
hlt
out
xchg
or
dec
insl
mov
and
repnz
lea
mov
aam
movsb
mov
jle
jno
dec
and
pop
rorl
push
rorb
xor
jnp
aam
aas
xor
mov
jnp
aad
push
enter
stos
mov
or
sbb
cmc
xchg
mov
xor
fimuls
mov
fsubs
std
pushf
dec
fisttpl
or
les
pop
push
xchg
adc
inc
ret
pop
lods
add
or
pop
sub
inc
out
xchg
jmp
jp
lret
xchg
xchg
adc
pop
call
sbb
adc
push
fildl
and
cs
mov
sahf
fldenv
xchg
push
cmpsb
and
popa
insb
lock
lret
adc
sub
jnp
lds
xchg
mov
sbb
nop
cmp
sub
mov
or
fucomp
mov
pop
shrl
dec
cmp
xacquire
stos
xchg
in
push
xor
rcrl
dec
xchg
xchg
xor
dec
out
mov
pop
lcall
movsl
iret
fcomp
push
cmp
jno
adc
aas
cmp
adc
out
or
xlat
cmp
dec
inc
into
enter
sahf
xchg
pop
add
and
and
cmpsl
or
cmp
cltd
insb
xchg
nop
pop
and
xchg
xorb
fstps
rcrl
mov
into
fisubrl
lods
pop
out
cld
mov
cli
pop
jns
out
xchg
lea
cmp
adc
pop
mov
mov
fdivs
jge
rorl
add
push
xor
cli
int3
fldt
cmc
or
push
push
push
sub
sub
sub
sbb
inc
clc
or
int
or
xor
sahf
cmp
ds
mov
pop
data16
xchg
dec
cmp
clc
push
sub
xchg
add
sub
push
adcl
lcall
sub
push
mov
js
out
inc
cmp
cmp
in
mov
loopne
lock
or
idiv
adc
mov
sub
hlt
out
mov
push
add
rcr
loop
mov
jp
jge
movsl
adc
dec
mov
insb
inc
xchg
in
lds
cmp
xlat
sbb
mov
and
inc
mov
push
je
ret
dec
outsl
and
lret
add
fildll
clc
pop
mov
xor
movsb
fldenv
test
ljmp
push
jnp
jmp
test
and
out
mov
sub
inc
repnz
sbb
dec
push
xor
hlt
imul
mov
cmp
mov
ljmp
fistl
out
push
push
aad
cmpsb
lock
rol
iret
jl
in
mov
pop
mov
jge
inc
mov
and
inc
nop
aad
cmp
pop
icebp
and
mov
cmp
mov
sbb
xchg
xor
scas
inc
lds
leave
dec
add
adc
dec
lcall
xchg
push
push
std
xchg
sbb
push
scas
leave
rcrb
push
or
dec
sbb
inc
dec
lods
inc
sbb
push
enter
test
push
and
repz
mov
and
sbb
dec
clc
divb
out
loopne
or
and
sbb
and
cmp
out
out
out
mov
mov
in
mov
test
icebp
or
cmp
stc
mov
mov
inc
repnz
push
movsb
int3
xchg
xor
in
rcrl
xchg
xchg
not
or
testl
push
fstps
jnp
rcr
or
loopne
dec
adc
stos
clc
cs
outsb
cmp
and
mov
mov
mov
sub
loope
out
mov
lods
fistps
js
pop
push
sarl
test
jp
fisubrl
jmp
or
xchg
xor
repz
inc
pop
pop
cmp
mov
les
orl
ss
add
push
aaa
push
imul
jo
outsl
in
mov
jle
xor
mov
mov
mov
stc
push
add
call
and
jae
mov
pop
ret
mov
leave
ud1
add
inc
jne
ficomps
enter
fisttpl
test
ja
cmp
adc
pop
jge
add
xchg
dec
jmp
add
mov
rorb
dec
fldenv
push
bound
xor
pop
shll
mov
xor
mov
mov
shrb
clc
testb
inc
jae
sub
xchg
sub
sub
inc
cmpl
pop
sarl
sub
enter
sbb
dec
es
jnp
jp
dec
adc
cwtl
push
cmp
stos
rclb
pop
loopne
xchg
sub
jmp
clc
pop
push
or
xor
dec
sub
loopne
fists
das
adc
mov
push
out
das
adc
lods
sub
imul
mov
icebp
mov
inc
cmp
dec
loopne
xor
dec
cli
lret
jnp
xchg
or
push
or
dec
inc
in
fistpll
imul
push
mov
out
imul
jnp
lret
js
or
lret
test
jl
xor
add
inc
pushf
and
push
cmpl
pop
dec
inc
sub
pop
rclb
pop
jmp
ds
mov
mov
and
loopne
loop
notb
mov
jp
inc
pop
aas
cmp
or
adc
imul
das
bound
adc
out
lahf
pop
and
xchg
sub
sbb
adc
jae
shlb
in
ja
adc
mov
clc
leave
mov
mov
pusha
out
xor
xorl
sub
mov
sub
dec
es
sbb
cmp
sbb
inc
fsubl
mov
pop
jg
test
pop
decb
jmp
dec
add
xchg
push
cmp
jnp
xchg
lcall
sbb
inc
sbb
adc
jns
pop
int3
repz
fcoml
adc
pop
insb
loop
cwtl
shl
dec
pop
mov
movsb
sub
mov
pop
insb
je
add
push
rolb
sub
aad
add
sbb
cmp
scas
leave
int
cmp
pop
push
andl
jmp
lds
cmp
mov
pop
shlb
outsl
and
repz
adc
or
jge
xor
cs
mov
or
dec
push
add
notb
movb
sub
inc
mov
test
loope
mov
ss
je
mov
xchg
rcll
sub
xor
or
xchg
loope
cmp
mov
popf
out
xor
imul
mov
or
cmp
movsl
not
fcoms
pop
ds
mulb
or
dec
rclb
push
pop
cmpsb
scas
pop
mov
movsl
sbb
stos
pusha
icebp
xor
icebp
jg
and
mov
enter
or
xor
inc
fcmovnbe
mov
mov
daa
push
pushf
aaa
cmp
repz
jae
ljmp
inc
mov
pop
in
mulb
mov
shll
mov
les
inc
jo
sbb
sbb
fistpl
pop
imul
scas
dec
push
frstor
fisttpl
into
sahf
mov
mov
aad
cltd
adc
or
xor
mov
mov
mov
xchg
test
add
jmp
cmc
pop
gs
div
pop
shrb
fadds
test
xor
jl
repnz
cmp
outsl
into
mov
cmp
leave
inc
lahf
in
cmc
push
pop
or
movsl
or
test
and
or
jecxz
mov
and
testb
test
sub
pop
push
xor
xor
lahf
fadds
xchg
in
cwtl
outsb
jg
mov
mov
es
or
jae
xchg
iret
xor
rcrb
js
lret
jp
addr16
sub
mov
xchg
pusha
pop
adc
sub
leave
les
int
pop
sbb
sub
test
push
adc
fcomp
push
dec
mov
mov
mov
aas
pop
dec
push
push
jae
add
add
mov
mov
inc
xlat
pushf
ret
lret
and
decb
xchg
dec
mov
and
faddl
jg
hlt
cmc
jb
xchg
fdivs
fwait
xor
mov
jnp
inc
leave
jge
add
xchg
icebp
arpl
and
aad
in
cwtl
andb
xor
sbb
test
or
lahf
call
jnp
enter
and
ljmp
fistps
push
push
cmpsb
in
jne
pop
pop
cmp
sbb
inc
mov
xor
cmc
sbb
mov
out
jbe
pop
push
or
pop
sub
aaa
mov
or
sbb
int3
loopne
jb
or
in
scas
add
inc
sarl
mov
nop
int3
pop
scas
jmp
cmp
scas
popf
lcall
adc
out
ja
aad
mov
shlb
fidivrl
outsl
sbb
push
sbb
add
cmc
push
add
mov
adc
lret
dec
icebp
inc
fisttpll
icebp
inc
pop
cmp
or
movsl
aaa
or
mov
sahf
and
jl
xor
setp
mov
inc
adc
mov
in
sub
js
std
rcr
aad
inc
lcall
lret
mov
into
or
test
daa
mov
pop
inc
xchg
data16
into
mov
mov
push
dec
mov
ds
pop
mov
divl
jno
aad
dec
es
mov
test
testl
lds
cmc
sahf
insl
sbb
xlat
in
std
lock
add
fdiv
ret
add
fdivr
cltd
jo
lahf
dec
pop
test
lock
mov
sub
or
rolb
fsubrs
mov
adc
push
add
push
adc
movsl
cwtl
inc
mov
push
mov
addr16
add
and
les
pop
in
lock
inc
or
loopne
daa
cmp
sahf
shrb
ret
mov
jp
lods
cmp
mov
inc
sub
fs
xchg
filds
fcmovne
rorl
inc
dec
xchg
adc
push
ret
cld
cmp
fs
nop
inc
inc
jns
push
outsl
mov
jne
ds
fs
ja
test
add
inc
ljmp
mov
jo
xor
scas
mov
push
enter
xor
outsb
fisubrs
or
mov
arpl
in
clc
aad
ficomps
cmp
test
cmp
push
out
cmp
fnstsw
add
xchg
cmp
pop
sub
mov
inc
in
sarb
jnp,pt
sbb
and
insl
jge
adc
test
aas
or
push
in
rolb
shrl
cmp
add
pop
mov
out
and
bound
push
or
xor
out
mov
or
xchg
popa
daa
add
imul
mov
sbb
jle
lcall
or
inc
btr
scas
insb
cmc
rcll
cmpsb
imul
movl
sbb
or
mov
inc
sbb
fildll
lret
movsb
bound
lock
xor
push
sub
int3
stos
jg
test
inc
xor
rcrb
jno
shlb
addr16
iret
lcall
xchg
push
adc
aaa
lods
cmp
mov
repnz
mov
pop
push
adc
jnp
add
jp
roll
pop
das
lahf
xchg
lds
nop
push
daa
sti
add
xacquire
das
lods
fwait
in
jg
sbb
xchg
popf
enter
clc
inc
cmp
mov
fbld
pop
mov
cltd
iret
shlb
xchg
addr16
pushf
jne
pop
jb
sub
xor
jg
or
ret
outsl
movsb
sbb
or
loope
add
pushf
adc
lret
sarb
push
xchg
ja
fimull
inc
sarl
loope
les
rcr
jg
cmp
ljmp
mov
cmp
xchg
fdivl
adc
cmc
imul
mov
inc
sub
sbbb
or
jae
sbb
or
jmp
into
jo,pt
aas
push
rcr
aam
or
fbld
xor
xchg
and
and
mov
iret
xor
gs
xchg
sbb
mov
faddl
loop
mov
add
aaa
jg
test
adc
or
cld
jne
mov
mov
and
movsb
xchg
push
jnp
push
popa
jnp
mov
jae
mov
or
xlat
xor
popl
test
dec
dec
outsl
xor
xor
fsubrp
test
andl
cmp
mov
xchg
div
test
call
pop
iret
repz
rcr
sbb
addr16
xchg
dec
ljmp
fmul
nop
jno
cmpsb
mov
aam
adc
cmp
jecxz
das
push
dec
pushw
or
sahf
inc
jmp
mov
test
movsl
inc
loopne
fwait
xor
aam
pop
cmp
lods
and
test
add
mov
aaa
adc
sub
push
int
dec
sub
int
dec
dec
jmp
cmp
dec
ljmp
add
in
push
add
rol
dec
xchg
adc
mov
mov
adc
inc
aas
and
lock
cltd
push
pusha
repz
imul
sbb
pop
and
cld
movsb
mov
xor
pop
test
xchg
jecxz
imul
in
dec
lret
adc
jmp
shrl
xor
add
pop
mov
and
sbb
cmp
lret
lcall
jp
enter
outsb
dec
mov
push
mov
adc
test
les
dec
lea
leave
inc
sbb
sbb
mov
popl
xchg
mov
mov
incb
cmp
loop
je
xchg
js
test
aad
mov
jb
jg
sub
aas
data16
stos
push
dec
out
lods
iret
pop
dec
stc
cmp
or
mov
popf
mov
popf
mov
push
es
in
or
sub
sbb
cmp
jp
movsb
adc
pushl
popf
into
mov
dec
out
clc
xchg
pop
add
add
mov
pop
movsb
ficompl
outsl
mov
fwait
jge
add
sub
ret
pop
cmpsl
mov
add
out
adc
cli
mov
and
bound
lods
clc
push
cmpsb
ss
cmp
jp
test
inc
add
shlb
xchg
out
jp
in
pop
cmp
test
lea
cmp
xchg
and
inc
mov
movsb
enter
movsl
mov
in
add
push
scas
mov
lods
inc
adc
aas
stos
popa
mov
mul
aaa
mov
pop
sbb
push
test
dec
shll
sbb
fadds
out
mov
outsl
push
cmpsb
jle
test
fcmovnbe
sbb
jae
scas
mov
leave
shl
ds
repnz
es
pop
pop
and
jmp
xchg
cld
push
out
popf
fstps
or
mov
adc
test
inc
fsubl
mov
shll
jl
jo
pop
mov
outsl
push
jo
mov
push
jge
or
lock
imul
outsl
jecxz
fadds
mov
inc
cmp
jne
adc
popf
cmp
jb
mov
pop
push
xchg
pushf
add
call
lock
cmp
mov
fidivrs
dec
dec
mov
xor
dec
add
xor
orb
adc
pop
adc
in
pop
sub
fistl
into
jmp
jmp
mov
xchg
jecxz
sbb
fwait
lcall
and
jecxz
aaa
imul
add
fdivrl
cmp
or
shll
mov
and
mov
pmulhw
dec
addps
mov
dec
cld
mov
aas
movsl
aaa
rcrb
dec
jno
push
sbb
lret
stc
test
lahf
push
into
sbb
mov
mov
mov
movsl
cmp
pop
xor
ja
cli
mov
fwait
xchg
and
sbb
adc
sub
pop
mov
cmp
mov
incl
out
cs
out
xchg
sbb
imul
cmpsl
sub
adc
sub
cli
cmp
popa
pop
subl
cmp
dec
push
add
fists
decb
int3
inc
add
ljmp
adc
sub
and
and
ret
xor
xchg
and
test
inc
repz
mov
movzbl
sub
out
je
mov
test
and
insb
push
pop
and
mov
xchg
outsl
cwtl
jle
sub
in
negb
xchg
add
les
jl
movsb
lods
shr
scas
int
mov
cmp
lock
and
inc
pop
mov
in
js
imulb
cmp
repnz
adc
adc
sbb
jmp
pop
pop
in
divb
repz
cmp
cmpsb
mov
addr16
sahf
add
add
sti
ds
push
in
enter
fistpl
push
lock
ds
add
jl
cmpsb
xor
aas
xor
sbb
add
lret
outsl
cmp
sub
or
popf
mov
in
cmc
and
mov
push
mov
scas
mov
dec
jp
fsubs
aad
or
lock
dec
pusha
stos
stos
lods
loopne
jbe
xchg
aaa
imul
xor
fstpt
sarb
xor
call
jae
and
dec
movsb
mov
movsl
ss
fs
js
cltd
stos
hlt
repz
adc
rclb
lods
inc
lcall
shr
rcrb
jmp
pop
add
cltd
mov
fst
aad
mov
fmuls
dec
ret
sbb
sub
add
loopne
add
sbb
or
mov
data16
jl
fidivs
hlt
xor
out
aaa
and
or
cwtl
pushf
repz
mov
lods
test
mov
stos
std
dec
cmp
xlat
push
or
cltd
xchg
dec
sub
roll
mov
xor
insb
out
add
cld
bound
add
daa
jae
sub
xor
aad
iret
int
incl
xchg
jnp
mov
pop
push
pop
pop
and
mov
adc
pop
inc
fcomip
xor
dec
popa
pop
in
test
fdivrp
pop
shll
repz
clc
rol
sub
push
testl
loope
inc
into
sub
pop
icebp
dec
outsb
les
push
pop
jg
jbe
or
adc
dec
fbld
xlat
lret
lock
mov
sub
add
ds
sarl
loop,pn
cmp
dec
fsubp
sub
ljmp
xchg
xor
in
mov
sahf
xlat
clc
and
cmpl
mov
mov
lret
mov
cmp
and
sub
movsb
dec
add
aam
adc
mov
pop
ficompl
shll
pop
mov
fsubs
cwtl
sbb
test
mov
or
jne
xchg
jp
mov
cmp
mov
pop
or
movl
mov
sbb
push
fistpl
neg
xor
popf
sbb
repz
pop
scas
xor
push
xchg
mov
xchg
mov
js
push
adc
dec
loopne
out
shl
cwtl
les
iret
imul
mov
pusha
or
fnstsw
les
mov
repz
sub
xor
shl
mov
js
jecxz
push
push
sub
sahf
repnz
and
xchg
sbb
push
cmc
adc
lds
ja
or
xor
sar
jno
inc
movsb
hlt
data16
cmc
jl
outsb
in
pop
stos
les
sar
lret
call
pushf
cmc
call
sar
and
add
shl
xchg
js
cmp
stc
js
jbe
inc
dec
repnz
or
mov
xor
push
imul
sub
inc
mov
ret
ss
xchg
jmp
stos
cs
jnp
xchg
jg
stos
xor
fcoms
das
pop
out
inc
dec
shll
or
mov
push
rcrb
adc
fcomi
or
sbb
jne
lds
mov
nopl
popa
sub
or
sbb
rcrb
jbe
xor
aaa
pop
add
arpl
mov
add
add
out
addr16
mov
shr
fcos
xor
mov
inc
int
repz
ja
mov
lcall
mov
sub
and
shll
add
div
dec
stc
jnp
cmpsl
sbb
mov
sbb
mov
mov
les
mov
mov
jne,pt
or
add
stos
arpl
scas
pop
sbb
gs
popa
icebp
mov
ds
pusha
push
loop
inc
sbb
mov
push
clc
sbb
push
jb
or
cld
push
or
clc
xchg
add
sahf
jmp
xorl
pop
das
out
aaa
lods
or
fiaddl
dec
sar
fcomps
cmp
repnz
dec
xchg
adc
sti
mov
or
mov
jmp
out
push
or
mov
aam
pop
stos
jecxz
cmpsl
ljmp
sbb
sbb
inc
in
or
adc
mov
loop
xchg
jnp
pop
aad
or
pop
fs
aam
pop
and
xchg
and
mov
cltd
mov
jmp
fbld
fcmovnb
stc
cmp
repz
xor
jg
adcb
mov
out
pop
xchg
imul
pop
sbb
js
jmp
cmc
test
arpl
aad
lret
ror
lods
aad
or
imull
add
arpl
stos
sbb
xor
mov
add
or
lea
aad
int3
add
or
mov
fistl
pop
xor
in
mov
add
jle
push
or
jl
push
sarb
fstl
out
cmp
push
iret
add
enter
in
mov
pop
mov
scas
or
lock
fistpl
mov
xchg
or
imul
or
cmpsl
lret
inc
dec
jne
dec
scas
hlt
lds
insb
push
sahf
fldl2t
loop
test
push
dec
test
stc
push
test
lcall
repnz
cmp
stos
push
jns
xchg
mov
add
xor
dec
or
insl
shlb
fs
mov
xchg
jge
mov
negb
int3
in
rorb
mov
aad
mov
xlat
inc
mov
add
bound
ljmp
cmpl
jle
enter
jnp
jns
lgs
test
fxch
xor
xor
clc
sbb
push
xor
and
xor
xlat
in
in
or
mov
xor
xor
call
in
int
cltd
xor
pushf
push
xchg
pop
fildl
xor
jmp
add
jae
pop
xor
lret
sub
negl
repz
sub
jo
sbb
jmp
scas
dec
push
dec
sbb
inc
push
jp
add
jae
xor
dec
mov
inc
push
mov
pop
stos
jmp
jne
lock
test
sub
cmp
vmovapd
loopne
or
xchg
ss
scas
xchg
xlat
iret
test
out
add
xorl
mov
adc
fdivl
and
xchg
data16
jae
xchg
jmp
in
mov
xor
pop
push
scas
icebp
les
or
mov
in
outsl
rorb
cwtl
mov
push
int3
es
push
jmp
lock
fisubrl
cmp
aam
out
int
in
ja
cltd
call
pop
imul
pop
sbb
xor
mov
pop
adc
mov
int
clc
stos
dec
xchg
in
push
movhps
cmpsl
xor
fsubrl
dec
cld
add
cmp
mov
mov
mov
pop
or
and
mov
xchg
push
ret
pop
sub
data16
xor
fsubs
in
or
testl
sar
out
xor
xchg
mov
mov
push
inc
inc
dec
and
dec
xor
out
aam
xor
adc
sbb
popf
and
sbb
jecxz
inc
cmp
testb
pop
inc
imul
mov
dec
ret
push
xor
gs
adc
stc
push
int3
xchg
add
xchg
dec
pop
ljmp
out
cmc
xor
xchg
or
nop
repz
jecxz
dec
xor
lahf
cmp
incb
xor
fabs
int
cmpsl
jmp
in
pushf
cmp
and
test
jl
cmp
pusha
mov
int
daa
or
or
or
shlb
add
int3
int
mov
aad
adc
jmp
cmpsb
lock
and
mov
cmc
dec
mov
enter
fidivrs
pushf
js
sbb
xor
or
in
jnp
xchg
adc
sar
negb
add
lcall
xor
add
mov
loop
xor
das
xchg
lds
push
pop
mov
push
flds
jno
sub
jmp
popf
mov
cmp
enter
test
fisttpl
test
cs
das
aas
xchg
cmc
jecxz
stos
fdivs
xor
sbb
sub
fisttpl
mov
xchg
jmp
lahf
add
rolb
jbe
dec
mov
popa
aam
les
roll
add
cld
insb
or
int3
sbb
mov
fbld
sub
les
rorb
outsb
sahf
outsb
cmp
xchg
or
sub
cmp
arpl
ss
xor
dec
int3
or
fildl
cmp
mov
cli
xchg
sahf
mov
lahf
out
cmp
xor
push
push
jp
jb
jecxz
and
xor
aam
out
sbb
mov
push
push
jmp
add
rcl
sar
add
les
cmc
and
sbb
aas
sub
out
xor
fwait
jne
in
insb
lods
hlt
adc
arpl
mov
inc
jbe
pop
xchg
sbb
fdivrp
sahf
ret
clc
mov
add
jg
jmp
sahf
push
mov
hlt
inc
sbb
in
cmpsl
daa
movsl
mov
lcall
in
and
int3
xor
shrl
movsb
pop
fisttps
std
jo
add
sub
add
add
repnz
sbb
lcall
imul
lahf
je
in
jp
inc
in
lcall
sbb
mov
negl
push
test
adc
xorl
jmp
scas
repnz
cmp
xchg
ds
pop
mov
sub
jmp
sahf
push
add
xchg
int3
out
pop
aad
ret
and
mov
lods
cld
inc
notb
aas
or
test
or
mov
cmp
aad
mov
adc
ljmp
add
cmpsl
test
pop
push
sbb
cltd
or
push
sub
fisubrl
mov
xor
imull
daa
cmp
xlat
xlat
jnp
out
dec
sbb
or
int
pop
mov
fldcw
call
ret
push
imul
insl
xor
jnp
mov
pop
cltd
push
mov
add
clc
cmp
iret
aad
pop
push
imul
cli
icebp
int
fistps
in
cmp
decl
into
lods
stc
rcr
cld
stc
pop
xchg
shr
pop
jecxz
add
add
and
int
jns
pop
iret
dec
aaa
cmc
xchg
adc
je
mov
les
dec
mov
jmp
pushf
adc
repz
aam
sbb
push
dec
xchg
xor
xchg
test
in
and
xor
cli
dec
dec
pop
lcall
mov
jmp
or
pop
pxor
jae
push
add
in
es
mov
xor
cmp
inc
sub
movsb
xor
test
pop
inc
stc
cmp
push
jne
or
adc
aad
lds
gs
or
iret
ret
lock
sbb
add
fldt
mov
cmpsl
pusha
jnp
sarb
xchg
mov
shl
pop
repz
push
mov
mov
insb
cmp
testl
and
adc
testb
sub
xor
enter
adc
dec
dec
sbb
loope
lcall
sbb
push
shr
ret
dec
mov
or
mov
stc
pop
mul
push
call
cmp
xchg
pop
jbe
xchg
fiadds
ja
cmpsb
jnp
test
push
and
int3
mov
les
or
aaa
xchg
push
pop
inc
sub
lods
xorb
shl
cmp
sub
mov
scas
sti
or
enter
fwait
ljmpw
les
aam
sub
popa
sbb
xlat
decb
mov
add
scas
adc
dec
xchg
cli
arpl
pop
mov
aas
cmp
or
out
hlt
imulb
lock
fcmovnbe
xchg
xor
negb
cs
mov
call
mov
aam
sub
lret
lahf
push
sub
jle
repz
iret
pop
xor
repnz
aad
xchg
imul
in
jmp
sar
and
pop
cmpsl
xchg
mov
xor
popa
pop
mov
add
and
hlt
arpl
repnz
cmp
enter
inc
in
adc
clc
sub
xchg
sub
xor
rorl
jns
repnz
cmp
inc
xor
mov
push
sbb
jnp
jmp
jmp
jnp
hlt
mov
int
sub
cs
dec
nop
dec
adc
dec
les
inc
xchg
dec
xchg
sarb
out
xchg
push
inc
push
inc
xor
stos
in
cli
adc
and
xor
test
or
and
fcmovne
jbe
aad
push
cld
jne
mov
xor
mov
and
pusha
push
and
in
jmp
cmp
xchg
dec
or
jne
xchg
dec
ds
roll
jno
jne
ds
mov
mov
mov
inc
dec
lret
xlat
repz
out
jo
mov
inc
dec
adc
sbb
ficomps
test
dec
neg
nop
scas
cltd
cmc
sub
xor
add
dec
push
sub
insb
inc
cmp
jge
shlb
xchg
cs
xchg
add
arpl
sub
lret
cmp
movsl
fadds
pop
arpl
imul
adc
jmp
repz
out
enter
pop
sub
cmp
sub
and
mov
adc
adc
mov
pop
pop
jp
dec
fiadds
jne
dec
sbb
rorb
inc
fs
je
jmp
nop
std
enter
pop
mov
loope
inc
cmp
pop
clc
hlt
aad
or
add
inc
push
lahf
or
sub
mov
testl
jo
call
out
pop
cmp
cmp
sub
mov
dec
pop
inc
in
mov
xchg
jmp
das
ret
mov
jecxz
pop
aas
pop
mov
cmp
sahf
jo
cmpsl
in
call
popa
cmp
mov
scas
pop
cmp
repnz
sti
add
ficompl
sub
mov
ja
in
outsl
int
std
mov
movsl
add
sub
enter
and
push
pop
add
icebp
cmp
fcompl
mov
push
add
sbb
lods
test
jae
insl
shll
mov
or
add
add
pop
mov
dec
lret
add
or
data16
pop
sbb
mov
into
nop
jne
addr16
movnti
stc
ds
xor
nop
sub
scas
rolb
clc
stos
out
aad
aas
mov
add
adc
mov
pop
sub
add
adc
push
jmp
or
repz
adc
je
dec
dec
xchg
xchg
push
mov
cwtl
popa
popf
scas
add
cwtl
mov
adc
arpl
mov
int
mov
mov
ljmp
jmp
add
test
push
mov
or
dec
xchg
dec
leave
xchg
xor
push
filds
in
outsb
or
dec
xlat
ffreep
movsb
repz
shrl
jo
sahf
lcall
pop
sbb
xchg
cmp
cmp
xchg
jnp
push
in
or
mov
push
pop
in
out
push
xor
push
xlat
xor
inc
fistpl
idiv
mov
fisubl
add
out
mov
andl
jle
cmp
pop
call
mov
dec
int3
mov
push
imul
sub
sub
popa
jp
jne
fwait
lret
bound
xor
xlat
nop
dec
xchg
cmp
mov
inc
movsb
xor
cli
in
mov
sbb
xor
add
mov
popa
adc
push
imul
cmp
dec
dec
imul
lret
call
imul
mov
inc
lods
mov
imul
push
dec
std
jne
sbb
and
pop
icebp
mov
dec
dec
data16
rolb
das
add
pop
cmc
imul
sub
or
cld
in
leave
das
xlat
aad
inc
cmp
jo
ja
in
lret
mov
push
jg
jnp
dec
scas
out
imul
jbe
push
push
or
sti
mov
cmp
mov
push
sbb
mov
xchg
add
sbb
jmp
call
pop
mov
dec
inc
out
popf
js
sbb
push
adc
mov
in
fdivrs
cmp
andl
ret
push
inc
adcb
add
aaa
pop
jg
insl
cmc
jle
cmpsl
jnp
outsb
mov
fwait
clc
arpl
outsl
rol
jp
fldenv
cmpsl
mov
std
pop
jno
ficoms
xor
ret
dec
xchg
sbbl
aad
mov
ljmp
or
add
or
sub
pusha
dec
cltd
std
cmp
notb
out
sub
shrb
mov
aaa
pop
push
push
sarb
inc
cmp
sahf
popa
inc
testl
lret
imul
jge
hlt
aad
lock
les
in
es
mov
dec
dec
push
ljmp
clc
jnp
push
adc
in
add
loopne
jb
testb
int
pop
push
pushf
and
repz
and
sahf
mov
pop
fildll
outsb
push
arpl
mov
lahf
ret
in
mov
repnz
lcall
lods
sbb
jmp
in
jg
xor
pop
cmp
cmp
push
rclb
hlt
pop
dec
dec
push
xor
lods
xlat
push
lret
xchg
outsl
mov
cmp
imul
nop
cwtl
mov
pushf
push
add
iret
jge
daa
test
pop
cmc
fildll
repz
mov
or
xchg
mov
push
in
mov
sub
sbb
sbb
add
pop
add
cmp
mov
mov
pop
les
adc
mov
pop
jnp
sbb
xchg
mov
in
dec
sub
jne
cmp
mov
cmp
push
addb
dec
cmp
sahf
stos
ror
jmp
sub
cld
mov
enter
add
lcall
mov
inc
mov
test
push
add
gs
sbb
les
mov
dec
inc
ja
sbb
cmp
pop
je
pushf
dec
pop
popf
mov
push
je
pop
xor
inc
stos
pop
jge
rolb
pmaddwd
cmp
mov
mov
sbb
out
mov
inc
pop
inc
mov
repz
stos
mov
pop
btcl
push
imul
aad
inc
cmp
negb
jnp
sbbl
cmp
sub
cmc
pop
rol
cmc
pushf
fistl
dec
ficoms
inc
decb
loop
ds
inc
push
mov
aad
ss
stos
fiaddl
frstpm(287
cmp
push
mov
xor
sub
sub
int
stos
lcall
lock
mov
pop
push
mov
jb
fldenv
xlat
popl
out
xchg
mov
inc
dec
fstpt
out
lahf
mov
cmp
enter
testb
xor
xor
test
out
rcl
cmp
mov
pop
mov
sbb
or
shr
pop
adc
int
out
insl
add
scas
test
stos
xor
mov
jmp
pop
test
loopne
push
jmp
cli
cmp
sub
test
sub
ret
lcall
cmp
loopne
loopne
inc
adc
mov
push
out
jns
repnz
mov
ljmp
pop
add
out
add
sub
in
mov
cwtl
ret
cmp
andl
cmc
cmp
ljmp
sbb
sahf
je
imul
push
jnp
aam
je
not
cmpsl
mov
stc
xchg
pop
leave
daa
jg
or
icebp
fiaddl
pop
jne
or
or
pop
clc
mov
and
push
call
mov
xor
mov
fmulp
mov
ds
sub
inc
sbb
sub
and
pop
cltd
and
mov
shlb
lds
lret
or
and
cmp
fcomip
mov
fdivs
cmpsb
mov
andl
or
in
push
lock
mov
stos
pushf
sbb
fsubr
add
in
mov
mov
clc
ret
repz
or
popa
add
movsb
cmp
xchg
adc
insb
addr16
mov
xchg
in
mov
push
push
jmp
pop
push
arpl
ds
je
movsl
movsb
fcmovne
mov
mov
xchg
stos
inc
cmp
add
jnp
test
xor
repnz
fldenv
int
sbb
ljmp
mov
cmp
stos
mov
nop
add
jle
imul
popl
insl
lcall
movsb
dec
pop
and
shll
xchg
repnz
jmp
inc
repz
xlat
pop
fucomip
test
repz
xor
adcl
scas
imul
mov
xchg
cmpsl
mov
les
push
shl
mov
inc
sbb
cltd
mov
into
les
stos
imul
and
inc
dec
aad
cmp
es
lret
dec
les
outsb
push
pop
icebp
adc
lcall
jbe
pop
movsl
xor
mov
icebp
pop
sbb
sub
in
sub
jge
mov
jp
lahf
enter
mov
fwait
arpl
lods
or
cmp
push
loopne
push
lcall
icebp
add
pop
xor
jg
or
xchg
aas
hlt
ror
das
and
or
mov
addr16
cmp
inc
push
push
pushf
insl
rorl
and
jb
xor
jbe
int3
mov
xor
jnp
cmp
repz
pop
std
or
sbb
jne
ds
popl
mov
dec
push
stos
aad
jno
inc
imul
insl
call
xor
xchg
inc
ljmp
cwtl
inc
enter
xor
mov
aam
ret
cmp
mov
cmpsb
inc
scas
jle
xchg
inc
adc
int
mov
loop
inc
loope
cmp
insb
inc
mov
ja
inc
dec
mov
out
jge
jmp
popl
add
repz
or
jmp
scas
test
jo
out
popf
mov
add
fs
jae
push
mov
xchg
push
aaa
mov
or
sub
stos
lret
push
das
cs
shlb
aam
repz
or
mov
and
into
inc
dec
push
sbb
rclb
cmp
sbb
sbb
out
add
sarl
cmp
xchg
out
xchg
mov
mov
jmp
aas
or
ret
mov
out
and
push
ds
add
fptan
cs
inc
stos
xor
mov
jmp
repnz
mov
shl
sub
in
pop
mov
je
jo
testl
testl
mov
fistpl
lea
add
sub
cmp
aam
jae
stc
sub
aaa
inc
lret
adc
adc
out
xchg
in
stos
mov
xor
ds
inc
mov
es
call
cs
adc
adc
int3
mov
repnz
das
iret
idiv
into
mov
in
xchg
fistpll
les
movsl
push
xor
lods
int
arpl
dec
push
jmp
lds
test
popf
mov
and
xor
sub
pop
jnp
xor
popf
out
fwait
dec
lret
adc
and
filds
mov
xor
mov
push
lret
and
iret
xchg
rcr
adc
jmp
shlb
out
int3
xchg
out
and
shlb
push
add
test
adc
icebp
cmp
mov
fsubp
inc
addl
xor
repnz
ja
sbb
loopne
sarl
scas
iret
cmp
and
cmp
test
fldt
cmc
jnp
mov
add
ljmp
push
negb
pop
js
and
mov
fcmovbe
mov
outsl
data16
lret
push
mov
cmp
dec
fdivrl
popa
loopne
jae
ljmp
cmp
pop
andb
mov
lret
mov
scas
pop
dec
daa
xchg
xchg
nop
sub
aad
pop
inc
mov
xchg
xchg
popf
sub
ret
cmp
jnp
xchg
mov
push
push
fistpll
scas
lds
stos
hlt
jp
jnp
cmp
dec
mov
fldt
xchg
repz
pop
dec
or
gs
mov
cmpsl
repz
add
iret
lcall
mov
stc
mov
lret
aad
lret
cmp
pop
cmp
iret
push
scas
stos
jo
lock
shl
adc
lahf
shlb
and
push
or
and
pop
movsb
int
in
sbb
adc
movsb
aad
dec
jge
popa
lods
jg
js
out
inc
fwait
mov
aad
cmp
adc
aas
icebp
les
jo
gs
push
dec
movntq
mov
dec
movb
les
ror
jecxz
push
dec
testl
jbe
mov
and
mov
cld
jnp
clc
cmp
push
mov
lea
sbb
fldenv
lahf
aam
xor
inc
push
in
or
push
mov
test
adc
mov
sub
sti
shrl
aam
aad
lods
nop
mov
mov
rcll
push
dec
mov
iret
out
and
rcr
stos
jmp
cld
mov
jnp
dec
repnz
pop
mov
fstpt
insb
test
arpl
dec
stos
cltd
jg
xlat
ljmp
lret
jnp
sub
or
adc
xchg
stos
lret
mov
jecxz
cmp
dec
les
or
or
jg
sbbl
mov
inc
ret
fdivrs
in
sbb
ret
sub
clc
jp
or
pop
jbe
pop
xor
fmull
aaa
xchg
mov
mov
adc
movsb
jnp
xor
pop
sahf
fldt
and
arpl
out
xor
fstpt
insl
and
push
sbb
fwait
jne
inc
push
adc
jg
je
lret
in
sahf
fistpll
lock
notb
add
jne
in
cmp
push
mov
fcmovnb
adc
int
cmp
and
mov
cmp
rclb
dec
cmp
in
or
sbb
add
xchg
cmp
xchg
imul
add
fdivp
repnz
or
inc
xor
enter
inc
test
add
add
adc
inc
pop
call
jno
les
or
mov
dec
jg
fsts
outsb
dec
lods
dec
aad
mov
cmp
sbb
mov
jnp
push
pop
push
add
roll
sub
mov
stos
in
clc
repnz
mov
outsl
mov
call
or
pop
nop
lock
repz
aas
cmp
pop
mov
mov
add
mov
cmpsb
adc
cli
or
mov
inc
pop
push
xor
mov
stos
dec
cmp
sbbl
iret
pop
cmp
jecxz
xor
test
inc
call
addr16
loope
lea
jbe
outsb
leave
int3
xchg
ljmp
ja
test
lcall
les
fcom
adc
xor
cmp
pop
cmp
adc
inc
in
jnp
ret
push
into
cwtl
xor
and
clc
mov
xchg
sahf
fidivl
lret
pop
idivl
lods
mov
mov
cmp
enter
xor
scas
mov
mov
aad
pop
adc
push
int3
fcomps
ljmp
dec
sbb
adc
repnz
icebp
jecxz
push
dec
xor
repz
lret
out
push
stos
dec
fisubl
mov
xor
ret
ret
adc
sub
mov
jno
sub
pop
int3
inc
pop
mov
es
or
pop
aad
mov
jl
mov
add
stos
fwait
cmp
jae
popl
int
or
fdivrs
in
cmp
pop
ret
lret
notb
xchg
popa
jg
les
xor
jns
aas
push
das
jae
in
mov
pop
aam
jns
sarl
adc
popa
xchg
push
mov
negl
inc
call
pusha
jmp
and
jmp
jns
mov
mov
repnz
sbb
mov
dec
mov
lcall
das
cmp
or
xchg
test
and
notl
sbb
shrl
pop
sub
dec
aam
cmp
mov
push
sub
stc
bound
cmp
sub
cmc
sbb
scas
in
enter
push
jle
and
dec
and
xchg
aad
sub
jae
fbstp
clc
call
xchg
arpl
and
inc
mov
jnp
push
xor
cld
sbb
nop
and
inc
or
lods
ret
mov
dec
mov
pusha
les
xor
daa
push
or
fildll
lahf
ljmp
push
push
xchg
ja
ret
nop
xlat
jno
or
lcall
or
es
nop
aam
fildl
push
mov
mov
pop
jmp
xchg
jns
mov
enter
cmp
mov
dec
xchg
mov
push
nop
or
pop
mov
std
or
add
xor
fnstcw
mov
pop
mov
les
sub
jno
ret
es
aas
push
add
jmp
adcl
add
pop
cmp
in
out
repz
adc
xlat
int
popa
lds
test
mov
dec
movsl
xor
push
push
orb
sub
dec
stos
aas
jg
xchg
mov
jno
daa
jnp
pop
out
add
out
add
clc
repz
aam
cmovl
and
cmp
inc
cmp
or
dec
out
push
es
push
push
pop
cmp
inc
ss
mov
jne
rcr
popa
mov
cmpsb
pop
adc
add
xchg
add
xor
mov
mov
mov
cmp
sbb
fs
out
xchg
adc
std
jmp
sbb
inc
std
push
or
and
bnd
in
or
push
sahf
jae
lcall
aam
xchg
xchg
fisubl
outsb
sub
push
add
cmpsb
or
and
xchg
aad
jnp
inc
test
leave
iret
cmp
add
xor
sbb
aam
and
mov
dec
dec
mov
xchg
pop
dec
xor
mov
leave
les
hlt
fucomip
mov
pop
cmpsb
daa
mov
push
lret
or
fdivl
mov
loope
inc
hlt
ja
mov
cltd
popa
insb
int3
pop
and
loope
sub
mov
dec
cs
lods
fwait
cli
mov
movsl
pop
pop
loop
mov
pop
nop
test
mov
and
jmp
or
sahf
fldpi
xor
int
xor
pop
mov
push
ja
lods
sub
push
je
mov
pop
push
fadds
les
lcall
dec
out
loop
mov
or
push
push
sub
test
pop
mov
adc
pop
mov
dec
mov
cltd
lock
add
pop
cmp
lcall
cmp
sbbl
mov
ds
xchg
adc
pop
loope
push
jns
icebp
mov
sub
outsb
cmp
mov
test
arpl
sub
ret
sub
test
or
test
adc
sub
pop
fidivrl
sysexit
in
add
pop
xor
xchg
ja
add
test
sub
sahf
xor
xchg
insl
xchg
and
adc
push
sbb
mov
inc
jmp
loopne
test
lods
idivb
scas
xchg
aas
jg
lret
mov
sub
sub
or
inc
jge
fcmovbe
fisttps
ret
or
aas
andb
and
cmp
mov
aam
loope
pushf
jg
dec
push
sub
andb
hlt
rcrb
mov
mov
dec
das
mov
adc
fsubrl
xor
addr16
ret
cwtl
cltd
jmp
cwtl
pop
sbb
addl
sub
les
sub
push
ret
mov
int
cld
jl
jg
pop
and
je
divl
mov
pop
loope
xor
test
notb
mov
out
cmp
lcall
jmp
bound
popf
cli
cmp
dec
jmp
mov
outsl
xchg
inc
add
les
push
sahf
push
cmpsl
adcb
stc
in
loopne
mov
lret
cli
call
mov
jnp
xchg
mov
xor
push
jae
mov
pop
ljmp
in
mov
fmuls
or
push
add
mov
pop
movsb
arpl
mov
movsb
dec
sub
jnp
dec
into
ljmp
rcl
loopne
clc
mov
xlat
hlt
pop
ret
jmp
add
lret
xor
fisttpl
mov
aas
fdivs
adc
in
and
mov
les
sub
pop
mov
mov
cli
sbb
pop
jmp
cmp
scas
push
add
xlat
and
lcall
jmp
clc
xchg
hlt
repz
jns
pop
jno
in
std
jl
jmp
jo
lcall
es
inc
icebp
mov
lcall
xor
sub
xlat
xchg
imul
jne
btc
sbb
mov
push
xchg
xchg
in
dec
push
sbbb
lret
inc
jp
cmc
mov
fs
mov
repz
in
lret
dec
aam
inc
cld
inc
sbb
inc
aam
fcoml
popf
mov
pop
mov
and
jo
shll
ss
pop
cmp
cmp
ret
rcrb
pop
lret
sbb
in
mov
sti
in
jnp
dec
lea
loope
addr16
lods
pop
add
iret
in
mov
in
rcl
or
fucomi
cmp
add
fcmove
aad
mov
inc
cmp
and
sarb
sub
mov
mov
mov
mov
cmp
dec
leave
push
push
xor
aad
or
ja
and
push
pop
jmp
dec
inc
cwtl
dec
shrb
subl
out
subl
xor
insb
insl
decl
jmp
xor
mov
repz
aam
dec
or
test
mov
int3
xchg
sub
arpl
add
repnz
xchg
inc
mov
pop
sub
mov
fisttpl
je
xor
pop
arpl
mov
mov
call
jmp
inc
xchg
add
jo
mov
push
lds
clc
jl
mov
xchg
shr
adc
cmp
mov
icebp
stc
mov
loopne
neg
add
add
in
xchg
pop
jnp
inc
pop
add
ljmp
push
pop
cmp
sub
ja
adc
lret
std
sub
xchg
pushf
sbb
pop
dec
mov
jnp
div
sbb
mov
outsb
ja
arpl
repz
pop
push
loope
ret
dec
mov
mov
test
adc
mov
xchg
inc
and
arpl
adc
aad
movsb
and
push
pop
std
enter
or
inc
and
lods
mov
lahf
add
adc
jae
dec
add
xchg
mov
or
lret
inc
in
lahf
js
test
jge
int3
push
inc
iret
add
mov
repz
or
adc
ret
add
xor
sub
mov
clc
ret
fmuls
xchg
movsl
push
cltd
leave
adc
int
enter
neg
jno
sub
dec
rorl
mov
arpl
clc
faddl
mov
sub
out
cwtl
lcall
ljmp
mov
in
loop
jp
iret
test
pop
icebp
repz
cmpsb
add
mov
cmc
mov
xchg
insl
sbb
mov
dec
neg
fyl2x
jecxz
sbb
push
fnstenv
push
fistpl
or
ds
mov
inc
xchg
sbb
adc
testl
and
out
lret
push
pop
jl
mov
lret
mov
mov
jne
sub
dec
or
cmpsl
xchg
add
mov
push
pushf
and
mov
scas
add
repnz
idivl
xchg
fwait
mov
pop
int3
mov
rolb
pop
or
lcall
xchg
lret
scas
pop
xchg
out
in
mov
fdivr
or
cmp
sub
insl
dec
cwtl
mov
scas
mov
and
push
lds
cli
lock
add
mov
arpl
xor
call
dec
int3
in
cmpl
pusha
push
mov
xor
andb
fadd
sub
insb
cmc
or
je
mov
ss
pop
aad
xor
mov
inc
cmp
sub
lahf
sub
xchg
and
xor
cmc
outsb
push
jae
idivb
test
or
xor
in
or
aaa
dec
mov
lcall
push
mov
cmpsl
mov
add
xor
out
in
add
repz
in
and
lret
or
push
cmp
mov
mov
mov
enter
sbb
and
dec
xor
in
lahf
shll
inc
ret
xchg
scas
xchg
loope
mov
push
push
fld
mov
cld
ret
xor
je
data16
pop
divl
or
stc
and
scas
int
jno
subl
imul
addb
movsb
adcb
test
dec
sbb
nop
cltd
inc
pop
fisubrs
lea
sbb
insb
pop
cmp
lret
xchg
fcomp
mov
xor
mov
nop
jecxz
sbb
repz
sub
test
repz
xchg
cmp
xor
jl
inc
add
inc
icebp
pushf
jmp
dec
sub
ds
add
or
cmp
mov
jle
jae
cmp
notl
jae
lret
in
loop
test
cltd
ss
xchg
mov
xor
mov
or
ret
insb
and
pop
in
jmp
pusha
ret
iret
mov
jg
and
sbb
or
mov
lds
push
sub
into
pop
std
nop
sbb
or
adc
stc
push
fcmovbe
push
stos
mov
pushf
sbb
mull
xchg
mul
fwait
cmp
xor
mov
inc
pop
sbb
sub
stos
enter
dec
frstor
mov
adc
mov
jo
rcrb
add
push
and
js
mov
fnstenv
or
xor
mov
repz
sbb
fucomi
cmp
and
es
mov
sub
inc
aad
xlat
cmp
sub
push
cli
inc
fildll
sub
mov
cmp
fcmovb
rcr
sahf
pop
test
data16
sti
cmp
js
xchg
sahf
in
aam
into
inc
mov
xor
or
xor
jb
aad
adc
or
dec
scas
add
add
mov
stos
sahf
or
or
out
out
fmul
lods
lahf
mov
mov
or
dec
sahf
mov
or
out
pop
cs
incb
jmp
les
inc
adc
cmp
adc
cmp
lock
rolb
sub
in
int3
decl
lret
push
sub
sbb
call
adc
inc
in
sbb
lods
inc
or
stc
pop
stos
enter
repnz
sahf
push
add
lods
insb
push
mov
pop
mov
jmp
aas
stc
pop
mov
pop
xchg
aad
insl
sbb
aas
pop
or
pop
pop
ret
mov
rcrl
js
sbb
test
xchg
pop
or
adc
test
ss
or
test
sbb
sub
iret
cmp
aad
sbb
push
dec
push
movsb
xor
mov
pop
lock
pop
dec
xlat
dec
lret
lock
shl
in
ret
jne
pop
pushf
cmpsb
test
push
jp
sarl
roll
fcmovne
mov
ja
jl
push
cli
roll
fwait
in
cmp
rclb
repnz
addr16
outsl
testb
mov
mov
push
ljmp
out
pop
cmp
mov
push
mov
test
xor
mov
sub
add
popa
dec
mov
mov
jle
lock
pushf
add
in
jnp
cmp
cmp
jle
sbb
xor
rclb
push
cmp
fs
mov
dec
andb
xor
jnp
jmp
mov
add
out
fistpll
lret
xor
addl
rorb
orb
add
mov
or
add
xchg
dec
outsb
popa
sub
cmp
mov
pop
std
test
pop
pop
adcb
mov
jb
lods
jae
mov
clc
inc
mov
mov
push
lds
or
inc
daa
cmc
in
cltd
movl
mov
cs
fcompl
or
movsb
bound
xlat
out
jne
dec
repz
cmp
mov
jae
xchg
mov
xor
fisttps
or
and
pop
clc
push
xor
hlt
shlb
inc
mov
mov
cltd
popf
lahf
fstpt
pushf
mov
pop
lret
aaa
icebp
xlat
pop
mov
les
cmp
xor
lahf
sub
fnstcw
push
cmp
mull
dec
cmp
sarb
jns
dec
cmp
add
and
call
mov
clc
fxtract
jmp
ja
icebp
pop
xchg
or
repnz
mov
pop
mov
popf
fisttpll
mov
jmp
fcoms
xlat
xor
jo
les
sbb
mov
or
cli
lret
adc
xor
jns
popf
sub
dec
pop
sahf
out
repnz
push
scas
cmp
outsl
and
or
or
pop
mov
mov
mov
xor
mov
sbb
test
cltd
std
test
mov
rclb
in
push
push
pop
and
push
mov
aam
pop
jmp
stc
xor
addr16
gs
ljmp
aam
jmp
dec
fwait
roll
or
cmpsl
rcrl
push
mov
enter
fnstcw
push
int
lods
fisttpl
pop
andl
push
xor
or
sub
loopne
xchg
ds
in
idivb
xchg
mov
cmpsb
flds
sub
repz
cs
pop
mov
xchg
sbb
test
scas
xor
inc
dec
adc
in
clc
cli
xchg
cmc
mov
mov
dec
cmp
loopne
push
pop
xchg
mov
sbb
int
dec
mov
mov
fsub
add
jmp
jmp
ds
js
sub
scas
push
cwtl
xchg
pusha
ljmp
xchg
mov
jge
xchg
repz
jb
jmp
and
push
jnp
js
sub
hlt
das
cmp
out
push
mov
jmp
repz
cld
mov
dec
mov
movl
in
cmp
sbbb
inc
jno
aaa
out
popl
shrl
mov
out
xor
ret
add
movl
rolb
push
repz
loop
cld
popf
lock
mov
aaa
dec
xchg
mov
dec
mov
sub
pop
xchg
dec
js
push
sahf
mov
lea
loopne
xchg
or
push
add
mov
mov
cmp
xor
std
push
fcmovnb
cmp
sub
jl
xlat
cmpsl
out
push
test
sbb
mov
mov
lds
mov
push
out
lods
xor
inc
loope
sub
add
cmp
xor
test
loop
jnp
xchg
imul
cmc
dec
add
inc
cli
push
mov
and
push
jae
popa
ss
or
sti
cmp
out
mov
or
jg
negb
sbb
add
or
pop
repz
aas
repnz
sahf
arpl
mov
xor
aas
lock
pop
add
out
or
out
add
rcrl
aas
clc
jmp
add
fadds
fiadds
ss
jp
jae
pop
hlt
mov
xor
mov
lds
xchg
add
add
jg
inc
fadds
mov
jb
mov
inc
pop
call
sbb
icebp
push
push
rorl
pop
xchg
nop
sub
imul
jbe
pop
adc
scas
mov
inc
cmp
xchg
add
xor
mov
jmp
add
dec
xor
imul
pop
les
sbb
rorb
insb
fidivl
fdivs
pop
sub
test
imul
xchg
shlb
adc
lret
or
sub
mov
loope
dec
inc
mov
lahf
mov
cmpsb
mov
test
push
mov
rolb
in
dec
push
das
rcrl
std
in
mov
sbb
pop
dec
mov
fiadds
push
jo
ret
push
icebp
mov
push
mov
leave
aad
pushf
mov
cmpl
jns
pop
xchg
leave
jmp
xchg
jle
push
int3
fmul
shl
xchg
or
sahf
sbb
dec
in
repz
xlat
mov
adcb
lods
push
rcrb
sahf
mov
xlat
lret
shll
int3
xor
push
js
fucomi
lods
cmp
cmp
adc
pop
or
cmp
popa
daa
adc
fisubl
pop
mov
jle
mov
jno
add
rcrl
mov
add
pop
cld
stc
mov
out
in
jnp
sub
jbe,pn
arpl
and
cmc
xchg
stos
sub
cwtl
in
in
fistps
sbb
mov
repnz
pop
es
stos
inc
in
ja
xor
outsl
cmp
xor
pop
iret
cmp
lock
fdiv
or
mov
mov
data16
sub
scas
add
test
shlb
jp
stos
sbb
les
fmulp
xchg
lret
inc
mov
push
dec
aas
xor
es
clc
pop
cmp
mov
or
aad
in
push
imul
pop
or
mov
pop
or
push
cmp
jnp
imulb
jecxz
aaa
test
loopne
sbb
pop
sbb
ret
cltd
mov
cmpsl
clc
sahf
add
fcmovbe
in
mov
lea
int3
lret
in
fistpll
cmp
mov
iret
lret
out
mov
dec
or
and
test
out
and
xor
rcll
nop
xlat
mov
cmp
sbb
push
adc
cld
jp
mov
pop
adc
pushl
add
sbb
hlt
cld
int
rclb
cmp
inc
mov
or
shrl
mov
cmp
mov
fisttpl
mov
dec
dec
mov
data16
loop
iret
mov
loop
shl
and
push
rcrl
adc
xchg
sub
sbb
xor
icebp
pop
fmuls
inc
fistpll
out
rcll
fucomi
scas
stc
xchg
xchg
dec
jecxz
shl
fiaddl
jle
fwait
xchg
jp
mov
stc
in
cmpl
xor
inc
leave
fwait
lea
adc
push
push
pop
sub
xlat
push
fwait
jbe
aas
mov
mov
dec
xchg
push
outsb
and
stos
push
cmp
fidivl
iret
hlt
dec
lock
inc
add
rcl
pop
jg
inc
repz
cmp
out
mov
sub
mov
test
out
cmpsl
mov
dec
cwtl
pusha
or
loope
hlt
adc
fistpl
push
rol
push
cmp
lret
or
fwait
iret
or
jnp
pop
in
jne
mov
inc
cwtl
in
add
xor
mov
add
mov
mov
popa
stos
mov
sbb
push
sbb
xchg
aaa
call
lret
jg
push
sub
add
jecxz
add
push
mov
xor
adcb
nop
lcall
sarb
inc
pop
jne
lds
test
ret
pop
xor
ret
scas
repz
in
mov
sub
fsubrs
fcmovb
lret
iret
adc
int
int3
enter
das
sbb
or
pop
cmp
mov
xor
addl
out
es
push
daa
xor
push
fisttpll
mul
or
stos
or
cmc
jbe
jb
mov
shll
imull
or
std
add
div
dec
fmuls
sub
push
nop
mov
inc
je
int
lahf
cmp
xor
cmp
inc
or
in
push
push
mov
sub
imul
fs
out
add
add
test
push
fnstcw
cmpl
data16
loopne
repz
mov
test
leave
sbb
push
push
pushf
lcall
imul
jae
inc
mov
cmp
pop
pusha
ret
imul
fisubl
icebp
adc
gs
sar
loopne
repz
mov
ss
int
fdivp
idivl
jae
cmp
pushf
out
jbe
imul
pop
jmp
jo
ja
jge
jbe
mov
adc
mov
ss
lds
mov
dec
cmp
mov
sub
in
and
fistpll
clc
mov
jg
das
orb
xor
cltd
pop
xor
pop
mov
and
inc
hlt
mov
sub
cmc
loop
lods
fcomip
rcrb
das
and
adc
dec
cmp
dec
lcall
adc
mov
inc
mov
enter
pop
jp
jle
xchg
and
dec
xchg
popf
xchg
sbb
fimuls
loopne
jecxz
xor
mov
jne
lea
mov
or
mov
mov
into
cmc
repz
in
sahf
add
ja
out
iret
jge
cmp
push
add
dec
xor
sub
testb
mov
xchg
adc
dec
push
repz
sbb
mov
mov
and
cmp
in
jb
rorb
jbe
addb
notb
lock
imul
sub
cmp
leave
mov
fwait
push
cmc
insl
xlat
jnp
sbb
scas
mov
sub
cltd
adc
push
cmp
insl
xlat
adc
les
inc
imul
xchg
cmc
imul
repnz
xchg
xor
xchg
push
pusha
push
mov
and
sbb
les
repz
sbb
fistpll
fisttpll
ss
in
leave
std
shrl
nop
and
in
je
sbb
dec
sbb
enter
inc
fmuls
dec
inc
insl
ds
cs
xor
ret
push
xor
icebp
arpl
inc
lcall
movsb
xor
clc
ja
or
aad
fsubrs
add
gs
cltd
sub
arpl
fmul
hlt
icebp
cwtl
xor
rclb
mov
xor
push
loopne
mov
add
fmull
sbb
mov
adc
dec
xor
cltd
sbb
add
jl
fucomi
cli
repz
cltd
inc
fisubl
mov
lock
sbb
add
or
fadds
or
pop
xor
sub
dec
es
sbbl
stc
mov
or
test
stos
not
imul
fstps
les
mov
pop
arpl
mov
icebp
rcll
aas
xchg
aad
sub
pop
or
xor
stos
cmp
add
sbb
mov
cmc
jge
mov
push
push
stos
add
jle
cmc
dec
sub
xchg
pop
test
adc
push
shrl
xchg
push
imul
repnz
or
add
ret
fimull
cs
pop
out
mov
out
in
inc
or
jl
repz
pop
into
cwtl
xchg
idiv
push
call
adc
test
push
jmp
icebp
or
pop
xlat
inc
divl
enter
fcoms
mov
mov
popa
dec
add
insb
lea
sbb
xlat
pop
adc
js
sbbl
jnp
jns
fdiv
adc
mov
inc
adc
or
jnp
sub
push
test
xlat
or
push
xor
xchg
inc
cmp
stos
dec
mov
cmp
aad
jnp
pop
push
mov
add
scas
dec
jae
mov
fisubl
rcrl
cli
sub
outsb
add
xor
cli
mov
jge
aad
adc
je
out
pop
adc
shlb
cmp
ss
sub
dec
pop
add
jecxz
int
daa
pop
mov
std
jae
stos
out
nop
pop
mov
fstpt
mov
cmp
or
mov
and
inc
add
xor
outsl
cmp
inc
or
mov
jno
push
jo
sahf
push
mov
lahf
aad
scas
leave
cmpsb
jle
adc
mov
fisttpl
das
inc
pop
cmp
out
xchg
movsb
dec
jb
mov
sbb
pop
adc
enter
pop
stos
ljmp
dec
sbb
popl
dec
rcr
inc
push
and
dec
sub
or
cmpsl
push
adc
je
imull
dec
push
scas
aad
repz
dec
sbb
push
add
xchg
xor
shlb
xchg
lea
adc
pushf
in
dec
xchg
dec
jp
cmp
out
push
lret
mov
test
pop
pop
jnp
push
orl
mov
push
pop
imul
mov
xchg
sub
inc
lods
aas
pop
inc
lcall
orl
adc
inc
int
dec
dec
repz
in
jo
les
lahf
or
adc
lds
cmpsl
jg
or
mov
adc
add
mov
inc
int
roll
mov
mov
sbb
sub
push
mov
cmp
jmp
out
dec
cmp
iret
sahf
inc
mov
aad
jmp
inc
xchg
or
sbb
test
fsubrs
jo
or
cmp
out
jo
leave
stos
aad
adc
je
mov
aam
mov
fxch
lock
dec
push
or
lcall
jecxz
popf
xor
jae
test
scas
sbb
in
push
out
sub
aad
ljmp
fsubrp
rorl
jnp
push
pushf
mov
xor
add
fistpll
mov
mov
dec
outsl
jb
inc
jno
les
loopne
xchg
cmpsb
sub
add
jmp
pop
repz
lock
sbb
cmp
jbe
sbb
push
loop
push
sarl
jno
jno
push
jnp
xchg
jne
mov
sub
or
lcall
lea
cmp
out
jo
jp
idivl
stos
or
int3
sbb
js
xchg
xor
jbe
fdivrl
loopne
jnp
add
pop
xchg
jg
aad
les
adc
repnz
es
add
std
and
ret
in
cs
mov
jecxz
adc
sub
push
push
xlat
sbb
xor
xchg
inc
lock
cld
cmp
cmp
mov
fildl
jae
and
pop
or
call
xchg
sub
mov
inc
sub
push
rclb
iret
cli
fnstcw
push
lret
fcompl
sbb
or
pop
jae
lret
dec
rorl
aas
or
pop
pop
add
aad
and
xchg
push
lods
ret
or
jnp
or
jnp
push
lretw
icebp
jp
jg
andb
mov
mov
xlat
test
pop
fsts
fcmovnb
outsb
fistpl
push
xchg
or
aad
xor
sbb
fyl2x
jle
jne
dec
je
sbb
cmpsb
aad
aad
pop
push
stos
lea
push
xchg
mov
sbb
cmp
fstpt
inc
cld
xchg
fcomip
repz
xor
jmp
rorl
in
xchg
and
out
mov
mov
xchg
or
jno
shrb
sarb
int3
mov
inc
or
aaa
fistpl
dec
fwait
push
mov
or
inc
int3
sbb
enter
mov
cmpsl
sub
jae
es
push
rorb
dec
addr16
imul
adc
int
es
in
jmp
inc
sahf
dec
lods
sub
test
push
mov
fmuls
add
in
add
jecxz
sub
cmp
fsqrt
rcrl
add
fstpt
adc
jmp
push
adc
mov
add
in
sbb
lock
or
adc
addr16
repz
fimuls
daa
cmp
pusha
jo
repnz
mov
sub
push
dec
aam
lret
in
sbb
test
pop
cltd
cmp
sub
add
mov
or
negb
mov
pop
ds
dec
mov
lock
adc
dec
in
add
mov
cli
dec
xor
repz
out
cld
je
or
cmp
xor
or
xchg
sbb
jp
mov
mov
or
xor
or
inc
jp
and
jg
inc
les
jno
push
push
clc
xor
repz
sub
pop
loopne
xchg
fwait
int3
lock
sbb
out
cmp
or
cmpsb
mov
mov
sbb
xor
xchg
inc
sahf
fildll
lcall
dec
add
pop
lds
stos
pop
test
dec
rol
mov
cmp
add
mov
push
or
xor
mov
das
stos
inc
or
inc
fwait
fistpl
push
and
fiaddl
nop
sarb
mov
outsl
jl
aam
imul
decl
or
mov
inc
call
jnp
add
xchg
inc
das
outsl
addr16
mov
aas
xor
data16
mov
pop
inc
cmp
repz
push
xchg
mov
cwtl
aam
cmpsb
push
inc
fwait
dec
cmp
sub
push
lcall
or
cltd
pusha
int3
xor
add
stos
imul
xchg
pop
fadds
mov
mov
sub
scas
dec
jmp
mov
and
cmp
xor
decl
loope
sahf
aaa
cmp
pop
and
mov
xor
iret
data16
loop
mov
rcll
lret
dec
pop
pop
xchg
inc
xlat
push
add
loop
add
mov
nop
or
mov
add
dec
cli
testl
xchg
jns
int
xor
mov
into
repnz
or
aas
cltd
orl
or
jae
add
sub
int
or
mov
decb
dec
lea
dec
push
imul
negl
imul
cmp
push
inc
add
push
stc
xor
int
or
push
out
lock
mov
inc
pop
sbb
test
ret
scas
cli
cmc
mov
jb
jno
xchg
push
xorb
push
cmpsl
cwtl
push
and
enter
ret
add
out
in
ror
cmp
mov
test
xlat
lcall
fisttps
test
ret
lds
push
xor
sub
dec
or
cmp
loopne
lret
fbstp
mov
pop
loopne
cmpsb
hlt
pop
adc
jmp
cmp
lcall
jb
xor
fcmovnbe
pop
lahf
testb
jge
inc
out
or
add
das
dec
jmp
jns
cmpsb
out
jnp
ret
cmp
xchg
hlt
mov
sub
loopne
ds
lret
xchg
lret
or
jbe,pn
xchg
xor
lcall
popf
and
dec
jnp
jl
sub
lret
cmpsl
stos
lds
mov
mov
inc
test
int3
mov
dec
ficoml
pop
cwtl
imul
call
notl
test
std
inc
mov
rorb
in
jmp
aad
stos
mov
rclb
push
or
clc
xor
stc
xchg
aas
pop
pushf
fildll
mov
fdiv
lds
pop
lret
nop
mov
pushf
popf
aad
fsubs
pop
movsl
jns
repz
fnstcw
jno
ret
push
stos
enter
dec
pop
pop
call
cmp
push
mov
xor
popf
mov
and
ss
out
dec
fdivrp
loop
push
sub
repnz
flds
push
jnp
insb
cld
jae
es
jae
inc
add
cmp
mov
push
mov
xlat
in
xor
dec
ss
fidivl
jne
mov
in
hlt
mov
movsb
dec
test
dec
lcall
jbe
inc
test
ficompl
xorl
adc
jae
icebp
sbb
fistpll
mov
mov
jg
xchg
jno
addl
inc
sbb
loope
push
flds
push
imul
lods
ss
mov
pop
sbb
pop
enter
js
cmp
scas
es
adcl
xlat
sarb
ds
shrb
cmp
mov
into
add
mov
mov
mov
stos
add
cmp
repz
sbb
int3
jmp
xor
cmp
pushf
cli
movsb
les
mov
push
mov
or
sub
sbb
pop
sub
pop
mov
xor
jns
lcall
cmp
jge
clc
or
ss
mov
scas
pop
je
imul
sbbb
rorb
sti
jne
addr16
rcrl
sbb
bound
mov
ss
movsl
pop
push
pop
xchg
in
data16
jnp
sub
mov
nop
fsubr
in
dec
jne
adc
sbb
mov
adc
mov
les
jbe
out
imul
rcll
sbb
test
pop
jge
jo
dec
xor
inc
or
inc
in
test
outsb
mov
add
mov
testl
mov
arpl
xor
jmp
cmc
cmp
mov
sub
or
clc
adc
add
ljmp
int
cmp
or
jnp
mov
xchg
xor
in
ss
pop
lods
icebp
xor
mov
sbb
repz
push
clc
cwtl
adc
mov
mov
jg
leave
ja
mov
shl
cmp
mov
inc
es
repz
ss
cmc
jnp
pop
add
loope
mov
mov
xor
pop
pop
mov
or
cmp
mov
add
sbbl
adc
sub
arpl
pop
mov
jne
fildl
dec
xor
mov
adc
in
popa
cltd
test
int
add
or
test
addl
and
dec
outsl
ror
jmp
out
aad
cmp
push
pushf
push
pop
fidivl
or
pushf
adc
sbb
mov
sub
inc
xor
pop
xor
inc
pop
shr
jae
or
in
sub
incb
repnz
out
loopne
sbb
jl
fnstenv
cmp
jp
jbe
lret
xor
out
mov
inc
adc
inc
adc
inc
add
repz
sub
sub
lahf
testl
dec
or
lods
int
inc
call
das
movsl
xchg
rcrl
mov
into
dec
sub
push
pop
adc
or
xor
adc
ss
push
dec
icebp
cmp
in
les
xor
mov
inc
jnp
mov
hlt
cmp
leave
shll
inc
inc
std
popa
testl
jg
or
xchg
push
sub
stos
test
sti
ljmp
xchg
dec
subl
in
sete
sbb
mov
xlat
rcll
dec
xor
sub
mov
cs
adc
push
scas
sub
push
add
lcall
inc
les
movsb
cmp
cs
jo
adc
jle
adc
xchg
scas
adc
ljmp
jbe
cmp
test
jecxz
xchg
cwtl
out
adc
mov
jp
sub
mov
sbb
push
aam
jns
xor
fimull
mov
push
adc
dec
mov
push
jno
and
xchg
add
addb
stos
dec
pop
push
aad
inc
stos
movsb
ds
xchg
cs
xchg
sbb
insb
imul
jb
fadds
cmp
flds
ljmp
pop
int
push
adc
add
cmp
dec
movb
pop
addl
aaa
xchg
fldenv
mov
mov
sub
pop
pushf
mov
or
jmp
aam
fistps
sub
pop
jo
inc
dec
scas
or
imul
mov
dec
test
fucomip
loopne
xor
out
into
dec
mov
cli
inc
adc
ret
imul
jb
repnz
ret
or
sbb
aaa
sbb
fdivrl
aad
js
ljmp
imull
sbb
jmp
mov
stos
mov
imul
cmp
and
push
ss
push
out
xor
lret
in
mov
divl
fldenv
mov
and
inc
imul
sub
push
lock
call
adc
pop
mov
sarl
sbb
repz
inc
enter
add
xchg
mov
aam
shll
sbb
xor
les
into
repz
pop
scas
inc
jle
and
fstp
inc
push
test
aas
inc
and
ss
aam
das
jb
inc
jmp
dec
mov
lea
repnz
push
imul
jno
hlt
mov
sub
add
lea
roll
jge
out
cltd
jo
mov
add
cmp
jmp
cmc
ret
lock
jmp
clc
loopne
mov
push
outsb
xor
shll
fcompl
sub
sub
pop
popf
dec
das
xchg
ss
inc
cmpsl
push
mov
cmp
in
jb
sbb
inc
mov
sbb
dec
mov
dec
jnp
mov
bound
sbb
xor
fcomps
test
push
fdivp
xchg
ja
lock
mov
clc
xchg
inc
mov
ss
bnd
add
int
add
jnp
jmp
cmp
pop
repz
rorb
fsubrs
xor
jnp
in
iret
lret
add
rcl
flds
dec
in
jne
and
or
sub
add
cwtl
jne
test
xchg
pop
jmp
jo
in
test
xchg
jnp
jae
push
mov
mov
or
xchg
cmp
xor
ret
jmp
lock
testb
wrmsr
xor
test
sbb
scas
xorb
rolb
inc
adc
or
or
pop
lea
mov
loope
lret
or
push
xchg
mov
and
add
push
ds
cmpsl
ret
mov
pop
push
sbb
jge
enter
mov
nop
inc
and
push
repz
popf
in
icebp
fistpl
lret
notl
jp
dec
out
pop
lcall
test
adc
jno
pop
push
mov
xchg
push
jp
mov
out
out
sub
popf
jne
dec
stos
pop
andl
ret
call
stos
dec
enter
mov
or
lahf
jmp
loope
or
repnz
rorl
pop
add
lret
xchg
mov
jg
mov
adc
sbb
aaa
add
and
das
mov
outsl
xchg
sbb
add
in
add
cld
jns
push
sbb
rorl
cwtl
add
mov
add
stc
cmp
lret
pusha
push
fadds
sub
jmp
jns
mov
imul
pop
inc
add
inc
cmp
decl
jno
mov
xor
loope
cmp
pop
jo
ffreep
add
cld
cld
aad
xor
enter
mov
shl
cmp
mov
cmp
adc
xor
testb
xor
mov
sbb
fs
lock
enter
cli
subl
decb
out
xlat
in
mov
mov
cmp
jo
add
test
enter
mov
mov
push
sub
mov
mov
aaa
pop
cmc
xlat
enter
mov
rcrl
cmp
mov
out
fcompl
les
mov
push
sbb
test
add
add
lock
js
sbb
ficompl
mov
negl
stc
dec
add
mov
cmpsb
xor
cmp
add
inc
add
mov
or
mov
jo
inc
xchg
aad
xor
fadds
enter
mov
jnp
and
and
imul
mov
nop
cmp
cmp
xchg
mov
mov
arpl
loope
sbb
xlat
sub
mov
fsubrs
xor
and
test
xlat
mov
rolb
jmp
xchg
out
dec
imul
sbb
jo
cmp
add
dec
dec
bound
aad
loope
rcl
movsl
cmp
xor
or
xlat
js
adc
stos
add
sbb
mov
stc
mov
jnp
aam
mov
int
cli
push
rcr
jnp
sbb
lcall
test
push
cmp
mov
ss
cltd
push
jle
call
adc
aam
xor
dec
scas
das
sub
insl
mov
xor
pop
or
mov
and
xor
and
dec
or
clc
rolb
inc
cmpsl
sub
pop
add
mov
ja
and
push
lret
fcompp
loope
jns
add
in
cmc
into
jae
sub
sbb
xor
jae
jns
sbb
repnz
js
xor
dec
out
imul
dec
mov
ja
and
pop
inc
or
incl
add
in
out
xchg
adc
add
and
cmp
or
or
fdiv
enter
nop
cmpsb
cli
ds
inc
mov
sarb
loopne
add
pop
inc
jne
push
cltd
jo
push
idivl
repz
lock
jo
in
jb
lahf
loope
std
into
das
adc
xchg
ret
rol
scas
int
cmp
and
and
aam
aad
xchg
test
adc
fst
mov
and
sbb
movsl
adc
cmp
sbb
or
rorl
loope
jp
mov
inc
xor
push
cmp
jg
testb
in
jae
mov
push
loopne
aas
jae
xchg
push
xchg
sbb
inc
mov
xchg
xorb
cmc
ss
sbb
pop
jbe
repnz
fnstenv
dec
stos
cmp
push
das
test
xor
dec
sarb
xlat
test
sahf
adc
insl
mov
aad
or
push
push
cs
ljmp
add
pop
test
pusha
shl
hlt
ds
sub
push
xchg
inc
pop
sub
test
adc
mov
iret
mov
xchg
cmp
xchg
xlat
jecxz
ret
mov
cmp
mov
xor
dec
mov
xchg
out
xor
sti
outsl
in
add
jns
mov
sbb
lcall
cmpsb
dec
fdivp
mov
or
jmp
mov
into
and
orb
mov
in
stos
jg
sub
clc
push
pop
sub
imul
popa
inc
int
xchg
ljmp
mov
pop
cmp
and
int
dec
add
sbb
jl
xchg
mov
add
nop
add
out
mov
lret
iret
xchg
aad
mov
xlat
fsubs
cmc
loopne
pop
cs
imull
xchg
jno,pt
mov
ss
fsubl
and
out
mov
sub
jae
or
test
mov
sbb
pop
sub
cmpsb
popa
aam
stos
test
sub
and
or
aaa
xchg
add
mov
cld
loopne
outsl
inc
aad
add
or
add
dec
mov
pop
lea
aas
out
enter
jle
aad
mov
cmp
and
in
shll
pop
rcrl
xchg
pushf
mov
dec
add
bound
jg
test
incl
inc
mov
sub
out
jg
ss
push
jno
adc
sbbl
shr
xor
xor
pop
dec
sbb
sub
dec
out
mov
jns
daa
dec
out
arpl
inc
lock
adc
sub
pop
jg
sbb
ss
jnp
data16
fstps
daa
sub
sbb
mov
pop
jge
xchg
aad
shll
dec
mov
mov
and
or
xor
xchg
dec
mov
ret
xor
and
adc
adc
sahf
jae
cmp
inc
stos
inc
in
inc
dec
xor
push
jmp
dec
jecxz
stos
out
dec
mov
push
call
in
mov
mov
aad
jnp
pushf
js
push
les
or
popf
aad
lahf
daa
lods
ss
inc
int3
jno
pop
sub
fdiv
xor
stc
mov
dec
push
pop
or
cmp
xor
fldcw
push
fstpt
stos
mov
std
sub
gs
xor
jae
aam
adc
mov
rcl
dec
leave
push
jo
add
iret
push
dec
rorl
out
push
pop
enter
cmp
xor
sbb
add
push
movsb
dec
jecxz
imul
out
jae
adc
clc
jp
xchg
xor
sub
xchg
pop
push
mov
mov
out
lahf
pop
pop
xor
jle
mov
orl
std
aam
movsb
xor
push
push
call
adcl
es
xchg
dec
repnz
or
sub
sbb
rorb
cmpsl
dec
stos
mov
outsb
or
fildl
push
mov
cmp
xchg
cmp
js
and
push
cmp
sbb
sub
pop
and
imul
xor
push
jbe
mov
inc
push
lret
scas
das
gs
aam
or
lcall
repz
les
cmp
roll
dec
inc
ss
aad
mov
mov
ljmp
fcomps
mov
xchg
xor
stos
or
or
dec
cmp
flds
sbb
dec
in
add
shrb
jmp
push
pop
mov
roll
sarb
inc
lock
adc
iret
xor
imul
cmp
adc
aad
or
movsb
ret
push
fsub
adc
inc
dec
mov
xchg
inc
xchg
jmp
movsb
int3
mov
into
push
or
mov
flds
loope
cwtl
fisttpl
cmp
repnz
sbb
ret
jno
test
cmpsb
mov
popa
xor
pop
adc
and
enter
cld
pop
sub
shll
xchg
pop
fisttpl
xor
inc
fiaddl
mov
mov
inc
ja
add
push
ret
outsl
mov
sub
add
shlb
xorl
adc
in
aam
jbe
push
pop
jb
push
jmp
hlt
xor
mov
and
sub
xor
mov
in
jae
dec
outsb
imul
jge
cmp
pop
stc
jne
sub
cs
scas
push
imul
xor
aam
ja
lods
jbe
sub
xchg
add
ret
inc
and
jle
lret
adc
pop
push
jge
les
dec
sub
pop
bound
test
jb
xorb
push
xor
test
into
mov
push
mov
divl
pop
and
imul
lock
outsl
xlat
xchg
subl
mov
std
sarb
xor
aad
push
or
sub
stos
xchg
loopne
sub
int3
test
scas
sub
mov
ret
mov
xor
ret
and
inc
andb
sarb
xor
sub
add
inc
add
addr16
test
idivb
jl
stos
ret
sbb
xlat
xor
push
sub
cld
mov
jl
dec
ss
mov
mov
or
jbe
shrl
jle
cmpsl
fs
pop
or
mov
loope
pop
aad
xor
or
in
jp
pop
and
inc
inc
push
dec
or
in
jecxz
int
aam
pusha
dec
xchg
daa
aad
lock
imul
xor
ficompl
push
scas
out
mov
push
test
sub
enter
cmp
ror
or
cmp
mov
cmp
fcoms
rol
dec
xchg
shlb
outsl
mov
cltd
out
repnz
imul
jne
mov
and
repz
adc
ret
mov
lret
aaa
popa
dec
icebp
sbb
mov
cltd
mov
push
inc
push
lods
mov
test
je
in
test
dec
mov
pop
or
in
repnz
pop
add
push
adc
outsl
pop
or
stos
mov
mov
notb
mov
je
test
lds
cwtl
push
mov
fwait
dec
imul
xchg
loop
mov
xlat
in
cmp
shrb
inc
xchg
les
xchg
test
rorb
inc
fwait
ja
fadd
adc
xor
jbe
pop
js
les
stc
jb
jle
rcll
fiaddl
stc
call
sbb
sbb
cmp
mov
xchg
push
push
cltd
inc
dec
cmp
bound
jbe
fisubrs
cld
push
push
xor
push
mov
cmp
dec
lods
cli
test
push
mov
inc
adc
jge
add
lret
fidivs
push
insl
lahf
add
push
sub
mov
or
cwtl
mov
pop
mov
jl
ljmp
popf
lret
mov
addr16
push
rorb
mov
ljmp
cmp
mov
xor
adc
test
inc
adc
adc
adc
andl
stos
push
dec
inc
movsb
jo
inc
push
ja
scas
mov
sub
push
pop
xor
sahf
adc
scas
xor
sub
and
push
cwtl
in
scas
xor
dec
movsb
xor
movsb
fldcw
or
movsl
and
fimull
push
jmp
inc
shl
pop
shl
sub
ss
lret
setge
adc
inc
in
mov
outsl
jb
xchg
cmp
enter
pop
xchg
jge
xchg
inc
sub
cmpsb
mov
in
xchg
pop
adc
ret
lcall
test
pop
mov
mov
sar
aad
sbb
mov
clc
fmul
dec
divb
in
dec
cmc
cmp
mov
add
cmp
jbe
call
pop
data16
mov
outsl
mov
dec
mov
or
xor
repz
xor
add
ja
or
pop
mov
and
jns
push
adc
addr16
aad
sbb
aaa
mov
cmp
sbb
cmp
bound
sahf
xor
sub
adc
mov
cmp
enter
ret
in
scas
in
cmp
fwait
test
sub
dec
cli
rorb
mov
cmp
pop
dec
pop
pop
es
add
mov
push
mov
jnp
repz
das
mov
jmp
mov
out
pop
ret
and
dec
or
pop
mov
and
mov
cmp
adc
or
loopne,pn
dec
xor
repz
adc
xor
shl
test
xor
aad
cmp
and
jmp
mov
int
xor
jb
xor
add
aas
jmp
test
imul
inc
fnsave
dec
mov
int3
aas
and
sbb
adc
jmp
push
add
lods
and
sbb
xchg
int3
ss
pushl
ss
xor
in
stos
dec
sti
dec
pushf
push
jbe
xor
fldt
jae
mov
push
fwait
les
inc
add
pusha
mov
pop
jmp
or
cmp
in
sbb
add
xor
pop
loope
adc
sub
clc
push
mov
mov
aad
xor
jb,pt
aaa
dec
and
stos
dec
mov
push
les
cmp
stos
dec
cmp
shlb
ja
mov
stos
int
ja
jbe
mov
sbb
out
ja
les
negl
cmc
jmp
inc
dec
adc
je
scas
bound
es
hlt
int
mov
push
shlb
add
cmpsb
cmp
jno
or
jo
sbb
movsl
movsl
mov
and
dec
mov
jbe
dec
pop
je
sbb
enter
mov
push
add
xchg
cltd
or
ja
fisttpl
rorl
xor
loope
cmp
mov
xchg
inc
mov
pop
mov
sub
dec
mov
ja
fld
out
ljmp
sub
icebp
pop
repz
dec
dec
inc
insb
sub
into
xor
repnz
shlb
dec
add
cld
cmp
enter
loope
or
mov
lock
pop
mov
test
enter
fdivs
mov
mov
mov
rcrb
mov
adc
addr16
rcr
or
mov
cld
jg
sbb
xchg
mov
lret
stos
addr16
cmp
add
dec
dec
pop
int3
adc
cmp
push
in
jp
cmpsb
dec
xor
faddp
mov
outsl
adc
pushf
jge
shr
fnstenv
test
sub
int
push
rorl
ja
gs
sbb
xor
xchg
dec
mov
mov
cmp
mov
push
xor
xlat
ja
lods
xchg
mov
xchg
inc
add
cmpsl
xchg
or
dec
jp
sbb
inc
jo
add
mov
pop
pop
int3
push
jno
repnz
xlat
ja
iret
enter
outsl
rcl
sub
shlb
sahf
jmp
push
je
cwtl
test
push
cld
movsl
cli
inc
pop
pusha
push
es
insb
ja
cmpb
sbb
fldt
pushf
jb
jmp
into
lret
repz
push
out
jmp
out
push
sarb
shr
push
add
test
and
int3
push
fwait
mov
xchg
sahf
add
lods
xor
int
notb
push
out
push
shrb
jecxz
xchg
mov
dec
pop
inc
push
sbb
jmp
iret
mov
mov
mov
pop
in
add
adc
outsl
dec
adc
xor
jnp
lcall
dec
xchg
fadd
dec
or
cmp
and
cmc
xchg
lock
sarb
in
arpl
xor
jp
out
jp
mov
mov
inc
push
popa
nop
orb
and
push
std
pop
add
cmpb
in
mov
jo
fisttpl
lret
movsb
xor
add
dec
aaa
in
xlat
lock
cmp
jbe
sbb
testl
pop
ficomps
dec
xchg
add
pop
ljmp
pop
leave
scas
mov
pop
xchg
lcall
lahf
ss
cmp
jl
inc
ljmp
dec
jno
jo
sub
pop
sbb
lahf
add
cs
iret
cmpsl
cmp
and
test
mov
in
lret
xor
pushf
jb
daa
push
mov
push
or
lods
cmpsl
inc
call
imul
push
iret
pop
fistpl
and
jae
in
xor
jecxz
sti
fsub
repz
fbstp
and
out
sbb
clc
arpl
repnz
sbb
cmp
mov
or
jns
int3
adc
les
jnp
or
test
nop
xchg
daa
pop
xor
mov
mov
push
add
xorb
lret
and
or
xchg
pusha
pop
mov
dec
rcrl
or
or
push
push
test
cmp
pop
lock
mov
sub
mov
adc
xchg
mov
jnp
out
stos
add
repz
testb
mov
testl
adcb
or
dec
lock
push
fdivrs
dec
sbbl
js
fdivrs
jns,pt
int
mov
bound
cmp
xchg
and
xchg
jae
push
pop
sub
dec
cltd
push
mov
mov
xchg
jae
imul
cmc
cmp
addr16
push
aad
fiaddl
incb
imul
dec
and
xor
xlat
fldcw
add
and
in
mov
je
fsubs
and
clc
pop
jns
insl
mov
aad
cmp
jmp
stos
mov
std
lret
mov
sub
cli
mov
in
subb
mov
jmp
jnp
enter
pop
dec
les
ss
pop
scas
pop
cmc
sub
fsubs
jo
fs
hlt
mov
inc
add
fldt
jmp
cmp
cmp
push
out
inc
jnp
or
jg
mov
or
or
cld
or
enter
sbb
jmp
cld
jmp
cmp
jae
and
fwait
mov
sbb
push
frstor
in
dec
mov
xor
bound
stc
mov
clc
repnz
stc
fnstcw
or
lods
nop
neg
jg
add
pop
aad
pop
cmp
and
inc
daa
add
out
insl
ljmp
xchg
jmp
shlb
les
adc
into
xor
ja
dec
testb
or
pop
inc
repz
mov
push
fistpll
cmc
fwait
cmp
iret
sahf
mov
pop
xor
sbb
xor
hlt
cmp
inc
push
addl
add
push
rcll
or
test
jnp
popa
inc
add
adc
xchg
jae
adc
lock
dec
pop
test
rcrb
push
jmp
sbb
fdivrs
or
mov
xchg
repnz
xchg
pop
pushf
hlt
test
jmp
cmp
pop
mov
lea
and
dec
add
cmpsb
fisubrs
test
sarb
cmp
enter
cmp
dec
cli
fwait
int
stos
jbe
sub
lcall
jmp
aad
lods
jnp
rorb
mov
ret
dec
sub
inc
movsl
mull
je
int3
or
dec
dec
cmc
lcall
mul
and
and
dec
xchg
es
cmp
mov
or
xlat
lea
sbb
out
sub
fdivs
sahf
xchg
out
js
push
inc
nop
mov
mov
scas
popa
xlat
mov
add
jbe
repz
mov
lock
add
ljmp
dec
pop
xchg
or
lea
xchg
pop
mov
pop
outsl
mov
or
dec
cmp
sub
cmp
mov
jo
sub
or
mov
clc
push
in
lahf
repz
imul
jns
leave
xchg
push
ror
scas
pop
cltd
test
jg
cmp
in
dec
mov
cs
popf
jge
mov
roll
std
adcl
outsl
fistps
jnp
cli
pop
and
cmp
xor
jbe
dec
enter
jns
aad
data16
push
cmp
push
xlat
pop
jg
test
or
dec
xlat
dec
cmp
iret
cmp
or
ljmp
das
push
cmpsl
mov
mov
repz
loopne
push
xorl
xlat
xor
push
pop
lret
add
adc
mov
pop
scas
pop
divb
enter
xlat
pop
adc
call
cltd
sub
bound
dec
fstp
inc
mov
cmp
in
push
dec
add
fwait
push
cmp
outsb
adc
cmpsl
lret
in
daa
jo
cwtl
mov
inc
aad
jmp
pop
push
jae
xchg
cmp
and
mov
sub
xlat
xor
push
xchg
rcll
or
push
cmp
lods
leave
clc
jecxz
iret
fmull
cld
je
xlat
lock
shrb
xorb
cltd
aaa
xchg
jb
repz
fwait
inc
mov
js
test
push
fldl
inc
and
pop
push
scas
std
fadds
fadds
repz
dec
repz
stos
dec
dec
cmp
jnp
sti
dec
push
xor
rclb
ljmp
shlb
call
dec
pop
xlat
lods
pop
add
sbb
mov
add
add
jg
das
xor
pop
dec
pop
add
push
lea
mov
pop
jnp
sbb
mov
in
jbe
jb
stos
xchg
sub
cltd
and
and
xchg
leave
cli
xor
scas
push
sub
push
fistpl
ja
cmc
aad
mov
xor
in
or
sahf
jb
xlat
pop
iret
cmpsb
pop
xor
stos
add
jnp
sub
mov
mov
or
inc
mov
pop
xor
ret
inc
or
mov
xchg
xor
mov
lock
enter
mov
cmpsb
xor
cmc
mov
and
sub
bound
aad
lret
mov
ljmp
cmp
mov
imul
sbb
sub
aam
leave
or
out
out
jmp
clc
in
xchg
in
insl
cli
jmp
outsl
mov
rorl
or
sbbl
movsl
dec
pop
call
xchg
ficomps
mov
pop
cmp
fbld
jge
xor
ret
add
hlt
mov
in
mov
test
xor
and
push
scas
inc
push
jae
adc
dec
fiadds
push
lcall
call
add
cmpsb
dec
sarl
sub
push
les
mov
xchg
ror
decb
out
mov
xchg
add
mov
aam
movsb
mov
add
sub
leave
test
dec
cmp
lret
fistpl
push
sbb
sub
mov
jns
dec
dec
pushf
xor
pop
dec
or
pop
dec
jg
dec
cli
bound
subl
cmp
cmc
mov
test
add
int
jl
lods
sub
lods
stc
int3
push
add
aaa
stos
mov
xor
sub
pushf
push
enter
lock
jnp
out
lcall
pinsrw
les
dec
movsb
stos
xchg
nop
lds
loope
lret
repnz
xor
cmp
fistpll
cmp
mov
xchg
lods
mov
push
cwtl
fdivrl
ja
into
mov
cmp
stos
in
cltd
cmp
sbb
add
sahf
mov
pop
pop
pop
fstps
or
clc
shrb
outsl
movb
popf
outsl
xchg
inc
lock
jmp
mov
cmp
xor
mov
in
add
cld
ljmp
lock
ljmp
loope
mov
xor
mov
stc
or
out
push
mov
pop
scas
xchg
outsl
cmpsb
adc
leave
mov
les
push
xchg
mov
cmp
fwait
or
cmc
cmp
aam
xor
stos
fcoms
outsb
mov
popf
and
xor
stos
mov
xlat
pop
sarl
imulb
or
xchg
arpl
sbb
pop
dec
hlt
push
test
dec
jo
jnp
lret
lods
stos
xchg
mov
sbb
xor
xlat
lret
xchg
xchg
mov
mov
fdiv
jg
inc
mov
adc
adc
cmp
and
add
test
in
aam
jp
jle
xchg
fildl
aad
or
fadds
xchg
sbb
into
jnp
ret
mov
or
aam
jp
mov
push
das
push
jne
mov
or
xchg
or
orl
push
inc
mov
loop
jmp
mov
jl
cmpsl
sub
pop
rcrb
in
aad
jno
adc
sbb
xor
lods
dec
mov
hlt
xorl
jecxz
xchg
mov
ljmp
push
pop
sub
jmp
xchg
gs
mov
imul
outsl
push
int
add
cmp
xor
enter
add
stos
stos
decl
pop
sub
adc
add
jg
or
or
and
mov
adc
dec
pop
mov
sub
lret
xchg
jle
cmp
dec
mov
aad
mov
add
and
repnz
pop
or
cs
mov
in
outsl
jno
xor
inc
sbb
int3
and
add
mov
mov
cmpsb
or
ja
js
mov
scas
pop
clc
mov
stc
mov
xor
pop
mov
pop
lret
or
cmp
clc
jp
test
adcb
aad
sub
mov
sub
xlat
and
int3
ja
out
cmp
stc
popl
xor
jo
adc
cmpsb
cmpsl
enter
cli
add
stc
xor
jmp
notb
repz
jg
push
mov
iret
jns
dec
and
or
jae
icebp
fdiv
aas
mov
cli
icebp
or
sub
pop
inc
sbb
orb
sub
mull
xchg
inc
stc
mov
add
mov
adc
mov
pop
repz
mov
mov
xor
mov
and
repz
xchg
pop
sti
mov
mov
jo
xor
sbb
or
jp
scas
jno
int
dec
jno
fsub
cs
or
rcll
lods
jb
mov
iret
loopne
push
sbb
es
sub
xor
lea
inc
repz
mov
mov
out
sar
dec
testl
sub
pop
ja
repz
cmp
inc
or
add
fildl
xor
int
test
push
pop
mov
imul
or
divb
cmpsb
icebp
push
sub
repnz
enter
ficoml
andl
sub
cmp
cmp
mov
ret
mov
lcall
and
call
and
fsubs
aam
or
inc
cmpsb
mov
iret
sub
sub
imul
call
inc
jne
imul
test
and
cmp
aad
adc
lahf
xor
jae
jb
aas
cmp
pop
mov
es
aam
int3
lret
bound
xor
dec
loopne
inc
cmp
dec
hlt
fsub
enter
adc
movsb
dec
mov
cs
sbb
in
shrb
mov
rcrb
pop
dec
mov
neg
cmp
icebp
fmuls
sbb
movsb
imul
fwait
cmp
xlat
dec
jnp
mov
xchg
and
in
mov
mov
inc
insl
rorl
das
jbe
xchg
jo
mov
mov
dec
mov
xchg
xor
mull
inc
and
imul
mov
jg
icebp
mov
daa
das
cmp
push
xchg
addr16
cmp
cltd
in
lret
push
rclb
push
mov
mov
ja
int3
lcall
addl
or
rclb
in
xorl
add
icebp
mov
xorb
addb
xor
ror
js
inc
jmp
loopne
out
lock
mov
push
test
cmp
outsb
lahf
cmp
test
cmp
sbb
in
pop
or
divb
in
cmp
jecxz
jp
push
pop
push
in
adc
insb
arpl
lret
push
dec
push
sub
rcll
mov
mov
sbb
xchg
movsb
mov
lods
mov
xor
or
or
fldt
fdivs
mov
lret
dec
fcmove
push
lods
aam
clc
add
xchg
pop
aad
ljmp
xor
add
xor
stos
dec
jl
xor
xchg
stos
imul
and
add
jle
rcll
adc
push
fs
lock
and
jae
loop
jae
stos
add
and
imul
push
les
loopne
jns
cmp
inc
push
push
out
sbb
in
or
mov
add
lahf
cs
pop
orb
stos
aad
cvttps2pi
in
push
mov
iret
inc
lcall
adc
iret
or
or
mov
mov
mov
jp
dec
cmp
add
push
sub
je
out
sub
xlat
les
pop
push
icebp
add
xchg
add
or
mov
sub
rcrl
sbb
fisttpl
cwtl
repnz
in
sub
cmp
stc
ljmp
xor
in
loopne
ud2
cmp
or
jns
std
cmp
jbe
repz
in
mov
and
clc
mov
stc
jbe
stos
xor
xor
dec
adc
cmp
or
jb
pop
sahf
sbb
push
or
xchg
sub
sub
lea
dec
ret
xor
loopne
pop
jg
scas
cmp
jbe
decb
aad
xchg
adc
jmp
jnp
ret
jge
ret
cmp
mov
imul
add
mov
ss
ss
rcr
sbb
shr
shlb
aad
je
stos
fsub
aaa
int3
push
add
xchg
dec
jecxz
iret
push
int
ret
mov
adc
xchg
out
ljmp
rorl
enter
mov
mov
cmp
stc
mov
inc
out
mov
add
repnz
xchg
inc
or
addr16
lcall
fstps
xor
dec
xchg
stc
push
or
sub
loope
bound
add
pop
mov
pop
call
push
btc
inc
cmp
popa
mov
push
dec
sub
pop
push
xlat
sbb
cmp
das
outsl
fadd
xchg
pop
fstl
fbstp
jbe
in
hlt
adcl
pop
cmp
shrl
and
out
add
arpl
or
mov
mov
cmc
js
fisttpll
out
test
xor
pop
fstps
mov
xchg
cli
push
les
out
sahf
pop
lcall
test
into
push
add
in
sub
xor
push
pop
hlt
adc
rorl
jecxz
and
into
inc
jmp
or
lcall
cli
and
scas
movhps
out
mov
adc
cmc
mov
xlat
fistpl
jb
dec
cltd
loop
out
xor
mov
jmp
pop
cmp
ret
mov
int
hlt
in
sub
call
scas
xchg
add
lock
mov
mov
pop
test
sbb
aad
mov
cmp
mov
jecxz
push
jg
daa
cmp
aad
fisttps
addb
inc
jmp
push
sbb
enter
outsb
xchg
mov
and
fcmovnu
mov
jbe
and
mov
inc
cmp
std
cmp
cmp
out
add
sbb
mov
xchg
jg
jge
stc
dec
push
int
mov
or
fcoms
sub
stc
outsl
sbb
mov
xor
xor
sbb
fcomps
sbb
pushf
enter
dec
inc
loope
int
and
push
movsb
ljmp
sbb
push
aam
jnp
jb
adc
or
mov
push
aam
push
push
jns
movsb
and
xchg
push
add
in
lds
and
mov
in
movsl
pusha
aad
arpl
sarl
and
sbb
lds
xchg
or
jno
repz
repnz
out
negl
repz
shlb
popf
rcrl
sbb
push
fidivl
negb
mov
cmp
dec
adc
sbb
pop
push
iret
test
in
scas
push
sbb
dec
xchg
ss
xchg
pop
cwtl
inc
aaa
cli
fsubrl
shll
stos
pop
ja
inc
jp
xlat
sti
inc
pop
imul
dec
mov
dec
mov
push
cmp
roll
in
inc
push
leave
out
movsl
mov
fst
jae
sbb
lods
push
xor
negl
adc
mov
sub
icebp
popf
sarl
outsb
mov
add
aad
mov
scas
and
pop
frstpm(287
les
into
shll
test
pop
push
in
ljmp
shl
mul
mov
fdivrl
jl
shrl
pop
xor
popf
or
out
test
clc
dec
flds
mov
cmp
sub
inc
sbb
test
shr
xchg
int3
fsubr
cmp
push
test
test
mov
mov
lahf
jno
mov
pop
int3
mov
lret
xchg
add
push
loopne
ljmp
shlb
xchg
test
mov
loopne
inc
mov
mov
divb
test
ds
fdivrs
mov
adc
xchg
es
lods
lcall
mov
cltd
cmp
add
lea
lods
dec
cmp
add
outsl
jns
les
jecxz
lcall
sbbb
popa
aad
cmp
in
xor
stc
sarl
xchg
test
cltd
mov
xor
clc
leave
mov
movsb
xchg
jg
xchg
sbb
mov
inc
push
or
xchg
add
sub
test
pop
sub
mov
cmp
xchg
ds
push
push
cmp
adc
in
gs
imul
and
pop
xor
stos
xlat
imul
jns
add
aad
pop
add
adc
dec
or
loopne
adc
add
cmp
movl
sahf
adc
and
xchg
cmp
jae
ret
jb
int
and
cld
jecxz
clc
lods
push
test
sbb
xor
lahf
sub
inc
inc
les
pop
adcb
and
inc
stos
jge
bound
dec
jne
sbb
sahf
outsl
lahf
div
dec
ficoml
cmp
in
inc
mov
popa
pop
lods
dec
mov
jmp
fisubrl
cmp
call
xchg
jnp
xchg
repz
inc
pop
fistps
jb
push
push
imul
je
scas
lea
sub
push
inc
ficompl
adc
fstl
push
cmp
rorl
mov
push
cmc
sarl
inc
pop
add
jo
xor
xchg
aas
jmp
pcmpgtw
dec
jnp
es
fwait
out
jns
sahf
jnp
cmp
cli
cmp
rep
mov
into
inc
pop
xor
xchg
jns
enter
jno
lret
fstpt
xchg
cmp
add
xor
adc
cwtl
fsubrl
xchg
jle
cmp
daa
mov
xchg
out
sbb
dec
fdivrl
fnstenv
sbbl
add
adc
xor
jno
cs
jo
les
push
shlb
and
push
and
aaa
mov
pop
sub
cmp
pop
lods
jo
xchg
rclb
negb
pop
leave
mov
push
dec
mov
mov
and
push
jecxz
cmpsl
nop
jae
rorl
xchg
test
lret
push
ret
xlat
les
lret
fmul
pushf
adc
or
and
sub
les
inc
mov
stc
ljmp
xor
mov
popa
push
call
or
scas
inc
clc
adc
jo
scas
dec
xchg
dec
fadd
sbbl
iret
add
jecxz
sbb
sub
fwait
cwtl
cmp
inc
std
push
and
sbb
sub
aam
cmp
adc
sbb
lret
int
and
add
sti
clc
les
fsub
enter
mov
mov
pop
lock
lcall
push
aas
iret
aam
fiaddl
push
stc
out
mov
pop
lret
das
pop
cltd
outsb
ficoml
sub
call
fincstp
enter
sbb
xchg
cmc
or
xchg
sub
mov
mov
or
xchg
jle
push
pop
pop
push
adc
imul
insl
push
mov
aam
scas
imul
test
in
mov
push
xchg
cld
xchg
fldcw
leave
loopne
in
test
repnz
hlt
nop
xor
sbb
jnp
in
test
jecxz
add
lods
push
popf
mov
fisubs
mov
xor
sub
repz
mov
fadd
dec
and
cmp
adc
js
in
jno
js
aad
xchg
movsb
repz
add
in
sbb
cld
outsl
push
dec
int
sub
xchg
lock
mulb
xchg
mov
dec
fmuls
or
adc
sbb
in
cltd
ljmp
icebp
icebp
cmp
xchg
aam
ror
push
sbb
les
xlat
test
mov
push
mov
fwait
test
ret
cmc
in
adc
repz
rcrl
pop
mov
sbb
out
shlb
mov
mov
aad
pop
push
mov
lea
test
loop
jne
lret
xor
mov
pop
push
xchg
mov
in
sarb
les
mov
dec
xrelease
insb
es
pop
or
idivb
dec
mov
xor
mov
loop
jg,pn
add
cwtl
cs
mov
cmc
cwtl
cmp
sub
adc
imul
in
add
mov
dec
xor
sub
adc
and
clc
data16
dec
pop
jle
mov
daa
lods
neg
aad
icebp
or
and
dec
inc
push
cld
push
test
pop
inc
cmp
leave
mov
loop
cmp
and
mov
inc
jmp
outsb
lret
sbb
pop
int3
xlat
ja
xor
or
xlat
addr16
cwtl
sbb
aas
dec
jbe
subl
and
xchg
inc
add
test
icebp
jle,pt
jg
rcl
arpl
or
cli
pop
mov
dec
push
push
mov
xor
or
jl
aam
fistl
fiaddl
int
xorl
mov
fcomps
inc
ja
jecxz
push
push
and
dec
inc
adc
cmpsl
push
mov
leave
out
add
test
iret
or
rcl
sbb
add
int
jne
mov
call
imul
xchg
imul
lret
sar
mov
out
outsb
inc
push
xor
loopne
dec
in
xchg
fcmovne
dec
imul
inc
stc
xchg
jnp
add
dec
lcall
xchg
addr16
add
jecxz
les
inc
cmp
push
test
xor
xchg
pushf
out
mov
sti
cmp
push
in
mov
jns
dec
les
ja
pop
stc
push
fildl
data16
jg
ss
loopne
push
pop
stos
pop
add
adc
jns
mov
xchg
pop
cmp
mov
fstpt
push
out
cmp
xlat
mov
mov
inc
push
cwtl
arpl
mov
xor
rcrb
inc
push
jb
imul
rolb
push
js
imul
sarl
sar
pmuludq
sbb
adc
lods
push
movsl
xor
adc
ljmp
and
jns
scas
xor
rolb
jecxz
scas
arpl
out
mov
popa
mov
pop
iret
mov
cmp
push
jmp
xchg
mov
jb
adc
pushl
test
adc
lar
mov
mov
mov
mov
icebp
mov
sbb
xchg
shl
outsb
xor
in
cmp
fwait
sub
test
mov
vmwrite
inc
dec
dec
pop
push
cmp
scas
adc
stos
call
sub
push
lret
mov
je
or
mov
adc
mov
sbb
rorl
cmp
pushf
add
clc
nop
xor
test
stos
jmp
fmulp
jbe
pop
outsl
xor
es
pop
inc
xchg
and
push
movsl
or
mov
adc
or
in
add
iret
jo
shl
lock
call
out
fwait
add
imul
je
jbe
lcall
in
mov
cmp
mov
clc
pop
mov
fcomp
mov
xlat
dec
aam
lods
pushf
fists
arpl
sub
xchg
sub
push
cmp
in
imull
cli
mov
add
mov
cmpsb
dec
pusha
out
inc
dec
clc
repnz
fdiv
aam
jg
xchg
xchg
les
int
fcmovb
or
stc
mov
shlb
sbb
adc
jmp
clc
testb
insl
lcall
add
imul
les
mov
stc
lret
xor
cmp
push
and
sbb
lret
lea
inc
roll
pop
xlat
roll
mov
xlat
xchg
mov
pushf
cmp
xor
in
cmp
and
rcrb
les
jmp
aad
sub
xor
cmp
fistpll
js
jmp
fnstenv
add
int3
inc
enter
insb
in
mov
push
test
jnp
jg
jno
cltd
mov
arpl
pop
push
dec
dec
dec
inc
inc
ds
sarl
mov
xor
stos
inc
mov
scas
jbe
mov
push
cmp
lcall
je
xor
sbb
sahf
aad
mov
and
push
xor
inc
dec
lret
sti
sub
int
rclb
push
aaa
push
les
mov
pop
rorl
mov
xchg
js
out
push
xchg
adc
push
aam
in
nop
mov
cli
jg
cwtl
cmp
push
fwait
dec
daa
hlt
sub
fdivrs
cmp
and
add
int3
fcomps
xor
cmpsl
lret
pop
ds
xor
imul
dec
pop
cmp
call
jmp
insl
mov
loopne,pt
fcmovnbe
stos
int3
clc
adc
jmp
or
sbb
sbb
xor
sbb
enter
testb
repnz
inc
fmuls
stos
pop
mov
bound
shlb
aam
repz
lods
push
mov
mov
xchg
imul
adc
sub
iret
add
ret
xor
push
dec
or
in
insl
push
pop
das
mov
or
sub
scas
ds
aam
sub
xchg
xor
cmp
test
fwait
jmp
push
xchg
movsb
lret
mov
std
shlb
es
fidivrl
mov
jae
lods
mov
push
jp
or
sarb
nop
mov
fists
dec
push
lret
addr16
loopne
stos
mov
rcrl
pop
inc
insl
pop
fldpi
mov
pop
out
sarl
divb
iret
cmp
xor
inc
fwait
or
sbb
xor
in
sbb
call
pop
rol
test
cmp
xlat
mov
ret
push
xor
add
repz
pop
enter
jbe
mov
insl
push
je
xchg
es
ss
cmp
or
mov
insl
mov
dec
test
loop
dec
jnp
xchg
mov
mov
fdivs
loopne
mov
xchg
iret
test
in
xchg
cwtl
lea
and
movsb
repz
nop
iret
aas
aad
call
add
add
dec
jno
sbb
push
ss
mov
pop
push
rcll
test
adc
mov
pop
or
ja
push
mov
fstl
ret
mov
mov
ret
pop
test
add
ror
clc
aad
in
movsb
ret
fiadds
idivb
push
jge
arpl
loope
and
pop
cmp
lret
dec
iret
lea
jecxz
roll
icebp
xchg
in
stos
ds
push
data16
ja
xorl
rolb
daa
cmpsl
mov
push
lret
movsl
xchg
pop
dec
ret
push
mov
or
jo
daa
adc
adc
lods
pushf
xchg
xor
popa
or
inc
xor
cmp
in
sbbl
or
idivb
jne
call
or
out
cmp
pop
pop
adc
jae
popf
sbb
mov
xor
repnz
pmulhuw
es
add
idivl
dec
subb
or
add
mov
dec
mov
xchg
xchg
ds
mov
std
xor
bound
lret
cmp
sbb
pop
fcmove
pop
dec
mov
bound
fimull
dec
rorb
adc
mov
cmpsb
stos
mov
js
loopne
out
sbb
ret
into
xchg
sub
out
out
mov
arpl
test
dec
lds
rcll
les
rorl
testl
ds
pop
fistps
push
dec
daa
ds
loopne
call
adc
mov
xor
dec
jmp
jnp
jle
sub
cltd
pop
fnstenv
fcmovb
mov
movsb
rcrb
sti
dec
into
push
sbb
fisttps
dec
dec
int
fldt
jmp
jg
add
jnp
mov
sbb
stc
xchg
cs
pop
mov
add
sbb
xchg
call
fsubrs
xor
iret
mov
cs
in
inc
add
fs
sub
iret
stos
ds
aam
push
repnz
mov
sbb
xor
js
cmp
inc
mov
cmp
pop
insb
jmp
add
inc
pop
cmpsl
lock
adc
mov
pop
cmpl
push
ja
sbb
mov
les
mov
mov
ds
test
sub
rcrl
jne
and
loopne
out
or
push
fadds
sub
fadds
aad
rcl
jecxz,pn
xchg
and
push
stc
hlt
xor
xchg
orl
je
push
stos
push
inc
out
pop
or
aas
ret
into
cmp
dec
movsl
mov
enter
add
mov
jae
sbb
in
testl
xchg
add
and
ljmp
jnp
lds
movsb
mov
mull
cwtl
xlat
add
rorb
lea
mov
daa
repz
loopne
stos
adc
sub
xorl
leavew
jl
jne
xor
dec
mov
clc
xchg
push
adc
ss
lahf
subb
adc
jp
jle
lcall
push
add
jo
cmp
pop
je
sbbl
mov
push
push
or
pop
in
sbb
jmp
xor
clc
jg
repnz
rol
lods
out
idivb
pop
mov
push
cs
addb
and
cmpps
test
jnp
cmp
jg
pusha
inc
jo
pop
sbb
add
xchg
ret
dec
enter
and
or
or
sti
pop
mov
fimull
test
xor
jno
imul
jp
and
mov
xchg
sbb
fildll
fwait
bnd
push
mov
xor
push
inc
stos
cld
xor
dec
stos
push
push
sub
arpl
sbb
cmpsl
cmp
add
lods
jg
hlt
addl
call
call
and
xor
popl
js
sub
enter
pusha
mov
fldcw
adc
and
lret
adc
cmp
sub
pop
push
sbb
and
jge
bound
mov
mov
aad
cmp
lock
data16
stos
lods
lods
mov
xchg
icebp
add
int
das
sbb
jge
stos
inc
out
inc
clc
sub
inc
ja
cli
fbstp
aas
fnstsw
mov
mov
cmpl
loopne
mov
xor
fisttpll
jne
cmp
jo
push
enter
xor
sbb
jl
js
pop
enter
les
jne
icebp
ljmp
in
and
scas
iret
enter
jns
rorl
dec
inc
pusha
jbe
or
jmp
jae
das
inc
sahf
adc
sahf
adc
lahf
add
mov
fldenv
rcr
fimull
pop
lods
mov
xchg
out
call
rcrb
sahf
cli
xchg
mov
cmc
int3
std
jae
mov
ja
testl
mov
mov
icebp
loop
sbb
ja
repnz
xchg
jg
mov
lret
push
push
cld
push
cmpsb
xor
out
cs
or
xlat
sarl
add
insl
jae
repnz
mov
sbb
test
lock
add
xchg
cli
pop
mov
push
scas
shlb
dec
add
mov
mov
or
cmp
mov
jae
cmp
negl
mov
pop
xor
adc
cmp
icebp
ret
add
add
xchg
or
in
lcall
jg
cmpsb
xchg
fcomps
stos
ss
cld
in
or
rcrl
out
out
adc
push
es
testb
roll
cmp
call
lock
ret
cmp
xor
pop
dec
clc
xlat
xor
fwait
repnz
sub
jnp
cmp
arpl
push
test
mov
jae
lcall
pusha
clc
push
ds
and
xchg
xchg
jae
sbb
jmp
test
shll
inc
sub
popa
and
ds
push
mov
scas
pop
ja
dec
into
bound
cmpsl
mov
dec
adc
or
into
mov
and
stos
negb
or
lahf
addl
repnz
sbb
cmp
test
mov
loopne
cli
pop
aaa
or
inc
or
scas
notb
pusha
cmp
pop
loopne
or
cmp
sub
add
outsl
into
mov
out
mov
xor
jle
lcall
pop
mov
enter
jnp
cmpsl
jo
add
jmp
dec
sar
jmp
mov
jno
jecxz
testl
outsl
sahf
push
rcl
negl
lcall
imul
jbe
popa
cld
or
stc
inc
jae
pushf
sarb
jnp
imull
addr16
aad
imul
repnz
int
xlat
jae
cmp
iret
int3
xchg
cmp
in
jns
imul
loop
movsb
pop
jp
jbe
into
pop
push
jbe
test
sub
mov
pusha
ret
gs
sbb
jae
cmp
int
sti
fisubl
aad
pop
pop
popa
sbb
dec
into
loop
and
push
sarb
cwtl
enter
sbb
push
jmp
mov
xor
sbb
mov
jae
call
clc
add
pop
add
out
fimull
xchg
dec
and
add
pushf
or
sbb
jg
hlt
mov
mov
jmp
jnp
imul
dec
cmp
faddl
iret
mov
sbb
imull
xor
shrl
pop
loopne
gs
pop
sar
aam
cmp
dec
loop
xchg
and
shlb
push
lret
dec
lret
je
xchg
shrb
mov
es
xlat
dec
jbe
hlt
in
mov
xchg
add
pop
and
mov
and
lret
xor
pop
repz
mov
fnstsw
fcomp
push
mov
mov
mov
or
xchg
out
shl
lret
mov
dec
inc
cmp
dec
cmc
out
or
mov
xchg
add
ja
out
ljmp
das
sahf
test
mov
cmp
in
xor
inc
adc
test
pop
into
sub
push
lock
pusha
daa
inc
adc
daa
jmp
xor
pop
jp
jns
xchg
mov
pop
in
sub
and
lahf
cs
or
cmp
cmp
cmp
icebp
into
adc
jo
shrb
xchg
stc
aam
orl
cmp
cmp
jle
andl
dec
push
xchg
iret
fisubrs
add
and
insb
jg
jo
cwtl
ja
mov
or
inc
nop
jp
repnz
dec
cmp
aaa
lcall
pusha
mov
or
mull
into
mov
pop
repz
push
cmp
jecxz
testl
mov
mov
xchg
stos
mov
popa
data16
insl
xchg
or
dec
outsl
fdivrs
std
repnz
push
jne
insl
rcll
inc
xor
jb
lret
xor
arpl
stos
in
add
push
sbb
pop
mov
cltd
and
in
pop
jmp
repnz
nop
repz
enter
fcom
xchg
xor
addb
cmp
jo
loopne
xchg
mov
insb
sub
inc
out
cmc
call
xchg
xor
cwtl
sbb
sub
cwtl
xchg
sbb
push
cmpsb
add
jmp
rcl
aad
jecxz
les
and
shl
sahf
das
outsl
test
shlb
xlat
movsb
ja
xchg
lock
enter
cmp
cld
jp
ret
fildl
pop
xlat
int3
repnz
push
rcl
add
in
sbb
xor
push
jmp
and
or
scas
push
pop
cmp
mov
xor
push
rcrb
push
fadd
xchg
xchg
xchg
mov
mov
or
jne
sar
imul
mov
xchg
push
adc
gs
jp
sub
aas
jmp
in
push
pop
ret
cmp
in
xor
insl
dec
pop
mov
dec
mov
aas
scas
mov
push
pop
mov
pop
mov
inc
or
arpl
ret
jbe
push
or
push
xor
xchg
mov
int3
mul
in
xchg
shll
sbb
xchg
xor
cmp
mov
sahf
sbb
int3
orb
jnp
fdivrl
dec
out
hlt
pop
pmovmskb
add
pop
jmp
aaa
fmull
pop
enter
outsb
dec
dec
push
movsb
imul
subl
test
xchg
dec
shlb
aam
aam
cmp
pop
rolb
jae
int
call
xchg
mov
mov
dec
loop
and
ljmp
mov
cmp
data16
sbb
mov
mov
enter
cmp
xor
and
mov
cmc
xor
cmpsl
jge
mov
fadd
xor
stc
loopne
bnd
cmp
jnp
mov
test
add
mov
aam
imul
adc
cmp
add
mov
jge
imul
in
sbb
movsb
jnp
push
sub
adc
xchg
call
and
push
sbbl
cld
les
cmc
xor
and
stos
xchg
inc
or
sbb
push
daa
or
pop
jbe
mov
pop
jnp
xchg
pop
cs
ficoml
inc
jg
cmc
xor
jns
cmp
imul
inc
inc
lcall
int
xor
test
inc
and
in
sub
sbb
cmpsb
rorb
int
cmp
ret
repnz
pop
sbb
and
aad
fucomi
fwait
mov
cmp
adc
lea
popa
inc
pop
out
decl
sbb
push
cmp
xchg
push
push
mov
stos
int3
xchg
cmc
jge
mov
xchg
push
pop
inc
fsubp
pop
lret
lret
mov
aas
flds
add
lods
mov
ret
int3
call
int3
xchg
cmp
adc
or
scas
add
enter
cmpsl
xor
rorb
rclb
lret
or
push
mov
cs
loop
daa
and
add
sub
xchg
outsb
mov
dec
mov
xchg
mov
jb
cmp
loopne
in
inc
ficoms
mov
mov
sbb
popl
xchg
inc
pop
xchg
xchg
jno
dec
fwait
xor
jge
mov
cmpl
icebp
mov
cli
fdivp
pop
pop
nop
pop
cmp
ljmp
cmp
xor
lret
dec
lea
movl
mov
hlt
and
xlat
jb
cmc
aas
and
and
ljmp
add
push
lds
pop
je
add
mov
pop
ret
inc
xlat
cmp
xor
scas
push
movsb
add
ja
sub
fucomip
shll
xor
inc
xchg
dec
and
jg
stos
cmpl
or
xlat
popa
sub
push
ret
sbb
jmp
adc
and
or
cwtl
movl
movsb
mov
xlat
addl
and
mov
mov
leave
mov
fidivrs
jnp
xlat
loop
mov
pop
fwait
imul
stos
sub
inc
hlt
mov
icebp
aas
test
push
xchg
loop
jnp
xchg
xor
int3
popf
lock
flds
or
xchg
inc
icebp
jmp
insb
aaa
xor
arpl
fidivrs
cmp
sbb
dec
pop
in
cmp
cs
or
cmc
lret
lcall
jae
sbb
inc
sub
jecxz
jp
rol
fcmovne
xor
or
in
insb
mov
fidivrs
int
xchg
hlt
pop
mov
push
cmp
cwtl
lcall
arpl
xor
and
fmul
sbb
mov
das
adc
int3
rcr
pop
add
or
ja
or
sahf
push
sub
and
negl
pop
ss
fwait
mov
movb
ror
jg
dec
loop
jl
sbb
hlt
dec
adc
cmpsl
sub
pop
addl
in
pop
mov
xor
imul
adc
adc
or
clc
and
movsl
adc
or
andl
dec
mov
je
jb
out
cmp
std
mov
xchg
adc
dec
and
dec
push
dec
fists
xchg
stos
addl
xlat
filds
pushf
cmpb
sub
daa
pop
in
test
outsb
call
jbe
sbbl
mov
cs
cltd
sub
xchg
call
outsl
mov
xchg
jnp
sahf
mov
adc
push
aam
inc
outsl
jecxz
xchg
call
or
lock
lret
pop
dec
call
xchg
cld
sbbl
ret
or
enter
adc
cmp
ja
xor
mov
push
sbb
mov
jmp
jo
add
mov
or
sub
popf
and
dec
sub
jge
pop
mov
sahf
cltd
add
xchg
movsl
aas
idivl
enter
lds
mov
mov
in
pop
sbb
mov
aas
int
sbb
sub
pop
idivb
aas
not
sbb
push
xor
jmp
ja
daa
adc
cltd
repnz
xlat
repz
mov
stc
test
add
jne
inc
or
mov
xor
mov
cli
clc
jnp
imul
outsl
and
cmc
add
ss
inc
in
or
mov
loopne
test
cmp
std
inc
pop
dec
aas
cmp
in
cmp
mov
jl
ljmp
add
jg
xor
mov
or
adc
addr16
adc
shl
pop
ja
pop
xor
stos
push
dec
or
dec
xor
sbb
incl
push
fistpll
cmpsl
inc
lds
call
mov
adc
push
jg
xchg
xor
add
xor
push
add
jp
xor
mov
cmp
loopne
out
int3
pusha
add
inc
push
sbb
mov
pushl
leave
jmp
aad
sbb
mov
shrb
xor
xchg
dec
outsb
out
nop
test
and
pop
inc
andb
fsubs
jae
fisttps
fwait
out
test
sbb
dec
jnp
sub
push
rorl
inc
add
jecxz
lcall
cmp
pop
mov
add
dec
loop
fiaddl
pop
mov
aam
ja
nop
xchg
sub
adc
mov
daa
mov
xchg
ljmp
fidivl
test
stos
jo
ret
xchg
aam
out
sub
into
les
fistps
mov
xchg
xor
mov
mov
lea
mov
dec
add
xor
jecxz
dec
mov
jmp
dec
xor
xchg
in
jecxz
mov
in
cmp
mov
sbbl
sub
pusha
mov
arpl
ja
idiv
mov
pop
push
es
dec
xchg
fiaddl
enter
test
or
ljmp
push
mov
mov
loop
shlb
jg
stos
jne
or
in
cmp
mulb
xor
xor
aam
out
scas
inc
jo
sub
sub
out
sbb
mov
and
cmp
sbb
dec
mov
fdiv
xor
fdivrl
fists
or
dec
adc
in
and
std
mov
icebp
mulb
push
add
loop
movsb
pop
jecxz
sub
clc
bound
lds
sbb
pop
mov
pop
repnz
mov
sub
xor
addr16
decl
fs
xchg
lods
enter
cltd
push
fwait
xchg
pop
sub
pop
dec
gs
push
mov
dec
mov
xor
aaa
mov
pushf
or
lods
push
push
push
pop
xor
or
bound
add
out
sub
mov
hlt
sbb
and
dec
fcmovnb
mov
mov
sbb
in
inc
cmp
cmpsl
int3
pop
sarl
mov
cli
cltd
ficompl
or
or
loopne
xchg
js
lods
rorl
int3
adc
mov
pop
sub
pop
inc
sbb
xchg
add
sub
pop
dec
dec
add
rcr
insl
cmp
xchg
sub
repz
jnp
iret
rorb
push
or
xchg
lret
sub
scas
dec
push
sahf
out
mov
mov
xchg
push
dec
outsl
jb
pop
lcall
clc
inc
mov
fwait
call
lret
inc
cmp
inc
xchg
fstpt
push
std
pop
lock
lahf
les
out
loopne
pcmpeqw
push
cmp
fisubrl
xchg
push
nop
pop
push
cmp
pop
sub
dec
in
cli
and
loope
aaa
out
xor
and
push
mov
xchg
and
int3
jno
es
push
sbb
dec
mov
xchg
outsb
xor
test
lock
xchg
cwtl
popf
xchg
daa
sbb
mov
xlat
mov
inc
ret
lea
add
pop
pusha
pop
add
pop
inc
xchg
inc
mov
mov
test
push
mov
loope
cmp
mov
lahf
mov
call
xchg
xor
mov
inc
add
jae
add
push
lods
movsb
push
xor
xchg
inc
dec
sbb
xor
gs
jb
pop
mov
lods
lods
xchg
lds
xor
lods
inc
xchg
xchg
dec
inc
sub
fisttps
inc
das
outsl
sbb
sub
jp
arpl
je
pop
das
adc
cwtl
mov
in
or
cltd
inc
xor
test
mov
add
cli
or
or
movsl
imulb
inc
jecxz
imul
fimull
push
sbbb
jle
jne
enter
ljmp
add
adc
lcall
or
addb
push
cmp
xor
js
ja
xchg
or
das
pop
pop
xchg
loop
pop
mov
inc
shr
scas
push
gs
aaa
lock
scas
in
sub
or
imul
mov
sbb
adc
xchg
push
push
mov
pop
xor
aam
pop
sahf
dec
das
mov
adc
rol
cmpsb
ss
nop
mov
push
xor
popf
sub
sub
mov
and
or
cltd
jb
mov
mov
cmp
loopne
adc
fbstp
xor
jg
jb
pushf
repnz
stc
aas
sbb
mov
addr16
cltd
mov
rep
jecxz
xchg
mov
or
mov
cmp
mov
out
push
pop
scas
lods
mov
outsb
pop
adc
add
aad
cmp
and
inc
jmp
in
pop
mov
int
xor
movsb
dec
sub
jne
jb
in
lcall
int
mov
int3
inc
hlt
cmp
outsb
sbb
pop
xor
shlb
fcompl
sbbb
sbb
fldcw
push
xchg
outsb
js
cmp
int
iret
push
sahf
test
jns
sub
add
lcall
cmp
mov
pop
and
neg
xchg
jg
lahf
xor
and
push
ljmp
cmc
in
in
xor
call
push
inc
ret
and
rolb
sub
xchg
sahf
xchg
sub
fistpl
add
dec
fistpl
imulb
pop
sub
push
repz
daa
xchg
mov
jg
fildll
and
cmp
fisubl
xor
aam
js
pop
dec
int3
mov
xchg
sbb
dec
dec
sarl
in
enter
mov
dec
dec
jbe
fneni(8087
mov
jg
xchg
jle
lock
shrl
xlat
inc
pop
aas
xchg
mov
jecxz
mov
dec
mov
clc
outsb
js
mov
cld
dec
dec
pop
pop
lods
sub
mov
or
cs
cwtl
mov
mov
out
fcompl
rol
lret
push
cmp
mov
rcr
pushf
out
sub
mov
pop
xchg
add
repnz
mov
in
dec
shrl
adc
sbb
aas
inc
out
std
test
or
xor
or
push
sbbb
pop
testb
loop
push
dec
lea
sbb
pop
jp
xor
jg
sahf
and
cmp
or
in
cmpsb
cmp
sub
insb
js
adc
dec
mov
shlb
and
sar
dec
cwtl
xchg
fcmovnu
lahf
mov
jns
into
mov
cmp
mov
out
sub
adc
in
inc
mov
mov
dec
movsl
in
xchg
push
pop
mov
sbb
mov
cmp
inc
mov
dec
or
mov
aaa
push
jne
dec
int
icebp
in
hlt
je
clc
xor
lods
dec
fld
dec
insb
icebp
and
test
fcomi
inc
cmp
icebp
fucomip
icebp
xor
mov
pop
mov
adc
add
mov
jmp
xchg
stc
dec
xchg
or
sbb
push
mov
mov
dec
push
das
xor
cli
adc
inc
pop
mov
jl
sar
push
inc
outsl
cltd
cmp
in
cmpb
out
or
lret
icebp
in
sbb
jecxz
divl
inc
push
jge
outsb
fidivrl
xchg
and
or
adc
cmp
fcomps
loopne
cmpsl
loopne
pop
bound
inc
push
xor
sub
jbe
xchg
xchg
sub
test
sbb
hlt
dec
push
sub
out
xor
mov
aad
pusha
xchg
cmpsb
jae
lret
into
nop
jnp
cmp
sbb
mov
pop
push
in
lods
mov
les
xchg
lock
jns
mov
dec
pop
rorl
cld
addr16
xorl
dec
sub
enter
sub
hlt
das
out
sbb
cmp
mov
mov
ret
add
les
gs
jne,pt
mov
imul
sbb
jbe
sub
ret
fndisi(8087
aaa
mov
popl
and
mov
movsb
cmp
enter
xchg
xor
sub
cld
icebp
test
push
xchg
nop
mov
mov
loop
mov
mov
inc
mov
dec
add
popf
jno
dec
fdiv
mov
mov
nop
enter
lret
cmp
outsb
mov
and
xor
jo
test
mov
hlt
es
lods
testl
xor
mov
fildl
inc
mov
cmpsb
add
adc
lea
lret
xor
mov
mov
mov
sbb
int3
sbb
out
mov
pushf
jno
stc
stc
enter
jecxz
pushf
and
test
mov
enter
add
clc
xor
add
push
adc
xchg
push
mov
mov
scas
xor
dec
lret
pop
je
or
xchg
mov
jg
inc
push
jne
enter
push
or
ret
nop
mov
mov
mov
jg
bound
add
fdivrs
xor
jle
xchg
out
sahf
jnp
and
stos
xor
or
insl
sahf
push
jno
cs
xlat
in
idivl
dec
xor
mov
lea
adc
stos
and
cmp
cmc
sub
cmc
mov
pop
push
in
pushf
jns
pop
jae
hlt
xchg
neg
pop
or
enter
mov
movsl
je
mov
push
jecxz
pop
xchg
ret
in
mov
jp
loop
sahf
das
sbb
cmp
or
xlat
add
adc
out
jb
and
test
lods
aas
fs
outsb
aad
lcall
cmp
xlat
ret
inc
cwtl
add
aam
lcall
enter
or
ljmp
sbb
sbb
xchg
inc
push
push
dec
inc
sub
in
jle
and
adc
xor
sbb
test
fisubl
jge
jmp
enter
movsl
push
sub
dec
xor
int3
cmpsb
xchg
pop
fcmove
push
or
mov
jo
dec
out
mov
add
out
out
aad
mov
pop
ret
dec
dec
shlb
sub
xlat
mov
mov
cmp
addr16
xchg
xlat
mov
pop
xor
ficompl
repz
lret
mov
and
movsb
ja
push
out
add
cwtl
adc
pop
or
or
inc
xchg
jo
les
cmp
or
movsb
bound
popa
fst
and
cmpsb
xchg
scas
cmp
cmp
jno
subl
or
mov
lret
pop
xor
repnz
jl
or
mov
les
mov
aam
cmp
or
adc
cmp
cmp
bound
mov
ret
aad
mov
sbb
mov
mov
mov
iret
stos
cmp
adcl
dec
adc
jmp
mov
cmp
xchg
lds
aaa
je
jbe
cmp
test
xor
mov
out
movsl
sub
lcall
out
or
jle
xor
push
pushf
cwtl
adc
sub
pop
mov
stc
xor
adcb
imul
push
int3
popa
xor
cmp
cltd
in
lahf
push
fidivrs
sbb
in
push
fisttps
sbbl
push
adc
cmp
nop
inc
jns
aad
clc
mov
test
lock
or
dec
or
scas
repz
push
xor
push
clc
cs
popf
sbb
idiv
rorl
or
imul
repnz
xchg
adc
cmp
dec
or
in
xlat
ja
push
nop
xchg
shll
repz
sti
mov
das
movsb
addr16
sahf
pushf
add
stos
fstpt
mov
mov
loope
xor
outsb
xor
cmp
adc
fiaddl
fsubr
pushw
in
dec
adc
adc
add
jno
mov
and
push
popl
fcompl
or
pop
xor
dec
mov
cli
daa
adc
pushf
mov
test
out
cmc
push
jns
lock
xor
mov
mov
les
pop
xor
jne
mov
mov
pop
and
xor
adc
cmp
subb
mov
daa
or
or
bound
rcll
loopne
std
movsb
adc
repz
fwait
decl
aam
push
into
repz
hlt
stos
pop
aam
xchg
dec
cmpsl
lods
enter
mov
bound
shll
mov
imul
enter
clc
pop
jecxz
jge
movsl
cmp
rcr
mov
rcrl
enter
les
jnp
mov
and
es
push
in
or
xchg
gs
xor
flds
jmp
lret
xor
push
push
dec
iret
push
dec
imul
xchg
adcb
cmp
imull
jmp
bswap
mov
repz
mov
jae
or
pop
loop
cmp
ja
icebp
cmp
or
cmp
push
push
fwait
arpl
dec
mov
orps
fisttps
pop
dec
repz
adc
fdivs
repnz
repz
movsl
jp
lret
testl
sub
negb
dec
pop
mov
inc
xlat
stos
cmp
xor
fcmovnbe
xchg
xlat
dec
add
pop
pop
add
mov
mov
jae
movsb
es
push
cmc
mov
stos
pop
jg
jae
mov
popf
je
and
mov
jae
adc
inc
xchg
mov
repnz
in
popa
sbb
aaa
aam
outsl
xor
sub
mov
push
fbstp
or
adc
jae
les
aas
rcll
push
arpl
into
and
enter
mov
fsub
cli
cmp
jge,pt
mov
mov
pop
pushf
in
xor
scas
adc
sahf
adc
nop
icebp
sbb
adc
arpl
mov
dec
imul
in
mov
cmp
stc
mov
mov
ja
xchg
pop
xchg
add
fldcw
inc
sub
lcall
icebp
sahf
jae
enter
or
sub
dec
sbb
xchg
data16
xchg
cmp
push
sub
mov
out
mov
and
loopne
mov
movsb
pop
and
dec
idivb
fidivrs
ret
inc
mov
fdiv
loopne
les
ja
mov
fildl
mov
mull
cmp
adc
and
repnz
xor
jo
mov
cli
or
test
into
jo
sahf
or
push
jbe
xor
icebp
mov
je
lret
sbb
sbb
outsb
jg
mov
or
cmp
sbb
fucomip
jecxz
ss
sbb
lds
ja
dec
add
inc
jne
push
sub
movsb
mov
fwait
cmp
mov
int
inc
jae
xor
shl
sub
clc
dec
loope
nop
stc
inc
jp
jecxz
mov
add
pop
fcmove
cltd
jg
xchg
push
cmp
movsb
in
icebp
test
mov
clc
dec
add
in
sbb
fisttps
fcomp
mov
inc
fcmove
add
jp
ficoml
adc
in
add
or
mov
andps
test
outsl
scas
push
sub
je
dec
lods
jnp
scas
lcall
mov
out
jbe
cmpsl
dec
jno
fldcw
jae
sub
ss
push
jnp
cmpsl
and
pop
sarl
pop
mov
add
int
dec
dec
sbb
or
jmp
stos
enter
fcoms
xchg
sbb
push
fs
stos
mov
push
xlat
cmpsb
push
cvtdq2ps
mov
ss
ret
mov
cmc
out
sub
or
mov
aam
add
cmpsb
std
adc
sub
xchg
sub
fistpll
pop
or
fwait
pop
push
xlat
xorl
xor
or
mov
pop
mov
jb
mov
cmp
scas
jmp
xchg
xor
pop
dec
xchg
mov
dec
ja
aad
ja
xchg
mov
adc
push
add
jno
ja
xorl
mov
push
push
jo
in
push
cmp
xor
gs
dec
jne
mov
or
cltd
shrb
xor
scas
ret
lret
mov
aas
xchg
dec
jl
add
jno
or
mov
xchg
xchg
add
and
jo
daa
nop
in
dec
shl
inc
xchg
out
js
mov
daa
pop
jmp
iret
pop
pop
sarb
inc
xor
icebp
aad
inc
add
xchg
add
inc
pop
or
push
push
dec
flds
xchg
cmp
adc
add
dec
mov
mov
das
and
pop
dec
mov
sub
dec
mov
xor
int3
mov
sbbl
jbe
xchg
jp
lret
in
lcall
outsb
xchg
mov
dec
mov
dec
outsl
out
or
adc
into
lret
xlat
aad
lret
mov
in
fsubs
cmp
inc
pop
test
adc
mov
cmp
lea
enter
nop
sarb
pop
dec
jns
push
adc
add
cld
ja
pop
lea
xchg
add
inc
cmp
add
pop
xor
add
inc
add
and
jnp
push
push
fldl
mov
rclb
lcall
testl
adc
add
outsb
pusha
sbb
test
pop
sbb
push
pop
inc
rorl
popf
fisttpl
dec
orb
rclb
or
cmp
adc
mov
add
add
cmp
push
push
repnz
cmc
test
jbe
add
fldl
xchg
mov
addr16
stc
add
pop
in
add
mov
adc
sbbl
aad
clc
shl
sbb
out
jmp
outsl
ja
fwait
xchg
inc
ret
push
loopne
cwtl
aad
ljmp
lcall
jg
mov
mov
dec
inc
cs
dec
aas
jecxz
int3
jl
shll
push
adc
mov
fistl
enter
jg
outsl
mov
dec
xchg
jbe
adc
fisubrs
mov
incl
lret
rcrb
sub
arpl
pop
aas
push
push
js
jge
dec
push
inc
fwait
cltd
mov
gs
pop
dec
jae
dec
add
inc
push
mov
std
jl
inc
jnp
inc
fcompl
pop
xchg
xor
outsl
dec
int3
xor
jb
push
mov
add
sar
stos
mov
push
adc
sbb
aaa
lret
int
cmp
iret
loope
movsb
dec
dec
repz
test
cmp
jp
xor
mov
lcall
mov
xor
sub
mov
xchg
jp
pop
mov
add
adc
push
popl
add
and
mov
fiaddl
dec
ds
sub
fadds
sub
mov
lahf
xlat
mov
adc
cmp
push
fadds
mov
cmpl
mov
aas
jecxz
mov
arpl
sbb
test
xorb
pusha
and
xor
mov
and
mov
push
jle
xchg
and
xor
cwtl
loope
push
pop
add
test
icebp
adc
subb
xchg
lahf
push
jp
or
aam
lret
xor
or
dec
fwait
shrl
lds
lock
jae
imul
xchg
push
add
fistl
in
sbbb
sbb
dec
leave
dec
gs
xchg
mov
ja
xchg
xlat
shl
push
xlat
or
xor
or
ds
inc
cld
and
les
mov
xchg
js
sahf
mov
inc
lahf
pusha
imul
mov
repnz
sbb
add
mov
js
dec
sbb
mov
in
pushf
fwait
inc
adc
ja
dec
mov
inc
xchg
in
andb
push
hlt
xchg
testb
mov
pop
add
and
in
cmpsl
clc
pop
jno
pop
arpl
inc
sarl
mov
ss
add
cmp
loop
decb
pusha
shll
iret
out
cmpsb
fisubl
push
xor
icebp
mov
push
jp
jle
outsl
inc
sbb
loope
cmp
popa
cmp
mov
jb
sub
xchg
bound
inc
orb
cmp
adc
fldt
inc
in
jae
movsb
xchg
iret
or
ret
scas
mov
in
lcall
movb
add
xor
push
sbb
inc
adc
aad
pop
or
testb
mov
sbb
jnp
mov
lahf
divb
dec
in
add
sbbl
and
sub
mov
push
loope
jno
push
mov
sub
push
sub
aad
pop
mov
xchg
jno
mov
or
dec
xlat
or
and
pop
jns
jp
pop
sub
inc
mov
adc
sub
xor
sbb
hlt
push
pop
ja
or
sbb
sub
inc
sub
cmp
jg
gs
sub
or
aad
les
push
sbb
fimull
outsl
adc
mov
cmp
dec
mov
ja
ret
enter
sarb
iret
rcrb
test
and
cmp
fimull
push
movsl
xchg
jne
loope
popf
xchg
sub
sbb
push
mov
testb
mov
sbb
cwtl
jl
or
fdivrl
dec
sub
adc
cmp
outsb
invd
cltd
cmp
sbb
fisubrs
repnz
add
rcr
jle
in
mov
mov
mov
repnz
aas
dec
sbb
lods
push
jne
aas
and
jecxz
sahf
loopne
test
ss
mov
xchg
addr16
dec
xor
mov
sub
cltd
push
and
int
inc
pop
out
repz
sbb
ljmp
push
ds
jae
pop
in
leave
in
out
mov
test
fldt
push
clc
test
int3
push
sub
push
je
pop
stos
ja
inc
dec
jae
or
cmpsl
loopne
ljmp
clc
nop
es
xor
xchg
cmp
enter
xor
or
xor
fwait
inc
es
icebp
adc
cltd
lcall
lret
sarb
adc
imul
pop
dec
movl
cmp
pop
xchg
arpl
cmpsl
mov
fildll
hlt
push
jbe
pop
lods
mov
cmc
cs
xchg
icebp
pop
cmp
pop
jae
ss
mov
pop
xchg
test
aam
pop
cmp
or
enter
cmp
in
ret
clc
adc
mov
mov
outsl
push
loopne
pop
jl
or
cli
add
mov
xchg
inc
push
enter
clc
sarl
push
cmp
cmp
add
jl
xor
std
in
sbb
pop
les
push
push
mov
cmp
ret
push
xchg
dec
pop
xchg
insl
pusha
loopne
arpl
aad
neg
sub
aad
scas
fdivrs
xchg
loopne
dec
jmp
shr
push
das
fcoml
mov
les
or
shrl
jmp
jg
jecxz
xchg
inc
xor
xor
loop
pop
pop
out
icebp
sti
or
enter
jnp
dec
dec
std
mov
jno
push
test
or
sbbl
and
dec
inc
jae
out
ror
sub
rorl
and
shlb
lahf
add
push
push
les
jle
add
dec
ja
idivl
or
outsl
push
fcmovnbe
loopne
ror
cli
jo
lock
and
shrb
sbb
aaa
xchg
out
fcompl
js
sub
or
push
inc
xor
jnp
shl
lret
aad
cs
aas
sub
xchg
sbb
mov
jg
xor
rorl
in
and
xor
jmp
pusha
les
lea
movsl
and
lea
enter
adc
mov
xor
negb
xor
mov
inc
ficoml
adc
imul
xchg
hlt
xor
movsb
cmp
das
push
dec
nop
out
loopne
pop
push
and
push
outsb
and
push
mov
mov
sbb
enter
dec
sarl
adc
dec
jg
ds
dec
sbb
pop
xlat
push
push
sub
mov
mov
cmp
ja
jge
push
xchg
fcomps
mov
addr16
push
fadds
arpl
cmpsl
ret
cmp
cs
lds
pop
add
jg
divl
dec
mov
push
movsb
jns
push
mov
xor
icebp
cmp
cltd
fistpll
push
fstps
push
xor
push
mov
loopne
cwtl
xor
or
jp
aad
mov
sub
sub
cmp
jns
jmp
pop
xlat
dec
outsb
daa
mov
addr16
lret
popa
rcrl
lahf
xchg
xchg
inc
fucomp
xchg
stos
add
and
adc
cmp
lret
pop
sbb
jmp
out
xor
mov
stos
mov
mov
fistpl
push
insb
jge
test
es
push
cmp
jmp
rclb
js
adc
bound
inc
test
test
gs
jg
adc
cmp
xchg
inc
jp
sbb
pushf
iret
xchg
push
inc
dec
mov
jmp
jmp
mov
jo
sbb
cwtl
loope
push
sub
cmpsb
xor
add
adc
rorb
pop
int
push
enter
adc
inc
ficompl
adc
xor
aam
or
cmp
sbb
mov
cmp
add
pop
icebp
push
cmp
mov
xor
test
mov
jno
jne,pn
lods
lock
repz
adc
mov
lock
inc
ljmp
adc
stos
jmp
add
xor
dec
ljmp
out
lret
lcall
xor
inc
xchg
mov
je
test
mov
and
loope
mov
ss
sbb
dec
aad
fistps
push
mull
loope
sbb
sub
lret
cmc
push
ficompl
mov
sahf
jle
jo
int3
cmp
or
jp
push
xchg
jp
cmp
mov
jg
add
push
fxch
rol
dec
push
pop
loope
dec
ret
mov
xor
xchg
push
pop
mov
imul
mov
movsb
ret
cmp
add
pop
cs
mov
movsb
push
ljmp
fdivrs
sub
sbb
and
ja
mov
shlb
add
push
or
inc
inc
lcall
mov
loope
divl
adc
cmp
mov
sbb
xlat
cmp
adc
xor
cmpsl
fwait
movsl
enter
clc
xor
pop
xlat
jnp
ss
mov
add
int
push
mov
mov
shrl
mov
fistpl
jmp
das
dec
mov
fisubl
inc
lea
push
outsl
xchg
icebp
icebp
movsb
fdivrs
inc
cmp
test
pop
jbe
fsubrs
push
dec
hlt
pop
cmp
fucom
fdivrl
dec
lret
loopne,pt
js
stos
test
xchg
sub
adc
cmp
add
in
mov
mov
jbe
mov
fldl
push
push
imul
mov
sahf
dec
xor
rorl
inc
fsubrl
dec
mov
bound
mov
in
mov
cltd
mov
scas
es
inc
nop
mov
push
adc
les
inc
or
es
dec
cmpsl
inc
iret
xlat
iret
nop
push
jnp
mov
xor
loopne
add
add
push
push
iret
sub
dec
jae
rcrb
add
sub
mov
push
int
ret
sbb
or
into
cli
mov
jae
popa
mov
cs
cmpsb
sbb
cli
xchg
sbb
imulb
icebp
sub
cmp
jno
pop
and
out
rcrb
jno
ret
mov
push
pop
hlt
xor
pushf
xor
cli
fcomip
add
repz
cmp
sub
push
or
out
cltd
push
xchg
mov
adc
fisttpl
nop
rcll
xor
lock
adc
les
dec
int3
xor
test
mov
ds
dec
pop
stos
pusha
xor
jp
out
mov
lods
leave
xchg
push
mov
jp
stc
xchg
xor
xor
mov
inc
push
mov
inc
jno
mov
xchg
call
inc
or
push
cmp
dec
pop
xor
jae
sarl
jecxz
sub
push
add
add
int3
jbe
sti
jmp
push
xchg
inc
push
lock
and
aam
ja
daa
cli
mov
shrl
add
dec
in
call
popf
fmuls
loope
xorb
inc
mov
xor
fwait
hlt
stos
aaa
jae
or
add
jl
push
leave
popa
pop
fmuls
jbe
cmpsb
cmpl
mov
fwait
mov
mov
cmp
adc
jbe
push
xor
lcall
xlat
jb
jae
mov
adc
out
jle
adc
call
dec
dec
pop
jne
jb
in
add
jle
pushf
rol
insl
ja
mov
xchg
adc
loopne
jbe
mov
lock
xor
dec
clc
cli
pushf
mov
in
pop
mov
mov
xlat
mov
insl
ss
sbb
jle
dec
ja
push
and
mov
dec
hlt
ret
pop
icebp
leave
movsl
mov
mov
xor
push
mov
cwtl
push
sbb
push
lret
or
js
cmp
mov
mov
or
addb
sub
arpl
ret
or
fwait
xor
aas
cltd
mov
stos
out
cmp
int
or
pop
fcmovnbe
cmpl
sub
in
or
stc
stos
fwait
jnp
in
lock
push
cmp
mov
pop
jnp
addr16
push
pop
sbb
mov
sarb
test
push
push
jnp
aam
or
ljmp
mov
jns
pop
sbb
test
push
dec
lret
push
push
xor
sbb
loopne
repz
mov
fistpll
incb
add
mov
mov
insl
sbb
dec
dec
inc
dec
pop
push
cli
rcrl
fstpl
ret
iret
add
test
hlt
in
or
push
xchg
lock
imul
lods
fdivp
mov
fxch
in
and
sub
inc
sub
sbb
es
xchg
inc
add
mul
fiaddl
decb
sub
pop
push
and
scas
push
jl
hlt
xchg
mov
nop
scas
fwait
jmp
lcall
into
les
cmpsb
sbb
inc
je
pop
inc
mov
cwtl
push
popf
in
mov
jmp
bound
mov
addr16
popw
test
xor
xlat
mov
jg
stos
push
xchg
mov
xor
xchg
fdivs
in
mov
cwtl
es
jle
dec
aad
xor
mov
push
aad
jle
sbb
out
push
not
xchg
mov
sbb
test
call
mov
inc
adc
int3
dec
or
les
lock
jmp
jns
add
and
or
adc
cmpsl
outsl
xchg
adcl
shll
cmc
or
xchg
jp
or
jbe
lret
xor
mov
mov
and
dec
xorl
rcrb
lods
xor
xlat
push
xor
ret
xchg
cli
cmpl
dec
jnp
movnti
in
xlat
jne
sub
xlat
mov
lcall
sbb
pop
pop
cmp
push
lret
test
mov
pusha
sbb
and
icebp
in
ficompl
repnz
inc
xchg
xor
sarl
and
jmp
mov
pop
or
add
daa
pop
int
out
ret
fldt
rclb
sbbl
add
lods
xchg
adc
imul
cmp
pusha
pop
fldenv
inc
mov
aam
cmp
jno
xor
cld
iret
enter
int3
mov
movsl
or
lcall
outsb
test
out
test
dec
pop
mov
xor
mov
pop
pop
inc
sbb
xor
jnp
or
xchg
ja
cmp
sub
xchg
les
lret
jns
or
xchg
pop
mov
nop
cmp
sub
out
mov
repnz
push
adc
icebp
dec
rorb
jg
cmpsl
adc
imul
dec
test
ja
call
cld
mov
adc
mov
lret
mov
dec
loopne
fwait
je
pop
repz
scas
ss
mov
int3
iret
sbb
out
xchg
fbstp
cwtl
in
in
adc
sbb
xchg
cmpsl
int3
popa
lea
dec
stos
pop
jge
jb
js,pt
sub
les
inc
clc
sub
or
dec
or
sbb
movsb
loopne
popa
out
mov
inc
jnp
mov
mov
and
je
imul
in
cmp
in
push
imul
ss
lcall
sbb
mov
push
cmp
xchg
ljmp
pusha
xchg
pop
inc
mov
mov
sbb
xlat
push
out
adc
jno
xchg
xor
fimull
or
fistpl
mov
pop
jb
add
or
sahf
rclb
lcall
mov
mov
cli
stc
sub
hlt
xchg
mov
scas
mov
mov
and
or
enter
int3
cltd
mov
jbe
pop
repz
mov
push
cwtl
push
hlt
dec
pop
xor
lods
shll
cmp
and
lock
push
and
push
push
push
push
add
pop
popf
mov
mov
scas
xor
fildl
add
lock
inc
jns
mov
pushf
xor
das
lock
xchg
les
cmc
cmc
jns
mov
lea
inc
fistps
xor
pop
ret
call
fisubrl
test
inc
or
arpl
popa
test
push
or
loope
jo
adc
sub
pop
inc
aaa
push
cltd
subl
test
lods
xor
xchg
shlb
iret
xor
jecxz
mov
lret
dec
int
fsubr
cmp
imulb
jmp
test
sbb
sbb
movsl
jae
mov
pop
adc
ds
ja
cmpsl
push
xchg
cwtl
cltd
mov
and
jmp
pop
andb
int
repz
add
leave
adc
scas
inc
mov
mov
cmpsl
imul
push
ds
ret
aas
addb
jo
insb
or
mov
inc
imul
test
jo
dec
shll
sub
movsl
mov
inc
imul
cmp
or
stos
int3
cmp
xor
inc
mov
cmp
jmp
repnz
mov
push
mov
je
ljmp
out
pop
sbb
sahf
lret
or
in
add
and
out
mov
hlt
mov
ds
and
mov
repz
mov
mov
dec
sbb
mov
push
hlt
cmp
push
aam
inc
inc
test
aad
inc
out
ja
push
fistps
andb
inc
mov
fimuls
shrb
cs
aas
dec
cmpsb
mov
or
pop
sbb
sahf
aaa
mov
aad
repnz
lods
loope
and
in
adc
push
cmp
add
mov
cmp
mov
cmp
xor
inc
aad
mov
clc
push
ljmp
push
lret
cmpsl
cmpsb
and
mov
addr16
ret
dec
and
mov
pop
dec
leave
mov
add
sbb
sbb
shr
out
negb
inc
xor
movsl
sbb
repz
cmp
sbb
lods
cmp
pop
sbb
inc
sub
or
inc
push
hlt
cmp
cwtl
cmp
loope
jmp
jecxz
add
popf
push
mov
xlat
jne
fistpl
push
or
push
xchg
pop
mov
pop
stos
enter
mov
sahf
xchg
mov
int3
test
dec
xor
xor
cmp
dec
add
sarb
in
xor
xchg
subl
mov
ret
inc
loope
inc
in
jno
js
shll
rcr
dec
adc
mov
icebp
lds
cmp
int3
mov
aam
inc
outsl
mov
and
popf
ret
jmp
inc
in
push
cmp
mov
shll
nop
aad
repz
lcall
inc
xchg
sti
in
mov
xor
call
sub
divl
mov
pop
dec
loop
cmc
push
push
pop
xchg
addr16
mov
mov
loop
cs
jae
mov
xchg
das
cmp
sub
mov
or
ds
pop
sbb
adc
ss
loop
loop
inc
int
sub
xchg
loope
fucomip
divb
push
addr16
dec
dec
pop
mov
jmp
loopne
daa
inc
xchg
xor
scas
inc
dec
call
mov
jns
jmp
aas
mov
sub
aaa
xchg
cmp
movsl
call
addr16
xlat
and
mov
xchg
aaa
sub
ja
dec
mov
jmp
jbe
xchg
into
pop
mov
mov
jmp
movb
xor
aad
or
stos
sbb
fldl
pop
lret
rcrl
adc
adcl
dec
push
imul
sub
loopne
mov
mov
int
dec
aas
inc
push
xchg
imul
jmp
fsub
xor
fucomi
stc
aad
and
add
in
loope
xor
jp
in
popf
adc
adc
ficomps
shrb
in
out
jecxz
movsl
aam
mov
cmp
fstpl
sub
lahf
jg
addl
inc
clc
cmp
add
mov
or
pop
cltd
mov
ret
lds
mov
imul
xor
and
inc
xlat
push
xchg
ret
test
lock
jl
xlat
pop
out
bound
push
pop
mov
decl
mov
xchg
xor
sub
stos
enter
xor
lods
xor
aas
mov
ja
fsts
test
add
rcr
sahf
inc
jb
adcb
in
cmp
lock
sub
in
mov
loope
inc
xchg
cmp
or
mov
inc
pop
fdivrl
dec
xchg
outsb
es
pop
pop
and
push
ds
movsb
shll
sub
mov
and
push
xchg
jae
rcrl
pop
xor
rol
es
sbb
sub
pop
adc
in
incl
aad
bound
mov
or
les
dec
adc
inc
mov
mov
push
mov
mov
jmp
insl
cmpl
dec
xor
sub
sahf
push
mov
push
imulb
xlat
enter
ds
push
mov
or
pusha
and
stos
and
shrb
scas
adcl
or
test
sbb
sbb
adc
and
fld
jnp
xor
ds
pop
or
lock
sub
mov
inc
clc
movl
xchg
push
test
enter
pop
jg
adc
popa
pop
dec
jnp
xchg
xchg
movsb
xorb
ret
push
pop
sub
push
mov
pop
je
sbb
insl
sub
cwtl
stc
cltd
pushf
adc
loop
add
add
cmp
aam
push
or
bound
xchg
or
pop
dec
pop
sub
mov
or
or
sub
or
or
out
int
scas
xchg
dec
gs
mov
cltd
fsubrl
out
push
mov
adc
imul
in
pushf
mov
rcr
or
pop
lods
dec
xlat
cmp
pop
xchg
cmp
lahf
or
nop
sbb
jo
and
cmp
xchg
mov
and
lahf
xor
cmp
test
xchg
push
lahf
lods
dec
xchg
lcall
or
not
xor
xchg
out
sbb
aam
es
inc
sbb
shl
mov
add
cmc
out
aam
rcl
fcmovnu
jb
pop
cltd
pop
loop
cmp
scas
out
push
and
inc
push
cmp
dec
lea
jge
scas
imul
adc
nop
dec
and
in
push
outsl
mov
outsb
decb
test
pushf
or
jge
lahf
int
pop
aad
push
lret
out
sbb
xor
aas
sub
outsl
adc
xlat
cli
and
and
sbb
enter
cmp
inc
cmp
pop
fiaddl
or
pop
dec
insb
fxch
test
lods
jns
inc
hlt
loop
shl
popa
mov
cmp
movsl
adc
sbb
mov
xor
xlat
xlat
sub
lcall
push
mov
inc
xchg
insb
call
gs
les
cmc
ss
mov
int3
jae
and
xchg
enter
fwait
int3
repz
jne
xchg
mov
dec
or
mov
mov
test
ljmp
cwtl
or
xor
dec
xlat
jne
or
sbb
or
xchg
mov
mov
inc
cmp
pop
push
mov
mov
repnz
xor
mov
adcl
iret
pop
sub
dec
mov
jl
and
adc
dec
addr16
xor
dec
mov
cmpsb
popa
xlat
mov
aad
gs
sti
mov
in
test
dec
lar
lock
shlb
pop
filds
sub
cmp
cmp
add
or
push
roll
call
mov
fsubrs
push
jno
and
rcrb
mov
rcrb
dec
mov
adc
xor
sbb
push
notb
jb
mov
mov
pop
mov
cmp
push
popa
ret
pop
jae
sub
std
dec
dec
rcll
add
call
xchg
out
xor
or
mov
enter
xchg
mov
push
in
and
addb
jno
mov
mov
inc
push
inc
sbb
int
shufps
push
aad
mov
or
xor
mov
cmc
pop
pop
or
cmpsb
enter
sub
dec
sbb
test
push
addr16
xor
call
rol
or
pop
dec
fisubl
lods
xlat
or
cmpb
cltd
jle
aas
pop
add
xor
sub
push
icebp
pop
mov
sub
inc
fildl
int
cmp
fdivrs
add
pop
lahf
repz
int
cs
call
jno
push
mull
sbb
cmp
or
bound
xor
adcb
mov
add
and
xchg
xchg
pop
shlb
or
negl
jnp
loopne
clc
mov
inc
lret
cmc
adc
push
and
add
stc
push
mov
je
or
int3
jae
lret
lret
xor
das
aaa
ficoms
ret
cli
andb
mov
clc
push
mov
out
mov
mov
test
or
ds
rcr
xchg
cmpsl
pop
mov
push
xchg
jecxz
inc
stos
cmp
push
sub
jl
or
cmp
shlb
imul
mov
pop
test
xor
in
gs
inc
js
out
scas
arpl
mov
mov
mov
mov
push
lret
inc
enter
lock
mov
pop
push
sbb
mov
fwait
and
push
push
adc
js
or
pop
jns
jle
sbb
idivl
in
add
pop
xor
movsl
int3
mov
lds
push
in
loope
pop
bound
dec
mov
push
cmp
jnp
or
pop
inc
sbb
repnz
xchg
aad
pop
iret
rcrb
and
add
mov
inc
cmp
xor
and
cwtl
rorl
or
call
xor
dec
cs
repnz
fsubs
xor
mov
fdivl
test
push
lret
pop
lods
sbb
add
jg
xor
stc
dec
mov
lret
push
push
adc
cmpb
xchg
mov
jno
cs
jmp
cmp
jge
sbb
jnp
mov
sarb
sub
movsl
je
mov
fwait
pop
popf
push
xchg
dec
xchg
pop
aad
adc
jne
shlb
call
pushf
out
fstpt
mov
bound
das
mov
mov
fstpt
xlat
fadd
cmpl
pop
pop
jns
pop
fldcw
lcall
push
insl
sbb
sub
aad
and
cmpsb
test
inc
out
lret
adc
enter
jmp
lea
or
inc
adc
cwtl
xor
scas
int
imul
rcll
add
push
and
popa
jns
sbb
call
sarl
inc
int
inc
mul
lds
mov
pop
pushf
cmp
in
mov
cmpsl
mov
orl
outsb
lea
mov
sbb
out
in
fldcw
jno
test
pop
lds
mov
stos
fdivs
sbb
into
mov
cltd
movsb
dec
pop
shl
subb
pop
jnp
aam
push
sbb
jns
es
call
aam
repz
push
adc
push
mov
inc
popa
mov
sub
stc
add
pusha
add
loopne
dec
lock
inc
adc
lret
sahf
mov
push
dec
sbb
sub
ret
out
iret
sub
loop
sbbl
sbb
mov
dec
loopne
repnz
sahf
xor
test
btr
xlat
or
jae
pop
or
fwait
adc
outsl
add
cmovl
ret
inc
enter
cltd
push
sub
sub
inc
pop
in
loope
lret
fisttps
xchg
or
xchg
xchg
loope
aas
out
cmp
repnz
aas
int
jge
in
pop
fcmovu
mov
cmp
shrb
sub
les
aad
and
sub
testl
clc
jp
sbb
shlb
cmpsl
out
testb
out
sti
xchg
inc
push
adc
sarb
fdivl
clc
jg
mov
test
jno
aas
add
mov
push
dec
int3
std
int3
inc
inc
mov
xchg
adc
sbb
jge
incb
out
push
pop
dec
andl
faddp
in
mov
cmp
enter
lret
push
into
sub
jo
fsubrs
addl
test
sub
cs
movsb
dec
icebp
xlat
je
sbb
mov
inc
inc
push
mov
aam
in
cs
enter
shll
stos
notb
add
xchg
pop
mov
pop
addr16
mov
mov
loop
dec
pushf
pop
movl
add
mov
push
leave
sarl
adc
in
mov
inc
aaa
lcall
testl
jmp
jns
and
movsb
mov
adc
jp
outsb
adc
xor
aas
fsub
ret
mov
lahf
inc
ja
movsl
bnd
and
jmp
mov
nop
cmp
cmp
xor
xchg
leave
lret
ret
ljmp
push
or
stos
pop
pop
popf
mov
push
mov
mov
pushf
movsl
lds
xchg
leave
cmpsl
ja
shl
popa
dec
cmp
mov
dec
fsubrs
cwtl
int
xor
mov
jnp
mov
pop
xor
xchg
fidivl
stos
inc
sub
in
test
add
xchg
pop
mov
pop
pop
push
sbb
in
loopne
clc
pop
xchg
dec
push
lea
push
xchg
or
dec
sysenter
sarb
shrl
sub
xchg
leave
call
les
jb
lret
inc
aad
popa
add
fcompl
xchg
jnp
scas
in
cmpsl
rcrb
out
sar
xchg
jnp
xchg
mov
mov
xlat
sub
cmp
mov
scas
mov
pop
rolb
je
pop
or
aas
jb
mov
xor
xlat
add
inc
clc
jp
movsb
mov
adc
xor
mov
insb
add
mov
xlat
push
add
xor
jno
push
xchg
dec
mov
aad
jp
mov
aad
test
sahf
add
jge
inc
xchg
sub
bound
test
mov
test
in
outsl
mov
jno
xchg
sub
push
mov
int
cmp
xor
xchg
mov
xor
dec
test
and
cltd
es
pop
js
adc
cli
mov
add
sub
imul
testb
sbb
push
dec
fstp
dec
ljmp
xor
fidivl
sbb
cmp
lcall
mov
mov
int3
mov
outsb
cmp
mov
enter
lock
jae
cmc
test
ret
imul
pop
mov
jo
outsl
bnd
cltd
int3
adc
mov
leave
jmp
fwait
testl
dec
sbb
pop
loopne
dec
fsubrl
dec
iret
xor
fdivrs
rcl
xor
fdivl
xchg
sbb
inc
stos
test
adc
cmp
xchg
insb
or
push
mov
insl
iret
bound
mov
push
pop
loop
push
sbb
pop
push
cmp
invd
dec
push
stos
push
inc
in
test
mov
in
out
mov
xchg
fadds
aam
lods
mov
mov
mov
cmp
nop
inc
icebp
mov
jb
fst
xchg
xor
arpl
out
sub
cmp
and
dec
dec
pop
movsb
ja
iret
rcrb
nop
sahf
test
add
repnz
jae
mov
sbb
pop
xchg
stc
dec
xor
add
test
cmp
test
adc
sar
add
sub
xor
sbb
add
adc
pop
inc
pop
leave
out
aad
and
mov
es
xor
jmp
leave
jg
xchg
shlb
hlt
push
popl
or
loopne
lcall
hlt
test
imul
loope
lret
inc
lcall
jo
xor
les
fldt
fcomip
or
inc
nop
push
fadds
add
call
inc
popa
sbb
popf
adc
insb
je
fiadds
ds
add
in
call
mov
fldt
adc
inc
xor
cmpsb
sub
xchg
int
mov
xchg
inc
rorl
pop
data16
popa
jmp
or
ds
jp
cld
les
lahf
or
es
jno
or
pop
clc
pop
mov
iret
jmp
xlat
jnp
xchg
enter
add
xor
test
mov
or
repz
out
push
imulb
add
and
dec
test
repz
fidivrl
fwait
cmc
in
or
shlb
and
dec
imul
add
mov
dec
insl
loope
mov
enter
clc
ds
stos
out
pop
ficoml
dec
sbb
push
add
addr16
test
push
cld
fwait
dec
aas
mov
sbbb
test
pop
stc
jno
pushf
add
adc
mov
cmpsb
into
inc
or
cltd
adc
ret
filds
xor
xor
dec
lret
imull
mov
jne,pt
adc
cmp
mov
pop
orl
jmp
lret
mov
mov
push
xchg
pop
inc
lret
mov
push
dec
sub
into
inc
aas
mov
add
pushf
jg
repnz
jne
fwait
push
jno
ret
cmc
jbe
push
shl
dec
pop
sub
aaa
dec
xor
cwtl
sbb
repz
add
repz
mov
jmp
or
push
xor
imul
dec
lock
int3
xchg
cmpsl
jmp
jg
cmp
mov
js
add
ds
out
pop
push
sbb
rolb
ret
jmp
xchg
mov
idivb
shlb
stos
lcall
mov
negl
fsub
lret
mov
pop
mov
sbb
push
clc
shl
sub
jmp
stos
mov
js
les
and
fcomps
pop
pop
out
js
lods
shll
ret
sub
dec
and
or
lods
dec
arpl
test
mov
in
and
std
addr16
mov
dec
adc
xor
cmp
sub
push
sbb
arpl
and
sub
test
or
sub
jno
mov
scas
jae
fadds
sbb
mov
pop
jbe
ja
das
xor
loopne
mov
xchg
fcomps
ret
mov
sbb
push
dec
adc
dec
out
test
adc
sbb
sbb
leave
repnz
mov
mov
in
dec
popl
mov
test
fmuls
stos
mov
mov
cld
sub
stc
sub
and
inc
inc
and
lcall
xlat
pop
inc
push
aam
sub
xor
ficomps
dec
out
push
lea
cmp
xchg
int
pop
lods
mov
movsl
aaa
jno
sbb
sub
and
sysenter
inc
lret
xor
pop
test
push
fbld
push
stos
jo
xor
call
dec
repnz
mov
rcrl
cmp
and
add
sbb
mov
sbb
call
scas
test
shl
inc
repz
aad
xchg
cmc
scas
lcall
jo
jmp
lods
je
lret
aam
mov
les
outsb
rcl
and
outsb
pop
mov
movsb
lcall
sub
xchg
adc
leave
lret
lcall
or
lods
dec
push
stos
clc
dec
xor
push
iret
cwtl
sub
loopne
enter
jns
xchg
sub
sbb
dec
stc
sbb
lcall
mov
jmp
cwtl
add
pop
lods
lods
jb
xor
xor
je
das
inc
mov
push
pushf
lcall
movsl
loopne
mov
or
rolb
in
xor
lock
push
js
sbb
aad
je
in
mov
shll
push
add
push
add
cmp
mov
out
add
mov
push
dec
or
sub
test
add
or
mov
jae
in
pop
mov
sbb
aad
push
push
pop
scas
adc
int
adc
pop
adc
mov
pop
sbb
fistl
fistl
sarb
addr16
js
lcall
mov
hlt
test
pop
sarb
test
push
push
cmp
out
cmp
jl
xchg
and
popf
test
loope
adc
stos
aam
inc
enter
mov
repnz
clc
adc
jnp
hlt
pop
aad
fwait
pop
jmp
pop
xor
out
fsubrl
pop
rcrb
push
aaa
cmpsb
mov
dec
lret
jge
shll
aad
push
mov
iret
or
cmp
xor
push
jne
add
cmp
lods
repz
push
pop
jnp
fdivrl
inc
mov
aaa
mov
imul
xor
cmp
lret
mov
loop
jne
fdivl
in
dec
outsl
loope
loop
mov
repnz
ret
pop
push
repnz
push
lcall
stos
jns
lret
dec
cmp
pop
xchg
in
adc
mov
jmp
jno,pn
xchg
xor
divb
dec
adc
inc
lret
inc
adc
push
imul
mov
xlat
das
cld
pop
inc
mov
repnz
jmp
push
lods
cmp
sbb
lret
add
dec
adc
pop
jecxz
idiv
in
out
js
in
sbb
popf
or
jp
mov
inc
mov
cmpsb
push
xor
aaa
inc
lcall
mov
or
push
cmp
popf
xchg
jecxz
outsb
inc
xchg
aas
adc
adc
and
dec
pop
and
or
sub
dec
sub
mov
enter
adc
addr16
andl
and
jno
rcrl
xlat
dec
sbb
xchg
adc
sub
movsl
mov
mov
pop
stos
movsl
repz
mov
push
jo
ret
lcall
pop
divb
pop
jmp
sub
xchg
and
xchg
out
add
sbb
daa
dec
mov
lret
imul
addr16
xor
jae
sahf
shlb
and
xor
mov
movsl
or
jmp
int
dec
dec
pushf
xor
push
xchg
xor
test
and
xchg
outsb
mov
push
mov
in
sbb
mov
lahf
or
jno
lahf
sbb
dec
mov
enter
jb
jne,pt
pusha
jmp
or
jo
add
dec
fmuls
pop
hlt
mov
pop
out
sarl
inc
sub
lcall
sub
mov
push
lock
aad
sbb
mov
clc
in
stos
js
pop
mov
adcl
dec
cmp
mov
and
xlat
sub
repz
andb
or
clc
mov
jecxz
fbld
adc
popf
dec
imul
popa
out
mov
push
fsub
int
pop
negb
cmp
push
aad
or
or
imul
sub
mov
jnp
scas
xchg
insl
sar
loopne
xchg
dec
inc
cmp
mov
sub
push
sub
lods
test
test
jnp
rep
xchg
xchg
inc
ret
lods
scas
popf
sbb
jmp
jle
jnp
push
lock
mov
enter
int
movsb
sbbb
scas
dec
fistl
mov
je
mov
enter
push
es
add
nop
fdivl
xchg
dec
in
sbb
dec
mov
loopne
sbb
outsb
cltd
jb
adc
mov
out
push
lcall
iret
mov
dec
ss
jmp
pop
ficomps
mov
or
mov
cwtl
jg
inc
cmpsb
iret
dec
and
lods
iret
jno
push
or
mov
stos
pop
leave
xchg
mov
test
int
mov
stos
cld
lret
es
sbb
mov
scas
adc
leave
dec
in
les
divl
jg
mov
jbe
fcmove
xchg
movb
insl
movsb
xchg
push
cmp
pop
in
mov
pushf
push
ficompl
pop
inc
sub
shr
adc
pushf
test
cld
inc
lea
mov
pop
sub
mov
lahf
in
in
fdivrl
cld
aaa
pop
fimuls
cli
mov
jmp
jns
pop
ficompl
or
or
adc
push
add
test
imull
or
or
outsl
repnz
mov
and
pop
pop
xor
aam
aaa
clc
lods
clc
inc
popf
lods
fistps
shlb
and
leave
lret
addr16
cmp
lcall
fcoms
fs
xor
rcrb
ja
fnstcw
mov
inc
jp
loop
xchg
sbb
scas
fildl
cmpsb
push
pop
mov
jae
test
mull
pop
stos
popf
sbb
cs
fstpt
stos
mov
mov
daa
cmp
and
in
mov
xchg
cld
test
adc
emms
in
or
jno
xor
push
jnp
cmpb
dec
jmp
fbstp
mov
xchg
lahf
mov
icebp
add
shl
add
les
mov
shlb
jo
test
hlt
stos
lds
ljmp
and
and
ljmp
pop
lea
dec
dec
pop
mov
test
sarb
xor
idivl
cmp
xchg
out
pop
pop
mov
xchg
lret
ljmp
and
sbb
int3
adc
sbb
scas
xor
les
mov
pop
cmp
fidivs
outsl
push
sbb
aam
add
bound
mov
ret
clc
sub
andb
nopl
push
fbstp
fwait
movsb
xor
add
mov
pop
int
cmp
sbb
sbb
imul
add
mov
add
push
insb
jno
mov
test
dec
lock
lcall
add
xor
mov
lahf
mov
lahf
loopne
mov
jb
divl
rcr
dec
sbb
jge
into
les
push
mov
jg
test
fdivrs
cmp
push
push
jne
mov
mov
push
and
les
and
lret
mov
inc
cmc
es
pop
test
sub
jmp
movsb
dec
adc
mov
add
inc
add
pop
test
popf
push
adc
in
lock
aad
ds
nop
out
mov
inc
or
xor
cmp
repnz
enter
xor
mov
mov
xchg
or
mov
movsl
adc
xlat
jns
mov
aas
sub
or
test
sub
or
dec
ficoml
inc
pop
lahf
ficoml
out
add
pop
mov
repnz
inc
pop
xor
fisttps
jb
jnp
inc
mov
xchg
push
adc
movsb
adc
or
shlb
xchg
scas
cli
dec
mov
mov
gs
lcall
or
xchg
lret
jbe
push
jno
add
call
es
jmp
filds
jae
mov
push
icebp
push
inc
sbb
xor
enter
cmc
fmul
out
cmp
mov
aas
adc
xor
enter
xchg
mov
mov
mov
fwait
imul
dec
sti
call
mov
daa
pushf
sbb
sahf
add
cmpl
or
pop
call
mov
pop
out
cmp
outsb
cmp
das
mov
pushf
imul
int
mov
sbb
and
mov
fidivrl
outsb
stc
sbb
jmp
cltd
mov
enter
lds
cmp
or
jmp
pusha
aaa
add
icebp
and
jno
imul
mov
fdivrs
sub
xor
mov
sub
faddl
loopne
aaa
push
rcll
imul
cmp
jne
loopne
stos
and
mov
fisubl
enter
out
or
add
mov
clc
or
fdivr
jo
push
gs
mov
inc
cmpsb
xlat
scas
or
mov
ja
decl
dec
push
jp
cwtl
add
out
sub
iret
mov
fwait
jmp
xor
push
js
aam
movsl
lock
imul
clc
push
jo
adc
mov
in
mov
pusha
repz
in
fwait
dec
lods
lds
xchg
mov
sub
test
mov
pop
test
inc
jae
sahf
daa
out
daa
or
ret
cmp
push
loopne
cmp
lcall
stc
mov
xlat
rclb
mov
lret
adc
rolb
jg
xchg
jae
inc
push
into
cmp
cmp
repz
in
js
out
cmp
std
sub
or
or
jecxz
mov
jmp
repz
test
pop
push
mov
inc
or
push
cmp
sub
ficompl
inc
fdivs
mov
dec
mov
sub
lcall
cs
loopne
mov
out
pop
cmp
and
cmp
sbb
push
test
mov
cmp
test
jmp
inc
or
xor
gs
aam
cs
dec
imul
sbb
jnp
mov
mov
fldenv
gs
adc
pop
jnp
jmp
inc
jg
xchg
inc
mov
cmp
stos
cmp
mov
push
fistpll
iret
call
cmp
mov
in
dec
dec
loop
clc
push
pop
pushf
mov
sbb
hlt
outsl
stc
ja
ret
jl
dec
sbb
add
dec
jmp
cmp
xor
mov
xor
xchg
hlt
dec
dec
push
enter
inc
lods
adc
mov
xor
mov
popf
add
push
enter
fstpt
push
sub
scas
xor
inc
dec
adc
lds
push
scas
and
xchg
xchg
mov
push
aas
movsb
xor
addr16
sahf
sbb
jae
lret
fcompl
pop
aam
or
cmp
xor
jg
xor
xchg
mov
push
sbb
lret
test
sbb
sub
fadds
rol
or
jmp
cmp
add
ret
or
cmp
push
fimull
sub
bound
sub
push
enter
out
cmp
jl
mov
in
mov
ljmp
fisubs
cltd
pop
xchg
add
cmp
scas
lcall
aad
rcll
mov
lahf
pop
pop
add
cwtl
call
aad
stc
sub
cmc
jne
scas
add
shlb
mov
push
fstpt
shlb
aaa
xor
sub
data16
push
adc
addr16
pop
dec
adc
jne
in
in
aam
iret
push
jnp
loopne
es
inc
xor
repnz
sarb
rorl
enter
sub
add
sub
mov
or
pop
push
add
push
mov
ljmp
xchg
sahf
adc
and
lcall
inc
jae
ficoml
stos
or
mov
mov
fildl
jnp
xchg
pop
lods
sub
ret
shrb
mov
inc
or
sub
ljmp
add
cmp
call
loopne
imulb
pop
xlat
out
jp
repz
xchg
mov
add
adc
scas
clc
add
mov
divb
mov
mov
fmull
push
ja
mov
enter
push
clc
cmp
dec
xor
mov
xchg
mov
mov
cs
xor
xchg
or
aas
fisttpl
cs
stos
xor
adc
inc
outsb
lea
inc
xchg
das
popa
in
sarl
sub
or
jmp
xchg
xlat
push
add
inc
fwait
sub
aad
xchg
push
jg
mov
push
mov
xor
cwtl
imulb
dec
mov
sub
and
arpl
loopne
xor
adc
test
sub
aas
ss
out
daa
jne
jmp
pop
fmulp
sbb
adc
pop
call
fnstsw
xor
adc
add
push
mov
es
popf
push
or
dec
mov
jl
aad
cmpsb
xchg
sub
sbb
jnp
fsubs
movsb
nop
jno
push
xor
imul
cmp
outsb
push
cmp
push
push
int
adc
xor
dec
mov
xor
rcr
push
xor
cmp
sub
aad
dec
hlt
int3
out
pop
jno
movsl
lahf
fwait
enter
cld
pop
lods
push
in
sarb
sub
in
inc
cmpsl
jmp
pop
test
int
mov
scas
ja
mov
in
pop
mov
pushf
int3
push
mov
jnp
data16
jmp
dec
jecxz
dec
pop
mov
dec
jecxz
lahf
cmc
shrb
enter
jl
or
xor
jns
jo
in
cmp
cmp
mov
jne
aam
adcb
add
jo
sbb
or
rcl
jmp
cmp
loope
mov
out
lock
push
dec
inc
cmp
inc
aaa
outsl
notb
mov
mov
dec
push
fwait
repz
lcall
xor
cli
sbb
mov
clc
push
or
push
push
add
rclb
jnp
mov
ja
stos
fildl
xlat
xchg
les
inc
fimull
nop
adc
pop
arpl
pop
lea
sub
sub
fcoml
loope
mov
fcmove
pop
fimull
xor
lcall
mov
mov
dec
push
dec
repnz
sub
pop
adc
pop
push
add
out
stos
shrb
aaa
sarb
fidivl
pop
xor
xor
cmpsb
mov
ret
pusha
cld
nop
add
push
clc
sub
xchg
in
pop
xchg
inc
pop
cmpl
xlat
ja
mov
stos
cmp
repz
mov
mov
mov
mov
xchg
adc
iret
jmp
push
addr16
lea
lock
xchg
mov
movsl
nop
xor
jbe
test
pop
outsl
mov
lds
push
xor
mov
pushf
addl
xor
mov
je
je
or
add
dec
int3
lcall
push
xor
in
pop
cltd
dec
mov
mov
lret
sub
repz
sarb
testb
push
loope
dec
add
lock
mov
mov
mov
push
in
xchg
scas
clc
idivl
lds
xchg
aas
int
fidivrl
stos
cltd
jmp
loop
hlt
jns
pop
rclb
mov
fucom
mov
add
push
imul
repnz
jnp
clc
cli
ror
ljmp
cli
xor
xchg
dec
iret
sbb
and
pop
and
cmp
fs
sahf
dec
push
cmp
addr16
cmp
popl
and
aas
mov
pop
inc
les
aaa
mov
aas
fs
je
jae
mov
hlt
loopne
push
divl
adc
and
daa
xor
adc
outsb
and
ss
mov
mov
mov
icebp
or
inc
push
daa
stc
out
lcall
mov
pop
sub
or
lods
or
push
cmp
pushf
jno
or
xchg
stos
popa
xor
sub
sub
inc
lock
bswap
mov
subl
out
sarl
mov
les
les
lret
xor
pop
rcl
jge
add
lods
or
addr16
rol
mov
popa
sbb
fldlg2
test
cmp
mov
cmp
adc
push
dec
repnz
mov
js
out
test
push
and
test
xchg
out
int
fwait
enter
or
mov
or
xchg
xor
loopne
jae
xor
faddl
stos
jg
cltd
mov
dec
xor
imul
push
test
dec
enter
mov
mov
loope
mov
nop
add
lret
jp
add
sub
outsb
addr16
dec
push
in
cmpsb
jg
push
xor
cwtl
lods
mov
fisubs
repnz
or
pop
push
lea
or
push
pop
ja
sbb
fs
icebp
clc
sbb
xchg
pop
dec
xor
xor
dec
adc
and
sbb
je
daa
jns
inc
movsb
jecxz
mov
dec
or
into
scas
or
int3
add
mov
pop
xor
jnp
fst
pop
ret
test
cmpsl
aad
les
and
cmpsb
addr16
push
lret
mov
bound
clc
mov
mov
mov
daa
push
xchg
rorl
xchg
cs
cmp
xchg
mov
test
inc
lahf
dec
xlat
xlat
incl
rorl
clc
and
add
inc
jo
enter
lcall
add
jmp
cmpsb
lods
cmc
test
nop
and
xchg
imul
inc
push
cmp
inc
xor
add
stos
cmp
int
aam
aaa
repz
movsb
mov
ss
cmpb
lret
cmp
movsl
pop
lahf
mov
popa
jbe
out
dec
cld
fdivrl
mov
push
cmp
es
int
push
jg
mov
add
stc
pop
jg
pop
out
jae
sbb
fdivrs
insb
dec
add
out
test
sbb
cmpsb
loop
cmp
outsl
and
push
ja
cwtl
stos
or
fcoml
in
cmpsb
ret
nop
push
or
sbb
rolb
dec
sbb
inc
add
aad
insl
movsb
or
xor
mov
repz
mov
xchg
inc
cmp
loopne
xchg
les
push
lahf
jnp
nop
xor
xchg
sub
push
rcrl
push
xor
neg
cmc
testb
inc
sbb
hlt
int
mov
imul
fwait
mov
outsb
mov
or
jnp
or
push
out
cmp
es
test
fdivl
mov
or
clc
and
pop
add
loopne
pushf
dec
xlat
mov
into
sbb
mov
cmp
sbb
cmpsb
sub
test
insb
loope
or
fsubs
add
pop
les
sbb
fstpt
ljmp
dec
lcall
out
fldt
loope
cmc
js
dec
mov
scas
das
testb
or
in
loope
negl
xor
daa
jmp
and
into
cmpsl
jbe
test
ficompl
in
shlb
outsb
adc
xchg
or
cmp
sub
or
test
and
pop
sbb
adc
negl
sbb
xor
push
jge
adc
int
add
test
scas
ret
cli
jl
adc
inc
fcmovnbe
and
jp
popl
pop
sbb
shl
repz
in
sahf
mov
mov
out
ret
add
xchg
sahf
sbb
adc
cmpsb
add
mov
imul
ds
pcmpgtw
roll
int
cmp
cmpsl
iret
mov
mov
lret
jns
repnz
fsubrs
dec
int3
lret
stc
addr16
pop
fadd
cmp
popa
int
bound
pop
jae
jbe
fidivs
push
daa
movsl
mov
pop
movsb
push
iret
xor
mov
sbb
rorl
jmp
sub
das
inc
mov
mov
les
jp
int3
sbb
dec
aam
shrb
jnp
push
sub
lods
and
stos
out
bswap
push
xchg
loope
jno
out
jns
push
jae
push
addb
scas
in
int3
xor
movsb
iret
test
fildll
les
stos
out
aad
jae
mov
pushf
xchg
lea
or
les
imul
pop
dec
ss
dec
outsl
into
add
fwait
mov
repnz
lret
pop
push
pop
movsl
les
pop
mov
fmull
mov
sahf
sbb
adc
xchg
ljmp
mov
shr
and
stos
in
repnz
test
cli
arpl
addr16
pushf
je
dec
repnz
rcrb
test
enter
add
and
xor
and
xor
sub
adc
dec
jle
adc
dec
xor
cmp
out
das
push
pop
push
stc
xor
pop
push
je
test
dec
jl
xchg
xchg
in
sbb
aam
repz
pop
mov
leave
daa
lods
rolb
or
fldlg2
jmp
movsb
imul
in
lods
xor
inc
push
mov
xlat
daa
xor
scas
dec
dec
pushf
dec
stos
dec
sti
mov
jo
mov
stc
lock
pop
push
sub
into
les
daa
fidivrl
stc
loopne
mov
and
sub
pop
into
inc
sub
lds
pop
ljmp
push
fcoml
mov
mov
mov
pop
int3
clc
pop
cmp
inc
sub
sub
jno
rorb
out
sub
pop
scas
lahf
outsb
ljmp
mov
xchg
test
inc
mov
aas
mov
aaa
rcr
testb
or
lahf
addr16
jmp
lock
pushf
fistpl
sub
into
sbb
pop
inc
pmaxub
test
pop
int
sub
pop
jnp
mov
leave
popf
out
and
ja
jbe
push
outsl
xchg
xlat
fistpll
mov
mov
jb
decb
addr16
ret
cmpb
sub
push
arpl
dec
adc
dec
dec
dec
jg
arpl
xor
push
xor
jno
cmp
rolb
shrl
mov
out
ljmp
popf
or
sahf
dec
repz
data16
adc
movl
or
idivl
xchg
lret
sub
sbb
cli
cmp
sahf
repnz
mov
cmp
mov
add
ja
jnp
pushf
mov
push
xor
dec
lods
push
or
push
rorl
ret
out
and
loopne
mull
xor
jg
shr
cmp
dec
mov
and
jnp
sub
fmuls
rorl
mov
pop
cmp
push
into
rolb
mov
cmp
push
jb
pop
cmp
pop
sub
test
push
pop
stos
test
cmp
shlb
lret
sub
leave
and
cld
test
mov
int3
mov
enter
dec
aas
sbb
mov
push
and
sub
push
inc
fistpl
aad
movsb
adcb
in
pushf
sub
iret
lret
pop
xchg
movsb
mov
pop
mov
mov
cmc
hlt
dec
cld
outsl
inc
or
and
xlat
lret
mov
cmp
inc
insb
jae
enter
or
and
dec
addr16
xor
pop
and
and
add
enter
inc
xor
mov
push
aad
xor
movsb
orl
pop
lret
test
dec
sub
mov
mov
jnp
jns
push
fdivrl
and
push
add
dec
mov
aaa
push
mov
xlat
push
sub
es
aam
push
cmpb
push
outsl
push
mov
xor
loopne
cltd
gs
dec
sub
adcl
sub
lock
cmc
call
xchg
xchg
pusha
pop
rclb
mov
test
cmp
fnstcw
sbb
cld
in
pop
sbb
ds
or
or
sub
fidivrl
js
mov
icebp
ret
mov
adc
and
pop
xlat
addr16
cltd
in
test
es
xor
lcall
jnp
mov
dec
rcll
sahf
aad
insb
jno
mov
push
xchg
lcall
or
aam
pushf
test
adc
outsl
int3
pop
jp
or
or
sub
divl
and
and
push
sbb
inc
daa
jns
rol
sbbl
lcall
out
mov
mov
mov
xchg
or
or
xchg
mov
pop
int3
jno
mov
std
adc
adc
icebp
and
sub
scas
mov
push
pop
test
iret
add
mov
add
lahf
std
iret
test
popf
jb
inc
fnstcw
lret
xor
notb
jmp
or
test
push
mov
pop
and
push
lret
daa
iret
aaa
enter
lock
xchg
roll
dec
push
jne
jb
inc
ret
call
or
sub
rcl
jecxz
loopne
ja
in
orb
add
aad
or
out
sarb
push
aam
dec
mov
pusha
popf
call
mov
scas
sbb
xchg
jno
shl
mov
sbb
pop
inc
std
hlt
loop
fucom
inc
mov
leave
arpl
push
aas
push
int3
mov
out
cltd
push
cmp
push
sbb
enter
mov
stos
add
fiadds
je
repz
repnz
fimull
jnp
mov
pop
in
sbb
dec
pop
pop
pop
fldenv
dec
inc
or
sahf
cmp
mov
iret
sub
enter
cltd
cmc
or
les
pop
pushf
mov
mov
addr16
xor
xchg
out
mov
sub
mov
jg
inc
pop
lock
aas
daa
xchg
push
fdiv
dec
mov
jecxz
les
test
mov
stc
dec
adc
pop
push
cmpsb
rorl
mov
jecxz
les
xchg
aad
pushl
add
mov
ret
scas
sub
hlt
out
jnp
push
mov
sarb
test
xor
rorb
js
push
adc
cld
ds
pop
imul
and
mov
dec
scas
fldt
xor
leave
repz
dec
inc
jmp
xor
xchg
jle
lcall
or
jp
cmpsl
sbb
hlt
or
ret
pop
addr16
or
sti
loopne
je
out
fcomip
mov
and
pop
rolb
sbb
cs
inc
mov
cmpl
fiadds
xor
and
dec
in
jmp
loopne
dec
in
mov
cmp
movsb
mov
jecxz
dec
and
into
mov
cmc
cmp
mov
pop
cmpsb
sbb
es
xor
fcomp
out
fwait
addr16
jae
mov
or
out
jp
jo
dec
push
scas
cmpsb
ss
dec
pop
xor
and
inc
fidivrl
inc
stos
mov
lret
lock
pushf
push
add
mov
fildll
or
addr16
out
call
sub
xor
inc
int3
mov
lcall
outsl
dec
aas
and
ljmp
mov
cli
pop
mov
fmuls
andl
pop
pop
xchg
dec
pop
bound
and
insl
fs
das
mov
sbb
xor
inc
fxch
aas
out
fs
loopne
add
or
pop
cltd
dec
mov
cwtl
add
adc
dec
cmp
add
iret
jmp
int
out
push
mov
push
inc
lret
data16
ds
clc
and
dec
imul
popf
in
xchg
fucomip
xor
xchg
mov
mov
rcrb
jge
xor
mov
cli
jb
enter
mov
mov
sub
jbe
sbb
push
push
and
aad
mov
and
stos
insb
adc
sub
mov
fucomp
mov
aam
daa
cmp
ret
jg
out
mov
push
cmc
pop
pop
aaa
push
std
shr
mov
dec
hlt
jnp
add
cs
sbb
stc
pop
jecxz
sub
push
pop
mov
inc
or
cmp
popf
out
sahf
inc
stc
js
pushf
pop
out
pop
mov
test
scas
mov
sbb
dec
ret
cmp
notl
sub
int
popf
add
mov
aam
adc
push
idivb
rolb
dec
mov
sub
dec
xor
in
clc
imulb
add
out
insl
xor
lods
out
cltd
xchg
lret
cli
pop
in
sbb
leave
cmpl
jmp
lret
loopne
xchg
ret
cltd
dec
bound
in
call
sbb
les
shll
cmc
cmp
mov
push
or
jae
jl
push
jnp
dec
mov
stos
xor
mov
cmp
js
push
xlat
fwait
xchg
inc
or
inc
xchg
inc
loop
pushf
adc
inc
sub
outsl
push
add
cmp
dec
add
cmp
and
xlat
cmp
inc
jno
aas
mov
inc
cli
push
sbb
jl
xchg
popf
scas
mov
repnz
scas
int3
xor
pop
imul
add
add
adc
xor
adc
xorl
addr16
inc
xchg
aad
bound
jg
les
fmuls
jns
push
movsb
push
pop
push
xor
adc
push
dec
dec
in
cmp
sub
aam
js
out
clc
jnp
sub
xor
and
test
push
pop
std
fnsetpm(287
in
mov
sub
mov
les
imul
dec
inc
sub
ret
mov
dec
add
add
push
adc
leave
pop
jb
push
and
cmc
mov
sbbl
aaa
and
test
cmp
cs
sbb
repz
std
inc
jg
jl
push
in
xchg
xorl
cld
pop
mov
repnz
cmp
xchg
lahf
sbb
adc
cmp
xor
sub
dec
or
pop
test
sub
cmp
inc
pop
lcall
sub
cmp
sub
mov
mov
inc
out
adc
mov
enter
xor
lock
and
inc
outsl
push
sbb
out
loope
xor
jb
stos
mov
sub
pop
sbb
jne
daa
fistpll
xor
or
xlat
mov
jne
jb
shrl
push
push
push
scas
mov
fnsetpm(287
mov
pop
std
and
cmp
add
incb
adc
aaa
add
or
in
add
jb
fcmovnu
cmovp
jne
sbb
adc
jmp
pusha
insb
hlt
or
mov
pop
fucomp
popa
dec
push
aas
jno
into
cmp
dec
xor
lret
mov
or
fwait
out
test
stos
jmp
jmp
push
mov
or
inc
rol
jecxz
pusha
scas
jg
dec
xchg
mov
in
mov
ds
lcall
dec
sbb
in
test
fidivl
xor
int3
addr16
notl
pop
nop
ficoml
add
iret
dec
jae
lock
or
imul
mov
cmp
cmp
jae
or
out
out
xchg
shll
xchg
je
push
lds
ljmp
xlat
lahf
or
lock
cmp
jno
push
cmp
insl
mov
lret
add
ja
mov
sbb
dec
fnstenv
add
jg
fisttps
sahf
sarl
jbe
fdivr
adc
aad
movsb
mov
xor
or
sub
push
pop
sub
xchg
dec
pmulhuw
imulb
mov
xchg
xchg
dec
test
ret
cmp
sar
negb
dec
loopne
xor
cmpb
xor
jp
adc
mov
mov
loopne
mov
jle
mov
sub
scas
mov
repz
add
lret
and
inc
pop
ja
cmp
test
cwtl
mov
or
test
mov
xchg
fwait
adc
subb
es
sbb
mov
push
pop
cwtl
aad
inc
adc
movsb
push
mov
int
mov
addr16
mov
iret
pop
les
pushf
cmp
repz
fldt
jp
cmc
inc
scas
dec
jle
rcll
repnz
add
adc
lret
inc
imul
scas
fiadds
mov
inc
andl
xor
jmp
mov
inc
jne
pop
mov
ret
mov
mov
js
fs
fwait
sbb
mov
mov
adc
cmpsb
enter
pop
out
in
orb
in
stos
xlat
push
sub
lock
cs
xchg
mov
inc
dec
iret
mov
and
xchg
hlt
mov
loopne
xor
test
notl
jle
ficomps
icebp
lock
mulb
inc
inc
push
inc
jb
adc
add
lahf
add
dec
push
add
ds
mov
lods
push
mov
jnp
or
dec
sub
sbb
dec
ljmp
mov
xchg
push
push
leave
or
mov
cmp
push
les
or
loopne
popa
aad
scas
cmp
mov
enter
sbb
loope
dec
inc
lods
js
mov
inc
cwtl
shrb
rolb
push
inc
outsl
xchg
outsl
or
cwtl
mov
xchg
mov
pop
jp
outsl
in
sub
cmp
xchg
lods
daa
sub
mov
mov
mov
xor
in
cld
cmpsb
sub
lcall
mov
inc
or
enter
mov
into
dec
inc
sub
dec
ficoml
fcmovbe
mov
push
cmp
cmp
and
dec
jp
psrad
lock
addr16
orl
push
mov
dec
adc
insl
xchg
jns
xor
in
xlat
cmp
push
lret
xchg
sbb
add
lahf
xor
int3
add
dec
cld
sub
aad
xchg
in
xor
xchg
enter
in
stc
cmp
xchg
push
sbb
mov
daa
and
aad
pop
or
sbb
sbb
sub
in
push
movsb
fistpl
adc
int
aas
out
xor
outsl
cmp
push
dec
out
stos
psrld
mulb
cmp
enter
test
cmp
push
jge
or
cmp
xlat
inc
dec
xchg
lret
mov
outsl
jb
jg
add
roll
mov
push
ret
xor
iret
xchg
sahf
sub
rcl
and
mov
sbb
adc
adc
hlt
iret
jae
or
sub
mov
lods
dec
mov
ljmp
daa
test
xchg
lds
daa
ja
std
fsubrs
jnp
xor
or
xchg
add
pop
fisubrs
jns
dec
inc
data16
cmp
jle
cld
cwtl
mov
stos
rcrb
orb
int3
sar
inc
dec
adc
sub
test
into
pop
or
popa
or
popa
insl
dec
mov
add
adc
testb
sub
stos
sub
notb
mov
rcl
enter
jmp
lock
cmp
add
ljmp
xchg
sbb
shlb
je
cmp
insl
or
fnstsw
inc
or
dec
sti
mov
mov
mov
mov
sbb
jmp
and
lods
jecxz
jmp
jg
std
lcall
xchg
mov
push
mov
lcall
scas
lret
add
mov
mulb
bound
ds
imul
mov
jo
mov
add
adc
fildl
or
icebp
and
ss
clc
cli
pop
lcall
xor
fs
mov
sbb
mov
xchg
xor
adc
add
xchg
mov
dec
int3
dec
stos
dec
aas
jp
jp
or
sbb
stc
out
cld
xchg
adc
mov
das
mov
xor
add
testb
movsl
pop
stos
mov
mov
aad
mov
push
push
and
push
fidivs
shll
push
clc
sub
adc
pop
imul
lds
sahf
adc
and
sbb
and
dec
fsubr
sbb
iret
enter
sbb
adc
sub
hlt
clc
adc
popa
xor
fs
inc
movsb
sub
inc
int3
imull
inc
js
pushf
xor
es
sbb
les
cmpsb
out
lret
pop
dec
outsb
dec
adc
jbe
sub
and
mov
mov
pusha
xchg
pushf
sbb
lock
pop
test
enter
ficompl
pop
sub
notl
stc
or
pushf
scas
int3
int
pop
out
icebp
stos
fisubl
sbb
xor
out
das
test
in
xor
mov
rorb
mov
dec
inc
mov
push
jnp
pop
jecxz
addr16
mov
cs
aad
iret
xor
fwait
lock
xchg
aam
daa
and
insb
pop
xlat
xchg
rcrb
pop
jmp
int3
jmp
out
ror
call
stc
xlat
mov
add
int3
nop
mov
cmp
test
cmp
popa
push
arpl
cmp
pop
jb
dec
push
sub
cwtl
ja
cmp
dec
enter
xchg
jno
shrb
add
es
scas
in
lcall
push
int3
je
cld
xchg
test
mov
es
xor
fwait
popf
fsubl
mov
negb
dec
cs
fisttps
adc
xchg
in
xor
push
cmpsl
aas
mov
popa
imul
data16
fcompl
jno
inc
dec
fnsave
mov
cltd
xor
and
pop
sahf
and
rorb
cmp
loope
adc
aad
inc
aam
xchg
test
mov
fisttpll
xor
mov
jmp
imul
test
and
cmp
fildl
add
push
int3
jmp
cmp
lds
fnstsw
inc
cmpsb
arpl
cmp
mov
out
call
or
mov
xor
ret
dec
sbb
pop
or
decb
jecxz
aas
orl
or
adc
mov
fwait
roll
test
xchg
pop
or
push
xchg
js
testl
or
mov
test
fisttpl
loope
adc
inc
inc
stos
xor
jo
fwait
bound
dec
mov
cmp
mov
dec
fisttps
sti
nop
xor
cmpl
jmp
pushf
daa
jns
fwait
clc
inc
xor
push
stos
pop
mov
pop
adc
push
aad
dec
cmpb
jno
or
data16
test
lcall
outsb
or
leave
jg
sahf
mov
or
cmc
lret
in
pop
call
mov
jp
decl
xchg
or
pop
ret
pop
cmp
aad
jb
dec
mov
mov
push
cwtl
add
stos
test
mov
rclb
adc
pop
cmpsb
xor
fimull
dec
mov
xchg
mov
pushf
jno
daa
hlt
in
lret
dec
add
and
ficompl
pop
punpcklbw
and
cmp
pop
je
inc
stos
cltd
and
fwait
xor
iret
lahf
xor
js
outsl
xchg
inc
pavgw
jmp
shr
stos
mov
enter
lods
jb
stos
outsl
aad
jb
enter
add
xor
inc
lret
shrl
push
jbe
jne
jmp
sub
or
lods
mov
pop
adc
cld
xchg
cmc
in
popf
testb
or
mov
arpl
dec
sbb
or
arpl
fsubrl
fisttps
cmc
lods
mov
mov
jg
loopne
sub
out
push
rcll
ficoml
montmul
cmpsb
add
fwait
xchg
dec
cld
xchg
repnz
aad
lcall
int
xor
cmc
dec
test
neg
roll
inc
outsl
lods
cmc
in
push
inc
fsubs
inc
lock
insl
adc
jle
scas
or
les
movsb
pop
push
or
jmp
aad
js
push
out
fisttpl
mov
repnz
roll
in
dec
or
fcmovnb
iret
mov
mov
mov
aas
sub
pop
mov
popf
adc
fadd
dec
gs
dec
pop
jmp
xor
mov
in
icebp
sub
daa
xchg
mov
xlat
hlt
xchg
dec
cmp
test
add
leave
fisttpl
sbb
lods
clc
loope
jg
add
xchg
pushf
lods
idivl
repz
fiadds
negl
add
xchg
test
sub
out
pusha
or
incb
dec
sbb
inc
shl
decb
inc
in
cmpsb
ljmp
inc
sbb
xor
repnz
mov
arpl
mov
jecxz
rolb
adc
repnz
push
jb
ja
imul
addb
jnp
icebp
ss
sub
fdivrl
cmp
jle
mov
cmpsl
enter
xchg
mov
dec
adc
xor
or
inc
jae
cmp
jne
inc
arpl
adc
push
cmp
cwtl
or
pop
and
sbb
cmp
int
jnp
mov
jnp
sbb
mov
jge
lcall
xchg
sbb
outsl
xchg
repz
xor
dec
shlb
xlat
cltd
imul
push
cmp
xchg
mov
sbb
es
cmp
xor
mov
rcrb
flds
out
mov
cld
mov
in
jl
out
mov
lahf
ret
push
imul
pop
mov
repnz
jnp
push
push
cltd
sub
pop
jne
cmc
and
pop
mov
lock
fisttpl
xchg
cli
ret
enter
fwait
mov
rcrl
data16
add
in
test
insb
sub
movsb
jnp
aam
sbb
cmp
or
aam
jae
sub
xor
pop
pop
sub
pushf
dec
popf
sbb
inc
fistpl
decl
fldenv
jg
xor
dec
test
test
clc
push
dec
jmp
shr
sbb
xchg
in
cmpsb
sbb
fadds
sub
mov
or
fdivl
cmp
cmpsl
loopne
mov
inc
cld
or
or
xor
cmp
inc
cs
xor
or
rcr
stc
cmpsl
xchg
and
fbld
pop
sub
int
popa
lods
lods
sub
jl
sbb
in
idivl
fstps
addr16
mov
mov
outsl
sbbb
ret
data16
loope
pop
aad
lret
and
lcall
xorl
jb
sbb
mov
mov
mov
jp
in
and
pusha
mov
pop
dec
scas
pop
xor
out
mov
xchg
jmp
sub
jmp
dec
pop
test
sbb
aas
or
dec
mov
movsl
js
sahf
and
pop
jle
push
sti
mov
idivl
push
sti
xchg
jnp
popf
inc
popl
rorb
add
xchg
add
mov
sbb
enter
in
pop
test
dec
out
push
arpl
cmp
outsb
cmpsb
jecxz
movsb
jmp
and
addr16
push
and
in
mov
nop
xor
cmp
test
xor
clc
mov
insb
cmpsb
jbe
or
dec
jb
inc
add
add
jb
lock
testl
cmp
xchg
insb
testb
mov
insl
stc
sbb
inc
je
loop
iret
cs
in
cmp
shl
popa
or
imul
hlt
add
lcall
pop
push
add
push
jg
dec
cs
repnz
fstl
push
mov
or
sbb
test
or
or
enter
fs
pop
dec
mov
repz
icebp
inc
iret
xor
xchg
mov
fnstenv
push
jg
shrb
push
test
mov
gs
sbb
jnp
mov
int3
push
out
out
xchg
or
mov
pop
xchg
push
mov
lret
enter
sbb
xchg
cmp
repz
pushf
or
repz
add
pop
fisttpl
inc
push
insl
sbb
or
movsl
sbb
xor
xchg
jb
sbb
cmpsl
pop
mov
inc
mov
jnp
jne
lock
add
mov
ficompl
fld
cli
in
fsubrl
dec
jecxz
jo
pop
out
aas
adc
in
xor
push
shlb
cmpl
pop
pop
add
dec
mov
aam
ret
dec
in
add
pop
add
and
sahf
icebp
jmp
cmp
push
int3
ds
lret
gs
scas
push
sub
jb
dec
cmp
ljmp
leave
push
xchg
dec
negl
mov
cmpsl
and
jmp
pop
ret
adc
aad
mov
sbb
popf
icebp
cmp
pop
mov
sbb
xchg
repz
hlt
fistpl
inc
lock
cmp
xor
or
xchg
filds
fildl
dec
nop
ds
ss
mov
cmp
jl
pop
and
dec
addr16
xor
aad
mov
fldcw
add
mov
sbb
add
in
ljmp
pop
lret
mov
shl
and
fcomi
in
dec
pop
jg
cmp
dec
mov
adc
ds
test
push
mov
pop
repnz
dec
jmp
sub
shl
lcall
jle
test
stos
push
inc
push
xchg
in
in
rcll
and
cmp
mov
int
pop
enter
dec
push
test
ret
add
push
movsb
aaa
adc
mov
xlat
out
dec
mov
or
test
push
inc
std
or
push
int
pop
sbb
xorl
push
cmp
mov
int3
xchg
jae
push
adc
bnd
and
mov
iret
jb
and
out
cltd
mov
cli
inc
jge
dec
sbb
jge
lret
inc
lock
dec
cmpsb
push
xchg
add
dec
jecxz
ss
or
pop
or
push
icebp
sbbb
mov
xor
lea
lcall
ficoms
adc
push
popa
sub
test
cs
pop
sbb
je
pushf
fdivl
mov
or
pop
pushf
sbb
fdivrs
inc
lcall
mov
in
jne
xlat
xor
les
pop
enter
inc
ljmp
mov
inc
les
decb
add
pop
fnstenv
lock
dec
enter
repz
popa
mov
cwtl
push
sbb
fldlg2
or
out
dec
ljmp
test
out
ja
push
testl
jo
push
xchg
fnstenv
cmpsb
add
push
xchg
or
push
out
mov
shr
jno
insl
cmp
sub
inc
push
sbb
loope
push
push
push
lret
dec
movsl
jle
mov
dec
xchg
in
les
dec
hlt
repnz
dec
cmp
lret
push
outsb
mov
repz
adc
out
lea
aas
push
mov
scas
pop
daa
ja
dec
push
xor
outsb
sbb
mov
loop
pop
sarl
xchg
or
outsl
stos
mov
xor
add
dec
pop
dec
sarb
inc
movsb
mov
mov
jns
imul
xchg
push
pop
inc
mov
lea
push
and
sub
std
subb
and
pop
jne
dec
add
mov
push
sbb
mov
or
dec
stc
iret
addr16
in
sbb
dec
fcompl
scas
cli
stc
data16
divb
dec
fistps
or
into
or
into
out
mov
xchg
xor
dec
fnstenv
in
mov
imulb
pop
hlt
inc
sub
jb
movsb
xor
lret
adc
pop
add
cld
inc
pop
xor
push
pop
adc
or
pop
loope
or
mov
mov
mov
mov
mov
mov
pop
mov
arpl
dec
imul
outsb
sub
pop
push
dec
das
xchg
jmp
push
aam
sub
pushf
dec
push
icebp
sbb
xchg
inc
jl
pop
push
shll
jae
mov
mov
mov
dec
in
mov
imul
enter
fsts
pop
mov
decb
jae
lcall
add
inc
lods
xchg
ljmp
pop
xchg
fcmovne
gs
inc
xchg
movsb
or
push
jge
ss
movsb
fstl
push
pop
fdivrl
gs
imul
or
bound
push
mull
movsb
adc
push
repz
ss
dec
push
push
out
nop
dec
stos
inc
pushf
leave
inc
mov
jecxz
shrl
push
pandn
push
cmc
inc
push
aad
arpl
popa
mov
arpl
inc
ss
scas
fwait
sbb
add
aad
jmp
inc
fcmovnbe
inc
add
add
lds
cmc
or
inc
xlat
fcmovnbe
or
incl
pushf
push
mov
popf
sbb
and
xor
lds
add
lret
aad
js
sbb
scas
xor
mov
dec
cmp
rorl
jb
iret
das
int
cmp
dec
add
cmpsb
in
cli
fldt
sbb
xor
in
jns
in
xchg
add
jp
ds
mov
imul
add
pop
inc
loop
out
and
stos
rcrl
push
in
es
jg
add
or
les
fsubs
cmp
push
nop
mov
mov
dec
cmc
jb
xor
pushf
lret
add
cli
mov
test
insl
fldenv
ljmp
jbe
pop
sti
mov
mov
pushf
stos
movsb
inc
add
call
out
in
ret
jg
sub
sbb
mov
arpl
xor
mov
push
lock
scas
cli
sub
repnz
mov
push
aas
int3
loopne
fcmovnb
xchg
leave
inc
sub
cmpsb
mov
lcall
out
jae
jmp
or
outsb
push
movsb
push
add
jae
adc
hlt
or
pop
subb
pushf
sub
jnp
push
dec
xor
lcall
mov
add
jmp
inc
addr16
aas
xchg
pop
imul
stos
outsl
fnstcw
xor
or
push
fcoml
cmp
or
mov
cwtl
in
dec
xchg
sbb
repnz
adc
sbb
rolb
dec
mov
rolb
in
jo
dec
and
inc
pop
jno
sbbl
cld
lret
mov
jge
pop
pop
aam
xchg
test
dec
bswap
aaa
aam
inc
sbbl
les
fbld
hlt
shll
xchg
jmp
iret
xchg
add
jmp
mov
iret
lock
jne
repz
test
add
and
push
pop
out
inc
out
in
xchg
or
ja
cmp
add
aad
mov
mov
mov
ljmp
movsb
add
icebp
cmp
inc
cmp
xchg
and
in
pop
arpl
mov
inc
mov
mov
repz
xchg
dec
add
push
lock
pop
insl
insb
js
std
xchg
xchg
fildl
int
cmp
in
out
aaa
pop
call
xor
dec
sbb
xchg
shr
add
addl
dec
aad
ja
mov
roll
bound
mov
inc
xlat
arpl
and
or
xor
fistpl
test
enter
incb
lahf
ss
sbb
xor
lock
push
std
les
mov
sub
jmp
cmp
xchg
xchg
sub
dec
insl
lret
xlat
dec
jge
fisttpll
stc
ss
or
jae
jne
cmp
pop
push
add
push
rcrb
cmp
repz
mov
push
inc
cmp
mov
or
fwait
mov
bound
jnp
test
div
test
and
aas
xor
or
xor
mov
cmp
adc
cwtl
int3
arpl
stos
fistl
int
dec
xor
jg
les
lock
and
and
mov
or
fwait
add
mov
in
imul
aam
and
jl
xchg
xchg
mov
inc
push
dec
cmp
std
inc
jnp
mov
mov
imul
in
not
dec
iret
cmp
dec
jecxz
sub
fistpll
push
dec
push
mov
addr16
pop
xor
cmpsb
out
jne
dec
iret
adc
add
adc
ret
in
inc
sub
xchg
les
cmp
imul
stos
mov
or
adc
flds
scas
xchg
fidivrl
pop
jp
lock
loopne
mov
fdivs
ja
push
add
mov
jl
out
js
push
add
cmpsl
int3
add
push
mov
jmp
ja
cmc
cmp
pop
rcl
stos
cmp
std
mov
cmpb
fbstp
lods
fs
mov
stos
cmp
mov
sti
shl
enter
movsl
inc
push
iret
pop
pop
popa
xorb
jns
dec
xor
icebp
jge
inc
rcl
xor
fpatan
fistl
add
lret
jne
sub
mov
push
in
ja
xor
dec
push
lea
mov
xchg
jg
cmp
xor
mov
and
push
out
xchg
repnz
dec
test
ret
cmp
fadds
inc
sbb
inc
jecxz
enter
les
sbb
mov
imul
enter
or
dec
lret
jmp
jns
inc
dec
cmp
lahf
push
mov
jmp
or
dec
popf
sbb
iret
jne
mov
jnp
enter
dec
movsb
jmp
movsl
push
xchg
es
jmp
out
pop
imul
stos
push
fcmove
aad
sarb
mov
pop
adc
mov
lcall
xor
sbb
popa
xor
adc
mov
cwtl
mov
pop
stos
mov
insl
int3
addr16
andb
dec
jae
aam
mov
cmp
and
mov
fldl
jg
sahf
lods
pop
adc
inc
adc
mov
sbb
pop
fildl
xor
pop
aam
aaa
fistpl
and
sub
mov
rorl
jg
push
scas
addb
scas
repz
sub
pop
mov
fldt
mov
pop
mov
cmp
sbb
xor
mov
push
cmp
div
xor
push
addr16
das
cltd
add
int
pop
jno
add
mov
sub
jno
xchg
test
push
ret
in
add
dec
mov
fwait
arpl
cli
jp
pop
repz
dec
jnp
je
xor
mov
push
jns
adc
add
scas
or
mov
cs
rcrl
mov
sahf
clc
insl
mov
push
add
test
mov
mov
rcll
out
xor
and
cmp
cltd
and
dec
cmp
sbb
out
push
fcomip
ss
decl
pop
int
aaa
cmp
cmpsl
aad
cmp
inc
mov
push
mov
mov
push
out
outsb
xchg
add
cmp
addr16
or
cmp
call
rcrl
rcrb
xchg
xor
imul
and
mov
int3
lret
xchg
pop
lahf
dec
test
pop
movsb
arpl
repnz
adc
test
inc
in
fs
ficompl
push
sbb
in
jg
bound
jg
jle
mov
xor
mov
inc
ret
pushfw
lret
aaa
cmpsl
xor
xchg
loopne
inc
aas
dec
xchg
jbe
pop
lahf
xchg
iret
jmp
push
mov
pop
lret
push
and
enter
sahf
pop
fstpt
jns
movsb
push
sub
mov
dec
lock
jp
movsl
popf
xor
pop
stos
adc
sub
inc
xchg
mov
decb
add
push
pop
dec
cmpsb
dec
sub
dec
push
leave
inc
ljmp
enter
adc
or
inc
or
pop
cmp
mov
gs
lahf
dec
jmp
lret
imul
fwait
stos
hlt
push
mov
ja
int
sahf
mov
add
inc
call
xchg
sbb
cmp
pop
pop
nop
mov
scas
nop
xor
out
test
inc
cmp
xor
add
in
out
lock
pop
rcrb
out
adc
xchg
outsl
jp
test
outsl
neg
push
add
das
xor
hlt
arpl
push
dec
mov
cmpsl
sbb
mov
mull
int
loopne
popa
fbld
xchg
jmp
pop
pop
add
inc
pop
cltd
pop
mov
lods
das
dec
call
pop
xchg
cmp
out
mov
cmp
dec
inc
sub
dec
das
adc
cmc
std
sbb
pushf
outsb
dec
sbb
stos
cmp
int3
cmp
dec
add
sub
hlt
xor
je
incl
cld
sub
dec
jp
pop
push
jo
sbb
mov
cmp
dec
outsb
loop
iret
cli
pop
dec
and
out
into
clc
inc
movsb
ficomps
sti
xlat
int
dec
pop
out
sbb
scas
add
adc
or
lahf
adc
in
mov
pop
push
xor
idivl
fistpl
push
add
lods
xchg
jl
push
out
lods
pop
sarl
nop
movsl
or
hlt
push
stos
lea
sub
lahf
mov
ret
dec
jo
rorl
dec
imul
cmp
jae
ds
mov
in
add
ret
jae
mov
scas
shr
xchg
shlb
cmp
add
repz
jecxz
cmp
pop
sbb
cmp
xor
push
dec
pusha
loop
push
pop
push
stos
stc
add
arpl
std
addr16
testb
mov
dec
cwtl
icebp
in
mov
cli
xchg
negb
xor
imull
push
out
jge
in
sahf
or
push
call
hlt
mov
or
xor
jmp
mov
loop
out
mov
dec
xor
ljmp
cli
popl
xchg
stos
mov
clc
filds
inc
das
in
xchg
int3
shrb
jo
mov
add
cmp
push
sahf
xor
inc
or
xor
ficompl
xchg
lock
lret
jno
add
add
jmp
std
mov
sub
add
enter
mov
cmp
adc
jmp
jmp
dec
lcall
jecxz
fldcw
ret
sbb
sbb
pushf
fmul
repz
js
push
ret
out
stos
mov
cmc
xchg
inc
add
and
push
jp
push
add
push
and
mov
sbb
in
and
push
shrb
lods
enter
pusha
out
ss
scas
je
mov
fs
loop
in
lahf
scas
adc
jmp
mov
xor
push
jne
in
cld
aad
loop
inc
int
loopne
push
loopne
mov
sahf
cmp
popf
cmp
or
pop
mov
out
insl
sub
pop
inc
xchg
xor
jnp
mov
dec
out
aad
add
xor
out
lret
push
xchg
imul
neg
and
xchg
inc
mov
or
push
call
adc
insb
xchg
jg
xchg
stc
mov
xlat
mov
iret
gs
xchg
mov
out
fsubp
sbb
or
jno
adc
or
pop
test
imul
xlat
cmc
in
sbb
cmpsl
and
inc
push
dec
mov
fdivs
repz
or
js
and
jo
and
adc
gs
xchg
lret
lock
in
push
add
sub
and
pop
popf
fstpl
pushf
xchg
imul
in
incl
inc
mull
adc
movsb
shlb
aad
mov
arpl
in
jb
xor
jno
cmp
xlat
inc
lcall
sbb
mov
jmp
xchg
dec
lret
sbbb
cmp
mov
adc
or
in
mov
test
push
repz
mov
fadds
into
jmp
or
add
lods
xchg
out
test
add
repnz
test
mov
bswap
nop
popa
movsl
inc
ja
cmpl
dec
daa
mov
into
and
js
rorb
xchg
mov
or
cwtl
fstpt
dec
loope
rorl
rclb
xchg
test
xor
add
lock
mov
fcoms
orb
fbld
adc
gs
cmc
lcall
aam
addb
xlat
push
sub
push
sti
stc
test
jp
out
flds
adc
mov
mov
jb
jl
xlat
repz
nop
movsb
fdivrl
scas
sub
out
cmp
add
push
add
test
mov
xchg
negb
cmp
les
cmp
push
push
mov
xchg
fdivl
inc
lcall
inc
pop
cltd
xchg
movsb
dec
sub
mov
ss
jg
mov
jbe
inc
inc
imul
fstps
xor
mov
push
jge
nop
out
add
sar
and
cmp
addr16
paddq
test
or
das
mov
jmp
inc
ret
sbb
incl
dec
mov
aas
js
js
mov
orl
in
sahf
int3
sub
and
dec
sub
loopne
sti
arpl
cmp
push
out
push
sub
pop
add
cwtl
cmp
outsb
clc
ret
pop
ljmp
dec
loop
repz
jl
repz
nop
cmp
pop
fdiv
scas
mov
and
stos
pop
xchg
mov
rcrb
fmuls
jp
dec
xchg
or
jmp
jmp
inc
dec
push
mov
xor
push
or
mov
stos
inc
fsubl
mov
ret
rorb
dec
gs
outsl
lcall
aaa
fdivl
popf
in
or
ja
xchg
mov
loopne
sbb
dec
dec
add
dec
mov
mov
faddl
push
or
fs
fidivrl
mov
notl
aad
xor
dec
inc
arpl
mov
add
out
push
inc
faddp
xlat
mov
add
fs
xchg
xor
add
jbe
das
clc
jmp
hlt
inc
xchg
jnp
incb
mov
aad
ljmp
pop
arpl
mov
aad
push
aam
sub
lods
enter
cmpsb
imul
pop
outsb
ja
inc
push
pop
mov
cmp
in
jno
cmp
mov
fisttpll
xchg
sub
addr16
mov
pushf
testl
xchg
cmp
aad
mov
mov
adc
jmp
add
sub
push
cmp
mov
mov
push
jno
aad
fcomps
outsl
call
pop
movsb
mov
xchg
mov
test
je
sar
or
dec
sbb
cmp
roll
xchg
mov
push
inc
cmp
adc
ljmp
push
insb
xchg
test
dec
add
cli
push
sub
inc
push
sbb
lock
clc
pop
imul
cli
sbb
mov
jl
movsl
xchg
jo
cld
stos
cmc
jmp
sub
enter
fs
cmp
pop
mov
sbb
rol
pushf
add
ljmp
test
or
jl
cld
cli
and
call
incb
pop
aad
adc
jbe
iret
fidivl
adc
cld
or
enter
cmp
testb
jne
sub
les
and
in
mov
mov
les
or
pop
sub
in
xchg
jg
xlat
movsb
sbb
mov
push
add
cmc
xor
fsubrl
sahf
les
adc
mov
cmp
movsb
imulb
adc
sub
push
pop
jns
lcall
add
hlt
mov
icebp
and
jae
mov
notb
xchg
xor
in
pop
mov
cli
cmc
mov
mov
sub
ret
cmp
adc
dec
cmc
sub
mov
leave
mov
loope
xorb
in
inc
mov
xor
sbb
jo
pop
mov
les
sbb
sahf
stos
mov
dec
pushf
sub
dec
fistps
mov
mov
sbb
sbb
les
in
cmp
in
outsb
sub
pop
xchg
adc
jae
and
pop
js
mov
pushf
sub
sub
in
adc
int3
or
dec
dec
sbb
pop
xchg
dec
sub
inc
mov
mov
adcb
fimull
adc
enter
imul
pop
adc
add
xlat
inc
lret
cmp
cmp
sub
xchg
dec
int
mov
rorb
movsb
divl
pop
aad
stos
jge
push
filds
sbb
pop
insl
mov
jmp
lret
stos
pop
add
pop
add
cmpsb
aad
push
sub
test
in
ds
fdivl
pop
test
fisttpl
lock
incl
cli
out
sbb
or
xchg
mov
rol
loopne
fnstcw
xor
movb
in
cmc
adc
and
xchg
dec
push
xor
xchg
mov
add
pop
sub
test
cmp
ds
pop
lods
adc
aas
into
mov
enter
rcr
sbb
shl
mov
or
movsl
or
jae
or
mov
pop
test
sub
cmp
fistps
xor
daa
mov
movsb
jae
mull
xchg
dec
cmp
lcall
rcrl
adc
push
mov
dec
push
pop
icebp
and
jb
shl
out
ja
add
dec
add
jmp
mov
or
mov
adc
jmp
or
in
xor
sbb
push
push
jl
mov
mov
and
test
or
mov
sarl
add
mov
push
inc
inc
cwtl
dec
outsl
imul
mov
add
fstpt
lcall
fsubl
sbbb
das
lea
loop
bound
inc
or
xchg
xor
add
add
ret
sahf
into
shrl
pop
xor
mov
or
mov
iret
addb
cld
dec
addr16
repz
in
nop
into
mov
pop
loope
shlb
lcall
jns
ljmp
push
pop
shr
out
jo
cmpsb
test
push
fsubs
flds
adc
adc
xchg
bound
sbbb
or
cmp
inc
xchg
ss
cmpsl
dec
and
stc
icebp
cmp
daa
subl
in
pop
scas
inc
xchg
adc
inc
inc
pop
xchg
cmp
jmp
push
push
mov
sub
or
nopl
imul
stos
leave
pushf
lret
fadds
mov
lods
nop
mov
fcmove
push
adc
push
fmull
pop
sahf
imul
mov
jnp
movsb
mov
pushf
mov
xchg
lock
sub
mov
sbb
inc
mov
lret
fwait
inc
push
cmp
or
aas
idivb
or
orl
dec
mov
push
cmp
in
cmp
jnp
push
jg
inc
add
mov
pop
mov
out
imul
adc
mov
das
sbbb
inc
push
stos
sbb
ret
pushf
push
jecxz
movsb
stc
adc
pop
mov
mov
ja
andl
and
add
push
jnp
mov
pop
cld
int
sbb
adc
cld
and
enter
negl
in
add
in
xchg
adc
loop
inc
clc
mov
mov
ja
cmpsb
pop
sbb
jg
sbb
jns
scas
pop
jns
mov
pop
mov
sbb
pop
incb
lcall
jns
push
mov
cmp
mov
jb
jp
adc
ds
jne
xchg
sub
mov
pop
add
sub
mov
fcoml
ret
mov
movsl
push
inc
pushf
mov
daa
in
add
ja
xchg
inc
xchg
js
jmp
mov
xor
add
xchg
shl
shlb
jae
fistl
iret
mov
icebp
inc
jecxz
or
xorb
enter
mov
sbb
pop
inc
lret
lock
sbb
pop
icebp
fwait
and
sub
aam
xchg
cmp
add
aaa
arpl
add
push
sahf
rclb
xor
pop
rolb
jae
scas
cmc
jbe
enter
in
lock
ret
lcall
pop
out
xlat
cli
cmp
loopne
pop
data16
mov
xor
push
movsb
and
mov
fcoms
jno
fwait
insb
pop
or
push
dec
or
loopne
push
mov
dec
pop
push
lret
or
sbbl
mov
inc
pop
jo
lcall
cmc
cli
roll
arpl
jl
inc
add
mov
lret
clc
or
sbb
inc
adc
or
jle
pop
test
lea
add
push
adc
addb
jnp
and
xchg
scas
xchg
mov
out
ficompl
orl
jb
test
jecxz
adc
add
inc
cwtl
push
cmp
xor
or
push
mov
add
jmp
into
fisubl
addl
mov
jmp
push
adc
idiv
jnp
std
fcoms
les
add
push
lret
xor
lock
bound
inc
or
lock
imul
es
icebp
mov
mov
sarb
xchg
inc
fs
je
clc
aam
inc
sub
cmp
aas
mov
test
add
xchg
scas
repnz
frndint
xchg
mov
jge
pusha
sub
push
jp
mov
jecxz
loope
pop
out
jle
dec
ljmp
mov
mov
ret
xlat
inc
rclb
das
aam
adc
xor
aad
cmpsb
rclb
enter
stos
rcrl
ljmp
push
cmp
xchg
aam
mov
cltd
es
imul
xchg
jl
les
dec
les
and
out
adc
in
je
sub
into
and
fmuls
in
std
jne
xchg
insb
inc
scas
lahf
jno
addr16
jo
cmp
jns
jns
ljmp
xor
mov
cmp
lcall
sub
aam
mov
in
enter
jnp
xchg
xor
sub
cltd
imul
jns
xor
cmp
jle
cmp
ret
cli
inc
ljmp
push
cmp
inc
mov
insl
repz
xchg
fdivrl
add
aad
push
out
into
mov
shr
jb
movsb
mov
and
mov
rcrl
push
ja
jns
mov
jp
pop
aad
pushf
mov
lods
repnz
bound
jle
and
cmp
cmp
lcall
mov
or
push
enter
fldenv
jecxz
push
jp
les
jp
icebp
gs
jnp
aad
sarb
or
lock
call
pop
outsb
pop
arpl
xchg
cs
aad
lods
cmc
dec
jmp
or
hlt
jp
sahf
sbb
nop
movsb
xchg
test
inc
movsb
adc
xor
mov
mov
jp
loope
fs
jp
fisubl
lock
mov
vmread
cmpl
out
int3
cmp
xor
push
int
cmp
cmp
add
fsub
jne
jmp
xor
xchg
add
or
test
inc
and
std
es
jg
sub
call
mov
fcmovbe
xchg
xchg
les
jecxz
mov
sbb
outsb
rcrb
jmp
sub
scas
cmp
scas
roll
xor
stos
cmp
mov
sbb
dec
sub
out
pop
dec
adc
cmp
adc
arpl
jnp
sub
test
repz
jmp
or
mov
or
clc
test
test
sbb
aaa
movsb
cltd
aad
pop
call
lahf
in
outsb
out
stc
mov
clc
push
mov
mov
add
xchg
out
enter
mov
fbstp
jl
xchg
lcall
or
xchg
add
pop
outsb
pop
mov
ret
dec
mov
jmp
mov
xor
fisttpll
test
inc
aas
mov
cmpsb
inc
push
lcall
popf
sbb
test
or
pop
lcall
push
cmp
decb
popf
bound
jbe
push
adc
push
ds
scas
gs
xor
mov
inc
xor
inc
inc
inc
push
mov
sub
popf
fiadds
loope
shr
insl
sbb
jl
aad
je
xchg
mov
int3
push
push
fiadds
jne
int
inc
cmpsb
jnp
push
ss
and
xchg
rol
stos
iret
loop
cmp
aaa
rolb
into
and
pop
push
sub
fstps
pushf
mov
popa
add
mov
or
lahf
push
repz
pop
or
hlt
mov
pusha
int
inc
movsl
adcl
pop
int
std
sub
push
xor
or
mov
add
pop
in
xchg
and
fsubr
xchg
sub
cs
cmp
add
mov
lret
pop
stos
in
pop
fwait
lock
addr16
insl
push
jmp
or
mov
test
test
imul
lds
adc
and
cmp
and
mov
ljmp
movsl
cmp
xchg
push
dec
loopne
mulb
push
aam
pop
sahf
or
jnp
xor
mov
shlb
dec
into
aas
xor
jp
jmp
lods
fnstcw
loop
sbb
mov
fucomip
mov
jmp
xor
push
and
cld
sbb
dec
mov
cld
scas
push
dec
sbb
cltd
in
add
test
leave
mov
inc
jecxz
cmp
fdivs
sbb
and
mov
and
loope
inc
test
sub
bound
jg
lret
test
mov
mov
dec
sbb
imul
or
jle
jo
mov
lods
fdivr
mov
sbb
add
xor
mov
mov
inc
iret
xor
and
sub
dec
aam
inc
jae
mov
sbb
sbb
imul
outsl
cmp
add
cmp
mov
mov
int
dec
pop
push
in
data16
xchg
shl
pop
pop
test
xchg
push
and
and
mov
loope
sub
adc
je
testl
lahf
stos
or
insl
cmpsl
aaa
xchg
push
xor
xchg
roll
xchg
fstps
sub
mov
dec
iret
jae
int
ljmp
fsubrs
ja
mov
cmp
jnp
outsl
sub
aas
add
mov
push
popf
iret
pop
xchg
loopne
sub
and
dec
lcall
pop
daa
adc
fists
rolb
jg
adc
push
cmp
adc
imul
imul
scas
bswap
cmc
outsl
dec
out
arpl
sbb
insl
push
fsubl
jmp
cmpb
dec
aad
arpl
int3
sahf
mov
jl
mov
jmp
sbb
sub
pushf
in
inc
lods
dec
repnz
or
addr16
mov
mov
jo
js
in
inc
dec
pop
jnp
loope
push
lods
adc
lock
mov
fldt
cmp
js
shl
ja
and
xlat
dec
inc
mov
imul
or
movsl
inc
and
not
cmp
scas
fdivr
push
sub
ret
xor
sub
cmpsl
fwait
sub
test
jmp
mov
aad
fildll
sub
addb
iret
imul
xchg
xchg
dec
sar
mov
icebp
les
lret
mov
in
inc
dec
jle
push
shrl
fs
sub
add
mov
repnz
scas
xor
xor
lcall
dec
imul
sbb
or
xchg
jae
push
dec
adc
push
cmp
imul
jne
mov
push
xchg
cmp
sahf
pop
out
inc
sub
cmp
jno
fwait
sbb
xor
pop
rcl
mov
repnz
mov
dec
icebp
movsb
dec
negl
push
cmpsl
les
cmc
mov
push
sub
dec
into
pop
imul
test
cltd
cmc
fisttpl
daa
mov
push
repnz
stc
push
lret
fmuls
inc
mov
mov
xor
popa
push
mov
iret
enter
stos
xor
pop
inc
iret
mov
pop
mov
lcall
push
fsub
xchg
int3
sub
icebp
cmp
or
xor
sbb
and
shll
add
sbbl
pop
adc
aam
cmp
lea
jae
lahf
xchg
cmc
mov
and
xor
fsubrs
clc
dec
fnstcw
popf
test
add
sbb
sub
cs
sbb
fdivl
jmp
in
add
sbb
adc
out
outsl
enter
lds
inc
mov
cmp
push
mov
mov
inc
cmp
or
sahf
int
dec
mov
repz
stos
sarl
xchg
push
sub
outsl
fimull
jp
jno
loop
inc
xchg
lcall
lods
in
imul
lea
sets
fcmovnb
out
cmp
jns
sbb
cltd
mov
int3
jg
push
sbb
pop
ja
pop
add
loopne
sbbb
cmc
lcall
movsl
and
dec
repnz
in
in
inc
iret
dec
mov
push
ret
pop
shll
leave
int
enter
add
xchg
mov
cmp
dec
mov
cmp
adc
test
jns
mov
cmc
js
inc
cmp
xchg
sahf
shlb
add
push
cmpsb
sbb
cmp
cmpsl
loopne
dec
je
movsb
sub
movsl
pop
xor
mov
movsl
iret
repz
push
mov
mov
mov
jg
sbb
sub
lcall
cmp
test
xor
stc
jbe
mov
mov
negb
int
xor
fidivs
aam
sub
mov
inc
les
push
lret
rorb
add
leave
cltd
sbb
fbstp
sub
out
xchg
mov
mov
pop
lods
sbb
stos
mov
fadd
cwtl
int
daa
int3
rcll
clc
pop
loope
jge,pt
mov
sbb
shll
and
imul
jecxz
dec
cmc
sub
push
xchg
xlat
dec
ljmp
pop
cmp
push
push
mov
fdivrl
cmp
rcll
jecxz
dec
shrl
lahf
test
or
pop
or
sub
popl
push
mov
loopne
adc
mov
mov
lock
add
jae
push
sub
dec
inc
repnz
stos
loopne
inc
xor
sub
sub
or
out
movsb
or
inc
adc
nop
mov
ret
cmp
shrl
repnz
inc
rcrl
dec
hlt
fadds
add
data16
das
popf
mov
imul
pop
cmp
cmpsb
push
push
shll
fwait
xchg
sub
ret
das
xor
popf
sbbb
cmp
sahf
rolb
dec
mov
sbb
push
test
loopne
push
dec
jnp
clc
ror
and
iret
test
inc
call
sti
push
int
fwait
es
jo
adc
jmp
scas
loop
sub
imul
rcrl
push
das
lret
sub
aam
jp
cli
stos
xchg
subl
addl
ss
cmpsl
inc
testb
push
jno
jnp
pop
cli
xchg
and
insl
and
add
sub
pop
nop
int3
xor
pop
pop
imul
jno
jnp
inc
arpl
out
dec
rol
rcl
xor
sbb
push
notl
mov
dec
add
adc
xor
es
cmpl
sbb
cmp
pop
es
inc
sbb
add
test
pop
mov
pop
mov
cmpl
dec
jns
in
jle
jno
sbb
lcall
fcmove
push
push
jg
mov
xchg
bound
lcall
mov
js
xor
loop
cmc
push
lea
xor
dec
ja
cld
jmp
inc
imul
cmp
aaa
xchg
mov
sub
and
mov
fistpl
wbinvd
lahf
sub
sbb
add
fisttpl
loopne
sub
pop
ds
mov
nop
sarb
out
emms
mov
sbb
adc
adc
mov
sarl
lcall
clc
sbb
sub
repz
test
sahf
cli
push
loopne
test
or
push
fcmovu
cmp
mov
jecxz
jmp
mov
sub
in
add
mov
jmp
sbb
mov
rorl
jecxz
dec
cmc
or
outsb
push
mov
add
test
dec
and
repz
sub
jno
notl
in
testl
push
ljmp
rcrl
add
jecxz
mov
outsb
aaa
fcompl
mov
xchg
jg
addr16
mov
jae
je
sub
mov
test
in
notb
push
icebp
add
mov
arpl
inc
outsl
xchg
jg
inc
lret
enter
in
testl
cmp
jle
andb
out
xchg
cli
cmp
in
shr
cmp
dec
dec
xor
cmp
out
out
lock
sbb
cmp
aam
mov
adc
aad
je
dec
ljmp
adc
imul
dec
dec
or
lcall
push
sbb
sub
fs
xor
xor
jp
cmp
mov
xchg
repz
dec
fs
cltd
and
xor
sub
in
jecxz
neg
fs
mov
call
iret
notb
rol
lock
outsb
mov
popl
fs
or
add
test
or
sub
adc
adc
xlat
sahf
aaa
loope
jnp
pop
mov
and
xrelease
cmp
inc
push
es
pop
xchg
jae
int
adc
mov
incb
or
call
push
outsb
ds
xor
adc
mov
sahf
icebp
aaa
pop
repnz
sub
mov
test
inc
or
loope
icebp
daa
test
pop
mov
mov
fimull
adc
in
inc
scas
ja
ret
push
sbb
outsb
fwait
icebp
mov
stos
out
or
xor
call
dec
fcmovu
mov
stc
xchg
out
testb
ss
in
dec
movsb
dec
in
out
pop
sub
sahf
dec
add
sub
xlat
pop
mov
add
push
dec
test
aas
xor
mov
lock
xor
pop
iret
es
inc
mov
push
xor
cs
lds
xor
cs
and
shlb
rolb
jne
imul
inc
ret
and
cmp
clc
sbb
lea
pop
popf
sarb
scas
pop
pop
inc
add
popa
mov
jp
cmpsb
sub
cmc
push
cmp
test
mov
pusha
les
sub
push
sub
sub
pop
cmp
stc
mov
mov
and
mov
xchg
push
andb
pop
fnstcw
shrl
jg
push
xor
xor
lcall
pop
jl
adc
cmp
adc
out
xchg
movsb
in
mov
roll
mov
and
stc
cmpxchg
push
mov
pushf
out
sbb
cmpsb
jo
ret
jb
and
dec
test
adc
dec
lahf
cmpsl
cmp
fsts
pushf
loop
dec
test
push
dec
neg
rclb
aaa
xchg
rclb
lea
mov
mov
fcmovb
pusha
test
dec
mov
or
jnp
xchg
sub
mov
scas
jb
push
scas
cli
jb
inc
in
push
sub
mov
lcall
add
and
push
mov
ds
pop
cwtl
lret
cmp
out
test
sub
cltd
or
push
sub
cltd
outsb
jg
inc
xor
pop
push
push
and
loopne
aad
mov
ljmp
in
and
mov
pop
arpl
jo
jnp
loopne
es
cmp
mov
sbb
shrb
ja
dec
fistps
mov
mul
stc
leave
outsl
fiadds
push
mov
jg
mov
shrl
dec
add
add
pushf
sbb
loopne
lret
dec
push
fwait
test
mov
lea
shlb
add
ss
xor
cmp
fsubs
add
movsb
je,pt
sbb
add
xchg
or
pop
call
mov
xorl
pop
pop
jge
push
lods
in
sbb
add
lea
push
xchg
in
sbb
rcll
jmp
dec
pop
stos
dec
mov
or
add
repnz
inc
xchg
sub
sub
ljmp
shlb
loope
dec
movsl
add
idivb
pop
rcrl
fdiv
jmp
mov
mov
mov
test
in
mov
xchg
pop
es
mov
add
sbb
out
out
lds
inc
adc
xor
pop
or
pop
lcall
fbld
mov
enter
inc
xor
jb
addr16
inc
aad
fucomip
std
dec
int3
in
test
mov
push
in
es
adc
and
jbe
loope
cmpsb
std
lock
sub
xchg
outsl
jp
push
push
ja
js
pushl
adc
pop
sbb
addb
loopne
and
jl
xor
push
xchg
push
add
shlb
sub
lahf
mov
shr
pusha
mov
lcall
aad
push
push
sbb
sub
pop
or
aaa
lcall
xchg
add
fistpl
sarb
pop
lret
sbb
iret
pop
shll
stos
adc
push
fsub
and
fnstcw
fsubr
cmp
fcomp
xor
xchg
repnz
mov
inc
mov
jae
lods
repz
push
cmp
rcll
xor
jne
sarb
push
bnd
inc
sub
xlat
xor
loop
pop
lret
scas
lea
pop
dec
mov
dec
aam
lret
cmp
clc
sbbl
adc
sbb
xchg
popf
or
repz
fisttps
jmp
popf
call
gs
mov
jmp
imulb
les
das
dec
in
dec
pushf
orb
xchg
movsb
push
ds
aas
mov
enter
rorb
mov
fildl
xchg
jg
sbb
inc
cmp
jb
dec
and
pop
fcmovne
in
mov
popf
ljmp
cmp
add
mov
cs
in
xchg
sub
lea
xchg
jne
adc
pop
cli
sub
mov
fwait
aam
adc
inc
push
movsl
shl
xor
lret
cwtl
out
jge
sub
cmp
imull
sbb
jno
adc
mov
cli
aam
sub
into
out
mov
and
clc
dec
sbb
insl
js
jmp
aad
fldl
lahf
daa
iret
lods
mov
pop
jo
dec
daa
mov
pop
jnp
sub
in
pushf
add
gs
jg
fcoml
push
loopne
mov
sbb
popf
cmp
add
xchg
jb
roll
insl
dec
aas
mulb
movsl
cvtdq2ps
push
out
cmp
mov
xchg
or
push
hlt
int
scas
arpl
inc
icebp
xchg
andb
in
cmp
adc
pop
lock
dec
enter
imul
add
or
dec
dec
out
cmpsb
aam
fsubl
in
sub
adc
les
addr16
dec
push
repz
dec
cmp
into
ficompl
out
out
into
fdivl
imul
sub
fcoml
mov
sub
enter
fadd
sahf
imul
ja
mov
cmp
mov
sub
movb
push
jns
enter
fisubl
out
icebp
xchg
inc
and
xor
xchg
xchg
pop
cmp
imul
lret
ret
xchg
mov
hlt
cltd
test
or
aas
stc
adc
inc
lods
jg
mov
mov
or
aam
mov
cmpsl
les
jb
push
in
into
push
outsb
or
sub
pop
hlt
addr16
inc
sub
adc
stos
into
mov
testb
paddq
add
xchg
mov
pushf
jns
push
rorb
cmp
mov
dec
aas
dec
sbb
cmc
cmpsb
lock
shlb
movsl
in
pop
jmp
xchg
jl
dec
adc
xchg
add
or
test
mov
icebp
xor
xlat
sbb
dec
add
adc
stos
push
iret
push
or
and
fidivrs
push
cmpb
sbb
xor
dec
test
jp
cld
test
xor
inc
aam
pop
xchg
rcrb
add
pushf
ja
in
push
jg
pop
loopne
inc
sbb
stc
in
xrelease
add
push
rcrl
pop
add
mov
cmc
gs
dec
inc
cmp
mov
sahf
or
test
mov
hlt
mov
fstpl
mov
fwait
pop
dec
rcrl
les
aad
aad
aam
shl
xor
push
sub
dec
in
ja
ret
in
mov
test
mov
mov
dec
icebp
pushf
movsb
cmp
dec
jg
or
out
shl
sub
popa
mov
mov
enter
xlat
jnp
jns
shl
mov
outsl
push
sbb
add
lret
dec
mov
mov
ret
xor
add
cmpl
addl
out
xchg
pop
aas
xchg
iret
mov
dec
xchg
cmpsb
loope
sub
sbb
jmp
sub
jne
pop
pop
xor
cmp
xor
jae
aad
movsb
lds
jno
arpl
test
imul
mov
imul
sbb
pusha
mov
inc
dec
stos
push
or
fdiv
and
jne,pn
jae
out
les
inc
jae
pop
int3
mov
or
pop
add
outsl
pop
add
pop
cmp
sub
xor
pop
pop
jl
pop
aad
movsl
push
pop
xchg
shlb
stc
hlt
push
adc
outsb
cwtl
sbb
lock
aad
out
jae
mov
aad
cmc
testl
repnz
jge
pop
lea
mov
fmuls
stc
mov
jnp
adc
mov
in
sahf
cmp
test
push
mov
sub
mov
scas
mov
adc
arpl
loope
cwtl
xor
sbb
int
fildll
mov
add
out
xor
cmp
jno
sbbb
pop
inc
test
push
aad
lcall
push
lds
xchg
cmp
xor
loopne
fisttpl
xchg
mov
pop
pushf
dec
push
repz
jmp
ljmp
ds
fcomip
les
push
dec
fcom
sbb
movsb
sbb
sub
loopne
sub
hlt
aad
add
aaa
shrl
movsl
push
jmp
fistl
rcll
push
pop
loopne
bound
jno
pop
xchg
pop
or
add
dec
cmpsb
lahf
enter
xchg
or
mov
mov
dec
mov
nop
repnz
dec
cmp
or
mov
pusha
jnp
lock
dec
imulb
ja
mov
leave
pop
xchg
adc
mov
into
push
orl
add
cld
out
stc
lock
xchg
xchg
xor
fcomip
sub
mul
or
clc
xor
push
lods
repnz
aas
sub
cld
xor
mov
add
rcrl
test
xchg
cmp
mov
add
push
sahf
mov
inc
jne
cmp
xchg
out
push
addr16
leave
decl
jno
sti
and
fcoml
fsubrl
inc
stos
dec
ss
jge
rclb
jo
in
or
mov
inc
mov
pop
jae
ficoml
jns
int
popf
mov
mov
pop
mov
xchg
xor
xchg
pop
dec
lea
push
or
and
mov
pop
rcr
stos
dec
testb
or
jnp
fidivs
fwait
mul
mov
adc
imul
dec
add
rcrb
aas
outsb
lods
inc
fs
stos
xchg
mov
inc
shlb
add
dec
fidivrl
enter
or
xor
rcl
xchg
mov
js
or
xor
dec
push
lretw
or
add
and
loopne
jnp
fidivl
aam
sub
test
hlt
testl
gs
stos
mov
xchg
mov
sub
sbb
xlat
imul
and
scas
fcmovb
insb
xor
pop
jns
cmp
sbb
cltd
aam
sub
xor
imul
sub
repnz
test
adc
lret
dec
cmp
push
int3
jle
les
push
popa
push
cld
enter
shrl
dec
mov
movb
inc
adc
jns
out
mov
dec
sub
scas
hlt
inc
sub
add
in
sub
xchg
inc
loopne
fs
jae
nopl
cmc
add
mov
in
xchg
mov
dec
or
pop
cmpsl
dec
lahf
mov
rorb
jo
cmp
je
rep
in
ror
stos
and
aam
cmp
pushf
lahf
xor
sbb
imul
dec
xchg
in
mov
les
repz
pop
xchg
daa
sub
ret
pop
add
cmp
mov
test
dec
insl
inc
fnstcw
inc
in
jnp
js
adc
mov
inc
inc
mov
adc
int
pusha
fimuls
inc
jae
cmp
mov
push
ja
mov
test
loopne
lods
dec
in
aad
xlat
enter
stc
adc
sub
push
or
pusha
jmp
or
std
push
test
insb
mov
clc
mov
push
adc
pop
int
cld
push
cltd
test
jb
cltd
and
mov
mov
dec
inc
bnd
or
cwtl
stos
aas
divl
xor
xchg
iret
xchg
dec
int3
out
inc
xor
mov
lds
sub
or
sub
ficomps
lods
sbb
jmp
add
loop
or
insl
popf
xor
xor
or
pop
and
mov
sub
popf
and
cmp
movsb
ss
adc
adc
mov
iret
ja
leave
fsubrl
test
das
sbb
sub
or
lcall
test
lret
test
loopne
popf
int3
add
lcall
das
je,pt
cltd
xor
mov
push
sub
cmpsl
dec
or
push
pop
fstpt
or
cmp
stos
xchg
pop
lret
jno
fcomip
dec
mov
test
sarl
pop
mov
xlat
les
xor
push
popa
data16
mov
loop
push
inc
je
outsb
push
adc
mov
cmp
nop
lret
sti
pushf
js
shrl
mov
sahf
sbb
ja
dec
jb
jae
es
in
int3
add
lock
repnz
adc
push
daa
inc
jo
or
and
add
addr16
cmpsb
aad
jae
sbb
adc
icebp
dec
sbb
ss
push
inc
mov
pop
cmp
lret
subl
mov
aam
xor
mov
aas
aam
cmp
shrl
stos
pusha
cmpsb
xor
enter
loop
test
shlb
lea
outsl
xor
mov
or
and
movsb
aaa
fs
inc
sbb
and
inc
clc
cmp
xchg
inc
sub
add
shrb
lahf
push
orl
int
rcr
not
sbb
mov
fucompp
das
dec
rol
sub
repz
lcall
sbb
xchg
out
addr16
push
out
mov
sti
mov
jecxz
ds
and
jmp
in
fsubrs
add
stos
lret
fisttpl
jmp
imul
mov
lret
movsl
add
cmc
imul
xchg
pop
add
mov
ja
or
fcoms
into
dec
test
lea
push
pop
out
inc
and
scas
enter
sub
mov
mov
in
push
sub
mov
mov
hlt
jmp
jecxz
ret
and
cmp
repnz
cltd
stc
inc
mov
fistpll
lock
sub
out
sbb
test
jg
aad
or
push
and
adc
cmpsb
pop
xor
dec
outsl
stos
jo
sub
or
adc
pop
pop
pop
test
pop
das
xor
adc
iret
xor
adc
jp
fldcw
rcll
ret
sbb
lds
call
mov
into
jo
pop
add
mov
nop
fs
mov
mov
lea
xchg
jnp
shlb
mov
push
mov
sbb
and
je
push
jnp
nop
jno
cmp
bndldx
push
fstps
iret
xchg
and
lock
or
ja
cmp
sbb
mov
push
xor
jns
movsb
sbb
cmp
dec
jno
xchg
pusha
aad
nop
push
in
xchg
les
cltd
lds
test
loope
adc
dec
or
xor
sbb
test
outsb
cli
jg
sti
and
adc
cmp
push
lret
push
cmc
insl
stc
pop
repnz
scas
pusha
ja
int
pushl
sbb
sub
test
mov
add
mov
mov
sbb
aas
or
mov
mov
cmp
aam
das
ficompl
ficompl
mov
cmp
xchg
movsl
inc
jl
fiadds
lcall
fcoms
fcoml
addr16
add
call
inc
mov
aad
mov
xchg
or
add
pop
fldcw
sbb
inc
cmpsl
testl
mov
dec
xor
push
push
dec
xor
mov
cmp
adc
mov
mov
aaa
test
divb
call
mov
xchg
sbb
adc
or
xor
jmp
in
add
push
cwtl
xor
je
adc
sub
adc
adc
cmpl
out
or
jl
repnz
pop
xlat
out
fidivrs
icebp
movsb
xor
daa
mov
mov
js
push
sbb
mov
std
mov
mov
aaa
pop
cmp
loopne
jmp
jns
push
popa
adc
xor
loope
jae
and
pop
sub
fiadds
sbb
stc
adc
sub
mov
cmp
daa
lods
rorl
dec
xor
inc
push
scas
clc
outsb
push
fsub
xor
mov
dec
push
pop
lret
repz
mov
xorb
pop
xchg
aad
int
or
jo
dec
xlat
test
movsl
cmp
xchg
sbb
arpl
enter
inc
cs
jno
fldenv
jge
sbb
inc
movsl
dec
shrb
push
dec
add
enter
and
in
insb
sub
cmp
sub
leave
aam
mov
push
inc
andl
mov
cmp
testb
mov
push
add
add
and
test
jo
mov
ss
or
fadds
xor
ret
imul
fcomp
aaa
je
push
frstor
push
int3
dec
or
jae
outsl
dec
add
shlb
fsubrs
or
outsl
int
sub
and
lret
lret
lcall
adc
mov
or
orb
sarl
xor
jae
stos
cmp
or
jae
adc
or
lcall
xchg
cmp
cmp
inc
inc
aad
or
mov
add
clc
iret
hlt
jmp
cmpl
xor
pop
mov
and
cmp
or
push
mov
aad
mov
shrl
rcr
and
add
out
popf
fldenv
imul
test
test
push
mov
or
mov
iret
mov
mov
jns
movsl
icebp
cmp
out
fstpt
punpckhbw
adc
dec
mov
std
cmp
jb
dec
scas
mov
decl
xchg
mov
jmp
sbb
mov
mov
out
and
aad
add
sbb
mov
mov
fildl
les
orb
or
cmp
fisttps
popl
addr16
and
xchg
mov
movsl
test
les
filds
xor
dec
pop
cmp
pop
lcall
sub
pop
pop
sub
fldt
xor
cmp
add
sbb
sbb
mov
cmc
push
xor
outsl
jp
movsb
imul
clc
je
sti
jne
or
push
mov
sbb
pop
xor
sbb
jo
add
pusha
int3
jne
xchg
add
mov
pushf
in
les
rorb
movsl
pop
mov
jmp
movsl
dec
cmp
jmp
jno
cmp
cmp
in
inc
fucomi
pop
or
mov
dec
cltd
aas
call
stc
pusha
inc
cmp
loope
out
sbb
xor
das
mov
dec
sbb
pop
jmp
dec
pop
repnz
ds
mov
es
mov
out
ljmp
add
dec
push
sub
sti
shrb
sbb
clc
gs
lcall
lret
or
push
cmc
mov
push
mov
jp
scas
cli
ja
pop
mov
jge
lret
pop
and
sub
and
xor
into
sarb
mov
aad
mov
add
or
fdivrs
sbb
or
or
sbb
fdivrl
sti
cwtl
sbb
lret
cmp
push
pop
ds
rclb
insb
lret
xor
ds
mov
ja
jg
mov
push
pop
leave
bound
mov
imul
aam
rol
pop
into
mov
push
mov
inc
jo
sub
jb
dec
sbb
cltd
lods
test
jno
arpl
pop
ret
aam
lods
rcrb
dec
jb
into
mov
or
cld
pop
clc
mov
xor
out
fimull
ds
rorb
push
fcmovnbe
loope
pop
dec
subl
pop
ucomiss
popl
jns
sbb
in
mov
loopne
pop
roll
dec
pop
cmp
dec
push
imul
cli
in
pop
mov
sub
iret
enter
aam
xor
sahf
mov
sub
lea
jmp
hlt
inc
inc
push
and
push
outsl
call
out
pop
cmp
int3
sahf
fcomip
les
aaa
in
fadds
fimull
push
jg
adcb
fisubrl
pop
inc
mov
add
lret
cmp
fcoms
and
mov
imul
aad
xchg
xor
dec
call
mov
xchg
jecxz
out
mulb
xor
mov
cmp
sub
clc
xchg
push
or
push
je
mov
imul
in
add
cmp
xor
jo
lds
sti
in
mov
fcmovne
mov
push
bound
jle
sub
pusha
sar
push
add
pop
dec
add
xor
shrl
jmp
add
sub
outsl
insb
imul
and
dec
test
scas
cmpl
or
mov
stos
pop
lock
cs
dec
jb
ds
into
mov
aam
inc
rorl
ret
mov
cmc
cmp
fs
mov
popf
mov
or
out
pop
aaa
lcall
sub
xor
xchg
enter
or
in
xor
pushf
gs
das
std
aad
std
cs
dec
leave
sub
sub
inc
repnz
mov
cwtl
aad
leave
jg
pushf
fstp
mov
aas
pop
jns
movsb
push
cmpsl
jns
jo
les
mov
fmuls
mov
add
add
dec
push
jmp
pop
push
or
cmp
pop
cmp
sbb
mov
cmpsb
push
push
out
pop
out
jnp
mov
xchg
jge
cmp
dec
idiv
cmpsl
out
int
das
repnz
and
push
enter
add
jecxz
push
push
roll
jmp
sbb
popf
lret
decb
lea
stos
fimuls
dec
or
in
in
xchg
bound
mov
aaa
fmulp
xchg
int
sbb
fwait
enter
mov
cmc
jbe
xor
sahf
jne
ja
pushf
push
je
cmc
sahf
lds
aam
cmpsl
fdivrl
or
ja
inc
or
lret
shll
fsubrl
cld
mov
dec
aad
push
jnp
xor
mulb
loop
mov
xchg
xor
pop
mov
adc
xchg
sbb
out
pop
ret
bound
xor
pavgb
sbb
push
cmp
xor
cmpsb
and
ds
mov
jnp
push
stos
aad
mov
push
push
mov
jecxz
sahf
test
cmc
ljmp
fidivs
xor
push
loop
cmp
pop
data16
mov
mov
in
mov
xor
cwtl
and
dec
jecxz
enter
xor
cmp
or
lods
insb
or
lock
push
xor
add
push
mov
mov
xchg
daa
cmp
fistpl
mov
xor
ret
out
movsl
in
lcall
add
nop
cwtl
jnp
lcall
cmp
mov
xor
ficoml
daa
lret
insl
in
mov
mov
inc
popf
or
mov
adc
fsubs
xor
negl
and
xchg
popf
mov
sub
dec
push
shll
jno
stc
mov
pusha
mov
out
pop
xchg
movsb
mov
fcoms
dec
lahf
mov
push
adc
fcmovnu
pushf
sub
or
xor
enter
aas
xor
inc
cmp
add
pop
lret
les
sbb
out
dec
and
inc
pop
outsb
push
xor
dec
mov
push
sub
mov
pop
mov
fisttpl
adc
pop
cmpsb
dec
fs
fcom
rolb
std
dec
movsb
mov
mov
push
fiadds
fsubr
mov
or
add
aaa
sub
adc
ds
in
add
sbbl
sar
test
jns
add
ss
jne
mov
movsb
loope
jmp
mov
cwtl
or
dec
iret
inc
add
shll
xchg
add
aad
rol
or
cmp
loopne
fstpl
fdiv
xchg
inc
dec
add
stos
sub
add
test
aas
push
frstor
or
jmp
icebp
cmp
jno
incb
cltd
xor
mov
dec
mov
mov
fisttpl
push
imul
fdivrs
loopne
xchg
ret
aas
repz
inc
pop
into
add
sbb
fisttpl
in
mov
repz
adcb
mov
outsb
in
das
mov
pop
fucom
call
push
in
imul
in
mov
movsb
inc
jp
aaa
jp
cmp
test
pop
cmp
clc
xor
aad
or
lret
enter
dec
out
add
or
mov
mov
js
je
mov
insl
int3
imul
pop
sarb
mov
in
lret
in
sbbb
fcomps
roll
cltd
mov
add
add
mov
jae
inc
or
aas
cmp
mov
push
cltd
movl
jno
mov
inc
xlat
test
aaa
andb
iret
sub
adcl
mov
cmp
xor
fcoml
movsl
mov
movl
mov
push
xchg
sbb
inc
les
xchg
fistpl
es
popa
pop
sub
mov
sbb
dec
das
dec
jmp
lret
lret
or
pushf
xor
shrl
jae
dec
pop
rcrl
push
dec
mov
aam
stos
cmc
andl
xlat
stos
jbe
ss
jae
test
psllw
sbb
sbb
cli
mov
cmp
xor
repz
mov
fldenv
in
stos
mov
jnp
movsl
addr16
fdivl
cmp
int
sti
jg
les
inc
mov
fisttpl
and
sub
int
lahf
sbb
in
xor
dec
nop
push
enter
push
and
add
mov
daa
dec
jp
dec
lock
nop
cmp
lock
add
dec
nop
fst
lcall
inc
icebp
sbbl
push
out
out
push
in
test
test
hlt
jmp
jle
push
int3
mov
jne
arpl
and
arpl
stos
mov
sub
push
sarl
daa
or
sub
add
das
jmp
repz
or
jmp
cmc
or
lock
fldcw
push
test
dec
loop
pop
add
fisttpl
push
cmpb
stos
das
into
add
iret
das
inc
ljmp
sbb
sahf
cmpsb
mov
cmpsb
adc
mov
popf
mov
dec
mov
push
add
in
test
sub
mov
mov
adc
testl
or
daa
dec
xchg
repz
stos
push
cs
out
push
out
inc
jo
jb
cmpsb
pop
xchg
push
cli
push
mov
mov
xor
outsb
sbb
mov
in
test
test
cmpsb
gs
pop
in
adcl
add
sahf
outsl
or
adc
mov
jnp
vfmsubaddps
push
jmp
daa
add
hlt
scas
sub
repz
les
shll
mov
adcl
les
xchg
xchg
or
jae,pt
int
mov
xor
roll
and
mov
movsl
sub
test
sbb
xlat
fldenv
or
xlat
mov
repnz
sub
stos
mov
call
mov
int
mov
shrb
mov
or
and
mov
popa
and
je
mov
dec
ficompl
movsb
and
mov
push
cld
fistl
push
pop
mov
test
in
mov
clc
pushf
inc
hlt
sub
aam
jnp
xchg
imul
push
movsl
add
stos
iret
sbb
dec
loopne
mov
sub
les
mov
mov
andl
or
xchg
jnp
inc
mov
dec
insl
and
xor
inc
push
or
gs
or
add
loopne
xor
inc
push
xor
aad
inc
shll
jge
or
fwait
stos
aaa
sahf
mov
cmpsb
jne
cli
xor
mov
cmp
mov
push
iret
int3
mov
cwtl
into
loopne
fwait
push
loopne
movsb
bound
imul
ds
or
mov
popa
jno
fdivrl
out
and
jl
mov
and
bound
mov
jbe
xor
mov
push
push
in
pop
ret
sub
incb
xor
repz
adc
xor
xor
fdivl
xlat
scas
dec
xor
lcall
jae
mov
fstps
xchg
fwait
dec
cmp
shrl
in
adc
lds
or
cmp
jnp
lock
jg
mov
and
add
shrb
adc
pop
fsubrs
mov
mov
sub
fistpll
clc
sbb
and
rcll
xchg
shlb
sbb
pop
push
int
push
in
xchg
dec
sbb
imul
inc
jmp
pop
mov
test
ljmp
int3
lcall
movsb
out
lock
xor
in
push
hlt
loopne
adc
push
frstor
loope
cmp
push
inc
cltd
dec
jae
cltd
jecxz
int3
lret
cmp
rcll
or
inc
jmp
fdiv
push
fsubs
inc
les
or
dec
cwtl
lods
pop
aam
jns
test
lcall
pop
lcall
ret
shl
inc
xchg
lret
in
add
roll
xchg
jb
repnz
push
xchg
inc
xchg
lods
jg
test
mov
dec
add
cmp
shll
loope
xchg
jp
out
mov
out
in
and
jmp
jmp
or
or
das
aad
cmpb
mov
or
stos
cmp
jnp
push
icebp
push
mov
ret
into
outsl
aaa
inc
stos
iret
mov
mov
jno
xchg
sbb
lock
pop
movsb
mov
fdivrs
or
lods
stos
inc
popa
adc
mov
ds
mov
xor
pop
out
cmp
sti
clc
sbb
sub
sub
movsl
push
lods
aad
cmp
pop
xchg
jbe
movsl
xor
adc
pop
sub
xchg
in
and
out
dec
adc
xchg
stos
ret
idivb
imul
or
inc
adc
or
fsubp
cmp
fidivl
pop
test
jp
fsubl
imul
inc
test
and
push
adc
lods
dec
idivb
inc
ds
int
pop
test
shl
lea
jo
imul
test
mov
add
mov
dec
push
jg
imul
aad
ror
movsb
lock
dec
hlt
dec
cmp
sub
jbe
cmp
inc
hlt
or
push
xor
and
or
int
xchg
or
repz
ja
sbb
mov
mov
inc
cwtl
push
daa
dec
mov
clc
jbe
shrb
mov
inc
insb
aad
cmp
add
lahf
in
adc
xchg
js
cmpsb
das
xchg
out
aad
out
push
xchg
cmp
jo
xor
xor
jne
fwait
add
aad
push
loop
in
imul
jnp
adc
repz
jnp
mov
and
outsb
dec
dec
test
out
js
shl
cmp
test
sub
sbb
inc
dec
and
je
xchg
xchg
mov
test
test
cmpl
mov
ret
cmp
out
cmpsb
mov
jo
movsl
xor
dec
sub
icebp
push
call
test
mov
cmp
aad
dec
or
mov
icebp
enter
xchg
sarl
inc
xlat
add
or
and
scas
repz
mov
in
fcmovb
jnp
jl
rorl
movsl
xor
push
add
ja
repz
popf
lock
mov
cmp
pop
sahf
cmp
push
mov
push
adc
ss
push
scas
out
jg
lea
push
fs
adc
mov
imul
aam
pop
les
inc
hlt
nop
sahf
push
lock
inc
out
dec
dec
repnz
adc
xchg
jae
scas
cmp
or
xchg
adc
push
les
outsb
xchg
lods
fcoms
sbb
pop
clc
jno
aaa
call
pusha
mov
jae
mov
cltd
cmp
call
xchg
xchg
push
xchg
lahf
lcall
jae
cmp
sti
call
xchg
js
test
int
mov
fcomps
lods
les
inc
dec
jmp
sub
cli
ficompl
push
sbb
scas
sbb
movsb
push
lret
and
loop
dec
push
xchg
and
in
mov
in
fisubs
popa
nop
lds
out
aad
pop
mov
pop
cmpsb
ficoms
sbb
in
mov
in
mov
sub
xchg
and
cmp
cmp
xlat
mov
lock
jnp
mov
cld
aaa
mov
add
cmp
scas
stc
jnp
movsl
mov
rcrb
mov
sub
sbb
or
andl
adc
mov
fcoms
lret
pop
popa
ljmp
xchg
lcall
sub
mov
dec
adc
subl
cmp
lret
mov
mov
jae
cmp
jl
jle
jge
ret
inc
lret
and
les
sahf
pop
dec
call
mov
mov
lods
push
adc
lahf
bound
and
adc
xor
lods
xlat
sub
jns
mov
out
std
mov
ret
push
mov
mov
push
mov
sbb
jl
or
cmp
enter
sub
inc
jg
mov
mov
negl
std
xor
movsl
stos
loopne
or
sbb
jp
cmp
hlt
insb
ret
cmc
xchg
jo
repz
rclb
jp
inc
pop
cmp
or
mov
pop
in
inc
fdivs
mov
cmpsl
pop
push
ds
fmul
and
mulb
and
sbb
push
aas
mov
inc
mov
xor
fadd
cmp
ss
pop
in
sbb
xchg
sbb
cld
push
repnz
inc
mov
insl
adc
cwtl
or
or
mov
add
dec
mov
in
push
push
push
cli
movsb
scas
xchg
lret
loopne
out
push
xor
aas
mov
push
cmp
sub
cltd
mov
test
pop
jmp
ds
std
pop
cmpsl
inc
ljmp
jno
movl
andb
lea
outsl
pop
cmp
fucomip
int
and
pop
enter
pushf
jns
imull
xrelease
inc
ss
pop
xchg
popa
jo
fcmovnbe
ret
hlt
int
pop
out
sahf
leave
ds
into
pop
push
cmp
fld
xchg
cmp
or
rorl
scas
aam
fdivl
xchg
mov
inc
clc
fnstcw
movsb
mov
arpl
lret
div
sbb
push
cmp
mov
or
xchg
push
and
push
xor
mov
pop
clc
xchg
mov
ja
and
xor
imul
add
inc
int3
cmp
sahf
cmp
int3
sbb
inc
dec
out
dec
or
mov
loopew
andb
or
jp
jnp
loop
shl
fsubs
loope
or
imul
mov
mov
ds
adc
test
pop
out
das
xor
mov
pop
movsl
or
mov
push
add
cmp
ret
push
sub
or
push
inc
add
je
loop
mov
incl
fcompl
ret
cmpb
pop
stos
push
mov
fstpl
fcomi
cs
stc
adc
jmp
movsb
jnp
fdiv
jnp
in
stos
rcrl
ss
pop
inc
popf
dec
xor
cmp
sub
pop
int
mov
in
not
pop
les
ret
call
test
in
inc
std
addr16
add
icebp
cmc
xchg
sbb
dec
fildll
popf
or
sub
add
pop
in
xor
dec
ja
pusha
mov
mov
jbe
pop
jmp
insb
adc
shlb
out
mov
mov
aam
lret
movsb
sub
lahf
push
xor
sbb
jae
and
jnp
out
mov
out
inc
push
adc
jg
scas
and
mov
mov
lea
lret
jnp
cli
das
push
cmpsl
xchg
vrsqrtps
cmp
adc
out
add
mov
ret
fadds
mov
dec
hlt
into
clc
cmp
lea
mov
lods
loope
daa
jg
daa
addb
in
pop
add
ret
push
and
leave
clc
sub
outsl
mov
cmp
push
pop
loope
and
data16
adc
xchg
ret
js
sub
and
rol
add
push
enter
cmp
and
xchg
jno
sbb
mov
dec
pop
in
sbb
decl
fbld
enter
dec
cmp
aad
roll
adc
repnz
sub
lds
jbe
dec
es
call
mov
sub
push
cmp
out
sub
push
xor
pop
ficompl
sbb
subb
jp
sbb
fsubrl
pop
push
jns
xor
xchg
xor
rolb
repz
sbbb
jo
outsl
pop
cmc
mov
push
imull
and
mov
cltd
mov
xor
sbb
add
fldcw
push
jb
inc
sbb
xor
stc
inc
ja
mov
fdivl
lcall
lret
xchg
gs
xchg
pop
mov
mov
test
mov
mov
cmp
std
test
lret
cmc
xor
jae
icebp
xchg
add
pop
xor
in
mov
xchg
sub
pop
stc
ja
lret
cmp
sbb
and
or
icebp
push
dec
bound
xor
mov
mov
fldcw
jge
and
mov
xor
lea
mov
dec
jno
cs
mov
dec
es
mov
cmp
sub
sub
test
inc
insb
push
loopne
repz
dec
mov
adc
out
in
fisubrs
insb
and
cmp
dec
ret
pop
and
bswap
sub
rolb
xchg
int3
aas
pop
cmp
repnz
mov
stos
push
cs
jno
xor
icebp
xchg
inc
push
mov
dec
cmpsb
pop
ja
jae
cmpsl
add
push
loop
out
and
in
push
push
and
dec
pop
dec
add
push
dec
adc
xor
xchg
jno
add
push
push
lret
dec
cmp
push
xchg
pop
ret
cmp
xchg
cmp
enter
pusha
or
xor
fwait
mov
scas
xchg
clc
mov
dec
dec
scas
subb
insl
iret
ret
cmp
aas
pop
jmp
loop
shrb
fcmovne
jl
add
push
xor
mov
outsb
lods
mov
test
jb
jmp
jg
addr16
dec
shll
push
movsb
sub
mov
xor
xchg
in
cmp
inc
mov
pop
sub
mov
jmp
stos
fistpll
xor
out
jge
xchg
mov
mov
fisttpl
mov
add
sbb
xor
pop
and
or
stos
dec
into
dec
cmp
pop
arpl
push
enter
dec
jns
xor
fists
pop
sbb
popf
pop
hlt
lds
inc
mov
cmp
inc
push
xchg
into
jo
cmp
ds
ljmp
and
xchg
jo
push
dec
int
stos
add
cmp
ffree
test
mov
out
xlat
imul
outsl
inc
stos
jg
mov
inc
sahf
inc
sahf
push
cwtl
cs
lods
faddl
mov
push
cmp
les
iret
dec
ficompl
xor
and
js
dec
out
lds
lret
add
into
rcrb
das
add
in
xor
dec
mov
push
std
mov
lea
xchg
cld
daa
loope
adc
xchg
jge
mull
cmp
cmp
adc
cmc
repnz
test
movsb
mov
jne
js
int
mov
cli
ds
aad
daa
mov
test
icebp
lret
cmp
stos
bound
xchg
lock
insl
add
outsl
jno
lret
inc
iret
shl
rorb
fadds
lock
or
xchg
ret
mov
pop
scas
shrb
jno
cmc
inc
sbb
sub
lret
push
loopne
add
insl
xchg
xchg
and
out
xchg
and
add
sub
cmp
movsb
xor
enter
inc
imull
sub
or
cmp
push
inc
cmp
sub
repz
or
ficompl
in
sub
out
fprem
push
idivb
and
dec
bnd
and
xlat
inc
mov
clc
shrb
pushl
cmp
jmp
outsl
xor
fildl
jp
and
adc
cli
fwait
push
inc
imull
sbb
pop
push
clc
mov
popa
cmp
cmp
jb
jae
dec
or
stos
or
sbb
fisubl
or
fcmovu
sbb
std
xor
xor
dec
aad
dec
arpl
dec
add
scas
mov
fwait
mov
sub
add
jmp
pop
push
test
std
hlt
or
cmp
mov
add
add
cmp
jecxz
cld
or
testl
xor
jno
leave
or
or
aad
xor
movsl
repz
inc
scas
js
shlb
xchg
or
aad
xor
repz
mov
fadds
shll
sub
aad
xor
adc
or
lcall
fimull
sbb
or
enter
call
ss
jecxz
xor
xchg
repz
xchg
jae
or
jmp
mov
fcomp
ss
jae
or
clc
cltd
adc
xor
mov
jns
shll
or
aad
xor
cmp
mov
or
mov
test
jmp
cltd
shl
mov
fcoms
mov
call
xlat
fdivs
adc
add
pop
push
cmp
xlat
adc
popa
mov
fsub
ss
jae
or
repz
add
aad
xor
xchg
fcomp
adc
or
pop
mov
jae
jnp
decb
dec
mov
lret
xor
mov
push
push
imul
push
xor
xlat
and
leave
mov
call
xlat
push
inc
test
xlat
jnp
stos
or
js
mov
fsubrs
stos
divb
jae
or
aad
xor
inc
fcom
mov
bnd
or
aad
xor
mov
dec
ss
jae
or
aad
xor
jmp
or
adcb
sub
push
adc
or
ret
mov
out
xor
scas
dec
mov
rcl
mov
fsubrs
xor
mov
fmul
xorl
push
mov
rolb
add
lret
mov
cmp
sbb
aad
xor
jno
dec
add
or
mov
fstps
dec
sahf
xor
mov
xor
stc
jae
or
clc
mov
fcomps
and
jnp
mov
cli
xor
ss
jae
or
xor
or
fwait
mov
and
xor
jnp
movsl
or
mov
or
or
aad
dec
or
or
inc
mov
or
aad
xor
fcmovu
pop
sbb
cmc
imull
adc
xlat
sub
jmp
sbb
push
adc
fidivl
xchg
jae
cmc
negl
add
adc
adc
fbstp
cmp
cmp
sbb
fimull
mov
insl
xor
mov
fdivs
jne
or
aad
ss
test
call
pushl
xlat
add
or
repz
dec
mov
dec
rcrb
jmp
loop
push
lret
fidivs
jae
or
lret
mov
sbb
fidivl
xchg
mov
sub
xor
orb
sbb
imul
mov
mov
repz
jae
or
inc
mov
jae
or
mov
jae
or
aad
xor
mov
jae
or
aad
xor
mov
fcomps
lret
out
sbb
imul
push
fsubrs
or
mov
mov
sub
push
xor
jns
out
xchg
not
pusha
push
enter
dec
nop
test
cmpsl
inc
sub
pusha
or
dec
aas
pop
and
xchg
in
mov
mov
xchg
div
neg
mov
sub
mov
out
mov
push
mov
sahf
dec
mov
pusha
cmp
mov
insb
mov
shlb
shll
sbb
sbb
cld
in
loope
mov
enter
add
mov
push
dec
mov
adc
ljmp
pop
xchg
sbb
stc
and
sbb
mov
xor
and
test
std
add
pop
jl
inc
push
arpl
imul
pop
fs
in
addb
push
dec
idivl
loopne
inc
inc
mov
xchg
jmp
je
test
xor
fidivl
inc
mov
pop
sbb
jmp
mov
or
add
mov
fisttps
leave
xor
or
call
sarb
clc
ficoms
xchg
add
rolb
lock
aam
rclb
test
push
lock
imul
mov
dec
stc
insb
push
fneni(8087
je
jo
xor
js
cli
out
pusha
mov
or
cmp
cmp
ret
xchg
jmp
jmp
fsub
mov
out
cwtl
or
je
or
pusha
andb
mov
mov
pop
loopne
xor
hlt
xor
test
sub
add
iret
jmp
xor
push
sub
loope
repz
shl
mov
btr
icebp
or
in
sub
es
cmp
jmp
in
sub
xor
xor
in
xlat
or
sub
cmp
bnd
into
aam
mov
jmp
cltd
push
insb
imul
sbb
stos
or
mov
out
call
mov
fidivrs
cmpl
popf
shll
sub
sub
cmpsl
sbbb
int3
dec
cmp
les
fsub
cs
add
and
sub
adc
jo
or
and
fisubrl
inc
les
push
or
cmc
rorl
lret
xchg
mov
and
sbb
insl
mov
cmp
out
es
hlt
adc
xlat
pop
dec
faddl
rclb
rorb
or
insl
adc
adc
xor
sub
sbb
js
add
mov
pop
xchg
push
push
jecxz
jns
fwait
and
inc
push
inc
mov
sahf
mov
mov
fwait
pop
loope
mov
sub
jbe
add
pop
push
mov
insb
adc
push
cmp
in
into
mov
cmp
jno
aam
inc
mov
cld
inc
push
adc
jae
adc
das
jl
add
lret
mov
jns
in
push
sub
jo
into
jne
lahf
pop
push
push
mov
xor
rcrb
or
in
test
dec
add
sub
es
xlat
mov
test
fidivs
icebp
out
stos
rcrb
rcrl
mov
adc
adc
call
stc
into
mov
ljmp
mov
call
xor
testl
imul
repz
fcompl
jo
pop
lds
jne
orl
mov
popa
ss
push
sbb
in
lahf
je
lcall
aam
sub
imul
lock
je
xchg
rcr
aam
test
divl
leave
cmp
fidivs
push
movb
je
arpl
insb
mov
and
ss
push
ljmp
icebp
mov
inc
sbb
jmp
int3
xchg
mov
cwtl
mov
mov
les
aaa
ja
adc
movb
pop
mov
fsubr
push
popa
leave
cmc
add
dec
jns
clc
add
xor
test
lods
lods
sub
push
fnsave
push
js
and
add
int
xor
xchg
mov
shrl
pop
sbb
iret
fisubrl
int3
stos
adc
sub
cs
pop
mov
popa
and
mov
enter
inc
inc
test
adc
cmp
xor
popa
loopne
pop
xor
xor
or
in
mov
or
add
insb
les
aam
lock
cli
test
sbb
jb
adc
imul
out
xor
test
or
jmp
lret
xchg
mov
xor
and
inc
mov
adc
and
fnstsw
cwtl
lds
jge
repz
mov
sbbb
cmpsl
sbb
and
cmp
add
pusha
mov
inc
push
jmp
enter
call
xorb
loop
lahf
lods
xchg
subl
push
in
sub
popa
je
pop
inc
loop
or
lea
test
in
mov
pop
cmpsl
sub
imul
pop
pop
stc
or
cmp
cmp
lds
lret
sub
call
adc
enter
sub
jae
fdiv
cmc
mov
dec
inc
negl
inc
push
fdivs
cmpsb
push
aad
call
push
xor
mov
xor
or
hlt
mov
or
or
outsl
jp
mov
ss
rclb
mov
xchg
cmp
mull
je
stos
cmp
shrl
sub
iret
loopne
add
jae
or
adc
mov
or
in
xchg
sub
mov
jbe
and
outsl
pop
ret
cmpsl
lock
add
daa
lret
ljmp
fdivrs
aas
or
lods
and
aam
xchg
mov
test
cmp
aad
sbb
rcll
add
leave
push
cmp
scas
inc
xchg
jp
or
in
ss
jecxz
lock
enter
mov
cmp
mov
sub
mov
lahf
leave
pop
adc
cmp
xor
sbb
sbb
jb
push
shll
and
xchg
out
mov
out
xlat
or
fadd
and
sbb
xor
pushf
xchg
and
pop
test
jo
addb
jle
mov
sbb
mov
mov
pop
das
inc
addr16
dec
jnp
xor
js
xchg
mov
loop
mov
fadds
shrb
dec
dec
insb
cmp
sub
pop
pop
mov
jecxz
sbb
push
mov
enter
arpl
dec
adc
inc
loop
push
inc
lock
outsb
les
loopne
xor
cmp
shrl
shrb
mov
jnp
and
sub
shrb
mov
mov
push
inc
repnz
ret
xchg
add
jg
mov
stos
scas
dec
aad
or
insb
push
cmp
mov
xorl
sub
addr16
cmp
sub
adc
dec
call
cmp
sarl
fmuls
mov
add
mov
mov
xor
and
imul
jne
jo
out
xor
in
js
push
sub
xchg
xorl
repnz
inc
adc
repz
jae
sahf
xor
arpl
mov
pop
scas
flds
xchg
mov
or
inc
pop
ja
cmp
push
xor
fisttps
stos
jne
adc
or
push
mov
pop
subb
jg
fcmovu
xchg
xor
div
jg
nop
cs
push
sub
lcall
insb
jns
cld
call
cmp
mov
sub
inc
and
std
shrb
jo
scas
aad
add
orl
mov
inc
repnz
iret
in
jl
cmpsb
jmp
jecxz
scas
sub
pushf
pop
adc
pushf
adc
xchg
ljmp
xchg
ss
in
fidivl
mov
ds
mov
and
jo
sub
lods
jno
mov
mov
arpl
or
cmp
out
jb
adc
loopne
mov
in
pop
cmp
add
fs
roll
jnp
loopne
enter
insb
mov
add
xor
cmp
xor
mov
call
fdivl
lock
pop
iret
and
pop
or
ficompl
mov
mov
insb
addl
dec
mov
cmp
fmul
pop
mov
cwtl
loop
aad
fidivl
jg
push
enter
xor
hlt
enter
andl
imulb
repnz
dec
rclb
push
push
test
adc
rorb
cmp
inc
pop
push
popa
adc
mov
or
add
scas
rcl
out
inc
mov
int3
or
ja
lcall
pop
fwait
cmp
mov
sub
xor
or
mov
and
aad
outsl
xlat
jo
in
jnp
ret
adc
and
dec
push
xchg
inc
mov
xlat
mov
jecxz
or
scas
imul
inc
cmp
clc
shr
sbbl
pop
popa
aam
enter
insb
mov
fiaddl
xchg
test
jge
jae
bound
dec
addl
lock
xor
pop
mov
decb
push
mov
insb
test
jnp
imul
jb
sub
push
in
pop
repnz
fdivs
mov
cmc
cwtl
xchg
in
and
sub
call
imul
xchg
inc
pop
mov
fdivrl
popa
or
or
jae
int
das
gs
ret
cmp
and
aaa
xor
jae
dec
xchg
lock
bound
nop
repnz
fdivr
lock
mov
cmpsb
rcll
adc
inc
sbb
lret
or
mov
hlt
cmpsb
in
div
inc
fadd
jae
jae
sub
fstpl
mov
cmp
xor
xchg
jmp
roll
lea
push
cmp
dec
and
or
in
inc
imul
cmp
aam
cmp
int
loopne
xchg
lock
fmull
jg
stc
mov
mov
mov
aam
cmp
rcl
sbb
inc
push
cmp
xchg
pop
shrb
mov
xor
push
addl
mov
inc
cld
sbb
nop
pushf
ss
add
ss
push
push
aam
fmuls
mov
ret
shlb
pusha
push
xchg
dec
mov
test
jno
push
dec
fadds
orb
les
mov
jb
fs
or
pop
pop
idiv
rcr
mov
cmp
cwtl
loopne
pushf
jae
mov
xor
push
bound
iret
imul
mov
dec
call
mov
addr16
mov
ret
sbb
adc
shrb
mov
and
pop
dec
ss
inc
iret
stos
xor
inc
mov
jo
lods
leave
int3
xor
jmp
orl
or
mov
scas
and
push
xchg
ret
sbb
fisttpl
and
dec
ret
int
testl
inc
cld
repz
pop
and
shr
mov
cli
fwait
mov
sbb
fnstenv
xlat
divl
mov
pop
aad
jne
fwait
divb
push
repz
lcall
dec
fstpt
or
xor
and
mov
xchg
mov
push
mov
jmp
sbb
cmp
mov
shrl
cmp
sub
cmp
mull
outsl
sbb
lods
push
dec
fwait
outsl
fcomps
mov
adc
test
lahf
mov
cmp
call
adc
jae
inc
test
js
cltd
ss
pop
fldcw
pusha
cmp
xchg
cwtl
loopne
ljmp
cmp
pop
adc
arpl
cltd
rcl
pop
out
adc
cmp
sub
pop
dec
pop
fwait
adc
and
fcmovu
and
jae
sub
jmp
pop
fsubrs
mov
push
sbbl
sbb
pop
dec
ja
out
mov
add
lcall
fcmovnu
and
inc
mov
pop
mov
inc
mov
cmp
mov
fcomi
sbb
sbb
jne
repz
jae
fdivs
daa
mov
mov
dec
shl
mov
adc
cltd
hlt
fimull
xor
mov
pop
inc
js
cwtl
sub
fdivrs
cld
dec
jmp
cli
mov
cmp
pop
int3
fwait
mov
pusha
pop
sbbl
inc
imul
outsl
and
sbb
scas
fwait
mov
shlb
push
xor
cmp
jl
fldenv
jnp
or
jnp
repnz
sbb
shl
sbb
xchg
aam
sub
cmp
jp
mov
and
fwait
push
jnp
mov
js
idivl
cmp
jno
pop
cmp
jp
mov
or
cwtl
fmul
cwtl
add
divl
add
pop
or
dec
std
push
mov
or
or
push
cmp
int3
sub
and
in
xchg
xor
fnstcw
js
cmc
pop
sbb
or
call
sub
and
imul
mul
add
pop
fcmovbe
jmp
xor
mov
mov
cmp
pop
cmp
jbe
out
sbb
stos
push
mov
pop
sbb
jb
shll
dec
stos
pop
aad
fbstp
or
sbb
xchg
pop
xchg
lcall
jnp
and
mov
sub
push
jecxz
jmp
cmp
mov
jbe
nop
cmp
xor
das
jo
or
fcmovnu
js
sbb
sbb
pop
jnp
fistpl
fcomps
sbb
jae
stc
sbb
inc
jmp
pop
fcmovnu
mov
xor
cmp
cmp
test
mov
jnp
sbb
fcomps
stc
repz
jnp
sub
add
dec
jnp
fidivrl
pop
fisttpl
cli
mov
stc
sbb
pop
mov
mov
fwait
jnp
jmp
ss
cli
mov
cmp
sbb
fnstenv
mov
movaps
out
lcall
adc
adc
inc
ja
sbb
cmp
xor
cwtl
pop
pop
jnp
int
fcomps
adc
mov
xchg
pop
in
ja
fisttpl
jnp
ret
clc
mov
add
and
inc
xorl
insl
or
js
mov
jmp
jne
or
test
mov
leave
test
push
ret
push
cmp
adc
dec
push
lahf
pop
shl
sub
out
in
xor
add
bound
pop
sti
add
sbb
xorb
js
dec
xor
pushaw
clc
or
mov
push
stos
std
mov
xchg
fisttpl
sbb
test
fcos
jo
int
fucomi
std
outsb
stc
stos
aad
sub
jo
jnp
jl
cmp
cmp
insb
mov
das
ja
fwait
dec
inc
jne
cmp
clc
sbb
pusha
in
jno
stc
fwait
lods
aas
out
leave
ja
mov
xchg
loope
jbe
or
ficompl
inc
jnp
ss
mov
jle
cmp
mov
sub
in
enter
int3
cmp
sbb
jp
imul
fildl
or
ljmp
test
or
outsl
jns
xor
or
imull
jo
xchg
mov
notl
mov
mull
dec
loop
test
or
or
aaa
negl
stos
fisttpl
jnp
dec
stos
or
push
push
insl
sahf
jmp
xchg
insb
jnp
jnp
fwait
cmp
mov
fnstenv
pop
adc
imull
push
out
xlat
inc
mov
je
test
sub
fs
outsb
xor
push
test
test
in
les
fmuls
insl
mov
adc
negl
add
cli
iret
sub
in
inc
ss
loope
fstp
ja
mov
stos
xor
cmp
lret
mov
js
xchg
ja
cmp
jne
cmc
cmc
push
jp
ja
stc
sbb
imulb
adc
jl
jb
mov
lds
rcr
jno
mov
pop
add
shr
xor
and
cli
sbb
sub
das
sbb
jp
add
cmp
and
daa
fcmovne
dec
je
lods
sub
inc
insb
jg
loope
lret
adc
cmp
jg
ds
idivl
cmp
movsb
movsb
sub
xchg
lcall
div
push
ljmp
ljmp
stos
mov
or
insb
mov
lock
pusha
out
dec
dec
ja
sub
sub
xchg
inc
xor
jmp
negl
insb
push
dec
sbb
and
xchg
mov
add
mov
pop
cltd
mov
je
icebp
lods
cmpl
inc
push
shlb
adc
flds
hlt
fwait
out
sbb
repz
xor
jae
fscale
sbb
in
jnp
mov
add
jp
inc
sarl
les
test
shl
fs
jnp
scas
xchg
mov
std
rcrl
xchg
fcoms
xlat
push
inc
pop
sub
xchg
dec
cmp
and
sbb
and
xor
cmp
arpl
sub
sbb
sub
sub
fidivl
cwtl
xor
enter
or
or
cmp
icebp
mov
mov
je
mov
add
cmp
pop
xor
pusha
xor
test
andl
or
mov
outsb
ret
hlt
mov
aad
je
mov
test
addb
mov
mov
jbe
in
xor
outsl
xor
repz
sbb
and
cmp
stos
fwait
pop
or
pop
lret
jo
cltd
lods
xchg
sbb
repnz
inc
loopne
mov
rorb
mov
imulb
inc
fdivr
mov
mov
sub
xchg
push
cmp
cmp
xor
cwtl
fdivrl
idivl
jnp
inc
or
sbb
mov
dec
mov
mov
fidivrs
cmp
idivl
push
pop
fucomip
adc
sub
adc
add
in
lea
das
cmp
hlt
aam
call
sbb
testl
push
push
je
pop
and
repz
jmp
mov
jnp
insb
lret
fisttpl
mov
jae
fsubr
sub
add
add
mov
lcall
sbb
out
pop
nop
gs
dec
in
je
pop
pop
push
ja
vsubsd
sub
dec
dec
ja
outsl
test
mov
mov
xchg
mov
icebp
jmp
jp
call
stc
or
inc
mov
mov
idivl
fstps
cmp
test
test
jnp
dec
inc
fldt
int
inc
sbb
loop
lea
leave
fwait
ds
fimull
dec
sbb
sarb
in
or
imul
push
dec
xor
push
dec
xchg
enter
or
popa
mov
and
pop
lock
aam
mov
push
push
fadds
das
mov
sub
test
call
xchg
push
sub
sub
fwait
sub
push
loopne
sar
add
push
nop
jnp
adc
sbb
xchg
xchg
sbb
test
hlt
enter
cltd
jnp
mov
and
pop
jnp
pop
mov
xchg
cwtl
xor
cmp
cmp
sbb
jb
and
mov
or
fsubrs
clc
andl
jnp
arpl
push
cmpsl
or
hlt
icebp
mov
push
in
jl
fsubr
fld
jp
push
cwtl
mov
mov
and
xchg
add
rcr
push
xchg
adc
loopne
addl
xor
mov
adc
adc
cli
pop
mov
jae
cld
ss
mov
jno
jl
xor
pop
mov
shrb
xor
mov
aam
push
outsl
mov
addl
sti
rcll
lods
int
aam
in
addl
fsubs
adc
fs
shlb
push
loope
enter
cwtl
pushf
mov
pop
or
mov
in
mov
inc
pop
pop
jnp
pop
push
movsl
lods
je
std
add
jae
out
pop
add
test
and
outsl
andl
jnp
cwtl
ror
sub
cli
mov
add
sub
sbb
pop
cmp
sbb
mov
jnp
cwtl
mov
iret
pop
sbb
lcall
cmp
mov
mov
sbb
cli
sbb
mov
repnz
adc
je
mov
mov
jnp
mov
inc
mov
cli
out
push
lcall
jl
or
push
sbb
movsb
fwait
mov
cltd
sub
or
mov
cmp
sub
cmp
cmp
sbb
add
sbb
aam
add
cmp
shrl
push
push
fldcw
sbb
push
out
jb
jnp
fcomi
cmp
ss
mov
jl
mov
in
testl
enter
adcl
mov
ret
xchg
xor
test
mov
xchg
and
or
cmp
pop
js
cli
xchg
sbb
sar
mov
add
loopne
jae
pop
mov
into
inc
jp
sbb
sbb
mov
mov
sbb
sbb
ljmp
imul
push
sbb
add
les
mov
dec
push
nop
xor
cmp
arpl
roll
pop
pop
xor
loop
std
sbb
fmuls
sbb
cmp
sbb
sti
sub
mov
fsubrs
fidivl
jnp
mov
mov
or
push
cmp
xor
lds
cmp
jp
xchg
addr16
popa
add
mov
xlat
xlat
mov
xlat
call
outsb
inc
push
lcall
aam
mov
movsl
adc
add
push
mov
enter
mov
sub
xor
cmp
gs
les
cmp
push
cmpsl
dec
xchg
loopne
fnstsw
movsl
iret
mov
pop
jl
add
aaa
xor
cmp
xchg
cmpsb
jl
out
dec
adc
sbb
push
pop
push
lret
shlb
sbb
add
and
and
inc
cwtl
push
sti
cmp
mov
dec
out
sbb
sub
mov
xor
mov
push
mov
and
jl
les
cwtl
jmp
inc
add
loopne
pop
mov
loop
mov
mov
pop
mov
das
or
or
ficompl
daa
repnz
or
or
sub
adc
jmp
xor
xor
ds
lods
test
test
cmp
pop
or
fsts
xchg
jnp
sarb
pop
add
xor
aam
daa
loop
push
test
jne
dec
addr16
inc
push
mov
in
mov
hlt
dec
cmp
push
push
fs
mov
inc
pushf
lock
ret
jns
popf
mov
fsubrs
mov
fwait
pop
aaa
cmpsb
or
pop
or
jne
push
jp
cmp
pop
push
or
pop
ds
lret
add
jmp
call
js
xchg
add
es
jl
arpl
pusha
insl
xor
add
sarb
add
imul
fmulp
jecxz
inc
and
dec
hlt
xlat
insl
repz
add
cmp
jg
movsl
cmp
js
in
pop
sbb
cmp
lods
mov
sbb
call
push
sub
aam
push
gs
stc
or
scas
mov
icebp
je
sub
mov
hlt
inc
aam
jno
je
dec
nop
jns
in
jne
cwtl
addr16
in
call
sub
push
lock
pusha
dec
xor
dec
add
bound
add
sub
jb
inc
sbb
subl
dec
add
pop
mov
xor
sub
xchg
cmp
inc
lock
cmp
in
nop
mov
fisubrl
call
xchg
sbb
popf
ja
in
insl
jecxz
mov
loopne
mov
inc
out
test
mov
jnp
in
inc
push
jg
arpl
repz
sub
pop
shll
int
ljmp
inc
fdivs
mov
in
rcrb
hlt
imul
mov
xlat
lret
mov
fadd
mov
xor
xchg
daa
fsubr
mov
sbb
inc
inc
or
and
cltd
adc
xlat
and
pop
sbb
jg
xor
jae
cmp
cmp
insl
cmp
sbb
mov
fs
cwtl
cltd
pop
jp
xchg
loop
or
cwtl
test
ficomps
push
pop
jnp
mov
js
into
cltd
cmp
xchg
arpl
mov
sbb
cmp
or
outsb
sbb
jg
jno
pop
cld
int3
sub
cltd
or
fwait
lock
push
mov
xor
jg
lcall
sarl
js
fisubrl
cmp
cmp
loop
cltd
add
pop
xor
sbb
in
pop
jb
xor
fimull
fdivs
and
fwait
mov
aad
insl
cmp
cwtl
mov
cmp
fwait
or
hlt
cld
out
js
in
cmp
jno
ret
sbb
jnp
cmp
push
flds
sbb
xor
aaa
cmp
push
sbb
arpl
mov
mov
fld1
pop
xor
aad
xor
js
js
lods
call
or
xchg
stos
mov
fisubrs
addr16
in
cmp
sbb
iret
std
dec
cmp
mov
add
ja
mov
stos
dec
lods
stos
fistpl
test
mov
iret
adc
cmp
fiadds
ljmp
cmp
sti
into
fistl
xor
or
jnp
inc
xchg
imul
jb
xchg
mov
negl
stc
dec
clc
sub
test
or
dec
adc
xor
xor
dec
cld
inc
rcrl
jnp
cs
sbb
repz
xchg
sub
mov
ss
jae
or
enter
or
sub
lret
sbb
jae
adc
sub
stos
cmp
xor
aad
xor
fidivl
or
or
push
fisttpl
push
jo
add
cmp
add
dec
call
xlat
jmp
dec
pop
mov
sub
enter
inc
push
stos
or
mov
sbb
dec
xor
xor
or
sbb
call
in
push
cmp
dec
xor
shrb
js
push
test
call
ss
push
add
cmc
fildl
or
fdivs
aad
xor
push
cmp
cmp
dec
mov
fidivrl
mov
xor
jmp
mov
inc
pop
sbb
cli
or
lods
rorl
lret
fdivl
jo
mull
or
aad
xor
xchg
jmp
or
fs
mov
xchg
dec
jb
les
imul
mov
outsb
fcoml
ja
ss
jae
or
cmp
testl
fadds
jecxz
sbb
cmp
mov
adc
inc
jnp
mov
adc
dec
fistps
xor
pop
xor
int
cmp
mov
fcom
inc
jp
mov
adc
and
lcall
pop
mov
clc
fidivl
sbb
or
xor
jns
cwtl
ss
jae
or
test
pop
xor
mov
xor
mov
cmp
cmp
jno
xchg
cwtl
xor
mov
jmp
cli
jae
or
jecxz
mov
xlat
sbb
jnp
add
aad
xor
dec
sbb
and
test
mov
mov
aad
xor
shl
cmp
clc
jae
or
idivl
mov
jns
xor
or
aad
xor
inc
stos
movsl
and
xor
xor
mov
jae
or
aad
xor
push
cmp
and
or
aad
xor
jmp
addr16
nop
or
cwtl
sti
fcoml
sti
aad
jmp
mov
sbb
mov
fimull
adc
aad
xor
out
sub
pop
jae
or
sbb
sbb
dec
mov
jae
or
clc
repz
aad
xor
mov
mov
sbb
out
repz
xchg
or
aam
cwtl
mov
fdivrs
ss
jae
or
cli
aad
xor
mov
fdivrs
fbstp
or
aad
xor
mov
fsubrs
mov
inc
mov
fadds
mov
sbb
jp
adc
sub
js
or
clc
mov
jae
or
jns
je
cltd
ss
cmp
insb
pop
aad
cmp
xor
push
sbb
or
push
ss
jae
or
mov
mov
fdivs
or
cmc
les
jnp
rcr
ss
pop
aad
cmp
ss
jae
or
mov
lcall
jnp
decl
pop
mov
clc
xor
fcomi
sbb
cltd
jae
push
addl
shll
mov
fdivrs
fsubrs
sub
add
add
push
mov
fcoms
mov
push
mov
inc
mov
mov
call
cli
xor
mov
fmuls
ss
inc
or
jnp
and
fwait
mov
cmp
outsb
jae
jnp
testl
dec
mov
or
ja
xchg
pop
lcall
pop
mov
sbb
sbb
lahf
ja
xchg
sbb
ficompl
in
cltd
mov
mov
sbb
lcall
sbb
pop
stos
fwait
std
mov
lahf
ja
xchg
pop
cwtl
mov
sbb
pop
stos
cltd
std
pop
cmp
lahf
ja
lcall
ja
xchg
fsubs
sbb
cwtl
stos
fscale
mov
lahf
ja
xchg
cltd
fistps
jne
sbb
ficompl
in
lcall
mov
sbb
fsubrs
lahf
ja
xchg
ficompl
mov
sbb
in
mov
sbb
pop
stos
lcall
sbb
lahf
ja
xchg
sbb
ficompl
in
cwtl
mov
sbb
sbb
lahf
mov
ja
xchg
lcall
sbb
mov
sbb
pop
stos
cwtl
std
mov
lahf
ja
xchg
pop
cltd
mov
mov
sbb
fldt
test
sbb
stos
fdivr
mov
lahf
ja
xchg
cwtl
fldenv
sbb
cltd
cmpsb
xchg
sbb
sbb
lahf
cmp
and
sbb
mov
ja
xchg
fcomp
ficompl
mov
sbb
fldcw
lahf
ja
mov
lahf
ja
xchg
pop
lcall
pop
mov
sbb
sbb
lahf
ja
xchg
sbb
ficompl
in
cltd
mov
mov
sbb
lcall
sbb
pop
stos
fwait
std
mov
lahf
ja
xchg
pop
cwtl
mov
sbb
pop
stos
cltd
std
pop
cmp
lahf
ja
lcall
jae
xor
scas
mov
jnp
mov
gs
cmp
sbb
popa
mov
cmp
jecxz
fsts
clc
mov
push
cmp
fstp
pop
sub
pop
sbb
pop
adc
lods
divl
jmp
cmp
jbe
pop
imull
add
cmp
cmp
das
mull
repz
or
xor
push
jmp
mov
cmp
clc
mov
in
testl
cmp
jp
cmp
mov
test
sbb
fstpl
std
stos
lcall
push
test
test
push
push
pop
fisubrl
imul
or
or
flds
mov
cmp
inc
mov
fnstcw
notl
scas
push
xor
jo
dec
add
cmp
loop
js
mov
int3
jnp
pop
jns
push
mov
jo
nop
test
jnp
jmp
inc
test
cli
fadds
mov
mov
jp
std
cmp
cmp
adc
cmp
stc
jbe
xchg
cmp
mov
add
jnp
idivl
fistpll
pop
stos
push
dec
mov
subl
std
fldpi
call
jnp
pusha
cmp
dec
clc
test
mov
cmp
ss
mov
cmp
inc
cwtl
jmp
adc
pushf
clc
or
inc
stc
pushf
mov
dec
nop
cmp
mov
push
repz
and
push
cmp
push
inc
inc
push
sti
outsb
lret
jnp
in
or
pop
shll
adc
and
stc
sar
jnp
adc
aam
or
cmp
cmp
jbe
loope
repnz
cmp
outsb
fcomps
push
jnp
mov
dec
cmp
repz
add
jnp
xor
cmp
jmp
shll
stc
jns
std
fistpl
dec
mov
repz
jnp
mov
cltd
stos
or
out
cmpsl
neg
jne
js
sbb
xchg
jnp
in
or
rcrl
or
fistpl
in
testl
jne
push
dec
jnp
cmp
inc
clc
jnp
xor
cmp
or
rcll
mov
or
cmp
mov
sub
jae
sbb
test
jnp
test
imul
jns
mov
cmp
bnd
jmp
leave
inc
cmc
or
mov
stos
repnz
lret
icebp
inc
sbb
sub
inc
clc
and
gs
aad
std
stos
cmp
cmp
push
jnp
fdivr
repnz
mov
mov
sub
jo
adc
jp
sbb
test
loop
xchg
mov
loop
cmp
in
cmp
push
and
stc
daa
ja
add
insl
xlat
leave
mov
push
and
jns
jns
sub
cmp
cmp
divl
mov
cli
cmp
adc
fistpll
cwtl
sub
dec
leave
push
iret
cmp
or
jmp
pop
mov
stos
mov
fisubrl
mov
sub
jnp
fstp
or
mov
mov
mov
cmp
mov
or
cwtl
sbb
js
or
jne
dec
notb
inc
pop
cmp
out
pop
iret
sbbl
xor
out
notl
je
pop
jo
je
jns
mov
repnz
dec
inc
or
outsb
ja
sub
insb
push
pusha
add
lods
ja
jo
popf
mov
jecxz
sub
pusha
inc
push
mov
lret
lods
dec
pop
ljmp
pop
xchg
mov
andl
add
fldenv
in
adc
fstpt
push
xor
lret
inc
jnp
xlat
leave
push
and
orb
in
xchg
outsb
lock
xorb
add
xchg
jnp
inc
cmp
push
mov
fbstp
cmpsl
imul
inc
fwait
mov
mov
adc
and
or
fcoml
pusha
rcr
andb
mov
pop
out
mov
adc
test
and
sub
inc
and
int3
jo
xor
xchg
inc
mov
mov
addb
dec
dec
cmc
and
sub
ds
leave
xchg
stc
xchg
iret
jae
mov
test
popl
adcb
pop
mov
push
movsb
xor
popl
enter
movsb
xchg
icebp
xor
leave
movsb
mov
ds
sub
adc
mov
loop
enter
scas
ljmp
sub
shr
je
cmp
push
rorl
enter
cmpsl
mov
in
xchg
cmp
push
inc
mov
push
adc
xor
push
jecxz
xor
mov
les
aaa
cltd
xor
and
sub
pop
imul
adc
jl
lds
jns
outsb
mov
pop
shrl
sbb
aad
adc
nop
mov
jo
leave
xor
subl
mov
popa
arpl
sub
ret
imul
cmp
and
insb
test
adc
push
mov
xchg
xchg
jae
shrl
inc
push
mov
loope
repz
adcl
xor
xor
jmp
hlt
cld
orl
orl
adc
push
xor
lds
mov
int3
icebp
fadd
push
lcall
jb
ret
add
push
test
mov
sbb
mov
ret
cld
pop
pop
arpl
fldt
fcomps
call
dec
loopne
or
jmp
cmp
out
mov
sub
pop
mov
xlat
clc
push
and
sub
gs
jmp
sub
adc
cmp
xlat
rcrl
fdiv
jnp
pop
iret
lcall
rcrb
inc
notl
sub
lret
fscale
cmp
shlb
cli
xor
fstl
filds
outsl
mov
mov
mov
jo
mov
jo
dec
cs
sub
mov
sub
pop
out
jbe
insl
ljmp
push
icebp
out
push
aam
sub
push
or
enter
dec
hlt
andb
icebp
jmp
xchg
andb
sub
call
xor
cmp
cmp
fistl
enter
clc
cmp
es
xchg
xor
xchg
add
adc
mov
xor
addr16
aam
ret
cmc
lock
aad
imul
push
pop
sub
stos
push
dec
or
arpl
push
test
sbb
sahf
fstps
xlat
cmpsb
xor
ja
scas
ja
cmpsb
mov
jp
out
pop
jmp
js
ja
mov
cs
test
sbb
pop
pop
or
and
jnp
test
cwtl
mov
inc
push
cwtl
jno
jne
xor
cwtl
pop
imul
rcrl
mov
mov
adc
cmp
imull
cmp
popf
push
addb
dec
enter
movsl
jae
jecxz
fdivrp
push
popf
fcmovne
repz
or
idiv
mov
mov
cmp
test
fdivr
std
rcl
mov
in
out
cmc
or
cmp
xor
pop
stos
imul
sahf
push
loopne
push
cmp
or
jl
xor
push
enter
imulb
repz
inc
lds
imul
xor
test
dec
and
pop
dec
out
inc
push
enter
rolb
in
loop
in
adc
jnp
pop
inc
dec
cmp
imul
mov
fwait
pusha
mov
or
rcl
bound
hlt
xor
push
iret
arpl
inc
xchg
mov
clc
pop
mov
test
jp
rolb
in
jmp
jmp
movsl
sub
test
mov
cmp
stos
or
pop
jae
shll
sbbl
cld
mov
or
repz
mov
xchg
jmp
xlat
mov
test
mov
and
nop
sbb
adc
xor
sub
mov
cmp
out
cmp
popa
xor
inc
js
fs
cmp
int
xchg
lock
or
call
adc
and
lods
js
outsb
adc
js
int
xchg
dec
xchg
mov
stc
lahf
inc
inc
push
mov
cmp
cmp
int3
ja
nop
inc
arpl
cmp
mov
movsb
lret
out
pusha
cmp
mov
inc
loope
add
cld
cli
xor
lahf
das
cmp
test
sub
and
clc
jl
adc
adc
sub
stos
mov
test
sbb
pop
jecxz
jp
dec
sub
xchg
es
add
mov
jl
adc
pop
cwtl
jecxz
nop
push
xor
clc
and
sarl
pop
mov
inc
nop
enter
push
pop
out
mov
iret
leave
data16
xchg
xor
insb
jae
mov
in
stos
xor
mov
sub
outsl
cwtl
std
fsubrl
fisttps
lret
sbb
cmp
or
xchg
adc
xor
pushf
adc
cmp
idiv
das
outsb
dec
adc
xor
lock
fdivrs
and
hlt
jae
cltd
xlat
sub
or
negl
fstp
sahf
stc
xchg
testl
jp
and
rcr
mov
mov
push
mov
xor
imul
fcmovnu
mov
push
add
outsl
neg
mov
cmp
mov
mov
js
cli
stos
lahf
pop
inc
push
xlat
icebp
mov
sub
sbb
jmp
cmp
pop
ss
out
or
fsubs
pusha
fucomi
pop
loopne
cltd
xchg
test
fisttpl
xchg
loope
mov
mov
loope
mov
pushf
pop
mov
into
imul
cmp
mov
jns,pn
movl
fstpt
sbb
jp
fistpll
sub
mov
out
sub
mov
jmp
jns,pn
ja
lret
cmp
popa
mov
jecxz
pushf
ficomps
pushf
inc
gs
cmp
gs
das
xor
push
hlt
ja
fcoml
cmp
mov
stc
stos
leave
mov
mov
lcall
sbb
cmp
xchg
jnp
ret
jb
stc
pusha
cmp
in
fwait
dec
lds
popa
clc
mov
icebp
cmp
call
lcall
outsl
rcr
das
xchg
xor
cmp
fisttpl
out
lahf
into
fnstcw
mov
int
mov
movsl
js
or
sub
jmp
in
aam
inc
sub
xor
aam
xlat
iret
xchg
xacquire
loopne
and
mull
fistl
xchg
xchg
mov
adc
cmp
xchg
sbb
fimull
adc
inc
outsl
cmp
cmp
xor
pop
or
inc
and
push
inc
sti
cmp
cmpsb
adc
fimuls
daa
adc
mov
jnp
adc
xor
data16
push
lahf
mov
mov
inc
push
int3
lret
scas
cmp
and
fs
cmp
clc
insl
js
dec
mov
stc
clc
cwtl
fscale
jno
xor
or
lahf
jp
sarb
mov
dec
xor
mov
jge
dec
jg
cltd
fsub
adc
sti
xchg
jns
dec
xchg
clc
fcomi
xchg
js
out
push
fnstcw
ljmp
add
lret
push
call
outsl
ret
dec
cmp
jle
fstp
mov
test
stos
dec
inc
mov
mov
jae
in
jnp
cmp
mov
in
xor
xor
or
gs
es
xchg
sbb
xchg
shrb
add
test
pushf
stc
test
mov
cwtl
ljmp
push
push
adc
test
or
nop
leave
sbbb
xlat
imull
xor
ficompl
pushl
fisttps
pushf
fdivs
cmp
loop
inc
fdivs
loop
or
sub
jp
gs
adc
fistl
xlat
fsubrl
or
jmp
xor
stos
mov
cmp
adcb
sbb
lahf
push
or
jmp
xlat
sub
lret
dec
fcomps
mov
stc
repz
fistl
inc
fistl
xlat
loopne
mov
and
pop
sub
mov
repnz
filds
fisttpl
cmp
lret
pop
mov
arpl
xor
add
fsubs
je
fwait
cmp
repnz
aas
jno
lcall
cli
scas
pop
sbb
jmp
lahf
jne
mov
sbb
dec
hlt
sub
test
aam
push
ja
pop
or
lret
imul
add
add
clc
jbe
stos
fmuls
incl
mov
sbb
xlat
cmp
mov
stc
add
aad
xor
push
mov
int3
es
jb
testl
jp
pushf
insl
cli
mov
fimull
or
adc
lods
call
xlat
lahf
cmp
mov
pop
clc
pop
decl
jmp
xor
fildl
xlat
enter
xlat
jnp
or
xlat
fnstsw
fdivrl
inc
push
push
dec
ja
fwait
jne
ss
adc
mov
clc
dec
mov
mov
testb
xchg
or
jns
fldt
and
jmp
repz
fistpl
add
xor
inc
push
fcmovnbe
adcb
mov
or
daa
imul
js
sbb
data16
leave
pop
aam
push
out
sti
sub
scas
add
jnp
insb
js
sbb
xor
js
cmpsl
sub
or
sarl
fisttpll
andb
fbld
fidivrs
inc
orb
sub
cmp
popf
test
inc
ret
push
cmp
jge
jnp
inc
shrl
xor
push
add
aad
add
and
insb
lods
push
adc
sub
dec
insb
icebp
fcmovnu
mov
mov
push
and
cmp
cmp
push
pop
pusha
inc
cmp
js
decl
pop
hlt
ror
mov
jecxz
sti
ds
add
sarb
pop
std
xor
jns
fninit
mov
es
fld
mov
adc
cmp
rclb
add
enter
xor
rcll
add
mov
enter
or
ret
loope
jne
jno
loope
rorl
fstps
dec
inc
pop
jns
dec
iret
insb
sbb
add
inc
out
push
imul
add
aad
adc
decl
and
sbb
adc
mov
fcmovnb
fldl
sub
rcll
fcmove
stos
insb
pop
adc
in
outsb
sbb
mov
lods
and
fcmovnbe
pop
fsubr
xchg
inc
jmp
aad
push
xor
jecxz
sub
jns
pop
add
out
sub
push
inc
mov
and
jmp
add
xor
rolb
pop
jp
imul
iret
jl
mov
cmp
adc
invd
lea
push
fisttpl
pusha
fwait
push
jl
call
in
mov
push
push
xchg
or
cmp
mov
push
roll
arpl
lock
inc
pop
adc
or
adc
pop
pop
fsubs
jmp
dec
cmc
test
sub
jmp
inc
jge
in
fistpll
fnstenv
push
xor
cmp
push
pop
sub
push
iret
cmp
popa
dec
mov
in
clc
mov
fistpl
mov
cmc
andl
out
bound
add
ds
dec
ret
push
stos
adc
aad
and
int3
sub
and
std
add
dec
or
push
je
jmp
rcrl
mov
adc
add
call
or
dec
add
shr
inc
sbb
add
add
cmp
lea
sbb
cmp
push
cltd
mov
cld
xor
leave
pop
mov
mov
mov
xlat
pop
mov
pop
pop
or
inc
add
in
js
xchg
roll
pop
pop
pop
jp
mov
mov
loopne
fstps
cmp
cmp
subb
dec
icebp
pop
xor
shrb
or
add
or
jno
lahf
inc
sub
mov
xchg
mov
cmc
push
mov
sbb
fwait
jmp
cs
loope
sub
shrl
pop
std
mov
jmp
aad
lcall
in
or
incl
icebp
sbb
xor
adc
icebp
jl
cmp
mov
xlat
jmp
add
mov
add
fsubr
sahf
sbb
cmp
dec
leave
scas
inc
jnp
jmp
xlat
sub
out
and
out
mov
mov
or
arpl
adc
push
cwtl
faddl
rorl
xchg
or
inc
jmp
pop
cmp
inc
dec
mov
pusha
cmp
test
fistl
cmp
lret
inc
clc
push
xor
push
add
lret
dec
test
repz
fucomi
fwait
lods
lret
lcall
jmp
fstpt
fdivrl
pcmpeqd
into
mov
mov
add
dec
lods
xor
mov
leave
jnp
andb
xor
rcrl
stc
lods
dec
or
inc
add
pushf
stc
jp
or
push
push
sbb
ja
lods
add
ret
fcmovne
push
cmp
or
jmp
jae
cli
in
add
cwtl
add
rorl
push
out
lcall
aam
push
fldt
inc
inc
add
out
mov
or
lock
lock
bound
sarl
pop
ljmp
push
mov
push
mov
mov
lcall
adc
shrl
cmp
mov
aaa
in
call
xor
in
and
xor
push
ja
out
jb
push
inc
incl
jle
fadds
arpl
enter
add
or
add
jnp
inc
pop
inc
fstpl
inc
repnz
mov
or
mov
push
fwait
or
or
jg
push
adc
ss
outsl
lock
mov
xor
mov
loope
add
stos
xchg
sbb
rcl
sub
mov
or
sub
pop
dec
or
xor
push
sub
fcmovbe
cld
mov
clc
test
shl
clc
into
std
and
in
add
fnstenv
xor
push
iret
mov
loop
fcmovbe
leave
push
mov
psllw
loope
clc
xor
imul
xor
cmp
loope
mov
adc
inc
fmuls
mov
cmp
jns
cmp
jne
inc
pop
aad
mov
rorl
pop
ret
dec
jnp
sub
les
xor
enter
sub
imul
cwtl
call
inc
lret
mov
xor
leave
cs
add
ret
jg
jnp
jl
cmp
xlat
xor
or
push
ror
imul
pop
add
mov
add
enter
in
xchg
xor
cmp
enter
sub
lcall
fwait
push
sub
or
jnp
xchg
jne
mov
cmp
mov
xor
arpl
push
xor
mov
lret
jecxz
in
pop
xchg
aam
lock
cmp
clc
push
sub
fcomps
lcall
ja
push
mov
mov
fcmovbe
inc
xlat
stos
cmpsl
fistps
xor
ss
or
clc
subb
push
orl
rolb
dec
lret
fildl
dec
mov
add
sarl
loope
push
jne
lahf
mov
aad
repnz
jns
push
sahf
jle
add
cmp
pop
jno
add
sub
ss
rcll
xor
push
fdivrl
xor
inc
stos
rolb
ja
or
cmp
mov
sbb
mull
or
inc
pushf
jle
insb
fcomi
icebp
or
inc
mov
inc
in
xor
cmp
xchg
outsb
rorl
inc
dec
sbbb
add
sarl
fistl
sarl
fstpl
jg
fldl
mov
add
pop
bound
jecxz
mov
cmpsb
in
outsl
test
mov
xchg
in
inc
adc
loopne
lcall
repnz
cmp
shll
adc
cmp
jns
hlt
xor
sub
test
mov
fsts
stc
cmp
mov
cld
mov
adc
in
or
lods
jns
shll
push
imul
add
sbb
push
xchg
dec
mov
mov
test
push
jae
jecxz
out
cmp
fmuls
cmpb
subb
cmp
push
adc
jl
out
shll
hlt
js
dec
pop
jecxz
jmp
inc
adc
call
lods
pop
hlt
jnp
sbb
xor
push
rcll
popa
dec
sub
call
xor
and
xchg
cmp
push
mov
enter
adc
sbb
ret
fildl
cltd
shlb
jae
movsb
jne
dec
inc
movsb
jmp
inc
lret
shr
jmp
fcmovne
lret
out
dec
cmp
cld
hlt
cwtl
or
leave
ficompl
ret
cmp
rol
fs
dec
aam
movsl
jmp
dec
xor
jecxz
add
stc
in
arpl
push
mov
xor
mov
sub
or
xor
insb
xor
sarl
addl
jmp
jmp
ret
xchg
push
fcmovu
stc
cmpsl
adc
add
jo
js
lret
dec
add
jno
adc
sar
test
stc
sub
es
and
mov
jmp
push
push
repz
xchg
jnp
std
dec
cmp
inc
or
clc
sub
mov
popf
mov
mov
addr16
adc
adc
inc
mov
jne
inc
test
enter
mov
iret
mov
popa
mov
shlb
cli
mov
roll
dec
mov
inc
jmp
pop
data16
fidivrl
mov
mov
into
nop
orb
mov
inc
fcmovbe
sub
sbb
xor
adc
mov
repnz
mov
ror
fistl
add
or
dec
push
enter
sub
mov
iret
insl
loop
xor
jg
fldt
jmp
icebp
cmp
es
jno
popf
pop
jp
push
cltd
push
pop
bound
and
cmp
test
jmp
mov
pop
roll
leave
dec
jno
jmp
pop
cmp
popa
fildl
jecxz
clc
cmp
adc
or
iret
lret
push
shl
leave
jmp
mov
xchg
das
js
or
xrelease
mov
mov
leave
movsb
daa
mov
push
adc
add
in
sbb
mov
aam
loopne
rcrb
call
mov
enter
add
inc
out
imul
fwait
dec
lcall
mov
lock
mov
fimuls
sub
mov
pop
jecxz
loope
orl
adc
jecxz
les
adc
xchg
adc
jg
test
xlat
hlt
mov
dec
add
lret
aaa
shlb
jnp
clc
mov
and
fstpt
sahf
test
ret
lret
cmp
lahf
mov
push
call
aam
xor
fcoml
pop
sub
push
inc
cwtl
jg
dec
sub
ljmp
ljmp
lea
movsb
mov
das
push
test
mov
enter
fcmovnb
lahf
xchg
xor
pop
jno
sub
or
lods
mov
mov
mov
mov
or
ss
arpl
mov
mov
mov
enter
add
pushl
cwtl
push
roll
dec
cmp
or
sahf
jecxz
sub
ljmp
fiaddl
pop
jnp
push
fucomip
or
jns
fcompl
jns
and
stc
sbb
clc
test
mov
and
xor
fcmovnb
mov
arpl
xchg
sti
and
fstl
inc
nop
in
icebp
pop
push
scas
addr16
arpl
xor
imul
xor
test
fcompl
mov
rcrl
scas
mov
icebp
pop
xorl
inc
sti
push
rolb
les
or
mov
mov
mov
cmp
das
or
dec
int3
mov
xor
sar
mov
push
fildl
adc
rcrl
dec
inc
ljmp
xor
sbb
enter
scas
addl
mov
pushf
sbb
mov
shlb
icebp
repnz
ljmp
cwtl
bound
jg
jnp
sub
mov
ljmp
xor
mov
or
or
lret
pop
stc
cmp
test
std
int
cmp
fcomi
add
lret
adc
mov
cmp
dec
xchg
and
jg
clc
mov
popa
dec
sbb
rorb
xor
mov
movsb
cs
adcb
std
int3
xchg
stos
pushl
sub
xchg
jge
enter
enter
test
sahf
dec
cs
pop
pop
mov
cmp
cmp
push
lret
nop
dec
add
xor
or
inc
clc
inc
roll
inc
fnstcw
or
imul
or
fstps
xchg
pop
stos
in
pop
pop
xor
jne
ss
push
xor
fdivs
das
lret
ja
adc
leave
mov
int3
cmp
mov
and
dec
fstl
inc
cmp
out
ds
xorl
ljmp
sbb
jecxz
pop
shr
xchg
push
lock
jecxz
insl
rolb
lock
mov
mov
cmp
ret
xchg
fidivl
jnp
jecxz
add
lcall
adc
mov
mov
sbb
xlat
test
and
clc
xchg
mov
fldt
and
shr
js
xchg
leave
inc
add
sbb
loope
add
xor
int3
xor
test
movsb
leave
out
js
ds
mov
jnp
adc
dec
or
or
rol
int
fdivrl
lret
xor
xorl
movsl
mov
jmp
daa
add
or
xor
mov
rol
dec
lret
xlat
mov
jmp
xor
pop
test
clc
loopne
mov
in
jb
mov
and
mov
popf
xor
mov
rolb
mov
jae
pop
popf
jecxz
cmp
push
jae
mov
pop
rorb
adc
arpl
dec
cmp
and
dec
loop
xor
push
out
scas
js
jae
push
in
repz
jo
cmp
pop
iret
mov
pop
mov
outsl
cmp
rcll
cmpsb
mov
out
jg
pop
cs
push
test
aam
jecxz
or
lea
jmp
loopne
leave
cmp
loopne
jbe
pop
jo
xchg
orb
cmp
or
aam
aad
dec
jecxz
shll
fwait
leave
pop
and
aam
push
cmp
and
stos
aad
dec
jecxz
cmp
and
dec
inc
xchg
xor
xchg
lds
test
hlt
jae
mov
roll
fcomi
ficoml
fistl
shrb
mov
add
pushf
mov
repz
aaa
icebp
fnstenv
in
cmp
cli
imul
roll
stc
inc
adc
dec
dec
cmp
jmp
cmpsb
outsl
jo
xchg
pop
mov
pop
jg
sub
add
cmp
ret
in
mov
test
pop
mov
loopne
ficoml
daa
ja
orb
std
hlt
fdivs
rcll
mov
adc
or
jns
lret
sub
jp
push
dec
mov
add
pop
out
jmp
cwtl
ja
out
sbb
movsl
or
dec
lret
test
sub
lahf
enter
test
pop
imul
ret
and
add
cld
pop
sub
mov
xchg
in
add
adc
mov
pop
aam
leave
mov
loope
scas
sti
inc
xchg
pop
movsl
jge
cmpsb
and
mov
imul
push
jle
ljmp
ja
or
cmp
jp
sub
test
call
sarl
jge
inc
sbb
jecxz
mov
pop
in
and
mov
sahf
loopne
mov
fsub
repz
xor
jmp
cmpb
test
jl
arpl
gs
movsl
loopne
fwait
cmp
repnz
lods
and
ljmp
dec
mov
adc
sbb
jl
das
shll
shl
xchg
aas
bound
cmpl
sar
push
stc
adc
push
lock
push
or
sub
loopne
test
arpl
adc
sahf
adc
mov
cmp
cmp
enter
lcall
jae
mov
mov
pop
fbstp
inc
pop
les
mov
dec
mov
sub
mov
inc
push
jno
pushf
adc
fwait
cmp
add
or
pop
inc
adc
xchg
ljmp
ret
adc
les
cmp
xlat
or
fmull
imul
cmpb
stc
xchg
out
or
dec
xor
clc
lahf
sbb
or
aad
sub
imul
sbb
test
jae
or
inc
mov
inc
dec
mov
cwtl
fsubrs
fprem
add
cmp
pushl
or
lret
mov
sbb
fisttpl
fstps
xor
jae
jnp
iret
or
aad
xor
out
imul
sbb
stos
fbstp
cmp
cmp
or
mov
lcall
mov
push
cmp
leave
cmp
inc
jae
or
clc
inc
pop
fldpi
cmp
mov
sbb
sub
cmp
mov
fisubrl
adc
aad
xor
or
test
or
pop
fld1
and
mov
cwtl
or
clc
clc
sbb
jnp
push
ja
sbb
stos
fnstcw
xor
cmp
jae
or
fldcw
xchg
stc
xor
imul
sbb
stos
pop
jae
jnp
push
or
fnstcw
lcall
mov
dec
out
sbb
mov
fisttps
pop
mov
cmp
cmp
repz
ss
stc
jnp
ljmp
dec
and
dec
add
ja
mov
fistl
cmp
idivl
std
insl
jnp
cmp
cltd
aad
repz
out
add
ret
sub
cwtl
fwait
xor
xor
mov
sbb
jae
mov
ficoml
call
mov
movsl
pop
sub
fimull
mov
cli
ja
xchg
fsubrs
call
dec
imul
js
push
jnp
or
add
cwtl
fcmovu
push
mov
inc
loop
out
or
mov
mov
pop
lea
fwait
mov
mov
mov
xchg
pop
xor
lret
jmp
cmp
nop
fidivl
fcmovnu
xchg
sbb
ljmp
testb
icebp
sub
xlat
ds
mov
lahf
cmp
mov
mov
sbb
repnz
jl
out
adc
jmp
sbb
mov
xchg
lock
rcrl
mov
sub
loope
cmp
inc
rcll
mov
push
nop
divb
popf
mov
sbb
testl
dec
outsl
jnp
lods
movsb
enter
mov
add
jl
je
nop
adc
fwait
sub
xor
not
mov
out
test
pop
and
notl
add
adc
push
sbb
stc
jecxz
or
cmp
pop
loope
push
pop
repz
push
ror
testb
jae
lcall
stos
xor
test
cli
sbb
test
loope
sbb
int
push
xor
js
int
jb
xchg
call
les
sub
sub
jnp
ficoml
or
out
nop
divb
movsl
mov
lret
jae
in
js
mov
mov
jp
fdivr
hlt
scas
jmp
cs
in
jge
out
loop
fistpl
jae
jg
sarl
jecxz
or
loope
fildl
fidivrl
jns
fwait
push
addl
imul
ror
sarl
or
clc
out
fcmovbe
push
push
aad
add
sub
add
cs
lret
rcrl
sbb
fisubl
pop
fcmovnu
jp
push
mul
xlat
pop
lret
clc
test
test
mov
fimull
mov
fdivr
ss
dec
mov
fisubrl
mov
outsl
fucomi
mov
sbb
jnp
or
xchg
cwtl
add
fiaddl
inc
sub
push
stc
xor
xchg
negb
pop
dec
imul
inc
fwait
pop
or
jns
test
xor
not
mov
mov
loope
dec
jae
jnp
mov
and
fistl
mov
xchg
sub
test
push
call
xchg
je
jecxz
ja
xchg
pop
jl
xor
int
mov
pop
xchg
fmul
lods
pop
push
fsubrp
or
cld
sbb
fbld
aad
cmp
leave
or
insl
lods
in
fistpl
mov
cs
pop
test
call
call
sbb
cmp
push
aad
mov
mov
xchg
out
xor
xor
sbb
test
mov
call
bound
sar
fiaddl
mov
rcr
or
jmp
or
fcomps
xchg
lock
adc
fstps
mov
mov
xor
outsl
cmp
mov
pop
fistl
aad
push
mov
pop
xchg
lahf
mov
lods
pop
add
fidivrl
stc
or
cmp
cli
fimull
testb
sub
push
shrb
mov
push
pop
stc
mov
and
or
jp
mov
dec
cmp
je
call
adc
pop
fisttpl
pop
mov
in
pop
divb
fiaddl
imul
jo
lcall
outsb
stos
push
ljmp
push
xlat
lods
pop
int3
cmp
sub
sbb
fwait
or
pop
lahf
ficompl
mov
arpl
pop
mov
loopne
inc
fistpl
test
pop
jnp
mov
sub
dec
jge
bound
jp
sbb
mov
add
xor
int3
jmp
mov
mov
mov
sbb
lret
add
mov
or
mov
mov
and
sub
mov
loope
pop
mov
enter
xlat
std
cmp
jp
sub
add
mov
sub
pop
sbb
lcall
sbb
mov
ficompl
test
sbb
dec
cmp
lret
enter
cmp
mov
push
divl
stc
lcall
fcmove
fnstcw
cmp
lahf
call
xchg
stc
test
add
push
cmp
mov
cmp
test
xchg
aas
arpl
rcrb
cli
xchg
mov
push
jecxz
mov
pop
xchg
jp
lock
mov
rcr
mov
lock
mov
push
daa
testb
stos
dec
pop
int
loope
xor
add
ss
jmp
xchg
cld
lret
cmpsl
cmc
enter
or
xor
cmpsl
push
mov
mov
cmp
mov
jmp
aad
add
loopnew
push
cmp
test
test
mov
push
test
mov
mov
and
push
fiaddl
pop
clc
jbe
mov
js
fildl
or
je
push
fistl
hlt
test
mov
mov
ja
clc
fisubrl
mov
sub
mov
xchg
fimull
jl
fcoms
in
cltd
lds
dec
fwait
mov
call
js
mov
sub
into
xor
insb
add
push
jmp
sub
pushf
in
jge
inc
sub
xor
int3
shr
mov
push
sub
mov
enter
jecxz
ja
fdivr
ljmp
test
dec
cwtl
jae
push
shrl
mov
imul
pushf
mov
jno
push
orl
shrl
inc
lret
mov
push
mov
loope
cmp
int3
cmp
fld1
mov
imul
cmp
enter
xor
inc
divb
sar
insl
in
xor
int
xchg
xchg
sbb
sbb
fcmovne
outsb
mov
fdivrs
aad
or
dec
lods
clc
cmp
add
cmp
cmp
pop
mov
pop
ret
jecxz
ja
call
hlt
mov
test
mov
ljmp
push
cwtl
push
cmp
mov
push
or
jp
jmp
mov
cmc
leave
daa
iret
jbe
lcall
lcall
fiaddl
xor
iret
fimull
push
pop
outsl
mov
pop
fcom
xchg
lock
mov
push
fisubrl
mov
fimull
mov
add
fsub
cmp
xchg
jp
fisubrl
pop
notb
mov
jge
mov
jg
xchg
stc
test
fisubrl
test
ficoml
mov
sbb
cmp
cmp
fisubrl
ss
jae
push
iret
ja
xchg
cmp
fidivrl
cmp
dec
ficompl
jnp
clc
dec
es
pop
xlat
dec
push
fildl
lret
sbb
jmp
imul
rclb
mov
cmp
sbb
fisubrl
inc
in
pop
scas
or
jb
xchg
lret
sub
cmp
js
sub
imul
jns
fwait
movntq
ljmp
pushf
clc
mov
lret
leave
stos
in
test
pop
fmuls
leave
out
mov
in
lret
ljmp
or
mov
xor
stos
aam
or
add
mov
pop
sub
lret
ja
adc
pop
psllw
call
enter
xor
fwait
inc
cmp
pop
arpl
fcmovbe
pop
jmp
cmp
ficompl
mov
pop
dec
mov
mov
sbb
insb
lret
add
fidivl
xchg
cltd
fmull
repz
jnp
mov
js
cmp
push
inc
rorl
jno
repz
cmp
cwtl
mov
mov
ds
mov
dec
sub
cmp
jmp
pop
cmp
cmp
repnz
iret
mov
repz
xchg
rcrb
sbb
clc
sub
repz
sbb
lods
or
mov
mov
push
mov
xor
sbb
fsqrt
adcl
xchg
sub
sub
mov
sub
pop
cmpsl
cmp
push
sbb
dec
xor
gs
fisttpl
outsb
push
push
sbb
test
mov
mov
gs
and
mov
rorb
add
imul
jnp
mov
fwait
push
mov
sub
test
test
add
mov
fwait
sub
leave
loope
dec
jmp
lock
shrl
ja
sbb
mov
call
pop
cmp
jmp
lret
arpl
pop
loop
jecxz
or
out
mov
mov
push
int3
fisubrl
pop
mov
pop
lds
stc
lock
out
sbb
mov
ds
sub
fstpt
pop
jno
mov
add
cmp
cltd
hlt
jl
xlat
fxch
subb
or
sub
or
cmp
mov
jnp
ljmp
or
jns
imul
mov
lods
ljmp
test
or
sti
daa
sbb
sub
xor
in
mov
mov
lret
outsl
mov
roll
add
xor
mov
lods
mov
xchg
leave
sbb
imul
cli
outsl
push
aaa
sbb
mov
sub
mov
mov
mov
out
mov
out
sbb
fnsave
or
js
aad
pop
enter
mov
jge
mov
inc
je
or
or
cmp
mov
jo
stos
mov
pop
mov
sbb
cwtl
pop
xor
mov
idivl
test
xor
add
ss
mov
xor
decl
cs
aad
inc
mov
sbb
inc
lcall
sbb
ds
pop
js
jae
push
mov
bound
mov
test
ss
sbb
dec
iret
mov
sbb
cltd
mov
fnsave
stc
fiaddl
fstp
fsub
or
imul
sbb
mov
enter
dec
test
sbbl
fistpll
jnp
sbb
jns
xor
sbb
cmp
fwait
jns
jl
loope
mov
jae
jne
sbb
ljmp
inc
cmp
sbb
mov
sbb
jb
xor
sbb
jge
mov
pop
mov
js
rcrl
push
aad
sbb
cmp
dec
fcmove
ss
aad
jnp
inc
ds
pop
ja
sbb
scas
xor
or
fnstcw
lock
inc
push
mov
mov
mov
fdivs
cmp
lods
mov
leave
sbb
dec
or
fstp
fwait
sbb
sub
cltd
jnp
pop
sub
roll
and
pop
and
in
mov
mov
fsts
adc
aaa
movsl
int
pop
dec
mov
pop
inc
hlt
sbb
lret
outsl
lock
or
fwait
inc
in
sbb
or
xor
test
pop
cmp
sbb
call
fmuls
dec
aam
jo
and
fadds
lret
int3
sbb
call
xor
mov
fisubrl
jb
jnp
adc
fcompl
fisubrl
lcall
aam
add
pop
lret
ja
sub
xor
mov
je
or
fsubrs
add
dec
sbb
or
sbb
cmp
xor
jmp
pushf
mov
std
xchg
add
sbb
dec
mov
push
xor
sub
inc
mov
ss
mov
cmp
addl
subl
imul
in
xor
sub
jg
jmp
enter
xor
inc
sub
lcall
xor
arpl
sub
fildll
push
insl
fmuls
sbb
js
es
dec
stos
ljmp
mov
push
push
mov
jo
sbb
lcall
mov
dec
pop
mov
mov
sbb
cmp
imul
mov
sub
ljmp
js
jg
in
cmp
cmp
lea
pop
xlat
mov
dec
inc
repz
xchg
inc
sbb
je
or
fst
push
divl
or
neg
sarl
cmp
push
cwtl
nop
stc
xor
jnp
stos
fistpl
or
cmp
sub
fwait
mov
pop
clc
fdivr
out
cmp
cwtl
sbb
fnstcw
mov
cmp
xor
cmp
dec
mov
cmp
inc
gs
fisttpl
mov
shrl
sbb
icebp
adc
clc
insl
cmp
and
jo
sub
and
clc
outsl
clc
sbb
fstpt
inc
cmp
or
ja
js
jae
pop
outsl
cwtl
dec
in
mov
mov
stc
xor
xchg
andl
sbb
mov
lret
clc
outsl
or
ljmp
cli
dec
fwait
stc
or
imul
test
xlat
jmp
mov
insl
jmp
lock
add
and
lret
mov
jmp
pop
push
xlat
mov
cmp
mov
and
jecxz
fildll
xchg
cmp
jmp
xor
test
imul
std
cmp
inc
and
inc
fidivrl
sbb
ja
xchg
imul
mov
inc
mov
clc
cmp
jnp
in
ja
jae
adc
mov
cmp
jg
pop
and
push
ficoml
dec
fbstp
mov
arpl
dec
pop
cmp
mov
mov
adc
lret
jb
roll
or
mov
mov
arpl
jo
repz
push
dec
jno
sbbb
xchg
jnp
mov
enter
jae
in
fcmovbe
jns
clc
adc
add
jp
lcall
adc
stos
adc
adc
ja
lock
testl
push
pop
push
cmpsb
call
mov
jnp
jae
leave
jbe
push
push
test
jbe
fwait
adc
mov
push
push
mov
sub
cmp
call
push
xchg
leave
in
mov
lcall
aam
hlt
lret
fsts
cmc
or
or
xlat
jmp
fsts
pop
or
push
leave
xchg
cmp
xor
push
test
cli
sub
xlat
leave
rclb
cltd
sub
scas
jne
ja
scas
jne
xchg
ljmp
repz
dec
cmp
sbb
jne
push
cmp
je
aam
shlb
cmp
mov
shlb
adc
mov
or
enter
xchg
mov
push
sbb
xchg
cmp
fsts
ja
cmpsl
mov
stos
push
mov
adc
sub
cmp
dec
ret
xchg
jns
pop
ud0
in
pop
dec
insb
negb
call
mov
test
je
shlb
jge
enter
adc
adc
enter
fwait
xor
lret
addl
mov
lods
clc
enter
fwait
outsl
mov
and
loopne
fwait
dec
fwait
cmc
mov
test
sub
ss
movsb
pop
leave
movsb
jl
fxch
inc
fwait
xchg
pop
rcrb
ja
sbb
dec
xlat
sub
xchg
push
cmp
je
mov
dec
in
push
cmp
fwait
shlb
mov
xchg
cli
repz
and
jl
jnp
or
pop
mull
fdivl
insw
mov
cli
cmp
call
mov
ja
psubusw
mov
repz
dec
fadd
sub
dec
add
sbb
sub
int3
ja
cwtl
add
jne
and
rcrb
mul
fwait
add
add
repnz
add
dec
je
mov
mov
mov
add
sbb
fsubl
jmp
mov
mov
ja
or
testl
inc
test
jno
sbb
xlat
fwait
inc
out
aam
cmp
mov
fistpl
test
sbb
xchg
sub
sbb
cld
das
or
mov
test
mov
adc
sub
fdivrs
fldcw
or
mov
rcrl
out
push
ja
sbb
mov
sub
xchg
jb
cld
imul
xchg
sbb
pop
lret
xor
das
xor
dec
imul
sbb
fidivrs
mov
mov
cs
push
adc
push
sar
jmp
bnd
mov
fucomip
xchg
pop
out
lcall
cmp
flds
aam
aad
mov
popf
fcomps
and
jecxz
stos
divl
call
test
adc
mov
sub
stos
testb
fcomps
iret
dec
pop
std
outsl
cmp
cmp
push
lret
idivb
mov
and
cmp
cmp
xchg
dec
fdivs
jle
sub
fwait
push
inc
dec
aam
mov
push
lock
xchg
mov
imul
sbb
adc
dec
xor
sub
shrb
scas
or
lret
xor
add
es
sub
pop
push
imul
sbb
fwait
cwtl
inc
dec
in
jg
lds
or
scas
aam
add
mov
fldcw
mov
dec
mov
jns
ja
rcrb
add
lcall
aaa
and
push
mov
sub
sti
pop
inc
mov
mov
cmpsl
cmp
push
jl
test
sub
inc
sbb
dec
clc
xchg
cmpb
imul
fwait
in
and
mov
mov
iret
pop
inc
dec
clc
lcall
push
dec
fstps
or
cmp
mov
dec
dec
fadds
xor
fisubl
mov
mov
or
cmp
sub
cmp
loopne
mov
das
push
lods
or
adc
call
loopne
mov
mov
push
nop
cmp
sub
xor
adc
js
inc
xchg
pop
fsts
adc
repz
lock
push
sub
mov
xor
out
fwait
insb
dec
mov
mov
jge
xor
pop
hlt
mov
icebp
jl
jg
mov
fwait
mov
jno
inc
mov
mov
test
pop
ret
sbb
sub
fadds
mov
aam
mov
or
loopne
pop
mul
pop
mov
sub
pop
jnp
cmp
cli
mov
adc
jnp
repz
fwait
cmp
add
push
xlat
jge
aaa
and
pop
xor
and
sbb
dec
fcomps
dec
and
icebp
or
jmp
jnp
jecxz
std
mov
test
imul
sbb
imul
adc
imul
cmp
fstpt
cwtl
dec
iret
pop
mov
nop
fadds
cltd
add
push
or
cmp
jmp
xlat
fadds
adc
clc
pop
cmp
gs
dec
sbb
add
loop
cmpsl
fwait
ss
stos
lret
mov
cmpsl
loopne
inc
js
lret
push
sub
dec
or
imul
pop
jbe
loopne
pushf
shrb
pop
push
jbe
lret
loopne
sub
hlt
mov
dec
sub
cmpl
je
inc
jbe
adc
leave
enter
in
call
ja
mov
repnz
mov
pop
fnstcw
fs
pusha
xor
lcall
mov
mov
repnz
mov
cmp
fcomps
sbbl
jp
imul
imul
adc
repz
pop
adc
stos
dec
xchg
mov
int
scas
cmp
push
lret
testb
sbb
fisttpl
sbb
aam
pop
jle
adc
in
stc
cmp
dec
sarl
cmp
mov
pop
sub
add
ss
sahf
outsb
xchg
clc
imul
mov
pop
ljmp
mov
and
adc
sarl
ret
lcall
cli
inc
xor
mov
ss
lock
sub
dec
lods
jnp
mov
pop
inc
and
mov
dec
rcrl
aam
cmp
jns
or
fldcw
test
dec
pop
clc
pop
scas
adc
in
cmp
push
pop
push
cld
pop
test
test
cmp
js
out
test
rolb
enter
add
arpl
ret
sarb
sahf
loopne
xlat
add
outsb
aam
dec
adc
mov
cmp
bound
test
cmc
js
mov
int3
enter
add
pop
shlb
fcoms
enter
or
mov
sub
fcomi
cld
mov
and
push
repz
nop
or
push
jl
fwait
mov
lds
lods
mov
pop
or
mov
jg
lock
flds
xor
pop
sub
jecxz
idivl
push
mov
fdivs
call
fs
outsl
jmp
fisubl
cwtl
jns
out
jns
fidivs
rolb
jmp
loopne
clc
pusha
call
jmp
mov
jmp
leave
add
sub
dec
int3
shrb
out
push
lea
subb
ss
mov
lret
pop
fwait
adc
adc
sbb
and
popa
mov
push
dec
adc
jmp
subl
sub
lock
fs
pop
or
dec
jbe
loop
stc
int
test
je
mov
mov
loopne
adc
test
jns
fstpt
dec
lock
ljmp
cmp
or
mov
mov
xor
dec
or
mov
iret
mov
fdiv
pop
mov
or
jo
inc
pop
or
mov
jecxz
cmp
and
repz
jnp
mov
xor
fsubr
xor
mov
add
cmp
mov
subl
in
les
mov
push
les
jmp
ror
adc
les
or
scas
or
jnp
xor
in
mov
ja
pop
fcoms
sti
movsl
pop
mov
jp
imul
cmp
mov
jnp
cmp
loopne
int3
popf
xor
sub
cmp
leave
xor
clc
lods
jae
mov
sbb
mov
xor
inc
hlt
imul
stos
out
insb
add
jmp
sbb
in
push
les
icebp
xor
adc
fs
cwtl
inc
jno
push
mov
pop
push
cs
xchg
int3
es
mov
sbb
push
sub
add
lret
cmp
sub
push
dec
sbb
pop
add
push
adc
js
mov
xor
add
sub
movsl
xor
dec
inc
fldt
clc
jecxz
cmp
test
sahf
sbbb
dec
leave
stc
pop
out
lock
sbb
xlat
out
adc
push
jne
dec
xchg
mov
sbb
jmp
inc
pop
imul
xchg
imul
shrl
imul
test
std
xor
xchg
fwait
xlat
leave
jecxz
mov
adcb
mov
or
dec
test
shlb
xchg
jnp
stc
jmp
out
mov
mov
shrb
and
adc
cmpsl
int3
cmp
mov
pusha
shlb
fbld
in
pushf
sub
mov
cld
data16
in
fidivs
jmp
mov
cmp
in
jmp
xor
cmp
test
mov
inc
std
push
lahf
xor
dec
jbe
or
iret
cmp
fstl
leave
clc
adc
test
nop
imul
xor
rcll
dec
and
cmpl
push
cmp
mov
fs
push
jnp
leave
iret
icebp
clc
inc
xchg
cld
dec
sbb
dec
lods
jb
xchg
clc
sub
mov
shll
cmpsl
sub
repnz
lods
dec
or
out
pop
movsb
hlt
lock
xor
lock
enter
or
mov
loope
dec
cmc
lock
leave
ljmp
mov
pusha
mov
cmp
jns
stc
jnp
add
stos
sbb
lods
push
icebp
fcmovnu
push
clc
cmp
cmp
outsb
adc
xchg
jmp
jnp
xor
sub
stc
inc
adcl
mov
in
mov
push
mov
lock
dec
loopne
pop
cmp
popf
adc
aad
xchg
loope
add
in
mov
inc
mov
sub
dec
xchg
sub
cmpsb
mov
fdivr
ror
dec
jnp
jecxz
adc
lds
push
add
mov
shrl
insb
xor
ljmp
fisttpl
aad
or
iret
aad
push
fs
pop
xor
pop
cmp
pushf
jns
push
jecxz
fsubrp
fstl
imul
xor
pop
cmc
sub
int3
lods
jge
jnp
jmp
bound
clc
lock
push
or
ljmp
add
aas
hlt
ljmp
xor
lahf
and
mov
call
or
pop
ljmp
aad
stc
into
pusha
push
mov
test
jmp
in
dec
iret
test
test
dec
mov
or
or
sbb
push
cmp
mov
dec
inc
gs
sarl
and
sti
in
cwtl
adc
lock
out
clc
sub
push
sbb
lret
push
jnp
mov
mov
adc
shll
xor
sub
inc
iret
adc
jl
xchg
mov
xlat
dec
scas
icebp
test
shrb
push
addb
sbb
pop
in
fistpll
xchg
cld
or
lret
lret
add
inc
aam
imul
mov
aad
testl
addr16
sarb
dec
dec
xchg
jno
sbb
loope
push
jno
leave
out
cwtl
push
aas
push
xchg
cmp
add
imul
pop
mov
stos
int
cmp
jnp
jp
sub
test
test
sub
inc
cmp
xchg
add
fisttpll
cli
jb
ss
fyl2xp1
mov
cmp
cmp
loop
adc
push
mov
pop
dec
mov
orl
sahf
arpl
sub
cmp
test
imul
mov
or
inc
cmp
or
pop
xchg
sti
cmp
xor
and
pop
fistpl
pop
mov
mov
test
outsl
jmp
mov
je
lret
leave
lahf
pop
mov
pop
dec
adc
mov
or
push
xor
pop
sbb
cmp
ss
jno
mov
cmp
sub
pop
mov
sbb
mov
mov
pop
sbb
jmp
out
insb
std
dec
push
sub
and
out
cmp
xor
fwait
mov
mov
ja
adc
ss
pop
and
repz
dec
out
lret
dec
daa
mov
lret
jge
mov
rcrl
aam
and
mov
mov
pop
fwait
js
xor
mov
push
movsb
ss
fdivs
push
scas
adc
push
call
in
js
inc
imul
xchg
rcrl
mov
lret
adc
out
pop
stos
movsl
in
pop
adc
pushf
and
fnstsw
cmpsb
jno
stos
sub
jmp
pop
mov
sbb
mov
adc
xorb
sub
lret
jp
icebp
cli
jns
mov
fcmovne
dec
stc
jne
sub
pop
push
or
xor
fisubs
jo
mov
mov
stos
jmp
or
inc
shrb
jmp
cmp
or
dec
pop
lods
mov
or
dec
mov
ss
mov
lock
sbb
fildl
jg
push
call
cmp
jmp
push
jecxz
dec
movsl
mov
test
jo
adc
fs
push
jp
ret
fsubr
mov
cmp
xor
mov
adc
dec
adc
hlt
lret
rclb
scas
mov
shrl
lret
xor
jbe
jecxz
lock
adc
fxtract
sbb
ljmp
mov
and
or
imul
and
lret
xlat
pop
out
sbb
mov
sbb
cmp
shl
popa
cld
dec
rcrl
dec
push
dec
push
pop
in
iret
shrl
jns
push
or
fcmovbe
sbb
fidivl
iret
cmc
mov
or
out
test
and
cmp
hlt
sbb
scas
shrl
bound
mov
cwtl
scas
call
jmp
xor
push
sub
adc
stos
mov
mov
stos
push
dec
dec
sbb
mov
xor
inc
pop
or
outsl
hlt
hlt
lods
insb
push
add
pop
fdivs
push
inc
loop
jnp
fistpll
lods
add
mov
cwtl
cmp
fwait
fwait
push
cmp
xchg
inc
popa
fistpl
pop
xor
inc
in
sbb
dec
xor
mov
sbb
insl
mov
cmp
enter
pop
push
clc
mov
pusha
or
ds
jmp
mov
sub
inc
sti
sub
xor
clc
fisttps
sbb
lds
mov
inc
lods
sub
sub
jp
sub
clc
add
enter
ja
test
mov
sub
cmp
loopne
repz
rclb
fnsave
lret
pop
rclb
push
out
das
jo
out
sbb
lcall
test
jns
mov
xor
cmp
movsb
fdivrs
push
gs
es
test
xor
sbb
mov
fdivs
and
imul
sub
xor
push
cmpsl
ja
sub
movsb
sub
cli
imul
push
cmpsl
xchg
imul
jg
mov
push
sub
cmp
dec
dec
cmp
in
dec
xor
mov
jno
or
and
or
jge
adcb
adc
jb
enter
pushf
add
sub
sbb
pop
sbb
push
xor
out
test
or
add
out
xlat
orl
enter
mov
add
sbb
jg
popf
push
outsl
mov
inc
adc
jo
jge
pop
push
call
clc
mov
mov
push
jo
inc
dec
fndisi(8087
adcl
dec
addr16
imul
lret
cmp
cmp
pop
loopne
mov
fadd
sbb
inc
jae
or
push
inc
fcoms
or
pop
fldcw
mov
jg
adc
push
sub
inc
dec
and
xchg
lcall
jmp
or
adc
or
push
or
jne
adc
fldt
xor
inc
pushf
push
jle
hlt
dec
pop
inc
cmp
jmp
fadds
ret
jnp
jnp
push
pop
rcr
adc
popa
test
enter
lret
sbb
or
push
insb
out
in
pop
pop
mov
ja
imul
adc
test
mov
loope
mov
idivb
sbb
test
jae
pop
lock
ja
xor
iret
mov
fwait
mov
leave
sbb
call
pusha
mov
stc
sbb
mov
inc
in
xor
inc
shrb
fdivs
movups
negl
pop
jnp
sub
addl
rcl
cltd
push
pop
mov
mov
outsl
xlat
jo
jmp
jnp
lret
mov
addr16
mov
int
push
and
ljmp
adc
fstps
cmp
ja
sti
push
pop
push
nop
mov
mov
mov
cmp
mov
inc
cwtl
jae
pop
sub
jb
ss
mov
mov
mov
mov
jg
insl
sub
mov
lock
aad
lret
pop
dec
add
push
xor
adc
stos
pop
ja
mov
loop
jo
cmp
push
aam
mov
test
inc
fists
cmp
cmp
mov
or
adc
test
adc
xchg
in
pop
adc
lret
push
fcoms
add
les
sub
aam
or
xor
jnp
cmp
and
fwait
xchg
cmp
sbb
repnz
adc
push
scas
cmp
imul
adc
fmull
lock
lret
imul
sub
cwtl
push
sbb
lock
stos
mov
dec
dec
inc
pop
in
jp
fwait
sti
jg
push
outsl
ss
sbb
mov
jno
jnp
fistpll
cmp
mov
ret
xrelease
and
xlat
mov
fstpt
xor
or
sbb
lock
hlt
enter
mov
lret
call
dec
loopne
stc
call
iret
or
mov
inc
mov
ja
stc
fldcw
jo
xchg
call
sbb
pop
xchg
or
pop
pop
cmp
test
pop
push
or
rcll
dec
leave
scas
lret
pop
imul
mov
outsb
xchg
aad
xor
call
roll
test
ja
adc
lret
les
adc
sbb
adc
ss
test
jnp
jne
shrl
xchg
push
sub
js
mov
mov
iret
mov
adc
xlat
in
or
insb
mov
outsb
sub
orl
jecxz
push
and
cmovp
cmp
xchg
in
pusha
sbb
shrb
pop
cmp
add
int
pop
enter
mov
test
add
cmpl
sub
pop
jns
jae
or
dec
dec
test
ljmp
jnp
fcomps
or
lcall
adc
cltd
xlat
inc
fwait
dec
int
pop
mov
lea
sub
stc
and
lods
jo
mov
xchg
fldt
push
fs
mov
je
or
sub
enter
loop
inc
js
and
sub
mov
or
aad
push
addr16
fdivr
xor
sub
push
push
lods
mov
push
inc
sub
ja
sahf
fwait
sbb
lret
js
fxch
outsb
mov
sbb
cmp
sbb
adc
sbb
jle,pt
ja
iret
outsb
loopne
sahf
aad
pop
mov
imul
fsubrl
rcrb
test
push
pop
xor
push
xor
aad
repz
mov
dec
sbb
test
adc
xchg
sbb
or
jno
adc
sub
sbb
out
dec
fadds
cwtl
xor
sub
ret
jae
mov
aad
sub
or
cmp
mov
or
sarl
ds
dec
cmp
cwtl
jnp
xchg
les
test
dec
pop
cmp
jae
dec
sub
je
aad
pop
fldcw
cmpl
cltd
in
dec
rclb
cs
cmp
jnp
mov
push
lock
dec
mul
pop
cmp
mov
push
inc
jp
push
or
fldl
fldenv
mov
sub
icebp
adc
test
add
call
aam
push
sbb
mov
lods
adc
mov
xor
push
or
test
xchg
mov
imul
loopne
rorl
cli
loopne
adc
or
leave
gs
push
jnp
pop
cmp
inc
xchg
and
pop
fstps
nop
xchg
pop
fs
repz
fcomps
add
pop
js
jns
xor
jnp
push
sbb
iret
fidivl
ja
and
pop
popf
push
jge
sub
adc
cli
xchg
sub
and
mov
cmp
imul
mov
cmp
jg
mov
icebp
jge
rclb
push
stc
aad
ja
fistpl
push
sub
fincstp
jae
repz
fisttpl
xchg
sbb
imul
pop
lods
in
xchg
lock
lret
cmp
add
push
mov
and
fmuls
loopne
lret
dec
push
and
fwait
int3
leave
mov
sarb
aaa
cmp
xchg
subb
imul
orl
hlt
mov
gs
shrb
sub
mov
push
xor
sbb
leave
fwait
lcall
sub
inc
pop
leave
push
cmp
jecxz
and
lods
sub
sub
mov
lock
int3
es
shll
inc
cmp
ret
pop
stos
lcall
jns
push
sarl
sub
cmc
mov
add
jno
cmp
addr16
jnp
push
ficomps
jo
adc
lret
sub
adc
dec
pop
xchg
imul
movsb
push
call
or
imul
cmp
test
or
push
dec
inc
add
dec
jno
clc
in
pop
push
push
fsubl
dec
mov
add
inc
popa
jbe
rorb
test
mov
mov
lods
lea
aas
mov
rorl
pop
jp
push
fistpll
inc
mov
jo
mov
fwait
or
sub
das
aam
mov
inc
icebp
cmp
pop
repnz
adc
push
and
pop
dec
stos
jnp
cmp
xor
fwait
adc
ja
mov
sub
push
jns
popf
outsl
rcll
and
test
cmp
in
lret
sub
jg
dec
mov
clc
stos
stos
mov
mov
lret
xchg
dec
adc
repz
cwtl
outsl
icebp
test
test
xchg
mov
ja
jmp
cmpsl
cltd
adc
jnp
adc
ja
sahf
std
ja
repnz
lods
mov
enter
dec
mov
push
imul
xchg
dec
lret
or
fcomps
out
xchg
cmpsl
je
sub
push
sub
ljmp
cwtl
aas
lods
ljmp
sub
adc
mov
mov
xchg
mov
sub
repz
mov
inc
add
cmp
stos
pushf
popa
les
cwtl
sbb
js
inc
negl
dec
push
jae
jecxz
or
leave
mov
int
xor
dec
rcll
mov
cmc
mov
mov
out
sub
push
lcall
mov
aad
jbe
sbb
jno
lods
dec
jnp
push
ljmp
addb
test
fwait
in
mov
inc
inc
push
ja
sar
cmp
insl
lret
xor
or
ja
mov
pop
dec
sub
xchg
jg
in
mov
cs
leave
or
inc
sahf
cmpsl
cmp
jae
inc
xchg
inc
jb
xor
lds
shl
add
sub
cmp
or
mov
pop
pop
mov
dec
xor
lds
pop
jae
dec
xor
lock
dec
sub
cli
aad
xor
or
cli
xor
cmp
sub
inc
ja
fmul
xlat
fiaddl
mov
and
fwait
lret
clc
xchg
add
lods
cmc
ljmp
jns
ja
adc
push
jo
ja
fcmove
lock
loopne
jg,pt
jmp
dec
ja
out
stc
out
adc
stc
jns
pop
push
cmp
sbb
sahf
push
and
fmul
shll
mov
mov
xlat
loopne
stos
push
jns
adc
in
or
imull
xchg
jo
les
pop
jg
cs
in
cltd
sub
int
add
cmp
dec
mov
xor
mov
pop
pop
add
mov
aam
lret
arpl
filds
bound
dec
mov
lcall
mov
jg
mov
lret
lock
sbb
mov
sub
shrb
cmp
cmovnp
and
xchg
ret
in
jnp
orl
lock
inc
push
lcall
scas
jns
out
inc
mov
mov
in
in
xchg
lock
pop
lret
mov
xchg
or
mov
mov
pop
xchg
test
jmp
outsb
dec
shr
test
cmp
cld
loope
stos
in
ss
mov
jnp
lods
sarb
imul
ljmp
pop
jmp
arpl
sub
mov
test
ja
sub
cmp
fsubrl
stos
dec
or
stc
sbb
push
jbe
push
mov
xor
fcmovb
sbb
pop
out
pop
dec
pop
add
fdivs
mov
push
cmp
cmp
dec
xor
jne
pop
rcr
scas
fsubrs
adc
decl
out
sub
ss
push
cwtl
pop
or
imul
sbb
xor
adc
test
cwtl
stos
ret
clc
sbb
cmp
stos
cli
test
dec
jmp
push
lods
insb
test
sbb
xor
inc
or
or
shlb
clc
dec
or
sub
rclb
adc
sbb
xchg
mov
inc
cmp
push
lret
add
xchg
xor
push
enter
lds
scas
push
jnp
sub
sub
jnp
sub
pop
sti
fistpll
and
and
stos
or
inc
xor
mov
cltd
ficoms
or
jmp
cwtl
mov
imul
inc
jp
cmp
jmp
stos
adc
cmp
sbb
dec
out
xor
stos
int3
leave
mov
adc
lcall
jmp
leave
mov
mov
mov
out
push
adc
xchg
sub
pop
aaa
lcall
pop
sub
jmp
pop
lret
fdivs
mov
imul
xorb
scas
cmp
add
push
movsb
ja
lahf
imul
xor
mov
pop
mov
xor
dec
lret
dec
icebp
enter
sub
adc
sbb
aas
add
test
xlat
cmp
pop
jnp
int
xor
push
xor
lcall
mov
int
cmp
xor
mov
mov
cmp
adc
dec
xchg
or
sub
lret
cmp
xor
mov
pop
mov
lret
sbb
cmp
xchg
dec
fistpl
mov
mov
push
cmp
pop
dec
mov
pop
adc
xchg
stc
cwtl
cmp
mov
loop
jg
mov
mov
sub
or
lret
lret
or
imul
dec
scas
cmp
pop
cmpb
jnp
ret
mov
lods
nop
sub
addr16
in
mov
fneni(8087
stos
fstps
sbbb
sbb
or
hlt
and
pop
sbb
outsb
push
in
aad
sbb
pop
fwait
call
leave
push
jae
stos
push
and
in
cwtl
movsb
adc
addr16
sbb
mov
and
data16
mov
fxch
mov
lret
push
inc
pop
push
and
sub
adc
lret
push
jnp
or
xchg
fprem
iret
sub
cld
mov
pop
or
ret
or
jmp
adc
sbb
cli
mov
sarb
scas
sub
pop
cmp
mov
sub
aaa
mov
lret
icebp
sub
adc
sub
push
mov
iret
pop
fwait
lret
push
shrl
lret
enter
dec
jnp
adc
jg
sub
shrl
pop
xchg
dec
mov
mov
mov
xlat
sbb
push
mov
mov
sbb
cmp
mov
subl
cmp
je
xor
repz
icebp
pop
xchg
filds
call
dec
mov
jns
hlt
fwait
pop
cld
mov
or
call
mov
or
sbb
sete
jb
adc
jb
mov
fldcw
pop
cmpl
sbb
mov
dec
mov
xchg
or
push
sbb
rcr
test
fldcw
scas
jp
pop
and
jnp
adc
lds
popf
xchg
leave
sbb
and
imul
das
pop
push
dec
inc
mov
jmp
mov
stos
jns
adc
icebp
mov
pop
sbb
stc
fwait
mov
rcrb
mov
sarb
int3
mov
rcrl
test
inc
aaa
xchg
fwait
sub
js
sbb
mov
dec
cmpsl
jns
push
xchg
mov
mov
roll
push
inc
pop
sbb
mov
or
pop
es
jne
push
adc
jg
clc
js
or
fwait
dec
cmp
mov
movl
mov
xlat
mov
adc
imul
mov
leave
clc
stc
sub
fwait
and
in
xchg
xchg
pushf
push
negl
imul
mov
pop
insb
xchg
xor
test
xor
lock
jnp
lahf
pop
fldcw
adc
mov
arpl
rcll
push
dec
testb
adc
mov
inc
mov
sub
push
jne
jp
push
sub
lret
ror
mov
xlat
std
or
cmpsl
outsl
or
jns
sbb
pop
lahf
sbb
mov
or
sub
sub
pop
xor
fld
pop
hlt
jae
pop
mov
arpl
pop
adc
sahf
jae
cmpsl
cmp
push
fimull
adc
mov
enter
je
sub
mov
or
cltd
sbb
call
cmp
mov
pop
mov
sbb
cmp
shll
iret
add
pop
jl
ja
sti
test
pop
or
jnp
cmp
add
cs
pop
push
call
enter
adc
push
xlat
imul
mov
lods
je
push
xchg
adc
in
xchg
aaa
mov
add
mov
pop
jno
lret
imul
push
iret
push
leave
xor
lcall
fdivp
jnp
stc
sbb
leave
stos
popf
pop
nop
or
test
es
stos
lahf
fstps
addr16
sbb
push
cmp
inc
cmc
pop
pop
insb
mov
int
mov
or
cmpsl
sbb
adc
sub
pop
xor
or
sub
or
out
jo
adc
loopne
sub
jo
pop
add
mov
cld
sbb
ja
imul
icebp
mov
xor
enter
sub
cmp
adc
mov
xchg
aas
orl
pop
mov
add
orb
call
mov
cmp
js
adc
mov
and
pop
js
repz
add
inc
adc
mov
movsb
cmpsl
iret
cmp
int
jbe
pusha
sbbb
fcomip
addr16
fisubl
fcomps
cld
jmp
sub
fsubr
jne
xor
or
pop
lret
mov
dec
imul
fs
cmpsl
clc
sub
cmp
cltd
cmp
mov
pop
lea
and
dec
stos
add
push
dec
fsts
lock
mov
fimull
mov
xorb
stos
leave
aas
xchg
dec
mov
cli
push
mov
movsl
cltd
ljmp
sbb
scas
cmp
dec
push
cmc
or
ja
add
cli
dec
hlt
stc
sub
jnp
push
lret
jl
arpl
jnp
cmp
or
fcmovbe
test
push
jnp
mov
jns
xor
cmp
hlt
and
jae
cli
push
or
push
fucomip
inc
aad
adc
xchg
fcomps
inc
call
adc
repnz
push
in
jno
add
jns
aam
je
js
jg
dec
dec
inc
mov
fdiv
mov
cwtl
lahf
test
or
test
jns
or
mov
rolb
add
mov
into
mov
arpl
les
fstps
in
fsub
insb
dec
call
xlat
cmp
pushl
pop
sub
sub
fs
jnp
stos
push
xor
push
adc
dec
addr16
arpl
jno
cmp
jg
iret
stos
ret
jo
pop
mov
add
jo
jnp
mov
popa
cld
jae
addr16
pop
jo
mov
pusha
dec
jae
sbb
push
jl
outsl
arpl
sub
movsb
lahf
sahf
push
jle
xlat
or
mov
inc
cld
fs
add
inc
jle
mov
cs
mov
cltd
sub
fdivrs
jnp
scas
lock
push
jo
insb
sets
shll
push
sbb
xchg
shr
pop
sbb
inc
leave
cmp
push
sub
xchg
push
cmp
cmp
adc
and
mov
insl
dec
pop
shlb
adc
dec
jb
cmp
cwtl
push
insb
mov
xchg
adc
inc
mov
pusha
daa
loop
in
lock
xchg
jecxz
sub
fadds
sub
insb
ja
scas
jns
xor
mov
jb
imul
mov
outsb
fldt
mov
fwait
scas
call
cmpb
sub
scas
popf
xor
mov
mov
and
fldenv
xchg
jno
xchg
sub
pop
dec
cwtl
ja
fwait
xchg
sbb
arpl
outsb
cmp
or
lods
xorb
subl
pop
sub
lock
fldcw
jecxz
dec
inc
sub
leave
xchg
mov
xor
dec
cmp
inc
fmuls
mov
jmp
sub
daa
imul
mov
das
hlt
repz
xor
pop
jno
inc
roll
inc
xor
adc
mov
inc
cmp
fsts
xchg
and
lret
sbb
adc
mov
push
push
xor
and
dec
int3
inc
dec
subl
mov
imul
jl
mov
xorl
insb
jecxz
into
push
inc
mov
movb
push
and
popf
cmp
mov
daa
fcompl
shlb
in
fisttpl
jo
aad
mov
mov
jns
push
mov
mov
call
xchg
roll
in
cmp
mov
jne
add
clc
subl
bound
adc
fwait
sbb
shld
mov
shl
aas
sbb
push
mov
fs
xchg
jmp
xor
lcall
enter
in
push
icebp
or
lds
sub
lret
rorb
adcl
sub
pop
test
aad
stos
lret
dec
ret
push
mov
fsubl
je
pushf
sbb
push
mov
xchg
pop
adc
lret
xchg
dec
gs
sbb
xchg
sub
jnp
dec
fs
cwtl
dec
addr16
outsl
push
dec
push
rolb
pop
adc
mov
sahf
ljmp
pop
push
imul
push
je
mov
lods
popf
cs
dec
lret
adc
nop
pop
pop
push
rcrl
aam
dec
ds
daa
cltd
jmp
sbbl
xchg
xchg
jbe
aaa
add
cmp
aam
mov
sub
sub
adc
clc
adc
leave
out
jb
jp
ss
or
das
lods
pusha
inc
inc
and
push
mov
xchg
lea
mov
xlat
adc
mov
or
fdivr
ljmp
std
out
push
pop
lods
int3
nop
test
les
push
les
orl
es
mov
inc
iret
jle
jne
add
push
mov
sub
jo
lret
out
sarl
mov
push
jb
outsl
mov
inc
loop
or
rcrb
loop
cmp
ss
xor
lcall
fdivrs
mov
dec
mov
jbe
lret
jnp
push
cmp
lret
or
or
xchg
xchg
cmp
dec
mov
cltd
dec
mov
mov
cmp
dec
mov
mov
mov
or
pop
jb
adc
mov
mov
add
mov
inc
mov
lods
push
add
or
push
push
or
inc
xor
fnstsw
cmp
adc
inc
xor
flds
lahf
test
lods
mov
pop
insb
mov
lea
pop
int3
in
xor
stos
es
mov
stos
dec
enter
lods
inc
outsb
add
ror
addr16
hlt
lock
test
les
lods
and
and
pop
bound
push
xorb
and
xchg
push
jl
sbb
xor
dec
lahf
leave
lods
daa
pop
in
or
xor
inc
mov
mov
imull
push
arpl
or
imul
mov
jb
push
lret
mov
inc
cmp
inc
sub
movsl
xchg
mov
or
in
push
loope
lods
cli
or
pop
ljmp
jnp
lods
gs
xchg
jns
repnz
fs
loop
mov
jns
adc
test
dec
jp
int3
addr16
es
adc
xor
dec
pop
mov
std
dec
sbb
loopne
shl
cmp
sub
lret
aaa
cmp
ret
adc
mov
lfs
and
adc
lret
pop
pop
adc
mov
xor
pop
add
cmc
dec
or
adc
mov
inc
aaa
inc
mov
daa
push
jno
ds
test
xchg
ljmp
inc
xor
pop
xchg
scas
jnp
pop
xchg
cmp
outsb
dec
lock
cmp
repnz
xchg
push
adc
mov
xor
mov
or
push
les
mov
fnstcw
fs
outsl
dec
push
or
mov
xor
imul
std
pop
enter
jno
loopne
xor
push
mov
sbb
xchg
inc
mov
daa
lret
dec
xchg
popa
pop
outsl
je
pop
and
push
into
nop
outsl
repnz
cmp
stos
or
sub
movsb
lds
ss
xchg
pop
adc
xor
dec
mov
lods
clc
pusha
mov
out
pop
push
push
cmp
int3
fcomip
lahf
hlt
push
and
inc
lock
imul
xor
ffree
mov
push
jmp
cld
push
mov
ret
int3
bound
mov
sahf
push
mov
jp
jg
pop
rclb
add
fs
in
inc
mov
mov
aad
xchg
int
les
jb
cmp
ds
add
mov
int3
testb
push
lret
dec
out
dec
inc
test
or
xchg
dec
in
cmp
xor
mov
sbb
lods
dec
ss
push
push
mov
cltd
jne
sub
aam
inc
daa
push
sub
mov
xchg
jl
xor
stos
xchg
mov
inc
out
pop
jo
fs
pop
adc
sub
inc
mov
rorb
cmp
cmp
xchg
outsb
or
insl
or
cmp
movsb
jo
mov
ret
inc
mov
mov
addr16
orl
xchg
pop
or
push
inc
clc
xchg
fistpll
addr16
add
iret
adc
jg
lcall
out
test
pop
or
xchg
xor
ret
mov
mov
push
insl
mov
call
mov
mov
push
jnp
bound
imul
mov
push
push
loopne
icebp
pop
push
pop
rorl
lock
mov
imul
insb
lds
ja
cld
les
cmpsb
out
arpl
cwtl
ds
inc
mov
push
cld
adc
lcall
inc
jo
imul
jl
insl
lds
sub
xor
inc
push
insl
out
mov
shrl
rcrl
movsl
cmp
test
loope
sub
aam
push
psrld
add
and
popf
frstor
push
mov
fsts
mov
dec
mov
into
pop
rcl
aas
mov
dec
mov
int3
xor
jg
nop
adcl
mov
jg
mov
push
sub
cmp
gs
ds
shrb
aam
push
out
clc
movsl
xchg
dec
mov
jg
aad
adc
mov
repnz
int3
sub
push
inc
aaa
xchg
xor
pop
add
and
adc
jmp
ljmp
xchg
jb
repnz
jl
into
jb
shrb
mov
and
sub
scas
sub
jmp
cmpsb
dec
subl
leave
xchg
subl
das
hlt
and
push
cmp
js
sub
xchg
into
mov
add
fs
sub
push
xor
xchg
push
mov
xor
sub
mov
and
outsl
cld
pop
fidivrl
std
inc
outsl
stc
xlat
or
dec
pop
cmp
or
ljmp
jmp
imul
xlat
cmp
cmp
outsb
pop
push
flds
test
jno
and
adc
into
mov
pop
into
lret
lods
adc
xor
cwtl
insb
addl
jg
or
scas
jg
in
addr16
pop
adc
addr16
mov
mov
inc
sbb
call
arpl
shrl
psrld
dec
pop
mov
xchg
das
sarl
inc
sub
les
sub
je
imul
inc
imul
xchg
mov
adc
pop
sbb
dec
imul
loopne
das
cmc
pop
jl
xchg
rclb
aaa
int3
test
pop
mov
push
push
rolb
dec
lret
int3
lahf
adc
sbb
pop
mov
pop
test
dec
int
xchg
scas
cwtl
fimull
xor
vpmuludq
add
jge
ja
enter
fistpll
popa
mov
call
mov
lahf
mov
pop
rclb
mov
or
jmp
mov
dec
sub
jne
ja
movsb
push
pop
pop
js
xlat
mov
xor
cmpl
lret
ss
inc
clc
jnp
sub
mov
dec
mov
incb
push
test
mov
adc
add
dec
cmp
test
cli
xor
sub
add
je
out
mov
jnp
sub
mov
movsb
jmp
mov
addr16
fisttpll
push
xchg
les
enter
rolb
inc
pop
dec
adc
cmp
xor
xchg
dec
lods
insb
and
mov
inc
xchg
fildl
push
cmp
xor
test
sbb
ljmp
inc
dec
int3
repnz
flds
jns
sub
out
arpl
shll
cmp
push
inc
mov
push
es
xchg
mov
lahf
cs
mov
icebp
mov
xlat
sbb
push
inc
ljmp
pop
fxch
data16
lods
lods
loopne
in
push
xchg
outsl
jb
aad
js
fmull
int3
pop
sarb
addb
gs
imul
es
test
cmpb
hlt
cmp
ss
jg
push
and
push
icebp
xor
fnstenv
ret
dec
xchg
jecxz
js
hlt
loopne
aam
cs
lock
push
fisttps
pop
test
outsl
and
cld
into
mov
fmull
outsb
xchg
loopne
xor
test
ds
cld
xchg
jg
inc
mov
xchg
xchg
lock
jo
jg
enter
jnp
dec
inc
fsubrl
fisubs
inc
lods
scas
xchg
jnp
xor
fidivl
or
pop
scas
add
lret
push
mov
rcll
loop
xor
mov
or
lret
int3
xchg
rorl
popf
push
mov
dec
pop
addr16
rorb
clc
cwtl
arpl
mov
jmp
stos
xor
sub
pop
sub
push
fbstp
pop
inc
imul
cmp
mov
into
cmp
sti
push
push
dec
shlb
cs
test
mov
int
lret
jg
xor
xor
fadd
or
xchg
repz
imulb
cmp
insl
mov
scas
int3
and
les
sub
inc
add
xchg
leave
cmpsl
notb
pop
lret
pop
aam
or
xor
xor
aaa
sbb
stc
add
jnp
xchg
fcoml
shlb
out
test
leave
fsubl
xchg
pop
inc
loop
lock
sarl
int
inc
jb
ror
mov
cmpsb
inc
dec
aas
fildll
lds
and
mov
pushf
pop
jno
or
sahf
ss
fistps
pusha
fdivr
jmp
add
sarb
lods
insb
xor
xchg
or
leave
dec
mov
lret
test
xor
cmpsl
test
aad
into
sub
les
xor
iret
test
jl
xlat
inc
leave
incl
pop
cmp
sahf
push
pop
push
xor
sahf
push
outsb
test
mov
push
pop
push
insb
insb
and
xchg
pusha
and
lods
adc
sbb
sarl
sub
in
push
xchg
push
leave
leave
fmul
cmp
or
aad
and
shl
aaa
sbb
shrb
fmuls
cltd
in
mov
fs
push
cli
bound
lea
mov
jb
and
scas
pop
dec
out
dec
es
sub
pop
xchg
push
xchg
push
aas
mov
cmp
les
xor
mov
cltd
addr16
pop
cmovb
dec
cmp
inc
cmp
lret
mov
jne
push
lcall
jae
cwtl
aam
pop
stos
mov
in
jo
jge
lods
jbe
in
leave
sub
mov
pop
rcll
dec
test
xchg
movsl
sbb
ss
popa
mov
adc
or
dec
and
cmp
js
cwtl
fsubrp
jge
aam
stos
scas
ds
out
jg
into
arpl
lret
inc
xchg
push
adc
sarl
and
adc
arpl
in
fstpt
xor
xchg
or
imul
pop
into
xor
xchg
imul
jb
in
or
jmp
xor
xchg
lahf
mov
mov
mov
xor
sub
pop
dec
jg
mov
pop
fmul
movsl
push
push
out
pop
mov
cmpsl
call
xor
lods
lret
data16
outsl
lcall
icebp
or
pop
ret
arpl
sub
leave
or
int3
ret
mov
int3
jne
push
sbbl
xor
ret
xor
imulb
imul
ds
test
mov
cmp
push
dec
aas
fists
fisttpll
jno
cs
movb
jmp
mov
out
into
insb
adc
les
cmp
mov
jb
and
je
cmpsl
pop
sub
aad
or
addb
dec
mov
mov
xor
inc
push
mov
scas
push
dec
loope
es
sbb
incl
jmp
sbb
ljmp
aas
inc
adcb
xor
push
pop
xor
xchg
or
fcoml
loope
es
shrb
push
test
push
scas
adc
leave
iret
sub
cmp
popf
test
lret
das
xchg
repnz
jno
es
jg
mov
addr16
stos
mov
or
jge
xchg
push
mov
lcall
pop
daa
ss
pop
cmc
push
into
cs
mov
xchg
sub
mov
or
rcrl
into
mov
cltd
adc
mov
imul
enter
insb
ret
mov
inc
or
jno
aad
mov
into
mov
jns
es
fisttps
cmp
stos
loop
push
mov
pop
mov
mov
inc
add
and
sbb
jge
mov
rcll
push
mov
daa
sub
sbb
jnp
pop
out
gs
xor
xchg
xchg
mov
leave
cmp
jbe
jb
or
push
jge
rcr
mov
cmp
lods
mov
fs
dec
pop
pushf
jno
mov
lea
jno
jge
dec
fcomp
sbbl
je
dec
inc
dec
push
out
xchg
xchg
sub
mov
ret
xchg
sbbb
imul
mov
xchg
mov
push
loope
pusha
inc
es
lods
xchg
sete
loopne
xchg
fldt
stos
jl
outsb
testl
stos
mov
cltd
jo
mov
ds
int
sbb
cmp
xchg
jmp
sbb
arpl
jb
rorb
jmp
push
cmp
mov
inc
add
xor
inc
imul
xchg
fdivrl
ret
or
imul
add
pop
int3
leave
or
mov
and
xor
shlb
movsl
push
cmp
shlb
ret
fnstsw
scas
test
hlt
fs
pop
test
int3
dec
cmc
mov
fwait
imul
ds
gs
daa
ja
inc
incl
push
mov
jbe
mov
gs
xor
adc
es
push
sbb
lret
dec
shrb
xor
fcomip
daa
add
jmp
xchg
dec
out
inc
mov
mov
pop
cmp
mov
add
sbb
mov
in
hlt
mov
mov
lret
mov
xor
or
sub
push
lods
cmp
je
rcrl
push
lods
sub
test
scas
lods
xor
and
mov
lock
jg
mov
jmp
fistpl
fisttps
cwtl
nop
xlat
stos
aas
xchg
mov
es
jmp
dec
adc
loopne
mov
mov
xchg
push
inc
adc
lods
xchg
xchg
or
pop
inc
mov
fwait
or
popf
dec
pop
inc
xor
les
pop
rolb
jb
adc
fistpll
hlt
fsubrp
fisubrs
dec
addr16
imul
push
cmp
xchg
adcb
push
push
into
pop
or
test
dec
aam
adc
mov
xor
xchg
mov
int
lret
inc
inc
ds
leave
push
xor
bswap
enter
mov
push
jmp
cmc
lds
sub
loope
ds
pop
mov
loope
es
lcall
or
lret
inc
aam
inc
rcr
xchg
xchg
and
cmpsl
push
dec
outsb
loopne
xchg
idivl
dec
or
pop
or
rol
inc
jle
cs
and
sbbl
inc
ret
movsb
ret
xchg
sbb
mov
adc
scas
rorl
test
out
mov
mov
jne
aam
icebp
cs
xchg
jl
xchg
fdivs
loope
xor
sub
push
stc
mov
dec
mov
cmp
push
push
mov
ret
das
or
test
mov
int3
repz
popf
mov
icebp
mov
lods
push
int3
aas
and
pop
mov
dec
dec
aaa
mov
dec
jns
sbb
cld
in
xor
cli
or
sbb
in
outsl
fistl
inc
imul
jns
jl
pop
sbb
enter
loopne
mov
xchg
std
test
pop
aaa
cs
enter
dec
lea
orl
jmp
into
mov
pop
gs
mov
xchg
test
fs
cmpsl
adc
mov
xor
in
movsl
rcl
inc
mov
mov
adc
imul
jge
xchg
push
fs
lods
xchg
mov
push
movsb
sti
rcrl
loopne
pop
lods
imul
inc
xor
mov
fldl
pop
fwait
cltd
arpl
add
cmpsb
fldt
pop
nop
mov
cmpsl
loope
les
mov
pop
hlt
pop
les
shll
add
pop
mov
inc
jle
mov
push
enter
jns
or
popf
adc
xlat
sbb
mov
add
pop
stos
leave
dec
lock
fnstenv
xchg
inc
lods
or
push
dec
repz
cmp
inc
ret
pop
fwait
nop
dec
pop
mov
dec
push
xchg
insb
add
dec
sub
dec
mov
icebp
xchg
mov
mov
xchg
mov
sbb
lods
pop
or
shl
cwtl
sub
clc
push
mov
and
fwait
into
test
int
rolb
jne
and
pop
movsl
stos
cmp
daa
subb
scas
test
add
scas
mov
sub
inc
in
lret
lcall
les
jne
popa
arpl
cld
cmpsb
mov
dec
out
das
adc
loop
inc
push
mov
ret
sub
loope
or
mov
aam
pop
lahf
gs
imul
faddp
dec
push
mov
mov
test
int3
enter
add
xor
clc
or
add
mov
xchg
stos
add
jl
xlat
sbb
mov
pop
test
les
nop
test
fmul
mov
inc
int
stos
jns
lock
sub
mov
repnz
cltd
outsl
xchg
mov
and
mov
xchg
addr16
mov
jo
inc
es
je
xor
mov
mov
mov
clc
inc
push
shlb
xor
xor
xlat
inc
dec
push
insb
pushf
pop
imul
imul
jmp
lods
popf
fwait
fsubrl
test
and
push
jg
gs
lahf
mov
adc
fdivrl
xchg
dec
loopne
rcrl
lods
jb
pushf
movsb
xor
mov
jge
in
movsl
leave
or
jns
sub
adc
xchg
sbb
pop
push
int3
scas
hlt
jge
fsubl
push
test
cmp
xchg
pop
jge
int3
xchg
movsl
mov
or
cmpsl
cmp
pop
mov
loopne
cmp
in
lahf
inc
arpl
jp
movsl
dec
push
push
cmpsb
orl
inc
xor
cmp
call
dec
push
sbb
adc
call
iret
fwait
cs
sbb
lret
pop
fbstp
mov
inc
fadds
mov
addr16
and
adc
mov
mov
in
xchg
pop
cmpsl
cmc
pusha
int
loopne
js
out
int3
mov
mov
xor
das
add
stc
in
int3
shll
cltd
mov
lods
sbb
sub
repnz
lods
inc
lret
cmp
lahf
pop
mov
int3
mov
xor
sahf
xchg
pop
push
data16
in
ds
mov
pop
mov
fidivrl
and
insb
push
movsl
push
loopne
jae
arpl
fcoms
push
test
dec
std
push
mov
aad
cmp
and
push
int3
iret
adc
aad
daa
xorb
enter
mov
imul
pop
mov
lds
pop
push
lods
lea
and
or
test
loop
xchg
popa
jmp
int3
dec
lds
pusha
scas
mov
lret
pop
mov
xchg
pop
lods
inc
into
pop
sbb
stos
test
sub
and
add
and
addr16
xor
push
fcomp
mov
adc
or
jge
lret
test
cmp
fs
and
mov
fadd
mov
mov
xchg
dec
dec
fwait
loopne
xor
jg
loopne
fnsave
test
les
xchg
xchg
pop
pop
dec
cmpsl
je
lock
mov
xchg
std
add
leave
sub
push
mov
xor
mov
int3
mov
loopne
imul
sub
xchg
jg
das
mov
pop
jg
mov
push
test
inc
es
movsb
jmp
cs
arpl
rorl
pop
xchg
aad
push
sub
nop
mov
mov
mov
cs
cmpsl
mov
or
rorb
push
lahf
mov
jge
xlat
pop
sub
jle
adc
das
cmp
inc
sbb
or
sub
incb
pop
lret
leave
jb
jb,pn
sub
or
push
sbb
mov
mov
pop
fcoms
stos
push
sub
shl
mov
ror
fdivrl
mov
fisttpl
cmp
lahf
mov
and
jge
repnz
or
dec
vpsubsw
cli
adc
mov
fldt
stos
lret
jno
arpl
inc
mov
das
outsb
loopne
pop
mov
popf
loop
in
pop
rclb
das
mov
jmp
aaa
dec
ret
xchg
addr16
jne
xor
leave
dec
shlb
ja
push
sbb
xchg
jl
xchg
mov
mov
mov
sbb
test
dec
lods
or
xchg
je
ljmp
or
dec
test
loopne
pop
pop
rcll
lahf
mov
push
mov
pop
or
push
cld
popl
xchg
add
or
mov
xor
lahf
outsl
cmp
push
and
ror
dec
popf
cmpsb
arpl
int3
pop
lret
into
pop
les
call
cmp
sub
dec
je
jnp
subb
ss
iret
clc
pop
xor
call
int3
test
dec
jo
cmp
int
pusha
shll
int3
dec
pop
aad
gs
pop
aaa
cmp
push
mov
aas
mov
stos
xor
dec
sub
cmp
imul
aam
into
and
movsb
ljmp
xchg
out
xchg
rcll
mov
mov
lret
pop
sti
xchg
test
int3
repnz
aas
push
or
insb
xchg
mov
xchg
sub
lret
in
jge
mov
sub
gs
dec
xor
pop
pop
lods
loopne
mov
mov
out
pop
int
add
scas
gs
push
mov
sub
xchg
jecxz
rorl
fadds
push
push
mov
pop
mov
in
lods
inc
push
pop
dec
mov
push
mov
arpl
dec
pop
addr16
and
test
xchg
add
mov
xor
jnp
or
imul
int3
jg
into
jbe
outsb
inc
hlt
pop
push
aaa
leave
and
lds
fs
sub
addr16
dec
imul
or
enter
das
cltd
or
sbb
fst
mov
test
sbb
fnstsw
xor
das
push
rclb
xor
popa
pop
cmp
sub
push
ds
push
fwait
mov
rcrl
int
mov
xchg
add
lret
insb
push
xor
leave
fucomip
arpl
das
add
test
or
addr16
lock
sub
mov
int3
test
leave
cmp
test
and
xor
mov
arpl
dec
xor
cltd
in
jnp
lahf
addr16
sub
into
dec
adc
or
xchg
movsl
int3
test
sahf
shlb
sahf
pop
push
loopne
sub
adcb
inc
mov
and
nop
or
mov
push
jno
js,pt
or
rclb
enter
call
inc
in
jno
fstpl
leave
jbe
loop
xor
cmp
popf
sub
lds
inc
into
scas
xor
aas
mov
ljmp
push
jns
pop
and
jg
mov
pop
mov
mov
xchg
sub
lods
xchg
lea
sub
sbb
adc
adc
insb
dec
dec
lods
js
sbb
test
push
cltd
cli
leave
enter
mov
mov
sub
xor
sarl
sub
jle
aam
jb
jb
out
adc
jno
adc
jp
in
xchg
dec
xor
clc
pop
cmpsl
cmpsb
inc
xor
pushf
cmpsl
test
mov
dec
cmc
cmp
nop
mov
cmp
cmp
add
into
dec
jns
xor
cs
bound
pop
push
das
mov
mov
push
push
mov
mov
int3
mov
sti
movsl
pop
jg
mov
imul
xor
jnp
and
pop
adc
in
lds
jp
jae
sub
jae
and
push
push
inc
inc
pop
jg
cmc
ljmp
push
aam
and
lret
out
jno
loope
jmp
imul
fidivrs
iret
sub
sahf
pushf
fimull
iret
mov
cmp
xchg
xor
xchg
pop
fstpt
clc
mov
pop
sbb
cmp
sbb
test
sbb
mov
cld
stc
outsl
mov
cmp
rcrb
sbb
cmp
sub
add
fstpt
repz
cld
sbb
mov
or
lret
lcall
cmp
or
cmp
sbb
js
call
cmp
add
outsl
fwait
ss
inc
popa
pop
sub
mov
mov
stc
call
sti
pop
sbb
push
mov
sub
cld
cli
outsl
fidivl
xchg
rcrb
cmp
cwtl
cmp
lcall
fcomi
fstps
push
enter
pop
cmp
or
jo
xchg
jecxz
fdiv
mov
sub
rcl
js
mov
mov
push
fwait
sbb
stc
loope
fstps
xor
sbb
cmp
mov
xor
fcmovu
jle
fisttpl
sbb
sub
mov
cmp
mul
sub
dec
fstps
push
fwait
cmp
aad
cli
xor
sub
cld
mov
fsub
out
fnstcw
xchg
mov
pop
xchg
pop
call
cltd
outsl
xchg
cmp
mov
sbb
sub
negl
or
cmp
fidivrl
cmp
notb
mov
cmp
or
fcoms
cmp
sbb
push
pop
fwait
dec
mov
stc
mov
addr16
cmp
adc
jns
fwait
sub
cmp
cltd
cmp
pop
fidivl
sbb
sub
dec
mov
fildl
imul
cmp
or
pop
sbb
sbb
lret
fadds
dec
sbb
mov
mov
add
sbb
test
imul
cld
mov
testl
xchg
sbb
fdivrs
sub
cmp
or
lcall
jg
cwtl
jmp
fidivl
fwait
xchg
movsl
sub
loope
cmp
add
pop
mov
pop
push
cmp
ret
call
push
fnstcw
fldcw
or
mov
push
cmp
cwtl
mov
dec
cli
sbb
fidivl
ja
sbb
jp
cwtl
outsl
pop
sub
or
jl
jmp
sti
jb
sbb
xchg
cld
sbb
fnstenv
or
sub
sub
loope
mov
ss
rclb
cmp
sbb
sbbl
add
jns
ss
mov
fadds
xchg
sbb
fmul
loope
pop
xor
push
fstps
mov
fstpt
in
sbb
dec
pop
cmp
in
fwait
mov
push
sbb
sbbl
pop
mov
sub
add
mov
sbb
negl
or
out
stc
cmp
mov
adc
dec
sub
das
lret
inc
and
mov
mov
jmp
fnstcw
js
jle
dec
inc
xchg
lret
sub
ds
cmp
iret
daa
bound
mov
rcll
mov
repz
lret
out
inc
sbb
adc
fwait
pop
jnp
inc
or
inc
inc
push
leave
sub
dec
pop
mov
pop
xor
sbb
or
push
or
push
fmuls
dec
xor
mov
repz
xchg
outsl
lahf
add
xlat
sbb
push
jp
sub
cs
push
mov
ficoml
lods
sub
xlat
fsubrs
sub
xchg
cmp
sbb
add
dec
stc
dec
out
fstps
pop
stos
ret
sub
push
push
test
fdivs
push
lock
cmp
fdivs
ljmp
jns
leave
fiaddl
or
fldl2e
mov
jns
jo
push
or
leave
fadds
or
sub
push
push
add
inc
clc
cwtl
sub
inc
add
mov
xlat
fninit
repnz
or
stos
push
push
or
test
xlat
mov
imul
aad
xor
cs
dec
xor
lret
in
jmp
cmp
jmp
cmp
in
or
cmp
out
clc
xchg
jno
jge
mov
pop
repz
std
cmp
stos
sub
sub
jno
dec
fdivr
cmp
outsl
pop
aaa
jae
in
js
inc
mov
fs
mov
cwtl
xchg
inc
jmp
in
or
add
add
jno
sbb
cmp
bswap
fcoms
adc
or
aad
xor
in
adc
pop
aaa
jae
in
mov
fs
mov
or
xor
sub
add
pop
jno
and
bswap
fsubs
cmp
or
aad
xor
in
sbb
jae
in
cwtl
fidivrl
fbld
je
jns
je
cmp
ss
jae
in
cltd
jo
or
aaa
jae
or
aad
xor
mov
fcom
ss
jae
or
jecxz
fbstp
cmp
xlat
cwtl
fsubr
ss
leave
or
jp
lret
mov
jnp
fwait
mov
fmuls
test
mov
or
cmpl
mov
test
pop
jnp
mov
inc
lret
fcmovbe
sbb
stc
in
pop
adc
fcompl
add
mov
fidivl
mov
mov
clc
stos
clc
push
xchg
push
or
mov
mov
jnp
sbb
push
mov
sub
push
insl
push
mov
fstpt
add
xor
push
and
ret
in
fmuls
cwtl
ret
mov
pop
adc
sbb
cmp
test
jnp
jb
and
dec
mov
mov
push
mov
or
xor
sti
pop
mov
imul
jmp
xor
cltd
and
mov
scas
lock
fistpl
icebp
jns,pt
cwtl
add
push
in
jns
dec
fmuls
dec
sbb
or
jno
insl
push
push
mov
pop
mov
mov
xor
mov
pop
mov
adc
pop
fwait
pop
std
shlb
jmp
dec
fwait
dec
test
mov
imul
fdivr
cltd
push
not
xor
pop
aas
jnp
fwait
fadds
enter
xor
ds
mov
ss
fucompp
mov
fimuls
sub
fildl
lahf
jae
xor
pop
in
mov
pop
fnstsw
imul
xor
mov
add
dec
or
sub
ja
imul
lret
decl
xlat
cmp
out
dec
mov
xchg
xor
or
imul
mov
adc
cwtl
andb
in
mov
and
pushf
mov
push
sbb
ror
aad
fbstp
xlat
mov
arpl
ja
mov
rol
add
stos
push
add
iret
xchg
add
out
jmp
jns
adc
jo
inc
pop
das
ja
sbb
jne
xor
mov
adc
or
jno
xor
fisttps
mov
insl
mov
push
enter
add
xor
cmp
or
icebp
or
cmp
outsl
xor
sub
xor
sub
xor
mov
mov
in
sub
std
cmp
inc
bswap
and
inc
mov
xchg
arpl
ja
mov
cmp
add
stos
and
add
fidivrl
or
cmp
adc
adc
cmp
mov
or
push
or
dec
enter
ja
sub
mov
and
mov
xchg
and
and
ss
aad
fbstp
lea
fidivl
or
std
cmp
jnp
lret
ja
or
jnp
ja
add
stos
outsl
add
jae
pop
mov
pop
or
jno
xor
xlat
dec
mov
ss
sbb
adc
aad
xor
mov
and
sbb
jnp
ja
aad
push
int
xlat
or
jp
or
pop
xlat
cmp
mov
shr
pop
jmp
inc
xchg
sub
fcmovne
ss
jae
dec
jmp
mov
xlat
call
or
jnp
pop
cli
ljmp
mov
and
mov
mov
lea
mov
and
jae
jl
xlat
xor
jg
push
cmp
fs
jl
cwtl
fldt
mov
inc
mov
cwtl
pop
inc
xchg
fwait
mov
xor
inc
pop
sarb
and
sub
cmp
fsincos
or
jns
push
in
cmp
push
mov
cmp
stos
enter
std
fxch
mov
mov
test
std
add
xor
cmp
shlb
inc
pop
in
mov
mov
cmpsl
test
cwtl
adcb
xchg
lret
adc
jae
sub
lcall
push
dec
sub
test
jp
test
or
xor
or
xlat
stos
mov
or
or
lret
cs
jns
jg
jle
insb
hlt
or
pop
stos
jae
cmc
jmp
xor
mov
out
add
sub
or
dec
mov
xchg
cwtl
xchg
cwtl
out
and
stc
ja
rep
push
inc
mov
or
mov
add
mov
cmp
pop
xchg
jns
cwtl
add
stos
mov
stos
rcrb
cltd
sahf
push
lret
mov
inc
push
fsts
ljmp
add
xor
mov
shr
push
aad
sbb
dec
mov
dec
lret
xlat
stos
sar
leave
mov
fstpt
mov
inc
fmuls
imul
stos
and
cli
fcmove
adc
jmp
jns
mov
jnp
adc
jmp
mov
jmp
push
stos
sub
cwtl
in
jecxz
jne
jmp
fimull
inc
add
call
in
dec
dec
out
xchg
fimull
sbb
sbb
stos
cmc
dec
sbb
test
fidivrl
adc
stos
xor
std
mov
adc
jmp
aad
sbb
dec
mov
cwtl
cmp
mov
adc
or
pop
sub
cmp
pop
cwtl
cmp
mov
cmp
mov
dec
push
sub
cwtl
dec
popa
stos
dec
push
orb
std
mov
mov
test
dec
mov
fwait
sbb
push
cmp
enter
stos
aaa
cwtl
jno
inc
in
cwtl
ja
subl
inc
lock
test
cmp
stos
add
mov
adc
xor
cld
jge
test
mov
pop
stos
add
dec
fstps
jmp
sbb
dec
clc
and
popa
cwtl
cmp
cwtl
inc
or
mov
sbb
stos
sarb
cwtl
cmp
push
ss
cmp
leave
cmp
popa
cwtl
lock
dec
test
stos
lret
xlat
or
sbb
mov
inc
sub
inc
push
pop
cli
imul
fisttpl
inc
jnp
movsl
mov
mov
outsl
add
dec
jmp
sbb
outsl
ficompl
jae
stos
and
sbb
imul
xor
jnp
js
rolb
dec
dec
subl
add
pop
leave
inc
mov
jg
mov
pop
sbb
ret
cmc
cmp
dec
mov
adc
imul
test
mov
cli
dec
sub
push
scas
sub
dec
jnp
add
lock
fimull
mov
cmp
fdivrs
xor
cmp
mov
imul
addr16
mov
mov
repnz
dec
cmp
mov
jg
shll
xchg
cwtl
pop
mov
sub
sbb
or
mov
cwtl
ja
ss
xor
ja
jmp
clc
cmp
cwtl
inc
mov
dec
dec
mov
mov
mov
cltd
test
popa
mov
adc
stos
pop
mov
push
popf
outsl
jae
cmc
xor
sbb
xchg
cwtl
sub
or
ja
mov
mov
adc
inc
xor
dec
cmp
and
fnstcw
gs
xchg
push
fdivs
mov
inc
xor
push
leave
push
add
mov
lock
pushf
xchg
adc
xor
mov
mov
xchg
fldt
xlat
loope
shrl
ss
repz
stos
jecxz
cld
out
outsl
fisttps
add
sbb
sbb
or
xor
ss
fiaddl
or
je
sbb
cmp
cld
cltd
ja
jb
adc
fwait
sub
cld
sbb
cltd
outsl
adc
fimull
shl
xor
adc
sub
fsubs
cld
test
mov
push
jnp
sub
ss
cltd
mov
mov
inc
sbb
imul
sub
subl
loopne
sbb
es
or
fwait
aam
das
or
jae
or
cmp
sbb
pop
dec
push
jp
pushf
imul
aad
sub
mov
lret
fcmovnu
mov
jnp
xlat
or
aad
xor
push
sub
iret
push
adc
test
add
jle,pt
xor
fmull
cltd
rclb
xchg
fldenv
dec
sub
outsl
xchg
jp
dec
push
xor
mov
je
dec
push
pop
xchg
push
mov
sub
loopne
or
fsubr
das
call
or
mov
fcmovnu
stos
xchg
mov
out
adc
xor
add
inc
mov
add
mov
fcoms
mov
or
rcr
int
xor
dec
rclb
js
add
dec
add
add
lods
cld
test
lods
daa
cmp
mov
leave
mov
stos
idiv
iret
mov
mov
lret
lds
pop
aad
and
lock
jnp
push
ret
or
xchg
dec
and
jge
fwait
jne
mov
xlat
inc
ljmp
cmp
pop
sarl
or
pop
cmp
ss
outsl
test
aad
sub
imul
push
cmp
mov
mov
stos
push
mov
xchg
test
das
inc
xor
add
cmp
ficompl
mov
in
sbb
pop
pop
mov
or
cwtl
add
imul
jp
aad
imul
or
dec
pop
je
xorl
or
aad
inc
jp
inc
sub
aam
xor
xlat
xor
or
fcom
or
imul
adc
fmuls
jp
cmp
imul
dec
fwait
call
stos
aad
xor
rcr
mov
mov
sbb
cmp
adc
cltd
lcall
arpl
stos
movsl
test
lret
pop
dec
dec
mov
aad
inc
das
loop
jns
fmul
dec
leave
in
or
mov
pop
fisubrl
hlt
or
fidivrl
das
stc
fdivrs
add
cltd
flds
sub
push
std
cwtl
push
add
inc
mov
xchg
xlat
cmp
xlat
or
add
xchg
cmp
ss
ret
ljmp
jmp
shlb
dec
push
js
jnp
loope
dec
xchg
pop
mov
xor
cmp
jmp
sub
cld
lret
loope
xlat
xlat
inc
sbb
sbb
xchg
arpl
cmp
ret
push
clc
stos
sbb
aam
test
or
sbb
mov
pminsw
mov
jle
imul
mov
pop
dec
movsl
aam
mov
dec
pop
or
or
mull
fucompp
fisttpl
stc
mov
jae
outsl
dec
jg
movsl
cmp
aad
stos
xor
adc
mov
fsts
or
sub
mov
mov
sub
lret
sub
cs
push
mov
aad
or
jb
jnp
fldcw
xor
mov
mov
cmp
inc
push
cli
xchg
pop
or
adc
fnstenv
pop
stos
test
pop
fnstenv
adc
xor
pop
and
cmp
rcrl
cwtl
addr16
jns
in
out
repnz
enter
test
jnp
xor
nop
add
jmp
stos
rorb
mov
fcompp
clc
cwtl
filds
or
sub
ss
fcmovu
adc
nop
add
jecxz
stos
add
cwtl
mov
add
or
dec
adc
cmp
fcompp
clc
cwtl
sub
or
mov
mov
imul
pop
shlb
stos
and
cwtl
cmp
push
aad
sbb
add
cmp
mov
test
test
adc
jmp
mov
in
lds
jp
sar
fstps
gs
dec
stos
fwait
lock
test
cmp
or
or
mov
stos
int3
mov
rcrb
stos
and
mov
inc
sub
jge
xor
mov
mov
popf
jae
mov
mov
cld
dec
outsl
pop
ss
mov
ja
lret
loope
sub
ss
cmp
dec
inc
sti
addr16
lcall
jae
mov
leave
mov
mov
jae
or
aad
fisttpl
xor
jae
or
cmc
mov
aam
sub
test
sarb
mov
mov
mov
mov
inc
pop
or
out
dec
imul
cld
sub
loop
jns
adc
or
or
mov
jae
sarl
mov
dec
gs
fucomp
sarb
jmp
cmp
stos
mov
fcomp
mov
jnp
aad
pushf
mov
leave
xchg
sahf
nop
mov
or
lahf
jae
xor
or
mov
shll
sub
and
add
outsl
xchg
push
shrb
sub
adc
ficoml
mov
add
pop
js
movsl
ljmp
das
sub
cwtl
push
dec
mov
dec
outsl
movaps
sbb
imul
sbb
xchg
stos
adc
dec
jns
addr16
xchg
mov
test
sbb
clc
cwtl
add
or
mov
jns
jo
fisubrl
sub
fistl
arpl
dec
aad
sarb
cmpsb
iret
test
inc
ljmp
movsl
dec
sbb
or
arpl
xchg
sbb
inc
xlat
stos
mov
and
sarl
bound
jp
repz
cmp
and
adc
push
push
pop
and
or
aaa
sub
pop
push
into
sub
pop
inc
sbb
sub
std
stos
dec
sbb
das
sub
or
sarb
sub
mov
pop
sub
stos
inc
leave
sub
mov
gs
cs
cmp
sub
xchg
cmp
outsl
or
xlat
dec
pop
cmpsl
cmp
jmp
fisubrl
inc
xchg
xchg
push
push
mov
sub
test
add
sub
lret
stos
pop
lret
inc
pop
repnz
rcll
sub
and
mov
sub
push
and
cwtl
xor
cmp
xor
addr16
dec
test
jp
and
scas
rolb
mov
rcr
test
xlat
dec
push
test
cmp
int3
shll
mov
cwtl
sbb
and
fcomi
ja
jns
jae
stos
fnstenv
mov
shlb
outsl
imul
outsl
ja
xchg
mov
imul
cmp
fwait
dec
dec
xchg
pop
xchg
dec
xchg
rcll
xchg
pop
je
leave
jnp
imul
xor
pop
addl
leave
fiaddl
xchg
xchg
iret
mov
and
int3
jg
dec
jb
inc
in
test
jmp
mov
mov
aas
pop
mov
cli
xchg
ja
mov
mov
mov
dec
iret
xchg
xor
push
loopne
mov
inc
inc
sbb
arpl
outsl
clc
pop
pop
insl
mov
lcall
lret
push
mov
fimull
out
leave
addr16
adc
leave
cmp
lret
cmp
inc
pop
icebp
sbb
and
inc
pop
stos
test
sti
mov
cmp
mov
pop
xor
dec
mov
xchg
fcoms
mov
stos
test
lcall
lret
lret
stc
nop
or
gs
mov
xor
dec
sarl
sub
inc
loop
shlb
sub
sub
fsubrs
cwtl
loope
lcall
adc
jnp
cmp
mov
outsl
imul
or
stos
jnp
xchg
xchg
fcomp
jns
or
and
sub
orl
mov
sbb
mov
outsl
cli
ss
xchg
movsb
add
enter
pop
stc
or
add
testl
mov
xor
add
stos
xor
stos
aam
sbb
lret
out
mull
dec
sarb
jmp
enter
mov
in
cmp
cltd
or
lods
or
jmp
movsb
or
adc
cmp
clc
div
pop
push
sbb
fdivrs
rol
cltd
push
push
cmp
fistpl
cmp
mov
adc
or
roll
pop
ja
and
iret
fisubrl
iret
nop
mov
inc
in
mov
stos
ret
call
mov
testl
push
or
jecxz
mov
xor
mov
xor
ficompl
test
sub
lds
dec
xlat
lret
dec
and
pop
xchg
or
test
mov
lret
test
or
imul
das
push
mov
pop
cmp
mov
jnp
sbb
outsl
jp
pop
push
stos
aaa
mov
push
stos
fimull
cld
dec
lock
mov
stos
lock
stos
fiaddl
inc
inc
fdivs
cltd
stos
stos
inc
push
pop
dec
xor
cmp
fidivrl
inc
xchg
sub
push
leave
jmp
dec
cwtl
fwait
adc
fstpt
ja
imul
mov
cmpsb
or
or
jg
fsts
and
pop
cmpsb
fildll
mov
lock
test
pop
fcoms
syscall
mov
std
stos
cmp
sub
or
sub
cli
dec
inc
fcomps
test
loopne
pop
fdivs
aad
and
dec
inc
fcomps
test
pop
fcoms
and
cli
dec
inc
fcomps
test
mov
fcoms
pop
outsl
test
or
sub
adc
imul
xchg
dec
jp
push
fcom
jp
stos
sub
jp
fwait
test
data16
xchg
stos
mov
arpl
fwait
xor
xor
xchg
stos
mov
arpl
fwait
xor
adc
outsb
pop
arpl
xor
scas
shlb
xor
dec
pop
repz
sbb
pop
fcomps
test
xor
cwtl
cmp
xchg
lret
dec
cwtl
repz
sub
pop
imul
cwtl
adc
inc
insl
imul
ja
xorb
jb
loop
xor
mov
cwtl
dec
sub
cld
imul
mov
arpl
jle
pop
xor
sarl
ja
stos
mov
nop
sarb
jno
inc
stos
xor
sbb
jg
cmp
mov
fwait
push
cmp
dec
mov
mov
jns
jnp
repz
cmp
jb
xchg
dec
jae
xchg
flds
xor
leave
mov
movsl
arpl
jns
xchg
push
mov
fwait
xor
movsl
xchg
enter
cmp
jg
xor
cmpsb
push
and
pop
mov
or
loopne
test
mov
outsl
call
pushf
jge
sub
sub
xor
cmp
xchg
stos
in
fcmovbe
jnp
fisttpl
clc
sbb
pop
fildl
sub
mov
jle
xchg
pop
xor
jg
jb
inc
jb
mov
cwtl
sbb
cltd
jns
inc
pop
repnz
sbb
cmc
dec
js
js
sub
or
cs
push
arpl
pop
mov
or
dec
test
fnstcw
out
stos
les
sub
mov
pop
loope
aas
pop
cmp
stos
mov
movsb
cmp
mov
jle
aas
loop
cmp
cmp
es
scas
jnp
jle
pop
stos
test
pop
xchg
cmp
xor
hlt
dec
jo
sub
pop
xchg
in
stos
mov
xor
mov
dec
cwtl
xchg
xchg
cmp
sbb
jg
js
cmp
leave
mov
loopne
les
inc
cmpsl
cmp
mov
cmp
ja
mov
mov
stos
mov
jge
mov
and
adc
mov
inc
pop
jle
rorb
aam
cmp
sahf
jge
imul
fcoml
js
dec
aad
int3
pop
jg
sub
xchg
dec
popf
rcrb
mov
add
dec
out
mov
fmull
test
jne
mov
mov
enter
dec
sbb
mov
gs
jle
scas
bound
jmp
pop
pop
sbb
and
stos
xchg
pusha
lds
loopne
mov
jb
les
sbb
jg
call
ja
mov
dec
pop
repz
mov
mov
lock
xchg
xor
sub
outsb
aam
es
push
ret
xor
movsb
pop
jge
sub
cmp
mov
xchg
jle
jecxz
mov
fsubrs
lods
jmp
fistl
jecxz
stos
arpl
mov
cmp
mov
data16
lret
lahf
cmp
leave
xchg
cld
fnstenv
and
sar
rcrb
mov
mov
iret
sub
push
dec
sbb
dec
jnp
add
jp
shll
ds
mov
inc
sub
movsl
mov
cmp
mov
cmp
push
test
fs
mov
cmp
stos
cs
stos
mov
sar
adc
cmp
mov
sub
dec
mov
mov
ja
pusha
mov
fsubrl
sti
int3
enter
mov
dec
xor
xlat
xor
jno
pop
dec
add
or
pop
pop
cmpsl
test
xor
sarb
cmpsb
push
scas
dec
xor
or
ret
outsl
ret
fimull
clc
push
stos
fwait
loopne
sbb
sti
call
cmp
mov
js
jmp
enter
lcall
xchg
shrb
push
jle
adc
ds
adc
fsts
dec
adc
jmp
shll
movsl
jmp
stos
push
mov
clc
popa
stos
cmp
pop
dec
repnz
push
decl
and
pop
lret
mov
movsl
jmp
movsb
mov
pop
lcall
cmp
cmp
sub
ss
xchg
fildll
and
test
in
out
fstps
or
jge
adc
sbb
sbb
ret
pop
rorl
xlat
ret
mov
adc
fadds
repz
ret
lcall
fcoms
fdivrs
mov
mov
fstpt
repz
cltd
repz
mov
gs
pop
enter
xchg
cmp
stc
pusha
stos
xchg
repz
test
lret
and
fcomps
or
or
jb
xor
rcrb
add
mov
test
inc
add
sbb
fmul
mov
ret
popf
psubb
jns
xlat
xor
and
xlat
mov
xchg
imul
jns
push
fistl
jnp
lcall
mov
jecxz
imul
cmp
mov
jb
pop
dec
cmp
xor
stos
mov
jae
in
or
jnp
es
push
sub
call
ret
test
dec
addr16
pop
jnp
fwait
pop
inc
dec
mov
pop
sarl
dec
pop
inc
dec
mov
pop
sarl
dec
pop
dec
dec
mov
pop
mov
daa
test
mov
sbbl
xlat
or
jp
lret
dec
into
mov
mov
dec
mov
sbb
cmp
fwait
xchg
pop
out
dec
pop
sub
lret
dec
data16
data16
jge
scas
adc
xor
sbb
movsl
mov
loop
sti
inc
sbb
xor
jnp
jo
xchg
jmp
std
stos
into
mov
mov
pop
fs
dec
movsb
mov
sti
cmp
lcall
mov
jae
dec
inc
mov
repnz
inc
or
xor
inc
pop
jle
inc
insl
mov
sarl
clc
stos
mov
xor
lds
data16
ljmp
sbb
or
dec
popf
mov
in
stos
mov
cmpb
jp
cmp
jns
jp
dec
mov
lret
dec
jnp
xchg
mov
mov
xor
clc
dec
cli
jle
cmpsl
fwait
pop
loope
cmp
pop
adc
fidivl
add
or
pop
mov
data16
out
xor
pop
mov
data16
pushf
sti
sub
ret
cltd
jmp
jge
or
sar
ficompl
push
mov
pop
das
fwait
push
test
sar
into
push
mov
xchg
pop
inc
fcoms
stos
mov
fcomps
jmp
jmp
cmp
cmp
xlat
fdivrs
sbb
mov
ror
rorb
stos
push
shrb
xlat
and
mov
sub
or
loope
cwtl
and
fnstenv
data16
dec
dec
or
sbb
xchg
or
mov
cmpsb
test
lret
sbb
imul
mov
stos
sahf
out
ljmp
cwtl
add
push
sub
mov
scas
shlb
pop
xor
std
sbbl
test
fstps
cltd
flds
mov
mov
test
movsl
mov
xlat
or
lret
arpl
imul
test
mov
xor
stos
movsl
ja
mov
ljmp
push
subl
stos
inc
mov
push
nop
arpl
popf
lret
and
push
push
push
ds
orb
imul
mov
mov
jmp
pop
imul
enter
movsl
cmp
test
push
rclb
xor
fcomps
lret
flds
xchg
into
mov
loope
test
mov
lcall
fcompl
xor
stos
mov
dec
sbb
lret
lret
pop
stos
test
lcall
shll
add
xchg
pop
addr16
lret
ret
pop
jnp
cwtl
sbb
lret
xor
fistl
jl
mov
pop
dec
setp
xchg
sub
sub
lcall
pusha
mov
xor
aas
jb
lret
sub
cmp
or
or
imul
cmp
mov
ss
jae
or
xlat
mov
pop
out
cmp
sub
outsl
sub
pop
outsb
fcomp
enter
cmp
mov
rcrb
or
sbb
lret
jns
test
push
dec
fs
dec
fsubs
mov
aas
outsb
mov
mov
rcrb
push
leave
sahf
loop
aas
mov
data16
movsl
movsl
test
stos
or
enterw
cmpsb
mov
js
push
ret
cmp
xchg
pop
push
movsl
pop
imul
mov
mov
mov
or
push
fs
cmp
arpl
or
enter
jl
cmpb
mov
sub
lds
mov
shlb
out
dec
mov
pop
in
scas
adc
mov
mov
pop
inc
pop
in
lret
adc
mov
mov
test
out
adc
mov
ret
mov
test
ret
inc
mov
lods
mov
fs
push
mov
mov
test
xor
arpl
mov
test
xchg
rcrb
xchg
xchg
outsl
mov
xchg
std
mov
std
mov
stos
outsl
mov
pop
cmpsl
imul
xlat
cmp
mov
sub
adc
dec
inc
or
mov
pop
or
lret
gs
push
test
jg
fiaddl
or
inc
fldcw
stos
and
lret
inc
and
pop
lahf
dec
xor
xchg
dec
shrl
leave
adc
out
gs
dec
fs
jge
sub
jmp
dec
or
lret
lret
dec
ljmp
test
add
dec
or
xor
fxtract
gs
or
stos
xchg
push
inc
or
pop
lock
dec
cmp
repz
sub
std
stos
les
sub
mov
fs
out
dec
js
xchg
lret
sub
mov
jg
fiaddl
jne
mov
sbb
jg
fiaddl
dec
add
dec
cwtl
or
lret
sub
call
lretw
or
daa
dec
stos
or
mov
fimull
add
xor
dec
mov
leave
xchg
cmpsl
sub
stos
std
pop
or
ret
jbe
ret
or
pop
inc
hlt
stos
ss
push
xchg
sbb
shrb
cs
sub
mov
pop
dec
sbb
mov
pop
mov
push
cmp
data16
push
mov
pop
dec
mov
xor
aam
mov
stos
into
int
mov
dec
jo
xor
stc
dec
cli
or
sub
mov
lcall
dec
sbb
pop
dec
sbb
xchg
fnstcw
stos
mov
cmp
aas
cmp
sub
arpl
lcall
mov
jb
leave
sub
leave
imul
mov
sbb
mov
movl
jge
das
xchg
stos
jp
movsl
xchg
mov
lcall
mov
xchg
stos
mov
dec
rcr
fnstcw
cltd
jmp
gs
push
stos
cmp
pop
into
test
loopne
pop
call
or
fsts
jp
mov
lcall
fwait
rclb
and
add
dec
into
fwait
jae
cmc
leave
imul
lds
flds
fsubl
or
mov
mov
mov
jle
add
mov
cmp
xorb
or
mov
adc
sbb
jmp
clc
mov
inc
add
mov
dec
icebp
dec
inc
call
imul
ficompl
mov
xor
in
stos
jno
adc
mov
mov
dec
sbb
pop
sub
adc
jmp
es
fcomps
inc
mov
mov
mov
lret
cmp
mov
push
pop
je
stos
mov
xchg
lret
iret
ja
inc
scas
stos
movsl
jg
fld
adc
adc
cmp
ss
xchg
mov
lret
mov
mov
fwait
jae
cld
jns
std
mov
cwtl
nop
add
mov
fsts
xchg
add
cld
add
mov
lock
or
divl
mov
imul
in
stos
jae
cld
or
aad
ljmp
stos
nop
sub
shrb
movsl
dec
cmpl
push
int
fcmovnbe
pop
mov
lret
xor
xchg
fdivs
inc
imul
call
dec
cmp
jno
fwait
js
std
fistpl
sub
cmp
or
jmp
repnz
add
mov
pop
into
cmp
mov
xlat
cmpsb
add
mov
ljmp
fldcw
jmp
out
movsl
xchg
dec
aas
add
jae
or
call
push
xor
xlat
leave
mov
pop
movsb
subb
xlat
cmp
popf
push
stc
jae
fwait
cmp
add
pop
mov
fwait
mov
mov
stos
pop
inc
sbb
or
sub
mov
ljmp
cltd
fwait
incl
adc
stos
cmp
cmp
mov
lret
fldt
sbb
sub
adc
or
stos
ja
jo
cmpsb
test
adc
stos
pop
or
or
lret
stos
in
enter
nop
into
jmp
sub
gs
cmp
cmp
mov
or
mov
cmc
lahf
and
daa
gs
mov
lret
iret
negl
sbb
lret
pop
dec
pop
xor
pop
fidivrl
mov
jno
inc
and
mov
stos
add
fildll
fidivrl
pop
cmp
or
jecxz
xor
fsubrs
aas
cmp
call
fcoms
insl
dec
into
cmpl
jno
popf
or
sub
mov
xlat
fcomp
sub
or
pop
adc
jbe
sar
mov
clc
pusha
sub
or
mov
in
or
dec
jnp
add
test
sub
cmp
jo
sbb
mov
stos
xchg
sub
fcompp
and
fidivl
and
pop
mov
add
cld
cld
int
inc
sub
fistl
push
pop
push
cmp
jmp
add
pop
push
lock
jbe
or
test
fwait
inc
mov
pop
sub
dec
fadds
and
pop
xor
jbe
fildll
fwait
mov
jmp
xchg
or
test
dec
or
xlat
sbb
sub
mov
sbb
stos
inc
sub
shlb
jl
cmp
scas
mov
cli
in
stos
mov
inc
xor
push
test
repnz
scas
dec
es
pop
stos
test
adc
xor
push
jmp
fsts
sbb
sbb
movsl
sbb
cmp
push
push
scas
pop
fsts
stos
pop
fwait
push
popa
jae
inc
lcall
dec
scas
psubusw
sbb
addr16
mov
jg
mov
pop
fidivrl
std
stos
rcrb
pop
mov
pop
mov
mov
mov
stos
xchg
xchg
mov
int3
stos
pop
gs
scas
jmp
jne
mov
pop
push
mov
dec
lods
mov
xor
mov
sbb
lret
int3
das
fsts
dec
pop
stos
aam
or
movsb
pop
mov
xor
mov
cmp
lds
inc
pop
stos
add
out
adc
xor
mov
mov
cwtl
sbb
mov
enter
stos
push
enter
lret
pop
fsts
stos
push
mov
push
mov
dec
mov
push
pop
int3
pop
stos
les
sahf
cmp
sub
flds
rcrb
or
stos
into
aad
movb
mov
into
mov
movsl
movsl
fnstenv
mov
fwait
and
pushf
arpl
cwtl
xchg
aaa
fsts
sbb
xchg
lret
fnstcw
lret
ficoml
nop
push
push
stos
xchg
and
nop
fxch
int3
mov
mov
mov
adc
cmp
xor
mov
pop
mov
fnstcw
or
mov
insl
dec
iret
xlat
scas
sti
xor
xor
call
add
lcall
or
movsb
shlb
sub
imul
and
rcrb
adc
dec
clc
mov
js
int3
pushf
es
jne
mov
mov
pop
xor
mov
in
add
fld
push
nop
cmpsl
mov
mov
mov
stos
mov
push
cwtl
mov
mov
cwtl
nop
cmpsl
imul
mov
in
pop
cmp
pop
cltd
lret
mov
pop
and
cltd
iret
hlt
or
into
inc
sbb
dec
lods
dec
xchg
inc
xor
or
sub
cld
adc
movsl
pusha
mov
mov
xor
or
jo
xchg
jmp
cmp
or
or
sub
mov
cltd
mov
lods
sbb
test
cmp
in
aam
outsl
cwtl
ss
ficoml
mov
fmul
ds
mov
sub
or
dec
aad
pop
jo
fldenv
sbb
adc
mov
mov
mov
fwait
pop
lcall
mov
pop
stc
lcall
cmc
movsb
push
pop
xor
push
leave
pop
mov
mov
iret
xlat
sbb
push
fildl
fisubl
jge
xor
lahf
jmp
add
jp
jnp
jns
mov
faddl
loop
fcmovu
dec
clc
pop
mov
adc
mov
jge
imul
mov
inc
lods
ficoml
fcmovbe
jns
test
mov
cltd
or
fdivrp
cmp
stos
push
fnstsw
push
lret
clc
sub
fscale
dec
cmp
std
es
pop
test
imul
call
shll
pop
and
shll
int
leave
mov
shrb
fxam
rorl
cmp
in
int
rcrl
push
test
dec
sub
mov
leave
cs
fldcw
js
fstp
dec
fidivrl
dec
ljmp
ss
fwait
jb
mov
sub
xlat
lcall
and
test
lahf
jns
dec
ja
cmp
dec
lahf
jae
xor
pop
rolb
xchg
dec
push
pop
pop
xlat
push
jns
fsubs
cmp
jns
sbb
pop
fists
cwtl
orb
pop
mov
dec
imul
jnp
jnp
add
dec
fimuls
stos
test
mov
mov
sarb
stos
adc
dec
pop
xchg
jg
fwait
jle
mov
mov
mov
jle
or
push
lds
jmp
xchg
or
or
xor
mov
sub
das
jbe
or
cmp
adc
sub
sub
sub
sub
jmp
in
stos
mov
sub
inc
xor
mov
inc
and
xor
outsl
cwtl
aam
and
push
and
and
dec
xchg
call
stos
dec
sub
xchg
test
xor
xor
imul
shlb
jp
stos
stc
dec
sbb
fwait
xchg
push
test
call
sub
jns
arpl
clc
dec
pop
or
fildll
push
jmp
xor
xchg
push
movsl
jmp
sub
addr16
jmp
add
lret
jmp
stos
mov
mov
stos
xchg
jp
rcrb
sub
xchg
lret
pusha
sbb
enter
stos
into
and
shl
pop
stos
sub
aad
inc
mov
stos
mov
mov
sub
or
cmp
test
sub
mov
sub
jmp
mov
xchg
push
pop
or
ja
or
stos
repz
inc
mov
inc
mov
inc
jnp
lret
stc
mov
xor
sub
jge
dec
mov
jae
leave
push
scas
sub
inc
mov
jge
test
xor
nop
jo
jp
cwtl
pop
fs
stos
gs
jge
jmp
jae
cld
push
dec
cmp
stos
shll
xchg
xchg
data16
stos
push
pop
xor
or
hlt
sub
stc
jne
mov
fcompl
push
mov
xchg
lret
ds
push
scas
jmp
xchg
pop
sub
and
lds
push
and
inc
enter
pusha
int
adc
scas
pop
inc
lretw
cmp
rcrb
lret
pop
pop
mov
inc
push
pop
mov
lret
mov
sbb
gs
mov
fwait
sbb
in
stos
xchg
or
popa
enter
popa
fwait
or
push
push
loop
cmp
fimull
pop
pusha
int
cmp
sbb
xchg
jns
lds
or
aam
or
or
mov
or
or
stos
inc
jp
xchg
adc
xchg
mov
into
jnp
mov
sub
xchg
inc
imul
insl
sub
push
pop
adc
jnp
fdivs
xchg
mov
je
imul
sbb
outsl
cmp
jl
gs
mov
inc
push
cmp
cmpsl
mov
xchg
cmpsl
adc
or
clc
and
dec
test
test
jb
adc
iret
push
sbb
stc
ret
clc
jb
aaa
mov
push
cltd
roll
hlt
mov
mov
lock
mov
jnp
mov
cltd
movsl
or
jnp
pop
in
push
fstps
add
or
inc
dec
imul
fnsave
repnz
adc
xchg
inc
stos
lret
add
cmp
mov
xchg
loope
enter
fwait
jmp
gs
pop
cwtl
aaa
fmul
test
in
aam
xchg
mov
cmp
dec
fsubrs
rcr
or
fldcw
fcmove
adc
stos
pop
cwtl
aaa
call
in
test
mov
imul
cmp
shr
stos
and
cwtl
cmp
mov
adc
jmp
aad
sbb
movsl
xor
inc
loopne
movsl
adc
testl
mov
clc
hlt
add
adc
inc
cmp
or
imul
cmpsl
ss
sub
fimull
into
rcrb
adc
dec
mov
imul
jae
mov
mov
inc
in
mov
outsl
cmp
xchg
mov
testl
cmp
push
inc
stos
inc
lock
test
mov
lret
stc
add
flds
lock
stos
test
dec
jmp
pop
xchg
popf
and
popf
inc
or
stos
mov
sub
cmpsb
dec
lcall
jnp
add
cmp
or
sub
cld
and
mov
stc
fwait
sbb
add
and
pop
sub
sub
xchg
rorb
xor
fstpt
push
sub
js
mov
pop
mov
mov
leave
and
pop
leave
xchg
push
or
or
fwait
jnp
jmp
mov
pop
xor
dec
dec
test
mov
test
cmp
jno
sub
or
push
fcmovu
sbb
ds
cmp
imul
lcall
mov
mov
out
movsl
cld
lcall
jnp
cmpsl
sub
sbb
dec
pop
scas
aam
imul
aam
mov
lds
jnp
cmp
pop
mov
jp
sub
sbb
jmp
xor
jae
or
stos
fstps
test
pop
call
aad
xor
mov
mov
ficompl
adc
cwtl
lret
icebp
cs
es
stos
pop
dec
sbb
or
test
cmp
lods
cmp
sub
pop
enter
mov
inc
cwtl
shlb
jb
jb
cmpsl
cmp
mov
movsl
cmp
movsl
imul
decl
shlb
arpl
mov
cltd
cli
in
ror
ja
inc
rcrl
pop
divb
loop
into
repnz
mov
js
push
lock
lret
mov
pop
aas
imul
mov
inc
xchg
jmp
std
xchg
cmp
ja
cmp
xor
or
xor
shlb
cmpb
out
movsb
jns
sbb
out
inc
push
sbb
imul
lahf
pop
fdivrl
imul
pop
fistl
mov
stos
lret
pop
mov
ficoml
psubusb
sbb
cmp
sbb
jnp
sub
and
mov
lcall
pop
pop
or
mov
nop
jnp
and
inc
sahf
fdivrs
out
mov
aam
mov
cmp
mov
cmpsl
push
imul
add
ds
cmp
inc
lcall
incb
sub
das
rcrl
loop
or
arpl
jb
xchg
clc
dec
pop
sti
lock
xchg
cltd
int3
dec
jns
inc
sub
movsl
cld
dec
pop
xor
cmp
dec
sub
xlat
addr16
add
dec
pop
sbb
fcoms
sbb
mov
rcr
insl
rolb
adc
mov
pop
stos
test
iret
mov
inc
xor
rclb
mov
jecxz
cmpsl
cmp
fsts
stos
cs
nop
rcr
jno
xchg
enter
movsl
fsubrs
les
into
mov
out
or
cmpsl
push
jg
cmp
std
stos
out
pusha
mov
pop
loop
xchg
imul
pop
jae
cld
mov
push
leave
mov
pop
cmp
cmp
stos
in
stos
mov
push
push
aaa
or
adc
mov
sbb
jmp
lds
fildl
xor
imul
mov
dec
ds
pop
dec
aam
jp
stc
adc
jle
pop
stos
test
mov
mov
mov
dec
inc
lds
cwtl
or
xchg
pop
stos
sub
mov
mov
inc
xor
sbb
imul
fcoms
jae
push
fdivs
xor
mov
mov
dec
cltd
add
inc
iret
cmp
enter
sub
mov
mov
sub
cmpsl
es
and
jo
cld
lret
xchg
sbb
pop
sbb
sarb
movsb
stos
repz
cmp
test
inc
lock
stos
test
jge
scas
ljmp
xchg
sbb
stos
mov
mov
loope
aas
mov
data16
dec
pop
push
jns
lret
pop
pop
ficomps
test
dec
adc
mov
and
xor
stos
popa
pop
lock
fildll
inc
sub
or
adc
fmuls
dec
lcall
cmp
ja
mov
or
pop
sub
or
js
push
sbb
jmp
or
cmpsl
addps
push
or
or
mov
xchg
mov
out
sarl
leave
aad
xor
pop
fmuls
loopne
xchg
mov
cmp
test
and
adc
ja
mov
cmp
or
fnstcw
or
cmp
ja
sub
jecxz
sbb
xchg
sub
daa
inc
clc
mov
dec
jle
mov
pop
ja
mov
pop
push
cwtl
js
or
test
mov
mov
mov
dec
dec
mov
sbb
js
sub
mov
sub
xchg
lret
push
lahf
js
cmpb
popf
in
stos
mov
pop
jae
outsl
push
fimull
lcall
adc
imul
sub
inc
xor
lret
jb
dec
mov
jne
scas
rolb
js
jb
lret
sub
pop
sahf
int
mov
dec
aad
xor
push
mov
stos
xchg
push
jno
jae
sub
push
push
js
stos
xchg
pusha
push
js
xor
or
xchg
xchg
js
stos
test
mov
and
jle
stc
xchg
js
stos
test
pop
movsb
das
fwait
adc
push
loope
or
test
sub
pop
sar
out
nop
jno
shl
or
aam
jp
pop
cs
dec
mov
pop
stos
test
sub
cmp
sbb
cmp
mov
mov
dec
scas
cltd
mov
mov
das
daa
pop
jge
inc
lret
mov
nop
inc
jnp
mov
push
mov
and
xor
mov
mov
push
lahf
mov
in
jecxz
fcompl
cltd
dec
add
dec
fistpl
mov
ja
mov
fisttpl
or
dec
shrl
jmp
loopne
arpl
stos
xchg
fwait
pop
pop
mov
xor
pop
mov
cmp
push
pop
ljmp
lds
mov
leave
mov
pop
mov
push
stos
gs
test
adc
addr16
nop
sub
and
pop
sub
mov
pop
cmp
fsubs
pop
mov
std
stos
out
dec
push
fcmovnbe
aaa
pushf
add
cmp
outsb
pop
leave
mov
pop
cltd
xor
jg
mov
pop
jmp
and
jne
mov
jp
fdivrl
stos
cmp
xor
call
xor
xchg
sub
push
lods
push
fistpl
test
xor
sbb
fs
adc
stc
jae
in
dec
into
pusha
cmp
mov
pop
rorb
cmp
sarb
jnp
pop
fwait
xlat
or
lds
lock
out
mov
adc
test
mov
rcrb
mov
sarl
fisubrl
ljmp
out
pop
mov
cmp
dec
mov
std
stos
add
cmc
cwtl
or
mov
stos
shlb
mov
enter
stos
leave
or
jmp
or
fildll
mov
inc
xor
les
clc
test
stos
lcall
lret
mov
lods
jp
imul
fs
jnp
xor
xor
mov
clc
jno
shr
jmp
pop
jmp
dec
sub
inc
cwtl
sbb
sbb
pop
mov
mov
xchg
enter
stc
cmp
or
xchg
mov
sbb
clc
xor
rcr
sub
cs
sub
pop
sbb
push
test
sub
lret
mov
sbb
xchg
push
sub
adc
lock
lcall
stos
sti
loopne
aad
mov
outsl
js
nop
mov
mov
push
repnz
pop
mov
fisttpl
dec
js
test
cwtl
fisttpl
out
les
fcmovu
cmp
sub
movsb
lret
lods
int3
pop
pop
arpl
pop
fwait
push
push
mov
cltd
cmovnp
pushf
movb
cmp
mov
mov
test
inc
inc
pop
push
imul
xchg
cmc
cmc
push
sarb
das
mov
icebp
dec
imul
xor
stc
lret
pop
stos
imul
adc
test
sub
xchg
push
repnz
jl
iret
sbb
sub
lock
mov
or
push
imul
sub
arpl
jns
or
cmp
cmp
mov
mov
lret
dec
and
addr16
push
pop
stos
clc
push
and
dec
jl
jb
movl
pop
imul
pop
fstpt
pop
ljmp
int3
xlat
stos
clc
lcall
shll
pop
js
xlat
cwtl
push
jmp
sub
repz
sub
jnp
lcall
in
jnp
jmp
enter
das
ljmp
loope
sub
jnp
outsl
stos
jo
iret
push
or
sbb
pop
cmp
stos
xchg
gs
sub
jmp
inc
jmp
mov
insb
cmp
sub
xor
dec
sub
pop
inc
shrl
std
stos
into
aaa
enter
jmp
insb
shl
cwtl
mov
in
stos
xorb
xor
dec
cmp
or
lock
leave
mov
sub
stos
mov
popf
je
cli
lock
sub
stos
or
test
xor
jg
ja
push
xchg
ljmp
enter
outsl
or
jnp
xchg
mov
in
stos
xorb
sarb
pop
incl
cmp
stos
test
jns
int3
lea
shrl
push
sub
std
stos
out
rorl
inc
push
mov
adc
loopne
dec
lret
push
mov
dec
test
dec
push
jno
sbb
incl
sub
cld
ja
stos
jb
iret
mov
sub
xchg
jp
adc
stos
or
aas
pop
push
int
mov
cmp
imul
pop
and
lds
subl
repnz
xchg
imul
cltd
cmp
pop
outsb
imul
bound
aad
les
dec
cmp
xchg
push
mov
mov
leave
bound
loopne
test
pop
xchg
mov
ja
xor
cmp
mov
adc
jmp
fstps
jg
dec
test
stos
test
and
xchg
dec
mov
inc
fwait
cmp
and
cmp
xor
in
ds
popf
adc
push
sub
cmpsb
xor
cmp
mov
lahf
cmp
dec
xor
test
sbb
sbb
xor
dec
cmp
mov
xchg
dec
popa
adc
cmp
data16
es
movsb
test
movsb
sub
mov
xor
mov
lcall
lock
lret
test
xor
lock
outsl
in
or
xchg
inc
adc
fcmovbe
inc
xchg
test
pop
cwtl
add
mov
xlat
fidivl
popf
pop
pop
pop
mov
lcall
mov
sub
cmp
mov
rcll
pop
xlat
jmp
sbb
sub
mov
jnp
bnd
cmp
ja
sbb
outsl
jae
sub
mov
ja
lods
xchg
cmp
xchg
push
repnz
or
testl
mov
lret
jns
test
pop
fs
or
sbb
rcr
pop
mov
pop
fcmove
adc
xchg
jmp
ja
xchg
in
test
mov
imul
sbb
sub
xor
vmwrite
pop
jmp
cltd
mov
sub
test
repnz
xor
andb
push
inc
pop
leave
sti
inc
lret
sbb
xor
push
xor
dec
or
iret
mov
and
nop
inc
jns
repz
dec
mov
or
pop
mov
dec
mov
xchg
sub
and
ljmp
add
xor
xchg
mov
mov
in
stos
xchg
pop
mov
and
sahf
arpl
cmp
pop
xchg
lret
pop
mov
data16
mov
xor
pop
popf
pop
cwtl
loopne
ljmp
lcall
stos
lahf
inc
sbb
ljmp
mov
clc
xor
adc
ds
pop
stos
test
data16
push
stos
ficoml
cmp
aam
jl
add
xor
hlt
xor
pop
xor
mov
gs
mov
fisttps
fiaddl
sub
sbb
add
cwtl
pop
inc
mov
pop
sbb
ja
pop
jnp
or
pop
rcl
dec
mov
sar
sbb
push
lcall
cmp
popa
or
pop
aad
mov
adc
imul
dec
sarl
pop
mov
inc
mov
adc
int
and
scas
int3
fadd
pop
fisttpl
dec
sub
pop
mov
add
ljmp
pop
cmp
or
push
jmp
js
ss
aaa
add
adc
xchg
jmp
mov
mov
mov
sbb
push
push
mov
lcall
dec
enter
js
push
sbb
rorb
fcomps
xchg
mov
xor
pop
retw
or
dec
xor
int
movsb
test
or
xlat
mov
sti
int
roll
or
or
sub
test
adc
loopne
sub
stos
cs
mov
xchg
push
or
jl
fisubrl
lods
lret
xor
shrl
fwait
lret
stos
xor
jmp
fcmovnbe
call
jns
jnp
fildl
pop
ja
fildll
dec
ljmp
add
inc
push
cmp
jns
dec
stos
jno
mov
and
jne
mov
mov
pop
sub
or
pop
loopne
xor
dec
or
xchg
lcall
mov
or
aad
mov
fcoml
adc
loopne
test
test
xchg
clc
adc
xchg
sbb
stos
and
cmp
cmp
or
pop
cli
adc
addr16
fdivr
xor
dec
dec
jmp
fmuls
sbb
jecxz
add
shlb
stos
and
fildl
cli
adc
push
sub
popf
cmpsl
cli
jne
mov
das
fnstenv
and
mov
dec
mov
or
data16
out
fcomps
mov
jne
mov
gs
dec
cwtl
inc
adc
xor
dec
or
push
std
xchg
and
jbe
push
pop
inc
lea
aas
lods
pop
lds
mov
test
lea
bound
rcrb
sub
imul
cmpsl
dec
sub
enter
or
pop
inc
movsl
xchg
cmp
xor
in
push
pop
jp
outsl
stos
pop
ret
sbb
lret
add
test
push
inc
xor
pop
lods
cmp
fimuls
in
stos
xorb
bnd
test
cmp
jg
sbb
stos
sbb
mov
leave
fldenv
repz
jns
out
dec
addl
adc
sub
or
stos
test
sbb
int3
push
movsb
jmp
xchg
pop
mov
or
adc
push
cwtl
push
or
sbb
test
mov
imul
sub
addr16
int
mov
sbb
dec
arpl
test
test
push
or
or
push
mov
les
imul
jmp
sahf
mov
xchg
pushf
pop
jge
js
sub
pop
or
inc
dec
ret
daa
sub
push
test
or
int
push
ljmp
mov
fsubrl
push
iret
or
sbb
add
cmp
sbb
stc
popa
jge
push
out
cmpsb
push
dec
aaa
sub
add
and
or
sbb
dec
fstpt
js
xor
pop
adcb
call
mov
insb
add
je
mov
dec
jp
sbb
mov
or
aaa
sti
adc
mov
test
imul
jno
adc
xor
mov
cmpb
nop
push
pop
aas
lods
cmp
mov
pop
push
cmp
pop
inc
pop
jl
cmp
aas
insl
pop
mov
cmpsl
pop
adc
mov
gs
mov
insl
sub
add
jle
and
cmp
js
cmp
int
xchg
cmp
jae
mov
add
out
dec
cmp
jns
ret
jecxz
and
sahf
repnz
insb
lds
mov
xchg
xchg
sbb
out
arpl
jp
push
pand
clc
jecxz
sub
mov
stos
pop
fld1
loopne
or
testl
sub
lock
jno
out
mov
sbb
dec
mov
pop
lcall
and
idivl
out
divl
decl
adc
xchg
sub
lock
test
ret
xor
mov
lret
aam
xlat
negb
fildl
stc
add
mov
jb
jmp
sub
adc
cmp
xlat
std
jae
shl
xor
fcomip
xor
push
push
testl
push
mov
push
pop
jnp
fcmovnu
clc
idiv
fistpll
mov
les
aad
cwtl
or
pop
dec
or
inc
xchg
sarl
in
sub
je
pusha
dec
lods
roll
cmpb
add
enter
ficoml
icebp
push
xorl
dec
cmc
mov
adc
fdiv
insl
and
jl
or
stos
je
push
cwtl
clc
xchg
and
jnp
jl
or
sub
push
pop
test
cmp
loop
fldt
jae
call
cmp
jne
jae
int3
jp
std
push
faddl
push
pop
call
popa
cmp
dec
sub
sbb
fwait
mov
std
xor
mov
enter
rolb
xor
mov
pop
imul
xor
ja
push
cli
aad
insb
test
fs
leave
xchg
mov
sub
fmul
fistl
jmp
push
stos
pop
pop
imulb
jg
xchg
mov
sub
call
sbb
xchg
mov
push
dec
jns
shrl
inc
xchg
in
shll
jne
xchg
jl
pop
fbstp
test
dec
mov
loopne
rcl
imul
push
dec
cmp
cmp
dec
outsl
jae
xchg
js
call
jo
cmp
cmp
mov
mov
aam
pop
ret
mov
sub
mov
sub
ret
jmp
mov
inc
pop
addr16
pop
jae
sarb
pop
sarb
test
xor
fwait
dec
or
push
js
dec
push
cmp
scas
add
dec
cmp
push
cwtl
adc
cmp
push
cmp
push
adc
stos
orl
stos
sub
mov
test
jns
fwait
into
lock
fwait
pop
mov
jne
jle
dec
xor
push
jns
xacquire
ljmp
pop
jbe
scas
jno
lcall
fcomi
push
lahf
pop
sbb
testb
inc
dec
dec
fisubrl
aad
out
sub
arpl
fisubrl
xchg
loope
pop
fmuls
mov
fadds
call
jns
scas
testb
imul
jbe
fwait
sbb
jae
jne
stos
int3
call
sbb
cli
adc
lods
shr
mov
fwait
xor
pop
jp
push
cmp
imul
test
mov
fldcw
add
cs
out
mov
or
notl
cmp
xchg
cmp
xchg
jg
sub
pop
jns
jmp
std
mov
cmp
fidivrl
mov
scas
aam
adc
cmp
push
sub
call
push
ret
jge
dec
cmp
or
ljmp
xor
adc
or
dec
fwait
cld
imul
fmuls
inc
lret
mov
cmp
fwait
ret
imul
pop
lcall
mov
dec
outsl
js
add
les
shrb
push
cmp
xchg
flds
sbb
stc
adc
inc
cwtl
jbe
sub
ja
sub
dec
push
fldl
sub
dec
rcr
ret
pop
dec
push
sbb
add
cwtl
jo
inc
test
ret
sub
mov
ds
push
subb
adc
inc
in
sti
xorl
mov
push
sub
xor
inc
jmp
or
cmp
or
aam
lods
rcrl
jnp
sub
outsl
mov
in
adc
rol
cmp
lret
imul
and
mov
xchg
imul
pop
or
push
add
cmc
cmp
flds
sbb
lret
dec
or
xchg
pop
clc
sub
xor
fwait
inc
in
jno
sarl
dec
jne
adc
ds
ss
pop
lret
sub
add
xlat
test
cmp
imul
mov
mov
cmp
dec
fildl
push
fisttpl
pop
sbb
dec
push
push
outsl
fs
mov
xchg
arpl
push
leave
leave
cmp
adc
jb
or
test
pop
or
rcrb
push
pop
or
les
pop
pop
nop
test
hlt
stc
bswap
call
cmp
fwait
stc
mov
inc
mov
iret
repz
cmp
fwait
push
dec
jle
lock
xchg
orl
or
in
mov
pop
adc
sbb
mov
test
dec
cltd
cmc
mov
imulb
push
mov
aas
mov
inc
enter
sbb
fists
mov
inc
sbb
scas
loopne
rorb
inc
jp
std
push
mov
stos
jecxz
outsl
xchg
imul
mov
add
test
inc
xor
stc
mov
in
inc
shrl
sar
clc
sub
inc
test
xchg
dec
fdivrl
xchg
adc
adc
das
mov
mov
test
ja
mov
mov
dec
scas
mov
xor
int3
mov
or
rcl
add
dec
ds
outsl
fwait
xor
xor
pop
cmp
xchg
push
mov
mov
shlb
aad
adc
sbb
xor
xchg
push
mov
mov
stos
mov
aam
push
leave
push
jmp
xchg
and
imul
divl
imulb
dec
negl
lret
mov
add
dec
fsubs
test
xchg
lock
mov
push
add
jne,pt
fidivl
push
inc
push
or
mov
loope
loop
xlat
imul
mov
push
icebp
lahf
sub
shrl
lret
hlt
mov
popl
or
sub
fwait
sbb
push
addl
mov
mov
xchg
test
adc
outsl
xlat
push
in
cwtl
xor
dec
rcr
cs
clc
fidivl
enter
in
dec
inc
stos
outsl
lcall
push
pop
test
adc
stos
loope
iret
pushf
sbb
jg
push
hlt
or
adc
push
cmpsb
pop
sub
cmpl
clc
xor
xchg
aad
out
jae
orl
or
fstpl
sub
lock
dec
pop
sub
clc
mov
out
mov
insl
push
add
sbb
clc
imul
in
xor
mov
arpl
add
imul
cs
or
xor
fcom
and
pushf
adc
or
sub
mov
out
mov
sub
cwtl
xchg
inc
shl
push
imul
inc
add
push
fwait
scas
outsl
mov
inc
test
jae
cld
push
lret
outsl
fwait
leave
inc
test
arpl
cld
push
sub
push
xor
sbbl
xchg
cmp
pop
dec
sub
mov
outsl
xor
dec
xchg
mov
xor
in
cmp
adc
and
into
aad
xchg
or
or
dec
repnz
mov
mov
std
xchg
mov
or
repz
aaa
cmp
in
mov
enter
shr
push
scas
or
faddl
fnstenv
dec
fs
dec
aaa
mov
popa
fwait
lock
bound
push
scas
enter
push
sub
inc
jmp
fdivs
lcall
daa
icebp
sub
add
test
add
mov
or
pop
aam
push
repz
jmp
loop
xlat
fwait
pop
cmp
or
imul
test
jns
js
clc
mov
jmp
std
test
sub
scas
mov
subl
js
pop
fwait
or
fisttps
jno
and
mov
testb
sbb
cmp
fisubrs
mov
pop
sub
mov
and
inc
test
sti
pop
lcall
mov
loop
sbb
gs
ja
push
mov
sub
cwtl
fisubl
nop
sub
and
push
push
clc
push
imulb
pop
mov
sub
jns
push
sbb
cmp
sbb
pop
push
jg
cld
pop
add
adc
or
xchg
fisttpl
jne
mov
jmp
jge
mov
stos
fadd
xor
enter
dec
jb
adc
jecxz
adc
ret
xchg
test
imul
or
lcall
fdiv
sub
repz
mov
adc
ja
nop
or
insl
or
fidivrs
and
adcb
lret
cltd
icebp
into
fs
mov
aam
sbb
or
xchg
cwtl
jmp
ljmp
leave
subl
pop
dec
out
ja
cwtl
or
sub
cmpsb
repz
les
jecxz
jns
pushf
push
dec
push
cmp
cmp
rclb
and
adc
shrl
ds
test
mov
pop
inc
idiv
sub
sub
addr16
jbe
xlat
cwtl
mov
xor
cmp
mov
not
pop
scas
lcall
stos
mov
insl
adc
mov
loope
pop
idivl
jo
dec
repnz
add
aam
jecxz
rcrb
add
xor
cmp
sub
test
push
push
mov
hlt
cmpw
sbb
jnp
lds
inc
xlat
inc
imul
ret
mov
sub
movsb
stos
push
or
addr16
xchg
icebp
mov
jmp
lret
add
sub
mov
mov
jbe
nop
insb
jae
clc
xlat
mov
popa
dec
into
mov
cmp
subb
shll
or
icebp
int3
or
mov
jmp
sub
pop
mov
lahf
dec
loopne
add
clc
cmp
push
jp
ds
aaa
pop
cs
add
dec
push
pop
mov
stos
xchg
cmp
dec
lahf
cmp
movsl
jnp
mov
inc
das
jmp
dec
ljmp
inc
dec
push
arpl
aaa
lods
pop
and
int
adc
add
pop
aas
lods
test
icebp
rorl
outsb
push
out
sub
or
cmp
xor
dec
loopne
xlat
mov
mov
pusha
dec
xor
mov
sti
push
sub
mov
inc
insl
repz
push
divl
shlb
fidivrl
fneni(8087
inc
rcl
cmp
or
xor
lcall
jp
ss
mov
xchg
and
and
inc
negl
scas
call
inc
push
lods
xor
add
ss
mov
lret
in
cmp
rcrb
jmp
hlt
es
mov
in
insl
or
push
roll
jge
aaa
dec
outsb
jne
adc
xor
sbb
imul
dec
jno
mov
cld
sub
inc
and
pop
cltd
add
ficomps
rclb
dec
xchg
inc
insb
adcb
adc
mov
mov
sub
fimuls
lcall
jmp
xchg
cmp
call
mov
adc
adc
mov
sbb
pop
fdivrp
jno
inc
cli
pop
sbb
ja
push
add
push
jmp
xor
cli
xchg
or
pop
sarl
rcl
lods
clc
xchg
sub
ds
and
jle
cmpl
movsb
jecxz
mov
cltd
cmp
lret
lea
pop
sbb
mov
ljmp
and
clc
jb
adc
mov
fwait
cmp
lret
mov
test
arpl
enter
lret
nop
add
outsl
int3
addb
in
ret
arpl
pusha
mov
leave
pop
sbb
out
pop
sub
fstl
lock
imul
cwtl
test
mov
adc
sbb
mov
pop
add
xor
gs
test
imull
jl
add
hlt
popf
push
sbb
inc
mov
sbb
ds
fwait
sub
leave
cmp
xchg
dec
mov
pop
fildl
psubsw
adc
shr
test
xchg
enter
rolb
mov
enter
test
dec
cmp
or
ja
jle
or
cs
stc
imul
jle
loopne
imul
test
aam
pop
or
xor
add
jmp
jle
sub
lret
mov
cmp
rcl
stos
sbbl
test
adc
pusha
clc
push
xor
jl
pop
or
adc
loopne
pop
sti
ljmp
cmp
rep
jne
jne
test
xor
fcos
test
cltd
push
xchg
sub
inc
loopne
pusha
pop
imul
add
loop
mov
mov
add
aaa
sub
xchg
or
sub
cmp
push
js
dec
fxch
jo
testl
lret
cltd
leave
cmp
test
bound
test
filds
inc
jecxz
jne
mov
push
pop
addr16
ljmp
push
push
or
pop
sub
mov
dec
push
or
fwait
cmp
cmp
sar
test
jp
aaa
mov
test
mov
aam
adc
flds
pop
loopne
stc
js
jmp
sub
add
aam
sbb
mov
inc
call
mov
or
pop
mov
lods
add
lret
call
push
push
jmp
push
sub
mov
dec
pop
push
addb
jo
pop
jno
push
lea
mov
mov
push
mov
xchg
roll
sub
fstpt
ret
inc
imul
cmp
loop
in
dec
pop
dec
pop
push
jmp
frstor
dec
mov
ds
loop
pop
cmpl
push
jno
xchg
cmp
adc
adc
lret
xor
cmp
loop
xchg
push
jnp
lret
cmp
gs
call
cmc
mov
rcll
mov
cmp
lahf
sub
fwait
inc
ss
add
fsubp
sti
inc
pop
ret
loope
fisubrl
xchg
adc
mov
mov
pop
xchg
nop
or
leave
inc
je
add
add
inc
xor
clc
or
mov
dec
nop
lcall
cmp
mov
iret
filds
sbbb
dec
fnstsw
dec
fincstp
ret
mov
add
cmp
add
sub
pushf
outsl
gs
push
negl
lcall
push
sbb
repz
push
xor
and
les
jnp
or
mov
pop
movsb
cmp
stc
in
repz
push
fisttps
add
mov
pop
js
and
cmp
out
mov
dec
sti
popa
inc
mov
add
or
sub
mov
jns
gs
pop
jnp
inc
out
or
stos
lcall
hlt
pop
push
inc
stos
pop
jecxz
je
loop
cmp
cmp
adc
jnp
ja
push
addr16
push
test
sub
addr16
sbb
es
icebp
rcrb
pop
lea
mov
mov
lods
xor
add
call
mov
inc
dec
or
lcall
hlt
shll
cmp
call
xchg
sarb
xor
sub
dec
or
xor
ds
aaa
sbbl
add
mov
inc
fs
js
in
cmp
cmp
mov
xor
pop
cmp
fmuls
addr16
jl
addb
loopne
inc
mov
mov
cmp
lock
test
adc
add
xchg
mov
stos
and
mov
sub
and
sbb
lods
inc
test
test
ret
inc
lods
sbb
jb
in
mov
push
jae
cltd
rol
mov
cmp
sbbb
add
inc
aad
scas
sub
and
in
pop
dec
lret
push
pop
ss
dec
enter
dec
arpl
jne
pusha
ds
push
imul
in
dec
add
mov
sbb
add
add
nop
stos
push
jne
jo
dec
xacquire
lock
fiadds
aaa
cmp
in
repnz
and
pop
sbbl
xchg
mov
les
test
scas
leave
pop
arpl
test
aam
lods
or
inc
imul
sub
cs
mov
mov
andl
inc
mov
add
call
push
adc
addl
jb
movsb
lret
xchg
in
rcrb
popa
cmp
push
imul
inc
cli
xchg
aam
cmp
mov
inc
add
sbbb
adc
cmp
sub
mov
mov
mov
inc
dec
dec
aam
add
hlt
or
nop
cmpsl
cmp
push
fwait
sbb
mov
mov
pop
jl
inc
je
ret
mov
stos
loopne
cmp
loope
xlat
addr16
clc
lahf
sub
add
dec
lods
and
test
je
xchg
or
push
je
dec
popa
mov
mov
xchg
push
inc
inc
push
cmpsl
cli
xchg
jg
sub
in
lret
cmp
jno
sub
add
add
cmp
and
dec
pop
fs
ss
push
mov
push
push
xchg
add
dec
push
pop
inc
cli
mov
push
ficompl
repnz
sbb
orl
jg
ljmp
inc
out
jae
shr
adc
mov
loope
fildl
jno
aad
add
out
movl
repnz
jmp
dec
adc
mov
fwait
or
cmp
pop
jl
sub
inc
mov
push
mov
sbb
jl
ljmp
cwtl
or
ljmp
adc
mov
mov
and
ret
push
into
inc
push
mov
cmp
jmp
push
jae
cmp
inc
enter
xchg
shlb
and
pop
test
loope
cld
sbbl
aaa
xor
dec
mov
jnp
jl
pop
jp
cmp
dec
imul
mov
jae
test
sub
xor
mov
add
pusha
pop
cmc
loope
jg
data16
inc
push
stc
xchg
jmp
pop
shl
enter
push
adc
scas
cwtl
popf
clc
lock
jp
mov
xor
push
pop
sub
into
stc
inc
mov
ds
fwait
out
xchg
cmpb
and
jae
inc
enter
enter
pop
arpl
into
cmp
mov
xor
enter
xor
xor
add
and
pop
repz
pop
xchg
mov
pop
int3
adc
mov
pusha
inc
loop
aas
test
mov
cmp
leave
das
aad
jae
leave
jae
jl
sbb
loopne
sbb
fwait
cmpl
mov
rolb
negl
movsb
adc
push
sbb
andl
inc
lods
sbb
in
inc
mov
cmp
jp
pop
mov
enter
jae
pop
pop
or
mov
cmp
mov
push
sbb
xor
jno
ret
bnd
ljmp
cli
clc
pop
lret
dec
push
push
lods
jns
mov
push
mov
insb
int
rcll
cmp
sbb
xor
xor
ljmp
leave
pop
inc
xor
ss
fsub
xchg
adc
arpl
adc
xor
popa
jne
aam
data16
mov
xor
ficoml
fst
push
andb
test
xchg
mov
test
xor
mov
mov
jnp
test
fchs
sbb
dec
mov
mov
jl
push
cmpsb
dec
repnz
dec
xchg
mov
enter
movsb
call
sub
test
aam
nop
xor
cwtl
adc
insl
sar
loope
jp
mov
inc
mov
xorb
pop
mov
jecxz
jnp
jmp
mov
push
xchg
dec
dec
lock
cmp
push
mov
xchg
or
push
jno
mov
mov
pusha
jae
rolb
pop
aam
xchg
dec
fidivl
push
ds
xchg
mov
jns
loopne
mov
jg
add
and
xor
and
push
jp
fs
mov
pop
into
and
mov
xchg
and
xor
cli
loopne
mov
sbb
dec
xor
ret
inc
xor
or
mov
cs
push
and
stos
add
adc
lods
rclb
dec
push
push
js
jge
test
jnp
mov
xchg
jae
lret
hlt
ret
lods
mov
gs
sub
cmpsl
nop
cmpsl
sbb
mov
sbb
movsl
arpl
dec
lock
popa
test
aam
or
les
xchg
jns
mov
mov
xchg
sbb
sbb
in
and
inc
aad
xchg
dec
add
xchg
jmp
and
push
imul
sub
test
roll
sarb
int
lods
icebp
sub
xchg
jo
mov
pop
dec
aaa
jmp
push
nop
int3
mov
insb
mov
in
push
shlb
jle
data16
clc
andl
test
jo
xchg
ljmp
pop
fistl
push
push
or
cld
and
cmp
imul
lods
or
adc
push
aas
or
sub
mov
lret
fsubrl
jmp
xor
insl
jae
push
shlb
fwait
mov
arpl
addl
lret
aad
sub
xor
inc
shl
push
adc
mov
aad
push
push
cmp
js
mov
jno
inc
jnp
push
xchg
mov
xor
in
or
jb
shrl
xchg
inc
clc
lds
ss
stc
xor
cwtl
fisttpll
and
inc
gs
inc
sub
jl,pt
cwtl
push
loopne
ss
cmp
test
pop
pusha
mov
mov
xchg
push
or
adc
sub
xor
dec
mov
loope
xlat
add
mov
xchg
adc
dec
arpl
mov
jmp
lret
sub
rorb
dec
mov
jno
arpl
ds
stos
rcrb
pop
xchg
cltd
xor
and
sub
ret
into
sbb
divl
inc
sbb
push
sbb
fsubs
leave
lahf
testl
xor
shll
shl
dec
mov
xchg
adc
xor
or
mov
mov
loop
mov
repz
xlat
sbb
subb
mov
negl
scas
mov
jle
xor
cmp
xchg
stos
nop
rcr
lods
jnp
inc
imul
pop
inc
int3
mov
cltd
sbb
mov
xchg
pop
sub
fidivs
mov
jge
inc
jle
test
sub
and
les
mov
jnp
icebp
aam
lret
xchg
push
ss
pop
or
adc
xchg
sub
push
push
pop
in
js
mov
addr16
xchg
push
dec
pop
dec
stc
push
push
fucom
pop
push
add
cli
test
shlb
xor
aam
enter
jg
fdivr
insl
arpl
shlb
jg
sub
mov
adc
xchg
or
inc
inc
ret
mov
jno
pop
orl
pushf
dec
sbb
repnz
mov
adc
dec
or
sub
mov
icebp
test
dec
adc
pop
mov
mov
mov
sub
into
sub
push
das
shll
xchg
mov
andb
jp
xchg
and
imul
dec
inc
adc
or
test
pop
lds
adc
cmp
inc
and
cmpsl
mov
popl
adc
sub
add
pop
xor
push
dec
rorl
scas
lock
rolb
add
and
shll
xor
inc
push
adc
push
mov
pop
mov
push
mov
int
test
mov
test
les
loop
adcl
push
dec
jo
jmp
adc
jecxz
cs
icebp
jge
mov
lods
sub
test
mov
adc
push
js
mov
imul
ret
mov
sub
lock
lods
ror
dec
cmp
punpckhbw
ret
icebp
or
sub
es
mov
arpl
adc
cltd
je
ret
xchg
cs
dec
shrl
adc
inc
sub
mov
mov
xchg
icebp
mov
icebp
jecxz
loopne,pn
mov
imul
das
sbb
test
addb
shrb
lret
flds
mov
jnp
stos
push
and
inc
pop
push
test
fsubrl
add
jo
cmpb
call
ret
cli
aad
mov
aas
pop
rcrb
popf
or
jnp
or
cmp
fistpl
lret
insb
mov
rorb
es
push
lret
xchg
loopne
pop
dec
addr16
jnp
cld
mov
sbbl
xor
orb
popf
lock
enter
inc
rep
dec
ret
fcmovb
or
xchg
mov
sub
and
push
lret
pop
and
ss
adc
ret
into
cmp
pop
jb
pop
jecxz
sub
mov
and
xor
or
jl
mov
sub
in
add
movsl
sub
lds
jns
push
shll
ffreep
inc
test
lock
push
roll
mov
cmpl
addr16
add
pop
lods
dec
jo
cwtl
repnz
adc
cmp
sbb
mov
loopne
loope
or
test
mov
mov
les
sbb
dec
xor
mov
sarl
adc
test
rcrl
pop
adc
popf
or
mov
addr16
pop
xor
pusha
mov
or
push
xchg
mov
xchg
xor
dec
inc
cmp
mov
jno
inc
xchg
mov
int
mov
pop
adc
mov
repz
xor
or
sub
cmp
sub
jmp
icebp
outsl
loopne
outsl
xchg
das
rcr
inc
pop
mov
jge
lret
ja
mov
add
adc
arpl
pop
jg
or
and
int3
adc
lds
fcom
jns
sbb
mov
pop
xlat
not
push
push
xor
cmp
add
add
loope
push
sub
pop
mov
sub
jmp
rorb
popf
cmp
insl
xchg
in
loopne
das
mov
sahf
flds
sub
int
xchg
addr16
pop
jg
inc
mov
or
pop
or
out
mov
fwait
lock
movnti
adc
loopne
aas
inc
push
xor
test
jg
jmp
mov
int3
lods
jno
mov
loopne
xchg
push
mov
jle
mov
mov
shl
cmp
pop
fisttpl
pop
imul
loop
pop
fs
stos
jae
out
cmpsl
lret
mov
mov
push
sti
mov
adc
inc
fstpt
lods
pushf
jmp
sub
cmpsb
and
daa
lds
push
cmpsl
mov
imul
push
push
dec
imul
jg
test
lods
mov
xchg
shrb
xchg
or
fcmovb
enter
dec
fisubrl
outsb
popa
shrl
sbb
jge
mov
and
es
add
mov
ret
rcll
mov
adc
test
jae
pop
adcb
cltd
sub
loope
rclb
sub
cltd
xchg
cmp
dec
and
je
inc
pop
pop
push
adc
pop
das
jecxz
push
push
bound
subb
mov
mov
mov
mov
sub
sarl
cwtl
int3
insl
mov
dec
fstl
pop
jns
fisubl
leave
stc
xor
or
imul
jo
ds
andl
inc
shl
mov
movsl
push
nop
loopne
or
add
mov
sub
xor
outsl
xor
movl
sbb
inc
mov
movsl
push
jb
adc
mov
das
test
stc
and
sub
or
pop
dec
aad
inc
xor
das
je
cmp
pop
push
xchg
andl
dec
push
or
mov
xchg
lods
lahf
fwait
stos
mov
test
loopne
enter
jmp
inc
ficoml
or
lock
mov
rcrl
sub
jae
cmp
adc
fldt
and
push
and
pop
leave
jns
inc
push
mov
pop
sbb
push
addb
xchg
mov
mov
lret
sub
mov
andl
inc
jo
lret
push
lret
inc
int
pop
or
xor
jecxz
dec
or
mov
xchg
inc
push
enter
cwtl
or
bound
adc
ror
stos
xor
and
dec
cmc
cmp
fbld
nop
outsb
imul
or
insb
push
dec
lret
adc
add
mov
mov
mov
and
inc
movl
push
inc
inc
imul
lods
mov
loopne
and
jb
xor
in
xor
dec
xor
inc
jge
shlb
mov
adc
push
mov
imul
aad
sbb
aam
cmp
gs
sub
push
or
push
loope
push
sub
stos
sub
movsl
sarb
mov
xor
dec
xor
les
jo
push
and
pop
or
loopne
inc
mov
mov
adcb
int3
push
loop
arpl
or
jne
pusha
lahf
fisttpl
ret
inc
mov
das
xchg
dec
mov
cmp
shlb
pop
les
dec
arpl
pop
jns
stc
xor
add
ljmp
xlat
mov
aaa
adc
insb
ljmp
sbb
stos
push
movsb
mov
mov
int3
dec
sub
jno
and
lret
cmp
xchg
cltd
popf
push
ds
stos
adc
imul
jne
mov
sub
loope
das
stos
into
scas
repz
pop
xchg
push
dec
ret
mov
cmp
ret
pop
adc
xor
jb
mov
pop
inc
test
inc
inc
jl
dec
mov
xchg
imul
movsl
lahf
pop
call
dec
addr16
sub
sbb
mov
jne
push
bound
pop
int3
jne
mov
xor
arpl
jb
push
fsubrl
jecxz
dec
or
sub
dec
push
inc
sti
inc
mov
mov
in
jae
adc
push
xchg
cmp
aam
fcmovne
lret
inc
repz
adc
pop
add
lock
mov
mov
push
inc
xchg
repnz
pop
pop
pusha
add
cmp
pop
stos
dec
inc
mov
imul
std
mov
xor
mov
arpl
xchg
gs
jns
movsl
dec
jge
dec
test
mov
sar
pop
xor
push
loopne
scas
push
mov
rorl
jnp
or
dec
sbb
stos
mov
sar
pop
fnstcw
xlat
sarb
int3
iret
dec
mov
cmpsl
and
aad
pop
add
mov
insl
adc
pusha
and
sbb
sarb
test
inc
fs
or
xchg
inc
mov
pop
push
mov
cmp
push
fsubrl
int3
lcall
jge
gs
loope
fisttpl
or
xor
mov
push
sbb
mov
inc
arpl
xchg
lcall
insl
mov
mov
jno
jno
and
xor
inc
sbb
mov
push
addr16
dec
inc
push
pop
push
add
dec
call
mov
loopne
test
inc
mov
das
sbb
call
and
xor
lds
int
movsb
stos
jmp
mov
dec
lret
sub
pop
rolb
repz
in
sbb
xchg
and
in
push
cmp
cmp
fists
mov
pop
pusha
jno
outsl
or
call
fidivs
data16
lea
ret
mov
jl
ret
fstp
aad
aas
cld
repz
jnp
mov
xorb
sbb
es
loopne
insl
clc
popa
loopne
dec
into
jo
test
cmc
pop
rclb
imul
aam
sub
sub
jo
subb
mov
mov
loopne
int3
nop
ret
test
adc
jg
lret
mov
add
push
jle
mov
mov
arpl
fldenv
lcall
dec
sub
popa
mov
aaa
arpl
and
scas
xor
sbb
jb
stos
andb
or
mov
pop
stc
inc
xor
aam
adc
inc
test
xchg
into
and
test
jo
mov
adc
inc
ds
in
nop
mov
push
andb
dec
inc
and
sbb
fwait
adc
xchg
loop
scas
test
shlb
shlb
mov
add
mov
pop
inc
adc
dec
test
mov
and
mov
xor
jle
gs
inc
mov
les
inc
jecxz
daa
and
pop
insb
mov
jle
aas
mov
pop
int3
inc
lock
mov
mov
cmpsl
push
test
adc
lahf
jno
sbb
push
test
adc
int3
mov
leave
xchg
adc
cmp
xchg
jecxz
rcl
js
inc
pop
sbb
jnp
roll
fstl
lock
dec
lods
pop
pop
divl
push
adc
sub
adc
jb
movsb
pop
ret
aaa
enter
push
enter
cmp
jb
stos
mov
ds
mov
mov
subl
pop
pop
and
daa
ja
aaa
or
push
loop
imul
cmp
dec
shll
fcompl
lret
mov
and
ret
add
addr16
add
shrb
xor
xor
xor
fiadds
stos
sbb
movsb
fninit
push
and
push
ret
arpl
lds
imul
in
inc
imul
dec
or
int
inc
dec
xor
push
jg
mov
mov
cwtl
mov
dec
int
xor
jno
xchg
sarb
lret
test
cwtl
mov
outsl
loop
mov
and
outsl
loop
mov
adc
sub
adc
dec
bswap
test
push
dec
mov
mov
imul
mov
xchg
jnp
gs
dec
add
popa
insl
jecxz
in
jp
mov
pusha
fs
shll
orb
mov
push
lods
clc
xchg
sub
popf
pop
arpl
adc
sub
xorw
loopne
push
stc
lea
or
loopne
push
cmp
mov
push
push
stos
lret
call
shrl
xchg
push
sub
leave
mov
xchg
pop
jp
adc
int
add
rcr
inc
cld
sub
inc
push
sahf
rorb
xchg
dec
lcall
cmp
inc
cmp
mov
adc
mov
faddl
pusha
nop
sti
cmp
push
or
jb
int
andb
icebp
mov
test
xchg
je
ret
mov
ficoml
adc
pop
das
dec
dec
nop
fsubs
dec
rcrl
inc
jge
xchg
dec
xchg
dec
push
pop
sbb
mov
stos
ja
and
rcll
mov
push
xchg
pop
push
sub
popf
pop
adc
xchg
mov
loop
int
mov
movsb
addr16
pushf
gs
mov
dec
cmp
inc
pushf
jle
add
dec
push
and
cmp
xchg
inc
jmp
mov
inc
xor
xchg
dec
shll
shl
shlb
ljmp
fwait
inc
fisubl
aas
jg
nop
and
pushf
rclb
mov
icebp
aam
xchg
cmp
xchg
enter
jb
dec
pop
xor
mov
dec
jbe
push
sbb
pop
push
enter
adc
aas
insl
sbb
data16
das
daa
lret
dec
movsl
fidivl
pushf
aaa
stc
push
sahf
push
sub
xor
xchg
push
pop
fwait
add
jnp
les
sbb
adc
imul
sbb
ds
xor
pop
cmp
mov
fsubl
int
pushf
test
imul
adc
ret
pop
adc
pop
mov
popl
sbb
shlb
cli
adc
cwtl
orl
and
iret
inc
jno
mov
sbb
arpl
push
xor
popf
mov
mov
adc
inc
or
out
ss
mov
enter
das
popa
mov
mov
int
add
xor
and
pop
leave
int3
push
jno
sbb
xchg
ret
popa
pop
cmp
jb
mov
loopne
lret
xor
adc
pop
decb
or
adc
gs
inc
sub
jge
mov
push
rcrl
shlb
repnz
jle
stos
sbb
push
pushf
xor
mov
mov
xchg
mov
push
jge
add
test
rcrb
mov
fnstsw
rcl
pop
jae
mov
ret
and
pop
pop
jmp
gs
or
pop
sub
xor
enter
inc
inc
mov
inc
orb
int
inc
dec
sbb
cmp
movsl
xchg
mov
sahf
sub
aam
sbb
inc
loopne
push
push
lods
inc
mov
mov
adc
pusha
or
mov
push
fisubrl
cmp
mov
xor
cmpsl
inc
pusha
mov
cwtl
mov
mov
mov
cltd
mov
stos
jno
test
movsb
imul
push
int3
pop
add
jno
gs
mov
loopne
pop
cmpsl
jae
mov
addr16
pop
imul
sahf
js,pn
add
cld
mov
mov
adc
dec
pop
mov
inc
repnz
rorb
dec
lods
popa
lea
fdivp
leave
lcall
jne
xchg
lock
pusha
push
xchg
mov
cmp
sub
dec
out
or
xor
inc
sub
pop
adc
jge
sub
pushf
xchg
dec
insb
dec
mov
dec
push
cli
fmull
and
bound
loopne
lahf
nop
push
adc
stos
push
aas
jno
mov
jg
sub
fld
adc
mov
mov
cli
xor
push
cli
xchg
scas
hlt
std
arpl
jg
mov
inc
repnz
inc
sub
add
sbb
adc
mov
outsb
pop
inc
dec
jle
jb
lock
dec
test
test
stos
sub
ret
mov
add
and
adc
pop
mov
movsb
and
test
inc
cmp
aaa
mov
or
add
xchg
xchg
push
dec
mov
xorl
mov
add
loope
int3
mov
jae
xchg
push
jle
sahf
sbb
hlt
mov
test
insl
or
mov
pop
or
fwait
int
xchg
mov
cltd
add
push
rol
cmp
ds
mov
ret
jmp
pop
xor
pusha
xchg
add
sbb
test
sti
pushf
mov
lea
xchg
cltd
add
adc
in
and
sub
xor
sub
xor
inc
scas
adc
or
jp
push
rol
mov
mov
cmp
or
dec
lock
adc
xor
lds
sub
and
push
or
xor
mov
dec
cltd
adc
rcrb
inc
fcomps
and
popf
pop
test
dec
pop
add
mov
dec
addr16
xchg
pusha
fsubr
leave
sahf
xchg
pop
and
xor
mov
dec
cmp
jecxz
icebp
xor
jb
aam
inc
xlat
pop
mov
pop
dec
or
int
clc
xorl
adc
lods
cwtl
inc
popa
arpl
ret
jle
cmp
sbb
rdmsr
push
sub
iret
inc
cs
mov
ret
and
dec
mov
inc
mov
push
jecxz
add
sbbl
cmp
call
and
jge
rclb
adc
push
arpl
lahf
xor
mov
xor
inc
addr16
jnp
xor
and
mov
xchg
arpl
loopne
gs
lea
shlb
adc
mov
into
rcl
jo
xor
mov
push
fldt
es
mov
mov
popa
or
jle
int3
add
mov
es
lds
loopne,pn
loope
cmpsb
outsl
lcall
xor
sub
cmp
and
cltd
mov
sarb
xchg
rcll
rcrb
enter
enter
or
sub
lock
cmp
fs
ds
mov
mov
adc
adc
mov
movsl
pusha
jle
aaa
js
jno
das
and
leave
push
lahf
xor
popa
arpl
sbb
es
xchg
pop
lret
dec
add
rol
stos
aas
gs
mov
mov
mov
lret
mov
and
inc
cltd
fcomps
and
mov
push
loope
xor
push
sub
pop
lahf
lcall
cmp
mov
nop
jle
aaa
add
push
leave
xchg
enter
sbbl
rorb
cs
test
movsb
sbb
inc
lret
fldenv
add
dec
xor
lret
sahf
fdivl
dec
cli
imul
xchg
lret
mov
mov
into
adc
mov
dec
push
loop
iret
hlt
stos
aam
enter
cmp
test
pop
imul
pop
pop
mov
push
dec
fsts
das
or
orb
xor
and
mov
mov
mov
xchg
jns
cmp
arpl
xor
sub
jnp
jge
sahf
pop
sti
mov
inc
and
les
aas
mov
cmpsb
mov
fs
aaa
push
push
and
movsl
mov
dec
daa
cmp
adc
jge
cmpsb
xchg
dec
ljmp
imul
xchg
ret
mov
mov
cmpsb
xor
mov
push
sub
xor
sti
int3
bound
pop
addr16
test
lds
dec
sbb
inc
jl
movq
call
pushf
or
lds
inc
push
sub
and
sub
mov
dec
xor
jp
and
and
ret
lret
add
rorl
adc
lret
jns
in
orb
shll
xchg
sub
shl
or
dec
lods
mov
add
mov
xchg
xchg
add
and
mov
test
xchg
rorb
pop
adc
push
test
fs
adc
outsb
mov
sbb
xchg
adcb
xor
ds
mov
ds
je
inc
mov
inc
pop
sub
rcrb
and
rcr
enter
ds
aaa
nop
sahf
cs
rcr
ds
jno
nop
sbb
or
mov
lds
lock
mov
push
ds
ret
cmpsl
adc
push
pop
cmpsb
push
adc
imul
or
nop
mov
pop
xor
xchg
mov
cmp
inc
mov
sbbl
add
pop
xor
cmpsb
leave
dec
std
inc
int3
stos
sub
cmp
fimull
roll
sbb
inc
xor
jge
sbb
loopne
sbb
cmp
jge
mov
jg
in
rorb
out
ljmp
or
push
xor
arpl
pop
dec
or
mov
aad
cmp
mov
test
jmp
test
pop
imul
dec
adc
sub
cmpsb
push
lods
add
push
or
repz
nop
pop
loope
jo
rclb
xchg
jp
jbe
pusha
insl
jp
xchg
mov
inc
pop
shr
cld
push
cwtl
cwtl
push
cmp
jo
loop
cltd
cltd
data16
imul
movsl
or
loope
imul
in
movsb
cli
popa
jno
inc
mov
mov
pop
inc
imul
mov
insb
loopne
lret
test
daa
pop
leave
jge
mov
sbb
pop
mov
push
pop
addl
inc
or
or
xchg
into
jmp
adc
rcrb
fdiv
mov
nop
stos
jmp
shrl
mov
and
sbb
sub
mov
clc
int
cmpsb
xchg
mov
testl
xchg
xor
ret
lock
or
lret
mov
popf
stos
nop
cmp
out
insl
nop
aam
flds
lcall
loopne
sub
orl
pop
test
lret
inc
bound
and
fcom
xchg
pop
lahf
xchg
xchg
xchg
iret
and
cli
test
fsts
adc
loopne
jb
test
or
dec
jb
jb
movsb
jl
fsubrs
test
stos
xchg
mov
aam
mov
insb
jae
daa
mov
imul
test
and
ret
popa
push
bound
mov
ror
lods
or
jp
xor
outsb
loope
addr16
sbb
jge
sti
push
pusha
rclb
jno
cmp
mov
mov
sub
jmp
idivb
jae
push
movq
hlt
pop
pop
pop
imul
fsubrl
mov
test
nop
add
pop
cmpsb
xchg
dec
adc
pop
andl
adc
test
mov
and
adc
push
cmp
rolb
test
push
and
pop
sbb
ret
and
sbb
fwait
adc
pop
mov
aas
jl
pop
mov
mov
mov
movsl
pushf
cmpsl
test
and
mov
pop
sbb
mov
xchg
and
xor
repnz
xor
loop
out
jge
rolb
fwait
xchg
and
push
push
pop
sub
fwait
push
and
push
cmpsb
mov
fidivrl
lea
pop
and
test
mov
adc
xchg
lret
pusha
xchg
xchg
mov
add
or
lret
mov
das
ret
xor
popa
xchg
xchg
test
ret
lods
mov
dec
shlb
xchg
mov
pop
scas
repnz
fmull
xchg
cmp
and
jo
not
stos
or
aaa
ret
dec
fdivs
xchg
popa
mov
mov
aam
push
inc
jle
pop
sub
movsb
lock
jb
stc
fdivrl
xor
or
and
push
cmp
mov
enter
and
outsl
sbb
movsl
mov
nop
in
xor
mov
ss
mov
loopne
pop
repz
dec
lahf
mov
xchg
fs
adc
int3
cmp
adc
pop
dec
xor
push
dec
mov
jo
int3
pop
mov
push
add
rclb
aas
ljmp
fxch
fcmovne
and
jmp
jae
sub
mov
das
outsb
adc
or
enter
leave
aad
inc
and
cmpsb
inc
mov
xchg
int
int3
push
cmp
mov
fdivs
movsb
lahf
fcom
movsb
pop
or
xchg
cmp
pop
push
mov
jnp
mov
arpl
mov
xor
sbb
addr16
inc
mov
xchg
and
pop
jle
daa
fdivrl
pushf
ds
adc
mov
xchg
inc
fdivl
bound
mov
sarb
adc
int3
int
int3
lea
andb
dec
ret
push
push
fdivs
push
cwtl
pushf
xchg
mov
cmp
dec
outsb
xor
jb
cmp
aas
pusha
jp
cmp
test
mov
ret
lret
adc
lcall
push
imul
ja
test
xor
adc
push
pop
addr16
jo
xor
xchg
lods
fidivl
adc
jnp
pusha
cmp
popa
stos
dec
cld
jge
xchg
andb
cmp
pop
cmp
enter
mov
pop
pop
lcall
sbb
xchg
rclb
scas
push
ret
adc
add
xor
imul
lea
inc
jae
iret
es
inc
xor
mov
arpl
ret
push
popf
sbb
adc
test
dec
aam
lods
cmp
clc
inc
addb
or
gs
stos
dec
pop
fs
pop
and
mov
push
push
scas
adc
ljmp
cs
sbbb
cltd
sbb
xchg
jb
push
sbbb
ret
xor
stos
arpl
aas
push
loop
cmp
pop
ljmp
fbld
mov
xchg
test
lea
sbb
or
cmp
ss
movsl
repnz
pushf
jg
test
mov
pop
inc
or
xor
icebp
shrb
enter
gs
addr16
lods
shrl
movsl
test
and
rcl
cmp
pop
pop
pop
gs
jno
fs
daa
cmp
int3
daa
fmul
mov
fbld
jge
cs
dec
cmp
mov
lcall
jecxz
inc
call
lcall
pop
movsb
sarl
push
cmpsb
aad
mov
mov
jb
bound
cli
daa
pop
inc
inc
test
pop
stos
adc
xor
sahf
cmpxchg
jp
pop
rolb
je
add
addr16
mov
test
mov
les
cmp
insl
roll
movsl
jecxz
aad
cmpsb
data16
ds
mov
pushf
test
arpl
popa
inc
push
sbb
icebp
push
repz
and
jno
mov
scas
adc
insl
and
lea
push
pop
int
addr16
dec
inc
and
scas
mov
fnstenv
mov
xor
adc
cmpsb
push
lods
push
test
les
aad
xchg
sti
enter
movsb
test
adc
pop
adc
shll
adc
sarl
dec
into
insb
and
xchg
push
cltd
sbbb
ret
outsl
enter
shll
ret
or
push
and
mov
jmp
xchg
dec
ds
push
popa
sub
jne
imull
ljmp
test
je
das
dec
outsb
dec
loope
xlat
pop
sbb
jecxz
fildl
mov
push
movsb
mov
xchg
adc
ja
mov
dec
push
pop
fimull
and
inc
loopne
pop
loope
aaa
mov
sar
mov
mov
decl
es
and
jecxz,pn
pusha
xchg
sub
pop
bound
cmp
fildl
xor
jae
adc
aad
cmp
add
push
mov
push
imul
xchg
aam
es
icebp
lea
sahf
mov
fbld
pop
mov
movlps
push
gs
icebp
xchg
or
cs
or
inc
xchg
test
test
lret
loopne
xor
notl
jno
pop
cmp
ds
push
repz
mov
fwait
jmp
test
push
sbb
inc
jmp
jmp
adc
pop
xor
jg
xchg
xor
jl
cmp
jmp
push
les
jnp
adc
adc
sub
sahf
fs
add
imul
inc
adc
adc
add
mov
lret
movsb
jcxz
sbb
xor
data16
insl
push
mov
stos
orb
sysenter
jg
jecxz
jl
test
pop
nop
rolb
inc
cs
xor
or
divl
imul
test
jp
loopne
pop
andb
addb
cmp
lcall
or
or
popf
aaa
test
pop
add
xchg
ret
mov
xor
bound
sahf
int
xchg
xor
inc
scas
jmp
or
xchg
inc
negl
dec
ret
sub
mov
je
push
clc
jmp
out
mov
enter
cwtl
mov
std
mov
mov
push
mov
dec
mov
mov
mov
into
mov
aas
mov
outsb
xchg
in
stc
cli
push
sahf
lret
and
cld
xchg
ret
mov
loopne
loope
out
sbb
jl
jno
jae
cmc
stos
std
sbb
fs
xchg
mov
lret
pop
fwait
data16
out
clc
das
or
scas
call
scas
movsb
scas
in
push
scas
movsl
scas
ret
mov
pop
push
mov
inc
stos
jne
pop
stos
imul
cli
stos
or
mov
pop
pop
insb
mov
cmc
ret
mov
into
push
mov
ficoml
in
in
or
fwait
test
pop
pop
pop
push
xchg
xchg
and
ja
xchg
mov
lahf
xchg
lahf
cmpsl
lahf
hlt
lahf
add
lahf
xor
lahf
and
lahf
push
lahf
fs
mov
les
cmc
lahf
push
lahf
aad
in
ss
inc
lahf
push
lahf
es
jne
test
mov
jecxz
leave
loopne
in
fwait
stos
mov
jge
jmp
jbe
cmpsl
xor
adc
cld
popf
jl
std
push
jge
into
cmp
nop
mov
mov
xchg
scas
jno
pop
lret
xchg
loopne
loope
out
add
sub
test
mov
lret
mov
or
mov
lret
mov
hlt
mov
sbb
rcrb
nop
mov
mov
push
mov
std
xor
sub
pop
std
imul
jl
cmc
mov
cld
fimull
mov
enter
loopne
fcmovu
rcll
cmpsl
sahf
cmp
sbb
mov
repz
mov
test
xchg
push
xchg
scas
hlt
xchg
jge
lods
stos
out
and
xchg
xchg
repnz
stos
cmp
pop
push
push
sub
cmp
sahf
fadd
xor
mov
mov
or
pop
mov
lcall
je
cmp
xchg
jecxz
sub
pop
cmpsl
push
lods
cwtl
out
fldcw
fnstsw
mov
and
arpl
loop
lea
cmp
xchg
push
lahf
xchg
jecxz
lahf
fneni(8087
inc
fidivrs
push
fmul
inc
divb
std
fistpl
mov
incl
lock
aam
cmp
jle
jle
jle
jle
jle
push
cmp
jle
jle
jle
jle
jle
jle
jle
jle
jle
andb
push
mov
mov
push
cwtl
mov
es
and
and
and
push
inc
mov
jmp
dec
sbb
pop
mov
cltd
mov
or
cmp
sub
push
mov
mov
or
fcmovnb
jmp
cmp
sub
pop
xor
repz
stos
stos
clc
stos
or
cmp
sub
jnp
push
stos
cwtl
stos
test
stc
stos
or
cmp
jnp
mov
mov
stos
test
stos
fisubrl
sbb
sub
scas
lret
scas
stos
mov
fldt
lods
cmp
dec
das
sbb
scas
jnp
mov
lret
scas
fwait
scas
stos
scas
clc
scas
or
dec
scas
sbb
mov
mov
scas
test
stc
scas
or
cmp
sub
pop
scas
imul
cli
mov
jecxz
fistps
mov
in
cmc
xchg
aad
ss
adc
imulb
scas
out
adc
mov
mov
leave
nop
jp
jle
bound
shl
xor
sbb
sbb
sbb
pop
repz
call
xchg
adcb
xchg
mov
push
xchg
js
outsl
stos
mov
enter
hlt
jbe
lret
mov
stc
stos
or
or
fsubs
sbb
sub
lahf
mov
mov
lahf
test
lahf
ficompl
dec
lahf
sbb
mov
mov
mov
fisttpl
dec
mov
jnp
push
pop
push
imul
imul
test
adc
cmp
enter
cwtl
adc
inc
mov
mov
push
fmul
fstpl
popf
fimuls
push
or
pushf
or
push
push
fdivrs
inc
lahf
jbe
bound
cmp
inc
loope
fiadds
lock
fsubrs
adc
std
mov
dec
sub
and
and
fmul
pop
ficomps
mov
xchg
out
out
scas
jmp
inc
insl
and
mov
addr16
ret
outsb
lahf
scas
fsubrs
insb
scas
push
repnz
popf
push
nop
jbe
jle
rclb
loope
fiadds
xlat
adc
sub
mov
addb
and
ja
imul
loope
out
adc
add
mov
xor
in
jnp
cmpsl
add
test
mov
pop
jno
mov
imul
outsb
dec
cs
cld
lods
push
jb
jge
sub
jle
jle
jle
jle
jbe
scas
cmp
cmp
and
xchg
dec
arpl
xchg
jnp
jno
xor
mov
stos
lods
xchg
lret
nop
cwtl
pop
std
push
mov
jno
push
stos
das
stos
adc
scas
sub
and
and
ret
dec
ret
xor
insb
cld
stc
pusha
jle
inc
jg
cld
outsb
je
fwait
sub
jnp
mov
pop
jbe
push
mov
clc
push
or
fcomps
call
fadd
sub
js
mov
pop
fisubrs
mov
hlt
mov
fsts
dec
xchg
sbb
mov
mov
xchg
test
xchg
ficoml
dec
xchg
sbb
mov
test
lret
jle
jge
sub
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
xchg
das
cltd
dec
scas
sbb
mov
or
jle
jle
orb
mov
sub
insl
mov
imul
and
and
call
cmpsl
ja
orl
std
cmp
das
mov
jne
pop
scas
pop
mov
sbb
or
pop
mov
bound
add
mov
push
add
lret
stos
xchg
call
sub
cmp
sub
xlat
loopne
xchg
loope
fidivs
out
aam
mov
stos
mov
mov
jmp
cmp
push
sbb
pop
xchg
imul
cwtl
stos
xchg
clc
xchg
or
cmp
sub
pop
mov
cwtl
stos
test
stc
stos
or
xchg
mov
dec
filds
sub
jns
mov
pop
imul
leave
ficoml
dec
xchg
sbb
and
mov
mov
lret
lahf
stos
mov
fcmovnu
mov
dec
push
sbb
jnp,pn
loop
jge
mov
jle
jle
mov
das
ret
call
mov
push
stos
js
mov
lock
adc
sub
sbb
dec
in
mov
icebp
outsb
popa
scas
movsl
scas
pop
scas
xor
xlat
subl
mov
push
adc
aam
mov
xor
xor
jp
pop
xchg
xchg
stos
sbb
xor
nop
xchg
jbe
xor
xchg
push
xchg
shrb
lahf
dec
lahf
and
add
jmp
pop
int3
das
in
jns
or
cmp
fs
fldcw
mov
clc
sbb
push
jns
mov
pop
icebp
arpl
mov
or
inc
xchg
push
xchg
mov
js
xor
and
inc
aam
xchg
sbb
xchg
or
xor
mov
inc
ret
add
lret
inc
cs
sub
fs
cwtl
and
and
xor
mov
push
mov
fildll
and
mov
sbbl
mov
sahf
subl
mov
jns
mov
mov
mov
and
xchg
scas
hlt
cs
loopne
sbb
adcb
and
cmpsl
xchg
subl
or
mov
mov
stos
out
lret
dec
adc
push
cs
insl
xchg
sub
mov
out
fwait
and
mov
loope
xchg
in
in
inc
stos
and
pop
insl
pop
lods
insb
out
mov
xchg
push
sub
adc
push
lret
mov
jmp
xor
sbb
jnp
inc
pop
jle
xchg
stos
mov
fsubs
sbb
sub
and
fisubs
or
mov
scas
sbb
or
mov
mov
xchg
mov
enter
xchg
push
pop
add
fcom
jmp
out
arpl
aad
pop
mov
out
icebp
stos
test
jns
or
adc
fcmovb
cwtl
mov
add
push
mov
pop
sub
inc
and
lahf
lcall
loope
ficomps
frstor
repnz
leave
mov
fwait
arpl
ds
int3
dec
mov
cltd
add
outsl
push
mov
nop
fmul
icebp
sub
fnstcw
cld
jns
pop
or
mov
push
mov
ds
subl
inc
loop
or
xchg
dec
sub
fcompl
clc
fsubp
into
jo
call
movsb
sub
scas
subl
adc
inc
imul
aam
jg
pusha
jle
jle
jle
xchg
jbe
out
cmp
add
inc
cwtl
nop
nop
jge
mov
cli
jmp
jmp
sbb
xchg
mov
xchg
enter
mov
ds
fcoml
and
cmc
jle
mov
mov
adc
std
sti
mov
mov
jle
jle
mov
push
xor
adc
repz
frstor
mov
pushf
jle
xchg
loop,pn
scas
pop
mov
cwtl
test
and
xchg
cs
out
xor
fsubl
iret
and
jecxz
dec
aaa
mov
arpl
or
mov
xchg
sbb
or
arpl
push
into
push
dec
push
daa
push
lret
fwait
jmp
cmp
outsl
and
push
add
nop
aam
or
lahf
ss
std
mov
lods
jle
jle
xchg
cs
scas
scas
sahf
mov
insl
jecxz
add
in
xchg
and
cmpsl
js
stc
in
andl
std
jae
test
mov
xchg
lahf
jp
clc
mov
xlat
mov
sub
call
lock
mov
fnstenv
das
jmp
fisubl
ljmp
xchg
jp
mov
mov
stos
stos
cmp
ret
cmpsl
mov
jge
jge
out
jbe
mov
sub
pop
lahf
pop
jg
or
stc
das
cmp
repnz
jo
rolb
lret
out
jbe
push
cmp
mov
add
iret
xor
insb
jmp
cwtl
lret
mov
mov
filds
cli
fimuls
fsubrp
fidivrs
fimuls
sbb
sub
jb
xchg
push
mov
mov
lret
test
imul
stos
test
add
movsb
shlb
sbb
pop
inc
shll
or
bnd
push
sbb
sub
jns
mov
pop
imul
stos
xlat
mov
jge
jge
mov
mov
lock
cmp
mov
jmp
add
daa
jle
jle
jbe
mov
gs
mov
xlat
enter
int3
mov
pop
movsb
aad
je
xor
mov
mov
pop
jns
enter
test
stc
into
or
cmp
loop
pop
leave
push
cmpl
pop
ds
andl
mov
push
sub
mov
xor
jge
ret
or
adc
jmp
cmp
sub
jnp
jp
fisubrs
mov
fisubrs
hlt
loopne
xchg
cmp
js
mov
mov
test
mov
push
fstps
jmp
push
sbb
sub
jns
mov
pop
push
imul
cltd
push
test
push
ficompl
ljmp
mov
pusha
pop
jle
jle
mov
jns
stos
cmpsb
cli
mov
cmp
test
jnp
lahf
pop
arpl
stos
fsubrl
or
fdivrs
cmp
jle
mov
jns
mov
jmp
xchg
das
pusha
test
stc
push
mov
xchg
jmp
sbb
mov
sub
fmul
xchg
cltd
xchg
test
xchg
ljmp
sub
push
mov
and
arpl
and
cmp
dec
gs
sub
and
adc
leave
jb
das
adc
int
mov
add
mov
rorl
xor
mov
std
sbb
ljmp
jmp
cmp
dec
std
and
sub
mov
mov
ret
clc
fists
dec
mov
sub
pop
loopne
fbstp
test
cmp
pop
mov
xchg
cmpsl
xor
aam
xor
pop
int
xor
cmp
sbb
sti
fistpll
flds
fs
mov
and
mov
mov
lret
fmuls
jg
jb
pop
dec
imul
inc
ss
mov
scas
inc
xor
dec
mov
inc
push
stos
dec
mov
imul
dec
pop
sbb
fisttpl
mov
push
stos
cltd
sub
jmp
cmp
sbb
sub
push
mov
pop
push
imul
xor
jp
stos
ds
pushl
dec
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
mov
test
inc
or
or
enter
cwtl
ja
jg
pop
jnp
jecxz
push
imul
mov
sub
jle
xchg
jp
sbb
mov
push
mov
ds
push
sub
fisubrs
fnstcw
pop
sbb
call
notb
and
or
add
jle
mov
push
mov
add
fimull
dec
jbe
sub
pop
mov
shl
lcall
shll
and
and
sbb
mov
mov
jle
jle
jle
jle
mov
pop
ret
lahf
sbb
mov
push
push
cwtl
push
stc
push
or
fstps
jmp
push
sbb
sub
jns
mov
imul
cli
pop
cltd
lahf
fidivrl
incl
xchg
jns
mov
mov
xchg
sbb
jnp
dec
out
xor
or
cmp
sub
pop
scas
imul
call
mov
mov
fisttpl
sbb
mov
out
xor
scas
cwtl
mov
dec
sbb
mov
stos
sub
pop
mov
lret
push
stos
cltd
sub
jmp
mov
mov
stos
mov
iret
push
push
fwait
pop
mov
hlt
mov
xchg
cmp
mov
pop
fisubrs
mov
fisubrs
fsubrp
fidivrs
dec
lcall
mov
mov
sbb
push
or
ficompl
ljmp
push
sub
jp
mov
pop
push
push
mov
sub
cs
cld
arpl
mov
adc
aad
jl
std
jge,pt
or
pop
aaa
or
or
iret
loopne
loope
fsubrp
aam
and
push
add
adc
xchg
pop
pop
xchg
mov
jle
fisttpll
cli
inc
lea
adc
pop
xchg
gs
fadds
ret
mov
orb
lret
adcl
ja
pop
xchg
and
jbe
aad
sub
jecxz
inc
sbb
jae
mov
add
ljmp
ljmp
cmp
cmp
mov
xchg
fs
mov
loopne
sub
stos
inc
setb
xchg
aaa
enter
pop
ljmp
jb
fidivs
in
arpl
hlt
adc
mov
sbbl
sbb
dec
mov
inc
jno
pop
das
roll
adcl
mov
mov
nop
cmp
xlat
mov
jbe
aaa
stos
push
lahf
jbe
adc
xchg
pop
cmp
stc
xchg
das
xchg
scas
nop
jecxz
loope
out
outsl
cmpsl
and
lods
fsubrp
rdpmc
mov
cmc
cwtl
std
or
scas
gs
mov
das
loopne
out
jmp
mov
test
jmp
xor
add
jno
push
lcall
mov
jle
mov
jp
data16
lret
xchg
enter
dec
push
xor
add
aaa
adc
pop
imul
jl
js
xchg
sub
xchg
mov
jb
xchg
lea
das
xchg
xchg
pop
arpl
in
or
shrb
loopne,pn
scas
icebp
mov
fcoms
mov
popa
mov
adc
mov
dec
inc
mov
sub
es
push
push
mov
lret
jae
stos
aam
sub
repz
mov
pusha
or
das
and
scas
shll
xchg
adcl
in
sbb
fsubrl
vmovq
mov
dec
subl
push
mov
push
mov
lret
push
rolb
int
xor
jge
xor
mov
dec
fbstp
data16
scas
stos
cs
insl
sbb
enter
adc
inc
fidivs
imull
add
mov
mov
bound
pop
mov
xor
mov
cltd
xchg
sbb
and
add
rcrl
leave
clc
sub
sub
xlat
xchg
mov
mov
mov
and
pop
jns
xorl
enter
and
fwait
dec
fidivs
jle
jle
jle
jle
jle
jle
push
call
xchg
test
das
cmp
jb
lret
push
pop
roll
imul
shlb
std
mov
popf
jge
incb
and
stos
xchg
stos
imull
mov
aam
shrb
repz
xchg
cltd
mov
orl
sbb
stc
jnp
lods
inc
mov
es
and
and
and
xor
repnz
xchg
mov
pop
jmp
push
jp
cmp
sbb
push
mov
mov
push
or
xchg
popf
xchg
add
loopne
jbe
ret
jecxz
ret
and
pop
jbe
lock
mov
cmp
clc
jmp
mov
stos
daa
stos
outsb
stos
pop
stos
push
pop
call
sub
out
mov
repnz
push
adc
xchg
pop
xchg
xchg
xchg
cmc
xchg
loope
cs
das
stos
dec
stos
mov
inc
push
es
pusha
mov
mov
sbb
sbb
sbb
repz
int3
repnz
cmp
or
mov
ss
jecxz
out
mov
aaa
lcall
repnz
mov
mov
pop
insl
ret
lahf
cmp
mov
fnstcw
or
idiv
outsb
pop
or
mov
enter
cmp
mov
jp
jnp
scas
adc
mov
cltd
push
insl
sbb
inc
pop
mov
sbb
cs
mov
sahf
into
or
mov
sbb
ljmp
pop
pop
sbb
ret
lods
mov
inc
imulb
jl
adc
mov
loopne,pn
loope
into
jbe
sub
ds
sub
outsl
test
adc
fsubl
cmpsb
shlb
mulb
jbe
mov
cmpsl
mov
cwtl
mov
fyl2x
mov
xchg
xchg
jecxz
lahf
mov
icebp
stc
or
ljmp
out
filds
in
sub
pop
loopne
fbstp
frstor
mov
jp
bswap
sub
enter
out
lret
jo
adc
sub
loop
sub
adc
sbb
jnp
pop
xchg
pop
sbb
lcall
xorb
enter
xor
dec
mov
out
dec
je
jae
fists
aad
cmp
int3
movsl
jno
call
lock
aam
loop
xchg
xor
dec
cmp
mov
mov
fdivrs
or
jb
clc
ljmp
mov
adc
ret
dec
push
and
cmp
xor
mov
jo
jae
push
out
add
int3
movl
ja
in
sub
cmpsb
jno
push
mov
aaa
je
shll
iret
popa
inc
mov
add
xchg
inc
push
cmc
sub
out
jno
insl
test
pop
or
jecxz
adc
adc
dec
ret
jl
xor
inc
inc
leave
xchg
dec
xor
stos
or
jl
xor
shl
imulb
push
sbb
pop
out
test
scas
adc
pop
push
xchg
std
out
ret
out
cmp
fisttps
jg
mov
pushf
cmp
icebp
cltd
stc
sbb
mov
pusha
ficomps
bound
iret
xor
mov
shrl
scas
jp
and
add
or
jl
cmc
rclb
push
jp
jnp
cmc
enter
sub
stos
adc
push
and
xor
rcrb
push
mov
sbb
inc
jmp
outsl
mov
mov
mov
stos
mov
mov
outsb
or
clc
mov
push
cld
loopne,pn
jo
or
cli
sub
adc
lahf
add
cmp
inc
icebp
mov
imul
lcall
fbstp
lcall
fidivs
aad
or
adc
jecxz
aad
mov
in
in
lock
xor
xorl
lahf
xchg
int3
jg
sbb
nop
test
or
mov
mov
stos
and
mov
data16
popf
out
sbb
jle
sbb
aad
leave
and
and
popa
push
out
das
jp
pop
stos
ret
decl
iret
jg
cld
adc
jnp
xor
dec
rclb
pop
xchg
mov
in
lock
rcrb
mov
sub
adc
push
push
ds
mov
rcll
addr16
sub
imul
jp
lret
jb
int3
clc
in
cli
mov
sub
push
xor
icebp
push
stos
insb
mov
xor
dec
repnz
sti
int3
inc
xchg
xor
mov
fstpt
mov
out
pop
sub
andl
cmpsl
fsub
js
aad
and
inc
fidivrl
clc
or
push
mov
pop
adc
arpl
mov
imul
cmp
pop
xlat
or
test
cmpl
pushf
pop
bnd
mov
pop
or
popf
mov
sbb
jecxz
add
or
sbb
mov
lahf
loopne
pop
icebp
dec
xor
loop
jge
lcall
stc
jg
cld
mov
pop
add
sbb
mov
lret
test
fildl
jb
adc
dec
loope
xchg
inc
jmp
shll
imul
or
push
sbb
xor
or
lret
pop
mov
xor
dec
cmp
mov
mov
adc
push
adc
icebp
movsb
mov
loope
pop
es
pop
dec
add
dec
loope
push
jmp
pop
rorl
or
jmp
xchg
flds
imul
mov
jnp
cmp
pop
insl
ljmp
dec
inc
pop
add
enter
or
push
cwtl
mov
mov
push
sub
inc
jg
mov
mov
sbb
cwtl
fisubl
repz
sbb
or
xchg
adc
lock
cmp
cmp
test
nop
xchg
jbe
fstl
push
cmp
and
sbb
shrb
shl
mov
mov
hlt
xor
mov
shll
pusha
cmpsl
ss
cltd
testb
lret
idivb
add
pop
adc
int3
jmp
ja
fnsave
and
inc
sahf
mov
and
repnz
cwtl
mov
lcall
xor
xchg
iret
repnz
inc
std
rorl
adc
nop
cmpsb
xchg
lods
xchg
aad
inc
je
lea
arpl
sub
sub
jns
push
push
mov
sbb
sbb
fidivl
jecxz
xchg
cmp
jbe
ret
inc
xor
inc
jge
cmp
jmp
push
stos
inc
cmp
scas
mov
test
aam
inc
adc
jge
inc
push
cmovp
adc
cmp
jge
loope
ds
psubsw
sub
mov
dec
mov
rol
jb
mov
mov
cld
cld
cmp
aad
push
repnz
push
fists
fstpl
add
es
dec
stos
lds
or
stos
arpl
mov
loopne
int
hlt
pop
dec
push
shll
out
scas
out
aas
and
scas
mov
or
in
jb
mov
sbb
filds
fsubrp
fsubp
fidivrs
shlb
jmp
jle
mov
sbb
sub
cs
adc
jb
cmp
jg
lods
mov
imul
idivl
lret
ja
xchg
sbb
mov
or
data16
rcll
push
xchg
stos
sbb
mov
mov
jb
enter
xor
push
sub
cli
cmp
inc
mov
loop
fs
pop
loopne
mov
mov
insl
push
lods
jne
popa
xor
mov
mov
adc
je
rorb
mov
xchg
adc
mov
repnz
gs
std
ret
jne
sbb
mov
mov
mov
mov
xor
push
cld
dec
dec
mov
inc
test
icebp
pop
xchg
adc
dec
movsl
rorl
sahf
gs
sbbl
mov
inc
lea
popa
inc
inc
popa
dec
and
cmp
notb
enter
incl
mov
xlat
cltd
sbb
rcrl
pusha
shrb
jb
mov
mov
std
xlat
lahf
adc
dec
add
icebp
mov
add
mov
and
and
push
jb
push
repnz
mov
jo
sub
mov
pop
push
pop
sbb
push
cmpsl
push
cld
push
xor
pop
stos
xchg
mov
mov
sbbb
sub
adc
ljmp
push
jns
xchg
stos
pop
mov
xlat
loop
mov
in
pop
or
enter
xchg
jns
movsl
lret
loop
inc
pause
pushf
lret
add
xor
pusha
pop
lock
xchg
shl
sahf
lcall
sub
ret
jb
and
xor
aam
lcall
repnz
int
fistpll
int3
push
test
sub
stos
mov
and
cs
jns
adc
push
mov
and
mov
es
cmp
mov
sarb
sub
xchg
adc
cmpsl
sbb
jmp
push
out
stos
push
insl
pusha
mov
sbb
adc
mov
adc
hlt
sbb
inc
jecxz
xor
xchg
sbb
mov
sub
icebp
enter
loopne
repnz
es
imul
xchg
adc
jmp
jb
jne
add
popa
mov
sbbl
or
mov
push
dec
and
pop
sbb
pop
mov
push
nop
xchg
sarb
push
movsl
nop
jge
or
or
push
xchg
inc
repz
sub
notl
fisubs
push
mov
les
movsb
testb
add
mov
mov
cs
xchg
lods
pusha
repnz
incl
gs
xorb
hlt
jns
aaa
xchg
mov
mulb
adc
hlt
orl
xchg
jg
call
add
push
repz
xor
in
mov
jbe
sbb
cwtl
cmp
push
bnd
cwtl
popa
adc
cmp
and
mov
inc
ss
sub
cmpsb
or
jp
stc
sub
xor
mov
lcall
or
lret
jp
and
jg
sbb
mov
xchg
mov
sbb
mov
xor
mov
int3
cmp
mov
push
fnstsw
cmp
sub
xor
xor
mov
jg
xlat
jbe
dec
aaa
in
arpl
xchg
cmpsb
sbb
pusha
mov
mov
jbe
pop
mov
mov
adc
pop
mov
stos
inc
xchg
fstps
das
jno
daa
or
popa
jae
in
jmp
push
repz
cmp
arpl
int3
xchg
xlat
jae
jg
or
cmp
xlat
sub
hlt
jmp
push
out
fchs
out
dec
inc
iret
inc
icebp
jge
xchg
jle
dec
std
push
pop
jg
add
popa
test
xor
enter
lret
xor
dec
and
test
out
lcall
dec
xor
and
shlb
enter
inc
xchg
scas
test
fwait
xchg
jb
mov
mov
xchg
lock
iret
sbb
jbe
daa
push
or
repnz
cmp
mov
xchg
inc
adc
push
andb
stos
mov
cltd
jnp
jae
mov
xchg
add
mov
rorb
out
and
faddl
mov
xchg
mov
loopne
jno
mov
adc
std
push
mov
mov
mov
divb
dec
les
push
xchg
jns
pop
push
mov
adc
lock
or
adc
adc
test
lret
call
aaa
cs
repz
cmp
inc
xchg
jae
sub
nop
sub
cmp
out
jo
insl
daa
lods
data16
inc
mov
stos
mov
mov
inc
cmp
mov
or
dec
std
filds
dec
jmp
adc
cltd
push
mov
dec
jno
nop
mov
sbb
jnp
mov
out
loope
out
mov
pop
mov
enter
call
inc
jg
add
lret
adc
mov
stc
add
pop
incl
mov
imul
iret
adc
stos
push
ljmp
mov
jmp
cs
sbb
mov
lahf
insl
loopne
out
xchg
mov
cmp
xor
and
repz
scas
jecxz
mov
sbb
sbb
pop
xchg
in
fisubrl
xchg
les
xor
ret
jne
add
lret
xchg
movl
sbb
adc
jb
cwtl
jmp
aam
cli
and
test
fimull
pop
popf
mov
adc
subl
xor
add
xor
mov
out
frstor
out
adc
outsl
xor
ss
push
inc
mov
jnp
and
and
inc
sarl
inc
idivb
mov
pop
fwait
arpl
cmpsl
mulb
adc
jg
hlt
mov
xchg
aas
out
adcl
insl
pop
fucomip
jle
sbb
int3
enter
imul
icebp
mov
icebp
mov
sub
mov
or
add
mov
xchg
cwtl
sub
sub
mov
jp
sub
dec
and
mov
pop
repz
stos
and
sbbb
int3
and
sub
fnstcw
mov
nop
std
cmp
xchg
sub
jecxz
xchg
aam
cmp
jns
shrb
mov
clc
dec
mov
xchg
repz
enter
adc
add
aam
dec
xlat
scas
xchg
jge
fwait
push
dec
and
and
and
idivl
push
cmpsl
inc
push
imul
or
rolb
popl
jne
jnp
jo
ret
inc
inc
icebp
fistl
sub
mov
cs
repnz
jo
out
jns
jno
cmp
int3
mov
adc
cmp
enter
in
add
mov
dec
xchg
stos
lock
aam
inc
inc
xchg
pusha
cmp
mov
cmp
mov
push
mov
test
sbb
jg
int
stos
push
es
mov
or
inc
std
mov
jge
shrb
inc
es
xchg
test
jbe
mov
shll
cmp
out
popa
jle
sub
xchg
sarl
xor
cmp
xchg
sahf
jecxz
iret
cmpsl
mov
mov
add
mov
test
imul
sub
repnz
sbb
mov
fs
xchg
jmp
popf
push
mov
lock
sbb
enter
pop
mov
xchg
dec
dec
xor
jb
dec
ror
xor
mov
dec
mov
ror
shll
pop
addl
jns
dec
stos
fcoml
out
mov
enter
and
xor
xor
or
ret
xor
rcr
mov
loop
popa
jae
shrb
cmp
or
loopne
dec
icebp
daa
fwait
inc
test
cmp
mov
nop
popl
roll
jno
push
and
test
int
neg
xchg
push
fsqrt
imul
push
clc
ss
fwait
iret
ja
jg
rcl
fsubrp
cli
bound
cmp
shlb
call
jno
jae
jnp
cwtl
notl
stos
lahf
xor
mov
mov
or
jno
cmp
iret
dec
jns
outsl
pop
sahf
cltd
jno
lret
adc
out
ret
pop
mov
inc
mov
jb
popl
test
xor
xchg
andl
dec
jnp
js
cmp
adc
xchg
mov
or
add
in
test
xchg
aad
or
fnstcw
xchg
mov
je
mov
cmp
out
stc
scas
inc
cs
mov
fists
jnp
shll
xchg
scas
rcll
xor
popf
leave
mov
xor
cltd
adc
sub
pop
jns
test
dec
ror
imul
pop
outsl
push
jno
mov
add
lahf
arpl
popl
sub
test
cmc
int3
mov
scas
imul
adc
fs
mov
mov
cmpb
mov
mov
push
push
mov
lahf
dec
xchg
sbb
data16
add
xor
mov
andl
lock
xor
inc
mov
lret
cwtl
aam
push
lahf
push
jecxz
jp
scas
lcall
insb
cwtl
pop
nop
mov
jo
mov
lods
xchg
mov
push
dec
pop
xor
push
inc
add
and
adc
dec
cmp
leave
dec
jl
xchg
arpl
mov
push
mov
xor
aam
adc
pop
xchg
inc
xchg
mov
arpl
in
and
cmp
int3
mov
jge
push
cld
and
sub
and
adcb
enter
xor
fwait
mov
shlb
sub
lcall
xor
fcoms
nop
repnz
lcall
and
aam
dec
cmp
in
mov
daa
xchg
and
and
dec
in
cltd
pushf
jno
sbb
leave
mov
xchg
mov
negb
push
in
jae
mov
sbb
mov
int3
jb
pop
lret
mov
cmp
in
xor
adc
mov
cmpb
rol
mov
jo
xor
push
loop
mov
clc
mov
xchg
vmovlps
dec
ret
mov
jecxz
add
pusha
lahf
dec
mov
stos
inc
sub
loope
das
ljmp
std
andl
popf
mov
mov
ror
stos
sbb
adcb
insl
and
arpl
push
jmp
repnz
pop
jne
in
les
jge
pop
test
and
xchg
pop
lds
push
orl
sarb
push
icebp
mov
fwait
sbb
sub
mov
jnp
push
dec
jecxz
test
xlat
mov
sbb
int3
aad
mov
xor
fsubl
fisubs
test
xchg
mov
and
mov
mov
mov
pop
mov
inc
mov
inc
push
rolb
dec
pop
add
pop
test
adc
mov
add
xchg
inc
test
push
inc
pop
inc
gs
dec
xor
xchg
adc
adc
mov
mov
mov
rcll
and
out
add
mov
add
enter
push
movsl
push
xor
lcall
adc
scas
lcall
enter
xchg
lret
jg
adcb
or
pop
mov
jg
je
loopne
inc
pop
dec
pushf
repnz
movsb
inc
mov
sbb
pushf
imul
mov
sarb
lds
mov
nop
imul
inc
inc
aam
jecxz
ret
inc
and
xorl
out
and
or
fwait
sbb
out
jp
xchg
cmp
outsl
jno
subb
add
xchg
push
xchg
out
fsubs
arpl
lock
shlb
shr
fstpt
pushf
or
sahf
fbld
cs
cmp
ret
mov
mov
lea
jno
dec
xchg
inc
add
in
add
fs
xor
push
and
cltd
call
int
sbb
in
lock
dec
insl
cmpsl
mov
mov
mov
mov
popa
and
cmpsl
mov
sbb
fsub
push
xchg
icebp
lods
repnz
fdivl
cli
aad
push
and
pushl
imull
fdivl
jg
pop
lds
jbe
and
xor
fwait
adc
addb
jno
enter
outsl
or
test
ret
push
pushf
or
dec
xor
cmp
lret
or
pop
sbb
or
xor
push
fdivrl
adc
jae
sub
call
aam
inc
icebp
mov
outsl
scas
push
lret
add
mov
dec
rcrb
into
cmp
rcrb
aaa
repnz
xchg
icebp
test
aam
ss
pop
je
dec
out
clc
pop
mov
repnz
push
mov
pop
add
push
lds
push
sub
scas
icebp
sbb
jo
cmp
in
js
push
mov
pop
inc
addr16
repz
mov
outsb
lahf
pop
dec
push
sbb
movsb
mov
add
push
cmp
inc
pop
iret
and
xor
push
jmp
sbb
shrb
adc
pushl
scas
or
cltd
adc
stos
imul
pop
cmp
xchg
and
stos
addl
aam
stc
sbb
xchg
xor
loop
stos
jnp
lcall
jns
dec
sub
sti
push
mov
scas
sub
int3
push
jecxz
arpl
out
in
push
jno
cmp
shl
out
popa
push
jns
fwait
push
mov
arpl
cmp
int3
sti
sbbb
cwtl
lds
xchg
push
xchg
test
fistps
bound
fnstcw
or
stos
pop
pop
aam
mov
pop
es
test
out
add
sub
mov
inc
addr16
lahf
ss
popa
xor
enter
xlat
arpl
hlt
and
lret
add
xchg
xchg
lahf
arpl
cs
jp
es
js
iret
jns
test
mov
pop
iret
repnz
sbb
or
mov
es
sub
cmpsl
jg
rcll
sub
mov
clc
fnstcw
fstl
std
sbbb
roll
repnz
bt
cmp
sbb
cmpb
fwait
rcrb
dec
add
inc
lret
pop
xor
pop
icebp
mov
stos
loopne
sbbl
es
push
lock
jecxz
pop
mov
push
cmp
and
jecxz
in
cs
xchg
xor
sub
and
sub
icebp
pop
push
mov
xchg
push
aam
cli
ret
popf
xlat
test
and
and
cmc
add
je
fistps
fstp
and
xlat
js
aaa
test
cmp
test
mov
jno
xchg
scas
in
lret
inc
mov
std
fwait
outsb
or
pop
and
xchg
decb
xor
loopne
call
loop
adc
inc
mov
xchg
mov
pop
inc
jbe
pop
imul
enter
int
sar
add
fwait
int3
cmp
stc
pop
xchg
dec
mov
mov
xor
mov
sub
loopne
sbb
in
mov
jge
fidivrs
xchg
mov
or
adc
cwtl
test
adc
and
and
push
pop
lret
iret
arpl
leave
fdivl
pop
xlat
cmp
loopne
xlat
xchg
ds
sbb
imul
lcall
popf
or
in
mov
push
nop
out
jns
mov
in
sub
stos
fidivrl
mov
jne
shll
icebp
jnp
stos
sub
sbb
push
lea
jns
fstps
imulb
jecxz
in
lcall
mov
dec
movsl
hlt
jecxz
stos
lock
cmpl
fiadds
rcrl
xchg
xchg
xchg
mov
lret
pop
repnz
aaa
sbb
cmpsl
mov
mov
lret
and
fists
icebp
out
and
imul
mov
and
inc
cmp
mov
pop
sub
loopne
repz
or
xchg
push
or
xchg
icebp
mov
inc
lods
icebp
pop
mov
or
add
fbld
ja
push
inc
or
js
mov
cs
and
jge,pt
or
dec
sar
jle
cs
in
and
sbb
loope
mov
or
pop
inc
inc
shlb
cs
jp
push
xor
sbb
mov
xchg
aam
lods
test
lret
cmp
mov
insl
pop
mov
or
das
lret
xor
ljmp
add
call
ret
rcrb
or
movsl
das
add
test
push
loopne
push
or
rcrl
mov
or
xchg
iret
mov
jp
pusha
mov
clc
in
xor
sbb
or
jp
xor
jb
and
cltd
push
mov
js
push
xor
xchg
inc
sarb
xchg
sbb
sti
xchg
push
addr16
sub
neg
add
scas
mov
xor
xor
push
shlb
push
xor
and
add
repz
pop
mov
icebp
add
sub
test
das
dec
mov
mov
mov
pop
mov
test
mov
xor
adc
hlt
nop
jl
aad
fists
ror
icebp
mov
xor
hlt
cmp
mov
hlt
mov
pop
in
repz
jno
inc
fsubrs
mov
adc
sbb
sbb
cwtl
push
nop
inc
out
cwtl
cmp
cmpsl
push
pusha
pushf
lahf
iret
sarl
jp
xor
call
and
clc
lcall
enter
scas
aaa
sbb
push
loopne
pop
fldt
cmp
lock
adc
pushf
sbb
xchg
and
and
and
push
int
sbb
xchg
test
fcoms
add
addr16
xchg
hlt
shll
sbb
adc
jecxz
ds
dec
je
bound
cmp
lret
push
fwait
add
xchg
mov
sub
rcrb
jb
mov
lahf
push
mov
push
lock
aam
imul
mov
aam
cwtl
repnz
and
mov
xor
xor
xchg
icebp
mov
in
repnz
or
imul
jae
adc
cmc
mov
sub
dec
xchg
pop
push
repnz
inc
ss
mov
mov
sub
xchg
lahf
cld
lahf
jae
mov
mov
push
rcl
jecxz
inc
shrl
in
rolb
in
lods
movsl
xchg
push
pop
pop
aad
jge
mov
pcmpeqd
mov
pop
xlat
rolb
aas
pusha
jecxz
iret
fadds
jns
mov
xchg
ret
in
arpl
cmp
xchg
cmp
repnz
add
in
ljmp
imul
dec
sub
shll
dec
mov
xor
out
or
shlb
fisubl
daa
ds
pop
cli
cmp
adc
mov
mov
std
add
insl
lret
loop
cltd
out
sub
jmp
ror
inc
lcall
and
push
in
sub
xor
jg
cmp
in
divb
outsl
mov
dec
aam
stos
pop
movsl
hlt
arpl
loopne
test
js
pop
fxch
movsb
divb
pop
jecxz
ret
stos
adcl
xor
push
or
mov
pop
lahf
mov
add
xor
push
aaa
xchg
imul
or
mov
loopne
dec
out
and
mov
dec
bound
jns
adc
rcrb
imul
addr16
std
fwait
jge
mov
xor
xchg
pop
jo
adc
mov
fimull
sub
stc
mov
fwait
push
mov
clc
pop
sbb
test
pop
jb
iret
adcl
outsl
xchg
xor
test
xor
testb
cwtl
stc
addl
aam
sub
aad
push
mov
xor
enter
rclb
jecxz
mov
gs
add
rclb
inc
mov
repz
ret
xor
hlt
outsl
mov
dec
repz
pop
adc
mov
jecxz
inc
aad
xchg
pop
mov
sub
cmp
aam
adc
je
sahf
mov
lahf
jns
rcrb
jecxz
je
fnstsw
int3
in
and
nop
mov
sbb
sbb
test
sub
lahf
jnp
adc
lret
ficompl
dec
xor
jmp
or
rorb
dec
dec
loop
xor
or
imul
outsb
pop
xchg
repz
mov
and
pop
inc
mov
leave
inc
hlt
xor
or
mov
lcall
icebp
gs
das
or
jno
int3
jb
mov
xchg
push
pop
pop
mov
jo
jl
fisubl
cmp
mov
cltd
or
lods
push
leave
inc
jg
add
adc
ret
lock
xor
jae
or
sarl
ss
jno
idivl
lret
std
loope
mov
cli
aad
fwait
xchg
xchg
push
fsubs
or
mov
xor
mov
xor
jg
mov
and
fiaddl
stos
pop
stos
xchg
inc
inc
sub
in
cmp
mov
mov
sbb
je
push
sub
jecxz
iret
aam
enter
xor
mov
fstps
pusha
mov
cmp
lock
or
popf
mov
fcomip
sbb
lock
repnz
cmp
inc
incl
xchg
pop
pop
adc
stos
inc
jns
pop
push
clc
dec
sub
mov
enter
repz
mov
sub
lret
jp
xchg
xchg
dec
repnz
lret
sub
jns
ficomps
adcb
cmc
push
jns
xchg
inc
push
divl
vfmsubaddpd
mov
fldenv
fwait
cmp
xor
inc
xor
cmp
pop
movsl
ss
mov
dec
xlat
cwtl
xor
sti
out
and
jno
in
loope
aad
inc
fsubs
mov
xchg
popa
mov
mov
ficoml
mov
lds
subl
scas
adc
xor
mov
sub
sbb
xor
and
cmp
pop
pusha
jg
or
pop
test
iret
stos
add
xchg
mov
add
sub
and
xor
test
jnp
adc
lahf
inc
pop
cmp
pop
repz
jecxz
xchg
mov
jp
repnz
mov
xchg
mov
stos
mov
xchg
mov
lret
pop
sbb
ret
and
jo
enter
inc
add
add
cwtl
push
shrb
repz
jno
sbb
int3
das
out
pop
xorb
stos
jg
jbe
or
stc
or
push
mov
sti
inc
push
or
dec
sbb
aam
inc
enter
dec
je
cwtl
pop
jg
or
push
xlat
fwait
sub
pop
and
xchg
jmp
repnz
mov
sub
gs
xchg
xchg
inc
movsl
repnz
or
xchg
leave
jmp
or
int3
test
pusha
mov
mov
inc
loop
xor
add
outsl
aaa
scas
pop
cmp
cmp
aad
and
push
fistpll
repz
xchg
and
ljmp
js
dec
lahf
das
jno
xchg
mov
cli
jp
mov
mov
lahf
int3
mov
cmp
xchg
or
cld
adc
xor
mov
jno
jle
adc
inc
inc
test
mov
mov
in
mov
push
dec
in
inc
jp
mov
dec
mov
or
mov
xor
mov
dec
push
adc
repz
aaa
es
shll
jo
shll
add
jae
adc
mov
shl
cwtl
mov
aam
je
jo
cmp
push
stc
jae
lret
arpl
mov
add
mov
push
pop
hlt
sbb
push
jle
mov
sbb
mov
inc
stos
icebp
xchg
jp
push
cmpsl
adc
stos
out
inc
andb
xor
jns
sub
inc
idiv
sbb
jae
lret
lods
inc
imul
adc
cli
cmp
jecxz
cmpsl
add
add
cltd
xchg
cli
mov
test
enter
fwait
pop
scas
rcrl
mov
dec
xchg
testb
repnz
inc
mov
xchg
mov
fidivrl
idivl
ja
pop
leave
stos
sbb
inc
adc
lahf
mov
movsb
hlt
add
enter
je
cmp
push
leave
mov
cmp
mov
xchg
stc
fadd
iret
rcrl
jne
sub
movsl
pop
lret
addr16
hlt
arpl
pop
jnp
jno
mov
xchg
inc
clc
ret
mov
int3
sub
addr16
push
sub
jp
or
xor
sbb
push
xlat
repz
pop
iret
xor
sbb
out
icebp
out
arpl
xor
sbb
int3
inc
sub
repnz
pushf
idiv
pusha
jecxz
dec
loope
adc
loopne
mov
cmp
or
xchg
mov
sub
jbe
jne
push
stos
add
inc
std
loope
gs
xchg
stos
daa
sbb
js
je
or
and
in
js
xchg
cmp
cmp
and
fisttpl
jb
xor
sbb
push
lret
ljmp
in
sub
or
mov
sbb
testb
fldt
cltd
cmp
jns
and
movl
xchg
mov
push
xchg
hlt
rolb
mov
xor
std
nop
add
dec
cmc
jmp
push
test
aad
and
mov
sub
and
inc
insb
jp
fnstsw
ss
xchg
sbb
inc
int3
jp
call
adc
daa
push
xchg
pusha
nop
icebp
js
and
xor
leave
mov
enter
cmp
sbb
jb
fdivrs
pop
repnz
add
data16
icebp
mov
dec
add
mov
shl
mov
mov
stos
lea
push
ljmp
xchg
insl
jmp
lahf
js
jnp
add
cmp
xor
sarl
mov
loopne
cli
out
push
xchg
and
jmp
stos
pop
hlt
call
arpl
mov
add
iret
pop
push
je
mov
in
fldenv
xchg
sub
xor
xor
mov
push
mov
pushf
mov
mov
sub
add
mov
dec
jns
lea
jl
dec
sub
sbb
out
xchg
adc
fildll
pop
repz
lock
in
pop
popf
cmp
or
cli
sbb
repz
fbstp
in
xor
mov
inc
decl
shll
ljmp
mov
lahf
or
jbe
fsts
ljmp
repz
adc
inc
push
mov
sbb
inc
fdivrs
cwtl
mov
cli
cmpsb
and
fidivrs
fisttps
sbb
sub
or
mov
mov
stos
stos
dec
test
push
call
sbb
js
mov
mov
mov
nop
and
fbld
sub
inc
imul
fiaddl
xchg
sbb
dec
xor
repz
xchg
add
push
adc
mov
ret
sbb
inc
jge
xchg
mov
pop
xchg
jge
mov
mov
ret
jb
movsl
xchg
sub
adc
push
fbld
mov
mov
cmp
test
lret
and
jb
das
cltd
adc
bound
dec
and
xor
mov
int3
stos
lcall
loope
pop
pop
inc
rcrb
or
sub
rclb
xor
leave
lea
arpl
pusha
xor
mov
xor
pop
mov
push
dec
int3
jge
leave
xchg
xchg
fidivrs
fimull
enter
ret
nop
and
cmp
pop
add
shr
data16
mov
movsl
rol
pop
fisubrl
xor
push
cltd
rol
loop
loop
fcomp
inc
push
pop
sbb
add
ljmp
dec
push
test
icebp
jo
dec
bound
mov
cld
xchg
jl
push
xor
imul
icebp
dec
aaa
push
xchg
xchg
dec
jns
sub
add
int3
jns
ljmp
cltd
cwtl
xchg
pop
shll
ret
addr16
jbe
xlat
dec
pushf
icebp
xor
inc
or
push
icebp
fisubs
sbbl
pop
dec
movsl
cmp
mov
inc
repz
jns
movb
ljmp
lds
leave
mov
pop
es
addl
mov
ss
jnp
es
arpl
jns
jge
popa
pop
aam
xor
or
cmp
mov
mov
in
push
repz
rorl
aas
stc
push
lret
pop
fldl
sub
adc
or
test
and
add
stos
or
mov
mov
inc
or
in
push
and
jecxz
ror
je
arpl
test
mov
ret
xor
lcall
mov
enter
push
rcl
inc
cwtl
subb
inc
test
push
xchg
jp
xor
mov
fdivrl
xchg
mov
repnz
sbb
push
pop
into
jbe
lahf
xor
push
test
add
flds
mov
cwtl
and
das
fwait
push
xchg
aaa
xchg
cmp
jne
jge
test
xlat
cmp
loopne
cmc
and
shl
stos
test
out
sub
mov
flds
push
ds
sub
scas
mov
cmp
lods
pop
fmulp
xor
jl,pn
push
dec
cltd
pop
call
in
inc
mov
mov
cmpsl
aas
jg
sbb
mov
int3
idivl
mov
lcall
or
mov
pop
ds
mov
jbe
mov
push
aam
mov
fistpl
sub
push
fiadds
icebp
rorb
dec
addr16
dec
adc
jl
cmp
nop
in
xor
gs
xchg
inc
pop
jp
inc
pop
std
popf
int
cmp
push
xlat
jo
mov
xor
sub
das
imul
test
test
add
popa
xlat
mov
dec
lret
out
mov
adc
int
mov
xchg
add
shl
jno
sbb
loopne
in
jo
jle
inc
lret
and
pop
cltd
cwtl
jmp
sub
shll
aad
xor
dec
hlt
pop
imul
fdivrl
mov
push
push
jb
push
jecxz
in
sub
test
inc
adc
cld
ror
jge
fwait
clc
and
nop
int3
sysret
or
cmp
lret
mov
lahf
imul
and
and
rorb
fcmovnu
inc
or
cmp
sbb
leave
test
std
and
cmc
sub
scas
stos
imul
dec
aam
cld
je
mov
sbb
adc
mov
pop
mov
outsb
xchg
popa
les
cmp
into
fbstp
int
sbb
cmp
cmpsl
mov
or
add
mov
leave
and
addr16
fsubl
je
pop
lret
jmp
mov
lds
add
imul
jecxz
or
mov
icebp
mov
or
out
loope
lret
fidivrs
or
lret
lahf
cmp
insb
repnz
mov
mov
and
cmp
es
push
inc
hlt
cltd
arpl
addr16
inc
and
sub
pop
lcall
cwtl
nop
fcoml
inc
jg
addb
imul
les
or
mov
inc
xchg
mov
vmovsldup
xlat
arpl
dec
sub
jp
ffreep
hlt
rolb
xlat
add
cmp
jp
imul
test
mov
mov
in
jo
mov
les
dec
pop
les
or
xchg
inc
test
jns
sbb
push
addr16
int3
or
movsl
popa
sar
cmp
flds
enter
cmp
mov
lds
jg
xor
sub
cli
sbb
scas
aaa
sbb
push
mov
pop
lcall
jb
cmpsb
in
or
mov
inc
sti
sbb
jecxz
fwait
cmc
dec
stos
mov
push
fcompl
fbld
cmp
mov
ret
inc
insl
push
mov
sbb
cmp
and
repnz
cmc
sbb
jbe
push
mov
fsqrt
mov
pop
cwtl
jmp
and
mov
add
rorl
cmp
inc
inc
rorl
xor
inc
xor
iret
call
enter
jp
ljmp
xor
push
jne
je
pop
cs
and
lret
fwait
adc
jg
je
mov
shl
cmp
shlb
ret
aam
lods
enter
je
repz
sbb
into
pop
and
add
cmpsl
push
imul
pop
xor
mov
xchg
jecxz
fisubrl
imul
or
push
push
push
push
mov
repz
cmp
int3
add
fwait
not
mov
pop
jns
rorl
cmp
push
aam
loop
push
sbb
xchg
mov
push
add
adc
jmp
stos
adc
pop
and
ds
jns
mov
mov
cld
add
clc
fdivr
fsincos
repz
or
mov
sub
rorb
mov
mov
push
xor
jge
ret
lods
cltd
adc
enter
iret
mov
psubusw
adc
lret
mov
mov
mov
jmp
dec
ror
dec
jbe,pt
inc
arpl
push
aaa
push
push
jecxz
sbbb
xlat
sbb
mov
aas
lret
jbe
and
and
or
sub
aam
or
adc
jle
and
jbe
xchg
push
push
mov
cmpsb
jecxz
lret
add
cltd
fldcw
int
xlat
mov
mov
cwtl
rsm
jmp
shlb
push
jno
test
inc
mov
ljmp
stos
xor
cmp
sahf
jns
jl
popa
sub
out
sbb
xor
sub
pop
movsl
roll
call
jp
stc
inc
or
mov
mov
jo
es
inc
sahf
les
adc
leave
cltd
jae
sbb
jno
push
stc
sarl
loopne
adc
mov
xlat
adc
xchg
inc
jp
mov
in
pusha
outsb
mov
sbb
adc
xchg
xchg
jne
ret
jbe
arpl
jae
test
rcll
adc
mov
in
sbb
int3
push
repnz
inc
push
jo
pusha
inc
xor
or
mov
jae
aaa
dec
pop
cmpsb
jbe
pop
sub
xlat
mov
adcb
inc
hlt
jecxz
mov
cmp
xchg
xor
and
jno
mov
push
das
inc
xchg
mov
aaa
lock
pop
pop
adc
fstps
hlt
sbb
addr16
hlt
cmp
mov
inc
or
mov
or
int
dec
xor
dec
sbb
dec
sbb
dec
insb
add
pop
dec
roll
sub
icebp
ljmp
mov
fbstp
jge
mov
or
and
and
sub
mov
stos
inc
xchg
lret
ret
xchg
inc
mov
push
jae
ja
repz
add
test
xor
fcomps
int3
sub
jns
push
xor
cld
in
xchg
fwait
andl
fidivrl
je
stos
mov
addb
jp
out
or
int3
cltd
mov
mov
cld
and
lahf
push
xchg
stos
mov
imul
fldenv
xchg
lret
repnz
jp
sub
mov
mov
jb
sub
cmp
pop
pop
sbb
test
jns
cld
or
mov
mov
mov
and
mov
sub
lods
mov
push
or
lcall
test
jo
xor
mov
fdiv
sbb
shl
mov
xchg
js
add
jno
and
xor
imul
jmp
fdivl
jp
sbb
lret
jnp
or
ret
xor
stos
fisttpl
inc
lds
imul
int
cmp
stc
scas
stc
dec
mov
inc
pop
fmuls
clc
lahf
jns
loopne
dec
dec
jecxz
or
xchg
xchg
loope
fistps
out
sbb
pop
mov
sub
imul
adc
scas
popl
cs
repnz
jmp
in
push
es
das
mov
jb
mull
subb
mov
dec
in
mov
jle
push
ljmp
xchg
xchg
shlb
jbe
rcrb
test
iret
adc
add
shl
mov
or
test
shl
test
inc
add
mov
int3
data16
nop
adc
je
push
push
repnz
xor
stc
ret
lock
jecxz
aad
cmp
xchg
xchg
fisttps
iret
push
cwtl
imul
cmp
mov
leave
mov
jg
lcall
inc
addr16
or
lcall
scas
cmp
lret
pusha
xor
ds
fwait
mov
mov
iret
ret
leave
cmp
fdivr
pop
jp
cwtl
xlat
and
xor
mov
leave
and
pop
add
lret
mov
imul
cmc
jp
adc
and
arpl
dec
sub
out
xor
inc
pop
adc
and
push
mov
mov
je
popa
push
std
xchg
into
sub
sub
xor
mov
pop
data16
mov
push
stos
out
popf
jecxz
sbb
add
cmpsl
push
xchg
sbb
addr16
sbb
push
xlat
cmp
int3
xor
adc
sbb
cmc
cltd
inc
frstor
jl
repnz
out
je
sub
orl
int3
lock
sub
lcall
adcb
icebp
jae
lcall
push
xchg
jmp
das
mov
sub
xchg
mov
xlat
jmp
or
enter
mov
dec
xchg
mov
xor
repnz
in
jecxz
mov
ret
ss
adc
or
fmull
mov
not
push
mov
lahf
in
add
push
jns
mov
dec
jecxz
hlt
aad
mov
mov
mov
inc
std
dec
mov
mov
fidivrs
into
pop
cmp
faddl
test
inc
jbe
movsb
jbe
push
jmp
xchg
jns
mov
jecxz
stos
aad
mov
dec
leave
pop
mov
shl
mov
add
mov
out
ss
out
sub
loope
cmp
push
mov
jne,pn
mov
js
jecxz
mov
insl
mov
inc
mov
pop
cmp
or
mov
jno
mov
push
mov
sub
xchg
arpl
mov
test
clc
cs
push
push
sbb
int
cmp
xor
js
xchg
add
mov
or
and
inc
mov
fcom
hlt
nop
lcall
rolb
adc
jecxz
sub
push
aad
into
push
jle
xchg
call
fwait
push
jl
std
dec
test
mov
lret
add
lret
push
xor
adc
sub
xchg
adcl
or
mov
dec
int3
mov
sbb
push
repnz
sub
idivb
aas
stos
and
mov
xlat
je
cmp
icebp
jb
sbb
nop
mov
imul
cmp
xchg
int3
adc
fnstcw
repnz
dec
lahf
cwtl
repnz
fcmovnbe
pop
std
out
stos
adc
jae
mov
mov
shlb
jae
inc
fsubs
pop
cmp
xchg
mov
pop
xor
das
xor
jno
mov
idivb
imul
mov
xchg
pushl
jecxz
les
nop
inc
out
movsl
xor
or
js
or
fstpt
ret
inc
mov
push
jmp
xor
jecxz
xor
push
aam
fstpt
mov
mov
das
fwait
icebp
jno
mov
push
imul
sbb
fsts
lock
cwtl
xlat
mov
insb
push
xlat
sarl
mov
or
push
dec
cmp
or
push
stos
xor
adc
jbe
test
cltd
cltd
sbb
mov
inc
out
cmp
lahf
xchg
test
jmp
lcall
mov
jecxz
sarb
sbb
imul
shrb
mov
fldl
stc
repnz
addr16
bound
pop
xchg
stos
sub
sbb
jmp
sub
pop
jne
test
jae
or
jmp
inc
dec
pop
jmp
lahf
je
fsubl
jnp
lret
mov
loop
inc
mov
ljmp
test
mov
sti
jecxz
ror
mov
or
int
idivb
dec
icebp
stos
jae
lcall
add
or
inc
je
dec
enter
xor
or
and
xorl
jecxz
pop
bnd
inc
adc
bnd
aad
test
lock
pop
jae
mov
lods
xchg
xchg
fucomi
mov
jae
aam
push
or
or
push
loopne
xchg
jbe
xchg
ret
mov
repnz
mov
jo
or
sbb
pop
into
xchg
mov
adc
xchg
jbe
mov
pop
fists
push
in
cltd
rolb
mov
sarl
or
push
out
jp
add
cmp
and
repz
sbb
loopne
jns
dec
stos
out
cltd
cmp
pop
inc
mov
js
jno
lods
fcompl
add
inc
pop
jns
xchg
icebp
sbbl
mov
fisttps
fstl
xchg
enter
mov
mov
inc
ror
js
mov
jae
pop
mov
jbe
or
jno
int
push
mov
mov
icebp
dec
xor
dec
inc
ds
movsl
mov
repnz
mov
and
inc
or
popa
test
push
xchg
xlat
loope
cmp
aad
js
faddl
rclb
pop
test
or
test
iret
push
jg
jo
xchg
adc
pop
inc
jp
loopne
adc
add
mov
dec
fcomi
fsts
sti
ret
push
cs
mov
mov
rcrb
and
or
jns
sahf
stos
iret
push
push
push
xlat
xchg
and
pop
pushf
mov
hlt
jp
shll
test
jbe
dec
stos
add
flds
jne
add
cmp
ljmp
pop
or
cltd
mov
push
xlat
out
inc
lcall
mov
sbb
add
fdivs
lcall
add
jmp
cli
andb
sub
jp
push
or
jns
ja
ret
jnp
stos
xor
aad
sbb
fwait
xchg
xchg
or
daa
pop
jecxz
and
dec
add
xchg
adc
mov
sbb
sahf
sbb
int3
or
jp
push
xor
loopne,pt
mov
add
lret
jns
cmp
sub
lcall
push
mov
js
sbb
fcoms
in
adc
cmp
test
and
xchg
pop
cmpsl
jbe
aas
enter
and
jae
je
dec
push
inc
sbb
sbb
ret
mov
cwtl
bound
mov
call
dec
pusha
xlat
mov
cmp
mov
or
stos
and
mov
rclb
cmp
enter
jne
lock
sub
sbb
repnz
jbe
push
icebp
push
push
inc
nop
jg
call
pop
push
hlt
inc
ds
xlat
xor
jns
xor
mov
fcompl
decl
inc
fstps
hlt
mov
bnd
jbe
jbe
and
iret
mov
mov
cmp
lcall
or
inc
cmp
pop
mov
rcrb
and
xchg
or
add
mov
test
pusha
jecxz
mov
fdivr
repnz
mov
mov
loopne
roll
movsb
xchg
pushf
out
and
pop
adc
sub
mov
test
and
es
xchg
das
mov
rcrl
test
ret
dec
stc
mov
js
xchg
mov
test
push
add
shll
cmp
test
je
mov
mov
arpl
jecxz
int3
xlat
pop
pop
jbe
scas
xchg
filds
push
movsl
pushl
or
adc
stos
push
mov
adc
fildll
aad
loope
ret
sbb
stos
lds
jmp
jmp
and
mov
or
xor
pop
cmp
or
cmp
rcrb
and
or
leave
mov
or
pop
pop
fstpt
or
push
pop
jecxz
dec
lahf
rcrb
ds
cmp
cwtl
test
cmpsb
inc
mov
or
or
insb
pop
iret
and
mov
sub
mov
xchg
adc
jp
xchg
push
hlt
rcrb
pushf
fwait
sbb
jb
cwtl
mov
stos
movsl
xchg
cmp
pop
jmp
mov
nop
add
and
stos
or
sbb
fdivrs
mov
je
push
mov
mov
or
sbb
lcall
mov
rol
fbld
repnz
jp
xorl
addl
mov
mov
dec
sbb
enter
sarb
cli
das
je,pt
dec
mov
dec
sub
cli
xchg
iret
bound
js
jmp
outsl
sbb
fmull
add
fsts
cmp
pop
jae
pop
and
mov
mov
cmp
sub
nop
pop
loopne
iret
enter
inc
xchg
fimull
push
mov
iret
dec
or
mov
shrb
jns
pop
stos
nop
xor
cmp
loope
jg
jbe
negb
lahf
jle
mov
pusha
cmpsl
loope
xchg
notb
push
aaa
lds
dec
arpl
lret
push
insl
xchg
lods
sub
loope
subb
icebp
jecxz
popf
int
xchg
mov
sub
xchg
fimull
fsubs
mov
sub
stos
xor
leave
inc
mov
outsl
ds
aam
mov
iret
mov
and
add
sbb
ret
cmp
push
mov
pop
repz
mov
addr16
negb
ret
mov
addr16
mov
icebp
sub
and
loop
pop
pop
pop
iret
jmp
dec
add
lcall
pop
jg
hlt
enter
xchg
fcmove
test
add
xchg
bound
repz
sbb
mov
enter
jns
ds
es
add
add
mov
aam
jecxz
jecxz
push
pop
stos
addr16
cmp
and
xor
mov
push
stos
push
push
mov
aad
mov
mov
adc
mov
mov
rol
test
dec
xlat
test
cmp
pop
jb
xchg
cmpsl
push
mov
mov
lret
or
mov
xchg
movsl
xchg
negl
jp
in
stos
aam
js
xchg
push
xchg
jno
jae
das
sar
imull
jcxz
pop
loope
cli
pop
cmp
mov
mov
repnz
rcl
or
test
loop
mov
iret
popa
das
cmp
cmp
jno
xor
sub
xor
in
add
repnz
cmp
testl
ret
cmpsl
in
nop
mov
iret
pop
jecxz
lods
aad
je
mov
xchg
ljmp
aaa
xchg
push
arpl
sarb
ret
cwtl
sahf
and
lret
faddl
arpl
pop
mov
sar
loope
es
fcmovne
mov
sub
jbe
xchg
sarl
or
aam
andb
mov
es
mov
pop
lea
xor
out
cmp
roll
icebp
orb
sub
jno
addr16
mov
and
and
xchg
jp
js
push
lret
pop
sub
mov
call
or
xor
rcll
jae
rol
jp
and
mov
jno,pn
sbb
shrb
shl
mov
inc
adc
int3
jb
jg
je
test
sub
adc
adc
inc
push
inc
lods
push
iret
pop
mov
imul
int3
mov
and
cmp
xchg
adc
rcrb
inc
mov
repz
pop
jecxz
imul
cmp
nop
jmp
mov
loopne
imul
std
outsb
pop
ffreep
loopne
popa
mov
mov
pushf
jge
mov
add
test
orl
mov
std
xor
mul
stos
xor
dec
stc
mov
cmpsb
xchg
push
xor
push
loop
xlat
inc
push
cmp
cltd
aad
fwait
imul
jbe
into
nop
fildll
and
xlat
sub
jb
or
cmp
es
stos
push
pop
push
mov
jecxz
les
repnz
sbb
dec
aam
jae
fnstenv
sbb
inc
pop
cmp
repnz
test
and
andl
pusha
cmp
stc
push
popf
mov
std
int3
ss
stos
push
sub
jae
cltd
push
test
lahf
clc
adc
rclb
mov
jp
andl
repz
ss
test
push
pop
mov
lret
pop
or
pop
sbb
mov
mov
sub
or
xor
sbb
shll
mov
imul
aam
shlb
popf
iret
xor
cmp
loopne
xlat
lret
cmp
or
push
xlat
mov
xchg
jp
jnp
stc
lock
dec
repz
mov
lcall
cwtl
cwtl
repnz
lods
popa
in
leave
imul
rorb
inc
aam
stos
cmp
subb
cmp
fdivrl
int3
and
and
dec
add
icebp
sbb
xor
push
out
dec
jae
pop
cmp
mov
push
push
aad
push
jmp
xor
push
mov
mov
mov
mov
mov
inc
or
push
xlat
cmp
mov
cmp
test
xor
mov
dec
fisubrl
cmp
icebp
fisubl
test
sub
or
rcll
inc
cs
icebp
fdiv
lret
lret
out
loopne
bnd
jmp
xchg
and
icebp
xor
sub
jp
pop
aad
xchg
iret
xor
sub
loopne
mulb
scas
mov
in
mov
add
fiadds
sbb
pusha
into
ss
jnp
or
addr16
sub
xor
pop
cmp
cs
mov
cwtl
xlat
popa
cmp
adc
xor
sti
cmp
or
fsubrs
incl
sbb
mov
adc
and
cmp
dec
and
xchg
stos
pop
int3
mov
sub
aad
dec
push
or
mov
and
mov
or
mov
mov
pop
fdivr
xor
xchg
xchg
sarb
xlat
test
aad
sbb
adc
lret
icebp
or
and
push
pop
inc
mulb
bnd
cwtl
jp
rorb
jno
mov
xchg
cmp
stos
outsb
and
inc
sarl
inc
xor
jo
mov
rcr
add
and
repnz
leave
inc
adc
ds
int3
and
cwtl
jp
push
cmp
movsl
or
es
xor
lret
enter
mov
ds
call
inc
pop
xchg
cmp
aam
dec
lahf
sahf
xchg
jbe
mov
addl
mov
repnz
out
xchg
cwtl
rorb
repnz
mov
popa
adc
fstpt
cmp
jge
push
loope
das
push
enter
pop
test
and
nop
imul
pop
out
ret
xchg
repz
push
mov
out
jp
out
cmp
ror
ret
jno
mov
xor
imul
mov
mov
jle
adc
xor
cmpsb
pusha
jp
les
je
pop
lahf
icebp
dec
addr16
incb
mov
popf
mov
xchg
cmpsl
inc
neg
adc
push
pop
popa
push
aaa
xlat
rcrl
enter
mov
xlat
or
mov
inc
cmp
enter
cs
cmp
dec
test
int
stos
xor
adc
jns
dec
fwait
or
stos
in
jno
add
sti
popl
push
std
jno
cmp
sbb
xchg
mov
icebp
mov
clc
mov
cs
test
cmp
clc
xor
fiaddl
mov
lock
ret
aam
mov
orb
cltd
push
sbb
mov
jbe
ret
jp
inc
cltd
mov
mov
jmp
dec
jns
imul
dec
adc
testb
sub
and
outsl
jno
das
xorl
into
push
lret
push
add
idivb
pop
iret
cmp
mov
push
xchg
push
clc
int
sahf
dec
xor
icebp
decb
outsb
bound
or
shl
mov
jbe
imul
enter
dec
bound
cwtl
mov
lods
jp
jg
int3
sbb
or
repz
stos
arpl
or
jns
dec
enter
adc
jns
fnstcw
add
sbb
push
xchg
pop
jg
jbe
cmp
jmp
xor
sub
std
inc
mov
pop
aas
mov
in
xlat
js
mov
loope
push
popa
dec
mov
or
lcall
mov
push
stos
mov
cltd
addr16
and
fcmovnu
dec
jecxz
pop
aad
cmp
mov
enter
mov
sub
imul
int
fistpll
iret
in
loopne
and
hlt
add
jns
stos
jb
xchg
cld
sbb
push
sub
jns
leave
sub
jns
jl
idivl
sub
mov
push
cli
imul
push
cmp
rclb
add
xlat
mov
jecxz
lahf
push
dec
mov
jmp
clc
mov
shll
sbb
popf
xlat
fmuls
push
xor
icebp
mov
repnz
and
adc
jo
sub
jb
movl
addr16
jno
jmp
adc
mov
jmp
test
mov
pop
jb
and
xchg
xchg
loopne
adc
dec
mul
xchg
negl
inc
jmp
lods
int3
jmp
mov
xlat
movsl
mov
mov
cmp
add
rcl
cmp
mov
mov
nop
cmp
incl
pop
xchg
hlt
rcl
dec
fnstcw
sarb
push
ret
cmpb
addr16
ds
inc
pop
outsl
sbb
stos
push
mov
jbe,pt
xor
inc
add
addr16
adc
add
rclb
sbb
lret
fs
loopne
inc
int
sbb
inc
xchg
and
mov
test
cmp
shlb
in
mov
mov
aas
jbe
rorb
cld
adc
mov
sbb
push
mov
push
cltd
hlt
stos
push
push
or
sub
and
and
lcall
or
leave
adc
jae
je
stos
or
inc
mov
cli
pop
iret
mov
pop
lahf
mov
stos
add
lret
xchg
dec
add
mov
repnz
or
xor
fildl
xor
xchg
mov
aam
jecxz
fidivs
iret
inc
shll
push
jae
sbb
arpl
mov
jb
xchg
filds
mov
loopne
xor
rclb
jge
jne
mov
pop
xchg
mov
mov
pop
mov
and
pop
add
push
sub
pop
mov
mov
inc
xchg
jns
inc
addr16
nop
out
std
rcr
add
cmp
push
cmp
add
scas
mov
addl
pusha
mov
fmuls
xchg
arpl
fcoms
jmp
sbb
lcall
cltd
mov
decl
ds
aam
in
ret
pop
rcrl
cmp
mov
adc
ljmp
leave
fdivrl
fsubrl
xor
std
or
mov
jbe
out
stc
imul
loope
rcr
add
mov
push
icebp
loopne
and
jl
nop
dec
inc
cld
xor
xchg
cmp
pop
test
iret
pushf
repnz
jae
icebp
and
add
dec
jno
sbb
and
cwtl
sub
or
xor
repnz
sbb
shl
stos
add
adc
imul
push
repz
push
insl
push
adc
add
sub
dec
ficompl
inc
xlat
xchg
jne
xor
sub
xchg
jns
cmp
mov
stos
mov
add
lahf
fistps
int
cmp
pop
shrb
pop
push
adc
addl
popa
inc
ret
push
repnz
inc
scas
repz
mov
sbb
ds
mov
enter
stos
sub
ds
pop
mov
xchg
mov
mov
jmp
mov
push
mov
loope
leave
sbbl
xchg
das
push
sbb
jp
rclb
xchg
push
lahf
xlat
sub
imul
icebp
adc
and
and
mov
test
mov
pop
mov
jnp
or
or
and
inc
mov
cmp
jno
inc
nop
mov
fbstp
sbb
xlat
loope
fidivs
xchg
aam
mov
jnp
or
mov
test
movsl
std
jns
jne
fwait
decb
cmp
stos
and
mov
jno
lahf
adc
repnz
cltd
xchg
ficomps
jae
sub
lret
adc
subb
leave
dec
repnz
cmp
cltd
jp
pop
jbe
out
or
inc
push
sbb
push
mov
and
or
xor
fidivrs
sub
mov
call
and
jo
das
mov
movsl
call
push
jg
ss
test
int
sub
xor
lret
aam
jbe
test
dec
dec
or
pushl
push
nop
xlat
popa
daa
std
mov
mov
mov
cmp
cmp
mov
and
dec
mov
pop
lods
push
sub
shlb
icebp
mov
out
sbb
jmp
xchg
adcb
or
push
inc
mov
loopne
sub
pop
repnz
mov
mov
jle
mov
dec
jp
into
mov
in
inc
push
iret
cli
and
lret
int3
add
xchg
and
repz
lds
mov
das
sub
sarl
clc
mov
and
mov
stc
shrl
cmp
shl
imul
addr16
or
and
fcmovne
dec
jp
sub
outsl
icebp
sub
cmpsl
shrb
xor
sub
rcr
dec
jge
jb
imul
dec
or
mov
lret
loop
or
movsb
ds
ror
push
mov
aas
push
and
jo
dec
lcall
bound
adc
nop
in
mov
or
mov
cmp
cmp
mov
inc
neg
sbb
cmp
nop
ficompl
idivl
iret
jno
sarb
xorl
push
jmp
sub
or
mov
or
test
and
mov
pop
push
or
sbb
int
dec
notb
xlat
sub
jecxz
insb
lahf
push
lcall
addb
mov
testb
adc
pop
cld
popf
add
sub
xor
xchg
xor
lcall
or
movsl
loopne
xchg
hlt
icebp
or
rclb
xlat
ljmp
loopne
mov
testb
xchg
dec
jb
jg
cmp
aam
sub
cmpsb
fcompl
mov
rcr
data16
cmp
sbb
and
adc
icebp
rcl
imul
cli
testb
cmp
xchg
cmp
clc
in
pop
mov
stos
sbb
ljmp
cmp
repnz
mov
inc
pop
xchg
jmp
sub
mov
adc
sbb
lret
pop
sbb
adc
stc
icebp
test
mov
xchg
mov
sbb
sbb
pop
call
inc
push
add
arpl
loop
int3
mov
inc
sbb
fcmovne
mov
push
jmp
mov
fstpt
popf
xchg
sub
mov
iret
or
cmp
sbb
push
cli
fisttpll
push
cmp
jno
or
sub
cli
int
sbb
xchg
dec
fidivl
or
fwait
cmp
enter
push
lcall
xchg
mov
jp
sarl
jp
fistl
clc
mov
lcall
rorl
pop
jne
arpl
and
shlb
sub
push
jae
mov
pop
sbb
cli
mov
rcrb
mov
cmp
lret
out
sti
or
push
icebp
push
test
jno
jmp
mov
stos
or
loope
dec
inc
sub
leave
push
arpl
stos
cwtl
stos
jmp
add
sub
lock
or
repnz
mov
leave
mov
stos
sub
je
imul
inc
xchg
fs
pusha
in
arpl
jecxz
inc
std
leave
pop
mov
das
enter
mov
push
mov
or
or
test
mov
pusha
aad
pusha
push
call
pop
fwait
xchg
xchg
xchg
inc
clc
pop
stos
mov
pop
ret
inc
pop
mov
aad
jnp
dec
mov
enter
iret
jp
into
push
lret
mov
mov
mov
loope
sarl
in
addr16
jmp
pop
pop
jo
xor
mov
out
leave
push
jne
push
inc
push
add
fwait
or
leave
and
jb
test
xor
call
lock
jnp
add
sub
flds
or
inc
mov
mov
xor
xor
dec
or
cmp
mov
dec
xor
jns
mov
imul
dec
lahf
repz
sub
inc
inc
cltd
sub
xchg
pusha
sbb
push
jmp
imul
mov
mov
test
xor
or
dec
dec
pop
jb
lret
jp
and
mov
sub
or
rorb
mov
lret
or
or
push
mov
mov
cmp
jmp
pop
insb
cwtl
sub
popf
fdivr
enter
jo
jl
sti
push
mov
adc
iret
repz
and
xlat
push
add
mov
repz
jl
jg
push
push
fdivl
fldt
adc
jl
rorl
testl
sbb
xchg
mov
jl
outsb
xchg
pop
sti
jns
jno
fwait
stc
sub
repz
dec
int3
mov
icebp
cmp
cmp
mov
sti
xorl
jne
pop
std
ret
xchg
stos
jl
cmp
pop
repz
xchg
cmp
adc
fwait
jmp
jecxz
lods
sbb
mov
lret
cmc
and
out
movsb
inc
sti
shrl
inc
test
and
dec
inc
lods
enter
std
mov
cmp
cmp
ja
jecxz
imul
insb
arpl
dec
outsl
xchg
jge
mov
fidivrs
arpl
mov
pop
cmp
mov
mov
dec
loopne
jnp
aam
lods
lock
rorl
pop
jecxz
jg
cmp
push
insb
jne
adc
mov
mov
mov
sub
pop
xor
mov
imulb
mov
push
enter
out
cmc
in
cwtl
aad
pop
outsb
stc
das
arpl
mov
pushf
jp
mov
mov
sti
iret
mov
sub
scas
push
mov
dec
scas
push
cmp
or
adc
mov
sti
cli
std
xchg
sbb
lods
notl
into
mov
cmpsb
add
push
mov
or
addr16
ljmp
jae
pop
stc
ljmp
sti
push
leave
in
push
bound
push
mov
mov
push
leave
add
addr16
or
push
mov
je
inc
jecxz
mov
xor
mov
jae
dec
lods
clc
mov
pop
or
mov
cwtl
and
pushl
ljmp
pavgb
mov
mov
cmpsl
cmp
iret
push
mov
push
pushf
cmp
xchg
insb
popf
xchg
push
ljmp
rol
push
push
xor
and
xlat
fucom
sti
lods
pop
pop
inc
or
sahf
xchg
jl
fadds
popf
je
sub
lods
lahf
stc
cmpsb
fmull
cmpsl
imul
test
out
dec
lods
jns
adc
nop
sub
fcoml
jbe
sbb
scas
pop
bound
loopne
mov
fwait
test
jns
xor
fcmove
inc
xor
mov
sti
lods
jnp
cmpb
pop
jl
or
fnstsw
mov
mov
test
test
in
cmp
lods
dec
sub
mov
jae
sbb
in
shl
fistpl
cmp
out
imul
insb
or
adc
stc
sti
mov
cmp
or
dec
push
loop
push
sti
add
in
cmpb
pop
and
pop
adc
ss
lds
mov
loop
sahf
outsb
sti
loopne
stos
pop
inc
sbb
loope
cmp
out
mov
inc
clc
pop
xchg
sti
inc
inc
ret
add
sti
push
sub
call
sub
pop
mov
outsb
dec
and
inc
pop
bnd
sti
push
mov
lcall
pop
insb
jnp
aad
icebp
mov
sti
int3
test
jle
ret
imul
ret
out
call
nop
test
cld
mov
cwtl
stc
xlat
adc
push
inc
mov
pushf
and
ljmp
andb
notl
cmp
mov
xor
jne
and
int
dec
push
add
sti
call
arpl
notl
add
enter
imul
mov
repnz
cmc
cltd
hlt
ljmp
jecxz
add
call
arpl
les
dec
jns
mov
xor
hlt
mov
and
sub
mov
jnp
cmpsl
bound
pop
mov
js
mov
lcall
pop
imul
mov
or
inc
shrl
iret
inc
sub
or
and
scas
fsubrl
sbb
test
jmp
ljmp
data16
out
notl
in
scas
test
jnp
prefetcht2
xor
cltd
js
jg
pusha
mov
stc
scas
sub
pop
jecxz
xchg
cmp
pop
xor
push
push
mov
outsl
ret
and
test
xchg
sub
xor
popf
sti
incb
sahf
add
adc
xlat
jge
mov
outsb
cmpsb
hlt
rcll
inc
add
outsl
repz
mov
mul
int
jnp
xor
mov
pop
clc
inc
add
mov
sbb
jae
in
pop
mov
jg
lock
xor
sahf
cmp
adc
cmp
inc
gs
add
cmc
push
jp
mov
mov
sbb
aad
mov
push
xchg
push
dec
lds
inc
mov
sub
das
push
fildll
aas
addl
mov
loopne
pop
push
ds
and
in
sbb
call
jne
mov
sub
js
mov
aaa
lock
dec
adc
sub
push
or
nop
jo
inc
and
and
sti
divl
pop
inc
or
out
pop
adcl
xchg
imul
lds
mov
out
add
mov
pop
xchg
sti
pop
push
in
lock
or
sti
lea
push
test
jne
addr16
iret
mov
fisttpl
jle
dec
sbb
mov
insb
push
sbb
mov
pop
sti
dec
repz
popf
inc
add
std
xchg
push
mov
and
fs
ljmp
cmp
int3
xor
ljmp
mov
xor
mov
stos
and
mov
popa
stc
sti
inc
mov
jge
sti
mov
stos
shrb
xor
lods
add
in
jnp
sub
pop
loop
clc
pop
test
add
mov
sti
inc
ds
cmp
push
mov
outsl
xor
in
sahf
into
jne
cmpsl
cli
mov
mov
or
inc
pop
iret
cli
in
sbb
cwtd
in
mov
mov
pop
push
and
iret
into
mov
sti
xchg
xorb
cmp
jns
fidivl
stos
aas
fwait
ljmp
push
mov
clc
push
and
daa
mov
in
push
cmp
xor
sbb
cmp
fildll
adc
push
jo
pop
push
sti
adc
dec
mov
and
xor
cli
fildll
dec
sub
xchg
ja
inc
inc
scas
xor
pusha
in
mov
cmpsb
icebp
cmp
sti
xchg
xor
xor
or
mov
fldenv
inc
push
cmp
stc
repz
leave
or
cmp
xor
mov
sahf
cmp
add
mov
dec
mov
pop
mov
sti
cmp
divb
ret
sarl
hlt
xor
pop
or
pcmpeqw
sub
es
add
fwait
pusha
in
out
jo
shll
das
inc
dec
sbb
add
clc
inc
cmpl
jge
jns
inc
stc
out
mov
out
cmp
push
fdivr
stc
and
testl
xorb
imul
repz
lahf
addl
sub
std
out
cmp
cmp
jmp
enter
mov
hlt
xor
adc
rorl
jle
push
xchg
inc
jle
outsl
mov
sub
xchg
mov
cmp
into
loopne
je
jno
inc
sub
lret
sti
inc
sahf
xchg
or
scas
pop
mov
fs
jmp
pop
push
lret
sbb
jns
sub
mov
btr
inc
dec
fbstp
mov
jmp
xchg
loopne
dec
repnz
lret
mov
stc
into
cmp
or
jge
out
pop
rolb
fldl
sbb
mov
es
das
mov
addl
out
je
jne
aam
rcr
sbb
push
add
leave
das
sti
daa
rorl
fcompl
xchg
push
jbe
jmp
lcall
stc
pop
out
mov
pop
or
lret
movsl
shrb
push
sti
test
outsl
loopne
sti
push
fucomp
push
mov
adc
sti
gs
psrlq
hlt
cmp
or
and
scas
jecxz
dec
out
adc
lahf
sbb
cltd
ljmp
pop
sti
mov
fdiv
nop
dec
push
jecxz
divl
pusha
mull
dec
mov
add
jecxz
fmull
idiv
out
insl
jnp
pop
xor
loopne
pop
js
xchg
insb
aas
or
xor
aas
dec
iret
mov
stos
dec
sti
push
sub
sti
lea
adc
arpl
out
pop
dec
adc
rorl
mov
and
cmp
fdiv
xchg
xor
or
sahf
out
std
jle
fildll
add
hlt
pushf
stos
es
fdivrs
adcb
leave
adc
jne
push
xchg
adc
sub
and
sar
mov
pop
xchg
pop
push
out
fidivrs
cltd
popf
jp
sti
push
test
xor
sti
das
dec
cli
fs
inc
or
sbb
push
dec
imul
cmpl
dec
sti
mov
shlb
pop
xchg
or
inc
dec
dec
jne
xchg
mov
test
and
dec
gs
in
mov
jle
stos
aam
mov
or
lock
dec
cli
push
imul
lods
inc
mov
cmc
sbb
stc
inc
mov
xchg
push
roll
mov
sti
jne
adcb
add
cld
dec
jno
push
mov
sub
push
sti
or
int
sti
in
stos
insb
pop
bound
ret
aaa
sti
mov
mov
and
sti
xchg
nop
xchg
mov
testl
lods
add
outsl
mov
xor
repnz
lret
adc
push
mov
mov
inc
icebp
dec
sbb
fwait
xchg
mov
mov
jne
lods
lods
cld
sub
cld
stc
push
push
movsl
xchg
pop
sti
sbb
dec
cmpsl
iret
call
arpl
mov
repnz
jp
int3
lahf
adc
fcoml
xchg
push
mov
aam
adc
bound
fninit
mov
mov
sbb
sti
test
fidivrl
sti
cmp
dec
pop
mov
scas
dec
mov
iret
cmpsl
add
mov
fdivrp
stos
lods
subl
dec
rclb
inc
cmp
xorb
insl
clc
xor
int
repnz
mov
ret
sti
xor
inc
in
lcall
cmp
das
cltd
adc
andl
and
push
pop
xchg
notb
mov
add
stc
stos
out
inc
sti
rcr
or
push
inc
ror
jecxz
filds
int3
cmpsb
stc
jmp
pop
sti
push
hlt
add
sahf
out
pop
cmp
mov
xchg
mov
inc
stc
adcl
inc
sti
jl
pop
cmp
outsb
sub
xor
cmp
and
je
push
pop
clc
and
lcall
cld
cmp
clc
xor
fsubrs
cmp
iret
test
dec
sti
dec
fiaddl
xor
pop
das
jns
popa
pushf
and
xor
inc
push
icebp
jnp
or
inc
and
cwtl
xlat
jne
mov
mov
xor
dec
fistps
in
scas
iret
data16
loope
lock
xchg
dec
das
ljmp
pop
cmp
inc
cmp
pop
mov
cs
pop
mov
in
lret
arpl
stc
outsl
cmpsb
sub
sti
stos
push
sub
fists
sti
xchg
ficoml
out
mov
jns
ret
mov
sti
dec
icebp
cld
sub
dec
into
idivl
clc
xlat
incb
js
loop
in
lock
out
and
or
decl
add
inc
mov
scas
fdivr
aad
mov
inc
sti
stc
cli
out
or
pop
sub
shl
jecxz
in
outsb
nop
fdivr
and
clc
push
lcall
shr
pop
xchg
lds
loop
mov
pop
outsl
jbe
mov
sti
movsb
cltd
cld
testl
sbb
pop
cmpsl
cltd
outsl
stc
out
stos
mov
add
push
out
sbb
pop
cli
add
mov
inc
pop
inc
pop
test
loopne
int3
icebp
dec
push
sub
xchg
pop
js
cmp
and
mov
pop
sti
add
jo
sti
lock
cs
dec
shll
sti
cmp
popa
in
jg
sti
pop
andl
mov
std
mov
or
jne
dec
inc
call
movsl
cs
jns
add
repz
mov
inc
rcll
iret
dec
cmp
and
mov
dec
xchg
sub
mov
cli
cmp
daa
sarl
fwait
cmp
mov
imul
mov
mov
mov
sbb
inc
lea
adc
test
lods
xlat
jne
stc
jnp
mov
shlb
inc
jae
out
or
sti
pop
push
movsb
inc
je
ljmp
jp
pusha
fcoml
lds
sti
daa
jl
xor
mov
pop
inc
fsub
cli
dec
pop
inc
sti
dec
shll
jne
lret
ret
xorl
and
scas
mov
jns
test
xor
sti
pop
fwait
xchg
adc
fisubrl
aas
sti
or
push
mov
xchg
in
xorl
sub
cwtl
test
lea
das
xchg
sti
lret
out
es
out
stc
ret
push
xor
dec
out
sub
mov
jnp
cmp
and
sti
mov
dec
jg
sub
in
ret
cmp
js
sti
xor
movsb
std
inc
xchg
mov
mov
cmp
js
pop
in
cmp
jo
ret
xchg
pavgw
clc
cmpsl
add
pop
mov
adc
aad
jecxz
clc
lods
movsl
xor
daa
mov
xchg
lds
mov
es
pop
les
sti
inc
fsubrl
inc
jne
repz
call
andl
mov
stos
and
mov
iret
out
jp
sub
jns
mov
sub
iret
add
xchg
adc
xor
sti
js
shr
push
out
push
sbbl
ret
push
push
lret
cld
cltd
add
push
pop
mov
loope
sbb
sti
fwait
and
mov
mull
dec
je
test
leave
or
or
adc
jo
inc
and
and
adc
push
fstps
cmc
sti
aam
xchg
mov
pusha
pop
out
jbe
pop
push
cwtl
push
sti
push
movsl
sbb
or
mov
inc
fs
jge
mov
sti
add
jg
sbb
mov
pop
cld
hlt
pop
sbb
pushl
cli
iret
mov
fwait
out
push
sti
mov
adc
mov
mov
dec
mov
add
movsl
stos
pop
jns
cmpsb
ret
sti
int3
cmp
xchg
sub
cmc
sbb
or
push
xlat
ret
fwait
loope
bound
mov
mull
das
sub
pop
arpl
xchg
and
mov
cs
inc
xor
pusha
cmp
js
out
adc
lea
test
out
add
push
inc
enter
push
cwtl
sub
sti
movzbw
push
movw
mov
pushf
pusha
pushl
ret
jmp
dec
push
lahf
cmp
lds
outsb
std
repz
sarb
sarb
mov
push
pop
push
mov
add
pop
mov
adc
orb
mov
aad
cmpsl
fidivs
std
sti
jmp
xor
lea
lods
mov
xchg
cmp
lods
mov
aaa
push
or
mov
adc
jl
add
or
repz
pop
lret
inc
lods
mov
mov
scas
jecxz
push
mov
clc
adc
push
outsl
js
sbb
jecxz
or
jmp
data16
mov
cwtl
loope
xchg
push
push
ficompl
pop
mov
loop
jmp
not
mov
bswap
lea
push
movl
call
add
add
add
rcrb
add
sbb
add
inc
adc
add
add
add
add
mov
sbb
mov
stc
lea
lea
lea
mov
call
lea
jne
call
xchg
fiadds
add
add
dec
aaa
insb
mov
int3
mov
mov
cmpsl
dec
stos
mov
pop
sbb
cwtl
popa
data16
call
addb
or
pop
adc
js
sub
call
add
add
push
stc
movw
add
mov
push
lea
jmp
add
cltd
cmp
mov
in
adc
push
mov
rclb
add
in
pop
movsb
jl
mov
fs
js
in
loope
jbe
lods
cmp
xor
dec
popf
push
adc
jge
pop
fs
xchg
sti
push
out
xchg
testb
mov
add
jmp
inc
add
cmpl
cld
mov
adc
ret
and
push
xor
ret
dec
dec
dec
dec
mov
jmp
mov
test
push
pop
xchg
bound
jne
orb
mov
cmp
mov
ja
imul
adc
jmp
adc
xor
loop
gs
jne
mov
dec
repz
js
pusha
dec
nop
out
lds
sbb
iret
sbb
lds
dec
fscale
repnz
pop
push
fmulp
mov
lea
pop
setb
mov
mov
jmp
bt
cmp
xor
movzbw
pop
xchg
pusha
push
mov
not
movzbw
mov
jmp
cmp
dec
cmp
lea
addb
and
push
cmp
xor
xor
mov
mov
jg
jns,pt
jecxz
data16
mov
cwtl
jecxz
out
out
push
add
jae,pt
jmp
leave
and
pop
jb
dec
cltd
outsb
ficoml
or
xchg
insb
cmp
mov
out
adc
test
mov
or
cmp
add
ret
push
pusha
jge
cltd
mov
add
idivl
or
aam
stos
ss
adc
mov
adc
jno
imulb
lods
mov
xchg
inc
inc
ljmp
mov
push
mov
jbe
sub
mov
movsb
sbb
fwait
jle
in
sub
sahf
sub
stc
nop
test
cmc
shr
std
mov
dec
dec
and
pop
push
pop
cmp
pop
aad
cmpsl
cmp
mov
mov
insb
adc
cmp
jmp
or
xchg
mov
loop
ret
cmpsl
mov
dec
in
bound
xchg
into
outsl
sub
setp
les
das
rcrl
mov
call
mov
mov
std
push
jg
jne
add
clc
jge
xchg
fucomp
mov
cmpsl
sub
in
repnz
pop
xor
aaa
cld
dec
test
insl
jae
push
sub
hlt
push
cli
jp
push
sbb
xor
ja
test
pop
inc
jl
push
mov
push
orl
imul
bnd
xor
add
sub
leave
xor
or
jmp
pushf
jmp
push
jmp
jmp
or
pop
mov
or
xor
mov
mov
and
pop
dec
xchg
push
fmuls
test
outsb
or
mov
adc
pop
pop
jb
das
loope
jb
sub
xchg
push
les
adcb
call
or
clc
dec
sti
inc
int3
jg
lods
lret
jns
dec
mov
adc
push
mov
pop
movsb
jno
mov
js
push
dec
cs
mov
aaa
push
jns
cli
testl
or
movsl
pushf
ljmp
roll
xor
out
fdivs
cmp
or
mov
cltd
and
pop
out
add
add
jmp
cs
push
fs
adc
pop
mov
cmp
cs
pop
mov
data16
mov
jmp
lea
jne
cmc
jmp
rcl
mov
pushl
push
pusha
ror
push
mov
neg
call
pusha
pusha
movl
movw
pushf
jmp
jmp
pushl
lea
jne
pushf
lea
call
push
lea
jmp
pushf
lea
jae
clc
sub
pushf
pushf
lea
call
pushf
lea
jae
cmc
clc
cmc
push
sub
mov
push
pusha
jmp
pushf
inc
aad
mov
lods
hlt
idivl
push
lcall
lret
pusha
xor
test
outsl
push
imul
dec
push
sub
sub
repnz
rorb
lret
push
pop
or
orl
stos
iret
lods
pop
outsb
in
dec
push
mov
outsl
mov
mov
sbbl
sahf
push
jmp
jmp
lea
ja
jmp
sub
add
adc
mov
jb
fbstp
cld
movsb
movsl
pop
sbb
sbb
push
jo
add
cmpsl
sub
mov
add
fbld
aaa
cmp
adc
jge
cmp
adc
test
sbb
out
push
movsb
les
sub
inc
or
and
inc
inc
xchg
lock
aam
stos
xorb
orl
enter
out
lret
imul
adcl
add
loop
int
and
int
mov
cltd
adc
mov
mov
adc
sbb
mov
repz
add
xchg
inc
pop
addr16
repnz
repz
fnsave
or
jmp
sbb
fisubrl
xchg
out
mov
pushl
repnz
push
sbb
sbb
sbb
xchg
sbb
aam
dec
sub
xchg
shlb
mov
pop
je
rcr
pop
test
pop
scas
dec
arpl
ror
addr16
mov
adc
push
inc
xchg
mov
sbb
loope
mov
ja
insl
adc
sti
stc
enter
pop
xor
scas
outsl
push
adc
fucomi
add
or
sti
in
dec
xchg
add
jl
aas
inc
ljmp
cmp
pop
mov
lcall
movsb
xchg
mov
insb
cmpsb
jmp
mov
add
clc
sub
cwtl
mov
or
into
ja
lret
pop
pop
dec
aas
hlt
mov
loopne
xchg
mov
loop
cmp
jnp
dec
pop
std
xchg
mov
pop
arpl
icebp
clc
dec
sub
aad
clc
cmpb
in
addr16
and
sub
push
pop
pop
aas
inc
addr16
pop
xchg
gs
jne
xchg
lahf
ljmp
inc
and
mov
add
push
pushw
popfw
mov
pusha
pushf
inc
call
inc
shl
xchg
sbb
not
btr
mov
jmp
movl
push
movl
pusha
lea
jmp
popl
mov
xchg
fucomp
das
adc
xlat
xchg
lcall
lcall
stos
lods
mov
push
daa
jbe
insb
adc
sbb
fmull
out
cs
lret
sbb
adc
mov
xchg
iret
or
aas
cmp
fucom
popa
leave
test
jge
jl
bound
mov
inc
out
pop
adc
movsl
fiadds
adc
fistpl
loop
pop
pushf
or
movb
pusha
push
lea
je
pushf
pusha
lea
jp
lea
call
pusha
call
sub
js
mov
outsb
imul
jge
das
jmp
push
lds
dec
mov
test
sbb
adc
sub
out
xor
mov
xchg
out
sub
push
and
lods
jecxz
repnz
jp
lods
push
fcoms
cmp
mov
pop
pop
add
or
lock
sub
and
pop
jmp
cmp
xor
stos
lret
call
pop
jp
out
push
rorb
incb
pop
nop
jp
lret
jmp
inc
and
lods
jmp
and
fs
jmp
pushf
pusha
pusha
lea
jne
lea
mov
push
movb
lea
jmp
setp
mov
call
call
sub
add
mov
mov
inc
xchg
loopne
sarl
nop
jecxz
nop
arpl
sarb
stc
add
jg
ret
dec
leave
adc
cmpsb
push
adc
std
or
flds
pop
mov
lcall
mov
adc
inc
mov
mov
insl
clc
xor
jmp
aaa
sarl
jp
out
fcomps
aaa
inc
pop
fs
cmpb
in
lods
into
nop
out
fdivrs
cmp
cmpsl
mov
jb
rcl
bound
sub
sbb
mov
jg
push
mov
or
fdivl
pop
pop
int
adc
lea
ja
shl
sub
add
shrd
xor
push
add
add
xor
bswap
mov
adc
mov
push
call
add
pushf
and
mov
sub
stc
clc
jmp
movl
rep
lea
mov
pushf
movw
pushl
push
lea
jmp
pop
push
jecxz
mov
mov
pop
jae
mov
jne
mov
sbb
out
pop
in
cmpsb
jbe
jnp
inc
int3
into
out
addb
lock
sub
push
push
adc
cmpsl
js
adc
xchg
pop
pusha
lds
fisubrl
mov
not
int
sbb
pushf
pusha
pusha
movl
jmp
mov
mov
pusha
mov
seto
pushf
jmp
add
cmc
pushl
cmc
pushl
xor
call
movl
pusha
movl
pushf
movl
lea
jmp
pusha
movb
stos
pusha
lea
jmp
movl
call
pushf
movl
pusha
pushl
pushf
movl
pushf
pushf
pushf
movb
lea
jmp
jmp
push
pushf
add
add
inc
jg
into
in
aaa
bound
add
adcb
adc
loopne
jo
xchg
push
mov
lcall
imul
je
pop
sub
les
stos
jb
mov
inc
pushf
or
cmpb
stos
mov
jo
sti
sub
mov
sub
jl
cmp
fcoml
daa
mov
pop
xchg
mov
mov
shlb
clc
decl
test
or
add
mov
stc
push
cmc
add
cmc
jmp
out
jle
inc
mov
nop
fwait
xchg
out
adc
push
pusha
mov
fwait
call
xchg
jmp
mov
lcall
jp
je
aad
out
lock
andb
jb
mov
inc
push
adc
sbb
pop
pop
push
xchg
in
and
and
aaa
adc
mov
stos
add
jmp
lea
jae
cmp
pushf
bt
add
pusha
mov
pusha
lea
jmp
pusha
mov
bswap
movzbw
lahf
movl
lea
lea
jbe
pusha
movb
lea
pusha
mov
movb
call
lea
not
pushl
popl
setae
jmp
mov
add
fcmovnu
repz
sti
ss
mov
mov
dec
inc
into
mov
sbb
jno
and
push
outsl
rcrl
popa
hlt
aaa
mov
movsb
xchg
mov
arpl
inc
into
mov
jp
lods
test
or
pop
es
xchg
mov
cld
test
xchg
mov
cmp
jmp
lcall
movd
mov
jns
xor
add
pop
inc
mov
push
push
pop
mov
pop
xor
lds
mov
pop
mov
mov
icebp
jno
pop
aad
addl
scas
xor
add
fdivl
fsubs
shrl
js
dec
mov
cmpl
in
xor
xchg
pop
aad
insl
mov
adc
or
xor
pcmpgtd
scas
dec
mov
xor
mov
outsb
sub
in
pop
xchg
addr16
xchg
lods
mov
mov
jne
test
push
jo
or
addl
popf
xor
test
xchg
es
ret
divl
xor
xor
push
add
xor
jae
sub
movsl
out
and
mov
inc
rorl
lea
inc
sub
enter
jo
fs
movsb
pop
orb
test
or
outsl
or
mov
push
xchg
or
mov
pop
mov
jns
xor
jle
inc
mov
dec
cmp
incl
fs
jne
test
movzbl
shl
mov
pushf
cmp
or
pusha
lea
je
movzbw
lea
movsbl
lea
bswap
movzwl
mov
not
lea
lea
pusha
jmp
jmp
les
nop
jne
shl
sub
sahf
mov
prefetch
cs
jl
add
and
inc
orb
not
scas
sarl
insb
jno
loopne
hlt
les
push
roll
and
cmp
test
mov
dec
fstl
add
addr16
or
or
ret
jg
jo,pn
aam
xchg
and
or
mov
js
es
add
xor
add
xchg
jmp
lea
pusha
movb
pushl
popl
movsbw
mov
pushf
movl
movsbw
lea
lea
jne
pusha
movl
jmp
jmp
mov
mov
mov
pop
mov
rclb
mov
repnz
pop
cmp
dec
jb
mov
fcoml
fisubs
pop
lods
push
lea
xor
add
adc
jmp
mov
add
orb
das
pusha
or
lahf
mov
mov
out
std
sbb
lods
rcll
mov
inc
fwait
adc
xor
sahf
int
push
adc
dec
push
add
orb
mov
sbb
xor
les
fnstenv
or
ja
fistpl
cmp
sub
push
mov
pop
fnstenv
xor
push
cmc
mov
sub
pusha
clc
cmp
pushf
jmp
nop
ret
sub
jbe
pop
pop
outsl
xchg
sar
daa
ss
jle
cmpsl
jl
mov
iret
mov
dec
out
pop
dec
xchg
addr16
push
push
dec
test
negl
int
xor
aam
mov
mov
push
xor
sti
xorl
enter
jbe
push
rcl
loopne
lds
sbb
repnz
in
dec
inc
xor
jb
xchg
xlat
pop
rcrl
shlb
push
sub
mov
pushl
popl
pushf
bt
cmp
call
neg
mov
cmc
bt
jmp
sub
add
cmp
mov
ficomps
mov
dec
jae
jno
push
adc
sbb
repz
aaa
push
mov
and
mov
int
xchg
enter
cmp
fistpl
ds
hlt
add
push
inc
jle
sub
mov
data16
and
mov
mov
popl
cli
repz
adc
xchg
hlt
inc
cmp
mov
shl
stc
call
pushf
mov
jmp
push
push
lea
ja
call
pusha
pushf
lea
jae
cmc
jmp
call
std
sub
jmp
je
shl
add
insl
xlat
xor
sub
fisttps
mov
stc
jae
lret
incl
lea
std
jp
xor
jmp
xlat
movsl
ret
pop
imul
rorl
sub
les
or
lret
sub
sti
pop
dec
arpl
cmp
nop
sti
bound
sahf
sbb
in
lret
rcrl
fisttpl
jge
mov
pusha
pushl
jmp
popf
cpuid
nop
jmp
lcall
xor
loopne
aad
push
xchg
aaa
push
xchg
subb
pop
cltd
mov
xor
adc
xor
lcall
out
popf
or
subb
test
sub
mov
pop
sub
or
mov
xlat
sbb
pusha
xor
andb
cli
shr
arpl
aad
push
adc
and
and
lret
mov
xlat
icebp
fidivrl
mov
dec
int3
ror
jg
lret
loopne
inc
mov
aas
je
ss
repnz
cltd
sub
rcrl
mov
sbb
movsbl
lea
call
call
pushl
cmc
movb
add
push
lea
jmp
cmp
call
pusha
mov
push
lea
ja
ror
sub
inc
add
btr
push
inc
neg
mov
cmc
xor
mov
call
bt
push
pusha
add
sub
stc
pushf
or
push
pusha
jmp
push
mov
call
push
imul
bt
cmc
mov
add
pusha
pusha
lea
jmp
call
call
pushl
lea
je
call
test
mov
and
add
mov
stc
clc
lea
jne
clc
repnz
push
lea
jne
setb
push
lahf
movb
lahf
movsbw
mov
sets
lea
pushf
movl
push
pushf
mov
mov
pusha
pushl
ret
data16
push
mov
push
insl
cmpsb
std
decb
cmc
clc
pop
addr16
movsl
jb
repnz
fcomp
das
push
fwait
test
iret
fmulp
push
cmp
pop
js
add
mov
test
cmpl
jg
cmp
or
rolb
scas
out
out
call
aad
js
addr16
addr16
pop
in
rcll
push
sub
dec
movsb
pop
mov
lret
inc
xchg
jp
je
fbld
sbb
jp
lods
mov
pop
inc
inc
jnp
mov
js
mov
and
bound
jae
adc
call
push
test
adcb
stc
jmp
mov
movb
lea
jbe
bts
pusha
sub
neg
movsbw
xor
mov
lea
shrd
xadd
movzbw
mov
rcl
add
lea
neg
and
btc
shr
clc
mov
push
rol
sub
add
movzbl
pop
mov
call
stos
lea
out
or
xor
lods
xor
insl
lea
scas
lea
scas
lea
mov
dec
xor
xor
or
dec
xor
movl
mov
mov
pusha
movl
movb
pushf
lea
jmp
movw
adc
push
mov
pushl
ret
je
bswap
xchg
jmp
clc
add
call
inc
add
push
mov
div
or
sub
add
roll
sti
push
out
jo
inc
fmuls
pop
rolb
xchg
mov
dec
iret
xorb
outsb
cmpsl
out
into
sti
pop
or
std
sub
pop
orb
or
xchg
xlat
push
xor
lcall
sbb
bt
mov
clc
push
bt
cmp
add
jmp
lea
call
pushf
pushl
pusha
jmp
push
movl
jmp
pushf
pusha
sub
mov
push
jmp
pusha
movw
pushf
lea
call
call
pushl
popl
pushf
pusha
pushl
ret
add
mov
sti
dec
imul
push
xchg
mov
dec
sub
pop
sbb
sub
jnp
mov
in
scas
daa
sub
jae
sarl
dec
mov
mov
rorl
or
jae
lds
inc
cmc
cmp
fucom
mul
divb
adc
jne
out
mov
or
xlat
mov
push
add
mov
popa
mov
sti
jne
sub
repnz
sub
lahf
outsl
lods
call
out
jnp
adc
pop
and
mov
lea
call
cmc
jmp
mov
add
dec
pusha
jne
or
orl
es
flds
jl
jo
sub
call
inc
ret
in
pop
and
jnp
cmp
xchg
movsl
mov
dec
push
aaa
notl
leave
push
xchg
hlt
ds
mov
repnz
push
clc
adc
test
adc
mov
inc
shrb
loopne
fcompl
addr16
push
sbb
fisubl
fsubl
or
insl
mov
daa
stos
mov
lcall
xor
cmp
mov
adc
or
pop
adc
jno
sbb
test
mov
lea
stos
cmp
sub
pop
push
mov
mov
imull
inc
mov
dec
mov
sbb
aam
and
mov
call
test
insl
push
jno
add
lods
cmp
dec
mov
sbb
lahf
lea
push
xchg
mov
negb
outsb
lea
call
call
cmp
cmpb
push
pushl
lea
jne
xor
sar
rol
das
sub
bt
rol
bsr
mov
setno
mov
shl
rcl
add
bt
sar
adc
shl
mov
pusha
pushl
test
pushf
pushf
call
jmp
pushl
popl
pushf
pushf
mov
movl
pushl
ret
pushf
lea
ja
call
add
push
pusha
push
lea
jmp
jmp
jo
aaa
push
mov
push
xchg
mov
push
sub
inc
jnp
mov
popl
mov
mov
mov
jnp
loop
jnp
pop
xchg
lea
aad
in
or
push
adc
lret
mov
mov
cmpsb
cmc
push
popf
inc
mov
fdivr
pop
outsb
mov
add
test
inc
cltd
mov
js
subb
xor
es
rorb
fimuls
fwait
addb
pop
bnd
subl
and
push
ret
test
daa
in
push
mov
cld
leave
push
mov
or
cmp
arpl
rcr
mov
aad
faddp
ss
icebp
dec
cltd
mov
bnd
out
xor
adc
idivb
nop
dec
rcr
nop
mov
pop
mov
pop
aad
xchg
dec
mov
imul
pop
and
push
add
xor
dec
pop
lahf
cmpsb
mov
out
pop
push
cmp
inc
mov
adc
or
cmp
jno
cmp
outsl
mov
xor
mov
fmulp
lret
dec
push
insl
pop
jle
shll
and
jae
pop
mov
lds
repz
push
pop
out
repnz
add
enter
cmp
push
loopne
mov
imul
cmpsl
push
mov
push
adc
outsl
mov
flds
push
sub
or
cltd
and
aaa
push
je
adc
std
dec
leave
add
in
setp
cmp
ret
fdiv
js
inc
push
or
mov
subb
out
out
jno
sub
arpl
mov
ja
ja
xchg
test
nop
xchg
lahf
or
movsl
outsb
sarl
loopne
xchg
sub
stos
mov
fnsave
and
outsl
inc
lea
adc
jmp
inc
sbb
or
push
inc
push
or
push
in
cmpsl
inc
mov
or
repz
out
dec
fcoml
outsb
in
mov
jg
adc
pusha
and
add
incl
add
inc
jne
arpl
outsb
inc
popa
insb
insb
add
xchg
push
mov
ror
icebp
lock
cmp
jnp
jnp
push
into
jecxz
rcrl
aam
or
sub
incb
arpl
es
lods
icebp
imul
je
or
jmp
or
int3
icebp
push
mov
xor
mov
xchg
in
lock
inc
sti
cld
jne
jmp
mov
cmc
cmp
jmp
mov
pushf
mov
pushl
ret
pop
xchg
negl
add
dec
fwait
sahf
fsubr
clc
and
fsub
dec
dec
inc
jmp
or
call
inc
mov
add
xchg
test
mov
int
movsl
out
jg
sti
jo
sbb
xchg
cmpsb
insb
add
call
xchg
negb
add
mov
pop
pop
bound
xchg
mov
inc
mov
rorb
sbb
outsb
jns
xor
mov
fimull
adc
loopne
pop
rcrb
out
lods
insl
outsl
mov
xchg
popa
icebp
adc
sbb
ja
je
inc
cld
mov
dec
jge
adc
ret
int
stos
ljmp
les
lret
jnp
divl
call
pushf
pusha
jmp
pusha
lea
call
jmp
sub
loope
mov
xchg
lods
lods
popa
push
dec
mov
cmpsl
dec
jl
pop
cmp
pop
sbb
rorb
sub
push
cmp
adcl
and
or
out
jmp
inc
andl
sub
pop
out
ja
pusha
ja
rorl
psubd
scas
lods
or
xchg
jl
jle
sub
repnz
add
xor
fdivl
jbe
or
hlt
mov
adc
adc
outsb
test
add
xchg
call
jmp
and
stc
movw
pusha
push
add
pushf
lea
jmp
divb
outsl
inc
imul
and
pop
or
and
and
mov
movsl
stos
in
int3
add
ds
lods
cmp
xchg
and
outsb
dec
xchg
cmp
orl
test
orb
adc
gs
xchg
push
ficoms
in
lds
enter
adc
pop
dec
aas
mov
cmc
lcall
sti
inc
add
xchg
xor
dec
xchg
push
mov
jmp
jg
pop
pop
mov
mov
pop
cmp
push
addr16
test
lret
js
out
mov
dec
into
decl
lret
pop
lret
aad
outsl
push
mov
pop
lret
mov
xchg
pop
dec
pop
cwtl
jmp
fs
lcall
bound
mov
mov
pushf
pushf
inc
movb
inc
movw
movb
push
lea
jmp
movsbw
mov
call
lea
call
push
pushf
test
cmp
jmp
xor
pop
mov
mov
sub
xchg
fucom
add
mov
mov
dec
rorb
push
pop
cmpl
pop
nop
push
push
add
cli
inc
sbb
pop
adc
ror
aaa
cwtl
or
daa
lods
push
popf
jecxz
mov
pusha
push
movl
pushl
movw
pushf
pushf
lea
jmp
movb
mov
cwtl
cwtl
movsbw
mov
lea
lea
jmp
pop
sub
lahf
mov
mov
andb
jge
pop
mov
lahf
aaa
inc
stos
ds
add
loopne
cmp
xchg
xchg
mov
mov
xor
push
aad
jo
add
jns
sbb
fbld
xorb
enter
sub
sahf
inc
insl
mov
mov
lret
push
sbb
cltd
pop
fstsw
xchg
push
cmc
push
movsl
enter
test
pop
xor
sub
dec
loopne
sbb
add
jmp
inc
das
cmp
mov
sbb
jb
mov
or
icebp
sub
xchg
inc
jo
adc
into
or
pop
scas
sub
xor
cwtl
aas
scas
test
push
jmp
adc
dec
call
cmp
jle
push
lods
mov
mov
test
into
sub
cmpsl
aas
scas
lods
mov
xchg
mov
sbb
fildl
push
cmp
shl
sbb
adc
or
lcall
stc
out
pop
push
xchg
adc
mov
test
mov
pop
int
mov
inc
shl
stos
sbb
mov
ljmp
mov
xor
mov
imul
aaa
or
jo
xchg
stos
xor
jnp
lds
mov
ret
jl
adc
xor
ds
mov
ss
sti
inc
lock
ja
sbb
sti
jo
insb
pop
lods
arpl
jge
sub
rorl
fcmovnbe
in
imul
or
sub
sahf
repz
push
xor
xor
fwait
or
fildl
mov
fldenv
or
rcll
pushl
mov
jp
fsubrs
fsub
lods
and
xor
xor
dec
jp
jp
lahf
xlat
fildl
fidivl
lcall
daa
fmul
and
sub
and
sbb
add
in
jecxz
mov
mov
cmp
add
xchg
fdivrp
notb
ljmp
jnp
and
clc
into
jl
and
pushl
aam
add
or
js
cmp
shll
or
adc
sub
mov
xlat
push
lock
add
cmp
xchg
add
cmp
jp
dec
dec
fwait
cmp
scas
ret
inc
mov
xor
mov
xchg
sbb
in
sti
aam
add
sbb
pusha
test
stos
jo
movsl
insb
fdiv
hlt
cmp
shrb
imul
rcrl
test
dec
adc
mov
or
call
mov
fisttpl
jae
jnp
cmp
mov
adc
aad
sub
jae
sbb
push
mov
popa
xlat
leave
jae
mov
cli
xlat
sbb
scas
pop
dec
hlt
or
mov
cwtl
mov
sbb
aam
addr16
scas
cli
ja
jae
fiaddl
mov
xlat
and
mov
stos
adc
scas
fstpt
inc
sbb
xchg
stc
cmpb
ja
mov
xor
or
cmp
lret
mov
or
or
leave
xor
sbb
cmp
lret
int
fsubr
sbb
imul
adc
xlat
or
aad
or
loop
repnz
icebp
iret
jne
lret
push
and
cwtl
loopne
sbb
fisttpl
stc
or
or
stc
sbb
fidivl
jnp
cmpsl
jp
cmc
xchg
hlt
addr16
or
cmp
jne
aam
cmp
add
cmp
sbb
cld
jecxz
pop
in
fnstsw
mov
mov
mul
mov
cwtl
xlat
sub
fsubrp
imul
subl
sub
sbb
jo
jmp
mov
out
jl
adc
int
icebp
arpl
in
mov
and
mov
mov
sbb
sbb
or
jp
icebp
pop
push
add
in
ja
call
je
xor
stos
scas
fcomps
stos
jmp
and
stc
mov
repnz
mov
fdivs
mov
in
push
ja
int
ret
imul
int3
mov
dec
ss
cmp
inc
scas
pop
adc
jae
mov
xor
push
jp
dec
arpl
mov
stos
int
fwait
inc
lea
adc
xlat
cwtl
mov
fsubrs
imul
cli
inc
jmp
ja
fcmovbe
push
clc
fpatan
xor
cmp
inc
shlb
jmp
xlat
jp
stos
or
fldt
fwait
adc
out
sbb
sbb
push
hlt
sub
xlat
js
enter
fnstcw
xor
xlat
dec
sub
lods
ja
xlat
fcoms
sub
js
xor
jmp
jae
cmp
sbb
jns
adc
arpl
cmpsl
add
enter
jae
or
cmp
mov
mov
sub
or
or
lahf
jnp
cwtl
xor
jg
cmpsb
xchg
xlat
leave
jae
jnp
hlt
add
fnstenv
jecxz
mov
xor
ss
stos
xlat
cmp
lods
ja
adc
mov
dec
xlat
cmp
clc
xchg
mov
push
jns
xlat
or
pop
cmp
jae
or
or
mov
stc
sub
stc
jnp
stc
sub
lahf
stc
test
stc
mov
sbb
lret
or
enter
fsts
lock
mov
mov
call
popa
or
out
jo
or
jnp
sbb
test
call
lcall
xor
fcmovne
or
mov
dec
ja
pop
mov
mov
pop
xor
fisubrl
imul
cmp
clc
cwtl
dec
loope
adc
ja
sbb
adc
mov
jns
shrl
cwtl
fidivl
cmp
sub
iret
mov
jae
cltd
sbbl
jmp
ss
sar
sbb
xor
fcmovbe
xchg
lcall
pop
push
mov
ja
int3
pop
cmp
outsl
jae
sub
imul
xchg
sbb
pop
mov
add
pop
cld
leave
ja
mov
mov
mov
jg
outsl
cltd
cmp
mov
xchg
cmp
xor
mov
jmp
mov
cli
xchg
xor
andl
sub
cmp
mov
xchg
pop
xor
push
cwtl
fisubrl
repz
fnstcw
or
mov
and
jg
fwait
outsl
dec
ss
inc
xchg
mov
pop
adc
out
xor
pop
ss
sbb
or
or
cld
sub
mov
mov
mov
xor
fcoms
ja
int3
pop
cmp
mov
loope
fildll
dec
test
pop
jmp
mov
mov
or
fcomp
pop
xor
sbb
ficompl
cwtl
mov
sbb
pop
jae
jnp
dec
or
aad
xor
ss
or
mov
sbb
scas
ss
jg
mov
sbb
dec
or
fwait
icebp
mov
cmpsb
inc
leave
mov
pop
shrl
mov
es
sub
popa
fisubrl
pop
cmp
push
or
pop
pushf
test
ficompl
push
mov
pop
mov
stos
cld
or
imul
jns
inc
mov
cmpl
mov
stos
jmp
and
inc
js
lret
fistpll
testl
mov
sbb
mov
sbb
cwtl
js
fisubrl
cmp
push
sub
dec
cltd
mov
cmp
divl
pop
test
dec
pushf
sub
sub
ljmp
scas
cli
xchg
mov
pop
test
popl
cmp
sub
iret
ja
lock
inc
lock
sub
dec
mov
fdivs
add
mov
fwait
mov
sbb
test
repnz
hlt
addr16
lret
or
in
fidivrl
sub
dec
lock
lock
lock
mov
dec
mov
in
mov
jecxz
leave
faddl
aas
mov
pop
cmp
lahf
jb
ljmp
lock
loope
out
mov
shl
repz
test
mov
and
dec
scas
repz
dec
sar
jno
sbb
jns
or
dec
sbbl
sbb
test
test
sbbl
aad
in
and
negl
les
mov
add
mov
cmp
lcall
cmp
and
icebp
mov
fdivrs
sarb
popf
pushl
fcompl
xor
inc
fwait
inc
fwait
cmp
fwait
adc
idivb
test
jecxz
jecxz
xlat
dec
lcall
pop
in
shlb
inc
icebp
les
adc
jp
xchg
jp
movsl
jmp
scas
jp
movsl
xor
lret
xchg
sub
fldt
or
hlt
mov
pusha
ljmp
xchg
sbb
movsl
sahf
pusha
aam
mov
inc
sub
sbb
cli
or
cli
enter
jp
push
test
fnstcw
mov
sbb
leave
jno
sbb
add
mov
or
stc
cmpl
mov
sbb
shrl
mov
ret
inc
xlat
cld
test
cs
ret
xchg
fistpl
je
rolb
xchg
dec
call
call
adc
add
dec
pop
mov
je
cmp
and
cwtl
mov
pop
jmp
mov
xlat
cmpsl
dec
adc
mov
jno
je
push
dec
sub
ja
or
sti
or
push
fdivs
ret
ljmp
sbb
push
shlb
loope
jg
sub
jl
testl
cmp
jae
fs
cmp
mov
stc
jno
sub
stc
std
insb
pop
fs
enter
les
push
cmp
mov
and
lret
lods
xchg
mov
ljmp
outsl
mov
add
jmp
dec
fldl
mov
add
xlat
pusha
mov
test
and
scas
jmp
icebp
cmp
cwtl
dec
mov
test
ret
insb
add
jl
sub
jnp
lahf
sbb
rclb
arpl
clc
ljmp
push
mov
push
dec
cmp
jmp
push
add
mov
sbb
mov
add
cltd
dec
sarl
hlt
ret
arpl
mov
imull
mov
stos
xchg
jns
cmp
jnp
dec
shrl
adc
lret
push
sbb
idiv
xchg
fsubl
push
sbb
xor
adc
js
cs
push
fwait
test
je
jo
jb
arpl
fs
cmp
mov
test
mov
sbb
dec
adc
sti
orb
push
aam
cmp
mov
mov
add
inc
dec
sub
lods
hlt
or
jns
push
mov
xchg
inc
jmp
aam
js
dec
psubq
int3
aad
jmp
dec
sbb
jae
fisttpl
push
push
lcall
sub
jg
loop
xchg
jnp
outsl
lods
scas
in
insb
mov
enter
jecxz
je
ret
and
push
xchg
fwait
cmp
fcoml
sbb
lea
dec
ja
xlat
sub
sub
cmp
std
sbb
inc
sbb
cltd
sarb
repz
pop
sub
or
cmp
inc
sub
js
fs
fdivrs
je
dec
pop
aam
jnp
call
jnp
adc
xor
loopne
jmp
add
jo
push
push
fwait
sbb
xor
movsb
lret
stos
mov
jne
fisubrl
sbb
imul
mov
ja
mov
mov
stc
or
cmp
cmp
sbb
lret
xorl
popa
mov
xchg
ss
fidivrl
aad
mov
out
out
jmp
xchg
push
sub
mov
fldt
loop
push
iret
mov
xorl
call
sbb
or
aad
xor
mov
sbb
mov
test
fnop
push
mov
stos
mov
shr
adc
imul
xor
ret
sti
pop
sub
cmp
inc
xor
mov
jo
test
cmpsl
mov
xor
dec
arpl
test
jne
dec
inc
ja
fidivl
xor
pop
shlb
sub
jmp
or
jbe
xchg
jnp
sbb
je
add
mov
js
sti
jo
cmp
pop
push
imul
jo
shll
sbb
jp
inc
push
out
jne
pop
push
inc
sbb
fimuls
sub
xchg
int
js
out
pop
dec
ret
pop
in
call
dec
inc
int
and
je
dec
lock
dec
rcrb
jp
sub
adc
dec
inc
sarl
fucomp
flds
clc
jmp
lret
subl
mov
xlat
jl
mov
cmp
sarb
cmc
pop
push
in
loopne
push
insb
sti
pop
in
enter
sub
pop
xchg
rclb
xchg
or
mov
jg
add
add
adc
dec
jo
dec
xor
and
andb
or
jecxz
lods
pop
dec
sbbb
adc
fs
mov
in
enter
cmp
push
mov
pop
push
mov
fsts
aad
inc
ret
cmc
js
xor
stos
imul
mov
fwait
pusha
fbstp
jmp
jns
shl
dec
cmp
clc
idivl
imul
xor
pushf
incl
call
inc
add
mov
mov
cmp
ds
inc
scas
mov
push
sbb
sbb
dec
fstpt
ror
ret
mov
mov
mov
xor
adc
adc
push
inc
jo
cltd
int
fsubrs
fwait
xlat
ds
aad
aas
lds
mov
or
pop
cmp
test
pop
popf
fcompl
xchg
xchg
aam
dec
xchg
insb
cwtl
jae
push
sti
fisttpl
loopne
fcompl
les
sbb
cmp
cmp
adc
adc
dec
mov
pop
js
insb
mov
lret
inc
or
adc
sbb
push
pop
cmpb
jae
lock
lret
leave
pop
mov
pop
sub
add
inc
jae
pop
test
fnstsw
or
fldt
push
mov
fld
mov
in
in
fcomi
dec
scas
add
rcll
pop
xor
xchg
mov
sub
xchg
and
fsubrs
push
js
fldl
les
mov
dec
dec
call
test
inc
adc
sub
fsubrl
mov
lods
test
arpl
or
inc
jae
mov
sti
inc
pop
stc
jnp
sub
ss
je
push
fmull
jns
add
or
test
add
mov
dec
mov
mov
mov
in
cmp
cmpl
inc
sbb
jnp
lcall
inc
xchg
call
mov
cwtl
mov
push
and
pop
int
sub
ss
and
call
sarb
js
xor
or
xor
pusha
imul
out
dec
sbb
mov
repz
fnstsw
sub
stos
push
icebp
fcomps
xor
scas
shl
in
lock
cmp
stc
aad
icebp
or
xor
in
xor
loopne
and
outsl
mov
in
pusha
icebp
pop
xchg
push
xchg
test
lahf
xchg
xor
push
lcall
cwtl
mov
enter
int3
sarl
mov
xor
xor
mov
mov
sub
in
cmp
loopne
dec
pop
jnp
jo
pop
imul
cmpsb
int3
sub
mov
push
lret
out
repz
in
sbb
hlt
sbb
lock
in
std
mov
mov
mov
pop
shl
fmul
in
fiaddl
inc
imul
push
xor
sbb
mov
stc
mov
or
dec
loopne
and
pop
sub
mov
mov
leave
jnp
cmp
out
loopne
adc
lret
int
fisttpll
mov
add
dec
xchg
sbb
fincstp
mov
or
or
enter
fwait
in
xchg
cmc
add
call
pop
addr16
mov
xor
cmpsl
xchg
pop
or
jmp
fcmovu
jmp
mov
shlb
dec
xchg
imul
xchg
pop
sub
call
or
adc
mov
dec
mov
sbb
ljmp
push
jo
jae
or
cmp
fstl
jnp
push
xchg
loopne
jecxz
mov
mov
and
mov
jp
push
sbb
scas
mov
mov
cmp
sub
jo
cmp
testl
lcall
orl
dec
imul
mov
inc
sub
mov
dec
xchg
jnp
cld
repz
jl
enter
fs
xchg
pop
test
xchg
test
gs
add
push
inc
sub
add
lcall
jae
outsl
and
mov
cwtl
inc
adc
int
out
sbb
call
jnp
cmp
push
cmp
cmp
pop
add
ret
inc
jecxz
mov
mov
push
stc
mov
bound
adc
fdivrs
fcomp
mov
sti
mov
imul
cmp
jbe
fldt
outsb
add
pusha
cmp
xchg
cmp
add
fistpl
push
andb
and
jne
cmp
mov
fistpl
fwait
jnp
lcall
or
fisttpl
cltd
sbb
mov
in
sub
pop
dec
jp
mov
sub
cmp
nop
pop
push
push
fwait
fwait
stos
push
cmp
clc
enter
inc
or
xchg
push
pop
ljmp
in
fcmovnu
imul
in
pop
in
cmp
pop
mov
loop
jmp
jbe
ficompl
dec
shlb
sbb
xchg
inc
pop
sub
push
fisttpl
pop
jp
push
fisttpl
add
js
dec
sub
push
push
sbb
ljmp
push
cmp
mov
push
cmc
jp
mov
xor
leave
add
mov
mov
pop
push
fsubrs
pop
sub
je
mov
jp
cmp
jb
dec
cmp
sub
aam
adc
fidivl
cmp
fstpt
pop
push
call
ret
cmc
jp
test
mov
mov
test
dec
cmpsb
btr
mov
cli
pop
push
sti
or
pop
test
jmp
push
leave
xchg
scas
hlt
dec
pop
js
sbb
adc
jne
xor
xor
adc
cmp
test
jae
sub
ss
xchg
push
push
fldt
adcb
inc
stos
push
fsts
inc
mov
jmp
cli
inc
jb
xor
lcall
inc
jbe
mov
cmc
push
add
fsts
jnp
outsb
sub
mov
sbb
jmp
mov
xor
cmpl
arpl
jmp
cltd
sar
sbb
mov
loop
sub
push
adc
jb
aam
sub
sub
subb
les
sub
sub
fucomi
stc
jb
xchg
inc
mov
cmp
pop
fwait
mov
dec
cmp
mov
sbb
and
cmp
js
pop
ret
and
jnp
adc
mov
in
flds
dec
js
fadds
mov
pop
add
testb
sub
les
pop
pop
mov
push
sub
sbb
jae
and
jnp
imul
cmp
pusha
cmp
shrb
cmp
dec
fistpl
xor
xor
inc
imul
dec
sbb
mov
fiaddl
jns
icebp
xor
adc
push
aam
mov
ret
mov
aad
insl
enter
cli
mov
or
jb
mov
sub
mull
mov
fisttpl
outsl
sahf
jecxz
sbb
lods
xor
sahf
insb
out
fstp
sahf
clc
pop
adc
out
sbb
sub
adc
icebp
repz
int
icebp
lret
jecxz
sbb
xor
or
cmpsb
sar
sub
fcmovnu
sbb
out
pop
stc
inc
jg
or
stc
movb
sub
insb
mov
jp
ds
xlat
jp
sbb
sti
daa
cmp
adc
sub
jmp
outsl
inc
dec
out
xor
mov
xor
insl
iret
or
sbb
int
xor
or
push
icebp
loope
in
sub
stc
push
or
cwtl
pavgw
test
add
int
incl
pusha
stc
popf
cmc
and
xor
sub
rcrl
jecxz
loope
imul
pushf
mov
sub
push
xor
popa
mov
sahf
mov
test
stos
sub
or
pushf
out
std
xchg
xor
jmp
push
into
in
pushf
std
push
and
pop
stc
in
loope
adc
outsl
push
sub
xor
or
inc
sbb
mov
stc
fwait
std
loope
sbb
adc
popa
jp
fsubrs
lcall
aas
xor
cmp
add
sub
popf
ret
mov
stc
add
imul
les
loope
icebp
gs
int
push
jns
roll
jge
pop
sub
cwtl
jg
out
roll
or
sub
sbb
sub
xlat
not
add
and
int
rclb
popa
add
aad
repnz
loopne,pn
jecxz
out
hlt
rorl
mov
sbb
pushf
mov
sbb
inc
loope
xchg
jp
in
cs
cmp
mov
mov
icebp
mov
out
std
sub
push
imull
sbb
stc
push
cmp
pop
xor
xlat
mov
cmpsl
filds
jmp
and
mov
mov
pop
int
cli
cs
adc
outsb
mov
push
sub
insb
sarl
sub
mov
and
pop
sub
int
stc
dec
push
jae
xor
and
out
cmp
loope
xchg
nop
ret
in
sub
mov
cmp
cmp
pop
jmp
in
pop
js
mov
icebp
jmp
rcll
in
cwtl
frstpm(287
push
xchg
mov
lods
popa
push
push
or
out
out
sbb
adcb
dec
or
ja
cmpsl
dec
mov
xor
adc
adc
xor
movsb
popa
add
out
and
or
cmp
sbb
jg
and
cmpsb
adc
xlat
rcll
sbb
sub
stos
xchg
test
sahf
xlat
pop
ror
adc
push
or
sbb
sbb
mov
out
and
int
jns
push
popf
pop
pop
iret
inc
jecxz
xchg
mull
fistpl
or
int3
push
leavew
fidivrl
xchg
jno
mov
jne
dec
add
fildll
and
movsb
or
or
sub
cli
es
mov
sahf
push
roll
les
add
jmp
jb
mov
inc
movl
icebp
test
mov
neg
add
sbb
loope
not
xor
dec
inc
cmp
shll
cs
jmp
pop
sbb
stos
mov
jp
inc
ret
and
lret
loope
pop
dec
lret
or
adc
lret
aad
xchg
std
gs
neg
ljmp
inc
int
lea
iret
mov
mov
lock
add
insl
adc
jl
xlat
hlt
push
fisubl
mov
lods
lret
enter
scas
push
add
xlat
nop
gs
mov
lds
adc
pop
fcmovbe
adc
sbb
or
mov
scas
add
adc
sub
add
jb
sbb
xorl
xor
xchg
xor
or
psraw
mov
cmp
js
pop
mov
repz
fcom
dec
inc
fildll
pop
mov
or
and
sub
out
cltd
test
repz
xor
or
loope
rcrb
adc
aam
loop
jecxz
loope,pt
int
cmp
stc
jb
sub
cltd
xor
dec
popa
mov
addr16
mov
and
shrl
fdivs
sbb
int
and
mov
rcrl
adc
mov
pusha
sbb
lds
aad
mov
popa
imul
and
mov
pop
add
fisubl
jae
xlat
inc
pop
pushf
fiaddl
idivb
int3
scas
mov
push
lock
pushf
repz
xchg
and
sbb
xor
cmp
or
sbb
jcxz
stos
jmp
or
addr16
popa
xlat
adc
pop
cld
xor
dec
repz
xor
xor
jmp
roll
andb
pushf
sti
pop
or
jmp
push
es
les
adc
sbb
hlt
jmp
adc
jle
ds
std
xor
adc
xchg
lods
rcr
or
pop
stos
and
je
hlt
jo
int
cmpsb
jecxz
mov
sbb
sbb
sarb
sub
fldt
pop
int
and
sub
repz
sub
xor
push
out
aad
out
jecxz
stos
push
test
and
inc
or
sbb
or
stos
xor
aam
es
jo
add
lods
xlat
sub
pop
jmp
xchg
jne
sbb
and
mov
inc
sbb
int
xchg
ds
jns
xor
inc
leave
stos
xchg
push
mov
cs
aad
sbb
popa
xlat
push
xor
outsl
mov
xchg
cs
mov
loope
mov
add
cmp
dec
adc
int
int
inc
sti
repnz
je
popa
mov
repz
fnstsw
pushf
push
add
stc
jmp
cmpsb
mov
jmp
insl
jecxz
and
add
fmuls
sti
popa
ljmp
dec
add
adc
jnp
hlt
std
loope
sahf
mov
ret
cmp
xchg
fwait
int3
andb
lcall
test
sbb
jmp
fisubs
push
xor
mov
adc
inc
imul
gs
push
dec
ljmp
push
jo
push
mov
sub
or
into
jmp
xchg
jno
xlat
shrb
call
fcomip
shrl
std
pop
or
push
adc
stc
or
repnz
cmp
stc
jecxz,pn
std
aad
mov
gs
int
push
icebp
adc
loopne
jecxz
and
jecxz
fxch
mov
stos
xor
loopne
mov
jo
add
rol
xor
mov
sbb
call
cmp
cmp
jmp
jge
sub
cmp
int
or
gs
xchg
cs
aaa
adc
repz
dec
movsbl
int
int
or
fildl
loope
mov
les
scas
dec
loopne
push
adc
fistpl
adc
in
add
divb
cmp
xchg
int
push
inc
out
shrb
adc
xor
or
push
and
mov
sub
add
fs
xor
jecxz
xlat
dec
in
shrl
cmc
cmp
fildl
pop
jmp
push
and
jbe
sub
add
or
dec
std
mov
mov
adc
sti
jp
xor
mov
xor
cmc
jb
jne
or
rclb
add
push
movsl
nop
mov
stc
mov
or
jae
push
xchg
cltd
loopne
incb
cwtl
cmp
and
ficoms
and
mov
ljmp
lcall
xlat
es
iret
jae
xchg
jb
cs
out
out
add
icebp
pop
inc
lds
push
push
and
mulb
adc
cs
add
dec
add
mov
aad
sub
negl
out
outsb
std
mov
jno
mov
mov
sarb
mov
inc
sub
add
gs
sti
adc
xlat
imul
adc
in
add
outsb
in
fimull
mov
inc
jecxz
mov
int
aam
pop
aad
mov
icebp
add
inc
cwtl
and
mov
jecxz
outsl
jnp
ds
pop
jp
addr16
jbe
pushf
cmp
dec
sbbl
lds
jmp
mov
iret
lea
jne
stos
adc
or
rorb
test
loope
and
mov
stc
rcrl
xor
clc
adc
push
xchg
std
inc
cld
lods
add
insb
push
or
nop
stc
mov
xchg
xor
xchg
mov
or
sbb
daa
sbb
cmp
mov
mov
ret
jecxz
sbb
cld
hlt
ror
ljmp
in
repz
out
and
loope
addr16
cmpsb
dec
sti
dec
nop
push
push
jecxz
and
and
sbb
push
icebp
gs
test
repnz
and
lea
mov
adc
repnz
std
xor
cmp
push
jmp
sbb
out
test
adc
add
fcompl
add
or
aad
insl
xor
xchg
cmc
ret
dec
int
fistpl
sub
sbbl
push
repz
xor
and
sub
loopne
inc
pop
aad
cmp
push
pop
or
in
and
fimull
mov
xor
out
add
popa
mov
mov
push
loope
mov
cmp
pop
ds
iret
lea
arpl
xchg
fwait
addr16
stc
repnz
add
pop
jmp
sub
stc
repnz
xor
das
sub
sub
xor
add
sub
loope
xchg
insl
push
test
hlt
xor
je
adc
push
add
pop
out
icebp
inc
mov
popa
sub
xchg
cmp
sti
cli
out
pop
sbb
dec
daa
aaa
iret
ja
mov
xchg
jmp
add
inc
mov
xlat
ds
add
repnz
and
fdivrs
mov
stc
mov
mov
dec
mov
cmc
addr16
cmp
leave
lret
sbb
out
ss
mov
mov
pushf
daa
xlat
dec
add
ss
mov
push
inc
rclb
imul
faddl
fcmovu
xor
or
outsl
jp
or
mov
rorb
add
sahf
fcmovnbe
xor
ja
test
sub
insl
icebp
sahf
push
pushf
or
aam
mov
lds
jg
jmp
adc
in
inc
sub
iret
sbb
push
adc
push
divl
les
add
push
sbb
push
inc
aad
lea
dec
mov
push
ret
inc
dec
pop
dec
stc
and
iret
fwait
loope
cmp
push
push
pop
add
xchg
gs
mov
pop
shl
dec
pushf
mov
cs
ss
in
push
mov
mov
stc
pop
sbb
xchg
sub
fnsave
jecxz
xlat
mov
js
aad
pop
movsl
pop
mov
sahf
mov
sbb
or
add
cmp
fstps
cmp
lahf
fnsave
mov
mov
mov
out
sbb
out
cmc
jb
jle
outsl
out
jbe
out
push
push
jnp
and
dec
pushf
neg
cmp
leave
mov
icebp
call
mov
fistpll
mov
fisttpl
outsl
lcall
dec
sbb
and
xor
mov
lret
scas
sti
jmp
or
out
stos
pop
in
mov
je
fwait
xchg
outsb
subl
mov
stc
sar
mov
sbb
lods
stos
dec
clc
mov
mov
or
mov
xchg
subb
dec
inc
dec
mov
rol
xor
pop
sbb
cmp
sub
mov
sbb
sub
push
lcall
test
mov
stos
sbb
call
mov
stc
call
jp
mov
sub
hlt
mov
ficoms
and
jg
or
mov
jnp
cmp
adc
jmp
push
jno
icebp
mov
xchg
fdivr
cmpb
push
mov
lcall
mov
ja
cltd
jp
test
pushf
cltd
adc
ret
fisttpll
test
jmp
int
stos
cmp
lcall
and
cmp
imul
cmp
loope
out
push
push
jp
push
in
cmp
std
sbb
pushf
sub
neg
mov
call
lahf
sub
mov
mov
xor
incl
mov
add
ljmp
jbe
mov
out
lahf
fildll
push
pop
mov
cmp
or
mov
pushf
jnp
sub
add
lahf
jae
mov
cmp
mov
xor
hlt
fwait
dec
jnp
mov
mov
scas
shr
arpl
lods
jo
jg
cmp
pop
mov
mov
mov
dec
loope
imul
adc
fistpll
mov
in
call
or
aas
data16
mov
mov
mull
dec
jmp
mov
mov
lret
sub
ja
jg
ret
stos
jnp
pusha
out
filds
and
sub
sbb
mov
push
ja
neg
jmp
xchg
dec
fdivs
cmp
loopne
cmpsb
pop
fcmovnu
fcmove
inc
movsb
pop
in
cmp
cmpsl
add
jno
and
iret
cmp
std
stc
and
mov
or
xor
fiadds
push
xchg
stos
fdivrl
insb
add
popa
sub
fisttps
jns
imul
mov
jbe
ja
pushf
jne
aam
push
in
repz
hlt
pop
jle
jg
jl
test
das
not
dec
fildl
sub
or
xor
in
sub
cmp
xchg
xor
addr16
xchg
pushf
jg
sbb
inc
incl
scas
jb
ds
mov
and
mov
jnp
pop
xor
cmp
pop
inc
lods
xchg
mov
loopne
iret
xchg
pop
pop
fwait
fwait
xchg
lret
mov
add
jle
out
sbb
cwtl
leave
rcrl
mov
pop
or
cmc
fwait
cmp
notb
xchg
clc
dec
add
dec
lcall
scas
flds
jbe
mov
push
mov
mov
push
outsb
cld
mov
mov
mov
sbb
cmc
das
xchg
sub
adc
clc
mov
cmp
push
sbb
lods
cmp
inc
imul
cmp
lahf
dec
sbb
fxch
sbb
cmp
aas
push
pop
in
das
mov
cmp
movlhps
jp
sbb
adc
xor
pop
inc
xor
sbb
fmuls
mov
jp
sbb
and
jne
cmp
inc
fisubrl
js
inc
inc
cltd
mov
fisttpl
xlat
arpl
xchg
xor
in
sti
fidivrl
xor
hlt
scas
rcl
sbb
mov
or
imul
add
mov
xlat
lret
jnp
or
jmp
mov
mov
or
cmp
in
clc
xor
clc
push
lret
mov
dec
repz
sub
rcl
ret
sub
lods
sub
test
imul
outsl
or
test
fwait
in
or
xchg
dec
rorl
sub
or
and
dec
fdivs
clc
or
cltd
fsub
fwait
dec
lret
jae
fwait
out
out
dec
or
std
push
mov
fstpt
pop
fstps
push
mov
or
or
push
push
clc
lods
mov
mov
aad
adc
cmpsl
pop
pop
inc
in
fdivrs
cli
aaa
push
test
push
or
inc
cmp
mov
test
aam
cs
loop
hlt
fisubrs
push
xor
jnp
cmp
fwait
jl
loop
push
jecxz
push
dec
stc
fwait
jle
cmp
sub
sub
xor
or
stos
jp
or
sub
xchg
push
push
add
xor
jnp
and
mov
cmc
inc
pusha
pop
mov
xlat
and
icebp
rol
and
or
inc
jg
dec
pop
enter
mov
clc
icebp
pop
inc
and
sub
js
daa
push
leave
ret
and
cmp
cmp
or
cli
leave
mov
push
iret
cmp
xor
hlt
test
clc
loopne
xor
fcmovnbe
pop
add
in
sbb
push
aam
or
enter
add
fdivs
outsl
out
jmp
imul
int3
add
push
andl
cmpsl
inc
push
icebp
push
clc
cltd
lahf
xor
in
cmp
repnz
lret
mov
push
xor
jle
rep
sub
or
fldenv
or
mov
stos
push
mov
lahf
cmp
push
gs
cmp
xlat
addr16
pop
add
pop
rcrb
out
jae
mov
fnstcw
or
loopne
ja
movsl
adc
adc
jnp
out
fistpll
icebp
movsl
xor
inc
loopne
fdivrs
xchg
testl
adc
enter
add
out
lahf
xor
ret
pop
inc
pop
xchg
or
mov
xlat
cli
ds
dec
push
scas
jmp
sbb
sbb
jl
je
push
push
mulb
pop
sbbb
cmp
test
rorl
es
pop
mov
loop
nop
int
sbb
add
aad
push
sub
pop
cmp
clc
cmpb
sub
mov
sub
inc
outsb
out
jecxz
jecxz
scas
lea
shrl
leave
or
cmpsl
dec
loopne
fdivr
sbb
mov
sub
adc
imul
sub
outsl
jl
mov
hlt
loop
mov
scas
xor
mov
or
scas
mov
rorb
push
or
imul
cmp
fcmovnu
sub
xor
mov
mov
xlat
aad
jno
sub
mov
addr16
xchg
push
out
or
dec
loop
sub
subl
xor
xor
outsl
xor
sub
sarl
sub
sahf
je
mov
out
outsl
pop
ss
fs
mov
xor
sub
push
dec
push
push
mov
out
data16
dec
scas
out
shl
or
mov
enter
cmp
mov
push
fistl
outsl
pop
jg
outsl
divl
or
mov
xchg
push
call
mov
push
cmp
push
ljmp
or
cs
ss
subb
shlb
cmp
enter
test
imul
shrb
xor
cs
bound
outsl
dec
je
rcrb
push
fistl
push
mov
mov
inc
or
bound
sub
mov
or
mov
jp
and
cmp
push
push
sbb
mov
dec
stos
jg
outsl
bound
iret
rcrb
dec
dec
lock
inc
cmpsl
or
inc
jb
xor
jmp
ja
jae
adc
jnp
imul
sub
je
adc
iret
cmp
inc
pop
inc
mov
repnz
div
inc
jmp
sub
enter
dec
xor
rol
jmp
cmp
ss
xlat
pop
aaa
mov
add
mulb
fcmovbe
push
xor
cmp
jae
clc
pushf
pop
clc
mov
adcb
scas
clc
mov
sahf
jae
pop
mov
xor
addr16
inc
sbb
jl
xor
imull
xlat
dec
loopne
sub
dec
push
jmp
repz
sbb
xor
fistps
fistl
cmp
lcall
pushf
push
adc
inc
or
repz
jp
repnz
leave
lcall
aad
sahf
jg
movsb
inc
sub
data16
xchg
xlat
sbb
xchg
sub
inc
xor
jg
lret
lret
out
insl
push
and
mov
pop
fsts
xchg
push
sbb
pop
fldenv
adc
jne
sbb
inc
jns
repz
fwait
negl
rdmsr
jns
cli
test
stc
xlat
cli
xor
stc
cmpsb
je
daa
fwait
mov
or
lahf
outsl
adc
mov
aas
fistps
push
push
and
sahf
out
test
imul
inc
notl
imul
in
ficompl
hlt
cltd
popf
fcoms
xchg
cltd
jecxz
lea
test
imull
loopne
stos
hlt
sarl
popa
or
sbb
adc
dec
mov
loop
loop
push
xor
jns
or
cmpl
cmp
fwait
cmp
loope
xlat
call
cmp
cld
ljmp
aas
pop
in
add
cmpsl
sbb
pop
or
cli
pop
call
cmp
push
xchg
test
ficoms
fstps
or
stos
cmp
jp
test
xchg
cmpsb
mov
fcomps
inc
mov
jb
and
rcr
outsb
cli
movsb
push
mov
mov
ds
enter
lret
or
push
jb
push
cmp
lds
lcall
adc
sarl
mov
stos
pop
mov
mov
arpl
jb
aam
cmpsb
xchg
xlat
mov
mov
cmp
push
cltd
dec
dec
jb
leave
icebp
test
ljmp
inc
call
lcall
aas
sub
inc
pop
pop
cmp
pop
adc
cli
jne
push
pop
push
mov
test
imul
push
or
mov
pop
test
or
stos
stos
mov
pusha
rorl
sub
fdiv
mov
sub
pop
aas
pop
mov
sbb
sbb
cmp
mov
jns
cli
stos
sub
jnp
int3
or
dec
sbb
pop
repnz
jae
adc
adc
dec
pop
inc
divl
or
stos
add
sub
sbb
dec
pop
add
out
cltd
stos
shlb
or
repz
dec
in
stc
dec
mov
nop
add
aaa
int
sti
mov
out
outsb
or
ds
repz
cmp
or
jg
testb
stc
nop
insl
sbb
in
or
sub
xor
jnp
int3
out
sub
jp
dec
dec
cmp
fdivr
mov
adc
mov
jl
dec
lcall
cmp
decl
ljmp
in
cltd
jg
sahf
or
or
mov
maskmovq
mull
mov
in
mov
adc
fdivrp
imul
or
mov
sub
inc
test
push
push
dec
xlat
test
adc
pop
adc
test
repz
sub
aas
cltd
inc
mov
cmp
mov
cwtl
cltd
pop
fwait
push
packuswb
ljmp
cmp
cltd
mov
and
sbb
xchg
fists
push
pop
fisubrl
repz
pop
fwait
addr16
outsb
dec
inc
cmp
mov
cmp
loope
mov
cmp
mov
daa
mov
mov
in
shl
leave
dec
inc
xchg
xchg
dec
imul
fwait
xor
into
aam
sub
js
mov
cmp
mov
dec
sbb
adc
sahf
stos
inc
inc
xchg
out
dec
aas
ss
jmp
fwait
pop
test
mov
das
xlat
imul
push
jb
adc
lcall
repz
inc
xlat
mov
and
enter
ljmp
or
rorl
jp
in
dec
cmp
sbb
daa
add
mov
jp
jb
lds
stos
sub
xchg
sub
cmpsl
int3
aas
divl
jmp
leave
xor
xchg
lret
inc
and
pop
inc
jmp
mov
sbb
fsubrp
sbb
aaa
or
sub
jp
cmp
dec
outsb
outsb
jecxz
xor
sub
lret
or
fwait
push
into
xlat
fidivl
nop
mov
fsub
call
popf
js
aas
and
pop
mov
js
or
mov
dec
daa
dec
inc
and
inc
or
cmp
xor
idivl
or
sbb
call
rcl
mov
addr16
cmp
xor
loopne
dec
jecxz
pop
das
subl
mov
xor
std
push
xlat
insl
test
dec
aam
mov
repz
sbb
imul
dec
outsl
jmp
xchg
dec
cmp
xor
decl
cli
push
push
mov
sbb
outsl
xchg
jbe
mov
pop
sahf
mov
sbb
xor
xlat
das
mov
xor
loop
dec
outsb
ss
pop
inc
fnop
push
xlat
lret
out
xlat
mov
mov
xchg
or
jmp
jp
out
and
sub
icebp
mov
aaa
cmp
in
cmp
fldl2e
pop
ja
aaa
add
add
or
jg
out
rcrb
idivb
mov
mov
test
xor
lcall
aad
adc
aam
nop
les
pop
push
dec
inc
out
imul
or
add
inc
sub
jns,pn
jb
fwait
push
pop
sbb
cwtl
aas
or
inc
adc
rcrl
test
maxps
jmp
outsb
jns
sbb
add
xlat
faddl
sbb
repz
xchg
cmp
lret
cmp
sbb
repz
lcall
or
xor
sub
or
mov
faddl
sub
jns
add
leave
imul
cmpsb
sbb
add
pop
pop
stos
cmp
pop
divb
call
cwtl
fmuls
pusha
push
pop
cli
and
aad
inc
repz
jns
aas
out
and
xchg
push
fadd
lret
cmp
sub
jb
cli
fs
fistpl
mov
gs
add
mov
out
rolb
pop
mov
aam
bnd
sbb
mov
ds
push
mov
mov
sarl
shll
add
shll
ficompl
test
sbb
sub
jp
addr16
aaa
scas
into
pop
sahf
mov
mov
sub
adc
nop
addr16
cmpl
mov
mov
sub
int3
push
adc
into
push
repz
fwait
sub
xor
xor
icebp
mov
leave
or
test
sub
or
push
mov
add
sbb
adc
stc
xor
mov
sub
js
sub
inc
jmp
pop
push
jmp
out
test
sub
adcl
stos
mov
pop
out
mov
cmp
dec
xor
or
adc
mov
push
jno
adc
mov
inc
cmp
mull
fwait
pop
sbb
cmp
mov
arpl
cli
aam
cmp
jb
loopne
loopne
pushf
mov
inc
stos
mov
mov
xor
out
inc
pop
xchg
mov
push
repnz
ljmp
jnp
mov
repz
dec
mov
dec
xor
xor
test
cli
ret
mov
repz
cmp
pop
rclb
imul
sbb
pop
pop
repz
test
mov
mov
or
jmp
lcall
repnz
jbe
and
fcmovbe
out
ss
xor
in
and
xchg
xor
lret
mov
jae
or
jmp
test
add
xlat
test
xor
xchg
xor
mov
mov
mov
arpl
xchg
or
or
mov
sub
mov
mov
adc
outsl
cmp
fldl
push
xor
jmp
out
cmp
sbb
jb
aad
xor
fcomps
aam
dec
cmp
push
icebp
sub
icebp
cli
xor
subl
add
push
mov
repz
jae
xor
xor
call
cmp
inc
jecxz
mov
xor
cs
mov
pop
das
lcall
fistpll
sbb
push
cmpsb
or
pop
jb
fwait
out
divb
fdivr
icebp
pop
aas
inc
lret
repz
imul
movsb
cmpsb
imul
push
je
jge
mov
call
jbe
xchg
stos
jae
pusha
adc
rclb
pop
loop
mov
dec
pop
arpl
fsubrs
dec
xchg
pop
jecxz
or
xor
repz
fdivrp
jns
clc
rclb
sbb
dec
jnp
bswap
sti
test
stc
fs
add
mov
fsubr
jnp
mov
cli
sbb
je,pt
pop
mov
add
xchg
out
xor
hlt
pop
mov
xor
xor
xor
pop
push
scas
rorb
pop
cmp
lcall
sbb
mov
aam
insb
dec
pushf
mov
dec
mov
dec
sbb
pusha
mov
xorl
xor
neg
mov
jle
fistl
fwait
scas
addr16
jo
fiaddl
in
jns
lds
xchg
call
fwait
sub
lret
iret
test
test
push
sbb
xchg
push
movntq
out
fcomps
xor
or
sub
or
sub
imul
pop
jmp
aaa
cmp
jae
fcomps
jbe
mov
dec
cmp
mov
sub
xor
mov
fdivrs
or
sahf
int
fcomps
xchg
jge
adc
adc
mov
mov
test
mov
dec
pop
pop
xor
sub
dec
push
test
cmp
idivb
xor
xchg
cmp
movsl
call
mov
mov
imul
aad
ja
mov
inc
jnp
daa
xor
adc
adc
cmp
mov
sbb
cli
out
pop
and
inc
push
or
rcl
in
mov
sbb
dec
or
pop
aam
inc
add
dec
sbb
jmp
lret
lret
ljmp
bnd
movsl
sbb
movsl
xchg
sbb
fwait
or
sbb
into
sbb
or
cmp
imul
lcall
sbb
shrb
lock
or
pop
mov
mov
out
sub
jmp
out
fs
pminub
sbb
test
int3
push
fisttpl
fstps
sbb
xchg
lds
sbb
push
dec
mov
sarl
call
mov
aam
stos
jno
jp
or
sub
aaa
out
jbe
adc
cmp
pop
sbb
testl
sbb
sub
clc
sbb
leave
int3
inc
imul
data16
sbb
repz
into
mov
mov
dec
or
fistl
leave
jecxz
hlt
divl
loopne
dec
or
and
fadds
push
jmp
int3
aas
xlat
sbb
inc
inc
jae
out
ljmp
fwait
ret
inc
aaa
xlat
pop
ficoms
push
sub
fisubrs
mov
stc
pop
negl
mov
or
test
inc
push
int3
jle
cmc
cltd
push
xor
add
outsb
sbb
cwtl
inc
xor
push
aaa
ret
pop
xor
out
xchg
xchg
xor
adc
sub
xor
outsb
cltd
mov
and
int3
sub
add
cmp
add
xor
hlt
out
pop
fidivrl
ljmp
scas
shlb
cltd
mov
adc
mov
sub
xchg
push
test
inc
push
pop
call
fmuls
xchg
mov
mov
aam
mov
dec
lea
into
pop
das
ror
adc
flds
lds
inc
stos
mov
ljmp
sub
sarl
lods
xchg
not
mov
xchg
aaa
fsubrp
mov
lods
fsubrs
mov
push
aaa
or
or
jae
fwait
out
xchg
mov
aad
imul
fwait
cmp
ljmp
add
stos
mov
and
mov
or
sub
xchg
fildl
mov
xor
aam
cmpsb
mov
xor
pop
or
mov
lds
adc
add
mov
aas
dec
fiaddl
aaa
or
or
and
xor
and
arpl
clc
ljmp
cmp
cmp
xor
inc
dec
test
sarl
repz
mov
jp
mov
or
int3
pop
add
call
cmp
dec
in
mov
out
hlt
adc
pop
pop
imul
stos
addr16
sbbl
fwait
mov
movsl
fimull
call
sub
adc
dec
sub
mov
jp
and
mov
out
mov
mov
sbb
test
imul
inc
jle
int
xor
or
push
mov
repz
mull
aad
imull
mov
add
fcompl
add
enter
dec
push
out
jmp
push
or
cmp
xlat
into
mov
call
or
out
mov
fsubrl
pop
inc
cmp
shrb
pop
fsubr
fdivs
sbb
pop
push
test
clc
pop
pop
jnp
mov
xlat
xchg
imul
ljmp
sbb
fwait
push
lcall
sbb
pop
cs
aam
stos
mov
sbb
mov
sbb
shl
inc
mov
js
leave
sbb
test
push
mov
xlat
leave
cmovns
das
outsl
fsts
roll
mov
dec
and
pop
idivl
cmpsb
test
dec
inc
leave
mov
xor
aam
ret
call
in
or
js
or
jb
xor
xchg
cli
sbb
jmp
sti
lds
fstpt
mov
aas
inc
push
fwait
mov
mull
bound
pop
js
imul
ficompl
inc
js
ds
add
lcall
leave
lret
push
mov
mov
hlt
cli
pushf
push
lcall
imull
cmp
jmp
icebp
jp
sbb
lcall
jmp
cmp
jb
fsubrl
add
mov
xchg
sar
fdivl
jnp
and
inc
daa
aam
mov
inc
repz
pop
lock
imul
cltd
push
jp
or
addr16
xlat
daa
pop
pop
pop
repnz
es
cmp
jo
sub
hlt
fcomps
loopne
lea
inc
or
sub
pusha
int3
mov
sbb
repz
loopne
test
in
fcmovnu
jle
scas
sub
loope
sbbb
xchg
inc
jp
xor
pushf
icebp
mov
fidivrl
jp
ja
sbb
std
fdivrs
out
cli
mov
and
cmp
mov
fistpll
mov
cwtl
fnsave
xchg
mov
mov
loop
out
shll
mov
mov
and
out
cmpsb
fmull
xor
test
hlt
adcb
mov
out
push
lcall
mov
cmp
mov
jne
cwtl
push
outsb
loop
fldt
mov
lcall
mov
ffreep
fldt
push
sbb
jae
outsb
xchg
jle
ficompl
daa
rcrl
mov
jp
xor
xlat
rolb
xchg
dec
icebp
lret
inc
mov
dec
mov
negb
ds
int3
inc
or
ds
push
jns
daa
jge
ret
fsubp
testb
ljmp
mov
jecxz
je
pop
mov
push
sub
mov
dec
cltd
jne
ja
mov
xor
xor
imul
cli
jecxz
mov
dec
xor
clc
dec
fstps
jns
pop
gs
cmp
pop
fmull
lcall
cltd
ljmp
cli
dec
ljmp
imul
jle
icebp
cli
push
cwtl
sbb
sub
nop
stc
loope
lret
or
jecxz
js
sub
jbe
xor
inc
pop
fsub
xor
fdivl
sti
rcr
xor
cwtl
test
scas
in
clc
pop
cwtl
lcall
into
mov
jns
in
lret
in
sub
or
pop
loopne
hlt
xchg
mov
add
pop
inc
mull
stc
dec
shrl
cmp
pop
jle
cwtl
loop
jmp
lcall
and
sub
dec
rcl
jg
in
clc
xchg
lcall
inc
aam
pop
mov
mov
dec
sbbb
hlt
pop
cmp
test
int3
aad
dec
adc
push
adc
cmpsl
add
fsubs
cmpsb
pop
or
call
mov
dec
pop
aam
frstor
jbe
bound
dec
int
jbe
jne
fadds
fwait
mov
out
cmp
inc
in
scas
pop
jns
xchg
test
pop
enter
xor
ret
mov
stc
into
mov
daa
out
ja
add
adc
lcall
paddq
add
sbb
pop
dec
decb
or
sub
adc
mov
mov
pusha
xchg
pop
xor
sbb
fcmovnu
call
mov
mov
inc
fmull
inc
cltd
fcmovu
fprem
sahf
repz
cmp
lcall
gs
sub
sub
cwtl
cmp
pusha
ljmp
xchg
push
cld
ljmp
mov
cld
or
repz
fcompl
jne
arpl
mov
sbb
or
loope
fmuls
dec
pop
push
hlt
lcall
sbb
sub
xor
cmp
inc
xor
jp
cmc
das
daa
and
xor
inc
adc
push
jge
jb
adc
popf
xlat
or
xchg
mov
add
or
cmp
enter
xor
mov
fucomi
cs
out
test
js
pop
jae
stc
sbb
idiv
dec
cmp
or
mov
push
aas
xchg
jnp
pop
sbb
cmp
mov
xorl
jnp
into
fwait
aas
repnz
dec
inc
mov
cmp
pop
fsts
xlat
iret
enter
jp
xlat
and
fwait
push
xlat
sbb
push
sub
sbb
mov
xchg
jbe
pusha
xchg
cli
pop
add
mov
stc
pop
mov
ljmp
add
cmp
dec
adc
or
out
cwtl
and
cwtl
cmpl
cld
hlt
dec
shll
or
sub
test
icebp
clc
in
and
jo
push
cwtl
jb
addps
cli
adc
dec
imul
jmp
mov
push
sahf
stos
leave
mov
cmp
ret
aaa
fistl
mov
mov
sub
mov
cltd
mov
das
stc
mov
sub
loopne
aam
fdiv
cmp
stc
arpl
cwtl
repz
xor
arpl
mov
pop
xchg
push
rcrb
push
lret
imul
or
pop
and
cmp
das
sbb
inc
jg
pushl
mov
sbbl
mov
lcall
rol
sar
and
stos
shrb
jp
aam
jl
sub
inc
test
xor
enter
addr16
push
stos
sub
inc
insb
cmp
or
jo
call
ljmp
sbb
adc
push
orl
jnp
sti
push
dec
sbb
sub
cmpl
or
cmp
sub
stc
aam
sub
div
call
cwtl
fdiv
dec
jbe
mov
mov
test
ret
mov
stc
jb
int
xor
dec
adc
push
test
in
outsb
cmpsb
mov
push
into
xchg
mov
mov
ds
ljmp
jmp
add
pop
aas
mov
mov
cmp
mov
sbb
lcall
test
out
mov
ja
pusha
aas
sbb
or
pop
aaa
or
daa
mov
pop
push
mov
lahf
lret
sti
cld
fcmovbe
mul
add
mov
cs
aas
cmp
jae
jmp
jmp
lret
mov
and
test
xor
jnp
pushf
rcrl
stc
xor
int3
mov
stc
push
cwtl
xchg
dec
cmp
popf
dec
fnstenv
dec
insl
clc
cltd
or
enter
loop
mov
sub
mov
aaa
sub
cli
mov
popf
add
mov
cmp
out
cs
mov
xlat
jmp
pop
pop
pop
xor
popf
xor
clc
mov
pop
or
cmp
xor
aam
dec
sbb
cmp
inc
lahf
je
rcl
sub
call
or
lcall
add
js
out
jns
cmp
stos
add
xor
fistpl
cmp
mov
ds
stc
xchg
or
out
subb
test
int3
sbb
imul
mov
cltd
pop
testb
add
sbb
pop
mov
push
mov
mov
push
je
or
push
adc
hlt
cmpsb
xor
sub
lds
jns
cwtl
mov
inc
clc
imul
cmp
mov
iret
sub
xchg
or
add
cmp
and
cmp
repz
push
sub
mov
mov
mov
cmp
lret
clc
jns
mov
add
lods
mov
into
jnp
adc
push
mov
sub
push
cmp
imul
stos
cli
ja
stos
mov
pop
push
push
jnp
pop
push
dec
mov
aam
js
sbb
aaa
aam
cmp
fs
inc
cmp
cmc
mov
add
fisubl
mov
in
lret
aam
call
cwtl
mov
es
cwtl
test
jmp
mov
inc
fcmovu
mov
xor
cmp
leave
aas
call
clc
insb
xchg
pop
call
xor
dec
cmp
sub
pop
pop
out
rorb
jnp
sbb
pushf
push
mov
stc
pop
and
xlat
sub
aam
or
dec
aaa
cmp
aas
xor
jo
mov
cli
aaa
jbe
stos
push
cwtl
sbb
stc
das
or
xor
mov
sbb
dec
xchg
jns
aas
jne
lret
sbb
icebp
cmp
aad
adc
jecxz
test
sbb
pushf
adc
stc
sub
inc
das
and
inc
mov
pop
outsb
pop
sub
sub
and
out
loopne
dec
fisttpl
pusha
ljmp
adc
sbb
fwait
inc
or
lods
sarl
or
jb
lcall
cs
inc
jmp
mov
jge
sub
dec
imul
inc
cmp
inc
cmp
lret
add
jg
repnz
dec
push
sub
js
notl
dec
enter
mov
in
add
jp
mov
or
sbb
jns
pop
int3
xchg
sbb
push
pop
int3
cmp
sub
cmpsl
mov
sub
sbb
aas
xor
dec
or
or
bound
pop
sbb
push
cmp
cltd
sbb
rorb
fpatan
jmp
xlat
xchg
int3
or
adc
sar
or
adc
imul
shlb
aaa
icebp
sarb
dec
stc
sbb
es
negb
pop
out
or
or
stos
cmp
xchg
test
cmp
xchg
xchg
pushf
pop
aas
push
popa
jle
mov
or
imul
and
test
repz
push
outsb
sbb
push
sbb
inc
test
subb
sub
mov
fwait
mov
clc
xchg
lret
sti
daa
adc
jp
ficompl
test
sahf
lods
call
sbb
fucomip
incl
sub
clc
int3
push
fsubs
pop
int3
outsl
stc
or
outsl
dec
ja
xor
or
xor
inc
push
or
jns
mov
and
into
fnclex
in
call
dec
imul
adc
or
dec
add
or
mov
int
jnp
mov
sbb
loope
sub
pushf
push
cmp
push
stc
fwait
inc
sbb
in
fidivrl
shl
or
fistps
scas
nop
push
cmc
sbb
xor
sbb
loop
xchg
jbe
call
rolb
pop
cmp
mov
jp,pt
or
clc
repz
xor
or
cltd
jno
mov
xchg
nop
dec
mov
jg
or
cli
inc
sbb
xchg
cmp
cmp
push
push
xchg
mov
faddl
or
xor
das
jns
imul
mov
push
push
fwait
push
jns
imul
push
jp
div
popa
mov
loop
sbb
pop
rclb
cwtl
xor
or
repz
dec
test
iret
call
out
mov
pop
inc
cli
inc
push
jp
jp
cli
fwait
js
push
ds
inc
jnp
cmp
lahf
pop
jecxz
jecxz
mov
or
adc
cmp
push
mov
push
or
xor
mov
fistl
cmp
cmp
xchg
mov
xor
mov
or
jae
dec
dec
or
hlt
pop
jmp
lret
lret
fidivrl
xchg
cmc
push
xchg
adc
ljmp
jns
clc
lret
cli
in
mov
dec
fxch
fwait
outsl
cmpxchg
js
mov
xlat
and
test
push
fwait
mov
mov
test
aad
imul
repz
mov
mov
aas
call
mov
and
cmp
dec
cli
adc
das
insb
xlat
sbb
fidivrl
inc
mov
stc
fidivrl
dec
jns
jp
or
enter
dec
test
xor
lret
call
aas
clc
and
divl
cmp
fsubs
or
sbb
fisttpll
jbe
jbe
inc
cmc
testl
mov
cltd
lret
push
jae
mov
out
lahf
xchg
addr16
test
fcomi
add
sahf
xchg
push
cld
lods
daa
add
stc
add
leave
and
xor
loope
repz
out
adc
and
sbb
repz
dec
xlat
jbe
add
notb
fcmovbe
inc
xor
jmp
sub
pusha
and
mov
testl
imul
mov
sub
xor
sti
lds
pop
pop
or
dec
adc
push
iret
xor
imul
iret
sub
lcall
pop
adc
test
imul
push
scas
stc
int3
fists
pushl
testl
in
int3
add
mov
repz
jmp
add
lret
sahf
sbb
push
aam
negl
out
sahf
jbe
popf
xlat
add
cmp
jo
push
pushf
xchg
dec
adc
xchg
mov
jmp
lcall
jbe
mov
mov
mov
ss
xlat
in
push
pushf
loopne
push
mov
sbb
fcomi
hlt
mov
jnp
rcrb
jl
sarl
pop
mov
mov
mov
xchg
mov
add
jnp
aas
push
sbb
lret
fwait
sbb
testl
movsb
inc
out
jmp
bound
mov
fisubl
subl
inc
or
xlat
aad
dec
fdivrs
fstpt
addr16
data16
dec
out
sbb
sub
add
push
mov
dec
or
jl
repz
loopne
xchg
xchg
sub
rcll
lods
push
sbb
mov
mov
negl
out
lods
push
out
test
lock
rolb
xor
xor
movsb
out
divl
cmpsl
pop
roll
sahf
daa
dec
fistpl
or
jg
xchg
negl
call
pop
xlat
gs
and
lret
out
imul
sbb
add
and
stos
push
jmp
xor
stos
ja
mov
hlt
xor
mov
mov
dec
ss
mov
outsl
mov
jo
scas
lret
mov
aaa
in
incl
jbe
insb
lods
sti
inc
jno
in
orl
dec
sti
mov
cmp
sti
inc
jb
mov
or
das
sti
les
add
mov
sti
leave
inc
or
lret
sti
pop
inc
xchg
inc
add
sti
inc
add
mov
mov
add
aas
jle
xor
outsb
cmp
add
ja
xor
jns
mov
sub
divb
aaa
mov
jbe
sub
jmp
inc
stos
lret
dec
mov
add
stc
incl
push
insl
cmp
std
inc
ret
dec
enter
leave
pusha
icebp
push
jg
repnz
adc
and
dec
enter
inc
dec
xor
jnp
aam
jp
cmpsb
dec
push
xchg
dec
pusha
lods
pushf
sub
xchg
xchg
xlat
push
and
mov
xchg
mov
mull
movsb
mov
push
sar
dec
jbe
adc
nop
and
push
ret
xor
sbbb
mov
sub
adc
scas
lahf
sti
call
xor
inc
fs
inc
je
sti
mov
jbe
test
mov
jle
sti
cmpsl
sbb
jge
sti
or
cld
jno
js
sbb
mov
mov
loope
mov
arpl
xor
mov
xor
fnstcw
cli
add
xchg
sub
adc
stc
dec
jl
das
jg
lods
nop
es
pop
aas
sbb
adc
jmp
xchg
movsl
dec
mov
sub
fisubl
adc
out
or
sti
jbe
mov
xor
sti
orb
push
cmp
jecxz
pop
lahf
jbe
loope
aam
jp
lods
cmp
or
adc
inc
pop
sti
or
subl
fsubl
movsb
pop
out
push
mov
js
push
sbb
pop
into
sti
fcmovb
inc
jbe
xchg
mov
insl
sub
sti
and
aam
pusha
add
or
int
sbb
push
sbb
fimull
cmp
cmp
mov
pop
mov
mov
out
or
shl
xor
jecxz
and
clc
pushf
aaa
inc
aas
inc
sti
scas
fstpl
nop
cmp
xor
addr16
cmp
jle
sti
leave
fsubrl
xchg
clc
pop
pop
js
xor
jbe
cltd
test
testl
inc
pop
push
loop
jno
pop
sbb
and
lret
insb
mov
push
cmpsb
jbe
mov
sti
pop
mov
jp
sti
xchg
dec
sbb
js
jmp
fcoms
test
sti
je
mov
sbb
ja
sub
frstor
stos
test
or
aam
adc
std
out
mov
cli
out
loop
lods
sti
int3
sub
jge
call
mov
pop
arpl
repnz
xchg
jmp
and
mov
pop
mov
cli
addl
sti
mov
insb
scas
dec
cld
inc
lods
pop
mov
add
or
ds
sti
or
jns
xchg
and
sbb
mov
dec
xchg
mov
fsubl
cmpsb
xchg
pushf
adc
sub
testb
jl
pop
dec
aas
adc
sti
sbb
push
jbe
addl
push
shlb
jmp
sti
cmc
cs
aaa
imul
and
lret
xchg
and
es
add
push
sub
add
mov
gs
movsl
jmp
stos
and
sti
cmp
es
loope
sub
adc
add
clc
lret
cmpsl
inc
sbb
dec
pop
popf
mov
sti
jns
out
scas
push
addb
or
in
pop
movsb
sti
dec
pop
mov
jno
sbb
lret
push
test
cwtl
das
pushl
mov
mov
mov
pop
sbb
sti
push
mov
inc
and
sti
mov
jmp
jne
inc
push
jecxz
mov
mov
sti
xchg
pop
inc
and
xchg
sti
push
stc
mov
test
sti
cld
pop
ret
rcrl
inc
aad
cmp
sub
adc
pop
orl
pop
or
std
mov
stc
mov
and
arpl
add
mov
jg
dec
lds
clc
imul
xchg
cmp
push
sub
movsb
fcmovu
sub
sti
jl
and
jmp
and
fdivrp
das
mov
stos
sar
mov
sub
or
lds
dec
mov
in
xor
cli
nop
ret
sti
inc
test
fistpll
adc
fs
inc
inc
dec
punpckldq
sti
add
mov
adc
xor
cmpsl
and
push
das
push
sti
xchg
aaa
flds
xor
or
inc
cli
cmpsb
sti
mov
mov
cwtl
pop
bound
mov
jg,pt
xor
and
popf
sti
gs
mov
sti
insb
outsb
cmp
pop
mov
lods
sbb
loope
cltd
mov
and
in
movsb
stc
out
sti
push
rolb
mulb
adc
adcb
pop
adc
push
push
and
add
aas
mov
clc
inc
jo
dec
sti
mov
or
cltd
sub
testl
fiaddl
loopne
out
adc
adcl
mov
xor
nop
cwtl
test
insb
pop
fcmovu
fcompl
test
int3
pusha
popf
jg
mov
imul
mov
mov
jecxz
shlb
jl
imul
iret
adc
adc
mov
mov
sub
mov
dec
sar
movsl
bound
sti
fmull
xor
aas
sti
mov
lods
xlat
inc
xchg
sti
jge
popf
push
insb
jae
sti
pop
in
fisttpl
inc
sub
or
jmp
shl
mov
cmpsb
lahf
imul
adc
and
div
mov
inc
stc
sub
pop
push
arpl
imul
cltd
mulb
mov
mov
lock
enter
out
dec
and
push
psubsw
jmp
lods
sbb
out
cmp
fdivl
mov
fidivl
adc
cltd
pusha
push
inc
inc
cmpsl
test
ljmp
jecxz
insb
int
sbb
ds
ret
imul
jmp
cmpsb
scas
insb
inc
jnp
sub
xchg
add
sbb
stos
outsb
xor
lahf
or
add
movsw
cmp
cli
cs
sbb
cli
fisubrs
mov
mov
push
loopne
jmp
mov
jg
or
lods
popf
scas
xor
add
dec
cld
sti
fcmovnbe
aam
sti
imul
and
lods
cmp
ret
sti
stos
popf
bound
inc
movsb
xor
lahf
arpl
mov
enter
insl
cmp
lea
les
sti
pop
xchg
and
mov
adc
jecxz
fwait
lret
repnz
arpl
mov
stc
sub
push
mov
xchg
test
movsb
jno
out
fisubl
lods
fisubs
mov
bound
es
mov
jnp
fists
sti
mov
sbb
sbb
xchg
cli
repnz
mov
pop
stos
and
and
movsl
lods
sbb
mov
out
mov
test
sub
out
mov
and
push
sbb
cwtl
loopne
test
ss
xor
inc
mov
sub
imul
sar
mov
dec
pop
xchg
sti
push
aad
sub
xchg
sub
xchg
mov
or
outsl
ret
jp
rcrl
clc
cmp
sti
push
pushf
xor
xchg
mov
jb
ss
pusha
clc
adc
psubb
mov
cld
movsl
mov
mov
xor
sti
dec
mov
mov
int
jecxz
lea
data16
push
mov
aam
or
adc
cmp
outsl
out
data16
repz
adc
jecxz
lahf
stc
ret
or
out
mov
cmp
cmp
scas
rcl
fwait
pop
divl
rcll
out
jecxz
jo
rorl
xor
out
nop
pop
adcb
ret
cmp
icebp
jne
adc
mov
adc
mov
jmp
std
jae
in
lcall
mov
sub
xor
addr16
pop
repz
aam
jmp
and
ret
pop
cmp
adc
les
inc
jl
gs
movsb
clc
out
sub
test
loopne
dec
xor
mov
arpl
adc
clc
mull
les
mov
pop
mov
dec
insb
jnp
cmc
push
enter
orl
push
cli
call
cmp
mov
and
inc
pop
jnp
movsb
fldl
lods
mov
inc
fsubrp
lret
js
pop
rolb
lods
sub
push
xlat
jmp
push
aam
sub
mov
es
mov
xchg
into
xchg
test
repnz
jmp
sub
bnd
je
add
cld
xchg
mov
sbb
addr16
icebp
xor
adc
fs
cs
cmp
jbe
add
outsl
xor
in
jl
in
add
mov
jecxz
enter
enter
mov
call
adc
fstpt
addr16
xlat
cmc
sub
nop
hlt
lock
jl
push
xor
rcr
cmp
jg
xor
xor
pop
shlb
inc
pop
adc
inc
pop
in
iret
jo
in
push
stos
inc
and
cmp
mov
fcom
outsl
xor
xor
rcll
pop
jmp
sahf
xchg
outsb
inc
pop
pop
mov
fcomps
fwait
or
sbb
xor
imull
loope
mov
mov
mov
cmp
test
xchg
add
xor
add
mov
xchg
test
mov
jmp
leave
dec
push
push
shlb
jo
and
in
pop
mov
enter
sarl
sbbl
mov
scas
std
shll
sahf
jbe
or
xchg
pop
ja
lods
arpl
rol
fsubs
enter
cwtl
mov
mov
incl
mov
lea
xor
mov
cld
fcoms
loopne
insb
jbe
ljmp
shrl
mov
jnp
push
js
jle
adc
pop
aaa
fldcw
je
mov
in
mov
push
test
js
addr16
fwait
imul
mov
loopne
rcrb
add
jg
insl
stc
mov
sbb
cltd
mov
mov
xchg
daa
repz
addr16
and
mov
outsl
jg
fwait
push
pop
sbb
enter
comiss
jnp
dec
or
xor
cmp
mov
xchg
lcall
xchg
addr16
ljmp
ret
test
mov
scas
je
in
jg
jmp
test
icebp
adc
fists
mov
jecxz
lret
mov
test
ret
mov
pop
sub
mov
std
push
sarl
mov
adc
out
lret
fwait
lock
aam
pop
mov
mov
scas
and
insl
aad
jge
test
fstpl
shrb
fdivrs
mov
in
test
add
adc
fists
dec
and
jmp
xchg
fwait
push
sbb
jno
hlt
cwtl
les
adc
lock
loope
and
sbb
dec
cmpsl
sbb
pand
adc
add
push
rclb
mov
jecxz
ja
insb
push
ret
dec
mov
add
cmpsl
icebp
in
mov
mov
jecxz
lock
aaa
cmpsl
aas
out
mov
inc
lahf
pop
imul
or
popa
dec
sub
imul
faddl
fisubs
mov
lods
je
lcall
xchg
aam
mov
insb
bound
jns
mov
scas
push
cmc
mov
std
pop
pop
outsl
in
mov
inc
push
mov
mov
mov
inc
lods
mov
lea
imul
xchg
push
cmc
sarl
push
mov
inc
mov
sbb
lret
cmp
cmp
insl
notl
lahf
test
inc
or
or
sub
clc
imul
idivl
out
or
data16
add
movsl
and
and
ja
sarb
pop
jle
rcll
and
out
mov
rolb
or
jecxz
pop
push
sub
mov
push
jb
or
jno
icebp
jmp
add
adc
sub
and
xchg
sahf
push
and
iret
popf
lods
sbbb
outsb
hlt
pushf
xor
dec
mov
jne
inc
and
sti
inc
jo
mov
in
lret
sub
lods
sti
repnz
or
insl
lods
ret
sti
cmp
mov
out
xor
mov
adc
sti
dec
add
das
inc
or
mov
scas
xchg
hlt
mov
pop
dec
ficoms
fcomps
pop
cwtl
sti
fstps
pop
cltd
ficompl
pop
lcall
xchg
aad
sti
push
xchg
pop
push
xchg
push
xchg
sti
rclb
push
nop
rcll
push
xchg
xlat
rclb
push
xchg
shlb
loopne
fsubrl
test
hlt
add
shlb
mov
mov
dec
cmp
pop
outsl
sti
lock
xor
mov
mov
lret
in
icebp
inc
xor
mov
ljmp
in
mov
fisttpl
add
adc
test
add
pop
pop
push
das
pop
icebp
movsl
fisttpl
loop
add
leave
pop
lods
int3
addl
push
push
sbb
cmp
and
js
add
out
flds
inc
insb
mov
sti
inc
xchg
lods
sbb
inc
mov
or
xchg
push
sbb
and
adc
ds
sti
push
ja
scas
xchg
in
imul
dec
add
cltd
sbb
sti
jge
daa
push
mov
mov
xor
mov
push
popf
out
scas
aaa
lret
sahf
stc
cmc
pop
pop
lcall
mov
insb
ja
sti
fisubs
mov
jnp
pusha
mov
pop
enter
sti
mov
jno
dec
sti
ss
out
mov
ljmp
and
mov
and
leave
mov
adc
xchg
sbb
incb
sti
cmpsl
mov
nop
pop
mov
insb
out
add
adc
sbb
mov
or
xchg
lret
xchg
cmpsl
cmp
mov
mov
or
imul
into
aad
dec
xchg
and
and
icebp
and
dec
shll
sub
pop
loope
fsubr
aad
stc
dec
and
jp
sbb
sbb
push
insl
sti
xchg
fwait
or
gs
fsubs
out
aam
add
jns
movsb
insl
out
fisttpll
cld
ja
fnstcw
jb
xor
sbb
sbb
xchg
push
shlb
lds
shlb
stos
jmp
arpl
sti
subb
imul
call
sti
test
stos
pushf
xlat
and
cmp
sti
xor
movsb
lds
mov
push
ret
imull
jae
clc
jno
int
sbb
sub
pusha
ret
mov
jl
sti
push
ljmp
aam
js
xchg
aaa
imul
push
xlat
sti
fdivrs
mov
jmp
adc
sti
mov
mov
pushl
jp
dec
in
or
mov
cmp
outsb
arpl
mov
xor
insb
sarl
fisubl
mov
ja
stos
notl
pop
stos
outsb
aas
cmpb
incl
mov
scas
sbb
dec
lods
lsl
push
shl
lret
xor
into
sti
and
ja
shr
lock
push
jns
push
sti
imull
mov
scas
sti
imul
insl
bts
sti
ret
adc
cmp
test
movsl
jb
aam
in
or
xchg
cld
cmp
loope
lret
fucomip
pop
jg
test
gs
adc
sti
int
dec
cmc
mov
xchg
sti
vandnpd
sbb
cmpl
jmp
roll
push
imulb
sti
xlat
or
sbb
cmpsl
addr16
xchg
popf
andb
es
clc
dec
jmp
ljmp
lock
pop
sarb
sub
adc
mov
je
jecxz
push
xor
jnp
dec
pusha
test
xchg
sti
into
push
push
mov
sti
pop
cmp
push
sbb
xchg
push
xlat
sbb
std
loop
arpl
sti
jp
pop
scas
inc
or
cli
faddp
sub
lret
jl
incl
cli
cltd
add
xor
loopne
add
in
sbb
pop
loop
cmp
cmp
es
insb
repz
clc
ret
push
sti
leave
out
into
aaa
pop
inc
popf
sti
iret
pop
xchg
or
mov
sbb
mov
roll
xchg
lret
and
push
je
and
scas
addb
stos
pop
movsb
sti
dec
test
ret
xchg
jle
test
dec
lds
insb
popa
push
cmp
testl
mov
mov
stos
lock
enter
jb
lcall
in
mov
sti
inc
pushf
icebp
xchg
pop
ds
movsl
push
and
push
ret
jmp
out
imul
cmp
cmp
jne
paddusw
rolb
inc
out
repz
mov
mov
je
movsl
sti
mov
push
shll
sti
lahf
mov
leave
xchg
popf
es
add
jno
sti
cmp
dec
orl
incl
adc
adc
and
or
outsl
int3
out
int
mov
fisttpll
stc
inc
mov
mov
pop
fwait
inc
popf
mov
lret
pop
loop
mov
int
cmp
cld
inc
push
movsb
pushf
gs
mov
xor
xor
xor
xchg
orb
idivl
xor
sti
jmp
ret
leave
imul
das
add
sti
dec
std
dec
sbb
fnsave
sti
push
fmull
mov
sti
adc
add
lret
lods
or
push
jmp
icebp
hlt
sti
mov
dec
in
add
test
lods
jle
sbb
push
mov
and
pushf
clc
enter
mov
inc
mov
add
lahf
call
cwtl
outsb
mov
negl
jb
aas
push
repz
lcall
sti
add
sub
pop
movsb
dec
adc
adc
arpl
sbb
xor
orl
aad
sti
aam
fs
sbb
inc
jno
sub
xchg
scas
std
out
shll
jb
mov
and
and
inc
imul
mov
inc
popa
icebp
in
cmp
mov
outsl
jne
pushf
lods
jmp
mov
push
push
test
push
fwait
andl
repz
cs
call
sti
xchg
clc
push
stos
push
pop
sti
pop
inc
xchg
incb
xchg
add
rclb
sub
lret
orl
mov
fcomip
ljmp
insb
dec
sti
lock
orb
pop
jnp
cwtl
clc
push
lret
daa
dec
mov
dec
cld
imul
stos
jnp
xor
ret
iret
lahf
ljmp
jg
and
xchg
sti
in
int
and
cmp
in
mov
insl
mov
inc
inc
inc
sti
add
seto
cwtl
js
sub
or
push
mov
out
push
xchg
jmp
mov
stos
movntq
cmc
jmp
mov
jl
mov
jle
fidivrs
inc
lret
or
ret
xchg
idivl
push
in
jnp
and
xlat
lret
push
enter
push
ss
mov
jmp
xor
cmp
js
jb
pop
loopne
out
movsb
push
lods
sti
in
mov
sbb
ljmp
cmp
div
mov
jbe
xchg
xor
and
xchg
fisubs
enter
fwait
sbb
imul
cld
fistpll
stos
jle
push
sub
test
sti
dec
or
mov
dec
xchg
cmp
fwait
jge
outsb
fldcw
sti
js
pushf
sbb
xchg
pop
pusha
bound
iret
jle
mov
xor
and
mov
cmp
add
negl
mov
sub
cltd
mov
int3
stos
mov
push
cmp
out
and
lcall
sub
add
scas
pop
sti
pop
jns
adc
adc
lahf
or
jmp
int
mov
cld
sbb
mov
fmuls
fistpll
ss
or
cmp
mov
sti
cmpsb
jmp
inc
iret
mov
div
daa
lret
call
mov
xor
lods
or
notl
dec
les
mov
add
push
imul
cmp
sbb
sub
lcall
ljmp
ds
mov
or
pushl
clc
and
out
sbb
subb
sbb
sti
sub
ret
cmp
bound
dec
sarb
andb
and
cmc
xchg
shlb
jnp
stc
push
cmp
outsb
push
pop
xchg
clc
call
out
ljmp
push
sti
fldcw
push
mov
mov
mov
pop
andl
xor
adcl
cmp
push
or
movsb
mov
mov
lods
jle
mov
mov
jnp
mov
add
push
jae
xor
test
sbb
inc
fdivrp
pushf
loop
mov
add
and
and
pop
mov
test
into
cltd
adc
xchg
sti
popa
jne
add
mov
sbb
sar
in
sti
imul
mov
adc
bound
sti
into
test
jne
cmp
test
xor
cli
mov
and
or
xchg
nop
jne
pushf
lret
mov
sub
sti
popf
scas
add
mov
jle
and
jle
loope
popa
ja
or
mov
jb
jae
jge
xor
jmp
or
mov
push
xchg
adc
jp
addb
adc
sti
ja
test
mov
out
and
xchg
sub
push
popa
push
sti
jg
mov
insl
cmpsl
adc
test
stos
sbb
movsb
lods
mov
lret
pop
sti
sbb
sar
mov
sti
lock
xor
dec
mov
sti
into
push
mov
push
and
fwait
sti
clc
scas
lea
sti
in
jb
cltd
stos
sbb
bound
xor
mov
sub
fcompl
sub
sub
pop
test
xchg
mov
fidivl
jb
addb
pop
jo
stc
les
decl
adc
pop
out
mov
divl
xchg
notl
sbb
out
shrb
mov
cs
jle
addr16
leave
pop
mov
and
movsb
inc
sti
stc
cltd
scas
pop
push
pushf
push
inc
sti
dec
leave
mov
and
gs
dec
es
test
xor
nop
in
add
clc
negl
das
sbb
jo
cmp
push
pop
cs
push
out
adc
pop
and
mov
and
aam
outsb
sti
faddl
mov
cmpsl
xor
sti
fistpl
scas
or
movsl
into
cld
incl
mov
js
icebp
stos
mov
add
jnp
stos
divl
add
ds
js
rorl
sti
push
enter
mov
sbb
inc
sub
fimull
cmp
sbb
mov
add
cmp
cld
lods
movsl
mov
pop
call
mov
enter
int
out
sarl
sti
nop
icebp
scas
push
insl
loopne
jl
or
cmp
sti
loop
outsb
out
lahf
mov
mov
push
add
ret
push
mov
and
and
bound
mov
negl
jmp
adc
jle
sti
xchg
adc
leave
xchg
sbb
push
sbb
mov
outsb
dec
sti
add
sar
mov
outsl
sti
int3
imul
mov
movsb
ljmp
sti
out
aam
cli
test
testl
ja
stc
cmp
or
scas
push
in
stos
cmp
pop
cmp
push
sti
aaa
lret
push
outsl
hlt
jge
in
out
push
jecxz
sbb
rcrb
mov
xchg
rcrl
pusha
mov
jbe
dec
mov
jo
outsl
clc
and
sbbb
lods
pop
mov
sti
pop
jl
adc
mov
out
push
push
sbb
loopne
cltd
sbbb
mov
int3
sti
sbb
mov
mov
lds
inc
cmpsb
gs
enter
arpl
or
outsb
in
into
dec
mov
dec
in
push
clc
or
js
jb
pop
dec
xor
mov
cmp
cmp
movsb
fisubrl
sbb
mov
bound
push
ret
in
sbb
sti
shrb
flds
repnz
add
xchg
push
nop
cwtl
icebp
push
js
lcall
ljmp
clc
mov
ret
stc
lret
add
dec
add
or
cmpsl
xor
call
imul
xlat
lahf
into
mov
jb
mov
fidivrl
mov
sub
lcall
pop
fsubrl
sti
mov
mov
xchg
mov
test
sbb
insb
or
lret
sbb
aas
scas
out
and
mov
popf
js,pn
nop
mov
pop
addr16
iret
call
sbb
hlt
imul
mov
xor
adc
sti
cmp
dec
addr16
loope
mov
push
call
cmp
dec
ret
orb
ret
xlat
ljmp
or
mov
mov
push
xchg
mov
cmp
xchg
sub
xchg
rorl
cmpl
cmp
mov
xchg
stc
pop
movsl
dec
ds
push
inc
sti
jmp
mov
push
sti
adc
lods
mov
xor
mov
sub
dec
jl
adc
sti
stos
sbb
sub
fnstcw
unpcklps
dec
push
imul
fistpll
lahf
sti
and
add
faddl
mov
xchg
int
mov
sbb
pop
xor
cmp
mov
neg
sti
mov
das
xchg
xchg
mov
fldcw
and
mov
test
mov
roll
f2xm1
xor
dec
call
test
mov
mov
cmp
icebp
loopne
xchg
or
js
shrl
push
mov
inc
sti
hlt
xor
dec
push
push
push
sti
xor
loopne
push
je
mov
pusha
pop
jp
sti
mov
das
fs
sub
outsl
arpl
sbb
mov
in
mov
and
mov
xlat
repnz
rol
pop
or
popf
arpl
leave
dec
push
dec
stos
out
ja
add
inc
lcall
les
mulb
jnp
jp
sbb
xlat
bound
push
call
sti
mov
pushf
sub
jnp
mov
lds
filds
jmp
out
ljmp
and
stc
inc
sbb
das
mov
lret
stc
mov
lea
sub
testl
fists
or
cmc
inc
ret
stos
arpl
push
nop
sti
ss
or
xchg
sti
jecxz
pop
push
loop
xlat
xor
cli
clc
sti
jp
pop
movsb
outsl
pop
pusha
xlat
out
ret
stc
or
mov
pushf
sti
inc
dec
or
cli
mov
adc
xchg
push
mov
mov
and
les
cmp
sti
push
mov
push
jnp
push
iret
fwait
inc
push
sti
and
cs
sub
into
scas
js
data16
fsubrs
mov
scas
lahf
mov
xorb
mov
jle
test
imul
lea
aad
xor
sub
loop
outsb
inc
jmp
mov
sti
jl
ret
jbe
lods
mov
push
lods
fcmove
incl
cmc
mov
loope
js
aad
sbb
pushf
sbb
lods
xchg
scas
push
or
pop
mov
mov
dec
cmp
sub
enter
ss
push
popf
jp
dec
movsl
ljmp
add
lret
mov
sti
xor
mov
cli
repz
mov
pop
stc
mov
test
loopne
bound
js
sti
push
sub
adcb
dec
into
adc
dec
sti
mov
outsl
outsb
mov
pop
xor
lret
adc
cli
sti
mov
outsl
push
jl
sbb
inc
out
push
adc
add
dec
sti
lea
iret
in
mov
sbb
ljmp
sbb
mov
in
cmp
sub
outsb
imul
mov
addl
cmpl
sti
out
mov
sti
mov
dec
mov
inc
into
stos
jne
fisttps
clc
testb
lret
cld
xchg
mov
pop
cmc
cmp
jnp
mov
and
loop
outsb
push
fisubl
sti
inc
push
mov
ds
xor
movsb
jne
cmpsl
sbb
pop
pop
sbb
pop
ficompl
ret
dec
lahf
sar
and
bound
sbb
popf
push
test
sbb
mov
jns
dec
ljmp
stos
jb
clc
push
add
into
loopne
sbb
xor
mov
std
pusha
dec
pushf
inc
fcompl
data16
mov
cmp
jo
lock
or
xchg
push
in
or
imul
das
sti
dec
adc
loop
pop
inc
out
xchg
cmc
enter
icebp
xor
clc
add
movsl
or
and
sti
addr16
xchg
mov
mov
in
inc
xor
sti
mov
ret
sti
movsb
mov
movsl
mov
mov
idivb
or
mov
sti
push
mov
and
and
mov
incl
and
pusha
pop
jb
movsl
bound
je
imul
aam
ret
fwait
movsb
push
into
jp
sti
and
imul
outsl
xlat
push
mov
xor
arpl
mov
push
and
scas
faddl
popf
sbb
pop
push
sbb
aad
add
sti
and
xchg
clc
fdiv
cmp
fsts
dec
dec
bound
jp
subl
sti
mov
mov
and
inc
sti
mov
mov
sti
pop
xor
mov
jl
jmp
mov
into
pop
pop
adc
push
lret
mov
cmp
pusha
sti
add
ss
mov
xor
lret
fisttps
adc
sti
and
dec
add
fsubrp
lcall
flds
and
loopne
xchg
pop
pop
ficompl
shlb
int
test
ficoml
mov
call
pop
repz
cmpsl
fsubl
scas
js
in
into
or
mov
cli
cmc
mov
mov
push
jmp
nop
insb
sti
repz
fisttpll
jge
sti
adc
gs
imul
fs
dec
sub
repz
push
sti
lea
mov
in
out
fxch
inc
xchg
mov
stos
aaa
fwait
jg
daa
jl
jo
pop
and
jno
sub
jp
xor
bound
cltd
ret
or
sbb
mov
fwait
jnp
outsb
test
pop
inc
bound
mov
xor
jecxz
push
jge
fimull
or
push
push
stc
out
and
push
jnp
out
cli
repz
xlat
jp
dec
out
cwtl
fisttpl
sbbb
mov
popf
repnz
mov
jae
hlt
cmpsb
adc
mov
adc
mov
cmp
xchg
arpl
lret
stos
sahf
sbb
pushf
or
lcall
or
cli
mov
adc
neg
push
fistpll
mov
aam
jle
inc
xor
mov
in
stc
jae
dec
add
out
xlat
and
adc
fcomi
rorl
adc
xacquire
mov
fldt
ds
cmp
add
les
jmp
cld
push
adc
mov
sbb
shll
or
idiv
xor
pop
mov
fxch
xor
idivl
push
jae
jmp
in
scas
cmp
out
and
arpl
sbb
idivl
xor
mov
leave
mov
mov
add
roll
sub
or
negb
jo
jb
add
and
sbb
fildll
scas
in
mov
mov
out
cmp
mov
xchg
lret
iret
add
rcrl
fldt
out
mov
outsl
rep
lods
or
jno
loope
pop
xor
sub
cmc
add
or
xlat
insl
out
add
in
jmp
inc
xlat
add
int3
andl
sbb
cmp
or
adc
add
out
pop
pop
enter
pop
frstor
pop
mov
enter
ja
adc
adc
jmp
enter
sarb
in
adc
cmp
sub
inc
push
mov
int
inc
push
adc
repz
decb
pop
mov
dec
cmp
cltd
mov
inc
push
div
inc
fildl
jno
fnstenv
repz
call
bound
mov
sub
outsl
cltd
inc
ja
inc
xchg
shlb
fimuls
ficoml
std
pop
unpckhps
mov
lock
ret
pop
mov
pop
dec
sub
push
pop
stos
inc
popa
ret
or
sarl
push
jae
outsl
stos
xchg
mov
dec
dec
push
inc
cmp
lock
sbb
into
mov
leave
mov
stos
sub
push
or
outsb
lea
pop
mov
or
fwait
xor
dec
xrelease
sbb
fisttps
into
loop
xchg
push
stos
mov
test
cwtl
sub
add
inc
out
mov
jp
or
andl
add
div
out
mov
cld
inc
enter
clc
xor
lock
mov
xchg
repnz
out
mov
push
add
xorb
mov
cwtl
into
jae
lods
xchg
add
adc
dec
les
popl
addr16
inc
ja
lret
xor
xor
out
xor
and
add
xor
cmp
xchg
mov
aad
enter
mov
or
fadds
adc
mov
lods
or
inc
fildll
fnstcw
cs
test
dec
call
jp
adc
test
mov
or
push
iret
out
jp
hlt
mov
stc
sbb
jno
test
mov
into
lret
out
movsb
jmp
adc
sub
xchg
sbb
mov
or
imull
pop
mov
sbb
out
mov
stc
ja
mov
mov
lahf
mov
mov
dec
adc
addb
sub
pusha
lret
pusha
cmp
mov
jnp
fdivs
mov
out
ja
or
adc
fildl
out
mov
cmp
fsubs
or
push
and
sub
xchg
push
enter
mov
pop
loopne
cmp
and
stos
jne
xchg
in
dec
shl
loopne
or
mov
fsubrl
enter
inc
sub
cmp
inc
xor
fucompp
cmp
pushf
jb
jle
or
sub
push
roll
orb
loopne
mov
push
mov
call
pop
imul
lcall
fsubrs
xlat
mov
clc
cmp
ljmp
sbb
jae
cld
mov
js
cltd
loope
fldcw
out
aam
lret
lods
cld
jnp
dec
mov
addl
push
or
fwait
mov
adc
xor
mov
fcmovnb
mov
adcl
sbb
or
pop
or
mov
mov
rolb
fcom
fwait
cmp
add
int3
pand
push
mov
cltd
sbb
cmp
jnp
cmp
jae
iret
inc
cmpb
orb
imul
xchg
idivb
push
cmp
orl
mov
push
movsl
mov
repz
push
pop
dec
fimull
jnp
imul
xchg
call
stos
adc
pushf
add
add
enter
fistpll
clc
std
add
mov
out
ret
dec
roll
stos
pusha
fstpt
fcmovne
or
imul
stos
xlat
sub
fisubl
cld
sub
pop
mov
lahf
cmp
popa
mov
cmp
dec
stos
flds
sbb
push
ss
dec
mov
inc
add
shrl
lahf
mov
inc
in
xor
xor
lods
xchg
mov
push
push
and
lahf
add
mov
adc
mov
lret
cmp
or
cmc
jecxz
inc
sub
cmp
out
and
imul
or
sbb
test
pop
movsl
repnz
jmp
sbb
fisttpl
dec
sub
push
and
cmc
sub
clc
stos
movsw
xor
pop
cmpsb
push
incb
inc
ret
mov
mov
ret
imul
sub
push
arpl
add
rcrb
and
inc
js
mov
xlat
sbb
call
lret
xlat
iret
xor
stc
dec
fdivrs
push
into
pop
cmp
enter
jmp
pop
int
mov
jae
push
test
sbb
pop
pusha
or
icebp
xor
ret
ja
shl
add
adc
std
loope
test
xchg
mov
inc
or
jecxz
dec
push
push
push
or
or
repz
aam
cmp
pop
pop
in
mov
lcall
jecxz
sbb
rclb
mov
cmp
mov
lret
dec
jg
lods
mov
decl
pusha
out
js
mov
mov
ja
pop
xor
jmp
xchg
in
jns
jg
lret
xor
ja
mov
sarl
test
xlat
dec
mov
and
aam
aad
push
mov
jno
mov
addl
inc
mov
lret
gs
adc
int3
enter
aad
jl
inc
in
push
jge
icebp
loope
sub
dec
lahf
fucomi
sbb
add
cmp
iret
xchg
fwait
push
sahf
jns
adc
cmp
lcall
sbb
jnp
hlt
enter
dec
inc
ja
stos
inc
lods
scas
inc
dec
and
jmp
xor
push
incl
jecxz
outsl
jb
add
ljmp
out
les
clc
lcall
sub
pop
lcall
mov
rcr
out
insl
dec
int3
push
mov
or
sarl
push
cmp
dec
jg
pop
shll
enter
bound
fidivl
aaa
or
or
enter
imul
scas
pop
fwait
jmp
add
mov
fdivs
add
inc
pop
mov
jmp
sub
add
pop
aam
inc
mov
mov
pop
fs
movaps
jb
rorl
push
hlt
and
jo
test
jae
or
lret
aad
xor
pop
xlat
or
out
aam
repz
dec
arpl
pop
mov
or
cmp
mov
in
pop
dec
fisttpl
add
or
movntps
xor
stc
aam
xchg
sti
sbb
mull
fs
cld
jnp
clc
inc
add
ror
add
fwait
and
popf
lods
mov
adc
push
imull
or
sub
cmp
or
add
pop
stos
mov
int3
idiv
push
sbb
lods
dec
push
pop
jbe
and
stc
pop
jnp
jae
ficoml
mov
aaa
push
loopne
sarl
ss
and
jmp
sub
pop
mov
jae
mov
idivl
shl
dec
and
xorb
js
je
fistps
mov
fbstp
jnp
or
jecxz
ljmp
fsub
aam
jo
sbb
or
push
push
insb
sbb
fistpl
lret
pop
adc
cmp
ljmp
mov
xlat
out
adc
jae
dec
or
ljmp
sub
mov
pop
call
addr16
and
test
repz
sbb
jb
in
pop
dec
lock
adc
push
or
cmp
jmp
add
popa
hlt
cltd
fs
rolb
aaa
lret
test
sbb
push
cmp
push
xchg
icebp
imul
mov
jg
push
repz
xor
jne
cs
in
mov
adc
idivl
pop
or
js
mov
and
cmp
clc
dec
icebp
call
dec
dec
daa
and
push
iret
xlat
mov
jnp
mov
sbb
cmp
ret
mov
push
mov
cmpsl
push
ja
or
cmp
mov
movswl
mov
add
sbb
mov
std
imul
add
mov
lret
jmp
mov
loope
or
cmpsb
jg
orl
xor
jno
xor
adc
mov
std
test
aad
sbb
mov
xor
sbb
mov
loop
hlt
out
jl
or
push
mov
incl
cmpsl
mov
int
or
sub
lcall
xchg
cli
pop
out
dec
mov
call
sub
lret
ljmp
insb
push
fwait
adc
add
iret
xor
dec
aad
mov
cwtl
sahf
cmpb
pop
cmp
cmp
jnp
hlt
outsl
mov
sbb
push
sbb
js
test
bound
mov
dec
and
xchg
fidivrl
decb
mov
add
int3
pop
fsub
sar
int
or
stos
xor
rcl
push
cmp
or
in
loopne
jo
add
mov
fldcw
mov
scas
jg
push
lret
push
fmuls
loopne
fldcw
mov
mov
lret
jecxz
test
inc
mov
dec
sub
cs
jmp
iret
aam
and
jmp
out
mov
lret
and
repz
mov
stos
loope
mov
lret
cmp
clc
inc
ja
fcmovbe
imul
jb
fdivl
jbe
cmpsb
jmp
cmp
sub
or
mov
sub
jl
ljmp
cltd
sub
enter
xlat
pop
mov
push
dec
out
dec
or
push
dec
xchg
dec
dec
aam
jnp
dec
dec
or
jns
stos
into
sub
hlt
sub
mov
rcl
pushf
and
inc
jle
and
sbb
xchg
mov
or
sarl
iret
test
lcall
mov
arpl
clc
pop
in
mov
dec
sbb
stos
js
jp
cmp
loope
imull
js
pop
fmuls
or
repnz
pop
pop
push
xor
xlat
or
sub
cmp
sbb
stos
cmp
jns
fincstp
lods
sub
shlb
jle
outsb
dec
scas
pop
out
or
and
cmp
dec
outsb
pop
mov
jle
mov
or
adc
mov
out
xchg
or
cmp
push
out
xor
bound
cmp
popf
push
stos
dec
call
sbb
cmp
mov
inc
sub
add
sub
repz
sub
dec
outsl
dec
jmp
scas
or
push
pop
shrb
cmp
cwtl
lahf
or
cmp
mov
sbb
mov
jl
mov
aam
inc
pop
or
mov
mov
add
subl
xchg
xor
xor
clc
cmp
imul
nop
cmp
push
loop
jae
sub
mov
stos
jp
mov
mov
mov
xor
sub
call
fdivrs
xor
adc
sub
popa
mov
or
xor
jg
add
addr16
xchg
rorb
mov
fisttpl
jg
mov
rcrb
mov
inc
loopne
inc
xchg
imul
push
cmp
and
jb
sbbb
out
and
fidivrl
mov
popf
dec
xor
adc
lock
sbb
and
cs
dec
lret
mov
mov
pushf
outsl
out
and
out
xchg
cmp
xor
lods
jne
dec
mov
jae
fnstcw
inc
xchg
add
out
push
mov
cwtl
and
iret
mov
insl
mov
or
cmp
pop
aad
mov
jae
hlt
dec
ret
jg
sub
mov
jns
inc
fnstsw
or
pop
lock
cmp
hlt
jl
fwait
push
jae
add
ljmp
aam
or
dec
mov
or
stos
repz
dec
mov
or
push
fnstenv
pusha
inc
ret
pop
pop
sub
roll
sub
mov
sbb
data16
ljmp
dec
pop
push
xor
aaa
adc
dec
inc
fidivl
sub
mov
fcomp
call
dec
shlb
jl
jmp
add
jle
inc
arpl
push
mov
pop
jae
enter
loopne
inc
push
inc
test
xor
push
jo
nop
fildl
jnp
lock
xor
mov
or
add
mov
sub
addl
add
push
mov
fwait
incl
mov
imul
mov
ret
and
fld
cmp
push
test
and
mov
jb
inc
cmp
lock
inc
inc
stos
rcrb
push
xchg
sub
fdiv
gs
lret
aad
or
xor
mov
cmp
dec
mov
and
lahf
jnp
in
pop
or
fisttpl
cmc
js
ja
cmp
or
insb
jnp
pop
pop
jnp
or
fistpl
fcomp
or
outsl
clc
cmp
cmp
mov
xor
rcrl
cli
push
cmp
mov
loopne
data16
insl
mov
add
or
and
cmp
in
leave
mov
fildl
test
cmp
sbb
mov
fmuls
cs
push
mov
or
or
mov
jl
dec
fsubrs
adc
enter
xor
push
imul
or
sub
roll
sub
jnp
in
sub
push
pop
xchg
gs
pop
in
lret
ds
lret
add
jo
stos
ret
mov
xchg
mov
xchg
shl
outsb
add
sub
jne
icebp
ret
into
sar
out
inc
andb
mov
fstps
pop
sub
negl
inc
mov
cltd
insb
leave
adc
cmp
mov
outsb
mov
lret
dec
test
jo
xor
mov
pop
add
addr16
adc
lret
dec
and
or
cmp
lret
imul
lahf
lret
ficomps
dec
fnstenv
pop
repnz
or
mov
bnd
and
mov
addl
mov
inc
mov
xchg
lods
push
cmp
xchg
mov
or
jl,pt
or
or
loop
mov
les
lahf
jo
push
mov
js
push
mov
fcompl
frndint
lea
nop
sub
test
cmp
aaa
mov
lahf
js
mov
push
adc
or
iret
mov
pusha
int3
push
aam
jge
mov
enter
mov
xor
sbb
pop
test
adcb
xchg
orb
mov
xor
and
push
sbb
and
in
scas
cmpsl
mov
xor
cmp
call
jo
mov
and
push
pop
mov
inc
sub
outsb
test
add
fisttpl
repz
push
mov
inc
add
jne
xor
fwait
sub
xor
jae
and
pop
mov
dec
or
or
lret
xor
sbb
mov
jmp
andb
adc
mov
test
bound
jg
mov
xor
lcall
push
inc
loopne
cmovno
push
rorl
cwtl
bound
cmp
fucomp
jns
aam
xchg
adc
sub
clc
sub
xor
push
repz
cmp
push
mov
mov
mov
loope
jg
jmp
clc
daa
jge
arpl
lds
inc
hlt
push
int
mov
push
and
or
cltd
adc
xorb
lock
je
push
loope
or
sub
pushf
push
add
xchg
mov
lea
jle
inc
xor
add
or
sub
sub
frstor
inc
insl
outsb
lret
dec
or
repz
push
pop
jg
in
add
sub
push
test
inc
and
ljmp
mov
inc
jo
or
sahf
mov
xor
arpl
pop
mov
mov
or
rol
cmp
sbb
xor
aad
mov
or
and
ljmp
sub
sarl
fisttpll
shrl
shrl
inc
push
out
loopne
sbb
dec
and
push
cmp
adc
xor
sub
int
xor
popf
sar
stos
scas
shrl
or
mov
je
pusha
xchg
clc
outsb
push
lods
mov
or
or
inc
mov
add
or
or
mov
push
mov
xor
jo
xchg
outsb
inc
push
in
test
pop
mov
ljmp
and
xor
xchg
or
xchg
cmpsl
inc
inc
xchg
scas
testl
xor
jns
cmp
mov
and
jno
push
add
fisttps
pop
shlb
loope
lods
icebp
lret
cwtl
test
push
add
shr
and
jg
add
addr16
iret
or
mov
sub
incl
xor
add
aam
sub
pushf
dec
cmp
loop
xor
and
xchg
or
add
or
add
cld
outsb
arpl
repnz
xor
cmp
les
fnsave
jmp
ss
jo
push
or
pop
sbb
jle
or
and
lods
add
push
inc
call
jp
xchg
cmp
pop
scas
ss
movl
jecxz
lret
out
cmp
adc
push
or
fwait
test
or
push
in
jmp
inc
push
xlat
clc
sub
call
clc
stos
mov
mov
mov
lock
lcall
cmp
sub
push
mov
sub
jnp
cs
or
inc
sbb
js
aaa
mov
adcl
xlat
fs
outsl
and
iret
inc
mov
mov
inc
pusha
fmul
stos
ja
iret
inc
mov
fstp
fcmovne
inc
lock
jmp
jo
jmp
fucomi
jmp
xor
imul
adc
inc
sub
mov
and
mov
mov
pop
pop
insl
cmp
inc
das
push
pop
movsl
adc
addr16
iret
pop
in
sbb
fmul
and
mov
mov
xor
jns
inc
cmp
jecxz
aas
xor
adc
mov
push
xchg
leave
fwait
lret
addb
sub
aad
sub
out
add
cmc
inc
xchg
lahf
adc
daa
and
cmpsb
xchg
fists
and
in
std
iret
dec
out
mov
add
dec
or
sub
ja
mov
cmp
loop
jae
jnp
mov
adc
add
xlat
in
pop
mov
mov
push
jo
movsb
or
jo
jmp
imul
jecxz
xor
mov
mov
mov
arpl
mull
scas
pop
dec
adc
iret
outsl
ds
or
or
sub
stos
aaa
movsl
mov
xor
sbb
imul
pop
xchg
xlat
std
xor
lret
pusha
sub
cmp
add
adc
dec
outsb
xor
in
fnop
add
imul
ja
pop
mov
test
sbb
cmp
ss
inc
jbe
mov
mov
fwait
xor
clc
ret
push
adc
outsb
add
fmuls
add
jnp
hlt
mov
inc
add
xor
and
sub
or
add
jnp
and
dec
cmp
xor
cltd
mov
add
and
ja
enter
pusha
ja
aaa
outsl
iret
icebp
mov
mov
fldt
ret
add
inc
jmp
inc
sbb
add
xchg
push
and
cmp
fdivr
loopne
cmpl
out
and
xchg
sbb
jnp
mov
stos
scas
test
sbb
or
cmp
hlt
xor
push
out
jg
add
repnz
out
inc
jb
aad
ror
add
cmc
xorps
ret
cmp
push
xor
sub
ja
xchg
ret
or
movaps
lcall
mov
les
arpl
cmp
jmp
jns
cmpsb
mov
add
sbb
rolb
scas
jp
push
xor
or
aaa
fidivl
faddp
dec
sbb
adc
mov
cmp
inc
sub
xor
or
stc
inc
clc
lcall
loope
aaa
ret
cwtl
lret
mov
xchg
fwait
cmpsb
xchg
sbb
xchg
fnstenv
addr16
cwtl
mov
lret
pop
arpl
mov
jl
jmp
mov
mov
or
mov
lcall
mov
sbb
jnp
dec
pop
xlat
sbb
rcrl
sbb
xor
mov
push
sbb
ret
jnp
xchg
rcll
icebp
enter
sarb
xor
hlt
mov
and
lock
add
imul
imul
cmpsb
mov
es
daa
adc
or
push
ljmp
mov
inc
fyl2x
or
stos
dec
sbb
sub
stos
mov
mov
mov
dec
mov
mov
mov
pop
dec
ret
dec
ret
test
lds
push
ret
fstp
sub
inc
add
xchg
test
call
push
sub
lcall
mov
mov
lock
aad
and
insl
xor
jo
push
pusha
iret
iret
cmp
fisttps
imul
dec
mov
lcall
mov
adc
test
sub
iret
push
push
or
inc
sub
mov
and
iret
scas
leave
fbld
sub
push
jnp
xchg
nop
jb
sbb
fimull
jnp
cmp
add
call
or
mov
add
stos
adc
jg
stos
pop
add
imul
hlt
sub
dec
mov
cmp
dec
jb
xchg
xor
ss
rcl
rorl
sub
add
jge
leave
dec
adc
sub
sbb
cmp
cmp
sbb
dec
les
ja
ja
sub
ja
sbb
jae
fnstenv
xor
lcall
push
xor
stos
cmp
cmp
dec
pop
pop
cltd
fwait
mov
sbb
pop
out
out
mov
and
mov
xchg
in
add
js
cmp
mov
jmp
test
fucompp
mov
rcll
mov
or
or
in
pop
ja
xor
or
fnstenv
xor
mov
sub
inc
movsl
sbb
jmp
test
jae
cmp
ja
aam
in
mov
sub
jbe
dec
and
testb
outsl
or
sub
movsl
jne
repz
icebp
or
push
addb
mov
outsl
jae
cld
and
aaa
mov
mov
aam
add
jecxz
inc
shlb
jne
mov
fbstp
int
cmpsl
push
sub
ja
mov
mov
shr
in
lods
ja
dec
push
push
jmp
arpl
negl
jg,pt
ret
imul
and
sub
cmp
fimuls
and
mov
mov
repnz
push
repz
mov
inc
mov
sub
adc
dec
dec
push
mov
add
cmp
and
sub
pop
cmp
cli
out
jmp
xor
cmp
rcr
clc
xchg
xor
cmp
or
mov
inc
xor
mov
xor
cwtl
cmpsl
sbb
dec
mov
cmp
fsubs
jge
arpl
mov
stos
das
dec
xor
jae
adc
inc
push
fcmovb
scas
es
lahf
shlb
pop
cmpsb
pop
push
inc
dec
lock
jl
jmp
test
test
mov
imul
jne,pn
or
jne
lret
mov
pop
xor
push
cmpl
push
or
or
and
or
inc
popf
test
pop
loop
lret
dec
add
and
call
sbbl
sbb
sub
inc
pop
add
or
add
inc
adc
lret
pop
push
fisubrs
sub
inc
mov
js
push
xor
stos
das
dec
and
jg
bound
fldln2
sub
rorb
inc
insl
and
jle
out
pop
add
inc
sub
inc
loope
or
lock
mov
mov
mov
rclb
jecxz
adc
cmc
sbb
stos
outsb
aam
andb
lods
dec
movsl
aas
imul
cltd
and
adc
aad
xorl
cmp
rcrl
pop
repz
test
pusha
cmp
ljmp
aam
jp
sub
cmp
adc
orl
cmp
bound
loopne
rcrl
loopne
lock
add
enter
insb
lret
lret
mov
mov
fmuls
or
dec
ror
xchg
outsb
fiadds
call
or
fcomps
add
or
cltd
aad
xor
dec
ljmp
and
mov
mov
js
add
rclb
xor
sbb
inc
dec
stc
int
scas
xor
sub
out
cwtl
mov
cmp
dec
xor
aad
push
xlat
adcl
stos
jmp
adc
xlat
js
out
pusha
jae
cmp
push
lock
sub
test
adcb
or
mov
inc
lea
xchg
jne
sub
aad
or
sub
or
xor
ss
mov
mov
vaddps
in
pop
sti
call
push
cmp
push
sub
push
jnp
cwtl
sub
mov
iret
ficomps
fcom
stos
pop
cmp
fildll
ret
orb
jmp
or
push
pop
fstps
pop
xchg
pop
or
stc
pop
jp
out
dec
mov
pop
fidivrs
les
push
push
adc
negl
callw
push
and
fs
cwtl
fwait
stos
mov
or
movsb
adc
sahf
or
int
addl
push
js
mov
add
into
daa
inc
mov
lods
mov
push
or
mov
and
mov
push
call
ljmp
cld
xor
adc
mov
in
inc
cmpsl
cmp
xor
pushl
mov
daa
lcall
jg
movsb
pop
clc
mov
in
shrb
adc
jno
adc
sbb
lock
pushf
shl
push
pop
mov
popf
jbe
icebp
call
movl
not
setp
pusha
setae
lea
call
lea
jne
rol
movzbw
rol
sub
lahf
cmc
bsf
mov
bt
shl
add
pusha
mov
pushf
lea
jmp
movl
setg
pushl
lea
mov
jmp
mov
push
cmc
cmp
pushl
pusha
mov
lea
jbe
and
cmp
bsr
call
cmc
jmp
add
inc
js
je
jb
arpl
jae
call
adc
cwtl
jmp
lret
or
sahf
jmp
xorb
out
test
jnp
jmp
rclb
pop
mov
jge
push
lahf
mov
scas
idivl
sti
aam
das
xor
lods
xchg
lock
add
ret
out
jle
pop
jg
cmp
push
add
jle
shll
lds
jne
xchg
in
inc
xor
insb
fnstcw
lret
mov
push
lahf
test
mov
and
cmp
xor
inc
sbb
mov
out
stc
stc
sti
jmp
mov
cmp
xchg
add
xlat
add
popf
frstor
cmp
jp
out
mov
fists
dec
inc
adc
repnz
cmc
les
cli
push
mov
pop
xchg
cmp
cmpsl
jno
mov
mov
and
lea
inc
gs
add
add
mov
sti
pop
jns
push
out
lea
movsl
fsubs
int
popf
sub
xor
fisttpll
cmp
xchg
pop
imul
and
icebp
loop
fcmovne
lahf
mov
add
sub
popf
fsub
xchg
mov
ljmp
pcmpgtd
push
lret
xchg
mov
mov
out
jle
dec
add
jbe
push
icebp
aas
mov
ds
sbb
mov
mov
sub
test
out
push
iret
mov
pop
jecxz
and
sub
or
aam
pop
pop
mov
pop
push
mov
fildl
add
sub
call
call
pushf
push
mov
lahf
pop
movsbw
jmp
aaa
shrd
mov
bt
test
push
lea
je
bswap
cmp
shl
neg
mov
movsbw
bt
not
add
inc
mov
cmp
stc
clc
test
pushf
jmp
neg
bsr
adc
mov
test
call
add
sub
rol
mov
cmc
test
cmpb
call
jmp
lea
jne
neg
xor
lea
clc
mov
sar
jmp
pushf
mov
call
pop
push
xchg
in
mov
xchg
dec
mov
pop
dec
mov
adc
push
or
aaa
push
mov
loopne
cmp
rcrl
or
mov
add
hlt
sti
add
mov
xchg
xor
std
and
sbb
rcll
adc
adc
ret
repz
testb
mov
sahf
xchg
daa
sub
pop
or
in
inc
xor
mov
rcll
cltd
sub
fmull
int3
mov
mov
sub
adc
dec
pop
add
inc
push
cmp
test
xchg
mov
and
inc
int
push
movd
mov
push
aad
mov
mov
fisubl
fnstsw
in
mov
pop
movsl
lcall
imul
out
mov
jno
mov
dec
adc
outsb
jb
adc
xor
push
jae
rorl
js
and
iret
fisubl
mov
enter
jae
mov
lret
cmpsl
xchg
je
mov
push
fidivrs
stos
adc
out
and
lods
pop
hlt
adc
cmpsb
or
out
inc
das
pop
or
cs
and
and
jne
in
add
in
adc
push
and
inc
pushf
push
sub
jo
pop
cwtl
int3
xor
jo
mov
jl
mov
pop
cmpsb
stos
mov
loop
pop
in
sbb
xchg
out
in
inc
sbb
jb
enter
jl
repnz
pop
xchg
mov
mov
outsl
mov
mov
hlt
in
sbb
addl
lods
aaa
stc
cmpl
lds
dec
lcall
or
movsb
ss
or
add
or
nop
dec
sbb
addr16
sbb
in
ja
add
pushf
add
sbb
or
xchg
push
cltd
add
dec
inc
lret
add
clc
sub
jns
leave
fimuls
jge
and
cwtl
jmp
mov
xor
pushf
popf
rcrb
ss
sub
enter
nop
cmp
daa
dec
add
int
out
roll
add
and
addr16
stos
sbb
pop
adc
scas
xchg
inc
adc
js
sub
loope
aam
push
mov
or
into
mov
or
inc
pop
sbb
out
cmpsl
clc
mov
insl
les
pop
bnd
mov
daa
sub
mov
adc
test
faddl
inc
mov
inc
mov
scas
add
mov
jns
and
out
mov
fwait
mov
and
dec
push
fwait
and
xchg
jmp
in
movsb
sbb
imul
inc
fnstcw
cmc
add
xchg
pushf
jmp
cmp
outsl
sub
sbb
das
push
lahf
sbb
push
push
lret
fdivl
movsl
arpl
push
jmp
push
cmc
mov
clc
call
mov
test
jmp
call
test
pushf
pusha
lea
je
pushf
pushf
call
lea
jne
bswap
mov
pusha
pushf
push
pushf
lea
jmp
adc
mov
push
call
movl
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
test
jmp
testl
out
pop
jmp
fildll
mov
outsl
push
add
dec
fs
imul
out
std
jl
inc
mov
jl
lahf
shrl
sub
jnp
dec
out
inc
stc
sub
or
push
fnstcw
out
jl
jo
sahf
and
inc
lea
jne
or
push
mov
xor
inc
cwtl
mov
outsb
mov
push
pushf
pushw
popfw
mov
push
pusha
inc
call
push
lock
std
std
mov
addr16
mov
ret
jae
movsl
dec
int3
lahf
insl
and
or
push
ss
movswl
cmp
sar
dec
es
aam
pop
ret
add
ljmp
daa
test
jl
lcall
out
inc
xchg
mov
movsl
mov
pop
pop
jle
mov
pop
sbb
jmp
adc
dec
mov
push
pushl
pushl
ret
pushf
mov
push
movzbl
movsbw
xchg
mov
bswap
lea
not
mov
lea
jnp
pop
pusha
movb
pushf
pushl
ret
push
xor
mov
push
fmul
lock
sbb
and
imul
int
loopne
int
cmp
push
mov
movsl
jne
rcr
dec
in
dec
fsts
test
push
cld
jno
imul
arpl
cwtl
jns
adc
mov
and
xchg
icebp
mov
inc
dec
push
inc
xorl
xchg
loope
cwtl
push
cld
jo
and
stc
and
leave
mov
aas
push
fistpll
pop
int
add
sub
dec
xor
xlat
mov
stc
xor
loopne
out
jmp
les
mov
sub
push
mov
mov
inc
or
mov
andl
inc
cmp
push
xchg
pop
addl
dec
inc
mov
sub
sub
jnp
xor
pop
sub
add
fs
imul
add
jl
add
fs
ja
push
bt
bt
imul
push
pusha
push
call
test
add
cmp
cmc
sbb
push
inc
data16
std
int
cmp
jae
std
push
sub
idivb
mov
dec
mov
dec
dec
push
adc
hlt
mov
in
push
mov
jbe
jmp
cwtl
cmpsl
mov
mov
mov
adc
pop
mov
cmp
pushf
sub
sarl
add
loopne
les
xchg
adc
sbb
adc
test
cmpb
pushf
lea
jne
shrd
sub
rcr
mov
call
lea
movl
movl
pusha
jmp
mov
push
lea
jmp
jmp
js
adc
mov
ja
jae
mov
mov
adc
pop
push
push
push
or
bnd
jae
jmp
add
push
adc
and
or
idiv
inc
xor
xchg
and
xorb
sahf
stos
js
lods
push
mov
jl
mov
mov
icebp
jmp
push
mov
in
xchg
sbb
inc
push
into
das
popf
or
xchg
inc
test
repz
outsb
roll
sub
mov
mov
test
mov
pusha
stc
clc
add
call
xor
imul
dec
dec
push
nop
lods
cli
in
arpl
stc
test
test
ret
loop
pop
or
jmp
aam
and
jp
ret
dec
shr
cmpsl
and
lods
mov
push
adc
pusha
pop
sub
mov
dec
jbe
lcall
push
stos
add
jmp
dec
ror
and
sarl
ljmp
loope
rclb
fwait
test
push
mov
xlat
and
mov
dec
cld
es
popa
and
lock
nopl
hlt
adc
mov
inc
nop
popf
pop
mov
adc
jae
push
sti
pop
and
iret
mov
fdivrl
mov
jmp
daa
xchg
gs
push
shll
add
addl
aam
xchg
mov
mov
jg
push
lahf
mov
ja
dec
fildl
or
lcall
fisubl
int
jecxz
es
dec
jno
mov
mov
and
jg
clc
pushf
cwtl
bound
lret
ret
or
lahf
cmp
cli
add
jno
mov
dec
data16
int3
jne
add
mov
push
jecxz
fldt
jbe
jmp
push
clc
mov
loop
scas
inc
add
xchg
pop
push
and
jo
loop
nop
fs
stos
out
mov
xor
mov
shrb
movsl
imul
xor
cmp
test
aad
inc
jl
lret
loopne
push
pop
jbe
sub
and
and
outsl
sub
stc
loopne
sub
fs
push
lea
jne
pusha
shl
stc
sub
sub
lahf
das
mov
rol
not
add
or
rol
inc
mov
cmc
bt
test
jmp
add
dec
gs
popa
addr16
outsl
js
add
je
xor
popf
pushf
call
cmc
test
pushf
movb
lea
je
pushf
add
pushl
pushl
clc
cmp
mov
lea
jb
call
call
push
sbb
mov
test
mov
and
jno
shrb
loop
testb
cmp
mov
jmp
lcall
rcr
or
jnp
mov
lahf
rorb
pop
pop
and
cwtl
and
mov
xor
in
lods
push
outsl
dec
sub
test
lods
mov
mov
push
mov
add
lods
lods
into
mov
or
mov
xor
fmul
mov
outsl
dec
inc
pop
cmp
scas
lret
sub
lods
fwait
stc
divb
xor
or
sbb
std
push
pop
mov
xor
jg
jnp
enter
sbb
xor
pop
pop
or
popa
rorl
xchg
push
cltd
or
sti
jl
adc
lret
shrb
or
push
or
daa
aad
inc
mov
push
mov
xor
pushf
jns
xchg
ret
es
push
pop
outsb
mov
ljmp
xor
sbb
xorl
outsb
dec
loop
mov
sbb
xchg
or
and
in
xor
jae
rcrb
sbb
cmp
mov
fmull
xor
lret
ja
xlat
rolb
adc
sbb
adc
mov
dec
mov
pop
mov
xor
fs
mov
jmp
add
push
lahf
pop
add
lret
adc
sbb
add
push
sbb
add
dec
adc
add
dec
pop
in
clc
mov
push
xchg
rclb
jns
fistl
sahf
sub
imul
mov
push
imul
or
lods
clc
in
aad
inc
push
xchg
pop
adc
push
pop
sbb
inc
push
shlb
mov
mov
mov
into
mov
imul
popf
mov
loope
push
xchg
jg
pop
scas
sbb
out
jmp
push
mov
icebp
sbb
mov
les
pusha
mov
imul
cli
inc
subb
ffree
test
clc
or
pushf
jmp
jmp
add
dec
pop
lods
mov
xchg
pop
sbb
out
sub
sbb
andl
in
cmp
sub
stc
lods
cld
fisttpll
sbb
push
add
inc
jno
int3
inc
jmp
inc
fcmovnb
mov
je
hlt
pop
dec
sbb
adc
cmp
fs
mov
push
cmpsl
out
enter
mov
icebp
mov
bt
stc
stc
test
sub
cmc
jmp
adcb
stc
mov
nop
stos
xchg
sahf
fwait
imul
test
mov
inc
lret
loopne
pop
xchg
sahf
xchg
ret
mov
enter
loope
sub
jmp
jns
je
sahf
dec
out
sub
fistps
add
in
xor
or
or
pop
in
lcall
xchg
stc
or
iret
mov
push
xchg
mov
xor
cs
push
adc
push
dec
jmp
bound
clc
icebp
mov
lea
or
pop
sub
mov
cmp
mov
xchg
lret
daa
pop
push
cmp
movzbw
lea
pop
cwtl
bswap
lea
mov
pusha
jmp
inc
mov
outsl
das
mov
adc
fcom
aam
sub
dec
pop
sub
hlt
jmp
sub
lods
loope
adc
xchg
mov
lret
hlt
std
inc
test
push
add
or
lea
push
into
popf
fs
fistl
and
or
repnz
sbb
push
xchg
cld
loopne
inc
xchg
cmpsl
xor
jecxz
movsl
loopne
mov
push
mov
fstp
pusha
pushl
movl
pusha
pushf
movl
pushf
pushf
pushf
push
lea
jmp
loope
ret
add
enter
push
xchg
cmp
out
push
cs
jo
jnp
pushf
mov
clc
stc
xor
xchg
insl
scas
clc
in
xor
pop
adc
fisubl
and
movsb
sbb
es
push
lahf
xor
mov
and
cmp
pop
xor
push
pop
add
cmpsb
inc
pop
dec
movl
push
pushl
pushl
popl
push
mov
push
pushl
ret
or
pusha
lea
je
pushf
test
cmp
pusha
movw
lea
jne
call
add
dec
outsl
arpl
inc
jb
add
mov
mov
sti
mov
test
iret
stos
pusha
sbb
jl
imul
daa
test
dec
stos
out
js
sti
and
lods
ret
inc
ficomps
scas
sub
dec
ret
adc
mov
add
sub
jge
loope
in
gs
orl
mov
pusha
mov
xchg
nop
add
pop
xchg
jle
xchg
data16
cmp
repnz
add
fsubr
movsb
inc
lret
ja
jl
rcrl
js
sub
cmp
je
cmp
inc
push
dec
andl
dec
dec
mov
pusha
pushl
ret
js
popa
cld
mov
mov
pop
jnp
jmp
fs
xchg
push
push
repnz
mov
fldenv
leave
pop
fwait
sub
and
xchg
scas
insb
xchg
fdivl
leave
pop
dec
sub
sahf
inc
push
sbbl
arpl
or
dec
add
arpl
push
or
mov
ficoms
sti
outsb
leave
add
lea
pop
loopne
add
sub
jmp
add
add
push
orl
and
subb
mov
lea
jmp
pushf
pushf
cmpb
call
bswap
mov
not
setae
pop
pusha
mov
lea
setnp
setg
mov
movb
mov
pushf
mov
pusha
mov
push
pushl
ret
pop
xchg
cld
std
mov
xchg
int3
decl
jle
nop
int
std
in
cmp
dec
add
stc
test
dec
mov
pushf
lock
add
mov
imul
xor
les
inc
mov
aam
scas
jmp
mov
pop
add
mov
clc
inc
cmp
push
mov
push
movl
mov
pushl
ret
cmp
std
mov
mov
in
or
addr16
out
or
mov
push
add
mov
addr16
mov
push
aad
add
jb
mov
dec
inc
jb
xchg
test
fsts
call
adc
mov
lods
mov
push
lea
mov
dec
inc
pusha
push
call
fldt
adc
pop
mov
movsb
cmp
add
stos
loope
adc
loope
sti
fs
jg
add
cmp
xor
add
cmp
imul
scas
cld
mov
and
dec
xchg
mov
mov
call
faddl
mov
adc
push
test
inc
dec
jp
push
mov
or
pushf
push
fs
sub
repnz
push
add
sub
repnz
mov
fimull
push
insb
jae
movsb
fmuls
ljmp
jle
out
xchg
cmp
fistl
test
or
mov
cli
clc
or
out
mov
test
mov
insl
xor
inc
or
jecxz
xchg
es
and
mov
mov
call
nop
mov
cmp
add
xor
mov
dec
movb
xor
push
sbbl
mov
and
sub
mov
xchg
loope
pop
je
mov
sub
cmp
sub
adc
mov
in
out
or
cs
bound
fisubl
and
xchg
in
mov
imul
in
xor
pop
mov
push
movl
pusha
movb
lea
jmp
ret
cmp
mov
cmp
xchg
mov
sbb
and
sub
sbb
jb
jge
incl
xchg
jb
imull
xchg
and
jbe
andb
mov
xor
add
sub
lods
mov
mov
jmp
inc
arpl
dec
std
mov
mov
and
scas
push
andl
pushf
fwait
dec
lret
sbb
ret
mov
vminps
jnp
xor
pop
arpl
or
or
mov
push
daa
nop
or
and
mov
hlt
lcall
inc
ret
inc
add
mov
sbb
mov
sarb
lret
loopne
call
scas
and
scas
cs
out
daa
xchg
in
ja
cmp
pop
aad
stos
jno
add
cmp
inc
and
std
pop
add
mov
in
movsbl
lea
jmp
pusha
pushf
movl
pusha
push
lea
jmp
pushf
mov
lea
ja
cmc
imul
pusha
movb
cmc
add
pushf
pushf
pushf
lea
jmp
call
pusha
lea
jne
not
pushfw
rcr
cmc
call
cmp
add
imul
cs
cmpsl
add
lret
mov
les
iret
jp
leave
call
jo
jb
and
leave
std
sub
mov
mov
jae
xor
je
test
jnp
jge
ja
arpl
and
adc
push
inc
xor
inc
mov
rorb
insb
and
pop
jb
push
fbld
mov
andb
add
shl
cmp
mov
lds
and
push
adc
push
jg
jmp
pop
xchg
fdivrl
fs
mov
iret
lock
mov
push
adc
lock
popf
out
leave
sub
cli
inc
jb
push
inc
jns
pop
mov
push
cs
clc
repnz
jmp
pusha
cmc
pusha
imul
pushf
add
push
lea
jmp
push
rep
pop
pop
pop
mov
pushf
pushf
pushf
lea
jmp
not
pusha
not
inc
push
inc
seta
jmp
mov
lea
jb
cmc
pusha
bt
cmp
call
pushl
lea
je
jmp
mov
jmp
lea
je
stc
sub
pushf
cmp
jmp
fwait
add
movsb
add
jo
cwtl
mov
repz
mov
neg
popa
hlt
or
rol
mov
std
mov
fnstenv
mov
mov
push
stos
mov
stos
jge
mov
add
sbb
lds
adc
rcrl
scas
push
pop
orb
dec
gs
or
je
mov
mov
addr16
jno
movsb
arpl
push
pushf
pushl
ret
pusha
movw
mov
jmp
clc
repnz
push
pushl
push
call
lea
je
call
je
or
movsb
add
pop
dec
adcl
jmp
das
jge
hlt
sti
out
and
les
daa
and
lods
xchg
in
neg
pop
shl
lea
aam
rol
mov
xchg
ret
test
cs
outsb
dec
dec
lods
xor
stc
rolb
push
sbb
push
dec
sub
add
leave
dec
pop
arpl
dec
cmpsb
jmp
call
sub
mov
pusha
call
add
out
add
cwtl
sub
xor
cltd
fdivrl
popf
jb
sbb
push
fdivr
cmp
mov
movhps
push
xor
sub
pushf
add
loop
scas
mov
push
je
aad
pcmpeqw
mov
lods
pop
arpl
jae
lods
mov
out
nop
testb
inc
imull
daa
ja
dec
cmpsl
xor
ficompl
cld
add
vrsqrtps
mov
xor
fldt
daa
pop
push
mov
xor
and
xchg
xchg
and
push
adc
icebp
pop
loope
mov
data16
jae
inc
imul
jmp
jno
gs
aas
adc
jmp
cs
xchg
imull
out
es
imull
xlat
xchg
pop
push
cwtl
movsl
push
daa
mov
mov
jl
inc
sub
test
pop
orl
mov
rolb
mov
faddp
xor
stc
jmp
push
sub
movb
call
cmp
call
adc
add
add
std
ja
imul
pusha
cmp
mov
cmpsl
inc
fsubs
cs
fisttps
ficomps
loop
cld
mov
mov
in
jae
push
ds
or
xor
les
cmp
loopne
rorl
mov
fistpl
xchg
mov
not
mov
lea
pushf
lea
call
pushf
mov
mov
pusha
lea
jmp
sahf
jne
add
je
movsb
fstp
int
cmp
scas
dec
rcrb
leave
addr16
xor
add
mov
add
push
mov
or
mov
das
inc
add
sbb
adc
rcr
inc
sbb
int
cltd
xchg
mov
dec
rorb
fstps
movsl
sbb
arpl
repz
test
mov
subb
je
or
cwtl
out
out
pushl
ret
and
je
arpl
enter
xor
dec
insl
cmpsb
clc
xchg
in
add
repz
jl
daa
icebp
in
mov
mov
mov
insb
mov
or
and
inc
ja
aad
jp
and
out
add
jae
js
push
cld
dec
call
mov
loope
shl
sbb
bnd
lods
mov
or
xchg
push
and
xor
jnp
xchg
jl
mov
repz
jnp
insl
outsb
xchg
mov
scas
lock
jle
mov
or
bound
decl
test
sub
pusha
pusha
cmp
mov
lea
ja
jmp
lea
call
jmp
pusha
pushl
or
mov
jmp
jmp
add
mov
and
insl
in
pop
aad
pop
lds
mov
pop
clc
mov
jmp
ss
or
adc
xor
movsl
inc
inc
or
sbb
in
mov
sub
push
push
cmp
in
pop
or
push
add
rcr
adc
pop
fs
subb
jbe
data16
adc
push
and
mov
sbb
pop
jecxz
cmp
xchg
lods
mov
push
cmc
mov
sub
movsb
add
pop
outsb
in
jne
xchg
fldl
adc
push
sbb
dec
subb
or
loopne
sbb
jge
incb
cmpsb
mov
jmp
rcrb
outsb
jnp
stc
imulb
cli
aam
imul
dec
push
call
push
xor
in
stos
es
call
lea
add
out
cmp
mov
movsb
fsubrs
cltd
rep
dec
dec
pop
mov
xchg
mov
roll
pop
movsb
add
loope
push
pop
inc
lods
xor
stc
scas
push
insb
mov
mov
xor
inc
inc
dec
xor
iret
and
or
xchg
ficompl
sub
sbb
lahf
lret
cmp
scas
xor
insb
jnp
cltd
and
mov
int
movsl
mov
mov
test
xchg
or
cmp
mov
divl
imulb
dec
xchg
loope
shrl
lret
push
icebp
push
cli
insl
push
pop
xchg
lods
mov
or
movsb
add
add
dec
push
test
inc
sub
add
outsb
or
pop
inc
xorb
insb
loopne
xchg
insb
call
call
adc
and
out
mov
push
or
jge
lret
repnz
push
std
push
mov
mov
pop
push
aaa
rcll
cmp
sub
and
pop
add
insb
outsl
pop
stos
inc
or
inc
mov
adc
mov
faddl
pop
mov
dec
lea
xchg
fstl
stos
lock
negl
aaa
repz
push
mov
add
scas
sbb
adc
mov
loopne
xchg
or
imul
mov
cmpsb
ret
sbb
pop
mov
mov
mov
jae
std
jbe
insb
outsl
adc
mov
push
push
adc
rolb
jg
and
cmp
fwait
int3
cmp
dec
push
sub
sbb
fucomi
add
jbe
sub
or
in
pop
mov
mov
adc
sub
sub
sbb
idiv
cmpb
call
ficoml
or
mov
sbb
mov
inc
fwait
mov
sti
xchg
fildll
in
adc
add
mov
push
cli
imull
nop
xchg
mov
inc
mov
js
xor
sub
xchg
inc
sarl
sti
xor
or
divb
pusha
movsl
mov
pop
cs
loopne
sbb
sbb
dec
dec
dec
mov
jnp
dec
xor
xor
icebp
push
sub
lock
sbb
jnp
rclb
pop
fs
push
dec
xchg
popf
or
mov
and
mov
add
add
ret
into
pop
sub
adc
mov
ret
fucomip
movsb
sub
test
cmpsb
dec
push
pop
xchg
int
sub
stos
pop
inc
sub
or
or
mov
jl
and
xor
inc
jno
out
pop
arpl
cmpl
xrelease
fdivrl
xchg
cmp
adc
push
cmp
sbb
xchg
rorl
daa
imul
or
scas
ror
loopne
push
gs
pusha
sub
and
or
fucomp
out
sbb
scas
rcrl
inc
xor
in
loop
cmp
adc
adc
cmpl
add
or
movsl
jg
outsb
insl
jle
lods
mov
push
sub
out
adc
add
cmpsl
push
sub
mov
push
jmp
inc
xchg
pusha
ljmp
push
ss
mov
lret
movsb
sub
js
jbe
inc
dec
sbb
outsb
dec
rorl
das
sti
push
js
std
cld
in
dec
pop
bt
jle
test
lcall
mov
mov
cmp
sub
lods
loope
dec
or
das
lret
and
fistpl
and
and
mov
leave
dec
pushf
dec
cmp
jge
xchg
filds
shl
cli
shl
jbe
ja
sub
mov
cmp
mov
push
mov
dec
jp
movw
movsbw
lea
not
mov
call
inc
dec
pop
or
add
push
sbb
dec
push
fcomp
cmp
icebp
add
dec
popa
cmpb
push
and
sbbb
dec
xchg
sub
cld
aaa
xchg
and
jle
jnp
loope
or
jno
pop
dec
xor
cmp
xchg
lods
mov
add
test
loope
movsb
add
mov
movl
stc
jge
jo
psraw
ret
pop
dec
cs
pop
dec
outsb
xchg
jecxz
mulb
movsb
je
enter
dec
mov
ficoml
push
mov
fisttpl
fnstcw
idivl
xchg
clc
adc
mov
and
rcl
pop
push
jne
das
mov
jns
fidivl
xchg
or
pop
mov
or
lods
daa
push
iret
or
and
mov
xor
xor
adc
sub
inc
inc
pop
imul
and
jl
ret
sbb
jns
sub
jmp
popf
adc
popa
mov
loopne
mov
xadd
lcall
in
pop
pop
inc
pop
adc
add
stos
ss
cwtl
push
xchg
add
stos
pop
sub
jne
repz
cs
add
cs
mov
sub
fiaddl
or
and
mov
ja
push
mov
xorl
roll
fwait
mov
sti
pop
xor
inc
mov
cmp
ss
mov
ret
mov
icebp
or
lock
inc
dec
sub
inc
cmc
mov
lret
jge
pop
inc
loope
adc
fwait
leave
test
jmp
scas
xor
and
imul
or
and
les
ss
mov
or
push
cmp
and
scas
jmp
pushf
push
pushf
lea
jae
neg
rcr
pushf
xchg
mov
pop
mov
shl
dec
neg
setb
mov
pusha
clc
xor
add
jg
bt
repnz
jmp
lea
jle
cmp
call
repz
call
call
clc
mov
jmp
cmc
xor
cmc
push
mov
bt
cmp
jmp
jmp
in
jl
movsb
add
push
xchg
mov
adc
jmp
xor
scas
dec
sti
bnd
addr16
xchg
lret
mov
add
cmpl
adc
pop
dec
push
jb
negl
dec
sub
mov
out
cs
loopne
cmp
pop
push
into
aad
leave
sub
mov
jl
arpl
and
inc
mov
idivl
hlt
arpl
aas
shrb
stc
and
inc
mov
sbb
lea
je
call
pusha
dec
sbb
movsb
add
or
pop
mov
jle
pop
aam
cwtl
xchg
hlt
int
mov
lret
inc
loop
mov
into
lds
sbb
ror
mov
adc
add
and
outsl
imul
pop
add
mov
std
add
out
jmp
negl
push
scas
pop
cld
aas
addr16
pop
orb
adc
lret
leave
repnz
sbb
nop
sarl
hlt
in
xchg
sbb
movsb
add
lret
pop
sub
inc
inc
test
push
sub
leave
adc
sti
pop
inc
rcl
out
pop
fdivl
insl
scas
addr16
test
in
mov
mov
adc
mov
push
jnp
pop
movsb
sbb
sahf
mov
push
inc
add
push
add
push
add
and
inc
jmp
add
jbe
adc
movsb
add
jecxz
stc
sub
push
mov
test
push
enter
sub
addl
fst
incl
push
repz
inc
and
or
imul
scas
push
or
adc
jp
lods
adc
notl
add
jmp
fsubr
outsb
cmp
sub
pusha
push
and
add
rcr
cmc
dec
push
sahf
pop
cmp
push
push
mov
inc
push
pop
das
sahf
pop
jp
push
xchg
or
and
push
mov
lea
je
call
in
mull
sahf
enter
into
insl
cmp
jecxz
aad
sub
cmp
mov
bound
fstpt
fstl
mov
pop
loop
sahf
lret
sti
jnp
push
cmp
idivl
jecxz
inc
int
out
stc
stos
mov
mov
push
pop
sbb
sub
pop
push
mov
jp
jl
jmp
daa
adc
int
jmp
mov
repz
js
cmp
cmp
dec
pop
call
sbb
push
dec
adc
adc
aad
push
push
and
fidivl
sahf
in
scas
mov
aas
jecxz
mov
fdivrp
cmc
jle
mov
fdivr
test
jmp
sbb
cmp
cmp
shll
mov
call
dec
dec
test
or
push
dec
push
and
mov
or
inc
lret
or
xor
shrl
pop
das
sbb
lock
push
enter
push
mov
push
insb
sbb
addr16
idivl
fcmovbe
add
xchg
inc
mov
dec
push
jmp
or
mov
fucom
cmp
addl
jno
or
pop
out
push
inc
inc
mov
sahf
or
aad
ret
mov
and
push
or
sub
pop
pop
dec
scas
ljmp
shlb
or
jo
lock
sbb
cltd
and
or
das
xchg
stc
xchg
mov
ret
jmp
cltd
fwait
dec
fistpll
stc
sahf
add
jno
shrl
lcall
and
iret
lods
mov
sub
xor
clc
stc
xlat
lcall
jmp
stc
or
push
clc
xor
fcmovbe
fwait
xlat
mov
xchg
sti
cld
inc
sbb
aam
xchg
clc
mov
lods
fsubrs
inc
add
add
push
fildl
fucom
mov
inc
mov
das
loop
lret
or
and
xchg
cmp
add
push
xor
sub
sub
rol
rcr
jl
xchg
or
stos
or
cmp
pop
xchg
mov
popf
fdivrs
push
stc
or
fidivl
mov
cli
div
inc
repz
mov
xchg
pusha
add
jnp
pop
pop
xchg
daa
std
loopne
imul
xor
or
movsl
push
jae
and
jbe
jb
mov
arpl
xchg
movsl
lahf
sbb
ja
ljmp
adcb
aad
mov
aam
lcall
gs
clc
pop
aam
cwtl
inc
sti
gs
mov
xchg
jmp
into
js
leave
aaa
cli
jecxz
fcomip
aam
imul
aad
rorl
cmc
sti
aaa
jmp
xchg
fcmovb
or
in
dec
adcb
sbb
xlat
js
xlat
mov
xlat
mov
ret
gs
pop
pop
fisttps
lods
dec
pop
mov
arpl
test
pusha
mov
pusha
mov
xor
push
xchg
stos
mov
scas
sub
ret
mov
loopne
sbb
sub
ret
insb
or
mov
mov
cmp
in
push
cmp
push
mov
js
add
mov
jb
jo
push
sbb
shll
out
ret
mov
jno
xlat
inc
push
jae
jae
sub
or
outsb
jecxz
bound
xlat
cli
xor
stos
jb
rcr
testb
inc
push
aad
jb
imul
jp
fdivrs
xchg
mov
mov
fsubp
add
jne
dec
lcall
repz
ficompl
push
add
sub
out
mov
mov
aam
imul
js
leave
cmp
mov
fistpl
xchg
outsb
push
and
icebp
mov
pop
push
bound
push
aad
sbb
in
addr16
lods
jne
jae
fwait
pop
add
inc
test
dec
xchg
outsb
lods
iret
sub
or
idiv
pop
les
test
add
add
lods
jnp
aas
xor
cli
cmp
push
jne
fnstcw
ds
ret
clc
xchg
and
test
out
pop
mov
adcb
sbb
push
fs
imul
and
call
inc
int3
lods
aad
mov
sarb
jnp
cmp
inc
shll
inc
mov
and
loopne
inc
pop
dec
pop
repz
out
adc
je
mov
inc
jo
decb
insl
aam
and
xchg
ljmp
in
movsl
stos
rorl
mov
outsb
out
cltd
and
xor
inc
inc
fcmovnu
mov
push
in
sbb
jo
jo
push
iret
or
fidivl
sbb
es
mov
daa
mov
rolb
in
mov
fwait
push
notl
je
cmp
jo
or
js
xor
push
cwtl
negl
loope
jbe
jge
dec
shlb
out
push
movsl
xchg
xchg
jle
inc
repnz
jecxz
stos
jae
xchg
test
stc
out
mov
pop
add
cs
mov
in
cmpsl
and
lret
dec
sub
test
pop
lcall
loop
cmp
ss
mov
sbb
dec
mov
pop
mov
cltd
pop
adc
testl
mov
mov
int3
jo
lcall
push
hlt
clc
jno
bound
imul
loope
mov
mov
and
xchg
adc
inc
pop
and
negb
cmp
push
ss
adc
dec
adc
cmp
add
sub
hlt
mov
add
inc
js
pop
sub
imul
push
ljmp
inc
in
cmp
call
mov
cmc
add
lret
jne
or
sahf
lods
pop
popa
mov
or
dec
push
iret
adc
inc
inc
subl
out
push
call
or
xor
stos
mov
add
pop
jle
push
jmp
sbb
xchg
fwait
mov
inc
mov
sti
cmp
pop
or
clc
ja
pop
fldcw
and
sbb
stc
pop
xchg
sub
movsb
and
cmp
dec
inc
testl
mov
icebp
repnz
pop
lock
lds
sbb
xchg
negb
adc
lods
pop
mov
icebp
notl
lahf
mov
xor
mov
add
insl
psubq
jbe
xlat
fildll
sub
jge
mov
mov
and
mov
sti
stos
mov
sbb
shl
loopne
xor
or
mov
xchg
xor
js
mov
xchg
push
dec
jp
fbld
imulb
mov
orb
or
and
mov
sub
popf
fcomi
xchg
out
jo
test
sbb
sub
fwait
testb
pop
adc
cli
stos
sub
lret
cmp
xor
into
pop
notb
sub
and
mov
lcall
outsl
ret
iret
adc
mov
sbb
les
fimuls
in
sub
je
packssdw
and
push
stos
jp
xchg
sbb
push
out
repz
push
jae
mov
inc
out
cmp
stc
repnz
push
int
addl
jmp
shrb
jae
or
sbb
jecxz
sub
cmp
or
ljmp
add
cmc
push
cli
imul
inc
push
dec
movsl
adc
lahf
adc
hlt
inc
add
cli
cmc
fcmovnu
jno
mov
push
icebp
scas
addl
sub
xchg
jp
inc
xor
std
fisttpl
or
jp
inc
fwait
rorb
addr16
hlt
push
xchg
test
sarl
or
xchg
xor
aas
adc
clc
filds
aaa
sbb
ss
jmp
adc
cmp
and
into
ljmp
jge
in
cmpsl
rcr
push
jmp
hlt
xor
ret
xor
stc
vaddsd
cmp
or
mov
sbb
add
lea
jo
sbb
lahf
fistpl
cs
rcrb
scas
cmp
sub
cli
add
cmp
push
dec
loop
jb
lock
call
sti
sbbb
dec
jae
sbb
fwait
pop
mov
push
mov
dec
push
cmp
dec
xor
xchg
or
jae
iret
repz
xchg
sbb
push
mov
cmp
cmp
ds
popa
int
add
enter
fisttps
fsubrs
pop
mov
fnstsw
push
imul
jmp
mov
push
rcl
sti
in
dec
sub
cmp
sbb
lds
or
ja
das
ret
or
xor
mov
stc
xor
sarb
mov
or
mov
sarb
stos
cli
add
lcall
mov
jbe
add
jae
adc
mov
sub
fstpl
inc
mov
int
lcall
add
dec
inc
aad
or
shl
into
cld
clc
stos
fstps
out
arpl
and
sub
cli
adcl
stc
lcall
pop
or
hlt
stos
jnp
stc
xlat
lret
and
inc
jecxz
int3
pushl
jmp
or
xlat
mov
data16
jmp
lcall
je
fwait
mov
std
dec
es
xchg
adc
in
repnz
add
push
cmc
add
or
sbb
sbb
out
das
pop
push
xor
lcall
push
jmp
imul
mov
and
inc
push
rcrb
or
sub
pop
jl
and
xchg
mov
dec
in
cmp
stc
pop
adc
ds
or
fs
sti
jnp
xchg
xchg
ja
xchg
movb
popf
pop
sub
push
aad
es
pop
and
push
xlat
test
xchg
les
xor
inc
mov
or
or
pop
rcr
jb
or
pop
pop
push
or
push
pop
adc
call
or
xchg
mov
movsb
clc
clc
loop
test
test
aaa
mov
repnz
je
pop
xor
leave
call
cmpsl
push
arpl
xor
cmc
bound
xchg
hlt
mov
push
idivl
xchg
mov
xchg
gs
jnp
cmp
mov
cmp
cmp
test
cmp
shl
daa
and
push
sbb
out
ret
aad
xor
cmp
cli
sub
xchg
pop
push
lods
push
repz
xor
ret
outsb
rorb
andl
je
jnp
lcall
mul
jmp
dec
call
or
ss
jmp
rcrb
insl
push
xchg
push
mov
jmp
jno
mov
cmp
inc
sub
mov
mov
clc
dec
adc
loope
mov
mov
js
pop
or
cmp
shlb
inc
in
out
aam
addr16
sub
and
test
cmp
repnz
addb
js
insl
sbb
inc
adc
sbb
inc
jg
in
pop
dec
xchg
testl
jb
cmc
xor
repnz
and
pop
jge
ja
shl
popa
jp
add
mov
xor
mov
xor
cmpsl
adc
std
adc
cld
cli
cmp
mov
jmp
mov
rclb
in
in
jae
lods
mov
xlat
fcmovnu
jo
xor
loop
sbb
push
rcrb
negl
bound
xchg
jnp
dec
mov
mov
mov
pusha
in
scas
les
sbb
mov
xor
cmp
and
loope
push
pop
jg
sub
add
pop
or
jnp
sbb
mov
std
sub
outsb
clc
clc
stc
cmpsb
inc
xor
inc
repnz
aam
cld
push
cmp
push
sbb
in
push
and
dec
test
mov
rcl
or
fwait
xchg
jb
inc
and
movsl
incl
adc
cmp
push
lods
cmp
outsb
sbb
jnp
mov
sbb
test
in
mov
aaa
push
shr
push
mov
insl
or
xor
leave
jae
hlt
cwtl
fs
arpl
jo
jmp
jo
rclb
test
xor
xor
or
stc
aam
push
inc
lcall
inc
fcmovnu
mov
dec
sbb
or
add
scas
add
test
pop
inc
fsubrs
cmp
cs
dec
mov
loop
loopne
dec
xlat
jo
jns
ret
repz
jnp
inc
adc
sub
mov
sub
mov
push
cli
leave
dec
pop
out
cs
iret
cmp
daa
clc
jmp
lahf
imul
pushf
jae
js
orb
push
adcl
out
xor
sub
or
adc
add
sbb
ds
test
push
push
test
lods
mov
xor
fimull
sbb
pop
jnp
mov
in
push
push
inc
testl
test
xor
cltd
iret
xor
sti
or
add
mov
or
push
or
subl
dec
cmp
lret
pop
xor
lcall
sbb
adc
iret
mov
push
int
ljmp
daa
js
out
not
inc
xorl
dec
adc
jmp
dec
and
cmc
sub
xchg
aam
out
repnz
mov
sbb
or
pop
rcr
out
jge
jb
lret
pop
decb
jo
stc
or
fmul
dec
xor
cli
test
jae
not
in
cmp
shrl
enter
and
sti
lcall
mov
out
xor
jno
pop
xor
enter
add
xchg
mov
pop
jnp
push
movsl
mov
loopne
subl
in
nop
or
mov
lcall
loop
test
aas
cs
sahf
in
dec
xor
stc
in
and
das
inc
mov
push
dec
cmpsb
shl
iret
pop
rcrb
in
jo
jl
jecxz
lods
add
or
push
mov
push
mov
sub
std
mov
adc
adc
mov
repnz
in
insb
mov
in
fildl
pop
push
fld
insl
mov
lds
jp
push
xchg
sub
in
pop
jge
mov
inc
adc
movsb
rorl
jmp
insb
dec
loope
inc
push
sbb
fwait
sub
add
testl
xor
xor
adcb
push
xchg
imul
dec
ds
into
xchg
idivl
shll
cmp
insl
testl
cmp
pop
sbb
rorb
loop
mov
mov
push
mov
cltd
mov
jo
loopne
cli
cmp
and
fiadds
in
pop
xchg
cs
test
adc
or
les
cld
aad
fldenv
ret
scas
cli
out
push
sbb
sbb
cmp
je
adc
xor
pop
mov
gs
rorb
rorl
pusha
dec
mov
pop
scas
xchg
push
sbb
adc
mov
sub
test
call
xor
jbe
mov
lods
fidivl
inc
ss
xchg
dec
ds
inc
outsb
jo
addr16
cmc
pop
push
pop
xchg
lock
rcl
push
sub
iret
cmpb
mov
xchg
in
test
xlat
cmp
cmp
cmp
dec
idivb
inc
mov
daa
xchg
fistl
in
mov
push
mov
inc
mov
cmc
ror
add
fiaddl
movsl
aaa
outsb
fistpl
cmp
or
repz
fs
push
xlat
nop
shl
out
repnz
and
mov
in
mov
test
or
cli
cmp
icebp
cmp
mov
sbb
xchg
pop
sbb
push
jns
sub
movb
notb
pusha
sti
sbb
mov
mov
negl
test
sbb
loopne
rclb
add
idivb
das
sbb
sub
dec
inc
xor
outsl
paddusb
test
push
iret
out
mov
in
mov
sub
cwtl
jae
stos
sub
ret
lock
xor
dec
cmp
jle
lret
xchg
push
dec
aas
xchg
negb
lea
das
cmc
and
xor
lcall
mov
in
popf
cmpsl
hlt
fstp
fbstp
jge
rcll
cmpb
ds
ret
xorb
xchg
push
pop
sahf
frstor
fwait
xor
cmp
jno
xor
mov
int
sbb
inc
mov
divl
mov
jae
cmp
xor
sub
cli
jne
mov
lahf
sbb
int
mov
icebp
xor
rcrb
sbb
cli
add
aas
and
or
dec
push
mov
xchg
push
inc
jae
data16
loopne
aad
sbb
mov
cli
inc
call
iret
xor
cmp
stc
mov
test
repnz
jecxz
xchg
cs
cmc
push
imul
xchg
incl
sub
aad
push
fiadds
clc
pop
test
mov
dec
or
or
dec
pusha
std
adc
icebp
cmp
orb
repz
js
sbb
cmp
dec
jmp
dec
cmp
cmp
loope
mov
jns
xor
xor
test
or
faddl
mov
loopne
icebp
fldt
scas
jae
adc
scas
xlat
mov
clc
out
in
lods
cli
ss
int3
lret
cs
dec
push
xor
add
filds
adc
andb
or
inc
jnp
enter
testl
sbbl
add
cmp
mov
fwait
repnz
pushl
xor
inc
repz
test
xchg
inc
cs
mov
pop
arpl
pop
movsl
push
sub
int
jg
mov
sub
fdivp
mov
or
xchg
push
or
pop
movsl
out
sahf
rcrb
pop
mov
and
imul
loopne
addr16
push
mov
inc
loopne
flds
cltd
testb
pop
stos
sub
push
jnp
pop
jno
sbb
rorl
gs
pop
test
sub
inc
sbb
call
xchg
lret
adc
sbb
out
jmp
div
lcall
jnp
mov
lahf
sti
mov
push
jno,pn
aas
sub
add
das
and
popa
je
jp
mov
push
rcrb
in
push
stos
and
out
and
stc
xchg
mov
out
imul
fsubr
test
fiadds
fdivl
jnp
push
xor
lcall
ret
rclb
int3
dec
push
dec
js
pop
ja
adc
xchg
fmull
sarb
or
or
pop
nop
inc
aad
push
mov
fs
dec
xchg
sbbb
sub
dec
mov
sbb
lret
rcrl
cmp
add
pop
inc
imulb
xchg
cli
push
mov
pop
and
inc
clc
sub
sub
mov
sub
mov
or
xor
fs
xor
push
dec
sbb
mov
aam
xchg
repz
xor
add
or
push
ficompl
adc
pop
cmp
lahf
jb
mov
inc
push
std
xor
and
mov
pop
rcrb
jo
or
cmp
fwait
adc
mov
dec
inc
popf
ljmp
add
sti
push
mov
mov
clc
shl
pop
mov
mov
test
lret
xchg
jle
jecxz
inc
push
das
mov
test
jbe
pop
mov
stos
jmp
outsb
add
repnz
daa
jbe
repnz
clc
xlat
test
or
xor
cmp
repnz
icebp
xchg
xor
xchg
mov
in
add
push
mov
out
inc
or
and
mov
mov
out
jle
dec
mov
pop
or
js
lea
arpl
dec
adc
stc
sbb
fildl
mov
jbe
cmp
xor
xchg
aam
add
or
push
cmp
mov
sarl
push
shrb
sub
les
xchg
sbb
stc
test
clc
and
js
es
mov
sbb
xchg
push
arpl
add
add
add
fsub
ljmp
sbb
sti
xorb
xchg
iret
out
jbe
pop
xchg
pop
shrb
mov
and
hlt
std
cmpsb
in
icebp
mov
cmp
lods
mov
repnz
and
cld
mov
pop
out
pop
mov
cli
dec
arpl
cwtl
lds
pusha
mov
iret
out
push
dec
lods
jno
fs
pop
iret
mov
push
ljmp
cmp
ljmp
rclb
cmc
into
pop
ds
repz
sahf
enter
jae
push
inc
insb
call
mov
mov
push
fmuls
lds
addl
or
dec
mov
rcrl
fbstp
push
pop
xor
or
jle
push
test
push
dec
imul
mov
push
pop
mov
addr16
mov
repnz
cwtl
outsl
cmp
jb
js
arpl
es
jp
push
xchg
iret
cmp
fisubs
int3
lea
rcrb
or
icebp
adc
cmp
outsl
data16
xchg
inc
mov
cmp
pop
loop
mov
xchg
hlt
cmp
mov
dec
dec
test
push
cli
out
fwait
cmp
scas
inc
clc
and
enter
fsubrs
iret
inc
cmpsl
xchg
pop
push
mov
std
dec
mov
ret
jbe
xchg
enter
rorl
mov
cmpsl
xor
mov
sbb
in
xor
insb
fdivrs
xor
cmpsl
aad
out
cmp
lods
xchg
pop
mov
add
repz
xlat
adc
out
pop
negb
xchg
mov
leave
imul
into
add
xchg
das
pop
adc
mov
jns
in
mull
bound
xchg
push
sbb
mov
dec
scas
push
push
outsb
sub
push
addb
jp
pop
sahf
mov
sbb
ret
add
sbb
xchg
das
dec
pop
xchg
jmp
andl
insl
jmp
es
int
pop
sbb
mov
sbb
inc
push
inc
jnp
filds
imul
call
jne
ljmp
clc
mov
xlat
jmp
push
pusha
cmp
insl
ljmp
int3
cmp
lock
cmp
cmpsb
or
stos
ret
cwtl
push
rorb
repz
sub
and
ss
xchg
pop
xchg
shlb
dec
loop
pop
shll
mov
xchg
fxch
jg
arpl
cld
xchg
ret
xor
mov
in
adc
add
hlt
pop
push
insb
ret
cwtl
sarb
js
fcmovnb
jns,pn
sbb
mov
cmpl
mov
ret
call
cli
cmp
repnz
lcall
filds
loopne
repz
mov
jo
fwait
mov
fstpt
sti
or
or
mov
out
pusha
and
sahf
jbe
push
fistl
mov
sub
mov
pop
push
add
adc
call
or
cmp
lds
dec
adc
mov
dec
mov
xor
xchg
aam
pop
fadds
lret
adc
add
repz
repz
std
sbb
pop
out
pop
and
shrb
mov
jne
pop
das
xchg
mov
or
mov
fnstsw
repz
sub
push
cmc
mulb
das
ret
mov
mov
sub
mov
test
js
outsl
or
arpl
sub
enter
fs
movsl
sbb
pop
pop
adc
fisttps
push
je
cmp
sub
push
mov
out
cmc
xchg
xchg
fbld
pop
cmp
or
pop
pushf
bound
adc
in
int3
sub
or
push
add
aam
pop
xchg
xor
pop
fadd
mov
xchg
xor
lcall
ljmp
xchg
add
mov
or
fildll
and
call
sbb
jmp
je
or
add
pop
jns
or
mov
addl
pop
loopne
cmp
push
cmp
aad
dec
mov
cmp
inc
dec
pop
lock
cmc
imul
daa
stos
popf
in
repz
inc
xlat
inc
fwait
mov
clc
repnz
shrb
jne
pop
or
xor
and
js
fwait
into
pop
scas
mov
imul
mov
pop
push
adcb
repz
daa
jbe
rcl
and
pop
adc
xchg
mov
xlat
data16
fnstcw
xor
stc
pop
mov
mov
or
sub
mov
cltd
push
xchg
and
add
push
add
ftst
and
dec
mov
out
xor
das
jg
sbb
jne
mov
pop
pop
lea
jnp
subb
push
cmp
popa
pusha
stos
inc
cs
stos
add
sbb
push
arpl
mov
sbb
pushf
jmp
in
cmp
das
or
xchg
dec
mov
mov
in
outsb
shr
loope
clc
xor
inc
and
lds
jmp
testl
inc
sarl
aad
lds
xchg
mov
mov
xchg
lret
jnp
aas
push
and
xor
stos
pop
sahf
mov
sbb
nop
aam
les
test
cmp
das
cmpsl
sbb
pop
test
sarb
clc
pop
jnp
jp
jns
pop
cmp
stos
or
repnz
adc
insb
cli
xor
aaa
lcall
cmp
cmp
cmpsb
mov
xchg
xlat
push
adc
ds
fisttpll
imul
in
xchg
iret
jno
aam
mov
xor
mov
push
lea
sbb
inc
test
pusha
test
sub
xor
dec
push
mov
pop
addl
mov
cltd
into
test
lea
xchg
out
mov
clc
xchg
push
mov
stos
xchg
jns
mov
add
and
sub
ret
outsl
add
mov
dec
jb
cwtl
and
jge
jnp
popf
int
adc
cli
rorb
incb
and
xorl
push
addr16
test
mov
pop
in
arpl
cmc
cmp
xor
add
cmp
or
inc
inc
shr
adc
in
loopne
xchg
in
xor
mov
mov
mov
ds
fwait
and
and
dec
ja
movsl
dec
aam
das
push
xchg
sub
sbb
cltd
jb
dec
in
sub
cltd
aaa
fistpl
cmpsb
xor
mov
jmp
fldenv
and
cmpsl
ret
mov
xor
shrl
and
sub
js
mov
jmp
sub
in
es
push
sti
leave
inc
sbbb
pop
inc
adc
cmc
stos
sbb
std
lret
stos
enter
lret
push
cli
mov
or
dec
into
aad
int
movsb
in
daa
fcmovnb
or
pop
jnp
cmp
fnstenv
sti
sti
pop
aad
stc
xor
mov
jge
sarb
and
add
dec
js
sbb
div
sub
in
push
ljmp
and
aad
cmp
into
sub
jnp
pop
push
nop
shr
shlb
cmp
sbb
cmp
push
lock
outsb
stos
jmp
cmp
dec
xor
add
fucomip
mov
adc
jge
jb
adc
sbb
sbb
sub
push
pushf
and
pop
cmp
enter
sub
xchg
add
mov
repz
aaa
or
out
push
mov
dec
outsb
rorl
loopne
mov
imul
xchg
pop
inc
xchg
lock
jmp
push
sbb
sbb
rolb
mov
insb
or
jle
rcr
push
push
sub
mov
xchg
fnstsw
movsb
cwtl
mov
cmpsl
je
add
dec
pop
cli
dec
xchg
dec
push
sbb
aas
out
pop
add
xor
and
mov
pop
or
dec
cmp
repz
aam
cmp
mov
adc
sub
inc
clc
ret
pop
sbb
xchg
or
inc
cmp
add
adc
fstps
pop
ror
cmp
aad
push
xchg
lahf
es
lret
xlat
clc
pop
add
sar
stos
fwait
popf
or
sub
jnp
push
adc
add
mov
ret
push
sbb
fcomps
arpl
sub
ret
loopne
or
push
jo
mov
cmp
dec
fdivrs
stos
add
call
ja
out
jo
movnti
add
clc
mov
in
ljmp
sbb
popa
mov
test
in
sub
ret
les
xchg
add
jbe
push
xchg
in
fwait
mov
js
jg
rclb
imul
aaa
add
call
mov
ja
and
inc
dec
mov
or
sarb
dec
dec
xor
ja
stos
int
sbb
ss
stc
js
mov
push
adc
or
cmp
stc
dec
data16
sub
ds
fdivr
dec
fistl
sub
lcall
sar
test
dec
fcomi
jmp
iret
in
pop
pop
xlat
clc
rcll
imulb
xor
std
xlat
push
inc
pop
and
gs
cli
cmpsl
pop
sahf
jp
xchg
call
inc
mov
pop
clc
dec
fwait
adc
xchg
dec
add
inc
or
fldcw
test
inc
dec
xor
iret
push
loop
movsl
push
push
push
sbb
cmp
cs
jle
mov
int3
pop
mov
js
jo
cmpsl
dec
loopne
shlb
outsb
fcomip
sbb
nop
fcomps
xchg
mov
mov
mov
js,pn
and
fdivrs
popl
jnp
fiaddl
adc
and
test
xorl
inc
insl
test
mov
jo
push
idivb
leave
clc
xchg
iret
push
cli
or
out
fsub
insl
dec
jns
aad
idivb
test
movsl
ret
outsl
push
ljmp
jb
lret
fsub
cmp
or
add
or
test
aad
add
pop
std
mov
xchg
ret
and
jnp
mov
imul
xor
ja
and
mov
sahf
pushf
pop
push
dec
pop
fcmovne
pop
xlat
add
int3
repnz
bound
and
jp
push
xor
fstps
mov
mov
loop
js
jnp
xchg
fsubl
stc
dec
or
mov
or
fcomp
add
les
sbb
fwait
cmp
dec
jp
outsb
rcrl
inc
fs
cmp
push
gs
mov
jle
fistpll
outsl
xor
daa
ss
inc
aad
cmpsb
testl
clc
lcall
imull
stos
push
mov
cmp
lret
xlat
pop
adc
mov
icebp
jo
jg
xchg
mulb
in
mov
sti
or
fucomp
call
imul
mov
xchg
int3
cli
or
clc
sub
add
mov
sbb
or
xorl
in
push
inc
adc
mov
cmp
out
jno
sub
loop
test
ret
jbe
xor
push
fistpl
jg
cli
and
in
int3
mov
sub
dec
xchg
mov
xor
in
mov
and
pop
pop
mov
sbb
lret
pop
jmp
xchg
mov
in
xor
pop
or
mov
lahf
mov
dec
or
fistl
mov
dec
push
add
cwtl
cli
xchg
adc
cmp
and
ret
pop
mov
push
pop
or
pop
xchg
xor
push
mov
sub
repnz
in
lds
dec
xor
test
cld
ja
cltd
push
sti
xor
lods
xor
pop
aas
inc
mov
dec
pop
push
lods
mov
or
psignw
and
pop
inc
xchg
sub
mov
ss
add
sbb
imul
roll
push
pop
push
sahf
iret
mov
scas
jb
cli
add
sbb
pop
int3
les
xlat
cmp
add
fisubrl
js
or
cltd
or
insb
xor
sub
add
into
mov
dec
or
cmp
js
xchg
sbb
call
arpl
arpl
cmp
cmp
addb
repz
out
inc
push
jmp
mov
jns
shrb
mov
lods
sub
outsb
dec
mov
psubw
cmp
mov
test
cmp
loop
loopne
aaa
jl
fcomi
dec
inc
orb
pop
add
sti
in
inc
pop
in
int
adc
fisttps
rol
jp
jo
ljmp
and
aam
shlb
out
in
xlat
addr16
add
xchg
std
in
cltd
es
mov
jp
push
xor
ss
push
stos
subb
div
in
outsl
mov
bound
dec
pop
stc
adc
imull
sbb
dec
les
jns
mov
mov
lret
jb
cltd
push
mov
dec
mov
sub
nop
mov
dec
pop
jbe
loope
ljmp
sbb
xor
push
jbe
sarl
stc
sahf
cltd
hlt
cli
ficoms
fcoml
mov
ds
aam
lods
and
pop
jno
lahf
lret
jge
jp
pop
rcrl
jb
cli
push
add
cmp
les
mov
insb
repnz
loop
shlb
xchg
pop
fwait
loopne
cmp
daa
sbb
sbb
mov
fwait
clc
adc
mov
stc
bound
clc
push
jo
into
pop
add
inc
adc
js
stos
pushf
push
ret
jmp
dec
outsl
sarb
push
mov
repz
ret
fnstcw
mov
aaa
or
ljmp
push
or
cmc
cwtl
fdiv
inc
cmp
or
ja
dec
arpl
stc
aaa
xchg
xor
fabs
dec
sbb
cmp
lret
das
pop
sbb
pop
fistps
cli
add
lcall
out
fcmovb
cmp
decb
js
out
push
movsb
dec
call
bound
pop
inc
push
push
sbb
sti
mov
and
imul
aam
jmp
ret
int3
sbb
xlat
ror
insl
aam
inc
mov
mov
shl
xor
scas
cs
scas
mov
movsl
cmp
cmp
ljmp
jecxz
push
cltd
out
pop
mov
shlb
dec
cmp
das
es
mov
insb
add
jae,pt
mov
jecxz
cmpsl
jle
mov
aaa
shlb
add
jg
or
lods
sti
push
out
or
sbb
xor
std
mov
in
xor
into
push
movsl
inc
jnp
lcall
jg
mov
inc
sbb
pop
jecxz
imul
and
ret
and
std
mov
mov
lret
es
ljmp
pop
xchg
mov
or
add
pushf
dec
xor
xor
rorl
push
in
pop
inc
fstpl
or
aam
stos
stc
out
pop
shlb
testl
mov
cltd
push
pop
loopne
in
outsl
jp
es
cmp
pop
inc
mov
insb
xlat
add
jns
repnz
stos
test
pop
call
xor
fstpt
mov
add
lcall
imul
or
call
addr16
pop
pop
adc
in
xlat
rolb
pop
sub
jo
mov
cmc
idivl
inc
mov
call
mov
jb
xlat
cmp
rclb
aam
dec
or
pop
daa
aad
in
push
or
je
adc
push
and
cmp
cmp
int3
cmp
int
gs
adc
inc
popf
addb
xchg
outsb
xor
int
test
mov
add
mul
aas
mov
in
test
push
inc
lcall
in
incl
test
push
lahf
jnp
mov
repnz
push
test
jnp
addb
pop
lds
outsb
fcomps
mov
nop
mov
pop
fdivp
outsl
pop
js
cmp
add
pushf
fdiv
xchg
addl
or
lea
sub
icebp
aaa
negb
or
idivb
ja
fadd
mov
or
and
fwait
sar
test
pop
testb
cmp
dec
iret
push
xchg
sbb
cmp
repz
cmp
dec
fildl
or
pop
adc
xchg
jle
cmc
repz
ljmp
call
pop
pop
add
fwait
testb
mov
pop
jo
push
rcrl
out
or
lahf
dec
lds
mov
dec
int
js
and
inc
stos
dec
add
out
jge
pop
and
loop
cld
rorb
sbbl
inc
orb
mov
int3
mov
lods
repz
pop
fidivs
or
or
and
rol
xor
je
idivb
repz
xor
daa
mov
cmp
loop
andb
pop
outsl
sbb
jo
clc
jp
ret
in
mov
lcall
ds
cmp
xlat
fcmove
mov
repz
lds
inc
sub
add
xor
sub
es
repnz
imul
pop
pushf
test
xchg
mov
adc
fistpl
scas
mov
or
call
lcall
mov
lret
mov
inc
inc
cld
sub
call
rol
lcall
cmpsl
sbbb
or
scas
or
sub
xor
xor
sahf
testl
test
or
fdivrl
inc
dec
sub
stos
lcall
inc
jns
jmp
jb
aas
push
jns
es
in
sbb
rcrl
xchg
or
test
ja
sbb
sub
lock
bnd
ficoms
mull
cmp
push
jg
add
mov
notl
loope
xor
bound
out
call
shrb
out
jmp
hlt
push
enter
fsubrl
in
or
addr16
add
sbb
jecxz
jle
jne
mov
inc
sub
ds
out
pop
dec
push
or
mov
pop
or
scas
add
push
das
out
imul
or
fwait
xor
mov
mov
movsl
cmp
dec
xchg
inc
inc
stc
cmp
pop
push
bound
jp
int
enter
ja
pop
outsl
or
mov
inc
loop
push
out
cmpsb
bound
push
fsts
or
mov
testl
sbb
xchg
xor
xor
jle
aam
call
pushl
inc
adc
testb
lcall
sub
mov
stos
test
sbb
add
mov
mov
scas
add
sub
push
clc
cli
stos
movsl
add
mov
fisubs
xchg
gs
mov
icebp
push
adc
adc
xor
mov
xor
push
and
es
push
int
hlt
jmp
icebp
rcll
filds
into
ljmp
inc
lds
pop
sub
andl
cmp
cmp
pop
das
daa
or
call
data16
adc
sub
roll
inc
das
data16
dec
mov
addl
pop
fdivs
mov
pusha
daa
iret
add
popf
fcomip
bound
jnp
loop
adc
das
int3
int
jp
out
dec
mov
adc
mov
rcrb
cmp
adc
ja
cwtl
mov
je
shlb
pop
jnp
inc
inc
mov
mov
jp
mov
out
pusha
mov
test
in
jns
aad
or
shr
fsubs
jno
imul
cmp
jnp
fmul
push
jmp
ds
push
jnp
push
ljmp
mov
cmp
aas
xchg
mov
and
push
mov
fcomip
div
jne
pushf
push
or
inc
xchg
scas
or
sub
sub
add
dec
pop
aad
fwait
adcb
jae
push
aaa
out
jbe
data16
stos
mov
and
imul
dec
movsl
aam
test
inc
cmp
sub
mov
imull
sbb
int3
add
xor
sbb
jne
jb
lcall
gs
out
loop
mov
xor
sbb
mov
xor
mov
ret
jmp
cmp
pop
pop
daa
push
dec
sub
inc
jg
adc
push
mov
cwtl
scas
jecxz
loope
dec
out
mov
andl
test
dec
inc
iret
testl
jae
test
sbb
lret
testl
fs
mov
mov
das
call
clc
addr16
popf
les
shl
sbb
cmpsb
dec
shrb
dec
add
ficomps
lcall
nop
fld
data16
lcall
arpl
insb
jns
or
insl
xchg
and
jmp
push
pop
and
inc
xlat
fcomp
or
inc
add
ret
add
pop
icebp
cmp
dec
lock
mov
leave
aas
movsl
cli
add
dec
enter
mov
dec
std
int
push
loop
sbb
out
cs
xchg
mov
cmp
xchg
jmp
pop
cmp
dec
ss
push
cmpsl
sub
dec
and
or
mov
shll
pushf
daa
inc
or
jmp
jne
pop
push
cmp
cs
lea
mov
inc
mov
pop
and
repnz
push
sti
pop
ljmp
ja
jae
arpl
lret
push
je
andl
stos
cli
arpl
std
push
icebp
dec
sub
sarb
cmp
fdivs
sahf
call
push
out
inc
repz
loopne
pop
outsb
bound
sub
adc
in
mov
xchg
in
add
xlat
ficoml
aaa
push
adc
lahf
xor
sti
mov
fs
adc
xor
js
or
pop
lcall
testl
ljmp
inc
jno
mov
ret
popf
and
inc
daa
sub
cli
out
sbb
mov
mov
or
sbb
cmp
stc
sub
sti
rcrb
std
cwtl
fld
push
fsts
xchg
stc
pop
mov
mov
loope
dec
repz
cmp
outsb
inc
sbb
sti
mov
dec
cmpsl
fbstp
out
inc
mov
xor
jb
loopne
mov
mov
js
mov
push
xor
fiaddl
hlt
push
jge
jne
xor
fwait
pop
pop
xchg
out
xchg
push
pop
fistpll
xor
scas
aad
testb
ret
and
in
dec
jns
pusha
or
inc
scas
sbb
test
and
xor
pop
add
cld
xchg
cmpl
jno
cmp
mov
mov
incl
test
pop
cmpsb
or
out
aam
jnp
xchg
js
jbe
push
add
lock
ret
cltd
imul
mov
cli
jne
xchg
pop
aad
cmp
push
fisttps
sbbl
jnp
clc
push
enter
js
jnp
push
out
repz
cmp
into
add
call
and
ss
aas
gs
pop
and
jae
shll
das
pop
ds
clc
pop
js
mov
fcomps
pop
insl
and
xchg
mov
xchg
mov
add
add
push
mov
pop
cmpsb
dec
repnz
inc
lcall
or
pop
pop
nop
hlt
lahf
das
daa
cmp
inc
scas
in
sub
lcall
iret
xchg
shll
aaa
bound
mov
out
xlat
xchg
out
pop
scas
pop
jecxz
pop
call
add
stos
stos
aad
rcr
sub
dec
push
push
lock
je
mov
je
mov
xor
push
cwtl
sub
push
sub
dec
xor
outsb
mov
fdivr
and
mov
pop
fcoml
movb
icebp
outsb
ja
mov
clc
jle
and
idivl
push
add
xor
ret
popf
jb
insl
je
push
add
or
jmp
ja
adc
insb
push
add
pop
jnp
mov
test
hlt
or
aas
lcall
jnp
rorl
ja
cmpsl
jge
jle
adc
dec
adc
or
cmpsb
dec
das
or
inc
stc
add
add
inc
lahf
pop
add
fldenv
xchg
inc
stc
shlb
cli
ret
sub
testb
sarl
sbb
repnz
or
jmp
xchg
pop
out
fistpll
pop
xlat
fcmovb
push
sbb
in
cmpsb
fwait
xchg
fistpl
neg
js
mov
clc
out
outsl
xchg
cmp
dec
mov
icebp
or
pop
mov
push
shll
pop
data16
jg
xchg
int
push
std
les
rclb
inc
pop
addr16
mov
inc
clc
lods
in
je
and
pop
xor
mov
pop
xchg
das
bound
fidivrl
xchg
and
push
scas
adc
mov
lret
sarl
mov
gs
aad
mov
popa
leave
cwtl
jae
loopne
dec
jmp
pop
out
xor
data16
jecxz
imul
mov
add
xchg
das
pop
jecxz
mov
push
jne,pt
pop
xchg
push
fxch
fdivrl
addr16
ficompl
xchg
pop
add
jbe
or
and
mov
xor
mov
in
xchg
mov
add
sbb
fdivrl
jo
xchg
mov
add
fsubrs
push
pop
inc
test
jb
dec
shll
je
xor
sbb
je
mov
mov
push
int
aas
add
push
push
push
int
repz
movb
je
mov
mov
inc
sbb
popf
je
xchg
add
cmp
popf
sbbl
shl
out
and
cmp
test
lea
imul
inc
cmp
fdivrl
push
test
test
sub
shrb
mov
cmp
clc
mov
jmp
jno
xor
fcomps
lret
pop
jp
test
sub
mov
mov
jno
fistpl
les
or
sbb
jecxz
addr16
dec
loope
movsl
das
add
out
cwtl
lea
lock
add
ss
out
jg
mov
leave
cmp
push
jb
push
mov
sbb
je
xor
jle
in
mov
imul
mov
mov
ss
ss
dec
pop
test
pop
inc
test
pop
popf
inc
movsl
js
inc
ds
ja
push
push
ljmp
xor
sbb
xor
jecxz
repnz
loope
xchg
cmp
fwait
or
aaa
fucomip
lock
xchg
mull
pushf
daa
ss
cmpsb
push
mov
push
pop
jns
ljmp
sar
cli
roll
imul
repnz
pop
rclb
sti
cmp
push
pop
repnz
jb
mov
cmp
cmp
lea
pop
fnstsw
cld
mov
adc
mov
cs
mov
hlt
sub
repz
daa
mov
rcll
jmp
sub
sub
pop
gs
aam
insl
subl
mov
stos
mov
xlat
cli
xchg
or
xchg
mov
testl
dec
clc
in
jp
and
cmpsl
shll
xor
popa
fstpl
loope
cmp
int
cmp
sbb
cli
add
fdivs
xchg
dec
xchg
mov
data16
xchg
repnz
scas
xchg
bnd
mov
inc
cmp
ret
jp
js
cmc
adc
jb
in
add
stc
adc
es
repnz
lret
mov
fs
mov
rolb
or
stos
test
pusha
rolb
popf
mov
adc
sub
push
loop
cmp
adc
cmc
xchg
jp
or
out
ficoml
lcall
bound
icebp
mov
jmp
js
fcomip
mov
aas
int3
cmp
scas
sbb
xchg
push
and
sub
stos
xchg
pop
and
sub
mov
xor
and
in
xlat
xchg
cmp
or
fwait
lcall
idivl
fsts
ficoml
dec
repz
push
sub
push
imul
or
pop
sbb
test
fldcw
push
fwait
jg
aaa
xor
fwait
ljmp
scas
inc
cmp
pop
lock
add
aas
xlat
push
xor
fldl2t
ss
pop
push
pop
arpl
aam
out
push
arpl
mov
xchg
into
mov
ljmp
stc
cld
bound
mov
inc
repnz
mov
add
xchg
ret
xor
fcomi
push
sahf
push
das
dec
lret
xor
xrelease
mov
ret
lcall
stc
pop
icebp
lods
xchg
or
jmp
and
incl
sub
mov
pushf
mov
nop
adcl
xor
pop
cmpsl
sbb
cwtl
lock
movsb
idivb
or
xchg
add
or
fwait
rcr
xchg
add
icebp
ja,pt
mov
cmp
pop
popf
mov
xchg
pop
sti
lret
iret
cli
bound
xor
aaa
push
adc
push
into
inc
mov
aad
jge
js
lcall
add
in
mov
dec
cwtl
lret
mov
pusha
sub
xchg
cli
es
xchg
push
ret
xor
sub
insl
xchg
ds
iret
imul
jecxz
lcall
push
and
ret
push
int3
mov
das
insl
or
sub
fisubl
icebp
test
mov
dec
mov
jbe
xor
inc
xor
mov
mov
in
das
stos
xchg
mov
test
fdivrs
push
shl
aas
mov
push
pop
jmp
adc
xchg
pop
notb
or
out
jl
inc
bound
and
pusha
dec
fninit
sub
leave
test
cmp
adc
stos
icebp
add
into
mov
xchg
rcr
out
and
int
lcall
shl
inc
or
xlat
shl
push
xor
stos
mov
shll
sbb
xchg
ljmp
dec
pop
clc
pop
sub
repnz
inc
sbb
stc
pop
xor
mov
mov
loope
mov
mov
jns
popa
ljmp
imull
adc
gs
pop
popl
mov
sub
es
lcall
or
adc
and
cmp
cmp
dec
stc
cmpsb
mov
cmp
stos
mov
loop
pop
cmp
leave
mov
push
fldcw
sub
icebp
imul
mov
mov
dec
inc
mov
hlt
cmp
iret
pop
fiadds
leave
icebp
rcrl
jg
xor
add
xchg
mov
pop
scas
push
clc
xchg
fsubrs
in
paddq
adc
stos
sub
cmp
fildll
pop
xor
stos
fnstsw
adc
jnp
cmc
adc
repnz
xorb
sub
mov
xchg
xor
dec
pop
hlt
shrb
movsb
or
into
inc
lods
pop
adc
dec
ja
and
xchg
addr16
daa
add
pop
xchg
add
test
ret
cld
out
mov
fsubrs
pop
stos
ret
cmp
push
fwait
sbb
jg
dec
clc
sbb
jne
fcom
pop
in
pop
cmpsb
dec
test
cmc
jle
shl
stos
inc
adc
mov
push
ret
arpl
enter
sbb
push
adc
sub
sub
mov
jne
in
testl
sbb
inc
push
or
fs
insl
dec
aaa
test
push
outsb
cmc
fistl
xchg
mov
stos
or
test
fxtract
fcoms
pop
mov
test
fs
xchg
mov
int
cmp
push
movsl
and
inc
adc
or
push
mov
repnz
test
lret
mov
repz
cli
push
or
addr16
std
adc
dec
aad
cmp
cmp
xchg
sub
js
mov
cmp
jae
or
or
cmpsb
ds
stc
xlat
pop
xor
decl
in
aas
shlb
arpl
sub
icebp
mov
js
out
xor
sbb
movsb
xchg
incl
cmp
imul
xor
mov
aad
sahf
fwait
mov
jp
mov
jbe
hlt
push
dec
into
test
pop
ja
jns
icebp
xchg
mov
test
jb
arpl
xbegin
adc
mov
or
repz
mov
cmp
sub
mov
and
or
mov
stos
in
sbb
imul
sbb
icebp
test
xchg
mov
js
loope
adc
iret
mov
jbe
sub
xor
mov
clc
jnp
das
mov
pop
jnp
adc
inc
jle
leave
cld
testl
inc
push
movsl
mov
or
jmp
testl
dec
inc
mov
test
repz
mov
arpl
into
cmp
pushf
ss
inc
jl
adc
adc
aad
fstl
mov
out
loopne
in
jb
ret
cmp
fwait
into
xchg
les
stos
ret
lcall
test
lahf
fsubl
sbb
mov
xor
fists
pusha
or
sub
dec
cwtl
fucomip
pop
mov
std
sbb
ret
jg
or
jno
pop
dec
xchg
xor
xchg
mov
ljmp
pop
jae
and
xor
xor
mov
adc
mov
sub
clc
les
mov
push
sahf
mov
repnz
fsts
lcall
cltd
rdpmc
scas
aas
repz
push
xchg
jmp
loopne
adc
jecxz
mov
repnz
inc
inc
add
push
mov
out
cwtl
dec
xlat
add
add
push
sbb
dec
sahf
ficoml
je
mov
xor
or
fnstsw
mov
sbb
push
lods
or
xor
xchg
dec
addr16
lret
push
icebp
and
mov
imul
pop
mov
sahf
jl
adc
add
clc
cmp
in
dec
hlt
mov
insb
sbb
test
mov
inc
xchg
pop
movsl
xor
mov
mov
adc
mov
mov
mov
sub
push
stc
lea
pop
rorb
cmp
leave
mov
jg
out
shl
lds
repz
sbb
ret
out
call
xchg
std
aad
in
jae
sub
add
mov
jnp
and
inc
fisttpl
mov
inc
mov
call
fcmovnb
repnz
mov
xor
cmp
mov
insl
add
jnp
clc
pop
scas
clc
inc
mov
add
fistpl
mov
inc
adc
ja
jmp
stc
insb
add
jo
mov
cmpsl
fistl
lret
out
fmuls
add
mov
sbb
data16
mov
clc
sub
insb
sub
das
add
sbb
mov
dec
xchg
shll
leave
in
dec
pusha
sbb
fbld
mov
movb
push
xor
jnp
test
jno
fwait
icebp
sub
enter
dec
jnp
or
xchg
imul
mov
jnp
stos
inc
dec
mov
hlt
js
fmuls
sbb
xchg
jae
fucomi
dec
inc
stc
mov
sbb
lock
lock
call
imul
inc
test
sbbl
js
mov
call
in
jl
fstpt
add
aaa
testl
fcmovu
xor
rorb
paddw
adc
js
xchg
dec
pop
cmp
mov
loope
cmp
cmp
inc
jnp
xor
cmp
cmp
orl
dec
fidivrl
mov
stc
fidivrl
mov
cs
mov
sub
sbb
stos
cmp
cmp
xor
dec
fdiv
imul
fstpt
or
addr16
push
xchg
loope
aaa
sbb
adc
mov
xor
push
rcrb
dec
or
inc
mov
pop
add
fimull
orl
cwtl
adc
stc
jp
loop
fisttpl
cmp
cmp
icebp
fcom
sub
in
adc
repz
fldenv
and
std
dec
dec
or
lcall
test
mov
push
xchg
pop
adc
pushl
mov
fisubrl
outsb
cmc
sub
cwtl
cmp
push
es
and
xchg
scas
xchg
stos
push
cmp
pop
iret
rorl
or
xchg
leave
push
xorl
aad
mov
push
outsl
into
mov
into
aas
shlb
pop
xchg
push
fwait
sahf
pop
repz
imul
fbld
jge
in
popf
sbb
pop
arpl
mov
mov
adc
xlat
jmp
push
out
fcoms
mov
mov
hlt
lods
pop
lods
jne
cmp
shr
xchg
sbb
sti
jae
and
sbb
repz
pop
cmp
adc
imul
aam
mov
fsubr
xor
out
xor
das
imul
push
jle
stc
xchg
js
into
popa
sahf
xor
fbld
js
mov
pop
mov
dec
mov
dec
roll
inc
sub
jae
test
or
xlat
mov
js
pop
call
inc
pop
xchg
pop
xlat
and
dec
mov
push
scas
clc
fwait
aam
pop
sub
imul
mov
call
pop
mov
loope
xor
fsts
and
repnz
cmp
push
xchg
ja
xor
pusha
loopne
push
cmp
addr16
cs
sahf
aas
sbb
jb
shrb
lret
es
arpl
out
jbe
mov
mov
mov
sbb
push
adc
movsl
xchg
push
jo
jle
mov
sahf
fwait
test
cmp
stos
pop
and
jg
cmp
push
mov
dec
or
iret
inc
add
cmpsb
jp
jnp
jo
ja
fs
imul
mov
sub
add
js
dec
fcompl
xor
ffree
cmp
and
jg
mov
insb
iret
addr16
mov
pop
ljmp
pop
push
mov
fstps
xor
push
push
ss
xlat
fwait
pop
cmp
arpl
pop
jns
js
cmp
dec
inc
ficompl
sbb
pop
test
push
stos
addr16
pop
cltd
test
xchg
inc
sub
mov
push
push
pop
out
mov
addr16
xlat
loopne
outsb
stc
pop
mov
andl
xchg
jae
adc
dec
insl
aaa
inc
jae
jle
cwtl
leave
inc
cmp
inc
jge
mov
sub
cmp
pop
les
and
xchg
sets
cmp
lret
xchg
js
pop
pop
sub
or
push
jecxz
cmp
xchg
movsb
aad
addr16
sbb
xor
mov
push
push
shll
int
push
mov
iret
xchg
sub
stos
jp
aas
push
cmp
lods
sub
aaa
xor
sbb
out
xor
inc
push
or
pop
repz
cmp
dec
mov
xchg
testb
push
sub
imul
sub
stc
cmpsl
lcall
iret
push
sub
lcall
stc
jbe
out
pop
pop
popl
mov
icebp
inc
jb
iret
and
jl
and
ret
out
imul
pop
push
rcr
gs
mov
stc
pop
cmp
andb
jno
dec
push
jmp
jnp
sbbb
pop
cmpsl
inc
mov
mov
mov
mov
dec
mov
xchg
jecxz
cmp
and
filds
inc
mov
sub
or
icebp
mov
adc
xchg
je
and
test
insl
or
sbb
xor
jb
ss
movsl
jg
cvtps2pd
adc
shl
dec
aas
popf
cld
xor
pop
cmp
fisttpl
ljmp
ret
stos
xchg
sub
or
icebp
push
pop
xor
icebp
fcomi
ret
mov
ja
daa
add
into
adcb
mov
cmpsb
and
filds
pop
jmp
dec
add
xor
imul
jle
out
mov
lods
push
scas
mov
and
add
icebp
jp
mov
cwtl
pop
cmc
bound
push
add
sub
dec
inc
xor
sbb
je
enter
dec
iret
roll
and
popf
sbbl
push
in
pop
mov
call
stos
jns
sarl
or
or
mov
scas
iret
stc
stos
sbb
cmc
pop
out
xchg
xor
adcb
test
test
xchg
test
mov
sbb
adc
xchg
call
imul
adc
sub
jnp
inc
mov
into
lret
mov
cltd
jo
xchg
lcall
icebp
jbe
lock
push
adc
les
mov
pop
cmp
xor
push
cmpl
add
xchg
inc
sbb
and
inc
adc
jmp
sub
sub
adc
mov
xchg
xor
addb
push
loopne
dec
aam
mov
or
rcrl
fsubs
mov
sbb
push
jb
subb
cs
inc
mov
jnp
and
stc
dec
xchg
popa
in
sbb
cmp
adc
mov
or
mov
sbb
mov
xlat
mov
cmp
sub
add
jae
ret
out
lret
push
mov
cmp
jle
sub
movsl
mov
dec
or
xor
leave
adc
lods
arpl
push
pop
adc
fwait
dec
or
xor
scas
in
push
sbb
icebp
xchg
pop
mov
push
scas
mov
icebp
xor
ret
or
fldcw
push
cmp
jbe
repnz
rcrb
adc
fisubs
pop
call
cmp
std
push
pop
imul
aam
cmpsb
shr
sbb
jnp
and
cmp
fldcw
jbe
dec
pop
sbb
arpl
mov
sbb
rcrb
mov
add
inc
arpl
lea
iret
xchg
sub
pop
jg
repnz
sub
imul
icebp
sub
pop
add
push
jg
mov
pop
dec
inc
es
push
aaa
dec
ret
imul
in
adc
sub
pop
jb
mov
jne
les
xlat
aas
mov
out
cmp
xor
add
jnp
out
rclb
jecxz
or
cmp
mov
inc
fucomi
inc
inc
addr16
jmp
mov
fstl
jo
cmp
xor
into
enter
popl
cli
call
mov
jo
and
cmp
mov
jb
iret
mov
push
adc
inc
rol
cmc
mov
out
je
mov
into
mov
gs
loopne
imul
sub
negl
xlat
adc
mov
cmp
int3
jmpw
repz
loope
in
jae
mov
dec
ret
or
lret
into
sar
add
mov
jmp
mov
sbbb
or
pop
div
cmp
dec
mov
or
cmpsb
sbb
sti
addr16
sti
xchg
imul
lcall
fadd
mov
adc
insb
jnp
sarb
inc
dec
pop
xor
fildl
xchg
jae
cmp
bound
xor
pop
ss
cld
fimull
pop
lret
inc
or
clc
mov
idiv
ret
pop
jg
mov
mov
lcall
sbb
dec
adc
jbe
cs
mov
cltd
test
xor
aas
mov
fmull
incb
cli
in
out
test
int3
js
push
sub
sub
scas
fdivrs
sub
dec
out
pusha
inc
mov
jnp
xor
rcrb
cs
add
mov
mov
int3
ret
dec
xor
pop
or
mov
xor
int3
loopne
scas
mov
or
xchg
cmpb
mov
pop
jmp
lret
pop
cltd
sbb
or
mov
out
ficomps
aaa
in
stos
mov
stc
sbb
rcrl
and
cmp
fnsave
repnz
inc
or
fstps
aam
xchg
push
and
sbb
xchg
js
add
jo
hlt
xor
mov
or
xor
jo
sbb
pop
fstpt
or
dec
ja
xchg
lret
pop
loop
adc
or
cwtl
sarb
mov
jb
sub
inc
int
jmp
mov
sub
outsl
xchg
jae
push
jl
xchg
mov
inc
add
jbe
jmp
pop
xchg
mov
adc
mov
shrb
aam
movsb
sub
mov
pop
aad
sub
pop
stos
jg
mov
lcall
push
xor
mov
and
je
fbld
or
cli
mov
mov
add
sub
out
jp
xlat
inc
dec
or
imul
mov
int
mov
lahf
adcb
aad
push
jmp
xlat
out
loope
les
das
stos
aam
mov
adc
lahf
rorb
push
loopne
cltd
push
aaa
dec
arpl
adc
sub
push
pop
sbb
xor
popa
push
mov
in
mov
out
or
fwait
outsb
jmp
xchg
inc
inc
fcomip
cmpsb
sub
xor
out
sbb
cmp
jbe
leave
pop
xlat
dec
mov
cmp
into
add
jmp
sbb
pop
lahf
pop
pop
cwtl
inc
cmp
cmc
xchg
adc
pop
imulb
dec
stos
dec
inc
xchg
loop
aas
xor
sti
lds
add
fcomi
jle
xchg
lret
ficompl
aad
xor
ds
ss
icebp
mov
sub
pop
mov
add
push
stc
push
in
repz
sub
js
fcmovne
fistl
push
push
jb
inc
xor
loope
test
sbb
inc
add
mov
jbe
les
push
fsubr
insb
jae
outsb
daa
popf
pop
jbe
pop
out
jae
jbe
pop
fchs
das
notl
in
daa
mov
mov
mov
cmc
test
mov
push
stc
lret
add
xchg
pop
jnp
loopne
in
push
dec
push
shlb
repz
pop
aad
out
std
xor
out
aad
int3
pop
push
dec
div
ficoml
inc
mov
jle
push
push
mov
loop
into
mulb
jl
push
movsl
inc
js
mov
lcall
call
cli
mov
icebp
test
sbb
inc
pushl
sti
cmp
es
inc
pop
lcall
add
addr16
outsl
js
stos
test
lret
pop
and
dec
mov
loopne
xchg
inc
icebp
push
sub
pop
add
aam
push
shr
scas
inc
flds
loopne
xchg
out
xor
sti
pop
cmc
movsl
xchg
rcrb
std
std
push
lret
push
sub
xor
clc
mov
out
dec
xor
sub
sbb
mov
das
int3
mov
jmp
push
rolb
sti
push
cli
pop
push
jns
xchg
std
int3
add
negl
mov
orl
xchg
cmp
jnp
or
adc
js
sub
iret
xor
pop
je
lods
cmp
aas
dec
push
cmpsl
stos
add
fldt
xchg
loopne
or
insl
cmp
mov
add
dec
int3
out
xorl
fldt
cmp
and
pop
jp
sbb
stc
sub
icebp
out
mov
pusha
test
js
cmp
or
cmp
dec
out
fxch
cmp
loope
sbb
jge
pop
mov
icebp
cmp
jbe
lods
mov
cmp
frstor
xor
pop
fstps
insb
inc
dec
mov
adc
mov
add
sub
jmp
sarl
xchg
lock
cmp
shrl
outsl
sbb
out
fwait
adc
dec
sbb
in
lret
imul
repnz
or
or
test
cmp
push
dec
fcmovnu
add
mov
or
add
stos
outsl
dec
lret
aad
clc
adc
fstps
fcom
sub
stc
push
stos
fisubrl
pop
lcall
test
push
push
fildl
fisubrs
jnp
push
fstp
hlt
push
fcomps
lea
imul
cwtl
fstpt
aam
jns
stc
xor
fstps
test
sarl
or
stc
dec
mov
jnp
sub
mov
or
mov
xor
loope
icebp
stc
lods
jmp
cmp
cmp
fmuls
mov
ja
ja
shll
mov
cld
stos
aam
mov
jnp
or
jp
mov
ja
fstpt
sub
jle
pop
inc
cmp
lret
cs
pop
mov
mov
dec
jnp
lret
pop
cmpb
fadds
fcmovu
hlt
cmp
int
push
jnp
fidivrl
cld
pusha
xchg
mov
push
mov
out
xlat
sub
mov
jno
push
pop
push
jnp
sbb
adc
xor
mov
jle
and
jnp
test
fbstp
repz
xchg
fwait
aas
lret
stc
dec
rorl
mov
js
cmp
dec
xchg
sub
imul
sbb
mov
inc
dec
stc
jnp
sarb
in
leave
popf
jo
push
dec
js
pop
sbb
lods
mov
pop
arpl
lds
sub
out
jp
inc
test
xchg
clc
sub
mov
pop
sub
mov
pop
ljmp
mov
fisttps
mov
aad
jecxz
fwait
repz
pop
dec
or
es
push
and
divl
gs
mov
negb
std
and
pop
pop
adc
or
fbld
cmpsl
cmc
xor
dec
jnp
test
jle
jnp
adc
out
frstor
jno
adc
adc
xchg
jmp
out
clc
pop
in
jmp
iret
fsubrl
stos
pop
and
cld
or
pushf
and
insb
pop
or
or
jb
xor
stos
loop
out
lods
mov
and
add
hlt
add
popf
sub
mov
or
xor
xor
cmpsl
testl
insl
pop
mov
mov
or
cmp
xor
imul
push
push
jne
mov
je
jmp
sub
outsl
stos
mov
push
xchg
xor
test
adc
sub
and
dec
imul
add
jmp
pop
ja
mov
add
cmc
lcall
imul
cmp
ret
daa
aas
inc
xchg
or
icebp
mov
mov
loopne
mov
lcall
cmc
mov
xchg
aam
adc
rcrb
imulb
mov
fwait
into
lcall
into
stos
ret
imul
xchg
or
xchg
xlat
push
mov
inc
or
aaa
xchg
add
push
nop
and
xlat
loope
mov
lret
adc
ret
wrmsr
jg
in
jae
and
out
dec
xchg
repz
int
inc
icebp
push
icebp
dec
xor
and
or
sub
popf
or
pop
gs
cltd
push
jmp
add
xchg
lods
xchg
push
jnp
in
cmc
xor
ficomps
in
sti
insl
fstpt
cmpsl
and
xchg
pop
jns
js
repz
call
pop
test
negl
push
sbb
mov
or
js
or
cmp
lret
mov
mov
pop
enter
aad
pop
sbb
push
sbb
arpl
imul
fistpl
mov
daa
call
bnd
pusha
idivb
lods
mov
pop
xor
xor
push
outsl
sub
cmp
dec
pop
mov
cmp
lods
mov
scas
in
mov
subl
xor
in
and
pop
inc
sub
arpl
sub
loop
ret
dec
sub
or
jne,pn
dec
inc
shll
xchg
cmp
ret
lea
inc
sbb
into
push
or
jno
dec
mov
inc
jns
scas
push
fistpll
movsl
dec
aad
hlt
jge
pop
in
push
jbe
icebp
leave
daa
jp
das
push
vsqrtsd
rolb
cltd
mov
pop
adc
aam
int
add
adc
call
sahf
lahf
lods
cmp
lret
xor
sub
sbb
add
pusha
push
imul
and
andl
iret
xlat
stc
xchg
iret
mov
dec
xor
mov
push
pop
js
leave
dec
add
cmp
xlat
ret
inc
inc
popa
stos
xlat
roll
aad
or
fldt
icebp
xor
xchg
sbb
jg
imul
mov
push
movsl
hlt
std
decb
lods
jmp
mov
inc
fisubs
jo
sbb
cmpsb
jmp
cmp
xchg
push
int
push
xchg
mov
js
or
test
gs
flds
xchg
movsl
into
mov
clc
pop
jbe
mov
repz
js
add
and
add
ret
fwait
jle
pop
iret
les
test
cmp
mov
out
pop
mov
fcoms
mov
hlt
call
fcoms
or
add
pop
iret
push
cmp
gs
push
cmp
cmp
inc
hlt
stos
inc
dec
clc
es
addr16
lds
jmp
pop
movsl
dec
sarl
or
pop
mov
pop
shll
repnz
mov
push
jg
dec
sbb
cld
xchg
fdivrl
int3
rcl
inc
inc
and
arpl
repz
push
lahf
ret
loopne
push
sub
pop
or
je,pt
pop
lret
xchg
jno
xchg
push
push
ja
mov
sti
inc
and
xchg
jg
cmc
mov
dec
std
stos
cmp
jecxz
clc
mov
xchg
mov
es
ss
fwait
xchg
int3
sub
aad
adc
outsb
pop
jo
aas
adc
add
add
mov
jns
fwait
out
jle
pop
xor
movsb
adc
cs
pop
push
or
inc
in
xlat
inc
arpl
xchg
cmp
sub
xchg
ret
pop
mov
sahf
and
mov
cmpsb
rcll
add
sub
mov
push
stos
out
into
js
fistl
adc
xor
decb
xor
in
xor
jne
in
fwait
pusha
jl
add
push
mov
lcall
mov
fmul
or
mov
push
xor
jne
pop
dec
loop
and
mov
xor
sub
adc
xor
sbbb
inc
aaa
jecxz
arpl
sub
dec
sti
hlt
call
lret
and
pop
roll
pop
mov
fisttpl
xchg
add
or
sub
mov
inc
xor
pop
xchg
add
cmp
xchg
cmc
dec
jmp
arpl
xor
adc
ss
xchg
mov
pop
xchg
aaa
mov
aad
xchg
jno
iret
inc
lret
int3
outsb
test
mov
ljmp
imul
inc
outsb
fildll
push
push
pop
mov
mov
or
sbb
xor
outsl
sub
das
xchg
xor
and
xchg
fsubrs
imul
decl
es
jnp
jnp
loope
dec
rcrb
pop
pop
xor
sub
lahf
add
sbb
push
mov
add
es
jns
addl
jnp
lods
cmp
repz
imul
xchg
std
dec
enter
mov
jo
adc
test
add
add
stos
pop
ja
popf
mov
jae
mov
aaa
jmp
mov
xchg
jb
divb
ds
or
sbb
push
mov
xchg
or
lret
sub
test
into
dec
call
cmc
shrb
adc
xchg
sbb
out
ret
mov
pop
out
cmp
cli
sbb
fsubrs
mov
repz
mov
dec
push
jmp
jl
sar
in
pop
cmp
cld
test
cmpsb
xor
cmp
mov
adc
sbb
test
daa
or
mov
sbb
dec
and
int3
inc
or
jno
addr16
loopne
inc
rolb
into
xor
push
inc
icebp
stos
push
leave
repz
mov
xor
dec
loopne
jns
aaa
dec
push
pop
idivb
dec
notb
adc
aaa
push
jg
outsb
shlb
jae
mov
mov
mov
xchg
nop
icebp
mov
cmc
scas
or
or
sarb
mov
lret
stc
jnp
jmp
fldt
fistpl
hlt
inc
inc
je
repnz
clc
mov
sbb
add
sub
add
sbb
shlb
mov
push
not
and
push
jnp
sbb
clc
jnp
test
add
inc
imul
loopne
cmp
cmp
xchg
stos
mov
test
mov
pop
imul
ror
ret
js
pop
ja
jmp
and
add
sahf
mov
cmp
adc
or
or
clc
cmp
gs
fcmovnu
cmp
add
insl
mov
ja
fistpl
jnp
aad
mov
or
jbe
cli
outsl
fucomip
shrl
pop
js
fstpt
fnstcw
js
repz
mov
mov
js
sub
inc
sub
movsb
sub
push
sub
stc
jno
sub
lock
clc
dec
les
fwait
xor
out
adc
add
inc
jnp
adc
lods
cmp
js
inc
test
sub
lret
add
cltd
xor
imul
fdivrs
lret
push
xlat
pusha
add
sub
int
ss
add
jmp
imul
or
fildl
or
lahf
mov
cmp
clc
push
dec
shrl
xchg
dec
or
stc
sbb
and
push
or
inc
mov
pop
mov
imul
pop
sti
adc
dec
shrl
or
enter
cs
mov
dec
inc
lret
dec
cmp
in
cmp
dec
hlt
test
aam
dec
sbb
js
pop
sbb
pop
jne
mov
mov
jnp
or
mov
dec
dec
fimull
jecxz
xor
test
inc
jmp
cmp
pop
sub
cmp
cmp
dec
sbb
addr16
rolb
mov
jno
cld
sub
push
test
pop
ds
fsubl
cmp
rcrl
sub
lcall
push
cmpsl
call
cmp
ss
add
mov
sbb
xor
sub
inc
pop
adc
dec
jo
jnp
pusha
stos
pop
pop
stos
or
divb
adc
out
xor
and
xor
dec
aad
jge
cwtl
lcall
pushf
push
test
icebp
add
or
notl
sub
aam
imul
inc
xchg
lret
lahf
xor
scas
fdivrl
jno
or
sub
fmull
rol
sub
mov
movsb
dec
je
fisttpl
jp
pop
xchg
in
mov
icebp
pusha
mov
jbe
push
and
cmp
sub
jp
repz
js
pop
test
lret
jno
inc
pop
xor
inc
pop
imul
adc
and
pop
inc
or
mov
mov
add
pop
fldt
mov
pop
sub
dec
fistl
sbb
insl
mov
out
jmp
mov
push
add
js
imul
out
jns
jecxz
addr16
clc
rcrl
stc
push
ret
int3
and
mov
ds
shlb
js
mov
ret
push
enter
adc
sbb
jno
popf
mov
aad
sub
push
xlat
scas
stc
xor
dec
nop
xor
fwait
aaa
icebp
cld
js
mov
inc
and
frstor
jnp
daa
xlat
in
adc
daa
popf
jmp
jecxz
jge
test
loope
push
repnz
pushl
and
adc
dec
cmp
out
mov
xlat
icebp
xor
addl
retw
cmp
jbe
outsb
mov
jb
push
pop
or
mov
ja
fmulp
jle
xchg
pusha
iret
movsl
stos
jp
or
and
stos
mov
mov
leave
fcomi
xlat
jmp
or
xor
sub
std
scas
and
mov
push
dec
movsl
push
jge
xchg
lods
subl
push
test
cmp
dec
sub
pop
int3
aaa
jl
pop
xor
jne
mov
mov
out
dec
inc
pop
mov
xchg
imul
cli
jmp
rclb
mov
add
das
dec
push
mov
mov
pop
sbb
sarb
dec
pop
nop
jg
test
pushf
fstps
inc
enter
cmp
imull
cmp
dec
push
sub
into
and
push
js
pop
sub
push
icebp
cmpsb
icebp
sbb
push
aaa
mov
xor
rcll
mov
movsl
add
addr16
xor
ds
inc
sbb
aam
cmpsb
call
cmpsb
andb
bound
fiaddl
xchg
xchg
mov
and
mov
dec
add
or
mov
rcr
jmp
sbb
ljmp
loopne
imul
sbb
gs
sub
push
mov
loope
outsb
xchg
mov
add
push
sbb
push
push
aam
jge
jbe
push
out
cmpsl
inc
mov
jns
hlt
add
popa
lcall
sahf
cmp
call
das
outsl
pop
pop
imul
test
fs
mov
mov
in
adc
add
mov
push
cmc
das
xchg
xchg
loopne
cli
daa
ret
and
repz
push
notb
fdivr
test
pop
jmp
pop
add
movb
jbe
cmpsl
push
stc
or
pop
add
adc
cs
pop
and
cmp
or
fwait
andb
adc
sti
js
sbbl
out
outsl
sti
sub
xchg
pop
fs
mov
push
aas
shrb
inc
pop
cmp
ficompl
cld
push
cld
and
int3
xchg
inc
sub
xor
pusha
inc
add
imull
xor
add
call
ljmp
movsl
mov
jno
lret
lcall
or
test
pop
push
je
xchg
je
adc
dec
push
gs
lahf
ja
adc
ljmp
push
cltd
shrb
idivl
mov
sbb
cli
aaa
push
fstpt
aam
shrl
sbb
sahf
or
std
aas
or
sub
dec
hlt
out
xchg
xor
dec
test
imul
xlat
popf
jnp
lcall
outsl
jb
call
cmp
lea
aaa
das
lret
jle
dec
icebp
fistpl
cmp
jb
cmpsb
pop
ja
mov
push
sub
push
xlat
jbe
rcrb
inc
stc
repnz
leave
dec
mov
push
aam
jbe
inc
mov
lret
lods
sbb
rorl
fcomi
mov
push
jb
loopne
fdiv
xchg
cld
sub
xlat
xchg
cmpb
or
inc
or
pop
sarb
xlat
cmp
pop
xor
outsb
insl
mov
mov
repnz
and
lcall
fimull
xchg
std
rolb
sub
mov
hlt
jno
mov
fcmovbe
jbe
std
pop
fldl
xor
xor
dec
mov
int
adc
mov
cmp
loope
sbb
push
nop
mov
out
in
dec
setb
out
or
loopne
dec
pop
es
in
and
test
cmp
add
ficoms
jnp
test
xlat
movsl
sbb
sub
ss
notl
push
push
fildl
out
dec
cmp
mov
int
dec
pop
and
cmpsl
jns
movsb
pushw
je
ja
jne
pop
pop
adc
and
mov
xor
repz
mov
sahf
loopne
mov
test
stos
xor
imul
fwait
jae
adc
xlat
push
mov
cmp
push
mov
xchg
sbb
xchg
mov
add
lea
or
pop
and
xchg
lret
sbb
dec
jmp
jno
cmc
add
incl
pop
sbb
mov
test
stc
mov
cmc
stc
push
mov
aad
out
inc
out
jbe
mov
jbe
sbb
cmp
test
pop
stc
stos
gs
push
xchg
pop
mov
fstpl
test
loop
jb
xchg
daa
imull
mov
add
push
xchg
jg
xchg
scas
sub
cmpl
xor
stos
insb
out
pop
mov
sti
add
in
mulb
pop
daa
pop
pop
ja
fwait
pop
or
lahf
pop
js
leave
addr16
repz
or
sbb
stos
mov
sbbb
sbb
ret
xor
xor
xchg
dec
icebp
arpl
inc
cmp
xlat
jo
mov
sbb
imul
cwtl
mov
xchg
es
mov
sub
xor
xchg
adc
adc
and
aad
add
add
int3
cmpsb
cli
mov
dec
iret
dec
and
mov
pop
scas
sub
dec
add
pop
jl
pop
shlb
and
pop
jg
push
popf
sub
nop
sub
push
sbb
pop
mov
mov
movsl
push
das
add
adc
add
mov
push
inc
xor
xlat
sbb
mov
es
xor
inc
sub
or
lcall
movsl
jne
jb
lds
outsl
test
mov
xlat
xchg
adc
fs
xchg
call
enter
loop
or
cmp
sub
jp
clc
inc
movsl
xor
mov
pop
push
mov
adc
sub
cmc
mov
les
inc
push
repz
ss
pop
jmp
cli
sbbl
jg
push
lcall
inc
xor
cmc
mov
mov
add
sub
rorb
jb
shrb
fidivrl
jnp
xchg
add
cmp
pop
jg
push
popa
xchg
sub
popf
int3
jb
add
xor
push
stos
lods
testl
xchg
clc
sub
std
jnp
cmp
lret
out
pop
into
or
mov
es
test
or
push
jg
fstps
es
rcrb
popf
adc
out
js
fdivrs
dec
repnz
sbb
inc
cmp
xor
xor
sbb
cs
data16
sbb
jne
pop
push
test
stos
fisttps
aaa
dec
cmp
and
pop
popf
jae
lcall
xor
cmpsb
mov
int3
lret
and
jge
test
cmp
push
pushl
clc
push
lahf
adc
imul
neg
scas
sarl
jg
leave
sahf
cli
pop
jecxz
das
pusha
or
lods
scas
shl
mov
data16
mov
jecxz
test
movsl
cmp
jecxz
sub
repz
pop
add
inc
daa
xchg
aam
rep
push
fstps
xchg
cmpsl
push
in
pushf
imul
cmp
iret
shlb
pushf
jmp
stos
aad
jle
or
jmp
test
jl
mov
je
add
or
aaa
scas
adc
rcll
movsl
pop
je
mov
lock
in
ljmpw
or
imul
pop
xor
pop
jge
jnp
lds
or
push
xchg
lock
sub
insl
or
mov
sbb
push
clc
jecxz
pop
stos
push
pop
inc
in
mov
or
shr
inc
and
loop
aad
add
lahf
in
cmp
cmp
cmp
xlat
int3
and
lret
add
bound
push
mov
mov
call
sub
cmpsb
add
ja
adc
pop
mov
or
cmp
jnp
dec
js
lock
stc
jnp
xor
xlat
sub
aad
pop
test
shlb
arpl
push
notb
shlb
push
or
adc
dec
repnz
call
push
loopne
fdivr
imul
je
xor
lret
rcrl
xor
push
mov
ljmp
mov
mov
xor
cli
mov
pop
shlb
mov
cmp
aam
jno
jl
mov
or
pop
aam
loope
movsl
dec
sahf
lret
loopne
or
jp
xlat
stc
or
xor
fisttpl
inc
loop
push
xor
in
cmp
xchg
push
and
xchg
push
cmpsb
mov
fwait
lcall
nop
jmp
xor
pop
mov
pop
stc
dec
xor
mov
es
stc
lret
mov
or
popf
mov
flds
pop
shrl
xlat
xor
aas
fadds
pop
inc
adc
rcll
das
in
scas
divb
dec
cmp
sub
push
or
xchg
sub
mov
lcall
iret
test
jnp
add
or
xor
adc
bound
pop
fs
std
test
jb
xlat
cmpsb
cmp
push
xchg
cmp
jnp
inc
das
dec
sbb
aam
sbb
loopne
sbb
aas
aad
push
cs
aad
mov
push
cmpsb
jno
jmp
fiaddl
jnp
cmp
mov
cmp
repz
int3
mov
push
push
add
ss
pop
push
xlat
repnz
movsb
adc
push
dec
jo
sbb
push
lcall
lahf
dec
insb
bound
js
pop
push
xor
xor
or
pop
hlt
popa
ljmp
cwtl
into
int3
inc
sub
sub
stc
push
pop
scas
movsb
mov
in
jno
mov
jae
shlb
mov
xchg
jnp
push
inc
es
jg
popa
and
add
cmc
enter
cs
popa
dec
mov
sbb
xchg
jle
fldt
mov
xor
sahf
add
cmp
shl
jbe
jnp
insl
roll
add
pusha
mov
xlat
movsb
std
gs
jg
str
xchg
out
iret
frstor
sub
cli
xchg
movsl
ficomps
jne
push
repz
jge
icebp
fldt
cld
cmc
cmpsb
jb
je
lret
dec
outsl
cmp
adc
pop
jb
xchg
pop
dec
js
mov
mov
xchg
inc
sbb
es
pop
xchg
aam
inc
lret
inc
xchg
mov
xchg
jnp
xchg
sahf
je
jp
loop
movl
loopne
test
mov
js
cmp
and
push
or
jne
pop
mov
dec
dec
iret
call
std
push
push
repz
sub
icebp
and
or
inc
in
add
adc
sbb
pop
mov
cmpsb
pusha
test
iret
ss
or
mov
scas
orl
aaa
jne
and
or
xor
gs
movb
jnp
push
xor
push
sbb
jge
jmp
das
jmp
inc
into
loopne
xor
fistl
aad
xchg
mov
movsl
and
or
mulb
std
add
or
xor
stc
mov
xor
jg
xchg
add
imul
filds
inc
hlt
push
clc
jnp
and
cli
add
out
or
mov
xchg
xlat
ss
mov
and
pop
push
fldl2t
rorl
cmp
push
mov
into
add
cmpl
nop
pop
sti
jmp
mov
outsb
lds
add
mov
mov
add
shll
sub
loop
xlat
andl
lcall
push
cmp
test
imul
add
push
lcall
add
sub
aas
push
add
subb
mov
hlt
jns
mov
sbb
fucom
cld
push
fadd
pop
addr16
pushf
rorl
jo
dec
fmuls
xor
push
ljmp
imul
repnz
adc
scas
cmp
xor
xor
jmpw
jmp
xor
dec
push
lock
movsl
stc
orl
cltd
xchg
dec
xor
daa
xchg
pop
gs
xchg
pop
dec
push
pop
or
and
js
cmp
mov
pop
iret
cmp
adc
mov
lds
stos
cli
les
ret
inc
pop
and
stc
fwait
pop
mov
into
aas
mov
and
sbb
es
push
out
xchg
in
pop
pop
lds
push
push
mov
sub
xor
add
gs
movsl
aaa
aad
sub
adc
push
loopne
xlat
gs
gs
dec
add
movb
cmp
pop
shr
pop
lcall
in
iret
incl
jb
sub
mov
lea
cmp
jg
cmp
into
lock
les
adc
out
ret
mov
xchg
popf
mov
repnz
inc
jns
dec
cli
mov
xchg
es
push
jnp
dec
jbe
mov
push
fistpll
mov
out
push
jae
fisttpl
pop
xor
pop
cld
out
sub
aam
test
fsub
iret
icebp
jnp
lods
subl
inc
mov
ficompl
lret
stos
jmp
cmp
sub
repnz
jle
push
mov
pop
pushf
and
mov
xor
sahf
sub
push
xor
pop
hlt
push
iret
or
test
xchg
faddl
stc
jp
pop
dec
out
div
push
test
add
xor
sbb
cmp
pop
xor
sub
ficompl
or
xor
hlt
jg
push
push
fcmovbe
push
cmp
out
inc
and
ret
add
popa
aaa
test
test
dec
dec
push
repnz
jmp
xchg
sbb
mov
dec
jno
inc
adc
add
or
xor
clc
lret
scas
mov
subl
arpl
mov
or
xor
fs
fs
leave
mov
loope
xlat
fcmovnu
icebp
movsb
cwtl
xchg
sbb
jmp
xlat
jecxz
push
push
stos
insb
mov
mov
jnp
dec
sub
sbb
out
out
cmp
mov
mov
rolb
out
push
mov
pop
cwtl
xchg
fdivl
mov
sbbb
inc
ja
xor
stos
or
ljmp
mov
mov
jbe
daa
xchg
aam
xor
jb
pop
int3
push
mov
cwtl
sub
lds
jnp
sahf
imul
mov
pop
pop
fstl
mov
xor
in
xchg
inc
pop
sbb
cmp
xchg
test
jno
lds
mov
out
mov
sbb
jns
fcomip
mov
sbb
mov
in
jmp
stc
fidivl
test
push
pop
out
mov
push
sbb
aad
dec
pop
dec
add
insl
loope
mov
fnstenv
push
out
call
pop
in
in
mov
adc
sub
iret
jns
fildl
cmp
dec
xlat
or
sub
in
je
mov
cmp
pop
repz
dec
in
pop
dec
pop
int3
mov
sbb
rcrl
jmp
loopne
dec
outsb
xlat
test
clc
lcall
testb
daa
je
xchg
jle
xor
pop
bound
lods
adc
lret
pop
add
das
push
fmull
mov
cmp
cs
bound
or
cmp
sbb
add
cmp
xor
std
mov
aad
loop
jne
insb
cmp
iret
test
inc
ficoml
or
push
and
data16
jnp
and
mov
lret
mov
mov
mov
imul
repnz
inc
pop
cli
pop
in
push
sbb
and
inc
daa
sub
mov
sti
pop
imul
sub
sbb
pop
sub
test
push
les
imul
xor
addr16
pop
push
mov
outsb
jae
xchg
sbb
and
lret
es
push
ret
or
adc
out
lret
add
cmp
fisubrs
mov
fstpt
jbe
pusha
sbb
cmpsl
pop
mov
xchg
dec
aad
jnp
push
in
push
stos
jle
push
xchg
pop
sti
cmp
out
ror
jnp
jecxz
sahf
cmpsb
mov
movsl
jbe
mov
jp
lret
push
cmp
hlt
shrb
pop
stc
cmpsb
jo
mov
lret
stos
addl
jmp
test
xor
jns
pop
push
dec
mov
and
test
aaa
into
inc
push
xchg
cwtl
pop
popf
lods
or
xchg
ret
xor
mov
dec
stos
addl
aad
or
fstpl
sub
sub
add
sbb
pop
mov
lcall
movsb
add
out
pop
adc
mov
cmpsl
filds
sti
fsubp
mov
fcompl
push
pop
push
adc
dec
int
mov
cmpsb
ret
js
orl
push
jo
cmp
push
push
popa
lret
leave
aaa
mov
fmuls
jns
mov
dec
lock
stos
aad
loope
inc
int3
mov
pop
xor
push
inc
hlt
dec
lahf
sti
push
repnz
sbbb
inc
rcrl
pop
push
cmc
pop
pop
jno
push
push
arpl
movsl
pop
notb
sbb
pusha
mov
movsl
pop
incb
jge
jg
xor
jo
iret
xchg
ret
jo
mov
int3
jo
dec
hlt
and
int
pusha
dec
mov
fldenv
lds
or
int3
add
enter
setnp
sbb
lcall
push
cmp
in
ljmp
or
adc
jnp
stc
ret
sub
push
lock
mov
rcll
and
out
pop
sbb
cmpsl
xchg
xor
sbb
cmp
repnz
and
add
pop
sbb
mov
stc
mov
xlat
insb
fdiv
mov
pushf
ljmp
mov
cmp
rcl
sbbl
movl
sbb
jnp
addb
pushf
cwtl
scas
loopne
lcall
mov
sub
std
adc
leave
lds
sub
js
xchg
scas
or
lcall
aaa
fcmovnb
push
call
sbb
xchg
fwait
pop
hlt
gs
inc
jne
popl
test
gs
lock
popf
fimull
mov
xchg
mov
int
or
str
out
sub
adc
and
xor
mov
test
lea
push
sub
push
sbb
jno
jnp
xchg
inc
cmp
testb
or
sub
testl
js
or
xchg
bound
je
cwtl
adc
mov
ss
jecxz
stos
jno
sub
pop
dec
xchg
fsts
mov
xor
fldcw
pop
sbb
pop
cwtl
pop
icebp
mov
cmp
jle
test
call
or
sti
stos
pop
popa
sub
push
outsb
jo
xchg
pop
es
rcl
int3
jge
roll
les
aaa
mov
jnp
lcall
lcall
mov
mov
xor
imul
inc
les
movsb
in
mov
dec
cltd
pop
rclb
out
inc
imul
iret
es
jmp
and
mov
pop
push
imulb
fisubrs
push
xchg
dec
add
inc
negl
lcall
repnz
lock
pop
daa
lods
sar
lcall
adc
mov
sub
sbb
dec
adc
imulb
das
into
and
jl
std
ljmp
lret
rcll
fcmovnb
and
sahf
fldcw
jge
mov
fiaddl
xor
inc
push
call
lods
lahf
sbb
mov
push
jmp
jg
or
je
out
rcll
clc
jg
sbb
jp
sub
push
push
repz
xchg
shlb
test
imul
push
stos
test
jno
or
xchg
push
rcr
shlb
xor
adc
and
mov
xchg
js
mov
add
lcall
iret
jo
push
ljmp
jnp
push
imul
shlb
jmp
dec
adc
fwait
jbe
mov
dec
xchg
add
sahf
mov
test
mov
xor
cltd
andb
cmpb
das
lods
pop
ret
fptan
incl
pop
pop
xor
sbb
movsl
push
mov
jge
xchg
push
and
js
imul
mov
div
arpl
out
jb
inc
loope
jno
int3
pop
aaa
inc
add
sbb
mov
mov
divl
movsl
adc
or
adc
cmp
mov
inc
pop
cmp
orps
ds
xor
push
sub
mov
insl
xchg
mov
cmp
ljmp
fstl
scas
out
pop
inc
dec
daa
lds
jno
xchg
pushf
or
jl
cmpsl
mov
clc
imul
mov
or
inc
stos
xlat
or
xchg
rcrl
push
sbb
dec
pop
xor
nop
pushf
jno
push
xchg
sbb
add
loopne
add
push
xchg
insb
xchg
and
sahf
stos
mov
xlat
sub
mov
pop
push
lret
iret
das
jecxz
mov
mov
cmpsl
xlat
movsl
lea
mov
adc
xor
pop
loopne
rol
xor
adc
adc
movsl
push
mov
xchg
shll
sub
out
ret
in
push
inc
stc
inc
aad
loopne
cwtl
xor
jbe
cmpsl
js
jns
mov
mov
dec
aas
mov
stos
movsb
mov
addl
mov
hlt
mov
xchg
mov
cmp
or
mov
inc
in
dec
fwait
sub
movsl
jecxz
push
push
xor
rclb
pop
mov
mov
repnz
lods
xor
cmp
popf
adc
or
aas
ret
sbb
fs
sub
aaa
sub
stc
pop
mov
pop
cmp
pop
sub
push
mov
mov
add
cmp
xchg
pop
or
aaa
jo
jb
clc
add
mov
fisubl
mov
in
dec
xchg
ljmp
jnp
sub
add
xlat
jmp
pop
shll
adc
fcoms
and
push
shlb
mov
push
clc
jmp
mov
iret
sub
jg
in
sub
test
pop
sbb
push
out
stos
adc
push
adc
sub
fcmovb
inc
test
xor
inc
or
pop
sub
xchg
add
push
xchg
push
xlat
ret
jo
int
xor
push
stc
mov
mov
mov
dec
das
pop
inc
mov
clc
xor
dec
xchg
fadds
fbld
xor
dec
cmpsb
gs
xor
lret
mov
in
or
ficoml
xchg
mov
cmpsl
ret
shrl
std
push
cmp
pop
pop
mov
and
test
ret
icebp
push
dec
ss
scas
lods
push
xor
aaa
jp
xor
xlat
mov
inc
nop
out
popf
jo
mov
test
push
inc
rorl
jg
sub
mov
das
xor
jb
jbe
bound
testl
sahf
adc
jae
test
dec
jno
hlt
jns
idivb
stos
dec
mov
subl
lods
inc
pop
pop
push
jb
xchg
rcrl
push
jne
pop
xorb
xchg
sub
int
cmp
sub
mov
mov
bound
rol
sahf
sbb
mov
int
dec
cmp
pop
dec
test
dec
push
xchg
fadds
mov
xchg
xor
out
pop
push
aam
jno
xchg
ret
lcall
mov
in
out
add
aam
push
pop
mov
or
cmp
notl
xlat
fabs
daa
shrl
dec
mov
nop
fwait
movsl
adc
add
fcompl
mov
js
mov
or
cld
or
pop
mov
stos
test
js
setnp
sub
into
mov
mov
das
fxch
das
push
jg
pop
jnp
pop
dec
cmp
out
dec
lds
scas
add
sub
inc
stos
mov
push
fbstp
lret
lods
xchg
rep
xor
in
xchg
lcall
jp
and
sbb
sbb
loope
dec
into
out
add
mov
lea
push
shll
pop
xchg
push
cmp
add
addr16
int
push
pop
aam
flds
fistl
repz
fs
fcoml
push
aas
pop
lret
iretw
stos
push
cmp
in
inc
loop
cmpsb
xchg
pop
sbb
pop
rolb
inc
adc
popf
scas
sub
nop
data16
les
lock
stc
pop
ret
adc
jp
cli
sub
add
roll
mov
or
test
inc
fildll
mov
xor
repnz
repz
pop
stos
lcall
xor
aas
mov
stos
gs
inc
sbb
sub
les
and
insb
imul
scas
and
cmp
lods
fistl
or
aad
push
lds
in
or
or
jae
sub
jo
or
or
or
out
add
ret
mov
arpl
fldt
add
dec
jno
add
or
add
jns
cltd
call
mov
ljmp
mov
cmp
enter
gs
or
out
add
rcr
inc
test
cmp
shl
mov
cmp
cmp
mov
repz
jmp
push
lds
fldt
jno
fldt
idivb
in
pop
pop
in
sbb
dec
js
mov
test
or
add
call
sbb
push
mov
mov
stos
mov
aam
inc
mov
sbb
jp
test
sub
dec
or
mov
xor
jnp
sub
pop
inc
cmp
cmp
inc
mov
adc
xor
push
and
cmp
cmp
iret
cmp
add
jo
je
mov
fstpt
adc
or
test
cli
test
cmp
or
xor
pop
popf
aad
xchg
jb
jns
dec
pop
sarb
dec
shrl
inc
push
or
cs
pop
mov
mov
fnstcw
in
lret
or
addl
pop
pop
push
out
sbbl
sbb
sub
lcall
inc
fldl2t
hlt
cmp
jmp
fstpt
or
mov
adc
cmp
hlt
xchg
or
lret
sub
or
ljmp
aam
adc
xor
sti
js
lret
dec
stos
lret
sbb
imul
fidivrl
pop
jnp
cs
ficompl
jmp
cmp
imul
sarb
mov
and
pop
pop
push
mov
cmp
mov
sub
fidivl
out
xchg
jp
sub
sbb
je
dec
flds
cltd
movsl
xor
pop
popf
mov
jnp
imul
mov
loope
pop
mov
popf
cmp
fwait
jae
xchg
out
push
adc
and
jnp
inc
jne
cmp
lods
int
or
js
inc
movsl
push
add
ja
ljmp
lcall
jnp
in
xchg
and
and
inc
push
repz
ret
jmp
cld
stos
iret
and
lahf
arpl
rcll
aad
jge
cld
pushf
jmp
mov
xor
pop
add
jp
jg
in
inc
jmp
daa
sbb
push
call
cmc
adc
inc
stc
rcl
mov
xlat
adcb
mov
js
std
inc
adc
pushf
jae
pop
call
dec
in
pop
jge
xchg
int
push
bound
add
pop
mov
fimuls
mov
dec
addr16
mov
jno
xchg
sbb
cmp
repz
inc
jnp
or
fldt
mov
jbe
sarl
or
ror
outsb
out
mov
jg
xlat
xchg
mov
repz
imul
repnz
jne
mulb
or
cwtl
jnp
loop
xlat
xchg
mov
xlat
and
xchg
ds
jne
push
mov
cmp
nop
mov
addl
dec
xchg
lret
je
mov
pop
and
sbb
inc
stc
xchg
jmp
push
xchg
cmp
cmpsl
stc
pop
inc
push
lret
add
mov
sbb
mov
test
sbb
mov
rol
inc
sub
rcrb
xor
jecxz
sti
and
shrb
int
inc
add
mov
int3
sub
jnp
out
push
pop
xorb
sbb
aad
mov
inc
xchg
sbb
shrl
rolb
lods
stos
aam
pop
xchg
xor
out
jbe
adc
dec
sbb
sbb
fwait
push
test
pop
negl
mov
or
cltd
pop
sbb
jns
cmp
xor
sti
in
inc
pushf
jle
pop
lret
sarb
jp
xor
push
add
sub
dec
stc
push
dec
pop
pop
xchg
or
les
loopne
pop
add
xor
or
std
repz
std
call
xchg
fwait
jle
or
das
jnp
pop
mov
pop
cmp
shlb
ret
arpl
stos
filds
subb
mov
aad
daa
int3
mov
xor
repz
addb
sbb
cmp
xor
push
push
adc
push
add
or
into
sub
cmpsb
cmp
xchg
mov
iret
xlat
shlb
stos
mov
cmp
fdivl
and
aad
push
addr16
cmp
subb
andb
cli
and
pop
jp
mov
pushf
xor
add
jno
pop
lods
and
bound
decb
cmp
add
clc
fisubl
jmp
pop
stc
rcl
ret
jbe
cmp
icebp
imul
pop
idivb
imul
push
xchg
sbb
imul
pop
xlat
call
negb
int3
and
pop
inc
aam
pop
fwait
bound
das
lock
cmpxchg
add
xor
or
scas
lcall
mov
call
push
add
fidivrs
scas
arpl
adc
pop
int3
and
lock
mov
out
stc
pop
in
push
sub
mov
cmp
cmp
mov
cmpsl
xchg
stc
cwtl
sub
loopne
and
mov
imul
jo,pt
push
sbb
cs
pop
ret
mov
jnp
andl
pop
jb
int
adcb
push
stc
fmull
cli
xor
fisubrs
rcll
and
fcomi
ret
pop
loopne
fwait
ret
imul
jno
pop
cmp
lods
xlat
mov
in
testl
sbb
adc
outsl
scas
mov
ja
lea
jbe
jae
push
jno
je
lcall
mov
pop
test
lret
ss
sub
stc
cmc
shld
aad
sub
lods
mov
data16
push
sbb
inc
mov
push
jnp
aam
and
sbbb
pop
inc
push
or
fiaddl
cmpsb
jmp
adc
lret
outsb
push
jnp
hlt
int3
push
jg
shrb
cld
push
out
dec
adc
rcrb
mov
xlat
das
insb
sti
pop
jl
pop
ficoms
cmp
arpl
sti
xchg
push
ljmp
hlt
mov
sub
adc
in
jmp
aam
adc
stos
adc
xor
mov
xchg
repz
adc
repnz
daa
xchg
mov
das
jmp
aaa
movsl
mov
ds
add
adc
jge
fwait
int3
dec
ss
mov
pop
mov
in
and
xchg
add
fcoml
in
jmp
ds
push
mov
pop
jb
mov
jno
cld
les
mov
sbb
fistl
push
fwait
sbb
mov
in
outsb
inc
pop
out
movsl
shlb
sub
adc
mov
data16
ljmp
icebp
dec
fwait
jge
push
pop
hlt
sub
scas
dec
cli
sti
cmc
adc
inc
ljmp
int3
sahf
out
or
xchg
loopne
cli
sub
subl
xlat
or
xor
out
mov
loop
jmp
pop
cli
xor
push
scas
add
push
mov
sbb
inc
mov
ret
jae
mov
pop
xchg
sub
pusha
fstpt
andb
mov
popf
fs
sub
jecxz
iret
xchg
push
pop
xor
jno
shlb
jge
sub
cmc
inc
mov
cltd
stc
inc
movsl
ret
ds
mov
mov
pop
dec
std
sti
jmp
cmp
or
lcall
xchg
fidivrs
cmc
stos
dec
xor
mov
sub
ds
js,pn
hlt
adc
adc
inc
insb
xor
pushl
add
add
jbe
adc
lcall
cmc
loop
dec
sub
jno
les
repz
test
fcoms
xor
push
cltd
mov
add
xor
iret
xchg
and
js
pop
test
or
aam
or
aas
fwait
imul
xchg
stc
cmpsb
movsl
out
mov
jp
mov
xlat
push
fs
add
ds
xchg
aad
cmp
test
pop
cmp
push
pop
divl
ret
mov
mov
xabort
lret
mov
push
and
ret
mov
xlat
cmc
jne
insl
mov
lret
aas
xchg
mov
xlat
cmp
xor
rclb
lods
sub
or
pusha
ret
cli
push
loop
mov
add
or
jge
sbb
fidivrs
mov
pop
pop
jne
sub
mov
aam
out
nop
mov
jns
rorb
sub
sub
xchg
sti
inc
stc
pop
mov
stos
das
inc
push
push
and
loope
xor
bound
cld
mov
jns
cmp
pop
inc
jg
jp
std
je
pop
cmpsb
arpl
mov
inc
das
std
mov
xlat
jmp
fwait
or
jmp
mov
mov
sbb
push
cs
loop
idiv
push
push
mov
mov
lds
clc
ja
pop
fmull
daa
xlat
lods
ret
pop
pop
pop
insl
out
mov
stos
negl
sub
das
jecxz
stc
mov
jb
xchg
jmp
and
add
cmc
cmpsb
ja
pop
call
jo
sahf
dec
jnp
pop
xlat
jnp
and
inc
inc
inc
ss
mov
xor
dec
out
push
mov
push
or
fisubl
idivb
xchg
mov
lods
xchg
xchg
push
popf
int3
adc
sarb
repz
fwait
or
lock
inc
and
jecxz
and
or
or
fisubrl
cmp
mov
f2xm1
lret
add
sub
pop
inc
dec
or
sahf
in
mov
xchg
jns
pop
mov
adc
call
int
jl
dec
mov
js
adc
pop
rorl
mov
leave
mov
jg
inc
out
fistpl
mov
sub
pop
les
xchg
cmpsl
test
cmc
ret
lret
xchg
clc
pop
jo
call
out
ficoms
int3
inc
je
push
mov
stc
test
mov
mov
or
sbb
incb
adc
mov
xor
test
mov
xlat
sbbb
xor
orb
mov
shll
cmp
aaa
mov
mov
mov
pop
out
icebp
aad
mov
and
test
cwtl
lock
dec
js
pop
aam
out
cmp
inc
xor
cmpsb
ljmp
in
dec
mov
mov
leave
iret
pop
lea
mov
xchg
or
adc
outsl
mov
inc
inc
cmp
ss
cmpl
ret
and
push
popf
rorl
jae
repnz
nop
mov
stc
imul
in
out
sbb
js
ja
mov
adc
repnz
mov
call
fistpll
fisttpl
aam
mov
jge
mov
mov
pop
cli
pop
fcmovnu
jg
ljmp
imul
inc
fldt
mov
in
enter
pop
rorb
dec
ds
xlat
mov
fldcw
push
push
mov
lret
pop
lcall
stc
mov
mov
mov
fsubs
push
mov
repnz
fistps
xchg
arpl
stos
dec
sub
es
sbb
lret
xchg
xchg
pop
jecxz
ss
push
repnz
shlb
inc
lcall
stc
add
mov
push
dec
out
jo
sub
jb
add
js
mov
push
popf
jg
fnstcw
jg
shll
clc
adc
push
daa
insb
mov
xor
into
mov
xor
pop
aam
cmp
cmp
jbe
and
sbb
repnz
in
push
xchg
mov
int
add
or
or
andnps
sahf
js
sbb
aas
push
aad
adc
push
or
dec
fisubl
pop
pop
jb
and
mov
js
insl
int
adcl
cmp
cmp
mov
push
push
in
pop
cmpl
jg
add
sub
imul
movsb
mov
adc
icebp
mov
out
repz
xchg
and
mov
pop
pop
cltd
push
mov
jecxz
sub
push
add
cmp
mov
adc
aas
add
and
inc
sbb
add
xlat
push
xor
aas
iret
sub
pop
add
ds
cli
fwait
push
sbb
rorb
rolb
cmp
icebp
xchg
lahf
hlt
sbb
bound
pop
adcl
imul
lods
mulb
lcall
nop
xor
sub
xchg
xor
sub
aas
imul
xor
or
push
and
jle
and
xchg
and
adc
inc
and
cmp
test
xchg
sbb
in
rorb
ja
loope
xchg
or
mov
sbb
shrl
pop
flds
mov
or
insb
xor
and
pop
iret
inc
clc
scas
dec
cmpsb
adc
nop
add
or
ja
mov
mov
mov
mov
xchg
dec
cwtl
sub
add
mov
aaa
loop
lret
add
ss
add
adcb
gs
xor
lcall
add
jns
cmc
ret
jg
test
mov
add
out
pop
xor
mov
out
shlb
pop
inc
cmp
loopne
push
lcall
stc
mov
sub
iret
jmp
pop
xor
mov
sub
pop
xorl
sub
imul
pop
hlt
call
cltd
sarb
mov
sbb
xchg
mov
addr16
fwait
imul
das
and
out
add
shlb
movsl
subl
fisttpl
pop
xlat
lret
push
movsb
pop
jno
out
repnz
jp
xlat
xor
stc
pop
sbb
pop
xchg
lods
cmp
mov
arpl
cmpsb
xor
les
inc
jne
loop
pop
fwait
sub
out
mov
xor
mulb
jnp
mov
jp
test
imul
and
and
lock
shr
push
xor
es
fcomps
cmp
push
stc
adc
xor
fnstcw
aas
xor
mov
or
ds
xchg
pushl
mov
repnz
movsb
aad
cmp
jg
adc
lods
aad
inc
adcb
sbb
mov
or
in
or
cmp
cmp
push
stos
idivb
int3
inc
ret
jae
inc
push
fidivs
mov
adc
xchg
data16
arpl
cmp
gs
sub
arpl
or
rcrl
testb
cmp
cmp
jns
push
out
rorb
imul
pop
sbb
sahf
mov
mov
icebp
cmpsb
sub
fisttps
stc
inc
pop
pusha
cmc
fsubl
sub
xchg
negl
data16
jo
jae
jns
sbb
test
sub
insb
int3
pop
mov
sub
cmp
jnp
repz
xchg
fwait
stos
test
fstpt
pop
and
stos
push
aaa
jecxz
incb
rorl
stc
xchg
movsl
fnstsw
pop
notb
sub
outsb
mov
and
xchg
lock
mov
out
jmp
dec
mov
inc
mov
js
das
fldcw
insl
jbe
in
push
lds
xor
pop
mov
pop
xor
inc
popa
sbb
push
lcall
outsb
inc
sbb
xchg
out
cltd
dec
adc
ljmp
sarl
repz
sub
int3
xchg
flds
sub
sbbl
adc
or
xor
add
mov
stc
or
daa
out
pop
sbb
sub
sub
cs
nop
fldcw
dec
fnstcw
xor
sbb
mov
sbb
lret
or
cs
fidivl
xchg
stos
inc
xor
mov
mov
mov
jl
push
pushf
ljmp
scas
mov
pop
pop
push
xchg
and
inc
mov
and
inc
insl
test
ret
mov
addr16
mov
test
cmp
adc
sbbl
mov
mov
xchg
lods
dec
fwait
pop
pop
hlt
jmp
adc
cmp
mov
sbb
clc
test
inc
mov
icebp
jnp
jge
addb
lds
stc
cmpsb
mov
inc
lods
cmp
cmp
outsb
xchg
push
movsb
repz
repnz
lods
ja
rorl
lcall
jo
cmp
repnz
dec
pop
inc
sub
sahf
mov
push
mov
sbb
inc
jno
pop
call
pop
sbb
out
mov
js
push
push
std
mov
js
xor
xor
mov
cld
cmpsb
adc
and
jle
xchg
mov
dec
push
cmp
push
hlt
dec
ss
fcmovnu
mov
js
cmp
sub
push
or
jl
jb
inc
xchg
mov
into
cwtl
xor
mov
xchg
js
or
mov
mov
and
mov
sub
repnz
insl
xor
xlat
js
pop
pop
pop
cmc
mov
es
mov
push
cmp
sub
rcrb
pop
clc
scas
xchg
pop
jecxz,pn
sbb
lcall
ror
inc
mov
pop
push
mov
jns
aas
mov
push
mov
fldenv
sarl
cltd
mov
cmpl
cltd
dec
inc
rol
xchg
stos
mov
cmc
inc
xchg
cli
iret
add
cmp
push
repz
dec
xor
xchg
repz
mov
aaa
jp
shll
mov
pop
xlat
xchg
aas
rcr
sbb
shr
call
int
gs
jae
loop
sbb
repnz
movsb
sbb
push
cltd
dec
daa
add
add
icebp
cmc
pop
mov
dec
sub
fidivrl
cmp
mov
scas
out
repnz
psubusb
mov
fildll
mulb
call
xlat
pop
and
es
cmp
imul
stos
dec
dec
iret
pop
xchg
cmp
dec
cmc
popa
stc
stos
aam
sbb
ret
sub
pusha
mov
cli
jae
stos
dec
sub
push
jnp
inc
pop
test
pop
or
sbb
ss
mov
frstor
test
add
cmp
xchg
bound
mov
es
pop
pop
adc
push
in
out
ja
arpl
or
push
xor
mov
xor
test
cmpsl
test
mov
sub
xchg
hlt
pop
push
shll
stos
xor
ljmp
xor
lock
iret
cmp
stc
pop
clc
jo
stos
add
out
gs
cmp
mov
rorl
cmpsl
push
pop
or
mov
sti
ret
sub
sbb
jmp
dec
popa
lds
mov
pusha
push
jle
sub
mov
adc
imul
ljmp
cmpsb
clc
daa
lcall
stos
inc
imul
or
sub
or
lret
sahf
fsubrs
aad
or
pop
in
inc
mov
xor
mov
add
rorl
jge
and
cmpsb
iret
jl
xchg
push
and
incl
push
stc
insl
push
ror
xchg
push
pop
dec
mov
xor
je
inc
add
nop
lds
rclb
dec
fstp
bound
fs
or
add
pusha
dec
mov
add
and
xchg
and
cmc
ret
push
je
push
pop
push
incb
iret
fucomi
xor
mov
rorl
sub
inc
xchg
sbb
sub
movsb
mov
xor
std
in
mov
sub
pop
or
sub
xor
inc
lcall
mov
cs
js
fiadds
ficoms
dec
xchg
ja
dec
mov
xchg
xor
push
icebp
push
xlat
testb
mov
jae
and
test
push
icebp
pop
cli
or
loope
loop
jno
mov
xlat
mov
inc
int3
mov
dec
push
push
cmp
iret
repz
or
hlt
lock
call
imul
jnp
ret
fcoms
xor
lods
divl
std
fistl
iret
mov
jns
mov
and
testb
mov
cmpsl
mov
fldl
aad
adc
or
popa
popa
xchg
inc
dec
push
adc
pushf
xchg
push
xlat
mov
ficoml
lods
or
cmpsl
adcl
mov
jg
pop
fdiv
mov
xor
sti
fcmovnbe
ljmp
xchg
pop
in
push
push
popa
inc
sahf
repnz
add
cltd
or
mov
cmp
out
outsl
mov
enter
out
xor
sahf
bnd
cltd
sbb
and
out
cli
mov
sub
call
fsubrl
mov
fildll
out
cltd
xor
clc
les
dec
loop
pop
add
jo
aam
inc
xor
mulb
cmc
or
lret
mov
xchg
and
inc
pusha
insb
inc
add
inc
aaa
mov
out
xchg
loop
or
cwtl
mov
add
inc
in
scas
inc
out
pop
iret
sub
and
cmp
xchg
dec
mov
xor
mov
dec
push
mov
dec
fisubrs
xor
mov
mov
lret
mov
or
int3
stc
pop
inc
jnp
sub
xchg
mov
lret
and
insl
jmp
cld
mov
call
mov
jl
sarl
xchg
stc
jl
cs
pushf
pop
movsl
xor
mov
sahf
mov
in
cmp
adc
or
or
mov
mov
ja
pop
out
mov
inc
inc
cmp
pop
sbb
push
jnp
loopne
cmp
xlat
mov
sbb
out
dec
lcall
sub
rolb
xchg
aad
jecxz
scas
mov
lret
cltd
mov
mov
sbb
pop
imul
cmpsb
or
or
cli
or
movsl
inc
xlat
sbb
sbb
xor
test
mov
std
dec
dec
xchg
jmp
cmp
pop
push
outsb
mull
push
call
ja
stos
ds
int
ja
into
icebp
or
push
jo
and
sub
xlat
pop
xchg
xor
xchg
insl
sub
sbb
or
sbb
rclb
out
js
mov
xor
cmp
lods
pop
cmp
fistpl
fbstp
fstps
mov
or
roll
push
sbb
add
shrb
mov
sti
loopne
jl
stc
mov
nop
out
stos
iret
mov
sbb
divb
push
jo
pusha
int
or
mov
dec
adc
sub
dec
xlat
orl
cwtl
pop
push
push
jo
roll
loopne
fidivrs
cmp
addr16
cmp
sub
insl
in
pop
shll
sub
dec
fsts
adc
dec
sub
popa
aad
aaa
xor
cmc
addr16
inc
jae
mov
add
lods
sbb
inc
ds
cmpsl
sbb
and
int3
cmp
test
cmpb
lock
scas
divl
stc
xchg
pop
dec
mov
jne
test
int
mov
lahf
mov
fwait
punpckldq
or
pop
jb
adc
ror
xchg
cltd
fisttps
dec
addl
stc
xor
add
cmp
in
mov
sbb
lret
pop
push
dec
jae
sub
js
push
sbb
xchg
mov
insl
testl
fwait
scas
jnp
pop
addr16
inc
test
dec
sarl
push
jo
lea
pop
adc
mov
push
fcoms
and
pop
cmp
mov
xlat
dec
push
push
aad
lock
mov
repnz
into
mov
pop
xlat
shlb
sti
sub
cmc
mov
jo
or
cmp
fprem1
test
xlat
fwait
into
mov
imul
cmpsb
divl
push
hlt
xor
jns
pop
mov
mov
inc
ret
outsb
sbb
xchg
sbb
pop
mul
sub
aas
or
jle
or
inc
stos
sub
add
xor
mov
pop
push
mov
push
sub
cmp
pop
xchg
xchg
repz
xchg
lret
mov
test
push
or
jb
out
sbb
sub
scas
cmpsl
mov
sub
hlt
mov
sbb
test
xor
mov
out
addr16
sub
int3
ror
neg
dec
push
cmp
scas
or
incl
cmp
sbb
lea
push
addr16
sbb
rcrl
push
cmp
dec
add
aad
dec
xor
xchg
sbb
or
jnp
pop
call
lcall
xor
jnp
lahf
int
sbb
lcall
mov
or
orl
daa
ljmp
push
sbb
sti
les
sub
dec
add
pop
adc
lods
ss
fisttpl
js
pop
fidivrl
cwtl
jbe
jno
push
xchg
fidivs
sbb
sub
mov
pop
out
subb
push
add
jl
or
inc
fnstenv
pop
add
pop
xor
sub
movsb
sbbb
movsl
push
leave
pop
push
pop
mov
pop
mov
xchg
dec
jae
push
aaa
dec
daa
mov
call
pop
lds
pop
jp
shlb
jg
int3
cmp
lods
cmp
jmp
les
mov
jle
cltd
or
fisubs
arpl
repz
pop
dec
push
aam
push
mov
dec
xchg
aaa
mov
or
dec
pop
add
xlat
in
out
out
mov
insb
jp
dec
movb
jnp
gs
or
pop
jp
into
or
icebp
add
ret
and
mov
clc
or
fisubl
std
rorb
sub
aam
les
or
jb
add
aaa
dec
xchg
xchg
popa
fiadds
push
imul
dec
inc
das
xchg
vpmacswd
pop
clc
push
cmpl
cmpsl
pop
push
dec
dec
int3
cltd
hlt
int3
add
pop
aam
cmp
inc
popf
inc
push
mov
and
pop
lods
mov
out
lahf
lcall
jns
sbb
add
adc
inc
mov
add
pop
jmp
out
cli
pop
add
xchg
dec
lds
or
jno
or
push
shr
push
sbb
add
sti
jmp
sbb
scas
loop
pop
into
sub
rcrb
or
jne
dec
stos
push
cmpl
pusha
cltd
test
xlat
jne
pop
in
sbb
aaa
sti
pop
xchg
jmp
or
pushf
and
in
loope
cmp
gs
mov
jp
adcb
sub
pop
jnp
push
out
dec
push
test
jge
sub
jo
pop
out
jnp
xor
insb
mov
dec
in
icebp
repnz
add
fwait
js
test
sub
ret
mov
mov
adc
shr
sbb
daa
fcoml
fdivr
mov
sbb
or
imull
mov
sbb
mov
test
outsl
xor
bound
add
in
lock
cmp
sub
cmp
mov
aad
fucompp
je
and
icebp
dec
lahf
cmp
lret
mov
jmp
dec
stos
pop
and
jne
mov
xorb
js
jmp
out
jmp
push
shrb
sub
mov
jnp
add
and
push
mulb
rorl
fiaddl
movsb
cmp
vmovapd
test
xlat
cmp
pop
lahf
add
xorb
outsb
fdivrs
testl
jae
lds
push
inc
repz
lahf
push
ja
mov
push
pop
sub
mov
inc
push
inc
xchg
ret
push
xor
jb
lahf
add
xchg
pushl
xor
jnp
stos
jnp
dec
pop
sbb
and
jmp
dec
out
lcall
in
les
mov
pop
push
arpl
jb
std
push
into
mov
push
mov
xorl
ficompl
jmp
shll
faddl
xchg
stos
jecxz
mov
test
inc
inc
mov
inc
push
jbe
xchg
mov
subl
aas
xlat
xchg
aaa
mov
sti
pop
sub
dec
mov
xlat
imul
mov
jno
push
sti
mov
cli
push
dec
mov
or
push
ret
jge
adc
outsl
add
mov
mov
ret
mov
jge
pop
shlb
aam
pop
mov
and
sbb
jns
rcll
loop
push
mov
lds
mov
cmp
xlat
jg
dec
in
hlt
cli
retw
jnp
movb
cmpsl
jae
xchg
aas
sub
inc
dec
xchg
push
aad
fidivrs
rcr
loop
fdivs
push
in
aas
xor
push
xor
loopne
or
test
sub
cli
sbb
cltd
or
jmp
sub
sub
xorb
iret
sbb
jmp
jb
pop
mov
push
jns
ffree
adc
iret
inc
icebp
inc
add
call
fmull
cltd
cmp
popf
jnp
pushf
cmp
js
incl
enter
lods
xor
aam
or
rcrl
jns
pop
lcall
sbbb
pop
cmc
xchg
icebp
xchg
movb
adc
dec
cmp
stos
sbb
pop
or
xor
mov
sbb
push
fs
andl
fwait
xlat
or
aas
push
fmuls
lahf
xor
test
add
sub
push
mov
nop
sbb
push
divl
mov
mov
cmp
mov
shlb
cmp
in
xlat
aad
lret
les
or
inc
repnz
fisubl
sbb
mov
adc
push
add
shlb
dec
xchg
outsl
adc
inc
cmp
pop
adc
movsl
mov
and
ret
cwtl
jl
dec
aam
nop
xchg
iret
and
pop
xor
sub
jmp
kmovb
and
xorb
xchg
sub
into
xchg
mov
jle
xor
pushf
mov
mov
sbb
mov
pop
ror
in
mov
aaa
and
jle
imul
fstpl
jle
iret
in
or
dec
outsb
inc
jns
pop
out
cmp
repnz
jp
cli
insl
aad
xor
rorb
cwtl
test
aad
mov
add
pop
stos
mov
clc
repnz
push
cmp
bound
faddl
pop
xchg
xor
into
mov
dec
sub
xchg
ss
ret
cmc
or
mov
int
sub
mov
inc
jnp
pop
das
pop
xlat
xchg
aad
mov
call
shl
and
mov
lea
imul
xchg
sub
cmp
cmpsb
repz
ja
mov
mov
test
or
int3
adc
enter
movsl
push
pop
pop
std
cmp
cli
int3
inc
loope
data16
fwait
arpl
jg
sub
or
lcall
jle
add
icebp
jmp
and
test
gs
jmp
jmp
sbb
leave
xchg
clc
fcmovnu
gs
dec
lea
pop
pushf
cmp
xchg
js
pop
add
sbb
mov
inc
sbb
stc
xchg
jg
stos
test
jns
scas
xchg
js
pop
mov
pop
mov
pop
adc
cmc
pop
sbb
adcb
mov
push
xchg
out
lahf
std
imul
stc
pop
cwtl
lcall
jg
sbb
sub
or
xorl
or
ficoms
sahf
dec
into
push
out
rcr
repz
xlat
pop
sbb
mov
xchg
pop
push
movsl
scas
xchg
mov
fistl
loopne
ret
loope
xlat
cmpl
push
pop
js
xor
sti
repz
stos
xor
sub
fwait
cmp
push
lret
xor
xchg
lods
inc
aaa
jbe
mov
xchg
inc
add
add
dec
out
and
push
or
push
mov
xor
inc
sbb
adc
dec
push
mov
sub
sbb
cmp
testb
and
fwait
sbb
hlt
lods
pushf
jb
cmpl
mov
aas
rorl
int3
xchg
inc
mov
sbb
clc
add
lcall
jne
adcb
pop
push
add
xchg
push
lods
push
dec
add
xchg
pop
shlb
out
lret
jno
mov
inc
jne
jbe
jnp
fcompl
xchg
repnz
repz
sub
xchg
pop
jg
push
and
adc
hlt
lcall
int
movsl
hlt
jge
repz
jno
fcompl
pop
ss
pop
pop
pop
sbb
mov
cmc
in
or
int3
mov
mov
mov
cmp
push
sbb
hlt
rcll
shlb
or
loopne
sahf
addr16
js
dec
fldcw
xchg
call
les
jg
addr16
xchg
mov
cwtl
hlt
in
mov
jne
add
ret
stos
je
lea
push
mov
push
push
mov
repz
mov
mov
das
mov
lock
js
icebp
les
shrb
jg
jb
stc
ret
xchg
adc
xchg
pop
cmc
mov
rorl
movsl
add
scas
insl
fwait
mov
sub
outsb
call
mov
dec
jmp
xchg
dec
dec
xor
and
int
cs
repz
pop
dec
and
pop
push
jge
insl
lret
mov
xchg
pop
cmp
rclb
mov
stos
rcrb
sub
mov
and
icebp
xchg
jne
pop
adc
xchg
and
and
mov
cmp
lods
imul
sub
mov
mov
ret
dec
cmp
sbb
leave
jno
cmpsb
jnp
scas
push
loope
mov
inc
sub
or
cmpsb
outsl
leave
lock
xor
pop
shrb
insb
imul
movsl
or
dec
or
sbb
lret
xchg
ja
jmp
pop
jmp
pop
xor
pop
in
xor
sub
or
push
aam
xchg
xor
lea
push
fs
adc
dec
xchg
adcb
jae
loopne
cmp
popa
xchg
sarb
xlat
fstpt
xor
and
in
sub
adc
pop
stc
mov
cmp
mov
cmp
xor
mov
int
arpl
xlat
daa
cmp
testb
jbe
mov
roll
lcall
decb
pop
aad
mov
fildll
add
das
sub
inc
add
add
cltd
sub
scas
rclb
repz
xlat
mov
adc
mov
fbld
hlt
add
push
aaa
popf
dec
rdtsc
aad
stc
hlt
test
testb
sbb
loopne
push
test
divl
dec
push
insb
hlt
adc
aad
jb
xor
imul
dec
or
mov
dec
dec
scas
cld
fldenv
and
into
repnz
aaa
cmp
mov
pop
mov
adc
notl
pop
clc
arpl
aad
cmp
sarb
push
loopne
lret
adc
jnp
push
aam
repnz
mov
mov
dec
pop
add
or
inc
or
cmp
mov
cld
dec
mov
or
subl
pop
jge
jmp
jnp
xchg
std
enter
lret
jp
fcomip
cmc
loop
enterw
push
fidivrl
lret
xor
repz
cmp
lret
mov
movsl
fdivrs
push
xchg
pop
orl
inc
hlt
loop
arpl
lods
mov
stc
dec
pop
or
data16
shl
push
cmp
clc
xchg
dec
mov
aad
cmpsb
cmpb
shll
lock
push
push
inc
fwait
xchg
into
imulb
hlt
stos
call
push
int
filds
in
in
xchg
ja
push
inc
or
cmc
inc
icebp
inc
or
in
flds
es
neg
out
xchg
in
call
push
jbe
out
aad
xor
cmp
or
jge
shrl
sub
pop
addr16
cmp
jb
push
jp
push
ja
rolb
scas
pavgw
sub
aas
xor
xor
push
sub
andl
repnz
rcr
rclb
push
xchg
testb
dec
stc
and
sbb
fcomip
jnp
add
sub
rcl
or
cs
mov
negb
jo
je
pop
jecxz
lret
imul
divb
inc
or
in
or
cmp
dec
mov
add
shll
js
bound
shll
pop
adc
std
xchg
dec
or
dec
cmp
mov
jg
jno
inc
xchg
shll
fld
cmc
hlt
or
cltd
movsl
mov
nop
cmp
rcll
push
fsubs
fisubl
fucomip
push
add
xchg
add
sub
sbb
jns
add
movb
fldt
mov
jmp
out
scas
cmc
mov
cli
popf
pop
mov
cmp
mov
lret
iret
and
out
xor
adc
push
and
push
sahf
push
lods
xchg
dec
inc
dec
sahf
int3
jae
sub
idivl
xor
shrl
pop
mov
mov
mov
sbb
aaa
sarb
dec
loop
push
sub
mov
aaa
mov
pop
fwait
mov
movl
insl
mov
dec
or
push
mov
xor
jbe
dec
mov
inc
rcr
inc
aad
arpl
and
ljmp
out
cld
jne
pop
pop
or
xchg
xchg
pop
in
add
outsb
sbb
sbb
cwtl
aaa
push
jge
aam
sub
sbb
imul
cli
lcall
sbb
ljmp
lcall
dec
sbb
jmp
xlat
std
lahf
cmp
lods
sarl
mov
mov
arpl
hlt
or
adc
daa
lcall
lret
data16
cvttps2pi
cwtl
popa
pop
loope
je
int
stos
add
scas
imul
rcr
and
dec
out
cltd
xlat
add
mov
jno
mov
imul
iret
fs
pop
gs
sbb
pop
cmp
jne
js
cld
pop
int3
or
adc
js
lea
mov
in
mov
jo
push
push
sbb
jbe
std
je
pop
pop
int
sarb
mov
clc
vpcomuw
xor
sbbl
int
dec
jmp
sahf
aad
xor
jmp
rcl
push
inc
lcall
pop
scas
pop
sub
fcoml
gs
std
cmpsb
add
sub
iret
push
aad
aas
fwait
lea
cmp
sbb
push
cmp
movsb
mov
cmpsl
push
xor
cmp
repnz
and
add
pop
add
push
ret
xchg
pop
inc
jae
pop
stos
inc
or
xchg
iret
lcall
les
jecxz
pop
loop
lods
pop
inc
mov
hlt
cmpsb
sbb
out
mov
push
rcrl
inc
xor
rcrl
pop
fistps
pop
xchg
jnp
in
add
adc
lds
psraw
pop
das
fsubs
loop
fistl
imul
movsb
mov
mov
or
lods
loopne
aad
pop
fsubs
inc
loopne
or
inc
jns
xchg
pop
es
addr16
loope
or
jecxz
cmc
clc
and
data16
dec
push
sar
cmc
xchg
test
jne
test
cmp
ret
test
xchg
enter
cmpsb
pop
ja
test
aaa
lret
fildll
cmpb
imul
roll
outsb
mov
sbb
addb
nop
adcb
jnp
add
lea
sub
cmp
data16
and
cld
mov
enter
inc
clc
mov
ficompl
jnp
inc
sbb
add
adc
cmp
inc
push
pushf
clc
push
sahf
pop
hlt
lret
into
lret
int3
stos
fiaddl
pop
xor
or
xor
and
dec
iret
rcrl
cmp
stc
jbe
mov
lods
lcall
add
dec
xchg
sub
ret
or
into
loop
push
jge
fdivs
fwait
test
addr16
adc
mov
mov
sub
pop
xchg
add
stos
mov
push
cmp
pop
test
dec
stos
mov
addb
push
ret
or
cmp
or
lret
push
negb
sti
xchg
mov
sti
add
pushl
mov
sahf
cs
jmp
je
add
dec
jb
cwtl
xchg
dec
stc
sub
mov
aas
sub
roll
adc
mov
xchg
push
pop
xchg
repz
test
mov
xor
and
aam
dec
or
js
mov
lahf
fwait
xor
mov
push
mov
inc
jle
xor
push
inc
mov
icebp
cmp
xlat
push
rorl
out
cmp
arpl
pop
iret
mov
pop
and
mov
ds
mov
repnz
mov
adc
sbb
xor
add
and
dec
sbb
push
test
gs
xchg
inc
and
jp
sbb
inc
outsb
lods
xlat
lret
ss
test
lcall
sbb
jp
add
push
mov
xchg
hlt
inc
mov
mov
fwait
lcall
popf
lods
fsubs
hlt
pop
pop
scas
sbb
jnp
cmp
aam
mov
movsl
pop
icebp
jae
jge
push
loope
add
mov
push
pushf
subb
mov
movsb
bound
das
xchg
fs
cli
add
sub
fsts
int3
mov
cmp
sbb
js
fcomip
out
mov
adc
cmp
dec
aaa
aam
adc
xchg
mov
jp
data16
xchg
je
add
mov
aaa
lret
jp
out
sbb
mov
out
add
adc
cmpsb
roll
or
xor
pop
pushf
or
mov
mov
ss
mov
shrb
sub
push
rolb
cmp
orl
cmp
sub
insb
mov
xor
sub
cwtl
test
lahf
orl
lods
mov
sub
lret
mov
dec
sub
xchg
stos
stos
jg
xchg
scas
mov
mov
shlb
xor
xor
stos
dec
inc
movsb
sbb
dec
insl
dec
fildll
fcmovb
xchg
fwait
arpl
stos
popf
pop
data16
mov
hlt
dec
out
mov
mov
add
jp
or
data16
aam
jle
or
out
neg
jmp
cmp
push
popf
outsw
or
jnp
fidivl
cmc
jg
sbb
js
lret
push
add
or
jbe
lret
push
xchg
sub
imul
jb
test
int
xchg
mov
cmp
das
test
push
arpl
je
inc
pusha
lahf
int3
sbb
repz
push
add
subb
sbb
lds
mov
cmp
pop
push
pop
xor
test
xor
fdiv
cld
mov
cmp
cmp
outsb
cmp
xchg
pop
imul
test
mov
iret
jo
ss
inc
divl
sub
aad
mov
ljmp
aas
bound
scas
mov
clc
mov
testb
out
inc
push
mov
js
lea
in
xor
stc
mov
dec
hlt
jnp
xor
dec
les
push
mov
inc
int
fistpll
jge
lods
and
xor
nop
int
cli
add
testl
jmp
sub
pop
pop
fstps
cld
cmp
xchg
aad
mov
jg
ret
sub
aad
mov
sti
pop
aad
stos
bound
lret
aam
or
pop
pop
test
adc
rcl
add
cmc
jecxz
fwait
inc
add
in
mov
rolb
cli
jg
or
mov
lahf
mov
pop
ja
setp
mov
nop
pop
add
iret
dec
jecxz
jmp
push
lcall
out
xchg
pop
popf
xor
test
xchg
xchg
xor
iret
sub
rolb
aad
inc
dec
jle
pop
ret
stos
mov
and
pop
inc
sub
cmp
lcall
ljmp
inc
xchg
sbb
ficoml
jmp
push
fidivs
xchg
jbe
mov
pop
cmp
jg
cmpsb
lret
lods
imul
inc
mov
hlt
mov
ljmp
pushl
jg
sub
push
daa
into
pop
xchg
fldenv
lcall
shlb
popa
andl
mov
lret
pop
dec
adc
cmpsb
fsts
imul
inc
jnp
inc
sti
push
es
jge
and
jns
cmp
mov
sbb
jmp
out
test
jnp
ret
pop
push
repz
movsb
ljmp
cmp
mov
xor
push
add
in
adc
fstpt
fistpl
sub
lock
xor
loopne
jnp
loope
dec
lock
xor
test
test
jnp
mov
xchg
dec
aas
mov
jnp
enter
jbe
cmp
push
or
xadd
js
mov
push
outsl
or
in
int3
pop
sbb
test
xor
cmp
dec
lock
repz
cltd
push
mov
or
inc
lcall
cmp
fistl
cwtl
mov
pop
mov
xor
sbb
or
fcmovnbe
pushf
sbb
stc
insb
mov
add
aaa
sbb
cmp
mov
lret
cmc
mov
cmp
sub
or
mov
aam
ja
repnz
sbb
jae
push
stc
fmul
jnp
outsl
xadd
pop
mov
dec
xor
sti
cs
test
stc
cmp
sub
cmp
mov
jnp
cli
jno
lods
or
lret
hlt
sub
cmp
xor
pop
jnp
shrb
sbb
jnp
mov
jnp
xor
ficoml
jnp
fcom
jmp
pop
insl
aam
in
add
or
mov
cmp
dec
or
sarl
mov
xor
fldcw
dec
jecxz
jle
mov
xor
inc
fwait
fs
sbbl
clc
adc
out
mov
jns
ficomps
push
enter
hlt
dec
jmp
inc
stc
fmul
mov
dec
add
xor
xor
fwait
stc
fimull
insl
mov
lock
mov
lock
hlt
mov
sub
scas
and
sub
sbb
setae
and
scas
je
outsb
js
in
fisubrs
icebp
movsb
lcall
outsb
fdivl
dec
and
clc
xor
enter
ljmp
movsl
int
mov
sbb
imul
adc
sbb
push
xor
test
mov
cwtl
neg
sub
mov
pop
and
mov
or
mov
fdivr
cmp
push
mov
popf
loope
sbb
scas
dec
fldenv
jne
pop
mov
dec
cmp
sti
sub
sub
xor
test
lcall
cmp
mov
testl
pop
xlat
dec
xchg
xchg
arpl
add
ss
sub
mov
out
lahf
add
sub
data16
ret
pushf
jae
mov
sahf
test
hlt
xchg
out
push
sub
adc
pop
outsb
inc
rcrl
movsb
aad
loop
xchg
arpl
mov
nop
mov
pop
enter
push
js
push
jnp
pop
adc
dec
adc
mov
inc
push
iret
insb
leave
or
xor
jmp
addb
ror
pushfw
mov
fdivrl
inc
and
dec
add
out
and
int
fimuls
lahf
lret
fsubr
mov
into
mov
movsl
mov
fisttpl
or
aad
mov
and
cltd
cmp
sahf
cltd
sub
sahf
sbb
xlat
xchg
or
in
xor
inc
ds
pusha
divb
cld
pusha
ret
push
mov
sub
cmp
xchg
pop
ja
les
cmp
xor
stos
or
and
shll
fcomps
test
lea
cmp
adc
idivb
inc
mov
pop
sbb
rolb
pusha
inc
scas
jnp
sbb
les
popf
xor
push
push
jbe
xchg
int3
mov
hlt
ja
xchg
adc
jle
loopne
ljmp
add
pop
push
outsl
call
cmpsb
inc
push
mov
lock
sub
stos
stos
aad
jecxz
pop
in
pop
rorb
jg
sub
clc
outsl
push
pop
in
lods
xor
sub
cmp
sub
xor
push
pushf
adc
pop
loopne
inc
ficomps
push
ret
pop
imul
lcall
int3
ja
or
cli
xlat
xor
fwait
xchg
stc
and
cmp
sub
push
ret
lea
test
push
cmp
das
pop
popf
cmc
rcl
mov
gs
fcomp
adc
out
into
mov
shrl
xor
push
xchg
cmc
xchg
xor
xor
ja
adcb
sbb
ret
mov
enter
inc
lret
call
popa
loope
out
in
sub
xor
cmp
and
in
inc
insl
dec
sub
xor
push
or
or
sbb
xchg
pop
sub
adc
adc
or
insl
into
lods
stos
mov
push
arpl
shll
cmp
cmc
cmpsb
jl
out
mov
ret
adc
imul
add
popf
cmp
pop
scas
inc
roll
popf
xchg
int
pop
cmp
pop
or
cmp
pop
pop
pop
fnstsw
leave
sub
inc
pop
int3
sub
xchg
mov
xor
mov
sti
pop
insl
jle
loop
dec
xchg
add
xchg
ss
fldenv
shll
cltd
pop
mov
push
dec
push
test
loopne
imul
je
and
cmpsb
sub
lcall
aaa
xchg
sbb
sub
notw
clc
lahf
fwait
js
jmp
lods
sub
and
inc
mov
adc
fs
fistpll
hlt
jno
mov
push
js
fwait
dec
lret
xchg
mov
pop
or
sbb
adc
push
and
nop
test
repz
stos
mov
fs
in
jl
fwait
mov
inc
xchg
mov
sub
dec
cmp
aad
repnz
rep
or
sbb
aam
mov
pop
cmp
adcb
push
fists
aam
repz
pusha
ret
xor
adc
dec
inc
aad
mov
int
xor
mov
mov
int3
insl
sub
push
jg
cmpsb
divl
adc
movsb
mov
sbb
loopne
scas
push
inc
lods
dec
dec
or
cmp
cmp
loop
hlt
cmp
lahf
mov
sarl
pushl
or
mov
pop
pop
push
hlt
inc
js
cmpb
test
repz
sub
pop
xlat
out
lcall
mov
mov
js
mov
pushf
or
iret
pop
aad
jno
adc
inc
call
fcoml
cmp
sub
pop
push
adc
adc
fmuls
sbb
popa
cmp
lahf
xchg
xchg
daa
jb
mov
les
aas
xchg
scas
sbb
jmp
dec
dec
pop
mov
push
adc
cli
ljmp
ret
pop
in
sub
stos
jnp
lcall
js
cmp
jle
sbb
pop
push
das
mov
or
add
test
jle
movsl
or
jb
jns
xor
jne
mov
push
cmp
roll
movl
add
sti
push
inc
pop
pop
dec
aas
rclb
adc
push
in
iret
lahf
cmp
push
jecxz
inc
jle
stc
jmp
mov
das
add
push
push
jbe
and
fisttps
loop
adc
adc
dec
xchg
jns
xlat
sub
pop
inc
ret
push
test
add
xchg
lret
movsl
xor
cmc
xchg
sbb
mov
push
inc
inc
dec
or
xor
jmp
test
xchg
inc
into
idivl
aad
jmp
int3
add
sahf
loope
sti
sbb
dec
loopne
imul
xchg
movsl
aad
sbb
fsubr
stos
mov
pop
sete
movl
aaa
dec
in
pop
pop
push
xchg
es
sarb
jmp
cmp
out
shll
ret
mov
mov
adc
push
inc
inc
mov
or
or
stc
push
and
icebp
push
fldenv
mov
int3
jb
add
fdivr
push
cmp
or
or
sub
test
hlt
ret
into
aam
adc
cmp
out
sub
das
dec
cmp
push
test
cmp
bound
loop
inc
inc
gs
shlb
push
out
dec
andb
push
or
mov
out
hlt
enter
jne
rolb
cmp
ret
mov
jnp
daa
movsl
push
mov
push
push
xchg
insl
test
push
xor
mov
pop
iret
push
sti
mov
mov
ret
or
repnz
popf
jmp
jge
cmp
int3
addr16
or
mov
xor
lcall
enter
jge
pop
movsb
cmp
add
inc
lock
xlat
js
dec
outsb
jg
jecxz
fadds
std
in
or
scas
sbb
pop
lods
jp
stc
jg
ret
test
pop
fdivs
mov
or
rcrb
out
mov
jae
cmp
jns
incb
push
inc
or
fldcw
lcall
daa
xchg
out
orb
imul
inc
inc
imul
mov
and
mov
push
add
jg
lds
cmp
mov
xchg
loop
lea
or
daa
xchg
xchg
and
into
iret
mov
call
mov
rcll
enter
cld
jge
push
inc
jmp
push
add
pop
call
jae
pusha
add
lret
jmp
out
pop
mov
jns
dec
or
sub
test
pop
pop
jmp
jl
pop
pop
nop
adc
loop
push
cmp
lds
jmp
or
pop
jae
jmp
and
inc
lods
sub
imul
and
mov
les
inc
out
mov
repz
mov
mov
xor
fildl
sub
test
cmp
push
pop
pop
dec
out
arpl
add
pop
xor
mulb
ss
cmp
sbb
ja
jnp
idiv
push
scas
pop
leave
das
pop
or
loopne
test
loopne
lea
inc
pop
push
mov
es
fcomi
fdivs
and
inc
jmp
pop
sub
js
xor
xchg
test
mov
stc
pop
push
int
sti
dec
jne
sbb
xchg
sti
add
dec
pop
fisubrl
lcall
inc
int
je
push
or
pop
or
push
in
push
and
pop
mov
lret
jno
sbb
or
and
clc
xchg
push
testb
xchg
push
push
sub
dec
mov
insl
sub
je
std
outsb
imul
pop
mov
xor
push
lds
sbb
push
popa
je
push
pop
ret
cmp
mov
mov
cmp
pop
push
xchg
in
push
pop
mov
pop
mov
push
inc
xor
cmpsl
daa
sbb
cmc
sahf
repz
fimull
in
jae
dec
daa
mov
sub
or
fisubs
fwait
pop
int
dec
inc
mov
sbb
in
cmp
ret
pop
popa
jge
jb
in
fimull
cltd
sbb
cmp
leave
xor
js
clc
adc
jp
push
xorb
add
je
xchg
fwait
mov
popf
inc
push
sar
or
fnstcw
push
add
and
jg
jl
sbb
imul
lcall
iret
test
daa
and
icebp
enter
sub
ja
js
sbb
ret
jae
mov
frstor
sbb
mov
push
jmp
sbb
pop
ficoml
hlt
pop
out
cli
lret
fadd
adc
mov
repnz
xchg
testb
aaa
lahf
jp
push
int3
nop
push
cmp
decb
xchg
popa
fdecstp
pop
cmpsb
nop
loopne
insb
stos
xor
lcall
ret
jae
inc
inc
test
fldpi
or
xor
sub
sub
scas
jp
adc
pop
jp
mulb
test
cmp
push
iret
int
pop
je
pop
jmp
inc
test
cmp
arpl
lods
xor
push
adc
mov
and
jl
mov
ds
add
daa
add
sahf
xchg
cmp
xor
push
sub
out
lret
ret
cmc
insl
jno
shll
jns
xor
insb
out
or
shrb
scas
inc
xchg
or
push
xchg
jp
xor
ret
out
sub
pop
mov
lcall
in
call
pop
xor
shll
xchg
dec
pop
rcrb
in
push
cmpb
pop
mov
add
cld
andb
cli
pop
jle
movsb
lmsw
push
loop
and
movsl
or
jb
or
es
push
add
pop
sbb
inc
mov
movsl
pop
fstpt
xor
mov
lahf
cmp
pop
iret
jne
sub
into
out
xchg
aaa
sbb
pop
sub
jo
fldt
sub
pop
jl
xchg
insb
sbb
xor
dec
rcr
ljmp
sti
cmp
in
ja
mov
repnz
fs
jge
or
mov
sahf
testl
or
sub
xchg
and
dec
xlat
add
dec
jmp
xchg
dec
mov
jo
into
push
rcrb
out
inc
sbb
cwtl
pushf
mov
or
call
dec
push
push
mov
lcall
inc
jmp
inc
hlt
clc
or
dec
in
int3
dec
push
in
arpl
sti
pop
mov
xchg
xchg
cmpsb
cmp
cmp
xchg
les
jns
nop
xlat
out
push
push
or
jnp
testb
notl
fwait
iret
add
jb
int
bound
fldenv
or
repnz
pop
cmpsb
enter
js
mov
rorl
cltd
mov
outsl
inc
mov
sub
sub
mov
adcb
pop
popa
jp
bound
inc
imul
es
cmp
cmp
push
int3
clc
or
jo
jno
ds
leave
and
add
shl
mov
add
mov
pop
xchg
repz
pop
xor
cmp
mov
ja
and
imul
pop
repnz
dec
inc
insl
xor
xchg
js
lcall
jecxz
pop
sub
dec
jbe
dec
cwtl
mov
rcl
stc
xchg
xchg
aam
js
push
sbb
jge
mov
fdiv
jp
cmp
add
js
xchg
jb
mov
add
xchg
mov
aam
mov
mov
xor
rcl
in
xor
sbb
je
dec
lcall
push
sarb
push
mov
movsb
stc
inc
int
mov
sbb
cld
adc
mov
or
out
pop
mov
fstpt
and
xchg
ja
add
mov
sub
mov
in
loop
cmp
xchg
jnp
clc
int3
pop
clc
sbb
add
clc
sbb
pop
das
or
imul
fldt
sub
jge
insb
loop
and
stos
and
out
push
cmp
jnp
insl
jmp
mov
sbb
out
jbe
xor
testl
pop
sub
jmp
clc
stc
adc
or
mov
add
mov
cmp
mov
fdivrs
clc
ror
test
push
jb
mov
aam
imull
jmp
insb
adc
pusha
xchg
or
fiaddl
or
ss
add
jnp
icebp
cmp
xor
cli
fldt
popl
sbb
jmp
xchg
push
imul
mov
stos
jnp
fwait
inc
cmp
adc
lret
testb
mov
jnp
cmp
sbb
fidivrl
out
adc
rcrb
sub
dec
mov
pop
fwait
lret
fcomp
fldt
jnp
imul
pop
sbb
push
or
cmp
cmp
sbb
jnp
or
leave
call
or
mov
rcrl
sub
dec
outsl
sbb
cmp
or
or
aaa
fstpt
dec
dec
push
mov
and
mov
lret
xor
pop
dec
cmp
sub
mov
mov
adc
pop
inc
sub
mov
fmul
add
fsubrs
adc
sub
ret
mov
test
pop
lret
adc
mov
add
dec
fldt
sbb
pop
sub
sbb
ljmp
jno
mov
rcrl
sub
shlb
mov
mov
push
or
je
pop
out
les
inc
cmpsl
stc
mov
inc
imulb
loop
xor
out
inc
int3
mov
jnp
mov
cmc
mov
push
adc
inc
jge
jmp
jp
jecxz
sub
and
shll
push
das
fwait
ds
xor
fs
xchg
test
cmp
xlat
jnp
pop
push
add
sub
mov
add
mov
fnstenv
and
cli
sbb
fwait
lret
hlt
or
mov
clc
push
pop
frstor
and
or
js
or
dec
or
pushf
pop
pop
rorl
jo
mov
aad
aas
mov
sbb
cmp
test
gs
jecxz
fucom
mov
xchg
pushf
mov
data16
into
mov
sbb
or
jle
pop
sbb
cmp
inc
add
scas
aad
testb
test
or
dec
push
das
and
sbb
sti
int
lcall
loopne
pop
inc
int3
jmp
jecxz
xchg
push
in
push
test
ja
pop
jae
add
adc
or
mov
popf
jns
jns
adc
es
xor
arpl
ret
xchg
dec
xchg
cmc
xchg
inc
and
divl
pop
stc
mov
pop
ljmp
roll
jmp
mov
test
ficompl
inc
cmp
test
inc
push
pop
adc
mov
int3
push
ljmp
mov
mov
and
cli
aam
lret
rcrl
or
addr16
fbstp
call
inc
dec
inc
ds
icebp
fcoms
cld
inc
mov
int
jmp
repz
cli
xchg
jmp
xor
or
imul
loopne
add
roll
mov
je
shll
andl
lret
push
dec
lods
cmpsb
mov
dec
lret
push
divl
pop
mov
iret
es
jecxz
push
cs
push
pop
rcr
xor
scas
fistl
cli
dec
ljmp
fsincos
lcall
ret
bnd
xchg
mov
cmpsl
cli
dec
push
sub
xor
das
das
repz
pop
les
jo
xchg
out
cmp
imull
pushf
jb
loopne
xor
mul
add
test
cmpsb
es
mov
mov
test
orb
cmp
pop
iret
mov
xor
mov
stos
pop
repnz
out
jecxz
cmp
mov
or
pop
fwait
jnp
or
je
adc
push
jl
mov
sub
cmp
movsl
dec
fistpll
cli
fwait
out
and
xchg
push
lods
cltd
jno
xor
push
test
add
xor
divl
pop
imul
xor
pop
cs
stc
loop
xchg
fwait
pushf
fwait
lret
in
out
addr16
jb
pop
mov
cmp
add
add
or
rcll
loopne
cmp
lods
das
sbb
xlat
push
xlat
cmp
scas
mov
movsl
adc
lods
stos
sti
xor
and
es
sbb
into
scas
xchg
mov
xlat
popf
aad
xchg
fxch
mov
mov
imul
pop
cli
jp,pt
pop
xor
insl
inc
dec
pusha
pusha
xor
loopne
pop
mov
movsb
aaa
add
gs
cmpb
push
out
mov
and
hlt
jnp
xor
inc
adc
ficomps
jns
pop
jmp
repnz
mov
xor
mov
pop
loopne
xchg
xchg
add
xor
jae
add
shll
pop
mov
sahf
lock
movsb
sbb
jge
movb
sub
aas
stc
cltd
pop
sbb
daa
jg
and
fistl
insl
negb
iret
pop
inc
xchg
adc
jmp
sbbb
and
loope
push
mov
daa
test
add
dec
pop
loopne
rcll
add
sub
popf
xor
pop
mov
jns
push
dec
pop
stos
inc
iret
add
xchg
loope
aad
mov
cmpsb
xlat
or
jge
fldcw
mov
xlat
pop
cmp
sbb
pop
cmpsl
iretw
or
xor
daa
jmp
cmc
cmp
popf
inc
js
or
cltd
mov
add
enter
and
push
cmc
add
push
push
das
ffree
mov
pop
adc
pop
inc
imul
push
mov
mov
imul
gs
or
arpl
lock
sub
shl
sub
and
adc
mov
popa
cmp
cltd
mov
pop
inc
scas
inc
pop
mov
adc
js
inc
mov
pop
loopne
push
lret
in
enter
js
out
cltd
fisubs
movsl
popf
push
in
jne
imul
pop
xor
nop
rcll
movsl
insl
dec
add
jno
jno
xchg
lcall
pop
pop
push
mov
jg
dec
xor
icebp
leave
leave
push
dec
inc
xchg
xchg
cli
les
jmp
data16
es
xchg
or
cld
push
call
push
jnp
jp
pmaxub
aam
pop
xchg
mov
stc
push
xchg
push
add
test
pusha
repnz
sub
lods
add
jnp
icebp
sub
divb
mov
lds
or
stos
sbb
sbb
cmp
inc
push
pop
pop
jmp
mov
inc
call
cmp
aas
xor
sub
jle
dec
out
pop
xchg
fwait
cli
stc
jb
dec
pusha
pop
lcall
lock
mov
add
jno
pop
xor
daa
ret
lret
pop
in
insb
cmp
stc
xor
dec
xor
cmpsl
loopne
ds
sub
xchg
push
out
ljmp
ds
icebp
shrl
jns
fisttpl
rorl
xor
andl
mov
clc
pop
loope
fldz
adc
divb
xlat
ficompl
push
cmova
fst
sbb
xchg
divl
test
mov
sbb
pop
nop
adc
dec
sub
xor
pop
shlb
jno
cmp
loopne
pop
xchg
imul
sub
adcb
out
and
and
mov
mov
push
rcr
xchg
sub
jmp
cld
inc
push
cmpsl
cmp
fiadds
fsubs
lahf
adc
fcmovne
fistps
test
js
xor
cmp
xor
mov
stos
movb
xlat
cltd
pop
aaa
jo
stc
push
mov
pusha
dec
jecxz
pop
les
push
jnp
in
cmp
mov
sbb
cmpb
pop
sbb
testl
xor
hlt
pop
jle
imul
aam
or
jbe
mov
data16
icebp
sbb
mov
cmp
and
push
jne
adc
dec
add
pop
lea
inc
imul
dec
push
mov
ret
jae
xor
lock
insb
add
lcall
pushf
in
popf
ljmp
xor
ror
mov
in
push
sbb
shrl
inc
sub
out
jbe
mov
jg
xor
push
mov
popf
pop
mov
xchg
jnp
lcall
mov
iret
pop
xchg
icebp
xchg
lret
and
hlt
test
mov
popf
xchg
sub
pop
gs
dec
ret
mov
mov
aas
lcall
jo
xor
lods
fisttpl
jg
outsb
lock
dec
sub
sub
xchg
push
sbb
aam
inc
out
ja
jns
out
push
adc
test
int3
or
xor
push
sub
dec
jmp
and
pop
pushf
push
repnz
mov
mov
pop
xlat
loop
daa
mov
push
pop
jns
mov
aam
or
and
pop
pop
dec
inc
pushf
add
cmp
repz
add
lret
xchg
mov
data16
fcoms
xor
iret
imul
jge
loopne
addr16
sub
jle
xchg
decl
mov
dec
jecxz
insl
lret
sub
leave
push
into
fidivrl
mov
scas
pop
arpl
cmp
fmul
pusha
inc
cmc
insb
pop
idivb
fldcw
mov
sub
loopne
pop
ficoms
test
nop
pop
add
idivb
cmp
rcl
hlt
out
mov
inc
mov
in
sbb
clc
filds
jnp
jne
lea
stos
xchg
jmp
ret
aad
pop
push
mov
sub
pop
or
jge
cmp
fcoms
inc
jne
in
mov
lahf
stc
sub
and
xor
dec
xlat
push
add
iret
outsb
fistpl
gs
aad
mov
push
ja
into
mov
loope
mov
cld
and
jge
sti
pop
ljmp
test
jno
sbb
push
add
test
fadd
jnp
or
repz
mov
xchg
lcall
and
fwait
out
add
mov
add
es
xlat
aaa
shlb
repnz
stos
jmp
in
iret
adc
adc
orl
or
ljmp
repz
or
sbb
sub
xchg
inc
mov
xchg
pop
xor
mov
pop
push
xchg
ss
or
orl
dec
aad
jnp
or
mov
jne
ja
fcoms
call
xlat
add
inc
pop
jne
mov
cmc
and
pop
xchg
or
stos
mov
xchg
fstps
lods
test
mov
pop
aam
inc
push
nop
xor
jmp
nop
inc
insb
mov
push
stos
jnp
popf
aaa
pop
repz
out
es
mov
mov
fsts
cli
sar
and
xor
bound
mov
xchg
and
addr16
mov
insb
call
movsl
cmp
xchg
inc
push
mov
test
call
jae
push
loopne
xor
lahf
fisttps
fadds
rorl
sub
mov
sbb
call
mov
xchg
stc
out
in
push
fcoms
xchg
js
xlat
mov
jo
ficompl
aam
lcall
int3
fwait
sbb
jbe
cmp
imul
sub
hlt
adc
cmp
fwait
push
push
or
pop
cwtl
call
or
cmp
xchg
addr16
push
pusha
mov
jg
pop
and
mov
movsl
dec
sbb
lock
and
cs
popa
lret
les
iret
shll
bound
xor
push
adcl
ret
icebp
pop
mov
inc
xchg
stc
adc
add
fsubl
push
cmp
scas
jg
sub
pop
mov
dec
xchg
mov
xor
loop
dec
lock
mov
fimull
sub
or
xorl
jmp
mov
adc
sbb
iret
sbb
aas
out
sbb
push
sbb
add
mov
fstpt
pop
stc
stos
cmpsl
js
lret
push
add
lret
sbb
fdivr
pop
jo
fldt
cmp
fbld
mov
clc
dec
jbe
call
add
xchg
popf
mov
inc
testl
lcall
sbb
repz
in
and
clc
xor
sbb
jne
or
lcall
jnp
or
jge
dec
test
clc
out
sahf
xor
push
xor
lcall
push
adc
or
pop
sbb
clc
fidivrl
stos
or
adc
out
iret
cli
or
xor
xor
mov
pop
fmuls
rcrb
mov
add
fcomi
aad
jno
dec
cltd
sub
pop
or
mov
cmp
cli
dec
mov
inc
sbb
inc
lret
in
or
lock
dec
adc
or
mov
jnp
arpl
push
dec
fildl
stc
hlt
lret
add
rcl
fistl
sti
push
dec
sbb
fwait
pop
dec
mov
push
stc
fcom
sbb
mov
or
es
sti
aam
ja
xlat
or
adc
dec
icebp
jp
lret
out
jns
clc
xor
cltd
xchg
sbb
mov
add
mov
lock
sub
sub
test
sub
sub
fdivr
sarb
dec
fmul
mov
rcrl
lret
fidivrl
dec
mov
mov
stc
mov
mov
xor
sub
inc
stc
cmp
cltd
sar
orl
aam
sbb
dec
pop
cltd
mov
stc
push
mov
jnp
pop
adc
mov
inc
or
iret
fldt
dec
ljmp
arpl
push
clc
or
jb,pn
cmp
fistl
lods
adc
sarb
push
idiv
fldt
cmpsb
jge
push
inc
and
mov
aad
dec
lods
pushf
repz
push
pop
inc
int
and
out
cmp
push
repnz
lods
rep
imul
xchg
fistpl
sbb
neg
fdivl
mov
clc
jg
icebp
xchg
mov
pop
daa
xchg
stos
mov
popf
cmp
cmp
cmc
jecxz
xchg
out
pushf
ret
mov
pop
ljmp
inc
adcb
pop
pop
cmovae
sbb
sbb
push
pop
pop
mov
add
jge
fwait
dec
icebp
test
inc
dec
xchg
adc
in
jo
jp
stc
shlb
jno
xlat
ret
out
lods
mov
jp
movsb
adc
repnz
mov
rcrb
and
neg
adc
push
xor
mov
cmp
pop
adc
jo
inc
jae
sbb
mov
es
fwait
sti
stc
mov
pop
cltd
jae
or
lea
shlb
push
xor
cs
xlat
xchg
roll
pop
in
dec
jecxz
cmp
jle
pop
jns
sahf
add
inc
mov
mov
fst
adc
dec
je
mov
add
mov
jp
push
leave
and
push
sbb
jns
jg
pop
mov
imul
mov
pusha
stos
jmp
stc
pusha
es
adc
scas
iret
test
add
pop
jg
xchg
xor
sbb
mov
pop
fdivrs
jns
je
cmpsl
cmpsl
les
std
cmc
xchg
jo
repnz
lahf
jno
dec
cmp
hlt
ret
dec
push
out
jbe
cld
int
dec
xor
out
jne
add
int
inc
cmpb
cmp
adc
out
test
les
inc
or
dec
mov
xor
testl
pop
cwtl
cmp
ja
cmp
xlat
mov
rcrb
rclb
xchg
lcall
mov
std
test
sbb
rcll
sub
xor
mov
stos
sbb
dec
xlat
xchg
lcall
cmp
sbb
pop
mov
xor
sbb
push
sbb
xor
inc
lret
fsts
js
daa
xlat
mov
test
f2xm1
pop
push
loopne
lock
out
lock
adc
int
int3
dec
pop
je
mov
mov
es
inc
cs
jnp
repz
lods
loopne
adc
js
or
rcrb
xorb
add
sbb
enter
or
pushf
ss
jno
adc
sub
mov
gs
repnz
or
movb
filds
push
mov
or
call
pop
leavew
neg
adc
push
test
stc
cmp
inc
popf
das
movsl
test
mov
lret
lea
sbb
push
fildl
ficompl
sbb
push
enter
dec
out
xchg
aaa
sub
or
xchg
push
and
mov
loopne
stos
ret
xor
push
mov
dec
ret
mov
xor
sbb
mov
rep
sbbb
mov
inc
adc
jmp
sahf
inc
loopne
fidivs
test
cmp
jo
ljmp
insb
mov
fstpt
mov
xor
mov
and
mov
and
jae
ficompl
imul
sti
cmp
pop
addr16
bound
inc
push
cmpb
lods
jge
sbbl
rcr
int
rorl
out
pop
test
dec
or
dec
push
xor
cwtl
or
inc
xor
xchg
mov
xchg
pop
es
fstpt
lcall
dec
inc
sbb
push
xchg
test
cmpsl
gs
dec
push
adc
in
dec
dec
and
jb
shll
decl
or
cmpb
jp
mov
popf
push
test
lods
repz
pop
loope
jnp
sbb
mov
loop
in
inc
add
hlt
xor
pop
jne
shll
inc
push
jno
pop
push
vpunpcklqdq
sbb
pop
xor
push
mov
stos
and
mov
pop
jg
pusha
mov
sbb
inc
or
or
ss
dec
xchg
pushf
push
pop
inc
cmp
xlat
and
leave
sbb
lcall
xor
mov
mov
lcall
gs
cmp
cmp
popf
lods
or
dec
fwait
pop
iret
add
adc
adc
int3
jno
sarl
mov
mov
sub
cmp
mov
and
xor
cmc
frstor
fsubrp
out
lock
or
or
cmp
mov
mov
xchg
ret
dec
or
mov
insb
jae
and
jg
inc
pushf
jae
fldcw
cmp
push
sbb
pop
out
int3
insb
pop
mov
test
ss
scas
jmp
lret
xor
push
inc
jmp
mov
js
cmc
sti
xchg
mov
or
xchg
addr16
push
jmp
dec
rcrb
in
jg
adc
mov
dec
popf
jae
jmp
adcb
test
mov
jnp
mov
xor
mov
mov
xlat
pop
out
icebp
pop
fwait
jmp
mov
cmp
xchg
test
lcall
push
push
mov
in
jnp
mov
mov
jg
out
inc
aad
push
das
xchg
push
cmp
in
jbe
sub
or
jnp
jnp
sub
mul
pop
hlt
mov
dec
fwait
xlat
adc
repnz
arpl
pop
stc
or
pop
stos
push
popf
sbb
push
mov
xchg
movsb
xor
stos
add
imul
dec
iret
or
xchg
loope
clc
mov
stc
jbe
mov
mov
mov
das
pop
dec
sbb
pop
mov
mov
ja
jle
dec
clc
dec
push
sbb
ret
sbb
inc
addr16
aaa
stos
repz
pop
pop
xchg
push
push
sub
cs
imul
adc
adc
mov
push
cli
hlt
jecxz
xchg
dec
jmp
roll
ss
ljmp
jbe
pop
shll
movsl
mov
int
sub
cmc
insb
xor
enter
stc
cmp
cvtps2pd
dec
sub
aas
inc
vcvttsd2si
add
test
pop
jae
outsb
mov
xchg
aas
call
xchg
lods
out
pop
xchg
out
xor
mov
xor
mov
xchg
js
cmp
and
dec
rolb
pop
xchg
fstpt
lea
aad
push
sub
dec
iret
fmulp
call
int3
mov
pop
sti
dec
jg
dec
in
pop
ss
bound
dec
jp
fs
jmp
mov
cli
and
sahf
pop
push
push
dec
dec
out
cmp
fbstp
cmp
sub
repnz
sub
pop
push
push
rclb
xor
inc
add
jle
cli
pop
loop
icebp
jno
dec
fwait
test
js
push
push
ret
stc
pop
cmp
adc
ja
cmp
hlt
add
stos
sbb
daa
addr16
inc
sbb
xchg
lods
jg
mov
inc
pop
es
fidivs
aas
push
adc
sbb
bound
stc
loope
and
mov
mov
inc
xchg
ss
std
lahf
mov
cmp
xchg
aaa
xchg
fistpll
lahf
dec
push
pop
pop
lcall
stos
push
add
xor
sti
sbb
popf
sbb
rcrl
xchg
push
std
jns
push
jnp
inc
roll
cmp
aaa
or
mov
xchg
testl
cmc
js
adc
in
pop
repz
hlt
pop
pushf
push
bound
push
test
out
add
and
call
pop
push
js
and
or
leave
std
testb
dec
and
xlat
stos
jle
hlt
aas
sbb
call
sub
orl
mov
cmp
mov
in
push
sbb
add
cmp
mov
cmp
adc
je
push
mov
movl
cmpsb
cwtl
mov
mov
fchs
inc
xlat
sbbb
ds
xor
xchg
xor
adc
mov
je
xchg
iret
dec
mov
dec
inc
ds
stc
stc
mov
imul
stos
pop
scas
inc
fidivrl
jp
mov
testl
push
out
negb
mov
lahf
mov
xor
add
xor
ljmp
fistpl
mov
into
stos
repz
or
js
mov
iret
cwtl
fcoms
das
jp
xor
push
xacquire
ficomps
cmpsl
jp
test
dec
arpl
mov
repz
and
cmp
fsts
icebp
cli
sbb
in
sub
dec
push
gs
stos
lea
pop
mov
cwtl
test
xor
xor
and
or
imul
repz
add
cmp
dec
in
pop
flds
add
gs
lcall
pop
xor
pop
dec
js
adc
pusha
mov
cmpsl
push
in
movups
arpl
jge
sarb
bound
mov
push
imul
push
rolb
or
dec
push
lahf
xor
scas
mov
out
fisttpl
rclb
or
or
pop
mov
cmpsl
adc
movsb
or
sbb
sbb
aas
adc
dec
addr16
loop
cmp
xor
in
dec
cmp
jp
mov
pushl
or
in
popa
test
jb
xor
test
mov
dec
inc
sahf
out
xchg
cltd
xchg
sbb
jp
cmp
sub
and
cli
jb
jg
lret
lret
pop
jnp
les
aam
ret
pop
jp
mov
push
cmp
xor
mov
mov
in
mov
out
xlat
aas
dec
enter
or
lods
es
push
dec
cmp
loop
and
mov
xchg
out
std
in
mull
xchg
and
adc
or
jns
mov
outsl
and
in
dec
inc
pop
or
lcall
push
stc
mov
mull
test
test
dec
push
bnd
negl
push
xor
scas
subb
mov
push
mov
ss
or
or
lcall
cmp
jg
js
test
adc
nop
imul
xor
jmp
jo
xlat
jnp
in
lods
or
stos
rcrb
out
pop
out
outsl
xchg
inc
cmp
mov
mov
dec
shlb
sbb
sbb
pop
push
pop
or
sbbl
add
sbb
fwait
outsb
xor
xchg
inc
outsl
xlat
lcall
pop
xor
js
sbb
loopne
dec
push
sub
vandnps
aad
xor
std
mov
push
ja
enter
adc
add
xor
inc
inc
sub
int3
push
mov
xor
xchg
push
stc
push
incl
stos
dec
cmp
cs
dec
sub
cwtl
ret
fnsave
jne
xchg
push
xchg
and
sti
fwait
pop
js
cmp
lcall
int3
test
ror
mov
sahf
or
and
dec
cmp
jnp
int3
inc
inc
push
add
stc
pop
cmpsb
ret
mov
bound
inc
pop
ret
cmc
pop
ret
mov
hlt
pop
dec
mov
adc
push
xchg
xor
add
cmp
mov
xchg
jbe
je
cltd
push
das
cmp
push
leave
sbb
jnp
mov
pop
add
ret
xor
cmp
xlat
sub
test
jmp
imul
repz
pop
mov
sub
in
fwait
or
inc
daa
adcb
lret
push
or
imulb
addr16
or
push
subl
or
push
and
and
pop
repz
sbb
test
and
and
testb
xor
cmc
sub
lock
adc
cmp
int
mov
sub
jb
mov
fnstcw
pushf
and
push
sbb
test
push
dec
mov
clc
jne
jae
mov
cltd
mov
bound
mov
push
mov
int
sbb
sbb
aas
pop
pop
idiv
xchg
jp
and
fistps
add
add
pop
je
fldenv
lods
mov
popa
or
mov
notl
pop
repz
pop
push
jle
dec
push
aad
cmp
in
xor
push
loopne
pop
jno
aas
dec
ror
add
cmc
adc
cwtl
cld
xchg
lods
mov
bound
sti
pop
pop
outsb
rorb
mov
sbb
adc
xchg
push
jnp
pop
push
jo
inc
pop
mov
jp
push
jmp
out
cmp
or
aas
cmp
cmp
mov
in
pop
aaa
pop
pop
or
pop
jbe
ret
and
dec
push
in
fs
dec
stos
cmpsl
test
lret
dec
jns
neg
ja
or
ret
int
lea
xchg
inc
cwtl
cli
dec
testb
mov
pop
pop
cmp
arpl
in
test
push
daa
repz
inc
jg
sahf
jae
mov
and
add
jg
ret
xchg
jg
sub
enter
fidivrl
adc
xor
daa
add
add
mov
jnp
daa
cmp
jnp
xchg
push
fbld
cmp
cltd
psubusb
adc
dec
les
hlt
pop
xor
stos
cmpsl
or
iret
sbb
jg
sub
repnz
lret
mulb
in
cli
xchg
out
mov
cmp
add
xor
xor
mov
fcmovnu
push
pop
sbb
insl
insl
in
sub
pop
or
sub
outsb
in
mov
cli
dec
ss
pushf
enter
iret
inc
adc
lcall
adc
pop
sub
insb
fmull
or
adc
adc
aam
out
push
cmc
jle
push
push
out
mov
jp
and
pop
mov
push
stc
push
iret
sub
sbbb
inc
jae
in
and
ss
aaa
out
mov
outsl
aad
dec
sub
popf
inc
fs
mov
aaa
dec
aam
cld
aas
fdivrs
xor
jg
flds
rclb
mov
or
push
iret
mov
insl
in
pop
cwtl
dec
rorb
mov
mov
iret
jnp
xchg
cmp
mov
out
add
icebp
rcll
push
push
fwait
inc
aaa
cmp
loopne
mov
sbb
cmp
jp
pop
add
mov
pop
cli
mov
xchg
gs
jb
aas
adc
or
pop
jl
imul
clc
fldt
push
xor
and
jo
les
cwtl
js
push
arpl
and
mov
lret
mov
das
sti
test
xorl
cwtl
mov
lcall
cmp
call
repz
aaa
jecxz
xor
imul
mov
les
sahf
or
ret
lea
lcall
xor
jg
dec
sti
mov
sbbb
sub
pop
ret
je
xor
mov
stc
push
ljmp
dec
test
outsl
add
data16
repz
sarb
test
dec
cmp
sub
cmc
xlat
cmpsb
mov
mov
jl
xchg
into
int
cmp
and
mov
mov
push
loopne
mov
or
dec
cmp
aam
cld
mov
popf
mov
mov
adc
xor
push
ds
lods
ss
pop
dec
add
mov
aam
pop
xchg
or
adc
das
jg
mov
repnz
jns
xor
xor
sahf
mov
pop
dec
icebp
mov
inc
push
and
gs
jo
test
cmp
push
cmc
cld
push
dec
fldl
mov
cmp
xchg
pop
fldenv
jnp
incl
sub
stc
cmpsb
lret
jae
lcall
adc
mov
mov
xchg
data16
xchg
push
divb
in
push
mov
dec
adc
fld
sub
xchg
jmp
arpl
pop
jae
mov
insl
into
mov
adc
xor
scas
pop
jg
icebp
sub
mov
fmul
sbb
shl
push
xchg
pop
xchg
push
sbb
in
ljmp
add
jg
pop
sbb
xchg
mov
stos
imul
xchg
mov
cmp
mov
lea
dec
adc
sti
enter
push
jo
clc
and
mov
pop
add
aam
xchg
jne
add
or
pop
inc
jbe
dec
je
pop
roll
daa
arpl
sti
sub
pop
ja
jmp
arpl
jge
mov
out
adc
ret
daa
sub
dec
inc
clc
daa
pop
and
inc
push
insb
ret
sbb
mov
imul
ja
arpl
jno
in
jnp
jle
stc
ljmp
in
sarl
inc
popa
loope
cmp
dec
mov
jns
in
or
pop
inc
mov
jp
ret
icebp
mov
shlb
aas
xor
into
inc
lret
cmp
xchg
xor
les
orb
push
pop
inc
xchg
or
repnz
ja
xor
arpl
sub
repnz
sti
push
pop
xor
xchg
cmp
mov
mov
dec
push
lea
popf
call
mov
daa
xor
pop
iret
mov
cvtdq2ps
sahf
pop
adc
jecxz
mov
rcrb
push
test
mov
repz
in
and
push
cli
push
nop
jmp
or
int3
add
out
fimuls
lcall
pop
iret
mov
lods
das
popa
sub
cmp
xchg
jbe
cmp
mov
jns
insl
and
xor
mov
sbb
sar
stos
adc
or
mov
jns
xchg
add
add
mov
xchg
mov
push
mov
dec
mov
js
mov
fnsave
mov
std
sbb
adc
add
loopne
pop
test
sbb
or
fiaddl
xor
sbb
dec
mov
dec
xlat
cmp
fsubr
sub
nop
lret
stos
cmp
mov
int3
out
mov
nop
mov
cmpsb
adc
dec
mov
scas
jo
das
js
dec
adc
rcl
mov
mov
push
in
cli
clc
lret
or
int
cmp
xchg
push
or
jns
cmc
sub
xor
pushf
mov
jb
jns
loope
mov
cmpsl
ret
inc
dec
movsl
out
cmp
push
xor
lret
inc
cmp
jae
mov
sarb
popa
inc
pop
stc
bound
sarb
cmp
dec
lcall
fmull
pop
lret
jge
icebp
dec
pop
mov
push
adcb
xchg
jo
jbe
sub
mov
xchg
jmp
inc
jmp
fldcw
cs
add
mov
movsb
mov
into
xor
imul
les
int
xchg
mov
out
push
cli
xchg
mov
rcrb
mov
in
cmc
sbb
jl
add
fwait
sbb
jl
push
pop
insl
xor
daa
aaa
rcrb
stos
pushf
loopne
push
push
xchg
sub
fistpl
sbb
push
rcrb
test
lahf
js
xor
stc
jle
out
imul
push
inc
add
fcomps
pop
xlat
xchg
movsb
mov
cmc
sub
pop
out
mov
sbb
jae
sub
jecxz
sbb
jp
or
mov
fisubrs
aas
es
lcall
sar
fbstp
mov
push
lret
sbb
dec
or
sbb
out
xor
ficoml
icebp
mov
out
mov
mov
xchg
arpl
push
and
add
cmpsl
xchg
lock
pop
push
lock
sbb
shr
xor
std
cmc
mov
stos
jnp
mov
lea
int3
movsl
das
push
inc
call
push
pop
lahf
mov
call
mov
lods
insb
loop
addr16
and
dec
xor
cmp
jb
cmp
test
out
mov
out
lret
push
dec
bound
insb
sbb
cmp
jae
xchg
repz
in
lret
cmc
aas
fwait
cmpsb
push
adc
aad
icebp
out
sbb
jne
pop
aad
push
mov
or
aas
xor
leave
fcmovnbe
mov
in
iret
insl
dec
xchg
pushf
mov
sub
jae
mov
andb
pop
mov
lahf
or
xchg
daa
mov
sti
adc
mov
lcall
out
cmc
add
mov
cli
cmp
xchg
pop
dec
shl
fnstcw
mov
mov
sarl
pop
jo
push
jge
nop
push
add
xlat
sahf
sub
fistpl
int
outsl
pop
pop
or
and
sbb
mov
outsl
pop
mov
add
scas
lods
mov
push
pop
or
sub
or
sti
pop
add
push
orb
pop
test
or
push
mov
mov
sub
fildl
aad
data16
jmp
js
mov
int
inc
fiaddl
stc
mov
shll
idivb
jmp
stos
imul
xchg
in
jnp
cmpsl
js
xor
lea
mov
js
adc
pop
jp
xchg
shrb
lock
add
sub
icebp
iret
adc
and
and
mov
mov
mov
sbb
repnz
into
cli
adc
and
test
cmp
in
xchg
and
cli
add
shl
adc
cmc
aaa
pop
into
adc
jo
mov
cwtl
adc
aaa
adc
cmpsl
addr16
scas
push
push
dec
push
clc
iret
jmp
pop
jno
or
stos
jle
xor
inc
mov
jnp
sub
daa
outsl
pop
jae,pt
push
cmp
and
mov
js
addb
mov
or
sbb
inc
repnz
sub
aaa
push
and
sahf
ror
mov
fisubl
xor
or
xchg
fistpl
movsb
stos
pop
rolb
icebp
xchg
push
xor
fs
iret
fcoml
sbbb
sub
fwait
add
mov
out
or
fldenv
ret
xchg
adc
mov
xlat
pop
adc
aad
rcrb
sub
and
push
push
sti
inc
mov
cmp
jmp
mov
or
jae
repz
and
xorl
cmp
movsl
xor
mov
dec
in
cmp
mov
and
inc
add
movsb
stos
dec
std
push
jne
int3
sbb
mov
fsubrs
jne
pop
mov
in
push
and
cmp
add
sub
fsubrs
cmpsb
lcall
cmp
mov
lret
ljmp
sbb
fsubs
popf
jmp
lahf
ds
push
cld
sub
rcl
fidivl
mov
pop
test
jnp,pt
mov
cmp
jg
add
sub
jmp
lcall
fwait
idivb
jmp
int3
push
pushf
jg
sahf
bound
inc
sbb
in
xor
subb
fidivrl
jo
fcoms
cmp
pop
xor
lds
shlb
xchg
ss
mov
adc
clc
fstps
sbb
cmc
jnp
stc
stos
cli
cmp
repz
sbb
pop
addb
or
add
jecxz
or
jnp
xor
jecxz
jne
pop
mov
cmp
cmp
xor
xlat
pop
or
sub
cli
imul
adc
inc
insl
lods
ljmp
ss
fwait
cmp
and
fs
testl
push
flds
call
fidivs
adc
push
data16
cli
lcall
mov
inc
mov
pop
movq
inc
add
insl
pop
lods
clc
mov
xchg
outsb
pusha
add
add
sti
aam
leave
dec
fbstp
mov
scas
xor
xor
push
test
clc
repnz
pushf
je
nop
mov
jno
mov
dec
fcompl
inc
sub
outsb
xor
mov
inc
or
xchg
dec
jno
icebp
fisubrs
inc
ljmp
shr
insl
add
sbb
out
sbb
outsl
mov
mov
adc
pop
inc
mov
pop
inc
inc
lods
mov
or
movsb
imul
push
iret
ds
add
sbb
jmp
fidivs
inc
or
pop
insl
std
out
jnp
inc
mov
loopne
jae
cli
inc
repz
imulb
leave
imul
test
pop
pop
out
into
ret
hlt
lret
push
je
sub
mov
mov
or
daa
in
or
ja
divb
lods
std
xchg
lods
xor
shl
xor
xchg
pop
dec
ficompl
jle
sarl
push
mov
or
in
lcall
jb
lret
jmp
jl
jnp
mov
ss
and
ret
or
xlat
push
xor
pop
pop
push
pushf
addr16
mov
movsb
push
leave
pop
pop
adc
xor
add
dec
daa
cli
xchg
outsl
dec
imul
push
or
jo
or
nop
fmuls
loop
jne
xchg
pop
leave
lea
dec
pushf
mov
clc
cwtl
push
dec
sbb
jne
dec
jp
mov
lret
stos
add
mov
cmc
int
int3
add
lcall
jbe
push
adc
or
sbb
or
dec
adc
sahf
jnp
in
mov
aam
fldt
pop
mov
cmp
add
enter
aad
dec
push
or
add
fildl
mov
mov
jnp
shr
loopne
cmp
sub
std
xor
fstpt
lea
test
mov
insb
mov
pop
mov
mov
fstps
push
sub
adc
mov
cltd
pop
enter
repz
out
jmp
or
cmp
mov
cmp
push
xchg
cmp
jmp
repnz
mov
dec
stc
mov
or
mov
add
sbb
fistl
and
lock
rcll
rol
ljmp
jnp
leave
subl
std
jb
stc
rorl
xor
sub
xor
dec
adc
push
shl
mov
mov
xor
sub
fcomi
stc
adc
or
fistpl
cmp
xlat
cltd
jge
enter
cld
mov
sbb
or
stc
xor
rcr
stos
fimull
cmp
cs
mov
fstpt
jp
sub
pop
testl
xlat
jnp
sub
cs
les
mov
dec
stc
jno
call
cmp
js
pop
jno
mov
fnstcw
fildl
sub
add
or
fwait
test
sahf
mov
out
adc
fmuls
ljmp
pop
jnp
imul
push
enter
stos
inc
sub
cmp
jl
outsl
call
subl
stc
dec
mov
cltd
call
push
jecxz
cmp
dec
lock
pop
mov
lcall
icebp
dec
push
sub
fwait
xor
xor
push
jmp
mov
inc
js
pop
out
mov
loope
iret
mov
add
insl
mov
outsb
sub
out
sub
out
jmp
adc
cli
fadds
int
jmp
ficompl
dec
sti
scas
pop
and
lret
cld
xchg
cltd
dec
mov
cmp
cs
dec
aaa
xchg
rol
cltd
sbb
and
mov
jmp
push
add
cmp
mov
bnd
jno
xchg
or
jae
sub
js
or
dec
data16
shll
test
inc
mov
sbb
out
cmp
pop
mov
addr16
add
or
dec
out
push
stc
xchg
cmp
xor
and
mov
iret
lds
pusha
popl
ljmp
add
outsb
jecxz
addr16
xor
inc
or
xchg
in
iret
int3
cmpl
es
daa
adc
out
cli
aaa
shll
jne
pop
orb
xchg
shlb
push
or
dec
clc
pop
idiv
xlat
push
jns
cmc
les
aas
sarb
test
fsubrs
push
xor
je
sub
repnz
fidivl
movsb
adc
das
mov
cli
fisttps
inc
push
sub
icebp
xchg
push
loope
pop
adc
push
movsb
std
cmp
xchg
or
mov
pop
test
dec
pop
lods
jmp
mov
popa
aas
adcl
es
mov
xor
mov
test
orl
push
ret
lock
daa
add
pop
and
sub
ljmp
jge
cmp
push
push
and
cmp
cmp
icebp
in
push
adc
mov
in
icebp
ficomps
rorb
jmp
push
sub
adc
push
add
ljmp
outsb
fbld
out
cmp
dec
stos
test
xlat
jmp
sbbl
xchg
sub
std
stc
xor
imul
xchg
cwtl
ds
in
add
push
cs
jnp
aam
cltd
mov
mov
out
repnz
loope
push
or
rcl
mov
push
fsubrl
das
add
adc
jp
pop
mov
lea
adc
lds
push
sahf
jae
inc
mov
or
inc
mov
pop
inc
sti
in
pop
in
das
push
loop
rclb
stc
int
dec
jno
out
jae,pt
mov
cmp
mov
test
fisubrl
lcall
xlat
sub
rcr
sbb
mov
sbb
mov
sub
sub
hlt
or
aaa
pop
push
add
test
cmpsl
test
xchg
mov
loopne
shl
gs
in
int
or
rorl
ljmp
rorb
push
dec
dec
lea
fisttps
stc
movsl
daa
js
call
push
sbb
test
xor
test
pop
sti
enter
mov
jbe
scas
imul
push
inc
lahf
imul
jle
out
mov
xor
fdivp
add
shll
inc
loop
or
int
int3
xchg
inc
cmp
xchg
add
loope
movsb
repnz
fsubr
int3
mov
daa
push
mov
call
mov
sub
nop
fstpt
dec
js
push
and
mov
lods
mov
pshufw
mov
push
popa
scas
xor
sub
jb
xlat
pop
adc
adc
mov
or
mov
popf
xor
sahf
mov
inc
std
mov
mov
repz
pop
sbb
dec
mov
movsb
mov
xor
cwtl
clc
adc
mov
xlat
or
fsts
push
jne
sahf
pop
int3
xor
mov
ja
xor
movsl
test
cwtl
dec
mov
cmp
sbb
js
xlat
mov
push
shlb
repz
ljmp
popf
xor
fadds
ret
mov
out
rcll
pushf
mov
enter
adc
addr16
adc
std
ja
aas
xor
pop
cwtl
repnz
dec
rcr
sbb
add
push
aas
cltd
mov
pop
jg
and
pop
pop
cmp
inc
and
loop
push
jo
inc
mov
repz
ss
sbb
xchg
sbb
dec
popf
ret
cmpsb
or
lea
negb
fdivrl
lods
fisttpl
pop
testb
in
inc
pop
imul
js
pop
fildll
dec
or
aas
xchg
pop
push
push
jp
xchg
mov
push
sbb
imul
xlat
imul
dec
bound
outsl
mov
mov
cmpsb
in
push
push
repnz
pop
pop
and
mov
das
bound
lds
aaa
xchg
aam
js
hlt
xchg
pop
cmp
sahf
jno
pop
fmuls
xor
mov
cs
adc
sbb
mov
sbb
mov
jnp
es
or
js
or
push
cmp
jp
or
and
test
leave
xchg
pop
repz
insl
cmpsl
js
inc
xchg
add
daa
loop
outsb
xor
jl
sbb
xchg
inc
les
mov
mov
xchg
push
cmp
xor
sti
repz
adc
dec
test
jne
or
into
outsl
inc
and
pop
xlat
mov
test
lock
ror
dec
pop
cld
jns
fsts
movsb
jb
xchg
push
stos
sub
addl
inc
push
pop
jno
mov
and
push
sub
enter
pop
and
xor
pop
xchg
lods
popa
imulb
xor
lcall
jp
adc
cmp
insl
cmovs
rdmsr
mov
ret
je
xor
loopne
mov
sub
add
or
cli
jnp
mov
popf
xor
popa
cmp
arpl
push
or
in
fcompl
pop
or
push
leave
scas
cmc
sbb
cmp
leave
push
lcall
and
pop
push
add
pop
add
and
push
sub
xchg
es
je
aaa
les
add
jbe
pushf
ja
mov
xlat
inc
pop
fstps
mov
inc
inc
inc
xor
sub
push
leave
sarb
push
stos
repz
ret
pop
outsl
pop
push
sarb
pop
aam
xchg
popa
xchg
jl
pop
cmp
rolb
sbb
push
inc
pop
prefetch
mov
add
inc
in
mov
out
or
xor
xor
lock
xor
push
test
pop
scas
inc
ficoms
dec
xor
mov
popa
push
inc
jg
ss
cwtl
fwait
push
inc
jb
jb
inc
stc
xchg
mov
fdivr
push
stos
sub
xchg
es
or
sub
cmp
test
sbb
fdivrl
sub
aas
push
and
xchg
imul
pop
mov
push
mov
dec
mov
add
or
fidivl
addl
mov
ret
inc
jp
call
mov
inc
sub
lock
adc
bound
sub
es
in
jnp
cmpsb
add
clc
aaa
xchg
mov
mov
sbb
sarb
inc
add
pop
jecxz
pop
push
mov
lods
fwait
call
adc
lods
mov
je
and
stos
stc
adc
cli
xor
data16
mov
or
enter
mov
testl
adc
lcall
das
push
push
addr16
push
sbb
ja
adc
dec
xor
lahf
mov
ret
loope
mov
or
sbb
fmull
data16
add
inc
sbb
pop
rcl
push
int3
mov
jo
inc
adc
push
dec
add
cmp
add
mov
mov
outsl
fldt
into
jo
call
pop
mov
jnp
ds
loopne
mov
push
je
ret
lock
sbb
fsts
sbb
daa
add
jbe
std
and
enter
cwtl
mov
jp
inc
adc
push
mov
gs
fistl
dec
stc
mov
cli
stos
push
repnz
xchg
mov
andl
fdiv
sub
stos
adc
in
loopne
lock
jmp
rcr
fs
xchg
mov
cmp
and
cmp
mov
dec
adc
lods
xchg
out
push
addr16
push
daa
xor
sbb
add
pop
adc
das
and
xlat
cmp
ds
inc
xchg
xchg
xor
inc
pop
lods
mov
mov
xchg
enter
add
pop
xchg
fs
mov
nop
sti
idivb
jae
not
inc
cld
dec
mov
jp
stc
jbe
movsl
push
cmp
sbb
mov
adc
xor
jmp
adc
pop
jmp
lds
xchg
jae
divl
pop
jecxz
xchg
cmp
xor
loope
into
test
stos
xchg
and
imul
xchg
fwait
xor
testl
test
test
xchg
cmpsb
sbb
add
jb
sbb
adc
dec
sub
xor
inc
cmp
fstpl
repz
push
xchg
dec
inc
lds
and
aad
cmpsb
lret
pop
and
pop
cmpsb
cwtl
or
movsb
xchg
pop
push
rcrb
mov
sahf
cltd
sub
vsqrtpd
push
jl
std
and
inc
shlb
xlat
imul
rcrb
out
ljmp
les
enter
mov
pushf
js
push
pop
aaa
or
sub
cmp
aad
bound
xchg
pop
cmp
xchg
xor
or
mov
insl
scas
stos
neg
pop
pop
pop
mov
repz
mov
pop
cli
inc
stc
repnz
fbstp
ret
mov
mov
aam
add
fstpt
adc
out
add
std
mov
add
adc
jge
mov
cmp
cmpb
sub
dec
test
mov
push
bound
mov
mov
iret
pop
pop
sub
insl
cmp
imul
sub
pop
xchg
call
hlt
push
mov
mov
sbb
pop
cli
aam
or
pop
xchg
mov
popa
push
imul
inc
mov
dec
sti
bound
jmp
jbe
movsl
jne
xchg
fimull
cli
add
inc
push
add
or
xchg
outsb
and
add
lret
pop
lods
cmp
or
add
xlat
pop
jecxz
push
std
or
insb
lock
push
stos
xor
movsb
lea
sub
mov
sbb
jno
int3
test
lea
ficompl
test
push
mov
fwait
push
icebp
mov
inc
jg
and
push
push
loope
pop
pop
pushf
iret
inc
loop
sahf
aad
adc
aaa
cwtl
dec
mov
cmp
hlt
int
movsb
inc
jg
mov
mov
cmpsb
pusha
lret
das
jecxz
add
adc
lock
jecxz
jae
stos
jle
add
das
pop
mulb
jmp
inc
jecxz
jne
inc
mov
rcll
stos
mov
stc
adcb
cltd
aad
or
jns
lock
xor
clc
push
add
xchg
movsb
or
push
es
xchg
div
inc
pop
les
add
cwtl
js
sbb
jg
int3
pop
aas
sbb
cs
sub
aam
mov
fucomp
xchg
jecxz
or
adc
in
inc
outsb
pop
inc
inc
sti
mov
sub
loop
push
sahf
add
push
sub
lahf
rol
pop
jnp
sub
jg
outsl
les
enter
pop
mov
jge
adc
out
dec
mov
ret
mov
lret
testl
xchg
mov
arpl
inc
mov
and
pop
adc
sbbl
add
lret
sbb
stos
mov
push
sub
adc
adc
faddl
loope
aad
cmp
push
sbb
mov
scas
rcrb
gs
in
jmp
mov
push
popf
test
dec
lahf
ljmp
push
int3
jp
xchg
movsl
inc
push
xchg
cmpsl
insl
lahf
add
mov
or
lea
mov
shrb
pop
fistpl
mov
xchg
cmpsb
add
pop
xchg
pop
xchg
sub
loop
daa
test
inc
adc
pop
add
lret
dec
mov
mov
push
ljmp
push
ficoms
test
jecxz
xchg
aad
xchg
pop
mov
pop
mov
or
push
shll
mov
sub
push
and
insl
sbb
inc
xor
and
jno
mov
jg
out
inc
cmp
int
imul
js
jb
jne
sbb
jmp
inc
dec
popf
lret
fsub
add
iret
in
xchg
push
sbb
clc
xchg
xlat
pushf
leave
fwait
sub
fisttpl
or
push
imul
add
mov
ret
xchg
inc
xorl
and
mulb
shll
inc
sub
cmp
scas
jmp
dec
imul
sbb
ror
lods
jb
addb
mov
push
negb
jecxz
sbb
insb
xor
stos
cmc
pop
xlat
dec
lods
mov
in
popa
add
fcmovb
das
adc
stos
pusha
xchg
fwait
rol
cli
ss
movsl
out
add
sbb
pop
xor
xor
das
cmp
xlat
cld
test
hlt
pop
stos
into
imul
xchg
mov
mov
push
jno
xor
dec
sub
push
ret
mov
aad
ljmp
sbb
mov
mov
jno
pop
dec
sub
stc
shlb
dec
xchg
adc
add
sub
add
in
mov
sub
negb
xchg
mov
into
addr16
xchg
xchg
hlt
push
arpl
or
test
lods
xor
sub
stos
inc
xchg
fndisi(8087
es
mov
ss
hlt
pop
adc
addr16
add
int3
ret
xor
cmp
mov
inc
push
lds
imul
stos
arpl
dec
push
aaa
rcl
insl
pop
lcall
js
rorb
or
pop
xor
nop
fwait
adc
and
sbb
shl
in
dec
mov
aas
xchg
adc
int3
mov
jbe
xchg
push
or
orb
pop
xlat
nop
popf
rclw
xor
cmp
fistl
lret
mov
in
and
aaa
lcall
inc
pop
pusha
dec
sub
push
mov
fwait
dec
and
sbb
jmp
jno
adc
inc
jae
xchg
xor
incb
test
scas
popf
xchg
les
adc
push
ss
xor
sbb
fwait
jmp
in
inc
repnz
popf
les
mov
dec
dec
jno
fmuls
je
xchg
push
push
pop
xlat
xor
js
setge
xor
or
mul
sbb
inc
in
pop
outsb
adc
mov
adc
sub
out
js
loope
mov
pop
jp
aad
aam
out
adc
xor
lcall
sub
negl
rcrb
adcb
fstpl
js
push
pop
clc
in
inc
jo
push
jnp
xlat
mov
stc
pop
mov
int3
dec
test
add
sbb
xchg
jmp
call
add
add
movsl
in
mov
les
jb
clc
inc
xor
loop
mov
add
cmp
push
xchg
bound
iret
out
sub
insl
ret
popf
mov
xchg
int
add
push
shlb
mov
pop
inc
inc
jmp
xor
jae
pop
int3
aas
faddl
sub
lret
aas
xchg
mov
xor
aad
xorl
cmp
xor
mov
xchg
xchg
xor
dec
adc
ss
and
mov
fisttpl
or
mov
inc
xlat
mov
sbb
mov
stc
or
in
notb
rcrl
test
xchg
mov
call
sub
in
repz
inc
push
in
sbb
out
xlat
xor
stc
mov
cmp
jb
or
pop
lret
out
loopne
jmp
xchg
push
cwtl
mov
mov
xor
out
addr16
push
adc
push
xlat
fldenv
or
pop
int
jo
out
push
and
add
in
xchg
sub
dec
mov
sub
clc
ljmp
lret
jns
jne
push
test
mov
fidivl
sub
sub
mov
out
mov
or
mov
jae
fnstsw
xor
sti
sahf
push
loop
loopne
call
jecxz
std
fiadds
dec
inc
mov
mov
das
mov
cltd
mulb
enter
sub
add
xchg
lret
or
testl
pop
loope
xor
iret
pop
add
in
pop
inc
lock
push
or
es
cs
sub
xchg
dec
das
xchg
or
or
sub
push
iret
cli
bound
jne
enter
sub
scas
jno
sub
mov
inc
pop
cmp
lret
mov
hlt
ficompl
pop
or
pop
push
bound
push
lea
lret
pop
lahf
push
push
pushf
cmp
jecxz
lret
stos
adc
dec
cs
insl
lahf
dec
negl
fwait
push
sbb
leave
lock
add
movsb
popa
insl
inc
xchg
mov
xor
or
pushf
aas
das
ljmp
bound
ja
cmp
ds
mov
daa
jmp
pop
sbbl
mov
push
int3
icebp
cmp
jg
sbb
sarl
or
stos
popf
add
fwait
sub
xchg
adc
or
xchg
jb
sbb
sub
pop
cmp
jbe
jmp
fwait
push
cwtl
arpl
movsl
call
or
pop
jg
jno
jno
inc
bound
lret
cli
cmp
popf
dec
push
cmpl
or
jp
bound
das
pop
xchg
out
repz
pop
sbb
test
icebp
repz
or
stc
push
fldenv
ret
in
rcll
iret
and
int3
lret
inc
jb
cmp
sub
xor
fwait
pop
inc
popa
dec
subl
mov
or
mov
in
push
pop
xchg
mov
out
cs
aaa
daa
out
rcr
xchg
pop
jg
cmp
sbb
mov
popa
inc
js
mov
mov
jg
push
rorb
pop
int3
inc
xchg
fmull
jno
sub
out
cmpsb
fldt
nop
addr16
data16
adc
or
movsl
aam
stos
pop
inc
test
dec
arpl
mov
mov
add
stos
mov
add
cmpsb
pop
jl
lock
fcomps
pop
or
adcl
pop
test
out
sbb
movsb
mov
lret
xchg
test
lret
push
inc
push
jb
mov
pop
cmp
xor
aas
lds
outsl
mov
push
popf
loopne
push
push
movsl
sahf
icebp
add
pop
fldpi
pushf
es
int
pop
push
xor
jnp
pop
jle
adc
mov
pop
fstps
xor
lea
lahf
clc
or
push
repz
cmpsb
mov
xchg
call
mov
jb
mov
push
call
out
mov
pop
repnz
fnstcw
les
icebp
and
add
pop
xor
xchg
jmp
roll
loopne
mov
dec
push
incl
sahf
xor
xchg
out
icebp
je
mov
xchg
add
adc
jne
dec
push
mov
add
mov
stc
pop
mov
pop
or
cmp
xlat
out
inc
mov
mov
pop
mov
arpl
insb
cmpsb
int
mov
sti
push
add
dec
fidivrl
inc
shrl
int3
sti
aaa
test
and
xlat
rcl
psubsb
push
sbb
jb
ret
xlat
lcall
mov
jo
or
shlb
std
jecxz
std
mov
aad
roll
inc
clc
xchg
push
inc
pop
adc
and
inc
adcl
mov
and
into
stc
scas
jmp
imul
divb
pop
push
cwtl
into
cmp
lods
mov
cmpsl
cmp
pop
aam
push
sub
fstpl
adc
xchg
or
rol
femms
sub
pop
or
lret
loopne
neg
add
arpl
loope
aad
iret
out
test
pop
xor
cmp
mov
push
sbb
sbb
pop
popa
sbb
sub
jns
enter
cmp
cmp
xlat
dec
jb
iret
mov
sahf
or
cmp
fwait
xchg
lcall
cmpsb
jle
cmp
leave
mov
outsl
ljmp
mov
adc
aas
gs
lcall
inc
push
sub
rorl
adc
pop
mov
jo
or
daa
sbb
fmuls
inc
xchg
jb
rcl
add
pop
xor
cmp
fcoml
mov
repz
test
cli
and
test
adc
inc
pop
mov
jle
adc
xchg
jnp
add
jg
aad
faddl
mov
daa
cmp
stos
adc
loop
fcmovbe
negl
inc
cltd
repz
mov
je
out
rolb
mov
adc
mov
adc
cmp
repz
mov
je
push
aaa
inc
scas
pop
jg
push
jnp
jae
arpl
or
or
dec
push
jl
int
fcom
sbb
in
adc
orl
cmp
cmpsb
sbb
or
dec
fwait
adc
ja
xor
pop
iret
jnp
arpl
push
fdivrl
jo
mov
cmpb
das
add
pop
sbb
mov
dec
dec
sti
cmc
imul
adc
sbb
dec
pop
stc
in
int3
and
pop
xchg
jb
add
dec
clc
mov
fsubrs
in
jns
iret
xor
icebp
daa
lock
or
mov
xlat
repz
bound
ds
mov
xor
aad
sub
push
test
push
inc
inc
push
sub
or
sbb
adc
jne
mov
xchg
fisubrs
xchg
adc
ds
sbb
push
mov
push
je
or
pop
or
out
lods
xlat
cmp
adc
lock
sahf
fsubs
lahf
int
pop
inc
and
dec
pusha
mov
lea
stos
jnp
ret
pop
pop
lret
ss
add
inc
adc
fildll
xlat
fcomi
cmpsb
mov
das
xchg
aad
arpl
jl
shll
xlat
and
les
pop
push
cmp
pop
popa
cmp
cmc
inc
pop
fsubrl
arpl
mov
imul
xchg
xchg
jg
mov
flds
xchg
fnstenv
outsb
repz
or
xchg
sbb
jnp
push
push
xor
out
lahf
xor
sub
mov
andl
and
inc
or
arpl
dec
popf
les
dec
ljmp
mov
xor
fcomip
mov
jnp
out
inc
out
fxch
cmp
mov
sbb
aam
cmp
idivl
cmpsl
cmpsb
or
in
xor
inc
sub
xor
cs
shll
shr
xor
dec
sub
xchg
cmp
push
lret
push
push
inc
fidivl
std
pop
push
movsb
dec
mov
sub
mov
pop
mov
scas
mov
sbbb
adc
pop
xchg
das
in
enter
sbb
neg
mov
sub
xor
pop
jmp
push
or
lcall
inc
inc
push
add
lock
pop
xchg
das
das
jno
inc
push
sub
cmp
jge
or
sbb
jbe
add
js
inc
sbb
jge
cmpsb
push
mov
push
sbb
jmp
imul
dec
lcall
push
sub
mov
inc
out
pop
popa
enter
mov
loopne
movsb
repnz
jbe
mov
pop
or
cltd
and
dec
cmc
or
xchg
xor
icebp
cmc
into
cmp
add
fldcw
loopne
stos
mov
mov
jmp
test
cmp
scas
sbb
fdivr
sbb
sar
insl
loopne
ja
xchg
enter
pop
hlt
stos
pop
mov
dec
mov
test
push
inc
shr
xor
rclb
mov
xchg
pop
inc
add
xor
inc
xor
pop
mov
stos
jg
bnd
pop
add
fcmovne
ret
int
cltd
aad
pop
iret
mov
jecxz
pop
out
or
lea
push
fldl
mov
push
pusha
jb
sbb
addr16
rcrb
or
out
pop
sub
and
xchg
loopne
stc
pop
jb
cmp
sbb
cmp
xor
fnstsw
push
mov
psrad
pop
add
jne
std
xorb
lea
mov
jnp
test
or
sbb
int
or
fwait
enter
xor
push
aad
movsl
clc
xor
icebp
stc
jb
clc
mov
pop
sbb
fldenv
mov
sahf
repz
into
jecxz
bound
add
sbb
dec
shlb
sbb
inc
and
mov
iret
es
insl
and
arpl
addr16
movsb
adc
clc
gs
cmp
movsb
shll
iret
insb
add
or
inc
and
cmp
jecxz
fwait
cli
lcall
std
xor
push
mov
sub
flds
push
sub
sub
xchg
call
push
cmc
dec
out
pop
fsubl
and
push
lea
pop
xchg
rclb
or
in
dec
mov
and
out
dec
aas
xor
lahf
das
xor
push
std
mov
mov
daa
adc
cmpsb
in
lret
lret
xchg
ljmp
add
pop
sub
std
pop
jp
adc
lret
inc
data16
sub
sub
pop
stos
cs
in
cli
aad
push
jg
jmp
mov
aam
jnp
cmp
dec
mov
js
ret
ss
jmp
mov
push
ja
or
mov
cmpl
adc
daa
dec
in
push
cmpl
xor
xchg
xor
lcall
fildll
leave
pop
inc
add
cmpsl
pop
out
xor
dec
out
xchg
cmp
jp
mov
inc
dec
test
sbb
xchg
xchg
aas
ds
data16
cmpsb
js
jge
mov
inc
push
je
xchg
fisttps
adc
xor
mov
inc
test
push
xor
or
cmp
pop
push
mov
mov
add
xchg
in
sbbb
adc
push
mov
add
pop
sub
xlat
sub
adc
out
cmpb
adc
leave
shrl
inc
dec
jne
xor
ja
sub
jmp
sub
adc
test
jnp
mov
test
mov
adc
xor
adc
std
push
adc
add
xorb
push
imul
mov
lcall
mov
fistpl
dec
xor
or
out
push
pop
adc
fists
cmp
fnstsw
sub
push
mov
or
mov
pop
shrl
mov
pop
stos
inc
mov
adc
cmc
icebp
imul
ss
daa
out
fcoml
movsl
not
push
jg
sub
adc
xor
mov
xlat
push
inc
add
xor
iret
mov
sub
pop
mov
mov
movsl
mul
sub
mov
lock
push
daa
test
inc
outsb
mov
pop
push
pop
sbb
sub
ficomps
mov
fimull
lret
sbb
fcoml
jnp
pop
movsb
loopne
mov
or
xor
imul
lods
push
xlat
fcomip
out
xchg
xor
js
push
sti
inc
adc
pop
cmp
pop
mov
jp
out
iret
js
jae
das
popf
push
pop
ja
mov
push
cli
or
inc
lds
test
sub
insl
jb
inc
mov
mov
inc
pop
jge
in
mov
cmc
add
push
icebp
int
loop
mov
sbb
int
or
into
sarl
inc
push
faddl
add
in
sbb
rolb
push
mov
mov
or
cmp
jnp
inc
mov
push
pop
mov
sbb
push
jo
int3
mov
movsb
fistl
or
push
jnp
loope
fstpt
sub
dec
outsb
leave
or
call
js
lahf
fidivrs
int
cmp
fcoms
fisttpl
lock
out
out
ljmp
jmp
cmpsb
je
jb
sar
sbb
aam
mov
cld
sbb
push
adc
or
fcmovu
sub
jne
clc
lock
inc
cmp
in
stc
add
adc
pop
sub
lock
sub
sbb
or
ret
or
in
jnp
mov
and
inc
cmp
daa
dec
ss
pop
mov
stc
dec
mov
mov
adc
xor
fisttpl
out
out
insl
pop
stc
fbld
dec
sbb
sbb
stos
dec
sbbl
divb
or
dec
mov
je
cmp
test
pop
cli
lcall
clc
xor
fidivrl
out
call
ror
jmp
push
cli
rorb
fwait
push
fisttpl
out
xlat
pop
or
jg
or
dec
rclb
clc
or
mov
imul
sbb
xor
clc
xor
outsl
or
jp
fidivrl
push
divl
jo
daa
lods
dec
inc
mov
test
mov
cmp
stos
lret
test
fstpt
fisubrl
pop
mov
mov
rcrl
test
mov
or
subb
in
out
ja
mov
cmp
jnp
leave
sub
mov
cwtl
fmuls
pop
lret
lret
mov
test
jns
test
mov
into
mov
adc
mov
js
xchg
pop
jmp
sub
int
dec
mov
sbb
or
cmp
je
fnstenv
iret
loopne
aas
push
mov
xchg
in
add
or
push
jmp
inc
lret
push
icebp
cwtl
add
jge
mov
ljmp
pop
cmpb
jmp
jno
lds
push
mov
inc
leave
pop
hlt
adc
dec
push
movsb
fsubrs
push
inc
mov
dec
cmp
call
ret
mov
sub
cmp
sbb
sahf
fcomip
cmp
mov
iret
dec
cmp
icebp
cmp
ljmp
add
push
popf
or
xor
roll
add
lahf
jne
arpl
pop
push
iret
dec
push
lods
dec
xor
aam
clc
pop
out
dec
in
fdiv
iret
arpl
mov
jle
xor
lcall
pushf
pop
sbb
push
inc
jns
pop
mov
popf
in
lcall
inc
xchg
dec
pop
xchg
rcr
hlt
sahf
mov
sub
sub
jmp
pop
pushf
adc
inc
cld
cs
mov
sub
cmp
std
push
xor
hlt
pop
fistpl
js
or
and
mov
sub
or
pop
cmpsb
adc
sub
xchg
mov
xor
mov
scas
xchg
lret
jg
ror
scas
ljmp
lret
and
in
pop
xlat
sub
lds
inc
inc
sub
xor
mov
mov
sbb
mov
push
test
call
out
jnp
push
hlt
cmp
es
sbb
fbld
add
pop
fidivs
dec
hlt
dec
ds
insb
xchg
dec
cmp
and
lds
hlt
push
jecxz
pop
sbbl
es
repz
fcoms
cmp
lcall
cmp
movsl
mov
or
hlt
repz
or
sbb
cmp
mov
jmp
out
mov
and
iret
push
ljmp
adc
adc
daa
fwait
lds
add
xchg
mov
test
inc
mov
add
popa
xchg
mov
fiaddl
jnp
add
andb
jg
sub
jnp
pop
mov
and
sbb
jmp
and
iret
stc
mov
cmpsb
add
sahf
mov
push
pop
loopne
jl
mov
js
lret
aam
push
aad
dec
test
add
jnp
xchg
mov
xchg
and
xchg
cli
mov
aas
mov
rclb
jbe
repnz
enter
mov
and
shrl
call
testl
test
out
andb
lahf
adc
sub
pop
idiv
cli
jbe
incl
stc
xchg
loopne
insl
mov
cmp
lock
xchg
in
stos
mov
push
addps
mov
aam
pop
subb
cmpsb
push
cli
jno
incb
inc
insl
enter
out
es
fistl
xlat
mov
add
mov
sub
addr16
or
shl
lcall
push
sbb
jge
sti
ffreep
neg
sub
sub
cmp
mov
ds
out
scas
push
push
out
push
subl
cmpsl
xor
lcall
push
sub
mov
aam
icebp
xchg
push
in
sarb
in
mulb
cmp
js
push
sahf
or
outsb
cmp
inc
pop
push
push
add
jmp
push
outsb
into
or
and
push
arpl
pop
dec
cmp
pop
and
push
pop
xor
jno
pop
xor
scas
and
stos
xchg
pop
jge
movsb
push
enter
push
es
mov
test
lds
jb
fcoml
sarb
lret
sub
stc
in
or
popf
sar
divl
mov
lea
mov
pop
bound
cmp
dec
nop
push
add
dec
stc
imul
pop
and
lret
int
mov
cmp
shll
sub
in
cmp
mov
dec
xor
push
sbb
cmpsb
sbb
stos
cwtl
arpl
dec
fwait
cmp
xor
call
fnstenv
adc
cmp
sbb
orb
pop
adc
loope
outsl
pop
cmpb
add
test
dec
adcb
scas
cmp
adc
pop
xor
pop
int
cmpsb
lret
push
call
pop
inc
or
inc
leave
inc
xchg
mov
lods
inc
sbb
dec
push
push
test
arpl
or
cltd
dec
daa
mov
xor
pop
sub
inc
out
nop
cmp
cmp
aam
flds
cmc
lock
iret
stos
xlat
dec
inc
adc
sar
scas
push
inc
jg
neg
dec
xor
bound
mov
pop
fisubrl
mov
idivl
cmp
push
sbb
js
adc
call
outsb
das
adc
or
fistpl
xchg
das
in
jb
cmp
xchg
sbb
mov
and
or
dec
add
cmpsb
pop
aas
sbb
scas
ffreep
cmp
xor
sub
sbb
cltd
clc
rclb
repz
stc
add
jns
sub
fcompl
push
mov
mov
repz
pop
sub
mov
mov
push
jp
stc
xchg
out
xlat
add
adc
mov
movsl
sub
scas
xchg
pop
adc
or
and
mov
add
jmp
notl
movsb
xor
int
or
pop
mov
sbb
outsb
or
lcall
fwait
out
repz
pop
icebp
sbb
add
mov
sarb
mov
cwtl
and
stos
mov
mov
out
push
xor
roll
xorb
rolb
in
scas
cltd
addr16
and
xor
aad
mov
sub
hlt
mov
dec
es
faddl
int3
jne
jae
fwait
jbe
in
inc
bound
push
rclb
mov
aam
sarb
jo
std
add
pop
es
pop
cmp
fsubs
or
push
or
repz
inc
mov
adc
sub
push
in
sub
jnp
cmc
jle
notb
std
aam
jmp
mov
popa
roll
xchg
xchg
testb
movsl
js
sub
fidivl
mov
pop
jg
mov
add
aas
dec
fs
lcall
add
xchg
out
cmc
outsl
xchg
xchg
gs
inc
aaa
jnp
adc
xchg
sbb
push
js
push
push
lock
inc
xchg
jno
add
lahf
or
clc
cmp
sahf
pop
mov
pop
mov
jp
xor
cwtl
inc
cmp
adc
clc
je
inc
inc
sub
sti
pop
pop
aad
sbbb
mov
fisubrl
and
imul
pop
sti
xchg
or
push
adc
add
je
sbb
arpl
aaa
cmp
inc
xlat
neg
negb
push
dec
aam
xchg
adc
test
jl
lcall
pop
mov
jp
test
rolb
js
lea
sahf
es
test
addb
orb
jge
cmp
push
sar
xor
xchg
sbb
shrb
loope
mov
mov
adc
fsubrl
mov
shll
jmp
int3
stc
pop
push
data16
test
or
fs
dec
imul
mov
lds
cmc
stos
clc
cmpsb
inc
inc
add
jg
pop
je
xor
pusha
pop
cmp
fldcw
mov
or
popf
lret
imul
es
and
inc
pop
inc
sbb
mov
pop
adc
fdivrp
stos
dec
sub
or
or
dec
dec
jecxz
into
jnp
stc
xchg
lret
call
js
add
jg
test
mov
sbb
ss
ret
xlat
xor
inc
shrl
out
hlt
add
jnp
pop
daa
ret
gs
lock
dec
fimull
in
cmp
stos
xchg
or
dec
dec
stc
pop
je
out
jg
xor
icebp
pop
sub
mov
cltd
aaa
fcmovb
shr
mov
push
cmpsl
movsb
mov
mov
cmp
pop
sbb
mov
in
cmpsl
sti
inc
mov
add
adc
or
sub
in
loop
jbe
lcall
xchg
repz
popf
sbb
xchg
ret
int
test
pop
sbbl
cwtl
fdivs
mov
pop
fsts
icebp
add
dec
cmp
xor
inc
pop
mov
ret
and
or
mov
sub
mov
inc
pop
mov
or
stos
add
mov
mov
movsb
sbb
push
sbb
sub
bound
or
mov
or
ret
pop
aas
fucomp
jbe
jp
notl
jge
push
stos
xor
pushf
bound
in
dec
loop
mov
jo
out
cmp
sub
out
into
iret
movsb
popf
in
in
in
inc
fmull
pop
faddl
pop
aam
enter
or
mov
idiv
push
iret
insl
cs
xchg
mov
ret
mov
sbb
add
sub
add
xchg
and
mov
sub
jne
sbb
call
out
xor
and
out
pop
mov
cli
daa
add
cli
int3
sub
add
cmp
stos
sti
inc
mov
jo
and
int3
cwtl
aaa
cmp
es
jg
cmpl
cli
mov
add
and
shlb
aas
std
sbb
psllw
push
js
stc
mov
inc
leave
mov
adc
mov
pop
cmp
xchg
push
stos
ljmp
pop
in
sti
fwait
mov
sub
iret
push
out
xchg
test
int3
sbb
mov
lock
rcr
mov
pop
and
int
adc
loopne
push
cmp
popa
arpl
mov
or
push
idiv
and
shrl
mov
stc
lcall
pop
loop
cmp
lcall
jle
sub
sub
add
xor
into
popf
and
lcall
clc
jo
movsl
jb
pop
push
movsb
xor
inc
movsb
mov
push
sti
fcomip
mov
in
pop
sbb
mov
dec
mov
icebp
cmp
mov
fisubrl
sbbl
push
cmp
in
fcomi
sbbb
push
loopne
leave
mov
xchg
js
sahf
add
fsubr
xchg
jl
lret
sbb
pop
sbb
enter
xchg
or
push
mov
pop
wrmsr
push
and
sub
clc
jp
mov
fstl
xchg
or
mov
fwait
xor
jle
mov
scas
imul
out
cltd
mov
mov
adc
imul
ja
bound
repz
sub
lcall
xor
clc
push
cmp
adc
aad
push
add
inc
imull
jmp
pop
dec
stos
jle
movsl
pop
das
xchg
xchg
xchg
cltd
mov
cmp
lret
mov
mul
pause
jne
js
inc
mov
cli
lea
jg
sbbl
push
xchg
mov
pop
mov
cmpsb
cmp
xchg
pop
out
mov
add
js
jg
sub
dec
sahf
mul
mov
mov
cmp
jge
xchg
aaa
add
in
mov
jle
and
inc
fcmovnbe
lcall
js
mov
and
sub
sbb
xor
ds
sarb
ficoml
cmpsl
or
push
inc
inc
lea
inc
push
xor
sbb
inc
pop
push
and
sbb
xchg
fisubrl
clc
mov
fcoms
lahf
hlt
dec
cmp
dec
mov
sub
addr16
fwait
push
pop
cmp
sahf
les
lret
lods
jg
xor
jnp
insb
jae
nop
into
vrsqrtss
xor
or
cmp
flds
loopne
jmp
adc
cmp
iret
add
stos
imul
js,pt
imul
jnp
xchg
iret
inc
mov
xchg
add
bound
jl
pop
outsb
push
mov
dec
decl
cmp
inc
movsl
xor
lret
inc
mov
xor
xor
fstpt
js
paddsw
cli
xor
lea
imul
mov
push
add
and
lods
imul
into
sarb
pop
xor
mov
cltd
inc
int
clc
arpl
stos
sbbb
sti
test
pop
lock
loop
pop
leave
sub
mov
int3
xchg
js
clc
push
jg
cwtl
jae
in
or
or
xor
or
outsb
sahf
push
das
jge
loope
sbb
fchs
fldenv
ret
xor
mov
repnz
and
outsl
xchg
les
out
mov
push
repnz
inc
icebp
xor
pop
movsb
adc
xor
cmc
jnp
insb
sarl
jmp
dec
sub
mov
lods
mov
testb
mov
xchg
mov
cmpsl
fwait
dec
subl
cwtl
movsb
xlat
arpl
into
test
xor
and
fcomps
inc
dec
jae
sbb
mov
mov
int3
pop
ljmp
cmp
inc
pop
int
xor
cmp
imul
addr16
dec
aaa
push
sub
lcall
mov
lret
xchg
lods
gs
or
stos
sbb
test
div
mov
and
sbb
jecxz
hlt
aad
adc
stc
pop
sbb
jmp
aad
test
pop
divb
cmc
xchg
pop
lret
mov
ret
sub
jecxz
or
pop
mov
mov
push
ror
mov
mov
out
fidivrl
aad
sahf
nop
stos
movsl
lock
xchg
subb
xchg
fstps
test
lret
mov
call
out
rclb
adc
add
iret
ja
or
sti
aas
in
inc
jg
jecxz
and
in
mov
repz
mov
or
mov
pusha
ret
sub
and
mov
roll
ds
ljmp
jecxz
cmp
into
jnp
daa
add
stc
or
sub
add
daa
pop
sub
int
push
cmp
fistpll
cmp
or
pop
or
xlat
push
jns
sub
jbe
sbb
mov
pop
xchg
push
insl
or
inc
sbb
roll
mov
imul
iret
cmp
xlat
adc
call
pop
pop
ds
insl
les
and
fsts
jg
mov
cmp
xor
test
shlb
nop
ja
pushf
pop
lea
lods
sbb
jg
adc
cmp
icebp
pop
jnp
cli
lret
or
sub
movsl
cmp
xor
mov
scas
dec
pop
fimull
xor
out
lcall
cmpsb
mov
fiaddl
rclb
xor
fmull
ss
fdivr
cmp
shrl
popa
or
mov
stos
mov
shrb
xor
ja
rcll
mov
ja
subl
in
cmp
jl
pop
shlb
cmp
out
lock
sub
cld
data16
mov
pop
mov
in
add
arpl
leave
lcall
cmp
sub
das
sbb
xor
sti
out
xchg
dec
stc
mov
push
lret
shl
push
stc
fstps
or
imul
dec
push
negl
add
jmp
xor
call
dec
push
fisttps
sbb
pop
sub
lret
bound
xchg
faddl
pop
aam
mov
icebp
xchg
mov
cmpsb
jl
fcomp
loop
and
dec
hlt
jmp
mov
mov
sub
fwait
dec
pop
test
add
das
pop
dec
and
adcb
sub
inc
icebp
ss
pop
pop
xchg
pop
ljmp
mov
ficompl
cli
xor
imul
pop
repz
fsubrl
pop
add
mov
cmp
cmpsb
pop
push
sbb
sbbb
sahf
imul
mov
int
inc
xor
cmpsb
pop
push
icebp
add
mov
cmp
or
inc
sub
out
inc
xor
pop
xlat
and
sti
xchg
dec
pop
push
test
std
xor
xchg
lds
jp
push
jp
cmp
or
mov
push
popf
sub
call
push
sbb
loopne
fsubr
xor
sbbl
leave
lods
nop
dec
sub
cld
pop
push
push
aam
xor
jp
rcrl
xor
mov
mov
sbb
mov
jnp
push
stos
pop
mov
jmp
xor
or
jo
les
jo
cld
out
test
jg
popf
fcmovbe
icebp
ret
cmp
mov
xlat
ljmp
adcl
xor
and
addr16
jge
leave
and
testl
pop
cmp
sub
gs
or
jecxz
es
std
fwait
cmpsb
stos
xchg
mov
jg
mov
xchg
icebp
mov
out
aad
dec
push
outsb
movsb
xlat
outsl
sbbb
cmpsb
inc
lcall
xor
pop
cmpsb
loopne
mov
push
sbb
daa
popf
das
xchg
or
lret
fs
out
sbbl
mov
clc
inc
push
mov
lea
xchg
rep
or
repnz
adc
and
or
scas
packuswb
or
jbe
outsb
jbe
jmp
mov
push
movsl
ret
aaa
les
icebp
xorb
dec
arpl
call
push
icebp
repz
test
insl
sub
lds
cmpb
subl
lds
pop
xchg
push
push
clc
leave
sub
sahf
cmp
or
aam
loopne
dec
or
push
add
or
xor
cmpl
dec
aaa
sbb
pop
pop
call
dec
pop
jl
mov
pop
mov
mov
xor
mov
pop
lcall
inc
ret
pop
jmp
pop
arpl
push
fisttps
pop
mov
stc
mov
das
jp
mov
xor
mov
sub
mov
imul
jo
sbb
sbb
out
jae
jg
cmpsb
xchg
adcl
and
sub
bound
ja
aaa
mov
scas
dec
fcoml
xchg
aam
mov
or
jns
cmpsb
adc
push
ds
repz
daa
mov
push
lret
or
inc
cmp
xor
es
fucom
es
push
xor
dec
iret
add
jge
sub
dec
mov
aad
pop
jmp
aas
lods
sub
push
movsb
fists
or
or
jl
jne
enter
loop
stc
xchg
mov
cmpsb
pop
in
pop
adc
mov
cmpsb
mov
lcall
jnp
mov
xchg
lahf
mov
sti
sub
mov
sub
jle
ljmp
mov
pop
xor
sub
adc
sub
pop
jnp
pop
test
insl
int3
rcl
cmpsb
outsb
mov
or
cmp
xlat
xchg
inc
push
gs
ja
sti
test
add
jnp
sub
pop
cmp
out
test
inc
jp
iret
andb
sbb
sub
movsl
mov
movsl
dec
xchg
adc
push
fists
dec
xor
stos
jnp
mov
push
dec
mov
xor
mov
testl
add
ret
pop
leave
mov
in
notl
inc
cwtl
jmp
hlt
mov
pop
in
subl
sbb
xor
movsb
lea
or
enter
rol
test
pop
add
adc
lcall
inc
inc
dec
rcl
faddl
imul
push
in
add
mov
mov
and
jg
imul
lret
iret
aas
sub
lock
andb
sbb
sbb
ret
std
enter
jns
xchg
sbb
adc
inc
or
pop
push
aaa
bound
iret
das
inc
aad
xor
negb
jnp
add
pop
or
inc
roll
mov
inc
aad
inc
shlb
mov
repnz
dec
sbb
in
movsb
scas
add
push
mov
int
cmp
cmp
cmp
sbb
add
mov
icebp
imul
inc
dec
sub
jge
cmp
cmp
fcmovbe
test
cmp
lcall
ss
jbe
pop
outsb
mov
negb
mov
daa
ss
call
fisttpl
cmp
cmc
subb
xor
not
loop
cmp
inc
sub
loop
fdivrp
jle
lret
ret
scas
arpl
call
mov
or
push
inc
mov
dec
aas
orl
sbb
repnz
cmp
daa
sbb
ficoms
mov
jp
push
sub
sub
mov
mov
mov
cmp
dec
loopne
cmc
lret
mov
das
sbb
pop
repz
daa
sub
sbb
dec
pop
push
adc
xchg
xlat
xchg
sbb
xchg
xor
lcall
mov
icebp
mov
rcrb
jl
sbb
aad
and
dec
xchg
xor
sbb
pop
jnp
jnp
jnp
inc
inc
mov
jle
mov
subb
out
mov
cmp
fcompl
or
cmp
mov
pop
add
scas
sbb
inc
cltd
xchg
or
and
mov
movb
and
sbb
stos
push
lods
outsl
clc
mov
pop
and
pop
addr16
add
or
mov
lods
outsb
stos
jmp
push
sbb
stc
push
push
adcb
mov
sbb
pop
test
pop
or
aas
xor
xchg
fstps
inc
dec
push
and
pop
adc
out
mov
add
mov
cmc
sub
les
or
faddl
fiaddl
xor
sub
rep
pop
xor
sub
shll
push
inc
imul
stc
sub
cmp
lret
add
jp
pop
fnstcw
mov
sbb
xlat
pop
mov
add
fwait
mov
pop
push
add
xchg
dec
xor
outsb
in
cmp
sarl
sti
fistpl
scas
cmp
sub
les
lock
cld
and
pop
dec
mov
jp
out
orl
ds
jno,pn
push
jns
cmc
das
or
idivb
imul
add
pop
jb
enter
rcrb
not
les
loopne
xor
mov
stc
stos
test
cmp
fsubr
mov
adc
leave
mov
daa
out
inc
xlat
mov
outsb
fbstp
sar
js
ljmp
xlat
rcll
in
test
test
jmp
xchg
shll
dec
inc
test
cmpsl
scas
mov
rcrl
cli
loop
push
stc
jg
inc
mov
sub
cli
clc
cs
adc
mov
mov
rorb
inc
repnz
jg
lret
jmp
xchg
ja
dec
gs
nop
je
push
aad
out
or
sub
xlat
das
push
mov
xchg
sti
sbb
out
lcall
cmp
lcall
cmp
adc
repnz
add
loopne
jbe
sbb
cltd
mov
or
sbb
cmc
mov
enter
clc
into
cmpsb
lds
cmpsl
mov
es
data16
popa
xlat
adc
repnz
out
inc
rcl
fmull
idiv
jno
in
jge
add
pop
mov
xchg
imul
pushf
call
out
shll
repz
jne
mov
out
or
dec
icebp
or
xor
pop
fpatan
pop
iret
call
sbb
or
mov
xor
mov
mov
bound
or
mov
in
xor
insb
dec
jl
add
fwait
lret
inc
ret
and
and
pop
mov
sbb
fwait
mov
adc
mov
push
mov
jecxz
jl
mov
add
sub
or
dec
stos
push
les
jg
and
stc
stos
xchg
lcall
popf
xlat
lods
add
imul
cli
xchg
sti
or
out
xor
mov
lea
adc
jno
shl
arpl
sti
rcll
xor
js
dec
cld
aas
pop
dec
imul
fisttpl
lea
int
xor
pop
fcompl
sti
fistps
insl
outsl
iret
lds
repnz
push
sbb
jmp
repnz
out
xchg
ljmp
cmc
add
fwait
jbe
aam
cltd
add
int3
xor
hlt
data16
dec
push
xor
dec
faddp
sub
sbb
shlw
push
icebp
in
movsl
mov
inc
sbb
cmp
pop
imul
fistpl
fdivrl
in
or
xor
scas
daa
adc
lcall
add
subb
stc
pop
aad
mov
dec
in
jbe
mov
pop
lret
pop
sub
xchg
repz
aaa
fxch
ss
xchg
iret
pop
xchg
add
mov
xchg
loope
movsb
test
jo
sub
inc
xor
sbb
js
or
xchg
mov
dec
enter
je
cs
stc
cwtl
mov
movsb
subl
add
mov
and
cli
out
sbb
pop
mov
and
adc
jp
sti
insl
mov
mov
and
push
ds
xor
jns
and
das
or
inc
aad
loop
xor
pop
pop
pop
inc
or
pop
jge
push
mov
lret
scas
dec
mov
lock
mov
add
vmovaps
bound
sub
cmp
xchg
sub
mov
push
xlat
outsb
flds
jae
repz
dec
popf
dec
push
add
pop
push
dec
pop
xchg
aaa
test
xchg
and
xchg
xchg
or
arpl
pop
sbb
or
fwait
mov
mov
aam
jl
in
pop
or
sbb
mov
fistpll
mov
ds
pop
cmp
in
mov
pop
cltd
and
pop
inc
lcall
rcll
pop
sub
lcall
popa
and
and
xor
cld
push
pop
pop
push
pop
cmpsl
in
ljmp
sbb
repz
aaa
loop
mov
inc
dec
mov
out
mov
iret
mov
clc
mov
xchg
push
push
push
es
cltd
jnp
call
aad
or
mov
ds
adc
addl
cmp
outsl
push
popa
sbb
cmc
fucomip
or
push
pusha
inc
roll
shrl
dec
cmp
out
pop
mov
push
rcll
or
aad
mov
mov
jg
enterw
mov
mov
repnz
ds
test
cmp
push
inc
xchg
push
hlt
pop
repnz
xor
and
inc
nop
mov
jbe
testl
mov
xchg
imul
fisttpll
in
pushf
jns
sub
pop
pusha
sub
sbb
xchg
xor
xchg
aam
lret
inc
pop
mov
cmp
ja
pop
jo
loope
push
sbb
push
in
sbb
lcall
icebp
in
ficompl
fs
cmp
stos
cmp
sti
xor
inc
mov
pop
fidivrs
mov
ret
sbb
sub
insl
lret
xlat
std
lahf
notl
hlt
jns
jbe
or
cmp
cmp
mov
iret
inc
and
fdivr
add
fcmovne
push
aaa
movq
sbb
or
sub
add
dec
xchg
cmp
mov
aad
or
inc
push
test
js
in
test
cld
cmp
xchg
mov
push
aad
divl
mov
mov
xor
fnstsw
or
mov
push
jbe
fidivrl
sbb
inc
mov
jne
js
icebp
xchg
push
filds
add
in
pusha
rol
dec
cmp
jnp
out
jecxz
cmp
pop
test
cmp
push
inc
xchg
or
jne
divb
sarl
cltd
mov
ret
into
xor
xor
xor
rclb
add
inc
xlat
test
lea
std
js
push
sahf
jmp
int
cli
and
sti
aas
iret
aad
xor
jnp
out
jo
sub
sbb
xchg
das
pop
mov
xor
repz
jb
mov
out
and
rcr
stc
in
cmpsl
das
xchg
rcrb
pop
popf
push
push
popf
into
or
call
xchg
xchg
in
add
in
inc
and
popf
add
arpl
test
in
aaa
xor
flds
jg
insl
xor
daa
cwtl
addr16
xchg
cmpsb
push
ds
push
pop
jecxz
lods
adc
mov
out
inc
cs
xor
cmpsb
xor
hlt
xor
shlb
test
mov
stos
xchg
jnp
sarl
push
in
call
pop
repnz
sti
push
pop
mov
js
pop
je
int
clc
shrb
mov
shlb
int
and
or
pop
mov
in
jno
sub
lock
xchg
inc
adc
iret
push
iret
mov
mov
mov
aam
call
push
cmp
fldl
lcall
mov
sub
jecxz
or
jp
out
mov
pop
pop
subb
push
cmp
fistps
mov
jecxz
outsb
loopne
pop
aas
or
sbb
enter
push
lcall
dec
sub
jmp
out
iret
stos
inc
sbb
add
lcall
rclb
lods
dec
addl
addr16
iret
and
les
and
adc
out
int3
je
shll
pop
setno
sti
in
jo
fwait
xor
sarl
rclb
jg
adc
ja
pop
or
scas
sub
pop
mov
pop
xchg
out
sti
xor
lea
cli
or
cmc
xchg
sub
jle
dec
idiv
pop
clc
jp
pop
jge
mov
lea
or
push
sub
bound
icebp
or
lcall
push
cli
lret
inc
mov
push
jnp
push
push
inc
js
sbb
iret
sarb
mov
ljmp
into
cmp
aam
cli
add
aaa
ret
push
xchg
lret
pop
fnstenv
repz
adc
int
jmp
add
mov
lcall
pop
nop
rorl
xor
sti
js
pop
and
jle
cmp
inc
xor
dec
push
xor
aam
ljmp
mov
sub
fdivrl
mov
xchg
lds
cltd
jmp
in
pop
xchg
lret
lods
adc
call
imull
sub
mov
arpl
jb
js
jnp
lock
sbb
out
and
mov
ljmp
movsb
xchg
dec
hlt
jmp
push
scas
xor
inc
jno
jno
mov
jns
hlt
ss
aaa
out
lods
idivl
imulb
sbb
cmc
mov
mov
nop
rcl
pop
sbb
mov
jmp
dec
adc
cltd
cmpb
cmpsl
adc
mov
lahf
or
idivb
lahf
js
add
xchg
repz
xor
insl
movb
das
test
popf
cmp
out
cmp
lds
arpl
jp
ljmp
sub
clc
cmp
stos
not
lcall
outsb
cltd
cmp
xchg
gs
stc
cltd
add
sarb
xlat
mov
lret
icebp
xchg
test
repnz
or
and
mov
push
outsb
jg
int
and
iretw
mov
ljmp
stc
mov
mov
fmull
pushf
lcall
sbb
mov
mov
jnp
clc
xchg
inc
xor
test
mov
cmp
fcmovnbe
inc
add
sbb
lcall
jp
clc
call
test
xchg
lret
mov
cmp
popa
imull
add
fistpl
jns
sbb
push
jnp
enter
roll
jnp
std
and
mov
stc
sbb
cmp
daa
sbb
fdiv
test
clc
mov
add
dec
aad
jnp
shr
push
lret
sarb
pop
neg
ss
cmp
mov
sbb
cwtl
idivl
jne
pop
inc
jmp
dec
sahf
fdivrs
inc
sub
dec
mov
mov
jno
cmp
push
mov
repz
movsb
call
sub
inc
mov
jmp
or
ljmp
aad
stc
jnp
fldt
mov
xchg
fmull
or
or
cmp
add
rcr
ljmp
roll
cmp
or
cwtl
mov
mov
mov
fcomps
xor
pop
adc
aam
or
mov
lret
pop
cwtl
cmp
sbb
adc
and
fucomi
fsubrs
adc
enter
sbb
xchg
xchg
leave
fidivl
rcl
xlat
sub
jmp
sbb
lret
jns
jmp
cmp
jp
clc
lock
sub
add
mov
fldcw
push
inc
or
fld1
mov
pushf
mov
jnp
or
jns
flds
fildl
cmp
lock
sub
sub
mov
fmuls
mov
sbb
cmp
sbb
clc
clc
fmuls
and
mov
lret
add
jg
cmp
repnz
push
mov
loop
fmuls
adcb
leave
jae
cmpsb
xor
rcr
aad
std
mov
push
clc
mov
push
adc
xchg
mov
les
add
or
jmp
jmp
iret
push
repz
mov
das
jbe
push
pop
pop
lods
sbb
adc
pushf
adcb
xlat
lcall
push
insb
gs
mov
sbb
pop
cwtl
dec
mov
dec
rcll
frstor
jmp
aad
icebp
jb
test
xor
bound
clc
lea
int
dec
mov
shll
daa
aad
pop
mov
dec
and
cltd
rcrb
or
dec
pop
loopne
and
xchg
ja
cmp
lea
mov
add
pop
xor
adc
xchg
add
enter
fmull
jnp
jns
aaa
fsubrl
pop
adc
lret
repnz
pop
add
jnp
lret
or
stos
fldcw
mov
sahf
nop
sub
jmp
int
mov
pushf
adc
test
inc
scas
mov
mov
and
push
int
test
pushf
movsl
mov
mov
out
dec
es
inc
lcall
lret
xchg
enter
inc
test
push
loopne
xchg
outsl
cmpsb
into
loop
pop
inc
sbb
sub
lret
xchg
cld
or
push
mov
mov
mov
negl
add
test
xlat
xor
sub
inc
pop
adc
fdivs
fistpll
add
xchg
mov
sarl
mov
cli
out
lcall
ljmp
inc
sbb
add
aam
jae
xor
mov
pop
gs
icebp
cmpsl
xor
enter
cmp
xchg
and
adc
push
sub
xor
jmp
jecxz
add
xchg
fwait
pop
sub
cmc
pop
testl
inc
push
ret
jo
fstl
dec
imul
jmp
push
test
clc
mov
stos
pop
jmp
daa
dec
mov
mov
dec
sub
pop
ljmp
or
mul
fldcw
popf
cli
aad
cmp
roll
cmpsb
cwtl
mov
jmp
out
mov
xchg
dec
sbb
push
dec
push
mov
pop
out
or
inc
test
add
ret
or
push
jno,pn
add
pop
mov
outsl
push
ljmp
lcall
cltd
xor
add
fmuls
aam
rclb
mov
rcrb
pop
cmc
setno
jnp
xchg
cltd
xchg
loop
xor
loope
add
rcl
aaa
stc
cli
mov
aas
cmpsl
cli
leave
in
jns
rcrl
xlat
imulb
adc
pushf
add
pop
push
xchg
rcr
cmp
lea
jnp
fs
movsl
pop
inc
aaa
je
and
jnp
adc
stc
adc
and
iret
cwtl
fstps
cmp
mov
sub
imul
sbbb
stos
dec
dec
sbb
jo
mov
jnp
jle
notb
sti
cmc
sahf
insb
xor
aam
ljmp
pop
ret
pop
pop
cs
xor
movsb
mov
cmpsb
mov
xorb
xor
jnp
adc
hlt
xchg
dec
push
and
sbb
lods
jnp
cmp
cwtl
sbb
mov
pop
fmull
sahf
xor
mov
dec
dec
inc
cli
int
mov
lods
pop
push
dec
inc
out
and
mov
stos
je
pop
mov
xchg
aam
bound
mov
cmpsb
mov
imul
ret
shl
lds
les
lcall
std
cwtl
cmp
jae
loop
sub
imul
andl
imull
add
cltd
mov
push
cmp
xorl
outsb
sbb
cmp
push
jb
and
es
adc
and
add
cli
sbb
fisttpll
ljmp
pop
in
repz
sub
ljmp
in
enter
ret
cmp
pop
imul
movsb
cmp
lret
xlat
pop
arpl
nop
xchg
sbb
fdivrl
addl
ljmp
mov
sub
fmul
movsb
xchg
ret
das
mov
cmp
dec
or
jp
int3
stc
insl
stc
push
stc
push
xor
dec
xor
test
idivb
shl
cwtl
fildll
mov
mov
push
push
imulb
or
pop
sbb
stos
dec
or
lret
adc
adc
add
push
scas
or
insb
push
aaa
add
cmp
adc
clc
hlt
cli
cmpsb
add
pop
adc
mov
add
add
outsb
adc
sti
negb
hlt
int
aad
pop
or
ret
movsl
insl
out
out
mov
push
jle
pop
cltd
test
dec
jmp
cld
aas
ds
xchg
mov
xlat
in
shrb
scas
push
insl
adc
push
mov
fsubs
stc
pop
out
and
adc
xchg
fldt
aad
jno
repnz
lret
daa
sbb
inc
imul
xor
adc
adc
mov
lret
push
repz
idivb
xorb
clc
pop
pop
mov
iret
inc
sahf
mov
jmp
jecxz
xor
cmp
fstps
pop
arpl
sbb
stc
movb
aam
clc
fs
pop
pop
sbb
lret
xchg
data16
mov
xchg
and
pop
fcoml
into
xor
pusha
lods
fdivrl
mov
adc
adc
ret
mov
je
loopne
ja
mov
cwtl
cmp
test
add
push
dec
pop
in
sbb
push
std
or
fdivl
cmp
in
add
xor
rorb
or
sbb
inc
int3
mov
inc
mov
xor
jns
inc
inc
arpl
add
repnz
pop
je
lds
push
and
push
dec
mov
roll
not
in
daa
inc
stc
aaa
or
cli
inc
add
mov
mov
mov
xchg
sahf
repnz
and
mov
sbb
push
or
dec
adc
dec
out
xchg
dec
cli
or
iret
xchg
add
mov
mov
sbb
sbbb
xor
fwait
push
das
or
fwait
or
or
jmp
xlat
xor
bnd
dec
in
filds
push
rcll
dec
mov
adcl
fisubrs
mov
and
mov
sub
cs
cmp
mov
rcr
sub
sub
repnz
shlb
mov
enter
add
ret
scas
in
ret
stc
push
inc
aad
lcall
pop
fistpl
lods
lds
sbb
jle
stos
cli
into
xor
sbbb
and
dec
sub
or
fsubl
pop
in
outsb
pop
xor
jbe
jp
jecxz
lcall
iret
sub
call
mov
sub
xchg
stc
jle
ds
push
adc
xchg
int
or
aam
or
imul
insb
dec
sbb
imul
loop
fucomp
enter
jne
out
test
dec
ret
mov
mov
add
jno
mul
mov
aam
pop
adc
pop
cmp
mov
and
mov
jns
in
clc
fiadds
int3
and
fldcw
fmul
pop
sar
xchg
icebp
dec
shlb
aad
jmp
pop
mov
mov
cmp
sbb
add
xchg
push
xorb
loopne
repnz
adc
jmp
mov
push
push
rol
fistps
lcall
lcall
push
pop
jge
fxch
xor
movsl
add
or
pop
imul
mov
fdivrl
fists
push
mov
mov
mov
xlat
pop
mov
movsl
or
aad
scas
dec
movsl
aam
arpl
movsb
adc
int3
cmp
pop
cmp
pushf
std
mov
mov
movsl
sti
stos
add
inc
push
adc
cmp
idivl
xor
xchg
xchg
inc
mov
add
dec
loopne
mov
mov
or
popf
clc
inc
ja
in
ljmp
imul
push
push
dec
push
mov
loop
sahf
cmc
mov
gs
mov
mov
ljmp
mov
inc
dec
mov
pop
rclb
pop
inc
ds
aad
jno
inc
bound
lea
mov
or
cmc
pop
or
fstps
cmp
js
mov
fsubrl
and
adc
pushf
push
cli
ds
sub
dec
inc
mov
daa
inc
mov
dec
mov
and
out
cli
daa
or
jo
mov
mov
cs
add
mov
push
aaa
push
test
jmp
mov
aaa
test
jo
icebp
aam
insb
imul
inc
clc
jae
xlat
mov
ret
add
das
jae
fstl
and
cmpsb
push
jns
stc
into
mov
aad
lds
or
inc
mov
dec
xor
pop
icebp
sbb
and
mov
push
jge
outsl
and
test
jl
int3
loopne
push
jnp
lret
sub
mov
stos
cmp
cmp
or
inc
les
call
test
push
xor
cmp
add
xchg
stos
ret
clc
js
xchg
inc
std
int3
imul
inc
out
xor
fisttps
repz
inc
xlat
in
daa
aam
xor
and
aas
int
js
insl
cli
test
xor
call
inc
rcrl
push
push
or
adc
ficompl
xor
int3
mov
pop
cmp
movsl
cmp
cli
mov
push
int3
cmpsb
mov
xchg
jo
iret
addb
fsubr
xor
or
imul
jmp
mov
jb
xlat
adc
xor
inc
mov
jg
add
dec
pushf
movsl
dec
clc
lea
shlw
aaa
cmp
cmp
dec
dec
mov
add
out
arpl
js
cmp
rcrb
push
aam
test
in
js
push
sbb
jmp
out
jmp
mov
repz
xchg
stc
pop
pop
fimuls
out
sub
fwait
push
pop
mov
mov
jnp
mov
mov
stc
dec
aad
mov
loope
jb
or
sbb
adc
mov
xchg
fucomp
popa
movsl
dec
pop
mov
out
in
mov
dec
ja,pt
out
lahf
pop
loop
aad
lret
cmp
aad
fs
fxch
bound
pop
xchg
inc
sub
pop
adc
jae
js
mov
xor
dec
inc
ja
inc
sti
pop
push
mov
aas
mov
mov
sub
mov
cmp
fstpl
push
outsl
das
fsubl
cmp
pop
pop
imul
movsl
or
lret
popf
xchg
cmpsl
adc
xor
adc
sub
xor
rcr
xor
mov
out
mov
cmp
or
jp
jb
out
orl
sub
push
mov
sbbl
fbld
int
xchg
xchg
push
rorb
jmp
int3
xchg
bound
mov
push
xlat
shl
les
push
mov
fs
xchg
stc
fistpl
mov
xchg
fwait
xor
mov
xlat
push
jae
push
cltd
pushf
inc
xchg
mov
pop
fistps
and
outsl
imul
rolb
pop
std
or
push
shlb
sbb
xor
xor
adc
and
or
cmp
add
das
inc
mov
fldt
loop
or
ret
cltd
fld1
cmc
pop
jno
gs
ljmp
xor
insb
shll
xchg
stc
adc
xchg
or
jb
mov
fisubrl
inc
xchg
sbb
xchg
cmp
xor
pop
xlat
push
and
pop
cmpl
adc
pop
inc
movb
cmpsb
sub
mov
sub
test
push
push
sub
rol
jnp
sub
xchg
cs
fnstenv
dec
jg
xchg
jg
or
add
inc
dec
push
aad
and
and
cmpsb
sbb
push
lahf
mov
call
pop
insb
lcall
xor
stc
xchg
cmc
xor
insl
mov
cmpsl
pop
cmp
daa
cmc
add
rorl
js
sahf
add
add
lods
dec
es
mov
adc
inc
sbb
aad
test
dec
pop
jne
aam
pushf
xor
aaa
ret
pop
cmpsb
push
xor
pusha
dec
repnz
and
push
mov
inc
xor
xor
push
or
mov
sti
gs
stos
enter
in
sar
shr
add
fcmovu
dec
pop
fucomi
movsl
cmp
stc
out
fs
clc
pandn
push
mov
mov
push
jnp
ret
mov
mov
repz
sti
add
or
and
xlat
push
sbb
xor
lret
add
loopne
imul
pop
sbb
push
xor
ret
jmp
sub
aas
jl
hlt
pop
or
adc
push
scas
psubq
cmp
xor
fs
test
adc
sbb
push
je
xor
sbb
mov
repz
sbb
sti
aad
mov
cmp
or
jmp
lahf
sbb
or
sbb
psubq
imul
sub
mov
mov
inc
repz
xchg
xchg
and
or
xor
pop
in
idivl
mov
dec
movl
lcall
std
cmp
cwtl
out
xor
mov
or
aas
push
xbegin
jmp
xor
and
pop
mov
pushl
adc
cwtl
enter
jns
out
cltd
stos
pop
xor
out
pop
jl
mov
or
jp
aam
or
lahf
mov
jb
or
popa
xchg
mov
dec
scas
lcall
int3
mov
dec
idivl
insl
shrl
mov
cmp
xchg
test
arpl
inc
xor
test
inc
pop
sbb
sti
push
jg
idivl
mov
sbb
jge
mov
cmpsb
popa
and
jne
andl
cmp
ss
sbb
jecxz
idivl
adc
movsb
loope
cmp
mov
jne
mov
mov
xchg
mov
call
mov
cli
push
stc
mov
mov
ja
or
repnz
js
mov
cmp
ja
sti
cmp
into
out
stc
movsb
dec
or
sub
mov
jg
jnp
push
out
fildl
stos
cmp
jae
xor
faddl
and
clc
fisttpl
xchg
push
push
hlt
fdivrs
mov
aad
dec
pop
pop
inc
xchg
stc
jle
pop
cmp
xchg
xchg
jl
inc
stc
xor
mov
mov
jnp
idivl
out
ret
push
mov
aad
xchg
mov
sub
cmpsl
sbb
mov
xor
sbb
es
jmp
sbb
sub
mov
or
sbb
mov
ss
sbb
mov
dec
inc
push
dec
js
cmpsl
cld
add
jecxz
dec
jae
dec
test
cmp
add
cltd
lea
pushl
and
push
dec
out
ss
jbe
cwtl
dec
out
pop
shrl
lret
rcll
icebp
cmp
shl
add
call
mov
add
xchg
lods
cs
fimuls
or
xor
xchg
in
cmp
sub
push
lods
aad
ret
frstor
hlt
push
mov
dec
cmpsl
or
push
jne
xchg
cli
sti
mov
rclb
in
lcall
mov
jae
movsb
nop
je
mov
mov
mov
and
popa
bound
sar
xchg
pushf
or
sub
cmp
js
fs
arpl
and
mov
frstor
and
js
sub
mov
outsb
cmp
mov
sti
jle
iret
xlat
nop
xor
stc
out
or
cmp
sti
test
addr16
pop
or
push
add
jbe
movsl
adc
in
int3
dec
sub
cmc
mov
xchg
pop
and
sub
and
cmp
jnp
or
add
mov
int
xchg
mov
dec
cmp
push
cmc
mov
sti
sub
and
cmp
fstps
or
adc
push
xchg
je
rcll
daa
adc
stos
cmc
movsb
sarl
int3
push
stc
adc
filds
inc
mov
mov
mov
fsubp
testl
push
jmp
mov
jp
lahf
pop
int3
or
repz
loop
or
loope
clc
xchg
mov
cli
mov
cmpsl
mov
outsb
imul
jecxz,pn
cmp
loopne
add
xlat
cwtl
add
and
wrmsr
divl
mov
cs
or
xlat
sub
mov
mov
dec
push
cmp
pusha
int
mov
add
out
xor
pusha
test
int3
add
xor
push
or
test
and
mov
adc
pushf
pop
xchg
js
pop
mov
jae
mov
pusha
aam
cmp
aam
ss
and
add
jecxz
mov
ficompl
cli
clc
or
xchg
xor
popa
scas
orb
lcall
sub
sub
jne
mov
add
in
int
pop
push
fimull
mov
sub
jae
repz
xor
stc
or
xchg
and
pop
loope
not
and
mov
movsb
push
sti
mov
cwtl
mov
out
cmp
sti
cmc
bound
outsb
fcoms
clc
pmovmskb
and
repnz
dec
jnp
fisubrl
mov
xchg
dec
adcl
mov
test
movsl
fcmovbe
xchg
or
jge
leave
rclb
cltd
fsubrs
xor
add
jno
repz
mov
mov
pushf
mov
adcb
adc
repnz
push
lcall
jne
mov
ret
movsb
sub
pop
dec
jns
sub
cli
test
pop
ja
stc
mov
mov
cmp
adc
les
xlat
dec
fisttpl
nop
dec
addr16
xor
mov
or
pop
enter
fistl
mov
mov
jp
lds
mov
dec
fs
jae
shl
push
adc
dec
ss
cwtl
jnp
lret
jp
stc
leave
adc
stc
xor
clc
jo
out
fidivrl
pop
or
fldt
cli
rcrl
test
cmc
xor
mov
sti
out
aam
sbb
psubw
movsb
xlat
pop
andb
pop
rorb
or
xchg
enter
scas
jno
leave
call
push
or
push
fcomp
cmp
add
xchg
mov
push
mov
adc
dec
mov
cmp
in
jp
mov
and
xor
fistl
out
mov
add
sub
sbb
xor
sbb
fs
leave
les
jmp
imul
push
add
bound
sarb
pusha
mov
mov
je
xchg
pop
mov
adc
cli
sub
loope
and
sbb
nop
sbb
or
jp
movsb
popf
lcall
enter
insl
std
fcmovu
mov
or
fsubrs
jno
cli
fidivrs
stos
jnp
sahf
mov
pop
js
mov
leave
pop
xor
mov
jg
xor
and
loope
ja
xchg
daa
test
jmp
fisubrs
jmp
jle
sbb
arpl
sti
mov
mov
dec
dec
and
out
mov
sti
stos
mov
sbbb
mov
ret
clc
xchg
inc
int3
out
insl
std
fisubrl
testb
imul
and
push
clc
pop
add
cld
out
imul
popf
xor
mov
push
mov
add
arpl
fldenv
mov
push
jl
and
test
mov
rolb
jbe
inc
pop
mov
pop
fistpl
into
sub
sub
xchg
mov
xlat
pushf
inc
shlb
pop
fsubrs
cmc
int3
jle
lock
pushf
jmp
fwait
aaa
lods
sub
sub
add
lock
ret
push
adc
ljmp
sti
test
or
jnp
fs
push
cmc
xor
jmp
xchg
mov
aaa
pop
cmpsl
test
ret
mov
ljmp
pop
js
pop
sti
dec
sahf
xor
jae
inc
cmpsl
cld
jge
add
add
dec
mov
and
int3
or
xchg
or
orb
insl
cmp
pop
mov
enter
mov
dec
ret
and
test
ret
and
mov
jecxz
loope
std
or
or
and
dec
into
jne
inc
or
cltd
adc
aam
pop
xlat
and
jae
insb
jno
cmpsb
xchg
sub
lret
xchg
jno
mov
clc
lea
adc
mov
ret
sub
shl
popl
jmp
and
jl
and
jle
sti
xchg
pop
arpl
jnp
inc
adc
pop
mov
jnp
std
int3
mov
mov
jae
fldenv
xchg
add
pop
or
inc
out
daa
cmp
xchg
xchg
aaa
push
dec
cmpsl
stc
lcall
sub
add
fisubs
insb
mov
leave
sub
mov
sub
imul
sbb
cmp
rorl
pop
mov
out
lahf
dec
xchg
stos
call
test
sahf
add
add
pusha
leave
jle
iret
add
push
js
mov
sub
dec
cmpsb
test
xchg
jecxz
repnz
sub
mov
clc
mov
sub
mov
mov
rclb
add
xchg
inc
xor
stos
fldl
cmp
jnp
nop
lds
aam
scas
lret
cmpb
clc
mov
jp
cmp
adc
sbb
xor
adc
das
dec
aam
aaa
sbb
mov
js
aam
pop
test
sbb
stc
or
inc
mov
repnz
loope
sbb
out
add
mov
loopne
fs
out
add
or
and
mov
adc
add
push
fstps
push
pop
mov
pop
lds
pop
jecxz
enter
ret
adc
mov
cmp
pop
scas
adc
jp
jae
arpl
add
aam
sbb
dec
add
jg
push
mov
xlat
jecxz
filds
adc
enter
sbb
pop
cmp
sbb
fsubl
or
sahf
out
aas
cmp
xchg
fsubrl
outsl
in
in
or
mov
sbb
mov
or
push
mov
push
arpl
push
xchg
mov
sub
lods
shrl
jnp
mov
sub
lcall
loope
stos
push
int3
pop
mov
ficoms
xor
test
xchg
mov
xchg
push
out
add
xchg
dec
sub
in
addl
mov
add
cmp
fistps
scas
push
mov
cmpsb
insl
fldt
popf
push
sti
mov
push
js
mov
xchg
stos
fldcw
ret
bnd
fnsave
fcomip
add
add
frstor
cmpsb
push
jne
gs
iret
xchg
push
pop
maskmovq
notl
hlt
stc
mov
push
jns
orl
pop
std
or
sub
push
sti
xchg
sbb
mov
mov
fimull
cli
cmp
jbe
ds
sub
push
negl
xchg
and
mov
inc
and
xchg
in
scas
scas
xorl
iret
sub
ds
or
inc
mov
lock
lea
lods
push
sub
fistpll
aad
fimull
iret
stc
fsubs
hlt
pop
mov
inc
fdivs
testl
inc
jmp
in
xchg
push
jp
fcom
xor
outsb
out
cli
mov
jnp
or
test
or
adc
in
das
xor
psubw
rorb
mov
out
cmpsb
and
in
xchg
cmp
insl
movsl
ficompl
mov
or
add
or
rcll
stc
xchg
and
xchg
cmpsl
add
mov
jnp
mov
aad
inc
jmp
cli
aam
stc
mov
sbb
leave
cmp
jo
sti
add
inc
cmp
sub
xchg
fsubs
jns
ja
jg
add
test
bound
jle
xlat
sbbb
jecxz
xchg
dec
mov
sbb
mov
imul
xchg
or
jmp
loopne
xchg
sub
mov
jl
cmp
cmp
adc
mov
pushw
clc
xlat
popl
xor
mov
cmp
stos
repnz
adc
mov
test
mov
push
pushf
lods
je
in
in
mov
xchg
or
xor
or
fists
aas
repz
or
insb
pusha
lods
js
xor
lcall
xchg
arpl
in
clc
lcall
sub
pop
ret
leave
btc
aam
stos
dec
cmp
test
test
fldl
inc
adc
inc
das
jns
or
mov
mov
sar
cmp
sahf
mov
aas
jno
stos
cmp
xchg
inc
adc
out
pop
jae
jno
mov
or
or
cmpsb
xchg
xor
sar
stos
dec
out
mov
or
aas
dec
cmp
lds
add
loop
xchg
repz
xchg
out
inc
xchg
insb
idivl
fbstp
std
mov
mov
mov
insb
test
aam
jmp
incl
dec
jae
aas
mov
arpl
pop
fcomps
hlt
push
mov
mov
out
inc
jno
xchg
or
push
icebp
cmp
sub
test
es
pop
lea
movsl
test
or
pop
cmp
idiv
xchg
add
outsl
mov
leave
fisttps
mov
add
pop
scas
pop
sub
aaa
cwtl
and
fbstp
call
xchg
add
cmp
fidivrs
popf
cltd
ret
jnp
or
sahf
icebp
or
aaa
jecxz
stos
jnp
insb
es
repz
stc
stos
fstps
js
sub
mov
or
dec
nop
mov
cmpsb
and
fcoms
repnz
stos
pop
aas
add
add
mov
push
mov
mov
clc
shlb
int
xchg
xchg
push
jne
dec
or
imul
js
cmc
mov
sti
in
sub
imull
mov
js
mov
mov
cmp
jl
jne
shll
dec
add
push
sti
xchg
add
mov
fndisi(8087
mov
out
aam
or
or
add
inc
into
jle
aam
push
inc
jge
shlb
das
lahf
loopne
push
std
xchg
iret
xchg
insb
sub
imul
sahf
lods
rcr
push
mov
xchg
dec
push
xchg
mov
pop
cmp
aad
subb
call
sub
mov
out
cmp
xor
sbb
mov
mov
in
outsl
sbb
mov
pop
jno
xchg
lock
jnp
cmp
out
test
rorb
loope
push
sbb
mov
cmp
stc
lahf
ja
adc
pop
mov
and
bound
lcall
sub
in
lahf
notl
jge
out
or
or
pushf
sahf
xlat
ljmp
xor
ret
add
cltd
insl
scas
pushf
or
imul
xor
stos
pop
pop
repz
xchg
ret
testl
push
push
imul
mov
cwtl
clc
mov
cmp
or
sti
ss
jl
inc
aam
cmc
mov
pop
push
jnp
stos
lods
jb
mov
xlat
cwtl
sbb
jecxz
jno
xchg
popf
test
push
adc
push
xlat
cmp
xor
daa
and
mov
adc
push
sti
xchg
sbb
psubq
mov
cli
mov
xor
jno
dec
dec
rorl
insl
pop
pop
push
sarl
push
imulb
stc
dec
mov
cli
sbb
cli
dec
xchg
or
sbb
das
adcl
or
std
jno
stos
cmc
sbbb
ret
push
pop
or
mull
rcl
mov
cmc
mov
sub
and
push
push
jnp
pop
xchg
stc
pusha
rorb
lret
imul
ds
dec
or
ds
jp
mov
xor
negl
lods
sbb
mov
cli
sub
add
push
std
jnp
mov
dec
or
icebp
jmp
push
add
repnz
fadd
mov
cmp
mov
pop
mov
sbb
ret
cli
pushf
xchg
rorb
js
xchg
jmp
push
idivl
or
push
test
mov
inc
xchg
sub
not
adc
sub
ret
frstor
outsl
sbb
ficoml
pop
fadd
push
jle
jecxz
xor
call
jmp
and
cmpl
jae
sub
clc
jno
push
rcr
insl
movsl
ficoml
mov
xchg
mov
rclb
leave
sbb
pushf
arpl
pop
xchg
imul
leave
ds
push
stos
adc
sub
movsl
cmp
imul
xor
rorb
divl
imul
pop
iret
mov
sarl
inc
add
jl
mov
push
popf
or
inc
push
jnp
cld
mov
sub
lcall
ret
lret
hlt
lea
or
push
mov
xchg
lds
inc
cmp
jo
sbb
scas
xchg
fdivr
std
cmp
xchg
int
aad
movb
lret
push
aam
repz
add
or
mov
dec
out
mov
mov
les
sti
stos
add
int3
sbb
adc
mov
into
std
ret
mov
inc
xchg
pusha
ret
mov
lcall
sub
adc
clc
hlt
push
ret
adcl
xor
push
ret
mov
xor
jnp
and
stc
aam
icebp
or
mov
inc
xor
sahf
dec
test
or
stos
test
xchg
mov
sti
xchg
inc
mov
pop
jp
add
nop
hlt
push
mov
adc
scas
gs
movb
fildll
adc
and
or
stos
dec
pusha
insl
loope
sti
orb
cld
sti
adc
int3
jg
bound
arpl
ret
mov
sti
push
fsubrp
mov
inc
xor
fwait
push
xchg
stc
pushf
loopne
lea
sbb
or
xor
push
sti
fdivrs
xor
jo
inc
clc
out
cs
adc
mov
jecxz
push
repz
push
mov
cld
dec
test
imul
sti
std
add
je
les
or
inc
mov
imul
mov
js
popa
lret
dec
add
dec
mov
sub
jmp
jb
loope
mov
xor
test
scas
dec
lods
hlt
int3
or
imul
sbb
cmp
jge
xchg
sbb
imul
or
sti
xor
or
imul
adc
ret
jne
sub
fwait
sub
lret
repnz
sub
movsb
into
add
sub
je
jmp
hlt
data16
sti
shlb
loopne
sti
jae
and
mov
push
mov
xchg
dec
add
pop
add
mov
js
in
hlt
cld
and
cmp
xchg
sbb
out
adc
lahf
sti
out
adc
sub
xchg
ffreep
fwait
mov
inc
pop
popf
sti
mov
mov
adc
negl
dec
test
stos
inc
sbb
lea
addr16
aad
fiaddl
sti
arpl
lods
sub
mov
push
xor
fnstcw
and
or
cmp
jne
lahf
lcall
aad
jp
mov
xor
ja
push
xor
mov
adc
cmp
xchg
sti
and
or
push
inc
sti
scas
les
mov
adc
push
xor
cli
lret
loope
insl
fnstenv
jo
sti
xor
mov
jns
int3
addr16
pushf
mov
adc
and
cs
stc
cmp
sub
pop
shr
movsb
and
mov
shrl
or
sti
lret
jg
repz
add
pop
stos
dec
and
xchg
in
jns
sbb
sti
sbb
mov
sahf
iret
dec
mov
loope
and
xchg
test
dec
jnp
jp
sti
pushf
leave
stc
sbb
add
lock
mov
movsl
into
cli
popa
in
je
shl
jp
xchg
sar
pop
and
into
dec
mov
dec
addr16
aam
lcall
xor
xlat
inc
mov
dec
arpl
push
cmpsl
sub
dec
cld
add
sti
cmp
sub
or
sti
movsb
mov
pushf
cmp
ds
jae
and
jnp
mov
cli
sub
fnstsw
sti
lret
sbb
inc
and
adc
fwait
mov
lods
insb
cmp
adc
hlt
push
xor
fsubs
mov
insl
or
jge
daa
ss
mov
xor
dec
adc
cmpsb
cmp
imul
xchg
jg
jnp
xor
daa
xchg
fcmovnbe
dec
mov
inc
sti
add
cltd
ret
mov
mov
xchg
xchg
aad
neg
cli
cmp
scas
mov
mov
pop
mov
nop
push
xchg
push
sub
ja
movsb
lock
jae
mov
push
repz
clc
testl
cmc
dec
sti
xor
or
lods
xchg
aam
fcomps
sti
out
mov
pop
loopne
jge
cmp
das
cli
cli
inc
mov
outsl
cmpsb
fwait
call
or
rol
fimull
into
pop
jg
ds
push
icebp
sti
pop
and
cmp
sti
fildll
sbb
mov
adc
xchg
jp
jb
stos
sti
clc
imul
lds
and
scas
mov
sti
ret
mov
sti
mov
lods
mov
sti
fld
add
sbb
ss
jp
and
ret
stc
cwtl
nop
xchg
sti
and
jl
sub
mov
popf
out
mov
stc
lds
sti
movsl
mov
lock
ficomps
pop
sbb
testl
lahf
sti
add
sub
push
push
ffreep
dec
inc
cmpb
mov
daa
rcr
sbb
stos
push
sti
mov
mov
jne
sti
out
jmp
rorb
mov
mov
call
pop
sub
sti
jae
data16
aad
int
sar
adc
sti
je
ja
push
or
sbb
cmpsb
call
pop
fldcw
pop
negl
xchg
push
and
cmp
fsubrl
pop
pop
ds
sahf
sbb
jmp
push
cli
fbstp
cli
cltd
es
inc
clc
xlat
pop
mov
pop
mov
int3
pop
imul
mov
aas
stos
dec
in
pop
jecxz
in
sub
sbb
stos
stos
repnz
shlb
outsl
loopne
mov
mov
xlat
sub
test
jne
js
scas
gs
xchg
mov
int
orl
mov
gs
sbb
and
mov
sbb
incb
sbb
sbb
dec
popf
outsl
iret
das
divl
sarl
icebp
adc
std
sahf
mov
or
mov
insl
pop
aad
xlat
icebp
dec
movsl
imul
sti
push
jp
jnp
cmp
dec
push
sti
or
dec
or
clc
jle
xorl
int
repnz
fadds
xorl
mov
sbb
cmp
and
xorb
mov
add
push
xchg
sti
inc
sub
or
cmp
pop
fisubl
jmp
vpsubq
fistpl
adc
mov
sahf
jb
push
sbb
or
je
cs
fwait
mov
mov
pop
int
adc
dec
sub
lods
mov
and
les
bound
sti
popf
repnz
sbb
xchg
fbld
int3
loop
and
cmp
dec
xchg
push
mov
std
dec
mov
dec
pop
add
mov
dec
push
lcall
inc
int
or
mov
sbb
and
mov
lods
sbb
mov
std
enter
cs
xlat
xor
or
test
pop
xlat
mov
lods
lahf
mov
jg
add
pop
imul
clc
cmp
add
loope
dec
in
idivl
mov
loope
shr
daa
cli
mov
mov
lret
ret
xor
arpl
pop
or
lea
cld
adc
jbe
sub
mov
pusha
popf
cmpsl
inc
xchg
test
or
or
lcall
jns
not
pusha
xchg
mov
int3
jg
lea
cld
sub
xchg
popa
mov
ja
scas
aam
mov
jl
cwtl
ficompl
push
test
js
packssdw
lea
popf
int3
repnz
jg,pt
cli
pop
ret
lcall
mov
mov
push
xchg
bound
rcrl
les
imulb
cmp
arpl
std
or
mov
rorl
test
lods
push
mov
add
mov
cmp
rorl
out
xchg
add
lods
shrw
mov
adc
in
push
jns
and
cld
fdivrs
jnp
lea
mov
and
fisttpll
lcall
pop
mov
loopne
mov
mov
out
fwait
push
xor
test
jno
pop
test
jmp
repnz
cwtl
mov
dec
dec
mov
push
mov
outsb
jbe
or
cli
or
cmp
aam
shrl
mov
js
sarl
rcrb
test
dec
sbb
cmpsb
mov
mov
div
and
jnp
push
cmp
leave
ljmp
out
sbb
and
inc
or
jb
or
pop
xor
stc
imul
and
fiadds
pop
fistpl
mov
repnz
jg
cli
or
mov
xchg
inc
stos
call
movlps
js
jmp
add
pop
stos
dec
mov
add
daa
shrl
sbb
sub
mov
cli
mov
sub
fs
pop
repnz
int
pop
mov
pop
decl
jp
mov
scas
push
push
cmp
inc
inc
and
adc
rcl
std
adcb
fcmovnu
jno
xor
add
cmc
mov
cmpsb
notl
mov
jnp
rcr
cwtl
adcl
fwait
subl
pop
cmp
mov
pusha
inc
neg
ror
pop
jb
bound
les
xchg
arpl
pop
stos
push
sti
add
pop
rorb
push
dec
pop
lods
xchg
xchg
inc
or
fwait
repnz
sub
or
rcl
in
jnp
iret
inc
cltd
push
xor
fwait
js
loope
icebp
in
sub
xor
pop
fsubrs
cmp
jl
enter
push
adc
js
psubq
icebp
scas
enter
test
push
jp
fistpll
mov
sti
les
sbb
push
or
idivl
cld
leave
xchg
rcrb
push
pop
xchg
mov
inc
into
in
mov
testl
lret
xchg
fs
pop
std
sti
loop
scas
push
xor
inc
cmp
pop
sti
push
fidivs
scas
into
sti
shr
das
imul
sti
mov
pop
stos
fstp
stc
pop
pushf
adc
push
daa
test
and
jp
push
mov
roll
dec
sti
fistpl
imul
bound
and
orb
sti
add
sbb
fsts
sti
fwait
out
fstl
jbe
sub
lret
call
sbb
inc
sar
push
or
add
xor
test
es
sti
add
add
mov
nop
cli
xchg
out
push
and
inc
xchg
stc
popl
sti
mov
pmullw
enter
push
cmp
negl
fimuls
lock
lods
push
js
push
std
stos
mov
test
mov
pushf
fistps
dec
mov
mov
testl
and
sub
in
stos
testl
bound
ja
jmp
insl
sti
jmp
in
adc
push
inc
lods
add
gs
inc
es
je
test
out
jb
mov
mov
sbb
aaa
aas
sti
push
div
dec
dec
fildl
jecxz
push
mov
rclb
loopne
add
dec
stos
mov
cmc
ds
xchg
and
testl
cmp
pop
lds
sti
xor
fcmovu
jecxz
pushl
cmp
cmpsb
gs
stos
adcl
add
dec
stc
mov
sbb
sub
mov
das
sbb
and
sti
lahf
movsb
fcoms
lret
sarb
in
enter
daa
fmull
dec
mov
push
jnp
jo
mov
mov
rolb
je
xchg
sbb
into
sti
fnstenv
ss
cmp
stc
and
or
fstl
sub
int
xor
lods
sahf
clc
lea
mov
sub
xchg
lods
adc
dec
shr
xchg
je
sarl
cmp
sti
mov
stc
mov
mov
push
js
sti
push
add
inc
pop
sbb
adc
xchg
sti
or
xchg
cwtl
inc
fwait
sub
stos
cld
dec
cmc
jecxz
testl
dec
testl
pop
lret
sti
mov
jp
sub
mov
addl
and
push
das
sub
cli
mov
aaa
stos
nop
imul
jmp
push
xchg
push
pusha
xchg
lcall
jno
es
int3
inc
leave
lret
sti
push
int
popa
sub
cmp
sti
out
lret
les
mov
jp
shll
sti
xchg
push
loopne
jecxz
loop
stos
push
popf
jecxz
out
insl
iret
xor
bnd
xlat
inc
pop
iret
jecxz
mov
sbb
sbb
mov
mov
cmp
or
pop
cld
xor
xor
out
idiv
aas
and
and
cltd
mov
mov
mov
sti
int3
cmp
jno
sub
cmp
pop
mov
popf
sti
movsb
pusha
sbb
mov
mov
add
xor
outsb
and
mov
std
lret
sti
pop
sub
xchg
sti
mov
and
stos
shl
sti
hlt
mov
add
xor
repz
sbb
imul
sti
jbe
cmp
or
dec
sti
into
test
stos
and
jbe
cltd
les
mov
dec
or
add
mov
fcmovb
stos
fdivr
stc
sti
dec
jmp
dec
push
add
cwtl
add
aam
sbb
xchg
test
sub
clc
add
pop
fs
dec
sarl
sub
xorl
xchg
mov
pop
mov
js
jmp
fwait
int
cs
xor
fs
xchg
cli
int
mov
cmp
cmpsl
insl
inc
mov
arpl
mov
xlat
notl
sbb
je
arpl
inc
push
popf
in
imul
adc
gs
cmp
bnd
ljmp
lds
in
or
push
sbb
dec
inc
repz
cmp
mov
inc
dec
mull
adc
sub
xchg
out
jp
jnp
pushf
fidivrl
xchg
sub
sti
fisubrl
fstps
rolb
jnp
imul
sub
mov
mov
lret
and
push
xchg
mov
dec
jmp
mov
lcall
popf
sarb
mov
stos
mov
mov
es
cwtl
pushf
cmp
repnz
js
ljmp
mov
jbe
hlt
cmp
push
js
mov
cli
out
xlat
adc
lods
out
sub
jle
rcrb
jg
inc
not
push
int
rcrl
rolb
popf
xchg
repnz
cmp
or
ret
pop
push
lods
test
xor
pop
inc
mulb
push
pop
push
cmp
cmp
mov
rolb
inc
andb
es
mull
outsl
jnp
arpl
jne
es
aas
xchg
mov
clc
sbb
testl
insb
lcall
push
jmp
pusha
sub
dec
test
dec
outsl
aas
push
jb
inc
mov
hlt
pop
mov
fidivl
pop
xor
inc
mov
adc
push
or
inc
inc
fwait
stc
push
cmp
and
mov
outsb
sti
divb
aad
in
lcall
mov
and
and
outsl
mov
add
cli
lea
add
adc
dec
mov
fmul
sbb
or
xchg
loope
sbb
or
cmp
bnd
and
fists
cmp
pop
cmp
lds
add
pop
adc
gs
int
dec
xchg
inc
or
add
aam
cmp
xchg
dec
shrl
enter
aaa
jb
cmp
dec
lret
pop
jo
xchg
je
nop
add
pop
aad
stos
sub
dec
xlat
jae
sarb
rolb
fnstenv
andb
fisttpll
orl
pushf
cmpsl
cmp
cmp
or
cmp
imul
in
pop
pop
lahf
mov
xchg
jnp
push
in
test
daa
sbb
out
jne
movsl
add
or
cmp
test
rol
pop
inc
xlat
fdivrl
jae
mov
jge
sub
xchg
insl
clc
pusha
loop
ja
rcrl
cmpsl
adc
push
and
fwait
cmpl
cmp
add
mov
stc
cmpsl
pusha
cmp
int
or
jp
cltd
aam
cli
lret
cmp
pop
rolb
ret
dec
dec
jb
sbb
repz
shlb
imul
es
sub
js
repnz
pop
fists
jmp
inc
pop
das
sbb
std
out
enter
sbb
insb
xlat
out
mov
jnp
shll
cltd
imul
jmp
shlb
testb
sbb
add
mov
fs
bound
jmp
and
pop
cmc
add
mov
push
sbb
les
inc
lods
in
aad
call
push
movsl
outsb
scas
add
mov
jno
sti
jnp
flds
repz
pop
inc
mov
cmpsb
mov
movsb
add
ficompl
loopne
mov
add
mov
mov
sub
push
pop
adc
or
push
push
pop
test
sub
jb
or
repnz
mov
aam
jne
inc
icebp
cmp
or
and
sahf
xchg
mov
or
fwait
inc
and
and
mov
aad
mov
ret
push
fildl
in
push
cmp
push
aaa
jns
mov
mov
ret
iret
push
mov
and
fistps
pop
xorl
adc
push
leave
and
cmp
xor
inc
inc
jle
jg
add
stos
xchg
jns
pop
int
push
test
xor
add
mov
aad
cmp
mov
xor
stos
xor
cmp
push
icebp
imul
sub
mov
fisubrs
imul
int
imul
pushf
push
imul
xchg
and
lret
ss
dec
jnp
lds
add
cmp
flds
hlt
faddl
hlt
sub
jle
in
rcrb
sub
xor
cmp
mov
fs
and
or
bound
insl
jbe
aam
pop
pop
xor
cmp
lods
scas
sub
push
imul
mov
jo
cmp
bound
jmp
lret
repnz
sub
scas
cmc
daa
dec
adc
inc
cld
in
or
dec
jmp
pop
and
hlt
in
jns
cmp
jmp
mov
push
xchg
mov
sub
imul
pop
dec
and
orl
xor
jns
jns
cmp
scas
jmp
test
sbb
rcll
rolb
mov
pop
std
dec
outsl
inc
int3
push
sti
jo
insl
inc
pop
lods
ret
push
or
ss
cmp
fsubrs
pop
jo
inc
pop
addb
fcoml
clc
rorl
int
cmp
clc
pop
push
leave
flds
inc
pop
inc
jo
rclb
lock
pop
dec
or
stc
js
sti
je
push
out
add
pop
add
xchg
cli
lods
cwtl
sti
out
out
inc
fnstsw
lahf
ljmp
pop
repnz
xor
sti
mov
and
mov
clc
dec
push
out
mov
imul
sti
jle
cmpb
adc
pop
sti
xor
and
sti
xchg
xchg
lcall
lret
rcrb
jbe,pt
cmp
jmp
push
pushl
js
into
inc
and
inc
lret
cli
hlt
push
nop
sti
shl
aaa
push
cmp
jp
inc
mov
inc
and
xchg
dec
negl
and
mov
adc
dec
dec
sub
cli
subl
jbe
dec
fldenv
and
sti
lds
mov
sbb
push
adc
in
lcall
jno
sti
add
or
pop
dec
mov
sbb
dec
stos
clc
repnz
push
xchg
std
fistps
in
cmpsl
jo
add
out
mov
cld
ret
sti
jae
dec
sbb
cmp
addr16
or
out
or
fcmovbe
insl
imul
out
pop
sahf
outsl
adc
pop
aad
pop
add
lahf
mov
mov
sti
xlat
cltd
inc
push
loopne
lret
jp
and
push
out
scas
or
outsl
mov
dec
jb
inc
xor
lods
dec
hlt
rcrl
cld
out
imul
mov
movsl
fnstenv
call
sti
push
fbstp
es
mov
jle
dec
sub
pop
mov
mov
push
into
sti
xchg
insb
add
jbe
push
add
pop
cli
jns
xor
sar
ret
stc
dec
scas
popa
sti
and
stos
arpl
fsts
in
test
js
add
pop
add
or
xor
adc
fimuls
sar
cmp
jnp
lahf
lods
repz
repnz
int
inc
sub
popl
pusha
out
pop
stc
sbb
ds
lock
inc
cmpsl
mov
shll
jl
sub
cmp
dec
arpl
notl
xorb
icebp
imul
lds
push
test
cmp
inc
clc
out
mov
movsb
sti
jb
pop
adc
addl
fists
fidivl
ds
cmp
into
adc
pop
pop
pop
cmpsl
push
inc
stc
inc
ds
mov
fldl
cmp
sti
sbb
jo
push
insb
sbb
dec
sub
mov
test
and
fwait
sbb
lods
lcall
add
mov
cmp
pop
sti
lahf
lret
add
cltd
adc
add
cmpsb
idivl
sbb
or
daa
ss
xchg
sti
enter
aaa
movsl
inc
mov
adc
or
xchg
cmp
fwait
adc
sti
cmp
imul
notl
fdivs
mov
int
mov
nop
shl
insl
jne
movsb
sti
test
insb
outsb
jb
lods
or
fildl
mov
pop
sub
movsb
rcrb
fwait
cmp
jecxz
iret
jmp
test
sti
loope
inc
mov
mov
sti
jns
sub
lret
sti
sar
outsb
mov
mov
lcall
dec
sti
xchg
ss
sub
mov
aaa
xor
dec
mov
and
movsb
sti
negb
stos
ds
pop
cmp
or
sub
mov
divl
sub
jmp
outsl
aas
popa
rolb
ds
lods
fstps
cli
sti
lock
cmpsb
adc
int
and
xor
jo
sti
fisttpl
xchg
jae
data16
push
sub
jo
lods
test
sti
fstl
out
addr16
outsb
data16
in
sbb
and
sti
int3
fmuls
imul
notb
shrb
jmp
dec
sbb
jle
and
sti
mov
test
add
out
mov
cltd
nop
sti
lcall
push
filds
js
push
out
mov
cmp
iret
sti
xchg
add
dec
sti
rcrl
lods
and
jl
push
add
and
mov
xorl
lods
int3
lcall
rolb
adc
ss
jp
xchg
mov
push
jmp
int
sbb
fbld
jns
divb
xchg
les
add
arpl
mov
or
mov
cmpsl
add
jmp
sbb
sub
sahf
cmpsb
inc
movsb
adc
or
jnp
pop
xchg
mov
js
sbb
fs
test
cli
les
repz
aaa
add
cmpl
sbb
cmp
popa
xchg
fwait
dec
xor
cs
cmpsb
sub
mov
scas
aad
inc
testl
add
sti
cmp
ficomps
fsubs
sub
sti
lods
or
sub
inc
test
sub
cltd
daa
push
fsubrp
mov
pop
cmc
pop
pop
js
push
inc
jbe
push
movsb
cmp
cmpsb
jg
and
leave
xlat
jnp
cltd
int3
push
mov
sti
sahf
jo
xor
lahf
sti
rolb
enter
push
xchg
sti
test
cltd
aas
add
fxtract
jns
xor
and
jo
sub
fsubl
cmp
sar
fnstsw
nop
cltd
mov
add
cmp
jmp
ds
xchg
sti
in
dec
in
stos
mov
outsb
mov
repz
in
and
jo
xchg
jecxz
jmp
or
sti
pop
movsl
add
push
add
cmpb
jo
or
push
idiv
ss
push
out
jecxz
pop
aad
out
jns
adc
pop
jle
data16
jbe
cmp
movsb
sti
xchg
cmp
push
cwtl
pop
imull
jne
xor
pop
sti
fisttps
mov
mov
add
subl
mov
push
lret
mov
sti
jbe
addr16
adc
jle
jmp
inc
das
mov
out
push
out
imul
sti
les
rolb
stos
stc
xchg
fcompl
cmp
aaa
jns
xchg
mov
add
inc
and
sub
cli
das
loope
pop
mov
fisttps
fwait
and
incl
nop
pop
sti
pop
aad
mov
pop
push
inc
sti
test
rclb
into
or
push
pop
mov
jns
cmpsb
adcl
adc
sti
xlat
aas
cmc
pusha
mov
xor
mov
push
cmp
adc
insl
sti
mov
xor
or
pop
sti
test
or
sti
sbb
cs
mov
into
sub
imul
les
into
xchg
fisubrs
sti
jns
jp
push
enter
push
jno
dec
dec
inc
pusha
jg
dec
icebp
or
int3
adc
out
lods
shlb
push
xchg
push
enter
pop
and
out
gs
stos
mov
inc
mov
les
fcoms
bound
sbb
into
pop
sti
aaa
mov
ret
fwait
sti
adc
push
or
divl
mov
sti
mov
mov
sar
xchg
movhps
jmp
fucomp
jmp
or
sbb
mov
sbb
xchg
js
jecxz
imul
test
sub
mov
mov
add
mov
sbb
push
add
pop
subb
pop
xchg
jmp
repnz
sub
mov
outsl
cmp
movsl
and
push
test
pop
mov
lds
test
and
pushf
xchg
mov
shl
aas
inc
out
test
clc
sti
dec
mov
loope
sub
jp
pop
test
inc
sti
hlt
jnp
sbb
js
mov
rcl
adc
xchg
loopne
leave
sub
clc
pop
and
mov
cwtl
sti
jno
xor
mov
sti
jle
mov
add
aam
sti
and
lret
mov
mov
sti
pop
or
stos
into
sti
xorl
dec
popa
pop
sti
xchg
movsl
xorb
jg
and
sub
or
mov
lcall
fdivr
into
jge
dec
jmp
pop
sub
mov
ret
cmpsb
xchg
loope
ss
sbb
call
xlat
sahf
xchg
dec
out
cmp
adcl
dec
mov
and
dec
daa
std
mov
push
mov
add
push
imul
stc
pushl
pushf
or
sti
and
in
xchg
adc
sbb
fs
cmp
mov
sti
cltd
push
pop
stos
xor
andl
pop
popa
adc
push
lahf
jno
xchg
xchg
sbb
test
loope
add
or
dec
test
rorl
mov
ret
jl
divl
ljmp
adcl
int3
or
xor
sbb
addl
sti
rolb
lahf
mov
and
pushf
or
sbb
cmpsb
push
cmc
and
nop
arpl
dec
sbb
xchg
bound
lock
inc
ss
sbb
idivl
sub
add
mov
arpl
ss
or
aad
push
stos
hlt
push
xchg
and
xor
mov
insb
fs
loope
ja
icebp
inc
push
sbb
orl
cmovno
mov
pop
ljmp
test
std
mov
and
or
adc
jge
xchg
mov
je
idiv
mov
mov
cmp
jle
jne
movsl
popf
pop
push
mov
add
icebp
cltd
xlat
dec
dec
lock
dec
cmp
int3
or
incl
jae
fcmovne
js
add
xchg
ja
mov
or
pop
lods
mov
or
xor
testb
mov
xor
add
ret
cmp
push
out
scas
xchg
addr16
sti
movsb
or
or
push
shr
sti
es
rorl
ret
dec
cs
icebp
scas
sub
sub
or
push
je
dec
es
mov
imul
sti
inc
xor
fs
push
mov
test
xchg
push
rcll
leave
inc
dec
xchg
into
iret
and
sbb
jp
or
cmp
sti
sub
cwtl
adc
xchg
lods
call
stc
jb
push
lods
jae
dec
in
push
add
mov
out
std
jg
or
dec
push
icebp
sti
ss
or
cmp
test
jmp
sbb
fsubrs
sbb
dec
adc
xor
and
es
mov
pop
mov
rsqrtps
stc
stos
push
out
stc
jle
incl
xchg
cmp
outsl
and
xchg
sti
scas
dec
push
sub
int3
mov
sti
push
or
jae
sbb
test
xor
insl
and
mov
or
pop
dec
std
ret
xlat
pushf
loop
inc
das
mov
pop
mov
jns
pop
std
sbb
sti
sti
pop
add
lds
inc
fsubrs
shl
cmp
or
mov
push
sti
cmp
ss
fldcw
xor
idivb
push
add
jmp
or
add
loop
insb
cltd
testl
rcll
cmpsb
jae
jnp
dec
out
int
bound
test
repz
test
int3
push
out
jne
sub
or
dec
adc
and
jmp
out
mov
mov
ret
jmp
mov
jecxz
inc
std
loopne
mov
sub
or
add
outsl
and
jle
sarb
inc
pop
mov
pop
sbb
pop
fadd
pop
cli
in
in
pop
push
leave
cmp
rclb
les
clc
call
ret
notb
mov
inc
fcmovb
dec
mov
daa
mov
cmp
int3
jnp
jne
adc
arpl
imul
dec
or
pop
adc
rolb
pushf
sbb
js
mov
fisttps
out
dec
fisubl
jns
push
mov
sti
dec
pop
cmc
xor
dec
loopne
lods
movsl
sbb
ljmp
aad
mov
in
bound
and
adc
push
es
sarb
cmp
ss
xchg
cli
push
js
clc
jnp
into
mov
sbb
mov
cltd
ljmp
out
and
xchg
dec
cmp
add
aaa
roll
cmpsb
jns
push
lret
sbb
lret
xor
callw
inc
mov
dec
div
out
test
insl
inc
cmpl
lret
sbb
push
ret
xchg
jl
negb
cmp
fsts
mulb
or
mov
jl
enter
je
mov
jmp
xchg
xor
sub
stos
xchg
jae
mov
popa
jne
loopne
orb
pop
pop
subb
xor
mov
add
pop
xchg
repnz
mov
mov
pop
xlat
mov
stos
fistl
push
rorb
pusha
cmp
pop
mov
jp
test
pop
nop
mov
test
xor
int3
push
adc
lret
in
roll
cmpsb
repz
pop
clc
insl
mov
mov
pmullw
xchg
adc
lods
lods
cwtl
mov
or
push
insb
scas
mov
clc
clc
pop
daa
inc
sar
cli
jg
dec
or
dec
push
dec
jo
subb
aaa
cmp
rcrb
pop
mov
cmp
std
or
dec
jbe
int
dec
out
dec
test
cmpsb
xchg
xor
add
push
pop
xchg
or
sbb
sbb
push
js
dec
push
fldcw
or
add
out
cmp
hlt
rcrb
pop
mov
lds
cmp
xchg
dec
mov
xchg
sarl
ljmp
and
or
mov
push
adcb
or
push
mov
aam
sub
mov
movb
cmp
pop
test
insl
pop
jecxz
mov
push
dec
push
je
dec
popf
icebp
sbb
or
pop
out
push
out
loopne
xor
pop
jne
gs
jno
or
pop
inc
cs
or
sub
sti
adc
mov
sbb
test
fcomi
jno
adc
dec
loop
dec
jp
test
and
js
cli
push
test
cltd
or
jl
out
push
lret
and
test
repz
and
inc
mov
fiadds
or
jns
addr16
outsl
test
inc
jno
test
adc
xor
and
sbb
stc
push
mov
in
repnz
cmp
out
fcmovnbe
inc
push
and
add
stc
das
push
sti
cmp
jmp
sbb
aas
sbb
out
pusha
addr16
sti
scas
or
xchg
cld
sbb
sub
into
inc
jge
cmp
outsl
stc
sti
sbb
lock
fbstp
pop
in
adc
repz
mov
cmp
stos
jl
mov
add
cmp
mov
mov
jg
out
push
inc
pop
rcrb
xlat
out
pop
xlat
dec
jb
or
pop
enter
dec
inc
iret
cmpsl
mov
in
repnz
mov
fwait
adc
mov
sti
jae
mov
pop
shll
inc
lea
inc
inc
push
xor
xchg
mov
fistpll
or
mov
loope
pop
rol
clc
sti
fcmovbe
cs
fstpl
popl
jmp
adc
ljmp
fs
loop
aam
out
pop
pop
add
adc
pop
fildll
call
hlt
movsl
or
inc
sti
lcall
outsb
sti
mov
in
leave
call
push
arpl
mov
adc
cmp
mov
sti
out
aam
scas
inc
sbb
fucom
das
sub
jecxz
sbb
dec
cmpsl
addr16
sti
aad
test
repnz
inc
mov
adcb
lds
nop
ficomps
stc
and
mov
sti
xchg
cli
inc
dec
mov
sahf
idiv
pop
xor
dec
sti
mov
pop
lds
sti
outsl
mov
mov
call
push
dec
lret
mov
sti
xor
sarb
mov
dec
bnd
dec
testl
scas
jo
jns
mov
inc
pop
shll
sti
sbb
stc
idivl
inc
cld
ljmp
clc
adc
or
mov
jns
push
popa
sbb
and
fwait
arpl
ds
nop
aas
sti
leave
popf
test
xor
and
mov
loopne
out
push
outsl
adcl
mov
jno
int3
ss
adc
or
rcll
aad
jmp
mov
push
int3
mov
push
pop
add
sti
or
ja
jbe
push
push
xchg
lods
pop
clc
sti
adc
lea
sti
cmpsb
std
cmp
jne
iret
jno
cmp
andb
sub
stc
stos
mov
sbbb
add
stos
push
xchg
cwtl
out
dec
add
rol
sti
scas
push
adc
shrl
inc
ljmp
in
mov
add
and
jmp
jg
cs
jmp
sti
jo
adc
sti
push
xchg
rorb
mov
dec
rorb
insb
sti
xchg
in
push
pop
adc
sti
cmpl
pop
in
decw
lock
cmp
push
movsl
adc
pop
pop
cmpsl
xor
sti
inc
or
sub
jae
out
push
and
or
insl
jp
imul
scas
fistpll
pop
inc
cli
sbb
testl
jp
js
add
or
xor
pop
sbb
cmp
cs
arpl
aad
mov
push
lods
nop
call
iret
cltd
push
insb
dec
stc
pop
dec
hlt
sti
sub
shll
sbb
mov
jno
and
xchg
dec
mov
sahf
lahf
push
scas
stc
inc
int
jp
or
out
mov
add
xor
test
idivl
fisubs
or
inc
ds
pop
call
clc
jge
aad
or
sti
lcall
dec
negl
and
aad
jns
shrb
xlat
testl
arpl
loopne
mov
int
lods
xor
fwait
addl
and
aad
mov
aas
jno
outsl
lahf
sti
mov
stos
fidivrl
pop
je
adc
jg
mov
sti
fdivl
pop
js
sub
sti
xor
into
imul
sti
xrelease
sub
push
out
testl
and
fidivrl
lcall
ja
lret
sti
pop
add
dec
and
addr16
int3
movsb
je
mov
aad
cmpsb
dec
fmul
sub
testb
cli
sub
clc
push
jle
into
mov
popa
or
dec
dec
push
fsubrs
sti
or
out
pop
xchg
idivl
mov
and
jnp
sti
loop
loopne
test
fcomps
scas
enter
sti
push
lods
imul
dec
cs
leave
inc
test
aam
mov
shlb
push
sti
or
pop
fldt
test
sti
sbb
in
sti
and
testl
mov
cmp
sti
push
pop
xchg
sti
pop
pmuludq
icebp
adc
mov
lcall
inc
mov
add
xor
in
mov
out
rcr
lahf
inc
cmp
adc
cmp
push
xor
pop
out
push
or
sti
xor
call
sti
mov
movsb
xchg
pop
stc
adc
sti
mov
sbb
jle
imul
mov
in
mov
pop
mov
or
out
andb
adc
gs
sti
pop
test
aam
push
pop
and
call
rclb
stos
adc
test
push
lock
imull
mov
dec
les
sti
aam
fstpt
mov
sti
xchg
dec
adc
sti
push
cmp
jecxz
jb
je
mov
mov
das
mov
ss
in
shlb
sbb
and
mov
lret
jae
adc
shrl
leave
mov
pop
stos
std
and
inc
xlat
mov
lret
repz
outsb
popf
pop
cmp
dec
add
cli
dec
and
cltd
xchg
sti
add
in
cmpsb
xchg
popf
xor
mov
add
sbb
pop
adc
mov
mov
sti
push
hlt
xchg
fs
xor
out
movsb
fldenv
jbe
xchg
ljmp
lods
cmp
mov
mul
ss
fsubrs
lahf
gs
stc
mov
in
out
clc
push
dec
jne
fstpt
pop
lahf
adc
jl
fimull
pop
mov
sbb
push
hlt
sti
xchg
insl
jle
aaa
fdivl
adc
jmp
sub
mov
cmp
pop
sti
stos
or
push
loope
stos
jle
lock
cwtl
cli
inc
mov
incl
or
dec
cwtl
inc
sti
inc
std
mov
enter
sti
icebp
xor
pop
dec
out
aas
bound
test
cli
xchg
mov
div
adcl
aas
lret
roll
jns
or
sub
inc
mov
or
pop
out
dec
inc
sbb
dec
mov
cmp
jmp
lret
mov
lea
lret
pop
fsubrl
sti
xlat
imul
jecxz
inc
mov
arpl
js
jl
dec
sti
lret
cmp
repz
pop
sti
into
mov
push
push
popa
and
test
xorb
popf
xor
jmp
imul
mov
ret
shrl
mov
xor
dec
shlb
aaa
sti
inc
test
sbb
sti
mov
lods
arpl
mov
xchg
mov
cmp
jecxz
ret
js
les
sti
xorl
test
mov
mov
sti
xchg
ret
stc
jmp
sti
inc
fisttps
or
int3
decl
inc
mov
sti
mov
scas
add
fimull
jbe
add
pop
sar
leave
not
or
cmpl
mov
cmp
sub
sahf
negl
lret
sti
or
das
adc
test
sti
inc
jmp
sub
inc
fcomp
sti
adc
es
push
pop
and
pop
enter
cmp
mov
xchg
jb
add
mov
psubq
mov
jno
sti
sbb
fistpl
mov
push
mov
xlat
xchg
daa
stos
in
out
test
sbb
sti
inc
jno
and
jl
hlt
inc
fdivrl
dec
sbb
xchg
das
xor
xchg
dec
xchg
ret
jne
daa
sti
das
add
adc
stc
and
pop
sar
add
in
mov
fs
fstps
mov
pop
cmp
sti
fst
fsubrl
add
mov
or
arpl
inc
enter
mov
in
dec
inc
leave
adc
loop
idivl
push
sbb
mov
lods
pusha
cltd
jbe
jle
call
es
hlt
cld
push
mov
nop
sahf
clc
push
lcall
in
xchg
mov
daa
into
mov
pusha
test
push
neg
adc
arpl
mov
pop
lods
in
inc
lea
push
dec
and
xchg
push
push
fwait
mov
aam
sbb
je
in
stc
popf
cmp
xchg
enter
int3
sti
push
cld
add
js
pusha
mov
jle
xchg
xchg
frstor
insb
fidivs
cwtl
jmp
jae
lds
xchg
ljmp
sti
pop
in
hlt
sbb
fcompl
outsl
adc
inc
and
sub
cmpsl
sub
gs
pop
sti
pop
mov
lret
iret
jle
cmp
gs
and
push
pop
test
cmpsb
mov
out
test
loope
fs
rorl
test
sub
pop
mull
mov
stc
mov
je
mov
mov
mov
cltd
push
xchg
mov
sub
fisubrl
jecxz
mov
loopne
push
sbb
cltd
xchg
pop
xor
jp
or
cmp
out
loop
pop
cmpsl
fisttpll
xchg
std
scas
imul
in
daa
lock
aaa
notb
mov
jle
jo
testb
sar
ljmp
sarl
cmp
add
pop
hlt
in
and
scas
lcall
mov
lret
pop
cmp
push
lret
and
inc
repz
in
shl
jb
push
mov
inc
hlt
mov
push
xor
fcomps
pop
jns
sbb
in
or
imul
fildl
mov
jns
cmpsb
mov
xchg
popf
mov
js
sbb
pop
fcoms
pop
cmp
cmp
in
pop
mov
cmp
fdivrs
cmp
jle
jl
leave
pop
repnz
mov
mov
out
sahf
imul
sti
popf
jmp
xor
cmp
test
rcl
mov
and
movsb
cwtl
aad
negl
mov
inc
sbb
xor
xchg
jbe
lret
sub
ds
or
andb
out
xlat
cli
jmp
in
push
and
inc
jge
lds
js
aad
fildl
dec
jmp
pusha
sar
jge
js
leave
aaa
repnz
rcll
or
jnp
mov
iret
mov
std
cmp
decl
lcall
lods
dec
cmp
adc
pop
push
inc
xchg
jg
sti
cwtl
gs
mov
mov
stc
dec
add
in
das
flds
popa
sti
dec
add
xchg
pop
fdecstp
fwait
pop
mov
xor
or
or
cld
mov
cmp
cmpb
mov
fidivs
out
sbb
hlt
out
cmp
or
jle
fsubrl
data16
pushf
dec
push
xchg
sub
dec
sbb
sti
push
dec
jmp
pop
sbb
out
hlt
cmc
loop
js
jcxz
add
dec
lcall
or
pop
and
mov
cmp
adc
or
sti
mov
pslld
addb
jae
mov
cmp
out
jp
or
imul
sti
fsubs
fwait
dec
cmp
pop
and
add
lock
jne,pt
and
out
inc
add
mov
ret
adc
sub
jno
sti
pop
sbb
fcmovu
jae,pn
jnp
sub
jnp
sarl
pop
repnz
mov
clc
jbe
pop
out
cmpsb
ja
push
add
mov
jns
mov
loopne
mov
cmp
dec
clc
bnd
das
cltd
sti
fsubrs
add
ss
arpl
mov
sti
ret
pop
push
add
iret
neg
cli
pop
enter
imull
adc
js
push
mov
and
in
jp
ljmp
cmp
fstpt
dec
clc
clc
ja
imull
movsb
rcl
mov
sub
and
or
aaa
jg
xorl
decb
push
repz
cs
pusha
stc
sub
xorb
xchg
push
repnz
jno
cli
stc
call
xor
sti
cltd
test
leave
add
sti
xlat
cmp
hlt
pushf
addr16
lock
inc
sti
mov
in
movsb
mov
loopne
orb
mov
sub
sbb
mov
aaa
arpl
xor
cld
out
rolb
scas
jnp
insl
or
jecxz
mov
pop
mov
pop
sub
sti
inc
clc
imul
loopne
sub
sti
outsb
mov
repz
inc
pop
sbb
and
sub
sti
cmp
push
xchg
jg
addb
mov
sti
jmp
imul
call
and
or
push
mov
outsb
inc
or
jmp
pop
mov
mov
jle
das
pop
ficoms
mov
cmp
inc
jecxz
out
xchg
xor
cltd
fnclex
or
push
sti
sbb
xor
cwtl
mov
jge
and
sti
ret
sbbb
or
inc
or
hlt
mov
and
fnstenv
es
cltd
insl
pop
inc
sub
stc
aaa
mov
leave
cwtl
sbb
sub
lcall
subb
inc
cli
sub
mov
popf
fs
call
sbb
in
pop
cmp
xor
xchg
and
in
in
add
bound
inc
cmp
insl
adc
or
dec
js
enter
and
shr
data16
push
sbbb
push
xor
and
xor
jns
test
loope
cmp
ror
repz
lahf
fdivs
add
push
arpl
push
filds
cs
fistpll
xorl
loop
push
adc
insl
jle
adc
mov
mov
adc
push
clc
dec
xor
lcall
sub
imul
push
enter
leave
gs
push
jnp
maskmovq
divl
ds
rcr
stos
xchg
fimuls
into
std
sub
jge
xor
popa
push
xchg
push
cmp
clc
add
hlt
jnp
pop
divl
and
jmp
push
stos
sbb
loopne
xor
test
sub
or
cmp
sub
insb
jns
mov
popa
xor
push
inc
lea
in
lcall
mov
clc
xor
mov
cltd
cmpsl
fwait
lods
out
aam
bound
mov
dec
stc
xor
xchg
or
cmp
stc
mov
out
push
push
jnp
fidivrl
nop
sbb
ja
sti
mov
incb
xor
inc
pop
xchg
loopne
addl
roll
xchg
fwait
sar
aam
lock
loop
sti
adc
cmpsl
je
mov
and
sub
dec
gs
mov
call
repz
mov
jb
jecxz
ljmp
xor
ja
sbb
jg
lret
leave
notl
inc
sti
mov
cld
movsb
jns
arpl
mov
push
repnz
in
inc
jecxz
hlt
test
mov
cmpsl
loope
cmp
sti
outsb
sahf
in
add
pop
sub
pop
sub
mov
or
mov
sti
sub
push
icebp
xor
pop
adc
cmp
mul
jmp
loopne
cmpsb
fmuls
fdivr
jle
sti
pop
xor
cmp
mov
insb
out
pusha
mov
repnz
xor
outsb
xchg
clc
mov
shlb
mov
ficomps
sub
add
loope
lods
rorl
cmpsl
or
pop
jnp
stc
adc
test
mov
xor
sti
jge
or
sti
push
daa
test
sti
inc
xchg
sub
push
enter
pop
sti
sbb
cmc
repz
jp
sub
mov
sti
push
pop
in
jae
xchg
fcomi
fbstp
std
or
aas
sti
test
hlt
dec
ja
and
ret
push
inc
xor
insl
inc
pushl
jnp
mov
and
or
cmp
add
insb
pop
xchg
xor
jle
pop
lods
sub
mov
dec
xor
push
sbbb
ficoml
xor
outsb
inc
sbb
fisubs
or
scas
pop
and
inc
push
xor
sbb
pushl
daa
pushf
pop
cltd
mov
imull
bound
sbb
int
xlat
dec
mov
adc
js
mov
pop
jae
or
pushf
ja
outsb
sti
sub
mov
push
mov
sti
cld
pop
jb
stos
repz
sti
sbbb
cs
xlat
xchg
test
jnp
and
mov
call
cmc
add
push
je
jne
aad
pop
pop
xchg
outsb
sbb
ret
cmpsl
mov
cltd
push
sti
sahf
div
add
fidivl
iret
out
dec
pop
incl
imul
pop
filds
test
leave
adc
dec
inc
cmp
lret
mov
and
es
add
mov
test
pop
xchg
bound
jnp
in
mov
inc
xchg
push
sbb
jmp
sub
or
cld
aam
or
iret
push
add
mov
fcoms
lods
push
sti
inc
fwait
cmp
stos
add
fnstsw
pop
daa
jmp
int3
imul
mov
and
add
jp
sbb
imul
sti
scas
out
xchg
bound
iret
jae
ds
cmp
add
mov
mov
arpl
push
dec
insb
adc
repz
pop
add
loopne
das
sarl
repz
xor
outsl
sti
in
mov
test
sub
ret
repz
or
xchg
mov
ret
addr16
in
xchg
gs
and
nop
in
lret
int3
lcall
iret
sbb
pop
sti
ret
or
sti
jmp
lcall
or
leave
maskmovq
imull
fwait
rcrb
imul
pop
xor
xor
fsubr
pop
xchg
push
inc
inc
mull
inc
jl
sti
add
icebp
cmc
mov
stc
cmpsb
and
adc
out
pushw
popa
inc
or
or
imul
xor
cli
mov
pop
fmuls
or
jb
adc
movl
sti
repnz
dec
mov
sub
lret
pusha
std
fdivr
jg
sbb
dec
xor
leave
and
out
mov
iret
push
loop
sti
in
jno
xchg
add
jns
enter
sti
shlb
jae
pop
pop
jg
push
sbb
sbb
xor
mov
idivl
out
pop
and
pusha
leave
sti
mov
lahf
jmp
xchg
test
shrb
adc
sub
notl
jnp
fildl
pusha
sub
xor
pushf
mov
lods
cmp
cmp
imul
or
fstps
push
pop
pusha
or
stc
cltd
sti
add
mov
jl
mov
mov
ja
sub
cmp
ds
sub
sti
stc
jecxz
mov
cmpsl
movsb
pop
or
movsl
jo
sub
xlat
mov
rorl
les
mov
test
mov
stc
mov
sub
notl
mov
fsincos
sahf
cvtdq2ps
ffree
mov
sti
into
leave
nop
popf
dec
cmp
lcall
push
mov
lock
lods
dec
sti
add
and
fnsave
lea
test
inc
fldcw
test
pop
dec
and
div
add
mov
aas
xor
int3
jl
les
lcall
sub
xor
xor
sbb
cmp
in
clc
add
int3
fadds
shl
dec
sti
mov
das
stos
mov
inc
out
cs
scas
loope
jmp
lret
js
popf
sti
mov
dec
shl
cmp
push
dec
mov
outsl
push
sbb
fisubrl
add
imull
mov
jb
xor
divb
popa
lods
mov
stc
cmp
fbstp
add
sti
add
adc
push
movsb
test
imul
outsb
pop
push
mov
and
testb
repz
imul
push
mov
adc
mov
imul
jae
mov
into
fstpt
xor
ret
cmpsb
arpl
xlat
sti
jo
ljmp
test
xchg
shll
stc
mov
sbb
sti
xchg
ret
clc
pop
cmp
cwtl
lods
outsb
inc
jne
aam
add
clc
fiaddl
popf
or
outsb
ret
out
cs
sti
jbe
cmp
stc
ljmp
mov
fdiv
xor
repz
es
movsl
jb
sti
mov
lods
cmp
and
ja
and
inc
imull
jnp
movsb
sti
adc
shlb
jae
mov
push
xor
and
pushf
fwait
mov
push
mull
and
lea
lahf
fisttpl
xchg
sub
ret
lahf
jmp
fwait
mov
popa
mov
mov
es
and
std
sarb
cmpsl
xchg
push
cmp
mov
jp
mov
sub
mov
stc
mov
xchg
sub
xchg
inc
mov
ljmp
mov
or
arpl
cmpsl
std
aaa
pop
jnp
ret
cmpb
sub
jg
xchg
cmpsl
ljmp
sbb
imul
scas
xchg
sarl
and
mov
outsl
hlt
fwait
xchg
mov
adc
jp
cmp
jae
sub
sbb
hlt
mov
add
jmp
xadd
jmp
ficompl
fidivrl
xchg
loopne
mov
push
imul
scas
mov
lret
ds
sbb
outsl
xchg
push
cmp
xchg
stos
add
mov
aam
pop
std
loope
add
sbb
jnp
xchg
mov
or
sub
ret
stc
fwait
and
loopne
mov
pop
sub
jmp
push
sahf
jp
idivb
lret
test
fwait
rclb
rcrb
jnp
or
pusha
xchg
mov
ss
sbb
popf
outsl
inc
lret
mov
mov
inc
mov
adc
add
mov
testl
add
cmpsb
cmpsl
mov
enter
jecxz
ret
in
jno
pop
inc
and
or
lock
xchg
scas
dec
and
lret
xchg
cwtl
lret
mov
sub
jne
xchg
clc
ljmp
cs
pop
in
or
imul
repz
dec
mov
mov
mov
enter
mov
mov
mov
fwait
std
aad
or
fprem
dec
dec
test
xchg
mov
mov
or
jecxz
addr16
shlb
jns
and
or
lahf
mov
into
push
dec
js
stos
movsb
scas
cmp
xor
in
mov
xchg
lret
and
mov
adc
in
stos
jg
sbbb
add
or
mov
in
mov
ret
push
xchg
fwait
sub
adcl
xchg
cmp
and
jmp
lahf
in
call
jo
movsb
cs
sti
shrl
xor
stos
outsl
jns
xlat
mov
add
and
xchg
jb
dec
cli
cs
mov
mov
into
sub
cmpsl
stc
mov
aad
dec
sbb
mov
mov
cmc
pop
mov
fwait
mov
sub
xchg
mov
xor
std
iret
xchg
fidivrl
hlt
rorb
call
ret
in
jae
xchg
jne
jle
rorb
rclb
mov
ret
cmc
mov
fwait
inc
notl
sar
shr
push
jmp
mov
lea
pusha
lea
call
jmp
aad
movsl
mov
out
loop
pop
dec
nop
insb
and
jns
jl
cmp
dec
xor
into
rcrl
add
push
ds
dec
sbb
enter
mov
mov
mov
jecxz
lahf
add
sub
fstpl
fistps
out
repnz
lcall
jp
imul
aas
xchg
add
sub
mov
movsl
add
es
mulb
scas
mov
hlt
mul
lret
lcall
mov
lock
dec
dec
insl
add
dec
xchg
outsl
loopne
int
sbb
int3
push
sbb
arpl
dec
lods
test
loope
shlb
outsb
and
sub
sbb
pushf
fwait
cwtl
push
loope
cmpsl
push
cmpsb
xorl
mov
mov
or
sub
sbb
mov
mov
mov
sbb
outsl
rorl
cwtl
jge
invd
inc
mov
pop
push
cmp
mov
xchg
cmp
imul
popa
inc
std
sbbl
sub
out
ret
jl
ror
popf
sub
ljmp
faddl
adcl
cs
cli
in
sbb
outsb
outsl
adc
fimuls
psubusw
es
int
arpl
aaa
mov
data16
jns
lods
cmc
xor
dec
adc
sub
sub
jl
fcmovb
push
add
cwtl
xlat
add
pop
jg
mov
aad
fisubrl
xchg
imul
or
bound
hlt
clc
sub
mov
loopne
out
test
mov
les
sbb
hlt
push
andb
ja
jb
mov
push
mov
cmc
add
adc
sbb
inc
mov
sub
es
mov
ficoms
movsb
movsl
add
lret
mov
jnp
sbb
cmp
jle
cmpl
mov
xor
test
xchg
sub
cli
ds
jp
mov
mov
pop
in
out
mov
loope
cli
movsb
sbb
adc
js
mov
jmp
scas
mov
sbb
pusha
es
cmp
aaa
push
xchg
mov
bound
lret
inc
mov
dec
rcl
int3
sti
insb
stc
cmp
repnz
mov
xor
jmp
movb
jmp
add
call
nop
xchg
pop
movsl
movsl
add
mov
sbb
movsl
shr
loop
loop
dec
xchg
andb
shll
mov
cli
dec
add
push
js
scas
dec
repnz
test
push
leave
lret
adc
pop
test
fistl
adc
gs
stos
ljmp
lret
add
jge
inc
cmpsb
push
and
lods
jecxz
out
or
jnp
int3
ror
cld
pop
movsb
roll
cli
dec
mov
jp
sahf
out
mov
loop
xchg
or
clc
add
push
pusha
push
lea
je
push
clc
test
call
pushf
movb
push
lea
jne
push
movb
movzbw
push
mov
jmp
mov
test
jmp
pushf
push
xchg
push
jmp
mov
xor
mull
push
pop
int3
add
mov
add
fsubrp
insb
jno
dec
pushf
fwait
mov
into
iret
sbb
xchg
mov
jno
cli
cwtl
xchg
out
xor
cmp
sbb
push
push
xchg
add
lds
or
mov
imul
or
jbe
std
test
jbe
mov
das
xor
jb
data16
sbb
js
pop
mov
popf
gs
pusha
inc
int
jle
rcrb
sbb
pushf
movsb
iret
cwtl
fisubrs
adc
pop
adc
mov
xchg
inc
and
sub
movsw
faddl
mov
cmpsl
sub
inc
aam
push
sub
jno
sub
mov
mov
mov
fimuls
sub
mov
mov
cmp
and
aas
dec
pop
jbe
mov
or
flds
cmp
inc
aam
push
cld
cmpsb
jbe
jnp
push
in
sbb
xor
push
fisubl
lahf
movsl
xchg
in
inc
jecxz
or
mov
in
sub
addr16
inc
or
mov
pop
rclb
pop
push
in
fistl
out
repz
aaa
xorl
jns
mov
movsb
insb
sbb
mov
test
nop
cli
test
enter
jp
rsqrtps
mov
inc
or
rcll
cmpsb
pusha
call
cmp
jbe
pop
in
int
fmull
jb
out
shll
movsl
fimull
mov
ja
out
lret
es
enter
pop
mov
push
test
jmp
call
or
movb
lea
jne
adc
shl
inc
shrd
mov
stc
jmp
pop
sub
movsl
add
out
xor
mov
out
cs
pop
sub
dec
lahf
bound
adc
loop
jnp
xchg
and
aad
in
loope
icebp
loope
mov
xlat
aam
cli
jne
stc
xor
jnp
aas
mov
rorb
pushf
pushf
pushl
movl
lea
jle
pusha
pusha
movl
movw
pushf
pushl
lea
jmp
adc
add
mov
lock
xchg
loope
sub
movsb
jmp
jmp
mov
test
push
pop
cltd
idivb
out
add
push
ljmp
jge
push
adc
lcall
adc
add
push
gs
mov
xchg
mov
aas
test
ja
in
in
or
addr16
jecxz
add
shll
sti
ret
inc
jb
push
cmp
repnz
inc
in
and
popa
addr16
pop
les
inc
xor
sbb
inc
lods
call
imul
sbb
jnp
sti
fistpl
sub
outsl
lret
cmp
mov
add
sub
xchg
mov
shlb
push
sbb
jne
imul
pop
pop
and
push
pop
lods
icebp
xorb
int
mov
movsl
arpl
repz
test
mov
mov
push
scas
push
stos
or
call
je
mov
andps
sbb
repz
push
insl
cld
mov
jle
shlb
dec
and
out
stos
rclb
push
or
jns
cli
decl
adc
lds
dec
pop
ficompl
jno
adcb
or
mov
sub
jge
cld
jmp
fimull
icebp
fs
stos
cmpb
repz
bt
cmp
pushf
mov
pusha
lea
jb
pusha
cmp
call
not
push
call
pusha
mov
pusha
not
mov
push
movl
pushf
lahf
mov
lea
mov
call
in
mov
bound
ljmp
pop
sub
rolb
aaa
xor
leave
jnp
add
cmp
cmp
inc
mov
push
adc
jge
xchg
pop
cmc
aas
je
sub
sub
gs
or
mov
lea
je
call
movl
movb
mov
movl
pushf
movw
pushf
pusha
lea
jmp
pushl
pushf
lea
je
not
lea
not
mov
mov
push
jmp
xchg
cmp
stos
movsl
add
movsb
mov
inc
dec
mov
arpl
or
rclb
or
ret
shlb
jg
lret
adc
cmp
aaa
jne
mov
mov
testb
call
pushf
sub
cli
inc
sarb
stos
push
inc
insb
fcoms
out
dec
pop
out
sbbb
xor
mov
fstps
lods
aad
je
fnsave
lods
fwait
xchg
fld
cmove
adc
out
fcomps
sarl
cmp
adc
xor
cmc
add
add
stc
jmp
xor
add
sbb
inc
push
test
es
mov
or
jnp
fwait
jae
add
movsl
loope
jl
mov
lods
fdiv
in
pushf
movsl
jl
mov
push
pushl
fwait
clc
xchg
and
jge
pop
add
test
mov
xchg
mov
cmp
xor
mov
push
pushf
pushl
ret
test
lea
jo
pusha
mov
lea
je
cmc
sub
jo
cmp
cmp
push
lea
ja
bt
imul
pusha
add
mov
mov
lea
jmp
negl
lods
movsl
add
sbb
rcr
pop
or
push
sbb
js
adc
fwait
stos
sbb
jnp
sub
in
mov
or
test
fbld
outsl
jmp
into
xchg
jge
xchg
mov
lea
movsl
out
fsts
lods
std
or
add
sub
fdivp
fdivl
negl
rolb
sbb
xchg
js
mov
in
push
cwtl
shld
mov
test
stc
shl
pushf
pushf
lea
je
call
str
pushf
push
jmp
push
call
mov
add
out
es
fs
movsb
fwait
movsb
cli
test
mov
mov
mov
aam
enter
inc
and
push
cmpsl
pop
sar
nop
rcrl
out
mov
bound
lea
jne
movsbw
setns
jmp
call
add
add
jmp
sub
imul
int
pop
fwait
mov
jg
ror
lock
sub
dec
and
or
ds
pop
sbb
xchg
xchg
push
jae
aaa
cltd
inc
or
ret
lret
adc
test
push
adc
fmul
pusha
scas
clc
push
pop
ja
outsl
jo
out
imul
cmc
jle
int
bound
lahf
pop
imul
clc
lods
int
and
sbb
sub
ret
outsb
push
mov
out
inc
xchg
ja
addr16
xchg
adc
ret
jecxz
sub
push
push
test
pop
sub
add
pop
cwtl
cmp
cmp
les
aaa
cmp
push
add
in
iret
mov
push
scas
ret
das
inc
push
adc
lret
mov
push
dec
pop
adc
jle
mov
push
mov
sahf
mov
test
adc
mov
push
xor
ss
repnz
pop
adc
pop
adc
clc
sub
gs
mov
pop
jmp
mov
push
sub
add
jg
js
aad
adc
jle
xor
mov
mov
xchg
bound
ja
cmp
mov
adc
sbb
orb
sbb
cmp
inc
push
ljmp
jo
adc
mov
cmp
mov
std
pop
lods
pop
arpl
arpl
xchg
test
mov
push
adc
pusha
nop
add
mov
outsl
int3
out
icebp
loop
int
orl
inc
lock
test
cmp
xor
mov
sahf
hlt
mull
call
leave
xor
xor
mov
mov
in
ficoml
cmpsb
mov
mov
pop
ss
jmp
xchg
aas
xor
mov
aad
hlt
sti
cmp
mov
mov
sub
movsl
ret
add
cli
mov
cs
mov
scas
lea
sahf
push
jle
mov
xlat
lods
pop
int
pop
xor
sub
out
scas
xchg
pop
adc
push
fmuls
sub
jecxz
ss
std
ret
mov
push
pop
xor
into
adc
or
xchg
inc
lahf
adc
jp
pop
or
push
stos
subl
out
pusha
cs
cmp
xchg
or
fbstp
add
cwtl
pop
addr16
fbstp
cltd
dec
jo
jns
les
int3
aam
pop
shlb
xor
cmp
ficomps
jne
imul
dec
push
adc
mov
subb
jmp
pop
sarl
dec
dec
or
sbb
shlb
cmpsb
jge
int
popf
mov
add
loope
jge
testl
or
pop
mov
xor
jb
rcrb
loop
mov
xchg
sbb
lret
es
fisubl
jno
out
mov
std
loopne
nop
xchg
dec
repz
push
adc
loope
incb
fs
fsubs
jle
cmc
lret
adc
mov
mov
aam
std
es
add
push
in
mov
and
mov
pop
cs
insl
push
add
fs
iret
dec
mov
push
sbb
or
cmpb
mov
or
pop
shll
imul
hlt
out
mov
out
and
mov
xchg
or
inc
xor
and
cmc
or
gs
movsl
ficoms
loop
sub
mov
cli
push
sub
test
mov
iret
outsb
xchg
fcom
js
sub
fdivs
cmp
push
cmc
notb
notb
push
jns
lcall
pop
sub
adc
cmp
fstl
es
and
inc
fsubs
movsl
add
das
inc
dec
pop
dec
jo
rcl
call
jne
and
sub
push
dec
and
xorl
pop
mov
test
daa
mov
jbe
xor
rorb
mov
cmp
icebp
scas
cmp
aaa
push
aam
cltd
cmpsb
adc
fld
sti
repnz
or
loopne
jb
lret
fdivr
mov
mov
fwait
in
mov
or
mov
outsl
mov
cmp
dec
lret
jns
loop
in
fstpl
mov
xor
jg
jmp
pop
or
lea
adc
sti
inc
fstps
mov
add
movsb
jmp
shll
pushf
lea
jb
pushf
pushf
cmp
call
aas
lcall
add
add
add
add
sbb
pop
add
pop
add
add
add
add
mov
add
inc
xchg
sub
imul
push
pop
inc
pop
jno
addb
mov
outsb
cltd
cmp
clc
outsl
popa
mov
imul
adc
insl
sub
addl
data16
pop
inc
lea
rclb
xchg
stos
stos
pop
sbb
aas
outsl
adc
rcrl
mov
adc
movsl
mov
sbb
popf
test
pop
fldl
jl
cmc
sub
sahf
push
mov
pop
add
xchg
js
std
sub
and
shrl
aad
inc
andl
test
in
movsb
in
dec
popf
leave
outsl
jae
xchg
xlat
pushf
adc
clc
gs
mov
pop
jo
push
pop
dec
add
inc
leave
inc
int3
ss
push
mov
inc
jl
mov
mov
mov
inc
mov
xchg
icebp
cwtl
push
mov
sbb
ret
imul
test
clc
push
xchg
decl
mov
addl
mov
and
jmp
js
mov
sub
inc
xchg
inc
mov
lods
mov
or
inc
or
and
jae
add
imul
sub
inc
int
adc
mov
fisubl
jg
xchg
fldcw
push
sbb
ret
les
mov
nop
pop
mov
imul
rorl
mov
pop
int
scas
adc
mov
aam
push
cmp
repnz
aas
movsl
fs
repz
add
out
icebp
push
push
sbb
xchg
testl
lods
adc
mov
rcll
shlb
jo
jns
and
inc
fwait
repnz
jmp
jmp
ja
jle
clc
std
jecxz
cmp
fdivrs
subb
dec
mov
mov
sub
hlt
sarb
adc
mov
push
lret
jp
ds
shlb
iret
and
dec
mov
sbb
scas
or
test
mov
test
pop
xor
and
jne
sbb
pop
dec
pop
mov
dec
cmpsl
push
bound
mov
add
ret
call
pop
fnstcw
lea
or
into
pushf
dec
jne
ja
movl
rcr
repnz
leave
rcr
je
pusha
rolb
pushf
push
aam
inc
divb
mov
sub
aas
loop
or
mov
ret
fs
fldenv
daa
dec
fdivr
add
pop
jge
jge
sbb
and
sub
test
jmp
filds
shlb
int3
push
cltd
mov
mov
aas
xor
hlt
adc
decb
and
in
imul
je
jbe
enter
fisubrs
jns
inc
repnz
scas
jl
mov
push
inc
pop
adc
mov
aad
mov
mov
les
push
hlt
jmp
je
jmp
jp
lock
jne
or
leave
sub
fisttpl
jg
pop
movsl
adc
adc
pop
pop
xchg
mov
cltd
xor
cltd
pop
pop
stc
cwtl
cmp
mov
pushf
cmp
js
jne
loopne
icebp
mov
jns
test
mov
jno
mov
mov
pop
bound
inc
ljmp
push
mov
or
pop
ret
push
mov
in
repnz
rclb
nop
push
lea
jecxz
iret
das
sbb
aaa
leave
xor
cwtl
jmp
test
cmp
stc
sub
dec
mov
pop
cmc
xor
out
xor
mov
das
imul
mov
mov
adc
fcmovbe
ljmp
jl
mov
std
add
fidivrs
out
pop
clc
clc
out
outsb
adc
test
psubw
sbb
repnz
shlb
mov
dec
cmp
std
adc
fwait
xchg
insl
sbb
clc
ljmp
mov
scas
test
out
repz
cmp
ss
popa
xchg
cmp
jne
dec
jp
pop
repz
pop
mov
icebp
pop
sub
push
dec
stos
sub
mov
and
adc
push
outsl
mov
mov
mov
leave
push
jne
adc
imul
mov
into
scas
xor
jnp
sbb
aas
imul
out
cmp
or
cmc
inc
shlb
fwait
cltd
std
cltd
or
and
mov
fbstp
setne
jp
and
pop
movsl
sub
xor
ljmp
data16
aad
mov
cld
enter
mov
pop
jmp
cmp
pusha
mov
and
popa
insb
stos
insl
insb
in
fwait
mov
xorb
inc
xchg
lods
add
dec
pop
push
inc
sahf
outsl
mov
lret
cwtl
in
mov
divb
xor
jmp
sub
dec
daa
mov
jl
adc
lahf
hlt
jb
in
pusha
jle
out
lret
push
call
lcall
xchg
jno
adc
das
jne
add
mov
mov
cwtl
aaa
fdiv
sbb
icebp
mov
cmpsb
in
hlt
push
add
sbb
fimull
sarl
jne
lahf
inc
adc
push
mov
std
jg
sbb
adc
dec
jl
sub
fs
pop
pop
mov
in
sbb
lret
fcomip
fs
cld
out
mov
push
pop
mov
sub
rolb
repnz
cmp
aaa
nop
pop
xor
dec
jp
arpl
inc
cld
inc
pusha
mov
out
movsl
push
sbb
sub
push
rolb
pop
mov
popf
lahf
leave
jnp
or
dec
cmp
jp
sub
enter
mov
push
sbb
mov
xchg
mov
push
in
movsb
sub
addr16
dec
lahf
mov
push
cld
shl
pop
mov
jbe
rclb
inc
mov
ds
fs
pop
arpl
test
or
adc
dec
out
push
mov
in
lret
cltd
adc
das
out
dec
inc
inc
push
sub
mov
jle
mov
orb
pop
out
or
mov
movsb
test
pop
into
push
cmpsb
or
or
jmp
dec
jbe
or
fsubl
stos
bound
xchg
xchg
xchg
aas
cltd
dec
scas
pushf
rcrl
lahf
nop
adc
ret
or
pushf
add
inc
push
sti
cwtl
fcomps
addb
sbb
mov
cmpb
add
adc
aam
dec
aaa
sti
mov
nop
dec
jns
jmp
lahf
pop
dec
repz
xor
mov
push
or
lea
repz
cmpsl
sbb
sub
or
sar
add
cmp
mov
stos
and
int
dec
mov
gs
dec
xchg
aaa
test
adc
adc
pushf
xor
cs
lret
mov
xor
cwtl
or
clc
jne
add
push
cwtl
loope
bound
xchg
push
popa
add
fmul
loope
mov
mov
clc
mov
jmp
push
mov
into
daa
lds
jnp,pt
mov
ret
adc
bnd
sub
inc
push
cli
dec
or
xchg
push
mov
call
imul
dec
xchg
mov
mov
adc
fwait
pop
out
es
cmpsb
lock
std
ljmp
push
bound
dec
add
fcompl
popf
dec
mov
call
nop
inc
adc
adc
ss
pop
das
push
sub
mov
pop
or
xor
push
push
push
push
jle
pop
rorl
cmp
xchg
fs
lahf
leave
rcrl
fists
fmulp
aaa
shld
rol
popf
addr16
daa
mov
jne
or
xchg
lods
in
or
mov
xchg
mov
ret
inc
pop
and
fsubr
push
sub
prefetch
outsb
cmpsl
out
and
mov
ffree
xor
mov
jl
adc
xchg
xchg
pop
insl
movsb
push
cld
xchg
ficomps
adc
std
cmpb
test
sbb
mov
cmp
mov
add
jbe
or
daa
scas
fbstp
icebp
cmpsl
sub
in
cmp
adc
sbb
lods
adc
lds
xor
dec
sbb
xchg
dec
jmp
repz
loope
popl
push
mov
inc
pop
jecxz
push
add
aaa
xchg
inc
scas
pop
das
fwait
xor
cmp
jge
xchg
mov
repnz
cmpsl
mov
jmp
rorl
mov
push
dec
ljmp
repnz
outsl
adc
mov
cli
add
rol
rclb
bound
push
fidivl
mov
and
push
fwait
add
mov
popf
ss
ljmp
cmp
mov
add
fnstsw
pop
pop
xor
cltd
xor
sahf
or
shlb
test
mov
test
out
mov
iret
mov
mov
neg
mov
sub
bound
pop
and
jmp
xchg
repz
in
xchg
xchg
inc
inc
popa
in
jbe
and
pop
sbb
add
shlb
cmpsl
jmp
insl
sub
icebp
popf
shr
das
or
movsl
fwait
test
xchg
fnstenv
mov
push
or
inc
cmpsb
insl
outsl
popa
shlb
shrl
dec
xor
xchg
les
sbb
iret
ja
push
mov
jmp
pop
xchg
mul
mov
sbb
loop,pt
imul
xchg
pushf
cmp
adc
xchg
pushf
int
adc
push
fmull
sbb
or
jns
sub
outsl
mov
xor
fistpll
out
leave
insb
add
push
push
pop
cltd
je
sbb
xchg
movsl
mov
cmpsb
mov
cld
and
mov
loopne
lahf
sarl
jno
inc
cld
add
jnp
mov
mov
inc
mov
cmpb
imul
push
loop
jge
loopne
cmp
call
and
push
mov
lods
sub
mov
sub
jno
push
int
test
xchg
mov
arpl
andl
outsb
scas
jne
fwait
and
dec
fdivrs
jg
cli
daa
inc
add
or
dec
ror
push
mov
jno
sbb
xor
mov
std
adc
xchg
mov
das
xchg
std
cs
mov
call
adc
pop
push
in
out
push
xchg
call
loopne
shrl
imul
mov
sub
dec
fsubl
dec
inc
imul
pop
mov
pusha
cs
sub
lret
rol
dec
mov
data16
xor
std
adc
mov
lods
movb
add
add
arpl
sub
scas
ss
jns
inc
jmp
and
rcr
pop
adc
push
int3
jg
sub
orl
sub
sub
add
pop
adc
lea
xchg
inc
sbb
sbb
mov
data16
pop
sahf
testl
inc
xchg
hlt
mov
pop
pop
call
jne
gs
xor
fs
insb
add
xchg
cmc
call
jmp
ja
movsl
add
insl
xchg
adc
out
xchg
test
sti
aaa
and
sbb
push
icebp
imul
xchg
loop
ficoml
and
cmovns
sub
call
jmp
pushf
movb
lea
je
btr
aaa
or
sub
shr
dec
mov
sub
movsbw
aas
mov
mov
lea
call
push
add
cmp
test
test
pushl
cmp
pushf
call
jmp
dec
inc
sub
mov
jge
xchg
pushf
btc
mov
clc
mov
sub
clc
push
call
call
lea
ja
cmc
push
mov
jmp
lea
pushf
pushf
jmp
pushl
mov
mov
pushf
jmp
loope
xchg
shlb
ror
xor
fldt
pop
inc
jae
inc
mov
repz
cs
ret
or
xorb
pusha
cmp
in
dec
add
sbb
rcrl
or
cli
pop
mov
add
mov
dec
cmp
push
xchg
outsl
mov
pop
shll
mov
shll
out
or
push
pop
xchg
negb
aam
and
or
andb
cmc
push
cmpb
jmp
jmp
jmp
jmp
int3
popf
call
test
cmp
call
pushf
movb
pusha
movl
jmp
stos
pop
rol
add
inc
aaa
mov
iret
add
adc
and
lret
jnp
push
dec
dec
inc
gs
loopne
and
xchg
outsb
adc
pusha
dec
nop
jl
add
pop
aad
dec
fildl
jecxz
and
cmp
push
push
pop
mov
ret
pop
sbb
sub
iret
sbb
and
movsl
sbb
sbbl
call
and
pop
ret
dec
xor
inc
ds
inc
jo
sbb
idivl
std
mov
dec
enter
stc
adc
push
fcmovnb
xchg
push
rorl
outsl
adc
lahf
repz
xchg
push
push
xchg
mov
pop
gs
movl
or
jp
popf
call
sar
add
not
call
lea
jge
pushf
push
lea
jae
pushf
cmc
lea
jle
cmp
pusha
pusha
jmp
clc
test
push
add
pusha
mov
lea
jmp
not
lea
push
call
cmc
cmp
pushf
lea
jae
add
adc
mov
cmc
or
clc
bts
mov
adc
test
neg
rcr
mov
call
sub
mov
jns
sarl
inc
mov
test
rcll
or
xlat
rol
into
inc
pop
jmp
sarb
pop
dec
shl
imul
pop
sub
adc
fdivr
add
test
lock
insl
inc
in
jp
cli
sub
push
pop
outsb
pop
mov
mov
inc
xchg
mov
xchg
cmp
out
js
movzbw
xchg
mov
sete
call
scas
cs
ret
movsl
add
movsl
movsb
mov
push
inc
inc
push
js
sub
mov
cmp
inc
out
in
mov
frstor
test
orb
mov
jecxz
pop
jle
push
inc
lahf
scas
push
fnsave
ret
punpcklwd
jg
lods
popa
sub
mov
adc
inc
cmp
dec
push
je
fstl
iret
dec
xor
xchg
adc
mov
mov
and
mov
add
add
rcrb
add
sbb
add
inc
adc
add
add
add
fistps
setg
bswap
pop
pushf
pusha
mov
movw
call
and
sub
push
lea
jmp
jmp
bsf
mov
shl
xor
mov
stc
cmc
pushf
repnz
pusha
push
push
lea
jne
lahf
movb
call
mov
cwtl
movzbw
lea
pushf
jmp
mov
movsbw
mov
movsbw
lea
push
movl
push
jmp
mov
pusha
push
pushl
ret
add
add
bsr
inc
pushf
mov
inc
pusha
stc
lea
adc
lea
sub
shl
cwtl
daa
push
or
jmp
pushf
pushf
cmp
sub
jmp
jmp
sub
rcr
dec
pop
add
sub
bsf
mov
call
bt
cmp
push
cmc
or
pushl
pushf
lea
je
push
bswap
not
pop
mov
push
movsbw
not
push
lea
pushl
jmp
movl
pusha
mov
push
mov
pushl
ret
cmc
cmp
or
pusha
lea
jne
bts
mov
stc
clc
or
jae
je
setae
pusha
lea
lea
jmp
pusha
pusha
lea
jno
push
call
push
movl
push
mov
push
push
lea
jmp
and
aaa
push
inc
js
mov
sbb
sbb
aaa
imul
or
sub
fistpl
insl
out
sub
xchg
and
mov
mov
mov
dec
sbb
mov
das
out
jns
fiadds
mov
dec
stos
mov
arpl
arpl
mov
cmc
clc
cmc
stc
ror
stc
cmc
movb
add
jmp
call
mov
rcr
sar
bt
mov
pushf
sub
pushf
movb
pushf
rep
pop
pop
pop
movsbw
pop
push
pushl
pushf
lea
jmp
neg
lea
bts
mov
clc
bt
cmp
cmpb
push
lea
jne
sar
xor
rcl
bswap
mov
shl
rcl
pusha
add
not
jmp
sbb
lret
movsl
add
sub
mov
add
pop
jp
outsb
leave
mov
xchg
pushf
bound
mov
loop
lds
mov
test
jns
adc
sbb
aam
mov
stos
loopne
mulb
jmp
mov
sub
xor
call
pusha
movl
push
mov
lea
jmp
pushl
mov
movl
mov
movl
pushf
lea
jmp
mov
add
call
ror
test
shr
mov
call
cmp
cmp
jmp
loop
jg
movsl
add
mov
cs
push
ljmp
fiadds
xorb
mov
jp
add
movsb
cmpsl
mov
push
scas
mov
pop
sbb
into
mov
push
pop
mov
imul
popf
add
and
fiadds
lock
xchg
push
fwait
inc
lret
rcll
push
push
leave
das
inc
inc
add
xchg
inc
pop
outsl
cmp
sub
dec
cmpsl
xor
rorb
push
scas
mov
ret
repnz
cmpsb
or
movsl
add
sub
jb
xchg
test
sub
adc
shll
cwtl
inc
inc
add
call
outsl
and
int
pop
inc
outsl
jo
jecxz
jge
jne
add
mov
sbb
xlat
pusha
mov
pushf
in
jns
adc
outsl
pop
mov
rcl
mov
cmc
cmpb
pushf
jmp
scas
pop
jmp
test
cs
pop
iret
rcr
in
pop
aad
sub
js,pn
sbb
xor
into
or
mull
arpl
lods
add
push
jmp
popa
dec
cmp
bnd
inc
mov
movb
and
cwtl
push
pop
jae
arpl
sbb
push
fdivl
scas
mov
add
cltd
sub
fcmovne
movsl
add
xchg
lret
or
jmp
imul
cli
mov
mov
aad
testl
popf
daa
adc
cld
loope
push
sbb
sbb
push
fisttpll
mov
jl
mov
sbb
jae
jne
js
addb
jg
sti
fdivrs
mov
jno
lea
fistpll
mov
sbb
aam
std
ss
in
pop
push
adc
sub
mov
leave
rol
dec
pop
js
xchg
fs
sub
add
dec
pop
dec
cmovb
lcall
sub
xlat
mov
push
lock
popf
enter
xor
stc
sub
fldenv
or
push
ficoms
int3
cmp
loop
jp
daa
push
rdtsc
rcl
pusha
mov
mov
and
mov
test
add
pusha
mov
pushl
pushf
lea
jmp
mov
call
movb
call
lea
je
inc
bt
call
push
pushl
popl
pushf
movb
lea
jmp
movw
mov
pusha
pushf
popl
call
pushf
pusha
movl
xchg
bswap
pop
mov
not
not
not
call
sbb
rol
mov
or
sbb
mov
cmc
push
call
sub
call
jmp
adc
mov
adc
lea
movzbl
sub
jl
sub
btr
pushf
movzbl
add
neg
bswap
pusha
bswap
movzbw
clc
and
inc
lea
rcr
sub
movsbl
mov
push
lea
jmp
sub
rol
test
bswap
call
shl
mov
mov
stc
clc
shl
pusha
shr
clc
call
pushf
mov
mov
pushf
lea
jmp
mov
push
jmp
inc
pushf
lea
jmp
dec
mov
bt
add
pusha
push
lea
jmp
add
mov
cld
test
pushl
popf
pushf
lea
jmp
movsbw
aaa
rcr
mov
test
clc
pusha
movb
add
pushf
pusha
mov
mov
mov
push
pushf
lea
jmp
neg
call
call
call
and
push
pushf
popl
call
jmp
clc
sub
pusha
call
mov
mov
push
mov
pushl
pushf
lea
jmp
cmc
rol
stc
push
movw
sub
mov
jmp
push
clc
lea
jmp
pusha
mov
mov
push
pushf
movb
pushf
lea
jmp
bt
pushl
popl
ror
push
btr
movl
not
rcl
test
mov
ror
sub
and
mov
shld
shld
neg
lea
push
cmp
bswap
rol
movl
pushf
movsbw
lea
shl
bts
sub
movsbw
bswap
jmp
sub
jmp
lea
bswap
btc
lea
sub
pushf
pushf
lea
push
pusha
lea
jmp
add
push
push
pushf
lea
jmp
bt
cmp
pusha
cmc
pushl
popl
push
jmp
clc
cbtw
cmc
cmc
clc
cwtl
stc
cmp
jmp
jmp
call
push
mov
pushf
push
jmp
neg
bswap
bsf
mov
clc
pop
ror
bts
or
bt
pop
bswap
pop
bt
rcr
pop
movzbw
cmp
pop
xadd
pop
movsbw
stc
shl
rol
pop
aam
add
std
pop
add
das
lea
popf
jmp
push
mov
mov
pusha
push
pushf
lea
jmp
pushl
pushl
popl
pushf
push
lea
jmp
call
pushf
stc
mov
jmp
pushl
movb
pushf
popl
movb
call
btc
movzbl
call
and
push
sbb
mov
pusha
sub
pushf
mov
add
pushl
pushf
popl
call
cmp
bt
mov
bt
pushf
cmp
call
mov
jmp
mov
pushl
jmp
jmp
mov
jmp
mov
movb
lea
jmp
lea
cpuid
pusha
clc
sub
bt
stc
bt
cmpl
pusha
pushf
pushf
mov
pushf
push
call
mov
push
movl
lea
jmp
push
mov
lea
ja
stc
pushf
lea
shl
pop
aaa
bswap
lea
pusha
xadd
stc
test
sub
push
lea
shl
stc
push
bt
and
bt
sub
movsbw
call
push
movw
sub
movb
xchg
clc
mov
pusha
sub
pushf
pushl
lea
jne
pushf
stc
bt
sub
pushf
movb
movl
xchg
movb
pushl
mov
pushl
movl
call
stc
and
mov
stc
push
add
movl
pusha
call
shl
cmc
mov
cmc
add
pusha
pusha
lea
jmp
bt
bsr
inc
mov
bts
shl
ror
btc
mov
jmp
sub
jmp
lea
pushf
call
stc
and
pushl
pushf
mov
pushf
pushf
popl
pushf
call
jmp
call
shr
jmp
rcl
cmc
mov
bt
test
mov
bt
cmp
clc
pusha
sub
call
pusha
push
test
stc
not
bt
push
cmp
cmp
not
call
movsbw
dec
dec
not
pusha
not
pop
dec
push
dec
sbb
adc
sbb
rcl
and
shrd
bsf
mov
bt
mov
add
pusha
push
pushl
mov
mov
push
movl
mov
lea
jmp
pushl
popl
movb
pushf
pusha
push
lea
jmp
stc
clc
shl
call
jmp
sub
stc
shl
rol
movzbl
clc
stc
stc
pusha
xor
bt
cmp
test
sub
bt
ror
jmp
mov
mov
call
inc
cmp
xor
add
ror
sub
dec
seto
mov
pusha
clc
stc
cmc
add
lea
jbe
push
mov
pushf
push
lea
jmp
inc
mov
mov
pushf
pushf
mov
mov
lea
jmp
sete
bsr
cwtl
mov
pushf
pushf
sub
call
sub
clc
bt
pushf
shl
jmp
rol
pushf
stc
cmc
xchg
cmc
jmp
mov
pushf
popl
call
pushf
push
mov
pusha
pushf
jmp
lea
and
and
cmp
btr
sar
pushf
sub
pushf
push
lea
mov
pusha
movsbw
pushf
popl
movsbw
pushf
xchg
movzbl
cld
xchg
mov
not
lea
movsbl
cld
lea
push
call
mov
pushf
push
mov
movb
lea
jmp
bts
mov
bt
mov
bsr
rcl
pushf
mov
jmp
jmp
sets
rol
shld
sub
bsr
bsr
mov
call
sub
xor
dec
cmc
movzbl
clc
clc
jmp
call
sar
bts
shr
mov
sar
pusha
add
setle
mov
pushf
mov
pushf
pushf
push
lea
jmp
pusha
movl
lea
jne
bt
cmp
xor
call
mov
mov
pushf
pushf
jmp
call
movb
test
sub
pushf
call
jmp
bt
and
mov
shl
dec
sbb
cmc
add
jl
pushf
mov
call
shl
shl
shl
movzbw
mov
test
mov
movsbw
sbb
mov
jmp
call
call
aam
bt
aam
mov
rcr
lahf
mov
clc
pushf
pushf
test
sub
pushf
push
call
add
cmp
bt
neg
push
jmp
jmp
pushf
pusha
xchg
movsbl
push
jmp
push
rep
push
movw
mov
cmc
ror
push
mov
cmp
bt
pushl
popf
movb
lea
jmp
sub
test
pushf
push
sub
cmp
mov
clc
sub
pushf
push
lea
jmp
mov
movb
pushf
mov
push
pushf
popl
mov
pushl
pushl
popl
mov
mov
pushl
pushf
lea
jmp
stc
not
jmp
sub
lea
movsbw
sub
bt
xor
sar
mov
movsbw
shrd
rcl
rcl
mov
setae
bswap
bsf
call
bt
add
pusha
clc
neg
pusha
clc
jmp
shld
mov
pushf
movl
cmc
mov
xchg
or
bt
sub
movzbl
and
bsf
dec
neg
xadd
clc
bsr
inc
bswap
xadd
lea
bts
bsr
sub
pusha
lea
pushf
pushf
lea
jmp
lea
rdtsc
call
shrd
sub
shr
sub
shl
cmp
neg
cmc
xadd
shl
ror
bswap
jmp
cmc
pusha
lea
jo
neg
stc
push
rol
cmp
cmc
cmp
jmp
call
mov
push
movb
mov
mov
pushl
ret
pushl
popl
mov
movb
lea
jmp
add
movw
pushf
test
shld
movw
pushf
mov
pusha
push
pushf
call
clc
cmc
cbtw
push
cwtl
mov
sub
call
pusha
call
xadd
daa
or
mov
cmp
stc
mov
bswap
cmp
mov
pusha
sub
pusha
div
call
pushl
pushl
popl
pushf
pushf
mov
mov
lea
jmp
call
pushl
mov
push
call
jmp
call
daa
sar
movzww
call
cmp
sub
push
pushf
pushl
pusha
mov
pushf
pushf
movb
movb
lea
jmp
pushl
popl
push
push
movb
pushf
lea
jmp
and
stc
neg
pusha
push
mov
inc
btc
rol
shl
sub
neg
mov
mov
cmp
stc
pushf
add
push
push
pushf
mov
movw
pushf
lea
jmp
pusha
cmp
push
jmp
test
and
push
call
pushf
pushl
popl
movb
lea
jmp
mov
cmc
jmp
jmp
call
mov
jmp
mov
pusha
pushf
pushf
mov
lea
jmp
call
sar
neg
push
bswap
shld
jmp
pushf
mov
call
rcl
neg
sub
movsbw
mov
pusha
lea
jmp
pusha
movw
push
xchg
pusha
mov
bswap
mov
mov
lea
pushl
mov
repz
popl
pushl
pushf
jmp
xor
rol
sub
setg
push
ror
call
pushf
pushl
popl
pusha
mov
pushl
lea
jmp
call
not
pushf
stc
call
pushf
jmp
mov
call
call
pusha
pushf
pushf
popl
push
mov
movb
pushl
popl
push
lea
jmp
pushf
mov
mov
mov
movzbw
bswap
movsbl
not
push
movzbw
mov
not
pusha
repz
popl
lea
add
mov
bsr
shl
mov
stc
btc
mov
or
bt
or
ror
mov
pusha
adc
btr
movsbw
mov
cmc
bt
or
pop
mov
dec
and
call
mov
pushf
stc
clc
sub
pushl
pusha
pushf
mov
mov
push
pushl
lea
jmp
call
jmp
pushf
popl
pushf
pushf
pushf
pushl
popl
pushf
push
lea
jmp
mov
pusha
pushf
pushf
lea
jmp
pushf
jmp
cmc
push
and
call
pushf
add
movw
jmp
mov
mov
push
lea
jmp
cwtl
movsbl
bswap
mov
push
pusha
push
mov
movb
pushl
mov
movb
push
movb
pushf
lea
jmp
xor
test
test
jmp
mov
pushf
jmp
push
pusha
xchg
movsbw
call
setge
pushf
mov
call
mov
push
pop
lea
pushf
bswap
push
lea
call
pusha
mov
not
bswap
push
repz
popl
movzbw
shr
shld
mov
btc
adc
sub
xchg
sbb
rcl
mov
pop
rol
sar
mov
btc
mov
sar
shrd
mov
pushf
mov
mov
ror
stc
btr
pushl
popl
sbb
shr
dec
rcr
movl
stc
shr
mov
jmp
call
push
push
push
jmp
push
mov
jmp
rcl
shrd
xchg
shrd
rol
cmc
mov
neg
bts
cmp
mov
bsf
xchg
xadd
not
xchg
bt
mov
xor
pushl
popl
sub
movl
mov
btr
pusha
mov
adc
stc
btc
add
sub
sar
or
neg
bsr
rol
pushl
btc
bswap
clc
bswap
lea
sar
cmc
bts
sbb
sub
movzbl
push
lea
pusha
pushf
lea
jmp
call
pushf
popl
call
sub
jmp
push
mov
pushf
call
jmp
pushf
mov
pusha
lea
jmp
movw
repz
popl
cmc
neg
mov
neg
bts
bswap
movzbw
mov
shr
movsbw
movzbw
mov
call
add
push
jmp
neg
mov
mov
shl
mov
push
inc
rcr
xadd
push
pusha
test
mov
sar
xchg
pushf
btr
sub
bswap
mov
jmp
cmc
cmp
add
test
pushf
cwtl
cmp
clc
sub
jmp
call
sub
pushl
call
mov
movw
pushf
call
and
mov
btr
mov
or
mov
clc
call
inc
pushl
push
pushf
pusha
rol
clc
sub
pushf
stc
clc
mov
cmp
stc
pushl
pushl
sub
mov
mov
pushf
pushf
pushl
lea
jmp
add
lea
sar
shld
mov
cmc
mov
add
movsbw
shr
sub
pusha
call
neg
not
clc
sbb
bswap
neg
xchg
lea
shl
rcl
adc
sub
movzbl
mov
pushf
push
pushf
push
lea
jmp
bswap
call
pusha
add
push
jmp
lea
pushf
pusha
movb
lea
jmp
test
neg
ror
and
shl
bswap
clc
bsr
lea
jmp
call
pushf
popl
pusha
mov
pushl
popl
pushl
pushl
pushl
lea
jmp
jmp
push
push
movw
mov
mov
movsbw
mov
pushf
jmp
mov
not
lea
push
mov
pushf
pusha
pushf
repz
popl
rcr
mov
pushf
xchg
cmc
btc
sbb
xchg
mov
rcr
cmc
shrd
pop
mov
pop
cmp
xchg
bts
bsf
movsbw
mov
bsf
pushl
jmp
or
pushf
mov
lea
je
stc
jnp
push
cmc
sub
cmc
cmp
xchg
cmc
mov
test
call
pushf
jmp
call
pushf
mov
pushf
pushl
pushf
lea
jmp
movl
movzbw
lea
push
pushf
lea
jmp
neg
mov
inc
jmp
bt
mov
stc
call
stc
pusha
clc
cwtl
clc
cmp
stc
pushl
sub
push
jmp
xchg
push
mov
cld
cld
mov
cld
call
mov
jmp
mul
call
jmp
jmp
pushf
popl
call
jmp
mov
mov
mov
movw
pusha
jmp
cwtl
bswap
push
pusha
pushf
mov
jmp
call
push
lea
jne
jmp
shld
cmp
mov
push
call
push
push
call
sub
shr
pushf
mov
bsr
bsr
add
jmp
pushf
popl
call
jmp
sub
jmp
jmp
neg
stc
push
stc
rol
test
bt
pushf
clc
xchg
stc
call
bswap
pop
lea
pusha
push
lea
jmp
movw
pushf
inc
jmp
pushf
pushf
decl
movb
push
call
push
mov
pushf
pushf
push
push
lea
jmp
shr
sub
not
stc
mov
call
xchg
pusha
sub
stc
clc
movb
pusha
add
cmp
mov
pushf
sub
jmp
pushf
call
pusha
adc
mov
shr
pusha
mov
push
push
cmc
sub
call
dec
jmp
mov
movb
pushl
ret
btc
mov
pusha
jmp
pusha
mov
pushf
pushf
mov
pushf
lea
jmp
pushf
mov
pushf
pushf
popl
jmp
call
mov
jmp
sub
pushf
neg
bt
sub
sar
or
bswap
and
lea
movzbl
add
sub
not
mov
push
lea
jmp
push
inc
cmp
pushl
call
pushf
call
rcl
or
mov
cmc
btc
xor
push
rcl
rcl
push
sbb
cmc
lea
or
pushl
or
and
add
dec
push
bts
bsf
mov
pushf
sub
lea
push
call
lea
clc
neg
call
rcl
mov
adc
movzbl
xor
btc
push
not
push
bswap
lea
call
sub
movzbw
mov
pusha
mov
lea
jmp
bt
add
jnp
pusha
pushf
push
mov
movl
mov
lea
jmp
shl
bswap
sub
notl
rcl
bts
sub
inc
mov
test
bt
bt
sub
jmp
sbb
and
test
rcr
mov
cmc
stc
call
pushf
pushl
xchg
movsbw
mov
movsbw
not
pushf
repz
popl
lea
inc
pushf
ror
mov
shl
push
sar
mov
or
btr
push
bts
push
bsr
push
mov
pushf
mov
pushf
ror
mov
bsr
ror
shld
pushl
popl
movsbw
btr
add
push
add
xadd
clc
mov
neg
bswap
sub
clc
neg
not
bsr
bswap
bswap
btc
mov
push
rcl
bt
sub
pushf
call
and
mov
cmp
sets
mov
pushf
sub
mov
shl
call
shl
clc
mov
mov
dec
mov
cmc
add
pushf
call
pushf
add
mov
pushf
pushl
push
lea
jmp
add
add
call
call
test
adc
pushl
popl
jmp
pushf
popl
pushl
pushl
popl
pushf
push
pushl
lea
jmp
pushf
bswap
push
dec
dec
pushf
not
mov
inc
dec
sbb
and
shl
cmp
mov
clc
pushf
sub
call
call
push
push
xchg
pusha
mov
not
lea
pop
repz
popl
shr
mov
bt
test
inc
rcl
xchg
shr
rol
pop
mov
or
mov
push
xchg
mov
adc
btc
mov
xchg
shrd
dec
shld
pushl
stc
movzbw
clc
push
call
push
pusha
movb
xchg
pushf
lea
mov
movzbl
pusha
lea
repz
popl
bswap
bsr
add
mov
sub
shrd
stc
rcr
xchg
mov
push
mov
call
neg
sbb
call
pushl
popl
pusha
lea
jmp
mov
jmp
push
mov
repz
call
not
cmc
pushf
cmc
sub
bt
pusha
stc
test
not
add
jo
cmc
stc
xor
test
push
test
lea
mov
clc
cbtw
call
movsbw
movzbw
xadd
clc
movzbl
sar
rcr
lea
and
bsr
mov
sub
inc
test
cmp
jne
neg
not
mov
setb
sete
inc
jmp
pusha
bt
cmc
call
pusha
call
pushf
repz
popl
not
rol
shl
mov
neg
push
rcr
rol
push
bsf
call
mov
mov
decl
inc
mov
jmp
xor
ljmp
mov
lcall
mov
pushl
xor
pushl
mov
lcall
pop
mov
inc
push
mov
pushl
mov
fstl
jge
mov
decl
mov
inc
push
mov
decl
mov
jl
mov
lcall
push
mov
push
mov
pushl
mov
call
mov
jmp
inc
mov
jmp
inc
mov
push
push
mov
ljmp
push
push
mov
jmp
aaa
mov
inc
push
mov
lcall
cmp
decl
mov
ljmp
mov
ljmp
inc
mov
decl
mov
decl
mov
call
mov
decl
push
mov
ljmp
xor
ljmp
xor
ljmp
mov
jge
mov
push
push
mov
pushl
mov
ljmp
mov
decl
dec
mov
decl
mov
jl
mov
ljmp
xor
call
sub
push
push
mov
ljmp
xor
dec
inc
mov
ljmp
dec
mov
decl
inc
mov
jge
mov
ljmp
inc
mov
lcall
xor
mov
ljmp
inc
mov
jge
mov
incl
mov
call
mov
incl
mov
jmp
aaa
mov
incl
mov
decl
mov
incl
mov
decl
push
mov
jmp
inc
mov
incl
mov
decl
mov
incl
mov
fstl
ljmp
push
mov
decl
xor
jmp
xor
incl
mov
lcall
inc
mov
pushl
mov
lcall
mov
jmp
aaa
mov
jmp
aaa
mov
ljmp
mov
dec
inc
mov
pushl
mov
pushl
mov
fstl
decl
xor
clc
inc
mov
decl
mov
inc
push
mov
inc
push
mov
decl
mov
decl
mov
decl
push
mov
ljmp
mov
decl
mov
inc
push
mov
clc
inc
mov
inc
push
mov
jge
mov
inc
push
mov
call
mov
inc
push
mov
inc
push
mov
inc
push
mov
ljmp
mov
inc
push
mov
jp
mov
inc
push
mov
push
mov
inc
push
mov
incl
mov
incl
mov
inc
push
mov
call
sub
inc
push
mov
ljmp
mov
bswap
sub
xchg
shld
inc
add
mov
bt
rcr
pushl
popl
shld
dec
movl
rcl
inc
and
mov
lea
sub
sar
pushf
bsf
shrd
neg
rcr
bswap
bswap
shr
not
bsf
lea
bsr
call
mov
std
mov
bswap
pusha
pop
lea
cld
mov
pop
mov
push
pushf
std
cld
pushl
pushl
rep
shl
sub
mov
shl
shr
mov
cld
pushl
popf
push
pushf
push
movl
lea
jmp
pusha
mov
call
xchg
jmp
sub
movsbw
pusha
push
test
not
not
shl
xor
cmc
jmp
pushf
pushl
pushl
xchg
pop
mov
movzbw
mov
mov
pusha
call
ja
shrd
shrd
mov
das
lea
add
sub
aad
shl
jmp
push
mov
pushl
push
pushf
popl
pushf
pushf
movw
pushl
popl
pushf
movb
pushl
pushl
lea
jmp
movzbl
pushf
jmp
ror
shl
aas
lea
stc
cmp
jmp
xor
mov
call
xor
clc
cmc
mov
pushl
cmc
stc
sub
pushl
pushf
inc
call
call
mov
divl
movb
call
pushf
call
call
xchg
pusha
bswap
mov
movsbl
mov
push
push
pushl
ret
repz
popl
add
mov
shl
movsbw
mov
pusha
mov
bt
pushf
mov
or
xchg
or
bsf
sar
mov
bts
rcr
pushl
popl
adc
movl
not
mov
sbb
btr
sub
not
test
call
sub
push
movb
pusha
sub
mov
cmp
bswap
call
rol
lahf
call
pushf
mov
pushf
movb
pushf
pushf
lea
jmp
shr
or
mov
pushf
add
pusha
lea
jmp
pushl
popl
push
pushf
lea
jmp
add
mov
bts
xor
xor
pusha
ror
cmc
sub
sub
ror
movzbl
sub
inc
mov
pushf
jmp
movzbw
bswap
movzbw
mov
push
pusha
mov
lea
call
sar
mov
stc
add
pushf
lea
jmp
pop
mov
test
call
test
add
pusha
call
push
xchg
pusha
lea
push
pushf
mov
not
pop
repz
popl
stc
shrd
mov
shld
dec
mov
pop
mov
rol
mov
inc
xor
cmp
stc
mov
mov
bsf
mov
neg
movsbw
pushl
bsf
mov
push
pusha
mov
pusha
movzbl
cmc
sub
call
push
xchg
push
lea
mov
not
repz
shld
pusha
cmp
mov
mov
xor
pushf
rcl
mov
rol
call
shl
mov
mov
mov
cmc
test
clc
bt
sub
push
shr
pusha
jmp
mov
mov
mov
movb
call
movl
mov
jmp
sub
xchg
mov
stc
call
mov
mov
repz
popl
push
btc
stc
mov
mov
bts
shr
dec
movzbw
xchg
bt
cmc
or
mov
clc
bsr
bts
rcr
mov
bsr
shld
push
btr
xchg
xor
mov
rcr
xadd
and
pushl
popl
mov
cmc
shrd
pop
movl
adc
shl
rcr
xchg
mov
bt
not
sub
stc
shr
cmc
pop
neg
xchg
adc
stc
add
bswap
neg
lea
lea
shl
movzbw
bsf
sub
call
xor
bt
not
bt
pushl
test
sub
jmp
shr
shl
and
mov
test
push
jmp
push
not
push
pushf
pushf
repz
popl
bt
call
cmp
sub
jmp
add
jmp
bsf
xor
movzbw
mov
sbb
call
pushl
movb
movb
mov
push
pushf
pusha
push
lea
jmp
xchg
bswap
neg
ror
bsf
rcl
lea
bsr
movsbw
sub
movzbw
mov
pushf
pushf
pusha
pushl
lea
jmp
neg
movzbw
bswap
pusha
bsr
lea
lea
ror
test
sub
lea
push
lea
movb
pusha
lea
jmp
lea
mov
pusha
lea
jmp
shl
call
or
movzbl
push
pushf
cmp
xor
cmp
call
push
add
clc
shrd
jmp
xor
add
mov
adc
adc
mov
cmp
xchg
not
shrd
cmp
pop
mov
lea
pushl
popl
rcr
rcr
movl
xchg
mov
rcl
sbb
sub
sar
btr
xchg
xor
neg
and
btr
rol
xchg
bswap
sbb
sbb
bts
lea
bswap
sub
sub
lea
mov
pushf
pushf
pushf
lea
jmp
clc
ja
cmc
xor
cmc
stc
lea
cmc
jmp
xor
pushf
btc
ror
inc
add
sub
and
movzbl
bsr
shl
stc
mov
mov
jmp
pushf
xchg
call
bt
call
shl
mov
shld
call
sub
push
movb
jmp
jmp
mov
mov
mov
lea
jmp
pusha
mov
pushf
lea
jmp
movb
pushf
mov
jmp
lea
bt
test
call
pushl
popl
movw
pushf
pusha
movb
lea
jmp
lea
rol
shrd
sub
lea
call
mov
pushl
push
lea
jmp
call
mov
mov
mov
movw
pushf
lea
jmp
jmp
bts
aaa
call
push
xor
movb
jmp
mov
pushf
pushf
lea
jmp
test
bsr
shl
mov
shr
push
ror
mov
mov
test
stc
add
pusha
call
jmp
cmc
movzbw
mov
test
adc
shl
mov
test
pusha
cmp
bt
sub
push
cmp
cmc
cmc
shr
push
pushl
call
rol
bsr
mov
cmc
pushf
add
pushf
mov
push
pushf
lea
jmp
movsbw
mov
not
repz
cmc
rol
sbb
rcl
push
or
btc
push
shl
xor
push
and
push
bt
setle
sbb
movsbl
push
push
clc
movsbw
sub
mov
lea
sar
jae
pushl
sub
sbb
movzbl
push
shl
or
inc
mov
pushf
rol
call
jmp
mov
pushl
popl
push
lea
jmp
aam
cbtw
sbb
cbtw
mov
cmc
stc
push
mov
sub
clc
stc
test
add
pushf
jmp
jmp
rcr
xchg
rcr
rol
mov
bsr
pusha
pushl
pop
mov
sar
movzbl
not
cmc
xchg
and
adc
shl
btr
mov
bsr
jmp
test
sub
jmp
neg
pusha
bswap
btc
pop
lea
lea
btc
pop
sbb
sub
movsbw
not
mov
mov
push
pushf
pushf
push
lea
jmp
aam
mov
jmp
mov
pushl
movb
lea
jmp
bsr
inc
mov
cmc
pusha
jmp
movl
pusha
mov
pushf
push
pusha
pushl
ret
adc
neg
mov
bt
add
pushf
pusha
push
lea
jmp
btr
pushl
popl
movsbw
pusha
dec
pushl
movl
ror
ror
sar
btc
mov
bsf
mov
sub
rol
jmp
bt
pusha
bt
call
pushl
jmp
adc
aaa
call
bsf
mov
sub
rcl
mov
jns
bt
not
bt
cmc
bt
not
call
lea
jg
inc
jmp
neg
mov
shrd
sub
shld
dec
bsf
add
movzbw
adc
shl
call
pushf
mov
pusha
lea
jmp
mov
lea
jo
pushf
pushf
movb
jmp
bswap
mov
push
pushf
add
movw
push
movb
movb
lea
jmp
mov
movb
movb
mov
movb
lea
jmp
lea
lea
pushl
mov
lea
jmp
rcl
sar
bsr
pushl
neg
sbb
bswap
push
inc
test
mov
shr
sub
and
stc
rol
sar
neg
bt
bswap
lea
mov
xadd
ror
sub
rcl
stc
mov
shl
pusha
pushl
mov
sbb
add
shrd
jmp
mov
push
pusha
pusha
push
lea
jmp
mov
pushf
mov
pushl
lea
jmp
pushf
lea
jne
sub
xorb
lea
setge
push
mov
pusha
push
mov
movw
lea
jmp
xor
call
lea
jne
xor
cmp
rol
clc
mov
pusha
test
stc
and
stc
call
daa
mov
or
neg
sar
mov
cmp
cmp
cmc
add
pusha
mov
push
pushl
lea
jmp
call
sbb
movzbw
sbb
mov
rcl
ror
mov
jmp
pushf
call
pusha
pop
cwtl
mov
cwtl
setp
lahf
push
mov
jmp
shr
sar
lea
bts
ror
cmp
sub
mov
call
aaa
clc
rcl
mov
lea
mov
or
test
ror
xor
mov
call
movw
pushf
mov
movb
lea
jmp
sub
cmc
add
bt
call
rcl
mov
cmp
bt
push
cmp
add
pushf
pusha
lea
jmp
mov
push
pushf
jmp
lea
jp
mov
pushf
pushf
popl
jmp
not
cmp
xor
jmp
xchg
jmp
cmc
test
add
call
bsf
pushl
popl
sar
neg
movl
bts
sbb
movsbw
mov
call
neg
xor
lea
sub
bsf
btc
btc
neg
dec
clc
bswap
btc
shl
lea
bt
sub
lea
mov
push
pusha
pusha
lea
jmp
movw
cmc
add
push
push
mov
movw
lea
jmp
pushf
popl
mov
jmp
jmp
mov
push
mov
movzbw
not
lea
repz
popl
cmc
and
shl
or
mov
btr
cmc
cmc
mov
cmc
stc
xchg
rol
mov
ror
lea
mov
bts
shl
shl
ror
xchg
btr
bt
cmc
bsr
mov
xor
inc
pushl
popl
cmc
rcl
movl
lea
inc
ror
mov
call
rol
clc
sub
bswap
or
rcr
neg
bt
shr
shr
bswap
pushf
lea
shrd
not
xor
sub
call
call
movw
call
jmp
add
cmp
mov
rcl
ror
adc
bsf
mov
dec
mov
bts
pushl
popl
shr
stc
lea
bsr
movl
pop
rol
and
mov
neg
dec
neg
dec
sub
lea
dec
shrd
bts
neg
ror
clc
bswap
cmc
add
lea
pushf
dec
inc
bsr
sub
lea
call
sub
pusha
jmp
mov
mov
pushf
movb
movb
lea
jmp
shl
movb
mov
mov
call
push
mov
pusha
push
mov
pushl
pushl
ret
xchg
push
mov
mov
repz
popl
pusha
mov
dec
movsbw
test
xchg
movsbw
or
bswap
mov
neg
sbb
rol
mov
shr
xor
movsbw
rcl
mov
xadd
mov
add
pushl
popl
rcl
lea
movl
rol
mov
cmc
sub
sub
neg
lea
bsr
neg
btc
bswap
sub
neg
bswap
stc
test
call
jmp
pushf
popl
pushf
call
pushl
mov
jmp
xor
pushl
popl
jmp
pusha
pusha
movb
xchg
bswap
movl
not
not
mov
lea
jmp
mov
pusha
pusha
lea
jmp
pushl
popl
mov
movb
lea
jmp
bt
or
call
pushl
popl
push
push
lea
jmp
cmc
bts
mov
pusha
add
movw
pushf
popl
pusha
lea
jbe
push
pushf
pushl
popl
push
pushf
movb
lea
jmp
movl
movzbw
mov
pushf
cmp
jmp
pusha
mov
push
movb
call
pusha
push
pushl
popl
pushf
pushf
lea
jmp
inc
jnp
cmc
dec
lea
cmc
cmp
cmp
call
push
jmp
pusha
not
adc
movzww
cmc
test
cmc
add
jmp
add
jge
clc
sub
cmc
call
shl
rcl
cmc
test
mov
stc
clc
push
stc
add
pushl
pushl
lea
jmp
mov
repz
popl
clc
call
