push
call
ret
ret
xchg
pop
loope
out
inc
cltd
out
mov
dec
mov
movsl
jl
fwait
jae
adc
cmp
adc
jle
jb
jmp
ret
incb
sti
mov
pop
push
test
add
in
add
lea
orb
cli
and
sbb
jns
mov
rol
sti
jns
mov
and
jnp
mov
mov
xchg
mov
shl
cld
cmpsb
push
inc
and
xchg
mov
and
ljmp
cmpsl
hlt
and
lret
jl
lcall
dec
mov
push
fldenv
add
inc
sarb
cmp
jb
outsb
mov
lds
loop
adc
je
imul
imul
cmp
outsl
sarl
fwait
movsb
cmp
inc
rol
out
mov
sub
in
inc
in
pop
sub
sbb
rcl
mov
into
jl
cmpb
cli
add
adc
scas
das
loop
pop
cmp
xor
shlb
push
sbb
cmp
mov
dec
dec
mov
push
jp
out
repnz
cltd
add
sub
mov
ljmp
popa
fnstcw
or
lahf
mov
xchg
cmpb
sub
jmp
xor
push
mull
inc
mov
out
outsb
pop
test
mov
lods
xchg
mov
jle
xchg
push
lods
and
cmp
movsb
fistl
fstp
movsl
sbb
inc
js
mov
shl
cmp
jbe
mov
imul
cmpsb
add
fwait
stos
in
dec
xchg
xor
mov
in
jp
test
mov
jns
cltd
lret
dec
dec
push
insl
movsb
sbb
push
cli
xchg
add
das
loope
mov
das
sahf
fsubl
pop
push
adc
les
cmpsl
pop
aaa
cld
rorl
loope
mov
into
add
mov
test
add
jo
adc
xor
loop
mov
xchg
sti
jno
xor
sbb
xor
xor
imul
push
ds
imul
in
pop
or
lods
mov
mov
in
leave
add
pop
push
scas
adc
xlat
mov
sub
cwtl
mov
push
adc
daa
mov
mov
jge
es
and
lcall
xchg
pop
or
xchg
xchg
sbbl
cmp
enter
add
cmpb
aad
adc
dec
sbb
divb
mov
jno
insl
pop
mov
das
lock
imul
insb
sub
scas
stos
jle
mov
adc
mov
les
fcomp
add
mov
dec
fucomip
push
iret
push
mov
cld
dec
xchg
jge
sarb
jge
pop
add
clc
in
insb
into
lcall
enter
cs
jg
fldl2t
cmpsb
adc
daa
pop
subl
divb
xchg
pop
mov
pop
in
sbb
mov
ds
cltd
ds
xchg
stos
scas
xor
xchg
jb
push
push
nop
lock
out
adc
adc
inc
and
lcall
fldt
mov
inc
mov
pop
cmp
cmp
std
mov
cltd
addl
sahf
mov
rcrb
in
or
std
xchg
rclb
cwtl
or
daa
sbb
cmp
fucomip
adc
outsl
or
mov
insl
pop
andl
out
mov
add
seta
mov
xchg
jl
pop
push
mov
outsb
inc
add
jl
and
test
and
insb
add
out
or
xlat
pop
orl
inc
insb
test
adc
or
sub
cmp
jb
cmp
aad
pusha
fisubs
jne
stos
imul
insl
and
fcomps
call
fnstenv
ret
loope
inc
mov
loope
jmp
inc
loope
xchg
test
repz
xchg
movsb
ss
adc
xchg
pop
xchg
pushf
int3
in
mov
movsb
sub
push
xchg
out
in
loopne
xlat
xor
pop
jae
inc
repnz
sbb
call
pushf
or
mov
out
addr16
iret
inc
bound
mov
pop
int
jmp
fmul
push
jl
lcall
shlb
cmp
test
test
cmp
clc
mov
das
cmp
insb
orl
cltd
sub
lods
stos
xor
cmp
aad
ret
pop
cs
inc
cmp
ja
lea
and
push
icebp
ds
test
and
push
dec
sub
jne
std
rcr
pusha
inc
mov
dec
xor
sahf
jg
xchg
jle
rcl
dec
adc
push
cmpsb
data16
push
jo
pop
movsl
jns
pop
cwtl
sbb
dec
mov
icebp
sbb
jae
pop
sbb
mov
sti
outsb
cmc
lahf
outsl
sub
fcoms
mov
iret
xor
or
push
test
cmpsb
pusha
stos
jl
test
cmpsb
pop
pop
mov
sub
movsb
dec
loopne
sar
shlb
jbe
or
or
orl
cmovg
mov
std
jno
fwait
push
jne
clc
adc
mov
cmpsb
into
xor
adcl
jmp
jbe
add
add
sbb
sub
out
sar
mov
test
jb
maxps
or
lcall
xchg
inc
mov
aad
push
ljmp
aad
pop
out
arpl
xor
std
aaa
iret
in
jl
adc
daa
pop
pop
xchg
scas
lods
xchg
icebp
xchg
scas
daa
xor
jmp
fcompl
insl
xchg
in
ss
je
mov
rcrb
xor
out
add
out
mov
jl
xorb
pinsrw
lret
add
cmp
lods
scas
stc
inc
jecxz
movsb
mov
pop
add
in
icebp
push
adc
dec
rcll
adc
dec
shll
sbb
es
lea
cmp
cs
leave
cmp
lock
cmp
stos
pushf
imul
mov
cltd
mulb
cmp
mov
movsl
mov
adc
jae
out
mov
dec
xor
jno
outsl
inc
stos
jge
icebp
or
cmp
int
stos
jo
movsl
arpl
movsb
cmp
rorb
icebp
sbb
stos
fisubs
cwtl
sbb
dec
dec
jge
push
lock
rorl
clc
cmp
dec
cmpsb
add
cs
inc
sub
adc
dec
and
mov
int3
lock
out
cwtl
cmp
mov
aaa
pop
bnd
in
mov
rorb
xchg
sahf
inc
fcmovb
sub
cmp
arpl
pop
outsl
pushf
cmp
divl
mov
push
push
inc
in
add
aam
push
lock
or
dec
and
les
push
xchg
dec
test
fsub
shr
fcoml
jne
push
lahf
adc
sbb
movb
jb
cmc
mov
mov
or
fwait
inc
xor
cmp
mov
cs
cmp
jbe
mov
mov
loop
push
cmpsb
mov
push
sub
xchg
mov
stos
mov
xor
push
xor
jle
ss
aas
sti
jno
lds
repz
xor
aad
je
cmc
aad
xchg
or
clc
add
movsb
cmc
repz
push
push
fwait
mov
std
bnd
orb
add
aas
sub
loopne
push
inc
lret
and
sub
jo
xchg
cmp
dec
popf
pushf
or
aas
add
daa
jle
cltd
mov
ret
inc
jae
xlat
ljmp
push
mov
adc
faddp
push
mov
popaw
add
std
dec
and
xor
adc
cmp
cmp
mov
pop
xchg
aad
pop
add
or
fst
jnp
iret
movsb
cli
sbb
adc
ds
pop
into
stos
fistpll
mov
int
decl
sbb
mov
or
mov
test
push
shl
popa
pop
push
filds
sbb
push
test
icebp
xchg
xchg
dec
pushf
fucomip
mov
mov
sub
cmp
add
cli
mov
jg
dec
xchg
rolb
pop
adc
cmp
xorl
dec
pusha
orb
repz
sub
jne
cmpsl
mov
iret
jbe
xchg
movsb
dec
pusha
add
sub
add
jbe
jns
pop
ljmp
mov
mov
fs
dec
cmpsl
push
mov
pop
xor
fstps
mov
push
out
icebp
insl
and
add
cld
not
push
pop
jnp,pt
ja
jns
inc
xchg
mov
les
cwtl
pop
jge
push
ficoms
fistpll
lea
and
subb
std
xchg
xor
scas
jmp
rorb
cltd
pop
das
fldt
gs
enter
in
int3
popf
pop
push
sbb
test
ret
push
inc
repz
mov
adc
xchg
aaa
js
adc
cwtl
sarb
lret
and
mov
or
xor
xchg
jbe
xor
pop
lods
inc
daa
or
inc
pop
cmp
lock
cli
cmpsb
icebp
jnp
push
mull
rcrl
testb
rorl
dec
jbe
outsb
faddl
fmuls
sbb
jge
cmp
mov
in
sbb
inc
inc
stos
pop
roll
push
add
inc
mov
clc
sub
dec
test
scas
mov
sub
adc
movsl
mov
sti
aas
je
fistl
aad
cmpsl
test
js
cmc
pushf
int3
jbe
pop
xchg
rclb
movl
add
into
sbb
repnz
jecxz
call
dec
mov
pusha
adc
cmp
xor
shlb
dec
jns
pop
dec
inc
dec
out
in
fimuls
andl
and
sbb
gs
in
xchg
repnz
test
leave
fiadds
loop
adc
in
mov
lods
mov
out
and
or
and
mov
out
fs
fcmovb
cli
adc
dec
jg
pop
addr16
pop
mov
adc
push
jge
push
jecxz
jp
inc
data16
insb
push
mov
mov
mov
jno
ds
or
or
push
lret
xlat
ljmp
jmp
stos
int3
mov
lret
or
fs
cmp
enter
ds
cmpsl
outsb
ss
fsubp
xor
es
inc
sub
jns
out
ds
insl
adcb
sub
rcrb
xor
rorl
movsl
push
mov
xchg
hlt
pushf
lock
sti
in
xor
ret
or
inc
lock
and
std
or
nop
inc
mov
inc
inc
hlt
notb
sbb
cmpsl
subl
imul
push
fists
or
ds
dec
mov
mov
cmp
lret
sahf
repz
sbb
pop
pop
sbb
sub
pusha
mov
sbb
sub
dec
push
and
inc
pushl
xchg
js
inc
mov
xchg
enter
lods
daa
arpl
xchg
jg
push
les
add
fbld
sti
dec
call
incl
jns
mov
andl
cmpl
adc
or
js
pop
sti
push
sub
in
jp
pop
mov
pop
push
orb
repz
jmp
inc
sbb
popf
mov
js
inc
aad
aas
xchg
mov
xor
cltd
cmp
outsb
cmp
loop
push
stos
mov
inc
test
je
xor
xlat
push
mov
dec
pop
mov
popf
push
mov
xor
popa
add
sub
cmpsl
mov
cmp
inc
push
repnz
push
lret
fildll
xchg
add
xor
pop
in
fdivr
add
and
cli
stc
aam
xor
stos
scas
cmp
cmp
mov
cmp
jno
inc
or
inc
jbe
push
mull
insl
jns
push
insl
sbb
sbb
pop
xor
jne
mov
push
rclb
inc
loopne
cmp
lret
add
or
ljmp
jmp
adc
dec
inc
push
stos
fsts
or
pusha
push
call
out
subb
jno
scas
in
adc
je
add
icebp
xorb
and
pop
sbb
icebp
xor
adc
lret
mov
imul
loopne
cmc
ret
mov
movsb
fildll
lcall
sti
lret
enter
xchg
lea
adc
adc
xchg
fsubs
mov
adc
popf
fidivl
inc
jge
inc
clc
dec
push
ljmp
lret
insl
shl
or
fsubrs
sbbl
inc
push
subl
shl
iret
mov
out
iret
pushl
popa
dec
cmp
out
sbb
jb
out
shlb
out
lret
imul
daa
pop
sub
and
outsb
addr16
sbb
fistpl
or
push
out
lea
je
pop
out
out
test
ss
and
js
dec
add
xor
mov
mov
xor
leave
outsb
dec
nop
xorl
push
in
js
xor
xor
repz
in
inc
sub
ja
insl
jne
xchg
dec
je
lods
jbe
xor
fidivs
sub
or
sbb
std
cltd
mov
mov
mov
mov
repz
dec
mov
add
or
jg
sub
dec
mov
mov
stos
mov
cld
sub
xchg
xchg
mov
sub
lcall
cmp
cwtl
and
add
inc
cmp
mov
xchg
sar
and
jmp
mov
cmp
push
cwtl
test
mov
arpl
ret
hlt
and
cli
scas
sti
dec
push
nop
mov
xchg
inc
lock
xlat
add
ficoms
aam
jg
xchg
cs
add
push
and
rcr
cmp
pop
push
fwait
sbb
push
xor
sar
rcrb
ret
or
adc
inc
push
pop
mov
adc
mov
divb
adc
mov
xchg
test
inc
jne
or
mov
fwait
imul
test
jecxz
adc
mov
lods
out
int
ljmp
cs
int3
sbb
push
add
sahf
jl
insb
std
out
mov
xchg
jo
sub
inc
xor
into
test
sbb
and
sub
es
sub
mov
outsl
in
adc
rcr
jl
jo
pop
jle
mov
and
test
insb
dec
mov
dec
xor
sbb
sbb
and
and
in
mov
cmpsl
cmp
stos
in
push
lcall
add
stc
xchg
das
lds
sub
ds
sbb
push
ret
adc
insl
hlt
rcrl
out
mov
ljmp
adc
ss
xor
xchg
and
lret
clc
add
jo
xchg
out
jne
xor
out
in
lcall
fwait
jae
sbb
push
cs
test
ja
sub
sub
mov
out
mov
xor
push
movsb
std
jne
ljmp
mov
decb
in
sub
jnp
loopne
pop
fcmovnbe
test
bound
ja
xchg
mov
push
neg
stos
out
push
cld
pushf
loope
sti
push
jmp
lcall
jg
mov
inc
jns
je
xor
cmp
cmp
packuswb
mov
xor
xorl
popa
mov
pusha
bswap
mov
dec
jnp
lcall
sbbb
test
lcall
cli
sbb
popa
pop
mov
jmp
xor
fidivrl
push
cmp
ds
ja
xlat
sub
mov
cmp
add
cmp
xchg
test
stc
jno
gs
out
add
gs
les
test
test
mov
jle
pop
xor
jo
and
movsl
push
sub
mov
cltd
or
and
xlat
cmpsb
scas
or
push
iret
xchg
xor
into
and
test
out
leave
aas
call
mov
inc
mov
mov
push
popl
aad
push
fbstp
popf
pop
cltd
jae
adc
push
lret
hlt
mov
pop
mov
inc
mov
jecxz
out
lret
enter
out
fsubl
push
xchg
xchg
hlt
in
and
jnp
das
sbb
adcl
jg
mov
pop
mov
lret
jb
mov
imul
sbb
fs
mov
cmc
lods
pop
push
addb
add
hlt
loopne
rorl
xlat
cld
ss
insl
adc
fildll
mov
popf
shrl
shll
or
cmp
mov
in
inc
imul
fldt
xchg
adc
xchg
insb
fidivl
stos
pop
push
sbb
aad
iret
mov
insl
icebp
pop
jg
cltd
shlb
push
std
out
xchg
or
stos
cmp
testb
or
push
mov
arpl
dec
lret
pop
out
ret
int
pop
les
daa
jae
aam
jns
inc
jnp
inc
cmpsb
mov
and
adc
mov
stos
hlt
lods
cmpb
pop
outsb
sbb
xchg
hlt
ljmp
push
test
push
jg
xchg
push
inc
mov
sub
daa
repz
iret
cmp
imul
jmp
enter
jle
xor
add
push
push
sub
stos
ficoml
scas
frstor
adc
fs
es
jge
and
xchg
sub
loopne
jb
fs
dec
cltd
mov
dec
and
cli
jl
xchg
out
movsb
adc
dec
xor
jae
test
cmp
fcompl
fsubrl
and
jae
sub
sub
out
mov
pop
mov
xor
mov
sub
xor
cs
psubsb
shrb
pop
adc
push
fcoms
cmp
sub
mov
bound
xchg
jl
push
inc
or
xchg
or
es
sbb
mull
adc
out
inc
gs
mov
mov
mov
push
stc
sti
sti
xlat
pop
daa
test
pop
dec
movsb
cmpsl
pop
lret
dec
pop
lock
fs
stos
dec
nop
mov
mov
lcall
fidivl
inc
pop
jmp
lcall
push
cmp
insl
movsl
idivb
sub
int3
or
fildl
aas
sahf
push
leave
dec
mov
dec
xor
xchg
xor
mov
sbb
sarl
ret
mov
mov
adc
jne
in
stos
rol
cmc
xor
pusha
out
push
ret
fwait
jl
insb
pop
cmp
pop
jno
xor
int
fsubr
push
mov
fcompl
mov
xchg
daa
fdivl
mov
and
das
xchg
sbb
shlb
mov
jae
push
push
adc
movsb
xchg
lock
iret
cmp
fnsave
ja
cmp
mov
in
je
and
in
push
mov
fldenv
shufps
ret
xor
adcl
xchg
xchg
jb
outsb
and
push
cmp
bound
cmp
lahf
xchg
pop
sub
lret
add
lea
push
mov
daa
lea
add
and
movsb
rorb
aam
xchg
sbb
dec
and
mov
ret
mov
mov
jp
sub
inc
sub
adc
and
dec
mov
mov
add
outsb
sbb
or
fdivrs
fisubrl
mov
in
lods
in
mov
cmp
addb
inc
inc
mov
ret
enter
xor
in
test
adc
adc
shl
mov
jne
inc
mov
test
mov
ret
jo
pop
xor
dec
movsl
test
out
pop
mov
in
jl
jbe
aaa
jl
push
xchg
sbb
das
add
js
adc
jns
mov
jge
pop
leave
lods
clc
or
rcrl
cmp
ret
pop
roll
mov
mov
or
lods
inc
sti
mov
fucomp
adc
adc
cmpsl
xchg
cmpsb
xchg
push
in
cmpsl
xchg
jg
adc
ficomps
mov
mov
test
out
movsl
jb
ret
cld
inc
stc
test
pop
in
mov
bound
sbb
and
insb
gs
pusha
or
arpl
int3
xchg
xlat
and
iret
mov
ljmp
popf
fcoml
cmp
sbb
rep
jle
jo
sbb
sti
jmp
mov
bound
push
aad
push
ja
push
xchg
test
cli
dec
shl
fldlg2
add
dec
pushf
add
or
xchg
sbb
sub
sub
pop
and
sarb
fstl
out
push
mov
mov
mov
push
ds
je
imulb
pushf
shlb
fdivrs
std
xchg
sub
repz
lretw
rcr
pop
or
dec
idivb
xchg
or
fsubr
xor
es
hlt
lds
notl
arpl
cltd
sahf
push
cmp
dec
and
and
ja
pop
fcoml
sub
inc
sbb
fwait
pop
orl
xchg
pop
pop
shrd
adc
push
scas
sub
lcall
or
push
stc
data16
pop
push
lret
cmp
cmpsb
filds
fwait
and
inc
adc
out
jb
pushf
mov
mov
cwtl
loopne
jecxz
sub
inc
sub
addb
decb
mov
out
sub
lds
jns
arpl
popa
neg
mov
packsswb
pop
jle
into
mov
sub
fisttpll
shll
dec
jge
mov
adc
ja
into
dec
sub
sbbb
loopne
movsl
pop
xchg
cltd
xchg
ffreep
iret
mov
xor
cli
sbb
scas
jbe
lock
loop
mov
xor
mov
cltd
cmpsb
test
in
add
pop
aaa
cltd
popa
sub
popf
cmpl
adc
sbb
xor
push
lret
lret
cs
int
jl
aas
mov
icebp
cmp
hlt
subl
cmpsl
out
pop
pop
ss
and
dec
dec
shll
jle
dec
push
add
dec
jo
xchg
daa
aas
sub
loope
sbbl
push
xor
imul
and
testb
insb
xchg
or
test
idivb
sti
lds
orl
jnp
andl
mov
cmp
enter
xor
cmc
sbb
push
lret
inc
mov
xchg
mov
xchg
xor
mov
lahf
xchg
xor
sbb
adc
cmp
stos
xor
or
pushf
push
mov
or
pop
imul
inc
shrl
loop
data16
mov
pop
jge
aaa
mov
loopne
lods
pop
fxrstor
lcall
dec
daa
stc
fs
dec
sub
dec
fiadds
cmc
frstor
mov
dec
ja
sbb
dec
hlt
shll
mov
lret
mov
pop
int3
repz
movsb
xchg
loop
add
notb
hlt
iret
push
jns
inc
rcl
cmp
test
jno
inc
jno
pop
mov
or
pop
pusha
and
sub
fs
mov
lret
cmp
lds
cli
cmp
xabort
sahf
xchg
out
cmp
jbe
xchg
xchg
outsb
or
jge
jb
xor
outsb
lcall
xchg
push
xchg
ficoms
inc
xchg
xor
sbb
jge
lahf
aam
cld
push
mov
lea
xchg
cmp
mov
stos
mov
test
adcl
push
jle
imul
mov
int
cmc
push
nop
jge
dec
mov
mov
addr16
sbb
cmp
jmp
leave
pop
or
mov
mov
repnz
mov
in
stos
mov
jmp
add
jle
pop
mov
mov
cmp
sub
jnp
cmpsl
xchg
incl
dec
pop
or
idivb
mov
push
in
aaa
ds
cltd
ds
jmp
jno
pushf
inc
adc
sti
mov
movsb
pminsw
das
cmp
mov
out
fiadds
out
and
test
xchg
mov
fstps
inc
nop
inc
jo
in
js
mov
neg
mov
pop
mov
sub
test
sbb
call
jge
and
jge
fstps
dec
dec
pop
testb
sahf
dec
jno
out
mov
icebp
xor
popa
sbb
jg
ret
jno
rcl
loopne
je
outsl
es
dec
sbb
es
arpl
add
cltd
push
mov
jmp
mov
fs
dec
test
and
or
sbb
mov
jecxz
cwtl
out
xor
ja
mov
cmp
mov
cld
int3
enter
fucomp
ret
ret
push
inc
mov
call
dec
add
xor
daa
add
arpl
push
add
inc
or
push
icebp
sbb
shrl
mov
stc
sarb
and
ss
int3
lahf
lock
shlb
dec
in
imull
loop
insb
insb
fimull
push
ja
pop
mov
push
xor
cmp
sarl
sub
clc
dec
ret
cmpsl
fldt
pop
pusha
leave
pusha
insb
js
adc
cli
daa
pop
daa
xor
cmp
push
push
lea
in
clc
mov
pop
pop
lret
in
xor
aam
fdivl
inc
push
adc
sub
arpl
pusha
jecxz
aaa
icebp
pop
adc
das
decb
rorl
loopne
add
jp
jnp
out
xchg
ljmp
out
add
cmpsb
stos
ds
scas
push
or
movswl
pop
mov
int
mov
fldenv
scas
in
ja
mov
fisubrs
xchg
cmp
test
mov
int3
push
push
imul
outsb
rclb
fidivrl
mov
imul
dec
imul
lret
int
jnp
hlt
out
jne
mov
adc
pushf
aas
mov
push
cld
lds
cltd
mov
add
and
cmc
aad
dec
or
mov
lea
sub
sub
pop
xorl
xor
mov
adc
jp
outsl
jno
push
movsl
adc
xchg
and
xchg
mov
xchg
std
sbb
add
pop
pop
sub
fildl
cmp
mov
sub
rorl
and
and
cmpsl
xchg
aaa
popf
xchg
pslld
adc
cmp
push
jmp
mov
push
mov
mov
jp
mov
shll
jl
add
pop
cmc
pminsw
out
pop
pop
jge
int
not
cli
dec
insl
aad
mov
test
xor
sbb
insl
and
pop
sub
or
xlat
and
mov
jnp
mov
mov
cltd
xor
cmc
shlb
mov
xchg
jg
stc
das
sarb
testb
ret
mov
push
inc
cmpsl
xor
sub
sub
loopne
out
repz
sbb
fimuls
dec
xor
mov
or
movsl
data16
or
xchg
jmp
neg
jmp
pushf
pop
mov
inc
shlb
in
mov
shlb
movsl
cs
mov
xchg
imull
cmp
jnp
nop
mov
push
pop
adc
scas
fsubp
scas
imul
jno
lea
sbb
aas
outsl
adc
movsb
xchg
aam
out
aad
xchg
gs
fldlg2
les
sbb
mov
fcoml
mov
lcall
push
mov
flds
clc
cmc
mov
subl
ja
jae
stos
push
cwtl
inc
in
dec
sub
test
mov
push
cmpsb
or
fldl
mov
xchg
je
in
mov
stos
daa
ret
loope
imul
cmp
movsb
and
out
stc
fstpt
and
outsb
mov
hlt
stos
jecxz
jecxz
outsb
aaa
into
jno
cli
xadd
and
cs
cmpsb
or
dec
ja
arpl
jnp
pop
mov
shll
pop
ja
es
addb
in
inc
cmp
jmp
push
rorb
in
xor
push
push
cmp
jnp
pop
and
inc
jl
cmpsb
scas
jl
clc
adc
je
mov
inc
aam
inc
and
in
cs
imul
fwait
push
sahf
stos
pop
mov
es
pop
pop
cli
test
dec
lock
subl
or
jmp
mov
dec
cmp
sbb
loopne
dec
fidivrl
aas
pavgb
leave
lea
int
frstor
inc
aas
jne
mov
sbb
jo
mov
mov
push
roll
mov
in
shll
jge
out
lea
lahf
cmpsl
ds
dec
leave
pop
or
test
cmp
push
rcrl
pslld
sbb
push
pop
popa
sub
nop
cmp
xchg
testb
icebp
decb
push
leave
xchg
sbb
cld
data16
xchg
sub
jo
outsl
jle
test
cld
push
mov
leave
popl
aas
xchg
popf
clc
das
lahf
push
fsubl
fcmove
mov
jmp
fmul
dec
out
fistpll
nop
fidivl
rcrl
ja
orl
jmp
mov
and
sti
or
dec
popa
roll
jge
mov
aas
mov
pop
gs
jmp
in
cmpsl
pop
fisubrs
dec
add
push
stos
add
movsl
or
repz
shrb
dec
insb
fbld
mov
mov
or
jmp
inc
jl
ja
outsl
out
sarl
cli
inc
sahf
xchg
jbe
shrl
mov
repnz
lods
cltd
add
outsl
mov
xchg
push
fs
sbb
idivb
and
sub
mov
mov
cmp
xchg
jo
dec
push
ja
scas
sbb
aam
std
jnp
fisttps
test
mov
fcoms
scas
leave
cmpsb
pusha
arpl
ljmp
pop
jp
cwtl
roll
sti
out
mov
in
xchg
mov
push
jl
push
mov
push
imul
insl
xchg
loop
add
xor
or
add
push
push
js
jle
pushf
daa
dec
in
cld
not
aaa
aaa
add
sbb
inc
hlt
xor
cwtl
push
testb
mov
sbb
flds
test
aam
or
ja
pop
out
mov
or
dec
test
sub
hlt
dec
int3
and
pop
js
dec
push
inc
mov
ds
scas
gs
dec
cmp
int3
fcomip
mov
popa
mov
mov
int3
add
enter
dec
popf
sbb
lods
sub
or
iret
cmc
add
mov
sbb
push
test
out
pusha
lret
cltd
or
adc
sti
sbb
mov
lret
sbb
addr16
push
inc
test
jmp
jmp
outsb
mov
in
clc
or
mov
enter
cwtl
xor
push
xor
jns
and
loope
cmpsl
mov
outsb
test
dec
leave
push
or
add
sub
jp
mov
std
das
divb
or
not
mov
gs
cmp
fscale
fists
adc
mov
mov
in
dec
or
inc
in
shlb
dec
rolb
mov
mov
and
fldt
pop
push
cmp
call
pop
add
sahf
sbb
out
xchg
sti
xorl
orl
jns
call
enter
pop
mov
mov
adc
jle
mov
out
out
or
mov
call
mov
and
jns
pop
test
mov
bnd
call
ud0
out
fdivrl
loop
xor
push
sub
mov
popf
dec
sbb
mov
jge
mov
test
loopne
xchg
outsl
add
sub
ss
scas
fs
sbb
int3
stos
dec
sbb
adc
inc
in
sbb
loop
in
sub
sarb
ds
ljmp
addr16
out
and
nop
lds
mov
aad
mov
dec
ror
sub
dec
sbb
sub
and
adc
inc
pop
push
mov
ret
cwtl
sbb
cli
fidivs
jge
mov
or
sbb
movl
lea
pop
push
pop
pop
sub
add
add
jp
xchg
pusha
dec
inc
mov
rcrb
insb
pop
pop
lahf
inc
push
out
pop
push
aas
mov
cs
pusha
pop
stos
fwait
into
push
int
fwait
stos
dec
faddl
pop
in
int
and
pushf
or
sbb
push
xor
pop
or
jmp
dec
sbb
inc
add
testb
movsb
dec
insl
pop
fisubs
mov
hlt
and
loopne
xchg
add
out
dec
mov
or
mov
adc
pushf
push
cltd
push
jb
jge
sub
jl
insb
cmp
loope
in
clc
aam
js
cs
mov
dec
into
stos
imul
xchg
or
sbb
in
dec
bound
or
popa
sbb
aaa
inc
pop
pop
inc
je
insb
icebp
push
jo
test
xor
fwait
shlb
in
cli
sbb
xor
sub
mov
test
xor
jmp
xchg
jo
stos
adc
sub
or
pop
jmp
data16
addr16
push
sahf
test
ret
leave
sbb
push
xlat
arpl
dec
enter
inc
addr16
jecxz
fcomip
xlat
add
jp
sarb
orl
rolb
or
dec
test
add
gs
push
stos
lock
ja
mov
lcallw
mov
imul
sahf
xor
lock
push
push
ffree
xorb
mov
xchg
divl
jns
inc
aam
ljmp
cmp
sarb
and
loope
push
jmp
dec
mov
xlat
pushf
adc
and
popa
jle
inc
mov
lods
or
xchg
cwtl
or
xchg
mov
pop
or
inc
into
sti
mov
sub
pushf
push
lcall
stc
and
xchg
test
cmp
pop
add
into
adc
lcall
js
mov
jno
mov
test
fstpl
aam
les
or
sub
jns
or
sub
jno
mov
insl
addr16
push
ss
pushf
or
mov
test
bnd
mov
arpl
and
inc
jle
das
addl
push
das
dec
mov
cmp
add
rorl
pop
cli
jmp
sbb
adc
cwtl
lods
lcall
mov
or
fidivs
lock
gs
jns
and
sub
xchg
jle
mov
xor
int3
xchg
sub
mov
mov
and
sbb
sahf
dec
jg
mov
ljmp
jnp
rclb
cwtl
sub
das
pop
shlb
std
push
cmp
mov
mov
or
jle
sahf
jl
fstp
out
adc
fcomp
push
ror
mov
xchg
adc
xor
leave
stc
clc
in
test
inc
mov
sub
sbb
xchg
adc
rcr
pop
popf
repz
jae
movsl
inc
or
xchg
xchg
add
mov
push
out
sahf
add
les
xchg
fdivrp
push
push
xchg
fimull
mov
cwtl
xchg
mov
scas
sbb
in
in
pop
loop
rcl
pop
pop
adc
push
push
leave
inc
adc
or
mov
mov
jg
out
xchg
aad
dec
add
jecxz
mov
adc
sub
movsl
lock
cld
divl
sbb
ljmp
push
out
xchg
xchg
push
jbe
push
push
lret
inc
daa
push
jmp
testl
pop
sub
bound
dec
ja
add
mov
sti
lods
stos
scas
insl
sbb
inc
xor
pop
pop
jns
and
outsb
xchg
or
mov
mov
ljmp
lods
iret
pop
imul
add
sub
xchg
call
ret
xlat
add
and
jge
cmp
fwait
push
aaa
or
sub
psadbw
gs
dec
xor
sahf
pop
jp
imul
pop
add
pusha
ficoms
sbb
cmp
ja
adc
fstl
adc
ds
sub
ret
sub
push
sbb
mov
popa
xor
in
mov
shrl
lahf
inc
and
jb
mov
push
call
inc
and
and
mov
inc
jbe
enter
xor
and
in
sbb
push
rorl
dec
lcall
ret
mov
sbb
das
iret
mov
adc
sti
or
or
inc
rcrb
pop
arpl
cmp
jb
cmp
outsb
sub
dec
push
mov
add
inc
jbe
push
insb
dec
mov
lret
pop
pop
mov
popa
test
test
mov
push
sub
pop
mov
test
lret
arpl
ret
clc
or
ja
call
sbbb
jecxz
lret
sub
push
dec
cmp
ljmp
or
loope
popa
mov
pushf
dec
mulb
mov
ljmp
shl
pusha
sub
addl
push
in
mov
lahf
popa
xor
mov
jno
xlat
inc
sets
lods
sub
mov
mov
ds
jns
andl
test
mov
add
or
mov
sub
shrb
sub
lock
and
cmp
pop
push
daa
push
lcall
mov
sbb
fadd
jp
ss
test
adcl
mov
push
sbb
ret
xor
arpl
in
mov
or
jae
cmpsb
pop
loop
pop
leave
js
inc
pop
or
dec
out
arpl
pushf
je
inc
loope
cmpsb
lods
pop
js
cmp
scas
lcall
lea
adcl
pop
xchg
imulb
sbb
mov
sbb
mov
or
insb
fdivrs
mov
and
push
data16
sti
ret
and
out
dec
cmp
adc
sbb
xchg
push
fisubrs
mov
mulb
mov
lea
js,pn
adc
mov
pop
xchg
arpl
in
je
mov
ja
scas
int
cmpsb
xchg
mov
jmp
and
sub
rorb
int
test
shrb
mov
adc
push
movsl
jmp
add
jns
jg
aaa
out
xchg
xchg
mov
inc
lea
out
and
fs
cmp
adcb
mov
jb
xchg
cmpsb
mov
push
jmp
je
xor
mov
icebp
iret
push
cmpsb
popf
add
pop
push
orl
out
pop
fsub
xchg
xor
arpl
ja
cltd
mov
lret
and
push
inc
fwait
xchg
mov
test
out
mov
adc
iret
pushl
push
les
pop
sub
and
popa
sbb
enter
ss
or
sbb
js
repnz
fnstcw
sbb
lret
loope
clc
dec
std
and
or
into
mov
cmpsl
div
addb
enter
push
adc
dec
sub
enter
sbb
jge
sbb
mov
xor
setno
mov
loopne
loop
add
in
rsm
jge
and
pop
pop
dec
dec
ja
rcrl
cmp
sub
andl
sub
ror
cmpsb
das
out
fnsave
pop
fwait
mov
pop
xorl
push
jne
mov
add
cmp
into
inc
je
pop
push
cbtw
out
or
mov
divb
push
cmp
lea
xchg
daa
cmp
mov
adc
xchg
push
ficomps
jno
pop
rcr
adc
mov
call
fistpll
hlt
jb
fsubrp
loopne
mov
lods
lods
sahf
iret
cmp
mov
das
jmp
das
enter
add
sub
out
sti
mov
ja
aaa
lods
inc
add
inc
popl
movsb
gs
sub
sub
test
push
cld
xor
mov
xor
in
pusha
sbb
cwtl
dec
jg
into
ljmp
jp
inc
inc
pop
mov
cmp
sub
pop
add
bound
pop
and
push
jno
mov
dec
stos
mov
xchg
jmp
test
jmp
cmp
xchg
cmp
pop
sbb
lret
repz
xchg
sbb
and
jecxz
loopne
cld
fnstenv
xchg
xor
or
into
push
ss
pop
dec
sti
ja
mov
loop
bound
sbb
vmovupd
xchg
dec
sbb
movups
mov
nop
xchg
add
pop
pop
mov
inc
std
in
lods
js
ljmp
xchg
fisttpl
jnp
cmp
shlb
or
jae
mov
and
adc
mov
mov
pushf
jb
inc
mov
out
mov
xchg
add
xchg
adcl
jecxz
cmp
dec
jge
adc
lea
add
insb
or
cli
int
and
xchg
sbb
push
lret
mov
int
ja
or
push
xchg
cmp
test
xor
push
pushf
mov
pop
daa
mov
pushf
mov
nopl
loopne
call
add
imul
aaa
push
test
iret
dec
out
movsb
loope
and
sarl
push
movsb
cltd
jl
out
sti
mov
call
fldenv
ja
mov
cli
and
ds
iret
or
dec
xor
xchg
or
and
fimull
popf
mov
push
xchg
push
mov
outsb
or
or
dec
cmp
in
stos
pop
add
push
jg
add
cmpsl
andb
mov
mov
jns
aas
and
stos
gs
loop
jno
mov
pop
xchg
sahf
or
jecxz
jmp
repnz
inc
add
jno
shl
jnp
jmp
dec
xchg
cmp
addr16
xchg
or
pop
cmc
xor
inc
rcrb
inc
add
call
xchg
and
push
mov
mov
rclb
dec
mov
xchg
mov
bnd
aad
call
mov
out
inc
ret
cmpb
inc
dec
mov
push
popa
fldcw
mov
popa
cmpsl
pop
xor
iret
rolb
xchg
dec
sub
je
dec
loop
mov
notl
or
mov
nop
adc
xor
pop
ljmp
das
cmp
pop
out
or
push
pop
mov
pop
add
or
cltd
ficomps
xchg
call
inc
rclb
xchg
and
cmp
ja
std
dec
lock
push
rorb
mov
add
enter
sub
enter
icebp
jp
push
cmp
inc
push
shl
rorl
push
call
mov
mov
data16
data16
sbb
dec
stos
jmp
sbb
cmpl
js
stos
aas
and
addb
dec
arpl
mov
test
ficoml
in
jnp
push
inc
jno
sub
add
scas
scas
pop
xchg
jo
int
add
pop
add
fisubrl
rclb
repnz
shrl
shrb
nop
mov
ror
pop
andl
mov
imul
cmp
inc
add
loopne
fs
imul
cwtl
jbe
pop
pop
test
jle
rorb
cmp
sahf
mov
add
iret
mov
mov
pop
dec
stc
cmp
mov
mov
lods
cwtl
outsb
call
cli
add
adc
fldcw
das
ljmp
pop
cmp
push
lods
push
test
cmp
xor
incb
in
sub
sti
jnp
aam
rorb
loopne
cltd
sbb
mov
adc
sbbl
adc
icebp
imul
cmp
push
and
or
lahf
cmp
sub
loopne
xlat
movsl
xor
mov
and
mov
inc
ret
decb
jmp
insl
repnz
sub
push
lock
sbb
jno
lods
mov
xchg
mov
in
test
jb
std
sti
push
lahf
imul
pop
ja
bound
inc
rorb
repnz
fwait
sbb
cmp
movsb
jg
jmp
cld
and
mov
mov
scas
add
adc
cli
jo
and
xchg
outsl
shll
pushf
ja
xchg
loopne
lcall
dec
lock
jge
loope
out
sub
sbb
push
lock
daa
push
adc
jmp
adc
pop
cmpsb
push
dec
into
es
jbe
enter
scas
test
xchg
lahf
and
push
lcall
adc
adc
xchg
cwtl
pop
inc
mov
out
mov
scas
shlb
dec
cmpsl
cmpsb
rclb
jmp
push
dec
add
xor
cmp
jno
aas
cltd
ljmp
shrb
in
jo
push
call
outsl
lahf
cmp
inc
jb
pop
loope
call
iret
dec
inc
xor
mov
lock
push
leave
test
fsubrl
sahf
pusha
mov
add
test
je
xor
jl
outsb
movsb
ss
stos
cli
les
push
pusha
xorl
loope
mov
pop
xchg
mov
pop
pop
adc
sbb
test
cvtpi2ps
fisubrl
aad
cwtl
stos
push
mov
cmp
mov
test
ret
sub
mov
jae
lret
sub
aam
add
iret
movl
pop
and
cwtl
cmp
mov
and
stc
rol
and
pop
push
cmc
pop
lock
push
call
fstl
pop
cmp
test
sbbl
aaa
ljmp
and
push
adc
shlb
sub
outsl
loop
mov
push
add
popf
out
call
add
push
xchg
pop
pop
adc
xor
insb
cmpsl
out
adc
icebp
mov
mov
mov
scas
fdivl
add
sti
mov
cltd
cli
and
xlat
scas
call
xchg
insl
test
dec
sub
pop
fwait
jge
int3
or
pop
in
xor
rolb
clc
dec
aas
xor
and
pop
sti
sbb
lods
popf
sbbl
rcll
and
stc
push
movsb
xor
xchg
and
pushf
test
sbb
jne
es
mov
xor
or
aaa
cmp
cwtl
test
mov
dec
mov
test
sub
ficoms
out
cmp
ret
and
leave
loopne
mov
dec
dec
lock
or
or
dec
mov
inc
push
daa
mov
arpl
pop
fidivs
call
js
cmp
sti
adc
and
pop
in
xchg
loop
cmp
pop
xor
xchg
loopne
and
push
cmp
add
das
adc
mov
ss
xchg
push
mov
jne
lods
cld
cmp
mov
bound
lahf
dec
out
data16
cmp
ret
inc
adc
sub
fs
xchg
or
jle
mov
rcrl
in
repnz
fisubrl
lret
cmc
sub
cmp
call
pop
xchg
orl
repnz
or
inc
push
loop
pop
push
js
fsubrl
ljmp
pop
fwait
popf
jno
enter
cmp
lret
int3
inc
pop
add
jge
lock
lcall
jl
adc
push
jo
insl
stc
popf
addr16
mov
cwtl
cmp
addl
inc
test
jecxz
lret
or
popa
pop
jne
mov
cmpsb
push
aaa
loopne
sbb
and
arpl
stc
push
mov
pusha
mov
lret
inc
les
or
push
stos
mov
cltd
mul
xchg
dec
jmp
out
mov
pushf
adc
stos
and
insl
xchg
repz
inc
add
bound
sub
mov
dec
and
insb
and
outsb
scas
dec
cmp
cld
or
mov
dec
mov
ljmp
pop
cld
dec
dec
cmp
inc
scas
jns
mov
dec
push
or
lods
push
add
xchg
dec
mov
testb
push
dec
dec
sarl
mov
add
sub
aam
test
orl
lcall
cmpsl
xor
dec
out
lods
mov
insb
xchg
add
enter
ds
pop
adc
or
pop
gs
dec
scas
xchg
mov
mov
es
and
sub
cld
mov
and
shlb
mov
jnp
dec
flds
loope
inc
rcll
imul
mov
dec
push
xchg
into
in
xchg
mov
test
push
ja
or
adc
pop
out
xor
pop
ljmp
and
sbb
and
leave
mov
sbb
push
scas
xorb
icebp
movsb
jge
dec
inc
mov
in
movsb
mov
es
aaa
dec
and
cmp
shrl
sarl
add
jg
jl
pushf
push
adc
jp
cmp
sbb
xchg
sub
lds
mov
pop
call
popa
gs
and
xor
mov
or
and
popf
cwtl
inc
mov
lcall
out
xchg
xchg
test
xlat
imul
ds
and
fldcw
push
dec
dec
cmpsb
dec
push
or
push
push
fcomps
ret
out
stos
popa
pushf
adc
dec
sbb
xor
xchg
xor
arpl
roll
aas
fisubrs
pop
sub
test
jl
insl
add
mov
mov
sub
pop
bound
pop
xor
fildll
sub
popa
mov
sub
ror
pushf
jg
scas
dec
mov
add
js
testl
pop
icebp
pop
pop
xchg
xchg
mov
adc
push
sub
jl
mov
pop
scas
jmp
lods
push
jmp
mov
adc
test
rolb
adc
mov
inc
inc
leave
int
dec
rcll
or
push
daa
ret
rcr
jo
aad
or
mov
pop
xchg
mov
das
or
out
adc
addr16
out
cmp
xorl
jae
mov
in
dec
push
rcll
push
adc
jmp
testb
xlat
pop
xlat
testl
pusha
into
push
pop
in
int3
jge
or
lock
das
mov
popf
xchg
out
add
pop
push
pop
cmp
dec
push
inc
and
mov
pop
mov
and
invd
cmp
inc
mov
xchg
jl
pop
pusha
lods
out
ret
movsb
in
push
loope
das
push
fsubrl
dec
pop
insl
rcr
sbb
fildll
add
ror
dec
dec
push
cld
ljmp
mov
mov
cmpsb
or
lds
add
mov
push
leave
dec
push
and
adc
movsl
sahf
push
mov
stc
int
hlt
sub
xchg
test
push
cmp
xchg
sbb
add
jp
mov
int3
cltd
mov
mov
jecxz
add
lods
out
sbb
arpl
cmp
lcall
and
out
daa
or
inc
shll
mov
sub
jecxz
cmp
jbe
fistpll
cmpl
sbb
and
push
inc
xor
imul
inc
adc
dec
xor
stc
lea
push
inc
inc
es
bound
lcall
inc
iret
xlat
sub
jmp
lock
cld
cld
cwtl
aas
in
aad
sub
aas
enter
ja
outsb
cld
sbb
mov
jge
mov
hlt
out
inc
jne
out
hlt
inc
mov
out
mov
add
and
or
mov
mov
ret
repnz
inc
mov
pop
inc
imul
lea
inc
aas
xlat
fnsave
popf
push
cmpsb
mov
push
mov
pop
leave
cli
xchg
adc
add
pop
sbb
or
push
jbe
mov
push
fdivp
in
xchg
push
xchg
push
sahf
clc
mov
add
fdivl
or
imul
testl
jl
test
push
jb
mov
jne
icebp
lahf
jmp
outsl
pop
xchg
insl
dec
rcr
popf
and
push
sub
jecxz
dec
ds
lcall
xchg
leave
out
sbb
sub
xchg
sub
mov
cmc
mov
cmp
cmp
sbb
fcoml
icebp
lahf
xor
sbb
cmp
insb
mov
cmc
cli
inc
sbb
jo
sub
fsts
sarl
ljmp
fs
fwait
pop
adc
clc
adc
fldcw
mov
push
in
push
adc
cmp
fldcw
dec
ja
packsswb
mov
leave
mov
pop
push
pop
sti
in
daa
dec
mov
in
rcrb
jb
adc
and
sbb
addr16
fstpl
jle
sbb
fistpll
mov
inc
adc
cs
int
add
dec
inc
mov
push
xchg
cmp
ss
xor
mov
movups
push
pop
jno
lock
and
cmp
les
fisttpll
cmp
mov
add
cmp
xor
sbb
dec
mov
dec
sbb
fidivrl
pop
mov
out
inc
outsb
jge
rol
andl
ss
mov
inc
push
xchg
fsubl
xchg
sti
movsl
cmp
sbbl
roll
inc
adc
nopl
cmp
xor
add
xchg
adc
mov
mov
arpl
cmpsb
hlt
adc
mov
aaa
xlat
dec
pop
dec
sub
pop
outsl
imul
cmp
mov
inc
or
mov
stos
mov
or
add
or
stos
cld
lcall
pop
sub
mov
fistl
mov
addr16
and
mov
das
lods
jg
loope
push
ret
inc
xor
or
iret
js
jp
sti
and
inc
ret
loop
lods
addb
shlb
js
xor
add
dec
scas
jnp
pop
mov
in
hlt
lahf
xchg
dec
enter
arpl
push
ds
call
mov
gs
pop
icebp
jecxz
punpckhbw
rolb
push
js
inc
fistpll
dec
pop
rclb
mov
fistpll
pop
mov
mov
in
cs
daa
push
lock
pop
lahf
outsl
or
jno
xor
popl
pop
mov
sarl
xor
pop
pushw
cmp
out
jp
sarb
jmp
outsb
js
outsl
cmp
mov
cmpsb
dec
mov
xchg
push
push
lods
repnz
ja
adc
sub
das
rorb
out
fcoms
mov
push
rcrl
fcmove
leave
inc
rcrl
cmc
mov
bound
icebp
xchg
jmp
repnz
mov
mov
into
addb
movsl
bound
mov
push
mov
popa
aam
mov
sub
dec
daa
int
pop
pop
pop
test
repz
cmp
xchg
or
faddl
push
outsl
sub
push
inc
mov
inc
pusha
sub
rep
and
jl
jo
rol
icebp
mov
jmp
xchg
cmovae
push
sbb
fnstenv
loopne
push
fcoml
pop
movsb
xchg
xor
mov
stos
jno
int
stos
jp
push
inc
lahf
mov
dec
push
mov
ret
imul
je
push
sti
fisubrl
cmpb
dec
int3
jae
cwtl
mov
mov
ss
imul
inc
sti
and
clc
mov
mov
out
inc
push
sub
aaa
outsb
push
jo
sbb
sbb
addr16
divb
xor
pop
pop
aam
negb
sub
mov
mov
sarl
mov
dec
push
jbe
adc
lea
push
fnstsw
cmpsl
lcall
mov
pop
xchg
inc
xchg
mov
fildl
gs
jl
jp
int
imul
cmp
dec
je
cli
loop
mov
fbld
adcb
loop
out
bound
mov
xor
xor
stos
out
jecxz
in
lahf
and
dec
pop
cs
fsubl
jae
pop
mov
xor
movsb
mov
inc
dec
pusha
inc
inc
mov
pop
mov
sbb
fwait
int
aad
sahf
push
xchg
mov
scas
enter
jb
les
pop
dec
adc
mov
lock
call
inc
nop
mov
insl
movsl
sub
xor
pop
xchg
daa
test
mov
aad
cmp
mov
shrb
outsb
cmp
lds
inc
push
push
mov
loopne
mov
jle
or
mov
stos
mov
add
int3
pop
mov
xchg
xor
dec
inc
jno
or
notl
sti
mov
or
pop
fildl
test
mov
xchg
shll
rcll
out
scas
das
fldl
mov
cli
jle
outsb
imul
jb
or
int3
fisubs
xchg
ret
out
dec
mov
xchg
xor
xor
pop
push
fstl
sbbb
lcall
testb
fwait
repnz
or
aad
popa
lahf
xchg
dec
out
pop
test
xorb
jbe
inc
testl
jg
movsl
jb
fwait
arpl
stos
mov
fldl
mov
add
mov
and
lahf
dec
sub
lea
daa
ret
pop
movl
inc
or
call
pusha
jo
scas
pop
jp
dec
imul
mov
fidivl
xor
jne
xor
in
xchg
test
jp
sbb
push
jge
shl
pop
cmp
add
pop
imul
or
jp
in
lds
mov
pop
jge
out
shll
push
mov
or
aas
popl
lds
or
cld
faddp
and
mov
stos
aas
out
loopne
std
repnz
jbe
dec
outsb
fsubr
jle
sbb
mov
push
add
repnz
cmp
test
add
adc
arpl
inc
or
mov
and
and
dec
or
mov
shrl
outsb
mov
rorl
sahf
scas
mov
and
jecxz
sbb
dec
pop
pop
mov
cmpsl
inc
xchg
das
adc
test
add
pop
in
push
ficompl
pop
and
cmp
shll
jo
dec
mov
push
loope
mov
sbb
fld
xor
xchg
push
fxch
push
daa
xchg
pop
insb
mov
bound
jle
push
sub
movsb
xchg
inc
popa
push
push
sbb
add
aam
sbb
jno
jg
jmp
add
xor
jge
lret
inc
sbb
sub
push
loop
add
jns
ret
int3
enter
dec
cli
sarl
insl
fisubs
pop
xlat
inc
jo
pop
retw
add
pop
sub
inc
ljmp
adc
add
leave
cld
data16
sub
mov
sbb
insb
decb
jecxz
mov
rol
rcrb
fistpll
push
jns
test
push
add
int
mov
test
or
andb
gs
call
sbb
adc
ljmp
imul
jae
aad
inc
jp
enter
push
movsl
inc
mov
mov
mov
push
sub
scas
lret
into
mov
es
dec
or
fadd
xchg
sub
insl
dec
xchg
lret
add
sbb
or
pusha
gs
sub
and
test
test
test
adc
js
fsubp
dec
repnz
imul
push
insl
cmp
clc
pop
out
adc
pop
stos
jp
dec
test
xchg
fcoms
mov
jnp
pusha
dec
pop
sub
rcrl
dec
sub
cmp
xchg
cmp
pop
cli
pushf
adc
leave
xchg
int
test
shlb
scas
adc
enter
jp
dec
xor
cwtl
ds
imul
mov
and
sti
xchg
mov
ret
jae
push
dec
sbb
adc
jp
and
add
dec
in
incl
sub
in
loop
leave
sarb
enter
add
mov
ficomps
stc
test
inc
out
xchg
and
flds
ja
test
insl
mov
xchg
and
xchg
adc
je
popf
lahf
push
add
in
xor
xchg
cltd
xchg
adc
jp
and
js
int3
cltd
les
ss
dec
add
cs
lds
pop
cmpsl
xchg
leave
inc
jns
mov
xor
movsl
clc
xor
pop
cmp
pop
sbb
jg
in
jle
popf
jo
in
sbbb
fsubrp
sbb
stos
mov
pusha
jbe
xchg
mov
pusha
push
dec
push
shlb
jge
xor
fwait
enter
popf
cmc
add
jo
fistpl
xchg
add
cltd
test
in
aad
mov
xchg
mov
xor
aas
and
out
mov
pop
xchg
sub
movsb
fidivrs
mov
cwtl
jl
incl
pop
sbb
adc
idiv
mov
enter
lods
mov
in
jb
inc
ficompl
jmp
jmp
and
sbb
xchg
loope
mov
dec
jge
cmpl
outsb
scas
inc
pushf
mov
dec
and
cmpsl
sub
daa
jne
sub
iret
pop
dec
sti
and
ljmp
std
mov
in
mov
pop
cmpsb
or
cltd
push
in
jg
cld
mov
and
jo
loopne
mov
fidivs
dec
fwait
pushl
dec
mov
stc
mov
out
mov
lcall
lret
ljmp
xor
icebp
add
loopne
mov
in
jne
sbbl
fidivs
inc
pop
testb
mov
clc
fcompl
shlb
lods
mov
out
jne
test
mov
pop
push
xor
or
ret
loop
jnp
jl
xorl
mov
inc
shll
sbb
sbb
out
into
cli
sub
aas
push
inc
icebp
xor
cli
mov
rorb
shl
dec
cmp
je
xor
adc
xor
movsb
mov
out
movsl
gs
cld
sub
bnd
push
jmp
xchg
mov
lock
jns
jg
rcrb
mov
mov
push
cmp
in
inc
xchg
ja
ret
sbbl
roll
sbb
dec
cmpsb
loop
pop
sbb
gs
repz
aam
mov
scas
aad
imulb
dec
cltd
movsl
pop
adc
jecxz
rcr
leave
mov
insb
add
pop
inc
loope
dec
addr16
cmp
sbb
add
jecxz
jns
xorb
cmc
imul
lret
pop
insl
sub
push
or
fdecstp
addr16
mov
repnz
clc
mov
outsl
xor
adc
mov
insb
ror
int3
pop
test
pusha
in
mov
xor
push
leave
sbb
jne
mov
arpl
or
mov
sbb
push
or
fs
dec
icebp
adc
inc
xlat
inc
pop
jb
xor
ss
popf
ljmp
popf
fstps
cmp
jl
adc
mov
push
adc
and
test
les
addr16
xchg
cmpsl
mov
out
repnz
std
pop
xor
cmc
cwtl
jg
insl
insl
xchg
cwtl
add
repz
xchg
ljmp
or
cli
divb
cmc
inc
jns
jp
cmp
lods
mov
mov
sysexit
dec
shlb
xchg
out
cmpsb
jle
jge
inc
jg
js
movsl
dec
in
stos
or
arpl
pop
push
sti
dec
dec
daa
push
jp
aaa
add
sahf
jno
aaa
mov
int
xchg
jmp
rcl
add
pop
xor
mov
mov
mov
pop
adc
js
cmp
iret
addr16
xchg
pop
aad
add
xor
fwait
pop
je
cmpsl
sub
not
das
and
fisubrl
nop
jecxz
je
mov
pushf
incb
and
gs
push
xchg
lods
inc
pop
notl
lods
ret
fcomip
cmp
dec
add
pusha
les
sbb
aam
xchg
dec
leave
mov
arpl
adc
mov
mov
imul
xorb
out
or
adc
dec
push
pop
stc
out
add
imul
fs
adc
dec
mov
cmpsb
jns
scas
ret
jge
dec
xchg
inc
sbb
jne
into
testb
cmp
loop
or
fstpl
xchg
cli
nop
cmpsb
test
cs
mov
or
test
aad
sub
pop
xchg
jo
test
jbe
or
out
sbb
mov
dec
mov
aam
or
lds
data16
pop
out
inc
sbb
out
jmp
mov
out
movswl
int3
hlt
scas
add
fdivrl
xchg
push
aam
dec
in
std
and
and
sub
mov
pop
sub
daa
in
xchg
ret
inc
outsb
xchg
pop
xor
cmp
pcmpgtb
and
ss
sub
jecxz
in
mov
fs
push
mov
mov
lahf
xlat
mov
sbb
mov
iret
aad
pop
adcb
xchg
f2xm1
and
ja
cltd
push
mov
sahf
ljmp
mov
inc
das
mov
and
cli
add
mov
pop
mov
shr
shld
jb
jne
mov
fldl
sbb
pop
pushf
sar
repz
ret
sub
loop
ret
push
xor
pop
push
sbb
lods
adcb
sbb
jp
xchg
or
iret
icebp
popf
mov
in
call
in
sbb
pop
mov
xor
inc
imull
shlb
dec
dec
and
rorl
add
cmc
loope
jecxz
dec
jl
cmp
rcr
fisubs
mov
dec
sbb
out
sahf
pop
les
test
adc
mov
or
dec
push
xchg
pop
mov
xlat
mov
icebp
out
jo
int
inc
sbb
dec
adc
mov
imul
call
mov
in
ss
and
mov
jae
pop
sub
test
or
out
mov
rclb
inc
addr16
mov
out
cmpsb
sub
cmp
push
fldcw
test
jecxz
sub
popf
call
add
and
cmp
xchg
xor
aaa
cmpsl
lcall
cmpsl
mov
je
data16
and
cltd
ljmp
jb
mov
xor
mov
jmp
jne
loopne
scas
cmp
mov
pop
ret
xor
pop
mov
rorb
adc
push
cmp
dec
imul
sub
fsubl
cs
aad
rorb
cmpl
in
scas
push
hlt
nop
push
loop
add
lock
lods
and
xlat
clc
bnd
ret
jecxz
push
xor
adc
cmp
out
mov
xchg
and
or
fiaddl
or
inc
inc
sub
mov
sar
cld
or
stos
lret
sub
sbb
or
xlat
popa
aam
pop
scas
ret
push
xor
enter
pushf
mov
dec
fdivl
xchg
fstpt
mov
adc
pop
jb
cmp
sbb
sarb
mov
push
clc
sahf
aas
scas
cli
test
xor
fcompl
sbb
cmp
xchg
dec
lahf
insl
sarb
imul
push
and
xor
fnstsw
sub
pop
sbb
push
sbb
fld
add
xor
inc
inc
stos
pop
cmc
ret
sti
sahf
lods
jmp
mov
aad
scas
mov
aam
lods
pmaddwd
jecxz
push
cmc
inc
loopne
popw
xor
push
jns
sbb
lock
in
add
mov
imul
cmp
int
test
mov
xchg
or
sub
sub
fimull
adc
push
sub
inc
in
adc
rcll
mov
jmp
or
in
sbb
mov
adc
cmp
adc
into
pop
enter
and
mov
adc
sub
push
fcom
call
dec
loope
xchg
sub
scas
test
mov
cmp
xchg
pop
push
addr16
imul
dec
xor
int3
bsr
pop
push
mov
mov
pop
or
lret
add
insl
fidivrs
lret
subb
cmp
outsb
loope
insl
mov
mov
popf
cmpsl
pusha
xchg
push
lahf
data16
lods
nop
rcrb
push
sbb
mov
add
nop
mov
xor
bt
les
xchg
adc
jae
add
push
std
jno
pop
dec
push
arpl
pop
out
adc
jle
sub
sub
cwtl
dec
xchg
inc
fwait
mov
inc
push
xchg
mov
push
and
add
push
xchg
aam
arpl
mov
sbb
sub
xchg
push
call
jge
shlb
fdivs
mov
int3
cld
push
roll
inc
and
sbb
lret
xor
mov
inc
jl
lahf
push
int3
mov
sub
pop
cld
or
and
jecxz
jmp
lds
js
adcb
xor
in
xchg
xchg
xchg
mov
add
pop
inc
and
jp
and
int
xchg
inc
push
jecxz
inc
push
lock
lret
push
frstor
int3
mov
outsb
out
adc
ret
out
mov
pop
fsts
xlat
cmp
sbb
data16
pop
cmp
fisttpl
cli
test
pushf
ljmp
mov
ret
xchg
arpl
insb
imul
call
mov
loope
mov
je
cmc
and
aad
cld
loop
iret
xor
aam
rolb
sub
adc
or
imul
xchg
into
and
jno
les
cmp
gs
mov
adc
sub
sbb
add
mov
lods
or
inc
lea
shlb
sub
insb
aaa
mov
mov
rorl
jmp
push
mov
mov
out
fwait
gs
mov
das
sbb
push
add
mov
adc
outsb
std
cmp
jge
dec
test
and
xchg
sahf
div
dec
aam
push
stos
cmp
mov
fcomps
mov
sub
jno
divl
cmp
cmp
or
loopne
inc
pop
mov
mov
adc
test
adc
fnsave
push
cs
xor
test
ret
in
scas
mov
sub
cmp
cmp
xor
imul
sahf
or
and
xorl
in
cmp
das
popa
fisubl
lret
cld
or
jns
scas
icebp
push
notb
insb
pop
sbb
jo
push
dec
pushf
mov
iret
data16
jbe
sub
jp
icebp
push
repz
dec
push
xchg
mov
lods
arpl
insb
dec
daa
sub
jg
dec
jno
cmp
daa
shlb
sahf
sbb
inc
push
jnp
jnp
in
adc
lret
iret
aam
es
mov
pop
sarb
scas
pop
mov
pop
out
sbb
jnp
rorl
xchg
jp
in
add
and
rcl
div
ret
lock
daa
add
sbb
sub
mov
stos
adc
ss
and
mov
lods
xorb
adc
stc
sbb
cs
mov
outsb
movsl
pop
ja
mov
jmp
clc
push
push
insl
xchg
xorl
cmp
jnp
push
push
leave
lods
outsb
sbb
push
roll
fwait
cmpsl
aaa
fists
adc
std
cmpsl
mov
fimuls
sbb
daa
jo
mov
add
add
adcl
ss
add
mov
mov
pop
and
in
pop
or
mov
or
testl
jecxz
stos
inc
xor
xchg
push
xor
test
push
mov
ds
mov
loop
repnz
mov
sti
add
mov
mov
push
jmp
sbb
pop
lcall
aaa
push
int3
cmc
mov
fsubrs
cmp
xchg
cmp
xlat
mov
iret
adc
pop
rorb
push
pushf
in
test
pop
rcrb
andl
movl
arpl
and
mov
inc
fwait
jp
lret
or
mov
or
sub
mov
or
sbb
cmpsb
fs
sub
test
sub
jnp
cld
lea
sahf
ss
sbb
popf
pop
mov
xor
push
inc
stos
test
jbe
repnz
insl
test
mov
sahf
xchg
imul
push
sbb
add
push
xor
into
pop
xchg
stc
push
fwait
into
inc
adc
aas
stc
std
push
fsubs
add
adc
ss
cmc
jae
out
fadds
movsb
mov
inc
rcrl
lock
test
repz
ljmp
addb
pop
inc
inc
add
mov
mov
div
icebp
insb
pop
sbb
icebp
xor
lds
push
clc
inc
mov
or
mov
mov
fldenv
lret
imul
sub
pop
cmp
mov
fsubs
add
movb
ss
dec
in
pop
add
fisttpll
pop
fdivs
inc
and
fwait
mov
scas
xchg
imulb
xor
mov
jae
sub
pop
dec
aas
dec
sbb
gs
arpl
repz
sub
jle
push
cmp
jo
mov
push
add
mov
mov
inc
xor
das
movb
push
mov
sbb
adc
inc
xchg
and
repz
stc
call
or
or
push
mov
inc
movsl
or
rcl
pop
add
loope
sbb
mov
dec
pusha
mov
dec
or
iret
imul
out
in
inc
jne
adc
scas
dec
xchg
scas
or
xor
push
pop
mov
or
pop
ret
or
sub
imul
mov
mov
jbe
jecxz
cmp
fbstp
ja
mov
bound
test
lods
in
cmpsl
fbld
fstps
outsb
cld
sub
xor
xchg
adc
out
dec
repz
push
mov
loope
and
outsb
imul
and
pusha
inc
inc
or
inc
push
dec
enter
fwait
xor
mov
jno
adc
insl
cmc
lret
popl
incb
add
test
pop
and
lea
pop
mov
mov
jns
push
cmc
jb
inc
jb
xchg
sbb
push
xor
sbb
jle
aas
inc
and
pop
out
cmp
inc
fimuls
xor
stos
inc
xlat
out
lcall
movsb
dec
aam
clc
in
mov
pushf
loopne
xchg
add
or
sub
mov
jno
rcll
jecxz
.byte
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
int3
dec
jl
cmpsl
and
adc
inc
cmpl
aas
cmp
push
jp
inc
dec
data16
lahf
jne
in
dec
dec
cltd
aas
jmp
sub
fadds
mov
shll
lock
mov
pop
pop
dec
sub
sahf
push
sbb
mov
pop
in
mov
add
dec
sub
cmp
mov
push
scas
ljmp
cld
jecxz
dec
fcomip
imul
cmp
das
xchg
adc
shll
pop
pop
call
in
mov
pop
sub
mov
add
add
sub
inc
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
sub
inc
add
add
add
add
mov
add
addb
add
sub
inc
add
add
add
add
add
add
enter
add
add
loopne
add
sub
inc
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
sub
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
sub
inc
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
sub
inc
add
add
add
add
mov
add
addb
add
sub
inc
add
add
add
add
add
add
addb
add
add
sub
inc
add
add
add
add
add
add
cwtl
add
add
add
add
testb
add
add
add
add
add
test
add
add
add
sub
inc
add
add
add
add
add
add
mov
add
add
testb
add
add
add
add
add
enter
add
add
sub
inc
add
add
add
add
add
add
fadds
add
add
add
testb
add
add
add
add
add
call
add
add
testb
add
add
add
add
add
clc
add
add
add
add
testb
add
add
add
add
add
or
add
sub
inc
add
add
add
add
add
add
sbb
add
sub
inc
add
add
add
add
add
add
sub
add
sub
inc
add
add
add
add
add
add
cmp
add
sub
inc
add
add
add
add
add
add
dec
add
add
sub
inc
add
add
add
add
add
add
pop
add
add
sub
inc
add
add
add
add
add
add
push
add
add
testb
add
add
add
add
add
js
add
add
add
sub
inc
add
add
add
add
or
add
add
add
testb
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
sub
inc
add
add
add
add
or
add
add
add
sub
inc
add
add
add
add
or
add
add
add
sub
inc
add
add
add
add
or
add
add
add
sub
inc
add
add
add
add
or
add
push
add
add
add
sub
inc
add
add
add
add
or
add
push
add
add
add
sub
inc
add
add
add
add
or
add
push
add
add
add
sub
inc
add
add
add
add
or
add
push
add
add
add
sub
inc
add
add
add
add
or
add
add
add
add
sub
inc
add
add
add
add
or
add
add
add
add
sub
inc
add
add
add
add
add
add
push
add
add
testb
add
add
add
add
add
js
add
mov
add
in
add
add
add
adcb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
in
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
cmp
sbb
add
cmp
xchg
adc
orl
fldl2t
inc
cli
jo
in
mov
insb
in
loop
cmc
fwait
xchg
inc
adc
sub
add
cld
push
adc
add
arpl
add
jp
cld
mov
hlt
jp
aas
inc
cmpsb
loope
add
mov
btc
mov
insb
mov
mov
jne
xchg
sahf
rol
mov
xchg
aas
mov
ret
sub
inc
scas
inc
psubsw
adc
sub
dec
cmp
std
sbb
mov
cli
leave
into
and
cwtl
push
or
out
cld
cltd
xchg
popf
pop
out
inc
jmp
push
jae
sbb
scas
out
arpl
mov
je
mov
movups
xchg
add
cmp
mov
lahf
mov
hlt
ljmp
rcrb
lcall
leave
fistpl
fstpl
add
mul
lcall
cmp
jnp
add
mov
leave
mov
fwait
push
in
fsubrl
pop
push
sub
inc
or
push
sub
iret
aaa
test
bound
out
pop
pop
in
call
mov
cmpl
sahf
add
icebp
jge
jle
es
xor
inc
cmpsl
add
aas
ret
es
hlt
pushf
jecxz
xor
cmp
lods
sbb
ss
jecxz
cmp
fsubrl
jle
flds
sbb
mov
mov
lret
cli
bound
sbb
lods
les
or
jne
sahf
xchg
aaa
bound
loope
mov
xchg
jb
xorb
push
imulb
sti
mov
xor
fisubs
sub
test
lods
out
pop
mov
outsl
cmp
das
mov
jecxz
and
dec
stc
xor
inc
insb
push
mov
pop
jnp
mov
sub
gs
push
in
fildll
aaa
mov
lods
xor
xor
faddl
negb
into
push
in
popa
fs
mov
adc
jmp
xorl
jno
push
cmp
pushf
lea
push
mov
movsl
mov
jge
jns
lods
xor
xlat
mov
sub
xchg
ds
cmp
push
pop
mov
add
repnz
dec
sbb
bound
mov
cmp
xor
pusha
mov
mov
mov
and
mov
add
notb
ror
clc
int3
pop
jp
ss
adc
cmp
loope
ror
pop
mov
mov
xchg
scas
ss
fidivrs
xor
fwait
popf
mov
jl
or
call
sbb
pop
cmpsl
pop
cmpl
popa
aaa
mov
add
lock
or
cmc
mov
dec
bound
mov
ror
cmp
mov
stc
push
movsb
push
pop
sbb
mov
les
pushf
xor
cmpsb
cmp
les
xchg
fisubrs
jns
mov
and
dec
pop
clc
aad
ja
jecxz
sub
es
jle
mov
add
fcmovu
adc
push
rorb
xchg
aad
inc
cltd
test
jmp
arpl
aas
and
jo
lea
mov
stc
adc
pop
loopne
push
sub
sub
cltd
aad
mov
imul
adc
sub
inc
push
adc
fcmovnb
cmp
cmp
cmpxchg
xor
sbbb
inc
jg
in
mov
add
rclb
push
out
dec
inc
push
xchg
fs
lea
aam
fbld
jge
dec
jmp
je,pt
mov
pop
sbb
push
jmp
lahf
addb
lods
push
pusha
xor
flds
in
insl
cmp
dec
jnp
inc
adcb
cmp
fwait
loope
repnz
fldenv
cmpsb
sub
cmpsl
sbb
aad
adc
push
mov
mov
mov
xchg
stos
imul
jle
cmpsb
hlt
xchg
inc
dec
les
nop
cmovo
mov
lret
mov
test
test
ret
or
fcomps
pop
outsl
test
sub
loope
add
std
inc
or
dec
ljmp
loop
jle
cmpl
popf
jno
sbb
jo
xchg
jp
jge
lret
and
xor
jg
or
pop
stc
xchg
das
mov
mov
xchg
icebp
push
pop
and
out
mov
ljmp
and
icebp
adc
inc
mov
mov
out
sbb
cld
test
dec
lahf
jae
and
xchg
lcall
pop
xor
les
shll
mov
inc
stos
xor
jno
cmp
adc
aam
xchg
lret
push
pop
bound
jecxz
or
addr16
int3
adc
mov
daa
in
inc
je
xor
sbb
add
inc
lcall
push
lcall
mov
arpl
jle
mov
lcall
xchg
sub
pushf
adc
imul
pop
sbb
jge
mov
mov
dec
popa
dec
and
fwait
sbb
xor
cmpsl
xchg
rol
fsubrs
iret
testb
cmp
mov
insb
jg
lahf
mov
loope
sub
adc
test
adc
ja
adc
loope
add
imul
fst
in
sbb
outsl
xlat
inc
xchg
aaa
lock
je
jmp
push
add
test
shl
mov
stos
or
repz
xlat
out
sbb
arpl
pop
cwtl
ficomps
jg
pop
outsb
adc
in
push
insl
movsl
mov
repz
sbb
dec
js
lea
in
and
jne
fmuls
xchg
xor
mov
xor
fcomps
sbb
dec
jae
push
dec
push
jne
push
gs
dec
dec
push
scas
mov
dec
in
pop
xor
clc
jbe
add
sub
lret
dec
addb
xchg
jge
rcrb
mov
sahf
mov
and
cld
mov
add
ja
loop
fildl
push
in
fs
int3
dec
or
xor
dec
mov
pop
cld
sbb
in
mov
xchg
sub
cmp
enter
inc
shl
mov
mov
mov
push
shrb
bound
pop
jp
push
fnstsw
addr16
xchg
cmp
aad
jno
mov
es
pop
lret
mov
jae
repz
mov
sahf
daa
ret
test
sub
mov
or
push
pop
imul
test
mov
ljmp
fldcw
ret
inc
sbbb
mov
aaa
sbb
mov
aad
and
mov
sub
das
add
pushf
push
lds
cmpsb
pushf
jg
enter
or
mov
mov
fcmovu
pushf
and
sub
pop
bound
test
cmc
push
xchg
push
outsb
dec
sbb
add
push
call
push
je
mov
jg
cmp
xchg
dec
dec
mov
pop
and
xor
dec
cmp
lcall
inc
adc
imul
jne
leave
dec
or
push
pop
and
popf
insl
and
or
mov
lods
pusha
dec
ljmp
or
js
dec
xor
cmp
mov
inc
jmp
loope
mov
pop
xchg
ja
push
cmpsb
xor
data16
fs
jne
sti
movsb
jns
gs
lods
pop
cmp
arpl
enter
and
bnd
shlb
jge
inc
je
adc
shr
add
xchg
mov
icebp
jns
sbb
mov
ljmp
enter
jle
ds
mov
mov
fisubl
and
pop
dec
roll
adc
cwtl
or
ret
push
out
mov
in
jmp
inc
mov
dec
test
jle
mov
insl
rclb
stc
adc
xor
add
loope
adc
inc
bnd
cltd
shll
xlat
dec
stos
jl
inc
mov
movsl
nop
aas
adcb
push
ffree
cmp
mov
daa
aam
push
push
mov
cmp
push
ljmp
cmc
add
pop
lock
scas
and
and
fmuls
mov
inc
int3
outsl
cld
mov
and
mov
add
addl
out
sbb
add
lods
std
daa
call
mov
or
xor
or
fsts
jmp
dec
sub
xchg
sub
cltd
add
xor
xchg
cmp
movsb
out
stc
shrl
mov
enter
int3
daa
pop
push
jo
ret
gs
lea
mov
data16
aas
pop
jae
pop
jecxz
and
insb
sahf
loop
icebp
test
aam
sahf
inc
push
mov
pop
push
push
jne,pn
das
mov
pop
lcall
sbb
xor
or
dec
pop
jmp
add
in
pop
dec
lea
dec
sbb
inc
lahf
cltd
or
popf
divb
clc
push
int3
or
je
sbb
frstor
mov
mov
add
hlt
cmpsl
xchg
mov
ds
test
lds
mov
mov
shl
xchg
mov
ds
lods
sub
out
push
push
cmpsl
and
xchg
out
adc
sub
push
adc
shrb
add
lcall
into
sub
aas
dec
inc
mov
mov
mov
pop
xchg
dec
out
jp
sbb
hlt
out
popa
out
add
rclb
push
xchg
lret
push
stos
out
movsb
leave
sahf
xchg
daa
mov
lret
sub
jbe
out
and
mov
bound
adc
push
rorl
add
adc
das
push
ss
push
test
mov
mov
lcall
push
std
xor
dec
jp
roll
pushf
xchg
cmp
jno
imul
mov
loopne
iret
rol
out
repz
pop
rclb
repnz
inc
and
xchg
add
call
jg
xor
out
sti
adc
mov
or
stos
iret
pop
mov
mov
aam
mov
pop
xchg
inc
xchg
add
pusha
push
aad
out
lcall
mov
aam
push
mov
in
les
clc
sub
scas
les
jns
adc
sti
dec
aad
mov
movsb
cmp
jmp
mov
mov
mov
push
fmull
or
outsb
mov
out
push
int
jecxz
cs
sub
mov
cld
push
int
lret
adc
movsb
cmp
sbb
push
or
lds
shr
clc
orl
repnz
out
pop
jno
insl
addl
and
cs
lret
mov
push
jns
push
std
mov
adc
and
sahf
cltd
or
out
rorl
fwait
test
lods
jne
xchg
sahf
mov
jnp
push
jns
fwait
mov
pop
cmp
fcompl
cld
xor
dec
leave
xchg
sbb
lcall
sarb
movsl
notb
test
fmuls
je
outsl
inc
sti
leave
pop
sub
in
mov
js
out
push
jl
fimull
fistps
adc
les
cmp
jnp
sti
imul
loop
lods
sub
lret
cs
arpl
pop
mov
ficomps
xor
fs
xchg
fisubs
pop
xchg
pop
or
in
mov
jo
out
mov
hlt
cmp
adc
cltd
ss
pop
xor
mov
ret
jmp
pop
add
xor
jne
hlt
inc
dec
std
repnz
mov
stos
add
jo
lret
popa
pushf
dec
inc
cmp
mov
out
adc
outsl
cmpl
cmp
ret
mov
mov
jbe
jmp
push
xor
add
push
pushf
and
stc
dec
sbb
popf
fadds
cmpsl
jle
pop
sub
xchg
pop
xor
idivl
es
xchg
sbb
jmp
repnz
add
jnp
fistpll
push
rolb
dec
jecxz
push
stc
int3
out
pop
lock
jo
sub
dec
stc
in
pop
out
inc
pop
xchg
xchg
icebp
frstor
enter
mov
mov
cmp
push
or
lahf
jnp
fld
js
xor
push
pop
inc
fisubrl
popf
add
int
pop
int3
sub
dec
lods
rclb
cs
mov
les
ficomps
in
dec
fldenv
sbb
cmp
int
dec
dec
insb
addps
inc
pop
pop
pop
sahf
mov
and
iret
jmp
sahf
add
cld
out
fidivl
pop
mov
jne
test
cmc
xchg
arpl
dec
mov
mov
clc
es
dec
in
lock
jns
jo
push
dec
ret
aad
pop
add
pop
dec
cmc
ss
shll
push
cmp
test
lcall
jo
int
push
stc
out
jl
int3
ret
pop
pushl
xorb
push
dec
ja
ljmp
push
inc
xchg
and
sbb
mov
clc
cmc
bound
dec
and
loopne
mov
jbe
scas
cltd
xchg
ret
mov
push
rolb
sti
and
xor
ds
sub
outsb
and
aaa
test
cs
jo
jmp
cmp
or
dec
push
inc
dec
add
pushf
pop
adc
pop
sbb
pop
push
pusha
vgf2p8affineinvqb
insb
je
imul
out
add
jne
add
adc
jecxz,pn
loopne
nop
mov
jl
ss
sub
pop
in
gs
add
jmp
not
lods
xchg
push
dec
data16
fs
pop
sub
push
xchg
mov
repnz
fcmovne
call
add
xor
dec
push
sbb
test
pop
mov
iret
call
js
lret
ja
push
xchg
hlt
adc
xor
xor
jmp
adc
fistl
jns
aaa
mov
dec
mov
lret
xchg
popf
jl
out
lea
aam
jne
sub
jge
mov
popa
jg
mov
dec
std
dec
push
xchg
push
dec
ds
outsl
ljmp
mov
push
lret
push
outsb
add
repz
adc
scas
lods
xor
adc
jae
adc
cmp
dec
mov
fisttps
mov
popf
push
adc
and
test
es
dec
push
xor
adc
int3
pushf
cwtl
fwait
lret
cmpsb
std
hlt
xor
jbe
mov
dec
aam
push
lret
and
inc
out
mov
pop
lcall
rcrl
push
lret
hlt
adc
pop
lea
xchg
cwtl
addl
jno
std
mov
fildll
jl
cmp
xacquire
add
pop
lds
adc
mov
je
pusha
sbb
jb
insl
inc
test
sub
jl
cli
jg
mov
test
out
sub
loop
mov
xchg
and
dec
xor
lock
or
icebp
enter
lcall
into
pop
lock
les
push
or
or
ss
mov
or
out
repz
adc
movsb
aad
mov
icebp
add
inc
subb
jb
sbb
and
ror
jb
lcall
xchg
and
stc
pop
mov
mov
sub
out
outsb
xchg
ljmp
add
sub
adc
in
xchg
mov
das
mov
cmc
jp
loope
adc
fimull
push
or
jo
add
scas
mov
imull
mov
mov
movsl
sbb
rcrl
js
loop
pop
out
jnp
mov
push
or
out
stc
mov
or
mov
sub
xchg
bound
push
sub
lods
push
mov
jns
out
sti
or
lea
scas
jmp
fadds
add
popf
cmp
mov
loopne
popa
das
out
cmp
mov
rcr
mov
imul
lods
xchg
adc
and
adc
ss
sub
inc
nop
pop
pop
pusha
lret
sub
imul
pushf
or
mov
clc
adc
popa
dec
sti
mulb
in
mov
add
mov
xchg
movl
jp
ja
sahf
nop
dec
dec
inc
mov
or
daa
notb
ja
rolb
mov
cld
or
push
pop
stos
ret
sti
push
dec
cltd
jle
sti
lods
sbb
lret
icebp
inc
inc
mov
rcr
mov
out
pop
mov
in
pusha
mov
dec
xchg
sahf
loopne
rorb
movsl
lock
daa
xor
mov
mov
inc
jb
insb
pop
in
jnp
aad
mov
mov
cmp
nop
sbb
mov
cs
push
adc
add
aaa
sub
lahf
addl
xchg
jo
insl
inc
aam
sti
cmp
jnp
mov
push
mov
fidivrl
fwait
cmpsb
ret
mov
push
mov
jbe
in
gs
pop
movsl
loop
pushf
arpl
cmp
sbb
cmc
inc
or
sub
push
shrd
and
popf
jmp
inc
out
inc
sub
outsl
mov
inc
jl
push
cmp
shlb
das
ss
outsl
inc
cmc
xor
orl
jecxz
push
testl
pop
pop
or
lods
sarl
adc
js
into
inc
imul
dec
jmp
fdivrp
repnz
dec
pop
push
pop
fsts
push
push
mov
sbb
pmullw
clc
fstps
call
dec
data16
pop
lea
rcll
nop
cmpsl
icebp
mov
push
or
jo
mov
popf
aaa
bound
repnz
rol
dec
inc
sub
add
mov
and
inc
push
adc
sahf
data16
mov
aas
mov
enter
loop
xchg
xor
mov
mov
jno
gs
mov
jnp
mov
mov
in
xchg
xchg
xchg
dec
sub
std
out
xchg
or
dec
pusha
pop
cmp
xor
stos
test
shrb
jmp
jns
cmp
sbb
jle
aas
insb
nop
or
xchg
add
fnstsw
negb
repnz
inc
adc
add
xchg
mov
mov
pop
cmc
in
out
adc
xor
inc
sub
push
outsb
xor
jecxz
pop
jge
and
mov
fnstenv
icebp
movsb
mov
jecxz
nop
cmpsb
mov
mov
xchg
cmp
inc
cmc
into
xchg
rclb
jle
jmp
mov
pop
add
jp
mov
outsl
and
mov
inc
lods
les
sbb
or
jns
xchg
or
push
test
sbb
adc
ret
or
push
lcall
sbb
and
or
je
or
mov
sbb
mov
inc
inc
sub
and
sub
dec
or
aam
imul
rcr
or
jns
sarl
pusha
ss
mov
add
xchg
push
int3
pop
shlb
xor
pop
cmp
and
incb
mov
std
and
xor
cmpsb
iret
loope
push
or
lret
dec
loop
add
call
and
pusha
cmp
jl
mov
cmc
pop
js
inc
jmp
stc
pop
aas
add
add
sub
int
push
dec
add
push
jle
ja
lock
jg
imul
cmpsl
loopne
mov
shrb
sbb
mov
xlat
xor
push
daa
xorb
adc
lahf
cmp
ss
std
xchg
inc
arpl
div
adc
testb
mov
lods
stos
dec
inc
call
pop
inc
sub
mov
ret
aad
fldcw
hlt
jbe
push
andb
cs
mov
cmp
add
mov
out
leave
nop
scas
xchg
mov
sub
lcall
test
jbe
mov
cmpl
lock
adc
ja
or
lds
and
cmp
stos
xchg
mov
sbb
mov
or
xchg
inc
sarl
rcrl
cmp
insb
xchg
call
lret
jecxz
loope
xchg
jle
or
sarb
jle
fs
and
mov
lods
icebp
cmp
stos
sti
in
cmp
and
dec
push
lret
pushf
mov
ret
inc
repz
jae
nop
dec
add
or
js
jge
or
leave
jmp
xor
in
ljmp
pushf
pop
push
jmp
and
incb
cmp
dec
imul
shrb
faddl
stos
push
je
xchg
inc
xchg
jb
lock
mov
data16
jg
div
loope,pt
push
jne
dec
push
out
iret
in
test
icebp
push
mov
cmp
sahf
sub
aaa
loop
mov
outsb
nop
cmpsl
test
lcall
subb
or
add
xchg
fwait
js
pop
pop
adc
jb
fildl
mov
jl
std
cmp
pop
mov
jo
push
sbb
enter
popa
push
ficomps
popa
bound
adc
mov
shlb
xchg
xor
ret
pop
repnz
rcr
movsb
mov
push
jg
insl
mov
jge
pop
data16
stc
lahf
mov
lcall
andb
xchg
lea
cmc
adc
insb
scas
xor
xor
fs
mov
or
jmp
bound
int3
lea
pop
adc
cli
push
loopne
out
out
repnz
fwait
sbb
call
pusha
dec
ret
fistps
in
mov
imul
inc
xor
leave
jne
sbb
aad
push
sub
sub
add
imul
shl
mov
jns
inc
dec
int3
lods
inc
or
test
inc
mov
insl
xor
mov
and
xchg
xchg
cli
stos
mov
xchg
psrld
mov
rolb
enter
push
loop
sbb
mov
rol
mov
aas
sbb
dec
mov
roll
sub
aaa
sbb
push
jge
inc
mov
test
mov
push
test
pusha
cmp
mov
mov
cmp
in
mov
push
js
mov
jae
cltd
jne
cmpsl
mov
into
mov
jge
mov
cwtl
std
nop
inc
mov
jecxz
adc
fisubrl
in
xchg
pop
pop
mov
call
jmp
push
sbb
in
rcr
int
into
sti
push
movsb
cmp
movsl
jae
lea
popa
lcall
pop
nop
dec
sbb
inc
adc
mov
shr
jp
shlb
adc
add
fmul
les
inc
in
inc
jne
stos
loope
dec
push
dec
xor
leave
dec
adc
out
insl
idiv
ss
outsb
movsl
push
aas
and
jl
fists
and
sbb
out
mov
test
jb
dec
jbe
mov
and
sbb
jno
pop
call
sbb
jnp
or
push
iret
cmp
insl
dec
mov
pop
cld
loope
sbbb
movsb
jecxz
sarb
jl
ficoms
mov
nop
jne
roll
lret
insl
mov
mov
lods
fsubrs
dec
jp
and
lea
xor
push
add
xchg
mov
imul
xor
int3
inc
outsl
sahf
pop
ret
sbb
ljmp
ss
faddl
negb
fsubrp
neg
ret
xchg
xchg
out
movl
mov
aad
into
push
rorl
jo
xorl
and
mov
and
sbb
sti
xor
cld
push
jp
out
jge
cmp
pop
pop
mov
ljmp
sub
arpl
js
test
xchg
hlt
nop
scas
pop
clc
mov
xchg
inc
mov
lods
dec
add
call
mov
or
idiv
and
es
in
or
pop
jne
sahf
int3
add
rcll
inc
movsb
xchg
stos
dec
loope
orl
out
pop
push
mov
incb
mov
es
xor
enter
adc
mov
aas
sahf
imul
or
add
leave
jo
mov
enter
dec
lock
and
cmp
cmp
in
ja
negl
sbb
out
xchg
aaa
adc
sbb
lock
shl
jo
aas
fdivl
or
sbb
jecxz
sbb
xchg
mov
and
dec
in
pop
je
or
adc
or
cmp
imul
fistl
roll
call
inc
cmp
mov
adc
fisubrl
in
mov
inc
pop
je
xor
sub
scas
ds
pop
iret
mov
fwait
je
dec
mov
aas
rorb
inc
sbb
loope
enter
pop
xchg
xchg
lret
bound
push
add
mov
lds
data16
jmp
mov
imul
jne
or
in
jmp
sbb
fmull
fst
js
lods
push
ret
scas
jno
pop
xchg
jae
and
mov
add
xrelease
test
jecxz
mov
pop
out
out
aaa
ljmp
mov
add
or
jne
imul
std
xor
add
cld
jo
idiv
icebp
and
bsr
pop
cli
cmp
cmp
lret
xchg
push
jl
push
jl
cmp
js
mov
rorb
fists
je
cmpl
loopne
pop
bound
fs
rorb
xor
lea
mov
push
stos
out
loop
push
cmpsb
dec
mov
fdivl
cltd
sbb
je
dec
ret
adc
push
mov
and
lods
andb
cmp
mov
ret
ret
add
cmp
xor
leave
and
push
outsb
push
jns
movsl
or
add
cld
add
outsl
push
pushf
jg
fisttps
test
lock
scas
push
dec
daa
pop
push
dec
adc
cld
dec
pop
data16
sub
frstor
daa
cmp
mov
pusha
ja
arpl
cmp
cmpsl
mov
or
fdivrs
std
js
pop
aas
loope
jnp
in
pop
pop
push
cs
jb
arpl
addr16
ds
xlat
rcll
pop
push
dec
aaa
inc
jecxz
stos
aam
ret
push
cmp
leave
lret
out
mov
shlb
xor
mov
dec
sub
adc
bound
sahf
sbb
inc
shll
lret
sti
mov
aad
stos
adc
fiadds
lods
insb
push
xchg
fisttpl
incb
adc
adc
adc
fcom
dec
out
jmp
hlt
push
sbb
push
dec
call
mov
icebp
rcrl
test
pop
into
loope
pop
xor
sbb
jnp
stc
pop
frstor
outsl
testb
int3
mov
jmp
xchg
inc
shl
cmp
data16
or
or
pop
dec
andl
outsb
jg
icebp
es
shlb
out
cmpsl
lds
movsl
stos
push
sahf
cmpb
ljmp
out
jb
sbb
andb
push
shrl
sti
mov
lds
nop
mov
add
add
lock
daa
adc
adc
sbbl
sbb
jne
jo
es
push
sbb
mov
sbb
pop
xor
fistl
pop
and
fiaddl
je
push
mov
lods
outsl
xchg
and
sbb
outsb
loop
mov
notrack
mov
test
stc
cmp
clc
lea
cmpb
mov
jbe
add
jns
jo
jbe
jno
inc
and
cmp
fs
gs
xor
mov
xor
std
enter
mov
aas
icebp
xchg
daa
gs
jg
scas
push
movsb
mov
jae
in
sub
jbe
cmpsl
sub
rcrb
lret
add
test
insb
lret
push
popa
push
icebp
fldt
inc
arpl
xchg
loope
push
add
xor
push
mov
jo
mulb
xor
lods
popa
daa
inc
retw
out
lods
and
jecxz
jo
mov
sub
jl
mull
decl
aam
mov
bound
out
insl
and
mov
outsb
in
inc
lcall
hlt
jnp
and
arpl
arpl
gs
out
adc
push
add
bound
mov
jecxz,pn
scas
fcmovb
pop
push
jb
push
popa
je
jmp
ret
mov
xchg
mov
ljmp
xor
inc
mov
pop
push
inc
sbb
pop
and
push
inc
mov
or
add
or
jae
ret
in
push
cmpsl
jecxz
dec
faddl
sub
dec
xor
pop
data16
cmpsl
mov
cmp
fiaddl
fs
test
dec
pop
sbb
das
mov
cmp
mov
shrb
lret
push
popa
xorl
hlt
sbbb
xchg
repnz
dec
pusha
stc
cltd
push
jge
out
inc
sub
dec
jp
mov
jp
hlt
outsb
or
mov
hlt
xor
mov
pop
cmp
out
mov
lock
and
pop
shll
push
adc
fstps
pushl
sbb
addr16
sti
nop
cltd
or
movsl
sub
add
inc
repnz
xchg
or
loopne
xchg
aaa
imull
xchg
addb
cmp
andl
loope
cmc
push
aad
leave
jp
negl
pop
mov
jnp
js
push
loop
cwtl
out
dec
jmp
mov
xor
lcall
cmpsl
ss
enter
jg
jb
sub
iret
pusha
and
cmpsb
xchg
fdivrl
sbb
iret
jbe
les
rorb
sbb
mov
jle
jo
jge
adc
mov
imul
int3
pop
sbb
je
push
inc
nop
mov
adc
int3
xchg
or
mov
mov
pop
push
push
orl
sub
mov
cmp
pop
dec
fdiv
or
mov
sbb
es
popa
pop
add
xchg
pop
push
mov
xchg
cwtl
xor
jne
or
push
adcb
mov
test
clc
xor
fldt
into
push
jae
cmp
pushf
cmp
add
leave
jmp
jns
adc
mov
sbbb
jge
mov
sbb
push
leave
jb
sti
fwait
adc
dec
inc
and
ss
neg
and
notl
je
inc
mov
inc
leave
pusha
mov
adc
mov
mov
rclb
aam
mov
ds
jp
mov
xchg
ret
or
jp
jmp
arpl
repz
lock
inc
enter
mov
scas
xor
push
ret
outsl
int3
pop
cmp
fsubrs
cmpsb
add
mov
push
popa
dec
pusha
mov
pop
inc
and
add
inc
mov
shl
xor
inc
push
mov
mov
adc
hlt
and
data16
imul
imul
std
mov
sti
pop
shll
rdtsc
cmc
cmpl
insl
xchg
outsl
jmp
lahf
rolb
call
mov
lcall
lahf
sub
xlat
imul
fwait
nop
and
xor
dec
lcall
adc
or
ja
mov
dec
sub
dec
or
xor
movsl
inc
adc
bnd
cmpsb
mov
rcr
xchg
xchg
hlt
mov
push
fldenv
jg
dec
mov
cmp
pop
inc
mov
jne
jge
or
jle
les
xchg
int
push
nop
ror
jns
stos
jg
push
push
cld
stos
mov
add
sbb
mov
mov
sub
clc
in
repz
pop
jl
mov
addl
inc
scas
pop
jl
movsl
pop
adc
and
jle
stc
inc
mov
adc
icebp
inc
pop
dec
sub
cli
xlat
aam
int3
jl
sahf
outsb
cmpsl
std
sbb
loope
lcall
or
jbe
aaa
test
in
out
pop
or
out
xor
int3
divl
cmc
mov
rcrl
ljmp
movsl
sbb
pop
dec
arpl
xchg
jb
stos
mov
cmpsl
cmp
mov
mov
test
xlat
adcl
pop
daa
js
fcmovne
xchg
mov
popa
hlt
sub
mov
mov
push
into
test
mov
xchg
mov
stc
jge
rorb
add
mov
std
sahf
sbb
or
pop
cmp
leave
push
pop
scas
dec
andl
gs
or
lods
add
xor
mov
mov
fmul
je
cmp
sahf
add
and
mov
aas
xchg
repz
ss
adc
mov
xchg
adc
add
pop
sbbl
shrb
lret
mov
pop
mov
shlb
push
sbb
add
dec
loop
lret
or
stos
cmp
xor
mov
sub
add
dec
imul
repz
and
jmp
cs
xorl
mov
add
xchg
add
pop
in
call
and
inc
stos
out
lret
mov
adc
sub
sarl
dec
dec
jo
sbb
pop
mov
add
sbbl
mov
mov
imul
aam
sarb
and
or
xorps
and
pop
xchg
mov
daa
add
daa
loope
add
mov
ss
mov
mov
cmp
mov
test
jecxz
mov
hlt
xchg
cmpsl
xlat
andnps
nop
dec
scas
pop
adc
add
rolb
mov
cmc
jne
push
or
stos
mov
mov
xchg
in
mov
pop
dec
bound
cld
cmp
shlb
ror
pop
inc
jmp
ljmp
pop
mov
add
pop
cld
int3
loop
xlat
frstor
roll
push
inc
sub
mov
push
dec
imul
es
xchg
sbb
adc
dec
aaa
add
cmp
mov
push
sahf
or
inc
repz
outsl
rcrb
fs
mov
loop
mov
fisubl
loop
js
mov
enter
mov
fcomp
stc
xchg
fldl
fldcw
stos
je
adc
lds
in
cmpsb
shrb
cs
inc
pop
loop
pop
mov
sbb
loop
or
sbbb
mov
xlat
mov
imul
rcll
sbb
in
and
fistl
mov
loopne
jnp
xor
xchg
shrb
add
inc
xor
xchg
iret
bound
jle
push
mov
pop
hlt
imul
nop
jae
mov
mov
pop
adc
jg
jnp
add
nop
jmp
mov
mov
lfs
rolb
jno
sub
sbb
mov
push
cli
iret
movsb
dec
shl
inc
mov
int
mov
adc
dec
xor
fildll
sbb
cmc
cwtl
hlt
or
dec
mov
xor
cmc
pop
loop
adc
jmp
mov
in
inc
sarb
ret
lahf
shl
pop
cmp
and
xor
or
xchg
push
clc
xchg
out
adc
fdivrp
call
push
bnd
adc
out
adcb
mov
andw
cli
icebp
cmp
jo
jnp,pn
scas
xlat
mov
xchg
lods
addr16
sub
or
lret
cmc
xchg
xor
scas
mov
jbe
xchg
sbb
mov
cmp
loop
mov
lahf
ljmp
int3
mov
scas
lret
ljmp
pop
cmpsb
lods
loopne
bswap
pop
push
ret
cltd
sbb
mov
loopne
jmp
mov
jne
and
push
movd
adc
sub
outsl
jo
mov
bound
xchg
lret
fidivl
pop
fsubrs
sbb
shlb
push
cmp
insb
test
xchg
pop
repz
dec
lcall
jae
mov
sbb
addr16
nop
and
mov
int3
lcall
inc
xor
iret
not
test
ds
int3
int3
and
std
push
stos
arpl
insl
stos
inc
cmp
xchg
and
lds
jbe
push
lret
jmp
push
scas
mov
ret
subb
sarl
push
push
inc
pop
cmc
push
inc
mov
push
jg
or
filds
insb
movsb
popa
push
jecxz
lcall
iret
icebp
fwait
iret
inc
pop
pop
icebp
sbbl
cs
lahf
inc
rcrb
fwait
test
out
pop
pop
inc
inc
lahf
sub
push
dec
cmp
aaa
push
stos
hlt
icebp
cmp
shll
inc
lods
ss
mov
mov
mov
and
cltd
lods
inc
nop
fdivrs
sbb
pusha
push
and
nop
shl
push
cmp
jno
shr
in
dec
jb
aad
xor
and
mov
jl
call
jp
ds
aad
cs
or
nop
out
jb
mov
mov
in
sub
mov
pop
inc
adc
xor
leave
clc
test
jb
filds
or
dec
fisubl
jl
dec
hlt
xchg
jecxz
fcmovnu
sbb
mov
push
pminub
pop
js
push
mov
sarb
push
int3
sbb
mov
lret
shrb
fcomp
in
mov
insb
jae
push
mov
rclb
je
repz
stos
xor
clc
inc
ljmp
das
sbb
jge
cmp
daa
xor
jp
jmp
in
mov
mov
cmp
imull
or
hlt
jae
jle
xchg
data16
mov
inc
sahf
or
fs
add
mov
mov
mov
in
aaa
insb
sub
inc
jmp
or
js
jns
mov
lods
in
cld
aad
mov
cwtl
mov
push
scas
lods
cld
xor
enter
in
mov
mov
mov
add
lock
call
jno
sbb
fwait
movsb
add
mov
push
pcmpgtw
inc
lds
jno
cltd
push
dec
mov
cmovs
stos
xor
lds
aas
out
sbb
hlt
ja
cmp
pop
sub
lahf
int
in
jnp
loope
int3
fnsave
test
fsqrt
sub
push
mov
cmpsl
daa
and
push
mov
popf
cmp
out
jl
jp
lret
xchg
add
mov
mov
jne
iret
cmc
shr
pop
test
lret
fisubs
cmc
clc
jg
sbb
jbe
mov
or
dec
dec
push
mov
pop
inc
mov
pop
es
jp
in
mov
lods
pop
xchg
fsubrl
enter
and
mov
call
adc
cmp
cmp
mov
mov
push
or
lahf
lea
sbb
and
loopne
roll
lods
inc
cmc
adc
cmpb
xor
icebp
jg
xor
mov
test
cs
insb
lods
or
movsl
xchg
push
pushf
test
inc
test
push
rcl
or
pop
lds
ds
jg
out
leave
sbb
cltd
lods
pop
xchg
mov
ret
lds
xor
sub
pushf
inc
in
xor
jecxz
outsb
push
mov
jecxz
leave
dec
push
popf
lds
fstpt
xor
insb
mov
mov
stos
sbb
ss
cld
rolb
push
loopne
pop
testl
hlt
xor
mov
andb
add
mov
ljmp
mov
lods
lock
mov
dec
int3
repnz
les
and
imul
xlat
notb
fisttpl
test
hlt
hlt
js
sti
sti
pop
mulb
popf
test
jns
push
pop
push
sbb
mov
daa
rol
filds
ja
add
pop
dec
pop
mov
imul
pusha
jge
stos
out
xchg
in
push
rolb
mov
imul
ret
les
je
mov
add
cmp
xchg
ret
loop
cmpl
mov
xor
addl
mov
test
and
sahf
jg
sbb
ror
pop
out
xchg
repnz
aaa
xchg
ds
sti
jle
je
sub
push
aaa
aam
add
or
pop
mov
adcb
pop
nop
xor
aam
sub
fwait
mov
hlt
ds
dec
sub
adc
lcall
fiaddl
mov
int3
push
rcll
idivb
push
push
call
adc
mov
push
cmpsb
push
xchg
and
insb
fisubl
jl
bound
xchg
xchg
lahf
push
repz
or
sub
adc
xchg
sub
push
mov
stos
stos
pop
pop
cmpb
inc
mov
stc
mov
sbb
xor
fcom
sub
es
test
sub
mov
and
sbb
pop
or
cmp
loopne
loope
loop
out
dec
sahf
mov
push
mov
sarb
and
shll
cld
popf
movsl
lds
mov
cltd
jmp
rcrb
add
dec
sub
cmp
push
mov
arpl
rolb
jle
rcrl
f2xm1
sahf
lret
inc
repnz
out
jae
push
sti
jo
dec
aaa
pushf
push
inc
sub
imul
sbb
and
shll
or
adc
sbb
rcll
loopne
cmp
adc
xor
inc
jecxz
ss
mov
adc
pop
jmp
push
push
jne
mov
imul
or
shr
mov
cwtl
xchg
push
inc
ss
ret
hlt
cltd
mov
xchg
add
jg
fs
scas
aaa
shrb
jbe
js
xchg
lret
shrl
push
inc
sahf
cmpsb
or
into
cld
xor
mov
inc
sub
push
out
pop
xor
sbb
add
stc
dec
in
addr16
inc
xor
dec
mov
and
insb
mov
imul
movsb
xor
int3
ret
movsl
andb
ffree
divb
pop
loope
pop
jl
es
outsb
shl
sbb
addl
inc
lods
xor
fucomip
shlb
jmp
mov
faddl
into
jo
xchg
lds
add
pop
xchg
mov
test
sti
jl
sahf
sbb
in
cwtl
adc
repz
aas
inc
dec
or
mov
fisubs
and
jecxz
dec
push
insb
shll
or
dec
cmp
xchg
divb
icebp
mov
sarb
jp
mov
movsb
lock
push
into
hlt
cli
inc
in
xor
cwtl
stos
fdivs
jbe
push
popa
sbb
mov
lret
mov
sbb
sahf
xchg
pop
add
add
in
ja,pt
repnz
jl
jns
fmulp
adc
mov
jnp
lock
lock
jae
dec
out
insl
cmpsl
pushf
ret
cmp
jmp
aad
aam
icebp
xchg
push
std
or
lret
ds
sbb
dec
test
fwait
xchg
out
mov
mov
popf
cs
mov
dec
insl
js
xchg
cmpsb
push
cld
fnsave
in
cmp
xchg
push
std
test
in
test
jecxz
repnz
push
jae
push
mov
mov
mov
fcompl
test
cmp
pop
xchg
insb
cmp
mov
sub
subb
mov
aad
mov
repnz
or
xchg
lds
fwait
mov
lahf
pop
xor
push
sbb
dec
jo
push
pop
arpl
add
nop
mov
inc
sbb
jo
test
sub
xor
or
mov
repnz
xchg
mov
push
add
cmc
test
push
dec
adc
scas
call
push
insl
jno
stos
cmp
filds
jbe
stos
iret
fdivrp
popf
cli
out
mov
sub
call
xchg
mov
mov
out
cmp
scas
inc
mov
and
mov
add
mov
adc
jae
adcb
push
mov
in
mov
mov
nop
in
popa
adc
add
scas
sbb
movsl
jns
or
imul
jge
testb
mov
push
imull
nop
mov
or
popa
imul
jne
sbb
pop
sarl
mov
mov
jmp
cs
jb
popf
js
popa
aam
ljmp
mov
pop
cmc
pop
mov
sahf
inc
shlb
ds
mov
push
cmp
adc
repnz
mov
mov
call
std
ds
dec
and
adcl
inc
pusha
sub
and
dec
cld
imul
or
popf
push
xchg
mov
and
in
jne
cmp
pop
pop
pop
and
lock
out
cwtl
jmp
or
pop
outsl
rclb
xchg
jne
insb
adc
lods
mov
mov
sub
jo
lcall
push
lahf
fdivrs
outsb
les
push
test
cmp
cmc
sub
ljmp
push
cwtl
jno
cwtl
push
inc
popf
mov
dec
int3
outsl
fimull
xor
cmp
loopne
jns
and
xchg
jp
jae
push
leave
inc
sbb
into
cld
imul
int
inc
sub
rcl
cmp
stc
pop
mov
cmp
inc
sub
adcl
mov
mov
fmul
push
sbb
imul
dec
pop
in
mov
je
scas
sub
and
add
in
rclb
and
or
dec
bound
sub
sbb
les
and
jle
mov
or
pop
dec
sbb
push
and
adc
push
and
loopne
push
or
xchg
xor
pushf
or
mov
out
xchg
pop
fmuls
rcr
xchg
jecxz
stos
je,pt
and
sahf
inc
in
cmp
mov
inc
int3
lret
lds
in
and
push
scas
mov
outsb
cmpsl
push
adc
lds
fldt
sbb
xchg
fmuls
dec
push
add
inc
push
das
push
sarl
mov
jp
pop
imulb
jecxz
xor
mov
int3
out
pop
and
cli
in
mov
fwait
jg
stos
addb
testl
inc
mov
fnstcw
inc
inc
dec
data16
aas
inc
mov
adc
inc
loope
call
xor
push
pushf
pusha
and
adc
iret
xor
cmpsl
push
cmp
xchg
cmp
outsl
fldt
pop
sbb
adc
call
addr16
xor
je
rol
and
les
aaa
dec
repnz
mov
sbb
sub
std
push
out
outsb
xor
mov
sub
out
out
cmpsl
push
fwait
mov
aas
aaa
and
into
mov
dec
int
arpl
pop
cmp
pop
out
jb,pt
repnz
cmpb
ljmp
pop
cltd
sbb
add
fnstcw
sahf
out
mov
cmp
lret
dec
cmpsl
std
mov
gs
sub
lret
rorb
lock
in
jp
jmp
test
rcr
push
mov
imul
add
in
push
mov
jp
lea
stos
das
jb
mov
add
mov
lods
mov
cmp
cld
data16
and
mov
cmpsb
iret
sbb
xlat
mov
gs
out
shl
mov
daa
inc
add
sbb
sbb
scas
jl
and
pop
jne
jl
cmp
cwtl
inc
push
inc
cltd
cmpsl
sbb
pmaxub
jmp
out
jne
cmp
cltd
inc
adc
and
aad
pop
push
bound
mov
cvtdq2ps
adc
cmp
mov
aam
ror
or
ret
in
ret
xor
add
xor
and
push
js
fidivrl
outsb
leave
fisttpl
sub
test
cmp
insb
pop
fsubrs
push
push
in
push
rcl
in
call
repz
pop
ja
sub
push
inc
xchg
lret
sub
mov
outsb
test
or
and
rorl
in
or
cmp
shr
adc
nop
adc
insb
mov
ljmp
or
sub
sbb
aam
jbe
lods
inc
lods
sub
jg
shll
negl
xor
mov
sbb
xchg
xor
test
sbbb
hlt
stos
fcmovu
mov
fwait
out
pusha
hlt
dec
cs
mov
shll
sbb
and
shll
adc
jbe
mov
sarb
xchg
dec
test
cmp
pop
idivl
xchg
test
shrb
aaa
sub
inc
aas
xchg
out
or
ss
add
adc
jge
fs
sbb
push
orl
sbb
out
insl
out
pop
enter
aam
les
fbld
push
outsl
or
ja
loopne
xlat
jne
cmc
or
mov
mov
inc
xor
push
sbb
xor
insb
arpl
sub
and
xchg
sarl
mov
jbe
or
fs
iret
push
leave
mov
add
mov
mov
aaa
mov
in
mov
add
xchg
cwtl
push
repnz
sub
aad
push
xchg
xor
dec
lods
iret
out
mov
inc
mov
xor
sub
or
dec
mov
fs
jmp
mov
aas
adc
shrl
jmp
mov
pop
out
out
xchg
fsubrs
roll
outsl
ss
jmp
leave
mov
jno
or
int
xchg
and
and
xor
das
inc
sbb
cmpsl
ss
xor
sbb
mov
push
mov
pop
jne
inc
jno
rcl
ror
lret
imull
negl
dec
and
in
ds
sarl
roll
sbb
lods
xchg
call
sub
cli
pop
jae
test
jmp
bound
repnz
xchg
inc
xchg
ja
add
loope
sub
loopne
add
repnz
popf
cld
xchg
or
insl
cmp
xor
mov
jg
popf
or
aaa
dec
dec
movsb
mov
out
adc
test
mov
jge
dec
imul
cmc
cwtl
pop
jne
xchg
pop
pushf
inc
ja
jo
add
ds
ffree
lods
lahf
mov
rclb
mov
jp
repz
jl
or
xchg
or
in
hlt
movb
out
lods
sub
insl
sbb
stc
aaa
cmc
and
lds
sti
movsl
sub
dec
ss
mov
outsl
stos
je
test
es
mov
imul
cmpb
lret
push
xor
fadds
mov
dec
call
cmpsl
mov
sub
lea
in
adc
push
stc
mov
or
mov
xor
push
or
pop
testl
mov
add
add
bndstx
repnz
sub
inc
jp
cmpsl
mov
mov
test
stos
cmp
int
jae
adc
xchg
into
aam
fidivl
enter
mov
xchg
pop
xor
add
mov
imul
les
test
sub
sarl
out
in
in
sub
insl
out
cs
xchg
add
or
stos
pop
push
inc
aam
cli
sbb
mov
movsl
stos
xor
xorb
adc
mov
or
stos
in
xchg
cld
cmc
fcomps
ss
out
inc
incb
js
and
add
dec
push
sub
std
sub
xor
jecxz
xchg
mov
das
js
inc
push
ss
and
lahf
scas
cmpsb
mov
and
dec
jl
mov
shl
les
ja
inc
mov
adc
in
dec
lods
int3
pop
sbb
add
sbb
aam
ss
or
decb
dec
das
mov
pop
jb
mov
icebp
fs
loop
orl
or
mov
push
push
out
mov
mov
shll
mov
data16
insl
mov
add
add
lret
inc
aas
icebp
roll
mov
pop
mov
cmp
int3
imul
clc
out
xchg
sbb
ss
xchg
pop
imul
enter
sub
aam
dec
and
pop
out
cmp
inc
gs
sub
jmp
dec
movsl
fdivs
pushf
inc
add
shl
lods
int
iret
dec
out
dec
sub
push
subb
adc
les
daa
fdivs
xchg
adc
fistpll
das
cmp
gs
pop
xchg
scas
pop
adc
mov
std
and
inc
inc
sbb
dec
mov
push
jb
out
insl
mov
ljmp
mov
xor
pop
js
mov
mov
xchg
xchg
ds
mov
test
inc
xor
cmc
popf
inc
add
stos
adc
cmp
call
ficoms
xor
add
mov
jmp
xchg
mov
lds
and
jno
or
adc
xor
enter
push
cmp
div
popf
or
mov
fisttps
or
test
push
stos
leave
arpl
lock
cmpsl
cmp
mov
cmc
xlat
sti
xor
nop
jo
es
scas
in
ret
aam
dec
cs
int3
jae
loope
movsb
out
nop
mov
mov
sahf
bound
or
mov
ret
addr16
pop
cmp
pop
test
cmpsb
push
dec
xchg
fidivs
shrb
xor
mov
jl
mov
ja
sahf
imul
pop
sub
pop
out
test
cmp
test
push
sub
push
pop
repnz
jo
push
xor
insb
test
mov
sbb
or
push
mov
pusha
sub
hlt
cmpsb
mov
shlb
mov
ds
outsb
movsb
pop
insl
and
imul
icebp
pop
jge
fldl
lea
lods
and
test
out
cli
ret
push
sub
push
es
rcr
xchg
ja
pop
mov
lods
pop
orl
aam
mov
xchg
popa
call
mov
or
scas
jnp
pop
popf
jle
out
pop
sahf
mulb
sti
fidivs
pusha
dec
mov
fwait
ret
jb
cmp
mov
test
inc
ljmp
lcall
sahf
aad
cmp
add
and
fisubrs
movsb
dec
xchg
jg
scas
ja
fcmovnu
inc
pop
stos
push
push
in
mov
stc
stc
scas
fiadds
add
jne
dec
jns
sub
mov
aad
jb
cmp
sub
mov
mov
stc
mov
inc
mov
cmp
add
fstps
sub
pop
pop
out
sub
adc
int3
push
jecxz
mov
ljmp
mov
xor
outsb
mov
in
mov
cwtl
or
mov
or
sub
dec
insl
xor
fbld
jnp
mov
rcr
push
dec
xchg
pushf
gs
arpl
xchg
mov
sbb
cmp
sarl
inc
imul
shlb
ds
cmpsb
and
push
xor
inc
sti
jle
mov
scas
jne
jmp
jecxz
push
adc
adc
mov
cwtl
xor
leave
popf
cltd
dec
fcmovb
cmp
sarl
mov
pushf
cli
push
sub
shll
adc
movsb
not
dec
nop
xor
ds
stos
pop
shl
pop
in
jae
add
dec
ss
or
ds
push
and
js
adc
movsl
faddl
add
fisttpll
inc
push
xchg
lret
lods
sbbb
pop
fsubrl
inc
fstp
push
sbb
decl
popf
and
mov
aad
rorl
int
fwait
adc
adc
loop
and
mov
out
jbe
add
hlt
das
add
cltd
hlt
sbb
xor
push
push
aas
mov
xor
and
and
jns
xchg
out
je
pushf
lock
xor
jns
imul
mov
cld
jae
xor
xlat
repz
dec
loopne
jne
mov
test
xor
push
push
jmp
cmp
or
push
sub
popa
into
jno
outsl
and
in
mov
mov
cmp
je
jmp
xchg
sub
xlat
sbb
or
loope
iret
lcall
daa
je
sub
cmpsb
adc
adc
inc
in
aad
loop
dec
xor
or
das
loopne
sbb
mov
sahf
adc
jg
outsb
lahf
push
mov
inc
insb
sar
cs
lock
mov
fstpt
xor
call
data16
imul
in
les
xor
lds
add
dec
lds
add
and
out
cltd
pop
xchg
ficoms
jle
dec
add
cmp
xchg
fsubrs
rorb
es
sub
out
push
cmpsl
test
imul
push
stos
rcrb
mov
fs
and
and
push
imul
mov
stc
imul
cmp
clc
jb
xchg
and
dec
das
int
cmp
push
mov
mov
add
hlt
out
xchg
add
jnp
scas
cld
pusha
aad
js
sbb
hlt
out
pop
popa
sbb
mov
pop
and
data16
push
filds
mov
xor
jo
fsave
mov
mov
leave
or
and
icebp
shrb
xchg
mov
cmp
xchg
cmpsb
cmp
cmpsl
icebp
pop
int3
subl
add
jmp
lds
fisubl
das
leave
ljmp
mov
sbb
mov
stc
clc
shrb
rcll
inc
nop
enter
push
lahf
xchg
int
cmc
pop
test
xor
pop
out
jb
xchg
test
pushf
push
cmpsl
pop
adc
push
iret
push
xor
mov
jne
bound
xchg
xchg
pushf
xchg
jmp
lcall
ss
mov
mov
lea
mov
imul
add
dec
jp
pop
ret
push
js
shll
pushf
out
jecxz
cmp
bound
and
inc
mov
das
and
mov
push
gs
into
vmovdqu
sbb
jo
jecxz
lret
leave
fwait
xchg
xchg
int
pop
out
bound
or
push
scas
shl
jnp
jmp
mov
sbb
clc
pop
fisubs
adc
test
inc
or
mov
shll
and
inc
jle
jae
sbb
or
push
push
sbb
mov
lret
in
cmp
outsb
rcrb
rolb
xchg
mov
cltd
loop
ds
cmpsl
sbb
add
std
in
inc
inc
dec
adc
jnp
mov
les
xchg
adc
fildl
jmp
pop
adc
outsl
fsubr
jo
stos
out
or
and
push
jecxz
cmc
and
push
push
or
xchg
in
test
xor
lcall
xor
jge
mov
js
push
ja
xchg
lods
imul
test
mov
int3
cs
cltd
outsl
fadds
hlt
lods
jmp
psraw
fdivrl
mov
dec
mov
out
nop
pop
push
aad
pop
test
mov
push
and
inc
and
rolb
mov
push
or
or
push
scas
xor
and
jb
mov
inc
loop
jp
jae
cmp
aaa
cld
scas
rorl
sahf
orl
adc
xchg
inc
cs
leave
js
lret
mov
jo
jge
cmpsb
pop
test
inc
outsl
fmull
mov
xchg
lods
ret
insb
dec
bound
add
dec
cmp
dec
jbe
sub
mov
out
incl
mov
adc
dec
repz
mov
mov
rorl
ret
dec
cmpsb
in
inc
adc
in
scas
jb
jmp
aaa
into
jno
leave
push
cmpsl
mov
imul
jns
dec
or
out
xor
xorb
test
int3
and
mov
inc
mov
cmp
or
imul
out
mov
xchg
mov
fistps
cmp
mov
into
imul
sub
push
pop
mov
sub
sub
push
dec
xor
aad
aas
sbb
rclb
aaa
lcall
out
pop
sbb
aaa
or
xor
push
test
repz
andl
dec
and
or
imul
int3
roll
das
jae
fsubrs
outsl
bound
or
add
or
pop
xchg
je
push
aaa
bound
jae
jbe
divb
cmp
or
sub
jns
pop
jnp
adc
rcl
push
inc
or
outsl
push
test
mov
jnp
jmp
pop
sbb
mov
add
aad
mov
mulb
inc
pop
hlt
scas
mov
lods
fcompl
push
and
mov
aaa
push
icebp
mov
popf
pop
xchg
dec
stos
push
jge
mov
les
insl
jecxz
insb
or
inc
cmpsl
aas
addb
cwtl
and
mov
jo
ss
cmpsl
mov
sbb
mov
icebp
ffree
repnz
test
call
test
popf
mov
dec
pushf
in
clc
sub
push
dec
xorl
mov
test
mov
push
xchg
push
test
shrl
test
mov
pop
inc
inc
dec
dec
adc
ds
sar
aam
roll
xchg
mov
lds
in
lahf
pop
faddl
scas
mov
pop
xchg
stos
lret
aaa
pusha
mov
jle
sub
inc
pop
xchg
lea
lcall
in
push
ss
loopne
jb
arpl
je
cmp
sbb
loop
mov
mov
imul
push
pop
jns
jns
add
inc
mov
and
notb
add
loopne
add
mov
es
jb
imul
lods
arpl
shlb
nop
lock
sti
jl
loopne
jno
fs
cli
call
sub
and
mov
pop
imul
xchg
jge
inc
in
add
cli
sub
cld
movsl
add
js
ljmp
mov
jp
inc
call
adc
cmp
mov
loope
jle
jmp
jmp
add
cs
insl
jp
or
mov
mov
rcrb
sti
mov
mov
pop
add
xlat
test
adc
mov
sub
int3
mov
lods
mov
pusha
lock
out
insb
jne
bswap
sbb
push
pop
xor
imul
lret
imul
out
cmpsl
imul
mov
cld
idiv
jecxz
loope
int3
jl
pop
and
lock
arpl
dec
sub
cmpsl
fwait
mov
inc
mov
push
push
mov
pop
loopne
shll
push
lahf
and
xchg
sub
xchg
cli
and
jbe
mov
mov
mov
aas
adc
jb
test
daa
xor
mov
rorl
in
scas
and
lret
sub
ss
cmp
pop
lahf
jne
mov
ds
mov
pop
jecxz
clc
out
ret
pop
cli
nop
jge
mov
pusha
sti
rcll
push
push
insb
sti
subl
aaa
jne
lret
pop
mov
jecxz
fwait
push
jbe
int
sub
shrl
lea
push
push
or
pop
popf
mov
idivb
add
scas
inc
dec
mov
inc
mov
push
call
popf
xchg
jne
test
scas
push
popa
cs
pushf
mov
push
mov
and
call
test
add
or
add
pushf
int3
test
shlb
pop
in
mov
push
andl
aam
jp
dec
pusha
sub
pushf
decb
loopne
psubb
movsl
jb
mov
fdivr
bound
popf
cmp
xchg
push
ficoms
stc
lret
sbb
lock
test
inc
pop
xchg
jl
das
arpl
dec
mov
outsl
cmp
adc
mov
adc
ds
xor
inc
scas
cmc
out
xchg
js
xor
out
cwtl
mov
sbb
xlat
mov
int3
jo
and
mov
inc
push
int
xor
push
cmp
shll
clc
jle
gs
mov
dec
adc
xlat
orb
mov
sbb
and
fs
repz
fmuls
push
outsb
lock
inc
scas
je
test
nop
xor
shrb
mov
inc
and
xor
loope
imul
fstpt
jecxz
pusha
mov
out
and
pop
aaa
out
daa
in
dec
lods
xor
fistpll
cmp
rolb
iret
mov
adc
push
cmp
mov
pop
xor
out
push
mov
inc
push
cmpb
sti
mov
lods
rcr
lret
pop
and
adc
js
psrlw
and
out
mov
mov
add
loop
jno
insb
jle
xchg
jle
cmp
ror
xchg
push
outsl
dec
pop
jbe
in
jecxz
cmp
cs
xor
cwtl
inc
xor
add
sbb
inc
ljmp
scas
icebp
sbb
pushl
mov
or
push
mov
inc
icebp
dec
sahf
bound
push
js
arpl
mov
lods
cmp
cmp
sub
test
sahf
aas
out
jg
add
adc
out
or
test
repz
pcmpgtd
sub
ret
aaa
lock
loop
mov
orb
js
hlt
dec
mov
pop
cli
or
sbb
or
leave
int3
xchg
js
dec
xchg
aas
adc
cld
inc
movsl
jp
adc
fmulp
xor
push
mov
ljmp
movsl
push
mov
pop
jnp
xchg
sarb
in
out
cmc
jmp
scas
cmpl
mov
sarb
mov
shlb
jo
push
test
fidivs
and
adc
rcrb
jo
mull
cmp
mov
mov
mov
and
test
sbb
mov
jl
hlt
cmp
sbb
sub
sahf
and
rolb
lods
sahf
pushf
add
xchg
loopne
mov
push
fstps
jge
sub
out
dec
rorl
sbb
sbb
repnz
out
lea
dec
pop
imul
push
push
mov
dec
sbb
add
sarb
cltd
pop
mov
pop
cld
notl
fmul
test
es
pop
pushf
faddl
inc
fnstenv
and
bound
sub
dec
loopne
sub
dec
lret
inc
inc
push
add
jnp
xchg
ret
and
pop
xor
in
mov
jnp
hlt
mov
and
lahf
movsl
js
fcompl
jp
enter
adc
outsl
mov
dec
or
push
lods
or
cwtl
add
lock
jp
and
popl
ja
cld
add
imul
pop
movlps
jns
in
cmp
push
stos
inc
fdivrs
xchg
movsb
test
std
fcom
std
ja
std
movsl
out
jnp
lea
mov
xchg
push
dec
inc
std
sbb
xchg
jmp
mov
adc
jge
sbb
lret
inc
or
daa
mov
mov
jmp
mov
cld
into
lds
push
aam
aam
mov
or
aad
pop
sbb
fistpll
lcall
outsb
pop
xchg
daa
or
push
lcall
lcall
insb
push
or
sbb
ret
idiv
cmpsb
push
and
xor
push
inc
mov
and
mov
lret
ja
jmp
je
add
inc
cmp
jle
xor
cmp
mov
xor
cmp
rorl
out
push
outsb
or
hlt
orl
mov
arpl
js
dec
jge
cmpsl
push
out
mov
add
sub
outsb
sbb
xchg
out
imulb
or
lock
and
sbb
xchg
orb
adc
fcoml
test
pusha
cmp
pop
xorb
bnd
stc
adc
scas
lods
adc
xchg
sbb
scas
cltd
pushl
mov
mov
mov
daa
js
mov
fldenv
pop
jne
in
dec
adc
lcall
sarb
fildl
or
cld
outsl
and
imul
xor
push
daa
mov
cltd
cmp
sub
jmp
jae
cmp
aam
mov
inc
ret
pop
dec
jl
mov
adc
sbb
ljmp
sbb
lds
dec
enter
aas
jmp
mov
outsb
cmp
pop
outsl
mov
lret
xor
in
cmpsb
cmp
imul
inc
enter
sarb
in
sub
scas
add
aam
shl
mov
fsubrs
loopne
mov
outsl
jno
push
lahf
xor
mov
fnstenv
push
mul
mov
jle
jge
repz
outsl
inc
add
ljmp
rcr
or
pop
adc
hlt
push
mov
push
scas
jl
pop
xor
lods
add
jl
neg
xlat
mov
outsb
adc
flds
adc
push
jl
lock
stos
shrb
incl
rcrb
xor
sti
xor
push
xor
jb
shll
sub
int3
or
jns
imul
ja
int
sbb
int
sub
mov
adc
cmpsb
mov
dec
test
imul
enter
lods
shlb
pop
out
pusha
out
mov
inc
fsubrl
mov
enter
outsl
rcrl
pop
test
sbb
jnp,pn
nop
lods
int3
int3
adc
mov
pop
sti
icebp
jnp
or
lods
cmpb
mov
xor
les
in
sub
sbb
mov
test
push
dec
imul
add
int3
pop
aam
dec
and
mov
clc
jbe
mov
movsb
jle
jecxz
jo
popa
add
js
fstps
scas
adc
outsl
dec
aas
fwait
or
daa
dec
adc
mov
mov
adc
xlat
addl
in
mov
mov
push
cmp
cld
cmpsb
ljmp
dec
adc
sub
fstpt
andl
sub
or
movsl
pushf
xchg
hlt
les
and
lret
or
xchg
sbb
icebp
dec
outsl
adc
les
jno
gs
test
movsl
outsb
xchg
inc
mov
loopne
imul
rorl
sbbl
cmc
add
and
in
out
rorl
and
sub
cmp
dec
adc
push
cmp
cwtl
jb
je
sbb
int3
pop
jp
jge
dec
jb
loope
or
pop
daa
ljmp
mov
ficompl
mov
addl
cmp
fs
fmull
sub
lcall
lea
adc
mov
movsb
mov
ja
arpl
dec
mov
or
outsb
insb
mov
lea
pmulhw
xor
pop
rcrl
fwait
repz
xchg
gs
in
pop
lcall
cmp
mov
push
out
cmp
adc
push
mov
jo
push
ja
movl
lret
xor
mov
pop
daa
mov
sub
sbb
rcll
ljmp
jp
pop
pop
into
les
inc
aam
mov
mov
mov
fiaddl
xor
mul
jno
sarb
aad
sub
lods
cmp
or
aas
cld
cmp
lds
push
or
cmp
movsl
repz
cwtl
dec
jbe
xchg
outsb
pop
inc
push
stos
ds
mov
or
push
mov
movsl
jno
cs
in
xor
mov
out
mov
xchg
inc
or
pop
cmp
adc
repz
pop
pop
pop
fldt
out
stc
xchg
mov
adc
fdiv
mov
fisubl
stc
and
fcomp
push
sub
mov
test
faddl
movsb
add
lea
stos
pop
adc
gs
push
sub
xor
mov
push
fcomp
and
repnz
out
sbb
loopne
ss
stos
cmp
xor
ret
mov
xor
pop
out
inc
test
je
cli
dec
scas
divb
dec
bound
inc
loopne
out
or
mov
rcll
call
out
pop
mov
inc
push
push
out
jno
loope
adc
add
leave
out
cmp
popa
adc
xchg
adc
push
or
fnstcw
fcoms
push
lahf
in
lret
lock
xchg
jns
jle
add
push
push
popf
xor
push
cs
cs
outsb
pop
cmp
push
lock
cmp
jb
mov
mov
enter
jne
add
in
mov
cli
cmp
sti
das
test
push
xchg
or
shl
testl
dec
sbb
inc
xor
pop
cmpsb
jo
shrb
scas
xchg
mov
hlt
test
insl
xchg
lds
sub
add
or
rcll
jp
hlt
push
or
jno
pop
rcll
mov
pop
mov
and
test
cmc
xor
and
cmp
scas
xor
lret
cmp
out
cltd
dec
jl
jbe
in
aas
jae
stc
xchg
fisttps
out
jl
bnd
clc
xor
js
push
out
xorl
jle
lea
cmp
cmp
pop
ret
mov
insl
jl
inc
mov
insb
aad
arpl
xor
loopne
jecxz
pushf
lret
or
out
popf
ret
insl
fisubrl
sbb
adc
sub
pop
popa
cmpb
imul
aas
cmp
dec
stc
in
jp
fwait
adc
test
adc
pop
inc
jl
inc
insl
mov
mov
cmp
push
stos
cmp
aas
enter
mov
enter
pop
jnp
movsl
push
ja
inc
push
clc
test
das
push
xor
pop
into
mov
test
rclb
jo
cmp
or
shrl
insb
test
test
loop
jg
test
or
jp
push
call
add
je
xor
jnp
mov
cmpsl
adc
cmc
ss
stc
or
icebp
int3
negb
mov
pop
xor
jb
cmp
repz
int
push
jno
push
mov
lret
add
pop
add
scas
cmp
fwait
test
mov
mov
xlat
cmp
lret
or
jne
repz
pop
repnz
cmp
xor
and
fimull
pop
jnp
out
clc
pop
inc
js
cmc
jle
cvtps2pi
imul
test
mov
or
push
push
dec
jmp
pushf
inc
or
aad
pop
daa
rol
jl
adc
dec
divb
push
xchg
pushl
jp
lods
stc
stos
sahf
cli
xchg
rorb
fcompl
pop
push
adc
inc
loopne
ss
and
inc
in
scas
test
pop
xchg
inc
mov
outsb
xor
sar
stos
sahf
mov
loopw
pop
pop
pop
mov
testl
movsb
fwait
dec
xor
cmc
test
add
lret
dec
push
call
xor
scas
and
out
pop
ja
adc
in
jp
push
rol
push
xchg
or
les
mov
mov
push
pusha
mov
fiaddl
mov
lea
popf
add
push
mov
popf
cwtl
jmp
pop
or
add
outsb
pop
jmp
jnp
mov
aad
sarb
mov
adc
mov
jge
mov
push
out
inc
jmp
dec
cli
sub
mov
es
stos
push
pop
loop
push
and
cld
pusha
pop
xchg
adc
sysexit
fistl
xor
jle
outsl
sbb
mov
fcoms
cwtd
cmp
sbb
pusha
lds
repnz
or
sub
xor
mov
ss
loope
sbb
aas
roll
imul
mov
bnd
xor
adc
push
inc
loop
lods
or
out
cmp
adc
repz
ja
cmp
mov
add
mov
sti
sub
cmpb
aam
ret
pop
fsubrs
inc
push
inc
jnp
arpl
mov
jl
jae
adc
fwait
mov
das
jne
int3
cmp
shlb
fisttpl
aad
sti
dec
pop
ss
push
loope
out
daa
inc
mov
dec
sub
insb
pushf
add
les
cs
or
adc
out
jl
test
dec
pushf
idivl
jle
call
jmp
test
lock
mov
test
fmull
fdivrp
lods
es
cmp
je
jg
lcall
cmp
push
cwtl
and
rcrb
pop
pop
dec
xor
xchg
mov
aas
cmp
mov
jno
aam
loopne
cmp
add
xchg
clc
mov
shlb
mov
inc
mov
pop
mov
sub
adc
fwait
push
or
adc
daa
xlat
mov
pop
mov
cmpsl
push
jnp
mov
inc
pop
jb
shrb
mov
or
push
mov
clc
call
push
jns
data16
push
in
lret
stos
sub
movsl
cmp
scas
arpl
adc
push
mov
mov
xor
adc
out
dec
enter
mov
addr16
push
dec
cmc
mov
xor
insb
add
pop
mov
push
mov
xchg
outsl
test
and
lahf
test
in
shlb
mov
push
lock
inc
push
push
push
mov
or
add
cmp
jb
xor
inc
jns
aaa
and
stos
pop
push
test
test
aaa
xor
cmp
mov
stc
into
rcrb
mov
sbb
lock
in
stc
adc
mov
mov
mov
mov
mov
cmpsl
mov
sub
xor
jge
inc
xchg
adc
inc
mov
lock
lods
cmpsl
pop
jnp
int3
jno
mov
shll
fmuls
stos
cmp
mov
jp
gs
cltd
repz
stos
add
or
xchg
mov
or
adc
ror
push
fwait
sub
cli
in
mov
cmp
mov
aaa
mov
mov
pop
mov
mov
mov
icebp
lock
outsl
pop
ret
insb
leave
push
int3
enter
jge
cmp
subl
mov
movsl
jge
mov
movsbl
or
in
lcall
mov
fimuls
or
daa
out
jl
je
lahf
xchg
sub
cs
out
stos
pop
pusha
lea
cmp
ss
je
inc
mov
bound
push
inc
mov
fwait
in
lcall
imul
or
xor
inc
xchg
jmp
ud0
das
cmpsb
ljmp
mov
adcl
stc
ficoml
xor
loopne
pop
adc
ret
push
and
push
pusha
and
por
pop
fistpll
jb
stc
sub
rol
shrl
imul
fsubr
or
push
sbb
clc
or
xchg
and
dec
inc
push
test
scas
cmp
je
xchg
xor
push
jnp
aaa
idivb
add
icebp
jne
xchg
xchg
mov
mov
xor
push
and
fcmovb
mov
pop
dec
sub
mov
lahf
pop
jo
loopne
mov
mov
ret
fldenv
and
cli
cmp
mov
data16
lds
sub
cmp
and
idivl
daa
dec
pop
clc
mov
jmp
push
push
addr16
data16
in
mov
push
ficoms
int
mov
xchg
stos
gs
mov
sub
jle
lods
jne
xchg
lods
lcall
dec
addr16
pushf
or
pop
loopne
enter
test
aaa
and
push
sub
xchg
lcall
push
inc
stos
xor
lods
cld
in
movsl
sub
sbb
test
pop
adc
jp
jno
sub
xor
js
ja
sub
xchg
adc
push
pop
int3
cs
and
push
icebp
notl
aam
or
popa
mov
mov
pop
pop
pop
and
sbb
push
popf
mov
jb
lret
movsb
ds
sub
shrl
add
xlat
insb
xchg
mov
and
mull
lret
sub
shll
push
stos
mov
ds
je
pop
or
movsl
fnstsw
sub
out
push
ljmp
es
mov
aas
xchg
mov
cmp
loop
xor
push
jne
pop
imul
fwait
xor
pop
mov
test
in
fbstp
rcrl
dec
xchg
loopne
or
mov
add
ljmp
lock
pusha
enter
pop
mov
dec
stos
pop
fisttpll
xor
jbe
xor
lahf
roll
sub
xor
cmp
insb
jnp
cs
sti
je
call
xchg
add
push
mov
sub
adc
or
sti
mov
mov
fcoml
sahf
into
pop
xorb
cld
out
subl
popf
cmp
adc
call
sbb
and
jmp
dec
mov
inc
inc
jae
cmpsb
jecxz
cs
fcmovnu
movsl
mov
fs
mov
sbb
cld
add
mov
mov
mov
and
adc
int3
or
inc
iret
cmp
sub
mov
jb
and
lds
jns
loopne
pushf
mov
xchg
xchg
mov
xchg
clc
xchg
std
push
repnz
iret
pop
ret
or
int
movsl
mov
push
push
mov
test
push
arpl
jecxz
mov
cmp
fists
xor
mov
insl
push
mov
add
mov
push
fcomps
push
aas
xchg
mov
push
mov
in
pop
cmpsb
call
leave
mov
daa
std
pop
mov
mov
pop
faddp
pop
dec
cmp
dec
sahf
push
iret
add
stc
test
dec
jns
inc
dec
jp
stos
sbb
mov
call
in
cwtl
adc
fwait
push
push
jge
inc
out
pop
jp
or
aam
loopne
or
lods
mov
popf
push
xchg
js
jnp
xchg
movsl
mov
pushf
pop
or
add
adc
mov
sbbl
cmp
popf
in
xlat
cmp
pusha
daa
add
add
sub
cmp
adc
xchg
jg
cmp
outsb
fidivs
push
imul
mov
in
push
dec
and
inc
nop
mov
and
arpl
fsubp
lret
mov
popa
jp
xchg
je
and
fxsave
push
inc
and
imul
div
insl
adc
mov
xchg
lea
stos
mov
es
inc
and
into
popf
mov
xor
push
mov
sti
dec
lods
aas
cmpb
xchg
xor
addr16
lcall
sub
xchg
adc
xchg
call
mov
xor
sbb
xor
mov
test
xchg
pop
mov
sub
cmp
add
cmp
es
mov
sbbl
inc
xor
lcall
adc
out
push
pop
movsb
imulb
xor
inc
es
xor
xchg
in
js
sub
lahf
xchg
xchg
xor
push
js
sub
insl
in
arpl
mov
dec
mov
aas
sarb
inc
jmp
xlat
adc
shl
js
add
sub
stos
ss
xchg
stc
cmpsb
dec
mov
push
dec
dec
lret
bound
lcall
lds
ficoml
or
or
mov
ja
mov
cmp
mov
sarb
cmp
adc
pop
jecxz
sahf
mul
call
mov
xchg
pop
push
loop
inc
lds
mov
lock
jno
repz
js
push
pop
mov
pop
push
adc
xor
sub
or
push
pushf
fnstenv
or
jle
testb
and
repz
cmp
mov
es
jne
scas
data16
mov
sbb
nop
pop
shl
shrl
and
lcall
xlat
pop
fwait
fwait
mov
inc
js
call
push
mov
data16
mov
cmp
xor
push
jno
add
fwait
dec
push
inc
ds
fimull
ja
lcall
push
jmp
jno
pop
push
xchg
dec
int
bound
dec
xor
lahf
inc
lock
mov
aaa
andl
hlt
andl
dec
sub
repz
jp
fyl2x
xor
cmp
or
dec
sub
popa
imul
pusha
rcrb
jle
inc
cmp
mov
adc
or
lds
icebp
inc
jns
jmp
or
dec
test
pop
mov
out
mov
mov
add
lods
test
sbb
or
int
mov
push
push
sbb
push
sbb
xor
push
cmpsb
sub
and
fisttpll
shll
add
divl
or
testb
add
bnd
icebp
pop
out
scas
xor
cmpsl
or
out
push
out
mov
lcall
jg
dec
push
mov
push
push
mov
pushl
dec
adc
ret
rol
es
jle
lahf
jmp
mov
xchg
fst
push
loop
add
outsb
ljmp
adc
mov
add
sub
jge
xor
adc
icebp
out
fstpl
sub
fcomi
stos
mov
gs
jge
outsl
imul
or
test
mov
cmpsl
arpl
add
or
ret
lods
cli
or
push
dec
enter
mov
mov
cmp
adc
xor
mov
jns
pop
sub
fldl
cmp
ficomps
stc
mov
xchg
or
jecxz
push
imul
popa
pop
push
push
pop
in
outsl
xchg
out
fldt
dec
dec
jmp
fwait
stos
gs
popf
stos
in
mov
js
xchg
and
jns
rorb
rclb
mov
sbb
xchg
insl
lea
jbe
jae
aad
subl
cmp
sbb
jl
dec
dec
mov
ret
mov
lcall
mov
es
inc
sbb
xor
filds
repnz
into
fbstp
mov
notb
and
cli
push
mov
out
ret
inc
fs
aas
xchg
or
into
push
sub
decb
jge
xchg
je
fldt
cmpl
movb
inc
test
ljmp
fadds
loop
in
outsl
js,pt
popa
pop
cmp
push
inc
pushf
adc
cmp
pushf
or
dec
mov
cmp
pushf
jae
push
fisubl
mov
es
jle
xor
fs
lea
daa
ljmp
in
dec
lods
and
into
inc
mov
dec
popf
sub
inc
mov
xchg
int
ffreep
xchg
push
sbb
cmp
fstl
adc
psubw
rcrb
dec
fs
cld
stos
mov
xchg
in
mov
xor
sub
dec
and
sub
sbb
cld
push
or
add
dec
ds
or
cwtl
lret
and
dec
dec
rol
out
sub
nop
lea
xlat
out
fidivrs
repnz
jecxz
sbb
xor
fwait
add
push
test
mov
add
addr16
dec
lods
mov
out
push
dec
movsb
push
inc
mov
push
pop
gs
out
xor
enter
cs
mov
lods
push
push
dec
fldl
lret
jp
out
jecxz
cmpsb
fisttpl
adc
sbb
cmp
add
in
mov
mov
cld
stos
adc
push
add
push
mov
fldpi
xor
in
xchg
icebp
leave
adc
lods
sbb
mov
aas
test
imul
stc
fmuls
out
insl
xor
xchg
mov
cmp
movsl
loopne
xchg
fwait
and
call
inc
add
mov
imul
push
cwtl
orb
mov
mov
stc
jo
cld
mov
xchg
and
pop
loopne
mov
pop
pop
sahf
ja
or
fcompl
nop
mov
clc
xor
sbb
cmp
xchg
aaa
cmp
les
xchg
pop
ss
sbb
shll
pop
int3
xchg
lahf
cmp
mov
ret
push
inc
mov
test
sbb
int3
mov
arpl
lret
ret
out
icebp
mov
nop
nop
add
push
mov
cld
testl
jp
mov
ljmp
jo
xchg
rolb
daa
imul
dec
sbb
repz
push
stc
in
mov
sbb
jnp
fildl
pop
stos
mov
int3
dec
pop
adc
test
lea
mov
pop
test
cwtl
aam
stos
and
sarb
stos
test
xor
loope
out
pusha
mov
mov
pop
fs
sti
rclb
ficomps
and
aad
jp
and
push
pop
jl
cmc
adc
ljmp
jbe
dec
sub
push
dec
movsl
not
gs
jmp
jg
rcl
scas
das
sub
mov
xchg
out
xchg
adc
pop
push
test
rclb
pop
dec
test
jno
xchg
jne
shrb
xorb
sti
mov
pop
cmp
stc
mov
stc
pusha
pop
cmpsl
push
fwait
popa
sbb
mov
cmc
and
and
enter
jnp
test
pop
xchg
xlat
pop
mov
adc
sub
xor
jo
cmp
jb
lds
aas
adc
jle
fwait
mov
scas
out
aaa
jae
cli
test
shl
in
fs
xchg
add
shlb
adcl
cmp
mov
outsb
cmc
xchg
daa
push
pop
out
stos
dec
das
cltd
data16
notl
outsw
push
rclb
dec
pop
inc
sbb
adc
negb
lock
pop
repz
das
cmp
stc
lret
jmp
dec
mov
push
xorl
lds
xor
xor
dec
ljmp
das
aaa
adcb
adc
mov
push
jb
sbb
imul
or
mov
sbb
rcrl
mov
fcmove
jle
and
xchg
jmp
mov
lods
fadd
out
lds
cmp
je
js
dec
mov
jnp
xor
cltd
fmull
shlb
mov
sub
mov
mov
outsb
pop
std
ljmp
cmp
loopne
mov
jp
sub
bsf
stc
cmc
addr16
jmp
inc
dec
fisttps
adc
and
jecxz
arpl
xor
std
andl
jge
scas
fldcw
add
inc
xor
sbb
xor
std
into
push
pusha
hlt
and
sahf
xchg
xorl
push
pop
int3
mov
mov
aas
sbb
xchg
pop
aad
outsl
inc
or
ja
or
scas
push
dec
sub
xor
call
inc
mov
push
daa
mov
jmp
je
add
leave
jne
mov
cmc
arpl
xor
cli
shlb
ja
push
mov
fs
scas
cmp
fld
dec
and
dec
imulb
mov
xchg
mov
fs
lcall
adc
insl
xchg
js
jo
sbb
jno,pt
mov
pop
sub
or
stc
inc
dec
sbb
mov
cs
sar
mov
mov
pop
cwtl
or
pop
addr16
ja
popa
lret
mov
movsl
sub
out
mov
sbb
insb
adc
negl
daa
mov
pusha
sbb
dec
sbb
stc
add
and
fdivs
jno
or
loop
cli
sub
in
sub
cmp
icebp
lcall
adc
jmp
xlat
pop
cmp
ds
roll
fisttps
pushl
lret
dec
mov
mov
jno
cmpl
mov
dec
add
lcall
icebp
imul
aam
mov
loop
out
mov
jo
gs
js
into
enter
fimuls
xchg
inc
inc
icebp
lea
jmp
dec
sbb
enter
mov
test
push
bound
dec
cmp
cwtl
cmpb
iret
mov
js
push
and
mov
sbb
arpl
cltd
sub
shrb
push
xchg
imul
jo
ret
rol
lock
shrl
push
addl
dec
in
repnz
testb
movsl
jns
stc
mov
rorb
lock
cmp
mov
mov
mov
mov
jae
es
movsb
fsubs
dec
je
pop
or
loope
in
int
ljmp
int3
or
sbb
insb
xor
jle
aam
push
into
stos
std
push
dec
inc
jle
lods
test
pop
test
shl
dec
cmp
addl
es
test
add
loope
jp
or
bound
cwtl
sbb
lret
inc
dec
xchg
sahf
outsl
stos
daa
sub
jle
xor
push
call
lret
je
sub
mov
orl
push
pusha
jp
filds
mov
rcl
jmp
out
jl
fs
cmpsb
jb
enter
mov
mov
jo
or
cmp
dec
sti
jge
sbb
dec
out
mov
mov
push
subb
adc
jne
lods
xor
xor
inc
push
jno
mov
mov
mov
or
fstps
je
xchg
adc
pop
mov
and
rcrl
jb
cltd
inc
sub
inc
or
xchg
stos
and
mov
pop
mov
mov
and
loopne
lock
xor
pusha
ror
ror
cmp
outsl
cld
jmp
popa
das
sub
fdivrl
pop
aad
mov
mov
pop
sbb
pop
push
cmp
pop
ret
ljmp
nop
pcmpgtw
mov
push
rcll
mov
popf
movsb
and
sbb
ret
in
stos
push
cmc
pop
enter
jmp
push
nop
aaa
pushf
inc
mov
pop
xchg
outsb
adc
mov
inc
adc
or
push
jne
mov
fstp
pop
sbb
pusha
call
push
jo
and
pop
cmp
js
adc
mov
jp
ret
or
notb
add
xchg
mov
dec
les
adc
pop
lods
mov
fists
je
testb
cmp
popfw
xor
cltd
sub
mov
mov
imull
and
enter
sbb
mov
cs
inc
sti
mov
bound
out
mov
add
push
or
inc
mov
push
inc
and
dec
ss
sbb
or
dec
add
std
mov
xchg
sbb
jae
out
jp
xorb
jge
sahf
inc
pop
and
jle
jp
push
mov
push
xchg
iret
sbb
ret
mov
pop
mov
mov
ds
pusha
test
loop
ss
mov
jo
out
std
jae
pop
push
shll
xor
jb
adc
push
inc
arpl
pop
icebp
push
pusha
and
sahf
shlb
rcr
faddl
lds
bound
rcll
cmc
dec
cmp
xor
scas
dec
mov
in
xchg
xorb
cld
cmc
and
mov
test
or
xor
dec
out
dec
fsts
cli
inc
pop
lret
pop
in
lods
push
xchg
js
and
xor
cmpsb
hlt
pop
jp
mov
rclb
arpl
mov
jb
mov
ret
insb
or
das
sbb
mov
cmp
fstpl
loop
sub
ja
aad
dec
adc
cmc
xor
in
pop
xor
lds
neg
inc
xchg
imul
mov
cld
outsb
inc
jb
inc
sar
cli
mov
mov
push
cmpsl
xor
addb
enter
loope
enter
mov
in
add
xor
mov
enter
popf
jmp
ds
mov
rol
jle
dec
cmpsb
movsb
jmp
add
or
mov
shll
adc
mov
xchg
rorb
sbb
mov
test
pop
in
in
inc
shlb
adc
jge
xor
ss
stc
pop
clc
cmp
mov
pop
cmp
mov
gs
xchg
cmp
xchg
pop
mov
adc
lea
mov
xor
jg
fs
inc
mov
pop
dec
out
mov
imul
filds
jb
lret
outsl
mov
pop
pop
ror
out
icebp
sti
leave
sub
fwait
sub
nop
push
cltd
imul
mov
mov
outsl
xor
mov
mov
xchg
jl
xor
jne
pop
jecxz
sbb
lahf
mov
mov
jecxz
mull
lods
push
mov
lahf
push
out
sti
cld
sar
popf
fidivrs
popf
clc
sbb
add
inc
test
mov
pop
or
fnstcw
and
aad
pop
xchg
push
or
jno
popf
clc
jbe
sub
sub
jae
out
push
imul
icebp
or
into
inc
and
bound
and
mov
sub
ja
icebp
mov
sahf
and
out
leave
std
ret
in
dec
xchg
sbb
ds
mov
popa
mov
adc
push
lds
mov
xchg
and
sub
cmp
fucomi
sbb
leave
mov
jnp
test
outsl
sub
or
mov
inc
add
aas
and
dec
adc
negl
jle
gs
xor
cmp
ficoms
mov
subl
das
sub
mov
add
xor
xor
aam
in
jns
xor
jmp
ficompl
popf
inc
push
inc
or
ret
push
pushf
pushf
xchg
cmp
int
push
or
sbb
dec
in
push
cmc
daa
adc
push
mov
xchg
in
pop
jecxz
test
and
jo
xchg
outsb
lods
outsb
add
js
jno
loop
in
cmc
or
fwait
adc
in
or
pop
pop
or
imul
nop
repz
sbb
adc
dec
sbbl
out
imul
jl
adc
and
rorb
and
arpl
adc
mov
shl
in
notl
imul
mov
pop
cmpsb
dec
rcrl
addr16
or
and
je
jae
lods
enter
loope
leave
sti
std
mov
cmp
int3
ret
xchg
pop
cld
icebp
add
jl
je
imul
xor
add
pusha
push
push
cmp
lea
and
je
scas
xor
loop
add
lds
stc
mov
mov
ljmp
dec
fiadds
fistps
sbb
pop
fisubs
and
out
adc
mov
scas
jnp
jle
cmpsb
mov
sbb
jmp
test
in
push
or
fnsave
enter
enter
cli
pop
insb
xor
test
mov
repz
dec
inc
stos
push
cmp
or
out
and
pop
lock
lcall
in
xchg
mov
or
jl
jg
scas
ja
frstor
data16
dec
fbld
sarl
popa
inc
xchg
pop
out
test
ds
fcoms
pop
scas
adc
jle
add
lock
clc
sbb
test
push
cli
sti
push
cmc
rcrl
xchg
in
fimuls
ficompl
push
mov
popa
leave
cmp
and
pop
sahf
lahf
sub
push
sbb
mov
sbbb
adc
mov
adc
shll
dec
sub
adc
mov
and
cmp
dec
mov
jmp
mov
pop
dec
mov
cld
rcll
and
jbe
stc
pop
data16
jge
pop
xchg
mov
mov
in
push
xchg
shl
pop
scas
ret
outsl
sub
in
cmpsb
sbb
adc
dec
or
fmul
das
inc
mov
or
and
mov
cmp
call
mov
adc
xor
mov
push
inc
sbb
lcall
pop
ret
rcrl
push
lock
out
lea
push
stc
jne
out
arpl
pop
pop
mov
mov
dec
cmp
loope
cld
xlat
sub
inc
stos
in
xor
ljmp
leave
add
daa
enter
mov
out
push
movlhps
ss
cmc
lret
mov
sbb
in
mov
dec
mov
cld
inc
mov
xchg
cmp
add
iret
lods
fadds
jns
lds
fiaddl
lock
fdivrs
fstps
xchg
out
cmc
lahf
sub
outsl
push
pushf
pop
repz
pop
dec
mov
push
dec
add
sub
and
stos
and
dec
fld1
and
mov
pusha
out
popf
sbb
mov
dec
leave
jge
outsl
insl
and
pop
jb
and
cmp
and
leave
add
gs
outsl
test
jle
dec
and
iret
insb
pop
push
add
xor
inc
push
movsl
imul
sub
pop
call
imul
jo
sbb
or
pop
and
sahf
push
xor
in
out
mov
daa
in
dec
mov
and
push
mov
out
mov
mov
popa
popf
loopne
sbbb
cmp
sub
mov
inc
popa
mull
das
mov
inc
dec
mov
clc
sar
out
xor
push
idiv
call
jb
xchg
push
sub
mov
dec
scas
cmpl
sub
push
aas
fidivl
insl
int
jmp
bound
leave
dec
push
adc
pop
in
jnp
ss
pop
dec
das
mov
loop
or
repz
jae
cmp
scas
aam
xchg
xchg
xchg
scas
sub
pop
xor
jnp
inc
and
sub
mov
in
pop
sub
stos
testl
fsubl
gs
test
pop
sub
dec
mov
mov
inc
add
pop
inc
mov
imul
cmc
pop
mov
cmp
in
roll
mov
push
cltd
stc
sub
rclb
out
cmp
clc
sbb
fidivrs
test
sub
or
sbb
xchg
cmpsl
stos
scas
dec
pop
in
jp
test
lret
fwait
inc
int3
test
fisubrs
inc
mov
xor
inc
rol
cltd
and
enter
popa
pop
pop
aas
xchg
jp
push
bound
adc
ret
subl
insb
scas
bound
out
insb
fstp
jae
jne
cmc
jno
ret
sbb
sti
inc
sbb
cmp
sub
sbb
add
add
mov
std
mov
mov
mov
dec
push
dec
fists
hlt
addr16
or
test
lcall
mov
jo
or
push
loopne
and
mov
sahf
and
nop
xor
push
fwait
out
movsl
cltd
popf
and
call
jg
push
jo
loopne
hlt
daa
push
mov
add
mov
cli
popl
mov
mov
and
sbb
in
push
cld
icebp
adc
out
cmp
and
and
sub
hlt
sahf
xchg
cmp
push
fucomip
pop
es
ficoml
clc
test
ss
sti
pop
mov
test
push
sahf
ret
mov
rolb
ljmp
mov
jecxz
xchg
pop
sub
outsb
jmp
in
inc
mov
or
push
inc
ljmp
sub
movsb
insb
sbb
out
ljmp
daa
jecxz
ja
subb
jmp
cwtl
mov
mov
mov
das
imul
fistl
popa
mov
push
inc
test
cmp
lea
std
movsl
cmp
cmp
mov
pop
into
jp
cmpsb
in
hlt
fisttps
gs
pop
push
int
repz
std
ficoms
push
lret
pusha
ret
dec
xchg
movsb
ret
or
jb
or
xchg
imul
fndisi(8087
mov
adc
mov
or
call
sbb
nop
aaa
sub
es
pop
mov
inc
sti
cmpsl
aam
cmp
shll
ss
cltd
leave
sbb
cmp
shrl
push
push
lcall
pushf
mov
xchg
sub
inc
pop
es
or
and
sbb
jnp
int
loope
stos
scas
rclb
repz
or
xchg
cmp
adc
mov
push
outsl
dec
mov
sbb
mov
and
fsubl
sbbl
jge
jecxz
sub
dec
lods
arpl
imul
notl
test
cli
pop
mov
inc
dec
or
fstcw
loop
push
push
rcr
dec
rcr
push
pop
xor
mov
mov
vucomiss
cmp
stos
fwait
and
pop
lods
fwait
mov
test
rcrl
dec
xor
mov
prefetch
or
pop
imul
pusha
dec
test
insl
call
push
adc
sbb
add
std
scas
add
inc
xor
add
inc
cmp
lock
adc
pop
jo
xor
fidivrs
cli
sbb
out
jg
out
and
outsl
ret
mov
leave
cltd
test
int3
xchg
push
andps
add
mov
pop
mov
std
idivb
sahf
jecxz
fwait
mov
mov
push
sahf
xlat
loop
sub
jle
jl
addr16
fimuls
cmp
push
test
fwait
xor
data16
cmp
inc
shll
bswap
sbb
add
jnp
lock
jo
nop
mov
pop
jae
xchg
push
mov
jb
shr
pop
div
mov
cmpsl
push
inc
inc
inc
cmp
out
mov
and
int
push
mov
std
sub
jecxz
xchg
ljmp
jae,pt
push
ljmp
cmc
lods
ret
add
sbb
imul
insl
add
cs
fldt
outsb
pop
push
push
sub
push
loope
add
adc
xchg
int3
mov
jl
pop
jns
jbe
inc
sbb
inc
xor
daa
aam
push
cmpsl
cmp
es
jne
lods
mov
or
mov
dec
lahf
inc
bound
jb
and
cmp
test
inc
mov
and
xchg
ss
or
mov
mov
jle
adc
xchg
call
cmpsb
iret
fidivrs
and
insb
loope
ja
movsb
pop
adc
inc
call
or
mov
push
add
cmp
jmp
mov
out
ffree
insb
ss
push
pop
pop
mov
pop
pop
sub
xchg
cmpsl
mov
das
inc
inc
mov
and
movsl
cmp
dec
idivl
xchg
andl
cmpl
outsl
out
sbbl
fmull
decb
data16
lock
pop
das
mov
lea
dec
mov
mov
xchg
es
add
test
pop
add
aaa
sub
lds
dec
movsl
xor
das
mov
adc
lods
xor
insb
mov
push
andl
loop
out
inc
movsl
hlt
ljmp
add
pusha
push
push
test
xor
mov
lahf
or
adc
dec
int
in
das
mov
je
sbb
and
or
das
jp
push
mov
sahf
sbbb
fstl
push
daa
push
cmp
mov
mov
mov
jge
jle
or
add
jne
fwait
push
outsl
popa
fmull
nop
test
mov
out
ret
insb
xchg
mull
iret
sub
test
daa
outsl
mov
stos
mov
pop
decb
add
aam
mov
dec
imulb
sub
dec
add
stos
jl
xchg
mov
push
cwtl
mov
lods
push
push
pushf
lea
push
adc
pop
fstpt
or
sub
push
sub
ja
test
dec
pop
xor
rolb
pop
xor
mov
cmp
cltd
lcall
and
push
int
pushf
pop
out
into
push
sbb
or
jne
into
inc
test
cltd
orb
iret
cmpl
sbb
push
mov
push
push
lahf
sub
popl
sub
jg
mov
push
jb
pop
cmp
mov
sub
fnstsw
stc
fidivl
push
pushf
mov
and
dec
lret
inc
push
jl
xchg
cmp
shll
xor
idivl
mov
lahf
aaa
daa
xchg
iret
int
jns
push
sub
adc
mov
jmp
and
push
cwtl
roll
repz
mov
das
cli
or
push
inc
fmull
leave
mov
repz
clc
fisubl
add
sbb
and
jae
xchg
outsl
insb
iret
pop
push
test
icebp
in
jb
or
inc
xchg
xor
dec
or
test
call
xchg
cmp
scas
cmp
xchg
and
xorb
xchg
scas
les
xlat
mov
cltd
dec
cmp
pop
pop
add
fwait
adc
daa
dec
gs
mov
dec
cmp
in
outsl
jbe
fldl
push
add
and
movsl
add
jg
push
xchg
ss
xor
push
sbb
mov
sbb
sub
jl
pop
lret
test
jle
xchg
popf
mov
adc
mov
or
push
jge
mov
mov
pop
arpl
mov
adc
call
jmp
jns
imul
mov
jmp
fisubl
aad
cmpsl
in
jno
test
sbb
sub
dec
mov
insl
lret
in
push
outsl
add
adc
or
testl
xchg
mov
ds
pop
dec
test
shrb
inc
xchg
add
or
pop
xor
cli
sub
lods
jecxz
lret
mov
icebp
mov
adc
cltd
sti
int3
data16
dec
and
repnz
icebp
xchg
pop
fwait
cmp
fisubs
ret
std
inc
or
push
aaa
inc
push
sub
gs
lods
push
jb
push
insb
loopne
in
sub
mov
pushf
jb
sub
pushf
jns
cmc
lea
aad
ret
sbb
ss
cmp
jg
adc
div
and
rcrb
data16
adc
xor
test
mov
std
jmp
mov
jo
jp
and
push
fidivl
mov
inc
pop
xor
ja
lds
xor
nop
bound
push
or
lahf
fs
movsb
dec
sub
xchg
divl
cmp
push
dec
int3
mov
add
outsl
push
push
mov
addr16
xchg
arpl
popa
in
fiadds
ljmp
mov
xor
dec
inc
sbb
std
cld
rolb
xchg
inc
jp
sub
sbb
jge
adc
mov
into
sbb
sbb
jb
aaa
das
sbb
pop
mov
mov
inc
lret
push
xchg
pusha
lahf
jbe
scas
xchg
lret
rorb
push
or
iret
xor
xchg
mov
or
aam
pop
std
data16
push
xchg
xor
xor
test
xor
repz
arpl
out
lret
cwtl
push
scas
in
aas
call
mov
sbb
popf
lahf
push
cmpb
xlat
mov
insb
or
inc
cmp
mov
dec
or
or
xor
clc
push
filds
repz
mov
push
and
jecxz
sub
popf
xchg
js
inc
xor
push
sub
push
loope
addr16
addr16
sub
ret
shlb
test
and
mov
pop
rcr
pop
or
sti
int
sbb
cs
loop
movsb
idivb
into
jo
test
cwtl
ljmp
push
pop
jp
pop
lds
sub
jg
mov
in
xor
cmp
pop
nop
rolb
jae
into
sub
clc
int3
call
test
add
push
dec
jg
icebp
leave
shl
imul
mov
call
aaa
xchg
adc
push
pop
inc
clc
ret
xchg
xor
in
pop
cld
leave
sbb
pop
pop
sub
push
jae
in
jae
std
out
outsb
nop
movsl
rolb
pop
or
hlt
ss
mov
adc
push
push
cld
stos
aad
cmpsl
sbb
repnz
sub
das
add
jbe
lahf
xchg
rcrl
jnp
pushf
sub
mov
pop
xchg
test
movsb
inc
and
xchg
dec
inc
sahf
jl
mov
push
or
sub
sbb
add
js
das
push
test
imul
jmp
js
cmc
ss
xor
aad
lds
adc
jl
cmc
nop
call
ljmp
dec
adc
adc
xor
and
aad
les
test
cmc
hlt
sbb
divb
pop
pusha
ljmp
mov
or
adc
pusha
sub
sbb
add
and
incb
arpl
addl
sub
cli
sub
lret
daa
xchg
pop
int3
and
adc
sub
push
repnz
adc
mov
mov
lock
mov
lahf
mov
mov
cmp
pusha
lock
and
mov
adc
repz
mov
mov
fildll
fs
inc
add
cmp
aaa
xor
leave
pushf
mov
jp
hlt
sti
cmp
pusha
jg
mov
icebp
sbb
add
inc
dec
xchg
cmp
fisubl
adc
pop
jge
test
mov
idivb
cmp
fs
push
insb
xor
jbe
cmp
push
jbe
iret
scas
pop
pop
cwtl
test
xchg
push
in
xor
out
jle
fiadds
enter
imul
mov
xor
and
cmc
add
orb
lea
or
lcall
push
jo
lahf
cli
pusha
cmp
adc
mov
add
cmp
mov
insb
inc
or
cwtl
pop
in
ret
mov
jno
repnz
daa
dec
sub
add
pop
or
jmp
call
add
icebp
add
sub
or
shl
shll
ret
mov
mov
sbb
mov
mov
aaa
rcrb
leave
add
jmp
lock
stos
jecxz
ss
or
fiadds
xor
jne
mov
pop
mov
fcoms
add
mov
cs
xchg
add
push
jae
or
into
les
sub
adc
mov
cwtl
and
cltd
arpl
mov
sbb
popf
fstl
jg
dec
and
dec
pushf
out
and
lock
jb
stos
sub
and
enter
call
addr16
fs
std
into
mov
cmp
mov
pop
imul
mov
inc
mov
cmpsl
and
daa
sti
fbstp
xchg
call
testl
scas
sahf
out
test
mov
sub
add
add
xor
scas
cltd
xchg
add
or
clc
inc
in
mov
loope
pop
aaa
shrb
sbb
cmp
mov
lcall
insb
cld
repz
jecxz
fdivrl
cmpl
add
xchg
push
sahf
out
iret
stc
das
inc
sub
mov
inc
and
out
adc
bound
aam
push
in
sar
aas
js
mov
scas
adc
int
stos
outsl
jmp
inc
cwtl
adc
imul
fsub
xor
jb
clc
roll
xchg
inc
xor
xchg
js
fsubrp
pop
adc
lcall
push
cmp
mov
xchg
or
jno
ljmp
lods
or
push
push
iret
lcall
or
shll
mov
dec
sub
dec
cmp
push
lock
mov
xchg
add
test
and
mov
insl
sti
loope
add
enter
in
sbb
lock
cwtl
add
and
xlat
jmp
enter
mov
jmp
mov
mov
xlat
and
movsl
cmp
mov
dec
test
test
lds
mov
mov
jne
adc
sub
and
xchg
inc
and
repz
setg
push
lock
ljmp
add
adc
jg
cmp
pop
adc
repnz
inc
mov
hlt
and
les
adc
sti
mov
mov
pop
and
mov
call
outsl
pop
out
jnp
je
xor
jg
out
scas
cmp
add
in
aad
fcom
ret
mov
or
sub
out
daa
cmp
bound
mov
xor
insb
lods
fldenv
jb
stc
stc
sarb
mov
pop
movsl
push
loope
fwait
lret
xchg
ljmp
adc
call
mov
mov
jo
aaa
xor
pop
test
adc
je
inc
push
push
or
mov
dec
shll
sbb
pop
mov
inc
jb
adc
movsb
fsubl
mov
test
stc
int3
loop
add
mov
shl
jno
sti
cmp
loopne
cmp
cmp
push
or
aaa
loopne
cltd
jnp
lret
or
mov
push
push
outsl
sbb
imul
dec
popf
and
testl
loop
jge
sub
mov
cmpsb
sub
int
shll
js
sbb
cmp
loope
sub
jl
jno
push
mov
xor
ss
aaa
jl
mov
insb
faddp
pop
aad
cmc
add
cmp
jge
stos
jb
adc
pop
gs
mov
arpl
cmp
xchg
cli
cwtl
in
xor
out
jmp
inc
cmp
jae
inc
add
sbb
ss
jbe
repz
or
push
adc
add
fs
xchg
push
sbb
mov
je
add
in
cmp
adc
xor
adc
xchg
imul
hlt
pop
push
pop
popa
lahf
mov
adc
pushf
pop
test
cli
cmp
sbb
cmpsb
jmp
and
mull
xchg
pop
jo
test
or
add
popa
in
in
adc
cmp
adc
jbe
pop
popa
xor
add
mov
sahf
iret
cmp
mov
and
and
insb
add
jecxz
frstor
xchg
lods
daa
xchg
pop
push
lea
add
clc
mov
iret
jle
insl
dec
mov
in
dec
xchg
fs
mov
dec
mov
addr16
add
hlt
push
push
mov
daa
add
in
paddsw
pop
jecxz
jo
mov
jmp
int3
lea
push
movsl
add
sar
out
inc
popf
cltd
sahf
inc
leave
xchg
cli
je
jge
jns
mov
popa
leave
cld
outsl
mov
mov
adc
scas
jg
jno
mov
out
xchg
data16
mov
push
push
mov
mov
dec
xchg
int
mov
out
leave
psubsw
aad
int
cmp
inc
xorb
out
and
fistpll
rcll
push
stos
jne
aam
sbb
lock
inc
pop
sub
pop
push
jp
into
aaa
jle
movsl
push
arpl
and
add
push
inc
push
leave
fsubrs
stos
movsl
outsl
or
lds
push
cmp
mov
pop
sbb
xor
and
xchg
sahf
mov
cmp
repnz
out
mov
stos
xor
push
movsl
dec
xor
jno
addb
ss
xchg
xchg
rcrl
or
and
mov
cltd
cltd
test
pop
jae
xor
mov
rcr
xchg
iret
popa
sbbl
sub
push
cmp
pop
sbb
cmp
mov
gs
pop
enter
popf
int
jns
xchg
jl
mov
sahf
cs
clc
aaa
and
adcl
test
cmp
in
pop
in
mov
inc
ret
lods
mov
lcall
out
pop
scas
cld
jle
dec
xchg
popa
shll
mov
lods
into
pop
cmpsb
mov
mov
rcr
mov
pop
inc
sbb
je
aam
pop
xchg
movb
lock
xor
test
cltd
orl
out
stos
inc
loope
jnp
mov
push
ljmp
xor
mov
fmuls
cmp
push
repz
sub
js
gs
xchg
sub
cmp
cmp
add
lahf
imul
bound
mov
jmp
jbe
or
push
loop
inc
cltd
add
push
test
sti
jae
jle
stos
mov
push
or
sub
pop
pusha
sarb
dec
ss
sbb
subw
mov
push
cmpsb
sahf
adc
dec
lds
leave
mov
cmpsb
mov
es
cmp
stos
and
cmc
inc
xchg
pushf
jns
sub
mov
cwtl
mov
sbb
stc
pop
out
inc
push
inc
mov
jge
cmp
pop
inc
jae
mov
cwtl
push
push
mov
test
shrl
xor
cmp
jp
sub
dec
cmp
mov
clc
add
mov
dec
inc
adc
hlt
push
lods
jmp
jecxz
or
xor
jp
stc
lret
aaa
jo
mov
bound
jl
inc
subb
dec
jne
add
les
cmp
mov
xlat
cmp
aas
mov
push
cmc
mov
rcll
std
addl
xchg
popf
mov
repz
jbe
imul
xchg
cli
inc
lods
subl
mov
jl
mov
add
fs
add
push
xlat
fcoms
das
add
mov
pop
cmp
cs
xor
cwtl
movsb
jmp
cwtl
push
jp
push
ss
mov
or
orb
push
pop
adc
repz
sbb
dec
roll
shl
jmp
cmp
xlat
pop
pop
push
pop
scas
adc
add
adc
mov
cmp
shll
push
mov
fbld
jmp
ljmp
shl
cmc
pop
ljmp
inc
aas
sarb
inc
cmp
ljmp
out
mov
bound
lods
dec
sub
pop
mov
dec
daa
std
ss
nop
jl
out
push
adc
stos
cltd
js
lock
hlt
cld
jns
mov
rol
xor
push
lods
mov
enter
pop
popf
call
out
push
or
mov
in
xlat
mov
xor
cmp
jg
mov
scas
mov
xor
cmp
out
mov
imul
ss
jo
xchg
aad
sar
cltd
and
mov
ds
pushf
popf
pop
test
jp
into
pop
add
jg
jp
inc
cld
sub
jmp
xchg
out
sbb
add
es
scas
and
sbb
dec
mov
lea
push
lds
ds
xchg
fs
aas
sbb
loope
popa
inc
jo
push
mov
daa
enter
adc
inc
mov
xlat
push
dec
push
pop
loopne
mov
fbld
mov
lret
or
inc
pop
fwait
push
mov
jmp
shl
push
out
lcall
xchg
stc
xor
mov
pop
lods
jnp
daa
imul
ds
scas
jns
mov
xorl
jmp
mov
clc
mov
jp
pop
je
adcb
idivb
inc
lock
mov
sbb
scas
mov
pop
test
shl
fwait
popa
inc
sbb
ja
inc
xchg
fisubl
fmull
ja
sarl
jb
cli
mov
cs
jl
ret
es
arpl
loope
out
inc
mov
popa
push
fucom
mov
mov
xorb
pop
in
add
jmp
leave
lcall
int3
cmc
adc
es
xchg
inc
cmp
dec
loopne
adc
repz
jp
mov
mov
push
push
stc
mov
sub
push
sub
aas
add
loopne
pop
fistl
pop
jae
sub
adc
cmpb
pushf
xchg
bound
sbb
je
sbb
dec
bnd
xchg
inc
sbb
fwait
bound
sbb
cmpsl
dec
test
jno
adc
jmp
push
adc
push
sbb
xchg
imul
mov
imul
mov
xchg
fmull
out
jle
leave
addl
lret
sub
lods
stos
fnstsw
jle
out
out
jle
in
lock
adc
imul
push
fs
jecxz
push
lods
out
push
sbb
mov
sub
push
add
out
ljmp
pop
pushf
sub
push
in
xchg
cwtl
je
mov
es
iret
filds
push
xchg
nop
icebp
and
popl
fsub
push
stos
fstpl
mov
movb
fisubrs
jbe
adc
fbld
dec
mov
out
fildl
push
nop
loope
xor
dec
addb
sar
sub
leave
out
xchg
pusha
mov
xor
cmp
outsb
es
sub
or
cltd
jne
mov
mov
std
dec
mov
insb
std
scas
xchg
imul
jne
and
sbbl
int
lods
dec
xor
or
or
add
shl
xlat
aas
into
mov
andl
sub
mov
hlt
pop
adc
sbb
lea
fsubrs
insl
and
fldt
lods
fs
lahf
subl
ja
jno
ficoms
mov
cs
ljmpw
aas
mov
cmp
ljmp
sbb
cmpsb
add
pusha
je
scas
ja
jno
jns
jae
movb
ljmp
xor
rolb
jg
sbb
cmp
repnz
xor
mov
or
decb
pop
jmp
out
idivb
in
mov
dec
jns
pop
xor
into
out
adc
add
add
pop
cmpsl
jp
pop
xchg
leave
mov
mov
imul
iret
inc
xchg
sub
jnp
xor
jbe
mov
jns
pop
push
jb
xor
loop
xchg
loop
cli
lods
aad
jnp
sbb
clc
sahf
test
cmpsb
call
push
push
inc
cltd
push
push
cmp
cltd
test
push
aam
jae
shr
sub
inc
add
push
filds
pushf
push
stc
jnp
or
pop
stc
sbb
sbb
insl
icebp
cmp
push
push
pop
dec
divb
mov
sub
gs
fbld
shr
and
pop
imul
xor
scas
pop
das
adc
pop
pop
mov
or
sbb
xchg
jne
mov
xor
in
mov
cltd
mov
ret
pop
loop
sub
cmp
mov
shrl
jne
push
mov
push
lock
push
shrl
jg
inc
push
sub
push
call
cs
mov
fsub
test
hlt
or
pusha
popa
fnsave
pusha
and
pop
mov
cmp
inc
insl
leave
insb
repz
les
hlt
ljmp
mov
sbb
popf
aad
cltd
or
imul
and
mov
ss
adc
loope
shll
in
dec
push
imul
sti
xchg
dec
in
loope
movsb
and
add
jmp
pop
mov
cld
or
jne
fstl
es
pop
mov
les
test
mov
push
push
test
add
ret
es
cmpsb
out
popf
inc
mov
push
cmpsl
lret
popa
mov
dec
ret
sub
cmpsl
enter
xchg
loope
pop
mov
add
xchg
lahf
rorb
add
dec
mov
cmp
lock
popf
lds
movsl
lahf
jne
cmp
push
test
lods
add
aam
cmc
mov
adc
or
push
mov
stos
pop
cs
iret
or
push
dec
xlat
aam
lea
sbb
cld
call
jne
lret
sub
jg
add
popa
dec
mov
aaa
pop
rorl
add
add
mov
insl
es
gs
sbb
adc
jle
popa
sub
pop
inc
fsubrl
xchg
js
and
fwait
jnp
in
inc
adc
mov
or
cmp
fs
lret
fs
or
stos
sub
lcall
push
sbb
fstps
sbb
andl
or
add
push
out
sub
not
pop
ret
xchg
pop
adc
inc
and
sbb
sub
test
int3
push
je
lods
ljmp
mov
or
fdivs
mov
xchg
fucomp
rcr
mov
loopne
ss
mov
sbb
push
jb
bound
icebp
cmpb
sub
movsl
mov
add
and
jmp
fisttpll
jbe
jbe
fwait
lcall
enter
shr
xchg
lock
fbld
xchg
das
adc
push
xor
arpl
cmp
sbb
push
dec
mov
cmp
mov
bound
inc
push
enter
jp
and
aas
and
ds
aad
es
push
mov
sub
pop
jnp
test
and
and
sub
xor
fdivrl
jns
or
fstpl
xchg
insl
es
sahf
frstor
mov
dec
ljmp
or
lea
gs
aaa
movl
and
roll
int
mov
sub
jp
fwait
outsl
mov
cmp
sub
pop
push
dec
jp
cld
loope
icebp
pop
mov
cwtl
sbbb
pop
pop
shrb
mov
aaa
mov
push
es
pop
cli
notl
addr16
mov
dec
enter
xchg
addb
repnz
sub
es
push
cltd
inc
sbbb
sbb
inc
and
dec
jnp
jp
stos
nop
or
js
xchg
test
adc
adc
xorl
cltd
xchg
fisubrs
mov
icebp
fsubrl
push
cmp
push
push
out
jno
out
jecxz
xchg
fidivrl
sbb
jne
jae
mov
mov
lock
insb
sbb
aam
mov
pop
aad
mov
movsb
inc
mov
int
scas
cmp
add
adc
inc
push
loop
fwait
mov
cld
test
loop
fs
jg
fldt
in
fbld
repz
cmpsb
gs
test
xor
mov
ret
ret
xor
shl
outsl
cs
add
add
icebp
mov
cmp
xchg
fstps
mov
pusha
aas
sarl
add
xchg
subb
sub
sub
scas
stc
mov
dec
inc
jb
stos
sub
iret
adc
sarb
repnz
lcall
mov
xchg
pop
iret
push
inc
leave
xor
push
fbstp
cmp
ja
in
jp
inc
pop
mov
lods
pusha
shll
push
cwtl
xlat
xorl
inc
clc
mov
add
dec
insl
shlb
or
xor
jnp
iret
dec
and
xchg
pop
scas
jge
popa
sbb
pop
test
enter
inc
push
sbb
in
mov
bnd
mov
inc
push
sub
out
in
push
pop
add
lret
repnz
xchg
lcall
adc
in
push
push
inc
push
fdivrp
jnp
xor
andb
push
cs
sahf
pop
jne
loope
arpl
ds
lret
test
mov
dec
push
ret
loope
loopne
flds
icebp
or
loope
fcoml
vpackuswb
adc
pusha
xor
sub
jnp
push
and
push
daa
or
push
pop
mov
or
les
xor
ss
lcall
aas
sti
inc
popf
int
sahf
lods
bound
das
adc
test
imul
in
push
jl
shll
jns
pop
insl
pop
and
and
scas
pop
or
mov
inc
push
and
pop
filds
std
addl
out
shlb
jb
loope
mov
das
mov
mov
stc
xor
imul
call
cli
mov
cs
sbb
pop
mov
inc
inc
xchg
pop
adc
mov
add
xor
xchg
mov
pop
xor
repnz
push
add
fsubl
dec
push
cmc
mov
orb
enter
mov
inc
mov
and
or
cs
mov
lret
enter
mov
neg
xor
lods
inc
sbb
sti
daa
pushf
adc
jns
and
pop
or
and
push
stc
int
sub
dec
daa
sbb
gs
mov
out
shlb
inc
sub
xor
int3
cmp
sub
pop
cmp
data16
mov
add
push
lock
mov
test
or
xor
jo
jno
popf
inc
dec
rcl
pop
jecxz
arpl
cmc
pop
pushf
cmc
scas
or
jl
stos
mov
mov
push
mov
test
inc
sahf
xlat
les
cld
xor
sbb
lea
sar
or
xchg
adc
cmp
pop
or
pusha
sub
and
or
jl
cs
xor
int
stos
jbe
jp
jp
mov
jnp
mov
ret
pop
sahf
iret
ja
push
test
addr16
insl
lds
roll
popf
dec
push
repz
cli
pushf
inc
fldenv
test
dec
out
push
mov
cmpsb
ds
add
dec
xchg
scas
push
jne
test
mov
mov
icebp
scas
loop
push
daa
xchg
insl
xchg
or
mov
stos
shrb
fbld
mov
daa
or
ljmp
icebp
loop
pop
sbb
clc
adc
adc
or
repz
pop
add
stos
and
mov
xchg
call
scas
rorb
aad
icebp
or
or
and
jae
adc
push
jno
cmp
mov
js
sbb
sbb
imul
xlat
cmpsl
test
push
jns
push
ljmp
push
pminsw
push
xchg
sahf
jne
popa
dec
bound
sbb
cmp
into
or
dec
or
imul
sbb
sub
xor
push
cmp
pop
es
jbe
int3
sub
lods
inc
insb
sub
shll
xor
mov
add
xor
outsb
cmc
insb
mov
xor
jbe
loope
mov
stc
enter
mov
xor
int
cld
sbb
add
lret
rorb
and
xor
jge
ljmp
mov
bound
sub
dec
or
pushf
push
fdiv
scas
ret
leave
cmp
or
cmp
and
cmp
add
pop
inc
iret
into
mov
fdiv
or
mov
push
out
sbb
cmc
cmpsl
or
cmp
jge
sub
lods
xor
gs
adc
ljmp
fstps
mov
rcl
xchg
lcall
sbb
or
addr16
and
xchg
imul
mov
je
scas
xchg
cli
idivb
push
out
dec
jb
mov
xor
syscall
xchg
xchg
shll
das
outsl
xor
lods
adc
je
cltd
or
mov
cmpsb
and
mov
push
mov
cmpsl
lock
xchg
and
out
sub
stos
sbb
jg
sbb
iret
xor
sbb
jle
test
push
mov
push
xchg
repz
jmp
xchg
fmuls
push
mov
or
lock
xchg
into
fiaddl
adc
xchg
xchg
int3
sub
lods
stos
inc
shrl
cmp
xor
jp
xor
jmp
push
ja
dec
push
sahf
sub
call
js
pop
jl
cmp
rcr
mov
nop
cmc
outsl
inc
mov
xchg
fists
jne
lock
pop
pop
orb
fbstp
mov
jmp
xchg
push
adc
adc
stos
add
push
pop
not
imul
push
rolb
sub
jg
fcomp
lret
cmpsl
int3
pop
int
fnstenv
push
lds
push
inc
jg
mov
call
mov
fnstenv
mov
xor
in
cmp
ret
mov
sarl
adcb
out
movsb
push
imul
mov
sbb
adc
aas
adc
pop
out
cwtl
fwait
pop
or
and
dec
fisttpl
stc
movsb
mov
push
sarb
mov
push
mov
push
add
or
leave
push
out
mov
cmp
fwait
mov
cmp
rol
jno
jle
push
push
pop
lea
lahf
repnz
mov
ljmp
pop
sub
bound
lods
fwait
xchg
notl
cmp
cmc
sarl
or
xchg
or
ds
inc
cmp
data16
std
cwtl
dec
sbb
ja
mov
mov
sarb
std
adc
mov
pop
out
sbb
and
or
test
shlb
sub
stos
je
mov
fnstcw
test
cmp
pshufw
and
xchg
jge
fistps
sbb
int3
cmpsl
xchg
out
xchg
fwait
xor
cmc
je
jmp
xor
mov
inc
jnp
or
or
or
or
outsb
popf
sub
inc
inc
xor
sub
pop
push
sbb
out
xchg
outsl
mov
insl
rcrb
lock
pusha
add
mov
or
mov
stc
xchg
push
enter
outsl
ret
xchg
adc
xor
stc
in
xor
test
sub
lea
and
or
cmpsb
cmc
or
pop
cmpsb
orb
lock
iret
mov
sbb
mov
mov
subl
jecxz
imull
enter
leave
insl
add
mov
mov
jle
loopne
popf
pusha
mov
fwait
mov
rcl
out
mov
test
mov
outsb
ficomps
lods
xchg
cmp
cmp
gs
or
or
push
test
sbb
out
or
imul
jns
mov
imull
jbe
mov
pop
aaa
push
mov
mov
push
dec
inc
enter
iret
xchg
jecxz
icebp
xor
and
enter
imul
pop
imul
or
xor
and
movb
dec
mov
ret
fsubrs
sub
or
aam
pop
mov
lcall
dec
mov
and
mov
dec
arpl
xlat
jns
cmp
cmp
xor
push
lahf
push
ret
int
loop
pop
mov
and
test
lret
std
push
out
cwtl
cltd
das
lret
and
aaa
jns
pop
icebp
imul
and
pushf
ret
int
in
mov
push
jg
push
outsl
das
xchg
mov
and
push
and
aam
leave
cmp
inc
movsb
gs
cwtl
ss
inc
sub
push
dec
adc
push
fstpl
test
mov
jle
in
int
lods
inc
pop
stos
enter
or
sub
jbe
add
jnp
pop
iret
loop
pop
dec
out
jo
mov
add
mov
int
mov
or
ret
clc
add
xor
aad
dec
leave
jne
shll
sbbl
jle
cmp
sbb
xor
cmp
loopne
fsubrl
fs
add
icebp
test
mov
mov
push
inc
sub
in
xor
add
hlt
pop
jnp
adc
cmp
pop
xor
push
mov
mov
aaa
lods
in
xchg
cmp
add
jns
ljmp
fadds
mov
add
push
mov
je
inc
add
int3
jl
rorb
push
jecxz
mov
push
cli
pop
and
push
sahf
loop
jae
or
scas
mov
shlb
sbb
push
les
stc
fildll
mov
add
inc
or
test
arpl
sub
pop
int
out
out
pop
popf
int3
ss
fiadds
push
sub
cmpsl
sub
movl
cmp
les
add
add
mov
out
xchg
fdivs
in
fnstcw
std
aam
lahf
cltd
ss
sub
in
mov
outsb
pop
pushf
push
dec
cltd
push
dec
das
push
adc
movl
ret
jb
and
cmp
mov
xchg
dec
jne
pop
das
or
lcall
in
push
sub
rol
outsb
adc
jo
sbb
addr16
das
fstpt
jne
sub
add
xchg
cmpsb
mov
sbb
sub
push
shll
xor
mov
mov
std
pop
mulb
dec
jecxz
ljmp
test
dec
mov
cmpsb
je
add
btr
mov
js
jmp
or
inc
dec
scas
les
and
adc
adc
add
pushf
mov
push
sub
push
jnp
push
gs
faddl
xchg
sbb
cld
mov
shrl
mov
xchg
mov
jp
cmpsl
and
pop
fcomip
outsb
lds
and
mov
sti
repz
sbb
and
ljmp
and
or
shrl
ss
insb
stc
fdivl
stos
adcl
pushf
inc
ret
insl
test
sub
push
sub
adc
jp
aas
push
lods
leave
cli
stos
xlat
xor
jns
jl
cld
dec
add
inc
lods
push
rcll
lcall
lret
hlt
imul
sbb
jle
jns
xchg
loope
mov
xchg
add
add
rorl
sub
mov
cmp
ljmp
loope
xchg
cmp
jge
sti
sbbl
cld
adc
das
loopne
mov
jl
mov
sbb
imul
pop
jge
sbb
out
fwait
and
cmpsl
cmp
jg
rcrl
lods
test
xchg
push
xchg
cmp
js
lea
mov
add
and
mov
je
adc
inc
cmpsl
xchg
mov
pusha
add
icebp
xchg
and
ds
test
push
stc
mov
shrb
pop
mov
sub
fists
jne
insl
and
scas
push
sbb
aad
push
cli
out
cmp
pop
sti
mov
sti
push
out
cmpl
inc
xor
outsb
lds
jge
inc
jg
xchg
jmp
push
inc
pop
sub
pusha
inc
aam
xlat
stos
popf
adcl
pop
inc
stc
cmp
fsubr
xorl
cmpsl
mov
sbb
leave
add
mov
pop
into
inc
push
push
iret
pop
xorb
outsl
dec
jne
xor
es
shlb
cltd
adc
mov
mov
mov
and
push
pop
mov
adc
jle
inc
lea
push
cmpsb
je
sahf
add
jo
adc
xor
clc
ret
push
xor
loopne
sbb
inc
les
fs
ss
iret
out
push
outsl
addr16
cmc
cmp
iret
lret
sarb
stos
rcrl
inc
in
enter
orl
xchg
push
or
lds
imul
sbb
ret
xchg
into
pop
cs
adc
inc
cwtl
dec
rep
sbb
jae
fiadds
lea
nop
inc
mov
pushf
sbb
xchg
rcrb
pop
loop
ljmp
movsb
adc
fstl
add
and
lret
test
adc
jle
aam
aas
sbb
add
pop
in
psubusb
sub
jg
dec
and
sarl
inc
push
pop
adc
pushf
jae
sub
in
adc
inc
loopne
inc
hlt
jge
sahf
xor
cwtl
xchg
sub
lods
addr16
lea
aaa
jmp
inc
cwtl
add
arpl
data16
aas
popa
push
aam
sub
add
jno
and
neg
xchg
pop
sub
int3
out
pop
mov
cwtl
cmp
jnp
lret
rclb
push
es
mov
ja
inc
in
das
xor
movsl
aam
and
inc
int3
cmc
pop
rcrl
es
das
pushf
sub
adc
mov
mov
js
stos
sub
insb
scas
jbe
test
gs
pop
mov
addb
loop
jb
pop
mov
fstpl
sbb
scas
cmp
call
xor
fidivl
xor
decb
lret
es
decb
pop
into
mov
push
popf
jno
mov
push
pusha
adc
in
xor
int
sbb
ficoms
mov
jp
mov
mov
xor
dec
sbb
daa
pushf
hlt
sbb
cmc
aas
lods
repz
pop
aam
out
loopne
pop
mov
pop
or
jns
push
cmp
jb
mov
out
push
and
sbb
xor
adc
pop
sub
fists
add
adc
mov
out
cmp
insb
ss
sarb
jno
jo
add
stos
lahf
out
inc
fwait
aaa
fbstp
lcall
push
aas
pop
pop
jae
or
ret
dec
out
dec
pop
int3
mov
and
stos
dec
cli
xchg
dec
clc
and
mov
outsb
xchg
xor
fstps
inc
xchg
filds
add
je
pop
cmp
and
insl
mov
into
loop
cltd
and
shrb
pop
inc
push
dec
notl
ret
fiaddl
cltd
cwtl
push
mov
ljmp
or
sti
jl
ret
and
cmpsl
das
shlb
and
out
int
sbb
pop
adc
inc
or
ljmp
mov
outsb
pop
and
lods
ds
addb
push
jo,pn
pop
pop
nop
mov
push
xor
dec
pop
add
and
arpl
pop
imul
movsl
stos
hlt
xor
iret
ds
std
mov
std
mov
loopne
pop
stos
cmp
pop
clc
rolb
int3
xlat
sub
lahf
cwtl
cmp
add
stos
or
dec
lea
inc
out
lods
inc
mov
inc
add
jle
jo
pop
pop
ljmp
xchg
pop
fistl
fs
fisttpll
in
mov
insb
sbb
int3
jl
push
sub
cli
fnsave
fidivrl
mov
sahf
push
jmp
call
icebp
sub
cmp
and
xchg
xchg
jb
inc
inc
push
sub
dec
dec
pop
or
xchg
ja
push
psubw
roll
lea
fisubrl
sahf
jae
push
lret
xchg
loop
cmpsl
dec
adc
clc
repnz
pop
sub
call
push
mov
call
inc
subb
xchg
jns
test
mov
or
xor
icebp
rclb
sbbb
cmp
push
xchg
adc
push
popa
mov
add
mov
jae
mov
fsubs
xchg
inc
stos
ja
testb
mov
sub
je
mov
sub
vxorps
in
lock
pop
leave
outsb
pop
xchg
icebp
jnp
inc
mov
jmp
sub
dec
inc
xorl
in
repnz
sbb
inc
les
ja
aaa
paddb
lcall
jnp
mov
in
inc
sbb
insb
int
dec
data16
cmp
cli
xor
sbb
and
and
sbb
sub
insl
cmp
sbb
outsb
rol
pop
sbb
je
sbb
add
in
std
inc
test
ret
cltd
mov
lea
ds
outsl
jle
test
lds
mulb
or
int3
movsl
mov
ror
jmp
dec
xor
mov
inc
lods
aam
jo
adc
xchg
test
mov
stc
insb
int3
test
add
push
fcomi
cmpl
ss
sub
adc
push
popf
out
aaa
adc
mov
push
hlt
sbb
cwtl
out
mov
test
sub
cltd
and
movhps
push
scas
inc
push
cmpsb
jecxz
jno
dec
mov
or
push
mov
sti
or
fwait
out
mov
mov
fnstsw
out
ret
int3
orb
push
mov
mov
cmp
lcall
fdiv
mov
mov
dec
stos
out
pop
out
int
sub
xchg
push
and
cmp
adc
cmp
mov
xchg
pop
in
jnp
adc
inc
mov
mov
fistl
icebp
ss
mov
cld
sti
mov
jne
out
pop
mov
icebp
dec
movsl
sbb
es
mov
int3
pop
addr16
cwtl
testb
mov
jns
in
data16
mov
mov
pop
test
inc
jle
shll
pop
pop
sub
xor
mov
push
cwtl
xor
pop
rclb
jecxz
cmp
sub
sub
mov
inc
xchg
mov
mov
sti
dec
xor
mov
push
aam
cmp
popf
jo
dec
dec
call
cs
push
cmp
adc
and
fbstp
pop
xor
jo
fidivs
pushf
fldt
mov
cld
xor
test
pop
or
sbb
je
adcl
cmpsl
sbb
or
loopne
jo
adc
sbb
mov
cli
out
jg
push
push
imulb
cmp
sbb
dec
imul
incl
inc
mov
mov
ds
into
and
mov
pop
out
mov
inc
xchg
js
fdivs
bound
adc
pop
mov
push
xor
lcall
ficoms
jp
inc
pop
xchg
push
pushf
jne
sti
bound
lret
xor
xchg
fdivs
loop
shlb
and
mov
push
push
cmp
jnp
popa
xchg
xchg
aaa
pop
sub
xor
cmpl
insb
xor
lea
add
push
xchg
mov
sub
rcrb
add
pop
addr16
push
ret
insl
shl
cmpsl
and
enter
cmpsb
fnstcw
out
addr16
dec
rcrl
daa
xchg
sub
add
pop
sbb
mov
call
lret
ds
adc
mov
adc
mov
jns
xlat
xchg
ljmp
adc
adc
inc
jb
add
call
cmp
cmp
or
mov
scas
mov
sti
test
xchg
sti
movsl
inc
xchg
or
cs
rorl
adc
out
xor
and
lods
out
pop
sbb
stos
xchg
xor
mov
mov
jge
dec
sbb
xchg
jge
out
pop
popa
xchg
sub
ds
js
mov
cmp
push
cmp
test
enter
lret
loopne
test
and
add
xchg
loope
add
pushf
xchg
cmp
int3
cmc
lahf
push
cmc
mov
mov
andl
mov
inc
cmp
out
fwait
jne
daa
cmpsl
dec
dec
je
aad
insl
outsb
pop
mov
mov
mov
inc
jne
leave
cmp
dec
mov
shl
lcall
aaa
jo
movsb
jg
mov
push
loop
mov
jb
cmp
xor
adc
xchg
xchg
hlt
or
xchg
popa
pop
aad
ficoms
sti
jo
cmp
test
pop
mov
lods
leave
dec
pop
push
mov
fistl
xchg
shl
dec
js
aas
xchg
out
pop
shrl
mov
lds
enter
inc
inc
mov
shrb
mov
adc
sbb
cmpl
cli
sbbl
xchg
mov
rcrl
stos
pop
imul
aas
test
stc
out
dec
bound
ss
ja
adc
insb
push
jbe
adc
sbb
and
sbb
adc
mov
ret
push
clc
fiaddl
icebp
dec
push
jge
cli
pop
xchg
icebp
insl
jae
out
cmp
mov
adc
cmp
shll
dec
or
pusha
add
dec
mov
shrl
insl
enter
aam
loopne
jg
pop
adc
sub
xchg
movsl
aad
mov
insb
fwait
ret
imul
stc
adc
incb
fcomps
pop
fmuls
scas
aas
cmp
xchg
aas
sar
mov
xor
hlt
mov
test
mov
mov
jno
addr16
imul
mov
inc
cmpsb
popl
jbe
int
push
sub
loope
enter
inc
inc
add
ret
xor
xlat
xchg
mov
call
out
cwtl
lods
cmp
movsb
xchg
fsubs
call
mov
loop
cmp
cmp
es
out
push
xlat
in
xchg
sub
sahf
ret
mov
ret
mov
stos
push
push
sbb
dec
call
fdivr
lret
imul
push
mov
dec
js
insb
fldt
xchg
test
pop
pop
xor
or
imul
pop
loopne
and
arpl
cltd
sub
outsb
mov
lds
in
cmp
xor
cmp
fwait
adc
enter
mov
rolb
cmp
mov
in
xor
lea
mov
loope
or
xlat
es
mov
mov
rclb
or
pop
lock
std
out
fsub
js
das
aaa
repz
and
cmpsb
mov
out
lret
fsubrs
mov
jns
pop
cmp
push
mov
daa
jne
adc
jmp
lods
mov
cmpl
inc
js
test
pop
xor
dec
inc
repnz
cmp
fldcw
aam
push
fcmovnb
mov
jl
pop
rorl
cmpsb
loop
ret
lcall
mov
les
test
pop
je
ror
cmp
cmp
push
ja
xor
enter
shlb
lods
adc
ret
xor
mov
call
out
xchg
out
cmpsb
iret
and
and
jg
adc
jbe
nop
mov
lds
add
inc
xchg
xchg
pop
imul
mov
sbb
rclb
fwait
in
jl
dec
cmp
ds
pushf
icebp
jg
js
inc
test
out
xchg
mov
hlt
add
and
cmp
ds
dec
sub
leave
sub
aaa
addl
sbb
mov
repz
cwtl
popa
sbb
or
xchg
dec
inc
jbe
push
and
pop
out
rolb
pusha
cmp
cmp
ja
in
outsl
mov
sub
dec
cmp
adc
cmp
mov
xchg
ficoml
iret
jae
insl
sub
lds
out
dec
add
push
cmp
pop
mov
mov
jns
xor
jo
data16
fldcw
jl
rolb
sbb
rclb
les
dec
jb
in
mov
popf
and
mov
jne
cmpsb
push
sub
aad
xchg
in
or
stos
fistl
stos
adc
mov
aas
inc
aad
repnz
fucomp
call
fmuls
push
cmp
shrb
dec
decb
push
addr16
leave
xchg
cmc
jle
cmp
mov
mov
mov
aad
inc
mov
sub
adc
cmp
xchg
in
in
add
rcll
scas
pop
or
mov
pop
cmp
cmp
cmp
es
or
out
dec
jg
cmpsb
inc
out
xor
and
and
insb
enter
insl
xor
mov
loopne
ficoml
or
mov
push
pop
in
test
jmp
sbb
sub
lods
ja
cmc
sbbl
shl
adc
popa
cld
sub
mov
lea
test
out
test
xor
cmpsb
cmp
test
ds
in
data16
jno
jecxz
push
jecxz
fsts
xorb
in
and
pop
and
int3
add
dec
lret
in
loope
sbb
jg
xlat
xor
sub
stc
ds
adc
dec
push
shll
cmp
mov
xor
pop
bound
or
in
inc
scas
sbb
divl
inc
mov
mov
xchg
punpcklbw
in
xchg
je
test
setb
lret
xchg
rdtsc
add
dec
pop
in
pop
and
jnp
std
cmp
popa
xchg
adc
les
fsubrl
adc
dec
stos
xor
add
test
adc
cmp
or
int
jno
hlt
jp
test
icebp
ret
pop
xor
cmp
sbb
mov
out
xchg
add
pop
enter
js
ret
jbe
repnz
js
xor
insb
pop
sarl
mov
lcall
iret
leave
loopne
fmull
sti
lods
hlt
addr16
push
in
inc
mov
jp
gs
inc
outsl
mov
xchg
aaa
fwait
shll
lahf
test
pop
adc
dec
pushf
enter
aad
fcmovnb
or
les
adcl
pushf
dec
jmp
push
push
mov
push
mov
mulb
push
mov
mov
popf
imul
and
xor
int3
add
sub
fdivrs
push
js
or
and
inc
mov
xchg
sub
loopne
lods
push
add
push
movsl
inc
setle
jecxz
dec
popa
jb
push
js
int3
cmp
daa
shl
sub
in
sbb
aad
push
sub
push
ret
xchg
mov
in
bnd
push
dec
mov
int
jg
out
push
inc
pop
dec
cmc
mov
jmp
pop
xor
adc
cmp
mov
test
popf
push
sub
mov
cld
sub
xor
sub
addr16
mov
adc
loop
data16
jmp
test
cltd
fwait
sub
inc
xlat
adc
push
pop
sti
int
in
mov
stos
mov
jnp
push
xchg
mov
lcall
cmpb
mov
lds
cmpsl
push
fimuls
inc
bound
imul
sbb
push
xchg
add
decb
jg
adc
test
sub
loop
add
pop
in
mov
mov
pop
rolb
sbb
insl
mov
cli
and
mov
inc
out
test
mov
das
adc
dec
or
divl
insl
ljmp
add
outsb
dec
fistpll
leave
mov
sbb
or
jmp
jg
fiadds
mov
stos
aaa
lds
mov
mov
into
and
jecxz
adc
scas
in
sbb
imul
dec
sbb
jmp
xchg
inc
adc
fbstp
in
jge
mov
pop
gs
loop
mov
inc
xchg
mov
cld
ret
into
imul
xor
daa
lods
fisubl
jge
jl
out
mov
jle
dec
imul
std
mov
mov
lahf
mov
mov
mov
mov
rcrl
dec
cmp
stos
mov
sbb
mov
inc
aad
test
sbb
dec
fmulp
xor
mov
push
ret
stos
mov
adc
xor
movsb
xor
lcall
push
adcb
int
xchg
pop
jl
inc
jle
inc
mov
cld
gs
lock
dec
lods
std
insb
sub
mov
insb
or
rolb
push
mov
dec
aaa
mov
lea
pop
jg
fsubrs
testl
or
sahf
pop
gs
cmp
dec
aad
xchg
out
inc
test
scas
out
aas
xchg
inc
mov
xor
jns
notb
out
das
pop
push
cmp
aad
mov
cmc
leave
xchg
sbb
jae
aad
xlat
cmp
lock
add
fisttpl
jo
xor
dec
mov
mov
shlb
mov
xchg
lea
xor
adc
out
push
dec
loope
ret
scas
test
pushf
fldl
jp
les
clc
push
jnp
pushf
pop
lahf
aam
jg
movsb
jmp
aam
sbb
dec
loope
enter
daa
std
sbb
pop
leave
lock
ss
mov
mov
fidivrl
inc
pusha
pop
nop
jmp
mov
lcall
dec
xor
xchg
test
jmp
mov
pop
loop
stos
fisttps
or
invd
push
out
jl
push
pop
jge
pusha
lahf
stos
adcl
add
stos
jb
subb
cltd
push
clc
cmp
orl
push
and
jl
and
pop
jecxz
cwtl
and
loope
dec
loop
jg
adc
pop
sbb
xchg
out
in
push
xor
push
out
insb
cmp
cltd
or
pop
sub
into
push
mov
jecxz
pop
arpl
push
fldl
fwait
pusha
push
or
icebp
mov
xor
cmp
pop
cmp
cmp
xchg
sti
cmc
gs
rclb
es
out
xlat
sbb
lods
pop
mov
repz
jecxz
push
test
lods
adc
add
jno
ljmp
repnz
test
jl
scas
addr16
leave
les
adc
sub
std
into
aas
mov
xlat
xchg
scas
mov
bound
xchg
jg
mov
mov
out
pop
fcompl
jae
and
inc
adc
stc
lret
adc
aas
sbb
push
mov
add
lahf
xchg
mov
xor
int3
pop
sbb
orl
xchg
in
in
stos
push
andb
push
sub
aas
ds
mov
or
and
les
fs
adc
mov
add
sub
imul
sbb
sub
repz
sub
in
fcomps
xlat
push
mov
cli
fsubrs
mov
inc
mov
sbb
dec
mov
inc
dec
call
push
mov
bound
xor
dec
add
adc
outsb
cmp
push
cld
mov
push
mov
adc
rcrl
cmp
call
fcoms
cs
mov
jp
ror
sbb
fnstcw
push
pop
out
lods
in
sub
iret
sbb
fiaddl
lods
mov
jne
js
call
mov
mov
sub
idivb
push
nop
xor
addl
mov
mov
push
and
scas
mov
scas
mov
jnp
push
inc
and
and
rorb
std
mov
in
into
fidivrs
push
lcall
je
jne
jno
test
adc
in
push
stos
xor
les
cmp
or
out
jp
lock
mov
add
sbb
jnp,pt
mov
es
adc
stos
es
and
xchg
pop
lret
and
sbb
jle
add
xchg
push
ljmp
pop
mov
arpl
daa
popf
outsb
jle
adc
adc
mov
jp
scas
xlat
test
xlat
gs
imul
pushf
pop
pop
aaa
push
jmp
xchg
imul
pushf
movsl
xor
loope
data16
mov
jne
add
sbb
cmp
lds
mov
mov
loope
stos
or
pop
bound
mov
pop
shl
or
rol
ret
or
push
nop
jnp
ljmp
lods
daa
adc
in
xor
shll
cmpsl
xlat
inc
ret
sbb
mov
addr16
stos
jmp
lods
mov
dec
cwtl
or
in
mov
cmpsb
sub
leave
aaa
scas
xchg
push
out
sub
mov
mov
pop
xchg
sti
fisttpll
xchg
je
nop
nop
mov
add
cmc
or
in
data16
imulb
popa
inc
dec
data16
push
popa
es
pop
push
scas
mov
xchg
test
fisttpll
imul
jge
lods
arpl
cmc
mov
fidivs
xchg
sub
jb
pushf
ret
popf
xchg
shl
or
mov
mov
ljmp
ljmp
test
test
imul
sub
mov
or
pop
cmp
stc
push
shl
push
xchg
loopne
mov
and
pop
pop
pop
mov
loop
cmc
inc
cs
pop
std
cltd
out
jo
inc
jb
and
aad
mov
out
push
iret
aaa
sbb
and
mov
and
bound
push
adc
out
add
mov
int
in
cltd
inc
outsb
negl
xor
std
mov
mov
addl
jp
and
test
push
inc
push
and
jbe
add
and
or
outsl
outsb
pushf
mov
jns
and
mov
jno
push
dec
xor
fcmovnbe
mov
mov
xor
cmp
stos
pop
inc
xor
sbb
push
pop
add
push
dec
das
jmp
cld
dec
hlt
adc
scas
outsb
sbb
leave
stc
je
data16
cmpsb
mov
fwait
pop
lea
pusha
mov
mov
xor
fdivr
sub
aaa
xchg
push
adc
adc
ss
push
xor
fiaddl
negb
xchg
scas
pop
fsubrl
test
xchg
outsb
and
std
cmp
jo
cmp
pop
int
pop
out
dec
subl
mov
or
sbbb
push
pop
jg
mov
mov
std
push
aad
out
ret
outsb
pushf
mov
sarl
or
xlat
out
imul
inc
cmp
fisttpll
push
test
lods
test
cmp
nop
push
in
sub
negl
jne
arpl
test
movsl
bound
in
pop
sahf
cmp
push
pop
mov
inc
lock
je
add
rol
or
in
loope
outsl
fcmovnu
push
jg
jge
shrb
mov
mov
cmp
cmpsl
mov
push
sbb
mov
stc
ss
add
sti
pop
js
icebp
lcall
sub
cmp
xchg
mov
lock
je
cmp
sbb
cs
outsb
jns
pushf
pushf
decl
pop
fisttpl
inc
sbbl
add
mov
mov
mov
mov
popa
add
repz
movsl
cmpsb
faddp
or
test
cmpsl
jp
cli
dec
ja
mov
call
les
bound
pop
adc
stc
jbe
mov
push
cmc
xchg
fistps
fs
or
repnz
push
daa
fadds
xchg
nop
sbb
cmpsl
inc
lcall
repz
add
push
fs
addr16
adc
inc
adc
jmp
and
je
aam
lret
ja
inc
test
push
push
icebp
adc
cltd
in
ja
rclb
aas
lret
inc
jp
sbb
inc
cmp
fcomps
mov
push
or
fisubrl
sub
je
notb
add
movsb
jle
mov
mov
lods
dec
les
divb
gs
pop
jecxz
and
xchg
xorl
adc
push
scas
push
pop
inc
jno
leave
subl
fdivr
jne
std
sbb
iret
add
es
loopne
dec
movsl
int
pop
adc
sar
movl
add
dec
popf
xchg
lret
fstpl
jne
fs
xor
mov
jns
pop
jle
ret
and
jno
xchg
cmp
cmp
and
cmp
lods
push
arpl
in
out
gs
mov
xchg
pop
jmp
jns
push
out
mov
nop
outsl
mov
into
scas
dec
sbb
pop
lcall
xor
ja
ret
stos
push
xchg
loop
add
cmp
ja
iret
cmp
popf
iret
mov
pop
lea
add
dec
pusha
in
pop
lret
jo
sub
sbb
or
test
test
fmul
mov
ss
pop
outsb
into
loop
cmp
cmc
push
inc
mov
add
xor
dec
jb
xlat
es
sbb
adc
mov
jge
xchg
into
dec
cmp
movsb
or
sub
pop
inc
into
sub
sbb
inc
mov
int
sbb
addr16
call
frstor
or
push
or
loope
ljmp
cmp
mov
mov
mov
sti
in
aaa
mov
lret
aam
aam
add
jge
faddl
push
mov
mov
inc
adcl
imull
decb
xchg
cmpsl
icebp
mov
jmp
or
dec
push
jl
xor
mov
add
mov
and
insb
mov
out
pop
mov
jbe
into
fsts
push
loop
testl
dec
lea
fcoms
xlat
rep
cli
mov
ds
int
adc
sbbl
int
rclb
xchg
pop
test
in
test
es
mov
outsl
stc
mov
test
repnz
sti
mov
rolb
aaa
test
outsb
push
mov
jbe
sbb
das
inc
out
adc
adc
cld
stos
bound
das
push
adc
mov
push
and
aaa
lods
xchg
ja
mov
adc
or
xchg
lods
outsb
inc
leave
jb
xor
xchg
outsb
cmpsb
je
cmpsl
movb
lods
aad
test
xlat
in
jo
xor
repz
sbb
and
mov
or
xchg
test
subb
aad
sbb
push
cli
aad
cmp
pushf
jecxz
jge
jmp
mov
xchg
mov
adc
shll
jle
dec
sub
mov
mov
xchg
mov
aas
push
jbe
mov
pop
push
out
cmc
sub
lahf
ficomps
jp
cmp
in
xor
jge
cmp
das
mov
push
mov
lods
ret
jge
inc
xchg
ret
jns
lods
and
pop
mov
out
int
xor
cmp
int
mov
out
lods
stc
mov
daa
shlb
test
fsts
clc
repnz
rcl
xchg
stos
test
inc
mov
test
xlat
or
lea
inc
xchg
stos
sahf
sub
sub
sub
xor
xor
add
mov
push
cmp
pop
sbb
inc
les
mov
jb
pop
mov
pushf
insl
push
fbld
cmc
xchg
ss
dec
ret
pop
fiadds
or
inc
sbb
lock
cmp
sahf
fwait
push
pop
and
adc
sbb
pop
test
jg
out
pop
jnp
aad
stos
js
test
jno
fstpl
mov
jb
push
loopne
add
sbb
hlt
das
pop
jne
lret
test
out
mov
xchg
and
mov
loope
jle
push
jp
sbb
xor
xor
and
push
cmp
lahf
pop
xor
jae
loope
popf
int
mov
aas
dec
or
lcall
jp
cmp
adc
or
insl
push
pop
add
and
loope
notl
mov
stc
sub
into
nop
fildl
mov
push
adc
movsl
cmpsl
packuswb
shl
jl
mov
xchg
and
inc
mov
mov
stos
jb
inc
lds
cli
ds
adc
xchg
aaa
lret
in
stos
leave
cld
sbb
sub
dec
test
cmp
sti
loope
cmp
xor
dec
adc
stos
fmul
stc
ds
mov
xor
add
dec
mov
inc
test
popf
sub
fidivl
test
mov
jl
ret
pop
ja
in
mov
sarb
stos
pop
and
dec
sbb
faddl
pop
cli
pop
icebp
inc
scas
sbb
sub
leave
inc
mov
loop
dec
test
jmp
shll
fidivrl
xchg
insb
push
mov
imul
xor
stos
xchg
mov
push
or
imul
fnstcw
nop
std
xchg
jbe
dec
cwtl
das
sub
out
or
xorb
cmp
in
sbb
je
add
pop
cmpsb
mov
out
adc
aam
subl
adc
cmpsl
sti
idivb
jle
pop
mov
sub
xchg
into
lret
imul
ficomps
sub
jl
jo
or
stc
cmp
lods
pushf
jmp
shlb
xchg
or
mov
pushf
xchg
xor
cmp
mov
push
call
popf
hlt
in
mov
sub
cmp
xchg
repz
hlt
in
fcoms
repnz
movsb
push
sarb
adcb
xchg
movsl
push
push
out
push
dec
stos
xor
and
bound
jle
cmpsb
adc
test
hlt
push
jle
or
mov
inc
xchg
arpl
mov
ret
cmp
mov
mov
cmp
mov
daa
enter
pop
sbb
scas
clc
inc
sub
jno
ss
shll
outsb
divb
mov
int
inc
adc
fs
sti
cltd
adc
sbb
or
dec
je
sbb
xchg
push
rolb
cmpsl
jnp
les
adc
subl
or
xor
dec
sti
into
or
adc
arpl
pusha
sarl
pop
leave
adc
out
sub
and
sub
cmp
mov
inc
adc
xchg
lock
xor
sub
dec
add
xorb
fs
sub
and
push
add
mov
adc
icebp
push
sar
jl
lea
mov
xor
mov
mov
sbb
jo
imul
xchg
std
rolb
fiaddl
repnz
popf
mov
jl
mov
mov
in
pxor
dec
pusha
cmp
push
and
sar
icebp
leave
pop
std
std
and
xchg
adc
push
cwtl
cwtl
cmc
push
stos
iret
adc
loop
adc
in
aad
or
cmpsl
inc
dec
adc
test
mov
les
les
mov
push
lock
in
je
mov
push
fucomi
imul
in
and
or
ljmp
fidivrs
push
xor
add
stc
lds
sarl
inc
movsl
int
and
xor
movsb
jns
adc
lods
in
addr16
add
lods
sub
jo
jnp
xor
pop
jg
push
js
add
inc
jb
das
stos
sbb
cmpsl
sub
fdivs
rolb
xor
jns
call
pusha
add
mov
dec
insl
add
test
xchg
adc
cmp
mov
sbb
mull
js
sbb
data16
cmp
arpl
add
out
ror
pop
cmp
add
sub
gs
call
insb
push
jl
sti
xchg
aad
lahf
xchg
push
xor
cmp
cmp
ss
in
xor
jecxz
daa
add
push
stos
mov
pop
jge
dec
xor
rorb
rcl
or
adc
or
and
into
sub
xchg
jns
les
movsb
pop
insb
incb
inc
insb
mov
dec
test
mov
mov
hlt
dec
lds
pusha
in
orl
sub
adc
flds
and
mov
adc
outsb
jb
js
jmp
xor
pop
jl
popa
mov
mov
jnp
xor
cmp
nop
fcmovnb
cmp
js
cmp
mov
ljmp
sub
cmp
xor
movsb
outsb
inc
jmp
add
push
pop
cmp
sub
fstl
call
mov
incl
sbb
xchg
clc
add
leave
pop
loope
gs
jmp
mov
jne
or
leave
sbb
add
add
rorb
enter
dec
lea
jae
pushf
scas
xlat
test
ds
fisttpl
lods
cmpsb
adc
push
out
into
push
repnz
sti
pop
mov
add
adc
ret
mov
sbb
mov
mov
adc
inc
cli
bound
pop
jecxz
lcall
sbb
out
sbb
imul
add
jb
fcmovbe
fwait
jns
test
push
aam
out
xchg
lea
mov
adc
out
sbb
adc
imul
loopne
aam
xor
lret
dec
mov
pop
inc
bound
sub
inc
cmp
push
das
mov
jp,pt
push
ja
leave
or
ljmp
sbb
in
into
ljmp
add
emms
mov
jns
xchg
lods
adc
jl
jp
pop
vdivss
inc
cwtl
ret
out
mov
and
int
push
cwtl
mov
dec
push
mov
test
and
nop
sub
ja
xchg
push
or
push
mov
movl
jb
out
aad
push
fstpl
inc
into
bound
and
and
mov
sub
mov
mov
loop
xchg
hlt
movsb
xlat
aad
mov
adc
push
cmpsl
mov
fists
mov
and
adc
arpl
add
dec
dec
add
jo
xor
xchg
xor
in
pop
cmp
pushf
popa
arpl
les
and
dec
scas
mov
jae
mov
cwtl
stos
in
sub
mov
das
out
aad
sub
xor
mov
push
cmp
loope
push
aam
cmpsl
push
int
mov
iret
dec
mov
jle
mov
sub
daa
scas
fdivrl
aad
sbb
js
xchg
jno
pop
sub
push
add
daa
and
ja
adc
cmc
shr
rorl
int
ret
mov
cs
dec
scas
test
push
cmpb
jle
adc
roll
imul
sub
and
rcrl
mov
mov
xchg
pushf
jno
pop
negb
jo
sub
mov
jns
mov
test
push
mov
xlat
shl
push
mov
test
push
add
es
shl
fcompl
dec
fcmovnb
shrl
lret
jno
xchg
xchg
es
pusha
pop
mov
cmp
fdivrp
adc
test
mov
aam
inc
jns
cmc
sahf
and
lahf
adc
insl
fmul
dec
and
xor
pop
cmp
sbb
shrb
pop
popf
cmpsl
aam
sub
lods
cld
loope
fcompl
das
pop
int
movsb
dec
jno
push
addr16
pop
aam
mov
add
mov
das
dec
cld
jg
pusha
inc
call
mov
and
cmp
into
das
icebp
xchg
divl
cmp
lock
mov
inc
mov
fucomip
das
shrb
loopne
jge
ds
sub
add
push
aam
ds
jne
or
dec
jg
loop
sbb
mov
fwait
and
or
dec
sti
sub
cmp
pushf
aad
xchg
in
in
pop
inc
xlat
aam
and
fnstcw
inc
das
sub
ficoms
pop
jo
adc
rorb
gs
xchg
mov
lahf
mov
xlat
mov
cltd
loopne
pop
fidivrs
push
and
negl
jnp
adc
pop
rcrb
cmp
rolb
aam
lahf
jg
xor
aam
jg
and
pop
mov
xchg
sub
outsl
mov
jns
bound
xchg
adc
mulb
arpl
aas
mov
push
xor
adcl
fdivp
inc
loop
inc
mov
int3
fwait
pusha
sub
movsl
and
adc
vpcmpgtw
test
mov
and
jbe
inc
jecxz
adc
fmull
mov
ss
imul
negl
inc
popl
movsb
fs
shlb
jg
dec
popf
inc
ror
mov
nop
test
adc
scas
out
addps
dec
lds
jle
push
pop
xchg
jmp
cltd
nop
popa
mov
andl
out
cmp
hlt
maskmovq
jnp
xor
and
ds
jl
imul
cmp
and
jl
push
pop
jb
movsb
inc
and
jle
mov
sar
sarb
mov
push
lds
jb
sarl
sbb
movsl
repz
xchg
xor
sbb
les
idiv
test
push
scas
adc
popf
xchg
scas
jns
push
lods
std
xchg
fwait
incb
cmp
push
push
jmp
cmp
lock
popa
inc
out
cld
cmp
clc
push
loop
loop
and
rclb
movsb
jle
pop
or
jge
das
mov
cld
xor
ds
js
or
xor
fnstcw
imul
bound
out
mov
iret
xchg
sub
and
or
cli
testb
bound
push
dec
adc
or
inc
xor
mov
out
rcll
mov
push
jns
mov
xlat
popa
sub
push
sbb
ret
push
or
jbe
push
and
popa
cwtl
or
xchg
ret
mov
mov
jo
inc
and
ja
push
adc
inc
inc
jbe
add
dec
arpl
fs
inc
fcmovb
sbb
les
and
sub
jecxz,pt
cmp
scas
jb
jl
cmpsb
loopne
push
cmp
fstps
inc
out
ss
iret
sarl
adcl
mov
add
in
in
xor
push
mov
subb
aas
je
and
cltd
jge
sti
test
xor
testb
push
jp
lods
jns
pop
call
ret
test
scas
icebp
cmp
popf
lahf
or
fiaddl
in
xchg
stc
aaa
add
andb
add
imulb
mov
int
jp
aam
sbb
mov
or
and
ss
sub
stos
add
repz
int3
in
add
push
nop
push
test
lahf
shlb
scas
dec
hlt
flds
or
in
pop
cmpsb
or
test
xchg
mov
xor
fisubrl
xor
mov
mov
mov
mov
testl
cmovl
cltd
ret
jge
jp
xchg
mov
movsl
enter
mov
cmp
dec
nop
imul
sbb
pop
cmp
mov
mov
xor
outsb
push
pop
aam
mov
sub
lahf
ss
add
sub
jp
mov
lret
push
mov
jb
in
pushf
xchg
clc
jp
ret
loopne
rolb
and
lds
in
movsb
lret
cmpl
fs
mov
xlat
out
cmp
inc
je
sbb
mov
jns
xlat
push
ret
pop
ja
sub
jb
decb
stc
pop
push
dec
dec
push
sbbl
lods
inc
icebp
stos
jbe
cltd
mov
and
scas
xor
test
pushf
stos
mov
dec
adc
enter
adc
insb
stos
das
leave
loop
sbb
rcl
rcrb
sbb
push
dec
lcall
ss
fwait
push
sahf
dec
cmp
loopne
ficomps
lds
push
sbb
lods
mov
bound
xor
out
push
hlt
xor
mov
popl
pop
inc
mov
mov
xchg
in
xbegin
insl
add
repz
int3
and
add
stos
adc
cwtl
xlat
adc
shll
cmc
out
push
mov
repz
cwtl
mov
jl
mov
test
cmpsb
inc
inc
daa
mov
or
cmp
sbb
mov
insb
out
outsb
fs
dec
xchg
dec
lods
aaa
outsl
sbbb
add
ja
test
test
rcl
cli
mov
mov
xorl
inc
jbe
addr16
enter
sbb
leave
mov
mov
jmp
fs
xor
xor
cmp
pop
push
cmpsb
mov
adcl
lea
cltd
sbb
aas
adc
or
mov
and
shll
mov
les
jbe
dec
mov
lret
pop
adc
insb
jp
cmp
in
sti
and
stos
pop
sbb
das
mov
cli
clc
pop
dec
sar
inc
icebp
jg
pop
xchg
test
mov
outsb
mov
adc
lds
push
es
push
mov
pushf
fisttps
test
fidivs
adc
xor
pop
es
mov
outsb
add
and
sarl
and
test
pop
ret
mov
aas
and
xorb
adc
jg
sub
repnz
mov
aaa
roll
xchg
pusha
stos
xor
mov
fwait
xor
test
push
add
xchg
push
roll
cmp
dec
fisubrl
cmp
pop
insb
movl
dec
fmull
arpl
lcall
sete
adc
cmp
stos
mov
and
or
notb
rolb
sar
inc
push
daa
mov
jae
xchg
loop
pop
xor
out
cmp
lods
cli
out
jmp
pop
jecxz
addr16
lahf
andl
push
lahf
fs
js
test
aaa
neg
cwtl
std
inc
lds
pop
pop
pop
sub
cmp
stos
adc
nop
inc
lods
dec
cmp
bound
push
stos
push
xchg
clc
call
stos
pushl
aam
add
adc
jnp
addr16
push
in
or
add
test
and
in
sub
mov
or
out
xchg
adc
xchg
scas
pop
sub
fs
dec
loopne
sbb
jecxz
imul
bound
testb
aam
test
xlat
outsl
mov
test
in
imul
mov
cmp
lahf
mov
stc
and
jbe
mov
je
jl
test
xchg
scas
dec
das
je
xchg
and
popa
mov
push
fidivrl
leave
jg
fwait
insl
movsl
idiv
bound
jmp
test
pop
cwtl
mov
lahf
dec
gs
imul
dec
jmp
or
add
add
rclb
xlat
jno
cmpsl
add
jne
fcomps
sbb
fldcw
mov
sub
sti
mov
cs
xchg
sub
mov
es
cmpl
sbb
lds
in
outsl
sub
dec
inc
jmp
addr16
das
xchg
dec
xchg
test
out
fcom
push
fwait
adc
outsl
add
lea
leave
mov
cltd
pop
stc
loopne
sbb
inc
cltd
dec
daa
and
dec
mov
mov
orl
enter
and
sbb
mov
sub
push
ds
xor
pop
or
sahf
mov
mov
sub
mov
stc
sbb
cwtl
rcrb
jge
sbb
movsl
push
mov
or
pop
sub
data16
and
movsl
xor
push
loop
cld
mov
sub
out
js
test
divb
mov
sbb
push
es
jo
lds
gs
sub
mov
psubsb
adc
aam
popa
adc
mov
sahf
dec
inc
stos
mov
mov
xor
adc
popa
push
mov
xor
mov
xor
imul
dec
cli
dec
inc
stos
dec
pop
xchg
adc
adc
mov
push
into
incb
lret
cmp
sbb
sub
xor
pop
cmp
fnstenv
inc
mov
jl
add
in
fsubrs
and
imul
test
xor
add
push
inc
arpl
gs
repnz
lds
pusha
pop
or
dec
int3
xchg
and
loop
and
fnstsw
mov
ss
call
pop
stos
loopne
push
push
mov
jne
test
scas
popa
push
inc
jae
mov
mov
std
cmpsb
push
addl
addr16
jbe
dec
pop
xchg
das
add
sbb
icebp
dec
dec
and
cmp
or
iret
fistpll
cmpb
dec
push
jecxz
cltd
adc
icebp
mov
cmp
fsub
dec
cmp
pop
jl
add
mov
cmp
lahf
fucomip
push
nop
sbb
cmp
sbb
pop
shl
sbb
hlt
cmc
fistpl
pusha
push
in
or
cmovb
fdivl
jbe
popf
std
push
cli
mov
jl
dec
hlt
jb
cmp
das
cwtl
adc
int
or
or
movsl
add
push
cwtl
outsl
hlt
xor
mov
test
and
rorb
cmp
cltd
cmc
aad
in
imul
clc
shll
mov
or
dec
push
cmp
stos
out
fimull
fcmovnbe
cmpsb
sbb
lods
xchg
and
test
test
fmull
adc
ljmp
cltd
pop
addr16
mov
sub
adc
mov
dec
iret
mov
xor
mov
sbb
jb
and
jmp
outsb
xchg
ljmp
mov
xchg
cli
dec
adc
mov
cmp
adc
je
shrb
scas
icebp
scas
xor
jo
mov
or
mov
test
daa
fsubrs
mov
es
and
add
movsl
xor
iret
sahf
dec
jg
loopne
dec
scas
sbb
scas
jg
aad
mov
daa
in
adc
sbb
inc
jl
into
mov
pop
cmpsl
ljmp
pop
cmpsl
mov
and
xor
jg
movsb
sbb
adc
push
ret
and
or
hlt
inc
pop
cltd
inc
mov
and
ss
xor
pop
push
ja
in
adc
call
bound
adc
or
push
xchg
std
mov
add
or
push
jns
pop
and
repz
clc
and
pop
fsubr
aad
cltd
or
pop
add
imul
cmp
pop
arpl
data16
popf
pop
imul
pop
pop
sarl
lahf
push
push
push
mov
mov
aas
out
mov
xchg
cmpsb
enter
or
clc
xchg
fstps
pop
js
adc
insl
leave
leave
or
rorl
add
push
int
in
push
fisubs
dec
lcall
repz
imul
aad
push
notb
in
xor
movsb
iret
outsb
dec
pop
sub
pop
inc
mov
clc
add
call
mov
cltd
pop
jne
mov
cmpsb
adc
sbb
or
push
dec
bound
sti
bound
or
push
mov
fcomip
scas
and
mov
cltd
pushf
mov
mov
in
sub
out
jle
fsubl
in
leave
insb
mov
xor
call
adc
jmp
xchg
bound
pop
or
push
add
and
ret
ljmp
iret
gs
jle
xorb
pop
testl
mov
mov
or
xchg
mov
push
rcl
jecxz
stos
xchg
mov
sbb
cmpsb
xchg
and
dec
lea
xchg
cwtl
int3
ljmp
adc
jmp
mov
and
cmc
cli
xchg
hlt
in
jle
xchg
icebp
adc
je
jns
sarl
repnz
push
testl
imul
push
shlb
sub
addb
xchg
sbb
and
sbb
fisttpll
and
mov
inc
push
push
out
enter
fsubs
cmova
rcrl
jnp
cmp
jge
imul
adc
xchg
ja
inc
jb
inc
das
or
enter
push
arpl
roll
sub
pop
ret
jg
and
pop
push
and
xor
loopne
or
sbb
clc
adc
sbbb
push
mov
fsubrs
mov
sti
pop
dec
pop
mov
imul
pop
loop
dec
decb
roll
insl
jbe
pop
push
outsb
outsl
enter
insl
popf
jne
hlt
pop
aad
sbb
jo
jb
mulb
repnz
lret
iret
dec
xlat
das
cmp
mov
repnz
mov
lock
mov
mov
jle
hlt
clc
push
mov
ret
cwtl
sbb
cltd
in
popf
enter
orb
mov
mov
test
xor
iret
sbbl
roll
inc
push
xor
rcr
ss
push
inc
rcrl
scas
je
cli
roll
scas
test
push
jo
xlat
out
daa
inc
data16
xchg
ds
xchg
lods
inc
mov
loop
cmp
ja
fists
sub
xchg
lods
adc
es
dec
sar
je
call
jae
inc
in
inc
pop
xchg
jp
dec
sub
rorl
xchg
lcall
scas
lods
inc
sbb
aam
cmp
cmpsb
and
jae
sub
or
ljmp
adc
xchg
dec
inc
iret
mov
xchg
aad
dec
xor
mov
sub
jge
push
addb
mov
add
loope
dec
mov
emms
pop
mov
xlat
add
adc
decl
or
push
sbb
inc
mov
jge
lcall
xor
es
jae
jmp
mov
jns
and
push
int3
jb
or
out
iret
ljmp
cli
dec
dec
fidivs
stos
adc
enter
cwtl
or
jmp
xchg
mov
lods
sub
aas
aad
cmp
dec
ds
js
xchg
sub
js
scas
leave
mov
push
push
fimull
cmp
sahf
sbb
sete
cwtl
jae
xor
add
cmp
popf
add
shrb
mov
ds
mov
int3
mov
bound
lcall
in
ret
stos
stos
jnp
inc
cli
or
aad
into
in
push
aaa
and
push
xchg
jmp
outsl
out
loop
mov
pop
scas
xchg
add
and
push
dec
sbb
or
jmp
or
jns
jge
popa
adc
lods
cli
shr
hlt
sahf
and
in
sub
push
lea
pop
xchg
pop
call
xchg
fistpll
shll
adc
mov
inc
jae
das
arpl
dec
mov
xor
lret
movsl
mov
sbb
adcb
inc
fcmovne
mov
popf
scas
fisubs
inc
addr16
ja
movsb
ljmp
jecxz
fwait
dec
lods
jno
in
dec
std
mov
jns
pop
or
fisubl
and
jnp
sub
jle
and
loop
push
mov
dec
mov
pop
pop
insl
adc
lods
push
daa
sub
popa
sbb
sub
add
int
ret
js
add
push
push
sarb
frstor
add
inc
test
aad
fs
cmpsl
mov
jmp
aaa
idivl
push
mov
push
aad
pop
jp
int3
fsincos
pop
mov
mov
dec
xchg
addr16
push
fldenv
push
and
imul
push
andl
pusha
imul
fs
mov
pop
movsb
outsl
into
mov
inc
inc
pusha
stos
inc
fdivrs
insb
and
sahf
inc
mov
out
push
cltd
aad
fdiv
movsl
jle
pop
xchg
xchg
rclb
cmpsb
cli
pop
shlb
adc
stos
out
das
push
mov
push
imul
cmc
pop
jmp
or
out
mov
adc
add
pop
out
push
add
lock
repz
fisttps
pop
out
cs
sub
jnp
jp
stos
loopne
sub
lret
or
movsb
mov
por
jg
mov
adc
ds
ds
dec
or
mov
mov
jge
pop
pop
lds
push
lods
in
adc
dec
out
jmp
adc
sbb
sar
pushf
les
test
scas
xchg
pushf
jae
fiaddl
test
jmp
stos
mov
out
jmp
pop
dec
stos
mov
movsb
dec
push
into
or
pop
lahf
jge
push
or
or
inc
rcrl
in
js
aad
xor
leave
es
in
mov
pushf
xor
daa
shll
push
sbb
fdivrs
or
sahf
cwtl
cmpsb
mov
lea
push
outsb
sub
scas
and
cli
insb
jno
inc
dec
dec
ljmp
xor
jae
ds
push
ja
iret
cmpl
jmp
or
add
xor
or
xchg
repnz
mov
outsb
outsl
ljmp
clc
mov
jo
adc
sub
into
pop
pushf
jno
add
mov
mov
jne
std
outsl
rorb
push
jns
das
dec
je
fisubl
fs
dec
xor
add
jno
jmp
and
xchg
mov
xlat
stos
pop
push
clc
insl
shll
stc
scas
xor
xchg
sbb
call
rolb
add
pushf
ljmp
call
and
pop
pop
cwtl
aad
fdivl
sub
ja
test
xchg
jecxz
rclb
insb
out
popa
and
js
sbb
das
arpl
adc
push
jg
ret
out
daa
idivl
int3
pop
cld
xchg
cmp
iret
inc
repnz
test
push
fnstcw
and
outsb
push
test
adcl
ljmp
fsubl
add
test
out
rclb
fistpl
cmp
mov
ret
lcall
jle
push
mov
fwait
scas
shrb
popa
mov
adc
and
cmpsb
js
xor
mov
negl
cltd
sbb
fidivrl
mov
jge
sbb
inc
or
into
popf
mov
xchg
and
orl
iret
mov
sub
insb
mov
fisttpll
adc
in
jne
mov
push
dec
stc
push
push
and
and
loop
ljmp
mov
sbb
cmpsl
daa
jnp
ret
pop
dec
arpl
clc
push
iret
fchs
xor
push
fcmovbe
cmp
scas
shlb
mov
les
andb
cmc
fidivl
xchg
pop
mov
adc
push
and
repz
das
or
pop
cmp
cmp
jmp
lods
lret
insb
sbb
fwait
dec
push
daa
dec
sub
test
stc
mov
xor
in
jno
leave
popa
idivb
rcrl
inc
mov
and
sbb
inc
jns
das
inc
jg
add
jb
cltd
cmp
cmpsl
or
sbb
outsb
jbe
imul
fdiv
mov
mov
inc
mov
clc
clc
test
or
pop
add
mov
mov
imull
mov
cmp
or
xor
cltd
jo
fidivrs
xchg
or
repnz
aaa
cmc
push
mov
lea
shll
cmpsl
mov
xchg
xor
out
les
dec
mov
push
dec
mov
or
std
mov
mov
xchg
adc
xchg
adc
sbb
lea
sbb
adc
push
gs
add
jne
cmc
inc
mov
sub
leave
aas
call
mov
add
aad
xor
shr
add
mov
fistl
insb
mov
jns
outsb
sbb
stos
jge
xlat
or
xor
mov
add
pop
jo
xor
insb
jl
imul
incl
push
insb
or
push
push
sub
aas
fidivrl
dec
add
inc
push
and
pop
fbld
cmpl
xor
pushf
cmpsl
mov
or
cmpb
xor
lcall
cltd
mov
sub
or
mov
xor
pop
jnp
data16
lret
out
fdivl
inc
ret
repnz
xchg
clc
jl
xchg
sbb
es
xchg
dec
cmp
cmp
push
out
dec
cmp
mov
xchg
fadd
cs
aam
test
in
pushf
dec
mov
or
subl
outsb
push
aam
push
add
clc
lret
fisubs
aaa
mov
loopne
mov
mov
mov
fs
push
push
mov
test
movsl
sarl
jno
insl
mov
or
push
icebp
sbb
sub
in
jmp
sbb
test
jne
xchg
movsl
ret
xor
into
push
adc
leave
fstpt
add
mov
or
dec
cmp
loope
push
ss
rcll
xlat
sahf
adc
inc
jp
and
push
movsl
jo
int3
mov
sbb
ss
push
in
roll
jne
mov
ret
incl
fisttpl
push
pop
or
insb
xor
movsl
cmpsl
pop
pop
and
insb
in
lret
xchg
xchg
push
pop
ja
aaa
sub
test
jl
test
cmpl
mov
aas
ficomps
pop
sub
bound
fistpl
fcomps
out
leave
cmp
inc
sbb
loopne
inc
jnp
sub
lods
arpl
clc
fstpl
or
out
xor
ret
jo
push
sub
in
js
fisttpll
jecxz
sub
in
sub
je
cmp
rorb
mov
outsl
repz
ja
lods
movsb
mov
jbe
mov
push
inc
mov
outsl
mov
hlt
xor
dec
jg
pop
addl
jmp
mov
test
ja
push
pop
das
std
xor
sarb
or
and
and
stos
lods
in
fmull
rcl
xchg
out
cmp
fs
cmpsb
sbbl
xor
push
xchg
pop
lret
mov
pop
mov
setb
jo
or
xchg
sub
shl
lock
xorb
enter
aas
adc
push
push
fildll
out
xchg
loopne
in
sbb
ja
rcrb
inc
aaa
push
enter
sbb
mov
bound
test
idivb
pop
dec
dec
lods
adc
jmp
lcall
in
inc
dec
inc
gs
pop
xchg
cs
xchg
push
mov
insl
cmp
adc
push
enter
rcrb
xchg
add
mov
cmp
stos
sub
test
imul
outsl
jmp
rclb
or
mov
xor
leave
sbb
jns
add
jp
int3
xor
cmp
daa
mov
mov
mov
mov
daa
mov
pop
lock
inc
jo
pop
push
popa
mov
icebp
push
xchg
and
insl
mov
dec
lock
mov
pop
mov
fadds
lahf
leave
add
mov
mov
repnz
or
pop
cmp
jecxz
stos
ss
ficoms
inc
lret
jle
in
lea
loope
push
and
adc
jge
adc
leave
lds
adc
pop
and
das
add
cmp
push
clc
jmp
rorl
jbe
pop
std
int3
lea
mulb
movmskps
jecxz
bound
push
movsb
cmpsl
push
jae
orb
add
loope
jne
std
xchg
mov
pop
iret
in
jle
pop
mov
add
addl
dec
repnz
or
inc
adc
push
aad
jb
sbb
js
mov
adc
xor
repnz
popf
jl
jb
rcrb
lods
adc
fs
es
ljmp
rcrl
sbb
fistpl
mov
xchg
loopnew
imul
cmp
xor
dec
mov
int3
loope
test
iret
cmp
mov
scas
jl
xor
ds
aam
adc
rolb
cmp
mov
icebp
hlt
fisubl
sub
mov
or
les
sbb
and
push
lahf
xchg
sub
int
cmp
js
shll
sbbl
jns
add
test
cmpsb
icebp
xchg
xor
mov
dec
imul
movsb
addr16
adcb
into
inc
es
jg
subb
mov
aaa
scas
jns
mov
add
sub
mov
xchg
sbb
dec
sar
rolb
adc
stc
dec
adc
mov
enter
cmpsl
cmp
cmp
mov
ljmp
sub
mov
ret
pop
jbe
pop
mov
add
call
mov
test
sbb
shll
movsl
mov
jae
add
sbbl
mov
xlat
lcall
fisubrs
gs
dec
jg
ja
dec
data16
pop
bound
pusha
dec
std
fisubrl
addr16
aam
dec
inc
and
fnstenv
daa
popa
mov
rorl
enter
loop
movsl
call
in
push
fbld
push
outsb
jns
push
fiaddl
das
cmc
hlt
imul
xor
out
mov
pop
dec
ljmp
or
test
add
sti
xchg
fnstenvs
sti
xor
mov
ja
repnz
adc
add
out
movsb
dec
clc
lock
mov
test
adc
pop
sahf
arpl
jg
aaa
sub
inc
pusha
and
and
mov
xor
jno
test
mov
popf
daa
movsl
movsl
push
pop
mov
js
idiv
js
inc
xlat
xchg
ss
nop
lret
xchg
or
pop
mov
out
sub
outsl
popf
inc
jnp
xlat
in
fwait
and
sbb
sbb
xchg
and
imul
clc
push
not
pop
jo
fmuls
jmp
add
mov
fucomp
xchg
mov
mov
add
std
mov
inc
jnp
decl
sbb
movsl
leave
int3
mov
push
sbb
mov
add
sbb
inc
out
lea
sahf
loop
or
mov
adcl
sub
jno
dec
hlt
pop
ret
orl
or
jge
xor
pop
mov
lods
adc
adc
sub
pop
call
je
lods
jp
stc
add
jne
sbb
xlat
jne
dec
aam
lock
xor
rclb
mov
push
pushf
mov
aas
iret
inc
mov
or
pop
sbb
mov
dec
jmp
pop
mov
pop
fisttps
vminpd
mov
out
mov
repnz
jge
adc
dec
scas
sbb
movsb
add
mov
cltd
pushf
cltd
or
or
hlt
and
movsl
fbld
xchg
popf
mov
repz
adc
sub
cmp
xor
cs
pop
xor
and
imull
addb
xchg
rcl
leave
jmp
es
adc
add
test
aam
mov
sti
mov
incl
rol
sub
jmp
loope
lds
sub
push
sahf
clc
or
or
and
xor
clc
mov
shll
shlb
lods
jge
sbb
mov
mov
jle
and
pop
cmpb
js
movl
and
sti
aas
jno,pt
arpl
sbb
fiadds
xchg
lcall
lods
xor
mov
neg
jg
imul
ljmp
fcompl
add
mov
mov
repnz
jl
inc
inc
cmp
insl
sbb
and
mov
mov
movsb
fmulp
or
mov
xlat
stos
mov
ss
xchg
sub
inc
fsubrl
mov
lret
mov
mov
sbb
iret
pop
mov
push
mov
int3
insl
pop
xor
xor
in
popa
int3
div
adc
lock
xchg
and
adc
dec
mov
cmpsl
lcall
adc
int
in
mov
push
jns
iret
xchg
stc
test
cmp
jbe
addb
cmp
cmp
roll
hlt
mov
pop
es
repz
loope
mov
scas
lret
jg
hlt
cmpl
jns
pop
pop
std
sub
jns
dec
jmp
ds
js
into
or
movsl
fnstsw
imul
dec
and
int
xchg
push
roll
sub
xor
leave
adc
data16
lret
mov
pop
push
mov
push
sbb
movsl
push
adc
rcrb
cmp
arpl
inc
stos
xchg
sbb
cmc
or
movsl
cmpsb
test
add
test
xor
addl
sarl
adc
hlt
js
outsl
mov
mov
add
adc
jmp
dec
adc
and
mov
scas
dec
aaa
mov
stos
pop
mov
jg
jns
xchg
xchg
sbb
inc
lock
jmp
movsl
inc
sbb
push
out
fmuls
fnsave
inc
xchg
dec
xor
rorb
cltd
cmpsl
jae
insl
cmp
enter
cli
ret
dec
rcrb
jbe
cmp
adc
out
faddl
addr16
add
dec
jne
call
xor
sub
mov
jmp
lods
mov
test
adc
icebp
test
mov
push
dec
iret
sti
lods
bound
add
sti
jb
jl
aam
add
or
popa
cmp
or
jge
loop
call
pop
xchg
inc
outsb
test
in
mov
mov
push
fildl
fidivs
push
cmp
sub
or
leave
pop
pop
pop
test
fcomps
mov
imul
loop
aas
sub
leave
das
fnstcw
pop
or
lret
out
mov
idiv
mov
sub
or
jge
cs
or
push
mov
xchg
cmp
lcall
pop
loope
or
mov
mov
xchg
addl
daa
dec
ffreep
inc
xchg
fs
sbb
sub
push
mov
pop
rep
fwait
mov
adc
dec
jne
fisttpl
pushf
jle
push
divl
pusha
xchg
jno
fadd
in
add
ret
add
adc
pop
imulb
mov
add
sbb
add
xor
cmpsb
sub
roll
icebp
add
out
mov
pop
je
xchg
outsl
mov
add
mov
ss
inc
jne
jne
cmp
and
cmp
dec
cmp
adc
push
sbb
or
add
out
mov
add
cmp
xor
dec
or
cs
pop
negb
clc
inc
push
pop
stos
inc
outsb
push
int
out
jne
push
icebp
cs
roll
or
adc
xor
cmp
pop
push
jae
shll
insl
shll
dec
mov
aam
lcall
mov
imul
f2xm1
imul
fstpt
test
fists
mov
scas
fisubs
jl
jne
daa
cltd
mov
xchg
cld
push
jo
push
pop
sub
mov
iret
repnz
movsb
nop
int3
js
add
pop
push
hlt
add
mov
jnp
jns
cs
fdivrl
popf
add
cmp
xor
fstp
or
icebp
xchg
push
loope
xchg
ja
jge
xor
cld
mov
lods
shlb
mov
in
pop
and
pushf
sub
mov
add
push
xor
jle
lret
int
mov
xor
xor
icebp
mov
or
mov
mov
and
nop
pusha
sub
cmp
pushl
xchg
mov
inc
inc
jmp
mov
dec
dec
cmp
pop
push
jb
scas
jle
imul
sbb
mov
jo
loopne
imul
scas
loop
out
push
sub
pop
inc
sub
int3
jmp
dec
inc
push
and
mov
insl
ja
dec
xchg
mov
mov
xchg
stos
hlt
idivl
dec
jmp
in
xor
or
mov
in
or
je
test
fwait
mov
sbb
int3
cmp
mov
jne
xchg
inc
inc
push
cmp
push
mov
and
jb
data16
mov
push
mov
insb
popf
jnp
iret
sub
adc
jae
or
aad
flds
out
xor
sarl
icebp
fistpl
fdiv
in
pop
test
data16
sbb
mov
xchg
std
lods
loope
in
stc
in
pop
popf
outsb
sbb
dec
lods
mov
mov
sub
les
cmc
fidivl
not
mov
xor
push
in
popf
shll
jne
shlb
leave
negl
and
mov
lock
enter
int
and
and
sbb
push
jg
mov
aas
pop
and
scas
dec
jmp
and
stc
shr
in
bound
inc
iret
out
test
xchg
cld
shl
imul
sub
ret
cmc
xor
cmp
hlt
mov
mov
test
rcll
inc
xchg
cltd
clc
out
push
inc
sti
aas
and
and
mov
add
mov
cmp
inc
in
lret
mov
and
push
mov
and
cltd
add
or
int3
push
test
add
shlb
push
push
inc
ret
fnstenv
repnz
jge
adc
or
fwait
mov
sub
jnp
pushf
aas
adc
push
ss
es
inc
stos
outsb
cltd
xor
xor
add
cmp
add
cwtl
icebp
and
inc
jp
mov
and
or
std
mov
mov
sbb
mov
ficoms
cmp
jecxz
jmp
inc
pop
scas
std
inc
fdivrl
push
push
mov
cmp
mov
aam
xchg
mov
shlb
jo
fisubrs
push
or
push
mov
fsts
mov
adc
xor
mov
inc
inc
sub
cwtl
mov
add
iret
pop
ficomps
dec
pusha
nop
xor
push
adc
mov
fisubrs
xor
cltd
and
inc
cwtl
hlt
adc
sub
sub
mov
vshufps
mov
loop
js
xor
jb
fucomi
int3
xchg
xchg
mov
xchg
bound
push
cwtl
stc
fadd
idivb
adc
ds
cmp
jmp
in
dec
jg
in
jbe
cmpsb
mov
dec
jb
cmpsl
dec
aam
sub
pushl
push
out
scas
add
pop
sahf
mov
sub
mov
loope
enterw
mov
sbb
mov
or
iret
add
mov
fadds
loopne
lock
shl
fbld
sbb
jg
push
pop
fdivrp
mov
jecxz
or
out
xor
jne
mov
lret
mov
pop
lcall
or
lcall
out
pop
int3
inc
insl
scas
mov
mov
mov
loope
mov
adcl
sbbl
xchg
addr16
aaa
shlb
addr16
jne
mov
flds
outsl
pop
test
jge
imul
or
push
cmp
or
bound
or
lcall
adcl
cld
dec
add
add
je
inc
inc
push
fs
xor
sub
subb
cmp
ret
mov
adc
stos
addr16
icebp
jecxz
enter
or
inc
outsb
xchg
icebp
push
jg
mov
pop
cmp
inc
rcll
jbe
mov
add
jns
lcall
les
stos
mov
mov
mov
fsubl
xor
shrb
xlat
cmpsb
mov
jo
insb
sbb
xor
ds
fistps
cmpb
and
jp
inc
cmc
or
mov
call
icebp
iret
dec
cmp
cmp
cmp
insb
fldt
pop
or
cmpb
mov
ffree
cwtl
fptan
jbe
push
inc
xor
pop
dec
dec
pop
sbb
adc
mov
sbb
xchg
mov
scas
xchg
test
and
mov
mov
test
push
jg
push
push
daa
push
stos
test
and
and
push
adc
and
cli
std
push
ret
push
sbb
lret
sub
push
inc
mov
or
inc
outsb
jmp
fdivl
mov
mov
sub
int3
pusha
mov
push
pop
jns
pop
orb
sbb
fdivrs
insl
add
sti
pop
mov
xchg
call
mov
cmp
mov
idivb
in
jne
jecxz
sti
das
sub
in
sub
in
add
psubusb
and
test
dec
out
xchg
enter
add
xorb
xor
jo
repz
in
push
or
out
movsb
push
divb
jae
stos
sub
loope
mov
rorl
inc
inc
or
xchg
pop
outsb
mov
pusha
fcmovnb
and
inc
xchg
dec
xlat
or
out
jmp
mov
pop
sahf
rorl
mov
add
enter
add
lds
lods
xchg
or
push
sub
adc
add
push
fdivl
lock
arpl
jb
ja
orl
call
cwtl
jno
adc
dec
and
add
cmc
pop
and
and
mov
and
ss
add
xchg
sbb
and
mov
fst
add
adc
mov
pop
push
mov
fwait
mov
jmp
fistps
outsl
or
rclb
pop
jecxz
jno
mov
push
scas
xor
or
sbb
push
inc
add
loope
nop
pop
mov
gs
scas
mov
pop
add
rclb
scas
cmp
pop
loopne
or
cs
push
mov
lea
mov
mov
mov
mov
cltd
or
movl
das
loopne
fwait
aas
cmpsb
loopne
mov
test
cwtl
bound
aaa
dec
mov
js
cmpb
cld
cli
xlat
lret
jg
fdivrl
loop
loope
cs
sbb
push
fiaddl
dec
stc
fisttpll
bound
dec
mov
scas
bound
fistps
sub
js
xlat
jmp
mov
push
mov
loope
cmp
push
int
int3
loopne
leave
out
inc
push
inc
les
push
aaa
mov
ss
jmp
xor
scas
stos
lret
or
fstpt
mov
and
mov
or
push
out
jp
push
lds
cmp
lcall
sbbl
adc
sub
cmpsl
je
mov
add
pop
cmp
xchg
pop
xchg
rcrl
or
std
cltd
mov
fldenv
add
into
sahf
icebp
mov
frstor
jmp
jecxz
jo
ljmp
inc
outsb
shlb
jecxz
xchg
out
cld
call
sbbl
ss
out
sbb
sbb
adc
jmp
adc
lretw
es
xchg
add
mov
xchg
out
hlt
scas
inc
repnz
es
iret
fsubr
cmp
xchg
imulb
scas
cli
xchg
xor
mov
jo
rclb
hlt
stc
mov
das
loopne
test
test
mov
dec
cltd
dec
sub
mov
mov
hlt
push
dec
jbe
or
xor
sbb
fwait
mov
cltd
loope
inc
mov
push
fsubp
out
fld
or
andb
inc
icebp
sub
add
adc
stos
out
add
in
shlb
and
cli
add
fiaddl
in
mov
ja
insb
dec
stc
stc
and
inc
xor
push
inc
cmp
movsl
lea
xchg
sub
mov
dec
lcall
cmp
ljmp
dec
mov
fstpt
sbb
jne
mov
xchg
mov
xor
xor
scas
push
stos
aas
shll
lods
ss
mov
arpl
dec
cld
movsb
scas
adc
sub
insb
in
mov
xchg
mov
xor
pushl
xchg
leave
popf
test
push
push
mov
push
or
sub
sbb
add
out
mov
mov
cmp
pop
das
insl
fwait
aam
inc
outsl
mov
addr16
imul
pop
imul
jo
push
cmp
push
push
push
shr
lahf
in
je
adc
mov
sub
loop
mov
jmp
xor
lods
scas
inc
mov
inc
into
das
int3
clc
mov
packuswb
mov
bnd
cld
mov
movsl
fnsave
xor
pushf
jns
out
loope
addr16
fwait
in
movsl
mov
push
fdivr
popf
add
pop
jnp
int3
mov
inc
fisttps
out
or
push
aaa
xchg
das
xor
pushf
dec
pushf
pop
pop
aaa
jbe
cmp
test
or
aam
jo
data16
pop
pop
jle
xchg
sti
test
jecxz,pn
repz
shrl
mov
inc
jecxz
int3
xchg
insb
btr
push
psraw
pop
xor
adc
xor
or
adc
mov
push
enter
push
cmp
lret
imul
inc
sub
cmp
lods
repnz
add
test
lods
mov
cmpsb
out
orb
fstps
fdivrl
adc
lret
adc
pop
push
sbb
pop
or
and
cld
scas
into
js
enter
fwait
dec
push
dec
sbb
jns
mov
shlb
cwtl
imul
xor
pop
ds
adc
gs
add
fstpt
ret
inc
xchg
rorb
aad
pusha
sub
lods
inc
repnz
int3
test
outsl
shrl
mov
test
addr16
xchg
inc
push
into
ja
aaa
scas
xor
jp
lock
push
adc
jne
and
arpl
enter
gs
push
ret
push
inc
cmp
data16
cmpsb
sbb
xor
std
push
cltd
int
cltd
cld
lods
jmp
in
test
testb
lea
xor
inc
xor
aaa
sub
and
jb
ljmp
cmp
mov
cmp
mov
xor
mov
or
sbb
test
mov
icebp
sbb
add
addr16
in
sub
dec
xor
xchg
lods
test
aam
sahf
xchg
adc
insb
adc
imul
push
pop
push
repnz
push
or
lret
in
rorb
data16
in
notl
cmp
inc
arpl
shlb
jecxz
mov
cmp
and
adc
lods
aas
xchg
out
mov
dec
lcall
daa
scas
rol
int3
repz
test
imul
mov
lds
out
jne
push
movsl
and
fwait
jp
inc
fs
and
mov
mov
sub
incl
sub
mov
fistpll
fistps
jl
mov
mov
sbb
mov
mull
lods
xor
clc
dec
mov
das
enter
and
ret
rcrl
fadd
lret
xchg
in
jle
push
pop
shll
fs
loope
stos
stos
sub
cmpsb
shr
adc
jnp
mov
and
or
andb
out
shl
les
push
pop
in
inc
inc
stc
imul
dec
adc
or
mov
das
loope
mov
and
cmp
and
inc
mov
mov
add
add
jb
lods
add
adc
jb
xchg
cmp
mov
cmp
add
ret
scas
lea
out
stos
and
faddp
cltd
lahf
or
mov
dec
sub
inc
xchg
pop
rclb
sbb
clc
xor
xchg
cld
pusha
mov
fdivl
xchg
sahf
aad
das
lods
iret
je
test
dec
scas
cld
lea
lret
clc
mov
xchg
mov
out
push
loope
mov
iret
push
gs
add
shr
pop
mov
fisubrs
mov
seta
sub
shr
and
test
mov
pushf
jnp
je
loopne
or
lret
push
shll
sbb
shll
scas
add
hlt
mov
push
mov
xor
test
into
pop
pop
adc
fstl
adc
push
repnz
mov
dec
mov
pop
movsl
push
call
loop
fistpl
adc
cmpsb
mov
fyl2xp1
fimull
call
stc
cs
add
pop
mov
sub
hlt
jne
shlb
inc
push
jo
arpl
ja
cmpsl
push
inc
xchg
outsb
and
mov
dec
mov
mov
ss
movsb
gs
dec
mov
lcall
lret
movsl
xchg
les
lods
and
add
js
iret
lods
sub
sbb
push
push
orl
pop
ja
push
mov
fisubs
pop
or
lldt
xor
lahf
sub
andl
pop
inc
adc
cmp
jae
mov
sbb
movsl
sub
repz
mov
xor
push
mov
xchg
sub
popa
iret
adc
push
push
rcll
ja
cld
hlt
hlt
mov
xor
push
sbb
fsubl
lock
jecxz
out
and
xchg
in
test
push
movsl
push
cmp
rcrl
shl
sbb
aam
or
int
or
imul
dec
popf
xor
loop
in
xor
or
pop
test
cmp
push
cmp
dec
and
add
mov
fst
test
lods
and
pop
test
imul
nop
mov
addr16
jnp
mov
push
lret
sub
notrack
dec
test
rcrb
cmpsl
sbb
add
xor
mov
and
scas
out
or
add
adc
negb
in
and
xlat
cmp
add
xchg
pop
xchg
pusha
mov
fisubl
and
jle
add
jle
outsl
and
push
pop
mulb
bound
test
jbe
cmp
sbb
xor
pop
icebp
imulb
or
push
sub
push
int3
fcomps
notl
ret
es
push
xorb
adc
or
lea
sbb
xor
jmp
add
loope
data16
add
push
or
push
hlt
loope
push
sbb
scas
sarb
pop
out
mov
mov
jae
pop
mov
jge
enter
pop
fadd
or
shll
out
sub
xor
icebp
xchg
int3
out
sbb
scas
out
aad
int3
mov
xchg
scas
cwtl
pop
adcl
xor
and
adc
shrl
mov
jg
mov
outsl
loop
fsubl
ss
pop
fldenv
cmp
mulb
rcll
addr16
bnd
xlat
push
sbb
and
inc
lds
push
xor
adc
xchg
push
fwait
mov
jns
idivl
fld
sub
ja
int
dec
into
movsb
or
mov
divl
fdivl
daa
jmp
dec
xor
std
sub
stc
xchg
je
cmp
test
fdivs
aaa
cmpsb
scas
insb
lock
test
lods
and
jecxz
pop
stos
popa
jmp
jle
and
iret
jmp
out
push
xor
dec
xor
in
in
jmp
das
xor
mov
and
push
pusha
adc
daa
je
add
fbstp
rcrb
inc
add
and
sbbl
cs
jbe
jae
ja
movsb
mov
jae
js
out
rcrb
aam
mov
dec
push
xor
mov
mov
sbb
std
divb
xchg
scas
mov
xchg
gs
test
pop
popa
sub
insl
ss
stc
add
push
ljmp
outsb
fsubl
or
sti
and
mov
adc
cmp
sub
push
sub
xchg
stos
adc
cmp
dec
movb
mov
inc
lea
lods
mov
xchg
add
jno
mov
daa
loope
pop
adc
lds
pop
fmuls
adc
and
dec
dec
cld
mov
fnstsw
je
sub
testl
cmp
inc
mov
add
or
std
jg
and
xchg
inc
sar
ret
cmc
add
movsb
jbe
push
and
int3
or
xchg
dec
int3
outsb
addr16
dec
mov
sbb
mov
or
pop
xchg
mov
sbb
pop
rcl
lcall
cmp
sub
mov
loope
pop
adc
xor
sbb
sarb
xchg
rorb
xlat
outsb
pop
repz
push
stc
push
mov
push
pmullw
repz
sub
enter
rol
test
dec
dec
std
enter
mov
and
dec
inc
outsb
push
lea
jae
loopne
aas
pop
mov
insl
mov
sbb
adc
dec
mov
shr
add
inc
shll
fs
mulb
in
pop
movaps
roll
mov
mov
and
roll
add
mov
lcall
cmpsl
xor
xlat
lret
mov
insl
nop
adc
das
je
mov
jns
leave
xor
pop
push
repnz
in
es
fisubs
cld
xchg
out
lods
mov
andb
stc
imul
pop
dec
jns
cwtl
hlt
xor
mov
push
je
lods
lock
push
xor
mov
dec
mov
push
sbb
jle
imul
add
push
in
in
lret
rolb
lock
push
pop
push
aas
fwait
ret
ss
movsb
pop
jmp
xchg
xchg
mov
sbb
mov
or
push
or
cmp
mull
movsb
lock
jp
add
dec
lds
rorb
sub
cli
xchg
lock
xor
pop
stc
fisttpl
repz
fwait
xchg
add
in
sbb
cmp
fwait
repz
inc
mov
movsl
and
cwtl
dec
sahf
lcall
and
lea
ss
sbb
shrl
js
int3
popf
push
pop
cmc
movsl
and
popa
and
data16
ss
in
stos
pop
lock
frstor
incb
mov
dec
mov
and
sub
jmp
repnz
sarl
mov
jge
movsl
cld
add
out
sub
xchg
dec
lods
mov
xchg
xor
mov
dec
dec
cld
pop
adc
sbb
imul
inc
add
xlat
mov
inc
fiaddl
cmc
mov
cmp
sbb
sub
jb
test
insb
lea
cmp
cmc
pop
fistpl
out
out
scas
mov
test
movsb
mov
adc
jp
xchg
sbb
dec
es
push
in
aaa
popa
pop
cmp
dec
mov
dec
pop
inc
push
add
inc
rcrb
and
scas
int
clc
sbbl
fwait
mov
leave
aaa
fdiv
sti
add
xor
mov
loope
divb
insb
lea
push
dec
adc
mov
jae
fists
xor
cmpsl
dec
xor
mov
xchg
nop
xlat
push
insb
gs
loopne
mov
mov
xor
dec
pop
push
or
xchg
lahf
ljmp
cmp
and
stos
sub
mov
test
mov
cmp
test
adc
notl
addr16
sub
ds
lea
sbb
cwtl
nop
dec
xlat
add
addl
xor
add
rolb
es
shr
iret
jle
mov
inc
clc
push
aad
cltd
inc
mov
or
xchg
mov
fidivs
mov
mov
ss
ljmp
leave
xor
bound
stos
dec
xchg
sbb
xchg
enter
in
out
cmp
cmp
push
jl
test
cs
out
push
movsb
pop
push
add
outsb
repz
xchg
sub
inc
cmpsl
pop
jecxz
cld
cmpsl
push
mov
push
xchg
ror
cmp
ljmp
jecxz
push
jl
sub
mov
loopne
mov
dec
jnp
dec
stc
push
sbb
dec
arpl
lods
bound
mov
jae
andl
mov
and
jnp
test
cld
lods
xchg
adc
adc
sbbl
shlb
lret
sub
mov
jo
mov
and
inc
filds
pop
xor
cwtl
adcb
xor
mov
mov
dec
mov
cmp
je
xor
push
mov
cwtl
or
add
sub
fidivrl
jae
and
mov
pop
xor
push
out
sahf
sub
js
push
inc
in
jnp
cld
adc
jp
lods
repnz
mov
mov
xchg
js
jne
cmc
stc
js
shl
dec
cld
xchg
out
call
xor
mov
lds
pop
mov
push
or
or
out
fstp
adc
adcb
adc
shlb
cmp
adc
adc
lret
xchg
test
cmp
pop
mov
lock
sbb
and
loope
and
bound
cld
into
out
iret
stos
sub
ss
and
sbb
mov
addr16
loop
out
add
repz
lea
push
inc
adc
std
mov
bound
les
int
mov
adc
cmp
aam
mov
jge
jle
icebp
sbb
pop
mov
jae
pop
in
jge
orl
mov
and
sbb
fs
push
sbb
cld
mov
or
xor
test
push
cltd
addr16
cltd
sahf
in
xchg
dec
cmp
cld
std
fsubrs
lods
outsb
jnp
leavew
sbb
sbb
ja
mov
dec
jne
push
out
pop
pop
clc
push
hlt
test
sbb
add
faddl
jmp
cs
xor
scas
cli
add
es
cmpsb
add
mov
rolb
in
fsubrl
jp
xchg
jmp
lds
sub
lcall
lret
xchg
fisttpl
stc
pusha
mov
int3
adc
daa
lods
add
test
test
sbbb
mov
dec
jg
mov
repnz
cmpb
cwtl
negb
xchg
adc
push
mov
sahf
dec
ss
mov
repz
xor
xor
push
mov
mov
das
pusha
stos
jecxz
mov
lret
jmp
sbb
or
push
jo
xor
push
jae
out
fstl
mov
scas
inc
in
data16
or
lcall
xchg
stos
fiaddl
push
push
adc
into
jmp
pusha
or
arpl
ljmp
jge
push
lds
cld
daa
push
mov
xchg
cmpb
out
data16
push
push
pop
and
into
xchg
jge
dec
pop
xorl
sbb
inc
das
pop
aaa
pop
push
decb
mov
popl
test
mov
in
movsl
ja
or
ret
dec
cmp
cmp
in
idivl
add
test
sbb
popa
das
inc
fisttpll
jge
cs
xchg
pop
jnp
xchg
popa
xor
adc
jnp
pusha
inc
cmpsl
pop
cmp
add
pop
pusha
dec
cs
dec
and
lock
outsl
aad
scas
pop
push
mov
aaa
push
mov
dec
mov
jo
cmc
pushf
mov
push
aaa
mov
fwait
xlat
dec
test
adc
mov
int3
out
imul
mov
js
pop
mov
pushf
push
or
pop
out
test
cld
add
fnstsw
sub
ret
das
rol
int
subb
mov
movsl
mov
clc
out
inc
xchg
cmc
inc
xchg
lret
push
test
std
push
shlb
mov
aad
jnp
sbb
ror
dec
mov
xchg
inc
and
mov
pop
jp
push
jae
inc
xor
dec
in
inc
lods
enter
movsl
icebp
adc
fcomp
inc
mov
mov
in
cmc
sbb
wbinvd
sbb
mov
std
sub
subps
and
rclw
dec
sbb
lret
push
insl
fldcw
ds
out
stos
pop
fimuls
cwtl
pop
xor
ds
cmp
lea
iret
fcoml
adcl
xchg
sbb
jmp
pop
add
cs
add
adc
rcrb
pop
gs
popa
dec
orl
mov
aaa
ds
pusha
test
in
mov
sub
enter
xor
daa
sbb
scas
aam
cmp
test
push
sti
sbb
lcall
jb
mov
lods
in
loopne
or
nop
mov
jo
xor
jbe
dec
fxch
pop
mov
iret
out
dec
popl
xchg
mov
cli
lret
jp
xchg
inc
or
pusha
lret
push
ja
call
jno
dec
sbb
sti
jl
int3
xchg
adc
mov
lcall
xor
lea
aas
test
enter
into
cmp
in
outsb
mov
pop
sub
iret
jnp
sbb
mov
mov
mov
xor
iret
add
pop
xchg
lds
mov
or
dec
xor
add
cmpsl
fnsave
call
mov
mov
fildll
adc
jae
and
push
adc
aam
cmpsl
shll
sbb
leave
mov
in
and
loopne,pt
imul
sbb
inc
scas
jns
stos
fidivl
pop
cmp
sub
adc
insl
jnp
adc
push
dec
add
mov
xor
xchg
movups
cli
inc
and
add
mov
rolb
pop
in
push
bound
fadds
dec
adc
jmp
sub
adc
aam
mov
cmpsb
pop
imul
xor
movsl
divl
ja
dec
or
jbe
inc
xchg
mov
iret
std
aad
dec
movb
push
sbb
inc
xchg
movsl
mov
jns
je
not
lds
and
jle
repnz
leave
add
push
iret
gs
adc
sbb
push
xchg
test
mov
add
in
mov
fsts
xchg
adc
cli
push
dec
aaa
and
push
jmp
mov
pop
xchg
xchg
xor
dec
pop
pushf
jp
fisubs
les
cmp
xchg
mov
cmpsl
dec
xchg
aad
fnstcw
cmc
mov
adc
das
push
push
ja
repz
shlb
push
push
pop
xlat
push
stos
out
sti
adc
shrb
pop
test
insb
dec
dec
mov
inc
in
adc
mov
stos
cmp
in
lcall
fs
in
jo
mov
mov
iret
mov
popf
mov
hlt
arpl
dec
test
and
stos
mov
out
xchg
lret
cmp
xchg
adc
lods
push
out
aam
adc
dec
sub
mov
adc
xchg
sbb
xchg
inc
mov
shl
and
cmp
out
imul
subb
pop
fsubl
fwait
mov
mov
cltd
xchg
test
push
cmc
pop
dec
dec
pusha
shll
lret
xor
pop
fnstcw
lods
rep
or
shrl
loope
or
adc
inc
jae
xchg
inc
int
pop
add
daa
loop
xlat
mov
lea
outsl
test
dec
inc
ja
pop
into
cwtl
dec
cmp
mov
push
in
lret
adc
inc
es
mov
repz
ss
repnz
loop
and
movb
lcall
mov
jne
ljmp
pushf
or
subl
mov
xor
push
cmp
sbb
push
cmpsl
mov
inc
mov
inc
rorb
faddl
insl
aaa
mov
xchg
mov
pop
rcrb
sarl
push
sub
mov
dec
push
jne
lods
jno
outsb
mov
jecxz
hlt
imulb
sbb
fwait
arpl
adc
rorb
mov
out
mov
lock
jbe
xchg
pushf
jge
addr16
repz
out
adc
mov
xchg
sarl
jb
cld
xlat
sbbl
sub
jecxz
sub
cmc
dec
lods
xchg
lea
and
lods
add
lahf
jge
stos
test
loopne
loopne
fucomi
repnz
push
push
sbb
leave
dec
fdiv
pushf
sbb
scas
or
test
xchg
aas
iret
in
aam
leave
and
sahf
fs
push
pop
insb
rol
and
and
fdivr
inc
mov
xchg
fnstcw
and
nop
and
pop
push
cmp
mov
lods
xchg
push
lea
call
rorl
push
dec
xchg
rclb
cmpsl
jle
lods
scas
in
lret
fsts
into
movl
repz
iret
mov
inc
clc
jecxz
mov
mov
dec
push
add
pop
fucom
xor
push
lds
test
lahf
push
pop
fdivr
pushf
shrb
ret
pop
popf
jns
jge
scas
mov
cltd
and
inc
dec
mov
frstor
xchg
in
rorb
cmp
xor
sbb
cli
add
jb
pop
imulb
aam
sub
jbe
cmp
cltd
mov
push
add
mov
or
insb
add
xchg
sub
xor
scas
mov
push
loop
cli
imul
gs
cmp
lods
xchg
lds
nop
das
dec
sub
popf
jb
lods
and
jmp
cmc
addr16
ret
pop
bound
xor
sbb
jg
sub
fnstsw
addr16
insl
sbb
in
out
xor
xchg
mov
cld
cmp
push
in
scas
sbb
jnp
cmp
jbe
insb
lods
mov
shld
out
fnstenv
and
xchg
dec
jecxz
and
fnsave
pop
aas
sarl
inc
fadds
jle
insl
inc
pusha
jmp
mov
jno
mov
shl
jmp
mov
mov
jecxz
addr16
jp
scas
cmp
dec
and
mov
mov
sbb
sbb
jns
lret
or
fdivs
add
mov
cli
fimuls
or
fs
xchg
std
pop
cmp
std
stos
outsb
movsl
subb
dec
mov
je
nop
jae
xchg
mov
insb
mov
cmp
bound
std
roll
dec
and
pop
or
xchg
pusha
or
xchg
jbe
icebp
sbb
xorb
lods
xchg
fdivrl
dec
outsb
mov
dec
mov
add
shrl
stos
or
sahf
aad
dec
loopne
shl
and
xlat
cwtl
lret
mov
adcl
cmpl
aaa
xlat
lret
xchg
es
pop
adc
lcall
inc
les
mov
aas
or
add
loope
mov
out
dec
adc
imul
jne
movsl
add
cmp
push
xor
mov
pop
in
std
icebp
out
inc
sbb
enter
sbb
xchg
adc
sbb
in
mov
xchg
jbe
pop
fnstenv
push
adc
movsb
or
repz
xchg
mov
push
scas
inc
dec
sti
adc
cmp
adc
hlt
repnz
jle
lods
sahf
mov
stc
popf
data16
int
dec
pop
or
fstp
push
sbb
ror
sti
mov
movsb
sub
movsl
ja
scas
movsw
adc
sub
stos
adc
push
roll
pop
aam
dec
out
pop
dec
mov
push
and
inc
lret
rcrb
mov
inc
mov
aad
fstps
mov
retw
pop
inc
sbbl
imul
mov
mov
out
adc
pop
mov
cmpsl
in
add
adc
aas
fadd
and
mov
std
dec
leave
icebp
adc
push
std
dec
sbb
aam
mov
out
cltd
xchg
inc
sbb
int3
iret
cmc
mov
test
loop
or
cmp
arpl
or
insb
fnstcw
test
fldl
jno
in
popf
xchg
rep
dec
cmp
sbb
nop
ret
mov
and
mov
mov
std
fdivrl
adc
sbb
scas
pop
xchg
mov
iret
sbb
dec
pop
stc
mov
lcall
sub
icebp
push
cmp
repz
jecxz
add
push
rorb
mov
dec
popf
adc
cmp
sbb
fstp
sti
or
leave
fldt
pop
lock
std
scas
js
movsb
cmpsl
mov
push
outsb
dec
stos
mov
mov
fiadds
xor
inc
lds
jae
or
fdivrs
xchg
xchg
mov
adc
add
push
jb
nop
sub
dec
jecxz
xchg
xor
pop
xchg
mov
mov
repnz
or
data16
lret
adc
jne
mov
jle
push
scas
add
mov
loopne
out
sbb
out
ror
out
pop
add
and
loope
add
ljmp
xchg
xor
lods
sahf
loopne
dec
jbe
les
outsb
loope
and
das
lret
jb
mov
leave
adc
mov
int3
fisubl
or
bound
data16
loop
cmp
jmp
ret
or
add
add
mov
repz
sbb
inc
sbb
dec
mov
push
and
pusha
mov
stc
cltd
and
and
out
mov
pushl
sub
das
shlb
adc
pop
push
pusha
sbb
dec
inc
cmp
jbe
sub
rclb
jge
fimull
ret
mov
mov
cmpl
dec
jo
fisubrs
push
cmp
loopne
sti
frstor
or
test
mov
push
ljmp
sbb
imul
mov
lods
xorb
mov
stos
xchg
in
lret
sub
adc
repz
inc
jns
jbe
lea
scas
das
jne
dec
cmp
ret
js
xchg
cmc
pop
leave
jecxz
in
or
cli
cld
adc
shlb
mov
inc
pop
scas
test
sub
jp
push
fdivrp
mov
cld
mov
push
push
mov
lret
inc
jbe
lret
cld
jg
jno
jmp
idivb
je
daa
cli
sbb
sbb
jo
aad
cli
mov
test
mov
xchg
loope
cmp
inc
jmp
outsb
dec
pop
mov
push
push
xor
in
xor
sbb
das
loop
jmp
inc
inc
imull
mov
fadd
sbb
jg
data16
and
jns
clc
iret
add
xchg
xchg
jp
cmp
shlb
mov
sbb
mov
test
mov
movsl
inc
fwait
push
in
loope
adc
xchg
sbb
imul
sti
stc
arpl
leave
out
mov
sub
lds
lcall
cmp
aaa
jo
cmp
mov
jge,pn
test
aad
sub
fcomip
ret
lcall
lahf
push
cmp
dec
pop
and
aas
mov
pop
push
jno,pt
out
pop
je
push
xchg
lret
fs
leave
pop
push
push
ss
arpl
bound
jne
repz
jge
sahf
xorb
bnd
int
out
fs
loope
roll
jle
out
in
mov
lods
mov
cltd
ret
mov
sub
add
lret
xchg
push
dec
mov
sbb
lods
clc
inc
add
test
inc
sahf
andb
aaa
jp
dec
loop
xchg
cmp
shrb
mov
shlb
es
cmpsb
fdivs
out
pop
mov
jg
ds
dec
adc
jl
xchg
insb
sbb
and
int
push
jle
scas
popf
add
mov
lds
in
sbb
push
das
and
mov
insl
xor
ds
mov
xor
sti
shrl
push
stos
jg
mov
xchg
loope
sub
rolb
addl
ss
test
testl
rcl
or
testb
xor
flds
lcall
inc
cltd
push
mov
out
fdivs
scas
movsb
jg
cs
je
inc
xlat
mov
sub
cmp
sbb
lea
lods
pop
dec
dec
loope
lds
mov
out
outsb
push
out
pop
dec
push
mov
dec
mov
xchg
fisttps
loop
push
and
and
xchg
pop
jns
push
xchg
xor
mov
pop
adc
imul
push
sub
mov
pusha
imul
lock
cs
mov
or
adc
shlb
push
outsl
dec
xor
int
outsb
out
fistpl
adc
jl
aas
push
mov
jge
js
inc
and
out
push
out
loop
stos
lock
mov
adcb
inc
ljmp
stc
shlb
mov
fisttpl
das
mov
push
sbb
lods
repz
dec
mov
test
into
xchg
xchg
andb
inc
movsb
sub
xchg
pop
hlt
aam
jmp
iret
mov
ret
rcll
js
loope
inc
add
pushf
lea
sahf
mov
lods
add
mov
push
pop
cmp
fidivrl
mov
mov
dec
push
rol
sbb
sbb
or
js
sarb
cld
or
lahf
mov
inc
scas
and
cmp
les
popa
or
mov
push
fisubrl
gs
xchg
mov
pushf
add
mov
fldcw
jae
hlt
scas
xchg
aas
rcr
jg
cmp
pop
jge
jne
dec
adc
dec
lret
jae
jle
xlat
sbb
and
outsl
adc
jl
jle
jnp
inc
cmp
fiadds
mov
mov
and
clc
in
pop
dec
subl
rcll
ret
xchg
add
xor
std
pusha
jl
xchg
mov
mov
mov
lret
cmpsb
push
cli
cmpsb
pop
jp
int3
dec
add
and
orl
dec
and
and
adc
and
or
inc
pop
xchg
pop
cli
fsubs
daa
loop
imul
pop
mov
mov
gs
adcb
imul
add
cmp
xchg
lea
repz
les
mov
mov
dec
sbb
mov
aam
sarb
pop
cmp
leave
clc
pop
enter
ds
inc
pop
aad
pop
mov
adc
cmp
stc
mov
ja
cmpsb
nop
jno
call
cmc
sbb
nop
out
mov
out
clc
pushf
les
xchg
nop
bound
je
rcrb
stos
pusha
adcb
js
and
xchg
inc
fdivrl
and
outsb
add
mov
adc
je
cltd
clc
xchg
pop
adc
in
inc
ja
add
xor
jns
pusha
adc
xchg
aaa
inc
or
and
imull
leave
out
mov
xchg
sub
stos
jb
sub
sahf
cmpl
imull
ret
xor
pop
mov
shl
hlt
nopl
push
sub
mov
imul
xchg
mov
xchg
ljmp
mov
call
mov
pcmpeqb
leave
sub
adc
mov
mov
jne
pusha
inc
jg,pn
data16
sub
adc
cmpsb
mov
xchg
movsl
mov
je
mov
xor
mov
shlb
data16
mov
sub
cmpl
popf
push
je
mov
pop
and
test
dec
out
and
jo
jmp
loop
into
xlat
sbb
or
lahf
ds
cvtps2pi
mov
adcl
ljmp
filds
pop
imul
xchg
jns
cli
sub
sub
rcrb
adc
inc
cmp
icebp
iret
cmp
fs
mov
arpl
in
nop
ret
sub
xchg
fbld
cmpsb
fistpl
lret
xorb
enter
add
push
xchg
repnz
xchg
les
mov
loope
lcall
push
lcall
shrl
insl
hlt
jae
negl
outsl
xor
adc
mov
gs
dec
loopne
push
int
jns
in
pop
adc
pushf
inc
rorl
vsqrtps
jl
xchg
repnz
add
das
addr16
inc
add
ja
jns
mov
retw
sbb
xor
mov
cmp
pop
fsubp
push
test
dec
push
ret
and
mul
loop
fs
add
sti
adc
lret
mov
or
mov
cltd
call
je
je
dec
cmc
bound
add
jae
nop
and
sub
dec
aaa
shl
les
add
jmp
mov
imul
push
pop
sub
add
jmpw
nop
cmp
mov
mov
or
out
cmpsb
ja
xor
cld
fists
daa
jg
mov
rclw
sbbl
jns
lcall
jo
cli
xchg
ret
cmp
pop
xor
out
lcall
testb
ds
mov
lds
mov
imul
mov
jb
lcall
in
push
cmp
xchg
push
repnz
or
in
es
cmp
or
pop
adc
gs
icebp
pop
xchg
fsubrl
adc
pop
jge
cmp
jb
push
xor
ret
dec
pop
inc
adc
or
inc
lods
stos
jnp
in
push
push
inc
std
cmp
dec
adc
call
mov
sub
fsts
sub
lods
popf
orb
movsb
shrl
push
subb
sbb
push
adc
inc
dec
pop
sti
pop
jno
xor
repnz
stc
xchg
sbb
popf
push
sbb
fisttpll
fimull
add
mov
int3
dec
jmp
and
add
mov
pop
cltd
in
mov
mov
cmp
xor
icebp
xchg
adc
stos
outsb
mov
push
jmp
pop
out
dec
push
call
jmp
and
push
adc
es
mov
dec
jmp
test
rcl
lea
sub
sbb
lock
not
pop
and
bound
sub
cmp
rcrb
icebp
xchg
out
pop
push
imul
out
sti
mov
xor
lahf
jle
in
andl
jnp
xchg
xchg
mov
subl
fs
aas
jb
aad
fs
mov
and
sbb
ja
mov
fwait
int
dec
jnp
loop
cld
std
lods
les
and
xchg
xor
sti
das
or
inc
mov
imul
adc
pusha
pop
dec
loope
cmp
xchg
xlat
xchg
test
clc
data16
add
dec
das
mov
pushf
ds
fdivrs
dec
xor
push
push
pop
adcw
push
imulb
dec
popa
rorl
scas
or
cmp
jmp
push
jne
pop
xor
xchg
add
jo
lods
test
in
repz
in
mov
mov
xchg
or
out
sub
sbb
jge
xchg
inc
mov
mov
inc
xorb
incb
sub
dec
es
inc
rolb
sbb
pop
lcall
shrb
jnp
sub
inc
and
jmp
insl
scas
aam
mov
hlt
push
mov
xchg
repnz
cmc
jns
insl
cltd
cmp
imull
ljmp
cmpl
inc
dec
lds
dec
out
in
inc
mov
mov
pop
sub
xor
cmp
mov
cwtl
dec
mov
test
inc
test
jle
loope
jge
hlt
lcall
inc
jmp
jg
filds
mov
xchg
ljmp
sti
adc
push
pop
stos
std
jge
insl
adc
repz
daa
fimuls
add
dec
int
das
pushf
jecxz
or
xlat
cmp
push
push
movsb
fimull
sub
dec
insb
adc
cmp
stc
out
nop
aas
jns
and
and
xchg
sbb
jl
cs
adc
mov
pusha
int3
fldl
adc
out
inc
pop
cmp
mov
push
xchg
negb
sbb
or
dec
and
pop
push
sub
popf
or
data16
pusha
adc
sub
fstpt
xor
inc
sbb
xchg
mov
sub
imul
pusha
lds
sbb
add
jnp
jne
fstpl
push
stos
inc
sbb
scas
inc
imul
rsm
sub
and
stos
ljmp
testb
in
push
push
jge
test
add
adcb
outsb
dec
roll
int3
aaa
jo,pn
push
mov
lret
fdivs
jbe
sbb
push
pop
pop
jl
loopne
xchg
das
jmp
aam
inc
pop
or
mov
loopne
dec
scas
mov
lret
pop
xchg
cld
or
movsl
int
pop
sub
sub
clc
jp
adc
xor
dec
cmc
pop
cmp
mov
push
cmc
jo
data16
stos
mov
sbb
pop
sub
addr16
mov
ja
das
xchg
cmp
push
out
js
dec
jmp
sbb
fnstenv
das
test
mov
repnz
stos
xor
stos
add
xchg
lods
enter
out
movsl
neg
mov
insb
mov
gs
data16
or
jmp
mov
leave
sub
sbb
pop
jne
mov
mov
lods
push
fwait
pop
dec
int3
into
xchg
xchg
rol
push
fisttps
xor
lret
cmp
sbb
mov
out
adc
push
lds
dec
mov
lods
fdivrl
test
fistl
and
test
jnp
xchg
push
scas
and
mov
in
jno
push
cmp
outsl
sti
jno
sub
fnstenv
ret
add
arpl
out
inc
pop
cs
aas
mov
sbb
jl
lret
jecxz
jl
pop
fisubs
sarb
faddl
xchg
nop
pop
xor
hlt
jecxz
jnp
dec
cli
jnp
stc
xchg
stos
divb
call
fidivrs
andl
dec
stos
enter
gs
popf
xchg
mov
xor
adc
jp
mov
ds
outsb
sbb
pushf
mov
imul
jge
pop
ficoms
sub
push
pop
jecxz
fs
sub
and
addr16
sbb
mov
pop
sbb
sub
iret
in
jo
adc
xor
pop
std
push
lods
push
aad
or
iret
jns
lods
xchg
push
out
xchg
idivl
or
xchg
xor
pop
adc
cmp
jle
xchg
into
pop
cli
adc
setbe
push
aam
cltd
shrb
enter
test
adc
negl
loope
or
sbb
lds
cmp
xor
sbb
dec
aas
push
cmp
xchg
lret
js
sbb
jo
in
jecxz
clc
fsts
push
mov
jb
inc
add
push
push
aam
sub
rorl
inc
lds
stos
fidivl
or
push
inc
cmpsb
xchg
pop
sbb
and
ja
test
sbb
lock
scas
push
test
dec
mov
cmp
sub
cmp
dec
mov
mov
flds
xchg
decb
mov
in
test
fcmovnbe
mov
sbb
popf
xor
cmp
mov
popf
pop
jl
fnstenv
mov
xor
cmc
gs
xchg
lret
mov
jo
mov
cmp
loopne
sub
js
inc
pop
mov
outsl
mov
rcll
cmc
or
ret
lahf
insl
or
enter
bound
sbb
call
xchg
jo
push
mov
xor
mov
dec
push
xor
dec
xchg
adc
repnz
loope
test
push
inc
sub
sub
ret
sbb
jl
cmp
xchg
xor
icebp
subl
shl
xchg
xor
or
subl
fldlg2
jp
icebp
outsl
cmp
mov
lea
popa
sahf
pop
fsubs
xchg
or
or
pop
sarb
test
mov
inc
addl
jo
mov
lret
imul
std
adc
lahf
test
mov
xchg
pushf
mov
cwtl
dec
sarb
std
push
in
stos
rolb
lods
insl
push
xchg
cmp
xchg
pop
jge
or
popf
repz
iret
push
insl
repnz
daa
out
add
and
jle
testl
scas
push
push
push
sub
mov
outsl
push
and
mov
test
out
dec
int
inc
sub
je
insb
cwtl
iret
nop
sbb
jge
movsb
pop
inc
lea
or
dec
or
pop
sub
lock
clc
pushf
ljmp
or
js
vmovups
xor
scas
jb
imul
test
out
dec
call
scas
hlt
sub
push
shlb
clc
cli
iret
mov
jp
ret
in
and
cmp
or
mov
sbb
out
push
je
jmp
ret
dec
pop
jecxz
cltd
inc
pushl
movsb
mov
xorl
ljmp
or
arpl
movsl
enter
repz
loopne
std
stos
push
adc
inc
push
sahf
out
sarb
lret
pop
xchg
lock
addr16
cmp
ret
loope
sbb
iret
fnsave
adc
xchg
push
mov
repnz
xorl
inc
pusha
cltd
fstpt
scas
or
mov
xchg
mov
dec
popa
fwait
push
iret
das
out
mov
mov
add
out
sbb
insb
mov
push
inc
std
gs
movsl
out
xchg
cwtl
inc
pop
in
mov
ljmp
cmp
les
inc
jno
push
pop
push
loop
mov
fwait
fwait
nop
rclb
add
push
movsl
punpckhwd
daa
test
mov
push
in
xchg
jecxz
insl
lret
adc
jo
pop
mov
cli
xchg
mov
jb
out
shll
aad
addr16
xchg
mov
push
out
addr16
mov
jns
push
xchg
rorb
sbb
mov
addr16
xor
pop
and
ja
fabs
mov
xchg
outsl
jbe
jo
or
pushf
pop
sub
jg
mov
push
jae
test
int3
cmp
imul
xchg
out
pusha
stc
sub
rorb
push
mov
imul
inc
pop
pop
adc
or
push
add
pop
imulb
adc
jmp
jno
fdivrs
adc
mov
dec
push
mov
andl
inc
out
sub
jns
fists
sbb
xchg
cmp
fwait
cli
mov
je
pop
fidivrs
xlat
jne
cmp
das
inc
or
data16
push
fidivrs
adc
call
test
xchg
test
sub
lods
in
rorl
pop
xchg
dec
sarb
rorl
mov
cmpsb
repz
data16
jl
or
mov
xchg
scas
out
lcall
sbbb
jmp
mov
loop
outsb
jmp
arpl
cmpsl
les
imul
jns
pop
insl
push
test
or
adc
lock
pop
mov
inc
cmc
sub
popa
sbb
test
xor
push
popf
adc
nop
sub
inc
jge
sarl
popf
or
add
stc
jle
push
pushf
test
mov
xchg
adc
sahf
xor
dec
pop
xor
xor
jl
jns
pop
or
jnp
adc
jmp
lret
loop
sbb
popa
scas
das
mov
lcall
cld
popf
gs
addr16
mov
dec
jge
add
sbb
xchg
sbb
lods
xor
dec
cmpsl
mov
jb
pop
mov
leave
movsl
out
push
sub
push
push
fucom
cmpsb
mov
jg
cmp
pop
pop
cltd
sbb
cltd
lret
insb
inc
mov
ja
and
test
repnz
add
shll
test
jg
jg
repnz
add
and
xchg
jbe
fwait
or
mov
push
loopne
jae
sbb
xor
repz
dec
inc
insl
xchg
add
mov
jecxz
mov
dec
xchg
jp
inc
mov
mov
push
dec
mov
test
mov
jns
push
iret
jae
push
cli
inc
xchg
daa
jge
mov
in
int3
outsb
mov
or
das
jmp
movsl
or
std
cmp
adcl
gs
sahf
mov
into
sub
popa
lret
lock
movsb
push
mov
dec
sahf
dec
cmp
scas
add
sar
ficompl
movsb
insl
cmp
seto
inc
in
dec
or
out
aaa
push
fisubl
xchg
inc
jg
jg
mov
adc
mov
addr16
addl
call
call
and
or
and
rcr
or
in
xchg
pop
outsw
cmp
iret
rcrb
out
lds
hlt
mov
imul
push
stos
push
push
add
push
pop
pop
roll
sbb
xor
stos
rclb
xor
mov
ja,pn
xchg
fcomp
repz
fsubrl
testl
jecxz,pt
and
mov
aad
xlat
xchg
cmp
and
sub
dec
sti
sbb
or
and
pushf
push
add
pop
iret
and
mov
decl
icebp
jp
fdiv
aad
mov
dec
in
adc
and
sub
mov
shrl
test
roll
or
pop
in
add
je
xor
push
fwait
sbb
and
mov
rcrl
and
jle
sbb
add
xchg
xchg
mov
lret
sub
sarl
sub
leave
mov
mov
mov
mov
xchg
cmc
mov
cltd
cmp
push
jecxz
jp
mov
sbb
pop
and
stos
arpl
cmp
or
test
loope
test
andb
cmpsl
adc
pop
add
pop
fnstenv
mov
adc
js,pn
sbb
jmp
ficomps
les
adc
pop
xor
mov
test
mov
repz
mov
jne
xor
xchg
in
mov
rorb
test
cmpsb
ljmp
add
jmp
push
fcomi
jmp
pop
xchg
mov
hlt
add
push
mov
gs
mov
jnp
mov
xor
xlat
aas
cmp
or
jecxz
push
test
jg
pop
or
pop
mov
cmp
mov
inc
pop
mov
fidivs
inc
mov
js
into
popf
fisubrl
jl
dec
jle
pop
push
test
repnz
add
jge
jbe
sarl
testb
stos
shl
imul
pop
mov
lock
sahf
out
push
insw
fndisi(8087
inc
shrl
popf
jb
mov
add
sub
jle
push
mov
adc
pop
mov
sbb
pop
mov
and
push
jb
icebp
jo
mov
cmp
ficomps
divl
gs
xlat
xor
adc
jl
sarl
fstl
sbb
jnp
add
ja
dec
xor
aaa
cwtl
push
loope
sub
mov
xor
jecxz
cltd
mov
stos
xchg
lea
movsl
es
xor
xchg
in
jp
pop
pop
pop
dec
mov
das
roll
lds
and
pop
movsl
mov
jo
loope
or
sub
je
lcall
push
xchg
add
add
sub
fstps
inc
fcompl
xor
cmp
shrl
pop
idiv
insb
sti
push
sbb
pop
jge
pop
mov
enter
push
test
push
mov
push
cmovno
cmp
adc
insb
xchg
jl
in
push
stc
jmp
mov
inc
adc
imul
or
sbb
aam
mov
inc
mov
sbb
data16
fimuls
xchg
xor
clc
je
inc
incb
ljmp
sbb
lcall
cmp
cmp
push
adcb
mov
cs
aaa
jmp
push
or
xchg
nop
inc
setge
add
jnp
pop
sahf
shl
test
stc
aas
and
out
lock
push
mov
dec
jns
je
filds
pop
aas
sbb
stos
sub
push
dec
inc
pop
adc
mov
dec
js
add
rcrl
ds
mov
mov
dec
sub
daa
xchg
subb
and
test
dec
rcr
outsl
mov
jbe
xor
mov
cltd
jno
mov
insl
and
in
xchg
and
lret
fucom
inc
or
jp
push
sbb
out
inc
and
loop
push
xor
out
jb
loope
mov
and
xor
cmp
testb
mov
mov
andb
ret
pop
xchg
lea
inc
xchg
and
add
or
mov
mov
push
cmc
cltd
xor
push
add
jb
dec
out
mov
ror
sahf
add
pushf
ljmp
and
xchg
shl
mov
sbb
xor
dec
lss
sub
inc
shll
shll
scas
pop
lahf
movsb
and
pop
stos
xor
outsb
sahf
lea
in
sub
inc
aaa
push
pop
mov
incb
dec
cwtl
mov
push
mov
mov
cmp
pop
shr
sahf
insb
ljmp
movsl
inc
shrl
cs
aas
add
bound
cmp
jge
add
sub
dec
add
sub
cmpsl
lahf
imull
imul
outsb
or
or
mov
mov
jns
ret
jo
sahf
sub
mov
pop
push
push
sbb
inc
and
xchg
repnz
outsl
xlat
or
lahf
dec
clc
popl
cmp
push
das
es
xor
std
ljmp
sub
ja
or
lock
roll
mov
pop
pusha
and
mov
test
mov
stos
sub
xchg
popf
or
xchg
out
cs
sbb
sbb
xchg
jecxz
call
loope
mov
xchg
inc
push
stc
pop
adc
add
rcrb
push
cmp
dec
test
test
jbe
pop
subl
jp
sub
push
dec
adc
mov
mov
pop
add
sti
and
inc
jb
jae
pusha
pop
jnp
lods
cmp
xor
pusha
push
jg
sub
or
or
mov
push
leave
scas
ficomps
insb
jno
cld
pop
jae
mov
cmpl
xchg
cmp
call
div
mov
sub
testl
jb
mov
jne
cmp
loopne
and
loop
push
pop
aas
shrl
push
out
push
jmp
rcrl
cli
sub
mov
ja
loopne
mov
inc
cmp
add
mov
mov
pop
mov
aas
bound
fbld
or
rcll
imul
push
sahf
mov
imul
aad
loopne
xlat
mov
fiaddl
cwtl
pop
rcrb
icebp
and
movb
mov
adc
mov
insb
inc
and
jnp
nop
std
adc
lea
dec
sbb
js
rorl
sbb
popa
dec
cmp
mov
lret
push
push
push
xchg
cmp
inc
sbb
sbb
sti
in
das
jnp
add
fcmovnb
xchg
xchg
cmp
loope
add
push
stos
ja
inc
cs
push
arpl
stc
mov
lahf
cmp
and
rcrl
out
popf
jns
in
pop
mov
pop
incb
mov
push
xor
xchg
push
hlt
cmp
ret
cs
fwait
leave
and
mov
fadd
adc
mov
lds
cwtl
push
sbb
adc
sbb
mov
popf
icebp
aas
or
es
loopne
and
xchg
and
lret
jl
lcall
les
xchg
xchg
imul
stos
inc
and
cmpsl
or
into
insb
mov
cmpsl
fmulp
xor
dec
lock
pushl
push
push
and
mov
pop
pop
push
adc
adc
inc
insb
cmpsb
jge
inc
addb
cmc
out
addr16
push
pop
in
stos
jne
lahf
mov
ds
repnz
mov
into
leave
adc
outsl
or
adc
aaa
jle
movups
pop
and
lea
aam
push
mov
icebp
inc
or
mov
out
xchg
loopne
ret
dec
cmp
out
push
jle
enter
and
sar
and
pop
arpl
fldenv
pop
test
js
mov
or
inc
mov
pop
repnz
fidivrl
or
sahf
shll
inc
push
adc
pop
ret
mov
cs
add
jle
adc
incl
inc
xorl
adc
ret
adc
cmp
sub
and
pop
xchg
aam
repz
lahf
lcall
dec
jp
movb
mov
xlat
sarb
jmp
jno
pop
fadd
add
test
pushf
or
sbb
xor
test
mov
pop
in
mov
incb
xchg
ret
decb
push
pop
jmp
push
ror
pop
rcl
cmp
nop
ds
pop
mov
iret
lock
fdivl
mov
mov
pop
cmpsb
push
sbb
cmpsl
xorb
sbb
inc
push
repnz
lea
jae
push
hlt
clc
jecxz
das
sub
mov
sbb
xacquire
adc
jge
fs
imul
and
lret
int3
pop
inc
xchg
ss
xchg
fucom
stc
jecxz
pop
out
mov
inc
sahf
in
and
lea
data16
sarl
ljmp
rorl
cmp
sbb
test
sbb
or
add
cmp
pop
xchg
xchg
test
xchg
sub
outsl
mov
rcrl
testb
and
cmpb
mov
adc
les
cltd
and
inc
rclb
sbb
dec
repz
cmp
xor
push
leave
fsubl
adc
sti
jl
into
ret
sbb
out
sbbl
negb
sbb
mov
push
dec
xchg
out
mov
scas
std
insl
pop
mov
and
sub
test
add
adc
mov
hlt
cld
mov
test
stc
std
lahf
push
pop
adc
xchg
movsb
stos
mov
xchg
daa
vpslld
push
test
inc
in
mov
add
inc
test
jns
fs
xor
mov
pop
fldenv
add
xchg
fwait
mov
add
scas
ret
les
jne
push
cs
and
divb
push
cwtl
shlb
int
mov
jne
adc
data16
adc
bound
pop
loop
add
arpl
xchg
jno
or
fcomip
pop
loopne
scas
xlat
lea
cmpsl
dec
shll
das
mov
xchg
test
adc
inc
mov
jnp
jg
outsl
movsb
jp
push
adc
popf
pop
and
ljmp
repz
mov
sbbl
mov
mov
dec
addr16
jb
sub
arpl
movsl
lods
imul
imulb
je
xchg
pop
mov
in
stos
insb
pusha
mov
cli
iret
int
dec
pop
jmp
jns
pusha
jns
imul
mov
int3
pop
jmp
ret
je
or
aad
out
imul
aas
imul
aas
pop
into
adc
mov
mov
push
push
in
mov
outsl
int3
out
push
sbbl
scas
cmp
sub
in
inc
cs
notb
rol
cmp
jp
mov
out
cmp
imul
stos
xchg
aam
mov
and
ja
or
out
insl
sub
cmp
adc
and
jl
mov
dec
inc
jno
out
mov
hlt
sbb
mov
fcmovb
lods
loop
das
and
mov
xor
ret
out
pop
dec
clc
sbb
lahf
sbb
outsb
inc
int
pushf
sub
push
adc
push
mov
mov
loop
lods
orl
stos
cmp
push
fsubrs
in
outsl
mov
xor
ret
or
sub
adc
xchg
mov
aaa
out
mov
push
inc
fstpl
sbb
mov
mov
in
addb
rcll
inc
jne
xor
jae
into
loope
shrl
stos
ljmp
pop
dec
out
shll
mov
dec
inc
icebp
out
shlb
cmpb
lret
adc
sbb
fimuls
aaa
fwait
sub
repz
daa
cmp
cwtl
fists
lcall
sub
cmp
and
dec
imul
int3
out
jb
push
mov
cmp
cmpsb
push
mov
pop
cmp
jle
inc
adc
pop
mov
push
xchg
adc
fnstsw
mov
mov
or
or
cmpsl
sbb
ret
aaa
movhps
lahf
dec
jo
sub
fsub
sbb
fcomip
ficompl
push
dec
adc
add
fwait
push
jge
lcall
jp
pop
or
sbb
cmp
aad
clc
mov
jae
mov
popf
sub
cmpsb
xchg
sahf
adc
push
cmp
inc
scas
sbbl
or
or
into
repz
cli
push
jae
or
add
repnz
cmp
ret
addl
loop
lahf
jb
mov
out
ds
in
scas
xchg
shrb
sbb
and
mov
sbb
inc
test
sbb
fdivl
arpl
adc
insl
inc
fucomip
mov
and
lcall
icebp
push
in
ljmp
mov
cli
adc
add
lret
xchg
rclb
xlat
sbb
and
test
pop
mov
iret
outsb
sahf
xor
leave
and
mov
jge
jl
fiaddl
loop
pop
jmp
aaa
sub
aaa
pop
mov
mov
or
loope
bound
push
sub
mov
aas
insl
rcl
sub
movsb
dec
lods
lahf
sbb
inc
push
jecxz
insl
pop
lcall
movlhps
sysexit
inc
imul
js
negl
iret
fists
and
pop
xchg
js
lods
std
push
jmp
xchg
pop
sbb
imul
fdivs
mov
add
push
sarb
in
pop
cli
mov
add
jmp
decb
divl
popf
pop
jge
jae
and
fwait
mov
clc
lea
adc
leave
test
push
push
insb
pop
sbb
in
bswap
in
cmp
sub
mov
mov
xchg
cs
imul
ja
push
lods
jbe
mov
fistpll
cmp
shll
out
pusha
mov
arpl
mov
addl
dec
adcl
xchg
sbb
inc
xchg
pop
insl
sub
out
push
daa
jne
cld
sbb
and
push
test
fwait
enter
aam
imul
adc
xor
scas
pop
dec
cli
mov
or
mul
popa
subb
add
pop
bound
push
test
mov
pop
or
xchg
arpl
jg,pn
cmp
sbb
xlat
xor
adc
and
test
mov
sub
xor
add
add
and
push
dec
aas
mov
ret
jmp
dec
or
jbe
cmp
and
jp
bound
nop
ret
int3
rcll
mov
push
in
mov
xor
scas
xor
lret
pop
xor
dec
xchg
pop
out
adc
push
std
repnz
pop
ret
add
fucomi
fwait
xchg
ret
mov
adc
loop
negl
test
push
xor
ret
sub
and
lret
hlt
or
xchg
sti
dec
mov
push
inc
mov
lock
jecxz
cmp
movsb
add
je
shlb
popf
or
cltd
and
es
jecxz
pop
enter
outsb
nop
push
sub
sbb
add
mov
push
mov
dec
mov
inc
std
mov
jb
sbb
and
test
inc
shlb
bound
stos
lods
jns
push
rol
cmp
jns
jge
add
push
addr16
nop
imul
fistpl
test
mov
ljmp
add
das
jo
inc
adc
fdivr
xchg
xorl
pusha
sbb
leave
ret
and
cmp
and
lods
and
filds
sahf
dec
stos
orb
les
paddusw
push
and
add
adc
jb
or
js
loope
jo
leave
js
fildl
iret
sub
mov
popf
sub
in
cmp
or
cmp
sub
std
inc
sub
int3
shrb
lods
fcom
data16
sti
add
icebp
adc
pop
call
dec
shr
repnz
pop
mov
or
fwait
mov
call
out
mov
xchg
inc
call
dec
mov
mov
sahf
pushf
adc
scas
xchg
mov
stos
shll
in
mov
lret
dec
imul
push
mov
pop
inc
xor
cmpsl
jne
dec
insb
xor
cld
mulb
movl
jecxz
push
inc
movsl
mov
stos
push
pop
dec
imul
cmp
mov
mov
idivb
mov
clc
mov
sbb
mov
xor
adcl
dec
sub
in
fidivl
push
sti
psrad
dec
jae
imul
or
xchg
cmp
jecxz
scas
mov
pop
sub
adc
inc
idivb
sbb
loope
mov
mov
lahf
push
leave
jns
sti
dec
and
imul
and
es
in
sbb
mov
jmp
sti
sbb
popf
adc
jl
xchg
cld
mov
sahf
rcll
psubusw
jg
or
test
in
xor
push
popf
mov
ret
xor
cmp
pop
arpl
dec
xor
adc
pand
int3
or
ret
hlt
cmp
imul
or
insl
push
test
shll
or
xor
push
sarl
cmp
xchg
fcomps
popf
pushf
add
adc
xchg
loope
out
mov
xchg
mov
outsl
stos
mov
xchg
sub
pop
inc
mov
xlat
addr16
add
adc
jb
out
push
xchg
testl
out
icebp
mov
add
mov
in
dec
jne
ficoms
lods
mov
fnstcw
xchg
sbb
sbb
mov
imul
push
les
fld
xor
or
mov
pop
mov
jns
bound
repnz
adc
pop
jb
sbb
adc
fcoms
cmp
outsb
jo
test
test
jg
shlb
in
sti
daa
lsl
sub
jecxz
stc
test
lock
movsl
cmpsb
arpl
push
mov
pop
inc
jmp
xor
fnstsw
mov
and
ret
dec
xchg
cmp
mov
sub
xchg
or
call
ja
xchg
cmc
in
adc
cmp
scas
out
call
addb
mov
sahf
add
pop
subl
leave
les
stos
pop
das
push
adc
or
stos
xchg
mov
mov
mov
add
jmp
dec
mov
push
mov
xchg
es
add
mov
jne
lods
mov
clc
lock
fbld
aam
cmc
lahf
mov
leave
mov
out
push
and
inc
in
popf
sbb
enter
call
lods
divl
xor
mov
adc
dec
ffreep
xchg
daa
or
imul
or
lret
pop
mov
out
mov
int
ret
hlt
sbb
lock
int
jl
mov
and
fldt
dec
fwait
mov
arpl
mov
cld
cmp
cmp
fiadds
aaa
xchg
push
test
fidivs
add
lcall
dec
mov
out
add
pop
mov
xchg
add
push
sbb
mov
dec
hlt
pop
mov
popa
xchg
stc
ret
jns
in
call
jp
adc
les
cmc
inc
fistl
outsl
xchg
cmc
jno
sub
pop
ja
pop
adc
addr16
dec
test
cmp
loope
adcb
loope
jno
cmp
mov
test
rcl
sbb
dec
xor
dec
mov
adc
push
sti
push
mov
rclb
push
jo
add
int
lods
sub
sub
pop
mov
push
xor
cmp
stos
sbb
fildl
dec
inc
fs
push
inc
or
insl
je
das
push
pop
jo
hlt
pop
ja
into
mov
sub
jmp
lahf
lock
outsb
and
ficomps
out
ret
or
push
jecxz
add
cmp
xchg
or
mov
mov
or
cmc
out
aas
and
mov
fcomps
jno
mov
iret
imul
sbb
inc
mov
out
jne
dec
lods
lcall
es
xchg
addr16
adc
mov
and
add
aas
sbb
fwait
pop
daa
sbb
add
int3
out
sbb
fldl
cmp
mov
jnp
jg
jle
lods
cmpsl
arpl
jns
addb
jo
mov
cmpsb
popa
add
adc
in
shlb
pop
leave
jb
xor
in
imul
lds
int3
pushf
cmp
adc
data16
fwait
push
into
xchg
pop
arpl
pop
aaa
jmp
cmp
push
aam
outsl
insl
sbb
ret
movsl
mov
shl
adc
mov
out
shlb
rclw
inc
lock
jmp
imul
rorb
sbb
cs
movsb
sub
mov
fistpll
nop
shrb
aad
mov
cmp
inc
cmp
repz
pusha
test
fidivl
xor
pop
push
insb
fimull
mov
into
cmp
mov
push
ret
xor
addr16
inc
out
jbe
sbb
loopne
push
cltd
je
adc
sub
xchg
mov
int3
or
repnz
dec
leave
add
xchg
daa
jecxz
lock
lock
mov
jmp
fs
movsb
clc
mov
leave
test
jnp
js
test
adc
push
xchg
xchg
push
andl
ret
pop
sub
jae
andl
jge
mov
jo
shl
insl
aam
push
sbb
and
fcompl
xor
push
fbstp
sub
push
aam
and
shr
rorl
xchg
sub
xchg
xor
push
sub
dec
lahf
push
cmp
xor
adc
cltd
or
pop
xor
jg
mov
lcall
lds
adc
fwait
push
das
cmpsb
or
jb
mov
cmp
push
add
jmp
in
sub
in
jnp
add
ja
pusha
mov
les
fisttps
pop
sub
add
pop
cmc
cmp
push
pop
or
jo
dec
sbb
lret
ss
jbe
ror
push
test
addr16
inc
fisubrl
in
aaa
ret
lds
in
jl
lods
pop
or
jl
fsubrl
repnz
shll
add
bound
push
add
sub
test
fbld
jno
push
insb
sti
lahf
cwtl
jmp
push
daa
inc
cmp
jecxz
or
or
lock
push
imul
dec
or
mov
add
sub
add
cmpb
clc
fwait
sbb
xchg
cld
rcr
sbb
sub
repnz
xlat
xor
popa
mov
lret
pop
nop
mov
stos
ss
fs
pop
mov
adc
push
xor
or
loope
pop
add
daa
roll
pop
int3
int3
sub
add
cmp
sub
movsl
aas
push
cwtl
jns
dec
arpl
repz
or
mov
xchg
cmpb
shl
push
mov
or
sbb
outsl
mov
cmpsl
push
bsr
or
shr
pop
pop
addr16
ds
daa
xchg
ret
dec
add
insb
cmpsl
or
xlat
jg
push
mov
mov
add
movsb
in
xchg
idiv
fucom
mov
outsl
inc
jg
pop
push
sub
lret
fbstp
mov
out
lahf
dec
or
fmuls
inc
dec
shll
das
test
xchg
loope
daa
xor
cmc
mov
dec
hlt
cmp
cmp
xor
insl
pop
jp
rcl
cmpsb
mov
lods
sahf
ja
arpl
mov
fstpl
xlat
inc
mov
fsub
cld
xor
stos
and
in
leave
into
pop
fdivr
and
in
xor
imul
mov
insb
into
test
not
add
pop
or
sbb
pop
jp
sbb
movsb
out
jo
fildl
mov
and
movl
xor
mov
pusha
add
inc
xor
xchg
sbb
ret
jp
lods
cmp
repz
xor
sub
add
mov
xchg
sub
imul
out
mov
mov
jp
inc
cmp
mulb
jecxz
stos
sti
sbb
test
lret
pop
inc
addb
cmpsb
pop
arpl
jecxz
or
inc
add
fwait
xchg
pusha
inc
jbe
aam
cltd
inc
rolb
jle
in
cmp
mov
mov
jp
mov
mov
into
sbb
stos
ror
in
cmp
mov
pop
or
repnz
adc
movsb
pop
out
push
or
mov
sbb
in
test
xor
mov
lahf
xor
icebp
addr16
push
test
stos
jle
js
sbb
mov
push
f2xm1
bound
dec
shlb
cmp
sahf
int3
mov
daa
cs
jl
cld
shll
iret
push
daa
fdivs
adc
andb
psubusb
call
mov
jmp
fdivrl
jne
iret
mov
push
stc
ficoml
dec
hlt
sbb
adc
inc
cmp
cmp
ljmp
mov
in
push
mov
out
sti
sahf
shl
daa
mov
orl
jp
dec
xchg
cmp
pop
es
sub
add
rcl
bound
pop
in
adc
outsb
or
imul
inc
add
mov
bswap
daa
push
xor
outsl
out
lahf
jmp
lock
pop
or
push
icebp
jns
xchg
int
ror
mov
sub
outsl
mov
add
mov
mov
and
test
pop
mov
in
jns
fs
jbe
sbb
xchg
mov
sbb
repz
mov
insb
enter
ljmp
and
xchg
mov
in
and
push
xor
popf
adc
fcmove
iret
jo
mov
test
imul
adc
mov
xchg
push
add
xor
cli
test
add
repnz
cmp
mov
js
push
mov
pusha
cltd
lahf
jnp
sub
jmp
dec
jg
ja
cmp
or
cmp
das
xchg
and
into
sub
xor
xchg
jp
aaa
mov
test
fsts
mov
jae
inc
xor
addl
sarl
shrl
xchg
inc
jbe
fwait
enter
ret
push
mov
push
jl
inc
arpl
xchg
cmpsl
cmpsl
jge
das
stos
gs
pop
xchg
xor
xor
xor
pop
loope
in
jnp,pn
push
add
sub
or
mov
dec
push
mov
jb
mov
cmpsl
dec
mov
sub
pop
jecxz
cwtl
insb
out
xor
jno
mov
ds
push
imul
and
jp
das
ljmp
push
xchg
cmpsb
scas
mov
lretw
pop
mov
dec
sub
xor
and
push
sub
cmp
jmp
and
or
xchg
rcl
lea
daa
sbb
lcall
sbb
cli
rcll
leave
leave
lret
inc
and
into
scas
sahf
inc
inc
xchg
repz
rorl
mov
sbb
mov
aas
lods
cld
pop
mov
mov
mov
int
inc
frstor
jo
aaa
pop
imul
cmpsl
or
and
sub
sub
push
mov
roll
outsb
inc
mov
in
in
and
xchg
mov
jle
push
les
repz
mov
mov
lahf
xchg
movsb
mov
das
aad
adc
push
xchg
out
fwait
std
mov
sub
mov
test
les
mov
subb
jb
lret
aad
cmc
mov
mov
push
push
add
dec
leave
bound
or
ja
ljmp
lret
enter
sbb
jb
push
ret
scas
iret
and
lcall
insb
sub
iret
popa
jbe
jns
inc
adc
or
in
lcall
xor
lods
ret
fdivp
data16
iret
fistl
mov
rcrl
pop
push
push
inc
or
lock
xlat
jp
xor
rcll
stos
adc
js
js
dec
fsubrl
clc
out
inc
iret
call
push
push
iret
mov
mov
inc
out
push
or
lods
add
cmp
sbb
jns
roll
cmp
dec
jecxz
orl
push
inc
addl
cmp
push
push
push
mov
inc
or
notb
and
and
and
pop
xor
js
iret
jge
fbstp
cltd
fs
fwait
mov
loopne
jae
test
popa
cmp
movsl
ljmp
mov
fidivrs
mov
fstps
clc
cmp
mov
pop
mov
data16
orb
jbe
test
sahf
decb
leave
dec
dec
lret
idivl
push
xor
idiv
dec
and
pop
jle
lds
push
xchg
ds
dec
stc
mov
imul
fcmovbe
outsb
les
xchg
jno
lret
xlat
xlat
push
adc
rorl
jno
xlat
push
pop
xchg
mov
mov
hlt
mov
dec
cli
mov
cmpsb
jae
xor
jns
ret
inc
fsubp
sub
lock
fsubrl
and
das
and
mov
xchg
cmpsb
lock
fildll
icebp
jecxz
dec
or
jge
dec
and
movsl
out
push
jns
sar
fcompl
sbb
lahf
cmpsl
cmpsb
fnsave
xchg
insb
mov
popa
add
nop
cmp
sbb
les
test
push
lret
cltd
pushf
adc
fwait
lahf
or
sbb
xchg
inc
jno
aam
or
ret
daa
pop
data16
cmp
jecxz
add
and
pop
jo
xchg
push
sti
xchg
aad
sub
pushf
and
add
sahf
lods
repz
ds
mov
xor
push
loope
add
or
in
in
sbb
roll
in
or
roll
cmp
push
jo
mov
jle
fnstcw
or
pop
sub
jb
xor
mov
adc
rclb
push
or
jmp
xchg
lea
adc
cwtl
pop
ds
push
jmp
cwtl
nop
cli
mov
int3
pop
push
test
jo
sub
rol
add
stos
pusha
imulb
cwtl
inc
outsl
sub
dec
push
fwait
xor
mov
cmpsl
jecxz
call
mov
push
xchg
dec
jb
int3
ret
sub
fs
xor
mov
testb
rolb
xlat
cld
jmp
lahf
sbb
mov
adc
sbb
ret
or
cld
sbbl
stc
mov
mov
fcmovbe
sbb
push
mov
cmp
jns
sarb
and
jne
sbb
or
xor
and
inc
addl
decb
sub
retw
and
or
enter
icebp
out
sti
jb
filds
pop
mov
cmp
fs
push
adc
adc
pop
out
ds
fimull
mov
jecxz
daa
call
loop
imul
push
lcall
nop
push
aaa
lods
mov
std
xor
push
pop
test
mov
int
push
jg
inc
outsb
xor
adc
mov
fs
enter
cmc
and
dec
xchg
cli
add
inc
call
jg
jge
push
sub
jno
pushf
pop
cmp
cmpsl
aad
mov
les
fdivs
cmpsl
mov
and
xchg
iret
lds
orl
sub
jns
das
leave
cmpsb
cmpsl
cltd
out
outsb
fidivrs
aas
push
sti
pushf
xchg
push
cmp
and
pop
arpl
in
pop
mov
int3
imul
movb
ret
aad
xor
push
lods
fildll
and
or
mov
fcomip
push
xchg
dec
inc
and
std
mov
or
cmpsb
ss
es
cmp
aas
mov
cmpsl
movsl
jl
jecxz
xorl
sub
nop
out
pop
adc
and
cld
adc
mov
push
sbb
outsb
fsub
push
sub
and
movsb
leave
cmp
es
aas
in
push
adc
call
popf
imul
sbb
shll
sub
fildl
mov
lea
notl
adc
sbb
sub
popa
into
add
notl
popf
hlt
push
xchg
in
cmc
int
sbb
push
sub
pop
jl
scas
out
xchg
mov
mov
hlt
jecxz,pn
inc
xor
cltd
fistl
pop
iret
fwait
fwait
mov
and
ja
fmul
xchg
xchg
inc
pop
jmp
xchg
in
mov
push
jns
cmpsb
fistl
mov
dec
rcrb
adc
out
sahf
prefetch
or
outsl
fstl
mov
fidivrs
shl
cmpl
push
mov
outsb
mov
or
je
stos
in
lahf
enter
aad
xchg
adc
or
mov
test
hlt
std
add
ds
mov
sbb
pmaddwd
pop
cs
repnz
stos
xchg
pop
lahf
add
cmp
mov
push
enter
jae
sub
mov
mov
popf
and
in
lds
adc
mov
push
call
dec
or
sbb
ljmp
jb
ret
call
inc
pop
out
dec
pop
mov
cmp
push
hlt
dec
mov
jmp
fmull
sub
adc
mov
popf
dec
push
jp
push
dec
call
fadds
int
mov
mov
outsb
stos
cmp
sub
jnp
add
rclb
push
fs
or
movsb
pop
add
sti
xor
pop
pop
popa
out
sub
jns
mov
mov
and
jns
sti
mov
stos
adc
ss
icebp
addb
pop
push
jbe
push
xchg
cmc
scas
cmp
js
xchg
test
jp
push
icebp
aas
jnp
cmpsb
jle
add
imul
and
and
fs
push
ljmp
or
shr
lods
mov
push
stc
leave
pushf
push
mov
mov
xchg
leave
popf
sahf
sbb
sub
test
movsb
mov
jmp
xchg
xor
gs
xchg
cmp
xchg
filds
sub
sti
and
or
imul
jnp
add
es
enter
mov
out
xor
jbe
dec
sub
or
mov
shll
adc
imul
cmpsl
jge
or
inc
push
int
daa
nop
mov
pushf
jge
pop
test
insl
xlat
inc
mov
lret
in
pushl
sub
lea
and
sbb
ljmp
out
into
mov
and
pop
lods
mov
pop
call
mov
and
mov
les
adc
sub
fiadds
arpl
ficompl
fists
xchg
movsb
cmp
mov
or
fstps
mov
loopne
mov
dec
push
sub
jae
mov
es
pop
cmp
idivb
cmp
mov
dec
fiadds
inc
inc
int3
mov
sti
jl
xchg
out
mov
mov
sub
jne
and
push
cmp
cs
lea
sub
mov
stos
dec
outsl
pop
pop
xchg
mov
stos
mov
sub
or
ja
fcomp
xchg
lock
sti
in
lea
sbb
bnd
or
mov
adc
push
mov
adc
cmpb
insb
ja
in
testb
insl
xchg
jmp
fst
mov
dec
push
shlb
addr16
imul
out
ljmp
inc
add
int3
out
lahf
mov
mov
mov
sub
mov
fistl
je
dec
mov
or
mov
jmp
cmpsb
lods
adcb
xchg
and
data16
mov
cmpsl
fnsave
movsb
lods
xchg
and
stos
inc
push
rcll
pop
add
lods
push
xchg
inc
das
xorl
iret
dec
or
add
pop
jmp
jge
test
enter
insl
sti
in
scas
int3
push
add
popf
xchg
inc
data16
enter
pusha
and
cmp
mov
int
pop
dec
lods
xchg
test
mov
xor
incb
leave
adc
mov
rolb
sbb
dec
leave
loop
jecxz
fisubrl
mov
lcall
lea
and
mov
dec
bound
arpl
sub
or
pop
icebp
sbb
rcl
inc
ljmp
pop
lret
fcomps
xor
jp
xchg
mov
icebp
call
mov
inc
das
push
jne
xor
mov
lret
ljmp
inc
xchg
fs
int3
push
jecxz
lock
push
cmp
fwait
xor
sub
jp
jp
adc
cmp
cs
test
into
pusha
fcoms
popw
inc
lret
shl
sub
data16
adc
pop
add
aas
fisubl
nop
jno
sub
lret
jmp
mov
inc
cwtl
dec
adc
gs
es
push
jae
int3
cmpsl
or
mov
add
mov
xchg
push
repz
in
inc
pop
xor
fsubrs
or
dec
mov
dec
adc
jle
xor
xor
in
pop
sub
cmp
mov
adc
loope
push
sub
pop
and
imul
mov
or
sahf
stc
ret
repz
mov
fistps
ljmp
test
fidivrl
test
ret
push
push
ljmp
jle
addr16
mov
movsl
sub
ret
lea
adc
lock
into
mov
adc
sahf
outsb
gs
iret
pushf
scas
rorl
lods
int
adc
je
xor
incl
scas
cmp
push
mov
out
push
jmp
xchg
std
mov
fdivs
lds
mov
pop
loope
dec
out
mov
icebp
lock
test
iret
jmp
or
arpl
adc
mov
fcmovne
mov
jne
movsb
fcoms
fdecstp
push
rcl
lret
xchg
jb
mov
mulb
add
xrelease
pusha
xor
pop
or
pop
jae
scas
loop
pop
out
and
cmovo
cmp
arpl
ret
adc
jecxz
int
and
dec
loop
mov
sub
jnp
jecxz
push
lock
test
cmpsb
sarb
jg
lods
imul
loopne
fiaddl
push
inc
enter
mov
cmp
das
loop
xchg
sub
jns
dec
pop
jae
xchg
jae
xchg
pusha
fisubrs
mov
xchg
xor
or
pop
cmp
pop
cmp
xchg
loop
sub
loope
pop
xchg
pop
sahf
popf
mov
pop
aaa
jo
sub
adcl
testl
cmp
mov
adcb
movb
sbb
mov
adc
lods
std
cmp
rcrl
rorl
in
fildl
sub
push
fistpl
cmp
cli
ficoms
mov
enter
loope
in
xchg
cmpsl
es
sub
jne
mov
or
movsl
mov
cmp
mov
xchg
jno
rcrb
sub
pushf
adcb
mov
int
rolb
popf
pop
jae
mov
mov
sbb
xor
mov
or
add
sbb
hlt
jo
cwtl
cmp
mov
xchg
pop
dec
test
jmp
inc
insb
add
movsb
lock
mov
jl
mov
scas
mov
jmp
lret
dec
mov
cmp
mov
jne
stos
loop
jno
dec
or
dec
aaa
mov
or
hlt
mov
jbe
pop
loop
add
mov
shlb
jo
loop
pop
sbb
add
adc
enter
push
mov
inc
or
adc
mov
pop
cmp
rclb
jno
in
cwtl
movsl
add
insb
xchg
out
dec
xchg
add
inc
sbb
test
lcall
mov
jne
xlat
dec
sbb
adc
data16
jo
inc
outsb
fs
sarl
adc
mov
xchg
into
add
push
mov
pop
mov
mov
fxch
mov
pop
or
sbb
mov
push
lea
decl
mov
pop
cmp
pop
insb
popa
data16
mov
pop
sbbl
or
stos
sar
xor
adc
loop
and
notb
jp
adc
decb
cmp
ljmp
lahf
aas
push
jo
adc
fiadds
sbb
std
pop
movsb
addb
add
dec
jnp
inc
xor
add
icebp
int3
dec
mov
xorb
xor
movsb
addb
xchg
lods
imul
mov
inc
jne
mov
mov
cmp
cmp
sbb
ss
mov
xchg
mov
pop
push
inc
ds
dec
stos
call
icebp
add
jne
xchg
and
mov
push
dec
xor
xor
out
sbb
test
fcomip
jns
cmp
sbb
xchg
push
pop
dec
mov
std
mov
fs
xchg
daa
xor
sbb
lret
and
mov
push
mov
push
jp
gs
push
popa
pop
jae
cmp
cld
enter
stos
lea
jl
mov
fwait
ret
insb
xchg
scas
pop
or
xor
mov
jo
dec
pusha
xchg
fwait
stos
loope,pt
or
add
out
sti
lret
mov
cld
and
pop
fidivrl
ret
xor
inc
or
dec
cmp
xor
jae
pop
fwait
or
ds
push
push
mov
loope
dec
jns
and
sbb
mov
mov
push
pop
cmp
inc
adc
sub
mov
aam
nop
and
out
sbb
xorb
aas
sub
jo
push
jmp
ljmp
mov
movsl
push
ljmp
pushf
xor
dec
cmc
fistpl
fimull
cmpsb
testl
sbbl
jl
cs
addl
cmp
mov
add
cli
add
mov
leave
incb
js
pop
sbb
pop
stc
sub
scas
jne
pop
das
aam
and
xor
sahf
int
lea
adcl
xchg
aas
mov
addr16
stos
jns
dec
sub
cmpsl
mov
lods
addr16
cs
pop
xor
xor
fnstsw
cmp
hlt
outsl
push
mov
mov
cwtl
stos
add
bound
je
insb
mov
adc
scas
call
movsb
pop
cmpsb
nop
add
sbb
push
dec
dec
inc
lds
ljmp
insb
jnp
loopne
sti
inc
lahf
jnp
jne
add
sbb
pop
and
mov
incl
jp
imul
das
movsl
into
or
jp
inc
ja
push
test
imul
cmp
decb
lret
push
ror
pusha
cmp
push
cmc
sahf
enter
push
jge
dec
cwtl
cmp
xchg
fstps
dec
sub
incb
xchg
f2xm1
sub
xchg
cmpsl
shll
enter
movsl
push
mov
push
jle
mov
sub
psubq
int
stos
cmc
push
lret
mov
mov
int
movsl
push
imul
aaa
adc
movsl
sub
mov
cld
out
inc
push
mov
ljmp
ljmp
dec
cmpsl
pop
mov
roll
mov
dec
inc
lods
push
push
xchg
sbb
mov
fimull
jnp
cltd
and
lcall
pop
inc
adc
out
inc
cltd
rcrl
jne
testl
data16
mov
jo
dec
aad
add
xchg
and
dec
push
mov
data16
add
stc
into
and
or
mov
add
cmpsb
push
adc
cmc
popa
shlb
sarb
in
add
push
addl
xchg
dec
pop
out
mov
gs
addr16
pop
jbe
mov
aaa
ds
nop
adc
insl
pop
aas
jecxz
add
sbb
pop
and
stc
daa
movsl
pop
pop
sub
mov
lcall
mov
jge
ss
mov
fldenv
mov
pop
cmp
mov
xchg
daa
jns
push
cmp
cmp
pop
filds
dec
adc
sbb
add
xor
jne
addr16
push
fwait
aam
cmp
jnp
push
sahf
adc
das
cmp
sarb
test
loop
fxch
sbb
aas
pop
sbb
lods
jmp
ljmp
push
sbb
lcall
nop
or
outsb
clc
lahf
std
ja
add
fcompl
jno
pusha
and
and
int3
xchg
pushw
daa
lods
mov
pop
clc
lods
inc
and
mov
cltd
add
xchg
mov
jbe
fs
in
add
repz
cmp
pushf
mov
add
mov
insb
inc
cli
xor
nopl
cmp
xchg
je
and
xor
push
and
pop
and
xor
dec
cli
xor
lock
and
outsl
movsb
cld
gs
lcall
adc
mov
mov
aas
sbb
pop
addr16
daa
xor
std
insl
cld
insl
arpl
xchg
cmpsl
inc
or
inc
lret
adc
sti
mov
dec
pushf
inc
out
jge
fucompp
js
das
cli
mov
lods
xlat
mov
repnz
lods
ljmp
mov
xor
mov
cmp
mov
push
pop
xchg
cmp
cmpl
sbb
imul
mov
shrl
mov
in
mull
adc
jae
das
mov
addr16
movsb
out
pop
and
jno
adc
cmp
push
sbb
push
lea
add
cmpsl
push
addr16
inc
pop
shrl
mov
mov
push
into
lret
or
nop
add
inc
mov
cmp
ss
frstor
out
mov
or
mov
roll
mov
lahf
not
add
push
repz
push
pop
adc
jle
dec
out
xor
insb
insl
dec
push
mov
or
sbb
js
stos
xor
insl
shl
mov
test
lret
jg
daa
jl
loope
adc
lcall
rcl
fsubl
or
dec
xor
jne
stos
cmpl
scas
xchg
jg
push
xchg
test
int3
fcmovne
mov
xor
push
rclb
dec
push
inc
lock
xorl
sub
mov
subl
inc
mov
adc
pop
mov
into
inc
hlt
addl
xchg
repz
mov
sbb
xchg
mov
mov
hlt
ja
push
fsubl
shrl
jle
icebp
inc
xchg
sub
push
jbe
cmp
and
lds
cli
stc
xor
leave
mov
mov
adc
lock
imul
and
inc
dec
loope
mov
or
jae
mov
mov
insb
dec
push
filds
xbegin
jl
fildl
mov
out
cmp
pop
ljmp
sbb
fldl
fildll
aam
in
and
in
or
ss
push
add
bound
mov
in
adc
add
mov
lea
add
and
dec
jp
pop
mov
inc
add
mov
xor
pop
xchg
outsl
mov
jno
out
imul
and
mov
scas
mov
stc
imul
imul
insb
cmp
jnp
pop
insl
mov
dec
mov
sbb
mov
test
dec
popa
and
push
cmp
es
mov
aam
ficompl
rorl
push
mov
jbe
or
cld
jg
add
ds
and
xchg
jb
sbb
cmp
pop
mov
adc
xlat
dec
cltd
sbb
shrb
inc
enter
dec
xchg
xor
jmp
lret
imul
sub
cmp
int
call
and
push
cwtl
add
pop
test
add
xor
and
pushf
pusha
stos
xchg
dec
addr16
scas
pop
fcmove
cmp
xor
dec
inc
in
nop
loope
ret
negl
or
xchg
lods
inc
mov
cld
pusha
aad
push
fldt
xchg
mov
mov
lods
loop
int3
inc
add
lods
or
pop
jp
sub
pop
push
mov
fcomip
push
adc
aas
stc
leave
inc
ficomps
add
jae
jno
jge
xchg
int3
loope
popf
push
mov
imul
push
in
jge
loop
sbb
out
in
pop
mov
mov
mov
add
and
movsb
jae
sarl
les
sbb
lock
jmp
push
adc
scas
test
test
out
pop
mull
sub
xchg
mov
cmp
pop
je
mov
xchg
das
in
mov
pusha
aaa
ret
mov
jl
stos
lock
sub
pop
sbb
cmp
fidivrs
cld
jle
mull
ja
fwait
aam
inc
xor
nop
push
or
movsl
in
rcl
loop
lock
incl
xchg
and
cmpsl
daa
and
ds
push
inc
call
dec
adc
push
jecxz
cmpsl
push
adc
shlb
add
cmp
cwtl
push
sbb
jge
outsl
mov
pop
add
call
int3
xor
in
pushf
negb
shlb
mov
filds
ja
dec
inc
xchg
or
ja
pushf
cmp
mov
mov
data16
ss
sub
int3
mov
inc
repz
push
lock
push
xor
or
addr16
ret
mov
cmpsl
clc
push
in
lea
jmp
adc
lock
pop
xchg
shlb
aas
cs
mov
cwtl
adc
mov
mov
pop
cltd
pop
lds
push
mov
cmp
in
adc
stos
xor
or
inc
cli
arpl
mov
cmp
daa
andl
sbb
call
jge
shll
sar
popl
icebp
test
aad
sbb
enter
jecxz
cwtl
dec
push
cmpl
dec
mov
jecxz
push
cwtl
lret
and
into
jbe
inc
jp
xor
dec
pushf
xor
sti
movsb
iret
test
mov
je
mov
add
cmp
push
inc
xchg
lds
std
mov
push
mov
pop
mov
loope
or
jae
mul
push
push
arpl
jns
out
push
cmp
aas
sub
shll
bnd
popa
adc
orl
or
movsl
movsb
data16
or
fstpt
mov
ret
je
sub
call
sahf
lock
mov
jmp
fmull
sbb
icebp
aas
dec
jle
mov
pop
pop
add
or
push
popa
cmp
sub
push
adc
dec
push
lea
imul
mov
std
addr16
icebp
lock
xchg
fdivl
mov
mov
mov
fsub
xlat
andb
repz
ljmp
mov
mov
jb
add
mov
pop
test
mov
dec
adc
imul
mov
push
sbb
dec
pop
sbbl
lcall
mov
add
pop
into
fs
push
jle
sub
xchg
jmp
jmp
add
bound
scas
pusha
cmp
scas
sub
cwtl
inc
xchg
sti
int3
add
fsubl
mov
cmpl
lds
in
mov
jp
xorb
dec
inc
xchg
scas
ret
adc
loopne
ret
aas
imul
sar
push
mov
repz
ficomps
mov
xchg
popa
push
je
gs
mov
jno
inc
or
mov
mov
pop
jb
dec
pop
push
sub
cs
dec
into
ds
mov
jmp
ja
mov
lods
les
mov
jo
testb
dec
mov
jp
inc
or
fcomps
loop
rol
and
xchg
xchg
jb
cmpsb
push
pop
cmc
mov
push
in
inc
montmul
cmpsb
add
fnstsw
lea
and
pop
xchg
pushl
ss
lret
mov
sbb
jb
fisubrl
mov
cwtl
int
lea
shrl
int
fdivrs
push
pop
and
jg
ficoml
pop
pop
mov
pushf
enter
int3
xor
cmp
js
push
dec
xchg
pushf
push
cmp
clc
sub
cli
or
ret
hlt
jge
popf
jb
ret
mov
sti
and
sbb
xchg
pop
jnp
loope
jg
fidivrl
sbb
aam
pop
inc
mov
or
xchg
sbbb
or
dec
pop
sbb
mov
loop
mov
cmp
xchg
lods
shrb
and
or
mov
stos
ret
and
and
or
dec
test
inc
dec
sbb
popa
int
icebp
sbbb
jae
xor
or
push
lcall
adc
push
cmp
scas
cld
jnp
lock
add
lret
lods
lds
mov
add
jo
imul
or
sub
sbb
int3
iret
mov
pop
das
test
les
fdivrs
xor
mov
fs
xchg
jp
test
fisubrs
push
rorb
insl
lods
fbld
mov
inc
rcl
lret
mov
mov
sbb
xchg
mov
nop
pop
dec
inc
add
xor
ret
push
cmpl
imul
iret
xlat
into
pop
pop
sahf
pop
test
inc
pop
repnz
fnstsw
dec
pop
xor
xchg
and
push
fucomp
sub
int
ret
pop
xor
mov
stc
imul
sub
mov
or
out
dec
lock
imul
dec
pop
cwtl
sub
add
push
test
jecxz
add
or
add
shrl
dec
mov
stos
dec
rolb
data16
mov
pop
xor
sbb
adc
cmp
pusha
push
jb
sub
fcoms
orl
ss
mov
add
inc
das
inc
cmc
adc
pop
jno
add
jae
xor
jle
cmp
rorb
stos
popa
mov
lcall
pushf
xor
into
test
or
aaa
and
arpl
dec
stc
xor
lcall
cwtl
sbb
mov
jl
and
ret
imul
inc
lahf
cli
ss
mov
mov
cmp
xchg
aam
pop
cs
fdivrp
adc
rolb
sar
fwait
dec
or
test
adc
jle
scas
popa
nop
fstl
test
pop
imul
mov
lcall
lods
jae
dec
rcr
hlt
loopne
mov
push
adc
mov
jnp
push
jbe
sub
sub
incb
jecxz
sub
prefetch
mov
cmp
pop
cld
inc
lock
xor
sub
mov
inc
bound
pop
stc
insl
mov
add
iret
outsb
out
jnp
rorb
lea
and
mov
inc
inc
lea
popa
pop
add
fbstp
fdivrl
xor
cmc
iret
inc
mov
daa
push
test
pop
cwtl
loop
fbld
js
lods
dec
mov
mov
jecxz
lods
push
pusha
jb
repnz
xchg
test
sahf
ret
pop
push
inc
in
mov
bound
sbb
xor
cmp
test
or
repz
inc
mov
pushf
cltd
mov
mov
jle
adc
xchg
ret
dec
or
fnstcw
stos
lods
add
mov
ljmp
std
es
sbb
xchg
bound
mov
dec
pop
jmp
arpl
mov
jae
leave
and
mull
xor
cli
mov
jo
sub
mov
pop
mov
pusha
movsb
inc
xor
pop
repz
out
lods
gs
enter
test
mov
sbb
or
aaa
in
xchg
add
aam
mov
mov
cmp
icebp
dec
xchg
in
mov
and
je
cmc
adc
aad
adc
getsec
mov
insl
fbstp
in
lock
mov
imul
mov
jbe
daa
lock
rorb
sbb
test
mov
or
fs
mov
call
movsl
cmp
das
and
arpl
xchg
in
mov
sub
icebp
xchg
mov
movsb
inc
ds
lret
fs
outsl
xor
cld
fscale
or
sbb
outsb
or
call
insl
popf
cmp
mov
mov
jns
popa
xlat
xchg
rorb
xor
mov
scas
and
lret
lds
imul
push
and
xchg
mov
sahf
fdivs
sbb
int
mov
movsl
pop
xor
addr16
push
cmp
int3
jnp
ja
mov
jne
add
xchg
sbb
xor
inc
fistps
stos
out
xor
test
pop
or
ja
testb
dec
pop
or
fsqrt
js
mov
push
repnz
pop
nop
mov
dec
lcall
pop
repnz
shlb
mov
cmp
in
or
lahf
sbb
clc
loop
cli
dec
inc
pusha
add
push
les
mov
lock
jg
nop
mov
rcll
or
inc
testb
icebp
push
test
stos
dec
dec
leave
xchg
dec
mov
sbb
icebp
jmp
xchg
lock
xor
popa
rorb
stos
fcmovu
mov
hlt
shll
mov
pop
push
into
test
or
les
jmp
push
ljmp
mov
lsl
jne
lcall
xor
daa
and
enter
fstps
push
ret
imul
scas
cld
sbb
mov
xchg
out
xor
push
xchg
testl
mov
xor
lods
mov
test
aas
inc
dec
push
jnp
in
jno
mov
xor
jno
insb
idivb
mov
dec
push
mov
popa
outsb
movsb
das
sub
ja
xchg
mov
jle
cli
or
dec
outsb
addr16
cs
inc
cltd
mov
dec
dec
ljmp
lret
loopne
cwtl
jg
jo
add
fs
pop
negl
fistl
inc
dec
pop
inc
and
push
jecxz
or
xlat
xor
mov
mov
hlt
pop
fiaddl
stos
pop
ret
mov
lcall
pop
movsb
shl
or
cli
cmpsb
xchg
std
out
ret
push
out
loop
pop
addr16
push
daa
dec
add
sbb
lcall
jo
pop
shrb
pop
scas
jno
shl
sub
jb
imul
cmpsl
jp
jp
lahf
push
stos
inc
repnz
lods
xor
fs
adc
aad
mov
push
stc
or
pop
decl
out
enter
stos
and
adc
push
and
iret
aad
cmp
jnp
das
or
adcl
icebp
push
pop
mov
cld
push
pop
pop
fstl
sbb
lock
aaa
and
out
fisubrl
cwtl
lods
int3
add
icebp
lds
mov
mov
mov
mov
notb
push
sahf
repz
dec
push
hlt
in
jns
fstl
shl
push
pop
dec
add
push
mov
lahf
push
mov
xchg
xor
and
jge
push
pop
pop
xchg
push
pop
xor
es
icebp
sub
adc
push
stos
push
clc
mov
xor
mov
iret
jg
sbb
cmpsl
xor
push
sub
dec
jg
popf
add
pushf
pop
cmp
cltd
inc
ss
xchg
cmp
sarb
loop
fisubl
cwtl
pop
jp
gs
sbb
std
push
test
add
lds
mov
out
clc
or
popf
lret
xchg
add
and
mov
inc
leave
mov
in
ret
ret
xchg
xor
push
fisttpl
dec
int3
pusha
in
shll
jnp
jbe
adc
in
mov
xchg
js
sub
add
sbb
pop
stos
scas
add
sub
negb
and
or
rcr
out
mov
lods
mov
iret
fdecstp
out
pop
sub
xor
xchg
mov
movsl
loop
shll
cmpsl
pop
sub
out
cs
push
push
xlat
cmp
push
fnstsw
fwait
or
adc
js
mov
jo
xor
push
jb
mov
dec
or
cmp
xchg
sub
pop
jns
push
enter
stos
sub
and
mov
aad
call
inc
cmp
clc
leave
in
test
ffreep
movsl
pop
clc
inc
push
add
or
scas
xchg
xor
add
dec
push
mov
imul
sub
xchg
jl
add
mov
push
loop
bound
sub
test
xor
pop
add
sbb
pop
imul
mov
pop
inc
add
cmc
fidivrl
mov
push
arpl
mov
out
outsl
jg
mov
es
je
sub
addb
sub
xor
mov
out
sub
scas
sub
or
and
stos
aaa
sbb
and
fbld
jne
cmp
ficomps
pushf
sar
or
addr16
in
cld
in
inc
orb
mov
dec
bound
popf
or
fisttpl
xchg
cmpsb
push
mov
in
push
js
push
dec
and
push
popa
xchg
in
jge,pn
sbb
jns
repnz
int
pop
sub
in
in
icebp
stos
mov
out
incl
insl
dec
add
xchg
lcall
sub
lret
inc
mov
lahf
fs
adc
or
addr16
bound
dec
aam
loope
sbb
fs
popf
push
dec
inc
sub
jp
sbb
ljmp
shrl
jl
jmp
adc
iret
out
xorl
mov
mov
or
popf
test
mov
inc
out
sbb
cmp
jbe
iret
jno
ds
or
sbb
enter
add
cs
mov
sub
mov
testb
jle
and
xchg
fistps
push
xorl
dec
xchg
jbe
negb
lds
pop
cmc
dec
mov
aas
lods
cmp
orl
push
test
mov
sub
or
pop
call
enter
add
xor
lret
mov
mov
mov
sahf
inc
outsb
lds
das
imul
leave
adc
mov
leave
fs
pop
mov
test
or
xor
out
fisubrs
mov
mov
xor
xchg
or
pop
mov
pop
add
xchg
or
jo
jns
in
inc
fsubrp
add
lods
push
jo
hlt
mov
fnstcw
push
add
jp
sub
movb
mov
jg
clc
pushf
out
mov
pop
push
clc
cltd
lea
lods
fadd
lahf
imul
hlt
loop
xchg
lods
mov
mov
pop
push
hlt
lret
std
adc
or
adc
gs
mov
bnd
adc
dec
insl
repnz
jmp
dec
or
push
sub
jg
xor
mov
daa
jg
xchg
dec
cld
ret
xor
sub
dec
insl
dec
sar
inc
movsb
insl
mov
push
xchg
xor
mov
ss
lods
in
jns
push
jmp
cltd
mov
enter
sahf
and
pop
sahf
cmc
pop
shlb
cltd
movsb
mov
addr16
mov
les
or
cmp
sbb
int
sbb
cmpb
aam
loop
fdivrs
push
aam
inc
mov
in
js
ljmp
push
add
dec
int3
nop
cmp
into
fs
sub
dec
cmp
ljmp
sub
ret
mov
sbbl
pop
cld
xor
push
push
pusha
jecxz
nop
dec
sarb
dec
jns
andb
xor
lds
repnz
bound
dec
jnp
xorb
push
inc
rol
pop
popl
sub
or
and
mov
inc
sub
sbb
sbb
out
sub
adc
push
adc
js
sti
sbb
cltd
dec
push
adc
xchg
enter
and
cs
mov
out
cmp
or
inc
sti
xor
ret
xchg
cmc
cs
adc
out
or
jae
scas
adc
dec
and
dec
sub
and
push
pop
inc
out
out
mov
in
ror
adc
mov
mov
leave
push
stos
mov
es
cmc
sbb
stos
cmp
addb
bound
sub
cli
sti
insb
jae
xchg
pop
add
shlb
leave
push
std
in
in
mov
cmp
loopne
xchg
lock
icebp
mov
push
or
cli
inc
flds
call
add
sbb
adc
jmp
pop
sub
out
jns
add
subb
fistl
nop
jne
popf
fsubrl
and
xchg
or
mov
add
pop
mov
mov
aad
jmp
mov
loopne
pop
dec
mov
inc
int
out
js
push
adc
or
movsl
pop
nop
lcall
fst
sbb
ss
imul
enter
mov
sbb
test
sub
aam
arpl
addl
loope
les
push
dec
pop
mov
sub
dec
push
fwait
das
shrb
iret
dec
pop
push
fdivrl
cmp
nop
icebp
dec
outsb
leave
mov
lret
clc
xorb
repnz
push
aam
lahf
mov
sub
mov
sub
mov
sub
es
ja
cmp
aas
mov
mov
sarl
xchg
jo
sub
mov
push
cmp
inc
aaa
clc
call
lea
xchg
ror
jg
imul
clc
andb
push
push
sahf
test
ret
jo
mov
mov
jmp
sub
mov
and
jmp
push
ja
ljmp
mov
dec
and
fwait
daa
movsb
ret
mov
mov
std
inc
lea
call
addr16
jmp
sahf
sub
jge
dec
imul
mov
mov
nop
sbb
or
inc
xor
fs
and
xchg
sbb
jle
pop
cmp
ficoms
sbbb
lods
ret
lock
icebp
sub
lds
repz
ret
mov
pop
adcb
shrl
sahf
adc
es
daa
aas
mov
or
imul
mov
adc
pop
cmp
push
shlb
cld
lcall
mov
mov
aad
cwtl
pop
fistpll
push
pusha
fst
cltd
mov
into
and
aas
add
pop
mov
sub
mov
outsb
das
in
push
cmp
pop
dec
cmp
xor
loopne
sub
pop
in
fdiv
movsb
rorb
es
insb
stos
and
inc
jo
xchg
mov
jb
cmp
jns
lcall
sub
loopne
es
or
push
xchg
stc
push
push
push
dec
mov
daa
shr
shll
cmp
loopne
cmpsb
loope
xor
lods
pushf
outsl
jecxz
adc
jno
mov
loope
inc
scas
cwtd
push
add
gs
xchg
imul
or
pop
pop
sahf
xlat
cwtl
std
cli
and
push
shll
xchg
mov
not
cmp
dec
daa
push
fistpll
and
cmp
cmpsl
stos
mov
mov
inc
or
daa
sbb
int
push
pop
lret
cld
frstor
shrl
icebp
xor
pop
mov
inc
out
sti
sub
push
lahf
pop
push
es
repnz
sub
les
fbld
jg
mov
mov
sbb
punpckhwd
fdivrs
jae
mov
out
add
lret
test
cmp
sti
addr16
sub
in
cwtl
test
mov
into
rcr
xchg
sub
ffreep
pusha
sahf
cmpsb
shr
fwait
dec
call
shrl
add
push
lcall
push
push
mov
sahf
mov
cld
movb
jo
jg
inc
loop
lahf
and
mov
cmp
fsubrs
ljmp
xor
iret
and
shrb
test
js
push
ret
xchg
cs
or
inc
sub
int
leave
fwait
mov
sahf
arpl
push
test
subl
cld
and
sbb
or
rolb
sub
mov
fnstsw
cmovge
test
add
mov
inc
mov
mov
jo
cmp
mov
mov
push
mov
sub
aam
and
or
dec
les
popf
cwtl
and
ret
out
xchg
sub
ljmp
push
je
les
movsl
lds
jae
mov
cmpsl
add
in
fucomp
mov
ds
je
jo
inc
push
aas
das
mov
and
or
stos
adc
push
lea
imulb
inc
sub
jns
test
aaa
mov
mov
xchg
div
std
cmp
jb
pop
adc
movsb
sbb
sbb
push
xchg
stos
jecxz
dec
pop
lea
es
pushf
push
fisttpl
cmpsb
push
ja
jne
xor
cmp
orps
or
xlat
les
scas
push
jl
adc
adc
sub
stos
rcl
jg
fcomip
push
and
pop
daa
fstpl
adc
jle
lret
push
dec
mov
jg
jne
xor
fisubs
inc
lods
cld
mov
lret
pop
inc
jo
push
add
dec
mov
mov
sarb
out
subl
push
ljmp
ljmp
xor
cmp
and
lret
fs
cli
or
inc
lods
fists
xor
int3
cld
push
lret
mov
add
icebp
inc
sahf
cli
jbe
es
leave
cmp
mov
cwtl
insl
iret
test
mov
nop
dec
scas
std
lds
test
mov
pop
mov
pop
jnp
int3
or
cs
insl
mov
jp
mov
inc
cmp
push
mov
lods
out
roll
jp
sti
cmp
pop
fidivs
xor
addr16
pop
clc
inc
ret
xchg
push
dec
lods
and
mov
aad
cwtl
pop
in
nop
and
cwtl
or
jns
cmp
insl
cmp
pop
jp
push
clc
arpl
loopne
loop
dec
dec
fdivrl
adc
lea
pop
and
pop
fmuls
mov
lods
mov
repnz
cmp
jnp
cwtl
xlat
jnp
xor
out
jo
add
fists
enter
mov
jb
incl
stos
mov
leave
fsubl
xor
pop
xor
test
scas
faddp
mov
inc
sarl
lahf
lods
cld
inc
pop
xor
int
push
and
jmp
clc
and
xchg
stc
shll
pop
push
scas
push
dec
repz
jno
mov
test
shlb
pop
dec
cmc
fs
mov
xor
push
fs
clc
xchg
xchg
pop
jb
lcall
cmpsb
js
mov
sbb
mov
popf
lret
leave
jnp
daa
lock
cmpsl
push
xor
cltd
jg
dec
add
or
ja
leave
lret
loope
cs
out
movsb
out
adc
repnz
mov
out
pop
frstpm(287
pushf
jle
xchg
mov
jecxz
pop
xlat
int
dec
mov
popa
stos
test
aam
mov
sbb
std
fmuls
into
movsl
dec
ljmp
adc
test
mov
stos
imulb
fnstsw
mov
xchg
pushf
sbb
ficomps
aad
lret
movl
lock
add
xor
dec
es
mov
pop
shll
sub
ret
out
and
cld
insb
jl
stc
pusha
mov
cmp
inc
and
js
cmp
shl
xchg
ja
scas
or
mov
mov
adc
add
shl
test
adc
mov
adc
and
mov
icebp
imul
dec
dec
jbe
mov
push
adc
daa
dec
xor
add
cmp
lods
pop
call
cltd
dec
adc
adc
jmp
fwait
testl
into
sbb
sbb
and
cmpsl
jne
or
cmp
adc
mov
std
nop
mov
aas
dec
rol
ret
fimull
test
mov
jecxz
in
cld
addb
mov
cmpsb
jmp
inc
jb
pop
add
mov
push
jnp
push
pop
into
test
pop
out
add
outsl
ds
mov
stc
cwtl
int
jb
push
mov
mov
hlt
test
out
xor
inc
aam
adc
push
insb
dec
lds
mov
or
and
fs
push
addr16
aas
in
dec
ljmp
rcrb
mov
daa
in
loop
push
mov
vcvtss2sd
cmp
fsubrl
xor
iret
add
pop
lods
aas
lods
mov
imul
dec
mov
fisubrs
loop
mov
xor
push
mov
or
inc
fstl
jge
pop
imul
je
mov
xchg
and
sbb
lods
stos
out
xor
pop
imul
mov
mov
dec
push
out
aad
out
pop
andb
insl
mov
adc
pop
dec
add
jg
cmpb
mov
cmp
test
imul
xor
fnstcw
movsl
dec
or
aam
jno
jmp
xchg
xor
test
lcall
clc
lds
or
sub
pop
add
scas
jo
add
xchg
aam
xor
pop
je
daa
mov
push
ljmp
mov
mov
cmpsb
sub
cmp
pop
mov
xchg
mov
mov
cmp
addr16
mov
sbb
push
in
ret
jge
loop
test
mov
xor
cmp
push
dec
imul
dec
outsb
sti
and
scas
add
sub
add
mov
movsb
mov
inc
arpl
mov
dec
xor
outsl
xchg
popf
mov
idiv
sbb
fs
insl
cmp
std
pop
fdivs
add
sbb
cmp
je
inc
mov
jns
insl
test
cli
enter
es
cs
dec
inc
add
daa
or
pop
mov
in
sub
aaa
int
lahf
popa
add
mov
jbe
jb
test
push
ret
xchg
addr16
cmp
cmpsb
xor
ret
clc
popa
sub
out
loope
push
jno
push
scas
repz
xchg
insb
test
adc
push
cs
jmp
and
or
or
leave
test
imul
adc
leave
xor
test
loope
cmp
gs
xchg
jns
mov
push
sbb
push
dec
hlt
sub
inc
mov
inc
inc
mov
lahf
fcoml
pusha
xor
bound
sub
mov
push
fnstsw
fdivrs
pop
dec
cmpsl
xor
bnd
out
sbb
cmp
popf
adc
cmp
mov
scas
repz
stc
pop
push
stc
and
es
nop
xchg
fwait
cld
stos
sbb
shlw
push
lret
adc
mov
push
loop
jb
pop
dec
mov
mov
sbb
lock
movb
jbe
xor
stos
ljmpw
mov
stos
loopne
rcr
sub
popa
jl
adc
out
push
leave
xchg
dec
fistps
mov
inc
out
rclb
out
movsl
ret
rolb
clc
mov
into
cmp
sub
add
jnp
cli
testl
mov
mov
sbb
or
ds
push
adc
sbbl
data16
pop
jo
iret
and
dec
inc
aas
movsb
and
lahf
jge
lret
sub
push
nop
add
dec
in
xorb
or
mov
iret
pop
insb
movl
sbb
mov
push
inc
xchg
popl
ret
dec
cmp
aas
jge
xchg
in
jl
mov
xor
xor
pop
lock
les
pavgb
repnz
dec
add
xchg
in
and
jae
in
inc
push
mov
xor
ljmp
ds
scas
outsl
or
mov
sbb
mov
jl
mov
ljmp
xlat
test
push
xchg
sbb
adc
mov
jo
cmp
hlt
jg
into
and
mov
stos
dec
into
rcrb
cltd
jle
fcmovnb
push
ds
and
cs
fiadds
mov
cwtl
adc
cmp
loop
jbe
push
out
insb
jne
hlt
imul
and
sahf
mov
xchg
xor
stos
cmp
test
jns
aaa
cmp
leave
arpl
loopne
mov
sahf
mov
das
jbe
loope
shrb
dec
ja
inc
xchg
jo
dec
ror
or
pop
xor
fmuls
int3
dec
sbb
add
adc
cmp
push
cmp
ja
push
das
dec
inc
sarl
xchg
mov
divb
mov
cld
mov
pushf
insl
mov
jb
jp
pop
jle
sub
lock
xchg
pop
insl
inc
in
mov
xor
sub
jmp
xor
les
aas
xchg
mov
mov
out
shl
in
js
adc
or
or
movb
lahf
push
roll
pop
inc
xor
sub
inc
repnz
ja
fcompl
xchg
push
aad
addr16
mov
popf
cld
sub
rolb
mov
mov
rcll
inc
dec
add
xchg
cmp
cmp
dec
movsl
xor
dec
xorb
sbbb
data16
jnp
xor
jo
xchg
fptan
jg
cld
outsb
repz
adc
adc
lcall
inc
fs
mov
xor
sub
idivl
adc
and
sub
rcll
jg
aad
js
sbb
data16
fmull
mov
in
adc
lock
call
insb
adc
xchg
mov
dec
or
sub
cmpsb
mov
loop
mov
clc
ds
mov
mov
pop
push
mov
cmp
add
jmp
add
sbb
outsb
sub
xor
movsb
mov
popa
aad
mov
push
test
lods
ss
xchg
sub
add
sahf
jg
cli
sub
cs
fimuls
js
int3
test
mov
test
mov
data16
stc
fisubl
lods
pop
xor
add
testl
sarb
jnp
popa
xor
imul
dec
xor
outsl
jnp
lds
in
in
mov
lds
dec
push
mov
jae
ret
mov
aaa
test
rcrl
out
ret
jmp
mov
mov
mov
repz
in
mov
add
mov
mov
xchg
aaa
add
das
insb
lcall
mov
clc
inc
mov
cld
push
pop
icebp
sti
mov
xchg
sbb
cli
jnp
push
sub
jbe
cmp
dec
push
lock
xchg
cmp
jno
push
and
cmp
sahf
insb
rol
sub
mov
xchg
std
add
dec
imul
or
cs
pop
inc
sbb
xchg
fwait
pusha
std
cmp
pop
pop
adc
add
enter
sub
push
or
mov
dec
jecxz
push
fisttps
popf
xchg
into
fldt
sbb
lods
clc
push
ljmp
shr
aad
and
add
xor
push
jno
out
cmovae
mov
and
sub
xchg
jnp
add
rclb
adc
stos
test
stc
call
clc
mov
mov
mov
fwait
adc
jecxz
std
sbb
daa
adc
test
ret
and
cmpsb
movq
mov
pop
inc
push
nop
adc
shrl
xor
or
mov
inc
in
inc
sub
or
jp
dec
ficoms
fistl
mov
stos
ret
mov
pop
inc
popa
mov
mov
adc
pop
fcmove
pop
fdivp
nop
ret
out
lds
jne
inc
mov
dec
cmpsb
add
inc
or
or
sbb
jns
sbb
mov
pop
cs
rcl
xor
and
test
scas
and
cld
mov
mov
inc
xlat
addl
addb
fimuls
mov
adc
push
sti
scas
jae
hlt
ss
clc
sti
mov
mov
dec
or
lcall
lcall
jae
jmp
jl
push
into
or
jo
orl
cmp
rol
aad
sbb
lods
into
mov
fsubl
lret
es
cwtl
pushf
fbld
pop
sub
adcb
and
xchg
push
inc
sbb
jmp
mov
insl
cmp
adc
or
mov
and
mov
mov
clc
sub
cmc
andb
outsl
xor
jae
sbb
test
mov
lret
xlat
dec
je
daa
loop
mov
or
leave
lods
cs
scas
fidivrs
loopne
and
stos
sbb
sbbb
aam
mov
mov
or
or
ljmp
data16
inc
pop
inc
xchg
push
je
dec
xor
arpl
nop
idivb
mov
mov
and
mov
mov
jg
push
mov
imul
cmc
jmp
pop
testl
inc
test
push
enter
add
aam
cmp
cld
mov
lods
sub
sub
mov
push
and
xlat
bound
stos
fwait
test
add
jmp
movsb
ja
aas
mov
std
leave
xor
fisttpl
cmp
insl
jmp
cmc
sbb
jns
dec
sub
jo
mulb
xchg
ss
std
sbb
push
push
out
xchg
xchg
add
mov
sbb
mov
aaa
popf
mov
arpl
cld
xor
pop
xchg
enter
je
out
push
lret
or
add
clc
fs
lods
inc
movsb
mov
cmp
mov
or
sar
aas
ds
aas
nop
negb
mov
push
js
sub
repnz
lret
mov
jbe
adc
inc
or
in
mov
adc
xor
cmp
lock
inc
clc
aam
in
ljmp
test
add
aam
inc
inc
dec
stos
cmp
dec
les
mov
mov
mov
jno
insb
inc
es
or
fs
scas
nop
sub
mov
imul
mov
push
and
int
xchg
lcall
fdivrl
ret
rorb
stc
lret
cmp
inc
jge
cmpsl
pop
fstpt
push
fs
mov
daa
out
rcr
enter
out
test
out
in
pusha
icebp
xor
push
sbb
icebp
je
pop
dec
testl
jae
rorl
add
out
lods
cltd
jmp
movsb
pop
adc
out
es
loop
stos
xchg
lds
ret
outsl
or
js
adc
fistpl
cltd
push
dec
insb
or
leave
jae
mov
cltd
sbb
push
push
cmpsl
add
aaa
fcmovu
adc
js
mov
test
mov
dec
xor
sub
fwait
push
mov
data16
jp
aaa
repnz
xchg
je
in
add
jne
sbb
rcl
inc
in
mov
test
dec
int3
shlb
dec
jo
mov
clc
sbb
add
rcrb
push
das
mov
sbb
jne
push
dec
fldl
adc
fstp
xor
in
jnp
fcmovbe
xor
add
pop
test
and
ljmp
jmp
shll
movsl
xor
repz
adc
rorb
fidivs
mov
lock
in
outsb
sbb
or
cs
inc
xchg
int3
out
mov
je
ficoml
mov
adc
out
lods
test
mov
cmp
adc
jae
scas
ret
xor
pop
xchg
lret
lahf
adcl
hlt
mov
ror
cld
mov
xchg
roll
cmc
js
dec
jg
das
jg
in
xlat
push
mov
push
ss
inc
add
cmp
xchg
enter
add
lcall
add
ljmp
add
push
mov
mov
jp
pusha
push
push
lock
test
push
jmp
mov
test
fistpl
popf
jae
and
cs
cli
out
fadds
loopne
in
xchg
fcomip
xor
cwtl
cltd
paddusb
cmpsl
dec
in
and
mov
popa
ret
ljmp
stos
sahf
and
mov
loop
push
inc
sub
scas
ror
cli
lahf
mov
mov
or
flds
and
scas
inc
push
mov
loop
in
test
out
mov
fisubrl
or
mov
popf
dec
push
fisubrs
test
pop
iret
pop
cli
enter
je
outsb
test
push
icebp
mov
out
adc
cmp
adc
inc
pop
and
sar
popf
pop
mov
push
or
fildl
sbb
jmp
dec
inc
incl
int
push
pushf
jae
mov
mov
mov
cli
call
dec
push
mov
mov
lret
movsl
dec
loop
je
dec
inc
ret
dec
hlt
inc
out
hlt
out
cmp
sbb
pop
repnz
push
inc
push
mov
jae
sahf
mov
mov
mov
mov
dec
fcoms
sub
dec
dec
sub
fisubl
cs
loop
ja
xchg
loopne
out
push
xor
das
mull
rolb
jns
cmpsb
fimuls
and
add
or
sub
out
mov
ret
addr16
push
stos
and
sarl
aad
xchg
push
xlat
jno
imul
lcall
mov
push
adc
daa
inc
jne
dec
xor
push
jne
popa
xchg
push
popa
and
mov
cmp
test
cltd
jge
les
cmpsb
xor
outsb
or
rorb
repnz
aaa
fwait
cmp
loopne
outsb
rclb
call
and
push
sub
xchg
xor
outsl
sbb
lcall
divb
sti
cmpsb
xor
iret
outsb
pop
mov
stos
in
or
inc
cvtps2pi
aas
dec
jl
into
xor
lcall
mov
outsb
mov
into
jbe
movsb
icebp
jmp
ss
aad
fdivrs
mov
or
mov
cmp
xchg
inc
mov
clc
inc
add
lods
fdiv
jge
fwait
jno
push
nop
je
repz
mov
ret
xchg
sbb
mov
cld
xor
mov
lea
add
jno
xchg
push
mov
mov
mov
jg
adc
addl
lds
xchg
sbb
call
cmpsb
mov
or
cmp
je
std
mov
test
in
and
test
xor
cltd
ret
xorl
insb
pushf
daa
test
dec
push
xor
pusha
add
add
lock
sub
mov
jmp
mov
xchg
mov
jo
jne
adc
scas
aas
lods
sahf
in
aas
mov
mov
sub
loop
cmc
ss
aad
or
or
xor
xchg
mov
lcall
adc
push
adc
fstpt
push
lcall
xor
cmpb
int
inc
and
adc
dec
dec
add
or
out
sbb
pop
or
mov
call
add
stc
xor
inc
dec
arpl
dec
fwait
jge
push
xor
cmp
cmp
orl
and
pop
dec
movsl
cld
call
xchg
inc
mov
addl
icebp
ds
xchg
out
pop
repnz
inc
and
jmp
cwtl
sahf
add
ret
cld
add
xchg
push
lret
hlt
sub
pop
ds
out
sbb
mov
frstor
or
enter
xchg
imul
and
adc
stos
mov
or
and
cmc
mov
xchg
lcall
sub
cmp
dec
mov
sarl
fs
mov
pop
pop
inc
mov
push
idivb
into
add
add
ss
mov
adc
dec
imul
and
flds
subb
cmp
push
add
sub
fistl
or
jnp
cmp
sub
jno
sbb
xchg
scas
or
icebp
or
mov
push
mov
mov
daa
xchg
and
repnz
push
pop
lcall
imul
and
push
pop
ja
add
jb
mov
jl
out
jge
scas
in
push
adc
imul
sbb
mov
pop
mov
pop
xchg
sarb
les
jge
shll
aam
sar
inc
or
pop
and
and
push
mov
mov
or
out
or
mov
mov
cmc
ja
stc
sbb
xlat
adc
shll
fimuls
push
xchg
cmp
daa
cld
je
in
xor
cmp
xchg
or
pop
rorb
sbb
lea
dec
sahf
add
push
stos
iret
add
std
stos
inc
cwtl
icebp
daa
je
and
in
push
icebp
std
repnz
dec
out
sbb
or
add
cmp
ljmp
xor
xor
mov
enter
mov
ficoms
pushf
divb
mov
mov
cmc
les
push
dec
roll
ss
mov
pop
mov
movsl
jge
into
stc
add
fistpl
add
rcrl
mov
mov
jmp
stc
mov
sahf
inc
cli
mov
test
fxch
push
cmp
or
jmp
mov
xor
loop
int
sub
sub
pop
mov
mov
out
push
bound
push
mov
lret
shlb
mov
outsl
pusha
xchg
add
stos
sub
shl
and
push
jno
fiadds
scas
mov
dec
and
push
xlat
jp
push
inc
and
test
clc
mov
xor
xchg
roll
enter
ljmp
stos
insb
outsl
out
cmp
out
out
inc
outsb
dec
push
xor
test
fistl
mov
push
xchg
subl
movsl
sub
in
and
cmpl
stos
fs
pop
fs
add
pop
inc
sub
lret
imul
dec
pop
push
inc
out
fs
mov
sbb
ret
ja
xor
mov
adc
mov
mov
bound
and
xor
cmp
fwait
aaa
stc
loopne
sbb
adc
mov
loop
or
jb
in
insl
add
mov
mov
out
pop
lods
inc
push
push
imul
inc
push
outsl
jo
lods
mov
andb
pushf
inc
sbb
cmc
pop
cwtl
sti
mov
pop
sbbl
or
push
sarb
out
add
mov
mov
out
inc
in
lahf
scas
adc
mov
js
call
sub
jbe
icebp
push
call
push
sub
cltd
sub
pop
es
andb
pusha
decb
jne
add
mov
xor
inc
popf
call
call
sbb
cmp
mov
adc
fsts
cmp
push
cmp
pop
xchg
inc
rcrl
leave
jecxz
xchg
xchg
push
push
cli
mov
insl
mov
roll
bound
loope
pushf
mov
or
xchg
into
cld
test
lahf
add
ja
jbe
jbe
stc
mov
pop
mov
adc
aas
repnz
dec
and
cmpb
pop
push
mov
mov
mov
mov
sbb
add
fsubr
xchg
fimull
cld
inc
inc
mov
nop
jecxz
mov
stos
cmp
xchg
xor
daa
icebp
mov
mov
fidivrs
lods
pop
jecxz
test
mov
sbb
call
cld
and
push
movsl
incb
xchg
movsb
test
fsub
jmp
push
mov
push
dec
clc
test
loop
adc
mov
cli
mov
fdivrs
mov
mov
inc
jecxz
add
dec
std
cwtl
out
arpl
mov
repnz
sti
xor
cs
js
mov
push
xchg
rcrb
cmp
pop
mov
rolb
cmpl
call
ja
loopne
xchg
out
test
js
push
movsb
add
pop
jl
jl
sbb
pop
push
stc
pop
out
pop
dec
pusha
mov
cli
push
lods
inc
mov
add
mov
int3
and
jp
cmp
and
mov
jbe
pushf
outsl
pop
cmp
inc
push
hlt
adc
iret
shlb
cmp
mov
mov
push
sub
int
ret
inc
pop
ds
dec
jno
mov
aad
std
add
add
lea
push
repnz
xchg
into
hlt
mov
adc
dec
sub
mov
rolb
bound
ja
or
mov
test
xor
lods
mov
jae
push
stos
arpl
pop
push
test
nop
pusha
mov
sbb
je
or
adc
inc
or
repnz
push
fdivs
mov
push
jbe
sub
and
cmpsb
pop
mov
sbb
leave
call
loop
dec
lods
rol
mov
cmp
loop
bound
adc
and
jmp
mov
or
inc
aam
sub
sub
add
sbb
ss
fmul
test
in
dec
gs
xor
cmp
jbe
or
pop
mov
fistps
insl
outsl
andb
cs
lods
pop
sbb
fistpl
out
shll
shrb
and
dec
or
es
pop
and
ret
gs
repnz
xchg
cwtl
leave
pop
lods
pushf
xor
sbb
insb
mov
cmp
jge
mov
lods
mov
scas
jbe
push
and
or
cwtl
inc
cmp
push
repz
in
push
ficoml
pushw
pop
scas
sbb
sub
rcll
xlat
xchg
loop
dec
jmp
repnz
pop
cmpsb
in
pop
or
pop
jns
xchg
pop
leave
lret
xchg
scas
lods
pop
dec
pop
popf
rcrb
jl
sahf
jnp
fmul
pusha
mov
rcll
lret
dec
lods
outsl
adc
loopne
aad
ljmp
sub
repnz
mov
mov
js
or
fnstcw
and
push
into
inc
in
add
inc
cmp
lahf
call
and
xlat
aas
xor
nop
ds
inc
xchg
mov
arpl
test
xor
or
imul
jmp
jo
pop
sub
pop
and
mov
aas
mov
popf
jle
divb
out
cmpsb
nop
in
imul
dec
inc
ror
out
push
daa
gs
dec
clc
fnstenv
jno
mov
imul
inc
cmp
into
jle
dec
adc
add
mov
repnz
mov
adc
sbb
pop
and
imul
jg
lods
jecxz
stc
push
xor
cmp
jno
sub
push
sti
lahf
andb
aad
cmp
push
loop
mov
mov
shl
lods
daa
inc
mov
mov
xlat
int3
and
inc
shrl
jmp
sbb
loop
mov
movsl
mov
xor
pop
mov
outsl
sbb
fwait
daa
add
push
leave
scas
es
cmp
mov
push
push
cmp
jae
sub
sub
xor
or
insb
or
cmc
loopne
lahf
addr16
cmp
das
dec
mov
js
jo
pop
jg
adc
int3
popa
sbb
and
add
ljmp
inc
outsb
in
sbb
cmpsl
or
push
add
xchg
jbe
cmc
lahf
scas
xchg
call
mov
jnp
mov
sbb
mov
stc
js
mov
and
lods
in
dec
cmp
lds
sub
jne
bound
push
lret
xchg
in
jge
and
fidivrs
push
sbb
xlat
arpl
push
add
mov
push
sbb
les
adc
push
xor
call
ja
iret
sbb
sti
hlt
sub
xchg
pop
xor
clc
test
out
je
pop
push
cmp
sbb
pop
jno
cmp
sub
cmp
lods
insb
cmp
xchg
psadbw
aaa
fstps
inc
fists
xor
push
jnp
lcall
stos
scas
xchg
sbb
movsb
jge
xlat
popa
dec
xor
test
adc
pop
fsts
aas
inc
jg
notl
xorb
sub
movsb
xor
ret
roll
loopne
fdiv
lods
sti
jae
push
je
mov
mov
pop
dec
leave
ret
jbe
mov
aad
int
lea
mov
jle
mov
mov
aas
dec
fimull
cmp
push
pop
cltd
inc
cltd
or
mov
push
cmpsl
gs
mov
mov
and
bound
mov
inc
pop
es
lds
push
iret
push
addr16
and
outsl
cmpsl
outsl
mov
add
scas
mov
cmpsl
jae
in
out
ror
popf
pushf
inc
mull
lret
out
dec
xchg
mov
jp
test
mov
and
dec
adcl
mov
testl
xchg
cli
xlat
out
lret
gs
test
mov
dec
in
cmpsl
xor
shlb
and
rcrl
cmp
fstpt
cmpl
inc
imul
cmp
or
mov
mov
insl
mov
fs
mov
jge
fimull
cmp
adc
sbb
les
invd
dec
out
aaa
push
fimuls
scas
mov
stc
imul
pop
jae
jge
call
mov
rolb
mov
icebp
scas
mov
jne
andb
pop
incl
mov
jmp
and
sub
mov
and
sti
jb
and
fstp
sbb
push
ret
adc
mov
adc
fldt
jp
lret
je
jmp
sar
mov
iret
jae
enter
aas
pop
fisubs
xor
lahf
es
mov
pop
adc
push
push
mov
ds
popa
out
sub
cmp
mov
cltd
ja
shll
inc
shll
lret
lcall
test
xchg
xchg
loope
fcomps
xlat
aad
lahf
and
les
notl
and
cmp
pop
mov
es
out
leave
test
push
xorl
sub
push
int
jne
into
mov
cmpsb
xor
out
ret
call
and
xchg
pop
shl
sub
imul
movsb
pop
addb
leave
iret
push
mov
fidivrl
sbb
cmp
or
inc
fidivrs
inc
add
into
cmpb
and
bound
cmp
popf
sub
or
pop
mov
fcoml
mov
out
sbb
sbb
sbb
dec
mov
push
in
xchg
jge
add
dec
mov
xor
and
loopne
or
adc
addl
adc
daa
add
test
jecxz
sbb
mov
iret
bound
add
jl
push
or
sub
push
jg
adc
fdivs
mov
cmpsb
out
xorl
decb
pop
and
pushf
mov
out
daa
mov
sbb
inc
outsb
out
filds
sub
inc
mov
add
addr16
cmp
and
mov
cmp
and
or
cmp
je
divb
loopne
cmp
xchg
xor
pop
test
in
pop
or
gs
cmp
clc
sarb
cmp
andb
mov
int3
jo
add
mov
iret
mov
shrb
xchg
sbb
mov
push
adc
dec
jge
jp,pt
in
pop
jle
xchg
jbe
xor
xor
push
adcl
ljmp
loope
sub
aad
and
xchg
popa
xor
popa
add
fidivl
push
lea
add
rcrb
adc
icebp
test
sahf
and
clc
enter
adc
test
fwait
push
push
jl
sahf
mov
ds
and
push
push
ret
push
push
lods
gs
shrl
les
and
dec
mov
out
jnp
jecxz
lods
and
mov
push
jb
push
test
and
sub
cmp
sar
add
pop
mov
arpl
push
int3
scas
int3
out
sub
push
ljmp
inc
jp
outsb
ljmp
mov
mov
rcr
clc
sbb
jo
insb
pop
add
pop
and
sbb
mov
push
xchg
push
lods
mov
jbe
or
adc
jnp
sbb
or
inc
popa
dec
inc
rcrl
xchg
inc
std
jmp
adc
in
mov
loopne
jb
fisttps
push
jno
mov
vpcomb
xchg
inc
insb
rolb
outsl
outsb
fmull
bound
xchg
fs
repz
scas
push
ja
subb
fs
jl
adc
fiadds
mov
inc
es
adc
sarb
cmp
or
sbb
leave
int
pop
lds
push
or
addr16
mov
pushl
arpl
add
sbb
mov
int3
add
lret
pop
mov
add
lods
push
aaa
and
adc
sarl
or
cli
cmp
or
lods
mov
inc
loop
cmp
mov
lret
in
mov
mov
mov
loop
lods
push
test
xchg
sahf
and
push
add
rcrb
xor
pop
test
cltd
or
stc
and
add
pop
aad
pop
push
adc
ljmp
and
outsb
insb
xchg
xor
scas
mov
pop
xchg
out
or
pushl
adc
icebp
lods
sub
xor
scas
ss
int3
xor
movsl
add
jnp
xor
sub
xchg
sar
dec
sti
xor
fs
test
xchg
push
icebp
xchg
pop
push
add
sub
hlt
cmp
cmpsl
cmp
loop
mov
jl
jnp
ret
movsb
mov
gs
sub
loop
add
xor
sbbb
sub
loopne
inc
movsl
loope
aad
fldl
out
iret
jecxz
in
lret
jo
cmp
pushf
lock
aam
dec
jae
xchg
push
jg
dec
lret
sbb
les
enter
push
xor
lea
dec
push
shlb
pop
pop
rorb
inc
stos
movsl
push
incb
test
pop
lahf
push
or
outsl
push
pusha
cmpsb
pop
lcall
lahf
push
or
movsb
ds
mov
outsb
pop
fstpl
nop
and
rsqrtps
mov
jne
insb
pop
xchg
mov
hlt
fcoms
test
mov
bound
jl
imul
add
sbb
sarb
mov
jo
sbb
sbb
in
jns
lret
xchg
xor
adc
out
arpl
out
into
inc
ret
push
cmpsb
adc
call
sbb
mov
add
pop
cmp
cli
push
inc
mov
js
adc
cmp
jmp
outsb
jecxz
in
fisttpl
fstl
mov
ljmp
fists
push
or
std
push
sti
mov
sti
fstpt
mov
add
cmp
scas
mov
or
insl
mov
in
adc
mov
adc
or
cmc
ret
out
jae
aam
popa
fistpl
mov
bound
and
lret
cmpsb
test
shrl
repz
mov
or
pop
or
fs
les
adc
pop
mov
sub
mov
test
stos
popf
push
mov
out
fbld
fists
inc
mov
std
mov
mov
mov
sbb
adc
xor
xor
sbb
push
popa
shll
pop
add
std
rolb
rorb
dec
mov
fwait
arpl
xchg
je
gs
xchg
decb
push
aas
fwait
iret
dec
stos
sbb
aad
xlat
je
adc
jmp
xlat
in
sbb
fwait
push
sbb
sub
aad
stos
stc
cmc
test
cmpsl
out
xor
popa
jle
stos
cmp
push
jo
sbbl
jecxz
or
jne
pop
lcall
sub
mov
mov
aaa
sub
inc
pusha
in
sub
add
jmp
mov
int3
or
rcrb
inc
enter
push
cmp
pop
daa
ret
ds
popf
adc
xor
and
gs
fs
pop
in
jb
dec
and
mov
dec
dec
pushf
mov
subb
inc
imul
jp
fcoms
or
ret
lds
adc
mov
jp
fs
inc
sbb
nopl
sbb
inc
dec
mov
leave
and
orl
js
mov
lea
jg
fidivl
xor
addl
xchg
adc
jne
cmp
xlat
test
fsubs
dec
ss
jg
sti
dec
push
fstpt
cmp
inc
inc
add
fwait
shll
icebp
test
jle
mov
popf
lds
mov
mov
pop
test
adc
fbld
out
popa
lock
cmc
xlat
out
and
or
arpl
mov
icebp
or
xlat
cwtl
mov
push
and
push
test
cltd
jge
rcr
mov
xor
mov
mov
or
mov
loope
loopne
out
adc
dec
subl
jae
adc
test
xchg
lds
mov
stos
fwait
mov
cltd
jb
jp
imul
lock
in
stos
hlt
sub
dec
in
sahf
xchg
lods
scas
adc
cs
pusha
into
shl
and
mov
leave
push
test
mov
pop
pop
mov
add
in
out
sbb
fisubrs
pusha
sti
push
jb
add
push
les
sarb
sbb
aam
mov
ja
pop
or
repnz
dec
rclb
push
xlat
das
add
nop
fbstp
ljmp
scas
pop
out
lods
push
xchg
jge
cmp
in
sbbl
repz
adc
stc
loop
cmc
adc
nop
loope
cli
push
out
jl
orb
sub
mov
enter
mov
dec
fwait
jae
add
and
bound
sti
pop
into
inc
jne
ja
or
mov
pusha
sub
push
adcb
out
xchg
popa
sbb
sbb
adc
push
cmp
fcomip
shrl
stos
jae
outsb
loope
arpl
nop
std
in
or
lods
sbb
dec
and
mov
in
dec
nop
sbb
xor
cmp
fistps
dec
or
sti
cmp
mov
scas
fidivrs
pusha
adcb
lods
out
xchg
xchg
inc
pusha
mov
pop
test
repnz
stos
push
loop
mov
add
aam
daa
lock
pop
cmp
clc
test
scas
mov
push
popa
out
xchg
andb
xor
in
rcll
adc
in
mov
in
dec
test
test
inc
mov
movsl
les
mov
test
xchg
inc
insb
ror
cmp
add
or
ret
and
test
inc
loopne
pop
aas
push
jg
cltd
and
mov
pop
pop
cmp
cmp
sbb
loopne
or
dec
lcall
push
fisttpl
enter
push
inc
lods
in
xchg
enter
test
pop
push
dec
out
cmpsb
mov
ficoms
push
jl
jecxz
loop
dec
jo
arpl
aas
arpl
inc
add
lahf
dec
rorb
pop
hlt
enter
loop
jp
daa
mov
push
cmp
sbb
xchg
sbb
push
aas
pushf
mov
mov
jnp
cwtl
push
mov
nop
scas
mov
sub
fidivl
xchg
rol
mov
inc
fstpl
xchg
rcrb
cmp
arpl
insb
inc
xchg
xchg
imul
inc
jbe
adc
cld
enter
inc
ds
xor
xor
sub
and
iret
xor
jle
popf
push
imul
jge
cmp
jno
or
in
push
xor
pop
add
popf
dec
pop
dec
mov
pop
dec
xor
subl
xlat
arpl
fiaddl
aam
adc
xchg
insl
sbb
addb
add
add
dec
bound
and
pop
push
aaa
mov
and
dec
imul
xlat
lods
shrl
or
addl
dec
jns
insl
jne
arpl
jecxz
cmpsl
sub
nop
push
jmp
add
and
fistps
cwtl
repnz
pop
cld
outsb
add
in
out
xlat
cmp
fwait
jmp
mov
fwait
lcall
mov
add
test
loopne
push
jae
mov
dec
adc
or
mov
jmp
xchg
xchg
outsl
cld
xchg
adc
jge
pop
xchg
and
cld
cmpsl
std
mov
xchg
adc
jmp
in
or
mov
cld
das
mov
jno
outsb
and
mov
mov
adc
jle
mov
mov
or
dec
rcll
mov
jae
mov
pop
mov
cmp
dec
jbe
add
jo
push
in
push
scas
mov
cmpsb
movsl
and
mov
rclb
xchg
add
sub
xor
cmp
inc
or
add
outsl
das
in
jo
mov
pop
mov
leave
xchg
push
ljmp
bound
or
inc
inc
jge
mov
inc
jnp
sbb
in
sub
repnz
rorl
and
rclb
icebp
inc
lcall
fimull
out
push
sti
xchg
sub
aad
mov
adc
lods
es
dec
mov
xor
pushf
imul
xchg
sub
pop
push
movsl
pop
pop
mov
mov
push
sbb
dec
cmp
add
out
inc
mov
dec
loop
push
out
add
lcall
jns
rolb
fstpt
cmc
jp
add
mov
xchg
repnz
rclb
mov
adc
bound
das
pop
cmp
lea
scas
sbb
rol
mov
mov
mov
push
lods
int3
lahf
or
ret
pop
hlt
sub
shlb
imul
or
enter
sbb
mov
je
push
xchg
and
ret
test
mov
push
notb
sub
testb
xchg
xlat
imul
stos
roll
xor
mov
mov
cmp
gs
dec
pop
sbbb
call
inc
xor
xchg
and
shll
repz
pop
inc
fnstcw
pop
jno
cmpsl
fildl
pop
lcall
mov
clc
adcl
das
and
insb
inc
iret
stos
pop
dec
aad
push
scas
addr16
stos
cs
jmp
decb
xchg
cltd
fiaddl
or
jae
mov
push
popa
push
cmp
rolb
test
call
sbb
ja
aas
cmpsl
mov
lods
mov
push
push
push
add
out
and
out
push
cwtl
dec
and
outsb
movsl
sbb
xor
movsb
adc
inc
xchg
addb
push
add
sar
jbe
mov
adc
test
pop
xchg
sbb
out
test
mov
xor
sbb
mov
cmp
inc
sub
fimull
push
hlt
cmp
icebp
loope
push
xchg
sbb
enter
jle
xchg
lods
out
imul
adc
or
mov
scas
or
jg
add
mov
cltd
lds
aam
sahf
mov
sti
adc
push
add
shrb
test
push
pop
aam
fsubrs
dec
enter
inc
call
sbb
jne
out
jae
jae
sub
into
push
scas
inc
lea
jns
jle,pt
mov
jae
or
and
adc
or
ret
cmp
lock
mov
shl
out
pop
dec
cmp
push
add
rclb
in
dec
out
fcoms
inc
fnstcw
sub
rclb
lock
push
xor
mov
cmc
add
test
call
xlat
push
adc
add
dec
sbb
xchg
jo
adc
pushf
inc
sub
adc
popf
add
fbld
std
push
mov
pop
sub
lret
int3
in
fstpt
imul
lahf
xchg
add
imul
sub
in
and
pop
push
lea
push
pusha
mov
dec
mov
jecxz
inc
sbb
call
jecxz
dec
adc
scas
xor
or
je
mov
loop
mov
or
push
push
inc
int3
jg
arpl
icebp
mov
jle
xchg
addl
sahf
loope
mov
imul
jmp
pop
leave
dec
loop
not
mov
adc
jecxz
sar
imul
daa
ljmp
or
mov
pop
cwtl
mov
push
jb
push
mov
lea
jg
mov
fidivrl
aaa
and
xor
insl
aas
dec
cmp
js
or
sub
inc
pop
cmc
jg
loopne
gs
mov
cmp
mov
mov
mov
add
mov
stc
jno
push
xor
fwait
in
lea
sbb
loop
jae
cs
aad
pop
mov
aas
imul
xchg
xor
movsb
and
hlt
ret
das
in
outsl
mov
lods
fsubp
xor
mov
xor
inc
mov
jl
or
cs
daa
jne
mov
lahf
repz
sbb
adcb
cld
rorb
and
mov
movsl
push
dec
mov
pop
aas
xchg
lret
mov
ljmp
cmp
adc
xchg
fistpl
or
clc
into
mov
repnz
negb
push
cli
loopne
cmp
xor
rorb
adc
je
push
aaa
roll
jae
clc
mov
pop
ljmp
push
jnp
movb
cmpsb
cmp
pop
xor
sub
or
pop
mov
mov
mov
push
push
aaa
cmp
jnp
cmp
cltd
cwtl
dec
cltd
hlt
or
and
mov
fistpll
xorl
arpl
fidivrl
mov
cmp
stos
je
scas
cli
lods
pop
ljmp
push
lret
jmp
cmpsl
in
and
mov
cltd
ljmp
jne
push
adc
sbb
in
lcall
push
sub
and
mov
loope
pop
add
jnp
and
stos
xor
push
mov
xor
sarl
rorb
outsl
js
dec
out
jno
push
or
shl
jo
xor
repnz
into
sarl
fstpt
shl
movsl
les
outsb
pushl
pop
mov
and
fldl
mov
in
mov
pop
lret
push
mov
lret
mov
pop
shl
adcl
dec
test
sub
pop
cmp
xor
xchg
or
andl
mov
incl
sbb
vpaddd
div
mov
insl
and
cmc
js
cltd
cmpsb
cwtl
out
and
aas
cmp
iret
dec
cmp
popf
movsl
add
stos
gs
movsb
imul
rcl
mov
lcall
inc
inc
jb
xor
add
xor
or
test
push
adc
xchg
sub
xchg
aas
fimuls
cmpsb
jns
pop
sub
popf
test
adc
or
mov
jge
nop
jmp
sbb
inc
mov
jl
lea
movsb
mov
fcmovu
cwtl
sbb
push
jecxz
enter
add
mov
sbb
xor
loop
xor
pusha
sti
sbb
and
jl
sub
xor
mov
rorl
sbb
pop
gs
call
and
mov
jb
add
push
jg
test
push
icebp
push
fsubrs
adc
shr
xor
iret
pop
jae
push
pcmpgtw
out
sbb
add
pop
xor
xor
xchg
sbb
dec
and
lods
push
pop
call
shrb
stos
lods
inc
in
jge
pop
sbb
push
scas
ret
mov
enter
jo
xchg
sbb
jge
mov
lods
cmp
and
hlt
gs
orb
jl
push
test
sub
jb
stos
sbb
mov
repnz
adc
daa
inc
gs
in
int
mov
push
push
pop
roll
popf
int
leave
out
pop
movsl
jle
push
xchg
and
lahf
call
or
shlb
jb
sti
mov
mov
cwtl
cmc
xchg
fsub
pop
sub
mov
jo
imul
sub
nop
loopne
fimull
and
scas
and
aad
pop
in
pushf
dec
in
sbb
shlb
mov
cmp
daa
sub
dec
inc
mov
lock
xlat
outsl
nop
cmpsb
ja
mov
into
test
dec
std
sub
push
leave
negl
pop
adc
xchg
mov
push
les
out
sub
shll
mov
pop
jg,pt
and
pop
stc
dec
fidivs
mov
mov
xor
aas
enter
fidivs
test
jle
movsl
sbb
inc
push
and
sti
out
mov
xor
js
jnp
cwtl
cmpsl
jno
lock
and
xorl
cmp
je
aad
adc
sub
sbb
xlat
or
jp
pop
cmc
add
fnstenv
push
push
inc
inc
mov
outsl
scas
inc
ljmp
insl
leave
mov
idivl
push
sti
adc
mov
lods
and
mov
push
fistpll
stc
in
jne
mov
psubusb
orb
lock
push
dec
pop
ret
fwait
aam
pop
js
in
sarb
repz
sub
lahf
mov
xchg
fs
jle
sahf
sub
in
push
push
mov
pop
jge
sbb
sbb
dec
pop
jle
es
mov
pushw
jmp
je
cs
ja
pop
xchg
dec
jae
in
lahf
mov
sub
std
movsl
imul
pop
inc
addl
pop
sbb
imul
xor
xor
hlt
loopne
xchg
fcomip
outsb
arpl
sti
push
aaa
idiv
inc
mov
aam
mov
aas
mov
inc
fcomip
dec
inc
and
gs
pop
or
adc
mov
arpl
cmp
adc
sbb
insb
cld
les
and
push
xor
inc
xchg
push
mov
jo
imull
das
cmc
mov
fbld
mov
sbb
cli
gs
xor
lret
imul
push
into
xor
ds
imul
insb
add
filds
xchg
mov
cmp
jns
inc
xorl
ss
pop
stos
jge
xor
push
mov
pop
bound
mov
adc
aaa
out
icebp
or
mov
xchg
test
mov
vmovd
call
aas
and
push
pop
inc
inc
lods
clc
cli
mov
adc
xchg
int
mov
cmp
int
fldt
pop
jle
sub
mov
ja
push
add
addl
or
inc
push
sti
pop
xchg
inc
sbb
hlt
pop
loope
ret
push
mov
lcall
pop
mov
push
sbb
xchg
jno
mov
aas
cli
add
or
push
adc
je
dec
xor
sub
jno
rol
arpl
push
inc
mov
push
mov
fs
push
lods
sarl
jge
call
jl
xchg
test
cmc
loope
out
sub
add
icebp
shll
fwait
mov
jmp
clc
xchg
xor
imul
lods
sub
sbb
leave
dec
push
fwait
sub
jbe
aad
pushf
lds
xchg
push
and
arpl
leave
das
lahf
jecxz
or
ljmp
adc
mov
inc
stos
cmpsl
cli
sbb
pop
imul
mov
mov
adcb
pushf
sahf
imul
ret
pop
cmpsb
repnz
cmp
test
mov
lea
mov
popf
lock
cmpl
mov
mov
xchg
ss
cmp
jns
iret
dec
xorl
pusha
xchg
fisttpl
incb
and
iret
xlat
lcall
dec
jecxz
into
mov
and
in
cmp
inc
testb
aad
xor
add
inc
mov
leave
loope
xlat
movsb
in
in
add
je
icebp
or
lock
and
jae
sbb
aad
mov
or
jmp
sub
clc
shll
sbb
cmp
roll
insb
test
mov
mov
mov
imul
mov
adc
mov
lahf
xor
xchg
fdiv
jae
cwtl
shrb
xchg
xor
pop
scas
inc
out
pop
push
inc
int
cmp
mov
stc
dec
cwtl
mov
jge
xchg
sub
adc
popa
call
or
fwait
call
adc
mov
sahf
ss
loope
add
or
les
pop
mov
pushl
stos
inc
sbb
std
popa
cmpsl
jp
dec
xor
iret
mov
or
dec
shrb
es
adc
or
subl
arpl
and
or
mov
repz
mov
das
push
mov
dec
movsl
out
bound
xor
fisttps
enter
cmp
cmp
arpl
sub
inc
sub
sahf
cmp
inc
xor
hlt
xor
pop
xchg
repnz
pop
shlb
jno
jecxz
out
mov
jns
push
sub
jl
aad
lods
les
cmpsl
mov
jge
add
pop
lret
sbb
mov
cmp
and
lock
ret
push
jmp
outsb
dec
cmp
repz
fmull
gs
shl
xchg
fsubrs
cli
jnp
lahf
shll
mov
js
or
outsb
cmp
cltd
pop
addr16
cmp
lret
mov
in
inc
and
xchg
xchg
xchg
les
cmp
xchg
and
jo
or
insb
and
rorl
in
aaa
xor
fildl
dec
xchg
aaa
jne
pop
shll
orl
add
or
mov
mov
sbb
add
cmp
fbld
cmp
dec
shll
mov
sub
fdiv
xor
mov
in
or
push
fmull
ljmp
jecxz
stos
add
or
test
push
jmp
testb
push
orb
fcompl
add
icebp
cmp
imul
mov
add
mov
dec
int3
inc
ljmp
lahf
xorb
adc
stos
out
and
leave
call
in
mov
or
cli
jg
ds
jl
fadds
add
xchg
inc
xlat
xor
dec
pop
sub
daa
cmp
inc
add
jecxz
ljmp
pop
inc
in
test
arpl
test
ljmp
pop
out
push
daa
mov
insb
cmp
enter
aaa
and
mov
dec
mov
in
push
jmp
dec
cmp
cmp
sbb
arpl
into
push
aaa
jbe
sub
test
inc
dec
dec
mov
out
test
sbb
and
sub
inc
xor
imul
pop
xor
cltd
fmull
andb
test
jge
adc
lea
cmp
arpl
popa
outsl
sahf
sbb
popa
inc
je
xchg
outsb
faddl
pusha
mov
mov
lods
les
sub
pop
test
push
rorl
xchg
push
arpl
popf
xor
inc
jns
sub
jbe
sub
repnz
loope
fmulp
cmp
data16
call
fsub
iret
je
addl
imul
mov
hlt
inc
je
mov
addr16
stc
mov
jp
xchg
mov
jge
flds
mov
push
rcl
sbb
pop
push
hlt
push
insb
stc
pop
call
andb
jg
mov
sub
flds
popa
idivb
xchg
pop
in
push
lcall
or
adc
push
inc
movsb
inc
sbb
xchg
fwait
xchg
mov
mov
push
imul
insb
aad
mov
inc
loop
jo
xchg
mov
nop
push
push
data16
pop
xchg
jnp
in
inc
das
pop
cmc
out
xor
pushf
dec
les
mull
decb
icebp
out
fldt
add
bnd
inc
fs
mov
movsb
pop
mov
mov
inc
mov
aaa
pushf
fbld
daa
mov
sub
xor
dec
fimull
pop
push
mov
gs
xchg
sbb
fcomip
pusha
push
in
fiadds
push
xor
or
inc
test
sub
mov
movsl
lds
and
fdivrl
and
ret
imul
push
mov
call
xchg
ss
in
int3
or
sub
xor
js
pop
adc
pop
xchg
iret
out
out
outsl
nop
sbb
rcl
pop
xchg
fcoms
mov
and
divl
lds
xchg
sbb
fdivp
outsb
dec
xchg
inc
pop
pop
inc
bnd
mov
sahf
fists
sbb
lahf
outsb
lahf
adc
mov
or
ret
or
lahf
cld
lea
mov
lock
js
push
cltd
std
repz
lods
cwtl
dec
mov
fnstsw
xchg
scas
loop
mov
xchg
addr16
push
xor
or
pop
fdivr
dec
cld
ds
sub
and
mov
dec
xor
loope
add
sbb
je
mov
ds
add
mul
add
cmpsb
sub
loope
fistpll
movsb
out
pop
cmp
xlat
jo
pop
push
dec
pop
sub
lahf
or
std
repz
mov
or
adc
xchg
cmp
cltd
out
sub
fsave
xchg
test
imull
packsswb
test
rcll
mov
loope
add
in
dec
xchg
nop
aad
pop
xor
adc
pop
pop
and
stos
test
loopne
inc
subl
jbe
sub
fwait
pop
sbbl
xchg
mov
inc
cmp
sbbl
inc
add
dec
popf
sub
mov
in
sub
imul
push
dec
jnp
push
clc
aam
dec
rcrl
inc
dec
hlt
inc
pop
jns
test
mov
mov
or
daa
jl
cli
mov
push
xor
add
test
mov
ss
jecxz
pop
dec
roll
pop
dec
inc
mov
ss
bound
mov
scas
arpl
inc
out
negb
lcall
mov
cmpsl
pushf
mov
iret
and
pop
shlb
or
mov
outsl
loop
std
sbb
in
mov
ud2
inc
jp
ljmp
push
fsubrs
dec
dec
movsl
lcall
dec
sahf
in
xor
pop
fs
dec
cwtl
sub
ret
xchg
test
xchg
mov
fldl
add
clc
cltd
ds
pop
push
test
dec
jbe
cmp
and
aam
push
and
jg
ret
sbb
or
test
mov
call
ss
xchg
dec
pop
push
icebp
lods
mov
insl
hlt
and
test
fsubl
sub
sub
imul
test
sub
les
inc
inc
lds
jnp
push
pop
cmc
sarl
cmp
jo
mov
mov
mov
mov
mov
fmuls
cld
push
test
andl
cltd
inc
ret
mov
sbb
pop
out
fidivrs
pop
je
jb,pt
inc
dec
fs
test
hlt
jo
fwait
dec
lcall
inc
jecxz
jne
cmp
inc
and
mov
mov
gs
mov
xor
jnp
leave
push
in
ret
outsl
sub
mov
in
scas
in
xor
les
mov
fsubr
add
mov
movsb
imul
popa
cs
sub
cmpsl
xor
mov
aaa
adc
shr
loop
sbb
ja
rolb
mov
lods
or
cld
cmp
clc
or
mov
mov
stos
inc
mov
pop
das
jb
lea
mov
iret
popa
into
mov
pop
push
adcl
mov
and
fsubs
test
das
movsb
pusha
jnp
cmpsl
or
mov
stc
enter
int3
ret
insl
mov
xchg
stos
xchg
pushf
push
pop
lahf
fists
mov
pusha
divl
fldl
adc
dec
fdivrs
mov
test
push
inc
mov
dec
cmp
xor
js
push
repz
jno
lahf
rorb
push
dec
iret
cs
shrb
aas
notl
shll
sahf
and
into
iretw
inc
add
xor
dec
clc
sub
les
lret
clc
shrb
mov
rcll
enter
xchg
sbb
mov
enter
or
pop
xchg
popf
dec
inc
leave
ss
out
xchg
mov
push
and
push
lds
jnp
dec
pushf
or
inc
jg
das
lods
or
mov
add
das
mov
ficoms
outsb
aaa
push
jo
mov
clc
movb
xor
xchg
dec
or
lock
adc
add
push
ret
repz
test
mov
cmp
xor
sbb
cmp
mov
ds
jg
outsb
movsl
push
push
mov
pop
std
jne
fstps
push
lods
add
mov
and
mov
and
jle
fnstenv
adc
cmpsl
and
rol
cmpsb
rorl
xchg
push
call
and
dec
shll
sahf
push
les
and
sub
or
cmp
sub
mov
jmp
add
ficomps
out
imul
stos
cwtl
test
pop
adc
sbb
dec
stos
gs
fiadds
dec
mov
xchg
inc
xchg
add
repz
loopne
sahf
and
mov
jge
test
ds
popa
xchg
dec
andb
testb
dec
sub
fisubrs
mov
iret
int3
imul
sub
mov
and
sbb
lods
mov
sbb
data16
xor
and
push
insl
inc
fistpll
cmp
cli
in
jb
cld
out
or
and
pop
iret
test
repz
nop
sub
out
mov
idivb
jno
or
dec
inc
jno
jo
mov
add
adc
jecxz
loope
add
dec
enter
and
and
test
mov
loop
insl
in
push
dec
sahf
lret
movsb
mov
repnz
test
xor
inc
mov
adcb
ss
lcall
adc
xchg
cwtl
push
or
js
test
ljmp
cmp
adc
shrl
out
push
cmp
rorb
mov
sahf
fisubrs
xchg
lods
inc
icebp
lret
jns
cs
repnz
fsubl
lcall
icebp
cmp
mov
out
lock
and
sub
jnp
lcall
je
mov
sbbl
pop
push
fcomp
mov
jecxz
mov
xchg
sahf
push
inc
insl
mov
ja
cmpsl
add
aas
lahf
rorl
push
es
cs
xorl
jnp
pushf
into
jge
push
jbe
push
xor
sub
mov
pop
cmp
xchg
shlb
push
jmp
mov
daa
das
dec
int
arpl
je
adc
movsl
push
inc
loopne
lcall
hlt
out
inc
je
xor
pop
shlb
adc
mov
iret
mov
popa
movsl
push
cmp
addr16
adc
and
mov
or
cmp
sub
push
test
lock
push
adc
cmpb
and
pop
shrb
add
jmp
pop
pop
add
cmpsl
fsubl
xor
mov
std
in
mov
push
mov
push
inc
mov
cs
test
inc
std
icebp
cmp
cwtl
ja
xlat
mov
jnp
gs
aam
out
adc
xchg
test
inc
push
iret
inc
loope
imulb
mov
dec
data16
sbb
insb
lods
push
popa
jle
shll
in
mov
jo
fstps
mov
push
sahf
outsb
idivb
xlat
shrb
xchg
repz
mov
sti
sbb
leave
xchg
cltd
test
out
out
repnz
or
mov
adc
lret
lods
mov
gs
xchg
lret
and
pop
pop
xchg
pop
sub
jg
pop
and
adc
je
dec
lods
mov
xchg
lea
aam
mov
push
jecxz
loop
aaa
out
sbb
mov
pop
adc
lds
mov
lcall
adc
xor
inc
mov
test
jo
mov
test
icebp
stos
mov
sub
int3
jne
loop
jbe
ss
xorl
in
jns
stos
jne
cs
jle
cmpsb
add
pop
mov
pop
mulw
jmp
lock
negb
orl
mov
mov
and
push
das
insl
fwait
dec
call
cmp
cmp
fstps
loopne
add
outsb
das
push
jge
adc
pushf
rcr
xchg
adc
enter
adc
scas
adc
rcrl
cld
out
sub
push
push
adc
xor
out
fisttpll
mov
or
cmpsb
mov
ds
in
xorb
cmp
sahf
cs
mov
inc
inc
repnz
je
inc
int
je
mov
dec
fsub
aas
lods
xor
testl
out
cmc
out
inc
and
cmp
dec
dec
addr16
cmp
pusha
jno
in
aaa
cmpsl
lock
aad
or
xor
jae
sbb
out
in
loopne
lds
mov
fwait
mov
std
lods
sub
and
xchg
stc
or
jp
inc
outsb
iret
cmp
scas
push
lds
pop
pop
sbb
or
mov
fcmovnb
in
sti
dec
pop
pop
mov
gs
rorl
or
je
cld
test
add
mov
test
hlt
mov
in
clc
xor
fildll
push
aad
out
outsb
scas
jle
cmp
cmp
lea
in
pmaxsw
add
pop
fs
dec
out
test
push
sbb
cmp
outsl
push
mov
push
iret
mov
es
fs
sbb
add
lds
add
and
inc
in
xor
jmp
inc
aas
mov
mov
imul
lret
pop
out
push
pop
xchg
fwait
add
popl
mov
push
jle
lret
jae
data16
ret
jb
movsb
aas
xlat
cli
add
pop
shll
out
stos
cmp
adc
shrb
cmpsb
loop
fistps
in
sub
pop
cltd
std
shrl
test
dec
pushf
sahf
sub
xor
adc
add
push
mov
dec
dec
or
es
mov
in
adcb
sbb
ja
lcall
stos
arpl
jae
mov
xor
in
dec
out
mov
xor
dec
jmp
out
and
jbe
cmp
jne
dec
push
xchg
fnstsw
dec
outsb
jae
jle
lret
xchg
das
xchg
jb
inc
iret
out
jne
test
mov
push
fwait
dec
fwait
repz
daa
fdivrs
dec
xchg
enter
aaa
dec
adc
add
jmp
out
pop
int3
xor
cwtl
xchg
ret
sbb
pop
mov
fildl
and
lods
ljmp
push
adc
loop
dec
test
and
ja
add
jb
adc
leave
fildll
jmp
push
rclb
add
ud2
cmp
cmp
and
sbb
dec
pop
mov
mov
cwtl
ss
jecxz
and
repz
in
movsl
clc
enter
jno
sub
enter
jl
imul
push
mov
les
xchg
adc
fmulp
cld
cmpb
setle
andl
mov
push
movq
sti
or
push
aad
mul
fldcw
jns
sbb
out
repz
lret
or
fnsave
or
xchg
arpl
push
pop
push
icebp
adc
jmp
movsl
sbb
sti
jle
push
scas
mov
je
dec
sbb
xchg
xchg
add
add
push
add
dec
rcrb
jae
push
cmp
dec
lcall
ret
mov
cmp
push
ds
mov
adc
inc
fs
mov
in
pop
outsl
pop
dec
test
pop
xchg
fldl
pop
mov
sub
or
mov
arpl
mov
jmp
repz
outsl
fs
push
enter
sti
orb
jno
out
insb
mov
push
pop
clc
dec
gs
stos
pop
ret
popf
ds
push
lcall
add
lds
push
add
sbb
cmp
addr16
jns
lea
mov
sub
fmull
daa
mov
bnd
sub
sub
popa
jbe
shlb
shlb
cmpsb
call
pop
loop
rolb
mov
cmp
pop
fstpt
adc
mov
icebp
sub
in
outsb
add
fnstcw
pusha
cmpsb
cmpsl
orl
or
sbb
lds
rolb
pop
lods
rcrb
xor
das
insl
pop
pop
inc
xor
popa
ja
pop
pop
cmpsb
inc
or
xchg
pop
sbb
aas
ds
cmpsl
in
les
jae
xchg
and
dec
mov
push
mov
adc
jp
lods
dec
lods
test
lock
xchg
mov
les
bound
aad
in
fisubrl
sbb
sub
ss
icebp
lods
fsub
jle
addl
dec
cmp
cmp
add
pop
sahf
lods
xor
adc
jo
mov
dec
add
dec
std
in
outsb
cs
push
mov
mov
xchg
or
xchg
adc
sbbb
jno
xchg
jmp
outsb
cmp
ret
pop
jge
sbb
push
mov
push
dec
or
aam
stos
ss
pop
sbb
mov
imul
lods
flds
mov
cld
sub
push
scas
push
mov
sbb
es
arpl
lret
sahf
and
ficoml
in
hlt
sbb
push
and
mov
sahf
adc
push
xchg
fdivs
repz
lods
leave
lret
sbb
pop
cmpsl
xchg
push
mov
jmp
loope
lock
and
inc
cmp
lahf
test
fsts
pop
pop
xchg
pop
and
cwtl
fs
dec
pop
mov
push
std
push
jb
inc
lods
mov
jb
inc
sbb
scas
lcall
inc
jecxz
dec
scas
in
xchg
inc
cmp
outsl
lcall
xchg
push
cmp
jbe
xor
adc
pusha
add
mov
adc
rcrb
shlb
mov
gs
push
mov
jg
dec
pusha
lret
push
rcrl
repnz
pop
int
sti
int3
lods
fiadds
xorl
stc
popa
mov
inc
xor
adc
xchg
jns
inc
test
roll
subb
cltd
aam
mov
jecxz
shlb
loope
inc
lock
scas
fstpt
pop
add
sub
mov
pop
mov
push
in
dec
add
xor
ds
cmp
mov
xor
jl
lret
add
orl
test
in
rorl
mov
sbbb
jnp
outsl
dec
ret
sbb
mov
adc
pop
inc
clc
iret
pop
mov
inc
pop
test
xchg
stc
test
shlb
stos
dec
iret
or
mov
mov
fisttps
inc
xor
jle
jmp
dec
inc
pusha
mov
ficoml
mov
sbb
mov
jb
mov
xor
lods
imul
popf
cmp
cmpsl
pop
dec
test
mov
adc
mov
iret
fwait
jp
aaa
or
das
push
jne
les
jnp
cltd
mov
push
mov
mov
pop
pcmpgtb
in
cli
mov
dec
movsb
into
jbe
pop
xor
lret
xchg
mov
or
and
pop
addr16
pop
in
test
adc
or
jmp
inc
lret
cmpsl
ja
sub
loope
push
mov
inc
outsl
xchg
movsb
int3
jb
popf
or
xchg
adcb
lods
cmc
ficomps
xchg
and
push
mov
xchg
scas
inc
gs
mov
shl
sbb
jmp
sbb
dec
sti
gs
xor
in
dec
push
jnp
jno
cli
adc
cwtl
enter
ja
adc
pop
je
jmp
push
jge
pop
jae
cwtl
dec
dec
xchg
std
rcr
andb
popa
pop
sbb
cmp
scas
jae
nop
xchg
bound
rol
pop
gs
inc
clc
imul
int
mov
movsl
adc
pop
push
dec
loopne
cli
push
arpl
out
jmp
mov
and
sbb
rolb
loopne
xor
incb
pop
mov
cwtl
ret
cmp
xchg
jl
das
popa
shl
ret
xlat
push
in
fidivrs
jg
shl
jge
loop
clc
dec
mov
jb
adc
add
jnp
gs
sub
scas
jge
bnd
sbb
roll
mov
pop
rorl
adc
ret
in
lret
popf
jl
popf
mov
inc
cltd
outsl
fcmovnu
cmc
cmpsl
mov
aad
or
push
cmp
cmc
mov
or
notb
add
lds
xor
mov
ret
mov
sub
rolb
xchg
pop
aam
push
or
pop
test
jns
xor
adc
jno
lods
mull
push
xchg
mov
outsb
adc
jne
imul
lcall
pop
or
test
add
mov
mov
and
sbb
sub
addr16
ljmp
pop
out
add
scas
stos
leave
repz
pop
add
ss
pushf
xor
mov
jno
jmp
jbe
cwtl
ja
or
push
cmp
call
mov
lcall
cmp
aad
sahf
lret
xor
insb
fistpll
add
jl
dec
inc
and
fistpl
xchg
xor
jbe
je
mov
scas
aas
xchg
addr16
loop
dec
icebp
lcall
jb
movsb
sbb
sbb
mov
inc
push
cli
iret
cmp
es
push
dec
cli
xchg
or
ret
push
adc
mov
into
jb
fwait
pop
loope
cmpsb
jmp
add
adc
mov
pop
cmp
insl
cmp
xor
inc
or
push
mov
inc
mov
ja
mov
pusha
mov
sbb
cmpsl
and
aas
scas
out
push
mov
mov
mov
mov
push
pop
push
jne
cmp
mov
cmc
mov
adc
mov
out
clc
rcrl
cmp
lret
pop
rol
and
and
cmpsb
fidivrs
test
mov
sarb
test
mov
shrb
outsl
jo
scas
in
rclb
add
push
cmp
in
inc
cmp
sahf
adc
inc
clc
or
in
inc
adc
sbb
jge
es
lea
imul
jnp
push
js
push
push
fidivrl
test
jae
adc
and
daa
dec
sti
push
add
jne
repnz
divl
fistps
or
dec
in
incb
sbb
ficompl
push
sahf
adc
cltd
pop
aad
cmp
popf
pop
in
add
mov
inc
popa
xor
loope
scas
adc
loopne
stc
mov
adc
pusha
ljmp
pop
pop
cli
outsb
outsl
sti
push
cmp
mov
jnp
push
mov
call
popa
iret
loope
xchg
lcall
jo
nop
push
ror
inc
in
js
ret
inc
lret
popa
pop
movsb
or
repnz
mov
les
xchg
mov
jo
add
dec
addr16
sti
xchg
in
xor
adc
mov
push
rcrb
ret
in
pop
push
lock
int
mov
aad
addr16
adc
and
inc
mov
fsubs
adc
ds
fcom
js
push
xchg
fistpll
xchg
inc
mov
popf
neg
sbbl
movb
push
and
test
mov
inc
add
loop
jp
ds
pop
clc
mov
das
cli
add
icebp
jg
je
mov
int3
call
jo
cs
pop
ficoml
push
shl
neg
das
mov
mov
pop
pusha
movsl
loopne
sbb
mov
outsl
xchg
mov
bound
mov
shl
out
push
xchg
popa
ret
push
inc
mov
mov
push
dec
adcl
mov
sbb
lcall
xor
mov
loope
lret
or
nop
jo
outsl
sub
fs
or
push
ja
mov
or
insl
rclb
paddsb
stos
test
pop
sbb
push
ds
xchg
sub
mov
and
sub
add
dec
scas
popf
das
mov
loope
push
jl
mov
or
mov
negl
add
std
jnp
xchg
les
fsubl
int3
iret
lret
movsb
xlat
fwait
mov
xchg
leave
pop
jmp
mov
mov
ret
mov
aaa
sub
push
cmc
sub
adc
xchg
outsb
test
sti
cmp
push
push
or
cmp
sbb
cmp
dec
scas
int
shll
pop
jnp
cmpl
add
out
and
adc
ficompl
jmp
sbb
scas
push
lock
pushf
and
icebp
pop
fstpl
pusha
pusha
stos
daa
lcall
fdivrp
add
pop
lcall
mov
into
pop
loope
sbb
clc
xor
lcall
enter
and
cmpsb
inc
adc
jno
push
outsl
jns
cli
adcl
lret
negl
jle
jecxz
jle
jge
mov
jmp
jp
lea
inc
dec
leave
popa
inc
sub
jmp
cwtl
aas
push
push
add
dec
into
popa
nop
bound
sub
or
call
xchg
pop
pop
enter
and
inc
mov
stos
inc
or
and
gs
mov
push
cltd
xchg
ja
sub
dec
or
jbe
es
jne
loop
arpl
mov
xor
clc
pop
dec
int3
sub
pop
enter
pop
mov
pop
push
in
jbe
jmp
inc
add
cmp
mov
cmp
xchg
xor
push
push
iretw
cmp
mov
cmc
mov
jl
les
dec
lcall
stos
js
cmp
mov
xlat
pop
add
repz
lds
aam
mov
jnp
out
movsl
ljmp
jnp
xorb
in
ret
mov
lods
stc
notb
mov
jmp
jle
dec
cld
mov
push
mov
mov
mov
jp
loopne
cmp
and
imul
test
or
push
das
ret
xchg
pop
mov
lret
xchg
adc
in
fs
lds
test
aam
mov
pop
jle
and
stos
pushf
sub
xchg
jne
cli
aad
fidivrs
scas
jbe
jge
out
and
pusha
pop
cmp
dec
mov
icebp
rcl
jg
inc
add
cwtl
add
lods
cmpsl
xor
xchg
adc
mov
enter
jle
add
and
fisubl
or
insl
pop
decl
sbb
dec
inc
mov
pop
mov
and
shlb
aad
imul
lea
mov
popf
inc
ljmp
lods
outsl
pop
ljmp
push
mov
jg
sub
addb
xchg
in
int
mov
and
inc
mov
jl,pt
mov
push
stos
push
mov
cwtl
xchg
ds
rcll
or
popa
inc
inc
outsl
push
out
lret
pop
jmp
sub
xchg
mov
fsubrl
mov
jle
pop
mov
jle
and
or
push
sub
xchg
int3
push
mov
jae
dec
push
in
jp
test
dec
or
decb
jno
xchg
pushf
cmp
movsl
in
sub
divl
bound
sbb
pop
xchg
clc
push
cmp
inc
jecxz
out
push
mov
ljmp
sub
mov
lods
in
mov
lds
movsl
ret
inc
in
fs
jl
cmp
movsb
sbb
mov
mov
jns
test
mov
cmp
dec
jl
js
and
mov
cmp
shlb
outsl
lcall
sub
xchg
adc
mov
jg
and
dec
and
jle
sbb
xlat
out
push
addb
mov
adc
data16
cmp
cmp
jge
scas
and
xchg
cmp
jl
imul
fistl
outsb
xchg
push
mov
pop
call
inc
stc
mov
lods
mov
mov
stos
push
pop
adc
es
cmp
or
mov
cmp
std
ss
pop
sub
out
pop
bound
lret
ret
fldcw
push
sub
pop
int
sbb
mov
subb
mov
mov
sbb
int
int
es
jecxz
mov
push
cwtl
or
pusha
and
in
xchg
sub
push
xchg
inc
lods
dec
or
lcall
jo
sub
pop
fiadds
lahf
push
cmp
icebp
pushf
mov
scas
sbb
mov
call
test
xor
in
adc
jne
or
add
mov
popf
dec
insb
adc
mov
sbb
stos
xor
leave
jns
sbb
popa
js
divb
sub
outsb
arpl
xor
pop
xchg
adc
out
mov
aam
sbb
insl
pusha
pop
fdivrl
je
jmp
sub
fdivr
push
iret
mov
shlb
xor
shrb
mov
insl
pop
lcall
or
dec
das
inc
test
and
cmpsl
cmpl
jg
lea
sti
mov
in
xchg
sbb
ds
ja
mov
sbb
sbb
inc
ljmp
xchg
call
adc
jbe
xor
mov
cmpsb
shll
fdivr
adc
test
xor
push
aaa
xchg
pop
or
hlt
cltd
cld
mov
or
jbe
add
xor
cmc
enter
loop
into
dec
lret
mov
stos
vpunpckhwd
mov
mov
jp
push
and
add
inc
sarb
test
mov
lock
pop
addr16
mov
in
sahf
mov
popa
lods
sbb
addl
mov
cmp
jle
dec
imul
cmp
xchg
mov
jne
add
and
out
mov
mov
int
mov
gs
lods
das
in
or
aas
adc
aam
mov
xorl
push
sbb
pop
les
dec
sbb
add
or
sbb
cmc
js
push
xor
xchg
scas
and
pushf
sbb
jmp
jb
mov
push
sbb
repz
mov
int3
adc
push
mov
adc
push
inc
and
sub
push
jo
icebp
and
movsb
hlt
int
in
aam
jge
xchg
add
out
add
fidivl
cmp
sub
and
pusha
and
mov
int3
sub
cmp
jnp
out
int
mov
das
ds
das
nop
out
fwait
movsl
xor
inc
loope
arpl
popf
mov
jmp
adc
inc
dec
push
cs
pop
sub
dec
or
inc
ret
mov
inc
dec
sbb
in
xchg
sub
and
xorl
in
xchg
push
ret
cmpl
hlt
fildll
stc
xor
add
cmp
pmullw
mov
mov
and
xor
cmpsb
sbb
mov
in
push
and
push
mov
iret
lahf
adc
inc
mov
imul
stc
gs
scas
mov
nop
xchg
add
arpl
insl
addr16
mov
sahf
cmp
adc
push
dec
not
clc
test
andb
mov
adc
xchg
jno
adc
mov
lahf
mov
mov
xchg
int3
aam
mov
mov
test
or
sahf
out
inc
cs
sub
jle
fwait
je
and
cmp
sub
jle,pn
sarl
ret
shl
popf
push
stc
add
xor
rcll
jle
movsl
lock
cmp
nop
xchg
pop
inc
int
ret
or
fisubrs
mov
call
mov
hlt
mov
aad
into
add
je
scas
scas
int3
fcmovbe
fiaddl
aam
int3
jge
dec
adc
lcall
add
fwait
cltd
jge
jb
out
aaa
daa
aad
and
cmp
in
cmp
cmp
cmpsb
add
sbb
jb
mov
test
xchg
sub
or
daa
ss
and
cwtl
lahf
aas
ja
or
js
mov
adc
push
xchg
enter
repnz
fwait
leave
pushf
pop
outsl
das
pop
mov
test
mov
shl
clc
popa
divb
fdivs
jmp
pop
imul
xchg
test
popa
jge
mov
jp
mov
lcall
repz
xor
dec
call
adc
xor
lret
mov
imull
into
sbb
cmp
popa
js
test
outsl
inc
lea
sub
pop
or
xor
sub
fbld
ja
or
imul
jp
xlat
inc
lods
pop
inc
arpl
inc
in
cmpsb
loop
add
je
xor
xchg
mov
mov
xor
out
and
out
mov
icebp
aas
out
pop
std
fadd
mov
sbb
sahf
and
cmp
faddl
adc
int
popf
popf
adc
mov
xor
dec
movl
pop
xlat
add
push
lcall
pushl
dec
xor
xchg
add
mov
adc
mov
rcr
pop
pop
faddl
shrb
add
cmc
inc
movsb
cltd
push
or
and
sarb
push
and
in
push
adc
and
sbb
sbb
dec
or
test
orl
inc
scas
push
jae
in
pop
add
dec
mov
cmpsb
mov
sbb
addl
movsl
mov
scas
stc
mov
cmp
push
stos
mov
push
in
xchg
aam
push
jbe
shr
ss
pop
jp
insb
fidivs
aad
fstps
inc
pop
cmp
fcoms
add
sar
stos
sub
and
mov
notl
add
push
fst
xchg
mov
arpl
mov
or
ljmp
push
sahf
int
fidivl
lods
jo
or
jle
sbb
cltd
loope
pop
inc
pop
ljmp
push
hlt
aaa
mov
jle
and
es
push
daa
lcall
dec
je
lds
push
pop
or
lock
in
popa
test
lds
xchg
dec
out
and
xchg
mov
cmp
filds
adc
aas
clc
fildll
pop
add
popa
or
ret
pop
mov
mov
mov
mov
sub
mov
mov
mov
das
pop
aad
sub
scas
mov
stos
add
sbb
insb
outsl
sbb
sub
movsl
test
es
insl
es
lahf
insl
jp
push
add
lcall
cmpsb
cmp
mov
pop
xor
lret
push
pushf
sub
faddp
xchg
add
cmp
scas
leave
or
xor
subb
cmpsl
inc
sbb
insl
loop
cmpsb
sbb
outsl
pop
insl
ficoml
icebp
and
inc
pop
sbb
std
cmovg
dec
movsl
lret
imul
fs
imul
mov
push
xlat
ret
adc
out
adc
imul
addr16
cs
icebp
cmpsl
push
lods
dec
jne
fdivs
inc
xchg
test
addr16
test
lea
out
xchg
call
add
shrb
jge
es
mov
sahf
stos
adc
push
lock
jle
out
shll
jno
or
sbb
aaa
xlat
test
and
addr16
dec
jb
adc
mov
adc
push
sub
cmp
mov
cltd
repnz
mov
iret
jbe
in
pop
or
mov
sbb
push
sbb
jmp
cmc
adc
ret
jle
sbb
call
or
xchg
fistpll
inc
popf
ss
lret
sub
das
lods
or
roll
add
or
pop
lcall
outsb
jns
addr16
test
ljmp
pop
movsl
mov
sti
dec
jge
pop
aaa
jne
inc
les
jmp
rclb
adc
aaa
popa
test
jge
xor
inc
cmp
jg
orb
add
mov
iret
and
imul
lret
arpl
cli
and
cltd
pop
bound
adc
sub
and
repz
push
lock
insl
aaa
int
cmpsb
push
fstpl
sar
push
leave
pop
mov
add
mov
push
popf
aam
xor
jb
popf
fsubl
imul
inc
add
sub
out
or
push
mov
into
jno
fists
adc
arpl
or
shrl
xor
add
sbbl
push
enter
jecxz
jno
jae
mov
sub
adc
cltd
mov
rcrb
lea
cli
cmc
pop
fcompl
pop
ljmp
sub
adc
in
mov
ds
out
js
lret
xor
mov
dec
or
mov
ss
out
pop
loopne
pop
cld
jno
outsl
faddp
stos
jg,pt
jne
push
out
bound
pop
lock
cmp
inc
cmc
and
mov
lcall
add
rorb
jp
sub
dec
pop
outsl
jb
scas
je
stc
xchg
js
mov
out
insl
stc
pop
push
movsl
out
mov
mov
push
pop
jg
mov
rorb
mov
push
cmp
aas
sbb
gs
sbbl
and
add
fistl
pop
sub
sbb
add
add
cli
int
cmp
xchg
mov
mov
sti
add
add
mov
xlat
sbb
movsl
enter
and
gs
sbb
cwtl
loopne
daa
add
and
popf
vmread
push
leave
and
sub
xchg
xchg
sbb
xchg
push
jle
aas
and
cmpsb
outsl
mov
pusha
inc
clc
mov
out
xchg
hlt
sbb
lea
adc
xor
icebp
push
popa
icebp
je
int
push
add
test
pop
int3
sbb
xor
fbstp
xor
les
ret
jge
sbb
mov
arpl
fcoms
inc
inc
sub
stos
popa
pusha
push
add
sti
xchg
fdivrl
mov
push
cwtl
cld
and
mov
jle
inc
sub
movsb
shlb
xchg
cs
xor
fsub
iret
jne
adc
push
fnstcw
or
pop
stos
inc
xor
jno
xor
mov
stos
mov
push
pop
decl
popf
push
push
in
sbbb
addr16
addl
nop
outsl
pushf
les
rdmsr
mov
dec
push
push
loop
and
lcall
stos
cltd
jnp
dec
pop
scas
pushf
rcl
es
es
sub
data16
fbld
cmc
mov
push
add
xchg
pop
adc
mov
xor
out
cmpsl
ret
xor
lret
jne
int3
imul
or
dec
pop
xchg
pop
nop
imul
sbb
clc
gs
xchg
dec
xor
fwait
data16
lahf
cmp
or
sub
mov
subb
push
inc
outsb
jl
cltd
adc
in
in
repz
nop
movsb
cmc
push
pop
dec
ds
in
add
push
cmp
jb
out
push
nop
in
icebp
test
out
dec
rcll
jbe
test
cmp
mov
loope
into
push
push
jno
mov
stc
jge
adc
pop
push
mov
mov
lods
adc
mov
in
adc
dec
insl
jo
aaa
lret
xlat
mov
mov
je
sti
out
and
fsubr
adc
shrb
lea
movsl
sbb
cmc
icebp
mov
inc
lock
mov
mov
scas
inc
mov
je
push
cltd
int3
stc
fimuls
shl
pop
xor
sbbb
cld
leave
and
pop
inc
sarl
das
xchg
inc
out
je
mov
dec
in
and
mov
cmc
xorl
cwtl
jmp
lods
lcall
mov
sub
fildl
mov
or
daa
or
cmp
lock
mov
lret
pushf
mov
sbb
stos
jne
xchg
mov
sbb
movsb
ljmp
jle
das
or
lock
jecxz
in
fisubrl
fs
push
gs
jmp
push
adc
cmpsb
mov
int3
stos
or
cmpsl
xor
jbe
lods
xchg
out
sbb
jo
test
arpl
fwait
and
in
push
in
jbe
adc
jmp
xchg
hlt
xchg
and
data16
cmp
jecxz
inc
or
mov
dec
jne
dec
mov
mov
cmpsl
neg
add
popf
rorl
aad
fcoml
mov
mov
mov
mov
ljmp
dec
sub
sub
pop
pusha
inc
xor
jo
movsl
jae
xor
xchg
or
pop
inc
lock
sub
xor
lock
mov
jmp
xchg
cmp
imul
insl
test
sub
pop
sub
xchg
sti
lods
inc
cmp
xchg
mov
imul
out
popa
cmpsb
pop
lods
or
leave
fstps
add
pop
ret
bound
sub
mov
imul
hlt
xchg
xor
pushf
sbb
xchg
xlat
xor
pop
dec
pop
add
xchg
cmp
jnp
push
mov
movsb
leave
aaa
or
inc
jecxz
jmp
clc
loope
or
xchg
scas
jae
pop
pop
inc
mov
xchg
mov
int
mov
out
jecxz
in
iret
or
cltd
jp
int
push
shll
cmc
xorl
fdivrl
or
iret
inc
lea
in
cmpl
cs
jae
xchg
cmp
mov
xchg
inc
or
jae
adc
pop
cmc
mov
or
mov
push
scas
add
int
mov
mov
lds
pop
xchg
or
push
or
add
cli
adc
jge
dec
divb
idivl
movsl
in
sbb
xchg
hlt
push
xchg
push
or
loopne
mov
cli
mov
clc
inc
scas
movsb
dec
or
pop
out
pop
mov
sahf
mov
mov
mov
sbb
cmp
add
popa
pop
in
cmp
jmp
sbb
ja
push
mov
outsb
inc
out
sbb
hlt
sbb
inc
out
imul
decb
xor
js
rcrl
fdivrl
sub
ljmp
push
in
sti
pop
push
push
dec
and
clc
stos
add
shrd
jns
push
fcmovne
cmp
fistpll
data16
add
inc
adc
jge
dec
xchg
add
frstor
xor
ret
mov
xchg
xchg
outsb
loope
roll
push
sub
push
movsb
push
lods
mov
jns
inc
add
pushf
pop
rcl
lret
mov
mov
lds
add
cs
mov
jmp
mov
aaa
insb
or
nop
scas
imul
xchg
jge
leave
lods
int3
mov
and
cmp
mov
outsl
jo
fisttpl
shrb
mov
push
out
shrl
sbb
arpl
fdivs
sbb
xor
lods
rcl
jne
data16
gs
into
pop
jecxz
stos
cmp
pop
jp
mov
rcr
jb
push
xor
and
icebp
mov
pop
or
jg
sar
push
mov
sub
and
subb
mov
int3
call
inc
icebp
inc
stos
jnp
xchg
cld
aam
test
pop
pusha
mov
push
je
mov
or
pushf
xchg
aam
mov
nop
and
andb
repnz
ds
mov
ss
or
sarl
es
xorb
je
mov
arpl
lods
ds
pop
sub
mov
dec
lret
mov
mov
push
pushf
imul
in
push
cmp
arpl
inc
inc
cmp
xchg
inc
add
cmp
sbb
cld
pushf
push
xchg
sahf
fcmovu
push
xchg
push
xchg
mov
and
mov
or
hlt
jp
xor
jbe
xlat
sub
pop
out
jp
push
cmpsb
mov
jnp
bound
leave
notb
mov
jmp
xchg
add
mov
lret
dec
jg
pop
popa
xor
cmp
jns
lret
loope
jl
mov
xlat
scas
mov
mov
mov
aad
mov
and
in
scas
lret
ret
mov
mov
stc
test
or
mov
xchg
push
xchg
mov
jecxz
fnstsw
jl
out
aaa
push
cld
inc
inc
negl
popa
movsb
pusha
jne
fldenv
loopne
lahf
fmuls
imul
fstps
xchg
adc
insl
dec
ljmp
sub
xor
jl
pop
in
mov
fidivrs
sahf
push
sar
shr
imul
jmp
int3
call
mov
bound
xchg
add
rcrb
js
pop
add
inc
cmp
cmpsb
jecxz
dec
mov
sub
and
push
dec
js
test
cmpl
leave
cmc
inc
scas
repz
push
push
stos
sbb
mov
rorl
and
je
cmpsb
jbe
xchg
dec
out
mov
jb
test
icebp
outsl
out
xchg
loop
or
mov
enter
loopne
or
dec
lcall
addl
mov
int
mov
cmp
pop
adc
test
mov
dec
pop
pop
dec
test
dec
sbb
dec
push
fwait
iret
test
add
jne
dec
mov
jns
and
loop
sbb
int3
cmp
and
jno
in
arpl
arpl
in
push
out
fs
jmp
mov
lcall
mov
jge
sub
mov
sbb
pushf
inc
cmc
cltd
pusha
push
inc
orl
xchg
mov
adc
sbb
inc
and
int3
and
dec
inc
fwait
mov
lods
lret
ds
xchg
push
jae
xchg
aaa
dec
push
jmp
adc
xchg
xchg
fcmovu
and
fstpl
mov
aad
call
jno
xchg
pop
cli
ret
aam
add
mov
popa
aam
ficoml
int
mov
add
pop
in
mov
xchg
imul
push
xor
mov
fdivl
mov
adcb
or
xor
cmpsl
popf
jb
pop
nop
xor
imul
outsl
sahf
inc
pop
mov
push
jle
test
pop
movsb
pushf
cli
ss
out
std
lods
push
lcall
jmp
sub
push
andl
sti
test
jb
int
dec
punpckhwd
gs
ja
push
or
in
cmc
sbb
jne
or
dec
push
sub
xchg
mov
cmc
jne
or
push
push
jnp
sbb
jmp
test
call
pop
push
dec
nop
shlb
call
iret
or
dec
and
adc
add
mov
sbb
xor
rolb
jmp
ja
push
movsb
xor
popa
xchg
add
fcoml
jns
push
sub
pop
cli
xchg
or
aas
xor
ftst
ds
inc
lahf
mov
sbb
mov
sbbb
push
pushl
xor
or
add
pop
sbb
xchg
adc
or
push
pop
hlt
mov
cli
mulb
arpl
sub
add
xor
xor
addb
sbb
pop
sbb
mov
xor
call
xchg
jae
subl
ss
mov
add
inc
repnz
push
mov
cmc
mov
xor
bound
loopne
imul
fists
mov
push
enter
div
cltd
in
jo
adc
jbe
orl
js
pusha
fwait
xor
push
and
mov
or
pushf
pop
rcl
pusha
mov
jecxz
fistps
bound
addr16
adc
fists
pop
add
aas
xchg
push
pop
pop
jmp
lods
js
pop
sub
push
in
ja
cmp
adc
xchg
dec
cltd
movsb
cmp
scas
insb
sbb
adc
jnp
mov
add
jp
sub
leave
xorb
mov
ret
js
inc
je
aad
in
adc
pop
fldt
adc
mov
ret
hlt
cmpsl
je
add
mov
in
test
adc
and
xor
int
pop
cmp
xrelease
cmp
mov
jecxz
push
sub
sbb
mov
jb
iret
push
push
dec
data16
xchg
mov
and
repz
add
add
das
adc
push
or
mov
scas
es
sub
sub
or
mov
shlb
dec
xor
es
adc
cli
mov
sub
je
mov
jbe
aaa
ret
into
and
mov
mov
sub
popf
push
pop
jb
mov
jne
xor
and
stc
in
arpl
push
mov
push
jge
jge
adc
xlat
pop
loopne
fcmove
imul
xchg
aam
jo
fwait
or
jb
mov
xor
pusha
dec
fnstsw
rcr
mov
xor
int
push
arpl
into
mov
pop
fstl
out
lods
mov
mov
dec
sbb
rorl
xchg
fldt
xchg
mov
dec
xlat
in
je
scas
mov
adc
pop
popa
jno
pop
aas
mov
iret
push
xchg
mov
fwait
lea
adc
jbe
xchg
push
xor
out
mov
adc
cmp
in
sbb
xor
xchg
gs
imul
bound
mov
cmp
cmp
add
pop
sub
jne
pop
mov
sub
lahf
lods
je
stc
adc
leave
mov
push
cmp
pop
cmp
lea
fisubrs
push
add
pop
test
add
call
push
pop
adc
loope
fldcw
jne
xchg
stos
mov
mov
std
jnp
xor
pushf
adc
jmp
data16
or
xchg
mov
cld
add
cmp
fsubr
push
ja
adc
test
lods
jecxz
dec
fisttpll
sbb
pop
pop
pop
pop
fadd
mov
push
cmp
in
fs
lcall
add
std
jns
rcll
push
cmpsb
ljmp
adc
shl
lret
or
inc
out
xor
mov
lea
push
adc
pop
jmp
sbbl
inc
cmc
mov
in
push
int
cltd
adcl
repnz
lret
add
mov
jnp
and
mov
inc
stos
call
push
repz
add
fiaddl
fs
cmpsl
push
xchg
test
popf
add
test
outsb
mov
xor
fisubrs
xor
repnz
and
or
std
test
gs
roll
pop
pop
dec
ret
incl
or
std
and
pop
sub
mov
mov
rcll
push
loop
pop
and
pusha
lods
jp
stos
xchg
cli
fcomp
lock
les
or
out
xchg
repnz
jnp
cmp
adcl
push
stos
mov
sbb
lds
mov
and
jns
cmp
inc
dec
aam
sub
fs
mov
ret
fwait
rorb
mov
push
jp
mov
decl
pushf
and
ds
call
jle
cmpsl
std
or
ret
shlb
ret
cmpsb
jns
mov
push
xchg
leave
jnp
rolb
adc
xchg
jb
int
mov
fcoml
pop
gs
into
lcall
pusha
mov
aam
rcrb
aas
sbb
mov
mov
cs
jbe
xchg
mov
mov
add
nop
pop
or
pusha
or
into
mov
sbb
adc
xor
add
int3
test
rorl
or
lock
shrb
xlat
jmp
gs
sub
or
sub
dec
mov
mov
mov
stos
and
or
mov
ljmp
cmpsb
enter
xor
xorb
or
mov
rol
loope
push
push
jp
mov
xor
sbb
outsl
lcall
xor
enter
scas
stos
push
gs
inc
sarb
cltd
nop
ds
cli
adcl
mov
rep
aas
adc
adc
pushf
or
imul
pop
jns
packssdw
cmp
xchg
cmp
push
sbb
nop
mov
push
sbb
mov
mov
ficompl
outsl
orb
jns
add
movsl
in
fisttps
mov
cmp
popf
pushf
incl
ret
pop
push
push
and
jno
hlt
inc
xchg
adc
jmp
dec
inc
inc
add
or
ret
pop
mov
push
in
sbb
or
sub
pop
lcall
inc
cmpsb
push
montmul
cmpsb
inc
repz
imul
push
mov
push
push
leave
jge
xchg
sbb
jo
addb
test
outsb
nop
in
stos
fwait
mov
imul
lcall
and
icebp
rorl
sbb
xor
sbb
push
int
pop
sub
push
mov
loopne
mov
or
cmpsb
ja
mov
mov
mov
mov
sub
and
mov
sub
jae
inc
cmc
aad
xchg
outsl
or
jne
jbe
mov
fs
imul
xor
sbb
pop
xchg
jno
jecxz
lods
dec
xorl
loope
pop
stos
jno
sub
ss
pop
dec
pushf
jecxz
lods
imul
xchg
cmp
xor
rclb
stc
push
addr16
jmp
or
push
scas
fs
dec
or
cmp
in
xchg
jge
pop
mov
fisubrs
cmc
dec
insb
adc
ds
dec
inc
test
pop
sbb
out
adc
cs
sti
or
test
inc
out
xchg
orb
xchg
or
orb
ret
popa
fsubr
repz
jg
addr16
xchg
inc
sti
fdivs
push
push
adc
jecxz
inc
inc
inc
lea
push
inc
stc
pop
add
inc
enter
inc
enter
mov
inc
mov
lods
sbb
push
daa
cmp
lods
mov
clc
add
pop
movntps
dec
push
mov
adc
sbbb
imul
cmp
dec
cmpsl
mov
xor
sub
xor
pop
stos
das
or
out
cmp
fstps
cmpsb
cld
lahf
mov
js
cltd
xlat
push
stos
adcl
mov
ss
es
stos
aad
add
add
and
mov
aas
cmp
loopne
imul
mov
fucomi
daa
cmp
or
push
sbb
dec
addr16
inc
sbb
mov
in
mov
push
and
xchg
mov
cmp
in
add
je
mov
pop
mov
cmp
push
xchg
xor
aam
bswap
icebp
mov
fsubrs
xor
lcall
int
dec
jmp
jns
test
xchg
xor
repnz
jge
adc
dec
pusha
sub
dec
pop
mov
pop
sbb
xor
int
test
leave
and
add
push
mov
jecxz
fstpt
cmc
cmp
mov
sub
out
pandn
mov
pop
cmp
arpl
ljmp
add
sarb
mull
addr16
cmp
clc
sub
xor
stc
arpl
shll
cli
lods
mov
int
xchg
or
fwait
cmpsl
sbb
dec
dec
push
pop
mov
movsl
push
mov
stos
cvtps2pd
int
js
bound
scas
add
out
xchg
mov
ffree
call
stc
sub
inc
push
shrb
in
pop
shll
jns
fistl
mov
adc
lock
cmpsb
in
das
inc
dec
repz
js
xor
js
push
mov
rcl
jns
call
out
mov
pushf
das
mov
jae
mov
mov
icebp
ret
test
arpl
loope
add
mov
jnp
and
mov
push
xchg
or
mov
fdivrp
es
mov
fildl
dec
cli
cs
fsub
lock
push
adc
sbb
dec
xchg
inc
inc
and
jno
dec
addl
xchg
nop
cmp
sub
and
xchg
call
mov
popf
decb
out
les
mov
test
call
push
dec
addb
in
bound
js
leave
jg
fsubs
jne
in
cwtl
sub
lret
pop
movd
push
push
cmc
xchg
fstpl
in
xchg
dec
dec
cwtl
ficompl
mov
data16
out
mov
jl
fidivrl
loop
dec
ja
mov
shrl
popf
loopne,pt
cld
mov
mov
mov
cwtl
dec
fmuls
xchg
aad
movsb
add
sub
cs
leave
jp
dec
scas
mov
sbb
sub
fisubrl
mov
bnd
sub
lahf
xor
scas
jle
push
lods
fildll
js
std
imul
sub
xchg
rorl
test
mov
repnz
sbb
leave
adc
stc
fmulp
int
push
jp
xor
orl
mov
jae
add
out
xor
mov
push
scas
and
mov
push
cltd
movsb
fwait
outsl
jne
inc
in
data16
mov
call
sbb
call
ret
cmp
xorb
rclb
adc
xchg
inc
jecxz
movsb
shl
testl
out
mov
iret
xchg
scas
loop
cmp
mov
pop
cmpsb
iret
sub
ljmp
xchg
inc
int3
aad
test
popa
mov
aaa
pop
jle
push
adc
lcall
push
jl
xor
into
pushw
cmp
push
lret
xchg
lock
call
pop
sti
sahf
sub
stc
jno
in
jecxz
in
jl
and
mov
jb
jmp
pop
hlt
sbbb
mov
xor
sub
rclb
lea
scas
push
pop
scas
dec
dec
jo
jl
icebp
test
lods
mov
lock
mov
cmpsl
inc
in
lock
mov
pop
push
mov
cmp
rolb
push
insb
or
fisubrs
inc
dec
adc
or
int3
in
lea
or
and
sbb
xchg
push
xor
ja
sbb
mov
shlb
xor
adc
fisubl
jle
pop
ds
and
jg
aaa
movsb
adc
push
jae
mov
pushf
pop
and
push
inc
cmp
sub
fwait
andb
mov
nop
pop
xchg
mov
lods
fcompl
pop
push
out
mov
jecxz
fsub
mov
fimull
mov
mov
pusha
jo
scas
xchg
jle
pop
adc
and
mov
jns
sub
jecxz
into
add
nop
and
xchg
pusha
lcall
int
clc
mov
es
imul
mov
or
jmp
shl
fwait
ret
cmpsb
das
adc
xchg
int
push
rol
xor
nop
icebp
or
in
mov
in
aaa
fimull
sbb
sub
add
xchg
push
iret
inc
dec
xor
mov
inc
sarb
clc
nop
jno
mov
jb
mov
lds
add
aaa
aas
add
test
cmp
icebp
les
xor
dec
bound
lods
bound
in
fldl
mov
repnz
loop
mov
adc
sbb
test
push
mov
cltd
jb
inc
mov
xchg
or
in
adc
pushf
ds
add
push
mov
push
test
cli
cmp
or
repz
cwtl
cmp
call
fnstenv
out
dec
in
stc
adc
insb
or
das
pusha
movsl
push
addb
pop
and
mov
out
mov
mov
cwtl
mov
mov
into
or
pushf
ret
jl
adc
mov
dec
pop
lret
call
add
xchg
enter
lahf
fcmove
mov
push
lock
inc
pop
pop
mov
fxch
jnp
scas
pop
xchg
push
pop
xchg
xor
ret
les
and
xchg
int3
cltd
jbe
xchg
or
mov
mov
or
adc
push
push
mov
gs
jno
call
je
add
movb
popl
jnp
in
gs
mov
popa
jp
fdivs
test
mov
cmp
and
push
mov
ret
stc
std
sub
cs
call
sub
push
std
dec
push
cld
add
add
je
sbb
lds
fadd
in
xchg
push
lcall
dec
adc
mov
test
stc
inc
in
insb
addr16
pusha
in
pop
cmp
fiadds
adc
ss
lea
and
inc
pushf
push
orl
pushf
mov
daa
dec
mov
xchg
ds
outsb
mov
jl
sub
fistpl
sub
mov
xchg
mov
sbb
movsb
aaa
jbe
iret
pop
mov
popa
and
out
inc
popa
sbb
cld
mov
push
dec
and
or
dec
cmpsb
sub
jns
xchg
sbb
push
push
negl
mov
jmp
pop
dec
test
inc
inc
xor
cmpsb
cld
cs
and
dec
lock
sub
int
push
ss
imul
nop
add
pop
push
pop
pushf
arpl
fstp
call
mov
out
ret
sub
stos
sub
sbb
sub
push
mov
xchg
pop
insb
lret
sbb
aad
dec
shlb
jbe
push
jns
je
sbb
adc
sarl
repnz
sub
or
adc
lcall
sub
jmp
pop
aaa
adcl
es
nop
das
pusha
mov
xchg
in
mov
hlt
xchg
and
jb
cmpsl
pop
and
mov
cwtl
pop
pushf
sub
mov
mov
cwtl
mov
iret
stc
pop
lds
push
js
rcrl
sbb
sub
add
fimull
jo
push
dec
lods
push
adc
std
and
jne
fidivrs
xor
das
test
pushf
dec
loopne
mov
int
adcb
jb
loope
cmpsl
scas
xor
and
push
add
filds
add
and
inc
and
repnz
adc
iret
jno
sbb
inc
mov
rcrb
pop
movsb
cmp
mov
sbb
fs
cmp
mov
out
mov
gs
rorl
cs
aam
and
mov
mov
xor
lods
mov
bnd
and
jecxz
inc
or
icebp
bound
jno
lods
mov
xchg
cmp
outsb
cwtl
jbe
ds
fldenv
xchg
mov
call
movsb
mov
dec
mov
fnstsw
std
aad
adc
jecxz
sub
fildl
or
mov
mov
stos
sti
outsl
fs
lret
xlat
js
ss
and
bound
jmp
mov
cli
add
lock
in
xchg
ficoms
jmp
add
sahf
mov
out
jmp
iret
xlat
inc
std
imul
in
pop
insb
jns
dec
push
test
int
out
aas
cmp
lcall
cmp
and
push
or
lret
punpckldq
mov
leave
push
cli
xor
mov
lds
cld
push
and
cwtl
xchg
jne
pushf
daa
sbb
fimuls
lock
mov
cwtl
lcall
cmp
mov
dec
cmc
push
clc
cli
mov
je
add
add
pop
jle
test
cli
push
mov
or
or
push
std
leave
push
loopne
pop
mov
ret
dec
fcmove
cmp
add
pop
xchg
xchg
imul
mov
dec
sub
push
cltd
mov
jge
push
shll
pop
or
push
xor
jle
shlb
dec
and
lahf
popf
mov
cmc
lods
icebp
enter
cmp
aas
add
sub
or
mov
aas
ficomps
jl
push
ret
popa
push
ja
popf
cmp
loope
in
je
imul
and
mov
addb
loope
inc
lods
aaa
mul
sbbl
push
in
jno
aaa
mov
xchg
jno
xchg
push
sbb
stc
jno
inc
mov
enter
sarl
iret
nop
xor
divb
add
or
or
push
xor
aas
inc
and
das
mov
inc
jno
arpl
add
mov
rep
inc
mov
mov
sbb
lods
sub
sti
leave
data16
sub
push
bnd
sbb
sub
stc
nop
add
cmpsl
cs
or
cmp
sub
xchg
ret
xlat
push
mov
mov
ja
cmp
and
add
lret
dec
scas
cli
in
out
out
lods
mov
cmp
insb
rcrl
int3
mov
xlat
aad
pop
xor
jl
fsubrl
inc
xchg
jp
jecxz
adcl
into
testb
cli
imul
xchg
xchg
pusha
aaa
jbe
sbbb
add
xchg
lea
add
xor
out
mov
lcall
or
cmpsl
inc
mov
dec
fs
iret
lret
fisttpl
adc
divl
mov
inc
call
sbb
dec
push
mov
pop
aas
lahf
ss
gs
repnz
add
lods
mov
mov
data16
js
pop
pop
inc
pop
sarb
jg
and
insb
mov
cmpsb
test
push
or
cmp
push
addb
movsl
cmp
pop
iret
call
mov
xor
adc
sbb
fisubs
in
ljmp
roll
ret
mov
aaa
hlt
mov
push
push
xchg
pop
mov
dec
outsb
lret
testl
fsubrs
sbb
push
stos
mov
repz
rcrb
icebp
js
jnp
lock
test
and
stc
xor
push
mov
mov
popf
and
jp
jbe
mov
or
push
and
rcrb
mov
imul
inc
clc
inc
mov
push
imull
pop
loope
aam
iret
jne
xchg
test
jne
sub
es
jae
dec
lods
dec
and
pop
fnstenv
sbb
push
pushf
fwait
mov
es
dec
adc
pop
xchg
xor
adc
or
insb
mov
adc
aam
inc
jb
mov
out
loopne
icebp
cld
nop
fs
add
sub
lock
pop
loopne
leave
setp
or
inc
jbe
repnz
jl
subl
mov
in
xchg
push
insl
push
sti
fsubl
lods
ja
ja
aam
mov
in
pop
add
pop
mov
gs
leave
sub
mov
in
cmp
mov
add
arpl
out
mov
cmpsl
daa
outsl
repnz
push
mov
cmc
icebp
push
push
sbb
jne
xlat
test
cmp
push
push
push
popa
cmp
push
xor
sub
in
adc
sub
push
fucomip
ret
inc
sub
and
mov
and
mov
aad
xchg
cmpsb
bound
mov
gs
lahf
xchg
cmc
aam
mov
stos
pop
and
andl
das
push
mov
insl
out
mov
mov
mov
mov
aam
pushf
sbb
adc
pop
imul
jg
insl
cmpsb
lds
cmp
gs
hlt
or
pop
dec
and
lret
addl
mov
shll
loopne
pop
mov
popa
sbb
test
dec
idivl
xor
call
adc
sub
idivb
cltd
add
cmp
in
fucomip
cmp
and
dec
int
not
xor
rcrl
sub
pusha
xchg
jmp
pop
or
adc
dec
cmc
add
dec
or
mov
pop
pop
xchg
xchg
sub
add
inc
addb
iret
pop
xchg
lock
add
fstpt
incl
sbb
cmpl
in
mov
inc
sub
mov
add
push
in
mov
mov
rcr
popf
xor
imul
sbb
xor
out
enter
jecxz
and
jle
sbb
pop
adc
std
push
cmp
jb
add
sbb
jnp
call
into
xchg
aas
pop
scas
lret
push
ljmp
or
ficoms
sub
mov
push
inc
pop
push
in
jo
pcmpgtb
fisubl
pop
push
cmc
cmpsb
pop
inc
add
outsb
lcall
dec
or
sbb
out
cmp
or
sub
mov
xchg
into
jmp
repz
mov
mov
dec
ret
call
aaa
inc
dec
orl
sbb
dec
lea
lcall
fcompl
xchg
movsl
xor
je
and
mov
mov
in
jno
addr16
adc
sub
xor
je
cmp
dec
sub
xchg
push
adc
roll
aaa
cwtl
adc
cmp
dec
sub
inc
pmaxsw
movsb
xor
mov
or
insb
clc
inc
push
mov
stc
call
xor
test
pop
add
adc
xor
mov
jne
repnz
xor
push
mov
mov
enter
jg
pop
aas
inc
ljmp
pop
xor
divb
pop
sbb
add
xchg
daa
push
repnz
cmpsl
jo
int
adc
shrl
sub
lret
ss
nop
sti
push
outsb
mov
out
push
push
test
or
mov
dec
add
add
icebp
lret
mov
lods
jne
subl
int
popf
jae
out
mov
nop
repnz
stos
jmp
pop
push
dec
inc
cli
push
jle
pop
inc
or
jo
xor
xor
push
mov
pop
adc
cld
enter
cmp
es
mov
outsb
outsb
push
fwait
pop
insb
add
pop
xchg
dec
adc
jb
popa
call
sub
dec
xchg
out
cmp
add
jmp
fidivrs
xchg
mov
sbb
cs
aaa
arpl
movsb
mov
lret
mov
inc
sub
int
xchg
push
mov
in
pop
adc
das
push
sub
test
incl
lods
inc
test
add
xchg
sahf
pushl
out
fisubrs
or
mov
or
fiaddl
clc
xchg
in
cmpsl
sub
xchg
pop
mov
fsubr
inc
pop
sar
push
cltd
stc
int
mov
ds
neg
sarl
mov
pop
xchg
sbb
nop
add
jno
fsubp
xchg
jle
out
pop
and
inc
cli
mov
sahf
loop
fwait
dec
jmp
sub
mov
dec
insl
pusha
inc
push
fcoml
sub
push
push
add
call
mov
jae
fcoml
int
dec
aaa
sub
js
in
out
js
cmp
iret
inc
jo
sahf
aam
push
pop
pusha
mov
cmp
arpl
lods
outsb
adc
scas
jb
jae
in
repz
and
lcall
arpl
pushf
cmovno
xchg
out
call
lret
roll
and
pop
into
lahf
bound
stc
rolb
bound
pop
test
push
imul
inc
dec
mov
aas
inc
sti
pop
sbb
std
sarb
movsl
sbb
xchg
jmp
lock
outsb
xchg
adc
cmp
jmp
jbe
loopne
ljmp
fnstenv
push
fstps
and
push
push
stos
les
and
movsl
push
test
dec
ret
popf
imul
imul
inc
pushf
add
dec
xor
sti
dec
pop
sub
xlat
mov
mov
or
nop
mov
movsl
xlat
xchg
jns
jns
repnz
test
jmp
jle
subb
idivl
lods
xor
fwait
inc
xor
arpl
arpl
addb
jle
fmuls
mov
movsb
lods
in
sub
repz
loope
fcmovbe
pop
ficomps
out
dec
inc
sti
fmull
fwait
push
shll
push
or
xor
jno
push
insl
add
cli
or
insb
jg
bound
mov
and
xchg
rcrb
ja
mov
ret
mov
movsl
sbb
sbb
cltd
mov
push
nop
sub
bound
fdivr
pop
and
push
dec
sbb
sbb
cmp
pop
hlt
mov
out
add
dec
cmpsl
fstpt
scas
cmpsl
subl
rclb
jecxz
testl
push
and
inc
repz
jl
push
pop
scas
add
mov
jbe
adc
ljmp
fisubs
jmp
lcall
orl
or
dec
outsl
cli
adc
xor
cmp
xchg
adc
mov
adc
push
ret
sti
shlb
mov
mov
insb
jb
sbb
aas
test
jne
xchg
aad
cmp
jnp
pop
jne
mov
pop
jg
push
ja
test
push
cmp
fsubs
test
sarb
jno
sbb
fbstp
loopne
scas
adc
push
jge
push
mov
push
xchg
hlt
dec
inc
dec
sbb
mov
out
rcrb
and
dec
xchg
pop
testb
push
jno
ja
jge
pop
mov
fnstcw
jae
push
push
imul
add
sahf
ja
sbb
cmpsb
ljmp
das
in
mov
aaa
adc
js
jle
mov
out
cli
rolb
cmpsb
js
movsb
xor
jl
mov
ret
xchg
outsb
sahf
adc
mov
nop
ss
push
ficoml
popa
or
cli
jmp
loop
sbb
jecxz
inc
dec
jb
fwait
mov
js
lret
in
pop
fs
adc
and
mov
or
dec
sub
cli
adc
ficoms
les
push
mov
dec
sbb
and
dec
cmp
lock
push
inc
add
cmpsb
ror
inc
pushf
dec
adc
shrl
inc
mov
dec
push
outsl
mov
popa
jbe
sbb
cmp
mov
mov
out
test
dec
add
ficoms
mov
in
fimuls
or
push
push
aaa
jg
lods
jae
pop
clc
dec
xor
push
pop
adc
push
ret
mov
fnstenv
inc
and
jmp
mov
icebp
and
xor
mov
fistpll
test
in
stos
pushl
or
repnz
leave
pop
mov
xor
jmp
sub
mov
loope
arpl
inc
int3
out
cmpsl
pop
pop
jbe
popa
cmp
cmpsl
or
lds
inc
int
ret
lods
sti
je
jo
adc
hlt
mov
adc
pcmpgtb
sub
and
scas
xchg
mov
xor
lock
pop
ss
mov
push
rcrb
jns
mov
lcall
stos
sub
jnp
xlat
xor
out
xor
dec
cmp
adc
fdivp
pop
das
icebp
loope
dec
aaa
cmovs
cmp
dec
push
aam
popa
mov
push
leave
gs
cmp
call
ret
addr16
movsb
cmpsb
mov
mov
mov
adc
scas
pushf
jp
int
fcompl
gs
xchg
stc
add
fsts
push
xchg
sbb
cmp
mov
and
shl
sub
inc
inc
fnstsw
xor
sub
mov
cmp
outsl
rcl
fistps
shrb
fistps
jns
push
imul
pop
js
jecxz
fisttpl
mov
xchg
leave
and
sahf
out
aam
inc
push
fldl
push
mov
mov
loopne
out
incl
movsl
jmp
jne
mov
flds
pop
dec
clc
jge
xor
gs
jge
mov
cli
sub
repnz
out
orl
pop
or
sub
aam
loope
aas
cmp
mov
dec
jbe
jecxz
push
jns
adc
cwtl
int3
aam
data16
pusha
adc
dec
outsl
mov
xlat
mov
mov
insl
add
pop
movsl
and
cwtl
dec
rol
outsb
stos
lea
leave
lret
lock
push
lcall
mov
lock
pop
and
xchg
mov
pop
outsl
neg
jne
push
pop
xchg
mov
or
cmc
mov
xchg
out
mov
xlat
pushf
gs
push
jmp
daa
sub
xchg
out
xchg
or
xchg
bound
lods
inc
rcrb
cmp
xor
push
fisttpll
xor
jg
lock
jl
mov
pushf
pusha
repz
cwtl
cmp
push
fildll
sbb
push
and
xchg
jno
add
pushl
data16
out
inc
xor
fidivrl
jnp
nop
push
into
clc
push
pop
pusha
sbb
push
and
add
mov
icebp
inc
push
jp
popa
pop
jo
xor
and
push
notl
rclb
mov
pop
or
add
lahf
frstor
enter
mov
sbb
add
inc
adc
movsb
jge
mov
push
pop
cmpsb
or
cmp
inc
xor
data16
inc
or
imul
inc
aam
test
and
jl
sbb
cmpb
bswap
mov
lds
pushf
out
je
rorb
popf
js
and
add
repnz
divb
jo
cmp
jge
sbb
les
jmp
test
pusha
in
push
clc
jo
cli
mov
xchg
push
lods
cwtl
bound
scas
inc
cmc
aam
push
int
mov
loop
jmp
inc
int
cltd
pushf
sub
js
stc
add
sbb
pop
imul
push
pop
dec
mov
lcall
cmp
movsl
outsb
dec
jbe
shlb
out
mov
mov
xchg
pop
fdivs
dec
mov
sbb
push
add
xor
sbb
loope
or
pop
mov
mov
xlat
arpl
jne
lcall
daa
xor
mov
fs
mov
movsl
in
shll
int3
cmp
pop
xchg
dec
jae
lea
test
fsub
sarb
adc
out
loop
lcall
ss
movsl
push
pop
inc
mov
fldcw
mov
mov
hlt
add
cmp
lret
pop
imul
dec
loopne
mov
add
xchg
or
mov
or
iret
mov
xor
mov
or
imull
sbb
lods
in
arpl
clc
addl
mov
pop
mov
and
jp
dec
gs
add
jp
mov
or
daa
cli
push
hlt
cmp
jae
mov
lret
jb
and
jnp
fdivl
ds
fsubr
test
cld
add
mov
cmp
jle
adcb
scas
push
outsb
daa
call
dec
add
and
aaa
fs
pop
lock
in
cbtw
imul
hlt
dec
lods
in
mov
add
adc
bound
xchg
ja
loop
sub
sub
or
push
out
or
leave
sbb
lcall
mov
cli
inc
std
leave
dec
loop
fisttps
mov
and
dec
ret
jge
push
pop
push
inc
stc
sub
xor
test
and
jne
bound
shll
jne
mov
and
rcrb
sub
inc
cwtl
or
insb
xchg
test
ds
pop
add
inc
fstps
pop
xor
jnp
stc
sbb
adcb
mov
mov
pop
pop
cmp
ret
xchg
stos
icebp
lcall
icebp
cmp
push
incb
test
hlt
fidivrs
idivb
lcall
adc
mov
int
cmpsb
into
inc
mov
lock
jno
sbb
leave
sbb
sub
movsb
and
pop
cwtl
and
cltd
in
shlb
sub
popf
loope
add
lea
insb
je
jp
mov
jmp
lds
xchg
cli
inc
movsb
lods
call
xchg
dec
addr16
int
pop
hlt
cld
xchg
or
movsb
mov
lahf
xor
mov
fwait
leave
push
leave
mov
iret
fs
mov
jp
or
push
adc
out
pop
bnd
bound
jg
cmc
dec
sbb
jmp
das
pop
hlt
decb
in
inc
sub
popf
test
lahf
stos
adc
loope
addr16
inc
ficomps
pop
xchg
ss
pop
dec
xchg
aad
fimuls
insl
outsb
call
insb
mov
sbbl
test
into
bound
jg
rcl
xrelease
hlt
mov
or
cmp
mov
xor
stos
push
jne
nop
cmpl
in
mov
and
mov
enter
aam
push
nop
test
add
or
push
jle
out
adc
inc
jmp
ret
nop
mov
loop
mov
adc
xchg
sub
push
cmpsl
xlat
push
js
imul
punpckldq
fisttpl
nop
and
inc
lods
mov
cmp
add
adc
add
ja
mov
in
jg
mov
imul
test
in
jle
lds
loop
mov
pop
leave
inc
cmovne
add
cld
test
insb
xor
adc
jle
js
imul
repnz
and
jns
cmc
cltd
or
in
shll
mov
data16
lret
into
jno
jle
mov
fidivrs
in
into
repnz
icebp
shrl
sub
pop
xchg
stos
test
xchg
in
dec
in
shll
dec
movsl
rcrl
jmp
mov
clc
mov
das
cmp
movsl
mov
dec
mov
mov
mov
mov
cmp
jb
popf
bound
push
pop
adc
xor
test
rorl
sub
adc
stc
jb
and
push
pop
hlt
aam
addr16
mov
test
dec
fs
adc
stc
sbb
pop
cs
xchg
jge
cmp
jmp
notl
cmp
xchg
fucom
nop
jb
pop
push
cmpb
jb
ja
sub
jbe
stc
xchg
js
xchg
cmp
sub
sbb
in
shll
es
mov
cli
dec
push
adc
jae
int3
inc
add
xchg
sbb
push
into
lods
xor
mov
daa
inc
jbe
ja
aad
outsb
mov
or
out
or
outsl
pop
fistpl
cmp
pop
add
outsb
pop
adc
stos
lcall
sti
adc
adc
cmp
shlb
nop
out
jle
pushf
push
xor
clc
mov
sbb
sub
xchg
xor
pop
sub
test
add
jmp
insb
cmp
es
out
jmp
roll
shll
lock
insb
inc
addr16
push
sbb
scas
inc
jecxz
jg
inc
lcall
jp
xorl
mov
inc
push
scas
sub
cmp
jo
jle
inc
test
mov
nop
and
sbb
mov
jg
pop
jp
pop
mov
ds
jns
sub
bound
dec
sti
insl
fldenv
hlt
xor
aaa
xchg
jno
test
fisubs
dec
sub
nop
adc
into
out
stc
xchg
mov
xchg
and
fimull
addr16
dec
xor
pushf
mov
cmc
jmp
mov
rep
add
aam
out
jecxz
push
and
pop
aam
push
loopne
and
aas
cmpsl
dec
gs
mov
mov
xlat
push
jb
mov
inc
lcall
shlb
repnz
mov
push
adc
int3
dec
popf
testb
cli
and
scas
out
jne
xchg
mov
clc
call
add
push
enter
or
arpl
aad
cmpxchg
jno
mov
lcall
clc
test
mov
adc
mov
pop
ss
sub
shlb
pop
lcall
xor
push
and
mov
ja
add
inc
mov
add
dec
loopne
sbb
lock
sub
push
mov
xrelease
mov
scas
sub
aaa
or
jbe
cmovno
lcall
sbb
mov
les
jbe
jo
int3
cmp
mov
movsb
scas
ljmp
rolb
and
icebp
fiadds
cmc
mov
fsubl
jecxz
loopne
mov
xchg
xor
ret
enter
and
push
cmp
push
jne
push
mov
test
xor
push
fcmovnb
test
pop
cmc
in
shll
lds
das
jo
mov
mov
shrl
in
aad
aaa
ret
sub
mov
sub
scas
in
and
out
jnp
ret
mull
push
ret
pop
xor
cmp
lcall
jge
mov
fbstp
insl
pop
ret
inc
add
aas
loope
dec
loop
lea
out
imul
lret
xor
push
mov
push
push
or
fistpll
jnp
jp
clc
scas
inc
mov
dec
out
pushf
mov
lea
push
fnstsw
cld
xor
xchg
lahf
sub
cli
mov
sbb
loop
inc
mov
pop
mov
dec
test
jbe
sbb
insl
test
mov
jo
add
or
shl
sbb
jecxz
dec
sub
jecxz
add
jecxz
sub
hlt
mull
cmp
cmpsl
push
iret
cmp
jecxz
cmpsb
pop
mulps
add
mov
popf
inc
insb
dec
or
je
and
jmp
in
mov
sarb
jne
cmpsl
ret
mov
decb
inc
add
jmp
loop
jns
xchg
dec
insl
pop
aam
mov
xchg
leave
fcoml
imul
fdivs
out
enter
dec
cmp
shl
fwait
in
insl
sbb
testb
shlb
push
inc
popf
jno
sahf
xchg
mov
insb
inc
push
pop
stos
push
daa
test
xor
hlt
inc
dec
sbb
iret
addr16
fistpll
push
jmp
ds
sub
inc
adc
sbb
es
into
fcompl
insb
add
pop
out
add
cwtl
xor
imul
cmpsl
xor
add
popf
sti
jae
nop
mov
mov
mov
mov
or
or
mov
clc
inc
push
pop
ret
or
inc
test
mov
lret
lahf
bound
jle
xor
movsl
js
rclb
or
fsqrt
mov
xor
dec
rorb
jns
mov
cmp
mov
popa
mov
rcrb
lds
inc
arpl
loopne
jbe
mov
xor
mov
scas
jge
test
inc
inc
sbb
fmull
daa
fs
lods
lods
jl
out
repz
xor
lret
inc
fiaddl
push
pop
pop
xor
sti
add
xor
jns
and
mov
push
or
rcr
xchg
inc
xchg
sub
lcall
xlat
lfs
cmp
xchg
sbb
clc
pop
aaa
cs
gs
adc
push
xor
nop
or
mov
mov
push
int
mov
or
lds
sbb
xor
jne
push
xchg
sub
lods
mov
js
inc
dec
ljmp
sbb
insb
out
add
aas
mulb
cmc
rcr
mov
das
fs
in
imul
lret
dec
mov
cmpsb
jmp
bound
xchg
fisttpl
lock
insl
jno
dec
xor
sarl
call
sub
jmp
or
pusha
lods
xor
imul
push
sub
subl
inc
dec
gs
addr16
imul
sub
sbb
pop
sub
or
std
dec
outsl
test
add
or
test
cmc
inc
inc
fmul
adc
ret
fstpl
dec
lcall
leave
mov
cmp
or
hlt
adc
gs
xchg
mov
popf
cltd
cltd
push
loop
aad
xor
filds
loop
push
sub
hlt
add
or
jb
loop
pop
jnp
xchg
push
sub
mov
pop
mul
sub
lds
sbb
jno
mov
data16
sub
mov
add
jno
pop
dec
fnstenv
push
pop
sbb
mov
xchg
test
jmp
xchg
add
xor
push
pop
and
cmpsl
por
xor
jb
in
jle
or
mov
outsb
xlat
negb
dec
ds
cmp
inc
adc
jmp
and
or
inc
or
xchg
xchg
in
imul
xor
add
cwtl
rclb
pop
dec
mov
les
dec
dec
or
cwtl
imul
in
push
mov
insb
loopne
sti
int3
mov
pop
fcoml
pop
sub
jmp
inc
push
insl
js
or
fs
and
pushf
or
test
ds
dec
push
jl
pop
xchg
mov
dec
aas
and
das
dec
cmpsl
push
scas
cmp
enter
dec
mov
hlt
or
imul
inc
and
mov
push
inc
jo
sti
mov
adc
and
inc
mov
ret
adc
xchg
into
jno
pop
jle
add
pop
dec
ljmp
ret
jo
lock
int3
repz
int
movsb
pop
jns
lret
sub
je
mov
pop
push
fwait
or
mov
mov
scas
push
push
pop
fistps
dec
mov
js
js
loop
stos
xor
mov
mov
lea
lock
xor
push
cmp
pop
inc
shrl
or
cmc
fsubr
jbe
inc
mov
out
outsl
out
cwtl
scas
sub
inc
insl
pop
add
test
sti
and
xchg
sarl
mov
xor
movsb
mov
push
div
or
scas
jmp
lock
scas
out
aas
test
xchg
adc
int3
sub
ret
sete
xchg
insl
mov
jle
aas
xchg
lock
lcall
xor
sbb
xor
push
and
movsl
or
mov
sahf
stc
jae
cmp
cmpsb
outsb
sbb
jns
xchg
push
mov
jp
sarb
inc
inc
mov
xchg
mov
fadd
daa
cltd
push
mov
les
ret
jmp
inc
aaa
in
int
adc
push
ds
mov
mov
and
jecxz
movsl
inc
jb
mov
mov
adc
mov
or
push
rorb
call
popl
mov
xor
pop
inc
xorb
lea
popa
roll
jne
cmpsl
insb
daa
adc
or
scas
cmpsb
dec
mov
test
xor
and
icebp
mov
mov
cmpsb
in
and
push
push
movsl
bound
cs
xchg
mov
jl
add
mov
mov
out
jno
or
mov
jns
daa
or
push
cmc
fisubrs
fiadds
mov
sbb
cmp
fsin
in
xchg
divps
lcall
sbb
aam
mov
or
mov
loope
pusha
sbbb
and
leave
add
inc
jnp
xchg
xchg
sub
vpmulhw
sbb
xchg
dec
jle
and
jmp
cltd
bound
jne
mov
in
jl
fs
cmp
mov
bound
setnp
cmpsl
cmp
outsb
or
cwtl
add
fcomps
mov
push
es
push
mov
adc
cmp
push
shll
rorb
jmp
push
xlat
aam
rclb
js
jle
int3
into
push
mov
sbb
pop
push
out
cmpsl
fwait
push
stos
xchg
outsl
inc
jge
adc
cli
loope
push
mov
cmovge
push
add
ss
outsl
jo
outsl
into
movsb
or
cwtl
mov
sbb
pushf
mov
and
das
sbb
inc
dec
pop
push
fmulp
sub
or
and
ret
les
test
out
mov
cmpsl
jnp
cmp
mov
and
mov
mov
xchg
pop
pop
sub
add
jmp
or
iret
jg
adc
movsl
and
mov
pop
xchg
ds
sub
pop
into
pop
cs
icebp
out
push
and
ds
mov
cmp
sahf
push
xchg
test
sbb
outsb
ficoms
arpl
lret
mov
push
jp
jecxz
icebp
sub
dec
adc
push
mov
xchg
cltd
mov
popa
or
xor
mov
sbb
cli
cmp
mov
mov
xchg
rolb
push
jnp
adcb
aas
aam
xor
out
xor
push
fbstp
jo
cwtl
inc
adc
or
frstor
cmp
xchg
iret
inc
cmp
nop
pop
and
mov
mov
pmaxub
cmp
faddl
sub
lods
pop
jae
mov
pop
mov
adc
or
les
cmp
inc
mov
mov
jmp
frstor
rcrl
gs
lret
dec
movsb
jl
scas
iret
cmp
test
mov
pushf
std
jns
sbb
lret
aad
call
std
jns
out
leave
pusha
mov
fcoml
in
stos
push
out
sahf
shl
bound
xor
aam
sti
fsubrl
jmp
cmp
push
push
rolb
loope
pop
jns
nop
jne
int
sub
mov
adc
aaa
ja
insb
scas
jge
push
mov
in
imul
pop
mov
or
jne
xor
mov
and
jae
pop
cmp
and
push
xchg
xor
psrlw
mov
stos
xchg
mov
cmp
fwait
push
push
pop
or
cmp
in
rorl
es
mov
sbb
sbb
push
movsb
fldenv
cmp
in
fidivl
lods
push
js
xor
lea
adc
xchg
pop
or
add
cs
inc
test
push
fdivp
sub
push
jae
ret
daa
addr16
jge
rcr
xchg
xor
shll
pop
sub
roll
pop
loopne
ds
adc
cmp
sub
mov
xor
or
aad
mov
mov
jmp
int3
and
stos
push
sti
mov
mov
cmp
in
xchg
sbb
jg
and
lods
and
add
jge
ror
mov
fcomps
sbb
lcall
mov
adc
fcomps
cmp
jae
ljmp
aaa
jae
aas
movsb
inc
sahf
dec
cmp
push
jo
adc
enter
orl
aaa
inc
adc
incl
lahf
push
push
pop
mov
dec
in
cmp
mov
fldl
int3
jecxz
mov
icebp
mov
cld
dec
shll
jo
xchg
test
imul
lahf
cmp
hlt
fistl
pop
js
jecxz
pop
sub
insl
fstps
std
mov
mov
addb
repnz
cld
lcall
lock
dec
mov
cli
or
or
ret
shlb
dec
mov
pushf
mov
fmull
cmp
mov
mov
mov
jg
jo
pop
insl
inc
lods
sbb
inc
push
mull
hlt
in
repz
bound
enter
xor
iret
pop
stos
dec
push
dec
out
rorl
sub
in
cmp
sbb
or
pop
cmc
daa
inc
mov
push
fwait
pop
mov
jl
repz
pop
sub
pop
xlat
ret
repz
ret
mov
mulb
in
scas
sahf
fnsaves
faddp
roll
inc
dec
mov
xor
not
fists
aad
in
movsl
test
cld
es
rol
lock
fdivrp
inc
add
mov
out
imul
sub
hlt
pop
mov
mov
fistl
lcall
int3
ret
mov
mov
out
fists
pop
lea
ret
mov
jl
movsb
in
lea
cmpsb
jae
pop
cmpsb
push
mov
xchg
adc
iret
repz
aas
setg
add
push
mov
mov
push
cmc
scas
shl
lea
fsubrs
jb
mov
in
pop
lahf
lret
mov
filds
int
shrb
outsb
lea
imul
mov
pop
dec
xchg
scas
mov
movsl
push
sbb
pop
fidivrl
mov
jl
pop
push
imul
push
mov
cwtl
outsb
and
in
fcmovnbe
cmp
dec
rcr
pop
fnstenv
xor
pop
sub
mov
jo
add
mov
push
clc
movsl
test
aam
pop
sub
clc
mull
mov
stc
adc
mov
lock
fisttpll
pop
sbb
xor
cmp
xchg
cmp
inc
mov
xchg
xor
repnz
sub
jle
sub
jnp
bound
push
cmp
adc
sbb
pop
inc
fbld
cmp
testl
lret
pop
rcll
dec
andb
mov
mov
loop
push
pop
push
inc
pusha
push
int
ljmp
or
dec
xor
xchg
mov
push
pop
or
test
jg
inc
cmpsl
cmp
cmpb
movsb
sbb
out
out
inc
imul
popf
icebp
out
push
sub
pusha
cwtl
les
push
mov
mov
loopne
or
pop
outsl
dec
movl
das
lahf
push
cmp
and
je
mov
scas
dec
and
cmp
jp
cmp
dec
xchg
shl
loopne
test
push
pop
ret
mov
sbb
les
gs
icebp
arpl
repnz
ds
lods
rorl
mov
mov
ror
aam
int
ss
push
data16
dec
or
mulb
mov
sub
or
int
aaa
jno
add
inc
cltd
mov
mov
pop
ja
pop
rclb
sbb
or
fildll
add
adc
stos
inc
imull
add
inc
std
push
sub
enter
xchg
dec
mov
fucomip
fsubrl
inc
les
aas
std
das
xchg
add
dec
out
sbb
ja
mov
cltd
das
inc
pop
repz
popf
cmc
scas
scas
fwait
aaa
outsb
push
js
ljmp
cli
in
push
das
push
sbb
mov
ret
push
mov
add
xchg
ret
fsubl
loop
shlb
xor
loop
sub
pop
xchg
inc
scas
jae
adc
xor
cmp
sbb
add
iret
cmp
pop
outsl
sbb
push
sub
test
and
mov
cmp
add
enter
mov
jle
orb
movsl
lock
lcall
repnz
in
call
push
xor
jecxz
adc
mov
loope
fbld
je
ja
out
push
fisubl
stos
adc
mov
xor
jmp
scas
dec
dec
imul
fs
sub
pop
or
push
or
xchg
cs
inc
pop
and
pop
frstpm(287
add
decl
xorb
add
mov
dec
rcrb
imul
mov
jns
adc
cmp
and
dec
pop
cmc
loopne
mov
pop
mov
iret
in
sub
mov
jns
insb
lret
pop
fistl
mov
cmpsb
rol
xlat
dec
mov
mov
fucomi
sub
mov
js
push
xor
lods
int
pop
push
push
mov
sbb
fwait
jg
lcall
xor
sub
negb
inc
imul
add
mov
std
push
push
decl
cmc
fistpll
int
inc
and
cmpsl
popf
jne
and
adc
cmp
adc
int3
fnstenv
and
or
subb
bnd
mov
mov
or
insl
sub
rcr
jnp
insl
push
lea
push
mov
adc
jns
je
aad
dec
sub
ret
mov
rorl
das
lods
xchg
jbe
aad
mov
fwait
push
icebp
out
xor
xchg
movsb
xor
je
mov
ret
dec
mov
sub
sbb
movsb
jmp
cmp
lods
cmp
mov
mov
xor
add
ret
repnz
or
jno
jae
sub
shr
jg
add
ret
nop
fisttpl
xor
sbb
xchg
jle
je
pop
dec
and
pop
mov
cmc
push
ret
mov
sub
and
orps
cmc
pop
ret
fwait
fwait
cmp
pop
pop
sub
cmp
cwtl
cmp
push
leave
inc
inc
enter
mov
xor
pop
stos
jmp
ds
pop
loop
call
xor
sti
lock
dec
xchg
push
pushf
xor
jns
cld
popf
xchg
xchg
popf
sub
fdivs
cmpsb
xchg
int3
mov
hlt
add
leave
sub
das
xchg
outsl
cs
les
push
aad
adc
fdecstp
pop
lods
and
sbb
arpl
inc
addr16
loop
dec
iret
movsl
ficoml
movl
lock
inc
inc
inc
inc
in
add
cmc
sub
sub
imul
add
cmp
bound
in
mov
and
es
aam
ss
add
xlat
fstpt
mov
stc
out
mov
mov
sbb
sbb
inc
push
movsl
daa
out
sahf
js
rorb
push
ret
mov
jp
pushf
in
inc
lea
pop
mov
sbb
rcl
xor
or
push
mov
inc
jns
mov
add
push
xor
fst
rorl
push
and
loop
test
daa
add
imul
push
mov
outsl
jg
lods
out
roll
pushf
push
push
rorb
xor
sarb
sbb
cltd
mov
sub
test
pop
lods
pop
je
jge
push
rorb
and
inc
pushf
repz
cltd
ficomps
add
sbb
mov
orl
mov
out
jp
or
or
subb
jp
sahf
jl
lea
lock
add
mov
inc
rcl
jge
movsb
pop
loopne
mov
pop
jb
mov
sub
xchg
aaa
outsl
mov
out
sbb
mov
pop
rolb
bound
or
ret
sbb
scas
mov
shll
dec
and
sub
out
mov
sbb
cmp
mov
jmp
adc
std
mov
xchg
mov
addl
pop
ljmp
xorb
daa
or
mov
dec
jmp
rcll
xchg
and
call
fcmovb
int3
into
or
nop
mov
lods
push
aaa
into
mov
ficoml
jne
and
cmp
in
mov
mov
inc
jae
roll
hlt
mov
sbb
inc
dec
enter
std
out
lret
cmc
lods
bound
aam
sbb
mov
outsl
push
mov
jmp
mov
cs
imul
enter
lock
decl
repnz
xchg
arpl
cwtl
xor
dec
adc
cmp
popf
sub
sahf
sbb
push
pop
xchg
mov
lea
add
and
xor
mov
je
in
es
popf
outsb
xor
pop
sbb
fldenv
movsb
subb
rorb
pop
jle
and
jne
fwait
push
in
loopne
jo
jb
ret
pop
mov
xlat
loopne
and
imul
sbb
nop
cmp
or
mov
repnz
sbbl
inc
xchg
push
push
sub
pop
lcall
push
sbb
and
and
jmp
fcmovnb
cwtl
movsb
test
test
sub
or
sbb
aam
jle
ja
mov
fwait
pop
inc
and
jo
loopne
iret
pop
lods
aad
mov
into
inc
inc
mov
push
test
add
add
shlb
rclb
ror
mov
mov
clc
arpl
adc
jnp
mov
hlt
shl
stos
pop
jns
cmp
daa
adc
jae
or
sub
mov
repz
and
sbb
aas
cmp
lret
jb
inc
mov
push
negl
hlt
ret
xchg
cmp
in
js
or
fidivs
fistpll
lds
add
cmpsb
jp
or
or
iret
jecxz
or
out
leave
roll
xorb
or
les
xchg
or
sbb
jge
mov
push
imul
in
insl
rcrl
mov
neg
mov
insb
pop
adc
cmp
dec
mov
pusha
or
xorl
fwait
gs
loop
test
mov
sti
subl
testb
or
mov
dec
sbb
lds
jecxz
xor
mov
fnstenv
push
sbb
inc
enter
fsub
pop
cmp
mov
jo
pop
and
sbb
test
pop
cli
lcall
loope
mov
push
add
jb
outsl
dec
mov
jbe
xor
cli
dec
sub
shrl
jp
dec
mov
mov
cld
out
cmc
jmp
cmp
in
ljmp
scas
int3
mov
ret
sub
popf
pop
push
out
mov
mov
cld
push
or
scas
cmp
out
out
mov
and
movsbl
cmpsl
lret
gs
mov
sbb
lods
jb
pushl
sbb
mov
inc
cmpsb
jae
idivl
enter
pop
dec
or
je
inc
adc
mov
addr16
xor
into
std
dec
inc
fdivp
mov
dec
add
pushf
mov
cld
fucomi
xor
ds
jecxz
sbb
mov
jl
neg
or
sbbb
push
aaa
pop
mov
fcoml
aaa
jmp
mov
aad
mov
xrelease
and
bound
cmp
sub
cltd
je
iret
cli
jl
cmp
ds
jg
mov
push
inc
xchg
repz
aaa
xchg
add
pop
fcompl
enter
dec
add
je
sarl
jmp
jae
subb
jnp
jl
out
ret
push
jne
sbb
test
das
and
call
push
sub
int3
and
mov
mov
ja
xchg
cli
movsl
test
int3
icebp
xor
into
dec
enter
jbe
cwtl
mov
rorl
cmovbe
and
or
jnp
dec
xchg
lods
dec
cmp
mov
fs
ret
xchg
out
or
sbb
add
jp
jmp
xchg
xchg
push
cmpsb
or
cltd
lret
in
loope
or
inc
jne
adc
cmp
pop
test
addb
xor
popa
fmul
adc
fwait
inc
xchg
xor
inc
mov
lret
sub
and
push
sbb
pop
mov
test
cmp
mov
gs
or
rcr
xor
loopne
xchg
mov
inc
xchg
pop
push
lock
sub
fcom
jae
nop
jbe
repz
std
lret
jno
and
pop
notl
leave
or
scas
push
jne
jecxz
adc
leave
js
idivl
fbstp
pushf
inc
xchg
repnz
sub
testb
cmpl
scas
jne
mov
mov
cmp
xchg
dec
push
inc
cmp
jnp
fcoml
xor
jae
test
es
addr16
shll
in
cmp
js
cmp
xchg
sti
rolb
inc
fbld
jl
and
xlat
pop
push
lds
dec
jno
push
jno
xor
rolb
cmc
outsb
mov
or
repz
xchg
sbb
rcr
pop
popf
or
push
pop
in
xchg
jne
mov
cmp
in
test
inc
pop
mov
sub
int
push
mov
mov
stos
in
loop
push
cmc
sbb
cmp
cld
insb
cli
fldenv
pop
and
or
fsubrl
xchg
fiaddl
fcmovne
xor
cld
ljmp
pop
pop
adc
rorb
pushl
mov
and
mov
xor
hlt
lods
mov
lea
sbb
mov
ficoml
aaa
push
adc
xchg
imul
sahf
in
inc
inc
mov
mov
or
adc
ja
mov
js
in
fiaddl
jmp
mov
pusha
push
lret
push
xor
mov
repz
mov
lcall
repz
bound
jne
hlt
and
test
and
mov
push
and
adcl
push
cmp
inc
lcall
std
and
or
cs
sarb
fiaddl
and
test
adc
dec
and
push
scas
test
popa
inc
and
icebp
or
rolb
sub
test
jmp
js
fimull
adc
sbb
mov
je
jo
out
outsl
imul
xchg
pushf
scas
jb
inc
push
int3
cli
jp
cwtl
cld
lds
outsb
lods
mov
roll
fdivl
movsb
lret
pop
sbb
out
xlat
lods
in
adc
mov
cmp
and
jge
pop
out
movsb
mov
pop
xchg
sti
mov
daa
fsubrp
test
sbb
jmp
popf
xchg
and
dec
cmp
lods
jns
sbbl
das
sub
ja
pop
jnp
pusha
jns
insl
cmp
xchg
push
clc
push
and
dec
mov
cmpl
aaa
cmp
and
dec
mov
lea
movsl
jmp
jmp
inc
inc
pop
pop
mov
fbld
stos
gs
ja
mov
fdiv
xor
mov
adc
ds
aaa
or
shlb
jnp
mov
sbb
mov
pushf
or
lcall
insl
or
inc
push
mov
and
cmp
dec
dec
int3
stc
cld
xchg
dec
js
out
jmp
repz
or
jge
lods
js
pushf
hlt
push
aaa
and
cmp
mov
cmpsl
jne
sbb
int
pop
inc
xor
outsb
ret
push
push
scas
popf
pop
lcall
gs
mov
fstps
mov
cmpb
pop
mov
mov
push
cmpsl
inc
test
mov
inc
cmc
test
xchg
mov
pop
cmpsb
imul
sbb
andl
or
inc
cmp
jp
in
mov
cmp
mov
scas
popa
inc
mov
ds
mov
shlb
push
mov
pop
das
lock
mov
arpl
cmp
xor
int
jge
ret
jno
pop
dec
dec
push
icebp
outsb
push
xor
xor
movsb
add
or
leave
sub
das
push
jecxz
cltd
dec
cld
xor
add
fwait
adc
testl
mov
xor
mov
cmp
push
daa
inc
scas
xor
mov
sbb
push
mov
fcmovnbe
cld
loop
test
sub
jp
mov
out
cmp
cmp
out
jecxz
insb
scas
sbb
mov
inc
dec
idivb
aas
into
data16
jmp
fbstp
sbb
push
orb
andl
sub
sub
shrb
inc
jp
inc
scas
or
aad
adc
shlb
hlt
push
add
in
rcrb
jge
mov
std
jno
mov
jp
ret
movsl
push
fldt
and
sbb
std
add
in
fdivrl
mov
sbb
xchg
mov
lret
inc
iret
jmp
sarl
xchg
jl
inc
push
jge
adc
popa
cmpsb
bound
dec
popf
arpl
add
aaa
adc
lcall
fidivrs
mov
or
aad
pop
outsl
add
pop
push
mov
jge
icebp
stos
bound
mov
cmp
hlt
and
xchg
enter
ds
sti
movsb
mov
in
cmpsl
pop
adc
inc
fildll
mov
sub
test
sbb
fisttpl
test
push
shr
mov
sar
mov
push
fistpl
jp
and
or
and
sahf
in
add
sub
jae
sbb
repnz
jb
int3
rcl
test
xchg
mov
rol
fucom
mov
stc
push
mov
jg
sbb
sti
jns
adc
mov
sbb
in
xor
mov
sbb
push
mov
dec
out
lock
xchg
inc
add
cmp
and
xchg
ja
cmp
cmp
jg
sub
je
fists
mov
adc
sub
scas
inc
push
or
cmpsl
test
add
repnz
mov
shl
aas
into
bound
fsts
movsb
clc
js
jno
bnd
nop
adc
and
int
fistpl
js
dec
imul
daa
jbe
jne
std
xchg
adc
push
imul
inc
push
stos
sbb
xchg
ljmp
ljmp
into
pop
int3
loop
sub
fstps
repz
shrb
adc
pop
sahf
imul
xchg
fisubs
out
fs
pop
and
jge
insl
iret
repnz
inc
or
insb
jo
inc
xchg
adc
ljmp
enter
mov
mov
sar
lret
pop
xorb
or
scas
popf
push
mov
mov
jge
fmuls
push
push
inc
fnstenv
imul
cmpl
push
addr16
sbb
in
push
in
sub
gs
add
pop
jecxz
jnp
ret
adc
les
sbb
jno
fistpll
jecxz
mov
dec
add
lea
enter
fcmove
cmp
xchg
push
hlt
insl
ret
test
in
inc
mov
xchg
imul
repnz
adc
mov
xlat
out
pop
cmpsb
cmp
rcrl
leave
movsb
stos
xchg
rclb
out
lds
jmp
out
xchg
std
fsubp
in
int3
sar
pop
cmp
inc
add
out
pop
mov
push
sti
ss
aam
pop
jno
fs
pop
adc
jmp
jg
add
imul
andl
scas
not
mov
xchg
pop
jno
hlt
icebp
scas
jo
mov
sbb
xchg
mov
cmp
cltd
cld
adc
fstpt
push
sahf
adc
popa
lock
xchg
adc
lea
mov
sub
jno
dec
ret
push
daa
push
dec
in
mov
std
push
test
xchg
loopne
push
cld
jnp
nop
jns
movl
das
repz
dec
cltd
inc
in
popa
in
test
imul
mov
ret
adc
inc
jecxz
mov
outsl
mov
push
mov
add
push
jnp
push
or
pop
nop
jge
mov
rcll
jp
cmp
pusha
rcl
xchg
bswap
adc
cwtl
ds
testb
jnp
sbb
adc
idivl
dec
inc
sbb
out
xor
xorb
repnz
es
sbb
lret
dec
jecxz
add
std
iret
call
mov
dec
inc
push
push
cmpsl
in
in
push
lods
xor
add
clc
dec
cmpsl
dec
outsl
mov
jbe
shll
shrb
into
inc
or
in
and
sub
fcomps
xchg
jle
and
push
xor
jmp
leave
sub
mov
xchg
mov
jge
mov
test
fwait
xchg
stos
js
arpl
adc
xor
test
cmp
or
rorl
inc
outsl
out
enter
fmull
inc
insb
int
jne
push
shrl
and
sarb
sub
cmpsb
xor
mov
xlat
mov
dec
test
mov
jl
jmp
mov
int3
cld
int3
adc
and
inc
pop
and
jne
cs
dec
call
icebp
dec
gs
push
sahf
inc
test
inc
incb
adc
dec
mov
sub
movsl
sub
lahf
mov
add
out
notb
push
jae
xchg
outsb
push
loop
adc
mov
mov
mov
or
sbb
push
mov
push
inc
aam
mov
cmp
dec
push
call
aam
shll
shll
jns
cmpsb
or
pop
out
fiadds
js
cmc
movb
aam
xchg
mov
fnstsw
dec
popa
push
das
test
jo
in
adcl
cmp
inc
inc
divb
push
xor
cld
inc
cwtl
aas
and
loop
cltd
xor
movsl
imul
pop
and
push
fimull
int
inc
inc
mov
cmp
fbstp
mov
cmpsb
aas
adc
mov
xchg
pop
cmpl
iret
je
or
movsb
ja
push
mov
adc
xor
int
lods
jnp
adc
out
daa
ret
lods
movsl
dec
jge
lret
mov
cmp
pop
out
cwtl
xchg
outsb
dec
sbb
pop
lods
les
adcl
lds
sbb
pop
push
je
in
or
in
mov
xchg
clc
stos
inc
test
xchg
inc
dec
leave
cmp
cwtl
rolb
inc
sbb
xlat
dec
scas
es
outsb
push
daa
adc
enter
adcl
in
add
cmpsb
jmp
sub
int
lds
addr16
popf
add
sub
push
mov
add
sarb
testl
sbb
mov
cli
mov
and
pusha
pop
fidivl
cmc
xor
popa
out
pusha
std
pop
mov
cmp
pop
arpl
inc
push
enter
sbb
or
adc
and
mov
and
inc
jne
pop
movsl
mov
scas
adc
mov
mov
mov
cmp
scas
inc
fwait
or
sti
jecxz
jl
push
and
jno
loopne
out
je
pop
add
pop
pop
wrmsr
push
add
iret
js
je
inc
arpl
neg
push
cmp
jl
ljmp
lds
mov
jae
cs
push
dec
sub
fistpl
and
cmc
cld
xchg
push
repnz
popf
cmp
xor
popa
push
adc
mov
out
sub
mov
jmp
sub
push
shll
mov
adc
cli
mov
outsb
ljmp
popf
lret
inc
and
dec
xor
mov
mov
xchg
fnstsw
jo
and
pop
xor
cwtl
sub
movsl
stos
mov
pop
repz
lret
shll
dec
sbb
in
out
lcall
pushf
mov
cwtl
lea
stos
or
mov
and
leave
mov
jo
adc
ret
data16
aaa
es
pop
pop
mov
push
fbstp
movb
push
notb
data16
call
and
nop
mov
cmp
jmp
cwtl
xchg
sub
jl
cs
pop
inc
and
pop
jg
push
adc
xchg
int3
daa
into
pop
dec
add
mov
mov
inc
mov
sti
push
lahf
arpl
mov
push
sbb
call
cmpps
push
call
nop
dec
fcoml
jns
push
adc
jb
notl
cwtl
jns
out
mov
xchg
or
inc
faddp
dec
sbb
add
dec
leave
cltd
pushf
out
cmp
std
sub
mov
mov
mov
pop
jns
aam
inc
call
test
cmpsl
mov
sub
mov
mov
out
aad
outsb
outsb
ja
jmp
int
sbb
mov
daa
cmp
dec
or
pusha
dec
dec
imul
je
cli
adc
les
ljmp
add
dec
cmp
and
repnz
cld
cld
push
in
testl
in
out
push
and
mov
xchg
mov
adc
or
pop
jge
pop
icebp
xlat
adc
test
xor
cwtl
or
mov
movsl
dec
and
pop
jno
xor
ljmp
pop
sbb
adc
bound
cmpsb
mov
xchg
test
out
popa
push
inc
dec
fstps
cmc
rcll
scas
sbb
ja
mov
push
enter
inc
iret
pop
push
pop
hlt
paddsw
dec
push
or
inc
mov
ret
push
cmpsb
pop
jge
out
imul
mov
and
arpl
movsl
add
test
mov
push
and
mov
fidivrl
or
icebp
adc
pusha
gs
inc
or
inc
jne
in
push
lods
xchg
inc
clc
insb
jmp
shr
jbe
lds
lret
in
cmp
push
in
mov
mov
es
bound
inc
and
push
mov
mov
ss
or
and
ss
xchg
cli
daa
push
xor
cmp
nop
sbb
push
adc
lods
xchg
in
jmp
xchg
inc
jnp
and
les
rcr
insl
daa
xchg
dec
popa
inc
lcall
ficoml
lcall
je
bound
fstps
loopne
xor
mov
arpl
mov
mov
loopne
cmp
sbb
daa
adc
lret
stc
ret
int3
mov
sbb
mov
inc
call
jne
cld
mov
jae
out
ss
mov
mov
push
int
adc
loope
mov
shll
jns
xchg
fbstp
loopne
add
mov
push
dec
dec
cmpsb
icebp
dec
xor
sbb
push
out
cld
pop
jmp
lret
loopne
push
int
xchg
pushf
loope
add
in
pop
jo
cmpsb
ljmp
lea
sbb
loop
lea
aad
outsl
cltd
sbb
rorb
test
rcl
inc
aad
ds
dec
xchg
lahf
mov
xchg
jle
inc
mov
and
dec
sbb
addl
push
fcoml
inc
xchg
dec
test
inc
cmp
dec
xchg
out
jne
pop
and
flds
pop
jns
lea
mov
push
cmp
push
bound
ljmp
jb
hlt
fwait
jecxz
je
dec
incb
pop
int
sti
loop
sbb
lret
cmp
mov
or
pop
mov
push
xor
popa
int3
repnz
inc
inc
adc
xchg
jo
fdiv
pop
cli
cld
mov
daa
push
and
jp
aas
inc
jbe
or
jmp
dec
mov
fimull
das
int
bnd
fistps
inc
add
xor
dec
ret
jp
xchg
aaa
xor
mov
imul
je
negb
cmc
or
push
jl
add
stos
iret
jbe
add
sub
cld
sub
jmp
jp
sub
rorl
mov
js
mov
or
pop
or
xor
push
arpl
or
iret
adc
fstps
sahf
mov
in
mov
xchg
mov
aad
pop
notl
stc
test
lcall
stos
scas
jmp
pusha
rorb
mov
lds
popf
fiadds
popf
jns
es
jne
ret
addr16
test
or
repnz
out
orb
xlat
sarb
shlb
mov
xor
rcr
mov
lock
jbe
fimull
add
jne
mov
in
pop
shll
xchg
popf
sahf
sbb
aaa
push
fisttpll
sbb
and
lods
jo
cs
fs
inc
in
or
in
mov
push
and
push
xorb
xchg
sbb
in
out
repz
je
or
fcoml
mov
add
or
lods
std
mov
sub
out
es
scas
xor
push
xchg
ds
xchg
out
daa
addb
sbb
call
add
andb
enter
pop
jns
cltd
sti
ss
dec
jns
and
imul
pop
mov
and
mov
dec
push
inc
sub
iret
dec
adc
lods
aad
call
test
push
call
repnz
pop
fmull
dec
pop
mov
dec
ljmp
xor
sbb
test
gs
sbb
push
dec
add
ja
inc
pop
xor
test
xchg
fwait
adc
fldlg2
and
mov
rclb
out
mov
test
push
dec
cs
sti
rol
lods
ljmp
cmp
jecxz
cmp
mov
push
mov
cmc
mov
inc
ret
in
mov
icebp
repnz
and
push
xchg
and
out
mov
push
mov
js
xchg
xor
fildll
xchg
loop
or
xchg
ror
sbb
fsub
inc
push
lahf
pop
pop
add
cmc
push
je
insl
and
adc
lock
or
lret
test
out
in
shr
or
dec
popa
pop
lcall
inc
enter
add
pop
int3
add
inc
loop
lahf
aas
and
aas
mov
pop
fsubr
inc
add
xlat
cmp
sahf
idiv
jne
fisubs
sub
sub
mov
sub
lods
imul
inc
testb
push
ds
icebp
jle
xor
mov
cmp
andl
cmp
jo
xchg
mov
inc
adc
mov
scas
push
lret
push
mov
cmp
xchg
bound
xlat
jne
mov
or
dec
xchg
cmp
daa
xor
push
fildll
lcall
adc
fcomi
push
in
in
jp
inc
aaa
pop
mov
mov
popa
fucom
sbb
test
incl
roll
sub
repz
loope
sub
lds
xchg
pop
sbb
lcall
subb
mov
push
lret
sbb
pop
mov
and
xorl
dec
stc
mov
push
sbbb
add
and
sub
mov
sahf
jg
push
pop
popa
jmp
add
xor
lret
jns
shrd
stc
mov
mov
jecxz
push
in
orb
add
xchg
dec
and
mov
push
outsl
leave
adc
mov
dec
test
rcr
jb
adc
adc
pushf
push
inc
ja
sbb
incb
sbb
loope
mov
add
xchg
dec
mov
xor
cmpl
inc
adcb
xchg
push
jo
mov
imul
lds
adc
push
push
iret
or
or
mov
jmp
jecxz
stc
or
push
dec
std
leave
lcall
pop
sub
dec
cmp
cli
inc
jae
mov
ja
adc
push
icebp
xor
fisubs
pop
sti
imul
jbe
call
mov
add
jo
pop
mov
orl
jle
cs
lret
lcall
mov
adc
stos
mov
adc
dec
cmpsb
xor
mov
xchg
lods
jecxz
in
je
xor
ja
stc
mov
bound
jp
inc
ret
push
mov
mov
xchg
pop
pop
cwtl
lods
stos
clc
popa
dec
jb
repnz
scas
xchg
cld
mov
ss
mov
sub
mov
or
cli
adc
adc
fldl
push
icebp
dec
test
dec
bound
or
xchg
bound
cli
inc
popa
xchg
repnz
mov
aaa
pop
sbb
inc
js
sub
pop
jne
cmp
push
push
sub
push
lock
sbb
jp
jns
jo
mov
fidivl
in
sbb
cmp
shlb
jo
lock
outsl
cmp
test
inc
mov
push
mov
daa
push
or
pop
cmpsb
push
fcoml
out
jne
add
rcr
loopne
int
mov
cmp
dec
out
jmp
cld
sbb
fildll
out
cs
mov
jge
push
ss
ja
inc
xchg
mov
push
xchg
adc
jno
loop
pop
cld
push
sbb
sub
cli
push
mov
movsbl
xchg
pushf
mov
pusha
test
outsl
mov
add
pop
outsb
lock
add
out
mov
push
or
xlat
mov
in
dec
mov
rcrl
xchg
out
jp
and
adc
pushf
vmread
push
add
rorb
rcr
mov
sbb
sub
dec
rcl
pop
jp
jp
inc
xchg
xchg
mov
and
aad
mov
out
sub
lret
cli
nopl
das
jb
jb
jbe
iret
pop
shll
clc
jns
adc
movsb
out
decb
rcll
mov
enter
inc
shlb
lds
pop
adcl
aad
or
js
sbb
jmp
inc
lods
test
out
daa
fiaddl
dec
and
js
pop
inc
cmc
lea
sub
mov
jmp
cli
idiv
sar
jge
or
dec
call
movsl
dec
pop
fwait
divb
dec
inc
jge
call
mov
jo
incb
aaa
pop
das
pushf
add
loopne
mov
xlat
sbb
rcrl
aas
cmp
pop
popa
cmp
in
or
arpl
jmp
pop
mov
fucom
loop
inc
ret
in
pop
dec
adc
rcll
outsb
mov
mov
sub
aam
mov
jbe
and
push
ss
stos
movsb
xor
xlat
add
jl
push
incl
push
insb
xchg
xchg
adc
iret
and
jp
pop
dec
idivb
fnstcw
mov
push
je
pop
int
xchg
mov
repz
ja
lods
ds
inc
out
or
sbbb
inc
fwait
in
ret
test
cmp
xor
aaa
jge
pushf
ss
pop
mov
mov
std
pop
dec
add
add
imul
and
adc
cmp
outsl
sbb
sbb
mov
sub
inc
add
adc
subl
out
cld
shlb
cmp
xchg
push
jecxz
aaa
dec
mov
lods
test
pop
mov
orl
mov
adcb
ficoms
test
adc
cmp
mov
xor
adc
mov
dec
jmp
mov
hlt
icebp
sbb
adc
outsb
jg
sbb
test
push
inc
pop
pop
mov
adc
or
cli
add
es
test
lea
out
gs
pop
add
mov
lahf
sbb
and
sti
dec
fdiv
loop
jmp
sbb
bsr
dec
or
or
sbb
push
subl
popa
xchg
mov
or
jp
jne
daa
mov
mov
adc
add
orl
into
mov
or
xlat
shlb
xchg
push
push
js
cwtl
cmp
xorb
movsl
icebp
and
clc
mov
lret
sub
ja
xchg
rolb
imul
or
mov
fchs
outsl
ds
mov
cmp
push
fsts
or
shll
mov
push
addr16
in
mov
xor
pop
sub
sahf
cmp
mov
in
jne
iret
lds
or
stos
pop
shll
and
pop
movsb
insb
pop
ja
movsb
lock
pop
and
movsl
popa
mov
inc
je
add
sub
popf
xchg
mov
adc
adc
cs
out
mov
out
rorb
test
repnz
push
cld
in
cmpsl
mov
mov
mov
gs
sub
je
adc
cmp
xor
icebp
cmc
cmp
mov
cli
xchg
sbb
jecxz
fwait
inc
xor
ret
mov
loope
or
jle
adc
sub
sub
mov
pop
test
mov
mov
xchg
jge
pop
xchg
pushf
movb
mov
xchg
jp
es
gs
int3
lret
pushf
mov
xor
rcrl
jbe
sbb
fmuls
adc
subb
mov
xchg
inc
cmc
stc
adcb
jmp
in
push
mov
arpl
dec
loopne
std
sub
ds
icebp
test
mov
aad
dec
std
repz
fcomi
xor
in
and
adc
pop
or
imul
lea
cs
stos
mov
jne
adc
clc
or
mov
sbb
lock
lcall
sbb
mov
sbb
add
roll
lcall
mov
scas
mov
dec
lds
lods
push
pop
push
dec
push
imul
fsubp
push
sub
add
aas
popf
cmc
call
sahf
or
xchg
add
aam
jnp
cmpsb
push
stc
sbb
mov
outsb
loop
push
xchg
push
add
jge
fdivrl
jle
je
out
sahf
push
punpckldq
dec
daa
or
subb
in
lcall
fsts
mov
loopne
int3
sti
cli
ds
ss
pushaw
inc
adc
adc
aam
jge
mov
add
xchg
fistl
stos
xor
push
jp
dec
movsl
stos
sub
cmp
subb
push
aas
sbb
dec
mov
or
lcall
addr16
xor
adcl
add
ret
adc
ret
adc
ss
xor
push
lret
enter
add
push
enter
test
ss
fs
sarb
sti
cmc
xchg
and
test
jg
fsubrs
dec
mov
jl
push
mov
shl
std
inc
in
adc
pop
and
lret
push
lret
ljmp
testb
cmpsl
and
cld
mov
mov
sbbl
dec
out
outsl
lret
dec
mov
out
xor
lret
ja
movsb
xchg
sub
xchg
pushf
dec
dec
fisubs
inc
mov
inc
sbb
mov
dec
addr16
insl
stos
cmp
pop
fidivrl
xchg
adc
xchg
mov
sbb
repnz
mov
or
or
pop
imul
add
jle
insb
mov
bound
popa
xchg
cld
jle
jae
sbb
addb
sub
mov
mov
jb
shll
lock
xchg
jecxz
sub
mov
lds
std
imul
sbb
int
fldl
and
shlb
test
cmp
cmc
int3
fcoms
ficoml
cmp
mov
pop
rorl
dec
mov
jle
push
movsb
xor
incl
inc
mov
sub
cmp
ret
jecxz
jl
mov
mov
adc
in
mov
xor
push
rcl
adc
aaa
sti
push
nop
shlb
stos
lcall
fs
fcoms
cmpb
out
pop
pop
push
das
aas
jg
adc
pusha
int3
adc
push
loop
flds
data16
and
jne
popa
popf
dec
roll
jle
push
jo
popa
int3
imul
outsl
ja
fcoml
sub
sbb
sbb
push
sarl
jnp
push
xor
cmpl
add
xchg
and
jb
movsl
xchg
clc
loopne
xchg
movsb
mov
inc
and
xor
inc
rorl
pop
add
mov
cmpsb
jge
movsl
mov
add
out
rcr
aad
imul
mov
push
xor
fidivl
data16
mov
add
mov
inc
mov
add
in
lods
lretw
inc
mov
aas
or
jmp
sbb
add
rclb
lds
dec
fsubs
pop
xchg
test
sbb
loop
adc
cmp
pushf
outsl
rcll
imul
cs
repz
push
fsts
xchg
fisubs
and
xor
pop
adc
cli
pushf
sbb
movsl
cmp
test
test
cltd
sbb
push
cmp
inc
lret
test
and
jecxz
pop
loope
icebp
jp
sar
mov
cmc
mov
cwtl
lea
in
jns
test
es
push
dec
jp
test
fnsave
xor
xchg
into
dec
and
inc
call
rclb
pop
std
jmp
into
jmp
push
lea
addr16
and
mov
dec
xor
inc
mov
jmp
lcall
test
divb
ja
inc
clc
adc
lods
xorl
loop
and
add
mov
inc
mov
cmp
xchg
jmp
xchg
adc
cmp
sub
xchg
xchg
leave
scas
cs
push
popl
fisubrs
jecxz
std
outsl
and
pop
stos
inc
push
out
sub
sub
pop
xchg
nopl
repz
mov
push
mov
leave
inc
test
jnp
or
test
mov
dec
mov
adc
out
in
mov
fwait
daa
xchg
repz
ficompl
aaa
popa
adc
pop
dec
jno
jno
pop
repz
mov
sarl
arpl
xor
jbe
lods
in
int3
into
and
inc
push
add
jge
mov
cmp
sub
negb
in
inc
rcrb
iret
cli
scas
jo
jb
std
or
sub
ss
push
lods
pushf
cmpxchg
test
add
mov
jle
jge
call
dec
xchg
sahf
adc
sub
inc
xchg
test
inc
adc
mov
shrl
sbb
dec
mov
pop
xchg
lods
les
lret
fsubr
jp
xchg
xor
or
mov
xor
mov
xchg
or
fists
loope
subb
fsubl
scas
jle
mov
push
jmp
cmc
repz
mov
pushf
out
ljmp
pushf
mov
mov
insl
mov
ljmp
pop
cmp
jbe
shlb
pop
sbb
jno
jge
mov
repz
sub
adc
mov
imulb
fisubs
adc
hlt
hlt
loop
mov
sbb
adcb
pop
mov
inc
dec
bound
std
out
aad
mov
testl
adc
cmp
jno
hlt
xlat
sub
je
dec
push
insb
movsb
ss
or
out
lock
or
ret
out
mov
jmp
addr16
adc
jb
lods
mov
xorb
in
test
mov
les
jmp
je
cmp
pop
fimull
inc
stc
or
lea
in
daa
cmpsl
in
repnz
pop
push
lds
xchg
outsl
sbb
aas
stc
shll
or
xchg
push
mov
jne
or
aaa
insl
cmpsb
pushf
sub
add
and
cmc
add
push
test
or
mov
pop
inc
pop
sbb
ss
in
xchg
jno
and
adc
and
push
cli
imul
mov
mov
or
push
ret
jg
add
push
leave
jl
aas
mov
cld
les
dec
add
mov
fidivs
mov
sti
data16
popa
testl
add
dec
leave
popa
arpl
arpl
push
push
sub
js
pop
hlt
call
xchg
adc
scas
movsb
lock
js
leave
repz
sbb
xchg
mov
mov
out
pop
int
icebp
repz
or
pop
jle
sahf
fildll
movl
aam
pushf
cmp
aaa
lahf
test
pop
jle
movb
xchg
arpl
ret
fidivl
test
les
imul
stos
inc
xacquire
xor
pop
sub
jl
pop
push
or
fldenv
cld
sbb
into
adc
xchg
adc
jae
xchg
pop
jmp
inc
test
xchg
jmp
cmpsl
rorb
jbe
mov
or
push
std
jecxz
pop
jbe
leave
add
inc
mov
push
and
mov
aas
mov
cmp
inc
pop
mov
cmp
add
imul
fwait
dec
mov
xor
push
lock
dec
mov
push
mov
dec
add
test
adcl
stc
cli
sbb
stos
xchg
scas
jmp
mov
out
js
mov
and
inc
mov
mov
xorb
stos
out
adc
clc
xchg
lock
aas
mov
mov
pop
out
mov
xor
test
cmp
lods
xor
dec
and
or
fists
push
add
aad
and
jb
cmp
xchg
lock
pop
xor
addr16
pusha
popf
fcomip
xlat
and
xlat
pop
dec
mov
icebp
jle
add
mov
pop
imul
add
push
roll
fildll
sarb
fcmovne
adc
test
test
inc
insb
ja
add
mov
sti
in
std
loop
stc
cmp
dec
inc
cmpsb
pusha
pop
arpl
cmp
cmp
or
lahf
daa
mov
inc
mov
jecxz
popa
repnz
movsb
sub
sbb
aaa
cmp
lea
and
push
mov
bound
jle
pop
dec
jl
mov
mov
xor
inc
jne
lds
pop
inc
pop
cmp
mov
xor
push
out
xor
lcall
pusha
lahf
sub
lock
dec
xlat
jae
push
mov
insl
and
mov
and
xor
pop
cmpsl
mov
aad
dec
adc
dec
and
xchg
test
mov
mov
and
pushf
outsl
sub
jmp
xlat
pop
xlat
stc
insb
rcr
arpl
sub
gs
mov
jp
aad
jmp
add
mov
sub
in
jb
dec
cltd
in
sbbl
cmp
sub
sbb
mov
popa
aaa
rolb
divl
jbe
jbe
or
or
add
rolb
jle
out
push
dec
pop
iret
lcall
adcl
int3
inc
cli
xlat
iret
mov
rorl
sbb
jecxz
fs
pop
or
stc
cmp
xor
fmuls
rcrb
sub
xchg
and
les
rorb
das
or
push
push
jle
aam
or
xor
jle
lock
js
mov
ds
mov
inc
nop
and
mov
int3
mov
int3
clc
xor
xor
jb
xchg
mov
mov
pop
lods
pop
not
lahf
add
cmpb
movsb
mov
iret
js
adc
ljmp
test
xchg
pop
xor
mov
pushf
cmpsb
loope
rol
gs
pusha
pusha
clc
mov
int3
pushf
cltd
test
push
sub
mov
mov
lahf
or
pop
or
push
jbe
fsubrl
scas
dec
mov
add
and
pusha
xlat
mov
add
lods
or
ja
inc
lea
rcrb
in
inc
inc
mov
pop
push
cmp
push
movsl
push
push
push
push
xlat
inc
loope
add
in
cwtl
mov
nop
pop
and
mov
mov
loopne
push
jp
xor
mov
ret
loope
pop
jno
xchg
insl
fcomps
jge
lods
cmc
cmp
mov
add
push
test
xor
repz
loop
dec
rcrl
nop
lea
test
sub
and
pusha
jae
cmp
popa
mov
inc
shrl
pop
repnz
repz
cmp
pusha
jecxz
cmp
xlat
mov
xchg
jmp
mov
daa
rcrl
mov
scas
push
xor
jecxz
popa
push
addb
aam
pusha
pop
fcom
icebp
adc
adc
xchg
dec
pop
nopl
dec
test
mov
outsl
lret
mov
arpl
stc
shlb
xchg
pop
sbb
test
inc
sub
and
and
or
gs
xor
fcmovnb
mov
push
imul
sbbb
push
orl
mov
sbb
into
inc
popa
xchg
cwtl
mulb
ret
les
add
jp
scas
es
loope
int3
mov
es
inc
dec
xor
fistpll
insl
aas
adc
rep
insb
add
std
adc
mov
cmp
mov
mov
repnz
jb
sub
inc
pop
or
push
sub
mov
inc
lods
pop
rcll
xchg
mov
cmp
lods
mov
bound
cmp
divb
dec
insl
sbb
in
adc
and
leave
sub
popf
sbb
pop
sar
or
pop
into
fidivl
jns
aas
dec
inc
push
inc
subb
mov
or
cmc
xor
inc
adc
xor
mov
in
test
push
imul
out
mov
xchg
aam
or
test
in
int3
repnz
and
inc
xchg
fistps
sbb
sub
add
into
mov
cmp
es
fbld
pop
push
adc
adc
xchg
test
push
xchg
ljmp
push
test
iret
mov
xchg
add
imul
xor
push
xor
pop
push
dec
lea
loop
adc
rcr
aam
push
les
movsb
int
dec
xchg
loopne
xor
cmp
pop
push
and
rcrl
aaa
mov
pop
rcr
cmp
mov
dec
sbb
xor
rcrb
mov
jg
jno
ret
sub
adcb
fsubrl
adc
xchg
fwait
xlat
fcomp
int3
mov
push
mov
pop
cld
cmc
movsl
in
daa
adcl
pop
pusha
mov
and
sub
insl
push
addr16
les
popa
mov
or
xor
mov
mov
imul
sti
or
int3
notb
icebp
add
arpl
sahf
xchg
adc
fiaddl
inc
push
xlat
and
push
fstl
fwait
or
jge
daa
mov
cld
orl
dec
sbb
ds
cmpb
adc
pop
ljmp
cmpsb
jmp
ds
sub
mov
dec
or
push
sahf
mov
mov
dec
scas
scas
adc
jle
je
or
inc
test
mov
pop
mov
not
out
xchg
xchg
lock
popa
arpl
fnstenv
sbb
aaa
sub
adc
fistl
repz
js
mov
out
cld
div
inc
add
stc
stos
xchg
jo
mov
push
shlb
jo
cli
xchg
loope
stos
test
and
push
pop
pop
fldcw
dec
add
fnstenv
sub
xor
sub
pop
cmc
xchg
fimuls
into
add
cmp
cmpsl
jbe
pop
push
pop
push
xor
mov
sbb
push
push
cmp
leave
dec
movsb
les
jl
jnp
fldl
cmp
fadd
add
stos
dec
imul
jo
sti
mov
clc
aas
xor
adc
leave
xorl
mov
aam
xor
outsl
cmp
mov
loope
lahf
push
daa
lret
in
aaa
lret
adc
out
mov
insb
xchg
xlat
push
fmull
cmovno
jb
cld
std
fsts
imul
adc
stos
insb
adc
imul
push
int3
int3
shrb
sbb
outsl
inc
jp
jle
divl
aas
mov
imul
add
xor
cmp
dec
pop
sub
ret
sbb
mov
mov
cwtl
push
cs
in
xchg
sbb
cmp
mov
or
sub
mov
popf
sub
or
sbb
jae
outsl
popf
mov
adc
and
les
sbb
jno
rorb
mov
int
mov
rolb
push
arpl
clc
fsubrs
pushf
les
sbb
mov
rorl
pop
mov
jb
cli
jp
sub
xchg
mov
mov
or
cwtl
cwtl
xchg
push
repz
enter
in
or
movsb
shrl
out
adcb
mov
das
decb
mov
mov
adc
mov
test
popf
xlat
out
jg
fisubs
adc
gs
das
mov
fsubs
push
add
mov
lahf
scas
jno
sub
jnp
xchg
mov
push
mov
sbb
hlt
out
xor
aam
add
pop
fcmovne
pop
pop
pop
icebp
mov
xchg
jo
stos
sbb
in
push
sahf
mov
bound
insl
out
inc
shrl
std
and
inc
mov
fcom
ljmp
mov
dec
inc
mov
sub
mov
std
adc
inc
je
mov
cmp
sbbl
dec
mov
xchg
push
pop
stc
aas
dec
gs
into
fs
fstps
mov
sbbl
cmc
jo
and
mov
mov
xor
mov
xchg
adcl
add
pop
jle
dec
test
add
and
fists
lea
xor
js
pop
xchg
lds
aad
pop
mov
int
pop
into
sti
loope
js
xchg
mov
in
mov
adc
sahf
fildl
movsl
aas
add
dec
into
sub
imul
xchg
xor
sbb
push
hlt
insb
pop
and
pop
mov
pop
push
inc
scas
dec
mov
fnsave
nop
pop
fs
and
shlb
test
mov
pushf
pop
mov
push
inc
sbb
icebp
lock
jp
aas
or
adc
or
popf
mov
or
sub
push
in
sbbb
cli
out
pop
lcall
nop
ss
sub
addr16
orl
lahf
mov
xchg
data16
push
add
cmc
xor
mov
or
cmp
orps
jp
xchg
inc
xchg
pop
bound
jecxz
dec
xor
sahf
sub
or
jns
push
icebp
cmc
mov
repz
shrb
movsb
jp
dec
fwait
subl
in
inc
lods
sbb
fnstsw
cli
mov
jo
arpl
test
addl
mov
push
rolb
sbb
mov
int3
fildll
push
cwtl
hlt
cmpsb
gs
push
cmp
jl
repnz
in
push
xchg
xchg
and
jnp
test
movb
xchg
mov
and
jg
jl
in
loope
leave
sub
and
pop
arpl
dec
or
cli
fldenv
test
daa
dec
and
or
inc
xor
push
add
mov
lods
dec
pusha
shl
mov
repnz
xchg
insb
sub
xor
and
call
ss
add
cwtl
lods
push
mov
fwait
das
or
add
enter
dec
push
mov
pop
mov
daa
sub
xchg
sbb
mov
push
fstps
cmp
pop
jl
gs
xchg
add
add
sub
sbb
mov
dec
dec
mov
push
scas
add
leave
or
outsb
rolb
leave
mov
mov
rcl
mov
mov
or
jg,pn
mov
mov
xor
clc
push
out
xlat
push
add
loop
xor
ljmp
push
repnz
xor
insb
adc
insb
icebp
push
outsb
xchg
jne
fisttpll
and
pop
add
xchg
inc
shll
push
icebp
push
test
ret
movsb
bound
and
jns
xor
sbbb
mov
or
pop
test
movsb
adc
jns
out
in
incb
mov
mov
cmp
mov
pop
loop
sub
sbb
sti
stos
lods
mov
xor
jmp
bound
add
idivl
icebp
sbb
push
popf
and
test
or
adc
sar
mov
sahf
adc
aam
sti
jg
add
sahf
pop
inc
cmp
dec
sub
out
xlat
dec
int
or
lods
dec
pop
int3
cmpsb
xchg
rorl
dec
mov
xor
iret
dec
aaa
stos
inc
jle
pop
and
insb
adc
daa
or
imul
xchg
ljmp
lds
ds
xorb
faddp
sub
cmp
sarl
sub
mov
push
cmp
cmp
sub
jb
and
stc
xor
ja
scas
sub
push
out
jns
sarb
ds
xchg
mov
xorb
fisubrl
xchg
fisttps
mov
add
push
xor
popl
or
scas
jecxz
push
mov
stc
dec
insl
out
or
test
mov
outsl
jns
pop
dec
inc
js
push
enter
packsswb
lds
insb
outsb
loopne
lock
gs
cmp
add
adc
or
sahf
sti
leave
xchg
fisubs
ret
or
shlb
dec
cmp
out
repz
add
pop
sbb
nop
jne
cwtl
std
pop
dec
sbb
pop
mov
int
add
jmp
and
js
fstps
pop
aad
lea
cmpsb
cmc
lcall
jmp
popf
fadds
jg
ficompl
push
adc
sbbb
mov
mov
dec
push
mov
mov
xor
pushf
scas
add
test
dec
cmpsb
ds
in
mov
push
pop
sub
aam
enter
je
in
push
outsb
mov
and
jmp
pop
imul
fcomi
enter
jg
aas
fisubrs
mov
call
iret
mov
pop
add
sbb
jne
pop
sub
dec
dec
xor
pop
sbb
ljmp
jae
cvtdq2ps
test
xchg
pop
loopne
cmp
add
flds
dec
pop
ret
push
or
lret
add
pop
in
xor
mov
je
or
lea
idiv
ret
insb
stc
mov
mov
push
cli
mov
mov
jnp
lods
cmp
loope
shll
mov
mov
shll
negb
sbb
adc
out
dec
lahf
fadd
test
adc
lods
lret
inc
fmuls
inc
pop
mov
sub
imul
mov
fimuls
jmp
repz
sub
gs
and
lcall
lods
movsb
inc
or
lahf
insb
arpl
sub
cmpsb
cmpsb
jge
and
xchg
jmp
int3
call
mov
pop
sbb
sbb
inc
addl
fcoml
jb
movsb
mov
sbb
push
pushf
or
loopne
xchg
xor
jg
pop
push
in
scas
sbb
jmp
inc
pop
sbb
push
xor
xchg
lcall
mov
mov
xchg
jg
in
or
push
jnp
xor
cmpsb
js
xorb
cwtl
mov
pop
pop
pop
mov
stos
adc
push
push
jle
xor
mov
movsb
sub
negb
sbb
movsl
insb
add
jo
call
cmp
loop
mov
int
xor
in
pusha
xorl
enter
fisttpl
out
cmpsl
inc
xlat
pop
mov
mov
mov
jl
aam
push
xor
insl
aas
sbb
pop
jns
mov
sbb
xchg
les
rcll
imul
add
add
lret
mov
inc
cli
enter
lea
ret
inc
orl
mov
ret
adc
push
outsl
test
insb
cs
fimull
or
push
scas
jo
pop
andb
sahf
sgdtl
cs
insb
mov
cmovno
in
push
push
pop
insb
shrb
into
mov
or
cmc
pop
movsb
fists
lods
loop
loope
mov
dec
lret
icebp
push
add
pop
or
scas
mov
pop
cmp
es
popf
fcmovnbe
dec
mov
or
clc
fwait
mov
add
aam
cs
add
cmp
movb
cmp
push
aam
adc
push
pop
pop
pop
add
add
dec
push
jmp
jge
ret
add
movsl
or
xlat
and
sbb
xchg
lret
or
in
push
pop
aas
mov
daa
jp
xor
and
or
push
pop
mov
xchg
dec
pop
ljmp
stc
out
test
repz
and
sbb
sti
and
rorb
dec
hlt
loope
jge
outsl
fisubrl
push
inc
sbb
imul
data16
fsin
jo
mov
sbb
lret
fiaddl
mov
add
xlat
aas
push
fucom
in
in
mov
mov
daa
dec
sbb
pop
sub
pop
pop
xor
insl
and
sub
ds
xchg
xor
lds
dec
insb
and
sub
clc
scas
inc
pusha
jno
dec
mov
push
fs
inc
xlat
fstpl
dec
push
mov
dec
dec
mov
loopne
insb
xchg
inc
dec
cmpsb
and
pop
jae
xchg
push
and
repz
mov
aad
pop
cmp
mov
xchg
add
cmp
repz
cmc
mov
cmp
mov
xorl
outsl
stos
mov
out
in
jge
dec
jmp
xchg
pushf
push
fsts
dec
mov
in
pusha
mov
pop
pop
xchg
xor
in
mov
rol
ficoms
ja
movsb
rcrl
jmp
mov
mov
lock
inc
daa
and
sahf
push
sub
mov
ja
imul
sbb
sbbb
jne
mov
push
mov
xchg
imul
xlat
lods
and
je
cmp
movsl
inc
ljmp
lods
mov
push
push
sbbb
repz
nop
cmp
test
sub
push
dec
mov
jl
cmp
int3
or
aaa
rol
inc
sbb
adc
xchg
jbe
lahf
call
inc
mov
or
pusha
pushf
dec
lock
cmp
sub
xchg
in
ds
lahf
shl
push
ffree
lds
push
lods
pop
popa
test
andb
mov
shr
mov
int3
xchg
sarl
jl
or
dec
test
mov
movsl
pop
ficomps
fadds
inc
inc
test
xchg
call
dec
ja
lods
pop
sub
push
gs
hlt
stos
inc
push
xchg
push
dec
adcb
scas
fsubs
xor
fdivrl
push
xor
mov
inc
dec
stos
push
fwait
sub
push
bound
ja
out
lcall
pop
push
push
pop
movsl
mov
cmp
aam
test
dec
iret
and
xlat
js
loopne
fwait
jbe
xor
lds
cmp
rorb
mov
mov
in
xlat
cmc
leave
popf
pop
sub
sub
mov
in
rcrb
dec
mov
push
in
sarl
and
test
push
adc
xor
je
lcall
lahf
shll
dec
int
lods
gs
filds
ljmp
xchg
ds
pop
notb
or
jb
jnp
ljmp
loopne
fldt
and
dec
mov
popl
push
fildl
sahf
cli
mov
jl
mov
out
mov
push
fistps
jp
aad
scas
push
dec
mov
fstpl
cld
add
inc
xchg
dec
mov
jns
jecxz
xchg
pop
stc
shl
icebp
or
rcll
sbb
rolb
dec
fs
mov
and
mulb
xchg
jnp
mov
adc
push
mov
push
fsubl
push
jl
pop
aad
idivl
xor
fwait
add
add
shl
push
insl
mov
jns
mov
adc
sahf
nop
ss
dec
sahf
aas
inc
cmp
sbb
add
insl
leave
fnsave
cmp
or
mov
and
add
jo
test
inc
hlt
loop
pop
hlt
mov
push
aaa
mov
adc
test
loope
icebp
dec
rcr
push
icebp
dec
nop
insb
aam
or
test
fs
stos
sbb
adc
push
lcall
add
mov
xor
jb
arpl
push
push
iret
sbb
jo
xor
loopne
dec
pop
mov
jne
sti
adc
cmpl
fwait
shlb
push
mov
fdiv
sahf
dec
xchg
movsl
pusha
lahf
or
ss
adc
addl
sbb
test
xchg
in
push
cs
pushf
xchg
fisubrs
mov
and
mov
cmpsl
jmp
test
xchg
dec
sbb
cmp
jl
jmp
add
cli
jmp
lret
mov
in
fidivrs
insb
push
jne
pop
xlat
in
out
or
lods
add
sti
dec
push
fs
pop
cmp
aad
clc
mov
lret
cmp
xchg
xchg
dec
push
int3
cltd
into
mov
cltd
cmp
sub
shrl
sarb
leave
inc
xchg
jb
jg
rorl
inc
mov
inc
cwtl
ljmp
jo,pn
imulb
test
pop
cwtl
cmp
sub
fs
and
frstor
call
in
sub
xor
pop
cmp
cld
and
dec
movsl
or
mov
es
mov
stos
int3
mov
loope
inc
cwtl
test
xchg
imull
popa
movsb
inc
ljmp
pop
sub
cmpsl
xchg
lods
adc
cmp
fmuls
xchg
lret
fmuls
mov
sbb
int
pushl
jge
cmc
cmpsl
subb
push
or
insl
jmp
sahf
push
imul
dec
jb
xchg
fs
aad
scas
out
cwtl
sub
add
frstor
test
fadd
sub
push
mov
cmp
in
xcrypt-ecb
cmpsl
dec
push
pusha
xor
push
cmpsl
loope
sub
mov
pop
and
cmp
dec
mov
add
out
and
std
cmp
add
sub
imul
and
xor
and
cmpsb
mov
bound
cmp
lcall
mov
dec
loop
arpl
es
pop
add
insl
test
notb
pushf
sbb
inc
test
mov
lcall
xchg
ret
jmp
adc
aas
mov
add
push
aam
adc
cltd
data16
dec
jge
cli
adc
fwait
imul
push
pop
lcall
movsb
lods
lahf
xor
sub
out
xchg
mulb
dec
sbb
ja
ret
lods
push
pop
push
scas
fsubl
pop
jmp
mov
sbb
inc
aam
push
or
jmp
out
and
shlb
add
outsl
pushf
movsb
or
gs
lret
mov
fmuls
cltd
pop
adc
adc
pop
lock
xorl
jg
pop
sub
sti
mov
cmp
lock
into
test
push
andb
movsb
inc
shlb
push
or
repz
test
cwtl
adc
movb
adc
aaa
je
out
mov
in
add
push
in
jle
inc
shl
into
xchg
and
hlt
sbb
cli
and
outsl
pop
nop
push
pop
jae
sbb
int3
jns
sbb
ds
out
sbb
pop
mov
jecxz
ss
xor
fadd
popf
es
pop
xchg
addr16
ret
cmp
test
xchg
test
ficompl
push
dec
sbb
gs
cmp
lahf
popa
movsl
mov
out
hlt
mov
mov
shrl
add
xor
ljmp
mov
fld
imull
push
cmp
shl
inc
xchg
sbb
das
sbb
call
cmpsl
pop
and
sub
nop
pop
int
je
pop
int
sub
data16
fisubrs
sbb
jge
sbb
out
into
mov
mov
mov
arpl
adc
mov
jne
mov
xor
add
pop
pop
cmc
jb
cltd
call
ret
lret
sahf
sbb
pop
int
repnz
jbe
xchg
inc
cmp
pop
lock
lea
adc
testl
pop
push
push
adc
scas
push
lods
faddl
cmp
xchg
or
xchg
call
pop
push
enter
ss
sub
cli
mov
dec
enter
repz
ja
fs
sbb
lcall
aaa
daa
daa
mul
sarl
jp
pop
lock
jae
movups
imul
dec
xchg
and
repz
and
mov
bound
rcl
lock
pop
int
insb
push
stc
mov
iret
lods
inc
xchg
fidivs
and
scas
jno
add
xchg
pop
in
push
jns
xchg
mov
cld
push
dec
inc
lods
ret
mov
repz
shll
shll
pop
inc
xchg
mov
adc
fistl
sbb
jge
mov
data16
pop
dec
cwtl
add
jb
mov
jle
pop
sbbb
fisttpll
gs
jp
or
cli
pop
add
xchg
mov
push
dec
mov
leave
adc
and
or
mov
in
shlb
imul
mov
pop
sbb
loope
fmull
inc
jbe
mov
inc
push
clc
inc
jmp
icebp
inc
sub
mov
and
cmpsl
add
cmp
xchg
or
mov
stc
cs
xchg
iret
and
rcrb
xchg
jae
mov
out
dec
dec
jl
cmp
adc
jbe
xchg
mov
in
test
mov
and
cltd
dec
add
out
inc
inc
pop
mov
jmp
stc
xchg
push
movsl
popa
outsb
jb
cmp
dec
ljmp
mov
cli
sub
jg
mov
push
daa
xor
jmp
outsb
bswap
mov
inc
cmp
or
lret
cmp
enter
aad
or
pusha
pop
sti
or
testb
jp
and
xchg
cmp
mov
sbb
dec
pop
sahf
std
nop
jo
mov
push
sbb
sbb
push
mov
iret
lahf
jns
adc
insb
cs
xchg
rcll
lret
mov
xor
fwait
daa
cmp
adc
mov
sarl
paddd
mov
mov
aam
fisubrl
subb
adcb
cpuid
arpl
add
das
sbb
xlat
dec
popa
stos
mov
or
loope
xchg
ret
pop
lea
idivb
addr16
cmpsb
add
add
inc
popf
lock
xchg
mov
pop
loopne
enter
sbb
adc
mov
movsb
in
decl
or
push
mov
jl
test
popa
mov
pop
add
fsts
ret
add
dec
pop
sahf
inc
jns
out
jno
xchg
and
jg
cmp
out
insb
pop
add
aaa
jge
push
or
fsubl
cmc
adc
inc
fwait
imul
mov
sbb
jb
and
mov
adc
cli
sti
sbb
push
out
dec
or
adc
xchg
mov
sbb
xor
test
orb
xchg
out
push
pop
xor
sbb
mov
fst
jno
repnz
jl
psubsw
or
test
call
pop
and
or
push
stos
out
xchg
std
scas
adc
orb
or
lcall
lods
mov
jnp
xchg
data16
in
out
pop
clc
xor
or
repz
pop
xchg
push
xchg
push
push
fistl
dec
inc
cmp
mov
xor
nop
mov
adc
mov
mov
sbb
lds
mov
sarl
xchg
jg
iret
mov
inc
jl
inc
cmp
jnp
jecxz
push
dec
mov
std
xor
shll
imul
lock
xor
je
add
mov
jnp
enter
pop
lods
or
and
scas
cli
mov
cmp
mov
std
adc
out
scas
xor
lcall
and
and
cmpxchg8b
enter
stos
cwtl
dec
cwtl
mov
lods
ljmp
mov
sbb
cld
cld
fdivr
pusha
out
sbb
pushf
push
pop
pop
mov
into
lret
rorl
dec
test
test
inc
push
push
sbb
call
push
sbb
movsb
sbb
and
in
fidivrl
mov
punpckhbw
cmp
fs
aaa
pop
arpl
jmp
cs
sbb
and
and
mov
sahf
cld
pop
xor
pop
out
jge
mov
cld
mov
mov
jno
iret
mov
ret
fistps
test
pop
jnp
cmp
cmp
fisubl
les
stc
and
or
loope
pusha
jae
lds
aas
and
outsl
xchg
pop
mov
add
jnp
outsl
mov
inc
bound
push
leave
ret
pop
or
addb
idiv
jno
mov
cmp
jp
dec
dec
push
loop
xchg
lcall
fwait
std
pop
fwait
outsl
insb
cmp
int
dec
fistpl
cmp
ds
dec
jp
push
jp
push
popa
rorl
std
pushf
adc
mov
adc
cmc
jecxz
push
mov
add
pusha
add
jb
dec
cltd
lret
sbb
xor
and
aad
fs
cmp
sub
sahf
cmp
mov
inc
and
mov
xchg
sub
fwait
or
test
push
int
jo
mov
outsl
mov
xor
fs
aaa
jbe
pop
pop
jnp
jle
das
int
jle
or
stos
bound
pop
loop
scas
scas
fbld
xor
adc
or
jmp
push
mov
sbb
outsb
pop
add
push
pusha
cld
mov
loopne
mov
xor
sbb
push
or
dec
xor
and
dec
xchg
cmp
in
xchg
fcompl
fsubl
es
insl
lcall
cmp
leave
outsl
cmp
jge
rolb
hlt
pusha
stos
mov
cwtl
xor
mov
xor
flds
xchg
pop
loopne
icebp
fistpl
sbb
dec
andl
gs
ljmp
cli
dec
mov
pop
push
pusha
jp
xchg
sub
aas
or
xchg
mov
in
cmp
jb
add
pop
pop
stos
lods
int
scas
xchg
pop
cmpsl
dec
imul
pop
dec
dec
and
cltd
add
mov
adc
fcompl
aas
shlb
mov
es
sub
adc
mov
dec
and
xlat
xchg
xor
pop
scas
mov
pop
mov
pop
pop
add
cmp
pop
xchg
mov
loopne
sbb
add
movsl
ljmp
and
adc
mov
push
lret
dec
sbb
push
inc
idivl
sbb
jbe
je
xlat
popf
adc
xor
sti
jae
pop
cli
adc
lahf
jbe
ret
in
and
push
js
test
pop
popf
pop
xchg
inc
adc
movsl
stos
fwait
pop
js
test
pop
push
xchg
pop
jge
in
lret
outsb
ss
mov
cmp
ffreep
push
xor
mov
je
test
ret
je
cs
nop
jge
pop
push
ja
iret
and
add
adc
mov
mov
inc
in
cmpsl
imul
or
sbb
shrl
xchg
and
xor
cmpsb
loope
lock
mov
xchg
loope
in
adc
push
call
addb
sub
iret
test
sbb
dec
jecxz
xchg
sub
and
adc
inc
iret
xor
pop
lahf
pop
or
mov
cmpl
pop
cmp
dec
cmp
sbbb
pop
jg
xchg
mov
das
and
push
push
sahf
sbb
push
sti
or
sbb
add
fcmove
pop
fistpl
aad
sbbb
cmp
adc
adc
insl
lcall
xchg
add
daa
int3
rcrl
test
jg
sarl
add
mov
es
or
mov
popl
pop
insb
cmp
ja
aad
xor
adc
adc
bound
adc
cmp
push
inc
cltd
rcl
xchg
stc
jnp
add
ret
adc
mov
inc
fisubrl
sub
fs
xorl
cmp
ljmp
or
mov
mov
or
test
push
adc
imul
outsb
sahf
addl
mulb
cmp
nop
dec
bound
js
shll
gs
push
xchg
aas
mov
push
cmp
or
hlt
lret
push
sub
add
subl
and
dec
sub
mov
jge
inc
push
je
cmpsl
je
out
inc
push
sub
lea
std
shlb
push
popf
mov
sub
xchg
nop
shlb
jno
xor
into
cmp
mov
adc
out
lds
xchg
inc
push
cmc
in
and
dec
mov
mov
imul
jecxz
push
xchg
mov
xor
movsl
push
mov
mov
ds
xchg
xchg
repnz
mov
cmp
fsubl
in
push
and
sarl
push
pushf
xchg
add
inc
iret
cmc
adc
test
lods
das
ljmp
adc
inc
repnz
sar
adcl
scas
and
ror
cwtl
pop
std
jp
sub
andb
pop
mov
inc
stc
hlt
ja
and
loop
aas
push
adc
sbb
shll
mov
xchg
mov
lret
pop
sub
pop
sub
roll
xor
mov
nop
xor
int
aas
sahf
inc
push
and
sub
or
push
out
icebp
mov
roll
mov
or
cmp
inc
pop
xchg
xor
push
daa
out
or
inc
cwtl
inc
rcl
adc
scas
xchg
cmp
mov
ficoml
pop
mov
xor
jb
das
sub
mov
pcmpgtw
out
jne
sbb
int3
fisttps
mov
dec
mov
negb
add
es
pop
jbe
pushf
lea
sub
leave
ret
xchg
inc
xor
push
jbe
mov
mov
leave
mov
mov
fcomi
in
idivb
mov
clc
mov
adcb
mov
cwtl
subl
out
sti
mov
das
fmulp
pop
sarl
adc
pop
add
or
fwait
out
and
xor
mov
andl
sti
ljmp
divb
js
xlat
mov
xor
sbb
insl
insl
ds
cld
xchg
mov
xchg
or
jb
mov
rcr
stos
sub
in
stc
adc
ja
xor
outsl
hlt
pop
out
loop
and
add
mov
sahf
mov
or
mov
ret
lcall
or
jbe
int3
in
repz
adcb
sti
ror
xchg
outsb
jo
mov
pop
xor
cs
addl
enter
inc
push
mov
call
adc
icebp
lea
sar
cmp
loop
xchg
sub
iret
stos
sub
cmpsl
leave
or
stos
sub
dec
call
and
sub
ljmp
aam
sbb
aad
fcmovne
sbb
data16
push
pop
in
cli
push
enter
mov
mov
je
mov
or
jae
loop
mov
adc
je
ss
jecxz
pop
insb
or
push
stos
shlb
pop
dec
mov
loop
in
sub
cmpb
aaa
fbstp
fcomps
inc
pop
xlat
xor
lcall
dec
call
dec
sub
jo
and
rolb
add
push
test
sbb
pop
inc
mov
push
and
clc
sbb
add
inc
aam
mov
lret
cmpsb
pop
sbb
cmpl
xchg
push
shr
inc
outsb
orb
lods
lods
mov
ljmp
xorl
test
pushf
test
push
mov
mov
sbb
push
mov
jge
adc
sti
jmp
cltd
mov
jecxz
into
add
and
mov
inc
lret
inc
nop
loopne
add
and
daa
ss
xor
add
ja
lds
xchg
enter
daa
mov
int3
pop
test
xchg
xchg
push
cwtl
lahf
cmp
push
adcb
rcrl
jecxz
mov
loope
mov
imul
sbb
sbb
roll
jl
test
xor
ficompl
sub
clc
ret
adc
inc
xchg
sbb
fsubrs
in
dec
add
or
and
maskmovq
notl
addl
xchg
stos
ret
adc
and
sub
pop
mov
pop
loopne
in
jb
hlt
shrl
in
fadd
sbb
add
or
pop
cmp
pop
arpl
sahf
mov
mov
mov
in
ret
sub
daa
add
jp
add
mov
icebp
mov
add
jmp
sub
movsb
mov
jg
int3
cmp
or
mov
or
jo
aad
jl
sbb
test
fidivrs
shlb
popa
adc
aam
or
jae
add
sub
mov
movsl
in
or
subb
pop
movsl
fidivl
loopne
push
mov
dec
popa
loop
das
movsb
fistpl
pop
or
jmp
push
lods
fisubl
and
je
xchg
in
pop
cmp
imul
js
in
movl
push
jo
pop
ja
sbb
jp
and
jecxz
push
sbb
sbb
int3
fcomps
cwtl
out
xchg
mov
pop
cmp
gs
pop
sarl
rorb
and
mov
cmp
mov
ss
stos
jnp
inc
add
in
mov
in
xchg
test
inc
or
inc
loope
rcr
cmp
push
insl
add
mov
dec
es
aad
imul
dec
mov
cwtl
std
inc
mov
fldenv
sub
pop
or
andb
inc
lea
cmpsb
daa
jecxz
push
mov
and
jae
adc
dec
mov
loope
test
dec
mov
data16
adc
pop
mov
xchg
push
pop
or
pop
test
subl
test
mov
imul
mov
mov
stos
push
inc
xchg
imul
fsub
mov
sub
jne
jb
push
enter
dec
shl
push
pop
pop
lret
imulb
out
call
sub
aam
or
popf
pop
nop
mov
jnp
mov
cmpsl
cmpsl
mov
cmp
pop
lret
jg
pop
pop
sub
push
mov
nop
mov
cwtl
aam
popf
push
inc
add
andl
xchg
movsl
inc
jne
sti
sub
inc
fisubrs
jns
gs
andb
push
sub
sub
mov
repnz
and
leave
cli
sbb
out
testb
fnstsw
mov
lcall
rcll
addr16
and
cmc
int3
adc
sar
cmpsl
pop
jnp
jne
xor
out
shlb
add
jo
mov
shl
sarl
and
stc
call
pop
cltd
into
mov
push
cltd
filds
lea
je
lods
pushf
xor
push
cmp
mov
and
fwait
int
pop
lods
movsb
add
stos
sub
mov
mov
sbb
mov
push
xchg
int3
std
push
and
xchg
ret
imul
cmp
je
cmp
cmc
push
imul
aad
sbb
jp
test
push
out
stos
aas
js
in
icebp
pop
lcallw
sub
out
jle
jno
pop
test
sbb
orb
cmpsl
jnp
lcall
fdivl
jle
sub
sub
adc
mov
mov
add
sbb
jbe
fsubr
push
jle
and
daa
subl
xor
dec
mov
lahf
loope
xchg
or
and
mov
int3
xchg
pop
fdivs
mov
shlb
fwait
rorl
xor
test
xor
pop
ffree
call
popf
movsb
mov
mov
lea
xchg
bound
test
mov
mov
and
mov
cmp
xchg
fidivrl
sub
inc
jge
pop
inc
fucomi
lds
lahf
inc
push
loop
cmp
push
outsb
sub
push
test
jae
stos
xor
movsb
mov
jae
daa
xorl
cwtl
dec
jge
xor
ret
mov
cs
cmp
inc
push
icebp
icebp
int
stos
rcll
xchg
lret
or
insb
xor
push
push
jo
cmpl
dec
add
xor
sbb
mov
ds
pop
mov
cmp
xor
sbb
std
iret
outsl
jmp
lahf
push
mov
xchg
and
and
sarl
mov
mov
aam
sub
in
xchg
xor
jns
js
inc
or
pop
xor
push
jl
mov
and
push
jae
lods
les
repnz
inc
fwait
punpckldq
mov
hlt
xchg
in
rolb
insl
and
sbb
inc
or
cmpsl
and
cmp
mov
int
adc
cltd
mov
mov
mov
mov
xchg
sbb
push
push
adc
push
cli
pop
lret
xchg
out
sbb
jne
cmp
outsl
in
pushf
inc
aas
insb
add
mov
inc
push
lret
and
pop
mov
dec
jbe
dec
vmread
cmpsl
cmp
push
push
push
scas
jge
or
mov
sub
cmp
mov
mov
adcb
pop
faddl
cld
add
jg
aad
xor
or
popa
push
mov
adc
mov
inc
test
rcrl
movsb
std
jmp
int
mov
mov
fmull
test
bsf
inc
sub
adc
repnz
stos
mov
add
mov
mov
jne
outsb
cmp
ljmp
fldt
xor
xchg
and
pop
and
dec
add
sbbl
mov
adc
xchg
mov
mov
in
jns
adc
mov
daa
sti
daa
test
rcrw
les
jno
movsb
adcl
fcomi
lahf
gs
mov
mov
es
mov
repz
sti
shl
shlb
daa
fidivl
scas
ljmp
mov
push
pop
ljmp
sbb
xlat
mov
cmc
ss
adc
lds
jbe
cmpsb
mov
enter
pop
mov
jg
loope
fidivl
mov
inc
stos
std
shrd
add
lock
mov
call
push
in
jo
mov
popl
movsb
jnp
mov
mov
fbld
fistpll
sbb
call
and
add
mov
lods
mov
jae
sbb
mov
testb
sahf
lea
push
mov
sbb
jl
adc
xchg
movsb
sub
subb
pop
loop
pop
pop
lods
decb
inc
into
xor
movsb
cltd
pusha
adc
jl
xchg
mov
sub
mov
push
or
mov
jmp
loope
adc
scas
and
add
aam
add
jne
lahf
sub
sub
or
add
sbb
mov
std
xchg
sub
mov
dec
dec
mov
cmp
aaa
mov
shlb
clc
loopne
enter
ret
mov
and
sbbb
xor
cmpl
std
imul
adcb
push
inc
out
xchg
stos
jmp
fistpl
fisubs
in
inc
push
cmp
rolb
add
mov
dec
mov
xchg
pusha
mov
adc
push
jl
test
dec
shrl
cmp
cmpsl
lret
cwtl
nop
flds
inc
cmp
sbb
push
jecxz
movsl
push
cmp
and
push
mov
mov
fwait
inc
das
into
ficomps
lcall
in
loop
and
cmc
nop
mov
insl
jg
fistpll
std
jns
je
pop
push
pop
inc
ds
js
xor
xlat
cld
cmpsb
sarl
in
sti
cmp
sub
out
rcrb
mov
add
fldcw
push
mov
je
test
in
test
rcrl
xchg
xor
into
dec
jp
mov
mov
rcl
xorl
test
jae
inc
xchg
adc
fsubp
mov
dec
cmp
inc
cmp
out
xchg
rcr
pop
ljmp
lock
inc
stos
cli
loopne
test
das
daa
inc
and
sub
hlt
or
jo
pushf
dec
adc
inc
gs
outsb
cmp
inc
aaa
jnp
in
cli
mov
xchg
push
add
xchg
push
adc
repz
cmp
and
push
cmp
es
mov
int
and
and
in
leave
pop
dec
cmpsb
xchg
lock
sbb
adc
and
xchg
adc
pop
sub
icebp
sti
mov
sub
xchg
cltd
fisttpll
lret
push
inc
arpl
and
outsl
inc
mov
push
int
cmp
mov
arpl
stos
jae
nop
adc
push
mov
xor
inc
sbb
inc
rcrb
xor
dec
adc
daa
fisubrs
out
sbb
add
repnz
test
cmp
inc
jle
sub
adc
in
popa
xor
lods
dec
in
jnp
test
ja
xlat
cmpsb
inc
sbb
adc
fidivrl
add
pop
in
dec
lret
mov
das
jecxz
loopne
loope
test
push
aad
sbb
cmp
loop
dec
jg
push
or
dec
jle
orl
cli
cltd
sub
push
lcall
pushf
loop
movsb
pminsw
jg
fwait
bound
or
stos
das
mov
dec
cld
aad
jns
pop
in
arpl
mov
loopne
ret
outsl
mov
push
rcrb
stos
addr16
ljmp
mov
xor
cmp
rclb
lock
fstpl
and
lods
push
mov
popa
mov
cmp
sbb
out
sub
mov
pop
xchg
adc
sti
daa
cmp
adc
adc
adc
sub
enter
in
jb
xchg
mov
sbb
rcll
les
jg
jmp
lds
cmpb
and
push
jae
daa
rorb
jae
sub
iret
jbe
add
fisttpl
rcll
xchg
cmp
stos
xchg
xchg
sub
xchg
cmp
mov
xchg
sub
mov
adc
ljmp
jnp
mov
mov
mov
fidivs
xchg
and
jno
mov
push
fs
lahf
dec
pop
sbb
and
das
lret
and
mov
fisttpl
mov
sub
shll
lret
jle
pop
xchg
gs
movsl
cs
pusha
mov
and
aam
xlat
inc
sbb
lock
addr16
popf
rclb
rclb
mov
mov
and
xlat
adc
mov
aad
lret
js
lods
ret
dec
rol
fs
ficompl
adc
out
and
gs
int3
in
repnz
repz
adc
inc
jle
push
ds
jl
lret
cmpsl
lods
movsb
sbb
sbbl
fmuls
int
pop
in
jg
addl
arpl
inc
das
pop
add
adc
arpl
pop
inc
pop
pop
iret
jns
jmp
icebp
daa
push
into
rcrb
xchg
push
lret
cmp
pushf
mov
xor
inc
lds
sbb
pop
jle
sti
lock
bound
or
imul
mov
test
pusha
test
mov
adc
jno
movsb
ds
ss
dec
vpunpckhqdq
scas
sub
mov
sub
popa
aaa
mov
xor
lock
lret
pminsw
fdivs
mov
insl
lea
jmp
clc
dec
fists
pop
xchg
test
jbe
push
rorb
sti
xor
bound
push
push
and
or
stc
fdivrs
push
sbb
loope
out
bound
mov
arpl
sbb
xor
pop
inc
sbb
out
mov
mov
mov
sbb
popa
dec
adc
arpl
lret
dec
test
mov
in
or
adc
iret
adc
xchg
daa
inc
xchg
sub
icebp
cmpsl
mov
fcomip
jle
pop
adc
mov
out
mov
jne
unpcklps
aaa
ret
fnstsw
dec
mov
jl
xor
cmpsb
jge
sahf
aam
fbld
push
push
push
pop
push
shrb
xchg
unpcklps
mov
cmp
pop
adc
ror
xchg
fildll
loop
or
mov
mov
xor
rcl
inc
leave
mov
pusha
cli
push
mov
mov
mov
sbb
in
gs
pop
jb
jg
inc
adc
cs
sbb
lcall
push
mov
out
pop
jne
jecxz
sar
pop
lret
dec
dec
inc
out
leave
push
fs
xlat
lods
xor
jge
xchg
out
aad
pop
jp
push
xchg
call
pop
and
xchg
mov
sar
cli
js
mov
mov
mov
lahf
mov
push
sub
rcl
mov
lahf
pop
adc
imul
and
cmp
mov
push
js
mov
in
add
sti
subb
push
es
aad
mov
jl
insb
cltd
or
mov
mov
add
add
fbld
fidivl
rcll
mov
jno
lods
push
sub
mov
shlb
fiaddl
fsubr
sub
fistl
out
iret
repz
mov
fbld
pop
cmpsb
pop
sarb
dec
not
lret
ds
lret
out
jge
int
mov
add
fdivl
lret
stos
jmp
or
pusha
sbb
popf
add
lods
or
int3
mov
dec
int
scas
push
mov
int
movsl
lea
ss
das
cmc
sbb
mulb
mov
xor
add
and
aaa
loope
pusha
xor
js
insl
and
add
add
or
add
adc
out
cmc
xchg
xchg
or
imull
fdivr
or
mov
fsubr
add
ds
in
jmp
xchg
dec
push
mov
xchg
xchg
sub
mov
inc
fldenv
fadd
loop
into
std
sbb
js
movsl
arpl
nop
mov
stos
ja
mov
clc
stos
addr16
cs
negl
xor
js
loopne
gs
mov
outsl
out
mov
nop
sarl
xchg
ds
test
loopne
shll
lods
push
cmp
xor
adcb
dec
xchg
sbb
test
jnp
in
pop
outsb
bound
and
ret
push
jl
mov
xor
xor
pushf
lret
jge
and
xor
adc
add
sbbb
enter
push
mov
testb
mov
stos
pop
sbb
jno
sub
and
push
mov
cltd
imul
jp
jl
movsl
fisubl
push
sub
iret
loop
cmp
hlt
ljmp
pop
lds
shl
lret
fs
xchg
sub
mov
cld
push
in
lahf
sub
hlt
hlt
xchg
sub
aas
fmull
push
test
and
inc
push
inc
or
lcall
cmc
add
sahf
xorl
gs
dec
push
inc
xchg
dec
stos
mov
stos
mov
insl
lret
push
pop
sub
mov
sti
mov
and
lea
mov
pop
mov
mov
gs
cmc
jg
lods
xlat
mov
sub
push
xor
mov
test
xor
jl
int
dec
push
cmpsb
jmp
pop
add
dec
movsb
inc
scas
and
or
xchg
adc
call
ljmp
pop
cli
add
fnsave
xchg
imul
jg
loop,pn
insb
adc
sub
sbb
fs
pushf
pop
jle
cmpb
xor
incl
sbb
cmp
aam
pop
sbb
inc
or
into
mov
jmp
or
in
les
xor
popa
mov
push
xchg
jle
sbb
shrl
fdivs
jge
push
add
decb
addr16
into
int
sbb
xchg
jecxz
or
pop
and
test
add
in
je
repnz
test
arpl
or
cli
push
sahf
push
and
arpl
pop
pop
add
stos
pop
cwtl
lahf
ret
sub
mov
push
inc
cmp
aam
stos
sarl
je
mov
pusha
imul
adc
and
mov
in
cli
imul
out
roll
les
lret
xor
shrb
xchg
and
out
mov
outsl
mov
idivl
fbld
movl
cmp
dec
jne
jmp
dec
push
jecxz
push
int
dec
inc
mov
frstor
lock
js
mov
cmc
fnsave
dec
add
subl
pop
xchg
xchg
jecxz
scas
scas
xchg
outsb
dec
movsl
push
and
ja
dec
lods
mov
lahf
pushw
outsl
bound
xor
lret
sbb
gs
mov
mov
mov
ret
mov
dec
push
lret
je
mov
lcall
mov
or
mov
je
push
pop
mov
or
nop
test
cmp
fbstp
negb
pushf
pop
into
int
cmp
cmp
rcr
stos
mov
mov
test
push
sbb
dec
and
mov
dec
dec
dec
mov
lock
xlat
lahf
ds
add
mov
rolb
mov
or
jmp
stos
jmp
push
xchg
pusha
imul
into
fisttpl
jp
les
pop
mov
clc
shll
setge
stos
faddl
push
out
cwtl
or
in
inc
sti
push
xor
out
sbb
cmp
push
test
dec
jb
sub
in
std
fsubrl
jo
mov
pop
cmpsb
in
push
cmpsb
pop
push
fcoms
or
test
inc
mov
adc
dec
jp
mov
xor
sub
mov
push
inc
int3
xor
dec
add
pop
repnz
sahf
jmp
lock
dec
jns
fdivrs
mov
sub
aaa
adc
or
or
cmp
fcomps
add
cli
jbe
repnz
dec
jge
sub
jg
mov
aam
pop
out
std
cltd
das
pop
mov
loop
imul
cmp
int
add
sahf
fdivs
rcrl
bound
push
xor
sahf
or
inc
jo
out
dec
in
dec
inc
hlt
popf
fs
mov
xor
hlt
imul
cli
dec
inc
mov
cltd
xchg
js
xchg
push
jge
rcrb
je
mov
or
mov
hlt
mov
das
mov
mov
cmp
or
push
cmp
arpl
lahf
sbb
mov
call
inc
and
xor
cs
into
sbb
cmpsb
pop
cld
js
jbe
les
jle
int
in
aaa
rolb
or
xorl
mov
inc
dec
jo
shl
clc
stos
xchg
sub
mov
or
out
sub
fwait
movsl
add
in
addr16
test
orb
inc
cmp
push
fwait
repnz
mov
push
sbb
xor
xchg
cmp
mov
pop
stc
cmpsb
cmpsb
inc
cwtl
and
or
xor
in
dec
in
mov
jbe
xorb
rolb
rorl
int
rolb
outsb
inc
sbb
test
jne
out
mov
xor
push
loopne
in
push
jmp
pusha
cmpsl
dec
push
push
inc
and
loopne
pop
mov
or
ja
stos
jnp
add
jns
das
popf
mov
add
dec
test
jp
shll
jno
adc
mull
pop
jae
aaa
dec
ss
jmp
fidivs
dec
std
mov
fwait
jbe
lods
mov
jl
sti
insb
sti
pop
insl
int3
sbb
movsb
jbe
cmpsl
lret
testb
push
dec
fstpl
push
aam
pop
xchg
inc
sub
ud0
add
movsb
lcall
sahf
cli
push
or
in
andl
cmp
scas
fwait
pop
push
mov
sub
aad
mov
sub
addr16
out
add
loop
jge
paddd
xchg
ss
cwtl
mov
or
inc
outsb
mull
pop
test
rcrb
mov
jb
push
mov
call
cwtl
mov
addr16
nop
push
sub
adcl
pop
shrb
push
mov
clc
or
mov
scas
pop
mov
push
and
mov
mov
jge
push
into
or
adc
jbe
mov
dec
pop
jecxz
leave
test
pop
cmp
cmp
xchg
push
inc
jnp
repz
out
pusha
sbb
inc
cmp
dec
mov
and
pop
loop
sbb
xor
cmpsb
sbb
mov
std
fnstsw
push
repnz
js
mov
int3
jmp
fcomi
jbe
jl
xchg
xchg
pop
movsl
inc
pop
mov
cmp
clc
arpl
cld
pop
out
cmp
mov
jge
cs
aaa
pop
mov
jl
push
lea
lahf
rclb
dec
or
arpl
mov
pop
aam
xchg
inc
in
loop
aad
clc
insb
lods
in
jge
enter
jb
mov
xchg
push
loopne
mov
insb
jg
cs
mov
mov
insl
add
cmpsb
adc
jecxz
xchg
pop
ds
dec
xchg
imul
sbb
pop
addr16
jnp
dec
test
aam
daa
xor
test
js
fwait
jecxz
clc
mov
pop
int
push
mov
pop
xchg
or
pop
cmp
mov
mov
jns
repz
mov
jecxz
pop
jmp
dec
out
mov
jp
roll
sti
out
or
cmpsl
pop
fwait
shrl
fstps
mov
cmc
inc
xor
or
inc
or
push
sti
sub
out
jp
dec
mov
sbb
jmp
cmc
popf
mov
jo
mov
paddd
fucomp
or
or
sbb
dec
inc
push
outsb
and
push
pop
enter
add
gs
adc
test
sarl
out
fcompl
leave
fs
mov
sub
in
nop
fnstsw
loop
xor
ljmp
lock
aas
cmp
les
popf
lcall
popl
cmp
sub
fxch
xchg
push
mov
adc
push
aam
push
cmp
mulb
stos
mov
mov
lock
aad
mov
jle
push
sahf
in
inc
or
gs
std
mov
fsubrs
dec
in
pop
nop
add
frstor
test
mov
push
mov
push
ror
lret
jno
mov
mov
insb
pop
sti
cwtl
cmp
sbb
js
xor
pop
loope
insb
pop
dec
js
sub
add
sahf
aaa
xchg
add
and
pop
push
imul
mov
push
loopne
mov
test
orb
and
loopne
iret
inc
ret
lock
mov
sbb
mov
insb
push
rclb
jmp
dec
movsl
mov
int
int3
insb
clc
test
mov
popa
sti
add
movaps
and
gs
sub
in
sub
mov
test
sbb
fmul
pop
mov
sbb
inc
mov
dec
hlt
xor
push
and
mov
xchg
in
stos
ret
ret
nop
subb
jecxz
mov
ficomps
ret
imul
popf
cli
sub
push
inc
sbb
mov
aas
or
jns
aam
mov
jae
mov
popf
clc
arpl
inc
xchg
cwtl
xchg
fsubrp
test
fadd
loopne
sbb
sti
xor
clc
aaa
into
inc
jnp
stos
mov
dec
pusha
out
fcom
out
mov
dec
and
lret
cwtl
jbe
leave
sti
push
loop
push
ret
clc
cmc
ret
fidivs
leave
nop
push
ljmp
clc
outsb
push
pop
pop
cmc
jae
imul
shlb
ja
cmc
test
dec
sbb
and
repz
sub
jg
xchg
aaa
test
push
movsl
dec
jge
mov
outsl
into
pop
ss
jbe
ret
ror
push
push
pop
fdivs
add
cwtl
jnp
mov
add
sub
xor
stos
outsl
loopne
adcl
inc
ds
push
ss
mov
imul
sub
jnp
insb
mov
lock
jae
out
xchg
xor
dec
and
and
dec
sub
incl
stc
jg
inc
cmp
scas
mov
mov
imul
xor
jmp
mov
and
pop
inc
xor
mov
lea
lahf
popa
adc
aaa
pop
cmpsl
cmovo
xchg
cmp
aas
adc
lock
stos
sub
dec
mov
rorl
popa
xlat
dec
push
inc
mov
mov
lods
push
cmc
mov
rclb
stc
scas
bound
push
fimull
add
in
xchg
mov
mov
or
jns
xor
aam
adc
pop
loop
rorb
push
sbb
xor
push
imul
cmpsl
inc
add
push
mov
rcl
stc
jnp
mov
jno
push
fsub
pop
mov
adcl
and
mov
int
in
insb
popf
xor
push
fwait
lods
iret
stos
sbbb
xchg
cli
stc
adc
insl
mov
ret
mov
sbb
gs
lock
addr16
jb
adc
dec
sbb
fstpl
add
adc
enter
outsl
sub
mov
xor
mov
clc
fdivl
xor
sbb
test
pop
cmpb
mov
inc
fs
push
es
lahf
stos
mov
jo
sar
out
dec
vandpd
mov
mov
mov
lret
int3
adc
mov
mov
notb
pushf
jae
punpckldq
dec
push
pop
xchg
rorl
stos
fbld
iret
cmc
inc
arpl
fstps
xor
sbb
push
insl
out
push
dec
dec
je
xor
add
mov
push
xchg
add
sub
push
or
iret
xchg
fistpl
les
shrb
jae
mov
sub
jecxz
pop
repz
dec
stos
pushf
stc
nop
xor
std
fstpt
ret
adc
inc
movsl
inc
dec
aam
adc
push
jae
sbbl
lock
pop
jmp
mov
scas
pop
and
in
xchg
call
testb
mov
roll
mov
subl
aad
shr
sbb
jp
popf
jge
cmp
jnp
xor
cmp
or
lcall
jnp
jae
mov
cmp
mov
popa
push
jne
mov
hlt
cmpsl
ret
fs
push
outsb
jg
xor
addr16
mov
mov
loop
sti
push
mov
jns
daa
bound
cmp
insl
and
or
dec
shll
jecxz
xchg
loope
adc
dec
imul
xor
dec
lods
fs
dec
fdivrl
hlt
in
mov
adc
or
sbb
push
push
mov
out
out
out
sbb
enter
int
stos
loope
inc
sbb
adc
stos
jge
pop
cli
leave
rcrl
cmc
loop
call
mov
and
into
mov
es
repz
xor
fidivrl
outsb
mov
into
mov
add
pop
icebp
add
pop
xor
loop
sbb
push
aam
jg
adc
mulb
shll
sub
fcmovb
xor
sahf
mov
xor
into
popf
pusha
inc
mov
iret
adc
rclb
aad
push
into
pusha
movsl
sub
out
jp
cmp
mov
and
add
jp
mov
movsl
dec
ljmp
imul
or
inc
jae
mov
int
loop
out
popf
test
in
pop
or
cwtl
push
aam
adc
dec
mov
or
add
subl
fucomi
fmull
inc
es
shll
sub
pop
push
addr16
jp
sub
rcrb
xor
mov
inc
popf
inc
xchg
mov
and
icebp
dec
xorb
sbb
push
cmovnp
xchg
push
dec
sbb
or
clc
cmp
scas
pop
jb
fwait
jbe
clc
mov
mov
jecxz
sbb
into
arpl
xor
jno
pop
jns
adcl
lahf
sub
add
cmp
gs
out
pop
stos
scas
cmp
in
movsb
pop
pop
jnp
mov
shr
push
xchg
ret
mov
dec
inc
xor
mov
ja
adc
and
popf
push
addb
fcmove
inc
or
lret
fsubs
mov
mov
lds
cmpsl
scas
push
sub
pop
xchg
add
add
dec
add
sbb
and
inc
dec
mov
test
and
add
mov
xlat
sub
lea
cmp
xchg
in
mov
repz
fst
ds
fsubrs
xor
add
icebp
stos
insb
mov
sbb
sub
lea
pop
fisubl
add
sbb
fwait
inc
or
in
enter
inc
cmp
jmp
xchg
adc
sbb
lahf
or
push
mov
mov
insl
cmpsl
icebp
or
push
sub
push
imul
and
cmp
jp
popa
pop
lock
pop
push
mov
lods
adc
jae
loop
orb
sti
push
and
js
xchg
pop
fimuls
jp
insl
outsb
xchg
and
or
cmp
movsl
cli
in
insl
mov
adc
repz
enter
psllq
mov
xsaveopt
push
jg
sub
adc
push
inc
lods
pushf
xchg
sbb
mov
daa
call
inc
arpl
cmp
sub
mov
add
cmpsb
and
jae
pop
pop
jne
pop
iret
jle
cmc
je
push
jo
out
lea
aad
scas
sti
pop
jne
jbe
addl
mov
mov
sub
outsb
ja
dec
xor
pop
jns
push
lock
inc
pop
xor
sub
leave
push
mov
shrl
inc
dec
out
es
xor
in
lret
ljmp
sub
mov
std
idivl
or
addl
jne
push
mov
lock
das
das
pop
cmp
xor
outsb
out
bound
sbb
mov
mov
repnz
inc
out
sbb
clc
adc
test
mov
mov
and
mov
fsubrs
mov
out
cmp
pop
xchg
clc
inc
movsb
outsl
adc
scas
push
into
dec
add
mov
fcomps
mov
in
sub
sub
pop
bnd
push
push
dec
push
lods
mov
lahf
test
test
enter
ljmp
scas
sarb
js
ds
outsl
stc
in
xchg
fisttpll
xor
and
mov
or
outsl
adc
push
cmp
dec
shlb
xchg
and
jge
int3
xchg
pop
xchg
mov
ljmp
cld
stos
jl
xchg
stos
sbb
fstps
sbb
mov
jno
bound
repnz
adc
loopne
jne
pushf
ljmp
daa
js
loop
add
jg
pop
jecxz
jmp
sbb
sub
jg
cmp
cwtl
dec
jb
sub
adc
cltd
inc
sbb
andb
out
sbb
je
insb
sub
fsubs
jnp
dec
cmp
jns
adc
fwait
jne
push
jo
test
dec
stos
les
add
add
sub
addr16
inc
push
inc
mov
outsl
jne,pt
loopne
mov
loope
inc
test
les
add
mov
jbe
sbb
lret
outsl
insb
test
ret
and
cs
mov
mov
pop
inc
jae
ljmp
int
loopne
call
test
mov
enter
filds
jmp
repz
int3
fs
test
or
inc
xor
jmp
mov
xchg
jbe
out
add
inc
cmp
jmp
test
sub
mov
pop
subl
les
pop
cmc
add
call
inc
xchg
dec
mov
cmpsl
cmp
jbe
ss
xchg
mov
fnsave
inc
cmp
pop
push
sbb
sub
aam
adc
aam
aaa
imul
sbb
imul
mov
mov
add
dec
imul
call
ja
xor
dec
rcrb
scas
cmp
mov
adcb
inc
scas
cmc
xor
push
xor
inc
xchg
icebp
adc
popf
pop
fs
mov
cmc
sub
mov
fdivrl
jmp
fisttps
ja
jnp
lods
lea
fucomp
sub
mov
les
xor
xchg
push
ljmp
pop
push
push
jmp
push
jns
dec
outsb
and
aaa
fcomps
je
xchg
insb
xchg
adc
xor
and
xor
std
pop
inc
xchg
cmp
inc
ljmp
sbb
adc
insb
sarb
jecxz
xchg
shlb
imul
xor
jb
dec
imul
insb
add
add
sbb
inc
pop
sbb
into
lock
xchg
pop
inc
stc
push
addr16
rcrb
cmc
inc
mov
push
mov
mov
movsb
aam
jbe
sub
arpl
xchg
mov
sbb
jg
negl
ret
int
push
inc
and
stos
inc
andl
lret
dec
or
subb
test
ret
lcall
pop
lahf
loopne,pt
outsl
sbb
xchg
in
and
test
data16
add
xor
jmp
xor
mov
add
shlb
repz
stc
inc
cmp
test
or
add
repnz
aas
adc
fildl
movsb
mov
mov
lahf
call
mov
shl
les
sbb
inc
test
popf
ret
adc
add
das
add
or
in
sahf
pop
sti
jo
mov
in
cmpsl
xchg
mov
nop
jl
inc
popf
xchg
or
shlb
js
pop
xchg
pushf
xor
loopne
xchg
push
btr
dec
loop
and
and
sbb
aas
outsb
pop
scas
pop
sub
xorl
adc
mov
jge
push
lret
inc
pop
inc
sti
imul
mul
push
into
xor
xor
push
out
xor
dec
ja
lods
mov
xor
adc
jge
shll
sub
jge
int3
mov
imul
ret
nop
mov
push
adc
inc
lret
pop
mov
rorl
xor
stc
pop
int
int3
pop
mov
jo
outsl
movsl
bound
cld
test
mov
mov
iret
lret
and
jo
cmp
popa
out
jne
cmp
mov
aad
mov
iret
mov
mov
scas
mov
cld
sbbb
cli
lea
ffree
jle
iret
xchg
in
cmp
fidivrs
loop
dec
stc
inc
stc
mov
das
adc
sub
lahf
fildl
xlat
iret
pop
mov
add
movsb
jecxz
idivl
adc
ficoml
jmp
enter
cltd
jns
mov
and
cmp
into
fidivl
in
loopne
hlt
mov
cwtl
sub
pop
lods
adc
stc
fdivs
push
rcll
xor
jne
jge
mov
cmpsl
pop
icebp
mov
xchg
pushl
lock
popa
jno
imul
mov
mov
mov
dec
popa
rol
pop
sbb
iret
mov
push
mov
xor
pop
in
mov
mov
aam
push
sahf
mov
push
mov
xor
add
add
aam
arpl
add
scas
pop
add
and
mov
pusha
mov
call
mov
and
jge
pop
mov
mov
fs
jbe
aas
stc
gs
adcb
js
je
test
dec
fistl
test
sub
push
test
or
arpl
lods
fwait
sbb
push
in
inc
adc
cmp
cmpsb
pusha
and
out
jae
or
mov
jp
test
jmp
popa
xor
nop
pusha
jmp
fldt
inc
mov
cmpb
push
icebp
test
push
imul
and
popa
inc
mov
insl
xchg
sub
xchg
fs
jle
scas
lds
int
pop
fbstp
iret
aam
std
rcll
and
fidivs
les
lret
out
fimull
dec
push
jmp
pop
in
cmpsb
in
mov
loop
jb
sub
sub
xor
out
cltd
cmp
jle
ret
push
push
cld
cmp
movsb
dec
aaa
js
sub
sbb
cli
sub
sbb
data16
and
das
fistl
arpl
fisubs
push
pop
xor
dec
xchg
xchg
gs
stos
pusha
push
fs
incl
fists
lret
sbb
aas
inc
jl
shlb
popa
sbb
dec
xchg
push
fnstenv
mov
jo
mov
clc
cmc
add
cmp
lds
sub
in
movsl
nop
into
push
mov
sbb
dec
xor
add
or
ret
leave
dec
cltd
lahf
test
cmp
mov
inc
inc
lahf
inc
nop
add
jno
das
mov
dec
sti
into
movsl
rcl
and
xor
xchg
movsl
inc
jge
pop
out
ret
insl
iret
mov
xor
scas
jmp
sub
xor
js
push
dec
xchg
ljmp
dec
test
or
xor
pop
or
mov
cmpsl
and
jo
and
xor
out
dec
dec
rorb
stos
outsb
mov
lds
andl
xor
loopne
mov
aad
and
lods
int3
push
push
mov
mov
push
push
xchg
mov
cld
pop
daa
xor
jl
mov
xlat
jp
mov
add
pop
dec
mov
push
add
js
lea
outsb
mov
sub
dec
cmp
xor
popf
mov
mov
in
xlat
and
ljmp
stc
jnp
and
ficoml
rorl
inc
xchg
cs
icebp
pop
mov
adc
loopne
bound
in
adc
cmpsb
cwtl
jl
push
jnp
mov
cltd
cmp
pop
mov
xorl
out
and
sub
or
daa
sub
popa
js
pop
inc
int
enter
int
sub
push
jp
dec
inc
push
lcall
jecxz
mov
fwait
imul
cmpsl
cmpl
pop
mov
arpl
in
mov
ljmp
push
imul
ja
mov
test
cmp
or
outsb
gs
fmull
jno
jb
imul
fwait
lcall
rcrb
sti
dec
jl
shrb
in
sahf
add
xchg
xor
push
leave
clc
test
mov
adcb
fwait
outsb
dec
cmp
mov
bswap
aam
insb
jbe
pop
test
sbb
jmp
and
jne
int3
xchg
jno
sub
cmp
sub
nop
jne
sub
sub
sub
repnz
mov
cmp
ljmp
loopne
adc
and
adc
imul
into
mov
push
add
sarb
pop
xor
jecxz
lods
fcoml
fs
mov
push
push
test
gs
jp
filds
push
js
sbb
jno
push
jle
stos
cmp
ficoml
into
mov
pusha
addr16
filds
sti
insb
or
std
imul
jge
push
shl
clc
jo
loop
inc
dec
mov
std
clc
mov
ret
push
dec
sub
inc
cmpsb
jle
push
repnz
dec
mov
lahf
mov
nop
mov
repz
insb
and
dec
xchg
movsl
inc
andb
mov
mov
push
in
ss
xor
aam
out
sbb
push
dec
dec
mov
ljmp
pop
ja
xchg
and
ret
fcoms
ret
gs
movsb
jbe
or
lahf
jp
or
js
sbb
cmp
adc
stc
xlat
pop
dec
sbb
add
loopne
mov
lock
and
int3
lret
or
cltd
fdivl
sbb
cmc
cmp
inc
sub
in
testb
push
clc
cmpsb
call
bound
ret
jmp
lds
jmp
rcr
shl
dec
popa
adc
ds
arpl
mov
fcomps
push
call
je
loopne,pt
jbe
sub
lea
xor
pop
in
push
int3
popa
rorl
xchg
or
cmp
cmp
jns
push
outsl
lods
test
lds
sbb
fldcw
into
ds
jb
rcrl
jl
dec
mov
imul
test
and
fisubrs
dec
loope
lock
test
stc
std
xor
push
mov
addb
jnp
jge
xchg
test
cs
inc
scas
xchg
sub
fsts
sub
cmp
inc
and
mov
adc
push
ret
xor
sarl
inc
sub
push
mov
inc
sbb
shrl
xor
ljmp
rcrb
popf
sbb
iret
pop
mul
or
mov
or
lods
sahf
xchg
adc
lea
int
testl
cli
dec
jnp
xchg
stos
sbb
lret
sbb
pop
xchg
lret
cmp
pop
sub
call
push
dec
loop
fsubl
xchg
call
addr16
sub
das
cmp
in
xchg
mov
cmpsb
lea
rcl
mov
mov
bound
sbb
inc
jbe
and
jmp
jecxz
insb
pop
scas
lds
inc
es
push
repz
int
mov
xor
test
aam
mov
mov
test
and
jl
loope
adc
inc
nop
cmp
sbb
mov
xchg
jp
jge
test
push
cmp
adc
add
cmp
iret
pop
cmp
xchg
fidivs
jb
cmc
mov
push
cmp
or
mov
in
mov
pop
loope
jns
sbb
mov
xor
xor
jp
jnp
or
xchg
sahf
push
pop
in
std
sti
cmc
ja
dec
stos
sub
iret
push
fsub
aas
int
cmp
xor
clc
lods
inc
scas
addb
mov
mov
cli
xor
dec
ret
pop
movsl
jge
add
or
dec
test
sti
or
insl
and
addl
fldl
xchg
loope
cmp
fsincos
push
sbb
and
sti
add
loopne
sbb
outsb
lods
ret
ret
push
cmp
jns
dec
adc
xchg
in
or
add
mov
adc
ss
xchg
mov
adc
sub
mov
adc
stos
stos
enter
pusha
inc
xchg
mov
xor
add
cmp
mov
stos
jns
lds
dec
push
mov
jne
or
aas
rolb
lods
fidivl
cmpsb
pop
sub
mov
repnz
xchg
push
rorl
test
movsb
data16
ret
je
add
sahf
inc
xlat
add
into
test
jp,pt
pop
loop
sbb
xor
loope
xor
jmp
lahf
ja
movsb
jno
ffreep
divb
sub
lea
mov
addb
jno
inc
iret
or
dec
and
into
pop
cmp
les
sub
dec
push
sub
shrl
mov
and
daa
stos
adcb
pop
inc
cmc
outsl
xor
cs
popa
dec
jge
push
mov
jg
push
repz
dec
xor
sub
les
jge
mov
mov
push
cld
mov
push
pop
call
dec
inc
in
or
mov
pop
or
pop
shl
fcmovnb
aas
lret
out
arpl
enter
or
jl
or
lret
js
push
mov
lods
mov
jle
das
sarb
aas
or
mov
scas
inc
cs
movsb
mov
test
stos
inc
cmp
and
pop
pushf
std
inc
fisubrs
xor
inc
fsubrs
in
sub
lret
mov
rolb
enter
int
push
ja
ljmp
lock
cmp
cs
mov
stos
adcb
movnti
dec
icebp
dec
sbb
cmp
dec
and
dec
adcb
subl
cmp
xor
cmpsb
imul
xchg
jecxz
loop
inc
cmp
repnz
and
jmp
mov
hlt
or
addr16
adc
outsb
rclb
cli
sbb
or
stc
fwait
shll
sub
aam
push
ja
dec
mov
sub
pop
movsb
adc
push
cli
sub
sub
test
outsb
movsb
sbb
xchg
jle
std
enter
sbb
sbb
enter
xlat
sub
pop
xchg
sbb
sarb
fwait
lds
movl
xchg
into
repnz
fldl2t
xchg
jbe
ja
sub
cmp
cmp
mov
out
popf
pop
pop
insb
movsl
push
movsl
xor
call
or
cmc
sbb
outsl
adc
frstor
cmp
add
adc
icebp
push
mov
push
xor
popf
mov
push
outsl
sbbl
or
push
dec
add
fidivrs
fnstsw
adc
xor
dec
xchg
enter
inc
push
push
loop
repz
inc
cmpsl
enter
jns
dec
sti
aaa
aad
jbe
push
loopne
push
jb
adc
shl
pop
xchg
mov
leave
jp
xchg
addr16
xor
add
or
fcoms
rcl
bound
clc
cmpb
xchg
xchg
ja
in
inc
fcompl
out
push
jl
push
pusha
cmpsb
shl
xor
cmpb
sub
cs
scas
shll
fsubs
and
jge
jg
push
shll
mov
lods
mov
scas
adc
sub
cmp
scas
push
adc
sarl
pop
mov
ja
popa
pop
push
lds
jne
and
test
idivl
and
lret
lods
insl
cmpsb
mov
test
mov
mov
mov
jne
xchg
mov
lock
aas
mov
int3
loop
push
aad
add
cmp
push
jp
inc
push
cwtl
jno
pop
outsl
jge
xor
aad
das
ret
ret
movsb
lods
icebp
dec
divl
das
mov
dec
movsl
sub
inc
cmp
iret
mov
add
fcomip
es
stos
jne
jmp
and
movsl
arpl
push
loope
in
mov
mov
push
jbe
dec
mov
movsl
push
sbb
hlt
jae
scas
nop
pop
hlt
aas
mov
jmp
jp
call
scas
and
jmp
stc
in
in
jne
lods
fidivrs
inc
into
sbb
out
negb
jg
mov
popa
cs
adc
pop
mov
or
lock
arpl
loop
aaa
adc
mov
fidivs
cmpsl
jbe
ds
js
jmp
lret
stc
dec
aam
xor
and
sub
repnz
push
adc
out
ljmp
test
loop
and
mov
cmpsl
leave
std
mov
fsqrt
inc
fwait
mov
xor
xor
aad
fsubs
and
cmp
adc
jo
pop
mov
xchg
push
xor
xchg
je
pop
loope
mov
insl
mov
aam
sub
jno
jp
push
pop
mov
fiaddl
cmp
shll
inc
jl
add
imul
stos
jle
jg
stos
mov
pop
iret
pushf
dec
dec
lock
inc
dec
rep
les
jno
shll
incl
mov
ss
pusha
pop
dec
adc
rcr
jne
pop
aas
cmp
int3
push
mov
jge
cwtl
add
add
mov
out
ret
stc
leave
push
xchg
xchg
outsl
and
inc
push
xchg
jge
and
leave
sub
lea
addr16
test
in
add
iret
jnp
out
mov
mov
insl
push
dec
lods
mov
or
sti
mov
add
jl
push
inc
ss
pop
cmp
shrl
fiadds
pop
insl
in
arpl
sti
inc
data16
or
int
in
sbb
add
rcrb
and
dec
inc
in
push
jecxz
imul
dec
dec
test
mov
push
out
sbb
lahf
jmp
and
lret
icebp
movl
jge
dec
ss
cmpsb
in
mov
pop
mov
sbb
add
xor
adc
add
lods
mov
mov
jno
and
and
and
int3
xchg
data16
mov
les
loop
out
or
cmpl
add
adc
add
in
xor
push
pop
add
lret
mov
jns
lea
jns
shr
fstpt
leave
fcoms
mov
frstor
nopl
pop
out
rcrl
enter
dec
dec
popf
mov
pop
shlb
pop
leave
popf
cmp
fs
cmpl
je
jl
jae
adc
adcb
xor
das
hlt
rcrl
dec
adc
xor
ljmp
and
addr16
push
jns
pop
xor
jnp
pop
adc
and
ljmp
repnz
jbe
push
out
or
imul
push
lock
mov
imul
fstp
mov
push
mov
icebp
sahf
notl
xor
loopne
leave
daa
shr
mov
dec
dec
xor
and
pop
push
cmp
mov
mov
add
nop
out
pop
mov
xchg
pusha
xor
ja
inc
cmp
jno
lret
xor
mov
imul
fwait
enter
mov
pop
pop
mov
pop
into
in
add
daa
mov
mov
add
jmp
push
movsb
iret
jae
mov
jle
scas
loop
cmp
daa
mov
sbb
daa
loop
pop
xchg
fwait
jle
inc
jo
mov
push
dec
cltd
mov
fsubrs
dec
rcrb
xchg
xchg
shl
stos
add
jno
ret
mov
mov
or
lds
loop
arpl
mov
in
pushf
cmc
outsl
xchg
jmp
loope
loope
dec
and
inc
mov
cmp
add
fs
clc
add
mov
push
push
pop
xchg
cmc
cmp
outsb
jae
mov
lcall
arpl
cmp
lret
dec
adc
insb
ud0
mov
pop
aad
lods
scas
into
adc
cs
js
bound
outsb
insb
popa
shll
das
pop
js
xlat
fidivl
cwtl
cli
pop
incb
mov
push
dec
or
ret
daa
cmp
outsb
jae
push
sub
cmpsl
mov
pop
mov
mov
mov
sbb
lea
sti
mov
icebp
mov
jbe
push
pop
add
adc
ja
sarb
scas
xchg
jmp
dec
jmp
jo
and
mov
add
pop
rclb
aad
mov
sbb
mov
jge
xor
test
ds
cmpsb
jbe
pop
insl
stc
leave
rclb
lods
mov
in
popa
push
jae
jne
xor
push
das
movsb
mov
das
push
popa
adc
cmp
and
xor
xchg
mov
jae
rorb
sbbb
test
mov
fiadds
cltd
cmp
sbb
test
cmp
cmp
adc
mov
or
push
test
add
cmp
xchg
xchg
jne
mov
sub
xor
mov
xchg
pop
fiaddl
sub
cmp
mov
cmp
adc
dec
adc
xchg
aaa
mov
je
das
or
fdivp
cmc
jecxz
add
lods
fstl
fcoms
inc
pop
xchg
jmp
mov
enter
mov
and
xchg
lds
inc
jbe
add
out
jns
and
aam
xchg
or
cld
adc
leave
mov
push
out
pop
nop
mov
push
pusha
and
sbb
xor
lock
push
dec
roll
mov
mov
sub
add
cmp
mov
sbb
mov
pop
fcoml
jb
cs
mov
mov
lahf
daa
cli
sbb
inc
xor
ds
and
mov
push
adc
js
jbe
lret
jae
imul
lock
mov
cmp
stos
jg
xchg
idivb
jno
lock
sbb
insl
outsb
push
mov
loope
cld
push
aad
push
mov
mov
mov
cmpsl
div
aaa
jecxz
fisubs
popf
xor
shll
das
ljmp
adc
push
jb
add
stc
mov
in
fimuls
inc
pop
ret
int3
pop
das
stc
mov
mov
and
sub
enter
hlt
sub
pop
lods
rcl
in
push
sub
mov
orl
dec
or
jg
leave
in
dec
mov
jae
xchg
out
push
out
repz
out
mov
jb
sbb
mov
xchg
inc
sub
jo
sbb
pop
dec
dec
mov
xor
test
mov
adc
push
enter
adc
sub
cmp
sub
loop
inc
ja
xor
loopne
out
mov
sub
adc
cvttps2pi
pop
out
pop
sub
in
jle
imul
loop
popf
test
sub
adc
push
in
jae
dec
mov
std
add
and
jmp
std
test
dec
jb
adc
shr
insl
mov
mov
in
pushf
fsts
popa
loopne
negl
jmp
inc
pusha
lret
sarl
jmp
data16
insb
data16
repnz
pop
jmp
and
push
scas
leave
add
mov
inc
add
out
inc
or
sub
xorl
nop
repz
cmpsl
xchg
adc
dec
repnz
int
mov
xor
cwtl
xchg
mov
imul
cmc
sub
xchg
ret
stc
sarl
movsb
push
push
pop
insb
mov
pop
pop
cmc
lcall
lcall
cmp
jg
jns
fists
xchg
mov
adc
arpl
mov
in
gs
jb
push
xor
push
and
pop
daa
jge
mov
movsb
mov
cs
in
leave
push
cmpb
out
dec
mov
dec
cltd
cli
cmp
enter
jns,pn
add
in
subl
popf
test
sahf
in
and
cmc
or
jmp
inc
call
and
mov
pop
push
fs
jle
adc
mov
or
mov
inc
imul
jge
push
cmp
mov
int
dec
out
arpl
out
addr16
jae
cmp
data16
cmpsb
push
das
leave
out
push
incb
push
push
clc
cmp
inc
jmp
fdivp
sbb
addl
dec
fldt
testb
fadd
incb
mov
sbb
mov
inc
in
mov
push
js
cwtl
into
lods
xor
push
es
inc
xchg
mov
or
inc
insl
mov
add
push
popa
cmp
ljmp
mov
sbb
movl
push
add
mov
mov
jg
inc
push
sarb
pop
sub
fcomps
outsb
scas
jmp
in
and
jae
inc
test
arpl
inc
push
cmc
cmp
xor
insl
jbe
sbb
xor
shr
push
imul
ja
ljmp
data16
cmp
std
sbb
pop
sub
lcall
mov
jmp
mov
in
aas
xchg
js
arpl
push
dec
out
rclb
sbb
sbbl
lret
fldenv
push
mov
cwtl
mov
fsub
cli
xorb
push
pop
pop
out
cmp
data16
sbbb
jae
push
lods
xlat
xor
in
sub
jb
jnp
jl
mov
rcr
mov
idiv
lods
jb
and
popf
add
repnz
sahf
sbb
mov
imul
xor
push
stos
shrb
pop
jecxz,pt
xchg
icebp
in
aaa
push
inc
in
cmp
shlb
fwait
imul
cmc
mov
test
xchg
sub
cmp
cmp
std
adc
adc
roll
lea
mov
mov
les
dec
push
rorb
or
sub
dec
xchg
lcall
jno
push
jecxz
mov
repz
pop
popf
sti
lcall
in
adc
mov
roll
add
jb
sbbl
cmp
adc
nop
lock
sti
js
cmp
jae
inc
lods
fimull
pop
jne
push
xcrypt-cfb
cmpsl
and
in
enter
inc
dec
cld
sub
negb
mov
out
sub
repnz
mov
push
jle
add
vfrczss
cwtl
iret
mov
inc
lahf
adc
jne
iret
movsb
mov
call
adc
jbe
enter
sub
mov
movsl
xor
ror
mov
mov
lock
push
push
iret
icebp
insb
leave
aam
sbb
adc
mov
in
xor
js
xchg
jp
jb
or
add
mov
and
test
jne
dec
xor
inc
pop
add
sub
mov
js
ds
dec
je
adc
or
push
repz
and
data16
cmp
inc
sbb
js
and
push
mov
and
pop
movsl
rolb
fisttps
sar
insl
es
sahf
xchg
xor
cmp
stos
ja
out
jge
movsl
sti
jb
insb
sbb
xchg
xor
mov
test
dec
lds
jno
ds
add
fidivrs
jnp
lds
xorl
rclb
movsl
xor
mov
scas
xchg
sbb
in
push
imul
push
mov
je
add
sbb
stos
and
or
sub
mov
dec
mov
jno
xor
inc
cld
inc
cmp
add
in
mov
cmp
shrb
mov
lcall
sarl
cltd
mov
xchg
adc
jecxz
das
pop
sbb
mov
enter
fs
orb
dec
rcrl
pop
dec
jns
mov
push
test
cmc
push
xlat
pop
jp
shlb
sbb
xchg
jns
adc
push
sbb
and
lahf
cli
lds
icebp
add
and
sub
add
add
lret
sarb
es
lods
mov
mov
addr16
cmp
mov
sbb
js
cld
sarl
mov
enter
mov
or
ret
push
idivl
loop
jecxz
dec
mov
xchg
test
cwtl
nop
mov
mov
movsb
repnz
mov
fxam
mov
sti
and
dec
add
das
mov
jns
rolb
cmpsb
loopne
jne
test
sbb
testb
mov
pop
notb
xor
mov
in
fsubr
jns
mov
js
jnp
icebp
inc
cwtl
mov
mov
scas
xchg
mov
testl
int
xor
iret
fnsave
nop
clc
arpl
sub
orb
fwait
pusha
jo
jp
and
rep
lock
aas
jecxz
aad
scas
xchg
cld
nop
lret
mov
mov
adc
cmp
fdivrs
xchg
scas
daa
or
stc
test
fdivrs
inc
pushf
sbb
mov
cli
cltd
lret
mov
mov
mov
xchg
aas
mov
add
xchg
loopne
pushf
movntps
pop
ret
mov
and
mov
insl
mov
dec
xchg
aam
inc
cmp
mov
daa
daa
push
sub
pop
inc
cld
inc
lahf
dec
insb
cmc
daa
adc
test
cld
repz
cli
and
mov
insl
arpl
movsl
mov
xchg
cmp
test
cltd
icebp
sub
fsubrs
dec
push
cmp
mov
mov
call
mov
adc
xchg
cmpsl
repnz
add
push
cltd
adc
repnz
adc
outsl
lret
xor
sbbl
leave
cmp
mov
gs
cmp
lea
stos
mov
inc
mov
lods
enter
push
icebp
sub
xor
dec
pop
lret
mov
push
adc
test
sbb
scas
mov
jp
and
fiaddl
stos
popa
jg
pop
jno
and
xchg
sbb
xorl
lret
push
add
inc
cmc
mov
or
lcall
push
dec
stos
sub
adc
xchg
inc
mov
loopne
mov
fdivr
stos
je
jae
repz
mov
les
fcompl
xor
mov
sbb
inc
push
mov
clc
mov
adc
or
mov
in
imul
outsl
in
pusha
xor
adc
movsl
jle
nop
movsb
inc
cltd
jno
jecxz
cld
add
jbe
out
push
stc
sahf
lock
pop
push
mov
movsl
or
cmp
mov
repz
mov
outsl
pop
leave
mov
iret
jp
push
orb
pop
ja
xchg
test
adc
or
jae
push
arpl
loop
enter
ja
adc
xchg
sbb
les
pop
sub
mov
test
xchg
in
in
mov
and
xchg
clc
sahf
or
test
adc
jns
movsb
aam
sbb
imul
fucomp
mov
push
inc
ret
stos
imul
mov
lret
sahf
mov
dec
cltd
sbb
cmp
sub
cltd
push
cmp
push
test
push
cmp
inc
sahf
ja
jecxz
enter
movsl
insl
sub
loopne
mov
nop
pop
lret
adc
add
push
sbb
cltd
cld
in
push
lahf
loopne
fs
leave
sahf
addr16
cwtl
mov
fs
imul
pop
out
cmp
xorb
lds
sub
cmp
movsb
lods
mov
cld
xchg
test
jge
jbe
mov
dec
mov
cld
nop
inc
jg
cmp
mov
mov
push
jo
cld
test
test
call
sub
xchg
orl
jg
dec
inc
push
xor
aaa
daa
mov
add
pop
and
pusha
dec
add
dec
dec
dec
adc
or
mov
pop
jmp
cld
icebp
vpbroadcastq
push
jge
insl
sub
fisttpl
rclb
inc
scas
mov
test
dec
push
adc
and
pop
gs
fbld
mov
sub
add
inc
movsb
ret
xor
mov
sahf
lret
mov
stos
mov
sbb
divl
in
push
xor
push
rol
aam
arpl
pushf
xchg
cld
adc
xorb
cmp
popa
cmp
in
cmp
sbb
shlb
mov
fwait
mov
add
adc
fstpt
sub
mov
push
lcall
aas
insb
outsl
sbb
add
enter
enter
sbb
int
push
jl
fwait
lcall
and
mov
cmp
cmp
adc
pushf
mov
loope
test
push
adc
arpl
lods
fwait
js
ds
cmp
insb
mov
adc
movsb
out
adc
or
mov
imull
or
and
jo
xchg
add
mov
mov
test
sahf
fdivrl
and
mov
insl
dec
inc
jmp
inc
sbb
rcrl
mov
and
mov
clc
imul
mov
and
clc
or
and
mov
pop
lret
test
sub
sbb
fldcw
mov
sub
gs
inc
mov
imul
fwait
xchg
sbb
sbb
adc
sbb
inc
dec
push
mov
insb
cs
dec
nop
xchg
pusha
adc
arpl
outsb
scas
cmp
mov
jmp
shll
inc
dec
rcll
fs
nop
lock
loop
outsb
sub
aaa
aas
mov
mov
xchg
pop
xchg
insb
aaa
jle
insb
xor
iret
daa
shrl
mov
xchg
push
lret
add
mov
sub
addl
xchg
xor
enter
nop
pop
jmp
andl
push
jmp
cltd
lret
mov
data16
xorb
rorl
in
out
test
sub
cwtl
xchg
inc
jmp
aam
mov
xchg
das
pushf
mov
add
jl
push
jae
pop
stos
mov
pop
inc
ret
daa
cltd
push
push
adc
clc
push
movsl
lcall
jbe
push
or
jp
push
mov
int
jo
jmp
cltd
popa
fistpl
test
sub
sbb
and
or
ret
lret
cwtl
stc
lret
fcoml
les
sub
in
fdivrs
sahf
mov
in
dec
lods
cmpsb
mov
push
js
and
push
ret
stc
nop
xacquire
test
adc
cmpsl
lea
pop
mov
in
add
popa
in
and
ret
xchg
pusha
call
movsb
in
es
int3
imul
dec
pop
lea
push
addr16
insb
inc
in
lea
jnp
fldcw
aam
adcb
jbe
jno
xchg
inc
sub
scas
fnstcw
xchg
repnz
bound
push
int3
cli
or
cli
push
dec
inc
mov
loope
cmp
popf
sub
mov
pop
sub
cmpsl
ret
data16
sbb
sub
mov
gs
call
clc
sbb
push
pop
test
cmp
and
pop
and
cld
ja
jl
inc
sub
cs
inc
out
mov
adc
dec
pop
lods
es
dec
inc
lds
xchg
mov
mov
in
test
leave
mov
or
mov
cltd
push
push
cwtl
mov
fdivrl
jo
orb
pop
add
xchg
xchg
pop
pop
inc
lcall
sbb
mov
push
daa
mov
stos
int
out
imul
cmp
sub
divb
stos
pop
push
imull
stos
xchg
rol
sub
push
out
int
repnz
xchg
inc
mov
push
sub
iret
aas
faddp
cmp
or
imul
xchg
cmp
sub
fwait
or
sub
mov
inc
mov
cmpsl
push
sub
jge
stos
cmp
sbb
jbe
scas
pop
bnd
or
ficoms
pushf
inc
and
sub
insb
mov
inc
andl
jp
xchg
ret
mov
mov
xor
repz
xchg
mov
lds
test
into
dec
cwtl
xchg
mov
fs
popf
add
lds
mov
cmp
xor
mov
sub
adc
testb
cmp
in
jecxz
cmp
mov
pop
and
push
or
outsb
ss
cld
aas
mov
cmpl
pop
xchg
xor
jg
popa
ret
mov
sbbb
testl
and
cld
cmp
pop
push
outsl
mov
xchg
movb
push
mov
imul
aad
push
shl
push
xor
jecxz
sbb
scas
push
outsl
mov
test
mov
aam
lds
xlat
je
and
gs
cwtl
mov
push
fwait
cld
loope
push
push
inc
mov
scas
xchg
sbb
inc
cmpl
push
cmp
arpl
xchg
fldcw
cmpsl
sbb
pop
push
fcompl
mov
xchg
fsubs
in
andps
jno
dec
or
out
cmp
sbb
and
mov
in
sub
test
jo
lcall
xor
lods
addr16
int3
daa
in
mov
add
or
mov
push
adc
int3
sub
repz
sar
mov
inc
stc
in
ljmp
sub
pop
jle
mov
or
daa
push
inc
add
aam
pusha
dec
add
sub
or
in
and
mov
cmc
inc
xor
jb
ss
negl
xchg
jne
movsl
stc
addr16
xchg
std
icebp
icebp
test
aas
sahf
pop
out
insb
stos
sub
sbb
or
movsb
jnp
jae
fs
mov
fpatan
adc
fnstsw
test
xchg
mov
aam
pop
mov
lret
frstor
insb
cmp
stos
fsubrl
add
cmp
xor
in
sub
jmp
fwait
jno
xchg
mov
xchg
sbb
or
jbe
inc
jbe
add
int
pop
aad
push
jo
dec
inc
ret
push
push
stc
inc
adc
aad
xor
sti
mov
out
sarb
push
outsl
rcll
mov
enter
imulb
repz
in
out
cmpsl
push
and
add
add
jns
insl
sub
shll
mov
lea
shrl
pop
add
jecxz
mov
cmp
fwait
cmp
jecxz
push
push
jle
and
shlb
mov
jmp
xchg
std
xchg
rcll
in
rcrl
das
and
ja
xchg
xor
stos
push
or
insl
cmp
push
sbb
idiv
gs
inc
dec
pop
pop
insl
dec
mov
xor
xor
push
push
fwait
insb
or
idivb
mov
dec
jns
movsb
pop
jnp
jecxz
fucomi
sbb
test
push
push
rcrb
pushf
cs
fs
sbb
psubw
idivb
test
fwait
out
adc
lock
pushw
shrl
enter
test
pusha
test
sub
int
sub
xchg
loope
inc
mov
inc
repz
addr16
std
and
jp
fldenv
sub
daa
sub
and
enter
out
xchg
jns
adc
pop
push
aas
jecxz
push
stos
lret
lea
subl
ss
jge
je
mov
insb
out
pop
aad
pushf
test
loopne
xor
push
push
stc
mov
mov
cmp
fcmovb
test
imulb
mov
lods
mov
jo
jg
jecxz
stc
outsb
sub
lods
pushf
js
cmp
lods
jl
jle
xchg
lcall
push
mov
ljmp
add
mov
clc
xorl
outsl
jecxz
mov
xor
out
push
out
ljmp
xchg
inc
faddp
sub
jle
fbstp
lds
outsb
push
insl
add
in
dec
or
adc
pop
hlt
orb
rcll
and
in
sub
loopne
mov
adc
pop
cmp
add
cmp
inc
jnp
xchg
shl
divb
loopne
mov
andb
mov
jge
mov
and
std
xchg
push
testb
call
popa
cmp
imul
clc
sub
scas
and
add
xlat
cld
pop
or
mov
add
xor
popa
bound
in
insb
xor
push
lret
mov
sbb
mov
add
cmp
cmpsl
das
outsb
rolb
add
nop
xchg
push
mov
dec
sbb
les
and
cmp
mov
loope
inc
push
fisubrl
jl
cmp
pop
out
xchg
in
mov
scas
jno
in
je
and
dec
lcall
mov
rclb
rcll
out
into
iret
aaa
inc
xchg
lds
add
mov
das
xor
and
xchg
unpckhps
sub
mov
stos
icebp
adc
cmp
imul
pop
jp
ds
and
xchg
adc
pop
pop
xor
cmp
in
mov
lret
xlat
sbb
pavgw
leave
negb
test
dec
es
loop
push
push
cmp
cs
jge
ds
pop
jae
test
mov
adc
xchg
shll
sbb
cmp
or
add
mov
dec
je
cli
xchg
adc
mov
sbb
int3
jnp
mov
cs
jge
ljmp
icebp
sbb
les
adc
imul
inc
pop
negl
enter
push
repnz
out
pop
mov
jl
and
sub
scas
xor
cmpsl
sbb
and
movsb
int
sub
xor
cwtl
lods
adcb
cmpsl
or
cmpsb
leave
add
outsb
mov
mov
insb
shll
test
cmc
dec
cmp
fsts
ljmp
jns
xor
xor
scas
dec
push
push
gs
mov
hlt
scas
arpl
mov
loop
inc
xor
fs
cs
dec
mov
xlat
cmp
sahf
mov
inc
sbb
or
fadds
int
pop
jmp
inc
add
mov
ret
test
push
push
inc
sub
rdpmc
inc
xchg
mov
cmp
sub
jbe
popf
cmp
push
pusha
cs
lods
gs
and
cmp
dec
dec
ljmp
jb
scas
ret
and
divb
sub
xor
add
jmp
aad
dec
andb
dec
cmp
jmp
jecxz
xor
and
arpl
xlat
push
les
ljmp
push
jl
cmp
sbb
out
imul
pop
mov
mov
add
ljmp
and
mov
ja
sbb
int
je
mov
aad
mov
sbb
mov
dec
add
sarb
in
jmp
dec
cmp
add
loop
xlat
xor
cld
cmpsl
cmp
daa
lcall
cmp
xor
fcmovb
pop
push
or
stos
add
lods
lret
xlat
cmp
pop
xchg
xchg
push
jmp
jge
test
mov
das
jnp
daa
outsb
daa
mov
jl
jle
inc
xchg
and
dec
popf
insb
xchg
lahf
hlt
adc
mov
mov
shll
jb
lods
mov
mov
repnz
inc
ror
mov
arpl
out
pop
mov
fildll
cmpl
add
mov
das
fs
int3
jnp
xchg
mov
dec
or
aad
dec
cmp
or
into
cmpsl
dec
aas
lock
jnp
mov
jp
sbb
xchg
jns
push
pop
jbe
test
pusha
cli
mov
fdivr
shr
pop
mov
bound
ja
inc
inc
sub
stos
je
mov
in
mov
ret
int3
mov
or
push
incb
and
push
jbe
int
push
cli
ljmp
sti
stos
xchg
lods
lods
cmc
push
sbb
xchg
jne
inc
sbb
push
jae
fildll
sbb
push
adc
imul
insl
push
mov
xchg
xchg
add
lea
testl
aam
bound
pop
cmp
and
ret
mov
dec
insl
and
daa
int
imul
dec
lcall
mov
jmp
addb
fcomp
mov
mov
push
cld
push
mov
mov
lds
shl
sbb
pop
mov
sar
jg
adc
enter
cmp
jle
add
icebp
stos
adc
push
ja
cmp
add
lea
and
or
into
lcall
add
subl
jmp
ljmp
sbb
inc
add
sbb
pop
gs
cmp
add
cwtl
addr16
add
repnz
in
pop
test
xchg
lea
pop
ja
enter
test
mov
loop
scas
imul
rcll
in
leave
loopne
int3
das
orl
xchg
movsb
mov
imul
sub
pop
pushf
lea
mov
lods
shrl
jmp
xor
sbb
jle
pop
mov
sub
test
push
repnz
mov
jns
dec
shrl
jnp
ret
stc
inc
sti
push
add
scas
adc
dec
fs
mov
cld
cld
jge
outsb
dec
ja
fdivs
outsb
add
fadds
iret
lcall
cmpsb
negb
std
repz
imulb
sti
imul
dec
adc
or
lea
sub
adc
insb
push
mov
lock
movsb
stos
lahf
test
aaa
cmp
stos
stos
repnz
test
push
jl
sub
add
mov
lret
pusha
inc
test
mov
and
or
mov
cmp
xor
shrb
or
pop
mov
mov
mov
mov
cmp
jl
shrl
dec
mov
dec
mov
jnp
sub
lods
notl
pop
jl
movsl
in
mov
addr16
xor
and
mov
and
fwait
mov
pushf
rcrl
out
je
pop
dec
or
xchg
insl
test
ret
mov
fisttpll
dec
and
addr16
xchg
fbstp
sbb
shlb
and
mov
test
sbb
and
dec
ficoms
call
mov
sub
aas
mov
adc
adcb
xchg
inc
adc
dec
sti
cmp
bnd
lcall
mov
call
xor
das
jbe
push
push
hlt
jle
lret
cmp
stc
and
push
and
pop
adc
enter
in
mov
test
repz
icebp
out
cmpsl
cmp
xor
lahf
outsl
mov
dec
pop
push
jo
mov
lret
scas
stos
mov
aas
xor
in
aaa
fwait
pop
popa
ret
jl
mov
inc
xor
imul
dec
adc
inc
pop
into
dec
aad
cmpsl
push
xchg
cmp
cld
ljmp
jno
js
dec
cltd
js
lods
rcrl
sbb
adcb
mov
push
or
std
cs
arpl
mov
test
cli
jnp
addr16
out
aaa
pop
imul
pop
pop
dec
roll
das
sahf
movsb
roll
push
movsl
ficoml
fadds
mov
sbb
gs
xorl
scas
xor
and
lods
push
std
push
and
add
mov
and
mov
fdivp
inc
loope
imul
imul
in
xchg
dec
test
mov
add
test
add
mov
push
sti
flds
clc
push
xor
jge
imul
arpl
cmp
pop
das
sbb
sub
pop
movsl
ret
ja
adc
pop
fsubs
scas
sbb
push
outsl
push
and
push
loope
daa
or
roll
cmc
in
inc
inc
pushf
pop
or
dec
push
enter
or
inc
jmp
mov
or
xchg
xchg
push
test
cmp
movsl
ficoms
push
sbb
in
mov
push
fstl
jmp
inc
sbb
call
and
test
mov
call
mov
mov
inc
movsl
or
jo
ss
test
inc
icebp
and
push
pop
dec
jbe,pn
clc
mov
jb
sub
xchg
fwait
aad
adc
jge
arpl
pushf
jb
xchg
xor
xor
push
cld
divps
mov
sub
cmpl
adc
mov
ficoml
mov
sbb
hlt
sarl
aas
mov
cmpsb
dec
jle
jns
popa
add
mov
pop
test
gs
popf
hlt
dec
fistpll
or
cmpsl
lret
cmp
lret
lock
lods
lea
xlat
jb
les
sbb
xchg
mov
adc
fldl2e
repnz
data16
jae
mov
stos
rcrl
lcall
mov
pop
imul
cmp
pop
rol
sbb
iret
ret
daa
jae
nop
dec
mov
inc
test
pushf
cmp
data16
mulb
jb
push
loope
shrl
ljmp
pop
adcl
add
ret
and
cmp
mov
xor
xor
shll
add
mov
xor
mov
es
lret
fadds
sbb
clc
push
push
out
or
adc
pushf
add
xchg
mov
sbb
mov
ficomps
push
into
test
test
lds
push
ljmp
mov
icebp
shlb
cwtl
add
xchg
rcr
cmp
jle
mov
roll
jmp
mov
adcb
daa
push
je
roll
cs
insl
sub
mov
push
test
lods
imul
pop
scas
or
jle
push
jbe
push
rdmsr
shrl
xchg
mov
ret
hlt
dec
jmp
cmp
das
mov
jl
gs
rcll
adc
sub
cld
arpl
pop
sub
xchg
cli
adc
loope
lods
test
jecxz
xor
daa
lods
mov
sbb
cli
lahf
add
push
mov
ljmp
mov
xor
and
mov
rorl
ud2
sahf
cli
aaa
scas
repnz
xchg
jo
clc
sbb
jge
popa
jle
or
jle
fildl
push
cmp
mov
jno
push
ret
push
and
leave
data16
movsl
sub
and
popf
imul
outsl
std
insb
repnz
out
jnp
out
lock
dec
ret
sti
xchg
popa
add
add
lret
mov
sbb
sub
jne
in
les
mov
outsl
xchg
jb
popa
jbe
and
lcall
or
xchg
fmulp
cmpsl
mov
aas
in
pop
ret
mov
cmpsb
cld
icebp
int
push
scas
add
cmc
mov
adc
cmp
sbb
lea
push
sbb
pop
sbb
push
or
mov
ljmp
pop
int
popa
ja
mov
in
jl
popf
popa
aaa
inc
mov
add
ss
filds
lahf
pop
sbb
shl
cwtl
js
mov
jg
sub
add
jl
repnz
xor
push
xor
in
hlt
insl
jmp
in
inc
push
cli
mov
jb
or
aam
add
fisubs
movsb
fidivrs
fs
or
mov
adc
sub
add
mov
add
push
mov
ret
jbe
cmp
jg
pop
or
push
dec
or
mov
push
pop
xchg
addr16
push
or
jno
sub
fisttpll
iret
test
sub
test
mov
xchg
je
or
hlt
js
jmp
inc
sti
push
mov
ljmp
cmp
test
rolb
push
xor
lret
xchg
addr16
testl
or
and
cmpsl
sbb
repz
sbb
pop
mov
mov
jb
or
add
fimuls
addr16
adc
repnz
inc
cs
mov
cwtl
sub
jecxz
adc
lock
xchg
rolb
mov
repz
push
stos
dec
inc
mov
stc
adc
push
jno
testb
mov
pop
sub
push
test
inc
aaa
lods
inc
pusha
fucomp
pop
or
popf
jmp
aad
cwtl
rcr
mov
mov
iret
mul
add
push
pusha
sub
mov
xor
daa
jns
xor
das
adc
cld
pop
add
xchg
mov
daa
pavgw
scas
sbb
jge
adc
pusha
aaa
les
stc
add
ret
xchg
sub
pop
jb
or
inc
dec
sbb
xchg
mov
add
sti
mov
and
and
xchg
int
add
out
push
es
scas
mov
xchg
adc
cli
jbe
inc
popfw
aam
aad
add
cmpsl
rcrb
in
xchg
std
lret
add
jmp
cwtl
mov
sbb
ljmp
aaa
ds
push
rclb
sub
lods
push
shll
xor
xchg
insb
xchg
imul
pop
lea
aad
inc
rorl
out
and
jo
sub
xor
sub
dec
and
xor
sti
daa
outsb
sahf
mov
test
jle
mov
xlat
imul
lods
mov
out
lock
lods
pop
arpl
into
adc
inc
push
jne
clc
dec
ljmp
jns
jno
repnz
in
sub
pop
pop
jo
mov
or
loope
leave
cwtl
ret
xor
jecxz
jle
gs
imul
orl
in
out
test
mull
imul
shlb
or
mov
cmc
adc
dec
dec
sub
jmp
ret
mov
mov
cmp
xchg
int
cmp
loope
xchg
aad
mov
loope
sarl
mov
loopne
push
popf
cmpsb
lods
mov
or
or
add
mov
mov
add
shll
jo
not
aas
sbb
pop
sbb
xchg
fs
sbb
rcll
push
aam
adc
daa
mov
dec
imul
clc
cmp
xor
and
mov
mov
adcb
sub
mov
cmovs
popf
movsb
adc
sub
pop
xchg
pop
sbbb
mov
cmpsl
or
push
cmp
cmp
add
pop
pushf
sbb
mov
xor
xor
and
pop
stc
xor
or
mov
sbbb
out
dec
push
fs
sub
insb
pop
test
ror
adcb
add
aaa
pusha
add
pop
dec
lock
rolb
test
or
xorb
mov
xchg
inc
add
push
cmp
jge
divl
jle
or
push
popf
fld
lock
inc
add
ds
mov
dec
jo
jnp
into
in
sahf
push
ljmp
lcall
inc
scas
jmp
mov
loop
mov
dec
xchg
push
fs
and
pop
push
mov
add
inc
push
xor
imul
aam
daa
adc
push
sub
mov
rolb
adc
push
inc
aam
inc
jmp
mov
and
stos
push
rclb
add
fbstp
mov
xchg
mov
decb
movsl
and
and
fs
mov
shll
out
inc
xor
leave
mov
bound
inc
adc
inc
mov
push
mov
fwait
cmp
xchg
cmp
movb
lahf
push
pop
lret
lods
hlt
fimuls
xchg
mov
aam
cwtl
mov
add
jbe
adc
mov
cmpsl
or
xor
inc
repnz
push
adc
inc
xor
loope
push
jb
sbb
mov
cmpsb
sbb
jmp
sarl
ds
jne
sbb
cmp
aam
sub
xchg
ret
jno
mov
add
xchg
mov
insb
int
stos
leave
out
rcr
arpl
aas
inc
mov
out
rcl
add
pop
pop
test
and
xor
inc
mulb
addr16
nop
lret
jbe
clc
mov
outsb
xor
adc
out
test
xchg
dec
sub
cltd
negb
xor
fdivrl
mov
lods
leave
pop
dec
dec
into
add
dec
or
cmpsb
ja
shlb
loope
popa
xchg
call
cmpsl
inc
mov
adc
cmp
jnp
push
sbb
cmp
mov
mov
out
adc
jb
jmp
out
rol
cmpsb
outsl
pop
pop
pop
xchg
sub
mov
ljmp
mov
insb
pop
sub
icebp
shll
loop,pn
cmp
outsl
ret
mov
andb
xchg
insb
push
xor
ljmp
xchg
cmp
xor
int3
mov
jmp
push
inc
mov
cmpsl
pop
pop
dec
xor
mov
push
arpl
sub
push
leave
dec
adc
jmp
jno
aas
mov
cmpsb
pop
lahf
dec
daa
sub
pop
in
sub
lock
outsl
shl
fmuls
test
jmp
repnz
mov
cmp
dec
xchg
adc
sub
cmp
mov
movsb
gs
jg
aas
mov
fmulp
push
fwait
icebp
sbb
sbb
jl
pop
ret
mov
sub
mov
push
arpl
dec
movsb
xor
test
je
pop
lea
pop
push
sti
out
nop
sbb
adc
push
int
adcb
dec
xor
mov
insb
in
lods
cltd
push
ss
xchg
or
mov
xchg
call
mov
mov
sbb
push
sbb
in
push
jp
in
mov
dec
sahf
cmp
mov
xlat
ret
js
mov
xchg
jle
push
or
aad
stos
pushf
cmp
in
into
push
lds
nop
pop
lea
jle
pop
mov
loopne
ja
aaa
mov
fdivrs
das
jmp
lret
mov
out
jecxz
fisubrl
mov
cld
int
negb
je
cmp
pop
inc
dec
jp
or
js
add
into
dec
dec
jmp
les
cld
cmp
aaa
xor
cltd
jb
inc
dec
lds
adc
out
sub
test
dec
repnz
pop
test
sub
fimull
gs
dec
add
sti
sahf
call
in
rcr
adc
inc
pop
dec
lock
push
xlat
adcb
push
clc
insb
ret
or
xchg
jecxz
lahf
inc
mov
fldenv
data16
and
xchg
insb
dec
inc
enter
popa
or
sub
pop
jbe
loopne
fmuls
jnp
std
je
rolb
inc
mov
dec
cmp
xor
or
stos
and
imul
lret
mov
test
lret
shl
inc
pop
pop
inc
mov
push
and
sub
lahf
movsl
sbbb
xor
inc
mov
or
sbb
xchg
mov
jg
push
fbld
ret
sbb
dec
cli
mov
sub
pop
nop
xchg
les
icebp
ja
clc
cltd
add
xchg
or
dec
out
outsl
movsb
pop
push
mov
dec
ret
lcall
xlat
movsl
out
add
jmp
push
mov
ds
and
mov
insl
mov
inc
lret
lods
mov
sub
mov
lods
sahf
int
and
sbb
add
dec
adc
xorl
test
dec
stos
pop
push
dec
push
jmp
and
inc
jle
xchg
and
fucomi
lea
pop
inc
mov
jno
inc
lret
mov
lret
aam
cmp
jl
xchg
fxch
sub
jnp
sbb
mov
and
push
add
xchg
fs
xorb
xchg
dec
ror
fidivl
xor
mov
xor
jmp
cltd
xchg
add
cmp
sub
xchg
xchg
add
xor
repnz
xor
scas
mov
idivl
and
inc
xor
test
fistpl
shrb
jns
std
fdivs
adc
ret
cmp
insb
into
cmp
ror
pop
fs
xchg
xorb
int3
jno
frstor
cmpsl
mov
mov
lahf
lret
jb
insl
pop
das
mov
lret
pop
mov
or
xor
mov
push
in
sahf
jle
sub
adc
ror
sbb
sub
imul
adc
lret
xor
push
sbb
aaa
cmc
cmp
enter
les
dec
pusha
push
jnp
or
sti
outsb
dec
pop
mov
mov
inc
inc
scas
adc
adc
daa
xchg
xchg
mov
mov
scas
dec
mov
les
stos
in
jge
in
fwait
xchg
rcrb
cld
das
aad
mov
lahf
jge
xchg
add
lea
sarb
lock
jb
jle
aad
and
into
out
jnp
xchg
add
push
adc
jle
sti
push
std
adc
rcrb
cmp
in
or
flds
fwait
dec
or
pop
add
call
mov
jl
iret
cltd
movsb
jp
lds
cmp
cwtl
cs
xchg
scas
out
das
xchg
fnstcw
fdivr
push
mov
cs
insb
push
xchg
dec
inc
dec
adc
jne
adc
jnp
xchg
ret
je
in
out
jbe
repnz
mov
and
jge
lret
dec
pop
xor
cmpsb
mov
push
push
jbe
int3
mov
inc
into
cmp
and
bound
out
cmp
sbb
cld
mov
mov
inc
jg
rorb
jmp
cs
and
inc
popa
jle
cmp
add
insl
xor
inc
jecxz
lret
dec
push
aam
sarl
jecxz
jmp
rcrl
sub
es
mov
xchg
add
push
fstp
pop
mov
add
insl
sub
cmc
lock
xchg
mov
mov
incl
enter
sub
icebp
xchg
arpl
data16
xchg
add
mov
adc
fisubrs
lcall
push
and
icebp
hlt
cltd
pushf
int3
or
mov
xchg
jl
addr16
mov
int
je
add
movsb
fisubl
cmp
in
mov
jns
mov
sbb
and
sbb
nop
cltd
aaa
mov
inc
and
adc
sbb
sub
mov
imul
mov
inc
push
mov
sysenter
dec
cmp
mov
add
and
and
xor
stc
xchg
push
dec
jns
push
lea
bound
mov
jg
sbb
sbb
lods
js
cmpl
fs
sub
mov
inc
sti
popa
test
push
adc
fadds
in
inc
fs
mov
sbb
mov
jmp
xor
lret
add
out
ljmp
cmp
int
test
mov
ds
pop
in
dec
xchg
and
mov
shll
mov
js
in
push
cld
popa
push
add
mov
sbbl
xlat
test
pop
dec
dec
lcall
xor
xchg
adc
mov
mov
xchg
fisubs
aas
ret
ss
inc
addl
out
data16
fistpl
sbb
addr16
icebp
aas
jno
adc
xor
adc
xor
out
aas
push
cltd
cwtl
jno
es
movsb
mov
jmp
mov
arpl
sbb
nop
stc
clc
call
or
inc
fildl
lock
rorl
sbb
lret
bound
stos
sbb
mov
mov
lret
sar
cld
sti
lret
ljmp
xchg
in
ja
setae
mov
pop
inc
nop
in
add
sbb
iret
imul
cli
mov
inc
add
jns
icebp
sub
sbb
int
sub
hlt
or
sub
repnz
dec
insl
into
dec
aad
inc
leave
and
sub
test
push
lds
mov
mov
pop
mov
mov
inc
cmpl
jae
mov
xchg
inc
inc
sub
push
sbb
outsl
push
xchg
push
adc
pop
outsl
test
cmc
bound
sbb
inc
ja
dec
rclb
mov
int
leave
xchg
inc
sbb
sub
jnp
inc
dec
sbbb
mov
fnstsw
mov
pusha
imul
push
movsb
addr16
sbbl
or
fsts
and
fbld
loope
push
inc
leave
ficompl
cmc
jp
sbb
pushf
subl
pop
clc
into
dec
fimuls
cmp
jo
jae
push
sub
movsl
pop
loop
sbb
xchg
in
xlat
jb
jmp
jae
inc
xchg
adc
jbe
pop
popf
orb
sbbl
enter
je
jecxz,pn
mov
xorb
faddl
xchg
pop
jle
or
pop
cmp
adc
test
addr16
cld
imul
pop
aad
jecxz
jbe
pop
in
fistl
sbbb
and
stos
ljmp
inc
mov
les
fst
out
xchg
dec
mov
sbb
pushl
nop
lock
aaa
aad
sbb
lds
roll
push
cmp
jne
adc
mov
push
jl
add
lea
test
pop
mov
push
loope
lods
shr
jne
cmp
call
adc
in
daa
jb
fs
xor
sub
sub
add
mov
adc
dec
dec
idivl
int
pop
xor
jg
inc
xchg
mov
xchg
jg
mov
insl
repnz
cmovbe
ljmp
or
xchg
fidivs
lret
and
aad
mov
in
ret
sbb
cs
icebp
jne
loope
fs
out
dec
popf
popa
fsubrs
sbb
cmp
jne
in
enter
test
push
out
xchg
in
jecxz
out
xor
or
xor
mov
fsubrl
int
in
mov
jmp
fisttpl
sbb
mov
out
jno
cmp
sbb
mov
aam
icebp
jle
push
test
aam
adcb
ret
xchg
hlt
push
lea
dec
hlt
cmp
scas
xchg
or
ret
scas
mov
fwait
xor
jbe
orb
xchg
and
mov
in
mov
mov
into
arpl
lcall
push
pop
xlat
lret
add
lcall
shll
lahf
lock
fcompl
mov
mov
imul
repnz
pop
lret
aad
inc
mov
mov
add
je
pop
xchg
mov
outsl
gs
mov
js
or
xor
fnsave
rorb
cmpsb
aam
ret
jae
and
inc
rolb
rcrl
es
pop
hlt
lcall
sti
mov
xor
push
fsubp
int
sbb
ret
sbb
gs
lret
push
aaa
out
movsb
xor
adc
in
cmp
arpl
rcl
push
aad
dec
pop
sbbb
int3
mov
xchg
xchg
push
mov
mov
jp
xchg
call
adc
test
pop
push
mov
sbb
xchg
out
add
out
inc
sbb
loopne
push
lret
add
bnd
popa
jp
cmpl
lods
scas
movsl
ja
mov
cmp
xor
dec
dec
cmp
repz
inc
loopne
pop
and
fsubr
push
mov
xor
or
mov
pop
pop
xor
stc
mov
mov
xchg
test
repz
mov
fisttpl
inc
ja
enter
or
ret
pop
imul
movsb
xor
sbb
mov
clc
pop
jge
gs
mov
pusha
mov
test
fwait
sub
testb
cwtl
xchg
mov
cmp
in
add
pop
imul
movsb
mov
push
xor
sub
inc
stc
cltd
mov
lods
jnp
cmpsl
pop
ret
pop
xchg
out
mov
hlt
mov
jno
jle
cmp
into
outsl
out
pusha
pop
xor
loopne
aas
add
and
xor
shrb
lea
xchg
xor
cmpsb
faddl
test
hlt
xchg
es
test
xor
sbb
or
pop
imul
std
push
xchg
in
push
rolb
push
lods
inc
sub
loop
mov
loop
push
or
mov
inc
push
adc
cs
dec
sqrtps
fldl
push
jae
sbb
inc
fcomip
scas
pop
out
in
mov
rcrb
pop
jns
outsl
sub
movsl
test
scas
loop
adc
ds
gs
js
cwtl
dec
lret
into
xchg
mov
in
add
ljmp
xor
or
imul
jp
dec
inc
cmp
addr16
aas
aaa
and
push
shlb
mov
fadd
add
push
jne
push
repz
adc
mov
pop
lea
mov
sub
popf
xor
orl
dec
pushf
cmp
dec
hlt
fsubs
mov
repz
vandnpd
loop
mov
jmp
out
cmp
pop
sbb
lcall
sbb
add
stos
pop
pop
rclb
dec
adc
dec
cmpsb
js
cli
cmp
jae
bound
adc
lods
shl
mov
sub
adc
aas
mov
in
push
shll
xor
into
mov
ja
jae
adc
dec
mov
jne
xlat
inc
ds
subl
push
imul
xchg
dec
push
and
testl
insb
push
inc
iret
mov
cld
cltd
es
bound
add
pop
sub
pop
fs
mov
push
jl
fistps
pop
xchg
test
fdivp
mov
jnp
add
cs
cmp
hlt
pop
cmp
add
int3
sbb
mov
xor
mov
adc
xor
add
pop
outsl
inc
clc
sbb
xor
adc
add
loop
test
mov
xchg
out
mov
add
lock
mov
push
or
mov
mov
sbb
dec
mov
stc
movsl
add
test
test
setb
pop
mov
into
dec
inc
popf
mov
outsl
dec
xchg
xlat
jae
in
add
mov
jl
data16
in
push
push
push
sbb
idivl
adc
call
leave
xor
clc
pxor
clc
shlb
mov
pop
pop
in
mov
add
sub
clc
or
hlt
sub
cmpsb
scas
add
sub
inc
push
mov
push
fs
inc
and
ds
sub
and
inc
ficoml
in
ljmp
xor
xor
cmpsl
rolb
mov
test
jae
cmpl
mov
mov
mov
xor
bound
cwtl
imul
sbb
or
add
sbb
push
inc
mov
or
test
xchg
mov
jo
pop
push
pop
insl
daa
outsb
jns
adc
xor
inc
jns
repz
in
push
pop
sbb
mov
push
xchg
mov
xor
xchg
push
adcb
inc
push
sahf
loop
repz
mov
or
stos
mov
ret
inc
int3
inc
loopne
or
xor
jnp
out
test
sbb
push
hlt
add
sbb
divl
movsb
dec
or
lret
or
xor
cmpsl
sub
rol
lret
dec
daa
mov
xor
xchg
or
subl
add
push
cmc
call
push
call
outsl
clc
jnp
outsb
adc
cmpsl
sbb
fstpt
lock
mov
in
pushf
icebp
movsl
add
scas
in
pop
enter
adc
adc
mov
xchg
pusha
pop
or
and
add
mov
dec
popa
test
mov
mov
je
movsb
or
sub
xchg
xchg
adcb
sub
mov
pop
xchg
std
mov
fimuls
fs
fidivrl
rcrb
lods
xchg
xchg
mov
test
sbb
shrb
push
call
orl
mov
pop
ret
das
xchg
adc
jp
jg
sub
imul
cwtl
mov
mov
lahf
les
xchg
insl
pop
in
xor
lahf
mov
aas
mov
movsb
xchg
xchg
in
mov
pop
int
xor
rolb
je
jmp
jbe
mov
mov
cmc
mov
aam
fwait
dec
xchg
xchg
insl
out
push
pop
stos
nop
hlt
fbstp
gs
scas
jno
add
lret
insl
cltd
pop
adc
scas
ja
mov
shrl
in
test
and
push
int
push
xor
cli
lret
out
jecxz
call
je
lock
mov
scas
cmp
pop
fidivrl
repnz
jle
leave
pop
into
addr16
cmpsl
add
jle
jbe
cmp
sub
pop
sahf
out
ljmp
jecxz
mov
xor
loope
mov
inc
mov
lds
cmp
mov
mov
enter
pop
daa
stos
lds
insb
iret
mov
lds
and
xlat
cmpsl
mov
and
mov
dec
shrl
lret
xor
push
mov
outsl
bnd
das
mov
ds
arpl
and
add
cltd
stos
xor
mov
jmp
mov
inc
repz
aad
test
or
mov
call
xor
dec
mov
sbb
int3
cmpsb
fdivrl
test
pop
push
sahf
pop
mov
pusha
loopne
pop
mov
push
jno
push
call
xchg
mov
sbb
push
adc
fwait
cmpsl
ds
add
out
repnz
mov
aaa
imul
mov
pop
movsl
add
xchg
add
aaa
les
mov
int
cmp
mov
ret
aas
shll
cmpsl
test
fincstp
and
sub
xchg
in
or
adcl
je
sub
ret
push
push
aam
add
cmc
out
add
xchg
jae
lret
out
sbb
hlt
ret
pop
repnz
mov
popf
mov
int3
cld
sbb
dec
and
into
fwait
mov
stc
nop
in
and
cmp
hlt
fbstp
mov
mov
les
mov
js
lds
lret
and
leave
clc
mov
xorb
cmp
popa
push
sti
into
in
adc
cmp
mov
jnp
andl
loopne
adc
mul
outsb
jl
adc
xchg
test
repz
lcall
aad
or
and
inc
mov
and
cld
scas
addr16
mov
sarb
or
push
ss
roll
cwtl
aas
fcomps
icebp
ss
jbe
int
icebp
xorb
mov
push
inc
les
xor
jecxz
lea
mov
sahf
das
mov
jne
daa
stos
adc
xor
jmp
inc
in
mov
iret
xor
leave
mov
leave
pop
leave
xor
or
inc
jno
insb
xchg
push
addr16
cli
mov
mov
and
hlt
cmp
mov
cltd
jmp
mov
insb
lcall
fldl
push
jno
sbb
inc
loope
mov
mov
cmp
lret
aam
inc
xor
pop
cmpsb
inc
popf
mov
daa
cmp
inc
cmp
fldl
shll
sbb
int
ja
sbb
lea
loop
mov
test
push
xchg
repz
inc
xchg
add
loope
push
inc
stc
loope
cld
les
imul
leave
xchg
dec
mov
scas
pop
jg
xor
sub
std
or
xor
lods
mov
sub
xor
mov
pop
shlb
std
cmpsl
aad
subb
xchg
stos
push
repz
xchg
sbb
mov
xorl
ljmp
dec
repz
sbb
xor
ret
mov
sbb
cli
jl
xor
and
int
popa
leave
shll
int3
adc
daa
test
mov
enter
jne
stos
add
lret
add
test
scas
mov
iret
sub
mov
xor
mov
fisubrl
subb
int
pop
sbb
push
or
add
test
sub
mov
cmp
dec
cmp
lcall
out
cs
inc
test
xor
shrl
mov
xor
sbb
out
fistpl
adc
mov
mov
push
fdivrl
inc
shll
mov
jnp
add
dec
xchg
test
push
inc
add
loop
xchg
sub
xchg
aaa
js
das
outsb
dec
lods
sarb
mov
fisttpll
and
int3
ljmp
enter
ret
mov
xlat
adc
ret
fdivrs
pop
std
imul
in
lcall
loope
xchg
in
add
les
cmpsl
out
cmp
sbb
pop
cmc
enter
insl
sub
or
in
mov
jo
add
xor
push
movsl
pop
pop
test
les
scas
push
imul
and
fdivr
enter
cmp
dec
movsb
mov
sub
sbb
jp
icebp
mov
leave
sar
je
sbb
test
xchg
cmp
push
sahf
or
sub
jno
dec
and
pushf
xor
out
imul
sahf
out
jl
scas
enter
shrl
cld
adc
sub
aas
mov
outsb
lods
lcall
ret
jo
inc
out
fstps
pop
push
adc
stos
adc
add
lds
push
lea
int3
add
subl
push
sub
loopw
in
clc
xcrypt-ecb
cmpsl
lret
lcall
xor
and
mov
dec
int3
inc
daa
jae
mov
into
push
push
add
and
cmc
nop
clc
movsb
fwait
icebp
mov
cmpl
mov
js
imul
gs
adc
imul
dec
cmp
push
cmp
repz
add
stc
sub
in
jge
push
dec
xor
cwtl
pop
loopne
mov
pop
out
push
movsl
and
sbb
mov
lods
lods
add
in
mov
mov
xor
in
and
inc
movsb
into
inc
jl
xchg
out
pop
xchg
cmc
dec
push
pop
mov
jne
xchg
dec
iret
int3
mov
insb
popaw
stos
dec
idivl
outsl
inc
fcmovnb
mov
lea
or
jmp
adc
nop
scas
pop
addl
pop
sbb
ss
jb
insl
dec
dec
dec
les
adc
mov
xchg
mov
pop
addl
sarl
jle
loope
mov
jmp
cltd
ss
jns
cmp
sub
je
data16
cmpsb
test
cli
decl
xor
cs
les
lock
aad
out
xor
push
xor
push
rclb
xor
decb
cwtl
push
dec
mov
jp
jnp
mov
imul
nop
mov
jmp
call
sti
xchg
sahf
leave
cld
or
inc
jle
mov
or
notl
addl
jae
rclb
fcmovb
es
aaa
loop
adc
subb
mov
pop
dec
lods
xor
gs
adc
xchg
push
push
dec
mov
mov
mov
stos
pop
loop
push
dec
jae
int3
push
adc
lea
sbb
pop
mov
sub
xchg
mov
movsl
push
sub
pop
mov
push
cmp
and
jb
or
les
xor
test
cltd
sti
push
ss
test
xchg
sbb
inc
pop
sub
das
mov
jecxz
jbe
in
xchg
jge
jnp
aam
into
push
xchg
mov
shrb
xchg
jl
ret
inc
mov
mov
xchg
cmp
call
cltd
arpl
add
jge
lret
pop
xchg
js
cmp
push
xchg
xchg
popf
mov
mov
imul
mov
xchg
dec
dec
xor
push
lods
mulb
mov
xlat
cmp
push
add
pusha
dec
aam
shlb
fbstp
xchg
sbb
lods
aam
and
mov
inc
and
out
and
cmp
mov
cmp
int
xorl
in
clc
or
fwait
test
push
mov
inc
stc
adc
lods
pop
push
and
sti
imul
jo
clc
sbb
sbb
lods
cli
loopne
test
scas
mov
inc
into
es
sbb
push
cmpsl
loop
or
and
pushf
xchg
mov
ret
nop
add
and
lcall
cmpsl
push
cli
loop
pop
enter
add
fnstcw
inc
xchg
popf
loopne
or
and
pop
sti
cmpl
divb
push
lods
pop
pop
xor
ret
les
fcompl
mov
pop
int
mov
in
and
inc
leave
out
add
adc
xchg
cmc
aaa
mov
jns
jbe
xchg
hlt
fwait
inc
sub
aas
jno
adc
mov
sahf
xchg
cmpsl
scas
ret
rorb
push
test
mov
inc
ljmp
pop
xchg
inc
adc
ret
clc
xchg
mov
jno
es
repz
sub
and
xor
into
movsl
inc
xor
rorb
je
sahf
bound
adc
sbb
negb
fcoml
imul
mov
orl
jle
idivb
aad
add
mov
in
lea
push
call
dec
dec
dec
aam
nop
dec
rol
sub
fistpl
pop
pmulhw
mov
sbb
mov
xor
cmp
or
into
adc
jo
fsubr
stos
mov
bound
int3
fisttpll
pop
test
push
push
je
clc
stc
out
cmp
mov
cs
cmp
mov
test
mov
insl
mov
inc
inc
test
mov
scas
jmp
xor
test
cmp
jne
add
adc
mov
out
fcmovnbe
or
adc
jne
inc
jne
inc
cmp
inc
stc
outsb
mov
js
adc
cltd
icebp
or
mov
call
test
inc
out
leave
push
pop
cmp
jo
int
and
push
outsl
in
ss
push
cmpsb
pop
pop
mov
sub
jmp
push
or
in
popa
jnp
gs
out
pop
imul
mov
cmp
in
xchg
mov
xlat
test
pusha
push
int3
sbb
cmp
inc
test
push
in
popf
cwtl
jmp
popf
mov
loopne
jbe
jecxz
dec
les
mov
lahf
cmp
mov
fisubl
mov
sbb
test
cs
jbe
xorb
push
mov
dec
ficompl
inc
sbb
cltd
cvtps2pi
push
push
lds
adc
push
jo
jno
and
loop
cmp
pop
je
pop
jl
dec
dec
pop
mov
imull
cmp
pop
pushf
and
outsl
mov
mov
cmpsb
sbb
pop
and
jns
pop
aad
es
dec
sarl
jns
lret
in
jne
shrl
aaa
cmc
lcall
xor
or
pop
dec
orl
pop
lcall
pop
mov
mov
idivb
rclb
dec
jmp
push
xlat
jg
sbb
aam
cwtl
nop
mov
int3
sbb
jle
rclb
mov
subl
xchg
push
xchg
sbb
mov
ret
leave
add
and
ja
popf
gs
push
cmpsb
shll
rorb
pop
mov
sbb
std
cmp
and
jbe
addb
je
push
imul
and
jg
stos
sbb
pusha
paddusw
sub
in
mov
push
mov
lcall
jb
add
or
sub
pop
sub
and
scas
mov
sub
jns
add
adc
test
mov
into
sbb
pusha
add
hlt
xchg
jne
jne
mov
add
mov
inc
jl
sub
and
pop
xchg
test
jp
cli
enter
aad
push
nop
stos
mov
hlt
test
cmpsl
cld
sbb
cmp
xor
inc
push
and
daa
ljmp
scas
aad
xor
popf
or
call
lret
cmpsl
arpl
cli
and
sbb
out
lods
icebp
dec
fstpl
cltd
mov
cltd
cs
cld
pop
cmp
push
lret
stos
cmc
add
iret
andb
sbb
pop
aaa
pushf
popa
xlat
lret
or
mov
or
out
int
repnz
jbe
push
cmpsl
cld
mov
add
cmp
or
test
imul
lret
notl
and
mov
lret
pushf
stos
and
adc
xchg
push
pop
add
xchg
sbb
shlb
ljmp
add
cli
fnstenv
mov
push
lock
xchg
lds
and
cld
mov
aas
jmp
ficompl
lock
xchg
push
xchg
sub
icebp
xchg
jns
xchg
imul
sub
fs
stos
sbb
adc
sub
je
in
js
push
xchg
mov
ficomps
cmp
dec
sub
addr16
dec
test
imul
mov
jmp
stc
sub
mov
aas
add
sbb
lds
or
andl
movsl
mov
lret
mov
cmpsb
cmp
mov
lcall
mov
scas
xchg
repnz
push
scas
pop
cmpsb
pop
push
leave
jle
nop
push
mov
clc
inc
add
cli
xor
xchg
sub
hlt
shll
or
ja
xor
into
pop
push
cli
lcall
pop
stos
sbb
shll
leave
std
sbb
sub
xchg
pushf
cmp
hlt
incb
push
mov
pusha
mov
dec
and
addr16
arpl
fsubl
mov
testl
es
out
or
inc
sbb
xchg
dec
jmp
mov
addr16
js
push
and
incb
daa
cmp
or
adc
sub
jl
mov
mov
pop
bound
pusha
in
cmp
mov
outsl
repnz
outsl
mov
loopne
jge
enter
fstl
add
mov
lds
sbb
add
lods
aam
int
add
sub
pop
add
add
bound
dec
add
subl
daa
sbb
adc
pusha
mov
dec
lahf
xchg
pusha
lods
mov
nop
shr
mov
add
adc
cmp
dec
ljmp
xor
inc
xchg
cld
into
imul
or
pop
popa
lock
loop
es
or
jg
xchg
or
push
xchg
dec
je
sub
mov
xor
jbe
mov
aad
sarl
add
leave
shr
jb
std
sbb
dec
sub
loopne
sbb
adc
mov
adcb
cmp
and
inc
imul
mov
jg
xor
sub
mov
jnp
leave
push
dec
sbb
dec
iret
fidivl
jns
es
inc
cmpsb
sub
xor
push
xlat
or
jecxz
lods
add
mov
xor
leave
ret
stos
mov
orb
lods
push
into
fdivs
jbe
mov
decl
inc
leave
fisttpl
loopne
js
imul
jno
inc
xchg
movsb
inc
mull
scas
bound
push
inc
jecxz
das
std
mov
push
fsubrl
pop
push
xchg
mov
jnp
fists
mov
cli
call
xchg
add
cmp
mov
fwait
mov
ja
pop
cli
aam
lds
jge
out
sbb
sbb
or
dec
pop
pop
and
xor
inc
cltd
push
bound
and
inc
daa
subb
mov
sub
mov
stos
xor
pop
pop
cmp
pop
test
in
or
add
pop
add
cmp
test
sbb
sub
lea
je
mov
xor
insb
enter
cmpsb
or
nop
ficomps
in
sub
rcrl
insl
push
sti
pop
scas
imul
stc
js
dec
ret
xchg
js
xor
push
jg
mov
leave
xchg
mov
sbb
adc
xchg
mov
lock
subb
lret
bound
addl
xor
pusha
in
inc
mov
je
frstor
jbe
out
sar
clc
icebp
fisubrs
loop,pn
mov
dec
push
rorb
andps
sub
sbb
pusha
movsl
aas
lahf
inc
and
sbb
lds
clc
mov
scas
jp
in
testl
into
jnp
jo
mov
outsl
loop
lret
mov
inc
sub
sbb
test
gs
std
imull
xchg
stos
pop
orb
xor
xor
cs
data16
jge
out
and
cli
sub
xorb
mov
js
outsl
test
pop
bsr
jmp
in
test
cmp
das
jle
ds
lods
lea
jns
mov
ss
pop
cltd
mov
push
pop
pop
mov
jno
xchg
jg
mov
mov
icebp
js
frstor
fs
sbb
mov
lock
in
dec
cmpsb
push
cmp
inc
mov
jns
pmuludq
mov
dec
and
dec
and
movsb
negl
adc
sub
popa
hlt
pop
out
enter
cmpsb
andb
insb
or
dec
lret
not
jns
lods
xor
mov
ret
shl
ret
js
sbb
dec
mov
aaa
shlb
aam
rcrl
cltd
sbb
stos
and
push
add
xorb
pop
popa
sti
xlat
xor
cld
cwtl
lahf
cmpsb
scas
or
sbb
mov
xor
fs
dec
lock
mov
fidivs
fxch
pushf
in
sbb
shrb
xchg
mov
or
mov
jb
js
and
lods
jnp
data16
push
fmuls
inc
es
sbb
and
jo
pop
dec
jne
popa
adc
cmpsl
xchg
mov
push
sub
nop
les
cld
insb
test
lcall
cmp
inc
xchg
clc
nop
sbb
int
fistpll
push
sarl
push
into
push
rcrb
loop
clc
mov
jnp
jo
jg
in
xor
xor
and
cmpsl
cli
xor
mov
loop
ret
pop
fdivrs
mov
mov
adc
lret
or
pop
sub
subb
jle
cwtl
jne
cltd
mov
xchg
cmp
sbb
sar
icebp
js
push
pop
xchg
mov
inc
lret
popa
inc
ret
mov
inc
push
mov
fnsave
insl
imul
cmpl
pop
sub
or
rolb
imul
cmovge
mov
js
ret
lods
sub
mov
ret
adc
mov
vpunpckldq
inc
xlat
inc
mov
daa
pop
mov
aad
or
out
mov
sub
aad
sub
loope
ljmp
fcmovu
in
xchg
push
adc
or
test
mov
popa
ret
xor
aaa
sub
shll
mov
push
xor
cltd
je
fsubrs
popa
cs
add
xchg
jns
ss
aad
ret
cmpsl
pop
jns
in
cmp
insb
jecxz
roll
mov
jo
je
cld
sub
repz
daa
mov
mov
test
cmp
push
fldt
leave
sub
mov
push
cmc
mov
mov
xor
fstl
mov
fs
xchg
mov
lret
lds
scas
adc
out
mulb
test
out
cmpsl
test
cmpsb
mov
push
fwait
jns
lods
pop
lods
push
rcrl
xchg
fnstsw
int
cltd
jo
out
inc
mov
stc
adc
xchg
scas
inc
ja
arpl
imul
adc
dec
push
sub
testl
push
dec
sub
mov
xchg
fs
pop
xchg
mov
rcr
dec
sub
cmp
or
orb
clc
pop
push
pop
arpl
mov
mov
jnp
dec
and
mov
ret
orps
xchg
mov
dec
aaa
sbb
iret
sub
je
xchg
clc
xchg
sti
sbb
je
xor
jb
cmpsb
enter
scas
into
jnp
xchg
add
ret
stc
jl
push
dec
jg
xlat
xor
icebp
jbe
shl
xchg
xorb
cmp
dec
add
shl
inc
inc
mov
mov
push
mov
mov
in
shl
mov
push
fcmovbe
xchg
insl
fbld
push
ret
fistpl
imul
jno
test
arpl
lcall
sbb
and
sbb
rorl
outsl
push
pusha
loopne
and
pop
stos
sub
xlat
dec
xchg
jns
scas
test
into
jle
loope
scas
add
in
dec
out
ficoml
fisttpl
daa
fbld
mov
cld
or
scas
lods
fdivrl
out
push
shlb
mov
sti
outsb
fcmovnu
and
mov
xchg
mov
xor
daa
mov
mov
repnz
pop
fdiv
push
xchg
call
rclb
xchg
inc
mov
sub
push
jnp
mov
xlat
sarl
dec
push
sbb
shlb
arpl
push
lods
jp
in
xor
sbb
psubsb
pop
imul
jnp
mov
fisubl
imul
sarb
outsl
pop
and
cmp
roll
dec
insl
sahf
sbb
aaa
fs
push
roll
mov
pop
sbb
jmp
mov
cs
cmp
or
in
ljmp
mov
popf
sub
mov
arpl
cmpsl
rcrl
sbb
repz
sub
sub
ds
repz
or
pop
lcall
imul
push
xchg
stc
enter
sub
test
inc
stos
jl
adc
sbb
add
lds
jns
jns
xor
cmp
gs
or
cpuid
cmp
je
sub
fsub
aaa
aas
lods
push
and
dec
lcall
test
pop
bound
jne
pop
test
push
pop
stos
adc
xchg
out
pop
inc
pop
ljmp
xlat
je
inc
in
mov
rol
mov
dec
jnp
icebp
xchg
scas
cmp
xchg
and
and
in
pop
push
mov
sub
or
stos
cld
imul
repnz
hlt
cmc
inc
stos
push
lahf
fmuls
mov
mov
lret
mov
aam
push
lahf
hlt
out
mov
push
push
ss
push
in
not
jmp
pop
add
insb
jne
push
push
fnsave
addb
and
test
icebp
jecxz
ja
pop
aam
ljmp
cmp
dec
push
jbe
mov
incb
mov
dec
test
clc
aad
fistps
pop
es
mov
iret
push
xor
test
xor
pop
sub
and
push
mov
mov
sbb
pop
mov
aas
dec
fs
jne
imul
fnstcw
popa
outsb
ret
mov
mov
incb
pop
js
sti
mov
out
xor
dec
imul
or
pop
mov
lea
cltd
cmpsb
pop
xchg
xor
nop
fldenv
pop
lods
push
cmp
adc
ja
loop
sub
cmp
popf
lcall
rcrb
lret
xchg
ret
dec
mov
push
sub
fcmove
jle
sti
sub
xor
jne
mov
repz
jmp
xchg
xorl
repz
or
xchg
sbb
or
xor
inc
inc
jne
mov
cmp
xor
xorl
fnstcw
test
xchg
int
or
mov
dec
ja
cwtl
push
xchg
dec
mov
mov
in
clc
loope
ja
cli
jbe
jmp
mov
jp
scas
adc
cmp
out
jp
in
sbb
add
and
sarb
aam
ss
push
subb
add
mov
push
shl
jae
xchg
push
dec
sbb
out
lods
in
mov
lcall
pop
pop
mov
jle
jno
dec
and
mov
xlat
pop
inc
repnz
fdivr
cld
sbb
mov
pop
imul
or
sahf
pop
sub
dec
inc
pop
pop
xor
daa
lret
enter
lods
in
ljmp
lahf
mov
push
or
mov
pop
push
rcrb
add
jae
adc
jne
rorl
popa
mov
inc
push
mov
xlat
lock
pop
sbb
das
adc
cmp
das
fnstcw
aaa
xlat
mov
xor
sahf
jle
jns
and
in
sub
int3
dec
ret
sub
movb
test
add
lock
and
adc
or
into
adc
inc
jo
mov
adc
push
std
xor
les
cmp
and
js
push
add
adc
dec
mov
mov
or
into
push
mov
out
and
jmp
inc
add
inc
mov
xlat
mov
mov
aad
jecxz
xchg
lahf
insl
or
je
in
ret
cli
inc
stos
mov
clc
lock
imul
sbb
ret
and
hlt
mov
adc
xchg
jnp
cmc
add
outsl
fcoml
or
xor
sub
mov
mov
push
dec
jbe
adc
aas
jb
mov
shll
dec
mov
xor
lock
test
mov
and
mov
cmp
xor
and
cmp
jmp
jnp
dec
jp
das
outsb
pop
jp
jl
cli
ret
ret
mov
and
iret
mov
push
jbe
outsl
test
pop
jg
lahf
gs
mov
aas
jae
xor
jne
sbb
fidivrs
jns
cmp
fiadds
aad
pushf
outsb
jo
jmp
enter
in
ljmp
pop
sbb
aas
push
inc
ds
sarl
lret
lcall
orb
adc
add
lahf
loopne
adc
ret
inc
adc
push
xchg
push
orb
lds
fistpl
je
dec
jno
cmpsl
sbb
push
push
mov
in
xor
stos
jbe
jns
or
xor
dec
dec
mov
mov
clc
cmpsl
mov
sub
push
or
fnstcw
add
cmp
push
xor
sarb
xchg
daa
mov
loopne
or
ljmp
cmp
push
repz
rolb
mov
sbb
and
test
push
or
nop
push
into
and
scas
orl
cmpsl
xor
insb
xor
pop
xor
sbbb
mov
adc
in
stc
and
inc
and
out
subb
xor
ja
notb
scas
push
xor
adc
stos
pop
outsl
fs
pop
fcoml
mov
loopne
pop
negb
shrl
jae
jno
stc
adc
rolb
outsl
hlt
roll
fneni(8087
repnz
hlt
cmp
cmpsb
xor
jp
add
sub
cmpsb
movq
popf
add
mov
jmp
xor
jg
popa
cs
bound
nop
cmc
sub
js
insb
xchg
enter
in
pop
dec
js
hlt
mov
icebp
bnd
pop
cmp
dec
dec
dec
xor
xchg
insl
mov
dec
sub
ljmp
push
cmc
rol
rcl
sub
aam
jl
cmp
pusha
mov
ljmp
lods
rsm
lret
lahf
test
jg
or
cmp
sbb
inc
cmp
pusha
imul
in
xchg
pop
inc
xor
push
pop
daa
hlt
sub
and
inc
inc
mov
stc
inc
mov
hlt
cmpsl
sarb
mov
out
test
push
xlat
jo
mov
jns
dec
sahf
jns
movsl
fidivs
mov
or
jge
inc
cmpsl
xchg
fs
jne
mov
sti
jo
shll
push
xlat
xor
inc
pop
ret
xor
fnstcw
dec
pop
fldcw
movsl
pop
push
push
xchg
mov
mov
mov
pop
dec
imul
and
mov
incl
sti
test
jno
mov
loop
push
cld
mov
repz
or
fdivrs
jo
cmp
lcall
cli
xchg
jge
jns
mov
xor
inc
push
cmp
push
loop
repz
jecxz
pop
add
lret
fnstcw
mov
scas
aaa
dec
call
out
cmp
lds
push
mov
jnp
insl
sub
adc
pop
int
lods
sub
or
cmc
and
sub
les
push
adc
pop
xlat
pop
hlt
cwtl
lea
vucomisd
das
adc
pop
movsl
movsl
sub
mov
out
or
ljmp
ffree
sti
stos
out
xor
xor
and
jp
sbb
xchg
or
mov
lcall
xor
movsb
dec
xor
mov
int
lcall
bound
aas
push
imulb
push
les
push
push
testb
negl
mov
sbb
mov
mov
add
pop
or
push
inc
jge
sub
cld
jp
in
mov
xor
ret
pop
cmp
imul
scas
je
or
mov
std
leave
sub
inc
inc
push
fwait
inc
or
dec
rorl
cs
je
cltd
mov
and
lods
sub
pusha
imul
sub
cmp
jae
fmulp
push
and
mov
shr
aam
cmpsb
mov
or
out
mov
sbb
enter
movsl
test
push
add
movsb
adc
adc
jg
mov
test
lods
cmp
push
pop
mov
addr16
mov
popf
and
push
mov
sub
mov
mov
sti
jne
call
add
push
adc
push
pop
adcb
or
xorl
lret
addb
and
addr16
push
popa
out
push
and
mov
lods
jp
push
imul
bound
lcall
ficompl
or
cltd
cmp
cltd
mov
jmp
imul
shlb
into
inc
pop
notl
sub
adc
mov
insb
pop
jae
inc
pop
pop
adc
punpckhwd
mov
std
cwtl
xor
or
xchg
add
fcoml
aaa
fstl
pusha
cwtl
and
in
aam
pop
into
mov
arpl
jne
or
cmp
adc
test
repz
cmp
sub
in
adc
push
jle
sub
ja
test
cmp
imul
push
cli
xchg
fmull
mov
rorl
arpl
push
fnstsw
dec
add
in
mov
sub
out
sar
jle
or
add
int3
jl
cld
jne
testb
test
push
sbb
xchg
cmpsl
fmull
push
rcl
fwait
imul
imul
out
sub
ret
std
adc
jbe
ret
shll
mov
xchg
jnp
andb
inc
jecxz
xchg
xchg
leave
adc
jns
andb
dec
fdivr
clc
icebp
lds
leave
and
out
or
mov
sbb
mov
mov
jmp
hlt
lock
stos
xor
dec
mov
and
lods
xor
add
nop
test
lahf
sub
and
or
js
sahf
loopne
jnp
cmovbe
and
inc
lods
push
pop
inc
inc
or
mov
aaa
cmpsb
dec
andl
push
jge
repz
sub
das
mov
mov
and
lock
pop
mov
rorl
data16
mov
addr16
repz
std
shlb
cld
pop
mov
mov
iret
jne
pop
repnz
lods
cmp
add
cmp
cmp
sbb
ret
push
jl
sti
ficomps
and
xlat
shrb
add
lret
rcrl
lret
jnp
test
jg
sub
pop
imul
mov
ss
sahf
aam
dec
stc
xor
lahf
jno
les
insl
cld
test
jl
or
and
insb
outsb
addr16
sub
xor
imul
jae
and
mov
lock
stos
jg
fcoml
and
and
imul
pop
mov
test
lcall
mov
ret
or
pop
jne
and
mov
insl
add
xchg
push
pusha
sub
sbb
xlat
xchg
push
mov
mov
lock
jne
adc
dec
dec
test
mov
pop
test
stos
pusha
mov
int
inc
mov
ror
push
xor
negb
dec
xchg
ss
lock
mov
je
mov
bound
xchg
loopne
adc
xchg
imul
shlb
sbb
rorb
movsb
dec
arpl
addr16
test
mov
lret
and
scas
sub
cmp
lods
xchg
ss
insl
dec
cmpsb
lret
push
jnp
inc
cmpsl
leave
repz
mov
xor
enter
dec
lods
test
xchg
ret
repz
in
dec
imul
imul
add
dec
or
ja
arpl
test
cmpsl
pop
pop
inc
cmp
lcall
fdivs
cmp
fimuls
into
dec
and
xor
out
mov
loope
sahf
mov
adc
aam
pop
mov
push
add
shll
mov
in
or
dec
sarl
mov
pusha
push
push
es
pop
or
adc
mov
shlb
hlt
cmpsl
je
setg
push
out
out
and
inc
inc
popf
sub
popa
scas
andb
pop
arpl
sbb
mov
enter
les
lods
xchg
mov
lret
out
lahf
in
out
cmpsl
mov
test
ja
xor
out
xor
adc
daa
push
pop
and
xorl
xchg
cmp
popf
mov
out
in
adc
adc
mov
imul
inc
insl
mov
jecxz
xor
adc
es
fcomp
push
push
xchg
fistpll
and
xchg
imul
or
pop
push
and
mov
and
out
cmpsl
test
add
test
dec
aam
push
ljmp
test
iret
or
ss
xchg
popf
push
jb
aam
stos
mov
stos
cmp
add
jno
xchg
xchg
lock
xchg
mov
jmp
xchg
pop
test
push
movsb
cmpb
in
cmp
and
test
outsb
cmpsl
push
mov
xlat
sbb
pop
movsl
pop
sti
outsl
inc
sbb
xor
in
in
imul
aaa
mov
call
fildll
xor
int
dec
test
pop
push
enter
mov
pop
or
aad
movb
pop
sbb
stos
and
pusha
outsb
ds
add
add
mov
xor
mov
pusha
mov
cmpsb
mov
add
pop
jmp
inc
popa
lret
lock
jns
sahf
int3
jbe
ret
push
test
pushf
mov
cmpsl
sub
mov
gs
clc
aad
xchg
adc
repnz
mov
mov
mov
inc
mov
add
cmpsl
jae
fists
repz
dec
popa
test
iret
je
jno
mov
add
push
aam
dec
jge
mov
push
rolb
push
jne
mov
adc
stos
bswap
cmp
movsl
leave
addr16
mov
xchg
add
bound
leave
cltd
sub
addb
cwtl
dec
scas
adc
std
pop
cs
xor
jbe
xor
inc
incb
ja
in
and
cmp
mov
add
stos
or
or
aaa
sub
mov
mov
jne
loopne
jo
into
nop
aas
fists
push
mov
daa
shr
mov
pop
xchg
gs
push
mov
push
mov
mov
mov
jmp
daa
dec
mov
not
xor
adc
mov
pop
out
and
test
push
xor
lahf
xor
sti
jo
sub
push
das
jle
ds
xchg
test
mov
inc
imull
xor
fdivl
push
pop
lods
lds
inc
adc
inc
in
jl
sbb
fsubl
push
imul
pop
and
mov
sahf
xchg
sbb
sti
jmp
cwtl
sti
xchg
test
jb
sbbl
mov
jns
repz
xlat
inc
add
gs
stc
mov
lahf
jno
in
adc
data16
push
fdivrs
ret
sub
cmpsl
cmp
or
or
pop
xchg
jecxz
data16
lret
psllw
jnp
jle
push
inc
pop
dec
or
mov
mov
fdivs
push
jmp
jnp
cwtl
js
ret
rcll
jbe
mov
gs
iret
mov
shlb
loope
sbb
rcr
sub
sti
imul
adc
xor
push
adc
insb
mov
dec
xchg
jb
rclb
cli
int
xor
or
scas
inc
cmc
jg
mov
cmpsb
lret
jnp
cmc
or
popf
les
clc
and
faddl
filds
popf
and
xchg
icebp
mov
jmp
pop
jl
scas
push
iret
into
push
imul
push
scas
mov
ds
jo
xchg
loop
mov
repz
fwait
jae
sbb
or
test
int3
push
int
sub
out
cmpsl
sub
or
lahf
arpl
xor
divl
sub
shrb
mov
jo
xchg
test
test
mov
pushf
fcmovbe
lret
mov
or
out
mov
and
pop
cmp
test
mov
and
insl
sbb
mov
jecxz
fdivl
enter
bound
sbb
lcall
cmp
fstpl
repz
test
add
fdiv
push
add
jge
cmp
in
vminsd
rcrl
pop
mov
sub
stc
add
in
ja
mov
out
mov
insb
mov
ret
mov
xchg
mov
add
ds
inc
sub
shlb
mov
mov
push
test
aam
movsb
mov
cmp
xor
loopne
loopne
pop
je
mov
or
mov
xor
out
stos
in
pop
inc
pop
int
test
and
and
test
ret
xor
or
xlat
inc
dec
cs
test
mov
sub
xchg
jae
popa
mov
pop
aas
pop
pushf
pop
inc
pop
mov
and
mov
pop
jp
jp
push
imulb
stos
enter
push
cmpsb
aaa
arpl
bound
jg
outsb
mov
in
lods
xor
sbb
pop
xor
or
ret
add
or
loop
jns
push
and
push
test
test
int
lods
jbe
inc
pop
std
jmp
out
pop
cli
jbe
ret
mov
insb
adc
pop
fwait
xchg
fnsave
sub
mov
cmc
xchg
orb
xchg
and
xor
jp
pop
add
jmp
pop
add
xchg
lret
xor
mov
hlt
dec
cli
icebp
pop
fxch
mov
cmp
push
ja
or
push
adc
pop
loop
rclb
push
add
bound
jnp
xchg
cmp
stos
mov
inc
loope
out
aas
addr16
pop
pop
sub
repz
jno
xor
aaa
ret
dec
loop
mov
mov
fnstenv
cmp
les
insl
out
loop
jno
testl
jge
xlat
push
sahf
xor
lahf
outsl
push
sbb
mov
sbb
push
in
sbbb
cmp
loop
mov
and
adc
int3
lret
sbb
sbb
mov
imul
and
dec
mov
mov
dec
xchg
mov
mov
data16
xchg
frstor
lea
fxch
pop
aaa
mov
add
push
add
push
popa
xchg
test
shll
jnp
in
out
pop
leave
pop
fldl
insl
sub
push
in
mov
cmc
fprem1
push
dec
mov
loopne
sbb
pop
stos
popf
inc
orl
dec
mov
or
dec
jne
hlt
inc
cmp
outsl
mov
pushf
imul
movsl
std
lret
roll
mov
jbe
out
das
push
es
test
ja
add
dec
fs
in
into
mov
cmp
cmc
fnstcw
data16
add
dec
jle
pop
push
xchg
iret
mov
pushl
fdivrs
test
sub
push
ror
cmc
test
sbb
cmp
xor
nop
fmull
xchg
push
gs
dec
jae
mov
stc
or
std
sbb
mov
jg
ja
pop
cmp
mov
scas
ja
add
jl
add
add
in
movsl
dec
inc
mov
sbb
mov
cmp
dec
lcall
test
sbb
stos
cmpsb
out
ret
xor
xor
fistps
notb
or
pop
xor
pop
dec
fists
dec
lret
mov
dec
shll
sub
loop
mov
call
loop
sub
jg
pushf
bound
jne
bound
adc
push
mov
sbb
xchg
imul
sbb
daa
movsb
mov
mov
mov
inc
dec
mov
mov
cli
pop
add
and
add
ljmp
clc
or
adc
or
repnz
dec
cltd
shl
dec
mov
ret
mov
into
dec
daa
mov
clc
push
out
test
push
mov
cmpsb
dec
loopne
or
mov
push
inc
mov
jbe
insl
loope
push
nop
sbb
jno
ljmp
dec
xchg
add
pop
sahf
pop
ss
xchg
std
movsl
dec
pop
pop
loopne
pop
cltd
setno
mov
inc
test
jnp
stos
dec
fisttpll
xchg
pop
pop
icebp
test
push
push
sbb
mov
imul
sti
xchg
and
test
ja
cmp
int
inc
xor
push
stc
ljmp
mov
pop
idivb
inc
push
in
sbb
imul
rclb
cld
loope
out
inc
cmp
push
cmpsl
pop
push
lahf
xorl
pop
inc
out
cltd
adc
lods
repnz
xor
xor
flds
cmp
sub
out
ja
mov
fnstenv
or
dec
movsb
int3
fimull
icebp
ret
xor
sar
cmpsl
add
mov
jae
popa
fmull
sbb
adc
inc
std
jae
mov
jb
loope
mov
stc
push
and
test
fs
pop
inc
imul
push
fisubrl
xchg
pop
adc
pop
pop
push
arpl
dec
fisttpl
lods
jne
push
fiaddl
das
mov
scas
js
in
mov
movl
jb
ljmp
clc
lcall
in
adc
xchg
add
xchg
dec
and
leave
imul
cmpsl
push
cmpsl
mov
outsl
pop
dec
mov
xchg
lods
fdivrs
xchg
loope
aas
inc
and
inc
ja
fldl
add
insb
mov
repnz
pop
pop
mov
clc
shrl
sbb
push
fildl
aad
push
xchg
loope
sub
sub
jge
das
pop
int
lea
sti
pop
mov
andb
dec
iret
test
das
cmp
dec
fcmove
adc
jecxz
or
bound
cltd
push
and
lods
mov
jmp
xchg
test
xchg
or
out
ret
xor
sti
shlb
mov
jle
inc
call
cmc
loop
bound
lds
sub
ficoms
xor
push
or
mov
push
je
mov
and
arpl
or
lea
out
fcmovne
cmpsb
out
lds
nop
mov
pop
jl
scas
push
xor
mov
out
aad
pop
push
pop
xor
pop
and
movsb
rolb
sub
add
call
mov
lock
jmp
adc
and
fimull
xrelease
xor
jecxz
add
dec
loopne
and
lahf
pop
rcll
mov
in
test
sahf
pop
mov
mov
mov
out
mov
adc
and
ret
jno
icebp
pop
cli
shll
jns
sti
xor
jns
ret
adc
xor
test
dec
jg
nop
insl
in
inc
push
adc
lret
inc
cmpsl
sbb
and
fadds
add
pop
test
aaa
dec
pop
xor
jmp
mov
bound
scas
test
into
popf
lds
mov
jle
icebp
popa
mov
ret
sbb
cmp
xchg
lret
xor
lods
mov
fcmovnu
rclb
mov
sti
xchg
stc
pop
mov
repnz
mov
clc
pop
fimuls
mov
test
mov
jo
aam
push
rcl
ret
pop
ss
fcomip
sub
cmpsl
or
jge
inc
addr16
adc
and
fadd
inc
jo
cmp
sub
adc
sbb
rcr
jecxz
pop
pop
or
jo
out
setl
notl
mov
fistps
in
add
or
jns
lret
leave
xor
fcmovb
push
scas
xor
push
sub
sarl
scas
jl
push
xor
and
adc
cld
add
sbb
jp
xor
loop
xchg
imul
js
pop
push
loop
sbb
shll
int
mov
xor
sti
aad
call
cmpsl
pop
repz
lret
dec
and
xor
push
scas
dec
sbb
cmp
negb
adc
mov
and
push
data16
jo
shrl
adc
xchg
cwtl
ja
pop
les
jae
roll
pop
maxps
cs
std
insl
stos
outsb
inc
lret
enter
out
push
iret
fists
int3
shll
dec
xchg
add
outsb
jle
mov
jmp
xchg
addr16
pop
mov
jl
stos
mov
std
shll
inc
outsb
cmp
inc
testl
mov
fsubr
js
gs
outsb
pop
xchg
add
sbb
iret
dec
cmp
lret
scas
dec
sbb
or
scas
jmp
xchg
xchg
jbe
nop
lsl
mov
push
aam
sahf
pop
adc
or
mov
jl
xchg
and
sub
adc
jno
push
inc
xor
sarl
push
cmp
jge
inc
cli
cmpsb
add
test
and
xchg
aad
clc
add
pop
jge
insl
leave
mov
sbb
test
pop
loope
mov
adc
adcb
movsb
mov
jge
int3
cmc
mov
test
lret
cmpsb
mov
mov
mov
ret
cmpsb
adc
jl
jnp
pop
loopne
les
sbb
addr16
sarb
mov
and
mov
add
pop
leave
xchg
pop
out
rorl
or
ss
lcall
test
mov
popa
arpl
shrl
lret
stc
push
pop
lds
jg
mov
and
pop
ja
push
rcr
xchg
dec
pop
inc
scas
aam
dec
pop
sbb
gs
cmp
sub
js
inc
lahf
iret
dec
xor
push
jp
sub
and
loop
mov
push
push
loop
or
inc
jne
push
xchg
mov
pop
mov
cwtl
adc
sbb
xchg
lret
sub
loop
cmp
lret
pop
adc
mov
sub
scas
out
out
imul
stc
mov
imul
iret
addl
cmp
in
sub
jbe
dec
and
test
inc
mov
adc
dec
adc
or
mov
and
out
int
mov
lds
or
gs
push
leave
out
jmp
imul
pop
cmp
add
push
enter
sub
jp
lcall
in
movlps
test
add
xchg
leave
mov
rcl
jle
jp
mov
std
aad
movsl
repz
test
or
add
test
aad
ret
xchg
mov
outsb
inc
int3
adc
pop
enter
mov
mov
push
adc
movsb
sbb
mov
nop
cli
cmc
inc
es
fucomi
lock
outsb
fstpt
xchg
mov
imul
shrb
jnp
lea
in
lods
lds
ret
repnz
push
and
dec
mov
aam
imul
out
xchg
xor
dec
dec
dec
mov
out
sbb
insb
push
imul
mov
mov
daa
pop
shrb
jmp
js
pushl
add
test
mov
ss
xchg
sbb
add
mov
es
jle
pop
inc
cmp
cmp
repz
das
popa
add
loop
loop
xlat
pop
push
mov
mov
push
pop
push
repz
cmp
repnz
shl
popf
mov
xchg
jns
lcall
xchg
test
cmp
mov
adc
and
loop
ror
sbb
mov
push
mov
stos
int3
sbb
fsubrs
test
pop
sbb
mov
lock
sbb
mov
mov
adcb
jp
and
hlt
outsb
notl
pop
es
rcl
mov
subb
xchg
cmpsl
jge
jecxz
pop
scas
std
clc
xor
mov
inc
mov
mov
aaa
mov
std
inc
jl
jle
jbe
cmpsb
jne
add
or
xor
xchg
clc
cmp
dec
loope
lods
inc
sbb
xchg
rcll
sbb
aaa
jnp
pop
insb
aas
test
sarl
add
add
pop
aam
pushf
sub
jle
xchg
cmp
sub
out
jne
outsb
dec
cwtl
sub
sahf
jae
rcrl
add
jg
fdivr
adc
jbe
mov
or
fdivl
jp
fldl
in
test
icebp
push
addl
pop
int3
jle
mov
xchg
fidivl
sarb
popf
xchg
sub
leave
push
add
and
in
mov
add
dec
dec
sbb
es
cwtl
inc
push
sarl
lret
nop
fiadds
js
pushf
inc
out
add
ss
jmp
cmp
out
add
cli
inc
cwtl
jb
outsb
sbb
sub
push
mov
out
scas
mov
cmpsb
ss
sahf
int
bts
loop
test
mov
daa
xchg
sarl
mov
or
mov
stos
jp
sbb
addr16
mov
cltd
ja
and
cmp
aad
or
sbb
ret
push
addr16
xor
int3
inc
dec
push
adc
mov
lret
repz
movsl
ja
popf
test
sbb
std
push
or
fcmove
xchg
repnz
push
imull
pop
cli
mov
push
aaa
inc
insb
mov
push
jb
imul
jg
jg
and
lahf
ljmp
jmp
mov
fidivs
in
sbb
mov
call
jno
ret
test
ja
das
cmpsl
pop
mov
mov
adc
mov
aad
lods
dec
and
stc
inc
dec
mov
loope
cmpsl
fsubs
adc
sub
repnz
test
mov
dec
clc
cmp
jl
xchg
nop
popa
lret
aas
lock
mov
arpl
sub
sbb
inc
push
shlb
leave
cli
test
cmpsb
les
gs
ss
pop
xchg
leave
jmp
xor
cmpl
inc
mov
mov
xchg
fdivrs
jmp
hlt
fidivrs
and
int3
lods
stos
jg
dec
xor
or
sbbb
jp
lods
mov
cmpl
in
shlb
xchg
add
sbb
sub
shr
arpl
cmc
dec
push
push
jb
sub
arpl
rorl
xchg
xchg
shrl
jmp
fwait
test
lahf
dec
xor
jl
cwtl
daa
mov
cmp
sub
cmpsb
out
in
dec
out
data16
mov
shrb
test
xchg
in
xlat
inc
inc
jecxz
ss
dec
xor
push
mov
cld
jge
jae
fnsave
xchg
jecxz
int3
and
and
jb
adc
sbb
in
outsl
testl
call
push
test
pop
cltd
les
adc
jns
dec
sbb
je
inc
jns
enter
or
into
das
bound
dec
jb
inc
sub
cltd
sbb
lds
or
xchg
and
mov
inc
mov
sub
in
jp
je
dec
xor
lret
lods
lock
and
jne
mov
push
adc
les
push
lahf
cmp
dec
xor
ret
dec
pop
sub
xlat
in
out
inc
lret
push
xchg
repz
push
sbb
sub
xor
decb
cmpsb
mov
pop
lock
jnp
ss
and
lret
inc
loopne
dec
shlb
or
pop
mov
idivb
repnz
ret
inc
das
jp
mov
pop
fwait
incb
sbb
cmp
ret
adc
pop
loope
inc
ss
cltd
or
sub
fiaddl
mov
enter
rorb
outsb
js
mov
loop
ja
mov
or
pop
fldl
cmp
dec
imulb
jl
or
stos
jnp
pop
pop
pop
loopne
test
pop
push
stos
ud1
xchg
xor
andl
sbb
ljmp
xor
mov
cli
push
sub
stos
mov
sahf
addb
adc
lcall
lods
mov
mov
mov
into
xchg
sub
fwait
xchg
dec
inc
inc
cmp
xchg
add
pusha
or
out
push
xchg
fwait
push
mov
push
jno
sbb
add
lods
sarl
arpl
and
iret
pop
mov
xchg
jne
mov
cmp
cs
test
in
sub
paddw
or
or
and
test
mov
insb
mov
outsb
aam
cwtl
js
or
dec
mov
je
ret
aam
fadds
sbb
loop
cmp
cmpsb
stos
add
aam
jns
or
adc
inc
mov
mov
jo
lret
pop
fisubl
insl
movsb
dec
out
push
push
clc
call
roll
cld
jmp
fsubr
out
hlt
loope
mov
or
add
mov
leave
imul
cmpsb
pop
cwtl
jo
mov
jecxz
loope
ds
call
test
in
test
push
adc
in
stos
sub
xorb
and
outsb
mov
in
mov
sub
movsb
lock
fimuls
xor
jp
dec
int3
cmpb
cwtl
mov
inc
mov
mov
push
dec
sahf
cltd
xor
add
push
in
sub
add
jno
out
mov
stc
rcrl
cmpl
push
sti
mov
test
sub
dec
mov
pop
push
pop
movsb
adc
jnp
mov
lds
mov
out
imul
jp
and
xor
sbb
lods
cmp
jns
and
orl
outsb
out
lods
mov
fst
and
or
mov
sti
aam
xor
aaa
sub
mov
pop
sub
sub
jno
or
lcall
lcall
and
inc
lret
sbb
leave
fisubl
cltd
jbe
or
loop
inc
lods
jno
rorb
inc
cmp
or
shr
test
mov
add
mov
xor
fidivs
in
cwtl
das
daa
xchg
std
inc
call
sbb
and
das
loop
sub
scas
test
pop
bound
push
out
lea
lods
pop
xorl
popa
jnp
packsswb
pop
inc
mull
outsb
jnp
sub
mov
and
xchg
pop
jmp
and
xchg
or
ja
test
inc
pop
lret
sarb
repnz
lahf
cmp
jae
rolb
mov
rorb
jns
pop
ror
jmp
in
fdivs
pcmpgtw
mov
dec
or
mov
fdivrl
cmp
fdivl
fs
je
addr16
add
inc
cld
sub
movsl
fstps
movsl
fnstsw
xor
fwait
mov
pop
pushf
xor
jo,pt
outsb
lahf
stos
notl
adc
dec
cltd
inc
ds
xlat
scas
lcall
sub
pop
mov
jl,pn
sbb
cli
cmp
cs
out
fs
mov
dec
cwtl
add
pop
add
jo
dec
cmp
push
pop
mov
inc
or
lea
push
jg
dec
push
stos
test
lret
push
jnp
popf
bound
or
jp
mov
mov
dec
stos
dec
stc
jp
xor
sub
cmpsl
in
or
mov
mov
test
pop
jge
out
add
sbb
xor
fucomi
push
jge
pop
hlt
aaa
sahf
jne
xchg
push
clc
imul
cwtl
add
mov
dec
or
fs
dec
jne
push
jp
adc
jg
mov
adc
cld
sti
out
les
and
imul
jo
jb
movsl
mov
cs
rcll
shrb
jo
pusha
mov
pop
mov
mov
hlt
push
enter
pop
call
cmp
cltd
cmp
pop
or
out
and
int3
mov
sbb
dec
movsb
pop
dec
mov
and
lock
or
loopne
mov
adcb
rcrb
shr
pop
dec
inc
push
in
cmp
or
sub
lods
ret
mov
outsb
outsl
mov
mov
or
scas
pop
test
in
mov
loop,pn
inc
shl
aam
lds
addb
ss
into
add
in
cwtl
cwtl
cltd
mov
mov
xor
push
outsl
jbe
cmp
out
jl
lods
jns
call
nop
push
adc
aam
push
xchg
xchg
arpl
sbb
in
lods
imul
jne
lret
shrl
adc
xchg
rcl
lcall
mov
lods
imul
push
ficomps
aaa
inc
addl
pop
and
or
sbb
or
sti
jl
repnz
dec
jnp
adc
mov
cmp
xchg
mov
push
mov
aaa
pop
out
jmp
sti
std
xchg
into
jb
call
and
xlat
lea
out
rclb
dec
inc
inc
jecxz
sti
outsb
out
scas
cwtl
adc
dec
mov
lahf
pop
mov
enter
push
xchg
insl
adc
mov
aam
cmp
cmp
adc
repnz
sub
adc
adc
pop
inc
mov
cld
mov
pop
idivb
xor
mov
jl
dec
data16
add
notb
jg
cwtl
rorl
clc
mov
iret
jno
sbb
in
in
dec
push
xor
sub
in
cs
xor
jmp
hlt
insl
cmp
cltd
xchg
aad
jnp
jmp
add
ljmp
pop
mov
pop
pop
xchg
int3
stos
hlt
or
sub
nop
pusha
mov
gs
pop
call
lods
outsb
adc
push
mov
jnp
push
je
lods
adc
shr
in
imul
gs
dec
inc
and
mov
jle
pop
push
sbb
mov
outsl
cmp
je
ss
pop
push
ds
icebp
adc
out
cs
dec
xchg
sbb
popf
sub
xlat
mov
stc
push
pop
and
cli
sub
popa
aas
mov
cs
rcl
stc
jno
mov
cmp
arpl
jl
xchg
pop
pop
or
fsts
pop
int3
pop
cmpsb
jp
or
jbe
xchg
movsl
test
push
fcomi
in
sbb
loop
push
dec
xchg
outsb
sub
int
mov
xor
cmp
movsb
and
in
mov
xchg
jne
push
push
lret
cmovno
movsb
aas
adc
push
ss
push
push
fisubrs
pop
mov
icebp
fstps
pop
ret
cmp
mov
aad
jo
xlat
cltd
int3
and
xor
fdivrs
xchg
imul
out
arpl
pop
push
mov
pop
mov
push
mov
aas
add
in
movsl
dec
imulb
in
mov
lock
inc
mov
xchg
icebp
clc
fs
subl
cli
jge
loopne
mov
aad
int3
pop
jl
and
notl
xor
into
sub
sub
repnz
ss
aas
dec
pusha
bound
out
cltd
push
xor
pop
xor
int
fnstsw
cltd
nop
aas
mov
sub
lcall
jge
dec
pop
inc
push
xchg
into
push
and
shlb
sbb
or
clc
and
push
mov
ss
lcall
pop
rcr
movsl
and
cwtl
adc
jg
jle
ljmp
push
push
jg
jb
push
fistpll
int
xchg
push
adcl
pop
lahf
dec
mov
add
add
xchg
jecxz
mov
in
filds
jb
insl
testl
loopne
dec
test
loope
in
mov
mov
dec
xchg
cs
rcl
xor
mov
xchg
filds
or
pushf
imull
pop
add
jnp
dec
mov
push
dec
mov
jg
xchg
sbbl
sub
lods
push
add
sub
cmc
dec
cmc
out
adcl
aam
imul
movsb
sti
cltd
clc
iret
and
adc
or
mov
repz
mov
gs
jmp
adc
scas
je
mov
and
imul
fucomip
mov
cwtl
xchg
add
cmp
and
incb
cs
dec
popa
jne
push
sbb
aam
sbb
push
and
test
mov
xor
lock
rcr
add
jecxz
pushf
shll
cltd
fstl
xor
mov
out
mov
mov
leave
adc
cmp
mov
aam
mov
cld
das
dec
outsb
xchg
pop
inc
es
and
dec
xchg
lahf
add
pop
out
imul
stos
or
call
mov
lock
mov
xchg
mov
movsl
adc
aad
insl
dec
cli
jnp
inc
adc
or
push
les
sbb
sbb
sub
cmc
int3
fists
stc
cmp
xchg
xchg
aaa
dec
cmp
push
push
mov
mov
jecxz
mov
add
push
fisubs
lcall
iret
mov
pop
pop
pop
daa
loope
js
fsubl
shll
mov
sub
sub
imul
loopne
bound
and
push
rclb
das
push
or
add
lret
scas
mov
fs
xor
lahf
cmp
repz
test
cltd
xor
mov
mov
loopne
rclb
mov
adc
mov
fs
inc
dec
js
data16
inc
lods
xchg
jb
push
aaa
push
les
xlat
mov
xchg
jo
shrb
xor
jo
pushf
cmp
fidivrl
cmpsl
push
fimull
ja
inc
out
jle
in
sti
mov
dec
add
and
fisttps
push
jp
shr
fildll
cmp
addr16
push
dec
mov
call
lcall
pusha
ds
and
mov
adc
mov
pop
push
mov
pushf
fildl
xor
hlt
fidivl
add
cmp
repnz
or
lret
xchg
lock
sbb
jne
pop
lahf
and
sbb
adc
lods
sbb
imulb
and
in
je
fisttpll
jb
loope
push
movsb
ret
xor
cmp
into
and
adc
mov
sbb
addr16
mov
inc
xor
push
xchg
je
jo
orb
jecxz
repnz
push
adc
xchg
js
unpcklps
or
cmp
dec
stos
fwait
pop
push
pop
mov
jg
inc
loopne
xor
cwtl
ret
dec
cmp
xor
ja
or
pop
jecxz
lcall
loope
aad
adc
adc
cwtl
enter
inc
outsb
test
dec
ret
adc
add
insb
jb
or
cmpsb
jbe
lcall
test
iret
jne
repnz
fsub
mov
mov
pop
add
pop
pop
jl
xor
dec
jp
scas
adc
ss
push
movsb
cmp
in
push
shl
xor
fsubrp
aad
stos
lods
jns
ror
mov
pop
int3
adc
xor
add
dec
aas
and
sub
iret
xor
rorb
jne
inc
jbe
dec
pop
dec
or
jmp
addr16
sub
or
fisubrs
cmpsl
daa
pop
sbb
cmp
or
orl
dec
pop
lock
lods
lods
bound
sbb
loopne
cmp
jmp
les
nop
inc
mov
pop
or
ja
std
push
add
inc
add
push
push
push
add
adc
push
cmpsb
andl
shr
sub
bound
dec
pop
xchg
ds
push
xchg
incb
xor
fucomp
lret
dec
loopne
xchg
lods
xor
pop
mov
cltd
mov
jmp
stos
mov
mov
mov
mov
inc
cs
shl
insb
outsl
out
cltd
push
pminsw
mov
in
subl
jae
dec
adc
push
push
cld
mov
lods
cmpsb
inc
or
stc
lds
dec
xor
push
xchg
mov
movsl
adc
xchg
sub
push
jns
rcrl
scas
jno
mov
pop
shrb
inc
sub
imul
add
out
push
cltd
mov
call
fisttpll
cwtl
xbegin
jne
inc
and
hlt
lahf
into
clc
sbbb
sub
sub
push
cmp
inc
fbld
in
adc
imul
xchg
adc
lock
mov
ljmp
movsb
outsl
inc
inc
jg
iret
lahf
dec
jecxz
idivl
mov
xchg
xor
push
mov
push
xchg
cld
fnstsw
sbb
lock
je
jo
push
movsl
jae
stos
es
pop
test
push
push
fs
or
les
add
jle
ret
jg
mov
cli
or
jne
test
rcrb
pop
loope
shrl
jp
push
pop
out
mov
movsl
push
cmp
pop
push
mov
dec
mov
jae
bound
jecxz,pn
hlt
mov
and
mov
gs
sub
cmp
fildll
sti
and
sbb
aas
xor
mov
jnp
xor
ljmp
popa
test
enter
jp
fndisi(8087
mov
arpl
dec
pop
sbb
cmpsb
sti
int3
jb
cmp
sub
mov
and
xlat
ljmp
out
insb
andl
insl
aas
sahf
sbb
jbe
nop
or
loop
fwait
or
mov
imul
adc
divb
ret
cmpsb
cmp
adc
cmp
sbb
stc
call
or
pop
add
je
xchg
ret
lods
cmp
push
test
enter
push
lds
enter
push
pop
and
mov
test
pop
cmp
mov
pop
push
mov
and
pop
sbb
sbb
cli
pushf
cli
call
add
push
sub
es
insl
sub
mov
or
sbb
inc
dec
call
outsb
cld
aad
push
jae
cmp
test
cmp
inc
imul
leave
xchg
hlt
xor
push
int
pop
movsl
in
sub
fbstp
sbb
push
out
test
dec
add
cmpsl
cmpsb
inc
pusha
pusha
or
sti
scas
add
add
test
push
jns
ret
rcl
sub
push
lea
lds
or
mov
ret
inc
cmpsb
in
in
mov
imul
adc
popf
pop
or
syscall
mov
xchg
mov
and
jns
cmp
ret
sbb
push
sti
popa
or
call
push
pop
addr16
sub
ret
xlat
add
mov
xor
or
mov
int3
es
cmpb
jb
adc
xsha1
cmpsb
dec
pop
pop
xchg
adc
bound
repz
inc
cmp
jecxz
dec
cmp
imul
addb
pusha
cli
jns
lcall
jp
push
mov
arpl
cs
add
mov
xor
jae
daa
inc
outsl
orb
dec
fbstp
imul
xchg
mov
mov
xchg
out
out
daa
lahf
lods
push
int3
or
jp
xor
imul
mov
out
mov
aaa
lods
push
je
mov
popf
mov
inc
ret
in
xor
loopne
mov
test
pop
addl
pushf
sahf
and
shlb
daa
mov
mov
and
push
xchg
inc
jb
sbbb
fstl
out
or
sbbb
in
sub
into
outsl
clc
ja
dec
lahf
push
pusha
jbe
adc
pop
clc
xor
lods
adc
in
jb
push
lds
adc
push
aaa
out
mov
xlat
jge
test
or
cwtl
lret
insl
pop
insb
je
push
dec
xchg
push
mov
sbb
imul
out
into
jae
imul
test
ljmp
stc
inc
jecxz
dec
sub
xor
mov
cltd
aaa
mov
pop
test
dec
shll
push
je
int3
in
adc
cmp
cmp
push
adc
out
test
xchg
push
inc
dec
dec
and
gs
insb
repnz
fildl
adc
sbb
sbb
dec
cmpsl
xor
fnsave
or
fbstp
sbb
in
aas
inc
in
push
jno
ret
pushf
push
in
sbb
push
mov
cwtl
xchg
stos
mov
aad
sub
fnstenv
or
es
add
sbb
pop
sbb
lret
jecxz
nop
dec
jmp
ret
test
daa
and
mov
out
cmp
dec
lahf
cmpsb
xor
dec
mov
sbb
dec
test
xchg
mov
jp
push
fwait
inc
fld1
sar
clc
xchg
mov
lods
push
jg
adc
mov
mov
int
jmp
pop
dec
xor
xor
inc
rclb
mov
pop
and
push
jge
into
ja
movsb
mov
dec
test
push
mov
and
fsubrl
cltd
mov
xor
lea
xor
ljmp
push
pop
roll
inc
fldcw
mov
cmp
arpl
xor
addl
fdivrs
dec
das
add
inc
jnp
jl
xor
cwtl
jecxz
xchg
xchg
pop
xchg
sub
adc
and
dec
push
dec
pop
lods
mov
inc
jbe
mov
adc
outsl
xor
and
adc
xchg
stc
xchg
ficomps
clc
xchg
divl
test
daa
ja
divl
leave
pop
cmpsl
imul
push
cltd
shl
pushl
push
rcrl
jecxz
inc
mov
mov
xchg
lret
popa
sbb
rorl
shrb
mov
jle
aad
jns
arpl
scas
aaa
jmp
fstpt
icebp
shr
xchg
pop
mov
mov
inc
pop
stos
xchg
xchg
fsubl
rol
or
imul
adc
inc
pop
xor
nop
mov
cmp
pop
rorl
adc
movsb
mov
stos
cmc
pop
lret
loop
call
dec
push
in
inc
or
push
dec
push
aad
pop
sub
xchg
and
xor
sub
lock
sub
and
arpl
mov
add
sub
pop
inc
lock
movsb
lds
lahf
and
inc
lahf
call
push
xchg
add
cmp
push
push
mov
inc
jo
fnstcw
rcll
mov
in
mov
pop
jo
outsl
rcrl
mov
jl
sahf
pop
xchg
jmp
and
cmp
or
inc
jb
jecxz
testb
int
and
fcmovbe
mov
push
jo
scas
adc
xorl
ds
mov
loop
push
popf
sti
dec
mov
xorl
out
inc
lret
adc
shlb
inc
shlb
add
jae
cwtl
daa
cld
push
pop
ja
pop
scas
mov
mov
xlat
outsl
ljmp
cwtl
add
cmp
mov
ja
mov
scas
fcomps
pop
cmc
mov
push
jmp
cmc
cmpsb
cmp
test
push
addr16
cmp
je
or
rol
rcrl
rolb
rorb
xchg
xor
and
bound
and
scas
roll
and
movsb
imul
pop
mov
out
dec
lahf
addr16
lret
cmp
lret
enter
movsb
push
fincstp
lds
and
push
dec
xor
rcrl
imul
adc
cs
cli
sbb
or
repz
scas
enter
into
push
add
dec
push
sbb
lea
cmp
cltd
mov
push
sbb
test
loopne
arpl
cmpsb
push
fsubrl
mov
push
push
jmp
jecxz
and
push
in
out
mov
xlat
adcl
mull
stc
fldcw
dec
cmp
inc
push
jnp
xor
loopne
sub
sarb
mov
mov
xorb
outsl
cmp
movsb
aam
loopew
jg
fwait
pushf
dec
rorl
shlb
test
pop
movsb
inc
push
xor
dec
dec
rcll
dec
ja
subb
fcoms
scas
adc
insl
mov
pop
aam
pusha
pusha
pop
or
push
inc
xor
push
loopne
ret
xor
cmc
ljmp
xor
xlat
push
lret
arpl
fisttps
and
pop
jne
data16
hlt
es
sub
loop
movsl
insl
mov
pop
rcrl
test
repnz
fisttpl
hlt
or
lret
repz
pop
shrb
mov
gs
out
cmc
push
pop
xchg
sbb
scas
repnz
fs
mov
test
les
adc
loopne
and
xor
lret
mov
stos
inc
mov
lds
pushf
mov
cwtl
cmp
stos
arpl
xchg
mov
bound
out
mov
mov
add
jns
fcomi
mov
bound
mov
test
sbb
mov
push
adc
test
cltd
movsl
lahf
sarl
xchg
and
xchg
mov
sbb
xor
stc
fldenv
js
mov
push
or
lods
rorb
ds
movsb
dec
hlt
enter
into
fnstsw
xchg
jecxz
and
lock
jp
jae
pop
or
jg
adc
mov
pop
popf
repnz
jmp
ret
xchg
in
pop
cs
fstpl
jns
sbb
mov
fwait
mov
jmp
cli
cwtl
jno
or
out
call
sub
and
inc
mov
jne
das
enter
inc
outsb
dec
dec
pop
imul
inc
or
mov
cmpl
shlb
sub
stos
mov
and
jne
xor
push
and
jne
loop
mov
das
push
mov
sub
push
cmpsb
xchg
call
mov
cmc
insl
mov
inc
out
sbb
push
shlb
repz
fsubl
sub
pop
pop
inc
mov
jae
dec
rorl
int3
sub
daa
dec
jg
adcb
jbe
sbb
jge
fwait
cmpsl
lret
mov
inc
mov
or
and
in
out
sbb
add
fwait
push
jp
imul
lds
std
popf
ja
inc
loop
or
fdivl
mov
cmpsl
or
test
or
cmpsb
pop
sbb
dec
or
inc
in
js
hlt
in
mov
out
dec
mov
xor
mov
xchg
test
lret
sub
test
jo
paddsb
popf
inc
lea
insb
scas
add
stos
shrb
cmpsb
push
lods
push
inc
mov
test
sbb
sti
xchg
or
sbb
and
jl
or
out
mov
dec
inc
popf
iret
negl
inc
push
adc
adc
orb
adc
push
inc
push
out
icebp
pop
fwait
gs
das
cmp
push
cmp
in
add
sub
xor
jno
rclb
outsb
adc
hlt
adc
ljmp
imul
sbb
jnp
xchg
inc
mov
enter
mov
pop
mov
flds
mov
lock
aad
mov
push
pop
cmp
pop
in
das
mov
jle
pop
mov
cmp
add
ret
movsl
jmp
push
xchg
outsl
ds
xor
roll
inc
loopne
adc
inc
push
push
push
lods
mov
ljmp
or
pop
mov
popf
dec
mov
test
clc
aas
push
mov
push
icebp
push
loopne
xchg
clc
stc
popf
dec
add
sub
dec
sbb
jmp
idiv
addl
add
mov
push
inc
add
jbe
push
or
movsl
add
pop
mov
pop
inc
aaa
frstor
dec
mov
jb
push
int3
std
xchg
pop
in
mov
cmp
adc
cmp
movsb
push
js
repz
mov
and
shll
inc
std
icebp
mov
aas
sti
adc
mov
xlat
pop
dec
mov
pop
es
xor
sub
xor
or
ljmp
leave
mov
out
and
scas
add
xchg
mov
or
test
sti
and
mov
sahf
or
add
add
cmp
push
testb
cmp
pop
aam
shrb
jp
bound
lds
js
pop
push
xchg
outsb
cmp
xchg
popa
andb
sub
add
popa
loop
dec
out
arpl
bound
arpl
fs
inc
push
mov
pop
in
sbb
addr16
jae
inc
loop
adc
lods
xor
and
fsub
jnp
loope
pop
sub
pop
test
inc
lods
out
std
inc
call
icebp
xchg
test
inc
test
mov
outsl
nop
push
cmp
jb
fiadds
xchg
les
xchg
scas
mov
dec
push
or
mov
ss
pushl
outsl
jg
add
adc
fsubp
push
movsb
sbb
sbb
push
push
or
dec
adc
loopne
sbb
outsb
scas
jmp
sub
movsl
xchg
or
cmp
cld
and
jns
or
divl
pusha
sbb
shrb
pop
je
or
mov
dec
jp
cld
cmp
mov
jecxz
test
xchg
and
sti
push
mov
sub
mov
jl
fistpll
scas
mov
xchg
outsb
shlb
test
test
cmp
push
cwtl
sbb
dec
fsubs
inc
push
mov
fisubl
dec
icebp
jo
iret
aas
mov
xchg
push
aas
add
mov
mov
inc
je
xchg
aad
fistps
jge
xchg
ret
hlt
daa
fisubrs
push
jle
stos
mov
in
fimull
imul
mov
cmp
or
add
insl
pushf
sub
push
inc
lods
arpl
cltd
pop
outsl
pop
push
lods
cli
add
jae
xchg
les
shlb
call
mov
push
fstpl
out
mov
jmp
mov
inc
fistl
mov
sub
test
jno
jo
adc
jns
xchg
popa
mov
cmpsl
inc
jb
push
jl
lret
lods
clc
test
cltd
lock
cwtl
in
lds
and
mov
adc
arpl
jae
adc
mov
lret
adc
packuswb
scas
sbb
jno
add
insb
mov
fistl
mov
jecxz
push
xchg
inc
outsl
lods
dec
fucomip
push
pop
jecxz
xor
inc
int
and
fs
and
mov
jne
in
dec
mov
scas
popa
ds
lock
push
lea
shrl
mov
push
into
and
int
adc
clc
dec
sahf
cmp
adc
ja
add
pop
dec
mov
sahf
hlt
pop
and
dec
subb
stos
addr16
adc
xor
mov
clc
out
aas
ds
int3
int3
lods
xchg
lds
loopne
jl
arpl
and
ret
push
insb
add
jge
mov
jae
xor
fcompl
imul
ret
clc
mov
imul
jae
pop
outsb
aaa
aas
imul
fcoml
mov
cld
jns
push
out
cmp
dec
rcr
pop
leave
aam
orl
fldt
fsts
repz
jae
iret
or
add
sbb
and
jle
adc
sbb
std
das
xchg
pop
push
jle
ret
push
jge
jnp
addb
ret
loop
sbb
rcl
fisttpl
add
shrb
inc
pop
mov
pop
mov
dec
enter
aad
stos
cmp
jo
sarb
sub
aas
stos
aaa
xchg
jns
and
mov
or
xchg
test
into
pop
dec
dec
negl
xchg
mov
xorb
adc
fsubrl
cmp
mov
xor
xchg
pop
out
jbe
push
decb
stos
push
test
pusha
pop
xor
test
scas
jno
add
mov
test
inc
orb
and
push
or
fisttps
loope
bound
imul
sub
or
jb
stos
fistpll
out
outsb
pop
ds
fdivp
jno
push
pop
and
push
rcr
and
stc
sbb
icebp
icebp
jb
jno
dec
leave
les
data16
xor
inc
push
andl
xchg
sub
push
lret
fcmovb
sub
sub
mull
lods
shll
push
iret
insl
popa
sub
sub
mov
std
mov
jle
or
dec
xchg
fstpl
das
pop
mov
pop
dec
sub
sar
jns
mov
in
lret
fstp
xlat
cs
jle
sub
cmp
dec
in
pop
jo
insl
jo
mov
mov
add
push
push
sub
add
loope
call
rolb
in
scas
push
loop
jae
pushf
test
lret
jecxz
ss
sub
into
mov
pusha
push
pop
and
xchg
and
loop
xor
popa
jns
testb
sti
sub
lret
push
insl
popa
lods
sub
jmp
sub
cmp
imul
or
push
sbb
cld
cmp
mov
pop
lcall
call
pop
jbe
xor
out
or
inc
mov
cmpsb
pop
pop
pop
add
scas
and
outsl
loope
sub
pusha
les
fcmovb
mov
aas
repnz
iret
xchg
push
xchg
or
mov
add
pop
jo
shr
les
pop
add
lcall
xlat
mov
pop
push
sub
imul
push
cmp
aam
or
or
test
popa
lods
imul
push
push
lea
pop
xchg
outsl
into
jbe
outsl
xor
loopne
add
xchg
jb
cmpsl
clc
test
pop
int3
pushf
jne
pop
test
dec
leave
popa
lcall
mov
or
push
jbe
jne
subl
testb
mov
scas
cmp
lods
sarl
push
adc
int
cltd
inc
jg
push
loop
aas
loope
jl
mov
fldcw
out
pop
inc
jne
or
insl
jns
scas
xlat
xchg
std
adc
fldenv
pop
imul
mov
in
fnstenv
inc
fs
and
test
and
mov
in
mov
jbe
add
jg
ret
iret
lock
and
xlat
pop
xor
aas
cmp
push
ja
fisubl
and
out
push
jb
addb
fsqrt
cltd
out
push
call
mov
shrb
out
sub
daa
pop
sbb
stos
xchg
js
rorb
xor
test
jl
ja
fadds
loope
test
jg
mov
sub
insl
jne
or
adc
lcall
or
es
enterw
mov
bound
mov
sub
insl
je
push
dec
movsb
into
xchg
dec
sbb
cmp
sub
das
loopne
in
iret
call
fwait
stc
outsl
mov
sbb
shll
inc
cmp
jl
inc
sub
push
pop
inc
push
imul
mov
jb
cld
mov
popa
repz
mov
lret
jg
pop
sub
mov
mov
fs
sti
repnz
aaa
imul
xchg
add
dec
cmc
pop
pop
mov
push
push
dec
mov
lcall
adc
sbb
inc
outsl
jae
jb
fsubrs
jg
aas
mov
lods
mov
lret
sub
xor
sub
xchg
rorl
cmp
into
ss
push
cmpsl
adc
int3
test
push
lahf
jg
sub
sub
dec
mov
icebp
sub
stos
jbe
xchg
movsb
lret
dec
lods
fiaddl
xlat
or
sub
fisubs
loopne
sub
outsl
in
lods
push
adc
into
ja
fcomp
insb
cmp
xchg
cmp
int3
lahf
shrb
jle
or
addr16
adc
bound
dec
cmp
mov
sub
ficoml
inc
mov
imul
xor
pop
adc
xchg
test
inc
and
sbb
aam
cmp
pop
mov
pop
cmpsl
lahf
lock
xor
sub
cmpsb
clc
xor
lods
ss
pcmpeqb
mov
pop
aam
stc
scas
sti
subl
lods
mov
out
bound
jecxz
add
sub
dec
test
mov
mov
or
and
and
sub
jno
and
int
mov
movb
fwait
decb
neg
in
sbb
push
pop
add
movsl
pop
lds
xchg
call
inc
into
lods
xor
mov
sahf
fcompp
sbb
inc
call
or
pop
aad
pop
out
mov
cmc
out
pop
cmpb
rcl
fisubl
lahf
pop
arpl
lret
mov
add
xor
pop
cmp
cmpsb
pop
add
es
hlt
add
sbbb
mov
xorl
xchg
mov
imul
lds
test
mov
vmovsldup
loop
jo
enter
mov
add
jge
cmp
ret
lock
fwait
pop
lcall
out
popa
cmp
imul
call
dec
iret
cld
inc
das
push
push
and
clc
adc
or
mov
inc
pop
stos
inc
cmp
inc
jecxz
add
insb
cltd
jnp
scas
clc
mov
jl
fwait
nop
push
mov
and
mov
orl
and
test
cwtl
in
dec
aaa
sbb
outsl
or
xchg
push
mov
test
fldl2e
fcoms
add
xor
inc
push
les
sahf
mov
dec
popa
jecxz
stc
in
mov
insl
hlt
fs
roll
sbb
sub
repz
mov
or
out
enter
std
popf
cmp
jle
lea
fistl
or
insb
je
sarb
imul
jb
mov
sub
outsl
fcoms
clc
sub
push
jno
xorl
mov
cmp
fsubl
sbbl
adc
adc
xchg
jo
ljmp
loopne
xchg
lcall
arpl
loope
dec
pop
stos
xor
fimull
xor
sbb
lods
dec
ss
inc
mov
pop
mov
and
jmp
add
pop
mov
adc
es
mov
and
mov
or
mov
mov
xchg
inc
push
adc
adcb
test
ret
dec
cltd
fwait
repz
adc
sbb
cld
and
and
push
xchg
sbb
fwait
loop
int
fldl
push
mov
jl
rcrl
xchg
xchg
cmpsb
push
xchg
mov
or
xorl
hlt
ret
or
mov
push
jne
addb
test
mov
lret
stc
jno
cmp
mov
push
dec
mov
out
outsl
pop
or
adc
inc
mov
enter
mov
jae
loop
dec
push
cmp
mov
gs
insl
push
xchg
add
xor
xor
and
pop
push
popa
lock
or
add
dec
xor
pop
aas
fstpl
enter
mov
dec
sbb
xchg
movsb
mov
push
loope
mov
icebp
cmp
jg
pop
xchg
or
pop
sbb
mov
push
mov
dec
lods
jmp
out
pop
lret
stos
push
nop
xchg
loop
mov
mov
cmp
stos
inc
jecxz
mov
xor
sbb
push
and
lea
rorl
insb
shrl
mov
jmp
shll
div
mov
aad
xchg
out
test
cmp
data16
sub
iret
ss
or
and
fcomp
cld
xchg
insb
mov
xchg
inc
cmc
aad
xchg
sbb
dec
loopne
fdivrs
dec
fadds
xchg
jp
popf
cmc
sbbb
xchg
mov
and
ror
das
push
cmp
iret
mov
mov
push
and
cld
cltd
lods
jge
ds
dec
js
jecxz
push
negl
cmp
out
fcoms
outsl
xchg
sub
sub
notl
mov
mov
add
outsl
imul
into
push
xchg
hlt
test
xor
mov
jnp
cs
call
adc
sbb
adc
mov
loopne
mov
es
push
aam
repnz
mov
fs
xchg
dec
cmp
adc
push
ficomps
xchg
pop
out
mov
mov
pop
pop
repnz
and
and
push
jmp
cld
push
aas
add
xchg
test
flds
arpl
mov
hlt
mov
in
xchg
je
xchg
push
pop
xor
test
les
mov
ljmp
mov
clc
in
push
in
jo
arpl
scas
sbb
mov
repnz
push
lods
push
cld
mov
push
or
xchg
pop
test
aas
xchg
bnd
into
test
dec
mov
out
aas
testb
out
pop
popa
loop
jne
pop
imul
aaa
sbb
dec
pop
mov
jg
mov
cmp
push
les
cltd
add
fcmovnbe
jb
subb
mov
jo
mov
cltd
sbb
and
or
in
scas
mov
cmp
sbb
stc
push
cmp
faddl
mov
fsts
fwait
inc
in
mov
jb
mov
inc
arpl
or
repnz
cmpsl
adc
jae
mov
fnsave
je
jg
addr16
pushf
push
jae
or
movsb
xchg
xorb
subb
les
xchg
adc
dec
aad
imul
addr16
or
outsb
or
mov
rcr
jecxz
shlb
jbe
shl
cmp
outsl
test
gs
lea
dec
addb
stos
sbb
testl
pop
mov
jns
fdiv
push
add
mov
enter
mov
and
sub
fwait
clc
pop
pop
iret
xchg
in
imulb
repnz
loopne
loope
fstpt
sub
adc
in
inc
imul
adc
xchg
or
jmp
sbb
loope
insb
je
cmp
enter
scas
pop
sbb
fwait
nop
add
dec
int3
pusha
push
jae
cwtl
in
aas
jp
mov
scas
je
dec
mov
stc
je
mov
in
and
fs
es
adc
imul
jg
xor
scas
into
mov
frstor
sbb
add
fnstcw
or
shlb
inc
add
jge
push
cltd
sarl
insl
sub
lcall
fbld
test
mov
ret
repnz
jg
xchg
push
dec
je
mov
insb
cwtl
xor
fnstsw
rcl
dec
push
jnp
xor
and
mov
add
lret
push
jge
fsubrl
notl
adc
mov
iret
adc
or
dec
lods
enter
sub
pop
add
cltd
jb
jl
or
and
sub
pop
jmp
jae
jl
insb
jecxz
mov
cmp
jmp
stos
bnd
pop
sbb
aam
mov
cli
leave
fwait
sbb
movsb
popf
rcrb
sbb
jle
mov
sbbb
imul
mov
adc
xor
cmp
jnp
testl
mov
mov
lcall
cmp
pop
bound
push
mov
loopne
mov
int3
dec
rorb
clc
in
std
xchg
add
orb
xor
dec
jmp
adc
mov
sub
cmp
cwtl
sbb
jge
pop
addb
lds
fcoml
aas
in
jmp
xlat
or
mov
sbb
mov
sub
mov
orl
ss
sub
xchg
jnp
stc
inc
popf
and
pop
push
xchg
mov
push
enter
xchg
outsb
or
adcb
cmp
pop
xchg
push
fimuls
inc
rol
mov
jmp
push
cmp
push
std
lahf
push
jecxz
jbe
push
ret
sbb
xchg
push
std
xchg
out
es
pop
adc
add
cld
je
adc
lea
xchg
cmc
mov
mov
and
adc
pop
scas
scas
jae
or
fcmovnu
leave
sbb
push
and
inc
loop
nop
rcrb
leave
mov
popf
push
push
shll
mov
jbe
mov
or
push
jae
sti
insb
scas
vmwrite
div
sub
sub
ficoml
clc
loop
and
mov
arpl
sub
xor
jg
icebp
and
stos
mov
enter
push
daa
mov
in
imul
xchg
iret
add
jns
xor
jle
dec
ret
push
fwait
pop
scas
fidivs
lods
je
sub
lock
andb
xchg
out
push
pop
and
les
fcom
dec
jmp
gs
fmull
lret
and
push
xchg
cmp
call
pop
loopnew
and
or
out
mov
inc
sar
into
icebp
popf
pop
add
in
push
cmp
addr16
inc
ljmp
dec
pushf
stos
insl
push
mov
mov
icebp
mov
sti
jno
jmp
add
repz
and
notl
fsubrp
cs
pop
cmp
xchg
jl
mov
push
sub
xchg
sub
fwait
cmp
jmp
pop
mov
dec
std
dec
jae
or
inc
hlt
icebp
xor
test
jle
das
push
outsl
mov
xor
cmpsb
push
pop
int3
into
xor
sub
pop
repz
ja
cmpsb
les
andl
dec
loop
or
sbb
test
xor
xchg
push
rolb
inc
lahf
test
adc
scas
fmuls
arpl
clc
xchg
call
mov
jno
clc
push
das
je
mov
cmpl
mov
xchg
jns
mov
stos
hlt
fwait
stc
or
dec
hlt
leave
pop
mov
movsb
inc
int
jnp
pushf
cmp
daa
sbb
dec
push
ja
jge
xchg
xchg
and
dec
adc
mov
sub
shll
aaa
ret
xlat
shll
or
daa
outsb
pop
roll
lock
push
lcall
popf
mov
mov
mov
notb
sub
cmp
imul
rcrl
mov
test
mov
inc
data16
dec
sub
cmp
push
popa
das
mov
sti
jmp
mov
outsl
adc
aam
inc
push
es
mov
orb
not
jno
movl
dec
in
pop
outsb
inc
push
divl
shlb
mov
sbb
loop
and
popf
lods
xor
insl
out
mov
cwtl
cwtl
out
mov
lds
xor
inc
add
lds
sbb
hlt
or
lock
neg
cltd
out
sub
adc
xchg
jb
add
jl
jge
scas
sbb
jmp
pop
imul
mov
ljmp
test
out
dec
jg
adc
mov
mov
mov
inc
sbb
scas
xchg
push
ret
aas
mov
adc
sbb
or
lahf
je
les
out
push
xchg
addr16
lahf
push
ja
jmp
mov
ret
pushf
mov
scas
jle
pop
mov
cmp
jnp
arpl
outsb
sub
movsb
outsb
push
mov
and
in
xchg
mov
repz
scas
mov
pop
leave
lock
xor
outsb
pop
ret
add
inc
or
push
mov
mov
push
lret
inc
push
imul
xor
cmp
sub
shll
mov
mov
fucomi
xchg
or
sbbl
js
fildll
add
decb
jle
paddw
xor
jp
push
cmc
movl
push
mov
jo
or
push
cltd
xchg
add
mov
mov
test
sub
jg
push
pop
sub
cmc
and
pop
sar
and
jle
in
fs
fstps
jns
shrb
cmpsl
imul
sbb
mov
scas
sti
mov
ret
sub
jno
xor
jmp
jl
fcomi
jle
iret
adc
inc
jb
repz
lea
add
movsb
sbb
lret
insl
sbb
mov
lea
and
inc
call
nop
xchg
fstl
cmp
jmp
jne
pop
shld
shlb
mov
push
testl
dec
clc
shlb
pop
sbb
xor
xor
data16
lods
dec
jl
sbb
push
adc
pop
lods
or
fcomps
ja
jp
push
loop
and
jae
fisubrl
lahf
adc
sti
xchg
xchg
mov
dec
ss
pop
dec
outsb
lods
cmp
dec
adc
pop
pop
jge
cmc
lods
mov
pop
lods
fdivr
adc
push
dec
outsl
xchg
xchg
mov
cmp
addb
jnp
rcll
sarl
push
mov
aam
sbb
or
jbe
mov
int3
pop
ret
mov
fs
adc
adc
cmp
leave
sub
mov
mov
push
add
pop
mov
jbe
or
pop
xor
iret
scas
ret
scas
pop
lods
or
lods
cli
jmp
fcompl
and
mov
sbb
or
mov
pop
adc
pop
sub
jle
mov
into
insb
xor
scas
aam
xchg
lret
pop
mov
outsb
and
sub
xchg
xchg
movsb
stos
ret
ret
sub
into
iret
mov
js
jecxz
fucomi
xchg
mov
iret
mov
icebp
inc
pop
mov
gs
lret
test
pusha
test
mov
mov
adc
stos
cmpsl
aad
stos
push
sbb
js
cld
add
add
jne
in
inc
push
shrl
or
pop
iret
mov
add
mov
sub
and
aas
mov
mov
mov
insb
push
mov
jbe
fstpt
test
and
mov
scas
in
inc
mov
stos
gs
xor
data16
cs
pusha
scas
arpl
push
jmp
daa
insl
sbb
mov
lods
push
pop
adc
lea
fcmovnu
insb
xor
pop
cmp
cltd
mov
pop
shll
mov
lahf
jne
xchg
pop
jmp
cmp
ja
cmp
les
mull
nop
jg
push
jno
mov
pop
or
loopne
xor
in
popa
lock
aas
int
int3
insb
or
test
mov
xchg
aam
dec
cmpsb
and
sbb
jo
int
lock
adc
js
dec
shrb
bound
es
test
mov
sbb
lods
mov
sahf
cwtl
int3
or
jecxz
fmuls
inc
pop
stc
jns
popf
add
mov
int
sahf
jge
sub
outsb
and
lahf
aam
mov
les
or
fs
dec
es
xchg
xchg
icebp
mulb
mov
add
out
or
cwtl
pand
fs
call
xor
rcrb
int
inc
orl
mov
pop
hlt
push
push
ja
fmull
iret
jo
into
hlt
inc
inc
std
inc
pop
sbb
cs
rol
cltd
or
inc
data16
pop
push
adc
icebp
cmc
call
pop
mov
cmpsb
roll
daa
repnz
adc
or
fcmovnu
lds
fistpl
push
in
cld
outsb
push
repz
xor
cmp
js
sti
pushf
push
mov
mov
and
insl
xor
or
jp
or
cltd
sub
imul
add
fmul
in
dec
cmpsl
xor
sbb
cmp
inc
and
in
xchg
lahf
je
jg
mov
push
out
out
int3
ss
pop
inc
aad
testl
push
scas
adc
in
adc
pop
test
addr16
or
stos
in
jle
mov
movsb
add
jp
nop
fs
lret
pop
cmp
testl
jns
enter
push
loope
and
call
xor
cmp
clc
mov
bound
mov
push
cmp
push
xrelease
mov
push
sub
clc
pop
xor
push
mov
jmp
xchg
push
or
lcall
stos
stos
sub
shrl
orb
cmp
jnp
mov
mov
repz
in
push
test
aas
pop
pop
cmp
stc
xchg
mov
mov
xchg
ja
sub
fnstsw
adcb
imul
aad
lock
sbb
pop
rol
enter
cmc
mulb
dec
in
mov
test
jle
test
das
scas
sub
mov
xor
mov
bound
movsl
jnp
mov
ljmp
ss
movsl
adc
add
adc
aad
das
mov
ja
pop
jmp
inc
scas
or
rcll
outsl
leave
insb
inc
bound
dec
push
repz
dec
jnp
clc
jno
pop
ljmp
mov
fsubrs
pop
mov
push
in
pop
jnp
in
inc
std
imul
or
rcll
gs
add
gs
xchg
jae
fcoml
mov
std
push
push
mov
test
mov
pop
insb
adc
fstps
repnz
in
lds
jno
sbb
loopne
add
jno
push
push
xorb
scas
negl
addl
subb
js
and
or
and
inc
test
jb
cmp
pop
lds
andl
sub
mov
test
dec
mov
dec
inc
xor
lock
cwtd
mov
lret
dec
lods
mov
sbb
addr16
xchg
sti
jbe
mov
imul
fs
sub
mov
mov
gs
jmp
jo
xlat
hlt
test
enter
jns
aad
add
stos
hlt
mov
mov
jne
mov
loope
lea
mov
dec
add
lahf
lods
std
ret
call
enter
in
arpl
cmpb
lcall
stos
adc
push
mov
mov
loopne
pop
push
in
movsb
shlb
sbb
jae
fstl
hlt
sbb
out
int3
fnstsw
and
mov
mov
call
cltd
or
xor
lods
pushf
mov
clc
scas
mov
add
push
dec
pop
jecxz
mov
shl
cmp
mov
jo
lods
pushf
cmp
xchg
icebp
mov
test
rorl
cmp
cmp
mov
pop
or
pmaxub
fidivs
push
inc
xchg
pop
add
addl
adc
in
or
push
in
sbb
mov
cmpsl
and
es
std
fistps
adc
ja
test
repnz
sub
cltd
lret
jle
dec
test
fiadds
mov
in
aam
or
and
cs
and
call
ljmp
test
aam
aas
mov
xchg
jmp
pop
xchg
mov
adc
test
xlat
mov
movsb
pop
cmp
fldt
into
push
push
or
aad
inc
adc
sub
push
pop
ficompl
xchg
notl
idivb
add
leave
repz
stc
icebp
mov
shrb
inc
outsb
daa
add
test
aas
jg
popa
mov
lret
push
mov
add
mov
arpl
test
cwtl
mov
mov
push
inc
pop
in
push
or
rorb
lcall
fimuls
fcompl
loopne
pop
mov
popf
fwait
mov
mov
adc
jnp
cmpsl
loopne
mov
pop
repz
xor
aas
mov
stos
test
xchg
cmp
push
fidivrl
add
outsb
inc
sahf
lods
push
mov
icebp
or
pop
mov
jecxz
jge
pop
popa
push
mov
cmp
imul
shrb
enter
dec
pop
nop
cmc
insl
int
sub
mov
adc
cld
adc
adc
mov
add
mov
int
shlb
fwait
or
lock
pop
mov
jno
out
andb
lahf
fsubp
test
cltd
xor
roll
mov
jle
mov
hlt
fdivrp
jns
mov
mov
in
gs
push
xchg
fldl
xchg
mov
out
pushf
dec
shll
mov
into
lods
or
push
lods
aam
arpl
cmp
shr
cwtl
xor
xchg
repz
repnz
or
in
xchg
or
mov
jle
jnp
push
sub
mulb
push
test
xchg
mov
scas
insl
jae
dec
add
sbb
or
ja
xchg
call
jbe
inc
dec
repz
es
or
dec
movsb
ss
nop
pop
nop
ftst
mov
mov
mov
mov
pusha
jmp
adc
sbb
mov
aas
jle
push
jo
nop
movsl
xchg
lcall
sub
pop
lock
mov
push
jg
scas
icebp
sbb
cmp
xchg
fisubrl
inc
flds
out
cld
inc
fldenv
or
iret
in
popa
lods
das
or
pop
in
aam
add
ja
inc
adc
je
sbb
aas
pop
pop
dec
pop
xor
ret
daa
push
add
sbbb
cmpsb
and
leave
inc
pop
push
push
pusha
loopne
and
dec
ja
gs
movsb
cs
and
int
sahf
or
xlat
or
adc
adc
and
push
xchg
sbb
adc
sub
mov
gs
mov
add
addb
adc
rcrl
adc
std
and
add
fmuls
lds
add
negl
dec
fstps
mov
mulps
les
outsl
nop
sub
aam
push
lds
clc
repnz
leave
cmp
jns
stc
xchg
xor
xor
jae
fldcw
push
fimull
popf
mov
push
rcll
ret
fwait
adc
pop
test
sti
jnp
xlat
cmc
add
pop
sbb
cld
aam
idiv
cli
test
je
ret
shrl
arpl
popw
lea
imul
and
insl
fimull
out
pop
fwait
js
fcoml
dec
shll
mov
int3
or
jae
jo
jge
jb
mov
mov
and
dec
rcll
lret
popf
test
mov
xor
in
fistps
cmp
sarl
aad
rorb
push
rcl
inc
adc
add
jle
mov
into
jp
popf
jne
test
ljmp
repnz
dec
repnz
xor
lods
in
out
cmp
xchg
jno,pt
or
mov
cmpsb
out
adc
inc
mov
ret
lock
stos
jae
mov
push
xchg
insb
push
ja
or
loopne
dec
popf
ljmp
fwait
lea
xchg
jp
push
push
int
adc
shrl
ljmp
mov
or
or
push
push
es
rcrl
push
ret
aaa
mov
test
dec
or
xchg
clc
mov
testl
push
in
stc
sub
std
mov
pushf
push
idivb
jle
mov
movsb
sub
pop
scas
adc
lods
in
rcl
pop
ret
inc
mov
lock
pop
ret
hlt
bound
sub
dec
dec
pop
fildll
testb
ljmp
js
enter
push
mov
pop
lcall
lret
mov
cmp
lahf
mov
cmp
jbe
cmp
inc
mov
loope
dec
mov
jmp
imul
xor
imul
test
sbb
jmp
mov
adc
ss
jecxz
scas
sbb
enter
push
xchg
xchg
daa
jp
das
xchg
mov
cli
fldt
data16
jo
repnz
xchg
adc
sbb
sahf
testb
adc
sub
negb
test
or
mov
pop
test
push
stos
mov
push
mov
lret
mov
jbe
gs
dec
mov
test
cmpsl
xchg
rolb
mov
lahf
adc
and
in
sbbb
cmp
pop
mov
and
aaa
lahf
adc
inc
cltd
push
int
ret
cmpsb
mov
lret
mov
sub
xlat
mov
inc
aad
shr
dec
jno
gs
jne
fsubr
data16
push
out
inc
shl
stc
cwtl
xchg
dec
sti
jns
stos
ds
lahf
push
outsb
mov
loop
negl
addb
repz
ds
push
push
call
and
insl
repnz
clc
ja
mov
call
pusha
sbb
cld
popf
inc
imul
xchg
adc
and
cmp
ljmp
aaa
out
pop
movsl
mov
jmp
cmp
ds
arpl
pop
dec
cmpsl
jo
les
repnz
lock
pop
cltd
inc
lret
pop
rcr
xlat
inc
cmp
sbbl
inc
jge
das
enter
xchg
xchg
in
inc
loope
lret
cmpsb
mov
pushf
outsl
fs
ljmp
fldl
daa
pushf
mov
leave
imul
pop
in
mov
cli
sbb
mov
pop
add
add
gs
andl
pop
nop
rcll
iret
cltd
mov
call
dec
push
lret
adc
mov
push
and
pop
ja
push
push
ror
push
je
inc
pop
mov
fdivrl
xchg
push
ffree
test
pop
out
in
jnp
jbe
ljmp
scas
inc
test
not
pushf
fdivrl
ret
jmp
xchg
mov
stc
xchg
in
pop
dec
dec
cwtl
aam
in
cmp
iret
pop
enter
lods
add
mov
mov
enter
or
cmp
ja
sub
push
imul
jg
jnp
ljmp
inc
prefetch
adc
pop
sbb
test
pop
mov
out
dec
push
xchg
es
adc
cmp
add
pop
mov
negb
jnp
ja
inc
leave
ret
add
ret
xor
hlt
mov
cltd
xorl
sub
pop
lret
cmpsb
test
or
push
dec
sbb
test
shll
or
xchg
pop
arpl
xchg
push
add
sahf
icebp
inc
movsb
lock
data16
jecxz
stos
cmp
mov
scas
ret
cltd
jp
cmp
leave
shr
jbe
lods
pop
daa
jnp
mov
insl
inc
cld
cmpl
mulb
add
adc
add
pop
jo
andb
lods
push
clc
test
jcxz
imul
lcall
shll
cmp
sub
decl
pop
add
pop
jnp
pop
outsl
inc
mov
mov
push
in
jmp
aaa
cli
adc
adc
adc
jnp
pushf
daa
xchg
xor
pop
pop
push
cwtl
shlb
cli
popa
ja
push
clc
pop
jle
mov
or
mov
mov
into
add
js
inc
jmp
sbb
xchg
pop
loop
sub
ficomps
xchg
sbb
jne
mov
and
jmp
pop
sahf
fs
mov
jmp
mov
stos
xchg
scas
test
jge
jno
ret
rorb
xchg
pop
int
adc
aad
lea
and
push
stos
sbb
jg
xor
mov
frstor
xchg
cmc
cmp
js
cmp
mov
stos
xchg
pop
icebp
insl
dec
testl
cmp
inc
jg
insl
push
or
pop
push
int3
sbb
daa
js
call
and
push
adc
pop
pop
out
cmp
cwtl
data16
xchg
je
aam
xor
mov
pop
ja
loop
inc
lea
movsl
lcall
adc
sbb
adc
pop
mov
icebp
push
adc
ret
test
sar
sti
movsb
pop
mov
ror
sbb
xor
fiaddl
insl
mov
push
and
mov
lcall
ret
mov
daa
aad
test
sub
mov
mov
push
jb
outsb
adc
adc
inc
and
and
and
je
aas
sbb
clc
sbb
add
shl
std
lret
push
add
ljmp
imul
cmpsl
mov
rorl
data16
pop
fdivs
and
gs
or
jecxz
mov
outsl
jmp
and
push
mov
test
mov
stc
lds
mov
mov
rcll
and
mov
mov
dec
push
jmp
rcrb
fs
dec
jle
test
das
ret
jecxz
or
roll
add
lcall
sahf
mov
lea
pop
dec
pop
pop
dec
mov
xchg
add
xorb
fsts
je
pop
pop
sbb
test
add
jge
lret
cmc
adc
pop
inc
loope
mov
pop
fcomi
outsl
incl
or
cmpsl
xchg
ret
ret
mov
or
lds
dec
stc
rclb
and
push
xor
mov
cmp
and
xchg
dec
cmpsl
cs
xor
mov
mov
jecxz
fldt
fisttps
pop
lcall
add
and
xchg
xor
xchg
lock
inc
adc
enter
dec
ret
out
pusha
mov
cmpb
jbe
ljmp
jo
lock
and
and
outsl
push
lea
add
adc
das
sti
dec
xor
cmpsb
sub
push
and
test
mull
loope
div
fmulp
jg
dec
in
pushf
sbb
leave
xchg
xchg
frstor
xor
fsts
outsl
jo
and
dec
addr16
mov
push
xadd
xchg
sahf
popa
pop
xchg
push
push
repz
mov
or
bound
jne
push
mov
dec
out
jp
inc
nop
mov
push
pop
cmp
or
and
ds
mov
stos
dec
daa
inc
add
xor
pop
mov
inc
cli
jae
cmc
sbb
pop
sahf
int3
mov
sbb
dec
mov
or
xchg
in
xchg
dec
ljmp
inc
sbb
aas
jecxz
mov
mov
lds
xchg
ret
xchg
les
fists
ret
mov
aad
lret
cld
int3
jb
add
leave
lock
mov
sub
push
ss
cmc
cmp
pop
push
addr16
insb
add
mov
push
cwtl
jle
ret
aam
mov
push
jmp
cwtl
sbb
test
pop
adc
popf
mov
xchg
out
pusha
daa
push
shrb
cmp
into
cmpsl
pop
faddp
fisubs
into
fs
pop
aas
mov
imulb
cs
adc
sub
lods
cmpsl
shrb
xchg
orl
repz
cmp
loop
pop
aad
out
paddsb
out
sbb
int3
repz
cld
inc
adc
sbb
sub
ret
jle
in
es
call
int
inc
out
lods
lret
push
outsb
pop
jnp
subb
ja
stc
mov
cmc
ja
ds
out
pop
clc
xchg
scas
inc
daa
xchg
push
pop
mov
popf
fwait
push
dec
insl
ljmp
sub
jns
mov
bound
push
push
scas
sub
mov
and
push
xchg
imul
or
je
mov
pop
call
data16
sub
push
xor
into
repz
mov
aad
jbe
dec
cmp
pop
mov
inc
mov
xchg
addr16
cmp
dec
cmp
add
mov
or
shrb
xor
push
aad
aas
adc
outsb
mov
je
dec
jb
frstor
add
sbb
mov
fadd
repnz
pop
xchg
loopne
in
cmpsl
fdivp
sub
sub
fdivr
icebp
mov
cmp
outsl
and
push
add
xor
into
xor
push
iret
jmp
dec
or
adc
movsl
mov
mov
mov
imulb
ja
js
dec
jl
inc
pop
or
dec
fs
push
sub
nop
mov
rolb
dec
int
insl
mov
mov
movsb
mov
popf
mov
pop
jle
ret
pop
fsubr
jecxz
jge
insb
sub
jmp
mov
mov
aas
mov
mov
push
inc
mov
ss
addr16
jp
add
int
jle
loop
enter
andl
rolb
push
mov
xchg
in
movsl
inc
mov
cmpsb
testb
pop
lods
inc
rcll
push
ret
adc
or
filds
push
jae
dec
cmp
sub
fdivrl
jnp
popl
inc
call
pop
mov
push
and
inc
mov
mov
fs
and
shlb
enter
bound
pop
xor
shlb
add
mov
sbb
mov
jp
adc
mov
test
mov
pop
xchg
and
shlb
xchg
cli
sti
fsubrs
push
mov
adc
pop
push
inc
mov
stos
negl
sub
jb
ljmp
sahf
and
push
shll
daa
scas
and
xchg
jge
push
adc
sub
mov
dec
mov
sti
iret
psubsw
outsb
arpl
out
dec
scas
cmc
imul
pushf
xor
cmp
stos
sub
jmp
mov
push
fmull
mov
add
imul
fnstenv
lret
cmp
pusha
mov
inc
dec
stc
jae
fcoml
xor
out
xchg
mov
bound
enter
je
dec
lret
addr16
out
stos
or
or
jae
mov
push
jecxz
jne
lret
mov
xchg
jecxz
cli
icebp
jg
icebp
mov
sbb
push
rcll
adc
pusha
add
mov
cmp
mov
imul
mov
mov
dec
mov
pop
xchg
ljmp
movq
cmp
sub
dec
sbbl
add
push
pop
pop
test
xchg
call
sbb
cld
movsl
dec
js
and
mov
pushf
push
bound
repz
push
mov
cmp
adc
fcompl
loop
push
pop
cmp
lret
pusha
sahf
and
scas
and
shll
lods
push
push
pop
popa
and
lahf
pop
pop
pop
or
decl
orl
movsb
and
ja
inc
daa
stos
or
js
pop
hlt
clc
cwtl
je
gs
sbb
jl
fnsave
xlat
and
jmp
mov
dec
fsubp
mov
rcrb
inc
cmp
fsubr
cmp
push
nop
test
mov
mov
cmp
sub
mov
or
jle
add
xchg
adc
arpl
mov
inc
xchg
cmp
jle
push
push
call
mov
adc
sub
xchg
add
cmp
fwait
int3
into
out
xor
pop
dec
sbb
cpuid
and
mov
insb
test
repz
jl
aad
mov
js
jnp
jg
mov
test
xor
aam
ret
pop
or
js
in
rcrb
adc
jnp
adc
cwtl
sub
lds
jnp
test
movl
adc
sbb
mov
cmp
xor
nop
cltd
imul
mov
push
add
adc
push
out
cmpsl
or
movsl
cmpsb
mov
outsl
cs
fldl
sbbl
or
mov
aam
cmp
aad
jbe
setnp
popa
and
cmp
or
les
out
test
mov
push
and
xor
popf
dec
aad
or
insb
lods
dec
mov
add
cmpsl
pop
push
cvtpi2ps
jle
mov
mov
mov
jmp
pop
stc
scas
jecxz
xchg
pop
js
test
outsl
or
xor
outsl
xor
push
cwtl
lahf
mov
lods
jae
dec
fwait
xchg
out
and
insb
stc
lods
daa
int
test
outsl
xlat
mov
mov
negl
testl
into
xor
cmp
lret
ret
test
lock
cmp
cmp
inc
inc
pop
push
imul
loopne
cmp
pop
out
cwtl
shll
or
mov
sub
nop
scas
push
sub
xchg
cld
jge
imul
inc
add
fdivr
loop
mov
lcall
and
mov
jp
enter
jg
mov
lods
push
es
ljmp
fwait
push
sti
out
mov
subl
fwait
lds
jmp
pop
mov
aad
stos
push
push
cmp
aam
jmp
mov
push
loopne
adc
cmpsb
dec
jp
jl
repnz
push
add
fistl
push
movsl
jle
cwtl
pop
hlt
js
imul
fcomi
shrb
scas
cmpsl
ficoms
mov
pop
jp
clc
sbb
popf
push
cmc
jge
sub
cmp
popf
dec
sti
fs
decl
insl
int3
cmp
adc
or
inc
add
stc
dec
daa
inc
sarb
gs
sub
push
stos
cmpsb
push
or
jmp
sub
xor
jmp
mov
add
loop
xor
jmp
sub
icebp
leave
mov
add
jns
les
jo
dec
leave
clc
popf
xor
popf
dec
pop
mov
out
mov
add
inc
push
fimull
in
or
mov
adc
test
xchg
dec
into
sbb
xchg
mov
arpl
cmpsl
xchg
movsb
ficoms
and
pop
loopne
and
ja
mov
repz
cmp
dec
cld
fdivrs
and
mov
es
aam
in
imul
or
cmp
movsl
icebp
andb
fwait
rep
mov
data16
jne
and
and
popf
xor
push
shlb
pop
mov
pop
xchg
rol
lret
jo
fstpl
mov
cmp
mov
movsl
pop
addr16
jp
jg
mov
in
nop
add
in
dec
pop
and
dec
jne
adc
sub
xor
xchg
jnp
cmovbe
rcl
fwait
cmp
pop
lcall
arpl
push
mov
add
jbe
lretw
sub
lcall
jns
inc
push
mov
mov
mov
push
lret
les
mov
in
push
lea
mov
andl
shlb
div
dec
xor
mov
addr16
fnstsw
mov
lahf
or
and
add
xchg
adc
mov
cmp
subb
ljmp
xchg
lret
sub
mov
rclb
lods
fwait
sub
pusha
push
xor
mov
lock
sub
mov
cmp
push
mov
sub
or
xchg
std
xchg
add
inc
hlt
decl
xor
and
cmp
ret
add
xchg
loope
mov
push
jl
adcl
push
xlat
mov
cmpl
mov
mov
insb
mov
mov
add
mov
dec
sub
lcall
lds
xchg
push
daa
dec
movsb
add
movsl
call
jmp
inc
aad
pushl
adc
mov
hlt
lods
mov
negb
aad
or
std
arpl
push
pusha
das
push
push
cltd
cmpsl
xchg
gs
out
shrb
hlt
adc
sbb
ficoms
sbb
mov
mov
push
arpl
stc
fmul
dec
rclb
push
xchg
call
push
adc
xchg
pop
lods
mov
fiadds
in
jmp
out
fdivp
clc
push
sbb
andl
outsb
call
and
pusha
xchg
fildl
xchg
outsl
sub
push
xchg
fisubs
jge
rcrl
and
fistpl
and
arpl
stc
inc
out
jmp
stos
inc
inc
out
aam
mov
pop
sbb
shll
fsts
dec
ret
and
bound
frstpm(287
push
cli
mov
imul
jns
adc
xchg
mov
loope
jecxz
lahf
add
into
in
sub
test
mov
aaa
arpl
stos
xor
scas
and
mov
shl
jl
jl
loop
cwtl
ss
sbb
mov
mov
loope
adc
out
push
scas
sarl
sub
sbb
outsl
inc
lods
mov
daa
dec
mov
xlat
jle
lret
into
and
jmp
out
inc
push
rep
xor
and
pusha
xchg
out
loop
sahf
sahf
scas
pop
fiadds
daa
ljmp
addr16
std
inc
shlb
jl
or
push
cmp
loope
inc
push
push
pop
hlt
pop
lds
push
mov
ret
in
mov
sbb
pop
repz
mov
lret
mov
stc
out
mov
jecxz
in
popf
mov
je
std
mov
jmp
or
jnp
jle
push
and
mov
dec
mov
mov
jl
repz
insl
sub
mov
lods
xor
outsb
pop
imul
gs
xchg
sub
popa
in
sahf
xor
xchg
sbb
insb
subb
addr16
adc
mov
inc
pop
mov
shrb
rorb
test
fcompl
mov
push
std
push
dec
sbb
push
add
lahf
xlat
fstl
fsub
outsl
jg
adc
sbb
sbb
repnz
mov
jns
sbb
sub
push
add
adc
jns
adc
dec
or
ja
std
mov
enter
clc
cmpl
adc
movsl
test
xchg
test
dec
push
xlat
and
xor
sbbb
add
xor
loopne
adc
lcall
leave
dec
push
dec
loop
or
xor
loope
jb
xor
dec
xchg
mov
clc
in
clc
shll
in
add
call
js
outsb
jl
loope
xchg
inc
xchg
lret
sti
movq
leave
aaa
pop
xor
cli
movsl
jmp
imul
pop
in
add
jnp
mov
lds
sbb
cmpb
push
xchg
scas
mov
stos
hlt
test
sub
int3
outsb
or
out
iret
dec
xor
xrelease
data16
dec
or
cmp
cmc
push
aam
mov
add
sub
sbb
mov
insb
cmpsb
jo
sbb
mov
in
mov
movsb
leave
lahf
adc
pop
adc
push
ljmp
jno
in
pop
rclb
adc
stos
xor
test
adc
xchg
insb
mov
adc
push
ret
aad
pop
jecxz
stos
push
xchg
push
rclb
dec
or
ret
lret
lock
sub
pop
dec
cmp
jnp
dec
mov
mov
orl
scas
sub
clc
jnp
js
ucomiss
dec
cmp
fistpll
loope
sarb
filds
and
shll
in
repnz
xorb
icebp
mov
pop
jecxz
cmp
movsb
in
pop
inc
ret
add
sub
fistpll
stos
xlat
push
aam
or
lahf
or
jle
inc
push
dec
stos
and
aad
testl
or
lret
mov
xchg
outsb
repnz
cli
cmc
push
mov
dec
adc
push
ljmp
and
xor
pop
cmpsb
mov
mov
and
out
and
std
fidivs
and
orl
add
mov
lods
mov
aad
jp
rclb
mov
leave
lcall
jl
rcrl
jge
sbbl
and
cmp
std
cmc
dec
lret
push
or
xchg
cmpsl
and
pop
int
subl
push
xchg
fs
rcll
push
fisubrs
clc
shlb
xchg
or
frstor
pop
jl
out
clc
notl
out
pop
pop
clc
xor
movsb
lcall
inc
in
pop
or
inc
jae
js,pn
pop
ja
out
call
mov
and
mov
shrl
cmp
test
jl
cmp
push
sub
clc
test
sbb
mov
pop
js
cmp
mov
mov
push
loope
sbb
mov
xorl
vpaddusb
inc
xor
xchg
dec
shlb
pop
mov
mov
mov
icebp
fistl
xchg
ret
dec
inc
loop
icebp
add
sbb
aad
xor
outsl
insb
jle
shll
and
icebp
arpl
pushf
addr16
stc
mov
fwait
int3
movsl
inc
xorl
out
inc
ss
leave
jne
sbb
scas
sbb
cltd
sbb
mov
mov
pop
ljmp
or
add
cwtl
xor
outsl
inc
lock
cmpsl
cs
das
adc
jae
aam
adc
sub
add
mov
adc
or
jb
dec
pushf
icebp
inc
mov
clc
push
negb
push
pop
test
push
pop
test
test
jae
aam
xor
adc
adc
jp
divl
mov
pop
dec
nop
pop
in
xor
pmaxsw
push
xlat
add
fistpll
addl
push
stos
dec
ret
jl
rcll
mov
xchg
sub
cwtl
mov
scas
push
in
cmp
mov
shrb
xor
mov
jb
les
or
imul
fcoml
or
sub
test
push
leave
dec
mov
fstpl
mov
push
fs
ljmp
xor
jle
cmp
jo
mul
out
mov
inc
das
jo
adc
adcl
and
mov
jno
aas
or
shrl
dec
cltd
pop
repz
jle
call
cwtl
int
pushf
push
jp
add
cmp
stos
xchg
sbb
stc
add
inc
push
xlat
and
pushf
outsb
add
jns
sub
aas
lods
cmp
sbb
xor
dec
mov
xlat
cmpsb
push
dec
cwtl
mov
and
icebp
std
imul
jne
jp
in
jl
test
xchg
xchg
jg
scas
xchg
je
xchg
add
mov
in
sti
mov
test
add
rcrb
inc
add
adc
cmpsb
jb
ds
movsl
pop
popa
push
adc
xchg
xor
es
mov
jge
imul
xor
mov
fld1
jecxz
popf
hlt
cmp
jg
push
cltd
add
cmp
mov
shll
pop
jno
mov
ds
out
movsl
push
push
push
fsubrs
pop
xchg
in
cmp
mov
lret
and
pop
xchg
jbe
sub
popf
icebp
pop
mov
adc
mov
pop
mov
push
stc
inc
jmp
mov
sub
dec
enter
sbb
push
mov
and
mov
xor
push
jle
xor
push
stos
cltd
xchg
jp
sbb
adc
call
xchg
jecxz
addr16
mov
rorl
add
repz
popa
outsl
xchg
pop
sbb
or
lahf
jb
mov
add
jb
mov
in
mov
ljmp
out
inc
mov
add
cmp
fiadds
push
lea
fldpi
test
xchg
es
outsl
loop
sbb
out
push
jne
mov
mov
and
aam
lahf
mov
push
add
aaa
fiaddl
mov
leave
jno
test
pop
movsl
mov
iret
lea
int3
sub
pop
ljmp
icebp
clc
test
pop
fadd
inc
mov
int
add
mov
iret
dec
les
mov
in
and
ja
jge
dec
repz
dec
xor
or
inc
clc
cltd
loope
sarb
adc
xchg
ret
sbb
pop
fwait
in
xchg
jle
hlt
xchg
dec
repz
cmp
pop
push
imul
popf
and
out
push
pop
pop
jecxz
lock
fs
test
cli
or
inc
inc
xchg
push
and
sub
jo
ret
jb,pt
xchg
xbegin
or
imul
cmp
sub
dec
outsl
fsubrl
mov
and
cmp
xor
lds
push
mov
cmpsl
mov
push
dec
add
push
enter
outsl
mov
dec
test
fisubl
adc
xor
fisttpl
pop
das
rolb
mov
mov
js
pop
pop
imull
fsubrs
js
lods
push
popa
lcall
push
scas
xor
daa
cmp
and
sbb
inc
inc
cli
mov
shl
and
das
xchg
mov
mov
mov
movsb
ds
dec
mov
fsubrl
sub
pop
mov
sub
cmc
add
xor
xlat
jbe
cltd
sbb
mov
mov
loop
insb
aas
sbbl
jmp
adc
mov
xchg
adc
sub
xlat
out
adc
pop
or
lea
mov
int
adc
test
test
push
aas
xchg
out
out
lret
hlt
and
sub
xor
adc
pusha
pop
jecxz
cmp
sti
imul
push
leave
pop
arpl
jmp
mov
or
adc
adc
into
aaa
jb
pop
into
sbb
test
sub
or
sub
mov
icebp
and
ss
mov
hlt
inc
in
movsl
and
stc
xchg
xchg
xchg
les
rcrb
fisubs
sbb
dec
inc
scas
inc
in
and
pop
addb
push
mov
loope
into
jnp
scas
mov
and
and
pop
inc
mov
imul
mov
in
mov
sbb
in
test
jge
adc
push
push
popf
sbb
std
xchg
aas
rclb
cmpb
stc
push
aas
test
icebp
jp
sbb
es
sub
lock
mov
cld
add
xchg
repz
push
dec
pop
ds
push
leave
xchg
jecxz
loop
lret
outsl
je
dec
iret
pop
nop
jbe
adc
and
pop
xchg
les
js
int
in
adc
dec
add
sarl
dec
imul
adc
arpl
fcoml
dec
adc
mov
pop
or
jmp
inc
in
jns
xor
mov
or
cld
or
jp
add
cmpsl
repnz
daa
push
data16
daa
test
imul
push
push
in
or
scas
int
mov
cwtl
and
xchg
and
cmp
test
in
or
addr16
in
mov
shrb
popf
pop
adc
inc
sahf
aad
das
mov
stc
inc
insb
dec
pop
inc
mov
cld
je
sub
enter
in
push
test
mov
jmp
outsb
aas
frstor
sub
cmp
popf
cmp
pop
or
pandn
test
mov
mov
scas
mov
lods
out
fcmovnbe
fdivrl
nop
push
nop
adc
fiaddl
sub
xor
mov
and
movsl
mov
shrb
in
psrlq
mov
lock
push
scas
and
sti
push
sbbb
jg
loopne
mov
add
call
aam
sbb
jp
into
push
shrb
in
cs
test
mov
out
cmpsb
pusha
loop
cmp
pop
inc
jnp
in
stos
sahf
sub
or
dec
or
dec
ja
stc
pop
jne
out
gs
aam
mov
xor
js
aam
xlat
scas
lods
popf
push
test
lea
out
push
std
loop
pop
cmp
stos
cmp
lret
mov
fcompl
jecxz
je
enter
jmp
inc
mov
xchg
sarw
mov
cwtl
add
cmp
dec
jo
imul
filds
dec
push
dec
or
pop
inc
popa
jmp
int
mov
imull
and
push
jecxz
dec
aad
mov
jge
shlb
sbbb
adc
push
in
enter
mov
test
mov
dec
push
xchg
cli
adc
jae
cmp
pop
mov
sti
dec
mov
mov
mov
adc
jl
or
pop
test
or
cmp
sub
push
mov
sbb
ljmp
push
in
imulb
mov
mov
shrl
inc
ficoml
add
mov
insl
mov
jae
push
testb
fidivrl
mov
mov
shll
out
ds
sub
fsubr
adc
popl
ret
dec
fs
lods
jl
rclb
mov
movb
sahf
into
push
gs
hlt
jecxz
lds
mov
idivl
sti
push
xchg
xor
lea
pusha
xor
inc
mov
adc
lahf
sbb
mov
test
cld
fwait
xchg
dec
sub
sbb
repz
out
push
sbb
rcr
jns
loope
jecxz
int3
test
rcrb
mov
cmp
repz
cmpsb
dec
mov
inc
loope
mov
mov
clc
nop
inc
jle
xor
adc
aaa
xor
mov
test
pop
sbb
pop
orb
out
push
fwait
push
inc
in
data16
in
dec
or
mov
adc
insb
pop
lcall
adc
stos
add
rcr
pop
inc
fimuls
jns
adc
dec
cmovge
or
shll
push
add
jnp
arpl
imul
cltd
sub
push
sub
in
xchg
test
mov
mov
jle
or
pop
sbb
ret
movsb
mov
sbb
xorb
add
sub
pop
mov
pop
pop
shr
add
loop
loope
xorb
out
mov
incb
lahf
aaa
inc
cmp
mov
nop
repz
cwtl
mov
or
add
add
loop
dec
in
outsl
ret
jne
dec
repz
lea
ss
ja
pop
push
mov
pop
inc
mov
jmp
ja
in
pop
aad
inc
add
lds
adc
jnp
sbb
mov
sti
mov
mov
lcall
adc
dec
push
mov
fiadds
xor
dec
add
shll
sub
jg
add
fdivrl
pop
or
insl
xchg
iret
and
inc
xor
mov
stos
sbb
push
lods
mov
out
xor
xor
mov
jae
cmp
cmc
lods
movsb
sbb
inc
fwait
jno
fcompl
mov
dec
clc
sub
dec
mov
mov
xor
jge
push
movsb
jg
xor
fildl
ret
ja
inc
inc
ficoml
mov
repz
pushw
repnz
mov
push
cli
jle
mov
fwait
jp
maskmovq
idivl
dec
int
add
or
and
cmc
inc
popf
in
insl
ror
mov
sub
xchg
mov
push
fs
cmp
lahf
jo
add
pop
or
rcll
xorb
call
sbb
loop
cmp
cmpsl
mov
xchg
inc
aas
and
mov
sub
test
sbb
pop
mov
jg
sub
sbb
fbstp
push
jl
insl
imul
scas
cmpl
cmpsl
add
mov
cmc
outsb
push
xor
out
lock
dec
fs
mov
pop
xchg
cmp
jns
int3
test
push
jb
stc
add
ss
and
mov
int
push
imulb
add
jle
pop
dec
loop
cmc
mov
push
adc
daa
and
mov
jmp
pop
lret
insl
lret
jb
popa
mov
mov
inc
in
and
mov
stos
mov
das
xor
fwait
arpl
xor
inc
neg
gs
dec
dec
popf
dec
push
or
ret
into
lds
push
xchg
sbb
pop
xor
inc
sti
push
std
outsl
int
push
jl
push
setp
loope
sahf
orl
add
stc
fadds
mov
sub
inc
add
ljmp
jo
mov
imul
fcompl
jge
mov
sbb
into
iretw
cld
mov
enter
test
add
cwtl
mov
loope
fstpt
dec
jbe
push
arpl
dec
pusha
fldt
push
popa
or
xor
mov
jno
jo
jg
into
pop
int
xor
stc
repnz
add
lea
dec
call
outsb
push
incl
sub
sub
out
sbb
jns
repz
dec
xchg
jo
scas
xlat
jnp
data16
sbb
into
push
sti
in
mov
and
add
incb
mov
jle
mov
pop
rolb
sbb
ja
lock
loopne
stc
bt
negb
cs
jmp
dec
stos
fs
inc
sub
sub
repnz
jo
mov
pop
sub
jecxz
or
and
mov
daa
sarl
dec
mov
insb
add
sahf
pop
or
pop
mov
dec
test
or
and
pop
lods
js
ss
pop
test
add
sub
icebp
imul
or
cmp
jns
adc
stos
mov
inc
sbb
inc
dec
or
lods
fs
jnp
in
sbb
lret
sbb
mov
movsb
mov
movsl
sub
jbe
mov
dec
push
xor
loopne
jp
pop
test
mov
and
dec
adc
mov
xor
sar
jnp
pop
lock
rol
mov
cmp
sti
jecxz
faddl
int3
lret
dec
lea
leave
cwtl
clc
lahf
or
cwtl
push
mov
cmpsb
xchg
enter
mov
lods
pop
add
ret
in
loop
xor
dec
push
addr16
test
out
push
std
add
in
jae
jge
arpl
inc
loop
add
lcall
cmp
push
std
scas
and
lods
arpl
inc
pop
cwtl
lret
gs
inc
in
sub
lock
shll
or
sbb
stos
xlat
push
icebp
ret
xor
hlt
and
xchg
insl
and
mov
mov
jecxz
adc
xor
int3
and
insl
cmp
push
xchg
mov
cmpsb
push
movsl
fimull
xchg
cmp
test
dec
inc
mov
mov
aaa
xchg
xor
inc
mov
rcrl
idivl
xor
es
xor
inc
mov
cmpsl
or
std
xor
std
aam
aam
jnp
pop
inc
push
cmp
loope
sahf
push
mov
aam
mov
out
adc
xchg
dec
sub
jle
and
sub
add
shrb
popa
popf
xorb
cld
mov
fstpl
cmc
rcrb
out
sbb
jbe
sbb
lret
and
fldenv
inc
insb
inc
xor
ficoml
or
rcrl
and
sarl
cwtl
adc
sub
cmp
divl
hlt
mov
ret
iret
aam
push
ja
cmc
movl
mov
mov
pusha
test
aam
or
or
sahf
sub
lods
or
xchg
jbe
mov
popf
in
fstpl
fwait
enter
outsl
cmpsb
jne
shrb
mov
fisttpl
fimull
sbb
and
sbb
gs
mov
std
frstor
xor
xchg
je
fmuls
mov
pop
scas
mov
xlat
sbb
in
xor
push
fwait
cmc
out
pop
mov
stos
push
dec
sbb
in
mov
shr
add
jb
mov
sub
sub
and
inc
repz
xlat
cmp
jge
dec
rcl
add
ds
insl
mov
mov
shrl
in
rorb
add
mov
mov
test
jmp
loop
rol
mov
mov
jne
imul
mov
jmp
test
loopne
cwtl
and
pop
push
das
pop
lock
push
ret
push
or
add
movd
adc
notl
nop
or
xor
mov
xchg
push
jae
dec
pop
inc
frstpm(287
jne
in
loop
mov
arpl
mov
in
outsb
adc
fdivrp
sub
fisubrs
rclb
loope
pusha
int
jnp
pusha
aas
or
lock
adc
xchg
aaa
mov
ss
mov
in
lcall
nop
pop
aas
leave
and
add
stos
jns
enter
cmovb
cltd
xor
inc
es
repnz
ficoms
cmpsl
adc
loopne
or
std
ret
lock
arpl
jbe
mov
pop
mov
adc
mov
mov
inc
jne
imul
sub
popf
andb
out
add
sbb
cmp
sub
adc
jecxz
jbe
jmp
imul
adc
and
cmp
jbe
add
mov
cmpsl
imul
add
test
jmp
lret
inc
push
orb
in
dec
aam
es
jmp
push
jl
out
in
xor
ja
jge
cld
push
mov
filds
outsb
push
jmp
fldcw
lds
jecxz
ss
mov
and
jmp
mov
out
push
add
push
jno
lds
xchg
daa
xor
mov
and
mov
jmp
insb
mov
mov
scas
xlat
sub
sub
icebp
idivl
mov
xchg
stc
xchg
add
insb
or
sbb
add
int3
cmp
mov
push
xchg
jle
pop
jg
and
pop
add
mov
test
adc
mov
mov
mov
subl
add
outsb
je
push
test
mov
xorb
sahf
pop
repz
jae
xsaveopt
loopne
push
push
jbe
movsl
xchg
imul
cmp
rcrb
int3
mov
ljmpw
nop
jl
ret
mov
push
pop
lea
add
jns
add
fidivl
cli
test
mov
or
push
imul
or
lods
or
push
cmp
push
adc
rclb
clc
outsb
hlt
call
scas
aaa
mov
mov
hlt
push
xor
and
mov
mov
pop
mov
dec
ds
ljmp
movb
cmp
movsb
sub
dec
adc
jnp
add
mov
mov
or
adc
xor
lcall
adc
xchg
jg
add
mov
out
fsubrl
pop
lret
fmuls
dec
push
and
push
lahf
lds
mov
mov
sbbb
inc
sbb
push
fistps
cltd
xchg
ret
and
aas
mov
rcr
in
dec
jae
leave
shl
rcrl
cld
sbb
xor
int3
and
cmpsl
lcall
mov
cmp
xchg
sub
mov
or
sub
or
lret
xchg
insl
or
aad
dec
cli
ret
mov
cmpsl
adc
sbb
cld
pusha
xchg
inc
lea
and
or
jae
mov
and
pusha
sbb
sub
sarl
jecxz
cmp
inc
sarl
cmp
dec
mov
cli
mov
roll
add
movsl
pop
mov
iret
xor
mov
push
or
or
ljmp
cmpsb
sbb
mov
inc
data16
insl
jg
ljmp
fimull
cs
movl
inc
and
mov
push
sbb
xlat
outsl
xor
mov
xchg
cld
push
imulb
jne
data16
out
nop
les
mov
jmp
sbb
scas
jl
or
aaa
sub
fldl
jmp
and
jbe
daa
pop
xor
add
push
add
xor
mov
jl
mov
enter
iret
mov
mov
and
outsb
and
in
cld
or
jmp
repnz
fldcw
cmpsl
popa
add
jle
or
daa
out
arpl
xchg
cmpsl
imul
jno
call
repz
mov
jp
outsl
pop
add
xlat
jb
js
cli
sbb
xchg
cmp
and
dec
aaa
jnp
mov
loope
mov
outsl
push
add
mov
push
jb
inc
dec
cltd
icebp
xor
insl
ror
xor
cltd
cwtl
xchg
sti
or
adc
fnstenv
and
dec
xchg
sub
daa
cwtl
fs
jns
mov
mov
insb
add
test
rolb
sub
dec
popf
fdivp
adc
lock
pop
inc
lods
mulb
jae
adc
repnz
adc
insl
mov
loope
ret
je
mov
loopne
dec
mov
call
sarb
repz
int3
push
scas
dec
dec
insl
mov
push
fisubrl
ret
jecxz
aam
mov
adc
daa
or
push
lahf
into
subl
cltd
push
ds
jnp
sub
pop
out
mov
repz
xchg
mov
cmp
push
mov
sbb
xchg
add
test
dec
sbb
nop
nop
jmp
xor
add
icebp
rorb
xchg
cmpsl
sbb
cmp
lahf
mov
sarl
roll
test
je
aad
and
aad
cli
push
fs
fdivrp
dec
dec
xor
or
cli
in
stc
notb
ret
adc
mov
mov
and
mov
jmp
jmp
add
adc
testl
push
pop
inc
jnp
dec
loope
pop
in
and
xor
jns
or
movsl
fisubl
inc
imul
cmp
pushf
ja
jo
push
enter
negl
je
fmull
adc
lods
test
fmulp
mov
mov
insb
dec
iret
mov
pusha
inc
jne
mov
loop
iret
sahf
pop
les
jae
hlt
aaa
ds
cmpsb
cmp
pop
pop
insl
mov
not
lcall
cmp
test
and
mov
or
popf
push
popf
sub
jg
xlat
cli
mov
or
push
jp
je
pop
push
cmpsl
push
sub
xor
or
cwtl
in
pop
insl
cmp
adc
clc
and
jecxz
cmp
cs
fsubl
mov
test
gs
jno
rcl
in
imul
adc
or
and
xchg
inc
adc
divl
cmp
iret
pop
lds
sbb
push
sub
jmp
cmpsb
imul
mov
xlat
add
pop
cmp
jle
jo
or
add
add
mov
stos
in
mov
inc
sub
je
cmp
sbb
movsl
mov
pop
inc
xchg
dec
xchg
mov
lret
aaa
adc
scas
mov
jecxz
es
cli
mov
fisubrl
pop
aaa
loope
roll
test
movsb
push
xchg
push
xor
hlt
push
lods
imulb
or
lds
jo
xlat
dec
out
or
mov
push
dec
repnz
nop
push
xchg
lds
testb
mov
add
jle
xchg
hlt
stc
cli
movsb
adc
adc
mov
sub
mov
test
mov
int
jl
jmp
cli
loop
cmp
add
add
push
mov
pop
je
cwtl
xchg
loope
mov
and
and
pop
xlat
push
pushf
mov
add
shrb
or
out
or
mov
cmp
notl
in
xchg
sub
iret
add
and
rorb
mov
fdivrl
xlat
fistpl
and
clc
fs
test
aad
ret
mov
das
jl
test
lods
cmp
test
fs
push
or
lahf
outsb
cmp
sub
mov
out
int3
sti
arpl
jb
adcb
test
xchg
push
sti
movsl
dec
mov
sub
mov
mov
mov
dec
pop
gs
insl
push
and
jp
xor
je
add
ret
in
stc
mov
and
or
or
inc
adc
push
leave
ja
orl
sub
jne
mov
fwait
call
adc
inc
aaa
enter
add
add
subb
fstpl
dec
js
xor
or
cmp
into
pop
and
adc
mov
stos
mov
or
xchg
xor
lods
dec
les
loopne
jmp
lret
add
cmpsl
cltd
jl
jne
sarl
jl
sar
pop
daa
sbb
jmp
rcrb
xchg
mov
inc
lods
cld
jbe
gs
sub
or
xchg
imul
test
jo
adc
push
mov
test
mov
mov
pop
pop
pop
jne
stos
imul
test
sub
and
xor
push
sub
orb
adc
mov
loop
test
fs
pop
pop
and
lret
cmp
stc
sbbl
nop
sbb
sub
fdivrl
scas
and
cmc
daa
rol
repnz
mov
and
mov
jmp
rorb
xchg
aas
clc
push
insl
in
fldl
sbb
adc
shrl
cwtl
movsb
loope
lock
in
push
xchg
hlt
sub
mov
jle
popa
scas
adc
arpl
cmp
push
mov
sub
pop
and
sub
das
sub
jmp
gs
add
or
lea
je
inc
push
xchg
sti
sbb
sti
jecxz
mov
je
lret
sub
rolb
cli
xor
jl
cmpsb
frstor
arpl
test
ror
das
cmp
jge
dec
inc
sbb
je
std
xlat
scas
stc
dec
sub
shr
push
fadds
sbb
and
insl
pop
adc
daa
jecxz
pop
cltd
cmp
das
addb
adc
inc
test
mov
lret
dec
xor
lret
xor
std
sub
fcompl
dec
mov
js
sahf
push
cmp
int
sbb
ret
test
dec
data16
push
xchg
sub
cli
insl
add
push
xor
flds
std
adc
jbe
add
frstor
sub
xchg
jecxz
add
push
pop
or
lods
xor
mov
jns
mov
aaa
push
add
andps
out
pop
sub
and
inc
push
adc
lock
jmp
jo
mov
cwtl
dec
add
scas
and
sub
les
and
movb
fadd
popa
mov
test
and
xor
push
jbe
xchg
nop
icebp
std
add
adc
dec
dec
mov
aaa
xor
inc
xor
jbe
das
push
lods
mov
or
pop
jmp
mov
and
roll
sub
cld
arpl
cwtl
lret
test
inc
ret
mov
pop
push
push
xchg
and
rcrl
jb
leave
adc
jp
adc
std
pop
ss
pusha
xchg
dec
xlat
lret
outsb
rolb
sbb
ret
push
sub
mov
push
addr16
add
leave
repnz
hlt
jl
leave
mov
pop
add
jns
add
loop
push
pop
in
gs
js
orb
xchg
pop
cmp
mov
mov
enter
mov
or
test
stc
jmp
fwait
sbb
and
mov
test
repnz
inc
test
imul
out
iret
mov
sub
push
jo
mov
push
xchg
loope
into
roll
or
cltd
pop
sbb
mov
bound
mov
stos
in
sub
fbstp
mov
mov
aas
push
inc
shll
push
xor
insb
rcr
mov
jne
cs
jae
mov
jbe
fnstcw
sub
dec
pusha
jae
mov
outsb
aas
mov
cmp
mov
lods
out
daa
mov
pop
ds
sub
loop
sub
dec
test
ljmp
dec
je
lret
and
jecxz
xchg
andl
push
and
test
lock
cmpb
adc
arpl
fsts
mov
iret
leave
cld
js
jge
cmp
cli
stos
add
sbbl
sbb
test
mov
jo
int
jge
push
pop
dec
js
pop
push
mov
mov
jle
clc
adc
sbb
in
daa
push
mov
data16
adcb
sbb
inc
cmp
push
repz
ss
std
push
sbb
jg
adc
insl
int
pop
cmc
and
cwtl
movl
in
pop
outsb
fcompl
ja
cmp
into
lea
cmc
mov
in
mov
push
movb
int
xchg
subb
xchg
arpl
mov
in
das
lahf
bound
lahf
add
pop
mov
lahf
dec
or
push
data16
sbb
ret
icebp
sub
ret
or
lret
out
xor
push
jnp
repz
push
xor
outsb
jae
xchg
xchg
ret
decb
and
add
insl
inc
jae
cmp
jg
push
clc
dec
mov
das
sub
fsts
mov
stc
jg
addr16
stos
mov
dec
cmp
jge
imul
cmpl
aas
iret
mov
push
or
scas
test
in
add
sbb
cmp
xor
push
jmp
or
insl
inc
aad
stos
pop
mov
push
lock
cmc
loop
push
out
sahf
sbb
mov
adc
or
popa
mov
bound
das
add
cltd
int3
push
iret
test
les
lret
aam
push
mov
adc
sahf
xchg
dec
push
sub
sbbb
inc
and
push
adc
loop
cmpsl
xchg
inc
dec
loopne
add
fadds
ss
pop
stos
xchg
test
mov
lods
pushf
into
cmp
cmp
mov
data16
leave
lock
loop
jmp
jle
scas
xchg
push
and
inc
inc
movsb
mov
stos
or
mov
jmp
jmp
cltd
bound
or
fdiv
sub
test
add
sub
sbb
js
and
mov
scas
mov
test
mov
dec
aad
arpl
inc
das
pushf
mov
pushl
pusha
cwtl
sub
pop
in
mov
jmp
outsl
or
jmp
xor
xchg
mov
sub
loopne
data16
jbe
inc
xor
and
or
sub
jnp
lea
xchg
sbb
hlt
xchg
es
pop
adc
jecxz
outsl
cmp
jecxz
cli
sbb
inc
pop
and
int3
jo
pop
push
stos
mov
sti
push
cmc
mov
test
shlw
stos
add
and
inc
sbb
das
nop
push
daa
sahf
int3
inc
push
xor
inc
jg
aad
dec
and
mov
lret
mov
jnp
ror
in
jnp
adc
cmp
mov
xor
push
and
add
mulb
loopne
iret
and
cmp
add
cli
jo
lock
pop
sub
sub
and
data16
into
push
jge
sub
xchg
stos
das
inc
pusha
and
lods
pop
fisttps
cmpsl
cmc
cmpsb
xor
xchg
xorb
adc
lcall
repz
pop
mov
pushf
xchg
jl
mov
or
inc
sbb
daa
fdivl
ret
dec
out
pop
sub
sti
mov
fcoms
sub
nop
shl
sbb
and
jl
adc
out
mov
or
jae
outsl
adc
cmp
jl
push
pop
es
jecxz
push
xchg
scas
jecxz
mov
push
outsl
add
jle,pt
dec
cld
mov
jno
jp
jl
mov
jnp
movsb
xchg
sub
push
leave
ja
imul
xchg
adc
mov
push
test
xchg
pop
pusha
and
push
imull
mov
test
rolb
mov
mov
movsl
adcl
add
mov
mov
add
test
and
int
xchg
push
pop
imul
cmp
mov
testl
pop
jae
inc
inc
or
lahf
push
pop
xchg
push
cmp
dec
sub
add
das
push
call
repz
and
jae
iret
or
frstor
inc
cmpsb
dec
xchg
or
adc
cmpsb
pusha
mov
enter
lods
sti
sbb
incb
mov
loopne
out
fcoms
pop
xchg
xor
jo
pop
sbb
push
push
mov
add
mov
inc
mov
jp
push
jno,pt
push
dec
mov
orl
shll
idivl
inc
outsl
adc
mov
xchg
imul
icebp
out
fmul
sahf
jo
or
movl
pop
cmp
push
int3
push
cmp
in
or
outsl
cs
mov
scas
xchg
arpl
pop
and
jne
daa
shrl
mov
out
cld
sti
fdivs
mov
scas
dec
test
rep
inc
jno
push
in
out
sub
loopne
push
push
ja
out
mov
pop
adc
and
xor
xor
es
sbb
jle
jbe
in
inc
in
xchg
xchg
sbb
dec
sbb
test
aam
push
insb
fnsave
dec
mov
hlt
mov
arpl
in
mov
rcrl
jecxz
push
aam
mov
cld
push
xchg
add
lods
adc
lret
fs
test
xchg
sub
icebp
pop
lcall
fdivl
mov
mov
pop
sahf
pop
mov
or
add
lods
in
push
ret
lock
jnp
xchg
pop
loop
iret
cmp
popa
aad
dec
jmp
test
fwait
push
lret
ret
shll
mov
or
mov
scas
aaa
mov
out
sub
dec
pop
or
clc
fsubs
enter
mov
and
push
mov
inc
dec
pop
push
xor
add
pop
ret
and
mov
mov
push
out
dec
in
push
call
pop
jp
repnz
mov
pop
fisubl
stos
add
clc
jecxz
enter
rolb
ja
lods
pop
test
and
fcoml
xchg
dec
push
inc
push
sbb
sbb
inc
inc
mov
in
sub
jo
shrb
aas
je
imul
inc
fsubr
out
or
rcrl
mov
or
shlb
adc
push
mov
dec
into
jae
mov
pop
cli
pop
xchg
repz
pop
rclb
adc
into
mov
rcll
xchg
add
ss
popf
scas
mov
cmc
mov
and
or
sahf
shrb
jo
mov
fidivl
push
in
sbb
mov
ret
and
dec
into
cli
data16
adc
lods
adc
mov
sub
cli
lcall
ret
in
cmp
in
cmp
out
jb
xchg
dec
sahf
repnz
decb
ss
and
xchg
stc
cmp
sbb
iret
test
fisttpl
push
push
js
fdiv
fiadds
addr16
fs
testb
mov
adc
negl
add
xor
pop
xchg
cmp
je
cs
lret
jecxz
cld
dec
or
lcall
jmp
pop
dec
popa
jle
int3
lock
pop
ds
jbe
push
in
jl
aad
fstp
scas
push
into
aaa
xor
xchg
add
lods
dec
jbe
pop
fcoms
fcmovne
shll
movsb
xchg
mov
and
pop
lods
mov
xor
lds
mov
push
lret
out
int
xor
or
jmp
lret
inc
mov
mov
and
mov
lret
nop
mov
xor
dec
mov
pop
pop
push
fistpll
sbb
daa
mov
scas
jg
pop
imul
test
jp
lret
clc
aas
ret
cmp
inc
fimuls
test
mov
jo
jnp
mov
xchg
cwtl
mov
mov
mov
scas
shlb
and
pop
adc
hlt
xor
in
cmp
push
mov
xchg
jae
and
sub
sti
xor
jb
mov
loopne
dec
aaa
mov
sub
rclb
xor
aad
out
mov
cld
jb
mov
loop
and
cmpsb
xchg
xor
fwait
and
scas
pop
or
and
mov
dec
xchg
xor
stc
adc
lods
test
stos
xchg
mov
iret
pop
loope
inc
in
outsl
sub
les
adc
lds
mov
and
adc
mov
adc
cmp
inc
xor
imul
or
pushf
nop
test
fsubrs
lods
inc
cld
aad
fildl
mov
and
xchg
adc
xor
leave
ret
push
pop
decb
mov
sahf
pop
add
mov
jl
popa
mov
dec
jns
sbb
repz
iret
pop
adc
push
xchg
jl
std
or
ret
imul
cwtl
add
mov
push
pop
repz
daa
aam
jo
push
sub
mov
and
lea
xlat
push
rcrb
xchg
sub
stos
rolb
mov
cmp
mov
test
xor
xchg
imul
leave
jge
xor
adc
add
cmovp
loop
imul
fisubrs
dec
dec
into
lds
aad
cltd
cli
decl
mov
xchg
dec
inc
dec
mov
lret
fsubp
push
push
test
or
fldl
dec
mov
and
into
es
outsl
test
pusha
dec
dec
out
repz
pop
jnp
and
push
push
push
mov
and
dec
je
call
xor
leave
fdiv
lahf
xor
and
out
hlt
mov
cmp
adc
add
mov
lods
mov
decl
or
dec
clc
scas
adc
mov
stos
leave
inc
cmp
pop
adc
outsb
pop
lock
and
add
adc
mov
mov
test
cwtl
jnp
pusha
fiadds
cmp
jp
int
cmpsb
test
mov
scas
mov
mov
sub
cmc
adc
das
cwtl
adc
imul
shr
test
xchg
loope
vmwrite
lock
nop
loopne
inc
leave
cmpsb
fiaddl
movsb
gs
pushf
jbe
shrb
das
add
pop
mov
xor
jnp
cld
test
rolb
jg
stc
xchg
enter
or
dec
mov
jecxz
lret
mov
mov
adc
call
xor
test
call
rorl
ffreep
dec
mov
sbb
aam
daa
fmul
clc
push
or
xchg
nop
add
cltd
pusha
std
jns
jnp
ds
xchg
aad
pushf
pop
gs
xor
out
int
popf
fwait
test
add
mov
aas
xchg
jnp
mov
mov
mov
inc
push
stos
divl
cmp
fildl
mov
jmp
or
ja
xor
pop
das
in
and
cld
shlb
cmp
rolb
xchg
mov
push
es
test
ss
xchg
aam
xor
xor
adc
mov
out
cmp
out
gs
xchg
mov
jg
pop
pop
cmpsb
sub
adc
cmpsl
jl
out
clc
iret
movl
cltd
inc
dec
test
sbb
adc
sbb
mov
sub
addl
push
dec
inc
sub
popa
mov
inc
cltd
push
aam
imul
int
adc
popa
xchg
push
xchg
xchg
jmp
scas
clc
js,pn
loopne
cmc
dec
mov
mov
mov
or
iret
xor
test
inc
movsb
es
fwait
in
loop
jp
cltd
scas
dec
fstp
inc
pop
repnz
xchg
mov
mov
mov
lea
jmp
pop
lret
cmp
pusha
or
popf
mov
ficompl
test
dec
pmulhuw
stos
pop
inc
clc
jb
xor
sti
inc
ds
pusha
sbb
fmull
add
ss
call
adc
cwtl
addr16
mov
dec
out
out
adc
fstps
sbb
shlb
push
cmp
xchg
mov
mov
shlb
mov
push
pop
mov
inc
lea
filds
mov
das
xchg
pop
sub
rorl
mov
dec
test
cmc
xchg
jecxz
ljmp
aam
push
xchg
cli
je
sbb
sarl
std
dec
enter
cs
or
mov
rcll
mov
scas
mov
outsl
mov
adc
sub
mov
insl
jl
jecxz
dec
call
pushf
out
push
and
lock
in
and
inc
out
jle
fs
fwait
out
add
mov
and
int3
inc
sti
pop
aam
shlb
pushl
pop
push
and
xor
lret
push
and
pop
jecxz
and
lahf
cltd
sub
bound
mul
mov
mov
movsl
dec
sub
addr16
push
cli
sbb
xor
scas
jecxz
inc
mov
aam
sbb
repnz
dec
jo
mov
ret
mov
sbb
cmp
jmp
gs
adc
push
lcall
xorb
fidivrs
pop
xchg
sbb
data16
ljmp
mov
aam
repnz
out
vcvttps2qq
pop
mov
push
push
fldcw
jbe,pn
fs
repz
jp
mov
pop
cld
mov
outsl
mov
cmc
out
sub
mov
test
jle
inc
cmp
pop
jp
mov
mov
int3
popa
mov
ss
lds
mov
lock
and
adc
in
ja
xchg
enter
push
aad
andl
ret
sub
sti
ja
cmp
xor
sub
mov
test
sbbb
call
fnstenv
xorb
loope
cmp
cmp
lods
fcomps
inc
jb
das
xchg
icebp
jp
mov
mov
arpl
and
cltd
loop
movsb
push
sub
pop
ret
pushl
cmp
inc
push
hlt
data16
mov
jecxz
int3
fs
in
add
and
push
bound
pop
sti
ret
popa
shl
loope
fwait
out
test
xchg
inc
jnp
push
or
fcoml
adc
mov
in
cli
sub
sub
mov
int3
lock
mov
data16
fdivrp
push
mov
addb
das
adc
clc
mov
dec
and
cmp
mov
push
jo
and
and
push
out
jle
je
mov
push
jl
sahf
in
test
mov
pop
je
xor
test
xlat
xchg
push
cltd
cmpsl
addr16
dec
jno
in
mov
push
and
push
fs
cmp
rcll
mov
insb
push
mov
movsw
fsubs
clc
cmp
scas
pop
pop
push
nop
rcl
and
in
add
fstpt
rorl
xchg
push
loope
test
ss
sbb
pop
pop
shl
testl
pcmpeqd
outsl
pop
sub
inc
dec
ret
or
mov
dec
pop
xchg
mov
addr16
cltd
or
dec
inc
mov
inc
sbb
inc
or
mov
out
scas
cmc
jle
lahf
lret
inc
adc
mov
popa
mov
filds
ja
pop
cmp
lcall
mov
xchg
jnp
pop
adc
in
jb
scas
les
inc
mov
test
pop
mull
mov
push
cmp
iret
dec
dec
add
sbb
mull
subl
scas
mov
cltd
imul
dec
lea
mov
jno
mov
and
imul
inc
inc
pop
xchg
mov
fs
data16
add
inc
ljmp
dec
fimull
cmpsb
sub
or
cmp
sub
inc
and
inc
mov
in
popf
test
imul
rcrb
inc
call
fdivrl
inc
or
shr
leave
mov
mov
mov
or
nop
cmpl
push
imul
lahf
lds
arpl
test
push
cmp
xchg
ds
fisttps
mov
mov
test
cld
outsb
xor
fildll
pop
pop
aas
lret
fimull
mov
outsl
iret
aaa
mov
sbb
xorb
cmc
jg
jl
adc
aas
mov
xlat
mov
sbb
jmp
lret
fsubp
mov
sbb
adc
ds
mov
and
out
call
jb
lret
and
dec
orl
jp
fwait
xor
loope
fs
int3
mov
jle
or
hlt
pop
xchg
push
iret
inc
test
mov
stos
sbb
shl
movsb
cltd
mov
xor
insb
cs
sti
jp
adc
lcall
xlat
dec
popl
mov
sub
cld
flds
pop
pop
fwait
sbb
repnz
xrelease
push
cwtl
lods
es
push
sbb
mov
fisubs
pop
lods
nop
inc
arpl
adc
xchg
pop
mov
pop
div
imul
push
repnz
inc
fisubl
push
pop
inc
jmp
push
push
mov
test
inc
mov
orb
push
mov
leave
mov
lret
cwtl
jg
lahf
nop
out
fsubs
movsl
dec
sahf
inc
add
mov
fwait
xor
inc
xchg
mov
shll
imul
ja
mov
mov
rcrl
lds
xchg
insl
xchg
mov
pop
orb
inc
or
push
lret
dec
out
mov
cmpsb
add
sahf
adc
into
inc
and
arpl
xchg
psrlq
jl
adcb
xor
cmp
lds
mov
call
leave
sbb
inc
push
xor
push
jns
mov
mov
pop
jno
loope
lret
rol
popa
jns
sbb
ret
jp
fwait
mov
xchg
inc
sbb
inc
adc
mov
stos
mov
divl
mov
sub
in
outsb
mov
cmpsl
cmp
sbb
dec
lahf
mov
sbb
mov
sub
arpl
xchg
aad
lea
pushl
lods
push
jge
xchg
repz
sbb
fildl
out
in
sub
in
mov
or
inc
mov
mov
lahf
sbb
adc
adc
mov
in
cmpsl
insl
nop
addl
dec
mov
fmulp
bound
inc
xorb
mov
and
jbe
cwtl
int3
pop
push
cmc
jmp
push
pop
dec
movsb
ret
inc
pop
or
adc
popf
std
ret
es
mov
enter
inc
mov
xor
test
mov
add
cmp
and
iret
push
imull
inc
mov
movsb
scas
lret
rclb
subb
cmp
xlat
addr16
iret
pop
or
js
js
sarb
aam
adc
cmp
addr16
pop
and
jecxz
fldl
and
adcl
xor
icebp
aam
pop
imul
cmpsl
lcall
dec
outsl
mov
push
mov
lcall
xchg
pop
movsb
jp
mov
enter
imul
mov
cmpsb
lea
ret
jno
jmp
out
mov
mov
je
ds
mov
scas
pop
out
mov
ja
out
leave
sub
mov
mov
scas
jg
cwtl
imul
leave
jo
aad
aad
cmp
repz
mov
fisttpl
in
sub
xor
loop
fsubs
pushl
andl
es
ficoml
cmpsb
arpl
dec
xor
sub
mov
inc
enter
add
movsb
ret
pop
inc
incl
jno
stc
push
cmpsl
into
mov
hlt
popa
push
xchg
dec
mov
pusha
xchg
xor
jno
xorb
jno
push
push
sahf
ret
cmp
xchg
cmp
cmp
sub
add
mov
mov
xor
dec
fstl
jl
pop
add
jge
mov
jbe
inc
and
call
outsl
mov
into
add
movsb
xor
cltd
jmp
mov
mov
fisubrs
call
mov
pop
jmp
lret
test
push
daa
and
fwait
rolb
imul
rcl
cmp
lcall
push
push
add
aas
fdivs
cld
pop
xchg
mov
xchg
xorb
cld
adcl
mov
in
jecxz
add
jp
decl
add
fldcw
xor
je
inc
and
dec
push
dec
jle,pt
ss
js
or
xor
xchg
mov
jmp
xchg
sti
xchg
lock
xchg
fstpt
cwtl
jp
push
dec
mov
inc
jmp
aaa
mov
xchg
or
pop
mov
in
mov
mov
lea
push
push
dec
iret
fxch
push
icebp
push
lret
lds
les
jnp
fstl
cmpsb
adc
push
fwait
add
pop
mov
xchg
call
lret
ljmp
jne
frstor
fs
loop
xchg
bound
or
movsb
jl
mov
adc
xor
dec
lcall
outsb
repnz
xor
jg
daa
testb
xchg
push
outsl
pop
inc
addr16
mov
ja
test
lds
mov
jb
das
xchg
ret
mov
mov
cmpsb
aam
pop
push
mov
adc
pusha
pop
or
add
in
lods
loop
addr16
push
mov
divl
push
icebp
das
dec
push
jge
int
and
scas
xor
notl
xor
push
push
insl
sbb
jb
cmpsb
sub
gs
and
dec
inc
and
fstpl
shr
out
jmp
movsl
mov
sub
scas
shll
jbe
stos
push
jl
mov
adc
push
mov
and
adc
push
rcll
popa
inc
xchg
insl
push
sbb
repnz
fidivs
xor
add
pop
sbb
pop
test
les
je
push
in
fimuls
or
pop
pop
scas
mov
fcomi
xchg
daa
shll
sbb
pop
hlt
imul
push
lahf
dec
inc
mov
mov
mov
cmpsb
pavgb
push
jae
lock
rcrb
xlat
das
sub
mov
imull
out
arpl
or
rorb
pushf
sub
arpl
cmp
jl
std
jp
push
cmc
mov
mov
fsubl
outsl
mov
sbbl
push
out
shll
leave
cmp
leave
sbb
cltd
cmpsb
mov
pop
les
lret
jno
out
pop
xor
repnz
adc
iret
push
shl
mov
mov
pop
sub
pop
out
add
jecxz
add
rclb
das
rcll
add
push
push
push
pop
fxch
int3
cmp
jg
lahf
adc
jb
scas
and
jmp
add
lock
aad
insb
lods
repnz
movsb
push
jnp
adc
mov
pop
push
xchg
test
mov
fucom
icebp
jne
mov
js
imul
repnz
push
ss
push
mov
shlb
aam
into
dec
in
mov
xchg
xchg
dec
cwtl
shlb
ficompl
jecxz
cwtl
pop
out
aas
enter
mov
scas
sbb
cli
ds
loop
in
int
push
fsubr
lock
xchg
jno
loope
fndisi(8087
add
gs
inc
in
sub
into
ret
dec
xor
and
sub
sbb
stc
jae
xchg
jno
and
scas
out
and
in
pop
mov
xor
adc
rcrb
pusha
xchg
adc
xchg
inc
xor
xchg
inc
xor
cwtl
or
and
ss
jne
xchg
fwait
inc
dec
into
cvtpi2ps
cmp
dec
outsb
ja
pop
lds
in
shlb
inc
push
xor
ficoms
push
inc
mov
xchg
inc
addl
jns
les
movsl
divl
lcall
jno
out
pop
notb
hlt
xchg
xchg
lret
in
in
aas
mov
enter
push
push
shl
sub
dec
lea
mov
pop
pop
sbb
loopne
or
cmp
fistpl
or
call
dec
cli
inc
out
lret
adc
mov
dec
stos
xchg
popw
fiadds
sbb
sub
jle
cs
jbe
into
dec
xchg
jecxz
cmp
and
aad
inc
or
push
cmp
insb
pop
add
xor
mov
imul
jo
stc
adc
repnz
ss
ljmp
mov
push
jb
scas
outsl
ds
scas
jbe
jp
sbb
call
xchg
nop
inc
movsl
push
and
icebp
ljmp
lret
jb
push
sub
and
or
hlt
inc
xor
pop
iret
sbb
xchg
out
and
sahf
out
pusha
mov
mov
bound
shll
movsb
dec
mov
rcrl
lret
lock
push
mov
sahf
xorl
xchg
iret
cmpsb
or
mov
sbb
dec
push
cmp
push
rcr
fcomip
insb
loope
aaa
ja
cld
sub
cmpsb
lret
jno
sub
loop
aas
cli
sub
push
or
sarl
pop
pop
aaa
lods
addr16
clc
popl
and
js
mov
and
sub
mov
or
lahf
scas
int3
mov
lret
ds
mov
xor
imul
mov
data16
cmp
test
cwtl
fwait
cwtl
ret
int3
xchg
cltd
sub
xor
test
jns
push
lods
push
stos
and
subl
sbbb
add
cmp
add
outsl
xchg
jo
fidivrs
in
cmp
loopne
mov
aad
inc
movsl
xor
pop
movsl
xor
rcrl
push
cld
mov
in
pusha
jns
push
repz
imul
dec
in
pop
shll
pop
scas
cmp
loope
gs
add
imul
pop
sub
mov
fiadds
or
sti
add
int
jp
cld
aam
mov
repz
fdivrs
mov
mov
cmp
jmp
js
call
jns
xor
dec
cmp
sbb
ret
leave
cld
das
xchg
cmp
adc
push
stos
lcall
cmp
lods
inc
out
out
cmc
sti
jae
lods
inc
sub
lock
rcl
mov
mov
add
xor
add
call
xor
or
push
insb
jecxz
cmp
jl
rolb
testl
xor
mov
xchg
mov
and
jecxz
add
mov
pop
or
mov
lret
dec
movsl
iret
xorl
repz
jp
fsub
lcall
inc
add
lea
mov
jb
xchg
xchg
bound
mov
jnp
xchg
cmp
mov
mov
aam
orl
mov
pushf
mov
cmpsl
jae
xor
in
dec
dec
jle
sub
push
out
lcall
and
daa
std
cmp
mov
imul
iret
arpl
aas
pop
aam
outsl
pop
xor
jne
ret
push
push
mov
mov
sub
cmp
xorb
rclb
pop
wrmsr
sarl
mov
pop
negl
xor
pusha
xor
pop
cltd
clc
call
pop
rcrl
ss
xchg
js
cli
inc
pop
adc
push
xor
test
pop
test
pop
jbe
xor
mov
bound
in
or
mov
mov
mov
aaa
sbb
xor
imul
fs
pop
lret
add
sahf
xchg
mov
aad
lret
cmp
scas
loop
cmp
add
in
test
inc
je
mov
pusha
jp
andl
ljmp
out
repz
shll
leave
iret
int3
fs
and
push
pop
sbbl
in
cwtl
aas
imul
sbb
jno
sbb
outsb
inc
mov
movsl
out
add
and
pop
and
repnz
inc
mov
pop
mov
sub
mov
pop
popa
add
loope
dec
pop
push
xlat
and
and
mov
test
cld
fcom
and
cmc
sub
repz
andb
xchg
mov
std
stc
fwait
push
lods
push
mov
sbb
and
cmc
bound
movb
cmp
cmc
notl
jecxz
push
out
xchg
jge
sbb
adcb
jle
push
sbb
pop
pop
subb
loopne
ljmp
js
lcall
mov
aaa
jbe
sarl
frndint
jmp
sti
cmp
push
lret
mov
cmp
lret
mov
adc
dec
mov
sub
pop
push
jecxz
scas
or
mov
xchg
push
mov
or
ljmp
into
enter
push
sub
mov
jmp
int3
add
xor
ja
daa
sahf
cmp
add
push
cmp
jp
incb
inc
aaa
xchg
pusha
out
xor
repnz
adc
es
fnstenv
lahf
pop
cmc
inc
sarl
call
xchg
stos
mov
dec
push
sbb
decb
or
jns
mov
inc
iret
fcompl
js
dec
out
pusha
aaa
lahf
loopne
dec
je
out
aam
dec
pop
test
add
sbb
or
push
int3
or
loopne
fs
inc
xchg
aad
orb
mov
mov
rcr
mov
adc
mov
sbb
pusha
inc
push
lea
test
mov
inc
xchg
cmc
xchg
in
add
mov
addr16
jg
adc
push
inc
pop
stos
imul
pop
inc
cmp
lods
push
call
mov
insb
pop
mov
pop
sub
push
pushf
push
inc
add
xor
xor
mov
pop
insl
push
push
inc
pushl
add
lods
mov
lock
pop
or
cmc
cmp
or
cmpsb
push
repz
faddl
lds
jle
fs
clc
movsl
push
cs
sbb
out
cld
dec
cmp
add
lcall
sar
xchg
and
aas
sarl
cltd
shll
cmp
xor
icebp
dec
and
lods
test
fldl
mov
lret
push
mov
sbb
mov
mov
push
mov
icebp
inc
shll
sub
ja
mov
mov
std
pusha
dec
cmpsb
push
scas
scas
push
mov
sar
imul
scas
std
sbb
adc
and
add
sub
cmpl
add
popa
mov
and
sbb
jg
cmp
jmp
insl
dec
cli
push
adc
lea
pop
xor
gs
loop
fidivs
pop
out
int3
sub
es
push
sbb
pop
imull
mov
addr16
sbbl
add
jg
mov
in
dec
xchg
call
cld
movsb
xor
arpl
popa
sbb
pop
sahf
fistpll
xchg
cmp
push
movsb
pop
push
shl
cmc
xchg
or
loop
sub
push
popa
inc
inc
mov
insb
push
adc
inc
arpl
aad
jmp
movsb
or
xchg
mov
outsb
dec
jle
shl
mov
push
cs
dec
fbstp
adc
fimuls
frstor
cmp
adc
lret
jne
push
add
js
fiadds
pop
aas
nop
mov
cmp
cli
icebp
mov
sub
add
add
out
jo
push
imul
lock
out
adc
enter
insb
lds
jae
push
ljmp
js
jp
pop
fdivl
pop
pop
pusha
cmp
rorl
adcl
push
jns,pn
mov
outsl
jmp
sbb
cs
cmp
dec
jp
dec
jle
adc
sbb
adcw
sbb
sti
add
cmpsl
lods
in
int
mov
rcr
scas
push
outsb
ja
test
aad
adc
pop
or
enter
xchg
cmpsb
mov
dec
pop
out
xor
sub
jle
clc
subb
js
or
lock
fildll
xor
mov
in
push
sub
push
or
cmp
hlt
ds
mov
jns
clc
rcrb
dec
dec
pop
mov
bound
inc
shlb
popl
in
and
dec
dec
jae
les
in
jmp
cmp
sbb
adcl
mov
fsubl
and
adc
pushf
lret
mov
fldt
aas
push
mov
hlt
popl
or
push
adc
xor
sbb
sbb
fsts
inc
fildll
clc
sti
pop
pop
les
fstpl
not
xlat
in
ds
popf
outsb
fcmovnu
cmp
loope
push
cmp
in
cwtl
fmull
es
pushf
jae
mov
or
ds
repz
das
push
data16
push
rolb
mov
icebp
cmp
inc
or
ja
jp
movsb
mov
xchg
pop
sub
pop
hlt
into
pop
jne
cmpsb
test
cmp
sub
sub
clc
mov
push
cmpsl
fnstsw
mov
jo
ljmp
pop
fidivrl
jmp
outsb
or
xor
outsb
fs
mov
sub
jns
jp
out
test
ret
inc
sub
jnp
add
repz
cmp
push
loopne
push
sbb
push
mov
pushf
into
xlat
fstpt
xchg
stos
jmp
pop
jle
js
cltd
sahf
aas
add
lret
outsl
rcrb
mov
cltd
sub
push
out
sbb
fsubl
addr16
pop
push
xor
in
mov
sub
ja
jb
jb
push
ret
push
sub
xchg
cwtl
rorl
mov
in
sbb
cltd
jb
daa
loopne
jne
sarl
lods
mov
ret
js
inc
jbe
cmp
in
ret
mov
rcrl
push
loopne
dec
test
jl
pop
pop
jmp
mov
aas
jp
xor
sbb
std
std
mov
lret
jg
sub
icebp
push
xchg
sub
push
subl
fnsave
mov
xor
or
pop
mov
stos
mov
outsl
and
or
mov
mov
daa
es
aad
jae
mov
shlb
jge
cmp
xchg
and
mov
push
mov
mulb
ja
jno
adc
hlt
mov
jmp
and
xor
pop
mov
int
mov
add
mov
push
sub
mov
dec
hlt
lcall
ja
loop
push
jecxz
inc
scas
fdivs
loop
lds
xchg
lcall
lret
aas
dec
jne
pushf
add
adc
test
sub
or
pop
cmp
add
adc
cmp
das
enter
nop
in
jae
addr16
mov
out
mov
push
sub
cmp
nop
fistps
ret
std
xchg
xor
cmpsl
push
xor
mov
into
call
ja
and
mov
sbb
dec
push
aaa
pop
jp
jp
lock
mov
dec
scas
ror
xchg
jo
scas
out
mov
jg
rcr
icebp
cmpsb
adc
and
xor
xor
inc
jl
icebp
jg
cmp
shrl
mov
jns
jae
sbb
lahf
lock
add
or
xor
into
jge
fnsave
loope
jmp
clc
sbb
subb
sub
xchg
cmp
xor
js
cmp
in
sarb
js
out
mov
pop
aas
shlb
loop
addr16
mov
inc
cmp
shrl
je
mov
or
lcall
shl
dec
jl
dec
mov
mov
sahf
call
push
arpl
sti
repz
add
inc
mov
das
xchg
jge
mov
dec
mov
sub
adc
pop
stos
push
movsl
add
sub
pop
popa
stos
inc
rorb
cmpsb
cmp
dec
add
xor
pop
mov
popf
rcll
adc
inc
clc
and
dec
shlb
test
pop
sub
adc
mov
mov
out
add
mov
lret
inc
leave
mov
cmp
je
inc
test
lret
pusha
popa
sub
in
pop
adc
mov
orb
fldl
lahf
xchg
js
cmp
rolb
stos
cmpsb
cli
out
and
hlt
arpl
lret
and
push
in
lahf
pop
or
call
jae
data16
aam
pop
xchg
stos
sbb
xchg
pusha
je
lock
cmp
lea
nop
aaa
lods
mov
test
jmp
mov
inc
cwtl
jecxz
xchg
cs
inc
sti
ffree
aaa
pop
add
ret
mov
jmp
es
mov
aas
inc
test
jne
xor
gs
xlat
adc
jae
cmpsl
mov
push
xchg
imul
call
fisubrs
fstpt
leave
hlt
ret
xchg
xor
xchg
scas
imul
xor
and
ja
cmp
fwait
daa
stos
xlat
push
inc
in
out
inc
gs
xlat
or
pop
pop
push
sub
sub
lds
sahf
int
mov
femms
sbb
push
sub
xchg
repnz
adc
mov
test
call
fstl
and
call
lds
iret
enter
xor
lods
pop
cmpsl
push
and
fdivs
movsl
or
or
mov
cld
imul
mov
jmp
sbb
pop
mov
and
or
scas
jbe
filds
mov
xorl
testl
cmp
push
xchg
lods
push
ljmp
xor
mov
and
xchg
imull
add
punpcklwd
fildll
push
mov
xchg
insb
mov
dec
mov
lods
xor
mov
fildll
lahf
pop
rcll
sub
dec
in
aaa
test
sti
in
mov
add
mov
jg
mov
gs
dec
jecxz
pusha
mov
movl
jns
out
scas
pushf
arpl
jno
cmpsb
mov
fldl
inc
or
stos
adc
jmp
mov
daa
pop
xor
push
pop
rcr
push
data16
jecxz
mov
js
push
cmp
cmc
pop
cwtl
jge
lret
mov
lcall
mov
fmull
cld
inc
pop
hlt
adc
mul
mov
add
outsb
lret
gs
pop
adc
jb
movsl
inc
fs
dec
jo
cmp
mov
mov
cwtl
in
pop
sbb
add
xchg
xchg
mov
dec
cmpsb
mov
aas
mov
jmp
or
pop
rorb
fdivrp
and
in
aad
mov
mov
in
mov
fldenv
fidivrl
adc
out
add
sahf
out
push
hlt
rcrl
lock
mov
cs
ret
jae
data16
mov
addr16
xor
sysret
cmpsb
adc
dec
inc
das
add
rol
call
cmpsb
lock
movsb
lret
sub
lret
aaa
mov
and
sub
sbb
push
xchg
lahf
pushf
jae
xor
sub
ret
sub
inc
jae
std
adc
gs
xchg
negl
xor
sti
stc
cmp
scas
sub
push
jne
xchg
aas
outsb
lock
push
loopne
jmp
mov
ret
mov
call
lds
cmp
dec
pop
mov
cmp
shlb
mov
push
inc
jo
push
and
aas
push
xchg
jg
add
push
or
pop
iret
and
nop
lods
je
inc
lea
leave
mov
cmp
ret
jns
jp
cld
push
mov
mov
and
lahf
or
add
lock
rcrb
out
push
test
lcall
xor
and
cld
inc
mov
jg
xchg
adc
mov
sub
int
sub
call
test
xchg
lcall
sbbb
loopne
hlt
sti
xchg
ds
mov
lds
lods
and
pop
dec
jmp
into
rcrb
ds
ja
fidivl
push
jnp
frstor
iret
sarl
out
pushf
jne
sbb
das
je
lods
shlb
jo
sahf
movsl
fsubrl
jle
mov
scas
inc
pop
sub
mov
add
in
rcrb
mov
and
repnz
sub
add
lahf
out
mov
inc
gs
test
jnp
cwtl
push
jg
xchg
cmp
or
dec
std
sub
xchg
push
xlat
mov
or
testb
lahf
adc
scas
dec
lods
in
sbbb
in
add
xchg
push
mov
sbb
push
int3
stos
mov
shl
or
push
dec
arpl
jne
sub
jg
cld
shlb
xchg
dec
sub
outsb
jb
jg
insb
fmuls
adc
sbb
dec
pop
scas
js
ret
imulb
mov
insl
dec
aas
cltd
aas
nop
ja
jnp
adc
or
ss
mov
test
mov
pop
popa
iret
lock
loope
xor
test
cmp
cmpb
push
and
pushf
cmpsl
cltd
jns
pop
jecxz
push
add
jl
xchg
jg
fldenv
xor
in
or
xor
xchg
test
jmp
mov
rorl
pop
cmp
dec
mov
stos
aas
jle
lcall
pop
ret
call
xor
sarb
dec
fbstp
fidivrs
rcrb
cmp
or
and
lcall
push
stc
pop
pop
push
test
shll
mov
hlt
add
das
shll
lahf
mov
pop
inc
mov
bound
outsl
mov
test
ret
icebp
mov
dec
mov
fiaddl
inc
inc
sub
sub
push
rclb
mov
mov
adc
movl
test
scas
cmc
push
jns
fisubs
outsl
xor
dec
push
jle
cli
add
xorl
sbb
iret
push
imull
fidivs
jmp
sbb
push
jmp
dec
inc
push
xor
xchg
add
jmp
loopne
dec
xchg
leave
pop
sahf
fstpl
pop
pushf
xlat
loopne
dec
inc
xor
mov
sarb
pop
gs
xchg
popa
sub
lea
jl
ficoms
mov
and
or
shll
ljmp
and
out
lock
jo
dec
ja
xchg
mov
int
pop
lock
or
xchg
mov
and
dec
mull
or
mov
inc
pop
adc
mov
push
xchg
out
in
sbb
out
imul
lahf
incb
xchg
adc
outsl
xchg
pop
pop
or
jp
aad
lods
clc
mov
stos
stos
sbb
aam
std
sti
jmp
dec
push
xor
fisubl
in
dec
rolb
xor
sbb
jne
dec
mov
xor
mov
push
fsubrs
je
xchg
loopne
loop
out
aaa
cltd
push
jp
dec
lret
and
inc
xor
jae
dec
inc
dec
xchg
aaa
cli
mov
ret
sahf
in
push
lret
dec
xchg
mov
imul
das
dec
test
cmp
lahf
add
clc
in
out
cmc
dec
je
sbb
fdivs
fcoms
jne
inc
es
ret
aad
aaa
mov
shll
fldcw
dec
enter
push
sbb
testl
popf
addl
jnp
pop
adc
mov
add
lret
inc
ds
mov
sahf
sbb
mov
sbb
pop
jp
dec
adc
inc
sbb
pop
gs
mov
pop
mov
mov
aaa
jl
rcl
aad
test
pop
push
or
arpl
pushf
cmpsb
cld
fwait
adc
jl
les
mov
sarb
fwait
in
fs
push
cmp
call
imul
fnstcw
es
push
jo
cltd
mov
aam
lock
es
in
cmp
fistpll
xchg
fs
pop
adc
mov
xor
pop
movsb
in
and
xlat
cs
sbb
pop
and
xor
cli
fwait
dec
daa
das
mov
outsl
cmp
pop
adc
test
jo
adcb
iret
xchg
test
fldt
or
and
sub
push
ljmp
jnp
in
jmp
cs
fldenv
js
dec
aaa
inc
xlat
push
in
sub
hlt
push
pop
lods
adc
aas
lret
lods
andb
mov
sub
int3
lea
mov
je
jp
fdivr
or
mov
cmpb
and
es
sub
adc
inc
lods
and
ja
ljmp
ljmp
rol
pop
test
push
out
repz
lock
sub
sbb
fcmovu
xchg
mov
roll
pop
add
mov
adcl
out
mov
clc
dec
repz
cmp
sbb
sti
cmp
leave
and
lea
scas
cmp
sub
adcl
mov
pushf
lods
cmpsb
std
popa
sarl
aam
add
out
mov
pop
and
scas
sbb
xchg
mov
pop
cmpl
sbb
xchg
scas
nop
sti
jns
and
push
test
add
ljmp
fimull
insl
icebp
mov
add
dec
mov
or
xchg
clc
inc
shll
sahf
stos
icebp
push
sbb
adc
xchg
xor
sbb
lahf
insb
or
mov
lahf
ja
pop
pop
out
cmpsb
jbe
mov
into
mov
popf
dec
xor
ret
mov
mov
pop
mov
sahf
or
inc
ret
iret
jmp
into
ja
les
sub
es
loope
push
jg
decl
push
xchg
fwait
pop
loop
pop
or
mov
push
inc
dec
mov
sarl
fidivrl
daa
sahf
adc
cmc
popa
push
xchg
mov
inc
mov
fwait
pop
pop
xor
fsub
dec
dec
add
mov
ret
scas
mov
into
outsb
mov
push
push
push
sub
and
repz
hlt
lret
jmp
add
loope
cmp
jle
std
dec
xchg
cmp
xor
push
das
mov
add
pop
and
inc
adc
sbb
sarb
lea
popf
lods
and
or
mov
js
stos
sahf
imul
mov
jp
push
mov
jmp
or
and
pop
stos
fs
mov
sarb
inc
leave
test
test
dec
and
cli
pop
pop
out
jge
dec
jecxz
sub
dec
or
dec
js
jecxz
pop
dec
mov
outsb
jl
sahf
jl
push
stc
fsubs
mov
fldcw
mov
cmp
dec
outsl
sahf
mov
xor
cld
test
cli
shll
jecxz
int
cwtl
es
pop
ja
xchg
lahf
mov
sbb
push
aad
insl
adc
mov
into
lcall
xchg
cmpsb
sbb
stos
mov
mov
push
dec
mov
idiv
lret
cmp
in
sbb
ret
ljmp
add
pop
mov
call
es
and
jmp
outsb
ljmp
test
mov
out
gs
cld
push
pushl
cmc
jmp
jno
jle
aas
cmpsl
fimull
test
add
pushf
mov
nop
fcomp
push
pop
cmp
inc
and
or
adc
repnz
in
test
or
adc
int3
cmp
pop
pop
ja
jne
jno
inc
adc
jmp
pop
cmp
pop
sub
mov
scas
sub
pop
outsb
ret
or
repz
push
cltd
or
cvtps2pd
inc
dec
imul
and
dec
jbe
inc
push
jne
lcall
fldt
mov
in
push
ja
cmp
mov
add
es
jecxz
and
jle
xchg
mov
pushf
pop
mov
mov
adc
inc
rolb
test
jb
push
cmp
add
sub
sub
pop
arpl
push
sub
fidivrl
xor
movzwl
das
fstps
push
sysenter
and
mov
cmc
push
aad
and
loopne
aam
mov
lods
cmp
sbb
cmc
sbb
icebp
adc
jl
stos
add
frstor
add
add
push
inc
pushf
mov
lods
mov
movsb
fs
dec
je
test
das
pop
add
sub
fs
leave
sbb
mov
mov
adcl
pop
fisubs
xor
adc
pop
xchg
arpl
push
aam
mov
or
shll
mov
fs
xor
mov
shll
jns
aad
mov
sub
das
jmp
pop
jnp
stc
cmp
push
mov
shr
fwait
cltd
add
sbb
sarb
mov
mov
enter
mov
xlat
sarl
sub
xor
xchg
add
cmp
mov
push
sahf
sbb
mov
mov
or
fwait
shlb
jo
jae
or
outsl
xor
testb
aaa
fcoms
mov
lret
jnp
mov
sub
add
hlt
xchg
mov
jns
xacquire
or
xchg
rcll
sbb
or
sbb
push
mov
or
add
je
cmp
jle
movsb
jmp
push
cmpl
and
mov
push
lcall
dec
in
dec
lret
jbe
pop
pop
int3
push
push
pop
rol
sub
or
bound
into
xchg
cmp
in
mov
repnz
sbb
loope
loope
es
lock
inc
std
test
jo
xchg
jno
cmp
and
inc
xor
inc
cmp
sti
sub
xchg
lret
jne
outsb
into
or
shrb
push
loop
repnz
fists
loope
mov
xor
xchg
push
div
sub
or
push
rcr
iret
in
idivl
mov
xlat
xchg
pop
sbb
aam
cwtl
jmp
inc
flds
rcll
pusha
xor
orl
or
idivl
adc
fwait
xor
andl
pop
cmp
push
pushf
lea
inc
rcrb
imul
adc
rorb
xor
data16
adc
insl
shr
mov
dec
or
lahf
in
sti
pop
insb
in
mov
mov
sti
push
pop
insl
inc
and
jl
iret
fcmovu
jns
add
xchg
mov
testl
cltd
push
pop
mov
aas
jb
sub
mov
inc
rcrb
cmp
and
sub
cmp
sbb
ljmp
fucom
icebp
repz
sbb
lret
loopne
push
cli
sub
sarb
jg
enter
imull
mov
lcall
pop
cmp
and
or
pop
loopne
ficompl
adc
in
pop
inc
xchg
cltd
imul
test
das
arpl
aaa
fadds
and
into
xchg
out
push
dec
dec
ds
dec
ljmp
ficompl
mov
jl
es
xchg
xlat
fdivrl
addr16
test
fidivl
ljmp
insb
and
push
jne
sub
lock
inc
test
dec
and
cmp
mov
add
pop
fadd
pop
loopne
sub
jo
loopne
xchg
movl
xchg
das
iret
sbb
repz
cmpsl
adc
inc
std
cmp
fnstenv
cltd
lock
pop
add
imul
or
arpl
mov
xchg
mov
mov
insb
out
lea
lds
or
mov
and
or
cmpsl
rcll
in
cmp
and
xor
mov
ret
and
mov
outsl
scas
inc
popf
nop
and
movsb
insb
fiaddl
clc
cmp
push
inc
dec
mov
mov
rcll
sbb
aam
push
cmpsl
shl
jae
stos
hlt
mov
dec
mov
into
rol
test
fdivp
mov
pmaxsw
or
adc
mov
in
jl
inc
popf
xlat
mov
mov
fwait
jne
sbb
push
jae
mov
shlb
cmpsl
inc
jecxz
loop
movsb
fsubr
subl
or
repz
mov
jmp
pop
movsl
fdivrl
sub
cli
aas
mov
out
push
jns
das
add
dec
das
fmul
inc
int
dec
aaa
out
jno
lds
sar
andl
jg
mov
mov
rolb
fs
inc
mov
sub
adc
mov
ljmp
mov
xchg
jbe
ret
lock
push
dec
xor
mov
xchg
cmp
push
adc
bnd
push
pop
stc
sbb
int3
xor
and
mov
leave
pop
mov
add
mov
fadd
out
push
sbb
xlat
xor
xorb
pushf
xor
mov
push
insb
sbbb
pop
xor
xchg
ret
xchg
pop
out
ret
mull
jle
add
in
ds
ret
fmull
mov
repnz
mov
inc
popa
adcb
leave
adc
pop
add
stos
push
push
jo
cmp
lods
sub
sahf
das
bound
subl
or
push
bnd
jbe
xchg
and
stos
or
and
cmp
and
fisttpl
ret
leave
xchg
scas
cmp
mov
fdivl
pusha
int
lods
xor
xchg
lahf
add
or
inc
cwtl
inc
sbb
xchg
ss
jecxz
popf
push
push
test
cwtl
push
cmp
pusha
and
rolb
mov
stos
xchg
dec
xchg
fnstcw
or
cmp
lretw
push
test
fidivrs
pop
mov
xor
push
xor
cmp
push
sahf
pop
stos
pop
aas
xor
ret
lock
ret
pop
gs
jecxz
fldl
xor
dec
xchg
in
push
mov
mov
lret
leave
out
cmp
and
cmp
pushl
mov
je
inc
push
sbb
pushf
cmp
push
mov
jmp
mul
clc
push
sub
cmp
mov
adc
and
cmp
xor
xor
test
adc
push
lret
sbb
scas
pop
fcoml
leave
xor
jmp
ret
pop
mov
insl
insl
mov
data16
mov
inc
lock
adc
mov
push
xor
or
insb
pop
clc
push
xor
cmp
inc
and
add
sub
ljmp
cmpsl
pop
fstpl
cmp
or
sahf
pop
mov
iret
xor
and
dec
pop
pop
pop
pushf
jmp
xchg
jl
testl
iret
mov
dec
mov
loope
fdivrs
inc
cmp
ret
dec
sbbb
cli
or
aas
lods
pop
pop
in
das
inc
sbb
sub
clc
cmp
test
fst
xor
loopne
add
arpl
adc
push
jge
pop
gs
cmp
xchg
popa
adc
lret
pop
mov
pop
push
lret
outsl
idiv
adc
stc
mov
jg
and
in
lods
fs
cmp
and
add
addr16
xlat
or
leave
mov
test
cmp
sub
arpl
aad
mov
xor
cli
filds
mov
mov
mov
les
cld
aad
push
sbb
jo
scas
ss
pop
jge
out
xor
adc
cmp
cmp
adc
xlat
xchg
data16
fbld
cli
pop
fidivs
lcall
test
in
fwait
mov
imul
stos
fwait
dec
cmp
das
lods
stos
or
mov
bound
aad
rolb
xchg
arpl
xor
xchg
add
dec
mov
imul
jno
fs
fninit
cmpsl
add
and
outsl
inc
pop
hlt
jmp
push
add
fidivs
adc
jae
lahf
lcall
mov
cld
cmc
dec
push
imul
mov
cmp
mov
dec
lods
cmp
ret
mov
cmp
mov
cmp
push
je
pop
jmp
cmp
inc
mov
pop
cmp
mov
push
cs
push
jae
jecxz
and
push
xchg
pop
daa
adc
dec
pop
outsb
cmp
cmp
lods
test
mov
int
ja
push
mov
xchg
icebp
orb
mov
shrb
dec
pop
test
xor
push
xor
jle
and
adc
out
popa
data16
out
arpl
sbbb
or
add
shlb
push
dec
add
outsl
adc
scas
xchg
cli
pusha
je
jl
mov
pop
scas
faddp
pop
sahf
pop
repnz
push
daa
filds
in
adc
sbb
cwtl
xorl
xor
inc
or
push
pop
xchg
lcall
mov
fsubrl
push
dec
xacquire
hlt
lret
outsb
cli
insl
mov
pop
cltd
jg
jne
adc
outsb
ficompl
lods
cs
push
insl
inc
dec
sub
psubusb
sub
pushf
fcomps
sti
pmaxub
inc
test
xchg
xor
cld
pop
cli
repnz
inc
cmp
jae
std
adc
leave
mov
xor
xchg
or
pop
sbb
push
xchg
jmp
xchg
pop
xchg
jb
mov
push
cmpsb
jae
arpl
outsb
mov
divb
inc
lahf
mov
mov
sti
fdivl
ds
aas
mov
hlt
add
jae
xchg
and
pop
hlt
xchg
lahf
nopl
push
movsb
addl
and
pusha
loop
scas
test
mov
movsl
adc
push
add
inc
inc
mov
insb
mov
mov
mov
xchg
mov
push
cltd
sub
mov
push
imul
mov
in
cmpsb
icebp
lahf
mov
inc
daa
cwtl
mov
mulb
or
cli
shlb
add
in
xorl
js
addr16
insl
cmpsb
loope
dec
nop
sub
ja
mov
dec
outsl
and
bound
rorl
push
cs
push
and
orb
pop
inc
xlat
push
jbe
sub
out
pop
pop
cmp
out
mov
loope
and
xchg
movsl
hlt
rcl
xchg
sbb
movsb
bnd
cmp
into
jnp
sysret
fadd
lret
mulb
rcl
divb
es
and
cld
cmp
mov
sub
push
cld
fisubrl
cmpl
xchg
or
xor
mov
adc
jne
and
outsb
ja
pop
cmc
xor
push
push
inc
mov
push
call
push
fiaddl
jge
repnz
lods
xor
das
xor
fildll
mov
inc
in
les
dec
inc
lock
daa
cs
in
sub
jns
das
mov
in
loopne
adc
ret
pop
mov
rcrb
or
fnsave
fimull
cmp
sbb
sub
mov
mov
nop
sbb
xchg
loop
xchg
adc
stos
adc
sbb
dec
mov
jmp
das
and
pushf
xchg
shll
lret
jg
cmpsl
mov
mov
arpl
add
cmp
int
mov
push
enter
push
xor
aad
sub
cmpsl
inc
and
loopne
stos
cmc
sub
or
adc
pop
jno
cld
inc
lcall
aam
addb
xlat
lea
out
fs
test
inc
pop
sti
sub
mov
pop
sahf
jge
xchg
cmp
mov
adc
in
repnz
out
push
ud0
inc
js
sti
cmp
rorl
push
loop
les
lahf
or
rcl
xchg
sbb
cmp
inc
push
test
stos
mov
call
cltd
inc
movsl
xor
add
jno
push
cmpsb
push
jb
inc
dec
sbb
sub
pop
orl
mov
shlb
popa
sub
pusha
push
popf
stos
sub
dec
stos
sbb
xchg
mov
inc
dec
mov
dec
in
cmp
push
cmp
sarb
mov
sub
lds
xchg
push
daa
adc
movsl
or
gs
lahf
cltd
std
adc
in
insl
mov
pop
aam
mov
dec
xor
adc
and
pop
subl
data16
or
aam
addr16
jo
test
nop
insl
aas
ss
push
sbb
pop
ret
loopne
daa
add
mov
pushf
xor
mov
lea
add
fsubl
or
ss
fs
jnp
push
enter
inc
xor
addr16
mov
dec
sub
fnsave
push
mov
mov
in
mov
pop
mov
inc
popa
cmp
divb
jne
repz
jmp
and
dec
push
sub
xchg
cwtl
dec
leave
xor
lods
sub
adc
mov
cwtl
hlt
cmpb
jno
mov
aas
gs
ficoml
test
push
xchg
jns
and
dec
and
mov
sbb
into
mov
sbb
mov
lds
xchg
or
mov
fwait
cmc
cwtl
mov
sbb
mov
cmpsl
xchg
addr16
outsl
xchg
jae
dec
xor
les
pusha
push
xchg
stos
inc
inc
jl
mov
fs
ljmp
sbb
and
out
imul
sbb
cmp
or
rolb
mov
and
jecxz
push
repnz
or
in
inc
sbb
push
outsl
cmc
fildl
jp
call
xchg
sub
push
adc
push
out
inc
push
jo
hlt
mov
sahf
dec
sub
mov
mov
pop
add
imul
or
lcall
adc
movsl
pop
jg
dec
repz
lock
mul
stos
leave
mov
test
push
rcl
lcall
mov
inc
lods
mov
es
insb
pop
lea
add
jp
mov
dec
dec
sbb
push
push
scas
lcall
pop
and
pop
jp
pop
or
mov
mov
sbb
xchg
adc
fwait
int
jbe
and
inc
mov
cmp
sbb
cmpsb
push
push
stos
lcall
sub
int3
int3
out
ja
pop
adc
jecxz
loope
nop
xchg
sbb
std
sahf
cmpl
lods
fmul
push
bound
stc
leave
sti
shll
shl
jecxz
lret
pop
push
repz
inc
or
and
jmp
push
xchg
int3
lahf
jmp
fildl
scas
in
jae
aaa
insb
push
and
add
cmp
outsb
or
jl
adc
sub
ss
add
ljmp
fs
scas
jae
xlat
loop
in
rol
loope
jns
push
fs
mov
push
repnz
mov
mov
pushf
xchg
push
push
ljmp
repz
mov
aam
lret
in
pusha
add
mov
repnz
test
dec
sarl
pop
icebp
dec
int
xchg
inc
test
mov
dec
lret
adc
cld
lods
pop
nop
pushf
scas
or
lea
leave
cs
mov
mov
loopne
inc
dec
mov
xor
cmp
or
pop
mov
mov
xchg
xchg
jb
jns
sti
arpl
xor
jecxz
sbbb
inc
sbb
std
adc
cwtl
xlat
mov
mov
or
test
push
jnp
lea
pop
pusha
ja
fwait
divb
inc
or
add
lock
push
sbb
push
jp
pop
rorb
mov
sbb
out
lahf
arpl
xor
or
sub
mov
das
adc
cmp
mov
leave
in
dec
and
sbb
bnd
fwait
cltd
les
repnz
rcll
mov
in
inc
pop
setno
andb
mov
cmp
movsl
popf
sbb
dec
jmp
and
repnz
mov
pop
add
mov
ror
icebp
rorl
mov
mov
jb
addb
mov
insb
sub
push
inc
ficomps
ss
mov
subb
leave
ret
jns
int
popf
xlat
inc
dec
int3
dec
loopne
shrb
fbstp
or
shrl
inc
dec
push
xchg
push
mov
adc
xchg
xor
xchg
aam
in
call
jle
push
mov
or
out
ret
lcall
popf
je
cmpsl
sub
je
inc
jle
or
cs
jl
lds
xlat
out
mov
cli
loopne
insb
sbb
arpl
xor
cmpsb
sbb
pop
adc
adcb
cmp
xor
mov
xor
dec
mov
in
jl
adc
xchg
xchg
repz
lret
or
int
cld
fidivrs
xor
loope
push
pop
jnp
inc
cmp
inc
pop
inc
sub
push
inc
and
mov
inc
pushf
xchg
mov
out
push
ds
or
lea
pop
enter
jns
stos
xchg
mov
loope
sbb
sbb
cmp
repnz
mov
and
sub
out
pop
sub
add
dec
and
mov
dec
sub
out
pop
ja
inc
push
sbb
pop
jl
ficompl
lea
pop
cmc
cmp
mov
scas
sbb
xor
mov
pop
in
lea
sbb
and
inc
aas
adc
pop
or
aas
dec
mov
or
add
adc
clc
or
ljmp
inc
jo
adc
mov
add
add
add
in
ffreep
stc
repz
cli
pusha
into
inc
addr16
adcl
ret
pop
jb
lcall
dec
divps
frstor
fs
sub
dec
push
rcrl
xchg
cwtl
lods
inc
push
out
adc
adc
push
or
jge
loope
in
push
outsl
cmp
push
mov
jle
xchg
push
xchg
xchg
pop
xlat
imul
mov
shrb
jno
sbb
test
mov
sub
movsl
jae
add
sbb
sbb
pop
xor
adc
clc
cli
add
lahf
fdivrs
aaa
outsl
push
lcall
stos
dec
xor
shll
mov
ljmp
fsubs
je
sbb
cmp
fldenv
lret
jbe
test
dec
xchg
sti
gs
push
mov
mov
lret
add
pusha
jns
lret
fidivs
or
je
dec
jl
mov
dec
jmp
scas
leave
hlt
adc
int3
shlb
bound
dec
mov
pop
lods
sub
jle
fs
jg
push
sahf
lea
push
push
or
das
add
outsl
add
inc
testl
mov
inc
or
insl
ljmp
push
imul
lods
mov
push
pop
fwait
stos
ja
mov
data16
xor
lret
scas
divl
dec
gs
inc
sbb
mov
and
adc
fldcw
ret
xor
jge
imul
lret
inc
popa
or
repnz
dec
lock
in
shl
or
xchg
addl
sbb
jge
add
sbb
sbb
mov
je
cmpsl
cmpb
xchg
dec
xchg
mov
or
imul
xchg
cmpb
inc
inc
lret
xor
inc
or
inc
xor
into
in
daa
push
pop
push
inc
jle
in
adc
mov
movsl
xorl
xchg
pusha
sarl
or
cs
stc
push
lea
lock
xchg
int
pop
aad
push
adc
xor
adc
fnsave
mov
test
andl
or
sub
out
xchg
and
lods
mov
mov
push
es
ret
cld
stc
ret
in
rolb
sub
push
pop
pop
loope
aas
push
jno
dec
push
iret
int3
in
inc
mov
in
je
xor
fstpl
xchg
outsb
fmulp
cwtl
sbb
stc
stos
mov
arpl
vcvtpd2psy
mov
mov
fisubrl
loop
sbb
aam
scas
xchg
adcl
jecxz
mov
std
out
out
dec
mov
jb,pt
incl
leave
dec
jg
mov
test
ret
add
mov
jecxz
or
sub
dec
vpmacswd
pop
push
jnp
insb
cwtl
shll
fwait
in
xor
jecxz
jmp
insb
ss
int
xor
mov
jge
negl
out
adc
aad
cmp
dec
stos
mov
leave
fwait
pop
jb
or
sub
adc
jo
adc
cmp
push
jmp
sbb
cmpsb
aad
push
dec
cmc
ds
sbbl
sub
xchg
sti
sub
out
repz
data16
push
cmpsb
add
xor
cli
dec
mov
ficomps
mov
jns
rclb
inc
add
xor
ljmp
pushf
lods
add
push
fld
call
pop
mov
movsb
cmp
insl
pushf
sbbl
enter
sbbl
pusha
mov
cmp
cwtl
adc
ja
mov
addl
cli
mov
mov
nop
enter
push
dec
out
inc
xor
stos
addr16
inc
cmp
inc
in
loope
int3
dec
adc
pop
ljmp
sub
mov
sbb
xlat
or
mov
adc
icebp
dec
icebp
ds
pushf
ds
cmp
xchg
adc
pop
pop
nop
cmpsb
clc
inc
xor
or
scas
cmp
out
lret
pop
out
add
icebp
push
fsubs
mov
mov
push
addb
imul
insb
pop
jecxz
mov
sub
addr16
imul
mov
int3
cwtl
push
pop
fmulp
jmp
add
lock
mov
dec
out
mov
bnd
pop
repnz
fmull
pop
xchg
dec
repnz
mov
fdivl
sub
scas
sbb
das
push
inc
sub
mov
icebp
and
movsl
pushf
xchg
mov
test
jns
adc
or
add
mov
jno
pop
sahf
push
mov
sbb
std
into
out
fisttpll
or
dec
je
loop
hlt
popf
daa
mov
mov
mul
mov
dec
loope
pop
or
push
cs
cwtl
sbb
out
mov
cmp
adc
add
arpl
pop
repnz
popf
es
rcr
fwait
mov
xchg
test
cmpsl
sarb
mov
fidivs
mov
cmp
je
sbb
mov
pop
inc
cmpsb
out
mov
fdiv
jle
leave
insl
inc
xchg
movsl
and
fs
add
jge
out
mov
fdivrl
inc
jae
mov
addl
fcompl
dec
fisttpll
xor
mov
add
fdivrl
or
add
aas
pop
xor
xchg
push
dec
dec
mov
les
movsl
fistps
scas
call
daa
loop
clc
mov
sbb
lret
mov
in
shl
pop
jo
leave
iret
xchg
mov
sbb
testb
xor
push
pop
xchg
jmp
add
mov
es
out
testb
clc
push
jge
add
sbb
pop
mov
pop
inc
xor
cmpsl
or
int3
inc
std
mov
dec
cs
jns
js
lret
rorl
pop
cltd
lds
jns,pn
rorb
cmc
ret
arpl
std
movsb
fldcw
and
aaa
sub
inc
fisubs
test
inc
icebp
aaa
push
sbb
int
lret
testl
lret
addr16
rorl
pop
shrb
xchg
adc
inc
xor
sub
hlt
imul
or
or
lods
test
inc
mov
fstpt
jno
cmp
into
cld
sbb
je
out
jle
arpl
imul
out
popf
sub
pop
lret
push
hlt
or
cli
imul
pop
mov
jmp
dec
out
jns
clc
mov
xchg
movsl
mov
popf
iret
rcll
sub
fucomip
aad
sub
jo
lds
mov
xchg
aam
insb
call
out
jmp
mov
mov
mov
jp
frstor
jge
les
lock
jecxz
adc
in
scas
push
mov
aas
fsin
cwtl
mov
sub
out
jmp
xchg
scas
mov
cmp
mov
mov
incl
das
out
and
cmp
addl
lods
addr16
xor
xor
mull
pop
jbe
ja
or
insl
adc
popa
cli
inc
or
int3
push
sbb
xor
outsb
dec
pop
inc
into
sbb
bound
stos
decl
or
mov
aad
xlat
dec
popa
cmpsl
dec
sub
xor
xchg
push
mov
lods
and
mov
nop
bound
dec
or
mov
arpl
push
cmp
mov
and
outsb
lods
mov
mov
in
data16
add
inc
cmp
mov
and
loopne
push
lret
mov
or
popf
mov
stc
mov
and
sub
sahf
inc
adc
movsb
or
and
stos
test
ds
hlt
mov
cs
jge
aas
add
dec
out
leave
mov
mov
sub
daa
ljmp
lods
fstpl
loope
mov
adc
dec
pop
xor
mov
test
repnz
xchg
ficoml
mov
add
fildl
sarl
mov
xor
es
xor
lods
xor
aas
fldl
aam
jmp
adc
testb
out
add
inc
and
das
mov
cmc
sbb
jmp
jns
sub
popf
hlt
xor
insl
cmp
movsl
xchg
int3
mov
fdivs
push
mov
divl
xchg
dec
dec
cld
movswl
arpl
aas
cmp
ss
int
mov
or
mov
jl
push
jo
pop
lea
mov
outsl
loop
leave
or
mov
inc
push
jns
scas
push
pop
lret
pusha
lcall
rorl
add
in
repz
jns
mov
mov
mov
add
les
sbb
sar
stos
mov
jnp
imul
cli
stc
jg
fcmovu
popa
mov
mov
test
add
or
lods
mov
fldt
out
or
sbb
mov
popa
xchg
jl
scas
jl
leave
mov
pop
imul
movsl
push
mov
rorl
mov
xor
pop
arpl
pop
iret
sbb
mov
mov
sub
adc
mov
jmp
xchg
xlat
mov
aad
lock
aas
jmp
pop
push
imull
mov
enter
sub
test
mov
mov
fwait
sti
xor
std
push
xchg
iret
push
adcb
dec
lods
loopne
adc
dec
or
aad
adc
fbstp
adc
int3
xor
pop
jno
flds
sbb
xorb
movsl
cmp
and
dec
nop
jbe
lods
ret
add
adc
xchg
in
push
jb
idiv
loopne
fiadds
cli
jne
jp
cli
adc
pusha
cmp
rclb
jbe
jg
sub
gs
fstpl
mov
or
mov
test
pushf
call
iret
lods
jne
ds
sub
cmc
into
iret
pop
loopne
addr16
aaa
mov
or
xor
mov
sbb
sub
js
sbb
daa
adc
dec
data16
dec
lock
mov
xor
pushf
jp
mov
pop
aas
ds
iret
popa
stc
push
js
sbb
cmc
mov
mov
pop
cmp
pop
in
and
inc
inc
mov
inc
cmovns
sub
repnz
push
or
xchg
mov
sub
mov
sbb
jb
sbb
sub
mov
imulb
aad
adc
loope
stos
adc
jp
mov
xchg
test
pop
and
xchg
mov
insb
fimuls
out
insl
inc
push
mov
ja
bswap
pop
pop
jbe
imul
mov
xchg
aaa
jnp
cmpsl
xor
icebp
pop
cmp
xchg
xor
xor
int
xor
lods
mov
cmp
nop
sub
push
mov
mov
push
icebp
xor
mov
add
nop
jno
mov
ds
bound
mov
mov
je
or
mov
cmp
sub
add
push
loopne
push
sbb
push
mov
mov
jns
jne
cmpsl
das
lret
loop
out
mov
mov
je
mov
ja
adc
movsb
pop
loop
stos
xchg
xchg
mov
sarb
shll
stc
jne
cmp
inc
ret
sbb
xchg
inc
enter
stc
stc
cmp
repz
mov
shlb
outsb
jl
sub
out
in
div
xor
or
imul
mov
push
xlat
xor
lods
rcll
cld
fisubs
test
jnp
rorb
adcl
push
jmp
out
testl
cmp
int
idivb
pop
sarl
ljmp
mov
xor
sub
mov
repz
mov
insb
and
adc
mov
in
xchg
inc
clc
add
xchg
dec
adc
movsl
out
sub
clc
jmp
rclb
cmp
movsl
xor
loopne
adc
add
mov
lods
xchg
idivl
xor
sbb
mov
nop
repz
sti
xchg
dec
inc
pusha
test
mov
cmp
outsb
push
mov
es
and
add
jmp
aaa
movsb
aam
mov
push
mov
jmp
stos
pushw
cmp
je
xor
mov
insb
in
and
mov
dec
cmp
imul
je
adc
ja
jae
push
fstps
ficoms
mov
cltd
mov
jge
call
jns
mov
nop
mov
lods
pop
pop
fistpl
fmull
aas
pop
sub
ljmp
dec
cmp
push
pop
sahf
add
dec
out
mov
xchg
data16
int3
inc
scas
adc
sub
or
mov
ret
xchg
inc
or
loopne
pop
lcall
mov
iret
jp
cmpsl
ffreep
mov
or
sbb
xchg
cmpsb
or
outsb
push
in
sahf
shlb
lods
adc
jle
sbb
enter
mov
mov
dec
sub
daa
add
clc
cltd
or
push
adc
lds
movups
mov
sub
jnp
sbbl
dec
jmp
adc
add
mov
test
mov
and
and
sbb
test
or
bsf
xchg
xorl
lock
and
aam
pop
mov
mov
or
lret
push
cmp
insl
int3
sub
das
lret
adc
xchg
push
repz
add
sbb
fbld
outsb
and
pop
adc
ucomiss
loop
aaa
add
inc
jne
pop
imul
pusha
adc
in
ss
out
jbe
loopne
mov
outsb
dec
aaa
in
lock
stc
dec
jbe
fisubrs
push
lods
mov
mov
dec
sarb
negl
add
bound
testl
jecxz
aam
insl
xchg
pop
dec
lahf
xchg
xchg
jnp
adc
mov
in
sbb
push
dec
sub
std
dec
insl
add
stos
pusha
outsl
or
insl
loopne
pop
adc
inc
or
add
dec
roll
dec
mov
sbb
iret
cmp
pop
mov
push
insb
and
dec
gs
aaa
loopne
call
faddl
sbb
cmp
mov
imul
pushf
adc
loopne
out
bound
push
pop
xchg
imulb
pop
add
lahf
orb
or
pop
stos
test
push
imul
mov
mov
rcrl
arpl
outsb
xchg
fiadds
and
or
iret
lods
cmp
and
mov
insl
movsl
inc
lods
call
jmp
fildll
icebp
adc
xchg
cmp
ja
push
sub
inc
nop
addr16
clc
push
scas
pop
daa
in
mov
sahf
mov
cli
dec
ljmp
or
mov
stc
in
fwait
push
jae
imul
rclb
mov
outsb
xchg
mov
mov
cmp
cmpsb
scas
sbb
dec
xor
and
push
and
roll
shlb
arpl
lds
imul
pop
call
xor
push
xorl
jne
outsl
mov
sbb
xor
sub
dec
bound
int3
mov
sbb
gs
stos
dec
xchg
clc
push
dec
in
shlb
sbb
sbbb
jno
jecxz
call
stos
imul
loope
movsb
subl
lods
jecxz
lock
insb
aaa
inc
bound
fs
adc
test
scas
shrb
scas
pusha
and
pop
sbb
jmp
mov
cs
adc
mov
out
call
mov
dec
mov
cli
out
repnz
jbe
lahf
dec
icebp
sub
adc
adc
rol
mov
shlb
cs
popa
and
sub
push
push
iret
jae
jp
rol
and
mov
aad
fiadds
and
cmp
and
push
movsl
mov
mulb
adc
lret
mov
pop
or
or
inc
shll
lret
fisubl
cmp
leave
mov
in
xchg
inc
xchg
xchg
pop
stc
add
cmp
test
mul
xchg
pop
cld
cmp
movsb
jecxz
inc
stos
xor
push
mov
repnz
xchg
sub
and
outsb
inc
jmp
pop
clc
pop
jmp
pop
sbb
fisttps
jne
aam
mov
call
pop
or
fs
je
call
loop
stc
ds
cld
pop
addb
dec
mov
push
pop
sbb
scas
mov
imul
rclb
nop
out
mov
movsl
push
sub
cwtl
push
fmulp
fcoml
mov
pop
je
outsb
fs
xlat
ffree
fdivrs
out
sbb
pop
es
or
movsl
aam
mov
push
pop
jo
movsb
aaa
mov
loope
test
pop
pop
cmp
nop
lret
xchg
mov
aas
ljmp
out
int
ds
pop
inc
jecxz
or
adc
xor
and
xchg
cli
dec
js
js
cli
xlat
roll
ja
push
or
push
lret
popf
sbb
push
test
into
fistpl
sbb
pop
ds
dec
sti
shlb
fwait
cmp
stc
aam
add
sbb
loope
or
jp
das
and
jne
mov
outsl
xlat
pop
or
ffree
jo
pop
adc
aas
ret
add
mov
add
dec
int
jge
add
mov
in
pop
sub
test
inc
jecxz
loopne
cmp
int3
pop
push
jmp
dec
adc
sarl
lret
lcall
pop
jns
movsb
das
sti
cmp
sbb
and
sbb
ds
dec
cli
lock
pop
fistpll
js
mov
dec
cmp
push
rol
push
push
pop
mov
cmp
adc
into
stos
push
imul
rolb
ja
push
pop
repnz
and
mov
mov
out
pop
icebp
dec
xchg
js
jp
cs
pusha
int
bnd
add
in
jbe
das
mov
decb
cmp
add
mov
xor
pop
cmpsl
mov
ja
negb
cli
das
xchg
cmp
enter
jl
jne
mov
mov
add
pusha
out
push
rolw
and
xor
sbbl
cs
xor
push
mov
and
fildll
mov
jbe
xor
pop
imul
pusha
mov
aam
std
in
mov
out
cmp
xchg
rol
repnz
je
lods
pop
mov
inc
iret
xor
mov
std
ja
xor
inc
stos
mov
out
mov
loope
jp
inc
mov
or
add
jg
inc
addr16
andb
lods
imulb
jmp
pusha
mov
and
aad
inc
mov
cld
dec
mov
adc
sub
lret
xchg
adc
inc
sbb
sbb
es
jnp
dec
dec
sbb
adc
xchg
jns
jae
mov
cld
and
xchg
and
xchg
incl
sti
or
and
mov
leave
mov
xchg
jo
mov
cs
inc
callw
and
out
xchg
std
jg
out
xchg
pop
and
cmc
cmp
dec
mov
and
xor
inc
mov
xchg
or
cld
icebp
stc
adc
cli
test
shll
int
pop
in
cmp
add
imul
repnz
fdivrl
nop
ja
mov
cmp
loop
xor
add
mov
mov
cwtl
lret
xchg
jl
or
scas
pop
test
flds
out
xor
mov
int3
cmpsl
push
xor
movsb
sbb
sbb
fstpl
jno
sahf
jmp
insb
imul
dec
int3
pop
fwait
mov
jp
movsb
dec
cmp
and
adc
inc
mov
push
mov
pusha
sti
vphaddubq
notb
sbb
loop
add
or
sbb
pusha
pop
inc
push
lods
push
and
mov
scas
outsl
mov
xor
cmp
pop
popf
push
mov
or
and
sub
lret
icebp
and
pop
add
cmp
data16
ret
or
fisubrs
pop
inc
dec
int3
dec
adc
imul
fsubrp
and
mov
das
mov
push
jb
decb
insb
repnz
lea
test
stc
cli
cs
in
dec
sbb
pop
hlt
pop
jb
cmc
test
and
push
dec
jnp
sahf
mov
pop
imul
pop
mov
clc
and
pusha
inc
adc
pop
sahf
insb
movsb
add
lds
and
shrl
xchg
cs
in
pop
test
inc
fwait
xchg
cwtl
xor
sub
push
add
inc
popf
adc
int3
or
and
aaa
jno
imul
pop
lcall
xor
jo
sbb
cmp
dec
out
add
cmpsl
mov
stc
mov
cmpsb
sarl
or
mov
test
movsl
xchg
cmp
out
inc
stos
dec
sub
add
add
fstpt
sub
cmp
ja
and
push
lret
pop
ja
scas
push
pop
mov
test
pop
scas
sbb
aas
js
mov
fwait
and
inc
sub
gs
mov
out
cmp
lahf
mov
sbb
pop
ror
ss
dec
lock
stc
cld
dec
iret
or
mov
cwtl
pusha
mov
pop
pop
xchg
push
add
cmpsb
pop
add
cmp
mov
outsb
mov
mov
dec
push
vshufpd
loop
or
fdivr
outsl
xor
dec
and
loop
decl
push
shrb
cwtl
insl
adc
leave
lds
hlt
out
mov
mov
aad
pop
dec
pop
and
sub
in
pop
fstpt
dec
cmpsl
xchg
jle
popf
aaa
pop
adcb
pop
add
dec
jae
nop
dec
jle
loopne
neg
ret
xchg
xchg
fsubrs
cmp
pop
and
stc
cmp
dec
push
gs
aad
sarl
push
cs
imul
andl
jle
pushf
scas
cmp
jo
mov
inc
push
mov
sarl
mov
scas
sub
stc
arpl
negl
loope
jmp
xchg
insl
pop
test
es
push
mov
mov
mov
xchg
lea
int3
fcoml
xchg
call
pop
jge
mov
cmp
out
out
dec
dec
mov
jbe
push
in
dec
faddl
mov
fs
add
enter
test
lods
sub
lea
mov
int
jnp
outsb
hlt
push
lcall
dec
jle
aam
adc
push
test
push
fcoml
and
fldcw
push
sbb
into
mov
scas
loop
fs
and
dec
mov
cmp
jne
jns
daa
add
sub
inc
ficoml
mov
call
shr
leave
jo
incb
les
xor
cmc
dec
add
aad
outsb
adc
jae
mov
call
push
mov
dec
push
mov
mov
pop
ret
or
push
fwait
inc
push
push
inc
lahf
stc
inc
cmc
scas
xchg
test
cs
repz
stos
in
xor
sbb
and
xchg
mov
sub
mov
lods
lods
dec
push
or
insb
or
aam
push
add
pop
lods
fistps
shl
xor
mov
mov
loope
mov
inc
xchg
aad
add
cmpsl
push
jnp
and
xlat
or
xor
int3
jb
insb
sub
jge
leave
or
fnstsw
std
cvtdq2ps
popa
sub
mov
pop
mov
adc
pusha
adc
jbe
jg
or
js
push
xchg
sahf
mov
imul
dec
sbb
mov
repz
test
loop
mov
push
jg
ljmp
scas
xor
xor
iret
cmp
mov
mov
dec
cmc
nop
dec
or
dec
pop
data16
and
pop
imul
cmp
sbbl
lods
fisubrs
ja
jnp
pushf
popa
or
xor
aad
fnstcw
dec
and
push
scas
pop
adc
xchg
xchg
fisubrs
lock
test
cld
and
mov
xor
fildll
mov
and
test
int
adc
adc
and
push
dec
insl
cmpsl
pop
xchg
outsl
fwait
jge
je
add
imul
cmp
pusha
rcr
and
das
sti
push
jecxz
movsb
or
outsb
enter
sub
and
pop
or
and
adc
push
mov
jecxz
test
jnp
insb
add
scas
lock
int3
mov
outsl
addl
jle
in
pop
inc
stos
and
pop
xchg
jae
aad
jg
and
in
ljmp
dec
subb
mov
mov
mov
pop
cld
xlat
jns
out
das
jmp
pop
mov
into
sbb
mov
jo
cmc
inc
fdivl
stc
sub
movsb
lret
js
pop
mov
inc
inc
scas
adc
out
div
lock
jge
mov
mov
sar
and
fidivs
scas
mov
pop
mov
loop
adc
adc
pop
ret
lock
movsl
add
push
add
stc
test
fcmovu
in
je
insl
pop
je
mov
aad
scas
call
imul
shrb
out
ja
insl
sbb
jmp
insb
sbb
cmc
cmp
xchg
cmpsl
aas
pop
rclb
addr16
cmovge
add
mov
xor
lods
gs
fiaddl
xchg
pop
enter
push
xchg
mov
inc
cmpsb
dec
xchg
xchg
repz
push
xor
shr
and
in
xchg
aad
inc
std
xchg
div
fcompl
or
je
popa
adc
sub
notl
inc
adc
cmpb
mov
and
xor
inc
add
xor
push
out
pushf
lds
pop
imul
pop
shl
jmp
pop
xchg
inc
repnz
dec
mov
sub
test
mov
stos
or
push
stc
mov
inc
mov
cs
inc
pop
test
push
dec
add
cmp
sbb
push
shlb
fwait
lcall
mov
adc
inc
sbb
xchg
and
dec
sbb
arpl
ja
std
ret
cmp
xorb
div
es
test
sub
push
or
sbbl
pop
js
cmp
push
sub
lock
pusha
insb
xor
stos
es
dec
xorl
dec
js
mov
loopne
cmp
or
enter
movsl
rcrb
jecxz
sbb
xor
subl
mov
mov
inc
jle
push
add
xchg
sar
fldcw
mov
cld
xchg
les
add
stos
int3
push
out
insl
daa
xchg
imul
mov
push
in
call
rclb
inc
shrb
jne
adc
lea
lahf
insl
push
popf
data16
push
lahf
arpl
xchg
or
dec
stc
andb
dec
mov
pushf
adc
push
mov
cwtl
movl
sub
push
je
and
lods
test
xor
in
and
imul
in
ret
addl
ds
cmpb
mov
mov
sbb
mov
stos
or
cld
les
fwait
cmpsl
sub
xchg
jbe
dec
jmp
dec
and
sbb
add
cmp
add
dec
mov
mull
jge
out
jle
notb
decb
stos
jbe
dec
icebp
out
std
and
dec
mov
adc
arpl
imul
pushf
fbstp
popf
inc
lock
aaa
in
clc
test
pop
loopne
test
sbb
les
insb
sub
bts
arpl
movsb
pushf
xchg
test
orl
mov
or
cmpsb
pushf
repz
mov
xorl
push
clc
clc
loopne
sub
loopne
or
data16
test
in
rorb
push
movsl
mov
jg
ja
sti
or
xchg
pop
sub
jmp
and
push
xchg
cltd
mov
jne
lret
push
or
mov
out
or
test
mov
inc
les
cwtl
mov
cs
aad
negb
aaa
outsb
jnp
sub
out
lret
lea
and
test
xor
imul
mov
in
push
and
xor
push
in
into
shl
aam
ljmp
loopne
inc
in
mov
fstpt
je
cmpsl
sahf
and
je
push
add
aad
mov
inc
popa
adc
mov
cmp
jmp
fsubrs
ds
pushf
xchg
sub
pop
sub
or
adc
cmp
outsl
shlb
jne
xor
or
test
sahf
and
sbb
call
cmp
sub
adc
jmp
in
mov
pop
mov
xchg
push
fldenv
fsubr
test
pop
sbb
or
add
stos
sbb
int3
mov
mov
add
dec
mov
adc
inc
in
sub
in
dec
out
adc
xchg
push
jmp
cmp
adcl
sbbl
dec
cmp
int
cmp
mov
mov
lret
nop
mov
jo
repnz
pop
stos
jge
incl
mov
add
mull
push
popf
shlb
out
add
movb
mov
nop
sarb
movl
lcall
cli
inc
jbe
lret
in
stos
cld
mov
cld
aad
add
orb
mov
jne
pop
or
pop
push
cmpl
pextrw
std
or
inc
sub
out
or
jecxz
cmpsl
out
out
test
test
mov
or
nop
dec
insl
cmp
sahf
fcomp
pop
xor
inc
and
sbb
inc
inc
aad
in
mov
shr
mov
mov
mov
repz
push
sub
push
in
cmpsl
lret
mov
pusha
mov
cmp
insb
mov
jl
inc
in
mov
sub
in
lret
fstpt
push
outsb
aas
aas
dec
mov
jno
xor
cmp
jmp
insl
inc
movsl
inc
daa
lret
xor
adc
cmc
sarb
addl
pop
lds
arpl
jmp
hlt
sbb
inc
mov
xor
add
pop
hlt
mov
push
divb
mov
js
inc
sbb
sub
add
xor
dec
je
pop
icebp
xchg
xor
icebp
add
andl
push
and
dec
adc
and
xlat
sahf
add
clc
push
iret
outsl
pop
test
xor
cmp
ret
in
pusha
mov
orb
push
insb
movsl
cli
xlat
sub
scas
adc
lods
mov
cld
outsl
jp
enter
lea
push
add
leave
jbe
adc
scas
hlt
cld
pop
lds
ds
insb
fldenv
pop
ret
sub
popf
push
in
xlat
mov
jl
jno
adc
cld
jp
jnp
sub
popa
cmp
xchg
inc
mov
popf
sub
mov
jg
mov
shr
pop
add
in
cmovbe
xor
stos
xchg
jmp
xor
mov
jmp
xchg
loope
gs
addr16
xor
and
sub
add
scas
push
sbbb
pop
popa
dec
mov
out
scas
add
push
orb
lea
orb
inc
and
push
sub
mov
rcl
and
sub
mov
daa
push
in
mov
add
das
lds
jns
sbb
mov
pop
loop,pt
pop
jp
xchg
stos
jmp
stos
inc
sahf
lret
bnd
ret
rorb
outsb
icebp
jnp
in
bound
add
outsl
xor
mov
repz
jge
jns
outsl
jb
jns
leave
jns
in
lahf
mov
fisubrs
push
sbb
leave
inc
das
cwtl
pop
mov
ds
mov
adc
clc
das
test
imull
mov
jmp
mov
out
push
das
xor
dec
adc
and
adc
jno
es
cmp
push
fcomip
sbbb
popa
cli
sub
stc
or
lods
add
or
inc
adc
ds
xchg
lea
xchg
sub
bound
aaa
sbb
shl
sbb
movsb
clc
lcall
paddd
shlb
pop
sbb
push
mov
into
sahf
sbb
scas
stc
inc
or
xchg
dec
or
xor
xor
dec
push
pop
ret
pop
aas
mov
or
mov
sub
cmp
loop
dec
sub
xor
testl
xor
pop
adc
xchg
pop
dec
push
lcall
jge
sbb
sub
shr
mov
cmp
and
orl
lods
popf
nop
daa
inc
loop
out
das
cld
jge
push
xchg
cmp
mov
pushf
inc
pop
xor
sbb
xor
inc
cltd
push
push
push
push
js
or
dec
xchg
pop
and
dec
repz
repz
test
insb
dec
mov
jmp
scas
mov
aad
mov
cltd
mov
aaa
mov
xlat
and
inc
mov
push
icebp
das
sub
cli
adc
adc
mov
add
cmp
data16
lods
mov
lret
push
jno
addr16
nop
shll
out
repnz
shll
int3
xchg
ret
cmp
je
cld
mov
jle
jle
loope
jb
mov
lret
inc
xchg
sub
mov
sahf
dec
test
test
adc
jb
lods
outsb
push
loopne
repnz
inc
dec
mov
fs
mov
mov
xor
inc
pushf
jns
lods
pop
insl
and
or
mov
jl
sbb
clc
sbb
repz
sahf
hlt
adc
inc
rolb
fisubrl
push
loop
data16
fidivrs
lcall
xchg
jo
inc
mov
push
or
sub
in
sbb
push
push
out
inc
push
les
or
cmp
gs
ljmp
push
mov
mov
ljmp
int3
inc
dec
adc
movsb
inc
xor
jnp
jbe
sub
test
cmp
loope
cmp
je
outsl
pop
lods
rolb
or
in
inc
push
nop
xchg
js
test
jb
loop
mov
adc
xorb
or
outsl
inc
or
sub
push
mov
sahf
dec
hlt
ljmp
stos
xor
xchg
jne
in
xchg
popa
orl
stos
ds
adc
adc
clc
push
mov
cltd
mov
inc
mov
mov
xchg
insb
mov
sub
pop
addr16
inc
mov
pop
jp
jmpw
jl
sub
push
leave
push
roll
dec
cld
pop
repz
and
cmp
pop
jmp
stos
jl
rcrl
loope
add
test
push
leave
sub
leave
inc
fnsave
mov
add
mov
clc
adc
lret
fstpt
push
pop
sarl
fimull
lcall
push
or
xor
pop
imul
cmpsb
gs
mov
dec
xorb
pop
add
rorb
cmp
add
out
rolb
inc
xor
xor
ja
xchg
incl
stos
outsl
inc
add
mov
outsb
mov
xchg
cltd
jl
hlt
cmp
adc
jae
or
cli
mov
mov
and
mov
or
or
mov
mov
mov
insl
mov
inc
pusha
je
mov
lret
push
lods
daa
ja
sbb
pop
push
cmpsb
mov
xchg
scas
pop
mov
cmpsb
dec
rcrb
xor
mov
dec
arpl
push
ss
lea
daa
and
test
shll
jae
mov
and
push
inc
bound
inc
cmp
push
or
and
mov
and
jne
nop
imul
sub
int
mov
mov
stc
lret
push
insb
loop
mov
test
idivb
js
stc
or
sbb
lods
xchg
push
add
xor
sub
pusha
jnp
dec
ficoms
cmp
cmp
xchg
ss
or
add
sub
sub
in
icebp
in
adc
dec
idiv
add
mov
fs
sbb
mov
push
cmc
jle
mov
sub
test
subb
lcall
imul
mov
repnz
mov
add
mov
mov
in
movsb
xor
sbb
add
outsb
or
jb
pop
jae
sub
insb
pop
jo
pop
stos
in
outsl
scas
cmp
insb
outsl
in
js
mov
jbe
xor
out
pop
mov
gs
lock
xor
mov
loope
jmp
jnp
lds
out
call
add
lret
stc
add
sub
xor
adc
add
xchg
and
ljmp
inc
es
xchg
ds
sbb
sbb
add
mov
imul
add
dec
loop
in
notl
arpl
hlt
aas
ss
std
andl
clc
or
test
lea
jo
lret
cmp
cmpsb
and
or
les
mov
movsl
cmp
ds
mov
mov
add
mov
cmp
insb
dec
cmp
mov
mov
pop
xor
mov
jo
addr16
jb
stos
fs
test
xor
xchg
or
stc
xor
sti
loopne
das
loopne
lds
dec
or
add
mov
ret
lds
or
out
mov
push
add
adc
aas
call
push
pop
dec
fsubr
out
aaa
cmp
test
loope
pop
scas
stos
das
jg
in
cmc
stc
fistpl
call
adc
pusha
mov
jge
jl
and
in
mov
lcall
test
mov
loope
sub
or
dec
and
and
jo
hlt
inc
lods
cmp
xor
cmp
in
shlb
cmp
sub
pop
inc
push
jle
xor
out
jb
pop
dec
xchg
out
and
cmp
or
adc
xchg
out
sbb
movsl
xor
mov
adc
xor
addr16
pop
insb
cmc
cs
iret
lock
out
lods
xor
scas
das
fiadds
scas
jb
mov
cmp
adc
inc
notb
sti
je
inc
loope
sbb
clc
js
pop
aad
test
xchg
andb
mov
fcmovne
inc
add
dec
pop
in
popa
xchg
in
addl
sti
or
scas
or
bound
adc
lods
ja
test
nop
pop
mov
sub
imul
mov
int
sbb
jecxz
pop
pop
and
call
stc
sub
pushf
aad
sbb
lods
mov
out
lds
add
divl
imul
sbb
and
fs
add
dec
push
jns
mov
fwait
sbb
das
lret
mov
daa
aas
adc
test
aam
mov
in
test
add
ljmp
out
sub
xchg
mov
cmc
inc
ss
into
jno
push
shl
rcll
cwtl
sbb
add
pop
pop
push
cmp
xor
js
subb
jns
repz
inc
mov
cli
and
mov
scas
daa
imul
push
fistpll
ja
add
add
decb
mov
icebp
cmp
xor
xor
xchg
xchg
xor
mov
mov
inc
jle
xchg
or
scas
sub
xor
push
gs
fwait
je
into
pop
ret
sub
fdivrl
popa
insb
mov
scas
sub
aas
fwait
pop
push
mov
ss
adc
les
lret
jge
and
and
dec
aas
add
bound
pop
push
push
ret
jbe
ljmp
mov
push
dec
jl
leave
lahf
cmpsl
mov
mov
stos
xor
repnz
xor
fsubl
aaa
push
dec
aam
test
pop
daa
dec
mov
loope
push
imul
lods
cmp
mov
pop
push
jo
sbb
xorb
jmp
mov
push
sbb
cli
test
stos
jmp
mov
cmp
pop
test
das
jae
stos
xchg
iret
int
push
jns
xor
les
iret
clc
cs
imul
cmp
je
and
dec
enter
sbb
rorb
aaa
xor
out
fisubrl
adc
mov
dec
repz
xchg
adc
xchg
sbb
sbb
push
sahf
push
push
loopne
sbb
aaa
aam
mov
fcoms
inc
dec
pop
xchg
push
cs
clc
xor
sti
incb
cmp
cmp
dec
jno
dec
mov
mov
pop
adc
push
jns
loope
and
shll
jge
pop
stos
cld
sbb
dec
imulb
int
out
pop
outsb
out
mov
andl
inc
xor
mov
xchg
rcl
lods
outsl
mov
loop
jbe
insb
xor
loop
mov
pop
adc
pop
cmpsb
pop
mov
cmp
notl
push
mov
xor
sub
lcall
sub
cltd
jge
cwtl
mov
adc
clc
bound
jbe
mov
int3
fisttpl
mov
cmpsl
iret
popf
jno
push
mov
xor
adc
les
and
adc
mov
popa
daa
mov
dec
shll
and
jp
dec
stos
scas
ljmp
je
or
pop
mov
int
pop
inc
adc
push
jg
cli
orb
repnz
insl
popa
jmp
mov
jns
sbb
lcall
pop
add
pop
pop
lds
ss
iret
pusha
lret
adc
sbb
data16
adc
inc
sbb
fstpt
repz
or
repz
sub
jnp
xchg
fwait
jp
mov
mov
xor
and
fmuls
orb
xchg
push
or
ja
sbb
xchg
adc
mov
cmp
mov
orl
mov
fwait
jmp
inc
sarl
jne
sub
shr
dec
xchg
pusha
call
movsb
adc
aad
mov
in
sub
or
out
adc
jl
pusha
pop
xchg
add
or
ss
lret
movsb
fisubs
xchg
fwait
out
popf
mov
les
cmc
adc
pop
mov
cmc
mov
lods
or
divl
cmc
xor
enter
sbb
push
mov
stos
push
dec
out
movsb
jmp
data16
scas
jecxz
push
mov
push
std
cmpsb
and
arpl
adc
stos
jbe
fnstcw
sbb
pop
add
jne
loopne
mov
loop
sub
jne
pop
push
and
negb
inc
lcall
addb
mov
dec
jmp
test
cmpsb
jno
arpl
mov
jmp
lods
push
ret
cmp
into
inc
out
xor
jb
pop
mov
and
js
add
test
aad
push
pop
or
or
cmc
data16
stos
es
push
out
stos
sbb
pop
or
add
dec
cs
out
sbb
mov
int
orb
add
int3
pop
cmpsb
pop
insl
mov
sub
sbb
jle
push
mov
fs
lods
mov
popf
imul
jl
cmp
cs
pop
imul
stos
jmp
xchg
sbb
arpl
movsb
das
int
das
xchg
mov
mov
adc
push
pushf
leave
movsl
add
push
push
inc
and
push
out
cmp
sahf
inc
push
loopew
enter
push
es
rcl
or
dec
cmpb
inc
aaa
xchg
jbe
jmp
inc
inc
mov
add
mov
cs
lock
in
adc
dec
jo
mov
pop
lds
cmpsl
lods
pop
shrl
lods
add
pop
add
mov
mov
mov
das
xor
inc
out
or
xchg
or
rcl
inc
lods
sub
out
mov
xor
nop
popa
dec
icebp
adc
dec
push
pop
mov
stc
mov
lss
orb
stos
jbe
lods
xlat
jns
and
jl
aas
negl
lods
pusha
shl
lods
or
mov
fwait
lock
fidivs
xchg
les
xor
call
loopne
lcall
shrl
roll
sbb
dec
cmp
aas
xchg
inc
cli
push
mov
sarb
add
es
pop
insl
test
pusha
push
scas
daa
mov
out
push
add
ljmp
mov
ja
mov
mov
int
movlps
mov
dec
in
sub
lock
add
outsb
iret
dec
mov
sbb
dec
call
fsubrl
aas
and
sbb
inc
scas
push
mov
mov
pop
or
sbb
push
inc
inc
dec
int
jae
adc
sub
inc
lcall
and
push
std
or
xor
mov
xchg
push
dec
jae
jle
cmp
jo
mov
inc
dec
fwait
pop
mov
test
adc
and
ja
add
loope
mov
je
aas
out
fwait
push
into
cmpsb
xor
cwtl
and
test
xchg
adcb
pusha
subl
push
lds
mov
cmpsb
aas
dec
insl
cmpsl
test
lds
push
sub
pushf
popl
or
dec
es
iret
mov
shlb
inc
scas
icebp
xor
jne
shll
jb
mov
xchg
dec
cmpl
leave
add
filds
adc
adc
mov
or
push
mov
in
sbb
xchg
mov
cmc
jp
shlb
add
xchg
lret
in
mov
jmp
cmp
into
pop
inc
mov
or
cltd
lea
popf
or
int
insb
jecxz
cmc
cltd
dec
fcoms
cmp
fbstp
mov
xchg
ja
mov
icebp
xor
lods
push
jbe
loope
xchg
movsl
add
loop
int
and
les
outsl
and
pop
inc
mov
lds
gs
adc
incb
aaa
jmp
lods
cli
dec
aaa
popa
mov
scas
lock
cld
dec
jne
xchg
jno
lea
iret
mov
data16
jb
aam
push
xor
mov
into
pop
sub
test
jl
stos
push
rcl
shrl
cmpsb
mov
jge
fwait
mov
mov
rcrb
add
ds
jp
aaa
and
in
cmovbe
fwait
insb
inc
cmpsl
loope
addr16
insb
jp
xor
adc
fs
push
jmp
cmpsl
bnd
das
stos
call
cmpb
jmp
bnd
adc
aas
lods
xor
or
popf
ds
cld
lahf
xchg
daa
add
sbb
or
pop
xor
dec
xchg
or
data16
xor
xor
shlb
inc
mov
or
mov
fnstcw
pop
xchg
sub
jg
in
mov
jp
jne
sbb
repnz
int
jmp
sub
xor
jnp
pop
fdivrs
push
imul
cs
ficompl
out
in
in
sbb
mov
mov
test
push
adcl
sub
push
jp
pop
add
xchg
pop
inc
iret
push
les
and
fs
mov
fs
push
es
xor
scas
dec
out
mov
inc
jg
aas
imul
scas
mov
cmpl
orl
push
mov
in
jl
repz
je
add
fdivr
xchg
cli
add
lcall
dec
aaa
add
sti
mov
sub
arpl
stos
shrl
xchg
fstpt
adc
push
pop
or
ret
ss
in
add
pop
sub
loopne
lahf
sti
fwait
aad
aas
int
aad
dec
lods
fsts
jns
xor
and
outsl
sbb
ss
in
push
and
or
push
push
into
fisubl
outsl
or
divb
int
in
insl
xchg
int3
mov
orl
xchg
push
test
jnp
adc
add
jl
xor
ds
adc
into
xchg
xlat
xchg
es
xchg
xlat
mov
inc
push
jnp
cmc
lods
jmp
add
jge
xor
mov
fwait
stc
mov
daa
add
sub
fwait
leave
cmp
xor
movntq
popf
dec
add
roll
mov
lret
or
andb
xchg
jle
add
and
pop
push
je
cmp
call
adc
jb
mov
mov
sbb
fcomps
js
addl
loopne
cmp
rcrl
xchg
fwait
sub
push
popf
repnz
rclb
sub
xchg
jnp
cmp
pop
xchg
xor
out
or
pop
int3
fnstsw
inc
icebp
int3
in
pop
push
adc
fwait
ret
std
pop
adc
lahf
rorl
mov
ss
loop
jp
mov
cmc
je
xchg
daa
and
aaa
mov
call
aam
lds
cmpsb
cmpsl
dec
cs
rorb
leave
clc
scas
or
stos
push
or
dec
pop
mov
std
push
mov
test
lcall
leave
into
cltd
nop
dec
xchg
mov
ficompl
cmp
xchg
or
push
ficompl
lock
dec
cmc
and
jge
sub
jno
push
push
sbb
lods
cmp
mov
sbb
pusha
dec
lds
jmp
pop
xchg
mov
jg
aaa
outsb
jmp
sub
data16
add
sbb
push
fs
sti
out
ljmp
mov
in
sub
sub
mov
aaa
in
idivl
push
or
inc
bound
test
push
mov
sub
lock
or
cmpsl
cmpsl
inc
iret
jne
cmp
cmpsl
jo
out
int
jae
enter
xorl
loope
push
imul
icebp
sbb
rcrb
sahf
push
or
int3
jp
sbb
sahf
and
addr16
test
mov
adc
sbb
inc
and
fidivrs
cmc
push
movsb
jg
lcall
xor
sub
sbb
lods
fwait
dec
clc
mov
sub
xor
xor
flds
ss
xchg
fwait
xchg
js
dec
add
cli
mov
sub
aad
les
or
out
mov
xchg
inc
push
scas
mov
js
cmovg
and
stos
call
shrb
cmp
inc
stos
xchg
or
or
mov
mov
inc
arpl
rolb
pushf
adc
xchg
jns
jecxz
dec
xor
fistpl
scas
dec
fs
sub
cltd
pop
and
jl
es
int3
push
mov
lwpval
xchg
lock
insl
in
sub
jmp
adc
sarl
xor
js
cmp
fidivrl
inc
sbb
jne
ss
jne
mov
in
xor
sbb
clc
pop
cs
es
nop
insl
mov
xor
pusha
sbb
pushf
in
out
js
jo
das
test
cwtl
ret
dec
imul
cltd
lahf
dec
cmp
into
push
mov
xchg
sbb
fcom
rorb
jecxz
cs
in
mov
mov
cmp
cmp
jg
cmp
jmp
jbe
aam
xor
inc
fdivl
mov
das
js
xor
push
inc
xchg
xor
dec
mov
lods
mov
pushf
bound
push
sbb
repnz
pushf
mov
xchg
mov
mov
sub
es
repz
hlt
and
mov
cld
fnstenv
dec
filds
mov
xor
shlb
adc
inc
fdiv
push
jne
push
push
cld
lahf
clc
inc
insb
cmp
es
jp
xor
icebp
rolb
gs
sarl
shrb
lds
cmp
repnz
jge
movsl
jb
popa
or
sub
hlt
data16
repz
call
mov
rolb
sub
inc
test
je
mov
and
mov
push
aam
cmp
mov
std
lods
shr
leave
scas
cs
jmp
mov
inc
sti
xlat
mov
movsb
fdivrp
mul
shll
push
enter
sbb
out
push
test
inc
popf
aas
ds
movsb
mov
mov
cwtl
imul
fs
add
leave
fs
cmp
imul
pop
mov
ja
dec
in
lock
aad
mov
mov
xor
ret
cmc
imul
dec
push
jmp
mov
dec
rcrl
mov
cltd
xor
mov
fcompl
sbb
or
add
pop
cmp
in
jge
mov
mov
gs
pop
push
mov
dec
add
arpl
lret
mov
add
in
jge
sub
out
adc
xor
dec
fcompl
outsl
cltd
ds
movsl
repnz
jmp
push
or
ret
inc
imul
call
add
js
ret
jle
mov
pop
add
push
aas
add
push
push
pop
mov
sar
xchg
dec
fdivs
mov
fists
movsl
and
cmp
popf
xor
xor
inc
lahf
xchg
xchg
push
aad
or
mov
sahf
hlt
and
xchg
push
jns
cltd
test
data16
xchg
lahf
mov
popa
mov
scas
adcl
and
xlat
cmp
fisubs
stos
push
or
bnd
or
push
pop
adc
stos
add
ret
pop
jmp
mov
sbb
shlb
fldt
mov
int
js
vmovaps
inc
sarl
ret
inc
sub
sub
repnz
mov
lds
sbb
cltd
push
cmp
icebp
dec
push
dec
in
lds
add
sbb
inc
push
enter
adc
std
cltd
fldenv
inc
ljmp
in
pop
loopne
xor
push
scas
rcll
mov
lret
fsubs
lods
mov
xorl
fnsave
in
lea
push
mov
inc
test
cwtl
dec
xorl
inc
push
jne
push
push
and
int
je
sbb
shlb
xorb
ja
push
cmpsl
dec
dec
jge
inc
in
add
pushf
push
into
test
gs
jnp
mov
out
jne
iret
cmp
jmp
push
int3
ret
int3
in
jae
jge
hlt
jb
lcall
in
push
cmp
mov
shll
stc
push
loop
std
jbe
fs
mov
shlb
jbe
sbb
and
xchg
pushf
add
ss
pop
outsl
rcrl
add
sub
sbb
lahf
loope
jbe
jmp
jae
cmp
dec
addb
inc
pop
stc
dec
mov
sahf
xor
int
dec
jnp
testl
adc
aam
daa
inc
or
jbe
jno
daa
dec
dec
push
xor
hlt
pop
stos
testl
in
sti
jbe
hlt
lret
cs
test
out
mov
shrl
add
push
into
jge
jg
lcall
xchg
lds
popa
cmp
inc
fidivrs
cli
sarl
xor
arpl
fadd
cmp
pop
sbb
add
sub
into
mov
popf
or
or
daa
inc
icebp
test
sti
ret
push
fcmovu
icebp
mov
push
js
or
xor
sbb
xor
adc
mov
sar
ss
int
out
dec
cmp
decl
leave
cwtl
jmp
cli
imul
add
dec
jb
loopne
dec
adc
ss
sbb
sub
lret
dec
or
mov
inc
loope
movsl
dec
jb
dec
sbb
aas
pop
mov
ja
repz
pop
js
and
ja
call
int3
cmpsb
add
add
xchg
xor
jp
lret
repz
xchg
cmp
adc
cwtl
testb
loopne
jmp
push
enter
fisubl
repnz
jne
shlb
push
out
pusha
fmuls
push
mov
sahf
repnz
pop
loope
lcall
jns
sbb
ss
dec
cs
lret
sbb
adc
cld
iret
test
imul
repz
mov
aas
xorl
getsec
pusha
sbb
jnp
sub
and
repnz
repnz
xchg
adc
repnz
ss
mov
scas
pop
xchg
mov
fsubrs
mov
mov
cmc
cmpsl
inc
rorb
loope
xorl
sbb
fmulp
sub
pop
mov
inc
cltd
jnp
cltd
movsl
cwtl
sbb
mov
addb
mov
test
imul
inc
xchg
mov
pusha
xchg
pushl
sub
mov
xchg
sub
movsl
call
push
das
js
jmp
inc
inc
shl
or
cmc
add
stc
out
mov
shll
and
aam
jle
sub
sub
cmp
lods
movsl
in
das
push
jno
test
ljmp
jge
repz
inc
pop
inc
sub
popa
incl
or
pop
fidivrl
cmp
jmp
xchg
lret
vmovq
loopne
frstor
and
lret
push
mov
push
xchg
and
rcl
mov
inc
jmp
jae
fcompl
pop
mov
fcoms
lods
sub
ljmp
inc
xor
xchg
imul
mov
fldt
shll
dec
dec
or
pop
xchg
clc
int
mov
pop
and
mov
pop
jns
pop
or
fcomp
add
pop
inc
lods
lret
mov
add
fdivs
or
in
push
aam
cmp
into
push
jbe
xor
subb
scas
iret
clc
and
sbbl
mov
jb
jb
mov
rcll
pop
fstps
outsb
mov
ljmp
cwtl
fidivl
add
cmpsb
cmp
pop
inc
cmp
sbb
test
nop
scas
sub
push
jne
push
outsl
int3
sub
je
gs
rcl
sbb
pop
or
jnp
pop
icebp
push
sbb
add
and
dec
insl
ret
jno
pop
fnsave
push
mov
sub
pushf
push
movsl
inc
push
aad
mov
mov
push
cmpsl
xchg
je
loopne
fcom
mov
ret
inc
mov
faddl
push
mov
dec
int3
sbbl
dec
pop
inc
sub
jb
push
or
mov
dec
int
ja
shll
xor
pop
inc
outsb
and
lods
sahf
loop
jns
inc
fbstp
pop
testl
in
xor
jecxz
cmpsl
psllw
jecxz
dec
shll
lret
mov
gs
cmc
mov
dec
mov
rolb
add
and
mov
sub
and
ja
in
mov
repnz
imul
push
scas
lea
mov
test
das
jnp
fnstsw
shll
adc
sbb
outsl
or
mov
sub
test
movsl
lods
xor
xor
jne
push
push
in
movups
pop
adc
jmp
mov
fisubrl
mov
fiaddl
lea
movsl
cli
xor
ljmp
cmc
dec
std
sbb
pop
mov
or
fstl
mov
mull
sarb
push
adc
mov
sub
into
sbb
add
add
sbb
sub
and
roll
je
or
jns
pop
adc
mov
fs
inc
fwait
or
mov
outsl
or
pop
aam
xlat
outsl
cmp
or
test
pushl
jle
sahf
or
leave
and
inc
mov
and
adc
in
adcl
and
scas
sbb
and
mull
mov
cmp
mov
adc
enter
mov
sbb
sahf
add
lcall
fstl
test
popa
push
out
pushf
insl
mov
xor
add
bound
repnz
sbb
addr16
jae
andl
xor
cmp
dec
mov
rol
repnz
cmp
xchg
adc
inc
xchg
mov
mov
jno
sbb
sahf
fsubr
shr
and
jg
hlt
mov
mov
push
mov
push
inc
lcall
je
stos
popf
arpl
jg
mov
jmp
xchg
mov
cmp
mov
add
dec
js
shl
sub
pop
xchg
into
sahf
inc
push
mov
xchg
cltd
mov
mov
cmpsb
das
sub
movsb
fcoml
hlt
std
adc
mov
push
jp
xlat
mov
sbb
xchg
lret
mov
dec
orl
stos
sahf
mov
xor
in
dec
sub
mov
outsb
add
adc
cmp
lret
adc
push
mov
and
jp
in
insl
sbb
jp
sub
out
or
adcb
mov
add
dec
pop
adc
push
cmpl
xchg
inc
out
ja
shl
scas
lds
adc
dec
lret
adc
pop
push
add
jnp
in
mov
mov
xor
outsb
arpl
and
adc
jg
add
xor
out
stos
or
data16
push
das
sti
lret
jo
mov
inc
in
scas
fs
es
in
and
cmpsl
cmp
push
insl
clc
fstl
sbb
mov
lret
and
cmpsl
and
jecxz
lea
aaa
jg
in
sub
sbb
xchg
test
mov
cmpsb
push
xchg
mov
outsl
dec
adc
sub
and
push
pextrw
cmp
jg
lods
mov
lock
inc
xor
test
mov
enter
mov
cmp
add
and
xchg
xor
pop
jl
mov
inc
jno
lahf
mov
ja
add
jmp
lods
jg
cmpsb
fsubs
in
adc
pop
push
mov
inc
sti
popa
fwait
adc
mov
dec
adc
iret
or
out
inc
mov
nop
imul
ret
jle
and
popf
loopne
sub
ret
pop
inc
jle
fsts
cmp
lcall
bnd
sti
stos
ret
outsb
pop
sub
les
fwait
iret
mov
cmp
mov
mov
cmp
dec
inc
inc
repz
sbb
push
lret
fildll
imul
lods
inc
outsl
out
pop
jp
in
and
fldt
jno
mov
cmpl
add
adc
sbb
xor
movsl
cmpl
sub
push
pop
test
adc
scas
mov
cmp
cmp
xor
push
ljmp
inc
push
test
hlt
lret
jg
outsl
pop
ss
scas
and
adc
pop
daa
push
dec
dec
dec
test
cmp
loope
sub
shlb
subb
lods
sub
mov
xchg
cltd
es
dec
cmp
lret
cmc
mov
and
scas
push
out
ds
pushf
pop
push
add
cmp
scas
fwait
or
adc
sub
xor
sub
out
out
cli
dec
inc
mov
or
imul
out
sub
inc
dec
adc
inc
xchg
loope
jg
aam
sti
inc
fstps
sahf
data16
add
pop
nop
sub
jo
inc
ret
push
repz
xlat
lcall
in
scas
stc
imul
out
ret
shlb
push
cld
xchg
out
mull
lods
leave
cwtl
popa
bound
push
xor
ret
push
lock
pop
mov
inc
xchg
nop
lahf
xor
mov
xchg
repz
xor
icebp
out
in
adc
cli
and
fbld
mov
scas
subl
xor
jecxz
cwtl
ja
std
lock
xchg
jo
arpl
lcall
push
or
jecxz
jl
push
punpckhbw
cmpsl
or
push
pop
xchg
dec
rcrb
xchg
and
jecxz
icebp
les
jmp
fdivrs
add
in
dec
adc
mov
cmp
iret
stc
sub
xchg
rcrb
xchg
inc
pop
stos
sub
jcxz
popa
fcoms
lds
jns
mov
mov
ficompl
div
adc
jp
dec
add
das
cmp
push
rolb
cmp
add
mov
test
mov
out
push
cwtl
jmp
mov
andb
loopne
jle
sti
jle
out
inc
inc
cmpsb
aam
jp
cld
daa
scas
jo
adc
popa
dec
jns
rcrl
fs
lock
aad
mov
dec
roll
inc
adc
mov
inc
or
sbb
pop
sahf
mov
push
jno
in
pop
leave
les
mov
jnp
data16
sub
push
cmp
xchg
mov
inc
inc
sub
xor
mov
dec
fadds
cld
pop
pop
dec
xor
rclb
je
cmp
or
pop
fs
lcall
sub
aad
popf
in
sub
fdivl
xchg
pop
aam
je
and
pop
cmp
xchg
cmp
cmp
jae
jno
sti
test
dec
xchg
ret
push
call
adc
xor
and
xor
scas
xor
push
mov
out
pop
add
xor
cmpsb
mov
dec
mov
sbb
insb
push
adc
sti
sbb
bound
sub
xchg
pop
mov
fildll
adc
xor
xorl
adc
push
test
dec
dec
mov
inc
push
adc
push
push
out
add
sub
repz
leave
xor
inc
mov
gs
and
xchg
movsb
jl
inc
add
mov
pop
stc
addl
sbb
mov
mov
aaa
push
sbb
push
fidivs
js
push
ds
xchg
sahf
dec
jbe
jae
sbb
xchg
ss
insl
sbb
outsl
sub
mov
jbe
pop
sbb
jg
xlat
std
daa
sub
dec
and
xchg
movsl
xor
jb
dec
fcoml
jge
cmp
xor
ret
mov
sbb
add
aad
dec
aam
mov
lods
popf
push
in
jp
mov
cmp
out
out
jg
je
int
fistpll
xchg
iret
pusha
xorl
sub
or
push
mov
icebp
push
mov
movsl
jne
xor
shl
push
fistpl
mov
icebp
out
sbb
inc
adc
imul
mov
mov
mov
adc
xchg
cmpsb
test
mov
xchg
daa
sbb
cs
and
ret
mov
jae
xchg
sbb
xor
push
adc
jmp
jle
mov
add
repnz
jp
jp
cmp
es
mov
push
dec
pop
ja
push
aaa
aam
sub
repnz
leave
jp
push
sub
sarl
insl
repz
bnd
xor
inc
out
xchg
ljmp
lret
dec
pslld
loop
movsb
fwait
mov
shr
mov
adc
cmpsl
in
imul
pushf
push
leave
xor
mov
jl
loopne
lret
pop
jmp
mov
lds
mov
subb
fistps
outsb
xchg
push
stos
mov
in
xchg
push
dec
push
loopne
dec
cmp
subl
mov
mull
clc
fsubs
test
ret
xor
jecxz
xchg
or
adcl
push
mov
popf
cld
jmp
out
sti
call
mov
cmc
test
or
sarb
leave
iret
add
leave
lret
and
decl
xchg
mov
cmc
mov
dec
fdivr
or
push
jo
fs
addr16
inc
inc
test
jmp
out
mov
jo
daa
loopne
sbb
sub
repnz
movsl
dec
push
xchg
cwtl
aam
jl
and
adc
addr16
loop
dec
push
or
das
sbb
movsb
push
dec
cli
aas
add
mov
jmp
out
pop
stc
icebp
or
in
and
aaa
aas
pop
or
sbb
jnp
push
sub
jne
pop
and
fldenv
and
lds
mov
inc
adc
pop
fcoml
cmp
ljmp
xor
xchg
jbe
into
mov
shrb
sub
das
mov
push
call
push
stos
adc
or
mov
addr16
stc
inc
clc
fsubrs
mov
fs
cld
cmp
out
mov
or
xor
test
sbb
subl
loopne
dec
jae
push
push
mov
call
icebp
leave
add
sbb
and
push
lds
inc
sub
lea
jge
add
or
push
push
outsl
mov
ds
ret
pushf
fsts
fsts
xchg
sub
int3
rcrl
std
out
mov
in
cmp
outsb
xor
popa
ret
inc
lods
aaa
imul
bound
outsl
xchg
sub
idiv
xor
mov
push
movl
aas
int
movsb
ret
xchg
dec
das
in
jl
cmpsl
mov
fs
sbb
and
cmp
aad
adc
push
jbe
dec
jecxz
fistl
lock
lea
mov
push
sti
movsl
jmp
addb
mov
add
and
sub
imull
leave
push
xchg
cld
xor
arpl
rclb
jle
mov
lods
xor
inc
int3
sub
sub
pop
jb
cld
sbb
hlt
cs
clc
jno
push
cmpsb
adc
mov
mov
adcb
imul
adc
push
cs
mov
dec
cmp
inc
fcompl
bound
shlb
jno
jg
push
add
adc
jl
orb
add
ljmp
push
stos
xchg
loopne
es
out
or
imul
jae
repnz
xchg
xchg
movsb
rorb
sbb
mov
out
mov
push
mov
adc
push
out
jge
fadds
hlt
sub
cmp
flds
loope
and
insb
ret
dec
fstps
pop
or
test
das
mov
jnp
add
jns
push
fs
imul
js
jle
stos
mov
push
pop
mov
movsbl
stos
push
jg
sub
jp
nop
cmpsb
adc
and
fadds
jns
mov
in
insb
ret
pop
lods
cs
and
jae
nop
in
imul
pop
add
mov
and
lret
lock
cmp
outsb
xor
into
dec
or
cmp
dec
sahf
in
js
sti
jne
jne
sbb
ljmp
pop
out
je
scas
and
imul
repnz
jge
or
shrl
push
cmp
dec
add
cld
or
xlat
sahf
mov
sbb
hlt
and
fdivrp
lds
adcb
imul
jb
subb
icebp
or
pop
dec
inc
jge
lock
xor
insb
shr
daa
pop
adc
test
mov
out
mov
add
loope
push
lret
lods
pop
dec
jno
outsb
neg
pop
js
inc
adc
jl
loope
popa
and
jmp
idiv
mov
cmp
ds
lcall
pop
mov
jne
jp
insb
and
push
pop
fiadds
fsubl
nop
mov
loop
lahf
es
mov
push
ror
in
test
das
test
mov
sub
fcmovne
inc
ja
xchg
scas
jbe
mov
xlat
push
fbstp
lock
stos
xchg
into
mov
rcr
in
inc
sahf
addr16
enter
cmp
adc
xchg
test
push
push
pop
je
ljmp
sbb
dec
jnp
sub
sub
xor
sbb
decb
or
in
ljmp
loopne
rol
jp
and
mov
enter
inc
arpl
cmp
sarb
cmp
dec
call
cltd
or
jp
and
push
arpl
loopne
outsb
pusha
insl
std
mov
cmc
cmp
jmp
sbb
adc
js
mov
divb
jb
fcoml
loop
push
mov
push
mov
aad
push
and
xor
jmp
xchg
mov
cltd
in
fcmovbe
std
in
add
sahf
loope
repz
das
sbb
lock
leave
cwtl
sbb
ja
mov
out
xchg
push
lret
push
fidivl
shlb
test
fsubrs
mov
clc
jmp
bound
std
pop
xor
xor
aas
insb
das
pop
mov
iret
jmp
inc
jg
aad
pop
popf
fs
gs
inc
or
jnp
cmp
xor
fbstp
pushl
pop
outsl
cmp
cmp
push
cltd
dec
xor
push
cmp
addb
subl
lea
pusha
jbe
addr16
shll
test
and
popa
mov
mov
adc
lcall
jg
popa
cmp
dec
push
repnz
lahf
pop
fidivrs
ds
mov
mov
or
mull
add
lods
and
mov
aas
push
mov
lret
mov
scas
push
xor
je
pop
daa
sub
sub
cltd
scas
xor
into
js
out
or
lret
icebp
mov
push
cmc
or
pop
dec
push
add
sub
inc
mov
and
inc
mov
sti
sub
shrb
push
aaa
cld
pop
sbb
dec
add
adc
push
mov
sbb
out
ljmp
jnp
rcll
jg
sbb
pop
jns
dec
mov
ds
cltd
stc
imul
mov
mov
orb
mov
clc
popf
or
adc
loopne
rcll
pop
jg
lahf
adc
xchg
xchg
adc
mov
push
shrb
insb
jmp
pop
pop
jl
int3
mov
int3
je
dec
xor
lock
dec
js
lds
loop
outsb
mov
sub
xor
in
fdivl
dec
xchg
les
inc
ds
in
jl
cmp
imul
ffree
add
and
and
pusha
mov
fwait
jne
in
sub
cs
imul
mov
movsb
shrl
dec
dec
xchg
fsincos
sbb
dec
sbbl
inc
add
mov
pushf
bound
inc
mov
roll
insb
or
inc
mov
jle
add
rcll
test
pop
push
ja
adc
rolb
mov
imull
rcr
out
rcrb
xlat
std
adc
add
outsb
subl
mov
jmp
insb
andb
fs
adc
cmp
and
idiv
pop
jg
insl
sub
sbb
xchg
jg
jae
dec
and
aad
jg
rcr
fldt
sbb
xchg
fadd
in
cmp
cmp
outsb
scas
jno
jp
push
divl
push
mov
adc
xor
xchg
sbb
dec
dec
mov
inc
scas
add
pusha
lahf
mov
pop
adc
push
iret
sbb
dec
es
icebp
stos
sub
lods
and
push
adc
inc
adc
xor
ljmp
hlt
sbb
popf
data16
pop
ss
mov
sbb
fisubs
dec
sbb
inc
push
clc
add
imul
mov
pop
inc
mov
xlat
test
js
js
mov
sbb
sub
cmp
and
cltd
mov
mov
and
dec
or
movsb
cmpsl
enter
adc
insl
stc
cmp
push
addb
jbe
ret
lret
lcall
icebp
jecxz
jo
dec
xacquire
stc
test
add
mov
imul
push
dec
loop
jmp
in
and
dec
cld
pop
xor
or
xchg
mov
pop
add
push
mov
gs
jnp
inc
sbb
rclb
push
iret
lock
into
pop
fwait
or
mov
mov
lock
sbb
mov
mov
pop
push
inc
and
aam
add
dec
in
cwtl
pop
push
popf
inc
lahf
mov
cmp
xor
cmp
mov
mov
mov
fwait
clc
addr16
or
dec
xchg
mov
xchg
inc
dec
mov
js
lret
in
sub
xchg
lret
mov
ds
mov
dec
jge
push
aam
scas
int
xlat
es
cmpsb
jmp
aad
clc
push
nop
push
push
jl
aam
aam
ja
imul
jge
jno
pop
add
out
jno
push
inc
mulb
cld
bnd
mov
add
testb
out
cmp
mov
xor
xor
mov
dec
fst
ret
push
addr16
sub
cmp
aam
inc
clc
lcall
pop
cltd
jno
loope
xchg
sbb
mov
push
or
xor
fwait
int
jns
movsb
imul
jnp
bound
and
loop
pop
xor
cmp
call
loope
popf
inc
xor
jo
lea
jle
mov
cmp
aad
inc
inc
loopne
fsub
sbb
dec
fadd
enter
in
dec
dec
subb
hlt
jp
shrl
mov
fnstcw
pop
push
adc
jne
out
jp
std
mov
sbb
loopne
inc
mov
jae
testb
xchg
mov
data16
into
mov
addr16
pop
mov
cltd
inc
dec
jae
push
std
jbe
icebp
mov
sbb
cmp
adc
xchg
add
call
and
arpl
jmp
pop
jae
clc
jecxz
icebp
popa
xchg
ret
in
add
lock
cmp
mov
test
out
and
bound
std
ret
inc
cmp
lea
gs
popf
lcall
lock
jmp
cld
in
lret
cmc
sub
xchg
rolb
sub
or
jg
xlat
sbb
int3
mov
add
push
push
clc
xor
ds
cmc
mov
sub
pushw
fs
xor
jl
sbb
clc
shrl
pusha
shrl
mulb
cmp
xor
push
leave
jb
xchg
push
bound
es
mov
stc
or
ret
cmp
imul
ljmp
pop
xchg
and
add
loop
pop
and
jae
xchg
rorl
jb
enter
push
push
aas
std
popf
adc
fmuls
xchg
push
testl
dec
mov
fwait
dec
push
pop
inc
jnp
inc
outsb
mov
mov
xchg
and
xchg
sbb
call
leave
fsubs
cwtl
outsl
mov
xchg
pop
push
adc
mov
testb
loopne
push
test
and
mov
xor
pushf
cmp
popf
inc
ljmp
jbe
cmp
adc
inc
lahf
insb
lock
icebp
inc
dec
adc
xor
xor
cmp
add
and
lds
je
add
mov
pop
std
shl
aas
push
pop
jecxz
push
xor
cmp
ljmp
test
mov
add
mov
pop
or
scas
loopne
lahf
xor
lcall
fsubl
push
pop
imul
inc
inc
jg
xchg
xchg
jnp
repnz
rcl
test
xchg
and
mov
xor
jmp
mov
iret
ret
jmp
cwtl
inc
mov
shlb
cwtl
lret
jge
pop
hlt
pop
lcall
sub
mov
lods
add
insl
mov
hlt
gs
std
mov
jp
sar
cmc
ljmp
shr
add
pop
add
popa
jmp
negl
psadbw
test
sbb
lcall
dec
xor
loope
mov
sti
pop
cmp
sub
mov
lahf
test
pop
lcall
push
lcall
sub
xchg
pusha
jge
idivb
aad
dec
nop
vandps
movsl
pushf
pop
call
out
lret
repz
sub
jne
xchg
dec
out
inc
rorl
stc
pop
jb
push
test
ljmp
pop
mov
daa
lea
cmp
mov
pusha
cmp
lret
sti
mov
fistpl
adc
daa
mov
movsl
fstpl
lret
and
arpl
pop
mov
add
scas
lods
movsb
adc
aas
push
adc
cmp
subb
orb
xor
shl
push
mov
and
shll
xchg
imul
lahf
pop
jle
add
add
fs
daa
sub
ret
sub
lret
push
imul
add
cmp
pushf
mov
xchg
cmp
dec
xor
jno
and
test
ret
aas
mov
call
xchg
adc
inc
das
xchg
mov
xor
fwait
pop
sub
cmp
mov
shrl
cmp
rcrl
sbb
hlt
mov
push
mov
xchg
xchg
imul
fcompl
js
out
out
sbb
inc
ljmp
cmpsl
sub
or
and
loop
lcall
int
pop
arpl
mov
in
rol
jmp
add
rcll
test
dec
adc
sbb
mov
ret
test
fisttpll
jge
add
insl
cmp
or
push
sub
jmp
call
pusha
sbb
xchg
out
pop
ficomps
outsw
jl
xor
mov
push
cmp
nop
push
or
xchg
lahf
or
adc
incb
cmp
jbe
sub
ret
mov
punpckhwd
fwait
xchg
dec
dec
iret
dec
fyl2xp1
in
pop
adc
arpl
jb
in
pop
stos
shlb
mov
lds
push
jmp
xchg
push
fwait
addr16
jns
scas
imul
shr
mov
rclb
or
pop
in
xchg
pushf
daa
fsubl
mov
jns
adc
cmp
stos
mov
scas
mov
dec
or
pop
mov
cmp
aad
jl
push
push
mov
test
int3
loop
pop
sub
bound
pop
jb
les
je
mov
pop
jecxz
testl
fcomps
loop
push
shlb
cmpsb
pop
cltd
insl
aas
dec
mov
mov
jns
jp
jno
insl
xor
push
std
push
mov
and
pop
mov
mov
cmp
mov
cmp
pop
movsl
xchg
shl
jl
repz
pop
or
aam
mov
xor
mov
mov
inc
shl
inc
in
cmpsl
mov
push
pop
mov
rol
mov
imul
insl
sbb
jmp
push
push
add
pop
adc
mov
push
mov
or
mov
popl
mov
dec
ljmp
test
xor
fdivrl
popf
cmp
out
lret
push
cld
or
sub
sarb
fisubrs
mov
jle
je
or
jns
mov
not
inc
das
in
iret
dec
ret
enter
lods
cmp
call
mov
in
ret
pop
dec
mov
inc
cmp
mov
movsl
sub
insb
icebp
mov
fbstp
jl
add
loopne
mov
jb
clc
ja
cmp
lea
outsb
dec
pop
inc
sbb
addr16
in
fdivrl
addb
scas
incb
aaa
es
fnsave
loopw
xor
ss
mov
in
lret
push
cmpsb
push
out
pop
sub
add
cmp
mov
mul
mov
mov
adc
push
nop
xchg
push
cli
out
mov
jl
test
sbb
arpl
popf
pop
sbb
fsts
ds
xchg
test
lret
mov
adc
pop
gs
cmpsb
push
test
pop
shl
push
aas
scas
xchg
push
sbb
mov
mov
cmp
and
mov
mov
and
arpl
push
in
mov
mov
xor
mov
push
mov
cmp
push
insb
mov
dec
subl
out
xchg
es
mov
mov
clc
or
arpl
int
ja
push
pusha
and
repz
iret
pop
sbb
ret
cmpsb
repz
mov
lret
push
add
mov
int
lcall
ss
xchg
pop
int
inc
cmp
xor
xor
mov
in
dec
bound
sbb
enter
adc
adc
fadd
xlat
out
ret
das
or
mov
or
shll
std
enter
js
sbb
js
sahf
adc
pop
dec
es
push
movsl
add
js
mov
pop
push
dec
mov
mov
fldl
imul
pop
xor
pop
inc
gs
ret
popf
pop
inc
sub
sbb
sub
enter
popa
hlt
mov
inc
xchg
js
sub
jmp
daa
add
xchg
sbb
and
shlb
adc
xchg
int
push
jae
inc
fucom
call
pop
adcb
mov
neg
mov
mov
jae
inc
pop
imul
cltd
sub
inc
mov
movsl
cs
xchg
inc
xlat
or
test
loope
dec
stc
or
or
rcll
pop
sbb
cmp
push
or
jle
mov
jmp
arpl
lret
fmull
push
shrl
in
jne
ds
in
push
insl
rorl
ds
addps
sbb
movsl
fs
mov
and
sub
dec
arpl
sarl
or
ds
add
jns
movsb
push
hlt
scas
mov
cwtl
or
repz
pop
ror
stos
and
ljmp
jl
call
xor
cmpsl
dec
jnp
inc
popa
or
push
sbb
pop
dec
sub
mov
mov
add
fdivrp
jns
cmp
in
int
push
cli
mov
adc
or
add
dec
and
lea
push
fiadds
or
jb
sbb
fmull
test
xor
ret
mov
dec
out
lods
mov
xchg
jge
lret
popa
mov
mov
pop
incl
dec
in
jp
mov
arpl
aaa
cmpsb
mov
xchg
roll
adc
in
cs
mov
sar
scas
adc
scas
lods
lahf
cmp
mov
cmp
ficoms
cmpsb
out
mov
shlb
faddp
add
push
mov
and
push
out
movsb
add
in
inc
xchg
orb
lods
lods
cmp
fwait
cmp
jmp
test
sub
inc
fimuls
call
ficomps
inc
lahf
ja
ret
idivw
jae
fistl
sub
mov
push
sbb
scas
fs
mov
or
jmp
jg
and
sbb
xchg
cmp
movsl
aam
pop
lods
bound
insl
mov
jg
and
cmp
push
mov
test
add
repz
add
mov
shlb
insb
ds
leave
dec
loopne
xchg
adc
add
pop
mov
cmc
sbb
or
push
insb
lds
inc
inc
in
int
jg
or
sbb
xor
cmp
pop
cmc
subb
pop
mov
data16
je
jnp
test
or
pop
push
aam
mov
test
cmp
sbb
inc
cmc
add
dec
sub
adc
or
dec
xor
lret
mov
mov
pop
sbb
jb
cmp
jmp
fcmovne
or
push
cld
pcmpeqw
gs
es
std
dec
push
jle
mov
pusha
and
xchg
leave
inc
int
jmp
cmc
push
dec
pushl
mov
xchg
ljmp
push
test
lea
int
xchg
fdivl
psllq
adc
pop
sar
fwait
out
jmp
adc
stos
shrb
pushf
xchg
mov
lods
rorl
lcall
stc
clc
in
cmp
pop
and
push
mov
jg
push
repnz
sub
addr16
xor
std
hlt
scas
add
sbb
rorl
imull
cmpsb
mov
les
jg
or
mov
arpl
loope
inc
lock
jns
xchg
dec
adc
push
dec
pop
xor
out
fbld
daa
rcr
mov
lds
sbb
xchg
xor
dec
push
and
in
adc
idivl
pop
js
jecxz
subl
call
test
xor
pop
int3
mov
adc
pop
and
test
dec
sbb
mov
mov
sbb
pop
roll
test
pushf
in
jmp
addr16
lods
sbbl
scas
sbb
test
rcrb
push
pusha
test
xorl
xchg
lcall
aas
cld
push
xchg
cmp
jecxz
add
sahf
push
adc
in
rorb
sub
mov
xor
mov
aam
dec
mov
xor
xchg
insl
mov
add
data16
mov
std
call
cmp
sti
pop
cltd
mov
mov
insl
dec
movsb
loope
scas
mov
test
xchg
pop
in
jne
insl
or
mov
pop
dec
divl
mov
addr16
lods
scas
lock
mov
pop
jecxz
cmp
mov
mov
jb
push
pop
cli
test
ja
movb
and
and
mov
add
cmp
pop
xlat
cmp
jae
pop
lods
add
rcl
xor
mov
out
loop
daa
in
adc
scas
sar
jno
jnp
aas
mov
shl
add
sub
push
dec
cli
or
jg
icebp
sub
jae
add
ret
jae
sbb
and
fmuls
adc
xor
pop
cli
mov
icebp
sub
ret
pop
mov
pop
push
daa
addr16
shlb
push
mov
sbb
std
jmp
cs
arpl
repz
pop
not
mov
hlt
mov
inc
std
stos
rclb
inc
fsubrs
add
xchg
add
cmpl
mov
jl
lcall
std
or
push
pusha
jp,pn
jns
sub
xchg
xorb
and
pop
add
cli
popf
dec
push
out
lods
pushf
fs
out
and
cmp
jmp
imul
cld
sub
sbb
xor
sbb
push
int3
in
cmp
adc
dec
stos
popl
mov
jle
sti
loope
fwait
sub
std
push
repnz
inc
sbb
inc
push
sub
cmpsl
inc
mov
idiv
je
loope
les
cmc
jns
idivl
and
lds
rorl
out
les
repnz
sub
xchg
pop
mov
pop
inc
push
mov
pusha
flds
fdivr
repz
loopne
fadd
push
or
dec
add
add
shrl
sbb
sbb
imul
ja
jmp
mov
sbb
sbb
sub
shll
add
mov
rcll
jo
jmp
inc
mov
cmc
hlt
and
jnp
lds
and
psraw
cmpsb
in
gs
adc
divl
mov
mov
and
nop
cmp
cmp
mov
inc
or
sbb
and
pop
lods
clc
inc
mov
lret
push
stos
aam
xor
sarb
jnp
andb
divl
xchg
leave
add
orb
and
repz
add
cmpsb
rorl
in
xlat
in
les
and
dec
pop
call
hlt
pusha
out
pop
popf
jmp
push
mov
outsl
sub
nop
addr16
cmpsb
aaa
and
iret
sbb
leave
ds
add
jg
lock
adc
lods
aaa
dec
jb
fisubs
jle
inc
enter
adc
aad
push
imul
sbb
addb
cltd
test
add
mov
gs
insl
clc
iret
mov
inc
ret
jno
stos
pusha
mov
sub
dec
int
lea
call
outsl
mov
outsb
cwtl
xchg
in
and
inc
dec
leave
in
enter
leave
jns
push
test
jmp
push
mov
js
xchg
add
push
mov
jp
pop
div
mov
jns
mov
mov
and
push
cmp
jecxz
hlt
dec
adc
leave
push
jp
add
test
cmp
cmp
cs
pop
and
push
mov
sub
lahf
xchg
sbb
out
inc
sbb
pop
cmc
push
hlt
test
mov
pop
aad
mov
aam
stos
inc
inc
in
and
cli
mov
jge
ds
push
lods
sarb
dec
sbb
sbb
add
cmc
mov
push
ss
xor
in
fidivrs
mov
cmp
push
cmp
mov
push
xlat
cltd
add
or
in
stos
mov
inc
add
jae
adc
mov
loopne
sbb
mov
insl
je
xor
xor
and
orb
xchg
sbb
mov
mov
mov
ja
pop
jae
addr16
popa
out
out
mov
sbbl
aas
imul
mov
in
and
adc
in
dec
cltd
pop
repnz
repnz
xor
daa
push
out
xchg
inc
xchg
xchg
push
test
fsub
and
pop
daa
lret
iret
loope
icebp
movl
jge
gs
notl
arpl
test
inc
jge
sbb
idivl
rol
outsl
fmul
push
lahf
xchg
inc
jecxz
aam
mov
pop
inc
test
inc
ret
outsl
mov
in
adc
std
arpl
push
xlat
cmp
leave
aad
lods
addl
xchg
push
dec
ret
rcrb
ds
xchg
cmp
add
inc
jmp
push
sahf
popf
mov
add
xchg
or
mov
and
sub
mov
jecxz
push
add
test
dec
test
xchg
ret
jae
ja
clc
jl
outsb
test
push
xchg
push
into
adc
das
lret
jns
add
sbb
or
jb
out
push
adc
add
mov
rorl
movsl
fmul
in
out
jle
leave
rorb
cmc
sbb
push
mov
in
cmp
test
jae
aaa
xchg
and
shlb
pop
pop
jnp
gs
xchg
mov
cmc
pop
mov
les
cltd
aas
or
xor
mov
repnz
sub
jo
cmp
and
aam
out
adcb
jbe
xchg
sahf
pop
out
fisubrs
push
arpl
out
mov
lods
push
outsl
or
ljmp
or
inc
xchg
dec
jge
into
xchg
pushf
cmp
imulb
loop
inc
mov
mov
inc
mov
in
adc
sub
ds
testb
jnp
pop
insl
aaa
js
mov
mov
mov
cli
bound
bound
enter
out
mov
js
xchg
pop
adc
fdivrp
cwtl
cmp
mov
arpl
mov
aaa
mov
pop
aam
pop
lcall
cmp
jg
out
xor
and
push
push
and
and
jg
iret
rol
adc
fnstenv
ret
jb
sbbb
inc
bound
and
out
jb
pop
lods
or
sti
cli
rclb
sbb
out
call
ficoml
popf
xrelease
scas
xchg
rcll
aad
mov
adc
adcb
fsubrl
out
dec
dec
ret
mov
adc
push
mov
xchg
dec
or
dec
cltd
pop
pop
adc
imull
jae
dec
or
mov
mov
movsl
fwait
pop
js
mov
jle
push
inc
and
cltd
push
jae
out
adc
cld
jecxz
xlat
scas
subb
mov
push
sub
pop
cltd
inc
and
dec
iret
test
dec
sub
cmpl
sbb
xor
loop
inc
xchg
call
bnd
and
and
lds
clc
daa
cwtl
cmp
inc
faddl
rcll
push
cld
mov
dec
mov
fst
sbb
cmpsl
inc
into
fwait
aad
cmp
mov
jg
sub
aam
lahf
mov
pop
mov
mov
jle
dec
adc
and
push
push
jg
pop
sub
lret
add
xchg
lret
push
mov
or
jne
add
jg
mov
or
mov
inc
in
mov
lods
pop
xlat
fimuls
adc
inc
clc
jno
dec
data16
sbb
int
xchg
ljmp
sbb
fwait
jbe
adc
aaa
cmpsl
pop
sbb
aas
push
sbbb
mov
ficomps
or
mov
imul
inc
mov
pop
inc
test
or
aas
mov
sarl
inc
fmuls
cmp
inc
mov
ds
or
andl
addl
push
jns
sbb
mov
push
xchg
js
int
ret
dec
and
cli
xor
leave
test
lret
push
inc
lods
neg
aaa
popa
add
aaa
hlt
mov
pop
inc
rcl
xchg
jno
aaa
pop
xchg
pop
jns
add
lahf
push
xor
in
std
pop
dec
cld
or
cmp
mov
lock
inc
push
sub
push
or
inc
pop
xor
fildl
fdivrl
pop
and
pop
in
sbb
shll
je,pt
mov
mov
data16
sbb
in
or
add
sub
mov
sbb
lret
or
pop
mov
mov
sbb
adc
lahf
xor
mov
ljmp
cli
jg
cmp
push
inc
test
int
scas
idivl
push
mov
jo
push
popa
icebp
inc
mov
enter
push
mov
fwait
mov
popa
fcomip
stc
aam
daa
or
sub
jecxz
test
xor
xor
sahf
xchg
in
inc
loopne
stc
movsl
lret
cmp
shrb
cmp
insl
jge
in
xchg
xor
das
inc
dec
sbb
outsl
add
mov
push
fnstenv
xchg
dec
mov
inc
sbb
loope
shrl
fdiv
ret
push
mov
xchg
jbe
xchg
mov
push
push
cmp
enter
cmp
fcoml
test
add
inc
jbe
add
popf
mov
mov
inc
push
xchg
imul
mov
jp
or
sti
pop
movsl
movsb
xchg
repnz
adc
push
or
sbb
fs
ja
push
in
into
outsl
addr16
xor
inc
ficomps
mov
dec
mov
roll
cmpsb
lods
add
fidivrl
mov
ss
lods
adc
clc
jp
leave
xchg
repnz
loop
lock
dec
cs
mov
test
imul
ljmp
rcl
hlt
xchg
inc
dec
ss
or
aam
in
daa
lds
mov
pop
push
inc
mov
cld
js
nop
adc
push
cs
sub
inc
ja
and
adc
xlat
mov
cld
mov
xchg
iret
lods
pop
cmp
mov
mov
jmp
pop
sarb
outsb
stos
cmp
std
inc
inc
sub
fmul
shll
dec
xchg
xchg
repz
negl
mov
push
int3
jle
adc
push
push
jns
dec
mov
hlt
mov
test
mov
outsl
cmp
inc
add
in
pushf
popf
jns
sub
sbb
mov
xchg
daa
add
xorl
mov
mov
outsl
jnp
inc
sub
sahf
mov
sbb
data16
xchg
sub
imul
push
push
cli
push
pop
jo
inc
dec
addr16
mov
in
mov
test
pusha
test
leave
jnp
call
pop
es
arpl
push
jecxz
lret
pop
test
test
cmp
hlt
jo
loop
add
es
das
pop
mov
int3
jp
daa
inc
lods
xchg
jnp
iret
ja
fistl
lret
dec
lret
sub
or
loopne
push
sub
lods
rol
mov
xchg
test
lret
push
in
add
inc
gs
sbb
mov
std
sbb
data16
mov
pop
in
pop
lret
mov
sbb
pop
rolb
and
adc
not
push
outsl
and
xor
xchg
fsubrs
pop
jp
mov
lahf
or
out
cmp
inc
rcl
stos
test
outsb
lcall
cmp
cmp
pop
out
sbb
aad
aad
sub
repnz
adc
add
add
jo
mov
arpl
add
dec
or
xchg
pop
push
aam
fdivs
mov
iret
and
and
test
mov
or
dec
xchg
push
pop
sub
dec
scas
inc
jmp
jecxz
out
mov
data16
fldt
mov
addl
movsb
dec
or
stos
fsubrs
mov
scas
ret
ret
in
daa
xor
lods
jo
loope
mov
out
xor
adc
xlat
cs
xchg
cmpsl
fwait
xlat
js
test
shrl
xorb
loop
orl
test
in
xor
popf
and
xchg
movsl
pop
dec
sahf
mov
xlat
ja
lods
sbb
adc
and
imul
pusha
adc
dec
lahf
mov
loop
ljmp
shr
pop
xchg
jecxz
pop
mov
outsl
inc
lds
jnp
movsl
mov
xchg
mov
inc
fnstcw
mov
sbb
sti
lcall
je
les
cltd
cmp
cmp
mov
stos
sub
mov
lock
shlb
dec
push
add
push
lds
mov
addr16
xchg
mov
fs
ret
lds
sub
mov
sbb
push
enter
pop
fildll
jecxz
outsb
jmp
fcmovne
jge
cli
push
push
notb
mov
sbb
test
pop
pop
or
inc
mov
ffree
ret
mov
sub
and
test
or
sarl
adc
mov
mov
xchg
hlt
lret
sbb
jecxz
sbb
out
adc
and
lahf
push
lcall
shll
ret
or
les
movsb
out
adc
rorb
xchg
loop
nop
repnz
mov
filds
sbb
push
adc
push
psubsw
nop
mov
pop
and
xchg
mov
sbb
fdivr
inc
dec
pop
jl
stc
ret
xchg
mov
mov
sub
jecxz
cmp
inc
sub
bound
lret
sahf
adc
loop
inc
push
sbb
imul
cmovbe
mov
add
sub
adc
mov
mov
loopne,pn
repnz
dec
lods
daa
jbe
sub
pop
mov
aam
loop
bound
inc
repnz
mov
in
xchg
mov
or
adc
jg
mov
dec
mov
loope
popf
and
push
push
dec
test
or
cwtl
gs
cltd
jl
fwait
imul
dec
sahf
adc
dec
iret
xchg
daa
int
dec
push
or
xchg
cmp
sbb
xlat
outsb
xchg
add
add
push
cmpsl
cltd
enter
movsl
push
dec
fstl
ds
sub
sub
inc
xchg
pop
dec
mov
lcall
cmpsl
daa
cmpb
mov
mov
lahf
stos
int
fsts
xchg
fidivl
nop
or
aaa
cs
and
insb
sub
jae
jmp
ret
mov
stos
xor
stos
adc
sbb
mov
xor
dec
pop
cmp
stos
popa
jecxz
push
repz
fidivl
cmpsb
cmp
shrl
jns
mov
cwtl
sub
lds
fnstenv
mov
or
imul
mov
jg
xlat
jb
movsl
mov
or
arpl
mov
movsb
std
insb
decl
mov
cltd
mov
mul
or
sbb
fisubrs
lss
sub
xor
mov
dec
push
ja
ficoml
out
xor
sbb
mov
lret
lods
outsl
shlb
or
js
out
push
ret
rcll
inc
push
and
mov
addb
push
push
mov
clc
scas
sbb
rol
push
dec
sbbb
clc
cltd
sahf
cmpsb
and
out
or
aad
lahf
cmpl
cmp
push
push
cwtl
sbb
mov
jb
add
test
ret
and
cmp
iret
mov
xchg
xchg
and
nop
push
data16
xchg
loop
mov
mov
cmp
test
iret
test
mov
ret
xlat
sar
xchg
jbe
pusha
pop
andl
aas
sub
cltd
cltd
aas
cld
inc
add
cs
sub
cltd
sbb
pop
or
sahf
xchg
inc
cwtl
icebp
shrl
jo
hlt
call
inc
into
ret
adc
jmp
jo
movsb
testb
or
ds
pop
out
imul
lea
aam
jne
test
mov
test
sub
mov
jle
test
sub
cltd
ja
sti
lret
repz
int3
fsts
stos
mov
sti
nop
fsubrs
je
jmp
mov
cmp
mov
or
leave
scas
pop
dec
daa
add
xchg
xorb
sub
pop
sub
add
loope
notl
push
addl
movsl
gs
divl
int3
pushf
es
pop
inc
aas
jb
movsb
inc
inc
fstpt
pop
jo
jne
pop
aaa
call
xchg
call
add
test
push
lods
mov
or
ror
jbe
mov
daa
rorb
xchg
mov
lret
mov
testb
lret
gs
test
cmp
cmpsb
mov
sub
mov
push
mov
idivb
xlat
outsl
inc
and
out
test
or
mov
daa
in
or
std
andb
sub
pusha
je
or
cmp
sub
sti
lret
sbb
push
add
xchg
lahf
cli
pop
shll
xchg
mull
outsb
aas
call
mov
je
inc
frstor
mov
adc
mov
out
jp
xchg
push
mov
hlt
dec
and
test
addb
lods
jmp
add
pusha
push
pop
sub
mov
leave
insl
rclb
dec
in
sarb
daa
cmp
pop
and
push
insl
lods
test
rcr
mov
bound
and
dec
ret
sahf
stc
xchg
mov
movsb
push
xchg
aaa
fmuls
mov
nop
rcll
mov
xchg
es
pop
and
lea
cli
nop
sub
push
xchg
test
or
orb
mov
rcrl
xor
mov
sub
in
iret
aas
iretw
adc
push
push
jmp
and
mov
dec
ljmp
sarb
add
jp
lret
add
mov
andb
aad
pop
mov
push
push
mov
jnp
or
in
push
mov
xchg
outsb
add
ds
inc
sti
push
es
fmull
push
lea
push
mov
pop
xchg
adc
enter
add
jne
mov
mov
sarl
popf
push
cmp
ret
popf
cmp
inc
inc
scas
pop
inc
push
push
inc
es
push
out
mov
notb
xor
cmp
insb
pusha
xor
jge
inc
inc
jl
insl
sbb
mov
cli
or
sbb
lea
mov
lret
adc
mov
dec
ret
adc
cmp
sub
ret
or
popf
enter
dec
hlt
movsb
ljmp
adc
mov
test
fs
xchg
sbb
jb
dec
push
jge
mov
xchg
stos
test
mov
add
pop
mov
ret
jne
and
pop
aam
stc
rorl
in
shr
lahf
dec
gs
push
ja
loope,pt
daa
and
mov
mov
jecxz
fstpl
push
daa
push
imul
iret
sbb
movsl
mov
jb
inc
addl
fs
mov
mov
xor
xor
je
pop
es
add
mov
out
sub
or
ja
dec
cli
add
xlat
movsb
stos
hlt
in
insl
out
xchg
mov
pop
test
frstor
adcl
adc
jo
sbb
mov
test
pusha
imul
adc
dec
add
jecxz
xchg
mov
pop
pop
mov
outsb
cmp
xrelease
shll
add
in
push
sub
fwait
jp
mov
sub
sub
lret
pop
scas
je
cmp
add
jae
xlat
clc
btc
mov
lahf
js
mov
aas
movsb
inc
inc
lods
rorl
sbb
lcallw
push
xchg
mov
or
bound
cmc
mov
push
mov
adc
aad
mov
gs
int3
cmp
call
test
pop
testl
push
frstor
xor
push
xchg
cmp
loopne
rcrb
loop
gs
nop
mov
add
cmp
mov
cli
xor
push
in
incl
push
push
pop
or
out
mov
push
repz
mov
add
xor
inc
mov
rolb
cmp
mov
dec
sbb
je
inc
lcall
cmpb
sbb
inc
add
je
mov
xor
push
loope
imul
test
invd
pop
nop
xor
cmp
mov
adc
popa
and
outsb
lret
xorl
mov
mov
mov
ljmp
cmp
fsubp
std
jmp
dec
pop
xchg
in
ret
push
mov
negb
fcmovbe
ljmp
pop
ficomps
dec
ret
mul
dec
xor
xlat
cmp
mov
pusha
mov
daa
push
push
jmp
ret
test
inc
push
dec
sub
lds
fldenv
mov
rcrb
gs
mov
clc
aaa
mov
lods
xor
mov
jae
xorl
push
mov
loope
pcmpeqb
in
pop
lahf
mov
jle
push
pop
repnz
mov
fcomip
xor
dec
push
scas
inc
jne
subb
in
fdivrl
xchg
loopne
loop
sbb
ret
stc
pop
jno
pop
xor
iret
push
sub
add
ja
add
mov
pop
jmp
outsl
xchg
sbb
insl
sub
adc
jns
call
insl
or
int
ljmp
daa
pop
outsl
sub
lds
dec
cmc
insb
lahf
xchg
and
insb
mov
push
int
test
cmp
ljmp
mov
subl
cmpsb
pop
dec
outsl
bound
mov
insb
adc
push
xor
add
jb
xchg
xchg
fldl
sub
or
dec
call
repnz
push
or
movsl
stc
enter
jne
sbb
je
rcr
sub
xchg
mov
adc
mov
popf
pop
pusha
mov
cmpsl
aas
pop
xchg
sub
cmp
stc
aas
test
sti
and
mov
lcall
cltd
test
pop
pop
loopne
lods
call
test
das
cli
xor
sti
xor
cmp
test
or
cmp
loope
inc
lea
sub
xchg
push
lods
sahf
pusha
movsl
lret
sbb
pop
xchg
lea
aas
int3
lcall
dec
dec
inc
cmp
cmp
push
pop
lcall
lret
pop
stos
movsb
lret
push
into
mov
pop
xor
js
and
test
insl
sahf
ret
xchg
jp
sbb
push
cmp
mov
mov
sub
stos
int3
mov
enter
push
push
jmp
adc
xchg
cmpsl
lahf
mov
jno
xor
imul
xchg
jnp
and
je
sbb
js
push
mov
or
aad
rcrb
test
hlt
call
xor
hlt
mov
add
xor
bound
cmp
sub
mov
xchg
loop
dec
ss
fildll
adc
in
mov
outsl
call
stos
stos
insb
addl
lea
int
or
mov
add
lds
push
mov
push
xchg
dec
lds
test
sub
pop
daa
push
andl
ret
out
repz
iret
test
cli
mov
lcall
mov
in
mov
mov
out
mov
xchg
push
jmp
test
mov
sbb
shl
push
jnp
fimull
enter
sahf
inc
loop
mov
subl
bound
inc
mov
adc
pushf
push
rcl
hlt
pop
ss
push
lahf
dec
jbe
or
xchg
adc
dec
rcll
in
dec
outsb
mov
es
aaa
dec
adc
adc
xchg
aam
mov
out
fldcw
adc
ja
roll
jne
or
mov
mov
out
into
fmuls
shrb
iret
cmp
lods
cltd
adc
mov
icebp
rcrl
jl
fwait
lods
fistpll
adc
stos
je
add
fs
and
mov
outsl
fs
add
mov
sti
dec
ret
stos
dec
int3
inc
add
iret
pusha
cmp
lods
xor
and
in
pop
inc
pop
mov
xor
xor
push
stos
pop
mov
pop
xchg
sbb
test
pop
outsl
mov
cmp
lds
mov
pop
xchg
cmp
push
mov
sub
add
jo
ret
cltd
xor
sub
scas
inc
or
lods
add
cmp
addr16
fcom
sub
xor
mov
out
jo
dec
mov
adc
and
in
inc
js
out
lret
xchg
dec
shlb
orl
clc
iret
mov
fwait
sub
cmpsb
cmp
and
gs
insb
cmp
mov
xchg
xlat
xchg
push
sbb
cmc
mov
push
mov
int3
mov
xor
dec
mov
jl
jmp
push
cmp
test
mov
inc
movsb
fcomps
movb
mov
and
xor
roll
sbb
rcll
cs
inc
test
add
stos
nop
fbstp
gs
push
rclb
mov
add
jno
push
cli
ljmp
mov
and
push
cmc
fidivl
mov
scas
xchg
push
jae
cli
jns
xchg
xchg
jno
popa
imull
pop
clc
push
int3
and
push
icebp
outsb
movsb
xchg
insl
sbb
clc
aaa
in
adc
cmp
or
cmc
jo
clc
push
mov
push
mov
mov
leave
jb
popa
mov
sub
pop
sub
pusha
dec
data16
std
es
mov
push
push
lret
mov
pushl
xchg
mov
add
lcall
inc
dec
and
push
ret
ror
lret
jmp
inc
ror
jo
inc
jb
fildl
cwtl
in
lcall
mov
add
shll
cmc
jecxz
or
dec
mov
xor
mov
leave
add
inc
stc
fidivrl
dec
jle
mov
in
inc
jno
fcmovb
enter
lods
pop
mov
iret
pop
mov
inc
or
xchg
cmpsb
movsl
fwait
das
and
test
sub
mov
cmp
pop
orl
xchg
sub
call
push
mov
lret
and
ja
jne
lahf
pop
pushf
ret
xchg
adc
dec
dec
pop
out
adc
jnp
pusha
lock
lods
lock
add
lret
testl
add
inc
into
out
test
xchg
inc
cmovo
push
or
jae
je
es
cmp
je
jmp
movl
pop
jg
scas
adc
inc
leave
or
push
andb
fstps
ljmp
std
mov
sbb
xlat
or
mov
xor
xchg
jne
jl
lret
mov
loopne
icebp
fsubp
cld
loopne
and
popa
dec
out
sub
mov
and
es
call
pop
jge
pop
xchg
xor
cmpsw
cmp
or
dec
aaa
jecxz
mov
dec
cmpsb
mov
jecxz
lds
cwtl
inc
push
dec
mov
andl
adc
adcl
mov
pop
xchg
adc
and
aam
and
or
pop
jge
fidivrs
add
and
dec
lods
inc
repz
add
push
cld
in
xlat
addr16
das
mov
mov
inc
jae
daa
and
rorl
fsubrl
jbe
out
pop
dec
xchg
mov
mov
addr16
cmp
test
cmp
clc
cwtl
xor
std
aad
mov
out
pop
adc
inc
add
push
adc
lock
adc
pop
mov
jg
push
push
dec
xchg
stc
inc
push
aas
jl
mov
mov
or
pop
outsb
jge
movsb
mov
aad
fisubrl
test
xchg
icebp
adc
stos
push
push
cmpsl
stc
mov
jmp
xor
data16
ds
rclb
mov
repnz
jl
mov
fstpl
xor
jle
loopne
sbb
add
insb
lcall
inc
jl
push
std
mov
insl
mov
out
int
or
mov
or
jle
aam
enter
in
outsb
aad
mov
cli
push
inc
sub
add
in
loope
rcrl
pop
fwait
rolb
shll
mov
mov
push
int
pop
out
mov
and
call
enter
outsb
loopne
push
js
lcall
ds
xchg
stc
inc
jg
push
adc
mov
mov
xor
pop
mov
sbb
inc
sub
push
mov
out
rolb
inc
lcall
testw
fisubrl
jnp
movsb
xchg
mov
lret
pushf
push
mov
or
xchg
jmp
adcl
add
out
lock
mov
shll
add
js
scas
xchg
addr16
sbb
push
push
test
imul
lahf
jae
add
cmc
pop
mov
jl
push
sbb
push
cli
mov
aaa
adc
test
out
adc
stc
imul
repnz
into
ret
sbb
fnsetpm(287
dec
mov
adc
and
cmp
ss
cmp
inc
jmp
fs
aas
repz
das
mov
mov
pop
insl
popf
xlat
push
in
cmp
aad
aaa
xchg
inc
xor
pushf
shrb
mov
test
cmp
push
jnp
push
jbe,pn
dec
xlat
jp
adc
pushf
and
lods
fmull
loope
add
shlb
mov
int
rolb
imul
sbb
popa
arpl
out
stc
out
into
gs
cwtl
pop
js
cwtl
std
pop
add
scas
stc
jge
scas
add
pushf
fs
inc
push
mov
dec
or
test
xchg
cmp
pushfw
xlat
addr16
and
mov
repz
mov
jecxz
jmp
scas
sub
sbb
aam
mov
mov
inc
or
dec
ficomps
and
dec
mov
pop
fmul
inc
xor
push
sarl
sarl
jae
sahf
in
xchg
loop
stos
stc
sub
leave
lcall
out
stos
pop
pop
lock
xor
and
mov
or
lret
cmp
int3
inc
inc
mov
mov
shl
push
pushf
dec
add
jne
leave
scas
push
outsb
push
sub
lock
bound
lods
out
mov
popa
sbb
inc
xchg
test
ret
mov
sbb
push
in
sbb
sub
enter
iret
sub
or
and
dec
mov
pop
inc
daa
imul
subb
jge
inc
cmp
sub
jecxz
dec
xchg
lock
fcmovnu
jmp
and
sbb
sub
mov
adcb
xor
and
xor
sub
icebp
ret
imul
jecxz
inc
gs
adc
xchg
movsb
and
cmc
mov
add
or
lret
loope
les
lods
push
fcomps
daa
lods
ret
sqrtps
fbstp
pusha
shrb
dec
push
xchg
jne
mov
cmpsb
push
mov
shll
sub
rorb
pop
in
aad
aas
and
adc
sub
xchg
jge
aad
add
xchg
repnz
mov
lahf
into
in
lods
push
cmp
xchg
stos
add
jl
mov
jb
loop
movsb
lret
jmp
add
stc
jae
lods
jnp
sbb
add
cwtl
in
daa
xchg
push
or
pop
dec
sbb
cmpsl
jg
and
mov
leave
loop
les
pop
adc
and
test
cli
add
xchg
mov
push
pop
das
nop
pop
lret
repnz
clc
mov
shr
cmp
mov
fisttpll
push
aam
sysexit
pop
and
in
je
jl
pop
hlt
xchg
clc
xchg
pop
mov
xchg
xchg
ret
mov
scas
fmul
sub
and
daa
ljmp
push
pusha
cmp
push
aad
out
testb
adc
and
push
pop
sub
pusha
push
or
rol
lods
je
sbbl
fnsave
cmp
rcrb
push
add
inc
ret
mov
mov
repz
pop
xor
jl
pushf
dec
sbb
inc
jns
jecxz
jl
xor
sbb
mov
adc
lret
dec
jmp
sbb
cs
shlb
sub
jns
inc
cltd
mov
push
imul
or
and
xchg
stos
data16
out
sarb
cltd
std
mov
cmp
insb
int3
and
shlb
lcall
aam
jnp
push
arpl
cs
cmpsl
lods
xchg
ss
pop
test
xchg
int3
dec
icebp
aaa
orb
fimull
add
xor
xor
fbld
xor
push
das
lea
jg
cmp
jo
sub
sub
lcall
or
movsl
cmp
jno
div
fimuls
sub
add
and
clc
cmp
lcall
mov
xchg
inc
cmpsb
pop
into
push
push
pop
out
mov
sbb
mov
add
sbb
sub
pop
arpl
ror
pop
mov
test
pop
pop
bound
adc
sub
xlat
sbb
in
mov
into
adc
or
push
add
cmpsl
fistpll
pop
mov
pop
sahf
es
and
jmp
adcb
lret
xor
sbb
rcl
inc
repz
push
outsl
imul
inc
dec
outsl
js
pop
aad
movsl
gs
mov
push
adc
cli
stos
cltd
shrb
jp
lock
sub
std
sub
mov
push
loopne
hlt
adc
mov
into
das
adc
std
ljmp
dec
ret
stos
inc
faddl
push
dec
push
mov
into
leave
sahf
jb
sbb
add
fwait
cli
fisubrs
push
inc
or
lock
cmpl
xchg
cmovs
and
xchg
fs
das
ss
pop
imul
loop
or
call
inc
sbb
and
adc
or
jnp
mov
xchg
test
push
lahf
sbb
adc
in
ja
fbstp
imul
bound
dec
jp
pop
sbb
jno
movsb
dec
bound
mov
add
pusha
rolb
or
loope
stc
jne
mov
mov
cmp
xchg
mov
xor
xchg
xchg
adc
and
sarl
movsb
cwtl
loope
jne
and
mov
mov
loop
xchg
shl
data16
jmp
add
loope
dec
dec
loope
sbb
scas
push
enter
subl
xchg
cli
mov
out
jae
cmp
mov
pop
pop
sbb
imul
cli
pop
pop
push
jmp
ret
mov
push
xchg
lret
insl
cwtl
mov
mov
dec
cmp
enter
data16
push
in
imul
xchg
push
adc
test
adc
adc
or
das
mov
and
mov
xchg
es
gs
push
xchg
imul
sub
in
adc
xor
add
test
sub
jne
push
cmc
insl
xchg
icebp
in
xor
fbld
mov
dec
sub
dec
jno
sarb
jecxz
mov
push
sub
and
xchg
aad
pop
jp
fstl
dec
out
adc
push
lcall
inc
add
add
aas
rolb
jae
stc
mov
xchg
ja
jnp
mov
lock
aam
dec
cmp
push
push
into
mov
rolb
or
std
push
in
rcrl
lds
fsubs
add
imul
push
insb
dec
es
mov
stos
pusha
dec
out
pop
or
cmp
je
add
dec
push
aas
lods
sub
pushf
leave
pop
sbb
cmp
lods
xchg
push
pop
push
and
dec
xlat
shr
loopne
mov
inc
mov
jno
sub
std
jns
nop
addr16
or
push
sti
and
daa
mov
sbb
mov
xchg
pusha
lock
or
dec
dec
push
xor
push
mov
iret
lock
add
xchg
fldl
lods
repnz
lods
cltd
subl
or
repz
push
jmp
pop
sbb
inc
dec
aad
insl
out
fucom
push
dec
enter
jns
mov
xchg
jge
or
mov
jle
push
mov
addr16
loopne
inc
cmpl
shl
dec
jge
xchg
rorl
fists
sub
xor
leave
fbld
and
add
jns
xor
jle
xor
aas
stos
pop
adc
dec
and
fwait
and
jnp
pop
dec
inc
in
pop
aam
push
aaa
loope
pop
out
ljmp
inc
sbb
icebp
int
add
mull
pushf
cld
enter
push
and
sbb
aad
inc
andl
mov
sbb
cmpsb
dec
jmp
push
and
stos
or
lret
pop
insl
push
in
sub
push
cld
adc
loope
adc
xchg
sbb
ljmp
sahf
dec
add
ret
imul
bound
mov
idivl
test
mov
push
xor
cs
sahf
mov
and
or
iret
test
and
inc
dec
in
ja
sub
fsub
push
jns
bnd
jecxz
adc
xor
inc
dec
cmpb
pop
push
into
test
inc
sbb
and
xor
push
int
fstp
hlt
xor
mov
lret
sbb
cmp
popl
int3
stc
mov
out
fstpt
scas
cmp
push
fld
int
int
ss
fdivl
jno
jmp
std
cs
dec
sbb
sbb
pusha
pop
pop
cmp
mov
xlat
mov
insl
out
and
into
fdivrs
or
aas
in
mov
outsb
adc
xchg
xchg
loope
push
dec
sbb
push
mov
xor
mov
enter
ret
jmp
jecxz
arpl
test
dec
jb
in
sahf
adc
xchg
push
pop
daa
mov
push
out
sbb
sbb
mov
js
loop
mov
jmp
ljmp
xor
mov
xchg
aas
out
movsl
inc
cmp
jae
cmp
into
cli
sbb
push
mov
add
fidivrs
dec
push
xchg
push
inc
iret
das
ss
add
xchg
add
stos
mov
jne
mov
adc
push
xchg
push
xchg
mov
pusha
sbb
cmpsb
jecxz
push
and
adc
xor
pop
insb
dec
dec
pop
je
mov
and
dec
dec
mov
xchg
push
mov
sub
negb
mov
mov
rcrb
js
iret
stos
sbb
sub
push
xchg
insl
jecxz
sarl
cmp
and
sub
sahf
in
loope
out
xor
sub
add
pop
icebp
push
pop
mov
jp
and
imul
bound
lods
push
arpl
rcll
inc
sub
and
dec
insb
xchg
icebp
xchg
hlt
xor
and
cwtl
imul
xor
into
inc
adc
jo
aad
or
shlb
sub
jnp
stos
cmpsl
out
mov
das
outsl
clc
pop
push
mov
js
pop
mov
sbb
xchg
xchg
popf
jg
add
cmp
xchg
xchg
inc
pop
jnp
xor
jne
xor
jno
ds
int
movsb
jno
scas
dec
leave
js
sub
pop
mov
mov
in
mov
roll
xor
andl
xchg
push
out
iret
test
decb
sbb
pop
push
lods
imul
data16
stc
mov
ds
cmp
hlt
nop
insb
les
dec
shl
mov
fnstsw
mov
cld
test
rcl
icebp
mov
mov
lods
dec
inc
xor
jmp
fdivrs
cwtl
mov
out
clc
sub
and
mov
jle
popa
and
mov
roll
push
mov
mov
push
int
xchg
or
pop
mov
aam
ds
rcll
mov
or
je
inc
and
push
shrl
out
mov
push
sti
add
pop
sti
adc
bound
xlat
cmp
lods
xchg
cmp
pop
pop
add
sbb
cmp
aad
inc
mov
cmpb
mov
outsl
mov
and
ret
jle
pusha
ja
adc
jmp
dec
push
outsl
sub
ja
sbbb
dec
add
inc
mov
mov
hlt
mov
imul
lahf
enter
mov
stc
or
rcr
das
or
out
loopne
ja,pt
stos
pop
sti
fidivs
bound
cwtl
jno
jb
popf
aam
pushf
dec
ret
inc
inc
out
mov
add
ss
sbb
test
pop
sub
jge
rol
ds
or
jo
insb
xchg
lock
push
cmpsl
popa
dec
loope
lds
arpl
pop
repnz
aad
fisubrl
adc
jne
or
cmp
mov
add
andl
mov
mov
cmpsb
xchg
xchg
or
pop
or
xchg
mov
scas
aad
mov
nop
sub
inc
in
push
xchg
dec
cltd
sarb
lock
cmc
rcr
mov
cli
repz
mov
je
mov
mov
dec
or
push
push
das
addr16
cmp
and
mov
call
xchg
mov
push
sbb
push
xor
adc
shrl
push
pop
decb
out
jmp
mov
stos
lods
and
call
jmp
cs
and
cld
inc
aaa
inc
rolb
inc
dec
dec
bound
imul
movsb
scas
std
add
shrl
fpatan
daa
mov
fistpl
lret
js
ja
cmp
push
dec
sbb
loop
jge
gs
hlt
in
ljmp
mov
inc
push
pop
lcall
mov
loope
movsl
popf
cmp
cwtl
arpl
push
into
push
loopne
mov
pop
repnz
lret
mov
pop
ss
jbe
imul
icebp
outsl
movsb
sti
jmp
push
lea
cld
iret
cmp
mov
ret
pop
mov
jns
lret
jo
pop
lcall
sub
push
cmp
and
insl
cmc
out
add
lcall
fbstp
mov
incb
sti
jmp
cmp
mov
xchg
fbld
pusha
add
dec
ljmp
pop
mov
mov
mov
fadds
adc
je
orb
cltd
std
fmul
pushf
sbb
add
out
sbb
imul
xlat
jns
test
inc
push
lcall
and
cmp
jmp
lods
xor
stos
enter
xchg
outsl
fsubrl
sub
and
js
push
mov
cltd
sbb
xchg
inc
fwait
loop
lret
stos
aam
inc
fidivl
adc
shlb
dec
mov
mov
mov
mov
mov
dec
popf
mov
dec
ds
ljmp
xor
jo
divb
xchg
fdivs
adc
sahf
lea
daa
adc
push
sahf
pop
or
lahf
sbb
mov
daa
dec
inc
jmp
pop
pop
outsl
imul
pop
pop
pushf
cmp
jp
xchg
negb
add
mov
jge
pop
xchg
and
js
inc
jns
cmc
push
mov
dec
pop
inc
jp
mov
fldenv
add
mov
pop
repz
fcmovne
rol
xor
or
jg
cmc
scas
rolb
call
xchg
inc
jno
add
or
arpl
leave
push
push
out
push
repz
and
push
cmp
lret
sub
add
xchg
fidivs
mov
mov
xor
inc
std
pop
in
adc
add
push
insb
jo
inc
gs
xchg
jge
mov
iret
pop
push
mov
cmp
sbb
mov
mov
ss
xor
mov
push
xor
mov
inc
jle
add
fldenv
jns
pop
push
push
or
pop
cli
xor
mov
cli
cmpsb
clc
enter
test
cmp
sbb
out
inc
ss
stc
jmp
push
jb
xchg
mov
int3
sbb
sbbb
inc
mov
fwait
mov
jne
out
pop
mov
inc
mov
je
adc
cld
mov
pop
jp
inc
mov
dec
dec
or
xchg
cmpsb
in
fisubrs
push
test
adc
adc
jg
sub
int
xorb
add
ss
ror
aas
mov
scas
lock
mov
cli
cmpsl
insl
mov
negb
test
push
dec
jl
push
dec
push
cs
es
jno
popa
mov
movl
test
mov
add
push
xchg
or
inc
add
imul
pop
inc
cmp
outsl
push
sbb
adc
fs
dec
pop
mov
lret
cmp
test
cmc
inc
movsb
rclb
cmp
and
dec
mov
jae
pop
add
test
in
enter
js
popa
xchg
mov
jle
jb
dec
imul
mov
hlt
or
push
sbb
out
push
ret
lea
fwait
push
push
stos
and
aaa
out
loopne
inc
addl
in
dec
mov
and
or
add
jge
xor
rcr
imul
je
add
ret
cmp
or
aam
popf
push
jo
and
fwait
and
xchg
out
add
mov
dec
ss
push
rclb
nop
xchg
jge
jl
sub
nop
sub
rol
dec
inc
int
sub
bound
shll
push
xor
dec
jmp
scas
dec
push
mov
or
push
xchg
mov
cmp
sub
xor
add
push
inc
push
mov
push
push
das
out
jo
idiv
dec
xchg
sahf
fldcw
gs
xor
add
jle
sub
lret
adc
popf
scas
xlat
bound
ljmp
sbb
push
sti
icebp
sbb
push
push
lds
jo
dec
push
inc
jecxz
shll
movsl
sub
ss
lret
sub
mov
sub
in
push
mov
push
cmp
test
mov
cmpsb
cwtl
dec
xlat
loop
dec
mov
scas
jb
iret
pop
cmp
dec
jecxz
ss
ret
mov
test
jecxz
jbe
inc
bts
loopne
pop
inc
mov
mov
jp
fildl
and
leave
jl
bound
pop
push
stos
mov
ss
adc
or
pop
lret
or
cmp
fisttpll
lret
add
jge
out
repz
inc
ret
das
rcl
and
gs
aas
push
mov
ret
xchg
mov
sub
add
sti
cwtl
movsb
repnz
pop
and
jmp
cld
xor
xchg
push
testb
lret
sbb
jecxz
and
es
loope
jns
lds
insl
fadd
inc
inc
xor
imull
sarb
sbbl
sbbb
cmpsb
inc
loope
sti
gs
or
divb
or
hlt
jbe
xor
lcall
push
loope
jecxz
sarl
sbb
jecxz
stos
movsb
add
inc
mov
sub
and
hlt
loope
cli
out
aaa
jae
adc
or
sub
mov
sub
fdivrl
pop
pop
dec
xor
mov
sub
adc
icebp
cltd
icebp
cmp
sbb
mov
mov
mov
push
aad
add
movswl
dec
clc
ficompl
inc
sub
shll
in
and
movsb
cmp
jg
lods
mov
std
pop
js
sbb
jo
shrl
or
lahf
not
enter
outsb
mov
inc
and
push
mov
out
push
aas
fisttpl
add
dec
push
pop
cmp
test
mov
mov
jbe
loop
push
insl
shlb
js
repz
lret
inc
subb
pop
inc
and
xchg
xchg
cmp
sbb
push
jno
out
jp
jg
sbb
sub
cltd
aas
shrb
mov
cmp
mov
mov
call
stc
push
mov
mov
dec
iret
jnp,pt
mov
xchg
sub
and
loopne
jae
inc
cli
dec
dec
push
mov
loopne
adc
adc
sub
and
pop
dec
add
pop
out
fbld
push
fsubrs
push
push
fcmovbe
mov
arpl
es
jb
testl
pop
das
mov
cmp
jns
add
inc
outsl
fidivl
mov
andb
insl
or
rolb
jnp
dec
xchg
pop
in
dec
imul
imul
xor
jmp
int
xor
int
dec
jecxz,pn
shrl
lret
pop
call
dec
stos
jg
fstpt
hlt
inc
adc
jno
mov
push
jl
cmp
xor
inc
aad
fisubrs
enter
dec
loope
add
fnsave
cmp
cmp
add
mov
jne
dec
add
jb
insb
sbb
mov
or
sarb
shrb
and
xchg
or
push
mov
lcall
nop
jmp
mov
mov
stos
push
and
cmp
ror
cs
out
imul
mov
pop
cld
sub
lahf
cwtl
mov
dec
jns
call
xchg
icebp
sbb
pop
pop
xchg
push
outsl
pop
in
xor
sub
nop
lds
dec
mov
mov
out
push
mov
pop
inc
pop
test
pop
push
add
xchg
hlt
lret
dec
sbb
jnp
hlt
hlt
fistpl
and
cmp
push
jbe
xor
leave
out
sahf
inc
out
xchg
xchg
out
add
and
movsb
mov
test
dec
mov
jecxz
insb
addr16
cwtl
cs
fwait
mov
pop
andl
or
mov
dec
jno
sar
or
push
int3
push
aaa
addb
push
out
iret
cmpsb
fstl
mov
dec
psadbw
mov
and
push
xchg
test
je
pop
call
xor
flds
xchg
fsubrl
orl
movsb
cli
addr16
outsl
lret
pusha
xchg
mov
push
inc
dec
sub
sbb
sbbb
rorl
sarb
add
add
push
xlat
mov
lods
lock
rorb
push
arpl
add
xlat
sub
cld
addr16
or
xchg
mov
cltd
scas
pop
and
mov
cmp
andb
xchg
cmp
repnz
fucomp
rol
aaa
call
pop
rclb
jl
push
cmp
add
or
mov
ror
out
push
into
mov
rcll
sbb
pinsrw
and
mov
jns
cmp
and
cwtl
mov
scas
pop
or
mov
or
test
mov
jo
imul
arpl
adc
out
mov
sub
cli
jl
xor
sbb
pop
pop
hlt
ret
pop
sub
js
into
xlat
sbb
fmull
add
or
sub
sub
add
mov
sbbb
test
arpl
push
mov
inc
add
popa
cmc
push
out
orl
arpl
mov
adc
push
mov
fstps
adc
aad
test
adc
mov
and
ds
cs
aaa
cmpsb
mov
mov
pop
mov
xor
jmp
inc
mov
lahf
xchg
xchg
xor
cmp
push
xor
ret
inc
or
les
fsubrl
fldcw
sti
out
shll
mov
push
and
stc
sahf
pop
add
sbb
jbe
xchg
dec
js
jbe
push
aam
inc
out
sub
scas
push
xchg
push
lahf
popa
or
pop
or
xchg
xchg
scas
dec
test
loop
pop
pop
jbe
enter
out
stos
jge
dec
sub
lea
inc
pop
cmpl
xor
inc
pop
clc
mov
sbb
jl
xchg
sub
rclb
bound
dec
ss
add
mov
adc
and
scas
iret
enter
out
mov
or
mov
jno
cld
jle
enter
std
dec
jg
mov
jns
sahf
mov
sbb
in
xor
dec
data16
out
lods
popa
loop
adc
orl
aas
shll
or
aad
mov
aad
popa
xchg
mov
pushf
mov
test
pop
dec
add
add
leave
shrl
insb
pop
inc
jle
inc
cmp
cmc
mov
ss
imul
xchg
bound
int
push
hlt
je
int3
mov
sti
sahf
cmp
pop
js
xchg
insb
lds
and
rcll
add
add
push
jno
repnz
cmpsl
inc
xchg
das
jg
push
mov
das
test
movb
lcall
push
out
sbb
cld
sub
cmc
in
pop
xor
push
je
gs
cld
mov
mov
loope
fimull
stc
in
lds
repz
and
test
addr16
add
scas
fwait
arpl
arpl
rcrb
sbb
sub
out
mov
aas
mov
add
xchg
adc
or
and
es
push
mov
push
inc
test
jle
lds
add
push
pop
and
or
push
aaa
mov
or
xchg
and
mov
fwait
hlt
inc
int3
pop
test
cmp
jbe
xor
lock
js
lret
lea
inc
jb
mov
jne
jb
pusha
jg
jecxz
popa
stos
je
add
enter
stc
fs
mov
and
cmp
mov
lock
test
clc
fs
lahf
add
cmp
adcb
das
rcrb
push
fsubrs
int3
pop
jne
mov
rcrl
cmc
ret
inc
add
insb
sbb
cwtl
int3
xchg
rorl
clc
push
outsl
cltd
inc
mov
mov
xchg
ljmp
sub
adc
sbb
lea
push
mov
test
aad
test
leave
loopne
movsb
fnstsw
fadd
adc
mov
xlat
or
jb
leave
push
data16
mov
mov
stc
ss
mov
or
or
add
fcompl
mov
cmp
mov
out
gs
pushf
dec
dec
mov
xchg
inc
pop
xchg
aam
mov
mov
ficomps
outsl
pushf
je
and
sbb
xor
repz
out
fisubrl
mov
inc
or
or
inc
mov
mov
lahf
xchg
movsl
or
lcall
sbb
jl
dec
mov
mov
jl
insb
in
lahf
mov
sub
cmp
xor
sbbb
push
and
add
or
testb
mov
sub
ds
mov
mov
movsl
cld
push
call
pop
xchg
scas
lds
adc
repnz
gs
xchg
jp
mov
inc
aam
ja
dec
scas
dec
or
cltd
mov
imul
aam
jge
fsubl
aam
mov
mov
andb
stos
pop
stos
daa
dec
stc
sub
xorb
and
xchg
nop
mov
retw
and
inc
and
mov
xchg
mov
inc
or
jg
mov
adc
cmp
inc
jns
nop
dec
pop
and
movd
andb
and
or
enter
lock
xor
scas
jle
loop
mov
push
fsubrs
std
xor
loope
mov
inc
cwtl
and
aas
sub
jnp
mov
pop
es
adc
mov
das
cltd
scas
sbb
shlb
add
loopne
xor
pop
dec
enter
out
loope
in
xchg
pop
dec
sub
sarb
jg
xchg
call
mov
cmp
sub
add
mov
mov
mov
test
jl
mov
pop
mov
mov
gs
icebp
inc
lods
or
shll
sbb
fucomip
sub
pop
xchg
lret
arpl
sub
adc
push
sti
adc
mov
dec
fidivrs
iret
jle
jl
movsl
add
stos
jbe
aad
cli
xchg
or
inc
sub
cmp
mov
insl
mov
push
imul
xor
add
adc
les
mov
fadds
movups
add
pop
insb
jne
int3
mov
movsb
lea
fdivrp
sbb
fildll
adc
mov
pop
scas
adc
and
mov
inc
jg
cli
loopne
mov
dec
sbb
std
mov
inc
pop
mov
cmp
mov
or
xchg
out
dec
cld
loope
out
jmp
int3
mov
inc
lret
fimull
mov
dec
xlat
cmp
lea
xor
and
inc
enter
bound
cwtl
pushf
add
mov
sbb
sbb
mov
stos
inc
push
cmp
sbb
call
cltd
leave
push
notb
insl
and
cmc
int
xchg
jno
mov
xchg
push
dec
into
jne
rorb
pop
imul
nop
mov
cs
pusha
outsl
jne
lret
iret
scas
inc
in
fnstcw
popa
push
mov
sub
lds
dec
loop
cli
mov
test
mov
pop
rcll
and
mov
call
in
stc
xor
call
mov
sbb
sub
mov
mov
sbb
aad
jns
mov
dec
and
mov
dec
dec
fistl
fldl
ja
movsb
in
cmpsb
jo
mov
inc
pop
jae
movsb
push
popa
add
popa
sub
dec
test
pop
mov
inc
push
fistps
popa
push
cmpsb
add
fiaddl
push
push
push
loop
rorb
inc
push
lahf
push
sbb
xchg
push
or
or
mov
ret
pusha
aam
inc
jne
test
aaa
adc
pop
mov
adc
in
aas
inc
cmc
scas
sub
popa
pushf
inc
jmp
movsb
mov
repz
test
push
mov
mov
dec
movsb
pop
or
stos
das
repz
jecxz
call
sub
inc
sbb
add
jb
repnz
sub
mov
sbb
cmc
btr
in
add
int
jbe
pop
rolb
roll
js
arpl
stc
loopne
inc
scas
and
dec
pusha
and
push
int3
sbb
aad
jnp
sub
add
js
cmpb
les
inc
in
xchg
xor
test
inc
fs
push
cmp
and
unpcklps
test
or
sbb
push
cmpsb
dec
or
cmp
jmp
mov
push
jb
pop
stos
sbb
shrl
jp
xor
call
leave
mov
inc
stos
out
push
lods
mov
sarl
out
or
sti
or
les
mulb
outsl
stos
or
aaa
mov
test
pop
sbb
int
lods
dec
iret
jmp
xor
es
inc
jg
fsts
test
nop
cwtl
mov
lret
mov
adc
arpl
or
jno
mov
fcompl
inc
sub
xor
lret
pop
add
jo
dec
mov
push
test
push
sbb
lock
test
xorl
rolb
shrb
lret
and
pop
pop
xchg
orb
testl
fstps
or
lods
popa
xor
mov
sbb
mov
push
stos
xchg
sub
test
adc
gs
loopne
sub
cmp
add
mov
xchg
cwtl
push
enter
cltd
lods
test
addr16
sub
lcall
daa
test
hlt
imul
aaa
and
jno
or
pop
insb
jle
lret
or
ret
mov
pop
loop
ljmp
cmp
sub
xor
aam
fwait
push
mov
mov
ds
sahf
mov
push
stos
mov
mov
les
outsb
orl
es
jns
out
and
and
stos
xor
mov
data16
add
pop
adc
cmp
sti
sub
sub
loop
push
push
xchg
sarb
icebp
aam
cmpsl
into
pop
ds
out
mov
es
bound
inc
jge
or
fsts
pop
add
and
mov
and
sti
dec
cmpsl
sbb
repz
insb
push
jmp
testb
push
adcb
or
dec
sbb
add
dec
aaa
repz
imul
pop
pmullw
test
adc
pop
jbe
es
repnz
fldcw
inc
mov
xor
jae
aad
cmp
out
das
test
in
fwait
lret
push
or
daa
xor
mov
or
push
push
or
test
movl
dec
or
ret
bound
pop
imul
inc
insb
cs
scas
shl
test
or
add
inc
arpl
mov
or
outsb
lods
fstl
data16
push
jo
xchg
clc
imul
je
gs
mov
mov
cmc
pop
repnz
mov
xchg
xor
add
xor
inc
sub
mov
scas
out
das
sbb
aam
enter
xor
sbb
lcall
inc
repnz
cmc
jno
mov
push
ds
push
inc
fcompl
imul
rol
dec
outsb
sub
rclb
pop
sbb
pop
xor
mov
sbb
loop
adc
mov
xchg
cmp
jp
cmp
lea
sahf
sub
or
jb
sub
mov
out
jns
mov
mov
mov
xabort
sar
add
and
fildll
sbb
out
xchg
out
inc
sub
stos
fildl
mov
jbe
fimuls
mov
dec
or
xchg
xchg
es
js
mov
jnp
movsl
inc
mov
int
xor
aas
mov
push
fs
mov
popf
or
add
nop
mov
xchg
pop
inc
in
pop
movb
dec
add
shlb
sbb
inc
in
cmp
dec
rol
sub
cs
jg
push
pusha
jp
insl
dec
in
and
mov
aaa
nop
out
aaa
faddl
mov
and
sbb
lret
pop
sbb
lea
mov
inc
xor
rolb
sbb
jge
outsl
pop
inc
jns
sub
jno
data16
and
fcoml
or
xchg
je
adcl
fwait
lcall
stos
inc
cmp
push
xchg
les
mov
xor
lock
lock
jmp
fisttpl
sti
push
int3
fdivrs
lods
mov
or
shrb
inc
inc
sub
dec
sub
in
mov
lods
adc
je
in
pop
dec
fcoml
pop
outsl
lcall
and
pop
ret
dec
mov
sbb
mov
int3
clc
bswap
outsl
daa
pop
mov
inc
call
dec
jns
jmp
pop
or
adc
mov
test
cwtl
dec
aaa
sub
cmpsb
fcomp
sub
mov
push
xlat
into
neg
or
fwait
ljmp
add
test
xchg
inc
les
inc
mov
jns
mov
out
mov
flds
jp
int
and
pop
mov
jmp
and
negl
ret
push
sub
xor
adc
ljmp
dec
sti
mov
sub
cmpsl
fcoml
add
insl
bnd
jnp
xor
test
push
movsb
test
test
test
repnz
mov
popl
mov
in
xor
inc
push
out
dec
dec
sub
xchg
leave
pusha
cmp
mov
or
inc
push
push
ds
jo
jecxz
sub
push
insl
and
ror
adc
popa
xlat
fidivl
inc
fstps
push
addb
orb
mov
leave
push
sub
mov
mov
je
stos
add
sbb
lcall
add
add
xchg
cmpsb
mov
fstl
mov
outsb
xchg
cmp
mov
or
or
mov
les
xchg
pop
gs
pushf
lret
pop
adc
outsl
jle
mov
loop
mov
xor
ret
fwait
cmpsb
movsb
or
push
push
aad
cmpsb
xchg
cmc
ret
lds
xchg
cltd
sahf
add
push
ljmp
cmp
ret
lret
jb
adc
insb
cmp
xor
or
les
das
jne
mov
xor
int
pop
outsl
test
mov
pop
call
hlt
daa
sti
popl
pop
out
fs
mov
push
mov
int
push
rorl
mov
xchg
mov
int3
add
arpl
test
arpl
jecxz
jle
lds
movsl
or
je
jnp
or
sti
leave
jo
push
lret
jle
xchg
repz
pop
mov
pop
filds
incb
dec
clc
into
lahf
mov
jp
stos
insb
push
jb
and
push
push
adc
push
outsb
leave
and
iret
enter
sbb
cwtl
xchg
cmp
or
fiaddl
pushf
xor
aad
icebp
inc
out
in
jmp
push
mov
cmpsl
and
sub
cmp
repz
aad
jae
or
push
ljmp
out
pop
imul
or
xchg
mov
adc
lcall
in
fisubrs
mov
in
fldenv
enter
and
fcompl
imul
sbb
or
imul
mov
add
or
aam
insl
fstpl
add
stc
mov
iret
inc
inc
out
push
mov
call
mov
jecxz
mov
jg
insl
mov
movsb
sub
xchg
cmc
adc
hlt
out
cli
or
sbb
push
sbb
cmp
inc
push
push
stc
sbb
in
pop
xor
lret
pusha
hlt
mov
xor
inc
repnz
sbb
push
testl
add
into
outsl
jg
stos
mul
fadds
sbb
or
sbb
cmp
mov
repnz
imul
and
or
sbb
sub
and
dec
test
mov
cmp
ret
xor
lret
mov
lret
je
fcomps
ficoml
inc
scas
ljmp
jo
fimull
dec
int3
bnd
ds
xor
mov
mov
jbe
dec
add
adc
popa
pop
cmpsl
dec
neg
leave
mov
fistl
fwait
mov
aaa
xchg
cli
fstps
fildll
jo
test
pop
adc
pushf
rolb
mov
pop
sti
xlat
mov
push
aaa
out
test
sbb
insb
adc
jno
push
jmp
mov
sahf
push
fwait
insl
cmp
sbb
xchg
and
push
fmuls
pop
in
add
emms
faddl
fimull
pop
pop
xor
fsubs
mov
lods
aad
adc
in
mov
and
test
ja
sbb
mov
add
push
or
in
mov
js
idivb
testb
roll
data16
push
xor
mov
loopne
les
mov
mov
lret
icebp
add
fidivs
cmp
jno
sub
xor
sti
cltd
sbb
push
mov
sti
push
stc
aad
lds
push
loop
fsts
mov
mov
mov
jge
lds
push
out
ret
mov
push
add
mov
loope
pop
outsb
in
movntq
out
mov
mov
cmc
inc
loop
lds
mov
mov
xor
addr16
mov
aas
rcrl
mov
fs
addb
cltd
dec
aad
xchg
dec
xchg
lods
jbe
jno
mov
inc
lods
mov
sbb
clc
lcall
ja
jg
or
imul
dec
sti
sbb
out
int3
sar
dec
iret
mov
test
sub
dec
cwtl
repz
fidivrs
insb
add
imul
fwait
mov
add
jge
add
pop
scas
cwtl
mov
pop
cmp
pusha
fsub
xchg
mov
lret
mov
or
clc
inc
pop
or
sbb
pushf
adc
ficompl
jmp
cld
out
mov
repz
inc
mov
call
shlb
push
add
ss
out
xchg
push
inc
mov
dec
cmpsl
sub
rclb
adc
mov
cld
inc
ret
out
shll
dec
bound
mov
pop
adc
lret
ds
mov
out
push
inc
test
jle
push
hlt
gs
sub
sub
lea
testb
movsb
mov
in
cmp
jne
loope
inc
inc
dec
inc
dec
push
jns
not
adc
dec
inc
fdivp
fcompl
fwait
mov
add
dec
lahf
cmpl
sbb
aaa
fsubs
jecxz
push
pop
movsl
push
jmp
pop
mov
xchg
hlt
sub
cwtl
cvtdq2ps
loopne
mov
lcall
outsb
fwait
inc
cmpsl
pop
test
cmpsl
xchg
ret
xchg
imul
arpl
jecxz
lea
int3
out
or
jo
jle
adc
dec
out
hlt
or
rolb
shll
adc
inc
lret
vcvtdq2pd
loopne
mov
mov
and
fdivp
dec
pop
jl
mov
pop
test
mov
mov
test
xchg
pop
sarl
jp
aad
lods
mov
ss
movsb
fsubl
xor
aas
sbb
lds
sub
fistps
pop
into
inc
rcl
sub
adc
ss
xchg
stc
lahf
aad
mov
jp
sbb
dec
xchg
cmp
mov
stc
inc
cld
bound
cld
mov
pop
int3
mov
aas
pop
jo
imul
jno
mov
iret
cmp
dec
adc
mov
test
pop
jp
bound
push
scas
dec
popf
loope
sub
fisubl
add
pop
cmp
mov
and
fisubrs
pop
pop
test
data16
or
dec
jg
add
fwait
inc
ss
jae
xchg
mov
rclb
test
stos
cmp
lds
outsb
jnp
mov
sbb
into
xor
ja
aam
out
les
scas
outsb
sub
add
hlt
hlt
lds
out
jbe
xor
dec
push
dec
mov
jae
mov
jo
das
ss
movsb
pop
or
add
leave
mov
hlt
sbb
push
pop
addr16
insl
mov
push
adc
imul
add
test
arpl
lock
xchg
cwtl
inc
dec
testl
and
roll
mov
pop
push
aaa
imul
test
jb
pusha
lcall
push
decb
stos
int
cmpsb
pop
fucomip
loopne
nop
inc
mov
dec
in
jno
and
adcl
icebp
stos
xchg
into
cmp
sbb
inc
xor
mov
addr16
pusha
insb
dec
or
xchg
jbe
dec
insb
pop
push
dec
dec
inc
aas
cmp
aam
pushf
insl
das
out
pop
mov
ret
mov
inc
or
loopne
mov
push
test
imul
jecxz
das
es
nop
pop
notl
rorl
sub
imul
ljmp
js
inc
test
xor
ds
lahf
mov
lea
shll
add
jecxz
sbb
insl
mov
jp
jp
popfw
es
mov
dec
out
scas
mov
jns
push
fucomp
inc
lret
and
sbb
inc
add
jg
sahf
out
push
jle
mov
push
repnz
push
push
and
pop
int
xchg
fsubp
cmp
xchg
loope
sarl
and
into
cmpb
popf
ja
int
sbb
mov
orb
cmp
arpl
mov
std
mov
mov
mov
push
pop
es
adc
jne
test
inc
add
push
sbb
cs
cltd
imul
nop
leave
ficomps
mov
or
pop
sub
mov
jb,pn
sub
pop
in
pop
push
inc
mov
or
xchg
gs
inc
jl
mov
neg
loopne
movsl
mov
in
xchg
ja
mov
xor
pop
in
gs
inc
mov
cmp
fldl
xchg
outsl
dec
into
mov
pushf
xchg
and
sbb
js
insl
iret
into
sti
insl
sti
push
icebp
daa
mov
adcl
repnz
push
inc
dec
mov
ljmp
push
or
sti
popa
jno
loope
sub
mov
sbb
lret
push
fs
inc
pop
xor
xchg
adc
push
test
mov
sbbl
movsb
in
lahf
push
push
cs
sub
bound
rep
daa
pop
or
ret
pop
or
jp
loope
xor
jae
pop
mov
aam
sub
jns
jne
jle
ja
add
lea
jp
lcall
ret
dec
cmp
es
sbb
out
sub
aad
mov
pop
test
and
adc
mov
jecxz
push
lock
pop
mov
mov
dec
iret
es
js
cltd
lods
pop
jo
mov
sbb
lcall
cmp
int3
jp
sub
lea
jb
nop
daa
sbb
push
jb
fildll
je
mov
out
inc
cwtl
inc
out
xchg
pushf
adc
ret
cmp
imul
mov
mov
ret
ds
push
or
imul
jle
aad
mov
push
mov
xchg
fwait
cmpsl
scas
sbb
mov
stos
test
loopne
notb
xor
ds
mov
fidivs
inc
fs
test
pop
call
adc
cmp
sub
out
loope
es
icebp
cwtl
pop
sbb
push
sub
mov
lock
js
out
mov
xchg
sub
xchg
fcoms
rorl
mov
pop
insl
imul
rcr
cmp
mov
lods
push
clc
mov
test
out
mov
xor
cmp
cmp
push
jecxz
js
andl
xchg
je
push
insb
jl
in
jg
dec
addr16
fwait
addr16
sbb
mov
fs
jbe
stc
nop
jns
out
jae
and
orb
enter
xchg
sub
addb
mov
push
xchg
fwait
jg
cltd
dec
fiaddl
pop
jmp
dec
jp
push
xor
jge
push
addr16
pusha
scas
push
and
lea
or
mov
mulb
test
jns
adc
jbe
cmpsb
jmp
sbb
fdiv
xchg
dec
cmp
jle
repz
cwtl
sub
dec
add
mov
cmp
ja
incl
dec
mov
shl
mov
xlat
ja
adc
adc
jb
jmp
sub
nop
push
fs
arpl
ljmp
sub
stc
rclb
test
xchg
pushf
outsb
test
xor
mov
jecxz
aam
jecxz
orb
stos
mov
push
addr16
mov
lret
or
ret
icebp
inc
mov
pop
cli
cmpsl
push
sub
pop
mov
out
adc
rcl
jb
test
ucomiss
addb
jno
lret
sbb
add
int3
aaa
pop
add
fimull
push
jmp
dec
xor
push
out
add
movsb
jno
aad
inc
xor
js
scas
imul
leave
push
pop
shrb
movsl
in
in
or
dec
pop
xlat
mov
mov
jmp
scas
loopne
lahf
outsl
pop
fwait
out
mov
fiaddl
ja
dec
mov
push
push
sbb
jg
fstps
and
adc
imul
xchg
or
sub
inc
outsb
jb
lret
sub
or
and
sub
push
enter
test
in
inc
test
icebp
pop
sbb
mov
mov
xchg
sub
filds
and
xchg
sti
lock
pop
dec
add
lock
rcrl
addr16
in
mov
imulb
in
cmp
pop
jnp
pop
adc
or
shlb
jnp
add
sbb
mov
mov
jp
and
testl
cmc
push
push
imul
lea
cmpsl
adc
outsb
add
push
cwtl
jl
sbb
pop
lock
push
enter
mov
repnz
jns
iret
xchg
cli
popa
test
dec
jno
lcall
lods
rclb
les
ds
out
inc
fsubl
orb
mov
mov
ret
sbb
roll
xor
adc
pop
xchg
lea
in
and
jg
mov
push
jmp
cltd
inc
jecxz
adc
mov
fs
fdivrs
icebp
aad
das
inc
je
clc
mov
push
out
mov
inc
xor
pop
xor
and
lods
lea
insb
cli
mov
in
ljmp
xchg
mov
xor
mov
add
int
mov
into
or
mov
xchg
scas
sub
mov
xchg
loop
dec
es
adc
mov
cli
sbb
xchg
mov
lret
aam
adc
lahf
test
aaa
fucomip
jnp
repnz
dec
xor
lds
popf
mov
fstl
lods
cmp
cltd
sarl
bound
clc
cmpsl
xchg
mov
xchg
scas
ficompl
into
mov
xlat
pusha
loope
mov
push
enter
ret
adc
or
das
fs
mov
aam
mov
sbb
inc
push
adc
scas
or
and
in
repz
mov
jmp
inc
sbb
sub
pop
sbb
xor
dec
cmpsb
xchg
jp
sub
lcallw
dec
xor
push
test
imul
vmread
xchg
dec
adc
int
cmp
aad
mov
in
and
enter
adc
loop
dec
cwtl
sbb
push
push
test
into
jnp
leave
mov
dec
adc
mov
jns
and
pop
or
pop
dec
das
fwait
ret
jo
sahf
sub
mov
cld
rol
mov
adc
les
fldcw
into
roll
fcoml
cltd
mov
in
jno
sbb
sysret
cld
mov
out
pop
adc
jge
addr16
enter
mov
pop
rcpps
ficomps
sbb
in
lret
jb
mov
addl
ret
addr16
jb
subb
cmp
and
lea
cmpsl
adc
bound
in
inc
push
out
insb
div
push
add
mov
idivl
rcr
pushf
jns
pop
cltd
mov
inc
rorl
cmpl
rcr
ds
cmp
lret
sub
mov
mov
pop
mov
push
pop
lea
ret
or
pop
in
add
dec
mov
and
xor
loop
and
das
mov
or
cld
and
xor
ficoml
cmp
mov
xor
mov
in
xor
pop
mov
push
push
std
dec
rcrb
cmpsb
jle
xchg
adc
sbb
enter
ror
mov
stc
repz
orb
jnp
xchg
sub
push
hlt
cmpsb
push
ds
xor
insb
aas
dec
sub
sbb
sub
in
loopne
push
mov
pop
add
test
xchg
push
mov
lock
cmpsb
cld
push
xlat
int
mov
div
aad
stos
mov
and
pushf
out
mov
sbb
scas
pushl
mov
sbb
mov
bound
out
inc
jne
or
push
sub
lahf
cmp
adc
je
and
mov
or
dec
rcl
das
sbb
imul
shll
loope
dec
pop
push
push
repz
and
xchg
sub
movsl
das
out
mov
cmp
adc
mov
mov
adc
movsb
cs
movsl
dec
adc
jae
shrb
sahf
jmp
lods
xchg
mov
push
test
loope
sub
aaa
dec
repz
fcoml
cmpsl
faddl
add
lods
out
mov
xchg
aad
dec
imul
popa
mov
mov
lods
lock
add
inc
fwait
fs
fidivrs
xchg
mov
scas
mov
jl
mov
jmp
or
and
cmp
ja
cmpl
pop
popa
movsl
mov
lahf
add
pop
jne
mov
xor
fsubl
subb
and
sub
push
lea
jb
and
std
test
stos
pop
mov
sbbl
clc
mov
movsl
mov
add
sub
adc
loop
leave
shlb
bound
sub
sub
std
cmp
mov
lock
repz
leavew
adc
add
mov
sbb
or
adc
into
imul
popa
bound
lea
mov
jbe
daa
lods
repnz
aam
shll
mov
fildll
dec
cld
push
add
ds
cld
ja
aad
fistl
and
xchg
out
pop
hlt
pop
rol
ret
xlat
sub
push
out
testl
sub
cs
xchg
xor
cmpsb
dec
jns
dec
or
pop
std
sbb
xchg
push
inc
stos
mov
sbb
xor
push
inc
jo
mov
and
addb
adc
mov
es
add
shll
mov
loope
add
cmp
xor
xchg
and
dec
aaa
repnz
addl
pop
stos
imull
lahf
mov
mov
sub
mov
and
xchg
mov
add
adc
lcall
mov
mov
in
out
sub
bound
sub
mov
clc
dec
clc
enter
jb
jmp
sub
sub
xor
repz
fildl
xor
mov
mov
outsl
sbb
push
pusha
out
ror
shlb
mov
adc
adc
cmp
inc
lahf
nop
test
push
les
stc
test
xor
dec
and
clc
push
fs
mov
push
ds
jl
adc
add
add
ret
cltd
div
mov
sahf
mov
mov
add
out
jmp
and
into
popa
xchg
push
sub
out
mov
movb
xorb
xchg
inc
cmp
mov
and
jo
je
rcrl
pop
fcoms
adc
mov
repz
sbb
and
and
scas
pop
add
pop
sub
aaa
adc
or
imul
popa
add
ret
std
loop
jge
rcl
adc
ljmp
aaa
jnp
mov
or
adc
es
aad
lret
pop
fistpl
rclb
sahf
cmp
js
mov
sub
stc
leave
pop
inc
dec
scas
and
or
pop
and
std
imul
cmp
iret
das
cmpsl
loopne
mov
je
out
loopne
iret
jnp
outsb
mov
and
xchg
mov
sub
mov
or
mov
ss
clc
pop
rorb
xchg
cmp
xchg
nop
call
test
call
stos
lcall
xchg
sbb
dec
ret
adc
mov
push
testb
lret
loopne
pusha
pusha
sti
lcall
sbb
xor
repz
push
mov
daa
add
mov
filds
jbe
rcl
daa
iret
mov
popa
mov
rcr
mov
pop
cmp
pusha
jle
or
les
mov
mov
dec
jp
fcompl
scas
and
test
mov
cltd
sub
jno
sub
movsb
rolb
and
or
mov
cmpsb
jmp
cmp
mov
fbstp
enter
lahf
xchg
ljmp
pushf
xchg
xchg
or
iret
aam
or
mov
das
ret
clc
js
fildl
jo
adc
ss
movsl
and
ljmp
sti
jbe
mov
xchg
loopne
mov
sub
mov
inc
fwait
mov
jge
rolb
ret
mov
jecxz
lods
mov
jno
inc
and
and
lret
cltd
cmp
pop
outsb
or
fwait
mov
cmc
movsb
int3
jp
xchg
push
or
mov
adc
mov
lea
adc
xchg
mov
inc
lcall
out
mov
mov
or
mov
ret
lock
dec
fwait
adc
leave
cmp
mov
lods
xchg
cmpsl
xor
push
jb
fnsave
fsubrs
xchg
xchg
inc
shrl
mov
lret
jl
fisubrs
jmp
ss
movsl
pop
and
xchg
xchg
daa
rorb
mov
fiaddl
cwtl
xchg
mov
mov
add
lret
and
mov
fmuls
imul
dec
dec
and
mov
ljmp
jae
xor
scas
fucomip
mov
sub
xchg
add
pushf
xlat
pop
add
xor
sub
xchg
mov
lods
rolb
repnz
dec
sbb
or
lea
mov
fstl
and
cltd
cmp
iret
sbb
fs
addl
int
loopne
cli
or
and
or
cwtl
imul
and
pop
aas
mov
sub
mov
inc
ret
cmpsl
push
cmp
jg
negb
loopne
mov
iret
ljmp
mov
or
lea
nop
lcall
adc
cmp
pop
dec
jl
stos
test
fiaddl
nop
jmp
ret
and
add
rcl
pop
push
or
push
fmulp
call
cli
je
fldenv
call
jae
and
pop
xor
xchg
je
or
scas
in
cmp
pop
adc
jmp
out
adc
scas
mov
lret
das
xchg
xor
xchg
insl
or
lret
mov
pop
ret
jmp
stos
xor
les
pop
das
dec
adcb
sarl
sbb
out
dec
fsub
fstpt
out
mov
aad
in
xchg
xchg
fildll
dec
sbb
push
adc
pop
cld
jbe
push
xchg
clc
xchg
call
fidivrl
sub
xor
insb
fdivs
push
repz
out
lea
test
inc
jae
mov
int
jnp
pop
fidivrs
lret
fsubs
and
push
das
push
aad
and
and
imul
loop
fsubp
cmp
xchg
movsl
aam
pop
pop
sbb
insl
hlt
pusha
push
out
std
jnp
std
push
sub
xchg
stos
shl
jnp
ret
mov
add
gs
pusha
mov
sbb
dec
movl
pop
in
jnp
adc
adc
pusha
xchg
mov
mov
nop
cltd
jnp
fcmovnu
leave
int3
pop
movsb
pusha
push
rclb
mov
incb
into
in
stos
xor
push
cmp
lock
and
mov
movb
dec
mov
jae
ss
mov
mov
rcrb
daa
xchg
and
mov
add
xor
sbb
movsb
aas
push
outsl
mov
call
imul
jecxz
dec
mov
pop
rcll
jg
inc
pop
call
iret
shlb
push
sub
inc
or
aas
aam
mov
add
and
jno
sub
filds
jns
mov
push
stos
in
std
jp
inc
or
sbb
pop
xchg
pop
sub
out
adc
js
les
out
cmp
cs
xor
dec
lret
arpl
push
xor
jmp
or
jns
out
lods
cmc
ret
dec
cmpsl
mov
mov
movsb
sub
gs
insl
jne
sbb
mov
jb
xor
or
cld
xor
xor
dec
add
pop
push
daa
push
mov
pop
or
pop
xchg
add
ss
daa
outsb
sub
cmp
adc
pushw
sub
inc
fsubp
adc
mov
int
push
int
aaa
adc
cmp
push
out
scas
mov
aaa
cld
les
popa
lcall
shl
add
imul
outsl
mov
sbb
out
jg
sbb
inc
int
jle
mov
push
jns
ja
add
jecxz
mov
pop
xor
push
rol
ja
shll
cmp
mov
jnp
xor
add
popf
aaa
cmpb
or
pop
dec
jns
repnz
lahf
or
mov
or
ds
lret
dec
inc
ljmp
subb
jns
test
mov
add
lock
xor
adc
sub
add
stos
lret
xlat
xchg
in
negb
arpl
xor
dec
jns
xor
stc
fsub
jns
sbb
push
fisubs
in
jecxz
in
sahf
hlt
xor
inc
subb
inc
int
call
dec
push
outsl
inc
pop
cmp
pop
gs
stc
jge,pt
fdiv
mov
lods
dec
test
add
jg
fsubs
ja
adc
push
dec
lahf
mov
push
out
gs
sbb
jne
mov
ss
sbb
jge
sbb
cwtl
xchg
call
inc
nop
mulb
push
push
mov
and
rorl
enter
jns
xchg
fldenv
mov
xchg
daa
shrb
and
stc
pushf
stos
xchg
test
test
xchg
push
ljmp
push
mov
or
inc
cmp
jnp
add
clc
xchg
xchg
add
mov
loop
sub
cmp
out
fcomip
pop
aaa
mov
xchg
push
mov
arpl
inc
add
and
xor
or
cmc
jbe
imul
jns
aad
or
leave
iret
in
bound
std
scas
jns
xor
mov
sarl
and
fcoms
pop
dec
mov
xor
add
ds
xlat
std
cmp
xchg
pop
jns
aam
mov
cmovnp
mov
dec
cmpsb
push
insl
inc
sbb
pop
jg
cmpsb
pop
sbb
xorb
ljmp
lret
jge
jne
sbb
push
imul
andb
mov
in
loop
xor
leave
pushf
mov
cwtl
jl
shl
int
adc
dec
or
adc
rcrb
cwtl
sbb
xchg
iret
jmp
mov
pop
aad
fwait
sbb
bound
aad
mov
xchg
loop
xor
xlat
out
jbe
inc
xor
pop
xchg
out
inc
mov
loope
adc
mov
ret
push
jno
mov
movsb
jnp
dec
push
std
sahf
andl
fisttpl
loopne
push
call
loope
sbb
cmp
gs
xor
mov
fwait
test
lret
xor
mov
rcll
scas
ficoml
roll
dec
pop
add
in
je
or
ja
cs
nop
xchg
mov
xorb
lcall
fsubs
push
xor
jnp
hlt
shr
sub
fxsave
sub
imul
sbb
inc
add
fimull
loop
mov
mov
cli
in
leave
mov
push
lret
jl
les
outsb
insb
cmpsb
popa
sbb
jle
mov
cwtl
mov
fcmovne
pop
sub
shr
fs
and
mov
inc
std
idivl
push
jmp
es
lret
scas
fsubrl
mov
sbb
add
das
jmp
adc
add
mov
cwtl
out
aad
lods
sbb
shl
imul
mov
add
loopne
fisttpl
rcrb
out
gs
adc
dec
cmpsb
mov
sbb
cltd
pop
mov
inc
aam
sar
cmp
xchg
push
push
std
push
mov
sbb
cmp
add
or
cmp
cmp
or
icebp
enter
dec
mov
cwtl
out
adc
shrb
and
xor
add
pop
ja
fwait
stc
mov
xchg
and
notb
and
xchg
mov
sub
jmp
push
pop
mov
xchg
ficompl
fsts
out
enter
mov
add
dec
dec
cmp
jl
mov
ret
add
push
and
push
gs
jns
mov
mov
into
mov
inc
in
mov
mov
in
cmpb
pop
and
neg
test
cltd
and
fisttpl
cld
push
lods
sbb
and
outsl
mov
ja
mov
jecxz
add
push
mov
int3
dec
in
mov
mov
push
andl
sub
orl
mov
popf
pushf
xchg
adc
pop
inc
push
dec
sbb
ret
ljmp
xchg
and
add
sbb
out
aaa
pop
lock
sahf
lock
jne
in
loope
push
dec
xor
push
inc
push
imul
mov
xchg
dec
dec
mov
sbb
pop
inc
cmp
and
sar
fwait
scas
lods
dec
das
adc
mov
insl
lea
mov
xor
sbb
pop
sub
push
xchg
mov
inc
icebp
dec
push
cltd
cmpb
push
pop
pop
imul
das
ffree
jns
frstor
test
add
dec
out
aaa
fmuls
pusha
stos
xchg
leave
ja
movsl
mov
pop
pop
ljmp
push
jmp
dec
jge
test
popl
sub
mov
ret
push
stc
xchg
cwtl
in
push
push
popa
flds
jnp
push
aas
arpl
repnz
decb
cmp
lds
test
xlat
shll
sub
clc
insb
flds
lret
das
test
xor
mov
lods
cltd
faddp
aas
or
adc
dec
test
add
dec
in
daa
cli
mov
sbb
or
js
cwtl
sbb
std
ja
inc
xchg
mov
sub
mull
inc
cli
aaa
out
test
add
xchg
in
sbb
aam
add
inc
lcall
divb
dec
xchg
repnz
rcrb
sub
loop
fldenv
xchg
mov
inc
mov
pop
jnp
fsubl
sarl
xlat
push
rcl
sbbl
mov
jmp
add
sub
cmp
xlat
outsl
in
or
jno
inc
xchg
and
xchg
pop
lock
and
shlb
or
cmp
ss
lret
mov
jl
push
pop
out
fldcw
mov
inc
lods
adc
dec
dec
or
cmpsb
and
or
movsl
xor
mov
stos
fwait
adc
sub
and
xchg
mov
mov
shlb
mov
scas
jo
pop
ljmp
inc
je
mov
movsl
sahf
cmovno
iret
daa
cmpsb
and
fwait
bound
cwtl
mov
imul
gs
insl
clc
cs
cli
mov
cmpsb
jb
inc
loope
cld
inc
fimull
push
sub
push
in
addl
push
test
sbb
movsl
mov
test
mov
mov
mov
dec
imul
arpl
push
cwtl
loope
sub
pop
mov
iret
jle
lret
mov
sbb
push
dec
cmp
adc
in
mov
sub
daa
out
cmpsb
lret
fwait
mov
mov
movsl
push
sub
xor
ret
hlt
cmp
xor
out
xchg
add
push
cmp
in
stos
insl
mov
xchg
cmc
adc
dec
repnz
mov
outsl
add
icebp
or
sub
into
and
push
pop
ficomps
js
ljmp
repz
pushf
inc
dec
jecxz
pop
add
xor
hlt
lret
rolb
sbb
loopne
mov
adc
int
shlb
add
fucom
rolb
jmp
pop
add
push
scas
sbb
xor
cs
shrb
or
add
subb
cmc
mov
arpl
cmpsb
mov
or
jg
leave
pop
mov
mov
dec
subps
dec
mov
test
pop
add
testb
loop
inc
adc
rolb
mov
mov
xor
pusha
jne
std
lds
push
mov
loope
imull
xchg
sub
mov
aas
aaa
shrl
inc
adc
nop
jp
fs
or
in
lea
cli
push
jmp
into
stos
cmpsb
pop
addr16
std
loope
retw
xor
loop
cmp
or
push
ss
aad
mov
lea
test
lcall
adc
dec
shll
icebp
jne
adc
pusha
and
or
push
imul
lret
hlt
inc
and
in
pop
mov
jmp
dec
in
mov
xchg
dec
scas
or
orb
dec
pop
pushf
or
jl
mov
in
sbb
sbb
addr16
adc
cmp
or
and
test
popf
mov
inc
notl
adc
mov
cmp
test
fmulp
frstor
inc
ficomps
mov
inc
test
push
lcall
cmp
lock
mov
dec
dec
xor
inc
int
pop
das
test
mov
mov
mov
xchg
sub
pop
xchg
popf
push
cld
fisubl
ficoml
cmp
les
mov
xchg
scas
fildll
fwait
and
jae
xchg
pop
andl
cmp
sbb
aam
adc
inc
or
es
test
mov
mov
decb
gs
add
jns
mov
cmpsb
arpl
mov
or
jmp
mov
jp
bound
stc
or
js
aad
cmp
aam
rcll
ret
out
jl
outsb
xchg
xor
cmp
cwtl
adc
shr
popf
push
lods
jb
push
clc
cmp
leave
arpl
jg
out
aaa
cmp
fdivrl
shl
mov
cld
and
nop
movsl
int3
scas
and
sahf
push
dec
into
lock
and
or
bound
sub
push
inc
sbb
loop
mov
and
jo
dec
mul
cmp
rcl
jle
aaa
in
int
cs
fcoml
ljmp
in
sub
addb
push
xchg
dec
mov
push
push
adc
and
rol
and
push
mov
mov
sub
or
enter
fcmovnb
jecxz
push
lcall
loop
shrl
loopne
or
lret
pop
mov
xor
das
inc
jle
lahf
jp
hlt
cli
sarl
ja
fs
cltd
mov
jmp
sub
jne
stos
push
pop
xchg
scas
pop
sahf
cmpb
movsb
push
add
and
pop
pushf
push
lds
or
mov
shl
aad
jle
movsl
cmpsl
rolb
sub
arpl
adc
dec
and
lds
aad
jnp
int
movsl
cmpl
out
inc
movsb
cwtl
pop
mov
push
cmc
test
push
cmp
loope
test
push
sub
jle
adc
addr16
sbb
push
sub
ror
out
loopne
pop
lahf
mov
mov
jbe
out
inc
adc
clc
lret
cmp
xor
testb
mov
out
jmp
jo
pop
or
adc
or
lds
mov
add
dec
icebp
xchg
cs
jae
and
inc
dec
mov
push
call
add
mov
push
lods
cltd
jl
add
bound
jg
repz
xchg
aad
das
stos
dec
or
inc
mov
iret
insb
dec
inc
mov
cmpsl
push
add
add
cmpsl
xchg
inc
out
imul
dec
inc
adc
gs
ss
out
data16
push
shll
inc
xlat
sbb
pop
cmp
in
andb
sbb
pop
xor
and
movsl
mov
push
js
mov
insl
pop
pop
mov
repz
push
imul
les
adc
data16
jge
fcoml
lahf
and
push
pop
xor
push
mov
and
rorb
subb
sbb
mov
cmp
push
outsl
in
insb
aas
and
mov
ret
mov
xchg
or
xchg
rorl
mov
dec
adc
sub
push
sub
fcomps
inc
nop
or
pop
jmp
mov
cli
iret
std
insb
rolb
repnz
push
push
mov
lock
lock
stos
mov
pop
inc
sbb
cmp
das
repz
push
xchg
test
xor
cld
xchg
out
and
pop
fwait
and
loope
outsb
jno
xchg
hlt
addl
xchg
cwtl
sbb
pusha
push
repz
pop
add
sbb
rcl
inc
push
cmp
pop
inc
jmp
lcall
dec
adc
push
jge,pt
pop
or
lock
sbb
push
mov
inc
and
inc
or
cs
pop
xchg
mov
fcom
pop
stc
xchg
cmp
mov
test
adc
cld
mov
in
jp
stc
xchg
jmp
jne
repz
mov
adc
mov
fs
adc
dec
pop
stos
mov
imul
jae
loopne
push
xor
and
sarb
pop
in
pop
mov
mov
dec
jge
add
int3
sub
roll
mov
xor
pop
scas
js
mov
inc
shr
movsb
xchg
jle
sbb
lods
inc
jle
cmp
lcall
push
cld
inc
stc
jmp
sub
push
outsb
lds
in
add
arpl
jmp
pop
inc
mov
add
sbb
in
imul
fldl
or
push
dec
fcoml
in
cmpsb
jl
clc
adc
mov
pushf
out
sbb
sbb
jne
add
jae
xchg
dec
lods
pop
cli
repz
into
jns
aam
scas
test
jle
push
adc
mov
or
mov
bound
push
mov
pusha
push
xchg
addr16
dec
mov
jne
insl
ret
scas
pop
mov
sub
mov
push
cmp
cmpl
and
adc
mov
push
and
xlat
pop
and
nop
push
xchg
and
xor
lahf
inc
pop
test
orb
rolb
nop
fwait
xchg
inc
xor
shlb
mov
std
cld
mov
stos
xor
xchg
scas
mov
lock
push
lods
and
inc
clc
pop
shrb
jae
mov
stos
mov
push
xor
or
push
loope
add
mov
incl
roll
jp
scas
sbb
test
imul
push
ret
iret
xor
push
cltd
je
xchg
enter
xor
dec
bound
out
inc
addr16
je
mov
cmpsb
mov
int
push
push
push
xchg
out
pop
stc
sbb
pop
out
loop
stos
rorl
sbb
icebp
mov
js
fisubrl
mov
push
or
push
sub
gs
xchg
repnz
mov
outsl
test
mov
xchg
aas
fcompl
rorb
scas
iret
mov
and
jns
cmp
cwtl
pusha
mov
mov
adc
xlat
in
jl
test
ja
dec
jl
cmpb
push
xor
mov
sub
sub
mov
dec
xchg
subl
pop
lret
cld
and
insb
fwait
add
loop
outsb
jne
add
iret
rcll
push
shr
add
add
mov
mov
adc
jb
push
scas
adc
aaa
hlt
out
mov
push
idivb
shrb
mov
adc
data16
pop
mov
xorl
jp
mov
lret
aad
bnd
add
je
pop
push
sbb
add
dec
mov
insl
xor
int
mov
jmp
popa
pop
rcrb
ss
xchg
mov
push
iret
push
out
sti
jmp
xchg
loop
and
mov
pop
test
rclb
sub
adc
mov
mov
cmpsl
nop
mov
sub
in
cmpsb
adc
loop
pop
outsb
push
mov
pop
dec
sti
test
in
std
add
in
inc
std
push
pop
popf
and
sbb
mov
mov
xchg
lods
push
loope
adc
aaa
inc
mov
clc
outsb
dec
inc
dec
mov
aas
repz
imul
gs
jecxz
push
leave
nop
xlat
lret
out
xor
fnstenv
inc
mov
mov
inc
mov
lcall
mov
push
push
orl
pop
lahf
in
mov
pop
jmp
fbld
adc
jle
fcompl
mov
int
mov
shlb
mov
xchg
add
ss
push
mov
pop
stos
lods
outsl
add
leave
add
loop
daa
out
xchg
xor
subl
daa
push
jl
mov
js
jge
gs
cmpsb
or
fimuls
subb
lret
je
idivb
ss
or
arpl
imul
shlb
and
lcall
sbb
jmp
les
mov
andl
clc
dec
mov
pop
mov
pop
add
bnd
bound
mov
cmc
dec
xchg
push
inc
filds
push
cmp
icebp
add
sub
nop
adcl
lret
ret
dec
mov
jl
cmp
xor
adc
xor
mov
sub
or
pop
pop
xor
cmpl
push
adc
bound
inc
lret
outsb
dec
sbb
into
xchg
mov
test
lods
cmp
orb
das
push
paddusw
sub
repnz
add
and
stos
fiaddl
sub
sub
or
add
pop
inc
test
rcrb
cmpsb
xor
push
popa
inc
bound
sub
or
xchg
es
pushf
jle
add
pop
push
repz
push
cmp
fisttps
or
fsubrs
fcompl
push
push
leave
or
and
jecxz
outsb
jmp
loope
xor
adc
ss
jp
jo
mov
cmpsl
sbb
cmp
pop
test
pop
adc
je
lcall
dec
fs
scas
clc
xlat
int3
pop
mov
lock
mov
les
and
or
adc
jge
mov
add
ljmp
xor
adc
or
xor
sub
fildll
sub
imul
sbb
cwtl
push
mov
adc
mov
gs
push
pop
pop
xor
mov
mov
and
pop
mov
push
adc
test
adc
add
pop
dec
dec
mov
icebp
pop
and
aas
inc
loopne
inc
or
jae
and
jp
jmp
mov
test
ds
std
or
inc
sti
mov
xchg
jnp
dec
sahf
bound
lods
inc
dec
lret
sti
mov
jp
add
mov
mov
sbb
mov
push
mov
adcb
sarb
dec
daa
out
mov
mov
pop
push
xorl
testb
jge
xor
fsts
cli
add
aam
jge
les
cltd
sbb
outsl
pop
mov
push
insl
push
jle
xor
fwait
movsl
ljmp
cmp
insb
aad
xchg
xlat
mov
out
jge
stos
jns
fwait
xor
or
addr16
mov
jae
movsb
lods
ret
xor
or
pop
dec
imul
fldt
aam
ss
call
lea
and
stos
enter
mov
lea
and
dec
sbb
or
pop
add
icebp
jne
or
or
cmp
aas
aam
and
and
icebp
inc
dec
add
lods
xlat
pop
es
sbb
push
mov
outsb
inc
or
xchg
adc
mov
filds
movsl
add
shrl
aam
lahf
ret
dec
in
test
push
js
or
sub
daa
loopne
inc
test
pop
outsb
cmp
jle
xchg
scas
mov
mov
inc
mov
push
test
mov
sub
add
int
push
mov
sub
jp
call
int3
rclb
shll
pushf
subl
daa
add
jo
lret
scas
imul
or
test
push
jae
sub
jo
test
dec
mov
and
push
sbb
fcoms
lahf
fstpl
lahf
iret
and
lds
call
dec
or
adc
xchg
xchg
mov
mov
into
imul
addr16
and
push
xchg
dec
ficomps
sbb
sbb
fisttps
cs
xchg
cmp
stos
add
add
out
fsts
add
ret
xchg
push
popa
fwait
or
js
incl
rorb
insl
leave
aam
arpl
into
jns
cltd
stc
out
mov
out
adcl
sbb
enter
jns
push
xchg
push
rclb
gs
daa
add
ljmp
or
adc
cmpsl
testl
adc
xlat
fldl
jge
cmp
lds
std
out
sub
aaa
sub
lea
je
xlat
inc
in
stos
mov
mov
jbe
hlt
sbb
push
mov
xor
ss
xorl
call
repz
idivl
popf
rcrb
je
push
and
xchg
jecxz
mov
imul
push
mov
adc
mov
jge
cwtl
test
shll
jns
sub
add
mov
ds
adc
and
sahf
nop
out
out
in
xor
iret
rcr
jl
out
pusha
mov
xor
lret
mov
inc
mov
das
ret
clc
or
loopne
sarl
std
mov
and
xchg
or
stc
add
jge
sahf
mov
inc
jae
lods
insb
cs
push
icebp
cmp
out
xor
pop
iret
inc
sbb
loopne
adc
pop
adc
sbb
ss
or
jbe
adc
sbb
mov
orl
jo
mov
pop
sbb
mov
cltd
movhps
inc
dec
leave
sub
mov
aas
push
xor
in
aaa
in
loopne
mov
out
sub
ror
in
inc
mov
adc
jg
cmp
cltd
bound
jg
pushf
inc
pop
xlat
jg
dec
mov
push
mov
fs
mov
sub
sub
inc
adc
aaa
jnp
or
insb
sbb
jns
push
adc
xor
pop
fdivr
or
jno
push
lahf
mov
push
cmp
push
in
shlb
mov
and
jg
add
push
sub
mov
pusha
jbe
and
mov
jecxz
js
repnz
push
mov
es
lds
adc
push
lahf
lret
incl
out
out
stos
pop
fcoms
ds
clc
nop
sub
leave
jl
push
test
test
insl
aas
jb
into
lods
push
or
inc
fwait
cmp
out
ss
sub
in
jmp
push
mov
jge
fwait
out
mov
adc
xchg
inc
and
xchg
inc
outsb
cld
dec
sub
and
maxps
imul
mov
adc
decl
loope
lea
sub
dec
pop
call
cmc
cmp
fwait
subl
xchg
fisubrs
adc
cmp
insb
clc
ret
aaa
cmp
dec
jp
sahf
fwait
insb
push
das
pushf
or
jno
xor
div
mov
cmp
mov
adc
insb
aaa
xor
cmp
lret
mov
pushf
pop
int3
mov
out
xchg
or
jae
sbb
repz
dec
push
adc
call
pop
xlat
repnz
stos
aaa
xchg
push
lret
in
jl
into
loopne
movb
xchg
lea
xabort
sub
bound
jno
out
les
inc
pusha
or
push
mov
in
incl
hlt
sbb
outsb
out
inc
je
scas
jle
push
lock
pop
mov
push
mov
adc
pop
test
or
xlat
ds
scas
cwtl
pusha
lods
lahf
lea
add
or
and
loopne
pop
adc
adc
lcall
outsb
out
sbbl
sbb
out
lods
xchg
pop
xchg
or
jnp
je
pusha
sbbb
mov
ret
xor
sbb
add
xadd
mov
movsb
mov
in
pop
cwtl
repz
push
ss
fsubr
arpl
mov
fstl
out
mov
aas
jle
mov
lcall
inc
jl
insb
int3
jnp
adc
sbb
and
dec
mov
adc
push
ja
dec
in
inc
bound
outsl
mov
out
andb
adc
cmp
sti
jno
push
add
sbb
ja
pop
cmpsb
data16
push
mov
lret
mov
jbe
jo
or
jecxz
dec
jmp
mov
std
lahf
mov
movsl
sub
repz
dec
jns
nop
ja
out
loop
iret
cltd
mov
jecxz
sahf
jne
in
sahf
dec
repz
pop
lret
push
mov
push
adc
mul
add
mov
cmp
cwtl
adc
xor
cli
dec
jg
jae
or
push
nop
cmp
push
and
inc
lods
fidivs
xchg
cmpsl
pop
out
mov
fcmovnu
and
ja
jl
jns
mov
ds
xor
jbe
jne
rcll
jp
lods
gs
sbb
mov
rcll
and
xchg
push
push
add
fimuls
adc
into
or
cwtl
jne
shl
pop
pop
cmp
mov
jmp
test
cmp
inc
mov
in
jl
int
and
fisubrl
fisubrs
popf
lods
inc
in
sti
testl
mov
mov
mov
push
mov
insb
mov
adc
jle
dec
ret
ja
lods
jo
push
fsubrs
sbb
pop
pop
test
mov
adc
pop
hlt
mov
xor
rcr
ss
into
movsl
xlat
les
pop
jp
stos
aaa
stos
out
push
xchg
loopne
jb
dec
jo
in
inc
xchg
push
push
jge
add
dec
cmp
xor
mov
push
repz
aaa
or
adc
push
sbb
sarb
sbb
lret
mov
mov
addr16
sbbl
or
xor
sahf
shll
mov
ljmp
int3
and
push
nop
adc
in
std
dec
adc
out
cli
mov
xchg
xchg
lea
insl
out
dec
or
or
jnp
jmp
mov
cmp
mov
cmp
lods
enter
je
cwtl
pop
push
rol
loope
add
add
rcl
mov
cltd
add
jo
push
mov
mov
iret
jmp
rclb
sbbl
int3
and
subl
jmp
dec
loop
ljmp
sbb
adc
fimull
pop
cmpsb
dec
mov
jecxz
imul
mov
pop
mov
aaa
cmp
mov
jmp
int
in
jnp
mov
dec
lods
or
adc
ss
outsb
jge
mov
popa
fisubs
mov
or
test
mov
and
add
in
and
pop
inc
xor
push
in
sbb
mov
mov
sbb
fs
fistps
inc
mov
jb
jl
js
jb
addr16
ljmp
fcoms
adc
sti
cmpsl
negb
push
add
ror
cmp
pop
dec
subb
inc
and
pop
adc
shlb
mov
mov
push
mov
fs
mov
xchg
mov
jb
imul
xor
in
inc
xchg
jo
lret
lret
les
pop
xor
sarl
rcll
inc
dec
mov
add
add
enter
jl
cltd
scas
stos
xchg
lock
push
test
xor
gs
mov
dec
dec
outsb
mov
shll
jbe
sbb
fmuls
sub
int
test
icebp
add
add
cmp
les
insl
inc
arpl
test
in
or
enter
adcb
xor
fisttps
or
jo
lods
imul
mov
pushf
test
je
cli
pop
je
sbb
repz
sbb
movl
push
xchg
add
adc
test
and
jmp
sbb
or
cmp
mov
xor
lods
cs
sub
jo
insl
mov
sub
aas
jne
adc
mov
lds
inc
iret
adc
pop
fwait
add
clc
lods
jg
add
pop
inc
shll
xlat
paddusw
outsb
xor
xor
jb
loopne
aad
lock
cmpsl
inc
and
mov
xor
or
adc
push
roll
cmp
out
jo
push
xor
ja
push
pop
imul
mov
jge
add
jle
add
arpl
lods
daa
fldt
or
sti
jo
pushf
loope
rcll
and
aad
fstpl
dec
divb
jl
leave
adc
dec
sub
cwtl
add
adc
jle
mov
jae
leave
jg
add
popf
in
jle
jno
sub
movsl
int
jne
xchg
subl
mov
fiadds
lahf
and
push
mov
out
dec
add
jb
movsl
testl
test
das
cmp
punpcklwd
shr
cmc
shrb
scas
or
ljmp
daa
and
lods
mov
and
push
jae
outsb
pusha
cmpsb
std
mov
data16
mov
std
sub
fwait
mov
aaa
and
dec
fwait
add
popl
loope
ljmp
test
lods
adc
mov
sarl
scas
lods
add
push
lcall
repz
mov
adc
mov
icebp
push
arpl
inc
mov
push
ret
mov
or
outsb
push
xchg
sar
pop
enter
pop
push
outsl
fbld
add
or
xor
inc
cmp
pop
int3
mov
dec
mov
add
xor
fnstsw
orb
int
fwait
dec
sbb
add
inc
enter
stos
sub
pop
andb
lahf
imul
push
sar
jle
and
pusha
mov
xor
inc
pushf
cmp
jno
popf
xchg
loop
cmp
pusha
loope
and
xorl
mov
rol
test
jnp
cmp
mov
push
outsl
xchg
cmp
xor
test
or
sbb
imul
outsb
lcall
xchg
inc
ja
sti
jp
mov
in
es
fyl2xp1
xchg
jo
pop
mov
cmp
inc
jge
repz
mov
or
loope
lahf
into
mov
or
push
pop
mov
adc
fdivl
decl
or
out
mov
imul
sbb
pop
std
mov
leave
sub
push
ret
adc
sti
data16
or
pop
sub
add
xchg
cmpsb
pushf
and
cmp
fadd
pop
mov
dec
ds
jmp
or
lods
xchg
insl
adc
xor
adc
jecxz
dec
xor
arpl
sbb
outsl
shlb
xor
ss
jle
pop
shrl
sti
xor
jle
inc
shlb
pop
dec
int3
das
movsl
cmpb
pop
add
push
faddl
jmp
mov
and
xchg
ffree
aam
ss
lahf
stos
mov
jae
jns
or
iret
lods
xchg
lahf
cmp
pop
jecxz
popa
jae
rorl
fbld
add
gs
or
out
pushf
andb
sub
shl
loope
jecxz
aas
cmp
jns
pop
mov
cmp
cmp
add
les
fdivrl
jmp
dec
xor
mov
or
pop
or
ds
popf
in
bound
and
scas
icebp
dec
outsl
test
scas
xor
and
sbb
add
addr16
pop
shll
scas
xchg
clc
mov
mov
mov
adc
in
dec
test
mov
daa
mov
jnp
imul
xor
mov
pop
and
sub
stos
inc
xchg
cmpb
or
std
movsb
push
imul
pop
and
movl
pop
mov
or
mov
pop
dec
adc
gs
and
xchg
xchg
sbb
xchg
dec
jb
addr16
sbb
rclb
in
cwtl
insb
add
movsb
xchg
mov
fwait
hlt
adc
incl
xchg
jmp
in
jbe
inc
jb
dec
cmp
scas
push
mov
setp
ljmp
out
adc
push
lcall
in
pop
test
sbb
paddsw
daa
adc
mov
daa
mov
pop
jno
call
cmp
and
cmp
fstpl
and
rclb
xchg
xchg
push
sub
xchg
std
xor
cltd
mov
push
mov
xor
pop
aas
cmc
mov
imul
aam
lds
and
push
movsb
stos
push
addr16
lock
sbbb
mov
cmpsb
popa
cmp
lret
cmp
mov
mov
mov
shrb
loop
xor
mov
pop
mov
comisd
int3
jl
hlt
jne
push
call
jae
mov
jp
sub
js
dec
xorl
pop
fimuls
rcrb
mov
jno
and
xchg
scas
pop
lea
cmp
push
movsb
cmpsl
pop
in
outsl
ss
mov
dec
pop
sub
call
mov
mov
loopne
xor
xchg
mov
sub
and
mov
loope
lods
pop
jb
addb
orb
xchg
test
lods
scas
push
subb
movsl
clc
inc
adc
or
lock
dec
and
adcb
int3
loop
sbb
pusha
fwait
scas
call
pop
inc
fwait
cmpsb
ss
shll
xchg
xlat
sub
or
inc
xor
pop
pop
out
fcoml
ja
mov
push
dec
mov
mov
adc
insl
clc
mov
stos
mov
lods
adc
fs
arpl
fisttpll
sahf
xchg
rcl
ja
add
insl
jnp
mov
in
add
mov
mov
insb
outsb
fcomip
pop
loope
inc
pop
cli
stos
xchg
push
pushf
je
fisubrl
pop
cmp
or
ja
cmpl
je
es
jecxz
aas
push
call
lds
inc
out
cld
inc
xchg
loop
out
in
aam
mov
cli
repnz
mov
add
mov
rol
iret
mov
pushf
cmp
rclb
sub
pop
notl
push
adc
imul
cmpb
jne
cmp
rolb
adcl
jl
xchg
jns
jge
imulb
lret
jbe
xchg
cmp
fistl
mov
push
in
adc
xchg
pop
dec
push
test
xchg
pop
adc
fsubrp
fldt
les
imull
pop
jo
dec
mov
sub
fidivl
gs
ljmp
inc
aaa
xchg
cmp
das
jne
cmp
test
ret
inc
cltd
cltd
insl
jmp
mov
add
mov
pop
mov
into
add
cmp
xor
clc
push
cmp
mov
aad
ss
outsl
cmp
xor
inc
shl
add
mov
lret
int3
sti
lahf
jge
inc
or
repz
mov
pop
out
or
mov
mov
fwait
test
jge
mov
lret
adc
sahf
cmpsb
in
in
movsl
jae
mov
cmp
jge
xorl
int3
mov
cmp
popf
add
stos
inc
iret
xchg
mov
inc
sarb
inc
jbe
jecxz
or
jo
add
lds
andl
add
or
adc
popf
test
dec
cmp
add
push
and
cmp
xchg
xchg
jb
sarb
mulb
push
sub
icebp
add
js
inc
adcl
dec
cld
adc
add
xchg
ja
into
pop
aas
bound
jmp
cmp
jmp
and
cmpl
stos
jnp
or
fldl
sahf
or
shll
lods
mov
repnz
test
movsl
in
repz
xlat
imul
adc
movsb
fsts
int
or
jmp
jo
insb
and
xchg
mov
dec
shl
ds
fstl
push
call
mov
mov
xor
cltd
sub
jp
je
mov
insb
stos
push
inc
xor
clc
in
testb
cmp
mov
loope
pop
int3
cmp
cltd
imul
insl
lea
mov
call
ret
nop
mov
aam
push
rcl
fs
cld
ds
fwait
xor
shlb
popf
pop
xchg
pop
pop
or
mov
insb
or
sbb
insb
add
test
nop
shl
or
mov
es
mov
sub
xchg
jns
outsb
xchg
clc
dec
jo
gs
orl
out
adcb
repz
push
scas
and
das
dec
or
mov
adc
or
jmp
xor
les
jb
inc
out
addb
push
fisttpll
pop
cmp
push
lods
fcoml
adc
adcl
enter
in
nop
jno
push
dec
pushf
pop
xor
sbb
add
jae
out
cmp
mov
out
push
push
xor
loope
push
mov
mull
cwtl
sbbb
dec
mov
inc
or
lahf
dec
rcr
jmp
fimull
sub
mov
lret
fstp
dec
dec
stos
sbb
data16
xor
mov
xchg
arpl
jecxz
sub
nop
iret
add
lds
and
push
jle
ja
cmpsb
sbb
sub
jmp
jb
cmpb
dec
mov
out
mov
fdivl
mov
mov
mov
sub
push
fidivrl
mov
nop
sub
push
mov
push
inc
cmp
popa
sysret
data16
xlat
mov
inc
repz
arpl
stos
cwtl
add
lret
test
leave
fisttps
pop
cli
xlat
cmpsb
pop
call
int3
push
int3
mov
sti
imul
sbb
xorb
pop
leave
fsubl
mov
lds
popa
test
fidivs
jecxz
xchg
clc
pushf
stos
pop
cmp
outsb
insb
pop
and
jge
dec
mov
scas
or
movsb
ja
mov
daa
jae
xchg
movsl
cmp
call
clc
outsb
sahf
fidivrs
jns
idivb
push
cmp
push
clc
out
dec
mov
ljmp
lea
test
sub
mov
into
sahf
ret
mov
loop
in
cmpsl
dec
loop
mov
pop
mov
xor
dec
or
loope
mov
xlat
jle
scas
or
faddl
xlat
scas
add
das
popa
cmp
and
push
mov
in
fs
cmp
int3
mov
add
scas
pop
or
lock
or
jp
outsl
and
cmp
mov
xchg
cwtl
ret
fmulp
mov
jae
mov
rcr
cwtl
out
jg
daa
xor
sub
ljmp
imul
mov
cmp
movsb
sbb
cwtl
pop
mov
std
mov
mov
shll
daa
dec
inc
sbb
add
loopne
stos
push
mov
xchg
inc
sbb
and
leave
or
lret
pop
mov
mov
ficompl
add
adc
and
pushl
fldenv
aam
and
dec
push
fwait
xchg
icebp
mov
dec
inc
loop
into
mov
icebp
xor
cmpb
testl
mov
push
rcrl
jp
movsb
adc
test
push
sub
mov
mov
mov
pop
xor
jb
ljmp
aas
js
jmp
movsl
or
or
cmp
rorb
arpl
push
.byte
jmp
bound
inc
sub
dec
dec
dec
dec
nop
jmp
mov
shl
jmp
add
push
push
call
mov
call
pop
call
call
push
call
pop
push
push
call
mov
push
jmp
jmp
xor
mov
ret
mov
ret
jmp
ret
add
dec
popa
jo
jns
outsb
gs
jns
popa
jb
add
bound
js
popa
outsl
push
push
push
call
add
add
mov
push
ret
in
sbb
shrb
xchg
pop
mov
ja
add
inc
mov
jnp
out
nop
xchg
and
stos
mov
sbb
cmp
push
add
pop
repz
push
clc
dec
or
daa
cmp
and
test
adc
nop
jno
rorb
add
std
repz
ds
cmpsl
jbe
inc
or
mov
scas
mov
lret
mov
cvtps2pd
test
mov
jo
cld
repnz
leave
das
stos
jno
aas
push
movsb
cwtl
rcll
fsubs
hlt
jo
cmp
movsl
sahf
stos
aam
into
sub
in
jle
mov
push
jmp
mov
sub
push
push
icebp
pop
in
xor
ds
aam
sbb
insb
xor
ja
mov
dec
jg
inc
pop
inc
mov
mov
cltd
push
dec
popa
adc
or
test
jb
loopne
rcl
ss
cmpsl
outsb
add
sbb
lods
xchg
push
cmpl
es
negb
push
fildl
push
insl
pop
in
pop
out
adc
inc
jne
pop
pop
sbb
adc
pusha
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
pop
call
xor
imul
out
lret
xchg
add
mov
or
add
add
add
addl
xor
mov
pop
push
mov
pop
sub
mov
add
jmp
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
xor
mov
push
push
pop
popl
mov
jmp
adc
push
das
cmp
sbb
jmp
cmp
jne
and
jmp
lret
mov
pop
add
and
jp
mov
inc
pop
xor
shlb
add
mov
fwait
jmp
imul
xchg
fwait
sti
jle
jae
dec
sub
or
xor
add
or
mov
shl
sbb
daa
imul
scas
pushf
lea
mov
sub
in
cmp
fidivl
push
xor
xchg
jmp
lds
xor
lods
jecxz
dec
sti
jne
push
cltd
jae
stc
inc
sub
mov
lea
hlt
or
xor
or
lret
icebp
add
sbb
inc
or
loope
shr
std
xchg
mov
add
imul
cmp
rcrl
outsl
ficoms
out
shrl
dec
std
jb
fidivs
into
dec
int
mov
rorl
or
dec
int
mov
popa
adc
xchg
cmp
outsl
push
or
lock
sarl
aas
ret
xchg
bts
xchg
adc
or
mov
inc
sti
adc
movsb
adc
pop
dec
cmp
mov
lret
outsl
aad
and
test
inc
gs
sub
mov
and
pop
test
fnstcw
fists
xchg
inc
lret
jo
sub
pushf
divb
imul
mov
dec
pop
lret
dec
int
and
mov
mov
dec
dec
and
sub
sti
lret
leave
out
sbb
sub
in
dec
stos
dec
stos
add
dec
or
popa
fdivp
loope
fs
ljmp
aam
outsl
pop
adc
and
loope
or
or
mov
dec
jmp
pop
dec
stc
sahf
push
fs
sbb
loopne
fdivrs
xchg
outsl
gs
jno
jns
xchg
js
xchg
rcrb
jb
gs
cmp
dec
call
fdivrp
mov
popf
sbb
bound
out
or
repnz
sbb
jg
sub
mov
aad
and
dec
xchg
jp
cmp
adc
dec
jmp
lods
or
cmpsl
loopne
mov
sbb
adc
gs
inc
dec
imul
arpl
rcrl
fs
mov
sbb
mov
mov
iret
pop
popa
in
shrl
xchg
in
push
jns
mov
jecxz
loop
inc
aas
insb
or
insb
or
insb
adc
test
pusha
and
arpl
jmp
shrb
hlt
xchg
stos
inc
mov
outsl
dec
jmp
out
in
adcb
or
sub
out
daa
test
sub
cmp
in
ret
out
in
sti
sub
out
daa
test
out
movsb
loop
in
loop
dec
push
shll
jno
xchg
hlt
dec
push
shl
in
and
ret
loop
mov
mov
shld
out
mov
in
loop
sub
sahf
mov
out
fnstsw
dec
push
movsb
int3
daa
insl
movsl
repnz
mov
loop
in
js
ljmp
out
das
add
call
mov
out
hlt
xor
out
in
out
movsl
loop
mov
out
in
in
xchg
aad
out
sub
loop
arpl
out
dec
lret
movsb
insl
adc
test
out
cmp
out
sub
out
in
daa
mov
movsb
outsl
daa
pop
sub
push
mov
movsb
insl
sub
ljmp
iret
cmpsl
loop
mov
in
in
popa
in
mov
jnp
xor
loopne
mov
jnp
test
mov
movsb
loop
jp
cmc
mov
data16
out
mov
sub
ds
jno
out
hlt
insl
dec
das
jge
xlat
xor
ljmp
scas
ljmp
adc
test
out
call
sub
int
loop
cmp
insb
adc
in
daa
xchg
xchg
sub
in
aaa
xor
dec
in
out
outsb
or
movsl
out
dec
in
fdivrl
mov
movsb
lret
movsb
loop
jecxz
loop
in
loop
pop
das
push
or
fmuls
mov
outsl
xchg
and
rcr
jbe
xchg
addr16
daa
clc
into
pop
push
call
adc
idivb
in
xlat
xchg
addr16
daa
clc
into
mov
mov
into
sbb
adc
sbb
mov
and
mov
in
sti
rorl
ja
cmpsl
in
xlat
xchg
addr16
daa
clc
into
mov
mov
push
in
dec
inc
fwait
cmpsl
loop
in
mov
in
sti
rorl
ja
cmpsl
in
xlat
xchg
addr16
daa
clc
into
push
dec
or
cmpsl
popf
cmpsl
loop
in
mov
in
sti
rorl
ja
push
in
xlat
xchg
addr16
daa
clc
into
push
dec
and
mov
stc
mov
mov
mov
inc
stos
sub
out
pop
adc
in
in
je
insb
loope
mov
fmul
movsb
mov
in
sti
rorl
ja
mov
movsb
popa
out
push
jg
in
loop
outsb
mov
sbb
pushf
mov
sti
mov
bound
push
das
pop
hlt
hlt
fmuls
or
test
call
das
insl
movsb
scas
loopne
testl
das
pop
hlt
hlt
fmuls
or
int3
loop
in
mov
cs
add
inc
cmpsl
in
loop
in
sub
or
loop
movsb
in
inc
and
pop
pop
mov
fisttpll
mov
cmp
in
jno
iret
test
dec
mov
movsb
outsl
cmp
pop
pusha
mov
movsb
dec
xchg
in
loop
push
call
mov
les
jnp
out
in
cs
insl
dec
fsub
movsb
loop
pop
cmp
xchg
pusha
callw
adc
lret
mov
mov
out
sub
out
xchg
scas
out
push
rclb
scas
lods
mov
push
or
jl
and
shr
int
push
mov
aaa
mov
mov
cmpsb
jge
sbb
push
jle
sbb
out
movsb
loop
in
loop
in
loop
in
loop
in
loop
in
loop
in
call
out
ljmp
in
loop
in
loop
in
loop
in
loop
in
loop
in
add
in
loop
in
loop
in
loop
in
loop
in
adc
std
sbb
jo
call
sbb
popf
andl
enter
inc
outsl
mov
push
shll
mov
test
in
insb
add
jle
fisttps
cltd
out
mov
lock
jo
push
lret
inc
rcr
call
adc
pop
adc
xor
mov
and
in
and
scas
xor
mov
inc
repnz
ficompl
les
iret
test
xor
mov
sbb
or
xchg
mov
cmc
xor
sub
push
jg
jbe
ds
bound
cmp
mov
movsl
mov
stc
add
push
sbb
mov
sub
sbbl
std
sbb
idiv
cmp
scas
cmp
pop
cmp
pop
dec
xor
dec
test
mulb
pop
cmp
mov
mov
or
andl
std
loope
dec
repnz
xchg
jne
sar
xchg
jo
sub
faddl
stos
das
stos
push
and
pshufw
std
push
out
inc
ss
lret
push
loope
fildl
mov
test
cli
dec
xchg
and
mov
imul
cld
pop
adc
mov
mov
sbb
jnp
sub
int
sub
add
test
push
sub
add
rcll
movb
subl
mov
aas
dec
and
xor
lret
sbb
push
xchg
xor
std
add
dec
shrl
leave
fwait
jmp
jae
test
popa
stos
mov
repz
test
dec
cmp
fisttpll
ror
out
cwtl
sbb
mov
push
cmp
popf
js
jo
mov
insl
add
movsb
repnz
movsb
cld
out
lods
lcall
insl
loopne
fnsave
sbb
jb
cmp
movb
push
xchg
jbe
ficomps
push
mov
sbb
mov
rcr
adcb
loope
sbb
sub
jg
xchg
and
mov
imul
inc
jmp
xor
dec
xchg
leave
or
xorb
add
fistpl
es
mov
xchg
inc
scas
les
test
in
sbb
shrb
lcall
jns
inc
das
in
dec
pop
nop
pop
xchg
test
sahf
sbb
scas
inc
fadd
mov
notl
scas
adc
cld
xchg
cmc
inc
mov
test
ja
pop
in
sub
jno
scas
adc
in
gs
sbb
xlat
rcl
mov
aaa
pop
int
and
add
add
add
or
add
or
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
or
add
or
add
or
add
push
add
or
push
add
or
push
add
or
push
add
or
push
add
or
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
or
add
fisttps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
xchg
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
add
add
add
int
and
mov
and
add
andb
push
icebp
add
sub
lret
call
sti
call
inc
sar
loope
movsb
cmc
cwtl
pop
orb
push
clc
test
arpl
or
sbb
mov
mov
popf
test
mov
lods
mov
mov
sbb
mov
dec
stos
fs
add
pusha
mov
aaa
xor
jle
es
jb
mov
inc
add
jle
cmp
add
add
add
mov
or
iret
test
fnsave
shlb
lahf
xchg
push
insb
adc
fucom
mov
lods
mov
icebp
xchg
stos
int
pop
jl
out
pop
outsb
outsl
test
fwait
dec
cltd
mov
dec
lret
sbb
push
cli
ret
pop
inc
jge
lcall
adc
arpl
push
lret
fstpl
gs
add
sub
int
cmp
insl
loopne
sbb
inc
dec
xor
mov
stos
shll
ss
xchg
je
mov
cmpsb
and
and
enter
fldt
add
mov
lgs
sub
push
out
call
test
fsubr
push
inc
shl
repnz
sbb
cmpb
cmpsb
mov
loope
ficomps
popf
lret
std
xchg
pop
test
es
sub
aad
sbb
lret
cltd
inc
lahf
test
rorb
in
inc
hlt
pusha
int3
sahf
out
jb
jmp
outsl
push
jecxz
rcrl
and
or
psubusb
das
push
ret
add
push
add
test
sbb
inc
movsl
nop
mov
xor
out
lcall
ss
fwait
dec
dec
je
sbb
fisttps
mov
fisubs
adcb
mov
ljmp
xchg
or
scas
mov
hlt
inc
lcall
mov
add
push
arpl
js
scas
in
and
jmp
mov
test
cltd
ja
pop
insl
pop
add
imull
and
xchg
add
ljmp
or
dec
xor
enter
repz
ljmp
les
push
arpl
sbb
or
sahf
inc
sub
inc
dec
testb
pop
movsb
ja
pop
pop
sahf
dec
stos
push
sbb
xor
push
leave
mov
or
popf
jmp
jae
in
dec
dec
sub
cmp
xor
lock
ljmp
add
xchg
aaa
aas
adc
and
jne
fisubs
stos
jb
mov
jle
cs
repnz
lods
sub
dec
in
movsl
and
mov
sti
jnp
pop
icebp
mov
and
push
jecxz
std
lcall
pusha
jae
mov
int3
imul
pop
fsubs
arpl
dec
lret
jmp
into
out
rclb
xor
andb
rolb
dec
shll
cwtl
xchg
in
pusha
push
hlt
sbb
cmp
mov
inc
pop
in
adc
pusha
leave
jb
xor
movsb
xor
jbe
idivb
js
stos
sbb
jl
loopne
inc
stc
arpl
add
sub
mov
das
cmp
and
mov
and
ss
dec
ficomps
movsb
shrb
and
xchg
mov
adc
xor
add
test
sbb
pusha
ud0
add
xor
ds
je
jae
xchg
sbb
dec
in
push
imul
xorl
call
stos
aad
outsb
pop
sub
test
jo
add
std
mov
xor
je
xchg
pop
jne
sti
cmc
in
int3
or
and
rcll
int
sbb
adc
repz
xchg
and
jge
pop
ja
jle
movsb
sbb
inc
push
fcompl
jge
pop
leave
arpl
adc
ja
mov
jle
jns
aas
or
sub
push
cmp
xlat
gs
test
mov
jg
jle
lea
jo
sbb
sbb
loope
fimull
jno
in
cmpl
in
xchg
lcall
jg
loope
lret
out
sti
mov
loop
aad
popf
jno
cld
xor
aad
les
mov
mov
int3
in
sub
mov
add
faddp
scas
jl
lock
xor
loope
xchg
and
inc
add
pop
loop
pop
stc
mull
and
dec
xor
or
push
cmp
in
ret
jle
outsb
jmp
jmp
inc
cwtl
cmpsb
fs
repnz
xchg
push
mov
ds
pop
and
fwait
outsb
cmp
inc
lods
shlb
fmul
inc
nop
cli
dec
stos
cwtl
dec
pusha
mov
lds
mov
and
lods
outsl
mov
into
sbb
cmp
push
xchg
fs
popl
sbb
xor
ret
mov
popf
iret
inc
hlt
rcrl
movsl
shrb
xor
out
pop
and
dec
adc
loope
xor
or
mov
scas
mov
add
cmc
call
and
pusha
and
mov
mov
and
adc
notb
push
lock
imul
sub
lock
xor
dec
or
push
ret
stos
or
pusha
mov
mov
and
jae
mov
test
cmc
or
mov
mov
rcrl
xor
dec
ret
daa
icebp
dec
add
aaa
in
movsb
xor
inc
sbb
xchg
xor
jmp
rol
adc
arpl
jle
rorb
loopne
pop
add
cmc
in
dec
rclb
pop
sub
ljmp
int
daa
mov
insb
mov
and
subl
push
stos
and
sarl
lea
sbb
cli
or
lcall
xlat
dec
in
fucomi
push
xor
jae
jge
mov
dec
jb
or
push
pop
fdivs
sub
pop
aad
cld
sti
jle
loop
dec
mov
cld
xchg
pop
inc
lods
scas
or
cs
pop
out
jo
inc
and
jmp
lret
loop
jbe
popa
repz
mov
sub
cwtl
aas
jo
mov
inc
push
or
pop
sbb
push
test
pusha
add
sbb
pop
cltd
addr16
ret
pop
push
jl
dec
mov
or
xchg
pop
xor
insl
std
adc
lds
pop
pop
dec
add
bound
sti
inc
xor
jmp
push
mov
in
adc
cmpsb
jl
dec
into
mov
out
dec
and
cwtl
shrl
sub
loop
leave
addr16
std
enter
leave
cmp
jecxz
dec
add
sahf
mov
mov
addr16
push
call
ret
sub
aad
mov
mov
and
test
aaa
xchg
sub
and
lahf
pop
leave
data16
push
stos
mov
addr16
hlt
popa
mov
stos
sbb
cli
or
ret
dec
sub
shr
mov
rcrb
imul
adc
movntq
out
and
and
sbb
adc
ret
cmp
jae
mov
shll
and
push
not
push
xor
inc
mov
fxam
icebp
mov
cli
lods
mov
dec
cld
stos
pushf
enter
add
outsb
jle
cld
scas
xor
adc
fwait
das
sti
fldl
in
xchg
test
or
mov
js
and
lcall
mov
fcmovnu
xchg
imul
fcoml
push
out
rcl
and
mov
in
or
push
hlt
lahf
imul
imul
mov
mov
mov
sbb
cmpsl
add
xchg
shrb
enter
mov
iret
sahf
xchg
cmp
cwtl
fbld
inc
mov
jg
and
pop
cmp
xor
add
loop
out
sti
dec
arpl
loop
sti
dec
sbb
pop
pushl
nop
ljmp
mov
mov
popf
int
pop
mov
outsl
add
shll
ds
int
jnp
repz
imul
adc
mov
rcrl
inc
mov
shl
div
mov
ret
and
insb
and
test
push
jle
cs
push
pusha
in
xor
mov
sub
ljmp
pop
loope
or
xchg
das
xchg
lahf
fidivs
cmp
ss
mov
cmp
cwtl
in
inc
pop
in
out
shrl
adc
insl
je
jbe
cli
fistps
cmpsb
outsb
mov
sbb
subb
jp
aas
push
test
jbe
dec
in
std
sbb
aam
mov
je
push
in
ret
mov
out
dec
sub
mov
mov
pop
aaa
xor
repnz
jo
pushf
jmp
test
cltd
mov
ret
pusha
jns
jg
mov
sub
dec
les
fdiv
push
mulb
out
pusha
jg
movsb
icebp
adc
fidivrl
jbe
sbb
mov
clc
cmpb
lret
mov
mov
lret
pop
add
adc
push
and
orl
xchg
pop
imul
nop
std
mov
data16
mov
xchg
dec
adc
shlb
mov
cmp
dec
sub
rorl
mov
fcoms
adc
shrb
xchg
mov
dec
fldcw
mov
push
pop
test
mov
sub
lcall
fwait
addr16
fs
or
jns
fs
or
enter
jne
test
xchg
in
adc
ds
pop
push
adc
or
mov
jle
dec
in
ja
popa
sahf
mov
shl
sub
and
dec
or
dec
lahf
cld
sub
sbb
nop
mov
popa
inc
cltd
stos
fdivrs
push
scas
sub
repz
sahf
mov
push
adc
xor
stc
lcall
ljmp
sub
dec
cmp
mov
jnp
mov
jnp
rolb
mov
pop
arpl
pop
popa
imul
or
jns
dec
and
dec
or
cwtl
in
xchg
and
and
dec
out
popf
jbe
mov
stc
lcall
enter
fmulp
jp
addr16
insl
inc
mov
pop
je
ret
jns
cmp
hlt
sub
aas
out
mov
lret
or
cld
inc
pop
lods
jmp
lods
sub
inc
mov
iret
es
jge
push
mov
int3
sarb
push
push
and
push
sub
inc
adc
sub
punpckhwd
dec
jl
ret
popf
cli
add
ds
sub
out
add
insl
push
mov
stos
adc
hlt
shr
int
pop
stos
mov
mov
out
dec
push
cwtl
xor
or
sbb
dec
lds
push
cltd
jle
push
xchg
loop
outsl
ljmp
xor
pop
idiv
ret
cwtl
sbb
and
xlat
jl
lock
mov
out
lock
in
mov
mov
jno
jl
adc
inc
inc
sbb
xchg
mov
xor
dec
andb
mov
sar
add
xor
pop
mov
minps
enter
fs
xor
inc
sti
cwtl
aad
test
lahf
cmpsl
ret
cmpsl
pushf
cmp
sahf
jb
sti
repnz
rorb
dec
add
sarb
ss
lock
das
add
test
add
dec
lret
js
icebp
pusha
pop
sahf
ret
fwait
dec
test
inc
mov
leave
sbb
shlb
out
ret
insl
call
pushf
mov
cmp
rorb
sti
xchg
sub
aam
mov
out
push
xlat
pop
push
or
push
cmc
xchg
clc
or
sub
ret
and
fwait
std
jbe
lret
adc
push
sarb
pop
lcall
jmp
mov
add
fbld
jecxz
mov
or
xchg
pop
mov
mov
mov
idiv
adc
push
and
add
jg
insl
dec
push
mov
dec
stos
popa
add
js
inc
sbb
shl
mov
jbe
test
leave
aaa
fiadds
cld
repnz
ret
cmp
fs
data16
repz
lcall
mov
insl
scas
inc
pop
pop
cmc
sbb
adc
jnp
cltd
lret
and
mov
test
scas
insb
test
fistpll
mov
jge
jnp
fs
pop
mov
push
dec
fstp
pusha
pop
les
jge
cmp
cmpsb
jbe
inc
stc
mov
mov
addl
in
outsl
mov
add
dec
movsl
dec
jae
addr16
lahf
out
pop
add
sbb
inc
pop
lret
popf
and
leave
out
push
stc
popf
inc
pusha
cld
pop
sahf
jb
cmpl
mov
mov
mov
and
cmc
loope
pop
sbb
jne
xor
aas
cmp
xchg
lret
cltd
inc
call
bound
pop
sbb
lret
mov
mov
scas
mov
into
sbb
js
cmpsb
lcall
addl
push
inc
inc
push
adc
lods
pop
mov
cmp
inc
jg
sbb
sub
jns
dec
xchg
fs
outsb
in
xchg
jecxz
loope
dec
pop
sub
sub
insb
xchg
jge
add
in
mov
jge
and
and
inc
shll
push
lds
inc
inc
mov
jbe
fmuls
test
aam
jno
push
adc
push
xchg
sub
repnz
mov
sahf
add
adc
and
lcall
sbb
pop
negb
repnz
jb
mov
sub
ffree
jnp
leave
add
hlt
push
int
xchg
sahf
enter
push
pop
das
mov
jo
cmpsl
add
push
cmp
jns
mov
and
insb
pop
mov
shll
shl
ljmp
out
mov
int3
enter
das
push
mov
loopne
fndisi(8087
inc
xchg
dec
pop
leave
pop
pop
std
repz
jns
jecxz
imul
out
xchg
dec
enter
cli
shl
aas
decl
in
sub
mov
cld
xchg
xor
aaa
call
shll
dec
sub
cmpsb
cwtl
stos
lods
push
xor
aaa
hlt
jbe
xor
jl
ret
pop
scas
inc
mov
pop
data16
test
fucomip
mov
adc
inc
idivb
jecxz
in
mov
jmp
jp
jle
les
loopne
scas
hlt
aad
mov
outsl
sub
dec
leave
repnz
jo
rclb
cs
cltd
scas
mov
adc
add
push
int
xor
movl
push
jnp
inc
in
push
mov
dec
mov
sub
xor
stos
test
pop
dec
enter
or
stos
mov
int3
push
ljmp
adc
mov
fildll
fisubs
mov
pop
insb
inc
sahf
cld
cmp
xchg
mov
jmp
xchg
pop
int3
sbb
cs
jcxz
ja
icebp
push
push
outsb
inc
stos
mov
cwtl
test
icebp
stc
in
addr16
and
xor
and
adc
cs
out
jb
movb
jnp
gs
test
xor
and
jb
repz
stos
sbb
fstl
lods
xchg
cmp
lock
std
xor
testl
pop
stos
aam
sti
xchg
cmp
xchg
adc
push
testb
push
xchg
ljmp
xchg
cmp
je
inc
les
shlb
aaa
sbb
cmp
push
jge
data16
fnstenv
cmpsl
sahf
add
dec
rol
sti
out
dec
js
cmp
in
pop
mov
jl
addr16
lods
movl
pop
jmp
push
std
push
add
scas
popf
cs
stc
mov
aam
mov
dec
and
xlat
xchg
cmp
jo
mov
pusha
sbb
dec
or
or
popf
je
add
rcrb
les
push
xchg
or
push
rcrl
sub
sbb
adc
mov
xor
cld
clc
shlb
pop
addl
imul
xor
cwtl
pop
lcall
scas
pop
push
lods
push
lods
cmpsb
jns
cmp
xlat
pop
and
les
add
pop
cmc
adc
popf
push
xchg
sti
jmp
lret
dec
fdiv
adc
mov
jo
repnz
insb
les
aaa
sub
sbb
push
mov
push
test
aaa
shrl
xlat
cwtl
rcrb
mov
rcrl
mov
pop
out
xchg
in
aam
std
in
inc
mov
mov
ret
pop
cmp
cmp
push
push
imul
jp
xchg
mov
jno
add
lret
sbb
fcom
loopne
stc
xlat
mov
stos
leave
mov
jae
loopne
outsl
and
lods
out
aaa
ret
subb
mov
sub
jmp
sbb
xchg
cmp
stc
sub
pop
ret
pop
aam
mov
fstps
iret
mov
mov
xchg
cmpsb
sub
imul
sub
add
repnz
xlat
stos
jecxz
jno
jg
movsb
aam
out
pop
nop
jnp
int
jg
mov
mov
lea
fwait
clc
mov
daa
mov
jo
or
notl
out
ljmp
je
mov
mov
stos
out
repz
out
xchg
aad
into
mov
sti
repnz
sbb
or
insb
mov
xchg
and
mov
out
xchg
and
push
add
and
cmp
loopne
xor
fldenv
push
cmc
dec
xor
lahf
dec
jge
mov
stos
stos
push
cmp
mov
loop
dec
ja
add
iret
iret
dec
rcl
lea
xor
roll
outsl
imul
out
shll
shll
mov
add
mov
xor
inc
mov
pop
or
lds
mov
push
add
mov
adc
aas
imul
sbb
shrl
lea
xlat
cmc
xchg
mov
cmp
or
xor
imul
jbe
pop
aaa
daa
pop
mov
leave
push
pop
mov
rorb
push
pop
fidivl
inc
bound
sbb
dec
dec
pop
push
push
lods
or
lea
or
cltd
sub
and
pop
rcrb
sbb
shlb
mov
xchg
cli
pop
mov
nop
cltd
dec
xchg
sub
jmp
icebp
gs
cmp
or
test
dec
cmp
or
jns
adc
and
adc
or
fstps
les
inc
es
and
in
sbb
pop
dec
add
lock
dec
js
sub
push
fists
mov
inc
mov
out
enter
dec
cli
or
xchg
xchg
xor
xchg
filds
outsl
shr
neg
outsb
or
fstps
stc
and
inc
dec
jo
aam
dec
insb
xchg
aam
pusha
mov
arpl
xor
pop
pusha
jmp
test
jnp
adc
aam
and
xchg
call
rol
mov
lcall
sub
mov
mov
adc
popl
xor
pop
adcb
mov
and
sub
mov
ss
lds
xor
cwtl
cmc
nop
lods
mov
pop
xchg
and
pop
mov
lcall
mov
outsb
xchg
add
shl
rolb
into
inc
add
or
mov
sbb
imul
push
cmp
test
jmp
cmp
fwait
or
test
mov
adc
mov
cmpsl
std
leave
lahf
sub
and
inc
or
pop
cwtl
mov
call
pushl
push
rclb
fsubs
mov
popf
xchg
mov
xchg
test
inc
adc
lds
imul
push
or
gs
push
popf
lods
push
xor
mov
subl
mov
sarb
pushf
repnz
testb
jg
inc
rorl
xlat
sub
mov
subl
jl
add
push
jp
jge
into
mov
bound
adc
xchg
arpl
push
sub
xor
mov
and
sahf
lahf
scas
jb
xchg
push
cmp
js
mov
pop
popf
push
rcl
mov
out
cwtl
sahf
pop
nop
and
cmp
or
outsb
xchg
scas
sahf
fcmovu
cmp
push
pop
sub
int
sbb
dec
insl
cmp
sbb
enter
lds
sub
test
in
fcmovb
mov
inc
push
div
in
bound
stc
adc
sahf
or
inc
fists
pop
fdivrs
sbb
mov
cmpsl
lret
fwait
xrelease
pop
xor
fdivrl
dec
mov
xchg
rolb
mov
push
out
add
stos
movsl
data16
andl
clc
mov
inc
rcrl
bound
into
cmp
mov
add
pop
test
and
add
dec
pop
sub
adc
mov
nop
and
loopne
enter
leave
hlt
repnz
repz
pusha
push
cltd
insl
std
sar
arpl
and
dec
das
les
rorb
out
hlt
pop
or
movsb
fcoml
das
push
xchg
in
jo
mov
xor
cmc
movsb
xchg
pop
inc
outsb
sbb
dec
jecxz
mov
popa
icebp
jae
adc
adc
mov
add
jmp
mov
mov
mov
push
out
andps
clc
pop
rclb
mov
push
cli
int3
mov
test
cwtl
xchg
sarl
iret
mov
dec
rcll
adc
movsl
shll
sub
dec
test
xor
test
pop
xor
sti
mov
pop
mov
aas
test
je
xchg
aad
jecxz
xor
xchg
xchg
scas
xchg
imul
mov
or
xchg
mov
out
pop
xchg
mov
dec
and
adc
mov
in
dec
mov
and
push
mov
cmpsl
femms
out
fldl
fsts
inc
mov
adc
jecxz
movsb
arpl
sub
pop
sub
sbb
add
sbb
in
xchg
and
sbb
pop
cmp
cmpsb
fs
mov
mov
xchg
mov
aaa
push
shl
outsl
lcall
shlb
stc
xchg
lods
cwtl
xchg
cmpsb
out
mov
and
mov
in
ret
pop
push
or
nop
cli
dec
shll
pop
add
orb
movsb
sub
int
sbb
mov
ss
mov
mov
xchg
pop
sti
adc
js
rsqrtps
dec
mov
xchg
cs
addr16
outsl
mov
adc
pop
mov
mov
loop
pop
pushf
or
cmp
xor
test
mov
pop
mov
loope
jp
hlt
cmp
push
mov
movsl
xchg
push
fdivs
jmp
popa
mov
inc
mov
cmp
daa
xor
popa
pop
inc
mov
mov
cmp
sahf
pushf
cld
mov
bnd
sbb
add
stos
insl
ds
mov
sbb
lahf
xchg
fnstcw
movsl
sub
rcrb
in
clc
jle
iret
popa
insb
pusha
nop
call
arpl
cltd
mov
sbb
sbb
dec
sbb
xor
aas
and
fninit
pop
lret
cmpb
jl
jmp
pop
hlt
mov
stos
sub
cmp
sub
iret
adc
jbe
xchg
xchg
adc
call
xlat
movsl
roll
and
and
push
and
arpl
dec
mov
stc
inc
ret
sub
xchg
mov
cmp
jmp
jnp
mov
mov
jle
insb
stos
mull
repnz
out
std
loop
cli
or
dec
cwtl
arpl
fcomps
test
bound
pop
pushf
fldl
idiv
pop
stc
jno
jae
clc
mov
jns
xor
dec
rolb
cmp
add
pop
pusha
pop
iret
xchg
bound
lret
inc
in
mov
push
dec
pop
mov
jb
adc
fsubrl
fnstcw
rcrl
push
pop
test
sti
push
xchg
and
movsl
push
jl
push
aam
dec
add
mov
mov
ds
sahf
sub
insl
dec
cmp
push
jmp
sbb
cmp
or
popa
ljmp
push
push
lcall
outsb
cmp
cld
movsl
push
sbb
loopne
pop
std
inc
xchg
xchg
mov
xchg
inc
je
dec
inc
dec
aad
xchg
mov
jbe
add
push
cmp
jae
rorb
shll
xor
popa
push
lds
aas
pop
xor
xchg
test
test
jo
push
and
cs
dec
adc
cwtl
test
int
mov
xchg
je
adc
jnp
mulb
adc
divb
cmp
mov
outsb
pop
testb
or
sub
in
push
push
xchg
adc
lret
repnz
add
sbb
fistpll
sbb
fisttpl
cmp
mov
js
xlat
or
push
cmp
inc
mov
mov
cmc
xor
notb
push
adc
push
push
loope
stc
xlat
mov
negb
mov
xchg
sub
js
mov
out
mov
in
adc
mov
sbb
pop
fs
push
ja
push
and
mov
xor
arpl
jne
pop
jmp
and
sub
loop
sub
lret
outsb
ja,pt
xchg
add
push
loopne
xor
sbb
cmpsl
sti
les
decb
sub
enter
pusha
inc
xlat
cmpsb
fs
and
out
adc
cltd
mov
cmp
push
call
jae
xor
push
or
xor
jle
das
loopne
rcrl
rcrl
xchg
sbb
rcrl
xorl
sub
loopne
push
pop
push
push
ss
cmp
or
dec
mov
lahf
xlat
cli
push
pop
dec
cltd
inc
cli
sar
xlat
inc
orl
loope
or
cmpsb
cmp
lcall
adc
jg
mov
or
sti
pslld
pop
and
test
call
mov
jmp
adc
jo
push
data16
ljmp
adc
and
out
mov
or
sub
pusha
lcall
out
xlat
int3
xorl
pop
mov
sar
cmp
inc
dec
adc
test
shlb
rolb
int
mov
lock
hlt
cs
or
int
bound
adc
dec
daa
notl
mov
insl
jb
sbb
hlt
decb
sahf
mov
mov
and
sub
mov
xchg
lret
sarb
cli
cmp
hlt
fdivs
pop
aad
mov
jl
adcl
xchg
mov
cmp
mov
and
fsubl
je
ret
insl
and
pop
jp
sbb
sub
ds
pop
outsl
aaa
stos
jp
xor
mov
in
xor
add
icebp
xor
pushf
jbe
shll
fs
sub
loop
clc
mov
mov
xchg
arpl
jle
mov
cmp
sbb
xchg
je
jle
push
cs
push
add
fidivl
sbb
cmpsb
push
lds
inc
out
xor
jg
into
aaa
out
sbb
rcll
inc
pop
ds
daa
out
iret
data16
fisttpl
mov
inc
repz
in
mov
push
addr16
inc
pop
imul
mov
adc
cld
addb
gs
xchg
stos
sbb
mov
push
pop
mov
lds
adc
popa
out
leave
pop
inc
cmc
dec
outsl
ficoml
pop
cmc
iret
and
or
scas
in
xor
mov
lret
jno
dec
mov
pop
out
cmp
iret
insl
cmp
mov
dec
cmp
sbb
cmp
dec
cmc
arpl
bound
popf
shl
jmp
cmpsl
cmpsl
popa
aam
test
leave
les
es
or
test
mov
lcall
mov
icebp
and
popf
xchg
fs
ret
std
imull
lahf
add
xor
add
cmc
dec
and
int3
enter
in
es
push
popf
push
fs
daa
pop
int3
arpl
loope
test
stc
outsl
lahf
mov
ficomps
loop
mov
push
jecxz
jo
pop
push
iret
hlt
inc
mov
mov
inc
loope
cli
dec
imul
repz
imul
jne
je
cmpsl
mov
dec
cmp
gs
les
les
insl
bound
dec
mov
mov
inc
mov
cmp
cld
repnz
stc
roll
inc
rolb
push
or
dec
sbb
imul
mov
aas
scas
je
mov
imul
movsl
xchg
cmp
out
dec
loop
mov
pop
jmp
xor
pushf
mov
xlat
jo
cltd
mov
push
cwtl
fistpl
cltd
aam
aaa
or
cmpsb
lahf
sti
xor
clc
ds
jbe
mov
sti
jmp
cli
loope
jb
js
mov
jg
add
js
sub
pop
jp
fisttpl
push
in
mov
mov
fadd
aas
arpl
imul
sbbb
mov
push
rcr
lea
stos
imul
imul
lcall
aam
out
lock
cld
gs
push
gs
pop
mull
out
add
sarl
and
inc
mov
imul
movsb
bswap
lret
loopne
leave
cli
cmp
xor
sub
outsb
or
add
sub
xchg
addl
ss
cltd
out
sahf
xchg
fdivrs
into
leave
jmp
lods
push
les
cmp
jnp
xor
repnz
fbstp
std
ficoml
dec
cmpsl
pushf
adc
add
pop
push
add
in
mov
jle
jne
xor
test
xor
jecxz
push
xchg
add
xchg
loopne
cmp
out
roll
pop
fists
sub
mov
lret
testl
iret
or
test
repnz
xchg
imul
pusha
sub
fnstenv
and
rcl
xorb
or
aaa
adcb
push
notb
sub
loope
cmp
adc
mov
das
clc
push
pop
push
mov
mov
pop
or
push
pop
push
inc
mov
xchg
adc
imul
xchg
jl
fs
push
insb
gs
sbb
stos
dec
sbb
or
mov
cld
mov
jbe
xchg
inc
xchg
xchg
fcomp
les
hlt
std
mulb
mov
or
mov
or
outsb
and
and
ret
xor
sub
or
sbb
out
jl
xor
and
adc
jg
cmc
lahf
dec
mov
add
jne
jae
adc
sbb
shrb
cmp
mov
mov
mov
or
in
sbb
not
pop
mov
enter
push
jbe
push
dec
ret
fcmovb
popf
fimuls
sbbb
adc
jp
mov
or
pusha
push
inc
testb
popf
data16
xor
add
jae
xlat
sub
xchg
inc
and
int3
xor
xor
cltd
sti
fmulp
mov
lods
push
lock
add
sbb
jl
jp
ficomps
orb
mov
pushf
into
xchg
jns
vmovntps
fists
dec
aaa
xor
std
push
and
xchg
cmp
sti
jae
ds
dec
mov
jl
inc
fcmovne
fdivp
int
icebp
aaa
mov
and
and
clc
push
rcl
repz
sub
aad
mov
fwait
sub
outsl
shll
lret
std
imul
xorl
sbb
adc
lods
std
xchg
cmp
inc
xor
iret
loopne
mov
sub
cmpl
hlt
roll
inc
jae
mov
arpl
mov
jmp
insb
cs
push
fisubrl
or
in
and
repz
fstpt
dec
lea
push
nop
ds
or
adc
dec
xor
xchg
outsl
xchg
push
loop
imul
std
xorb
fiaddl
sub
push
outsl
xor
sbb
mov
and
or
pop
js
rclb
ja
gs
fwait
or
cltd
mov
rclb
jge
gs
push
fwait
cmp
iret
jle
cld
and
mov
faddl
mov
pop
push
xchg
sbb
test
dec
or
sub
xchg
mov
cmp
add
les
xor
dec
or
jg
mov
jb
gs
stos
push
lods
adc
and
mov
sbb
push
xchg
push
lcall
pop
icebp
fidivrs
push
or
imul
sahf
pop
mov
loopne
lds
ds
lea
sub
clc
cmp
xor
mov
xor
mov
dec
inc
rcrb
test
push
sti
mov
pushw
pushf
stc
fs
int3
mov
jne
adc
cmp
adc
dec
sbb
or
out
aas
cmpsl
xchg
roll
push
rcrb
mov
xor
mov
push
xor
mov
xor
inc
ret
shr
xor
adc
dec
mov
not
mov
jb
adc
stos
xchg
jbe
push
sbb
test
daa
cmp
adc
ret
cmp
dec
mov
xlat
ds
gs
imul
inc
push
stos
jne
mov
cmp
pop
jg
or
lods
mov
out
sbb
add
in
and
adcl
or
or
sbb
enter
rolb
das
shlb
fcoms
pop
leave
jg
loopne
xchg
addr16
bound
xor
clc
and
sbb
mov
sbb
or
fcoml
iret
mov
or
and
es
in
fwait
pop
mov
or
xorb
inc
mov
jp
je
mov
pop
or
rcrl
cmp
add
js
jmp
ss
mov
stos
add
cmpsl
mov
mov
cmp
add
and
mov
scas
mov
mov
or
aad
jo
sbb
std
js
repnz
loope
mov
sub
pop
scas
stos
xchg
xor
enter
and
or
gs
js
sub
scas
imul
bsr
fiadds
lds
or
aad
lret
shlb
imul
xchg
ja,pn
adc
addr16
adc
push
das
cmp
pop
mov
iret
lea
jl
sbb
insb
mov
fidivrl
or
stos
fsubs
xor
xor
dec
fimull
repnz
mov
jle
orb
xor
fsubr
xlat
call
cmp
jl
ret
push
jmp
pop
mov
insl
insb
loop
addl
mov
rcl
nop
mov
jp
push
lcall
test
jbe
je
dec
aam
xor
xchg
sub
mov
aam
adc
jne
scas
pushf
dec
pop
in
aas
out
or
popf
dec
lock
push
lahf
xchg
std
movsl
sub
cmp
rcl
pop
pusha
mov
lret
mov
je
andb
cmpsb
dec
mov
clc
nop
rcll
stos
lcall
enter
out
leave
stos
mov
fcoms
push
sbb
fists
push
cld
pop
ds
out
addr16
ja
mov
dec
dec
hlt
inc
jb
cmpsl
mov
mov
int
inc
or
jecxz
lods
mov
mov
jge
sub
xchg
adc
sub
mov
fnstsw
mov
arpl
outsl
testb
ds
fdiv
xor
lcall
dec
sub
dec
icebp
je
push
sti
xchg
into
clc
cli
pop
sahf
pop
mov
fsubp
add
adc
cmp
push
nop
ds
je
es
lcall
pop
and
mov
into
sti
into
adc
and
mov
lea
mov
sbb
xchg
sbb
pop
roll
les
test
sub
out
ss
stos
adc
sbb
adc
leave
call
inc
gs
dec
stc
mov
and
cmp
int
test
dec
cmpsb
mov
inc
out
cld
adc
data16
arpl
cmpsl
mov
mov
cmp
mov
adc
adc
movsb
popf
ret
dec
dec
aas
iret
or
cs
push
pop
mov
stos
xchg
adc
dec
adc
sbb
call
cmc
jns
loop
data16
pop
movb
ja,pn
or
outsb
pushf
mov
sub
xchg
dec
adcb
xchg
sub
into
sbbl
or
lea
insl
xor
mov
leave
out
in
jp
aas
adc
gs
stos
in
inc
ficomps
xor
add
add
pop
fisubs
pop
jp
aam
fbstp
addb
dec
loopne
sub
test
jb
mov
fcmove
pop
dec
test
pop
es
shrl
xchg
or
push
mov
push
repnz
cli
aaa
dec
aaa
rcrb
mov
pop
adc
pop
cli
mov
mov
js
inc
stos
sahf
mov
jle
bound
or
xchg
bnd
cmp
aad
out
pop
mov
aas
and
mov
cmpsb
mov
and
sbb
rolb
inc
ss
in
lods
jge
lcall
ficompl
add
xchg
mov
and
cmpsl
cmp
aad
andl
inc
mov
rcll
push
cwtl
xchg
in
jnp
lds
inc
xchg
out
filds
fimull
jo
and
sbb
mov
xchg
or
jns
bswap
xchg
fcmovnb
sub
inc
sub
in
lret
or
out
nop
jmp
pusha
out
scas
cmp
cwtl
jmp
loop
mov
lea
push
xchg
ss
ret
xor
fcompl
adc
pop
ror
es
cwtl
das
pop
sub
out
packsswb
lds
add
sbb
or
cs
cmp
mov
mov
inc
mov
pushf
ficomps
push
lret
pop
xchg
insl
icebp
fcompl
std
push
mov
jmp
js
sub
mov
xchg
sti
jbe
insl
xor
adc
mov
fnstsw
pop
cld
sub
pop
sti
call
int
in
push
out
testl
jb
lods
jbe
rep
xchg
add
stos
adc
cmp
fwait
sbb
adc
xchg
fisubl
xchg
push
loop
stos
pusha
xchg
out
adc
fdivrs
in
and
rorb
cltd
pop
idivl
cmc
aaa
and
push
in
sbb
xchg
cmp
xchg
repnz
inc
sub
test
jne
or
push
loop
lods
cmp
repz
lea
sub
jnp
movsb
ret
pushf
test
imul
int
filds
lods
int3
out
cmp
andl
mov
das
roll
insb
xor
das
ja
scas
sub
cmpb
cld
jbe
adc
popa
pushf
mov
jge
cmc
fwait
cmpsl
movsb
add
dec
movsb
pop
sub
mov
xchg
mov
mov
loop
fisttps
std
nop
movsb
subl
cmp
cli
xlat
mov
daa
push
xor
and
push
aaa
sbb
mov
test
jno
sub
add
xor
sbb
jl
gs
shrl
data16
mov
pop
sub
movsb
xchg
mov
dec
dec
xchg
mov
adc
add
sub
or
jne
stc
and
cld
pop
and
mov
xlat
cmpsb
sti
sbb
loopne
mov
pusha
add
mov
out
jecxz
mov
dec
xorb
fadd
mov
pop
into
xor
out
fildl
out
jno
xchg
ret
iret
mov
or
sub
xor
lret
jmp
cmp
mov
jno
dec
push
cltd
xor
ror
sub
shrb
and
sbb
ds
lods
pop
jg
xor
mov
mov
roll
push
shlb
jne
aaa
testl
loop
test
and
jmp
xchg
sbb
push
pop
push
add
sbb
inc
movsl
cmp
sbb
out
push
or
jp
adc
pusha
movsb
push
loope
mov
add
mov
movsl
in
lahf
pop
inc
sbb
cwtl
or
cmp
push
subb
imul
adc
ror
insl
scas
jbe
jno
jmp
xchg
push
mov
inc
ror
frstpm(287
cmp
cs
jne
lods
xor
jge
cmpsl
push
insl
cmp
shlb
std
sti
inc
pop
xor
and
add
lods
fstpl
xor
push
into
imul
add
mov
mov
repnz
adc
shlb
in
das
jb
test
mov
clts
addr16
xor
push
jp
scas
test
loope
inc
cwtl
mov
cmpsb
add
mov
ljmp
cmpsl
or
push
or
popa
cmp
mov
popf
je
mov
xchg
loop
pop
jne
pusha
fnstcw
gs
mov
out
int
dec
or
movsl
lea
repnz
or
iret
xchg
std
cmp
leave
enter
mov
outsb
pop
push
mov
pop
or
shlb
or
icebp
das
jge
and
cmp
incl
aam
jp
pushf
pop
push
mov
jge
cmp
add
push
mov
insb
push
ja
addl
ret
mov
xchg
shrl
xor
test
mov
dec
mov
adcb
xchg
aaa
jecxz
push
pop
jae
add
cmp
xor
fisttps
ss
xor
arpl
adc
pusha
and
xlat
sarb
jo
push
pop
dec
add
xchg
sbb
xor
jg
mov
xchg
mov
and
pop
call
ret
scas
cld
fdivrp
aaa
cwtl
aad
lods
inc
icebp
rolb
std
add
mov
mov
adc
shlb
imul
sub
mov
jo
and
sarb
aaa
dec
mov
popa
imul
inc
fwait
cld
push
mov
inc
out
int3
pop
mov
and
or
cmp
mov
sub
push
pop
or
lret
out
mov
loop
addr16
loope
mov
or
bound
aad
mov
cmpsl
sahf
push
in
mov
pusha
jg
pop
xor
mov
cmp
mov
cltd
sti
inc
push
shlb
lcall
aad
push
cmp
cmp
inc
xchg
iret
mov
jmp
loop
or
leave
pop
daa
xor
or
jb
push
mov
int3
aam
xchg
and
sbb
sbb
mov
add
xor
ret
imul
mov
loope
jno
push
sub
int3
stc
mov
fdivp
push
cmp
lds
je
sub
add
mov
lds
out
jecxz
rorb
mov
imul
inc
andb
je
push
inc
arpl
jg
mov
adc
and
cmc
ds
jb,pt
mov
pop
sbb
js
push
mov
aam
add
adc
insb
mov
lods
or
cmc
mov
and
loopne
mov
mov
xor
pop
jecxz
imul
lds
xor
cmc
sbb
sbb
or
and
and
jo
mov
fcmovb
xchg
rolb
mov
sti
scas
testl
dec
jo
shlb
mov
fadd
insl
test
push
mov
iret
xor
arpl
xlat
pop
fsubrs
jae
arpl
addl
bound
mov
xchg
xchg
int3
sub
sub
jno
push
scas
ljmp
cmp
mov
cwtl
test
dec
inc
xor
fisubs
lods
clc
insb
push
ret
ret
pop
mov
in
cmp
mov
xchg
das
xchg
std
lret
dec
push
push
in
mov
sbb
cwtl
mov
insl
orb
std
sbb
ds
insb
jnp
cli
inc
xor
xor
outsb
lahf
or
bound
add
mov
mov
mov
adc
cmp
imul
testb
sub
push
xlat
mov
outsb
in
arpl
adc
dec
nop
xchg
cmp
test
cli
jns
jae
sbb
and
mov
or
das
sti
and
push
stos
outsb
mov
pop
popf
gs
mov
push
repnz
sub
cmovne
adc
mov
inc
loop
into
jmp
movsb
lods
dec
icebp
mull
sub
pop
jne
mov
push
shrl
leave
dec
rorb
pusha
sub
xor
xchg
ja
mov
pop
leave
mov
pop
mov
fiadds
or
lock
lea
into
mov
and
ret
pop
sti
pop
xor
or
out
nop
stc
xchg
jg
inc
mov
inc
hlt
and
add
lahf
adc
int
movsl
jae
push
xchg
push
icebp
sbb
pop
sar
and
jo
sarl
pop
inc
cmp
pop
cmp
pop
mov
jae
xor
sbb
icebp
xchg
sbb
loopne
or
push
ja
fsubr
mov
add
cmpsb
or
lret
ret
orl
sbb
into
pop
push
ret
cmc
push
jl
jb
push
sbb
stos
call
add
cwtl
aad
out
outsl
ds
mov
in
stc
hlt
push
xchg
out
test
popa
inc
les
repnz
or
inc
or
add
gs
xchg
dec
add
hlt
aas
jne
sub
bound
push
scas
xchg
imul
aaa
mov
push
mov
mov
pop
jg
out
les
lret
daa
stc
lea
fwait
jbe
inc
sbb
insl
pop
in
inc
gs
or
push
fdivs
adc
push
and
mov
dec
imul
cs
ret
movsl
mov
not
xor
lods
jae
mov
sti
xchg
push
mov
mov
cmp
cli
fisubs
sub
mov
mov
inc
push
push
mov
aas
aam
dec
das
sbbb
outsb
jns
stc
jnp
ret
mov
es
stc
pop
push
aad
mov
cmp
push
xchg
or
push
leave
inc
sbb
inc
addr16
jne
ja
and
lret
ror
loop
loopne
pop
imul
sub
cmp
jle
fimuls
aas
ret
pop
clc
std
test
jo
sbbb
mov
aaa
cmc
inc
jecxz
stos
pusha
xlat
or
cmp
cmp
mov
addr16
or
add
cs
lds
push
ss
cli
inc
push
andl
add
push
fdivl
push
adc
addr16
rorb
into
and
adc
jnp
mov
int
mov
test
and
sub
pop
dec
int
cwtl
mov
cmpsb
stos
bound
scas
pop
add
pop
ficomps
cmp
cmp
inc
fnstenv
pop
adcb
pop
push
and
in
fisttps
out
dec
add
and
test
jle
inc
xchg
outsb
cli
stos
xor
ja
dec
xchg
dec
cld
lea
hlt
add
pop
xor
pop
ljmp
pushf
lock
and
sbb
int
sbb
stc
fld
mov
jno
push
mov
pop
mov
fidivs
sbb
xchg
mov
push
je
add
loop
sub
outsb
lret
aaa
cli
lods
cltd
jo
ret
jns
dec
lds
mov
mov
das
std
dec
iret
push
sbb
in
test
test
jbe
call
sbb
lock
fbld
lds
dec
ret
jg
and
and
insl
mov
dec
rcll
in
inc
lret
jns
filds
inc
add
jge
cmp
hlt
aam
xlat
test
cmc
sbb
loope
add
loopne
imul
mov
jo
pop
sbb
pop
cmpsb
or
jb
arpl
mov
push
and
push
inc
sub
fisubs
daa
pop
sub
mov
lret
hlt
inc
data16
adc
lret
pusha
dec
loope
insl
mov
adc
or
fwait
cltd
mov
ljmp
fstp
jnp
dec
repnz
stos
les
repz
sti
mov
add
jne
push
lea
mov
and
jg
popa
outsl
sbb
and
or
fs
int3
mov
jmp
ret
sbb
mov
lret
pusha
popf
shlb
hlt
jno
push
out
xchg
cltd
mov
pop
or
push
pop
inc
sbb
sub
lock
popf
push
sub
add
push
sbb
lods
and
test
stos
mov
adc
shl
xor
and
or
sbb
cld
jp
das
leave
or
enter
sub
mov
popf
fs
jmp
inc
adc
or
and
cmp
js
mov
push
xor
pushf
jbe
inc
stos
mov
dec
push
into
int
mov
in
dec
sahf
cmp
jp
cli
pop
in
xchg
inc
iret
js
int
inc
je
add
cmpsb
xchg
in
cli
cmp
pop
aas
scas
insl
and
subl
js
mov
cwtl
sbb
inc
scas
pop
push
push
pop
inc
ret
movsb
sub
lods
add
push
or
movsl
ficoml
push
push
or
dec
xchg
cmpsb
or
sahf
mov
xor
mov
dec
adc
bound
jg
mov
dec
test
add
idivb
cmpsl
sahf
add
cmpsl
lahf
xor
push
mov
dec
loopne
sbb
jno
int3
sub
sbb
bnd
fwait
xor
xor
dec
inc
jmp
sub
jne
subl
xor
test
cwtl
andl
pop
test
in
mov
in
shlb
push
lods
inc
jge
push
fidivrl
inc
hlt
ja
and
xor
adc
or
push
inc
xor
xor
mov
stos
fstl
xorl
mov
nop
dec
in
inc
test
gs
aaa
cmp
iret
fistpll
inc
dec
cli
dec
std
and
insb
jge
or
pusha
sti
mov
xor
mov
popf
test
leave
jl
xchg
and
push
in
jecxz
fimuls
xlat
xor
xor
out
or
lret
cld
js
mov
std
lret
sbb
mov
ret
lock
xchg
cmp
cmp
dec
loopne
add
les
fld
inc
push
movsl
xor
lretw
call
jne
pop
aaa
bound
add
and
into
or
inc
pop
in
dec
inc
xchg
jae
xchg
xor
jl
mov
push
inc
sbb
jecxz
sbb
pop
pop
popf
mov
sub
and
jl
mov
dec
lock
mov
push
shrb
adcb
mov
push
cmp
mov
call
imul
bound
cmpsl
adc
arpl
mov
popa
cltd
int
pop
mov
sbb
std
mov
std
orl
aas
fidivs
fimuls
mov
pop
arpl
sub
fwait
inc
in
add
loope
mov
xor
ret
cmp
outsb
sahf
stc
dec
loopne
xchg
test
push
movsb
icebp
sub
xchg
fdivrp
movsb
out
aas
leave
aaa
outsl
mov
shlb
ds
fbstp
jne
mov
scas
xor
test
xchg
je
jp
fidivrs
mov
out
int
imul
xchg
lea
sbb
rcl
add
dec
jno
addl
call
pop
out
fcomps
insb
cmpsl
lret
out
dec
insb
movsb
jmp
push
or
pop
out
arpl
pop
cmp
pop
cmp
cmp
loopne
lahf
xchg
imul
and
or
je
sub
ss
call
cwtl
mov
shll
dec
xor
sub
push
sahf
mov
int3
movsb
ret
mov
das
jbe
jp
mov
mov
in
or
sahf
scas
imul
xchg
fidivrs
lahf
cmovo
pop
ds
scas
xchg
dec
les
mov
jo
loopne
mov
stc
push
test
push
add
aas
leave
mov
aad
movsb
cwtl
aaa
jge
jg
adc
insb
lret
mov
xchg
lea
test
mov
jne
adc
adc
mov
out
adc
out
adc
add
mov
push
mov
leave
repnz
loopne
push
mov
xor
in
inc
mov
push
lret
sbb
stos
pop
push
iret
mov
and
ds
inc
mov
sbb
mov
dec
or
lret
inc
jno
xor
shrb
mov
and
adc
in
test
out
push
cmp
mov
pushf
add
mov
dec
bound
cmp
loopne
push
out
fs
fcmovne
mov
shll
fnstsw
insb
xlat
xor
push
xor
ret
adc
jg
imul
mov
scas
stos
test
cwtl
mov
and
ss
mov
push
dec
fidivl
mov
lods
js
jno,pn
sub
sub
icebp
rcrl
fldcw
cld
push
rcll
xor
mov
scas
jmp
lock
nop
push
pop
out
pop
push
fdivrs
cmp
loopne
cltd
data16
gs
dec
add
es
stos
es
sub
mov
add
jne
lcall
scas
das
addl
mov
jne
test
or
sti
adc
add
jmp
mov
out
mov
jg
and
cli
push
jne
xchg
pop
stos
xchg
inc
adc
adc
or
jmp
push
sbb
enter
mov
into
filds
dec
loop
pop
out
fbstp
xchg
leave
in
mov
jnp
clc
mov
and
cld
fdivl
repnz
loopne
mov
pop
dec
inc
push
rorl
inc
sarl
push
cld
jns
outsb
cwtl
inc
lods
mov
and
jns
push
add
data16
and
mov
lods
sub
sbb
xor
or
int3
jg
xor
cmp
push
pop
mov
shll
out
std
insl
add
xor
cmp
stc
loop
pop
mov
xor
jecxz
push
cmc
push
aas
cmp
rolb
sub
xchg
imul
dec
cmc
fmul
shl
clc
movsb
stos
stos
mov
pop
pop
inc
add
cmpsl
mov
fwait
sbbb
lods
xchg
sub
test
adc
sub
je
pop
shl
testl
sbb
sbb
test
into
ds
dec
xchg
inc
fs
bound
inc
sti
pop
push
jmp
out
sarl
jb
mov
inc
ds
sbb
cmp
mov
jge
sbbl
inc
out
add
fcmovu
clc
mov
cmpb
adc
stos
sbb
dec
stos
push
mov
out
les
mov
hlt
sbb
leave
and
lcall
outsl
scas
jecxz
and
cs
lret
cmpsb
into
fidivl
rcll
mov
xchg
cld
icebp
sbb
cmpsl
pop
pusha
shrl
cmp
jp
xchg
sub
inc
jnp
fimuls
mov
cmp
adc
aaa
jo
xchg
popa
clc
jecxz
fldt
es
cmp
sub
fsubrl
push
test
dec
dec
lahf
mov
jmp
inc
or
push
jp
jo
dec
call
int
fidivl
cwtl
sbb
mov
std
xchg
fwait
mov
cwtl
and
lods
fdivrs
shlb
movb
repz
mov
mov
bound
xor
arpl
mov
idivl
cmp
outsl
jmp
in
ret
cmp
ljmp
fcmovb
mov
push
xor
icebp
js
pop
push
mov
int
loop
imul
xchg
xchg
sub
outsl
and
cmc
ja
add
rcll
js
out
sub
mov
push
jo
lods
cltd
clc
pop
int3
imul
cmp
lods
outsb
aam
inc
mov
mov
xor
test
add
in
cld
fstps
inc
push
and
imul
dec
sbb
jl
gs
in
in
imul
jmp
pop
call
push
xchg
xchg
jle
add
lret
out
mov
or
dec
mov
mov
and
dec
cmc
inc
mov
pushf
fisttpl
loope
push
push
cmp
push
jge
inc
dec
leave
dec
loope
fcomip
push
fwait
inc
add
jnp
out
inc
addr16
fnstenv
push
pop
xchg
ret
push
adc
pop
outsl
mov
adc
fadd
sbb
inc
mull
in
mov
fidivrs
in
xor
sahf
xor
dec
xchg
ds
lds
lods
mov
dec
mov
lcall
sub
jno
xchg
inc
sub
inc
jbe
sub
cmc
jnp
adc
aaa
push
testl
sarl
sub
test
and
dec
in
sbb
xchg
std
aas
jmp
inc
call
lahf
pusha
add
and
call
in
out
lret
in
lods
inc
adc
pop
sub
sub
cmc
ficompl
ret
dec
sete
enter
mov
lea
pop
movsl
xor
push
pusha
dec
adc
ss
lods
ss
aaa
sub
adc
je
jl
arpl
idivl
jg
jno
leave
mov
andb
mov
pop
stc
rorl
jne
dec
loope
jo
in
scas
sub
sub
out
in
addl
xor
mov
std
ret
outsl
push
mov
pop
cli
nop
pop
imul
icebp
nop
out
notl
pusha
stc
add
pop
inc
sbb
mov
popf
incb
lods
gs
adc
ret
cld
cmp
jecxz
adc
cmp
jl
add
or
lock
icebp
jecxz
or
mov
xchg
rclb
sub
jle
cmpb
pop
out
xlat
mov
and
mov
icebp
lea
shlb
add
or
das
ficoms
fincstp
cmp
ret
ss
hlt
sub
or
xchg
sti
xchg
mov
mov
shlb
negb
shll
je
push
icebp
test
sbb
cmp
stos
sbb
mov
mov
ds
out
mov
jge
stc
push
xor
mov
std
out
inc
aam
test
pusha
sbb
jg
mov
test
sub
dec
addl
jl
sahf
mov
stos
sub
aas
add
pushf
dec
push
sub
cmp
loop
arpl
fldcw
push
in
cmp
ss
dec
mov
jno
and
loope
inc
fcompl
das
lods
sbb
pop
xor
lahf
cltd
mov
mov
push
jmp
xor
mov
enter
les
pop
cmpsb
push
scas
jne
rcl
aad
lods
scas
popa
roll
push
daa
pop
cmp
pop
xor
jno
mov
push
out
outsl
cmp
std
xchg
aam
mov
int3
insb
into
test
repnz
jae
lret
mov
mov
mov
lahf
mov
or
ljmp
gs
inc
xor
std
inc
mov
dec
push
inc
dec
push
xchg
cld
mov
sub
jecxz
jne
js
lret
mov
cmpsl
jnp
cli
push
xlat
mov
mov
rclb
add
and
sub
lock
jmp
adc
mov
fstpt
mov
xor
enter
lahf
mov
add
mov
pop
dec
pop
aad
mov
popf
lods
and
std
pop
jbe
mov
cmpsl
movsl
in
sbb
lock
ss
sub
call
mov
divb
aaa
xor
cmpb
pop
push
faddl
aam
pop
cwtl
aad
sub
enter
out
int3
add
pop
dec
mov
pop
inc
dec
sbbl
sets
subl
sbb
pop
inc
mov
adc
nop
dec
iret
shlb
ror
cmc
mov
loope
xchg
pop
neg
xor
out
andl
xor
arpl
adc
cmp
mov
and
dec
adc
loop
mov
popf
in
or
das
and
outsb
mov
js
imul
push
push
jnp
adc
jb
in
mov
leave
push
ds
js
int
sbbl
repnz
scas
and
sbb
or
in
ret
cs
push
or
test
and
xor
out
dec
int3
xchg
movb
std
push
inc
add
sbb
cli
cmp
cmp
sti
and
dec
pop
push
lods
out
in
mov
pop
test
ljmp
out
mov
dec
sub
add
mov
mov
fdivp
push
mov
int3
shll
mov
fisubrl
inc
inc
ret
shl
cltd
rcrb
fnstcw
ljmp
out
push
inc
add
push
ret
repz
imul
pop
lret
fdivp
xor
sti
add
sub
nop
push
ret
mov
imul
mov
jp
mov
adc
insb
mov
dec
pop
mov
repnz
mov
js
test
pop
jmp
and
out
jmp
icebp
sub
psrld
mov
in
jno
xchg
mov
sbb
test
xor
jo
mov
aad
sbb
push
adc
mov
adc
dec
fisttpll
xchg
sub
xchg
and
mov
xchg
inc
and
xor
je
sbb
mov
inc
push
xor
adc
xlat
jmp
sbb
hlt
outsb
lahf
test
pop
or
scas
adc
mov
xor
addb
mov
sbb
sti
pop
or
imul
xor
clc
dec
mov
jle
jbe
push
out
loope
int
lret
cwtl
pop
push
push
pop
mov
add
mov
xchg
loope
hlt
push
stos
enter
mov
or
mov
mov
adc
in
xchg
or
or
pop
test
lds
inc
cld
xor
inc
fwait
pop
fisubrl
add
pop
repz
jns
xor
mov
das
dec
out
out
fsubs
sti
hlt
mov
es
xorl
adc
lods
shlb
dec
lea
dec
incb
mov
lds
ret
lods
sahf
rsqrtps
test
cmp
pushf
int
clc
add
sbb
or
sub
pop
addr16
xor
cmpb
or
popf
mov
cmp
insl
or
in
lcall
adc
loopne
mov
movl
faddl
adc
xchg
add
cmp
mov
mov
inc
repz
jmp
fdivrs
decl
push
movsl
mov
aas
les
add
pop
movsb
dec
cmp
inc
inc
pop
std
pop
push
fcmovnb
ljmp
sbb
mov
or
jb
lods
pop
andb
jle
xchg
or
mov
add
outsl
popf
lret
xchg
adc
fsubrp
je
push
add
loope
dec
xchg
and
daa
pop
pushf
inc
mov
out
js
lcall
cmp
push
push
mov
fs
movsb
xor
push
push
movsl
push
js
movsb
ret
jle
mov
jg
std
push
mov
daa
jmp
push
jbe
mov
cs
dec
jmp
mov
insl
lods
shll
xchg
in
and
inc
cmp
inc
xor
movsl
filds
cmp
mov
aad
and
ja
adc
shl
push
jl
repnz
xor
pop
mov
sbb
cltd
xor
addb
xchg
cmp
cmpb
stos
adc
cld
jg
xchg
nop
adc
inc
scas
add
lods
int
or
and
icebp
out
ljmp
cli
sahf
movsb
or
push
pop
inc
movsl
jmp
inc
jle
sub
cmp
insb
cmpsb
jae
adc
pop
int3
pop
adc
inc
push
outsb
adc
inc
xchg
cmc
jbe,pt
loope
loope
inc
mov
bound
pop
cmpsl
mov
xchg
and
int3
sub
cmp
fidivl
cli
shlb
sbb
lret
add
and
jmp
addr16
inc
pop
inc
xor
push
pop
test
dec
hlt
daa
adc
mov
mov
xor
inc
jnp
jae
lahf
inc
jo
or
test
cld
test
mov
cmp
movsl
push
mov
aam
test
mulb
or
mov
mov
push
pop
inc
sbb
cmpsl
imul
adc
lods
pusha
push
movsl
data16
lea
add
bound
xchg
dec
aas
sbb
fwait
jecxz
fbstp
sbb
aaa
movsl
fs
cmp
dec
sbb
or
aaa
xor
push
inc
cltd
inc
mov
sub
lods
inc
mov
or
mov
pop
dec
arpl
xor
mov
mov
in
xor
inc
adc
in
and
insb
dec
jmp
test
and
int3
pop
inc
inc
out
dec
fwait
int3
lret
clc
loop
jp
lds
or
and
inc
xor
les
push
rorb
sub
sub
jnp
enter
cmp
inc
in
xchg
add
pop
js
movzwl
mov
in
inc
repz
or
sarb
jmp
push
add
int
daa
lods
int3
push
fimull
xor
andl
sbb
dec
je
sbb
xor
and
stos
stos
outsb
subl
xor
sub
lods
movsb
aam
jmp
jmp
sarb
lret
sbb
fldcw
cmc
and
xor
push
imul
inc
or
arpl
dec
dec
adc
hlt
and
cli
out
add
jno
sbb
add
adc
test
and
xlat
jecxz
adc
jge
xchg
xchg
divb
out
xor
pusha
inc
sub
add
pop
and
jns
out
repnz
lock
add
sbb
push
ja
mov
jns
inc
popf
push
inc
shrl
push
xchg
sbb
dec
xchg
cld
movl
push
test
mov
dec
inc
mov
lret
shlb
nop
push
xchg
push
add
in
mov
sub
out
fucom
repnz
insb
sub
xor
movsl
loopne
jecxz
stos
scas
in
and
xlat
dec
jmp
lods
cmpsl
stc
push
xor
gs
clc
daa
xor
push
add
jecxz
je
aas
push
inc
imul
pushf
gs
and
pop
fcmovne
sbbl
clc
xorb
dec
push
cmpsb
adc
add
movsl
test
jb
in
pop
stos
cs
idiv
add
jmp
sub
sbb
sbb
mov
pop
jo
movsl
fimuls
das
inc
mov
push
lcall
sub
dec
enter
lret
nop
sbb
mov
dec
pop
jo
rol
mov
cld
push
aaa
jl
ss
mov
xor
pop
scas
ftst
test
sbb
adc
push
clc
mov
mov
shll
pop
loope
pop
xlat
jle
xchg
sarl
dec
popa
fwait
xchg
cltd
xchg
pop
hlt
jbe
icebp
and
sahf
popf
pop
out
jbe
sub
push
or
adc
mov
push
outsl
mov
add
cmp
fs
xchg
mov
pop
leave
aas
inc
cmp
fsubr
aas
cs
call
cltd
ret
cmpl
push
cmp
les
les
push
cmp
es
inc
mov
push
adcb
fcoms
sub
leave
stos
push
lods
fwait
sbb
in
and
in
mov
mov
add
rcll
fdivs
jg
mov
xor
int3
fdivrs
cmp
rcrl
or
push
aam
mov
adc
inc
push
int3
and
leave
nop
and
and
inc
in
cmp
iret
xchg
mov
leave
mull
sub
fidivrl
stc
xor
lds
push
pushf
cs
mov
fisttpll
xor
es
push
rclb
mov
std
cmpsb
shrb
inc
dec
push
repnz
inc
pop
add
mov
out
jo
mov
xchg
mov
and
mov
faddp
sbb
push
iret
je
xchg
push
in
sub
sbb
pop
outsb
ja
pusha
lcall
or
mov
adc
ss
movsl
iret
inc
and
mov
xor
cmp
fsts
add
xor
pop
out
jg
jae
pop
jmp
pop
sahf
cmp
imull
mov
xchg
lods
xor
repz
adc
mov
stos
sbb
pop
pop
lret
arpl
pop
jns
loopne
push
out
and
repnz
sbb
pop
aad
bound
aas
xor
sahf
cmpsl
popa
push
jb
push
nop
lds
aad
add
mov
bound
aam
bnd
push
jp
inc
mov
outsb
aas
scas
or
addr16
sub
jmp
push
aaa
cld
cmp
gs
sahf
lock
enter
aam
add
mov
repnz
add
and
sbb
stos
arpl
and
sbb
pushf
fidivrs
in
xchg
mov
data16
push
clc
stos
cmp
cmpsl
movsb
sti
jl
test
cmpsl
jae
mulb
in
cwtl
lods
enter
daa
or
lods
pop
incl
es
adc
push
fs
aas
inc
mov
xchg
ja
outsl
or
mov
mov
jge
imul
pop
lods
jne
xchg
out
test
shll
mov
inc
xchg
jno
sahf
xor
shll
mov
hlt
push
mov
aas
ret
movsb
negl
jae
add
ljmp
data16
jecxz
mov
fimull
stos
mov
and
jns
xchg
xchg
repnz
add
sub
ret
out
lcall
adc
or
xor
xchg
jo
cs
shlb
cwtl
sub
in
jbe
add
mov
int
xchg
jg
movsl
and
lods
sbb
pop
int3
aad
in
push
popf
or
clc
pop
test
call
or
pop
sbb
popf
cmpl
inc
insl
ret
xchg
lret
enter
in
movsl
cld
pop
jne
fisubrs
imul
aam
and
sbb
popa
dec
dec
sub
je
and
jns
je
mov
popf
test
sarb
movsl
scas
in
mov
setbe
jmp
fidivrs
repz
lret
lods
adc
testb
mov
sbb
stos
mov
and
scas
mov
aaa
ret
xchg
push
int
and
jb
out
pop
pushf
lret
fcmovnu
fs
inc
xor
icebp
lds
loop
pop
adc
add
addr16
mov
movsl
mov
mov
xchg
ret
loope
or
push
in
repz
lahf
lods
xchg
jmp
sbb
inc
cmpsb
xor
cli
jecxz
popf
push
or
fidivs
inc
adc
ret
fnstsw
popf
sbb
in
dec
jno
jmp
or
add
xchg
scas
fsubs
inc
fwait
push
mov
aam
xor
add
lret
xchg
sub
pop
jmp
or
je
pop
sbb
stos
repnz
rolb
mov
das
pusha
xchg
popa
movsl
cmc
imul
add
test
imul
sbb
lods
cwtl
cmp
into
mov
adc
mov
pop
cmpsb
jno
insb
sti
mov
imul
mov
inc
xchg
mov
enter
and
sbb
pop
push
fimull
lods
stos
pop
xor
sbb
rcrl
add
movsl
jnp
fcmovne
leave
pop
in
adc
mov
out
inc
push
fiaddl
int3
aaa
fdivs
or
cmp
mov
pushf
loopne
pop
cmp
mov
mov
xor
fdivr
das
jns
test
repnz
jo
fidivrl
push
pop
ss
xchg
icebp
out
out
inc
out
shrl
fsubs
adc
sub
aad
fldl
xchg
scas
mov
cld
mov
and
scas
ffreep
imul
les
mov
out
pop
mov
mov
call
sub
out
add
jnp
mov
mov
into
fmul
les
mov
roll
pop
cmc
sub
xor
or
mov
insl
sub
adc
sbb
lret
iret
inc
in
mov
push
pop
adc
lahf
mov
sub
rcrb
in
push
cmc
in
push
add
scas
fistpl
mov
mov
mov
bound
mov
and
pop
add
repnz
mov
mov
inc
sbbb
in
adc
mov
insl
push
sub
xor
dec
inc
xchg
xor
jmp
xchg
and
fcomi
push
lahf
data16
push
popa
ret
dec
ljmp
adc
push
push
pop
mov
sahf
push
in
add
sahf
hlt
ret
popf
or
fnstenv
pop
add
push
outsl
mov
mov
add
mov
or
mov
lret
bound
bound
les
loop
sarb
sub
sbb
pushf
xchg
pop
movsb
xchg
push
pop
call
int
or
cmc
or
stc
sahf
sub
dec
mull
jg
mov
add
mov
push
xor
cwtl
mov
scas
std
inc
and
push
mov
xchg
dec
lret
je
fs
dec
add
cmp
sbb
inc
bnd
sbb
sti
es
jmp
xor
xchg
lea
xchg
fisttps
xchg
int3
fs
shl
cmc
icebp
shl
inc
mov
dec
call
push
cs
jns
out
push
fwait
mov
push
cmp
adc
fisubs
cmp
mov
loop
inc
xor
sub
scas
ds
das
sub
repz
testb
dec
and
imul
xchg
xchg
je
sarl
sarl
aaa
imul
cmp
dec
mov
dec
pop
aad
sbb
push
jno
adc
mov
aas
addb
inc
push
bound
je
or
ljmp
xchg
loop
cmovp
testb
mov
jno
negb
jge
aas
je
sbb
and
pop
add
push
sbb
mov
add
outsl
pop
jp
sbb
ljmp
mov
loope
mov
mov
mov
add
shrl
add
push
cmpsb
push
movsb
lock
repz
rol
inc
je
fildl
dec
sub
cmp
scas
push
mov
sbb
test
sub
out
andb
jno
test
jg
lahf
pushw
mov
inc
xchg
rcr
pop
sub
fimuls
mov
fcmovnbe
daa
jbe
fs
push
movsl
inc
mov
mov
push
into
dec
adc
stc
not
rcl
jne
mov
mov
mov
gs
mov
mov
imul
mov
mov
xor
jge
or
out
stc
fstps
addr16
or
fistpl
mov
jb
test
jns
lea
mov
dec
sbb
loop
fadds
test
sbb
fbstp
mov
mov
adc
scas
add
lret
imul
fldt
jl
cmp
out
push
test
dec
iret
pop
sbb
add
pop
xchg
push
mov
dec
push
pop
fildl
rorl
mov
in
lret
lods
sbb
xchg
cwtl
mov
insl
sub
aad
sub
jge
xor
lods
repz
sbb
sti
cwtl
pusha
cld
mov
or
test
inc
ljmp
cld
and
lahf
or
rcrl
add
call
outsb
mov
popa
insl
outsl
mov
or
pushf
cwtl
xchg
cmpsb
mov
xchg
call
dec
pop
push
xchg
xorb
test
test
xchg
lahf
loope
push
js
add
arpl
mov
lods
adc
push
jae
fstps
inc
adc
inc
ficoms
inc
outsl
mov
pop
jmp
sub
js
repnz
and
std
scas
aam
and
add
mov
icebp
xchg
and
aad
or
cltd
xchg
dec
jge
dec
mov
popl
sar
cmp
stc
push
dec
ror
fwait
dec
jns
lcall
ds
mov
push
mov
aam
fsubp
fistps
cli
sub
in
jnp
xor
lea
ljmp
lahf
out
mov
jge
movsl
push
movsl
test
pushf
loope
test
xor
jmp
outsl
fcomps
jae
mov
mov
sub
fcom
shlb
sbbb
cmpsb
jno
call
cmp
jl
xchg
cmc
sbbb
push
dec
int
das
cld
cmp
sub
pop
nop
fidivs
out
mov
js
arpl
inc
ss
jmp
jp
mulb
jns
loopne
cmpsl
gs
and
pop
mov
jmp
lea
jmp
pop
in
jg
insb
push
stos
or
dec
adc
push
mov
push
adc
cli
pusha
push
test
push
xor
pop
leave
mov
mov
push
add
sub
xchg
jl
scas
sbb
sub
aas
fnstenv
call
ror
sbb
jmp
pop
inc
int
push
mov
jb
adc
sub
inc
ljmp
cmp
xor
sbb
jno
rclb
ret
or
jne
or
out
lods
sahf
mov
daa
xchg
and
dec
jmp
cli
call
sbb
jno
adc
jne
or
push
adc
push
sahf
aam
mov
test
jmp
icebp
mov
fdivrp
mov
hlt
shll
xchg
aam
out
fs
xor
inc
aad
or
aam
inc
fstl
fs
jle
insb
pop
in
jge
or
fisubs
dec
int
adc
loope
pop
pop
push
test
adcl
sbb
jne
in
mov
jnp
push
test
sbb
addr16
dec
enter
fldt
or
outsb
das
enter
jnp
mov
rclb
les
fnstenv
mov
push
mov
loopne
ljmp
out
lahf
jle
test
push
adc
outsl
sub
lds
repnz
movb
ss
fadd
mov
fs
lcall
hlt
stc
popf
inc
add
cmp
int3
adcl
pop
push
subb
fistpll
je
mov
in
mov
incb
inc
push
adc
in
jg
xchg
fwait
loopne
push
push
loop
adc
es
sub
inc
push
cltd
int3
pushf
push
push
inc
adc
mov
ret
push
das
pop
mov
idivb
jns
lds
xor
out
jb
or
dec
mov
cmp
ret
xchg
inc
into
sub
jl
stc
les
or
mov
rcrb
and
mov
mov
cwtl
mov
mov
pop
sub
in
mov
xorl
popl
outsb
cmp
test
mov
cltd
push
push
sub
mov
cmp
enter
test
shrl
in
push
mov
mov
mov
in
nop
inc
mov
cwtl
sub
es
aad
cld
xor
pop
add
shrb
movsl
je
mov
cmp
mov
or
mov
inc
fimull
push
or
lret
sarl
mov
into
das
cmpsb
cmp
xor
push
movsl
xchg
sbb
call
jb
and
sbb
shlb
xor
stc
daa
mov
aaa
inc
xchg
scas
lcall
cmpl
xchg
cmovb
sub
nop
bound
repz
xor
jne
imul
mov
andb
pop
lcall
int3
hlt
jg
outsl
movsl
add
push
cld
sub
dec
xlat
out
ret
push
lock
push
stc
dec
push
shrl
stos
out
popa
and
pushf
and
adc
hlt
jno
push
jecxz
mov
and
gs
nop
imul
push
pusha
mov
sbb
cmc
jecxz
cmp
add
add
sub
nop
hlt
mov
cmpb
jge
loopne
notl
or
fidivrl
daa
xchg
dec
bound
and
jp
mov
pop
inc
insl
mov
sti
pusha
jbe
cmpsb
lods
rcl
jb
pop
mov
jge
rclb
fiaddl
cli
xor
jp
fistps
subb
mov
popa
fs
flds
cltd
mov
sub
daa
or
or
inc
xchg
popf
nop
insl
sub
sbb
insl
or
inc
push
mov
xchg
loopne
adc
mov
int3
outsl
pop
repnz
out
sub
xchg
xchg
inc
loope
sbb
xor
les
cmc
mov
mov
adcb
movb
inc
ss
stc
nop
sub
pop
xor
mov
xchg
mov
out
subl
push
mov
xchg
push
shlb
sti
and
jae
add
addr16
nop
aas
pop
push
sbb
into
add
sbb
gs
mov
sub
push
sub
dec
or
daa
sub
fwait
stos
gs
loope
or
xchg
jg
out
inc
sti
testb
insb
cmp
mov
pop
repnz
and
mov
cwtl
adc
xchg
imul
repnz
adc
fninit
add
jbe
ret
out
popf
mov
call
pop
inc
imul
insb
fwait
sub
pop
or
es
popf
adc
imul
xor
push
das
xchg
aas
mov
pop
mov
sahf
pop
xchg
mov
into
xchg
mov
pusha
or
mov
lds
jb
ljmp
lahf
adc
push
pushf
jae
xor
repz
out
inc
leave
ljmp
cmp
or
sbb
cwtl
jmp
call
add
ljmp
lret
and
ja
push
ret
scas
pop
pop
push
repnz
bound
cs
daa
cmp
sahf
das
test
flds
push
rolb
add
pusha
dec
push
add
imul
add
pop
adc
data16
dec
or
imull
mov
cmp
push
out
sub
lods
rcrb
call
xor
mov
xor
pop
gs
test
int
arpl
adc
inc
adc
mov
sbb
fildll
add
enter
lock
push
push
jmp
push
xchg
sbb
mov
aaa
les
sub
and
inc
sti
adc
pop
cmp
lret
shrl
add
lret
add
dec
ficoms
dec
sarl
xlat
jg
pop
stos
or
jl
mov
jo
push
push
add
adc
mov
xor
test
fs
mov
out
push
cmc
and
jg
das
mov
add
pusha
lods
inc
test
inc
jns
sahf
and
pop
lods
mov
pop
loopne
pop
lds
mov
xchg
adc
ret
pop
mov
icebp
xchg
lahf
xchg
ds
push
loopne
push
xlat
dec
xor
pop
sbb
mov
fbstp
cwtl
lahf
cwtl
insb
xchg
xchg
mov
mov
cmp
cmpsl
mov
push
stos
cltd
out
imul
loop
hlt
mov
mov
call
in
sub
xchg
rcr
push
push
nop
aad
cmc
and
ljmp
mov
ja
jae
out
dec
jp
movsl
shrd
sbb
pop
mulb
jge
popf
sub
push
das
popf
outsb
fdivrs
adc
pop
ja
cltd
stos
push
nop
scas
dec
push
lret
xor
and
shll
fistps
sarl
or
pop
dec
or
shll
dec
add
pop
shl
cmp
and
mov
sti
pop
pop
imul
adc
cltd
add
mov
daa
dec
push
cmc
fildll
imul
pop
or
push
and
xor
pop
icebp
fs
lods
lods
jle
lds
pop
mov
fldl2e
inc
or
mov
xchg
fidivl
add
or
fwait
xchg
jp
xchg
mov
test
push
pop
mov
xchg
js
ret
fcoms
in
push
bound
adcl
arpl
and
push
inc
xor
mov
imul
mov
and
push
pop
dec
out
xor
fcom
and
jle
jne
shr
outsl
pop
mov
int
frstor
push
mov
stos
cmpsb
scas
stos
xor
pop
mov
mov
fdivrl
inc
xor
ds
bound
xor
push
and
popa
jbe
adcb
mov
pop
sbb
sbb
int3
pop
inc
lea
sti
jge
out
mov
in
xor
inc
int3
aas
and
lahf
pop
sahf
aad
pusha
dec
mov
std
outsb
mov
lods
sti
shll
ret
cmp
loope
sub
lahf
push
xor
ret
and
inc
push
push
pop
sub
repnz
gs
xchg
incl
aas
ficoms
xor
push
mov
xor
cltd
xor
inc
mov
pop
mov
jb
inc
xchg
sbb
out
sub
fmulp
mov
sub
ss
pop
mov
ret
inc
pop
mov
sti
rcrb
fs
jmp
xchg
adc
es
add
mov
out
inc
sub
imul
xchg
aam
inc
xor
push
jo
scas
mov
mov
addr16
ror
xchg
lods
dec
mov
add
stos
fidivrs
xchg
shl
enter
pop
es
mov
cmp
pop
xchg
std
push
test
push
sbbb
ss
sbb
cmp
mov
in
repnz
xor
rorb
adc
scas
cmp
sbb
imul
add
and
mov
add
sahf
push
scas
and
shrb
aaa
adc
cmc
rorb
cmpsb
out
mov
inc
into
adc
push
jle
adc
push
xor
push
lds
pop
mov
and
and
mov
pop
mov
in
fs
mov
loopne
rcr
cs
jecxz
mov
mov
inc
mov
cmp
or
stc
jge
cmp
cmp
push
sbb
or
add
push
int
sbb
out
movsl
jmp
xchg
lock
mov
pslld
fs
jno
dec
jne
inc
incb
dec
mov
and
int3
mov
and
mov
push
or
aad
aas
jo
xchg
dec
mov
ret
lods
pop
push
lods
fcmovbe
data16
cs
jbe
adc
and
cmp
insb
cmp
iret
sub
xchg
inc
in
out
insl
lea
idiv
push
or
les
mov
leave
push
pop
das
or
mov
xchg
mov
push
and
xchg
sbb
jb
scas
mov
nop
push
jl
cmp
clc
xlat
popa
ret
ljmp
mov
dec
cmc
pusha
jecxz
jmp
jne
fdivl
dec
iret
movsb
aad
pop
popf
jb
fbstp
roll
adc
les
movsb
pusha
inc
in
sbb
ficomps
jecxz
lods
mov
dec
pushf
or
jae
push
push
mov
repnz
clc
or
adc
push
mov
pop
xor
inc
and
mov
in
mov
stos
cmp
divb
icebp
cli
add
sub
sbb
or
movsb
adc
popf
jg
es
mov
and
scas
cmp
xchg
sbb
movsl
mov
loope
mov
cmp
and
xlat
lock
call
push
mov
daa
scas
push
sbb
and
adc
addb
mov
outsl
fdivl
in
clc
pop
in
push
popf
fs
dec
and
sub
cmp
ret
push
mov
mov
lock
and
xchg
loopne
and
mov
movsl
fxam
mov
xor
out
cs
and
lahf
jo
or
push
push
mov
gs
test
or
mov
xchg
ljmp
cmc
push
cmp
in
call
dec
pop
or
ljmp
data16
add
pop
mov
sahf
mov
and
testb
cmp
or
repnz
add
xor
xchg
fiaddl
and
lahf
movsl
div
jb
jp
cmp
movsl
xchg
mov
pop
hlt
sub
sbb
out
push
and
fldl2t
je
jl
mov
pop
mov
sub
mov
cltd
aas
and
cmp
mov
pop
cmpsb
stos
data16
ljmp
xor
adcl
dec
mov
and
test
xor
cmp
sarb
sbb
jl
lcall
add
mov
mov
or
add
xorb
xchg
jne
jle
out
outsl
imul
aad
mov
out
insl
adc
pop
push
cmc
addr16
ret
sbb
lods
das
je
mov
sub
pop
cmp
lret
lret
outsl
cmp
movsl
pop
push
add
lahf
test
sub
jmp
mov
data16
xchg
push
mov
jae
jae
push
std
cmpsl
push
adc
out
mov
lret
fistpl
outsl
dec
bound
nop
fdivr
sub
sub
das
sbb
mov
mov
cmpsl
sub
loope
xor
gs
and
scas
add
jmp
movsl
adc
pop
inc
into
sbb
mov
add
push
fistpl
loope
pop
nop
scas
aam
xchg
lea
push
test
jg
jne
and
mov
lcall
sbb
jle
pusha
outsb
xor
sbb
lret
std
test
lods
pop
jne
iret
xchg
mov
movsl
lret
setge
in
ret
xchg
das
sub
push
hlt
xor
inc
roll
xor
repz
mov
sarl
std
xor
sbb
push
xchg
add
adc
xchg
jmp
sahf
push
fisubrs
xchg
fwait
xor
jns
sub
out
movsb
iret
scas
clc
sahf
fsubrl
adc
or
imul
sti
pusha
add
dec
and
push
push
cmp
rcl
es
rcrl
and
mov
push
lock
adc
js
or
lods
mov
jmp
mov
lds
add
cltd
mov
sahf
in
fdivs
sub
out
lods
int
ja
sub
rorl
xor
jle
push
push
scas
cmp
test
lds
rorb
gs
and
mov
push
shlb
mov
dec
or
scas
aam
mov
jnp
lea
mov
fdiv
jecxz
mov
mov
test
mov
adc
fmulp
mov
pop
jg
xchg
outsb
gs
mov
out
icebp
hlt
mov
or
outsb
movsb
int
xor
nop
shll
jecxz
mov
dec
cld
lock
sub
cs
ljmp
cwtl
cmp
gs
loopne
push
push
xchg
push
xor
inc
fisubs
mov
inc
imul
loope
sub
jecxz
add
movswl
mov
lahf
jo
mov
xor
pop
push
inc
pop
push
arpl
gs
jb
mov
mov
popa
loope
dec
mov
pop
lods
stos
xlat
mov
pop
add
mov
int3
cmp
pop
jge
movl
sbb
push
icebp
mov
bswap
rcrl
out
lods
cmpsl
push
jmp
mov
sahf
mov
xchg
cmp
pushf
cmp
pop
push
push
idivl
negb
jl
jle
mov
outsl
mov
int
fmul
test
loope
push
pop
dec
hlt
mov
movsb
lods
push
cmp
movsl
test
fidivl
in
rorb
jmp
loopne
jb
adc
cmp
sub
pop
jo
repz
pop
sub
or
jb
int3
sub
xor
out
xchg
xor
test
das
mov
testb
icebp
pop
inc
jl
int3
cmpsb
jg
jb
in
pop
add
xorl
inc
cmp
test
jno
adc
mov
ja
hlt
jg
in
jne
lods
add
mov
cld
ja
pop
rcrb
and
negl
xchg
push
jmp
push
sbb
addr16
cld
into
xchg
fidivs
add
adc
push
xchg
std
ljmp
or
pop
xchg
dec
mov
or
adc
rcrl
cmp
and
inc
adc
lahf
inc
jecxz
mov
daa
push
fstpt
ds
xchg
les
and
mov
xlat
xchg
iret
mov
push
jecxz
and
jo
inc
pop
mov
push
mov
loope
test
mov
data16
dec
dec
mov
lret
jle
aam
sbb
cld
add
int3
mov
pusha
fnstsw
mov
ret
push
push
rcrb
lahf
or
push
std
dec
xchg
int
aaa
lahf
sub
push
jmp
lret
sub
mov
fsub
push
test
loope
mov
pushf
sbb
xchg
imul
cmpsb
cld
bnd
lock
mov
es
fstp
cmp
stos
fbld
cmp
mov
repnz
fisttpll
imul
lods
subb
rolb
or
push
loopew
shll
daa
mov
jmp
sti
addr16
loope
pop
adc
icebp
xor
adc
mov
daa
push
rclb
xchg
cmp
fildll
mov
fsubl
dec
pop
cmc
mov
or
fsubl
push
pop
gs
lahf
stos
popa
pushf
dec
mov
cmc
popa
inc
add
sti
icebp
sahf
push
aad
bound
and
adcl
sbb
mov
popa
and
aad
cmpsb
repnz
pop
pop
popa
sub
xor
or
movsl
xchg
push
iret
in
das
pusha
jecxz
adc
data16
subl
test
push
mov
xchg
push
aas
dec
imul
dec
sbb
or
adc
stc
jns
dec
insl
sbb
jecxz
mov
or
xchg
and
dec
in
dec
cmp
pop
aam
insl
or
outsb
shr
stos
lret
sahf
outsl
into
xchg
jo
dec
dec
and
cwtl
fldl
cwtl
sub
cs
cs
or
add
adcb
daa
mov
dec
cmpsw
xor
dec
clc
dec
dec
or
mov
xchg
pop
imul
xor
fistl
test
cs
and
add
xchg
xchg
aas
add
mov
cmp
jnp
outsl
mov
inc
in
ret
jbe
add
mov
ja
jbe
pusha
sbb
adc
and
mov
mov
inc
mov
push
lret
push
aaa
outsl
cmp
add
mov
inc
fistpll
adc
xlat
mov
sbb
pop
sub
cmp
fidivl
inc
xchg
dec
rcrb
sub
clc
aam
sbb
data16
jae
mov
call
fdivp
sti
or
mov
dec
cmp
jl
xor
subl
loope
mov
cmp
mov
je
stc
or
nop
stos
mov
and
fdivrs
dec
repnz
fsubl
jo
cwtl
jmp
ret
cmp
lock
mov
mov
pop
inc
xchg
hlt
testl
cmp
sub
mov
jge
inc
jae
inc
mulb
fnsave
xor
mov
add
xchg
mov
inc
and
cmpsb
cltd
sbb
lods
shlb
lock
cmp
leave
dec
movsl
sub
loopne
ljmpw
std
sbb
inc
movsl
data16
jno
and
jmp
enter
out
and
arpl
popa
lock
loopne
add
push
and
lcall
lea
xchg
lret
scas
cmp
ret
push
mov
sub
cmp
aas
mov
dec
jnp
mov
cmc
int
js
fdivl
int
adc
inc
lds
push
lds
cmp
xor
xchg
out
mov
arpl
inc
pop
jle
mov
test
mov
inc
xor
scas
push
shl
xor
arpl
jae
mov
gs
pop
in
enter
xchg
addl
xchg
repnz
loopne
mov
sti
sub
mov
cmp
pop
in
sbb
hlt
xchg
fidivs
leave
popa
cmpsl
push
mov
test
addr16
movsb
jmp
iret
stos
shrb
lods
and
aam
lcall
mov
out
aaa
in
lret
test
das
or
stos
fstpl
insl
and
xor
sti
dec
adc
into
xor
lods
in
insl
mov
or
dec
adc
sbb
lods
push
fimull
in
add
push
xchg
inc
mov
adc
dec
sub
sbb
cmp
jge
pop
je
rcrl
lods
and
lcall
les
out
stos
addr16
pop
xchg
mov
dec
aam
outsl
sbb
mov
mov
or
stos
and
cmpsb
push
rorb
adc
cmp
in
inc
test
adc
pushf
fisubrs
adc
inc
daa
pop
das
out
fnsave
pop
movb
imull
and
sub
xor
out
movsl
add
jae
dec
dec
leave
es
pusha
cmp
add
movsl
nop
adc
xor
xchg
adc
scas
fcmovne
hlt
or
or
loopne
cld
pop
enter
out
test
mov
add
or
int3
dec
dec
insb
jne
loope
sub
sbb
outsb
jb
int3
inc
lret
xor
push
callw
xor
fmuls
roll
daa
fisubrl
xchg
push
addb
and
sbb
jns
and
ja
testb
push
mov
into
iret
push
sbb
mov
lock
push
ficoms
adc
jno
mov
jo
mov
icebp
les
inc
mov
in
xor
dec
mov
out
ljmp
sbb
adc
sbb
dec
divl
imul
dec
in
push
mov
in
add
adc
shrl
dec
popf
std
cmpsl
decl
pop
daa
mov
xor
cwtl
jg
mov
pop
pop
sbb
sti
pop
pop
out
outsb
cli
lret
jle
fstl
jl
xchg
and
push
xor
mov
je
sbb
add
inc
pop
sahf
xchg
andl
test
inc
mov
mov
gs
adc
jg
fimuls
jmp
pusha
adc
sub
loope
mov
inc
add
jmp
mov
insl
jp
sub
pop
push
push
jmp
mov
fmuls
pop
fisttpll
movsl
jb
mov
cmp
jb
push
add
out
std
xor
inc
dec
sahf
cld
xor
sahf
sarb
stc
xchg
adc
bound
jnp
int3
jp
repnz
mov
dec
sbb
sbb
nop
int3
sbb
xchg
sbb
mov
movsl
lret
sub
mov
loopne
sub
gs
push
test
add
out
into
pop
daa
orl
fldcw
addr16
enter
pop
xchg
xor
push
mov
popa
jbe
testl
xor
je
mov
adc
adc
and
enter
mov
les
inc
js
lahf
xchg
cmpsl
decb
inc
and
add
pop
movsl
xchg
mov
and
mov
je
jne
repnz
or
jmp
push
inc
xlat
cs
mov
fdivl
add
sub
add
push
pop
pop
pusha
addr16
pop
cmc
mov
pop
fcoms
and
dec
sti
clc
or
dec
ficompl
ret
outsb
dec
sbb
jmp
push
les
orl
sub
movsb
and
push
mov
test
lds
mov
mov
dec
lock
test
test
adc
cmp
dec
add
je
push
popf
fstl
je
jne
jbe
mov
xor
adc
sub
scas
push
lds
jnp
dec
fdivl
mov
movsl
nop
aas
mov
mov
addb
jo
pop
sub
mov
mov
in
stc
and
mov
aad
in
jne
outsb
pop
sbb
push
fwait
xorl
xchg
cmp
sbb
mov
repz
inc
test
in
push
jle
sbb
inc
movsl
cmpsl
loop
xor
xchg
adc
jb
scas
xor
movsb
sahf
loope
or
fstl
andl
sub
inc
cmp
jg
and
sub
cli
mov
add
call
lds
cltd
inc
out
hlt
fidivs
mov
jmp
in
dec
jle
mov
leave
cmp
dec
in
iret
push
loope
push
mov
or
inc
mov
cvtps2pi
sub
icebp
mov
jl
out
aam
aam
inc
xor
not
adc
std
xchg
xor
or
push
sbb
cmc
jne
mov
gs
jnp
ficomps
pushf
out
sbb
fsub
or
leave
cmp
test
ss
leave
out
je
loopne
mov
js
pop
jmp
ret
jo
mov
mov
pop
mov
xor
cmc
pop
mov
test
jge
cmp
xchg
inc
dec
cmc
sub
adc
mov
js
mov
dec
repnz
xor
inc
adc
aaa
mov
and
add
lahf
or
xchg
dec
push
pop
popf
pop
pusha
les
cli
test
and
sub
movsl
mov
mov
fidivrl
cmp
fs
lret
jbe
add
outsl
jns
xchg
xor
mov
cmp
push
mov
jnp
addr16
int
cmc
sbb
rcrl
pushf
mov
cmpsb
push
jge
stos
lret
movsl
rorb
pop
mov
pop
dec
icebp
sub
pop
mov
test
xchg
lcall
inc
mov
dec
icebp
push
sbb
mov
es
movsb
repz
sbb
in
pop
mov
or
or
xor
xchg
test
mov
pop
adc
jg
jg
jmp
mov
push
mov
or
or
jge
sbb
ljmp
test
adc
mov
mov
cwtl
mov
sub
adc
mov
lahf
adc
shll
and
jg
hlt
sbb
mov
icebp
or
lds
stc
fstl
data16
mov
into
cmp
or
loop
cmp
mov
add
xor
jae
sahf
repz
ljmp
push
fldl
int
or
cld
push
add
and
mov
xlat
push
mov
sub
loopne
push
cmp
insb
xor
dec
xor
xchg
push
fldenv
xchg
dec
out
icebp
lock
out
mov
sub
dec
out
fdivs
mov
fdiv
inc
mov
idivl
jp
lods
mov
test
fnstsw
dec
ja
sbb
inc
or
ljmp
add
jb
push
pop
cmp
add
fxch
xlat
lods
mov
cmp
arpl
jbe
ss
vmload
mov
sbb
push
js
sti
ja
inc
inc
or
and
fcomps
cmc
aaa
clc
jle
lcall
int3
scas
insb
jmp
outsl
loopne
ss
xchg
or
stos
cmpsb
and
loope
arpl
rcrl
out
jb
jbe
stos
add
adc
sbb
scas
mov
pusha
in
int
inc
repnz
jmp
out
xchg
jmp
jle
cmpsb
faddp
and
adc
jecxz
imul
int3
lahf
mov
nopl
xlat
aaa
pushf
mov
xchg
aad
jl
cmp
xor
xorb
inc
push
pop
jecxz
cwtl
popf
and
adc
lret
shrb
pop
movsb
xchg
xchg
ffreep
and
fcompl
test
mov
cmp
xchg
les
repnz
movsl
orl
inc
cmpsl
jg
nop
cmp
hlt
pop
ss
push
call
dec
adc
dec
fisubs
pop
push
loopne
and
mov
pop
add
sti
mov
pop
mov
xchg
lcall
or
cltd
sbb
sbb
aaa
sbb
cwtl
sbb
xor
sarl
jb
aas
pop
outsb
scas
into
cltd
sub
sub
push
hlt
pop
push
sub
pushf
mov
jae
xor
cmpsb
in
mov
pusha
cltd
ja
inc
ds
cmp
sub
int3
xchg
dec
popa
inc
lea
or
xor
dec
mov
sub
cs
ficomps
ret
mov
std
push
jo
pop
inc
fldt
sub
int3
inc
sbb
repnz
std
push
imul
pop
in
dec
shrb
imul
lahf
xor
push
or
mov
lea
and
push
mov
and
lods
subb
imul
sbb
iret
push
cwtl
jns
add
shlb
fucomi
pop
stos
xor
or
ret
ror
hlt
insb
xchg
sbb
cmp
push
lcall
movsw
sahf
sbb
or
jne
xor
imull
cmp
mov
out
pop
aam
lret
mov
out
dec
shlb
jmp
int
add
lret
sub
adc
lods
testl
popa
adc
lods
popa
cmp
xor
push
pop
add
stc
pop
ja
pop
dec
xorb
aaa
js
xchg
xorb
sub
mov
cltd
mov
sub
or
dec
cmpsl
icebp
cmp
insb
inc
jge
imul
dec
mov
add
xchg
or
in
pop
shrb
sub
aad
sarb
sbb
popa
dec
jnp
or
adc
jmp
cmp
pandn
fdivrs
insl
jle
and
xlat
and
aad
loope
and
das
pop
fmul
push
add
mov
push
or
push
xchg
and
fidivrs
pop
ficoms
push
mulb
cmp
add
jle
lret
adc
bound
insl
xor
add
and
cmp
pop
jbe
sbb
mov
jg
pop
ret
idiv
adc
jp
mov
or
add
push
dec
sub
mov
push
jp
add
and
pop
push
ja
lret
les
insl
ja
jp
popf
into
or
fcompl
adc
and
sahf
sbb
js
push
mov
xorl
or
clc
jae
and
mov
or
sbb
dec
cltd
ret
rclb
into
push
mov
sbb
out
inc
xchg
ljmp
push
mov
inc
cmp
loop
pop
jns
inc
in
mov
lds
adc
pop
ss
jge
push
add
fwait
clc
or
les
cmp
das
rcrl
shr
insl
xchg
cwtl
mov
push
imul
sti
mov
les
lods
inc
adcb
xchg
jne
fsub
pop
ds
push
cmpsl
adc
sub
dec
dec
push
lret
pop
xor
and
in
mov
xor
mov
push
insb
int3
inc
nop
add
call
orb
mov
adc
jg
sub
mov
mov
stos
bound
xchg
xchg
cmp
adc
push
xchg
out
nop
pop
mov
daa
push
les
clc
adc
xchg
sar
rorb
jnp
inc
stos
sub
hlt
nop
xlat
adc
dec
fbstp
sbb
imul
aam
push
xchg
and
mov
iret
sbb
mov
pop
adc
jmp
mov
fstpl
pop
xchg
xor
sbb
fisttpll
int
xor
nop
out
loop
pop
or
ljmp
xchg
adc
and
ficoml
cmp
xchg
mov
movq
clc
xor
outsl
pop
mov
fucom
ds
int
daa
iret
sbb
sti
mov
fyl2x
and
add
test
xlat
inc
jnp
test
imul
or
mov
pop
int
inc
inc
fimull
cmp
cwtl
insb
fbstp
out
movsl
inc
imul
mov
xor
or
sub
jo
setge
cmp
outsb
jg
xlat
inc
jmp
mov
cmp
sbb
mov
push
mov
xchg
and
movsb
scas
sub
cmp
ja
negl
mov
mov
sub
lea
hlt
cmp
xlat
repnz
xorb
imul
xchg
dec
jmp
out
sti
sub
inc
fwait
jl
xchg
stos
loopne
test
or
jmp
arpl
mov
or
out
cltd
dec
fcoms
jae
rorb
fwait
mov
mov
repz
push
or
sbb
jge
adc
sarl
fmull
sahf
sti
pop
inc
xchg
pop
push
add
rorl
popa
xchg
add
cmpsb
sub
mov
cmpsl
mov
xchg
add
lods
inc
enter
jl
in
pop
push
scas
mov
mov
xchg
in
dec
push
mov
int
test
xchg
sbb
pop
adc
les
pop
adc
cmpsl
dec
stos
nop
adc
add
push
mov
dec
movsb
mov
sub
enter
and
aam
xchg
push
xlat
bound
dec
dec
or
jge
test
sbb
mov
mov
stos
sub
mov
ljmp
jg
in
sbb
mov
dec
addr16
loop
iret
negb
lock
jmp
or
mov
sarb
daa
or
lods
xchg
enter
mov
xor
cmp
sbb
mov
xchg
das
stos
into
cmp
rcrl
jl
loopne
fnsave
sbb
fyl2xp1
mov
insl
pusha
mov
mov
add
inc
je
aaa
xlat
outsb
cmp
enter
lret
fstps
mov
fistps
push
aas
mov
incl
sti
rclb
fdiv
push
scas
xchg
xchg
leave
aam
imul
inc
imul
scas
out
int3
add
mov
sbb
dec
out
mov
and
pop
dec
lret
xchg
aam
imulb
cmp
sub
xchg
mov
insb
or
add
xchg
movsl
or
ds
mov
adc
pop
jp
test
inc
sbb
aam
lcall
mov
pop
mov
mov
and
or
out
stos
sarb
sub
push
mov
icebp
inc
bound
dec
push
jns
xor
sbb
loope
xor
xor
add
imul
xchg
dec
xor
mov
inc
jb
repz
cmp
flds
shll
push
xchg
inc
sbb
mov
mov
add
pop
pop
cmp
push
mov
adc
xor
je
or
cmp
ss
rclb
xchg
mov
dec
mov
outsb
inc
pop
lret
jp
inc
aaa
std
mov
xchg
jecxz
stos
cli
dec
popa
cwtl
fucomp
xor
mov
vmovd
std
or
mov
ret
pop
adc
cmp
jl
pushf
or
xchg
cmp
mov
push
testb
jnp,pn
adc
xchg
out
std
enter
pop
scas
jge
cmp
ja
cwtl
add
rcrb
or
test
cmpsl
xchg
bound
aam
jp
push
int3
lcall
popf
jge
gs
mov
cmp
jmp
mov
xchg
dec
ds
lods
mov
js
mov
pusha
inc
sub
fildl
pop
and
push
cmp
popf
or
movsl
aas
xchg
and
mov
cmp
pusha
out
cmpsl
loop
in
out
add
adc
lea
addr16
inc
lcall
cmp
repz
sbb
mov
lea
sbb
jbe
add
imul
xor
dec
sbb
push
outsl
lret
std
test
out
cmc
mov
shlb
aas
mov
add
imul
adc
out
cmc
sahf
add
mov
and
fisubrl
lahf
adc
push
push
scas
ret
adc
cmp
inc
data16
jp
cmpl
xchg
xchg
out
test
dec
loopne
mov
and
in
xchg
add
dec
sbb
mov
mov
test
int
jae
insb
or
out
lahf
lcall
adc
jg
push
jg
ds
repnz
out
dec
mov
pop
pop
loop
fadd
push
jo
loope
jge
pop
jae
dec
ds
rcrb
arpl
es
cwtl
fcoms
add
outsb
adc
outsl
jle
les
iret
xor
test
ja
sub
or
sbb
mov
and
dec
mov
out
and
stos
adc
stos
mov
mov
jo
iret
lds
pop
test
shrl
xchg
lods
lret
repz
sarb
cld
in
sub
mulw
hlt
in
dec
outsb
aad
and
inc
nop
aad
jb
cmpb
out
mov
aas
and
std
lret
in
aas
xor
repz
cmpsb
lea
lea
gs
xchg
dec
setns
mov
pop
jge
mov
pop
enter
out
movsb
je
sbb
mov
aas
out
sub
add
dec
addb
adc
mov
lds
in
or
jmp
int
mov
jo
loop
add
lahf
scas
dec
push
movsl
xchg
push
jae
add
cmp
xorb
aaa
xchg
cmp
data16
cs
unpckhps
hlt
pop
xor
mov
xchg
add
xor
or
and
cmp
xchg
int
inc
cli
jno,pt
mov
add
in
inc
clc
mov
sub
fwait
aad
or
aas
pop
pop
aaa
movsb
jmp
data16
pop
aad
cmp
shll
cwtl
dec
lahf
mov
in
call
mov
int3
mov
repnz
mov
or
mov
stos
push
jecxz
jnp
jns
ds
pop
sahf
ss
push
mov
test
aas
or
add
pop
mov
sti
jo
dec
dec
mov
pop
fsubrs
dec
jg
lahf
or
hlt
add
mov
idiv
ret
aam
xchg
jge
shll
cmpsb
cmpsb
std
bnd
jo
fadd
loopne
and
cmp
xor
xchg
subl
cmp
pop
test
mov
cmpsl
adc
test
jo
jns
lds
lret
xchg
dec
mov
popf
sbb
repz
dec
testb
ret
add
adc
clc
insl
adc
cld
rclb
inc
shl
int3
js
mov
in
daa
pushw
je
sub
sub
pop
mov
sbb
jnp
push
jp
pushfw
pop
ds
int
jmp
push
pushf
xor
or
push
aaa
push
sbb
test
dec
pop
xor
cwtl
std
out
mov
mov
mov
jbe
adc
test
sti
mov
out
repnz
testl
outsl
add
inc
ljmp
in
data16
imul
jno
ja
jae
cmp
dec
push
push
pop
add
jae
das
inc
popf
scas
fmul
shlb
les
xchg
and
subl
in
sub
icebp
push
and
sub
jbe
lea
sub
pop
mov
popf
leave
dec
das
inc
aam
clc
sub
jae
mov
jo
add
sub
dec
rclb
ljmp
dec
shll
sar
xchg
iret
jl
cmovge
iret
push
outsb
push
nop
test
or
pop
es
mov
pop
push
pop
inc
push
scas
aas
adc
mov
mov
sbb
cld
movsb
out
sarl
aam
in
xchg
dec
inc
jbe
sub
inc
cmpsl
pop
adc
pop
stos
pop
inc
push
outsb
push
pusha
loopne
mov
stos
sbb
scas
gs
mov
test
pmuludq
pop
mov
jmp
xchg
shrb
mov
mov
sti
fnstsw
clc
push
test
and
adc
push
adc
dec
jmp
cmp
xchg
pop
test
jbe
hlt
subb
xor
inc
and
fldcw
addr16
cmp
int
lcall
ds
mov
xchg
mov
test
jle
sub
lcall
or
inc
or
int3
stos
jae
ja
jb
fcmovne
jb
inc
out
andb
popa
dec
ss
mov
jecxz
add
fisttpl
jns
in
add
add
pop
jl
and
lods
repz
cmc
call
data16
nop
mov
mov
pop
push
into
mov
xchg
fldl
outsl
mov
je
sub
push
fisubrs
adc
daa
dec
and
and
nop
test
mov
adc
sub
push
les
inc
jge
adc
cmp
mov
xlat
inc
inc
sbb
sbbl
pop
sti
cld
data16
mov
js
sar
pop
push
pop
out
aad
mov
lahf
movsl
lret
ja
pop
mov
adc
xor
or
aas
repz
aam
rcll
repnz
dec
or
xchg
shrb
pop
lret
add
rcr
in
sub
xlat
int
ds
jecxz
scas
mov
aad
sbb
sbb
icebp
add
dec
mov
rorb
test
sub
jnp
iret
inc
push
insl
lcall
mov
leave
mov
cmp
push
std
jbe
xchg
inc
sub
and
inc
ret
adc
cltd
addl
dec
lock
pop
inc
cmp
adc
and
mov
push
icebp
arpl
jnp
lret
xchg
adc
dec
cmc
cwtl
test
jno
adc
pop
fisttpl
push
inc
and
cld
fldcw
shlb
and
mov
or
aam
mov
mov
scas
hlt
lods
inc
test
push
std
adc
sarb
xorb
pop
subl
xchg
in
sbb
leave
ljmp
mov
pop
mov
lretw
rorb
test
fs
and
lcall
orb
lods
fwait
dec
push
mov
xchg
test
in
adc
mov
push
pop
fsub
add
test
inc
dec
roll
inc
dec
aas
pop
pop
jmp
out
adc
xlat
xchg
xor
push
aam
addl
cs
mov
cli
lcall
push
pop
push
stos
shl
sahf
xchg
inc
sub
enter
movd
mov
mov
fldcw
add
push
jne
jmp
aam
jle
mov
mov
outsl
out
mov
sarb
aaa
sub
les
aam
jmp
out
mov
mov
cs
jmp
xor
fldenv
and
pop
pusha
cmp
popf
mov
xor
test
adc
mov
iret
fwait
shl
mov
adcb
push
pop
sub
sbb
cmp
hlt
jbe
push
mov
imul
sbb
inc
aad
pop
sub
scas
ret
dec
lcall
scas
cmp
test
jnp
xor
pop
popf
pop
fldt
fs
mov
sub
dec
adcb
cmp
clc
lds
aam
xchg
add
push
insb
mov
fwait
dec
in
mov
dec
adc
xor
xor
push
lods
adc
lahf
imul
adc
into
jmp
jmp
shlb
or
xchg
dec
xchg
testl
sbb
das
lds
push
mov
imul
in
xor
inc
divb
add
and
sbb
mov
movsl
sub
and
pop
loop
stc
lock
push
jno
pop
sub
fdivs
cmp
in
mov
cmp
cmp
fs
data16
fs
stos
mov
push
sarb
cmp
mov
cmpsl
mov
iret
movsl
pop
add
lods
pop
loop
dec
sbb
sbb
add
mov
cltd
int3
inc
and
nop
ds
xchg
mov
bound
sahf
sahf
sbb
or
cmpb
cwtl
sarb
aad
dec
adc
jmp
or
lret
lock
iret
daa
mov
xchg
fnstsw
into
dec
add
daa
repz
inc
adc
test
mov
sti
test
and
scas
xorl
std
imul
add
rcll
cmp
sub
cs
out
ljmp
push
inc
xchg
cmp
pusha
mov
or
clc
faddp
xor
xchg
pop
mov
cs
dec
cltd
xor
bnd
add
imul
cwtl
in
mov
push
push
jb
sbb
jmp
negb
sub
call
fs
jae
xor
pop
dec
inc
cmpsl
cmp
add
popa
test
mov
jg
sar
pop
loop
push
push
loop
sti
mov
in
and
or
and
jns
mov
add
push
push
add
pop
dec
test
pop
jne
pushf
ret
mov
xor
repnz
mov
jmp
adc
mov
add
jg
jo
aam
push
push
dec
orb
ret
xchg
in
fiaddl
mov
jp
lret
mov
test
lods
push
sub
xchg
and
sbb
ficomps
jb
jno
jne
mov
adc
mov
outsl
cmpsb
mov
sub
out
jmp
aam
lcall
xor
mov
popa
inc
fmull
iret
push
leave
daa
rorb
add
inc
mov
mov
lahf
pop
in
cmp
cwtl
add
push
pop
cmp
in
test
call
or
inc
movsl
outsb
in
aam
ficompl
imul
push
jmp
or
cmp
lss
push
mov
scas
loope
and
cmp
sahf
cmp
and
adc
aad
push
jne
filds
add
sti
cli
movsb
sarl
cmpsb
icebp
sbb
pusha
jg
sbb
les
rcrl
into
xchg
cmp
pop
jo
push
daa
fsubr
bound
fstl
sbb
mov
mov
sbb
jno
leave
adc
into
jmp
push
xchg
add
push
adc
and
ja
jo
lea
add
lret
fimuls
mov
adc
insl
shlb
fcoms
je
outsl
aaa
push
rcr
push
cli
test
push
jecxz
xchg
out
aad
adc
ja
mov
bound
rcrb
out
cmp
and
and
mov
xor
sbb
fnsave
sub
loope
pop
mov
push
gs
or
push
inc
lock
dec
and
dec
mov
dec
pop
jl
sarb
stos
in
jne
out
pop
push
adc
iret
dec
dec
jo
or
pop
jnp
scas
dec
les
gs
and
stos
xor
pop
mov
insb
or
mov
rcrb
push
mov
pusha
push
aas
xorb
adc
push
jbe
pop
pop
sub
pop
lods
std
push
cmp
cmpsl
jge
and
mov
jb
lea
cmc
sub
add
cmp
jp
pop
fildl
dec
outsl
adc
shl
xlat
into
inc
sub
popa
mov
jl
dec
mov
jge
aam
add
hlt
cld
cld
out
insl
inc
sub
in
loopne
jnp
daa
and
jge
push
sbb
or
cltd
int3
int3
mov
inc
pushf
fs
sbb
pop
pop
cwtl
and
jbe
xor
push
sub
mov
pop
mov
inc
mov
iret
xchg
jge
jae
jl
or
mov
pop
cmp
or
jne
adc
inc
xor
xchg
push
popf
xor
inc
xchg
fistps
test
sub
test
popa
pop
clc
divl
ja
sbb
es
orb
sarl
in
push
sub
mov
mov
sbb
sub
mov
jmp
xchg
add
ret
xchg
in
add
xchg
test
sbb
int3
jp
fnsave
test
inc
bndldx
lret
shlb
mov
mov
adc
mov
mul
popf
pop
insl
fsts
cmpl
movb
jg
mov
pusha
push
jl
fiadds
imul
xchg
iret
inc
jmp
jge
jb
and
push
push
fwait
mov
dec
movsl
ss
mov
adc
push
add
aaa
sbb
int3
dec
in
inc
lret
or
xchg
scas
popf
mov
inc
push
and
popa
decb
inc
hlt
ljmp
mov
sbb
fdivrp
jb
outsb
cmp
stos
insl
ret
and
lahf
xchg
push
lahf
jg
in
or
mov
cltd
sahf
jecxz
dec
dec
hlt
mov
mov
insb
add
movsb
mov
bound
mov
les
cld
mov
dec
push
and
dec
enter
xor
xorl
outsl
xor
push
cmp
sub
loopne
xor
inc
or
add
jg
in
sbb
lret
cli
lods
fwait
xor
push
out
gs
push
js
and
loopne
mov
adc
jle
test
outsl
jb
lahf
and
push
mov
sub
loop
sbbb
mov
popa
jecxz
dec
fstpt
inc
add
xchg
std
add
movsb
jp
out
jns
test
arpl
lret
imul
sahf
inc
mov
lcall
repnz
outsl
xchg
xchg
sub
jb
mov
lea
mov
xchg
int
push
push
lahf
mov
roll
subb
or
adc
xor
xchg
sbb
push
ret
std
adc
ds
inc
add
mov
pop
andb
mul
jecxz
inc
lahf
xlat
add
xchg
inc
and
andb
loopne
fldl
cmp
scas
sub
dec
imul
clc
test
inc
dec
inc
das
into
xor
cmp
in
mov
hlt
cmp
lcall
in
in
push
xchg
push
outsl
mov
dec
fidivs
xor
push
setge
jge
lea
popa
push
cvtps2pi
cmpsl
xchg
aad
xchg
xchg
movsl
and
das
adc
lods
dec
jno
call
arpl
sbb
pmullw
insl
ss
inc
scas
push
mov
jns
xor
mov
mov
daa
mov
lods
mov
mov
and
jl
add
call
ss
xor
es
dec
pop
fs
shrl
mov
push
push
loopne
movsl
jns
sub
cld
push
mov
xor
out
cli
test
adc
aad
cmp
sbbl
int
ficomps
xchg
insb
sub
leave
xor
push
and
sub
sbb
jmp
mov
mov
dec
int3
imul
push
or
mov
sbb
jg
iret
push
or
fcomip
push
sub
subb
push
cld
adc
test
mov
mov
adc
inc
ds
scas
call
in
or
cmp
cmpb
sahf
add
movsl
inc
or
sub
push
xchg
lock
sbb
repnz
rolb
ja
jnp
add
in
xchg
mov
test
mov
filds
addb
enter
pushf
sub
pop
xchg
stos
pop
inc
mov
in
scas
fs
cs
fcoms
les
xchg
push
sub
xchg
movsb
sub
insl
cmp
adc
das
mov
cmp
push
je
fnstenv
xchg
or
sub
or
stc
or
and
mov
mov
jmp
or
mov
mov
xlat
push
push
out
push
sbb
cmpsl
xor
mov
inc
mov
cmpsl
lock
cli
inc
cli
cmp
ljmp
jo
pop
movsl
pop
jo
rorb
test
fisttps
orb
mov
push
or
xchg
call
bound
jo
andl
inc
pop
sub
dec
pop
int
jns
inc
xlat
mov
and
xchg
jg
sbb
jb
mov
pop
or
lret
jl
push
mov
jnp
in
ja
jmp
btc
mov
adcl
xor
xor
xchg
adc
gs
xchg
pop
je
adc
lds
inc
inc
out
fnstcw
ror
push
cmpb
inc
les
xchg
push
les
xchg
sbb
movsb
aam
sbb
js
xchg
inc
mov
ljmp
xor
mov
xchg
shlb
in
pop
mov
dec
ds
imulb
and
mov
aad
adc
mov
dec
jmp
mov
ret
gs
inc
pop
jl
adc
pop
ret
add
ficompl
jbe
push
mov
or
mov
push
cmp
imul
rdpmc
loopne
pop
push
push
pop
faddl
or
outsl
out
and
test
add
cmp
shr
in
jno
push
test
push
int3
sti
mov
mov
int3
mov
cs
push
adc
sub
scas
inc
ds
lock
dec
mov
cmc
pop
jecxz
std
inc
cwtl
sti
adc
pop
stc
mov
jno
push
lret
push
in
mov
stos
rorb
jmp
cmpsl
pop
mov
sbb
xor
insl
ss
test
inc
lahf
jp
les
cmp
aad
lahf
subb
or
jb
jl
sub
jne
push
test
xor
or
repnz
les
or
ja
fisubl
bound
fistps
or
insl
push
hlt
test
push
sbb
es
lods
test
adc
bound
stos
inc
lret
mov
aad
add
pop
jae
lods
adc
or
and
addr16
iret
aam
es
mov
sahf
mov
and
add
mov
adc
stc
lret
lahf
pop
adc
dec
mov
int
cltd
and
pusha
cmp
ss
mov
mov
dec
mov
insl
in
cmpsb
nop
cmp
jns
pop
or
dec
dec
popl
andl
cmp
in
test
or
xchg
cmpsb
dec
mov
stos
push
pop
hlt
test
loop
hlt
sar
sbb
inc
mov
popa
cmp
xchg
out
inc
mov
mov
ret
inc
imul
mov
and
bound
test
and
ret
imul
mov
xchg
iret
aad
pop
jo
jno
movsl
ret
mov
mov
mov
pop
add
scas
cmp
stos
adc
je
pop
adc
jo
pop
add
divl
insl
xor
outsl
movsl
test
dec
pusha
push
enter
faddl
test
xchg
mov
inc
add
test
mov
mov
ljmp
lock
jno
pop
lahf
ret
movsl
movsb
jge
enter
or
aam
jp
int
dec
jae
jle
xchg
subl
dec
inc
hlt
cmc
test
jp
jg
mov
aad
and
fidivl
xlat
cltd
das
adc
cmp
daa
cwtl
test
inc
test
push
and
jle
ror
add
cwtl
ja
fsubrl
fs
cwtl
mov
xor
lock
lcall
inc
loope
cmpsb
and
loope
lock
push
scas
cltd
fcom
mov
inc
and
and
cmp
clc
loope
pop
sarl
jns
push
inc
or
jge
adc
mov
out
cli
cltd
into
stos
scas
test
int3
cld
lea
push
push
inc
mov
mov
out
xor
push
adc
add
sbb
fs
stos
es
adc
imul
out
pushf
mov
test
mov
sti
mov
mov
test
mov
and
iret
push
sahf
out
call
out
mov
lahf
push
je
sub
out
movsb
sarl
enter
mov
icebp
push
insb
mov
jp
and
push
loope
pop
add
lret
pop
jle
adc
jg
adc
in
pusha
lret
mov
add
shlb
or
xchg
xor
shll
pop
jo
ss
test
dec
leave
push
mov
mov
adc
jno
sbb
jp
std
or
popf
cli
cmpsl
inc
imul
imul
sbb
mov
sub
call
sbb
iret
mov
or
mov
dec
pushf
addl
pop
mov
jo
push
ss
fs
mov
test
inc
outsb
stos
bound
sub
sbb
movq
lock
je
fucomp
lcall
shlb
push
push
daa
shl
push
imul
faddl
loop
push
add
add
or
xlat
mov
fsubrl
scas
sub
push
in
dec
lret
inc
xchg
insl
pop
and
stos
imul
lea
pop
cmp
jp
addr16
mov
push
popf
cld
insl
pop
inc
jge
sbb
js
clc
and
dec
adc
jecxz
jno
adc
dec
pop
test
ljmp
dec
pop
stos
es
mov
push
pop
jbe
lods
cltd
mov
mov
rcl
jo
pop
rolb
mov
js
mov
inc
sub
repnz
inc
mov
fs
mov
xor
into
iret
fsubr
jmp
xchg
stos
mov
jnp
iret
stos
inc
roll
stos
fisttpll
and
mov
inc
push
outsb
xchg
cmp
jecxz
rolb
fcoms
ja
popa
addr16
js
inc
js
scas
cmp
xchg
into
test
and
movsl
and
stos
cmp
or
sub
xor
data16
lret
push
add
xchg
repnz
stos
dec
sbb
xlat
inc
mov
push
das
jle
inc
mov
sub
sar
push
inc
sti
in
sub
scas
loopne
adc
ret
jge
jp
sbb
and
adc
sub
cs
sbb
dec
xchg
add
inc
in
sbb
mov
xchg
sahf
dec
sbb
lods
mov
jns
mov
push
movsb
fisttpl
test
addb
pop
lcall
pop
jp
int3
and
fsubrl
testl
mov
lret
bound
cmc
ret
aad
cli
aas
adcl
lea
je
push
add
xor
mov
mov
mov
ljmp
push
xchg
inc
and
lcall
cmp
lock
arpl
daa
pop
cmp
ss
jmp
dec
mov
cmp
jp
dec
in
adc
out
cld
clc
flds
sub
sbb
shlb
in
mov
mulb
xchg
addr16
sbb
or
test
and
test
je
lcall
fs
jae
loopne
push
dec
pop
push
hlt
scas
cmp
sbb
test
sarl
mov
pop
test
fwait
fwait
outsl
add
xchg
mov
mov
dec
sub
jecxz
inc
imulb
add
cmp
push
or
sub
mov
mov
scas
out
aad
subl
xor
or
cmp
test
fdivr
push
aam
rclb
cli
icebp
mov
cmp
inc
bound
repz
movsb
stos
loop
adc
add
cmp
or
sub
mov
adcl
sti
imul
nop
xorl
out
neg
clc
inc
inc
sbb
bound
fwait
jnp
lea
jno
inc
mov
mov
loopne
dec
es
pushf
lods
andl
and
jp
pop
jg
loopne
jl
push
push
loopne
sbb
jne
mov
lret
out
sbb
enter
pop
push
and
push
xchg
mov
lock
jg
sbb
or
push
cmp
cmp
push
mov
cltd
and
and
push
mov
inc
xor
push
mov
inc
cmp
jnp
es
jne
outsl
mov
pop
cli
mov
idivb
cli
lods
jg
leave
adc
cmc
jg
fs
inc
aam
add
hlt
ja
leave
cli
into
add
add
popa
jmp
nop
out
aas
inc
mov
cmpsb
add
pop
xlat
das
dec
lcall
xor
pop
fstps
mov
lock
mov
mov
enter
inc
cli
js
ja
dec
add
push
mov
push
aad
push
mov
mov
testl
cmpsb
scas
rol
icebp
jno
ss
xchg
mov
popa
mov
dec
pop
mov
mov
sub
sarl
pop
std
mov
mov
sbb
xor
jne
cmp
xchg
jne
test
es
mov
or
into
mov
clc
test
pop
mov
mov
cltd
loope
addr16
fadd
inc
dec
adc
xchg
cmp
lret
xor
add
add
xor
pop
aas
fists
shl
pop
das
jns
xor
xchg
int3
or
mov
mov
inc
and
inc
xchg
add
lods
daa
out
rcl
sub
in
mov
repz
aas
inc
lcall
movsb
and
cwtl
les
pop
mov
sbb
push
jbe
gs
inc
push
jns
cld
mov
repz
es
jbe
testl
in
mov
add
loopne
push
arpl
leave
push
adc
cli
dec
pop
and
test
lret
pop
iret
in
movsb
mov
addr16
lods
jne
test
xor
mov
es
scas
add
ficoms
push
divl
enter
mov
jle
lcall
pop
mov
or
mov
lret
sahf
rol
shl
push
mov
cwtl
dec
add
cld
mov
push
addr16
sub
pop
js
repnz
and
mov
in
mov
ds
nop
xor
ja
mov
inc
push
lret
adc
fsts
clc
dec
jne
inc
push
jl
xchg
xchg
shl
pop
cld
incl
pop
mov
ficomps
testb
clc
pop
mov
jb
and
adc
clc
mov
test
sbb
mov
cmpsl
arpl
in
xchg
pusha
incb
cmp
adc
adc
imul
lea
data16
sbb
ss
mov
leave
insb
mov
cwtl
jl
nop
js
lea
pop
outsl
push
mov
movsb
cmpsb
ljmp
and
pop
xorl
lds
pop
and
andb
ds
jbe
sub
mov
mov
inc
fs
adc
int
lahf
push
push
adc
xchg
jge
out
cmpsb
das
sbb
push
faddl
sahf
jns
rcl
mov
or
mov
add
sbb
sub
cli
mov
pusha
cmp
in
mov
and
inc
jbe
adc
jmp
aaa
cmp
inc
xchg
outsb
xor
pop
insb
inc
push
and
jl
or
mov
test
push
jo
outsb
test
in
xchg
into
jecxz
stos
adc
cmpsl
mov
out
sub
mov
push
push
int
out
rorl
int
add
hlt
sti
mov
icebp
orl
inc
sbb
out
mov
into
mov
jbe
divl
or
out
lahf
loope
jo
jl
cmp
xchg
inc
orl
jno
jecxz
adc
add
adc
dec
and
cmp
ret
gs
movsl
push
scas
cs
add
ret
lret
loopne
xchg
popf
push
mov
fists
movl
adc
xor
jnp
xchg
cld
mov
adc
push
push
fiadds
mov
jmp
inc
jle
mov
add
push
mov
pop
icebp
cmc
movsl
dec
sub
pop
lret
mov
lret
dec
jb
clc
push
int
cmp
and
fidivrl
js
mov
cmpsb
xchg
cmp
xor
icebp
shrb
or
dec
mov
das
lahf
push
popa
mov
mov
push
cmp
popf
inc
sub
or
rcl
jmp
push
data16
cmpsl
fwait
mov
sub
mov
jno
xchg
out
jle
pop
inc
out
mov
inc
in
jg
into
push
fcompl
mov
mov
mov
mov
xor
into
js
mov
out
xchg
cmp
mov
dec
lods
gs
gs
dec
sbb
pop
movsl
push
cwtl
imul
stc
out
jno
nop
jmp
mov
scas
sbb
bound
sbb
jae
nop
add
jmp
lcall
and
adcb
pop
in
mov
jl
push
pop
dec
shll
popf
pop
or
and
aam
push
pop
inc
call
mov
sub
imul
and
test
pop
pop
or
popf
push
or
cltd
push
or
mov
gs
xchg
and
fnstsw
pop
inc
xchg
sub
mov
mov
outsl
lcall
lock
mov
mov
loop
decl
lcall
cmp
sbb
mov
dec
jae
fisubl
fwait
scas
push
sbb
mov
stos
movsb
or
ficomps
push
pop
pop
inc
cmp
popf
xor
call
call
mov
cmc
dec
inc
pop
popa
push
and
mov
adc
cli
loope
pop
lds
rcl
mov
dec
out
andb
xor
xor
pusha
sahf
and
push
cmp
cmp
mov
and
jmp
pop
pusha
push
mov
shll
add
loop
es
test
mov
aaa
repnz
orb
repz
mov
adc
and
movsb
loop
fs
mov
in
sub
jne
popa
adc
in
mov
pop
fsubr
mov
mov
fcompl
rolb
sti
or
mov
mov
int3
push
out
lods
arpl
ja
sub
push
pop
adc
dec
push
pusha
xchg
pop
and
ljmp
dec
mov
xchg
dec
or
jno
ret
dec
addb
push
cmpsb
jno
xchg
mov
out
and
sub
out
dec
sbb
arpl
ljmp
bound
test
push
daa
out
in
inc
movsb
test
enter
out
mov
mov
or
mov
sarb
sub
xchg
cmpsl
mov
mov
pop
dec
out
shlb
clc
addb
loope
inc
fld
or
jns
or
push
mov
pop
movsl
sbb
dec
xchg
cltd
aaa
data16
imul
or
test
cltd
push
scas
icebp
mov
dec
nop
inc
jle
and
xchg
mov
mov
lods
or
test
fwait
repnz
xchg
adc
dec
shrb
xchg
dec
pop
bound
xchg
push
pop
aad
aam
and
mov
pop
aam
ret
arpl
xchg
stos
stos
mov
mov
dec
mov
xchg
in
in
jle
jle
jns
insl
dec
push
mov
loopne
int
push
sbb
push
jecxz
inc
cmp
out
sub
jae
es
mov
push
mov
fs
leave
sbb
cmp
int3
stc
sbb
sub
adc
int3
dec
hlt
sti
das
xor
out
adc
sub
dec
lock
jo
in
pushw
out
add
lret
pop
ficoml
inc
ret
add
sub
and
and
in
stc
hlt
mov
mov
dec
jmp
loope
add
test
and
xchg
daa
pusha
popa
out
xor
mov
fisubrl
gs
pop
jae
add
cmp
lret
outsb
mov
into
jge
lcall
xchg
loope
fdivl
jae
and
cmp
push
out
adc
lea
sahf
andb
push
int3
out
hlt
jmp
repz
stos
mov
or
in
push
inc
jp
cmp
stc
sbb
jb
mov
push
push
testl
mov
hlt
push
bound
bound
arpl
loope
xor
lock
mov
stos
fdivl
addr16
pop
sub
cmp
jo
nop
cltd
movsl
xor
fs
and
or
inc
mov
dec
pusha
out
dec
lret
dec
inc
cwtl
xchg
xchg
clc
mov
cmp
div
pop
ret
fsubrs
push
into
jb
and
rcr
in
pop
or
shl
adc
push
jno
xchg
fadd
jmp
aaa
add
dec
cmp
xchg
subl
iret
gs
add
cmp
testl
popf
sub
out
jbe
xor
mov
pop
aaa
je
pop
jno
dec
stos
adc
and
jne
ret
push
out
mov
je
iret
loop
fidivrs
fmuls
and
sbb
rcr
cmpsb
mov
and
dec
fs
rolb
sbb
xor
outsb
aam
cwtl
fsub
jno
xchg
xor
ret
js
fsts
out
push
xchg
pop
das
sbb
mov
push
pop
push
mov
push
into
jg
and
mov
repz
lods
fldl
rcr
jle
lret
xor
icebp
pop
inc
jge
addl
xchg
mov
xchg
mov
loop
jge
cmp
or
leave
jl
lret
cltd
lcall
mov
jge
mov
inc
pop
xchg
faddl
ds
cli
xchg
stos
cmpb
xchg
jb
imul
shll
sbb
lods
pop
hlt
insl
mov
sub
test
out
xchg
mov
lock
push
fidivl
dec
cld
sar
stos
xchg
imul
stos
add
scas
das
stos
push
xor
jne
inc
sbb
mov
cmp
mov
into
adc
cmp
inc
cmp
int3
lcall
jne
test
jbe
scas
mov
push
dec
pop
stos
dec
jle
loope
push
fdivrl
push
pop
mov
gs
cmp
cmc
cmp
sbb
adc
out
lret
cmp
outsb
adc
mov
mov
or
sbb
push
mov
push
push
sahf
cli
pushf
pop
mov
std
jmp
aam
jg
test
or
orl
inc
into
insl
out
daa
loopne
in
lea
repz
pop
orb
dec
mov
arpl
sub
lods
loop
add
aam
jnp
fsubs
sbb
insl
add
fwait
add
in
push
adc
push
ret
mov
in
sahf
dec
sbb
and
sar
dec
cmp
sub
dec
popf
mov
dec
out
icebp
push
mov
mov
outsl
sub
loop
lret
add
sahf
xlat
imul
mov
mov
mov
pop
clc
in
sub
fsts
pushf
leave
inc
xchg
push
mov
ljmp
lock
ja
imul
adc
pop
sub
fsubl
mov
inc
jmp
mov
cmpsl
shlb
sbb
lahf
imull
pop
jecxz
dec
or
ja
out
in
dec
les
sbbb
arpl
popl
cli
cli
pop
outsl
movsl
stos
push
in
lret
pop
fisubs
and
lods
add
adc
testb
insb
lods
es
xchg
push
lds
push
jae
mov
cmpsl
adc
outsl
sub
xor
push
mov
popa
stos
jl
iret
and
loop,pn
mov
ret
jns
sahf
repz
ljmp
dec
mov
ds
lock
mov
clc
mov
jmp
pop
jae
push
xchg
dec
xor
adc
je
les
popf
loopne
push
mov
mov
cmp
and
sub
add
call
and
aad
popf
sub
loop
jnp
push
scas
sub
jmp
mov
cmpsb
lea
pop
aaa
push
or
inc
ret
xchg
fstps
jecxz
ss
xchg
sub
pop
add
int
pop
xor
sub
movsb
mov
shrb
ds
jae
jg
aad
lcall
dec
push
mov
insl
pop
out
rcrl
lds
mov
xlat
xchg
fmull
cmc
out
dec
xor
xor
push
jbe
cmpsb
add
dec
std
and
sbbb
xor
adc
jp
mov
sub
inc
out
or
cmp
push
lea
ret
dec
mov
lods
mov
or
mov
cmp
leave
pop
aas
rcll
jae
xchg
inc
je
ja
aaa
mov
or
pop
mov
mov
push
mov
xor
pop
mov
iret
ret
jae
fnstenv
test
lea
sbb
sub
icebp
mov
leave
test
repz
in
das
jmp
push
ret
push
xor
push
data16
aas
sub
pop
mov
in
movsb
adc
jl
dec
sti
das
dec
sbb
outsl
mov
hlt
lret
push
int
jp
xchg
je
lods
fmul
scas
lds
mov
inc
daa
dec
cmpsb
ss
adc
jbe
mov
mov
cwtl
xor
ret
decb
jbe
inc
ret
jg
dec
mov
rorb
addb
cmc
imul
push
out
cmp
aam
lret
outsb
dec
mov
insb
sbb
pushw
repnz
pop
lret
ficomps
mov
jecxz
sub
sti
xor
sti
jmp
dec
jl
jge
movsl
jbe
ja
ret
mov
cld
rorl
and
inc
cs
fcom
pop
jbe
jge
jae
dec
sub
mov
lcall
push
dec
cltd
cmp
push
jno
test
stos
jbe
outsl
out
not
in
popa
in
iret
mov
dec
mov
push
push
cwtl
inc
data16
push
inc
ss
imul
push
push
cli
scas
out
jae
dec
in
mov
push
stc
add
cmp
not
inc
out
fdiv
push
or
dec
je
cmpsl
daa
adc
cld
xchg
movsb
inc
rclb
in
lods
int3
dec
nop
mov
jmp
nop
lcall
in
and
sub
pop
daa
out
jbe
xchg
cmpsb
xor
scas
sbb
and
push
jb
adc
out
pop
sti
jmp
xchg
jo
cmpsb
jp
add
clc
fisttps
pushf
mov
jp
iret
push
mov
bound
stos
mov
pop
sub
sbb
xchg
repz
or
or
jecxz
fsubrs
add
pop
dec
inc
push
outsl
sbb
cli
fisttpl
add
fbstp
cli
mov
or
and
xchg
std
lret
bound
hlt
mov
push
int3
test
inc
daa
mov
stos
cld
shll
pop
stos
dec
sub
xchg
loope
ret
jmp
sbb
inc
inc
cltd
cli
int
cmp
stos
mov
pusha
popf
out
jb
repnz
sub
xchg
and
dec
sub
arpl
ror
js
cltd
rcll
adc
imul
icebp
pop
pop
jmp
add
dec
fstpl
adc
and
sbb
es
cmp
test
xor
sti
mov
pop
loope
fsubrs
daa
sarb
mov
push
jecxz
aad
fsubs
pop
inc
addr16
xchg
and
ss
loop
jo
or
clc
mull
enter
inc
adcb
ja
push
in
mov
jmp
pop
xorl
rorb
mov
mov
mov
push
sub
adc
push
push
add
fsubp
pop
push
mov
cld
clc
mov
xor
xor
fists
call
loope
jns
dec
pop
js
lahf
daa
mov
clc
mov
fnsave
xor
add
push
mov
push
fstl
lret
das
xlat
jg
je
repz
fadds
dec
mov
push
push
repnz
or
out
mov
push
jmp
in
cmpsl
push
nop
cli
popa
out
mov
fldenv
sub
inc
or
inc
pop
scas
xchg
addl
and
test
xor
mov
mov
imul
andb
cmpsb
fisttpl
mov
adc
shrw
pop
add
inc
jecxz
mov
mov
in
notb
push
xlat
xchg
mov
push
mov
out
mov
sbb
loop
dec
cmp
or
dec
sub
out
push
mov
pushf
pop
cmp
mov
aad
ret
xor
rorb
mov
jecxz
xlat
xchg
adc
outsb
xchg
inc
sahf
mov
push
push
adc
pop
es
jp
pop
data16
repz
negl
lods
aaa
sbb
movsb
ficompl
push
js
dec
testb
add
enter
xchg
adc
test
stc
mov
mov
fs
push
lds
cmc
xor
gs
adc
mov
stos
ss
sti
jp
mov
pop
scas
outsl
mov
out
jo
data16
or
jnp
lahf
dec
fsubrl
dec
adcb
fdivrp
int
addb
pop
mov
adc
xor
adc
cwtl
gs
ret
popa
jnp
cmp
xchg
and
call
xchg
aam
sbb
xor
cli
dec
adc
fs
mov
and
or
sub
mov
push
mov
sub
add
mov
xchg
xor
test
loop
inc
mov
and
push
dec
xor
cli
insb
sub
add
clc
addr16
inc
addr16
inc
scas
sbb
js
mov
or
stc
xlat
xchg
jbe
in
aaa
sub
sub
cmp
mov
mov
push
test
loope
sub
push
mov
dec
jmp
fcmovu
pop
lea
sbb
jne
adc
adc
pop
cmp
mov
stc
adc
pop
xchg
xlat
repz
aam
pop
mov
jb
jl
in
gs
int
loop,pt
or
adc
push
dec
scas
orl
mov
stos
sbb
jae
icebp
mov
inc
mov
mov
ljmp
jne
mov
dec
shl
add
pushf
push
scas
push
jmp
ret
sub
pop
ljmp
aas
test
aad
lret
mov
cmpsb
out
rclb
push
sbbl
push
das
mov
adc
add
outsb
data16
notb
sub
add
pushf
mov
xor
mov
shll
sub
lods
enter
adc
push
lret
push
cmc
jne
and
mov
gs
arpl
scas
das
movsb
or
sti
mov
adc
pop
popf
pop
pop
adc
push
xchg
gs
push
jp
sub
jge
es
aas
xor
rclb
dec
popf
mov
adc
nop
and
dec
inc
inc
mov
pop
leave
shl
add
pop
adc
stos
or
cmpsl
xchg
or
loopne
imul
dec
add
sbb
enter
outsb
dec
mov
les
loope
sub
xchg
out
jmp
bound
ret
arpl
sahf
mov
loope
jp
jecxz
and
inc
push
cmpsb
mov
and
testb
lea
sbb
out
mov
jbe
adc
mov
adc
push
aaa
or
sbb
sub
mov
and
stos
mov
lock
pop
sbb
cmp
ds
dec
repnz
pop
inc
jne
fcmovnb
insl
loope
dec
and
push
mov
mov
addr16
mulb
enter
cmp
cmp
pop
xor
leave
jmp
mov
popa
std
mov
push
add
sbb
aas
jae
cmp
pop
push
xor
push
or
cwtl
daa
mov
clc
es
loope
xchg
dec
pushf
cld
fnstcw
cmpsl
andb
hlt
sub
jmp
jae
sbb
dec
pop
pop
xchg
lcall
push
scas
jne
pop
fdiv
fmuls
testl
repnz
out
lahf
jbe
sarl
or
into
dec
mov
frstor
and
dec
test
test
ret
hlt
jmp
cmc
lret
popa
mov
sbb
out
ja
out
repz
mov
jmp
dec
movl
cwtl
cmpsl
or
je
add
cs
jmp
mov
cs
add
mov
sub
xchg
test
sti
mov
mov
push
cld
leave
sbb
stos
aam
pop
push
add
jb
scas
pop
adc
and
adc
fistps
sbb
popf
scas
mov
pop
and
inc
ficoms
or
pop
repz
fistps
dec
lret
loope
cs
inc
inc
out
inc
adc
mov
int
mov
jg
aas
xor
sub
or
xlat
push
movsl
scas
add
or
bound
xlat
cwtl
imul
mov
sbb
imul
imulb
mov
jge
sbb
in
push
in
jl
jecxz
mov
pop
push
push
testb
andb
aam
mov
loopne
adc
popl
mov
mov
dec
mov
shrl
pusha
xchg
or
mov
sub
out
into
mov
repnz
push
fnstsw
push
jb
scas
sub
gs
or
xchg
xchg
push
shrl
ss
mov
xchg
addr16
jmp
loope
arpl
movl
inc
fnstcw
inc
pop
cmpsl
lcall
scas
xor
mov
jno
lods
mov
jecxz
ss
and
xchg
pushf
std
scas
sub
cwtl
popa
enter
adc
loop
clc
push
sbb
out
clc
daa
in
sbb
in
jae
mov
loop
test
sbb
dec
dec
test
xchg
into
imulb
loop
jecxz
inc
out
mov
jnp
clc
jne
movsb
dec
mov
inc
push
mov
enter
pop
mov
fisubrs
pop
pusha
pop
mov
cmp
aas
mov
insb
xchg
pop
add
mov
mov
sbb
push
xadd
adc
mov
bound
loopne
lds
cmpsl
icebp
out
mov
mov
cmp
jl
jns
add
push
push
aaa
cmpsb
pop
rcrl
lock
ret
xor
fsub
fcoms
cmp
popa
add
push
add
cmp
xchg
test
popf
adcb
testb
jnp
xor
mov
out
mov
fdivrl
push
or
mov
push
fnstenv
cmp
dec
aad
pop
push
adc
sarl
popf
sub
repz
sti
dec
mov
dec
rol
jp
push
jne
mov
pop
sbb
pop
pop
dec
mov
xchg
test
mov
inc
xchg
jno
jl
sub
add
sub
mov
fidivl
mov
jmp
and
adc
mov
adcl
pop
add
aad
mov
dec
int
in
lret
xchg
or
jb
or
fisubrl
mov
cmp
push
pop
push
sbb
push
xchg
xchg
cltd
xor
fists
mov
push
and
mov
into
fadds
and
loop
aas
adc
push
sti
ljmp
sbb
in
arpl
dec
add
cmpsl
sarb
fld
aam
cmpl
ficompl
leave
int3
subb
sbb
add
in
aas
fadds
jns
jae
sbb
push
stos
xchg
mov
or
mov
test
or
pop
jmp
dec
shrl
jne
sbb
in
mov
mull
or
pop
mov
movl
inc
mulb
in
cmp
push
xor
inc
rcrb
sub
dec
cli
shrb
push
pop
ret
mov
je
jne
mov
jge
xchg
mov
jb
cs
dec
clc
repz
inc
add
test
jmp
loop
xchg
stos
inc
movsb
mov
lret
and
mov
mov
fwait
lcall
xor
mov
fisubs
pop
cli
lock
mov
ret
and
outsb
pop
popf
sub
inc
dec
jecxz
mov
jmp
gs
aad
push
xorb
xchg
ret
jecxz
jecxz
outsl
cmp
jge
dec
adc
inc
ja
icebp
dec
and
mov
hlt
add
jo
add
jne
mov
mov
xlat
or
jo
imul
jp
mov
or
or
int
add
mov
sahf
add
xor
push
lcall
xchg
mov
mov
in
int
outsb
adc
jnp
xlat
dec
push
cmp
xchg
lea
pusha
fdivp
cmp
pushf
mov
or
add
scas
vpmuludq
xchg
aam
xor
into
sub
dec
icebp
sub
repnz
or
insl
adc
popf
cs
fld
jg
xchg
ljmp
repz
adc
mov
jmp
inc
mov
xlat
mov
cs
in
adc
or
sbb
inc
add
addr16
push
fwait
mov
arpl
jmp
or
nop
jmpw
pop
jmp
adc
stc
inc
popl
adc
xchg
mov
sbb
xor
xor
std
punpcklwd
roll
and
jae
shll
xor
and
nop
mov
pop
cs
jbe
or
cmp
push
xchg
and
mov
xchg
xor
jecxz
arpl
lock
gs
jae
data16
in
xchg
out
popaw
or
sub
push
sub
pop
add
adc
mov
int
sub
mov
lods
outsb
ret
and
cmp
popf
mov
jb
push
add
and
sahf
cmp
loop
arpl
cmp
or
push
cs
insb
out
cli
aaa
mov
in
out
sti
dec
pop
loopne
hlt
jmp
jmp
cmp
les
add
lock
mov
pop
pushf
frstor
out
cli
cmpsb
mov
punpckldq
jg
mov
sbb
mov
dec
lahf
or
xor
dec
or
cwtl
and
orb
and
mov
stos
sahf
dec
dec
jl
fstpl
inc
imul
in
ja
sbb
shll
adc
dec
dec
loope
push
dec
jae
xchg
sub
nop
in
in
and
cli
lcall
in
cmc
pop
sbb
mov
jmp
jmp
cmpsb
test
mov
add
aaa
pop
pop
addb
mov
sub
dec
dec
jnp
sbb
pop
push
jo
dec
jp
sub
jmp
adc
popf
mov
inc
cltd
jg
pop
xor
sbb
in
lcall
mov
cmp
imul
stos
mov
lret
dec
xchg
lahf
stos
dec
mov
das
dec
dec
es
mov
cld
call
mov
imul
jmp
mov
cmp
sbb
jo
or
add
push
jmp
repz
lret
jne
fwait
mov
daa
sbb
mov
pop
scas
mov
inc
xor
and
inc
adcl
mov
fistpl
fisubl
ficoml
fwait
lret
test
mov
bound
nop
and
push
mov
sbb
add
aam
pop
sti
inc
addl
add
xchg
inc
test
push
or
rorl
sub
inc
cmp
xchg
mov
mov
sub
push
iret
mov
lock
imul
pop
push
push
jne
add
fidivl
mov
xor
insb
sub
mov
gs
ret
ss
out
add
jae
fisttpll
jl
xlat
sbb
addb
jb
popf
cmpsl
sub
cld
lods
cmp
es
cmpsl
mov
dec
jp
and
xchg
sahf
test
push
adc
movsl
mov
int
in
xchg
shll
rcrl
pop
xchg
pushl
xchg
into
dec
pushf
rcll
jmp
mov
addr16
mov
shll
push
and
push
mov
xchg
js
cmpsb
das
dec
clc
cwtl
cmc
call
add
push
push
jg
jecxz
and
test
mov
outsb
mov
mov
mov
lret
or
je
cmpsb
sub
jl
repz
pop
jecxz
xor
rorb
push
lods
jp
cld
imul
sbb
movsl
bound
add
push
dec
mov
popa
cltd
sahf
mov
int
packssdw
adc
jle
mov
mov
lahf
scas
mov
mov
subb
aaa
fcoml
mov
pop
cwtl
jg
mov
cmp
loope
mov
aad
sahf
sbbb
or
xlat
das
mov
clc
adc
mov
jb
aad
sbb
insl
ljmp
jecxz
push
enter
and
mov
push
imul
cmp
and
int
add
lahf
fdivs
aad
push
push
int3
insl
mov
gs
repz
xlat
inc
int
int
sahf
das
in
sbb
daa
xor
mov
cmpb
add
xor
lahf
stc
pop
int3
sbb
aas
mov
push
mov
mov
mov
arpl
jno
lock
xchg
xchg
xchg
dec
daa
pop
mov
gs
imull
or
jecxz
loope
dec
out
add
and
in
addb
lods
adc
xor
adc
lods
sub
mov
popf
add
xor
jg
jecxz
jl
call
repnz
mov
aaa
insb
insl
jbe
xchg
push
or
insb
out
pop
jmp
mov
andb
arpl
ficoms
addr16
add
push
sbb
push
pop
push
into
lret
adc
testb
fs
lods
fwait
shl
dec
mov
add
cmc
add
lret
rclb
or
por
cmp
cmovp
sbb
mov
movsl
stos
sub
and
lds
and
bound
sub
pop
les
jnp
add
ret
xor
push
mov
jbe
incb
aad
nop
push
and
mov
xchg
insb
xchg
push
xchg
inc
lret
jno
int
add
sbb
data16
gs
aaa
out
aam
mov
pop
std
and
mov
in
shl
dec
adc
push
hlt
mull
lea
inc
addr16
nop
lahf
and
leave
pushf
jmp
lcall
ss
test
cmp
divl
mov
or
mov
xchg
icebp
mov
repnz
fwait
addr16
jmp
test
xchg
hlt
dec
pushf
push
sbb
inc
and
mov
pusha
or
mov
or
mov
push
adc
xchg
add
jne
xor
pop
loope
punpckldq
or
mov
adc
sti
pop
pop
mov
cmp
rolb
jmp
sbb
movsl
fldcw
push
jge
daa
ja
xchg
int3
inc
sti
dec
fdivrs
xor
push
xchg
sarb
call
xchg
lret
dec
adc
pushf
sbb
sbb
cmp
cltd
neg
sbb
and
stos
lret
sub
mov
pop
lahf
gs
jecxz
pushl
mov
aas
jnp
std
enter
test
lcall
mov
push
sahf
fdivl
dec
cli
pop
scas
loope
dec
stos
enter
push
pop
outsl
fimull
add
sahf
inc
roll
mov
adc
daa
aaa
gs
sbb
push
mov
mov
xbegin
jne
fwait
jl,pt
or
mov
push
pusha
xlat
xchg
test
inc
movl
mov
das
rcl
imul
outsl
call
loop
insl
sub
xor
lret
mov
adc
enter
jecxz
imul
imul
push
subb
push
sbb
or
mov
dec
loopne
fdivl
jl
push
xchg
add
in
adc
stc
xlat
mov
dec
jb
mov
add
and
adc
xor
mov
mov
lods
insb
cli
aas
mov
sbb
and
push
adc
and
add
pop
jge
and
xchg
sbb
scas
mov
dec
push
push
test
pop
inc
outsl
ss
sbb
push
int
inc
mov
mov
popa
pop
ss
pop
cmp
xchg
sti
pop
adc
mov
jecxz
pop
adc
adc
mov
flds
aad
scas
andb
and
adcb
add
movsb
mov
loope
pop
jl
ffreep
jb
xchg
mov
sbb
ljmp
mov
test
popf
lds
mov
fwait
cmp
lcall
mov
jb
bound
cltd
fisubrl
push
lock
jg
scas
jae
call
mov
xor
mov
sub
daa
lret
div
int3
add
push
pop
cmp
pop
dec
adc
aad
out
jl
mov
pop
jo
mov
fnsave
fsts
jp
shlb
or
sub
and
cltd
jae
fwait
clc
nop
pop
into
mull
aam
dec
mov
jo
sar
insb
inc
pop
cmp
test
push
and
les
dec
jecxz
jns
lcall
pop
pusha
sbb
or
loopne
aad
sysenter
inc
mov
and
mov
cmp
sub
shll
push
cmp
fists
addb
xor
jp
and
fcom
mov
dec
lods
jmp
or
and
dec
dec
inc
repnz
add
cwtl
and
push
and
fiadds
cwtl
fs
sub
jns
cmp
dec
cwtl
outsl
out
jge
arpl
cwtl
jb
fcoml
add
mov
xchg
fwait
pop
pusha
mov
or
xorl
movsl
lret
sub
aad
scas
adc
mov
js
movsb
mov
movsb
in
sub
rcrl
mov
xchg
nop
popf
fwait
push
jecxz
ficomps
loopnew
push
mov
test
scas
lret
ljmp
pop
fisttpl
jg
out
mov
outsl
ret
icebp
jecxz
scas
test
inc
add
js
jo
daa
cwtl
sub
xchg
xor
mov
loop
jle
push
push
es
aad
outsl
jae
test
imul
test
mov
add
jmp
xor
imul
loop
or
sub
and
sub
shrb
xchg
add
xlat
jl
sarb
in
xchg
lcall
lret
rol
jne
sub
stos
jb
out
or
in
cmp
repz
jge
pop
xor
adc
mov
movsb
rcl
pop
jb
push
movsb
push
add
loop
addr16
xlat
imul
xorb
and
add
das
pop
pusha
inc
cmpsb
sbb
das
shrd
ds
out
mov
jnp
add
jg
jno
and
pop
mov
shl
mov
sbb
inc
fs
jg
call
push
sub
es
jnp
xchg
xchg
or
sbb
fdivrs
shlb
lods
mov
jp
jns
jmp
fistpl
jg
jg
outsl
inc
fs
movhps
int3
and
and
shl
ja
jbe
mov
add
jns
pop
mov
pop
in
jb
adc
es
data16
data16
jo
xchg
xor
or
out
movsb
in
test
jno
adc
fxtract
popa
inc
push
pop
cmp
fsubrl
cmc
sbb
out
inc
cmp
add
mov
mov
insl
cwtl
outsb
rclb
or
jmp
mov
xor
dec
cmc
stc
insb
pop
stos
dec
cmc
push
mov
push
mov
mov
data16
outsb
adc
jae
jge
jno
xchg
loopne
icebp
add
repnz
mov
and
stos
testl
dec
dec
xorl
fdivs
lahf
xchg
pushw
cld
outsl
inc
sahf
inc
dec
clc
fdivrs
sahf
lahf
mov
add
jb
loop
push
cwtl
imul
mov
and
inc
cmc
test
xchg
inc
and
sub
sbb
mov
xor
xor
push
stos
adc
fdivr
push
pop
ss
mov
les
lds
dec
push
inc
ud0
mov
lahf
ret
nop
sbb
stos
jmp
xor
aas
mull
push
imul
mov
pusha
aad
lret
test
int3
and
repnz
or
aaa
bound
lods
sub
ret
cld
jle
xor
inc
jno
lahf
jl
hlt
mov
test
jo
add
add
add
enter
test
and
mov
jmp
cld
xacquire
adc
or
mov
fcmovne
mov
mov
clc
push
mov
sbb
addl
aam
insb
pop
outsl
dec
aas
pop
repnz
js
lcall
mov
jle
repz
sub
push
and
jecxz
lds
mov
pushf
fbstp
nop
je
lahf
out
hlt
and
push
cmc
xchg
nop
ret
jg
and
sbb
das
ss
test
cmp
jno
rolb
jnp
pop
loopne
in
in
in
mov
stos
sti
aas
mull
xorb
fcoml
mov
push
or
mov
cmp
xchg
xchg
pop
dec
xchg
nop
out
sarl
lods
dec
aas
mov
es
repnz
es
lods
mov
test
jno
outsl
dec
mov
add
bnd
dec
xor
outsl
fmull
jbe
mov
push
push
jno
dec
mov
in
and
jbe
addb
pop
jno
or
shrl
mov
cmp
or
or
push
stos
outsl
jmp
mov
xchg
mov
jns
mov
mov
negb
jmp
cs
push
push
mov
jo
adc
adc
lods
iret
imull
add
adc
call
inc
movsl
lea
cmp
outsb
dec
das
ret
sub
sbb
and
xor
cmp
mov
add
inc
pop
int
test
and
test
out
lds
stos
pop
mov
cs
loope
dec
inc
fcmove
iret
dec
in
loopne
or
dec
or
xchg
imul
addb
flds
int3
jbe
mov
iret
or
inc
xchg
pop
cmp
cli
xchg
dec
test
pop
pusha
mov
int
add
or
pop
js
jno
mov
mov
dec
and
xchg
mov
jecxz
push
push
mov
arpl
mov
pop
jg
je
loop
outsl
inc
jbe
dec
mov
cmp
loope
push
inc
or
test
subl
insb
or
mov
pop
insl
iret
lods
pusha
mov
inc
int
pop
scas
movsb
xor
aas
test
cmp
add
cli
dec
mov
in
jmp
pop
test
inc
fwait
adc
fcomi
jnp
jmp
push
adc
out
rolb
mov
adc
fstpt
jg
push
pop
cmp
jae
ret
or
shrl
sub
mov
lds
idivb
rorb
testl
fnstcw
shl
fcomp
fisttpl
push
mov
push
iret
imul
fs
xchg
mov
fwait
sub
clc
jae
rol
or
push
imul
mov
cmp
cmp
adc
pop
loopne
aas
xor
inc
out
push
and
shll
outsb
cmp
subb
mov
fdivs
sbb
jae
add
and
dec
movsl
sbb
das
mov
fcmovnbe
rcrb
leave
popl
push
sbb
and
cwtl
mov
cld
mov
std
fwait
push
or
movsb
inc
xor
std
sbb
iret
cltd
out
popf
add
push
rcr
loopne
mov
jmp
push
fildll
and
ss
into
icebp
clc
adc
adc
xor
lcall
xor
push
divb
adc
leave
push
repz
push
xor
dec
shll
mov
adc
jne
dec
sbb
or
xorb
lods
int
insb
cmc
pop
les
mov
add
cmpsb
mov
into
inc
mov
xchg
loopne
adc
push
repnz
xchg
nop
aaa
push
or
adc
cmpsl
hlt
add
mov
sub
push
mov
inc
test
mov
inc
push
pop
sub
mov
sub
mov
pop
es
dec
and
pop
aam
mov
es
xchg
popf
lock
mov
lock
xor
mov
xor
xchg
xlat
std
cmpl
jecxz
inc
mov
mov
pop
idivl
pop
jae
lcall
push
cmp
jecxz
mov
or
jmp
push
ss
pusha
push
mov
psubw
cld
sub
repnz
aas
and
and
imul
ds
test
cmc
into
jns
xchg
pop
push
inc
sub
test
je
mov
jns
movsl
cltd
ror
out
sbb
scas
scas
push
cld
add
inc
cwtl
sbb
xor
cmpsb
push
insb
push
aam
mov
es
push
sbb
pop
dec
movl
jp
or
inc
sub
pop
sahf
mov
push
and
xchg
cmp
cmp
dec
xchg
jae
add
icebp
push
add
jmp
outsb
hlt
sub
push
jo
out
orb
cmpb
loopne
popf
xchg
js
sti
call
push
xor
js
mov
jne
pop
mov
pop
sub
push
scas
pop
pop
dec
lds
pop
or
sbb
adc
std
sbb
and
loopne
xlat
rep
rcll
dec
fdivrp
popa
mov
mov
jns
daa
jecxz
stc
call
adc
enter
mov
fsubrs
push
jns
stos
int
je
int3
or
out
mov
cld
mov
add
pop
xchg
insl
scas
aas
push
or
push
jbe
inc
xchg
popa
sub
clc
das
pop
out
and
sbb
dec
loope
icebp
insl
or
mov
sti
push
sub
pop
pop
xlat
or
sahf
xor
xchg
jmp
shrd
jo
adc
pop
in
enter
movsl
cs
movsb
pusha
or
add
adc
mov
mov
pop
loop
push
loopne
sbb
scas
cld
ret
cmpsb
loop
jmp
stc
xchg
nop
pop
xchg
mov
or
xchg
inc
and
rol
add
cs
and
neg
addl
lods
push
xchg
mov
jne
jns
insb
movsl
pop
or
cmpsb
sbb
aad
stos
jae
pushf
stos
test
fucomip
jecxz
test
or
in
es
imul
mov
or
loopne
mov
enter
shll
gs
das
and
xchg
scas
incb
pop
xchg
pop
adc
pop
or
jmp
sub
or
repnz
xorb
into
into
iret
stos
cmpsb
imul
mov
and
fsub
js
sub
jo
pop
push
enter
in
push
mov
fcmovnb
mov
andb
mov
add
sahf
pop
push
or
sbb
adc
xor
jnp
or
repz
xor
daa
nop
sbb
add
fnsave
jge
adc
mov
sub
and
mov
in
pop
mov
dec
mov
ss
dec
insl
jle
push
ljmp
dec
pop
jle
into
add
bound
add
pop
aas
jge
sub
mov
inc
mov
pop
or
in
and
xchg
add
hlt
sub
fldl
out
push
fisttpll
xor
lock
cli
push
pop
push
push
sub
scas
in
push
std
xchg
or
lret
sbb
fnstsw
gs
andb
inc
mov
mov
add
jnp
movsb
std
clc
rolb
jns
inc
fcoml
imul
push
xor
xlat
ret
jmp
pop
mov
stos
cmc
rclb
adcl
test
jno
dec
add
jp
out
xchg
jmp
addr16
jmp
rorb
mov
call
mov
int
rorl
inc
repz
clc
push
lods
fisubl
push
pop
fnstsw
cld
jno
xchg
lea
pop
sbbb
cmp
jg
sahf
outsl
mov
das
scas
das
into
divl
adc
sbb
and
push
aad
sbbb
daa
es
cs
xor
rep
mov
pusha
in
dec
pop
arpl
sbb
adc
sarb
lret
sub
ja
popl
dec
ja
ss
lea
movsl
js
sti
ds
or
jae
sub
ljmp
orb
sarb
sbb
stos
xchg
lods
mov
sahf
sub
lea
mov
adc
bound
xchg
out
js
mov
push
cmp
lret
cmp
cmp
jnp
adc
sbb
jg
xchg
mov
jp
sbb
cltd
fs
pop
std
aas
dec
inc
mov
xchg
xchg
or
call
shrd
ss
scas
inc
pop
aad
imul
mov
pop
mov
inc
outsl
popf
cmp
daa
inc
adc
mov
ds
cmpsb
repz
loop
testb
xor
hlt
jbe
pop
cwtl
pop
sbb
cli
jne
push
inc
sahf
xor
imul
or
test
dec
or
add
rorl
clc
xchg
xchg
in
fcoms
dec
lods
mov
sbb
inc
into
adc
xor
stos
int3
sahf
mov
pusha
pushf
inc
or
jecxz
mov
jns
icebp
les
pop
inc
les
sbb
adc
push
in
inc
in
cmpsl
add
outsl
pop
pminub
mov
fidivrl
xor
ss
aas
repnz
pop
nop
mov
xchg
loopne
sbb
push
mov
sub
popa
popa
pop
add
xchg
mov
ljmp
xchg
ljmp
mov
sub
jge
out
out
dec
fucom
gs
ljmp
daa
shl
or
je
stos
movsl
test
mov
fsts
jmp
aam
call
rorl
cmp
jbe
mov
sbb
sub
xor
xchg
test
xorb
pop
pop
xchg
push
stc
call
push
pop
fucom
cmpsl
dec
cmc
jg
sub
jo
mov
pop
adc
inc
std
xlat
shll
jnp
cli
in
test
test
enter
jl
cmp
test
lahf
xor
cld
add
sub
mov
dec
and
mov
ja
fisttpl
xchg
push
out
in
mov
aad
aad
mov
aas
call
fisubl
ds
push
test
add
cltd
pop
jns
dec
aad
in
xchg
xchg
xlat
loop
pop
out
aad
pop
push
jo
add
dec
rcrl
mov
es
dec
mov
adc
in
les
xor
lcall
xchg
faddl
or
mov
xor
call
hlt
and
sbb
cmp
mov
mov
pushf
inc
push
push
sub
pop
stos
cmp
mov
and
sub
mov
notb
popf
insl
mov
and
jbe
stos
es
stos
jecxz
movsb
push
jge
movsb
dec
or
sti
mov
jb
fnstenv
mov
dec
push
sbb
pop
sbb
lcall
jbe
pop
and
mov
sub
test
adc
cmp
bts
dec
and
jecxz
gs
sbb
test
push
call
mov
out
icebp
roll
adcl
in
dec
ret
pop
out
add
mov
dec
push
movsb
mov
xchg
mov
in
and
inc
push
stos
scas
addb
push
sub
lock
xlat
loop
inc
sbbb
dec
add
jnp
ret
les
sub
add
arpl
into
lcall
pop
push
mov
sbb
and
mov
sbb
cmp
rcr
rcrb
xchg
adc
pop
repnz
jg
and
add
push
adc
push
loope
je
sub
push
popa
or
xchg
movsl
inc
cmp
cmp
mov
out
adc
ret
mov
aas
pop
je
shlb
mov
cmp
sti
int
insl
push
lods
xor
jg
dec
xchg
xor
sub
pop
xor
sti
mov
fsubs
adc
jge
sbb
les
dec
sub
cs
leave
rclb
pop
sub
sahf
cmp
insl
loop
insb
test
push
adc
inc
push
fadds
and
pop
mov
dec
fcoml
lahf
fwait
es
cltd
mov
das
lret
pop
shrl
mov
lds
add
arpl
out
imul
jp
mov
mov
ret
mov
lret
lock
loope
js
test
icebp
adcb
negb
or
or
sbb
xor
adc
mov
ljmp
sbb
dec
bound
imul
mov
bound
cmp
out
xchg
iret
in
ds
mov
mov
dec
sarl
push
repz
fnstcw
fistpll
cltd
ficompl
dec
sahf
lods
out
mov
xor
ret
jno
jo
mov
je
cmp
sub
ret
jns
ss
jmp
lock
imul
xor
popa
push
pop
lock
ret
or
lcall
jno
xchg
pop
popa
aas
out
mov
mov
outsl
sub
adc
xchg
mov
cmp
inc
xchg
dec
dec
dec
and
jae
pop
call
stc
js
scas
lret
mov
push
or
ja
jo
pop
inc
shll
or
dec
sub
mov
adc
in
or
loopne
mov
outsb
mov
rcr
das
scas
bound
jnp
or
jp
outsl
clc
sbbb
dec
xchg
xchg
rcrl
hlt
cmp
mov
xor
loop
jno
nop
mov
test
sbb
cmp
imul
and
and
mov
xor
adc
push
push
xlat
ficomps
and
adc
aam
and
daa
dec
pop
mov
bound
mov
sub
or
loop
inc
dec
mov
xlat
fadds
rolb
enter
inc
jbe
sub
inc
nop
jecxz
in
loop
lea
mov
scas
jne
andb
or
fcmovnb
outsl
fcmovne
dec
loop
adc
add
push
mov
jmp
or
jecxz
dec
push
ss
in
jge
ds
dec
ss
mov
xchg
pop
js
pop
mov
sahf
sub
or
jbe
or
xchg
mov
not
sbb
ja
lods
cli
sub
jecxz
sub
jb
push
pavgb
xor
ret
jmp
sub
das
mov
mov
cmpsb
in
popa
add
mov
jle
ss
mov
sbb
daa
lock
pop
ret
adc
fidivl
mov
lds
and
push
sbb
and
je
icebp
push
stos
cmpsl
push
mov
sbb
mov
bound
sub
add
or
idiv
add
adc
xchg
sti
mov
jg
adc
int
pop
cmpsb
mov
imul
xchg
cmp
push
jns
pop
jbe
cmp
les
ja
in
mov
sbb
cmc
xchg
or
mov
xor
rolb
pshufhw
jae
mov
cld
in
pop
cmp
mov
xchg
jo
mov
les
mov
mov
insl
xabort
mov
or
cltd
xchg
jmp
cmc
xor
aad
sub
in
xchg
in
out
test
icebp
dec
shr
lea
ljmp
in
and
xchg
xor
push
mov
shll
xlat
pop
xchg
mov
mov
jno
xchg
cmp
xor
pop
cmp
ficompl
add
mov
sti
loopne
mov
dec
cmp
inc
sbbl
mov
cmp
mov
cmp
adc
stc
rorb
js
push
hlt
arpl
mov
out
pop
sbb
push
sbb
flds
cmp
mov
dec
or
and
or
popf
pop
push
ret
ja
cmp
loope
lea
jl
add
mov
sub
gs
push
adc
rorl
les
push
jbe
mov
decl
sbb
jmp
aas
mov
mov
dec
bound
fdivs
sbb
icebp
cld
sub
mov
xchg
jl
int3
sti
pop
repnz
push
inc
xor
fimuls
lds
dec
adc
faddl
mov
fcmovb
sbb
add
iret
pop
lcall
fsubrs
dec
sbb
jecxz
call
inc
mov
mov
shlb
jns
test
push
cli
in
or
push
sub
xchg
shrl
jmp
int
push
rol
iret
jae
es
leave
jo
xchg
xor
jno
shll
cld
sbb
push
ret
cmpl
dec
into
push
inc
ja
jg
push
adc
and
out
mull
testl
and
cmp
mov
fsubrl
aam
int3
xchg
test
sbb
jae
es
xchg
lods
and
sahf
pop
ds
adc
xchg
add
mov
jae
jecxz,pt
arpl
pop
mov
cmpsb
fildl
xbegin
dec
repnz
and
adc
ljmp
iret
mov
mov
lahf
sbb
in
mov
pop
and
push
inc
lret
fnstenv
cmp
loop
dec
iret
pop
mov
cmp
or
fnstsw
hlt
bound
sub
pop
fwait
aaa
xchg
dec
stos
pop
inc
in
cmp
mov
xchg
mov
clc
mov
sub
fimuls
pop
mov
lahf
stos
push
mov
jne
ja
and
insl
ljmp
mov
xchg
xorl
mov
andb
test
test
and
sbb
add
clc
cmpsb
xchg
or
into
pushl
test
add
lret
jae
push
pop
aam
sub
mov
xchg
hlt
in
push
cwtl
push
sbb
std
test
out
fstpl
add
test
push
and
fstpl
jg,pt
bound
lcall
hlt
jge
stc
aas
shr
xor
cmp
test
xor
mov
xor
pop
aas
cmpsl
insl
lret
test
jb
mov
imul
mov
mov
clc
jnp
dec
call
cmp
cmpsb
pusha
sbbl
inc
push
pop
loope
mov
mov
orl
shlb
adc
loope
int3
mov
repnz
mov
sub
and
lea
jecxz
cmp
mov
ret
xor
in
pop
in
dec
or
jno
pop
ss
push
mov
movsb
xor
mov
cltd
rcrb
xor
cmp
ja
outsb
or
mov
sbb
andl
pop
and
adc
filds
test
mov
out
jmp
sbb
mov
mov
xchg
adc
fcomi
gs
pushf
mov
test
mov
jp
inc
loopne
shrl
push
fs
loope
mov
push
jns
and
pushf
sbb
dec
fldt
xor
sarb
into
les
sbbb
fidivrl
jecxz
insb
fdiv
mov
mov
cmpsl
inc
and
fistpl
fcompl
push
push
rorb
sbb
mov
rclb
negb
xchg
dec
fsincos
fsubrl
lcall
sbb
and
cld
lret
dec
fnstenv
mov
or
or
repnz
lods
cmp
mov
inc
xor
fildll
je
fldl
or
psrlq
out
insb
pusha
daa
test
mov
pushf
adc
lret
pinsrw
cmp
stc
mov
adc
cmpsb
jb
or
cmp
mov
out
pushf
aaa
cmp
inc
jl
xchg
pop
neg
mov
and
cmp
sti
pop
movsb
jmp
inc
xchg
xchg
add
jbe
call
jae
fisubrl
mov
push
ret
dec
pop
inc
imul
mov
test
insb
add
inc
jp
or
jge
movsl
subb
xchg
gs
xchg
loopne
aad
iret
ds
test
lds
inc
and
fsubr
pop
push
jg
cmp
mov
jbe
adc
jg
xlat
xor
arpl
and
in
aam
mov
push
inc
sub
mov
xchg
outsl
push
lea
sub
jp
jae
into
sub
push
jle
xor
or
cmc
jae
cmp
mov
mov
jnp
mov
sbb
inc
mov
jg
pop
ljmp
mov
icebp
icebp
shr
pop
inc
in
mov
dec
inc
insl
dec
xlat
jbe
or
call
out
test
push
pop
cmp
mov
fisubrs
xor
mov
mov
stos
or
cld
cltd
shlb
lret
inc
pop
test
cltd
lret
arpl
push
or
sub
lret
xor
or
jle
pop
out
mov
clc
mov
adc
fsubrp
pop
xchg
nop
clc
sbb
cmpsb
fcomps
and
fs
testl
lahf
daa
xchg
dec
rol
sahf
fisubrs
lea
int
fidivl
dec
pop
cmp
cli
fcompl
cltd
adc
xchg
push
filds
aad
inc
test
jmp
das
inc
test
jp
imulb
popa
xchg
clc
clc
cmp
add
stos
test
sub
and
mov
push
js
repnz
jecxz
pop
xchg
int
jmp
gs
lods
mov
mov
lock
cmp
lock
jl
cli
scas
pop
test
repnz
pop
and
xchg
call
lods
das
cmp
cmp
mov
enter
pop
ret
pushf
dec
roll
and
dec
pop
stos
leave
repz
dec
test
push
adc
lds
cmc
push
xchg
xchg
sub
loopne,pn
pextrw
inc
insb
fcmovnbe
or
jbe
rdtsc
xchg
xchg
sbb
lret
sub
sahf
leave
mov
pushf
adc
jp
into
pop
dec
cmpsl
sub
sbb
addr16
sbb
mov
cmpsl
movq
stc
imul
adc
add
outsl
mov
xchg
lahf
or
add
sahf
jle
pop
out
std
push
arpl
nop
loope
shrl
rcl
push
xor
fwait
xor
jge
stc
stos
aas
jno
sub
fimuls
or
fisubrs
stos
lret
or
in
or
clc
outsl
cmp
ljmp
mov
loopne
inc
cmp
in
loop
stos
orb
dec
lret
ds
push
pavgb
fs
ficoml
imul
adc
test
push
fcoms
pop
add
fstps
push
jns
xor
rolb
xchg
or
mov
inc
inc
cmpsl
xchg
adc
add
push
pop
mov
std
jb
pop
sub
sub
inc
daa
mov
and
fs
insb
cmp
or
push
mov
mov
pushf
mov
jno
fistps
jb
xchg
idivl
dec
add
mov
mov
pop
add
shrb
or
int
stc
test
pop
mov
adc
dec
mov
loope
daa
and
jmp
add
pop
cmp
xor
xchg
cltd
sbb
xchg
ljmp
jnp
add
pop
dec
cmc
ljmp
cmp
and
pop
mov
repnz
sbb
and
fisubrs
adc
cmp
mov
mov
ds
adc
cmpsb
xchg
aaa
dec
gs
out
mov
ljmp
ds
cli
dec
std
cs
lret
or
mov
mov
outsl
inc
test
enter
or
or
insb
sub
push
mov
jp
scas
xor
cltd
idivl
je
nop
push
add
jge
and
pusha
pcmpgtd
ja
loop
push
dec
sub
repz
add
popf
out
addl
cmp
or
imul
aam
adc
xchg
rcrl
xlat
sbb
or
arpl
xor
imul
iret
gs
test
test
in
inc
sub
cmovb
arpl
jp
iret
mov
push
inc
hlt
stos
pop
push
insl
movsl
add
js
xchg
out
xor
xor
idivb
movsb
jnp
xorb
mov
push
je
gs
popf
xchg
mov
pushw
xor
push
stos
jg
push
xor
mov
push
mov
push
push
in
sahf
xchg
xor
add
dec
movsb
mov
adc
sub
rcrb
jge
jp
ret
int3
mov
pushf
lods
aad
test
or
int
cwtl
jmp
dec
aaa
test
dec
ficomps
push
pop
fidivrl
leave
aad
xchg
aaa
mov
mov
in
xor
outsb
xorb
mov
mov
loope
pushf
sub
push
lahf
pop
jb
sbbb
and
sbb
xor
cmp
adc
xchg
sub
pop
cmpsb
push
loopne
mov
ss
in
lods
divl
out
dec
outsl
les
cwtl
mov
dec
mov
lea
incb
aam
loope
jg
pop
in
jecxz
data16
sbb
cltd
arpl
push
nop
push
cmpsl
sub
frstor
or
inc
sub
push
aaa
or
cmp
adc
lret
mov
pop
loopne
sub
out
notb
xchg
inc
inc
dec
mov
call
push
dec
ficomps
mov
fmuls
cltd
testb
test
sub
add
enter
fistpl
xlat
inc
or
mov
dec
pop
inc
mov
ret
push
mov
into
add
sub
xchg
lahf
sub
push
in
or
insb
pop
dec
cmp
test
jne
fwait
xchg
mov
inc
adc
int3
iret
add
les
jo
jbe
std
repz
lcall
call
or
jb
xchg
adcb
or
mov
rorb
ret
mov
shrb
sbb
es
ss
or
sub
int3
and
cld
mov
and
fs
decl
ficompl
cmp
ret
pop
ficoml
pop
adc
out
out
int3
sub
push
inc
cld
rolb
test
mov
sarb
test
push
dec
jmp
hlt
leave
ret
addb
int3
push
adcl
ds
mov
dec
and
cmp
pop
fdiv
test
xlat
aad
push
mov
in
sub
hlt
sub
dec
mov
pop
lea
adc
shll
movsl
pop
adc
cltd
or
loop
fwait
aas
stc
jle
pop
jbe
dec
fisubs
pop
negl
and
cmp
pop
fwait
lds
pop
inc
xchg
and
outsb
mov
ret
in
inc
addb
in
adc
mov
jge
or
lds
push
imul
insl
orb
mov
jge
fidivrl
mov
add
lods
mov
cmp
inc
les
aad
cmpsl
and
mov
out
mov
ss
mov
in
inc
iret
aam
lcall
imul
push
dec
or
cmc
cmp
mov
push
sbb
rcr
aaa
pop
xor
mov
pop
outsb
imul
popa
mov
sub
xorb
loop
repz
xchg
sbb
xor
outsl
jnp
jns
sbb
sbb
lret
lds
dec
cmc
push
mov
imull
out
inc
pop
nop
xchg
mov
insb
sub
out
push
cmp
dec
popf
daa
cmc
or
sbb
add
inc
scas
test
jb
inc
xchg
fsubs
mov
jb
dec
inc
loop
dec
stos
mov
mov
addb
mov
popa
dec
aad
sub
dec
mov
popf
pop
repz
jge
arpl
hlt
push
mov
lods
sarb
mov
cltd
or
aas
lock
jecxz
push
je
mov
add
adc
out
jo
es
test
add
push
inc
aad
dec
gs
test
lock
push
push
stos
mov
nop
pop
mov
scas
test
out
jecxz
xlat
pop
daa
mov
cmp
mov
stos
sahf
dec
scas
ljmp
mov
test
adc
xlat
out
cmp
sbb
ret
lods
adc
jbe
mov
adc
fidivs
in
pop
fwait
shlb
xchg
pop
nop
call
cmp
rol
sbb
ret
sbb
or
cmpsl
cmp
mov
lock
les
popa
ja
lret
aam
push
addb
out
repz
mov
push
outsl
fs
sub
dec
imul
cmp
pop
mov
repz
loopne
lahf
punpckhbw
mov
or
xchg
ret
lea
dec
test
mov
xchg
out
sti
gs
and
pop
in
adc
push
cwtl
pop
xchg
xor
shl
movsb
andb
rcll
sub
cmp
lods
loope
fistps
negl
adc
aad
push
inc
xchg
add
mov
push
aam
pop
insl
insb
psubw
outsl
jae
dec
shrb
arpl
jnp
aam
and
mov
mov
add
das
ja
xchg
loopne
nop
xor
mov
jb
ret
sbb
movsl
dec
sub
xchg
jg
mov
cs
xlat
or
push
sub
lret
out
dec
int3
test
sbb
arpl
in
push
loop
sbb
xlat
vmovapd
add
xor
jmp
outsb
pop
mov
pop
dec
xor
inc
subl
dec
mov
sti
test
inc
adc
pushf
loopne
or
adc
xor
nop
mov
out
mov
jns
cmp
dec
ret
cmp
and
cmp
in
cmp
push
lods
sub
sbb
jle
sub
and
in
and
and
flds
adc
xor
xor
aaa
loope
xorb
inc
movsb
fists
in
mov
fsub
clc
sub
iret
ret
repz
dec
notb
rcrl
in
leave
rorb
pop
fbstp
or
hlt
xlat
inc
push
loope
jmp
jl
mov
mov
and
jnp
lods
sub
or
mov
jo
mov
push
xchg
scas
repz
jb
bswap
out
jne
xchg
xor
movsl
xchg
xchg
inc
mov
pop
mov
lods
xor
cmp
push
cmp
pushf
or
stos
add
int3
fisubrl
test
test
cmp
loopne
test
fs
out
stc
xchg
jmp
xor
into
ret
push
mov
jns
jbe
repz
das
insb
pop
pop
cmpsl
fdivs
in
jge
pop
insb
enter
xchg
pop
or
adc
pop
dec
pop
test
outsl
mov
mov
imul
test
pop
push
add
pop
push
cli
bound
enter
and
lds
mov
rcr
xchg
enter
into
mov
mov
ds
test
stos
rorl
and
lret
test
inc
dec
int
sbb
icebp
cmpsb
xlat
movsb
test
mov
pushf
or
cmp
or
lret
mov
repz
jg
pop
scas
inc
pop
xchg
ret
imul
pop
pop
cmp
out
ror
popf
sbb
inc
sbb
cmpb
sbb
cmpb
adc
ljmp
dec
subl
out
mov
mov
push
inc
sbb
mov
cmpl
mov
push
mov
sbb
das
dec
add
cs
rcr
insb
iret
xor
inc
in
insl
in
arpl
hlt
mov
rolb
call
lret
push
fwait
adc
xchg
fimuls
cli
mov
in
jbe
movsl
push
test
sbb
sbb
cmpsl
push
or
mov
fistpll
add
sub
fwait
jecxz
xchg
lret
or
sbb
sahf
push
das
test
ret
cmpsb
mov
and
sbb
cmpsb
mov
popf
out
fists
and
lret
daa
dec
dec
rorb
mov
jae
mov
push
xchg
ret
scas
pop
xchg
loope
idivb
lcall
dec
push
out
bndldx
iret
add
or
cmp
aas
lods
push
ja
lods
in
xchg
ss
add
das
xchg
fmull
nop
cld
push
gs
fwait
mov
mov
daa
popa
jg
outsl
leave
cli
jno
ljmp
sti
xchg
jg
jns
enter
dec
dec
ja
cltd
sbb
add
adc
pop
jmp
movsb
lcall
pop
jbe
dec
aam
pop
jmp
jecxz
jb
loope
adc
jne
xchg
cmc
pop
fdivrs
adc
jno
ja
adc
stos
mov
fisttps
scas
sbb
xorb
fs
push
adc
inc
adc
xor
add
ds
push
jge
fdivrl
ds
rol
mov
insl
inc
mov
pop
lcall
mov
and
popa
call
sub
or
cld
outsl
mov
out
mov
out
call
clts
mov
mov
xor
popa
je
out
cmp
mov
mov
test
jmp
dec
cmp
adc
or
call
stos
hlt
mov
dec
adc
cmp
jmp
add
mov
jb
dec
filds
call
ljmp
push
gs
out
sub
lods
mov
sbb
dec
ds
add
dec
xchg
mov
adc
mov
push
loopne
enter
scas
push
cmc
inc
push
int
and
dec
xchg
or
test
xor
mov
dec
xchg
lds
loope
popf
das
insb
jno
lock
xor
sahf
enter
pop
jno
mov
xchg
fs
cmpl
lods
rcr
imul
mov
fwait
push
sub
dec
mov
enter
int3
or
jmp
jo
js
mov
cld
stc
sub
mov
scas
outsb
xchg
lods
push
mov
jae
push
test
leave
inc
fstl
mov
xor
cmp
adc
jns
sub
cmpsl
xchg
adc
or
adc
fsubl
fistps
and
repz
adc
pop
xchg
sub
mov
mov
loopne
test
jmp
rcrb
lock
push
inc
shlb
push
mov
sub
scas
pop
test
pop
mov
fidivrl
lret
movsb
xor
ja,pn
dec
mov
dec
addl
xor
jnp
icebp
jbe
shll
or
xchg
push
test
and
in
and
fisttps
xchg
fldcw
ret
pop
inc
int
jns
cmp
aad
or
mov
mov
cmpsb
jmp
sub
ds
inc
sarb
push
mov
lret
int3
js
stc
es
pop
jp
push
mov
not
out
sahf
add
dec
outsl
movsb
sub
add
and
and
jecxz
pop
jo
into
jle
nop
xorl
hlt
xor
stos
xor
test
dec
dec
xadd
loop,pn
nop
and
pop
in
jb
sbb
cmc
decl
les
push
inc
and
hlt
adcb
cwtl
dec
psubsw
lret
mov
inc
push
and
ds
addr16
fiadds
dec
dec
lods
mov
aaa
int
movsb
in
cmp
lcall
dec
sbb
out
jbe
in
adc
lods
push
push
lahf
ljmp
stos
jb
inc
and
lcall
fldl2t
push
mov
fbld
out
add
add
mov
sarb
inc
shl
or
andb
rolb
cmc
add
cld
out
adc
outsl
fcmove
xor
xchg
loope
dec
fstl
bound
std
sbb
fldenv
mov
or
xor
jmp
mov
hlt
jl
in
xor
cmp
pusha
rol
xchg
mov
push
push
sar
mov
jbe
and
mov
sub
movsl
xor
inc
pop
pop
jmp
in
es
in
int
ret
outsl
cld
xchg
es
imul
jecxz
adc
xor
mov
frstor
mov
cltd
cltd
adc
adc
dec
scas
xchg
call
std
je
xor
dec
daa
mov
xchg
fiadds
std
xor
and
jecxz
popf
rcrb
or
pusha
mov
mov
pop
dec
mov
mov
mov
add
or
fnstsw
jb
sub
clc
xchg
sbb
jmp
xchg
fildl
or
into
scas
jnp
or
movsl
jecxz
or
jbe
push
mov
bnd
dec
fcomps
imul
wrmsr
pop
stos
xchg
cmpsb
rcl
shll
jp
and
lcall
sahf
out
or
ds
push
sub
lret
ljmp
sbb
or
dec
cltd
stos
inc
jmp
insb
gs
dec
inc
iret
dec
and
fwait
mov
les
bnd
sahf
cs
into
es
pop
adc
notb
mov
into
mov
push
push
adc
mov
jae
xchg
sbb
addr16
adc
lock
daa
mov
rorl
fiadds
stc
jb
sub
out
in
adc
push
push
ficoml
pop
and
rorl
es
cmpsl
pop
int
fdivr
cmp
jecxz
pop
jecxz
and
es
outsb
lock
push
mov
add
mov
mov
add
and
inc
das
popf
mov
xchg
icebp
push
inc
aaa
cmpsb
and
mov
xchg
call
sub
and
mov
add
xchg
out
popf
leave
mov
in
push
mov
cli
aad
pop
adc
xchg
mov
lea
insb
dec
dec
sub
lock
in
mov
push
in
adc
sbb
cmp
ror
push
popa
cmpsl
mov
popa
popf
inc
es
iret
fwait
mov
mov
shll
or
jne
outsb
js
ficoms
mov
or
inc
push
shr
popf
addr16
bound
pusha
sub
sub
inc
mov
dec
xlat
test
aam
dec
aaa
int
nop
es
xchg
fisubrs
scas
and
movb
lahf
adc
test
mov
loope
scas
or
outsb
sub
jnp
xorl
xchg
cmpsb
ljmp
je
aas
push
es
xor
pop
pop
or
ss
mov
mov
lea
push
or
test
dec
adc
adc
mov
out
sbb
aad
sub
cmpsl
lods
sbb
pop
fs
mov
imull
sbb
shlb
cmp
mov
stos
xor
dec
pop
mov
out
lahf
sub
aad
pushf
sub
inc
add
jnp
pop
sbb
imulb
cmp
arpl
jnp
jae
adc
cwtl
pop
or
and
add
xor
pushl
inc
ret
cwtl
daa
sub
loop
fwait
sahf
pop
mov
ss
out
cld
xchg
lahf
in
cmpsb
mov
loopne
bound
push
rcr
frstor
mov
aad
jg
movsb
in
pop
xor
cmc
push
mov
insb
sbb
popf
xor
jmp
sub
scas
idivl
xor
cld
jne
rol
push
sbb
fs
mov
cltd
leave
pop
roll
daa
sub
cmp
sbb
jmp
movsl
sbb
jnp
lahf
push
sar
or
into
pop
call
out
sbb
mov
lret
jne
scas
pop
sbb
nop
call
popa
imul
ljmp
dec
jecxz,pn
pop
je
cmp
mov
push
jl
repz
out
jmp
add
lods
sub
jp
cmp
std
adc
cli
scas
js
fisubrl
mov
shl
mov
cwtl
push
dec
or
ret
arpl
mov
rolb
rclb
xchg
jp
cld
inc
hlt
in
cld
imul
mov
movsb
dec
icebp
adc
add
mov
adc
adc
jno
mov
push
pop
add
sub
test
xchg
jge
push
lock
lret
sub
xor
mov
sahf
xchg
cmc
pop
jg
and
roll
fiadds
mov
jne
push
mov
imul
add
mov
decb
into
loop
sbb
dec
xor
xor
xchg
jp
popa
outsb
aas
pop
fwait
mov
setg
mov
out
pushf
shlb
out
fs
imul
sub
mov
negl
push
xchg
jge
imul
lret
or
fbstp
mov
pusha
repz
dec
jecxz
adc
mov
push
xchg
mov
rcl
cli
fistpl
rorl
cmp
shll
inc
mov
xlat
cwtl
push
push
xchg
pop
movsb
mov
outsl
cld
dec
sub
lods
cmpsl
pop
add
sahf
cwtl
xchg
xchg
iret
mov
and
fidivrl
inc
or
sbbl
fsubp
pop
ljmp
add
sbb
mov
xor
push
cmpsb
xor
test
enterw
jb
in
fbstp
clc
cli
repz
jge
or
popa
insl
data16
dec
dec
pop
and
sbb
adc
in
mov
cmp
ret
stos
xchg
ret
imull
adc
add
lods
popa
mov
ja
cmp
add
xchg
cmp
jmp
lahf
rorb
in
dec
popa
out
xchg
roll
fiaddl
push
cmpsb
jge
cmp
pop
ret
xor
popa
and
jecxz
ret
or
add
ret
in
pusha
imul
sub
mov
in
cmp
cmp
out
or
dec
out
mov
sbb
sub
pusha
push
in
aad
or
es
lret
stos
in
mov
jle
outsb
outsl
add
icebp
mov
sub
cmp
jmp
sub
sub
sbb
mov
or
push
sbb
inc
and
cmp
cmp
pop
mov
enter
sub
sbb
fsubl
sti
jge
dec
dec
subb
jbe
into
cs
je
rcrb
punpckhbw
mov
add
les
pushf
aaa
push
add
pop
cmp
aaa
xchg
mov
mov
push
push
mov
lea
mov
cmp
jmp
cmp
or
insl
mov
movsb
lods
out
xor
cmc
pop
push
pop
lahf
inc
sub
sub
mov
stos
pop
and
sbb
lret
ljmp
daa
ja
adc
sbb
lret
jae
cmp
movsb
mov
fisttpl
mov
push
insl
dec
incb
dec
cmp
inc
jmp
sbb
cmp
pop
popl
loopne
cmp
mov
mov
scas
mov
cmp
test
test
fs
pop
xchg
dec
out
adc
and
pop
out
arpl
push
cmp
pop
sahf
xlat
mov
mov
fwait
mov
addr16
mov
or
vpshuflw
cmpsb
push
add
mov
fisttps
inc
mov
mov
xor
sbb
adc
aaa
mov
int3
subl
mov
dec
rcl
mov
mov
jg
test
mov
push
lods
lret
gs
into
mov
int
push
mov
imul
in
dec
and
pop
faddl
or
rcll
mov
and
jno
dec
jg
imul
int3
lods
mov
cmp
sbb
xor
hlt
mov
inc
rolb
popf
jno
cld
lods
xchg
ja
cmpb
outsb
inc
ffreep
pop
mov
inc
sub
jle
repnz
sbb
ljmp
aaa
lret
sahf
and
add
outsl
imul
iret
es
inc
xor
jg
cmc
sbb
clc
pop
sti
lods
fwait
lods
insl
mov
or
mov
mov
adcl
mov
ds
jae
adc
xchg
lea
xor
cmp
or
imul
push
dec
mov
aas
in
cmp
sub
into
cmp
jnp
sbbl
movsb
int
add
pop
push
jle
mov
outsl
adc
mov
clc
jb
or
loop
sbb
dec
xor
adc
mov
cld
cmpsl
lods
push
mov
mov
push
testb
lods
xlat
lcall
rcll
mov
sbb
aaa
fs
movzbl
mov
scas
dec
jge
mov
and
jb
xchg
jp
and
lods
in
xlat
out
and
scas
inc
lcall
inc
aas
xchg
push
mov
out
inc
adc
test
pop
pop
xchg
mov
inc
lcall
nop
lock
movsl
mov
push
fdivs
cmp
test
mov
mov
dec
ret
xlat
ljmp
daa
pop
maskmovq
divl
mov
xchg
hlt
pop
leave
pop
cmpsl
mov
jmp
cmp
not
je
mov
lret
add
leave
sub
cld
jo
cltd
xchg
jecxz
mov
jbe
imul
mov
sbb
popa
or
or
xlat
xor
pop
cwtl
mov
arpl
out
xor
xchg
sbbl
cld
cmp
nop
aaa
cmp
xchg
push
popa
jl
rcrb
dec
lea
out
mov
cld
pop
push
xor
mov
push
mov
notl
adc
popa
out
subps
mov
sti
pusha
or
cld
or
inc
gs
inc
andb
fldenv
lods
shl
sbb
lods
ds
mov
push
add
mov
adc
push
fsubrl
jno
mov
inc
sub
shll
loope
scas
aas
cmpsl
mov
inc
sub
xchg
setae
insl
lods
push
ret
pandn
cmpsl
push
xor
jno
movsl
inc
mov
imul
ret
cs
jae
daa
loopne
mov
adc
int3
pop
fmull
mov
cld
pop
mov
mov
bound
and
push
and
mov
push
adc
dec
std
lods
ja
pushf
int3
push
and
dec
push
scas
jp
popl
inc
popf
pop
notl
imul
mov
xor
xchg
pop
ja
data16
add
mov
xor
lea
cmp
idivb
pop
pop
dec
repz
jbe
pop
cmp
in
in
xchg
inc
add
addr16
dec
pop
shl
sbb
xchg
push
out
jge
push
call
insl
pop
dec
jl
mov
cwtl
inc
adc
repz
lods
push
lock
or
adc
fimull
cmpl
push
sub
adc
xor
mov
in
dec
mov
pop
inc
nop
xor
or
push
mov
push
in
adc
imul
lock
lret
dec
and
or
push
mov
sub
clc
adc
repnz
subb
cmpl
jae
fs
cmp
lods
xor
movsl
pop
cltd
sbb
mov
mov
aaa
jns
fimull
push
xchg
insl
sbb
test
push
loope
ja
xchg
mov
ds
cmp
xchg
shrb
mov
adc
addr16
jmp
xchg
push
push
ficoms
and
stos
mov
inc
filds
loopne
mov
lds
pusha
addr16
aad
add
push
je
jecxz
xchg
xor
je
cmp
loope
add
bound
outsb
or
icebp
xchg
jle
sbb
cmp
aam
mov
jge
push
jb
or
mov
subb
scas
adc
cli
jno
dec
mov
rcr
subb
or
adc
call
and
addr16
cwtl
lret
hlt
inc
or
int3
sbb
push
mov
or
aad
in
xchg
push
pop
lcall
sub
push
ret
dec
cmp
xchg
lds
andl
lock
dec
pop
subb
dec
xchg
call
ja
push
stos
cltd
pop
fs
push
mov
pusha
push
out
lock
ljmp
cmp
fucom
addr16
fnstsw
cmp
mov
scas
pop
mov
fdivs
daa
xor
jp
aad
xchg
lods
inc
push
adc
fmuls
loop
in
jae
fcomps
test
rcrl
popa
add
loop
push
pop
out
mov
leave
enter
adc
jg
jmp
dec
out
mov
cmp
cmp
push
inc
xchg
je
pop
mov
movsl
lret
gs
pop
add
lock
or
xchg
pop
negb
outsb
hlt
in
lods
jae
adc
loop
inc
inc
std
or
test
popf
dec
push
pop
xorl
pusha
pop
js
mov
pusha
je
xchg
and
rorb
sbb
cltd
cmp
jae
jae
xchg
inc
xor
jl
stos
dec
add
ret
mov
notl
rcrl
push
sub
fstpl
in
xchg
jne
xchg
lcall
and
jns
mov
leave
fnstenv
loopne
mov
fistps
in
xor
lods
dec
mov
mov
push
fucom
aas
or
repnz
sbb
pop
aas
mov
cmpsl
loop
sbb
cmp
int3
pop
scas
dec
and
mov
jg
or
pslld
int3
nop
je
cmpsl
push
add
shl
les
cwtl
repz
scas
cmp
in
adcl
lds
outsb
fsubl
out
mov
outsl
sbb
push
xchg
popf
outsb
adc
incl
jg
hlt
test
ja
or
pop
push
loop
fsubrl
shll
test
mov
mov
lcall
push
mov
dec
test
jns
and
js
leave
stos
add
sub
pop
aam
pop
mov
xchg
leave
inc
jmp
adc
insb
push
pop
dec
add
mov
orb
add
arpl
or
pop
rorl
xor
push
mov
inc
inc
lods
sahf
bound
add
sbb
cmp
insb
into
pop
push
xchg
dec
sub
repz
in
cli
pop
lods
sbb
stc
jmp
lods
lea
inc
sahf
andl
mov
lahf
dec
or
push
push
xor
addr16
xor
stc
pop
mov
xchg
std
out
mov
dec
cmp
frstor
popf
adc
inc
dec
out
arpl
pop
cmpsb
adc
call
adc
cmpsb
push
cmp
mov
dec
stos
aam
subl
rorb
sub
push
mov
mov
test
sub
mov
test
icebp
xlat
aaa
xchg
pusha
imul
lock
shl
mov
int
into
mov
clc
mov
in
test
push
pop
dec
push
mov
into
loopne
mov
cmp
sub
popf
aaa
test
ret
xor
mov
or
popa
push
aaa
jmp
ret
xchg
pop
mov
mov
pop
aam
mov
push
popa
inc
fiadds
mov
pop
subb
pushf
test
mov
mov
adc
addl
xlat
push
subb
jne
cmp
push
sbb
or
push
push
ret
xchg
pop
inc
inc
jae
cmp
cmpsb
inc
xchg
sbb
sbb
and
jmp
popl
out
mov
or
sub
test
and
mov
mov
inc
mulb
or
sbb
push
lret
sbb
jg
sbb
int
jecxz
pop
rcrl
sbb
enter
dec
mov
pop
mov
cli
push
push
clc
sbb
lods
push
add
cmp
push
cmp
frstor
ja
inc
sub
test
in
jb
out
jb
aad
dec
jnp
ss
mov
ljmp
test
js
lds
dec
out
stc
mov
scas
inc
stos
xor
cld
mov
addr16
pop
cmp
stc
add
sbb
jno
mov
lret
adc
mov
fisubl
std
push
pop
sub
or
jns
xor
scas
fwait
jmp
xor
fs
push
stos
mov
dec
inc
fbstp
loopne
insl
repnz
sub
push
and
adc
call
mov
loopne
cli
mov
fs
clc
mov
or
cld
push
les
daa
jo
jne
stc
insl
fcmove
add
adc
dec
sbb
push
jmp
cmpsl
mov
imul
loopne
xchg
xchg
sub
or
inc
push
cltd
cld
int3
pop
fmull
jae
jnp
mov
lahf
mov
inc
into
sub
mov
push
mov
or
loope
arpl
inc
mov
inc
push
stos
loope
mov
arpl
scas
mov
repnz
nop
sub
lods
push
jns
test
inc
cltd
or
xlat
movsl
pop
ficompl
cmp
xchg
xchg
cmp
mov
sub
lock
pop
fucomp
push
sbb
sbbl
xchg
mov
lcall
adc
cmp
sub
and
pushf
dec
jbe
or
inc
push
cmp
nop
ret
lods
cld
mov
leave
ret
xchg
cmp
pop
pop
sub
sub
push
scas
inc
es
mov
daa
or
mov
xchg
frstor
lret
mov
sub
mov
xchg
dec
pop
stos
jl
shlb
mov
arpl
mov
cmc
scas
stos
faddl
lods
xlat
testb
jmp
sbb
add
sub
and
adcb
std
in
lds
xor
fisubs
gs
jg
xchg
in
jb
cltd
mov
call
pop
xor
push
jo
sub
sbb
mov
rclb
adc
jo
call
cli
repnz
lret
hlt
subb
push
shlb
fisubrs
dec
and
mov
movsb
enter
adc
aaa
xchg
sbb
mov
pop
pushf
lret
cli
inc
addl
mov
xchg
aam
outsl
sub
js
cltd
or
ret
lret
int3
adc
sub
xchg
out
fcmovnb
mov
out
mov
adcb
insb
in
mov
rolb
outsb
pop
rcrl
mov
pxor
pushf
sbb
jno
inc
adc
inc
and
mov
cwtl
sbb
out
add
mov
arpl
add
adc
jl
inc
cmp
outsl
into
dec
sub
stc
and
inc
loopne
lea
xlat
mov
pop
into
xor
jno
push
mov
and
stos
cmpsb
das
fcmovnb
leave
in
inc
mov
pop
pop
repnz
and
sbb
fnsave
insl
nop
fldlg2
pop
mov
dec
adc
xor
mov
mov
test
mov
call
sar
jne
mov
push
push
push
mov
icebp
loop
and
jg
jnp
add
ljmp
xlat
outsb
mov
sub
leave
or
rcll
lret
mov
lret
xor
cmp
adc
cmp
lock
into
arpl
sahf
notb
pushl
mov
pop
mov
setb
mov
mov
mov
iret
xor
inc
or
cli
dec
xchg
enter
fmuls
pushf
sbbb
clc
in
adc
jmp
mov
inc
int
scas
arpl
or
adc
cmp
mov
or
mov
inc
pop
lcall
das
lret
mov
sarb
arpl
ds
lods
js
test
add
sbb
mov
or
fidivrl
pusha
jle
addr16
rorl
jl
dec
fisttpl
out
fstpl
dec
xor
mov
stos
aam
rcrl
in
xor
subb
cmpsb
ret
push
mov
xchg
xchg
push
mov
push
out
add
clc
pop
add
sub
jmp
int
mov
adc
mov
push
jo
and
dec
aam
or
fiaddl
fstpt
adc
in
repnz
or
dec
repnz
pop
sbbb
xor
aaa
out
clc
dec
or
dec
cmp
cli
daa
mov
stc
outsb
ljmp
rcll
fidivs
in
std
dec
test
clc
pushf
mov
ds
outsb
inc
ret
xchg
dec
ror
je
leave
pmulhw
sub
clc
loop
jmp
dec
cmp
daa
push
adc
inc
aad
or
cwtl
mov
orl
fwait
sbb
push
test
dec
adc
ret
push
push
mov
mov
xlat
arpl
or
jge
mov
sub
ret
std
imul
push
add
in
nop
xchg
repnz
adc
data16
and
and
mov
push
fs
inc
out
xchg
loope
fidivrl
and
shlb
add
add
enter
sbb
popa
mov
ss
jp
not
aam
leave
incb
sub
and
fistpll
push
xchg
mov
mov
mov
frstor
fnstsw
mov
xor
test
mov
mov
or
lret
out
cmp
cli
test
add
cmp
rcr
jnp
movsl
in
xchg
popl
test
imul
add
scas
lahf
lcall
repnz
add
or
loop
mov
es
mov
sbb
lods
rcrb
popf
mov
leavew
stc
pop
out
mov
cmp
test
pushf
sti
mov
int
das
lds
push
lock
or
adc
push
add
inc
lahf
shrb
fidivl
ss
pop
fiaddl
insb
mov
ret
mov
jmp
mov
or
xor
add
xchg
in
dec
inc
in
mov
lock
pop
inc
fimuls
fscale
sbb
insl
lcall
arpl
mov
es
fisttpl
pushf
dec
lahf
iret
cmpsl
xchg
adc
adc
dec
mov
xchg
cmp
jge
push
movd
shrl
mov
cmp
sub
cld
test
xchg
lock
insb
pop
jl
mov
and
mov
jne
sbb
jle
or
adc
stc
in
sub
add
fimull
call
push
mov
mov
sbbb
clc
pop
and
lret
push
sbb
pushf
fsub
in
pop
pop
pop
xchg
add
shrl
push
sbb
pop
cld
adc
rcl
push
sub
push
incb
les
xchg
nop
jge
push
dec
pop
orb
scas
jnp
pop
lea
inc
fs
or
insb
test
icebp
sbb
fsubrl
jae
push
mov
cmp
dec
mov
mov
xor
lods
subb
fstps
and
adc
jmp
loope
fbld
xchg
sub
lock
mov
mov
loop
roll
mov
cmp
inc
imul
or
scas
aaa
xchg
imul
sbb
loopne
ret
push
push
jl
stos
ljmp
pushf
rcll
lcall
add
xorl
call
xchg
out
or
arpl
movsb
shl
jg
aaa
dec
aad
mov
cmp
out
lods
adc
adc
js
cmp
inc
in
jge
xchg
jp
inc
ljmp
dec
cmp
sub
push
pop
adc
out
cmp
jbe
pop
scas
mov
loope
push
icebp
cltd
lret
add
cmp
mov
fildll
stc
push
jg
data16
scas
mov
cs
mov
outsl
imul
push
out
sbb
pop
mov
mov
iret
gs
scas
repz
idivb
adc
fbstp
pop
mov
cmpsl
jnp
out
push
gs
scas
sub
sub
int3
fisttps
lcall
pop
scas
daa
push
bound
pop
sub
add
add
dec
jg
xor
dec
imul
sarb
aas
outsb
dec
xor
sbb
fwait
push
adc
call
in
test
jp
dec
test
das
mov
pop
testl
bound
adc
xchg
shl
cwtl
mov
xor
mov
dec
xchg
or
insl
pop
and
cmp
push
cmp
popa
test
insb
xchg
sub
flds
xor
xchg
dec
mov
imul
and
mov
xchg
mov
adc
pop
pushf
decb
jp
pop
mov
test
pop
pop
repz
fs
mov
rolb
out
fldl
scas
lods
mov
sbb
in
jno
mov
push
mov
xchg
cmp
adc
or
cmp
jo
dec
pop
jae
mov
sub
mov
adc
icebp
mov
inc
js
out
mov
push
sahf
lock
pusha
bound
jg
cs
lcall
fidivl
rolb
lret
cli
xchg
lods
adc
sub
mov
jae
andl
mov
push
sbb
cmp
aad
jmp
imul
les
mov
stos
popf
and
fists
test
mov
cmpl
in
lea
pusha
mov
mov
mulb
sbb
cmp
shlb
fldl
or
cmp
arpl
xor
in
push
and
push
lods
std
cltd
cmp
addr16
lret
lods
jb
jle
test
xchg
pop
loopne
out
dec
sahf
ss
int
inc
sbb
pushl
mov
xchg
pop
push
push
sti
rcll
sbb
add
inc
push
jnp
mov
sub
stos
mov
xchg
adc
sub
adc
loope
mov
sbb
cmp
adc
dec
cld
cmp
xchg
cmc
loope
cmp
imul
push
in
or
inc
in
in
daa
cmc
and
es
lods
pop
loop
inc
sbb
in
ret
test
push
dec
fucom
xor
xor
add
jmp
notl
inc
mov
mov
daa
and
sub
arpl
fwait
in
pop
popf
aad
cmpsl
sbb
jmp
inc
add
xor
insb
inc
cmp
xchg
fadds
and
aad
pop
jno
mov
lds
cmpsl
and
sub
sbb
push
ficompl
or
lahf
adc
xchg
stc
das
hlt
ljmp
xor
pop
jg
loope
pop
imulb
lock
xchg
or
jecxz
mov
push
xchg
in
mov
clc
mov
push
xlat
mov
sarl
jg
insb
cli
imul
xchg
sub
fidivrl
dec
mov
xchg
rclb
mov
iret
mov
cmc
jecxz
adc
jecxz
lods
int3
lock
cmpsl
loop
rcll
das
stos
in
scas
inc
dec
jns
jbe
adcl
je
jo
pop
pop
movsb
cmpsl
fs
lret
cmpsb
repz
fdiv
pusha
ja
clc
inc
inc
mov
iret
jnp
ljmp
xchg
xor
pop
push
mov
test
fs
cwtl
lea
repnz
sbb
mov
cli
dec
das
gs
sti
fwait
les
loope
mov
inc
ffree
int
add
icebp
lds
sbb
adc
sbb
cli
jg
std
jp
ljmp
js,pn
movsb
mov
sbb
jg
sbb
adc
iret
dec
sarl
fs
ljmp
test
cmp
and
dec
inc
sub
aaa
and
cmp
jmp
push
daa
and
inc
cmp
dec
mov
mov
xchg
lods
call
ret
dec
rclb
mov
lods
stos
or
out
inc
ja
push
pop
push
xchg
or
fwait
test
popf
in
add
pop
fildl
dec
or
xchg
addr16
movsb
sar
call
fcoms
mov
pop
stos
data16
pop
pusha
push
andl
xor
cwtl
jbe
lahf
push
mov
daa
lock
std
sbb
adc
pop
jge
cltd
jg
pushf
repnz
outsl
jbe
mov
mov
pop
xor
mov
adc
ss
push
xchg
jbe
add
clc
and
dec
imul
sbb
int3
dec
fcmovnbe
add
inc
ret
test
or
adc
cmpsl
out
pop
sbb
sub
mov
dec
in
divb
into
imul
mov
add
imul
add
stos
std
les
call
shrb
push
add
fstpl
aas
negb
fprem
ds
ljmp
stos
movsb
lods
das
add
pop
cmc
addb
adc
sbb
pop
shl
jp
inc
jl
jg
or
pop
cmc
sbb
mov
shrb
cmpl
sub
je
xor
insl
sarb
enter
mov
jns
imul
mov
mov
in
fwait
sub
ret
jle
push
icebp
out
adc
xor
ret
mov
push
inc
pop
or
or
push
mov
adcb
rcll
push
jnp
not
lea
inc
pop
mov
pop
cs
xor
sbb
add
cmp
sub
dec
xchg
in
icebp
inc
adc
fsubs
sbb
mov
mov
ljmp
cmp
mov
add
cwtl
out
mov
dec
dec
push
stc
sub
pop
pusha
js
jmp
pop
xchg
adc
or
clc
cmp
fwait
sub
or
pop
sub
push
jecxz
ljmp
cli
lea
setns
push
mov
int
cwtl
lahf
or
push
add
mov
negb
push
aaa
xchg
aad
popf
adc
mov
ficoml
and
test
popf
stc
push
push
test
jae
pop
adc
aad
sub
xchg
dec
xchg
out
out
adc
sbb
inc
subb
aas
xor
out
xor
jg
sub
push
outsl
pop
fcmovu
lock
jg
aad
orb
jo
subb
rcl
sbb
rclb
jmp
dec
cltd
pop
cwtl
stos
in
roll
adc
lcall
ficomps
xchg
es
pop
xchg
dec
add
ljmp
xchg
xchg
cmp
jbe
fistpll
mov
or
cmp
scas
and
ljmp
orb
bswap
xchg
mov
js
lcall
add
inc
fsubrl
mov
nop
or
or
repnz
adc
push
pop
jp
aas
sub
and
mov
inc
rol
mov
push
dec
mov
jecxz
stc
xorb
or
mov
outsb
sarb
les
dec
jae
cli
lds
add
mov
add
aas
jnp
cmp
xchg
or
cld
xlat
mov
test
jmp
xchg
cmp
sbb
stos
xor
lds
or
in
push
cwtl
add
and
sbb
in
mov
cmp
lcall
add
mov
mov
insl
orb
sbb
mov
addr16
mov
add
or
iret
jge
jge
out
enter
sarb
out
pushf
jecxz
pop
daa
xchg
pushf
jp
lds
dec
mov
sbb
mov
test
add
xchg
push
push
jno
mov
cmpsl
jo
push
fisubrs
mov
out
xchg
scas
jmp
xor
ret
mov
adc
add
imul
lcall
in
or
mov
pop
inc
jle
hlt
dec
iret
in
mov
shlb
mov
mov
popf
inc
dec
fs
cmpsb
sbb
fnstcw
imul
dec
orb
add
ss
mov
inc
jnp
repz
add
add
popf
sub
push
jo
xor
push
jo
rolb
sbb
add
and
popa
jle
mov
test
xor
mov
ret
inc
jge
pop
aas
popf
cmp
add
dec
repnz
jae
mov
cwtl
stos
mov
imul
xor
lret
add
xor
add
mov
add
ret
fadd
ja
jl
addr16
sbb
inc
data16
test
xor
lods
inc
jae
pusha
fidivrs
jecxz
sti
les
fstps
in
and
stc
jnp
mov
enter
movsb
aas
lock
popf
fs
pop
jmp
xor
arpl
in
shlb
pop
cmp
jae
xor
xor
xchg
outsl
jno
push
dec
das
add
xchg
mov
push
lods
clc
cmp
daa
adc
lds
add
sub
xchg
mov
aad
les
sbb
insl
and
lahf
popa
jno
je
loopne
adc
mov
stos
cmpl
inc
fwait
xchg
or
sar
aaa
pushf
outsl
popa
pop
jle
insb
out
repnz
cmp
je
imul
cmp
sbb
inc
pop
mov
fistl
clc
out
pop
inc
jae
shrb
cmp
repz
sub
inc
mov
push
add
jle
xchg
faddl
pop
fimuls
popa
jbe
dec
test
cmp
xor
mov
repnz
arpl
jmp
shrb
mov
iret
push
ds
jecxz
sahf
inc
jge
sti
dec
aad
inc
sub
push
mov
mov
or
loopne
daa
jno
lret
shl
stc
dec
rcrl
mov
out
lcall
roll
mov
mov
mov
jg
mov
pusha
fcmovnu
std
sbb
lcall
mov
lds
push
ljmp
ja
jbe
xor
mov
jge
cmp
xlat
stos
adc
outsb
pop
lds
sub
jle
mov
xor
sbbl
lea
test
or
aas
dec
xchg
jb
not
or
sbb
add
and
add
popa
mov
sub
xchg
mov
and
stos
clc
or
jge
cmp
xchg
inc
nop
test
mov
sub
outsb
mull
cmp
inc
cmp
inc
dec
clc
cwtl
mov
movsl
seta
jno
dec
popf
pop
ret
push
inc
fsts
mov
push
addr16
cmp
sub
sub
mov
or
push
xchg
outsl
cmp
int
daa
iret
jecxz
add
jl
call
dec
or
xor
inc
and
push
sub
push
lahf
mov
rorl
orl
dec
fdiv
repz
fdivl
push
push
mov
adc
sbb
xlat
or
xchg
sbb
adc
inc
test
out
adc
push
test
test
dec
jle
shrb
std
fisttpll
add
insl
pop
call
adc
daa
das
lret
out
mov
scas
adc
jne
inc
jbe
mov
pop
out
sbb
xchg
mov
pop
cmp
ljmp
sub
or
loopne
sbb
decb
sub
jne
push
sub
inc
leave
xor
cmp
push
inc
sbb
and
stos
and
and
cmp
sub
adc
mov
push
out
fwait
jecxz
jo
enter
lahf
cmp
pop
jl
shll
xor
stos
ja
inc
movsb
loop
or
daa
fistps
mov
lods
jbe
sub
or
mov
mov
pop
lods
jp
pop
pop
es
dec
inc
bnd
or
movsl
int
cwtl
ret
cs
xchg
push
mov
or
jno
clc
dec
dec
jecxz
fwait
cmpsl
ret
aaa
adc
pop
mov
stos
jecxz
mov
jbe
stos
cltd
adc
iret
and
decl
sbbl
pop
push
or
out
vmread
xor
mov
lret
push
add
lret
fstl
scas
jb
push
repnz
js
int
dec
sarl
mov
aad
mov
adc
lret
repz
jns
xchg
dec
cld
fwait
dec
dec
fdivr
fmuls
xor
pop
mov
inc
dec
subl
dec
mov
adc
mov
lds
push
mov
sbb
pop
mov
add
mov
pop
xchg
sti
or
insb
cltd
icebp
shl
or
add
daa
xchg
and
ficoms
out
cld
sub
addl
cmpsl
mov
inc
sub
xor
jns
fwait
cmpl
jns
pop
gs
pop
repz
mov
inc
popl
jnp
push
cwtl
and
or
sub
enter
fwait
lret
gs
jmp
add
adc
xor
scas
or
inc
jbe
mov
popa
clc
fwait
jns
mov
mov
aad
push
and
xor
sbb
xor
mov
in
push
cmp
xchg
and
je
mov
xor
sbb
mov
push
icebp
xchg
adc
int3
aas
jl
sub
cmp
rolb
xchg
sub
hlt
fsubl
mov
xchg
add
lods
dec
xor
das
test
or
les
or
ret
jnp
loopne
out
adc
push
jge
sbb
jne
lock
shr
aaa
lods
lahf
xlat
in
ds
sub
inc
js
dec
imul
push
push
xchg
mov
mov
mov
inc
fstpt
cmp
imul
dec
xor
shl
lcall
insl
out
shrl
popa
xchg
or
pop
pushf
xchg
shrl
xchg
mov
xorb
push
popa
cld
fisttpl
adc
movsb
or
or
cmc
jle
cli
or
xchg
or
arpl
scas
push
daa
pop
andl
mov
in
loopne
fs
mov
pop
pop
jl
inc
push
out
mov
stos
or
and
scas
push
stos
js
adc
iret
inc
int3
pop
int
push
fsubs
movq
sbb
mov
lahf
sahf
icebp
dec
test
std
notb
sub
stos
sub
push
jbe
sub
pop
inc
push
push
cmp
scas
icebp
sbb
cld
sahf
js
xor
gs
and
in
mov
cmp
stos
repnz
dec
xchg
insl
sub
mov
mov
pop
inc
enter
add
leave
lock
push
iret
add
and
inc
adc
xchg
je
dec
call
ret
sub
dec
mov
addr16
cmp
jae
mov
test
sub
enter
mov
lret
outsl
cltd
inc
into
mov
in
jle
mov
hlt
dec
shl
bound
dec
popf
lea
jb
and
adc
jns
ficoms
or
test
push
mov
scas
pop
lods
aam
push
aad
mov
cld
cmp
lahf
jecxz
xchg
ret
pop
or
mov
sub
push
fs
pop
fsubrs
xlat
int
rclb
jbe
bound
mov
mov
mov
cwtl
lea
insb
decb
dec
xor
scas
pop
mov
repnz
mov
call
insb
dec
aaa
in
mov
mov
xor
inc
cmc
jl
test
xor
ret
popa
xchg
mov
int
inc
jl
idivl
mov
mov
int
scas
fxch
cmp
and
inc
mov
xor
pop
sbb
dec
jmp
movsb
mov
ret
out
ficompl
adc
dec
cwtl
ja
xchg
je
and
lds
cmp
push
inc
movsl
or
fwait
out
or
mov
jle
ja
ds
fsubrs
stos
pop
cmp
xor
xchg
add
sbb
inc
or
sbb
mov
in
outsl
data16
mov
repnz
and
mov
fwait
hlt
cmpsl
mov
xchg
ficoml
mov
icebp
addb
adc
rorb
push
sbb
repnz
test
es
mov
pop
or
xor
das
leave
in
mov
adc
imul
fdivrs
in
push
add
pop
xor
add
jb
sar
movsl
ss
and
add
loopne
movsb
mov
jp
adc
push
and
sub
mov
ja
mov
clc
mov
sti
sbb
dec
cmp
cs
nopl
gs
push
daa
cmp
mov
dec
ds
fmuls
pop
jg
and
or
test
out
xchg
inc
add
es
adc
xor
popf
aaa
or
lods
lret
jae
lahf
xchg
inc
mov
xchg
and
pop
adc
push
sub
mov
scas
ret
std
jnp
pushf
int3
js
xor
xor
fs
rcr
ret
xor
scas
sbb
les
mov
shl
loopw
mov
sbb
dec
cs
lds
pop
enter
loopne
jne
mov
push
test
push
xchg
imul
mov
lods
in
test
frstor
addr16
hlt
hlt
sub
call
pop
sub
mov
jae
pop
sub
shr
fnstenv
pop
xchg
test
and
dec
mov
xchg
cmp
add
lcall
daa
adc
mov
loop
out
add
flds
lods
fwait
outsb
mov
cmp
sub
mov
dec
test
jmp
enter
sub
mov
scas
aaa
xor
scas
jnp
dec
add
nop
jns
jg
addl
gs
jb
fisubl
and
and
ret
lcall
and
leave
mov
decl
rolb
xor
add
inc
sub
mov
pushf
xchg
adcl
dec
add
addb
dec
pop
sti
fsts
enter
daa
mov
mov
mov
or
and
cld
push
mov
pmaxub
std
popf
mov
sti
mov
xchg
mov
dec
sti
lods
mov
outsl
lret
lods
xchg
mov
mov
or
shll
adc
and
addr16
xor
lahf
ror
mov
xchg
push
in
es
pop
mov
sub
or
pop
repnz
outsb
jmp
jge
push
aas
or
nop
lea
cmpsl
lea
push
mov
bound
hlt
xchg
xor
inc
xor
push
sbb
ja
sbb
shrb
std
daa
push
or
in
pop
mov
jnp
fs
mov
subb
cmp
pop
popf
cmp
inc
sbb
xchg
pusha
mov
rolb
dec
test
je
jbe
cmc
ret
data16
lret
data16
mov
test
mov
mov
jecxz
data16
icebp
xor
pop
decb
sub
cmp
aam
add
and
dec
addr16
call
lcall
xor
pop
jle
push
mov
ret
mov
mov
clc
adc
push
in
movsl
pop
pop
stos
pop
fldl
and
fmul
testl
icebp
out
lcall
push
xchg
cmp
iret
xor
and
xchg
popa
or
hlt
fs
fstpt
ljmp
push
sbb
sub
and
mov
cli
xor
adc
and
add
sbb
scas
cmpsl
bound
dec
pop
sub
mov
dec
mov
test
lea
pushf
pop
lret
rorl
addl
insb
outsb
add
pop
int
mov
push
and
cltd
enter
mov
orl
test
fnstenv
imul
push
fidivrl
xchg
inc
mov
in
mov
je
aad
and
sub
mov
std
jnp
push
test
add
bound
sahf
popf
mov
pop
mov
je
imul
push
push
cld
jne
fidivrl
jns
test
cmp
fsubl
shrl
fsubl
add
cmpsl
in
cli
icebp
xor
push
pushf
and
xor
push
in
sub
shl
jle
dec
fisttpll
data16
cli
pop
lahf
xchg
movsb
insb
insb
aad
sti
aam
push
outsl
inc
mov
or
push
cwtl
cmp
loope
sub
or
cmpsb
ret
xor
cmp
pop
sbb
jle
cmp
sub
idivb
adcb
fistl
pusha
dec
cmpsb
xchg
out
push
and
fmuls
adc
ds
jnp
lret
shlb
adc
sub
sarb
inc
pop
ds
sub
cmpsb
xor
mov
enter
lods
test
or
add
mov
ljmp
stos
jle
stos
jp
fidivrs
int
sub
inc
lods
mov
imul
ret
xlat
imul
into
arpl
fbstp
mov
ja
or
call
xchg
lcall
adc
or
adc
stos
dec
xor
xor
inc
testb
clc
aad
aas
jo
pop
pusha
cmc
in
xchg
add
fwait
and
mov
inc
mov
fnstsw
out
sub
enter
inc
imul
ljmp
inc
mov
dec
jp
test
push
jae
dec
push
inc
push
mov
aad
out
lods
bound
cmc
adc
lret
mov
mov
lods
js
sub
pop
fdivp
inc
xchg
mov
stos
mov
insb
pop
shll
out
es
jnp
jo
int
dec
cli
jg
out
adc
adc
aaa
mov
les
jge
pop
mov
and
pop
pop
fsubs
mov
aas
jmp
mov
jle
cmp
push
call
adc
imull
std
sub
pop
mov
mov
or
test
fwait
jne
pop
pop
lcall
movsl
adc
adc
jnp
sbb
sbb
jbe
or
cli
in
into
rorb
gs
xor
fnstenv
cmc
or
sub
lcall
decl
sub
inc
dec
push
and
pop
hlt
add
push
sbb
cmp
testb
sub
cmp
jns
sub
movsb
sarl
outsl
loope
cmp
sub
enter
fiadds
push
sub
jg
into
pusha
int3
push
pusha
and
inc
sahf
lea
cmp
sub
inc
js
out
imul
jmp
lds
pushl
inc
add
lahf
mov
mov
fistps
sbb
xor
add
and
mov
add
push
sti
data16
cmp
int3
popf
bound
push
aas
push
in
push
pushf
dec
pop
inc
pop
fbstp
push
mov
aad
mov
mov
cli
push
inc
movsb
fisubrl
lds
lret
add
or
push
stos
jns
adc
outsl
rorb
push
sub
mov
mov
sbb
jne
xchg
xchg
fs
mov
mov
test
sarl
mov
and
sub
call
mov
dec
pop
add
aaa
in
mov
cmp
pop
js
dec
fistpll
sub
shlb
inc
jecxz
add
jmp
loope
and
adc
mov
decl
inc
sbb
dec
sub
mov
adc
mov
daa
sub
imul
push
imul
insb
xchg
rorb
es
cmp
mov
es
lods
pop
and
xchg
mov
ja
test
push
bound
mov
mov
mov
jbe
cli
mov
push
push
in
icebp
pop
cmpsb
dec
test
stos
adc
in
fiaddl
xor
out
and
pop
and
lret
pop
pop
lret
fisubs
cmp
aaa
jl
adc
mov
push
mov
push
mov
cltd
inc
sub
cs
test
inc
repz
out
arpl
pop
inc
insl
and
or
ja
mov
pop
aas
popf
in
push
push
jmp
lea
push
mov
out
push
xchg
cmp
loopne
mov
sti
cmp
iret
or
out
lcall
test
xor
cld
aas
in
notb
jb
fwait
out
sub
outsb
loop
aas
push
es
adc
fisubl
out
out
fisttpll
add
pop
mov
pop
cmp
mov
ss
or
or
inc
push
call
mov
outsb
push
test
in
cmpsb
outsb
data16
aas
ss
icebp
mov
and
scas
dec
int
dec
mov
xchg
lret
call
repz
xchg
xchg
push
scas
int
push
pop
add
cmp
inc
xor
lret
mov
gs
lock
outsb
add
pusha
add
and
rcll
jl
arpl
test
or
mov
ljmp
adc
addr16
addr16
repz
and
mov
add
jns
gs
and
test
outsb
rclb
jo
pop
in
mov
or
push
fstl
cs
js
roll
ret
lcall
cli
out
lret
add
or
lret
loop
and
rcl
aad
je
dec
lcall
dec
popa
jns
push
mov
xchg
cmp
dec
cmp
cld
insb
sub
lret
sbb
inc
adc
dec
ret
jle
dec
mov
mov
int
into
fdivrl
je
lods
jo
mov
push
xorb
nop
lds
stos
jecxz
fistl
adc
gs
pop
dec
xchg
jns
add
xchg
popa
add
test
outsb
inc
mov
ja
mov
inc
fistps
ret
push
out
stc
dec
stos
ljmp
test
hlt
in
sahf
mov
and
sbb
ds
mov
jne
xchg
cli
fidivrs
xor
movsl
adc
dec
mov
and
ja
sub
or
lods
sti
jl
adc
jl
icebp
sti
cld
cltd
and
repz
mov
xor
lds
xchg
jmp
sbb
jmp
push
nop
stc
sbb
dec
mov
test
movsl
outsl
ljmp
test
jmp
jl
lret
adc
mov
and
xor
mov
cs
sahf
inc
fxch
sub
lret
and
repz
pop
mov
add
xchg
into
pop
jo
push
test
jbe
push
xchg
lods
imul
mov
mov
roll
pop
adc
out
inc
movsb
cmp
push
sub
sar
jg
mov
call
sahf
sub
mov
dec
jl
push
dec
cmp
jmp
sub
lock
add
pop
movsl
out
out
push
ljmp
jmp
jnp
push
lds
pusha
mov
mov
bound
xchg
add
fsubs
fdivp
xchg
push
mov
mov
xor
aad
mov
push
and
mov
fimull
clc
cmpsb
mov
out
mov
mov
repnz
fimuls
test
xchg
ljmp
push
inc
jns
fisttpl
leave
fwait
xlat
daa
and
aam
adc
inc
shll
inc
sub
cmp
mov
lret
xchg
movsb
xchg
jecxz
cltd
jl
int3
je
arpl
movsb
fcmovnb
cltd
xor
pusha
addr16
mov
jg
cmc
jmp
in
int
push
gs
dec
rcll
popa
pop
popa
jae
loope
repnz
mov
push
insl
addr16
jmp
jns
cmpsl
and
add
cmp
sbbb
cltd
pop
cmpsb
test
mov
mov
pop
push
stos
aaa
mov
nop
cmp
pop
iret
insl
jne
shlb
add
pop
jo
aas
ror
xor
es
repnz
aad
jmp
into
and
fidivs
int
mov
test
pusha
push
jmp
mov
adc
or
fadds
rclb
aas
xor
je
leave
jbe
js
in
lods
inc
jae
mov
adc
and
cwtl
fwait
sub
and
lds
xchg
or
call
mov
mulb
les
cld
cmc
push
push
insl
adc
inc
leave
lret
pusha
lret
jae
xlat
or
cmpsb
push
test
dec
jae
pause
lods
std
movsl
adc
and
pandn
pop
dec
adcl
cmc
sbb
and
add
daa
push
adc
fdiv
lcall
sub
cmpsl
in
pop
mov
aad
sarb
je
xchg
lods
lds
or
shl
jbe
or
dec
lea
mov
rcrb
lret
jle
pop
jno
in
loop
pop
jle
jg
mov
rorb
cmp
aad
add
notb
sahf
js
div
pop
notb
and
std
lcall
stos
and
adc
jnp
icebp
xor
mov
and
std
jge
and
in
dec
cmp
mov
pop
jnp
mov
jl
addr16
test
maxps
jp
stc
or
pop
sub
stos
add
les
push
push
je
push
mov
and
lds
daa
testb
mov
fwait
sbb
push
adc
mov
and
js
mov
scas
and
loop
inc
xchg
lods
or
mov
xchg
add
aad
push
shll
and
jno
call
scas
jmp
mov
fnsave
dec
mov
and
js
test
xor
and
push
mov
jp
cmp
outsl
repnz
insl
ds
arpl
out
mov
enter
stos
fdivs
pop
loope
add
and
inc
std
dec
mov
cmp
mov
hlt
lock
inc
idivb
ds
or
push
mov
cltd
insl
jp
add
notl
enter
pop
inc
movsl
lods
xlat
push
enter
cld
mov
dec
jb
push
inc
xchg
jnp
loope
orb
add
leave
xchg
rcr
inc
adc
mov
mov
push
ficompl
xor
sub
cmp
stos
fs
iret
hlt
iret
fdivrl
jno
cmp
js
dec
pop
rcrl
movsb
add
mov
xor
push
sub
xchg
aaa
push
gs
lret
xchg
pop
sbb
ljmp
inc
fsubrs
cmp
mov
mov
fldl
sub
sub
fdivrs
add
pop
shlb
xor
xor
mov
into
and
cmpl
sti
jg
fs
mov
test
inc
aas
ret
cld
xchg
dec
xor
sub
sub
fildl
lea
inc
jb
xor
divb
pop
adc
dec
fwait
stos
js
pop
jle
jne
dec
xor
jne
insb
neg
incb
push
inc
call
mov
inc
pop
jbe
pop
xchg
test
xchg
je
fcompl
sti
ret
addr16
push
popa
sub
lds
lock
and
cmp
cwtl
cmp
roll
lods
add
int
inc
mov
outsb
and
add
imul
push
shll
and
daa
push
xor
push
xor
icebp
mov
cmpsl
mov
inc
std
outsb
xchg
jmp
lret
inc
xchg
mov
push
sub
sti
cmp
icebp
ret
mov
mov
inc
mov
mov
dec
sub
lock
sbb
and
adc
addr16
lret
add
mov
mov
sahf
nop
sub
xchg
mov
pop
jnp
inc
out
lods
push
pop
fdiv
jge
push
insl
cmp
xorb
jnp
lea
mov
pop
or
xchg
dec
pop
dec
jo
push
daa
movsb
sub
jge
dec
pop
int3
adc
popa
mov
dec
mov
test
std
cmpsb
lods
lods
aaa
adc
xor
stc
jmp
push
cwtl
cmp
sub
sbb
ljmp
mov
out
push
stos
xchg
out
push
push
add
rdpmc
popf
pop
pushf
in
test
popa
push
pushl
stc
and
cmp
lret
testl
dec
mov
mov
dec
outsl
jg
pop
daa
pop
sahf
lods
stos
mov
mov
pop
cli
sti
push
out
jl
add
out
movsl
jns
mov
sti
sub
add
clc
leave
arpl
aam
sti
ret
scas
dec
icebp
xchg
cmp
dec
push
mov
imul
push
sub
adc
cs
mov
jle
adc
push
push
jb
arpl
jae
mov
movb
ljmp
popa
sarl
je
pop
ja
dec
push
clc
es
and
jecxz
int
jnp
jecxz
push
mov
pop
je
fistps
loop
dec
add
mov
cmp
inc
mov
insb
sti
out
add
insl
fimuls
xlat
push
aad
fs
sub
sahf
aaa
ret
ja
leave
mov
clc
jge
roll
repnz
cmpl
outsl
push
daa
fstl
sbb
mov
push
loop
xchg
test
jns
push
dec
decb
ljmp
aas
cld
jecxz
rcrl
mov
int3
outsl
ficomps
mov
out
fdiv
dec
rcll
cwtl
adc
aad
xchg
cli
mov
clc
adc
test
sahf
inc
add
mov
push
sti
daa
xchg
dec
xor
mov
loopne
pop
xor
les
xchg
stc
inc
icebp
jle
int
cmpl
cmp
imul
jge
and
mov
dec
add
mov
sub
sub
int3
xchg
das
or
jmp
ljmp
cmpsb
sub
sub
pushf
jns
imul
mov
loop
out
cli
jbe
in
xchg
and
pop
jl
or
jo
repnz
sub
sahf
push
int3
popf
xchg
out
cmc
xor
faddp
lock
push
pop
push
fstpt
aas
gs
xor
fwait
pop
pop
je
and
pusha
mov
and
mov
pop
js
mov
fwait
push
rcll
jno
dec
jmp
cmpsl
sti
mov
clc
push
and
std
xor
cwtl
outsl
jb
mov
fdiv
iret
cmc
mov
sbb
ja
inc
iret
out
sbb
mov
jb
or
dec
lods
fdivl
mov
cltd
nop
enter
incb
addr16
xor
cmp
pop
shrl
sbb
jae
cmp
xchg
hlt
sbb
sub
repz
sti
push
sahf
inc
sbb
jg
sbb
sub
jg
es
xchg
out
dec
jg
sub
leave
call
push
and
sbb
stos
mov
int
sbb
arpl
fdivrl
stc
das
or
js
adc
dec
mov
pop
test
push
enter
dec
rcrl
mov
pop
sahf
mov
push
popa
lds
repz
push
mov
enter
add
jo
dec
pop
jle
xchg
push
sub
icebp
and
out
sub
sub
mov
lods
call
int3
ja
inc
jne
stos
cwtl
in
cs
xor
int
aaa
dec
imul
mov
sub
fsts
cmp
add
mov
ds
dec
loopne
cmp
fsts
pushf
daa
mov
mov
mov
mov
sbb
aaa
sarb
jp
movsl
inc
jecxz
or
push
inc
cmp
dec
or
and
pop
into
jp
pop
cmp
ss
push
loope
lods
inc
test
das
sbb
mov
mov
cltd
adc
or
pushf
mov
xchg
sbb
add
mov
shlb
dec
sbb
mov
mov
rcrb
daa
adc
ss
pop
cmp
lahf
leave
out
jl
adc
xor
cli
popf
shl
test
mov
hlt
out
xchg
iret
outsb
adc
xor
int3
sub
push
jl
clc
shl
or
cmc
test
ja
stos
xchg
mov
mov
lds
jbe
push
or
in
outsb
add
and
adc
hlt
stos
insl
mov
ret
imul
cltd
fldl
roll
mov
xchg
lahf
adc
add
mov
insb
jmp
icebp
stos
pcmpgtd
aas
jmp
shll
out
in
cmp
subb
cmpsb
sbb
shrb
mov
xor
fisubl
sbb
sub
jmp
xchg
jl
xor
icebp
mov
push
ret
fisubs
pop
push
mov
fiadds
add
dec
popaw
xor
and
xchg
pop
jns
aas
xor
mov
dec
jb
inc
das
mov
ret
mov
add
jnp
sahf
cmp
jb
mov
repz
cwtl
and
push
sbb
ret
mov
pop
xor
pop
sub
ja
hlt
addr16
push
mov
adc
mov
cs
dec
out
cwtl
lea
clc
mov
int
adc
cs
popf
cmc
sarl
jecxz
inc
mov
jmp
dec
add
rorl
xorb
mov
sub
fs
add
sbb
sbb
push
mov
push
adc
inc
pop
test
sahf
push
rol
sti
js
xor
push
leave
mov
jne
pop
sahf
fbstp
jbe
dec
insl
push
pop
dec
div
fildll
ret
inc
fdivrs
inc
mov
das
mov
jns
push
arpl
fdivrl
jb
mov
outsb
jnp
push
pop
adc
mov
loope
dec
or
jno
inc
push
dec
dec
fwait
sbb
jb
dec
mov
outsb
insb
daa
mov
stos
fcmovb
lock
outsb
stos
mov
sub
push
mov
jae
push
add
cmpb
les
cmc
mov
mov
ficompl
in
je
mov
scas
pop
inc
pop
outsl
aam
pop
decb
push
adc
push
cmp
cmp
mov
dec
sub
testb
push
fs
daa
dec
cmp
sti
imul
lock
fbld
cmp
jp
clc
dec
xchg
stos
adc
ret
and
push
insl
insl
ret
addl
fwait
movsl
push
out
fsts
jnp
incl
fs
movsl
out
lods
jg
pusha
daa
jecxz
data16
pop
int3
fcmovb
inc
jmp
or
sbb
mov
call
arpl
sub
lds
out
fwait
cmp
movsl
xor
sbb
aam
scas
sti
imul
test
mov
pop
insb
fadds
sub
dec
pop
pushf
adc
pop
adc
adc
lahf
adc
cwtl
push
sub
clc
pop
mov
mov
xor
jp
imul
mov
in
sbb
mov
pop
lods
ljmp
gs
popf
and
pop
pop
push
lds
scas
repz
decb
pop
jmp
aaa
and
lods
xchg
leave
orl
jecxz
insb
xchg
bound
or
cli
pop
mov
pop
add
lret
xlat
fst
int3
sahf
cltd
and
aaa
xor
ja
loop
sub
pop
leave
arpl
ljmp
mov
xchg
pop
lds
xor
jge
mov
out
mov
loopne
mov
cld
jne
sub
lods
add
pop
iret
pusha
jg
dec
fwait
scas
shlb
mov
into
mov
add
and
lock
test
gs
andb
jne
xor
mov
push
in
sub
ss
not
and
mov
or
dec
dec
add
stc
add
push
test
enter
lcall
addb
sub
push
jge
and
inc
insl
dec
dec
mov
sub
push
push
imul
jae
insb
ficomps
into
mov
repnz
inc
or
out
iret
movsb
or
xor
push
and
mov
push
jg
loopne
repz
das
pop
ss
ja
xchg
jbe
fwait
mov
int
fldt
ja
dec
iret
cwtl
insl
pop
fcomps
and
pop
push
ljmp
loope
mov
pop
movsl
aad
xchg
xor
inc
xor
or
jno
xchg
mov
imul
or
aad
imul
sbb
addl
pop
and
hlt
ljmp
ficompl
pop
sub
push
mov
mov
mov
sti
insb
ds
add
push
outsb
cli
xor
pusha
notl
push
push
call
mov
movsb
jp
stos
sub
adc
adc
push
sbb
dec
adc
rolb
out
jae
jbe
test
lret
popa
inc
sub
lret
lock
lcall
xchg
enter
mov
cmpsb
adc
add
cmpl
mov
xor
xor
push
int
leave
dec
out
jns
cltd
cltd
ss
loope
xorl
add
add
xchg
mov
mov
das
pop
dec
inc
push
das
push
push
stc
imul
rcr
mov
pop
jg
inc
aas
push
or
jo
add
inc
xchg
xchg
pop
inc
or
jg
jecxz
adc
popf
ss
mov
fldenv
push
movsb
inc
push
adc
push
das
cmpsl
stos
jp
movsl
int
pop
icebp
in
and
cmp
popf
push
inc
in
cmpsl
cmpl
ret
xchg
inc
in
lahf
filds
mov
fs
and
shlb
loopne
xchg
jae
push
adc
jp
jo
xchg
mov
push
and
aaa
addr16
jb
mov
call
insl
cmpl
jmp
in
push
mov
loop
in
mov
outsl
int3
rep
lret
imul
outsl
inc
pop
movsl
jecxz
nop
push
mov
dec
mov
xor
and
sahf
test
mov
inc
adc
dec
add
xchg
dec
jmp
gs
jae
adcb
sbbb
and
jmp
call
inc
mov
cmp
push
testb
outsl
jne
adc
mov
adc
dec
js
sbb
mov
shlb
push
cmpsb
adc
stos
jne
push
dec
adc
cltd
or
push
leave
add
data16
aam
in
pop
push
sarb
jl
push
sarb
cmc
mov
cmp
xchg
jg
ret
rorb
je
mov
mov
cs
pop
test
les
jp
dec
ret
inc
popf
hlt
js
cmc
add
pop
cmp
push
push
and
icebp
cmpsl
lea
pop
cwtl
shll
xchg
jp
testb
mov
mov
push
ficoml
pushf
enter
cltd
lds
ja
aaa
lcall
adc
mov
pop
xchg
pop
negb
inc
sbb
sti
xchg
movsb
out
mov
repnz
arpl
xor
dec
clc
push
cmp
push
scas
jno
gs
es
sbb
in
ficoml
xor
cld
stc
jae
mul
test
or
adc
pop
jl
movb
cmp
jmp
stc
xchg
outsb
fs
xchg
loope
and
and
jne
cmpsl
sbb
movsl
mov
movsb
pop
out
sub
adc
jb
push
in
lcall
push
pop
mov
pop
mov
loope,pn
add
mov
jbe
mov
pop
iret
xchg
cwtl
or
insb
push
mov
mov
mov
ret
push
aad
jns
or
sbb
sbb
mov
outsl
push
es
cmovg
popf
push
rcrl
add
arpl
mov
cmp
add
xchg
ja
jg
cs
xor
jle
add
dec
mov
mov
mov
add
cmpsl
stc
sbb
inc
dec
les
cmc
pop
in
cs
inc
outsl
cmp
mov
jg
xchg
sbb
jmp
mov
cmc
enter
mov
std
int
out
sub
push
repz
dec
mov
int3
mov
xchg
jle
mov
rolb
mov
aad
imul
sub
loope
stos
aas
mov
fnstcw
pop
cmpsb
fisttps
mov
daa
push
adc
sbb
mov
sub
dec
jp
adc
xor
fs
jg
jbe
sahf
xchg
test
pop
xor
loope
mov
jmp
push
gs
push
sarl
sbb
mov
jecxz
stos
xchg
sbb
inc
popf
jae
push
addb
adc
jmp
mov
aam
pop
fcomp
jg
push
aam
shl
int3
ret
mov
mov
std
jb
xchg
insb
push
mov
mov
cwtl
aam
xchg
arpl
ficomps
add
adc
into
loope
push
mov
es
sub
fs
lcall
sbb
xor
inc
sub
addl
or
inc
mov
clc
fs
cmp
xchg
cmp
jle
jbe
mov
push
xchg
popa
in
test
call
jmp
lock
aad
in
inc
xchg
pop
stos
mov
or
iret
mov
mov
test
jo
mov
xchg
jl
and
fdivrs
xorl
fs
aaa
sbb
je
outsb
xchg
cmp
movsb
or
or
gs
and
imul
popf
popf
addr16
cs
lds
notl
daa
xor
add
xchg
out
mov
das
fs
inc
movsl
cld
lea
and
loope
push
xchg
cmp
push
sub
popf
mov
std
xor
adc
push
das
add
imul
fcompl
cld
jne
imul
dec
cmpsb
sbb
mov
aam
push
jmp
into
movsb
xor
call
dec
fwait
loopne
jle
popf
xor
push
imul
and
addb
fistpl
cmp
test
jns
bnd
mov
pop
inc
add
add
jmp
test
pop
sub
je
mov
push
pushf
or
jb
shl
popa
loope
cld
iret
mov
faddl
jb
jae
or
inc
lcall
jo
push
fs
and
push
popf
into
mov
dec
fcoms
jg
jle
cmp
cwtl
or
mov
hlt
jp
inc
scas
xchg
aam
adcb
test
insl
xor
or
push
fucomi
lret
push
dec
jne
xchg
cmpb
ja
mov
or
jg
shl
mov
jg
and
push
sub
insl
inc
inc
sti
push
ja
insl
jle
les
add
xchg
sbb
add
jo
sbb
and
iret
push
mov
loopne
lock
jnp
mov
cmp
or
push
repz
lahf
test
jbe
sub
jae
cwtl
je
into
loop
cltd
pop
popf
jg
xchg
aaa
add
xchg
jae
inc
fcoml
xchg
cltd
push
lods
dec
inc
mov
sbbl
mov
jmp
inc
lods
push
rcrb
fimull
js
add
fidivl
jge
hlt
lea
popf
inc
ret
jae
jg
add
ljmp
cmpsb
fdivrl
xchg
sbb
jg
pusha
adc
and
adc
dec
add
mov
scas
cld
leave
mov
ljmp
popf
xchg
imul
popa
push
lods
scas
fbstp
mov
popa
xchg
mov
xchg
adc
jg
jno
mov
movsb
inc
adc
mov
xchg
or
clc
xor
icebp
push
loope
inc
repnz
movl
movb
outsl
aas
mov
test
cli
and
inc
jmp
adc
out
push
cmpsl
repnz
arpl
jle
imul
clc
addl
aaa
push
pusha
mov
sub
stos
rcl
pop
mov
inc
iret
test
jae
bound
xor
lods
and
pusha
xchg
test
adc
cmp
mov
adc
std
and
add
xchg
jle
cmp
push
xor
das
and
push
lret
test
pop
pop
ja
cmp
mov
popa
rorb
pop
or
test
shl
push
xor
fsubrl
inc
push
cs
sub
nop
pop
or
mov
in
leave
xor
es
jbe
out
daa
xchg
adc
xchg
adc
je
pop
test
add
mov
rolb
jge
cmp
mov
ja
cmp
and
mov
orl
xchg
xchg
pop
inc
sub
loop
xchg
mov
pusha
andps
cld
mov
jmp
imul
inc
outsl
in
cli
shr
adc
xchg
jmp
sbb
scas
mov
test
dec
mov
fistpl
mov
and
sub
fisttpll
adc
ret
and
lods
lea
inc
xchg
imul
cmpsl
int3
out
lds
ret
stos
out
xchg
sub
push
push
mov
pop
pop
dec
adc
cwtl
std
rorl
xor
lret
stc
lds
mov
clc
mov
rcrl
shrl
push
sbb
test
and
lock
xchg
aam
cs
xchg
xchg
fidivl
cli
scas
mov
xlat
loop
imul
cli
or
xor
jge
push
jae
or
lds
jecxz
testl
outsl
sub
ss
ret
xchg
rcl
xchg
fsts
xor
jne
test
mov
out
adc
sbb
cli
mov
jmp
fwait
xlat
sar
mov
inc
rcrl
cmp
das
lods
cmp
push
mov
out
cmp
xlat
mov
shl
imul
xor
imul
rcll
ss
xor
cmpl
pushf
movsl
inc
pop
stc
mov
inc
sub
xchg
jmp
es
sbb
loopnew
testl
dec
adc
loope
xchg
insb
mov
and
lds
dec
in
adc
jno
int3
addr16
pop
mov
ror
jecxz
test
mov
mov
push
inc
add
pop
mov
and
popa
loop
mov
test
scas
pushf
fmulp
push
push
ret
repz
cmp
fs
xchg
cmp
xorl
pop
cmp
push
or
iret
daa
fwait
je
fidivs
lret
jne
imul
mov
xchg
or
nop
and
mov
adcl
or
imul
sub
repnz
jl
int
sbb
ss
push
rcll
es
and
cmpsl
add
cwtl
dec
gs
add
ja
test
int
dec
inc
xor
add
dec
rol
inc
mov
mov
stos
pusha
ss
bound
add
mov
push
in
insl
leave
push
int
ds
xchg
ret
fiadds
clc
mov
adc
cmp
mov
sub
push
ret
int3
xor
jnp
loope
sbb
cld
cwtl
shlb
cmp
pop
xlat
adc
cmp
pop
cli
test
and
enter
jns
sbb
push
adcb
lea
cmpsb
movsb
fisttpll
out
pop
mov
adc
and
jb
lcall
or
mov
mov
dec
adcb
and
mov
mov
xor
cs
sbb
push
mov
lods
cmp
pop
repz
pushf
jb
stos
jg
adc
fstpl
dec
insl
jle
and
pop
mov
xor
lcall
push
cltd
lret
dec
fcomps
lahf
mov
mov
subl
cmp
cmp
inc
ret
cs
dec
lea
cld
push
enter
pusha
xor
adc
xchg
pop
push
push
push
stos
push
insb
insb
mov
mov
push
loopne
lret
or
push
hlt
mov
ret
sbb
sahf
inc
sbb
sub
in
testl
sub
dec
in
xor
push
cmp
lret
mov
outsb
fs
idiv
xchg
cmp
outsb
jmp
inc
jne
je
mov
or
in
mov
push
cmp
arpl
push
lcall
int
stos
push
mov
fidivs
lds
inc
rcll
aas
sub
pop
je
test
ror
loope
out
pop
dec
sbb
jno
push
cmp
out
and
jne
jle
inc
push
push
iret
sub
insl
sub
imul
dec
mov
aaa
int
inc
push
add
insl
xor
inc
xchg
sbb
mov
aam
enter
jnp
push
push
or
push
fadd
jo
xor
sbb
pop
lret
aas
sahf
in
test
sbb
pop
je
aas
mov
mov
pop
mov
pop
mov
pop
jae
push
arpl
xor
ljmpw
push
mov
inc
enter
mov
cmpsb
icebp
or
dec
movsb
jecxz
jae
push
jbe
in
inc
ret
nop
mov
incl
jns
lret
cltd
nop
sbb
push
mov
pop
movsb
lahf
inc
push
push
iret
push
mov
push
lods
sarb
adc
jae
cmp
cli
mov
icebp
sbb
in
jg
in
push
stos
xchg
test
imul
push
fwait
clc
or
adc
lea
push
xchg
leave
jp
and
or
adc
fwait
xor
outsl
jnp
jae
or
push
xchg
mulb
or
fidivs
jbe
js
or
or
pop
loopne
cmp
jl
fsub
or
or
std
outsb
repnz
mov
inc
cwtl
inc
or
adc
cmp
loope
jae
fadd
xor
jle
xchg
cmp
pop
out
cld
cmp
sub
leave
int3
add
xchg
aas
pusha
adc
or
out
nop
stos
rclb
add
adc
inc
pop
pop
jg
lock
mov
sub
xorb
add
sbb
mov
push
xor
lahf
mov
sarl
dec
scas
mov
xchg
xchg
pop
jo
das
sbb
aaa
xor
pop
repnz
movsb
fistps
pop
lock
mov
arpl
mov
push
fpatan
lods
hlt
mov
lods
jns
mov
cmp
es
cli
sbb
jmp
repz
insb
lock
add
out
cld
repz
xor
aad
jmp
pop
fldcw
xor
add
ds
mov
icebp
xor
sbb
mov
iret
mov
push
in
add
dec
gs
sub
lret
inc
nop
mov
or
adc
dec
shrb
dec
aam
dec
mov
das
fucomp
sub
daa
mov
inc
jg
dec
mov
arpl
push
push
loop
vpextrw
lds
js
pop
fwait
int
aam
mov
xor
out
mov
mov
xchg
cmp
scas
aam
sub
fucomi
xchg
inc
iret
add
test
sub
ja
xorl
cmp
xor
imul
push
xchg
ja
add
pop
sub
cmp
stc
xchg
imul
push
pop
pop
or
push
adc
icebp
arpl
add
rol
mov
inc
push
cmc
loope
mov
inc
enter
add
sbb
aad
stos
xor
gs
shrb
push
push
dec
or
add
push
movsl
clc
dec
nop
int
mov
or
sbb
push
adc
mov
dec
loopne,pt
push
into
jg
xchg
icebp
addr16
stos
pop
std
add
adc
add
lock
clc
adc
in
cld
dec
es
pop
adc
push
mov
push
xor
jle
xchg
and
jno
sub
xchg
test
data16
pop
lea
xlat
mov
stc
pop
pop
jp
pushf
mov
cmp
test
mov
shll
nop
mov
push
aam
and
bswap
sbb
das
or
fstl
stc
push
cmpsb
xchg
aaa
int
sti
cwtl
jae
xchg
shrl
adc
shll
inc
or
add
inc
in
inc
and
inc
sub
sub
int
test
sahf
jg
pop
sarl
into
pushf
jno
jmp
mov
cmpsb
jecxz
mov
shlb
mov
pop
insl
imul
clc
push
inc
xorl
mov
jno
and
aaa
cmpsl
xor
dec
xor
xchg
das
push
mov
sbb
mov
xor
add
mov
and
pop
arpl
mov
data16
or
icebp
scas
ljmp
testb
sqrtps
push
push
pop
stos
push
roll
and
sub
mov
ficomps
jne
xchg
jb
adc
xchg
stos
push
dec
mov
testl
ss
aam
add
lret
mov
lods
push
pushf
sbb
jo
jg
lcall
inc
push
push
add
jbe
sub
js
movsb
inc
add
push
cmpsl
dec
ret
popf
adc
sbb
std
mov
repnz
inc
mov
jmp
imulb
nop
pop
push
lds
stos
mov
ja
cmp
ds
cmpsl
mov
cmp
inc
mov
fisubrs
dec
sahf
and
addr16
divl
clc
sarl
cmp
mov
jne
add
adc
jnp
hlt
mov
cwtl
xchg
adc
mov
push
mov
loop
jno
pop
xchg
cmp
movsb
dec
jb
xor
mov
pop
imul
icebp
push
loope
or
add
scas
mov
sahf
mov
jmp
jecxz
jo
cmp
pop
jae,pt
outsb
xchg
pop
loop
outsl
push
push
adc
shll
jge
inc
cmp
ja
push
leave
push
mov
incl
imul
mov
mov
cmp
es
push
sarl
push
outsb
mov
dec
xchg
repnz
out
aaa
mov
push
inc
ret
movsl
and
loopne
shlb
mov
mov
ss
mov
and
xor
mov
icebp
pushf
sub
adc
pop
xor
nop
inc
aad
rorl
jp
xor
in
psubd
add
ret
cmp
mov
das
fdecstp
dec
add
popa
aas
nop
out
imul
stos
pop
cpuid
and
jecxz
push
xchg
push
or
cli
pop
add
in
pop
lods
call
pushf
sub
push
dec
sub
mov
mov
jp
rorl
bound
loopne
lea
mov
pop
push
lds
dec
out
lret
gs
mov
mov
lret
adc
fsubs
fwait
mov
mov
mov
xor
subb
leave
inc
xchg
sub
add
jb
aas
ret
shl
ror
out
xor
sub
repz
mov
adc
pop
mov
scas
rcll
and
jne
mulb
cmp
in
in
popa
or
xor
pop
or
test
or
outsl
jo
mov
mov
pop
xor
mov
in
mov
push
xchg
lahf
pop
mov
das
sub
data16
out
mov
dec
mov
mov
xchg
lods
fists
loope
int
cmp
ret
add
outsb
notb
jmp
cltd
and
add
mov
incl
cltd
inc
std
xlat
mov
pop
addb
mov
jge
jge
mov
dec
test
das
mov
sub
rclb
roll
mov
out
mov
xchg
pop
les
mov
xchg
xchg
push
lock
fmull
xlat
cwtl
lret
sbb
lods
lods
jecxz
cmp
orb
push
pop
push
lods
add
psllq
shr
decl
xlat
test
xchg
pusha
pop
cmp
sarl
out
and
outsb
jge
popf
lock
imul
xor
or
or
inc
mov
jne
test
lds
xorl
or
jp
ficomps
loopne
dec
xorb
cmpsl
mov
pop
xor
lods
outsl
fwait
and
mov
adc
std
fsubl
dec
arpl
push
push
adcb
jnp
bound
adc
push
pop
les
mov
inc
adc
insl
dec
scas
push
mov
xchg
push
stos
pop
rolb
and
xor
ficoms
mov
sbb
and
roll
in
jp
and
popf
mov
andb
pusha
sub
repz
imull
and
push
sub
or
pop
enter
js
inc
divl
mov
pop
mov
rolb
rorb
inc
ljmp
adc
hlt
shlb
pop
inc
out
pop
push
adc
jecxz
and
and
inc
adc
lret
in
shrb
dec
xchg
add
sbb
movsb
outsl
pusha
in
daa
test
jmp
xchg
sbb
xchg
xchg
jle
dec
cltd
mov
pop
pop
stos
inc
mov
cmpsb
jge
mov
call
cmp
fimull
pop
jmp
and
inc
into
pop
enter
sbb
cmp
mov
mov
xchg
ficomps
pop
cltd
mov
push
das
aam
push
inc
mov
jb
lret
mov
push
jecxz
je
fucomip
cmp
mov
ret
and
shll
nop
add
sahf
push
and
test
insl
mov
add
fs
popf
lock
xchg
cltd
and
popa
cld
xor
out
cmp
fcompp
hlt
loope
adc
dec
cmpsl
cmp
or
mov
popa
mov
sub
imul
push
jmp
or
sbbb
jo
mov
fwait
dec
movsb
andb
xchg
loope
and
adc
rol
and
xor
mov
arpl
dec
add
cmp
sbb
xorl
inc
lods
lret
out
inc
pop
pop
pop
jp
pop
in
test
inc
xor
sbb
pop
inc
out
and
adc
cmc
lods
and
lret
sbb
cmpsl
mov
cmp
imul
rcrb
jmp
ror
dec
aam
in
jae
mov
mov
xchg
ljmp
ja
push
or
and
jp
orb
push
test
loopne
pop
inc
sub
cmp
xchg
jmp
movsb
sbb
pop
lret
movsbl
adc
adc
cmc
pusha
pop
mov
loopne
shll
sbb
xor
pusha
cs
fbld
ss
sub
mov
int3
lret
mov
fbstp
mov
ror
gs
mov
ja
jnp
jp
fcmovbe
or
xchg
ret
movsl
jne
gs
xchg
rol
or
or
lds
jecxz
lods
mov
loop
les
dec
mov
ja
mov
jae
sti
outsb
or
pop
aam
stc
dec
lret
repz
loopne
mov
add
or
xchg
gs
cmp
je
es
push
test
ds
repnz
lahf
subl
add
lods
xchg
dec
pop
and
sbb
inc
sbb
adcb
leave
out
push
push
cmp
adc
mov
jl
adc
clc
add
lods
dec
gs
ss
fldcw
stos
fistpl
ja
cmp
mov
ds
sub
mov
add
cmp
sub
jnp
or
or
clc
inc
hlt
xor
sbb
and
dec
ret
and
pop
dec
fmulp
xor
mov
lea
cmpsl
test
mov
inc
mov
sbb
repz
inc
xchg
xchg
pop
test
xchg
insb
ljmp
scas
mov
inc
mov
lods
popa
aas
arpl
inc
mov
mov
rolb
aaa
sub
pop
loop
sbb
cmpsl
xchg
js
adc
popf
mov
xchg
sarl
or
mov
lret
leave
subps
std
xor
test
mov
addr16
roll
mov
clc
mov
push
pushf
sub
repz
pop
addb
bound
shr
insl
loope
and
or
and
stos
push
sahf
scas
mov
pushf
into
scas
mov
loopne
dec
cmp
bound
mov
xor
stos
cmp
or
sub
pop
jge
insb
pushf
shrb
outsl
push
hlt
mov
cwtl
inc
inc
inc
pop
sbb
pop
dec
das
in
sbb
or
jmp
adc
push
out
ljmp
hlt
xlat
shlb
push
pop
jecxz
ror
mov
pusha
pop
xor
dec
adc
scas
jl
popa
cli
bound
xchg
into
xchg
mov
mov
in
dec
gs
stos
cmc
push
in
in
jmp
pop
movl
imul
mov
mov
add
fistl
nop
daa
xchg
fadds
cmpsb
add
cli
cmpsb
or
adc
or
fdivrp
cmpsb
cs
addl
loopne
cmp
cmpsb
fldl
outsb
mov
mov
das
rcrb
pop
outsl
enterw
push
xor
stos
pop
xchg
jb
jg
mov
add
jne
js
mov
ss
out
sahf
push
shll
nop
xchg
mov
xchg
mov
bound
pop
fcmovbe
fcmovbe
adc
or
test
jb
xchg
mov
inc
mov
cmp
mov
sub
jo
push
or
pop
lahf
inc
int3
push
icebp
stos
jp
mov
das
jbe
mov
popf
adc
idivb
xor
sub
in
and
jo
adc
push
xchg
sub
cmp
imul
xchg
push
cmpsb
inc
iret
mov
fnstsw
pop
inc
inc
in
shll
cmpsl
cmp
test
pop
sbb
sbb
xchg
fidivs
xor
mov
xchg
pop
jl
dec
push
stos
cmp
or
or
jl
out
pop
test
push
sub
out
dec
cs
xchg
movsb
int
in
hlt
pop
xchg
cs
pop
cmp
out
movsl
inc
cltd
mov
stc
mov
jne
sbb
and
dec
test
jbe
inc
xor
sub
cmc
lahf
imul
rcrl
stos
movsl
mov
inc
imul
pop
lea
test
scas
cmpsl
push
push
push
fs
nop
movb
xchg
ret
mov
lea
jl
jle
mov
js
push
dec
pop
cld
fstp
aaa
xor
outsl
mov
push
xor
mov
or
es
pop
gs
and
jl
cmc
jge
clc
xor
mov
dec
jl
mov
cli
orl
mov
dec
jge
sbb
inc
xor
shlb
sub
dec
popa
cmc
int
add
inc
pop
sub
ljmp
or
add
out
mov
dec
or
mov
sub
lahf
lcall
ljmp
movsl
int3
lea
pop
and
push
jno
repz
aas
mov
ja
jae
arpl
fsubs
test
popf
je
movsb
adc
loope
cmpsb
inc
dec
aam
das
addr16
dec
mov
sub
mov
and
push
push
shl
cmpsl
push
sarb
iret
pop
imulb
push
es
insl
orb
roll
xor
lock
adc
lods
pop
mov
or
push
pop
xchg
cmp
negb
xor
shr
add
mov
icebp
lret
subb
std
imul
add
mov
mov
adc
dec
icebp
xor
sbb
push
mov
push
pop
cmp
xchg
dec
out
leave
and
inc
push
push
jb
mov
xchg
insl
push
scas
mov
scas
mov
cmp
in
or
jecxz
sub
std
jecxz
in
js
mov
loope
jl
leave
lods
sti
insb
rcl
and
or
je
xchg
mov
shll
loopne
lock
jno
cmp
out
jp
outsl
notl
stc
mov
rcl
imul
repz
dec
xchg
xor
rcrb
sub
movsl
sub
js
mov
mov
cmp
cld
js
pushf
fldcw
inc
fwait
rcrb
or
int
add
xor
pop
test
in
ljmp
mov
pushf
fcmove
cs
or
mov
out
adc
lcall
sbbl
mov
in
adc
jo
enter
or
mov
pop
movsl
imul
adc
ficompl
aaa
fstpt
stc
or
movsl
ljmp
aaa
adc
mov
adc
mov
ds
int3
jle
sub
int
adc
ds
pop
fdivp
inc
cltd
sbb
sub
cmp
mov
scas
jmp
adc
fimull
sbb
bound
cmpsl
add
sbb
pop
inc
cmp
sbb
xchg
bound
mov
lret
sbb
push
sbb
mov
dec
lds
xchg
sahf
lods
adc
xchg
sub
mov
ds
dec
lahf
push
pop
adc
pop
push
xacquire
cwtl
stos
bts
jo
inc
in
sub
in
jne
or
les
bnd
push
subb
xchg
pushf
gs
insb
es
xchg
sub
pop
sbb
rorl
test
mov
jmp
or
lcall
std
add
push
movsb
js
mov
mov
dec
inc
pop
lret
mov
lret
test
mov
mov
adc
pop
les
sbb
cmpsb
js
ds
mov
lcall
int3
mov
push
mov
fdivrs
je
cmp
notb
dec
call
xchg
es
out
shrb
testl
movups
cld
add
mov
pusha
mov
outsl
sbb
dec
out
sub
push
mov
mov
xchg
dec
pushf
ss
out
inc
insl
mov
dec
or
fs
pushf
mov
jge
inc
mov
push
mov
jmp
lret
and
pop
dec
pushf
or
fldt
jmp
pushl
aaa
es
mov
mov
push
and
sbb
pop
jp
ret
jbe
dec
and
xor
fwait
lds
mov
xor
ret
arpl
jo
data16
push
aad
mov
movsb
cltd
arpl
in
es
bound
test
cmc
cmp
pushf
pop
dec
test
xchg
ret
cld
jbe
adc
sub
adc
mov
bound
enter
xor
push
pusha
ss
inc
inc
pop
sbb
xor
data16
lcall
mov
and
dec
sub
inc
lds
leave
xchg
aam
dec
cmp
pop
in
lods
ret
ret
cmpsl
mov
xor
lea
sub
adc
lea
ret
cli
mov
jno
mov
arpl
inc
mov
notb
jp
testl
push
pop
test
mov
add
pop
fisubs
lods
sbb
rcrb
or
pop
les
push
stc
inc
xchg
dec
pop
dec
sbb
fstps
data16
push
inc
arpl
cltd
pop
das
adc
push
xchg
aas
sbb
fs
pop
out
mulb
jecxz
repnz
push
and
repz
cmpsl
push
add
mov
clc
sti
rclb
ss
call
dec
jle
mov
xchg
xchg
inc
movsb
or
lock
icebp
leave
popf
add
mov
sub
adc
dec
gs
jle
xchg
arpl
pop
and
adc
jmp
mov
jbe
insl
add
sbb
std
lret
push
stos
js
into
pop
adc
ret
xor
mov
push
iret
mov
or
je
inc
jae
sub
push
add
movsl
cmp
mov
rcrl
or
inc
pop
pop
push
or
nop
imul
jns
push
push
jnp
push
dec
rcl
mov
inc
sti
dec
mov
int3
ficomps
cmp
addr16
movsb
or
enter
repnz
mov
xor
movq
inc
js
inc
out
and
out
rcr
sub
jle
sbbb
add
outsb
fsub
inc
jno
inc
cmpsb
and
jle
cld
mov
inc
lahf
adc
xor
mov
and
inc
insl
jge
cmp
sbb
jmp
ds
out
jb
je
jbe
ss
shrl
push
sar
andl
std
dec
xor
and
nop
repnz
cmp
push
jg
rcrb
cld
pop
add
movsb
fistpl
jmp
test
dec
jns
stos
and
in
push
xor
add
cmp
jno
xor
sbb
test
sub
loope
out
sub
daa
je
iret
mov
lcall
loope
and
repz
jmp
scas
pushf
inc
push
test
shll
cs
das
xchg
lret
popf
mov
or
hlt
xchg
fcompl
xor
adc
jb
lea
cmp
jmp
aaa
int
jl
cli
iret
mov
movb
or
sub
jb
jns
sbb
gs
sub
push
sub
scas
call
aas
loope
scas
add
pop
sbb
mov
js
xor
adc
xchg
jl
fistps
lret
icebp
adc
jns
imul
pop
jnp
in
inc
jp
out
fcompl
xchg
add
fbstp
adc
add
test
std
cli
jae
fdivp
inc
pusha
xchg
scas
sbb
mov
rcll
fneni(8087
sbb
or
in
or
dec
sbb
sub
xchg
out
sub
xlat
and
aaa
push
or
jae
cmp
mov
pop
jbe
sahf
in
add
out
int
lcall
aam
push
push
jnp
hlt
pop
add
jbe
xor
and
lret
out
add
in
jno
xor
dec
popf
inc
lahf
arpl
arpl
fcomp
jo
and
xchg
pop
sbb
lret
ficoml
inc
mov
xor
aas
int
fcomps
adc
jmp
pop
mov
add
cmp
mov
jne
cwtl
lret
adcl
insb
cmp
stos
and
and
pop
int3
xchg
cmc
sbb
dec
sub
sbb
fdivrp
pop
push
call
sbb
loop
lds
add
dec
mov
decl
xchg
and
mov
xor
adc
loop
xchg
mov
xchg
hlt
and
lret
cli
out
imul
test
push
fwait
bound
xor
sahf
shr
fwait
adc
mov
ds
and
pop
sub
push
cmp
push
dec
or
xchg
jne
test
data16
ja
sbb
sbb
xchg
pop
or
je
inc
stos
out
cmpsb
test
leave
jle
pushf
out
adc
pop
arpl
sub
sahf
and
fistpll
jmp
sbb
push
loope
sub
lods
adc
in
mov
pop
push
mov
add
sbb
addb
jmp
dec
data16
inc
sbb
or
and
shl
mov
cltd
dec
add
mov
pusha
out
mov
and
in
std
cwtl
mov
ret
outsb
scas
loop
pop
insl
ja
mov
sahf
in
cld
fwait
movsb
ficompl
dec
pop
out
mov
lea
mov
xlat
loopne
and
jae
fnstsw
or
cmp
nop
fsubs
mov
imul
and
cli
pop
mov
inc
hlt
cld
pop
dec
es
fisttpll
inc
and
jmp
cmc
mov
movups
lods
flds
hlt
div
mov
mov
sbb
into
jne
mov
mov
mov
cltd
mov
sbb
mov
adc
movsb
loope
lock
repnz
movsb
pusha
outsb
cwtl
add
divl
sbb
sarb
cs
inc
cs
mov
or
xor
or
mov
mov
nop
or
dec
sub
stos
fcmovnu
popf
adc
add
add
xchg
dec
push
out
mov
popf
sub
int3
daa
lods
xchg
scas
xchg
push
cmp
scas
mov
adc
sbb
mov
mov
sub
push
cltd
sub
das
jg
cld
shll
cwtl
xchg
nop
inc
dec
int
test
jmp
shl
sahf
xorb
push
push
or
push
add
adc
adc
es
dec
test
fcmovb
lret
push
jmp
xor
jmp
pushf
sbb
daa
xchg
sarb
int
movsl
ret
push
xchg
lds
sub
inc
data16
mov
div
nop
fcompl
inc
push
add
dec
pop
in
cltd
dec
cmp
mov
scas
add
leave
xchg
xchg
jb
daa
and
mov
push
cmp
leave
or
into
pop
and
mov
xchg
sub
repz
nop
mov
sbb
out
mov
dec
push
push
mov
ret
push
outsl
and
cmp
push
ss
inc
dec
bound
adc
inc
ror
or
cmp
cmp
ds
lods
nop
and
iret
das
push
cmp
fiaddl
in
fsubrl
sbbl
jb
ficomps
pop
test
outsb
jo
pop
inc
rcll
push
or
or
pop
sbb
cmpsl
mov
aam
mov
sub
mov
xchg
pop
mov
jne
mov
mov
mov
sbb
adc
nop
dec
imul
mov
cmpsb
mov
push
loopne
arpl
in
jge
daa
and
xor
mov
push
in
hlt
xchg
cmp
es
jb
sub
xchg
mov
outsb
fists
loope
mov
mov
adc
test
mov
jp
orb
cmc
mov
dec
mov
and
clc
lods
mov
dec
sub
pusha
push
cmpsb
ja
sahf
sbb
out
cltd
sbb
stc
fs
adc
or
jecxz
aas
and
es
int3
and
push
mov
cld
shrb
sub
out
ja
jns
cmp
in
sahf
mov
jp
and
jg
pushf
fidivrs
js
shl
cmc
sbb
lret
mov
ret
mov
adc
xchg
xchg
lcall
jecxz
inc
mov
xchg
insl
pop
aas
ljmp
insb
push
loope
pop
pop
daa
pop
call
pop
ret
ficoms
pop
mov
xlat
jb
lret
xchg
and
in
bound
imul
repz
dec
out
je
lock
into
mov
aad
jb
adc
sub
xchg
adc
idivl
rclb
das
out
adc
fwait
pop
ret
jge,pt
xor
cmp
push
dec
mov
mov
sbb
sbb
jg
out
add
push
adc
add
aas
fwait
call
cmp
loope
mov
push
and
mov
data16
xor
pop
arpl
subl
inc
push
cmp
jno
shrl
es
dec
hlt
push
sub
out
fwait
mov
inc
dec
in
jl
sbb
in
lret
add
xchg
sub
testl
add
dec
mov
push
jne
push
and
es
mov
xchg
jns
sbb
rclb
cmpsb
pop
jg
dec
push
imul
xchg
sbb
fisubrl
insl
popa
test
jnp
hlt
in
add
out
and
pop
push
ret
xor
in
push
ja
addb
xchg
mov
testb
lahf
cwtl
cmp
enter
int
dec
push
outsl
xchg
push
arpl
ds
mov
mov
jmp
imul
outsl
inc
push
pop
mov
jbe
imul
cmp
inc
mov
mov
mov
shll
xchg
test
and
call
or
add
mov
sti
sbb
in
clc
in
sub
adc
pop
mov
sub
and
xchg
pop
mov
into
mov
sub
mov
xor
inc
aam
or
lcall
inc
pop
lahf
add
mov
mov
mov
xlat
push
adc
mov
adc
hlt
in
jge,pt
fbstp
lds
inc
loopne
out
mov
push
push
out
adc
jo
sub
lret
cmpsb
mov
add
xchg
xor
pop
add
dec
or
add
dec
insb
sub
movsb
outsb
in
sub
push
dec
pop
es
push
mov
add
cmp
cli
mov
aaa
sbb
push
add
scas
outsb
cld
pop
mov
imul
jp
arpl
out
or
call
cmp
nop
adc
mov
test
shrb
imul
je
push
aad
jmp
pmaddwd
daa
scas
movsb
jecxz
sub
fisttpl
cmp
out
popl
lds
sub
adc
hlt
mov
ror
imul
or
lock
and
gs
aas
sti
pop
lret
shll
fs
fistpll
dec
mov
and
xor
shl
jb
lahf
pop
and
push
movsl
cmpsb
jecxz
or
sbb
fldln2
mov
sub
push
xor
cmp
mov
rorb
ficompl
adc
addr16
mov
dec
scas
sub
and
push
and
xchg
mov
jnp
and
and
test
or
pop
sbb
adc
mov
dec
mov
sbb
mov
ss
jae
pop
insb
outsb
scas
xor
sub
adc
dec
fwait
icebp
pop
scas
add
pop
dec
inc
stos
out
xchg
inc
enter
out
loopne
in
aam
or
mov
loop
xor
xor
in
inc
adc
push
insb
loopne
inc
sbb
inc
or
mov
fsubrl
lock
incl
inc
lret
cmpsl
mov
adc
stc
jle
enter
xchg
stos
sub
cmc
push
fcoms
ret
test
pop
and
out
fdivp
lret
jo
mov
ss
push
outsb
addb
jl
inc
test
pop
mov
mov
cs
cmpsl
mov
test
mov
repz
push
add
mov
dec
add
out
sti
test
in
test
lret
sub
dec
dec
inc
dec
imull
cli
cmpsb
orb
movsl
or
stc
sub
push
cwtl
sub
mov
xchg
pushf
and
fsubrl
scas
outsl
fiaddl
cli
daa
and
repz
shlb
jle
cmp
repz
imul
inc
pop
je
or
stos
pop
mov
repnz
dec
std
mov
fidivrs
aad
inc
push
adc
jg
cmp
nop
adc
subb
jle
rorb
xor
test
and
sahf
inc
cmpsb
daa
cmp
inc
insb
mov
jnp
pop
and
mov
mov
sub
push
or
cmpsb
cltd
mov
dec
dec
add
mov
data16
push
rorl
imul
ljmp
and
pop
ret
push
int3
fcomip
or
push
jl
mov
and
cmp
xlat
enter
sarb
cmpsb
outsl
xor
mov
outsl
sbb
xchg
fistpl
pop
mov
dec
xor
xchg
aaa
icebp
jl
stos
dec
fwait
sarb
mov
add
into
lcall
push
imulb
stos
xor
data16
push
mov
adc
mov
in
and
xlat
test
pop
shrl
sbbl
or
mov
lret
dec
aam
dec
push
mov
mov
pop
leave
pusha
in
movsl
sbb
add
mov
sbb
clc
cmpsl
jne
pop
mov
popf
fisubl
pop
inc
lret
jo
mov
cwtl
dec
data16
sub
test
aas
mov
mov
and
cmpsl
push
add
cld
jne
mov
cmp
adc
ret
adc
lahf
cs
sarb
pushf
or
fwait
icebp
dec
mov
in
cltd
add
repz
dec
mov
xor
xor
jns
mov
cmp
cwtl
push
imul
mov
pop
cmpsb
nop
aam
xor
dec
mov
xlat
mov
dec
dec
xor
dec
cli
push
lret
inc
mov
dec
je
push
cli
mov
inc
and
shrb
inc
xchg
push
inc
mov
insb
in
xchg
and
dec
xor
inc
out
jo
cmpsb
xor
call
cmp
and
pop
ss
jne
xor
lret
cmpl
dec
mov
inc
push
js
jg
sbbb
pand
clc
fimull
pop
adc
mov
sahf
mov
and
adc
cld
fsubrp
loope
mov
xchg
or
xchg
mov
iret
out
les
fsubl
test
push
mov
in
adc
daa
adc
leave
jae
mov
test
mov
ret
mov
loopne
push
in
jno
sbb
and
loope
addr16
mov
and
cmp
cmc
xor
jno
std
push
movsb
cs
test
mov
mov
ficompl
xchg
adc
jmp
dec
pop
out
paddsb
pop
cmp
mov
scas
test
popf
and
movsb
aam
jmp
in
imul
lret
sti
jnp
adc
out
fwait
and
jae
cmp
popf
inc
inc
mov
lds
test
adc
push
mov
in
push
incl
fsubrl
outsb
aas
enter
rol
shrb
sbb
sbb
mov
jnp
fsubrs
xchg
in
add
sbb
inc
inc
inc
cmpsb
push
xchg
jns
mov
dec
ja
mov
aas
jmp
inc
das
jb
xor
scas
test
fwait
and
cld
fimuls
mov
sbb
mov
mov
pop
filds
cmc
movsb
inc
insb
sbb
mov
stos
or
aas
addr16
cmp
js
xchg
scas
sbb
dec
orb
push
cwtl
dec
or
mov
loop
and
or
scas
push
fcomip
mov
mov
std
ljmp
sbb
mov
sub
adc
push
lds
pop
cmp
xor
test
jno
push
repnz
adc
enter
xor
pop
popa
xor
scas
cmp
or
test
dec
lock
jns
dec
adc
sahf
jge
pop
cmp
push
adc
out
jmp
vminpd
out
into
add
sub
jo
inc
mov
shl
fmull
ret
sub
pop
mov
add
and
jno
aas
outsl
in
xchg
xor
push
dec
movnti
imul
in
movsb
and
ret
mov
pop
fsub
pop
xchg
pop
push
hlt
add
jle
adcb
lds
pop
and
movsl
lret
mov
lds
rcll
jge
inc
sbb
sbb
sbb
pop
cmp
and
aad
lods
inc
les
mov
shll
jbe
mov
pop
adc
stos
or
cmp
movsl
adc
ja
add
mov
pop
cmp
stos
xor
push
les
jmp
xor
lret
adc
aaa
add
mov
movsl
xchg
fsubr
cwtl
or
gs
add
push
mov
int3
insl
xor
call
ret
aad
ds
out
clc
imul
mov
iret
imul
and
and
repnz
fildl
jl
fcmovnu
loopne
iret
sub
popf
int3
fdivl
mov
or
das
repz
add
cs
push
push
mov
push
ljmp
aad
push
enter
loop
popf
imul
fwait
jae
cwtl
aaa
sbb
jnp
pop
lahf
into
stos
into
ret
int
dec
or
ss
mov
pop
loopne
xor
add
inc
icebp
sbb
adc
cmp
cmp
add
outsb
and
sub
fs
push
mov
dec
neg
or
xlat
loopw
xor
xor
push
adc
xor
aaa
paddq
add
cmpsb
sbb
mov
stos
repz
pop
movb
repz
out
fsubl
xor
je
stos
popf
or
xchg
int3
inc
aaa
addr16
jae
or
pop
push
xchg
lods
sub
adc
out
mov
loopne
jae
push
into
xchg
push
nop
mov
mov
cmp
lds
dec
mov
jg
mov
dec
or
aas
sti
lods
inc
call
jp
pusha
rcrb
in
dec
jl
mov
xchg
test
push
in
loope
mov
movsb
or
adc
lret
cmp
xor
pushf
ja
fldt
push
pop
jns
ljmp
sahf
data16
cli
mov
xchg
xlat
jle
loope
cmp
aaa
or
sub
sub
pusha
mov
add
mov
xchg
mov
lock
fidivrs
movsl
cmp
jae
pop
push
into
pop
jnp
xchg
pop
ss
cmc
mov
cmp
adc
sub
rorl
lea
lahf
mov
jns
push
push
cs
sbb
dec
sbb
xchg
sub
dec
imulb
mul
fldenv
dec
cmp
inc
pminsw
push
stos
add
je
fdivrl
xor
mov
adc
jno
push
popf
pop
repz
or
shll
adc
mov
in
mov
xchg
aaa
or
jle
push
mov
xchg
icebp
sbb
pop
cmp
rcrl
sub
sbb
jne
xchg
push
cmp
push
push
loope
in
aaa
inc
out
cltd
cld
outsb
dec
push
or
inc
neg
sub
sahf
pop
hlt
adc
push
es
jg
sahf
sbb
shl
mov
inc
mov
jl
xchg
cs
mov
decb
sub
mull
jge
movsb
in
fsubrs
fs
adc
cwtl
insb
addr16
pop
scas
pop
mov
je
inc
mov
or
into
sub
sbb
inc
mov
clc
xchg
lret
out
sbb
adc
jl
lea
xor
jno
pop
pop
das
add
jge
int
rcll
xlat
int
ss
fsubrl
jge
lods
fldl
fnsave
xchg
jnp
in
inc
movsb
test
hlt
dec
popf
cmp
cmp
rclb
sub
xchg
push
mov
dec
loop
ret
and
push
inc
test
xchg
rcr
cmp
in
pop
and
clc
push
outsb
shlb
clc
scas
jecxz
cmpsl
pusha
lods
sbb
jae
mov
mov
lret
push
mov
add
pop
cwtl
mov
and
or
sti
push
xchg
popa
jp
inc
addr16
std
pop
dec
outsb
stc
imulb
fdivs
push
inc
pusha
push
mov
jl
mov
push
add
out
xor
and
ficoms
sbb
xor
test
xor
scas
int3
jge
rcll
cmc
jb
mov
fildll
test
fnstcw
out
out
sbb
rcr
subb
pop
cmp
push
push
dec
lret
mov
int
jg
inc
mov
jo
mov
shl
cmp
push
pusha
shll
aas
mov
or
push
loop
inc
movsl
hlt
sbb
in
or
cmp
lock
inc
inc
push
cmp
push
lods
lea
insl
orl
cs
dec
push
xor
xchg
xor
or
lods
in
ret
dec
cwtl
mov
addl
push
lahf
fimuls
je
xchg
jl
mov
int3
fldenv
push
insl
lock
jg
adc
xlat
cmc
mov
adc
pop
dec
push
xchg
sub
nop
push
mov
mov
push
push
add
mov
test
cmp
ds
iret
ret
or
and
sbb
std
ret
mov
fimuls
dec
jmp
xchg
stc
jo
aam
jae
or
gs
cs
push
cld
fsubrl
leave
or
pop
clc
imul
sub
sub
shlb
ds
and
insl
dec
add
bound
test
pop
jle
sub
xchg
outsl
rolb
pushf
sti
xor
ljmp
std
lds
and
ss
inc
mov
movsl
xchg
stos
mov
fsubp
movsb
xchg
cmp
dec
andl
std
mov
in
add
out
lods
or
or
stos
sbb
aam
mov
test
xor
popa
negb
xchg
jo
jp
hlt
mulb
inc
in
adc
repnz
cmp
adc
add
cmc
in
je
shl
mov
sub
sub
iret
sahf
js
pop
loop
mov
xchg
sbb
shrl
aam
xor
icebp
popl
stos
lea
mov
call
mov
lods
sbb
inc
loopne
ds
dec
pusha
mov
xor
pop
pop
pop
into
pop
cs
xchg
mov
push
outsl
add
iret
mov
cli
xchg
cmpsl
adc
aam
push
sub
jge
mov
mov
nop
jbe
mov
xor
cmp
push
inc
mov
xlat
rep
xchg
mov
repz
sbb
mov
imul
mov
jnp
rcrb
notb
aas
sub
sub
fistl
mov
cmp
inc
movsl
xlat
add
adcl
lret
cmp
jecxz
aaa
arpl
sbb
add
lods
sub
adc
loopne
pushf
inc
or
test
mov
xchg
add
das
insl
sahf
mov
lret
in
xchg
xor
cwtl
div
mov
gs
fwait
fs
out
mul
sti
fldcw
sub
aad
into
testl
pop
push
and
mov
out
pop
mov
scas
inc
cmp
jecxz
xlat
mov
xchg
push
in
jmp
cltd
iret
ja
scas
test
pop
aam
add
pop
in
xchg
and
jmp
out
xchg
or
hlt
shll
es
pop
add
jge
pusha
push
add
mov
adc
pop
outsb
sbb
push
test
repz
in
push
outsb
les
xchg
or
xchg
push
ret
cli
pop
mov
jne
cmp
scas
push
adc
scas
xchg
adc
mov
push
cmpb
xor
das
lods
into
cmp
push
ds
in
loop
pop
lods
mov
mov
xor
in
xchg
dec
push
pop
xor
test
enter
test
outsb
jl
pop
xor
mov
jae
mov
mov
mov
inc
imul
or
cmp
cmp
repnz
pop
and
lods
dec
xor
pop
dec
push
adc
lret
push
mov
push
adc
imul
mov
push
insl
mov
mov
in
xchg
dec
rcrb
es
test
sub
push
cmp
imul
push
shrb
test
out
in
ljmp
movsl
inc
out
sbb
cmp
pop
or
push
popa
sbb
hlt
imul
push
sub
cmp
inc
pop
push
push
scas
and
shr
push
shl
test
std
ret
imul
outsb
cmpl
sbb
ret
adc
pusha
mov
sbb
mov
fldcw
int3
xchg
fstpl
xor
xlat
lcall
insb
fidivrl
mov
mov
test
je
scas
call
mov
xor
dec
pop
loopne
cmpsb
popf
push
pop
adc
movq
add
in
dec
push
inc
mov
mov
mov
sbb
ficompl
stc
xchg
adc
std
jl
in
xchg
mov
xchg
aad
pop
out
jbe
fcomi
inc
xor
popf
popf
add
fiadds
lcall
xor
push
out
loop
fstl
ljmp
nop
pop
pop
out
test
jo
punpckldq
cmc
cmpsl
mov
xchg
adc
push
inc
shll
jle
jbe
jmp
out
in
and
push
sahf
push
add
xchg
aad
call
jne
push
inc
notl
mov
jae
sub
xor
lods
bound
push
int
inc
add
out
xor
add
add
sbb
aaa
pop
repz
xor
sbbl
sbbb
aam
gs
mov
mov
std
test
sub
out
sahf
jmp
cmp
stc
adc
mov
ficoml
or
test
mov
loopne
mov
mov
enter
jb
jo
mov
push
lea
inc
int
aaa
insl
cmc
cld
xor
movsl
sti
sbb
adcb
sub
stos
nop
in
inc
mov
rcll
test
iret
cmc
shlb
fs
ret
cmp
sub
ffreep
mov
cmpsl
ljmp
fdivs
mov
mov
push
sub
call
mov
or
mov
test
nop
cli
aam
pop
xlat
add
xchg
pause
stos
pop
xor
push
std
aam
or
jmp
and
dec
inc
xchg
push
lcall
out
pusha
repz
lock
adc
pop
sbb
cmc
inc
dec
stos
cmp
filds
jno
mov
jl
test
dec
sbb
push
inc
sub
mov
add
ljmp
roll
mov
lret
xchg
xchg
jle
ss
leave
mov
push
mov
std
inc
mov
jp
ret
stos
fadd
out
fistpl
sub
int
movsl
in
xor
cmpsb
les
sbb
fmull
mov
fstpl
cmp
movsb
push
sub
push
shl
shrl
dec
mov
jp
xchg
std
mov
rolb
cli
fdivs
dec
stc
clc
dec
cmp
push
scas
mov
test
aad
testb
stc
push
lret
xor
pop
std
sbb
popf
pop
testb
aaa
pop
enter
imul
lret
daa
in
or
std
dec
adc
stos
loope
mov
outsb
sub
jo
xchg
dec
adc
pop
mov
mov
out
out
xor
outsl
int3
cwtl
outsb
int3
divb
push
repz
lods
ror
fwait
cmp
push
fistps
xchg
and
inc
jl
xor
mov
insl
dec
test
aam
movsl
inc
xor
add
out
jg
add
mov
sub
inc
loop
jae
sub
xchg
xchg
jne
or
xor
pusha
dec
in
mov
dec
sub
rcrl
pop
dec
push
test
arpl
inc
fs
lods
or
inc
cmp
dec
push
je
cmp
je
addr16
jmp
dec
shl
and
mov
jb
call
outsb
lock
pop
rcrl
loopne
movsl
push
push
fistpll
scas
mov
xor
cmp
sahf
or
mov
in
int
lea
sub
ds
xor
in
outsl
arpl
push
imul
push
test
and
inc
pop
and
ja
inc
mov
adc
js
inc
jecxz
stos
mov
mov
ja
xchg
sbb
leave
mov
pop
jae
mov
dec
ds
push
inc
imul
sahf
jo
fidivs
push
cld
inc
in
push
push
mov
cltd
or
ljmp
popf
xchg
out
inc
cmp
lods
xchg
lods
bound
xor
pop
loopne
mov
adc
les
icebp
dec
jl
xor
xchg
mov
push
popa
shrb
pop
movsl
xor
test
xor
ret
inc
jecxz
mov
pop
jo
pushf
adc
add
mov
inc
mov
stc
or
cmp
clc
mov
dec
mov
das
jno
mov
inc
addr16
mov
inc
hlt
pop
outsl
mov
mov
mov
ds
outsb
jnp
outsb
mov
or
and
jo
loopne
xor
aaa
or
int3
repz
xchg
lcall
pushl
repz
leave
xchg
mov
mov
mov
pop
bound
jnp
or
fcmovbe
fwait
jne
xor
scas
push
out
xchg
sub
out
mov
imul
daa
rcll
dec
xor
mov
sbb
or
in
push
mov
les
mov
mov
adc
add
xchg
test
sub
pop
push
jnp
cmpsb
fists
adc
out
pop
jge
sub
outsl
enter
stos
dec
test
or
pop
roll
jle
or
cmpsb
clc
dec
sbb
mov
daa
imul
pop
out
sub
mov
jnp
ret
pop
xor
repz
push
cmpsl
lods
inc
mov
inc
mov
jg
into
pop
mov
call
add
call
jnp
cltd
jl
imul
jle
push
aaa
pop
cmp
fs
mov
add
inc
dec
dec
aad
jnp
mov
push
aad
lahf
int
jg
pushf
xchg
sbb
adc
dec
mov
lahf
or
enter
inc
mov
fs
add
mov
adc
dec
lock
dec
adc
pop
fidivrl
mov
xchg
fistl
sbb
push
loop
sub
subl
mov
jmp
jne
mov
push
nop
inc
xor
sub
mov
gs
decl
test
stos
and
je
dec
jnp
aad
cmpsb
add
insl
rcll
ret
cmpsl
popa
hlt
xchg
imul
add
mov
mov
mov
jo
jl
cmp
jns
sti
jo
rorl
andb
pop
push
mov
mov
inc
testl
or
xor
popf
out
shlb
push
hlt
subl
mov
pop
pop
cmpsb
push
xlat
dec
and
mov
test
icebp
sbb
fisttpl
js
add
push
sbb
sub
test
push
push
xor
mov
outsb
insb
lcall
mov
add
daa
jnp
icebp
add
pop
xchg
pushf
ss
mov
int3
cmp
test
cwtl
xor
into
mov
xorb
pop
add
out
rcll
leave
add
outsb
dec
mov
std
psrld
not
popf
jl
ficompl
pop
and
popa
xchg
mov
in
adc
mov
push
loop
fmul
je
jae
shll
xchg
push
dec
mov
mov
jle
or
or
sub
rorl
cmp
inc
mov
cmp
sub
push
mov
test
jbe
in
jl
iret
jmp
inc
cmpsb
in
clc
outsl
inc
inc
cs
push
mov
mov
rcr
xor
jnp
test
push
rorl
add
push
mov
dec
lret
ljmp
inc
cmpsb
call
loop
mov
incb
ja
mov
mov
jecxz
in
sbb
lcall
mov
fistps
cmp
mov
xor
inc
adc
xchg
fstpt
push
mov
add
and
stos
aaa
mov
std
hlt
sbb
push
lahf
mov
or
mov
rorb
and
js
and
rolb
out
mov
adc
add
push
push
in
cmp
pop
or
loop
shlb
sahf
push
aad
bound
jbe
pusha
cmp
mov
inc
in
or
adc
pop
pushf
fwait
xor
mov
orl
lods
cmp
sahf
push
lahf
nop
ja
enter
add
push
and
sbb
rcll
in
mov
cmp
scas
lods
pop
icebp
pop
shrb
outsb
jns
dec
dec
mov
loop
scas
scas
dec
sub
icebp
lret
repz
imul
punpcklwd
iret
mov
mov
cli
jne
fisttpll
sbb
mov
outsb
imul
cmpsb
jl
je
flds
out
xorb
adc
test
xor
mov
lcall
cmp
mov
nop
int
sub
stc
mov
lahf
ss
rclb
in
in
mov
imul
mov
dec
daa
mov
mov
or
adc
mov
add
ss
or
sub
dec
test
shrl
sar
clc
sub
xor
bound
adc
and
cmp
fs
enter
sub
insb
adc
xchg
sbb
sub
sub
daa
xor
imul
inc
gs
pop
out
hlt
dec
sbb
mov
and
inc
pop
orl
repnz
mov
mov
icebp
xchg
pop
imul
gs
push
rcrl
div
push
inc
ret
add
sub
mov
mov
out
jb
mov
lock
pop
adc
scas
or
push
ret
shlb
mov
jg
dec
add
jo
arpl
adc
dec
mov
xchg
divl
mov
xlat
mov
pop
and
xor
adc
fstp
sbb
imul
jmp
jmp
inc
push
int
std
cmp
xor
stos
sbbb
mov
mov
push
shrb
adc
pop
subb
arpl
into
test
adc
push
popa
cmp
xor
xor
into
gs
mov
aad
mov
dec
adc
cmpb
cmp
mov
inc
stos
int3
inc
mov
jg
fsts
dec
in
data16
icebp
scas
scas
cmp
jge
jno
pop
xchg
repnz
cwtl
xchg
inc
lcall
call
pop
shlb
mov
arpl
loopne
pop
in
je
ficompl
jns
cmpsl
push
stos
xlat
mov
mov
cmp
cmp
pop
in
lds
mov
pop
rcr
movsl
cs
mov
add
xor
jo
ljmp
imul
push
xchg
sbbb
xchg
ret
jne
ja
call
mov
rcl
add
mov
mov
mull
push
xchg
leave
xor
pop
and
push
das
sti
test
xor
faddp
push
shlb
and
adc
shll
mov
and
xchg
ret
fisubrs
pusha
mov
cmp
cmp
lods
out
popf
jne
lea
hlt
fucomp
jb
pop
dec
cli
stos
pusha
andb
int
xchg
movsl
xorb
pop
pop
push
outsb
adc
mov
dec
adc
shr
adcb
loopne
ljmp
int3
inc
lsl
les
xchg
cmp
sbbb
imul
mov
jae
in
xchg
imul
test
mov
insb
cmp
and
orl
in
outsb
pop
lods
adc
ret
movl
pop
int
add
adc
inc
or
aad
ljmp
into
add
xor
xor
dec
aad
lcall
insb
adc
das
inc
xlat
adc
jecxz
daa
stc
mov
daa
and
das
out
dec
cld
inc
stos
jg
or
repnz
push
ds
push
stos
iret
xchg
std
xchg
pop
sub
nopl
scas
mov
in
adc
pop
aad
in
cmp
inc
jno
insl
sbbb
adc
lret
dec
sbb
mov
into
mov
cwtl
sbb
ja
jecxz
adc
cltd
movsb
data16
xchg
mov
mov
imul
cmp
aam
int
xchg
jg
dec
add
push
adc
jecxz
inc
mov
push
test
test
push
adcb
inc
mov
das
jecxz
xlat
movsb
dec
cmp
xchg
cmpsl
mov
mov
xorl
or
pop
adc
adc
fnstsw
test
inc
mov
sarb
pop
enter
lcall
sub
xchg
in
andb
ficompl
cli
pop
mov
push
or
pusha
sahf
mov
into
out
or
lahf
adc
call
daa
jo
ret
ret
mov
inc
adc
xor
jmp
sbb
jp
add
testb
add
in
dec
psubsb
xor
push
mov
mov
xor
pop
mov
cmp
pavgw
gs
clc
sub
xor
es
inc
fstps
out
push
fwait
int3
addr16
jne
sbb
xchg
sbb
xor
push
dec
fsubrp
sub
repz
cmp
ret
mov
stos
dec
jae
sub
jl
mov
add
mov
popa
inc
stc
xor
mov
inc
mov
push
fstps
insl
push
cli
cs
movsl
dec
mov
push
std
aas
pushf
lret
cmp
lcall
add
push
pop
int
loope
pop
decl
xchg
mov
fwait
jb
test
jae
push
aas
frstor
mov
xor
pop
mov
push
push
push
cmp
push
mov
push
nop
push
sahf
in
cmpl
lret
jle
sbb
mov
dec
out
pop
sub
xchg
xlat
push
xor
int
out
call
and
mov
cwtl
or
iret
je
xor
inc
outsb
call
push
setae
inc
push
pop
fnstenv
mov
cmpsl
and
pop
mov
insl
ficompl
out
lods
aas
jecxz
lret
mov
cmp
repnz
jnp
pusha
aaa
inc
stos
hlt
mov
xchg
lock
sub
fistl
fsubs
fisubrs
dec
pushf
movsb
jnp
lret
add
xchg
lahf
cmp
nop
pop
insb
xor
call
fistl
sub
loope
popa
and
dec
adc
adc
dec
imul
xchg
jae
fcomip
into
mov
cwtl
call
or
mov
daa
lods
mov
popa
in
cmp
push
xchg
xor
cmp
jae
gs
mov
outsl
jle
xchg
in
mov
or
leave
fs
adc
nop
jo
fwait
mov
out
lcall
mov
add
mov
shlb
mov
xchg
jns
in
dec
xchg
lret
cmc
mov
push
add
sbb
cmpsb
cli
add
iret
aam
xchg
mov
test
jle
jb
adc
stos
lret
and
cs
add
ss
sub
xchg
mov
adc
add
cli
mov
sub
fs
xchg
xorl
xchg
testb
lds
fldl
jp
lcall
jbe
bound
push
clc
lds
outsl
mov
xchg
in
jnp
ds
or
imul
popa
mov
sub
je
out
mov
sub
filds
mov
adc
mov
roll
jecxz
xor
cmp
out
lahf
inc
rcrb
cs
stos
jle
cltd
fcoml
mov
adc
pusha
loopne
pop
mov
ja
mov
sub
sbb
nop
inc
clc
ss
int
or
jns
mov
imul
fs
inc
sub
xchg
jge
jg
movsl
xor
pushf
or
rcll
call
dec
push
pop
push
inc
ret
pusha
data16
mov
and
push
mov
repnz
test
jmp
rcrl
xchg
xchg
test
mov
imul
push
cltd
push
subl
sbb
scas
add
sub
sbb
out
popf
pop
mov
das
mov
sbb
fs
and
ds
pusha
daa
pop
mov
ds
shl
dec
cmpsl
mov
pop
cmp
lods
pop
and
mov
inc
lret
sahf
movl
pop
xlat
sbb
fwait
cmp
mov
cmpsb
and
cld
int3
iret
lahf
sub
push
or
loopne
lcall
adc
outsl
mov
inc
subl
popf
mov
fnsave
shlb
xchg
cmc
aam
dec
aas
mov
adc
inc
push
test
adc
test
mov
arpl
cmc
outsl
into
or
pop
arpl
les
rcrl
sbb
sahf
pop
cmp
cmpsb
cs
cld
decl
mov
xchg
clc
mov
and
push
dec
lret
outsl
outsb
adc
popa
xor
cld
cmp
or
mov
outsb
or
ljmp
jg
xor
mov
jecxz
loopne
sub
mov
xchg
push
scas
jg
lds
sbb
cmp
push
xchg
int
or
mov
cltd
xor
dec
mov
pop
inc
pop
lret
sub
lods
adc
mov
push
adc
cwtl
movsb
icebp
in
or
sbb
inc
insb
jns
push
xchg
push
push
hlt
rorl
pop
adc
sbbl
jecxz
fstpt
loopne
xchg
pop
pop
out
mov
fmulp
fistpl
pop
pop
ds
xchg
addl
inc
push
pop
mov
mov
mov
pop
std
aam
sub
cmp
imul
jne
push
dec
fcmove
cmc
pop
push
push
stos
inc
dec
inc
cmp
flds
jecxz
mov
push
fisubrl
push
mov
inc
in
repnz
xor
inc
lods
je
mov
xchg
xchg
jmp
dec
or
icebp
inc
pop
push
push
and
cld
and
or
mov
faddl
out
fcoms
push
lret
push
or
rol
addl
daa
mov
in
std
or
mov
clc
dec
in
insb
mov
movsl
mov
mov
int
sub
xor
stos
add
or
jl
stos
cli
retw
bound
cli
or
jb
lds
mov
push
lahf
pop
jae
f2xm1
pop
adc
and
mov
sub
jg
jae
fists
nop
iret
mov
add
mov
mov
dec
mov
aaa
stos
fcompl
subl
xchg
sti
pusha
pop
mov
jge
jle
mov
ss
sub
xchg
adcb
leave
or
xor
pop
les
rolb
xchg
xchg
adc
ja
pop
daa
in
je
xchg
movsl
cmpsb
mov
pop
out
adc
cmpl
fs
dec
mov
popa
add
insb
and
aam
das
pusha
lods
xchg
sub
test
repnz
ja
cmc
and
jmp
and
popa
insl
lcall
inc
das
shlw
sbb
xlat
xor
jmp
cmpsb
in
cld
mov
cmp
pop
ret
stc
sahf
test
push
jne
inc
into
push
fdivrs
inc
xchg
inc
sbb
popf
in
cmp
xor
das
jb
je
outsl
jbe
add
js
jnp
std
cmp
or
mov
xor
outsb
mov
mov
cli
popa
mov
pop
movsl
imul
xor
dec
xor
hlt
cmp
sbb
icebp
sbb
fistl
pop
test
repnz
adc
test
xchg
push
push
addr16
sbb
ret
out
xchg
and
pop
add
add
cmp
ret
aad
jne
stos
dec
test
cli
call
icebp
ljmp
adc
outsb
dec
mov
push
inc
stos
pop
mov
test
movsl
push
stc
cmp
add
in
cmpsl
inc
js
lret
dec
scas
jecxz
and
fnstcw
fdivs
inc
lret
fwait
shlb
mov
fiaddl
xorps
int
pop
test
dec
repnz
pop
ret
and
mov
and
loopne
cwtl
adcl
sarl
and
jns
mov
sub
sub
inc
and
push
popl
pop
and
pop
dec
push
push
xchg
shll
nop
mov
jecxz
dec
int
fs
das
inc
pop
jno
icebp
dec
mov
int3
into
cmp
dec
call
out
ja
loop,pn
outsl
cs
fmuls
or
mov
clc
jmp
cmp
mov
inc
pop
mov
or
push
and
popa
inc
pop
inc
das
dec
fs
out
jle
fcompl
push
dec
xchg
pusha
xchg
loopne
fmull
icebp
mov
in
jecxz
xor
cld
add
popf
jae
adc
out
mov
sbb
fisubrs
sbb
jmp
bound
push
inc
test
pop
cmp
sahf
mov
stc
push
insl
das
sbb
xchg
enter
int3
leave
mov
mov
xchg
movsl
fbstp
xchg
mov
shr
lock
jg
lods
stos
push
or
stos
shll
cmpsb
pop
cmp
push
jb
xchg
xchg
outsl
xchg
stos
fistps
ljmp
test
dec
imul
int3
pop
aam
pusha
mov
imul
fists
in
jbe
xor
stos
and
ret
inc
jne
inc
mov
sbb
xchg
in
icebp
or
xor
xchg
cmp
pop
jge
insb
test
xorb
outsl
lret
xchg
imul
loopne
jp
pop
movsl
pop
cmpsb
pushf
arpl
mov
or
dec
inc
inc
hlt
pop
xlat
push
jmp
ror
dec
test
fcompl
adc
fdivrl
lock
loop
fs
jg
push
fsub
loope
dec
mov
dec
xchg
xchg
cld
dec
sbb
shll
leave
stc
mov
fsubrl
sbb
fisttps
or
xchg
dec
jbe
and
inc
pop
repnz
and
mov
jo
fsts
push
jle
sbb
int
xchg
lcall
out
pop
int3
popf
fcomps
jge
in
jmp
insb
dec
fisubrs
xchg
xchg
js
js
pmaddwd
push
mov
stc
aas
mov
pop
aas
aad
outsl
cltd
aaa
pop
xor
loope
pop
mov
lods
fsubr
or
js
test
cmpsl
ja
into
stos
dec
scas
fisttps
push
or
mov
sub
dec
loopne
scas
sub
rcll
repnz
adc
jge
ficompl
add
ret
mov
nop
sbb
inc
or
aas
cmp
lahf
mov
mov
mov
pop
push
dec
inc
rcll
les
out
pop
cld
and
stos
sarb
outsl
ds
push
cmc
rcrl
pop
jae
clc
sbb
push
je
movsl
cld
mov
pusha
lcall
pop
mov
inc
lahf
stc
sbb
mov
pop
mov
jae
inc
dec
add
fdivs
sbb
lahf
add
orl
dec
movsl
nop
nop
adc
xor
movsb
push
xor
lcall
pop
dec
mov
xchg
fadd
jbe
or
insl
into
test
loopne
pop
dec
scas
fcmovb
decb
xorl
or
js
add
pop
add
or
cmp
xchg
jle
fisttps
out
movsl
addb
mov
ss
dec
mov
sbb
out
sbb
cmpsl
fstl
daa
xchg
cmp
jg
aad
clc
loop
add
dec
test
pop
cltd
nop
pusha
or
cmpsb
addr16
cmp
stos
lahf
call
divb
or
inc
sbb
dec
pop
fcmovnu
jb
xchg
lods
inc
mov
into
xchg
adc
push
lds
xlat
fs
cs
push
sbb
pop
stc
pop
mov
jle
scas
and
popa
leave
lret
movsl
jp
inc
sub
aam
xor
pop
jecxz
aaa
fwait
scas
ds
lods
stc
push
leave
or
rcr
jnp
rclb
movsl
jno
pusha
out
mov
sbb
das
adc
test
and
aam
sti
pop
ret
push
or
push
dec
movsb
rorl
das
xchg
call
sub
mov
adc
iret
inc
jae
inc
ljmp
ret
setle
iret
sbbl
fldenv
xchg
adc
loopne
jl
push
pop
jnp
push
lahf
jo
mov
sti
out
int3
dec
add
xor
adc
jne
mov
lcall
pusha
push
ficoml
xchg
rcl
fidivs
add
push
ljmp
stc
mul
mov
add
out
or
cmpsb
cmp
jg
inc
into
inc
sbb
call
js
repz
arpl
and
sub
pop
jb
xor
dec
mov
sbb
cmp
or
faddl
shrb
inc
jecxz
sarl
scas
inc
dec
notb
ss
sub
dec
fwait
loope
inc
lret
ficoml
pusha
xchg
mov
loopne
adc
add
jnp
movsb
add
ficompl
imul
shll
test
loope
push
xchg
sub
imull
sbb
imul
fidivs
cmp
xchg
jle
insb
cmc
mov
data16
and
daa
xor
inc
mov
add
inc
dec
inc
lds
sub
pop
ds
ss
repz
xor
sarl
add
jns
les
add
mov
sbb
mov
sub
bound
pop
or
shrb
shlb
adc
jae
xchg
push
push
dec
add
push
dec
cmp
outsl
sbb
jmp
outsb
add
icebp
fmuls
sub
xchg
push
insb
inc
test
dec
jns
fnstcw
pop
push
xchg
jl
bnd
mov
rolb
adc
mov
push
jle
bound
mov
xchg
aaa
mov
adc
pop
sub
mov
pusha
aaa
jle
cmovb
iret
mov
outsb
mov
ficoms
js
or
fadds
xchg
das
mov
jne
jmp
sub
add
jns
mov
test
les
hlt
cmc
cwtl
out
in
iret
mov
xchg
fcmovnu
pop
in
aas
lea
cld
loopne
loope
gs
inc
pushf
inc
add
sbb
add
or
mov
xchg
inc
mov
popa
sahf
movsb
in
or
push
mov
andb
or
jmp
inc
dec
aas
xor
or
and
sbb
sbb
push
push
das
mov
pop
jg
sub
mov
pop
dec
adc
test
pop
test
pop
lods
inc
in
in
sub
or
dec
jecxz
dec
sub
test
pop
add
gs
cmpl
nop
je,pn
adc
sub
add
scas
outsl
cmp
insb
xchg
icebp
jns
push
pop
pop
cld
out
or
push
jnp
mov
in
inc
gs
sahf
loop
jno
dec
and
lds
xchg
jb
mov
mov
adc
ret
arpl
lahf
mov
cmp
js
push
cwtl
dec
add
cmp
xor
ss
mov
iret
push
sbb
dec
cmp
push
cmp
or
ret
icebp
xchg
stc
fimuls
xor
fcmove
sbb
jb
jnp
or
or
jle
jbe
aad
mov
loop
xchg
ret
sub
xor
mov
and
pop
cmp
fdivl
xchg
jae
ljmp
mulb
pop
shll
dec
jecxz
mov
inc
repnz
ljmp
lods
sahf
mov
push
movsb
and
mov
pop
mov
jnp
push
dec
leave
mov
pusha
loope
push
mov
cs
mov
xchg
cmpsl
fs
jno
movsl
xor
sahf
mov
sub
hlt
mov
xchg
mov
add
and
mov
jbe
stos
xchg
and
mov
push
imul
or
arpl
add
inc
inc
daa
pop
pushf
xchg
mov
in
cmp
pop
out
mov
mov
stos
aad
pop
cmp
cmp
mov
movsl
and
pop
push
push
mov
xor
les
mov
push
mov
test
lock
mov
dec
sbb
dec
arpl
ret
mov
imul
xchg
js
test
inc
jno
or
test
and
jmp
mov
push
push
andb
sub
enter
cmp
mov
xchg
or
js
popf
out
add
fisttpll
cmp
xlat
fcoml
jl
arpl
push
inc
ja
lods
cmpsl
stc
idivl
int3
repnz
push
push
js
pop
lods
xor
lret
lahf
cmc
push
xchg
xchg
ljmp
pop
sti
popa
daa
lcall
jg
orb
ss
out
popf
or
cmc
mov
cmpsl
jg
push
jae
xor
mov
mov
aad
lods
inc
js
js
sbb
inc
pop
test
insl
das
pop
xor
addr16
and
lods
dec
in
xchg
in
pop
mov
cmpsb
xchg
inc
movsb
inc
sbb
sbb
mov
pop
ffree
mov
and
lock
enter
pushl
std
mov
sbb
sti
movsl
xchg
xchg
jmp
nop
jbe
test
mov
push
cltd
test
fs
push
iret
jnp
adc
sub
scas
cmpsb
jg
ret
mov
fldt
push
sbbb
jno
cmp
mov
scas
jnp
xchg
and
out
add
dec
cwtl
xchg
pop
shl
pop
pop
loopne
sub
sbb
fildll
sub
mov
xlat
xchg
dec
mov
scas
gs
je
xor
pop
popf
bound
add
repz
clc
lea
sbb
cs
sbb
fnstsw
bnd
rcrb
xor
js
xchg
std
in
das
jbe
cmp
lock
enter
lret
sahf
aaa
jbe
jae
adc
iret
pop
mov
ficompl
jl
sbb
sbb
push
push
pop
or
cmpsb
cmp
mov
rcrb
int
cli
mov
mov
push
push
push
not
fcmovbe
cmp
insb
sub
jne
or
dec
inc
in
cmpsl
xchg
pop
inc
push
notb
add
cmp
adc
mov
xor
pop
in
and
aas
mov
ret
hlt
xchg
nop
mov
jnp
sti
dec
sbb
mov
cltd
dec
mov
or
movsl
or
dec
and
lods
dec
in
cwtl
sbb
mov
fs
idivb
mov
sub
push
xchg
jbe
scas
movb
lock
push
and
jmp
dec
sub
in
sbb
mov
sbb
and
outsl
xor
leave
cld
aas
mov
popa
or
mov
std
test
push
mov
or
jbe
inc
sub
cmpl
out
push
inc
inc
jmp
sub
out
sahf
sbb
mov
xchg
out
xchg
dec
inc
and
aaa
aaa
and
cld
mov
scas
mov
outsb
call
add
mov
les
loopne
ja
jo
pop
scas
mov
mov
dec
dec
push
or
test
fwait
addr16
aad
out
ljmp
mov
push
or
flds
cmp
cs
fisubs
add
mov
push
adcb
icebp
mull
and
sbb
cmp
sbb
jmp
jno
lods
pop
test
sub
outsb
hlt
dec
popa
dec
and
cli
enter
fistps
pusha
xor
dec
pop
out
adc
pop
shll
dec
testb
inc
movl
jmp
out
cltd
mov
mov
xchg
addb
mov
adc
rcll
and
movsb
inc
loopne
mov
shl
shrb
xor
add
into
sahf
adc
pop
sar
sub
scas
scas
jae
mov
out
mov
pop
ret
cs
push
cmp
arpl
jmp
and
ret
ret
pop
jae
int
xchg
les
out
inc
sti
push
add
xchg
xchg
pop
je
int
shl
push
movsb
push
xor
repnz
dec
adc
push
in
xor
mov
btc
les
icebp
jae
mov
xor
fwait
arpl
jne
sub
mov
les
push
int3
xchg
xchg
hlt
mov
jns
and
scas
rorl
hlt
icebp
mov
mov
andl
mov
jbe
out
xor
filds
mov
cmpsl
stos
mov
out
mov
sbb
fdivrs
jmp
push
inc
fmulp
fstl
push
loop
push
stc
cmpsl
lcall
sbb
and
sbb
xor
in
rcr
cmp
push
inc
aad
clc
imul
pushf
mov
dec
fiadds
sbbl
mov
cmc
xchg
ja
pop
inc
sbb
pop
in
mov
dec
movsl
out
movsl
push
scas
test
ja
mov
fwait
adc
daa
call
gs
xchg
sbb
jne
shl
inc
sub
mov
je
ljmp
aad
ficoml
mov
jae
xor
or
fidivl
mov
stos
xor
test
push
mov
sub
fiaddl
imul
adc
popa
ret
jle
outsb
insb
push
or
cmp
add
inc
pop
pop
or
or
or
imull
mov
stos
dec
pushw
in
in
pop
shlb
stc
cwtl
mov
or
and
mov
mov
jmp
leave
mov
test
jno
outsl
xchg
divl
xor
mov
adc
lcall
repnz
xor
mov
mov
jae
dec
push
ret
lret
loopne
mov
repz
xchg
lds
jle
loope
inc
jnp
add
pop
xchg
call
repz
adc
loop
int
cmpsl
mov
mov
sbb
add
outsl
gs
dec
xlat
adc
arpl
fidivrs
push
ret
xchg
jne
mov
push
mov
aam
call
test
ds
push
mov
xor
push
cs
add
mov
lock
adc
adc
mov
ficoml
cld
pop
mov
hlt
pop
test
into
and
or
xchg
out
cmpl
lret
jno
jl
daa
inc
mov
scas
xor
popl
pop
push
js
cmp
dec
xorb
repz
push
or
cli
and
testb
leave
push
outsb
cmp
cs
jge
cmc
ljmp
mov
inc
hlt
je
int3
xor
mov
cmp
jne
fcmovbe
push
popa
fldcw
lret
cmp
out
sbb
int3
lcall
jle
cmp
xchg
xchg
xchg
mov
mov
mov
pop
idiv
pop
adc
mov
in
mov
pop
push
outsl
nop
test
scas
pop
cwtl
cld
daa
bound
jl
ret
movsl
andb
mov
push
sub
sbb
xor
jp
imul
data16
aaa
in
lcall
pop
push
sub
mov
sbb
and
mov
dec
xchg
push
stos
xchg
jae
sbb
mov
xchg
inc
mov
xor
cmp
inc
outsb
lcall
sbb
das
clc
mov
pop
jae
sbb
mov
push
and
icebp
mov
xchg
ss
fisubrs
ret
ret
in
jl
xchg
adc
imul
loopne
int3
ja
inc
test
fldcw
and
sub
cmp
dec
sub
lds
andl
repnz
pop
fdecstp
xchg
outsb
cli
adc
dec
inc
div
mov
fs
rcrl
fbstp
dec
xor
addr16
aad
mov
imul
fucomp
fsubrl
loopne
cmc
leave
mov
mov
push
jecxz
adc
pop
movsl
daa
add
mov
push
cmp
push
fsts
lock
cltd
negb
test
sub
ds
and
pop
mov
imull
and
in
pop
fiadds
das
jne
mov
cmpl
dec
cmove
sahf
cltd
dec
and
xchg
cs
sub
xlat
inc
jge
mov
push
cmp
popa
jnp
jmp
pop
push
ds
xchg
mov
fs
inc
lahf
ret
mov
repz
lea
add
xchg
aam
push
mov
cmpl
jl
addb
je
inc
pop
add
sub
ficompl
repnz
popa
sub
cmpsb
dec
rorl
inc
mov
aas
fucomp
dec
jle
in
push
ds
jnp
arpl
or
adc
test
sarl
pop
psubsb
in
add
pop
pop
mov
mov
push
pop
dec
and
sub
mov
mov
mov
mov
sbb
das
jne
lods
pop
imulb
fnstsw
sbb
pop
sar
cwtl
jns
inc
cmp
lret
mov
push
imul
js
daa
jns
test
jmp
mov
es
incb
xor
jo
int
and
andl
push
xor
cmpsl
sub
pop
jmp
push
inc
sub
test
outsl
je
into
inc
or
sub
mov
push
xchg
mov
bswap
lods
push
not
std
int
sahf
dec
pop
daa
adc
dec
pop
xor
movsl
jno
pop
ds
ss
aam
mov
dec
stos
sub
xchg
ret
ljmp
sub
inc
jp
add
pop
adc
mov
fsubr
xchg
add
and
sub
jle
or
cmp
popa
xchg
xor
int3
out
aam
cld
fisubrs
leave
or
mov
sbb
push
cltd
xor
outsl
cmp
popa
dec
xchg
xchg
lcall
fwait
cmpsb
mov
icebp
and
push
fs
aas
fbld
aam
adc
in
sbb
aad
adc
sbb
jne
hlt
pop
push
bound
mov
test
pop
mov
add
jnp
in
pop
test
lods
pop
pop
cwtl
xor
loop
ss
in
add
int
sbb
push
repz
push
ret
pop
lea
push
pop
sub
jne
jnp
or
addr16
mov
cmpxchg
fwait
imul
xchg
xchg
cmpsl
and
pop
cmp
jl
dec
sbb
mov
inc
push
test
inc
jp
xor
or
aaa
rclb
scas
jmp
add
ret
mov
mov
ds
or
inc
add
dec
ss
mov
dec
add
mov
mov
mov
inc
jbe
mov
push
scas
stc
xor
adcl
mov
jmp
dec
pop
jmp
rcrl
inc
notb
push
or
lret
lods
xchg
adc
bound
je,pt
lds
pop
repnz
lock
xchg
rcrb
popa
push
sub
lahf
lcall
lods
in
lahf
mov
ss
xchg
pop
test
add
pop
mov
or
js
cmp
mov
xor
pop
mov
mov
jae
and
mov
lods
sbb
ds
xlat
outsl
jb
cli
xorb
std
data16
sbb
out
dec
cwtl
insb
in
imul
scas
sub
jp
stos
mov
mov
sbb
inc
xchg
mov
pop
ljmp
cmp
mov
add
ja
in
add
xchg
into
adc
and
fildl
cmc
or
cmp
lds
call
pusha
lock
mov
fs
mov
or
bound
pushf
mov
je
insl
daa
stos
inc
xor
je
jmp
out
mov
push
sub
and
mov
sbb
xor
leave
daa
push
mov
mov
pusha
scas
rclb
xchg
mov
jecxz
push
icebp
adc
out
loope
push
push
sub
cmp
cpuid
push
dec
mov
mov
pop
popf
add
sbb
testb
das
lds
test
and
inc
divl
je
fsubrs
mov
shl
sub
xor
cmp
or
call
adc
mov
sub
fildl
sbb
jle
sub
repz
icebp
cli
lods
je
mov
mov
adc
call
lods
out
xlat
jge
cmp
or
cmp
in
leave
dec
push
jecxz
into
out
cs
mov
xchg
push
jmp
outsl
in
ja
jmp
or
mov
dec
sbbb
mov
out
lods
push
mov
mov
jecxz
pop
xor
sti
push
cmp
mov
repz
mov
mov
lret
adc
pop
lret
lcall
in
stos
pusha
out
fbstp
add
subb
mov
dec
cwtl
sbb
pop
add
sahf
fcompl
sbb
fisubrl
stos
nop
fisubs
insb
addl
jecxz
pop
adc
lret
push
push
div
lock
add
cmp
adc
ds
xor
cli
xor
fistpll
in
dec
push
push
xchg
std
push
cmp
insl
bound
xchg
into
pop
fildll
popa
dec
ret
scas
sbbl
jnp
rcrl
lretw
mov
std
and
shll
mov
push
pusha
pop
sub
push
movsb
fidivl
add
push
push
mov
mov
push
testl
rolb
lcall
enter
add
out
lea
aam
jno
xchg
aaa
mov
mov
adc
subb
lcall
fists
mov
test
and
pop
cld
dec
insb
test
or
sub
cmpsb
std
fstl
icebp
mov
int3
sahf
and
cmp
repz
push
adc
fsubp
test
adcl
jecxz
mov
mov
or
mov
arpl
add
cmpsl
inc
orb
shlb
lret
movsb
dec
cmp
or
aad
jl
loope
js
call
and
insl
sbb
ja
mov
xchg
mov
xor
out
push
test
dec
fnstenv
sub
shl
cmp
push
das
lret
jno
in
mov
out
aaa
and
xor
push
adc
push
movsb
mov
dec
fbld
aad
pop
nop
mov
or
int3
and
mov
lret
mov
dec
aad
jne
imul
inc
imul
mov
cld
dec
adc
test
mov
mov
in
sbb
incb
mulb
xorl
and
jecxz
jnp
bound
xchg
or
mov
mov
lea
mov
aaa
xchg
adc
sahf
shll
xchg
pop
xchg
pop
ljmp
mov
add
lea
cltd
out
inc
dec
xchg
jecxz
ret
je
pop
outsb
fisttpll
push
aam
clc
jmp
lret
insl
jnp
rcll
jle
push
scas
cmp
jg
cli
arpl
xor
cmp
repz
or
sti
adc
push
jle
lods
mov
cmp
gs
or
jb
xorb
shrb
push
xchg
sub
test
adc
ljmp
ljmp
push
jo
fwait
stos
in
cmp
addr16
cmp
mov
jbe
ret
jo
mov
mov
vmwrite
scas
cvtpi2ps
inc
and
hlt
popa
and
shlb
imul
shrl
dec
sti
fildll
icebp
sub
bound
inc
and
lods
test
mov
sbb
xor
ljmp
call
inc
jle
jb
scas
jmp
cmp
inc
fmulp
mov
and
sub
push
dec
lea
in
mov
adc
sahf
mov
stos
mov
fbld
pusha
pop
sbbl
lret
int
xchg
and
cmp
dec
push
fstps
addr16
jl
pop
and
stos
gs
cmp
lock
mov
jmp
cs
decl
adc
mov
fiadds
sbb
mov
jmp
dec
test
aam
pop
push
pop
inc
pushf
adcl
pop
mov
std
in
mov
adc
idivb
es
xchg
hlt
shl
pop
jae
push
xor
imul
add
mov
int3
dec
mov
mov
adc
fcomps
divb
mov
fwait
push
test
das
aam
xchg
inc
ja
es
jmp
xchg
cmc
cmc
or
cmp
jg
testb
xchg
and
add
into
mov
or
jnp
sbb
arpl
testb
xlat
sub
pop
inc
inc
sub
add
jle
pusha
pop
mov
mov
dec
gs
fnstenv
cmp
xchg
push
fldenv
cmpsb
jle
xchg
jp
stos
pop
int
sbb
shrb
mov
and
fdivrp
outsl
repz
add
insb
cwtl
cmp
sbb
ret
lcall
jne
mov
xacquire
push
es
daa
sub
hlt
aas
jmp
stc
out
mov
mov
outsb
std
xor
nop
mov
test
mov
jno
in
out
xchg
aaa
fistpll
push
or
stc
ret
push
jecxz
jmp
gs
or
sub
leave
push
push
nop
dec
push
mov
cs
scas
nop
jne
inc
inc
repnz
test
and
fldenv
cs
lahf
xchg
mov
dec
leave
mov
ljmp
jne
mov
push
xor
push
inc
inc
inc
pop
add
lea
addr16
add
mov
popa
jg
pusha
in
adc
shl
add
push
outsb
xchg
das
ja
js
push
mov
sbb
inc
inc
das
ja
ret
andb
or
inc
or
mov
bound
aam
mov
xchg
inc
jnp
subl
push
inc
xor
mov
mulb
jnp
mov
bound
das
adc
cmpb
inc
dec
sub
xor
cmp
jle
jecxz
and
or
xchg
fadds
mov
pop
mov
sti
jns
or
cld
add
leave
inc
vptest
xlat
insb
ds
xor
mov
mov
xor
in
xchg
and
addr16
negl
push
xchg
adc
cmp
adc
into
test
pushf
inc
add
inc
sbb
adc
mov
add
dec
fs
into
fnstsw
push
pop
int3
sub
int
or
jns
cltd
push
in
and
mov
mov
mov
add
fsubl
and
in
mov
jle
xchg
test
ds
out
insl
repnz
insb
jnp
mov
adc
jbe
out
jmp
inc
or
add
ret
xchg
xchg
cs
mov
cmp
rol
std
mov
ret
xchg
and
pop
arpl
mov
in
rcrb
jbe
push
fs
repz
mov
pusha
aaa
mov
and
cwtl
xlat
movsb
or
lods
xchg
idiv
testb
enter
push
or
mov
and
mov
xor
pop
mov
sbb
jae
mov
mov
pusha
mov
mov
pop
sbb
imul
fiadds
dec
push
jne
iret
mov
mov
push
in
test
sub
jbe
cmc
das
adc
not
jns
popa
lcall
push
xor
adc
test
cwtl
ret
cs
loope
pop
push
pushf
fnsave
aaa
push
in
xchg
and
jl
fisttpl
sub
pop
mov
xorb
stc
lods
mov
cmp
fs
cld
movsb
dec
sbb
mov
dec
pop
sbb
stos
or
mov
aad
cli
test
push
rcl
mov
push
ret
cmp
nop
jo
aaa
test
and
daa
pusha
xchg
adc
cmp
addr16
dec
mov
or
push
shll
sub
imul
dec
and
pop
in
bound
adcl
jnp
jns
jbe
mov
pop
dec
mov
jae
lea
fistpl
jg
adc
adc
scas
cwtl
inc
push
rolb
popa
lods
cs
out
les
in
fldt
loop
nop
dec
xchg
fdivs
das
jle
testl
lcall
cmp
xchg
xlat
mov
xchg
jne
xchg
sbb
sahf
fimull
es
mov
mov
mov
push
cmpsl
das
int
int
ret
pop
cmpsb
push
mov
add
jae
leave
lcall
sub
mov
icebp
inc
pop
and
push
shll
fisubrl
sbb
sbb
cmp
inc
and
add
sub
cmp
cmc
out
jmp
jb
hlt
aas
sub
lods
lock
test
adc
pop
pusha
cs
sti
jns
and
pushf
mov
arpl
cmp
mov
lea
dec
or
fidivrs
lods
push
push
ret
inc
mov
dec
cmp
rclb
fmul
lcall
cmpsl
mov
jb
fnsave
data16
xor
or
jb
ret
les
stos
jmp
lods
lret
jb
and
aaa
in
mov
push
fisttps
cmp
mov
cmp
shl
ljmp
push
cmp
and
mov
iret
in
std
test
les
arpl
jb
aaa
sub
push
nop
mov
sahf
jnp
mov
mov
fs
adc
push
xor
lret
mov
iret
jl
shrl
in
jle
repz
roll
repz
add
roll
sub
ret
out
xchg
lret
inc
xor
jae
stc
imul
fmull
dec
nop
aas
jg
mov
adc
cmp
or
and
add
adc
aas
mov
std
rorb
push
pusha
xchg
xor
sahf
and
sub
mov
jo
dec
dec
es
out
lret
cmp
mov
add
mov
movsl
cld
sub
inc
in
xchg
andb
mov
shlb
rolb
neg
divb
mov
imul
dec
jecxz
roll
into
ds
pop
lds
repnz
inc
dec
sbb
dec
pop
daa
mov
jnp
mov
enter
int3
test
cli
pop
test
les
inc
xor
shlb
xlat
adc
pusha
repz
pmulhuw
cld
lret
inc
xchg
test
clc
push
push
fists
xor
popf
or
cmp
dec
or
add
adc
mov
cmpsb
sub
sub
in
push
xchg
ljmp
loopne
cmp
sbb
cli
sub
scas
out
xor
in
inc
enter
add
inc
pop
xor
divl
roll
xorl
push
int3
and
add
jecxz
bound
xlat
sti
iret
es
and
xchg
sahf
gs
xor
and
mov
xchg
add
add
mov
popa
cmp
or
mov
mov
cmpsb
and
imull
clc
mov
jnp
sbb
cmpsb
jecxz
jb
lds
xchg
pop
aas
adc
jnp
pop
fmuls
sub
fstl
and
pushf
sbb
adc
xchg
stc
into
jb
xor
pop
mov
xor
cmp
push
in
or
dec
inc
out
add
push
popf
shll
dec
fsubrl
push
int3
xchg
movsl
adc
stc
dec
jmp
push
xor
fildl
jg
push
xchg
imul
push
pop
pop
int
push
je
sbb
inc
sub
test
pop
pop
xlat
lahf
add
mov
cmp
push
test
fcoml
pushw
push
test
push
mull
jge
inc
jbe
sahf
jmp
sub
push
push
mov
sbb
call
test
je
xor
cmp
or
mov
data16
jb
aas
dec
mov
jns
scas
fnsave
and
xlat
in
mov
cli
cmp
adc
sub
dec
test
lods
inc
fwait
inc
jnp
cltd
idivl
test
cmp
flds
mov
jl
sub
jl
jbe
jmp
xchg
addr16
popa
adc
stc
dec
clc
cwtl
mov
jmp
inc
sub
sbb
cmp
lret
cmp
xchg
insl
test
jecxz
add
cmp
jp
imul
mov
ja
cmp
das
loop
sub
cmp
cld
inc
test
fbld
fisttps
mov
add
mov
cmpsb
adc
cmpl
pop
xor
out
mov
roll
aam
movsb
push
xchg
mov
or
adc
cmpsl
jbe
mov
aaa
dec
test
cmp
mov
test
push
sub
shlb
and
test
xchg
mulb
inc
leave
les
jo
mov
push
pop
pushf
outsb
mov
cmpl
shrb
roll
fisttps
out
push
push
jp
sbb
mov
cli
das
mov
jnp
andl
fwait
icebp
jle
int3
xor
sbb
aas
pop
sbb
sti
mov
inc
jecxz
xor
ja
addr16
in
cmp
fstl
loope
mov
cli
bound
xchg
subl
inc
addb
pop
ret
cmpl
incl
sbb
int3
dec
and
dec
inc
pop
sbb
push
mov
mov
dec
sbbl
push
sbb
rcr
mov
and
notb
lret
jo
loopne
sahf
dec
mov
dec
pop
scas
test
jl
test
pop
and
shrb
out
dec
loopne
aam
pop
andl
xor
lret
mov
xor
lret
mov
lds
or
pop
jg
scas
into
popf
jmp
xor
push
mov
cmovae
sub
insl
lcall
adc
fs
xor
jge
std
pop
shr
out
mov
fs
mov
sub
sbb
jne
rcl
enter
push
inc
mov
xorb
cwtl
rclb
les
fmull
ljmp
inc
push
out
sbb
jae
lods
aam
aam
jmp
xchg
xor
test
mov
call
jge
cli
dec
push
imul
xchg
xchg
adc
adc
adc
add
flds
ret
aaa
clc
xchg
sub
xlat
sbb
dec
pop
idivb
mov
mov
out
mov
dec
insl
scas
sti
cltd
loope
mov
xor
sub
cmpl
add
inc
movsl
mov
out
and
sbb
jl
rcrl
lock
xor
pop
xchg
ds
cmp
scas
add
mov
dec
shr
mov
cmp
je
cmp
imul
jmp
xor
out
icebp
out
cli
cmp
incb
repz
lock
push
jb
scas
or
adc
add
das
and
cmp
lock
cmp
cli
jmp
jecxz
pusha
aas
cmpsl
jge
call
sbb
inc
mov
fcmove
adc
cmp
and
or
xor
mov
pop
mov
outsl
jnp,pt
arpl
push
jecxz
xor
loop
pop
jb
mov
adc
subb
ret
pop
push
adcb
cmp
sub
cltd
jo
or
pop
mov
scas
pushf
cs
mov
outsb
divb
inc
jle
jo
push
dec
inc
sbb
aaa
or
cmp
mov
pusha
gs
shrl
push
out
jecxz
testb
repz
cvtpi2ps
ss
push
aas
pop
cmp
dec
inc
imul
pop
pusha
hlt
cmp
sub
scas
cmp
aam
cltd
jb
in
inc
out
aad
arpl
xchg
sbb
ja
inc
push
sub
push
xor
leave
push
aad
mov
clc
scas
icebp
xor
xorb
cwtl
or
fsubp
testb
xchg
sub
xchg
enter
xor
push
mov
inc
lods
fcomi
movsb
pop
sub
cmpsb
jae
gs
scas
stos
mov
inc
jbe
int3
jno
es
fnstenv
sub
push
xchg
pop
out
cs
aam
cmpsb
mov
sub
xor
sub
or
jno
push
ja
and
es
xchg
ret
fidivrs
sbb
in
movsb
push
xchg
and
xchg
push
movb
stos
xchg
sbb
fwait
lods
notl
or
dec
xchg
stos
push
outsl
dec
fidivrs
jns
push
scas
xor
xor
mov
pop
in
jge
and
lods
dec
xlat
mov
dec
cld
in
imul
decb
dec
idivl
jg
inc
adc
jge
push
jl
lahf
xor
addr16
aam
xchg
cs
movsl
insb
sbb
mov
jae
fstl
mov
data16
inc
in
sahf
sub
push
rcr
cmp
lods
rcrb
pop
clc
push
aad
mov
outsl
jecxz
dec
ljmp
sub
dec
xor
in
mov
adcl
cmpsl
or
imul
out
adc
out
aad
add
push
lds
lret
mov
xchg
test
jno
dec
push
mull
insl
ss
cmp
push
mov
ss
roll
mov
jno
ljmp
dec
mov
push
fwait
es
hlt
adc
mov
jp
icebp
idivl
fsubrl
and
or
dec
inc
insl
setne
scas
push
in
mov
in
repz
xchg
into
imul
sbb
test
ret
jge
cmpsl
pop
cs
enter
dec
jg
and
popa
popa
adc
xchg
pop
inc
mov
jb
sub
inc
repz
imul
in
push
fs
pop
xor
nop
push
dec
sbb
cmp
mov
ds
andl
pusha
and
push
int
cs
pop
outsl
rcrb
loope
into
lcall
dec
xor
add
rol
sub
xchg
push
popf
push
fs
call
pop
jecxz
sub
sbb
adc
sbbl
push
xor
or
push
inc
outsl
outsb
cmp
test
push
add
lods
stc
cld
ret
daa
pop
dec
nop
dec
dec
sbb
out
or
mov
enter
cmp
jno
or
cmp
shr
mov
jne
mul
aas
shrb
xor
dec
mov
pop
or
rol
mov
and
and
sub
gs
xor
inc
inc
test
rorl
fmull
fwait
xor
stos
push
les
fistpll
mov
call
out
test
jb
dec
hlt
xchg
sbb
and
inc
pop
repnz
cmpl
insl
xor
testl
fnstenv
or
mov
addb
or
scas
push
ficoms
stos
mov
scas
push
nop
js
inc
cmp
std
jns
mov
xchg
or
ror
in
jmp
jb
aam
and
stos
popf
je
sbb
shl
jae
xchg
xchg
xor
pop
aaa
and
and
jl
insb
cwtl
and
jmp
rorb
stos
mov
stos
ret
ja
popf
sub
popa
lea
add
mov
inc
and
sbb
lods
test
mov
push
push
inc
sub
sbb
push
es
mov
mov
inc
inc
jns
mov
xor
jo
repz
das
cmp
pusha
ret
jmp
xor
popf
jns
dec
cmp
lea
fsub
sbb
or
inc
xor
lods
xchg
insl
jl
je
add
aas
mov
and
push
sbb
sahf
gs
test
dec
inc
adc
fidivl
mov
std
push
and
imul
std
popf
cld
outsl
mov
adc
call
sub
inc
lahf
jb
inc
andb
mov
popf
sbb
fwait
adc
arpl
mov
dec
in
xor
dec
and
mov
and
adc
mov
cmp
imul
je
mov
ret
xchg
imul
imull
stos
push
test
idivb
cwtl
or
mov
mov
mov
ud1
or
push
jns
mov
out
stos
rorl
int
xchg
das
sbb
cwtl
add
pop
pop
push
aaa
add
xchg
mov
out
mov
sub
mov
adc
add
pop
inc
dec
xor
out
addb
xor
fucomi
subl
push
icebp
jb
into
cmp
lahf
movb
mov
add
mov
pop
test
pop
push
pop
jo
ljmp
xchg
xlat
xor
test
push
lock
push
push
loope
xchg
and
or
gs
mov
das
jmp
cmpsb
sub
mov
in
sub
push
mov
jg
roll
sbb
in
xchg
sbb
pop
cmp
leave
add
mov
mov
push
inc
lods
das
mov
mov
dec
jl
lahf
in
sub
adc
out
jmp
inc
scas
clc
pop
lcall
mov
aad
inc
imul
aad
cs
aam
push
leave
or
inc
pop
lret
dec
xor
push
mov
addr16
adc
insl
xor
in
pop
lcall
inc
sbb
mov
lret
push
test
cmp
loope
sahf
test
aaa
movsl
shlb
mov
cmp
push
out
rolb
and
mov
mov
into
arpl
add
in
push
outsb
dec
or
mov
rcrb
std
in
add
test
outsl
int3
lahf
fucomp
adc
ljmp
sahf
xor
testb
lret
jmp
sbb
fistpl
sub
and
ret
sub
lret
push
cmp
or
fmulp
inc
in
cmp
imul
sub
ja
xchg
or
inc
jo
aad
mov
pop
shl
and
dec
cmp
test
out
loopne
fidivs
sub
add
flds
stos
and
cltd
out
cmp
sub
inc
lea
mov
ret
add
adc
and
gs
adc
pop
jae
xchg
iret
add
lcall
jp
movsb
outsl
repz
xchg
out
clc
leave
fbld
sub
sbb
cwtl
prefetch
mov
iret
push
mov
popf
mov
outsl
push
ljmp
add
dec
xchg
inc
aad
cmp
lock
add
sbb
mov
fisttpll
or
mov
sbb
jle
shll
and
cmp
adc
pop
mov
xchg
lahf
je
icebp
sbb
dec
movd
sub
js
xor
adc
pop
in
jnp
and
dec
cmpsb
sti
push
bound
jns
lea
test
adc
pop
xor
arpl
cmpsb
cmpsl
mov
inc
repz
insb
das
mov
pop
xor
fbld
jle
in
les
or
or
mov
push
mov
dec
sbb
add
scas
or
xor
les
cmpb
add
xor
jg
cs
cli
aaa
repz
sbb
jg
andb
out
gs
sbb
push
outsl
cs
insl
call
mov
and
xchg
inc
jecxz
testb
add
xor
add
outsl
xor
pop
adc
jbe
sti
out
jecxz
mov
gs
dec
mov
nop
mov
enter
insl
mov
pushf
pop
cmpsb
pop
sbb
dec
subb
dec
cvttps2pi
jmp
jmp
das
cmp
out
push
cmc
sbbl
scas
xchg
inc
addr16
mov
data16
xor
sbb
xor
inc
mull
daa
xor
outsl
sbb
or
data16
xlat
push
cmc
jmp
cmc
aaa
jge
outsb
jp
lcall
cmp
fistps
inc
jmp
xor
mov
dec
cmp
mov
push
jne
enter
or
push
ds
mov
or
mov
mov
mov
mov
xor
lahf
ljmp
mov
lods
mov
adc
dec
pop
ss
xor
sti
iret
test
push
sub
je
loope
fimuls
cltd
mov
out
shlb
notl
add
pop
pop
and
sbb
mov
sahf
cmpsl
daa
pop
add
icebp
sbb
sub
aam
andb
lods
mov
fbld
xchg
or
test
jecxz
sahf
jo
cmp
test
pop
xor
jg
loopne
movsb
cmp
addr16
jne
insl
js
inc
mov
loop
paddb
int
cmpl
loope
pop
fidivrl
testl
addr16
add
mov
enter
shrl
data16
and
popa
pop
mov
mov
add
pushf
push
ss
add
add
sub
mov
xchg
cmp
fldenv
jno
sbb
ret
cs
test
clc
cwtl
pop
lret
ljmp
pop
shrl
sbb
jo
pop
out
testb
pop
jne
jg
cld
insl
inc
sbb
cmp
xchg
jo
in
mov
fldl
pop
nop
add
fimuls
push
push
push
inc
sbb
inc
dec
in
add
scas
inc
repnz
and
add
cmpsb
into
sub
mov
in
rolb
add
divb
dec
rolb
mov
in
xchg
and
sbb
call
daa
inc
arpl
loop
lahf
sub
xor
xorb
sbb
in
cmp
mov
daa
mov
imul
mov
call
push
bnd
ss
lcall
movsl
inc
roll
jno
lock
cwtl
pop
push
aam
xlat
sbb
int3
in
daa
pop
sbb
test
add
call
sub
cmpsl
addr16
insl
movsl
out
andb
leave
fcmovne
sbb
cmp
dec
icebp
xor
lahf
cmp
sbb
stos
es
mov
push
push
xor
insl
loope
std
pop
shufps
call
mov
or
sub
dec
xor
mov
push
and
mov
imul
pop
popa
repz
test
ds
aas
jb
out
loopne
in
push
cmpsl
aas
inc
jo
pop
test
cs
and
and
dec
shr
xor
lret
ja
push
sbb
dec
lahf
movsb
add
add
es
in
mov
outsl
mov
test
lahf
dec
movsl
pop
jge
rclb
movsl
aad
iret
test
add
ljmp
test
jbe
pshufw
push
das
jl
pop
pusha
shr
nopl
push
sbb
pop
loop
xchg
mov
jmp
scas
jp
push
xchg
aaa
mov
popf
sbb
lahf
aaa
daa
xchg
mov
cmpsb
push
xchg
mov
adc
pop
arpl
lret
fiadds
push
fnsave
and
sub
lock
add
jns
repnz
bound
out
push
frstor
outsl
pop
mov
lods
pop
pop
dec
gs
xor
push
shr
imul
popf
jg
xor
jecxz
fwait
loopne
xor
adcb
jns
push
mov
idivb
mov
outsb
dec
sbb
mov
pusha
push
xor
aaa
jle
fmuls
adc
push
cli
rcr
jl
jge
test
adc
sub
sti
or
les
mov
add
dec
mov
cld
arpl
bnd
sub
ffreep
inc
test
jbe
shll
mov
imul
xorb
pushf
xor
mov
mov
and
cmp
jae
xor
pop
and
jno
xchg
fs
test
pop
inc
cmp
pop
hlt
ds
cld
cmp
inc
daa
frstor
cli
jns
mov
pusha
push
sbb
std
out
adc
ret
ret
repz
shlb
pop
mov
inc
mov
cmp
push
ret
dec
push
sbb
mov
or
outsl
das
push
pop
sahf
inc
xor
pop
or
jg
pop
stos
iret
test
in
or
add
mov
pop
and
je
arpl
cmp
cltd
daa
dec
filds
stos
jae
mov
loope
cs
add
leave
in
les
pop
dec
xor
fsub
sbb
in
or
jno
cmpsl
push
insb
sbb
mov
cmpsb
xor
mov
mov
jne
mov
inc
mov
pop
mov
into
data16
sbb
jne
imul
lods
idivb
iret
test
ss
mov
xchg
lahf
test
jns
icebp
outsl
mov
dec
stos
dec
fmulp
repz
push
dec
lods
gs
jbe
inc
cmp
in
bound
sub
bound
movsb
inc
mov
xchg
shrb
sti
jge
shlb
std
mov
pop
clc
lds
and
adc
xchg
js
lret
mov
xor
sub
sbb
mov
test
inc
jecxz
jp
mov
ds
mov
cmpsb
add
inc
pop
sbbl
fstl
lea
adc
cs
add
dec
push
jns
popa
js
sub
mov
decb
inc
mov
ficompl
adc
push
cmp
in
add
icebp
xchg
sbb
mov
xchg
call
inc
jae
stc
fisubs
dec
and
and
push
xor
fisubs
push
cmp
repnz
add
js
xchg
xor
push
jle
ss
adc
outsl
mov
pop
ja
lods
bound
sub
mov
loopne
sbb
add
in
xlat
adc
jmp
dec
xchg
lock
neg
jne
out
jns
xchg
popa
lock
or
or
sub
es
cmp
and
push
sub
scas
es
add
pop
daa
xor
stos
popa
jne
pop
pushf
mov
enter
jo
lods
push
out
sub
mov
in
sub
mov
inc
dec
xchg
mov
and
inc
mov
ds
je
inc
divl
dec
data16
lret
or
std
icebp
xchg
mov
sti
mov
mov
pop
outsl
xchg
mov
dec
pop
xchg
mov
jne
loopne
add
enter
jg
clc
icebp
xchg
retw
mov
pop
xorl
pop
jle
pop
pop
cmp
mov
shll
imul
imul
loopne
jge
mov
add
add
std
pop
jecxz
mulb
fsubs
add
dec
cmp
gs
mov
push
add
inc
push
push
mov
test
adc
mov
stc
add
mov
add
pop
bound
sbb
jne
ret
lcall
fwait
mov
mov
jl
loop
cmp
fsincos
inc
mov
and
cmp
sub
loop
push
into
cmp
test
imul
add
xchg
ss
add
mov
inc
fwait
ljmp
mov
fucomip
adc
inc
mov
jns
mov
fldcw
std
add
in
fisttpl
int
in
push
inc
gs
dec
or
fisttpl
test
inc
ja
and
test
insb
fnstsw
ret
daa
in
into
dec
add
push
imul
cmp
test
inc
insb
mov
stos
pop
jp
xchg
movsl
push
xor
mov
pop
add
pop
daa
inc
mov
jp
ds
pusha
outsl
mov
scas
cmp
mov
adc
lds
cmpb
fcmovne
test
adc
scas
lods
int
adc
add
aad
sub
pop
jmp
fcoms
jne
in
xor
xchg
mov
scas
cltd
shl
cld
out
pop
jge
or
push
xor
addr16
popa
imul
cli
mov
add
pop
add
daa
sarb
jb
shlb
push
cmp
pop
adc
mov
sarb
dec
cmp
outsb
inc
fs
cmp
jmp
dec
push
std
mov
add
stos
adc
sti
out
into
stc
push
and
cmc
xor
or
mov
loop
rcl
test
mov
fisttpl
pop
lahf
cmpsl
fimuls
mov
test
clc
xchg
ret
xchg
mov
xchg
and
ret
repz
dec
out
loop
cmp
mov
push
jnp
jge
call
lock
rcl
mov
rolb
movsl
pop
xlat
fists
fcmovu
test
xchg
dec
xchg
call
pop
push
fisttps
lods
inc
movsl
popf
cli
imul
jecxz
test
sti
cmpsl
pop
daa
pusha
aam
icebp
dec
push
jl
repnz
cmpsl
inc
std
ss
js
popl
iret
fbstp
cld
fwait
call
jns
out
int
test
xchg
das
mov
inc
mov
xchg
cmp
rorl
inc
popa
mov
lea
or
sub
dec
mov
aam
push
aam
xlat
data16
sbb
stos
repz
cltd
lds
out
loop
fs
loop
fimull
cltd
rep
mov
xor
pop
js
into
jns
andl
inc
push
lcall
push
mov
mov
jae
mov
jge
aas
xchg
and
inc
ds
jg
dec
xor
outsl
mov
jno
mov
jne
jl
orb
or
inc
sbb
mov
call
sub
icebp
sub
cmpsl
mov
shr
cmp
ret
or
and
std
testb
call
inc
xchg
and
mov
inc
movsl
jle
loope
ffreep
mov
cmp
enter
lds
iret
xchg
add
lods
adc
cltd
test
adc
loop
pop
mov
cmovne
jecxz
mov
jmp
xchg
xor
inc
adc
mov
jae
pop
sahf
lods
xchg
add
pushf
xor
cmp
test
push
or
fisubrs
dec
and
xchg
stos
fwait
sti
nop
xor
insb
int3
pop
mov
dec
daa
sbb
xchg
pop
in
xchg
jno
xchg
fcoms
and
adc
cmpb
incl
out
fwait
push
pop
shll
insl
jmp
sar
cltd
divl
loopne
inc
jno
push
pop
cmp
dec
or
adc
cmpsb
jl
push
sbb
sti
inc
imul
ret
sub
shrb
sbb
lock
mov
jne
lcall
sub
ret
xchg
mov
jg
subl
insl
jae
inc
push
iret
movsl
add
add
imul
test
movsb
mov
adcl
scas
inc
bndldx
mov
mov
sarl
adc
sarl
adc
cmpsl
mov
mov
mov
push
fst
adc
adc
adc
jb
jns
xchg
stos
xlat
sub
add
mov
cmpsb
out
insb
add
or
int
lds
mov
xchg
inc
repnz
orl
test
cmc
sbb
mov
out
xor
jae
inc
mov
sbb
pop
bswap
jnp
imul
cmp
xor
stos
popf
fcoml
shrb
and
out
xchg
lret
adc
cltd
ljmp
aaa
jle
out
cwtl
pop
or
pop
adc
dec
adc
fwait
jp
pushf
cld
add
rcl
inc
shrb
outsb
push
fstps
pop
xor
test
xor
cmc
shr
in
pop
cwtl
add
pop
sbb
daa
sub
xor
ss
aam
mov
arpl
repnz
andl
cli
test
sbb
xchg
add
push
aam
inc
mov
jecxz
into
mov
add
push
fistps
adc
mov
hlt
sub
and
sbb
inc
xchg
push
outsb
cltd
lcall
dec
xlat
jnp
or
mov
mov
adc
js
dec
mov
fistpll
push
mov
movsl
inc
push
or
hlt
cwtl
test
orb
lds
pop
push
jbe
add
pop
mov
jno
rcrl
jp
hlt
jecxz
mov
sbb
xchg
lret
enter
sbb
lret
mov
or
push
ljmp
mov
inc
adc
ds
fnstsw
inc
repnz
pop
sti
out
add
add
sub
pop
out
bound
pop
push
jo
into
sbb
jno
movsb
mov
xchg
push
jl
push
dec
insb
aaa
cmp
xchg
ja
dec
push
and
lahf
ficomps
fwait
cmc
pop
dec
outsb
lods
scas
int
xchg
inc
adc
sub
dec
cmpb
sbbl
inc
pop
rcrl
dec
dec
fsubr
pop
adc
pop
cld
push
cmp
fxch
sbb
dec
mov
sbb
fs
xchg
pop
cmp
xlat
clc
add
lds
out
cld
push
push
mov
test
filds
jecxz
mov
sahf
xor
and
lock
dec
andb
push
inc
leave
mov
out
xor
lods
push
mov
fimuls
and
enter
xchg
dec
stos
add
xor
dec
push
jmp
inc
mov
dec
xchg
shrl
adc
jl
adc
gs
sbb
mov
push
jmp
inc
xor
mov
dec
sbb
xor
fsubp
mulps
jl
cmp
pop
xchg
adc
scas
ljmp
aaa
out
pop
aad
dec
shll
dec
push
sbb
pop
mov
sbb
pop
mov
sbb
arpl
jb
in
leave
sbb
mov
jb
int
aad
insb
inc
push
xor
and
push
scas
scas
es
call
out
push
dec
gs
ljmp
add
inc
push
dec
or
xchg
dec
mov
es
push
sub
push
push
jecxz
mov
inc
pop
sbb
inc
jmp
dec
cli
xlat
jae
aas
adc
ret
inc
or
ds
loop
addb
pushf
sbb
out
xchg
adc
pop
fisubrs
dec
pop
mov
lods
in
mov
sbb
xchg
push
stc
sbbb
add
and
mov
loop
sar
adc
scas
imul
jle
sbb
push
sahf
in
cltd
mov
arpl
cld
xchg
cmp
dec
push
sbb
test
xchg
pusha
xchg
xor
movsb
jns
test
fdiv
lahf
inc
push
dec
sub
insl
and
fisttpl
xor
leave
push
and
mov
mov
orb
sbb
rcll
dec
test
fs
sub
jno
mov
mov
imul
in
ljmp
ljmp
add
aad
pusha
push
mov
mov
xor
repz
inc
sbb
cwtl
push
lea
fistpl
mov
ret
test
inc
mov
adc
push
sahf
popf
pop
cmc
mov
icebp
xchg
aaa
add
or
js
jnp
sub
add
cmp
dec
rcrl
in
jmp
ret
out
mov
sbb
sub
dec
mov
or
xor
daa
out
lods
xor
lods
fimuls
pop
std
je
mov
test
cld
push
cmp
dec
test
ret
ret
movb
jb
sub
inc
nop
aam
xor
stos
sbb
pushl
push
mov
sbb
sub
mov
cld
mov
push
inc
cs
mov
int3
push
in
cmp
sub
gs
adc
pop
push
xor
push
push
xchg
push
les
or
mov
mov
int
push
inc
pusha
jmp
cmp
dec
lds
mov
xor
cld
push
jae
cmc
lret
add
fcompl
sbb
daa
aas
stos
push
push
int
cmp
jns
push
pop
shll
jnp
inc
mov
dec
daa
sti
push
int
into
repnz
push
test
scas
cmp
jno
and
mov
dec
nop
fcoml
push
loope
xor
jmp
in
insb
lods
pop
cltd
jne
fdivrl
mov
int3
sub
in
fsubl
leave
inc
int3
mov
mov
mov
and
sbb
lds
int
dec
xchg
test
div
outsl
jecxz
out
inc
pop
stc
frndint
sub
add
sbb
pop
xchg
fstpt
mov
and
movsl
mov
push
adc
push
push
jb
xchg
ret
mov
jne
mov
xchg
adc
push
divl
sarl
mov
pop
and
sub
lret
psrld
scas
cli
int
loopw
add
dec
jo
and
pusha
adc
stos
shl
adc
mov
lea
add
push
xchg
adc
jp
test
push
add
jge
jmp
mov
mov
xor
cld
mov
arpl
xor
aas
cmp
cwtl
adc
outsb
aad
scas
out
sbb
decb
aaa
jmp
mov
lahf
jns
loope
pop
dec
xor
xor
jecxz
sti
inc
adc
shl
push
cmpsl
add
mov
addr16
aas
shl
and
inc
push
ret
inc
mov
test
mov
dec
mov
jb
and
add
out
out
and
dec
xchg
pop
jno
ds
fs
mov
mov
dec
inc
gs
dec
test
and
mov
adc
pop
daa
outsl
faddl
ret
lods
insb
jnp
sti
mov
inc
xchg
cmp
enter
es
aam
push
and
xchg
shll
out
cwtl
roll
adc
lods
sbb
mov
or
cmpsl
pop
mov
faddl
push
out
out
mov
out
fnstsw
push
cmp
or
jg
jb
movsb
xchg
push
nop
mov
rcl
loope
inc
dec
stc
mov
sti
jae
repz
je
stos
test
fs
fbld
xchg
add
out
ret
andl
pop
xchg
xchg
push
mov
sbbl
cmp
fidivrl
cli
and
ljmp
xchg
popf
into
inc
ss
mov
dec
and
mov
pop
sbb
aam
aad
mov
pop
jno
cmp
scas
scas
xor
ja
mov
movsl
xchg
stc
popa
adcb
mov
xor
adc
or
jecxz
adc
pand
sub
js
push
popf
pop
leave
mov
shlb
int
addr16
adc
cld
xor
fisttpl
push
aas
ja
jns
inc
mov
mov
loop
adc
adc
jbe
mov
mov
popl
imul
sarl
or
adc
arpl
sub
lods
jmp
mov
mov
pop
stc
mov
out
mov
subl
push
cmp
imul
ja
fsubr
mov
sarl
ja
pusha
mov
loop
xchg
pop
movsb
cmp
pusha
fisubs
int3
outsl
mov
ja
mov
xor
pop
fs
adc
repnz
sti
mov
ja
lcall
or
cmpsb
ror
jecxz
sbb
xchg
test
nop
enter
mov
fstl
mov
jg
lock
mov
jmp
and
xchg
sbb
test
fadds
cmp
out
sub
or
jmp
bound
aad
iret
xlat
add
rcll
jbe
pop
adc
fmull
fldt
pushf
jmp
pop
jg
leave
fwait
in
jno
pop
push
xor
xchg
sub
test
sbb
mov
aam
jmp
push
test
loope,pn
sbb
pop
sub
mov
push
push
popa
fdivrl
xor
mov
add
movsb
dec
je
xor
xchg
leave
repz
ja
xor
cmp
in
lret
xor
mov
xlat
dec
or
push
repnz
rorl
orb
sub
mov
and
jbe
jbe
fcom
and
scas
dec
and
iret
lret
adcb
aas
mov
into
pop
sahf
xor
mov
xlat
mov
out
rcll
xchg
jmp
jecxz
test
dec
nop
sub
xchg
int3
clc
cs
add
jo
scas
push
mov
ss
ret
daa
ret
sub
enter
pop
push
aas
and
sub
daa
or
shlb
andl
cmpsl
or
gs
xchg
lods
jp
dec
clc
inc
int
lock
mov
jmp
lds
push
mov
fcoml
insb
and
aam
sahf
push
test
mov
pop
rcrb
mov
mov
stos
mov
jmp
cs
xchg
sub
mov
dec
or
mov
ret
jo
mov
and
jbe
mov
inc
mov
inc
aaa
sbb
lcall
jp
in
cmc
icebp
push
or
setae
imul
cli
cmp
sbb
lds
adc
dec
mov
dec
pop
push
inc
hlt
push
call
xchg
adc
mov
subl
test
jecxz
imul
mov
mov
adcb
jns
push
xor
ljmp
pushf
subb
mov
xchg
shll
jl
push
scas
or
daa
lock
jnp
outsl
test
mov
xchg
fwait
mov
mov
in
cmp
xor
jno
enter
adcl
pop
push
pop
pop
or
cmc
enter
pop
aas
pop
mov
movb
push
sti
test
inc
ljmp
lahf
test
xchg
pop
or
aam
add
icebp
fdivl
adc
xor
inc
mov
aad
sahf
xlat
lret
pop
cmpsb
pop
lock
sub
ljmp
pusha
pusha
jecxz
inc
mov
inc
adc
cmc
or
inc
push
mov
push
mov
cli
add
mov
add
int3
outsb
adc
mov
jge
mov
pushf
or
xor
pop
inc
test
sbb
mov
add
pop
xor
scas
test
mov
inc
in
test
jne
jb
push
or
cli
adc
mov
lcall
in
in
mov
mov
fwait
repz
icebp
mov
dec
pop
add
pop
or
inc
xchg
xchg
movsl
sbb
and
pop
mov
dec
fwait
das
mov
ret
pop
or
xchg
cmp
push
aas
mov
popf
push
test
dec
add
clc
dec
push
add
mov
iret
aam
and
mov
sub
nop
jecxz
insl
pop
into
gs
movsl
adc
and
roll
ret
into
imull
mov
cmp
dec
mov
inc
ljmp
outsl
xchg
ret
movsl
adc
dec
lods
cmp
push
jae
je
jbe
out
push
mov
test
lahf
lret
mov
stos
xor
pop
sub
mov
insb
sub
and
std
mov
jmp
ret
cmpsl
fists
add
jle
mov
jns
rcl
in
int
and
ds
outsb
mov
aam
frstor
push
mov
jle
stc
imul
inc
leave
xor
stos
es
inc
shll
mov
fs
mov
mov
sbb
rcrb
in
std
adc
xchg
cmpsb
ret
add
outsb
stos
dec
movsb
cltd
push
addl
pop
stos
fcmovu
inc
fcompl
das
jo
ret
movb
pop
std
arpl
sbb
out
jecxz
and
or
jmp
jo
jne
divl
add
loop
dec
sbb
test
cmp
arpl
add
lock
mov
jae
flds
popf
mov
insb
ret
pop
out
test
jg
mov
sti
pop
cmp
insl
pop
jno
inc
insb
rorl
mov
ja
inc
scas
jl
dec
mov
icebp
add
jg
lret
aaa
or
repnz
mov
jl
pop
pop
sbb
rorb
fistps
mov
stc
adc
in
mov
jne
std
push
lds
or
into
jmp
add
xor
dec
addr16
pop
jmp
or
jbe
adcl
xlat
mov
dec
iret
dec
sarl
sbb
or
inc
fstpt
mov
sbb
mov
jmp
adc
cltd
push
insl
out
test
mov
movsb
lock
jl
pushf
mov
mull
cmp
mov
push
daa
sub
add
mov
gs
in
mov
imul
loopne
or
ja
lods
push
sub
or
imul
out
outsb
cld
inc
out
ljmp
and
cs
insb
jbe
xchg
loope
or
xor
les
out
sbb
sahf
enter
inc
cs
ret
ret
call
mov
out
jmp
hlt
push
fwait
orl
add
push
push
nop
imul
rclb
xor
je
shlb
jmp
xchg
aaa
std
mov
or
in
notl
repz
or
imul
pop
push
push
xchg
mov
push
cmp
lds
fisttps
push
shlb
into
ds
popf
mov
pop
pop
mov
inc
and
jnp
mov
sbbb
shr
aad
pop
iret
push
lret
cwtl
test
jp
fldenv
sbb
cli
or
loop
repnz
mov
and
jns
imul
pushf
sbb
push
and
stos
and
je
mov
push
ljmp
dec
mov
sbb
in
pushf
movsb
jg
mov
push
roll
cmc
push
dec
cmp
adc
and
clc
jbe
or
add
cs
pop
sbb
in
popa
push
das
push
xchg
and
cmpsb
ret
dec
push
cmp
in
mov
xor
js
adc
pop
mov
cmp
mov
and
mov
sbb
cwtl
xchg
insl
out
scas
push
or
mov
mov
mov
fsubrs
ficoml
mov
xchg
sahf
push
mov
insl
cld
dec
add
popf
pop
leave
sub
mov
mov
push
in
add
add
dec
push
sub
mov
aas
mull
js
or
inc
xchg
and
inc
add
sub
sbbl
cmc
dec
loopne
or
scas
lret
js
fwait
addb
sahf
and
repz
loope
cmpsb
xor
dec
jno
cmpsl
pop
mov
xchg
adc
fcompl
gs
or
xchg
cmp
pop
fdiv
daa
insb
or
mov
push
in
mov
fldenv
jmp
popf
xchg
ljmp
and
mov
lcall
sub
sbb
add
fistpll
push
ss
mov
push
popf
je
loop
dec
fxch
les
bound
xchg
scas
pop
cwtl
mov
sub
push
lret
xor
leave
mov
push
push
dec
pop
xchg
lds
leave
push
out
int3
loop
mov
iret
cmp
mov
aad
pop
adc
shr
pop
fisubrl
das
xchg
add
sbb
sahf
ret
push
es
xor
xor
pop
push
inc
inc
in
xchg
fbstp
jnp
add
jge
cmpsb
int
push
insb
orl
push
xor
adc
adc
aam
fisubs
fs
push
or
inc
movsl
aas
jns
pusha
mov
movsb
cwtl
out
loope
sub
sarb
dec
out
xchg
add
xchg
loopne
int
insb
or
lahf
or
jl
clc
test
les
add
add
pushf
movsb
ror
jae
add
andb
icebp
xor
in
sub
push
inc
cwtl
shl
inc
lock
clc
dec
inc
dec
xchg
int3
or
adc
std
or
adc
je
cmp
inc
test
cld
loopne
cmp
xor
pushf
pusha
cmp
fadds
push
sahf
int
xor
and
cmp
popa
in
cmp
cmp
addb
es
hlt
loope
pop
outsl
fisubrl
stos
adc
jmp
inc
je
push
ret
mov
fnstsw
mov
cs
mov
neg
fildl
pop
inc
mov
jmp
imul
and
and
jnp
sub
push
cltd
in
inc
mov
mov
repz
std
and
add
inc
mov
clc
loop
sub
fsubl
mov
mov
mov
popf
xor
inc
sbbl
inc
bound
xchg
sub
cld
hlt
test
pop
sbb
movhps
mov
shl
dec
inc
or
cmp
push
sub
jnp
inc
cmp
test
and
xchg
fisubrs
add
jns
xchg
pop
and
inc
push
imul
xchg
inc
push
repnz
es
pop
sub
decl
fidivl
lea
xor
add
push
jo,pt
sahf
call
fimuls
jne
mov
pop
jo
jle
mov
ror
push
or
es
and
nop
sub
int
ret
lea
fincstp
adc
sbb
and
xchg
fisttpl
and
push
fwait
cmc
outsl
or
lock
lcall
push
push
and
xor
mov
divl
sub
outsl
pop
sub
inc
lret
dec
push
flds
sti
fwait
mov
xor
int3
add
sub
lods
or
cmp
cmpsb
test
lock
ret
add
dec
or
popa
jecxz
ljmp
jne
aaa
mov
pop
cli
inc
hlt
out
bnd
xor
nop
popf
imul
lock
cmp
sub
pop
jne
aad
xchg
icebp
xchg
mov
clc
mov
iret
cmp
arpl
std
jl
dec
xchg
call
popa
iret
jmp
pop
sbb
jo
sub
inc
mov
ljmp
das
cmc
xor
ja
sbb
pushf
cmp
rcl
test
push
xor
lods
sub
pop
sub
test
lahf
sbb
outsl
pop
sbb
ret
inc
nop
jbe
dec
in
adcl
dec
and
and
pop
leave
mov
loop
push
sub
or
sti
ja
loopne
movsb
aaa
pop
jno
pop
pop
cmpsl
pusha
dec
add
xsha256
cmpsb
xchg
inc
sti
cmp
push
dec
push
add
push
out
sahf
out
rep
scas
xor
xor
mov
jb
push
xchg
clc
dec
cmpl
push
push
out
or
sbb
mov
push
add
adc
je
das
adc
mov
test
jb
add
mov
xchg
imul
adcb
in
push
fistpll
int
mov
out
lods
clc
pop
nop
int
in
imul
pxor
lahf
sahf
lcall
jmp
scas
rorb
push
lahf
and
lea
shlb
pusha
xor
in
xor
xchg
mov
push
lods
rcr
rorb
sbb
xor
les
daa
aad
sbb
es
lds
cli
dec
scas
call
adc
or
fsubrs
jne
out
mov
ljmp
mov
fnstcw
fistpl
sub
mov
pop
adc
cmp
mov
sub
rcrl
fldenv
xchg
cwtl
call
outsb
push
pop
adc
in
js
sbb
test
out
mov
decl
cmpsl
sbb
arpl
cltd
int
cmp
data16
popa
jne
mov
sbb
cmpsb
dec
mov
mov
gs
je
mov
push
mov
arpl
stos
test
repz
sub
inc
dec
ja
test
xor
adc
xchg
movsl
inc
cltd
sti
nop
jmp
dec
dec
clc
iret
aam
sarb
inc
xchg
cs
or
mov
mov
inc
xor
sbb
in
pushf
fbstp
lds
inc
loop
fsubs
push
cmpsl
push
in
adc
stc
inc
jge
test
fwait
rcrl
or
add
add
push
xchg
pop
inc
sbb
xchg
fstpt
or
aad
push
jnp
cmp
hlt
stos
mov
dec
into
dec
dec
xlat
push
fs
pushf
push
cmpsb
push
roll
test
sbb
insb
or
jecxz
pop
mov
or
imul
std
pop
aad
jnp,pt
cmp
jle
push
xchg
mov
out
or
fsubs
cmp
aam
sub
push
bound
sub
push
arpl
lcall
ja
xchg
jmp
push
xchg
les
cmpsb
jge
sbb
popa
add
sub
out
push
xchg
in
inc
xchg
pop
push
aad
or
jmp
imul
fimull
mov
repnz
and
out
cmp
sub
cmp
dec
xor
adc
popf
or
xor
addl
fmull
mov
clc
in
and
mov
popf
std
inc
dec
sub
mov
push
mov
test
jp
lret
and
lahf
jne
push
cmp
icebp
push
dec
adc
rcrl
inc
xchg
dec
iret
ja
or
pop
xor
daa
in
data16
movsb
mov
aaa
push
jns
mov
out
mov
aad
push
push
in
mov
push
jbe
add
aad
adc
loopne
jmp
cmp
cwtl
mov
in
push
ss
lock
push
fbstp
push
mov
testl
cmp
mov
push
in
fs
xor
cmp
push
xor
push
sub
stc
aad
sbb
cltd
popf
data16
pusha
cmc
mov
adc
fistl
jns
push
sbb
fsubrs
in
aam
fucomp
add
or
loop
insb
sub
xchg
add
test
sub
pusha
mov
leave
jbe
xchg
sbb
xchg
adc
or
cmpsl
out
or
imul
andb
jne
jle
and
push
lods
hlt
iret
adc
sub
xor
xchg
in
add
jmp
push
dec
pushf
std
mov
aas
imul
push
jbe
and
pop
or
movsb
sbb
xchg
push
adc
or
aam
xor
movsl
xchg
pop
mov
inc
stc
rclb
shl
test
pop
pop
dec
mov
jbe
inc
jmp
jns
add
push
fldl
lods
daa
fidivl
dec
js
jp
sub
fmuls
out
out
pop
cmc
sbb
and
or
sub
jmp
push
pop
nop
jle
push
push
push
add
push
daa
cmpsl
mov
movsl
push
mov
mov
push
rorb
cmc
pusha
sbb
dec
arpl
inc
gs
mov
aas
add
in
popf
mov
pop
pop
pop
cld
cmp
lea
cmp
sub
adc
adc
mov
imul
imul
sbb
stc
pop
sbb
repz
adc
hlt
lds
sbb
cmp
and
xor
push
pslld
cmp
push
and
push
mov
mov
clc
jb
mov
subl
sbb
test
cld
and
mov
rol
inc
jge
out
loop
cmp
cmp
pop
insb
pop
sub
mov
arpl
pop
or
add
loopne
pushl
mov
mov
xlat
dec
andl
into
int3
pop
push
dec
mov
jp
sub
sarl
test
insl
and
dec
mov
movsl
pop
insl
and
inc
dec
lea
lret
insl
bound
mov
scas
mulb
pop
aam
sahf
imul
mov
dec
pop
xor
cmpsl
dec
aam
js
pop
adc
xchg
lret
fwait
test
rclb
xor
sbb
loope
sub
xchg
dec
sub
mull
pop
repz
imul
sub
stos
aam
cmp
cmpsb
cmp
and
dec
adc
xor
and
test
int
repz
cltd
loope
aad
dec
loope
in
mov
adcl
inc
sub
jmp
in
jno
les
mov
data16
rcrl
fcmovnb
lock
lcall
fsubrl
in
xor
sub
jns
sbb
jae
cmovl
in
popa
sub
out
es
xor
push
xchg
inc
pop
jb
loop
addl
mov
sti
in
aas
imul
jmp
addb
lods
and
xchg
fwait
cmpsw
aas
jbe
sbbb
inc
cld
sbb
inc
add
rorb
incl
sbb
icebp
xchg
mov
mov
cmpsb
jno
mov
xchg
cwtl
pop
mov
jne
loope
jnp
out
cwtl
ss
pop
add
pop
xor
pop
mov
or
cmpl
imul
jno
seta
fnstsw
int
xchg
xor
push
pop
stos
les
out
std
sarl
jle
clc
pop
in
inc
inc
icebp
sub
out
pop
das
mov
sbb
mov
push
loopne
rorl
ja
rcll
outsb
inc
out
and
add
jg
sbb
pop
aam
jae
and
xchg
lcall
sti
push
cmp
int
imul
je
cmpsb
sub
fnstcw
mov
aad
jb
data16
icebp
xor
inc
dec
lahf
in
push
decl
sbb
sbb
aas
imul
mov
ss
lock
push
or
aam
cmpsl
lods
push
pop
lret
jb
pop
cmpsb
pop
mov
dec
jbe
xlat
and
shrb
xchg
push
idivb
fwait
test
scas
outsl
dec
dec
mov
mov
jg
aaa
xchg
rorb
xor
test
add
mov
std
jae
inc
dec
cmp
es
into
adcb
sahf
arpl
aam
fdivp
lods
std
mov
cwtl
pop
push
push
lods
inc
data16
popf
ljmp
stc
xor
mov
add
adc
loope
out
cmp
mov
popf
shrl
cmpsl
roll
jae
cltd
xlat
or
cmp
aas
jecxz
mov
cltd
out
int
out
call
mov
push
adc
sarl
mov
lods
push
fcompl
cmc
lds
call
inc
icebp
add
and
mov
dec
jns
jp
pushf
jns
push
sub
jo
inc
xchg
and
inc
movsb
xchg
mov
cmp
ss
out
scas
popa
jmp
lods
inc
ret
movsb
out
nop
pop
and
mov
and
mov
xor
add
cwtl
cli
sbb
inc
pop
out
xchg
push
adc
les
push
inc
pop
popa
xor
pop
and
push
push
mov
push
sbb
daa
out
stos
dec
jp
inc
adc
jne
loope
inc
xchg
sub
sbb
lods
and
mov
adc
call
add
and
cmpsb
push
repz
sbb
mov
and
js
xchg
jge
movsl
dec
add
stos
lahf
aas
jb
js
add
cmp
rolb
js
inc
testb
jmp
adc
pop
inc
mov
dec
sahf
xor
mov
scas
inc
cmp
pop
scas
je
mov
stc
push
and
dec
jle
push
cmp
lcall
jb
mov
rcrl
mov
mov
mov
sti
cmc
or
mov
fdivl
in
popf
psadbw
mov
scas
dec
xchg
shl
aam
ror
add
es
lcall
sti
lock
xchg
dec
in
xlat
enter
nop
lea
dec
mov
cmpsl
jecxz
jg
xchg
add
xchg
aam
rorb
inc
sti
adc
dec
cmp
es
subl
in
cmp
adc
adc
aam
mov
pusha
aas
jo
jmp
test
dec
aaa
or
mov
je
sti
xchg
xchg
push
data16
scas
cwtl
das
mov
cmpb
jmp
lahf
jle
jno
fists
mov
pop
jb
out
or
leave
mov
push
imul
xchg
addr16
rolb
aaa
insl
sbb
adc
imulb
dec
std
gs
das
stos
rcll
nop
pop
insb
das
pop
push
ret
test
std
add
or
lods
xlat
popa
mov
fpatan
xchg
out
cs
adc
xchg
xor
fnstsw
mov
inc
lods
fadds
sbb
sbb
or
or
lcall
push
or
xchg
repz
fistps
cmp
push
adc
loopne
inc
dec
mov
vcvtpd2dqy
cld
inc
jno
inc
mov
fcomip
addr16
loopne
loop
decb
ficoms
ja
mov
adc
xrelease
mov
lock
outsb
lock
dec
cmpsl
ss
lcall
jl
test
out
mov
dec
xor
dec
aaa
in
popf
ljmp
cmpsb
adc
cmpsb
inc
shl
ret
fs
cmp
stos
mov
dec
jecxz
mov
and
iret
outsl
mov
mov
xchg
adc
pushf
lock
jb
adc
jno
iret
adc
icebp
imul
out
mov
sub
mov
call
aad
pop
add
xor
test
adc
jae,pt
enter
mul
outsb
add
mov
aam
call
movsl
mov
aas
cmp
xor
inc
inc
xor
fidivrl
cld
loopne
add
or
jo
lret
jns
ret
jp
cmpsb
sbb
sub
and
add
push
xchg
add
int
xchg
push
push
pop
mov
xor
inc
and
mov
jno
sub
mov
lcall
mov
push
sub
or
les
ja
cmp
int
xor
iret
push
jno
pop
pop
cmpsl
push
scas
aam
lcall
mov
sbb
dec
and
add
cmp
and
cld
push
mov
scas
notl
inc
mov
mov
xchg
mov
mov
push
ds
mov
insl
adc
out
shlb
mov
fcompl
dec
dec
sub
dec
adc
movsl
inc
lahf
adc
lret
imull
lods
or
or
add
dec
pop
sbb
mov
push
xor
jl
repz
ss
xchg
lock
dec
js
outsl
or
mov
push
and
xchg
add
sub
dec
xchg
std
popa
enter
cmpsb
mov
push
sbb
imul
jns
jmp
sarb
add
stos
add
mov
add
cwtl
mov
notb
hlt
pop
adc
pop
test
cmc
leave
lahf
pop
or
psraw
idiv
or
sbb
adc
sub
sarb
insb
int3
or
lcall
and
movsb
xchg
es
call
mov
movsl
daa
ret
push
dec
inc
push
test
sbb
imul
movb
xor
iret
cmc
popf
mov
or
das
xchg
dec
pop
adc
or
iret
mov
cmp
fnstenv
cltd
adc
stos
lock
and
test
and
sti
int
leave
dec
jge
cmp
les
subl
sub
jmp
popf
adc
lods
mov
adc
ss
mov
jmp
stc
sub
adc
xor
pop
xchg
xchg
insl
stc
inc
adc
cmpsb
dec
xchg
fldcw
out
setg
into
mov
cmpsl
cld
aaa
out
mov
das
icebp
xchg
adcb
xchg
das
call
mov
cmp
or
push
lret
dec
cltd
out
mov
adc
or
aad
cltd
rorb
jo
xchg
push
xchg
xchg
sub
xchg
pop
nop
adc
dec
pop
dec
scas
dec
outsl
adc
ss
out
icebp
push
adc
pop
push
pop
mov
addl
sti
inc
lea
xchg
into
inc
aad
mov
in
adc
or
daa
mov
xchg
sahf
fbstp
fists
in
adc
repnz
jle
lret
sub
fwait
or
cmpsl
ret
cmc
push
cmp
dec
sub
dec
pop
int
adc
push
jmp
dec
aad
xchg
pop
mov
dec
lret
push
cmp
pop
dec
jo
mov
jnp
leave
pop
and
pop
ret
lock
popa
pop
imul
xchg
jo
cwtl
push
insl
fwait
inc
fs
adc
mov
call
and
xchg
sbb
and
loopne
ja
test
fmull
fstps
stc
pop
lock
imul
insl
add
scas
pop
bound
iret
aad
jg
rcrb
ret
lcall
mul
in
lds
je
xorl
jbe
inc
add
cmc
imull
push
pop
pop
jp
dec
lock
mov
xor
dec
mov
cmp
sarb
stos
pop
add
rcrl
leave
bound
popf
orl
xchg
in
pop
lea
out
jo
rcr
cwtl
out
dec
pop
sbb
stc
lock
fmuls
pop
push
nop
pop
out
jecxz
inc
or
sbb
js
jb
push
sbb
jbe
scas
push
dec
test
hlt
fwait
mov
pop
push
or
sbb
adc
mov
mov
dec
cmp
sbb
add
nop
loopne
daa
xor
aad
xchg
inc
sub
sub
in
jo
mov
xor
stos
in
loopne
sahf
test
adc
gs
add
loopne
lcall
lcall
pop
xchg
loop
push
ja
or
aad
jo
stos
mull
repz
mov
dec
push
nop
mov
sub
movsb
pop
mov
fucomp
xor
xchg
xlat
cmp
nop
sbb
sbb
mov
pusha
stc
faddl
xchg
adc
mov
rol
in
jne
push
into
imul
add
inc
xchg
test
lret
cs
fs
call
pop
or
pop
inc
jno
add
xchg
aas
fstpl
insb
jnp
xchg
mov
pop
test
jbe
ret
xchg
pop
loopne
dec
imul
lahf
or
push
xor
pop
cmc
add
xlat
fstpt
mov
push
xchg
cltd
stos
xchg
fistps
mov
jge
out
rcll
xor
adc
jg
jbe
dec
cmpsl
cwtl
sti
xor
test
inc
lock
subb
adc
xlat
xlat
or
in
aam
rorl
and
add
sbb
adc
test
inc
pop
rcrb
or
xchg
inc
shr
mov
inc
mov
push
cmpsb
movsl
sbb
fsubp
cmpsb
cmp
jp
lods
mov
sti
ljmp
sub
or
add
xorb
lods
cmp
in
adc
add
cli
dec
dec
nop
or
out
shlb
repz
mov
into
sub
push
fsubl
sti
add
or
scas
lahf
and
enter
jb
lret
mov
sbb
xchg
cmc
sbb
add
dec
sub
cmpl
sbb
icebp
cwtl
or
pop
add
fbld
fstl
jp
push
clc
adc
inc
xchg
mov
mov
push
fdivrs
push
int3
aaa
dec
int
mov
sbb
ds
stos
fstpt
es
cmc
call
push
cltd
fcomi
add
mov
cmp
dec
sub
mov
add
cld
cmovp
sahf
les
jnp
inc
repz
mov
leave
and
mov
inc
xor
inc
repz
and
cwtl
pop
lret
insl
std
repz
arpl
mov
aas
push
jo
xor
dec
lods
lds
dec
jne
xor
outsl
cwtl
mov
push
mov
les
in
and
insl
sub
mov
pop
into
push
sahf
ja
pop
test
adc
cmc
inc
sbb
push
mov
cmpsl
xchg
gs
gs
xchg
mov
xchg
adcb
pop
lea
sti
mov
std
push
outsb
push
nop
repnz
sbb
mov
sbb
hlt
mov
dec
jno
jns
jecxz
cmp
and
stos
or
pop
inc
pop
adc
xchg
movsb
fmulp
imul
out
movsb
lock
jg
mov
xor
xchg
add
test
in
pusha
mov
and
pop
cwtl
mov
inc
mov
mov
test
add
flds
jbe
imul
push
adc
sbb
mov
push
mov
sub
ror
ljmp
or
outsl
nop
das
call
push
sub
add
xchg
out
cs
std
and
mov
cs
daa
inc
int
xchg
add
aaa
les
cmp
lods
jp
inc
sti
pushf
outsb
dec
pop
shl
enter
fisttpll
aaa
xlat
inc
orb
inc
sbb
jo
sahf
cmp
sahf
cmp
mov
movsb
mov
xchg
sub
fildl
sbb
gs
cld
jl
or
add
mov
pop
mov
gs
loope
pop
ljmp
cmpsl
bound
cmp
xchg
addl
and
pop
dec
push
ljmp
dec
push
or
outsb
or
dec
pop
hlt
mov
push
adc
push
lret
mov
iret
dec
cmp
outsl
push
hlt
sub
movsb
jmp
xchg
dec
es
pop
sub
jbe
and
lret
imul
test
and
test
test
and
stos
push
mov
lods
loopne
fnsave
inc
repz
push
dec
inc
aaa
fucomi
psubusb
adc
mov
mov
mov
test
cmp
pop
mov
push
sbb
dec
aas
test
or
push
fsub
inc
jl
iret
sbb
lds
stos
fildll
icebp
out
mov
imul
fimull
sub
or
pusha
mov
ds
cmpb
out
adc
xchg
push
mov
fs
dec
mov
movhps
add
xor
int3
dec
ret
aaa
outsb
push
mov
dec
les
xchg
mov
stos
or
cmpsl
push
jg
cmp
dec
je
pop
inc
cmp
sarb
sbb
imul
fcompl
mov
insl
shl
xor
push
int
in
inc
xchg
cmpsl
popa
loop
mov
insb
sub
push
mov
dec
jbe
daa
dec
mov
mov
loopne
lods
lret
bound
jns
ss
mov
sar
lea
mov
lahf
fwait
pop
cltd
fisubs
sub
and
mov
pop
sbb
or
jmp
fidivrl
mov
enter
ret
or
repnz
add
and
pusha
std
out
push
adc
int
in
je
in
js,pt
sbb
pop
popf
cmp
enter
fnsave
jo
add
xor
bound
and
mov
in
imul
or
sbb
and
ds
pop
xchg
stos
mov
sbb
mov
jge
popf
test
dec
sbb
out
sti
xchg
xchg
add
fs
in
sbb
jle
sbb
pop
mov
fiadds
in
int
lds
cld
xchg
add
mov
insl
fistps
jae
jp
sub
jp
jae
rcll
dec
loopne
pop
xchg
mov
mov
push
sub
lret
movsb
sbb
lea
pop
js
test
dec
jmp
in
push
dec
rcll
cld
stos
sub
or
push
daa
sti
push
aaa
push
test
rol
cmp
cmc
imul
inc
adc
adc
ret
mov
or
test
push
xor
dec
jo
mov
sub
adc
jae
sbb
lcall
loop
mov
bound
dec
nop
movsb
sbb
dec
rorb
mov
pop
xor
push
push
xchg
aad
pop
das
stos
outsl
lret
aam
mov
or
xchg
push
add
xchg
icebp
sbb
in
aas
in
out
cmp
and
scas
ljmp
or
pop
or
test
mov
dec
cmp
inc
mov
mov
rorb
lock
pop
ffree
mov
pop
pandn
mov
movsb
inc
mov
sub
cli
or
out
push
in
jno
jns
inc
push
daa
lret
dec
cli
sub
or
pop
sub
jno
lods
adc
ss
lods
stos
pusha
xor
fwait
push
xchg
jb
subb
xor
jmp
jns,pt
jmp
in
push
jle
addb
add
das
mov
xor
sbbb
inc
andb
scas
mov
inc
dec
sti
dec
int
in
fprem
mov
jo
popf
lock
dec
jecxz
pop
push
shrb
mov
mov
fimuls
lret
push
and
scas
leave
push
mov
jns
sahf
int3
in
test
push
adcb
xchg
fldenv
or
and
pop
xchg
inc
or
sbb
hlt
in
and
mov
dec
cs
imulb
sub
mov
mov
sti
add
daa
mov
sti
mov
leave
cmp
or
sub
inc
test
cli
dec
cmc
cmp
xor
sahf
das
or
pusha
xor
push
cmp
adc
inc
scas
jle
ret
clc
pushf
jp
and
rol
int
xchg
xchg
adc
int
idivb
outsl
add
out
into
cwtl
imull
jbe
int3
movsl
cmp
mov
mov
adc
aam
cmc
xorl
dec
into
sbb
add
pop
add
and
jp
pop
mov
in
repnz
movsb
cwtl
mov
ret
mov
add
jmp
sub
shlb
nop
sbb
push
ffreep
rcrl
or
loop
jmp
cltd
inc
out
xor
mov
push
test
pop
js
jl
xor
xchg
pop
mov
outsb
adc
fisttpl
movsl
pushl
pop
loope
and
mov
or
sbb
dec
mov
push
fbstp
nop
ja
je
lods
scas
pop
cs
xchg
pushf
mov
mov
fldl
cmp
int
pusha
ret
aad
ret
pop
outsl
movsb
ror
cmp
sub
repz
push
sub
int3
mov
inc
rcrl
aaa
add
imul
shl
dec
sbb
mov
imul
inc
push
popf
aam
dec
cld
push
test
imul
inc
mov
call
les
or
iret
cld
dec
cmp
sbb
aam
data16
add
inc
fdivrs
repnz
cmp
jo
mov
inc
pop
jp
inc
popa
cmpsl
jmp
sti
popf
shrl
sub
lock
mov
push
imul
adc
out
or
movsb
ljmp
xor
stos
fadd
fmuls
lods
inc
mov
mov
cmpsb
mov
ja
jge
pop
stos
loopne
xor
popa
ret
cmc
leave
stc
stc
add
ds
mov
inc
and
cmp
cmp
add
call
mov
aas
mov
xor
lret
pop
sbb
push
scas
mov
imul
iret
imul
xchg
sar
das
aam
pop
sub
js
inc
orl
adc
inc
jne
mov
mov
inc
fstps
pushf
adc
ja
enter
xor
push
add
cmp
push
xor
fnstenv
mov
imul
push
cmp
imul
cwtl
sub
cmp
mov
mov
testl
idivb
popf
dec
mov
push
loope
sbb
lds
jbe
es
dec
cmp
cmp
push
pusha
js
out
cld
inc
push
int3
xchg
cld
out
sub
cld
test
sti
mov
orl
aam
push
ds
mov
mov
cmp
cmp
jl
push
pop
test
dec
push
jmp
out
ret
push
and
and
bound
je
ljmp
cmp
jo
sbb
xchg
lock
pop
adc
test
outsb
push
test
in
lock
xchg
mov
and
cwtl
mov
mov
add
sub
xchg
cltd
mov
mov
add
in
cmp
xchg
push
add
xchg
dec
sub
mov
add
mov
out
mull
dec
data16
outsl
arpl
sbb
out
xchg
mov
sub
stos
xor
lahf
daa
pop
in
adc
int3
or
cmp
mov
mov
call
xor
test
mov
jecxz
fisttpl
js
out
push
or
xor
mov
mov
insb
push
adc
aas
nop
sub
jl
in
sub
cmpsl
fs
loop
dec
xchg
js
pop
mov
mov
scas
lcallw
push
mov
cmc
xor
jecxz
add
add
test
xchg
lods
mov
mov
adc
xchg
sbb
cld
adc
sub
xchg
popa
imul
mov
push
aam
inc
lds
xchg
sbb
jne
push
dec
mov
push
movsl
mov
test
ljmp
cltd
rorb
scas
jnp
inc
xor
pop
fisubs
jl
lods
add
or
scas
cmpsb
push
pop
jo
out
lahf
out
add
xor
test
mov
or
push
sti
inc
jle
sbb
out
xor
xchg
dec
scas
adc
mov
add
mov
pop
jle
dec
pop
fcoms
dec
lea
mov
push
int3
stos
mov
xor
cs
jle
lret
jmp
stos
mov
mov
les
mov
das
jno
adc
mov
in
jg
loop
scas
jb
or
xor
mov
cwtl
imul
pushl
push
inc
pusha
pop
aaa
bound
popf
insl
or
and
fwait
ss
inc
sbb
jnp
popf
push
inc
lea
rclb
nop
sbb
push
push
mov
aam
repz
push
add
mov
inc
sarl
xlat
lds
pop
and
jp
out
fnstenv
jecxz
cld
jbe
push
mov
cmp
in
dec
ficoms
add
jecxz
push
je
xor
je
cmp
xor
xor
ds
push
pop
dec
adc
pop
pusha
mov
and
in
jp
ret
dec
lock
mov
sub
mov
add
adc
les
add
pop
imul
cmp
stc
imul
push
mov
jb
mov
cmpsb
xor
dec
cltd
mov
mov
dec
test
stos
pop
enter
rcl
push
jne
and
loopne
inc
out
inc
insb
xchg
jb
mov
out
lods
pop
or
aam
add
sahf
clc
mov
movsb
and
in
ffreep
repnz
scas
cmp
xchg
pop
mov
dec
into
xchg
adc
in
inc
sub
cmpsb
loope
ds
cmp
insl
pop
pop
scas
scas
lahf
jp
std
jl
jns
jb
mov
iret
pop
in
dec
das
daa
cltd
sub
popa
xchg
sbb
cwtl
push
push
or
dec
pop
pop
lret
shl
xor
call
dec
cwtl
push
rep
pop
cltd
jne
movsl
lds
mov
xor
ds
sub
jecxz
inc
dec
and
out
sub
xchg
pusha
repnz
push
push
cs
add
or
jle
data16
mov
data16
mov
faddl
jnp
rclb
inc
mov
push
cltd
loopne
dec
daa
xchg
xlat
dec
push
pusha
outsl
or
jbe
sbb
inc
pop
inc
mov
cs
and
adc
cli
and
scas
movl
push
mov
jge
mov
out
pop
push
xchg
or
pop
xor
push
test
outsb
pop
add
push
sub
in
mov
sub
pushf
xor
add
push
das
inc
cmp
jle
pop
out
loope
ret
aam
and
adc
cli
push
or
add
sbb
out
or
xchg
pop
mov
push
xchg
out
and
mov
mov
int
sahf
mov
enter
ret
add
adc
push
lds
jo
clc
nop
push
xchg
lods
repnz
nop
sbb
add
movb
add
hlt
xor
clc
add
enter
inc
xorb
dec
dec
clc
repnz
cld
mov
mov
mov
sbb
ret
jo
cmc
mov
cld
pop
mov
cmc
jg
std
fwait
inc
insl
xchg
mov
sbb
pusha
popa
push
xor
dec
cld
pop
dec
pop
cmp
fnstenv
adc
jle
in
aas
push
in
imul
pop
lods
inc
in
int3
jno
push
pop
inc
jmp
adc
ficomps
jge
repz
sarl
call
pushf
ljmp
js
lret
cmpsl
aas
cltd
in
sbb
adc
dec
mov
inc
xor
popa
pop
in
hlt
mov
jo
dec
xchg
frstor
ss
push
xchg
push
loop
mov
jbe
lock
fwait
in
inc
xchg
add
sahf
and
rorl
cs
loopne
loopne
adc
popa
mov
and
xlat
mov
data16
sahf
js
jg
test
fwait
push
pop
jge
aam
mov
aad
mov
flds
mov
push
add
jns
inc
outsb
pusha
dec
fwait
inc
mov
inc
imul
mov
dec
outsb
out
push
into
add
in
inc
in
or
cmp
inc
test
inc
cmpl
std
pop
cmpl
and
push
leave
jecxz
xchg
jae
add
addr16
mov
insb
adc
mov
sub
mov
fidivs
mov
xor
adc
jns
xor
push
in
push
repz
cmp
jmp
rcll
sub
mov
cld
mov
ss
push
nop
pop
roll
outsb
and
pop
push
movsl
xor
xchg
outsb
jo
push
test
out
insb
mov
push
ret
push
filds
push
incb
lods
pop
repnz
fs
pop
jb
imul
pushf
inc
dec
xorb
add
outsb
fistps
jge
bound
xchg
add
jno
daa
pop
pop
cwtl
mov
imul
push
jns
mov
jb
call
bound
sbb
xchg
mov
mov
loopne
sub
xchg
xor
fnsave
std
icebp
lret
clc
adc
rcrb
or
aas
divb
inc
repz
xor
xor
xor
rcll
dec
xchg
mov
xchg
cmp
rcll
sub
arpl
les
or
jns
xor
leave
xchg
inc
call
jno
nopl
pop
and
cli
mov
in
inc
push
dec
mov
outsb
in
add
xlat
jle
mov
imul
pop
add
sub
push
xchg
stos
shll
pop
and
fwait
shll
js
outsl
xchg
mov
fistpll
movsl
sub
dec
sub
outsl
ficompl
pop
repz
mov
lods
sub
xlat
jae
pop
fidivrl
cmpsl
je
insl
jecxz
lret
add
in
sub
and
mov
es
pop
pop
dec
sub
and
cmpsl
xchg
add
inc
js
dec
insb
fists
push
jne
popa
mov
enter
js
cs
in
jnp
rcll
mov
or
lds
into
test
push
sbb
daa
mov
imul
inc
fstl
xchg
xor
jle
frstor
jne
jmp
jl
pop
dec
xchg
jl
xor
adc
xchg
or
jbe
cmc
push
lock
loopne
dec
adc
inc
in
jmp
mov
testb
inc
jle
mov
mov
dec
or
fs
add
call
push
mov
or
dec
xchg
dec
sub
rclb
mov
outsb
cmpsl
shr
popa
ljmp
push
ja
lods
sbb
sub
cld
sbb
ficoml
push
popa
es
les
jo
jmp
pop
bound
sbb
pop
test
cmpsb
ja
aaa
or
push
lret
jmp
clc
ljmp
jge
dec
loopne
and
push
cltd
leave
fcmovu
fidivs
fildll
sti
jmp
inc
loope
mov
sub
xor
test
mov
xor
shll
rcl
test
mov
rcll
es
add
mov
inc
mov
sub
jl
mov
test
sbb
adc
push
imull
stos
imul
mov
fistl
or
repnz
out
sahf
loop
adc
add
mov
insl
jl
mov
insb
jecxz
ffree
xchg
mov
js
out
lods
gs
xchg
fldenv
stc
dec
add
call
sub
lods
push
pop
pop
pop
bound
dec
mov
test
sbb
repz
add
mov
add
imul
adc
imul
out
jnp
jmp
dec
sbb
test
xchg
repz
and
cmpsb
leave
cmp
lods
pop
scas
stos
prefetcht0
dec
lods
sarl
jmp
sbb
inc
popa
iret
cmp
fsubp
hlt
jl
mov
xchg
pop
mov
test
repz
call
pop
mov
stc
xor
xor
sbb
mul
loopne
loop
repz
pop
mov
mov
aas
sarl
enter
dec
testl
loope
jmp
imul
adc
loop
in
gs
out
and
adc
decb
pop
cmpsb
jb
out
imul
fimull
sub
mov
push
filds
pop
or
outsb
mov
jecxz
ljmp
jg
or
adcl
xchg
lcall
jge
pop
or
sbb
lds
ret
addr16
sbb
daa
mov
xor
xchg
inc
cmp
out
ljmp
add
xor
lret
sbb
lods
movsb
aam
in
stc
hlt
shlb
fwait
jg
xchg
push
adc
mov
xor
dec
and
mov
repnz
jbe
loope
adc
push
pop
pusha
fs
test
xor
xor
mov
adc
mov
iret
or
and
dec
cmp
addr16
rcrl
lahf
pop
mov
xchg
roll
stos
fisttps
jecxz
rcrl
mov
insl
loope
ljmp
jl
cli
push
popa
jmp
jae
sub
xchg
int
or
dec
jbe
sub
dec
lahf
in
sbb
test
or
jne
add
or
inc
dec
sbb
fneni(8087
adc
inc
aad
loop
xchg
scas
ljmp
sub
sub
stos
cmp
xchg
test
cmp
dec
xchg
enter
mov
jnp
add
pop
dec
rclb
in
mov
outsb
pop
iret
cmpsl
inc
ret
xchg
mov
sub
bound
push
and
icebp
cmp
pop
jnp,pt
loope
not
out
sub
jb
mov
iret
es
arpl
mov
mov
sbb
popa
fnstenv
nop
in
daa
mov
mov
data16
xor
cmp
rorb
adc
cmc
mov
fdivrs
jmp
xorl
jno
sti
test
add
jo
scas
testl
mov
out
lds
sub
adc
mov
xchg
shrb
bound
add
xor
mov
fadd
pop
into
lret
pushf
dec
and
or
fmull
mov
aas
stos
jae
push
fistps
leave
push
mov
pushf
je
loopne
mov
push
cld
jo
gs
mov
adc
movsl
pushf
cmp
cs
or
add
inc
mov
pusha
jmp
sub
sub
cmpsb
jecxz
sbb
enter
lahf
insl
popa
adc
out
aaa
movsb
push
hlt
cmp
shrb
aad
jp
mov
in
jno
imul
lret
push
sahf
xor
sub
push
jne
or
mov
les
or
sbb
in
mov
dec
push
cwtl
sbb
xor
sub
sti
push
push
loop
int3
sub
fucomip
push
pushf
dec
or
rcll
or
or
or
cmp
lcall
sahf
push
push
jecxz
xchg
or
adc
mov
les
mov
jno
mov
incb
iret
mov
xor
stos
ljmp
in
movsb
cmc
out
cmp
popf
push
cltd
xor
jnp
cmp
add
pop
lahf
jno
sub
addr16
mov
inc
test
mov
inc
enter
xchg
fstps
mov
out
jns
outsb
jg
mov
adc
mov
ret
es
mov
imul
in
sub
mov
sub
and
and
ret
aas
xchg
scas
mov
insb
push
out
or
fcos
inc
dec
add
xchg
rcrl
and
adc
jp
scas
scas
out
dec
cmp
aam
xchg
sbb
or
mov
mov
into
movsl
jo
rep
or
add
jg
mov
dec
xchg
data16
scas
imul
push
xor
or
jb
xchg
popf
addl
jo
and
sub
jecxz
int3
sub
adc
inc
jle
sub
mov
adc
xchg
in
ljmp
popf
jae
enter
mov
cmp
enter
sub
pop
mov
inc
scas
mov
sbb
cmpsl
sub
jbe
cmp
dec
adcl
int
jbe
ftst
cmp
push
push
mov
fistpll
inc
ja
push
sarb
mov
movsb
mov
mov
lret
pop
inc
or
hlt
nop
int
or
sti
shll
rcrl
jo
xchg
push
mov
lcall
or
jbe
push
outsb
push
mov
popa
add
xor
scas
or
js
shll
sahf
push
xor
arpl
mov
icebp
mov
enter
cmp
test
xlat
sbb
repz
sub
sub
adc
enter
or
fnsave
fnstsw
test
lea
xor
ja
scas
leave
loopne
mov
pop
stc
in
add
sub
and
cmp
adc
lcall
lock
sar
icebp
das
iret
loope
inc
jg
fwait
scas
inc
or
mov
idivb
push
cltd
inc
aas
sbb
subb
adc
fimull
or
frstor
bound
divb
pushf
xchg
popf
in
pop
xchg
cmpsb
inc
fidivrl
popa
and
mov
lea
push
fs
movsb
adc
lret
xor
dec
mov
or
adc
aaa
in
mov
or
mov
outsb
aas
movsl
mov
in
mov
mov
fwait
lock
scas
movl
cmp
ljmp
fdivr
xchg
cmp
and
jae
in
push
push
cmp
scas
cs
cmp
pop
jno
cmp
sub
fmul
lds
jne
mov
dec
and
cld
aam
ja
test
in
mov
ret
dec
fmull
ret
xchg
add
or
mov
xchg
xchg
mov
scas
add
jge
inc
popa
pop
xor
out
int
lea
mov
call
xchg
fistps
jecxz
ret
lods
jmp
iret
push
in
push
mov
lcall
shr
inc
pop
mov
jecxz
mov
loopne
cmp
or
orl
stos
jno
repz
sbb
dec
adc
test
cltd
jl
cmp
pop
mov
arpl
lods
ljmp
insl
je
fmull
mov
out
testl
fadds
sub
xor
and
jnp
lock
int
mov
jle
xchg
fimuls
sbb
xor
mov
call
adc
jbe
fcmovbe
les
add
in
mov
pop
int
call
adc
mov
xchg
xchg
cmp
or
xchg
mov
arpl
sub
sub
dec
popa
dec
pop
sub
outsl
mov
cmpl
out
daa
xchg
pop
lahf
push
cmp
hlt
js
push
clc
jg
rcll
jge
lods
xchg
mov
test
stos
dec
icebp
dec
push
dec
lret
mov
push
mov
sub
aad
es
incb
repz
arpl
popf
xor
add
mov
test
push
sbb
faddl
push
nop
lds
push
insl
out
mov
sub
rep
xchg
nop
repz
fwait
imulb
mov
add
pop
mov
or
push
ljmp
ficoml
mov
aad
in
popf
scas
sbb
push
push
cs
fnstenv
cmpsb
mov
insb
insb
in
cmp
xor
test
or
lods
dec
inc
or
inc
sti
add
pop
xlat
push
sbb
xor
jo
and
push
adc
pop
int
adc
lds
ficomps
sub
lds
inc
pop
and
cmpsl
mov
adc
mov
sub
jmp
inc
adc
inc
out
add
sarb
mov
fiaddl
rcrl
daa
roll
sub
movsb
jae
lret
sub
mov
mov
rol
repz
push
hlt
addr16
sbb
add
les
ss
push
inc
outsb
bound
cmp
xchg
daa
imul
xlat
jne
mov
pop
jl
cmp
pop
pop
cmp
adc
or
jb
popf
xor
pop
repz
cltd
inc
loop
in
or
int
mov
push
push
cmp
dec
lds
cmpb
cmp
gs
inc
adc
pushf
ret
out
mov
sbb
dec
int3
fcom
iret
cmp
aam
mov
cltd
sbb
pop
xchg
xor
fcompl
loopne
push
adc
mov
movsl
dec
in
aad
xor
jecxz
push
leave
decb
loope
jge
ss
jno
iret
sbb
ret
lods
aad
ret
push
fiaddl
push
jmp
cs
mov
es
fwait
rol
push
jne
ret
imul
rclb
out
pop
das
loop
adc
sub
cwtl
jo
repz
or
lahf
and
xchg
sbb
mov
inc
sbb
push
adcl
jle
mov
and
loope
cmpsl
popa
fists
adc
mov
ds
sti
sub
mov
out
dec
xchg
gs
xlat
sahf
insb
call
push
shlb
jno
call
add
cltd
mov
push
test
inc
mov
xchg
aad
es
rol
in
dec
mov
xchg
push
movsl
push
xchg
icebp
dec
sub
std
pop
cmpsb
sub
pushf
jg
jnp
roll
out
adc
data16
mov
cmp
cmp
ss
iret
xchg
push
call
mov
sub
add
orl
lret
push
mov
imul
into
cmovo
jbe
dec
pop
xchg
sahf
and
push
das
repz
push
js
ss
pop
push
mov
inc
jge
leave
or
stos
mov
arpl
push
paddusw
cmp
push
sbb
add
imul
mov
imul
mov
mov
push
xor
dec
xchg
out
test
xchg
add
mov
jne
stos
and
test
out
filds
pop
cmp
es
clc
lock
jle
repnz
xchg
and
cmp
adc
das
jge
dec
test
int3
xchg
repnz
fwait
insb
cli
xor
pop
stos
rcrl
das
or
fisubrl
mov
fisubrs
leave
std
jg
into
cmp
xor
add
mov
in
add
mov
dec
xor
mov
mov
adc
sbb
or
mov
std
inc
push
and
in
je
inc
push
in
clc
ljmp
mov
lods
adc
scas
pop
push
pusha
sub
cmpb
dec
ja
sub
addl
push
jno
jge
mov
inc
or
mov
sub
andb
pusha
fwait
cld
in
dec
inc
mull
outsl
lds
ret
das
fdiv
inc
dec
sbb
xchg
notb
into
push
ret
inc
add
and
inc
pop
or
dec
sbb
in
cmp
imul
rorl
xchg
pop
leave
shl
jp
inc
es
sti
es
inc
jae
imul
pusha
xor
jge
mov
cmpl
push
mov
loope
mov
enter
mov
sti
mov
mov
push
cmp
xchg
and
xchg
adc
fistl
mov
push
into
popf
xor
mov
push
cld
add
pop
sbb
fnstsw
mov
lahf
in
sahf
inc
pusha
ficompl
inc
push
pop
divb
push
pop
adc
addr16
push
xor
mov
test
cwtl
dec
or
sbb
ds
int
std
inc
outsl
ja
jne
mov
jp
dec
add
test
cltd
mov
adcl
fsubp
or
mov
mov
movsl
cmc
mov
pop
mov
push
loope
hlt
jns
push
pop
js
sub
fxch
sub
jbe
les
rorl
in
je
les
adc
sub
movsl
adc
mov
fcmovu
ljmp
adc
sti
sahf
std
flds
dec
and
inc
imulb
ljmp
xor
lds
dec
sub
addb
stc
clc
jg
mov
cmpsl
leave
jbe
iret
ficompl
aam
jmp
xorl
jg
out
leave
pop
cmp
cmp
jmp
xor
scas
arpl
int3
fwait
pop
or
mov
mov
jae
and
insl
sub
xor
lods
or
inc
icebp
aaa
cltd
loop
test
inc
cwtl
sahf
rolb
sub
push
sbb
inc
icebp
movsb
mov
mov
xor
jo
aaa
jmp
sahf
and
jbe
shlb
scas
ja
dec
cltd
push
pop
ret
mov
add
push
or
pop
andb
lret
subl
pusha
cld
enter
or
cltd
stc
mov
popa
add
adc
push
daa
in
mov
aam
push
cmc
or
sbb
cwtl
inc
arpl
int3
jg
jbe
sub
sbb
mov
mov
stos
mov
and
insl
xchg
movsb
add
aad
adc
fs
test
mov
lods
push
jg
pop
lods
sub
mov
xchg
cmpsb
stos
mov
test
shrb
cmp
movsl
scas
cpuid
mov
adc
loop
int3
sbb
mov
push
xlat
orb
mov
mov
into
push
addl
inc
mov
in
mov
fbstp
adc
insl
in
xor
lea
mov
sahf
xchg
mov
xor
test
xor
roll
test
sbb
fwait
cmc
xchg
cmp
out
xor
insl
mov
cwtl
daa
mov
movsl
scas
mov
add
les
clc
push
push
jp
lahf
cmp
andb
add
test
shll
jo
out
cmp
xor
pop
and
addr16
lret
xchg
imul
xchg
pop
mov
in
jne
add
call
mov
fmuls
in
add
jmp
sub
dec
pop
inc
aaa
push
arpl
jns
js
inc
out
fs
test
pop
jmp
inc
scas
ja
test
call
jne
sahf
jno
scas
fisttps
jg
push
push
cmp
mov
sbb
jns
and
daa
and
nop
add
out
add
xchg
or
inc
inc
sub
data16
sub
loopne
repz
inc
xchg
inc
add
adc
pop
test
dec
adc
fisubl
xchg
int
std
inc
ljmp
loop
cmp
lret
jo
xchg
fcmovnbe
pop
outsb
jno
sub
adc
test
adc
in
out
cs
arpl
push
clc
shrl
lret
outsb
std
arpl
push
das
xchg
je
jl
mov
inc
xchg
sahf
movsb
pop
mov
out
inc
mov
ds
ds
add
test
push
ret
adc
adc
imul
mov
in
stos
mov
setp
push
cltd
push
xchg
cmp
xor
in
test
push
imul
push
sub
mov
pusha
stc
jg
cmc
pop
adc
inc
or
adc
fdivrl
mov
xchg
sub
addr16
iret
inc
and
clc
nop
xchg
cmp
sahf
lcall
aad
outsl
mov
test
pop
call
jle
cmpsb
outsb
pop
outsl
cmp
xchg
mov
insl
imull
loope
scas
sub
sub
mov
flds
or
or
or
iret
hlt
outsl
or
adcb
dec
ja
xchg
mov
pop
ljmp
dec
in
repz
xor
scas
dec
xor
pop
stos
xchg
insb
inc
sub
mov
pop
pop
mov
xor
push
mov
jg
rcrl
lea
cmpsl
cli
addb
jecxz
loop
push
test
mov
clc
and
inc
push
inc
push
mov
lods
fwait
sahf
dec
sub
fistpll
adc
scas
mov
mov
sbb
outsb
mov
adc
fwait
xchg
xchg
mov
inc
insl
popf
sbb
fildl
mov
mov
pop
fwait
lds
push
or
mov
mov
popl
ss
inc
cmpsb
mov
arpl
negl
lock
pop
inc
std
sbb
mov
hlt
lret
lret
rcrl
lcall
aad
ss
mov
inc
fmul
dec
pop
jne
or
mov
jmp
and
jns
jb
int3
mov
lret
sahf
int3
cmp
jbe
adc
jle
inc
nop
test
movsl
jl
aaa
roll
enter
std
nop
repz
mov
push
mov
xchg
test
add
xor
push
mov
adc
fsubl
cld
int3
or
mov
and
xchg
fcmovnu
pop
call
inc
cli
add
inc
dec
mov
sbb
xor
adcl
pop
push
jecxz
cmp
mov
clc
cmp
aam
mov
jl
and
cmp
or
inc
in
lcall
push
daa
pop
sbb
testl
pop
sbb
loope
push
add
or
shr
inc
sbb
mov
pop
jp
jnp
outsb
std
shrb
push
pop
push
jns
lods
jle
rcrl
jo
mov
jne
dec
inc
push
inc
test
rcl
test
stos
popl
js
jae
pop
jge
loop
cmp
cmp
cmp
xor
ds
pop
cmp
ror
fs
xchg
pop
aaa
test
or
push
ds
movsl
mov
mov
mov
mov
adc
cmp
dec
mov
dec
add
and
or
faddl
nop
push
pop
test
xchg
add
out
cmp
movsl
pop
filds
iret
mov
loope
mov
xor
cmpsl
sbb
repnz
rclb
adc
data16
sub
xor
jg
inc
add
movsl
or
add
sbb
scas
sbb
jne
mov
dec
lods
dec
push
dec
pusha
or
jecxz
and
lea
xchg
pop
xchg
xlat
pop
sub
mov
pop
lret
jge
push
jecxz
leave
mov
fdivrs
bound
jecxz
movsl
dec
push
dec
mov
mov
cmpsb
xchg
cli
sub
inc
inc
je
jo
gs
xorl
jbe
jo
sub
add
out
inc
sahf
out
enter
test
sar
pop
mov
je
dec
push
sub
mov
into
push
test
pop
mov
inc
sbb
mov
fcoml
insb
sub
add
cmp
lods
sbb
stos
jge
xchg
mov
ljmp
cmp
inc
into
lret
fcmove
push
bound
mov
outsl
jbe
ljmp
mov
inc
daa
ret
dec
adc
aam
mov
pop
mov
xor
mov
adc
test
orb
and
mov
xchg
mov
aas
cwtl
xor
loop
into
lds
repz
jmp
jbe
lods
mulb
mov
jp
sbb
xchg
xorl
sbb
sub
nop
mov
pop
adc
fiadds
add
adc
aad
shrb
and
imul
sub
insb
orb
or
lock
iret
xchg
cmp
ljmp
lahf
fdivs
cmp
add
iret
cmp
fisttpl
pop
pushf
push
push
cmc
hlt
out
jl
cwtl
sbb
or
mov
flds
inc
inc
cld
jb
mov
aad
test
ret
mov
mov
scas
scas
mov
outsl
dec
repnz
jge
push
push
scas
fistpll
adc
lcall
flds
mov
clc
pop
dec
push
stos
bound
fisubl
movsb
pop
scas
sbb
mov
mov
mov
iret
cltd
mov
int3
mov
mov
mov
mov
imul
les
pop
and
cmp
insl
inc
mov
outsb
addb
lret
fs
in
sbb
push
sub
sbb
push
test
rolb
test
xchg
andl
gs
sub
jbe
fidivrs
mov
dec
fdivrl
jle
jne
fstpt
push
sbb
mov
mov
loop
shlb
adc
sub
xor
mov
mov
pop
pop
or
stos
sub
adc
mov
jmp
push
test
sbb
das
lods
sarl
push
and
cmpsl
mov
jae
mov
push
pushf
xchg
insb
mov
mov
in
pushf
mov
stos
mov
inc
inc
jae
and
sub
xchg
stos
push
mov
dec
leave
das
dec
stc
or
mov
sub
push
jg
jnp
dec
pop
sarb
mov
cmp
dec
lods
xchg
shrl
and
lock
inc
icebp
push
in
fwait
and
sarl
test
in
fisubrs
ror
mov
call
imul
enter
xchg
iret
mov
in
daa
cwtl
jp
inc
mov
mov
clc
push
dec
push
andl
pop
mov
sub
movsb
hlt
nop
cmp
sbb
or
cmp
shll
das
mov
cli
mov
or
nopl
push
fs
mov
rcr
push
std
xchg
inc
cmpsl
movsl
and
or
loop
iret
sub
jo
jne
sbbb
inc
push
out
rcr
or
add
add
out
push
jbe
fdivr
mov
iret
rcrl
xor
push
sub
xchg
sub
push
jno
jmp
shll
out
or
xchg
push
pavgw
ret
cwtl
or
add
ljmp
push
dec
push
mov
xchg
sub
jg
adc
mov
aad
and
mov
lret
inc
adc
inc
out
push
ss
mov
xchg
dec
inc
clc
jnp
add
cmp
shll
xor
adc
fnstsw
xor
jns
arpl
fidivrl
xor
cwtl
fsts
out
insl
arpl
cmp
outsl
push
sahf
push
add
push
mov
pop
push
daa
loope
xchg
or
adc
pop
push
mov
mov
sti
adc
mov
or
pop
fstps
mov
dec
pop
xor
push
pop
mov
cmp
dec
rcrb
dec
addr16
stos
hlt
popf
repnz
scas
jnp
inc
test
adc
mov
inc
add
mov
shl
das
cmpsb
cwtl
stos
push
cli
sub
iret
xchg
jmp
inc
mov
iret
xor
adc
and
loopne
stos
mov
mov
adc
push
cmp
fadd
fisubl
xor
fstpl
aam
pop
add
sti
fmull
test
xor
add
jbe
add
leave
sbb
mov
mov
inc
cli
mov
das
and
es
pop
dec
add
outsb
mov
lods
stc
dec
push
lret
xchg
mov
mov
dec
mov
add
dec
imul
cmp
mov
xor
leave
add
inc
outsb
or
pop
mov
dec
cwtl
dec
inc
fwait
mov
or
jnp,pn
imul
xor
jns
or
sub
into
test
mov
push
stos
std
lods
int3
push
dec
jl
lahf
pop
push
rorb
cmpsl
lds
xorl
cltd
xchg
lret
and
mov
icebp
cld
xlat
and
xchg
add
push
mov
cmpsb
fisubs
sbb
es
stc
inc
lahf
xchg
scas
inc
adc
lea
std
lcall
imul
mov
in
into
lea
in
dec
lret
shlb
sub
xchg
mov
pop
negl
dec
jns
sahf
in
ja
out
jmp
int3
xor
inc
stos
movsl
and
mov
dec
test
inc
mulb
inc
sbb
ret
pop
sub
cmc
jbe
jne
push
stos
iret
loopne
popa
cmp
mov
inc
and
in
shrb
add
xchg
push
push
cmp
or
std
sbb
mov
stc
and
test
aaa
pop
test
push
cld
add
imul
arpl
xor
push
xchg
es
stc
std
jl
fwait
shll
lods
dec
mov
lcall
mov
aam
fldenv
mov
fwait
add
mov
aas
sbb
inc
dec
flds
sbb
xchg
xor
cmp
dec
stos
mov
mov
pop
xchg
push
js
mov
inc
fcomi
lret
pushf
popa
hlt
out
pop
shlb
mov
xchg
hlt
pop
iret
enter
test
mov
mov
push
std
lods
dec
sbb
repnz
mov
js
mov
dec
xchg
adc
mov
lret
cmp
push
mul
out
enter
rorb
lcall
xor
mov
je
push
pop
shl
in
mov
out
test
jp
add
push
in
push
inc
pop
push
pop
xchg
pusha
mov
dec
popa
jl
pop
test
jo
sub
test
test
shrb
pop
inc
imul
mov
push
sbb
push
sub
lret
fstpl
mov
cld
inc
addr16
popf
mov
inc
mov
pusha
cmp
out
xor
push
add
dec
sarl
loopne
inc
je
lds
push
mov
dec
call
mov
mov
loope
sub
jl
pop
jl
push
add
mov
pop
pop
dec
jecxz
or
mov
jns
mov
dec
sub
pop
rclb
fdivr
push
xor
loop
pop
jno
mov
insb
adc
addb
loop
and
and
inc
mov
in
add
dec
xor
stos
or
in
mov
in
adc
out
jae
ja
xor
mov
les
xchg
rcr
xor
mov
lret
sbb
inc
sub
push
ja
dec
test
jge
dec
add
xor
dec
dec
icebp
mov
mov
dec
jno
dec
mov
xor
sarb
mov
out
dec
xchg
xor
popa
pop
cmpsb
shlb
in
outsb
out
das
mov
or
ficomps
shr
lcall
add
subb
jle
js
and
arpl
add
andb
es
aas
adc
cmp
std
cmpsl
aam
xchg
mov
push
mov
pop
mov
pop
adc
fisubl
and
outsl
addr16
xchg
sahf
and
mov
in
testb
sub
aad
ss
mov
in
lds
adc
stc
mov
adc
sub
xchg
mov
sahf
pop
mov
xchg
mov
lods
xchg
adc
dec
popf
lods
cmp
mov
push
push
xchg
out
or
cmc
fnstenv
into
scas
leave
sub
xchg
sbb
movsb
sti
mov
and
shrl
mov
les
dec
stos
orb
sub
je
in
push
shlb
mov
das
add
push
cwtl
imul
sbb
cmpsl
push
xor
jp
pushf
pusha
into
or
mov
mov
shl
movsl
dec
out
rcl
jg
int
fistpl
inc
jecxz
cmp
enter
into
jl
pop
mov
outsb
inc
or
je
jnp
lods
xchg
das
cmp
mov
jo
mov
mov
lcall
mov
jg
aas
xor
and
fsubs
insl
fldt
xchg
xor
in
sbb
push
lret
or
xchg
loopne
lods
repz
arpl
mov
adc
int
mov
mov
push
push
jge
jns
dec
out
call
pop
sub
inc
mov
inc
add
mov
xchg
jb
test
xchg
mov
mov
mov
pop
or
adc
push
xor
push
ljmp
sub
aam
dec
dec
jne
daa
mov
clc
fwait
cmc
arpl
fistpll
adc
cltd
movsb
hlt
xor
ficoms
int
mov
cltd
cmp
enter
insb
or
fsubr
xchg
andl
xchg
lea
lods
cmp
sub
loope
in
or
lret
xor
xchg
mov
xorl
cmpb
dec
std
cwtl
xchg
jnp
sub
cli
dec
std
xor
rcrl
out
mov
pop
pop
xchg
cmp
mov
bound
dec
pop
movsl
shrb
xor
cwtl
cld
add
add
and
jmp
dec
aam
cmp
cmp
test
daa
pushf
pusha
cs
addr16
push
mov
call
call
xor
inc
jp
arpl
lods
lods
test
int
int
pop
dec
les
scas
mov
lahf
sub
mov
xchg
std
loopne
fisttpl
movsb
lds
fnsave
mov
pop
jne
mov
test
or
mov
push
cmp
cmp
popa
jmp
fisttpl
add
lds
cmp
xor
push
pop
pop
sbb
adc
rol
add
into
pop
shl
adc
loopne
addr16
das
imul
sub
dec
addb
rcrl
loope
shlb
and
movsl
fsts
pop
lret
in
pop
in
sahf
cli
cld
xchg
lods
pop
cld
in
sahf
idivb
jge
dec
dec
mov
out
arpl
inc
xchg
loopne
add
mov
push
cwtl
adc
fcoms
lahf
cmp
inc
jae
push
in
loope
aas
sub
movsl
or
adc
lods
push
mov
jg
int3
push
pop
mov
cmp
sbb
popf
mov
push
adc
ret
adc
mov
push
adc
mov
cmp
popf
repz
mov
mov
mov
cli
outsl
shrl
sbb
push
int
adc
add
jge
or
and
scas
dec
sub
dec
and
jmp
jge
sbb
mov
les
xor
cmpb
jp
loopne
rorb
jb
cmp
mov
std
cmpl
jne
xchg
or
test
push
sub
loop
ret
and
mov
std
movsl
dec
andl
cmpsb
push
into
pop
mov
loope
and
sub
lds
cmp
push
lods
lahf
or
lret
bnd
in
out
mov
jne
insl
xchg
mov
add
pop
inc
jp
lret
cmp
jg
aad
cmpsl
jo
mov
inc
notb
inc
cmp
rclb
jge
push
repz
mov
adc
orb
sti
xchg
loope
lea
mov
popf
int3
lea
in
ljmpw
cmpsb
sar
into
cmp
cmpsl
xchg
popf
lods
push
mov
inc
mov
and
sbb
out
repz
loopne
cmpsl
sbb
push
popf
add
shlb
and
pop
scas
push
adc
push
js
or
mov
sti
mov
adc
sub
test
nopl
sbb
jnp
xchg
adc
loopne
outsl
cmp
sbb
ds
pop
jg
test
gs
pop
xor
mov
sub
add
sub
or
fildl
dec
push
imul
lea
jecxz
inc
iret
mov
inc
mov
push
adc
mov
adc
xlat
fidivl
arpl
sbb
add
lret
stos
xchg
mov
add
cs
fstps
shl
jg
test
pop
sub
addr16
mov
sahf
rolb
pushf
add
jge
push
rcl
leave
mov
and
pop
sub
imul
std
ja
cltd
xchg
mov
adc
sbb
push
mov
in
cmp
in
inc
cmpsl
or
flds
pop
addr16
dec
mov
lods
push
mov
cmp
sbbb
enter
and
pop
jmp
cmpsb
ja
out
xchg
jnp
xor
data16
xor
and
jge
rol
mov
fwait
push
cwtl
orl
xchg
xchg
xor
mov
xchg
mov
inc
pop
loope
cmpsl
jns
das
outsb
ss
insb
fcom
xor
jg
ret
cmp
fwait
jno
int3
add
movsl
lds
aas
lcall
mov
lret
insb
mov
inc
cmpsb
adc
mov
fs
lods
fisttpll
testl
sbb
in
xchg
bound
xchg
pop
pop
sub
sub
xchg
ja
cmp
stos
sub
arpl
sub
sub
fcomip
call
mov
xor
shlb
adcb
jle
or
xchg
icebp
xchg
mov
push
mov
mov
jbe
sahf
adc
mov
cs
pop
xor
mov
iret
hlt
sub
lret
repz
pop
jns
mov
mov
mov
jmp
pop
jecxz
shll
hlt
fcmovnu
addr16
fnstcw
jle
pop
dec
insl
lds
pop
jbe
lds
leave
mov
pop
fistpll
push
test
add
add
dec
jns
mov
sub
imul
add
jg
jbe
pop
cmpsl
xchg
mov
adc
into
addr16
test
rcrb
int
or
sarl
repz
lds
inc
ljmp
inc
ja
shl
push
and
cld
push
mov
test
inc
loop
cmp
mov
mov
pop
add
sub
js
enter
adc
aas
push
xchg
push
fwait
cltd
test
std
arpl
add
mov
mov
loope
add
mov
mov
cld
mov
xor
push
jl
testb
cmc
adc
push
jbe
stos
in
mov
out
sub
scas
lods
push
imul
fisttpll
jne
adc
push
cmc
cmc
mov
imul
xchg
pop
int3
mov
roll
out
sbb
icebp
sahf
shll
decl
mov
jmp
or
repnz
stc
xchg
mov
inc
sbb
xchg
movsl
jge
jo
pop
fs
add
or
addr16
sub
jp
rcrb
jmp
jle
or
imul
or
dec
test
rorb
testl
out
outsb
clc
inc
scas
cld
testb
pop
adc
aam
xchg
lahf
jns
and
lahf
out
mov
in
push
aad
les
xor
dec
popa
dec
or
inc
pop
add
fsubs
sub
lret
xchg
pop
mov
popa
mov
popa
sbb
sahf
popf
and
dec
jle
cmp
int
or
inc
jmp
jmp
inc
push
jp
lret
lcall
and
mov
inc
clc
ficompl
push
push
je
adcb
lret
cld
test
je
mov
out
adc
fnstenv
xchg
xchg
adc
mov
fdivs
jnp
dec
pushf
test
mov
sub
stos
fidivs
fnstcw
sub
or
xchg
shll
mov
mov
xor
test
push
mov
testl
mov
adc
popf
xor
scas
xlat
aam
cltd
aad
jne
push
int
insl
dec
mov
roll
mov
js
loop
aad
mov
mov
xchg
add
push
in
std
xor
aad
mov
mov
pop
or
loop
mov
inc
ds
orb
jb
mov
and
gs
jbe
testb
icebp
icebp
and
jae
and
jmp
cmpsb
dec
lret
sahf
sbb
lret
xlat
push
bound
pushf
sbb
mov
pop
push
test
int
pop
aad
mov
pop
adc
mov
and
aaa
mov
repz
mov
sub
lock
addb
jmp
or
mov
push
push
xchg
lea
jbe
lock
xchg
test
cmpb
arpl
push
shrl
shrl
add
cli
decl
mov
inc
pusha
test
jmp
hlt
shl
ret
loope
orl
pop
and
test
repnz
and
sbb
or
mov
push
inc
inc
movsl
push
ljmp
stc
fwait
cwtl
out
lret
push
clc
cltd
push
aas
js
aaa
pop
in
shll
je
mov
mov
xor
fisubrs
xor
mov
pop
push
les
clc
mov
cmp
jo
notb
movsl
jnp
cwtl
pop
dec
lcall
sbb
mov
lods
imul
ss
sub
sarl
mov
sub
dec
sub
or
fwait
and
in
test
xor
sub
out
push
enter
mov
push
leave
push
inc
or
stc
xchg
mov
test
dec
add
push
mov
mov
push
into
fsubrs
cmp
not
mov
mov
xchg
lds
cwtl
loope
repz
dec
andb
nop
int
mov
or
ljmp
inc
jb
fildl
sbbb
fnsave
sahf
cmc
adc
aas
pop
out
fsubl
xor
fimuls
jno
fcmovbe
jecxz,pt
cld
inc
pop
add
jl,pt
jle
pushf
pop
xchg
subb
mov
mov
cmp
mov
outsl
jmp
inc
pop
es
inc
inc
cmc
sbbb
pop
push
leave
rcll
mov
insl
movsb
adc
sub
imul
stc
clc
push
mov
cmp
sbb
xchg
pop
mov
fs
sbb
pushf
sub
jne
xchg
test
into
arpl
push
sbb
mov
push
test
inc
ja
imul
scas
insb
outsl
shll
cltd
shrl
nop
cmp
sbb
out
add
es
iret
adc
cmc
iret
movb
push
cmpsl
test
je
mov
xchg
aas
les
pusha
in
shrb
cwtl
sbb
int3
add
push
dec
sbb
and
mov
stc
dec
arpl
cmp
xchg
adc
stc
je
ljmp
push
dec
repz
mov
xor
add
gs
frstor
xchg
pop
popf
bound
xor
mov
xor
les
test
adc
mov
add
stc
out
sbbb
cltd
xlat
mov
and
sti
rcrb
or
loope
fdivrl
mov
lds
shll
shll
push
push
pop
mov
push
xor
test
dec
and
jmp
in
jg
push
lret
fwait
sbb
push
fs
outsb
ret
mov
popa
xor
or
sub
bound
and
and
in
mov
sarb
push
and
cs
mov
test
jecxz
int
ja
outsl
mov
push
sti
mov
fdiv
mov
sarb
notb
sbb
mov
jl
int
or
fldenv
int3
punpckhwd
pop
in
ficoms
push
out
or
cwtl
adc
adc
clc
clc
test
cmp
mov
add
aaa
mov
jle
mov
aas
sbb
inc
sub
movsb
add
xchg
inc
mov
int3
arpl
jecxz
push
cmp
mov
ss
ror
mov
xchg
shlb
shlb
cmp
dec
fistpll
mov
movsl
jecxz
mov
mov
sub
or
pop
jo
lcall
leave
jb
daa
xor
jne
mov
cmp
outsb
and
or
cmp
out
repnz
sub
loope
ret
jle
mov
sub
xchg
mov
shll
enter
je
cmp
in
insl
dec
pop
test
sub
pop
fsubrl
inc
int3
add
mov
shll
jg
or
das
cmp
scas
mov
call
test
jle
movsl
mov
inc
ja
mov
jl
js
sub
hlt
sub
dec
outsl
loop
cmp
addr16
test
mov
pop
inc
jnp
mov
cld
jp
stc
dec
xor
and
out
pop
in
fcmovnu
in
inc
and
inc
mov
xchg
push
je,pn
inc
pop
mov
fwait
and
enter
mov
add
and
lcall
and
mov
pop
imul
cmpsb
fcomps
mov
cmpsl
mov
dec
loopne
cmc
repnz
sbb
sub
and
push
xor
pop
xor
adc
out
inc
lods
push
or
xor
xor
dec
ja
mov
pop
sub
daa
and
sub
xchg
loopne
clc
or
cmpsl
adc
aaa
int
movsb
loop
pop
clc
xchg
out
lahf
idivl
add
hlt
dec
add
imul
ds
sub
icebp
xchg
icebp
cld
fsts
add
inc
les
fnstcw
inc
out
daa
jmp
xor
shl
dec
and
pusha
mov
mov
ss
shrb
xchg
jle
jle
rolb
pop
test
xor
push
imul
jae
xchg
xchg
or
sbb
adcl
pop
mov
daa
test
cmpl
std
leave
mov
xor
rol
ret
mov
add
mov
not
mov
ret
mov
loop
clc
popa
pop
add
aad
push
mov
jle
popa
call
xchg
lea
add
mov
and
daa
push
adc
stos
loopne
push
stc
push
jnp
cmp
xor
pop
jns
int
jge
cmp
push
clc
ss
mov
movsl
pop
mov
sbb
cmp
mov
fld
and
pop
out
ret
push
ret
pop
pop
pop
dec
sahf
or
aam
xchg
push
pop
cmpsl
cmc
or
jno
outsl
sub
pop
sbb
and
icebp
lret
or
mov
aaa
cld
dec
lods
mov
xchg
ds
xor
pop
add
int3
jns
fwait
test
push
cmp
stos
imul
paddq
or
out
mov
add
out
sub
lea
stc
arpl
or
adc
push
and
mov
mov
pop
pop
lahf
inc
icebp
xor
xor
add
cwtl
mov
xor
gs
lods
lcall
cltd
lret
push
cltd
jmp
adc
scas
push
sub
in
int
adc
enter
sub
xchg
cmc
outsl
test
cwtl
and
mov
mov
mov
gs
in
sub
repnz
jmp
cmpsb
mov
mov
jbe
popa
test
dec
mov
push
scas
mov
jno
cwtl
dec
arpl
push
push
test
push
out
cmp
mov
insl
dec
adc
lcall
jb
cmpb
cld
imul
add
xor
add
and
xor
pop
data16
xchg
jbe
out
daa
push
data16
mov
fs
fsubrs
sbb
jmp
popf
shl
bound
add
or
ret
mov
and
out
and
xor
push
rorb
cmp
mov
xor
ret
aam
push
and
ljmp
shll
and
sbb
or
jp
xchg
jg
mov
data16
hlt
cmpsl
jb
gs
ret
dec
mov
mov
mov
rclb
ret
syscall
or
jnp
pop
jae
enter
xchg
adc
ljmp
sub
scas
mov
loop
into
mov
xchg
xor
dec
mov
xor
mov
xlat
filds
pop
cmp
rolb
pop
aam
fwait
inc
pusha
or
inc
pop
jo
and
mov
repnz
pop
das
aad
xchg
lahf
test
cmp
out
cmp
scas
not
sub
ja
or
push
jb
shl
or
mov
imul
xor
shl
sbb
pop
dec
and
sub
loope
mov
jecxz
aad
es
sbbb
adc
lcall
fdivp
mov
inc
ja
sub
add
es
jmp
ret
insl
inc
inc
adc
hlt
int
or
int3
pop
add
loopne
aaa
jbe
shlb
jne
out
adc
lcall
dec
xchg
fcoms
lea
push
add
jg
sub
fimull
int3
inc
ja
outsb
je
mov
int
sar
mov
rorl
clc
incl
jae
popa
pop
sbb
in
xchg
js
cmp
fsub
mull
mov
stos
push
mov
and
pop
inc
mov
or
jp
test
popa
mov
push
push
jo
inc
xchg
and
in
js
hlt
ljmp
push
cli
arpl
adc
loopne
adc
mov
test
addr16
aas
or
xor
pop
gs
out
xor
jae
add
lret
aam
fstp
mov
ss
pop
add
js
xor
cmp
call
mov
lods
sub
in
push
stos
mov
fiaddl
fmuls
adc
mov
sbb
fs
gs
imul
mov
or
push
in
mov
lahf
add
dec
lahf
ds
in
xchg
testb
add
pushf
popf
dec
fldenv
sbb
hlt
sti
pop
loopne
mov
mov
and
fwait
ds
and
movsl
imul
or
and
fdivr
jae
ja
adc
cld
cli
stos
sbb
dec
addr16
dec
jp
pop
jo
lods
cwtl
inc
pop
push
int
clc
lds
rcrb
ret
shll
inc
adc
fwait
stos
in
fdivs
sub
test
outsb
add
rolb
clc
sbb
adc
cmp
dec
jo
aas
mov
mov
hlt
pop
mov
cwtl
cmpsl
mov
test
dec
push
jae
pushf
in
fcmovbe
imul
negb
sub
aam
stos
aad
cld
add
fnsave
and
xlat
adc
adc
cltd
cltd
xor
lock
and
or
add
cld
mov
sbbl
mov
lods
and
ja
and
shrl
aaa
es
pop
pop
mov
cwtl
mov
jg
pop
mov
lods
inc
pop
shll
cmc
xor
pop
xor
pushf
fistpl
dec
lcall
sub
pop
lds
xorl
movsb
cld
loopne
lret
adc
je
inc
jae
adc
clc
xor
shll
sbb
enter
push
nop
lret
mov
dec
ret
dec
je
hlt
sub
or
subb
shll
in
xchg
cwtl
imul
jb
loop
cmc
sub
int
gs
sub
andb
push
ret
leave
loope
pop
push
repz
ljmp
test
psrld
jmp
popl
sti
mov
mov
test
and
xor
outsb
xor
mov
xlat
or
push
inc
sub
sbb
jnp
fwait
jo
inc
cmp
daa
mov
inc
mov
ret
xor
cltd
dec
xchg
ss
xchg
mov
js
push
sub
test
scas
lahf
cld
ret
adc
cmp
mov
pop
xor
out
push
call
xor
sub
xor
mov
cwtl
adc
sub
adc
dec
in
push
or
cmpsb
test
mov
inc
or
inc
adc
imul
mov
adc
aam
dec
cs
stc
jb
movsl
xchg
xor
inc
add
cmp
sti
mov
mov
lcall
ret
cs
cmp
inc
int
mov
fiadds
leave
or
fisubs
cmpsb
fdivr
sarb
and
cmpsl
or
lock
pop
pusha
sbb
mov
inc
xor
adc
mov
in
stc
pop
fucom
inc
xchg
mov
mov
shlb
xchg
xor
sub
fildl
filds
mov
xor
push
xchg
ficompl
jmp
lret
mov
adc
in
arpl
cld
pushf
dec
in
lds
mov
cmp
call
push
addb
repnz
mov
jmp
cmpsl
cs
into
hlt
ffree
adc
out
fisttpl
ss
mov
dec
pop
loop
sbb
inc
call
in
jb
outsb
jg
mov
rcrl
mov
mov
dec
xchg
in
jb
xor
push
popl
fisubs
xor
div
pop
movsl
add
std
mov
pop
repz
inc
pop
sub
ss
push
in
jmp
mov
sub
cmpsb
jb
lds
dec
jmp
movsl
mov
test
mov
in
sbb
jne
xchg
xchg
rclb
testb
cmpsb
iret
sbb
mov
jnp
popa
lea
or
ljmp
pop
loopne
pushf
test
clc
inc
movsl
outsb
lods
mull
in
daa
nop
notl
dec
mov
sarb
lds
scas
lods
aad
add
xchg
out
cmpsl
in
jne
dec
jnp
adc
pop
jl
cmp
push
std
or
jl
rolb
and
dec
mull
sti
ja
xchg
in
stc
outsl
adc
xor
fcomip
das
into
mov
cmp
aam
inc
mov
fcmovnb
mov
cmp
fnstsw
dec
and
icebp
je,pt
sbb
xchg
push
addr16
pop
ss
iret
pop
inc
pop
inc
loop
mov
out
mov
lds
jns
and
jns
enter
push
cmpl
cli
add
lret
adc
jno
mov
into
out
dec
mov
hlt
std
sbb
leave
fildl
lds
mov
mov
cmp
lea
pop
stos
cmpl
insb
iret
in
leave
add
xor
and
aad
sub
ret
jne
pop
in
jbe
push
inc
lret
int
cld
sbb
or
push
out
cmc
test
les
int3
xchg
ret
add
rorb
scas
add
pop
inc
dec
cmp
movups
jb
std
xlat
sbb
arpl
sub
pop
bnd
popf
or
jmp
mov
lods
push
lods
sarl
mov
xor
or
icebp
push
jge
jle
ds
sbb
sub
imul
sub
aas
pop
push
adc
push
shrl
sbb
lds
xchg
xchg
mov
test
inc
lret
popf
ficomps
adc
sbb
roll
cmpsb
xchg
add
jge
xchg
mov
mov
mov
js
lcall
shll
out
test
sub
hlt
xchg
adc
mov
ficoms
popf
inc
sti
rclb
test
pop
xchg
xchg
jb
jg
ljmp
lret
int3
push
je
push
out
jns
sahf
in
pop
mov
add
pop
cs
sub
arpl
xor
sub
lret
cmp
mov
movzwl
ds
or
push
stos
scas
lret
mov
jg
aaa
dec
popa
sbb
inc
mov
fwait
and
aaa
jbe
cld
dec
xchg
pop
jae
bound
cld
mov
lahf
inc
sbb
cmp
nop
lret
mov
ss
lcall
stos
std
pop
pop
sti
sub
stos
bnd
pushl
sbb
sahf
add
add
or
stos
mov
and
shrb
pop
mov
mov
and
aam
xor
ret
adcl
cmpsb
ficompl
add
lret
movsb
popl
out
and
mov
sbb
cmp
adc
daa
pop
mov
js
push
mov
jl
out
pop
loope
fidivrs
sbb
clc
movsb
jle
fwait
aaa
sub
and
cltd
je
cmp
mov
mov
mov
adc
aad
jno
stos
xchg
cwtl
push
add
repz
icebp
lahf
lock
insl
push
push
ret
jmp
lock
add
add
sub
ret
rcrb
das
mov
mov
mov
or
push
loopne
stos
scas
repnz
cmp
cmp
or
dec
shrb
dec
jl
dec
into
dec
push
or
call
cmp
sub
imul
mov
jg
fdivl
maxps
es
pop
lods
mov
call
inc
icebp
outsb
and
into
sbb
pop
icebp
push
addr16
jne
je
andl
cmpps
adc
push
dec
ljmp
mov
push
push
mov
mov
mov
dec
cmp
mov
mov
popf
fiadds
xor
call
xchg
cmp
adcl
add
pop
hlt
mov
outsl
mov
pop
test
sub
push
jle
pop
out
das
or
xor
xchg
into
lret
sarb
and
sbb
or
inc
mov
push
cwtl
sbb
daa
pop
rcr
xchg
hlt
pop
ret
jnp
cmp
rcr
and
fistl
shr
mov
mov
psrlw
cmpsb
mov
push
sub
pmullw
mov
and
pop
scas
idivl
mov
ljmp
out
aas
or
insl
cld
aad
jl
xor
jmp
je
imul
push
sub
int
ret
push
imul
xor
loop
mov
lods
fs
or
pop
scas
push
iret
xlat
jno
push
dec
mov
push
jae
inc
dec
adc
cli
pop
pop
mov
jge
shl
jge
xchg
enter
or
or
iret
popa
xor
mov
in
dec
xchg
dec
adc
outsl
shll
sbb
jb
adc
mov
xchg
sahf
or
cs
mov
jbe
shll
inc
xchg
lds
xchg
dec
xor
push
push
jp
bound
add
or
aas
sbb
jae
add
push
ja
loopne
mov
int3
test
mov
pop
scas
pop
dec
int3
jl
adc
shrb
mov
xlat
subl
jo
data16
push
out
push
jg
mov
imull
jecxz
call
stos
xchg
sahf
in
popf
pop
aam
or
stos
mov
loope
adc
clc
dec
ret
push
inc
dec
jo
cld
mov
dec
mov
mov
test
jge
cld
cmp
and
cmp
fbstp
inc
clc
cwtl
movsl
cmp
and
lock
ss
inc
out
push
popf
push
xchg
dec
rcrb
es
into
xor
xchg
fwait
jg
cltd
pop
sbb
das
out
rcl
xchg
mov
lock
cmp
cmp
lock
js
jo
rcr
dec
push
or
ja
cmp
ss
xor
push
call
int3
cmp
lahf
decl
mov
repnz
push
stc
mov
push
mov
cmp
adc
nop
sbbb
dec
out
xchg
nop
push
bound
cmp
sub
xchg
or
clc
jnp
lds
sbbl
test
in
div
out
cltd
push
push
add
mov
push
fs
add
popf
and
jle
pusha
xor
aas
xor
xor
cwtl
into
adc
repz
nop
test
imul
push
push
xchg
mov
lcall
jl
mov
out
jl
jl
setns
mov
cmpsl
frstor
sbb
cmpb
lahf
pop
and
enter
mov
inc
jno
inc
push
mov
aas
inc
push
sub
pop
lahf
push
xor
pop
mov
sbb
xor
jns
sbb
sub
rclb
mov
dec
mov
push
inc
push
mov
cld
add
add
ljmp
into
add
scas
popa
fnstenv
imul
hlt
add
jns
mov
stos
cltd
push
add
iret
pop
movl
jle
inc
jnp
call
xchg
or
shll
or
jecxz
je
jb
ret
fidivl
adc
ss
jg
lret
inc
dec
popa
cmp
push
mov
mov
sbb
lret
loopne
sarb
sarl
enter
pmaxsw
xchg
mov
out
mov
cli
xor
fnsave
loopne
stc
loopne
lods
shlb
mov
out
inc
out
pop
out
dec
add
xchg
inc
addr16
in
mov
aam
cs
lock
jne
lds
pop
jns
outsl
ljmp
mov
mov
movsb
jb
stos
rol
fwait
jnp
addr16
call
push
cmp
int
sub
lds
popa
push
xlat
fildll
repnz
hlt
sbb
aam
dec
xchg
or
icebp
shrl
movsb
orl
clc
imul
outsb
adc
inc
pop
dec
push
dec
fnsave
mov
aaa
inc
jmp
inc
das
jnp
loopne
fdivl
xchg
fstps
fiadds
popa
ss
aas
dec
stc
pop
xor
subb
push
or
pop
outsb
sbb
imulb
push
cmp
lcall
xchg
movl
ret
mov
repnz
xor
inc
mov
imul
test
imull
mov
jge
push
imul
jae
call
nop
xor
dec
dec
scas
clc
and
xor
jbe
cmpsb
out
jg
push
bound
jbe
test
or
jbe
loop
pop
aad
inc
je
stos
mov
mov
lods
pop
out
aam
jge
push
aam
js
mov
into
insb
imul
adc
sbb
out
nop
jmp
fnstcw
xor
xor
mov
add
out
sub
jns
imulb
shl
jl
std
xchg
test
sbb
jne
inc
and
sarb
repz
sarb
mov
ds
xchg
test
test
xchg
pop
cmp
xchg
adc
or
cmp
pop
insb
pop
lods
fcoms
jp
jo
mov
cld
cmc
stc
pop
mov
xchg
jo
pop
dec
jg
add
mov
pop
push
fldenv
in
pop
fsubs
mov
bound
ds
inc
ss
inc
xchg
pop
arpl
mov
mov
sbb
push
adc
ret
dec
mov
lock
xchg
test
add
xchg
cmp
sbb
adc
movl
pop
mov
insb
mov
shll
cmp
scas
add
push
push
sub
mov
inc
fcoms
bound
push
ja
rcrb
sbb
cmp
jnp
es
and
jge
or
nop
push
jne
stc
pop
sub
sahf
insl
jle
es
mov
mov
andb
das
je
mov
xor
mov
aaa
adc
sahf
cmp
sub
cltd
call
add
xor
mov
enter
push
inc
pop
enter
mov
jb
or
and
and
sti
mov
dec
imul
negb
in
xchg
iret
hlt
sub
adc
cmpsb
scas
test
gs
xlat
testb
cltd
lret
test
pusha
pmaxsw
mov
xor
pop
add
jp
mov
adcl
aam
sub
in
adc
shll
mov
bound
shll
pop
inc
xorb
mov
rcrb
sarb
xchg
mov
pop
or
mov
or
addr16
pop
lods
mov
mov
pop
jo
or
pop
xor
imul
stos
cmp
dec
arpl
shll
jo
mov
sbb
test
test
jo
adc
lods
sahf
mov
dec
push
aas
ret
bound
jns
ja
dec
pop
xchg
or
stos
inc
push
xor
fldl
xchg
shlb
push
sub
sub
lock
sbb
mov
mov
cld
push
pushf
or
outsb
lock
fwait
xor
push
sub
mov
lea
dec
rorb
sub
adc
or
outsl
push
dec
rcr
xchg
scas
scas
pop
sbb
mov
test
outsb
add
outsl
outsb
cld
cmc
mov
scas
cmp
lock
pop
dec
arpl
mov
lret
rcl
jmp
dec
fwait
sbb
dec
fnsave
leave
popa
pop
sbb
xor
push
push
mov
out
outsb
aam
inc
push
ffreep
push
leave
sbb
fs
pop
movsl
test
movsl
out
mov
out
xchg
mov
jns
int
sti
shlb
and
pop
mov
arpl
icebp
mov
mov
xchg
sbb
dec
icebp
notb
mov
ja
es
aam
adc
ljmp
adc
lock
fucomi
sub
mov
jecxz
adc
sbb
dec
and
push
ljmp
negl
dec
dec
in
fmul
inc
jbe
insl
into
loop
in
xlat
xor
fcoms
add
jp
cmovne
mov
and
movsl
stc
sbb
pop
fwait
jge
repz
jne
push
dec
sub
cltd
adc
rcll
addr16
jnp
in
popf
adc
sub
sub
repz
js
sbbl
and
lret
fsubrs
adc
jmp
ljmp
pushf
out
stos
aam
adcl
addl
shll
loopne
cmp
xchg
std
and
insl
or
mov
inc
jo
data16
data16
jl
pop
icebp
shrb
aas
or
mov
lds
jns
sub
cmpsb
xlat
ds
mov
and
fdivrl
jmp
push
in
out
in
out
mov
cwtl
shlb
mov
pop
stc
daa
lahf
mov
xchg
mov
in
int3
jl
push
xlat
jno
subl
lods
pop
sbb
sbb
pop
enter
jecxz
pop
ret
adc
cmp
cmp
int
mov
add
outsb
into
pushf
xor
mov
scas
aad
test
inc
push
jno
cli
rcrl
roll
xor
mov
repnz
shll
xor
out
ret
int3
mov
xor
inc
add
adc
xor
jmp
push
cli
test
fidivs
shl
push
int3
or
out
mov
jno
mov
pop
pop
jne
fidivl
xor
mov
sbb
adc
inc
cmc
movsl
fldcw
cmpsb
aam
in
pop
in
mov
sbb
mov
loope
xchg
cmp
sub
xor
dec
inc
xchg
decl
or
adc
cld
in
lret
push
lahf
lret
psubq
lret
cmpsl
jae
xchg
cmp
sub
mov
movsb
bound
imul
add
out
cmp
seta
int3
cwtl
mov
or
dec
jno
sbb
in
testb
test
addl
adc
fsubl
arpl
dec
add
or
rcll
add
mov
js
sti
sub
push
adc
mov
int3
sbb
ret
pop
std
cmc
xchg
push
mov
sub
ret
pop
mov
ret
pusha
enter
mov
jmp
add
movsb
stc
mov
out
push
arpl
or
sub
fs
adc
or
daa
fprem
repnz
pop
imul
fldpi
test
cmp
jge
inc
daa
and
push
inc
push
movsl
out
dec
jge
mov
dec
loope
jns
pusha
aaa
mov
cmpsb
or
aas
push
fmuls
test
push
xchg
lock
adc
mov
call
pop
pop
mov
mov
seta
add
rol
mov
fcomps
popf
mov
rcrl
push
xchg
pusha
push
cwtl
jbe
add
fildl
push
stos
int
es
xor
imul
aam
cmp
cmpsb
movsl
pusha
shlb
push
out
fnstsw
fs
mov
and
fldl
sbb
mov
sbb
enter
fidivs
ss
out
out
mov
jno
cmpsb
fiaddl
out
mov
imul
and
adc
in
dec
and
iret
jg
mov
inc
adc
jne
scas
pop
mov
insl
jae
push
mov
push
pop
sub
cltd
xchg
aaa
call
or
sub
aam
sarb
mov
fistps
in
imul
insl
jp
je
movsl
daa
cmp
divb
push
dec
xorl
sbb
adc
add
faddl
cmpsb
mov
rorl
stos
std
cmp
sbb
fmull
nop
clc
sti
test
mov
mov
stc
iret
mov
out
jne
xor
cmp
test
decb
inc
shrl
dec
inc
cmp
jecxz
push
push
xchg
orb
push
cltd
jge
lea
flds
test
dec
data16
sahf
cltd
jp
sub
icebp
cwtl
cmp
cwtl
pop
ficoms
mov
dec
addr16
mulb
sahf
rcrl
insl
out
xor
std
int3
shll
push
pop
cmp
cmp
repz
sbb
mov
insb
push
or
cs
sarl
pop
dec
pop
bound
andl
test
jle
arpl
lcall
mov
or
mul
out
movsb
bound
push
aam
jae
stos
sbb
pushf
aas
and
push
mov
andb
inc
xchg
and
sarl
shrl
rcrb
mov
mov
fimuls
xchg
sbb
xor
mov
dec
in
adc
sbb
mov
push
sahf
test
and
jb
scas
sbb
mov
cmp
mov
shlb
xchg
fstpt
es
enter
punpcklwd
fnstcw
and
sahf
mov
cmp
or
out
lods
jae
stc
push
icebp
pop
sbb
lahf
cld
xchg
popa
pop
bound
sub
cmc
fimuls
inc
jl
movsl
push
jb
dec
push
xchg
icebp
mov
inc
cmp
and
std
sbb
mov
outsl
cs
jb
mov
push
imul
jecxz
push
in
pushf
cmpsb
gs
add
movsb
loopne
daa
xor
xor
gs
jbe
test
in
mov
xor
mov
cwtl
sbb
pop
and
packuswb
cltd
jne
jns
je
iret
mov
bound
aad
iret
add
push
mov
cmp
dec
mov
aam
int3
out
insl
jae
cmp
insl
adc
mov
in
ret
lret
inc
iret
push
jle
inc
flds
add
mov
dec
mov
insl
pop
sbb
pop
sub
jns
lret
push
cmp
outsb
lahf
xorl
in
stc
adc
xchg
sbb
xchg
enter
and
jbe
gs
jb
add
test
push
arpl
pop
roll
push
sbbb
int
outsb
pop
adc
jbe
sbb
test
push
inc
mov
nop
sbb
cmp
cli
cmp
stc
std
push
test
dec
lret
lret
cmp
outsl
es
lods
andb
mov
mov
adcb
xlat
div
dec
mov
xchg
add
add
in
jle
pop
jp
dec
add
cmp
loope
shll
or
sahf
mov
andl
in
cli
andl
or
push
lahf
xchg
out
pop
jmp
imul
hlt
out
cmp
sub
push
push
mov
imul
add
push
jle
or
out
insb
pop
push
aad
jne
lret
lds
fwait
sub
xchg
iret
inc
adc
lret
bound
daa
enter
movsl
lock
push
sbb
in
lods
dec
insl
push
insl
test
in
cwtl
or
mov
cmp
dec
xchg
fisubs
andl
out
jnp
xchg
mov
mov
cmp
jp
gs
into
jle
push
test
inc
in
shll
ficompl
ds
cmc
jne
hlt
mov
test
push
and
mov
sbb
test
icebp
mov
xchg
and
push
daa
xlat
and
sahf
xchg
fmulp
lcall
xor
sahf
mov
mov
les
cmpb
leave
mov
xor
test
jp
sbb
inc
test
jbe
and
pop
add
sbb
push
out
push
lahf
cmp
jnp
jg
push
mov
push
add
addr16
mov
sub
lods
push
fmuls
lds
jo
dec
int3
push
pop
or
cli
repnz
rcll
adc
das
or
mov
popf
test
jne
mov
dec
sub
pop
cs
je
pop
inc
mov
repnz
aad
je
mov
insb
push
mov
xor
mov
fbld
add
pusha
fwait
ds
popa
lods
into
adc
inc
notl
sbb
flds
mov
and
sbb
enter
push
je
fwait
pusha
mov
lahf
push
popf
lret
xorb
jno,pn
pushf
scas
pop
mov
inc
fcomip
mov
xor
sti
ffreep
dec
stos
fadds
fiaddl
xor
adc
jl
mov
out
mov
mov
shl
sub
add
lahf
jmp
or
aam
inc
jecxz
mov
sub
scas
das
test
adc
mov
mov
xchg
and
adc
mov
movsl
or
sbb
imul
pop
xor
sbb
and
sub
repz
mov
sub
loopne
inc
pop
or
mov
sub
loop
leave
fdivr
lea
adc
fldcw
or
xchg
adc
inc
dec
fwait
pop
popa
and
cltd
dec
push
add
insb
mov
in
xchg
and
cmp
fdivs
jb
ljmp
dec
mov
push
xor
jo
cmp
arpl
or
mov
mov
jb
cmpsl
xor
je
mov
sbb
imul
aaa
cmc
jp
data16
mov
jb
popf
mov
shrb
push
mov
inc
je
loope
scas
xchg
sub
jns
aam
lea
pop
popa
sahf
shlb
pop
xor
cmp
stos
enter
mov
lds
sbb
scas
cmp
mov
xchg
push
xchg
sbb
daa
push
cli
adc
outsl
mov
lods
dec
mov
clc
dec
imul
addr16
mov
sbb
sbb
int3
xlat
dec
mov
xor
xchg
mov
out
jne
mov
xchg
daa
paddsw
push
lds
je
sub
sub
movsb
inc
sbb
int3
push
or
cmp
bound
repz
lds
cmp
jge
adcb
inc
fdiv
jns
lret
lock
cmpb
cld
sbb
scas
fucomip
sbb
in
xor
ret
xchg
aas
pusha
pop
das
sub
stos
push
pop
cmpsb
movsl
in
nop
sbb
or
adc
xchg
int
xor
inc
and
sbb
imul
sarl
notl
sbb
outsl
add
rcrl
lock
mov
xchg
inc
dec
mov
dec
xor
sub
rol
mov
sbb
mov
jns
dec
out
rcrl
sub
cmp
lret
lahf
adcl
leave
fidivrl
ljmp
inc
xor
xchg
aad
mov
ss
js
jp
or
xchg
in
jnp
popl
jecxz
dec
imull
dec
ljmp
cmp
sbb
mov
shl
mov
inc
ljmp
mov
and
fmul
fs
mov
add
clc
pop
mov
in
adc
pop
mov
mov
out
sahf
sbb
test
fisubl
pusha
xor
jbe
cmp
scas
fwait
pop
cmp
notl
cmp
int3
out
mull
cmp
aad
faddl
loope
int
and
aas
jp
cmpsl
jmp
lods
mov
leave
jns
popa
pop
cwtl
cmp
dec
popf
jge
sbb
mov
cvttps2pi
in
sbb
adc
jb
push
enter
jg
js
sub
add
mov
push
addr16
add
je
cld
aad
outsl
sahf
or
mov
je
imul
movsl
lods
fdivl
dec
cmp
push
pop
inc
jbe
and
fstpl
rclb
addr16
mov
fcomps
and
jge
pop
into
fimull
adc
dec
mov
pop
pop
fwait
scas
push
fcmovne
test
push
adc
lods
arpl
jecxz
push
in
and
or
andb
sbb
and
pop
fs
fsub
das
push
dec
mov
sbb
fwait
pop
jns
std
repz
lods
repz
lahf
stos
jns
add
mov
mov
push
out
aad
rol
shlb
xchg
test
call
cmp
mov
xchg
push
xor
pop
cld
inc
insl
sub
xor
fwait
pop
insl
cli
fwait
mov
inc
xchg
jge
xor
and
xlat
jp
jbe
xor
fdivs
rcl
jmp
mov
sbb
jp
pop
adc
out
inc
pop
jbe
stos
lcall
loope
push
xor
imull
sti
push
mov
lahf
jge
pop
or
decb
scas
pop
dec
pop
repnz
hlt
setp
repnz
mov
in
push
pop
sti
shl
ds
sbb
mov
and
pop
lret
adc
and
mov
imul
mov
iret
lods
push
ret
cld
cmc
out
aaa
arpl
cmp
mov
cmp
insb
adc
out
inc
dec
pusha
xchg
gs
hlt
lods
pop
outsb
mov
outsl
cmpsl
loopne
out
fs
cmpsl
adc
jno
inc
sub
fmull
outsl
or
dec
cmc
add
test
mov
jge
lret
lods
cld
mov
fstpt
clc
ret
jns
cmp
enter
lret
repz
test
adc
jl
mov
out
ret
mov
push
insb
subb
xor
sub
orl
cmpsl
mov
int3
pop
xchg
mov
mov
pop
or
in
mov
in
push
push
xor
pop
push
jnp
bound
xchg
xor
jl
cltd
push
xor
popa
fimuls
cmp
and
and
orl
pop
xchg
cmc
insb
adc
shlb
stos
cli
lea
pop
sub
or
and
xor
int3
into
pusha
in
sub
adcb
movsb
mov
cmp
ret
pop
arpl
push
and
cmpsb
cmp
sub
inc
jl
ret
or
outsb
inc
test
push
add
out
or
fimuls
jb
ret
jmp
push
adc
mov
jbe
shl
test
push
push
sub
or
gs
imul
fs
jl
xchg
mov
mov
movsb
pop
pusha
adc
ret
mull
adc
gs
dec
shrl
sbb
sub
adcb
sub
pushf
inc
das
stos
add
mov
cs
iret
rolb
fbstp
pop
das
ret
adc
fdivrl
je
aad
popa
aas
shl
mov
stc
dec
mov
aas
adc
les
movsb
xor
in
gs
pusha
mov
sti
mov
or
cmp
push
divb
shl
jb
dec
pop
cli
pop
or
mov
push
sub
movsl
dec
loope
pop
decl
into
ja
aas
in
rcl
adc
nop
dec
sub
xchg
sti
and
push
adc
push
push
or
push
cwtl
mov
push
and
ljmp
push
negl
in
inc
pop
and
inc
sbb
dec
out
mov
adc
js
dec
xor
xor
icebp
sbbl
jmp
jae
outsl
adc
add
sub
loopne
push
pop
mov
sbb
sub
lods
cwtl
cs
movsb
cmp
movsl
iret
push
cmp
xor
pop
mov
pop
stos
push
dec
in
pop
int
repnz
daa
dec
mov
pop
add
or
fstpt
jbe
outsb
divl
sub
cltd
lock
fisubl
sbb
rcrw
lret
out
rclb
pop
jno
push
sar
gs
sbb
jo
int3
pop
outsb
xchg
xor
sub
cmp
cld
cmp
popf
dec
jg
imull
jmp
sub
in
lea
add
cli
xor
addr16
cwtl
jecxz
rcll
in
gs
sub
test
iret
ja
jne
ljmp
cmp
daa
mov
jb
test
jno
pop
enter
repz
jne
inc
nop
adc
pusha
addr16
in
imul
push
aaa
or
daa
xor
and
mov
add
cmc
fidivs
xor
mov
inc
sar
shlb
jne
jg
pop
lcall
sbb
subb
in
sbb
fistpll
or
cmp
pop
data16
push
jl
add
stos
loopne
ret
jg
std
adc
add
imul
pop
js
inc
xchg
and
lods
iret
dec
les
mov
rcrl
xor
out
jmp
inc
jb
xor
xor
mov
addr16
and
pop
sarl
dec
adc
dec
out
lods
jb
mov
xchg
bound
push
mov
sahf
test
xchg
leave
or
mov
mov
or
push
pop
mov
add
repz
mov
repnz
sbb
jp
insb
stos
sbbb
fcoml
cmp
das
or
lds
test
movsb
inc
bound
js
mov
sub
lret
xchg
fmuls
lea
jl
lea
stos
cmp
pop
pop
push
fldenv
sbb
mov
in
mov
and
push
and
shrl
sbb
imul
enter
dec
jbe
fcmovbe
inc
pop
xchg
or
aam
pusha
cmp
loop
div
andl
les
xchg
mov
mov
cs
subb
jb
inc
push
imul
loopne
imul
movsb
mov
push
push
aam
test
xchg
sub
cmpsl
jbe
out
add
sub
or
int
xchg
lea
pop
xlat
es
inc
dec
jne
pushf
mov
cwtl
lea
xchg
rcl
add
sbb
sub
test
add
repz
inc
in
xchg
jne
loope
lods
andl
outsl
sti
and
movsl
mov
jg
call
sub
lret
inc
je
insl
popf
out
pop
inc
mov
in
movlps
out
dec
test
scas
btl
fistl
das
sub
xchg
pop
fildl
mov
fdivl
shr
cltd
arpl
adc
mov
rcll
mov
jmp
enter
cmp
pop
mov
arpl
xchg
mov
aam
lock
iret
lahf
inc
mov
ljmp
xor
std
xchg
cmp
add
pop
xor
push
add
test
mov
cs
xor
inc
jbe
jns
cs
xchg
cmc
shll
sbb
pop
mov
xchg
stos
loopne
pushf
cwtl
jae
xchg
mov
mov
jne
xabort
negb
pop
push
pop
in
cmp
adc
movsl
push
lds
std
shlb
mov
lahf
push
iret
xor
xchg
mov
cli
sub
mov
aas
mov
jle
test
test
arpl
cltd
insl
jp
mov
and
mov
push
mov
push
mov
lea
cs
cwtl
xchg
push
lcall
xor
jl
gs
stc
popa
push
rclb
enter
jno
add
inc
sbb
mov
repz
rol
fcomps
enter
jb
xchg
mov
ljmp
sbb
lods
dec
mov
insl
scas
push
dec
pop
mov
jmp
nop
lret
aaa
or
clc
jno
xor
lret
inc
pop
out
iret
sbb
pop
popf
rclb
mov
ficoml
push
push
rcrl
lret
xor
push
iret
idiv
adc
and
mov
lock
lahf
mov
mov
push
pop
cmp
dec
scas
mov
cltd
pop
dec
sub
cmp
lods
loop
sahf
insl
aad
test
dec
fldenv
pop
mov
xor
out
ljmp
jl
push
mov
call
jl
push
loop
pusha
xchg
mov
xor
hlt
add
mov
insb
dec
xor
dec
cmpb
or
inc
sbb
mov
cwtl
xchg
pop
sbb
cmp
daa
enter
fadd
iret
dec
pop
sbb
lock
ds
cmp
push
cmp
inc
push
lods
and
cli
lods
pop
jne
cs
and
fiaddl
popa
mov
jbe
enter
in
pushf
xchg
cmp
adc
or
in
test
mov
lahf
push
loop
cmpsb
cs
stc
into
cmp
mov
cltd
cmp
mov
sbb
mov
cmp
adc
sub
jns
test
popf
xor
dec
movsl
ljmp
add
pop
das
in
cmpsb
add
xchg
and
xchg
aas
arpl
outsb
in
lds
aas
stc
or
add
or
in
inc
xchg
fisubs
mov
int3
in
or
dec
nop
jge
out
ficomps
loop
iret
sbb
jmp
lods
andb
imul
pop
clc
lcall
add
gs
push
scas
push
inc
pop
movsb
and
or
imul
in
fldt
pushl
shl
push
cmp
insb
add
and
dec
dec
pop
ret
cs
cmp
lds
cmp
mov
jns
inc
pop
mov
outsl
push
or
repz
fcmovne
test
sbb
cld
int3
add
aaa
pop
xchg
ds
adc
xchg
mov
sbb
fstpt
jmp
xchg
gs
sbb
xchg
xchg
pop
cld
shlb
dec
cmp
ficoms
inc
and
adc
mov
in
addr16
ror
mov
sbb
ljmp
xchg
pop
dec
jae
sub
insl
lcall
dec
xchg
and
xchg
pop
ret
lds
or
inc
pop
lds
es
hlt
bound
inc
insl
push
nop
sbb
in
int
and
push
push
in
outsl
fadd
adc
sbb
test
out
rcrb
pop
and
jle
dec
imul
loop
std
popf
cmc
cld
jb
repnz
xchg
cmp
and
leave
jecxz
mov
cmpsb
fidivl
mov
popf
jbe
jb
fbld
subb
mov
pushf
sbb
sub
push
fdivrl
add
cmp
push
jl
dec
push
xchg
jmp
mov
popf
daa
jecxz
jb
rolb
adc
lret
xchg
add
fsts
test
xchg
push
imul
adc
mov
inc
arpl
mov
testl
fisttpl
ja
shl
lret
cmpsl
add
cs
pusha
inc
ret
mov
daa
mov
xor
shlb
inc
sbb
mov
scas
lahf
cmp
mov
xor
push
or
iret
adc
jge
mov
sbb
movsl
mov
es
test
scas
add
jns
aam
iret
cmp
push
repz
in
jle
cltd
sub
adc
icebp
mov
mov
lret
iret
adc
push
push
xchg
push
in
push
hlt
mov
push
into
push
push
sub
mov
pusha
push
in
popf
sub
out
out
repnz
in
das
mov
jne
jnp
mov
or
xor
pushf
cmp
sub
loop
out
jp
out
in
mov
fs
cmp
movsl
jnp
mov
testb
push
add
pop
inc
rcrb
stc
adc
dec
mov
or
cmpsb
adc
dec
in
gs
push
je
xor
inc
ss
out
js
jg
out
cmp
cmc
sbb
xor
inc
leave
mov
iret
cmp
fidivl
mov
ja
add
decl
push
lods
setb
clc
pusha
push
cmp
push
sti
xor
out
fnstenv
mov
pop
xchg
jle
movsl
je
cli
mov
xchg
sbb
in
fwait
loop
imul
imul
cmc
cmp
cmp
sub
sbb
push
fistps
out
testl
lret
pop
mov
pop
in
xlat
sti
fucomp
fwait
sti
cmp
loope
dec
in
aaa
dec
mov
xchg
ss
xchg
aam
lcall
xlat
movl
stos
jb
sub
inc
mov
dec
mov
jecxz
pop
jnp
pop
or
aam
add
stos
pop
insl
ret
movsl
ja
dec
sub
and
pusha
jns
ret
or
inc
test
rorb
push
jg
out
int3
xor
outsl
in
xchg
enter
add
rolb
adc
add
mov
cmp
xchg
or
in
add
shr
add
fcmovb
xor
inc
add
mov
jns
pop
mov
mov
add
xlat
in
mov
imul
mov
add
and
pop
fsincos
ds
movsb
into
push
cmpsl
lods
mov
mov
sub
add
orb
dec
aam
mov
clc
in
pop
popf
adcb
lcall
jp
daa
cmpsb
and
mov
mov
std
sti
decb
push
pop
push
cmp
dec
dec
push
mov
data16
jg
shl
test
adc
dec
mov
push
rol
test
imul
pop
xchg
adc
push
add
push
fsubrl
and
push
aaa
add
mov
and
int
inc
cld
out
shll
xchg
add
out
jle,pt
inc
xor
mov
mov
loope
das
and
mov
int3
mov
xor
cmc
cmpsl
sbb
insl
out
jnp
adc
sbb
arpl
stc
sub
int3
sub
and
jb
cmp
xor
je
or
outsb
in
push
or
add
xchg
and
lods
cli
add
inc
repz
adc
cmpsb
and
jge
pop
cmpsl
sbb
jnp
int
push
les
je
loope
jo
out
fwait
scas
sbb
jg
push
ds
pop
add
dec
or
sub
arpl
fistl
sahf
into
in
jg
push
pop
repnz
push
adc
fs
js
and
mov
mov
aaa
sbb
pop
out
imul
std
js
dec
dec
repnz
or
enter
sbb
repnz
and
cmc
push
adc
add
lret
mov
xchg
push
xchg
ss
aad
inc
inc
mov
pop
ljmp
jbe
scas
in
cmp
ret
jge
pop
cmp
dec
xor
cmp
lahf
pop
xchg
sar
ja
adc
xor
adc
cmp
cli
xor
push
xchg
movsl
adc
xor
pop
cmpsb
xor
inc
push
cmovl
cmp
cmp
push
nop
or
stos
aam
adc
jae
pop
adc
mov
mov
sub
mov
out
sub
ror
xrelease
push
cmpsl
imul
das
rorb
mov
sti
and
xchg
int
lahf
dec
mov
leave
xchg
jnp
xchg
out
cmp
in
scas
std
mov
enter
mov
jns
xchg
push
loopne
divl
mov
movsl
inc
imul
adc
cli
or
inc
cmp
lods
mov
test
mov
add
addr16
pop
mov
sbb
mov
int3
jae
or
mov
push
mov
mov
fucom
inc
jo
adc
aas
xor
or
stc
or
sbb
inc
jbe
cmp
sbb
cmp
jp
test
leave
js
dec
ss
das
add
clc
repz
int3
xchg
sub
and
out
xor
subb
push
xlat
gs
xlat
mov
fisubrl
adc
jno
mov
and
fs
jg
push
mov
dec
xor
outsl
fs
stos
inc
imul
dec
iret
sbb
or
mov
sbb
xor
loop
movaps
and
testb
add
icebp
adc
loopne
xor
es
sbb
jle
adc
cmpsl
pop
mov
test
int3
mov
repz
sarb
dec
inc
out
fsubrl
mov
ja
dec
mov
push
stc
es
lock
movsl
adc
daa
aam
dec
or
clc
in
or
cmc
push
adc
inc
fistpl
cmpsb
add
mov
xor
and
push
jns
mov
push
sbb
xchg
xchg
loopne
fs
imul
je
movsl
mov
mov
jg
out
je
test
xor
je
mov
or
sbb
and
jno
sbb
push
in
insl
sbb
mov
sub
in
rclb
shlb
or
fs
jb
sub
pop
mov
mov
add
popa
xor
scas
or
mov
and
mov
xchg
pop
aaa
popf
cmp
or
adc
mov
mov
pop
dec
popa
cmp
jb
fsubl
ljmp
daa
inc
and
mov
push
mov
rcrb
mov
clc
in
int3
les
lcall
mov
mov
fistpl
and
stc
mov
psrlq
push
add
or
lock
mov
mov
into
cmp
xor
jnp
mov
sbb
lcall
lock
das
ss
add
test
in
adc
fists
dec
fisttps
mov
dec
or
int
pop
mov
push
or
in
cld
mov
mov
sbb
pushf
arpl
jae
jmp
nop
jge
mov
push
aaa
fwait
pop
xchg
js
stos
and
push
sahf
jecxz
insl
cwtl
pop
pop
cmpsb
cli
adc
xchg
cmp
pop
out
ja
lock
jg
push
cmpsl
add
adc
push
in
nop
mov
lret
ficoml
aas
arpl
stos
jl
loop
lods
xor
inc
adc
lds
sti
rcrl
push
jecxz
xor
push
jnp
adc
sahf
push
pop
xchg
ljmp
push
lock
cmpb
xor
sub
ss
push
pop
mov
lea
mov
into
mov
ds
sub
xchg
mov
jmp
pop
je
mov
sbb
out
jb
mov
mov
or
push
dec
xchg
orl
insb
out
pop
imul
push
cmp
lods
mov
pop
inc
mov
xlat
mov
enter
mov
hlt
cmpsl
mov
out
add
jbe
insl
push
and
sarl
fwait
js
rorl
inc
mov
jle
and
pop
dec
cmc
frstpm(287
hlt
sub
popf
stos
inc
mov
push
mov
add
inc
rorb
push
test
cld
addr16
icebp
pop
add
xchg
popf
xchg
or
bnd
cmp
movsb
mov
cmp
dec
test
mov
sub
or
add
lea
jae
and
inc
cwtl
lret
ret
out
stc
and
sbb
cmp
or
jmp
dec
jns
or
and
insl
xchg
loope
inc
inc
sbb
out
inc
adc
nop
sti
fcmovb
mov
inc
mov
outsl
lds
aas
mov
adc
xchg
in
mov
imul
bound
clc
sub
test
cmp
pop
xor
push
cwtl
jle
mov
in
cwtl
lcall
sahf
mov
out
adcb
mov
jb
or
pushf
mov
adc
and
adc
sti
jno
pop
dec
add
les
call
out
pop
in
jns
loope
out
inc
pop
jno
jb
test
repnz
je
inc
aas
mov
pop
mov
xor
dec
mov
add
sub
jno
in
fsubrs
inc
cltd
jno
or
cmc
jne
adc
lea
xor
sbb
faddl
scas
sbb
push
pop
lods
inc
pop
xchg
push
in
loop
jns
xor
js
lahf
jbe
sbb
in
mov
loop
jmp
push
filds
sub
mov
mov
jp
cmp
push
ds
ret
iret
mov
inc
xchg
dec
ljmp
out
cmpsb
push
gs
or
or
fistpll
dec
push
inc
jae
repnz
test
add
in
bound
fnstenv
jnp
lock
pop
push
add
xchg
dec
or
idiv
cli
inc
jb
inc
xor
lds
sahf
xchg
xor
add
mov
shr
pushaw
mov
adcl
inc
push
mov
push
push
xchg
push
inc
rorb
mov
adc
test
data16
adc
andb
lock
lcall
into
cli
mov
lods
and
movsl
cltd
fwait
in
fdivl
mov
out
clc
sub
es
shrb
adc
daa
adc
mov
pop
pop
push
sub
sbb
imul
mov
fcoms
xlat
test
bt
xchg
rcll
or
push
leave
dec
adc
pop
push
xor
pusha
xor
jmp
xchg
popf
lret
mov
push
in
loope
mov
inc
jge
mov
mov
or
insb
xor
cmpsb
aam
xlat
fldl
jp
js
fstps
and
pop
jge
popf
and
sub
pop
sub
es
out
xchg
fadds
call
push
popa
add
cld
mov
cmpsl
out
jecxz
mov
in
sbb
je
inc
hlt
fcmovnu
testb
push
cmpsl
mov
cmp
and
iret
cmp
test
sub
mov
jne
orl
fdivl
inc
inc
add
jecxz
popf
aas
dec
sub
xor
lds
ret
sub
dec
js
dec
add
aad
dec
mov
scas
aas
pop
pop
xchg
shll
loope
push
pop
enter
mov
mov
jmp
ds
icebp
dec
pop
add
dec
jbe
sub
mov
push
sub
repz
mov
mov
shlb
mov
and
popa
and
movsb
add
out
sbb
es
je
imul
pop
push
mov
and
or
adc
leave
in
stc
push
stos
negl
dec
cmpl
push
push
aad
mov
mov
sahf
rcrl
jbe
inc
movsl
adc
mov
inc
jns
add
aaa
mov
sbb
mov
xchg
outsb
in
xor
fsubs
fstp
pop
ret
jge
inc
ljmp
andb
sti
add
xchg
sub
insl
xchg
pop
jge
xor
rcrl
pusha
adc
aam
repz
addl
cwtl
cli
pop
push
cmp
leave
into
lret
push
lar
aaa
in
out
mov
movsl
cmp
sbb
data16
and
xchg
xor
shl
ljmp
out
mov
cmp
mov
mov
int3
add
jo
mov
inc
iret
adc
aaa
and
inc
out
ja
dec
mov
inc
mov
cli
test
mov
mov
filds
icebp
movsb
les
pop
js
adc
enter
jge
mov
insl
jnp
push
insl
bound
sahf
outsl
mov
pusha
dec
jnp,pt
dec
iret
cmp
scas
fstpl
xchg
jl
jmp
pop
mov
jecxz
loop
pop
ja
jp
mov
and
dec
aas
insb
or
test
ret
fs
pop
mov
push
jecxz
mov
popl
sahf
cs
lcall
adc
cmpsb
sub
dec
in
hlt
cld
cmpl
jecxz
xor
lret
sbb
jns
daa
rcrl
sahf
add
adcb
sti
fildll
sub
dec
fs
shrl
lea
rorb
sti
xchg
loop
xor
sub
push
push
outsl
fwait
shl
imul
stc
mov
sbb
aaa
pop
jg
add
pop
js
or
ds
andb
mov
loop
mov
mov
in
fistl
ret
dec
movsl
cwtl
js
pop
dec
mov
dec
xchg
add
ss
mov
jg
jne
std
and
mov
xchg
stos
int3
testb
aas
mov
push
cmp
mov
lods
adc
mov
sar
push
xchg
test
out
seto
sbb
cmp
cli
popa
cmpl
arpl
push
push
or
push
sbb
lret
stc
mov
mov
cmp
scas
push
lds
mov
sbb
je
shlb
popa
out
out
dec
cmc
push
add
inc
stc
xchg
mov
shrb
jo
dec
dec
inc
aaa
jecxz
jge
loope
mov
imul
negl
js
or
adc
sbb
xor
test
faddl
mov
dec
cltd
mov
pop
cwtl
sbb
mov
les
and
push
cmpsl
shr
lods
lret
cmp
mov
notl
call
stc
xor
mov
adc
dec
or
lods
cmpsl
ffreep
fisubs
stos
fcoml
shlb
movsb
push
aaa
loopne
ret
dec
stc
mov
sahf
pop
sbb
add
add
sbb
or
cmp
into
xchg
and
xchg
add
fsubl
cmp
popf
mov
imul
das
les
jne
jae
sbbl
dec
fidivs
or
fdivl
mov
lds
mov
fcomip
dec
repnz
push
in
inc
mov
mov
das
jns
nop
in
xchg
cmp
out
js
sub
fsub
xchg
sbb
cmp
call
mov
push
lock
mov
mov
cltd
jno
pop
pop
cld
adc
in
dec
loopne
adc
mov
sub
jle
insl
push
mov
push
cmc
ret
add
sub
test
pop
dec
mov
and
ret
pop
testl
xchg
popa
sub
xor
add
fmull
fsubr
dec
push
mov
dec
adc
pop
out
adc
ret
aam
sub
mov
repnz
lea
movsl
xor
cmpsb
jne
int
sub
cmc
cmpsl
mov
sbb
lea
jno
in
dec
leave
pop
rcr
aad
cmp
stc
xor
popf
out
loop
shrb
imul
dec
and
push
xchg
jnp
xor
pop
jne
xor
int3
ds
daa
pop
rclb
mov
fldl
mov
fldcw
sub
roll
pop
ljmp
cs
scas
pop
mov
or
and
stc
sti
cmp
jbe
mov
fmul
mov
ret
lea
pop
scas
and
cmp
fildll
in
push
mov
stos
bound
lods
ljmp
ljmp
sub
sarl
int
testl
pop
test
ret
stos
cmp
rorb
icebp
pop
hlt
in
adc
mov
mov
cmp
out
cmp
xchg
mov
aam
sahf
pop
push
inc
jle
pop
adc
ds
dec
stc
cs
xor
inc
addr16
jne
sub
dec
loop
cmp
mov
inc
mov
scas
movsl
in
popf
dec
cmpsl
imul
adc
in
pop
and
sahf
rcll
add
mov
es
inc
sbb
pusha
pusha
mov
add
out
sub
fnsave
add
lcall
sub
lods
jmp
mov
icebp
inc
mov
shll
nop
stos
sbb
lea
sbb
movsb
pop
mov
and
imul
lea
dec
jecxz
loopne
cld
fstl
inc
rorb
aas
mov
lret
ret
ficompl
mov
inc
or
pop
xor
sbb
sarl
fistpl
pop
adc
mov
sbb
xor
pushf
mov
fdivp
std
hlt
and
xchg
aam
mov
fwait
jp
xchg
mov
js
mov
jge
inc
push
outsl
lods
call
ret
stos
out
leave
ss
repnz
xor
push
sbb
popa
push
jmp
sbb
and
loope
push
jo
dec
addb
mov
pop
jmp
push
notb
fwait
xchg
fsubrl
and
mov
pop
jge
mov
cmp
xlat
faddl
mov
mov
lods
das
adc
test
jmp
popa
adc
mov
or
lret
enter
sub
rdmsr
mov
xchg
mov
jns
ret
lods
mov
sub
xchg
arpl
and
sahf
mov
mov
dec
xor
imul
addr16
fs
scas
sub
in
aad
mov
in
push
outsl
push
sub
cmp
test
or
cwtl
or
sub
mov
mov
jmp
jecxz
orb
add
popf
inc
int3
mov
aam
push
inc
aam
lea
jno
outsb
dec
and
mov
push
orb
dec
loopne
fs
lret
in
test
das
ja
stc
jl
jne
jle
stos
pop
imul
inc
xchg
dec
fsubl
xchg
popf
aas
je
and
mov
pop
pshufw
dec
cld
sub
xorl
dec
fiaddl
xor
mov
adc
or
jmp
inc
push
test
jp
dec
cltd
roll
shll
xchg
push
jmp
fwait
and
adc
or
inc
lods
int3
mov
data16
fildll
fsts
mov
call
push
push
xchg
or
push
push
jg
cld
stos
sub
and
cmp
pop
pop
adcb
mov
jb
mov
mov
icebp
sbb
out
test
stos
fistl
sbb
inc
dec
jno
stc
in
sbb
jg
inc
jp
push
je
movsl
cmp
loopne
xor
jns
mov
out
jbe
pop
cs
dec
ds
dec
int
xchg
lret
cmpsw
test
hlt
inc
mov
pop
cmp
not
movsb
fldcw
fcomps
scas
dec
xlat
xchg
aad
push
stc
adc
scas
testl
jg
pop
mov
jne
rol
aad
jo
lods
xchg
and
xor
xchg
clc
nop
pop
into
xor
sbb
loope
jo
inc
es
pusha
inc
rcll
jno
mov
stos
add
push
sub
add
mov
sub
int3
or
pop
popf
test
lret
cmp
fsubl
pop
lcall
sub
sub
pop
pushf
jne
cmc
es
fcmovnbe
mov
and
jno
or
lock
xlat
xor
add
sub
and
call
or
pusha
test
push
sub
push
popf
push
test
test
push
push
fisubrl
mov
xor
fdivrs
ret
push
loopne
int3
sbb
mov
add
push
loope
addr16
div
dec
mov
jo
fnop
pop
test
aaa
push
sub
or
arpl
data16
add
fnstsw
jb
mov
decb
or
jb
loop
cltd
out
xor
sti
addl
dec
jmp
sar
pop
mov
clc
xor
ds
into
mov
adc
in
fcoms
cmpsb
jmp
mov
add
aas
repnz
xchg
sub
inc
rcll
cs
add
add
sbb
stos
lea
jnp
sti
sbb
orl
movsl
andb
xchg
mov
sub
pop
cmc
mov
sub
out
data16
scas
pop
pop
scas
ds
xchg
sub
loope
cmp
sub
popa
pushw
cmpsl
rclb
push
sti
cmp
mov
or
sarb
leave
fs
adc
bound
ljmp
inc
inc
lds
add
std
in
or
sbb
cli
sub
dec
fs
xchg
pop
mov
jae
dec
pop
jmpw
incl
lret
mov
std
std
lret
ret
inc
xor
int3
int3
adc
xchg
ret
xchg
in
mov
or
rcrl
jmp
lahf
jmp
outsl
fnstcw
adc
or
xchg
pop
dec
push
aam
out
mov
push
notb
aas
das
add
or
hlt
xor
or
or
push
jg
popf
test
jle,pn
dec
mov
pop
dec
adc
mov
shr
xor
aam
aas
aad
or
jmp
testb
jmp
cmpb
sub
aaa
into
jmp
fs
push
ljmp
mov
push
daa
add
mov
shrl
mov
das
sbb
subb
sahf
fldl
add
les
in
idivb
adc
stos
xchg
or
inc
insl
mov
push
outsb
fst
cmp
hlt
in
mov
mov
jp,pn
mov
and
inc
dec
aad
loope
loop
cmpsb
aas
roll
mov
xor
out
mov
dec
mov
cmp
xchg
adcb
mov
popa
add
subb
mov
xchg
fwait
xor
in
adc
in
xor
lret
mov
nop
or
pop
pop
fadds
add
test
or
add
push
pop
leave
mov
repz
jg
xor
adc
or
iret
into
pop
fsubrl
or
shrb
fldt
push
and
stos
cwtl
jns
cld
lds
mov
ss
nop
je,pn
and
dec
loopne
fcompl
out
jne
insb
call
js
add
sarl
inc
stos
cwtl
ss
push
fcmovne
scas
arpl
je
pop
xchg
and
cmp
mul
stc
fwait
xchg
push
push
or
xchg
cmp
dec
jg
lret
dec
xchg
sub
jge
lcall
cmp
lock
push
icebp
lahf
in
adc
lds
lock
mov
push
push
jg
push
hlt
or
arpl
stc
sti
in
stc
cmp
jp
bound
sarl
add
push
sbb
hlt
std
cltd
outsl
mov
in
pop
or
ret
pop
loope
jp
sub
xchg
mov
sbb
or
or
pop
mov
mov
pop
xor
cmp
cmp
or
xchg
push
repz
mov
out
jle
pop
add
sbb
mov
data16
sub
lcall
mov
inc
jle
cmpsb
out
lods
shlb
fwait
and
inc
mov
adc
imul
fwait
lea
dec
pop
js
cmp
fadd
popf
add
mov
aad
sbb
dec
jle
ret
mov
daa
inc
lahf
ret
ss
jp
xchg
pop
fstp
jno
xchg
imulb
sbb
jle
jbe
mov
dec
adc
fsubl
inc
cld
loopne
test
adc
pop
les
dec
in
scas
add
jmp
dec
das
sub
push
dec
xchg
xchg
in
xchg
fcoml
int3
lcall
int
mov
add
fstl
jbe
xchg
std
clc
scas
or
data16
and
cwtl
adc
push
cmpb
lret
dec
pop
mov
iret
sub
inc
repz
les
inc
mov
ficomps
xchg
shll
pop
and
stc
push
daa
movsl
jnp
add
daa
pop
inc
mov
sub
jge
cmpl
mov
bound
or
daa
mov
dec
lcall
cmp
insb
icebp
add
pop
pop
int3
mov
out
into
fisubrl
into
push
and
jae
popf
xor
cmp
pop
insl
pop
sbb
stos
push
sbb
mov
adc
cs
push
stc
ljmp
sbb
jb
out
notb
add
cmp
mov
pop
cld
aad
cmp
mov
iret
jle
int3
or
fucomp
mov
andl
and
js
inc
mov
sti
lods
ss
stos
pushf
test
lea
pop
gs
push
in
push
adc
test
pop
sub
jb
imul
fidivl
pshufw
pop
shll
stc
repnz
sarb
dec
mov
or
movsb
nop
test
push
inc
jbe
or
or
popa
pop
stos
sbb
ljmp
jecxz
xor
out
dec
mov
shrb
push
stos
fs
pop
cmc
inc
dec
fwait
xchg
sub
mov
jnp
mov
jne
sub
lods
lret
cwtl
iret
cmpsl
jecxz
mov
aad
icebp
mov
add
pop
xchg
leave
in
adc
cmp
fidivrs
push
cld
cmp
mov
pushf
dec
clc
adcl
mov
stos
dec
dec
adc
out
rol
cltd
pop
stc
shr
jno
and
insb
add
mov
cmovbe
int3
jae
jp
jecxz
cmp
lods
fistl
push
lods
or
cmp
jae
fucomip
pop
repnz
clc
pop
fwait
inc
adc
jmp
fistps
mov
cmp
pop
sub
pop
pop
aad
lret
cmp
cmp
dec
js
fwait
inc
dec
xchg
mov
cmp
push
mov
xlat
in
out
mov
inc
mov
aad
push
xchg
jg
addr16
enter
xchg
mov
mov
outsb
repnz
mov
stc
dec
pop
aad
repz
cltd
test
mov
loop
insl
mov
jp
or
mov
loopne
pop
xor
popf
popa
incl
push
test
shlb
jl
dec
jae
repnz
lock
ret
int
lahf
mov
inc
in
es
popf
lods
fwait
push
in
aad
out
dec
push
dec
outsb
xchg
sub
cmp
cs
sub
imul
addr16
lret
stos
outsl
les
les
ljmp
push
push
mov
je
jne
pop
cli
xchg
and
test
push
xlat
adc
std
jl
sub
outsl
add
pop
and
arpl
push
push
adc
andl
and
push
mov
ret
shrb
pop
jmp
xchg
bound
in
dec
int3
pushf
das
sub
das
and
ffreep
mov
int
mov
pop
and
dec
fimull
inc
push
and
pop
rolb
hlt
in
test
xor
jg
pop
and
push
js
ds
sbb
mov
pop
cmp
fadd
in
jg
rorb
pop
stos
adc
mov
jg
xchg
xor
scas
pop
aas
inc
fwait
incb
dec
mov
mov
mov
cli
push
xor
out
push
sbb
out
popa
mov
nop
jo
push
adc
sarl
mov
xchg
push
sub
push
subl
xchg
stos
cmpsb
add
stos
cwtl
int
mov
clc
xchg
push
push
jns
enter
cmpsl
je
cmp
pop
xchg
mov
jg
adc
pop
outsl
jo
rorl
mov
push
and
or
cs
repnz
xchg
cmc
lcall
decl
adc
push
add
jnp
fildl
fcmove
fcoml
or
pop
sub
jmp
repnz
xor
popf
cmp
push
xor
popf
fldcw
scas
int
adc
pop
cld
rclb
imul
outsl
loop
xor
dec
stos
imul
or
inc
mov
inc
adc
push
andb
clc
sbb
std
fs
lret
aas
jcxz
mov
clc
pop
adc
ljmp
mov
fmull
ds
jae
movsb
xor
fstl
push
nop
adc
iret
fstl
adc
jne
push
and
std
in
icebp
dec
mov
mov
xor
or
xchg
int3
mov
inc
sti
mov
pop
aaa
sub
stos
addr16
sub
dec
xchg
out
jle
jbe
divb
mov
aaa
pop
repz
or
cmp
gs
jl
pop
mov
popf
mov
sbb
mov
jns
push
loop
int3
iret
or
xchg
adc
mov
stc
mov
sbb
xor
stc
pop
mov
inc
cmpsl
sub
test
mov
adc
sbb
ficoms
add
jg
mov
mov
jb
inc
jbe
enter
mov
cmpsb
dec
push
popf
add
or
jbe
popf
sub
mov
xchg
adc
repnz
imul
mov
add
lret
cmp
pop
jle
hlt
lock
push
inc
rclb
jbe
or
inc
pusha
stos
out
sbb
out
dec
cmp
fcmovu
repnz
adc
das
or
inc
sbb
jbe
jl
cmp
push
adc
and
lds
pop
ret
xor
int
adc
cmp
pusha
movsl
fsubl
rcrb
shr
lret
ja
lods
dec
cmpsb
push
sbb
push
dec
or
mov
add
aas
lahf
out
sahf
mov
fists
push
les
xor
pop
cmp
add
leave
mov
ss
lods
xor
loop
jo
mov
pop
jne
mov
xchg
lods
icebp
xor
dec
inc
mov
push
mov
cmpsl
pop
jb
mov
insb
mov
fdivl
arpl
pop
ret
int3
sar
movsb
ret
and
xchg
push
add
fcomp
or
jl
jl
adc
lret
fbstp
and
icebp
push
data16
mov
sbb
xor
push
sub
dec
and
add
mov
inc
mov
or
xor
in
imull
mov
push
pop
sub
lods
sahf
push
and
sarb
pop
lock
sbb
movsl
xchg
push
mov
sub
and
int3
sbb
arpl
lret
xchg
jp
popf
xchg
jns
mov
test
push
aaa
cmp
es
adc
mov
or
pop
push
jns
jo
fsubrl
sub
push
adc
fistpll
test
adc
repnz
jne
icebp
je
jle
cmp
fwait
les
loop
push
aad
gs
push
and
mov
mov
and
xchg
xchg
mov
jge
insl
cmp
xadd
mov
cmp
xor
popa
lcall
inc
pop
stc
mov
push
test
pop
test
lea
pop
outsb
pop
mov
jnp
inc
push
add
push
or
pop
bound
aas
push
js
pop
arpl
sbb
jb
lock
mov
and
pop
dec
xchg
jg
popa
cmp
mov
mov
sub
loope
inc
iret
xchg
lds
ror
aaa
incb
pusha
push
xchg
inc
stos
cmp
push
jb
js
push
fnstsw
stc
jne
imul
jno
pop
cmp
add
push
add
fwait
mov
push
addb
lret
jbe
xchg
dec
test
sbb
push
or
pop
movsb
mov
dec
mov
xor
sahf
lret
test
cmc
or
test
shl
clc
sub
sub
sub
call
je
aaa
shll
inc
ss
imul
ret
pop
pop
jecxz
jo
adc
dec
or
or
rolb
jae
arpl
mov
cmp
cmp
cmp
loope
daa
call
bswap
adc
fs
or
cmpb
stc
mov
jb
sbb
adc
pop
addr16
inc
xchg
add
mov
fisttpl
in
pushf
in
jl
mov
mov
scas
pop
jbe
sbb
mov
or
into
jge
mov
pop
dec
mov
mov
adc
mov
jg
dec
mov
mov
lret
pop
repz
jg
loopne
dec
cltd
int
aad
mov
pushf
pop
pop
mov
xlat
call
ficoms
mov
insl
adc
aas
mov
add
push
dec
test
cmp
in
shll
sahf
xchg
pop
sarb
mov
jle
call
jl
or
sub
std
or
rcrl
and
cmpl
mov
aam
aam
add
out
test
jno
mov
xchg
xor
mov
enter
rcrb
outsb
push
out
or
mov
shrl
jnp
sbb
rcrl
cli
mov
imul
cwtl
out
cmp
imul
sub
and
bound
aas
or
push
mov
lret
push
mov
shlb
mov
sarb
das
testl
inc
and
sti
aam
or
outsb
xor
mov
push
push
idiv
gs
enter
jle
jecxz
mov
mov
loope
stc
adc
adc
and
cld
push
ret
add
sub
loope
cli
cs
popa
or
aad
out
jne
in
scas
sbb
pop
and
inc
dec
test
cwtl
mov
sub
lret
jg
shrl
xchg
cmpsl
jne
inc
out
and
nop
inc
jno
mov
lods
mov
xchg
int
imul
add
movsb
fsubrl
fwait
jno
mov
imulb
mov
clc
fnstcw
xor
sub
mov
mov
or
jns
fisubl
mov
shl
repnz
lods
and
outsb
leave
cmp
outsl
nop
idivb
lahf
fstps
or
fsub
scas
shlb
inc
into
cmp
jo
xor
xchg
jns
mov
nop
outsb
mov
shlb
inc
xchg
and
cmc
xor
scas
sbb
shll
adc
lods
push
aas
sbb
fstp
add
stos
icebp
rorb
dec
push
mov
cltd
mov
push
sbb
mov
loop
je
sar
popa
cld
fistps
arpl
popf
repz
mov
lcall
popa
mov
lods
xchg
mov
outsl
jb
daa
popa
jbe
cmpsb
lret
stc
clc
sbbb
cltd
cwtl
ficoms
mov
lea
pop
insb
lea
cli
and
scas
jns
mov
imul
push
or
xor
inc
or
mov
das
push
leave
sub
test
lock
fwait
nop
imul
loopne
dec
mov
inc
ljmp
inc
cmpsb
shl
loopne
mov
and
pop
xchg
inc
xor
mov
outsl
ds
fisubrs
add
mov
and
sbb
lea
aas
rcll
lcall
push
xchg
mov
loop
inc
pusha
cmp
orl
lods
fnstcw
ljmp
or
aas
cwtl
shl
imul
cmp
lods
mov
lahf
dec
scas
dec
adc
or
pusha
fisttpll
or
jmp
bound
fisubrl
sbb
fwait
ds
mov
push
push
push
dec
test
outsb
push
pop
lea
dec
jbe
xchg
add
pop
mov
bound
jo
je,pn
sahf
push
cld
xor
int
insl
jne
cwtl
outsl
or
cmp
xor
loop
jbe
ret
insl
jecxz
repz
and
xchg
rcl
mov
push
and
jg
clc
into
test
pop
xchg
xlat
jmp
lret
jg
mov
xchg
cwtl
cmpsl
push
fsts
mov
xchg
mov
push
xchg
aas
out
and
popa
out
xlat
push
inc
xor
xor
xor
into
pop
inc
xchg
inc
cmpsb
addr16
xor
add
cmp
popa
sub
xchg
jo
int3
mov
jl
mov
add
lret
mov
adc
and
sbb
outsb
sti
pop
or
mov
push
and
rep
pop
loop
push
lret
clc
dec
or
mov
push
bound
repnz
cmpsb
and
fnstsw
cwtl
loope
daa
add
sbb
pushf
mov
imul
orb
mov
mov
jbe
imulb
cmp
pusha
test
insl
mov
aad
and
insb
pusha
test
pop
mov
mov
jg
fcoml
lea
cltd
test
xchg
adc
lret
sbb
arpl
mov
ret
pop
adcl
mov
push
lahf
lods
jg
push
pushf
es
movsl
jl
mov
fcomps
pop
xor
cmpsb
cmpsb
jle
testl
mov
cmpb
xor
out
loop
add
push
in
pop
cmp
testb
cmc
and
mov
sub
jle
add
and
cmp
push
mov
int
sbb
xor
mov
jp
cmpsb
adc
es
inc
in
jnp
jbe
add
jo
jb
jb
pop
aaa
pop
pop
out
loope
cmp
adc
fstpl
call
lods
cmc
mov
insb
pusha
pop
aad
jge
in
jne
dec
add
inc
mov
call
movsl
std
pop
je
sbb
pop
sub
mov
pop
add
sbb
dec
loopne
sub
loope
cmp
dec
out
je
adc
int3
mov
in
fsubr
movsb
xchg
pop
mov
out
push
inc
ja
es
les
loopne
jge
jbe
jae
mov
fst
mov
fildll
pop
je
mov
sbbl
push
lcall
fdivl
adc
cltd
sub
out
shl
cmpsl
pop
jno
cld
cltd
cmp
xor
in
sbb
stos
mov
sar
adc
int
ljmp
clc
and
cmp
sub
fistps
cmp
orl
roll
mov
cmpsb
movsb
cmpxchg
lcall
int
fdivl
imul
dec
dec
repnz
cli
inc
pushf
sub
test
cwtl
repnz
jns
das
imul
ret
adc
jne
lods
shl
mov
mov
push
out
repz
dec
sub
fimuls
pop
lds
cltd
push
sbb
icebp
mov
lods
xor
cli
inc
hlt
mov
pop
cmp
rcrb
movsl
sarl
push
ss
das
mov
iret
in
out
jmp
push
mov
cwtl
sarb
or
sbb
xor
mov
in
or
jnp
adc
pop
mov
lds
sub
cmp
xchg
pop
js
fmull
arpl
xchg
in
inc
outsl
mov
or
mov
add
jno
fidivrl
and
js
scas
jmp
loopne
add
mov
mov
cmp
inc
gs
aam
in
int3
movsl
pushf
jmp
push
repnz
repz
dec
cmpsl
pushf
inc
pop
aad
cmpsb
or
hlt
xlat
fsubrl
movsl
sub
stc
or
fwait
xchg
repnz
xor
jnp
mov
iret
sbb
push
inc
xchg
inc
mul
lods
jnp
inc
mov
mov
jnp
jbe
xchg
stos
push
xchg
arpl
cld
pop
mov
decl
cmp
dec
int3
pop
daa
imul
inc
sub
or
mov
addr16
test
inc
push
iret
lret
or
pop
xor
add
add
jnp
mov
out
inc
jno
mov
jno
mov
xchg
sub
mov
push
repnz
jns
mov
cmp
pop
mov
rolb
sarb
push
ret
xor
sbbb
jb
jno
cli
imull
dec
stos
xchg
das
out
inc
xchg
dec
out
call
or
negl
fbld
les
shll
jle
ret
sti
mov
pop
shll
data16
mov
jg
xor
push
sti
fadd
push
cmp
dec
outsl
xchg
or
sub
sti
lea
mov
mov
pushf
inc
cmp
fildl
aas
and
shrb
sahf
sbb
cmpsb
in
jb
mov
mov
push
jne
adc
mov
sub
popf
push
mov
xor
out
dec
mov
xor
popa
rcrl
and
aad
pop
std
add
add
pusha
pop
dec
pop
xchg
jle
lods
cmp
addr16
jo
mov
fdivrs
mov
xchg
cmc
int
fldenv
roll
lidtl
notb
xchg
inc
mov
cmp
sbb
push
push
test
sbb
daa
sbb
sub
leave
push
cmp
sbb
into
in
fmul
push
mov
repz
cmp
xchg
pushf
popa
jle
add
jbe
and
mov
mov
dec
test
mov
cs
shrb
enter
mov
in
cmp
sub
ja
jns
xor
cld
js
loop
sbb
jo
fs
pop
mov
psubusb
add
jp
cltd
pusha
shlb
pop
cwtl
pushf
ret
pop
mov
dec
push
sub
mov
hlt
cmpsl
imul
xor
cmp
push
mov
push
xor
hlt
sub
int3
movsl
adc
xor
adc
shrl
sub
xor
lods
outsl
xchg
ja
pop
pushf
push
sarb
or
lret
pop
push
clc
or
popf
add
call
inc
and
shll
lea
lods
inc
mov
jns
loop
jns
xchg
jnp
sbb
lds
sbb
fs
out
out
dec
sub
das
into
hlt
call
fdivs
and
mov
in
inc
in
out
stos
pop
cmpsl
or
push
mov
icebp
jnp
mov
mov
pop
inc
or
add
mov
ficomps
inc
dec
inc
jno
pushf
movsl
jle
loope
clc
out
mov
pop
adc
aad
cmp
movsb
xchg
mov
les
stos
add
mov
into
mov
es
and
push
outsb
loop
insl
fldl
sbb
mov
inc
cmp
call
rorl
jecxz
mov
mov
fstps
fsubs
popl
cmpb
popl
xorl
inc
inc
sub
fwait
pop
xchg
mov
xlat
or
inc
sub
pusha
cwtl
jl
and
outsl
mov
xor
pop
push
test
or
mov
lock
mov
and
test
xlat
push
push
mov
push
fchs
inc
icebp
jae
xorb
or
pop
pop
cli
in
or
and
js
repz
mov
jge
dec
aam
mov
adc
into
hlt
adc
test
pop
jns
imul
mov
push
movsb
pop
jno
mov
ret
xor
pop
jbe
pop
mov
xor
in
pop
pop
mov
xchg
cmp
jle
cs
push
adc
inc
aam
and
push
jle
sub
rol
sbb
fs
adc
mov
test
sbb
mov
sahf
cs
arpl
in
and
jnp
xor
mov
dec
xor
or
adc
in
cli
dec
push
pop
xchg
sbb
in
fldl
pop
addr16
imul
leave
pop
inc
mov
mov
decl
adc
push
adc
push
inc
inc
mov
popa
sbb
aas
sub
xlat
nop
ja
inc
push
push
sub
jmp
idiv
scas
frstor
mov
ret
or
push
pop
in
cmc
cs
mov
xchg
pop
add
stc
push
imul
jle
cmc
and
dec
and
mov
lods
jb
sub
push
aam
rcl
cld
push
je
mov
ljmp
imul
sub
sbb
push
or
xor
cs
push
in
into
notl
add
mov
mov
pop
sub
mov
icebp
xchg
loopne
mov
iret
cmp
daa
mov
sbb
xchg
dec
jp
imul
inc
jo
xchg
sbbb
add
rcrl
xchg
push
in
popa
cmpsb
cmp
dec
pushf
pop
adc
cmp
inc
inc
push
notb
dec
mov
push
adc
les
and
clc
mov
push
sbb
dec
pop
mov
fsub
mov
jge
push
daa
pop
adc
sbb
inc
sub
lahf
ja
jae
out
jno
cmpsl
les
ds
cli
test
inc
out
mov
cmc
fwait
push
push
mov
inc
mov
gs
lods
and
pop
dec
push
pop
divb
into
add
aas
fildll
popa
fbld
in
repz
add
arpl
test
xor
dec
jnp
repz
fstpt
addr16
pop
mov
xor
ljmp
cmp
aas
loope
jge
mov
pushf
imulb
sbb
rcrl
jge
xchg
loop
adc
int
mov
mov
les
pushf
icebp
imul
xchg
test
pushf
sub
add
mov
pop
in
mov
call
nop
push
bound
mov
test
push
and
bound
sbb
rorl
ficompl
push
scas
popa
out
xor
fsts
cmc
enter
cmp
dec
sbbl
subl
jle
loope
loopne
hlt
jg
data16
dec
sbb
in
mov
mov
lods
cs
mov
mov
xor
mov
insl
stos
mov
fcoms
movsl
inc
sbb
in
js
popa
mov
repnz
inc
add
scas
sbb
cwtl
add
js
pop
pop
fstpl
adc
adc
sub
inc
or
xor
adc
add
hlt
leave
ret
push
jp
dec
jle
les
and
mov
pop
aad
push
sbb
cmpsl
jo
jns
xchg
jne
ffree
movsl
mov
loope
or
fwait
insl
cmp
pop
loop
rolb
loopne
mov
push
xchg
pop
mov
jmp
daa
test
fs
adc
and
cmp
das
jbe
in
inc
pusha
daa
insl
loopne
adc
in
addl
int3
mov
sbb
sar
lahf
pop
or
xor
add
mov
jo
mov
inc
pop
ficoms
pop
std
cmp
in
aad
mov
inc
mov
ret
out
sti
hlt
add
pop
stos
clc
xor
xchg
pop
lock
pop
jge
jl
or
aas
test
inc
or
xor
hlt
xor
mov
add
pop
scas
jecxz
outsl
push
mov
sti
mov
adc
push
mov
dec
inc
imul
ja
mov
fcoms
mov
adc
call
cltd
or
pop
std
cmp
push
aas
xor
shrl
lahf
lods
pop
add
adc
icebp
push
cmp
push
xor
imul
in
jmp
and
push
int3
mov
add
cld
mov
mov
mov
mov
add
movsb
mov
fcmovb
pushf
outsl
daa
jne
test
idivl
scas
add
jge
and
xchg
es
mov
ljmp
inc
jnp
xlat
out
out
xor
int3
mov
pop
inc
aaa
ja
scas
mov
lods
mov
xchg
dec
cmp
cltd
and
icebp
pop
inc
es
adc
fimuls
scas
mov
add
push
ds
mov
mov
adc
stos
xor
cmpsl
loop
aaa
adc
sahf
or
mov
test
jp
xchg
mov
sahf
cmp
ret
bound
cmp
iret
xchg
and
cld
push
cli
shrb
fimull
fsubrs
pop
out
loop
inc
sub
cmp
pop
dec
call
lret
stos
repnz
cmp
push
mov
aad
fsubrl
in
in
pop
jmp
jns
bound
hlt
aas
data16
es
mov
sub
mov
out
mov
fs
mov
dec
adc
dec
test
sbb
lea
sub
shlb
add
sub
sub
adc
cmp
aam
push
jecxz
stos
roll
cmp
add
cmp
jbe
push
mov
aam
mov
out
shlb
xor
push
mov
cmc
gs
or
xor
inc
mov
stc
and
cmp
ret
arpl
ss
pop
xchg
push
lock
push
or
cwtl
fidivrl
mov
int
mov
sbb
ja
and
dec
add
and
je
paddsb
iret
dec
stc
mov
scas
pop
cld
xchg
push
mov
push
rorl
mov
mov
mov
pop
push
mov
jp
pop
sarl
js
aas
dec
mov
push
inc
jmp
dec
loopne
mov
jecxz
add
jmp
xor
fwait
mov
cld
insb
aam
dec
pop
out
or
aaa
adc
mov
scas
xchg
cmc
pop
and
out
lcall
testl
mov
test
jns
add
loopne
xchg
mov
mov
scas
call
and
cs
in
pop
rcrl
pop
jns
ret
push
loop
mov
push
cmpl
sub
test
scas
adc
push
xor
mov
xchg
fbstp
mov
stos
cmpsl
adc
and
adc
outsb
xchg
adc
mov
jmp
ja
insb
or
cmc
aad
data16
outsb
outsl
mov
mov
mov
mov
popf
test
push
xchg
mov
out
sub
sti
ret
jnp
bound
scas
push
mov
pop
push
jmp
and
lret
roll
imul
cltd
sbb
nop
mov
fdivr
mov
mov
ja
adc
mov
arpl
xchg
xorb
frstor
ficomps
inc
sbb
adc
sbb
dec
adc
mov
test
or
cmpsl
pop
cmp
xor
iret
rcll
add
xchg
pop
das
leave
push
clc
add
sbb
lds
pop
ds
rorb
fwait
adc
ficoml
pop
rcl
enter
lock
adc
loope
call
and
sbb
dec
or
sbb
push
mov
sub
int3
cmp
das
inc
ret
or
inc
jle
jns
push
mov
popa
jge
mov
inc
icebp
lods
xor
pop
fdivrs
dec
imul
rol
lret
and
inc
jmp
jns
ss
mov
test
lret
out
in
dec
fiaddl
sbb
lock
sbb
fidivrs
out
jmp
jno
sar
loopne
push
mov
in
out
xchg
jo
mov
popa
xchg
xor
popa
dec
shll
cwtl
imul
xor
xchg
insb
int3
cli
test
and
lods
mov
push
loopne
cmp
ds
xchg
mov
cmpsl
decb
jge
cmp
add
pushf
dec
sbb
js
push
test
daa
push
gs
cltd
mov
cmpsl
jg
push
movsb
xlat
fdivl
mov
dec
cltd
ret
adc
cmp
mov
mov
cld
push
mov
rolb
mov
test
mov
xchg
or
inc
push
rorl
or
push
cli
mov
and
mov
push
es
pop
hlt
pusha
xlat
jno
lods
insl
fs
fisubrs
test
jb
mov
jmp
inc
loop
dec
push
inc
sahf
inc
lods
inc
jl
push
pop
pop
xchg
lods
jb
or
stos
or
sub
cmp
fstl
stos
or
vpmadcsswd
and
mov
push
je
xor
jno
mov
into
and
xchg
dec
add
aad
daa
xchg
in
adcl
hlt
out
lcall
adc
leave
inc
inc
add
cli
loope
shll
sub
in
imul
mov
andl
mov
lods
ljmp
push
cmp
push
cltd
movsl
shlb
and
mov
push
rcr
imul
dec
xor
lcall
insl
loopne
pop
add
lds
es
mov
pop
add
cmpsl
outsb
add
fimull
lods
xor
xchg
cmc
xchg
and
ficompl
psubw
jae
loop
flds
lret
jno
rorb
cli
xchg
stos
and
and
ret
addl
enter
sub
xor
imul
jns
shrl
decb
lods
xchg
cmp
sti
sbb
ss
stos
aad
add
cmp
mov
cmpl
addr16
das
push
push
iret
mov
jmp
xchg
out
out
cmp
dec
imul
xor
xchg
push
and
inc
arpl
mov
add
dec
insl
sbb
mov
push
cmc
pop
lods
std
dec
push
cmpsl
push
or
jns
add
add
js
push
xchg
je
mov
fucomp
adc
sbbl
pop
inc
or
sahf
std
cltd
mov
movsl
mov
pushf
pushf
pop
push
push
call
push
dec
mov
movsl
xchg
outsb
dec
xchg
jge
dec
inc
sub
popa
insl
sti
insl
sbb
lods
in
jnp
das
imul
pushf
inc
es
pop
inc
xlat
xchg
sbb
pop
and
imul
xchg
pop
add
jo
repnz
stos
cwtl
fisttpll
imul
inc
pushf
mov
xchg
mov
xor
xchg
xchg
fists
pop
scas
add
lret
pop
push
imul
jae
add
mov
loop
lock
int3
ljmp
lods
daa
xor
xor
sub
xchg
les
andb
sub
scas
out
imul
negb
cmpl
sbbb
ja
inc
cmpsl
jecxz
sub
pusha
stos
shll
lret
popa
mov
dec
mov
mov
ror
pop
xchg
push
enter
jl
test
andb
lret
or
call
xchg
mov
adc
push
inc
in
add
mov
mov
pushf
xchg
addl
fdivp
cltd
dec
pop
pop
lds
bound
ret
sti
add
and
cmp
jmp
test
mov
adc
push
inc
dec
int3
cwtl
jb
add
cmp
dec
pop
ja
pop
xor
aaa
inc
fwait
aam
pop
sahf
out
push
or
jne
jp
xchg
inc
dec
sub
aas
add
movsb
pop
push
push
mov
rep
outsb
push
mov
pop
cmp
or
insl
pop
mov
inc
jb
repz
mov
movsb
fdecstp
in
cmp
rol
pop
xor
cmp
pop
add
or
jge
mov
negl
jg
negl
push
sar
xchg
jecxz
mov
sub
mov
inc
ljmp
fbstp
adc
nop
dec
imul
std
xorl
popf
mov
js
loope
sub
jo
dec
sbb
jg
inc
mov
popf
mov
lods
push
push
arpl
fisttpl
xor
mov
xor
stc
add
cltd
scas
or
jmp
std
cmp
imull
cmp
andb
in
pop
enter
icebp
fisttpl
and
repz
ret
fadds
push
mov
sub
call
jg
push
pop
jle
xchg
mov
mov
movsl
enter
xchg
ljmp
dec
notb
and
and
in
pop
in
cmpsb
pushf
fcomps
mov
pop
mov
and
daa
sahf
cli
or
mov
ret
xlat
or
sbb
mov
sbb
jp
sbb
add
xorb
inc
out
loop
inc
mov
loope
xor
arpl
sub
jmp
mov
out
mov
out
mov
repnz
dec
inc
rcrb
pop
shr
ja
clc
aam
sub
mov
mov
and
cwtl
xchg
and
jae
sti
pop
mov
push
push
cmp
sar
mov
lods
xor
jns
movsb
xor
or
or
inc
adc
inc
test
int
fidivrs
ret
test
mov
pop
mov
lahf
add
sub
inc
iret
and
fwait
dec
pop
mov
adc
ja
inc
pusha
jne
xchg
pop
add
sub
lock
fwait
or
loope
inc
push
cmp
jbe
jge
rcll
xor
cld
in
mov
push
enter
mov
jecxz
stos
mov
not
sbb
outsl
or
inc
push
loopne
test
mov
or
xchg
lods
pop
jbe
int3
mov
mov
pop
enter
dec
mov
inc
mov
jb
jo
cmpsl
jecxz
cmp
adc
push
fs
push
lods
and
jmp
add
pop
mov
mov
mov
in
test
adc
cs
in
cs
in
shlb
dec
sub
sahf
adc
add
sbb
outsl
cwtl
mov
or
repnz
in
in
fcoml
push
inc
ljmp
int3
fldenv
adc
sub
rorl
test
push
pop
lret
das
inc
stos
pop
jno
dec
pop
lahf
mov
or
cmp
pop
sbb
fidivrl
jl
and
outsl
sub
ja
mov
nop
pop
js
addr16
pusha
pop
mov
nop
jb
xor
bound
clc
lds
jecxz
ss
adc
cmc
orb
jg
bound
aad
insl
mov
mov
ret
cmp
push
dec
loopne
jbe
sub
xchg
int3
fdivl
dec
dec
and
jp
sub
dec
and
cwtl
fstpl
in
add
mov
dec
mov
lods
cld
mov
push
insl
iret
cli
mov
sub
out
popf
dec
xchg
movsl
outsl
shl
inc
mov
fwait
and
cli
cld
stos
cmp
pop
push
es
data16
scas
push
push
lcall
jne
dec
iret
and
aad
pushl
aam
push
inc
sbb
loope
aas
xchg
cmpsb
mov
pop
mov
cmp
lds
clc
popa
push
inc
and
mov
pop
inc
xchg
add
mov
lods
mov
inc
pushf
push
or
push
jmp
add
xchg
xchg
test
dec
and
test
sub
xchg
xchg
inc
gs
sbb
shrl
adc
movsb
or
inc
dec
dec
mov
js
lock
fcmovne
test
push
shl
fwait
xor
mov
lcall
icebp
or
jg
xor
sbb
js
jo
pop
ss
cmpsl
sub
push
in
scas
mov
rcrb
cmp
dec
cwtl
mov
call
pop
mov
mov
idivb
in
es
mov
fadd
fcomps
stos
dec
jge
ret
mov
mov
jnp
in
sub
repz
in
shrl
test
sbb
inc
cmp
inc
fdivs
or
scas
jle
enter
sbb
push
lds
shrl
mov
pusha
nop
insb
stc
in
stos
out
imul
jb
jbe
cmp
inc
shlb
dec
cmp
popl
xchg
fnstcw
popf
dec
test
push
dec
sti
mov
cld
or
and
mov
mov
mov
push
cmp
out
imul
jmp
or
mov
aad
outsl
adc
cmp
inc
sub
xchg
xor
push
inc
xchg
xchg
repz
or
pop
mov
ljmp
and
jg
mov
mov
xchg
les
daa
or
mov
push
jno
inc
int3
fisubrs
mov
test
cmp
ja
pop
jp
insb
cmp
pop
adc
ffreep
mov
aaa
scas
ljmp
sbb
outsb
xor
mov
cli
mov
or
lods
push
push
je
loope
sub
adc
inc
out
cmp
jp
xchg
mov
outsl
xchg
nop
jns
bnd
pop
andb
dec
sub
pop
fisttps
and
push
hlt
aas
mov
adc
data16
scas
mov
scas
inc
lock
in
inc
push
xor
loop
mov
aam
mov
lcall
sahf
sbb
pop
shlb
pop
aad
jmp
push
mov
xchg
sub
test
jecxz
call
adc
scas
add
test
fs
in
lret
mov
mov
pop
xchg
rcll
lcall
xchg
adc
arpl
sub
inc
enter
push
in
test
mov
aas
rolb
cmpsl
sub
and
rol
sbb
pop
ret
xchg
lods
mov
jl
pop
daa
aad
add
push
cmp
jge
test
add
sbb
dec
inc
std
stc
popf
enter
test
pusha
or
add
es
mov
push
test
xorb
bound
mov
loop
cmp
mov
push
iret
inc
mov
mov
jg
mov
xchg
pop
pop
xor
fsubr
push
icebp
outsl
int
push
sahf
pop
lods
sbb
jp
mov
or
out
sub
stos
repnz
jnp
push
cmpsl
negb
jbe
sti
pop
pop
adcb
fs
scas
sti
jecxz
sub
idiv
pop
mov
enter
add
inc
outsb
aaa
int3
xor
cmp
test
aad
jg
xchg
mov
inc
xchg
push
icebp
ret
mov
cmp
mov
adc
ljmp
daa
xchg
test
in
xchg
repnz
leave
out
add
jnp
sub
leave
stos
lahf
adc
mov
sti
pop
and
je
dec
push
test
imul
popa
test
cmp
movsl
popf
sub
mov
dec
in
fcomps
sub
xchg
mov
aam
jl
jo
sarl
cmp
sub
mov
cmp
testb
scas
aaa
out
dec
dec
testl
movsb
sub
arpl
pop
and
inc
fwait
push
lea
aad
popa
out
push
push
pop
aad
mov
sbb
ss
adc
incl
aaa
push
mov
mov
mov
aaa
cld
sub
out
test
adc
mov
cmp
aas
shl
push
sahf
adcl
mov
jg
dec
repnz
fsubp
out
add
or
push
mov
sbb
sbb
mov
jno
push
std
cmp
movd
sahf
mov
jb
push
add
xchg
jl
rcl
add
stos
dec
icebp
imul
mov
push
popa
sar
mov
rcrl
mov
aam
ficompl
sbb
cmc
cmp
mov
sub
push
dec
push
out
cmp
inc
gs
mov
gs
arpl
cmpsb
jne
cld
push
mov
test
in
push
jmp
testl
cmp
mov
or
call
jnp
insl
cli
xchg
test
add
jle
lea
push
inc
jg
sbb
mov
pop
and
mov
lahf
cmp
inc
sbb
je
stc
fwait
push
sbb
sbb
push
or
in
xor
cwtl
insb
cmp
shlb
ljmp
mov
outsl
dec
xchg
stc
stos
in
sub
outsb
sbb
mov
movsb
rclb
inc
pop
cmp
sub
dec
lock
adc
daa
inc
clc
lock
bound
sbbl
frstor
lods
aam
cmp
dec
mov
roll
push
cmpl
mov
lock
jmp
sub
cmp
hlt
cmp
push
outsb
out
ret
xor
in
sub
cmp
arpl
cltd
jecxz
adc
das
jecxz
hlt
cmp
shll
stos
leave
push
and
lock
cmp
xlat
into
add
push
and
mov
inc
pop
pop
cmp
or
scas
push
movsb
dec
sti
mov
mov
icebp
fstps
mov
jns
out
sarb
push
add
sahf
mov
test
mov
sahf
sahf
push
xor
and
jmp
fbstp
or
pop
cwtl
xchg
test
fwait
daa
sbb
insb
dec
mov
and
cltd
jb
pop
push
or
in
mov
dec
mov
test
and
enter
leave
push
ror
aaa
push
aam
push
lret
pop
xor
rolb
mov
mov
outsb
xor
cltd
loop
movb
and
xor
xor
orl
dec
pop
movsl
dec
arpl
sub
jb
addr16
push
lcall
in
jne
pop
fs
or
sbb
lds
ja
inc
les
cmp
xchg
ljmp
push
sbb
orl
pushf
dec
jg
push
je
push
xor
add
imul
inc
pop
push
pop
mov
arpl
jle
cs
pop
xchg
addl
xchg
adc
xor
pop
mov
gs
push
mov
repz
sbb
mov
int
xchg
push
jle
push
sarl
sub
jbe
xchg
push
dec
mov
jne
std
mov
daa
cmp
push
sub
imul
gs
fs
icebp
insb
gs
jae
in
and
or
popf
rcl
fwait
and
sbb
arpl
mov
out
xor
test
pop
lret
sub
jo
inc
loope
mov
jmp
cmpsb
mov
lret
loop
xchg
or
popa
push
adc
ret
and
mov
cltd
ret
ljmp
fidivs
push
sub
or
mov
or
pop
call
ret
sbb
and
push
and
add
mov
jns
pop
push
jmp
jae
mov
push
cmp
loopne
push
fmull
insl
cmp
and
jmp
imul
pop
adc
sbb
sub
aaa
jmp
and
int3
inc
repnz
cmpsb
sbb
sub
mov
dec
mul
xchg
and
hlt
enter
add
daa
scas
cmp
and
dec
sbb
dec
xor
mov
into
int
push
sbb
xor
ret
cmc
es
movsb
test
dec
popa
adc
push
sub
inc
rorb
shrb
pop
add
mov
hlt
jo
cmpsl
sbb
mov
cmp
cmp
aaa
xor
scas
insb
jno
lret
mov
aad
mov
inc
sbbb
mov
sub
sti
sbb
leave
inc
push
nop
outsl
loopne
loope
into
mov
cmpsl
xor
test
adc
mov
in
cmovge
xchg
lcall
ret
adc
loop
or
mov
das
jle
bound
dec
sub
movsl
jmp
add
lea
jp
jns
jbe
pop
out
lret
stc
imul
subl
jbe
je
in
ret
add
add
nop
movsb
test
into
cwtl
mov
jno
testb
xchg
into
bound
mov
cwtl
sbb
and
pop
inc
jo
test
mov
jge
call
mov
mov
out
repnz
fisubs
xchg
iret
movsb
fildll
insb
test
or
int
lods
xlat
mov
mov
outsb
mov
int3
mov
sbb
mov
pop
movl
or
nop
scas
or
jne
outsb
addr16
xor
lock
int
mov
sbb
notl
mov
test
or
add
cwtl
incb
mov
jg
jmp
mov
sahf
jns
inc
adc
repnz
icebp
iret
orl
jg
lds
pop
ja
fisubs
sub
ret
popa
js
mov
sbb
out
lret
scas
out
sub
xchg
inc
cmpsb
add
lcall
xor
imull
pop
aam
ret
adc
pop
pushf
jmp
push
inc
mov
xchg
cmpsb
xor
cmp
cmp
popa
pop
mov
jg
ss
stc
cli
add
push
mov
mov
das
add
rep
adc
xchg
pop
or
mov
fldcw
sbbl
push
xor
std
lret
pop
cwtl
sub
dec
ljmp
sub
mov
inc
push
and
mov
mov
sti
stc
mov
lods
mov
mov
cmc
or
cwtl
or
imul
sub
fwait
inc
dec
stos
fdiv
jmp
jb
jl
neg
stos
fcomps
dec
out
popa
jmp
mov
xchg
idivb
or
scas
inc
jno
adc
push
xchg
sub
mov
xchg
push
and
outsb
xor
jg
pop
cmp
in
cmp
pop
cmp
sub
adc
push
add
push
add
and
pop
or
stos
dec
jl
lahf
sub
outsb
outsl
push
mov
jae
lock
cmpsb
jnp
ficomps
cli
insl
arpl
fisttpll
add
push
xchg
testl
mov
into
daa
mov
ljmp
mov
dec
lods
pop
ret
mov
mov
dec
call
clc
sub
daa
push
notb
cwtl
popa
lea
rcll
xchg
inc
and
sbb
jmp
shl
aad
sub
jo
push
cmp
cmp
mov
inc
mov
mov
pop
outsl
xor
sahf
push
scas
fs
repz
and
or
sar
sbb
xchg
outsb
mov
jg
inc
js
std
into
dec
or
cmp
xchg
fs
xor
pusha
cs
repnz
std
mov
andl
dec
imul
mov
out
lods
in
lahf
arpl
jbe
jae
andb
sbb
hlt
aam
pop
call
mov
outsb
je
loope
lea
pop
das
mov
sbb
sahf
lods
aad
ja
push
sbbb
dec
into
jp
push
aaa
and
cli
inc
pop
sarb
cmp
sbb
shlb
mov
sub
add
sbb
add
mov
scas
cltd
cli
xchg
jecxz
sub
repz
pop
sbb
sahf
jno
jp
push
shll
out
jno
shrb
xor
inc
inc
pop
jae
cmp
mov
adc
mov
cmp
cmpsb
jbe
mov
hlt
out
in
cmp
incb
mov
push
or
pop
xchg
enter
lock
ss
xchg
sti
mov
xor
ds
in
aad
je
out
pop
pop
mov
dec
jns
addr16
aas
in
jne
xchg
das
sti
enter
lds
mov
and
das
ficoms
and
inc
push
sub
test
lret
addr16
xor
mov
bound
adc
aas
adc
ja
or
roll
outsb
icebp
mov
add
fwait
and
les
neg
sbb
add
imul
pop
jge
pop
out
inc
fildl
push
pop
mov
mov
inc
xchg
mov
outsl
repnz
push
and
loopne
sbb
stos
outsb
add
inc
pop
add
xlat
sbb
xlat
jmp
fwait
xor
dec
jo
jge
mov
mov
xchg
test
pop
fcmovb
pop
sbb
ja
call
ret
adc
mov
push
inc
jb
lock
aam
push
mov
mov
inc
pop
cld
cmc
imul
mov
aad
and
pop
mov
pop
xor
loopne
adc
xor
pop
and
sub
push
pop
frstor
adc
pop
lahf
rcr
lcall
rclb
or
sti
cmp
and
jecxz
inc
push
repnz
fsubr
sbb
icebp
sbb
add
cli
or
push
divb
xchg
jl
jo
add
pop
cmp
adc
sar
mov
sub
div
cmc
les
xor
push
aas
subl
insl
mov
pop
addr16
pop
inc
dec
leave
pop
loopne
pop
out
jbe
int3
adc
push
js
jno
xor
mov
or
dec
xchg
jb
subb
in
std
out
leave
mov
lds
loop
lds
and
stos
in
add
scas
and
sbb
xchg
xchg
cmp
mov
push
mov
mov
outsl
int
icebp
lahf
jl
push
cmp
adc
sub
repnz
lret
mov
mov
cmp
or
xor
push
ja
aam
jbe
mov
pop
or
mov
call
ficompl
cld
scas
ds
imul
stos
ret
shlb
push
and
rcrl
iret
addb
cli
ja
push
ret
movntq
out
jae
int3
fnstenv
cmp
ja
jne
aaa
cwtl
and
jae
jae
arpl
movsb
sbb
inc
pop
push
mov
add
push
fs
mov
or
sub
mov
pop
push
repz
test
cmpsb
mov
xor
into
and
pop
cmp
sbb
movsl
testb
lret
pop
xorb
xor
pop
xor
mov
lea
cwtl
jns
in
pushf
jge
pop
sbb
in
mov
shll
fwait
pop
cmpb
popf
inc
jl
lods
aad
ficomps
movsb
sub
pop
push
insb
mov
mov
icebp
shll
jb
sbbl
xchg
jecxz
cs
mov
test
iret
fldl
ljmp
and
std
lods
cmp
jb
dec
mov
jne
cmp
mov
aam
pop
inc
stos
inc
xchg
fs
ret
push
insl
jnp
enter
cmp
pop
rdpmc
mov
je
jbe
leave
aas
out
mov
cmp
in
sub
pop
dec
sub
jmp
mov
cmp
cmpb
sbb
lret
xor
ds
and
cmp
fiaddl
stc
stos
mov
mov
add
mov
mov
stc
bound
mov
dec
movsb
mov
add
and
cwtl
lds
pop
and
lods
push
cmpsl
jns
jmp
fsub
sub
jge
jl
and
fstpl
jb,pn
loope
adc
mov
jmp
xor
adc
mov
sub
data16
daa
pop
and
xlat
xchg
push
sbb
dec
pop
test
xchg
int3
les
arpl
mov
inc
cmp
push
and
sub
or
sarb
cmp
rclb
xlat
mov
or
clc
fs
sub
lret
aas
dec
arpl
call
les
mov
stc
add
test
out
cwtl
jae
cmc
jp
bound
cmc
cli
repz
dec
dec
pop
std
sbb
mov
mov
push
mov
movsl
cltd
or
push
fwait
lods
clc
mov
jo
fs
cli
outsl
aas
sub
cmp
cmpsl
mov
xchg
pop
mov
leave
gs
sub
inc
andb
cmp
and
mov
adc
cmp
inc
fimull
push
hlt
loope
or
sub
clc
cmp
aaa
movsl
add
mov
sbb
stc
neg
or
pop
sbb
jae
and
xchg
jnp
inc
scas
leave
adc
fldenv
mov
rorl
icebp
hlt
adc
pop
and
mov
frstor
push
push
into
or
js
mov
cmc
test
inc
fwait
mov
imul
jno
push
outsb
lret
std
jl
stc
stos
inc
and
popf
push
mov
mov
jle
adcb
test
outsb
push
pop
cmp
inc
pop
je
divb
adc
hlt
mov
stos
iret
test
push
dec
pop
stos
in
cmp
mov
pop
sbb
adc
or
sub
xchg
add
in
push
and
xchg
mov
jne
adc
out
jae
cmp
xorl
jge
inc
scas
aaa
sub
cli
push
sarb
mov
outsl
cmp
inc
mov
sub
pop
fidivrs
fs
pop
adc
ds
push
fsubr
jns
pusha
test
fiaddl
xchg
mov
out
fisubl
dec
call
ret
fmuls
popf
add
mov
insl
lea
push
pushf
daa
add
push
jb
push
xchg
add
adc
sbb
xor
data16
lahf
fildll
ja
mov
mov
add
repnz
test
shlb
je
sub
lahf
out
adc
pop
ljmp
es
sbb
adc
pop
cltd
pop
xor
cltd
jnp
stos
outsb
lahf
shr
cmpsb
fldl
scas
jmp
in
mov
ret
.byte
into
.byte
.byte
