add
add
push
add
add
add
orb
add
push
add
addb
add
push
inc
add
add
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
inc
add
add
add
add
add
add
js
add
call
add
add
inc
add
add
add
add
add
add
mov
inc
add
in
add
add
inc
add
add
add
add
add
add
enter
push
add
add
inc
add
add
add
add
add
add
lock
add
inc
add
movsb
add
add
inc
add
add
add
add
add
add
sbb
add
fmull
add
add
inc
add
add
add
add
add
add
inc
add
add
add
mov
add
add
inc
add
add
add
add
rolb
xorb
or
add
add
add
push
inc
add
add
add
add
add
add
mov
add
loopne
add
adc
add
push
inc
add
add
add
add
add
add
mov
add
lock
add
xchg
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
int3
fnsave
outsb
gs
imul
roll
rolb
inc
or
mov
in
in
outsl
outsl
in
movb
pop
xchg
push
xchg
mov
cmpb
leave
adc
adc
dec
stc
cmp
mov
fidivrl
mov
mov
jmp
cmp
aaa
mov
testb
lods
divl
inc
cli
cmc
roll
movl
push
pop
sbb
mov
lahf
pop
dec
adc
jbe
mov
popf
es
push
jne
clc
xchg
inc
cld
adc
adc
add
lcall
leave
jo
test
pop
inc
sub
adc
add
fsts
in
cli
add
lcall
push
push
in
bound
cmp
or
pop
adc
jb
outsb
leave
cld
sti
fisubrs
push
scas
xchg
mov
mov
xorb
adc
divl
enter
and
adc
arpl
pushf
jg
inc
jno
pop
adc
add
adcl
push
fiaddl
jmp
rorb
adc
xchg
or
testb
test
les
add
es
adc
jns
cs
ret
in
scas
pop
mov
push
inc
out
insb
es
into
inc
cmp
in
or
test
divb
test
jp
adc
test
popa
jnp
xchg
popa
pop
mov
nop
js
into
aad
cmp
jno
jns
leave
sub
gs
sub
push
mov
aas
mov
ret
cld
test
push
cld
lds
clc
inc
icebp
cmp
and
lcall
sub
mov
sbb
negl
mov
mov
add
ret
dec
shr
pushf
push
stos
shll
test
cmp
inc
je
arpl
mov
popf
imul
mov
jge
dec
pop
mov
xchg
push
mov
jmp
push
dec
lret
push
aam
ret
dec
and
jp
pop
push
xchg
ja
dec
sub
sti
mov
leave
mov
or
and
and
and
dec
xor
fimuls
in
clc
ss
in
orb
mov
inc
stos
subl
mov
ret
or
jmp
icebp
out
or
int
xlat
test
inc
pop
xchg
dec
jge
jecxz
jo
and
mov
and
xor
cmp
popf
ret
ret
repnz
lods
fnstsw
fbld
push
in
mov
pop
dec
mov
mov
mov
xchg
mov
jecxz
dec
gs
imul
xchg
lods
orb
xor
mov
divb
loopne
jnp
ja
out
inc
pop
aaa
rcr
xchg
jne
mov
pop
filds
cmp
cs
xchg
mov
pop
adc
fwait
jae
scas
xor
or
xor
jne
sub
jg
shl
jp
pop
aaa
cs
ss
rorl
jb
ret
test
jp
push
mov
mov
sbb
scas
sbb
mov
mov
leave
js
bound
or
and
repnz
mov
mov
cmc
jl
addl
daa
push
xchg
adc
mov
push
adc
adc
pop
dec
sahf
push
pop
idiv
shr
mov
cs
and
and
int
stos
pop
mov
bound
or
push
pop
push
xlat
mov
movsw
adc
push
mov
call
lret
dec
jo
in
inc
dec
cmpsb
mov
ret
lret
push
daa
leave
mov
and
inc
and
shrl
dec
repz
rcll
cmp
in
clc
mov
and
popf
enter
dec
repz
imul
pusha
jmp
ljmp
push
imul
push
push
cmp
test
iret
jnp
jmp
dec
mov
repz
test
jns
aad
jae
ss
adc
pop
adc
jmp
inc
das
dec
add
xlat
repz
mov
jnp
inc
popa
imul
jmp
mov
adc
sub
push
cmpsl
xchg
scas
jo
shrb
and
repz
sbb
sub
dec
mov
imul
stos
pushl
fadds
jle
adc
mov
stc
mov
cmp
and
stos
adc
std
sti
popf
out
mov
fxch
stc
mov
push
movsb
mov
or
lcall
push
data16
sbb
add
mov
out
test
lcall
into
in
jmp
pop
pusha
lock
push
lahf
ds
iret
mov
jbe
icebp
pop
add
shll
movsl
aas
arpl
adc
aam
repz
xchg
dec
xchg
adc
add
fwait
jge
mov
daa
dec
loop
shlb
mov
cmpsb
jns
xchg
sbb
pop
mov
arpl
insl
lret
mov
shrb
negl
adc
paddusw
pop
mov
add
ret
or
mov
jl
imul
pushf
data16
out
jle
outsl
pop
mov
xor
fcom
pushf
jle
movsl
or
ss
cmp
mov
push
adc
stos
xchg
pop
stos
orl
push
mov
outsl
lahf
cli
pusha
dec
and
push
rcr
gs
test
gs
sbb
ja
xchg
adc
sub
rclb
out
add
daa
stos
pop
mov
lods
enter
jmp
add
cmpsl
inc
mov
xchg
fmul
sbb
aas
xor
cwtl
pop
iret
int3
daa
pop
fnclex
mov
xlat
push
nop
push
fdivr
jle
mov
mov
xchg
inc
dec
pop
ds
pop
aad
into
push
pop
xchg
jg
shrl
sub
pop
xchg
jl
sbb
jp
push
in
dec
or
sub
and
xor
xor
dec
ds
clc
inc
push
xchg
fldl
push
dec
bound
mov
aam
mov
loop
repnz
movsl
imul
lods
mov
xchg
push
cmp
fadd
xchg
andb
or
cmpb
mov
loope
imul
ret
push
outsb
adc
xor
push
sub
aad
xchg
iret
ljmp
dec
popf
xor
mov
fsubl
fidivl
aas
nop
inc
sahf
loope
sbb
xor
pop
call
mov
xchg
in
std
stc
jbe
loope
ret
icebp
popa
adcl
inc
inc
or
int3
adc
xor
push
int
jnp
inc
fs
in
xlat
and
jnp
mov
in
push
inc
call
dec
insb
stc
add
or
mov
jmp
inc
cld
jge
sub
fadds
pop
jecxz
imul
jmp
cmp
pop
xlat
dec
sub
xorb
jp
pop
cmp
rcr
dec
adc
in
xchg
push
es
das
xor
rcll
xor
enter
add
arpl
shll
and
stos
pop
mov
add
outsb
mov
xor
in
cmp
shrl
inc
imul
xchg
and
imul
js
mov
sub
testb
pop
and
push
jnp
ret
or
or
dec
jne
add
inc
das
or
lret
movsl
inc
repnz
add
ja
lods
push
je
out
lahf
pop
and
or
imul
stc
das
and
mov
jne
mov
jmp
cwtl
add
pop
mov
sub
scas
cmpsb
lcall
shll
and
xor
in
inc
jo
into
ficompl
out
js
je
ds
nop
sahf
mov
insl
mov
cmpsb
and
pop
add
add
dec
out
pop
lods
in
dec
xchg
movsb
dec
fisttps
sbb
insb
push
mov
imul
push
mov
std
les
jnp
repz
push
stos
push
idivl
in
jle
es
push
fdivs
ret
cmp
jp
sbb
jns
shlb
fisttps
pop
test
lds
repnz
mulb
adc
adc
hlt
lea
repnz
lds
sbbb
adc
ret
adc
add
add
ficoml
insl
clc
cltd
cmc
sti
lods
out
loopne
and
fnstcw
mov
stc
pushf
ret
aam
push
dec
push
mov
sbb
rclb
imul
in
cmp
fcoml
pop
mov
xor
lahf
test
sahf
inc
push
leave
cmp
sbb
pop
shlb
out
adc
mov
sbb
pop
and
mov
cmp
dec
xchg
and
sahf
jae
cli
jg
mov
cmpsb
es
or
lods
mov
jg
adc
repz
insl
jns
je
jecxz
lea
scas
jg
adc
les
out
cli
pop
roll
in
addl
int3
pop
mov
and
pop
push
jb
call
out
pop
add
cwtl
mov
imul
ret
cmc
call
aaa
lahf
mov
cmp
push
sub
push
js
hlt
iret
ds
xor
jmp
push
push
push
das
in
imul
xchg
mov
xor
aam
out
fcmovnb
imul
lcall
xlat
inc
cmc
jnp
pop
faddp
mov
cmp
std
jg
mov
ret
fsubrs
lock
pushf
sarl
fisubrs
enter
dec
popa
sahf
cmp
dec
jle
adc
arpl
push
aaa
addr16
jae
inc
add
sbb
and
adc
pop
inc
xchg
mov
enter
mov
mov
out
sub
jmp
fidivrl
aad
pop
inc
inc
adc
testb
cmp
dec
cmp
fwait
std
rorl
inc
fimull
xor
xor
scas
aas
inc
rcl
pusha
test
sbb
ja
fstl
push
inc
lret
jnp
mov
fs
cwtl
dec
dec
cmp
push
std
sbb
push
fsub
adc
js
pusha
mov
int
adc
push
mov
icebp
jmp
scas
int3
fisttpll
inc
sub
mov
cltd
inc
bound
dec
push
jno
pushf
pop
imul
fsubp
bound
push
push
pop
subl
xchg
push
cmp
jo
dec
dec
ss
orb
mov
and
hlt
jmp
add
adc
and
push
aad
and
add
push
dec
lahf
xchg
xor
leave
sub
jne
cltd
dec
dec
imul
push
clc
pusha
outsl
or
add
roll
lahf
clc
fsub
rclb
repz
add
sub
rorl
es
inc
inc
add
xor
lods
movsb
push
sub
mov
icebp
cmove
jb
popa
push
or
incl
pushf
or
push
mov
cltd
sub
mov
sbb
mov
push
mov
mov
mov
data16
jp
xchg
cmp
test
dec
fnsave
jb
push
lea
mov
xchg
pusha
mov
test
fisttpl
xor
mov
mov
sbbb
repz
shrb
jns
adc
adc
je
mov
out
jbe
les
lods
and
into
fmull
repnz
dec
mov
ret
lods
mov
int3
lea
xor
test
xor
adc
jbe
jmp
xchg
into
jmp
loop
jg
jb
das
push
movups
int3
pop
mov
mov
sahf
in
pop
imul
mov
xchg
je
dec
sub
cmpsl
in
fstpt
or
inc
test
out
lret
dec
fcomps
fildl
inc
push
sub
pop
pushw
cmp
xor
sub
out
mov
xor
or
je
push
cmp
xor
mov
xor
pop
addb
mov
dec
add
sarl
dec
not
rol
subb
jmp
xor
aad
mov
sub
jge
bound
aas
mov
mov
mov
mov
and
rcll
pop
push
inc
jg
icebp
jg
and
mov
ficomps
and
lahf
fs
push
js
push
jo
push
xchg
xchg
mov
aam
fwait
in
aaa
fcomp
pop
sub
mov
lcall
cld
sub
stos
sub
push
in
fs
or
fadd
inc
in
aam
push
sub
lea
loope
push
mov
xchg
push
insb
mov
movsb
arpl
inc
pop
std
clc
inc
stc
mov
stos
jmp
fcmovnb
inc
adc
wbinvd
jge
push
rorl
test
fwait
push
fsubs
inc
emms
fs
sbb
aad
in
lret
xlat
pop
mov
pop
popa
dec
test
daa
adc
mov
mov
outsl
mov
scas
pushf
mulb
std
add
inc
loopne
pop
jmp
dec
orl
loopne
sub
call
push
cmc
mov
cmp
cmp
out
mulb
shlb
in
out
int3
jno
pop
inc
adc
lahf
cmp
push
pop
lret
pop
pop
pushf
dec
add
into
lods
divl
lea
lea
ret
es
xor
mov
js
push
hlt
mov
push
daa
mov
dec
pop
mov
enter
xor
dec
out
es
jp
xchg
sbb
mov
mov
mov
push
sbb
xchg
ljmp
pop
stos
dec
xchg
fisttps
adc
xor
popa
rolb
daa
movsb
pop
xor
cmp
fs
xchg
ret
xchg
jmp
xor
shrb
test
dec
es
dec
and
ss
lock
movsb
int
mov
push
jnp
and
and
outsl
popa
stc
mov
mov
xchg
jb
push
rcll
cmp
popl
dec
mov
jae
push
fldl
push
aas
enter
lcall
sub
call
dec
fwait
test
mov
or
mov
pop
movsl
mov
into
inc
mov
movsl
sbb
scas
lock
jnp
cmp
push
fstpl
bound
aad
push
adc
add
into
adc
inc
hlt
scas
shl
mov
mov
add
aas
jg
leave
xchg
cmp
jbe
mov
mov
rcrb
rcl
rcll
repz
xchg
in
repz
sti
sbb
pop
sbb
pop
push
xchg
mov
jg
jmp
xchg
out
sub
lahf
or
mov
mov
and
cmp
fisttpll
sub
push
sbb
test
hlt
push
jae
cltd
xchg
loopne
fistpll
test
shlb
lahf
imul
fcom
outsl
cmp
pop
fisubl
xchg
xor
je
jp
jo
and
fcmovu
dec
test
addb
xor
dec
pop
jne
dec
push
sub
addl
pop
popf
mov
sti
cmp
xlat
xchg
imul
ds
cmpsb
mov
push
cli
mov
xor
cmpsb
push
adc
cmpsl
fisubrs
jo
js
mov
notb
sbb
inc
pop
mov
and
push
inc
mov
mov
dec
rclb
cltd
dec
push
and
add
ret
inc
enter
inc
aad
pop
inc
aam
jns
adc
xchg
je
idivb
cmp
jg
sbb
mov
ret
xchg
stc
outsl
xor
sbb
imul
stos
xchg
xor
sub
int
stc
or
lock
mov
call
repz
push
orl
jne
fstl
fcmovnu
push
lds
out
ja
jmp
sbbb
lcall
lahf
iret
cmp
out
cwtl
cld
daa
mov
or
outsb
cmp
adc
inc
in
jmp
iret
dec
sub
movups
mov
adc
dec
mov
push
adc
testb
mov
cli
cmp
adc
and
xor
mov
inc
jno
shll
dec
loopne
mov
push
sub
inc
and
notb
incb
mov
fisubl
daa
push
pop
mull
add
divb
and
jb
cmp
insl
push
insb
adc
pop
mov
or
and
jmp
loop
sbbl
loopne
imul
jl
fidivrl
mov
sub
call
adc
imul
sub
xchg
cmp
sbb
mov
icebp
jne
cmp
pop
gs
movsb
xor
push
scas
sub
jbe
aas
pop
mov
stos
jnp
fidivl
sarl
aas
in
gs
fmull
cld
pushf
stc
test
out
mov
or
pushf
dec
cltd
inc
leave
bound
call
cmp
jecxz
and
mov
pop
lea
test
leave
jg
rcrb
add
sub
inc
inc
into
sbb
ror
loopne
xor
ds
xchg
cmp
lods
xchg
push
pop
or
imul
fiadds
rcll
jo
sbb
or
bound
lahf
pusha
addr16
and
divb
xor
imul
popa
xchg
jb
roll
push
xor
xchg
push
jno
lods
idivl
sti
or
xor
adc
scas
cmp
roll
bound
fimull
hlt
pop
jne
ret
adc
or
fbld
dec
int
sub
fwait
push
loopne
cmc
gs
jmp
mov
and
lock
clc
nop
and
stos
xor
ficoml
and
scas
or
jle
dec
inc
inc
sub
fcmovu
dec
sbb
mov
inc
add
sub
js
clc
mov
aas
sbb
mov
and
out
sub
roll
push
mov
jmp
dec
pop
cwtl
dec
in
mov
inc
movsb
pusha
loopne
jno
adc
imul
mov
rcll
incl
pop
push
je
incl
add
in
fwait
scas
mov
aaa
das
pop
push
scas
xchg
pop
into
out
xchg
adc
adc
mov
jo
fiaddl
shlb
add
insl
dec
xchg
or
inc
xchg
and
mov
bswap
sub
rcrl
dec
mov
stos
inc
insl
mov
lret
clc
nop
cmp
scas
std
loope
mov
mov
inc
xchg
lahf
popa
outsb
jmp
push
mov
mov
push
jnp
xor
mov
sub
sbb
dec
lods
pop
dec
pop
or
sbb
inc
add
xchg
cmp
push
inc
jne
inc
and
test
mov
xchg
jbe
cmp
push
movsb
dec
pop
ror
sbb
mov
into
imul
jns
sbb
imul
out
push
mov
mov
mov
popa
pop
or
sub
pop
push
push
sbb
mov
insl
and
mov
pusha
or
cs
test
fidivs
and
les
arpl
jne
adc
repz
or
enter
xchg
fadds
sbb
pop
cmpsl
pusha
sub
adc
ret
fwait
or
hlt
pop
cmp
cmp
cmp
lock
movsbl
pop
push
pushf
lock
sub
shll
ds
dec
aaa
dec
dec
jg
les
push
test
out
jnp
cli
add
aam
test
test
inc
outsb
aaa
fiaddl
rorl
inc
adc
and
mov
add
addr16
push
xor
lods
add
lds
inc
dec
sbb
je
rorb
inc
inc
clc
call
fidivl
sbb
mov
ds
repz
jns
popf
data16
aam
bound
test
dec
mov
mov
pop
pop
lea
dec
xor
iret
pop
mov
sub
inc
rcrl
xchg
jmp
mov
mov
add
subb
xchg
jmp
jbe
outsl
or
mov
loopne
pop
fwait
in
or
jb
scas
xor
stos
mov
out
into
mov
mov
xchg
and
rorl
mov
inc
in
xlat
aaa
ljmp
cmpsl
cmpsl
adc
jmp
adcb
fists
xchg
idiv
mov
and
push
scas
out
int
lret
pop
dec
ja
shr
mov
dec
inc
or
fcmovb
mov
cmp
scas
mov
stc
not
mov
sahf
cmp
xchg
mov
xor
dec
dec
inc
in
fidivl
mov
leave
push
inc
adc
test
mov
pop
cs
mov
mov
nop
in
cli
les
sbb
std
cmpsb
jp
xor
mov
cmp
mov
lret
jp
pop
mov
outsl
fldt
lret
inc
or
fmulp
dec
jo
jbe
push
sub
or
adc
add
sbb
xchg
addr16
cmp
insl
mov
fisubrs
xchg
push
dec
aas
fsubr
pop
xchg
push
aam
lods
fldcw
add
or
out
cmc
aad
push
mov
es
std
aam
in
mov
cmp
lock
insl
dec
cld
sbb
out
jle
cltd
hlt
test
xchg
xor
fldt
and
movsb
lcall
adc
cmp
in
mov
test
fwait
std
pushf
movb
rcl
xchg
subl
sbb
out
or
sbb
call
jb
addr16
ror
ljmp
and
jg
jg
fs
subb
add
test
push
sub
mov
out
stos
loope
sti
in
ffree
callw
imul
push
gs
inc
mov
xor
ret
clc
out
pop
lret
shll
push
icebp
jo
mov
arpl
sbb
cld
addr16
or
pop
in
jno
movsl
adc
xor
cwtl
and
cli
aam
or
mov
je
daa
and
mov
fcompl
roll
cmp
dec
ficoml
das
jne
loopne
insl
jp
jmp
and
pusha
aaa
loop
mov
or
xchg
push
popf
jecxz
xchg
cmp
push
cmp
sahf
addb
jnp
sbb
das
nop
mov
jmp
dec
xchg
push
inc
ljmp
stos
adc
mov
and
lret
pop
mov
negb
dec
mov
call
sarb
in
in
mov
clc
pop
mov
loop
jo
cwtl
testb
or
out
mov
ds
mov
les
xchg
aaa
add
mov
out
shlb
pop
rorl
dec
les
mov
stos
mov
mov
sub
adc
sub
icebp
push
movsl
test
push
adc
push
cmpsb
push
add
bound
and
inc
sbb
scas
mulb
cmp
pop
insl
insl
sub
push
outsb
js
ret
mov
sahf
adc
mov
mov
nop
mov
cmp
test
pop
jmp
ret
int3
popa
cmp
and
push
dec
gs
pop
aad
mov
das
int
loop
cvtps2pd
mov
les
pop
out
fcomi
adc
subb
fldl
pop
fidivrs
mov
inc
sub
pop
jmp
push
mov
xchg
bound
lret
lahf
testb
mov
daa
push
sub
cltd
imulb
imul
loopne
aas
insb
jmp
pusha
mov
jle
imul
inc
dec
in
les
ret
add
push
inc
sbb
xchg
and
mov
js
sbb
rcrb
or
xchg
sbb
mov
fidivrl
arpl
push
jbe
mov
and
xchg
mov
mov
adc
pop
decl
xchg
jp
pop
fs
inc
andb
sub
sub
mov
xchg
xchg
or
sbb
dec
cmp
repnz
aas
mov
inc
pop
repnz
loopne
aaa
mov
enter
dec
mov
cmp
add
clc
push
addr16
adc
test
inc
sub
das
mov
xchg
push
sub
iret
cmp
pop
insb
jnp
push
insb
adc
fxch
shlb
cmp
test
loopne
mov
popf
and
sbbl
fcomps
mov
int
mov
xchg
ret
imul
cmpsl
jo
dec
cld
pop
mov
xchg
xchg
push
mov
in
fwait
xchg
test
xchg
and
out
jmp
imulb
stos
push
lret
cltd
fadds
pop
mov
jno
hlt
and
clc
jg
add
leave
faddl
jecxz
aad
insl
jns
in
mov
xor
cmp
fcoms
repz
test
jg
ljmp
jnp
sub
fistpl
test
cmc
mov
xchg
cli
jae
mov
dec
adcb
mov
bound
pop
inc
xchg
in
pop
mov
data16
jb
stos
pop
test
fildl
fists
std
adc
cmpsl
and
enter
frstor
in
mov
ret
mov
imul
cmp
test
lods
inc
and
mov
xchg
je
xchg
add
mov
lock
inc
aad
loopne
aaa
popa
scas
pop
fcmovbe
out
repz
movsb
xchg
rcrl
pop
pop
shlb
lret
cmpb
cli
rcll
pop
adc
adc
xor
and
add
push
std
push
lcall
mov
inc
leave
mov
pop
stc
sub
push
xchg
push
testl
in
lret
mov
js
lea
fstl
inc
daa
push
mov
test
jns
jb
mov
adc
and
call
push
add
xchg
pop
clc
pop
xchg
mov
push
mov
dec
pop
gs
pop
jne
movsl
je
lcall
dec
mov
xchg
repnz
push
dec
and
inc
outsl
jl
repz
dec
out
pop
cmp
add
addr16
movsb
mov
gs
adc
jbe
leave
push
cmp
xchg
scas
lahf
and
mov
inc
scas
sub
and
lds
aas
dec
jns
data16
pusha
rcr
mov
in
fisttpll
jne
test
adc
shlb
pop
mov
ljmp
fistps
sbb
jg
sub
adc
ret
ja
sub
int
adcb
adc
insl
mov
push
popf
add
jle
mov
dec
or
push
sbb
shr
add
iret
test
and
push
inc
mov
lock
pop
inc
sbb
sub
cmp
xchg
aam
lcall
loop
test
pop
bound
ret
dec
xchg
dec
arpl
popa
sbb
push
unpckhps
test
adc
dec
and
pop
les
test
fstp
mov
pop
push
shll
lret
jecxz
jb
cs
cs
ja
adc
inc
push
adc
push
insl
jp
inc
pop
dec
mov
orb
adc
cld
sub
push
mov
repz
mov
movsb
aaa
xchg
mov
out
cmp
mov
sbb
ret
dec
jbe
sbb
push
sarb
or
jno
andl
je
xchg
cmp
mull
push
ljmp
test
xor
lret
sahf
call
loopne
xchg
mov
cmp
or
imul
es
adc
idivl
aaa
mov
or
jno
scas
adc
loope
xchg
push
jns
push
inc
jnp
roll
dec
xor
pushf
cmpb
xchg
xchg
inc
jo
sub
movsl
inc
xchg
cs
add
movsl
mov
add
mov
adc
stos
sbb
xchg
ja
negl
stos
and
mov
std
mov
xlat
icebp
and
add
repz
xchg
cwtl
add
jbe
and
les
fmul
add
loope
pop
out
push
std
sbb
in
xchg
call
push
xor
stos
ror
lahf
dec
mov
fstpt
mov
sub
push
adc
fs
pop
push
movsl
arpl
adc
dec
std
fisubrl
dec
int3
push
push
hlt
enter
loope
dec
or
test
ss
out
mov
mov
pop
mov
push
and
mov
insb
clc
jne
xchg
push
int
jae
xor
jp
in
cmp
cld
adc
sub
cmp
test
ds
insb
cmpsb
pop
mov
das
leave
fists
mov
cmp
xor
mov
adc
sub
xchg
adc
cld
cmp
push
cmp
cmp
and
int3
mov
lds
fucomp
mov
scas
and
js
cmp
dec
push
lcall
xlat
cli
jnp
mov
cmp
mov
sbb
stc
push
test
pop
and
inc
inc
sub
mov
es
push
scas
sahf
rcrl
clc
sti
sbbb
mov
mov
xchg
aaa
xchg
fs
mov
lds
subb
or
and
xor
outsl
adc
jbe
or
lods
into
sahf
in
ljmp
jg
popa
pusha
dec
loope
hlt
push
push
pop
sbb
ret
call
daa
mov
idiv
stos
lcall
sbbb
adc
cwtl
lea
push
outsb
rcll
push
inc
rclb
dec
mov
dec
xchg
das
divb
push
or
pushf
sub
mov
movsb
xchg
pop
jp
inc
mov
inc
fists
loop
dec
mov
shlb
je
mul
jo
or
xor
call
xor
mov
out
xlat
cmp
movsb
sarl
cmp
ds
ret
push
mov
in
orl
mov
and
cmp
mov
adc
iret
movsb
sbb
insl
js
je
shr
out
ljmp
ss
mov
and
fidivrs
in
popa
mov
and
push
jmp
iret
sbb
in
pop
std
rcrl
jp
fnstenv
sub
mov
inc
popa
and
cmp
pushf
mov
jne
push
sbb
jle
pop
enter
pop
sub
shr
push
test
xchg
in
aas
dec
fldt
dec
daa
sub
xor
mov
iret
xor
sub
sbb
add
dec
xor
mov
dec
jbe
hlt
push
jmp
xchg
mov
mov
jnp
mov
inc
lahf
outsl
xchg
out
std
push
sbb
push
out
jo
aam
add
insl
jb
xchg
add
push
mov
outsb
add
js
xor
push
insl
repnz
inc
lods
pop
mov
fwait
loopne
inc
xchg
mov
and
jmp
or
xchg
jl
hlt
add
jecxz
into
add
inc
jle
cmpsl
scas
fistpl
and
stc
int3
or
xor
stc
add
data16
and
xchg
jmp
jge
cs
push
test
loop
mov
scas
scas
loope
add
lods
adc
dec
add
inc
test
push
mov
sub
sahf
push
lret
ss
sbbl
xchg
xor
push
ret
mov
sub
loop
repnz
cmp
scas
shr
dec
adc
idivb
inc
icebp
jne
das
dec
daa
inc
mov
push
scas
out
push
stc
jno
clc
xor
test
es
out
mov
pop
sub
int3
dec
push
fisubs
push
cmp
ret
insb
in
sub
mov
mov
fsubl
dec
adc
gs
das
in
inc
mov
adc
cwtl
mov
fldl
mov
xchg
insl
pop
movb
js
lea
jmp
jmp
lds
repz
push
data16
mov
mov
aad
xchg
dec
xlat
shrl
jne
or
pop
xchg
fldenv
mov
mov
push
popa
cmp
mov
or
sahf
loopne
fwait
or
insb
inc
mov
shrl
enter
cwtl
sahf
xor
mov
sub
hlt
cli
mov
pushf
shll
hlt
rorb
movsb
aaa
or
sbb
outsl
ret
inc
xchg
ja
push
inc
jns
fs
add
push
jge
aam
mov
dec
mov
adc
push
xor
mov
jns
pop
xchg
imul
inc
addr16
int3
push
jle
pop
add
scas
scas
sbbb
repnz
mov
mov
sub
xchg
jb
mov
sbb
aas
dec
mov
sub
and
mov
orb
sub
icebp
jno
mov
sbb
jmp
scas
scas
jbe
sti
push
adc
cmp
fnstsw
pushf
repnz
or
sub
outsb
xor
push
pop
sbb
insb
pop
lock
int
fildl
cmp
pop
push
xor
push
fadds
mov
jp
push
mov
mov
mov
push
sbb
xlat
sub
lods
aad
mov
test
mov
lods
dec
nop
xor
jle
es
stos
aas
stos
jne
fidivrs
mov
jne
rolb
or
jmp
ss
jne
xchg
and
ss
xchg
jge
test
inc
aaa
inc
sti
mov
xchg
xchg
pop
fcomp
imul
lods
sbb
lret
sbb
fcoml
push
inc
push
pop
push
or
jg
push
adc
shl
out
int
xchg
xchg
mov
int
int
int
push
subl
mov
xor
inc
or
sbb
outsl
ret
fildl
jae
mov
inc
aas
adc
fmuls
jl
sbb
xor
test
fistpll
insb
add
adc
test
hlt
jbe
push
push
loopne
jns
stos
out
fdiv
pop
cli
iret
add
test
pop
cltd
mov
xchg
jae
lahf
jecxz
mov
arpl
jp
dec
call
mov
cmp
inc
mov
jb
out
loop
add
into
inc
pop
inc
lea
mov
fildl
cli
cmp
into
fistl
xchg
pop
add
add
shr
pop
repnz
jno
lods
pop
mov
push
pop
leave
pop
jnp
jnp
mov
adc
sbbb
cwtl
sub
or
lretw
add
pop
repnz
pop
cmp
das
and
inc
mov
out
arpl
es
daa
add
push
pop
je
bound
xchg
fdivrs
lret
sub
ja
std
les
jmp
movsl
lock
pop
icebp
sub
push
cmpsb
loop
sbb
add
xor
adc
lods
test
jmp
movsl
mov
jae
jge
mov
loopne
movsb
fcomps
fcmovu
std
cld
cmc
xchg
arpl
xlat
stc
inc
popf
mov
sbb
ret
fs
sbb
xchg
adc
jge
pop
inc
jno
in
mov
test
inc
pushf
or
lods
inc
scas
loope
mov
out
ds
es
cltd
dec
mov
movsb
sub
pop
sbb
out
in
daa
jae
or
mov
and
in
mov
stos
scas
imul
iret
imul
or
out
xchg
or
pop
or
aam
pop
addr16
icebp
and
sub
mov
mov
mov
xor
in
mov
xor
xorb
flds
loop
mov
subb
adc
movsb
xchg
out
jmp
dec
mov
lock
adc
test
xor
adc
cwtl
mov
addr16
scas
add
adc
rol
jnp
aad
hlt
jb
subb
je
loop
pop
jae
cld
inc
mov
rolb
cmp
xchg
push
repz
cs
subl
jl
inc
jne
movl
add
sub
imulb
pusha
mov
popa
ret
inc
sub
dec
xchg
ja
sbb
addb
cmp
sub
daa
mov
or
lcall
sahf
sbb
in
data16
loopne
xlat
out
gs
inc
insb
xor
stos
mov
push
xchg
in
movl
inc
mov
xchg
jecxz
aas
in
lea
subl
andb
outsl
inc
dec
fsubrl
xchg
push
cmp
push
ds
cmp
divl
jne
ret
ja
outsl
es
std
loop
jle
xchg
sbb
subl
jae
xchg
pop
icebp
or
and
out
lods
push
orl
xchg
jl,pn
xchg
add
fisubl
into
movsb
inc
xchg
push
or
inc
out
and
push
ss
fwait
xor
int
cli
cmpsb
repnz
push
daa
cmp
dec
stos
mov
fstpt
jle
aad
jno
mov
jb
and
push
fldenv
pop
dec
adc
mov
pop
lods
jns
pop
add
pop
fwait
and
xchg
cmpsb
aad
sbb
mov
jnp
negl
adc
mov
mov
add
mov
scas
fldl
or
imul
sti
inc
sub
rcll
scas
in
outsb
pop
mov
test
in
dec
add
jb
iret
dec
mov
adc
cmp
jmp
mov
js
pop
stc
add
sbb
mov
repz
stos
dec
xchg
push
ficoml
jmp
mov
mov
pushl
pop
mov
ss
mov
dec
push
jg
int3
loop
in
lods
pop
push
cmp
adc
in
sub
aaa
xor
jbe
data16
cmp
or
jle
push
cltd
push
cmp
ret
xlat
jmp
sub
mov
mov
pop
jecxz
jp
sub
std
rclb
and
pop
add
lret
mov
mov
cmp
or
add
inc
mov
dec
ja
pop
mov
leave
mov
cwtl
push
xchg
or
mov
lcall
or
dec
xchg
xorl
mull
aad
xor
les
push
pop
push
mov
test
pop
pop
push
jmp
or
push
in
gs
push
jo
out
es
testb
pop
and
add
imul
adc
call
lods
push
pop
add
sub
dec
jecxz
pop
ds
mov
xacquire
xor
mov
xchg
xchg
in
add
test
pop
xor
stos
cmpsl
icebp
lahf
sbb
cli
gs
pop
cwtl
or
dec
sti
lods
xlat
addr16
xor
test
add
into
pusha
mov
xor
ret
inc
push
jns
dec
or
xchg
out
sub
imul
inc
jp
jnp
mov
dec
enter
pop
mov
mov
mov
test
test
outsl
sub
cltd
lods
cmp
mov
std
shr
add
adc
fcomp
mov
xor
add
push
jle
add
pop
mov
add
pop
jae
ret
adc
in
scas
pop
jge
std
shrb
or
outsb
test
inc
pop
insb
jae
scas
mov
je
mov
stc
xor
shrb
or
mov
inc
push
adc
push
xchg
pusha
adc
sbb
ret
jno
ret
jno
insl
repz
notb
jmp
fistpl
dec
fmuls
inc
mov
cld
xchg
push
ret
jbe
inc
sub
iret
mov
sbb
subl
outsl
sub
mov
xchg
and
xchg
jb
ja
push
jge
loope
stc
add
mov
test
cmp
stos
fbld
out
cmp
aas
dec
pop
lock
mov
inc
cmp
shll
cld
lcall
scas
dec
lcall
into
sahf
push
dec
ret
test
loope
jmp
jle
lds
push
jnp
mov
dec
jl
in
outsb
xor
ret
stos
mov
jp
leave
push
sub
rclb
adcb
outsl
adc
jle
adc
xchg
addb
inc
xor
in
mov
xchg
loopne
cmp
adc
jns
decl
loop
andb
sbb
add
push
cltd
rolb
ret
dec
mov
xchg
iret
lods
das
push
mov
adc
aas
scas
fnstcw
jecxz
dec
sbb
jo
xor
jne
pop
inc
xor
pop
or
dec
rcr
push
outsb
enter
dec
xchg
push
ret
sbbb
dec
iret
adc
xchg
es
mov
pop
add
mov
add
out
add
into
stos
stc
mov
push
dec
push
or
cwtl
mov
add
sbb
jl
out
shl
dec
and
cmc
fisubrl
jge
pop
or
sub
xchg
mov
addl
aad
mov
and
pop
xchg
jp
or
cli
push
sahf
jmp
inc
mov
xor
pop
xchg
test
pop
cmp
cmp
ljmp
sbb
inc
jne
xor
xchg
xor
pop
xlat
enter
pop
add
and
jmp
or
cltd
test
nop
les
mov
inc
mov
push
es
push
out
adc
into
inc
test
stc
jl
stos
xor
ret
lahf
fcoms
fwait
mov
xchg
mov
mov
fists
and
push
out
dec
ficoml
js
aad
loopne
or
adc
jbe
mov
mov
sti
and
int
push
cmp
push
inc
mov
movsl
mov
sub
jo
cmc
daa
adc
rorl
out
and
stos
xchg
sbb
outsl
lds
xor
add
xchg
jp
lock
js
lret
xor
scas
fwait
mov
and
push
outsl
dec
cwtl
call
add
xor
or
sbb
add
pop
jns
cmp
sbb
or
inc
xor
ret
mov
out
shll
push
cmpsb
pop
cmp
clc
mov
and
cmp
rcll
ss
mov
pushf
jns
imulb
ja
xchg
mov
sub
jne
xlat
call
pop
icebp
icebp
xchg
test
mov
mov
dec
dec
lret
decb
lahf
mov
andl
ljmp
jg
in
aam
bound
inc
xchg
flds
add
push
test
dec
cmp
into
sahf
jno
xchg
pop
mov
cli
movsl
mov
pop
popf
mov
jp
mov
sub
sbb
push
adc
inc
not
mov
lds
rclb
pop
sbb
mov
mov
adc
stc
lret
rcll
movsl
pop
or
icebp
pop
jbe
imul
fs
jnp
adc
mov
adc
test
lock
cmpsl
adc
movsb
mov
aaa
loope
popf
xor
in
js
int3
test
popf
int
test
movsb
add
adc
pop
repnz
in
or
adc
xlat
ror
push
inc
bound
iret
cmp
mov
mov
movsb
mov
push
jae
je
lock
adc
dec
sub
nop
xchg
mov
add
ljmp
jno
out
fadd
lea
jo
dec
adc
cld
mov
in
dec
push
xchg
das
add
mov
fs
dec
lcall
insb
push
push
pushf
arpl
adc
add
xor
pop
fldcw
or
adc
push
call
bound
xchg
mov
das
xchg
pop
aad
cmp
mov
push
add
cmc
add
mov
pop
imul
std
popa
imul
and
xor
insl
js
mov
sub
out
ficomps
imul
inc
add
mov
xor
cmc
pop
inc
pop
std
into
pop
jae
jae
add
js
pop
mov
leave
jle
into
pop
fnstenv
inc
shlb
xor
pop
sarl
or
mov
xchg
testl
ds
xchg
hlt
scas
xor
xor
sbb
or
mov
jnp
sbb
idiv
psubusb
xor
dec
stc
shr
pop
jbe
sub
pop
mov
ficoms
test
sub
shll
je
sti
roll
mov
jns
push
in
call
cmp
sbb
push
pusha
sub
fstl
loope
sbb
push
jg
mov
int
ret
das
test
scas
ljmp
add
jmp
movsb
outsb
outsb
push
sti
das
fmuls
enter
imul
lods
in
aad
push
push
push
movsb
cmpsl
ds
sub
mov
cmp
mov
mov
pop
sub
aam
and
xlat
inc
icebp
adc
jne
jb
lea
mov
sarb
inc
mov
popa
popf
and
sub
pop
xor
xchg
ror
push
adc
pop
frstor
loope
adc
pop
xchg
add
inc
jmp
sbb
bound
add
or
cltd
mov
jle
or
mov
sbb
mov
mov
dec
ffreep
std
hlt
imul
mov
lods
sub
mov
hlt
test
mov
jl
jmp
sbb
fsub
subb
es
lret
mov
out
loop
mov
test
les
aad
clc
push
mov
sub
dec
hlt
and
ds
cmp
mov
xchg
dec
mov
clc
loopne
add
rolb
mov
loope
and
mov
imul
sbbl
shll
mov
test
push
mov
lods
cli
ds
mov
push
xchg
ljmp
or
add
add
cmp
pop
xchg
jl
outsb
and
adc
ja
in
arpl
push
xlat
iret
adc
jge
xorl
pop
out
lahf
push
sbb
sbb
shlb
dec
lret
dec
dec
sbb
fmul
fwait
inc
add
imul
imul
cwtl
into
mov
mov
mov
and
lahf
sbb
mov
cmc
push
inc
fs
xlat
loopne
inc
cmp
fdivs
nop
adcb
cmp
mov
xchg
shll
mov
pop
out
out
sub
adc
cmp
stc
cmp
aaa
in
add
or
dec
pop
inc
sbb
mov
dec
cmp
std
aaa
add
sti
jb
ja
adc
mov
and
push
dec
dec
lods
cmpsb
test
stc
jmp
pop
xchg
bound
or
cwtl
and
xor
ds
repnz
jne
and
sbbl
mov
fs
fstp
out
mov
adc
rolb
inc
addb
and
mov
stos
dec
xor
test
xor
mov
sbb
cld
pop
inc
cmp
mov
pushl
or
cmp
lds
pop
adc
das
push
je
pop
mov
ds
dec
test
push
addl
sbb
sbbb
push
mov
loopne
outsl
inc
cmp
rcrb
xor
cmp
xchg
sbb
push
xor
mov
inc
dec
call
in
cmpsl
push
test
add
rcl
aam
stos
mov
sub
sahf
mov
js
sub
out
adc
pop
fcoms
into
add
mov
call
pop
lock
out
push
rorb
xor
dec
add
cmp
inc
lock
aad
jae
pop
xor
cmc
mov
stos
inc
subl
flds
cmp
lea
sub
loope
lcall
fidivrs
inc
pop
popf
push
clc
shrl
lods
sbb
jg
mov
cmp
insl
mov
pusha
ret
mov
adc
out
jns
call
shlb
subl
clc
test
icebp
mov
dec
jl
sbbl
or
and
fmuls
ds
movsl
xchg
mov
sbb
jl
or
push
mov
mov
ret
pop
test
imul
in
xor
cmpsb
mov
jne
not
xor
cmp
mov
mov
loope
add
add
divl
imul
aam
pop
sub
mov
lds
inc
sbb
mov
pop
lods
lock
test
adc
adc
mov
mov
xchg
push
scas
mov
mov
fdivs
jg
test
pop
pop
cltd
adc
ficoms
mov
cmp
ljmp
std
in
pushl
xorl
outsb
mov
jmp
push
dec
in
pop
adc
push
pop
pop
mov
add
pop
mov
fidivl
outsb
cmp
pop
inc
mov
push
ja
mov
pop
dec
jl
pop
jnp
arpl
pop
stos
dec
flds
push
lock
cmp
aas
inc
std
jmp
out
aam
pop
add
in
pushf
data16
and
push
shrb
sahf
jo
sti
xchg
push
adc
movsb
sub
test
int3
imul
pusha
jns
push
fcmovu
cltd
mov
mov
pop
xor
sub
push
push
mov
test
loop
int
cli
clc
push
xchg
repz
xchg
adc
jecxz
and
push
jmp
push
sub
out
lea
aaa
gs
loop
sub
xchg
out
loopne
aas
sbb
pop
insb
push
mov
push
jbe
scas
xor
mov
daa
addr16
mov
mov
jl
sub
shlb
mov
fxch
test
ja
sbb
xchg
add
sub
adc
mov
push
mov
sbb
jns
int3
jne
sar
and
and
test
lea
sbb
fisttpll
dec
inc
movsl
jmp
fucomp
add
test
or
daa
push
sbbb
pop
jp
mov
sub
xor
ss
lret
adc
push
or
aas
add
mov
push
in
jge
jne
scas
cmp
cmpsl
pusha
dec
ret
inc
icebp
sbb
push
xchg
ja
in
pop
jp
cmpsl
mov
data16
sub
push
xor
pop
push
adc
push
into
std
push
movsl
xchg
xchg
jns
push
test
stos
outsl
push
xor
sbb
test
push
cli
sub
iret
push
inc
push
inc
lea
stos
xchg
movsb
dec
imul
push
stc
cmp
stos
icebp
testb
xlat
dec
adcl
fincstp
add
adc
fwait
orb
mov
lds
or
mov
add
jnp
stos
lcall
sbb
sarb
stos
xchg
cli
adc
add
push
sahf
inc
das
fs
sahf
inc
adc
cmc
dec
inc
pop
mov
clc
aad
xor
push
ljmp
rcrl
jle
call
popa
daa
stc
js
in
pop
or
mov
test
popf
mov
mov
jle
cmp
ss
cmp
stos
adc
cmp
movsl
add
fsts
das
sahf
test
sbb
push
icebp
cmp
jbe
sub
mov
imulb
test
jae
fldcw
int3
adc
fwait
cmpsb
or
push
push
pusha
mov
xorl
inc
adc
ss
xchg
mov
pop
jmp
dec
xchg
sbb
push
inc
ret
and
es
rcrl
movsb
xor
movsl
dec
jo
repnz
lret
out
bound
sub
lret
orl
movsb
scas
insl
je
into
and
pop
mov
jae
mov
ss
or
jmp
adc
cmpsb
mulb
in
stc
mov
test
sbb
push
lea
les
or
sbb
jbe
pop
aas
test
gs
push
mov
roll
repnz
imul
cmp
clc
test
xchg
in
stos
loope
lods
js
mov
cmpsb
xchg
push
insb
push
mov
insl
xor
ficoml
xor
pop
mov
jne
add
add
xlat
fs
jno
dec
xor
pop
imul
mov
mov
push
je
in
ficoml
mov
adc
arpl
out
outsb
cmp
pusha
jbe
inc
setg
mov
outsb
pop
dec
inc
inc
sbb
mov
push
sbb
ds
dec
or
push
push
fstpt
in
movsl
movsb
divb
popf
cli
rorl
xchg
push
test
inc
divl
cli
dec
rcrb
jl
pop
mov
lret
aas
mov
mov
push
fdivs
movsb
jl
mulps
fisubrs
mov
adc
std
and
jmp
popa
mov
bound
push
adc
in
adc
stos
std
xor
scas
movsb
cmp
add
bound
or
adc
rorb
pop
das
xchg
sti
mov
lret
int3
mov
in
imul
insb
int3
jnp
dec
cmp
mov
outsl
inc
fsubr
sbb
pop
test
push
lds
lea
mov
shll
jno
dec
sbb
icebp
fwait
sarb
mov
adc
stc
aas
adc
aam
pop
and
cmc
xor
adc
add
dec
pop
cmpb
jge
xchg
mov
pop
inc
push
fildll
mov
ret
sub
lcall
push
cld
mov
cli
sbb
cltd
sub
jae
call
xor
push
fnstcw
pop
mov
and
aaa
lods
or
mov
pusha
push
mov
lea
xchg
push
es
mov
cmp
sti
xor
mov
mov
cmp
sub
int
jle
lock
sub
cwtl
add
mov
ja
in
outsl
cli
js
push
inc
push
inc
jae
stc
xor
int
mulb
push
jle
mov
inc
mov
mov
popa
xor
shr
andl
mov
dec
push
mov
mov
and
inc
push
fcoms
dec
inc
or
in
sbb
das
xor
shrb
jecxz
dec
lahf
lods
jp
pop
cli
and
add
popa
xchg
push
dec
mov
shrb
repnz
imulb
cld
pop
insb
call
mov
mov
out
hlt
outsb
enter
mov
repz
push
cli
jae
test
in
in
out
or
cmp
sub
mov
daa
or
fisubs
ret
inc
push
xchg
push
pop
mov
je
lock
out
incb
fidivrl
mov
jbe
dec
dec
loopne
mov
arpl
shrl
addr16
inc
shll
mov
mov
and
aas
push
sbb
mov
or
jns
pop
pusha
outsb
rorl
adc
loope
push
cwtl
cmpb
push
jp
pop
sbb
shl
xchg
lds
arpl
jmp
iret
movsb
push
mov
dec
xchg
cwtl
cli
sub
out
stos
mov
sub
fsubs
push
aam
and
dec
pushf
mov
orb
push
push
and
mov
mov
movaps
xchg
lock
jge
mov
mov
je
ret
xchg
jbe
addr16
aas
jg
mov
push
push
idivb
cmpsl
int3
mov
add
fs
ds
imul
pop
mov
jnp
push
ds
jmp
dec
jmp
loope
push
fisubs
inc
jne
out
sbb
imul
jl
lcall
es
pop
out
aam
mov
out
cltd
bound
add
aad
pop
aas
addb
sbb
jo
out
pextrw
stc
int
daa
xchg
inc
xchg
mov
xlat
push
push
insl
pop
dec
lcall
bound
mov
pop
sub
xor
sbb
ret
mov
dec
or
out
jns
stos
dec
or
pop
jecxz
sbbl
cltd
insl
imul
ret
inc
clc
fwait
test
loop
push
lea
inc
mov
in
mov
repz
jno
push
leave
dec
in
mov
and
push
addr16
mov
outsb
and
inc
sbb
xchg
cmpl
adc
inc
in
int
or
loop
cmp
fwait
or
dec
push
sahf
push
cmp
arpl
pop
call
cmc
mov
lock
adc
push
loopne
cmp
mov
fimull
push
inc
sbb
and
xor
push
cmp
leave
jnp
jo
jmp
and
out
push
jnp
cmpsb
xchg
mov
xor
dec
outsl
jge
add
loope
sbb
xor
mov
cmp
or
pop
mov
or
dec
adc
arpl
mov
push
add
sbb
xor
cmp
es
mov
nop
xor
repnz
cli
mov
push
sub
mov
bound
pushf
subb
mov
out
adc
mov
push
jb
arpl
cmpsl
mov
inc
cli
xor
ret
or
mov
bound
dec
mov
dec
lret
xchg
arpl
and
pusha
push
mov
std
testb
push
jmp
fmulp
dec
stc
sub
and
push
ret
jb
arpl
add
push
orb
mov
clc
jo
in
mov
and
rorb
adc
iret
mov
dec
lods
xchg
test
data16
mov
sub
insb
fidivs
add
xchg
or
setg
sub
daa
or
fwait
cmpsl
pop
lahf
pop
data16
and
sahf
sbb
jecxz
sti
jo
mov
jle
mov
jle
insl
and
sbb
xchg
xchg
cmp
and
cmp
add
and
int
roll
sbb
xchg
aam
jno
jmp
pop
xchg
fs
or
and
lods
xchg
inc
pop
in
xor
loope
jecxz
das
ja
jmp
clc
add
xchg
xor
mov
imul
scas
test
xlat
test
movsb
inc
pop
mov
test
aam
outsl
pop
push
aas
insb
sub
push
insb
jl
lds
mov
or
dec
xchg
push
jle
pop
hlt
je
cld
repnz
jg
into
adcl
jae
push
scas
adc
lea
fwait
bound
add
call
out
push
imul
shll
sbb
sbb
adc
iret
popl
jo
into
xor
jne
shl
daa
xor
fsubp
mov
jns
shll
add
push
xlat
in
mov
inc
add
jno
ljmp
shrb
cwtl
cld
add
outsb
fisttpll
jno
stos
nop
insb
into
aad
mov
xor
pop
cmpsb
ret
mov
mov
and
test
pop
aas
jg
and
in
cmp
jne
inc
aam
cmpsb
movsl
lea
pop
pop
dec
ds
or
mov
xor
jno
test
lret
loopne
push
cmp
dec
in
int3
pop
cmp
popf
cmp
xor
adc
dec
das
pop
icebp
mov
ss
data16
js
pop
adcl
popa
xor
js
pop
mov
cmp
lret
jno
jmp
aam
out
and
nop
sbb
stos
ret
test
adc
xor
xchg
jb
mov
jno
shll
xor
xchg
sbb
xor
punpcklbw
test
mov
pop
xchg
lahf
sbb
add
cmpsb
clc
mov
jecxz
leave
xchg
jp
stc
push
dec
or
ja
mov
adc
inc
mov
pop
cmp
ljmp
sar
add
dec
mov
pop
sub
das
xchg
test
add
push
sbb
nop
mov
xchg
push
adc
adc
and
insl
pop
scas
inc
xlat
fwait
xor
std
movd
jo
sub
and
in
adc
data16
push
mov
sbb
xor
ss
nop
sub
or
mov
mov
cmp
ljmp
inc
test
into
fistpl
jp
pop
cwtl
ss
or
setbe
out
jns
pop
mov
adc
pusha
xchg
push
and
cli
mov
add
test
pop
push
xlat
mov
scas
push
movsl
loop
sub
movsb
mov
fdivl
xchg
es
dec
stc
out
es
and
inc
cmp
lock
je
hlt
or
lcall
or
enter
mov
cmc
cwtl
inc
xor
ds
xor
pop
sar
dec
dec
imul
cmp
call
xor
mov
aas
jae
push
adc
out
push
call
repz
inc
jge
mov
aam
jb
cmp
jle
std
rcl
aas
mov
ficoml
mov
mov
dec
shr
inc
sbb
inc
mov
adc
js
xor
xlat
mov
test
les
aas
mov
adc
icebp
mov
push
loop
addr16
and
and
sub
lcall
test
push
pop
pop
inc
pushf
xor
mov
mov
jmp
inc
jge
rorl
fistpll
push
or
fwait
mov
push
mov
or
or
out
aam
sub
pop
test
push
and
inc
mov
inc
jns
fwait
mov
mov
fxch
popa
cld
in
roll
mov
rol
mov
push
jge
pop
orl
es
lea
cli
push
xor
and
sbb
call
inc
push
es
push
loope
pop
pop
hlt
jge
mov
sahf
aas
mov
cs
cmp
push
ljmp
daa
push
jnp
cmp
or
hlt
jns
stc
sbb
loop
iret
cmc
cwtl
add
add
adc
or
fdivr
adc
mov
sbb
outsb
in
mov
test
sub
lds
jo
lcall
mov
cld
add
or
inc
pop
pop
test
mov
loopne
inc
sbb
jmp
insl
sbb
iret
lods
xchg
mov
cmp
cs
imul
cld
pushf
les
sbb
aam
clc
sahf
jnp
sub
add
leave
mov
ljmp
xor
xchg
out
xchg
outsl
xlat
stos
adc
int3
das
in
cmc
test
leave
sub
jp
cmp
lock
dec
mov
lods
jg
and
ljmp
jle
lea
scas
xchg
cmp
mov
daa
mov
fsubrl
jbe
sbb
nop
fwait
mov
mov
cmpsl
jnp
shll
or
sarb
push
pop
stc
rol
mov
pop
stos
mov
ljmp
es
sub
sbb
rcr
pop
jmp
das
push
lds
jnp
pop
ljmp
bound
outsb
in
icebp
mov
pop
mov
shrl
faddl
test
int3
jnp
dec
bound
or
gs
ss
jge
xchg
pop
jae
out
addb
outsb
add
or
shlb
sub
xlat
xchg
sub
sub
sbb
pop
repnz
fnstsw
cmp
inc
fnstenv
mov
adc
fdivs
jp
jle
and
mov
into
jp
cmc
cli
xor
dec
sbb
push
xchg
push
ret
xor
cltd
fisubl
notl
daa
into
cltd
popf
flds
sub
push
int
adc
pop
inc
pop
mov
loopne
lret
mov
loop
mov
mov
jb
pop
dec
mov
xorl
mov
popa
mov
adcl
lret
jne
and
jg
mov
fldenv
jmp
stc
jg
iret
ret
add
jge
push
lahf
sub
add
cmp
aam
inc
xlat
adc
add
orb
or
jns
nop
xchg
add
insl
out
push
jb
jno
stc
xchg
outsl
out
icebp
pop
in
inc
enter
mov
dec
mov
jge
xchg
cmp
cmp
mov
ret
mov
lea
dec
push
add
repz
lds
lret
pop
mov
enter
scas
stos
adc
lea
enter
mov
jno
mov
pop
aad
inc
xchg
push
push
cmp
adc
enter
leave
fs
scas
mov
or
adc
mov
arpl
push
or
adc
fisttps
mov
xor
lea
xchg
mov
jl
mov
add
sub
sub
int
xlat
lcall
cld
aad
int3
mov
push
es
iret
icebp
and
shlb
in
mov
repz
sbb
fs
mov
neg
icebp
xchg
jle
xor
and
mov
xchg
mov
inc
mov
xchg
cmp
xchg
sub
xor
aam
push
mov
imul
popw
rcll
cld
enter
sar
pop
jge
clc
lahf
js
push
cmp
imul
pop
sbb
rcrl
lods
loopne
mov
lock
mov
dec
call
movsl
dec
out
popf
mov
sbb
lcall
push
insb
mov
jecxz
mov
inc
jl
lcall
add
jae
daa
inc
jg
popa
mov
sbb
jg
inc
pop
les
rcr
lret
jo
cmp
idivb
push
inc
mov
inc
mov
dec
xchg
jne
aaa
sub
sbb
push
mov
notb
or
data16
aad
or
rcrl
clc
push
scas
icebp
jge
xlat
mov
cmp
and
shll
gs
jmp
icebp
jmp
iret
shlb
stc
dec
bound
inc
rcrl
add
pop
orl
ja
leave
ljmp
insb
ljmp
lret
cmpsl
testl
pusha
inc
lret
push
inc
add
in
popf
and
ret
enter
lret
inc
pop
test
xor
jle
lea
insl
int
dec
jae
pop
mov
pop
pop
cmp
mov
rep
mov
sti
loope
mov
jecxz,pn
sbb
xchg
popf
xor
pop
sub
push
iretw
imul
stc
and
fldl
out
jmp
in
gs
xchg
jae
icebp
mov
xor
aas
and
pop
cmp
std
stos
popa
int
sti
push
outsl
lods
repnz
and
dec
pop
mov
daa
js
popa
push
dec
dec
insb
in
repz
stos
gs
test
sub
repnz
sbb
out
out
imul
inc
call
mov
inc
push
rorb
xchg
push
rep
js
sbb
lds
cmpsl
pop
test
negl
insl
sahf
xchg
aaa
daa
clc
push
in
adcl
flds
in
int
loope
jp
out
adc
xchg
rolb
je
xchg
sub
jp
or
fdivrl
rcl
fmul
data16
mov
int
enter
cmpsb
call
xchg
punpckhwd
repnz
jl
fwait
xor
dec
cs
inc
jge
mov
cmp
jl
mov
movsb
loop
xor
mov
xor
pushf
adc
inc
cltd
adc
imul
scas
or
jecxz
mov
enter
adc
cmpsl
adc
pusha
push
das
sbb
int
ss
lea
dec
out
sub
cmp
xor
enter
and
dec
mov
mov
xchg
std
push
xchg
inc
mov
ret
mov
dec
mov
jmp
push
mov
cmp
or
aas
jle
or
lcall
mov
pop
lcall
push
mov
adc
imul
mov
sub
rorb
movzwl
popa
ss
mov
lahf
mov
mov
test
mov
cmp
pop
push
es
sub
lret
mov
mov
in
clc
hlt
lret
mov
pop
inc
scas
pop
push
inc
lods
ljmp
sahf
jbe
and
mov
xor
jne
jmp
sbb
pusha
addb
cwtl
push
into
mov
loop
adc
jge
and
mul
mov
out
jb
xchg
adc
popf
clc
movsl
sahf
in
std
js
popf
pop
rorb
xchg
fnstenv
xchg
arpl
repnz
push
cwtl
inc
pop
jne
push
xchg
aas
pop
sub
or
pop
cmc
fcoml
xor
xchg
add
bound
cmpb
jnp
sub
test
xorb
movntps
and
test
fldl
cli
dec
add
mulb
add
cmp
sub
adc
ret
dec
les
cwtl
mov
adc
push
mov
insb
xchg
mov
sbb
inc
stc
aam
jb
jg
fcoms
scas
adc
add
enter
pop
lret
mov
ss
and
ja
stos
dec
in
les
lahf
stc
mov
lods
adc
dec
jg
cmc
jb
jbe
mov
fcompl
xchg
jbe
rol
inc
mov
rorb
cli
fnsave
dec
ljmp
pop
aas
mov
push
jo
call
in
stos
test
cmpl
pop
push
mov
xchg
dec
mov
push
xchg
fiaddl
sti
mov
lahf
sbb
sbb
dec
adc
dec
test
cmpsb
inc
adc
insl
popa
jl
fldenv
insb
xor
xchg
in
sub
ds
fldt
mov
test
imul
loop
jl
loopne
dec
in
fstp
pushf
pop
divb
inc
jns
sbb
mov
scas
and
int
mov
jb
mov
mov
stos
mov
mov
es
cwtl
call
nop
or
cmp
loop
mov
inc
xchg
pop
sbb
push
pop
sbb
lds
push
filds
stos
push
dec
pop
icebp
sbb
shll
les
cmp
jno
push
push
cwtl
inc
jbe
cmp
lret
ss
ds
dec
sbb
xchg
sarb
cmpsb
push
jne
cmp
xlat
nop
jge
stc
mov
or
inc
sub
inc
int
xchg
popa
mov
int
cli
jmp
mov
ljmp
cmp
sbb
pushf
add
jb
pop
dec
pop
lock
sbb
popa
xchg
stos
or
inc
insb
jle
rorl
mov
xorb
mov
fisubl
push
dec
les
or
mov
push
mov
dec
jmp
xchg
test
inc
outsl
jg
lds
push
push
rclb
jecxz
pop
xor
mov
enter
repnz
stos
aad
mov
xchg
stos
js
cmp
jl
cmp
sub
mov
lcall
fildll
cmpsl
fdivl
std
xor
jno
pop
les
cli
add
inc
push
rcrl
add
adc
mov
shlb
cmpsb
loop
sub
add
inc
sahf
and
pop
fidivs
cld
out
mov
arpl
fadd
dec
xor
std
jne
icebp
mov
pop
cltd
frstor
jecxz
in
mov
sub
in
mov
pusha
pop
jp
dec
in
xor
mov
add
jecxz
or
cmp
incl
cwtl
hlt
jne
push
inc
test
fdivrl
cmp
sbb
movsl
add
pop
jmp
rorb
xchg
int
add
out
pop
adc
out
mov
cs
jne
push
movl
push
popf
or
leave
iret
xor
ret
push
xor
cmp
mov
test
popa
in
fwait
adc
aad
aaa
xchg
lock
push
ds
push
adcb
cld
inc
cmpsb
cs
jnp
mov
stos
sahf
cmp
dec
notl
pop
inc
pop
xchg
sbb
and
insl
popf
cmpsb
ret
fs
pop
lret
mov
mov
cmp
push
jecxz
lret
mov
mov
inc
xchg
xchg
xchg
int
dec
jmp
ljmp
imul
bound
das
lret
inc
xor
xor
pop
fimull
shr
pop
dec
add
mov
fwait
mov
mov
xchg
sbb
add
inc
sub
push
jl
mov
repnz
pushf
gs
pop
sub
push
les
or
lahf
fbld
xchg
scas
movsb
adc
mov
pushf
leave
bound
jnp
pop
adc
outsb
mov
ds
mov
cmp
xor
rol
notb
fwait
mov
push
sub
and
cs
lods
in
mov
sub
and
paddq
aaa
jnp
clc
iret
cs
and
es
xchg
enter
lea
sbb
out
lret
aaa
jmp
sub
addps
pop
pop
pop
adc
shll
dec
pop
sbb
xchg
std
xor
gs
cs
push
push
mov
jecxz
roll
lea
push
in
mov
push
or
and
cli
mov
fnstsw
dec
pop
gs
inc
push
fdivp
fisubs
sub
aas
mov
mov
xchg
rclb
mov
repz
adc
mov
push
jmp
mov
stc
ffreep
repnz
xchg
mov
adc
inc
pop
test
in
cmp
pop
lea
fwait
adc
mov
sub
jp
fsub
xor
jo
iret
adc
add
push
xor
mov
xor
jp
push
push
add
daa
push
cmc
or
and
xor
jb
mov
test
inc
out
fwait
sub
movsb
xchg
sahf
iret
inc
dec
das
push
stos
inc
bound
mov
xlat
or
mov
push
sub
aas
dec
icebp
fistps
dec
stc
ds
xor
bound
data16
in
fs
pop
call
mov
xor
push
mov
push
cmp
push
push
std
mov
loopne
dec
mov
fidivs
mov
test
xorb
popa
loope
xchg
inc
outsl
sbb
test
add
lcall
out
dec
imul
fisubl
aaa
test
mov
iret
mov
fiadds
leave
mov
lcall
mov
xor
inc
mov
sahf
mov
dec
inc
enter
pop
mov
adc
and
out
mov
fidivl
aaa
jge
sbb
mov
bnd
repz
sbb
and
cltd
and
movsb
add
xor
mov
pusha
movsl
inc
pop
pop
cmpl
orl
lods
int3
inc
outsl
idivl
enter
scas
and
test
out
push
mull
cmp
mov
push
mov
jno
cld
lock
lds
jg
bound
inc
insb
lahf
or
jno
dec
lahf
mov
pop
aad
enter
ror
xor
les
cmpsb
aam
scas
adc
xor
pop
add
mov
push
adc
dec
fidivrs
test
dec
out
jae
push
xchg
call
daa
mulps
rcrl
enter
ljmp
clc
or
rolb
lcall
mov
gs
test
mov
add
and
aaa
mov
shl
ret
rcl
insl
and
fstpt
cmpsl
mov
push
jl
sbb
dec
or
push
add
mov
insb
test
mov
cmpsl
rorb
or
sub
idivb
bound
les
bound
and
rol
scas
push
cmpl
out
xchg
pop
pop
xor
jmp
sbb
sahf
aas
pop
out
ja
inc
out
rcrb
insb
stos
pop
clc
imull
inc
pop
in
sub
lret
add
inc
ret
add
mov
movsb
aam
aas
dec
jge
mov
fwait
clc
jecxz
ss
push
out
and
sbb
lods
shlb
jmp
vmovss
inc
loopne
cld
xchg
xor
xchg
dec
dec
rcl
or
decl
int3
bound
lds
pushf
fs
lds
pop
idivl
das
loope
push
mov
jg
sbb
mov
mov
iret
jp
sahf
sarl
movsl
mov
stos
xor
cmp
cmpsl
dec
pop
cmp
fnstcw
inc
shll
push
inc
add
jecxz
pop
subb
lock
inc
mov
sbbb
popa
push
xchg
push
add
lds
xor
mov
jge
inc
aam
data16
pop
std
xchg
cltd
dec
mov
mov
sub
mov
adc
lahf
mov
out
push
in
out
xchg
loopne
fdivrl
nop
inc
iret
hlt
testl
outsb
loop
mov
inc
jl
outsl
adc
insl
aam
xor
or
add
inc
mov
jl
inc
add
std
sti
enter
add
movsb
jle
shr
mov
xor
aad
jno
adc
xor
sbb
push
fldt
cmp
pop
nop
or
insb
in
mov
gs
push
scas
enter
sub
mov
dec
movsl
add
je
jl
sub
fwait
push
test
or
aas
mov
lret
xchg
adc
xchg
test
xchg
shrb
or
jmp
movsb
mov
adc
cmp
enter
pop
dec
mov
mov
pop
lea
push
pop
jns
xchg
pop
adc
lock
mov
les
mov
fistpll
mov
push
ret
pop
jl
add
and
pop
xlat
jbe
xchg
insl
cs
lret
cmpsb
mov
lret
ja
xor
dec
in
sub
mov
insl
dec
mov
cmp
leave
fstpt
push
fidivl
sub
icebp
jae
mov
fsubl
shll
mov
mov
loop
add
rcrb
ss
enter
es
xor
mov
out
pushf
les
sbb
sbb
dec
xchg
mov
sti
jo
pop
and
js
jo
daa
addl
lea
icebp
mov
js
in
pop
or
scas
ljmp
ja
imulb
js
mov
add
mov
cmc
cmp
movsl
jle
cmp
popa
jo
pushf
mov
shl
pop
xor
pusha
fwait
mov
jbe
fisttpl
std
insb
cmpsb
push
test
xor
test
xchg
inc
dec
leave
es
mov
mov
cmp
lea
daa
inc
and
mov
adc
cmp
pop
add
shrb
popf
flds
cmpsb
mov
loop
dec
xchg
xor
cld
repz
loope
jo
popa
mov
cmp
pop
out
ss
hlt
es
ss
adc
dec
jecxz
loope
or
jnp
add
mov
cli
fsubl
push
stos
loopne
mov
aaa
in
or
xlat
add
fsubs
lcall
cltd
clc
push
mov
stos
mov
cli
data16
fistps
adc
push
out
sbb
mov
sub
dec
arpl
pop
aam
clc
push
adc
shlb
mov
push
add
addr16
mov
fwait
out
mov
jg
sti
mov
add
repnz
mov
aas
jo
test
add
cmpsb
inc
push
xchg
mov
adcb
aam
fdivl
cltd
or
sbb
ret
dec
mov
push
cmp
imul
rcl
push
shrb
pop
test
nopl
push
mov
or
push
add
mov
dec
fnstsw
insb
mov
je
repnz
sbb
add
movsl
mov
lea
pop
inc
mov
test
inc
xor
mov
adc
int3
add
cmp
fcompl
addb
sbb
mov
in
push
outsb
fdivr
or
test
mov
or
xchg
sub
push
insb
adc
push
mov
push
lcall
jbe
pop
mov
xchg
lret
scas
pop
stc
fidivrl
smsw
mov
inc
test
pop
loopne
sub
push
hlt
pusha
popa
mov
inc
frstor
jmp
xchg
movsb
arpl
jnp
xorl
add
cli
das
cltd
in
jo
mov
iret
lea
jne
sub
mov
insb
mov
in
cs
and
leave
mov
cli
mov
mov
xlat
add
xchg
clc
mov
aad
jle
inc
cltd
arpl
nop
loop
mov
inc
pop
pop
push
or
data16
imul
aam
mov
pushf
jge
dec
xor
scas
lea
mov
dec
imul
gs
push
movsl
adc
repz
push
leave
cmp
fistpll
pop
xchg
fwait
call
loop
pop
push
pusha
cmp
adc
add
xchg
cmpsl
aas
aaa
ds
pop
mov
stos
pop
and
imul
pop
jl
cltd
repz
fdivl
or
push
ja
xor
imul
dec
lods
adcb
sti
aas
add
sub
rorl
cld
xchg
xor
mov
aas
enter
or
fmull
out
aad
adc
or
and
jbe
popf
mov
and
testb
mov
fstpt
cmp
ja
loope
daa
out
inc
or
pop
mov
lods
in
mov
rcll
mov
and
pop
and
jecxz
adc
mov
xchg
pushf
lods
jg
subb
aad
movsl
sub
in
push
jnp
inc
sahf
mov
repnz
xor
add
rcr
or
sub
add
push
bound
cmp
scas
sub
loop
rcrb
mov
xor
faddp
mov
push
shlb
jecxz
jo
inc
fld
cmpsl
add
mov
flds
add
cmpsl
jbe
jne
roll
mov
dec
sbb
lods
rcrb
add
movsl
sbb
mov
insl
subb
stc
ss
iret
jl
xchg
decb
les
mov
popf
insl
pusha
mov
jns
sub
jl
ret
out
rorl
lds
imul
mov
imul
push
lahf
jge
dec
cld
pop
dec
jb
cmp
sbb
mov
mov
pop
fdivrl
or
test
popf
insb
aad
sub
inc
sbb
fsubr
jnp
in
fistpl
cmpsb
and
mov
mov
pop
ficompl
adc
std
xchg
ja
mov
mov
dec
lahf
mov
stc
movsl
stc
xchg
jbe
mov
push
or
addr16
xlat
xchg
cld
xchg
sti
dec
std
jp
iret
jge
aaa
es
out
cmpsl
pop
xor
or
and
pop
int3
ret
push
aaa
and
add
sbb
add
jg
sbb
xor
mov
movsl
sbb
sbb
sti
call
push
pop
in
test
insb
push
cmpsb
aam
or
out
cmp
lods
push
pop
into
jns
lahf
and
mov
or
cmpl
xor
pop
push
iret
lock
pop
daa
ljmp
add
inc
loope
nop
outsb
dec
cltd
and
jns
push
dec
mov
xor
iret
sti
popf
mov
inc
cmpsl
mov
sbb
leave
inc
xchg
les
fsubs
jo
sub
dec
ret
and
test
subb
out
cmp
dec
cs
outsb
jmp
popf
mov
lds
mov
jo
inc
push
repz
rclb
or
jg
xor
fdivp
adc
mov
add
push
mov
dec
mov
pop
inc
mov
adc
push
jp
fs
add
jmp
pop
mov
xchg
mov
out
or
test
in
bound
js
sbb
fstp
lret
cmp
push
or
mov
call
fnstsw
stc
js
adc
int3
js
repz
test
add
dec
dec
int
jp
hlt
cmp
outsb
xlat
mov
or
in
adc
std
test
pop
clc
mov
mov
cmpsl
outsl
js
sub
in
mov
sub
push
imulb
lds
mov
daa
or
pop
insl
pop
daa
das
mov
mov
dec
jne
iret
xchg
push
xor
xchg
push
ret
dec
mov
outsb
jmp
dec
cmc
outsl
inc
push
mov
jne
loop
outsb
std
inc
popa
ret
xorl
fimull
mov
xor
xor
hlt
scas
push
jp
adc
mov
inc
lea
push
mov
adcb
push
sub
das
push
shlb
xchg
cmpb
cld
mov
stos
jno
xor
loope
cmp
or
or
pop
in
in
sub
and
js
xchg
xlat
lods
test
flds
jne
into
insb
adc
stos
and
lock
repz
inc
outsl
mov
scas
sahf
cltd
jl
ds
xchg
jmp
call
fcomip
and
nop
sub
pop
mov
jnp
movsb
iret
leave
jp
pop
pop
stos
rcll
out
sub
into
mov
bound
fdivrs
dec
lds
add
mov
mov
cmpsb
je
jp
adc
rcrb
jae
mov
mov
and
in
mov
pusha
push
push
sbb
add
push
mov
mov
shlb
or
enter
xchg
sarb
and
pop
push
mov
inc
add
push
addr16
xchg
or
push
repnz
mov
push
mov
jne
dec
cwtl
jg
shll
push
and
cmpsb
test
pop
add
fsub
mov
jecxz
rcrl
shrb
lret
test
cmp
pop
ficompl
loope
pop
test
out
aaa
hlt
xor
loop
rorb
or
mov
incb
cmp
push
cmp
mov
and
insl
cs
cmp
sbb
dec
ror
lret
hlt
frstor
xchg
sub
jmp
xor
xor
and
adc
nop
roll
sub
cmpsb
jns
sbb
jp
add
lcall
push
xchg
aas
fwait
mov
fsin
nop
jo,pt
push
in
sbb
fdiv
fldl
inc
movsl
outsl
ja
movsl
roll
cmc
mov
sbb
test
daa
test
stos
into
flds
add
sbb
jnp
es
sub
les
mov
jecxz
push
xlat
aad
cmc
fisubs
lret
shl
in
cmpsb
cmp
push
js
sub
adc
cmpsl
jbe
dec
arpl
push
cmp
ret
out
jmp
dec
cmp
jns
pop
pop
shrl
fistpll
outsb
pop
sub
jno
or
xchg
fwait
lea
mov
icebp
and
ss
cs
dec
adc
addr16
dec
sbb
xor
imul
lds
sbb
dec
imul
sti
popa
lret
dec
pop
lock
insl
leave
dec
imul
push
add
inc
lock
insb
je
rcrb
lret
imulb
jmp
je
and
std
mov
inc
pop
mov
and
adc
push
test
jns
jmp
pop
push
sub
lret
push
lock
aad
loop
fst
scas
adc
int
shrb
jb
xchg
cwtl
or
popf
cmp
fidivs
xor
dec
mov
fmull
shlb
in
mul
icebp
sbb
adc
push
test
pop
lock
cld
sahf
lret
sub
xchg
in
out
pop
xchg
push
inc
xor
pop
inc
xlat
xchg
test
and
imul
in
dec
mov
jae
mov
jno
into
lock
mov
in
fucomip
inc
jne
or
add
xor
cmpsl
adc
mov
mov
loop
inc
sub
fimull
xchg
push
jb
pusha
das
inc
xchg
int3
fildl
and
lods
dec
mov
in
lods
push
inc
imul
imul
jnp
mov
out
jecxz
getsec
add
sub
lods
lahf
stos
ret
je
dec
stc
testl
sbb
lods
pop
push
push
jge
in
shll
jmp
lahf
cltd
mov
leave
xchg
push
sub
lods
mov
mov
xor
insl
inc
lret
mov
nop
mov
or
insl
cmp
outsl
fs
cld
inc
xchg
xor
xchg
lcall
add
data16
lds
aas
dec
jo
and
mov
fidivl
icebp
mov
movsl
cltd
adc
xchg
xor
jl
lods
mov
add
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
inc
add
in
add
adc
push
add
add
add
add
add
add
enter
