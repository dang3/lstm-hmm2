push
mov
or
addr16
inc
clc
rcrb
test
sub
add
shl
insb
daa
mov
out
push
iret
mov
lcall
addr16
cmpl
loopne
ficoml
xchg
sub
sub
shrb
push
xor
xor
ret
lock
pusha
ret
push
jbe
jl
in
adc
jmp
insb
loop
not
popf
xor
pop
and
push
or
cmpsl
and
cli
sub
ljmp
cmp
stc
sub
pusha
mov
xor
insb
jbe
add
cmp
mov
cmp
test
jns
lds
dec
sub
mul
pop
inc
es
mov
lods
push
lods
adc
add
sbb
xchg
pop
mov
jge
push
in
mov
inc
inc
xchg
mov
rclb
or
mov
pushf
lea
call
call
in
inc
xor
ljmp
add
scas
mov
pop
fs
pop
pop
ret
push
std
add
ret
test
dec
std
pop
jo,pn
adc
popa
xchg
pop
cltd
clc
es
call
ficompl
in
cmp
xor
dec
sub
inc
test
jno
lahf
outsl
fcom
xor
mov
xchg
push
inc
cmp
pop
test
movsl
cwtl
cmc
sbb
push
jo
jg
fimuls
repnz
mov
movsb
xchg
xor
mov
mov
or
sub
lods
mov
mov
mov
cmp
xchg
loop
dec
mull
jg
pushf
lea
jb
bt
bt
jmp
mov
push
ss
push
popl
push
adc
fxch
shll
enter
cli
es
pop
shlb
inc
ja
and
or
aas
adc
sub
xchg
push
movsl
xchg
add
mov
mov
scas
lods
insb
mov
lods
mov
nop
add
mov
out
or
or
lds
xlat
cmpsb
adc
xor
sbb
mov
scas
mulb
cmp
add
popa
test
dec
in
cmpsb
adc
or
sub
pusha
pushl
ret
call
movb
mov
call
mov
xchg
js
mov
mov
outsb
dec
dec
and
call
dec
ror
in
push
addr16
mov
dec
add
popl
jns
mov
insl
mov
or
ja
mov
stos
and
lds
pusha
jb
jecxz
ljmp
cs
leave
lret
mov
mov
cmp
in
pop
out
cmpsl
pop
or
and
dec
idivl
ss
fisubrs
mov
addr16
imul
daa
push
ljmp
dec
addr16
sub
test
shlb
or
scas
cmc
popa
push
or
push
pop
pop
cmpsb
pop
mov
sbb
ret
xor
enter
mov
call
clc
in
movsl
cmp
mov
data16
pop
sbb
test
ret
add
out
pushf
push
jnp
sbb
mov
jns
or
lcall
sub
mov
pop
fidivrs
in
jle
loopne
push
bt
les
rcrl
or
sahf
jbe
jo
fwait
aam
cmpsl
cwtl
xchg
test
sbb
inc
hlt
dec
push
jnp
pmaxub
push
cld
pushf
or
jo
mov
sub
lret
mov
pop
pusha
ret
mov
jl
fisubrl
inc
mov
mov
sbb
loope
mov
call
xchg
or
or
or
jne
xchg
lret
cmc
out
insb
pop
fimull
cld
cmpsl
push
std
mov
sbb
xlat
and
inc
and
and
adc
lea
jmp
adc
jbe
sbb
out
rol
movsl
xchg
pop
push
cmc
cwtl
or
cmpsb
add
mov
insl
into
jnp
and
jo
xor
add
jp
popl
loop
movsl
add
shl
js
cmp
xor
loopne
in
add
and
and
xchg
sub
mov
stos
ret
mov
test
les
out
xor
push
mov
inc
add
mov
movb
pusha
sbb
mov
lret
xorb
xor
nop
mov
bound
subb
mov
push
and
inc
and
shlb
iret
cmp
sarb
lock
inc
cmp
cmp
xor
out
daa
sarl
stos
pop
push
leave
cmp
xor
push
mov
adc
mov
aad
jle
sub
wbinvd
inc
aad
in
inc
pmulhw
jae
pop
sbb
mov
popf
ret
cmovs
mov
repnz
pop
rolb
movsl
in
aad
xchg
dec
fstps
jne
or
popa
push
mov
and
push
mov
shrl
jge
adc
loopne
loopne
add
ljmp
jae
dec
or
arpl
cmp
or
in
mov
cmp
add
loopne
sti
clc
xor
push
jmp
mov
out
sub
push
jmp
repnz
inc
jo
push
sbb
pusha
sbb
adc
outsl
cmc
out
mov
push
les
ret
mov
ja
loop
movsl
jp
lds
out
mov
mov
and
mov
loopne
mov
inc
mov
mov
mov
jmp
jmp
aad
adc
aam
mov
shlb
pushf
cmpl
cmp
clc
mov
loope
sahf
push
lcall
scas
call
imul
movsl
imulb
call
sub
mov
add
je
xchg
fidivrs
push
mov
jmp
dec
cli
ljmp
js
push
ret
dec
enter
aad
int
in
fnstcw
popa
paddsb
cmp
test
ljmp
mov
sbb
stos
cmpsb
jmp
nop
mov
xorl
push
dec
aaa
and
mov
es
adc
sbb
push
out
cmp
adc
xor
pop
jle
hlt
stos
in
cmp
out
jnp
mov
lret
mov
lds
mov
pop
inc
mov
xor
mov
ret
int
jg
idivb
icebp
scas
push
addr16
jae
in
pop
or
and
je
fcoms
push
leave
adc
and
adc
or
and
mov
imul
js
jo
popa
lcall
adc
iret
out
in
push
ss
add
leave
sub
push
ja
pop
and
jo
pop
scas
leave
es
push
xchg
jecxz
je
nop
push
mov
pop
mov
push
cmp
pusha
and
leave
add
mov
repz
and
mov
out
push
jmp
xchg
rcrb
fcomip
scas
pushl
lea
jne
clc
mov
sar
shl
sub
mov
movzbw
mov
cmp
sub
bt
clc
pushf
movb
pushl
popl
cmp
cmp
call
cwtl
loopne
scas
jno
subb
mov
fs
and
and
pushf
cmp
bound
mov
mov
clc
mov
testb
pop
push
fstpl
pop
and
je
rorb
mov
cmc
push
lods
popf
mov
mov
cmp
sbb
hlt
fnstcw
sbb
stc
movsb
cli
enter
fnstcw
xor
or
aas
pop
pop
inc
mov
sub
mov
mov
xchg
mov
push
enter
mulb
aam
jns
fcomip
shll
pusha
and
cmp
or
das
and
add
mov
mov
mov
clc
add
mov
xlat
fcoml
out
arpl
je
fidivl
rorl
mov
fs
js
jb
call
or
cmp
fdivrl
loop
scas
mov
xchg
jb
mov
out
pop
sub
push
std
cld
inc
fdivrp
fstpt
xor
xlat
imul
inc
pop
cmc
jno
outsb
jns
pop
addr16
mov
testb
or
dec
and
sarb
mov
push
idivb
and
mov
adc
iret
mov
repnz
movb
pushf
lea
jne
setne
bswap
movb
mov
bswap
push
not
call
xchg
fcmovne
jl
or
insb
push
dec
sub
cli
stc
mov
push
cmc
pop
pusha
sbb
loope
pop
int3
test
sahf
ds
dec
orl
mov
outsl
popf
pop
inc
ret
xchg
mov
das
hlt
add
inc
inc
mov
sbb
mov
test
in
and
inc
cli
and
xor
cmpsl
push
add
daa
sarb
sbb
jmp
cmp
pushf
lea
je
pusha
cmp
jmp
sbb
push
jle
dec
stos
pop
in
jne
pop
inc
add
dec
mov
sbb
cmp
xor
add
andl
jno
lret
mov
jmp
scas
mov
scas
add
lock
xchg
mov
push
cmp
sub
xchg
mov
mov
cmp
fwait
cld
test
test
outsl
scas
leave
adc
lods
add
and
in
xchg
jnp
cmpl
mov
push
ja
bound
cwtl
mov
pop
jo
mov
in
or
jo
and
ret
leave
jbe
mov
mov
pop
mov
in
xchg
mov
int3
andb
lods
xchg
xchg
xorl
dec
cmp
fiadds
push
es
mov
push
or
ds
adc
out
stc
sub
push
jecxz
cs
xchg
ja
ret
push
mov
inc
sarl
xchg
jnp
fisubl
pop
adc
leave
outsb
shrl
das
rcrb
push
or
gs
lcall
dec
adc
rorb
test
push
add
not
inc
jg
sub
call
jno
push
pushf
call
push
add
icebp
shlb
sub
cli
ffree
cmpsl
mov
mov
and
mov
push
js
mov
std
jne
js
sbb
inc
push
pusha
sahf
fcoml
inc
xchg
mov
movsb
jae
pushf
out
cli
das
push
push
sti
mov
mov
insb
sbb
mov
mov
shlb
and
xchg
push
in
inc
jmp
test
xor
es
xchg
divl
subl
dec
cmp
cld
cmc
ljmp
icebp
xor
imul
icebp
int3
push
icebp
inc
repz
cmp
inc
pop
jae
mov
or
xor
nop
std
mov
pop
push
sbb
xchg
sti
and
adc
adc
call
sub
push
and
mov
cmc
mov
jge
aaa
ljmp
xor
xor
fistps
icebp
lods
pop
or
push
mov
scas
pushf
jmp
jno
mov
mov
mov
ds
xor
add
call
insb
and
dec
adc
add
ds
in
int
into
stc
pop
jne
sbb
and
lds
sbb
or
cmp
sub
repnz
adc
mov
imul
dec
mov
fsubs
jge
jle
in
call
mov
pop
jge
fstpt
fimuls
sbb
add
cwtl
push
jmp
mov
loope
orl
pop
or
call
jns
imul
fcmove
sub
movsl
les
mov
jb
xor
push
arpl
fadd
imul
push
enter
bound
int
icebp
inc
mov
fisttpll
pop
fisubrl
sar
fstpt
test
mov
push
adc
fimuls
and
mov
add
loopne
movsbl
adc
xor
xchg
lcall
aad
push
out
mov
repz
push
or
mov
inc
xor
ljmp
jp
push
inc
inc
pop
and
test
pushf
push
jle
cmp
lods
loop
xchg
cmpsl
int3
repnz
outsl
cmp
add
ss
mov
aam
popf
sti
mov
rol
stos
sti
xor
out
lcall
rcll
push
lret
lahf
pop
lahf
je
mov
push
stc
inc
xor
test
xor
out
pop
inc
xor
cmp
sub
cmpl
mov
out
mov
sbb
bt
pushf
add
jmp
inc
lahf
jl
and
leave
mov
xor
pop
dec
cmp
in
iret
shrb
dec
jmp
and
jo
xchg
fwait
out
mov
cwtl
ds
lcall
push
into
mov
das
movsb
xchg
rcrb
idiv
icebp
bound
rcrb
arpl
or
je
xchg
pop
adc
jmp
roll
cld
in
dec
dec
ds
mov
test
loopne
dec
cld
arpl
pop
add
inc
clc
xchg
dec
in
mov
and
jle
loop
mov
xor
movsb
xchg
inc
jg
mov
xchg
mov
aas
xor
or
push
inc
xchg
sti
bound
xchg
mov
fnstcw
scas
add
mov
leave
add
into
pop
sbb
mov
cld
pop
psubd
gs
or
or
out
cmp
lcall
imul
loope
pslld
sahf
push
int
shl
pop
outsb
pop
inc
loope
and
sbb
mov
mov
and
insb
and
mov
xchg
jge
and
add
push
sub
cli
icebp
in
shlb
jmp
ret
xchg
insl
test
fwait
dec
out
jl
xor
cmp
add
sbb
loop
cmpsb
jns
mov
adc
je
nop
js
je
add
inc
ja
sarl
pop
jo
out
or
jle
gs
repnz
cld
in
or
adc
add
add
sbb
leave
mov
pushf
lea
jmp
pusha
pushf
mov
pushf
pushf
pushf
movb
lea
jmp
test
test
call
push
lea
jne
xadd
pusha
shl
mov
mov
sar
cmp
and
sub
shrd
movzbw
lea
lea
cmp
sub
push
cmp
cmc
test
pushl
popl
clc
cmp
pushf
pushl
lea
ja
pusha
adc
sub
shl
adc
shl
add
add
inc
btc
bswap
mov
pushf
mov
jmp
inc
cltd
xchg
inc
imul
sub
xor
loopne
mov
stos
test
into
clc
movsl
ljmp
mov
jp
pop
ljmp
fs
icebp
cmp
daa
adc
in
lcall
xlat
push
lret
xchg
jae
into
sbb
outsl
cmp
cmp
dec
fdivrp
ljmp
pop
mov
les
movsb
inc
insb
xchg
xchg
xchg
sti
les
decb
mov
jle
call
pop
adc
mov
out
jmp
pusha
pusha
repnz
push
call
mov
and
mov
rcr
push
rcr
cmc
test
bswap
push
seta
mov
rcr
mov
btr
cmp
bts
mov
cmc
test
or
pushf
movb
lea
je
cmp
clc
or
call
stc
clc
push
jmp
sub
call
cmp
imul
or
cmp
and
hlt
mul
leave
ret
out
jmp
pop
xchg
and
adc
stos
push
dec
not
data16
inc
jnp
sbb
jmp
arpl
add
mov
xadd
or
inc
push
insl
fwait
dec
dec
movb
aam
fcomps
imul
mov
push
inc
in
mov
lret
outsb
rcr
inc
xor
jae
mov
pop
jle
mov
loop
or
lret
enter
jbe
out
mov
xchg
pop
add
jb
sbb
inc
inc
sub
xor
push
cmp
cli
fcmovbe
lret
sti
inc
roll
outsb
pop
fsubr
mov
mov
inc
ds
imul
fdivrs
jb
or
mov
ss
sub
cmp
mov
sbb
cmp
inc
xchg
pop
jnp
mov
aaa
ret
pop
fisttpll
in
jae,pt
sbb
sub
xor
paddd
out
adc
leave
ss
mov
fwait
pop
push
jbe
arpl
jge
add
cs
or
js
call
mov
mov
bound
inc
in
push
icebp
xchg
dec
clc
popf
bound
ficomps
shlb
jmp
insb
les
inc
movsl
xchg
lock
mov
mov
inc
cmp
mov
leave
leave
lahf
push
fwait
inc
sti
mov
push
mov
lret
lea
std
pop
add
dec
dec
aam
inc
mov
mov
pop
push
lcall
cmpsb
das
je
mov
js
leave
imul
ds
mov
divl
in
test
mov
cmpsb
lret
xchg
int
cmp
xchg
sbbb
and
hlt
cmp
mov
xchg
je
call
mov
daa
fldenv
sbb
jno
in
aas
loopne
inc
out
movsb
push
push
mov
jbe
mov
or
lea
call
push
lea
jne
pushf
pushl
mov
pushf
pusha
lea
jmp
cltd
icebp
fidivrs
mov
xchg
push
dec
cmp
adc
push
repz
shl
dec
or
stos
nop
xor
adc
xchg
and
mov
cwtl
dec
xchg
pushl
test
lea
ret
sbbb
mov
lcall
std
imul
sub
mov
ds
stc
mov
push
mov
inc
sahf
and
dec
ficoms
push
aad
insl
mov
inc
insb
mov
xchg
lock
imul
lock
test
lock
cmp
mov
mulb
les
xchg
pushl
mov
pusha
lea
jmp
pop
mov
xchg
inc
hlt
adc
pop
dec
cmp
adc
in
enter
cwtl
push
hlt
ret
das
push
xchg
dec
xchg
and
dec
setg
xchg
sahf
jle
pop
jae
jp
aam
xor
dec
cli
or
aad
stos
mov
cltd
rcl
outsl
andl
cmpsb
cmp
inc
adc
sbbl
cltd
cmp
adc
xchg
lret
idivb
xor
std
sub
into
leave
shrl
fmull
jecxz
aas
add
jo
xchg
mov
cmc
pushf
hlt
jecxz
addl
mov
mov
inc
sub
or
scas
dec
jne
jle
cmpsl
pop
sbb
insb
or
out
xchg
stc
fdivrl
mov
sbb
aas
push
incb
or
jge
xor
pop
jge
jne
pop
adc
in
push
mov
fadds
dec
push
scas
rcrl
int3
outsb
cwtl
pop
cmpsb
add
movsl
push
lea
pop
mov
mov
push
or
jbe
fcoms
sbb
add
gs
xchg
das
or
sub
ror
mov
loope
mov
dec
mov
ds
enter
nop
inc
pop
outsb
rcrb
jnp
adcl
push
or
or
xchg
xor
aas
je
push
leave
xorb
cmp
cmpsb
inc
clc
mov
mov
out
lret
add
xchg
jne
lret
lret
lea
sub
popf
rorb
sbb
fs
lods
stos
in
mov
jnp
mov
outsl
rclb
dec
testb
je
push
jecxz
sub
push
icebp
stos
dec
mov
stos
call
jmp
cmp
cmp
push
cmp
mov
lea
ja
setno
inc
dec
not
inc
setno
push
rol
xchg
lea
lea
add
mov
ror
dec
mov
call
add
inc
js
je
jb
arpl
jae
pop
mov
sbb
das
add
cmp
adc
out
mov
fnstcw
cmp
lods
dec
or
insb
adc
loope
in
movsb
inc
fsubrp
mov
in
pusha
movsl
adc
pop
add
out
inc
out
nop
mov
test
shl
add
xchg
mov
test
lret
cld
ret
and
lahf
fcmovnbe
sub
sbbb
and
pop
add
sbb
xchg
xor
cltd
pop
mov
mov
jmp
rcr
bsr
dec
stc
mov
stc
bt
test
cmc
cmpb
pusha
pusha
lea
jne
seto
xor
call
call
pushf
cmp
call
ror
movb
cmp
seto
movl
jmp
mov
mov
movl
movl
pushf
pushl
ret
sub
sbb
bt
sub
add
mov
call
pushf
mov
call
aad
push
adc
ffreep
sub
int3
scas
mov
jbe
pop
adc
push
mov
test
add
inc
in
push
or
mov
adc
repnz
xor
adc
push
mov
or
pushf
mov
mov
shll
sbb
xor
mov
dec
cmp
xchg
jno
mov
sub
sti
loopne
sbb
lret
cs
addr16
call
in
in
mov
sub
pop
pop
mov
repnz
dec
mov
out
jmp
sub
and
loop
jmp
nop
aam
mov
pusha
adc
push
ret
sarb
sbb
out
sbb
cli
out
dec
xor
nop
sub
dec
xor
cmp
inc
or
mov
out
pop
xchg
jns
rsqrtps
popaw
sbb
or
sub
roll
fstpt
fdivrs
es
jl
push
out
fucom
xor
mov
xor
add
popa
stos
inc
dec
fnstsw
jmp
sub
lret
andb
xchg
mov
aam
jmp
push
iret
nop
jno
lret
shlb
dec
sub
sub
push
inc
or
cli
cwtl
mov
lret
ds
aaa
push
mov
xchg
out
adc
push
pop
pop
loopne
xchg
ja
inc
fsubrl
out
mov
or
movsl
pop
outsl
sub
test
pop
daa
jge
test
cmpsb
aaa
pusha
inc
dec
mov
pop
mov
push
ret
push
into
mov
mov
outsl
test
pusha
rorb
into
xlat
les
inc
cmp
lret
insb
xchg
xor
cmpb
adc
inc
sub
in
out
sti
jg
shr
push
scas
sub
sarb
out
mov
push
add
sti
lods
or
pop
outsb
dec
push
cmc
xchg
push
lock
insb
sub
jg
fistps
add
jecxz
mov
push
imul
sub
or
hlt
mov
insb
pop
test
std
mov
dec
ljmp
sti
inc
loopne
frstpm(287
mov
xchg
mov
pop
mov
mov
cmpsb
sbb
aam
int3
pusha
insb
cmp
mov
cmp
pusha
int
inc
push
sub
insb
pop
test
pop
clc
fwait
inc
notl
shlb
dec
dec
inc
inc
push
push
xor
cs
insb
add
xor
sub
daa
adc
xor
loop
mov
sbbb
dec
in
cmp
pop
adc
push
sub
cmc
cwtl
mov
pop
aam
or
sbbb
push
mov
mov
ret
jne
xor
mov
subl
ljmp
add
cli
lods
insb
addr16
mov
xlat
sahf
test
mov
mov
xor
xor
inc
mov
mov
push
sub
jge
xorl
add
adc
jo
fsubs
aam
xchg
jl
xor
adc
push
xor
and
cld
repz
shlb
mov
into
scas
dec
iret
call
mov
hlt
push
outsl
sub
adc
xlat
adc
sti
sub
je
cmpsb
push
cltd
rolb
mov
push
xor
leave
lahf
insb
and
gs
ljmp
movsb
cmpsb
lret
addb
mov
pusha
add
hlt
addr16
cmp
xchg
inc
filds
sbb
xor
int
scas
xchg
and
fs
ds
std
in
out
int3
mov
pop
dec
jmp
ds
adc
mov
mov
cmp
sbb
sbb
cld
cmp
fs
call
repz
jno
mov
xor
fwait
mov
xchg
mov
out
out
mov
sub
push
or
push
movsw
push
sarl
loop
dec
stc
lcall
sbb
mov
jp
cmp
cld
cmpsb
testl
enter
pop
add
fs
xchg
jno
sub
mov
fidivs
sbb
adc
fimuls
imul
imul
mov
add
or
sbb
lds
inc
mov
sub
lret
push
in
push
push
inc
mov
inc
std
fsubr
pop
inc
icebp
mov
jge
xchg
push
hlt
xor
inc
movsl
mov
mov
add
sub
nop
aas
notb
call
add
mov
cwtl
add
sahf
cmpsl
test
inc
xlat
subb
out
jnp
xchg
fidivl
cmp
fldenv
jae
mov
shrl
das
arpl
cmc
movsb
lahf
jle
cmp
or
xchg
adc
mov
mov
enter
and
pop
adc
lods
pop
sbb
jl
ficoms
cld
mov
mov
xor
imull
jb
test
test
xor
push
mov
inc
add
push
aam
movsb
adc
lret
mov
hlt
mov
ja
push
jb
fisubl
add
rcrb
sbb
cltd
mov
notb
or
js
addl
sub
add
rol
lods
mov
mov
adc
inc
mov
into
ror
add
aas
scas
subl
lret
mov
ss
push
daa
aam
sub
pushf
dec
cld
lds
andl
sub
dec
repz
mov
pop
add
imul
into
aad
movsl
dec
or
sahf
aaa
or
add
mov
jno
jo
cmc
cmp
xchg
jmp
inc
mov
xchg
pop
adc
fs
xchg
push
add
movsb
leave
jle
jno
mov
xchg
jnp
mov
inc
xor
lock
dec
negb
repnz
dec
add
xor
addl
sbb
xlat
adc
andl
iret
xlat
pop
inc
push
pusha
sub
ja
mov
mov
xchg
loope
ljmp
pop
lock
in
jno
aam
push
push
call
shll
sub
cmp
mov
cltd
outsl
sahf
lahf
fsin
xlat
fmuls
ss
sub
pop
pop
mov
cmpsb
inc
pop
mov
test
xchg
fwait
push
insl
xlat
dec
fsub
xor
stc
sbb
xlat
sub
dec
adc
imul
subb
mov
roll
ljmp
xlat
aas
mov
pop
adc
sbb
test
or
out
mov
pusha
xor
xlat
mov
call
lods
xlat
aam
dec
aad
jecxz
mov
aam
outsl
xlat
add
inc
mov
lea
xlat
adc
shlb
pop
dec
out
aaa
lret
imul
pop
in
notb
xor
xor
dec
sarb
mov
push
xor
adc
insl
pushf
lcall
sub
add
mov
popa
xlat
mov
into
std
xlat
pop
sarb
cli
push
pop
mov
negb
mov
add
mov
pop
dec
and
in
sub
aas
hlt
xor
lahf
test
jg
push
lods
and
mov
adc
inc
jae
xlat
popf
loopne
rorb
in
orb
arpl
xchg
pop
mov
jl
lahf
ds
inc
jns
sbb
mov
xlat
shll
sbb
fcmovnbe
jnp
xor
mov
or
xchg
lahf
adc
aad
repnz
ret
mov
js
cmp
lahf
repnz
cltd
push
xlat
inc
sub
arpl
sbb
iret
in
jnp
shlb
pop
add
mov
popf
jecxz
adc
enter
jl
shlb
aam
pop
ret
xlat
stc
jecxz
imul
pop
fs
xchg
cmp
xchg
mov
pop
in
mov
fstl
js
xlat
popa
sub
sub
xlat
and
xchg
fsubl
dec
xchg
leave
xlat
sbb
add
inc
stc
les
fisubs
xchg
sarl
mov
andb
enter
push
frstor
adc
imul
sbbl
or
add
lcall
and
dec
xlat
pusha
or
cmp
fstpl
jb
aad
aam
cmc
lods
xlat
ss
aaa
dec
repz
test
mov
mov
and
mov
jns
enter
dec
test
pop
inc
jp
dec
enter
push
mov
sub
cld
fs
pop
fstl
sub
out
cmp
pmullw
cmp
in
xlat
out
hlt
into
rorl
aam
and
ss
orb
in
cltd
xlat
lods
jbe
xor
jae
test
insb
sti
rcll
cmc
xlat
and
add
movsb
frstor
in
mov
xlat
mov
add
les
mov
add
mov
dec
rcrb
add
xlat
and
lcall
xchg
ljmp
xlat
jnp
mov
pop
xlat
scas
push
dec
stc
add
dec
test
aad
jecxz
mov
jns
popa
xor
jno
int
xchg
jno
rorb
in
out
std
xchg
xor
mov
inc
cmp
xlat
dec
mov
jno
inc
cli
push
inc
jg
test
div
mov
aad
mov
mov
sub
adc
fldenv
dec
ja
roll
fsubl
popf
push
adc
jge
sbb
negl
dec
lahf
mov
lret
cmp
push
mov
pusha
xchg
inc
int
xlat
rcr
popa
lock
dec
std
xlat
mull
ret
jp
clc
lahf
mov
dec
aad
xchg
fst
loopne
fdivrl
aam
shrl
mov
mul
push
push
jbe
push
aaa
cmpsl
into
inc
pop
dec
xlat
mov
mov
or
pop
icebp
mov
inc
scas
hlt
add
and
sub
fcoms
cmpl
pop
sub
mov
inc
adc
push
xchg
sub
mov
fildl
fs
adc
pop
inc
das
xlat
and
mov
lea
push
sbb
adc
inc
mov
push
in
es
jg
xlat
sbb
lret
xchg
inc
js
dec
mov
fs
rolb
lret
out
xchg
in
inc
sbb
es
mov
mov
aam
out
jg
imul
mov
mov
mov
insl
scas
xchg
add
add
inc
adc
xlat
rol
jecxz
dec
pusha
mov
fdivl
push
cmp
xlat
leave
add
sub
int
add
xlat
in
mov
loope
sti
pop
jmp
pop
mov
addr16
aaa
fcoml
xor
subl
lods
roll
iret
and
xor
rorl
popa
mov
xlat
mov
xor
jae
pop
pop
addr16
cmc
shlb
xchg
pop
imul
xlat
pop
add
fcompl
xchg
xchg
jle
push
pop
fndisi(8087
jmp
xlat
lea
sub
xlat
cltd
jo
add
lods
jns
xlat
push
scas
dec
mov
or
nop
ficoms
mov
mov
mov
inc
push
lahf
xchg
pop
and
mov
adcl
jecxz
fldenv
dec
jb
xlat
mov
rcrb
mov
scas
lcall
in
lret
shll
fistl
and
pop
ror
mov
pop
lods
inc
push
lahf
idivb
inc
xchg
jno
dec
lret
gs
dec
popf
fstl
call
mov
mov
mov
xor
lahf
cmpsl
add
sbb
cmpsl
dec
aam
mov
out
mov
adc
pop
pop
cmp
adc
repz
adc
xlat
fisttpl
insb
jo
sbb
repz
jbe
movsb
push
adc
adc
sub
and
hlt
mov
mov
pop
int3
rclb
push
or
inc
mov
lea
repnz
cmp
outsb
mov
jmp
or
pop
sar
popa
adc
sbb
ljmp
xlat
xchg
into
push
push
call
lcall
push
popl
xlat
mov
std
in
insl
imul
inc
sub
add
sub
scas
lcall
inc
stc
cmp
fmul
xor
mov
addr16
adc
leave
shlb
sbb
xor
hlt
loope
or
mov
notl
lret
iret
jns
mov
decb
and
sbb
iret
add
insb
dec
jg
adc
sub
in
sbb
scas
mov
shrb
in
mov
icebp
sub
jecxz
dec
aad
xor
mov
iret
adcb
xchg
test
jl
popf
leave
loop
mov
and
fucom
out
cltd
and
pop
xlat
out
int
pop
or
xchg
repz
mov
shrl
es
cltd
loopne
test
das
jno
mov
clc
popf
jne
mov
sbb
xor
rcll
lret
add
in
aaa
repz
ret
bound
addr16
sbb
shr
xlat
jo
push
sub
xor
adc
stc
std
xor
jge
inc
xlat
andl
imul
mov
push
cltd
dec
orw
xlat
sbb
dec
bound
mov
mov
in
and
sub
rcr
sarl
test
iret
jb
mov
push
hlt
adc
movsb
enterw
push
outsl
cwtl
pop
aad
sti
cld
xlat
and
stos
test
je
xlat
mov
add
mov
test
mov
xchg
pushf
mov
iret
shll
mov
test
xor
sbb
push
cmpsl
push
push
movsb
cmp
xchg
dec
xor
xchg
xor
xchg
clc
dec
nop
sub
jp
pop
testb
xchg
insl
dec
add
lret
mov
cli
mov
xchg
dec
dec
icebp
cltd
mov
call
iret
jb
outsl
xchg
pop
dec
sahf
ss
lea
test
arpl
inc
fnstenv
rol
push
push
mov
inc
xchg
mov
xchg
lds
hlt
mov
and
mov
xchg
xchg
dec
sub
shll
inc
mov
mov
bound
xchg
inc
in
jl
adc
ret
jae
adc
mov
xchg
jns
xor
call
add
pop
add
dec
push
popf
mov
jl
sub
mov
dec
push
mov
add
out
dec
inc
push
scas
mov
xchg
mov
add
sub
or
push
dec
mov
es
mov
xchg
xchg
dec
repnz
bound
inc
test
sub
dec
cmpsb
in
out
inc
in
pop
xchg
ret
dec
arpl
lret
leave
mov
loopne
sub
dec
in
push
mov
sub
xchg
inc
fcmovbe
jl
inc
mov
data16
jp
call
sti
mov
int3
or
push
mov
pop
sub
loop
jg
cmp
lret
pop
jbe
lods
pop
fs
ja
out
mov
imul
test
std
jp
inc
out
dec
lret
std
xor
sub
out
mov
test
mov
pop
push
or
mov
lods
pushf
int
inc
cmp
ja
fadds
clc
xor
ss
push
stc
pop
add
cmp
dec
mov
and
popf
xlat
cmp
insb
mov
push
mov
ficoms
cmp
cmp
and
mov
xor
dec
je
push
outsl
jge
addr16
fdivrl
outsl
xchg
int
adc
jae
xchg
cmp
jl
push
sbb
sbb
dec
xchg
add
insb
inc
xchg
pop
xor
pop
mov
adcb
std
mov
shr
sbb
xchg
lea
add
pop
clc
xchg
paddd
xchg
or
int3
je
ficompl
sub
push
jle
aaa
pop
sub
nop
imul
jnp
imul
movsl
std
cmpl
popf
push
add
fdivs
imul
es
xchg
test
sub
xor
fs
push
fcmovbe
jge
or
addr16
out
sbb
push
fidivl
ds
nop
mov
aas
sub
mull
mov
insl
sub
jmp
push
lds
xchg
iret
cltd
adc
scas
xchg
scas
imul
push
jnp
or
ret
pushf
cmp
jae
mov
pop
cmpsb
mov
mov
jp
xchg
mov
aaa
fwait
fwait
and
fwait
data16
call
push
rcr
xor
ds
pop
push
movsl
hlt
inc
pushf
mov
addl
loop
sub
xor
inc
cmp
push
mov
pop
fdivs
lds
xchg
or
xor
push
call
addr16
xchg
lea
cmp
fbstp
push
repnz
jb
inc
mov
jne
stos
and
or
mov
mov
cmp
pop
les
jmp
sub
test
loopne
shrb
in
mov
aaa
lds
xor
or
shl
or
or
cmc
xor
sub
imul
cmp
and
mov
xchg
inc
movsb
lahf
stos
mov
insb
push
add
xchg
dec
sub
push
mov
and
lods
std
ret
mov
lea
int
ret
xor
jo
je
inc
xor
mov
lods
shlb
dec
jge
ret
aas
lret
adc
push
loop
cmpsb
in
je
xchg
xor
ja
xor
rcll
lods
outsb
dec
bswap
xchg
sbb
or
jnp
jno
inc
lahf
xchg
jno
int
arpl
shrl
iret
jo
rorl
cmc
jne
adc
aam
mov
xchg
xchg
adc
xchg
inc
test
cmp
mov
push
push
shrl
iret
xchg
repz
push
hlt
add
stos
aaa
scas
rcrb
ret
pop
dec
xchg
mov
mov
mov
jle
push
nop
iret
hlt
jle
xor
xor
ds
add
xchg
sub
xor
push
xchg
push
and
into
adc
or
dec
push
shlb
iret
daa
loop
jle
cmp
pop
or
mov
std
jg
test
mov
push
movsb
inc
ds
push
dec
sahf
cs
jmp
int3
mov
mov
pop
shrl
imul
mov
lcall
lds
outsb
xchg
enter
out
lahf
mov
mov
into
ja
mov
mov
jne
popl
lret
aad
mov
shl
or
into
push
inc
cmpsb
int
dec
mov
adc
orl
scas
outsl
adc
push
dec
push
adc
dec
rorl
pop
dec
xor
push
andps
aad
push
mov
int
mov
dec
jno
push
lea
dec
push
dec
push
xchg
rcll
rorb
push
inc
push
push
mov
scas
push
aad
ss
out
sub
es
sbb
dec
loopne
movsl
or
int
or
sub
sbb
cmp
xchg
loope
xorb
pusha
es
ljmp
or
push
mov
lds
negb
mov
call
sub
jmp
push
mulb
out
cs
cmp
repz
lret
addb
repz
jb
mov
loope
mov
rorl
push
push
mov
ds
rolb
subl
push
lods
pushl
stos
leave
subb
data16
rcrl
cmpsl
movsl
push
mov
ss
mov
pop
mov
es
push
cmpsl
daa
cmp
cs
cmp
mov
ss
adc
push
mov
arpl
and
push
lret
roll
ds
notb
lea
mov
bnd
xchg
mov
roll
mov
int3
jb
push
imul
xchg
jb
aad
call
shr
mov
xchg
pop
iret
sbb
jb
lea
sbb
addr16
rcr
lds
iret
fists
dec
add
sub
rol
inc
cmpsb
xchg
lea
rcll
push
push
sbb
icebp
xlat
or
mov
sbb
xchg
and
notb
mov
sbb
pop
dec
cmp
xchg
mov
mov
push
nop
movsl
sahf
adc
fisubs
mov
mov
jne
push
aam
bound
xor
add
sbb
je
iret
push
mov
popf
aaa
adc
mov
pop
cmpl
ret
aaa
push
or
dec
stos
cmc
mov
jle
xor
js
xor
xor
lds
inc
sbb
adc
lds
iret
sbb
pusha
sti
jae
jno
imul
inc
adc
aas
mov
fmul
aaa
repz
sbb
dec
sbbb
les
mov
sub
aaa
js
sub
jb
out
xchg
stos
xor
or
add
imul
lahf
adc
xchg
jno
jg
cli
pop
std
and
movsl
aaa
sarb
jb
daa
and
xor
pop
aam
xchg
hlt
or
mov
jne
add
or
xor
aaa
pop
insl
movsl
aaa
out
inc
xchg
imull
arpl
dec
and
inc
adc
cmp
rcrb
out
dec
push
mov
pop
rcr
xlat
lret
push
xor
xchg
out
xor
xchg
lcall
iret
jle
cmc
out
ret
push
dec
jmp
xchg
and
lret
jge
xor
mov
xchg
out
push
inc
jae
xor
mov
adc
test
xchg
iret
xor
je
mov
pop
push
aaa
xchg
adc
ja
mov
aaa
mov
shlb
push
movsb
aad
aam
sarb
push
dec
push
jno
push
ds
push
mov
mov
xchg
pop
mov
mov
test
mov
sbb
xlat
sbb
mov
sbb
jp
xor
dec
addr16
mov
cli
arpl
dec
xchg
jle
sahf
inc
mov
dec
xor
lcall
cmc
mov
add
add
in
sahf
push
adc
push
inc
nop
inc
lods
mov
shll
into
jo
popa
nop
leave
hlt
xlat
adc
bswap
mov
js
andl
inc
dec
jno
jnp
push
fiadds
push
lahf
xor
jne
xlat
xor
push
inc
pop
gs
dec
mov
mov
xor
les
mov
shrl
lods
outsw
rolb
xor
dec
lcall
lock
mov
mov
cmp
xor
mov
test
hlt
enter
push
dec
cmp
sbb
adc
push
aam
cld
adc
or
mov
lds
iret
jne
scas
rcrl
jle
insl
aaa
mov
iret
addr16
jg
cmpsl
iret
pop
aam
xchg
push
stos
in
lahf
push
mov
pop
xchg
ja
popl
rolb
or
lcall
mov
pop
dec
xchg
rcll
bound
lret
lock
or
iret
inc
xchg
jno
sub
data16
loope
fldl
mov
dec
add
sahf
inc
adc
test
mov
and
xchg
mov
cmp
aad
lahf
data16
push
das
jo
test
push
out
ds
cmp
mov
xor
push
rolb
int3
pop
cmp
mov
push
dec
rcrl
repnz
sub
aam
sarl
jo
test
out
fwait
xor
aad
stos
inc
sub
outsl
rorw
enter
mov
jmp
pushf
push
aad
sbb
hlt
lret
sub
jnp
push
call
xchg
cmc
xor
ds
inc
jns
xchg
dec
nop
repz
in
movl
jae
mov
sbb
mov
xchg
dec
rcr
mov
xor
aaa
add
lret
js
int
mov
insb
movsb
xchg
in
sbb
jns
mov
das
js
mov
lret
inc
ja
xchg
push
and
sarb
shl
xlat
push
mov
notl
ja
aaa
stos
xlat
shrl
adc
adc
xchg
mov
sti
cmp
adc
mov
clc
xor
cmp
xchg
int3
leave
sbb
dec
out
loope
cmp
sub
push
pop
sub
xchg
hlt
xor
mov
jmp
ss
push
imul
clc
leave
push
nop
insb
or
adc
push
subl
xchg
xchg
xor
adc
xor
push
xchg
les
int
jb
ja
mov
or
xchg
adc
insb
mov
mov
mov
lahf
inc
adc
js
inc
sub
cltd
adc
nop
imul
pop
mov
sbb
mov
pop
sbb
testb
xor
stc
push
sub
lea
add
mov
rcll
adc
ja
pop
cld
mov
mov
pop
movsl
hlt
dec
ret
adc
dec
pop
adc
lds
xor
inc
mov
xchg
in
push
cmp
and
int
push
or
jae
jbe
inc
arpl
and
ja
enter
stc
push
xchg
mov
mov
adc
out
inc
cld
xchg
lds
pop
mov
out
cmpsl
cs
sub
jmp
mov
dec
mov
push
xor
push
ret
movsl
dec
es
xor
enter
xchg
push
fistpl
unpckhps
inc
mov
mov
jle
add
mov
outsb
inc
stos
and
mov
push
adc
inc
inc
push
xchg
arpl
sub
push
xchg
cmc
push
or
outsl
cmp
lahf
rcll
push
nop
lcall
push
aam
mov
mov
enter
fs
dec
insb
lret
jp
mov
mov
pop
cmp
data16
mov
mov
xchg
iret
lret
push
xchg
push
add
cs
stc
mov
mov
push
xchg
inc
adc
out
adc
or
adc
orb
out
cltd
adc
inc
out
mov
aaa
adc
inc
and
xor
movsl
pushf
aad
xor
nop
lret
fnsave
cmp
and
cmp
in
mov
cs
cmp
xor
push
or
sub
adcl
mov
iret
and
testb
dec
and
jns
rol
mov
sub
jae
ret
mov
xor
mov
out
xor
out
shll
cmp
idivl
insb
or
jmp
xchg
push
out
movsb
sub
inc
lahf
sub
ds
cltd
jg
xor
push
aas
cmc
scas
icebp
pop
fidivrl
fcoml
fidivs
add
shlb
push
sub
dec
and
push
xchg
or
repz
xchg
push
push
and
test
stos
xor
and
jae
leave
push
imul
dec
cmp
xchg
pop
pop
xchg
scas
ret
imul
clc
loop
into
xchg
xor
les
push
adc
lock
call
scas
jno
push
bound
ret
jne
icebp
dec
push
mov
sahf
or
sbbb
or
lea
xor
movsl
mov
cs
add
outsb
inc
andl
and
mov
jno
push
shrb
or
pop
adc
jno
push
cmp
in
mov
je
xchg
stos
dec
pop
shll
mov
mov
xchg
lods
enter
mov
sahf
arpl
xor
gs
adc
addr16
mov
mov
xorl
adc
xchg
dec
inc
xchg
or
jno
mov
cmpsl
push
pop
mov
outsl
xchg
inc
popa
in
xchg
lahf
dec
ds
imul
imul
std
aad
sub
and
fst
js
inc
fs
xor
cltd
lahf
mov
in
pop
popf
out
xchg
push
add
and
frstor
test
mov
inc
push
cltd
cmp
jg
lods
or
notl
add
xor
xchg
movl
scas
sub
insb
test
cmp
xchg
pop
push
cmp
into
jp
dec
inc
sti
push
xchg
mov
mov
push
lret
cltd
cli
push
test
subb
xor
fwait
adc
sbb
jecxz
test
push
sahf
aam
or
rcrl
jns
leave
sub
rorl
mov
mov
pop
xchg
fstpt
add
out
jecxz
push
mov
leave
pusha
mov
lret
xor
nop
jnp
negl
nop
mov
imulb
pop
push
adc
pop
js
imul
jle
divb
mov
rclb
xchg
nop
mov
inc
stos
loop
sub
cmpsb
cmp
inc
xor
fdivr
mov
mov
testb
jg
lret
rsqrtps
iret
xchg
mov
lahf
push
sub
lods
sub
stc
in
std
in
ja
mov
lds
movb
jmp
mov
cs
iret
xchg
shlb
scas
loopne
sub
out
xor
push
and
test
push
jo
clc
lcall
icebp
dec
jmp
ljmp
shl
cmp
ljmp
push
push
xor
movsb
lds
mov
fiaddl
xor
cmp
adc
mov
movsl
mov
sbb
cmp
jae
jno
mov
mov
xchg
stos
nop
dec
repnz
sub
movsb
sbb
xchg
loop
iret
insl
mov
loop
stos
fidivrs
push
fwait
jmp
jo
inc
mov
nop
mov
sbb
int
les
fstps
imul
jl
test
xchg
push
xchg
div
imul
das
scas
adc
pop
leave
jg
popa
fbld
and
cmpsb
mov
sti
out
xchg
xchg
cltd
pop
je
movsb
xorb
movsl
xor
out
add
rcrl
ficoms
aas
mov
xor
push
das
dec
dec
rcr
orl
jp
mov
call
xchg
pop
stos
out
fmull
jle
out
push
das
mov
inc
push
cmp
mov
mov
cmp
loopne
jns
les
cmp
dec
inc
ds
mov
push
jne
mov
mov
cmpsl
sbb
addr16
movsl
add
adc
dec
ljmp
divl
cltd
xchg
movl
mov
inc
into
xchg
daa
adc
nop
push
hlt
idivb
or
push
mov
add
push
mov
cmpsl
nop
scas
cmp
cmp
xorl
mov
xchg
scas
mov
add
out
aaa
pop
test
xchg
scas
gs
push
xor
lds
mov
push
xchg
adc
lods
popf
insl
xchg
imul
pop
shll
adc
sub
adc
inc
mov
mov
int
call
insl
ljmp
mov
mov
loop
fidivl
adc
mov
and
jnp
jne
ss
mov
mov
xchg
push
and
or
mov
out
xchg
pop
imull
clc
mov
inc
add
daa
into
aam
or
sbb
ss
jge
dec
add
sub
mov
jge
stos
test
scas
cmc
inc
sbb
mov
xor
mov
popf
js
inc
xor
into
dec
jge
loop
pop
dec
xchg
mov
dec
jg
in
push
xor
mov
mov
in
adc
mov
lods
test
cmp
mov
scas
pop
addl
lds
test
fxch
test
jecxz
mov
fnsave
adc
cmp
xchg
sub
jle
imul
dec
mov
iret
in
sub
cli
out
daa
mov
nop
mov
test
aam
sub
xor
sub
sbb
adc
add
rcl
mov
sub
mov
scas
push
shll
inc
aaa
inc
mov
inc
daa
adc
or
cmp
and
mov
into
aas
dec
nop
push
cmp
add
mov
rcr
adc
inc
add
call
mov
sbb
lds
and
cmp
insb
cmp
lock
lods
inc
std
or
mov
mov
pop
inc
fimuls
lods
adc
rorl
xchg
xchg
mov
popf
ret
in
aaa
fmuls
lds
dec
test
lea
outsl
hlt
das
stos
lcall
outsl
xchg
cmp
adc
xor
mov
sub
lds
xchg
pop
lds
icebp
mov
popf
addr16
xor
xchg
jbe
lods
movb
jl
and
push
or
popf
movsl
into
xchg
or
inc
adc
repz
xchg
lahf
adc
mov
xchg
adc
dec
aad
mov
data16
mov
mov
jae
in
pop
pop
adc
xchg
dec
xor
push
pop
dec
cmpl
jnp
jge
xchg
popa
push
in
xchg
mov
push
cli
mov
imulb
add
rcrl
jo
mov
les
mov
mov
inc
and
ret
mov
outsb
pushf
push
xchg
rcrl
or
je
jnp
xor
jge
adc
int
shlb
add
jmp
sbb
pop
and
jb
sbb
lret
pop
push
adc
xor
push
push
push
sbb
jle
roll
test
push
xor
scas
mov
inc
rcrl
mov
push
xor
lods
jo
push
popa
mov
push
dec
insl
mov
dec
jo
jbe
andl
or
jecxz
in
push
addr16
pop
jnp
nop
gs
mov
call
jmp
sub
lret
adc
pop
mov
mov
rcrb
xchg
lods
lcall
es
sub
lcall
sub
mov
lds
jae
cld
cmpsb
jnp
fisttpll
lahf
repz
add
or
fstl
xchg
jecxz
into
aaa
rep
xchg
inc
aaa
push
pop
nop
jbe
int
jns
mov
xchg
cmp
shlb
movsb
lret
std
insl
faddl
std
or
inc
jno
or
mov
lret
lods
out
xchg
dec
int
push
xchg
repz
and
test
pop
xchg
and
xchg
int
repnz
mov
repz
dec
stos
data16
out
cmp
cmp
push
mov
adc
jmp
lahf
leave
enter
lret
nop
jo
adc
mov
inc
push
ds
jge,pt
push
push
lods
dec
jns
fcomps
dec
lea
push
mov
mov
popl
lea
sbb
fistl
mov
pop
push
rclb
mov
gs
cld
push
mov
xor
mov
jl
cs
in
popa
mov
dec
ret
lds
fisttpll
jo
daa
iret
or
lock
adc
mov
std
xchg
into
adc
mov
daa
xlat
nop
cli
fisttpll
xchg
inc
jne
inc
bound
inc
xor
xchg
dec
mov
xchg
pop
and
sub
out
mov
fimull
add
xchg
inc
sti
cli
sahf
outsb
inc
sub
xor
call
dec
jl
ret
or
andl
movsl
ror
stos
retw
push
cmpsl
mov
cmc
mov
insb
xchg
pushf
pop
xchg
pop
negl
cmp
xor
or
lcall
mov
icebp
out
mov
cmpsb
sub
mov
shlb
jne
pop
lret
and
mov
inc
test
dec
push
xchg
mov
in
dec
xchg
jne
mov
jp
cmpb
cmp
lods
xchg
mov
mov
fdivr
xchg
mov
ja
adc
lret
or
jg
daa
xchg
mov
nop
push
push
inc
xchg
divb
mov
sbbb
and
gs
mov
sub
inc
aas
cld
mov
ret
cltd
lods
xchg
iret
pop
lds
xor
repz
xchg
jecxz
cmp
imul
neg
push
fsubs
mov
sbb
xor
imul
stc
paddd
clc
cmpsb
sahf
sbb
pop
push
xor
inc
mov
fsubrl
inc
jnp
inc
and
dec
inc
es
movsl
es
nop
mov
xor
cmc
mov
out
and
mov
cmp
xchg
sbb
pop
jmp
mov
movsl
pushf
clc
cmpsl
call
scas
push
jp
mov
mov
lods
shlb
lcall
fsts
and
clc
cs
rolb
push
int
popa
addr16
or
lock
lds
cmc
adc
nop
loopne
clc
jae
test
pop
pop
insl
xor
ja
rcll
dec
dec
jae
push
sub
inc
arpl
dec
sbb
cld
jbe
or
sub
xchg
xchg
mov
js
push
lahf
mov
ss
repnz
repnz
mov
test
mov
sub
dec
jmp
ss
push
pop
ret
test
ds
insb
inc
outsb
mov
mov
xchg
push
leave
xlat
lock
lds
sarb
dec
pushf
aad
nop
sbb
pop
std
push
adc
cmp
adc
mov
insl
jb
or
daa
push
mov
lock
movsb
nop
pop
push
cmp
mov
popl
cmpsb
dec
xchg
cmpsl
lea
xor
jge
inc
jge
enter
lahf
pop
aaa
add
fidivrs
inc
push
push
addr16
jae
das
gs
add
mov
inc
aad
das
push
or
mov
cmp
sar
push
daa
xor
adc
pop
loop
sti
push
jo
lret
xchg
or
jne
mov
fcom
and
int3
dec
xchg
fnsave
inc
fwait
dec
ficomps
ret
xorl
push
push
cmp
inc
fs
pusha
sub
mov
ret
jmp
jno
adc
pop
xor
pop
xchg
sub
mov
stos
stc
push
mov
mov
push
pop
int3
sbb
jle
pop
jmp
mov
adc
mov
popf
test
ljmp
shll
les
xchg
popa
movsl
leave
int
popa
mov
imulb
mov
outsb
pop
mov
cltd
inc
scas
add
lcall
push
pop
jb
mov
inc
push
push
jno
sahf
cld
sbb
and
lds
fmuls
push
jae
imul
cmp
sub
lret
inc
inc
popf
jne
repnz
push
mov
mov
leave
aas
cmp
xchg
or
insl
loop
push
lea
imul
adc
mov
enter
movsl
outsb
rclb
mov
andb
gs
gs
outsb
je
fbld
testb
mov
sub
pop
mov
dec
shl
cmpsb
gs
cltd
push
shlb
push
jbe
js
ds
mov
jbe
mov
nop
shll
pop
les
jbe
insl
in
dec
sub
dec
movsl
jle
lock
icebp
inc
pop
rcll
or
cli
mov
xchg
dec
push
jbe
adc
call
stc
push
fwait
push
xchg
dec
popf
jle
rol
addr16
inc
shll
ds
xchg
xchg
mov
xchg
jle
cltd
dec
xor
lea
or
ja
xchg
jl
movsl
adc
movsl
xchg
inc
add
cmp
movb
lahf
dec
lock
negl
xor
dec
rcll
mov
mov
fisttps
cld
std
shll
iret
imul
jb
push
sbb
das
push
inc
scas
cmpb
sub
and
fadd
dec
mov
cli
in
adc
mov
push
aas
dec
rcrb
mov
les
gs
xchg
jle
and
scas
inc
icebp
mov
nop
mov
aas
les
inc
fcomi
inc
addl
xor
add
stos
lods
fiadds
sti
add
rcl
dec
fcomps
mov
or
addr16
or
adc
in
xor
push
call
pop
push
ja
ds
mov
xor
cmp
sbb
push
mov
jnp
xor
inc
cltd
jl
mov
mov
pop
mov
icebp
dec
sbb
rcl
adc
ljmp
lods
mov
cmp
adc
xchg
xor
sub
popf
scas
adc
mov
scas
or
mov
jbe
gs
scas
std
scas
ret
pop
ficoms
mov
xchg
mov
xchg
mov
in
in
imul
dec
xchg
dec
xchg
idivb
and
push
sbb
sahf
or
xchg
daa
adc
mov
shll
or
mulb
lahf
inc
hlt
out
push
or
adc
sub
sub
faddp
mov
insb
aad
iret
fdivl
dec
dec
mov
push
adc
pop
scas
mov
dec
cmpsl
test
les
or
aad
cmpsl
icebp
mov
adc
jno
ds
or
inc
jg
mov
mov
or
iret
cmp
hlt
cwtl
ja
push
outsl
inc
das
rorl
ficoms
stos
les
jns
xchg
pop
xor
mov
xchg
jo
lods
sub
imul
out
push
adc
pushl
fidivl
movsb
jb
orl
lds
push
jno
jb
mov
sub
enter
mov
rol
xchg
or
andb
push
divb
add
xchg
jns
jb
popf
xchg
mov
jle
imul
jo
movsl
adcl
push
popa
ja
mov
dec
push
mov
std
lds
mov
lds
mov
into
jb
push
cmp
mov
jnp
pop
xor
cmpsb
fwait
paddd
ja
push
adc
fsubrs
xchg
or
push
bound
mov
int3
push
outsl
cli
lock
ja
scas
test
jne
xor
jne
push
scas
xorl
xor
repz
cmp
mov
xchg
test
insb
fs
push
popf
or
mov
cmp
divl
lds
fwait
push
add
fwait
lock
mov
adc
xchg
fisubs
cmp
hlt
into
ret
outsb
jns
into
mov
mov
rcll
dec
ret
out
fisttpll
enter
mov
mov
jle
mov
xorl
add
dec
cmp
push
leave
test
mov
out
in
jmp
test
insl
ljmp
test
movsb
testb
lods
dec
pop
or
pop
notb
or
sahf
or
es
shll
mov
faddp
or
ficoms
stos
les
mov
das
push
push
fxch
pop
test
hlt
pop
and
incb
fwait
les
cs
xchg
pop
sbb
into
lods
mov
mov
push
push
rorl
fs
nop
dec
stc
inc
and
dec
packuswb
dec
adcb
bound
pop
adc
mov
neg
lods
inc
adc
divl
leave
les
dec
inc
pop
mov
sarl
mov
into
and
adc
cltd
rorb
xchg
inc
imul
pop
cmc
mov
fnsave
pop
xchg
fsubs
jo
movsl
fsts
jecxz
daa
enter
fdivrl
dec
scas
iret
pop
xor
loope
inc
daa
xchg
stos
xchg
loope
jb
insl
daa
aad
fsubr
sub
daa
and
push
repnz
xchg
xor
leave
ds
das
mov
jmp
das
inc
or
add
sbb
dec
xchg
loopne
or
lods
mov
jmp
pop
aas
push
scas
jnp
xchg
lahf
fildl
lret
xchg
cmpb
into
cwtl
or
sbb
jg
pop
ficomps
aas
jmp
mov
stc
push
out
push
roll
movsl
stc
xchg
mov
inc
adc
mov
ja
mov
dec
loopne
pop
sbb
add
mov
cmp
stc
push
sbb
mov
dec
jle
and
nop
mov
test
fsts
push
test
mov
push
fisttpll
xchg
iret
stos
das
or
mov
orl
push
ret
stc
stos
lds
pop
out
xchg
mov
pop
sbb
into
icebp
xchg
and
jecxz
mov
in
std
xchg
or
and
ds
or
lahf
dec
xchg
jns
and
push
or
and
xor
mov
cltd
arpl
into
mov
xchg
cmp
into
xchg
and
outsl
fwait
and
lds
das
rorl
xchg
icebp
or
inc
outsl
ficoms
cmp
cmp
fwait
sub
xchg
fwait
ja
rorl
xchg
mov
fwait
pushf
rcll
sbb
into
pop
adc
scas
fwait
xchg
test
and
and
stos
les
jg
lds
cmp
xchg
push
sbb
into
push
and
ss
sub
int3
sar
inc
xchg
out
setge
outsb
jae
sub
xchg
orb
sub
dec
jg
into
adcb
mov
pop
dec
sti
in
mov
or
sahf
dec
mov
ja
lock
and
rclb
jmp
mov
pop
mov
fistl
jmp
pop
lahf
das
xchg
mov
xor
arpl
xchg
pop
jbe
sbb
into
adc
xchg
addr16
jecxz
negl
imulb
mov
enter
push
inc
cmpsl
fwait
pop
lds
das
rorl
xchg
icebp
inc
les
ficoms
jge
addr16
ljmp
std
xlat
and
scas
clc
std
popf
clc
clc
jecxz
mov
adc
popf
popa
xchg
or
pextrw
xchg
in
dec
imul
xor
pop
and
cld
test
adc
dec
or
push
xchg
cmpsb
test
push
push
nop
add
out
out
sub
or
dec
test
mov
jb
movsl
cmp
loop
stos
fcmovbe
lret
adc
dec
sahf
xchg
out
mov
push
xchg
call
stos
push
aad
stos
sahf
cld
or
adc
mov
inc
sbb
mov
ret
mov
inc
testl
adc
mov
ja
adc
xchg
and
mov
xor
mov
push
ffreep
xor
lcall
and
push
adc
jecxz
mov
das
sub
arpl
pop
fwait
mov
push
mov
scas
scas
leave
mov
enter
sub
mov
das
lods
ror
push
mov
into
jae
dec
stos
out
imul
movsl
mov
sbb
cwtl
push
insb
scas
push
aad
mov
repnz
sub
mov
mov
mov
cmpsb
mov
push
lret
push
or
xor
push
mov
or
jb
inc
fnstcw
adc
scas
inc
movsl
mov
fwait
cmpsb
flds
repnz
aad
xchg
mov
aad
adc
or
mov
cmp
notb
mov
and
and
cmpsl
ja
add
or
xor
and
fisttpll
push
mov
mov
aad
xor
lret
cmp
pop
adcl
test
sbb
mov
mov
gs
aad
push
push
nop
mov
sbb
cmp
xchg
adc
mov
mov
pop
push
mov
push
or
inc
mov
xchg
lret
xor
ja
push
pushf
notb
leave
ret
cltd
mov
shrb
push
arpl
outsb
adc
inc
mov
push
lea
push
out
ljmp
push
nop
mov
gs
mov
mov
out
dec
sahf
in
push
sahf
xchg
and
inc
fwait
push
sbb
bound
insb
adc
ss
or
popf
xor
push
loop
cs
les
sti
movsl
adc
sub
popf
push
inc
test
movsl
leave
xchg
sbb
mov
cmc
mov
into
rcll
stc
ljmp
data16
movsb
dec
xor
clc
outsl
call
lock
and
mov
loope
jge
cmp
push
pop
arpl
mov
inc
jb
repz
arpl
mov
jo
cmp
fs
sbbl
or
push
les
jge
inc
push
xchg
movsl
and
out
mov
xchg
jmp
lret
fwait
lds
jo
and
cmpsl
dec
push
scas
inc
nopl
push
shll
mov
push
notl
push
dec
push
aaa
fimuls
lcall
es
pop
call
cmpsl
mov
push
jge
in
mov
scas
cmp
in
test
adc
std
jge
cli
jecxz
lods
and
arpl
aaa
ja
cmp
ret
jb
int
add
jo
mov
push
jmp
mov
negl
sahf
xor
mov
add
rorl
ffreep
icebp
adc
testl
dec
add
iret
push
ja
es
in
test
cmc
imulb
push
out
cmp
mov
outsl
cmp
cmc
inc
dec
daa
sbb
int
popa
in
mov
xrelease
push
into
lea
and
lcall
pop
repz
mov
scas
dec
mov
push
shlb
push
jmp
adc
adc
into
dec
xor
jp
inc
xchg
cmpb
fbstp
dec
into
add
xor
divl
iret
and
bound
push
mov
iret
js
adc
iret
and
dec
js,pn
inc
mov
cld
repnz
out
or
cmc
mov
adc
push
lahf
push
addl
idivl
daa
xchg
lret
jno
sbb
mov
lea
into
xor
test
push
jmp
sbb
dec
sub
rcrl
iret
pop
adc
mov
and
repz
adcl
inc
mov
ds
stc
nop
xor
lea
inc
xchg
addr16
add
push
adc
mov
cltd
adcb
xor
jno
inc
nop
cwtl
inc
inc
or
aaa
fildl
push
mov
sbb
xchg
sub
mov
iret
xchg
pusha
iret
jg
ds
xor
adc
scas
repz
scas
and
jno
jg
iret
dec
and
xchg
lret
loope
cmc
xor
push
aaa
dec
pop
gs
jne
mov
mov
ret
andl
xor
push
jg
hlt
lods
mov
lds
pusha
push
fsubr
add
pop
inc
test
mov
aas
mov
imulb
jno
fcmovne
xchg
or
bound
jno
nop
or
cmp
pop
push
test
shll
sub
int
icebp
jl
cmp
sbb
mov
inc
xchg
test
out
ret
out
iret
negl
push
sub
dec
pop
xchg
orl
mov
jo
arpl
stos
popa
xchg
mov
add
jl
sub
pop
pop
jl
das
inc
dec
push
xor
movsb
push
mov
sub
adc
cmpsl
call
dec
push
icebp
jecxz
cmp
pop
jo
push
loope
mov
xor
push
push
cmpl
call
rcll
outsb
push
xchg
dec
jns
add
mov
jns
mov
pop
lock
pop
pop
inc
rorb
mov
pop
pop
or
in
mov
mov
jge
movsl
gs
scas
aam
sti
mov
fs
cli
ljmp
sub
nop
mov
xchg
push
lfs
adc
cmp
cmp
cmpsb
jle
adc
dec
outsb
and
insb
mov
cmp
jbe
mov
daa
sub
addl
mov
mov
nop
popa
push
xchg
xchg
in
nop
mov
mov
lcall
cmpsb
rorl
pop
rclb
mov
xchg
xchg
push
mov
aam
pop
jmp
mov
xchg
std
rcll
je
mov
repnz
lock
les
mov
mov
iret
into
mov
mov
xorb
pop
xchg
mov
push
out
mov
aaa
subl
and
cltd
lret
dec
xor
cwtl
mov
jb
icebp
mov
sub
stos
mov
jb
xor
sti
orb
stos
hlt
sub
mov
xchg
push
insb
jne
jmp
push
jb
hlt
push
jnp
fcompl
insl
mov
cmp
xchg
lods
mov
imul
aas
mov
cwtl
push
aaa
fldt
mov
adc
ftst
stos
lahf
adc
cwtl
pop
scas
inc
dec
sbb
xchg
jg
stc
testl
push
push
and
mov
scas
mov
enter
jg
pop
xor
cmp
repnz
push
adcb
aas
sub
insb
pop
sbb
xor
cmp
adcb
dec
fcmovnb
rorb
ss
push
shll
scas
jle
push
inc
adc
inc
popf
ljmp
and
and
pop
push
or
loopne
lods
xor
jno
jle
jl
sub
dec
or
or
dec
mov
test
and
xchg
xchg
arpl
mov
sub
ja
push
test
pop
repz
test
loope
xchg
rclb
mov
pop
lret
jg
and
je
orl
call
mov
shrb
int3
xor
lods
pop
roll
jnp
test
jo
and
push
push
dec
pop
pop
dec
bound
sub
jl
fwait
cmp
mov
push
jb
stos
iret
jae
mov
dec
pop
mov
push
sub
out
jno
aaa
nop
inc
sub
loopne
lods
loopne
mov
icebp
cmp
pop
rcll
movsb
jns
insl
cmp
daa
lds
dec
icebp
xchg
push
sahf
out
jl
xchg
mov
daa
daa
mov
loope
addb
cmp
mov
push
lret
add
dec
or
enter
xchg
jae
push
cmp
inc
shlb
sbb
dec
ja
push
jne
pop
pop
ja
adc
adc
push
in
ret
daa
test
cmp
mov
mov
mov
ror
mov
push
push
enter
in
or
add
in
push
push
lods
sbb
lds
sbb
iret
inc
fs
mov
cmp
cld
adc
movsl
sbb
outsb
js
cmp
dec
daa
arpl
in
or
scas
mov
sub
push
jp
lock
xchg
sti
dec
or
or
ftst
imul
inc
rorl
test
mov
test
mov
rolb
mov
mov
nop
mov
roll
iret
adc
out
int3
aad
lahf
cwtl
movsl
push
cmp
xchg
fstpl
mov
int3
adc
or
fsqrt
testb
iret
into
push
rclb
adc
fsubrs
fcoml
and
in
jb
es
xchg
pop
pop
push
lods
dec
mov
inc
test
aaa
lea
pop
pop
sub
nop
mov
dec
test
das
aaa
lret
subl
adc
fsubs
inc
lcall
jbe
scas
test
inc
inc
mov
fwait
pop
stc
jmp
pop
xorb
iret
mov
inc
dec
addl
xor
mov
iret
lock
aam
aam
add
imul
sbb
mov
or
sbb
idivl
ret
sub
sbb
daa
and
orb
fsubrs
add
mov
in
shrl
push
jmp
adcl
call
idiv
outsl
into
push
dec
mov
ret
test
repnz
sarb
test
dec
call
js
mov
out
shr
mov
cmp
lcall
add
lock
ljmp
pop
data16
mov
in
push
adc
sbb
add
fwait
push
lock
inc
gs
mulb
push
mov
lock
adc
mov
dec
sub
negb
lods
std
ljmp
adc
fidivl
aaa
dec
jne
out
mov
int3
cld
iret
mov
movsb
and
scas
and
xchg
sub
mov
hlt
andl
lds
xchg
adc
scas
add
mov
jo
and
out
cltd
ret
ja,pn
push
push
mov
jmp
les
ret
push
pusha
mov
subl
and
fstps
push
scas
push
std
loop
aas
mov
push
push
imul
test
mov
mov
xchg
stos
adc
lock
sbb
jl
xchg
xor
cmp
dec
dec
mov
dec
out
addr16
ja
mov
loopne
out
cld
enter
xchg
in
iret
or
loopne
or
iret
xchg
xor
das
and
dec
xchg
ja
cwtl
fimull
movsb
mov
decl
ret
mov
sub
stos
jnp
inc
sub
gs
jae
xchg
mov
mov
xchg
xchg
jns
mov
push
popa
mov
ds
cmp
nop
add
mov
outsb
cmpsl
adc
shlb
push
sbb
sbb
test
test
sbb
adc
shl
push
jecxz
enter
push
les
inc
adc
xor
sub
xor
mov
es
xor
pusha
xchg
mov
and
sbb
xchg
push
fwait
push
and
cmp
cmc
push
xor
push
idivl
jae
aam
mov
iret
pop
push
pop
jo
cmpsb
sahf
hlt
xchg
add
ret
call
fstps
ds
inc
pop
cwtl
cs
repnz
pop
fldl
and
imulb
inc
jmp
ss
test
mov
or
jns
mov
aas
mov
cmp
jno
pop
repnz
or
lcall
push
nop
adc
and
jp
hlt
cmpsb
gs
loopne
pop
lock
inc
lock
xor
xor
lock
inc
adc
jmp
xorb
xor
rcrl
rcrb
xor
xor
mov
leave
dec
pop
mov
mov
pop
sub
cmp
xchg
cmp
sub
cmp
loope
aas
loopne
and
xor
rcr
notb
popf
mov
int
fnstcw
fdivr
jmp
mov
nop
add
cmp
xchg
xchg
or
std
loope
cmp
inc
mov
shufps
popf
sbb
mov
push
test
mov
mov
pop
xchg
in
dec
mov
out
cmp
ds
es
shlb
mov
scas
into
mov
ljmp
scas
inc
jmp
inc
inc
out
sbb
adc
test
push
inc
sub
data16
mov
cmc
in
xchg
xchg
add
sbb
xchg
ss
orb
shlb
dec
popa
repnz
sub
aaa
rcrb
aad
xor
gs
jb
xor
and
stos
mov
cmp
dec
pop
mov
icebp
lock
jmp
stos
ljmp
mov
add
js
fcomps
add
rcll
adc
nop
push
test
loope
or
cmp
mov
or
push
mov
adc
lds
mov
push
loop
imul
push
inc
xchg
in
add
xchg
call
mov
pop
sbb
scas
mov
xor
and
inc
jb
sbb
and
cld
gs
sahf
cmp
jne
mov
imul
push
lret
cmc
into
shlb
push
call
lock
outsb
pop
xchg
sbb
daa
sbb
cmpsb
lods
mov
mov
into
or
sub
rcll
add
incb
mov
and
imul
out
push
shrl
pop
call
call
mov
cltd
or
push
testl
mov
cmp
xor
stc
lret
mov
inc
cmc
repz
push
jg
mov
inc
mov
pop
xor
sub
movsl
popf
xchg
push
pop
loope
icebp
lods
out
iret
lock
xchg
cmp
mov
add
stc
lahf
xor
cmp
addr16
sbb
pusha
dec
cmp
adcb
rcr
mov
out
mov
inc
daa
cmpsl
pop
push
dec
sub
xchg
sbb
sbb
shlb
lret
adc
ror
std
imul
xchg
loope
nop
sub
pop
cmp
add
movsb
dec
mov
lret
dec
daa
pop
pop
imul
int3
inc
lahf
aam
mov
mov
je
gs
mov
enter
push
fimull
aas
into
jno
arpl
adc
daa
mov
jnp
mov
dec
adc
xor
inc
std
or
xchg
shl
scas
sahf
nop
mov
push
outsb
pop
push
jbe
icebp
mov
lock
pushw
inc
xor
mov
jns
adc
sti
sar
jne
dec
gs
sbb
test
and
adc
adc
lret
shlb
out
icebp
dec
pop
into
push
push
incl
xor
add
xor
scas
rorl
scas
pop
push
push
fwait
mov
xorl
pop
inc
cs
jge
clc
fldt
jne
adc
ds
std
push
enter
jle
fwait
or
push
je
jge
bound
movsl
jg
nop
add
std
jmp
cwtl
fmuls
pop
stos
xchg
push
out
sub
jo
dec
cwtl
in
push
push
xchg
into
inc
or
in
out
lds
adc
test
cmpsl
dec
ja
cmp
cmp
adc
lret
call
xor
fistl
jne
sbb
fxtract
jno
add
jno
out
arpl
jno
push
push
nop
into
cmp
mov
and
mov
rorb
enter
imul
jns
roll
mov
sub
sub
stc
lahf
pop
int
cmp
ficomps
sub
leave
and
cltd
jbe
lock
dec
nop
out
stos
push
push
cltd
dec
xchg
or
divb
and
mov
mov
xchg
push
dec
mov
dec
mov
lret
dec
stc
push
xchg
test
jle
cltd
insb
stc
push
cs
mov
xor
xchg
or
jns
inc
adc
pop
repz
mov
push
push
pop
sbb
or
lret
jmp
cmpsl
addr16
pop
arpl
outsl
mov
pop
daa
sbb
loop
fdiv
or
clc
gs
xchg
insl
fwait
cwtl
pop
push
pushw
mov
mov
popa
in
or
das
mov
mov
sahf
loopne
lods
sub
inc
repnz
xchg
nop
shrl
pusha
movsb
push
mov
and
shlb
sbbb
mov
xor
cmc
push
sbb
imul
jle
or
push
pop
int
add
clc
cmp
push
mov
hlt
push
ret
mov
rcll
popf
sub
sub
jbe
mov
fsts
inc
bound
sarb
ss
mov
out
fcomi
fucomip
out
test
push
jbe
divl
fwait
xchg
pop
hlt
push
and
xor
xchg
mov
add
test
push
mul
inc
mov
aaa
cs
sahf
mov
imul
adc
adc
hlt
addr16
mov
enter
dec
push
cmp
sbb
jg
adc
lds
jmp
lcall
xor
popf
add
mov
cmc
fstps
xchg
xchg
shl
into
lahf
shll
neg
pop
rcr
das
fs
fldcw
xchg
fstps
into
inc
loope
mov
mov
xchg
mov
mov
icebp
pop
cltd
adc
inc
jle
out
divl
mov
fcoms
std
hlt
loope
cmp
out
ja
stos
enter
fs
movsb
xchg
xchg
dec
das
jae
lods
pop
insl
jbe
jo
psllw
test
push
stos
pop
les
jmp
and
sbb
xchg
mov
push
adc
shrb
sub
inc
pop
pop
div
das
aam
les
mov
jns
jle
adc
jmp
shl
gs
repnz
push
mov
mov
sbb
shlb
pop
pop
cmp
or
pop
xchg
int3
std
les
jo
inc
xor
mov
nop
out
pop
stc
jle
aam
pop
sbb
adc
rolb
pop
add
inc
lds
loope
push
or
lock
mov
mov
orl
in
popf
mov
xchg
lret
shl
jp
jo
into
and
std
rcrl
ret
lock
mov
inc
in
cmp
dec
adcb
icebp
xor
cwtl
pop
xchg
mov
movsb
jo
mov
or
push
dec
icebp
add
xor
xchg
jmp
int
je
and
inc
add
test
adc
mov
lds
pop
loop
fdivl
out
mov
xlat
or
ja
mov
js
and
inc
dec
mulb
push
add
call
push
pop
sbb
mov
es
fwait
sub
sbb
push
sub
in
mov
into
xchg
adc
call
pushf
mov
push
mov
das
dec
repz
push
mov
lods
push
lds
mov
jnp
push
cmc
inc
fildl
push
and
insb
je
ret
mov
fsubr
xchg
adc
ret
or
rolb
cmc
mov
int3
adc
sbb
test
lds
fnstenv
test
jns
dec
imul
mov
jno
sbb
pusha
xor
hlt
add
ja
push
js
mov
pop
lahf
jb
and
push
loope
pop
stos
sbb
pushl
jmp
inc
dec
xor
rclb
cmp
sub
push
test
or
imul
inc
and
sub
and
push
pop
jle
lods
mov
jno
sub
mov
movsb
nop
test
fidivrl
jae
and
test
adc
mov
sub
push
cmp
jg
dec
test
and
sub
out
pop
sbb
push
enter
test
sbb
jnp
orb
or
mov
xor
push
lock
dec
jmp
push
pop
xchg
iret
adc
stos
push
lret
xchg
pop
clc
dec
sti
cmovle
das
fcomps
cmp
xchg
leave
nop
or
cmpsb
sti
outsb
fnsetpm(287
add
ret
sub
scas
imul
mov
xchg
std
adc
mov
nop
dec
pop
mov
or
adc
xor
rcll
jo
push
mov
ljmp
mov
push
jae
push
sub
adc
ret
mov
in
ss
out
adcw
dec
mov
ja
pop
fmulp
or
cmp
aad
fwait
mov
mov
push
lds
ret
fcompl
lds
in
dec
xor
lods
jo
ljmp
lea
fmull
cmpsb
clc
inc
sub
in
xchg
mov
xchg
mov
loop
pop
fisttpl
adc
pmuludq
mov
cld
test
or
push
lea
mov
xchg
jmp
sub
test
adc
jge
sbb
test
stos
push
inc
into
push
mov
xchg
aaa
mov
in
mov
divb
lret
sub
jecxz
mov
add
push
pop
loope
mov
lret
aaa
inc
mov
inc
lea
mov
xchg
gs
add
incb
sahf
repnz
imul
pop
or
inc
icebp
das
jb
and
jl
mov
ficoms
xor
fisttpll
cmp
shll
xor
sbb
jge
aaa
enter
xchg
mov
add
inc
jle
mov
pop
or
test
jp
je
enter
out
mov
test
pushf
push
adc
mov
daa
sub
pop
lahf
lds
mov
add
in
insb
pop
mov
pop
jo
push
add
sbb
ljmp
scas
hlt
je
mov
fisttps
sbb
jge
scas
pop
aas
into
aas
pop
push
xor
ljmp
and
inc
sbb
lret
stc
mov
jp
or
fsubrs
popf
push
adc
mov
and
arpl
pop
lock
push
ret
or
mov
dec
fstps
jle
incb
jnp
ret
ljmp
push
dec
jecxz
out
push
enter
push
dec
adc
fs
clc
xor
mov
fwait
in
sarl
dec
arpl
scas
pop
xor
hlt
test
in
gs
mov
adc
adc
mov
nop
aas
inc
sbb
out
cmpsl
fucomp
jns
or
push
inc
inc
nop
mov
mov
cltd
fmulp
nop
or
movsb
jbe
mov
out
adc
std
fmull
std
call
ljmp
mov
insl
mov
mov
mov
inc
adc
mov
sub
lret
sti
sub
test
loop
dec
mov
out
pop
jmp
fistps
es
idivb
cwtl
clc
daa
or
imul
add
ss
loop
repz
xor
nop
inc
fistpll
loop
dec
cmpsl
rclb
inc
inc
ljmp
jge
ljmp
fdivp
dec
js
adc
stos
and
jb
dec
xchg
stos
testb
cmp
cmpl
sub
fimuls
scas
jg
inc
mov
pushf
or
pop
shll
arpl
loope
push
aad
movsl
aaa
pop
add
nop
inc
fldenv
pop
push
mov
movsl
aaa
subl
xchg
and
pop
fpatan
jns
std
aad
push
dec
test
xchg
adc
pop
inc
jmp
add
or
inc
xchg
xor
sbb
jnp
xchg
aad
push
sub
lds
add
push
gs
sbb
arpl
cltd
jl
iret
mov
cli
sbb
add
lods
xacquire
pop
dec
push
xor
pushf
inc
sbb
je
fldcw
call
inc
adc
insl
les
inc
mov
jmp
sub
repz
inc
dec
fsubrl
es
adc
fcompl
xchg
add
arpl
inc
add
scas
add
subl
test
mov
and
dec
iret
pop
push
lock
push
jbe
out
stos
cli
cmp
mov
adc
push
sbb
loopne
pop
lret
not
mov
bound
sbb
mov
push
divl
lds
stc
jbe
scas
movsl
les
xchg
inc
inc
xchg
dec
mov
adc
jne
shr
fs
rolb
jno
addr16
js
nop
push
pop
push
dec
lret
icebp
mov
push
gs
lock
or
shrb
and
hlt
xchg
icebp
push
leave
clc
ja
lock
mov
xor
inc
push
call
xor
xchg
pop
or
jg
push
jmp
fisttps
test
push
mov
insl
rcrl
mov
ficoml
movsl
and
ljmp
aaa
clc
push
pushf
lcall
cwtl
sub
mov
push
xor
js
stos
xor
mov
xor
cmpsb
aad
fs
xor
in
or
mov
divl
shlb
outsb
stos
cmpsl
repz
jo
xor
adc
imul
mov
xchg
mov
mov
xor
imul
aaa
subl
xor
sub
sub
cmp
dec
ljmp
inc
stos
andl
dec
in
je
mov
cmp
imull
in
adc
imul
sub
scas
adc
and
push
and
pop
jnp
xor
or
dec
mov
imul
xorl
jp
data16
lea
push
cmp
hlt
jae
loopne
loopne
xchg
pop
dec
outsl
mov
mov
data16
inc
dec
mov
xchg
and
adc
dec
mov
pop
inc
add
nop
cmp
cld
pop
stos
sti
xor
mov
or
repnz
sarb
std
lcall
mov
pop
mov
imul
out
cmpsl
call
orl
dec
jp
and
xor
outsb
push
sbb
repz
add
in
out
pop
out
aas
stos
out
repz
pop
fs
idivb
xor
pop
in
shll
daa
into
pop
fs
and
mov
negb
mov
repz
fwait
xchg
jae
dec
ds
pop
aaa
or
fiadds
jbe
mov
jns
gs
inc
fidivs
sub
cltd
mov
dec
add
sub
sub
aas
xor
mov
in
int3
pop
in
mov
gs
imul
cmp
loope
ret
and
xchg
iret
or
push
dec
xchg
stos
bound
iret
jae
loop
xchg
pop
roll
imul
movb
cmp
xor
adc
push
jecxz
or
sub
push
dec
xor
andb
aas
jo
aad
and
icebp
sub
push
cld
push
dec
push
pop
jo
mov
fwait
iret
xchg
fwait
pop
xchg
das
cmpl
sub
adc
pop
jge
testl
jle
outsb
das
popa
je
add
cmc
aaa
mov
mov
test
jae
aam
pushf
imul
es
nop
inc
pop
push
mov
jbe
lds
pop
push
and
xchg
or
mov
ljmp
into
inc
shlb
xchg
mov
or
pop
inc
outsl
fmull
rcrb
shll
les
mov
jg
sub
nop
sub
pushw
xor
stos
sbb
stos
in
rcrb
rclb
mov
popf
and
aam
fldt
xor
inc
scas
data16
movsl
sub
cld
or
or
mov
mov
repnz
mov
mov
mov
mov
gs
mov
adc
js
adc
jbe
fcomps
jp
repnz
adcl
hlt
push
cmp
int
jl
aam
sub
dec
aaa
jle
mov
xchg
imul
jmp
mov
mov
in
fbld
adc
stos
cmp
arpl
cmpsl
pop
sub
loop
repz
inc
cmp
outsb
lods
push
mov
mov
cltd
push
push
cmpsb
and
daa
jne
aaa
sub
xchg
mov
push
mov
lret
aam
nop
pop
outsb
mov
mov
call
jp
orl
lcall
xchg
mov
mov
rorb
fimuls
lret
xchg
rorb
aad
xchg
in
in
ljmp
in
xchg
imul
nop
mov
pop
jo
lret
divps
bound
mov
mov
or
mov
sbb
mov
ljmp
inc
push
test
movsl
cmpsl
sarb
cmp
cmp
dec
roll
pop
dec
int3
fadd
mov
movsl
mov
sub
mov
pop
mov
cmp
dec
adc
dec
xchg
sub
imul
gs
aaa
sbb
int3
lods
sti
push
icebp
mov
scas
add
shr
jns
adc
scas
lock
and
test
push
lcall
cld
push
xorl
and
mov
mov
adc
nop
scas
or
sti
xor
sbb
push
inc
mov
lahf
lods
jne
mov
lock
pushf
inc
xchg
je
iret
in
sub
sahf
jge
ss
push
sbb
fs
out
or
outsl
repz
shlb
js
inc
out
fcmovu
movsl
jmp
mulb
adc
xor
fidivs
xlat
sahf
lods
aaa
ss
jo
xchg
push
mov
inc
xchg
jge
mov
dec
push
cmpsb
jle
gs
jbe
stos
jns
les
adc
popf
jmp
ja
push
xchg
stos
mov
into
clc
lahf
adc
cmp
push
jb
cmp
jmp
mov
sbb
pop
dec
xchg
mov
pusha
sbb
xor
xchg
jmp
cmpsb
rol
ss
aaa
sbbb
mov
imulb
fsubrs
jnp
dec
imul
jo
fnstenv
ds
mov
sub
imul
push
rclb
dec
lahf
pop
xchg
sahf
mov
cmp
jge
movsl
idivb
sti
nop
xchg
mov
iret
and
fsubrl
pop
dec
jmp
sub
xchg
mov
adc
jecxz
sbb
xchg
call
sti
loopne
xchg
xor
mov
sbb
fistpll
sub
scas
cld
adc
jecxz
push
mov
das
jl
cmpsl
or
divb
push
xlat
movsl
add
arpl
mov
aaa
cs
or
or
pop
movsl
mov
mov
fildll
es
arpl
mov
outsl
or
push
xchg
nop
fisttpl
jmp
jae
cmpsb
ret
lret
dec
adc
aaa
fadds
dec
and
xor
jge
xchg
lahf
testl
std
pop
mov
push
mov
fisttpl
test
dec
lods
cmp
les
outsb
out
xchg
fwait
mov
jle
dec
lds
jge
inc
cmc
daa
lds
les
mov
mov
dec
iret
inc
arpl
ret
mov
xor
ret
xchg
daa
pushl
loope
mov
sbb
xchg
out
and
scas
ficoms
cld
cmpl
jle
cs
or
shl
movl
lret
sub
mov
mulb
test
jb
addr16
sub
out
and
les
add
pop
ffreep
test
in
or
sarl
aad
jo
lods
cld
jmp
xchg
aad
les
xchg
iret
sbb
cmpsb
pop
inc
cmpsl
push
xor
push
mov
lods
adc
mov
ljmp
aas
mov
clc
xchg
or
pop
sbb
fsubrp
push
and
dec
xchg
out
adc
fildll
cmpsl
nop
jge
repz
pop
testb
sbb
sub
push
ss
cmp
subl
xchg
in
cmp
shlb
dec
outsl
inc
mov
or
push
mov
or
lock
test
test
pop
sahf
addr16
ss
dec
push
es
addr16
out
mov
xchg
cmpsb
pop
loop
push
cmp
xchg
out
xlat
outsb
stos
out
daa
in
jl
mov
xchg
lea
mov
jg
loope
fsubrl
movsl
inc
mov
adc
bound
xor
mov
stc
xchg
mov
push
pop
into
fs
dec
mov
dec
into
aad
jge
inc
push
or
mov
pop
sbb
xchg
xchg
or
cmp
dec
stos
or
mov
pop
xchg
dec
and
loopne
mov
stc
inc
cmp
fs
jge
ss
into
mulb
mov
push
mov
jnp
xchg
nop
dec
and
xor
jno
fnstcw
xchg
mov
xchg
dec
fidivs
stc
xchg
es
pusha
cmpl
pop
and
xor
dec
jbe
sbb
sahf
mov
jecxz
mov
push
pop
ja
adc
sti
dec
es
or
loopne
mov
xor
inc
mov
aad
pop
push
sbb
push
repz
in
adc
repnz
int
add
lret
jne
push
out
sub
in
pop
cwtl
sub
notb
push
rorb
call
push
mov
push
push
je
ret
mov
inc
cmpsb
xchg
push
jecxz
aad
dec
ficoml
nop
in
std
cmp
jge
pusha
int
cmp
lds
out
vcvttsd2si
idiv
and
cs
pop
xchg
and
pop
aaa
shlw
mov
push
mov
divb
push
mov
sbb
jl
cmp
add
jne
into
in
pop
adc
rcll
xchg
mov
cmpsb
cmpsl
push
jmp
jecxz
xchg
pop
or
push
inc
push
jnp
jge
mov
jo
cli
test
test
and
lods
jmp
pop
loopne
inc
sbb
ljmp
out
fs
or
and
xchg
lea
data16
mov
xchg
mov
std
rclb
fidivs
lods
sub
adc
push
pop
pshufw
insb
xor
mov
daa
jle
test
mov
mov
rcr
dec
dec
push
jmp
cmp
das
inc
sbb
mov
xchg
pop
add
xor
add
out
jge
inc
adc
mov
scas
inc
outsl
nop
cmp
fwait
mov
xchg
lahf
dec
mov
test
enter
lret
ja
sub
jg
mov
mov
aad
jb
dec
aas
mov
push
pop
in
cmp
or
jnp
dec
xor
mov
xor
mov
aam
popa
xlat
lds
sarb
cmpsb
int3
sub
shrl
dec
mov
dec
imul
jb
popa
jg
xor
loope
aas
jae
or
into
sub
xchg
mov
adc
rorl
test
xchg
hlt
mov
fstl
jg
jns
xchg
imul
hlt
std
dec
sbb
sbb
dec
xor
jle
enter
movsl
test
mov
mov
mov
in
cmpsb
shlb
lcall
lret
pop
lcall
push
dec
sahf
lds
adc
mov
lret
lds
daa
push
adc
xchg
and
scas
sbb
jge
push
mov
mov
mov
lds
mov
aaa
inc
cli
mov
lods
pop
lret
mov
insb
xor
mov
fnstcw
jbe
xchg
inc
push
mov
cld
inc
adc
clc
and
cmovs
xchg
notb
mov
aas
imul
pmaddwd
pop
xor
jmp
shrb
mov
push
int
mov
jne
fwait
mov
testb
inc
inc
shrb
roll
testb
test
sahf
push
jns
jo
sbbb
jbe
xchg
lret
arpl
leave
inc
adc
pop
and
sub
mov
xchg
mov
pusha
movsb
std
dec
sti
out
in
aad
adc
xorl
movsl
sbbb
sbb
push
cmpsb
cs
xor
sbb
mov
fs
inc
scas
enter
loop,pn
jne
jbe
jns
lock
or
push
fistl
pop
mov
mov
imul
mov
lock
and
cltd
mov
test
dec
dec
lcall
shlb
jb
scas
sub
or
lods
push
je
repz
xlat
test
dec
lods
jg
dec
jge
stc
mov
lods
pop
je
xchg
lds
mov
push
cmp
lods
iret
dec
divb
push
scas
nop
and
and
in
and
test
hlt
lgs
mov
mov
push
adc
mov
das
mov
ljmp
push
test
js
mov
repnz
imulb
and
cmc
cli
scas
in
mov
ja
movsl
mov
fcoml
ja
sub
pop
into
std
mov
out
jl
pop
mov
pop
jmp
lret
aad
sarb
pusha
imul
popf
dec
xchg
cmpsl
pop
ja
mov
sbb
push
pop
mov
repz
stos
and
adcb
xchg
mov
cmp
jno
cmp
push
lds
bound
push
stos
sbb
dec
or
fcoms
push
loopne
lcall
jnp
ret
nop
scas
les
inc
out
test
jnp
cmp
cld
inc
lods
in
daa
out
sub
pop
arpl
sub
dec
pop
ja
add
arpl
test
gs
jp
add
mov
stos
lods
ja
aas
xchg
mov
mov
mov
mov
jnp
les
mov
jne
xchg
pop
out
push
fimuls
and
js
ja
jp
push
rcl
outsb
pop
std
dec
imul
push
sbb
sbb
enter
loope
xchg
xor
in
push
jne
into
mov
into
neg
repz
divl
or
loop
fmull
adc
cmp
popa
xor
jbe
das
jb
lea
xor
inc
xchg
test
xchg
push
mov
pop
les
inc
push
push
mov
and
jno
jo
and
ret
sbb
cs
lea
in
adc
and
or
lahf
pusha
adc
push
into
in
dec
in
push
sbb
pop
fcoml
int
or
or
cwtl
dec
aaa
ljmp
xchg
shrl
rcr
cmpl
lock
cld
push
pop
les
sbb
or
popa
daa
fucomi
fwait
stos
push
sub
push
inc
or
out
sub
fcoms
pop
mov
outsb
out
inc
push
repnz
dec
inc
add
fimull
cmc
and
or
mov
rcrl
push
loopne
pushf
pushf
and
gs
stos
and
xor
pop
nop
inc
out
mov
js
outsl
inc
int
mov
aas
push
or
cld
aad
inc
paddusw
call
je
mov
push
push
ja
jae
mov
jmp
jno
cmp
and
jbe
in
cld
xor
or
mov
pop
dec
pop
inc
dec
cltd
or
add
inc
scas
and
mov
xchg
jae
push
pushf
add
ja
mulb
mov
aad
out
pop
jne
mov
cltd
into
sbb
adc
flds
lods
or
mov
pop
aaa
xor
mov
repz
sbbb
ljmp
imul
xchg
jg
test
mov
sti
inc
inc
fdiv
jp
jle
or
mov
mov
scas
in
outsl
movsb
data16
pop
sub
xchg
fs
sbb
lds
outsl
les
rcrb
and
inc
dec
push
das
jae
xor
int3
mov
mov
fiadds
in
cltd
cmpsl
addr16
xor
mov
pop
or
lret
lock
mov
pop
pop
and
out
stos
sbb
lcall
fistps
xor
outsl
add
push
cwtl
sub
inc
jmp
rorb
add
jle
imul
jecxz
outsb
movl
and
fistps
fldl
in
push
adc
xor
dec
rclb
xorb
jmp
lret
cmp
and
inc
push
cmp
dec
jne
xorb
or
outsb
pop
insl
stos
sahf
xchg
repz
leave
nop
sbb
cltd
push
mov
daa
cmpsb
call
jle
pop
dec
mov
shlb
fmuls
enter
jo
add
fldt
nop
nop
mov
mov
and
cld
add
sbb
test
pop
xchg
js
xchg
cmp
inc
add
fnstenv
add
sahf
mul
dec
lahf
sbb
inc
inc
clc
mov
inc
outsl
push
fsubr
sbb
adc
add
mov
lock
mov
cmp
xor
jmp
mov
test
aad
icebp
xchg
dec
sbb
jns
imul
mov
into
cmc
push
xchg
adc
loop
pop
cmp
pusha
ret
notl
push
jns
int3
adc
push
pop
testb
popa
mov
insb
mov
mov
jecxz
add
addb
repnz
sub
lret
jg
add
xchg
sbb
mov
cld
sub
xchg
adc
lds
mov
aaa
mov
nop
aaa
push
jmp
adc
pop
dec
xor
in
pushf
and
mov
les
dec
adc
cmc
fs
fadd
outsl
and
es
cmc
insl
leave
or
out
push
insl
dec
cmc
fs
clc
xor
aaa
inc
push
fistps
mov
mov
push
and
outsl
sti
mov
mov
cmp
or
std
mov
adc
rolb
add
cmp
push
cmp
dec
in
jne
cli
aad
outsb
jne
notl
jne
loopne
dec
daa
popa
push
adc
dec
pop
jnp
pop
sub
repnz
jae
push
and
jge
jg
xchg
addl
bnd
jge
and
shlb
push
push
aam
adc
sub
fidivrl
out
scas
nop
mov
lea
add
in
in
xor
nop
jmp
idivb
jge
in
test
stos
cmpsl
lahf
dec
xchg
cmp
cli
jae
fstps
dec
ret
and
ja
lods
inc
mov
das
xchg
stc
xchg
insl
push
popf
test
mov
adc
ds
test
loop
dec
mov
mov
cwtl
scas
mov
inc
cmp
push
icebp
mov
ss
aad
xor
jae
cmp
mov
sbb
outsl
in
std
mov
sbb
dec
test
xchg
arpl
cmpsb
and
in
mov
push
jo
lea
outsl
fs
mov
ljmp
mov
jae
pop
insl
in
and
jns
push
sub
dec
add
stc
in
into
aad
xchg
fdiv
dec
pop
dec
out
lea
out
outsb
xchg
stos
push
aad
lret
pusha
cmp
test
pop
popf
out
ficompl
scas
sbb
arpl
adc
insl
inc
push
mov
popf
stc
or
in
jge
and
sbb
add
jae
or
jp
test
adc
nop
mov
dec
out
test
lret
in
movsb
cmp
jbe
xchg
pop
or
xor
movsl
jle
push
sbb
inc
fxtract
adcl
mov
nop
cmpsb
lret
mov
lcall
mov
movsl
inc
push
pop
loop
or
push
push
xchg
xchg
xchg
dec
pusha
in
stc
lods
dec
pop
xchg
loop
lods
pop
mov
xchg
into
inc
lods
pop
and
lea
sbb
jmp
gs
rcll
scas
inc
cmp
dec
out
nop
pop
xchg
push
fimull
and
pop
jnp
insl
xchg
test
push
push
aas
jg
pusha
loop
cmpsb
insl
jno
sub
fadds
push
push
loop
push
dec
jp
adc
mov
mov
addb
popf
mov
fldl
jmp
stos
mov
push
jnp
into
jp
pop
mov
and
lods
cmc
lds
cwtl
ljmp
jmp
push
jb
fwait
xchg
mov
push
push
mov
lret
aad
ret
out
add
adc
jo
jmp
ret
jae
mov
xchg
js
xchg
sbb
dec
fisubrs
push
stos
popa
fucom
jecxz
test
fpatan
mov
loop
sbb
ja
lods
sub
cmp
popf
negb
or
test
xchg
xchg
xchg
hlt
dec
out
xchg
lds
cmp
jne
addr16
sbb
adc
int
dec
xor
push
jp
dec
jne
clc
xor
lret
stos
jp
mov
sahf
imul
test
int
xchg
cs
loopne
lods
push
lds
int
js
push
loopne
xor
add
inc
iret
add
mov
sub
mov
jg
js
cli
movsl
xor
xchg
pop
xchg
inc
jge
int3
jge
mov
jp
jl
dec
in
rol
xor
push
nop
sahf
add
rcrb
mov
pop
sub
pop
fldl
mov
in
xchg
das
dec
inc
xchg
xchg
cmc
sbb
in
cmp
out
leave
add
dec
mov
xchg
or
nop
lods
out
mov
xor
xchg
std
inc
mov
sub
push
and
scas
out
lods
test
repz
pop
mov
push
clc
jo
xchg
ret
push
or
sub
imul
ljmp
jle
inc
arpl
xor
int
popa
mov
add
orl
cltd
mov
dec
test
pop
jge
and
push
inc
xchg
repnz
adc
dec
inc
xor
sub
iret
test
jo
aaa
xchg
sbb
push
scas
sti
push
jmp
sbb
testl
mov
repnz
and
dec
inc
jo
outsb
test
push
xchg
inc
adc
push
mov
dec
cs
push
lds
pop
mov
sbb
into
sbb
or
xchg
jo
rcll
jae
and
inc
fimuls
out
mov
idivb
inc
daa
mov
jae
lcall
sbb
ljmp
jb
mov
int
mov
push
sub
pop
daa
xchg
cltd
mov
lock
ds
dec
sub
mov
in
iret
add
mov
popa
cmpsl
test
or
stos
xor
and
sbb
sbb
int
pop
repz
popf
dec
xor
mov
arpl
nop
fcomi
sahf
fdivl
gs
int3
bound
push
pusha
mov
stos
test
lcall
dec
push
pop
sbb
xchg
cmp
ja
mov
push
fidivrl
xchg
outsb
cmp
nop
pop
mov
fsubrs
pop
cmp
rcr
push
sub
mov
xchg
adc
sbb
cmpsb
sub
add
arpl
into
adc
testb
out
pop
pop
addr16
jbe
out
cmp
xchg
adc
cmc
mov
mov
cmc
pop
mov
sti
pop
dec
adc
rcr
mov
inc
mov
repnz
sbb
pop
daa
sub
addr16
mov
lahf
in
mov
adc
jg
dec
into
jae
scas
loope
pop
and
mov
loope
scas
addl
mov
leave
decl
adc
lods
cltd
jno
dec
iret
xchg
nop
pop
adc
decb
push
mov
outsb
add
xor
into
mov
fistpl
mov
dec
push
cld
dec
daa
adc
sub
mov
sbb
xchg
sbb
inc
adcl
dec
inc
push
adc
dec
fldln2
push
lds
cli
in
cwtl
or
ja
popf
xchg
dec
sbb
mov
jb
imul
mov
jle
loopne
into
jle
aam
xchg
mov
jb
or
xchg
adcl
push
movups
es
mov
call
push
lea
mov
movsl
mov
dec
das
xchg
pop
mov
fidivrs
dec
pop
das
popa
rorb
adc
mov
hlt
inc
pop
jae
jne
pop
ljmp
gs
int
sbb
gs
in
inc
pop
push
mov
mov
lods
pop
xchg
pop
pop
pop
sbb
stos
push
xchg
dec
daa
mov
flds
imul
daa
add
call
popf
jmp
xchg
inc
adc
inc
pop
xchg
xchg
mov
pop
xchg
jae
or
mov
xchg
lds
push
lds
xor
clc
push
push
dec
xchg
mov
xor
pop
mov
jle
scas
xor
enter
xchg
gs
jo
mov
push
dec
fimuls
push
gs
enter
push
inc
xchg
inc
je
xor
adcb
jle
das
stc
xor
pop
fimull
inc
lds
sbb
sti
or
fwait
xchg
inc
push
push
lret
sahf
fwait
xchg
loope
push
lods
sahf
stos
push
push
call
sub
cmp
jno
sub
repnz
push
mov
pop
push
sar
push
gs
leave
leave
fbld
pusha
lock
cmpsl
ljmp
and
les
cmpsb
jmp
pusha
xchg
aad
or
jg
or
jmp
icebp
out
in
push
popa
mov
push
pop
mov
int3
add
mov
cmpsb
mov
sbb
pop
imul
in
xchg
rcll
or
aad
mov
and
ja
scas
sub
fsubl
bound
sahf
pushf
test
push
mov
cmp
fs
imul
fists
xor
jae
mov
aaa
sbb
xchg
push
fidivrs
lret
aaa
repz
cmpsb
xchg
mov
jle
addr16
aaa
nop
mov
jae
aad
imul
shll
xchg
xor
stos
fistps
adc
jg
popa
mov
test
nop
push
mov
push
and
mov
das
adc
sub
push
stos
cmc
popa
push
sti
sbb
out
cli
mov
jno
lret
mov
sub
mov
xchg
adc
xchg
or
pop
dec
pop
jns
out
popf
cld
xchg
dec
adc
add
fisubrs
test
repz
into
shll
mov
xor
repz
xchg
inc
push
sbb
out
sbb
push
lret
xchg
es
scas
add
daa
pop
sbb
mov
scas
push
ljmp
jge
orps
nop
push
lds
divl
scas
sahf
mov
xor
sahf
loopne
shll
add
je
lahf
sbb
pop
sbb
pop
bound
out
imul
pop
jno
pop
cld
into
out
jecxz
add
dec
stc
pop
outsb
ja
rorb
and
mov
mov
mov
jp
loop
outsb
mov
mov
aas
nop
aas
dec
bound
xchg
sub
mov
jo
push
mov
fsubrl
mov
xchg
psubb
das
or
dec
aaa
addr16
mov
iret
jmp
cmpb
dec
inc
dec
lret
push
mov
rep
adc
enter
mov
mov
idiv
jmp
orb
xchg
cmpsl
sahf
popl
pop
jo
adc
faddp
imul
iret
xchg
rcll
mov
fisubs
mov
lahf
xchg
sbbb
fwait
mulb
je
aad
ja
and
sub
in
add
ljmp
cmc
ds
push
sbb
cli
pop
mov
iret
and
xchg
pop
cmpsb
arpl
push
xchg
shr
jecxz
xchg
gs
scas
mov
jbe
cmp
aad
je
mov
nop
clc
dec
jno
adc
push
push
lret
xchg
fs
push
dec
out
sub
jp
adc
xor
dec
fs
jb
mov
and
fldt
xchg
push
cwtl
adc
imul
xor
movsl
insl
mov
jno
pop
sub
mov
int3
negb
pop
pop
ret
dec
mov
es
test
popa
out
push
mov
xor
push
and
dec
sbb
repz
mulb
xchg
xchg
mov
repz
adc
addl
jmp
std
pop
ja
mov
nop
xlat
jle
enter
rcrb
out
fsub
push
mov
nop
sbb
jg
fs
stos
inc
sub
fs
rcrl
lret
xchg
add
or
mov
push
clc
stc
mov
xor
and
push
mov
jbe
dec
ja
mov
into
lods
les
push
movb
out
sub
scas
scas
mov
rcr
dec
inc
adc
sbb
or
sub
movsl
or
mov
sysenter
pop
inc
mov
rclb
mov
call
mov
int3
ljmp
sahf
push
push
lods
pop
outsl
mov
inc
pop
sbb
dec
xor
jo
nop
adc
jge
fucom
jbe
dec
nop
ret
out
push
dec
dec
dec
mov
lods
adc
pop
sbb
fisttpl
mov
push
xor
dec
mov
xchg
data16
fxch
xchg
mov
lods
pusha
clc
es
stc
les
sub
lea
mov
pop
add
add
pop
pop
xchg
xchg
add
out
or
repz
dec
pop
lock
stos
pop
and
mov
pop
stos
adc
daa
stos
or
test
jae
xchg
pushf
lock
clc
ror
das
shl
fnstsw
jg
das
sub
xor
xchg
push
xchg
lds
sbb
das
or
sbb
mov
fsubr
add
int
push
pusha
mov
arpl
xchg
lret
mov
pop
pop
jnp
mov
pop
mov
das
xor
cmp
divb
aaa
pop
clc
push
test
jo
orl
out
cmp
mov
es
into
ljmp
sub
dec
sbb
cwtl
cmp
adc
xchg
scas
jnp
jecxz
call
sub
fwait
mul
into
mov
idivb
dec
inc
adc
xchg
addr16
and
cld
mov
nop
mov
rcrb
and
sti
mov
test
cmp
aas
stos
daa
roll
sub
imul
lock
jle
push
int
xchg
push
push
push
adc
push
sti
mov
jg
xchg
jle
outsb
stos
lea
xchg
cmp
test
loope
jno
xor
inc
pop
mov
shlb
fucomi
loope
and
and
sub
xor
mov
push
dec
adc
jge
ja
fnstcw
sub
fimull
sarl
add
fdivrl
dec
jno
mov
add
xor
scas
sub
xchg
adc
lods
cmc
les
subb
and
rclb
lock
pop
iret
sub
lods
adc
test
push
jg
push
push
xor
lds
xchg
icebp
fbld
mov
and
dec
jmp
enter
xrelease
xchg
mov
xchg
into
push
xchg
mov
das
rcll
mov
repz
jno
jle
fists
sbb
mov
lods
lea
jl
mov
mov
jo
cld
jo
rcr
or
ja
pop
rorb
mov
stc
dec
sub
repz
cltd
inc
push
sub
nop
stos
aas
mov
aam
ret
negb
inc
nop
inc
dec
mull
lea
mov
xchg
sbb
add
aam
clc
cmpsl
test
popa
inc
aas
pop
xchg
jmp
call
pop
leave
push
mov
les
test
int3
leave
or
push
xchg
mov
adc
stos
xchg
push
fs
mov
bound
or
sub
jmp
lods
out
jl
test
or
adc
clc
adc
push
nop
dec
lahf
sub
aaa
cmc
inc
stc
add
mov
rcr
mov
addr16
shrl
xchg
loopne
scas
fildll
loope
sbb
shlb
xchg
sub
cmpsl
js
out
adc
push
sub
jp
xchg
adc
nop
push
pop
fcompl
ficoml
cmpsl
sub
cmp
aad
daa
inc
or
stos
adc
mov
cmpsb
inc
loope
shlb
scas
add
xchg
testl
es
scas
jp
cmp
popf
and
mov
add
das
hlt
flds
js
xor
insb
sbb
xor
cld
repnz
stos
data16
push
adc
daa
inc
repnz
rorb
and
dec
add
cmp
mov
and
or
mov
pop
dec
push
addr16
xor
stos
inc
xor
ja
add
xorl
into
mov
pop
test
cld
lock
sub
mov
std
into
xor
cmpl
dec
xchg
mov
push
mov
ficomps
xor
gs
pop
mov
cltd
enter
jmp
fildl
mov
pop
nopl
adc
jnp
cmpsb
dec
mov
push
test
xchg
scas
adc
fwait
add
and
sbb
push
cmp
mov
nop
lods
jge
jns
in
cmp
div
or
inc
sti
xchg
out
cmove
pop
xchg
push
test
cmc
pop
pop
lods
std
or
lret
repz
scas
cmp
scas
xchg
daa
sbb
and
roll
dec
mov
pusha
or
jae
lcall
adc
xchg
or
jle
push
ja
das
imul
or
mov
push
or
pusha
in
aaa
roll
lock
mov
idivl
xchg
push
inc
push
add
xor
divl
xchg
push
std
lahf
push
repnz
cmp
jb
mov
mov
add
xchg
mov
jge
negb
fists
xor
jb
jo
pop
mov
popf
pop
mov
xor
and
inc
in
clc
shl
cmpsb
xchg
ja
push
dec
ret
fs
mov
jle,pn
xor
sub
push
aaa
les
sti
mov
lods
mov
stos
xchg
mov
repz
andl
mov
xchg
xor
dec
adc
loopne
push
sarl
sbb
mov
outsb
mov
imul
xor
xchg
push
or
cs
push
imul
test
lea
imul
mov
gs
scas
bound
out
push
sbb
gs
add
cmp
popf
jnp
sub
jl
xor
mov
arpl
cmpsb
test
popf
add
jbe
push
mov
add
lds
daa
aas
mov
fcoms
xchg
sti
cmp
stos
or
test
jle
call
sbb
pop
lcall
mov
repz
out
cmp
test
jg
sti
insl
push
lock
sti
adcl
push
jge
inc
pop
popa
mov
lods
cs
aaa
in
jmp
lea
inc
pusha
ret
xchg
in
or
popf
and
fldcw
andl
pop
bound
stos
xchg
test
cwtl
lret
repz
xchg
adc
fstl
nop
mov
hlt
adc
fadd
rcr
subl
and
push
mov
cmp
lea
stos
jbe
jbe
and
jnp
mov
mov
xchg
push
sub
add
sub
sbb
jns
fs
push
into
test
ror
xor
pop
nop
or
fisttpl
neg
jmp
push
push
mov
xor
pop
stc
fs
das
cmpb
add
mov
sbb
ret
jo
xchg
push
dec
cmp
test
scas
cmp
and
imul
inc
popf
dec
or
xchg
shll
add
xor
das
mov
add
push
mov
dec
and
inc
jg
dec
xchg
mov
out
pop
lahf
xor
lcall
data16
out
lods
rcrl
mov
pop
push
add
daa
nop
mov
pop
xchg
inc
ds
iret
fxch
popa
push
je
mov
push
into
xor
push
fstps
vcvtdq2ps
push
pop
pop
push
and
mov
lret
ds
jo
lds
dec
sbb
ffree
mov
xchg
adc
push
lret
js
inc
bound
sub
jo
js
cmc
cwtl
cmp
inc
lods
and
sub
inc
push
lds
das
xchg
adc
sbb
bound
orb
push
xchg
push
aas
sub
mov
adcb
cmp
scas
mov
cli
mov
lds
out
rclb
xchg
ja
loopne
lock
jno
push
sub
aaa
push
adc
sub
jno
dec
lret
lock
adc
aas
lds
lcall
or
push
in
pop
jo
movsl
enter
adcb
imul
push
faddp
xchg
inc
jmp
in
mov
cld
pop
pop
addl
xchg
shl
jle
into
cmc
xchg
cmp
or
out
sub
sbb
stos
fxch
mov
or
les
add
fldt
or
test
enter
xchg
ret
adc
jle
xor
sbb
pushf
adc
inc
pop
or
sub
cmpsb
inc
and
sbb
pushf
push
adc
jo
dec
repz
xchg
lcall
dec
in
cld
push
jo
out
stos
das
push
xchg
mov
adc
pop
cmp
les
inc
dec
aas
fcoml
dec
imul
enter
push
and
and
push
fcmovnb
adc
xchg
and
push
sub
out
xchg
addr16
adc
popa
fwait
sub
call
aaa
push
fwait
push
inc
imul
dec
push
stos
into
in
mov
or
pop
inc
mov
inc
push
mov
scas
jns
movsb
push
sbb
popa
xor
cmp
push
sub
std
aam
imul
pop
sbb
or
aas
mov
scas
in
test
pop
mov
and
xchg
mov
xor
fistl
sub
mov
fidivs
stc
pop
sti
faddp
scas
idiv
adc
pushf
and
incl
mov
sbb
dec
push
push
cltd
mov
or
push
aas
divl
mov
push
jne
xor
xchg
or
out
test
adc
lfs
sub
mov
mov
repz
arpl
inc
inc
addb
add
and
push
or
jg
fs
mov
repz
mov
adc
pop
arpl
jge
xchg
pop
sub
inc
and
pop
sub
inc
push
cs
lds
adc
xchg
icebp
inc
push
imul
cltd
mov
cltd
mov
xchg
sbb
nop
push
cltd
fwait
adc
and
mov
subb
adc
add
push
inc
in
lock
aam
nop
pop
pushf
sub
lods
les
call
addr16
fs
inc
notl
nop
pop
cmp
fs
add
mov
sti
icebp
add
out
mov
jmp
add
out
push
mov
enter
int
popa
jg,pn
jg
and
mov
nop
dec
fs
xchg
pop
adc
icebp
ret
sub
call
and
mov
fisttpll
sbb
add
pop
dec
sti
icebp
rcr
push
mov
push
stc
pop
push
int3
xchg
ja
pop
mov
fisttpl
inc
xchg
jg
in
jo
mov
adc
les
pusha
mov
out
push
scas
stc
mov
hlt
je
pop
nop
add
or
rcrb
mov
test
mov
adc
lock
dec
dec
test
pop
add
or
mov
fwait
xchg
clc
les
adc
les
decl
adc
pop
xchg
add
or
inc
addb
fistpll
adc
push
adc
stos
inc
push
out
nop
jnp
test
mov
ret
and
repz
cmp
push
add
push
mov
addl
inc
movsl
into
jge
aaa
mov
shll
notb
nop
repnz
int3
dec
xor
sbb
mov
popl
jmp
ficompl
lods
mov
mov
adc
inc
push
mov
dec
in
rol
cwtl
jl
outsb
add
sub
lods
jo
call
mov
nop
lds
push
ror
push
mov
adc
inc
les
xor
cmp
jg,pt
adc
xor
imul
jle
lds
test
mov
or
sub
cmp
aaa
in
jge
fbld
sub
xlat
ss
filds
mov
or
out
and
and
bnd
sub
cmpsb
mov
cmp
push
sarb
fwait
addr16
and
imul
cmp
pop
inc
push
mov
push
aaa
cmpsl
inc
js
ss
mov
les
in
dec
pop
fsubs
and
int3
sahf
in
in
pop
or
sbb
bound
cmc
xchg
xor
push
inc
loopne
sub
pop
cld
adc
mov
dec
mov
scas
lahf
pop
sbb
nop
int3
sub
xor
scas
adcb
cwtl
jne
popa
int3
cltd
mov
xchg
enter
std
cmp
fwait
mov
pop
pop
dec
xor
or
and
in
nop
sub
cld
jae
rcrl
or
sub
add
xor
jmp
mov
sbb
jge
popf
std
inc
ror
loope
in
xchg
xor
daa
jo
mov
ret
cmp
cmp
aad
nop
lock
adc
lods
out
sub
jbe
je
xchg
in
cwtl
gs
loope
xor
mov
mov
adc
hlt
sub
xchg
sub
cmp
xor
push
loopne
stos
mov
mov
lock
subb
pop
mov
mov
jmp
xchg
arpl
sbb
pop
fs
pop
inc
and
xor
xchg
sarl
jl
xor
adc
lret
lds
jle
dec
enter
push
push
mov
test
nop
jbe
inc
jae
lock
iret
mov
iret
sti
cltd
nop
mov
dec
sub
cmpl
cltd
mov
pusha
pop
testb
filds
rorl
into
cmpsl
cmc
lret
xor
mov
jbe
push
into
dec
fwait
jb
push
out
imul
enter
mov
in
inc
or
inc
ss
and
in
push
into
arpl
lods
lcall
push
jno,pt
popf
push
mov
push
subb
pop
xchg
adc
out
outsb
sub
pop
sbb
mov
xor
pop
in
dec
push
in
iret
push
mov
inc
mov
inc
xor
in
fmuls
cmp
pop
insb
stos
jae
push
cmp
int3
gs
dec
add
jo
pop
cld
mov
cmp
pop
call
push
fdivs
dec
sub
fildll
cmc
xchg
jecxz
lds
inc
sub
adc
fadds
jns
push
out
fwait
cld
imull
mov
jb
mov
xchg
xor
lock
hlt
sbb
inc
jno
mov
lock
inc
sarl
sub
popa
out
push
sarb
fs
daa
jp
mov
dec
cmp
outsb
sub
adc
cmc
pop
jo
push
addr16
dec
dec
add
adc
test
cltd
mov
xor
loope
mov
sub
sbb
push
lods
mov
dec
in
xchg
jge
icebp
jns
pop
aam
pop
fldcw
mov
xchg
lret
mov
fildll
enter
fstl
jb
adcl
mov
pop
outsl
push
and
testl
pop
adc
fs
fwait
push
xor
xor
cwtl
mov
or
jp
int
jl
sbb
push
insl
pop
sti
das
inc
test
ret
mov
dec
into
xchg
out
mov
push
adc
add
sub
adcl
sub
dec
cwtl
addr16
mov
dec
into
ljmp
lret
inc
lea
aad
aas
mov
ret
aad
dec
xchg
fwait
repnz
mov
xchg
cmpsl
sti
ret
shll
push
rorl
pusha
xchg
iret
xor
jnp
fcompl
mov
jns
mov
adc
movsb
bswap
mov
lret
lds
scas
mov
dec
outsb
pop
faddp
mov
mov
push
shrl
mov
iret
mov
or
add
popf
jecxz
loop
daa
xchg
lea
ret
nop
lahf
iret
dec
pushf
icebp
cmp
xchg
or
or
add
jge
idivb
pop
sub
xor
repz
jmp
shrb
dec
or
pop
push
ja
enter
testb
cmc
push
bound
push
ret
lret
in
xor
pop
test
imulb
int3
xchg
xchg
mov
mov
mov
out
mov
gs
dec
test
jb
adc
neg
inc
dec
sbb
repz
in
jno
mov
hlt
push
cmp
mov
xchg
popf
or
dec
push
outsl
add
mov
out
fimull
xchg
xor
pop
dec
or
xchg
out
ficoms
mov
mov
push
push
nop
negl
cmp
push
xchg
mov
stos
sbb
imul
and
jle
push
subl
das
aaa
fnstsw
jbe
mov
ficoms
stos
rorb
adc
mov
test
je
push
jae
and
mov
les
xchg
popf
jne
sbb
pop
push
adc
push
ret
popa
shl
cs
pop
dec
xchg
leave
rol
fdivl
push
in
fndisi(8087
aas
push
insb
mov
dec
mov
xchg
sbb
cmpsb
test
xor
inc
xchg
push
jle
test
mov
inc
aaa
daa
mov
shll
enter
outsl
in
filds
or
loopne
enter
icebp
into
ljmp
inc
and
lcall
insb
gs
aaa
mov
out
xchg
mov
xchg
xchg
dec
push
daa
jno
dec
xchg
xor
in
sti
sub
sub
stos
inc
xchg
addb
lret
xor
scas
or
lds
xchg
inc
pop
mov
jno
dec
push
nop
sub
or
pop
fbstp
in
pop
movsl
mov
lret
jo
test
les
sbb
cmp
or
pop
inc
push
les
pop
rolb
sbb
xchg
loopne
xchg
in
xchg
jle
push
roll
les
push
and
mov
int
repz
je
les
cmp
mov
adc
mov
dec
iret
mov
xchg
jbe
stos
dec
push
cmp
mov
mov
push
jle
mov
fcmovnb
test
xor
xchg
dec
fisubl
sbb
push
add
xor
mov
fcoms
test
flds
sub
add
repz
scas
rorb
mov
sahf
pop
fdiv
repz
aas
test
xchg
adc
insl
mov
mov
aas
int
cmc
xchg
sbb
or
pop
jp
cmp
pop
cmc
popf
test
ss
out
mov
adc
movsl
and
xor
lods
pop
adc
fwait
loop
xor
sub
mov
les
out
push
loop
movsl
cltd
arpl
xchg
adc
ljmp
dec
out
push
mov
sub
lods
adc
ljmp
inc
sti
xchg
add
fcmovb
adc
stc
data16
jecxz
loopne
xorl
sub
repnz
pop
pop
fisubrl
outsb
add
rcrl
add
sbbl
bound
sub
lods
mov
imulb
sub
inc
adc
cli
adc
iret
stos
push
push
inc
sbbb
inc
bound
push
cwtl
mov
fwait
push
push
xchg
jo
inc
nop
imul
pop
inc
cli
cli
add
gs
fadds
add
cmp
lds
cmp
push
movsl
xor
shl
jmp
sahf
in
adc
into
push
add
mov
int
adc
and
shlb
rep
popf
mov
imulb
dec
adc
dec
popa
or
and
pop
sub
test
rorb
push
or
das
pop
sub
xor
or
out
daa
rclb
mov
rcr
jge
pop
les
int3
cmpsl
mov
sub
lcall
xchg
mov
xor
xor
inc
dec
sub
in
ljmp
jmp
cmpsb
movsl
sub
cmp
push
jns
add
or
loopne
ret
mov
xor
fucom
loopne
outsb
push
xor
hlt
mov
les
mov
js
inc
fwait
bndstx
jle
sub
into
jge
pop
les
out
testl
loop
popa
mov
mov
adc
out
add
xor
xchg
mov
and
in
shl
sub
out
clc
in
push
orl
pop
out
adc
mov
sub
push
lock
xchg
iret
adc
fwait
push
add
pop
push
lock
dec
dec
out
jbe
push
or
jnp
in
fsubrs
jb
xor
fs
loope
dec
sarb
adc
xchg
shlb
mov
lds
aaa
popa
cmp
int
fdivl
cld
push
cmpsl
fwait
clc
cmp
dec
mull
push
cmp
inc
movsl
pop
mov
pop
mov
inc
pop
xchg
popa
fcoml
fnstcw
cmpsl
mov
push
test
pop
push
dec
nop
into
mov
inc
testl
into
testb
js
push
dec
clc
inc
jns
popf
stc
xchg
jp
cli
fidivs
inc
ret
and
pop
test
inc
cmovg
stos
pop
xchg
mov
js
icebp
pop
in
push
xor
xchg
imul
dec
fisubrl
push
sub
es
cmc
shl
cmp
xor
mov
mov
add
mov
out
xor
jmp
mov
rorl
lahf
dec
adc
mov
jecxz
insl
push
mov
iret
mov
xchg
jno
mov
dec
push
xor
movhps
mov
adc
pop
stos
dec
jg
dec
fistpl
jmp
lea
pushf
cmpsl
xor
jge
stos
push
and
and
mov
pop
adc
sbb
pop
or
in
inc
nop
jo
mov
in
dec
jns
jmp
mov
cmpsb
in
push
mull
jae
mov
cmpsl
imul
mov
mov
xchg
lock
shll
inc
movsb
out
sub
sbb
pusha
xor
mov
lods
ss
jo
adc
scas
mov
pop
and
xchg
lock
pop
mov
lds
mov
lock
imul
inc
pop
jbe
inc
shrl
ret
mov
or
scas
mov
pop
scas
movsl
js
stos
imul
mov
xchg
in
lret
or
into
push
jecxz
mov
icebp
lods
or
jmp
inc
push
xchg
jmp
jae
ja
push
sahf
fs
mov
sub
mov
add
lds
pop
sub
mov
cmpsl
and
sub
mov
into
jns
sub
popf
cmpsl
rclb
cmp
mov
data16
cmp
aas
jg
pop
pop
fildll
pop
adc
mov
sbb
je
movsb
in
sub
es
cmp
xchg
mov
cmp
dec
push
mov
inc
jge
dec
sbb
loop
pushf
mov
mov
or
sti
xchg
mov
push
jo
lock
push
data16
xchg
jno
mov
push
xchg
stos
or
jb
xor
dec
pop
xchg
sub
pop
pushf
out
push
push
inc
lds
jo
cmp
mov
or
dec
adc
dec
jae
xor
mov
jbe
sub
fistpl
pop
insl
loope
adc
xchg
mov
dec
push
inc
scas
sarl
icebp
aaa
cmpsl
cmp
into
popf
cmpl
jo
loop
rcll
jnp
cmpsl
dec
stos
adc
mov
ret
mov
adc
mov
sbb
push
inc
push
add
mov
nop
lods
push
jbe
lds
push
scas
ljmp
addr16
mov
movsl
imul
hlt
xchg
decl
call
push
cwtl
std
adc
inc
dec
negl
sub
lea
stc
lock
das
aas
scas
xor
xchg
fstps
cmpsb
adc
adc
sahf
jmp
adcw
iret
push
sub
or
sbb
mov
addl
and
inc
fldenv
int
movsb
xor
dec
cmp
les
xchg
inc
dec
negb
out
push
or
dec
cmpsl
jo
mov
jg
dec
mov
sbb
roll
push
mov
inc
sub
dec
jl
pop
mov
out
pop
cs
in
sbb
jg
ja
push
lret
pop
inc
sbb
and
mov
popf
pop
insl
inc
add
aas
mov
cmpsl
inc
scas
xor
adc
mov
or
lds
fyl2x
add
pop
pop
pusha
xchg
loopne
or
pop
nop
cs
jp
xor
aas
or
cmpsl
outsb
mov
push
jp
xchg
add
mov
push
pop
jp
lods
push
mov
push
push
stos
stos
outsb
dec
imul
jne
jge
nop
mov
dec
scas
jge
mov
mov
push
sub
xor
cmp
stos
xchg
mov
add
and
mov
mov
jle
outsb
stos
lods
mov
jle
push
aam
ja
repz
jbe
sti
jbe
mov
mov
icebp
jmp
loope
lds
sti
ss
push
into
dec
test
ss
sub
cli
sub
mov
xchg
pusha
loopne
mov
mov
mov
fnstcw
and
out
popf
ret
jne
enter
jge
inc
imul
add
loop
andb
pushw
xchg
pushf
int
cmp
ffreep
mov
in
shr
sahf
sbb
sub
loop
mov
mov
xchg
lahf
xchg
cs
ss
out
shll
sbb
add
addr16
mov
pop
mov
in
xchg
dec
lret
ss
push
mov
decl
mov
loope
popa
fildl
mov
sub
push
jmp
jmp
xchg
mov
sub
add
movsl
stos
mov
lret
stos
adc
dec
shrl
inc
lret
or
xchg
dec
fcoml
fxch
iret
jecxz
or
lods
stos
push
push
fistpl
and
les
push
push
out
mov
fistpl
fidivs
add
and
ficompl
movsb
xchg
mov
negl
sbb
lahf
xchg
xchg
push
inc
mov
call
mov
test
xor
fisttps
xchg
mov
out
and
mov
pop
insl
push
inc
jecxz
xlat
out
inc
imull
aaa
lods
push
int
jno
add
mov
jb
pop
xor
push
xchg
mov
into
push
mov
mov
jmp
stos
mov
repnz
mov
sub
popa
jg
hlt
in
in
mov
dec
sub
lods
xor
nop
add
sbb
pop
push
outsb
xchg
fsubrl
mov
lds
je
pop
lock
xchg
jnp
fistpll
add
sub
xchg
inc
sbb
or
xchg
out
sbb
fisttpll
jo
push
sbb
incl
sbb
pop
sub
ss
iret
sub
outsb
jecxz
xor
shll
stos
in
das
scas
push
adc
mov
xor
call
dec
cmp
inc
pop
inc
jmp
lods
faddl
dec
push
cmp
daa
sbb
stc
dec
arpl
xor
mov
mov
clc
cmpsl
call
lock
dec
enter
push
xchg
fsubp
xchg
xor
test
cli
fwait
adc
mov
iret
cwtl
and
and
scas
push
or
sbb
frstor
mov
into
sahf
and
std
jge
pop
lret
sub
bound
fstpt
fcoms
and
dec
jbe
nop
cwtl
lds
ret
in
bound
lret
out
sub
mov
gs
xor
mov
mov
inc
xchg
xchg
repnz
aad
adc
push
scas
mov
data16
mov
das
jno
mov
das
add
mov
xchg
mov
aaa
xchg
ficomps
cmp
mov
out
mov
sahf
sub
test
testl
cmp
into
inc
fs
jnp
fs
int3
add
push
inc
add
sub
aad
out
adc
out
adc
divb
loop
mov
enter
gs
loopne
std
sub
out
sub
mov
test
arpl
daa
lret
xchg
adc
mov
mov
mov
dec
xchg
jl
xchg
leave
shr
shlb
ret
adc
pop
jmp
adc
inc
popl
xchg
xor
xchg
popa
fists
pop
nop
popa
in
push
fdivs
cmp
dec
mov
dec
int
jae
xchg
in
mov
jle,pt
ret
jno
aam
xchg
pop
insl
xchg
jle
xor
push
jb
test
xor
gs
into
arpl
cld
jne
sbb
push
leave
jle
push
dec
pop
mov
adc
stos
mov
mov
cltd
fsub
sbb
je
pushl
fcoml
sbb
cmpsl
push
jecxz
sbb
add
insl
cmp
inc
dec
lds
adc
out
push
dec
fidivs
add
mov
adc
push
lock
stos
in
sbb
push
outsl
bound
adc
or
lods
xchg
movsb
dec
in
jg
pop
or
leave
jg
in
jno
xor
jmp
les
pop
popl
fistl
pop
arpl
stos
ret
push
cld
stos
fldenv
jle
cmc
add
into
gs
sbb
nop
pop
daa
icebp
jae
adc
outsl
cmpsl
lods
movsl
pop
adc
add
jo
outsb
arpl
xlat
adc
mov
mov
jge
add
jle
dec
in
mov
data16
ljmp
xorl
push
pop
popf
stos
push
jno
xchg
jle
test
inc
gs
push
dec
mov
es
mov
mov
nop
outsb
and
mov
jmp
into
test
das
in
inc
push
ret
imul
pop
pop
xchg
fisubrs
cmp
mov
mov
pop
test
push
lret
add
mov
jns
enter
pusha
dec
pop
mov
faddl
push
cmp
stos
in
arpl
into
in
ffree
add
in
jp
add
sahf
fcmovu
test
mov
hlt
repz
aas
push
sbb
pop
mov
jb
sarb
fildll
pop
nop
scas
fidivrs
and
dec
fs
imul
push
pusha
or
call
mov
cld
adc
push
dec
jae
repz
je
hlt
or
mov
loopne
pop
cmpl
ja
arpl
push
add
sbb
les
cmc
and
jecxz
jae
repz
add
cmp
jge
push
inc
notb
add
pop
add
sub
sbb
js
inc
mov
cmpsb
in
mov
dec
inc
sub
cmc
faddl
fcomps
rclb
sti
ljmp
lock
adcl
dec
xor
xchg
enter
xchg
mov
das
sbb
xchg
inc
or
sbb
add
cwtl
hlt
in
movsb
inc
pop
fisubs
mov
sub
pop
addr16
mov
mov
add
xor
insb
test
incl
add
push
es
jo
sbb
popf
into
aam
fnstsw
pusha
mov
and
dec
inc
xchg
lcall
and
and
push
fcoml
sub
sbb
jbe
push
mov
mov
pop
add
test
mov
pop
ds
testl
inc
mov
dec
faddl
in
mov
test
xor
call
mov
mov
je
pop
inc
into
cmp
movsl
inc
pop
rcll
dec
sbb
lods
mov
mov
dec
dec
pop
add
pusha
ret
mov
or
mov
cmp
push
mov
or
mov
mov
js
daa
stos
pusha
jo
add
cld
adc
add
out
ljmp
aam
ja
scas
jge
icebp
inc
mov
and
stos
dec
ficompl
pushf
ret
xchg
sbb
cmp
imul
xchg
decl
pop
xchg
stos
orl
or
stc
orl
mov
pusha
xchg
mov
xchg
test
ljmp
pop
xor
andl
xchg
sarb
adc
data16
mov
push
inc
mov
cmp
push
jg
and
pop
jecxz
aaa
xchg
aam
je
imul
mov
pop
push
inc
stc
and
cmp
jns
mov
rcr
or
adc
pop
push
pop
xchg
mov
sbb
out
lret
rcrl
push
push
movsl
scas
push
dec
xlat
gs
out
rolb
inc
aam
gs
inc
mov
gs
xorl
fadd
dec
jmp
idivb
lcall
arpl
nop
sbb
jle
daa
sub
xchg
ret
mov
dec
nop
mov
mov
fstl
or
roll
xchg
xor
sbb
call
adc
lret
pop
sub
sub
inc
xchg
loope
lds
lret
xchg
dec
mov
arpl
cmc
push
dec
imul
sub
test
frstor
add
cmpsl
outsb
testl
sub
mov
jge
pop
xor
jnp
sub
sub
adc
push
dec
scas
imul
inc
jge
test
fildl
jg
mov
pop
inc
fmull
mov
dec
mov
in
push
cltd
lret
xchg
notl
push
pop
xor
lds
mov
jbe
popf
mov
aaa
or
jb
insl
xchg
adc
stos
sub
dec
add
outsl
pop
dec
jl
pop
stos
xor
push
inc
pop
mov
sub
popf
lret
push
enter
popf
jb
stos
test
xchg
mov
idivb
lock
out
cld
iret
dec
jecxz
test
xchg
out
push
fdivl
pop
mov
inc
lds
push
in
decb
test
xchg
pop
add
popa
pop
push
out
jl
inc
arpl
shlb
mov
mov
xchg
mov
xchg
jbe
sbb
lret
mov
mov
jne
xchg
cmp
inc
mov
xor
fistps
adc
pop
aaa
dec
xchg
xor
sbb
mov
pusha
jno
pop
fisubrl
out
add
adc
push
loope
mov
push
mov
mov
inc
jmp
sub
imull
and
push
mov
jecxz
mov
mov
mov
jno
mov
out
mov
mov
mov
sbb
stos
out
in
mov
xor
mov
add
sahf
push
popf
mov
and
addr16
aad
out
stc
loop
jmp
or
mov
pop
je
lods
dec
jne
test
jo
sahf
sbb
add
das
nop
ds
push
sbb
mov
sbb
pop
xchg
xor
mov
scas
nop
jb
out
cmp
xorl
out
call
jecxz
mov
stc
sbb
aad
jb
xor
jns
and
inc
out
pop
sub
mov
jmp
shll
xchg
mov
and
sub
fwait
mov
int
div
imul
rclb
out
sbb
es
push
pop
int
lret
push
mov
pop
inc
pop
test
and
rolb
fists
cmp
lret
adc
in
les
adc
mov
lcall
cmpl
das
fimull
cld
jns
enter
mov
scas
xor
lea
mov
and
xor
inc
push
inc
std
dec
mov
lea
in
adc
inc
mov
push
lock
xor
jge
aas
cmp
xchg
in
movsl
adc
fstpl
in
add
dec
sub
lods
sbb
jp
scas
fisttpll
testl
cmp
add
push
addr16
inc
jo
nop
je
pop
push
jo
xor
xchg
cmpsl
mov
push
pop
daa
xchg
in
inc
inc
push
inc
jne
test
les
inc
test
fnsave
add
xchg
pop
jp
cmp
push
iret
in
mov
push
sahf
fwait
pop
mov
lret
mov
sub
lds
push
in
jecxz
lock
add
das
mov
xchg
jecxz
xor
jle
dec
dec
movsl
aas
xchg
lcall
in
fs
cmc
insb
xchg
sub
jge
addl
test
cmp
outsb
repnz
int
into
fimull
cmpsl
cmpl
xchg
ret
push
and
mov
or
sub
cltd
sahf
dec
jo
or
ret
adc
mov
out
xchg
push
ljmp
cmp
mov
push
fsubs
fs
mov
cltd
stc
test
mov
subl
xor
cmp
leave
nop
addr16
push
sbb
idivb
sbb
repnz
xchg
pop
sarl
call
js
mov
mov
test
ret
jecxz
std
sbb
sahf
scas
add
xchg
inc
adc
lcall
sarl
push
push
imul
sub
sub
dec
das
push
push
cltd
push
or
hlt
inc
inc
push
ret
cmp
idivl
dec
aas
xchg
fmulp
test
dec
movsl
enter
mov
jns
jo
movsl
inc
mov
fists
aam
mov
adc
lds
dec
cmp
push
xchg
aas
dec
push
jle
xchg
xchg
or
pop
adcl
frstor
mov
pop
arpl
inc
pop
and
jno
or
jmp
add
pop
dec
in
fmulp
sub
enter
mov
adc
push
sahf
push
lods
loope
or
ja
mov
lds
jg
jle
mov
push
push
sarb
or
sbb
dec
push
mov
jb
aaa
and
jo
xor
adc
mov
push
iret
pop
push
jmp
add
adc
pop
adc
fiaddl
std
inc
divb
xor
scas
lods
divl
pop
rcll
lds
adc
jae
enter
or
lret
nop
jmp
out
in
pop
pop
pop
popa
lret
pop
xor
or
push
jg
sbb
pop
lock
ljmp
xor
or
mov
or
cmp
jne
out
xor
push
rcrl
inc
mov
xlat
mov
imul
mov
cld
xchg
stc
jbe
inc
test
scas
test
int
mov
push
sub
mov
push
into
aad
inc
psllq
xchg
inc
pop
inc
sbb
lods
hlt
push
sti
fdivl
xchg
in
and
fld1
pushf
sti
sbb
sahf
sub
pop
data16
into
xchg
xchg
popfw
or
pop
push
push
stc
jle
into
jp
add
xor
dec
shlb
add
sbb
das
lcall
push
push
scas
bsf
xchg
mov
stos
mov
pushl
mov
jno
scas
in
loop
inc
icebp
push
pop
xchg
ds
adc
cmp
icebp
jne
nop
jl
inc
sbb
stos
sbb
adc
mov
inc
and
es
test
aaa
sbb
outsb
popf
aaa
inc
insb
scas
stos
pop
jmp
sub
seto
push
xchg
mov
dec
mov
adc
jbe
and
aam
mov
shrl
mov
fimull
push
xchg
pop
mov
xchg
push
dec
mov
in
repz
arpl
and
ss
addl
jbe
ja
movsl
mov
lods
ja
mov
sub
stos
orl
or
pop
ja
in
jno
jbe
stos
cmc
xchg
bound
in
lea
test
sti
arpl
adc
dec
jle
lahf
mov
out
push
mov
xor
mov
sbb
push
push
dec
jle
xor
sub
xchg
xchg
jge
cld
mov
int3
jae
xchg
push
pop
ret
xchg
out
mov
out
xchg
lahf
nop
cmp
pop
fndisi(8087
push
mov
popf
repz
mov
and
cmp
sbb
pop
adc
mov
aas
adc
and
cld
sub
mov
push
mov
mov
mov
mov
or
or
sbb
out
sbb
jge
jno
mov
xchg
fldl
sahf
sub
pop
jno
int
mov
mov
xchg
divl
mov
sbb
lock
cwtl
xchg
movsl
test
xchg
fs
mov
out
xchg
push
ret
or
pop
xchg
lock
xchg
shrb
daa
lds
popf
xchg
addl
mov
fnstsw
fsubrl
sahf
aas
adc
or
inc
push
into
mov
std
xchg
repz
out
and
loopne
push
mov
enter
and
into
out
sti
inc
mov
jg
test
inc
sahf
add
fldl
push
cmc
dec
repz
pop
cmpl
sub
push
adc
cmpl
mov
nop
sbb
into
aaa
sub
ja
sarb
dec
inc
mov
push
sahf
and
push
adc
cmpsb
mov
cmpsb
dec
test
adc
xor
push
pop
or
inc
jb
into
nop
stc
cmpsb
frstor
xor
loop
cmp
fwait
fldt
nop
xchg
pop
pop
adc
cmpsl
jle
test
jae
jmp
xor
xor
jno
scas
push
insb
pop
pop
mov
pop
pop
xor
nop
push
scas
sti
aaa
scas
dec
sbb
idivl
ja
cld
aaa
nop
add
and
insb
rcl
sbb
xchg
push
shrl
repnz
and
stc
mov
sbb
into
jge
add
or
mov
into
sub
sub
inc
enter
mov
pop
pop
in
mov
inc
scas
out
push
pop
sbb
sbb
cmpsb
out
sbb
mov
out
das
lds
fwait
and
sub
mov
jbe
mov
and
mov
push
mov
pushf
movsb
imulb
fcmovnb
lods
enter
jne
outsb
pop
and
int3
sbb
push
fsts
out
mov
lret
insb
adc
outsl
jnp
sub
mov
movsl
mov
shll
movsb
mov
push
sbb
cltd
jns
adc
dec
and
test
outsl
lahf
mov
mov
fwait
cmc
lret
adc
lods
ficoml
arpl
cmp
rcrb
xor
jl
mov
in
arpl
mov
xor
in
mov
mov
aad
mov
les
xor
pop
cmp
mov
push
dec
imul
pop
ret
jecxz
mov
outsl
add
movsl
into
mov
cmp
fwait
fs
fidivrl
fnstcw
sti
pop
push
outsl
jo
mov
mov
xchg
and
push
loop
fwait
cmc
popf
mov
xchg
xchg
pop
xchg
add
xor
scas
mov
push
fwait
dec
daa
sbb
mov
bswap
not
nop
fldt
int3
test
pop
cmp
stos
pop
xchg
jmp
loopne
mov
adc
popf
ficoms
stos
push
test
pop
xchg
sbb
dec
loopne
mov
dec
cmp
push
divb
iret
sti
cmp
pop
dec
xlat
ja
adc
mov
lcall
push
shl
mov
adc
movb
ret
aas
xchg
add
or
dec
jo
daa
pushf
out
xor
push
gs
jo
mov
jecxz
out
test
call
jge
test
push
push
out
addr16
das
out
add
cli
aaa
pushf
adc
stos
dec
out
arpl
sbb
lret
shrl
xchg
out
push
mov
sbb
shll
or
mov
lods
jp
and
add
repz
inc
sub
lock
add
xor
lret
pop
xchg
mov
inc
pop
push
cmp
jp
mov
out
push
add
cli
in
lock
mov
mov
or
imul
negb
xor
mov
xchg
pusha
addl
popf
mov
addr16
adc
scas
mov
adc
xchg
adc
dec
cltd
inc
das
jg
sti
jbe
mov
shll
mov
jae
ljmp
pop
push
lahf
pusha
lock
mov
mov
push
out
jg
mov
add
push
inc
loope
pop
xchg
cmp
xchg
dec
sbb
and
dec
fistps
stos
out
mov
adc
aas
into
jns
or
jl
mov
jns
xor
das
scas
decl
into
fbstp
cs
pop
stos
in
inc
iret
cmp
adc
pop
pop
xor
lcall
xor
lds
jl
dec
adc
cmpsl
jge
dec
xlat
test
and
out
xchg
adc
lahf
packsswb
xchg
and
pop
dec
mov
xchg
add
xlat
inc
pop
insb
add
lea
jle
call
movsl
out
scas
lock
push
pop
into
dec
outsb
xor
adc
pop
mov
dec
xlat
xchg
pop
mov
mov
lret
push
sahf
in
mov
sbb
out
jmp
lea
adc
stos
mov
xchg
cwtl
nop
shrb
rcll
add
mov
sbb
das
push
and
das
in
or
into
inc
daa
mov
push
aam
xchg
sub
pushf
stc
xchg
mov
adc
scas
cmp
mov
add
or
daa
out
mov
sbb
jo
in
test
xchg
xor
aaa
popf
aaa
or
jg
call
or
outsb
jl
ss
jb
adc
mov
jno
cmpsb
pop
mov
mov
leave
iret
shll
fisubrl
mov
xchg
test
popf
mov
aad
js
js
mov
insb
mov
pop
aam
jge
sahf
test
dec
out
mov
aas
nop
inc
das
nop
mov
cmp
jae
lcall
outsb
lcall
adc
lods
nop
imul
ja
adc
cmp
dec
jo
sub
out
in
cmp
iret
pop
jno
aas
jns
lcall
xchg
ja
imulb
push
lock
loop
mov
std
lcall
dec
icebp
mov
jo
fnstenv
fstl
mov
loope
sbb
add
out
dec
int
mov
es
mov
inc
dec
test
pop
lock
sbb
inc
xor
xchg
jge
add
inc
cmp
stos
xor
pushfw
into
and
stc
jg
add
adc
jge
clc
add
adc
into
adc
pop
les
cmc
mov
or
lea
test
jnp
aad
popf
stos
xorl
mov
mov
xchg
push
push
pop
aad
pop
adc
popf
push
fimull
mov
push
jle
cmp
push
mov
sahf
or
cmp
pop
adc
push
adc
xor
jnp
repnz
lcall
fs
pop
dec
aaa
gs
dec
and
ljmp
into
push
dec
in
fmulp
notb
mov
mov
pop
push
mov
addr16
mov
jo
and
rcrb
icebp
mov
fwait
arpl
addr16
loop
int3
push
scas
jb
stos
mov
repz
icebp
mov
adc
add
xchg
or
push
scas
in
shlb
pusha
cwtl
push
fwait
inc
addr16
mov
xchg
adc
lock
mov
xor
push
ja
pop
mov
int
push
mov
xor
dec
insl
and
or
mov
xchg
or
pop
aad
je
inc
in
or
push
add
outsl
daa
dec
cmpsl
icebp
ret
loop
push
repz
dec
std
push
jmp
mov
xchg
scas
pop
ja
mov
clc
nop
and
test
mov
pop
loope
push
inc
sbb
in
ret
and
scas
sbb
out
ljmp
add
mov
aaa
mov
js
into
shll
jg
inc
outsb
ret
addr16
sbb
jbe
add
jge
fcomip
add
jg
push
jnp
dec
pop
xchg
ja
lds
lcall
dec
or
popf
sbb
stos
add
cld
dec
mov
cmp
pop
jg
and
dec
decb
mov
sarl
pop
subl
data16
icebp
xlat
dec
cmp
out
xchg
xchg
xchg
pop
ljmp
jmp
sbb
fnstenv
mov
jbe
popl
cmp
lods
in
cs
ret
xorb
mov
push
call
pop
mull
xchg
lods
mov
mov
pop
pcmpgtw
mov
xor
dec
add
adc
aas
xchg
movsb
lret
sahf
jmp
out
sbb
sub
push
clc
jl
mov
pop
push
pop
notb
cmp
arpl
push
push
bts
lret
push
cmc
fdiv
cmp
xchg
add
or
mov
mov
mov
add
divb
xchg
mov
rcrl
rcll
inc
sub
jp
sub
xor
into
lahf
out
stc
mov
cld
out
fldcw
data16
cmp
test
mov
mov
fistpl
aad
mov
lea
pop
dec
xor
faddl
sbb
mov
outsb
dec
aad
xchg
xor
mov
jne
test
jmp
dec
rcll
out
jl
or
aaa
cmpsb
or
inc
mov
add
and
jbe
xchg
adc
imul
push
add
nop
xor
aas
adc
lahf
mov
add
xlat
scas
push
mov
inc
cmc
fs
decb
cmpsl
out
popa
push
inc
xchg
lahf
imul
or
dec
aad
testb
xchg
imul
fucomip
arpl
imul
es
adc
adc
mov
imul
nop
pop
and
xchg
mov
scas
or
add
mov
adc
nop
cmp
sbb
add
push
mov
sbb
lods
and
cwtl
std
dec
dec
xorl
cmp
movsl
inc
mov
push
sti
fnstenv
inc
enter
jo
jmp
push
loop
adc
out
pop
loopne
or
jp
jns
xchg
lock
ror
mov
mov
inc
repz
mov
push
ds
js
pop
add
mov
or
mov
ljmp
xor
push
fdivl
adc
nop
xor
lods
dec
iret
lahf
xor
mov
filds
rol
out
das
jo
pop
dec
mov
std
in
add
xchg
orb
mov
inc
repz
into
mov
gs
mov
mov
fmull
jae
and
add
cmp
or
cmp
jl
add
mov
dec
sbb
cmp
cmc
push
icebp
jae
and
sti
xor
mov
test
pushf
xchg
xchg
mov
adc
mov
in
cld
inc
movl
ffree
mov
xchg
xchg
inc
cmp
movsl
out
xor
in
movsl
push
adc
inc
nop
lock
mov
nop
outsb
add
pop
inc
lret
ja
or
mov
mov
icebp
mov
mov
mov
jmp
or
ret
push
adc
xchg
out
repnz
mov
mov
in
test
rcr
mov
repnz
clc
inc
icebp
pusha
adcl
cs
stos
push
outsl
iret
pop
mov
mov
xchg
sbb
mov
jmp
arpl
inc
arpl
xor
xchg
stos
push
xchg
mov
repz
pop
mov
mov
pop
mov
cmp
inc
adc
nop
pop
jg
clc
mov
mov
pop
pusha
scas
or
fisttpll
dec
dec
fmull
imul
mov
test
ja
inc
mov
push
ja
mov
push
cmc
xchg
xchg
mov
inc
ss
jnp
mov
stos
lds
sbb
xor
scas
push
cli
fstpt
fwait
and
xchg
push
mov
out
inc
lahf
rcrl
ret
push
mov
inc
fcompl
dec
mov
mov
mov
fisttpll
mov
in
xlat
lret
sbb
xor
mov
pop
cmp
dec
push
fistl
dec
xor
pop
gs
jnp
or
inc
loopne
inc
push
hlt
lea
adc
sub
adc
push
mov
lods
xor
sub
hlt
adc
cmp
pop
cmp
adc
into
push
iret
xchg
xor
loope
mov
into
cld
mov
push
jbe
paddsb
inc
sub
out
daa
fcmovne
movsl
outsl
push
faddl
jle
xor
div
iret
mov
mov
stos
idiv
jg
cmp
ret
xor
pop
inc
sbb
mov
push
jb
cmp
mov
pop
sahf
sub
mov
sub
in
xor
popf
jnp
fmull
cli
aaa
mov
push
xchg
nop
xor
xchg
cmp
stc
andl
in
jg
fcmovnb
jbe
push
es
lods
push
fcoml
fwait
test
fwait
adc
cmp
fisttpll
pop
les
bound
adc
push
mov
inc
ss
int3
push
inc
stc
mov
cmpsb
xor
cmpsb
dec
mov
addb
lret
leave
pop
xor
scas
mov
sbb
jge
shrb
mov
iret
xchg
xchg
dec
mov
enter
lret
xchg
mov
xchg
and
adc
inc
pop
push
jns
add
mov
imul
call
xchg
xchg
or
mov
aad
xchg
adc
xchg
jo
movsb
call
imul
sbb
notb
nop
dec
dec
popa
mov
ja
push
adc
sarl
popw
fsub
test
sahf
pop
insl
out
pop
test
lds
loop
stos
push
cmp
fstp
mov
outsb
ljmp
add
pop
sub
sub
addl
mov
jo
jecxz
pop
mov
test
mov
nop
out
cmp
cmp
imulb
mov
in
mov
dec
in
adc
jmp
daa
jne
aaa
xchg
jns
lds
push
jne
or
stos
das
bound
lret
lods
push
mov
cltd
iret
nop
push
and
nop
test
bound
dec
clc
lds
daa
negb
lahf
dec
sub
cmc
aas
push
xchg
push
xor
xchg
and
iret
shl
xor
jnp
addr16
pop
mov
mov
xor
rcl
nop
pop
ret
cmpsl
loopne
xchg
rolb
sbb
pop
push
mov
scas
nop
fsubrl
lods
lahf
and
outsl
movsb
aad
inc
mov
mov
mov
push
jo
dec
mov
mov
or
or
pop
adc
stc
mov
sub
xchg
pop
xlat
sub
fildll
je
fadds
mov
push
lret
rclb
jne
xchg
cli
or
xchg
lret
std
in
pop
cmpsl
xchg
clc
nop
inc
and
inc
and
hlt
xchg
scas
dec
xlat
stos
int3
xchg
inc
xchg
iret
insl
mov
mov
pusha
loop
andb
or
lret
xchg
int
sub
mov
fcmove
jo
rcll
pop
repnz
inc
aaa
jge
repz
mov
lret
aad
leave
lea
popaw
repz
jecxz
out
cmpsb
sub
imul
in
jle
mov
fldenv
adc
adc
or
roll
scas
sbb
push
and
and
fsts
stos
shl
push
mov
negb
mov
xchg
iret
push
mov
jge
lods
lcall
inc
ret
pusha
outsb
cwtl
movsl
pop
int
dec
jne
push
in
shlb
push
ret
and
xchg
xchg
in
lds
mov
add
dec
stos
nop
jle
and
subb
or
xchg
out
or
add
outsl
mov
push
inc
pop
fwait
xchg
adc
std
leave
jmp
roll
sti
sbb
aaa
mov
xchg
xor
mov
mov
xor
rorl
fldl
repnz
dec
cmpsl
adcl
mov
xlat
xchg
ror
aaa
sbb
xor
cmp
ja
mov
mov
popa
mov
pusha
mov
pop
loope
xchg
dec
cld
cmp
pop
dec
mov
das
aaa
push
mov
ret
mov
sbb
xchg
gs
mov
int
push
repnz
xchg
mov
add
insb
mov
xchg
in
test
scas
cmp
or
sbb
push
sbb
sarl
lds
ds
xchg
movsl
push
mov
mov
mov
adc
pop
mov
dec
pop
data16
iret
mov
iret
and
idivb
mov
daa
push
inc
cmpsb
xchg
popf
std
xor
out
jnp
dec
das
or
cmpsb
stc
repz
inc
imulb
mov
mov
inc
out
fdivl
push
mov
nop
cld
or
mov
test
cmpsb
xchg
js
movl
insl
ja
inc
push
sahf
aaa
cmp
call
arpl
js
js
xchg
and
sub
mov
aaa
pop
xchg
adc
lods
and
iret
mov
repz
insb
gs
xchg
stc
jmp
cmp
shll
mov
pop
mov
push
jl
xlat
aam
and
push
jecxz
test
push
xchg
adc
dec
adc
or
sub
int
and
push
nop
jge
dec
or
xchg
xchg
ficoms
mov
jno
push
int
dec
and
movsb
add
push
push
add
pusha
ja
mov
adc
aad
or
inc
ja
xchg
lahf
push
mov
xchg
hlt
xchg
scas
inc
and
out
xchg
imul
inc
sub
js
jae
ret
xor
xchg
andl
into
leave
dec
jle
xchg
popf
aad
in
es
iret
jp
mov
imul
je
stos
stos
inc
ja
hlt
aam
mov
shrb
jbe
lds
xchg
cs
dec
mov
outsl
into
not
insl
nop
inc
xchg
pop
in
arpl
mov
inc
push
jne
xchg
adc
sub
sbb
stos
movsl
xchg
ret
or
incl
sub
mov
xor
test
mov
pop
stos
filds
mov
mov
add
inc
int3
mov
mov
cltd
xor
push
ds
mov
inc
adcb
stos
sub
shrl
andl
dec
xchg
daa
inc
pop
aad
iret
mov
add
pop
xor
add
mov
daa
xchg
push
lds
cmpsl
int3
adc
arpl
loop
xor
aaa
in
ror
aas
push
inc
jle
scas
test
xor
sbb
sbb
dec
cmpsl
dec
sbb
inc
pop
cli
jbe
fs
leave
mov
pop
je
lds
cmp
nop
mov
imul
movsb
aaa
pop
and
add
and
fiadds
pop
daa
jae
push
pop
jne
xchg
lds
mov
in
imulb
dec
sbb
mov
dec
lret
imul
push
xchg
stos
or
xchg
jo
adc
ret
dec
jno
sbb
pop
pop
lret
lahf
ret
loope
jbe
pushf
loope
mov
cwtl
ret
pop
fldenv
dec
cmc
xor
xchg
aaa
mov
scas
xor
fldl
subb
sub
cld
push
jl
push
rcrl
pop
push
sub
imul
xchg
cmp
scas
cmpsb
pop
shrb
dec
jbe
cmpsb
ds
xor
or
cwtl
aas
icebp
mov
jnp
lret
into
cmc
dec
push
lret
movhps
mov
nop
inc
xchg
shrl
xor
jne
dec
out
inc
jnp
mov
and
adcl
popa
les
push
adc
iret
ja
adc
or
adcl
lahf
ss
jno
add
sub
outsl
fisubs
dec
push
and
cmc
sub
adc
fisubl
jecxz
pop
jnp
xchg
xor
push
dec
jns
ffreep
mov
dec
cmp
fimull
mov
inc
pop
xor
push
xchg
mov
xchg
add
pop
inc
movsl
js
mov
addr16
aaa
nop
xchg
cmpl
xchg
aas
sbb
xchg
xlat
loopne
and
mov
aas
mov
push
xorl
xchg
lods
dec
mov
frstor
in
insb
push
mov
mov
xchg
shrl
mov
add
jns
cmpsl
add
mov
roll
es
test
sahf
es
inc
int3
dec
mov
mov
aam
xchg
std
dec
scas
jmp
jnp
js
adc
xchg
jno
mov
and
push
jle
dec
std
cmpl
repz
leave
xchg
jecxz
push
sbb
cli
cs
cmp
inc
sbb
pop
push
insl
inc
add
or
push
mov
cli
ret
jnp
jge
lea
push
xchg
shl
pop
sbb
std
inc
sub
lods
aaa
repz
js
lahf
sbb
mov
addl
leave
mov
orb
mov
js
push
cli
mov
std
push
pop
out
adcl
inc
ret
rolb
jmp
mov
loop
lea
push
mov
jne
adc
cwtl
ret
jo
mov
enter
ja
ljmp
mov
push
jnp
mov
std
sub
adcl
push
std
test
ror
pop
sub
add
push
push
push
sub
cmp
lods
data16
adc
les
jle
mov
jno
xchg
pop
jmp
cmpw
mov
cmpsb
jle
dec
aas
dec
adc
in
roll
gs
xchg
xchg
sbb
int
movl
iret
mov
stc
or
lret
daa
and
xor
mov
cmp
xchg
add
dec
das
icebp
pop
mov
nop
stos
int
scas
pop
cmc
add
cmc
push
add
scas
aaa
sbb
leave
nop
out
lret
xor
mov
incl
add
dec
xchg
xor
fistpl
or
enter
pop
movsl
mull
pop
js
std
cmpsb
xor
jl
stc
and
jle
add
adc
daa
movsb
dec
adc
out
into
sub
aaa
imul
inc
inc
jnp
cmpsb
sbb
sarl
pusha
iret
les
in
pop
in
loop
loope
lods
push
inc
jne
iret
xor
xchg
and
mov
push
outsl
or
mov
mov
jns
enter
sbb
mov
aaa
xchg
mov
push
push
lret
xchg
shll
inc
dec
sub
nop
inc
add
mov
dec
xchg
fstpt
movsl
mov
push
mov
divb
xchg
arpl
pushf
mov
ret
hlt
mov
lret
pop
xchg
outsl
xchg
icebp
push
mov
inc
or
in
sub
mov
pop
gs
adc
jne
mov
jb
aad
scas
ljmp
inc
xchg
pop
dec
push
mov
lret
xchg
inc
mov
rclb
out
sub
xchg
mov
or
dec
xchg
mov
or
xor
scas
stos
loopne
inc
call
test
js
call
out
ds
xor
fsubl
shl
mov
lea
jbe
adc
add
cmp
pop
jecxz
pop
jns
imul
dec
dec
dec
stos
sub
xor
adc
fidivrs
dec
jbe
lods
jne
push
inc
lret
jecxz
adc
adc
cltd
outsl
aaa
std
pushf
repz
jbe
fdivrl
dec
pop
les
inc
mov
mov
mov
les
and
xor
mov
stos
inc
jmp
and
cmpsl
add
xchg
cmp
inc
push
mov
stc
scas
push
shr
imul
neg
std
mov
jae
pop
and
mov
fwait
cmp
roll
push
sbb
sub
adc
add
jne
mov
dec
enter
sbb
testl
and
lea
andl
pop
xchg
or
ret
mov
jecxz
sub
int3
std
inc
imul
or
das
imul
sbb
rorl
pop
cld
arpl
sbb
inc
dec
repz
mov
sub
mov
stos
out
cmpsb
jecxz
push
xor
dec
dec
es
roll
sub
push
dec
pop
mov
push
js
xorb
cld
mov
xchg
sub
mov
mov
mov
pop
xchg
cwtl
xchg
nop
inc
xor
inc
add
dec
xlat
ret
jecxz
imul
jg
arpl
inc
mov
out
aaa
sbb
xchg
jp
mov
iret
lds
popa
ja
ljmp
inc
inc
rcll
into
enter
mov
leave
repz
lret
lea
push
in
leave
mov
dec
aas
jge
inc
movsl
pop
xor
dec
adc
mov
cmp
ja
adc
nop
into
outsl
addr16
cld
jns
lods
shlb
xchg
push
inc
push
ret
dec
xchg
aaa
test
aam
jl
neg
cmp
imul
into
jno
sub
xchg
out
adc
xor
and
stos
sub
loope
dec
shrl
lret
dec
cmpsl
dec
mov
pop
stos
mov
stos
stos
inc
pop
or
mov
dec
pop
mov
jns
sti
insl
sub
dec
repnz
pop
push
xchg
test
xchg
push
fmul
mov
aas
addl
rorl
test
repz
add
or
inc
hlt
nop
fldcw
inc
test
movsl
pusha
repz
fs
xchg
push
cltd
cwtl
jns
xchg
dec
aad
ret
outsb
xchg
lea
pop
stos
outsl
cmp
rolb
push
adc
sub
fcoms
pop
xor
lea
ja
out
out
mov
subl
push
cltd
cmp
out
mov
daa
jle
sbb
ds
xor
imul
jae
ds
out
sahf
movsl
std
insl
cmc
das
xchg
cld
roll
xchg
inc
sbb
add
imul
and
dec
mov
in
aad
xchg
xor
aas
lods
ja
aad
pop
es
mov
sub
push
pop
stos
mov
fmull
inc
mov
mov
inc
vmovlpd
inc
jg
xlat
mov
jge
iret
dec
push
fildll
push
test
aam
aaa
cmpsl
xchg
sbb
inc
stos
in
out
cltd
mov
sbb
divb
sbb
sub
inc
iret
mov
aaa
inc
mov
shll
bound
ss
inc
cmp
sub
fisubs
inc
out
pop
test
push
js
insb
loopne
sti
stos
xchg
jnp
sbb
inc
jae
in
pop
mov
jns
sbb
pop
stos
rcrb
mov
inc
movsl
sti
gs
push
push
mov
mov
hlt
test
loopne
int3
or
cmpsb
cmpsb
xchg
test
xor
js
popa
mov
sub
dec
fisubs
adc
std
ja
rorb
aas
jne
lds
inc
pop
jb
in
sbb
push
lret
dec
pop
movsb
adc
xor
lret
loope
cld
ja
popa
stos
and
add
sbb
addr16
lds
nop
pop
dec
or
scas
out
push
jo
xchg
dec
xchg
add
js
mov
adcb
pop
pop
fwait
gs
xchg
adc
adc
hlt
jo
out
dec
rolb
dec
push
xchg
adc
sub
xor
push
sub
push
jne
inc
jns
push
xchg
xor
inc
mov
in
sbb
xchg
popa
mov
xchg
test
aas
lcall
shlb
push
fistl
mov
imul
pop
inc
lds
sub
nop
mov
sub
packsswb
push
and
aaa
adc
sbbl
add
mov
rolb
inc
mov
nop
fidivl
aad
ds
icebp
push
adc
mov
jg
mov
jmp
jle
xchg
test
push
leave
or
add
xorps
mov
or
and
outsl
xchg
push
or
mov
adc
lea
jmp
incb
das
xor
in
add
jmp
mov
aad
js
ret
aaa
pop
jb
inc
mov
cmp
sub
push
xchg
mov
mov
out
push
ficoms
mov
aam
inc
cmp
mov
aaa
ret
ret
push
inc
xor
sub
enter
mov
push
ja
mov
cmp
push
dec
leave
movsl
jbe
mov
cmp
xchg
mov
xchg
int
insb
lds
outsl
jnp
and
pop
cmp
imul
pop
mov
iret
cmpsl
ret
mov
xchg
pop
js
jnp
lods
push
frstor
daa
cmp
or
sub
mov
fsts
dec
int
jecxz
or
sub
lea
add
mov
int
adc
and
push
stc
xor
mov
lret
xchg
ljmp
xor
mov
dec
xor
mov
aas
and
movsl
and
je
testb
pop
andl
adc
push
in
pop
hlt
fwait
adc
js
leave
mov
into
cs
dec
adc
vpcmpgtd
jl
mov
scas
adc
sub
mov
insl
out
jb
xchg
and
nop
inc
leave
int
push
pop
push
orb
cmpsl
outsl
push
mov
outsb
in
pop
xchg
mov
sub
push
vxorps
pop
mov
jb
ljmp
addr16
cltd
iret
xchg
ror
push
in
push
hlt
hlt
mov
pop
imul
cmpsb
les
and
clc
mov
and
test
mov
mov
nop
sbb
mov
push
cmc
idivb
lcall
enter
xor
jge
repnz
ljmp
test
jnp
test
inc
xchg
adc
mov
in
push
push
mov
mov
xlat
pop
ja
push
sub
add
and
nop
cltd
inc
aaa
jl
dec
inc
jne
mov
and
out
hlt
das
out
push
xor
pop
lea
sub
jo
inc
inc
test
xor
int
adc
hlt
test
outsl
mov
sbbb
jnp
mov
dec
push
movsb
aaa
rorl
jnp
shr
sub
ret
push
dec
push
dec
cmpl
mov
jmp
dec
aad
push
mov
mov
cmp
rorb
ret
lcall
movsl
mov
push
xor
lcall
or
scas
andl
push
leave
mov
push
nop
cmp
mov
adc
mov
mov
aad
adc
mov
cmpsl
outsl
sahf
ja
gs
gs
xor
inc
add
movsb
inc
add
repnz
ss
lds
aad
mov
pop
cmp
adc
push
sub
mov
filds
jmp
mov
ror
push
aam
jmp
test
ret
ja
xchg
fsubr
das
testb
negl
push
jecxz
movsl
dec
ja
mov
mov
xchg
test
imulb
jg
call
pop
imul
scas
mov
inc
mov
in
sub
xchg
lahf
jl
push
ljmp
push
mov
and
sub
pop
nop
out
jmp
mov
test
lahf
add
lahf
imul
rolb
leave
pusha
sarl
push
cmp
loope
dec
aam
ret
push
ja
imul
mov
sbb
mov
sub
mov
imul
dec
ss
add
pop
xchg
idiv
mov
lahf
fsubrs
cmp
sbb
fisubrl
jge
fcmovnu
sahf
xchg
punpckldq
xchg
xchg
fdivrl
nop
arpl
sti
cmp
xchg
mov
aaa
lds
in
sahf
aaa
sub
lea
in
mov
cmp
test
dec
jg
rcll
inc
sbb
mov
xor
nop
add
in
xchg
jl
sarl
mov
push
ljmp
mov
fdivrl
fcompl
inc
aad
dec
ja
jle
mov
sbb
xchg
inc
push
mov
int
sub
icebp
fiaddl
push
pop
js
mov
inc
pop
mov
movsb
int
cmp
xor
aad
mov
cmp
push
idiv
aad
cld
push
xchg
iret
xchg
xor
dec
fidivrl
cmpsl
dec
dec
aaa
push
into
ja
inc
pop
ja
cli
or
lret
push
lahf
adc
int
aas
cmp
daa
ja
shlb
push
xchg
stos
test
stos
dec
nop
jmp
bound
and
nop
popa
nop
iret
jge
mov
loope
pop
mov
popf
xchg
sub
push
xchg
insl
mov
xor
mov
dec
es
aaa
gs
imul
dec
and
jle
andb
ds
ja
stos
clc
mov
jecxz
sahf
cmp
inc
xor
push
cmp
mov
in
out
and
push
test
mov
jo
xchg
jns
sbb
idiv
cld
or
call
push
mov
mov
add
enter
data16
lret
adc
pop
stos
cli
mov
add
xchg
nop
jp
fdivl
dec
dec
and
mov
test
pop
adc
out
xchg
sbb
lods
xchg
out
sub
push
mov
jb
insb
push
inc
and
jl
mov
out
addr16
mov
test
rcrl
mov
js
lds
pop
adc
mov
push
jge
in
jbe
stc
stos
out
mov
xchg
mov
xlat
stos
xchg
push
in
scas
pop
inc
xorb
test
js
sbb
iret
in
lods
xor
xor
test
jecxz
push
and
xchg
rcll
sbb
dec
mov
xchg
mov
insl
push
lret
ror
sub
sub
inc
in
pop
jne,pt
sar
fildll
mov
adc
int
iret
xchg
xchg
bound
imul
lret
mov
ja
jbe
pop
into
pop
mov
sub
aam
jo
orl
inc
aaa
jle
inc
in
or
aaa
cld
jle
push
in
adc
loopne
hlt
dec
or
ret
idivb
mov
add
pop
sbb
pop
jmp
jle
fildl
nop
dec
mov
int3
add
sub
stos
dec
loop
aas
test
das
dec
xchg
mov
or
push
push
shl
in
mov
mov
orb
scas
mov
cmc
jbe
mov
xor
loop
aaa
fstp
and
xchg
cmpsb
jae
inc
or
inc
push
sahf
dec
mov
repz
and
std
cmp
mov
out
std
sbb
imul
hlt
mov
loope
cmp
rorl
adc
adc
mov
mov
dec
cmp
mov
xor
sbb
pop
jnp
mov
mov
mov
ret
scas
push
aam
iret
mov
loopne
xchg
mov
aad
jmp
rorb
push
stos
sub
mov
scas
mov
mov
adc
mov
pushf
daa
pop
lret
lret
sahf
pushf
push
mov
jbe
inc
xchg
es
sub
dec
or
push
inc
jge
adc
loope
sbb
mov
adc
cmp
rorl
xchg
nop
outsb
aaa
scas
enter
insl
sbb
add
xor
dec
pop
xchg
jle
pop
dec
jnp
push
in
add
push
mov
inc
or
or
mov
push
jle
sbb
jecxz
ret
addr16
inc
ss
pop
shrw
loopne
sti
gs
fs
rcll
enter
fs
xor
jns
jge
mov
lea
sbb
mov
jae
or
and
cmpsb
jl
xor
and
mov
xor
add
mov
lds
mov
imul
fildll
movsb
cltd
iret
jb
jb
ret
gs
jb
scas
out
pop
movsl
jns
orl
xor
into
push
nop
xor
fcmovne
add
lods
xor
aad
in
pop
imul
push
xchg
es
fs
int3
rcrl
xorl
xor
scas
jnp
aad
cmp
mov
push
push
cmp
and
movsl
pop
test
push
pop
and
xchg
pusha
inc
lds
adc
leave
nop
outsb
cmpsl
rcrl
sbb
push
push
pop
xchg
cltd
mov
xor
xchg
iret
nop
dec
maxps
push
mov
xchg
pop
iret
filds
inc
pop
xchg
sbb
add
xchg
and
scas
lcall
push
and
lret
ret
test
sbb
scas
leave
xor
mov
push
push
in
inc
clc
push
jo
cmc
mov
lock
jnp
fdivrl
pop
movsl
jae
cmpsl
dec
stc
cmp
movsl
inc
mov
xchg
lret
jecxz
stos
gs
lret
mov
and
aam
repnz
pop
je
push
xchg
cmpsl
lcall
ljmp
arpl
ret
mov
nop
daa
xchg
fstpl
out
xchg
jae
lret
mov
ja
dec
pop
mov
or
popa
dec
or
ss
outsb
sub
addr16
xchg
ja
ror
push
daa
mov
cmp
jne
adc
popa
jmp
cmp
shll
in
test
inc
test
mov
mov
push
cmp
sbb
jge
movsb
shlb
scas
cmc
ret
and
les
outsl
in
lahf
xor
adc
pop
stc
imul
cmp
pushf
iret
jg
xchg
push
mov
pop
adc
push
ret
mov
xchg
push
sbb
rolb
aam
in
adc
adc
push
pop
lea
xchg
and
stos
or
std
push
inc
pushf
dec
add
movsl
repz
aad
leave
lret
js
push
jecxz
push
sbb
addr16
cmpsl
sahf
mov
scas
rorl
adc
pop
jae
push
into
fbld
pop
dec
fidivrl
icebp
cld
mov
or
psadbw
inc
mov
jg
xchg
mov
dec
cmp
gs
push
xor
mov
repnz
mov
cltd
popf
push
jae
dec
and
call
dec
movsl
adc
fstpt
cmc
sub
xchg
mulb
pusha
inc
mov
jne
jnp
iret
and
notb
lods
mov
xchg
addr16
mov
pop
push
aaa
movups
daa
icebp
push
pop
mov
testb
dec
xlat
mov
sbb
sub
dec
mov
loope
dec
cmp
xchg
inc
aaa
inc
shrb
xchg
adc
push
mov
xor
ja
mov
test
nop
outsb
mov
push
scas
xor
sahf
inc
aad
push
jb
or
scas
sub
fildll
imul
cmp
cmp
cmp
stos
rorl
sbb
and
sbb
ficoms
xchg
xchg
ror
imul
xchg
pop
cld
push
insl
mov
js
pop
movsl
inc
mov
adc
push
push
xchg
sbb
ss
mov
les
dec
lret
dec
aaa
inc
notb
and
jae
sti
mov
cwtl
mov
sbb
mov
in
inc
or
mov
jge
imul
xchg
add
popf
or
fnstsw
xor
aam
testb
in
xor
sbb
push
sub
push
push
push
ds
sbb
mov
add
dec
dec
dec
push
stos
testb
or
ficoms
inc
mov
dec
sbb
pop
pop
mov
pop
sub
mov
mov
add
jns
rol
leave
mov
adc
sub
cs
call
jg
cmp
or
lcall
push
aaa
lahf
mov
es
pusha
add
sub
sub
das
inc
testb
rolb
mov
iret
in
xchg
rol
adc
mov
sahf
gs
add
aam
fsts
dec
jae
inc
scas
jp
mov
lock
das
jecxz
aad
or
xchg
jnp
outsl
xchg
data16
arpl
and
repz
nop
outsl
icebp
scas
push
rolb
push
inc
jle
cmp
mov
aaa
jae
mov
jo
int3
dec
loope
jmp
les
es
push
pop
pop
ja
das
push
jecxz
xchg
js
aas
int
out
cmpsl
filds
in
dec
sbb
xchg
and
xor
inc
add
mov
mov
pop
notb
and
sbb
inc
jbe
nop
inc
loopne
scas
andl
movsb
adc
and
cmc
or
mov
and
test
inc
cmp
gs
dec
add
mov
das
ljmp
out
aad
adc
jne
jbe
ljmp
adc
jae
fmulp
ficoms
or
test
lea
aaa
js
sbb
jge
addl
cltd
push
xchg
scas
xor
jecxz
push
test
sbb
push
push
jo
push
inc
push
cmpsl
fwait
dec
stos
mov
mov
mov
adc
movsl
adc
pop
ds
dec
push
jns
sub
leave
daa
jl
add
in
push
cmp
cwtl
int3
lahf
pop
add
gs
pop
aam
fcoms
xchg
inc
cmpsb
pop
jb
mov
or
adc
cmp
mov
gs
jge
divb
fists
shlb
ljmp
mov
push
ss
mov
inc
adc
sbb
bound
xor
mov
push
mov
sub
in
mov
iret
pop
jae
scas
iret
gs
xchg
pop
dec
inc
push
lds
add
xchg
or
aas
addl
aaa
out
mov
mov
xor
jne
testb
sbb
testl
sbb
scas
ret
xchg
stos
lods
test
popf
mov
mov
adcb
mov
dec
sbb
xor
js
push
adc
sub
dec
jo
mov
mov
or
jb
notb
scas
xorl
ja
inc
mov
xchg
jbe
test
adc
cmpsb
notb
dec
ljmp
xchg
push
cmp
inc
adc
pusha
inc
and
mov
sbb
push
cltd
les
mov
sub
pop
rolb
jnp
inc
and
lds
inc
fildl
shll
iret
outsb
aad
jle
xor
cmp
add
adc
inc
pusha
mov
dec
insl
out
fisubl
stos
dec
cmp
push
clc
xchg
scas
sbb
imul
mov
xor
sahf
dec
rorb
outsb
xchg
cmp
insb
sbb
sbb
xchg
inc
mov
ss
xchg
jle
jl
jne
or
inc
adc
push
or
int
dec
and
add
inc
pop
xor
aas
movsb
daa
add
xchg
and
jbe
mov
add
jne
sub
pushf
xchg
push
push
test
stos
sub
jge
test
scas
cmp
push
cs
les
xchg
mov
repnz
daa
std
jge
cmpsl
das
dec
lcall
shlb
in
sub
mov
nop
ret
xor
movzbl
call
pop
sbb
outsb
insl
fimull
movsb
xchg
mov
dec
stc
mov
in
xchg
sub
aam
jbe
std
push
sub
out
jnp
mov
jbe
lock
imul
inc
add
dec
push
inc
push
ss
out
dec
enter
mov
xchg
xchg
push
xorb
stos
xor
rcrl
xchg
fdivl
xchg
and
inc
mov
test
jl
scas
dec
push
add
mov
gs
or
push
mov
neg
lods
inc
les
inc
sub
stc
sahf
jnp
cld
scas
mov
mov
int3
jbe
jge
xor
inc
mov
adc
inc
xchg
scas
stos
pushf
xchg
repz
mov
jecxz
pop
mov
xchg
sbb
mov
lahf
add
into
xchg
data16
push
mov
push
sahf
and
rcl
pop
xchg
inc
les
push
pusha
fiaddl
sbb
in
jnp
test
lahf
adc
popf
push
sar
ret
mov
fcoml
je
lret
jnp
adc
in
xor
fistl
inc
pushf
jae
cmp
pop
sbb
daa
inc
dec
xchg
shl
adc
imulb
push
mov
mov
inc
fisttpl
in
rcl
push
out
bound
lahf
xchg
ja
jecxz
inc
lahf
xchg
js
shld
xor
pop
cld
pushf
iret
out
xchg
mov
out
push
lret
inc
dec
repz
mov
adc
sbb
pop
movsl
and
add
pop
ds
push
sarl
adc
lahf
add
es
arpl
dec
repz
fldt
gs
sbb
sahf
mov
xchg
ljmp
cmpsl
inc
loop
popa
nop
in
mov
movsl
rol
push
js
ret
aad
sbb
or
mov
add
jo
inc
into
jl
outsl
js
repz
das
mov
sbb
mov
xor
iret
dec
roll
enter
mov
bndldx
lds
push
scas
mov
fistl
xchg
xor
imulb
je
addr16
jmp
sub
xchg
mov
nop
stos
adc
mov
pop
jge
lcall
fadd
aaa
push
push
cmpsl
jnp
mov
and
dec
xor
out
into
pop
push
cmp
dec
cmp
ds
mov
lea
add
and
int
xchg
loopne
in
push
test
or
push
dec
push
push
cltd
sub
cmp
dec
sbb
data16
jne
aaa
in
cmp
dec
xor
arpl
jbe
mov
notb
cmp
push
dec
fistpll
mov
or
mov
xlat
sbb
cmc
xor
and
bound
clc
or
shlb
arpl
pop
daa
pop
shlb
add
outsb
adc
mov
jne
shrb
adc
int
cmpsl
mov
int
push
xchg
rorl
dec
pop
xchg
push
mov
push
cmp
bound
les
or
inc
mov
arpl
push
push
dec
test
cmp
sub
test
mov
aad
imul
std
xchg
push
xchg
mov
mov
jae
jecxz
pop
fstpt
xor
adc
and
aad
inc
jle
inc
insb
fwait
test
ret
leave
and
gs
leave
or
popa
push
cld
insb
jne
nop
insl
jmp
cld
scas
jno
push
mov
push
rcll
ret
lock
mov
inc
adc
cmp
nop
adc
sub
inc
scas
notb
nop
cmp
rcll
mov
and
jl
movsl
lcall
inc
add
lods
jg
cmp
bound
or
cmc
or
nop
mov
cs
ds
mov
push
js
mov
pop
add
sub
sub
mov
int
push
xor
repnz
clc
mov
push
jae
adc
and
test
aaa
mov
pop
xchg
testb
push
nop
and
dec
arpl
jbe
xor
push
insb
cli
sub
gs
fnsave
mov
dec
ss
into
push
sub
pop
fmulp
mov
xchg
dec
push
jns
ss
test
dec
mov
xchg
pusha
push
mov
cmp
inc
int
std
dec
cmc
or
add
jmp
xor
scas
or
rcrb
gs
dec
lcall
jecxz
dec
jne
and
ja
jo
push
jne
mov
xchg
test
and
xchg
ss
cs
xor
ss
arpl
jecxz
out
mov
pop
xchg
test
popf
mov
iret
or
sbb
ss
pop
cld
out
nop
cmc
shrl
scas
test
cmp
jb
dec
call
jg
xchg
mov
jnp
xor
xor
in
push
inc
insl
hlt
jae
mov
or
dec
sete
adc
dec
pop
and
testb
mov
xchg
mov
aaa
add
mov
into
jb
xor
popf
js
ret
xor
popf
js
mov
test
adcl
ss
push
cs
dec
movsl
pop
xchg
dec
cs
pop
aam
movsl
aad
or
daa
orl
jp
scas
rorb
fnstcw
push
je
lret
pop
sbb
fnclex
xlat
hlt
sub
xchg
scas
gs
xchg
jne
cmc
push
mov
fdivl
push
mov
sbb
or
inc
mov
cwtl
xchg
cmp
aam
mov
cmpsl
cmp
icebp
insl
ja
inc
adc
popa
mov
or
push
into
faddl
mov
adcl
mov
aad
jp
cwtl
mov
repz
xchg
jle
in
pushf
push
mov
pop
dec
adc
sahf
fldt
mov
pop
les
mov
cmpl
lods
clc
repz
push
push
adc
outsl
adc
cmc
pop
imul
pusha
lock
mov
pusha
cmpsl
fadds
dec
pop
or
fwait
push
mov
pop
daa
jnp
sub
jb
push
es
mov
mov
leave
jae
push
repz
sub
scas
cmp
xchg
mov
jnp
jo
and
rcr
mov
fistl
repz
into
sub
inc
mov
push
inc
push
shlb
pop
dec
and
outsb
je
test
inc
scas
mov
and
jo
xor
xchg
cmp
fsub
decb
std
dec
jecxz
pop
pop
imul
pop
std
mov
fwait
cmpsb
adc
add
pop
and
daa
ror
jbe
inc
push
decb
dec
jno
test
pop
mov
inc
rorb
cmp
push
mov
shlb
xchg
cmpsl
push
mov
lods
mov
jae
add
lock
aad
xor
add
push
sub
sbb
gs
les
dec
test
mov
xor
ficoml
lcall
xor
add
xchg
imulb
dec
xorl
and
mov
sub
xchg
pop
or
pop
xchg
mull
mov
or
hlt
mov
sub
jecxz
adc
mov
out
aam
in
xchg
lret
xchg
stos
loop
test
mov
push
jb
hlt
lods
nop
inc
push
loop
gs
imul
jecxz
xchg
mov
scas
out
stc
xchg
push
jg
cmpsl
cmpsl
inc
pusha
mov
lea
mov
outsl
push
ds
aas
aam
popl
jge
jno
movsl
inc
xor
icebp
negb
lret
adc
push
mov
jl
cmpsb
cmp
rcrb
mov
push
orb
hlt
inc
cmp
mov
dec
inc
cmp
mov
fcoms
hlt
adc
sbb
or
dec
jmp
aaa
cltd
mov
dec
leave
add
adc
ret
cwtl
sub
add
dec
push
loop
aaa
jnp
mov
xchg
jbe
adcl
inc
fdivl
mov
xorl
movsb
mov
nop
push
jo
pop
aaa
xchg
dec
xor
xor
std
imul
mov
ret
inc
imul
cltd
test
mov
push
xor
mov
mov
lea
sti
sub
jnp
icebp
adc
push
cmp
xchg
jbe
dec
rclb
mov
js
mov
icebp
xor
sub
xor
push
fwait
xchg
lcall
jnp
add
cmpsb
mov
dec
leave
push
daa
add
xor
mov
sub
mov
and
into
in
dec
mov
jns
stc
inc
adc
stc
xchg
addr16
and
rcrb
xchg
sub
mov
gs
cmp
sub
dec
mov
mov
jb
xor
jl
push
rcrl
and
nopl
popa
add
nop
sub
and
adc
dec
dec
leave
mov
cli
cmp
mov
xchg
pop
je
mov
lret
test
or
jp
subb
cmc
sub
stos
shll
movsl
mov
cmc
loopne
pop
fsubs
cmc
aas
hlt
push
test
shlb
jno
decl
sarb
fld
iret
or
jmp
repz
mov
daa
loope
sbb
aaa
js
dec
in
xchg
xor
outsl
or
inc
xchg
mov
lds
sub
rol
or
jne
or
mov
dec
movsl
je
nop
fbstp
xchg
mov
push
jb
je
xchg
adc
jge
xchg
adc
scas
ss
or
imul
inc
out
ja
add
popf
xchg
push
jbe
movsl
fmuls
jge
mov
insl
jg
lcall
adc
repz
in
ffree
imul
jne
insl
das
inc
jmp
sub
sub
mov
sub
dec
pop
inc
cmc
or
mov
iret
mov
scas
inc
popf
das
xchg
repz
lahf
mov
mov
push
sub
inc
mov
jne
mov
pusha
mov
push
fdivrl
sbb
mov
xor
lods
xor
pop
out
fsub
fcompl
xchg
shll
xor
xchg
ja,pn
ja
push
inc
ss
ret
mov
cmpsb
loope
shl
xchg
mov
scas
inc
xchg
fisubl
pop
xchg
and
loope
lret
adc
xor
lds
fdivl
cmp
mov
stc
cmc
push
stos
fcoml
xlat
mov
iret
jle
in
or
sti
add
push
aad
xchg
js
sbb
push
into
jbe
pushf
ss
sahf
fsubrs
lds
loopne
adc
arpl
test
adc
push
adc
cmp
ds
aaa
cmpsl
push
nop
pop
xchg
test
fdivp
mov
push
std
sub
jle
add
fdivrl
jmp
sub
and
mov
jg
nop
loope
xchg
fcoml
sbb
mov
jl
loopne
sub
mov
or
fs
cmpsl
xchg
xchg
mov
into
cltd
and
fs
jne
pop
rol
jnp
mov
data16
imul
xchg
push
and
xchg
or
ds
add
mov
push
mov
test
cltd
push
xchg
mov
out
sub
dec
mov
dec
adc
adc
test
jae
jle
xor
arpl
pop
mov
push
fcoml
and
roll
lea
xor
fists
pop
add
in
inc
add
mov
dec
xchg
aas
lcall
and
sbb
dec
xor
scas
in
mov
inc
cmpxchg8b
sti
aas
push
js
gs
fs
out
dec
push
jl
shrb
adc
pop
push
js
cmc
jbe
xchg
les
or
aas
jbe
push
mulb
rol
mov
into
inc
addr16
sbb
cmc
mov
mov
jmp
xchg
nop
aas
ret
mov
mov
mov
lods
sub
cmp
cmp
imul
xchg
jl
lret
fbld
lahf
sub
inc
js
mov
iret
cmp
adc
xor
aam
xor
mov
mov
rorb
ret
adc
popf
xor
cltd
jle
into
popa
xchg
into
leave
push
shll
jmp
icebp
push
sub
flds
mov
out
jp
add
lds
std
out
jne
mov
test
jecxz
aaa
pop
repz
inc
js
aad
cltd
jle
mov
int
mov
in
sbb
pop
jne
jge
ss
nop
addr16
mov
jnp
and
test
mov
insb
lcall
jbe
cmp
xor
mov
outsl
xor
aad
inc
jnp
mov
adc
ret
push
aas
nop
dec
rolb
or
outsl
js
lret
cmp
test
aas
xchg
xor
fwait
fnstsw
scas
xor
xor
stos
and
cmc
adc
ja
xchg
mov
imul
repz
sbb
add
dec
stc
xchg
sbbl
xchg
testb
dec
scas
xorb
das
xor
cmp
js
ffree
lods
sbb
je
ret
xchg
nop
or
xchg
ret
inc
pop
dec
add
ja
nop
inc
call
inc
sub
jnp
and
lods
into
push
xchg
stos
inc
jb
or
dec
dec
ss
outsl
jne
aad
out
mov
out
in
mov
push
sti
xchg
sbb
add
scas
out
loope
jb
loopne
sahf
mov
dec
xchg
sahf
scas
cmp
and
mov
mov
nop
mov
rcrl
mov
inc
adc
enter
fcoms
rcrl
mov
push
jno
mov
inc
inc
cmpsl
cmp
inc
lods
dec
sbb
xchg
pop
data16
sar
lahf
rcrl
sub
arpl
mov
adc
xchg
lds
ja
jnp
xchg
sbb
inc
jmp
adc
filds
pop
insl
mov
jbe
mov
mov
stos
push
push
in
in
aas
adc
mov
mov
or
scas
cmp
out
or
ror
xchg
es
in
movsb
les
testb
fsubrl
push
cmc
shlb
daa
rclb
mov
xchg
and
je
xchg
cmpsb
sub
mov
pop
imul
popf
mov
mov
into
mov
in
into
ja
xchg
scas
fnstenv
cmc
inc
push
aas
mov
adc
aaa
dec
stc
nop
mov
cmp
sbb
and
fs
sbbb
jno
sahf
xchg
daa
adc
mov
or
cmp
add
aam
and
cmp
sbb
fists
dec
xor
sbb
call
movb
xor
lea
xor
es
jnp
test
test
mov
dec
sub
cmp
jne
insb
aad
inc
mov
mov
popf
or
test
call
lahf
adc
lds
negl
out
xchg
test
lods
jbe
scas
xchg
add
xchg
outsb
cmc
outsl
mov
xchg
push
cmpb
xchg
ficoml
xor
movsl
sub
fldt
xor
add
fildl
xchg
push
sbb
cld
cmp
cs
cmpb
out
mov
push
push
daa
popf
xchg
imul
mov
dec
jns
pusha
loopne
lds
or
inc
xchg
popf
cmp
fldt
repnz
jne
xor
cltd
or
mov
push
test
push
xchg
xchg
mov
pop
ss
pop
xchg
imul
movsl
cld
xor
lods
dec
xor
xor
pop
aam
es
es
xor
cli
fwait
pushf
aad
sub
jb
xchg
iret
add
sub
jne
je
in
aad
leave
pop
out
push
mov
pop
movl
pop
mov
add
inc
int
sbb
es
xor
out
inc
push
aad
mov
jo
fmuls
push
mov
or
jno
lods
xchg
mov
lret
push
mov
mov
or
lds
jg
xchg
jno
push
popl
xchg
rclb
mov
imul
cwtl
int3
cmpsb
aad
push
jnp
mov
out
aaa
xchg
ret
fcoml
nop
je
push
jecxz
push
fidivrl
aad
add
sahf
jg
xchg
push
nop
jbe
popa
in
mov
scas
outsl
ss
scas
mov
cmp
sbb
and
cmc
sub
mov
ffree
lods
div
mov
sub
ljmp
push
mov
xlat
add
mov
popa
push
mov
sub
or
enter
cmp
sbb
sbb
lods
gs
mov
lret
stos
xchg
hlt
mov
dec
xlat
inc
inc
mov
adc
das
cmp
rcrl
mov
push
popf
dec
cmpsl
sub
insb
insl
ja
lret
enter
cmp
ret
leave
sbbb
inc
movsl
cmc
scas
add
imul
fxch
aad
js
jl
into
dec
ds
movsb
push
aaa
into
je
push
adc
xor
daa
xor
sub
das
jle
push
xchg
sub
xor
sahf
test
stos
mov
jno
dec
sbb
fldt
aaa
jb
rclb
mov
inc
repnz
mov
jae
jecxz
mov
repz
dec
aad
scas
cmp
xchg
pop
mov
enter
sub
les
pop
sub
xor
adc
and
xor
add
inc
or
lods
mov
ja
int
push
aas
mov
fwait
mov
mov
movsl
int
mov
aad
push
inc
scas
cmpsb
jns
stos
and
aaa
out
insb
fsubrl
push
les
ret
sub
cmp
add
dec
call
pop
jle
add
cs
inc
and
sub
xchg
sahf
and
lods
mov
fsubr
xor
adc
repz
push
cmp
addl
jp
imul
gs
mov
lret
movsl
pop
adc
movsb
ret
mov
ss
push
nop
movsb
iret
or
cli
ljmp
into
or
mov
shlb
mov
push
pop
out
inc
dec
add
pop
mov
inc
add
sti
testb
xor
das
adc
sti
sahf
loope
ds
push
ljmp
fwait
out
jle
inc
popf
out
cmp
mov
xchg
xor
xchg
xor
jnp
dec
xor
fistl
mov
pop
push
popf
mov
sub
notb
rcll
hlt
loope
subl
scas
mov
mov
jbe
mov
xchg
nop
cltd
xchg
sub
in
push
loopne
push
sbb
or
mov
into
adc
dec
adc
mov
adc
lods
inc
push
mov
xchg
adc
mov
cltd
mov
iret
out
scas
aas
push
cmp
test
movsl
lds
ds
pop
adc
sbb
and
xchg
xor
xor
out
addr16
xchg
push
stos
cmc
nop
repnz
push
fsubl
inc
xor
push
mov
nop
push
sub
push
inc
or
mov
xlat
and
dec
lods
imul
into
shrl
in
nop
std
movsl
mov
push
cmp
or
mov
xchg
rcll
arpl
push
mov
mov
sub
sub
ss
lcall
out
repz
int3
jb
jge
pop
sub
rclb
pop
sbb
mov
xchg
xchg
les
into
push
stos
and
mov
popa
mov
mov
shrb
aas
test
iret
add
xchg
adc
jg
xchg
xor
xchg
sarb
mov
push
xchg
daa
ljmp
mov
cmc
push
js
fsts
nop
in
and
notl
ljmp
ljmp
fwait
loope
mov
aam
out
sbb
push
mov
dec
fistpll
jle
in
xchg
lcall
mov
fs
mov
push
into
add
mov
mov
inc
pop
dec
xor
pop
or
pop
push
adc
mov
mov
lds
subl
rclb
mov
or
xchg
adc
inc
push
pushf
push
les
cmpsb
jmp
xor
xchg
shl
popa
aas
xchg
aas
push
aam
or
push
xchg
or
cmp
adc
js
daa
rorl
lds
ror
jge
scas
jmp
lds
add
rcrb
push
ror
es
sub
mov
pop
or
mov
jg
clc
sbb
outsb
sbb
test
leave
aam
add
arpl
sbb
sub
xchg
das
in
js
lahf
idivb
dec
rcll
stc
inc
scas
repz
aaa
cmp
xor
push
fmuls
shlb
adc
ja
push
lret
xor
xorb
shll
xor
loope
xor
faddp
or
push
xchg
mov
lds
lret
jo
sbb
mov
xor
push
iret
inc
xchg
xchg
scas
scas
dec
aad
movb
std
adc
out
movsb
test
fsubl
enter
nop
push
in
mov
clc
xor
aam
ja
fs
fdivs
mov
push
mov
inc
xor
mov
adc
pusha
xchg
outsb
mov
sub
xchg
add
jmp
nop
lcall
jnp
mov
scas
sub
scas
stc
mov
xchg
sbb
repz
mov
lahf
or
clc
hlt
mov
adc
ficompl
jnp
js
mov
fwait
rorl
jb
xchg
mov
sub
popf
inc
mov
sub
loopne
dec
dec
fsubrl
test
les
inc
jmp
insl
mov
fldcw
pop
mov
sub
dec
insl
add
jge
repz
push
mov
in
aaa
sbb
scas
arpl
mov
into
push
dec
cmc
pop
inc
shrb
pop
hlt
add
and
movsl
in
mov
outsb
dec
jbe
dec
scas
mov
lods
cmp
xchg
mov
sub
shrb
mov
pop
mov
adc
in
fistpll
int3
xor
outsl
push
jne
ljmp
mov
hlt
inc
ficoms
adc
aam
aam
nop
call
pop
mov
adc
movsl
pop
out
lods
xor
idivb
sahf
addl
adc
xor
mov
dec
sbbb
adc
cmp
mov
mov
or
dec
nop
jae
mov
mov
lret
pop
sub
les
jbe
imul
icebp
std
mov
out
dec
xchg
pop
mov
shrl
mov
in
movsb
xor
inc
mov
sub
cmp
cmpsb
inc
mov
mov
scas
shlb
add
imul
xor
push
int
inc
pop
and
in
jmp
xchg
es
cmp
push
mov
test
and
or
gs
mov
jnp
movsb
dec
jnp
fs
mov
cmp
adc
movsl
xchg
xor
mov
cs
daa
xlat
mov
push
test
xor
pop
pop
and
lahf
mov
pop
dec
fdivp
xchg
sub
enter
mov
into
jg
out
fisubrs
mov
sub
push
scas
fbld
insl
lret
stos
xor
lods
xchg
outsl
call
jbe
jg
jne
mov
cmp
dec
imul
daa
jb
push
add
jbe
or
xchg
mov
xchg
push
or
pop
cmp
sub
sbb
mov
push
mov
loope
adc
into
adc
ss
in
pop
mov
outsb
jge
out
iret
mov
sub
cltd
mov
pop
xchg
arpl
mov
and
jecxz
mov
mov
iret
sub
sbb
or
jg
lcall
clc
cld
mov
sahf
add
pop
jle
adc
adc
sbb
popf
xor
xchg
cmp
jo
add
js
inc
or
and
je
test
jns
repz
xchg
xchg
ret
jne
adc
aad
pop
aam
xchg
adc
sbb
aad
adc
lock
ds
jmp
adc
sub
jbe
test
adc
sbb
xor
and
cmpsl
xor
js
dec
sbb
lods
stos
push
dec
or
aam
test
negl
sub
sub
imul
shll
dec
test
xchg
mov
and
and
mov
into
xor
xchg
sub
into
mov
mov
push
test
mov
and
push
jnp
std
mov
mov
push
aaa
nop
cmp
into
loop
out
dec
adc
and
jecxz
mov
jo
fxch
sbb
sbb
xchg
push
fcmovnu
inc
mov
stos
imul
ja
and
mov
out
and
stos
mov
push
popa
in
cli
std
aaa
cmpsb
xor
test
mov
inc
push
mov
in
andl
cli
xchg
push
adc
jle
mov
mov
test
js
xor
clc
lahf
pop
xchg
imul
clc
mov
dec
sub
pushf
lea
xchg
sti
gs
push
and
adc
sbb
jl
cmpsb
mov
pop
adc
rcl
xor
out
pop
fwait
mov
cmp
add
ds
add
enter
dec
test
divl
lods
mov
repnz
xchg
ss
data16
cmp
push
cmp
pop
ja
mov
scas
and
cmpsl
es
push
dec
push
dec
nop
inc
inc
lods
addl
xor
aas
js
dec
sbb
ss
mov
sub
xchg
inc
lcall
aad
jae
int
cmp
lods
and
mov
push
push
ds
inc
pop
fcmovb
outsb
push
testb
push
test
add
or
scas
mov
testl
cmp
pop
jnp
jns
inc
mov
or
sub
cmp
jnp
add
dec
xchg
andl
aam
xor
outsb
hlt
sub
xor
mov
inc
jl
fdivl
nop
jb
aaa
adc
xor
or
mov
inc
imul
inc
sub
ss
adc
ss
mov
jge
adc
sub
rol
nop
lea
flds
movsl
jnp
pop
inc
pop
push
imul
mov
into
jnp
cmp
js
sbb
out
loope
dec
loopne
unpckhps
pop
mov
xor
mov
adc
inc
cmp
adc
das
mov
xchg
imul
mov
fists
inc
cmp
test
dec
rol
xor
sub
pop
or
mul
and
mov
js
cltd
xchg
scas
out
push
in
stos
aad
das
int3
adc
lods
int3
negb
pop
nop
int
icebp
adc
xor
inc
adc
jo
xchg
pop
add
cmpsb
lds
inc
adc
icebp
sbb
in
pusha
xchg
rcll
pusha
pop
mov
into
xchg
mov
xor
test
jp
mov
add
scas
ret
nop
cwtl
test
adc
sbb
int
mov
inc
mov
dec
rclb
and
loope
out
stc
shrl
into
nop
jle
push
xchg
mov
dec
cmp
mov
mov
stc
int3
xchg
jo
xchg
push
in
pop
fstp
mov
aaa
test
push
inc
or
adc
xchg
sub
addr16
popf
stos
pop
aad
xchg
push
adc
xchg
adc
iret
enter
popa
dec
inc
mov
mov
mov
out
sbb
ljmp
daa
gs
punpckldq
add
mov
pop
lds
push
inc
jle
scas
xor
fldt
xchg
div
cs
stos
xchg
nop
jecxz
pop
loopne
ret
insb
mov
add
decb
pop
les
mov
cmp
orb
xchg
clc
int3
mov
ljmp
stos
pop
fisttps
mov
mov
push
push
push
repnz
inc
das
pop
sar
fs
push
jecxz
mov
cmp
mov
cltd
fbld
cmp
sub
adc
lds
push
xchg
ja
std
and
scas
scas
dec
scas
scas
or
inc
sub
push
sti
rorb
add
roll
xor
and
les
aas
loopne
nop
cmpsl
xor
out
lock
or
insb
scas
pop
adc
imul
jns
inc
push
in
mov
mov
dec
push
and
and
shrl
mov
add
jb
xchg
rcll
cli
mov
cmpsl
mov
sub
scas
les
setle
sub
ror
js
fdivrl
shlb
je
pop
daa
and
es
rorb
push
cmp
mov
ja
cmp
stos
sti
rcrb
arpl
push
jno
nop
aam
in
pop
push
cltd
mov
rolb
jo
ja
mov
mov
jns
jno
adc
lret
jae
pop
stos
cmpsl
notb
aad
mov
xchg
int
jbe
daa
aaa
int
sub
add
push
mov
or
test
test
push
mov
and
push
cmp
inc
faddl
dec
nop
es
into
mov
pop
stos
and
into
jns
cwtl
icebp
inc
mov
mov
cltd
in
fwait
sub
pop
test
dec
pop
testb
mov
jg
add
sti
inc
xor
mov
mov
in
jmp
rorl
data16
xchg
mov
movsb
mov
jne
jbe
adc
sbb
iret
orl
mov
mov
inc
cmp
jbe
jmp
jmp
pop
xchg
cmp
test
mov
mov
xchg
mov
mov
inc
enter
aas
xchg
aas
inc
push
lods
xor
rcrb
push
adc
pop
push
stc
adc
mov
mov
cwtl
mov
xchg
insl
shlb
aas
mov
push
jns
inc
add
xor
and
and
jo
adc
add
test
fbstp
lahf
cltd
xor
or
dec
push
or
mov
ret
mov
adc
push
mov
and
pop
and
mov
xchg
int3
xor
nop
pushl
add
std
test
mov
std
sub
cmc
xchg
push
shl
jg
jo
or
jbe
xchg
aam
mov
insb
aad
mov
mov
pop
inc
mov
mov
jecxz
adc
cmpsl
mov
mov
xor
ja
inc
mov
inc
xchg
pop
into
mov
push
xor
daa
and
xchg
ljmp
dec
push
jecxz
fs
mov
fistl
andb
scas
nop
sub
mov
mov
dec
and
jns
outsl
and
sti
mov
int3
xor
jnp
inc
loopne
and
push
sarl
js
icebp
push
aad
insl
jnp
test
out
xor
shl
ja
mov
cmpsl
xchg
sbb
mov
push
stos
inc
push
ja,pt
in
xchg
movsb
aaa
inc
nop
push
push
xchg
lds
dec
pop
dec
movsl
hlt
loop
icebp
xchg
scas
mov
lahf
pop
ret
sub
pop
push
add
and
cld
push
pop
insl
mov
jecxz
je
ja
and
pusha
rcrl
popa
sbb
aaa
shll
js
mov
enter
pop
dec
and
add
jge
imull
dec
stc
adc
mov
lret
and
mov
nop
xchg
jg
sub
sub
sahf
jmp
dec
pop
in
pop
and
push
das
out
push
movsl
ja
pop
fwait
inc
decl
adc
daa
fstl
sbb
adc
sub
mov
je
stc
ret
jnp
in
roll
xor
cwtl
xchg
push
xchg
xor
push
jae
xchg
cmpsl
aas
nop
gs
push
pop
nop
cmc
mov
inc
mov
inc
sarl
jb
adc
xchg
movsl
mov
repz
imul
hlt
in
icebp
pop
push
mov
sarb
scas
mov
mov
lahf
push
test
or
and
pop
and
dec
pop
in
shlb
mov
pop
rol
in
sbb
jo
cld
mov
mov
pop
repnz
in
mov
push
rdpmc
das
push
jb
xchg
je
icebp
loope
push
push
cmc
mov
nop
sub
cmc
xchg
inc
aas
mov
out
int
test
pop
shll
inc
push
add
cwtl
stos
mov
fmul
mov
and
xchg
and
dec
mov
jl
imul
xchg
xor
pop
xchg
push
mov
xor
cmp
push
mov
ret
jbe
jmp
ljmp
divl
aas
out
dec
ss
int3
lods
push
je
test
mov
iret
adc
inc
ds
mov
ds
rolb
push
mov
fiadds
out
mov
lods
xchg
pop
xchg
xor
push
mov
ficompl
and
aas
or
xchg
mov
lds
mov
test
into
pop
lods
and
inc
aaa
dec
jno
rep
decb
push
aas
xchg
mov
dec
dec
aad
push
xchg
adc
inc
mov
scas
and
mov
mov
mov
xchg
push
mov
in
mov
mov
xchg
stos
dec
sbb
and
mov
dec
lea
xlat
into
xchg
dec
dec
adc
enter
fnstcw
nop
xor
aas
push
adc
jbe
nop
ret
jg
xor
hlt
aam
das
xor
dec
je
sbb
into
rcl
mov
jp
mov
or
or
popa
push
and
mov
in
inc
pop
ja
pop
xchg
push
sub
push
pop
aam
dec
mov
nop
loope
or
je
cmp
out
fsts
aaa
mov
pop
out
movsl
nop
mov
push
xchg
scas
jbe
iret
sarb
aaa
inc
out
mov
mov
lods
jle
push
ja
test
push
xchg
xor
enter
push
jns
movl
lret
fstl
lcall
inc
scas
cmpsl
jge
mov
cmc
iret
in
sub
stos
lea
pushf
aad
adc
add
pushf
push
rclb
xchg
push
filds
push
pop
data16
cmp
nop
pop
xor
inc
pop
aad
out
test
sub
aas
inc
sub
and
into
mov
in
arpl
mov
mov
outsl
mov
jmp
lret
ja
subl
repz
lcall
loope
mov
ja
inc
rorl
mov
adc
jno
push
or
mov
jb
xchg
cmpsl
hlt
je
and
rcll
sub
adc
push
dec
test
push
jns
icebp
cmp
loop
lahf
cmp
fwait
jb
mov
mov
mov
fwait
push
shlb
nop
or
mov
jge
mov
jno
out
gs
mov
xchg
ret
or
pop
sbb
fwait
xchg
mov
in
ss
ja
pop
dec
std
fldl
lcall
sub
mov
add
stos
movsb
scas
repnz
sbb
sub
aaa
nop
cwtl
or
flds
xchg
add
push
mov
lret
xor
hlt
pop
inc
fisubrs
test
scas
fisttpll
rcrl
clc
push
mov
lretw
jg
sti
hlt
les
pop
rcll
shlb
hlt
xlat
pop
jg
in
rclb
push
adc
int
ret
fcmovb
scas
fdivrl
inc
push
mov
dec
mov
xor
scas
mov
cld
fcoml
push
xor
adc
out
popf
jbe
mov
sahf
iret
mov
lahf
daa
mov
adc
repz
mov
and
std
inc
push
divl
adc
push
iret
es
xor
mov
lcall
repz
inc
ja
or
mov
jmp
popf
sbb
pop
sahf
dec
or
pop
mov
mov
push
xchg
cmpsl
sahf
iret
clc
push
dec
jae
mov
adc
push
xchg
ja
lds
mov
addr16
imul
nop
inc
flds
push
xchg
or
pop
xchg
mov
push
mulb
mov
push
iret
mov
jno
xor
mov
ret
add
ja
pop
xchg
dec
idivb
cmp
mov
mov
mov
mov
and
cltd
push
push
je
and
dec
add
into
repnz
shlb
repnz
jo
or
dec
xchg
cmp
cltd
fwait
rcrl
ss
xchg
push
fwait
xchg
loop
pop
pusha
daa
sti
ja
loop
enter
push
xchg
push
mov
xchg
xchg
mov
and
lds
mov
mov
inc
xchg
out
icebp
ror
xchg
addr16
xchg
hlt
sahf
insb
xchg
lods
jno
mov
xchg
fwait
push
pop
lcall
lret
adc
mov
popa
movsl
sbb
insl
push
sub
pop
std
or
cmp
divl
push
inc
xchg
stos
push
jecxz
imul
into
shr
xchg
add
or
xchg
sub
pop
mov
xchg
and
mov
inc
xchg
out
sub
xor
notl
push
xchg
mov
je
pop
fidivrl
jae
push
jg
adc
movsl
icebp
xchg
mov
xchg
bound
xchg
inc
xor
xchg
mov
stos
adc
xor
and
loope
out
xchg
aam
sbb
dec
sub
inc
lret
xchg
push
popf
cmp
push
push
ret
test
in
xchg
les
dec
pop
pop
mov
cmp
ret
aad
push
jae
jae
mov
stos
fisttps
pusha
fwait
or
inc
enter
scas
dec
xchg
pop
dec
and
cmp
sub
repz
mov
ret
mov
int
xchg
adc
and
and
push
ljmp
adc
in
movsl
mov
ja
lods
push
inc
inc
push
sbb
or
cli
outsb
sbb
popf
hlt
fidivrl
lds
scas
iret
in
dec
mov
mov
jg
bound
xchg
rolb
lcall
push
xchg
mov
mov
mov
jmp
adc
test
jmp
lea
ljmp
pop
rcrl
stos
jb
mov
push
ja
xchg
icebp
mov
inc
xor
mov
sarl
notl
inc
push
lret
xchg
or
jge
pop
clc
shlb
mov
test
xchg
mov
cmp
loope
decl
inc
fmulp
fdivl
push
cmpsl
out
mov
faddl
ja
nop
jge
scas
leave
mov
arpl
or
adc
jnp
push
dec
push
dec
mulb
xor
jle
cmp
xchg
popa
adc
iret
adc
jmp
fs
xchg
repnz
pop
mov
cmpl
xor
sarb
arpl
repnz
mov
sbb
mov
jbe
sbb
sub
nop
std
subl
repz
pop
dec
or
int3
stc
nop
jns
std
sbb
rcll
insb
xchg
jle
push
xor
mov
push
out
jns
les
mov
push
shll
pushf
stos
dec
mov
shll
mov
mov
xchg
mov
sbb
pop
mov
je
daa
adc
jp
push
mov
iret
jg
xchg
mov
dec
iret
repz
and
jae
add
movsl
adc
jo
adc
sbb
inc
scas
nop
add
ret
xchg
inc
shll
pop
xchg
sub
fsubl
xchg
lods
insl
in
inc
add
fmull
gs
push
stos
sub
lcall
lret
push
push
jp
or
faddp
mov
cmp
mov
fistl
stos
add
fstl
aad
push
add
das
pop
test
push
add
mov
orb
jg
mov
hlt
push
xchg
push
shl
fwait
push
aam
int
je
fwait
mov
push
or
imul
cmpsb
sbbb
in
mov
repnz
xor
xlat
push
repnz
xchg
xchg
repnz
adc
xchg
sub
rcrb
dec
mov
inc
imul
pushf
stos
les
xor
cltd
push
push
xchg
iret
xchg
ror
daa
jno
fiadds
dec
adc
sub
add
sub
test
inc
sbb
aas
popa
xor
dec
test
sub
in
xor
mov
xor
xchg
push
and
fnstenv
outsb
cmc
inc
push
nop
call
test
shrl
popa
aam
cmp
push
push
jp
or
fisubrs
rcr
add
add
scas
out
push
xor
aad
push
std
imul
mov
movsl
xchg
stos
jle
mov
scas
out
xlat
lret
cmp
cltd
fwait
mov
lods
mov
std
ja
xchg
add
sub
jecxz
sbb
push
cld
scas
movsl
std
cmp
pusha
lret
mov
lcall
ret
mov
pushf
pop
test
pushf
lcall
lods
cmp
or
test
lret
mov
pop
fildl
cld
adc
inc
js
outsl
pop
sub
fs
adc
mov
repz
addl
test
xchg
std
loop
xchg
xor
dec
popf
xchg
aaa
mov
jle
cmp
mov
pop
je
aam
xchg
jne
inc
sub
fdivl
inc
sub
or
sbb
repz
inc
popf
std
push
mov
test
fiaddl
sbb
jg
sbb
pop
jmp
add
fdivl
cmpsb
mov
lods
dec
cmpsl
icebp
std
adc
leave
lret
aaa
loope
jnp
rcrl
fdivrs
mov
mov
fcmovb
mov
sarb
jmp
sub
lods
cmpb
andb
xchg
xchg
mov
stc
xor
inc
cmp
xchg
pop
jne
jne
jp
pop
roll
popa
cmp
jle
movsb
sbb
adc
paddq
movsl
int3
nop
and
sub
gs
dec
add
sbb
repz
lret
pop
or
push
out
push
dec
and
call
ss
pop
idivl
pop
mov
inc
add
in
pop
mov
sti
fs
orb
rorb
aaa
mov
adc
into
mov
xchg
je
sub
mov
bound
es
add
jg
outsb
out
xlat
lret
xchg
stc
pusha
loope
daa
add
outsb
movsb
outsl
mov
xchg
ljmp
dec
nop
fnstsw
xchg
inc
add
movsl
add
arpl
sahf
adc
je
mov
mov
push
xchg
dec
mov
dec
ss
push
xchg
movsb
cltd
dec
scas
cmc
pop
mov
aaa
mov
cld
xchg
jg
jne
dec
push
and
xor
add
aam
je
xor
popf
adc
repz
roll
xchg
jae
push
xor
ja
jae
rcrb
mov
jb
push
dec
xor
sub
rorl
adc
mov
aaa
mov
adcl
in
jno
mov
mov
scas
push
lock
shlb
stos
xor
pop
push
mov
ja
push
mov
fld
cli
push
dec
jg
loope
push
or
sti
jge
lret
mov
xor
ja
mov
mov
pop
or
shl
mov
push
mov
stos
nop
mov
test
mov
ja
adc
lods
push
cmpsb
mov
mov
sub
sbb
push
hlt
mov
or
cmc
mov
xchg
xchg
fdivrl
arpl
push
xchg
mov
cld
adc
jg
fwait
push
movsb
repz
fcoml
mov
sbb
mov
jns
enter
ds
ret
mov
repnz
fisttpl
movsl
loopne
repz
out
inc
out
pop
cmp
loopne
mov
loope
ret
stos
or
das
add
and
mov
mov
pop
sbb
adc
imul
and
push
fs
adc
out
aaa
pop
rcr
cli
aas
xor
bound
mov
sbb
inc
xchg
lahf
iret
xchg
cs
pop
cltd
push
lds
mov
mov
out
fldt
and
iret
xchg
push
data16
movl
or
aaa
scas
ret
rep
push
or
xchg
add
je
faddl
loopne
adcb
addr16
inc
inc
sub
mov
mov
xchg
cmp
sbb
xchg
cmc
mov
xchg
mov
lret
dec
ss
and
cmpsl
sub
lahf
lret
jo
jg
loop
xchg
push
nop
cmpsl
sarl
dec
push
push
pop
shrb
sti
or
mov
inc
sti
sti
test
mov
mov
mov
pushf
xchg
pop
mov
mov
cmp
out
movsb
mov
imul
sbb
xor
fdivl
es
inc
push
pop
test
pop
rclb
push
lret
nop
sahf
loop
sub
je
andl
mov
ffree
nop
data16
push
js
ljmp
outsl
or
sub
xchg
adc
cld
cli
jmp
mov
add
shl
fisubl
mov
lcall
ds
addr16
jle
jge
fildl
push
and
rorb
cmp
inc
and
lods
loop
js
xor
insb
sahf
aaa
sub
sti
push
xchg
repnz
enter
or
push
xchg
add
dec
rcrb
mov
bound
je
dec
mov
movsl
out
ja
xor
out
bound
and
jne
movl
stos
or
mov
mov
jecxz
fldl
cld
aad
daa
mov
mov
idivb
inc
in
push
mov
fwait
jnp
mov
sbb
mov
xchg
sbb
inc
xor
daa
lock
icebp
jno
adc
in
je
inc
xor
xchg
lds
jmp
cmpsb
cmc
add
loope
mov
daa
daa
adc
mov
pop
test
cmp
iret
pop
add
adc
out
fwait
jb
fwait
imul
add
mov
inc
mov
jno
lea
xchg
adc
je
push
mov
push
sub
lret
shr
and
ficompl
out
mov
dec
mov
fisttpll
cmpsb
fisttps
mov
pop
xor
scas
push
xorl
cmp
leave
push
in
movsb
push
xchg
ss
mov
and
lret
shlb
adcb
lcall
mov
inc
add
popf
pop
sub
daa
sarb
ret
aad
jle
fadd
int3
xor
inc
jp,pn
xor
sub
jge
into
stos
xlat
mov
mov
scas
push
fidivl
mov
cmp
inc
pop
outsl
sub
pop
jne
or
jle
stc
lock
inc
shll
sbb
xchg
jle
jo
push
pop
jmp
adc
scas
out
and
jmp
adc
adc
mov
jbe
push
adc
mov
push
push
xchg
lods
roll
popa
nop
rcrl
nop
push
push
nop
movsl
xor
testb
out
outsl
fs
sbb
mov
xchg
iretw
test
push
sub
mov
jnp
jecxz
sub
leave
mov
test
mov
subb
gs
push
aaa
push
rcll
cltd
mov
dec
sti
push
iret
mov
jbe
jb
lock
xchg
mov
inc
push
mov
push
xchg
inc
mov
add
lret
push
mov
lea
mov
jne
in
xor
xchg
sub
leave
push
stos
push
rol
jge
insb
fscale
nop
adcl
sahf
sbb
sbb
rorl
dec
fnstcw
movsl
cmc
mov
mov
ljmp
scas
push
stc
js
push
push
shr
nop
and
sbb
mov
mov
ret
pop
inc
mov
or
sbb
es
mov
lahf
xchg
nop
mov
ret
adc
mov
adc
inc
ret
fs
iret
push
popf
adc
fstpl
mov
pop
js
popa
cmpsb
xor
lret
jge
cmp
outsb
jo
aaa
push
bound
les
dec
cmp
jnp
lods
stc
arpl
stc
inc
addr16
jnp
jno
push
fs
adc
in
xchg
and
pop
stos
in
push
xchg
push
aas
dec
cli
push
mov
loope
es
mov
jl
divl
leave
es
lea
lahf
xor
mov
scas
nop
shl
mov
enter
fcmove
mov
add
mov
mov
lret
push
inc
inc
inc
push
ret
int
or
add
adc
mov
xchg
pop
leave
iret
nop
push
mov
por
aas
xchg
pop
cmp
ja
sbb
jnp
repz
push
and
icebp
loop
outsb
sbb
stos
ja
and
mov
lods
mov
push
imull
ja
xchg
lahf
pop
inc
jl
into
inc
loope
adc
test
fldenv
loope
mov
dec
xchg
xchg
jno
mov
push
xchg
lahf
das
inc
subl
add
out
into
mov
mov
in
xor
xchg
add
push
jp
jp
push
cmpsb
xchg
xor
das
addr16
outsl
dec
aaa
mov
push
inc
imul
into
push
mov
xchg
mov
inc
push
push
cltd
scas
mov
sbb
cltd
sub
daa
push
xchg
mov
push
mov
cmpsb
mov
sub
jne
push
dec
xor
hlt
mov
das
mov
mov
xchg
mov
scas
xchg
push
xor
adc
repz
shll
inc
mov
into
mov
mov
xor
adc
add
xchg
and
ja
jae
push
xchg
outsl
repnz
pop
adc
xchg
mov
inc
xchg
or
push
into
xor
xchg
icebp
test
mov
jno
push
pop
xor
push
rclb
lahf
out
adcb
xor
pop
idivl
ret
shrb
lods
ja
xor
xor
mov
idivb
xchg
mov
push
dec
ss
push
mov
push
mov
xchg
mov
adc
mov
lds
xchg
les
xchg
push
jae
xor
and
adc
repz
mov
xchg
pop
andl
xor
dec
loop
inc
jle
rorl
inc
cmc
push
push
mov
jb
lcall
and
mov
cmpsl
dec
aad
pop
stos
imul
fnstcw
push
jmp
adc
cltd
in
mov
dec
into
mov
repz
cmpsl
shl
xor
psubsb
or
adc
addr16
aas
js
lret
cmp
nop
mov
pop
inc
mov
push
ds
imul
push
ret
ret
pushf
sarl
lods
into
sub
leave
jnp
ret
mov
loop
sub
movsb
sub
mov
dec
aaa
iret
shrl
adc
sub
jb
aad
xchg
xchg
mov
cmp
dec
inc
shrb
inc
cld
outsb
repz
mov
enter
sti
dec
rcll
xor
mov
faddl
loop
aaa
dec
stos
pop
inc
lea
fdivl
mov
push
cltd
aad
push
mov
mov
push
addl
or
jle
push
into
jg
repz
dec
mov
push
jnp
aad
lret
leave
fcomp
mov
scas
pop
aad
push
mov
pop
aas
dec
sub
fisubrs
repnz
loope
rcrl
fbstp
jnp
pop
js
hlt
daa
sti
mov
aam
push
mov
cmc
nop
test
xor
aas
test
fists
xchg
xchg
jae
pop
jnp
sbb
es
and
push
and
filds
push
les
dec
jbe
into
mov
mov
and
adc
nop
jnp
repz
inc
sbb
jecxz
adcb
adc
cld
push
and
jecxz
push
es
lds
push
es
repz
inc
or
inc
jb
addr16
shll
rolb
mov
mov
inc
push
enter
jmp
icebp
fidivl
mov
lds
jle
popf
dec
mov
dec
mov
test
cmp
fdivl
lock
adc
in
cld
in
dec
inc
sbb
and
or
scas
adc
lret
cli
outsb
outsl
xor
aaa
xlat
into
and
fnsave
xchg
popl
cmpsl
dec
xchg
inc
jne
faddl
xor
in
lods
adc
ja
sti
sub
les
mov
lret
and
adcl
ret
popa
je
aaa
sahf
test
movsb
add
inc
lret
jae
repnz
push
test
in
mov
adcl
push
mov
and
scas
pusha
cmp
sub
dec
push
adc
push
lcall
dec
xchg
adc
sub
fcomps
mov
in
outsb
and
clc
mov
js
sbb
clc
xlat
mov
jge
jecxz
js
sbb
stos
fmull
stc
push
jnp
fcmovne
clc
or
mov
add
stos
notl
push
nop
cmp
mov
xchg
xchg
call
jmp
push
xchg
adc
popa
lds
cmp
push
leave
cld
or
pusha
mov
adc
and
in
push
scas
stc
in
mov
mov
jbe
push
mov
cmc
push
inc
pop
out
aad
into
in
rclb
dec
cltd
cmpsl
scas
xor
enter
insb
dec
hlt
aaa
jne
mov
loopne
push
mov
adc
hlt
loopne
scas
out
mov
les
fwait
push
lds
out
es
push
lds
xor
rclb
jae
hlt
adc
push
mov
mov
sahf
mov
sub
dec
mov
xchg
push
push
mov
push
push
ja
popf
cwtl
push
mov
push
dec
push
pop
sbb
mov
jmp
and
push
xchg
scas
mov
inc
mov
push
and
lea
aaa
popw
nop
test
inc
dec
mov
cmpl
lea
paddusb
sahf
or
dec
push
ja
popf
mov
aad
push
std
ja
stos
dec
mov
call
push
mov
les
jmp
pop
adc
mov
aad
nop
add
fsubrl
int3
xchg
mov
or
xchg
jge
xorb
sbb
jle
push
sbb
inc
mov
xchg
loope
iret
jbe
jo
pop
xor
pop
push
imul
inc
mov
push
mov
sbb
vphaddubq
clc
add
jo
jae
iret
inc
sbb
aaa
push
cmp
inc
inc
out
ss
xchg
adc
push
repz
fs
iret
and
je
adc
enter
jne
push
jmp
test
fcmovnu
or
cmp
pusha
inc
dec
inc
nop
mov
pusha
loopne
cli
sbb
negb
shll
mov
cld
push
push
fisubrl
stos
les
mov
gs
push
mov
mov
sahf
in
mov
mov
pushl
push
mov
repz
push
adc
pop
je
test
stos
cmpsl
push
jl
mov
ljmp
add
fmull
sub
xchg
mov
jne
sbb
dec
aas
push
orb
cld
pop
mov
or
negb
inc
or
int
xchg
cld
pop
jb
lret
sub
movsl
fmul
shl
nop
adc
xor
adcb
mov
cs
lock
ret
sub
push
int
or
xchg
pop
jle
jmp
pusha
xor
cmp
pushl
add
mov
jmp
cli
sahf
dec
xchg
fdivs
pop
sbb
outsb
icebp
adc
fmuls
mov
mov
jp
mov
adc
or
xchg
insb
dec
mov
and
loop
aaa
xchg
repz
push
dec
cld
subl
or
push
sbb
cmc
rolb
sbb
lea
dec
lea
inc
fsubl
push
mov
incb
jl
adc
push
icebp
xor
rcll
sbb
jle
inc
jns
xlat
lds
popa
mov
iret
pusha
into
inc
nop
mov
enter
nop
sarb
and
aam
push
mov
mov
nop
mov
popa
in
test
pop
xchg
mov
dec
jge
fcmovnbe
jnp
sahf
xchg
mov
xchg
pushf
xchg
rol
test
push
fimull
outsl
test
xchg
hlt
inc
jno
jg
inc
js
mov
cmp
iret
fwait
mov
bound
ss
inc
sub
rcll
dec
cmc
inc
pop
push
cmpsl
arpl
pop
mov
mov
sub
pop
into
nop
dec
out
or
jmp
xchg
bound
je
push
adc
add
mov
sub
mov
addl
push
pop
sub
mov
xor
aaa
ds
iret
sbb
lret
mov
es
rcll
shll
mov
pushf
shlb
pop
pop
adc
cmc
sbb
sub
pushf
aas
in
xor
dec
mov
dec
fsub
mulb
xchg
xchg
push
js
fldcw
dec
sti
inc
aad
aaa
lds
push
clc
fcmovnu
imul
mov
mov
xchg
cmpsb
xchg
bound
ja
hlt
sbb
adc
cmp
fsubrl
mov
pushf
rolb
sahf
jns
aas
and
dec
sbb
xor
les
adcb
mov
inc
adc
test
and
aas
and
jge
push
sub
cmpsl
mov
jno
mov
pushf
dec
cmp
push
inc
xchg
mov
orl
test
pushf
dec
sti
loop
push
orl
mov
out
andb
jge
add
xor
mov
cs
fildll
inc
jnp
fimull
dec
xchg
xor
fs
xor
mov
movsw
int3
jne
enter
push
mov
xor
add
dec
leave
mov
mov
test
mov
mov
pop
xchg
daa
gs
or
mov
popa
enter
mov
jmp
inc
rorl
cmpsl
roll
push
pop
js
add
sub
push
pop
mov
mov
xchg
adc
movsl
inc
std
sarb
fsubp
push
ljmp
inc
and
mov
ja
ficomps
aas
jno
sahf
aad
in
push
push
adc
jmp
push
int
sbb
sub
je
aaa
iret
nop
mov
mov
cmpsb
shl
loope
mov
inc
cwtl
outsb
and
roll
outsl
mov
addr16
bound
lret
push
orb
xchg
and
dec
out
push
mov
jb
fadd
and
gs
mov
ds
lret
xchg
std
or
jg
lahf
sub
mov
popa
inc
or
inc
test
mov
out
mov
std
lahf
xchg
mov
mov
imul
test
push
xor
scas
cmp
mov
out
mov
mov
cmpsb
mov
pop
sbbl
loopne
pop
jns
jnp
sbb
pop
add
cmp
pop
sbb
daa
push
jp
push
testb
mov
nop
dec
gs
or
and
cmp
xor
aad
add
enter
fstpl
loop
lea
mov
jg
lea
fstl
pop
pop
jg
icebp
pop
ret
and
in
jae
xchg
test
movl
jo
push
adc
dec
cmp
push
in
mov
scas
je
mov
fldenv
repz
pop
pusha
and
cmp
std
pop
inc
rcr
sub
hlt
dec
dec
xchg
cmp
mov
arpl
insb
aaa
xchg
sbb
inc
jmp
repz
aaa
cmc
mov
nop
push
mov
pop
push
cmp
push
and
inc
js
or
call
aam
nop
repz
call
shll
nop
add
mov
mov
fidivs
aas
cmpb
cmp
lods
jnp
sti
rcl
mov
or
xor
jns
push
rcll
jbe
sbb
js
or
push
sub
adc
jmp
mov
mov
jg
movsl
jne
mov
and
int
dec
cmpsl
ret
jle
lea
jo
std
in
nop
mov
sub
ja
cmp
and
aaa
gs
es
push
xchg
sub
jg,pn
into
pop
mov
dec
data16
das
out
jmp
test
in
inc
xchg
and
and
sub
and
cmp
inc
nop
cs
fcmovu
jmp
cmp
inc
test
jle
dec
cld
sbbl
push
and
push
out
leave
nop
lods
sbb
pop
xchg
jg
mov
jb
leave
add
jne
shr
cmp
imul
mov
scas
and
cmp
jbe
jbe
jbe
shlb
xchg
jbe
in
dec
add
filds
scas
and
jp
jbe
adc
stc
fisttpll
out
rol
and
mov
out
loopne
shll
xor
jne
mov
in
mov
sbb
xor
dec
movsb
outsb
sbb
cwtl
sbb
push
ror
jmp
mov
hlt
rorl
xor
jmp
imul
call
in
test
push
xchg
mov
mov
jl
in
dec
adc
jecxz
faddl
push
in
dec
cmp
aam
or
mov
jo
mov
pop
loop
xchg
and
pop
ret
and
scas
cmp
mov
mov
in
jmp
inc
inc
pop
inc
test
cmc
jl
or
push
jb
rcl
cmpb
pop
add
push
call
cmpsb
popf
rolb
rcrb
jne
aad
outsb
push
mov
adc
cmpb
lods
rcl
dec
and
sub
sahf
ja
push
adc
mov
jecxz
testl
jle
lahf
mov
push
xor
mov
pop
loop
fdivrl
mov
sbb
out
popf
jne
xor
inc
push
dec
pop
ja
fcoms
shll
mov
xchg
adc
add
gs
cmpsb
mov
push
xchg
adcl
popf
loopne
ds
cmp
jno
movsl
neg
inc
addr16
scas
sbb
xchg
lock
xchg
in
sbb
sbb
es
inc
mov
cli
sti
negb
movsb
data16
mov
xchg
stos
push
adc
mov
mov
inc
xorl
push
inc
nop
push
adc
mov
test
dec
ficomps
iret
lods
push
xor
lret
xor
aad
loop
inc
add
push
pop
push
jge
sub
cld
xor
in
sahf
sti
scas
xchg
mul
pop
mov
fldl
in
mov
cmp
insl
mov
add
mov
inc
cmp
cmp
inc
iret
dec
js
mov
iret
mov
inc
imul
or
add
jp
cmp
pop
jg
jge
nop
popa
inc
adc
popa
cmc
pop
clc
movsl
aaa
and
mov
pop
jne
xlat
push
lea
je
xchg
jnp
add
je
bound
ror
pop
add
mov
js
sahf
in
push
cmpsl
xor
dec
pop
xchg
sbb
stc
icebp
fstpl
adc
mov
lahf
in
into
mov
jge
or
fs
jnp
popa
std
leave
sti
jmp
mov
mov
adc
in
test
rolb
int
call
test
mov
sbb
and
js
xor
mov
jbe
mov
push
jecxz
xor
xchg
sub
das
inc
cmp
cs
call
mov
outsb
aaa
add
gs
push
insl
pop
jmp
sub
outsb
add
outsb
mov
inc
js
je
and
sahf
mov
shl
test
inc
test
ljmp
or
sbb
push
xchg
movsl
js
clc
xchg
jle
xor
mov
sbb
pop
cmp
insl
incl
push
push
cmp
adc
jge
in
mov
push
xchg
nop
cmp
scas
jmp
scas
xor
lds
add
mov
sub
push
inc
jle
fcmovbe
mov
in
jae
cmp
popf
cmc
mov
lea
or
xor
insl
lock
aaa
xor
xchg
test
rorl
in
dec
inc
lea
dec
push
aaa
jnp
sub
dec
pushw
scas
jnp
loopne
pop
xchg
pop
fucomi
stc
xchg
mov
decl
aad
aad
adc
lahf
repz
sbb
mov
popa
mov
sub
mov
in
push
sbb
pop
mov
dec
dec
and
cltd
iret
xchg
ljmp
and
mov
clc
std
mov
sahf
jae
or
icebp
fbstp
iret
insl
push
sbb
rcrb
and
push
sub
xor
adc
fwait
scas
jb
lods
cmp
sbb
adc
inc
out
pop
rcll
jns
mov
rcll
out
sub
mov
mov
sbb
xor
cmc
test
sahf
adc
xchg
push
lds
sub
in
xchg
fisubrl
dec
fsubrl
jno
ret
xor
mov
pop
xchg
bound
movsl
nop
sbb
mov
mov
ret
pop
mov
xlat
mov
fwait
scas
arpl
adc
fisubrs
nop
mov
js
xor
cmp
shrl
xchg
test
push
or
jnp
in
sbb
jge
fimuls
test
sti
movsb
push
lds
push
scas
js
and
mov
les
aad
sbb
xor
dec
mov
das
jnp
push
mov
aas
inc
clc
ret
xlat
das
shlb
push
pusha
jge
ds
cmp
rcrl
icebp
hlt
ss
mov
pop
out
push
test
lcall
push
mov
ret
lods
mov
add
and
test
and
cmp
xchg
push
dec
pop
arpl
sbb
fildll
into
or
cmp
xchg
lea
sub
add
cltd
xor
iret
jns
nop
xchg
xor
mov
xor
scas
rclb
enter
inc
fisubrs
xchg
roll
or
or
enter
push
jb
mov
nop
in
pop
gs
aaa
mov
in
int3
inc
ss
inc
jbe
ja
push
nop
popl
stc
add
test
imul
jge
movsl
out
lldt
repnz
jo
push
pop
or
xor
cmp
xchg
xor
fcom
loop
shr
or
stc
aad
pop
jge
add
test
jmp
mov
lahf
je
push
mov
gs
idivl
xchg
pop
adc
jl
ds
out
jecxz
jne
into
xchg
ss
in
xchg
sbb
inc
dec
inc
std
pop
out
aas
outsb
xchg
inc
sub
lret
popf
adc
mov
push
icebp
int
adc
addr16
push
iret
mov
inc
or
xor
dec
inc
cmp
fadds
xchg
mov
fcmovb
mov
cld
push
into
fs
movsb
dec
movsb
dec
jnp
movsb
xchg
dec
jmp
lods
loope
push
mul
rcll
add
push
cmp
out
iret
ret
jmp
lahf
mov
xor
aad
or
pop
fdivr
ljmp
imul
lret
push
lcall
imul
fcompl
push
inc
roll
jecxz
cmp
popa
mov
jg
imul
add
lea
xchg
push
aad
js
ss
xchg
mov
xchg
daa
sahf
xor
or
aam
xchg
imul
sahf
push
pop
or
fwait
xchg
mov
scas
ret
nop
add
fwait
mov
icebp
mov
xchg
and
push
adc
mov
dec
leave
push
ret
pop
jecxz
enter
in
data16
mov
push
xchg
xor
aaa
jg
lock
inc
dec
mov
push
std
enter
ja
iret
jo
cs
imul
mov
xor
add
das
add
and
mov
mov
dec
xor
hlt
push
leave
sbb
jae
cli
xchg
adc
mov
push
mov
push
scas
lods
xchg
repnz
inc
xor
dec
std
addr16
ja
aas
push
xchg
inc
dec
das
pop
mov
arpl
lock
loopne
aam
jg
sysenter
xchg
clc
mov
dec
push
seto
fisttpll
mov
pop
lock
es
mov
hlt
outsl
je
jle
loop
mov
xchg
inc
inc
push
rdpmc
ja
mov
repnz
sbbl
mov
nop
enter
dec
mov
xchg
mov
inc
push
push
loop
arpl
xor
jo
hlt
jb
mov
aas
inc
xchg
xor
mov
mov
mov
jae
cmpsb
mov
loop
shlb
cmpsl
adc
mov
jb
xor
cmpsl
pop
ja
mov
xchg
into
jno
ss
xchg
mov
and
pop
mov
mov
inc
cmp
or
cmp
sbb
or
add
and
clc
into
enter
rcl
cld
into
imul
jmp
ds
push
or
xchg
int
push
xchg
xchg
push
stos
add
into
adc
mov
or
int
adc
jge
ja
add
enter
mov
xor
std
mov
bound
aaa
and
xlat
scas
or
push
rcll
fstl
or
pop
rclb
arpl
into
push
nop
lcall
push
jecxz
out
mov
jg
mov
int3
jnp
mov
and
ficoms
push
or
push
addl
popf
scas
or
mov
pushf
push
xor
ss
adc
into
bnd
shll
repz
pop
out
mov
out
repnz
push
pavgw
jae
test
daa
popf
pop
into
and
aam
daa
mov
inc
jne
das
testb
push
ss
mov
inc
out
ja
inc
arpl
mov
mov
and
mov
add
adc
pop
nop
ret
mov
jns
push
jb
outsl
or
cmp
dec
mov
jg
rcrl
xchg
mov
inc
test
hlt
testb
dec
xchg
xchg
in
ss
lahf
push
xchg
ja
arpl
loope
push
sbb
xchg
push
xor
mov
nop
and
push
adc
aas
push
mov
push
xchg
imul
inc
popa
mov
jns
xchg
popf
adc
xor
iret
nop
mov
jo
pop
in
dec
jecxz
aam
das
in
leave
nop
and
cmp
aas
sub
inc
mov
stos
push
mov
mov
jecxz
mulb
clc
jmp
mov
push
mov
push
addr16
and
pop
cltd
rclb
popf
nop
outsb
idivl
push
mov
xor
mov
sub
push
into
js
push
pop
iret
dec
je
push
adc
fs
sub
je
xor
add
lcall
and
push
push
jns
ds
mov
push
stos
pop
or
ficoms
addr16
int3
ja
xchg
mov
xor
mov
add
xchg
jge
dec
scas
imul
pushf
ds
mov
imul
pop
test
push
xor
in
sbb
pop
adcl
and
lret
mov
fidivs
mov
mov
add
ss
mov
outsb
sbb
push
sbb
dec
dec
push
mov
mov
sbb
push
sbb
test
inc
mov
and
inc
xchg
push
adc
or
jle
xchg
lods
mov
xchg
mov
add
jns
lds
ljmp
out
test
nop
clc
cmp
push
adc
std
insl
mov
popl
seto
sub
pop
mov
out
ret
scas
mov
xchg
cmp
jo
aaa
mov
nop
or
int3
mov
mov
mov
mov
stos
ja
aaa
testb
and
pop
sbb
mov
push
xchg
sbb
and
je
push
andl
mov
into
xchg
xchg
fldl
test
mov
push
arpl
test
jnp
lds
hlt
test
aas
adc
sarl
xor
xchg
mov
sar
xor
sbb
repz
push
enter
xor
mov
fildll
movsb
inc
push
jge
push
mov
pushf
imul
inc
aaa
ds
mov
insb
outsl
repz
xchg
sub
insl
cltd
mov
push
pop
mov
push
cmc
dec
inc
inc
nop
push
rolb
jmp
popf
push
jl
pop
outsb
push
loop
imul
les
pop
inc
adc
ss
imul
out
not
jge
mov
push
hlt
cmpsl
or
mov
mov
cmpsb
into
push
data16
mov
sub
subb
aam
nop
sahf
call
aas
inc
out
add
fadd
dec
cmc
cmp
ljmp
mov
cmc
dec
iret
cltd
pop
sbb
push
loop
xchg
mov
paddusw
popa
hlt
data16
jae
mov
xchg
dec
push
mov
xchg
adc
jno
sahf
mov
xchg
mov
ja
cmp
xchg
xor
pop
test
jbe
imul
lock
adc
outsl
push
push
outsb
mov
mov
mov
sbb
inc
movsb
cmp
push
jge
inc
push
adc
popf
pop
iret
ret
mov
repz
jne
xor
xchg
dec
cwtl
dec
xlat
xorl
ds
dec
add
data16
repz
scas
add
dec
pop
fucomip
mov
mov
sbb
sbb
xchg
mov
push
pushf
sub
adc
mov
xchg
mov
xor
arpl
xchg
mov
adc
nop
test
dec
fsts
and
xchg
addr16
ja
push
jmp
and
js
jo
adc
xorb
push
and
pushf
mov
andb
cmp
or
cmpsl
and
idiv
lea
or
or
pop
imul
jge
xchg
lret
aaa
jge
fisubl
add
negb
lods
sahf
out
adc
in
mov
mov
inc
xchg
sbb
add
stos
sbb
out
cmp
out
mov
xor
sbb
or
repnz
push
mov
scas
enter
pop
mov
out
pusha
and
ja
push
and
out
fistpll
jecxz
mov
mov
dec
mov
sbb
inc
fisubrl
fwait
xchg
add
lret
js
and
aad
or
push
mov
dec
mov
mov
xchg
mov
jno
mov
gs
mov
cmp
sbb
cmp
out
and
das
push
insl
push
lea
divl
daa
dec
aaa
inc
dec
ret
mov
pop
imul
jne
dec
lret
outsl
sub
aam
and
imul
mov
inc
push
jecxz
and
xchg
and
push
xchg
xchg
and
lods
sub
cmpsb
call
mov
push
or
jbe
mov
xchg
jae
in
rcll
movsb
pusha
scas
test
scas
cmp
xchg
popf
popf
lret
jecxz
pop
pop
cmpsl
in
jnp
sub
repz
int
iret
cmp
sub
pop
cmp
or
sub
pop
stos
nop
cmp
pop
into
leave
dec
push
mov
jbe
ss
mov
mov
dec
xchg
pop
jo
sbb
std
jnp
mov
or
cmp
aaa
hlt
daa
mov
aaa
xchg
mov
les
mov
aad
mov
int
mov
psadbw
movb
jne
test
push
mov
cmpsl
jp
lods
into
xor
mov
xchg
xchg
test
fs
lock
aaa
push
repnz
iret
mov
push
js
bound
outsl
push
lret
inc
test
add
das
rcll
mov
sub
leave
jl
mov
sbb
ja
arpl
iret
fmul
js
movsb
bound
jecxz
ret
divb
jne
sub
adc
xlat
inc
mov
loop
ja
shrb
adc
push
xor
into
cwtl
ficomps
mov
adc
xor
xlat
push
inc
sbb
push
adc
scas
arpl
test
sub
insb
scas
add
adc
xor
dec
mov
cwtl
xchg
push
fwait
mov
mov
rolb
mov
hlt
scas
and
cltd
mov
mov
xor
push
and
adc
insb
mov
aaa
lret
js
gs
add
fstpl
aas
jae
jl
dec
lods
mov
nop
jle
mov
inc
scas
test
dec
stos
lds
pushf
xchg
arpl
sti
cmpsl
jns
mov
lret
and
getsec
mov
ja
xchg
sbb
js
pop
and
xorl
pop
hlt
jbe
pop
cltd
or
pop
xchg
xor
push
cmp
stos
ljmp
dec
mov
add
fmull
cmc
nop
sahf
sub
adc
jle
or
xchg
sbb
nop
xchg
jno
movsb
fbld
or
xchg
sbb
mov
pusha
js
imulb
and
dec
lods
test
dec
xchg
cmp
xor
out
or
mov
jl
movsb
movsb
mov
jns
notb
cmc
std
ret
pop
jmp
aad
idivb
fdiv
push
pop
jge
mov
jl
jecxz
divb
inc
dec
repnz
dec
mov
mov
xchg
mov
push
mov
pushf
jl
xor
push
aad
mov
adc
shrl
add
movsb
ja
pop
mov
call
inc
adc
xchg
push
dec
and
xchg
push
sub
cwtl
mov
xchg
shrb
xchg
dec
cld
ds
movsb
inc
dec
xor
xchg
mov
xchg
jno
rolb
mov
and
inc
faddl
loopne
push
cmp
xor
nop
cmpsb
call
les
mov
stos
xchg
adcb
jnp
stos
pop
or
pop
in
aaa
cmp
ret
inc
and
adc
hlt
stos
sub
testl
lret
sbb
ja
push
mov
sub
mov
out
xchg
idivb
jge
inc
sub
aaa
mov
pop
ds
xor
daa
push
inc
sub
adc
push
mov
movsb
aaa
into
adc
inc
mov
xlat
xor
iret
inc
mov
mov
hlt
stos
jp
loope
data16
into
pop
scas
call
cld
fists
jnp
mov
mov
in
enter
inc
pop
divb
into
or
ficoms
in
pop
addb
nop
fistpl
sub
inc
pop
inc
enter
loope
fidivrs
lahf
sbb
rcrb
sub
imul
push
in
fildll
push
xchg
aad
hlt
pop
jbe
in
cmp
mov
mov
nop
pop
jmp
mov
jo
lret
push
sub
jo
xlat
lret
imul
sub
nop
in
popa
cld
adc
or
fldt
xchg
mov
fsubs
lock
xor
mov
fwait
sti
mov
add
out
push
push
sbb
jl
xchg
mov
mov
push
add
js
inc
mov
popf
divb
lods
sbb
imul
mov
nop
xchg
out
lds
sub
subb
popa
outsb
cld
stc
xchg
shll
sbb
inc
loop
cmpsl
fdecstp
xchg
push
outsb
enter
push
daa
out
and
iret
arpl
fsubr
adc
fcomps
adc
jno
push
ror
or
ret
pop
out
jae
adc
imul
popa
aad
fbld
sub
jg
lret
cltd
sub
xlat
ss
jae
jb
pop
sub
mov
jbe
fsubrl
lods
cmpsb
scas
sbb
dec
cmp
into
cli
ss
aaa
xchg
push
push
inc
lods
push
hlt
scas
mov
ja
mov
pop
jecxz
mov
push
pop
bswap
testb
xor
fiaddl
mov
pop
push
add
mov
pop
loop
push
mov
js
pop
out
nop
aaa
xchg
js
shrb
xor
dec
in
jle
push
dec
in
xchg
add
jg
fcoms
repz
icebp
pop
jnp
dec
dec
pop
inc
aad
iret
ret
shrl
jg
mov
negb
adc
hlt
xchg
rcll
cmpsb
fsubl
out
xchg
pop
js
adc
das
mov
push
lret
jo
xor
jle
inc
push
sbb
mov
push
mov
push
cs
nop
icebp
mov
add
sahf
dec
pop
shll
adc
or
in
repz
fists
std
mov
push
xor
inc
sub
xchg
or
outsl
dec
ret
push
mov
mov
test
aad
pop
lods
aad
mov
inc
imull
inc
mov
sub
mov
or
jo
lret
lea
dec
sbb
cs
rcrl
loopne
stos
test
daa
xor
arpl
push
pop
mov
fisttps
aad
nop
cld
mov
push
imul
pop
faddl
cmp
scas
js
in
add
arpl
push
push
mov
nop
xchg
add
sahf
jnp
add
mov
mov
mov
cli
cmpsb
jge
rclb
ficoml
and
jae
repz
mov
daa
mov
repz
mov
xchg
add
loopne
out
push
inc
sub
loope
lods
pop
incl
jge
lea
adc
xor
sarb
add
aas
xchg
jle
mov
mov
ds
popa
loop
sarb
adc
fiaddl
rorl
sahf
jae
pop
push
into
imul
mov
pop
dec
addl
adc
lret
daa
imul
pop
inc
sbb
jb
sub
into
adc
test
push
push
inc
nop
out
mov
cmpsl
pusha
dec
dec
and
cld
mov
sbb
lock
addr16
xor
sbb
scas
adc
arpl
pop
xor
aaa
mov
ljmp
cmpsl
loopne
lods
int3
and
jge
shl
imul
js
push
jnp
bound
mov
bound
popf
incb
outsl
pop
cmpsl
sub
in
pop
xor
inc
aad
xchg
pop
dec
mov
lret
imul
fnsave
les
sti
cmp
outsb
ja
jns
xchg
mov
mov
xchg
lea
cmovne
xor
inc
pop
mov
jb
xchg
mov
inc
xor
push
hlt
dec
xchg
nop
std
sub
sub
stos
mov
repnz
dec
gs
out
test
out
xorb
cli
js
mov
in
test
cld
push
push
push
dec
fidivrl
cmc
std
mov
xchg
dec
xchg
cmp
fcmovb
mov
mul
pop
stos
pop
test
fcoml
shl
jge
cmp
and
dec
inc
and
jl
pop
adc
push
inc
std
ror
mov
lcall
pushl
xchg
out
stc
jns
stc
cmpb
xchg
sbb
aas
xchg
pop
push
mov
jle
inc
test
out
test
push
sub
aad
jge
adc
ja
xor
xchg
ljmp
push
push
mov
mov
js
scas
xchg
stos
roll
out
xor
mov
xchg
loope
mov
mov
push
nop
push
daa
sbb
pop
pop
rclb
repz
xchg
outsl
xor
lock
adc
pop
aaa
daa
pop
adc
lret
int3
sbb
fdivrp
and
or
outsb
mov
fs
movsb
xlat
dec
fidivl
pop
push
insb
notb
pop
call
pop
mov
js
bound
mov
fcmovb
fcompl
clc
mov
add
xchg
mov
pop
lods
fld
sbb
add
in
xchg
js
mov
dec
andl
sub
xchg
lock
xor
add
cmp
ljmp
test
sti
xorl
ret
movl
test
xchg
imul
imul
fidivrl
mov
sub
xchg
mov
cld
dec
add
pop
out
mov
xor
adc
sub
arpl
jge
ljmp
iret
jmp
mov
add
jp
movsl
loope
dec
ss
mov
xchg
flds
repz
xchg
dec
push
cmpsl
call
mov
popf
jo
leave
cmp
cmpsl
hlt
and
add
mov
mov
nop
outsb
sub
je
pop
movsb
imul
mov
push
scas
xor
imul
xchg
jg
mov
dec
repz
rorb
mov
nop
xchg
testb
imul
jb
fnstenv
sub
mov
xchg
jno
inc
lahf
js
add
adc
xor
nop
mov
add
imul
rorb
fstp
mov
nop
das
xchg
mov
lcall
xchg
inc
in
xchg
in
adc
movsl
std
pop
jae
cmp
mov
mov
sub
and
mov
imul
lds
out
and
mov
insl
std
sbb
adc
inc
aad
or
idivl
out
and
incb
rorb
scas
jg
xor
repz
nop
rcr
jo
or
xchg
pop
add
seto
testb
cwtl
loopne
ret
xlat
adc
jne
or
xor
js
add
dec
fnsave
jno
dec
push
xchg
nop
mov
in
pushf
cli
shl
or
aad
imul
cmp
mov
lds
iret
mov
les
dec
mov
shll
mov
test
rcll
movsb
mov
inc
call
adc
push
xor
mov
fistl
jbe
xchg
inc
pop
stos
push
xorb
sbb
loope
inc
cs
xor
jns
std
popa
adcl
int3
mov
adc
mov
push
aas
lret
mov
bsf
mov
sub
aas
lret
xchg
js
bound
into
sub
xor
pop
cmpsb
or
or
movsl
pop
ds
jp
adc
fnstsw
imul
into
sub
or
scas
and
scas
mov
arpl
cmp
mov
push
mov
pop
into
testb
and
inc
push
jnp
fcoms
jnp
mulb
rcrb
mov
movsb
pop
pop
cltd
rcll
cmp
scas
es
data16
int3
cwtl
aaa
adc
and
clc
push
mov
pop
jg
and
aaa
xchg
pop
xlat
dec
sub
adcl
call
xchg
das
xcrypt-cbc
cmpsl
nop
jno
and
xchg
push
fwait
mov
sbb
in
inc
xlat
push
jbe
add
sbb
mov
push
inc
pop
inc
inc
xchg
scas
sub
lea
mov
fcoml
dec
in
mov
mov
ja
jbe
cmp
mov
dec
adc
cmp
pop
mov
shll
pop
jecxz
jle
pop
mov
inc
dec
aad
nop
scas
fsubrs
cmp
xchg
and
stos
gs
fldz
add
out
mov
aas
dec
pop
add
cmc
mov
jbe
xor
mov
aam
imulb
frstor
pop
mov
xchg
fdivr
xor
repz
sbb
rorb
in
ficompl
rol
inc
inc
stos
into
std
mov
stos
xor
push
mov
mov
xor
ret
mov
jl
mov
mov
pushf
rorb
daa
jae
mov
loope
sub
and
test
shrb
jb
call
cmpsb
sbb
daa
push
xchg
cmp
push
and
adc
xchg
repz
fsub
jg
sub
lock
add
inc
jno
pop
int3
outsb
iret
pop
pop
push
fwait
xchg
into
push
sbb
xchg
pop
xor
lods
aas
or
mov
sub
jp
xchg
sti
mov
pop
mov
sbb
iret
and
je
xorl
sbb
dec
inc
inc
mov
aas
jno
arpl
or
arpl
lea
scas
push
cmp
pop
and
ljmp
ss
xchg
out
sbb
andb
mov
cld
sbb
push
sbb
ja
jne
loopne
test
insb
jmp
cmp
or
and
and
js
jnp
push
xchg
sub
pop
push
cmp
jb
mov
pop
icebp
mov
das
xchg
adc
jb
imul
push
mov
jp
adc
inc
jb
jb
and
dec
sub
js
push
rcll
movsl
sub
mov
pusha
cmpl
mov
leave
int
push
ret
filds
aam
mov
sti
xchg
mov
jne
aam
loope
fs
cs
idivb
mov
inc
adc
push
hlt
out
cmc
jbe
dec
aam
bound
push
and
push
ja
xchg
sub
mov
out
mov
ret
mov
testb
in
xchg
aas
stos
xor
jne
xchg
jo
outsb
nop
push
adc
jne
rolb
loope
cmp
fistpl
dec
sahf
jnp
mov
mov
outsb
fs
ljmp
fldenv
lret
adcb
lods
dec
jl
nop
cmc
pop
nop
sub
xor
adc
shrl
insl
dec
in
sbb
icebp
and
and
inc
mov
out
pop
popa
xchg
mov
sbb
jge
inc
and
add
pop
cmp
imul
push
testb
sub
std
dec
jmp
sar
fistpll
xor
lret
xchg
in
mov
mov
not
cmp
sub
or
mov
push
cmpsb
orb
mov
out
xor
dec
dec
cmp
mov
xchg
sbb
faddl
aas
jl
cmpsb
fidivl
push
test
sbb
and
cmpb
ja
pusha
dec
inc
or
push
adcb
xchg
mov
hlt
int
xchg
icebp
aas
out
in
inc
dec
addl
mulb
lds
ror
xchg
push
push
fmull
rorb
lds
stos
jae
cmpsb
sbb
xchg
mov
cmp
or
push
pop
ss
xchg
orl
push
jae
adc
sahf
xor
ja
loope
leave
jge
xorb
ret
nop
les
xchg
jbe
adc
pushf
xor
fcmovnb
test
jmp
cs
or
lock
xor
sbb
outsl
lods
cmp
clc
push
cld
ficomps
push
xchg
jnp
jbe
arpl
cmp
pop
scas
test
sbbb
test
fldcw
fidivl
inc
pop
push
test
pop
sub
nop
sbb
xchg
fnstcw
mov
fxch
mov
cltd
mov
jp
adc
mov
inc
fwait
xchg
out
and
inc
js
xor
dec
inc
pop
aam
cli
and
push
call
mov
add
pop
jmp
jb
push
sub
xchg
xor
movsl
pop
cmc
inc
in
adc
ret
ret
dec
es
pop
dec
fs
dec
lea
imul
vmaxsd
shlb
cs
sub
dec
out
repz
add
testb
push
fdivl
sbb
movsl
cs
cwtl
stc
sub
aad
lahf
inc
pop
push
fildl
push
data16
xchg
inc
movsl
addr16
cmpl
push
rolb
push
lret
xor
inc
mov
adc
mov
loope
fcomps
cmp
xor
jp
fsubrs
sbb
fdivl
inc
sub
es
xadd
ss
xlat
shl
mov
iret
adc
test
jp
pop
js
xchg
mov
mov
xchg
adc
nop
in
sub
fwait
jne
cmp
dec
std
adc
cmp
xor
cvtps2pi
cli
sar
pop
fcompl
mov
add
into
push
lcall
mov
rcll
rcrb
aad
adc
lcall
dec
sub
and
ja
or
xchg
aas
std
test
adc
jnp
adc
ret
push
es
test
imul
dec
test
mov
push
xor
pop
push
aas
jo
lret
push
nop
repz
je
push
sahf
imul
mov
mov
xchg
mov
aaa
out
or
movsl
lods
data16
fdivl
scas
xchg
sbb
adc
mov
dec
adc
mov
push
dec
inc
push
mov
popf
stos
xchg
dec
imulb
pusha
push
mov
aas
and
sub
fisttpl
ret
mov
cmp
shlb
leave
add
add
jmp
adc
jg
cld
jmp
sub
sbb
std
std
jb
dec
in
imul
inc
in
mov
or
add
rorl
ds
cld
xor
mov
dec
out
xchg
mov
adcb
adc
leave
xor
lahf
mov
inc
fistl
fidivl
outsb
jbe
inc
and
cmpsl
nop
xor
fs
daa
sbbb
push
jo
scas
xor
mov
in
in
mov
imul
push
cli
popf
inc
into
mov
or
mov
rol
nop
mov
mov
adc
mov
jnp
fdivrl
lock
push
js
push
and
fnstcw
jmp
sbb
add
mov
mov
mov
test
subb
add
sub
sbb
adc
fs
mov
lret
xchg
jmp
xchg
ja
or
and
aaa
xchg
pop
mov
and
xchg
pop
subl
pop
stos
fbld
mov
rclb
enter
int
aaa
dec
nop
out
xchg
in
rorl
ds
sete
ds
std
cmp
enter
mov
pop
subl
mov
aaa
adc
sub
sub
or
mov
jp
loope
pushf
sub
hlt
jno
inc
cmp
iret
dec
cltd
mov
rcll
xor
mov
or
in
push
inc
aaa
jnp
leave
dec
cmpsl
std
ss
loopne
jmp
jge
cwtl
dec
addr16
jnp
scas
xchg
stos
loopne
sbb
mov
cmp
ret
sub
mov
rorb
std
push
xor
push
adc
gs
loope
dec
mov
xchg
es
pop
push
pop
adc
jns
ja
mov
and
push
xor
mov
xchg
call
cld
push
ret
shll
and
nop
aaa
scas
stc
cld
iret
jae
aam
mov
mov
dec
insl
and
pushf
test
adc
int
js
pushf
int3
int
or
inc
sbb
adc
repnz
cld
jp
lea
movsb
push
push
mov
and
js
mov
jg
sbb
cwtl
mov
jno
cwtl
or
sub
arpl
push
adc
ret
nop
dec
mov
inc
pusha
sbb
cmc
push
ftst
aad
mov
add
ret
sbb
dec
adc
mov
int3
push
inc
push
jno
jg
push
fnstsw
cltd
test
ret
xchg
mov
out
ret
inc
je
jnp
loopne
xor
fcomip
mov
aam
stos
jae
ret
adc
lods
jl
push
addr16
pop
pop
and
int
and
mov
inc
jp
lds
push
and
xor
adcl
gs
jo
cmc
push
mov
xchg
rorl
int
sub
rorl
mov
mov
pop
push
mov
shrb
push
out
bound
popf
lret
test
ja
xchg
fcoms
int3
sub
in
call
pop
loopne
mov
notl
fnstenv
xor
sbb
test
cmp
sub
idivb
and
push
adc
xchg
mov
mov
addr16
pop
xchg
cmc
sti
pop
add
enter
ljmp
xchg
mov
push
bound
ds
lock
gs
cmpsb
sahf
sub
aas
xchg
cmpxchg
rolb
daa
dec
dec
lods
nop
mov
aaa
pusha
xchg
dec
sub
iret
inc
out
pop
adc
and
xor
int
ja
mov
mov
inc
nop
inc
xor
fcmovnb
ljmp
xchg
and
or
mov
les
pop
movsb
pop
xor
lods
push
jnp
repnz
sbb
pop
popa
fdiv
and
in
pop
push
jmp
movsl
jbe
lret
gs
shll
lock
mov
notl
pop
ret
movl
pop
mov
push
xchg
push
or
xchg
inc
lods
push
pop
mov
adc
mov
cs
cli
jecxz
mov
inc
fistl
and
xchg
mov
mov
aad
ficoml
jo
xor
xchg
dec
cmc
sub
xchg
mov
jno
cmpsb
jae
outsb
insl
xchg
test
xchg
ljmp
incl
jo
xor
dec
add
fmulp
mov
jo
or
inc
or
testb
movsb
dec
inc
js
cmp
and
dec
jge
dec
mov
test
bound
test
cltd
inc
inc
fcmovne
add
dec
and
leave
addr16
outsl
into
stos
fs
clc
sbb
pop
into
sbb
adcl
stos
cli
mov
adc
es
cmpsl
dec
lahf
mov
ljmp
push
or
sbb
lods
shll
test
xor
imul
pop
sbb
mov
sbb
or
cmc
lods
mov
lret
dec
mov
jg
fmull
jle
xor
dec
push
push
push
fcomi
repnz
ss
lods
or
std
pop
in
mov
stos
aaa
jle
jmp
pop
shl
mov
pop
adc
adc
inc
std
testb
jb
dec
popa
cltd
xor
mov
fiaddl
repz
inc
repz
xor
sahf
shlb
shlb
iret
out
sub
ja
ret
pop
push
pop
aam
sbbb
dec
sahf
cltd
lret
std
xchg
add
inc
mov
aas
ljmp
jnp
mov
fs
jg
cmc
stos
rcll
aaa
or
xor
adc
fcoml
scas
outsb
call
or
add
imul
xchg
movsl
movsl
jge
jno
lldt
jne
push
xchg
xorl
rol
in
mov
das
addr16
xchg
push
mov
pop
adc
pop
mov
arpl
push
fldcw
push
xor
inc
nop
test
sti
or
clc
cmp
std
sbb
inc
jmp
lret
imul
mov
aad
xor
sub
loop
cmpsb
iret
mov
push
mov
rcr
cmp
dec
jecxz
dec
in
fdivrl
inc
xchg
ss
lret
or
push
adc
pop
mov
jecxz
mov
std
cld
jns
mov
int
inc
sbb
addb
jo
mov
push
ss
push
loop
mov
in
dec
in
cmpsl
xchg
outsb
cld
imul
mov
xchg
xor
scas
push
jmp
mov
jg
lcall
shll
push
gs
sub
or
insb
sbb
or
push
lods
es
aaa
pop
shr
sarb
mov
movzwl
ja
cs
add
mov
int
loopne
cli
lock
inc
xchg
pop
mov
dec
jbe
push
cli
xchg
std
mov
icebp
inc
push
and
mov
rolb
jb
mov
ret
push
movsl
ret
cld
ja
or
cld
nop
xchg
push
xor
mov
sbb
imul
xor
mov
nop
sti
inc
jo
xchg
add
imulb
push
and
and
inc
push
sub
xchg
inc
sub
std
dec
repz
pop
scas
cmp
fld
sbb
rol
lret
mov
test
dec
aas
jp
stos
jb
add
fstps
xchg
test
push
gs
enter
mov
jbe
xchg
bound
shll
adc
fnop
xlat
imul
mov
aaa
mov
in
adc
or
xchg
hlt
push
jno
repnz
jecxz
jg
fmuls
ja
ret
or
sbb
pushf
inc
mov
jno
inc
adc
sbb
imul
pop
mov
fxch
out
push
in
ja
adc
lret
jle
mov
popa
push
ja
push
inc
cmpsl
mov
cmp
iret
push
mov
sbb
push
push
sub
and
jle
das
xchg
sub
in
in
add
aaa
sti
adc
sahf
shll
pop
xchg
sub
hlt
xor
pop
inc
pop
pushf
int
fsubr
scas
sti
push
lods
mov
pusha
xchg
xchg
xchg
icebp
push
fwait
push
and
xchg
jge
bound
adc
push
mov
push
push
in
ficoml
xor
out
ret
adc
lods
aam
or
int
push
rolb
lock
mov
push
push
mov
jns
jnp
sub
and
and
xchg
sbb
lahf
xchg
cmpsl
pop
sub
mov
imul
mov
out
and
hlt
nop
into
dec
cmovae
push
arpl
scas
das
xor
lahf
pop
filds
aad
pop
imul
inc
inc
lahf
fwait
inc
loop
inc
stos
leave
xor
mov
aad
andl
pop
movsl
incl
inc
shll
pop
inc
stos
fwait
mov
inc
add
jb
mov
scas
fwait
and
cs
sahf
push
xor
iret
lahf
mov
mov
xchg
xchg
pop
lret
push
sbbb
xchg
cmp
aas
ljmp
jbe
pusha
dec
push
or
jnp
loope
add
push
ja
repnz
xchg
cltd
inc
jns
stc
shll
or
mov
mov
lock
bound
sub
jnp
jmp
in
inc
xor
rclb
pop
pop
xor
test
das
inc
cmp
into
push
pop
xchg
das
or
xchg
jge
jno
fsubrp
dec
or
push
mov
out
aad
and
sti
fdivs
sbb
dec
call
int3
adc
sbb
pop
mov
push
push
aad
mov
jo
adc
js
les
nop
xor
or
sub
jmp
push
push
test
in
scas
mov
lods
cmp
nop
and
adc
test
cmp
pop
addr16
cmp
mov
inc
outsb
daa
jp
inc
fwait
aad
cmp
sbb
int3
mov
or
dec
fcmovnb
pop
mov
xchg
cmp
movb
inc
stc
int3
scas
sbb
sub
mov
lods
dec
scas
jnp
pop
inc
mov
push
andl
popf
jno
inc
fdivl
inc
dec
inc
sub
lock
dec
js
lea
pop
pop
mov
daa
cltd
outsb
jae
sbb
shlb
les
negl
outsb
mov
fistpl
or
mov
icebp
ljmp
out
orl
scas
jb
out
sbb
adcb
movsl
scas
ja
and
mov
xor
cmp
mov
mov
pop
fnstsw
and
mov
mov
mov
into
pusha
inc
pop
loopne
xor
nop
fiadds
push
push
adc
mov
inc
jle
xor
test
sub
out
pop
mov
dec
aas
push
inc
xor
std
jns
pop
test
cmp
cmp
int
movsb
iret
lret
jecxz
cmp
ret
jb
sbb
mov
cmp
ret
adc
mov
push
mov
jmp
jnp
std
jae
mov
popa
mov
mov
repz
sbb
inc
sub
fdivs
cmc
sub
push
xchg
jg
cmp
ret
cmc
sub
outsb
mov
cmpsl
mov
mov
pop
or
sbb
stos
inc
jmp
mov
push
inc
mov
jbe
sbb
aad
lret
shlb
mov
jle
aas
or
mov
xor
or
rclb
das
pop
rcll
int
mov
fs
jbe
andl
int
mov
jmp
sbb
scas
add
pushf
push
scas
mov
ss
xchg
pop
xchg
sub
add
rcrl
mov
movsl
xchg
xchg
push
push
ret
cli
sahf
sub
xor
repnz
push
jl
scas
pop
rol
jecxz
lret
dec
enter
mov
pusha
or
mov
aad
inc
sahf
mov
lds
jo
fsubrp
jno
xchg
sbb
mov
push
std
lea
test
mov
xor
xorb
xchg
xchg
sub
xchg
jnp
js
xchg
mov
cltd
scas
hlt
add
leave
sti
lret
inc
mov
sbb
ja
cmc
aas
test
xor
push
add
stc
add
dec
dec
jo
xchg
fnstenv
sbb
rcll
mov
xchg
out
mov
pop
nop
dec
rol
subb
mov
dec
scas
mov
mov
iret
notb
imul
xchg
popl
mov
push
push
testl
aad
and
or
add
and
jae
mov
mov
sub
pop
and
jno
push
adc
jns
sub
iret
je
adc
sahf
dec
mov
imul
bound
int
scas
xor
pop
mov
fwait
push
mov
sub
lahf
dec
xchg
inc
dec
addr16
nop
cmp
in
and
outsb
inc
push
jo
push
xchg
aad
jbe
push
clc
mov
js
addr16
push
nop
scas
fnclex
lcall
fbld
loopne
sub
cmp
inc
xchg
js
inc
sarl
adcb
cmp
aaa
cmp
jne
ret
je
cmc
out
adc
cmc
and
mov
inc
jo
cmp
negb
sub
fsubrp
dec
push
mov
test
notb
xor
jge
pop
std
dec
jmp
ja
daa
pop
push
ret
or
loope
sbbl
int
insl
addr16
daa
imul
sbb
sub
pop
das
nop
rcrl
setns
pop
sbb
push
dec
out
xor
js
in
xor
divb
stos
mov
aaa
and
jg
sti
inc
push
inc
mov
repnz
aad
xchg
push
js
shl
and
sbb
aaa
fmull
cltd
test
test
std
xor
inc
mov
scas
inc
js
lds
xchg
mov
sbbl
ja
push
mov
fs
xchg
mov
mov
jbe
xchg
stos
push
movsl
mov
rclb
dec
push
lods
lods
pushf
jbe
scas
or
jle
lret
pop
inc
sub
adc
dec
jmp
xor
fcmovb
jb
pop
jns
outsb
mov
or
mov
xchg
js
pop
sub
ljmp
xchg
testb
les
mov
aad
or
out
icebp
cmp
ljmp
sub
mov
js
test
mov
cmpsl
and
aaa
mov
mov
lret
scas
fistpll
xchg
add
pop
cs
dec
pop
ja
ja
loope
jge
scas
xchg
js
xchg
mov
mov
inc
jp
cli
addl
xchg
cmp
test
lds
sub
push
sub
aam
xchg
mov
xor
mov
adcb
in
and
mov
in
dec
jae
sbb
dec
out
sbb
je
xchg
lea
mov
jnp
cmp
xor
scas
in
into
pop
xchg
cli
lahf
test
roll
mov
pushf
test
xor
pop
inc
push
mov
cwtl
iret
nop
cli
pusha
cmp
cmp
sbb
lock
and
loope
outsb
in
ret
mov
fisttps
mov
inc
mov
ds
add
fsubl
sub
xchg
loop
jmp
aaa
outsb
pop
mov
mov
add
cmp
or
jne
aaa
add
loope
out
lods
sti
xchg
adc
in
mov
mov
fsubrs
mov
jno
mov
xchg
pop
mov
ficoml
inc
push
repz
imul
cltd
xor
mov
inc
and
add
adc
mov
scas
sbb
cmp
xchg
mov
mov
ret
push
insb
cld
xchg
mov
mov
dec
aad
push
jmp
push
lds
call
sbb
mov
jp
rorb
inc
push
push
mov
push
push
sahf
jle
push
test
xor
pop
inc
imul
repnz
bound
stos
clc
mov
sbb
mov
std
xorl
push
fldt
ja
xchg
shr
aaa
xor
dec
push
pop
sub
xchg
das
mov
inc
pop
dec
dec
xorb
stos
push
mov
pop
push
shlb
insl
push
xchg
sbb
dec
add
fnstsw
out
repnz
push
mov
fwait
sahf
jg
mov
mov
lods
rolb
mov
mov
aaa
or
nop
cltd
js
xlat
add
and
ljmp
add
add
aaa
mov
jbe
push
nop
push
enter
mov
mov
xchg
and
sbb
push
lock
int
int
sub
xchg
jb
aas
lret
out
cmp
mov
imul
aaa
jmp
jmp
nop
daa
lret
xorb
dec
stc
dec
jmp
cli
cs
std
xchg
adc
int
push
orl
lods
jle
mov
xchg
push
les
adc
mov
cpuid
mov
stos
and
mov
popa
push
stos
pushf
xor
xchg
mov
repz
hlt
dec
push
enter
push
inc
mov
negl
jnp
imul
xor
cltd
pop
js
add
pop
mov
add
inc
call
iret
jnp
in
adc
int3
push
inc
scas
test
shrl
mov
jae
mov
into
mov
mov
nop
das
cmp
sbb
xor
fisttps
xchg
dec
pop
ss
cs
cmpb
out
dec
xchg
push
fnsave
fwait
push
gs
shlb
or
or
ss
dec
pop
add
push
mov
jmp
and
ret
xor
sbb
mov
push
mov
mov
xchg
sub
scas
mov
mov
jo
mov
sbb
jnp
fdivs
clc
and
mov
into
push
nop
cmp
nop
mov
into
ss
pop
aam
mov
js
cs
addr16
xchg
cmpsl
and
xchg
jo
out
jb
mov
dec
subb
mov
mov
imul
loopne
sbb
xchg
pop
mov
sub
int3
scas
mov
sbb
adc
rorl
xor
jmp
mov
mov
lcall
push
mov
mov
sub
pop
sbb
imul
cmp
jmp
outsb
out
jne
fwait
shlb
lret
aaa
ljmp
mov
lcall
mov
divl
movsl
out
aad
jns
mov
movsl
jno
lahf
fidivs
and
out
ds
xchg
push
std
cmp
daa
dec
mov
data16
sub
pop
mov
jg
xchg
shll
jp
imul
dec
jnp
mov
std
sub
lods
aas
in
test
stos
mov
jp
cld
xlat
and
scas
sbb
nop
mov
jno
xor
pop
jae
ja
dec
jbe
sarl
mov
sbb
mov
enter
aad
movsl
cwtl
aas
out
mov
mov
aad
movsl
mov
xchg
jb
push
mov
out
loop
sbb
dec
jl
xor
inc
sarb
jmp
xor
jmp
xchg
jg
es
mull
mov
sbb
outsb
aad
ficoms
nop
clc
mov
rorb
decb
cld
pusha
insb
fmull
mov
mov
je
bt
push
cmp
test
inc
cmp
and
test
mov
push
mov
in
push
xor
xor
test
sarb
cmp
cmp
push
pop
ret
mov
movsl
xchg
adc
sub
and
cs
sbb
lock
aaa
test
add
jmp
lds
movsb
stos
bound
and
pop
fsts
sub
inc
orl
into
sub
loopne
mov
xchg
cmpsb
pop
mov
fnsave
push
loope
andl
jns
inc
pop
push
mov
xor
ljmp
mov
xchg
lods
and
loope
cltd
lcall
cmp
loop
adc
xor
into
cmp
fwait
aad
test
mov
mov
pop
es
add
lea
in
aad
jbe
mov
daa
insb
mov
adc
ljmp
std
inc
sub
and
cmp
jbe
mov
mov
gs
push
je
ljmp
das
pop
ret
push
sub
sub
ljmp
jae
xchg
shl
mov
xchg
rcl
in
xor
ljmp
das
gs
ljmp
and
xchg
jne
ljmp
jmp
pop
ljmp
xor
and
ret
jne
mov
addr16
mov
xchg
aam
push
les
int3
jae
iret
pop
dec
xchg
arpl
inc
repz
xor
adc
ljmp
filds
lock
cltd
popf
xchg
test
jge
jp
movsl
or
fwait
pop
es
mov
lods
mov
movsl
mov
adc
mov
sbb
inc
mov
jae
add
imul
lea
out
pop
pushf
repz
nop
out
or
sbbb
xor
pop
mov
outsl
aas
dec
ja
rorb
mov
jae
and
mov
ret
popf
aad
xchg
aad
mov
adc
fidivl
js
outsl
stc
mov
cmc
xchg
dec
dec
movsb
movb
lds
mov
das
xchg
cmpxchg
pusha
fwait
jecxz
push
add
stos
dec
addl
inc
sti
into
stc
push
repz
push
cwtl
fldcw
ret
sbb
pushl
movsl
dec
test
jbe
jae
mov
xchg
push
ja
imul
nop
mov
cld
aad
dec
inc
jno
push
sub
and
adc
rorl
inc
bound
inc
faddl
jnp
fdivl
pop
enter
push
inc
cmpsl
rorb
fsub
das
sti
rcl
push
inc
scas
jnp
mov
adc
int
xor
aad
cmc
pop
adc
in
fisubs
sbb
fmuls
inc
sbb
mov
xor
mov
ja
ja
inc
shll
enter
add
push
fs
testb
inc
sbb
pop
jge
dec
xchg
dec
push
and
fs
or
mov
jge
mov
jmp
pop
inc
movsb
jnp
jno
mov
mov
or
leave
adc
adc
stc
cs
fwait
sbbb
loopne
add
add
lock
pop
jge
sub
leave
mov
gs
ds
enter
pop
pop
sbb
int3
pop
xchg
fadds
xor
aas
clc
jge
sub
xchg
sahf
cmp
cmpsl
push
cltd
movsl
xchg
das
push
mov
mov
ja
fists
sbb
lock
jno
jbe
push
xchg
cmpsl
cmpsl
push
nop
lock
xor
mov
xchg
mov
je
jns
arpl
fucom
push
or
enter
lods
mov
cmpsl
xchg
mov
cmp
and
test
inc
aam
pop
daa
aaa
pusha
add
nop
and
outsl
sub
mov
inc
pop
cmpsl
mov
call
dec
imul
sbb
mov
pusha
insb
call
xor
aad
sbb
jne
sarl
mov
adcl
jg
push
xor
push
rcll
dec
jb
xchg
mov
lret
push
and
adc
rcl
mov
lea
mov
pop
je
js
into
ds
inc
pop
imulb
shrb
dec
cmp
cmp
std
lods
xchg
push
in
adc
sbb
dec
gs
orl
aaa
cmpsl
adc
int
dec
jecxz
pop
icebp
repnz
sbb
pop
adc
sbb
and
pushf
aaa
cltd
lahf
cmpsl
xchg
dec
popf
ja
cli
sub
jg
inc
push
push
rcrl
orb
xchg
fstl
add
sub
push
arpl
mov
js
inc
mov
cmp
xchg
or
pusha
movsl
into
jo
mov
adc
fwait
mov
data16
or
xchg
shl
push
je
cmp
push
xorl
into
repz
adc
mov
cmp
jbe
jne
mov
push
jo
fwait
pushf
xor
xor
jae
xchg
daa
ljmp
sbb
out
dec
inc
xor
nop
cmpsb
loopne
hlt
cmpsb
cmc
jge
jb
mov
negl
out
cmc
test
jmp
and
pop
mov
aaa
cmp
sbb
int3
jmp
xchg
mov
shll
call
dec
lahf
shll
pop
mov
push
stc
add
popf
pop
cltd
and
cltd
cmpsl
stos
cmp
in
ffree
ror
jge
or
xchg
adc
or
or
nop
push
jecxz
test
pop
es
shlb
xchg
das
loop
outsb
clc
hlt
int
test
xor
pop
jne
fildll
repnz
stos
push
jae
dec
cmp
xor
bound
loopne
adc
push
std
stos
jg
jecxz
stc
inc
mov
push
jle
bound
fsave
dec
shll
rolb
push
lcall
loopne
mov
cmpl
sbb
dec
loop
pop
mov
xor
inc
adcb
mov
mov
pop
sub
in
aas
fdivrs
cld
cmp
xor
repnz
jmp
pop
push
ss
imul
mov
orb
iret
js
sti
push
push
sahf
gs
in
sub
xchg
mov
jmp
mov
mov
push
in
out
mov
orb
cmp
std
mov
outsb
adc
xchg
ljmp
ror
xchg
aaa
mov
push
pop
in
mov
mov
add
mov
mov
add
out
scas
loope
and
mov
gs
dec
in
sbb
cmp
int
adc
shl
test
jg
leave
pop
jmp
dec
mov
out
sahf
xchg
jo
jl
psubusb
mov
push
fdiv
stos
mov
inc
xchg
mov
push
outsl
mov
push
mov
iret
lret
jge
push
mov
lds
mov
jbe
sbb
dec
mov
mov
shll
nop
pushf
sbb
pop
inc
or
cmp
aad
mov
sub
add
cmc
rclb
pop
mov
inc
inc
cwtl
arpl
hlt
mov
push
xor
jg
aad
or
push
scas
out
push
and
cmc
lret
mov
out
mov
js
mov
std
andl
xchg
std
imul
push
or
icebp
pop
jg
sbb
adc
shll
cmpsb
aad
mov
ss
je
push
push
data16
add
xchg
aaa
add
loopne
sub
cmp
xchg
ds
cmpsl
rdmsr
jno
cmc
dec
mov
push
iret
sub
js
mov
rcl
xor
imull
lret
fistpll
jle
or
dec
sub
out
adc
jne
adc
dec
daa
mov
mov
fsubs
sahf
aad
and
lea
fldl
popf
scas
loope
mov
aad
dec
shll
in
sbb
adc
iret
ficoms
enter
jge
shll
jge
ds
and
shlb
fimuls
lret
fwait
das
push
jle
mov
cmpb
jne
mov
jno
dec
sarb
pop
sahf
neg
cmp
and
daa
ljmp
out
call
iret
jp
sub
leave
aaa
jle
mov
inc
cmp
cmp
stos
adc
push
xor
xchg
push
adc
je
inc
rcll
jmp
pusha
mov
testb
roll
cmp
push
loope
jae
iret
xchg
mov
neg
dec
push
inc
sbb
sahf
in
adc
lret
ret
imul
push
mov
ss
adc
jg
outsl
filds
mov
fwait
sub
push
mov
adc
fbstp
push
outsl
mov
inc
out
mov
inc
js
push
aad
mov
push
lea
or
sahf
mov
jmp
je
inc
out
and
into
cmpsl
lret
pop
inc
out
cmpsl
ja
push
mov
dec
mov
pop
xchg
mov
mov
push
dec
sub
and
mov
adc
push
sbb
dec
ret
jge
sub
push
imul
and
das
cmp
ret
les
adc
ret
sub
pop
dec
dec
pop
add
cmp
filds
repz
adc
mov
mov
daa
fidivl
mov
push
inc
mov
pop
xchg
or
xchg
adc
and
adcb
xchg
sbb
mov
mov
dec
xchg
fbstp
xor
mov
pop
push
pop
jb
fdivrl
mov
sub
std
ss
add
jne
sti
sti
push
mov
insb
imul
pop
lock
in
adcl
mov
cmc
pop
cmp
pop
cwtl
xchg
xchg
lds
sub
pop
xchg
mov
lret
push
or
cmp
fcoml
dec
jbe
repnz
push
imul
mov
jno
mov
aaa
jb
add
push
sub
stos
push
dec
adc
push
fucomip
aas
and
inc
lods
cs
add
dec
scas
xchg
hlt
dec
jmp
mov
nop
dec
out
jnp
xor
mov
das
out
sbb
push
shlb
xchg
nop
or
push
shlb
sbb
or
mov
push
lods
pop
adc
sbb
imul
jp
dec
fnsave
push
mov
and
mov
jl
les
rclb
data16
add
xlat
jle
sahf
fildll
jns
rcrl
mov
mov
add
movsb
mov
idiv
pop
push
hlt
pop
push
jo
mov
xchg
call
mov
sub
cmpsl
jle
stos
xorb
push
in
mov
mov
cs
sub
outsb
mov
and
jge
sub
pop
jle
es
sbb
mov
outsl
xchg
adc
aam
ret
aad
subb
and
testb
mov
int
and
push
int3
xchg
mov
lcall
scas
aad
dec
bound
xor
dec
adc
les
icebp
das
mov
mov
mov
ret
nop
pop
pop
pop
mov
xchg
xchg
mov
sub
lods
test
stc
push
cld
ljmp
sub
and
icebp
scas
fistpll
push
bound
das
add
ret
jl
ds
int
enter
lods
pop
nop
lcall
mov
sahf
pop
adc
inc
push
xor
out
jo
mov
test
push
mov
sbb
mov
aam
or
adc
add
jge
mov
mov
ss
data16
repnz
jno
inc
nop
aaa
fs
test
adc
push
sub
mov
xchg
out
dec
pop
sti
xchg
scas
pop
lret
faddl
mov
xchg
cmp
dec
dec
sub
ljmp
fcoml
push
fidivrs
mov
pop
jno
pop
sbb
xorl
dec
sbb
mov
pop
xchg
lds
jle
lea
sbb
movsl
hlt
jp
mov
test
and
push
sbb
lock
bound
inc
in
pop
lret
jg
in
cmpb
jle
into
mov
xchg
adc
addr16
mov
std
in
mov
ds
push
fisttpl
inc
mov
ficomps
adc
dec
lods
shlb
mov
xchg
mov
dec
ret
out
out
xchg
xchg
mov
jno
pop
dec
jb
mov
fnsave
mov
push
into
rorl
addr16
xchg
xor
jno
pop
or
scas
mov
insb
mov
inc
leave
mov
xchg
nop
dec
add
sub
insl
mov
lret
inc
jns
rclb
dec
faddp
ss
in
cmp
xchg
push
mov
out
xchg
adc
cmp
stos
std
stos
fiaddl
aam
imul
rclb
xchg
insl
adc
dec
xchg
mov
jb
lods
out
aaa
lods
into
fstl
cmpsl
int
ja
sub
hlt
popf
mov
mov
movb
fmull
xor
sbb
cwtl
sbb
add
notl
xchg
sub
cmp
sahf
sub
sub
mov
mov
es
daa
inc
stos
scas
lock
pop
xchg
and
rolb
cmc
fwait
mov
insl
jo
xchg
push
xchg
and
pop
push
pop
push
pop
imul
xor
nop
cmpsb
loope
pop
movsl
outsl
out
out
pop
insl
push
stos
scas
ja
jmp
xor
sbb
pushf
sahf
mov
lods
test
stos
adc
cmp
sub
das
adc
dec
jmp
ret
fimuls
inc
mov
mov
xchg
xchg
out
or
into
cmpsl
in
lds
mov
call
das
cmc
sahf
movsb
cltd
push
lods
xchg
stc
dec
push
cltd
out
add
rclb
call
push
gs
xor
inc
in
test
stc
int3
les
jnp
gs
jmp
mov
pusha
or
add
mov
out
out
mov
in
jl
xor
imulb
scas
xchg
push
je
clc
xchg
xchg
movsl
mov
dec
dec
hlt
sbb
pop
or
insl
pop
ds
gs
cmp
stos
daa
mov
frstor
mov
xchg
adc
inc
sahf
out
jl
mov
and
or
repz
lods
inc
bound
ficoml
jmp
mov
int
outsl
lods
mov
arpl
pop
into
or
ficoms
nop
pop
stc
je
scas
fdivrs
nop
pop
mov
inc
mov
mov
scas
int3
push
cltd
pcmpeqw
imul
mov
inc
mov
fldenv
in
mov
icebp
rcll
sarb
outsb
push
and
imul
fwait
jp
push
add
xchg
int3
stos
scas
pop
fbstp
sahf
xor
leave
ja
rorl
push
pop
dec
xor
cli
aam
inc
jle
pusha
push
push
nop
mov
or
ret
in
fbstp
inc
mov
adc
jmp
sub
xchg
cmc
outsl
push
and
mov
jle
adc
scas
jge
sub
add
sub
inc
aad
insl
push
mov
imulb
xchg
movsb
mov
int3
adc
outsl
mulb
stos
loope
mov
ja
ja
mov
push
adc
mov
icebp
inc
xchg
mov
mov
nop
mov
push
inc
lock
ja
mov
cltd
cmpsl
sub
jl
adc
fcmovnb
xlat
inc
fsubrl
div
enter
push
push
push
mov
sbb
bound
clc
xchg
call
push
dec
jns
fistpl
cmpsl
outsb
sub
repnz
push
pop
fdivl
sbb
movsb
aaa
fwait
push
mov
ja
imul
xor
loopne
push
dec
push
xor
lea
mov
mov
sub
pop
xorb
rcr
das
inc
aaa
mov
push
pop
xchg
mov
fisubs
lods
std
mov
xchg
push
jae
stos
xchg
lahf
rorb
mov
sbb
les
pop
jmp
sub
ret
pop
jmp
dec
push
mov
icebp
push
jnp
sti
mov
pop
fidivrl
jmp
mov
mov
rcll
inc
xchg
or
pop
test
fldenv
subb
add
sahf
leave
imul
ss
movb
ljmp
fnstenv
mov
out
xchg
in
adcl
xchg
mov
sbb
stos
sbb
lret
pop
inc
out
push
inc
jnp
push
xchg
pushf
sbb
cmp
xchg
arpl
dec
into
mov
incb
test
mov
ljmp
mov
dec
and
jl
fdivl
lcall
push
inc
xor
cmpsl
ret
adc
lock
push
in
mov
lea
idivl
dec
imull
sti
sub
nop
mov
dec
adc
push
faddl
push
lods
inc
fnstenv
test
mov
ss
pop
fxch
sbb
adc
daa
xor
std
cmp
or
adc
xchg
inc
mov
mov
in
xor
jb
push
push
jb
sub
xor
popl
js
in
lds
lahf
pop
push
add
js
shll
aas
das
push
mov
arpl
cmc
dec
in
and
adc
xor
dec
aad
ret
or
inc
inc
aad
ds
repnz
dec
aad
fcmovnb
xchg
fcoml
sub
fs
aas
aas
cmp
add
ljmp
mov
decl
mov
adc
and
loope
lea
or
pop
fnstenv
in
out
adc
mov
sbb
pop
movsl
xchg
push
loope
inc
xchg
movsb
jnp
popa
mov
mov
pop
daa
push
add
cmp
mov
adc
ja
mov
and
inc
adc
push
lahf
jnp
test
push
inc
je
xchg
ss
push
nop
aaa
inc
cmp
cltd
cmpsl
cmp
add
jo
lret
xchg
nop
and
or
in
inc
ret
ret
cmc
das
push
fxch
lods
mov
push
pop
aaa
sub
xor
lock
mov
mov
mov
loopne
push
stos
inc
enter
adc
sub
xchg
int3
iret
and
or
mov
mov
test
lock
mov
dec
les
lea
icebp
pop
sub
stc
adc
or
jmp
mov
mov
mov
mov
inc
push
idivb
pushl
adc
in
adcl
js
sbb
pop
in
std
por
dec
mov
xor
js
ja
push
adc
mov
xor
or
mov
mov
xchg
mov
dec
es
mov
cmp
add
push
nop
mov
xchg
mov
push
fsubr
push
shlb
imul
inc
int
inc
inc
scas
std
cltd
sub
sbb
stc
push
sbb
out
xlat
jnp
lock
mov
inc
jl
jae
fsubrl
push
dec
out
jo
mov
popf
push
add
in
fmuls
pop
add
push
ret
out
insb
sub
mov
out
xchg
and
sub
leave
js
in
mov
pop
adc
sub
jge
cli
add
ret
dec
mov
out
mov
jae
lret
sub
std
xor
xor
push
pop
nop
or
testl
push
xchg
jp
lret
sbb
test
xor
pop
xor
xor
nop
mov
shll
xor
sub
push
rcl
inc
hlt
test
dec
xchg
fld
lock
mov
outsb
xlat
jecxz
adc
jle
js
jb
jb
jae
cmp
cmpsl
int3
push
lret
hlt
pop
xor
fdivl
mov
jmp
hlt
xor
add
jnp
fcompl
idiv
jae
aad
mov
push
cmpsb
cmc
push
lods
das
ljmp
pop
push
xchg
faddl
jmp
stos
jge
adc
lods
adc
mov
mov
pop
aam
mov
inc
scas
push
and
sub
xchg
js
loope
repnz
jl
mov
out
sbb
int3
pmaddwd
cmp
sub
nop
pushl
int3
cli
xor
icebp
mov
nop
gs
outsl
int3
iret
mov
sub
xchg
out
fildll
mov
jl
inc
stos
mov
add
aad
imul
rorb
sbb
dec
fwait
repz
jbe
inc
stos
dec
sub
inc
adcl
push
xor
fisttpll
hlt
stc
adc
sub
add
int3
mov
sub
adc
sbb
lret
mov
mov
pop
cpuid
mov
mov
mov
js
pop
sahf
idivb
mov
and
sub
xchg
std
push
fstpt
orb
adc
in
push
dec
mov
mov
clc
adc
mov
jecxz
inc
jl
xor
mov
into
jne
push
fildl
inc
sbb
mov
push
nop
mov
hlt
xchg
inc
dec
push
nop
loopne
or
in
enter
push
mov
lods
sbb
repz
xor
mov
jle
scas
mov
int
xlat
scas
int3
aaa
imulb
data16
test
jne
cmp
movsb
orb
shr
ss
imul
xchg
lods
xor
and
test
lds
jg
xor
es
and
lea
cmpsl
nop
jmp
out
xor
cmp
aad
lahf
nop
mov
cmp
test
lret
data16
ja
std
adc
or
cwtl
sbb
jae
nop
inc
xrelease
call
mov
mov
outsl
fisubl
mov
scas
outsb
gs
ret
jmp
clc
jmp
pop
pop
push
sub
cmp
les
mov
aad
imul
xchg
mov
dec
jl
mov
jmp
test
add
lahf
xchg
fld
outsb
mov
xor
xchg
push
xchg
repz
mov
cld
mov
inc
shlb
or
push
sbb
mov
inc
and
clc
jnp
mov
aam
sbb
push
inc
xor
sbb
scas
jge
sbb
leave
jecxz
std
jle
xchg
lods
cltd
dec
mov
ret
je
cmc
mov
nop
iret
stc
lods
add
mov
int3
ret
pop
and
not
push
jmp
pop
test
push
lea
loop
xchg
fisubrs
andb
daa
ds
push
aas
cmp
sbb
sub
daa
jns
movsl
or
cmp
into
pop
jno
jbe
jg
enter
cmpsl
mov
inc
enter
mov
dec
add
sbb
lods
sub
pop
dec
fisttps
inc
dec
xor
mov
mov
sub
add
adc
into
sbb
pop
movsl
ss
pop
addr16
scas
and
mov
subb
push
hlt
jp
nop
lods
cmp
aas
fwait
ret
into
fwait
sub
sub
inc
fwait
xchg
push
sub
xor
out
xchg
lret
in
fbld
ffree
addr16
in
sti
aas
add
add
test
out
pop
push
sti
shrb
shrb
fs
shlb
dec
aaa
pop
rolb
push
fadd
cwtl
dec
jo
xor
pop
dec
dec
adc
and
xchg
mov
daa
aaa
pop
jge
test
mov
pop
pop
cld
icebp
jne
mov
daa
incl
or
and
sub
pop
fs
sbb
lea
mov
add
xchg
jl
pop
ret
inc
pop
xor
pop
jno
pop
pop
mov
push
dec
ljmp
repz
jge
jno
repz
int3
test
cmpsb
xchg
or
stos
movsl
out
fs
sub
int
sahf
or
imul
movsl
mov
gs
xchg
jg
es
aad
testb
in
xor
inc
dec
cmpsl
mov
or
pusha
fcmovu
gs
push
xchg
inc
pop
sbb
call
je
imul
aaa
mov
aam
xchg
mov
mov
shlb
push
iret
enter
pop
into
mul
mov
add
adc
lret
rcl
enter
cmpsl
sub
lds
xchg
mov
ret
lret
dec
xchg
sub
sbb
cmp
add
repnz
enter
outsl
test
mov
lea
pop
lods
fisttps
jae
loop
mov
dec
dec
loopne
pop
jns
aaa
movsb
vpsraw
je
fiaddl
inc
test
mov
aad
shlb
xorl
inc
lods
dec
enter
stc
dec
pop
das
xchg
push
inc
mov
mov
movsl
int
aad
lret
add
mov
jnp
mov
mov
ljmp
loope
shr
cmp
fidivs
xor
mov
cmp
movsl
pop
pop
cmpsl
into
push
repz
js
nop
cwtl
mov
shl
les
stos
push
scas
out
mov
xchg
jno
inc
sahf
cs
pop
inc
aaa
xchg
lock
sub
movsb
xor
es
aas
sbb
aad
sbb
xor
das
lret
ds
mov
bound
or
ja
jo
mov
in
lcall
les
scas
and
lds
mov
imul
pop
and
shl
cmp
loope
jl
lcall
mov
sub
push
jb
lods
icebp
adc
ss
mov
icebp
imul
adc
lods
mov
pop
iret
mov
mov
ficoml
aam
in
sbb
xor
subl
lods
daa
test
cmp
mov
jecxz
jp
and
sbb
ret
out
pop
xor
sub
in
movsl
mov
pop
jnp
xor
mov
xor
adc
mov
ljmp
push
movsl
jp
mov
xchg
sbb
in
inc
jg
rcl
sbb
xor
pop
scas
adc
nop
mov
mov
aaa
scas
iret
nop
xor
das
mov
fsubrl
pushf
rorl
std
sbb
pop
arpl
and
sbb
out
push
xchg
subl
sahf
fistl
pop
jb
in
test
adc
or
sub
pop
mov
stos
sbb
mov
jle
cmp
xor
loop
mov
mov
std
scas
in
cmp
mov
push
jmp
sub
mov
int
xor
push
sub
mov
out
movsb
cmp
aaa
mov
popa
mov
js
rclb
out
and
addr16
std
inc
xchg
movsb
inc
mov
aas
push
xchg
movsl
cmp
add
sarl
hlt
push
inc
push
std
sub
push
xchg
adc
pop
xlat
push
imul
pavgw
xchg
xchg
mov
jmp
xor
aad
hlt
pop
out
arpl
stos
aas
out
fidivrl
daa
cmpsl
pusha
into
aas
mov
pop
repz
dec
mov
movsb
xchg
nop
dec
das
call
inc
jle
jbe
pop
mov
mov
lds
js
inc
je
mov
hlt
xor
mov
sbb
fldt
das
push
fnstcw
pop
in
mov
scas
mov
xchg
xchg
dec
div
mov
leave
xchg
imul
mov
outsb
ja
imul
jae
jg
pop
push
inc
aam
ds
scas
repz
nop
iret
add
jmp
mov
repz
leave
ljmp
inc
stos
xor
daa
push
mov
movsl
jne
push
push
es
cmp
addr16
push
jbe
insl
pop
movsl
mov
int3
cmc
xchg
or
gs
mov
aam
jno
and
inc
in
idiv
adc
dec
adc
push
pop
adc
cmp
mov
mov
ja
and
dec
test
iret
ljmp
inc
dec
test
xchg
sub
push
imul
xchg
je
fadd
mov
jl
imul
in
in
jo
mov
out
aaa
mov
ficomps
push
inc
lods
add
sub
nop
fidivrl
adc
mov
adc
or
sti
sbb
push
dec
mov
jb
add
push
mov
out
sti
jg
int3
mov
pop
stos
sbb
or
mov
xchg
push
xorl
sti
fdivp
movhps
push
xchg
insb
orb
ffreep
icebp
iret
mov
push
push
arpl
orb
push
xchg
and
cld
inc
nop
adc
mov
clc
in
rcl
jnp
jo
mov
inc
nop
enter
scas
push
movsl
and
xorl
add
jmp
pop
fstpt
dec
pop
std
pushl
mov
sub
orb
inc
mov
dec
je
sbb
imul
push
mov
adc
mov
fs
sub
lcall
xchg
pop
jnp
ret
leave
lcall
dec
push
push
jo
jo
into
stos
out
jmp
sbb
push
loope
int
test
out
jnp
cld
push
sub
mov
push
movsl
and
xor
aaa
sub
xchg
push
in
sahf
fsubrl
jl
xor
mov
sbb
sti
xor
notb
xchg
push
xchg
inc
mov
adc
push
lds
jbe
mov
xor
nop
sarl
and
in
mov
pop
xor
rclb
mov
sbb
lret
mov
mov
lds
imulb
cmp
ret
pop
add
jmp
mov
jne
cmp
xchg
nop
cmp
sbb
into
mov
xor
mov
outsb
sbb
xchg
jno
pslld
cmp
sar
add
stc
ret
dec
into
stc
add
sub
adc
push
sbb
push
adc
shl
mov
and
inc
push
sub
mov
or
icebp
push
sbb
mov
sub
and
insb
dec
xchg
and
repz
mov
scas
shll
mov
xadd
js
push
das
ret
out
sbb
nop
sub
jnp
jno
mul
and
cltd
or
arpl
push
test
jne
scas
rorl
popa
push
inc
xor
outsb
dec
pop
or
jle
inc
cmp
sub
orl
adc
repz
scas
push
sbb
mov
add
mov
push
add
sbb
mov
jo
frndint
mov
and
div
inc
or
cmpsl
mov
sub
pop
incb
pop
pop
xor
in
pop
cmp
imul
dec
xchg
pop
sub
cmp
mov
dec
daa
dec
js
cmp
sbb
dec
dec
std
js
loop
lods
aaa
xchg
and
gs
scas
pop
push
xor
lret
mov
cmp
dec
leave
sub
xchg
iret
sahf
xor
frstor
addr16
leave
mov
or
add
cmp
cmp
lahf
shl
out
pushf
mov
test
ja
call
in
xchg
push
enter
out
xor
in
nop
out
inc
pop
jo
aad
dec
jnp
mov
repz
stc
mov
ja
lods
sbb
and
jmp
pop
xchg
dec
or
sub
mov
sbb
mov
stos
lock
sbb
lret
push
adc
imul
add
mov
icebp
nop
shrb
movsl
pop
sarl
ret
sbb
push
pop
mov
fcmove
and
stos
adc
in
shrb
dec
in
mov
mov
jne
jecxz
arpl
into
shl
jmp
xchg
cmp
adc
sub
and
inc
jp
lret
imul
lahf
sbb
loope
xchg
les
xor
fstps
mov
cmp
test
mov
push
stos
mov
fwait
sub
jg
xor
xchg
adc
inc
xchg
jnp
cmp
bound
lret
jne
mov
xchg
mov
dec
and
dec
test
fmull
pop
sbb
jle
or
add
pop
inc
jmp
and
adc
repz
lea
mov
mov
mov
pop
aaa
stos
icebp
adc
push
lret
lea
xor
push
xor
sub
scas
xchg
lret
xor
stos
jmp
pop
pusha
and
add
ret
pop
nop
xor
cmpl
nop
pop
jge
lods
in
rcr
mov
jo
repnz
mov
jg
insl
lds
subps
pop
stc
repz
test
nop
rclb
mov
cmpsl
lea
or
pop
pop
xchg
mov
dec
iret
mov
movsl
rorb
xchg
lret
add
aas
xchg
mov
out
mov
dec
sub
out
movb
xchg
push
dec
mov
push
push
sub
inc
sahf
inc
hlt
pop
mov
sub
ret
pop
aad
dec
mov
in
daa
int
jmp
pop
dec
repnz
subl
pushl
xchg
dec
cmp
pop
arpl
popf
or
loope
int
xchg
xchg
cmp
aad
xchg
stc
aaa
repnz
push
mov
add
jecxz
inc
inc
and
aam
mov
scas
ret
sub
adc
aas
xor
cs
mov
lahf
sahf
xchg
scas
lea
pinsrw
pop
and
testl
adc
pop
jbe
sub
gs
mov
pop
shlb
pop
das
inc
jmp
movb
jge
je
jecxz
dec
into
pop
test
test
push
fisttpl
in
sahf
lret
push
ja
cld
mov
scas
addb
mov
or
mov
dec
aaa
push
mov
lret
xchg
das
aad
repz
mov
ror
repnz
dec
roll
stos
in
test
fdivr
push
arpl
mov
repz
xchg
xchg
jecxz
iret
int
jae
out
pop
cmpsb
add
cmpl
leave
js
add
movsl
mov
add
test
mov
mov
sbb
adc
adc
push
xchg
mov
dec
cmp
xorl
ljmp
xsaveopt
nop
xchg
std
jnp
dec
loopne
and
popf
mov
mov
shll
sbb
ret
stc
lock
imul
mov
adc
xor
pop
cmpb
movsl
repnz
loop
jns
mov
mov
insb
push
ret
mov
test
dec
add
jmp
in
lods
setbe
xchg
mov
aas
jl
xchg
inc
sbb
test
shlb
leave
pop
test
fildll
cmp
push
pop
scas
fmuls
fisubs
pop
aas
mov
sbb
idivb
sbb
xorps
mov
fldenv
fldenv
mov
xchg
add
dec
jle
or
ss
mov
xchg
sub
adc
inc
ljmp
sbbb
jnp
push
push
leave
add
or
adc
and
sub
jg
xor
lds
movsl
unpckhps
or
sahf
push
mov
bound
in
mov
nop
inc
adc
hlt
js
mov
pop
bound
mov
arpl
lods
adc
jo
xor
jle
dec
pop
lret
iret
nop
aam
subl
out
push
pop
sbb
or
stos
mov
pop
xchg
data16
mov
popf
cli
decl
xchg
movsl
push
adc
shrl
es
pop
lds
jno
cmp
fbld
or
dec
push
lea
out
jae
aaa
fisubrl
movsb
out
flds
jge
lahf
dec
sub
jbe
xor
inc
xor
xchg
xchg
fistl
mov
lret
xchg
mov
movsl
out
aas
mov
mov
add
sbb
pop
sub
dec
mov
movsl
ljmp
mov
add
push
sbbb
mov
push
mov
inc
jns
stos
pop
pop
inc
cmp
mov
mov
daa
xor
ret
sub
sbb
inc
mov
xchg
push
or
add
or
mov
and
mov
push
mov
insb
ret
push
dec
pop
sub
inc
inc
scas
or
jnp
fwait
inc
xlat
sbb
lea
bnd
sahf
repz
push
xchg
or
das
pop
mov
inc
add
push
and
dec
rcl
mov
xchg
pop
stos
mov
mov
rcrb
aas
pop
jne
shrl
adc
ja
dec
xchg
nop
addb
fisttps
xchg
push
test
xchg
pop
insl
ret
push
jp
lahf
pop
sub
vmovapd
pop
adc
mov
into
push
mov
icebp
jns,pt
in
cmpsl
cmc
lahf
mov
xchg
mov
xchg
fucomip
mov
pop
int
xchg
xchg
dec
int
mov
sbb
fmul
xorb
test
jecxz
mov
leave
test
dec
xlat
mov
fbld
push
int3
jmp
clc
out
lods
iret
rolb
xchg
inc
dec
mov
pop
jns
nop
mov
stc
test
push
sbb
dec
xchg
movsl
add
sahf
mov
dec
incl
shlb
adc
xchg
jmp
ficoml
add
push
xor
subb
xchg
push
xchg
cmc
nop
xor
push
mov
mov
mov
inc
mov
ret
cmpsl
loop
or
add
imul
shll
sbb
test
fst
xchg
mov
pop
xchg
push
dec
dec
mov
lret
pop
push
push
xor
lods
pop
cmp
aad
test
les
fcoms
popa
nop
jo
sub
mov
or
dec
jae
shlb
adc
jns
iret
jecxz
sub
imul
push
add
mov
loopne
xor
add
mov
popa
nop
jno
pop
imul
lods
cmp
xor
enter
je
lods
mov
xor
pop
repnz
dec
jnp
outsb
rorl
insl
mov
or
out
or
lds
aaa
fsubl
lods
xor
jp
fldt
sbb
dec
dec
mov
push
xchg
stos
insl
fdiv
mov
std
xor
shl
iret
or
and
ret
aam
das
sbb
push
adc
adc
push
ljmp
jg
or
xchg
icebp
jns
nop
stos
xchg
scas
adc
mov
out
mov
gs
and
xchg
lea
ficoml
adc
mov
or
push
cmp
add
mov
int3
mov
stos
addl
adc
pushf
dec
xchg
xchg
clc
dec
cltd
cmp
pop
mov
xchg
xchg
mov
jecxz
sub
js
lock
dec
jp
pop
aad
nop
inc
mov
mov
aam
sub
shrb
jbe
mov
xchg
push
jne
jb
pop
jge
fsub
lods
pop
scas
imul
xor
mov
cmp
idivb
std
push
fdivl
sbb
scas
mov
inc
jne
jle
out
dec
push
dec
imul
and
mov
sub
pop
pop
insl
bound
push
or
xor
push
gs
aam
sub
cmp
add
nop
pop
stos
out
ljmp
adc
ljmp
std
sahf
pop
jecxz
cltd
inc
enter
in
rcr
decl
mov
xor
lods
inc
mov
jle
jg
cmp
cmp
pop
nop
jl
or
scas
test
sbb
ficompl
test
dec
roll
repnz
mov
in
xor
adc
sub
mov
cmp
inc
cmp
adc
dec
push
jnp
lret
and
gs
inc
gs
stos
fs
and
sbb
dec
fmuls
aas
ret
xor
adc
pop
mov
mov
fmull
roll
push
xchg
dec
add
mov
mov
stos
std
mov
xchg
sub
sahf
mov
in
sub
inc
cmp
xor
sbb
outsl
iret
nop
ja
jae
sub
aaa
jp
add
pop
xchg
mov
sub
jge
sbb
fsubr
mov
scas
add
adc
inc
imul
xchg
sbb
or
pop
sub
movsb
xchg
adc
and
pop
inc
test
nop
scas
xchg
or
push
dec
scas
mov
pop
test
mov
mov
mov
ret
mov
pop
and
dec
adc
inc
jnp
dec
and
mov
aaa
sbb
ja
mov
sub
push
mov
test
or
jp
sub
cmp
nop
xor
movsl
aas
jg
in
mov
jecxz
insl
xchg
push
aad
aad
mov
inc
xchg
ss
in
iret
notb
lds
dec
mov
sti
xor
inc
gs
jbe
push
test
ja
hlt
adc
inc
add
inc
sahf
adc
addr16
test
or
dec
push
ds
daa
out
out
notb
pop
ja
push
xchg
or
sahf
loopne
scas
jecxz
pop
addr16
lret
leave
mov
scas
add
in
jg
lods
scas
cld
test
shl
cltd
iret
loop
inc
mov
push
mov
xchg
push
mov
pop
jecxz
dec
adc
aas
mov
and
push
mov
mov
repnz
ja
xchg
lds
mov
test
push
add
fcoms
inc
adc
push
and
adcl
jecxz
ffreep
mov
fadd
mov
cmp
sti
sub
das
pusha
xchg
lock
lea
sbb
rorl
test
jle
mov
jo
arpl
outsl
jmp
outsl
repz
push
out
in
jne
push
fwait
cmpsb
push
fildll
js
jb
imul
nop
cltd
ret
cld
push
and
aam
mov
cltd
aad
mov
rcrl
sub
adc
push
mov
mov
idiv
jbe
pop
aaa
add
lahf
mov
cmp
shr
push
jg
insb
and
lds
leave
rorb
add
cltd
mov
jno
sub
iret
xor
outsl
adc
mov
sub
jmp
xchg
fwait
mov
adc
add
xchg
xchg
lods
imul
aas
movsb
aad
xor
dec
in
xchg
jo
push
mov
xor
cmpsl
dec
xchg
mov
repnz
sbb
jne
xor
movsl
inc
cmpb
mov
fstpl
mov
inc
xchg
mov
cmpsl
push
stos
adc
mov
cli
test
xor
js
jecxz
adc
std
sub
push
in
adc
lret
adc
mov
jo
dec
push
adc
das
icebp
js
notb
cmp
xchg
lret
mov
mov
xor
rcr
xor
pop
cmpsl
aaa
pop
sub
das
jo
movl
mov
or
jno
bound
out
iret
inc
jnp
iret
lret
push
std
lods
mov
test
push
adc
test
adc
int
in
mov
rcrb
cmpb
popl
sub
ss
jp
aaa
mov
adc
pop
cmp
mov
ret
pop
xchg
aaa
or
ja
xchg
adc
je
cltd
pop
scas
aad
cmp
mov
sti
cmp
cmp
stos
cli
aad
fmuls
icebp
and
outsl
push
movsl
push
and
inc
lret
lods
dec
jle
jne
ret
mov
pushf
push
imull
test
aam
mov
push
lret
scas
add
adc
sbb
mov
jo
stc
enter
dec
orl
dec
dec
cld
push
mov
jno
push
mov
arpl
xchg
js
or
cmpsl
insl
idivl
xchg
push
or
hlt
sbb
xorl
adc
xor
clc
cmpsb
aad
ja
push
xor
cmp
scas
lcall
lods
aas
mov
xchg
lret
inc
xchg
cmp
mov
jo
pusha
push
and
inc
shll
mov
xor
jecxz
dec
mov
out
adc
imul
jo
pop
sahf
mov
inc
test
enter
pop
jae
pop
jne
iret
lds
sbb
sar
sbb
call
cmp
lods
aad
adc
iret
mov
call
mov
mov
pop
fcmovne
xchg
popa
aam
std
cltd
jecxz
mov
sbb
or
pop
out
adc
mov
mov
dec
scas
sahf
stos
out
jl
aas
cld
mov
jmp
xchg
faddl
add
inc
rcl
sub
mov
push
jg
mov
mov
pop
sahf
aad
test
xor
add
fwait
aad
std
dec
lret
and
and
xchg
movsb
mov
dec
ret
fisubs
adc
mov
adcl
dec
movsb
mov
shrl
sbb
lret
mov
dec
xchg
pushl
sbb
lret
lret
popa
leave
inc
das
push
push
rcl
inc
pop
xchg
dec
shll
jp
movsl
lret
push
insb
sub
loope
xchg
mov
cli
fs
xor
lcall
movb
or
dec
cmpsl
xor
cmpsl
repz
in
pop
sahf
in
jecxz
adc
jmp
or
jnp
mov
repz
xchg
popf
enter
mov
ljmp
or
fsubrp
into
inc
ret
lahf
in
mov
pop
push
decl
lcall
push
sub
mov
stos
dec
mov
fcmovb
lret
ja
repnz
pop
sbb
xchg
es
scas
scas
rolb
scas
xchg
mov
sub
aaa
cmp
sbb
cld
dec
inc
scas
mov
or
out
scas
mov
out
ret
std
xchg
mov
mov
test
mov
xchg
ja
std
cltd
mov
inc
xchg
adc
lea
iret
adcl
movsl
push
dec
idivl
cs
out
adc
ja
int
inc
roll
ja
lods
jns
push
shl
pop
jl
iret
or
scas
xchg
cmp
enter
adc
jmp
cmp
mov
fistpl
lahf
lock
idiv
out
xor
xchg
xchg
rcll
lahf
or
sarl
mov
dec
pop
in
adc
lahf
adc
lret
sahf
lock
js
subb
das
lods
jbe
push
test
call
movsl
sbb
inc
js
mov
aaa
mov
xchg
mov
jns
push
dec
push
cmp
adc
lods
mov
lock
mov
mov
pop
mov
adc
out
push
insb
cmpsl
arpl
cld
ss
cmp
repnz
xchg
loopne
xor
lret
aad
or
adc
popl
fs
jne
xchg
lea
add
xor
call
sbb
pop
nop
pop
mov
sahf
imul
sub
mov
jmp
xchg
push
xchg
rclb
mov
test
adc
arpl
ja
pop
stos
mov
pop
push
ret
mov
fcomps
pop
pop
push
iret
xchg
xchg
shrb
lock
jne
jecxz
into
adc
int3
mov
ja
push
ret
dec
or
and
jb
xchg
daa
test
aad
movsl
int
popf
sarl
aad
mov
and
das
mov
outsb
inc
jge
fstl
dec
push
push
daa
int3
fbstp
xchg
mov
nop
in
dec
ja
mov
ret
fsubrs
test
repnz
dec
adc
imull
or
jbe
push
sti
mov
push
xchg
rorb
sub
mov
in
jg
sbb
inc
xchg
push
cs
daa
cld
js
mov
dec
push
and
xchg
xchg
dec
dec
incb
call
and
rolb
push
pop
cmp
lea
add
imul
xchg
out
add
xchg
jecxz
lcall
sbbl
shll
testb
jp
pop
push
shl
sub
aad
outsb
xor
adc
cmp
jnp
pop
jg
xchg
mov
adc
xchg
lret
push
nop
xchg
jne
dec
jecxz
sbb
adc
add
dec
idivl
dec
cmc
jb
cmpsb
js
mov
rcll
sub
in
movsl
out
mov
faddl
push
hlt
int
in
cmc
push
nop
clc
int
mov
hlt
and
das
call
ljmp
jp
dec
xor
adcl
ja
stos
sbb
dec
aas
push
fildll
pop
cmp
push
clc
xchg
xchg
push
cmpsb
jb
inc
inc
into
xchg
call
xchg
sahf
hlt
lret
gs
popf
in
aad
fildll
fcoms
cmc
jecxz
push
xor
xchg
gs
and
aad
push
push
adc
data16
or
push
test
jb
pop
xorb
js
aad
aam
cli
jnp
mov
sbb
jge
iret
xor
nop
mov
movb
das
addr16
xor
adc
test
xchg
xor
and
dec
mov
mov
and
xchg
push
cs
mov
insb
push
sub
fsubs
sub
lock
mov
data16
mov
dec
subl
sahf
mov
out
movsl
mov
pushf
movsl
je
fsub
pop
sub
cmp
imul
inc
iret
js
pop
stos
add
inc
or
add
fcoml
repnz
cmp
sti
fidivs
mov
ss
repz
xchg
fucom
pop
sahf
test
outsb
jmp
ffree
test
cmc
sbbb
into
ficompl
jg
xchg
fadds
cmp
xor
dec
jecxz
ret
lret
push
ljmp
call
out
and
sbb
daa
nop
movsb
inc
push
sub
and
add
aaa
stos
lods
loopne
ret
nop
subb
xor
negl
icebp
cli
loopne
std
xchg
lcall
movsb
mov
pop
outsb
jg
in
pop
inc
stos
movsl
push
test
ja
scas
inc
add
push
sahf
fldt
aam
or
shrl
push
aas
cld
repz
sti
xlat
mov
adc
rcrb
rorl
lret
sub
pmaddwd
mov
lock
lret
pusha
xor
pop
and
and
fidivs
shlb
aad
cmp
mov
inc
roll
rorl
mov
push
jae
repz
adc
outsb
pusha
cmc
aad
dec
mov
mov
cmp
sahf
push
dec
sub
int
fdivrs
sub
int3
cmpsl
mov
js
fnsave
add
add
adc
roll
push
mov
mov
aas
fildll
xchg
push
cld
je
ja
shl
lcall
xor
push
inc
xchg
mov
xor
cmpsb
addr16
cmp
xchg
sarl
jmp
push
push
pop
xchg
or
stos
or
mov
mov
sbb
and
sbb
imul
mov
ret
cmp
test
int
pavgw
pop
adc
pop
inc
std
scas
ja
xchg
lahf
jnp
notb
dec
mov
xchg
iret
out
outsb
or
std
fcomps
aas
xchg
mov
xchg
ficomps
aas
arpl
in
xchg
shlb
lods
push
mov
scas
imul
movsb
mov
lea
xchg
cmp
fs
xor
lahf
in
mov
push
sub
sbb
push
cmp
cwtl
xchg
test
cmc
jb
imul
xchg
adc
dec
cs
mov
add
addb
push
outsl
lret
jo
outsl
cmp
filds
xchg
mov
xchg
ret
mov
fsin
jns
ret
pop
mov
gs
jge
rclb
dec
fbstp
decl
push
loope,pn
add
stos
lcall
inc
mov
leave
add
jmp
and
push
inc
pop
inc
push
jle
fbld
js
out
adc
xor
mov
pmaddwd
lods
in
jo
nop
ror
mov
icebp
cmp
xchg
push
loope
inc
mov
in
jae
sub
aad
ljmp
ss
add
dec
or
mov
jle
push
lods
xlat
fnstsw
cmc
jle
cli
dec
mov
imul
das
lret
sub
fcomi
add
sbb
mov
xor
fsubrl
in
scas
std
sbb
sbb
hlt
or
xorb
jno
jle
or
add
mov
sub
pop
adc
stos
test
cmpl
add
popf
jle
test
je
mov
mov
dec
and
inc
fldenv
cwtl
test
out
nop
in
add
lahf
adc
ljmp
add
dec
pop
xchg
fucomp
pop
bound
inc
adc
push
stos
or
cmc
push
mov
test
xchg
jl
aad
mov
pop
push
fldl
jae
das
icebp
push
pop
shlb
scas
xor
push
xchg
mov
xchg
push
cmp
divb
cwtl
add
sahf
outsl
jecxz
mov
mov
mov
cs
or
jnp
dec
imul
cmpl
mov
aam
jecxz
or
pop
pop
push
dec
call
std
pop
shl
flds
dec
jge
sub
loope
popf
in
jp
cmp
and
mov
ret
push
xchg
js
ja
and
mov
push
xchg
jecxz
out
adc
inc
jmp
inc
fs
xlat
std
repz
inc
add
into
sub
xor
lret
movntq
sarl
into
aad
xchg
sbbl
xchg
mov
jbe
std
lret
xchg
sub
pop
lea
dec
xor
cmp
inc
pop
sbb
les
lds
ret
jmp
lret
iret
std
testl
push
daa
test
jb
pop
cmpsl
js
sti
mov
xchg
scas
mov
fdivrl
inc
loopne
mov
xor
mov
inc
pop
sahf
xchg
mov
test
xor
decl
lds
xchg
and
hlt
gs
cmpsl
xchg
in
dec
enter
mov
dec
add
add
pop
lds
nop
in
xor
aam
fists
jle
ja
pusha
mov
inc
fildll
adcl
mov
andl
sub
addr16
lret
jns
jge
adc
inc
dec
mov
and
cmc
fstpt
outsb
ja
enter
lret
push
ds
mov
xchg
sar
das
andl
movsb
dec
inc
nop
xchg
inc
dec
movsl
andb
xchg
out
jp
inc
mov
add
xchg
jge
sub
xor
fnsave
cmpsb
scas
iret
adc
fistpll
call
xchg
push
xor
mov
or
mov
inc
rolb
xor
ja
pop
test
xchg
int
je
mov
lret
mov
inc
cltd
xor
add
xchg
adc
sbb
jno
imul
xchg
data16
scas
xor
mov
ja
mov
inc
aas
mov
fidivs
rcr
jnp
sti
into
xchg
pop
jle
cmp
imul
push
dec
inc
push
push
mov
ds
jl
mov
pop
jl
sub
fbstp
cli
cmp
lock
sub
add
and
ja
shll
fnsave
xchg
inc
rorl
adc
sbb
dec
jle
jmp
inc
and
push
sahf
inc
push
pop
es
xchg
xchg
mov
das
aaa
dec
mov
into
xchg
into
push
dec
dec
into
sahf
dec
fmulp
roll
out
mov
mov
pop
xchg
in
xchg
scas
fisttps
xchg
adcb
daa
mov
nop
xor
js
vmovdqu
test
cmpsl
xchg
ret
dec
add
mov
cmp
mov
test
shrl
or
sbb
movsb
mov
xchg
xchg
push
mov
pop
xorb
js
sub
outsl
lret
rcrl
push
inc
pop
jb
jge
stos
pop
shll
stos
clc
xorb
outsb
jnp
dec
add
je
ficompl
or
or
ret
cmp
aam
sub
mov
push
xor
cld
scas
das
sbb
sub
ret
je
in
mov
or
push
jg
aaa
add
push
inc
int3
and
xor
jge
mov
mov
sbb
or
jo
lcall
call
test
sub
adc
xchg
lret
hlt
xchg
lds
cltd
push
aaa
nop
mov
xor
movsl
scas
sbb
out
jns
in
cwtl
out
test
test
cmp
mov
testb
xchg
cmp
jno
insl
dec
mov
out
iret
mov
sub
mov
mov
jae
xor
scas
dec
lret
ja
std
shrl
or
not
pop
pushf
repz
cltd
dec
scas
mulb
pop
pop
push
inc
inc
aaa
xchg
lods
loope
sahf
jno
loop
fs
cmp
ja
lret
jecxz
and
mov
xorb
xchg
xchg
sahf
mov
movsl
popf
loopne
xorl
test
sub
and
imul
inc
xor
hlt
sbb
inc
and
pop
add
mov
popf
iret
or
add
das
movsl
lret
out
pop
jmp
sbb
ret
sub
and
mov
adc
pop
arpl
lods
pop
mov
push
imul
dec
inc
ljmp
xchg
push
fldcw
mov
mov
out
lea
sbb
cmp
lods
adc
mov
es
sub
mov
push
mov
imul
adc
sub
ja
paddd
ja
cmpsl
push
inc
lahf
popf
negl
subl
add
push
push
lret
mov
ror
cmp
xor
xchg
imul
js,pn
push
dec
or
fnsave
dec
adc
mov
leave
dec
jle
mov
mov
mov
push
cmpsb
push
jle
sbb
dec
pop
arpl
xchg
sub
sub
jmp
popa
cmpsb
push
cltd
inc
shr
push
or
pop
adc
aas
mov
sbb
ljmp
rcrl
or
xchg
adc
fwait
cmc
stos
mov
mov
pop
into
enter
pop
cmp
ret
in
xor
fadds
pop
push
inc
cmpsb
rcl
xchg
dec
cmp
pop
pop
jns
ret
push
mov
push
adc
jnp
imul
repz
shll
mov
mov
mov
xchg
out
ss
call
popa
into
adc
jle
sbb
xor
jecxz
cmp
adc
inc
push
dec
mov
jbe
or
cmp
mov
dec
pop
mov
rclb
lock
xor
xor
divl
cmp
dec
xchg
xchg
sbb
pop
aaa
into
test
enter
or
jbe
sbb
push
sub
leave
push
xchg
pop
movsl
cmpsl
xor
js
or
xchg
sbb
xchg
stos
xchg
subl
push
cmp
xor
jo
mov
mov
xchg
or
xor
inc
mov
aaa
aad
adc
aam
imul
inc
mov
cmpsl
dec
push
aad
jbe
repz
and
sahf
xor
adc
cmc
dec
cmc
mov
sub
mov
xchg
daa
push
and
mov
sub
xchg
pop
out
xor
sub
sbb
addr16
fnstsw
rorb
dec
jne
mov
stos
inc
and
lods
jnp
fadds
push
mov
jge
nop
sbbb
mov
jge
nop
push
test
scas
and
ror
mov
cld
in
inc
xor
fldenv
ljmp
cmc
cmpb
xchg
sbbb
scas
xor
aas
aad
mov
js
std
pop
xchg
mov
je
subl
sbb
leave
das
lahf
dec
mov
pushf
mov
or
ss
cwtl
jnp
std
mov
cmp
into
imul
or
xchg
xchg
insb
aaa
sub
in
mov
sub
pushf
scas
aad
ss
mov
in
adc
and
or
fistps
sbb
imul
and
stc
push
add
pop
lock
xor
jecxz
ja
addr16
and
mov
std
adc
repz
sahf
filds
push
pop
mov
mov
jp
pop
lods
loope
dec
pusha
cltd
fnstenv
add
xchg
pop
mov
or
rorb
inc
cmp
jge
fdivr
pop
aas
jle
xchg
push
cli
pop
mov
rolb
sub
ret
push
and
int3
push
sbb
cmpsl
sarb
and
jmp
fists
xchg
xchg
fwait
andl
fsubp
jg
in
jge
mov
jne
mov
jp
ficoml
jnp
call
push
daa
and
xor
xchg
xor
lahf
mov
xchg
pusha
ret
jo
mov
adc
inc
xchg
xchg
stos
in
cmp
push
fimuls
xchg
aad
dec
fldcw
scas
in
sub
sahf
in
lret
jns
jle
cmp
mov
mov
shlb
push
les
lea
and
stc
into
insb
xchg
test
jne
xchg
popf
cmc
jo
jle
ds
xchg
cmpsl
add
cli
std
repz
xor
ror
aam
cmpsl
mov
mov
mov
outsb
mov
sub
push
pop
in
incb
nop
jl
imulb
xchg
xchg
fnstcw
scas
scas
xor
repz
xor
imul
xchg
repz
lock
stc
inc
jl
sub
out
adc
pop
push
ret
xchg
jecxz
mov
push
xor
leave
ss
push
add
mov
scas
push
jecxz
mov
mov
push
inc
mov
mov
enter
adc
mov
divl
xor
outsb
inc
mov
cltd
iret
scas
or
mov
stc
inc
int3
aaa
jmp
pop
popf
sbb
cmp
push
inc
push
test
inc
sub
cmp
aad
pop
inc
test
test
mov
sahf
jg
push
insb
mov
cmp
iret
mov
jae
dec
pusha
push
xchg
jge
lds
pop
xor
cmc
mov
movsl
mov
scas
mov
sbb
add
nop
inc
sbb
into
fildl
mov
adc
jmp
xchg
push
mov
xchg
xchg
mov
jnp
mov
mov
mov
adc
sbb
cmp
leave
fsubs
cwtl
xchg
sahf
pop
lcall
sbb
rcrl
aam
and
inc
movsb
xchg
iret
mov
push
arpl
std
loope
jmp
loope
into
push
inc
iret
nop
jmp
jbe
mov
out
xor
popf
pop
fdivl
nop
inc
movsl
cmp
inc
xchg
mov
mov
adc
jbe
mov
loopne
add
pushf
sarl
dec
aas
adc
mov
push
lods
push
ret
jmp
and
cs
repz
ds
je
adc
nop
ret
sbb
pop
mov
std
mov
xchg
repnz
fwait
mov
popf
mov
in
push
sbb
scas
rol
js
inc
out
sbb
jns
icebp
movzbl
mov
sbb
aad
mov
mov
outsb
push
push
xor
xchg
nop
xchg
rcrb
jmp
add
call
sahf
cmc
lret
popa
cmp
jbe
mov
imul
lahf
fcoml
inc
mov
xchg
stos
popf
aaa
xchg
fxch
adc
mov
adc
cs
ja
push
in
inc
outsb
inc
fisttpl
add
int
xchg
lea
retw
push
lahf
xchg
rorl
fcompl
test
jecxz
adc
scas
jge
cmpsb
ficomps
jmp
jmp
mov
adc
adc
test
add
aad
lahf
das
xchg
aaa
daa
or
int3
push
stos
inc
jg
es
fcoms
xchg
punpckhwd
add
sarl
adc
lahf
cltd
lods
fs
dec
sti
imul
movsl
repz
jae
and
lahf
ss
mov
or
outsl
std
mov
aad
or
outsb
lahf
pop
cmp
sub
sahf
js
jl
mov
pushf
les
lcall
jecxz
push
mov
sub
jo
jle
sbb
adc
sub
sub
std
add
push
sbb
incb
ret
xchg
jg
nop
mov
sbb
xchg
ljmp
xor
mov
inc
testl
testb
das
aas
stc
inc
addr16
int
xchg
je
pop
mov
mov
xor
push
fiadds
push
iret
cmp
out
dec
lahf
mov
rcl
inc
xor
jae
sub
and
repz
imul
push
inc
dec
addr16
sub
add
and
push
adc
test
shlb
add
fisubrl
leave
shlb
push
xchg
mov
inc
pop
addr16
sbb
imul
nop
push
push
pop
sub
stc
cmp
mov
jbe
pop
loope
mov
add
mov
scas
sahf
xchg
test
or
xchg
push
std
and
mov
adcb
adc
mov
inc
and
jmp
filds
push
shlb
repnz
or
vpmacssdqh
mov
dec
bound
nop
xchg
or
out
mov
xor
sub
cmp
mov
pop
cmc
xchg
jge
push
pop
imul
and
shrl
ja
scas
xchg
sub
mov
rcrl
jbe
imul
push
daa
push
dec
lahf
xchg
pushf
adc
jb
cmpsb
and
out
and
mov
push
test
add
aad
scas
shll
dec
aad
loop
sahf
ret
jae
xor
push
xchg
loop
cmc
xchg
daa
aaa
int
push
lds
sbb
mov
addb
mov
dec
mov
loopne
mov
xor
xchg
pop
mov
inc
xchg
dec
pop
popa
push
in
mov
clc
aas
aam
xor
add
out
rolb
imul
popa
jmp
dec
push
shrl
cmpsl
nop
dec
sub
mov
pop
cmpsb
inc
pop
insl
jae
pop
scas
shll
bt
pop
push
cmpsl
jp
test
stos
mov
aaa
leave
sarb
repnz
ljmp
xchg
dec
int
xchg
mov
inc
add
lret
xchg
testb
inc
stc
icebp
jbe
dec
dec
std
addr16
xchg
in
dec
testl
mov
out
dec
popa
jne
mov
jl
dec
and
adc
cmp
ret
xchg
xchg
inc
jnp
mov
das
iret
cli
mov
xchg
xor
adcl
sub
enter
aas
add
cwtl
mov
dec
add
ret
xor
insl
test
test
ljmp
cwtl
icebp
adc
or
lahf
fwait
push
cmpsl
nop
outsb
bswap
sbb
xor
mov
pop
lock
jne
mov
out
les
mov
imul
mov
inc
inc
cmp
sub
add
fs
dec
cltd
gs
roll
or
dec
push
test
jg
inc
ret
adc
xor
add
mov
sub
outsl
mov
cli
sbb
adc
incl
addr16
cmp
push
outsb
mov
stos
mov
movsl
lods
mov
in
cltd
adc
xchg
mov
xor
aad
inc
mov
mov
xchg
or
xor
xor
movsbl
dec
sbb
mov
xchg
adcl
iret
mov
vmovaps
or
mov
add
rol
lret
jo
pop
iret
push
imul
push
fisubl
pop
jae
pop
data16
stc
int
mov
jnp
negb
dec
shrl
xchg
nop
inc
jle
mov
lahf
cmpsb
dec
push
in
push
sbb
xchg
pop
xor
push
mov
jns
sbb
mov
or
jg
aam
pop
mov
pop
push
jno
nop
mov
mov
aad
adc
lds
aas
daa
stc
mov
jecxz
dec
jnp
cmp
cmp
ljmp
pop
sub
scas
jnp
xchg
inc
sub
inc
mov
and
leave
enter
daa
arpl
adc
gs
jmp
mov
sbb
fsubl
cli
sbbl
push
insl
je
mov
push
jnp
fmull
call
xchg
sbb
mov
mov
inc
mov
rcrl
arpl
cmp
cmpsb
xchg
jno
scas
nop
push
in
test
adc
mov
nop
adc
aaa
into
xor
aaa
cltd
cmovg
je
repz
sub
test
mov
notl
pop
ss
movsb
ret
add
xchg
dec
scas
ror
cmp
testl
mov
ror
imul
loope
arpl
flds
push
mov
out
arpl
jne
into
nop
addr16
mov
out
fldt
mov
jb
stc
push
push
cmp
scas
mov
nop
out
outsb
adc
and
adc
cli
int
cmpsl
gs
ss
push
push
add
adc
push
sub
lds
sbbb
test
mov
push
sub
xchg
popw
inc
pop
inc
mov
pop
pop
xchg
iret
cmp
dec
lock
jge
xor
cld
iret
push
inc
pop
jl
or
sub
iret
clc
cmp
daa
mov
and
dec
nop
out
daa
popa
inc
into
xchg
mov
push
mov
sbb
lds
rorl
test
stos
cmp
xchg
mov
or
cli
jge
daa
jecxz
xchg
pop
js
add
and
jg
cmp
ds
cmp
sbb
xchg
pop
jae
je
mov
fsubrl
popf
mov
repz
fistl
jg
xor
dec
mov
dec
mov
mov
push
push
sub
sub
jle
xchg
inc
sbb
jle
sbbl
mov
push
or
xchg
jb
jno
jge
push
cmp
mov
push
lock
pop
or
adc
mov
and
pop
xor
mov
fdivr
addr16
call
xchg
cmp
and
imul
adc
xor
inc
jecxz
aad
xor
scas
xchg
je
andb
inc
and
xchg
dec
add
or
pop
pop
push
loop
pop
imulb
adc
sbb
xchg
fxch
mov
sub
xor
mov
sbb
xlat
pop
adc
std
jge
xchg
mov
add
xchg
inc
dec
cmc
pop
mov
sbb
aad
fdivrl
adc
dec
dec
mov
sub
rcll
imul
adc
pushaw
mov
xchg
loopne
test
pop
sbb
inc
push
test
xor
xchg
subl
scas
mov
fisubrl
sub
popf
xor
movsl
adc
pop
or
inc
subb
lock
and
in
dec
fs
mov
lcall
out
inc
and
xor
popa
mov
adc
push
outsb
in
roll
lds
jmp
in
sub
push
rorl
xchg
xchg
and
mov
dec
gs
enter
lock
sub
cmp
and
icebp
gs
adc
sbb
dec
sub
pop
add
mov
loop
lds
inc
dec
mov
ljmp
adcb
mov
adc
mov
hlt
push
jecxz
iret
nop
cs
xor
loope
cli
aaa
add
push
mov
cltd
lahf
xor
inc
loope
or
mov
arpl
sub
ljmp
mulb
scas
movsl
in
andl
xchg
in
pushl
test
ffree
inc
pop
imul
stos
loopne
leave
sbb
in
mov
mov
sub
adc
sub
fnstsw
ds
push
aam
fs
push
mov
sub
stos
push
jmp
adc
ret
subb
mov
add
mov
lret
dec
jge
inc
dec
xchg
in
adc
nop
je
xor
ds
jle
xor
xchg
pop
xchg
fnsave
add
mov
xor
mov
push
insl
lea
mov
dec
xor
gs
push
inc
stos
xchg
loop
sbb
adc
je
dec
mov
xchg
std
inc
mov
sub
push
jecxz
mov
fcmovbe
out
xchg
lock
sub
rcr
dec
pop
sub
dec
dec
push
mov
andb
adc
call
jbe
notl
fimull
xlat
push
mov
cmp
in
enter
out
cltd
fwait
xchg
popf
fstl
cmp
leave
jecxz
mov
pop
vmread
jnp
xchg
mov
fdivs
stos
ficompl
jae
stos
movsl
mov
inc
movsb
pop
out
pop
and
pop
call
jbe
xor
out
xor
xchg
je
jl
jl
adc
and
dec
div
mov
add
and
lods
repnz
pop
cwtl
sbb
in
push
mov
ret
jg
xor
dec
shll
out
stc
nop
or
xor
nop
push
bound
or
mov
xchg
lcall
in
cld
sub
inc
xlat
inc
sbb
xchg
jg
jne
xor
mov
mov
arpl
test
dec
stos
mov
jo
cmc
xchg
mov
xchg
in
les
dec
scas
out
or
mov
dec
xchg
pop
sub
lahf
stos
mov
pop
push
in
adc
test
push
clc
xchg
add
jb
scas
mov
mov
les
mov
outsl
jecxz
std
jns
sbb
cmpsl
movsl
pop
or
clc
push
adc
inc
fs
add
push
lret
jp
aaa
jo
ret
nop
fnstcw
adc
mov
test
dec
in
outsb
xor
inc
mov
mov
pop
cltd
fwait
mov
les
push
ja
jnp
fidivl
out
xchg
loope
lea
xchg
lret
mov
pop
int
add
mov
lock
xchg
adc
imul
mov
inc
push
and
std
repz
mov
and
out
lahf
jmp
or
or
jne
adc
inc
insb
push
add
in
scas
push
mov
pushf
adc
iret
mov
or
sbb
test
add
inc
push
scas
lods
pop
dec
push
lods
mov
mulb
dec
lea
int
mov
or
sti
jno
dec
nop
inc
pop
mov
sbb
xchg
daa
dec
jle
add
cltd
js
js
push
sbb
adc
mov
jg
xor
mov
push
scas
imul
imul
mov
fildll
sub
pop
mov
sub
lret
test
aad
mov
testl
push
movsl
iret
dec
xor
cmc
int3
mov
cmp
jns
dec
rclb
xorl
mov
das
jmp
add
neg
hlt
sub
add
incb
inc
add
jge
cld
pop
jno
pop
mov
and
mov
aad
scas
hlt
test
and
xor
imul
push
adc
mov
sti
outsb
clc
adc
pop
mov
inc
push
sbb
sbb
sub
test
ja
sbb
push
dec
neg
push
rcr
push
push
mov
push
adc
push
fnsave
mov
jbe
pusha
jg
sar
push
cli
dec
jle
xchg
push
and
and
mov
and
pop
push
icebp
lret
rol
push
push
ror
shll
movsb
sub
sub
inc
scas
mov
push
shlb
jno
mov
or
nop
xchg
popa
mov
inc
mov
push
xorb
into
pop
mov
ljmp
push
fbstp
inc
fnstcw
dec
imul
xor
pushf
jbe
mov
or
rcrl
sub
sbb
int
js
push
sub
jmp
pop
lock
imul
pusha
js
add
test
inc
xor
aam
sub
dec
cmp
ljmp
stos
jge
sti
inc
dec
lret
push
sysexit
aad
inc
loop
xchg
aas
test
adc
jns
mov
and
out
mov
aaa
sarl
push
aad
movsl
sbb
ja
data16
rorb
cmp
insb
jle
popf
mov
xor
test
sbb
and
aad
sub
push
scas
out
aad
aam
sbb
test
repz
js
inc
in
xor
clc
xchg
into
ret
inc
mov
je
lret
enter
mull
mov
mov
or
xchg
xor
mov
sub
int
scas
jne
xchg
into
push
and
xchg
ja
into
inc
jg
loope
sarl
dec
dec
lds
mov
jnp
aad
sub
mov
lds
mov
mov
cmp
xchg
ret
cmp
sbb
jge
ja
sub
xchg
jae
pop
pop
push
test
adc
xchg
jmp
mov
sub
mov
cmpsb
mov
xor
lret
inc
lock
nop
or
in
stos
push
adc
stos
scas
and
dec
in
out
test
inc
mov
and
xchg
mov
shr
stos
enter
jae
sbb
xor
jg
push
mov
movsl
fimull
ret
sbb
ffreep
xchg
sub
out
cmpsb
fs
inc
inc
faddl
aaa
push
aaa
ja
les
inc
xchg
loop
bound
lock
xor
jns
mov
cmc
into
addl
mov
push
mov
scas
aad
pushl
mov
push
inc
aas
inc
push
push
arpl
pop
mov
mov
sahf
mov
dec
scas
push
add
cmc
add
std
adcl
movsb
movsb
enter
vcomiss
jge
movsl
leave
xor
xchg
mov
mov
jecxz
xchg
sbb
xchg
cmp
inc
sub
adc
shrb
repnz
out
mov
out
jnp
mov
sbb
call
adc
xchg
sub
daa
or
leave
lea
jge
jecxz
and
sub
repnz
test
lahf
roll
out
push
gs
mov
mov
lods
sbb
pop
pop
sub
shll
sub
dec
loop
iret
xor
mov
and
std
or
movb
cs
in
adc
outsl
push
jmp
gs
inc
daa
xor
add
test
cmp
mov
pop
loop
pop
or
mov
enter
fidivrs
or
cmp
leave
out
clc
mov
cmp
movl
add
xor
movsb
jne
push
nop
stos
data16
xchg
ror
shll
xor
xchg
shl
aad
in
lahf
push
mov
ds
mov
xchg
sub
test
pop
subl
stos
or
sbb
xchg
lcall
es
mov
stc
fstpt
jnp
push
jb
mov
mov
addr16
jp
mov
jecxz
in
out
lds
mov
lret
mov
jge
mov
nop
jnp
push
pop
jne
mov
sbb
pop
mov
jbe
cmp
mov
inc
pop
inc
xchg
xor
dec
dec
dec
push
js
adcl
xchg
sub
cmpsl
pop
push
cmp
loopne
mov
cltd
les
scas
sahf
mov
scas
xchg
daa
fld
xorl
xorb
ret
out
mov
inc
mov
push
pop
nop
cwtl
std
movb
jne
lds
imul
aaa
or
mov
outsl
jle
mov
push
ficomps
dec
cli
cltd
shlb
stos
and
jo
sbb
notb
adc
js
fs
or
lods
jl
pop
rorl
sbb
mov
dec
jg
xchg
js
movsl
xor
fcompl
push
mov
js
mov
push
mov
pop
mov
mov
inc
lret
enter
sub
xchg
jmp
js
cmpl
xlat
xchg
xchg
mov
scas
loope
xchg
imul
arpl
xchg
push
rcr
hlt
xchg
dec
aaa
and
adc
xchg
popa
in
and
imul
out
test
das
jb
xor
xchg
push
push
pusha
dec
std
mov
lea
fbstp
lret
loope
into
xchg
xchg
insb
aad
jno
aaa
loope
lcall
in
xchg
and
js
cmp
xchg
je
sub
enter
dec
sbbl
movsb
clc
xchg
or
push
dec
sbb
mov
aad
cmp
inc
push
insb
aaa
mov
scas
hlt
aas
in
mov
cmc
xor
mov
push
sbb
lods
push
add
test
sbbl
adc
out
mov
add
mov
inc
sbb
push
fs
addb
cmp
adc
mov
sub
test
or
jge
fadds
inc
sbb
mov
outsb
and
xchg
add
movsb
mov
pop
or
xor
hlt
dec
aam
mov
xchg
nop
mov
and
jne
jne
cmp
jmp
mov
pop
aaa
xor
nop
std
aas
pusha
sub
pop
jno
and
mov
fmuls
jnp
dec
test
aaa
or
lret
inc
adc
push
cmp
loope
push
je
push
hlt
call
and
out
shlb
sub
inc
pop
gs
pop
push
jb
cmp
jp
pop
add
pop
repz
leave
out
inc
xor
ret
imul
jnp
dec
pusha
mov
sub
add
repz
and
fcmove
push
mov
loopne
jae
lds
xor
push
push
xchg
das
xchg
sub
mov
js
cld
ficoml
mov
fnstsw
xor
fs
adc
pop
xchg
adc
cmp
push
iret
pop
jne
xchg
cmp
mov
cmp
testb
in
and
push
jbe
test
repz
mov
pop
mov
xchg
push
mov
jp
add
mov
mov
xor
mov
lret
test
mov
adc
sarb
lahf
test
mov
push
fcomps
xchg
shlb
lret
cmp
sbb
dec
bound
shl
mov
mov
jo
push
les
push
sbb
andb
pop
aad
scas
ret
push
push
cld
icebp
out
lods
push
popf
mov
inc
xor
pop
xor
jnp
out
les
mov
add
in
test
xchg
js
shll
jmp
sbb
mov
scas
stc
scas
pop
adc
test
insl
adc
clc
shrb
scas
xlat
js
jmp
sbb
mov
cmpsb
add
aam
sbb
insb
int
loop
push
push
test
test
dec
mov
mov
dec
rolb
pop
imul
jmp
das
add
cmp
mov
mov
adc
ljmp
aas
fbld
inc
rolb
mov
lret
mov
sti
ss
popf
xor
test
ror
push
sbb
mov
jg
stc
xor
mov
pop
mov
ret
mov
ret
jge
pop
or
xchg
mov
push
push
inc
cmc
or
aad
aas
pop
xlat
push
xor
mov
shlb
sub
pop
ss
inc
cmpsb
in
insl
sbb
leave
inc
or
push
lcall
mov
mov
push
sbb
mov
out
xor
das
loopne
lcall
xchg
fnsave
sub
jmp
ljmp
outsb
mov
sbb
mov
fsts
add
jne
mov
insb
sub
imul
pop
inc
sti
inc
nop
push
add
mov
pushf
nop
mov
or
addr16
faddl
sub
scas
nop
add
popf
movl
mov
cmpsl
nop
fisubl
push
popa
js
xlat
lods
mov
jne
hlt
jg
xchg
mov
cmp
xchg
lds
mov
nop
insl
xchg
pop
xchg
out
je
cltd
in
pushf
or
xchg
bound
push
push
sub
mov
das
enter
cmp
push
fwait
lcall
sahf
addb
outsl
iret
fidivl
mov
xor
mov
movsl
xor
sarl
ljmp
nop
iret
nop
call
xchg
ljmp
pop
mov
xchg
and
jns
and
add
xor
cmp
pop
stc
sbb
je
sub
xchg
out
dec
pop
js
clc
or
ss
push
and
ret
cltd
fiaddl
ss
mov
xchg
mov
jbe
xchg
notb
mov
pop
into
mov
jbe
outsl
add
scas
dec
push
add
and
stos
sbb
add
jbe
mov
adc
inc
repnz
xchg
sbb
cltd
fcmovnbe
jecxz
xor
shll
cltd
lahf
loop
jb
in
push
iret
cmpsl
testb
xchg
std
pop
es
gs
in
mov
subl
int3
pop
cmp
mov
xchg
subl
adc
pop
push
inc
xchg
add
aaa
xchg
sub
orb
mov
sbb
jp
cmp
pop
mov
xchg
jb
aas
std
xchg
pop
dec
into
lcall
lds
ja
into
mov
in
outsb
inc
in
and
in
sbb
jae
cmpb
ret
call
in
mov
sti
push
jmp
sub
jae
gs
jmp
xchg
push
in
dec
jne
sti
xor
jle
sub
xchg
mov
addr16
mov
xchg
push
push
daa
adc
inc
es
subl
xchg
mov
cmpsb
mov
sbb
xchg
jp
xchg
xchg
jb
xchg
hlt
mov
in
dec
adc
sub
mov
aad
imul
into
cwtl
rorl
sbb
in
rcr
add
test
test
sbb
mov
out
xchg
stc
fiadds
or
lret
xor
fstps
stos
cltd
fldenv
ds
dec
mov
pop
lcall
test
sbb
push
cmpsb
cmpsb
jbe
cmp
imul
adc
outsl
sub
sub
adc
sbb
push
mov
into
push
popf
pop
xchg
ljmp
xor
mov
jecxz
dec
adc
fwait
dec
repnz
jg
sub
cmp
lret
leave
rol
push
dec
and
xchg
imul
sbb
mov
adc
je
aad
rorl
jbe
mov
xor
ss
ficoms
mov
and
sarl
mov
sub
rcll
aas
xor
sbb
fiaddl
repz
addr16
xchg
pop
into
mov
jmp
mov
fistl
lret
inc
jecxz
jp
mov
mov
fldl
adc
fidivl
xlat
addr16
pop
xchg
jecxz
pop
mov
imul
push
jle
sahf
andl
add
inc
addr16
rcll
pop
cmp
imul
dec
jnp
pop
leave
and
das
notb
jmp
push
iret
sbb
ret
xchg
lcall
push
cmp
mov
lret
push
fstl
rolb
std
xchg
push
nop
dec
mov
jo
and
inc
jbe
gs
cli
cmpsb
je
mov
daa
mov
fucomp
cmpsb
xor
dec
fnsave
rorl
pop
decb
dec
sahf
ret
inc
add
fdiv
dec
xchg
sub
push
or
jns
aam
clc
loope
adc
jle
cltd
fstps
jbe
rcrl
loopne
xchg
pop
xchg
aas
xchg
out
jne
mov
xchg
mov
inc
inc
adc
mov
aam
ss
ss
add
jns
xor
imul
or
subb
enter
mov
jmp
cltd
dec
fnstenv
lcall
xchg
imul
jb
ror
popf
mov
mov
imul
sbb
xor
lahf
jecxz
mov
pusha
mov
pushf
dec
loope
movsb
fldenv
mov
and
xchg
add
or
adc
add
fsubr
push
push
or
lret
cmp
or
rcr
addr16
mov
adc
loopne
mov
adc
repz
fistl
mov
out
pop
imul
xchg
cwtl
mov
clc
cli
pop
aad
leave
pop
fcompl
xchg
shl
push
stos
and
pop
jl
push
push
jmp
out
mov
add
shrl
lock
push
and
testl
test
jae
sbb
cwtl
ljmp
gs
mov
ljmp
push
add
push
js
push
inc
mov
insl
rcrb
filds
cltd
xchg
push
shll
mov
rcll
mov
mov
add
movsl
iret
jne
into
sarb
lcall
sub
ljmp
inc
push
push
into
arpl
and
sbb
jg
xor
fisttpll
sbb
adc
and
iret
sbb
mov
jne
push
xchg
mov
mov
clc
sbb
pop
call
ret
das
xchg
xor
xor
sub
cmp
adc
mov
jnp
arpl
sarb
xchg
xchg
jmp
aaa
cmp
inc
adc
add
adc
cmp
aad
pop
out
aad
sbb
enter
mov
jno
pop
mov
pop
xchg
mov
jnp
ss
ss
xor
jmp
xchg
dec
jnp
fcomip
or
dec
push
mov
lock
les
inc
imul
jp
test
es
xchg
insb
jmp
mov
inc
cmp
scas
fbld
leave
shrb
xchg
xchg
sbbl
pcmpgtd
aaa
aaa
mov
into
in
aaa
push
mov
xchg
pop
sub
aam
cmp
sbb
into
fstps
lahf
pop
or
out
lahf
scas
push
test
ret
mov
shll
ds
fcoml
xor
jno
in
insb
xor
out
inc
stc
ja
aaa
movsb
and
sub
movsb
js
xchg
cmp
gs
add
adc
sahf
mov
dec
mov
int
call
lcall
mov
dec
orl
or
scas
fbstp
pop
jle
xchg
into
push
pop
cltd
aad
mov
push
cli
inc
aad
mulb
shrb
xchg
sbbl
cmp
pop
lret
rolb
jle
push
and
pop
mov
scas
and
test
test
loopne
in
jnp
cli
js
insb
and
mov
es
test
adcb
ret
cmp
cmpsl
in
and
dec
xchg
pushaw
dec
or
aam
divb
xor
pop
nop
adc
jle
out
or
mov
ja
stos
pop
jge
movsb
popf
push
sahf
shl
int
andl
imul
test
ret
push
inc
repz
jne
call
cmc
mov
or
dec
xchg
sbb
cmp
into
xchg
jo
ret
sub
fsubrl
cmp
pop
inc
jb
xor
jle
stos
clc
push
stos
inc
rcrb
scas
mov
out
cld
xchg
nop
pop
jbe
int
outsb
data16
test
ja
cmp
xchg
or
repz
jae
out
mov
mov
ficompl
daa
nop
int3
lret
jle
push
adc
and
adc
mov
sbb
mov
or
xchg
into
popl
pop
es
into
jge
stc
push
add
cwtl
jge
popa
rorb
dec
mov
jo
imul
cmp
xchg
test
stos
inc
addb
rcrb
xchg
cmp
ret
iret
or
icebp
icebp
push
or
and
push
rep
push
les
je
popa
jae
ja
repz
pop
arpl
jle
fdivr
jne
not
sbb
iret
inc
cmpsb
sti
fcoml
sti
test
jae
addr16
mov
aad
roll
test
cmp
xor
fwait
arpl
outsb
adc
dec
inc
aaa
jle
or
nop
push
test
adc
add
or
jecxz
or
imul
and
inc
sub
push
push
ret
jbe
mov
sub
dec
sbb
jl
aaa
lea
sbb
fidivl
xchg
dec
dec
pop
imul
cmpsl
mov
cmc
stos
lret
xchg
push
sub
xchg
cmc
inc
sub
imul
fldcw
add
push
pop
nop
cmp
adc
jno
xor
pop
jbe
pop
xchg
xchg
adc
sub
xor
clc
lcall
lods
movsb
nop
lret
nop
and
push
jnp
loopne
xchg
shl
mov
push
std
xchg
cmp
lods
addb
pop
sbb
sub
cmc
xchg
shrl
jg
mov
jo
idivl
jb
mov
out
or
push
imul
iret
sahf
and
push
pop
push
push
int
mov
inc
popf
dec
xor
jp
and
sub
adcl
pop
sbb
cmp
lods
xchg
int
inc
ja
lods
pop
push
inc
lods
movsl
jge
xchg
popf
add
movsl
loope
mov
cs
js
bound
xchg
and
jne
push
lods
xchg
sub
insb
ja
sbb
sbb
adc
test
jns
fsubp
dec
ret
mov
sub
ds
ja
aaa
ja
and
aad
push
addr16
mov
rorl
and
rol
or
inc
push
add
jnp
sub
xor
adc
insl
les
mov
rol
iret
out
mov
int
or
neg
mov
xor
fsub
cli
cltd
js
in
mov
fisubrs
scas
jnp
or
mov
cwtl
iret
and
cmpb
push
mov
filds
sub
int
lock
lods
and
cmp
push
outsb
movb
testb
fsub
test
scas
sub
in
add
dec
cmp
pop
jb
popa
and
imul
pop
mov
sub
shrl
mov
lds
pop
mov
nop
pop
inc
psrlq
test
adc
mov
rcll
nop
jmp
mov
lock
jecxz
sbb
or
sub
mov
aad
xor
nop
xchg
cli
icebp
sahf
or
xor
in
sub
adc
mov
pop
scas
fstps
sbb
movsb
sbb
sbb
call
mov
sub
dec
outsb
pop
jbe
xchg
dec
xchg
adc
xor
cmp
ljmp
aas
jnp
mov
ret
cld
notb
jbe
push
dec
and
shrb
je
ss
push
jns
in
xor
loopne
push
jae
push
aad
fwait
adc
jecxz
xor
mov
jnp
lcall
movsb
movsl
cld
ret
mov
sbb
cmp
negl
mov
out
mov
xrelease
sbbb
mov
leave
test
or
sbb
rorl
sub
lret
pushl
jae
mov
insl
mov
bound
rcll
out
push
pusha
or
inc
xchg
pop
ja
sub
mov
mov
std
mov
push
iret
inc
or
cmpsl
lret
pop
push
leave
jle
cmc
dec
xchg
mov
inc
aad
cli
cmp
jl
lea
das
pop
adc
jb
dec
nop
sbbl
imull
sbb
mov
fdivl
cmp
xchg
mov
lds
pop
xor
test
icebp
dec
xchg
cmpsl
xchg
adc
sbb
test
mov
gs
addr16
fmul
or
sub
testl
xor
fcmovnbe
xchg
jecxz,pn
mul
or
fwait
fdivl
aas
fiaddl
xchg
lods
cld
lods
pop
in
mov
gs
sub
pop
js
pop
nop
inc
pop
cmpsb
test
jno
xchg
inc
pop
sbb
push
rorb
jecxz
xchg
dec
adc
insb
and
jb
mov
inc
lret
and
shlb
lock
scas
cmp
out
das
in
fidivs
sbb
js
sub
fs
mov
cmpsb
dec
cmp
scas
inc
aad
nop
mov
xor
fistpl
loopne
out
daa
mov
test
hlt
pop
pop
pop
mov
cltd
push
mov
stos
cmc
hlt
xchg
mov
xchg
fldl
push
pop
daa
faddl
jle
inc
mov
movsl
xchg
fldcw
dec
aad
push
mov
sbb
sbb
push
outsl
loop
mov
mov
out
cltd
dec
inc
lret
mov
mov
sahf
sub
dec
cmpb
mov
test
scas
mov
cmp
pop
dec
nop
insb
mov
sbb
mov
ja
imul
and
gs
aaa
js
inc
out
inc
nop
mov
mov
shlb
mov
shll
lea
in
scas
inc
pop
mov
nop
ret
pop
mov
sbb
sub
add
push
jo
sahf
xchg
and
dec
lods
push
lock
sub
cmpsb
or
into
jg
repz
mov
stos
outsl
sub
pop
and
out
imul
lcall
adc
xorb
sbb
inc
aad
popa
pop
mov
and
cs
dec
pop
mov
push
lea
and
push
mov
outsl
test
lods
ja
xchg
xor
push
pop
fmull
pop
cmp
sbb
cltd
xor
cmpsb
mov
push
insl
xchg
psubusw
cmp
push
xchg
pop
pop
sbb
push
leave
faddl
jge
bound
filds
test
mov
mov
roll
faddl
inc
inc
push
pop
push
xchg
mov
bound
adc
inc
cmp
fs
push
xchg
aaa
push
xchg
fnsave
out
lahf
mov
mov
movsb
sub
and
sbb
iret
cmp
mov
inc
mov
scas
js
je
iret
mov
fwait
xchg
mov
in
jp
dec
loope
insb
adc
xchg
aaa
xor
aam
jcxz
adc
push
xchg
aam
nop
dec
rorl
pop
jp
mov
inc
scas
push
cmp
cmp
push
mov
and
inc
scas
dec
jle
lahf
out
aam
xchg
fistl
repnz
cs
jno
pusha
xchg
addr16
push
dec
sub
scas
aaa
inc
pop
fs
faddl
int
xchg
fistpll
pop
sub
ja
or
outsb
pop
push
and
ret
jmp
mov
xor
dec
pop
dec
fmul
inc
cld
mov
mov
dec
mov
inc
jns
add
mov
addr16
aad
cmp
inc
sbb
pop
mov
ftst
mov
daa
js
imul
orps
mov
aad
jne
orl
or
mov
fmul
fcoms
outsb
imul
and
xor
mov
pop
nop
xorb
push
push
clc
xchg
into
call
inc
ret
adc
mov
jl
pop
clc
sub
jno
mov
fcmovnb
ljmp
pop
jg
cmpsl
and
lea
mov
jbe
nop
cmpsl
cmp
sbb
repz
les
out
add
dec
inc
mov
out
pop
inc
add
push
jbe
mov
nop
pop
int3
cmc
nop
xor
mov
sub
das
fucomi
sub
sub
test
inc
movsl
mov
fs
jne
js
xor
popa
adc
xor
sub
mov
add
into
jmp
dec
loop
pop
out
je
xor
cmpsb
mov
mov
test
inc
sbb
push
mov
ljmp
ds
jg
stos
testb
jmp
movsl
push
inc
je
push
and
xor
fucom
xor
push
lds
sub
pushf
push
push
xchg
mov
lea
inc
leave
and
movsl
push
aad
dec
loop
mov
xchg
push
test
scas
jl
jae
je
push
add
and
inc
loopne
push
or
pop
jp
add
dec
outsl
lcall
pop
push
mov
repz
xchg
ja
testb
sub
xchg
mov
pop
cmpsb
lock
adc
cmp
mov
sub
dec
movsb
dec
and
sti
mov
or
nop
negl
jns
push
xor
lods
popf
sbb
mov
out
mov
popf
xchg
aad
mov
inc
pop
mov
jno
xor
push
aam
jmp
push
out
mov
mov
popf
push
xor
xchg
fldl
stos
add
adc
test
enter
daa
xchg
or
mov
in
xchg
test
scas
ja
pusha
les
pusha
mov
xchg
pop
xchg
mov
gs
jnp
sahf
xchg
int3
pop
or
int
fisttps
stos
mov
dec
lret
mov
outsb
push
xor
dec
int3
mov
es
insb
cmp
fistps
xlat
mov
push
and
mov
and
add
pop
into
inc
pop
sub
inc
push
mov
ficoml
flds
sbb
lfs
cmp
aad
push
xor
ds
daa
nop
pop
cmc
inc
pop
xchg
push
adc
jle
and
inc
out
jo
lods
inc
xchg
push
add
mov
push
in
or
jmp
xor
cltd
xor
xchg
inc
pop
scas
dec
stos
jo
xchg
mov
jge
leavew
aaa
nop
pushf
mov
dec
subb
gs
leave
push
inc
ss
setns
insb
fistpll
jmp
fwait
ds
repz
aas
xor
ja
js
inc
xor
scas
nop
rcl
std
fcomp
stc
cmp
ret
sub
into
mov
repnz
dec
inc
daa
popa
jne
adc
test
stos
cmp
bound
mov
popf
jne
push
sbb
sbb
hlt
dec
nop
icebp
mov
lret
add
test
nop
fistpll
cmpsb
dec
mov
cs
ds
dec
add
lret
icebp
mov
jl
push
enter
ret
mov
rol
mov
sbb
xchg
sbb
jb
test
cmp
std
test
mov
ret
cmp
cmpsl
ja
push
aaa
sub
lods
imul
pop
in
cltd
aam
mov
pop
cmp
iret
aas
imul
sub
ds
jle
pop
shll
mov
inc
mov
test
sub
add
dec
mov
fnstsw
cmp
out
and
mov
scas
pop
jmp
inc
inc
pop
pop
ficomps
mov
imul
enter
in
inc
fsubr
rclb
iret
scas
xchg
sbb
lret
mov
and
mov
xchg
iret
lock
mov
push
cmp
xchg
rol
lds
dec
pop
sbb
add
test
add
aam
or
lds
enter
push
sbb
or
push
das
out
xchg
aaa
mov
jb
lds
pop
jae
sub
fbstp
add
lcall
aad
cmpsb
nop
xchg
inc
mov
sub
rcr
mov
add
adc
adc
or
test
jb
cltd
adc
push
test
pop
scas
jae
jecxz
roll
lds
stc
lea
adc
loop
jl
into
xchg
fisttps
sub
sbb
or
popf
ja
xor
ficoms
push
adc
xchg
mov
into
mov
jne
daa
sbb
hlt
dec
popf
sub
and
mov
rol
mov
flds
test
push
cmc
int3
push
ds
push
xchg
scas
sbb
aaa
mov
frstor
jo
mov
xchg
in
lahf
out
fistl
clc
inc
mov
pop
mov
loopne
lock
mov
jae
xchg
divb
or
add
pusha
jge
loopne
test
or
fstpt
dec
push
sbb
adc
fbstp
mov
sbb
rclb
scas
pop
orl
and
into
ficompl
shrb
aaa
cld
xchg
mov
mov
mov
jecxz
pop
stos
enter
mov
roll
ds
int
xor
nop
mov
sub
testl
inc
sub
or
xchg
nop
jecxz
sbb
xchg
mov
mov
rorb
xchg
aaa
ds
out
adc
gs
jne
xchg
adc
rolb
sti
jmp
pop
lock
pop
leave
enter
mov
xchg
int
mov
lods
and
jno
fwait
shr
mov
pushf
ja
sub
subl
or
xchg
js
xchg
push
popf
js
lds
leave
push
loopne
mov
jmp
jo
test
push
and
pop
push
out
xor
and
and
xor
imul
in
inc
adc
jno
into
int
mov
sub
push
push
mov
dec
mov
push
push
enter
xor
or
mov
aad
mov
out
add
lret
dec
mov
in
adcl
inc
sub
in
and
fidivrl
pusha
jns
xchg
or
or
sti
mov
xor
into
or
adc
daa
stc
dec
push
mov
cmpsb
xor
and
xlat
adc
js
dec
mov
cmp
mov
mov
cmp
cmp
mov
cmp
xchg
lret
jo
sub
cmp
rorb
sub
iret
mov
daa
stc
into
jns
fistl
adc
push
sbb
ds
ret
dec
aaa
js
jcxz
mov
jnp
sbb
mov
xor
lret
in
push
cmp
cwtl
inc
pop
mov
dec
imul
into
sbb
xor
push
xor
or
adc
dec
push
mov
push
xchg
pop
xchg
push
pop
adc
mov
mov
mov
push
mov
mov
lahf
xchg
xchg
roll
leave
jge
mov
push
sub
lock
cmpsl
scas
xchg
jnp
lcall
add
nop
repz
push
js
xchg
mov
pusha
outsb
cmp
and
adc
mov
mov
adc
iret
jg
xor
adc
xchg
xchg
cmpsl
hlt
lds
sbb
and
loope
add
jbe
les
jg
xor
or
iret
sub
mov
or
pop
or
sub
dec
pushl
inc
or
jg
test
jo
mov
gs
inc
adc
not
imul
add
in
movsl
hlt
sub
mov
aam
das
jne
mov
add
sbb
add
mov
xchg
pop
adc
push
push
adc
pop
pop
incl
iret
gs
fsubrl
dec
jae
sub
add
outsl
mov
dec
jno
test
out
xchg
mov
push
and
out
mov
pop
xchg
stos
sbb
test
push
jmp
xor
fstpt
jle
mov
inc
loop
mov
aaa
dec
out
std
jns
pop
dec
mov
mov
fnstcw
and
adc
mov
pavgw
clc
pop
jbe
pop
addb
xchg
addr16
testb
dec
jbe
mov
insb
xchg
out
std
out
iret
or
mov
movsb
push
ficoms
pop
mov
js
lcall
bound
nop
pop
cmp
mov
out
aaa
and
mov
shll
sbb
sub
notl
mov
int3
sub
add
push
stos
dec
cmp
pop
sub
in
clc
aam
mov
mov
or
inc
dec
mov
outsl
mov
push
jg
dec
mov
jle
call
jecxz
outsb
scas
xchg
jmp
push
xchg
cmc
fmuls
pop
jle
std
xchg
dec
stc
mov
aaa
insl
ja
mov
repnz
mov
or
stos
les
sbb
pop
daa
jle
add
mov
adc
push
test
jg
dec
inc
sbb
out
xchg
ror
dec
xchg
or
nop
movsl
pop
lods
test
xor
xchg
adc
loope
in
xchg
stc
stos
dec
pop
jne
stc
and
icebp
aam
movsl
mul
or
pusha
adcl
or
jge
aad
push
movsl
pop
mov
jae
jne
fcoms
arpl
jp
pop
aaa
imull
out
adc
inc
and
fdivrp
imul
jle
sub
push
scas
sbb
testl
cmp
or
aad
add
ss
xchg
jno
mov
stos
in
fsub
shlb
or
lcall
xchg
jae
mov
mov
xchg
xor
lea
cmp
jp
or
push
xor
mov
mov
ja
push
aaa
aaa
jne
cltd
inc
push
pop
js
ds
adc
jo
or
es
in
push
aaa
xchg
ds
mov
push
add
sub
xchg
dec
push
add
cmpsb
pop
jge
jns
aad
jg
fldcw
js
sbb
and
xchg
loope
rcll
orb
or
push
or
sti
cmpsb
jmp
aas
pop
fwait
insb
mov
test
loopne
xchg
in
mov
pop
rcll
fstpt
pop
and
dec
lds
xchg
nop
push
mov
pop
idiv
mov
into
pop
xorl
push
jge
je
add
mov
fucomi
push
popf
ds
dec
shll
idivb
mov
xor
iret
rcll
sbb
sub
daa
pop
mov
adc
test
xor
cmpsl
shrl
xchg
dec
std
xchg
pop
push
iret
dec
mov
pop
sti
mov
mov
push
mov
ds
or
mov
data16
out
sbb
popf
aaa
jb
sti
sub
push
ds
push
push
or
neg
fxtract
and
sub
ret
pop
xchg
xchg
cmc
ljmp
shrb
pushf
and
pop
or
andl
jmp
std
sub
push
pop
rcrl
imul
push
fidivs
xchg
aam
cmp
int3
test
lods
xchg
jne
xchg
fnstsw
add
repnz
cmpsl
lds
and
std
xchg
loop
dec
movsb
fwait
lret
loope
sbb
mov
push
cmpsl
sbb
and
lcall
gs
jg
pop
push
pop
inc
mulb
xor
mov
adc
mov
icebp
and
in
add
cmp
dec
sub
jae
sbb
mov
pop
popf
xor
jmp
in
and
fiadds
pop
inc
xchg
jne
jle
popf
mov
mov
frstpm(287
stc
mov
cmc
pop
jle
xchg
addl
mov
fdivs
sub
jae
imul
jnp
addb
inc
mov
std
imul
jle
lret
insl
sbb
icebp
sub
push
in
rcl
jmp
jle
pop
dec
mov
sti
dec
lods
and
pop
mov
insl
push
mov
xchg
loopne
stos
jp
loope
adc
cs
roll
cltd
mov
pop
aad
push
aad
adc
xor
cmpsl
mulb
mov
jne
out
xor
loop
pop
and
mov
dec
push
rorl
xchg
and
es
xchg
xchg
xchg
push
cmpsl
jle
xchg
andb
cmp
sbb
cmp
ss
sub
daa
leave
fistpll
addb
push
mov
popf
ret
cltd
lret
enter
jbe
xchg
mov
ret
pop
fstp
xor
push
xchg
cltd
add
mov
pop
test
xchg
cmp
jl
mov
jge
adc
scas
dec
push
gs
dec
stos
push
jmp
das
nop
mov
popf
and
sub
add
shll
movsl
pushl
out
mov
out
jge
jae
scas
mov
push
cmp
popa
mov
mov
gs
movsl
aaa
cmpsb
andl
cld
push
mov
js
addr16
addr16
lods
out
mov
xchg
lds
repz
dec
neg
jno
xchg
orl
cmp
pop
or
inc
sub
shll
mov
or
ret
idivb
jns
movsb
inc
push
pop
cmp
jge
movsb
dec
daa
and
jbe
mov
xorl
mov
clc
jnp
ja
xchg
pop
lahf
pop
mov
adcl
mov
sbb
sub
sub
mov
xchg
nop
cmp
sub
inc
add
jae
leave
sahf
push
fadds
ret
lcall
dec
mov
imul
loope
xchg
jmp
imulb
xchg
mov
cmp
push
scas
sub
ljmp
cld
jp
sbbb
outsb
lcall
sahf
sahf
mov
jo
mov
jecxz
add
test
xorl
and
stos
xchg
gs
mov
xor
cmpsl
adc
xor
cmp
repz
pop
inc
pop
jg
push
rcrb
mov
jb
or
xor
push
cmp
push
test
push
dec
fcompl
adc
pop
orb
lock
rcrb
push
loope
scas
pop
jnp
jb
cmc
nop
jle
add
outsb
adc
in
rcrl
clc
inc
and
nop
xchg
aam
push
fmulp
loopne
cli
mov
inc
je
aam
adc
sub
loop
inc
xor
mov
pop
jge
jae
and
clc
sbb
jl
lret
cli
dec
popa
mov
jb
leavew
insl
daa
sub
pop
not
mov
xchg
jbe
push
cltd
int3
mov
and
push
push
cmpsl
cmc
jecxz
mov
and
xchg
cmpsl
jne
push
out
ficompl
adc
and
push
xor
or
mov
mov
cmp
pop
rcrl
in
cwtl
fsubs
push
xor
lea
repz
sbb
or
sub
xchg
push
test
mov
push
xchg
sub
jbe
stos
cmc
mov
xchg
cmpsl
adc
xor
int3
dec
repnz
jno
mov
xchg
jp
cld
or
sbb
aas
mov
inc
dec
cwtl
lret
push
insl
xor
sbb
nop
clc
sbb
jb
outsb
sti
outsl
xor
jl
xor
sub
mov
xchg
and
add
lcall
push
or
jne
mov
sbbl
out
fimuls
mov
mov
push
push
pop
imul
pop
push
cmpsl
sub
outsl
fxch
outsl
xor
push
fiaddl
roll
and
xor
inc
imul
mov
push
aaa
jae
or
cmp
insl
pop
push
sbb
push
jns
ss
iret
test
cmpb
cmp
shrl
cmp
push
mov
push
in
mov
jle
adc
xchg
xchg
mov
lods
mov
aas
imul
xor
nop
dec
add
cmp
movsl
js
aas
mov
std
daa
adc
mov
xlat
xorb
dec
nop
ja
push
imul
dec
xchg
mov
pop
mov
lret
dec
inc
jl
stos
mov
shll
xchg
lret
xchg
rorb
cmpl
enter
lods
xor
nop
dec
push
pushf
xchg
add
mov
and
std
ja
xchg
cmpsl
mov
js
imul
popf
ret
mov
mov
in
inc
mov
xchg
je
aas
mov
ret
or
insl
mov
or
scas
shll
xor
je
test
dec
orb
std
orl
mov
int
aad
out
std
mov
cwtl
inc
mov
aas
aad
sarl
leave
adc
rorb
test
int3
cmp
add
sbb
mov
in
aaa
mov
lods
je
aad
mov
dec
fstl
sbb
lret
jne
shr
mov
gs
orps
xor
nop
dec
iret
outsb
sbb
jno
roll
pop
jle
fadds
cltd
mov
push
push
jg
jo
lahf
daa
xchg
iret
das
jmp
es
cltd
daa
clc
dec
into
gs
pop
mov
adc
fsts
sub
scas
adc
inc
fiadds
mov
in
jbe
cld
js
xchg
insl
mov
pop
cmp
xchg
mov
out
pop
jns
sbb
push
ds
lcall
outsl
fs
jg
adc
test
sub
xor
inc
xchg
and
sub
std
dec
xor
push
xchg
mov
leave
mov
push
sbb
jg
loop
fidivs
stos
in
fs
stc
push
adc
notb
add
addr16
fsubl
cltd
movsl
or
test
mov
rolb
fcoml
jnp
jg
sub
jl
mov
cld
cli
xor
sbb
pop
aaa
scas
jmp
pop
mulb
decb
cmpsb
mov
gs
cmpsb
aas
aam
inc
in
inc
mov
aaa
jge
mov
lods
mov
inc
xor
mov
sub
iret
push
cmp
jae
xchg
xor
imul
pop
mov
and
mov
cmpsl
xchg
ja
push
mov
fistl
inc
test
in
jne
das
pop
jle
push
mov
or
outsb
dec
xchg
xchg
stos
adc
les
fsubl
add
sbb
std
and
iret
push
shl
stos
stos
das
pop
xor
rol
cmp
stc
cmp
out
adc
push
repz
push
fisubrl
sbb
push
loop
daa
adc
mov
sub
inc
dec
mov
fs
in
and
mov
inc
xchg
mov
clc
jecxz
adc
push
lods
fwait
and
mov
pop
in
cmp
mov
out
mov
loope
add
aad
aaa
arpl
lahf
std
leave
cmp
xor
inc
leave
lods
dec
clc
test
in
popf
ret
mov
cli
gs
call
sbb
mov
mov
mov
in
lcall
mov
sub
mov
sub
mov
iret
dec
pop
xchg
push
adc
cmp
inc
nop
mov
push
in
aad
dec
sub
in
xrelease
xor
lcall
mov
cmpsl
xchg
aas
ja
cmpsl
jge
xchg
jno
orl
add
cmp
push
lret
int
iret
int
shll
out
faddl
arpl
mov
xor
xchg
popf
scas
addr16
push
rcrb
cmc
rcrl
adc
fmuls
and
and
std
addl
cs
insb
in
je
adcl
ror
push
cli
or
xor
or
push
rorl
movsl
in
ljmp
popa
jmp
clc
mov
stos
and
movups
pop
scas
sbb
pop
stos
and
mov
mov
jb
push
pop
jmp
mov
push
enter
ret
fnstenv
lods
xchg
jl
cmp
mov
nop
int
jge
xchg
filds
adc
xor
jmp
ficoml
cmc
popf
ja
out
sub
rol
mov
adc
mov
and
sahf
fs
add
lret
je
int
insl
popf
andl
cmp
xor
scas
pop
in
sub
cmpsb
cmpsl
insl
add
js
cmp
nop
mov
jae
aas
push
std
mov
xor
in
into
adc
mov
gs
mov
outsb
sub
jmp
sahf
imul
lea
movsl
push
add
mov
fldenv
and
fdivrs
mov
lret
cmc
add
jnp
and
cmc
lds
mov
std
imul
test
mov
lahf
out
push
and
sub
mov
fcoml
in
dec
push
subb
mov
xchg
push
insl
aad
in
sarb
aas
rcrl
lods
jne
outsl
xchg
jecxz
jle
std
cltd
and
iret
push
sub
mov
mov
js
loopne
push
adc
adc
and
adc
and
fsubrl
lret
in
xor
mov
dec
lds
test
jnp
sbb
and
outsl
into
rclb
lret
xchg
mov
push
shll
push
adcl
in
jp
sub
jle
pop
sbb
push
testb
outsl
fmull
jmp
add
or
scas
lahf
sbb
lret
lea
fdivrl
js
xor
ret
adc
sub
cld
dec
xor
push
and
andl
mov
arpl
cmp
push
lods
jge
xchg
xchg
push
and
jmp
sti
ja
fwait
mov
popf
iret
lds
fld
and
pop
das
and
mov
jbe
icebp
movsb
jbe
push
arpl
push
xchg
jbe
mov
cmpb
imul
jle
jg
jo
in
pop
xchg
sbb
mov
imul
ret
data16
mov
and
add
pop
xchg
inc
mov
div
xchg
aam
mov
inc
imul
jns
aam
mov
mov
je
xchg
or
imul
shl
or
mov
pop
jmp
dec
test
lahf
mov
inc
dec
or
adc
mov
mov
mov
jno
sub
in
into
pop
pop
mov
sub
hlt
jge
adc
jmp
mov
lret
push
and
lcall
push
rorb
mov
xor
add
push
jmp
cs
jb
loopne
cwtl
or
pop
mov
rcl
jmp
enter
imul
mov
je
leave
inc
mov
mov
and
ja
jge
subl
mov
sbb
dec
sbb
ja
xchg
mov
pop
lods
test
inc
xchg
xchg
mov
xchg
xchg
and
and
xor
push
jge
jns
adcl
sbb
mov
pop
pop
stos
out
mov
cld
or
inc
rcll
xor
cmpsb
mov
adc
fs
hlt
inc
test
inc
lods
add
out
imul
inc
es
out
outsb
pusha
push
mov
pop
bound
ja
int
push
xor
ja
ficomps
push
rolb
imul
adc
inc
rolb
mov
mov
out
jbe
fsubs
jmp
mov
enter
and
pop
inc
in
repz
push
cmp
adc
push
adc
cmpl
mov
mov
xchg
push
inc
sbb
xlat
xchg
or
std
leave
pop
leave
nop
and
and
pop
mov
mov
cmp
push
sub
mov
stos
cmp
inc
mov
push
mov
decb
xor
adc
jecxz
pop
popa
jbe
loope
jne
xchg
mov
mov
ficomps
mov
adc
aad
addr16
jle
lret
push
pop
out
add
repz
jne
je
xorl
adc
jne
jb
mov
loope
ss
mov
dec
inc
scas
aaa
enter
nop
jne
push
bound
mov
out
sbb
inc
outsl
cmp
movsl
aad
scas
and
jl
insl
out
fs
jecxz
pop
and
pop
data16
dec
scas
push
sbb
push
dec
push
enter
push
or
xchg
jae
out
mov
scas
jnp
lcall
enter
test
dec
push
mov
sbb
cmpsl
mov
mov
adc
dec
dec
aad
icebp
cli
cmp
mov
movsl
push
mov
fdivl
jg
rcll
pop
adc
jp
test
push
add
sbb
leave
lret
ja
xorb
scas
xchg
scas
push
divl
iret
mov
adc
and
jnp
sbb
mov
xchg
outsl
ja
push
js,pn
ja
cld
scas
std
xor
dec
ficoms
push
mov
inc
inc
inc
add
or
push
scas
jno
dec
in
mov
inc
push
test
ret
xchg
nop
or
mov
bound
shll
loope
sahf
jnp
sub
and
in
addr16
mov
dec
jbe
jg
or
outsb
xlat
add
ja
jns
ss
sub
mov
aas
sbb
mov
pop
xchg
inc
cmpl
lea
inc
inc
outsb
pop
imul
aas
jle
or
xor
jmp
enter
aad
mov
stos
int
movsb
xor
shll
cmp
or
pop
sub
aaa
push
xchg
add
cld
stos
push
adc
rcll
sub
push
sub
mov
out
nop
call
adc
sahf
jge
sub
jb
xchg
pusha
lods
dec
jne
add
cmp
or
mov
outsb
mov
sarl
lods
mov
mov
pop
mov
mov
push
cmp
or
jge
push
mov
pop
mov
aaa
mov
and
shrl
mov
sub
idivb
lock
in
in
sbb
lcall
and
rcll
jns
popf
pop
xor
inc
lds
cmp
repz
xor
push
push
dec
dec
stos
xchg
sbb
imul
adc
out
adc
inc
outsl
into
sub
xor
adc
cmpsl
mov
icebp
push
mov
scas
sub
push
dec
inc
jno
lcall
scas
nop
mov
and
inc
call
sbb
mov
push
ja
fidivrs
gs
jne
adc
cwtl
adc
push
cmpl
adcl
iret
pop
xor
mov
cmp
inc
xchg
jb
daa
xor
xor
mov
mov
mov
sub
lcall
inc
sbb
cmp
mov
push
aas
pop
inc
popf
mov
pop
std
imul
jg
testl
mov
mov
adc
push
mov
mov
in
inc
nop
cmp
dec
mov
mov
inc
ljmp
add
scas
aas
pop
in
jge
pop
or
aas
sub
push
add
outsl
fistl
xor
scas
lds
jp
aad
rolb
fcompl
xchg
fadds
movsl
out
scas
ja
mov
scas
mov
xor
push
aas
test
rcll
cltd
sahf
mov
mov
adc
xor
adc
mov
sbb
ss
xor
jmp
movsb
sar
push
push
mov
push
add
sub
xchg
push
mov
xrelease
das
mov
mov
lea
aaa
daa
mov
insl
scas
sub
and
pop
jnp
mov
xor
jnp
pusha
pushl
jecxz
jmp
mov
pop
mov
ret
fs
mov
pop
jae
inc
mov
xor
push
jl
pop
bound
push
inc
cmpl
negb
jb
int
sbb
push
xor
fs
jecxz
fildll
jle,pt
repz
sub
fdivrs
and
pop
rorb
call
rorl
or
jl
adc
xchg
sahf
in
adc
jecxz
adc
test
enter
stos
sbb
rclb
repz
pop
ror
fcomps
mov
fistl
popa
push
mov
sbb
jl
or
lds
xor
ljmp
insl
fsubl
inc
repz
mov
jmp
lea
jb
mov
std
inc
ret
push
jne
aad
inc
fwait
scas
cmovns
cmpsb
in
mov
xchg
imul
mov
aad
cltd
mov
or
xchg
xor
lods
movsl
xor
ret
stc
sarl
jmp
int
inc
orb
and
xor
inc
xor
or
sbbb
cmc
xorb
pop
in
rorb
bound
pop
dec
mov
lret
mov
mov
dec
cmp
sub
push
in
adc
loopne
sarl
jae
cld
mov
shll
pop
aad
jecxz
shrl
mov
addb
enter
bound
dec
test
push
adc
dec
ret
cltd
call
lahf
ja
ret
push
mov
cmpsl
cmp
and
and
lods
dec
lcall
loop
shll
lret
jo
ja
clc
jmp
std
icebp
icebp
fmul
jnp
or
xor
popl
dec
in
add
xor
mov
jno
pop
fildll
xchg
test
aad
lds
pusha
adc
push
or
jge
sti
fnstcw
xchg
mov
sub
nop
sbbl
sahf
inc
mov
mov
lods
jecxz
pop
sbb
push
int
out
cmp
push
mov
mov
jns
aad
lock
inc
scas
mov
js
movlps
lret
sub
aaa
scas
xor
inc
mov
insl
cmpsl
aad
ljmp
rcl
jge
loope
roll
push
lods
sti
mov
jnp
add
or
test
jg
jo
repz
inc
mov
mov
dec
push
jnp
neg
mov
fidivl
xor
adc
in
jmp
scas
loop
rcll
cld
lea
int3
or
ss
push
scas
cmc
js
pop
sbb
xchg
xor
sarb
pop
out
mov
inc
xor
sub
rcll
add
inc
cmp
jmp
and
daa
adc
push
push
push
imul
push
stos
xor
mov
push
fildl
push
mov
adc
push
out
fstpl
xchg
xchg
ja
fdivl
add
js
imul
and
mov
jae
movsb
cltd
mov
adc
dec
adc
push
mov
lahf
xchg
pop
dec
adc
int
loop
or
int
aam
pop
in
jo
inc
cmp
pop
loope
sub
pop
out
fcomip
lret
pop
mov
gs
dec
push
daa
lcall
mov
stos
pushf
shlb
shl
psubsb
jbe
lds
jnp
repz
adcl
pop
cmp
popf
pop
or
ret
nop
clc
dec
mov
divb
cmp
ret
adc
in
xlat
out
lret
cld
faddl
sub
cmc
sub
aaa
xor
cs
out
add
stc
lea
or
and
outsl
fstpt
add
bound
lods
push
aas
fimuls
scas
aam
fmuls
jmp
dec
adc
movsl
sub
xchg
test
add
lea
imul
xor
into
xchg
adc
xchg
pop
fcoms
adc
add
ds
sub
fildll
aad
push
or
jmp
inc
sub
in
sub
adc
movsb
sbb
daa
aad
test
jb
stc
inc
mov
ljmp
jl
sbb
aas
mov
jmp
movl
nop
lock
movsl
lods
jns
cs
xorb
pop
iret
add
nop
fisubl
push
xorl
jl
gs
aaa
andb
xor
adc
fisttps
js
pop
jo
jae
loop
xor
adc
dec
fiaddl
or
xor
or
push
or
add
ret
lods
in
push
inc
daa
in
sub
lret
dec
push
mov
dec
xchg
enter
pusha
insb
cmpsb
mov
pop
push
sbb
outsb
ret
lret
jo
dec
push
pop
hlt
mov
fdivrl
xchg
lcall
mov
or
aaa
sub
cmp
hlt
jne
fmuls
loopne
sbb
push
fmulp
xchg
ja
cmp
fmul
push
mov
dec
jmp
pop
push
add
xchg
daa
scas
pushf
and
pop
ss
loopne
iret
gs
nop
inc
popa
mov
push
sub
and
cmp
jle
sbb
ja
mov
hlt
xor
ret
nop
roll
mov
ljmp
pop
daa
insl
push
cld
icebp
rcll
cmp
jns
push
sub
cmp
cld
std
xor
pusha
adc
cld
adc
nop
jmp
cltd
push
xor
mov
mov
movsl
push
jg
repz
lea
aas
mov
dec
xor
cmp
cmp
aam
xchg
mov
xor
xor
and
xchg
push
nop
mov
outsl
lods
pop
icebp
rcll
pop
and
leave
lret
rcl
int3
lds
cmp
popl
xchg
sub
cmp
stos
lret
xor
xchg
adcl
aad
adc
repz
aad
mov
nop
jae
xchg
sub
inc
mov
pop
fwait
ret
jbe
lcall
adc
test
dec
sahf
adc
xor
int
xchg
push
sbb
ja
mov
mov
cs
aad
sbbl
filds
icebp
jno
push
push
in
inc
mov
jnp
mov
lcall
xor
push
add
dec
xchg
cltd
cmpsl
lds
push
mov
mov
mov
cmpsl
out
scas
shll
loop
rorb
mov
cmpsb
test
push
inc
jb
aaa
sub
in
sub
inc
mov
movsb
push
push
push
out
cmp
ja
ja
div
aad
imul
nop
mov
lock
jae
inc
ror
inc
lds
scas
lret
popf
sahf
add
adc
mov
lret
ret
ja
movsb
aaa
xchg
adc
js
icebp
es
jp
lret
sbb
sbb
push
xor
ud0
insl
mov
jle
push
xor
dec
lret
mov
xor
pop
fwait
sub
mov
sub
incl
add
mov
mov
das
mov
xchg
in
or
cmc
jbe
inc
sub
test
cmpsl
adc
test
lahf
in
pop
shl
scas
adc
pop
icebp
dec
adc
push
sar
sub
js
mov
incb
cmp
mov
popf
adcb
icebp
stc
outsb
or
imul
xchg
mov
lret
mov
inc
mov
in
stos
fisttps
ja
cmp
mov
jbe
outsl
popf
sub
push
pop
pop
stos
out
aas
int
mov
aaa
int
pop
imul
lea
mov
pop
jge,pn
pusha
sbb
mov
and
jne
ss
mov
bound
mov
pop
push
push
jb
jl
cwtl
out
xor
std
mov
and
mov
mov
xor
in
sub
cmp
jecxz
cmp
push
sbbb
add
and
push
into
xor
jnp
push
sub
push
into
sbb
push
fdivrs
shlb
mov
jle
xchg
lea
mov
sarb
lret
filds
mov
mov
inc
cld
lea
xchg
push
dec
cmpb
xor
rclb
mov
idivl
sahf
and
cltd
mov
xchg
mov
cmp
icebp
mov
sub
sbb
inc
jmp
push
jmp
std
addl
push
and
imul
cmp
je
mov
add
scas
jns
mov
les
xchg
je
leave
fnstenv
shlb
in
jg
sbbb
push
filds
call
jmp
movsb
mov
inc
and
cmc
push
ret
add
cmp
inc
fs
dec
dec
das
fwait
lock
ja
aam
cmp
mov
jnp
sahf
lcall
nop
rorl
inc
aam
dec
testl
vandnps
inc
enter
lret
push
out
inc
mov
std
lds
mov
sbb
cs
dec
jmp
push
nop
outsl
add
loop
add
rol
pop
lds
idivb
push
inc
adcl
cmp
pop
test
dec
adc
adc
cld
push
movsl
sbb
movsl
mov
shrb
stos
mov
jne
push
nop
notb
ja
xor
add
xor
lea
outsl
repz
xor
sub
js
ja
aad
in
and
push
test
adcb
cmc
out
jae
popf
push
lret
pop
into
iret
push
lock
aaa
in
push
scas
je
xchg
nop
sahf
push
out
aas
int
pop
xor
aaa
das
fdivl
jb
fdivrl
push
test
add
add
pop
shlb
mov
pop
add
push
mov
push
or
shl
mov
stos
outsb
call
push
mov
lea
dec
test
add
and
mov
mov
xchg
mov
scas
inc
das
sub
mov
pop
dec
mov
push
dec
scas
ss
inc
test
sub
enter
inc
add
xlat
into
add
xchg
movsb
pop
dec
cmp
arpl
xor
in
xlat
outsb
add
sbb
cld
sbb
mov
hlt
rclb
mov
movsl
roll
scas
jns
mov
out
fists
add
dec
sub
xor
jmp
bound
push
nop
fisubrs
inc
aaa
fmull
jae
xor
adc
stos
gs
test
jl
push
stc
in
subl
aas
imul
sbb
ss
add
mov
sbb
xchg
sub
adc
sbb
xchg
aam
pop
loope
lcall
mov
sbb
xor
in
or
mov
fs
pop
test
inc
mov
mov
xchg
mov
push
inc
pop
lds
cmp
repz
rol
mov
cmp
ljmp
movsb
jmp
sti
jae
scas
dec
or
xor
mov
push
iret
repz
sub
fildl
cmpsl
scas
dec
fbstp
divl
out
es
sbb
cmp
rclb
enter
filds
dec
outsl
fstpl
lods
out
clc
scas
fisubrs
lahf
lret
or
divb
adc
mov
lods
sub
dec
push
mov
invd
dec
add
mov
fcomi
adcb
and
popa
addr16
js
sbb
xchg
ja
mov
imul
jae
out
divb
scas
push
xchg
mov
adc
divb
sub
orb
mov
sub
push
pop
jo
jl
lock
sub
enter
cmp
inc
int
push
cli
fdivrl
sub
js
ret
iret
add
iret
xchg
sbb
sbb
inc
dec
movsl
repnz
nop
add
nop
add
add
pop
jmp
jns
sti
int
sub
sbb
and
xor
adc
jnp
push
arpl
inc
mov
into
pop
sub
mov
stc
sub
xchg
stos
std
nop
cwtl
adc
dec
xchg
cltd
iret
dec
popa
es
xor
daa
aaa
leave
fldl
jb
pop
inc
popf
cmp
scas
xchg
mov
shl
repnz
pop
jmp
lock
sbb
or
mov
fcompl
or
xor
push
movsl
lock
sbb
in
xchg
jae
in
addr16
cmp
repz
imul
sub
in
loop
dec
sahf
aaa
dec
mov
hlt
jecxz
js
filds
gs
mov
pop
add
sub
outsb
arpl
shll
jns
adc
ds
mov
inc
movsb
cmpsb
push
mov
les
addr16
in
fists
xchg
shll
scas
arpl
call
jg
lret
jo
cmpsl
dec
scas
cmpsb
jp
push
iret
sbb
or
pop
or
cltd
mov
adc
push
fs
data16
xchg
jnp
inc
cmp
mov
fdivr
mov
sahf
dec
in
cld
mov
inc
nop
mov
mov
insb
mov
xchg
jle
xor
xchg
nop
mov
xchg
push
jne
daa
nop
push
mov
mov
jg
ja
lds
mov
adc
hlt
divb
inc
nop
adc
xchg
push
dec
nop
movsl
stc
and
jg
push
nop
pop
adc
xchg
xchg
aaa
pop
mov
shlb
push
mov
inc
push
aaa
ret
outsl
nop
lock
xor
stos
mov
aaa
xchg
aaa
xchg
adc
movsl
xor
repz
xchg
xor
fisttpll
mov
sub
push
mov
outsl
adc
nop
mov
xchg
out
inc
daa
mov
sbb
scas
nop
jns
getsec
addr16
mov
fistpl
nop
movsl
jl
repnz
nop
pop
xchg
in
dec
insl
xchg
lds
mov
cmp
pop
push
iret
mov
sub
movsl
or
mov
gs
dec
imul
add
ss
inc
xchg
pop
lds
lds
push
nop
push
lds
lds
outsb
nop
mov
nop
pop
jle
mov
mov
mov
xchg
nop
push
mov
icebp
mov
xchg
mov
xor
sarl
aas
shlb
cli
cmc
mov
adc
into
nop
repz
push
aaa
leave
nop
push
mov
nop
test
shl
nop
sbb
enter
jge
enter
push
nop
cld
movsl
enter
test
jg
cli
mov
jecxz
or
stos
mov
sub
sub
in
inc
dec
aad
stos
ja
push
mov
pop
xchg
stos
dec
imul
sahf
mov
into
mov
rol
rclb
push
push
jecxz
out
mov
push
jb
xchg
jmp
stos
arpl
scas
push
ret
and
mov
xor
inc
in
mov
adc
mov
imulb
test
bound
mov
aam
mov
jb
in
xor
arpl
xor
push
add
movsl
adc
popf
xor
popf
adc
xchg
cmp
dec
enterw
xchg
dec
nop
and
paddq
addr16
xchg
insl
push
aam
out
jne
aam
jmp
fsubs
insl
push
aam
mov
roll
scas
inc
push
adc
rorl
fadds
aad
les
je
ljmp
loope
mov
shlb
mov
inc
mov
nop
jp
test
nop
enter
or
xor
push
and
adc
addl
dec
dec
hlt
jnp
xor
xchg
lods
pause
push
cmp
out
xchg
inc
inc
jb
test
xor
dec
jo
jmp
scas
dec
adc
fistpll
imul
out
sub
cmp
icebp
fdivr
cmp
mov
mov
mov
cmp
mov
in
mov
ljmp
sub
cmc
stos
xchg
mov
shlb
ficoms
dec
lret
xchg
dec
cmc
arpl
mov
lret
and
sbb
pop
mov
inc
adc
mov
pop
inc
or
and
ss
les
add
sbb
call
push
pop
inc
js
ss
bswap
mov
arpl
call
or
ss
adc
nop
jg
sbb
and
negl
xchg
mov
push
sub
push
ja
push
and
ljmp
outsb
gs
scas
xchg
roll
xor
shll
iret
mov
xor
int
mov
shrb
and
std
or
fdivr
xchg
insl
repz
mov
stos
dec
mov
xor
add
hlt
mov
adc
mov
or
hlt
xchg
xchg
ret
mov
push
lret
fst
cmp
and
outsb
test
sbbl
xor
inc
insl
sub
or
push
shlb
jns
mov
int3
mov
pop
jae
out
ss
dec
ljmp
sub
xor
lds
sub
pusha
in
jb
outsb
push
insl
adc
test
cs
aad
xchg
ja
mov
movsb
cli
jno
sub
push
adc
pop
insl
gs
mov
int
div
or
push
fnstcw
xor
push
fnsave
popf
shrb
lea
repz
lcall
insl
adc
cmc
and
into
daa
cld
push
inc
lahf
sarl
xchg
stos
xchg
aaa
ljmp
dec
push
rclb
push
xor
sbb
inc
xchg
scas
sub
add
int
push
cmpsb
push
inc
pop
fmul
popa
nop
ds
cmp
negl
sbb
mov
and
adc
leave
inc
repz
stos
sub
nop
push
xchg
sbb
fbstp
xchg
pop
sub
xlat
dec
dec
sbb
in
xchg
lahf
das
scas
or
popf
sbb
jb
rorb
sbb
clc
lcall
sub
aaa
pushf
mov
jle
mov
push
insb
mov
adc
push
lahf
out
pop
insl
sbb
fs
ja
jg
pop
push
xchg
and
aaa
add
cmpsl
stc
push
add
jg
inc
or
in
stc
lds
mov
sub
xor
and
xor
lods
jbe
iret
idiv
push
pop
pop
shll
stos
out
out
xor
lds
inc
mov
mov
pop
sub
push
jns
add
arpl
jmp
js
and
sbb
jmp
mov
xchg
fldcw
sbb
push
rcrl
jecxz
fnstenv
int3
xchg
adc
adc
dec
ja
jecxz
mov
das
std
icebp
pop
jmp
cs
nop
mov
cmpsl
xor
pop
mov
loopne
int
jle
popf
pop
sub
xchg
nop
test
loopne
lods
in
inc
push
ss
bound
push
test
sub
leave
pop
ss
fisttpll
jecxz
shl
dec
repz
mov
hlt
js
pop
imul
fidivrs
inc
and
adc
or
mov
push
jbe
ficomps
adc
jno
jbe
js
mov
mov
xchg
mov
int
aad
iret
xor
pop
push
mov
adc
aaa
sub
mov
pop
push
xchg
jge
inc
lods
int3
filds
jmp
ja
clc
sub
dec
das
push
inc
scas
jl
dec
jne
xchg
dec
cltd
lea
cmp
mov
testl
fistpll
mov
outsl
cmpsl
or
popf
jnp
dec
std
or
push
out
into
pop
aas
lds
xchg
adc
imul
push
inc
xor
mov
adc
push
test
inc
pop
imul
push
add
in
inc
lret
movsl
jle
pop
je
outsb
pop
aam
aam
xchg
inc
push
sahf
push
repnz
mov
mov
adc
test
lret
fmull
pop
or
pop
push
mov
xchg
pusha
adc
hlt
sub
sbb
fisttps
je
lea
push
jecxz
pop
push
mov
push
add
mov
push
xchg
pop
xchg
fbstp
jecxz
mov
lds
pop
push
das
fidivs
pop
ficoml
aaa
sub
das
sbb
cmc
push
sbb
rorl
fildl
sub
xorb
pop
js
sub
aam
xchg
sbb
mov
mov
mov
icebp
sub
push
daa
sub
mov
xor
aaa
ds
iret
and
rol
mov
outsb
rolb
incb
adc
cmpsb
inc
inc
pushf
xor
and
mov
into
nop
jo
mov
push
fadd
stc
hlt
aaa
jge
in
stos
pop
mov
mov
and
sarb
popa
push
and
pushf
sbb
out
push
jg
cmp
or
sti
xchg
cmpsl
test
mov
out
push
lods
mov
into
cmp
in
ja
into
push
push
test
dec
fisttpl
daa
ss
stc
jo
loope
sub
pusha
stc
cs
mov
lods
inc
lea
ds
mov
stc
mov
inc
mov
popf
and
cmpsb
adc
mov
xchg
rep
jb
test
loope
cmc
add
cmpsl
lret
es
cmp
jmp
out
push
ds
movsb
cmp
daa
inc
add
sbb
test
mov
outsl
andb
imul
pusha
repnz
push
mov
aad
mov
jo
mov
gs
enter
std
push
fsubl
in
gs
shrb
out
sub
cmp
inc
push
in
xchg
mov
lds
xchg
mov
jb
dec
and
mov
fsts
ja
xlat
notb
cmc
mov
mov
add
ja
nop
mov
mov
ja
movsb
xor
in
and
sahf
fsubrs
hlt
pop
out
repz
in
nop
fs
cmpsl
push
adc
daa
idivl
xor
xchg
jmp
sbb
bound
or
mov
push
dec
imul
adc
aaa
and
push
movsl
mov
cwtl
jecxz
mov
je
dec
insb
push
inc
iret
xor
push
int
popa
xchg
xor
sbb
push
ss
push
mov
test
cwtl
int
sub
lea
std
or
mov
xor
lods
es
adc
push
rorl
movsl
adc
hlt
imul
loope
out
xchg
mov
and
cmpsl
mov
lods
inc
mov
aas
push
cmp
dec
push
test
jl
xchg
xchg
mov
jbe
dec
outsl
data16
sarb
test
push
mov
cmp
mov
nop
scas
or
xchg
mov
cmp
ja
adc
addr16
push
test
lods
push
mov
xor
bound
mov
pop
xchg
leave
pop
nop
dec
roll
xchg
mov
push
ret
imul
jmp
add
mov
sub
rclb
sbb
inc
scas
pop
fxch
jbe
xchg
push
imul
insl
jmp
push
jno
mov
sbb
or
scas
xchg
in
xchg
adc
subb
addr16
pop
jno
dec
in
daa
pop
fwait
ja
push
aam
push
vmovhpd
push
pop
dec
push
sbb
pop
push
pop
sub
add
jb
hlt
fisubrl
sub
nop
or
add
repz
frstor
dec
push
fidivs
dec
test
jle
inc
inc
pop
push
stc
lock
sub
push
scas
xor
stc
fdivrl
sarb
sbb
divb
loope
push
cmp
xchg
sbb
adc
add
jge
int
push
popf
sbb
lret
outsb
dec
xchg
pop
adc
inc
ret
jno
and
sub
dec
int3
push
sysret
mov
sahf
fdivr
push
rorl
and
push
mov
enter
je
fldenv
rol
mov
jbe
sub
movsl
or
push
mov
mov
ret
imul
xor
mov
sbb
into
jge
aaa
dec
jg
jl
bound
jo
jle
jp
jge
pop
lock
jno
dec
test
pop
mov
push
mov
push
xchg
pop
aam
pop
arpl
xor
mov
les
shl
mov
scas
sbb
jo
xchg
jmp
movsl
inc
in
or
xchg
sub
and
dec
aas
jle
std
cmp
das
pop
loope
in
and
xchg
jge
das
mov
shll
lds
sbb
jmp
push
mul
std
push
sub
inc
das
xor
fistl
gs
push
jecxz
sbb
jmp
mov
lods
add
xor
push
leave
add
std
inc
mov
mov
outsl
jle
shr
pop
fldt
inc
jecxz
aas
mov
test
xchg
xor
inc
push
lret
adcl
enter
mov
cltd
pop
add
push
out
jle
aad
movsl
outsl
jnp
dec
xchg
aam
or
int3
std
inc
inc
mov
pop
cmpsb
dec
xor
jg
xor
dec
cwtl
aaa
pushaw
inc
xchg
adc
clc
aaa
jle
xor
push
pop
mov
in
mov
lret
addr16
push
ss
scas
je
mov
push
jg
std
sub
mov
adc
outsl
pop
mov
mov
xor
xchg
jecxz
adc
pop
sub
xchg
push
fnsave
pop
fisttpll
push
xchg
rep
dec
test
and
stc
scas
bound
inc
sbb
xor
pop
mov
mov
adc
or
imul
pushf
in
cmp
loope
xchg
test
jae
scas
xchg
cmc
sarb
leave
pop
ffree
jns
jb
out
xor
xchg
sbb
lods
sub
cmc
cmp
aad
lods
xchg
or
aas
aad
add
xchg
sub
lods
std
rcll
inc
jae
mov
js
imul
hlt
dec
movups
loope
push
push
rcll
rorb
ret
jo
xor
pop
or
inc
stc
loope
mov
sbb
lock
pop
xchg
mov
and
aaa
fsubrl
mov
push
and
test
lcall
stos
or
add
jge
xchg
fnsave
xchg
insb
mov
aas
out
mov
scas
dec
aaa
rcrl
sbb
xchg
xchg
imul
pop
jecxz
ds
aaa
enter
popf
scas
je
mov
xchg
cmp
inc
hlt
stc
mov
cmp
pop
inc
fs
popl
iret
inc
mov
aam
iret
fstl
lods
ret
outsb
or
xchg
icebp
inc
cld
sahf
das
cmc
lock
movsb
mov
sbb
push
push
adc
push
and
cld
inc
jne
mov
shll
loop
fldcw
inc
in
ss
cs
xor
je
mov
mov
fists
xchg
xor
imulb
sbb
mov
push
xchg
imul
int3
loopne
js
test
inc
clts
dec
std
gs
and
pusha
daa
xchg
lock
ds
iret
cmp
insl
mov
jle
in
dec
daa
inc
cs
adc
dec
stos
out
adc
rclb
push
mov
into
out
mov
push
lock
stc
mov
xchg
shrb
pop
cmc
add
das
xchg
in
pop
dec
adc
in
ret
push
mov
test
push
adc
dec
mov
inc
mov
outsl
mov
sbb
aam
orb
xor
mov
sub
das
push
mov
push
aaa
sbb
repz
ret
movsl
mov
dec
loopne
xor
mov
or
aaa
lods
mov
inc
pop
call
test
pop
sbb
pop
repz
nop
pop
dec
lods
test
nop
push
adc
mov
ret
lds
ss
call
lea
ret
jp
outsb
dec
aas
iret
sbb
repnz
add
jg
aaa
nop
sti
push
dec
dec
and
cs
nop
int3
les
xchg
mov
jb
repz
bound
sub
out
mov
mov
xor
mov
dec
ljmp
repz
or
mov
xchg
mov
jmp
ja
or
jb
lea
jb
mov
xchg
jge
lods
push
mov
xchg
mov
dec
jae
ret
push
test
movsb
jecxz
add
push
enter
add
sarb
mov
andb
dec
xchg
movsl
xchg
jle
and
sbb
mov
push
scas
sbb
pop
dec
std
push
ror
test
cmp
inc
push
pusha
pushf
cmp
add
fmul
dec
dec
mov
add
imul
mov
in
into
push
xor
daa
js
jge
add
call
cmc
and
cmpsl
lea
jp
jne
sbb
sub
adc
mov
xchg
sub
leave
mov
mov
test
dec
lahf
sub
js
clc
xchg
daa
stc
adc
fsubl
push
into
cmc
lods
add
xchg
fcmovnb
enter
pop
stos
sub
out
ljmp
nop
xchg
mov
cmpsl
in
stc
testb
subb
sub
fwait
mov
mov
jo
cltd
mov
insb
adc
bound
das
jmp
push
leave
repz
jle
cltd
cmp
jecxz
das
js
pop
stos
add
jbe
std
popf
ror
cmp
push
cmp
aas
out
jne
pop
dec
cmp
clc
btr
inc
lahf
cmp
add
jg
and
ss
inc
scas
xor
fimuls
dec
mov
xchg
and
pop
inc
push
fimuls
jae
lock
jecxz
sub
out
sbb
ja
jne
inc
mov
aam
xchg
or
aas
in
pop
jle
into
dec
push
ss
movb
mulb
test
fmull
mov
aam
in
dec
sub
into
in
in
je
lock
clc
mov
mov
cmp
pusha
sub
adc
loope
xchg
xchg
or
int
out
xorl
cmp
int3
or
pop
cmp
inc
imul
xchg
dec
js
std
out
jnp
xchg
jb
test
mov
dec
push
xchg
xor
and
push
mov
dec
rcrl
pop
xchg
pop
sub
xchg
test
pop
push
push
aad
arpl
aaa
movb
jbe
and
out
mov
fists
jg
xchg
jbe
mov
daa
je
mov
pop
add
push
pop
pop
xchg
lret
data16
pop
push
pop
jns
adc
nop
mov
mov
mov
daa
arpl
nop
jbe
mov
lods
pop
sub
inc
cmpl
inc
jne
mov
nop
add
jae
fidivl
mov
push
adc
dec
push
xor
or
dec
lock
test
xor
lods
push
out
call
jmp
pop
fcmovbe
mov
ja
fists
jb
dec
lods
sub
push
lahf
lahf
xor
dec
les
scas
adc
xor
push
push
mov
enter
inc
cmp
mov
mov
bnd
test
sbb
push
stc
mov
in
jae
daa
test
les
insl
mov
sbb
mov
jge
hlt
add
xchg
dec
pop
mov
xchg
lea
inc
pop
or
jbe
cld
adc
cmpsb
inc
out
ss
push
push
nop
xorb
ljmp
dec
sarl
sbb
pop
inc
or
lea
adc
jno
addl
repnz
add
xchg
jae
xor
jae
sub
xchg
ret
nop
push
xchg
mov
arpl
lea
dec
daa
cmpsb
aas
nop
adc
mov
add
sbb
cltd
inc
inc
adc
jne
mov
or
sub
es
and
fwait
loop
movsl
mov
aaa
xchg
inc
mov
xchg
lea
xchg
push
dec
xchg
lcall
rolb
daa
push
mov
ret
in
adc
bound
jne
mov
lods
inc
pop
sbb
mov
ds
mov
xor
add
fdivp
aaa
hlt
adc
scas
push
adc
in
data16
lcall
xchg
mov
cltd
xchg
pop
les
je
dec
or
push
into
test
mov
xchg
cli
int
dec
loop
nop
mov
nop
jns
xor
or
xchg
cmovb
xchg
add
sub
mov
pop
nop
rol
in
movsl
mov
test
bound
xchg
lahf
hlt
jns
dec
shr
mov
icebp
jg
adc
out
enter
pop
add
mov
outsl
cmc
out
mov
or
out
aas
mov
ja
test
aaa
nop
ret
lods
inc
test
jb
xor
aad
imul
ss
mov
mov
push
push
sub
mov
leave
mov
das
sub
pop
fildll
fs
aaa
nop
test
es
push
cmp
loope
push
sub
jg
mov
adc
scas
push
lahf
je
xchg
adc
push
mov
inc
repz
mov
mov
addr16
mov
pop
push
ss
lds
adc
out
jb
mov
mov
nop
push
mov
sub
fistpll
pop
stos
sahf
std
test
jmp
cmpsb
je
push
std
dec
mov
mov
subb
or
jle
out
mov
jl
dec
loope
arpl
push
nop
jno
mov
mov
push
xor
fcompl
out
int
pop
cltd
xchg
ror
ljmp
push
xchg
test
popa
pusha
push
aas
add
stos
inc
cwtl
xor
jae
push
sbb
mov
fildll
pop
jmp
into
mov
cltd
xor
mov
test
lods
pop
push
cmp
push
xchg
dec
or
jbe
jb
add
xchg
cmp
in
nop
inc
cltd
mov
cmp
jge
xorl
adc
stos
add
hlt
pusha
lea
dec
aaa
xor
push
or
jle
scas
pop
addb
xchg
mov
push
inc
adcb
mov
mov
mov
sub
jbe
jg
or
jae
js
jge
xchg
std
movsl
mov
lret
pop
movsl
into
call
iret
std
sbb
jns
jmp
or
iret
push
jle
mov
push
push
nop
aam
inc
movsb
mov
pop
test
mov
inc
mov
or
shlb
xor
jns
sub
push
xor
mov
testb
inc
lods
addr16
mov
inc
shlb
xchg
push
xchg
fs
inc
inc
xchg
sub
mov
dec
push
pop
dec
push
daa
mov
dec
fwait
push
sub
adc
push
test
das
sub
add
push
xchg
scas
xchg
imul
lahf
xchg
inc
lahf
shlb
out
push
cmpsb
jnp
push
adc
fbstp
stc
std
leave
int
mov
outsb
xor
inc
dec
imul
aad
fcoms
icebp
int
nop
mov
js
enter
es
ss
add
cld
and
subb
int3
nop
jo
jne
ss
mov
mov
push
inc
xchg
stos
push
jmp
sub
jb
inc
loop
das
cmc
sub
test
cmp
inc
inc
je
hlt
iret
mov
std
repnz
cltd
adc
jmp
jle
push
push
popa
pop
jne
les
daa
xchg
push
push
test
mov
or
int
cmc
cmpsl
jns
imul
mov
dec
mov
add
mov
cwtl
xchg
out
push
sub
scas
addr16
push
mov
inc
nop
sub
aaa
imul
mov
movsl
push
aad
cmp
fsubrs
adc
jb
sub
cmp
stos
jle
std
push
fwait
and
xor
adc
mov
mov
aad
or
test
ss
mov
cmpsl
fmul
insb
xor
xchg
movsb
ljmp
sbb
sti
adc
pop
js
call
dec
cs
cmp
cmc
jp
pop
es
sahf
xor
pop
push
loopne
stos
insl
mov
sbb
adc
xor
mulb
mov
sbb
repz
mov
mov
xchg
ljmp
mov
adc
push
xor
js
in
insl
xchg
ljmp
imul
imul
into
mov
or
mov
dec
movsl
movb
fisttpll
arpl
mov
or
sub
inc
stos
pop
pop
insl
repz
sbb
mov
xchg
popf
cmp
rorb
divl
adc
jle
and
mov
xor
test
nop
gs
mov
and
jae
inc
mov
mov
fidivrl
push
pusha
mov
add
add
out
dec
mov
rclb
dec
subb
fcoml
in
addl
add
cmp
je
xor
push
xchg
xchg
mov
and
lcall
inc
ss
lock
push
jmp
mov
mov
xchg
addr16
add
mov
ret
ljmp
dec
or
jbe
jno
mov
fisttpll
sahf
push
repnz
fcoml
dec
lret
add
jmp
xchg
push
andb
mov
sbb
xchg
push
or
xor
sub
adc
dec
push
int
jbe
jns
ret
leave
mov
cmp
xchg
and
xor
mov
test
jl
lods
dec
xchg
sub
ds
clc
test
cwtl
add
sbb
sub
mov
clc
dec
fidivrs
adc
imul
jg
mov
repnz
lods
mov
dec
pop
jb
insb
push
nop
call
aam
adc
addb
addr16
mov
pop
testl
jle
pusha
sahf
lret
jecxz
shll
mov
mov
ja
aas
cltd
xchg
dec
leave
add
dec
pop
js
mov
or
jl
dec
inc
sbb
xor
stos
movsl
and
loopne
test
xchg
cmc
repz
jns
mov
ljmp
xchg
in
arpl
mov
into
xor
pusha
jl
loopne
scas
sbb
std
or
fnsave
cmc
lods
loopne
push
nop
in
fld
sar
in
dec
lock
mov
dec
sbb
xchg
push
pop
xchg
and
gs
test
mov
sbb
xor
int
sub
mov
add
jmp
and
xchg
int3
mov
les
insl
mov
rcll
cmp
mov
sub
and
scas
clc
inc
in
sbb
jno
aad
xor
adc
dec
lods
dec
mov
inc
jmp
std
mov
xchg
push
iret
mov
rcll
int
enter
repz
push
or
push
lds
insl
inc
data16
mov
adc
sub
inc
fcmovne
mov
fcmovnb
inc
push
mov
ret
xchg
repz
sub
mov
sub
pop
in
aam
mov
adcb
lahf
js
mov
push
shll
xchg
rcll
outsl
rorb
lods
enter
pop
push
xor
mov
imul
cmpsb
dec
sbbl
inc
cmp
inc
shlb
push
ss
cmpsb
cmp
inc
dec
mull
mov
je
mov
push
dec
call
adc
xor
test
pop
fdivrl
push
call
das
enter
mov
mov
ret
aam
mov
aad
cmpsl
inc
mov
jge
dec
push
add
dec
ret
fisttpll
mov
imul
test
dec
inc
mov
imul
addr16
mov
loop
jge
aas
inc
push
mov
pop
daa
insl
aas
insb
xor
inc
dec
push
arpl
adc
cmpsb
lods
dec
and
loope
sbb
and
or
std
test
lret
sub
push
pop
sahf
ljmp
pop
xor
and
aaa
push
or
rorb
cmc
fists
dec
adc
stc
lret
scas
mov
shll
and
iret
aaa
cwtl
addr16
adc
iret
dec
adc
inc
mov
or
test
fdivs
jae,pt
xchg
xchg
aas
outsb
nop
push
jae
push
ja
pop
addr16
aaa
and
pop
addr16
popf
mov
decb
ljmp
jae
outsl
fdivs
xor
xchg
sub
aas
shrb
dec
pop
nop
pop
jnp
and
xchg
das
scas
seto
lods
test
jbe
xor
incb
nop
fmull
pavgb
dec
nop
mov
mov
nop
mov
mov
enter
mov
rcll
movsl
aad
sbb
cmp
xchg
dec
sub
in
rcll
icebp
fnstenv
fwait
mov
inc
jb
in
cld
call
nop
xorl
cltd
aaa
in
out
lods
cmp
data16
cli
stos
int
push
inc
push
ja
inc
mov
rorl
xchg
sti
or
pop
add
xchg
and
jno
cmp
jecxz
pushf
enter
loopne
lods
pop
jb
pop
sahf
or
adc
subb
add
push
dec
es
test
std
push
rclb
pop
mov
rorb
mov
cmp
jmp
stos
mov
jbe
xchg
pop
push
js
push
aad
ljmp
jns
rcrb
jne
jle
xchg
pop
push
ds
fistpll
push
fcoml
mov
pop
movsl
in
test
push
fs
mov
push
xor
mov
in
mov
xor
inc
shll
jns
stos
int
nop
pop
xchg
jmp
dec
jno
adc
inc
xchg
rorb
nop
pushl
jecxz
adc
mov
push
loope
lcall
sbbl
mov
push
pop
mov
dec
jp
adc
dec
outsl
mov
push
cmc
cmp
jnp
or
cmp
jnp
push
fstps
lods
or
pop
ss
loopne
xchg
lcall
mov
mov
gs
push
jbe
int
fstps
in
nop
xchg
sub
pop
sbb
push
xchg
push
or
pop
mov
lahf
sahf
cmp
scas
push
scas
decb
les
fldenv
je
movl
inc
scas
jmp
and
mov
jp
jecxz
shlb
mov
pop
mov
jmp
push
inc
pop
sub
mov
sbb
cmp
mov
mov
ja
roll
std
sti
repnz
jle
xchg
int
in
aaa
dec
lds
fnsave
gs
push
xchg
pop
sbb
lea
or
pop
mov
push
sti
push
jg
xor
pushf
sub
dec
sbb
mov
adc
ret
stos
aam
fnstcw
mov
mov
jecxz
lret
sub
mov
mov
ja
je
adcb
add
sub
cld
rolb
xor
cmp
adcb
es
pop
test
or
sbb
inc
adc
inc
jne
push
nop
outsb
lahf
inc
dec
shl
data16
pop
sub
fadds
cli
cmpsl
lea
dec
fstpl
inc
pushf
and
cltd
xor
je
sbb
test
jnp
jae
sbb
sub
xor
hlt
sub
rcrl
repz
inc
jno
data16
rol
jns
out
push
jle
and
adc
jecxz
faddp
mov
js
push
dec
sub
mov
test
psrld
jge
add
je
popf
in
mov
xchg
adc
les
movsl
jle
cmp
ficoml
lret
pop
movsl
mov
mov
mov
bound
stos
and
add
cld
icebp
add
jne
cmp
and
inc
outsb
aaa
aad
sub
cld
pop
insb
ds
hlt
xchg
dec
jp
push
lods
xchg
scas
dec
ss
xchg
iret
jge
pop
gs
xor
xchg
outsl
cmc
std
shrl
push
sbb
push
fsts
jno
pop
xor
dec
test
mov
ffree
bound
movsl
xchg
xor
jae
jns
adc
mov
mov
out
dec
xor
fs
cld
sbb
or
sub
jp
push
addr16
fs
push
sub
scas
in
pop
mov
adc
jns
and
pop
mov
test
cmp
lock
movsl
or
and
fiadds
xchg
pop
xor
jnp
data16
sub
mov
cld
aaa
into
cltd
aas
cmpsb
mov
sahf
add
cmp
jecxz
push
xor
sbb
lret
arpl
orb
push
sbb
inc
mov
rclb
aas
and
gs
jo
mov
cmp
mov
hlt
xchg
lcall
mov
call
jmp
pop
jae
inc
and
or
je
ficoml
xchg
gs
divl
xor
mov
shll
push
sub
sub
aaa
jne
call
jp
mov
ss
and
outsb
adc
jb
xchg
jl
xor
xchg
push
xchg
dec
cmp
aaa
test
je
bound
loop
dec
insl
ss
lock
prefetcht0
mov
mov
test
mov
mov
push
or
in
lods
movl
fsubl
push
iret
out
subl
daa
push
test
mov
jg
xor
mov
lea
rclb
dec
popa
and
push
dec
push
decl
add
xchg
jge
jbe
mov
inc
sarb
add
mov
and
lds
fistpl
inc
push
test
rorb
jne
movsl
mov
loopne
dec
ret
orb
xchg
dec
cs
sbb
fistpll
cld
push
inc
adc
jns
pop
pop
je
push
leave
sahf
mov
in
jb
cmp
mov
inc
ret
inc
and
inc
fsubr
mov
mov
pop
add
push
in
sub
inc
pusha
jecxz
nop
repnz
loop
std
cltd
int
push
lea
jno
lds
sub
push
loop
mov
and
mov
cmpsb
popa
test
push
into
adc
pusha
stos
aad
jg
xor
shlb
xchg
mov
adc
xchg
sub
xchg
jg
xor
jmp
push
jbe
nop
outsl
add
adc
and
data16
mov
ljmp
fistpl
fdivs
out
cld
dec
inc
imul
lea
push
xchg
and
scas
pop
fistpll
pushf
mov
and
mov
xor
xor
xorb
ret
nop
fsubs
add
adc
in
mov
xor
aam
xchg
mov
sbb
xchg
mov
dec
mov
insl
pushf
jbe
dec
ljmp
sub
adc
sub
push
imul
push
push
xor
cmp
rcrb
cltd
and
fwait
xchg
out
into
pop
jmp
out
cltd
push
xchg
rcll
out
lock
or
cmc
push
rcrl
outsl
icebp
call
adc
sahf
test
xor
xchg
sub
popf
repnz
dec
aaa
push
lahf
cmc
mov
inc
xchg
imul
icebp
les
dec
cmp
scas
adc
outsl
xrelease
outsl
mov
ljmp
pushf
mov
shlb
dec
xor
nop
push
mov
or
push
xchg
pop
rcl
mov
mov
fadd
hlt
and
ss
in
es
dec
jno
lcall
inc
jecxz
cmpsb
fs
mov
xchg
arpl
sub
adc
sbb
repz
mov
push
jge
fbld
clc
sti
sti
mov
xchg
mov
stos
jns
mulb
negl
inc
and
adcb
push
inc
nop
jbe
js
sub
enter
lods
test
mov
out
add
iret
jle
mov
cmp
xchg
xlat
mov
inc
dec
movsl
xorl
xchg
ret
dec
mov
xchg
aad
mov
push
jb
mov
push
mov
jle
mov
imul
dec
out
mov
xor
adc
iret
into
daa
cmp
mov
mov
xchg
scas
or
mov
xor
cmpsl
aam
pop
nop
daa
xchg
dec
daa
xchg
mov
in
mov
add
sahf
xor
inc
fcmovb
std
gs
inc
and
jl
leave
mov
push
je
and
inc
xchg
int3
out
repnz
lds
outsb
jae
inc
push
mov
mov
jecxz
out
aaa
inc
xchg
cmp
jmp
js
leave
adc
js
mov
dec
aaa
cmc
or
pop
out
inc
and
jmp
dec
imul
push
test
xchg
lcall
mov
jecxz
jb
mov
insl
vsqrtss
xchg
mov
repz
jno
push
mov
pop
jb
mov
push
jnp
pop
fildl
pop
mov
test
mov
push
jecxz
lea
imul
pop
dec
jo
add
xchg
fistps
hlt
inc
pop
subb
inc
push
sahf
nop
addb
xor
or
xchg
aad
aaa
mov
mov
fisttpl
xchg
adcb
test
aaa
test
jns
dec
aad
testb
rorl
mov
faddl
into
testb
dec
out
mov
mov
imul
imul
fisttpll
test
push
inc
jne
fistl
mov
repnz
ja
iret
jg
mov
xchg
test
add
lock
imul
xor
aad
add
pand
aaa
inc
lods
mov
movsl
xor
sbb
loop
inc
outsb
jbe
mov
fisttpl
lods
and
inc
scas
iret
nop
mov
jl
gs
dec
push
aam
notb
sahf
and
test
nop
insb
xor
adc
nop
inc
ret
add
xor
int
das
pop
mov
ja
push
das
lds
lret
jo
sbb
mov
inc
xor
pop
mov
ret
je
xchg
xchg
mov
xor
lahf
xchg
and
inc
jbe
pop
sahf
xor
mov
dec
out
or
lods
adc
dec
icebp
push
push
ss
mov
nopl
nop
into
cld
mov
vcvttsd2si
sbb
mov
ror
mov
push
sub
dec
cmp
sbb
pop
test
push
adc
and
scas
js
jmp
mov
jne
jb
test
dec
pushf
add
std
lret
mov
lds
repnz
adc
imul
sub
mov
jp
inc
push
in
ss
sbb
push
test
popa
xchg
ja
test
cmpsl
sbb
cmovo
lahf
into
push
test
cmp
pop
xchg
je
add
sbb
mov
int
repz
push
mov
mov
xchg
test
ret
adc
mov
jnp
lock
xchg
mov
xor
push
pushl
sbbb
test
cmp
icebp
mov
mov
push
leave
push
aaa
adc
stos
pop
push
pop
imul
sub
add
andl
jge
in
xor
mul
sahf
aas
shll
fs
mov
mov
cmp
cmc
dec
sbb
or
or
pop
sub
test
mov
jne
test
nop
repnz
int
cmpsb
cmp
js
movsl
xorb
add
in
push
nop
pop
outsl
and
rcl
mov
mov
adc
jge
fists
lods
mov
cmp
cmp
push
dec
nop
jbe
aaa
fstpt
mov
movsb
popa
xor
stos
mov
aam
xor
inc
add
xchg
orl
movsl
jne
mov
xorl
in
pop
inc
push
sub
jle
lahf
xor
in
xchg
scas
in
jbe
mov
sbb
movsl
xor
xor
nop
and
imul
gs
dec
insl
iret
shrl
jo
cmc
ljmp
in
or
aas
mov
sub
cmpsl
scas
nop
lcall
add
test
push
inc
jno
jmp
imulb
add
daa
mov
dec
lock
xchg
stos
int
mov
hlt
aaa
out
xchg
aad
lahf
lret
psubusb
imul
test
loop
ret
lret
jns
call
and
pop
movsl
pop
in
cmp
jbe
jle
adcl
lret
fwait
scas
aaa
and
hlt
inc
outsl
dec
scas
mov
lret
imul
lds
xchg
mov
mov
imul
dec
sbb
push
mov
cmpsl
decl
scas
stc
xor
jne
movsb
xor
or
int
nop
mov
mov
inc
mov
sub
pop
sub
push
mov
test
jbe
cmp
mov
inc
dec
gs
test
adc
testb
push
ss
dec
mov
cmp
xchg
mov
fs
fidivs
aas
jne
shr
sbb
push
cmc
test
lds
sarl
and
out
sti
inc
hlt
sti
cmp
ja
adc
test
shll
fnstcw
outsb
adc
je
push
adc
xor
mov
loopne
jbe
mov
push
jle
lea
stos
ja
pusha
cs
push
xchg
sub
ret
jg
cmp
sub
in
lds
addr16
cmp
jg
lret
xor
mov
jne
mov
mov
jg
xchg
js
inc
stos
jmp
ret
dec
shll
xchg
cmpsb
mov
adc
cmpl
push
pop
outsl
or
scas
pop
inc
fcoms
loopne
pop
and
call
lcall
mov
and
sub
xor
clc
lea
jmp
cmpb
push
mov
xchg
xchg
sbb
notl
call
sti
sti
pop
sub
hlt
adc
ret
xchg
xchg
dec
cmp
hlt
adc
fists
dec
pop
outsl
and
test
xor
fldt
xchg
inc
je
jmp
arpl
gs
jmp
lds
mov
hlt
mov
jnp
test
pop
push
sub
push
mov
sub
push
in
nop
adc
lock
adc
inc
adc
push
pop
repz
outsb
js
mov
cmp
shl
faddl
imul
cltd
sti
aaa
int3
jecxz
test
std
pop
imul
inc
nop
lods
mov
or
mov
mov
outsl
mov
pop
cld
xchg
repz
cmp
out
sub
pop
fbld
mov
nop
inc
or
or
inc
mov
add
imul
or
imul
pop
gs
nop
sbb
daa
cli
incl
pop
mov
xor
inc
mov
jmp
test
rcl
cmp
mov
sub
ret
jbe
adc
pop
xor
lret
mov
dec
xchg
pop
push
ds
sarb
adc
dec
adc
jmp
popa
popf
adc
ja
sbbl
mov
pop
sahf
aam
jnp
in
cmc
imul
mov
and
xor
out
mov
fucomp
jg
pfnacc
xchg
mov
push
sbb
mov
xchg
nop
inc
es
xor
and
dec
or
int
sub
push
loop
sbb
insl
sbb
aam
shrl
mov
cltd
push
and
iret
fidivl
cmp
mov
nop
xchg
rcl
aad
mov
fsubr
mov
ss
cmpsb
pushf
inc
js
shr
lods
sbb
inc
dec
jbe
dec
pop
fwait
mov
mov
iret
dec
sub
cltd
dec
fildl
push
in
mov
mov
mov
sahf
sub
scas
xchg
inc
decl
mov
xchg
fisttpl
push
repz
std
lea
adc
in
cmp
into
aad
pusha
je
movsl
jle
or
imul
fwait
rorb
push
sbb
xchg
aad
push
cmc
jo
orl
cmp
pop
testl
inc
xor
dec
dec
scas
scas
sub
xchg
sbb
jle
sbb
cld
testb
movsl
cmp
xor
out
fdivrl
dec
jnp
hlt
ret
nop
mov
jbe
movsl
cltd
scas
out
imul
xor
jb
mov
and
stc
arpl
imul
testl
push
dec
xor
ret
add
push
mov
fstpt
leave
mov
leave
jo
sahf
dec
mov
mov
divl
shrl
mov
mov
idivb
xchg
add
mov
jg
mov
push
dec
ja
jns
into
adc
nop
push
test
outsl
mov
and
repnz
mov
ror
xor
mov
out
js
test
in
dec
add
xchg
mov
or
sub
icebp
xchg
xchg
fcomps
sbb
jae
xor
xchg
scas
ja
xchg
dec
jecxz
ficompl
dec
push
pop
dec
jne
dec
iret
nop
sahf
ret
sub
xchg
push
mov
xor
adc
into
les
sub
aaa
es
loop
dec
popf
dec
add
push
cmc
jp
into
mov
mov
mov
cmp
in
mov
mov
in
push
mov
ret
dec
add
inc
lret
lahf
lahf
sub
out
in
fsubl
mov
bnd
sub
xchg
and
cltd
mov
ja
xchg
fs
jmp
jmp
push
fistpll
adc
push
scas
sbb
fists
and
push
push
addr16
js
popf
mov
fwait
and
ret
and
pop
loopne
shll
fidivs
cltd
xchg
test
pop
test
loope
out
or
lea
call
mov
iret
nop
das
push
mov
xchg
jb
mov
insb
mov
push
ljmp
pop
rclb
jo
jno
rorl
imul
adc
out
mov
jnp
lea
lods
rorb
ret
insl
sarl
cmpsl
pop
mov
test
dec
sahf
repnz
and
ret
icebp
or
iret
or
repnz
es
mov
adc
scas
mov
inc
mov
notb
sbb
outsb
aam
enter
lods
mov
cmp
icebp
nop
xchg
inc
xchg
ss
sbb
leave
inc
shll
aas
sub
fsubr
sub
jbe
lock
xlat
mul
imul
jmp
hlt
lea
sahf
std
cmp
mov
aaa
jmp
xchg
pop
js
dec
lcall
jns
stc
jge
cmc
or
aaa
pop
fbstp
pop
cli
aad
cmp
cmpsl
lock
jl
mov
cmpsb
aad
dec
ret
fcompl
mov
mov
push
call
adc
jmp
sbb
dec
xor
std
pop
cmp
push
pop
lods
js
adc
adc
pop
or
mov
js
sbb
xlat
jp
jg
sar
cli
xchg
push
mov
mov
mov
movsb
in
push
test
gs
inc
inc
inc
rcll
scas
mov
inc
sahf
cmp
lahf
xchg
xor
mov
movsl
fidivrs
shl
fcmovnb
aad
mov
lods
data16
cmpsb
and
int
stos
sbb
je
in
jae
daa
in
mov
jge
mov
jae
lret
mov
jne
movsl
cmpsl
xchg
mov
mov
divl
movsl
push
mov
xchg
jle
xchg
mov
inc
mov
nop
dec
jp
mov
ret
inc
adc
lods
fcom
imul
fwait
ss
push
iret
sub
aas
fcomip
push
ss
dec
imul
pop
jmp
shlb
cmp
mov
fs
mov
sub
clc
mov
shrb
popf
pop
loope
pop
sub
or
mov
orl
sbb
xchg
push
cmc
mov
lcall
dec
imul
mov
insl
pusha
mov
iret
inc
inc
lea
popa
stos
xchg
ret
mov
repnz
xor
aad
mov
adc
jge
push
mov
into
inc
std
hlt
inc
into
nopl
xchg
pop
xor
das
sbb
int
mov
mov
and
scas
aad
shll
icebp
cltd
pop
xchg
lock
cmpsb
movsl
jecxz
sbb
jne
xchg
fs
mov
push
ror
loopne
aas
test
aam
jmp
cli
mov
jne
and
xchg
mov
into
xchg
pop
and
fstps
mov
lods
adc
call
cmp
lds
hlt
std
cmp
mov
stos
mov
push
mov
loopne
lret
mov
mov
cmp
decl
loopne
repz
test
xor
into
aaa
xor
inc
divb
lds
and
call
jno
or
sarl
dec
icebp
xchg
into
in
lods
iret
push
xchg
xchg
mov
daa
inc
in
dec
dec
test
dec
push
mov
xchg
push
jg
testb
out
cmp
testl
mov
jmp
push
mov
adc
mov
xchg
test
mov
nop
and
push
outsb
xor
sti
outsb
andnps
jb
mov
scas
jle
mov
ds
and
push
and
or
mov
imul
dec
int
addr16
cs
mov
jno
jns
xor
arpl
cmc
loop
std
fdiv
jnp
jle
xor
les
sub
aas
ljmp
and
cli
xchg
mov
lea
cli
sub
pop
test
aaa
sub
push
pop
xor
in
mov
adc
rclb
pusha
stos
and
xor
cmp
xor
dec
inc
xchg
repz
outsl
pop
and
ja
adc
add
cltd
lock
mov
iret
xchg
sbb
mov
dec
dec
mov
mov
test
into
rorb
xchg
jle
jnp
movsl
fabs
jne
sti
sbb
scas
fisttpll
outsl
out
mov
test
push
adcl
sbb
pop
xchg
leave
movsb
xchg
add
jne
or
xchg
jno
ret
lea
imul
iret
adc
test
adc
aas
jnp
pop
jns
cld
repz
pop
mov
adc
mov
xchg
sub
daa
cmp
lods
mov
inc
pop
inc
sbb
mov
pop
adc
xor
xchg
push
xor
lds
inc
sbb
imul
xchg
mov
sbb
imul
pop
aas
pop
enter
mov
mov
sub
bound
leave
xor
dec
sbbl
mov
jb
sbb
xchg
and
addl
cmc
ror
sbb
xchg
cmp
nop
jle
sub
push
roll
lret
in
or
adc
fstpt
inc
xchg
sub
outsb
jns
push
clc
aaa
adc
pop
std
pop
inc
std
push
gs
xor
fdivrl
mov
xchg
jo
xchg
jle
es
xlat
xchg
cmp
mov
shll
inc
sbb
scas
iret
sbb
jl
or
xor
mov
pusha
das
jb
push
jno
aaa
ret
adc
pop
std
mov
mov
push
movsl
test
add
fdivs
mov
sti
pop
mov
cmp
ja
test
push
xchg
fldt
cmp
movhps
push
xchg
inc
jmp
xchg
jg
xor
notb
xor
loopne
push
aad
jmp
sbb
push
fstpt
or
addl
je
bound
adc
jbe
ljmp
roll
iret
jae
dec
push
ss
test
stos
bound
cmp
test
sbb
mov
test
dec
popa
shll
js
fwait
int3
add
push
mov
fsubr
daa
pusha
scas
xchg
xchg
mov
mov
push
iret
dec
sub
jecxz
push
push
push
popl
mov
out
adc
incb
sub
aad
int
xchg
sbbl
sarb
daa
mov
mov
clc
lcall
sbb
cltd
ficompl
fstpl
nop
sub
xchg
push
push
fisttpl
push
add
jmp
pop
lcall
sahf
cld
xor
jns
push
jle
rclb
sub
mov
jp
dec
xchg
arpl
jmp
sub
loope
xor
jno
ja
ret
and
ja
movsb
int3
sub
jnp
push
sbbl
sub
repz
inc
and
decb
fwait
mov
dec
push
lds
lcall
aad
mov
sub
xor
mov
jae
lret
mov
inc
xchg
ja
or
xchg
inc
dec
xorl
lods
sub
inc
mov
fcompl
xor
sti
pop
sahf
xchg
or
lcall
gs
mov
sahf
cmp
pop
out
call
cld
ss
pop
or
fisubs
dec
inc
inc
lods
leave
bnd
gs
ss
inc
nop
mov
adc
mov
sub
inc
aam
aam
fs
fcoml
cmp
test
xor
dec
into
jbe
cmc
into
fwait
pop
aaa
enter
cmpsb
add
fcmovnbe
jge
sub
fidivl
inc
mov
mov
sub
inc
test
loop
mov
inc
push
pusha
mov
xchg
xrelease
adc
inc
filds
aaa
inc
add
adc
sbb
and
js
xor
inc
mov
push
rorl
mov
enter
into
test
push
fs
cmpb
pop
imul
testl
mov
adc
jge
pushf
movsl
push
mov
jo
stos
mov
push
in
xchg
and
add
dec
out
push
and
outsb
pop
inc
sbb
pop
adc
jge
fisubl
test
adc
lock
lds
in
or
push
cmc
stos
aaa
shlb
or
fisttpl
sub
movsl
shl
mov
mov
movsb
cld
adc
push
sbb
call
movl
or
iret
xor
and
inc
call
imul
lods
pop
adc
push
sbb
sub
cli
mov
outsl
mov
push
sub
dec
mov
ss
cmp
inc
gs
lods
lcall
jecxz
xchg
js
in
mov
lcall
loope
and
enter
inc
mov
js
repnz
adc
aaa
shlb
add
adc
lret
mov
js
xor
fcomip
cwtl
gs
gs
out
jb
mov
int
mov
jne
adc
jo
int
and
push
xchg
ja
lcall
or
iret
xor
sbb
jbe
aam
sub
test
lea
dec
nop
xchg
pcmpeqb
adc
inc
jmp
xchg
jae
repnz
js
insl
hlt
scas
xchg
adc
cs
nop
add
inc
outsb
xchg
jbe
xor
or
int
push
jnp
push
movl
adc
mov
mov
xchg
fnstenv
and
ds
inc
hlt
adc
call
or
out
pushf
push
in
push
lahf
mov
mov
or
movsb
std
mov
mov
ja
nop
jle
lea
push
xor
mov
cmp
mov
roll
lret
or
and
pop
movl
dec
jp
mov
or
push
mov
mov
inc
cwtl
rcll
shll
arpl
dec
sub
leave
xor
cli
xchg
jp
jmp
std
pusha
push
push
xchg
leave
mov
xchg
push
mov
xor
inc
sbb
mov
pop
add
mov
adcl
xchg
sbb
and
push
lds
mov
inc
mov
inc
jle
push
and
mov
add
push
sub
in
imul
xchg
das
dec
mov
mov
mov
mov
mov
loope
adc
pusha
cmpsb
sbb
push
nop
outsb
hlt
mov
aaa
lahf
sbb
jmp
in
rclb
dec
addl
jno
call
daa
dec
xchg
sbb
fimuls
sub
lock
cmp
subl
mov
aaa
mov
sbb
inc
test
cmp
sbb
outsl
fsubrs
aam
jecxz
inc
push
jg
xchg
movsl
mov
lods
lret
std
pop
repz
fsubr
out
mov
pop
jne
mov
fadds
into
js
adc
enter
inc
or
xchg
push
adc
xchg
aaa
mov
xor
ds
pushf
pushl
cld
loop
fdivrl
test
or
movsb
xchg
push
nop
adc
cmp
xchg
and
pop
xchg
es
cltd
dec
xchg
pop
leave
ret
pop
jno
or
outsb
flds
popf
jmp
sub
mov
ja
ss
or
fnstenv
sbb
daa
add
clc
imul
mov
mov
xchg
dec
and
mov
adc
daa
repnz
js
push
push
mov
and
adc
jb
add
add
mov
das
fdivl
jnp
push
mov
sbb
push
adc
cli
add
mov
popf
mov
xchg
dec
sub
call
inc
dec
pop
ret
fidivrl
xor
lret
xor
roll
xchg
cld
in
icebp
mov
ja
lret
mov
scas
leave
and
jg
cltd
scas
mov
aas
xchg
js
and
pop
ret
push
loop
test
les
outsl
ffreep
lahf
test
addl
nop
aad
dec
addl
xchg
leave
fisttpll
or
sbb
xor
jp
dec
fadds
insl
xor
leave
inc
js
aas
into
lea
movb
pop
sbb
into
inc
psrlw
rorl
push
jnp
jo
mov
mov
xchg
out
movsl
out
icebp
fbld
testb
sub
pop
std
adc
push
stc
mov
jns
jb
and
ds
lock
enter
or
xor
fsubl
popf
mov
and
adc
test
sahf
lock
inc
sti
out
aam
stc
jg
xchg
neg
pop
aas
mov
sarl
fucomp
sbb
mov
dec
dec
pop
push
sbb
fdivl
push
pop
cmc
inc
push
xchg
mov
ljmp
mov
xor
ret
ds
in
stos
fistpl
xorb
sbb
inc
out
or
out
std
cmp
xchg
out
out
cmp
pop
mov
bnd
fsub
sub
cmp
ds
jb
lret
push
cmp
lods
xchg
dec
ja
pop
nop
sbb
dec
or
push
adc
adc
fidivl
rcll
and
mov
inc
xchg
out
push
divb
sub
nop
and
jns
lods
push
jb
stos
nop
ret
testl
mov
mov
xor
xor
mov
in
or
sbb
add
pop
and
hlt
std
cmp
scas
ds
scas
mov
insl
lea
ret
mov
mov
cmc
xor
sti
fcmovne
clc
adc
xor
mov
mov
xchg
inc
push
jno
stc
jb
loop
pop
mov
stc
shl
xchg
mov
sbb
push
ret
add
test
dec
xor
and
lds
jecxz
mov
xlat
adc
cmpsl
sub
fstpl
arpl
xor
push
sbb
cmp
push
jp
pop
iret
rcl
shl
loope
or
imul
pop
popf
add
mov
sbb
push
xor
insl
repnz
fdivl
push
std
sbb
cltd
mov
ss
mov
xchg
iret
add
aad
and
add
mov
scas
js
push
pop
mov
addb
scas
leave
out
scas
and
jl
jp
int
stos
xor
add
pushl
sub
add
nop
dec
push
sbb
loope
and
jns
push
lock
out
mov
or
pusha
aaa
out
les
cltd
xchg
jg
mov
xlat
mov
fwait
scas
mov
mov
nop
and
jbe
je
shll
test
cwtl
mov
dec
mov
rcr
and
jl
enter
inc
sbb
test
shrb
pop
aad
lcall
jecxz
xchg
and
cmp
inc
push
sbb
cwtl
movl
mov
out
mov
or
ret
adc
pop
inc
xor
and
push
cmp
lret
fnstenv
sub
dec
add
mov
push
cld
sbb
adc
push
jg
jne
scas
adc
outsl
popf
jp
jg
adc
aaa
xor
xchg
flds
xor
xlat
loope
jp
dec
js
mov
shll
shl
rcll
jns
and
cwtl
loope
hlt
out
push
sbb
scas
adc
jp
orl
push
into
cmp
mov
das
aad
add
fistpll
test
push
pop
mov
jnp
fldt
cmc
fucom
pop
daa
dec
daa
data16
paddq
pop
lea
ljmp
add
sub
cmp
std
add
aad
scas
out
jmp
sub
xchg
adc
fisttpll
jne
iret
dec
mov
fimuls
lret
lds
xchg
jnp
ja
test
mov
xchg
jmp
jecxz
jecxz
ficoml
les
lret
push
in
push
out
pop
ror
sbb
and
les
hlt
adc
in
stos
icebp
xchg
xchg
fsub
hlt
cli
enter
nop
dec
jns
cmpsb
sbb
or
dec
adcb
jl
shrl
mov
mov
sahf
nop
push
cli
mov
sub
xchg
sbb
repz
mov
jns
dec
lret
push
std
sub
adcb
sub
jmp
xor
push
cmc
fldenv
insl
sub
lods
jecxz
mov
lods
adc
inc
push
jno
push
or
dec
push
cmpsb
pop
test
call
fnstenv
cld
push
xchg
imul
mov
cmc
xchg
xor
xchg
and
push
aas
outsl
jmp
sbb
out
aam
imul
gs
mov
mov
aad
jecxz
mov
lods
mov
push
xchg
mov
xchg
mov
jp
aam
and
movsl
mov
repz
lret
fistpll
sbb
jg
or
mov
scas
cli
cmc
sub
ss
rol
jg
pop
stos
inc
sub
nop
insl
imul
test
inc
and
xchg
and
adc
jmp
or
inc
mov
push
scas
or
xchg
addl
ret
insb
test
mov
jp
jns
and
dec
das
cmp
xchg
push
add
lea
cmp
das
sub
jp
iret
or
pop
dec
movsl
xchg
pop
xchg
mov
bound
xchg
in
mov
mov
int
push
enter
jne
popa
push
xchg
sbb
ret
decl
leave
dec
jg
lds
dec
dec
jle
jge
dec
sbb
dec
les
xchg
rorb
lds
ror
jo
or
sti
xchg
jne
popl
jg
dec
sahf
daa
cltd
jecxz
aad
jo
mov
mov
or
fs
and
stc
add
or
dec
cld
xchg
jg
or
in
xchg
into
pop
adc
xorb
cltd
adc
cmpl
pusha
push
pop
nop
scas
or
gs
jne
iret
sahf
nop
and
fdivrl
jnp
sahf
or
push
mov
ret
dec
aas
andb
mov
dec
aad
icebp
cmpb
rcrl
aam
mov
nop
jg
outsb
mov
loopne
inc
sub
mov
push
aam
mov
ret
or
adc
scas
mov
add
in
icebp
adc
into
pop
pop
inc
mov
xchg
andb
int
cmpsl
lods
ja
pop
mov
sbb
outsl
mov
rcll
adc
push
xor
mov
in
ret
aam
repz
adc
aam
addr16
lock
les
mov
push
or
push
add
and
mov
mov
add
mov
jae
lahf
and
inc
sbb
inc
and
inc
sub
inc
xor
inc
cmp
inc
inc
pop
nop
addr16
mov
cmp
jecxz
rorb
cltd
lahf
flds
push
jnp
dec
dec
sahf
in
les
fistpll
xlat
push
clc
pop
jmp
or
nop
push
jg
xchg
inc
aaa
sbb
int3
mov
andb
mov
mov
loope
mov
pop
std
fstps
das
sahf
popf
push
shll
pop
idivb
ret
pandn
xor
jecxz
js
pop
push
popf
jne
nop
insl
or
in
xchg
stos
loope
mov
jns
fbstp
shl
and
dec
daa
sbb
inc
rolb
nop
outsl
lret
jl
cmpsl
sbb
dec
cmp
xlat
hlt
lds
ret
std
adc
iret
hlt
stc
adc
mov
int3
jnp
testb
stc
ret
mov
jmp
loope
mov
rcrl
pop
pop
sti
rorb
pop
pop
push
pop
mov
mov
xchg
xchg
aas
dec
notb
lods
in
xchg
out
je
jo
xchg
lea
insl
aad
test
loope
shll
ror
ds
jmp
shr
sub
aad
leave
pusha
mov
dec
inc
ds
scas
stos
and
ljmp
mov
fcom
xchg
aad
mov
scas
add
mov
rcll
pushf
cmc
pop
mov
jns
sub
test
push
mov
lret
cmc
sub
dec
mov
mov
and
xchg
outsl
or
stc
inc
iret
testb
nop
stc
int
mov
std
xchg
jecxz
aaa
jle
test
lock
rcrl
mov
fdivrs
nop
cs
mov
cmp
pop
sub
rcrb
outsb
fdivr
adc
inc
mov
mov
notb
scas
xchg
pusha
lds
inc
mov
sub
dec
mov
iret
gs
mov
iret
in
push
xchg
repz
in
or
mov
adc
leave
icebp
mov
scas
add
push
loopne
inc
orl
xchg
fsts
push
xchg
shlb
jl
xorl
cmc
xor
lds
mov
call
scas
int3
dec
iret
mov
inc
xchg
clc
sbbl
mov
aaa
push
xchg
xor
cmc
movsl
es
stos
inc
mov
xor
arpl
mov
xchg
fdivr
aad
nop
aas
pop
dec
div
jbe
push
lret
pop
into
lods
jo
popa
lret
mov
fsubrs
test
ss
lret
in
sub
in
sahf
movsl
xchg
xor
inc
dec
and
push
cmc
js
xchg
cmpsl
addr16
std
movsl
push
add
cmpl
lds
divl
nop
int3
xor
inc
mov
mov
mov
xor
pop
jo
push
mov
cltd
incl
adc
decb
push
daa
jns
scas
dec
jb
aad
pop
xchg
mov
test
orb
add
xchg
movsl
pop
adc
sbb
push
sbb
mov
xchg
stos
jl
insl
mov
setl
jbe
sarl
mov
push
jbe
cmp
adc
stos
cmpsb
loop
jp
mov
iret
pop
and
mov
pop
mov
and
scas
call
pusha
scas
flds
sbb
test
fistpll
into
dec
pop
lahf
sub
jmp
rol
jle
int3
jl
sbb
jl,pn
lret
mov
lcall
adc
aas
and
ljmp
rcr
fwait
stos
mov
mov
push
vandps
int
sub
mov
negb
pop
push
pop
xrelease
push
inc
call
in
ret
mov
inc
bound
push
xor
xchg
neg
jmp
ja
shrb
test
dec
pop
imul
int
bound
pop
push
cmp
sahf
fcmovb
nop
std
out
mov
and
sub
sub
mov
or
mov
lahf
mov
in
cmc
lahf
xchg
dec
cmp
mov
pop
loop
dec
rcrl
orb
push
xor
dec
cs
lret
lcall
outsb
push
aaa
sub
aaa
repnz
and
inc
adc
dec
in
repnz
jle
dec
hlt
mov
fcmovnbe
mov
pop
add
ret
push
rcrb
aaa
xchg
xchg
fsubrl
ret
imul
xchg
mov
jp
mov
xor
ljmp
adc
mov
sbb
nop
sub
adc
push
pop
aas
sub
int
xchg
pop
sti
lds
in
test
mov
lods
ja
out
mov
jge
push
cltd
aaa
mov
iret
outsb
scas
dec
mov
sub
cld
add
daa
in
test
push
jae
and
movsb
mov
jno
sub
xor
cmc
leave
adc
push
mov
mov
addr16
js
jno
mov
aad
jmp
pop
cwtl
scas
mov
sub
sub
fistps
cmp
xlat
leave
mov
nop
jle
imul
pop
nop
mov
pop
insl
or
and
lods
in
jno
ret
test
daa
ja
xor
add
sub
mov
je
pop
and
jae
xchg
mov
rcll
dec
xchg
lds
inc
lret
add
nop
mov
lahf
scas
adcl
push
adc
pop
imul
fldt
xor
lods
or
cmpsb
imul
mov
adc
push
dec
out
pusha
popa
lret
push
sbb
jmp
dec
jbe
push
lods
mov
insl
nop
xor
mov
xchg
ret
add
cltd
stos
lea
adc
jae
xchg
add
mov
jae
leave
pop
cwtl
negl
mov
adc
pushf
gs
add
or
hlt
lds
pushf
cmovs
mov
scas
jp
shll
out
aaa
inc
test
adc
sub
ja
testl
enter
mov
sub
jge
ljmp
cmp
push
and
lret
outsl
push
aas
sbb
sub
or
into
rol
inc
adc
mov
pop
std
cltd
sub
xor
mov
loope
ret
hlt
dec
aaa
adc
stos
jne
xor
add
mov
xchg
shrb
scas
and
mov
test
lods
and
jbe
icebp
push
jecxz
push
divb
add
add
pop
push
test
mov
pop
outsl
jp
inc
xchg
mov
sub
mov
mov
mov
sub
loop
aaa
nop
xchg
out
sbb
and
push
bound
xchg
dec
inc
aam
shl
in
xor
cmpsb
jl
movsb
cld
pop
push
out
mov
cmp
sarb
xchg
ss
push
sub
scas
jge
orl
js
sub
inc
dec
cmc
sbb
sti
movsb
sahf
in
jne
sbb
loop
xchg
in
xchg
movsl
mov
xchg
push
vmovsd
fnstenv
push
shlb
imul
addb
enter
arpl
stos
and
adc
fldl
popf
aam
xor
jp
sub
in
jg
jmp
push
addl
inc
push
pop
ret
push
adc
pop
jo
inc
inc
pop
or
lret
jnp
bnd
addr16
pop
and
das
hlt
mov
ja
mov
sbb
xchg
inc
dec
stos
fsubs
ja
cmpsb
out
cmp
fsubs
imul
and
jo
dec
xor
lods
gs
add
pop
scas
movsl
neg
mov
jbe
jb
arpl
loope
aad
mov
xchg
iret
cmpsl
dec
ja
nop
enter
in
push
pop
mov
cmpsl
daa
loope
mov
add
stos
xor
test
pop
rcrb
adc
test
call
scas
xrstors
xchg
sub
ljmp
decb
icebp
push
nop
repz
bound
xor
cld
jg
lds
adc
ret
mov
push
inc
mov
mov
add
into
xor
mov
test
iret
pop
int
cmpsl
jnp
aad
das
in
aad
fistpll
mov
mov
ficomps
out
aaa
and
lock
pop
add
rclb
aam
inc
mov
add
xchg
mov
imul
in
push
out
cmc
aaa
and
lea
mov
pop
push
jg
int
jle
cwtl
pop
ds
enter
inc
aad
ljmp
cltd
cmc
in
mov
popa
and
xchg
mov
stc
lock
inc
lds
mov
lds
jno
xor
mov
stos
aad
roll
test
xor
sub
xor
lods
jge
popf
aaa
les
inc
inc
in
and
lds
xchg
jae
xchg
push
mov
dec
xor
push
xor
mov
fstps
mov
sbb
out
movsw
push
sbb
int
adc
stos
decb
fwait
mov
lea
push
in
adc
pop
mov
imul
test
das
repnz
mov
xchg
lods
dec
xchg
inc
adcl
adc
nop
xchg
addr16
cmp
insl
int
out
mov
nop
aas
aaa
in
ja
rclb
dec
jns
push
stos
fpatan
and
test
pop
mov
push
xchg
inc
iret
test
test
iret
adc
imul
jecxz
push
sub
xchg
push
mov
mov
lods
daa
dec
adc
inc
arpl
mov
ret
nop
sub
cltd
sub
pop
push
icebp
mov
push
nop
jb
add
rorl
int
push
xchg
out
adc
xchg
test
add
movsb
sub
loope
sbb
mov
xor
movsb
fdivl
popf
out
xor
cmp
dec
mov
aaa
xchg
aas
movsb
test
adc
xor
pop
cmp
jmp
cmp
sahf
test
push
lahf
mov
bound
xor
jbe
sbb
fidivl
mov
lahf
mov
push
aad
or
inc
fidivrs
aas
or
mov
jmp
and
mull
aam
int3
sub
cld
lahf
push
call
enter
jecxz
cltd
aam
lods
jo
negl
js
negl
adc
push
jo
mov
out
pop
cmp
xor
mov
bswap
mov
out
int
dec
jbe
or
fisttps
mov
test
inc
jecxz
xchg
or
call
pop
pop
mov
xor
loopne
adc
repz
and
push
repz
loop
jle
jge
ret
loope
or
stos
cs
push
sbb
xor
scas
sbb
adc
or
outsb
lods
sbb
pushf
in
push
stos
setns
cs
cmpsb
cld
aam
pop
mov
mov
jmp
adcb
jge
cmp
pop
aad
mov
fnstenv
push
stos
clc
jbe
sbb
out
mov
leave
jo
insl
mov
inc
sbb
into
lods
jo
aas
jnp
pop
nop
pop
fildll
lods
push
or
mov
mov
xchg
xchg
aam
jle
sti
mov
aas
sarl
add
jle
push
push
cld
mov
fadds
mov
push
cmpsl
imul
or
stos
out
push
dec
adc
repnz
push
sub
dec
imul
inc
sarl
daa
cmp
xchg
dec
popa
cmc
stos
test
jbe
movsl
imul
out
mov
dec
sahf
call
pop
or
sub
out
push
fnstenv
xchg
bound
rorb
mov
push
pop
mov
aam
jge
xor
fmuls
adc
dec
sub
and
lcall
jno
xor
in
mov
xchg
inc
popf
nop
sbb
lock
mull
add
shlb
aas
xchg
xchg
sbb
jns
sub
pop
jae
leave
cli
jecxz
lea
shr
push
nop
push
inc
mov
dec
aam
mov
mov
push
xor
cmp
nop
xor
std
adc
dec
xorl
mov
cmp
dec
adc
mov
jmp
push
sbb
test
mov
sub
mov
push
add
imul
sbb
lahf
daa
mov
js
test
inc
dec
and
addr16
xor
hlt
cmpb
or
jecxz
cmpsl
sub
scas
mov
lods
inc
test
xchg
adc
add
mov
push
out
popa
mov
mov
sub
fcomps
xchg
mov
adc
dec
sub
std
inc
push
mov
push
jmp
push
xchg
in
test
aad
sub
or
jne
mov
jl
movsb
and
mov
in
mov
scas
lret
mov
cwtl
pushf
movsb
aaa
xchg
ja
arpl
cmp
leave
dec
jmp
rcrl
sbb
add
jecxz
xor
jbe
iret
or
fstp
mov
nop
jmp
int3
sbbl
cmpsb
mov
ret
pop
outsl
popf
movsl
mov
cmp
ljmp
insb
mov
jae
scas
mov
mov
mov
out
push
ja
mov
daa
mov
popf
loop
loop
aaa
out
outsb
in
repz
inc
cmp
jbe
jae
sahf
sbb
iret
or
lds
mov
and
lahf
shll
les
lahf
lock
jbe
push
inc
xchg
jnp
enter
outsl
shl
stos
adc
stos
fiadds
mov
mov
stos
mov
js
js
xor
mov
bound
mov
add
push
adc
add
fs
dec
xchg
nop
push
inc
lods
xchg
into
mov
scas
sbb
inc
and
sbb
adc
mov
jg
sub
or
shl
std
fldt
pushl
mov
sbb
int
aaa
ds
popa
ja
scas
mov
in
enter
push
sbb
adc
push
mov
je
push
lea
cmp
mov
xchg
inc
xchg
jmp
std
sti
dec
aad
ljmp
pop
inc
xchg
cltd
mov
mov
and
hlt
cmp
lret
subb
lock
out
and
mov
aas
aad
push
pop
leave
push
cmp
xchg
mov
xor
in
mov
mov
out
mov
insb
lds
shrl
adc
push
pusha
sub
sbb
das
dec
adc
mov
aam
inc
dec
dec
mov
mov
sahf
bnd
xor
aas
mov
jnp
push
xchg
pop
adc
sub
xchg
mov
mov
or
pusha
sub
dec
mov
mov
mov
xchg
shll
mov
jle
and
icebp
xor
cmc
jl
sti
loop
lret
xchg
pop
cmp
push
adc
cmc
push
xor
cmc
int3
push
inc
xchg
add
cmpsl
mov
shl
jnp
mov
sbb
sbb
addr16
ror
hlt
call
outsb
repz
leave
daa
push
sub
adc
inc
sbb
xchg
inc
sub
roll
lods
adc
out
pop
sbb
lock
cmp
mov
scas
dec
ja
aam
testb
scas
ss
xor
mov
add
aam
cmp
jg
shll
xor
aaa
cld
xchg
sub
sbb
ffree
xchg
cmp
mov
dec
idivb
mov
fiadds
pop
push
push
adc
jle
pop
ds
or
jns
add
mov
movsb
mov
lods
add
insl
fcompl
mov
gs
cmp
es
xchg
cmpl
jl
mov
test
xchg
imul
scas
in
mov
dec
shlb
cmp
add
xchg
xor
xchg
mov
js
push
xchg
imul
mov
pop
pop
iret
fisttpll
xlat
mov
popa
rclb
fildll
jl
sbb
dec
dec
fcmovnu
loopne
inc
sbb
rcrb
dec
out
mov
or
jae
mov
pop
jmp
adc
mov
ffreep
mov
iret
mov
loopne
push
nop
aaa
sub
cmc
rorb
mov
orb
sbb
mov
inc
shll
pop
mov
dec
jmp
cmc
inc
cmp
inc
insl
sub
pusha
jns
stos
push
pop
xchg
sub
aaa
inc
ljmp
fstpt
xrelease
out
dec
and
or
int3
fcoml
fisubrl
rorb
sbb
or
movsl
cmp
pop
pop
ss
inc
jo
sbb
push
and
je
sub
ss
imul
test
add
jge
lcall
aaa
adcb
dec
xchg
push
inc
and
xchg
das
cld
aam
repnz
adc
sub
add
xor
pop
aad
mov
mov
inc
mov
iret
pop
xchg
cltd
subl
aaa
mulb
imul
scas
scas
push
movsl
xchg
sub
jg
aaa
in
jl
cwtl
xchg
sbb
inc
jg
dec
or
jmp
js
xchg
sbb
ror
stos
data16
dec
mov
out
rcl
adc
cmp
mov
xor
pop
adc
icebp
sbb
xchg
test
dec
js
mov
lods
out
iret
sbbl
ror
aas
jno
dec
add
je
sbb
and
sbb
push
data16
cmp
iret
push
imul
cmp
je
ja
pop
push
mov
jnp
js
mov
xchg
cmp
mov
sub
nop
add
sub
pushf
inc
lds
imul
xor
adc
cmp
push
adc
jae
dec
mov
aaa
insb
aas
std
mov
push
cmp
insl
divl
inc
lds
adc
imul
lahf
ds
shl
sub
xor
iret
xchg
shlb
mov
imul
mov
aad
flds
in
mov
cltd
mov
mov
scas
stos
pusha
and
xchg
add
xchg
inc
repz
jp
push
add
movsl
aad
add
sti
popf
jo
jne
in
pop
xchg
mov
xor
xchg
inc
sbb
sub
inc
mov
dec
jecxz
ja
mov
enter
and
imul
pop
ret
push
dec
ss
jecxz
mov
xor
js
sub
pop
aam
gs
mov
xchg
loopne
xchg
fcoml
ljmp
inc
out
push
sahf
movsl
cld
pop
cmpsl
push
jbe
fcomi
testl
lods
notb
mov
mov
or
inc
int
jle
imul
shrl
xorl
out
xchg
xchg
js
cmp
dec
dec
rorb
nop
cld
sbb
mov
stos
jb
jne
jbe
mov
in
add
bound
aas
nop
stos
daa
and
adc
lahf
jbe
inc
jle
in
rcrb
lahf
jnp
dec
dec
nop
mov
mov
aaa
stc
mulb
out
lds
int3
mov
lea
out
xchg
arpl
aad
movsl
cmpsl
mov
sbb
add
ja
push
loop
call
stos
xchg
pop
lds
pop
inc
adc
mov
mov
jecxz
int3
xchg
jbe
sub
pop
js
dec
into
pop
mov
addb
inc
xor
repnz
sub
add
xchg
add
fldenv
sub
aaa
lcall
aas
test
jle
cltd
repz
test
jmp
popf
jge
mov
stos
cmp
jmp
dec
inc
bound
sub
sub
push
cmc
inc
xchg
int
dec
mov
sbb
leave
xchg
push
xor
inc
insl
sub
lods
arpl
mov
aas
mov
mov
or
testb
int
iret
mov
loop
xorl
and
jbe
movsl
pop
les
fdivr
in
mov
pop
mov
push
sbb
shll
push
sbb
and
ffreep
push
push
sbb
scas
test
nop
outsl
inc
pop
inc
cmpsl
adc
sahf
decl
add
out
stos
push
movsl
sbb
mov
adc
sub
push
cmp
dec
and
dec
pusha
add
sti
add
scas
xchg
iret
imul
fsts
cmp
inc
dec
nop
and
movsl
fwait
call
das
mov
mov
mov
xor
mov
mov
inc
jp
xchg
mov
lods
adc
repz
or
add
jl
mov
lcall
inc
jmp
dec
js
adc
mov
fsubrl
adc
ja
xor
js
sub
test
test
stos
cld
shlb
mov
in
and
mov
xchg
outsl
mov
shlb
sbb
pop
mov
js
or
into
push
aaa
push
mov
xor
push
add
push
fbstp
ss
aas
test
into
cli
push
mov
cld
out
and
xchg
mov
cmp
outsl
mov
out
int3
push
mov
cmp
cs
xchg
sub
stos
in
int3
mov
in
fldt
jno
mov
addb
daa
inc
cmc
scas
lds
nop
xor
mov
je
pop
bound
pop
lret
stos
dec
push
sti
jmp
pushl
jnp
mov
push
xchg
mov
cmpl
cmpsl
aad
test
jo
pop
xchg
jmp
mov
scas
das
jae
inc
daa
mov
cwtl
mov
int3
adc
mov
testb
mov
dec
leave
ss
push
cmpsl
mov
mov
ss
dec
push
fidivs
push
adc
jg
mov
insb
push
scas
or
cmp
sbb
lea
test
stc
cmp
dec
jmp
xchg
dec
js
sti
int3
dec
mov
sub
rorb
xchg
push
sub
inc
push
pop
adc
les
jnp
dec
icebp
dec
rol
movsl
and
push
mov
out
movsl
test
and
aaa
mov
popf
mov
pop
jae
jmp
ds
pop
mov
adc
xor
dec
dec
mov
sbb
dec
dec
xchg
es
and
int3
leave
loope
lret
pop
inc
ljmp
stos
sahf
adc
add
pop
lds
inc
sbb
add
xor
js
jnp
aas
cmp
push
or
sbb
insl
mov
flds
inc
pop
loope
pop
or
es
in
cs
fidivrs
lahf
pshufw
inc
daa
or
mov
movsl
js
lret
les
sub
dec
mov
loop
cmpsl
dec
mov
out
xorb
pop
push
icebp
push
nop
xchg
lods
das
mov
hlt
mov
inc
and
jae
clc
ret
sub
leave
cmp
xchg
jge
push
je
pop
cmpb
data16
push
mov
imul
mov
sarb
push
addr16
dec
inc
jne
sahf
mov
lret
outsl
cmpsl
pusha
pushf
mov
and
add
push
cs
cwtl
lcall
mov
cmp
sbb
xor
jbe
cmp
je
movsl
movsb
dec
and
dec
lret
mov
les
xchg
shrl
les
ss
gs
xchg
jnp
outsb
push
fmul
jbe
lds
fmuls
shll
push
or
pop
leave
jle
lea
push
xor
scas
mov
adc
jmp
aas
jle
and
sbb
subl
and
mov
add
stos
mov
or
dec
jmp
mov
cmp
orl
cmc
push
sarb
xchg
pop
mov
xor
mov
xchg
ss
jae
je
pop
popa
out
sti
mull
f2xm1
fisttpl
out
xchg
sbb
pop
movsl
sbb
sub
nop
shrb
push
jne
add
sahf
loopne
pop
cld
and
or
dec
jle
jo
sbb
jmp
cmp
mov
add
xor
push
push
insl
outsb
xchg
mov
lahf
cmpl
shll
adc
and
sti
test
mov
outsl
xchg
mov
add
mov
cmpsb
jecxz
pop
xchg
and
aad
mov
cltd
push
out
jnp
push
jns
pop
fnop
mul
sbb
xor
xor
sub
push
dec
add
lcall
pusha
push
mov
std
ret
lds
cmpsl
push
pop
fld
xchg
lea
lods
ret
jnp
aaa
push
xchg
lods
das
neg
pushl
push
or
xchg
pop
pop
xchg
gs
xor
sub
pop
jbe
lahf
lea
insl
sub
cmc
mov
mov
mov
inc
pop
outsl
daa
mov
push
xchg
mov
insl
mov
loope
jl
loopne
mov
cmpsl
insl
lods
test
aad
arpl
movsl
fs
pusha
sub
ficoml
xor
pop
push
jge,pt
mov
call
jbe
aad
push
mov
push
jo
cmp
daa
jmp
adc
cltd
mov
sbb
add
jo
mov
sub
mov
cmp
cmp
mov
xor
jae
scas
scas
dec
fsubs
dec
movsb
aam
repz
enter
sbb
into
dec
mov
subl
mov
sbb
sub
das
les
cmp
push
lea
push
ficompl
cmp
and
js
cmp
mov
movsl
ljmp
or
out
mov
xchg
xchg
mov
cmpsb
push
add
add
and
jnp
ret
jo
std
push
mov
aas
aad
and
lock
in
mov
insl
std
lods
adc
daa
cmc
or
inc
mov
test
dec
cmpb
push
sub
test
into
ja
test
stos
ss
and
cmp
nop
jle
dec
mov
jmp
aas
daa
daa
dec
adc
ret
jbe
sti
lea
sub
jns
jne
lods
xchg
mov
push
dec
das
mov
stos
mov
mov
jns
ret
dec
lods
pop
mov
sub
push
jnp
xor
pop
into
push
int3
arpl
xor
jp
adc
jl
mov
int3
pop
sbb
andb
mov
pop
add
sub
nop
add
mov
imul
or
jle
jae
testb
push
sub
mov
add
push
hlt
and
dec
push
inc
ret
xor
rol
jno
mov
cwtl
test
xorl
dec
mov
lahf
movsb
inc
test
and
aad
xchg
push
inc
dec
ss
testb
mov
push
insl
call
push
push
aaa
xchg
das
push
jle
popl
nop
int
jno
lock
loopne
sub
pop
mov
sbb
cmp
aaa
repnz
sahf
xchg
les
or
sti
fs
xor
scas
fwait
jp
movsb
daa
xchg
ss
mov
les
lcall
std
int
push
mov
hlt
lret
or
iret
or
push
mov
xor
lahf
and
xlat
hlt
jge
inc
call
hlt
insl
mov
cltd
push
mov
inc
subl
stos
mov
pushl
inc
mov
cmpsb
aad
rorb
lea
or
in
int
push
xchg
cmpsb
jns
ret
push
sub
lret
popf
xchg
popa
jecxz
jae
lret
ss
leave
in
dec
xor
jle
popa
imul
mov
cmp
xor
ljmp
xchg
sbb
arpl
cld
adc
mov
mov
sub
insl
dec
pop
xchg
add
or
and
push
adc
mov
xchg
shlb
pop
push
pop
sub
mov
mov
adc
nop
inc
neg
or
daa
fs
mov
push
call
jmp
aas
enter
xor
mov
push
lret
sbb
std
insb
in
cmc
outsl
dec
sbb
push
xchg
addr16
sahf
aaa
mov
dec
inc
test
cli
decb
imul
ja
push
daa
xchg
push
pop
iret
inc
cmp
nop
pop
jb
cld
hlt
into
xchg
mov
or
xor
cltd
xor
pop
and
dec
enter
pushf
and
hlt
and
inc
mov
arpl
xor
sub
jmp
inc
inc
xchg
sub
or
inc
adc
mov
fs
xchg
cld
xchg
cwtl
shrl
popa
rclb
pop
adc
xchg
into
dec
dec
daa
add
mov
jmp
js
sbb
mov
into
fldenv
test
jg
jnp
or
mov
xor
sbb
daa
addr16
lock
cmp
mulb
inc
dec
daa
mov
push
sbb
push
inc
jnp
dec
push
aas
push
jp
pop
add
daa
pop
jg
ds
in
addl
lret
lods
jbe
mov
push
dec
shl
repz
test
adc
outsb
push
cmp
or
cmc
addb
imul
fs
mov
xor
enter
jle
jmp
add
test
movsb
pop
or
movsl
xchg
sbb
dec
pop
mov
mull
call
dec
xchg
js
ret
in
ss
inc
mov
gs
mov
xchg
lret
adc
or
ret
insl
daa
out
test
stos
adc
ljmp
rclb
add
testb
in
xchg
clc
fcomi
xor
les
cwtl
std
lea
and
test
lods
pop
xchg
ret
mov
inc
insb
sahf
and
in
mov
outsl
and
stc
and
pushl
rcl
or
add
and
popf
movsl
test
fbld
adc
xor
sbb
inc
dec
push
mov
and
mov
sbb
cmc
pop
ljmp
pop
add
and
fistpll
inc
inc
out
add
mov
push
aaa
sbb
shrl
mov
mov
pop
xor
push
jns
inc
lret
dec
shll
push
fdiv
int
lods
je
sbb
xor
add
jbe
std
in
xor
add
add
push
cmp
into
test
fdiv
fadds
xchg
lods
cltd
lret
sbb
mov
xor
dec
pop
adcl
add
mov
daa
shl
lods
aam
fcoml
daa
jg
subb
push
ds
clc
add
in
mov
or
push
ja
jle
dec
inc
adc
fmuls
adc
fstpt
xchg
repz
push
dec
fidivrl
push
cmpsb
stos
cld
mov
sub
es
sahf
aaa
sbb
push
mov
inc
shll
sbb
adc
dec
sub
cmp
or
jo
jnp
out
push
cltd
test
test
test
in
mov
mov
cmp
add
sub
inc
sub
adc
dec
fsubl
sbb
pop
xor
sbb
aaa
inc
cmp
cmp
inc
jp
adc
cld
sub
push
ja
mov
xchg
mov
mov
mov
int
in
je
enter
ret
push
ds
cltd
mov
aam
mov
ljmp
xchg
lea
fistl
xor
push
fwait
mov
xor
addr16
fdivl
popa
arpl
mov
enter
icebp
jbe
mov
add
cmpsl
push
cmpsl
pop
pop
jl
xchg
sbb
ja
mov
mov
and
bound
xchg
js
ror
push
movsl
mov
pop
mov
xor
add
jmp
push
inc
and
xchg
mov
inc
push
vcvtsi2ssl
test
ret
aam
paddq
add
cmpsl
xchg
cmpl
imul
ljmp
outsl
mov
insl
out
add
test
mov
mov
push
mov
inc
ja
addr16
xlat
rcll
xor
arpl
cltd
lods
jne
daa
test
nop
jae
aaa
xchg
aas
xor
ss
jnp
push
fdivrl
sub
daa
in
cs
sbb
mov
repnz
aam
xchg
pop
shrl
test
mov
test
mov
sbbb
cmp
push
pusha
daa
xchg
nop
or
int
lods
xchg
add
scas
adc
outsb
pop
jmp
push
xor
loop
call
push
scas
ljmp
lock
sub
fimull
xchg
mov
mov
cmp
jae
sub
jo
inc
sbb
push
pop
pop
aaa
lods
inc
int
popf
testb
add
fisttps
inc
sbb
push
stos
pop
xchg
add
mov
lods
sub
mov
je
scas
stos
dec
push
stc
insb
fsubl
add
fnstcw
and
in
cmp
sarb
shr
aaa
mov
into
in
jno
nop
out
dec
cmp
adc
pop
pushf
mov
push
add
inc
sahf
sbb
inc
outsl
mov
push
xchg
ja
nop
mov
jge
push
sub
fld
daa
test
ret
adc
and
jmp
mov
pop
and
inc
sbb
jb
test
mov
jnp
rorb
insl
mov
cmp
scas
dec
es
xor
push
pop
stos
push
mov
add
stos
mov
dec
add
sub
or
arpl
in
xor
adc
adc
xor
les
in
hlt
mov
jbe
inc
sbb
decb
push
iret
ret
adc
xchg
dec
outsb
xor
mov
out
inc
sub
cmc
stos
inc
into
inc
aaa
xor
sub
inc
dec
add
or
push
mov
mov
fadd
push
pop
adc
out
pop
fstps
sbb
add
sub
mov
jle
leave
mov
jns
cmpsl
sub
lods
mov
cmc
sbb
ret
test
enter
ljmp
pop
mov
mov
leave
sbb
sbb
cmp
popf
aas
mov
adc
mov
sarl
push
and
arpl
cmp
aas
popf
mov
das
sub
adc
scas
or
mov
pop
test
sbb
filds
sub
jbe
in
dec
arpl
mov
push
mov
adc
lret
fldt
xorb
adc
xorl
ja
test
mov
sahf
sbb
push
add
dec
mov
fists
inc
or
pop
inc
jecxz
out
mov
adc
clc
pop
xor
jnp
mov
mov
and
lret
adc
aam
sub
hlt
cmp
in
in
push
push
sbb
fistl
inc
outsb
ljmp
jb
popf
repz
push
test
pop
inc
inc
in
pop
inc
xchg
sahf
insb
xor
sub
repnz
sbb
and
xchg
xchg
or
sarb
sub
notl
xor
mov
ss
xor
or
adc
ljmp
push
mov
shld
sbb
jmp
popf
mov
scas
mov
sarb
mov
cmp
mov
jno
fwait
push
push
xchg
pop
or
jb
and
scas
mov
and
mov
jbe
xchg
cli
std
leave
jecxz
mov
daa
and
push
push
push
cmpsl
jg
js
adc
out
adc
xor
adc
mov
lds
je
aad
mov
sub
jecxz
mov
mov
and
pushf
out
pop
inc
sub
sub
inc
bound
sub
sbb
inc
mov
and
dec
fnstenv
mov
adc
div
jp
xor
mov
mov
bound
xlat
xchg
inc
add
fwait
push
cld
add
pop
xor
inc
mov
xchg
sahf
mov
jmp
and
adc
xchg
into
out
call
outsb
fsubrs
cli
bound
mov
xor
loope
xchg
pushf
int
and
and
sub
daa
fisubl
push
scas
sub
aam
ss
xchg
jp
loope
sahf
hlt
mov
rorl
movsb
or
xor
sub
clc
imul
xor
mov
inc
jnp
xor
inc
lret
popa
mov
adc
add
fists
ja
xchg
xchg
pop
and
push
mov
add
std
xchg
jge
dec
js
aam
mov
and
sub
pusha
xchg
jbe
aam
nop
inc
leave
sbb
imul
loope
ja
cmp
dec
mov
clc
out
aad
mov
lea
pushf
in
arpl
nop
mov
test
xchg
out
stos
mov
outsb
jmp
leave
scas
gs
xor
es
scas
mov
mov
testl
pop
mov
lahf
sub
adcl
into
xchg
cmp
mov
bound
iret
dec
outsl
adc
or
xor
push
push
xor
sub
hlt
xor
fwait
jmp
ret
dec
stc
sbb
std
test
int3
inc
jecxz
ret
shlb
jp
shll
ficoml
aaa
cmp
lret
inc
shrl
leave
fsubs
nop
stos
daa
jo
push
ja
in
mov
xor
movsb
xchg
inc
adc
xchg
inc
push
sub
cmp
push
ret
nop
cmpsb
pop
out
pop
dec
lahf
insl
movhps
outsb
sbb
fldcw
loopne
xchg
sub
in
mov
pop
adc
notl
or
or
push
shlb
adc
fs
and
fistpll
fadd
nop
xchg
ja
mov
inc
mov
nop
inc
add
jne
jb
in
jmp
test
sub
push
fildll
js
cld
cwtl
inc
xchg
ds
push
mov
hlt
mov
and
pop
pop
leave
push
movl
xchg
into
lret
dec
xchg
xchg
cmp
xor
aaa
std
inc
int
cmpsl
xor
mov
ja
mov
inc
adc
xor
mov
xor
roll
xchg
stos
das
push
xchg
icebp
inc
and
scas
inc
test
cmpsl
push
mov
xchg
mov
int
adc
rcll
sarl
test
push
inc
ds
mov
and
pop
pop
add
mov
jecxz
call
lcall
stc
jae
aaa
push
cmp
mov
aaa
mov
jae
jle
dec
jmp
inc
jmp
mov
ss
movsl
xor
dec
lret
inc
and
mov
mov
sbb
mov
adc
test
outsb
je
movsl
adc
jmp
pop
adc
popf
xchg
add
gs
or
sbb
sbb
fistl
add
je
out
push
push
adc
push
add
adc
push
mov
hlt
push
cmp
pop
out
ja
cs
iret
push
mov
clc
mov
mov
or
or
xchg
xor
jbe
dec
add
jg
push
and
fcompl
in
ljmp
popf
pop
mov
xchg
les
and
repnz
jle
pop
daa
mov
xor
dec
or
adcb
inc
lods
mov
aam
and
lahf
int
je
pop
push
js
lea
xchg
push
dec
lcall
dec
shrb
imul
xchg
test
sub
mov
adc
xor
ret
sub
jnp
cmp
rolb
sbb
push
or
sbbb
pop
das
gs
cmpsl
xchg
or
fnstcw
xor
mov
push
adc
push
dec
rclb
lret
mov
lret
shrl
out
mov
mov
adc
pop
cmpsb
loope
mov
aad
sub
aaa
xorb
xchg
movsb
js
sbb
xchg
arpl
lock
loop
sub
mov
jo
fdivs
mov
jl
stos
mov
stc
mov
out
dec
outsb
xchg
les
je
inc
xchg
test
mov
inc
mov
sub
sahf
mov
pop
jp
sub
mov
mov
push
aaa
push
sbb
adc
js
cmp
fidivl
shr
movsl
xchg
lds
xchg
mov
clc
shrb
sub
lret
pop
andl
rol
dec
mov
iret
xor
stc
sahf
push
sbb
xor
mov
add
cmp
jbe
xor
jg
xor
sub
jne
mov
jl
pop
cwtl
xchg
push
sub
lds
aad
sub
fadd
push
mov
and
lret
ja
push
jo
xchg
lea
mov
xor
adc
mov
or
adc
xchg
sahf
sbb
pop
in
adc
jae
sahf
xchg
mov
adc
sub
lea
aaa
mov
and
xor
cmp
cs
cmc
and
inc
sbb
xor
cmpl
ret
repz
ljmp
leave
bound
je
jb
ljmp
mov
dec
lcall
mov
jl
mov
mov
jbe
mov
hlt
sub
js
inc
or
scas
mov
adc
mov
dec
inc
xorl
lds
int
xchg
mov
sub
data16
lock
jne
lret
outsb
movsl
xchg
mov
scas
mov
cs
sbb
cmpsb
daa
dec
insl
sbb
daa
sbb
fucompp
push
cwtl
sbb
cmp
lret
lcall
into
or
rorl
adc
mov
gs
mov
push
xchg
mov
adc
xor
adc
mov
fsubl
mov
test
mov
sub
push
mov
push
stos
je
sti
mov
xor
fmuls
ss
xor
repnz
push
imul
sbb
mov
das
xchg
sbb
insb
inc
inc
test
adc
fs
jp
push
stos
and
scas
out
popf
mov
mov
stos
bound
call
sub
push
in
xchg
inc
xchg
lds
pop
and
or
fdivrs
stc
mov
sbb
jno
add
lea
mov
jb
addl
and
inc
mov
mov
and
mov
cwtl
cld
sbb
sahf
sbb
aaa
les
ss
sbb
cli
stos
scas
sbb
xor
mov
aaa
outsl
mov
out
cmpsl
xorl
jne
sbb
xor
fwait
mov
aam
jg
ja
dec
enter
js
jl
repnz
aas
ja
repnz
aad
mov
jae
jbe
sub
push
adc
push
xchg
das
test
insb
jbe
jbe
dec
jbe
dec
adc
jge
lock
dec
push
jns
int
sbb
cmp
xor
adcb
xchg
mov
mov
add
jecxz
adc
sub
shll
nop
scas
add
dec
push
outsb
ret
dec
call
mov
aas
xchg
orl
mov
movsl
jl
pop
jmp
out
inc
xchg
jbe
xor
xor
arpl
adc
push
popf
and
adc
aaa
iret
lret
sub
aad
jnp
mov
cmpsl
lods
mov
push
xor
pop
push
sub
xchg
shrl
aam
lods
cmpsl
push
inc
mov
mov
add
nop
adc
jle
jg
cmp
iret
and
shll
mov
int
rclb
xchg
ficoml
fistl
cs
and
outsl
std
inc
int
jg
test
ljmp
outsl
sbb
ss
and
cmpl
je
outsl
js
mov
adc
aad
sub
xlat
movsl
cmp
mov
sbb
mov
ja
jge
pop
xor
pop
mov
mov
mov
sub
adc
testb
vmwrite
nop
sti
mov
test
int
testb
je
xor
dec
rclb
mov
mov
mov
cmp
or
fidivrl
test
xlat
push
push
mov
dec
into
ret
cmp
std
mov
xchg
pop
pop
les
lahf
mov
sub
test
push
aad
add
xchg
xor
test
sbb
inc
sub
pop
movsl
xor
and
inc
push
test
mov
push
movsl
xor
roll
int3
hlt
mov
mov
jg
iret
adcw
xorps
push
aaa
jp
stos
aaa
dec
imul
mov
shlb
imul
testl
mov
aam
jg
push
iret
mov
mov
ret
lds
inc
push
cmp
xlat
adc
cmp
popf
sbb
shll
stos
push
dec
in
ljmp
fnsetpm(287
or
out
ret
pop
movsl
and
sub
insl
inc
ja
mov
xor
lahf
arpl
xor
into
inc
je
scas
or
adc
mov
fldenv
push
loope
sahf
aad
fidivrs
mov
arpl
fcmovnb
imul
aas
or
mov
pusha
pop
iret
dec
dec
into
fstl
ss
jnp
jmp
dec
cmp
inc
mov
test
mov
mov
inc
dec
and
mov
movsl
xor
das
jg
imul
pmullw
add
push
imul
xchg
push
dec
pop
push
xchg
and
nop
pop
sti
lds
sub
dec
outsb
loopne
cmp
mov
mov
mov
push
testb
push
mov
movsb
out
sbb
xchg
shufps
mov
loop
pop
jecxz
sahf
iret
pop
sbb
or
adc
jg
cltd
popf
adc
pop
outsl
addr16
fcoml
cmpsl
aaa
push
pop
notb
mov
mov
gs
dec
lods
pop
mov
cwtl
push
loop
sbb
andl
outsb
inc
xor
fnsave
dec
outsb
mov
sub
in
xor
arpl
mov
xor
fstpt
push
outsl
pop
mov
sarb
xchg
xchg
xchg
out
cmp
lds
orl
xchg
out
cmpl
orl
jg
dec
or
mov
movlps
push
xchg
pop
mov
jp
in
jne
adc
imul
mov
ror
mov
js
popf
sub
mov
adc
mov
int
push
shl
lahf
ss
xchg
roll
test
pop
gs
xchg
fdivl
bound
addr16
xor
cmp
adc
dec
dec
mov
xchg
int
nop
add
add
inc
addr16
mov
xchg
jp
pop
push
std
leave
xlat
inc
dec
andl
mov
mov
jns
icebp
in
mov
aad
cmpb
fcoml
movd
xchg
inc
mov
push
jne
std
pop
sbb
addb
mov
xchg
loop
xchg
jge
add
push
sbb
pop
cwtl
cmpsb
movsb
out
or
std
gs
inc
jle
pop
roll
aas
js
loopne
scas
pop
test
pop
push
cwtl
mov
andl
xchg
mov
xchg
ret
xchg
sbb
bound
inc
scas
pop
xchg
cmp
ret
or
jnp
cmp
adcl
mov
adc
rcll
xchg
mov
out
imul
ret
jo
in
sti
inc
test
mov
jp
add
movsb
xor
pop
arpl
pop
mov
push
jle
mov
int3
jns
jl,pt
and
cs
adc
rorb
xor
xlat
roll
jp
xchg
inc
xor
sub
adcl
pop
xchg
pop
enter
int3
lahf
mov
aas
stos
decl
dec
mov
aaa
mov
mov
mov
pop
inc
xchg
orl
insl
mulb
outsl
push
lcall
sbb
ja
std
mul
fdivp
inc
aam
loope
shll
data16
mov
mov
repnz
rcrl
mov
xchg
inc
popa
lea
mov
insl
fsubs
jmp
push
addl
pop
cmp
mov
addl
adcl
push
mov
idivb
js
cmp
xchg
popa
push
nop
pop
xchg
testb
inc
cmc
mov
push
iret
mov
roll
cltd
cmc
rclb
notl
adc
or
jecxz
mov
bound
cmp
stc
sub
xor
and
je
push
adc
lods
call
mov
cmp
out
xchg
fnstenv
xchg
inc
stos
push
mov
fadds
push
leave
aas
iret
add
dec
or
into
xchg
push
cmp
adc
pop
test
mov
test
adc
mov
int3
push
adc
addr16
repz
mov
aad
inc
je
leave
add
sub
mov
jg
jmp
dec
mov
sub
fnstsw
aaa
adc
call
add
insl
jns
mov
jne
leave
movsb
data16
push
std
adc
jp
inc
xchg
cmpsb
jno
jmp
popa
mov
dec
sub
mov
mov
mov
stos
js
jecxz
mov
repz
xlat
and
jecxz
adc
xchg
pop
out
push
and
insl
push
addr16
test
lods
push
pop
out
mov
inc
aas
inc
mov
or
lds
movsb
mov
xchg
mov
xor
xchg
mov
gs
mov
adc
adc
outsl
mov
mov
ljmp
int
out
aad
jae
mov
xchg
imul
pop
and
xor
jno
inc
xor
inc
jmp
and
ret
dec
insl
jle
cli
out
inc
ja
push
adc
xor
loop
test
aaa
or
mov
mov
jbe
test
outsl
lock
and
push
mov
jbe
xor
adc
xchg
cltd
dec
sub
mov
xor
inc
jns
aaa
repz
pop
push
xchg
cmc
xor
or
lods
inc
aaa
test
and
outsb
sub
jge
std
hlt
inc
xchg
fldenv
hlt
inc
xor
fdivr
cwtl
cmp
das
mov
mov
mov
lea
add
divb
xchg
notb
inc
sub
imul
xlat
lds
adcl
xor
das
popa
into
xor
out
cs
insb
xor
stc
negl
mov
mov
mov
jae
fcoms
inc
nop
jge
std
jp
in
mov
pop
xor
pop
inc
jne
dec
nop
out
xchg
inc
loope
in
into
sahf
jnp
pop
adc
or
fisttps
and
hlt
movsl
pop
xchg
mov
mov
mov
or
lods
lds
xor
and
sub
daa
adc
push
jge
popa
pop
loopne
sub
push
ret
shlb
jno
cltd
adc
in
sbb
out
push
pusha
maxps
mov
xchg
push
add
sub
jmp
jecxz
cld
push
push
scas
js
and
pop
push
loope
outsl
xor
sbb
dec
test
lea
in
add
add
aas
dec
stos
mov
ja
addb
cmpsl
aaa
pop
adc
xchg
testl
xchg
mov
xor
mov
or
push
ljmp
test
dec
or
out
movsb
sub
sbb
and
or
pop
loopne
mov
inc
hlt
mov
xor
or
mov
sub
cltd
mov
xchg
xor
lods
push
rol
or
std
push
inc
scas
jecxz
push
les
ja
mov
add
test
push
aad
dec
lret
dec
out
ljmp
sbb
inc
shlb
jae
ret
mov
xchg
pop
scas
dec
in
sti
xchg
scas
aad
adc
push
rorb
scas
fstpt
ret
sbb
es
jmp
xor
imul
inc
jg
xchg
or
add
sub
mov
xchg
push
leave
in
enter
push
scas
jecxz
aad
dec
mov
mov
mov
sub
fmull
push
add
shrb
inc
popf
mov
rcr
insb
xor
ss
test
xchg
jge
mov
jmp
sbb
bound
mov
aad
xlat
movsb
mov
mov
mov
in
in
sub
mov
imul
fbld
out
mov
mov
aaa
pop
xchg
int
ja
outsl
xchg
xchg
and
je
xor
mov
mov
pop
jb
stos
dec
cmp
jbe
push
add
jnp
rcl
cmpl
movsl
js
jp
jecxz
xor
clc
jnp
push
ds
pop
inc
inc
scas
xor
xchg
pop
popf
mov
push
stc
adc
sarb
ret
sti
jl
inc
fs
xor
dec
xor
int3
xchg
inc
adc
repnz
mov
jbe
lret
pop
adc
orb
in
push
or
ja
jae
push
flds
inc
lea
imul
dec
xchg
pop
pop
mov
arpl
fcomps
pop
sbb
stos
jno
dec
pop
mov
inc
push
push
addr16
pop
outsb
adcl
outsb
imul
cmpsl
jnp
mov
or
nop
in
adc
and
xchg
mov
mov
out
pop
inc
out
imul
clc
fmuls
mov
repz
xchg
xchg
sbb
ja,pn
xchg
inc
stos
push
xor
fstl
and
test
xor
bound
add
jnp
cmp
test
ret
xchg
jge
inc
mov
mov
jmp
test
mov
push
add
lret
or
cmp
daa
cmp
sbb
adc
xchg
mov
lds
sub
adc
mov
mov
ja
adc
sahf
aaa
scas
dec
xchg
jmp
xorl
fisubs
aad
mov
mov
aaa
leave
push
push
dec
xchg
jle
ds
push
adc
push
cmp
jg
sub
add
mov
xor
and
jmp
pop
int
std
lret
sti
jnp
pop
jle
xlat
push
leave
add
mov
and
mov
jno
inc
adc
sub
pop
scas
adc
mov
ja
js
ret
out
pop
xchg
notb
mov
out
iret
in
mov
ret
and
fistpll
aaa
cmpsb
sbb
icebp
addr16
and
mov
imul
dec
nop
mov
outsl
aas
sbb
in
lds
mov
mov
or
sahf
nop
sbb
xchg
pop
lods
es
jnp
imulb
adc
inc
nop
lret
mov
addl
ljmp
iret
cmp
imul
scas
jl
add
mov
or
jle
dec
jne
nop
xchg
jmp
inc
test
lret
inc
xor
mov
mov
mov
js
lea
xchg
jle
movsl
push
mov
push
xor
lcall
pop
pop
stc
and
adc
aas
mov
sbb
inc
cmpsb
iret
outsl
pop
sbb
hlt
into
sbb
lea
cmp
xchg
mov
fists
test
in
outsl
in
push
insl
jle
ja
adcl
popa
mov
aam
das
icebp
in
mov
addr16
cmp
xor
push
in
sbb
adc
jae
adc
jecxz
jnp
mov
mov
mov
fcmovne
xor
lods
aam
xor
es
lods
jg
jle
in
push
mov
lahf
push
adc
inc
xchg
jnp
cmp
or
std
in
mov
mov
xchg
pop
cmp
inc
into
inc
xchg
cmc
push
and
imul
and
push
pop
mov
jae
mov
or
sbb
inc
mov
push
in
hlt
cltd
outsl
pop
in
xchg
adc
adcl
out
rol
out
aaa
cltd
jo
int3
xor
and
in
sbb
out
sub
mov
xor
xor
xchg
jnp
and
imul
push
xorl
leave
mov
mov
push
movsl
inc
xchg
mov
sbb
js
roll
dec
out
insl
das
push
dec
scas
shr
test
outsl
and
fisubl
adc
add
std
sarl
jbe
xor
mov
leave
into
popa
sub
ficoml
xchg
push
mov
pop
shr
lds
testl
or
cmp
mov
xor
sub
popf
inc
lods
and
sbb
dec
and
xchg
dec
mov
sub
sahf
push
sub
mov
or
mov
or
jmp
add
imul
outsb
xchg
and
leave
and
fcoml
mov
adc
dec
mov
push
mov
add
cld
push
jl
jne
loop
pop
decb
lds
sbb
mov
subl
test
rorl
and
je
mov
lods
inc
jbe
lea
sub
in
pusha
push
mov
xchg
dec
cld
mov
aad
cmp
jo
jl
ja
std
out
cli
in
idivl
inc
repz
stos
lret
outsl
jg
dec
frstor
out
dec
mov
pop
adc
cmp
or
push
adc
xchg
xor
inc
jne
mov
pop
aaa
mov
sbb
jle
mov
shlb
imul
push
dec
sub
lahf
mov
daa
pushf
sarl
aaa
aam
nop
cmp
sbb
fisttps
mov
es
ss
xchg
or
xchg
xchg
movsl
repz
aam
xchg
push
mov
push
into
mov
fcomi
scas
call
stos
out
sbb
cld
scas
xor
sub
mov
xchg
pcmpeqw
push
in
ss
orl
das
or
adc
icebp
out
test
out
mov
xchg
rcl
das
out
lods
adc
jl
inc
jmp
imul
mov
nop
inc
ss
addr16
scas
mov
and
das
into
mov
leave
hlt
dec
mov
arpl
jecxz
loopne
mov
ja
repz
mov
jmp
cmpsl
aaa
xchg
mov
mov
cmpl
jb
inc
push
xchg
jg
repz
jge
inc
les
mov
imul
adc
int3
xor
mov
adc
pop
jne
xchg
aam
mov
push
push
pop
movsl
std
out
repz
jbe
shrl
imul
sahf
imul
dec
sbb
fnstsw
cs
mov
insl
xchg
nop
ljmp
cltd
lods
aam
push
inc
push
xor
andl
mov
sbb
push
sub
gs
addl
lret
out
mov
dec
femms
xchg
in
adc
cmpsb
popl
mov
int
push
inc
or
jg
push
rcll
cmc
mov
out
mov
jmp
cmpsl
mov
lods
mov
dec
add
in
mov
sub
mov
rol
leave
mov
inc
and
imul
in
jae
push
mov
jnp
cld
xchg
sbb
jno
nop
push
or
inc
cmp
pusha
inc
dec
out
imul
pop
gs
push
mov
gs
int
mov
cmpsl
imul
aaa
sub
and
add
sbb
mov
ror
and
fimull
icebp
xchg
addr16
push
test
inc
es
mov
outsb
xor
add
roll
push
int
sub
adc
pop
xchg
push
addl
push
sub
and
fldenv
fldcw
lods
jae
jbe
mov
stos
jecxz
mov
clc
pop
xchg
stos
fisubs
push
dec
xchg
imul
xchg
leave
xchg
push
adc
sbbb
mov
jmp
daa
lods
push
add
jno
cmp
aaa
sbb
pop
fisubrl
test
sbb
loopne
ljmp
push
test
push
add
imul
and
int
push
xor
xor
bound
test
pop
das
mov
jo
js
cmp
fadds
imul
mov
ja
cmp
xor
mov
push
pop
jg
lahf
hlt
sub
pop
add
jp
xor
push
adc
mov
pop
push
loope
bswap
fidivl
or
inc
inc
scas
int
jle
notl
fwait
xchg
iret
push
push
out
xchg
jle
dec
mov
scas
sbb
sub
notl
jg
std
imul
jo
push
mov
and
js
mov
sbb
xchg
xchg
sub
shll
or
icebp
add
xchg
nop
adc
aaa
enter
jp
cltd
sbb
xor
dec
pop
jg
test
cmpsl
sub
jae
adc
test
pop
pop
mov
lahf
es
adc
xor
repz
imul
cltd
int
adc
dec
ja
cmc
xchg
fisttpll
outsl
sbb
sbb
sub
xchg
mov
repnz
clc
push
cwtl
sub
mov
dec
jg
mov
cltd
sbb
adc
adc
jmp
aam
js
adc
aaa
mov
je
add
orps
enter
imul
sub
leave
pop
pop
scas
mov
xor
mov
arpl
mov
mov
mov
pushf
nop
insb
inc
ja
push
mov
push
movsl
push
xchg
xchg
pop
dec
dec
xchg
mov
dec
leave
mov
sub
pop
out
or
xor
or
sub
shl
pop
adc
shr
mov
inc
loop
pop
ja
movsb
add
inc
aas
mov
out
scas
mov
cltd
leave
pop
sbb
into
push
aaa
ja
add
dec
mov
xchg
xchg
test
pop
mov
dec
out
mov
repnz
loope
hlt
mov
aad
loop
inc
adc
add
jae
addl
xor
xchg
dec
push
jl
seta
sub
xor
cmp
dec
aaa
ja
cmp
sbb
mov
out
test
mov
pop
movsl
dec
lea
addb
mov
fsubrs
xchg
pop
into
xchg
xor
subb
adcb
push
lds
pinsrw
xchg
jo
cmc
jg
mov
popl
aaa
dec
xchg
jmp
mov
pop
mov
mov
cmp
jne
in
cmpsb
inc
int
mov
pop
leave
sbb
stc
push
or
lea
aad
cmp
and
lahf
pop
in
leave
dec
mov
pushf
repnz
push
pop
and
mov
cmc
jg
dec
rorb
shrl
fcoml
jae
cmp
xchg
pop
push
popl
pop
mov
jne
inc
hlt
outsb
mov
imul
or
ficoms
adc
shlb
mov
add
fdivs
repnz
mov
fisttpll
or
in
unpckhps
cs
movsl
or
mov
xchg
imul
inc
jecxz
xchg
mov
outsl
sub
cmp
addr16
imul
xor
push
fmuls
sbbb
push
daa
xchg
inc
pop
or
scas
mov
mov
popf
pop
mov
pop
dec
lea
push
pop
cltd
adc
rorl
cltd
cmp
inc
mov
xchg
mov
pop
pushf
lds
dec
cmp
addr16
cmpsb
mov
inc
mov
xchg
jge
rorb
ss
loope
and
daa
push
and
ds
cmp
jg
push
add
inc
insl
xchg
mov
mov
mov
fmuls
adc
xchg
loop
xchg
jo
and
lret
cmp
stos
iret
mov
dec
shlb
int3
ljmp
lock
jg
adc
sbb
xchg
mov
and
push
aad
xor
mov
andps
fs
and
je
mov
jno
rcll
fimull
in
std
adc
xlat
std
nop
xchg
xchg
jns
scas
pop
aam
stc
ret
cmc
fdivs
cwtl
mov
ljmp
or
insb
push
icebp
fabs
mov
pop
mov
xor
ds
pop
add
push
mov
not
add
push
rclb
call
cli
push
and
addb
sub
test
movsb
out
inc
xor
repz
stos
push
pop
xor
into
xor
out
inc
fdivrs
roll
adc
aaa
out
xchg
mov
aad
push
jns
pop
dec
push
mov
push
xor
jne
push
sarb
bound
gs
aam
in
test
clc
xchg
mov
jg
fiadds
es
mov
ret
mov
adc
mov
lea
mov
cmp
xchg
test
mov
dec
and
mov
mov
push
pop
xor
enter
dec
mov
lds
inc
mov
gs
push
push
nop
fiaddl
insl
pop
mov
filds
xchg
ret
sarb
xchg
daa
cmp
lcall
pop
filds
cmp
sub
mov
push
fcoml
inc
pop
xchg
scas
mov
stc
xor
sbb
in
cmp
jno
pop
test
xchg
jno
sbb
jg
pop
xchg
cmpsb
push
pop
xchg
mov
rcll
test
add
fists
test
add
or
dec
in
mov
push
mov
pop
aad
out
push
repnz
pop
aaa
jecxz
pop
repnz
mov
mov
pop
xchg
aaa
xchg
xchg
mov
push
lret
das
inc
jbe
sub
xchg
cmp
and
mov
or
jmp
sub
xor
repnz
gs
call
mov
xchg
push
js
aaa
xchg
ret
jecxz
sbb
call
fldenv
aam
xchg
cs
xchg
push
jmp
ja
mov
xchg
add
test
repnz
js
mov
pushf
jle
push
repnz
dec
cmp
ja
mov
in
adc
push
sarl
imul
pop
jge
lahf
mov
movsl
fcoml
cmp
cmpb
test
pop
rolb
test
mov
push
add
push
jg
stos
dec
or
jbe
pop
dec
push
inc
mov
xchg
mov
rclb
jle
pop
cmp
push
fdivl
lret
loopne
mov
cld
jle
sarl
fdivl
icebp
roll
cltd
and
lret
cmp
lds
mov
pushf
in
push
xchg
jp
pop
iret
xor
iret
adc
icebp
rcr
xor
add
mov
mov
sahf
xor
jle
orl
pop
xchg
push
ret
test
sbb
mov
gs
iret
std
sbb
faddl
xor
add
adc
xchg
adc
jl
push
mov
lahf
in
jge
jmp
mov
adc
or
jle
inc
dec
xchg
adc
mov
jbe
je
pop
mov
fdivrs
jbe
dec
sub
push
jo,pt
loop
inc
mov
sbbl
cld
sub
rcrl
xchg
pop
sbb
fcoml
push
xchg
dec
lock
popa
or
aaa
pop
inc
mov
shl
jge
pop
push
jl
or
je
pop
lcall
push
cltd
sbbl
xchg
jae
ret
push
mov
push
xor
mov
inc
sub
shrl
das
test
jbe
and
fists
cmpsl
dec
jmp
out
aam
lds
std
imul
ret
adcl
sbb
repz
sbb
lcall
rcll
inc
sub
adc
mov
inc
leave
ja
fdivr
mov
cwtl
mov
inc
mov
adc
into
dec
imul
sbb
lods
jbe
mov
inc
ljmp
add
inc
xor
ss
outsb
imul
cmp
outsb
inc
xor
jl
push
int3
mov
imul
cmpsl
fistpl
out
jg
inc
cmp
pop
scas
mov
mov
sbb
xchg
xor
out
test
inc
aaa
nop
and
dec
mov
mov
iret
xchg
fdivr
andb
in
fsubrs
pop
pusha
shlb
mov
aad
sub
pop
push
les
popa
stos
push
imul
test
jg
add
leave
cmc
mov
mov
notl
icebp
dec
mov
xchg
outsl
std
push
cmp
es
mov
in
xor
lea
ret
adc
pop
cmpsl
icebp
inc
add
js
sbb
jae
mov
or
pop
das
les
lds
cld
repnz
pop
sub
mov
ljmp
lret
aad
inc
sub
dec
mov
aaa
outsb
inc
jecxz
adc
xchg
pop
cmp
dec
scas
adcl
lret
mov
or
or
inc
xchg
gs
das
cld
in
push
enter
inc
mov
into
mov
xchg
call
xchg
xchg
cmp
fcoms
repz
push
inc
xchg
das
lcall
ficompl
scas
jmp
sbb
addr16
push
ficompl
adc
inc
mov
nop
adc
out
pushf
xchg
cmp
hlt
in
stos
rclb
jb
scas
adc
sbb
call
mov
aaa
test
xchg
sbb
repz
pop
aas
nop
ja
sbb
enter
xchg
lds
movb
insl
jbe
or
mov
inc
cmpsb
add
adc
sub
add
ss
roll
mov
jle
stos
mov
pop
push
push
cmpl
shrb
dec
pop
imul
fwait
push
xor
int
xor
xchg
or
mov
push
or
daa
mov
mov
mov
mov
aad
lock
hlt
aaa
mov
pop
xor
jo
subl
es
inc
or
lock
iret
addl
or
push
ss
cmp
adc
mov
int
div
jb
xchg
in
shlb
jecxz
addr16
sub
ret
mov
jg
jo
inc
and
aas
cmpsb
jmp
pop
icebp
nop
mov
xchg
inc
dec
pop
sub
sarb
stos
andnps
or
outsb
insl
rcrb
arpl
push
cmc
push
cmpsb
push
sbb
popf
jne
leave
js
jnp
sbb
push
inc
pcmpgtw
movsb
cmpsl
int3
xor
lock
sub
imul
jne
movsb
outsl
or
lock
jmp
adc
add
andl
adc
xchg
cmp
sub
sub
xor
scas
pop
imul
rolb
mov
and
in
xchg
pop
aas
rcrb
scas
js
dec
and
mov
imul
xchg
jnp
jae
scas
push
and
aaa
xchg
insl
xchg
ror
mov
add
cmpl
mov
xchg
gs
pop
or
mov
aaa
out
mov
movsl
mull
and
ja
and
test
jo
jle
push
jne
rcll
inc
cltd
es
cmp
clc
add
mov
in
js
sub
push
aad
dec
and
daa
mov
mov
hlt
lock
sbb
scas
xchg
sub
jle
inc
jecxz
xor
mov
adc
xchg
daa
mov
int
xchg
mov
xchg
mov
aad
or
mov
dec
in
jbe
cmp
mov
fwait
or
std
mov
mov
sbb
pop
xchg
js
mov
lods
push
jo
jecxz
xor
je
aaa
gs
call
mov
xorb
out
adc
aad
xor
xchg
adc
xchg
daa
addr16
roll
test
test
jns
mov
nop
aas
inc
out
or
cmp
xchg
shlb
jp
xchg
xor
scas
xchg
rorl
adcb
xor
cmc
jp
push
adcl
dec
mov
adc
sahf
scas
xchg
sbb
test
flds
pop
movsl
push
leave
mov
add
mov
mov
mov
fwait
iret
das
iret
xchg
sbb
push
mov
aad
loop
jge
mov
test
xchg
push
data16
ret
pop
dec
dec
pop
pop
cmpsb
aas
and
push
xchg
cmc
test
std
mov
inc
int
aam
hlt
sub
test
aam
aam
lahf
push
add
aaa
mov
dec
sbb
xor
fisubl
mov
fwait
mov
inc
mov
pop
jbe
xchg
mov
mov
mov
cmpsl
push
fstpl
pop
dec
fcmovb
mov
cmc
fadd
inc
pop
push
xchg
adc
dec
push
sbb
shlb
xchg
fsubl
push
dec
jg
cltd
pop
les
dec
ja
pop
out
xchg
outsl
mov
addr16
fisttpl
negb
pushf
pop
dec
divb
and
dec
dec
mov
shrl
scas
fidivs
push
arpl
xchg
ja
popa
dec
push
pop
in
xchg
mov
xchg
sbb
daa
mov
push
arpl
pop
xor
loope
xchg
aad
pop
inc
nop
imul
cltd
cmpsl
xchg
shlb
xor
add
dec
shl
xchg
xor
xor
repnz
imul
adc
aam
dec
xchg
xor
inc
jl
and
das
inc
xchg
in
into
or
je
in
into
popf
xchg
jne
lods
sub
xchg
xchg
iret
mov
inc
mov
mov
xchg
insl
mov
cmc
int3
fnstsw
adc
xchg
and
xor
mov
push
lea
dec
addb
stos
outsl
sbb
cmp
mov
xchg
mov
pextrw
inc
inc
pop
lcall
inc
in
ficoml
jge
xor
sqrtps
mov
scas
xchg
push
mov
dec
xchg
scas
xchg
or
jne
mov
and
dec
mov
cmp
scas
xchg
loop
popf
aam
push
pop
ss
testb
ja
xor
cmp
cld
adc
mov
iret
mov
mov
movsl
pop
pop
test
pop
mov
lea
and
push
nop
add
iret
xor
push
xchg
mov
ret
jnp
push
fadd
mov
ret
je
inc
in
andb
mov
cmp
jecxz
add
iret
push
pop
jnp
pop
adc
neg
add
push
iret
and
fisubrs
gs
push
sarb
cltd
sub
sbb
fsubr
ret
pop
lcall
insb
mov
js
jmp
loopne
test
and
xor
scas
jnp
jmp
imul
test
dec
cmp
daa
daa
sahf
mov
adc
data16
cmpsb
test
pusha
pop
jne
jae
out
jmp
stos
push
sub
fstl
aad
xor
das
rorl
ss
dec
pop
loope
test
loope
ss
pop
in
lods
rcr
cld
jnp
in
pop
dec
cmp
xchg
stos
add
push
mov
pop
data16
neg
mov
push
lahf
inc
xor
sti
cmpsl
mov
addr16
aaa
push
fsubrp
or
mov
cmpsb
push
jnp
xor
jno
adc
in
xchg
mov
xor
hlt
lods
inc
xchg
js
jnp
les
push
mov
cs
sub
stos
mov
lods
ja
adc
test
dec
insb
mov
adc
push
xchg
sbb
out
jnp
mov
or
dec
push
call
fldt
aad
adc
inc
jg
push
sbb
push
test
scas
lock
pop
and
ja
xchg
pushf
sbb
jno
insl
iret
in
sahf
mov
push
iret
stos
inc
pop
loop
lea
out
int
ret
xchg
jmp
push
inc
dec
out
push
xor
jnp
rcll
mov
xchg
pop
jecxz
push
xchg
xor
fcoml
sbb
addb
inc
fisttpl
dec
mov
mov
subb
jbe
lds
pop
and
arpl
aam
lret
leave
mov
dec
int3
fildl
jae
pop
mov
ror
push
mov
xchg
lds
jb
movsl
xchg
xchg
sub
out
xchg
cmc
testb
mov
xchg
adc
or
and
jecxz
sbb
mov
dec
notl
adc
cmpsl
xor
pop
aaa
inc
sbb
xchg
and
add
push
adc
pop
jnp
loop
mov
inc
mov
xorb
test
clc
sbbl
in
iret
frstor
add
pop
aaa
mov
add
loop
jge
leave
xchg
imul
out
fdivl
xchg
mov
push
aad
dec
enter
mov
cmp
aaa
imul
lret
sbb
imul
lea
xor
push
jo
les
loope
xor
jnp
xchg
les
std
lret
cmp
mov
adc
jae
scas
sub
dec
mov
sub
sbb
in
es
mov
xchg
scas
lea
xchg
and
mov
sub
push
fnstsw
hlt
jmp
mov
mov
js
mov
xchg
add
cld
aad
sahf
sub
aad
js
sti
dec
lret
fwait
shrl
daa
shlb
addb
in
in
int
pop
lret
sbbl
mov
xchg
mov
lret
jg
xor
into
mov
ret
sti
jbe
movsb
xchg
and
or
push
arpl
data16
dec
push
dec
sbb
jo
jl
mov
or
mov
cmpsl
xchg
movsb
dec
pop
cmpsb
mov
int3
nop
out
sarl
jne
test
mov
dec
cltd
sub
mov
push
dec
jae
and
inc
arpl
inc
nop
stos
shrl
push
xor
nop
jge
inc
aaa
adc
inc
jo
push
neg
dec
mov
xchg
pop
xchg
push
jle
pop
xor
push
cmp
push
inc
js
test
dec
sub
xchg
adc
xchg
adc
inc
or
js
xor
nop
leave
mov
adc
lds
stos
xchg
cltd
icebp
sahf
out
push
mov
sahf
push
mov
xchg
stos
mov
xchg
fildll
sbb
adcl
sub
xchg
mov
mov
stc
cltd
sbb
ds
inc
lods
mov
push
or
gs
jp
lret
popf
mov
rcll
aaa
gs
jp
call
movsl
mov
icebp
mov
in
xchg
fs
pop
dec
inc
and
kmovb
dec
push
pop
xor
aaa
dec
shl
cs
shrb
pop
dec
push
xchg
ret
and
or
xor
into
jo
dec
mov
adc
xchg
aam
xor
or
into
or
adc
push
dec
xor
scas
ljmp
insb
fisttpl
into
sbb
fstl
scas
enter
aam
and
xchg
pop
adc
int
sbb
pushf
movsb
ljmp
jmp
xchg
xor
or
mov
mov
negl
sbb
mov
inc
jbe
into
addr16
adc
jmp
pop
sub
ljmp
xchg
and
xchg
pop
cmp
mov
sbb
push
lock
outsl
rcll
mov
out
xchg
aas
call
outsl
outsl
js
jnp
mov
lcall
ficoml
into
pusha
iret
sbb
jecxz
cmp
and
ss
jecxz
out
int
dec
jbe
jae
pushf
xchg
int
mov
je
orl
mov
popf
push
popf
iret
mov
sbb
shlb
lcall
test
data16
nop
push
hlt
jle
outsl
dec
dec
mov
mov
inc
jmp
dec
js,pt
adc
xchg
adc
dec
xchg
pusha
out
cld
aaa
into
cwtl
int
or
push
xchg
inc
int
pop
cmpsl
daa
cmc
mov
xor
and
cmpsb
outsb
in
into
mov
pushf
adc
mov
lock
nop
pushf
jmp
or
enter
out
into
nop
and
in
stos
dec
xor
lret
les
mov
ret
js
jle
mov
ja
cltd
je
movsl
xchg
mov
xchg
mov
aad
xor
scas
xor
imul
dec
nop
lea
cmp
and
js
je
and
mov
dec
out
push
roll
push
fldl
pop
mov
sbb
ret
xchg
aad
js
mov
add
in
cs
mov
fs
push
adcb
loope
clc
js
aam
in
xchg
les
push
out
ss
inc
dec
dec
mov
pop
nop
adc
push
mov
adc
push
lea
xor
mov
cmc
adc
nop
dec
int3
call
lods
jmp
xor
pushl
imul
imul
or
fs
adc
test
sbb
mov
in
mov
fwait
scas
add
adc
sub
mov
call
lret
sbb
mov
push
xchg
mov
push
imul
push
cli
fcomip
xchg
push
mov
cmc
push
imul
xchg
push
sbb
xchg
mov
or
gs
push
lcall
outsb
xchg
xor
add
mov
push
jmp
jno
sbb
dec
push
dec
lea
and
push
ljmp
and
dec
xchg
inc
into
testl
in
mov
test
push
js
shrb
hlt
clc
cmpsb
ficomps
push
cltd
jmp
adc
add
or
mov
scas
sub
ja
pop
pop
aaa
and
jle
inc
out
into
pop
mov
andps
scas
push
inc
das
dec
aaa
lret
inc
xchg
jne
xchg
lcall
push
clts
inc
psubb
fists
test
mov
sbb
pop
xchg
push
mov
pop
repz
leave
ss
mov
in
jne
mov
push
pop
enter
loop
add
mov
dec
inc
mov
jo
sbb
mov
imul
jg
xchg
mov
push
mov
sub
xchg
pop
pop
adc
test
sub
repnz
push
or
jbe
nop
addl
insl
fnstenv
daa
fnstcw
sbbl
mov
push
cmp
pop
fsub
push
fistpll
and
hlt
insb
imul
inc
imul
dec
xchg
repz
xor
adc
std
sbb
add
cld
stos
add
frndint
sarb
out
and
sub
lahf
inc
push
mov
push
xchg
xchg
jne
loopne
add
adc
stos
xchg
sub
push
mov
sti
lods
push
pop
mov
inc
sbb
or
ljmp
xchg
in
outsb
cmp
sbb
pop
jle
fldcw
fcompl
jp
dec
inc
inc
dec
bound
adc
cltd
xor
inc
pop
int
repnz
in
cltd
das
xchg
pushf
and
adc
stc
outsb
mov
xchg
add
dec
jle
dec
push
mulb
sub
or
sbbl
loop
in
mov
data16
rolb
popf
iret
jne
inc
inc
dec
cmpsl
push
dec
jmp
sti
cmp
mov
add
pop
inc
jo
xor
cltd
mov
lods
xor
movsb
push
int
cmpsb
fldenv
insl
inc
mov
dec
pop
mov
cwtl
jg
jg
push
dec
shrl
aad
cltd
lret
aaa
in
mov
jae
cmp
out
std
jp
push
dec
push
test
std
rorl
pop
mov
jmp
push
call
mov
mov
lds
mov
inc
pop
pop
mov
xchg
iret
xor
outsl
mov
push
lea
mov
jo
rorb
adc
inc
mov
jbe
mov
xchg
lock
nop
adc
jle
xchg
cmp
dec
mov
jo
push
push
xchg
fwait
nop
movsb
push
jmp
jmp
nop
out
dec
cmp
loopne
sub
outsb
inc
push
mov
aad
adc
outsl
ja
sub
loope
push
dec
jmp
imul
mov
imul
and
xchg
dec
mov
aad
adc
pop
push
daa
gs
inc
nop
fs
sub
cwtl
shrl
xlat
push
lds
adc
jmp
addr16
ss
enter
jmp
add
loop
mov
or
ret
ja
mov
or
rolb
aad
fs
xor
xchg
cmpsl
pop
jle
out
js
aas
les
inc
fsub
jg
mov
xchg
imul
xlat
jecxz
cltd
movsl
xchg
lea
add
mov
ja
ja
cmpsl
aam
hlt
adc
mov
and
cmp
lret
cmp
xchg
sti
lea
aas
ss
jmp
cmp
aaa
mov
in
int3
inc
xor
cltd
push
pop
fnstsw
subl
inc
sub
cmp
repnz
push
jnp
push
cli
nop
test
xchg
jecxz
shrl
push
inc
movsl
imulb
in
cld
fsubrl
push
push
scas
jbe
imul
adc
adc
push
mov
xor
push
xor
gs
dec
push
or
xor
stos
push
inc
stos
push
add
push
mov
cmp
mov
mov
add
mov
cmpl
out
mov
pop
push
or
or
test
push
cmp
loope
dec
push
add
pop
adcl
nop
fistpl
sbb
or
mov
cltd
out
sti
lcall
outsl
xchg
dec
test
sbb
inc
xor
mov
call
push
test
leave
mov
out
repz
inc
adc
jp
push
pushl
scas
out
xchg
xchg
mov
mov
test
adc
adc
mov
push
sub
loopne
sbb
inc
cmp
xchg
fs
scas
and
f2xm1
xchg
ja
nop
out
sub
mov
imul
stos
or
leave
ja
xchg
jns
aaa
out
xor
mov
pop
xor
stos
sbb
mov
dec
inc
and
sbb
cmp
mov
mov
or
test
daa
lahf
pop
sbb
lahf
add
jnp
xor
push
pop
out
pushf
dec
movsl
enter
add
or
mov
jmp
sbb
and
inc
cmp
mov
xor
jnp
testl
outsb
ljmp
jno
lock
inc
mov
xchg
loope
rorl
ror
iret
xchg
jl
hlt
lds
cmp
ret
adc
mov
repnz
lret
xchg
orl
and
mov
push
lret
xchg
jo
mov
mov
and
push
adc
dec
sti
or
stos
pop
dec
sub
sbb
imul
jecxz
mov
inc
pusha
cmp
lret
adc
notl
nopl
push
mov
or
lret
xchg
ds
cmp
mov
sti
xchg
out
pop
nop
out
pop
movsb
dec
addr16
pop
flds
scas
aas
mov
loope
pop
mov
rclb
fisubrs
cmp
jmp
fs
jb
out
mov
push
xchg
sbb
dec
inc
nop
lds
hlt
leave
enter
outsb
sbb
hlt
in
lods
aam
add
imul
xor
cmpl
sub
cmp
lds
lds
imulb
sbb
or
ds
hlt
scas
scas
faddl
stos
jl
test
jle
ret
test
fwait
ljmp
sub
fbld
dec
and
sub
push
xor
mov
mov
sub
sbb
aaa
jl
push
mov
push
imul
leave
fcomps
jnp
add
movsb
mov
inc
jg
in
mov
lea
sbb
aas
pop
icebp
sub
int
jbe
add
ret
std
pop
movsb
inc
fcoml
imul
cmp
mov
jae
mov
arpl
cmp
fsubp
js
xlat
adc
adc
aaa
loop
cmp
mov
push
fs
test
lods
mov
scas
lahf
xchg
jl
sbb
jmp
sub
cmp
cs
mov
es
adc
in
inc
push
jl
jle
clc
outsl
and
mov
and
stc
inc
sarb
insb
repz
fs
pop
cmp
clc
and
mov
mull
out
fsubrs
lcall
es
cmc
loope
push
in
sbb
or
xchg
stos
mov
jae
push
rorb
popa
inc
xor
lahf
inc
nop
leave
dec
fisttps
fmull
mov
mov
sarb
push
push
in
xchg
scas
ja
and
and
inc
jmp
in
aaa
btc
mov
daa
mov
inc
sbb
and
mov
xor
adcb
xchg
push
into
mov
imul
sbb
adc
cmp
adc
dec
mov
mov
mov
and
test
ljmp
dec
cmp
ljmp
mov
dec
js
out
rclb
mov
in
jb
mov
rclb
imul
scas
aas
aaa
rolb
pushf
jnp
outsl
add
scas
push
jb
mov
mov
aad
mov
mov
mov
mov
cltd
xchg
in
pop
int3
xor
xor
das
mov
sbb
push
leave
inc
fwait
add
decb
daa
iret
scas
nop
inc
jecxz
outsb
idivb
sub
repnz
nop
add
jg
jecxz
sbb
mov
fstps
jbe
xor
sub
std
fisttps
mov
data16
sarb
xchg
ja
mov
add
mov
int
pop
pop
pop
cmp
gs
rorb
lret
inc
push
test
scas
jo
xor
sub
out
popl
ret
mov
push
pushl
dec
and
ss
aad
xchg
sbb
negl
ret
rcll
scas
sahf
jp
cld
sub
and
je
jo
cmp
adc
mov
std
cld
mov
rcll
lods
out
test
and
jnp
jnp
sbb
rcl
ret
xor
inc
or
testl
aaa
mov
add
into
xchg
dec
lret
push
aaa
mov
adc
mov
ja
mov
sub
iret
into
push
js
lret
xchg
outsl
sub
test
mov
mov
sub
xchg
loop
addr16
shlb
mov
and
push
lock
sub
int3
mov
data16
jp
rclb
mov
xchg
dec
ds
mov
rclb
adc
fnstcw
push
or
add
in
notb
inc
pop
sub
jge
stos
lret
mov
movsb
loop
mov
fsubrl
enter
push
xchg
dec
mov
xor
fwait
ds
and
sub
das
xor
dec
add
xchg
fs
cmp
jle
jne
imul
jbe
iret
out
les
jnp
jl
in
sbbl
push
icebp
pop
imul
aad
mov
popf
std
test
pop
pop
negb
mov
sub
js
pop
fmuls
dec
aaa
sbbl
roll
stos
mov
cmc
push
xchg
repnz
leave
dec
adc
mov
mov
js,pt
mov
inc
xor
gs
sub
scas
imul
cwtl
sbb
xor
sub
ja
std
imul
ja
les
repz
test
ja
lods
les
or
jmp
inc
adc
push
fdivl
xchg
js
push
lods
lahf
jno
scas
ret
iret
popf
pop
jl
filds
mov
push
pop
out
aas
mov
inc
xchg
fiadds
outsb
inc
loope
xchg
aaa
add
mov
or
sbb
std
push
imul
mov
jl
sub
inc
xchg
std
pop
push
lcall
mov
lods
fcmovnb
jle
addl
mov
aad
cmp
and
pop
mov
push
adc
cmpsb
iret
add
rcll
mov
out
pop
push
out
ss
dec
mov
sbbl
scas
sbb
filds
fisubrs
mov
ljmp
push
lea
lds
jb
pop
hlt
fisubrs
push
mov
rorb
orb
push
ja
das
adc
push
cwtl
cli
sub
movsl
mov
inc
mov
fwait
lahf
dec
test
and
in
rcrb
pop
push
cmp
dec
rolb
in
out
inc
or
lds
imulb
cmp
xchg
inc
in
popf
pop
push
add
dec
jmp
jbe
lods
xchg
and
inc
sub
sub
data16
out
inc
stos
in
lods
mov
outsl
into
fidivrs
add
pusha
sub
mov
and
jge
jmp
scas
sub
sbb
ss
das
xchg
andb
dec
push
test
imul
jno
mov
jbe
pop
cmp
cmp
xor
dec
push
pushf
aam
lahf
stc
rcrb
mov
xor
pop
idivl
inc
push
imul
fadd
add
shll
aad
mov
jecxz
sub
push
dec
mov
xchg
fs
inc
mov
and
sub
push
mov
test
arpl
sub
mov
inc
adc
push
fists
adc
aad
push
mov
sbb
xchg
pop
mov
aaa
fistpll
out
rcll
jo
sarb
outsb
gs
daa
aas
mov
popl
hlt
cld
sub
xchg
cmpsl
mov
sub
lods
nop
outsb
push
sub
ss
int3
and
mov
add
and
lods
push
mov
jns
jb
xchg
fsubr
imul
int3
xlat
fs
decl
xchg
ficoms
sbb
push
inc
outsl
dec
add
aaa
dec
paddq
hlt
lock
in
cmpps
mov
fdiv
add
mov
cwtl
xchg
adc
push
xchg
decl
dec
shll
js
jl
inc
imul
js
pop
push
nop
popa
pop
and
push
fs
cs
xchg
dec
leave
nop
pusha
pop
mov
push
int
mov
addps
jns
cmp
pop
add
aad
pop
xchg
test
mov
stc
inc
movsb
adcl
je
dec
sub
adc
jo
mov
pop
jb
in
mov
into
mov
shlb
rolb
pop
pop
icebp
adcl
jno
jle
fistps
xor
add
rcr
arpl
or
sbb
add
scas
cmp
push
aad
mov
aam
push
sbb
mov
xchg
icebp
xchg
sbb
dec
xchg
addr16
rol
pusha
aam
pop
jecxz
jnp
outsl
dec
in
mov
gs
xchg
jae
out
js
mov
and
jb
cwtl
leave
into
jg
push
rcll
stos
int3
cmp
fsqrt
mov
adc
data16
mov
fiaddl
adc
test
mov
mov
push
repnz
scas
mov
jbe
mov
lea
int3
add
mov
mov
or
adc
add
xchg
dec
jno
ret
insl
pop
sahf
pop
out
xchg
pushf
in
jne
xchg
jbe
test
aad
xchg
les
pop
fisttps
rol
mov
arpl
inc
cltd
aaa
adc
mov
cltd
mov
in
lahf
jo
nop
ret
out
inc
repnz
dec
push
cmpsb
mov
jae
cmp
pop
xor
outsb
mov
mov
xor
xor
repz
jns
push
or
sub
mov
inc
jbe
ss
adc
xor
hlt
das
js
xlat
insb
pop
pop
subl
sbb
mov
js
fs
push
filds
scas
cmc
adc
cli
jp
into
push
aad
imul
movsb
loop
jecxz
int
xchg
dec
push
xchg
lea
and
pushf
idivb
sahf
sahf
ljmp
fisttps
lock
pop
mov
mov
jge
inc
jge
mov
lret
subb
mov
in
jbe
xor
pop
jae
subl
cmp
dec
mov
jle
pushf
xor
sub
repnz
inc
in
mov
ljmp
cmp
sbbl
lret
inc
int
mov
sub
xor
pusha
imul
adc
popf
pushf
hlt
mov
cmc
pop
xchg
into
jo
cmp
xchg
cmc
mov
fisubrs
lea
mov
add
sub
mov
aaa
lea
mov
lods
jle
inc
rcll
cmp
add
xchg
popf
xor
pop
ror
jle
mov
pop
lock
notl
pop
enter
jno
cmp
stos
and
int3
nop
xor
or
jmp
int
inc
aas
mov
jb
pusha
call
ja
notl
sub
add
jne
push
sub
mov
cmp
xchg
mov
cmp
stc
push
xchg
out
cmp
les
inc
or
push
mov
sub
fmull
sbb
pop
out
lds
adc
bsr
push
mov
rcrl
js
xchg
adc
mov
xchg
sub
add
push
inc
shl
xor
mov
push
push
lds
inc
jae
dec
ficoml
mov
push
fsubrs
mov
shll
unpckhps
daa
pop
inc
repz
mov
pop
push
test
jo
aad
adc
es
dec
dec
shrl
movsl
mov
mov
xor
into
leave
movsb
js
cmpsb
dec
andl
dec
mov
add
in
lds
lret
add
or
ficoms
mov
adc
iret
mov
dec
mov
push
adc
mov
push
outsb
fcoms
in
push
push
das
stos
int
push
pushw
push
sub
outsl
lret
data16
int
jle
xchg
adc
jge
orb
inc
cltd
mov
into
repnz
adc
and
xchg
xor
mov
lret
xchg
push
out
xor
popa
shlb
cltd
pop
cmpsl
adc
dec
jg
mov
aas
push
mov
push
pop
push
daa
pop
add
pop
mov
and
fsubrs
scas
adc
and
sbb
push
stos
xchg
pop
enter
jle
cs
int
xchg
sbb
out
xor
inc
test
pusha
cwtl
aas
test
mov
xor
test
movsl
cmc
xchg
or
dec
mov
cmpsl
mov
cmpsb
xchg
inc
mov
xchg
xor
inc
jnp
bound
gs
movl
hlt
mov
mov
and
mov
ja
jmp
cltd
push
or
jle
cs
jo
xor
mov
xor
lods
xor
adc
icebp
mov
or
xchg
dec
cmp
stos
jecxz
movsb
push
paddw
sbb
push
jcxz
cmpsb
or
jne
dec
sbb
xchg
int3
cmp
push
movsl
adc
jge
or
pop
sub
imul
xchg
adc
add
pushf
scas
push
jns
push
adc
gs
imul
movsl
jae
add
adc
mov
push
jno
mov
xchg
push
inc
testl
cmpsl
nop
mov
pop
add
cmp
iret
xor
outsl
into
adc
mov
pcmpgtd
aaa
xchg
push
sbb
mov
out
push
add
lds
cmp
pushf
push
popf
repnz
test
mov
xchg
inc
lods
inc
mov
adc
add
sub
popa
jp
xor
fndisi(8087
mov
xchg
push
pop
sub
mov
cld
push
rclb
jbe
sub
sub
cmpb
gs
adc
ja
mov
adc
dec
pop
pop
cmp
xor
jg
mov
nop
addr16
mov
cmp
lahf
push
lahf
ret
aad
cmp
stc
pusha
cmp
cmp
leave
pop
or
aaa
pop
ss
pop
jo
xor
inc
adc
stos
loope
inc
call
mov
jp
rolb
inc
push
imul
push
cmp
idivb
jno
push
xchg
movsl
aas
mov
pop
adc
je
les
or
fld
cs
dec
sbb
jnp
mov
mov
divps
fsubrs
add
or
fisubl
mov
inc
out
stos
pop
push
outsl
adc
push
dec
ss
lods
scas
adc
push
adcl
out
pop
mov
aas
stos
pop
jp
mov
sbb
in
sahf
stc
out
push
mov
cmpsb
shld
sub
imul
and
sbb
out
xchg
lret
adc
incl
loopne
cmpsb
sub
aad
hlt
arpl
cmpsl
mov
push
pop
push
cmc
and
sbb
push
popa
enter
lea
std
jecxz
sub
and
lret
pop
xchg
dec
ja
sti
sahf
sub
mov
cmpsl
push
pushf
mov
jo
xor
cli
lods
mov
xchg
icebp
sub
mov
inc
popa
fcoms
cmpsb
stos
push
vrcpps
and
shll
int
test
rcl
scas
pop
stos
mov
dec
lret
aas
es
cld
sarb
arpl
and
outsb
push
popa
ret
pop
push
lea
sub
sbb
insl
mov
iret
data16
sub
lds
sarb
inc
popl
mov
or
test
std
stos
cld
adc
push
pop
imul
cmp
pop
enter
xor
nop
lea
pop
fwait
mov
in
push
mov
jle
mov
sub
pop
push
sub
dec
xchg
jo
pop
nop
stos
in
mov
add
cmc
cmpl
int
test
push
loope
pop
pop
sub
push
aaa
test
and
jae
jle
aas
cmc
sbb
cmp
lock
push
pop
les
hlt
fdiv
push
mov
jle
xor
sti
sub
leave
xchg
or
repz
xor
gs
jnp
das
push
mov
jo
sub
pop
faddl
sub
xchg
sbbb
inc
aas
adc
adc
out
js
sbb
and
push
mov
ret
jnp,pt
add
adc
repz
dec
mov
mov
cltd
outsl
mov
repz
std
int
jmp
mov
mov
cmpsl
enter
into
jo
stos
ret
lea
cltd
mov
or
and
mov
mov
test
push
ss
jo
push
nop
jns
push
jns
mov
rcrl
inc
out
incb
xlat
aad
cmpsl
mov
cmp
inc
sub
fadds
xor
call
aaa
jo
mov
fbstp
and
dec
out
out
dec
adc
inc
jbe
notb
iret
pop
std
dec
mov
aas
loop
aad
push
mov
sbb
mov
push
daa
repz
push
mov
inc
scas
inc
arpl
mov
imul
jl
pop
add
std
int
lahf
pushf
or
aad
lcall
mov
lds
popl
fsubs
lcall
mov
aad
inc
jge
pop
inc
cltd
xorl
pushf
dec
loope
adc
in
out
scas
stos
xchg
insl
push
das
xor
push
popf
arpl
mov
mov
sbb
mov
aad
je
dec
dec
inc
mov
push
out
js
push
push
mov
mov
outsb
push
ret
add
daa
out
in
inc
jg
mov
out
jg
sub
mov
f2xm1
pop
xchg
dec
cmpsl
aaa
mov
mov
ds
xchg
and
pop
mov
or
jmp
dec
or
out
adc
scas
in
shrb
push
mov
mov
addr16
push
or
ficoml
xchg
aas
fnstsw
leave
sub
stos
jecxz
test
sbb
aad
adc
addr16
stos
jns
dec
mov
addr16
cmp
jb
jl
ss
mov
and
cmp
xchg
jne
mov
outsb
adc
cmp
and
pop
mov
in
jno
and
pushl
stos
xchg
leave
xor
std
mov
popf
mulb
stc
push
push
mov
sub
mov
inc
or
xor
popf
jo
loop
jp
js
or
xchg
cmp
sub
mov
orb
popa
movsl
lahf
mov
mov
mov
popf
jge
out
dec
adc
xchg
cli
aad
dec
scas
daa
loope
jns
enter
testl
test
or
inc
addr16
cmp
add
xchg
sarb
mov
adc
xchg
in
add
and
or
pop
into
lahf
test
xchg
dec
shlb
mov
push
dec
mov
outsb
mov
and
pop
mov
imul
jmp
in
jae
test
inc
shll
sbb
popf
inc
mov
xor
aaa
cmp
fldenv
aam
sarb
or
adc
mov
outsb
lahf
adc
mov
sbb
sbbl
jg
jmp
test
adcb
adc
lret
daa
push
dec
adc
pop
xchg
gs
loop
cwtl
in
outsb
testl
orb
jmp
nop
push
cld
iret
lea
les
mov
nop
xor
mov
test
inc
scas
fadds
lds
sbb
mov
iret
les
sub
aas
mov
cmp
popf
add
aaa
xor
leave
test
in
sahf
cmc
lret
std
or
push
ret
jecxz
pop
sub
pop
xchg
cmp
in
repz
mov
es
mov
in
jecxz
mov
ss
adc
gs
leave
and
in
mov
jae
aaa
inc
cltd
mov
lret
stc
ja
imul
scas
xor
daa
mov
sub
inc
inc
add
xchg
cwtl
xchg
aas
jp
push
mov
out
push
lret
jne
push
sbb
sahf
icebp
mov
jecxz
and
xor
xor
aad
xchg
into
jnp
out
push
outsb
iret
mov
adc
push
adcb
nop
inc
cwtl
in
movsl
sbb
or
stos
mov
push
cmp
or
add
mov
inc
inc
pop
cmp
fldcw
movsl
pop
lock
sbb
cmpsl
mov
adc
fisttps
dec
and
sti
push
push
pop
aad
pop
loopne
in
jnp
aam
dec
ss
mov
stos
clc
pop
xchg
pop
in
aas
imul
aam
and
outsb
and
rcrl
dec
xchg
jns
push
dec
inc
lea
in
mov
movsl
jmp
mov
jns
xor
out
xchg
adc
jle
dec
push
add
mov
sarl
lods
sub
int
test
movsb
add
movsl
push
inc
lds
or
push
fwait
movsl
xor
push
das
push
push
shlb
and
mov
testl
sub
lods
push
insl
mov
xor
aaa
mov
pop
push
jnp
imul
lahf
int
xchg
movsl
mov
shll
scas
int3
out
adc
mov
cmpsb
sbb
push
dec
and
xorb
aam
push
jnp
cmp
push
jo
stos
je
pop
inc
imul
mov
mov
ret
aad
inc
nop
xchg
sbb
insb
inc
pop
scas
mov
aas
gs
mov
xchg
adc
stos
js
fcompl
mov
jo
jg
inc
dec
stc
and
push
bound
xor
loopne
sub
inc
xchg
das
adc
adc
fsubrl
mov
sub
xchg
pop
nop
sahf
cmp
loop
ret
sete
test
mov
adc
cmpsb
mov
jge
decl
mov
xchg
jle
dec
pop
dec
popf
dec
add
stos
movsl
sbb
popf
inc
sahf
lahf
movsl
or
inc
add
stos
cmpsl
rclb
nop
or
rcrb
jne
stos
sahf
movsl
cmpsl
or
scas
dec
sub
adc
iret
cmc
push
loopne
mov
stos
std
adc
icebp
and
inc
je
jle
sbb
mov
push
outsl
adc
add
pushl
pop
push
mov
mov
mov
inc
mov
aaa
cmp
js
and
stos
adc
xchg
inc
xchg
cs
push
lahf
cmp
lahf
ret
popf
mov
pop
or
mov
push
dec
repnz
mov
call
push
xorl
daa
pop
negl
shll
scas
rclb
jg
sbb
lds
xchg
ljmp
movl
inc
pop
test
xchg
mov
mov
lods
pop
push
imul
cwtl
scas
adc
mov
and
add
and
jnp
xchg
ss
stc
cwtl
xor
mov
add
gs
inc
cmp
dec
jg
shl
pop
scas
adc
pop
mov
push
pop
stos
incb
cwtl
xchg
and
jle
pushf
xor
add
sub
mov
sub
adc
jle
outsb
xchg
sub
aad
cmp
into
xchg
nop
ds
ret
and
aas
fsubs
cmp
int
xchg
aas
mov
xor
icebp
test
and
inc
push
scas
loope
addr16
insb
dec
pop
pop
stos
pop
nop
jl
dec
mov
adc
inc
push
mov
ja
jge
xchg
sbb
lcall
ja
clc
mov
in
fcoms
jp
aaa
icebp
ret
push
iret
inc
mov
mov
in
daa
sbb
mov
out
fistps
ja
jmp
dec
aad
inc
or
xchg
cmpsl
aaa
jbe
inc
xchg
mov
or
fsubl
jnp
adc
ret
sub
ja
mov
xchg
subl
or
or
notb
xchg
sbb
sbb
fmul
inc
jno
cmc
inc
into
stc
push
inc
lea
imul
xchg
addr16
vorps
adcb
lret
std
out
fimull
cltd
scas
jl
add
aaa
xchg
sub
popf
cmpsl
mov
rorl
pop
ret
jnp
aaa
addr16
xchg
adc
arpl
inc
push
stc
jne
mov
mov
jge
or
xchg
jge
inc
int
pop
xchg
mov
mov
mov
lcall
iret
pusha
ds
mov
pop
jb
inc
jmp
stc
pop
rcrl
stos
scas
das
fists
cmp
dec
mov
cmpsl
xchg
mov
or
in
mov
cld
mov
shll
xchg
sbbl
xchg
mov
data16
lret
test
inc
inc
mov
mov
xchg
mov
xorl
cmp
mov
lods
mov
lods
mov
xchg
mov
xchg
adc
sbb
dec
js
data16
fnstcw
push
xor
gs
pop
add
sub
push
xchg
sahf
sti
out
xchg
js
mov
jbe
popf
xchg
das
and
lds
sub
out
mov
xor
repz
fs
mov
movhps
cmp
push
fstpl
cmpsl
mov
inc
inc
adc
jns
aam
jae
xchg
cmp
in
pop
ss
jnp
into
imul
stc
roll
push
or
xor
leave
adc
rcrb
mov
mov
inc
int
fsubrp
pop
lds
popl
mov
xor
jae
aaa
pop
pop
mov
inc
cltd
inc
mov
fadds
dec
push
lret
sub
outsb
mov
mov
jecxz
adc
pop
adc
movsl
aad
push
addr16
pop
fbstp
test
mov
mov
scas
xchg
sub
les
adc
rolb
nop
into
out
push
mov
out
or
mov
imul
sub
sbb
repz
lods
cmc
jle
xchg
xchg
js
inc
jb
or
xchg
lret
jbe
adc
jno
and
push
add
pop
sahf
insb
aad
and
data16
push
cwtl
test
int3
mov
repz
in
mov
cmp
ret
cmp
loope
orb
aaa
das
jb
and
sbb
sub
outsb
fiadds
lahf
jbe
lcall
test
sar
mov
cltd
lahf
movsb
jno
lds
mov
lret
ficomps
scas
imul
xor
lea
imul
cmpb
out
mov
icebp
xchg
addr16
enter
outsb
mov
jge
xor
push
jno
mov
mov
inc
xor
lods
cwtl
pop
shll
push
mov
andb
mov
push
adc
fsubrp
xchg
aaa
fs
pop
popf
fsub
xchg
movsl
ja
in
aad
shll
pop
sti
addr16
mov
aaa
push
sub
mov
pop
divb
pop
add
push
shr
cltd
int
iret
aas
gs
je
cmp
jo
pop
and
sbb
jbe
lock
loopne
lahf
sbb
pop
xchg
sub
lret
push
aad
or
push
cmp
popa
test
xor
pushl
in
xor
and
jecxz
aam
std
push
pusha
inc
push
cmp
sub
mov
pusha
jp
sub
mov
data16
mov
push
pop
jmp
xchg
lahf
dec
ja
add
push
mov
je
adc
mov
xchg
into
xor
adc
rep
xchg
test
fildll
nop
daa
out
scas
xchg
xlat
aam
adc
test
ficompl
out
xlat
lock
adc
lahf
fidivrl
cmc
push
jae
and
cmpsl
adc
sarl
xchg
mov
push
enter
cs
mov
mov
mov
lcall
mov
mov
ds
nop
daa
jnp
xorb
inc
jecxz
or
inc
mov
add
sbb
les
mov
or
push
test
cmove
daa
loopne
sbb
loope
scas
inc
nop
aad
jno
std
sahf
adc
or
in
movsl
mov
das
movsl
fisubl
xchg
jo
movsl
es
dec
nop
xchg
les
push
outsb
ljmp
adcb
fs
outsb
test
stos
inc
mov
cmc
ja
mov
dec
sub
push
mov
xor
lahf
jnp
ss
sahf
mov
dec
addl
aam
add
pop
push
sbbl
test
scas
dec
inc
lret
xor
shlb
add
stc
aaa
int
loop
adc
xchg
hlt
inc
push
movsb
dec
or
or
mov
sbb
or
int
in
arpl
jnp
testl
inc
aas
mov
sti
jne
jge
and
sbb
mov
testb
sarb
ds
cmp
ss
daa
and
push
jne
arpl
ret
lret
aaa
adc
push
jg
arpl
imul
lea
inc
sbb
adc
enter
xchg
loope
and
lds
xchg
mov
mov
adc
jge
lds
and
jnp
xor
jns
dec
dec
xchg
sub
jecxz
dec
icebp
inc
test
cmp
push
pop
jae
inc
xchg
movsl
daa
adc
int3
lcall
pop
repz
lahf
jmp
imul
lea
pop
popf
mov
lds
push
lahf
out
jmp
leave
mov
mov
or
stos
xchg
aas
cmp
ds
mov
mov
xchg
or
hlt
xor
ja
stos
mov
jmp
aaa
mov
push
jg
repz
fcomps
imul
jge
push
adc
repnz
popf
aaa
inc
pusha
in
mov
decl
or
je
adc
mov
pop
cltd
ljmp
arpl
jno
xor
daa
and
inc
sti
adc
sub
cld
int3
ror
cmc
lret
push
idiv
add
in
in
cmp
pop
mov
out
jge
and
xor
adc
roll
lock
ja
neg
scas
xchg
sbb
or
test
jecxz
add
lcall
ds
mov
mov
sbb
and
imul
and
push
adc
jg
movsb
lods
mov
push
inc
pop
idivl
fnsetpm(287
test
pop
aaa
xlat
movsl
mov
adc
repz
mov
inc
xchg
outsb
loopne
pop
cmpsb
out
sbb
mov
jo
aaa
xchg
das
xchg
nop
sahf
and
pop
int3
nop
fiaddl
lahf
test
movsb
fbld
xchg
js
push
ds
xchg
ss
cli
adc
sbb
divb
xchg
pop
adc
push
subl
inc
xchg
rclb
xor
mov
outsb
xor
rcll
scas
fdivr
push
cld
out
fnsave
lock
in
xor
int
or
jb
pusha
inc
add
hlt
fimuls
data16
stc
std
sub
scas
pop
mov
loop
test
push
xorb
je
lods
repnz
sub
mov
lods
jmp
lahf
cld
dec
out
psllq
sbb
movsl
imul
test
xlat
daa
std
dec
xor
imul
mov
daa
inc
xor
add
rcrb
and
in
out
sbb
and
sub
xor
xchg
outsl
data16
std
sub
mov
mov
or
in
and
shlb
adcb
and
andl
repnz
cmp
xchg
xor
pop
shll
sbbl
daa
push
jnp
dec
and
xchg
sbb
xchg
jmp
int3
and
push
xor
int3
ds
sub
pop
sub
cmc
push
mov
sub
lahf
adc
sub
jbe
lret
adc
cmpl
or
xor
dec
mov
hlt
repz
in
push
test
vmovdqu
mov
ret
lods
mulb
hlt
push
ret
rorl
ljmp
inc
dec
xchg
int
inc
je
cmpsl
pop
or
push
fs
adc
and
lds
mov
aad
push
stos
cs
pop
pop
mov
jp
pop
dec
xchg
push
adcb
lret
xchg
push
or
xor
sahf
mov
stos
rcrl
push
sub
jmp
xchg
xchg
cmp
push
imul
inc
sahf
popf
and
mov
push
in
iret
pop
gs
inc
repnz
outsb
adc
jl
add
xchg
std
xor
cmp
iret
push
sbbl
xchg
xor
aad
aad
sub
rolb
mov
test
fiadds
movsl
push
xchg
dec
imul
repz
lea
inc
mov
or
insb
xchg
pop
mov
adc
mov
inc
bswap
xor
xchg
mov
cld
js
jle
pushf
mov
pop
and
and
xchg
cmp
pop
and
imulb
out
sbb
cwtl
jl
inc
xlat
in
xchg
cmp
repnz
je
cmpsb
loopne
cmpsl
mov
mov
push
cmp
or
xor
jp
cmp
subl
dec
xor
sub
das
scas
dec
into
xchg
push
cmp
adc
repz
in
mov
cmc
xor
xchg
aas
jbe
jae
js
es
mov
mov
jecxz
jmp
cld
push
sub
or
mov
adc
adc
stos
mov
fwait
dec
shrl
inc
inc
rorb
push
loop
inc
iret
pop
mov
shr
ja
mov
push
or
push
bound
inc
jg
xchg
jne
ja
lods
int3
repz
dec
push
or
cmc
int
mov
mov
lea
pop
inc
lds
mov
sub
sub
or
fs
gs
add
ljmp
js
dec
xor
mov
add
fidivrs
das
pop
push
lods
shlb
pop
sub
add
dec
rcll
stos
filds
and
outsb
inc
pop
cmpl
aaa
push
out
mov
adc
rcl
cmpl
loop
inc
imulb
mov
mov
test
jge
aaa
dec
inc
inc
push
push
dec
adc
and
fadd
push
stos
repnz
hlt
jg
fisttps
loope
jl
data16
fisubs
inc
nop
ficomps
mov
inc
inc
mov
sarl
jmp
dec
fbld
hlt
es
or
vpshaq
sub
in
cmpsl
movsl
repnz
xchg
mov
inc
ja
lahf
imul
add
xchg
es
mov
popf
xor
adc
hlt
daa
in
in
dec
lods
pop
xchg
pop
aad
testb
test
jg
into
shlb
jg
fwait
xchg
jo
scas
adc
mov
sbb
movsl
and
test
into
xchg
pop
push
xor
inc
enter
daa
jo
xor
inc
xorl
or
pushf
jp
popa
pop
inc
sahf
pop
pop
subl
xor
xchg
mov
outsb
mov
xchg
dec
xchg
or
mov
je
aas
repz
int3
mov
movsb
rorl
gs
fwait
or
or
jl
fnstenv
lahf
push
pop
mov
xchg
outsl
jle
addr16
xchg
in
pop
jl
push
xor
jae
xchg
cmp
push
or
pop
or
adc
mov
popa
inc
scas
xchg
adc
and
shr
aad
jbe
mov
ret
mov
aaa
jnp
adc
pop
pop
aas
xchg
mov
movsb
pop
cltd
mov
mov
inc
xchg
or
ficoml
repnz
xor
cmp
jl
and
mov
mov
in
mov
sahf
push
mov
in
scas
xor
into
mov
sbb
in
gs
repz
stos
jb
inc
adc
add
icebp
dec
or
cmp
sbb
negb
sahf
dec
jno
aad
pop
mov
jge
and
stos
lea
pop
jne
pop
inc
subl
pop
inc
call
cmp
xchg
pop
cmp
incl
lds
mov
mov
lahf
lret
mov
mov
aaa
data16
stos
std
shrl
adc
inc
xorl
lahf
int
leave
sbb
adc
push
mov
inc
mov
lods
xchg
or
sbb
pop
pop
pop
arpl
js
sbb
ret
stos
sub
lcall
jp
insl
iret
scas
mov
pop
jmp
push
mov
enter
mov
push
ja
xchg
xor
test
or
lods
jne
xor
ret
testb
jle
frstpm(287
jge
not
aaa
lods
push
or
mov
mov
inc
fisttpl
cmp
jb
ds
mov
aaa
nop
das
in
loop
xor
jae
mov
fldenv
test
sbb
xchg
mov
sbb
insl
xorl
cmc
test
xchg
adc
iret
arpl
subb
mov
out
fidivrs
dec
xor
call
dec
sub
sarb
repz
and
shll
xor
lea
je
lret
aaa
out
pop
iret
movsl
xchg
sbb
iret
cmc
aas
jae
notb
fiaddl
push
ja
and
fdivrl
test
std
pop
xor
mov
xor
add
cmpl
push
lea
loop
sbb
out
dec
pop
repz
gs
sbb
popf
xchg
xchg
xchg
xchg
pop
adc
or
xchg
imul
push
hlt
mov
and
or
mov
stos
aad
enter
mov
inc
mov
icebp
or
cltd
aad
stos
inc
adc
gs
mov
adc
cmp
fs
aaa
mov
sbb
rcl
mov
clc
mov
jnp
sbb
iret
rclb
loop
xchg
lods
outsl
xchg
andl
adc
popa
inc
dec
jecxz
dec
divl
shll
dec
subl
push
cs
popf
sbb
xor
and
add
out
lds
mov
mov
mov
sbb
inc
xchg
bnd
aad
js
cmpl
push
sub
leave
pushl
lret
ljmp
imul
cmp
negb
pop
lds
mov
negl
xchg
xchg
sbb
cmp
xchg
iret
mov
cmp
mov
and
sbb
ret
clc
insb
push
xchg
cwtl
iret
repnz
dec
fsubl
subl
or
mov
xchg
out
gs
push
sahf
test
ds
xor
lahf
clc
cmc
dec
aam
fwait
aaa
push
add
pop
lods
leave
jge,pt
loop
xchg
push
mov
aam
push
sbb
or
aad
jnp
inc
jge
xor
mov
fwait
dec
xchg
in
jne
cmpsl
lods
mov
aaa
mov
add
in
les
les
and
vunpckhps
mov
jge
fldt
out
fs
inc
stc
imul
lahf
stos
mov
das
mul
inc
mov
mov
loope
cmpsl
dec
negb
mov
jb
inc
push
lods
jp
div
popa
fnstcw
sub
xchg
mov
adc
adc
mov
icebp
add
xor
les
adc
ficoml
sub
dec
pop
xchg
imul
mov
and
push
int
push
and
scas
int
ss
divb
push
xchg
inc
lock
adc
pop
cmp
mov
sbb
fmull
ror
mov
cmp
decl
mov
lahf
ffreep
das
push
or
mov
pop
push
aad
pop
addl
fisttpll
and
push
push
mov
int3
sbb
js
clc
mov
xchg
aam
iret
mov
test
inc
ss
hlt
scas
clc
mov
mov
fidivrl
jne
xchg
push
mov
pushw
dec
stc
outsb
repz
cmp
enter
jmp
jae
adc
daa
push
nop
das
pop
mov
mov
or
xor
xchg
lret
adc
push
mov
les
dec
shll
or
mulb
pop
push
cmpsl
mov
mov
imul
dec
mulb
pusha
push
sub
fcmovb
in
adc
or
testb
aam
or
repz
psubw
xchg
mov
out
push
jno
aas
jge
pusha
fstps
enter
data16
outsb
aad
cli
cmp
jo
test
add
test
pop
jnp
inc
mov
test
xor
push
sub
pusha
jg
dec
mov
sub
and
xchg
push
and
mov
aaa
clc
or
pop
out
or
jns
sbb
rcll
fimuls
mov
mov
movsl
jge
js
pop
mov
ja
lret
out
push
mov
xor
mov
in
inc
jecxz
into
adc
pop
push
xchg
mov
ret
jo
andb
mov
adc
daa
adc
adc
cltd
mov
and
lds
mov
jnp
aaa
push
js
push
jae
add
imul
cmpsb
mov
add
sbb
or
xchg
hlt
mov
ljmp
nop
imul
jo
fiaddl
lret
cvtps2pi
lret
std
cmp
sbb
neg
inc
icebp
iret
xor
push
movsl
mov
fs
xchg
aad
mov
ja
jmp
aaa
push
xchg
lahf
mov
rolb
push
xor
push
mov
and
xchg
rcrl
inc
pusha
pop
mov
imul
adc
nop
inc
fbstp
mov
xchg
test
int
cld
sbb
push
ja
cmovge
scas
adc
and
into
mov
jecxz
push
xor
lds
inc
and
ja
and
add
ja
mov
jbe
pop
shlb
pushf
or
add
dec
lahf
lods
mov
jle
bswap
and
mov
cmp
outsb
cltd
rcll
and
adc
scas
sub
mov
xor
int
into
hlt
out
jne
mov
movsb
clc
jns
push
and
rcrl
push
adc
cmp
sbb
scas
mov
in
js
push
or
dec
mov
inc
test
data16
push
xchg
adc
or
std
add
aad
imul
dec
ror
imul
test
and
dec
pop
push
xor
in
pop
adcb
js
adc
ljmp
or
stos
sti
icebp
iret
mov
xchg
mov
js
sub
repz
repz
jge
sub
push
xchg
jle
cmc
sbb
pop
cmp
in
push
mov
out
aam
pop
jbe
mov
xor
les
xchg
popf
loopne
mov
or
and
in
mov
mov
inc
pop
rorl
add
ud1
faddl
ret
flds
adc
cmp
lret
stos
xchg
aad
iret
dec
into
fists
mov
std
sub
out
gs
mov
icebp
jae
ja
jge
sbb
out
mov
and
stos
ja
enter
mov
mov
inc
jnp
popa
lret
ds
pop
jns
es
add
es
and
dec
pop
and
and
mov
std
leave
mov
mov
out
inc
sub
or
ror
leave
mov
cmp
xchg
pop
pop
aaa
leave
enter
popa
and
mov
inc
sbb
mov
lahf
sub
iret
clc
shlb
add
push
test
mov
js
and
push
daa
in
lret
out
imul
mov
adc
sbb
movsl
jno
push
cmp
jp
mov
lds
mov
lahf
mov
and
lods
sub
mov
fiadds
ror
sub
xor
add
dec
nopl
push
scas
aad
jbe
inc
enter
scas
push
pop
and
jbe
clc
bound
cmp
and
pop
aam
repz
fnop
adcl
sbb
flds
fldt
movsl
stos
and
ret
and
insb
mov
movsl
aam
xchg
sbb
and
aad
lcall
js
std
cmp
test
sbb
imul
cmpl
or
jae
push
mov
add
sbb
or
push
aas
jnp
jne
mov
gs
testl
mov
and
jbe
inc
cmp
mov
int
popa
cmpsl
xchg
adc
movsl
mov
mov
push
dec
imul
movsl
xchg
jnp
clc
icebp
pop
and
dec
inc
sub
add
sub
pop
inc
mov
xchg
sbb
sub
call
mov
int
lahf
ds
jnp
pop
std
adc
rorb
and
xchg
jle
leave
pop
test
lods
icebp
cmp
jle
repnz
mov
scas
mov
mov
or
ret
or
jb
repnz
dec
sbb
idiv
jmp
jns
shll
gs
cmpsb
cmc
int
or
lods
adc
subb
push
sbb
jle
mov
push
dec
repnz
daa
imul
ja
movsb
popf
xchg
ss
jo
imul
sahf
repz
in
inc
xor
int
daa
sbb
into
imul
mov
dec
xchg
int3
imul
mov
out
xor
inc
int
sub
xor
sbb
aas
adc
aaa
int3
std
cmp
daa
mulb
jle
add
fsubrs
jecxz
jns
mov
mov
cmpsl
addb
out
dec
adc
mov
push
hlt
scas
addr16
sub
or
and
pop
lds
out
push
pop
js
xor
loope
pop
xchg
imul
pop
into
adc
mov
sahf
adc
fwait
lahf
out
cmp
popf
pushl
hlt
inc
clc
pop
dec
clc
mov
in
nop
lret
sbb
mov
xchg
out
dec
hlt
inc
clc
ss
add
hlt
in
cs
push
stos
ss
mov
mov
sub
test
call
mov
or
mov
mov
test
movsl
mov
push
push
int
clc
into
or
mov
lods
jge
hlt
cmpsb
mov
mov
xor
push
fcoml
push
loopne
pop
rcll
push
ret
mov
ss
pop
mov
sbb
jns
push
mov
loope
push
mov
lcall
hlt
dec
fxch
xchg
nop
lock
testl
mov
push
in
lods
loope
pop
mov
scas
xor
rclb
mov
popa
mov
cmp
xchg
ss
daa
gs
out
rcll
push
mov
in
mov
neg
push
or
mov
loopne
out
fists
sbb
ja
sbb
enter
sarl
in
push
clc
out
std
cltd
fcomps
imul
das
adc
cmp
mov
cmp
rcrl
and
pop
iret
pop
xchg
aaa
iret
inc
movsl
faddl
mov
scas
repnz
jmp
test
sbb
lea
adc
daa
adc
fstl
out
sbb
push
imul
or
xchg
mov
movsb
out
pusha
unpckhps
mov
js
je
inc
mov
sbb
mov
repz
jne
addb
lods
push
inc
pop
xchg
faddl
movsl
sub
cmp
fisttpl
loopne
mov
scas
and
cmpsb
xchg
jmp
mul
xor
mov
not
ja
dec
mov
shrb
nop
shll
js
fistpl
daa
or
nop
aad
xor
jnp
push
sbb
scas
daa
clc
mov
mov
mov
aam
push
xor
scas
loopne
outsl
mov
jle
scas
mov
jp
adc
fmull
stc
pop
push
push
out
xor
adc
hlt
pop
push
sub
mov
mov
cmpsl
sbb
mov
or
outsl
test
xor
das
pause
in
test
arpl
adc
imul
mov
arpl
sbb
rcll
lds
push
cmp
ret
test
cwtl
mov
test
adc
adc
and
daa
adc
insl
jnp
adc
and
xchg
fcmovb
int
scas
hlt
mov
push
push
adc
pop
push
jmp
push
outsb
ss
fstp
sahf
out
aam
cmpsb
xor
or
or
sub
adc
push
pushf
dec
adcl
rcr
fmull
add
mov
iret
les
rcll
fidivl
jecxz
dec
ss
sub
push
and
loop
nop
dec
imull
lea
and
pop
ds
mov
sti
ja
jg
fwait
mov
cmpsl
mov
xor
pop
scas
push
scas
shrl
mov
xchg
test
mov
mov
cmp
or
mov
ret
cmpsb
loope
hlt
js
lods
xchg
cmp
loopne
hlt
pop
xchg
dec
or
out
les
xchg
fmull
jnp
jge
aaa
data16
xchg
mov
mov
xchg
cmp
jnp
shlb
subb
cmp
gs
mov
shlb
sub
adc
divl
movsl
jl
dec
js
lock
test
lahf
nop
xor
in
out
pop
push
push
push
add
push
xor
mov
xchg
movsl
mov
pop
je
dec
sbb
inc
test
push
pop
and
test
pop
push
ret
pop
xor
int
inc
xor
cmp
roll
mov
clc
jg
cmc
movd
sar
movsl
in
test
out
xchg
jl
in
ret
sbb
leave
sub
enter
or
loope
or
jns
xchg
rorl
mov
jb
test
xor
lret
rorl
and
imul
lahf
cmp
mov
or
ja
sub
enter
in
imul
lods
je
scas
pop
jnp
in
ret
mov
stos
lret
loop
into
shr
mov
fcmovb
in
loopne
mov
ret
inc
aaa
arpl
add
insl
mov
mov
jns
sti
imull
into
and
sub
mov
cmovae
pop
sub
jne
or
inc
jg
jge
mov
jnp
daa
mov
das
mov
pop
adc
cmpsl
out
xor
xchg
aam
nop
mov
xchg
jno
sbb
inc
loopne
insb
jno
cmpsl
mov
int3
xchg
mov
cmp
sub
inc
ja
inc
xor
scas
mov
int
rol
and
cli
fsubp
sbb
aaa
icebp
add
mov
fcmovnu
mov
jbe
push
mov
pop
mov
mov
jb
scas
push
xchg
loop
mov
mov
inc
dec
push
xchg
cs
jp
ret
mov
pusha
fildll
adc
iret
mov
sub
xchg
je
in
rcr
rclb
mov
ficoml
in
mov
into
adc
inc
aaa
inc
dec
jecxz
enter
jns
xor
and
imul
pop
jg
cltd
mov
mov
sahf
sbb
ss
mov
cmc
dec
push
aam
push
stos
cmpsb
dec
inc
xchg
jp
andl
push
nop
insl
and
sub
stc
push
push
ja
sahf
push
and
orb
push
inc
test
lds
scas
loop
push
loopne
mov
push
or
mov
shrb
rorb
dec
out
add
jo
stc
ds
and
movl
js
inc
inc
inc
fisubrl
ja
imul
jl
shll
scas
xorl
pop
inc
inc
pop
popf
adc
loop
inc
gs
inc
push
lret
jno
lods
cmp
mov
inc
nop
repz
xor
add
aam
cmp
loope
adc
push
out
imul
aam
popf
push
sbb
clc
mov
xor
sbb
mov
imulb
mov
lods
add
aaa
ljmp
mov
inc
ficompl
jbe
fidivrl
xchg
popa
out
aaa
mov
add
or
aaa
or
icebp
inc
stc
sbb
add
mov
push
jge
and
pop
xor
pop
mov
or
mov
cltd
mov
les
jnp
shll
push
daa
push
mov
nop
xchg
jae
mov
xchg
cmpsl
mov
jne
push
xchg
ss
jne
shll
cmpsl
test
fidivs
jecxz
rclb
and
jecxz
out
test
adc
pop
arpl
imul
int
sbb
aas
test
dec
sahf
ss
fadd
repz
aaa
inc
inc
pushaw
mov
fbstp
loope
cmc
or
imul
rolb
jecxz
jne
lock
or
push
jbe
inc
xor
xchg
dec
incl
pop
and
aas
out
mov
gs
ror
in
pushf
push
xor
jecxz
out
push
add
mov
and
mov
dec
mov
push
sbb
jbe
mov
addr16
xchg
pop
sub
int
rcrl
in
xchg
test
std
push
mov
mov
sub
sub
and
jae
lods
adc
mov
pop
in
imul
push
adc
ljmp
out
jge
cli
aad
or
xchg
orl
gs
sbb
std
jecxz
mov
ret
mov
lock
negl
jmp
adc
cmp
mov
idiv
test
sub
jecxz
scas
cld
ret
jmp
jl
push
xchg
lret
jle
xchg
cs
inc
cmpsb
sbb
inc
stos
xor
push
test
cltd
xchg
divb
enter
jmp
pop
stos
std
adc
jge
movsb
shlb
mov
inc
int3
scas
aad
ret
jne
push
ret
add
xchg
stos
push
das
pop
ret
inc
clc
and
aam
push
xchg
pop
xchg
mov
or
xchg
jmp
lea
aam
sub
sbb
and
mov
in
test
mov
push
add
mov
add
ret
mov
jle
test
mov
mov
scas
std
inc
add
ret
jl
stos
adc
inc
scas
pop
arpl
and
ja
mov
pop
inc
mov
dec
dec
outsb
fnstenv
push
ja
cmp
xor
fwait
ljmp
jno
or
adc
add
aas
adc
into
clc
cmc
loope
and
cmpsl
and
jle
inc
ljmp
test
out
adcb
hlt
jp
das
fdiv
leave
cmc
push
dec
out
aam
dec
sbb
xchg
mov
adc
sbb
ret
mov
lods
ss
mov
jg
int
push
fisttpl
nop
push
xchg
cld
fsubrl
adc
xchg
mov
pop
outsl
jecxz
sbb
scas
arpl
adc
ljmp
xchg
call
faddl
loopne
icebp
rorl
inc
imul
loop
push
in
push
stos
js
sbb
aad
push
xchg
push
aas
pop
jecxz
ja
push
dec
dec
mul
mov
inc
inc
shrb
xchg
mov
repz
push
xchg
mov
cmp
test
lock
cmp
mov
dec
repnz
shlb
cmp
push
repz
pop
pop
aad
lret
cmc
mov
mov
in
imul
lock
sbb
or
int3
lds
sbb
repz
lahf
roll
out
test
dec
xrelease
in
jnp
testl
mov
in
sbb
push
adc
aad
add
push
enter
xchg
rcll
pop
ja
shrb
jge
mov
jg
mov
push
mov
add
stos
scas
test
stos
cmc
cmp
push
cli
adc
mov
loope
jns
or
or
add
mov
pop
mov
xchg
dec
cmc
push
dec
dec
std
inc
mov
data16
adc
xor
push
divb
mov
push
pop
pop
push
xchg
xchg
mov
lea
cmp
adc
and
bound
cltd
popf
ja
push
leave
andl
dec
xchg
shrb
push
sub
jl
aad
push
adc
xchg
sar
lea
test
push
push
sbb
push
pop
xchg
imul
scas
pop
aaa
aas
and
inc
fwait
cmp
addr16
imul
rcrb
xchg
cmp
mov
and
push
dec
fiadds
test
pop
mov
int3
cwtl
ds
add
cmp
scas
adc
ret
push
pop
push
ja
xchg
gs
es
mov
ds
aad
icebp
xchg
icebp
push
sub
insl
adc
nop
insb
aad
movsb
adc
out
pop
sbb
popa
decl
push
jge
loope
pop
sub
jbe
jg
ret
mov
dec
jecxz
cs
push
jl
mov
inc
jg
push
mov
jmp
pop
xchg
shld
int
push
ret
mov
rclb
jne
sub
filds
arpl
cmp
aad
mov
add
dec
int
jbe
fstl
mov
hlt
pusha
cmp
and
pusha
scas
aad
mov
jge
dec
push
in
repz
jno
mov
ss
bnd
adc
in
inc
mov
dec
das
lret
add
out
int3
lea
loopne
lods
cmp
inc
popa
ss
in
lret
jo
lret
pushl
mov
cmp
cwtl
or
movsl
lds
aaa
xchg
xchg
daa
xchg
adc
data16
mov
pop
push
mov
lock
incb
ja
lretw
aad
mov
aad
adc
movsl
pop
cmp
sbb
in
pop
stos
push
dec
arpl
iret
pop
pop
inc
iret
mov
inc
bound
or
jge
scas
aad
cmp
fwait
mov
jo
mov
jnp
mov
lds
xchg
adc
adc
adc
mov
lock
mov
dec
mov
cmp
sub
mov
arpl
pushl
push
fldenv
inc
sbb
jae
inc
push
push
lds
leave
sbb
adc
mov
dec
sbb
rcll
pop
das
iret
mov
ds
fmulp
dec
imul
stos
cmpsl
rorl
lds
pop
push
sub
jmp
repz
xor
cli
stc
sahf
xchg
insl
or
into
repnz
dec
dec
arpl
ucomiss
mov
out
and
imul
outsb
or
pop
or
mov
xchg
adc
xchg
jmp
addr16
cmpsb
inc
xchg
adc
and
inc
hlt
xchg
mov
sbb
decl
scas
dec
push
jne
pop
jg
push
xor
inc
push
scas
jns
push
push
xchg
sub
jp
cmp
insl
mov
push
jno
adc
sub
mov
pslld
jne
mov
jnp
mov
js
shll
gs
jne
push
arpl
or
xchg
mov
xchg
jle
sbb
jg
mov
lea
test
fwait
xchg
dec
fdivrl
nop
fwait
out
or
pop
scas
fisttpl
dec
test
or
dec
and
hlt
xchg
mov
pop
test
ss
movsb
loop
out
movsl
mov
adc
fdivl
sbb
inc
pop
adc
loope
ss
jne
lret
test
ret
push
inc
sub
in
pushl
mov
xchg
sbb
aaa
sub
lods
jo
sub
jge
mov
sub
mov
insl
popf
int
iret
ffreep
fsubrl
jp
inc
not
fwait
in
sahf
shr
mov
cld
sub
sbb
mov
loop
sbb
mov
mov
mov
pop
enter
add
pop
mov
ret
adc
sub
xor
mov
sub
xchg
push
and
fwait
cmc
int
jns
js
stos
mov
mov
mov
cli
jle
mov
xchg
adc
pop
mov
mov
pop
out
aad
dec
mov
mov
sub
push
daa
repz
dec
and
xor
mov
faddl
or
stos
inc
cwtl
out
add
sbb
mov
lods
decb
mov
movsb
lea
outsb
sahf
in
or
push
lret
jo
pop
lcall
fcoms
lods
or
mov
fcomp
xor
jnp
ljmp
int
push
push
mov
push
jae
fimull
xor
xchg
xor
out
add
mov
out
daa
pop
jo
mov
pop
cmpsb
mov
jecxz
mov
stos
jl
mov
jbe
fsts
mov
lret
shll
in
fisubs
push
and
lds
add
push
and
aaa
std
push
cmp
mov
push
sbb
xchg
mov
aas
sarl
mov
fdivrp
mov
sub
ret
sahf
xchg
shll
iret
stos
adc
jbe
inc
mov
jnp
push
sbb
add
inc
mov
xchg
imul
js
or
or
iret
mov
dec
outsb
and
jnp
fsubs
mov
push
shr
lods
xor
jge
cld
cmova
push
mov
ja
mov
inc
sub
cmp
xchg
hlt
sub
dec
mov
jb
rol
mov
lret
in
xchg
pop
mov
add
sub
outsl
aaa
mov
cmpsl
loopne
out
adcl
in
aam
ffreep
outsl
dec
push
pop
and
or
out
flds
sub
aaa
push
cmpsl
pop
test
stos
lret
leave
daa
cmpsl
mov
mov
or
pop
bound
or
pop
ret
xor
fcmovnbe
stos
adc
ret
gs
ljmp
cmp
pop
fs
sahf
add
xchg
xor
movsl
push
daa
dec
inc
insb
inc
scas
out
aad
and
rcll
fbstp
test
ss
fs
sbb
xor
fidivrs
adc
movsb
jecxz
dec
sahf
outsl
cmp
xor
and
fists
fidivrs
push
sarb
inc
lcall
xchg
jge
mov
cmp
setl
and
cmp
xchg
xorb
mov
repz
adc
dec
cmp
mov
pusha
xchg
in
mov
inc
int
repz
mov
hlt
int3
push
adcb
ficoms
push
ja
cltd
div
or
mov
inc
cwtl
mov
pop
mov
fildl
or
bnd
mov
mov
lahf
mov
in
xchg
das
ss
and
adc
xor
lret
dec
inc
sub
mov
and
xor
shl
xor
fcompl
cmc
or
push
shll
adc
mov
mov
fwait
lods
push
imul
or
mov
dec
sbb
aad
jge
dec
cltd
push
fstps
xor
or
jae
push
repnz
scas
jnp
jnp
stc
or
xchg
pop
repnz
rcll
mov
xor
xchg
jmp
lods
jb
mov
fs
sbb
cli
test
repnz
les
jo
scas
pop
cmp
xor
ss
pop
adc
xchg
xor
out
test
in
repnz
jb
sahf
push
pop
ficoml
roll
ja
fmuls
out
repz
adc
mov
xchg
mov
ja
cmc
and
pop
sub
add
and
subl
pop
ja
inc
xor
xchg
sub
mov
je
scas
push
movsb
pop
xchg
adc
std
pusha
pop
xor
sbb
enter
sub
and
imul
popf
xchg
shl
xadd
rolb
push
push
bound
icebp
push
mov
inc
mov
or
mov
or
jno
fwait
and
mov
cltd
in
jno
lahf
bound
jmp
gs
adc
pop
ret
loopne
repz
mov
mov
dec
cmp
or
cmp
sub
inc
gs
inc
mov
cmp
xchg
xor
lods
mov
xchg
adc
fisubl
push
dec
movsl
pop
inc
movsl
mov
mov
xchg
popf
in
inc
les
lret
dec
mov
inc
in
cmp
addr16
testl
mov
pop
imul
xchg
add
mov
adc
push
sub
and
fists
cmp
fidivs
xor
outsb
nop
xor
cmp
js
mov
pop
std
ret
into
jmp
pop
aas
pop
or
filds
cmpsb
fisttps
pushw
test
xchg
xor
xchg
jae
insl
bound
shrl
mov
repnz
fs
jb
jmp
mov
daa
mov
ficompl
out
mov
inc
add
outsl
mov
mov
fmull
add
outsb
xchg
mov
call
adc
sbb
mov
mov
std
jecxz
dec
mov
mov
inc
xchg
repnz
xchg
jl
jecxz
lea
out
lock
lret
test
jg
int
stos
das
xor
scas
dec
jb
popa
adc
sub
cmpsl
mov
jg
call
ret
and
cmc
out
or
inc
jg
sbb
push
addl
inc
dec
fstp
lods
rcrl
mov
repnz
test
fucom
fldenv
add
sub
jge
inc
jns
mov
dec
aad
movsb
cmpsl
btc
push
das
or
cmc
push
push
sbb
aas
mov
std
mov
xor
pop
arpl
addr16
insl
aaa
mov
inc
pop
jge
jp
and
push
adc
xchg
adc
repz
jmp
jle
xor
clc
push
pushl
out
xchg
lock
imul
mov
jb
mov
ljmp
jmp
sbb
scas
test
filds
sub
loope
lcall
notb
jmp
inc
jmp
cmpsl
xchg
cmpsl
push
jne
aaa
faddl
insl
add
mov
fdivl
scas
loop
mov
xor
addr16
sub
sub
mov
rolb
aaa
das
jge
scas
pop
jb
inc
mov
cmc
jecxz
push
sti
mov
int3
push
shlb
cmp
ljmp
jbe
adc
ss
mov
xchg
in
in
loope
mov
cmp
fisttpl
inc
syscall
rolb
pop
aaa
dec
jecxz
jb
ds
lds
das
hlt
cmp
shll
outsb
scas
mov
cmp
dec
jmp
xlat
fmull
inc
xor
jmp
xchg
lret
js
imul
add
fadds
ret
dec
pop
jle
in
fildl
jnp
js
insb
das
pop
mov
scas
nop
xchg
mov
push
pop
lret
std
inc
stos
mov
xor
xor
and
andl
add
pop
push
ret
sarb
sub
sbb
out
test
pop
fnsave
push
adc
mov
jmp
push
push
mov
push
out
jae
xchg
imul
int
dec
movsb
cmp
mov
iret
movsl
inc
cmp
ja
test
out
mov
cmp
adc
out
fwait
fcomp
xchg
push
mov
mov
push
jnp
ret
aaa
push
ja
adc
xchg
adc
xor
xor
mov
test
addr16
sahf
stos
loopne
cmc
icebp
test
aad
xor
jno
inc
push
cmp
stos
xchg
out
fadd
test
out
shl
or
fimuls
outsb
push
int
js
dec
sub
jge
xchg
cltd
jns
and
mov
scas
add
ret
int
inc
arpl
scas
insl
inc
mov
cmp
out
std
popa
xchg
data16
inc
xor
jg
gs
pop
sbb
jb
dec
call
arpl
cli
hlt
inc
push
adc
pushf
or
cmp
pop
add
aam
xchg
adc
pop
jge
in
mov
mov
dec
jl
push
ja
loope
sbb
cmp
popf
ja
sbb
repnz
bound
std
leave
adc
pop
push
inc
outsl
cltd
xchg
imul
into
ljmp
lret
mov
int
pop
imul
mov
lock
iret
shl
and
mov
push
mov
ljmp
test
fidivl
jge
dec
data16
xlat
mov
mov
pop
xchg
mov
cmpsl
outsl
inc
xor
mov
sub
push
push
in
pop
filds
mov
jnp
jge
jp
loopne
loope
negb
jo
add
cmp
test
jo
movsl
aad
idivb
push
sbb
lcall
mov
js
xor
xchg
bound
inc
add
ret
xchg
popa
fldt
repz
loopne
loope
loop
xor
or
xor
mov
xchg
and
or
fcmovnbe
outsl
imul
sbb
arpl
pop
imul
orb
push
aam
mov
mov
daa
outsb
test
jne
and
repnz
lods
mov
push
fisubrs
fiaddl
pop
arpl
xor
dec
mov
lahf
mov
xor
adc
mov
mov
pop
mov
mov
cmp
ljmp
xor
xor
jmp
call
dec
aas
shlb
xor
xorb
loopne
rclb
lods
lods
mov
cmp
aaa
sub
mov
and
jb
inc
lock
lds
sarl
jo
mov
pop
inc
xorl
mov
adc
xchg
stos
lcall
push
cmc
test
iret
inc
pop
mov
mov
jbe
fs
fs
xchg
cmpsl
pusha
mov
or
or
jl
push
mov
cmp
dec
lret
in
sub
imul
stos
aaa
mov
test
sub
jnp
push
out
lods
enter
fsubr
or
adc
mov
test
lret
fcoms
lds
imul
mov
jns
dec
data16
arpl
adc
pop
and
scas
hlt
xor
imul
lret
mov
jbe
mov
xor
pop
xor
dec
popf
into
hlt
dec
cmp
ret
cmp
out
hlt
dec
ret
push
cmp
xor
xor
arpl
push
add
push
adc
daa
sbb
imul
cmp
inc
jb
mov
sub
adc
push
push
push
push
insl
aaa
mov
or
inc
dec
xor
inc
cs
adc
stos
jp
repnz
aaa
pop
testb
mov
and
insl
xchg
cltd
sub
sbb
and
adc
push
andl
divb
aas
mov
sub
popa
std
in
adcl
pop
push
and
lea
mov
pop
lds
lods
and
imul
cmc
sub
pop
jl,pt
inc
inc
and
xchg
pop
aaa
push
leave
dec
pop
pop
sbb
in
es
xchg
dec
adc
shl
add
push
es
sub
xchg
lds
inc
js
pop
sub
loopne
push
subl
mov
stos
test
aaa
cmp
adcb
outsb
push
cmc
push
icebp
push
movsl
addb
cmpsb
or
int3
div
add
and
push
pop
sub
xchg
out
dec
pop
std
orl
jge
pushf
jl
repz
outsb
pusha
xor
std
daa
mov
jbe
test
xchg
push
mov
sbb
add
jg
mov
sub
jp
dec
out
jg
aaa
add
mov
test
leave
aaa
mov
cmp
pop
fdivl
sub
adc
mov
dec
push
push
inc
mov
pop
jg
rorb
inc
mov
dec
popf
xchg
mov
repz
arpl
xchg
fdivr
sahf
sbb
pop
repz
ja
hlt
sbb
push
sbb
mov
push
scas
push
fstpl
mov
xchg
jmp
pop
jnp
sbb
cmp
lea
rcr
cmc
pushf
movsb
pushf
push
in
sub
dec
mov
mov
repz
movb
xor
mov
lret
mov
mov
ret
popa
aam
ja
call
inc
xor
and
pop
jne
push
xchg
aam
push
mov
movsb
lods
push
int
jnp
lods
xchg
in
mov
fwait
repnz
fidivs
lods
mov
pop
sbb
jg
pop
fnstenv
orl
fstps
jecxz
cmp
fwait
lea
inc
mov
in
aad
in
loope
sub
scas
insl
inc
jmp
testl
jae
cmp
jmp
aaa
pop
mov
inc
std
std
mov
pop
jb
int
mov
imull
rcl
cmp
dec
sahf
les
mov
out
adc
imul
mov
jmp
jo
daa
xor
inc
jmp
mov
xchg
or
pusha
and
dec
leave
push
push
jmp
sbb
gs
js
jmp
mov
jl
test
pop
mov
scas
cmp
into
dec
and
dec
fwait
jge
cmc
gs
inc
mov
test
cmc
xchg
int3
pop
imul
jmp
jbe
mov
xchg
into
jnp
or
xor
pop
cwtl
add
jns
fistps
sbb
test
and
test
cmpsb
jbe
pop
lahf
cli
loopne
iret
push
stos
dec
sub
ljmp
leave
cltd
test
jbe
in
dec
enter
sub
test
jge
push
mov
adc
test
loopne
notl
dec
or
dec
jecxz
int
unpckhps
scas
jecxz
or
in
xor
out
mov
pop
mov
fnstenv
lods
pop
xlat
xor
std
dec
jmp
dec
and
js
cmp
enter
mov
pop
pop
mov
imul
pop
mov
mov
dec
mov
stos
imul
call
inc
add
insl
stos
mov
sbb
mov
or
jmp
lods
inc
lcall
sahf
mov
popf
push
jecxz
jp
ffreep
add
int3
hlt
sbb
stos
lds
jne
pop
scas
mov
rorb
sub
sub
lods
add
mov
daa
mov
hlt
xchg
test
out
movsb
cltd
pop
and
gs
jge
jb
sub
ror
xor
pop
daa
daa
or
cmpl
sub
outsb
xchg
iret
sub
sbb
xchg
jbe
dec
mov
dec
fidivl
pop
push
push
mov
lods
mov
pop
xchg
pop
test
adc
in
xchg
jp
or
in
pop
sti
test
mov
sub
sbb
jbe
xchg
sub
lcall
push
mov
mov
es
push
xor
adc
lahf
pop
fwait
test
pop
cltd
les
test
aaa
dec
aaa
js
mov
mov
xchg
and
mov
ds
cmpsl
lahf
adcb
mull
inc
xchg
jle
stos
pop
aas
shrl
inc
pop
jge
aam
cmp
aaa
sub
push
jmp
inc
push
xor
inc
daa
test
jbe
imul
jno
movsb
cmpsl
outsl
ljmp
fucom
stos
add
push
jp
fcompl
adc
cltd
xchg
adc
mov
rcll
xor
inc
ljmp
lock
xchg
adc
or
div
clc
jecxz
in
lret
dec
out
push
fs
mov
js
xor
mov
push
jb
mov
lcall
mov
mov
leave
call
and
imul
mov
pop
mov
call
xchg
int3
mov
cmp
mov
push
dec
xor
adc
dec
aaa
out
cmp
jne
inc
vprotq
xchg
pop
mov
orl
jnp
mul
outsl
dec
adc
loope
xchg
cltd
lahf
lea
cld
and
cld
sub
stc
repz
into
jbe
loop
mov
arpl
mov
jb
dec
add
and
rclb
test
inc
inc
sub
adc
test
mov
imul
sbb
or
and
addl
je
mov
pop
sbb
dec
sbb
add
aas
aas
lret
bound
inc
or
dec
cmp
pop
cmpsb
dec
lods
lock
cmpsb
adc
push
add
inc
imul
mov
mov
inc
mul
xor
movsl
ja
or
jae
mov
push
enter
push
adc
xchg
mov
pop
aaa
push
je
jle
cs
push
int
and
inc
push
arpl
mov
push
test
fs
xchg
stos
test
sbbb
jo
aad
mov
cmp
ss
test
mov
adc
stos
jp
push
jb
notb
imul
sbbl
mov
dec
mov
cmpb
mov
jle
xchg
cmp
sbb
jl
arpl
adc
pop
xchg
mov
inc
sub
in
scas
mov
dec
mov
push
fsts
cmp
push
xchg
sub
in
inc
adc
aaa
mov
daa
sub
fldcw
sub
sarl
lea
stc
movsl
xor
mov
jecxz
fs
or
out
loop
mov
dec
hlt
std
adc
xor
test
fcompl
or
imul
cmp
andl
push
cmp
jge
mov
vdivss
fcomps
add
call
mov
dec
std
mov
jo
xchg
sarb
sub
leave
mov
rcr
and
mov
imul
mov
fiaddl
in
push
push
jecxz
jne
xor
xchg
ret
fildl
in
add
xchg
out
mov
fmul
scas
loope
mov
add
lods
mov
mov
aaa
loope
add
jnp
jecxz
mov
adc
and
add
out
jge
sub
stos
sahf
scas
sub
mov
push
sbb
xor
adc
pop
addl
jmp
mov
inc
adc
mov
and
popf
push
or
adc
out
add
mov
mov
bt
add
iret
js,pt
out
adc
dec
gs
pop
js
push
std
insl
push
xchg
daa
or
inc
mov
xchg
jnp
lods
repz
add
mov
inc
insl
mov
inc
pop
and
fldt
mov
adc
push
mov
stc
mov
sbb
dec
aam
gs
jp
cli
test
jae
mov
jp
aad
mov
pop
inc
cs
xor
int
add
sbb
scas
pop
lea
rep
inc
cmpsl
pop
pop
xchg
movsl
ret
pop
jecxz
movsl
cmp
xor
jge
jb
jmp
stos
rolb
insl
xor
push
pop
adcb
bound
mov
outsb
and
cmp
adc
mov
mov
push
push
nop
jle
std
fs
sahf
sub
pop
mov
and
fdivrl
mov
mov
push
aaa
mov
sarb
jle
add
or
leave
sub
out
std
adc
repz
stos
fistps
jg
fcompl
mov
arpl
insl
push
fcmovnu
xor
js
std
dec
adc
mov
push
fdivrl
cmpsl
inc
sbb
sub
mulb
shll
xor
jns
adc
es
cs
sub
inc
jl
or
xor
sub
pusha
shll
pop
pop
jge
int3
adc
lahf
mov
loopne
mov
sbb
pushf
jbe
sbb
sbb
xchg
mov
push
aaa
push
test
mov
pop
inc
leave
fsubs
mov
mov
inc
shrl
push
ret
adc
cmpsl
xor
inc
sub
mov
repz
js
mov
push
sbbb
sahf
mov
add
jle,pt
enter
xchg
hlt
pop
inc
aam
cmp
andl
movsl
xchg
aaa
es
pop
cmpsb
inc
cmp
pop
repz
in
shll
aam
and
and
sbb
xorb
adc
add
push
pushf
les
popf
out
cmc
imul
cltd
push
into
nop
and
es
ret
ret
inc
xchg
outsl
aas
xchg
inc
mov
je
in
mov
mov
push
mov
sbb
and
loop
lock
jle
mov
outsl
daa
ja
rclb
xchg
mov
push
into
shrb
pop
test
add
fcoms
push
push
and
data16
inc
jge
ss
mov
into
inc
iret
shlb
pop
aad
push
loopne
insl
sub
push
in
repnz
mov
or
jb
jno
xor
in
mov
inc
filds
sahf
cld
fsubrl
inc
jae
and
sbb
inc
cmc
sbb
cmpsb
mov
xchg
loopne
jge
mov
mov
inc
pop
mov
dec
jbe
add
and
mov
or
lret
std
shlb
push
push
mov
lds
roll
dec
movsl
push
arpl
rcll
sub
mov
cwtl
sbb
push
push
cmc
push
xor
out
jnp
xchg
add
and
popf
add
fs
fsubp
out
mov
jae
aas
xchg
sti
aaa
jp
inc
shll
cmp
adc
push
xchg
mov
js
push
cmpsl
movsb
and
test
ret
adc
ljmp
xchg
aas
insl
aaa
lock
movsl
inc
dec
es
dec
std
shll
out
fadd
in
shll
mov
test
clc
shll
mov
cwtl
cmovbe
mov
xor
addr16
xor
js
dec
mov
fimull
das
sti
sahf
jge
jg
jmp
xchg
lods
gs
dec
leave
xchg
bound
lock
jmp
std
gs
or
stos
xor
jge
stos
aam
adc
repnz
mov
bound
lods
and
push
rcrl
mov
ja
lds
je
sbb
stc
push
sub
mov
loope
ret
mov
data16
sub
fstpl
fs
or
fists
gs
fs
jmp
xchg
out
js
mov
std
rcrl
jecxz
xchg
or
and
mov
dec
push
es
sub
jb
repz
mov
pusha
sbb
adc
mov
inc
inc
stc
mov
dec
icebp
xchg
mov
cmpsb
sub
jmp
add
js
inc
sbb
pusha
xor
mov
js
adc
or
loopne
push
int
loop
xor
sbb
cmpsb
xchg
jb
mov
rcrl
fbld
sarl
bound
scas
imul
fs
dec
leave
jmp
xchg
push
daa
xor
lret
shll
movsb
push
mov
adc
lret
cltd
ret
cmpsb
push
push
pop
js
and
mov
pop
adc
or
sub
jne
pop
mov
dec
push
push
xchg
ss
aad
add
and
push
mov
std
test
aad
dec
xor
xor
adc
data16
mov
cmpb
fwait
mov
jbe
pop
jbe
and
call
push
ja
sub
mov
idivl
stos
clc
pop
mov
jecxz
arpl
jge
mov
cmc
pop
cmp
insl
sbb
mov
notb
cmp
outsl
inc
js
cmp
xchg
jp
loopne
aaa
jg
xchg
dec
out
cmp
stos
adc
sahf
fisttpl
outsb
jle
inc
mov
mov
stc
filds
cmp
push
inc
fildll
add
xor
add
add
mov
repnz
sbb
mov
mov
xchg
add
leave
enter
xchg
fldenv
sbb
icebp
popf
lods
jg
mov
ja
mov
sarb
and
orl
xchg
pop
xchg
cmpsl
pop
sub
fcoms
ficompl
fists
inc
mov
xchg
add
adc
sub
push
inc
mov
mov
push
in
sar
inc
mov
out
scas
nop
std
fnstenv
push
hlt
mov
sub
movl
mov
dec
push
dec
ja
mov
inc
add
ss
push
mov
enter
push
jmp
addr16
hlt
push
mov
dec
mov
adcb
jno
neg
aad
fisttps
mov
push
ljmp
sub
dec
dec
push
ds
aaa
lds
into
mov
adc
jp
and
inc
sub
xchg
pop
dec
or
xchg
js
pusha
sub
mov
jbe
add
push
add
push
jmp
aad
cmp
in
mov
cmpsl
or
mov
cmpb
cmc
cld
outsb
ficoml
iret
cld
inc
mov
test
jge
lds
mov
xor
shrl
pop
in
push
pop
gs
imul
pop
sub
fidivrs
mov
test
in
cmp
pushf
je
inc
nop
dec
mov
push
loope
sbb
xor
out
jle
in
push
dec
shl
mov
stos
mov
pop
into
push
mov
xchg
pop
inc
jbe
add
xchg
cltd
aad
mov
push
jbe
data16
jo
cmp
shll
popf
xchg
ja
inc
cwtl
push
inc
sub
jmp
cld
jne
mov
rolb
nop
aas
icebp
dec
xchg
lcall
mov
hlt
jbe
add
cltd
cmp
mov
pop
mov
or
jbe
dec
fstps
mov
pop
dec
add
inc
dec
jge
mov
mov
mov
ds
insl
or
pop
inc
icebp
sub
lahf
aas
mov
jbe
mov
or
sub
mov
inc
inc
or
sahf
jecxz
movsb
daa
sti
test
loopne
mov
cmp
pop
dec
jo
push
shlb
dec
push
sub
xor
test
mov
pop
xchg
aad
lods
imul
mov
xchg
addr16
push
notb
aad
stc
das
addl
scas
js
dec
cmc
mov
inc
int3
shlb
jnp
test
mov
iret
dec
sbbb
test
jbe
ds
jp
mov
outsb
aas
aas
sub
mov
or
mov
add
bound
jne
fstp
daa
aaa
adcb
mov
push
xlat
sarl
xchg
adc
data16
call
xchg
xchg
push
mov
out
push
out
addr16
aaa
aaa
mov
pop
pop
jns
mov
inc
test
jne
sahf
lods
dec
jle
xchg
and
popf
cli
daa
mov
adc
jmp
sub
cmp
xchg
shlb
xchg
jo
adc
scas
xchg
test
jnp
inc
flds
mov
adc
sbb
jmp
rorb
test
out
sub
aam
and
add
jns
and
pop
push
call
xchg
and
mov
dec
dec
xchg
out
iret
mov
shlb
inc
ficoms
popf
lods
mov
lea
cmp
or
push
mov
mov
cmp
jmp
add
aaa
add
ss
mov
aas
pop
xor
mov
push
xchg
ljmp
cmp
mov
fidivrs
out
mov
jbe
mov
push
in
adc
and
outsb
jno
xchg
iret
sbbb
scas
xor
aad
lods
out
cmp
jge
sbb
jns
pop
push
in
dec
mov
mov
sbb
out
xor
xor
inc
inc
setnp
pop
sub
ja
inc
lcall
fxch
dec
addl
fs
pop
idivb
into
xchg
xchg
push
mov
or
jl
pushf
xchg
inc
fdivl
fnstenv
cmp
incl
add
lahf
inc
das
repz
daa
pop
nop
adc
lret
inc
xchg
xor
testl
aaa
loope
nopl
mov
mov
das
mov
repz
mov
sbb
xor
jno
adc
call
js
add
jp
out
stc
dec
scas
dec
shlb
stos
jecxz
mov
nop
das
subb
cmpsl
pop
jns
xchg
mov
and
xchg
fistps
mov
int
scas
adcb
jmp
inc
xchg
dec
les
sub
out
pop
mov
sub
imul
rcll
or
clc
cld
add
cmp
mov
jns
add
clc
lret
jb
dec
fistl
jmp
cmc
cmpsl
jle
mov
inc
test
nop
sub
or
lods
adc
ret
lahf
rolb
sub
ja
fiadds
ret
dec
aad
loopne
mov
jl
mov
loope
or
mov
and
inc
push
aaa
loop
mov
mov
inc
movsl
and
repz
mov
mov
xchg
ret
popa
bound
fnstcw
mov
xchg
pop
mov
fiadds
out
test
xchg
adc
cmpsb
dec
dec
stc
lds
movsb
xchg
cmp
sahf
inc
xchg
vhsubpd
mov
sub
in
jp
xchg
pop
sbb
mov
aas
xchg
push
inc
fimuls
dec
shlb
aaa
sbb
fisubrs
push
and
lds
dec
ror
int
dec
leave
andb
mov
aas
jnp
mov
addr16
jmp
jmp
sbb
test
push
mov
scas
jp
in
pop
fiadds
pusha
fdivl
or
mov
fnsave
inc
lret
int
push
ret
pop
xchg
pop
arpl
in
cltd
push
cmp
sub
jno
cmp
mov
and
mov
or
mov
daa
movsl
xor
mov
orl
sbbl
pop
lea
sub
sub
cli
dec
xchg
mov
mov
dec
xchg
icebp
cmp
push
sbbb
jge
jae
ja
ret
lret
jo
iret
out
cli
cmc
push
pop
mov
dec
sbb
sbb
mov
sti
mov
mov
nop
leave
mov
filds
mov
xor
test
mov
cmp
mov
mov
dec
pop
ret
cmp
cld
jmp
xchg
ljmp
dec
push
rolb
lods
cmpsl
xlat
cmp
pop
xorl
cmp
aaa
leave
test
enter
jo
sub
push
mov
jbe
jnp
xorb
sub
mov
in
push
dec
faddl
and
mov
test
dec
mov
aad
enter
test
or
mov
sub
jbe
push
mov
push
ja
mov
cs
call
fistpl
imul
stos
mov
div
push
outsb
pop
fs
dec
add
push
imul
lret
push
dec
out
stos
clc
push
dec
aaa
sub
adc
and
adc
sbb
js
cmp
ss
inc
mov
std
fmulp
jmp
popf
push
jle
push
rcrb
lret
js
jb
push
fsubp
shrb
out
dec
shlb
std
pop
jmp
jnp
jle
and
std
sbb
ds
mov
sbb
jg
testl
fisubs
loop
cmpsl
imul
mov
xchg
outsb
sbb
mov
les
jns
mov
test
and
rorl
js
std
shrb
js
imul
push
out
jecxz
call
fdivl
fistpl
pop
pop
push
xlat
mov
pop
dec
push
jns
add
lcall
or
mov
pop
out
scas
mov
sub
inc
in
aad
xchg
pop
lret
adc
aad
jns
cmpb
fidivs
and
add
xlat
rcrl
adc
js
mov
daa
push
and
mov
ja
roll
push
xchg
les
aaa
xchg
js
inc
outsb
or
xchg
add
push
pop
push
dec
in
ret
pop
mov
mov
jl
rolb
cmc
xchg
push
lea
mov
mov
or
mov
adc
and
inc
js
scas
xchg
mov
imul
ficomps
aad
scas
mov
jbe
push
mov
dec
repz
cmp
mulb
adc
jmp
cmpsl
add
xchg
aas
adc
pop
imul
pop
in
rorb
lods
decb
arpl
jmp
mov
dec
jne
xchg
repnz
or
inc
or
mov
mov
mov
dec
hlt
and
push
aad
movsl
cmpsb
aaa
testb
cmc
nop
xchg
push
cmp
ss
push
jbe
out
pop
push
sbb
inc
stc
rcl
lret
mov
cmp
xor
xor
std
aad
fdivrs
add
xor
clc
mov
add
imul
xor
add
mov
nop
cmpb
adc
dec
mov
subb
jecxz
aad
push
daa
lea
test
fadd
fwait
fs
xor
lret
mov
sahf
xor
shlb
jnp
std
cld
xorl
xchg
aad
mov
ss
and
adc
fnstenv
inc
jl
push
or
fmuls
ja
xchg
out
stos
les
cmpsb
addb
pop
push
xchg
insb
xchg
jns
ja
cmc
pop
bound
out
xor
leave
mov
je
adc
lret
cmp
push
mov
sahf
adc
or
pop
sbb
push
push
fistl
jecxz
mov
xor
and
mov
adc
add
mov
dec
je
movsb
inc
and
lahf
adc
ss
inc
mov
pop
imul
int
mov
xchg
movsb
mov
movaps
ljmp
mov
int3
insl
sbb
xchg
ja
popf
test
or
xlat
and
adc
mov
jbe
imul
xchg
lcall
ret
mov
push
cs
push
jne
pop
das
stos
and
jno
push
cmc
lcall
and
cmc
adc
outsl
inc
pop
aas
dec
testb
hlt
shrl
adc
sbb
sbb
out
adc
mov
mov
mov
addb
jae
xchg
sbb
push
fisubs
imul
cmp
pop
inc
push
add
ds
sbb
cmp
or
frstor
aaa
inc
xor
ljmp
and
lret
add
jle
out
roll
push
js
inc
std
call
stos
mov
cmp
jnp
pop
inc
push
mov
cmp
aad
dec
in
into
push
xor
jbe
jge
dec
lock
mov
adc
sbb
fldcw
mov
xor
xchg
pop
sub
push
rol
std
sbb
aad
dec
sub
loopne
scas
mov
pop
xchg
push
fsubrs
hlt
push
cmp
pop
pusha
std
aad
sub
xorb
rcll
adc
ljmp
pop
add
jbe
enter
inc
rcrl
ficoms
xchg
out
push
jmp
jge
push
pop
repnz
push
ret
mov
repz
hlt
xchg
ss
in
movsl
and
mov
jg
repz
mov
jecxz
inc
jmp
adc
stos
stos
jl
inc
int
xchg
sbb
push
out
xor
xor
in
in
fnstenv
std
adc
push
fsubrs
jecxz
cltd
fwait
xchg
ret
xchg
scas
gs
scas
mov
push
pop
imul
dec
int
jns
fsub
inc
popf
push
loope
jecxz
bound
mov
mov
jge
test
out
stos
aaa
int
push
sar
out
repz
sbb
or
stos
xchg
push
hlt
mov
addr16
dec
pop
ja
inc
cmpsl
dec
push
dec
pushf
iret
scas
fistl
jne
or
inc
pop
sahf
push
mov
in
pop
dec
xor
cld
mov
addr16
xchg
pop
sub
push
int
aad
fwait
inc
pop
mov
cmpsb
cmc
mov
inc
xor
movsl
shlb
or
call
lds
xchg
and
shl
scas
jecxz
repz
xchg
xchg
cmp
aaa
jmp
mov
mov
lret
ss
das
and
adc
insb
or
and
repz
pusha
lret
mov
dec
leave
shlb
mov
push
inc
mov
cltd
cmp
mov
ret
enter
xchg
and
or
test
mov
dec
jbe
adc
or
or
dec
xor
popf
xor
lods
iret
lea
lea
mov
xchg
mov
dec
enter
nop
mov
lret
mov
imul
js
es
jns
aaa
cmp
adc
sbb
sarb
inc
ficoml
notb
xchg
dec
sbb
fistpl
and
sbb
nop
les
loopne
push
lods
imul
dec
aas
adc
rcrb
add
stos
bound
aaa
idiv
movsl
or
xor
je
mov
ja
sub
xchg
nop
out
jmp
fwait
imul
mov
jb
cmpsl
mov
lea
jne
sbb
jmp
xchg
insl
cmp
ss
xchg
iret
fimull
cmpsb
push
mov
xchg
add
sbb
daa
jo
idivl
nop
fisttpll
mov
dec
sbb
insb
mov
addr16
sub
dec
aas
push
mov
mov
aam
fisubs
xor
mov
cltd
jle
shll
xchg
inc
test
mov
push
test
xor
xor
jae
not
clc
dec
std
and
sarb
mull
lock
aad
int
scas
inc
in
nop
push
fsub
cld
mov
mov
aad
mov
fistl
jo
nop
arpl
ljmp
adc
dec
adc
sahf
jbe
cltd
scas
push
ja
outsl
xchg
push
loope
movsl
push
cmpsb
enter
stos
xor
mov
xchg
xor
mov
push
pop
jbe
dec
or
xor
mov
inc
mov
or
jle
subl
fnstsw
jge
hlt
jmp
dec
fldt
push
clc
adc
stos
xor
push
repz
mov
pop
or
inc
fimuls
mov
dec
mov
cwtl
dec
push
pop
in
loop
notb
inc
gs
sar
mov
scas
inc
mov
jae
pop
sub
mov
andl
jno
dec
jbe
lcall
pop
sar
inc
mov
push
in
or
jne
adc
mov
cmp
std
inc
jecxz
inc
sub
aaa
leave
aaa
lret
xchg
das
idivb
incb
dec
xchg
fsubrl
test
repz
push
test
pop
rorb
adc
mov
fsubs
add
into
mov
push
jmp
ja
cmp
pop
lret
mov
clc
iret
mov
ja
adc
sub
scas
loope
fdiv
inc
ljmp
pop
add
push
imul
sub
and
xchg
xor
jge
xchg
mov
mov
push
and
xchg
xor
mov
cwtl
or
pop
arpl
mov
mov
push
fadds
jg
out
sbb
add
les
clc
sbb
lods
loopne
mov
inc
sbb
and
jmp
jmp
mov
stos
and
inc
pop
mov
popa
sarl
repz
mov
and
sti
fisttpl
cmp
xchg
xchg
jge
dec
mov
addl
orb
mull
ret
rorb
add
scas
aas
and
xor
pop
loopne
sbb
stc
hlt
int
pop
test
jmp
pop
inc
sbb
out
aam
aam
idivb
iret
mov
fisttps
rorb
sarb
mov
mull
jecxz
rcrb
mov
add
rolb
loope
lods
dec
std
jg
jb
popa
les
xchg
cmc
cwtl
mov
stos
daa
cmp
cmc
push
sub
pop
iret
cmpsl
dec
pop
leave
loopne
fistpl
int
mov
or
xor
faddl
add
sub
imul
imul
mov
js
shll
ss
push
leave
outsb
mov
xchg
lods
mov
inc
or
jnp
outsb
ficomps
adc
std
and
xor
sub
dec
ja
fxch
in
inc
js
adc
pop
cmp
ret
cmp
movsl
test
or
jb
adc
imul
cmp
sahf
mov
in
movsb
mov
push
lods
sbb
add
push
dec
mov
lock
into
add
call
pop
test
cmp
xchg
sub
mov
pop
sub
mov
inc
and
fisttpl
cmpsb
and
daa
movsl
lret
out
gs
cli
pushf
pop
stos
adcl
aad
xchg
daa
orb
leave
xor
insb
push
das
gs
jbe
mov
loope
xchg
mov
shll
adc
mov
shl
fadd
imul
jne
test
mov
gs
testl
dec
ret
xor
cmp
addb
test
xchg
adc
push
int
mov
jecxz
sarb
and
dec
int
pop
aaa
ffree
and
add
xor
or
inc
popf
mov
aas
popa
shll
xchg
push
test
mov
adc
adcl
pop
shl
dec
mov
fidivl
orl
mov
inc
mov
mov
dec
out
ja
fstpl
sahf
idivb
sub
mov
push
int
daa
inc
movsbl
lcall
xchg
ljmp
jmp
xlat
mov
movsb
fistps
pop
insl
rcrl
mov
hlt
mov
mov
ss
xor
das
out
and
mov
mov
push
repz
and
mov
push
outsb
flds
scas
jnp
xor
push
jmp
mov
repnz
or
rcl
call
idivl
jbe
or
pop
mov
out
add
sub
sbb
ud2
hlt
dec
inc
and
xchg
add
cmpl
ds
xor
imul
ss
add
scas
sbb
iret
jne
jecxz
in
rclb
out
pop
jnp
dec
shlb
movsl
pop
sub
notl
jne
xchg
sahf
xchg
aad
push
lds
scas
sub
sbb
mov
xchg
stos
mov
sub
push
call
pop
push
cmp
aaa
fsts
test
mov
mov
mov
pushf
inc
or
enter
jge
rcrb
hlt
sahf
push
jnp
sbb
sub
add
mov
notl
addb
jge
jns
rorb
xchg
addr16
lods
addl
mov
push
sbb
sub
gs
rcll
adc
push
adc
daa
mov
movsl
mov
pop
xchg
mov
negb
jge
arpl
sbb
mov
and
lds
jg
enter
les
ss
stos
movsb
pop
dec
dec
test
dec
shrl
popf
or
mov
cmc
test
fistpl
mov
cmc
lahf
psubusb
lahf
fnstsw
fmuls
xchg
stc
je
push
notb
add
mov
dec
cmc
push
xchg
xchg
pop
ret
mov
mov
sub
adc
jge
xchg
or
push
lock
ss
cmc
repz
mov
xchg
pop
testb
cmp
imulb
or
jns
icebp
adc
xchg
dec
push
mov
xchg
xchg
stos
cltd
sbb
push
test
movsl
add
shll
jge
imul
aad
movsl
adc
test
cmpsl
adc
jb
push
inc
data16
leave
xchg
dec
lea
cmp
and
mov
inc
or
gs
push
jbe
dec
pusha
in
inc
ds
and
mov
inc
add
enter
in
idivb
aad
pcmpgtw
les
aas
scas
lea
sub
ss
inc
push
cs
pop
lahf
rcrb
lds
cmc
dec
cs
xchg
inc
push
ljmp
mov
repnz
adc
push
adc
xchg
inc
xor
add
jbe
inc
iret
pmullw
mov
sarb
sub
or
movsl
test
aas
and
mov
sti
cmp
add
xchg
popf
adc
mov
push
outsb
std
xchg
adcb
mov
pop
out
pop
popf
push
mov
mov
mov
rcll
jae
xor
push
js
push
inc
mov
gs
in
cmp
push
stos
ja
or
sub
pop
out
push
out
pop
pop
mov
jecxz
sti
int
aaa
jecxz
pop
sub
stos
and
aam
mov
xchg
mov
aam
sub
xchg
xchg
xchg
jle
sub
push
imul
pop
jle
loopne
or
outsb
pop
lcall
sub
jecxz
test
imul
shlb
sub
push
jecxz
sahf
and
sbb
stc
test
jae
xor
fisttpl
mov
cltd
xchg
jl
popf
lock
xlat
fstps
push
push
push
adc
jo
push
jae
cmc
xor
pop
je
lods
xchg
testl
inc
and
push
push
mov
push
add
aaa
mov
out
sti
push
jbe
jne
aad
xor
xchg
mov
jg
mov
aam
cmp
pop
stc
adc
int
in
inc
mov
test
push
bswap
cmpsl
aad
aam
lock
mov
sbb
in
mov
inc
or
pop
mov
cmpsl
nop
pop
imul
shll
mov
and
push
xor
mov
cltd
jbe
mov
cmc
push
jle
popa
adc
scas
mov
pop
frstor
cltd
cmp
les
cmpsl
jle
xchg
xchg
cmpsb
das
add
and
pop
cwtl
movsl
adc
repnz
jle
or
outsl
popf
or
test
in
cmpsb
mov
cmc
ss
test
add
cmp
dec
sahf
test
les
inc
mov
mov
out
xchg
pop
push
pop
mov
xchg
jns
adc
mov
or
call
out
fsub
idivb
inc
lahf
pop
push
int3
cmpsl
pop
mov
add
cli
jo
je
push
shll
mov
xchg
inc
in
mov
ds
push
paddw
mov
xchg
fisttpl
xchg
aad
jnp
js
cmpsl
mov
cmp
dec
xchg
fists
jp
xor
int
imul
jne
inc
and
arpl
scas
sub
and
add
scas
cli
call
jbe
mov
xor
sub
leave
call
pop
pop
inc
add
hlt
imul
loop
and
in
add
jnp
out
aas
jb
xor
pop
xchg
mov
dec
scas
jg
adc
sbb
js
jle
mov
les
mov
pop
mov
mov
test
aad
jle
pushf
call
imul
mov
mov
fistpll
xchg
or
fildl
test
sarl
mov
or
aas
xchg
cmc
adc
aaa
enter
in
xchg
mov
add
movsl
lcall
xor
hlt
sbb
imul
data16
xchg
shr
jg
mov
in
ja
push
cmpsl
jbe
sbb
cmp
int
daa
lods
mov
xor
mov
xchg
iret
jne
lahf
lret
mov
cmpsl
inc
lahf
mov
mov
mov
aam
push
daa
pop
call
add
loopne
pushf
call
mov
fsts
cmp
scas
jno
mov
repnz
jnp
data16
mov
fidivl
or
lds
icebp
dec
hlt
insl
dec
test
add
scas
shlb
pop
test
mov
clc
leave
inc
inc
sub
out
aaa
cmp
int
adc
aad
insl
ja
dec
inc
xchg
mov
in
ss
lret
lahf
mov
jno
mov
in
loopne
sbb
orb
pusha
sub
xchg
ja
inc
pushf
aaa
xchg
lret
rcrl
dec
adcl
xchg
mov
push
adc
lahf
imul
push
dec
adc
lret
cltd
inc
jbe
jb
mov
inc
jbe
sahf
inc
test
push
jp
test
mov
mov
pop
scas
push
mov
push
cmpsb
xchg
xchg
cmc
mov
inc
push
dec
mov
dec
mov
stos
jno
fstl
pop
ss
fsubp
leave
inc
push
out
std
sbb
jo
movsb
aam
ss
push
divl
and
inc
lea
add
add
inc
adc
repz
dec
dec
aam
add
dec
test
divps
push
lds
mov
sahf
xchg
loope
inc
mov
pop
fwait
inc
pop
add
add
cmpsl
into
jbe
xor
cmp
addr16
lods
pop
push
lret
insl
mov
nop
adc
cli
aad
cmpsl
ror
stc
xchg
cmpsl
mov
out
adc
cmp
int3
jns
dec
aad
push
sti
sbb
ds
inc
ds
out
cmpsl
dec
xchg
inc
push
scas
or
repz
aam
pop
jle
sbb
addr16
and
ja
pop
dec
mov
sbb
mov
out
and
or
ss
xchg
aam
cmovo
mov
sarb
shlb
lods
aas
pushl
inc
sub
jmp
sub
jle
jg
adc
cmpsl
aaa
sub
jl
loopne
test
push
call
mov
mov
push
hlt
repnz
out
nop
sbb
cltd
inc
cmpsb
fdivs
adc
dec
jnp
mov
scas
cmp
nop
js
out
xchg
ret
adcl
sub
xchg
aad
jbe
sub
shr
xor
sub
fldl
gs
inc
push
aam
push
mov
xchg
push
shl
cmp
stos
test
in
repz
inc
jg
pushf
cwtl
mov
dec
push
test
rorl
dec
fsubl
push
fwait
or
rorb
negb
and
ret
mov
je
mov
inc
push
or
fstpt
hlt
mov
sbb
subb
aaa
iret
sub
or
cmp
aaa
inc
xchg
sub
push
or
cmpsl
mov
push
cmpsl
pop
lahf
mov
dec
jle
sbb
loope
add
or
cmpsl
mov
pop
mov
leave
xchg
or
insb
test
pop
or
jb
pop
xchg
incb
or
and
add
xchg
push
add
or
mov
fsubs
loop
mov
ja
jae
adc
mov
or
or
das
ret
or
sahf
or
mov
dec
rorb
aaa
cld
mov
cmp
jnp
pop
fldt
aas
stc
sub
cli
fsubs
scas
stc
jns
adc
xchg
dec
stos
decl
dec
xchg
cwtl
mov
and
adc
mov
jbe
mov
adc
pop
xchg
jecxz
bound
repnz
in
pop
add
imul
inc
mov
jle
aaa
in
jmp
test
sbb
data16
jmp
hlt
inc
ljmp
nop
push
inc
sarl
test
loope
in
mov
movsl
xchg
mov
adc
jbe
int
lret
mov
ss
mov
in
cmp
inc
push
xchg
push
cmpsl
aam
pusha
or
push
cs
inc
mov
add
adc
cmpsl
aad
aam
push
movsl
sbb
shll
mov
lds
mov
cmp
aad
sbb
loopne
jae
aaa
fisttps
jb
scas
jns
mov
shll
popa
movsl
add
popf
pop
lret
rcll
rorl
gs
cmp
testl
dec
add
test
int3
mov
sub
aaa
xchg
inc
repz
xchg
leave
push
push
dec
xchg
int
or
dec
aam
adcl
pop
lods
rolb
and
lret
dec
cmp
mov
testb
sub
xchg
fwait
lds
xchg
lret
test
xchg
dec
sub
pop
push
and
aaa
cmp
outsl
cmp
xor
das
sub
jbe
outsl
inc
adc
dec
mov
xor
into
cmp
pop
or
loopw
push
rcrb
jbe
scas
ret
mov
mov
pmaddwd
movsl
cmp
cli
adc
jo
adc
jne
jnp
xchg
fidivrl
jbe
or
test
mov
inc
shll
sub
imul
ja
jb
cmpsl
movsb
fsub
sub
push
insb
addr16
and
mov
divb
hlt
or
test
inc
mov
and
and
test
cmpsb
aaa
or
lea
xchg
pop
nop
fs
mov
lahf
or
leave
nop
inc
rorb
movsb
fwait
push
ja
pop
iret
nop
push
lcall
sbb
dec
ret
lods
aaa
adc
movl
outsb
pop
ret
xchg
loope
xor
jne
xchg
enter
pop
dec
add
lods
cwtl
xchg
xchg
inc
xchg
jg
push
out
hlt
out
decb
popa
mov
jno
pop
cmp
outsb
xor
xor
inc
push
mov
lock
addb
pop
adc
repnz
gs
ja
fisttpll
into
xlat
and
mov
cs
sbb
in
adc
stos
push
xor
rorl
aaa
dec
dec
sbb
jg
mov
fisubl
addb
int
or
push
sub
sub
add
nop
pop
add
mov
je
xchg
shll
pop
cmc
popa
jns
test
xchg
fst
rorb
imul
out
jbe
mov
pop
aad
lods
push
push
jle
xlat
dec
mov
scas
mov
ss
addr16
inc
iret
js
mov
jnp
adc
sbbl
sbb
loop
xchg
adc
jl
inc
dec
in
stos
mov
pop
mov
cmpb
push
mov
imul
popa
and
mov
ret
pop
ret
jne
sub
insb
jnp
pop
arpl
je
aaa
cmp
into
pop
or
or
xchg
push
xchg
outsb
js
add
das
mov
sub
mov
add
int
clc
mov
aas
enter
adc
int
scas
pop
push
loopne
int3
imul
dec
pop
scas
data16
cmp
add
and
xchg
out
inc
bound
popa
stos
cld
inc
loope
adc
cmpsb
test
xchg
pop
shll
int3
movsb
push
frstor
adc
push
mov
mov
call
stos
add
outsb
adc
push
aaa
mov
aad
pop
mov
inc
and
pop
loopne
sbb
sti
pusha
cmp
xchg
daa
sub
into
test
in
aaa
inc
dec
int
popa
addr16
pop
data16
mov
xor
sub
mov
cmpsl
jg
xchg
sub
xchg
add
push
scas
xor
mov
dec
jmp
push
shl
gs
cmpsb
filds
insl
mov
fmuls
pop
scas
mov
aas
addb
enter
ret
pusha
pop
addl
push
js
mov
inc
or
jbe
loop
insl
lcall
vmovupd
imul
fisubs
mov
inc
out
mov
mov
adc
xchg
ja
sbb
push
push
jecxz
mov
sbb
mov
mov
mov
cmp
in
xlat
in
xor
in
cmp
call
mov
pop
jbe
xor
sbb
hlt
or
mov
push
cmp
aas
pop
rcll
mov
mov
ds
aaa
lahf
dec
xchg
rolb
or
aad
sub
xor
in
repnz
iret
jns
inc
mov
mov
nop
jae
cmpsl
and
dec
ds
push
inc
hlt
jg
inc
xlat
sub
loope
cli
aaa
in
sahf
fwait
jae,pt
pop
dec
repnz
cmpsl
roll
xchg
sub
shlb
sbb
test
cmp
xchg
dec
aaa
bound
xor
push
mov
lret
push
outsl
scas
int
mov
push
out
nop
mov
adc
xchg
pusha
mov
rcrl
imul
mov
hlt
pushf
mov
sbb
dec
xor
ficoml
mov
out
cld
rcll
cwtl
cmpsb
mov
scas
lahf
js
ja
dec
movsb
iret
jmp
ljmp
mov
xchg
loop
inc
add
outsb
ja
push
add
mov
add
sub
and
mov
aaa
lock
out
aaa
jae
xchg
jge
mov
sahf
sub
iret
stos
add
sbb
bound
jle
inc
jmp
or
repnz
inc
aas
ret
aad
or
popl
mov
mov
sbb
jno
aaa
xchg
mov
pop
ja
scas
ljmp
push
xor
push
pop
lds
push
mov
adc
xchg
cltd
mov
fsubl
push
or
inc
loope,pn
mov
ss
repz
ja
leave
push
pop
dec
jecxz
in
push
sub
push
sub
inc
shrb
fiaddl
aas
inc
rcr
push
mov
jns
mov
xlat
lds
lcall
data16
notb
outsb
rcll
or
jmp
mov
imull
lret
jl
mov
jp
aad
rolb
lcall
shll
aaa
mov
sarl
mov
lds
pop
ja
mov
lods
fxch
mov
add
lahf
xchg
outsl
or
jl
mov
mov
jno
imul
test
lea
jae
stc
push
call
ja
dec
jmp
movsl
inc
js
mov
mov
adcl
pop
roll
xchg
mov
jne
int3
push
mov
sti
andb
stc
inc
outsb
sbbl
fcoml
mov
ja
ret
mov
push
ficoms
and
mov
add
push
into
sahf
push
sbb
pop
inc
fcoms
or
push
sbb
adc
shr
shrl
or
sub
adc
clc
outsb
std
pop
mov
and
imul
test
fldcw
icebp
xor
imul
idivl
mov
adc
pop
xchg
mov
es
nop
in
and
mov
push
mov
lcall
adc
jne
jmp
sbb
mov
scas
mov
filds
jg
test
xlat
scas
xchg
mov
fcoms
sub
fs
std
fcomps
imul
dec
push
imul
mov
data16
aam
jecxz
imul
iret
std
mov
and
fistpl
cmp
js
xor
sub
outsb
nop
jmp
jecxz
push
fadds
mov
scas
nop
adc
dec
ret
pop
cmpsb
aaa
mov
add
pop
or
xor
lret
adc
mov
sbb
or
adc
push
fwait
push
lds
out
cmp
push
scas
sub
or
xchg
std
cmp
lret
and
lret
xchg
dec
mov
push
mov
scas
mov
pop
fisubrs
inc
rcll
push
jae
mov
inc
mov
xchg
les
daa
je
orl
xor
cmp
add
js
xchg
push
test
mov
test
mov
or
sbb
out
mov
int
xchg
int
nop
clc
inc
sub
aas
mov
fimull
outsb
jae
xchg
jecxz
pop
mov
nop
adc
pushf
push
out
sub
xor
mov
sbb
lret
push
ljmp
inc
jae
inc
aaa
std
dec
out
and
or
xor
loope
adc
cmp
sarb
out
testb
jmp
fsubrs
xchg
pop
jbe
into
add
push
pop
push
ljmp
push
cli
ss
jo
mov
mov
jge
sbbb
push
stc
fistpll
push
imul
jp
ja
sbb
fcom
std
sbb
push
and
mov
sub
pop
adc
iret
add
mov
cmp
jp
lds
push
xor
push
mov
jle
mov
and
push
push
mov
sub
mov
out
aas
mov
jbe
xor
daa
jno
xor
push
xchg
in
push
xchg
gs
mov
jle
outsb
cmpsl
js
inc
pop
ret
mov
fisubl
add
mov
inc
test
arpl
dec
mov
cmpsl
mov
xlat
mov
mov
insb
ljmp
pop
mov
and
xchg
push
shrl
in
xor
pushl
fwait
mov
rol
fcompl
sub
cld
pop
fisubs
mov
jmp
mov
stos
call
cmpl
inc
and
pop
ficompl
push
adc
jnp
gs
xor
add
outsl
lahf
add
lock
rcll
add
lcall
dec
test
dec
imul
and
mov
ret
jle
xchg
imul
adcb
xchg
das
dec
mov
gs
inc
xchg
mov
push
xchg
sub
enter
sub
movsl
xchg
lret
dec
call
aam
jb
mov
aaa
and
popa
scas
xorl
dec
xchg
mov
loop
out
inc
mov
aaa
xchg
fidivs
imul
test
rcr
pop
jecxz
mov
bound
int
outsl
jnp
push
lds
loopne
adcl
popf
add
add
std
or
mov
imul
mov
cmp
mov
std
mov
sub
and
ds
jns
insb
mov
leavew
mov
pop
cmp
cld
lods
or
xchg
jns
fmull
out
fistpl
dec
and
filds
in
or
sahf
mov
out
mov
cmp
cmp
mov
jne
mov
int
jecxz
mov
leave
sti
js
pmaddwd
aad
sub
jbe
push
mov
and
jbe
adc
int3
jb
rclb
sahf
cli
dec
dec
sbb
xchg
jecxz
xor
outsl
sbb
int3
arpl
mov
cmpsl
mov
pop
jl
insl
fsubl
add
rorl
dec
and
outsl
xchg
scas
mov
aaa
xchg
ja
adc
dec
lret
rolb
sub
mov
mov
outsb
mov
cmp
scas
dec
cmc
or
adc
js
sbb
ja
push
adc
dec
mov
xor
stos
cli
pop
xchg
movsb
xchg
addl
dec
addr16
xor
xchg
pop
xchg
dec
shlb
sbb
mov
xchg
xchg
inc
or
hlt
fists
push
push
push
cmp
cltd
lea
mov
out
mov
push
imul
sbb
test
pop
gs
push
mov
inc
fidivl
shl
fisubl
push
cltd
push
dec
lret
mov
xorb
js
mov
sarl
repnz
cltd
adc
lret
stos
and
sarb
xor
sub
das
movsb
ja
xor
les
inc
pop
sub
test
fisttps
gs
out
xor
sub
mov
xchg
int3
or
cltd
or
xor
mov
test
jns
ret
test
imul
sub
enter
mov
in
fildll
mov
mov
es
faddl
push
push
sbb
outsb
cmp
mov
xor
mov
push
jp
test
push
imul
jns
int
cmp
mov
and
jle
lret
pop
shll
xchg
xor
xor
ja
imul
dec
xchg
and
fidivl
xor
dec
sbb
inc
scas
leave
push
dec
call
push
and
and
jge
test
sbb
mov
xchg
out
sbb
sbb
movl
pop
vpsraw
sarl
add
sbb
sub
jb
or
xchg
fisubrs
aaa
out
xor
loope
and
xchg
jle
lock
std
inc
sub
divb
mov
xchg
push
sbb
xchg
nop
aaa
mov
out
or
jmp
mov
sub
pop
dec
aaa
jmp
sub
stos
jno
cmp
sbb
dec
orb
mov
incl
or
stos
fsubrl
dec
jg
jne
daa
push
adc
daa
hlt
dec
mov
add
ljmp
jmp
hlt
frstor
into
adc
sarl
loope
in
lds
jmp
jae
scas
data16
clc
leave
iret
xor
xor
jb
jle
lret
or
es
sub
push
mov
test
mov
je
adc
loop
daa
ret
out
movsb
adcb
hlt
movsb
adc
push
pop
pop
mov
inc
or
out
pop
xchg
pop
je
xchg
pop
xchg
stos
pop
mov
rcll
xchg
ret
or
ret
or
xchg
stos
sub
jb
pop
out
cltd
not
lock
stos
clc
outsb
lea
xchg
mov
pop
pop
push
add
add
test
sub
lods
int
xor
jmp
xchg
xchg
push
scas
sbb
mov
filds
push
sbb
lds
mov
inc
leave
sub
loop
mov
xchg
xchg
cmp
dec
je
aaa
inc
shll
lds
test
pop
mov
mov
xchg
push
int
xchg
shufps
mov
push
xchg
xor
insl
lret
mov
arpl
testb
pop
xchg
ljmp
mov
mov
add
test
test
xchg
fimull
mov
hlt
repnz
fdivrl
push
test
cli
cld
or
mov
or
xor
mov
push
cmc
or
scas
aas
jg
mov
rcrb
pop
fistpll
test
rcrb
js
ja
xor
sbb
out
aas
test
test
mov
lcall
test
mov
mov
push
sub
pop
xorb
int3
dec
xchg
imul
cmpsl
dec
sbb
outsl
push
add
pusha
aaa
aam
inc
adc
repz
gs
imul
adc
dec
sbb
xor
dec
shl
divb
ror
insb
adc
in
fldl
loopne
xchg
mov
add
lret
jae
in
xchg
lock
test
loop
pop
in
jmp
rcrb
movsb
fs
adc
popa
jle
xor
nop
push
xor
into
pop
imul
add
or
push
les
enter
sub
lret
test
ds
adc
xchg
xchg
neg
and
arpl
dec
divps
jg
cmpsl
cmp
adc
sti
mov
lock
icebp
addr16
push
out
mov
mov
gs
stc
scas
and
inc
or
sub
fidivrl
xchg
sub
adc
ja
popa
jge
sub
jle
pop
test
out
pop
mov
mov
jmp
sbb
out
ret
cmpsl
fdivrs
mov
fisttps
frstor
pop
or
xor
xlat
shll
outsl
ja
rclb
lds
add
inc
orl
lcall
sub
inc
aaa
push
stos
outsb
dec
xchg
dec
iret
mov
in
push
and
xor
pop
jge
mov
not
inc
icebp
xchg
xchg
lret
andl
lods
dec
out
pop
push
xchg
nop
nop
out
popl
dec
pop
mov
xchg
leave
in
cwtl
inc
xchg
enter
cli
enter
popa
mov
push
dec
dec
rclb
insb
ss
gs
andl
xor
and
mov
aad
xbegin
lods
test
xchg
in
rcrb
icebp
sbb
int
push
cmpl
push
adc
sar
enter
inc
pop
test
je
cmpsb
or
pop
int3
dec
cltd
imul
mov
adc
fucomp
pop
pop
pop
leave
jbe
mov
mov
adc
fstl
icebp
cwtl
xchg
es
aas
cmc
jmp
sub
out
out
xchg
imulb
movsl
xor
adcl
std
xchg
aaa
int3
test
push
daa
adc
push
mov
pop
jne
roll
ret
mov
aaa
aas
in
test
add
inc
xchg
and
inc
cs
mov
xchg
rcrl
push
mov
jns
pop
push
stos
mov
cli
fimuls
jg
mov
push
cld
or
bound
push
pop
jo
orb
idiv
xchg
sar
and
test
mov
dec
push
sub
and
sbbl
ds
ss
mov
jae
and
cmp
inc
jno
and
and
ficoms
cld
or
aas
cs
sub
inc
daa
dec
push
fstl
mov
mov
inc
cmpsb
sbb
sub
lret
in
push
cli
jnp
inc
scas
adc
adc
push
mov
add
cld
rol
out
push
dec
subl
lds
cmp
xchg
sub
push
adc
into
pushl
push
out
fistpll
mov
insl
inc
out
shlb
mov
cmpsb
movsl
mov
xchg
sub
mov
dec
sbb
and
jmp
out
mov
shll
lods
in
push
cld
push
test
xchg
outsl
ljmp
or
imul
cs
movsb
fbld
js
movsl
push
aaa
mov
xchg
mov
mov
xchg
xchg
adc
cltd
shlb
dec
push
dec
xor
fnstsw
and
push
push
ja
sahf
cmp
push
push
pop
cs
adc
xchg
testb
jns
xchg
mov
mov
mov
push
or
int
mov
and
jle
fmull
cmp
stos
loop
pop
lds
les
cmp
xor
mov
mov
test
call
es
adc
rcrl
stos
fpatan
pusha
lahf
adc
out
fstpl
ja
adc
shl
pop
pusha
mov
dec
inc
jnp
ja
lahf
stc
and
loop
mov
mov
sbbb
pop
cmp
shll
std
sbbl
insl
scas
leave
shr
mov
add
out
es
aas
xor
mov
mov
sub
push
mov
jae
lret
in
popa
mov
es
imul
mov
xchg
xchg
adc
cmp
jns
loop
imul
movsl
xchg
lds
dec
dec
pop
dec
xor
add
xor
ds
out
into
ds
pop
out
mov
pop
rolb
jecxz
rolb
push
add
bound
xor
lds
sbb
push
pop
cmp
lret
push
push
arpl
push
mov
xchg
mov
mov
jns
mov
push
dec
and
jmp
aaa
mov
push
leave
mov
jno
jecxz
lahf
iret
imul
dec
and
mov
mov
aad
jb
mov
fbld
test
lea
sahf
sub
mov
push
mull
mov
scas
je
cmp
xchg
popa
dec
cltd
jno
outsl
in
icebp
js
jecxz
jnp
movsb
mov
arpl
pop
xor
int
ss
xchg
outsl
mov
xor
push
push
push
out
mov
cmpsl
jg
adc
push
repz
es
in
jmp
sub
mov
scas
lods
jnp
aas
or
sti
ja
mov
iret
pop
cmpsl
mov
mov
inc
mov
inc
mov
mov
pop
dec
sub
lcall
push
push
or
adc
pop
scas
in
repz
out
xlat
nop
fisttpll
mov
mov
imul
xchg
mov
adc
jae
push
inc
xchg
and
xchg
out
nop
out
lods
jne
mov
cli
test
shrl
inc
push
push
outsl
pop
les
popw
adc
mov
and
push
xorl
data16
push
leave
inc
fcompl
jle
sahf
out
lods
aaa
xchg
rcll
mov
jne
popa
jg
sub
jnp
mov
and
pop
xchg
nop
mov
mov
cmpsl
pop
imul
push
test
pop
inc
xor
ror
iret
push
fcoml
lret
mov
push
sbb
lods
sub
lret
pop
pop
dec
xlat
lea
int
jb
xchg
imul
loope
sbb
fcompl
jno
fcoml
push
xor
dec
xchg
add
movsl
mov
push
out
cmp
aas
xorl
nop
pusha
repnz
xchg
scas
leave
cmp
int
cmpsb
daa
xchg
stos
inc
inc
add
aad
xchg
jae
cmpsl
jbe
xchg
inc
xor
dec
enter
imul
iret
stos
jecxz
js
pop
loope
mov
fnstcw
push
push
std
sub
pusha
inc
push
pusha
xor
stc
mov
xchg
scas
push
lods
push
push
pop
xchg
sbb
jmp
loopne
sbb
lcall
inc
or
imul
mov
jae
insl
pop
stos
push
adc
fstpt
lret
pop
mov
mov
xor
jle
mov
pop
ss
cltd
push
bound
mov
cmp
sbb
in
mov
push
popf
dec
mov
int
pop
fistpl
adc
jb
mov
adcl
popa
repz
dec
outsb
push
cmc
je
ret
mov
xor
pop
mov
sahf
and
dec
mov
add
xchg
adc
cs
xchg
dec
icebp
sub
dec
out
cmp
pop
clc
std
in
out
fbstp
in
repz
sbb
pop
jae
xchg
sub
sbb
push
xchg
xchg
and
mov
push
testb
test
mov
fcmovne
cmpsl
push
xchg
jb
pop
sbb
pusha
jno
push
cs
inc
dec
push
cmp
insl
mull
push
test
pop
xor
push
shlb
das
cmpsl
std
cltd
call
test
push
cmp
add
fsubl
lods
mov
dec
in
mov
sub
pop
push
xchg
dec
jecxz
sub
mov
clc
out
mov
pop
rcl
fs
inc
out
addr16
and
jle
sbb
jp
and
lock
mov
and
int
sub
les
es
jbe
adc
xchg
inc
gs
push
xor
rorl
lds
stos
out
nop
pop
testl
rolb
pop
mov
sbb
into
imul
pop
out
sbb
aaa
ljmp
lret
push
icebp
mov
sub
gs
jno
push
jne
rolb
and
xchg
jmp
xchg
rcll
dec
inc
dec
imul
xchg
dec
adc
add
sbb
and
pop
mov
loope
int
xchg
mov
clc
movsb
gs
adc
sahf
mov
addr16
imul
rcrl
pop
xor
pop
out
xchg
cmp
cmp
std
frstor
ret
push
xor
or
aas
icebp
ret
dec
inc
or
stos
icebp
ja
mov
into
cmpsl
stos
xor
pusha
or
jecxz
sub
adc
jecxz
popa
mov
or
in
scas
fcomip
out
inc
xor
daa
mov
jecxz
add
inc
inc
xchg
pop
push
push
pop
mov
sbb
lods
push
pop
sub
xchg
in
repnz
xchg
data16
imul
lret
add
lret
inc
fisttps
or
mov
jle
add
sbb
xchg
push
and
jmp
test
push
mov
jecxz
in
mov
jnp
pop
fnstsw
push
in
mov
fmull
mov
lds
push
mov
jp
push
pop
cmp
xchg
dec
cmpsb
inc
lock
pop
test
or
pop
push
nop
push
push
sarb
out
repnz
adc
sbb
pop
repz
outsb
jg
lret
or
push
scas
mov
shll
pop
pop
sub
cmp
lds
fdivrp
dec
inc
adc
sub
outsl
mov
sub
and
imul
mov
xchg
dec
lock
aad
jle
std
pop
jecxz
pushf
xchg
daa
xor
adc
adc
or
movsl
push
movnti
and
ja
add
popf
adc
les
cmpb
aaa
xor
mov
icebp
es
cwtl
int3
pop
mov
mov
adc
mov
mov
testl
outsb
jl
jmp
lret
mov
das
push
and
inc
movsb
aas
mov
sqrtps
cli
jcxz
adc
out
or
xchg
xchg
in
sub
inc
psadbw
es
cltd
icebp
sub
and
mov
iret
add
cmpsb
shll
xchg
adc
pusha
dec
jo
stos
and
xchg
daa
icebp
cs
out
jecxz
mov
retw
js,pn
sbb
aas
lahf
mov
out
clc
sub
js
ja
push
mov
cmc
into
cmpsl
stos
inc
xchg
jge
xchg
repz
mov
mov
adc
pop
dec
mov
xor
sub
ret
cmp
sbb
aaa
push
mov
jnp
outsb
clc
cmpsl
fadds
test
xor
add
adc
dec
repz
cmpsb
cmpsb
mov
and
sbb
popa
jecxz
faddl
jge
aaa
lret
add
xchg
push
push
cmp
rdmsr
lds
and
mov
xchg
xchg
mov
sbbl
sub
sub
xor
cmpsl
mov
ret
mov
addl
xchg
adc
outsb
or
ret
xor
cmpsl
mov
jo
pop
jle
mov
mov
dec
test
inc
mov
ljmp
loopne
xchg
enter
xchg
xchg
cmp
dec
mov
pop
cmpb
pop
mov
adc
sbbl
and
jg
movb
pop
and
dec
mov
jb
xor
rclb
aaa
push
or
fnsave
adc
add
inc
push
loopne
std
jns
in
add
push
hlt
or
ds
js
mov
pop
lret
fucomip
ret
xchg
inc
fimull
pop
cmpsl
mov
or
mov
add
jno
xor
ljmp
shlb
test
shll
add
movsb
jnp
arpl
inc
xchg
int
xchg
mov
add
jno
loope
or
inc
adc
dec
adc
mov
daa
leave
jb
pop
or
inc
jnp
testb
adc
cmpsb
inc
pop
ret
fldcw
jno
mov
sub
mov
add
mov
les
mov
aaa
js
aam
push
or
mov
push
imul
and
xchg
jb
mov
xlat
sbb
imul
leave
mov
aas
mov
sub
or
xchg
ljmp
out
xchg
lret
out
cld
in
jmp
adc
xchg
imul
lods
jle
aad
dec
mov
push
pop
std
sbb
fcompl
rcll
std
inc
push
mov
test
xchg
jns
mov
mov
test
mov
fnstcw
push
jg
and
inc
xchg
jecxz
and
push
or
scas
dec
repz
fistpll
std
dec
jecxz
je
ds
imul
jbe
and
nop
add
inc
ret
sbb
cmp
inc
in
jnp
lea
mov
movsl
or
jmp
cli
cmpsb
adc
and
inc
pushf
and
xchg
push
sbb
popf
subl
push
xchg
mov
jle
and
pop
inc
push
xchg
lret
add
imul
sti
cmp
mov
adcl
push
sub
mov
scas
stos
sub
fnstcw
and
fildll
push
ja
xchg
adc
jmp
push
iret
sub
add
mov
pop
sbb
and
sub
mov
mov
out
inc
js
imul
iret
lock
xor
mov
push
imul
mov
sete
insb
mov
iret
cltd
lods
sti
jmp
scas
xor
js
fcom
sub
seto
mov
mov
nop
jmp
xchg
filds
nop
cmp
sub
clc
stc
pop
cmp
pop
insb
mov
mov
xchg
fsubl
mov
test
pop
xchg
out
shrl
xchg
clc
data16
push
xor
aam
out
ret
sti
ja
mov
lret
jmp
pop
sahf
fwait
adc
aas
sub
out
ljmp
ss
mov
xchg
adc
sbb
ja
leave
test
sbb
mov
fdivr
icebp
jae
aaa
hlt
jmp
push
out
mov
notl
dec
jmp
cwtl
lods
out
push
pop
movsb
push
loopne
mov
mov
mov
jnp
cmc
imul
jg
cmp
aad
pop
jle
mov
mov
pop
cli
enter
aaa
pop
andl
mov
mov
shlb
stc
sbb
call
sbb
mov
insb
mov
xchg
in
jge
ror
insl
jno
pop
jl
pop
sbb
ja
mov
adc
aaa
pop
pop
xlat
jl
cmc
mov
xchg
xchg
testb
mov
shll
pop
jne
daa
cmpsl
jmp
or
out
and
push
inc
lahf
adc
call
sub
rorl
ss
push
push
call
int3
push
add
mov
dec
adc
or
adc
call
js
push
cs
movsl
lds
pop
repnz
movsb
cmp
call
xchg
ficoml
sub
mov
clc
or
sti
fisttpll
lds
inc
dec
push
mov
mov
mov
pop
or
pop
rcr
loope
jb
rcr
loopne
add
jno
push
cmp
dec
pushf
rclb
xchg
sbb
outsl
xchg
loope
scas
fiadds
xchg
aaa
cltd
fidivs
xchg
aaa
pushf
into
cmp
inc
sbb
inc
sub
fldl
sub
popf
testb
mov
shl
popf
movswl
std
add
idivb
push
push
sub
in
out
jmp
cltd
xchg
pushl
js
xchg
jnp
mov
out
mov
push
arpl
and
scas
repz
movsl
iret
jno
adc
mov
stos
inc
push
int3
fists
pop
jnp
js
jno
jle
cmc
xchg
mov
push
lods
sub
call
js
xor
icebp
hlt
movsb
dec
fsubs
xchg
in
lods
mov
cmp
loopne
mov
mov
std
mov
sbb
mov
mov
xchg
lock
add
mov
mov
jge
mov
mov
jge
dec
fisubrs
xchg
es
cmp
aaa
add
ja,pt
xchg
enter
mov
xchg
xchg
jge
inc
adc
divl
add
push
nop
movl
mov
insb
mov
ljmp
cmp
iret
aaa
aad
push
insl
ficompl
int
out
dec
push
mov
sbb
pusha
xor
movzwl
lods
mov
mov
cmpsb
xchg
lock
in
mov
pop
imul
jae
outsl
jle
leave
les
hlt
mov
mov
mov
imul
xchg
scas
scas
push
mov
fiadds
fstl
sbb
out
in
xchg
mov
lds
xchg
shl
lds
fdivr
mov
fcmovne
sub
js
js
push
adc
push
nop
cmc
add
pop
inc
or
mov
cmp
push
xchg
ja
push
xor
aad
fxch
pop
scas
je
inc
jg
into
sar
loopne
lods
movsl
lret
iret
lahf
cltd
stos
xchg
xor
sbb
fcmovnb
cld
out
jbe
pop
in
fistl
enter
cmpsb
lock
scas
cmp
es
stos
mov
jbe
pop
ret
filds
mulb
push
inc
ja
sub
or
scas
in
rcll
nop
ljmp
mov
xchg
push
leave
sbb
inc
push
inc
cmpsl
push
mov
sub
aaa
mov
and
mov
sub
or
xchg
and
or
xchg
pop
into
mov
dec
mov
mov
xchg
popa
cmpsl
or
mov
popf
mov
mov
das
jbe
and
xchg
mov
loopne
mov
div
sahf
or
mov
jnp
dec
mov
lret
xchg
scas
mov
xchg
xchg
scas
push
shrb
inc
push
lahf
pop
fsts
nop
bnd
sub
loope
push
or
into
xchg
lea
dec
out
in
push
pop
stc
test
test
mov
daa
xor
imul
sbb
push
and
inc
shrb
or
mov
je
push
out
xchg
cld
ja
and
aad
aaa
pusha
cmpsl
mov
mov
inc
push
loop
ds
jnp
std
pushl
adc
hlt
mov
mov
mov
xor
xchg
repnz
mov
gs
jae
push
pop
ret
in
xchg
adc
jbe
mov
mov
dec
xchg
xor
jns
sub
or
mov
pushf
push
ja
xchg
pop
mov
inc
pop
int
scas
mov
mov
jmp
les
push
das
std
js
es
repz
mov
sbb
dec
cmpsl
lods
jecxz
xchg
adc
das
in
xor
push
in
mull
dec
movsl
mov
repz
mov
scas
adc
shll
inc
inc
subb
jb
das
nop
cltd
out
cmpsb
addr16
test
or
and
lods
jne
arpl
pop
push
sub
mov
pop
adc
xchg
push
dec
mov
inc
js
out
inc
fists
push
mov
popf
addb
mov
nop
add
jnp
ljmp
shlb
xor
mov
outsb
pop
and
xor
repz
mov
cmpsl
xchg
ss
fdivs
aam
add
mov
sti
aaa
mov
fs
cmpsb
push
in
xchg
mov
faddl
iret
xchg
xchg
lock
dec
xor
lds
push
or
repz
int
mov
out
mov
mov
inc
xchg
push
mov
xor
xchg
ljmp
push
aad
ja
push
add
popa
nop
out
mov
stos
test
dec
mov
mov
pop
loopne
or
adc
adc
push
adc
mov
push
test
push
inc
and
add
scas
gs
xorl
push
sub
aas
or
xchg
pop
int3
mov
sbb
movl
jns
das
fistps
mov
popa
cwtl
pop
mov
scas
dec
xorl
repz
nop
cs
push
jbe
cmpsb
inc
lods
aas
pop
pop
mov
cmpsl
aaa
in
xchg
mov
in
rorl
cld
mov
mov
mov
adc
in
mov
out
jl
sahf
xchg
mov
movsl
push
mov
imul
gs
jmp
lea
imul
in
aam
gs
nop
xchg
jl
popf
rcrb
faddl
jecxz
pop
xchg
adc
xchg
jo
cmp
push
fidivrs
lahf
imul
xor
mov
jns
cmpsb
lahf
xor
add
jp
cmp
pop
daa
stos
mov
mov
rorl
mov
cmpsb
test
cmpsl
fdivl
fs
jl
or
cmp
inc
lods
xchg
mov
lds
out
add
mov
cmp
arpl
test
inc
call
lds
nop
or
mov
and
cmc
dec
test
push
mov
out
mov
dec
outsb
aas
push
mov
shrb
xchg
enter
push
test
fnsave
or
lahf
lea
icebp
mov
std
pop
lods
add
repnz
pop
int
idivl
mov
mov
inc
mov
js,pn
adc
arpl
jcxz
fildll
testb
sub
nop
test
pop
sub
cmp
xor
lahf
jmp
mov
scas
or
ja
xor
jbe
dec
sub
pop
jmp
pop
stos
mov
cmpsb
test
push
fs
roll
nop
subb
js
sbb
push
aas
nop
jnp
cwtl
add
add
push
gs
out
int
pop
mov
hlt
mov
xchg
push
mov
xchg
xor
jecxz
into
jne
ljmp
add
push
inc
ficoms
mov
lods
adc
ret
xchg
jl
jns
in
aas
xchg
xchg
cmp
shll
jg
or
outsl
mov
test
loopne
aas
clc
sarb
push
sbb
in
jne
mov
mov
nop
rclb
xchg
mov
in
mov
jno
and
stos
popa
sub
aas
mov
dec
imull
xchg
mov
push
cli
or
add
mov
mov
xchg
xor
ret
or
push
push
add
mov
and
enter
enter
int3
aad
or
pop
xchg
or
into
mov
jb
movsb
stos
xor
mov
nop
mov
add
into
push
out
sbb
or
mov
add
inc
or
daa
adc
int
outsl
loopne,pt
adc
sahf
addr16
into
lahf
sub
push
std
pop
sarb
test
in
mov
aaa
push
scas
bound
in
jg
sub
jg
jo
sub
xchg
stc
into
xor
jnp
dec
test
inc
scas
hlt
lahf
cli
mov
inc
scas
pushf
or
iret
inc
xor
lea
mov
ja
adcl
call
pop
leave
xor
nop
adc
sub
shrl
sbb
addr16
clc
outsb
xchg
cwtl
pop
mov
inc
gs
adc
jne
and
pusha
mov
rcll
mov
out
xor
lahf
or
pusha
call
sbb
xchg
arpl
aaa
ljmp
adc
ret
cli
push
cmp
sub
lock
test
daa
push
loopne
aaa
imul
mov
enter
push
loop
scas
loope
lcall
loop
nop
xor
xchg
xchg
cmp
ss
fucom
and
and
add
add
jecxz
pop
dec
jmp
mov
inc
lods
push
cmp
cmp
fstl
mov
pop
lods
jbe
fstl
ror
movsl
mov
in
push
lods
cmp
cld
mov
mov
cmpsb
insb
cmp
dec
rclb
cmp
gs
addl
jo
xchg
mov
js
or
inc
adcl
add
lock
push
cltd
arpl
sbb
push
xchg
dec
xchg
mov
dec
push
jne
in
mov
adc
mov
sbb
cwtl
call
sub
lahf
and
cmpsb
mov
mov
shll
std
rcrb
add
mov
mov
stc
push
popf
xor
popa
repnz
sbb
leave
cld
inc
in
mov
pop
aad
dec
testl
dec
mov
and
sub
inc
lret
outsb
dec
pop
xchg
mov
jg
stos
mov
les
mov
mov
cmpsb
fdivl
xor
mov
jbe
lock
push
movsl
addr16
mov
and
paddusw
xchg
gs
sbb
lahf
mov
out
xor
ja
dec
pop
out
insb
jno
jmp
xor
jecxz
jno
adc
mov
xchg
mov
dec
mov
push
fistl
cld
lret
out
dec
or
jle
cmp
repnz
pop
sbb
xor
cmp
ja
cmpsl
dec
je
mov
or
push
sub
or
jg
sbbl
push
iret
and
sbb
addr16
or
mov
xor
xchg
xchg
sub
sub
sub
aad
xchg
jg
scas
sbb
mov
dec
add
popa
lret
inc
mov
lret
aam
loop
cmpsb
and
ret
jge
in
lahf
mov
popf
mov
inc
mov
and
mov
xchg
lods
addr16
leave
jl
push
lods
sbb
pop
decb
xchg
adc
outsl
or
or
es
xchg
iret
loop
in
sbb
xchg
out
push
cmpsl
fadd
pop
pop
push
jo
fdivrp
outsl
cltd
or
cmc
push
cmpsl
in
sub
sbb
test
pop
cmp
iret
out
icebp
xor
and
mov
testb
xchg
cmp
mov
aaa
je
jecxz
mov
fsubl
fwait
mov
mulb
out
mov
adcb
lahf
daa
rorl
cwtl
xor
out
mov
inc
pushfw
adc
imul
adc
mov
arpl
mov
xor
mov
outsb
lret
xchg
dec
imul
jno
in
icebp
xlat
pop
xor
jb
xchg
fisubrl
xlat
adcl
lret
aad
insl
xor
xchg
lret
imul
ret
sbb
jle
jo
cmp
ds
int
xchg
mov
inc
xchg
dec
xchg
dec
mov
and
or
and
mov
lock
rcrb
ja
aad
nop
ret
jbe
inc
lods
fs
test
adc
shlb
insb
adc
outsb
mov
inc
push
jmp
adc
into
fists
nop
xor
xchg
xor
inc
pop
outsb
loope
or
aam
aaa
pop
hlt
jno
cmp
push
add
mov
push
aad
cltd
add
cli
insl
xchg
mov
push
outsl
or
xchg
dec
test
adc
add
dec
orb
push
movsl
cs
in
jl
and
cli
jl
mov
sbb
mov
add
cmpsl
div
push
mov
nop
jge
xchg
inc
push
gs
jne
bound
in
std
xchg
xchg
jecxz
dec
adc
mov
xor
aaa
movsl
mov
ja
iret
std
popf
ja
call
mov
stos
inc
sbb
push
mov
and
leave
xchg
push
inc
aas
in
loope
ret
cmpsb
sbb
mulb
dec
jmp
xchg
cmpl
xchg
xchg
mov
outsb
pop
out
inc
pop
cs
mov
mov
in
sbb
cmp
insl
mov
scas
inc
xchg
iret
mov
aad
pop
fbstp
mov
scas
aas
mov
stos
inc
sti
pop
shll
or
ret
cmp
incl
push
fdivs
jnp
stc
jge
scas
into
js
ss
xchg
inc
jge
cmpsl
mov
or
pop
adc
push
xchg
in
push
push
mov
shlb
cmpsl
test
pop
inc
loope
inc
push
js
pop
jno
mov
jb
xchg
mov
fidivrs
cmpsb
lea
cmc
call
aad
mov
aaa
in
xchg
bound
outsl
lds
outsb
out
push
popf
pushf
jbe
mov
daa
outsb
jnp
or
xchg
mov
xchg
clc
mov
mov
xchg
int
jg
in
xchg
push
push
mov
push
loope
cli
aaa
hlt
movsl
push
dec
cmpsl
js
mov
sub
sbb
pusha
scas
mov
xchg
or
pop
xor
sub
push
dec
xor
mov
cld
test
sub
popl
int3
sub
mov
mov
xchg
pusha
sbb
or
jg
sub
mov
sbb
ss
in
add
cwtl
dec
dec
mov
mov
push
jg
shrl
pop
jbe
enter
cmp
out
flds
enter
repz
je
icebp
jge
lods
sbb
xor
mov
pop
mov
cmp
add
jg
popf
mov
mov
fs
daa
sbbl
lods
adc
sub
cmp
push
push
mov
das
mov
andl
pop
jmp
or
movsb
push
in
lcall
mov
sbb
movsl
movsb
std
jbe
or
xchg
ret
mov
mov
dec
push
cmp
je
iret
push
inc
int3
and
stc
bnd
mov
and
lods
int
adc
pop
aaa
daa
and
repnz
imul
fistpll
test
sub
imull
mov
jo
push
adc
out
lods
nop
ficoml
loope
ja
lahf
pop
jmp
idivl
mov
sahf
stos
xor
xchg
push
dec
jg
out
std
jo
push
adc
hlt
mov
sbb
adcl
cmpsl
or
xchg
add
cmpsl
xchg
movsl
dec
xor
lret
push
sub
jnp
js
stos
mov
xchg
aaa
pop
push
shll
jnp
mov
mov
stc
js
mov
out
lret
pop
pop
jge
flds
fdivrp
pop
aad
inc
rol
lahf
mov
adc
aad
inc
or
rol
mov
and
dec
aam
mov
add
mov
ret
push
adc
xor
enter
or
testb
cmp
mov
mov
pop
cmovp
dec
cmp
pop
fcmovu
inc
test
or
clc
push
pop
mov
push
lcall
mov
addr16
dec
sbb
xchg
adc
mov
popl
jnp
pop
outsl
scas
add
sarb
and
cmp
dec
ja
push
filds
scas
aas
push
or
ret
rolb
into
rcl
pop
or
js
mov
xorl
xchg
dec
pop
dec
mov
push
dec
dec
ja
enter
jge
jecxz
mov
repnz
push
or
push
repnz
mov
mov
fsts
mov
jge
out
out
sub
jp
sbb
jno
iret
cmp
pop
cmc
mov
cltd
add
fcoml
out
pusha
adc
push
stos
mov
imul
push
push
dec
repz
jg
aam
mov
add
movsl
iret
hlt
popf
cmp
je
inc
xor
jno
push
imul
addr16
or
lds
movsl
lods
push
popf
pop
jae
aad
fcomps
dec
mov
icebp
mov
jb
mov
xacquire
imul
nop
jnp
xchg
jo
mov
jnp
xchg
xor
mov
jnp
xchg
testl
mov
arpl
lea
aaa
xchg
dec
leave
push
dec
xchg
ja
bnd
stos
sbb
mov
push
ja
add
das
mov
addr16
xor
cltd
push
repz
lea
shll
mov
testl
or
push
xchg
or
ja
mov
adc
adc
mov
cmp
sbb
lods
push
mov
mov
jge
mov
insb
jge
jb
pusha
jb
pop
pop
xchg
movsl
add
hlt
movsl
ss
mov
mov
jne
xor
sbb
mov
imul
inc
dec
pop
dec
aaa
mov
dec
ja
inc
xchg
dec
mov
sahf
adc
jae
outsl
adc
inc
jae
adc
push
in
mov
sub
mov
add
push
xchg
push
lods
std
ja
adc
scas
addr16
cmp
mov
jge
scas
mov
add
inc
mov
push
sbb
pop
xor
ja
cmpsl
outsb
movsl
addr16
mov
js
into
outsb
mov
inc
shll
shrb
or
aaa
push
test
mov
sbb
xlat
xchg
cmpsl
movsl
stos
fistps
inc
sbb
cmpsb
shlb
enter
fwait
xchg
daa
sahf
xchg
leave
aad
mov
jo
test
mov
into
cmp
addb
and
not
jmp
sub
pop
and
push
nop
lock
push
aad
push
xor
ds
xchg
xchg
cmpsl
pop
push
push
cmp
enter
je
jl
add
cltd
cmpsl
jne
outsl
rclb
xchg
or
pop
dec
mov
push
mov
dec
adc
aas
pop
add
pop
and
in
or
or
leave
push
jl
mov
adc
aaa
lret
mov
outsb
scas
das
stos
iret
pop
aas
cmp
cmpsl
test
mov
nop
enter
pop
push
inc
add
in
push
jb
mov
sbb
jmp
sub
popf
sub
loop
stc
loop
lods
jg
push
fisttps
outsb
ljmp
aaa
fistl
lds
cli
cmp
std
jbe
cwtl
mov
scas
scas
or
xchg
mov
cmp
mov
pop
or
mov
mov
add
das
outsb
or
ja
mov
js
jae
subps
add
lea
outsl
sub
hlt
xlat
out
mov
outsl
into
in
pop
jge
inc
dec
jge
jg
mov
ret
jne
and
std
je
ds
movsb
and
mov
out
push
xchg
pop
add
dec
out
jecxz
cmpsl
mov
sbb
das
push
mov
iret
mov
xor
fcomps
ja
sbb
scas
inc
xor
xchg
mov
xor
pop
stos
insl
scas
pop
inc
aaa
addr16
and
xchg
mov
lods
xor
fadds
sub
dec
sub
stos
mov
pusha
ret
push
add
xor
loope
cmpsl
mov
inc
xor
fisttpl
scas
lret
or
nop
gs
xor
push
xchg
sti
dec
jl,pn
test
xchg
dec
pop
cs
scas
sti
push
cmpsl
popf
jmp
mov
js
lods
lds
mov
dec
cmp
mov
arpl
ror
pop
adc
or
gs
adc
cli
pop
inc
add
shlb
daa
inc
cmp
popf
out
add
dec
into
xor
ja
xor
inc
and
scas
sbb
adc
aaa
bound
xchg
aad
mov
sbb
mov
rorb
jnp
push
xchg
aaa
pop
jmp
push
loopne
mov
das
jbe
mov
cs
out
pop
fwait
xchg
cmp
lret
and
jae
jns
ja
xor
ret
insb
mov
dec
mov
add
imul
push
js
test
mov
add
sbb
mov
inc
and
jl
jmp
and
lds
sub
and
into
mov
das
mov
pop
mov
push
dec
push
mov
popw
lret
add
mov
dec
ljmp
test
mov
lea
aas
inc
dec
push
into
cmpsb
and
nop
push
lcall
pop
jo
jne
vphaddubq
das
pop
mov
dec
xor
dec
pop
push
xchg
repz
repz
out
lahf
and
lret
rclb
imul
pop
popf
ljmp
xlat
rcl
lret
add
cld
repz
in
nop
dec
js
add
in
int3
test
mov
jg
mov
jl
push
sbb
push
in
or
adc
shl
ss
sub
fsubrs
daa
pop
shrl
jmp
fmulp
inc
pop
mov
imul
into
mov
int
lods
mov
pop
int
xor
pop
jg
or
scas
lahf
jle
sub
xlat
dec
cmp
inc
nop
out
pop
enter
into
outsb
pop
xchg
dec
out
jle
notb
scas
leave
scas
or
fcoml
push
ret
xchg
scas
mov
mov
shlb
jbe
lret
inc
lcall
xchg
sahf
nop
jno
in
or
test
nop
and
mov
mov
push
lock
fdivrl
jno
int3
fs
add
xor
leave
cmp
xor
stc
sbb
cmpsl
inc
int3
push
out
jnp
jne
sysenter
xchg
inc
test
inc
cmp
jge
push
dec
test
clc
sbb
mull
xchg
jo
cmpl
lcall
hlt
cmp
dec
pop
es
dec
js
hlt
daa
jne
mov
xchg
jmp
in
adc
hlt
int3
inc
adc
mov
mov
pop
aaa
aaa
mov
xchg
jb
and
xchg
pushf
lods
xchg
pushf
repz
mul
outsl
xor
cmc
imul
ffreep
xchg
mov
dec
xchg
push
add
mov
inc
int3
scas
xor
test
xor
js
outsl
out
add
jg
cmp
in
jb
popl
rorb
pop
or
cs
xor
stos
das
fwait
add
jg
sub
scas
xchg
fdivl
sub
push
lret
jecxz
nop
int3
xchg
mov
xor
outsb
stos
rclb
or
mov
mov
push
mov
leave
mov
aam
add
add
xchg
xchg
ss
outsl
sbb
mov
jb
mov
add
jnp
mov
and
das
or
iret
out
ds
sbb
lcall
and
adcl
push
adc
std
cmpsl
aad
divb
clc
pop
xchg
out
fcmovnb
inc
aad
js
sbb
iret
jns
es
and
loope
mov
lds
popf
fsubrl
jmp
sbb
movsl
aas
addl
dec
mov
sub
aas
sub
jg
adc
pop
inc
mov
fld
push
jecxz
scas
pop
jns
rorl
aas
mov
pop
inc
mov
xlat
add
scas
xchg
xchg
cmp
out
mov
in
cld
jecxz
rol
notl
adc
inc
push
lret
sbb
enter
cwtl
sbb
cmpsb
jne
lock
sahf
cmpsl
mov
jae
and
push
lahf
mov
lcall
rcrl
sbb
pop
cmpl
push
lahf
xor
inc
sbb
in
into
cs
in
mov
mov
addr16
shll
push
out
push
mov
int
inc
inc
xchg
add
sub
imul
hlt
stos
scas
xchg
mov
lods
call
inc
pop
enter
mov
xchg
mov
cmpsl
stos
mov
jle
sahf
leavew
jne
in
fcompl
outsb
add
mov
imul
rorb
mov
pop
adcl
imul
outsl
fsubrs
decl
xchg
cmpsb
push
repz
test
add
cld
inc
cmp
xorl
mov
leave
adc
mov
js
jnp
add
int3
and
or
rol
mov
mov
ror
mov
push
mov
test
mov
mov
push
ds
inc
inc
aam
je
xor
inc
sbb
mov
inc
int
call
xchg
xchg
mov
js
pop
fdivrl
in
sub
and
xor
mov
mov
xor
test
xor
fldenv
aam
xchg
or
mov
jne
cmp
mov
xchg
add
inc
sti
ja
les
aaa
cltd
leave
push
inc
mov
jl
movsb
in
inc
mov
dec
popl
js
dec
scas
jg
add
daa
lea
xor
js
jno
push
aas
lea
pop
in
pop
add
push
sti
xchg
add
xchg
stos
in
jle
divl
dec
jbe
cmc
and
pop
mov
dec
aaa
scas
xor
les
imul
adc
jg
mov
inc
insl
or
mov
inc
add
push
psllw
notb
ja
out
xor
inc
in
rorb
push
cmpsl
lock
insl
aaa
pop
inc
gs
jecxz
lea
push
add
je
rclb
sub
push
push
std
dec
int
xchg
je
mov
ja
pop
test
rcl
xchg
gs
dec
in
mov
jl
clc
adc
shr
pop
fwait
cld
xchg
cmc
icebp
int
loop
mov
in
dec
rcrb
xchg
inc
dec
jne
mov
test
in
xchg
shlb
push
in
mov
js
and
dec
cld
vminsd
loop
cmp
insl
dec
pop
fs
mov
cmp
lahf
repnz
xor
and
sti
aad
pop
sahf
sub
bound
outsl
jle
fnsave
fstl
aaa
dec
mov
sbb
xchg
jns
pop
push
in
dec
adc
sahf
mov
std
fsubrs
kmovb
mov
std
mov
inc
cmp
mov
mov
dec
cmp
xchg
test
mov
std
cltd
pop
mov
les
mov
or
test
lcall
xchg
imull
inc
sub
ret
push
mov
lock
insb
dec
mov
jl
mov
push
addl
jge
inc
cmpsl
sub
push
pop
sbb
mov
test
in
aaa
mov
adc
cmpsb
cmc
push
add
jnp
push
xchg
jmp
repnz
js
dec
mulps
call
iret
fs
scas
mov
call
cs
mov
andl
stc
test
mov
test
jl
ds
adc
dec
orb
loopne
dec
fisttpl
sub
ret
cmpsl
xchg
nop
jns
mov
flds
cmpl
outsb
xchg
mov
jno
into
pop
mov
ret
pop
xchg
pop
inc
test
es
pop
xchg
inc
cmp
das
mov
test
xchg
aas
dec
test
inc
add
ret
cmpsb
das
dec
cld
sub
cmpsb
sbb
and
js
push
orl
jge
xchg
imulb
jp
push
lods
push
sub
cmp
pop
shll
shll
mov
testl
xor
xchg
lods
inc
pmullw
or
mov
repz
xchg
je
mov
hlt
fisubrl
rcll
xchg
lods
mov
dec
mov
jno
rcrb
aad
les
cs
xchg
movsb
aad
cmpsb
adc
sarb
pushf
addr16
pop
mov
hlt
xor
or
aaa
inc
divb
test
and
movsb
push
outsl
adc
and
sbb
xor
ret
imul
xor
mov
js
jmp
jle
leave
dec
adc
xor
orl
daa
imul
push
mov
notl
xor
aam
or
jne
out
psubb
pop
pop
bound
xor
jns
jnp
xchg
mov
xor
js
mov
je
add
mulb
jle
adc
pop
mov
icebp
xor
pop
mov
push
push
mov
pop
inc
rep
fmul
push
xor
repz
imull
aas
mov
jnp
in
scas
sbb
push
jnp
out
fwait
xchg
lahf
push
cmp
xor
cmp
push
mov
sub
scas
int
adc
rcl
subl
stos
sbb
mov
push
inc
lds
addr16
push
nop
test
scas
jne
jle
bound
push
add
rcl
outsl
js
or
sub
and
outsb
xchg
mov
xor
push
pop
aad
ss
sbb
xchg
into
aaa
faddl
aad
cmpsl
sub
scas
outsl
sub
stos
repz
lea
fildl
lcall
int
or
mov
or
aas
pop
add
xor
gs
out
daa
popf
idivl
push
or
push
xchg
stos
dec
xchg
cmp
mov
sbb
jp
leave
xchg
insl
xor
cmpsb
nop
xchg
jl
ret
push
test
int3
dec
mov
scas
negl
or
xchg
lods
dec
ret
adc
adc
adc
inc
and
adc
rorb
pop
cwtl
lods
int
cmp
pop
and
lret
push
insb
inc
inc
sbb
cmc
jge
inc
adc
xlat
andl
sub
movsl
popf
jne
test
push
dec
js
shll
sbb
jle
fwait
cwtl
nop
pop
les
xchg
mov
and
dec
sahf
or
test
inc
sub
outsb
data16
xorb
lret
adc
cmp
cmpsl
fdivrl
out
mov
xlat
daa
pop
push
subl
pusha
and
addr16
dec
sub
popf
cmpsb
lods
shlb
test
xchg
loope
adc
test
outsb
loope
jnp
rclb
in
pop
xchg
loopne
xor
ficoms
mov
mov
das
push
or
pop
or
adc
outsl
std
sbb
addr16
sahf
pop
push
mul
lds
or
sbb
xchg
push
push
jle
sbb
mov
rclb
cmp
mov
adcl
std
inc
lcall
or
enter
into
or
imul
inc
cmp
xor
nop
add
sbb
test
lds
in
xchg
mov
nop
rcrb
ja
cli
mov
xchg
ja
mov
daa
jmp
jle
icebp
xchg
sahf
sub
xchg
aaa
jo
adc
xor
aas
std
scas
xor
nop
xchg
xchg
mov
xchg
mov
dec
ror
dec
aaa
rol
shll
lret
js
lods
imul
and
sbb
inc
out
mov
popa
jns,pn
out
inc
sbb
lahf
mov
loope
movsb
test
mov
fdivrl
push
adcl
adc
and
jnp
mov
sarl
cmp
rorb
iret
ljmp
cmpsl
jmp
jbe
inc
push
mov
jg
in
shll
mov
fstpt
mov
scas
push
lods
or
push
fmull
lcall
and
mov
adc
adc
mov
adc
movsl
leave
mov
das
push
jmp
dec
divl
mov
sub
popa
mov
mov
mov
or
dec
loopne
daa
int
mov
insl
jns
push
xchg
or
mov
and
shl
mov
test
push
or
sti
jmp
add
mov
les
adc
or
int
movsl
ja
cmpsl
notb
jmp
mov
stos
mov
mov
filds
divb
dec
pop
push
fnstsw
cmpsb
or
jmp
mov
pusha
inc
enter
out
rolb
cwtl
aad
pop
push
or
jmp
inc
in
jecxz
aad
jno
jg
or
xchg
icebp
push
sti
xchg
subb
xabort
inc
push
sub
fidivl
pop
lcall
pop
mov
xchg
push
in
push
sbb
adc
mov
pusha
mov
pop
repz
mov
mov
xchg
stos
mov
jb
cmp
scas
mov
imul
push
inc
aas
sub
mov
adc
sarl
in
jno
adc
rol
mov
mov
push
movb
clc
inc
cld
xor
js
pushf
fsubr
dec
ret
arpl
lret
adc
test
jle
pop
lret
mov
xchg
adc
bound
sbb
mov
xor
and
cmp
fdiv
fcomps
mov
aaa
fwait
testb
cmp
movsb
test
repnz
push
pop
jge
sub
movsl
jo
inc
cwtl
mov
insl
orl
popa
cmc
lods
mov
and
jge
lods
push
dec
lock
xor
mov
cs
jge
xor
xchg
leave
les
iret
xor
pop
scas
imul
xchg
xor
pop
fstpl
push
js
sub
push
fists
mov
adc
cwtl
pop
push
rolb
lock
mov
sub
std
cmp
fnstenv
xchg
jg
and
mov
pop
mov
push
imul
inc
lea
jge
mov
or
cld
mov
and
dec
out
sbb
aas
stos
fsubrl
xchg
cmpsb
mov
mov
push
cli
idivl
fs
or
adc
cmp
jl
je
fisubrs
iret
mov
mov
gs
fmull
nop
out
cmpsl
js
sar
outsb
insb
mov
shlb
imul
sahf
jp
test
sbb
xchg
pop
das
mov
fcoml
test
jno
adc
push
xor
cltd
inc
xchg
cmpsl
cmc
adc
outsl
lods
adc
ficomps
push
sub
cmp
mov
iret
xor
adc
ret
mov
jbe
mov
mov
popf
jmp
movsl
sbb
fwait
aad
pop
loope
xor
cmp
jnp
movsb
jo
mov
mov
test
push
std
imul
xchg
adc
sar
ljmp
pop
mov
and
scas
push
mov
mov
jne
jae
cmpsl
cmpl
and
pop
jmp
push
sbb
sbb
ret
dec
cmpsl
or
inc
not
lret
js
xchg
push
mov
popf
fldt
inc
iret
nop
in
xorl
lret
jmp
pop
rcrl
push
xor
aam
adc
nop
leave
jno
and
push
cltd
movsb
das
xor
ja
fistpll
dec
mov
and
and
sbb
test
adc
jae
xchg
call
movl
mov
and
inc
pop
xchg
fdivrl
cmc
imul
mov
xchg
cmc
outsb
pop
inc
xor
aas
sbb
push
mov
out
nop
loope
gs
scas
lods
notl
ja
mov
and
mov
inc
mov
push
cmpl
mov
daa
jae
ret
lahf
or
cmp
xchg
push
call
lods
adc
lods
mov
jb
push
jmp
xchg
push
jg
es
or
ja
in
lods
and
ja
sbb
shll
lea
xchg
lds
push
and
xlat
or
ret
or
dec
iret
xchg
aad
cmpsl
dec
fisttps
faddp
mov
into
repnz
pop
sbb
ss
repz
mov
std
aas
js
xchg
outsb
sub
and
leave
enter
dec
pushl
xchg
mov
shll
rcrl
adc
lret
xchg
fcomi
mov
mov
mov
nop
mov
popa
jl
cmc
in
xchg
add
js
dec
mov
mov
cltd
sub
mov
inc
mov
inc
push
xchg
fstpt
stos
and
mov
loope
cmpsl
in
push
mov
inc
lret
iret
loop
rcll
push
jns
in
push
aaa
rcr
xchg
sub
iret
jecxz
lret
scas
jnp
mov
sbb
jp
lret
cmp
movsl
push
push
inc
sub
aam
in
dec
and
aas
mov
fcmovnbe
rolb
arpl
ljmp
pop
shlb
mov
fisubs
push
in
mov
rorb
mov
movsl
fisttpll
ds
repz
xor
mov
pop
aaa
ja
inc
rclb
scas
js
pop
add
dec
push
aaa
or
xor
xor
add
popa
mov
rcr
out
mov
flds
ffreep
xchg
out
rcr
mov
aas
jmp
daa
aad
mov
xchg
shll
aaa
sub
mov
inc
mov
out
inc
xor
dec
dec
pop
daa
adc
xchg
and
cmp
add
pop
push
and
ja
int3
movsl
dec
push
loop
jne
sbb
arpl
xor
mov
sub
std
out
sub
pop
outsl
and
and
adc
loop
pop
xor
inc
xor
push
in
adc
pop
mov
test
in
mov
or
test
stos
shrl
nop
cmp
jp
mov
jg
mov
pusha
enter
int
insl
pop
jecxz
mov
stc
sahf
mov
lcall
mov
aad
pusha
bnd
bound
rcrb
subb
std
jmp
int3
push
push
sub
adc
add
cltd
iret
sbb
jnp
testl
aad
and
int
test
xor
ret
scas
std
jg
inc
leave
inc
cwtl
inc
scas
icebp
mov
mov
popa
add
and
or
push
popa
into
stos
scas
or
push
inc
aas
mov
popf
inc
aam
mov
inc
lcall
mov
xchg
mov
xor
scas
xchg
sub
cmpsb
test
push
bound
in
cmc
fcompl
or
jp
ja
mov
sarb
cmp
ds
cld
ljmp
out
push
mov
inc
push
fildll
out
xor
mov
pop
lret
ja
pop
ret
outsb
mov
bound
add
xchg
stos
lock
out
mov
xchg
xchg
popf
dec
xchg
inc
sbb
sub
push
add
push
inc
fdivrl
loop
and
daa
mov
repz
xchg
mov
jo
mov
rolb
lods
inc
jo
lret
push
xlat
lret
sbb
or
xchg
out
fnstsw
xor
pop
int
mov
dec
push
jns
lds
je
test
push
fdivr
test
clc
pop
mov
and
dec
xchg
mov
out
push
out
and
xchg
mull
and
mov
call
hlt
push
xchg
mov
dec
sbb
jl
daa
pushf
mov
xorl
popf
lods
inc
push
sarl
xor
push
adc
js
xchg
rcl
out
rcl
adc
lea
int
ja
jne
cwtl
mov
adc
inc
int3
inc
int3
aas
xchg
addr16
test
insl
jno
loope
in
cwtl
jno
xor
sub
test
nop
pop
mov
or
shlb
cltd
das
lock
cmp
jbe
loope
xor
test
into
lods
mov
lret
inc
mov
push
adcl
gs
les
cmpsl
adc
test
lret
stos
xor
loope
aaa
xor
pop
ret
cltd
aad
xchg
js
jle
aaa
stos
nopl
jnp
test
adc
les
shlb
cmpsb
lcall
rorb
nop
and
les
ds
outsl
lods
mov
mov
sub
push
pop
push
xor
fisubl
xchg
aad
push
nop
xor
fdivs
xchg
addr16
mov
dec
push
pop
xorl
mov
fs
xchg
pop
xchg
dec
push
in
push
inc
inc
lret
shll
ljmp
xchg
rol
lods
nop
adc
sub
mov
ljmp
xorb
xchg
imul
cmp
push
movsb
inc
mov
in
scas
mov
ficoms
js
loopne
xchg
mov
lahf
cwtl
orb
scas
xor
jg
imul
mov
adc
fs
xchg
push
in
aad
jmp
loope
mov
xor
fwait
sbb
cmc
mov
imul
enter
addr16
aad
adc
xchg
mov
leave
lret
mov
jb
lds
repz
or
stos
jne
lds
mov
xorl
ds
inc
leave
push
jg
mov
dec
dec
lock
jnp
jp
fisttpl
lock
std
in
lret
clc
xlat
icebp
mov
xchg
sbb
sub
shlb
xchg
jge
cmp
sbb
xor
out
insl
stos
mov
push
aam
scas
test
adc
cld
xchg
xor
adc
cmp
int
mov
popa
and
sbb
and
mov
int3
int3
pop
xchg
xchg
xchg
sbb
or
mov
sbb
or
cmp
push
adc
pop
sub
xchg
loope
sub
push
mov
xchg
popf
xlat
cmp
imul
mov
idivl
lds
cltd
or
enter
lds
es
xchg
sub
test
lret
out
adc
mov
xchg
adc
jg
movb
cs
andl
cmc
in
lret
push
jne
test
imul
mov
jmp
fsubrs
or
stos
std
cmp
into
xchg
rol
push
fidivrs
nop
sar
jnp
or
ffree
sub
mov
pop
sbb
push
enter
mov
mov
fbstp
nop
dec
cmp
int
out
popf
ja
out
pop
jg
xchg
or
je
adc
jmp
jge
daa
cmp
int3
mov
cmp
lret
push
jmp
les
out
hlt
mov
imul
pushf
xchg
negl
insl
inc
mov
or
adc
ret
sbb
lds
mov
test
pop
fnstcw
int
iret
ljmp
cmp
rorb
fxch
daa
into
push
adc
cltd
shr
inc
stos
dec
jg
mov
sub
push
xchg
push
mov
iret
aad
add
fistpll
or
push
add
cmpsl
test
dec
sbb
sub
js
subb
pop
jno
int
push
js
stos
inc
scas
or
addl
mov
xchg
out
imul
inc
pusha
sub
jno
mov
jge
shll
cmp
xchg
and
xor
movswl
dec
inc
pop
xchg
xchg
jmp
aaa
add
ret
adc
movsl
hlt
jne
mov
aad
and
lds
outsl
rcll
imul
test
hlt
jo
inc
ret
cmpsb
ds
nopl
loope
push
dec
ja
js
pop
lds
addr16
xchg
hlt
movsl
inc
sub
outsl
xchg
lret
xchg
and
xchg
fldl
pcmpgtd
cmpsl
xor
es
test
out
ret
xchg
mov
je
imul
mov
cmc
dec
pop
jo
daa
outsb
icebp
xor
mov
inc
mov
inc
pop
aaa
ja
xchg
repz
mov
mov
xchg
rorl
call
dec
add
mov
fisttpl
stos
iret
mov
mov
scas
call
push
out
jl
in
adc
sub
xchg
lahf
inc
jbe
mov
fisttpll
push
pop
aad
cmpsl
pop
in
sub
iret
and
scas
es
js
push
ds
paddw
fdivrs
dec
in
gs
add
addr16
lds
xchg
cld
hlt
out
push
pusha
test
mov
int
js
inc
mov
mov
cmc
int3
cmc
std
cltd
out
xchg
sbb
add
and
push
ds
pop
inc
pop
inc
jg
push
mov
xor
popa
mov
sarb
mov
pop
and
insl
add
cmc
sub
imul
addl
xchg
addr16
sub
adc
insb
nop
stos
int3
popa
ret
xchg
scas
mov
xchg
jl
sahf
mov
pop
pushf
pop
mov
xor
inc
je
scas
inc
push
jo
mov
push
js
inc
aad
orl
adc
push
push
imul
dec
ljmp
int3
push
repz
iret
add
mov
xchg
push
int
int
xchg
lds
nop
xchg
add
stos
mov
lea
push
mov
and
in
push
arpl
aas
insb
adc
and
mov
lods
out
bound
movsb
and
in
xchg
sti
pop
rorl
in
vmread
cmc
inc
test
push
xor
xchg
aad
iret
and
into
fs
adc
shr
mov
or
cld
adc
push
inc
sub
int
jbe
push
lret
mov
in
out
xor
nop
cmp
lods
jnp
inc
imul
ret
push
sub
inc
shrl
repz
mov
or
inc
jecxz
movsl
and
movsb
xchg
adc
dec
or
cmpsl
jecxz
lret
push
mov
xchg
lret
aad
xchg
fwait
inc
sbb
add
es
jb
sub
std
popf
repz
popa
xchg
int
testb
cmp
fnop
mov
pop
negb
cmp
jge
or
das
test
mov
les
or
fdiv
xchg
imul
imul
cmp
or
cmp
push
shlb
std
test
pop
arpl
pop
int
rorb
scas
leave
mov
aas
shl
adc
mov
cwtl
xchg
lret
add
pop
dec
mov
aas
hlt
outsb
in
nop
or
xor
out
cmp
aas
popf
sbb
cmpsl
nop
fcmove
xchg
or
mov
imul
addr16
mov
xchg
push
sbb
mov
cmc
es
push
inc
xchg
dec
insl
xchg
sub
outsl
xchg
xor
dec
and
mov
addr16
not
and
loopne
pop
in
push
ret
jbe
scas
js
mov
addl
push
rcrb
or
inc
xor
je
lea
xor
popa
sub
shr
scas
xchg
pop
sbb
aad
push
cltd
lods
ds
es
cmpsl
pop
insb
pop
push
out
divl
and
rorb
fsubr
lcall
fs
push
add
xchg
push
mov
mov
cmpsl
and
mov
jbe
ret
inc
sbb
int3
mov
jno
inc
out
push
mov
sub
dec
outsl
xor
sbb
movsl
or
pop
out
leave
icebp
ja
mov
sub
in
std
fldl
mov
ja
orl
mov
pop
addb
lods
ss
xchg
aam
xchg
and
sti
push
xor
push
sbb
iret
aas
orl
test
daa
and
aaa
lret
jmp
dec
test
repnz
lods
ret
sub
mov
nop
jg
xor
fs
mov
ja
xchg
xchg
adcb
push
out
mov
adc
xchg
shll
and
fmull
dec
sbb
xchg
mov
faddl
outsb
in
cmp
test
push
lret
orl
iret
shlb
aas
jb
xor
sub
sub
push
test
mov
sub
mov
add
shrl
dec
in
push
mov
fdivrs
xor
jnp
sub
mov
iret
mov
inc
mov
mov
jnp
or
xchg
adc
push
and
mov
scas
adc
stos
sbb
pmulhuw
sbb
fsubrl
movsl
or
iret
in
jge
scas
sbb
inc
xchg
outsb
xlat
dec
pushl
push
mov
aaa
pop
addr16
pop
xchg
inc
aaa
cltd
bound
gs
dec
xor
cmp
xchg
push
pop
stos
adc
jbe
fs
fmuls
jmp
lret
and
sub
rolb
jns
mov
aam
push
sahf
mov
inc
movswl
aas
in
rolb
inc
or
popf
js
rorl
ret
and
pop
dec
sahf
mov
push
mov
add
and
popf
xor
lods
loope
sbb
js
xchg
push
push
inc
repz
mov
repnz
or
mov
data16
das
lds
fadd
lahf
div
ret
xorb
push
int
scas
rol
fbstp
add
daa
sub
pop
push
xor
notb
repnz
push
push
in
repz
mov
xchg
or
or
shr
cmp
aam
pop
fisubl
js
inc
aaa
test
pop
sbb
inc
sub
ret
jno
push
push
dec
mov
mov
movsb
inc
or
fmull
gs
out
inc
pop
daa
pop
ss
aaa
js
aas
inc
mov
dec
aad
mov
inc
nop
cld
aad
cmp
leave
ret
not
pop
mov
xchg
mov
dec
js
jne
inc
fldt
and
pop
sbb
loop
mov
jmp
ss
pop
loope
testb
push
outsb
pop
and
aad
mov
xor
rorb
mov
mov
arpl
and
lret
stc
enter
xchg
add
push
in
jge
sbb
mov
ja
mov
inc
cli
call
dec
int
sub
lds
mov
xchg
sbb
cmp
mov
lea
stos
cmpsb
add
pusha
adc
and
push
cmp
shufps
js
test
test
push
push
ljmp
pop
addb
xchg
hlt
inc
mov
stos
dec
shll
dec
daa
out
loopne
add
lds
cmp
aaa
fcoms
push
mov
and
outsl
pop
lock
inc
cli
pop
inc
xorb
clc
push
jg
js
xchg
lahf
sahf
dec
and
outsl
faddl
mov
loope
or
movsb
mov
cmpsl
push
xor
add
mov
add
scas
sub
movsb
das
jnp
hlt
lret
jmp
pop
rcrl
mov
sub
xor
aaa
mov
in
subl
stc
repz
int
mov
insb
pop
popf
push
and
imul
adc
sbb
ror
and
sub
mov
push
fistpll
jle
add
xor
push
repnz
out
fisubrs
pop
mov
xchg
xor
jmp
sbb
sub
in
lcall
stc
jp
push
lret
push
aad
xchg
jb
insl
lahf
ja
iret
lock
xor
pop
mov
int3
xchg
outsl
dec
pop
jg
adc
das
adc
sub
out
inc
inc
fildl
ss
fdivl
das
xor
pop
cmp
in
push
lcall
lahf
xchg
fisttpll
dec
adc
testl
nop
in
addr16
dec
mov
jnp
or
jb
mov
lahf
sub
push
decb
popl
cmpsl
dec
or
mov
pusha
mov
and
shll
loope
jnp
mov
mov
dec
in
scas
xorl
inc
mov
pop
xchg
filds
cmp
negl
mov
jg
enter
mov
push
add
cmp
nop
push
adcl
or
adc
xor
in
fsubp
lret
or
lods
aad
ja
add
cld
nop
js
xor
ds
shl
lods
mov
and
aaa
xor
je
fmull
into
xchg
pop
jmp
inc
xchg
pusha
insb
stos
lods
mov
scas
jb
iret
xor
outsl
lock
repnz
mov
pop
jbe
cltd
jo
icebp
mov
mov
xor
lret
xor
lcall
frstor
mov
adcl
adc
fisttps
lods
aaa
sub
xor
call
lods
lcall
lahf
lds
xor
dec
mov
insl
push
inc
mov
pop
aad
js
divb
push
dec
cmp
outsl
push
inc
insb
and
push
addl
pop
js
gs
daa
cmp
cmpsl
dec
js
icebp
call
cmp
jb
adcl
mov
add
mov
pmaxsw
xchg
dec
test
aaa
nop
xor
pop
lcall
icebp
imul
cmp
aad
pusha
xchg
push
jbe
dec
cs
cmp
mov
pop
cmp
test
push
or
xchg
lods
mov
cmp
in
xchg
pushf
adc
mov
xchg
ja
lock
outsb
mov
call
scas
mov
pop
popa
shll
jl
mov
inc
shlb
mov
xchg
out
mov
loope
pop
push
sbb
pop
es
sahf
push
lods
shl
in
mov
dec
outsb
das
xchg
mov
pop
dec
xchg
dec
scas
mov
jbe
xor
ljmp
add
ss
sqrtps
xchg
fimull
out
inc
loop
jl
adc
shl
cmp
das
cld
sbb
aas
cld
arpl
addl
add
dec
push
adc
xchg
movb
mov
mov
mov
movsb
jge
xchg
push
ret
sbb
arpl
push
push
rcrb
dec
mov
pop
int
mov
sbb
movsl
outsb
xchg
mov
or
push
pop
pusha
imul
leave
mov
out
inc
scas
stos
aam
lods
pop
nop
das
pusha
scas
pop
mov
mov
aad
mov
and
add
sti
mov
jmp
jecxz
das
lods
adc
rclb
mov
in
int3
sbb
fisubs
lea
cmpsl
sub
mov
or
xchg
iret
pop
jns
cwtl
sub
lods
xchg
divl
in
aad
mov
cwtl
in
mov
jg
icebp
leave
mov
rcr
sarb
xchg
adc
cmp
and
imul
out
adc
adc
stc
mov
mov
dec
call
nop
aas
inc
stos
xchg
sub
cmp
add
and
cmpsb
pop
out
push
xchg
call
xchg
sbb
ret
pop
mov
stos
pop
fsubrs
push
jae
addl
lea
sarl
iret
ja
lahf
push
addr16
mov
sbb
mov
cmpsl
stos
into
daa
je
nop
mov
lahf
lret
lahf
jae
daa
mov
ss
lahf
dec
mov
cmc
inc
push
pop
dec
loop
sbb
fiadds
xor
xor
mov
int
pop
cmp
push
cwtl
sbb
adc
ja
test
nop
int3
push
pop
decl
pop
add
push
stos
push
xchg
sub
xchg
das
jb
xchg
ffree
xchg
adc
inc
rcrb
mov
push
xchg
mov
or
adc
xchg
std
xchg
sub
ja
iret
cmp
jnp
inc
xchg
mov
js
stos
bound
inc
xchg
movsl
pop
dec
adc
xchg
dec
out
push
into
xchg
cmp
out
and
xchg
mov
pop
pop
xchg
mov
push
or
jns
jnp
push
pop
call
dec
dec
movsl
pop
mov
and
sti
mov
into
mov
push
xor
outsb
popa
sarb
adc
js
lcall
jmp
xor
jbe
gs
mov
in
stos
dec
xlat
jle
fidivrs
mov
aam
in
xor
in
dec
insb
test
adc
cmpsb
insl
push
pop
dec
xchg
sub
outsl
lds
ret
js
cs
inc
adc
sub
dec
xor
pop
jg
xchg
sub
mov
loope
xchg
cld
and
add
scas
nop
ret
shlb
mov
and
mov
loop
mov
mov
sub
ljmp
sbb
pop
out
stc
fistpl
mov
mov
push
push
mov
xchg
ss
aam
nop
js
sbb
or
xchg
jecxz
addr16
sub
in
jae
mov
into
std
mov
push
in
jg
std
aad
xor
ficoml
xchg
fst
repz
mov
xor
mov
jecxz
test
push
iret
push
addr16
add
adc
adc
push
push
dec
pop
or
adc
jg
out
mov
shll
in
adc
mov
out
enter
lret
jmp
xor
jne
daa
cmp
mov
movsl
mov
adc
nop
adcb
ja
pop
mov
mov
dec
stc
lahf
mov
fdivs
push
lds
mulb
ss
shll
mov
mov
std
not
ret
insl
sbb
push
jge
out
movsb
and
push
loopne
dec
lods
ja
jg
lret
aam
iret
leave
pop
xchg
gs
popf
mov
int3
mov
mov
aas
inc
ss
and
xchg
jae
sahf
stos
daa
dec
shlb
jnp
imul
addr16
mov
scas
aad
pop
fsts
lret
pusha
cmpsb
test
adcb
mov
aad
jmp
cs
push
push
jbe
adc
clc
shrb
xor
sbb
stos
mov
popf
inc
mov
loop
inc
clc
outsb
push
in
dec
inc
cli
sub
stos
inc
popl
mov
lods
repnz
sub
cs
je
fisttpll
adc
lret
js
mov
adc
shrl
sub
ljmp
nop
popf
int3
inc
out
imul
std
mov
test
add
repz
xor
in
nop
mov
subb
mov
lds
mov
xor
shlb
dec
mov
into
or
mov
iret
xchg
push
jmp
fsub
sub
sub
rorl
pop
xchg
jne
decl
dec
out
loope
test
mov
ds
dec
andb
lds
stos
ja
jne
xchg
int
inc
add
push
aaa
mov
pop
out
push
jge
nop
xchg
call
inc
loope
mov
call
and
ss
vmread
mov
inc
push
in
rcll
cmpsl
shr
int3
scas
ljmp
and
and
pop
imull
xchg
jmp
inc
sar
fs
lock
int3
mov
cmp
mov
jecxz
in
fcompl
repnz
mov
jle
push
out
inc
sub
pop
sbb
nop
ret
cmp
cmp
and
jp
lods
sub
aam
jns
fbld
mov
sub
pop
mov
jg
sub
in
mov
adc
clc
adc
xor
mov
mov
mov
pop
idivb
adc
adcl
xchg
es
xor
or
sbb
fnstsw
cmp
or
xchg
das
jbe
inc
pop
adc
shrl
mov
lods
mov
xchg
cmp
or
sub
pop
sub
inc
inc
fs
and
scas
aaa
shll
cmp
js
mov
mov
mov
xchg
clc
mov
mov
xlat
xchg
xchg
cli
xor
mov
sub
mov
jo
packuswb
push
adc
sbb
mov
mov
jg
daa
sub
dec
lds
repz
push
push
mov
cmc
je
es
repnz
inc
ja
lret
jno,pt
mov
xor
adc
xchg
dec
mov
aaa
mov
push
addr16
xchg
push
xchg
addl
out
fdivrp
fwait
xor
adc
xchg
adc
xchg
push
xchg
adc
dec
xor
cmp
jbe
adcl
mov
subl
lret
inc
aas
fnsave
mov
jae
and
xchg
rclb
mov
mov
imul
lcall
movsl
push
shll
mov
stos
adc
jae
xor
push
jbe
jno
in
push
jno
sub
inc
jno
mov
dec
daa
movsl
enter
lds
call
mov
jae
dec
jbe
add
lods
imul
mov
lret
fsubp
enter
movsl
into
push
xchg
mov
aas
mov
jae
add
add
popa
xchg
in
lret
jne
pop
imul
stc
ficomps
and
pop
movsl
push
xor
mov
aaa
adc
jae
xchg
cmp
jbe
jle
aaa
pop
mov
and
push
mov
sarl
ds
notb
or
dec
outsl
or
nop
sbb
jne
adc
xor
int3
jle
nop
ret
clc
les
adc
pop
int
jne
repz
jl
lds
sub
lock
ret
std
cmc
jno
pop
loope
pop
nop
ss
clc
xchg
lcall
mov
xchg
and
mov
data16
out
dec
mov
inc
repz
xchg
mov
addr16
out
jmp
sahf
mov
adc
les
popf
mov
cmp
cs
push
xchg
mov
mov
inc
nop
jg
inc
rcrl
sub
vxorps
roll
outsw
dec
out
mov
jbe
and
aaa
mov
xchg
pop
rcr
push
aaa
lret
mov
sbb
jbe
xchg
pop
xchg
xor
mov
imul
push
mov
mov
or
xchg
sub
xchg
loop
push
xor
das
adc
xchg
loopne
scas
ret
mov
aas
sub
mov
cmp
push
or
push
push
fbstp
mov
ffree
aam
mov
shrb
pop
or
mov
ja
dec
mov
xchg
js
test
inc
lock
mov
xchg
in
inc
jno
divb
outsb
inc
mov
push
adc
mov
out
xchg
rolb
adc
int3
lahf
and
pop
iret
xchg
fisubrs
adc
andb
push
push
pop
pop
mov
ss
lret
mov
ja
icebp
testb
mov
cmpsl
inc
lret
aas
pop
movsl
ds
or
cmpsl
mov
call
add
or
out
mov
jg
xor
repnz
arpl
mov
dec
xchg
pop
xchg
push
mov
sbb
push
iret
stos
lret
jecxz
mov
sbb
xchg
add
stc
push
mov
sub
lahf
lea
pusha
inc
mov
inc
sub
or
jl
out
xchg
stc
inc
add
xor
lret
ja
les
cmp
cs
sbb
xor
mov
xchg
aaa
movsb
in
ja
jnp
mov
loope
lcall
out
movsbl
xchg
dec
ss
aas
lret
aaa
pusha
sbb
xchg
lcall
outsb
repz
sbbl
loopne
jl
aas
fsub
pop
aam
and
insb
shrl
xchg
xchg
sub
gs
xchg
scas
jnp
or
dec
mov
stc
fisttpll
leave
xchg
jo
sub
xchg
pop
mov
js
nop
les
sub
fmull
sub
xchg
fldl
divl
lock
enter
push
cmp
pushf
dec
add
push
xchg
inc
idiv
inc
and
out
xchg
jp
sbb
dec
sub
arpl
inc
ret
pop
out
sub
jge
xchg
popa
sbb
mov
pop
xor
mov
lcall
sub
xor
rcrl
and
xchg
dec
sbb
fs
lock
fistpll
fsubs
ficoml
test
in
nop
mov
movsb
sbb
adc
xor
push
cmpsb
pop
test
adc
and
iret
pop
xor
sbb
or
sub
stos
xchg
xor
push
mov
jmp
inc
and
movsb
in
sbb
mov
add
insl
adc
xor
mov
cvttps2pi
push
loopne
aas
lods
mov
es
mov
inc
xchg
filds
push
scas
push
add
cmp
fstpl
rcll
sbb
mov
scas
jne
jg
enter
inc
pushf
pop
js
push
ljmp
nop
mov
aam
cmc
js
fsts
inc
mov
sub
loopne
fcomp
xor
int
mov
mov
mov
notb
mov
mov
dec
pop
dec
call
std
or
dec
aad
cmpsl
outsb
xchg
dec
scas
and
or
xchg
push
mov
mov
sbb
cmp
xchg
xchg
int
xor
bound
call
outsb
xor
les
fisttpl
dec
outsl
lret
push
xorl
mov
movsl
pop
ds
dec
pop
sbb
scas
int
leave
adc
mov
sbb
mov
inc
pop
xchg
imul
add
filds
pop
inc
sahf
push
insb
and
mov
mov
pusha
sub
adc
aas
push
mov
mov
pop
jecxz
daa
mov
pop
cmpl
fs
test
xorl
jae
std
inc
js
lock
mov
cltd
or
jb
xchg
xor
mov
aam
jae
mov
pop
popf
jne
pusha
sahf
js
out
xchg
xchg
xor
push
test
dec
cmp
enter
cmc
and
inc
movsb
sbb
movsb
xchg
mov
outsl
lods
inc
xchg
ss
pop
jae
pop
mov
scas
cmp
sbb
sbb
sbb
mov
push
fidivrs
pop
xchg
jae
mov
nop
or
and
lret
push
mov
xchg
repnz
adc
addr16
testb
pop
and
call
mov
js
out
or
mov
notb
adc
sbb
ja
out
cmp
loope
fists
hlt
fdiv
shll
mov
scas
loope
push
stc
rcrl
dec
jge
add
ror
out
or
sub
ret
adc
cmpl
scas
cltd
fidivrs
fbld
aad
nop
rclb
jo
nop
gs
mov
lahf
aad
or
out
popa
dec
jg
dec
cmc
imul
test
jmp
out
jnp
xor
lods
sbb
mov
pusha
ret
adc
sub
mov
mov
sbb
mov
ja
push
push
xor
mov
sub
inc
aad
imul
jne
mov
jecxz
inc
and
ds
push
and
iret
jmp
insl
adc
mov
in
daa
xor
in
sarl
mov
jbe
pop
dec
sub
aaa
mov
fs
rcrl
in
scas
lret
or
das
fcoml
popf
inc
adc
js
scas
mov
push
xor
cmpsl
inc
xchg
xchg
mov
into
push
scas
sub
dec
aad
push
xchg
cmp
pop
pop
stos
movsl
je
shll
cmp
dec
in
mov
loopne
push
pop
pop
gs
int
mov
lods
cmpsl
mov
xchg
cmpsb
inc
push
ja
push
jl
and
stos
iret
ss
mov
jmp
jnp
rcl
xor
rcll
subl
mov
sub
xorb
lods
xor
xchg
dec
inc
out
adc
and
jecxz
in
sub
dec
gs
xchg
iret
maxps
mov
xor
stc
push
add
push
lods
nop
sub
cmp
cmp
pop
jg
sub
scas
inc
sbb
clc
adc
inc
cmp
xchg
mov
push
stos
xchg
mov
jecxz
inc
mov
mov
out
test
sbb
add
repnz
sarb
sub
ss
sbb
js
mov
jl
stos
or
jecxz
mov
es
rol
div
jge
scas
push
cmp
xor
sbb
cmpl
nop
inc
arpl
pop
lret
outsb
mov
rol
aad
arpl
out
repnz
into
scas
add
add
inc
lret
mov
mov
std
pop
cmp
xor
ljmp
push
adc
cmp
add
andps
jmp
add
mov
fildll
imul
repz
arpl
je
fs
mov
ds
push
popf
jnp
xor
cld
cli
xor
lds
negl
dec
cmp
adc
test
xchg
push
lret
fnsave
fistpl
mov
inc
mov
pop
mov
cmp
ja
xor
nop
push
dec
iret
add
sub
sub
mov
push
and
lea
ja
stos
int
mov
sub
mov
jnp
xchg
fdivp
push
inc
mov
adc
mov
dec
push
and
sbb
sahf
push
sbb
sbb
inc
inc
out
xor
aaa
mov
lds
sbb
leave
in
mov
mov
mov
mov
mov
cmp
loop
mov
dec
xchg
jg
inc
scas
shlb
jbe
cld
sub
mov
stos
loope
xchg
jnp
mov
xchg
js
ss
rcll
push
jle
movsl
movsl
xor
xchg
push
mov
ss
test
sbb
es
cmp
aas
xchg
std
test
aad
movsl
xchg
push
lds
mov
jnp
xor
pop
xchg
or
push
cmp
or
adc
mov
loopne
jle
in
mov
jl
xchg
sahf
decb
mov
dec
mov
cmovge
push
cmpb
out
push
lods
gs
sbb
mov
sbb
sub
pop
outsl
outsl
pop
inc
loop
ja
pusha
cmpl
js
scas
rorb
addl
sub
insb
adc
and
call
js
xchg
aad
fsubrl
ja
lods
in
push
or
fdivrs
fistl
pushf
shrl
repnz
pop
aam
mov
jg
mov
dec
rcr
mov
xchg
movsl
aad
push
enter
fisttpl
daa
inc
inc
ret
push
js
sbb
gs
add
pop
xor
call
adc
jno
and
stos
push
sub
js
loopne
mov
or
pop
sub
sbb
icebp
jg
pop
jecxz
or
dec
jge
jmp
idivl
mov
fcompl
sub
cld
pusha
or
push
adc
jb
scas
sbb
loopne
mov
leave
inc
xchg
adc
aad
leave
ficoml
pop
and
mov
iret
shl
sbb
mov
lods
call
mov
mov
test
xor
rcll
sub
inc
and
dec
push
sub
push
movl
mov
cmc
inc
scas
icebp
mov
out
hlt
adc
xchg
int
mov
jle
aas
test
rcrl
jne
dec
or
lahf
dec
rcl
jmp
data16
aaa
add
lds
int
mov
xchg
insb
movsb
inc
xchg
hlt
inc
mov
mov
jae
sbb
push
inc
dec
jge
fucomip
push
sub
test
cmp
jp
xchg
mov
das
cld
xor
xchg
xchg
js
inc
lds
dec
jge
ds
or
mov
push
jmp
jecxz
sbb
or
lods
xor
scas
out
sub
push
ret
mov
cmp
inc
bound
nop
pop
lea
scas
xor
aad
and
das
mov
mov
mov
in
mov
faddl
mov
pop
xor
pusha
jg
mov
jg
sub
mov
xor
pop
dec
gs
inc
cli
inc
add
sahf
xor
and
les
mov
adc
pop
mov
out
out
std
sbb
inc
and
fsubrp
testb
dec
xchg
std
and
out
mov
adc
pop
shrl
xchg
stc
mov
xor
int3
and
pop
lock
ror
inc
fs
cmp
sysenter
xor
and
repnz
iret
xor
adcl
xchg
sahf
pop
add
xchg
mov
inc
dec
xor
mov
loop
jge
jnp
scas
xor
scas
pop
test
std
push
inc
sub
mov
push
mov
inc
jbe
cmc
pop
xchg
mov
enter
pop
andl
shrl
js
push
fsubrs
add
out
das
xchg
outsl
jl
xor
loopne
into
adc
jg
rclb
sahf
mov
ficoms
ret
fcmovnbe
fs
stc
scas
out
cli
shrb
dec
push
mov
adc
jl
call
pop
js
dec
mov
mov
rcrb
mov
mov
adc
inc
ljmp
sti
mov
clc
mov
lds
jnp
aas
lods
mov
mov
lahf
cs
jae
in
dec
mov
jo
pop
sbb
xchg
push
js
mov
ja
xchg
repz
xchg
aaa
dec
cmpl
or
aaa
pop
dec
pop
ja
jmp
repz
stc
dec
aas
sub
add
out
mov
inc
addr16
inc
aad
mov
rcll
push
dec
adc
outsl
xchg
lret
fisubrs
rol
jae
xchg
inc
stc
aaa
btc
add
xor
inc
adc
shlb
js
dec
pop
jmp
sub
ljmp
mov
or
leave
pop
pop
adc
mov
xor
add
push
jecxz
inc
inc
test
fwait
aaa
dec
imul
cwtl
sub
fnsave
mov
cmc
imul
iret
jecxz
add
and
mov
jge
std
mov
cmp
stc
jnp
aad
imul
mov
ror
hlt
adc
xchg
ret
and
jecxz
das
imul
repnz
mov
add
js
xchg
fnstsw
icebp
jae
mov
sub
data16
inc
clc
inc
dec
dec
and
sbb
lcall
xor
fnstsw
enter
mov
es
xchg
jge
std
loopne
jnp
movsb
push
jbe
mov
push
std
and
scas
std
outsl
add
popa
lds
dec
arpl
push
xchg
aad
call
cmp
das
and
xor
jne
mov
cmpsb
dec
add
xor
jge
fidivs
dec
int
xchg
dec
sbb
or
jb
gs
cmp
inc
pop
sub
push
pop
lret
and
mov
jmp
and
push
or
mov
sub
addl
pop
out
sbb
jmp
ret
addr16
aam
push
shlb
mov
scas
cmpsb
into
add
xor
sbb
push
adc
adc
sub
inc
outsb
lret
dec
aaa
lock
repz
jo
fsts
pop
mov
dec
fistl
fbld
dec
ds
xchg
pop
lret
xor
outsl
mov
add
adc
mov
rorl
xchg
iret
mov
inc
sub
ret
xor
and
aas
aaa
cwtl
add
cli
inc
and
jno
mov
shll
mov
mov
mov
mov
xorb
out
cmpsl
outsl
ret
push
std
scas
mov
and
jge
xchg
aaa
dec
pop
mov
inc
in
stos
jecxz
out
xor
mov
stos
mov
dec
imul
jg
mov
leave
or
jmp
addr16
xchg
jg
push
pop
js
outsl
rolb
xor
and
cmp
lret
out
adc
xchg
cmp
fdivrl
std
xor
mov
idivl
inc
cwtl
lahf
dec
sub
jnp
sub
xchg
sahf
das
or
ss
or
sti
xchg
sarb
mov
cmpsb
xchg
pusha
push
addr16
push
dec
icebp
cmc
adc
fstpt
adc
gs
lret
sti
mov
xor
test
mov
add
mov
xor
repz
mov
pop
push
xor
jae
mov
ret
jg
test
pop
pop
mov
mov
dec
mov
std
enter
jnp
pop
push
jg
xor
dec
mov
adc
int3
push
int3
jne
popa
sub
jne
test
je
dec
enter
sbb
xor
jle
fimuls
in
fsubp
gs
cwtl
in
xchg
test
cmp
int3
mov
jle
test
mov
xlat
xor
hlt
std
xchg
mov
out
sub
sbb
mov
into
jg
js
jbe
das
inc
xchg
jbe
mov
jl
mov
or
inc
je
cmpsl
add
push
xchg
jmp
or
or
xchg
or
stos
xor
aaa
lods
xor
xor
mov
dec
mov
loop
mov
cmpsl
mov
jg
jmp
shll
scas
mov
cmp
pop
std
jg
push
jecxz
repz
js
pop
mov
outsl
imul
into
sub
imul
bound
mov
jbe
aad
jg
inc
xchg
test
fdivl
or
sub
or
iret
int
inc
imull
mov
or
in
pop
cmpsb
std
out
push
pusha
mov
push
jno
mov
imul
pop
je
outsl
adc
jle
hlt
cmp
mov
adc
scas
mov
loopne
mov
mov
into
in
jg
xchg
mov
or
push
mov
mov
stc
mov
mov
movsl
push
xor
test
mov
bound
movsl
stos
xchg
das
repnz
movb
push
add
and
jmp
mov
mulb
scas
mov
mov
popa
cmp
fmull
sbb
push
mov
mov
mov
jnp
mov
push
imul
push
test
leave
cwtl
adc
test
inc
into
push
not
mov
subl
push
inc
mov
xchg
push
mov
cmp
push
sahf
xchg
sbb
dec
negl
aad
push
das
or
dec
mov
nop
aad
das
scas
ret
outsb
lock
leave
jbe
jnp
adc
icebp
and
int
movsb
test
add
mov
sub
dec
mov
andl
mov
xor
xchg
repz
sub
adc
add
add
sbbb
into
push
push
movsb
mov
add
xor
pop
rcrl
imul
dec
lods
cmpb
int3
stos
inc
mov
or
hlt
add
out
ljmp
jb
adc
sbb
ss
lods
das
sub
adc
inc
arpl
or
mov
mov
cmp
daa
xor
iret
mov
lds
jle
mov
pop
repz
repnz
adc
pop
push
lods
cmpsl
fisttpl
jle
iret
jne
jmp
enter
mov
lock
xchg
fbstp
push
rorb
fnsave
push
idiv
aad
cld
jp
insb
inc
ja
dec
movsl
sbb
ja
adc
out
hlt
push
jae
lahf
fisttps
lret
into
lahf
adc
scas
or
movsb
pop
js
or
cmp
xchg
shlb
pop
push
xchg
sub
mov
xor
fwait
sub
es
out
mov
mov
push
outsl
rcr
mov
sub
jge
hlt
or
inc
jbe
jne
mov
sub
adc
mov
std
aad
sub
cmp
xorl
dec
addr16
je
notb
pusha
add
sbb
dec
icebp
leave
mov
mov
jb
dec
sti
jge
sti
add
imul
pop
aas
les
mov
push
les
pop
mov
mov
jbe
gs
mov
mov
sub
jl
push
bnd
fistpll
mov
js
xchg
push
mov
mov
mov
adc
xchg
jnp
pop
stos
inc
loopne
ss
push
jg
mov
hlt
std
pop
push
sub
mov
xchg
mov
mov
xchg
js
das
mov
stos
jbe
xchg
jnp
push
imul
dec
fidivl
aaa
cwtl
enter
js
and
lret
dec
add
rcrl
roll
mov
xchg
xor
cld
out
xor
jg
nop
lcall
jo
mov
rcrl
jb
and
popf
pop
lret
fnstcw
lret
inc
sub
lock
repnz
sub
cmc
sbb
jb
xor
js
enter
xorl
dec
sbb
ds
push
cs
mov
mov
insl
leave
mov
cmp
movsb
addr16
mov
cld
cmpsl
push
mov
in
dec
outsl
imul
sbb
outsb
cmp
jmp
xchg
push
fstpl
sub
shrb
cmp
sahf
fisttpl
outsl
xor
xor
mov
leave
fwait
mov
out
lods
cwtl
rcrl
push
mov
clc
jmp
mov
mov
bound
or
fucomip
scas
imul
add
lds
push
add
mov
push
and
jecxz
testb
push
sahf
lock
add
std
int
and
scas
xchg
inc
fwait
sbb
js
xchg
aas
pop
sub
pop
sbb
mov
inc
mov
test
cmp
mov
out
shl
adc
add
sbb
xchg
std
ja
ja
xchg
sub
xlat
pop
and
push
inc
ror
adc
mov
aas
cltd
aad
pop
sub
filds
call
fistps
mov
sub
add
mov
push
int3
fidivrl
jecxz
push
test
aam
aas
cltd
jle
mov
mov
sar
jbe
mov
push
jnp
dec
popa
push
jns
iret
pop
push
fdivl
sahf
pop
or
data16
push
outsb
inc
xchg
xcrypt-cfb
cmpsl
movsl
rcll
adc
rol
cmp
cmc
jnp
cmpl
cmp
cmp
cmpsb
cs
adc
shlb
inc
inc
mov
sbb
mov
outsl
mov
fisubrs
xchg
mov
dec
sbb
ja
ja
mov
dec
lods
pop
js
jnp
dec
xchg
std
mov
sbb
mov
std
out
jl
imul
or
push
ret
pop
xor
iret
adc
fcompl
push
cmp
jg
nop
xchg
adc
jbe
notl
adc
int3
out
xchg
xor
mov
inc
or
ljmp
fwait
imull
mov
mov
scas
std
xchg
cmp
mov
std
js
imul
push
sub
cmpsl
sahf
popf
ja
leave
aad
aaa
jo
inc
mov
add
add
ss
stos
fisttps
mov
inc
push
xor
add
and
cmp
xor
xchg
imul
sahf
sbb
sar
and
scas
lds
or
inc
pop
imul
into
imul
xlat
mov
mov
arpl
mov
pop
sbb
in
pop
mov
mov
in
popa
mov
xlat
cmp
clc
sub
gs
adc
xor
movsl
js
fidivs
jbe
scas
pop
movb
inc
push
sub
repnz
leave
mov
cmp
nop
jmp
sbb
and
fsts
cs
in
adc
leave
sub
pop
adc
mov
or
rorl
xchg
push
sarl
xlat
sahf
sarl
lods
rorb
js
mov
mov
push
daa
mov
test
dec
push
xchg
daa
sbb
imul
mov
mov
into
xchg
mov
and
mov
jge
rcrb
std
insl
aaa
imul
pop
and
inc
rolb
lahf
xchg
xchg
iret
pop
xor
aam
lods
mov
jae
push
jge
rcrb
adc
xchg
rcll
mov
mov
cmp
sbbl
sbb
das
mov
sahf
jbe
cmp
out
mov
cmpsl
movsb
lahf
aad
cmc
mov
jp
pop
push
mov
jmp
gs
and
gs
inc
popa
inc
xchg
inc
div
cli
pop
push
jne
xchg
sub
pop
dec
or
inc
bound
xor
dec
outsl
repz
xchg
nop
lods
and
lds
stos
sbb
dec
ds
cmc
insl
cmp
insb
jne
and
mov
aam
pop
inc
nop
sub
mov
ja
fisttps
ss
sbb
das
in
dec
test
roll
inc
das
loope
mov
fcomps
mov
xchg
pop
les
stos
scas
cmp
pop
lret
mov
sbb
sub
jo
mov
jle
shlb
mov
insl
into
jnp
push
jo
push
call
lahf
pop
flds
push
add
pushl
divl
jle
shll
repz
xchg
fistl
mov
sub
ljmp
leave
xchg
fisubrs
xlat
lds
adc
clc
fists
dec
test
cmpsl
xchg
adc
lock
lea
sbb
cmpsl
pop
xor
xchg
aad
xchg
xor
dec
xchg
testl
fnsave
out
dec
xor
xchg
jnp
sarl
ret
mov
or
lds
incl
pop
and
fdivrl
in
fldt
mov
jnp
pop
loope
stc
shll
js
in
add
xchg
dec
adc
fiadds
leave
mov
pop
std
push
mov
push
dec
icebp
xor
je
dec
xchg
xchg
mov
loopne
xchg
or
inc
adc
push
pop
out
es
popf
jecxz
ss
mov
inc
lods
xchg
mov
lahf
lods
mov
dec
and
aam
push
add
jo
and
cltd
dec
dec
mov
insb
xadd
pop
mov
cmp
pop
add
addl
inc
adc
push
es
nop
fstpt
cmp
mov
stos
out
iret
movsb
sbb
ret
ror
rcll
and
dec
out
scas
pusha
fmul
ficoml
pop
ljmp
xchg
jbe
ss
shll
gs
xor
movsl
mov
inc
cwtl
mov
push
sarl
aad
rol
jmp
mov
sarb
imul
sahf
mov
or
xchg
cs
sub
stos
xchg
push
sbb
pop
fmull
push
iret
jmp
xchg
jecxz
iret
cmpl
pop
add
xor
push
stos
cmc
mov
sbb
xchg
es
int3
jecxz
mov
lret
mov
mov
xchg
cld
rcrl
xchg
jle
jg
pop
pop
dec
nop
push
cmp
cwtl
mov
xchg
in
jo
fmulp
xchg
mov
scas
flds
addr16
pushf
mov
call
cs
sub
dec
xchg
lret
adc
mov
pushf
push
nop
addb
mov
int3
push
xor
sti
xor
cmpsb
or
xor
push
xchg
cmc
insl
xor
aad
jne
or
inc
add
mov
xor
push
call
addr16
stos
mov
push
or
and
mov
pop
movsl
stos
iret
popf
clc
jg
nop
cmp
sub
sahf
mov
je
scas
sbb
lock
mov
sahf
ret
sbb
mov
mov
cmp
iret
ret
push
sahf
js
sub
iret
pop
ret
gs
mov
sub
xchg
xchg
xor
fimull
sysenter
hlt
adcl
mov
mov
aas
xchg
js
sbbl
in
sub
das
xchg
mov
aas
popl
xchg
leave
xchg
es
dec
cmp
mov
jae
aad
or
mov
std
dec
pop
xchg
xor
outsl
aad
lods
mov
xchg
or
js
test
loop
inc
into
rcll
push
jno
xchg
ds
rolb
xor
sarb
ror
cmp
aas
cltd
loop
int3
in
ror
add
lods
push
sub
dec
shl
sub
sbb
ret
or
lea
xor
inc
imul
adc
sti
jg
mov
lock
test
adc
aas
sbb
ljmp
xor
push
push
repz
add
pop
mov
subb
inc
mov
test
or
push
jecxz
inc
push
in
jno
xor
xchg
pop
js
imul
insl
xbegin
xor
push
push
sub
adc
into
mov
bound
xchg
fwait
ds
jnp
mull
mov
cltd
iret
sub
js
mov
lahf
xor
mov
iret
sbb
js
cmpsl
push
inc
ja
inc
pusha
add
xchg
pop
rolb
xchg
subb
adc
xor
cli
add
inc
mov
adcl
jge
js
jns
push
mov
std
out
stos
mov
test
mov
rcll
cmpsb
inc
imul
nop
js
in
cltd
xor
das
mov
aaa
xor
mov
xchg
mov
push
outsl
call
add
pop
lods
sahf
testb
push
nop
in
outsb
adc
roll
mov
xchg
popf
xchg
cmp
cmp
or
xlat
ja
lea
cld
sbbl
jnp
aad
js
mov
inc
sarl
adc
andb
rcr
mov
inc
xchg
jmp
adc
mov
aaa
nop
jb
in
or
into
jg
mov
jge
inc
lods
cmpsb
std
add
push
sarb
cmpsl
sbb
xchg
push
mov
cmpsb
push
xchg
pop
rolb
push
addr16
in
mov
outsl
xchg
fs
int
pop
dec
testl
out
adc
stos
mov
sub
jecxz
and
test
leave
mov
sbbl
in
mov
loope
out
iret
mov
mov
lret
xchg
mov
inc
and
outsl
cmpsl
nop
push
adc
das
outsl
pop
jg
lock
stos
in
xchg
nop
xchg
push
ljmp
nop
mov
jecxz
or
movsl
outsl
aad
das
and
ss
pop
fcom
xchg
or
xchg
cmp
ja
dec
sbb
aad
rorl
mov
xchg
int3
icebp
dec
xchg
stc
push
jle
push
push
cmc
fs
jmp
sub
fcoml
add
mov
lret
jmp
pop
cmpsl
call
xchg
sub
addr16
fists
mov
or
xor
jo
push
push
into
faddl
pop
sti
mov
xchg
inc
and
subb
push
push
scas
sub
out
mov
fadd
sbb
mov
xchg
es
cwtl
sub
jg
push
cs
dec
rolb
les
movsl
std
ret
jae
outsb
cld
and
iret
inc
pop
adc
xchg
mov
and
aad
leave
fldenv
call
jmp
es
out
dec
sub
inc
imul
xchg
outsl
sbb
push
jbe
xchg
pusha
test
jnp
mov
rol
call
or
pop
sub
push
or
enter
jmp
mov
jne
xor
jge
xlat
mov
shll
les
adc
jecxz
mov
ja
mov
xchg
mov
jbe
mov
sbb
iret
int
xchg
pop
test
scas
in
fdivs
mov
jae
out
out
aam
jg
js
mov
fisttps
sbb
call
cmpsb
xchg
into
push
jns
mov
inc
cmpsl
shl
sbb
shlb
loop
mov
adc
mov
inc
add
decb
fistpll
pop
sbb
sbb
imulb
mov
or
fisubl
push
push
jnp
adc
push
mov
rorb
dec
push
fidivs
mov
test
dec
inc
pop
pop
dec
push
cmp
push
cmova
mov
mov
out
andl
je
mov
mov
xchg
out
enter
inc
sub
lds
sahf
adc
ret
cmp
rolb
fsubrs
loop
mov
pusha
sub
into
stos
sub
lret
mov
js
cmp
xchg
lods
sbb
iret
mov
mov
xchg
and
xchg
fists
pop
shll
mov
js
adc
sbb
test
cmpsl
dec
fsubl
jo
sbb
les
inc
add
inc
pusha
shl
scas
ret
dec
or
nop
mov
mov
push
ja
mov
rcl
xor
addr16
push
and
out
sbb
mov
icebp
add
call
popf
out
fadd
pop
mov
mov
in
in
xchg
jmp
in
movsl
ds
scas
jne
push
out
xchg
js
pop
out
es
ja
out
imul
fcoml
fidivl
sahf
movsl
inc
sub
and
je
push
sbb
xchg
mov
mov
icebp
in
icebp
insl
int
shr
in
jg
pop
xor
jcxz
inc
or
dec
pop
ja
xchg
xor
lea
add
adc
js
mov
or
jle
mov
testb
ret
mov
xor
push
mov
sti
pop
push
cmp
lds
pop
mov
sbb
popa
pop
andl
iret
push
mov
mov
xchg
lock
movsb
pop
xchg
pop
in
loope
xchg
xchg
jbe
aad
adc
mov
arpl
mov
mov
orl
dec
pop
mov
mov
mov
in
jo
outsb
xchg
xchg
push
mov
es
jle
imul
out
test
xchg
ljmp
push
cmpsb
jle
insl
pop
sub
outsl
sbb
push
cmpsl
andb
stos
addb
inc
lods
in
dec
inc
fcoml
std
mov
je
sbb
sbbb
into
mov
push
add
in
fwait
mov
das
jnp
movsb
mov
xchg
shl
xchg
xchg
cmpsl
xchg
sbb
sub
js
cld
aad
lods
mov
out
inc
xchg
push
push
and
mov
int3
subb
sub
mov
or
test
outsb
dec
loop
sub
sbb
jg
xchg
adc
sarb
in
lds
xchg
movsb
mov
and
insl
das
pop
push
jno
cmpsb
push
mov
cmc
out
push
pop
loope
xchg
scas
push
xor
test
sub
je
sbbl
addb
ds
lods
jne
loop
add
pop
adc
inc
cs
mov
dec
xor
sbb
fldl
cmpl
mov
push
les
cmpsl
rcr
in
push
lcall
mov
pushf
test
push
and
lock
iret
js
dec
addr16
scas
jnp
pop
call
lods
mov
pop
pop
push
std
xor
popa
push
adc
xor
into
mov
push
scas
test
daa
cs
aaa
std
push
cs
int3
xlat
test
mov
sbb
fsts
leave
stos
test
pop
mov
test
js
xchg
repnz
lods
call
jmp
sti
aam
fucomp
orb
lcall
jns
lahf
cmc
addr16
popf
and
or
fucomp
jae
rorl
es
popf
push
dec
cmp
mov
roll
mov
into
ds
inc
cmpsl
push
jle
inc
movsl
jnp
shrl
push
jne
repnz
lds
pop
inc
mov
xchg
adcl
adc
js
cli
jo
or
mov
stos
mov
sub
xor
push
push
pop
jo
mov
test
xchg
or
mov
das
jl
fdivl
jnp
inc
test
jns
aam
in
nop
push
cmp
test
mov
bnd
stos
dec
xor
push
pop
sub
jno
xorb
xor
xchg
lods
xchg
jbe
jge
push
outsl
cmp
pop
jb
mov
or
imul
out
rorl
pop
js
aaa
scas
icebp
mov
xor
cmp
hlt
xchg
jge
mov
mov
add
push
fcmovnb
mov
inc
aaa
cmpsb
mov
inc
mov
mov
add
cmp
jo
data16
mov
mov
mov
sbb
mov
mov
mov
or
pop
aad
sahf
xor
push
outsl
ret
pop
sub
adc
lock
or
cmp
jg
and
cmp
addr16
push
pop
xchg
sub
adc
push
jmp
push
xchg
mov
push
in
push
adc
adc
aam
dec
lret
imul
dec
mov
xorb
pop
mov
fdivl
push
push
lock
cmc
insl
jns
std
dec
pop
jecxz
or
mov
lods
pop
dec
inc
mov
push
and
and
and
xchg
je
cwtl
mov
cmc
fists
inc
sub
mov
mov
lret
imul
push
icebp
loopne
adc
cld
xor
sbb
lds
hlt
sbb
jno
push
add
stos
int
push
fs
adc
inc
mov
lock
push
in
imul
bound
adc
lds
or
mov
xlat
mov
decl
cmpsb
aaa
mov
sbb
push
xchg
scas
xchg
ficoml
push
sti
loopne
fsubrs
aam
divl
in
mov
push
or
scas
xchg
cwtl
cmpl
cmpsb
imul
xchg
pop
cmp
std
mov
jno
std
xor
jb
inc
nop
int
push
push
and
out
xchg
sub
imul
out
push
inc
mov
aas
in
pop
into
outsl
filds
xchg
or
mov
inc
cmp
sbb
ret
xor
jmp
mov
sbb
push
push
cmpsl
nop
fidivrl
ret
leave
fsubr
adc
cwtl
sub
hlt
rclb
and
iret
stos
inc
mov
rol
lahf
lds
jp
mov
cmp
movsl
aaa
into
mov
out
cmp
scas
dec
js
arpl
adc
sbb
lods
orb
out
inc
pop
push
sarb
ja
andl
sahf
movsl
pop
push
mov
fistl
push
int
sub
push
inc
inc
jnp
leave
xor
aad
cmp
push
xchg
mov
or
fstpt
push
xchg
ret
stos
bound
out
pusha
pop
and
push
in
dec
adc
xchg
mov
mov
sbb
jo
add
shlb
lock
sbb
fcompl
mov
sar
sub
jg
in
pop
sub
sub
inc
cld
xchg
movsb
sbb
push
xchg
iret
sbb
aam
xchg
jno
addr16
pop
lea
jg
sub
js
cmp
es
jb
pop
bts
mov
fwait
adc
xor
outsl
test
jb
addl
std
xor
cmpb
xchg
repz
fsubl
idivl
fdivl
inc
sbb
and
pusha
imul
nop
sub
xorb
test
fistpll
scas
lret
sub
mov
daa
and
and
pop
push
sub
jg
and
xchg
xor
adc
iret
pop
mov
scas
lret
ret
lahf
push
mov
outsb
mov
sti
xchg
fld
push
in
pop
xor
arpl
repnz
movsl
pop
pop
aad
bound
sub
sub
push
mov
or
cli
mov
fs
jmp
cld
nop
push
dec
mov
shlb
and
push
jle
xchg
pusha
pop
xchg
iret
imul
or
push
aaa
xchg
addr16
test
and
add
sbb
xor
xchg
fiadds
mov
mov
mov
dec
addr16
xor
jae
adc
sbb
mov
sub
ss
mov
aad
ffreep
jcxz
movsl
nop
add
aad
imul
jb
inc
fsts
and
rorl
push
ss
adc
imul
xchg
dec
mov
inc
xchg
sbb
mov
outsl
out
mov
fwait
leave
lea
iret
imul
lret
sub
cs
jle
inc
add
pop
pop
nop
scas
imul
andb
jecxz
sbb
xchg
xor
daa
cmpsb
push
ret
mov
pop
mov
push
sarb
or
mov
adc
imul
out
ss
adc
nop
or
in
lods
out
int3
out
movsb
mov
xor
mov
cmp
aaa
jnp
hlt
fsubrl
cmp
gs
sti
iret
add
das
lret
xchg
dec
mov
and
das
mov
int
dec
push
mov
pop
mov
mov
or
ret
xor
imul
mov
outsb
jnp
inc
cmp
cmp
jmp
sub
dec
jne
ja
sbb
xor
sbb
ret
mov
aam
lods
mov
rorb
push
mov
or
addl
aas
lret
int
inc
add
bnd
ss
jle
push
aas
dec
shlb
test
call
xor
outsb
nop
es
adc
pop
lds
lods
mov
idivb
push
inc
mov
and
int
xchg
jmp
cmp
testb
fs
xor
js
hlt
outsb
je
mov
iret
fdivrs
push
jnp
mov
jge
push
sbb
xor
push
mov
fstpt
test
mov
dec
sahf
mov
jle
cmp
cli
imul
sbb
mov
idiv
aad
mov
stos
ret
fsts
nop
xorl
mov
ret
icebp
mov
dec
int
aaa
push
lahf
js
mov
test
stc
ret
sbb
or
std
testl
imul
sahf
gs
push
movsl
aaa
std
scas
push
nop
emms
xchg
push
adc
cmp
inc
inc
in
jno
mov
decb
xchg
push
out
or
notb
das
mov
sbb
mov
mov
mov
sbb
push
rcl
addr16
rcl
scas
add
test
scas
adc
xor
das
ret
aas
inc
mov
lret
rorb
jle
sbb
add
call
xchg
gs
in
out
inc
call
mov
sti
aam
jnp
jo
addr16
lret
push
gs
push
push
jmp
subw
roll
mov
int
and
pop
jo
ljmp
fildl
jecxz
xchg
test
xor
cmpsl
hlt
cmpsl
sub
nop
leave
mov
sub
adc
scas
push
cmp
leave
js
stos
negb
movsb
inc
repnz
pop
sbb
bound
es
add
aaa
rolb
lods
les
add
in
js
inc
jg
mov
shr
mov
ss
jb
cmpsl
ja
adc
out
test
push
scas
bnd
mov
std
sub
jnp
lahf
jle
mov
das
or
addr16
pop
mov
pop
scas
scas
sub
and
aad
jnp
push
lret
dec
push
mov
std
popa
jecxz
mov
orb
stos
mov
shll
jmp
iret
sub
lds
push
data16
jno
xchg
adc
out
dec
inc
push
mov
sub
cmpsl
sub
std
lret
das
lds
aad
hlt
cmpsb
nop
lea
aad
std
shl
int3
pop
int
aas
cmpsb
movsl
and
pop
mov
pop
lds
das
adc
mov
pop
mov
shlb
push
mov
xchg
es
mov
pop
lret
inc
push
outsb
fists
into
sbb
mov
dec
scas
dec
cmp
or
gs
rolb
js
inc
out
and
pop
sub
popa
ja
push
mov
aaa
jg
cmpsb
pop
sub
in
in
ficoml
sub
sub
push
push
dec
push
scas
and
repnz
sbb
scas
xor
test
inc
cmp
ja
testl
inc
iret
pop
xor
jge
adc
jnp
add
fxtract
push
lds
jmp
fidivrs
unpcklps
push
and
mov
sarl
ficomps
xor
std
imul
jae
fsubrl
cld
add
dec
and
jg
popf
adc
mov
iret
mov
imul
jnp
add
sbb
jo
loopne
inc
faddp
daa
jne
outsl
adc
js
xchg
mov
mov
ja
jg
sub
jg
arpl
shl
push
mov
fildll
and
push
sar
out
and
mull
mov
fbstp
int
pop
jae
xchg
add
dec
or
std
mov
in
scas
push
icebp
and
inc
notl
mov
fsubrl
mov
lods
loopw
jbe
scas
fisttps
adc
aas
dec
nop
lret
insl
imull
jne
gs
jge
xor
xor
adc
lret
or
add
in
cli
sub
cmpl
aaa
push
sub
movsl
nop
out
jmp
dec
imul
add
mov
pop
in
subb
scas
pop
push
bound
insl
or
cmc
cmp
fimuls
rcl
cmp
nop
sti
pop
icebp
dec
gs
ret
movsb
das
aad
pop
popf
mov
scas
pop
mov
pusha
inc
cwtl
mov
lret
add
ljmp
in
xor
sub
mov
sub
mov
ret
jge
inc
add
xchg
stos
rorl
ljmp
sbb
addb
scas
enter
iret
rclb
std
leave
jecxz
test
fists
add
jp
aaa
inc
jle
pop
test
and
mov
iret
into
cmpsl
test
mov
stc
imul
sahf
in
mov
mov
or
mov
ja
mov
jmp
xchg
cld
push
jne
or
and
inc
or
lds
xorl
add
mov
popa
adc
loopne
sub
xchg
gs
sarb
adc
out
cld
ljmp
aad
repz
jp
sub
inc
js
pushf
pop
mov
mov
or
rol
mov
pop
dec
das
imul
xchg
xchg
or
jecxz
jge
sub
or
adc
xor
imul
out
mov
iret
shrl
or
xor
ds
and
dec
lea
mov
scas
adc
orb
sbb
pop
fidivrs
insb
iret
jge
xchg
adc
jle
pop
stos
mov
jmp
out
lods
mov
cmc
mov
adc
fnstsw
xor
dec
and
aas
enter
jge
xor
les
xor
mov
popf
std
fisubrs
xchg
pop
xchg
in
push
insb
xchg
jnp
insl
aaa
cmp
mov
inc
sbb
scas
leave
cld
sbb
aad
mov
fwait
dec
push
icebp
inc
leave
mov
push
pop
xor
sbb
hlt
mov
xor
jg
pop
adc
pop
outsl
add
sahf
sub
pop
xchg
mov
sub
pop
mov
je
adc
mov
mov
mov
cmp
jbe
pushf
cmc
je
cmp
dec
jae
and
inc
shrl
mov
mov
stos
out
sub
mov
sbb
movsb
test
xor
cmpsl
push
pop
push
neg
out
pop
out
jp
lahf
outsb
loope
int
dec
test
daa
xchg
push
aad
or
sub
pop
push
push
cltd
push
repz
sti
arpl
jp
call
in
jo
js
out
jne
fwait
pop
ffreep
mov
inc
nop
loopne
je
ljmp
clc
add
inc
jnp
stos
ljmp
or
sub
in
push
push
das
imull
pop
daa
xor
lea
sbb
fnstenv
sub
in
xor
mov
push
adc
push
out
lret
lds
fistl
aam
mov
pushw
mov
loope
rcr
out
rcrb
xor
scas
push
xchg
push
or
data16
enter
mov
xor
xor
in
xor
adc
movsb
ja
js
gs
sub
das
push
xlat
dec
jg
xchg
mov
call
mov
mov
xlat
js
jg
imul
rcl
lret
cltd
push
mov
js
dec
jg
pop
mov
xchg
xchg
add
ret
and
aad
std
xchg
mull
adc
and
sbb
and
aas
aas
add
xchg
sti
lahf
add
test
mov
cmpsl
fnstcw
les
sbb
xor
cld
jb
pop
dec
xchg
into
add
cmp
ljmp
shlb
call
jo
and
push
mov
lds
inc
std
ret
mov
mov
ffreep
sub
stos
mov
data16
in
push
and
add
lea
mov
scas
mov
sbb
aam
pop
xchg
push
mov
xlat
push
sub
sbb
push
sti
shrl
in
dec
bound
mov
xchg
int3
mov
push
xchg
push
xchg
mov
push
cltd
scas
imul
mov
aaa
out
cmp
xor
cmp
push
in
testb
mov
xor
sar
dec
pop
and
xchg
movsl
lcall
ljmp
imul
adc
es
ss
call
jmp
stc
ficoms
aaa
je
adc
inc
mov
push
adc
xchg
cmpps
push
repnz
push
inc
in
push
in
mov
jbe
push
cmp
adc
add
ficoms
and
aad
mov
mov
mov
sub
ljmp
pop
mov
rorb
dec
scas
test
cmpsb
mov
ret
push
pop
or
mov
daa
cmp
daa
imul
das
inc
sub
sbb
adc
sub
shl
les
hlt
aaa
movsl
or
jb
mov
xchg
and
shrb
cmp
xchg
pop
lcall
in
and
int3
fwait
mov
pushl
push
jne
add
je
mov
xor
popf
xor
push
rcrl
pop
test
sahf
xor
add
mov
aad
dec
lea
ja
cmp
in
xorb
rcrl
pop
iret
mov
mov
andb
lret
testb
addr16
fwait
mov
pop
rolb
sub
ds
cld
in
push
hlt
add
ss
dec
mov
xor
push
sub
shlb
cmpsl
aad
mov
adc
mov
jg
rolb
outsl
sub
daa
popf
js
mov
xlat
test
add
dec
cmpsl
xchg
push
sar
adc
ja
xchg
fistpl
dec
push
jle
iret
scas
dec
movsl
pop
inc
cmp
xor
mov
addr16
daa
xor
xchg
inc
xchg
mov
js
pop
pop
into
ss
loop
mov
aaa
stos
jecxz
jge
stc
mov
cmp
orl
outsb
shlb
push
aad
mov
pop
mov
jecxz
ja
idiv
mov
push
mov
rcrb
enter
pop
mov
fists
sqrtps
xor
sub
into
out
push
in
jbe
xor
ret
push
cmp
inc
pop
ljmp
jo
shlb
sbb
ja
cmp
fldcw
mov
in
inc
addr16
xchg
inc
jg
aad
mov
repnz
sbb
lock
pop
sbb
dec
ret
push
notb
nop
popf
inc
or
xor
xchg
outsb
inc
iret
dec
mov
lret
ss
sahf
sbb
sbb
jae
cmpsb
jb
lea
mov
push
pop
test
rol
imul
push
mov
xchg
fisttpl
pop
mov
out
pop
sub
mov
js
and
sub
add
stc
jecxz
je
shll
xor
sbb
inc
xchg
lret
push
xchg
dec
shll
mov
sub
fcoms
inc
decb
mov
inc
aaa
push
pop
jnp
hlt
stc
popf
and
push
cmpsl
lret
out
aaa
add
fstpt
jnp
sbb
imul
dec
or
jmp
jecxz
pop
jb
lret
test
adc
push
nop
mov
mov
push
xorb
add
jmp
push
mov
stos
cmp
adc
cmp
push
daa
scas
mov
jmp
subb
push
lock
push
push
das
sbb
addr16
mov
sub
pop
mov
pop
jle
imul
into
shl
jl
test
pop
push
fcompl
cmpsl
sub
push
cmp
loop
lcall
jo
lahf
js
in
push
jge
jb
push
vunpcklps
xchg
imul
imul
dec
cmp
mov
mov
movsb
xchg
lds
inc
pop
pop
push
fwait
shrl
sarl
cmpsl
arpl
xchg
jo
push
dec
push
ds
std
ja
xchg
rorb
repnz
mov
mov
decl
mov
scas
std
sbb
rolb
xchg
jge
ficoms
ja
imul
or
push
mov
xor
sub
repz
inc
sub
inc
ret
inc
jecxz
cmc
lcall
mov
mov
pop
cld
mov
stos
sbb
mov
es
imul
imul
push
inc
inc
xchg
and
das
xchg
movsb
les
and
int
nop
test
xchg
popf
xchg
stos
in
out
mov
loopne
mov
std
jge
push
scas
js
and
cs
les
adc
sbb
and
and
ss
test
fsts
push
dec
mov
enter
incb
mov
arpl
neg
jg
mov
xchg
add
lods
mov
hlt
std
out
push
mov
xorb
cmc
stos
mov
sub
xor
xchg
ss
scas
lahf
aad
and
add
cmp
mov
push
mov
xchg
push
ftst
shrl
mov
xchg
mull
push
push
and
lods
insb
nop
mov
xchg
sub
pop
popa
or
adc
addr16
xor
add
fisubrl
lds
adc
fsubrl
std
and
testb
jl
iret
push
rolb
je
fdivr
clc
aas
pop
mov
fsts
jo
ficoml
jb
xchg
movsb
test
mov
or
not
push
cltd
or
sbb
mov
flds
sti
int3
ljmp
xchg
leave
inc
push
mov
and
notl
imul
adc
sbb
cli
stos
fsubs
cmp
andb
mov
adc
aaa
xchg
imul
pop
jle
pop
dec
inc
repz
dec
mov
int
dec
push
stc
mov
ss
bound
mov
iret
jecxz
lds
xorl
fiadds
xchg
aaa
jmp
sbb
test
nop
test
mov
int
stc
lret
and
xor
dec
inc
xor
lods
lods
jg
inc
mov
cmp
outsb
mov
dec
lahf
mov
nop
xchg
jbe
mov
push
mov
jle
mov
pop
dec
les
pop
into
notb
ret
push
js
stos
stos
push
imull
pop
push
mov
pop
push
push
arpl
push
mov
test
test
ret
sbb
and
jbe
ss
mov
dec
scas
das
lahf
xor
xchg
andb
inc
adc
aad
scas
cmc
xchg
lcall
imul
jne
push
mov
lcall
mov
jne
add
xchg
mov
cmpl
dec
insb
lds
mov
cmpb
jne
mov
inc
sub
inc
jne
or
sbb
aad
std
mov
ja
shlb
cmp
pop
out
loopne
aam
std
leave
pop
stos
aaa
pop
mov
add
lea
outsl
cltd
sub
fists
lea
mov
aad
jl
ja
inc
mov
outsl
mov
jns
or
xchg
xor
xchg
inc
das
popf
add
mov
rcr
aas
subl
ficoms
pop
jnp
mov
scas
js
std
dec
sub
jg
jmp
xchg
sbb
in
dec
repz
adc
mov
pop
cld
ret
stc
in
mov
sub
xchg
xchg
ja
arpl
fcompl
loopne
idivl
nop
push
jecxz
xchg
pop
rcrl
push
cmc
cltd
xchg
pop
imulb
js
fiadds
add
mov
sbb
mov
adcb
mov
repnz
fmulp
jle
in
scas
stos
clc
push
xchg
xor
fwait
push
push
mov
lods
jg
push
das
cs
in
bnd
inc
xor
inc
clc
jo
xchg
pop
jns
mov
cld
dec
insl
jnp
jns
sub
push
iret
loopne
js
enter
jo
mov
lret
jle
daa
jecxz
push
leave
jno
pop
mov
xchg
jg
leave
and
int
test
xchg
outsb
jae
ljmp
add
cmp
out
js
out
fisttpll
xchg
loopne
add
adc
out
js
dec
push
mov
lods
push
ret
stos
sarl
cmpsl
push
sbb
push
dec
rolb
jle
mov
sub
push
add
push
in
mov
pop
int
and
movsl
fisttps
xchg
mov
aaa
aad
out
push
scas
mov
push
push
pop
pop
pop
mov
int
xchg
pop
loope
cmp
mov
jo
fiaddl
nop
mov
pop
xchg
jg
into
insl
jg
jb
daa
sti
sbbb
xchg
mov
jp
xchg
outsb
mov
jbe
push
sbb
mov
sbb
xor
push
repnz
test
js
inc
cmp
pop
mov
lret
out
and
and
cltd
lods
push
repz
mov
movsl
pop
mov
int
mov
xchg
cmpsl
movsb
pop
xchg
push
mov
xchg
ljmp
ss
jb
cs
sahf
adc
insb
sub
ret
sbb
inc
lret
mov
mov
xor
inc
ljmp
cmp
daa
inc
jns
mov
ja
nop
fistpll
or
leave
in
push
aas
insl
divl
test
ret
or
adc
xor
scas
xlat
mov
jnp
xor
cmp
testl
mov
push
sub
mov
mov
xchg
int
lea
sbb
cmp
mov
roll
das
mov
xchg
jb
xlat
int
add
pop
repz
rolb
xchg
pushf
insl
negb
add
cmc
adc
and
jmp
xor
mov
test
adc
jge
push
mov
jns
pop
outsl
adc
fisttps
inc
sub
in
push
pop
cmc
lods
lea
cltd
cmp
push
pushf
push
mov
mov
addl
stos
pop
xor
repnz
in
stc
jecxz
pop
adc
inc
std
addl
gs
cmpsb
xchg
pop
aas
push
push
enter
lock
pop
sub
pop
push
xor
aaa
mov
roll
pop
pop
pusha
sbb
dec
fcmovu
cmp
icebp
xchg
fwait
xchg
fisttpl
pushf
icebp
push
fwait
adc
les
and
aad
sub
push
jns
fistps
dec
enter
arpl
push
es
inc
pop
mov
mov
mov
repz
pop
cwtl
mulps
aad
cli
or
scas
ja
push
ljmp
gs
mov
xchg
cmp
and
sbb
imul
push
stos
fbld
movsb
test
xor
lods
add
call
push
cmc
into
jnp
or
cmc
push
mov
mov
jge
jb
daa
jge
orb
mov
lret
fxam
enter
push
jle
mov
mov
mov
and
cld
in
jb
out
dec
pop
movsb
rcrb
mov
idivb
jb
iret
xchg
loope
scas
rcll
loop
mov
sub
shrd
mov
dec
mov
xorb
pusha
dec
pop
fstpl
add
mov
outsl
mov
inc
sub
cmp
pop
mov
mov
xchg
mov
push
mov
jl
xchg
pop
add
mov
inc
cltd
data16
test
add
jle
rcrb
xchg
xor
das
lret
adc
stos
xchg
xchg
ja
pop
pushf
mov
xchg
sarl
clc
inc
iret
lods
dec
scas
jo
mov
xchg
adc
dec
adc
enter
mov
pop
dec
rorl
insl
xor
xchg
xchg
lcall
stc
gs
pop
sub
insl
cltd
jmp
cmp
iret
or
xchg
testl
adc
mov
xchg
fldl
std
movsl
push
jle
and
mov
dec
push
xor
insb
mov
xchg
mov
push
jmp
gs
jb
xor
fsubl
jo
fucom
ljmp
ljmp
test
testb
pop
sbb
sub
push
push
jecxz
mov
fnstsw
gs
es
das
pop
iret
add
fstpl
in
mov
sub
pop
addr16
stos
ss
xchg
stos
aas
js
pushf
fldt
rolb
les
jno
cmpl
jnp
subl
out
xchg
xchg
inc
in
fiadds
rorl
cs
repz
roll
loop
lds
mov
movsb
fistpll
jbe
xchg
lds
pop
mov
or
push
sub
mov
and
mov
cmp
sub
lret
push
xchg
jge
fimull
jmp
xchg
notb
mov
cwtl
xchg
push
movsb
in
mov
aaa
fildll
adc
daa
mov
fnstenv
mov
push
xchg
push
jo
pop
mov
jbe
xchg
push
mov
pop
lret
in
pop
sub
out
gs
fidivrs
push
push
dec
mov
inc
repz
jo
add
dec
dec
adc
scas
push
jnp
mov
shll
xor
loopne
pop
inc
jo
pushf
cmpsl
mov
idivl
dec
nop
inc
add
negl
and
push
insb
xor
pop
divl
pop
ja
or
push
xchg
shll
scas
aam
cwtl
rol
test
decl
push
xchg
dec
out
fcmovnb
lahf
orl
xchg
or
mov
iret
push
xchg
repz
lds
xchg
cmpsb
jge
jo
jl
lea
pop
sub
mov
pop
jl
in
sub
dec
in
dec
pop
xchg
fcmovb
loopne
cmpsb
jbe
std
fdivl
shlb
mov
inc
movsl
mov
mov
inc
js
andl
cltd
loopne,pn
ds
cmp
icebp
lods
jmp
jg
addr16
addr16
mov
ja
test
es
nop
xorl
sub
in
mov
cmp
push
mov
js
fidivs
jae
ss
xchg
xchg
bound
cwtl
sbbb
jns
jns
filds
mov
and
xor
inc
rcrb
insl
imul
cmc
sbb
sbb
or
xor
mov
pop
and
outsb
fs
inc
out
inc
inc
push
mov
mov
xchg
xchg
xchg
push
imul
fdivrl
pusha
xor
ja
insl
in
stos
loop
enter
jae
cmc
sbb
ret
jo
push
xchg
cli
or
xor
adc
sti
adc
adc
dec
cmc
adc
data16
cmc
lock
mov
sbb
xchg
push
jmp
xor
sbb
jae
push
jge
addr16
addr16
jecxz
pandn
cmpsl
cmc
aaa
cmpsb
inc
emms
sbb
movsl
or
mov
outsl
mov
ficomps
mov
dec
aas
mov
scas
inc
call
xor
out
lock
out
aas
push
test
mov
into
lods
xchg
xchg
orl
add
mov
push
outsl
xchg
hlt
jbe
fdivp
mov
xorb
cmp
in
pop
cmp
adc
rcl
cld
fwait
in
rorl
cmp
les
ror
cwtl
dec
xchg
daa
mov
sub
push
outsl
outsb
mov
imul
pop
sbb
mov
icebp
mov
mov
pop
inc
xorb
jp
aam
jno
int
scas
adc
es
jb
push
mov
sbb
out
push
lods
cmp
repnz
fistpl
xchg
xchg
scas
clc
mov
out
sbb
xor
mov
out
xor
test
pop
mov
xor
in
das
dec
dec
or
mov
js
push
xor
adc
insb
sub
lock
mov
dec
mov
inc
imul
add
nop
testb
dec
mov
push
subb
add
nop
sbb
ljmp
dec
add
adc
js
adc
add
xchg
dec
ficomps
jmp
mov
jecxz
jb
repz
xchg
mov
cmp
jbe
sbb
daa
out
stc
dec
push
not
push
mov
mov
adc
in
insl
clc
pop
push
cld
mov
cmpsl
or
js
dec
jne
repnz
sahf
gs
adc
lock
cmp
lcall
dec
fisubl
in
sti
xchg
jl
adc
shlb
cltd
lods
mov
popf
insb
rclb
mov
mov
xor
ret
dec
pop
push
clc
add
clc
jne
je
call
imul
and
mov
cld
cltd
pusha
push
xor
cmp
xchg
test
test
add
pop
stos
inc
jmp
jle
lret
iret
std
push
adc
addr16
xchg
inc
fldl
int
jp
imul
icebp
jle
inc
jp
lods
sub
shll
or
adc
sbb
es
out
mov
in
and
lret
repz
lods
rorl
lds
das
scas
sti
and
lds
mov
fidivrl
je
fwait
insb
adc
or
sbb
jae
jne
aad
cmpsl
std
xchg
aaa
adc
inc
pop
dec
aad
inc
aam
jecxz
mov
ret
jle
pop
lock
aaa
mov
cmp
sahf
insl
fldcw
pop
push
jp
adcl
adc
mov
mov
popf
and
int
xor
cmc
mov
cmc
add
xchg
lcall
cmc
outsb
xor
xor
in
es
in
vpsubd
or
mov
xor
das
xor
xorb
mov
lods
test
imul
sub
mov
or
push
xchg
sbb
cmc
enter
or
iret
test
pop
inc
adc
loopne
repnz
mov
mov
js
inc
mov
xchg
mov
ja
movsl
test
fnstcw
lahf
mov
mov
pop
cwtl
xchg
mov
jp
mov
iret
inc
scas
int3
cmp
dec
mov
or
sub
mov
dec
rorl
pop
jle
xchg
fwait
rclb
aaa
outsb
push
fistps
mov
mov
mov
cs
popf
fdivr
iret
inc
dec
xor
mov
call
pop
scas
mov
xchg
int3
stc
xor
scas
divb
adc
xchg
ja
mov
pop
out
in
jbe
mov
movsl
test
push
jnp
repnz
mov
lcall
clc
xor
fstpt
repz
xor
push
xor
movsl
xor
jae
imul
jbe
push
repnz
inc
outsl
fsts
xor
mov
cmpsl
call
mov
mov
xchg
lea
push
les
xchg
and
jnp
sbb
add
lret
jmp
sbb
scas
and
ljmp
adc
jl
mov
pop
std
mov
call
xchg
mov
iret
dec
xor
xchg
sub
and
fwait
or
jae
mov
scas
cs
sub
dec
dec
mov
scas
sbb
pop
data16
imul
aas
rcrb
sub
jg
dec
loopne
aad
movsl
aaa
cltd
cwtl
jecxz
xchg
jo
cmp
fsts
divb
in
mov
ja
lahf
sub
pop
inc
pop
mov
pop
xor
mov
imul
fdivr
mov
xor
xlat
xchg
aad
xchg
sub
xor
fucomp
mov
inc
xchg
dec
insl
push
adc
add
cli
lods
sbb
imul
jl
nop
nop
inc
outsb
enter
data16
mov
test
push
int3
mov
call
movsl
sub
xchg
loopew
das
xor
jae
push
das
scas
rclb
fidivrs
cmc
nop
jne
adc
movsb
lcall
mov
loop
iret
ja
and
outsl
jecxz
shll
mov
mov
mov
sub
push
out
hlt
jmp
nop
fstl
add
in
pop
pop
cwtl
inc
shll
inc
fisubrs
cmpsl
and
aad
movsl
mov
push
inc
jecxz
into
xor
xchg
and
push
inc
cmc
pop
mov
inc
jb
jnp
nop
fmul
mov
rcl
aas
test
mov
lcall
xchg
pop
pop
icebp
mov
lret
jmp
pop
xor
nop
daa
ds
add
in
not
pop
into
lea
pusha
and
repnz
bnd
mov
inc
xlat
into
mov
sarb
dec
popa
mov
mov
aam
pop
jbe
test
rol
std
jp
cmp
inc
outsb
shrb
out
adc
insb
repz
cltd
fmull
ret
jb
imul
pop
and
jns
scas
mov
xchg
js
stos
xor
sarl
stc
aaa
push
adc
push
add
pop
mov
aaa
sti
stos
insb
cld
inc
adc
lea
dec
pop
push
ja,pt
mov
mov
fsubrs
adc
jns
fcoml
aam
adc
or
xchg
in
adc
cmpb
ret
shrl
dec
lret
aas
leave
fld
jae
movsb
sub
ss
lock
or
aad
sbb
mov
cs
loope
loop
xor
xchg
adc
lret
leave
shll
arpl
out
mov
add
jmp
mov
xor
aaa
fbstp
mov
cld
adc
scas
dec
cmp
loop
notb
int
sub
xchg
jne
mov
sbb
movsl
lds
lret
mov
int
push
dec
adc
repnz
mov
dec
mov
sbb
rcrl
mov
shll
and
cmpsb
mov
xchg
mov
cmp
fsubrl
fistpll
xor
push
and
inc
lea
inc
scas
push
clc
enter
in
test
mov
fldcw
push
dec
mov
mov
lahf
fcoms
mov
inc
hlt
out
and
ds
enter
mov
rclb
dec
xchg
push
pop
push
ljmp
mov
idivl
mov
dec
mov
cmp
push
test
xor
xchg
ja
sbb
fildl
test
jns
add
or
cmp
fiadds
fmull
nop
aas
aaa
adc
cmpsl
rorl
add
outsl
ja
cmpsb
scas
push
int
jne
pop
jmp
nop
jl
out
dec
sahf
jecxz
jmp
jns
sbb
stos
int
push
push
negw
mov
nop
cmp
dec
int3
push
push
push
mov
dec
pushf
lds
mov
gs
xchg
and
je
adc
add
iret
ljmp
int3
movntq
insl
daa
sub
xchg
mov
add
xchg
cmpsb
popa
push
or
stos
scas
jae
cltd
js
mov
mov
mov
popl
or
cld
aad
dec
xor
mov
xchg
adc
out
pop
dec
out
popa
fnstcw
xchg
dec
popa
push
lods
cmc
mov
cmp
jnp
push
jecxz
pop
pop
ret
aad
in
inc
mov
inc
and
inc
lea
rclb
stc
int
std
ljmp
je
or
cmp
cmpsl
adcb
mov
rcll
xchg
repz
adc
xchg
xchg
xor
pop
mov
sahf
shlb
add
imul
xchg
icebp
ret
dec
adc
inc
adc
mov
xchg
aad
xchg
inc
dec
mov
xchg
xchg
popa
adc
inc
dec
imul
dec
mov
ror
pop
or
add
data16
ljmp
mov
mov
add
out
pop
mov
sub
adc
push
adc
test
js
cmpsl
movsb
cld
mov
imul
jb
xchg
mov
popa
mov
mov
pop
imul
inc
mov
pop
adc
sbb
ljmp
insl
lock
mov
ja
pop
andl
xor
inc
aas
in
loope
out
testl
scas
cmpsl
or
pushf
pop
push
lahf
je
lahf
cmp
push
int
push
outsb
jns
sub
xchg
xchg
aad
sbb
leave
and
sbb
xor
inc
inc
add
in
cmp
lcall
lock
movsl
sbb
adc
sub
cli
aaa
mov
cmc
jne
xchg
adc
sbb
pop
jo
or
jl
lret
jp
mov
out
jnp
jno
xchg
divb
ja
mov
push
mov
push
pop
fstl
push
mov
out
push
stos
cmp
testb
imul
pushf
jns
pop
invd
or
push
or
test
arpl
xchg
pop
cltd
adc
cmp
lahf
xchg
inc
out
cmp
ret
jl
mov
push
mov
adc
insl
add
push
adc
rclb
mov
and
xchg
out
lea
rcl
inc
lds
adc
les
adc
and
nop
clc
mov
or
outsl
data16
jbe
dec
mov
add
sbb
sbb
xchg
dec
or
jno
push
pusha
lds
nop
stc
adc
jmp
inc
inc
je
aas
pop
xorb
sbb
jbe
mov
icebp
sahf
xor
pop
fnstcw
mov
inc
shrl
lock
mov
shlb
nop
loopne
call
das
fxtract
inc
add
or
imul
aas
sbb
mov
insl
hlt
lea
adc
pop
dec
push
dec
mov
push
mov
xchg
add
insb
lds
pushf
in
cmc
inc
test
outsl
lods
and
in
mov
aas
sti
and
adc
sahf
dec
je
ss
mov
cmp
nop
push
cld
cld
mov
mov
in
cmp
ja
mov
test
sub
in
push
push
sbb
mov
and
roll
push
es
inc
jecxz
rol
lea
rol
mov
imul
loop
cwtl
dec
loopne
inc
or
sub
aad
xchg
sub
xchg
pop
push
in
jl
out
jnp
test
cmp
mov
pop
xor
jg
jae
adc
call
imul
in
mov
test
cmc
or
xor
shr
push
nop
mov
xchg
cld
pop
add
nop
jp
scas
push
lret
add
and
out
or
fnstcw
popf
imulb
jl
lahf
ljmp
add
push
push
push
sar
mov
jne
sbb
mov
pop
mov
scas
fimuls
out
xor
or
xor
sub
rorl
adc
push
push
adc
cmc
add
push
jbe
xor
lea
jb
jg
imul
cmp
sub
out
mov
daa
sbbb
mov
cmp
shrl
repz
shll
xor
mov
lds
push
push
out
and
scas
insl
xor
or
xchg
xchg
dec
mov
leave
push
rolb
cwtl
test
sub
cmp
shll
inc
psubusw
or
sbb
lds
ss
jno
cld
and
and
sbb
popa
mov
lods
jbe
andl
ss
data16
sub
sbb
xor
fs
idivb
push
cs
fnstenv
and
xchg
sbb
ds
jl
jb
jb
xchg
mov
clc
ljmp
xchg
fmull
and
xchg
les
ja
mov
sub
repz
adc
cwtl
jmp
push
xor
add
iret
xchg
dec
ret
ja
xchg
dec
fdivrl
test
sub
test
outsl
aad
xchg
dec
lret
push
icebp
ja
xchg
push
into
xchg
sub
inc
xchg
pushf
daa
mov
mov
mov
into
push
pop
xor
xchg
sub
aaa
cmpb
add
ljmp
in
iret
mov
jne
jbe
inc
inc
daa
mov
push
iret
stos
popf
jmpw
gs
sbb
stos
xor
inc
sbb
push
pop
mov
push
push
mov
jns
test
jg
jno
in
inc
cmpsl
outsl
xchg
faddl
jmp
sub
daa
cwtl
add
sbb
clc
xchg
add
lahf
xchg
xor
sbb
pop
sub
cltd
push
jmp
outsb
jle
enter
xchg
xchg
xor
addr16
jecxz
jle
or
or
xchg
add
jecxz
sub
inc
test
test
xlat
ret
inc
or
in
sub
mov
js
xchg
scas
adc
and
mov
int
mov
test
int
addr16
loope
nop
call
repnz
add
gs
dec
pusha
jle
rorb
clc
aaa
sub
repnz
mov
xchg
dec
xor
adc
movsl
aaa
mov
test
lea
or
sbb
repz
movsl
jno
fbstp
popf
mov
lahf
imul
adc
mov
fstps
dec
or
sbb
adc
mov
mov
jge
lods
outsl
xchg
aad
xchg
ss
fwait
pop
icebp
imulb
aad
ja
movsb
or
adc
ficoml
test
dec
mov
mov
js
cmpsb
lods
mov
data16
cmpsb
inc
cltd
adc
and
inc
sarl
cmpsl
mov
adc
mov
xchg
popf
std
cmpsb
repz
enter
jp
rcrb
outsb
aas
jg
bound
add
outsb
push
mov
adcb
enter
xchg
xchg
sub
add
mov
dec
push
dec
mov
scas
fcom
leave
mov
xchg
mov
pop
push
sbb
xchg
cmp
jecxz
jne
mov
inc
push
sti
fnstsw
movl
aam
jno
jnp
into
lods
xchg
push
inc
pop
jae
adc
mov
dec
rol
sub
xchg
fadd
adc
stos
ljmp
sti
test
mov
xor
lods
pop
inc
inc
push
and
push
fmull
pop
jae
dec
fimull
sahf
dec
add
aam
xor
pop
gs
repnz
jge
dec
pop
dec
and
pop
inc
cld
mov
sti
inc
inc
repnz
movsb
jl
out
mov
nop
jl
aas
test
jae
inc
mov
inc
out
sbb
mov
adc
push
mov
aam
into
push
dec
mov
in
test
pop
dec
fsubs
mov
icebp
cmpsb
sbb
imul
mov
mov
dec
shrb
out
call
cmpsb
dec
cmpsl
xor
cmp
fcmovnb
mov
mov
mov
testb
push
lods
ret
nop
test
adc
mov
ss
pusha
lcall
xchg
push
pop
shrl
nop
mov
jp
pop
movsl
dec
push
lret
cmp
int
inc
push
and
cmp
jnp
adc
push
xchg
outsb
stos
inc
lock
sahf
adc
js
test
cltd
popf
mov
fsubr
imul
mov
jbe
mov
movsl
jne
jl
loop
mov
leave
orl
aas
popf
test
cmpsl
mov
insb
inc
or
inc
and
mov
subb
add
popa
mov
sbb
daa
push
icebp
pop
pop
sbb
jae
or
rcll
aaa
fwait
cmp
rcpps
icebp
stos
cs
and
sub
lods
sub
pop
test
fildll
icebp
jb
loopne
push
aaa
fcomp
iret
mov
xor
pop
inc
push
aas
arpl
jl
or
rolb
fcoms
rolb
mov
nop
pop
sbb
scas
aad
sbb
clc
jge
daa
pusha
pop
mov
cmp
clc
call
and
fsts
push
mov
and
shl
push
add
lahf
mov
jge
mov
jo
inc
out
mov
lea
in
mov
pop
inc
fidivrs
push
mov
jno
cmpsl
sub
popa
xor
xchg
imul
xchg
fdivp
mov
and
mov
adc
push
subb
adc
cmp
testl
inc
mov
dec
mov
dec
jbe
cwtl
push
aas
inc
and
cld
mov
fldl
mov
mov
lahf
scas
in
aad
inc
clc
add
mov
xchg
mov
cmp
std
cmp
cmp
sub
push
aaa
fstl
gs
fists
or
and
and
fdivl
gs
movsb
push
cmc
add
fadd
push
cmp
cmp
scas
mov
fcmovu
rclb
cwtl
icebp
pop
jg
test
jae
mov
pop
inc
mov
push
xor
lods
mov
cmp
jg
adc
out
in
mov
pop
mov
fnstsw
mov
mov
sbb
and
jne
push
push
negl
daa
push
push
xor
xchg
cmpb
push
dec
jg
sbb
js
push
imull
jb
sub
push
fmul
ss
push
imul
call
inc
jge
dec
sub
pop
mov
arpl
test
icebp
pmaxub
movsl
js
into
leave
cmpsb
rol
adc
stos
ss
push
push
pop
inc
mov
addr16
frstor
js
pop
mov
cmp
xchg
add
mov
cli
sbb
in
cmp
xor
in
mov
filds
aas
dec
and
and
out
inc
shrb
dec
jnp
popf
push
scas
pop
sbb
xor
jmp
xchg
scas
sbb
pop
sub
mov
stos
and
pop
inc
cmpsl
jg
sti
test
bound
xchg
inc
scas
dec
push
test
mov
outsl
movsl
cmpsl
ss
cltd
mov
jg
pop
sub
into
aaa
lcall
rolb
jns
pop
or
xlat
ret
iret
mov
repz
daa
push
icebp
push
popa
js
mov
dec
push
jnp
mov
mov
jg
aad
push
or
in
jbe
imul
push
xor
adc
loopne
pop
mov
push
or
inc
cli
ja
sbb
dec
push
xchg
jb
lds
mov
mov
dec
and
xchg
add
mov
xchg
shll
loopne
mov
sub
add
cwtl
lret
mov
repz
cmpsb
pop
xor
icebp
jbe
stc
or
mov
ss
and
mov
pop
pop
mov
mov
bound
shll
mulb
pop
jmp
insb
aad
int
enter
lds
xchg
mov
inc
dec
mov
pop
aas
xchg
lock
imul
xchg
std
outsl
jbe
mov
jle
dec
jne
dec
fldt
in
mov
push
test
xor
inc
push
cs
dec
xchg
push
iret
jmp
das
sahf
scas
sub
loopne
sub
dec
mov
leave
shlb
adc
nop
jmp
dec
out
imul
push
fbstp
adc
ljmp
inc
jecxz
or
inc
pop
popa
imul
cld
mov
inc
in
mov
cmp
mov
adcl
lods
push
fadd
jns
mov
inc
mov
ret
stos
clc
pop
pop
xor
jns
and
jg
jge
rolb
pop
add
in
mov
aaa
dec
push
leave
out
adc
cmp
cmp
and
mov
loopne
jge
ret
or
push
pop
es
push
addr16
xchg
xor
mov
rorl
out
outsb
pop
cmp
pop
push
lret
lret
js
or
inc
cli
mov
mov
jb
adc
cmp
outsl
sahf
xchg
hlt
sbb
out
lret
mov
call
or
popf
mov
test
lds
xor
data16
hlt
jmp
testl
movsl
cmp
cltd
movsb
stos
ficoms
scas
ret
in
sub
mov
lcall
lods
jo
sub
and
out
inc
in
xor
dec
sbb
rolb
fnstcw
add
and
pop
cmc
cld
jo
adc
add
xchg
adc
mov
pop
scas
pop
lcall
mov
jb
mov
je
fwait
mov
into
imul
push
insb
jle
push
lret
dec
lods
out
enter
jne
test
int3
fsubrl
push
fstpt
xchg
rcll
mull
push
xchg
xchg
sbb
lock
iret
mov
lods
out
adc
js
std
aaa
mov
push
or
mov
les
or
addr16
jg
loop
inc
jge
stos
inc
add
clc
mov
push
fisubs
ret
push
xchg
cmpsl
push
and
pop
dec
dec
sub
fsub
lahf
imul
mov
xor
or
in
lret
mov
stos
into
out
mov
test
mov
pop
xchg
lea
xor
jae
ja
mov
mov
mov
mul
mov
addr16
in
hlt
sub
cltd
aaa
ja
inc
std
cmp
stos
out
cmp
and
fists
std
mov
hlt
push
or
dec
rorl
dec
cmp
xchg
jae
shll
push
popw
push
mov
mov
aad
push
icebp
fldcw
sub
jecxz
lret
icebp
lahf
jnp
stos
push
repnz
mov
inc
xor
add
jl
and
imull
mov
notl
and
js
mov
fs
lods
jo
int
ffree
mov
out
in
imul
sti
js
test
subb
cmp
stos
dec
jle
xor
xchg
lods
add
imul
dec
call
dec
in
mov
xchg
lahf
in
pop
push
leave
xchg
ja
lods
xor
in
enter
les
imulb
fistpll
es
push
pop
adc
into
sub
shr
mov
lock
xor
out
sub
ljmp
mov
mov
subl
movsl
xchg
inc
repz
aas
outsb
dec
cs
sti
in
or
jecxz
inc
and
cmpsl
cmp
cmpsl
inc
das
pop
xchg
xor
scas
sub
pop
lods
jnp
ret
fwait
jg
jmp
cmpsl
jnp
add
xchg
ja
je
cld
add
test
cli
scas
fmull
in
lret
cwtl
movsb
fldt
jns
les
pop
leave
ret
adcl
mov
negb
xchg
cltd
sbb
mov
mov
cmp
cmp
das
sub
or
inc
xchg
ja
sbb
lds
cmp
into
xor
aas
in
mov
aad
sub
mov
adc
or
jb
lods
adc
sbb
inc
leave
sbbb
ja
stos
fdivl
inc
ljmp
jl
mov
js
stos
jecxz
out
movsl
adc
sub
dec
sub
adc
ret
jnp
gs
iret
mov
cli
insl
pop
cmp
gs
loopne
sbb
sub
push
orl
int3
in
push
mov
jne
ja
inc
sub
sub
std
aaa
sbb
jbe
pop
pop
ja
std
sarb
push
repnz
sub
nop
push
or
mov
push
fstpt
sbb
mov
pop
es
xchg
addr16
mov
fcompl
cmp
mov
jle
aas
push
cmpl
sahf
sub
filds
and
popf
movb
inc
mov
inc
xor
lock
lret
jg
es
dec
lret
clc
inc
xchg
sub
xor
or
ret
fs
andl
push
insb
jg
pop
aaa
jbe
xor
ss
jp
sub
adc
sbb
adc
xchg
mov
sahf
repnz
out
cmpsb
ds
jne
or
push
push
mov
test
test
jmp
add
lret
enter
lods
push
lods
nop
cmpsb
and
inc
sbb
enter
js
mov
sbb
lds
inc
sub
push
xor
pushf
mov
jbe
sbb
scas
push
lea
xchg
add
dec
mov
jo
das
xor
iret
jecxz
mov
shlb
sub
sbb
xchg
cmpsl
popf
jmp
test
clc
fwait
xchg
jp
mov
es
inc
lods
xchg
sti
xorl
rolb
mov
rorl
hlt
loope
add
aad
adcl
hlt
adc
xchg
js
sbbb
mov
dec
pop
push
push
js
jno
lahf
pop
jbe
orw
mov
add
sbb
mov
clc
add
and
js
pop
xor
imul
imul
xor
push
push
in
cmpsl
pop
xchg
mov
call
ficoml
cltd
addl
aad
and
jnp
in
popw
mov
or
cs
xchg
push
shll
xlat
xchg
in
nop
push
inc
jb
mov
inc
push
icebp
mov
clc
xlat
mov
gs
les
out
pop
mov
xor
mov
dec
inc
adc
rorl
lret
fninit
aaa
movsb
hlt
jnp
enter
cmp
pop
test
fistps
inc
nop
test
mov
xor
dec
adc
in
mov
fwait
daa
pop
lea
and
cltd
sub
sbb
xchg
dec
aad
mov
pop
inc
insl
add
xchg
daa
pop
cs
cmp
mov
mov
push
sarl
shlb
and
push
mov
mov
xor
inc
ja
imulb
nop
push
into
pop
cld
gs
adc
clc
adc
push
lret
dec
adc
jle
sahf
sahf
leave
movsl
sub
movsl
insb
aaa
bound
test
add
dec
sbb
lods
push
xor
inc
jg
out
fwait
sbb
mov
adc
mov
and
cmpsl
nop
pop
and
xchg
mov
fmul
mov
jno
movsl
fcoml
imul
xchg
inc
mov
les
lock
mov
rcr
mov
pop
call
cld
nop
pop
aad
inc
mov
mov
rorl
test
xor
mov
jp
fmuls
dec
cs
cmpsb
xchg
xor
aas
adc
jno
out
jmp
sbb
push
pop
shl
fcmovne
jl
and
nop
into
mov
out
sub
jno
pop
lcall
fisubl
sbb
adc
icebp
or
mov
xchg
mov
rcrl
sbb
subb
ffreep
aad
cmp
out
mov
pop
cs
loop
nop
xchg
xchg
in
push
sub
xor
jns
and
mov
adc
idivl
adc
dec
inc
xchg
aaa
mov
nop
jo
inc
cmpsl
cmp
pop
or
xchg
xchg
mov
mov
cmp
mov
inc
lret
inc
call
aam
sub
stos
int3
xor
jbe
inc
or
and
mov
inc
cmc
test
mov
or
pop
sub
push
das
ljmp
adc
adc
inc
sahf
stos
scas
sbb
aad
and
add
in
lock
imulb
xor
jl
hlt
mov
addb
movsb
das
inc
dec
or
loope
adc
out
inc
sbb
fmuls
mov
mov
les
push
jp
xchg
mov
lock
and
mov
idivl
xchg
inc
jecxz
hlt
fwait
add
aad
adc
ja
out
leave
ja
aaa
test
mov
cmpsl
inc
dec
xchg
in
mov
sarb
nop
test
test
pop
adc
mov
fwait
xchg
rcrb
js
mov
test
test
scas
imull
and
test
lea
mov
fdiv
iret
std
cltd
xor
test
mov
cld
pop
mov
and
sub
andb
sbb
movsb
xchg
cwtl
inc
fsts
dec
inc
js
pop
jno
mov
cmp
rorb
nop
cs
ljmp
jle
mov
lcall
xor
adc
mov
loopne
inc
ret
pop
push
cmp
test
add
add
xor
mov
sahf
nop
cmpsl
lds
inc
mov
rcll
andb
dec
jae
push
jno
nop
inc
test
icebp
xor
ds
adc
and
mov
mov
in
aaa
dec
lea
mov
test
pop
clc
mov
push
cmpsl
push
inc
scas
inc
inc
hlt
pop
stos
incb
sahf
xchg
xchg
in
dec
sahf
stos
stc
cltd
push
cmp
mov
push
xchg
std
nop
push
mov
out
cmp
push
insl
roll
push
je
scas
xchg
testb
nop
mov
add
outsb
out
xchg
outsl
fidivs
pop
ds
adc
sahf
test
int
mov
cmp
xorl
into
push
cmp
aaa
sbb
jbe
shrb
dec
movsb
cmpsb
jbe
push
out
jmp
imul
mov
loopne
lea
mov
leave
lcall
aas
nop
cmp
xchg
push
fisubrs
push
repnz
lret
jecxz
loopne
lcall
cmp
xchg
and
js
das
lods
xchg
mov
leave
iret
pop
sub
fisubrl
jmp
mov
nop
sahf
or
or
sahf
jmp
fstpl
mov
xchg
imul
lods
mov
mov
mov
test
inc
push
inc
inc
mov
lahf
dec
scas
ss
or
xchg
jno
mov
das
fbstp
ljmp
movsb
sti
lds
ret
add
add
and
mov
and
scas
adc
dec
sahf
jbe
into
ss
in
push
notb
push
sub
pop
cs
das
mov
in
fisttps
push
mov
mov
sub
jo
dec
mov
or
sahf
mov
and
or
movsb
ja
mov
fmul
pop
cs
jg
add
adc
imul
cmp
in
pop
jg
inc
fdivl
sub
pop
xchg
add
bound
movsl
or
hlt
imul
push
movsb
jnp
pop
ficoml
add
call
rcll
sbb
std
xchg
jg
aaa
std
leave
pop
fldl
jo
lods
pop
roll
xor
xchg
push
dec
iret
movb
rcll
in
shll
repz
push
inc
outsl
xchg
xor
fcmovb
jl
mov
inc
roll
lcall
cli
popf
filds
jg
adc
stos
mov
fisubl
icebp
out
aas
aas
and
mov
push
add
or
rcrb
push
sub
sbb
push
test
jnp
ss
in
imul
adc
mov
enter
into
lret
in
mov
bound
dec
xor
out
int
out
gs
sahf
sbb
fidivrl
lds
std
imul
adc
cmpsl
into
jmp
js
fistpl
xchg
adcl
dec
out
sbb
sysenter
inc
aas
lahf
xchg
mov
dec
leave
rcrb
jne
in
fists
dec
cs
or
les
xlat
std
push
xor
xchg
loop
jle
push
addr16
idivl
mov
push
repz
pop
in
and
in
xor
jne
mov
lahf
rclb
ss
pop
cmp
mov
push
sbb
sahf
mov
cmp
inc
pop
das
addr16
or
repnz
je
push
inc
lret
fsub
in
add
pop
jnp
jne
addb
xor
sahf
adc
mov
mov
mov
sbb
cmp
mov
jo
pop
mov
push
bnd
je
js
dec
inc
cmp
clc
jo
adc
xchg
out
add
sti
ss
sub
ret
jns
push
fwait
daa
mov
xor
xchg
addr16
flds
mov
xchg
mov
push
fmul
xchg
jmp
push
enter
gs
out
lds
pop
repz
popa
aaa
xchg
mov
mov
xchg
notb
add
data16
movsl
and
jne
filds
mov
add
sub
fcomps
and
xchg
adc
test
pop
insl
fcoms
jg
clc
sub
adc
ja
imulb
inc
jecxz
jl
cmp
orb
maskmovq
xor
pop
test
mov
mov
call
fildl
aad
xor
aad
and
pusha
sub
mov
pop
push
cltd
clc
xor
inc
mov
push
or
fidivrs
inc
lea
ss
into
add
push
into
xor
pop
jo
or
popl
jecxz
and
sbb
sub
scas
cmpsb
pop
and
pop
pop
mov
dec
in
pop
adc
testb
jns
xchg
repz
push
stos
jg
or
sbb
sub
pop
jo
scas
lods
sbb
insb
push
jbe
push
add
int
and
xor
xchg
stos
adc
frstor
aaa
or
enter
clc
xchg
outsb
cmpsl
xor
nop
dec
popf
xchg
lahf
adc
dec
and
fcompl
mov
sbb
add
fisttpl
adc
cmp
out
rcl
nop
add
addr16
inc
mov
cld
out
insb
sbb
pushl
fsubl
orb
ror
sbb
pushf
int3
jne
data16
popf
pop
lret
filds
pop
push
xchg
push
es
xchg
push
mov
xchg
push
mov
xchg
mov
and
xchg
lea
mov
daa
nop
das
and
mov
inc
push
sub
xor
jl
mov
popf
mov
fimull
loope
push
jbe
jp
push
cs
sbb
jg
push
aaa
xlat
push
nop
inc
aad
pop
in
aad
xor
jb
inc
pop
popf
mov
iret
pusha
ds
jg
mov
int
test
pop
fcoms
push
mov
jnp
xchg
nop
scas
inc
pop
iret
shrb
insl
cs
jno
scas
jecxz
sub
jo
mov
mov
xchg
ja
and
pop
mov
mov
push
add
leave
inc
int3
add
outsl
leave
sbb
mull
xchg
fcmovnbe
pop
daa
jge
mov
and
rclb
ss
cmpsb
dec
mov
fidivrs
aaa
iret
jnp
sub
idivl
and
cwtl
xchg
and
lea
push
vmread
lea
std
lea
scas
iret
xor
ss
push
mov
outsl
pushf
xchg
divl
lea
out
dec
sub
push
mov
das
xchg
cs
std
gs
mov
adcb
dec
sub
sub
inc
adc
insb
in
mov
test
mov
adc
dec
into
mov
movsb
fs
inc
pop
lds
test
int
aam
push
jecxz
xor
mov
bound
dec
sbb
xchg
scas
into
add
push
mov
and
jge
pushw
sub
nop
repz
rcll
mov
inc
sub
push
cmp
dec
mov
add
fsts
cmp
sbb
ret
jo
jno
ja
sbb
mov
sub
jnp
test
push
divb
push
jbe
ja
mov
lods
pop
push
hlt
inc
cmp
and
sbb
repnz
lods
push
fbstp
out
adc
or
mov
pop
mov
mov
xchg
cmpsl
adc
les
nop
aas
int3
sbb
mov
pop
sub
mov
lret
loopne
push
fwait
hlt
sbb
out
out
cltd
movsl
add
pop
test
mov
and
or
loopne
jecxz
push
mov
adc
mov
mov
hlt
inc
lock
aad
jmp
xor
and
dec
cmpsl
popa
inc
dec
sahf
mov
into
mov
or
adc
out
push
push
das
mov
outsl
pop
push
xor
jbe
add
gs
inc
sub
aaa
sahf
adc
mov
aas
inc
sahf
sbb
jno
inc
imul
jl,pn
notb
sahf
sbb
add
sub
iret
push
sbb
sub
nop
lods
cwtl
pop
mov
adc
std
das
inc
and
dec
je
mov
cmp
aaa
mov
idivb
and
bound
push
std
jns
jle
mov
pop
in
js
loopne
cld
xor
int3
mov
mov
sub
dec
adc
pop
mov
imulb
test
pop
xor
push
add
cmpsl
mov
icebp
add
out
jne
movsb
cltd
cmpsl
xchg
cld
dec
call
in
jge
add
rclb
add
fadds
push
in
adc
ret
pop
push
xor
std
hlt
fcompl
push
inc
divb
xchg
inc
mov
cld
mov
inc
cmp
lahf
fs
sarb
pop
icebp
data16
or
sbb
cld
popa
ja
sbb
or
aaa
dec
js
mov
adc
mov
dec
and
pop
and
div
ljmp
xor
gs
scas
push
add
int
inc
push
shll
fcoml
and
mov
push
sti
cmp
jne
pop
xor
jno
test
jmp
sub
or
add
push
sahf
das
mov
ffreep
sbb
sub
xor
push
lods
aaa
or
sarl
nop
clc
dec
sbb
insl
push
cltd
cs
push
outsl
pop
cs
xor
in
inc
jg
jnp
notb
iret
xchg
mov
mov
sbb
ja
arpl
cmp
lods
lahf
lret
gs
or
sarl
ds
lea
leave
push
mov
popw
mov
xor
or
pop
and
or
xchg
xchg
adc
lods
or
iret
dec
adc
call
dec
adc
aam
aaa
nop
push
sub
push
jnp
sbb
adc
ret
pop
inc
addr16
lcall
gs
xchg
cmp
fists
insl
addr16
inc
js
rcl
xor
in
leave
cld
adc
nop
sahf
jge
lds
div
xchg
inc
xchg
insl
ja
xor
mov
mov
outsl
add
adc
jae
jmp
dec
aas
adc
leave
adc
push
xchg
inc
mov
dec
add
pop
xor
xorw
js
xchg
mov
subl
popf
and
cltd
les
loopne
je
nop
les
js
insl
das
inc
aad
pop
dec
aaa
and
pop
lock
xchg
push
sub
rorl
addl
data16
pop
add
movsb
rorb
push
add
ljmp
mov
push
mov
cmp
mov
dec
movl
and
mov
lea
sub
mov
imul
push
pop
jb
stos
jbe
jb
fcmove
jnp
rorl
test
jnp
je
mov
xlat
and
push
xchg
xchg
in
jg
not
inc
int3
stc
jbe
adc
stos
mov
cmp
dec
sbb
in
jns
cli
insb
repz
fwait
mov
loop
in
adc
roll
add
aaa
inc
das
xchg
sbb
dec
rcll
dec
in
mov
js
jae
cmp
scas
imulb
jb
jge
outsb
aad
inc
mov
and
cwtl
add
ficoms
stos
mov
inc
jp
adc
lods
push
xor
push
pop
jmp
sahf
mov
mov
out
ja
dec
and
inc
cmp
xor
aad
imul
dec
jge
cmpsl
mov
movntps
dec
fists
iret
cmc
into
add
sbb
aad
xorb
jg
sub
mov
pop
popa
and
and
push
aam
adc
ret
jne
fimuls
pop
arpl
xor
jecxz
lds
adc
mov
cs
std
mov
push
lds
mov
jae
je
xchg
lock
cmp
nop
adc
jmp
insb
adc
dec
fbstp
mov
pop
pushf
xchg
es
jp
inc
fmuls
adc
pop
out
std
mov
pop
adc
cmp
jge
inc
add
sbb
dec
out
nop
js
dec
or
mov
jge
popa
imul
jg
sub
push
repnz
aaa
loope
daa
das
inc
cmpsl
pop
xchg
rcrb
lea
xchg
out
inc
xor
into
mov
jmp
cmp
pop
xchg
lahf
in
jg
adc
lea
dec
cmpsl
jmp
jo
scas
push
call
aaa
pop
mov
push
dec
xor
adc
incb
cld
or
mov
mov
aam
xchg
mov
push
jp
and
pusha
mov
decl
and
divl
xchg
xchg
mov
push
xchg
insl
xchg
mov
adc
cmp
lahf
ds
jmp
adc
mov
hlt
std
xchg
dec
inc
push
sub
das
lahf
push
mov
mov
cld
mov
ret
call
lret
stos
add
lahf
lret
mov
bound
push
mov
imul
aam
insl
js
or
lcall
daa
sub
shll
fs
js
mov
in
pop
shll
js
push
and
movsb
dec
xor
rcll
adc
push
movsb
and
mov
mov
nop
xchg
repz
xchg
or
jnp
dec
in
std
xchg
push
cld
adc
or
pcmpgtw
pop
iret
cmc
mov
shll
xchg
and
scas
pop
fwait
mov
int
pop
dec
sub
mov
dec
push
fs
and
sbb
mov
xchg
mov
rorb
mov
and
rclb
nop
out
loop
jge
sti
add
leave
mov
nop
in
cmp
scas
idivb
ss
adc
nop
sbb
adc
shrb
mov
lock
orl
mov
sarl
mov
bound
lock
lret
cmovl
cmc
sti
mov
cltd
add
adc
jle
lret
and
in
xchg
pusha
iret
js
jne
pop
mov
push
mov
xlat
cmpsb
and
addb
push
and
or
arpl
mov
popf
gs
insb
dec
jbe
add
xor
mov
jecxz
dec
sbb
pop
xor
mov
out
jbe
inc
imul
push
lahf
sbbl
push
mov
fldt
ljmp
sbbb
clc
xchg
cmp
dec
outsb
or
lret
in
fidivl
je
into
push
js
mov
mov
pop
or
lea
out
mov
cmpsb
sub
aad
das
mov
in
inc
jg
and
out
test
sbb
jo
xor
stos
mov
or
xchg
scas
xor
pop
sbb
imul
dec
and
outsb
sub
lds
scas
int3
mov
rolb
mov
sti
jmp
push
sti
mov
mov
and
inc
cmp
aaa
pop
mov
imul
popl
ret
add
ss
push
add
push
cmpsl
mov
dec
inc
cmc
mov
xchg
fmull
mov
pusha
lret
hlt
pop
xor
aaa
push
jne
push
insb
mov
push
mov
jae
xchg
mov
fbstp
mov
inc
ret
out
cltd
cmpsl
xchg
push
sub
cmp
iret
sahf
cmp
jbe
pop
fwait
pop
mov
lock
jmp
pop
xor
mov
rolb
shrb
xor
cmp
and
cmp
jg
adc
mov
divl
cmp
sbb
pop
push
movsb
bound
cwtl
push
mov
stos
pop
xor
loope
lret
imul
sahf
test
or
or
out
dec
mov
movsb
xchg
insl
movsl
xchg
repnz
sti
mov
cmp
jge
scas
mov
pop
shrl
ja
mov
gs
inc
lahf
mov
adcb
bound
vpsadbw
fdivl
jg
andb
xor
mov
and
jmp
jb
xor
and
cmpb
push
lret
outsl
mov
adc
js
test
nop
mov
xor
or
pop
js
test
mov
dec
icebp
into
lret
scas
xor
insl
mov
movsb
repz
out
addr16
insb
das
dec
push
scas
cmpsl
lods
jb
add
sbb
dec
mov
mov
sbb
pusha
xor
orb
lods
xor
push
or
pop
divb
dec
inc
cli
ds
ja
imul
in
adc
popw
sbb
jns
mov
inc
call
lahf
nop
or
dec
stc
or
pop
xchg
lret
inc
push
decb
loop
outsl
mov
addb
and
xchg
inc
push
pop
push
and
scas
int3
jne
sub
int
xchg
lret
cmp
add
mov
xchg
aad
divb
pop
das
loope
cwtl
lods
shl
xchg
fisttpl
mov
cmc
xchg
and
les
js
and
push
fistpll
lods
mov
std
add
adc
stos
cld
mov
pushf
test
push
adc
pushf
adc
xor
rcll
mov
in
xchg
clc
push
xor
das
push
or
dec
push
mov
pop
push
mov
cwtl
cmp
pop
enterw
sub
cmpsb
lock
adc
loopne
cld
cld
mov
out
leave
lods
das
cmp
fidivrs
cmp
inc
xchg
and
daa
adc
jg
xor
movsb
mov
ljmp
test
mov
mov
mov
sahf
mov
popf
dec
jb
mov
pop
sbb
lock
dec
cltd
out
adc
mov
jge
jo
add
xor
adc
pushf
and
addr16
xchg
or
std
fidivrl
adc
scas
adc
or
mov
dec
cwtl
add
inc
inc
ja
push
scas
sbb
dec
jg
aaa
xchg
dec
in
xor
add
cltd
icebp
and
sub
jp
jp
je
mov
ret
inc
pusha
mov
mov
push
outsl
push
xchg
jmp
pop
sub
xchg
xchg
out
fcmovb
push
in
mov
push
imul
das
inc
dec
mov
add
and
or
mov
rcrb
std
popa
adc
js
in
xor
arpl
jecxz
jmp
dec
aaa
rolb
test
daa
xor
enter
rorb
popa
sbb
jmp
xor
shlb
add
nop
pop
mov
push
pop
fsubrl
mov
and
mov
xlat
xorl
push
mov
sub
and
les
jno
mov
rorl
shl
rcr
sbb
dec
cmp
fcmovbe
pop
inc
cld
pop
and
xchg
popl
pop
pop
xchg
mov
xchg
add
pop
or
test
sarb
xchg
pusha
xchg
cmpsb
xchg
xchg
imul
sbbl
push
xchg
scas
xchg
cmp
repnz
dec
cmp
cli
mov
adc
xor
jae
into
dec
mov
sbb
xor
aas
in
aad
sbb
mov
pop
mov
inc
xchg
jge
pop
xor
filds
jg
cs
dec
inc
or
cli
dec
pop
dec
xchg
fstpt
add
sbb
enter
and
pop
movsl
push
jmp
arpl
mov
add
test
inc
dec
mov
or
movsl
inc
in
sbb
fisubs
pop
xor
outsl
jns
cmpsl
pop
sti
mov
std
mov
mov
ret
mov
or
lods
aam
mov
push
mov
xchg
push
jge
jg
mov
ljmp
hlt
daa
test
jb
test
sub
mov
je
push
ret
daa
out
filds
push
js
dec
call
ljmp
faddl
jae
dec
jmp
and
or
jle
in
mov
mov
mov
fistl
dec
jnp
hlt
aas
jge
mov
mov
push
mov
jge
sub
sub
jae
test
sbb
mov
mov
ja
in
add
ds
scas
xor
sarl
orb
mov
push
fildl
jmp
push
dec
ficoms
dec
xchg
dec
xchg
test
push
cs
cmp
scas
aaa
dec
or
lea
outsb
dec
sbb
add
jle
xchg
mov
shll
add
and
dec
xor
mov
aaa
imul
arpl
jns
mov
fidivl
xchg
ds
adc
or
mov
lds
jns
ljmp
stos
adc
sbb
adc
jmp
xchg
stc
add
inc
notl
cs
mov
enter
sti
xchg
movsl
cli
adc
js
and
aad
jg
fmuls
pusha
in
repnz
fiaddl
and
adc
gs
inc
ss
cmp
stos
and
pop
cmp
popf
pop
stos
jnp
push
dec
je
sub
xor
lret
lcall
rclb
inc
loope
out
mov
rorb
and
aam
fldenv
jnp
xor
fdivl
notl
xchg
cmova
cmp
shrb
sub
cs
lret
push
das
in
js
outsb
and
repnz
cmpsl
adc
int
lahf
xchg
rcl
jp
xor
jnp
daa
in
or
rolb
enter
call
popa
jbe
cltd
das
enter
or
lods
jno
xor
push
dec
mov
jle
std
rolb
lret
scas
dec
fsub
lea
xchg
jle
inc
or
arpl
pop
xchg
pop
loopne
in
xor
mov
lock
sub
repnz
adc
mov
dec
jns
adc
xchg
pushl
xor
bound
or
nop
roll
leave
std
xchg
jle
adc
ret
movsb
sbb
push
sahf
or
testb
sbb
mov
or
or
or
pop
cmp
adc
mov
ja
cmpsb
rorl
cmpsl
xchg
mov
add
in
ss
push
leave
xor
out
iret
clc
mov
push
pop
mov
xchg
pop
mov
bound
loope
push
sbb
js
adc
xchg
xor
adc
sub
loope
pop
and
inc
fsubrl
data16
mov
push
mov
push
pop
fmull
scas
xchg
mov
fimuls
mov
or
push
inc
lahf
jo
lds
fistpll
jb
pop
cmp
inc
mov
cmpsl
stc
es
sbb
push
inc
sub
add
pop
mov
addr16
jnp
push
adc
scas
cmc
cmpsl
push
mov
pop
mov
cmp
gs
movsb
roll
nop
dec
out
push
call
test
xor
sbb
jb
jno
inc
sbb
mov
and
lods
cmp
mov
push
sub
aaa
jae
push
sbb
inc
cmp
int3
mov
rcr
fisttps
mov
cmp
pop
js
nop
mov
inc
and
mov
push
pop
in
cmp
push
xchg
xchg
cmpsl
fwait
stos
or
cmc
nop
xor
lods
mov
ja
stos
mov
cmc
sbb
push
mov
in
jg
mov
lahf
xor
in
mov
mov
cmc
int
icebp
sarb
mov
out
xchg
push
fidivrs
pop
pop
jno
test
lcall
lcall
pop
sbb
leave
xchg
ja
mov
mov
dec
mov
xor
mov
fistpl
add
nop
jns
inc
push
cld
push
das
loope
cltd
popa
push
sbb
inc
adc
stc
imul
xchg
sbb
les
and
cmp
mov
jnp
mov
sub
notb
fcompl
js
pusha
or
add
mov
mov
shld
les
add
ss
nop
ds
pop
sbb
adc
sbb
cmp
fnstcw
scas
out
pop
push
out
cmp
mov
mov
mov
incl
test
and
sahf
stos
outsb
cld
or
movsb
insb
cltd
cmpsl
fdivrl
test
test
stos
nop
in
ds
mov
xchg
shrl
jno
dec
mov
aad
xchg
add
mov
jns
das
std
mov
jecxz
fsubl
xor
sub
loop
and
push
or
push
out
nop
shlb
icebp
mov
scas
mov
mov
repnz
push
outsb
cmpsl
jg
stos
sub
xchg
xor
icebp
xor
into
or
movsl
ja
xchg
fst
popf
aad
xor
sbb
lret
or
shll
mov
lret
ja
dec
add
stos
mov
pop
lods
push
das
lcall
dec
aas
outsl
push
insb
mov
out
mov
leave
adc
push
cmp
xchg
dec
xchg
mov
aad
jb
bound
pop
inc
out
in
sarl
inc
jmp
or
mov
call
stos
nop
mov
iret
inc
cmpsl
pop
sbb
test
dec
pop
ja
cmpsl
adc
mov
mov
xchg
sbb
inc
into
outsl
jp
inc
bound
xchg
pop
sub
jle
sub
sub
push
or
sub
iret
lcall
leave
nop
pop
or
mov
pop
repz
push
sub
sub
adc
inc
mov
orb
and
enter
stos
mov
ss
lahf
iret
pusha
inc
imul
mov
popf
outsb
lods
dec
rcll
int3
adc
js
jnp
jnp
dec
jae
lret
add
enter
pop
mov
pushl
je
rcrl
mov
sub
mov
inc
pushw
inc
repz
popf
gs
aam
iret
jo
fsubr
decl
jl
push
cltd
in
pop
jb
dec
fildll
popf
cmp
push
cmp
setno
icebp
mov
js
inc
adc
push
xchg
push
bound
les
jo
xorl
out
scas
or
sahf
inc
cmp
into
pop
inc
adc
mov
fwait
mov
mov
pop
lods
movsl
dec
mov
js
jbe
inc
dec
lock
jmp
aam
xchg
lret
ss
cmp
pop
pop
sbb
or
xchg
mov
add
out
xchg
or
adc
scas
sbb
mov
out
ret
pcmpeqd
mov
xchg
insb
inc
xor
inc
les
cmc
repz
shrb
rclb
push
lcall
cmpb
jl
inc
xchg
push
pop
jbe
fisubrs
loope
xchg
inc
jne
xor
mov
bound
inc
jae
mov
jmp
or
aaa
mov
jg
nop
and
movl
sbb
call
iret
out
xor
cmpsb
fsub
ret
or
mov
scas
inc
fldcw
mov
or
add
pop
test
cltd
inc
rcll
add
test
xchg
ret
fdivl
movsl
dec
push
loope
sahf
int3
les
fwait
xchg
out
or
sbb
and
xchg
add
add
add
sbb
ss
pop
jle
popf
xchg
loop
stos
int
or
nop
fs
shll
imul
add
in
rol
mov
xchg
inc
rcrl
cmc
adc
inc
movsb
test
xor
mov
cmp
ljmp
repz
std
icebp
aad
mov
into
xor
xchg
movsl
adc
sahf
adc
mov
cmp
fcomps
xchg
or
mov
jne
out
mov
lea
adc
xchg
xchg
add
mov
scas
mov
cs
mov
xchg
scas
jo
scas
call
cmp
push
int
fwait
mov
repnz
fidivrl
cmc
add
push
je
add
je
lahf
xor
mov
bound
and
xchg
push
add
xor
push
pop
xchg
adc
scas
dec
aaa
cmp
xchg
pop
push
push
std
js
sub
pop
pop
sbb
or
mov
mov
xchg
inc
ja
mov
dec
pop
push
fcmovne
ret
pop
mov
xorb
sahf
push
inc
fucomp
jo
inc
popw
out
sub
mov
outsb
jmp
sub
js
fisubs
iret
icebp
subl
cmpsl
shr
pop
repnz
in
cli
pop
dec
cmp
mov
mov
cltd
sub
jecxz
out
icebp
or
dec
movsb
mov
mov
incl
push
or
xchg
adc
pop
lea
sub
or
gs
fisubrl
xor
xor
bnd
lods
jmp
jge
dec
sbb
xchg
xchg
mov
adc
leave
push
xchg
out
gs
mov
push
xchg
cmpsl
ja
push
pop
aaa
pop
mov
xor
loopne
outsl
int3
xorb
xchg
xchg
mov
sub
je
push
cld
gs
xor
add
shlb
xchg
mov
dec
pop
notb
nop
xchg
daa
lds
movsb
mov
push
xchg
subb
aas
inc
sbb
lret
jg
jne
ja
js
push
cmc
xchg
fldt
outsb
push
add
cmpsl
pop
pushf
icebp
aaa
mov
cmpsl
inc
or
pop
xchg
push
lods
mov
jl
mov
faddp
inc
push
in
scas
clc
mov
fimuls
pushf
jecxz
adc
sub
add
rorl
jge
sahf
aaa
pop
dec
sbb
data16
dec
or
xchg
nopl
push
out
push
sti
jnp
inc
add
cmp
xor
push
gs
hlt
sub
xchg
or
lods
lds
popl
and
xor
js
pop
push
sub
out
and
mov
fmuls
jnp
mov
xchg
leave
addr16
dec
sahf
xchg
je
aad
sbb
mov
inc
fwait
icebp
fwait
sub
inc
ss
inc
sub
fnstcw
in
rorb
mov
test
push
cld
cmpsl
sbb
mov
sub
dec
idivl
sub
test
repnz
rcrl
dec
mov
push
sbb
popa
mov
into
fistpll
sarl
in
sub
push
xor
sbb
sub
fidivrl
cmp
adc
ds
ret
ret
aaa
adc
outsl
out
std
add
mov
xchg
mov
mov
xor
cmp
pop
cmpsl
pop
or
dec
ja
cmpsb
hlt
fsubrs
adc
enter
mov
sbb
scas
xor
sub
sbb
aaa
icebp
pushf
sbb
popf
ljmp
sahf
imul
inc
imul
inc
mov
xor
test
push
cli
pop
mov
cltd
movsl
pop
iret
sbb
movsl
push
jne
dec
mov
pop
xchg
push
xchg
jae
or
aaa
test
mov
ljmp
les
dec
inc
pop
fsubl
dec
bound
push
xor
hlt
pop
mov
jecxz
xor
xchg
add
jecxz
sub
shlb
divl
aaa
cs
mov
sbb
xchg
fwait
push
sbb
or
push
push
cmpl
dec
mov
adcl
scas
jmp
jg
mov
movsl
xor
and
jp
nop
cld
xchg
pushf
pop
cli
jnp
cld
push
data16
daa
ja
pop
test
and
add
lods
cmp
lcall
sbb
inc
mov
fcoms
pop
xor
push
adc
popf
aaa
or
and
sarb
nop
jecxz
xchg
push
repz
or
fistpll
divl
mov
push
xor
fsubl
adc
adc
jo
test
test
xchg
adc
jnp
imul
and
nop
sti
fwait
inc
jne
aas
icebp
outsb
mov
jo
jge
push
loop
movsl
arpl
mov
jmp
insb
mov
ds
fsubrl
xor
imul
mov
sbb
pop
lret
pop
outsl
inc
int
inc
aam
mull
dec
xor
daa
cmp
xchg
pop
mov
mov
faddl
mov
in
pop
mov
pop
or
int
lret
out
jmp
shlb
pop
and
sub
loopne
cmp
pop
adc
push
dec
hlt
out
orb
cmp
std
dec
mov
cwtl
lret
das
push
pop
mov
or
and
movsb
mov
and
sbb
push
or
stc
mov
out
mov
cltd
je
test
lock
out
sub
cmp
loop
lahf
flds
cmc
mov
scas
push
xor
xchg
add
xchg
cmpsl
xchg
movsl
test
sub
sub
pop
mov
fs
divb
pop
add
mov
xchg
xor
les
mov
imul
push
inc
pop
cs
movsl
push
mov
rolb
ljmp
mov
inc
and
js
nop
hlt
stos
xorl
shlb
lahf
mov
mov
lea
aaa
push
mov
repnz
or
mov
test
add
push
cs
fldcw
adc
mov
push
pop
sub
imul
lret
shrl
cmp
call
ss
xchg
lcall
xor
push
cmp
into
lret
push
stc
js
fistpll
mov
fiaddl
adc
xchg
in
xchg
in
popa
sahf
xor
and
sbb
mov
std
divb
sti
sub
scas
pop
fidivrs
xchg
shl
mov
lcall
cmpsl
xor
mov
fimull
je
xchg
sbb
inc
iret
fistpll
sbb
cs
pop
push
inc
push
hlt
out
in
adcb
popa
jae
mov
iret
rcrl
pop
nop
test
iret
outsb
addr16
xor
push
adc
into
adc
xor
push
push
push
sbb
lret
lret
adc
movsl
paddusb
adc
std
push
cmpsb
dec
mov
and
adc
and
addl
add
sub
insl
notl
or
test
xor
sub
movl
jecxz
push
cltd
cld
jns
pop
call
pop
sti
mov
or
mov
fsubrl
inc
inc
dec
subl
push
loop
sbb
movsb
sbb
jl
leave
outsl
lods
in
mov
fsubrl
jne
adc
push
fildl
in
xor
into
pushf
adc
inc
imul
lods
mov
mov
xchg
push
in
push
in
and
add
adc
movsl
sub
mov
sbb
in
xor
outsl
adc
rolb
cltd
mov
cmp
stos
dec
sbb
push
int3
cmpsb
push
inc
mov
and
shlb
insl
sub
mov
sbb
mov
mov
and
mov
gs
stos
nop
adc
leave
xor
lret
jecxz
add
pop
mov
pop
stc
fsubr
or
and
scas
daa
nop
lahf
sub
int
fcoml
sbb
fmuls
pop
jae
icebp
mov
xchg
push
sub
scas
dec
pop
nop
enter
imul
scas
in
mov
jl
insb
xor
test
lea
mov
xchg
xor
pop
in
sub
xor
int
mov
pushf
mov
scas
mov
inc
pop
pushl
xchg
and
mov
sbb
xchg
das
movsl
sub
popf
aam
xchg
sbb
cmp
gs
aad
sub
xchg
cmpsl
jo
aad
leave
orb
push
xor
mov
pop
jo
inc
jb
dec
xchg
xchg
adc
xchg
push
sub
sub
stos
adc
xchg
and
rolb
or
jl
fcmovbe
add
and
jnp
out
daa
movsl
mov
cmpsl
hlt
stc
into
roll
sarl
fisubrl
out
xchg
push
pop
repz
inc
cli
inc
mov
mov
or
xchg
pop
leave
add
adc
loop
xor
nopl
sahf
xor
addr16
add
jge
ret
or
sbb
in
into
daa
call
inc
pop
lret
sbb
jecxz
cmpsb
aas
jg
adc
nop
lods
mov
scas
mov
dec
stos
push
mov
jecxz
jg
add
movsl
into
into
cmpsl
iret
push
mov
stos
push
rcl
addr16
mov
xchg
mov
adc
ljmp
movsl
push
xor
addr16
fnstenv
adc
ss
dec
cmpsl
fmul
lock
cmp
jmp
dec
std
cs
daa
lea
rol
fwait
aam
xchg
sbb
js
or
adc
xor
loop
mov
mov
je
and
dec
dec
ja
ljmp
cmpsl
js
popf
outsl
movsl
mov
pop
push
sub
lahf
int3
jbe
cmpsl
lret
into
inc
mov
or
push
add
outsb
dec
pop
stc
xchg
aad
filds
lahf
scas
pop
into
inc
xor
stos
or
mov
mov
ficoms
sbb
sub
ret
dec
mov
cmp
dec
out
xchg
sub
mov
stos
aas
outsb
mov
jnp
ficomps
daa
adc
mov
pop
xor
ret
mov
xchg
leave
and
into
icebp
inc
movsl
push
mov
push
aad
xor
idivb
mov
es
adc
aad
and
iret
adc
xor
jmp
lods
fidivs
mov
inc
push
ds
inc
mov
sbb
xchg
push
sub
xchg
xor
push
jg
aad
arpl
and
jge
nop
dec
add
xchg
and
xchg
mov
dec
jnp
adc
mov
adc
popf
dec
pop
lds
test
pop
jg
int
std
jle
scas
or
icebp
push
or
popl
xor
daa
or
sahf
mov
jmp
mov
dec
jb
sahf
xor
roll
jle
aas
stos
orb
dec
in
pop
sub
into
push
adc
test
out
ljmp
jne
mov
loop
fidivl
jecxz
jecxz
rcl
push
into
adc
test
aaa
mov
push
mov
push
ljmp
mov
sub
adc
lods
adc
jp
mov
shrb
das
sbb
enter
rclb
ret
adc
outsl
mov
cmc
xlat
iret
mov
sub
cltd
or
js
movsb
es
insl
mov
add
fs
cmpsb
sub
mov
lret
mov
xchg
push
adc
movsl
loopne
xchg
mov
in
mov
mov
ret
or
dec
cld
out
outsb
ja
xchg
xor
sbb
add
and
pop
add
mov
xchg
and
mov
hlt
pop
adc
cwtl
leave
jnp
pop
in
cli
fldt
sbb
or
aas
xchg
subb
out
lock
sbb
arpl
sbb
adc
adc
fbld
pop
ljmp
jecxz
push
fiaddl
jnp
push
mov
push
js
or
int
mov
cltd
jle
xchg
jecxz
adcl
xchg
mov
mov
cld
ficompl
add
mov
jae
fnsave
das
in
push
ret
cmpsl
xor
xchg
shrl
push
or
pop
andl
nop
add
popa
and
inc
sti
cmpsb
adc
imul
jne
sbb
xchg
mov
fisttpll
aas
xor
mov
dec
mov
insb
lcall
rcr
loop
sub
int
fs
aaa
jecxz
pop
divb
pusha
jns
sahf
or
or
out
lea
dec
insb
test
daa
std
adc
or
xchg
jmp
aas
call
je
cld
inc
movsb
test
shll
insl
mov
test
adc
jmp
push
mov
xchg
and
stos
mov
xor
aad
lret
fcmovnb
add
pop
adc
jg
sbb
out
cmpsl
mov
adc
sbb
and
stos
cwtl
dec
cmp
int
adc
push
mov
adc
jo
js
stos
xchg
xchg
cmpsl
xchg
test
xchg
lods
mov
addr16
jne
rcr
shll
xor
scas
insb
jg
pop
sub
std
push
or
sub
lret
lds
adc
bound
jg
leave
add
sbb
int
cmc
xchg
rorb
push
or
out
sub
mov
jge
mov
xchg
mov
and
jp
adc
mov
pop
pop
sbb
dec
gs
lret
or
xchg
out
xchg
mov
ss
mov
xchg
and
xor
enter
mov
adc
pop
das
adc
movsl
int
xchg
aad
imul
movsb
out
push
and
aaa
or
mov
mov
stos
mov
pop
lea
ss
xchg
cmp
aaa
mov
in
ss
sbbb
imul
push
repz
jb
cmpsb
cmp
adc
imul
mov
adc
mov
pop
mov
mov
mov
movsb
movsl
leave
ret
repnz
mov
dec
rcl
dec
aas
mov
clc
addr16
dec
ret
push
jmp
sub
gs
sbb
stos
ljmp
imul
sub
sti
adc
repz
push
cmpsl
scas
xor
inc
adc
xchg
into
repz
mov
sub
sbb
cmp
pop
sub
cwtl
jmp
jle
push
cmp
je
xchg
pop
gs
inc
and
xor
iret
jle
mov
imul
gs
inc
jle
push
xchg
sbbl
mov
fstpl
imul
xor
push
cmpsb
jecxz
stos
mov
jnp
adc
xor
aad
lret
xor
iret
test
xchg
and
cli
push
outsl
lret
loope
add
cmc
gs
mov
loopne
imul
push
out
cs
sbb
mov
ds
insl
push
xchg
mov
ss
movsb
shlb
stc
aas
adc
xor
and
cmp
cmp
mov
sarb
xchg
pop
aaa
dec
jbe
inc
mov
cmpsl
lret
cmpsl
push
lods
jb
jne
push
dec
aaa
mov
xchg
xchg
xor
mov
jge
aas
ret
jecxz
enter
adc
adc
leave
sub
arpl
inc
out
dec
push
mov
or
loopne
fildll
fisubl
ret
scas
ja
leave
lds
iret
fcompl
adc
ficomps
nop
push
inc
mov
mov
ss
notb
repnz
stos
mov
mov
icebp
jge
arpl
mov
repnz
fdivrs
and
jge
lods
sbb
jne
adc
mov
loope
aas
ja
mov
je
push
pop
or
fmull
out
xchg
mov
mov
adc
js
cld
out
fbstp
data16
nop
and
mov
fwait
xchg
sub
aaa
les
add
call
mov
ds
sbb
xor
sbbl
add
push
mov
out
xchg
inc
into
mov
jnp
push
jno
mov
data16
std
inc
xchg
adc
dec
cs
and
ret
fbld
sub
aas
sbb
mov
cmp
push
cmpsb
das
repnz
jle
stc
inc
icebp
push
cmp
add
jne
shrl
in
daa
pop
inc
lods
ljmp
xor
ss
clc
ljmp
std
pop
sbb
add
daa
mov
enter
cs
jge
jp
int3
stos
or
sahf
push
xor
lods
jne
mov
out
xor
les
mov
mov
push
stos
sbb
xchg
pop
into
ja
mov
push
mov
into
aaa
and
mov
push
cmp
lea
outsl
xchg
push
pop
xor
inc
push
outsl
sub
sub
sbb
out
popf
sarl
mov
inc
xor
mov
aas
xchg
pop
inc
pop
adc
sbb
jb
stos
push
xor
movsl
clc
sbb
icebp
ss
add
in
aad
mov
loope
lret
mov
mov
bound
mov
jae
or
fdivl
pop
loopne
mov
out
das
int
aaa
mov
xlat
into
cmc
sub
daa
jl
arpl
jg
dec
mov
stc
fldl2e
lret
xchg
ret
das
pop
push
dec
or
pop
outsb
loopne
scas
in
pop
jno
inc
sarb
scas
sub
xchg
cmp
aas
adc
test
adc
pop
xor
in
jmp
les
or
mov
dec
dec
xchg
mov
mov
jge
mov
leave
add
pop
test
ret
xchg
mov
dec
push
xchg
aam
insl
adc
sahf
outsl
orl
mov
aad
mov
push
inc
pop
add
sub
data16
mov
nop
xchg
test
jp
in
sahf
xchg
mov
dec
push
fidivrs
aaa
add
fwait
rcrb
aaa
lds
adc
pop
jg
jmp
scas
cli
and
pop
mov
cltd
cmpsl
rol
jle
dec
push
push
icebp
xchg
add
xchg
jmp
or
mov
mov
sub
es
testl
push
lds
shl
jae
nop
outsl
push
lret
pop
in
jo
mov
jle
xor
mov
sub
adc
fldcw
adc
rcll
and
stos
dec
inc
mov
jp
dec
pop
fdecstp
or
and
icebp
dec
ds
push
lds
aaa
stos
cmp
xor
push
mov
arpl
jo
mov
sbb
out
push
in
or
loope
and
or
das
push
movsb
imul
icebp
mov
mov
jbe
imulb
cmp
push
mov
push
ljmp
or
std
aad
fs
fisubrs
pop
pop
loop
loopne
sbb
es
push
dec
mov
push
push
mov
adc
icebp
add
std
mov
jb
xchg
rorl
push
jne
jecxz
arpl
mov
lret
push
je
mov
les
push
das
adc
dec
hlt
test
push
pop
adc
out
mov
adc
dec
adc
push
push
jmp
jecxz
add
push
nop
aam
aad
mov
popa
int
push
jmp
nop
adc
dec
cmp
xchg
xor
daa
mov
mov
je
or
lret
and
xchg
adc
sbbl
sub
js
and
inc
scas
push
add
aam
jecxz
cmpsl
pop
and
pop
mull
fnstsw
shlb
sub
mov
inc
scas
dec
dec
into
lret
or
mov
js
pop
sbb
aam
inc
fnstenv
xchg
outsb
nop
adc
dec
xor
xor
aas
stos
cltd
into
imul
pop
notl
push
out
add
jno
mov
gs
push
outsb
mov
out
mov
add
pop
sub
or
fidivrs
pop
jl
jne
and
push
sbb
fistpll
inc
jle
dec
push
movsb
mov
je
pop
je
push
outsl
xor
dec
push
push
mov
scas
mov
lret
sub
mov
sbb
dec
mov
ret
mov
out
mov
leave
pop
adc
adc
xor
adc
mov
lret
ret
cltd
mov
push
jl
dec
mov
aad
mov
in
movsb
jbe
inc
push
adc
pushf
mov
std
add
xchg
push
test
notb
dec
lds
daa
out
mov
ret
andl
ficoml
sub
jnp
xchg
jecxz
xchg
lods
jmp
and
and
adc
jl
cmp
mov
test
or
jg
mov
les
jle
mov
adc
add
add
mov
cs
push
ljmp
daa
mov
mov
lds
repnz
or
je
fldt
add
dec
xchg
stos
xor
xor
mov
scas
mov
fwait
aas
shll
mov
cmp
inc
lcall
pushf
sub
lret
iret
or
inc
jge
cmp
jmp
cmpsb
jg
mov
dec
xchg
jle
pop
stos
push
and
hlt
and
arpl
pusha
lods
adc
adc
and
test
sbb
jle
cmc
adc
cmp
pop
stos
push
sub
xchg
adc
sub
xchg
loop
shlb
xchg
fs
incl
xchg
subb
mov
js
pop
lods
fcomi
jecxz
jg
or
cmp
ss
lahf
lods
jle
push
addb
cmp
fwait
mov
jne
outsl
add
xchg
fldl
insl
pop
inc
cmp
pusha
mov
add
stos
xor
sbb
dec
test
fwait
data16
iret
lods
cmp
nop
decb
out
iret
in
out
push
dec
sbb
loop
adcb
arpl
jle
adc
decb
fistps
js
sbbb
xor
test
shll
xchg
push
pandn
scas
dec
sahf
sub
and
xor
xor
cmpsb
aas
dec
cld
cmpsb
stos
fdivr
inc
mov
ret
or
outsl
scas
or
ret
xor
leave
mov
jmp
pop
jecxz
daa
sbb
cli
push
cmpsb
das
sarl
dec
in
cs
mov
mov
jae
imul
jle
mov
ja
movsb
flds
adc
cmp
leave
xchg
xchg
lret
shlb
sbb
xor
aaa
push
xchg
jp
add
jp
mov
fnstenv
addr16
les
cmp
jmp
in
inc
mov
add
cltd
nop
sub
xchg
jae
mov
push
es
inc
or
jbe
imul
or
xor
cmpsl
push
es
js
addr16
push
nop
insb
jne
push
sub
adc
xor
hlt
xchg
xchg
ja
stos
mov
pop
sbb
mov
jg
push
mov
call
mov
xor
xchg
sub
dec
jle
and
ja
sub
mov
jle
icebp
jae
mov
xchg
vcmpps
int
pushf
inc
scas
push
jo
ret
popf
cmpsl
scas
aas
test
and
mov
ja
pop
mov
push
mov
repnz
sub
jae
loope
pop
mov
rolb
mov
sarb
insb
cmp
ja
jle
push
imul
scas
pop
jns
daa
lods
and
out
pop
data16
mov
scas
adc
lods
movsb
test
repz
jns
xlat
inc
and
mov
sbb
into
pop
xor
add
lock
sub
les
adc
jo
nop
mov
shll
pop
cli
mov
test
mov
inc
ljmp
inc
pop
mov
add
flds
jl
cmc
sbbb
add
mov
lock
das
dec
cmp
lods
inc
xchg
mov
fildl
sbb
xor
or
jne
gs
jl
std
mov
popf
inc
mov
mov
scas
mov
pop
daa
sbb
sub
in
or
sbb
rorb
idivb
mov
sub
fdivrp
or
dec
mov
dec
sbb
add
loop
and
jle
fisubrl
inc
or
pop
jmp
repz
or
mov
xchg
adc
gs
inc
jge
mov
lret
cltd
adc
cmp
cltd
leave
xchg
out
mov
daa
int3
aaa
icebp
hlt
mov
int
jmp
fnstsw
mov
mull
jns
jecxz
mov
xor
aaa
decl
fiadds
pop
push
cmp
pop
inc
and
sbb
push
scas
nop
ror
sbb
xlat
stos
sub
xor
notb
push
test
jae
int
loop
fstl
xchg
nop
mov
mov
outsb
out
mov
pusha
or
insb
mov
loopne
ffree
out
rcr
rcrb
mov
fs
mov
aaa
ljmp
push
pusha
std
fsubs
sub
test
push
stos
les
inc
inc
add
mov
daa
js
pop
scas
inc
adc
lods
or
pop
pop
pusha
je
std
mov
jno
mov
aaa
mov
rcrb
pusha
jbe
push
mov
xor
shlb
lds
mov
test
mov
repz
sbb
pop
push
hlt
iret
mov
movsl
ja
int
dec
repz
mov
insb
daa
adc
sahf
inc
mov
fcoml
sbb
popa
es
jne
xchg
mulb
mov
sub
xor
aaa
and
inc
scas
scas
sbb
loope
sbb
mov
jg
inc
fcoms
xchg
aas
loopne
mov
daa
in
sbb
test
out
mov
dec
pop
aam
loopne
stos
pop
or
jne
xchg
loopne
pop
dec
push
sbb
stc
and
inc
incl
addl
adc
out
push
xchg
in
jo
lret
dec
sub
jge
xchg
mov
pop
mov
mov
int
xchg
rcll
push
and
mov
enter
dec
mov
js
mov
inc
sub
das
xchg
movsl
testb
jmp
scas
jecxz
mov
push
or
jmp
dec
out
cmp
or
xchg
mov
mov
sbb
aaa
icebp
aad
aam
fdivs
jg
jnp
mov
and
mov
pop
dec
dec
xchg
lock
cmp
adc
mov
push
js
mov
shl
imul
loopne
stos
cmp
pop
pusha
jo
add
xchg
add
jns
fsubl
inc
mov
pop
aas
mov
sbb
outsb
mov
enter
not
and
adc
in
pop
imul
xchg
jmp
pop
cmp
sbb
shl
push
sub
pushf
popa
mov
pop
push
stos
xchg
jns
in
idiv
sbb
stos
cltd
pop
jnp
nop
push
das
sti
clc
add
inc
mov
rcrb
mov
mov
in
dec
adc
jp
out
cmp
xor
scas
lods
pop
xchg
pop
mov
mov
xchg
popa
jnp
imulb
inc
ret
cmp
outsb
je
lcall
nop
xchg
mov
insl
mov
rolb
dec
sti
nop
sti
xor
scas
push
cmpsl
sbb
sahf
sbb
bound
push
cmp
cli
mov
mov
arpl
pop
std
xchg
jle
adc
push
ja
jnp
testb
out
fiaddl
mov
test
mov
cld
inc
dec
pop
dec
daa
push
ror
adc
scas
addl
pop
shrb
mov
into
fildll
cmc
sahf
in
mulb
loope
loopne
ret
xchg
cmp
aas
ficoml
push
and
sarl
fidivrl
mov
test
rorl
jge
mov
divl
push
mov
idivb
pusha
mov
pop
js
xchg
mov
in
jg
daa
jge
mov
aaa
imul
sbb
scas
lret
jbe
leave
shlb
inc
call
in
push
pop
les
xorb
nop
jno
scas
test
cmp
scas
or
mov
ss
sub
mov
sahf
aaa
out
pop
sub
and
in
and
sub
xchg
test
mov
pand
xor
lods
push
mov
xchg
test
aaa
hlt
fs
sbb
es
sahf
push
jle
jnp
daa
xchg
and
sbb
push
xchg
shlb
mov
stc
mov
js
xor
pushf
xchg
das
push
pop
in
das
ja,pn
xchg
lret
push
ret
cmp
rclb
mov
test
loope
mov
or
cmp
xor
out
push
out
in
sub
sbb
mov
repz
jp
int
loope
inc
cmpsl
add
xchg
pop
loope
mov
cmpsl
xchg
dec
dec
popf
mov
lods
aaa
jmp
pop
dec
add
xorb
adc
and
fdivrs
pop
test
mov
adc
les
andl
pop
add
pop
mulb
mov
roll
int
sbb
mov
stos
sbb
sbb
scas
push
ja
imul
div
push
push
mov
cmp
dec
pop
jl
rclb
dec
mov
aas
sub
mov
push
popf
shrb
in
push
xchg
andl
xchg
ss
jle
jge
out
add
push
inc
ss
adc
roll
adc
movsl
or
lods
sbb
ljmp
or
and
call
pop
cmp
cmp
shlb
xor
jns
pop
enter
test
push
and
inc
mov
ret
cmp
cmpsl
xchg
ja
loope
inc
dec
popf
push
sahf
shll
js
scas
inc
mov
pop
mov
jg
inc
mov
mov
xchg
xchg
or
inc
mov
into
jo
mov
xchg
pushf
loop
dec
adc
mov
mov
aas
cwtl
pop
lock
mov
popa
lahf
lods
lods
mov
inc
scas
xchg
inc
sub
pop
nop
push
scas
adc
adc
shll
mov
call
out
rolb
sbb
sub
imul
xor
int
dec
rclb
fisttpll
std
andb
shrl
ficompl
pop
sbbb
das
xchg
pop
aaa
push
cltd
iret
mov
sub
sahf
lds
lea
cmc
pop
mov
std
mov
dec
pop
int
adc
shll
sbb
ljmp
out
test
add
or
std
sub
stos
stc
fildll
xor
push
xchg
sti
add
inc
inc
call
pop
dec
cmc
in
iret
les
cld
aam
xchg
repnz
test
push
scas
gs
scas
mov
pop
pushf
rorl
mov
jne
pop
xchg
or
iret
jbe
sub
pop
stos
ffreep
and
rclb
cmc
data16
jmp
xor
cmp
and
mov
adc
inc
pop
jge
xchg
pop
push
loope
das
pop
push
scas
dec
cmp
xchg
cld
mov
ret
dec
xchg
fldt
sahf
or
mov
js
sbb
ja
dec
daa
cltd
fmull
mov
xor
pop
pop
adc
xchg
adc
xchg
jp
pop
mov
mov
dec
nop
in
ja
divb
out
mov
xor
fcmove
fs
mov
xor
xchg
xor
lds
xchg
sub
sbb
ss
lret
add
push
gs
movsl
pop
pop
pop
inc
repz
sbb
push
imul
push
arpl
icebp
icebp
push
or
jmp
idivl
push
mov
push
dec
xchg
add
pop
cmp
jmp
adcb
scas
sbb
xchg
sbb
mov
imul
insl
mov
adc
stc
mov
jmp
js
fildll
dec
cmp
or
push
in
cmp
inc
lret
jecxz
leave
rol
std
xchg
pop
mov
imul
mov
mov
shufps
jnp
fs
mov
ljmp
mov
push
movsl
out
mov
leave
jg
push
sti
xchg
loopne
jo
rcll
scas
popa
cld
aas
outsl
nop
mov
or
loop
cmp
add
dec
push
je
mov
cmp
scas
ljmp
mov
sbb
stos
cmp
fstps
adc
jecxz
aad
bound
dec
cmc
imul
jo
bswap
xchg
pop
popa
into
rcll
cmp
push
clc
jle
mov
and
xchg
movsb
mov
pop
lret
xchg
bound
adc
aam
shlb
das
or
mov
or
pop
sbbl
sub
sub
cmp
out
xchg
xor
or
daa
inc
jp
shlb
mov
jmp
pop
stos
jne
punpckhdq
sub
das
and
jl
or
xor
test
xchg
test
mov
add
xchg
mov
orb
pop
nop
imul
pop
std
test
jge
cmp
test
gs
mov
mov
pop
vpsubw
int
inc
ret
push
scas
or
push
mov
xchg
aad
xchg
inc
stos
je
das
fs
jne
loop
insb
mov
or
adc
nop
fildl
cmp
addr16
and
arpl
out
stos
mov
add
cmp
dec
sub
fldpi
movsl
fwait
jl
into
xchg
push
mov
xor
dec
dec
or
out
dec
sub
inc
shrb
inc
sbb
rcl
push
mov
xchg
add
fcoml
lcall
fdivp
xor
addr16
push
mov
jge
push
out
push
xor
mov
inc
xchg
roll
in
jg
pop
outsl
lahf
sbb
inc
movl
or
fldt
clc
xchg
jle
pop
fisttpll
and
stc
pop
sub
cmp
add
mov
in
inc
inc
mov
cwtl
dec
or
lods
inc
test
js
stos
sub
jle
in
lret
mov
mov
movsl
ret
add
dec
lahf
std
jae
xchg
dec
arpl
in
mov
lcall
sbb
sbb
inc
pop
inc
lret
ficoms
jle
or
xor
cs
into
mov
imul
cltd
mov
aaa
insl
leave
or
fmul
mov
dec
cmpsb
addr16
xchg
aaa
cmp
jnp
cmpsl
xor
xchg
movsl
sub
lahf
sarb
int3
fisttpl
ret
cmpsb
fstpl
pop
sbb
jecxz
mov
mov
pop
rcrb
cmp
fcmovnbe
xor
inc
adc
xchg
push
loop
jae
mov
mov
sahf
add
std
ret
push
pushl
mov
add
inc
xor
out
pop
add
sub
add
cmpsb
imul
fmull
aaa
je
push
pop
testl
jge
sub
push
and
nop
pop
cmpb
mov
jbe
pop
mov
cmp
xor
lea
mov
les
sbb
scas
scas
nop
xchg
push
mov
sub
mov
jg
xchg
xor
xchg
sarl
in
mov
frstor
out
lret
cmp
push
jl
jge
push
filds
dec
xor
sbb
dec
mov
int
jl
push
in
lret
pop
mov
adcb
mov
push
jnp
mov
jno
xchg
mov
gs
mov
xor
pop
mov
inc
sti
jnp
rcr
les
push
movsl
into
into
xchg
push
mov
setbe
fiadds
ud2
inc
lea
mov
xchg
inc
dec
fcmovb
loopne
call
dec
enter
mov
je
push
stc
ret
cmpsl
adc
xor
into
in
sarl
insb
jle
push
mov
aam
cmp
xchg
aam
ret
xor
in
loopne
mov
dec
jp
and
xor
and
xchg
cmpsl
aam
lds
scas
test
idivb
scas
test
jmp
adcl
push
xchg
push
mov
inc
xchg
push
and
sub
add
loope
mov
cmp
lret
mov
bound
or
jb
mov
jp
mov
mov
push
subb
popf
dec
jbe
lods
popf
mov
dec
daa
mov
jb
ret
nop
add
lock
xor
cmp
scas
jl
in
push
xchg
jno
mov
and
repnz
sahf
xchg
mov
adc
aad
dec
jae
into
pop
cs
push
mov
xchg
sub
scas
nop
xor
popf
sub
cltd
pop
mov
or
popa
addw
push
or
call
icebp
pop
add
imul
cmp
mov
pop
jl
xor
mov
adc
mov
cmc
push
mov
mov
mov
int
mov
out
lds
jmp
adcl
adc
test
cs
mov
jns
aaa
arpl
adc
mov
adc
mov
fxch
xchg
dec
xchg
pop
inc
xchg
inc
mov
mov
add
into
cmp
ret
rclb
xchg
xor
into
fbld
iret
xorl
adc
lcall
xor
adc
and
in
loope
jae
inc
sbbl
lods
pop
push
mov
mov
jae
mov
jbe
xchg
leave
mov
outsb
cmpsl
xchg
pop
ret
out
insb
or
jo
xchg
cld
addr16
jmp
push
mov
xchg
cmc
lds
aaa
xchg
sbb
ds
imul
notb
mov
xchg
jecxz
xchg
dec
mov
jne
xchg
cmc
xchg
lds
out
faddl
into
xchg
pop
xchg
xchg
testb
aaa
daa
je
pop
inc
push
pop
dec
sbb
icebp
shll
sbb
jbe
mov
stos
cmp
rcr
or
pop
je
sbb
and
inc
subb
inc
arpl
push
push
nop
mov
and
mov
xchg
mov
in
xchg
pop
inc
mov
pop
push
mov
inc
lea
and
pop
pop
and
mov
cmpsb
sahf
xchg
pop
pop
ja
div
fwait
push
mov
push
into
pop
mov
dec
ret
and
pop
or
xchg
cmpsl
cmp
outsl
into
push
js
loop
push
xchg
or
adc
mov
adc
out
scas
add
xchg
cmp
mov
xchg
sub
test
jbe
mov
loope
adc
sub
adcb
add
dec
pop
jg
inc
into
dec
mov
shll
or
jecxz
insb
mov
movsl
out
and
rep
jno
pop
aas
nop
mov
in
out
xchg
dec
adc
cld
ficoml
pop
lds
push
fistps
mov
int
cmc
fists
ja
aam
jnp,pt
mov
dec
mov
jl
scas
push
fcmovb
dec
stos
inc
or
inc
push
icebp
inc
and
and
fstps
int
cmpsb
push
lds
push
xor
fstpl
sbb
in
push
adc
jno
cmp
mov
mov
daa
and
mov
jbe
pop
cwtl
test
fs
dec
movb
gs
sub
cltd
cmpsl
inc
sahf
ficompl
stos
xchg
iret
inc
xchg
mov
pop
mov
fmuls
cmpsl
ljmp
movsl
jge
in
xchg
sbb
cmpsl
mov
push
adc
mov
and
cmp
cltd
sub
ljmp
adc
hlt
adc
fincstp
lods
movsl
fsubl
repz
xchg
je
scas
add
add
inc
jnp
xlat
dec
jecxz
std
out
jmp
outsl
sub
mov
adc
add
ja
pop
jecxz
mov
mov
push
and
cmp
aas
inc
pop
es
mov
push
push
xchg
jecxz
enter
cmpl
cmp
movsl
faddp
xchg
cmp
out
jl
mov
mov
cmpsb
inc
inc
cld
cmp
call
filds
or
cmp
lahf
mov
enter
xchg
jo
sub
sbb
in
add
cld
std
jecxz
repz
imul
and
xorl
xchg
adc
or
fisttpll
sub
in
aas
xchg
test
sbb
push
jmp
fisttps
sub
icebp
sti
addr16
mov
shll
xor
add
mov
mov
data16
scas
xchg
sbb
xchg
repz
imul
test
push
push
inc
xchg
xchg
js
and
xchg
sarl
into
inc
mov
outsl
insb
jne
jmp
lcall
out
or
xchg
adc
sbb
and
js
in
lcall
jnp
test
xchg
iret
jnp
push
out
push
add
mov
pop
add
movl
mov
jl
push
adc
cwtl
mov
sbb
adc
pop
int3
test
fbld
imul
jle
xchg
aad
or
xchg
cli
repz
xchg
mov
sbb
lahf
mov
push
int
in
enter
test
xchg
or
and
xchg
add
sub
fs
xchg
aaa
push
out
or
cmc
adc
xor
js
sub
cltd
mov
call
xchg
jp
mov
and
repz
xchg
adc
and
cmpsb
popa
mov
faddl
gs
xor
sub
pop
ss
mov
fists
xchg
repnz
mov
jg
out
mov
mov
xchg
bswap
mov
cmp
lret
jmp
and
subb
test
fnstcw
push
leave
mov
mov
xchg
dec
pop
mov
scas
fs
lret
jnp
and
lret
mov
std
push
fistpll
fildll
sarb
sbb
sbb
out
ljmp
jb
jmp
stos
test
mov
dec
jmp
push
mov
orb
xchg
in
call
and
dec
sub
push
in
jae
data16
and
xchg
cltd
lea
dec
mov
ss
ss
ret
sbb
sub
push
mov
outsl
jne
fsubs
jo
mov
inc
hlt
xchg
dec
sbb
loopne
or
gs
test
mov
xchg
push
outsl
jle
daa
inc
loope
decl
mov
loope
push
shrb
push
push
ss
ja
fwait
jo
fists
rclb
les
mov
mov
mov
jmp
xchg
xor
sub
mov
inc
sbb
sarb
jecxz
adc
adc
adc
loop
lods
js
rorl
rorb
xchg
hlt
mov
cmp
cmc
test
adcl
xchg
stos
pop
xchg
xchg
das
rorl
movsb
addr16
pop
push
mov
shlb
enter
mov
adc
psllw
xchg
cltd
mov
js
cli
incb
xor
fsubrl
int
rorl
adc
lret
lahf
in
jae
dec
scas
ret
daa
and
mov
int3
divb
jg
pop
push
out
inc
adc
into
test
push
push
inc
arpl
jns
daa
jmp
mov
ss
mov
leave
or
int3
data16
xchg
daa
push
dec
pextrw
push
out
jae
data16
mov
mov
jae
mov
fistpll
clc
xchg
push
mov
movsb
push
das
icebp
repz
adc
and
and
outsb
lods
inc
maxps
arpl
fmull
pop
imul
shlb
bound
adc
xchg
lret
into
add
mov
pop
fwait
rep
xchg
xchg
and
mov
jg
dec
inc
ja
mov
cwtl
inc
push
xor
mov
aam
in
pop
nop
inc
xchg
ret
ds
data16
xchg
add
ficoms
jg
pop
nop
jae
bound
into
aam
adc
int3
scas
gs
subb
ss
outsb
sub
mov
icebp
cld
mov
daa
movsl
push
mov
xchg
pop
mov
xchg
or
shll
xchg
dec
pop
dec
or
xchg
dec
dec
pop
jne
ror
and
nop
add
inc
push
imul
cs
test
and
adc
xchg
mov
out
lret
mov
adc
and
dec
mov
mov
adc
dec
into
ja
scas
dec
out
push
sbb
push
mov
adc
rclb
out
jecxz
test
jg
pop
sub
xor
out
data16
jge
fstps
mov
push
fcoml
aaa
mov
dec
pop
imul
in
add
push
inc
jbe
cmp
roll
int
repnz
decl
pop
pop
mov
xorl
xor
pop
mulb
adc
ds
sbb
jno
xchg
std
aaa
shlb
outsl
dec
xor
cmp
and
std
xor
cld
sarb
mov
adc
ss
aaa
adc
mov
xchg
mov
pop
jns
jb
dec
or
and
xchg
xor
movsl
jne
ret
mov
mov
push
mov
imul
cmpsl
xchg
fs
push
ret
outsl
adc
or
adc
or
subb
mov
mov
pop
test
mov
jecxz
popf
mov
and
sub
fistpll
mov
xor
fnsave
iret
mov
xchg
xorl
dec
rclb
adc
insl
mov
mov
vpsrad
push
xchg
sbbl
add
xchg
push
cs
fcoms
xchg
mov
dec
cld
loopne
addr16
adc
enter
cmc
adcl
lods
pop
and
sbb
xchg
adc
push
adc
mov
sub
adc
xor
adc
das
xchg
rcll
cld
add
push
lahf
ja
test
fidivl
fsubs
xchg
movsb
xchg
je
pop
push
addr16
aaa
movsb
xor
pop
cmp
jnp
aam
into
mov
ss
leave
adc
mov
mov
or
xchg
bound
ja
lret
cmp
out
cmp
mov
test
cmp
mov
xchg
pushf
divl
add
icebp
or
xchg
xchg
sub
mov
jns
pop
inc
ljmp
in
sub
in
negl
push
mov
rol
nop
dec
and
push
js
jne
xor
adc
popa
cmpsl
push
push
mov
imul
aad
into
jnp
xchg
xchg
or
pop
xchg
addr16
add
xchg
aas
mov
scas
xchg
mov
push
je
jae
into
sub
or
stos
cmpsl
fwait
inc
cmpsl
cmc
hlt
fucomip
out
loop
scas
push
sub
fwait
decb
add
mov
stos
push
js
cmp
inc
xchg
sbb
add
xchg
sbb
mov
mov
sbb
push
loopne
ret
movsb
mov
mov
jp
push
mov
xor
scas
xchg
xchg
mov
sbb
lret
mov
push
lods
xor
fisttps
pop
out
inc
sub
cmp
ds
sbb
idivl
btc
sahf
addr16
fsub
push
aaa
ds
pause
pusha
sbb
int
scas
idiv
and
lds
xor
imul
movsl
sti
in
lods
mov
sub
sub
fistpll
cmp
mov
xor
xchg
std
pop
cmpsl
sub
scas
and
das
pop
or
std
fucomi
pop
test
adc
inc
xor
adc
xchg
and
sub
das
test
lods
jnp
sbb
mov
xor
push
jae
sbb
sub
inc
sub
lret
mov
es
cmp
jbe
add
cwtl
negl
cli
cmp
mov
dec
movsl
dec
sahf
in
fs
xchg
and
xchg
jp
and
jmp
xchg
das
lods
rclb
mov
jbe
cmpsb
call
adc
into
int3
das
cltd
scas
xchg
sarb
test
mov
outsb
sahf
out
cmpsb
into
ss
mov
imul
mov
dec
xorl
push
loopne
ror
rclb
xor
mov
inc
aas
aad
lahf
jle
bound
cmpsb
hlt
cs
aam
iret
pop
in
xor
mov
mov
in
stc
nop
push
jno
aad
xchg
loop
xchg
repnz
gs
in
neg
inc
lahf
adc
shll
cmc
clc
daa
xchg
shrl
cmpsl
xchg
scas
jg
and
sbb
and
testl
or
push
xchg
and
adc
cmp
mov
ret
ficoms
adc
lods
cwtl
mov
sub
ffreep
jmp
out
data16
rclb
push
sub
leave
pop
push
js
sbb
cmp
jno
push
cs
sbb
fisubs
imul
push
or
cmp
xor
mov
dec
in
mov
adc
xor
ljmp
bound
adc
adc
xchg
mov
inc
fidivrs
push
jnp
cmc
or
add
sbb
xor
into
shr
lds
out
leave
leave
mov
push
movsl
jno
adc
mov
jno
lea
jae
jae
ss
adc
dec
cld
push
jmp
xchg
mov
xor
xchg
push
lahf
push
icebp
sub
adc
stc
adc
jge
adc
mov
xor
dec
mov
hlt
mov
jg
test
dec
das
jno
fisubs
pop
cmp
aas
pushl
imul
add
popa
fildll
mov
lds
adc
pop
cli
into
jmp
dec
push
fs
and
add
loopne
outsb
dec
pop
mov
and
test
lea
movsl
jbe
js
cmp
jo
cmc
adc
add
mov
or
adc
push
sub
push
jae
lcall
xchg
xor
mov
and
mov
xchg
pusha
sbb
into
xchg
push
push
xchg
popa
xor
sub
popf
adc
out
adc
int
loop
push
aas
mov
lds
mov
xchg
loop
push
mov
movsb
cmp
repz
xrelease
enter
cmpps
pop
xchg
xchg
stos
mov
cmpsb
and
mov
lds
rclb
xchg
add
adc
rcrl
mov
inc
xchg
dec
bound
aad
rcll
push
icebp
mov
stos
rcl
mov
loope
sarb
xchg
rol
movsl
daa
rcl
xchg
inc
xchg
push
or
mov
push
aam
dec
adc
push
push
xchg
adc
ret
dec
insl
push
aaa
push
pop
into
adc
loopne
sbb
out
into
push
nop
jmp
jg
psraw
rcrb
sahf
pop
lods
push
xchg
out
movsl
mov
mov
adc
xor
cmpl
stc
dec
jg
adc
sub
shlb
xchg
xchg
add
push
jo
adc
push
mov
mov
cmpsb
stos
inc
adc
mov
push
xchg
addr16
hlt
xchg
mov
imul
ret
push
xor
cwtl
ret
dec
lock
dec
adc
pop
cmpsl
sub
mov
sbb
mov
mov
and
pop
jecxz
push
push
nop
mov
lret
incl
das
sbb
outsb
cs
pop
sbb
mov
push
mov
push
lret
add
mov
dec
roll
mov
stos
push
fistps
jae
cmc
and
mov
or
je
inc
or
xchg
inc
jae
gs
xchg
nop
mov
push
rcll
mov
xchg
xchg
scas
mov
adc
xlat
andl
adc
and
out
into
xchg
notl
or
xchg
xchg
push
mov
xchg
xor
out
push
stos
mov
xor
incl
dec
adc
call
xchg
daa
push
push
mov
adc
mov
jbe
pop
pop
out
xchg
sbb
adc
xor
jecxz
std
rclb
fiaddl
sub
add
pop
out
subb
in
sbb
mov
rcl
dec
out
out
lock
pushf
psrlq
idivl
mov
pop
add
dec
push
mov
push
push
xchg
lds
xor
int
adc
in
loope
jnp
push
sub
pop
insb
xchg
xchg
jg
and
jb
sti
push
mov
adc
lds
mov
mov
addr16
loopne
cwtl
jns
inc
pop
je
xchg
div
lods
dec
mov
push
cmp
test
sbb
pop
fstps
lea
mov
movsl
int
fxch
daa
cltd
jl
cld
mov
sub
repz
inc
pop
push
inc
inc
push
mov
rol
loop
push
sub
xlat
mov
shlb
cltd
ljmp
ret
fidivs
push
ret
cmpsb
xchg
aas
xchg
xor
inc
dec
push
adc
data16
xchg
push
lods
xchg
push
sub
jno
outsl
fiadds
add
jne
into
sahf
cmp
cmc
ficoms
jg
lea
adc
pop
dec
fisttps
push
iret
mov
jle
xchg
mov
adc
fs
inc
add
gs
mov
inc
lret
addr16
xchg
mov
addr16
push
xchg
mov
mov
push
data16
push
into
mov
xchg
inc
xchg
inc
pop
mov
dec
xchg
xchg
xchg
rcl
lret
jg
int3
ja
and
jbe
or
bound
xchg
sarb
sub
std
fcoml
jb
push
test
adc
xlat
mov
xchg
lds
into
adc
mov
cli
movsl
xchg
mov
push
and
sbb
pop
jo
push
xchg
adc
mov
mov
dec
push
adc
int
iret
testl
xlat
mov
mov
mov
pop
aam
sti
jmp
push
xchg
int3
adc
jge
jae
push
xchg
into
push
push
daa
xor
push
adc
add
icebp
out
subl
push
cmp
pop
xchg
das
pop
push
xchg
clc
mov
push
hlt
ja
lea
jo
test
sti
aaa
mov
fmull
stos
gs
push
pop
xchg
cwtl
sbb
sbb
pop
lea
ja
adc
out
div
mov
scas
push
or
dec
sbb
mov
iret
lds
xchg
movsb
mov
xchg
adc
stos
push
hlt
xchg
cmc
dec
push
xchg
stos
push
mov
dec
adc
xchg
mov
rcll
adc
addr16
xchg
adc
xchg
ja
sub
addr16
mov
xchg
push
mov
ret
mov
xchg
aam
lds
xchg
repnz
test
call
aam
mov
push
repz
ss
push
addr16
shrb
push
push
jle
call
mov
lods
adc
shrl
rorb
mov
mov
repz
cmpsl
mov
jne
test
jnp
jne
push
push
xchg
test
dec
add
dec
xchg
adc
ret
test
arpl
push
into
sbb
xor
movsl
repz
xchg
push
stos
push
xchg
xchg
xchg
xchg
imulb
dec
mov
shll
adc
sti
xchg
jb
mov
shll
adc
addr16
aaa
lds
jle
push
mov
lods
loop
addr16
dec
push
xchg
push
push
ret
ret
xor
into
aam
movsb
ret
adc
test
push
push
jae
movsl
call
sahf
nop
mov
xorl
add
mov
jne
push
mov
jg
mov
ret
add
daa
inc
lds
lds
pop
int
adc
outsl
push
nop
sbb
aad
adc
xlat
mov
adc
cmp
xchg
inc
fnstsw
xchg
shlb
dec
adc
out
movsl
popf
stos
mov
lret
fcoml
int
test
shrl
xchg
shlb
xchg
nop
push
mov
and
push
adc
aad
pop
rorb
mov
xchg
rcll
aaa
adc
lret
inc
xchg
stos
pop
arpl
xchg
mov
lret
push
xchg
fs
mov
adc
addr16
xchg
mov
pop
shlb
sub
xchg
sbb
jo
pop
pop
push
and
add
and
inc
xchg
inc
hlt
sarb
sbb
test
lock
imull
jg
push
out
das
test
xchg
arpl
jp
pop
ret
test
mov
stos
stc
cltd
mov
sub
jbe
fwait
dec
fcoml
lcall
xchg
xor
pop
inc
stos
lds
sbb
jle
jg
push
dec
xlat
jg
xor
gs
flds
inc
mov
inc
cs
mov
sbb
mov
mov
pushf
clc
add
lret
or
push
dec
mov
xor
pop
ja
pop
inc
dec
rcll
xchg
mov
pop
cld
fisttps
int
nop
push
inc
sbb
sahf
cld
daa
dec
iret
jno
notb
aas
in
call
adc
push
pop
fxch
adcl
pop
mov
sbb
and
push
xor
push
clc
lcall
and
add
daa
sub
pop
stos
xchg
mov
xchg
adc
test
xchg
loope
inc
mov
js
adc
adc
push
push
lcall
and
movsl
addr16
push
lods
jb
xchg
mov
in
std
adc
lret
addr16
sahf
lcall
pop
cmpsl
push
dec
mov
lods
aaa
xor
cmc
xor
adc
dec
addr16
jecxz
sbb
aam
fstl
mov
nop
xchg
rolb
movsl
xor
pop
adc
push
cmpsb
and
adc
lret
push
rorl
icebp
xchg
lret
xchg
pusha
mov
push
pop
mov
cmp
shlb
dec
push
push
jmp
xchg
jl
in
jecxz
enter
and
icebp
jp
push
sbb
into
xchg
pop
mov
dec
aad
in
mov
push
mov
nop
pop
mov
fs
push
mov
lds
jg
sbb
or
xchg
pop
aad
shlb
mov
push
shrl
xorl
pop
push
lods
loopne
push
push
dec
adc
aad
adc
xchg
nop
xchg
mov
pop
jle
jno
in
adc
mov
cmp
xchg
out
shr
mov
jne
aas
push
pushf
negl
push
std
dec
in
xchg
test
push
lds
inc
imull
sbb
in
mov
sub
push
jge
rclb
xchg
das
aaa
lea
fldcw
loope
xchg
cmp
mov
xor
rolb
cmp
mov
mov
inc
inc
je
push
rcll
icebp
lret
dec
adc
xchg
repz
repnz
push
or
adc
in
adc
push
pop
jl
int
inc
mov
xchg
xchg
test
stos
dec
lds
lds
jo
sub
rorl
movsl
add
pop
xchg
mov
push
sub
push
nop
lahf
imul
xchg
pslld
xchg
xor
sub
lods
xchg
idivl
add
cld
dec
adc
std
hlt
daa
mov
cmc
ja
push
mov
add
adc
push
aas
mov
in
popa
shlb
xchg
aad
aad
into
out
mov
inc
xchg
mov
loopne
cmpsb
nop
push
leave
push
xchg
loope
int3
xchg
mov
aam
daa
rolb
pop
add
pop
xchg
push
sbb
pop
push
lret
lods
xchg
inc
xchg
rcll
movsb
aad
push
adcl
adc
aam
adc
push
pop
xchg
adc
mov
fbstp
mov
xchg
daa
push
inc
loopne
mov
push
je
adc
xchg
cmpsb
fst
xchg
pop
push
adc
lcall
xchg
lret
loope
mov
scas
rcrb
ret
mov
rcl
jg
sbb
jne
inc
push
aam
adc
sub
inc
lock
rcl
dec
daa
into
in
xor
xlat
rorl
jg
test
sbb
jo
mov
xchg
testl
jg
xlat
xchg
lds
into
in
mov
int
push
loope
iret
rcll
mov
mov
loop
insl
adc
sub
decl
push
and
adcl
inc
push
lods
idivb
push
pop
mov
in
xor
or
mov
in
xor
push
fs
xchg
xchg
out
xor
pop
inc
aam
xchg
mov
aad
adc
push
insb
mov
int3
aaa
bound
sarl
xchg
mov
lock
lods
xchg
add
jnp
in
pusha
shl
shrb
mov
inc
fs
aad
xchg
into
adc
gs
mov
ror
data16
rorb
pop
ffreep
xchg
mov
addr16
into
xorps
pusha
cmc
arpl
xchg
xchg
cmp
pop
scas
lcall
jl
push
xchg
cmp
dec
rcll
rorl
dec
shlb
pushl
out
testb
cmc
sbb
xchg
dec
mov
and
ja
inc
push
stos
into
xchg
mov
and
mov
jl
shll
mov
sub
mov
xor
jg
mov
push
ss
jo
mov
xchg
out
mov
ja
mov
aas
into
rclb
xchg
lock
jae
pop
pop
out
xchg
xor
push
jl
jg
aam
xchg
out
mov
xchg
stc
jg
insl
sarl
shlb
lds
into
sbb
loopne
cmp
lock
leave
and
movsb
sbb
cld
lock
lds
mov
sbb
lds
mov
sbb
sbb
xadd
push
cmp
and
lds
mov
sub
sbb
push
shll
cmp
int3
das
enter
pop
jl
jecxz
adc
push
xchg
les
jge
and
push
iret
into
xchg
mov
movb
xchg
dec
and
leave
movl
addr16
notb
cs
push
xor
xchg
enter
mov
xchg
xchg
push
test
xchg
rclb
lret
dec
xchg
notb
xor
enter
scas
dec
inc
cmp
xor
xchg
shll
mov
mov
push
sub
sub
dec
js
add
xorl
xchg
mov
lods
testb
xchg
fs
into
pusha
xchg
xor
xchg
mov
xor
adc
push
sarl
pop
test
int
push
int3
xor
mov
aad
fisttpl
xchg
add
lcall
lds
dec
aad
nop
sarb
mov
pusha
push
push
into
xchg
push
or
bound
repnz
jo
mov
adc
xchg
shll
cli
inc
xchg
dec
addr16
cmp
push
jb
loop
pop
ljmp
mov
aad
pop
pop
or
rdtsc
xchg
push
mov
data16
rcll
mov
out
xchg
add
stos
push
xchg
jg
lds
dec
xchg
xchg
sahf
mov
ja
shlb
dec
nop
lret
xchg
mov
aaa
jge
jg
xchg
daa
fst
push
mov
sarb
sbb
push
push
xchg
orl
cmp
xor
cmp
mov
jbe
in
jge
in
cmp
xor
cmp
call
jge
in
sahf
ror
out
enter
dec
inc
adc
into
sbb
push
pop
mov
into
bound
adcl
xchg
or
into
xchg
jecxz
dec
push
push
mov
in
sub
rcrl
push
xor
push
mov
rol
cwtl
incl
jnp
xchg
jne
push
cmpsl
nop
push
xchg
pop
decb
nop
mov
xchg
call
shll
sbb
stc
jg
xchg
mov
mov
ret
mov
or
jg
sub
jbe
jb
jg
cmp
adc
adc
js
scas
mov
xchg
fdivr
imul
mov
rol
rol
xchg
jo
lret
jg
xlat
inc
adc
orps
xchg
xchg
nop
xchg
inc
cmpsl
aad
aad
outsl
xchg
mov
cmp
aad
xchg
xchg
lret
dec
cmp
icebp
push
push
xchg
adc
mov
stos
add
mov
adc
ja
rcl
inc
push
xchg
mov
sub
scas
push
xlat
int
or
xchg
movsl
ds
add
aad
mov
xchg
xlat
nop
xchg
fs
addr16
nop
clc
mov
jae
rol
push
cmpsb
xchg
or
jnp
xor
jecxz
adc
mov
ret
lds
push
lods
and
adc
xchg
cmpsb
mov
adc
pop
arpl
rol
push
sub
aaa
lods
jg
push
xchg
push
lret
cmpsb
or
addr16
push
scas
add
das
shll
mov
jb
and
aaa
sbb
les
dec
cmc
push
xchg
push
mov
std
push
loopne
ljmp
popl
repz
mov
loop
mov
or
push
xor
push
lds
fdivrl
xchg
inc
movsb
push
adc
adc
adc
sahf
into
in
in
xchg
xlat
push
push
xchg
out
dec
xor
ja
nop
adc
xchg
mov
and
mov
adc
loopne
sub
push
repz
push
rcl
xchg
nop
mov
and
push
adc
mov
rorb
aad
adc
push
xchg
xchg
jecxz
lds
into
push
push
in
adc
pop
xchg
aad
out
popa
jle
dec
rclb
addl
pop
jmp
adc
xchg
xlat
icebp
fsubrl
movups
scas
rcll
xlat
mov
push
loop
aad
adc
mov
je
mov
xchg
push
and
sub
out
popl
xchg
int3
jnp
mov
adc
out
pop
pop
push
dec
test
imul
pop
loope
cs
mov
sub
scas
mov
pop
add
jbe
jb
js
aam
sbb
xchg
mov
xchg
lret
mov
pop
repz
les
dec
xchg
push
jb
and
lds
lea
push
rclb
aas
in
inc
xlat
inc
fidivs
das
mov
outsl
jle
int
outsb
aas
out
arpl
push
xchg
or
outsl
push
mov
sahf
xchg
add
jo
shll
pop
mov
out
xchg
lds
rcl
push
lea
mov
mov
push
mov
cmc
mov
add
les
ret
jmp
aas
mov
dec
jg
cld
ds
dec
aam
mov
xor
push
jo
xor
aad
out
jbe
icebp
xchg
xor
xlat
xchg
push
dec
and
aam
xorb
push
dec
add
mov
cmp
pop
ffree
movsl
mov
xchg
xchg
sbb
pop
and
lcall
lcall
pop
fnstsw
mov
out
pop
dec
add
dec
jecxz
mov
out
pop
dec
test
xchg
mov
xchg
mov
dec
lds
aad
or
xchg
push
cld
cmpsl
adc
push
lds
fisubs
lods
add
mov
scas
jbe
sbb
pop
dec
push
stos
mov
add
pop
addr16
popa
xlat
push
into
sarb
xchg
push
jg
push
or
shlb
nop
sub
xchg
dec
mov
push
gs
dec
push
xchg
adc
ret
icebp
inc
test
ja
mov
stos
xchg
jbe
lret
xchg
mov
pop
mov
dec
movb
dec
push
shll
mov
adc
and
xor
inc
ret
popf
jnp
into
jae
pop
adc
jne
lds
mov
inc
mov
mov
mov
xchg
cmc
push
push
out
mov
arpl
mov
mov
rcl
push
mov
pop
push
push
xchg
fs
jg
inc
mov
jae
gs
sub
test
ds
mov
cmp
lock
adc
jo
arpl
dec
ds
xor
jnp
dec
fdivrs
mov
lock
inc
mov
mov
or
xchg
push
mov
mov
xor
je
fstpt
mov
outsl
lock
lock
mov
xor
pushl
aaa
into
xchg
push
mov
into
roll
push
pushw
adc
xchg
mov
stos
or
push
push
pusha
jne
aam
cmp
popa
addr16
cmp
rol
bound
jle
jg
scas
add
mov
pop
pop
bound
pop
rcll
adc
mov
dec
leave
bound
rorb
push
mov
movsl
outsb
je
xchg
pop
or
aad
dec
mov
into
xchg
jle
mov
ss
aaa
xor
jb
mov
jae
outsb
mov
jle
cmpsb
aad
xchg
jbe
inc
mov
mov
std
into
cmpsb
push
adc
mov
xchg
mov
pop
mov
dec
pop
es
jbe
and
mov
adc
xor
push
mov
mov
or
or
scas
in
adc
mov
hlt
das
addb
cmp
into
and
xchg
nop
mov
add
daa
dec
rcl
xchg
xchg
test
inc
cmc
sarb
mov
movb
aaa
into
jp
rclb
xchg
mov
in
push
mov
jbe
mov
adc
cmpsb
shrl
nop
push
inc
xchg
stos
inc
addr16
cmc
xor
mov
dec
aad
into
adc
dec
cmp
xchg
mov
rorb
mov
sti
mov
idivb
dec
xorb
adc
arpl
setb
daa
xchg
outsb
adc
xchg
adc
mov
or
mov
xchg
aaa
popf
test
cmp
xchg
fdivl
push
xchg
mov
pop
loopne
aas
shll
test
adc
or
shlb
mov
fdivl
shrl
lock
aad
or
cmp
or
lods
and
inc
push
mov
ret
mov
aam
arpl
jg
pushf
push
push
xchg
movsb
or
jb
ss
mov
xchg
adc
xlat
fwait
push
fisttpll
test
out
xor
push
push
das
rsm
push
mov
out
out
lcall
and
into
outsb
adc
movsl
xchg
into
shr
inc
lods
mov
lahf
pop
aaa
push
inc
inc
sti
xchg
xchg
xchg
push
push
repnz
vshufps
cld
aaa
xchg
push
aad
loop
test
push
aaa
push
addl
mov
jecxz
xchg
repz
push
hlt
into
pusha
notb
push
jle
mov
fwait
mov
inc
nop
dec
sahf
bswap
adc
daa
pusha
pop
int
inc
jbe
inc
or
lret
aad
aaa
out
xchg
loop
xchg
xchg
cmpb
mov
addl
fldenv
shrl
push
addb
add
outsl
shlb
lock
or
ret
or
scas
dec
jp
pop
jl
xor
mov
cmp
in
push
push
mov
xchg
adc
nop
cmpsb
jae
push
stos
mov
mov
xchg
xchg
xchg
push
mov
xor
aaa
add
xchg
dec
dec
cmp
mov
xchg
mov
inc
imul
push
mov
loope
into
push
ja
adc
sarb
loop
pusha
push
xchg
adc
add
ja
lret
aaa
cmpsl
xchg
icebp
lret
enter
les
ffreep
aaa
push
dec
gs
xor
xchg
push
or
inc
cmpsb
and
jb
jbe
mov
xor
jbe
aam
negb
repz
xchg
rol
rcr
adc
aaa
popa
adc
movsl
xchg
add
stos
sub
push
xchg
fdivrp
mov
loop
aaa
adc
inc
mov
add
cmp
cmpsb
in
mov
lret
aaa
push
xor
jp
shlb
push
xchg
adc
mov
xchg
adc
xchg
xchg
test
mov
push
push
add
stos
cmpsl
aad
or
aaa
mov
call
xchg
xchg
in
iret
movsb
nop
cmovg
shll
aad
mov
es
mov
mov
push
aad
and
xchg
xchg
and
adc
mov
mov
xchg
pop
dec
push
inc
hlt
mov
add
mov
xchg
ret
dec
inc
mov
xor
ss
xchg
daa
dec
push
push
cld
movb
push
mov
mov
xchg
adc
adc
je
mov
xchg
dec
push
push
inc
mov
hlt
mov
xor
mov
test
inc
mov
adc
mov
xchg
xchg
dec
push
cmpsb
mov
mov
lret
adc
shlb
enter
push
loopne
popa
mov
jb
add
mov
xchg
adc
mov
or
ja
pop
mov
inc
add
fs
xor
mov
inc
mov
mov
mov
xchg
mov
repnz
mov
adc
mov
xor
push
inc
xchg
mov
mov
cmp
mov
adc
mov
xchg
mov
xor
pop
jnp
mov
inc
xchg
pusha
dec
and
add
inc
xchg
mov
xchg
je
in
jne
aad
mov
inc
addr16
mov
dec
xchg
xor
xor
inc
push
scas
mov
push
daa
xchg
xchg
adc
lret
addb
push
xchg
mov
and
xorb
adc
mov
inc
mov
pop
inc
mov
inc
int3
mov
xchg
jno
rol
push
movsb
cmc
dec
data16
lods
movb
inc
push
cmpsl
and
jecxz
inc
xchg
hlt
dec
movsl
data16
add
mov
inc
and
in
xchg
lods
fisttpl
es
jbe
mov
mov
push
repz
je
divb
movsb
inc
repnz
xchg
add
mov
xor
inc
mov
push
xchg
cmc
dec
jne
hlt
mov
xor
mov
and
rol
mov
and
and
xchg
jo
dec
adc
jno
adc
repnz
xorl
cmc
mov
cmpsl
xchg
adc
mov
xchg
icebp
dec
ret
mov
inc
mov
inc
xchg
mov
xchg
jbe
pop
mov
xor
loope
bound
jecxz
xor
test
mov
xchg
mov
mov
aad
orb
xchg
mov
adc
jae
shll
lods
ret
subl
cmpsb
mov
xchg
lds
aam
je
mov
xchg
rorl
jo
cmpsb
and
inc
mov
inc
inc
mov
push
xchg
mov
mov
xchg
mov
inc
xorb
cmpsl
dec
mov
dec
xchg
in
push
mov
and
mov
xchg
orl
mov
mov
cmp
aad
data16
push
inc
cmpsl
scas
and
nop
lock
icebp
mov
xchg
repnz
add
mov
adc
mov
push
iret
das
je
adc
in
mov
loope
push
inc
shlb
xchg
popl
dec
xchg
hlt
mov
repz
repnz
iret
movups
xor
rcll
scas
dec
iret
jg
ja
mov
xor
mov
inc
dec
aas
mov
pop
aaa
lcall
ja
cld
mov
bound
rorl
outsl
dec
roll
inc
xchg
aam
and
mov
push
jae
ja
push
push
movsb
lds
pop
dec
mov
dec
aad
xchg
repz
mov
dec
add
mov
dec
mov
inc
js
adc
dec
test
mov
aad
insl
inc
add
dec
jecxz
mov
inc
add
call
fists
inc
out
jle
es
mov
pushf
mov
mov
xchg
dec
dec
repnz
lcall
clc
mov
xchg
dec
dec
notl
cmc
movb
xchg
dec
xchg
in
jl
adc
stos
inc
mov
inc
jb
or
shlb
in
mov
xchg
ss
les
fwait
xchg
push
dec
or
ret
xor
popa
xchg
add
or
outsl
in
fimuls
notl
adc
jae
mov
stc
mov
xchg
loopne
dec
not
scas
fnsave
inc
lds
add
jae
add
mov
xchg
cmp
xchg
mov
inc
mov
inc
sub
mov
sub
bound
inc
sbb
xchg
mov
xchg
inc
dec
mov
aam
inc
mov
and
mov
xchg
popa
dec
add
push
push
fs
dec
je
pop
xchg
inc
cwtl
push
ds
pop
outsl
xor
xchg
in
sub
dec
push
pop
idivl
int3
push
mov
out
jg
popf
push
mov
push
add
fucom
into
movsb
in
mov
add
xor
add
out
or
lcall
lods
cwtl
push
cmp
sub
pop
int
cmp
in
xlat
mov
mov
aaa
out
int3
xor
ja
cmp
pop
and
jno
inc
ss
push
fs
mov
pop
arpl
xchg
mov
cmp
insb
mov
in
mov
int
cmp
sub
mov
pop
aad
pop
sbb
xchg
int3
inc
mov
insl
push
push
lods
inc
jb
repz
popf
fs
je
inc
lret
les
mov
inc
mov
les
int3
pushf
xchg
jae
and
mov
cmpsl
push
push
push
xchg
icebp
mov
insb
dec
sub
outsl
ror
adc
loope
xchg
in
sti
add
lods
adc
sti
cmp
call
fdivr
mov
push
inc
insl
push
jg
je
pusha
je
mov
xchg
int3
call
add
pop
sub
popa
xor
adcl
mov
cld
stc
pop
inc
xor
in
and
addr16
sbb
pop
cs
mov
cmpl
xchg
int
scas
xorps
or
cmp
je
adc
pop
int
mov
jle
insl
in
dec
pop
lods
and
mov
jmp
xchg
cmp
mov
mov
or
pushf
into
mov
imul
jl
in
push
out
leave
cmp
push
aas
add
setl
imul
ja
bound
dec
jae
cmc
mov
test
mov
and
stos
int
xchg
ds
cmp
xchg
mov
xchg
data16
mov
into
scas
in
ret
fcmovb
jbe
into
ja
xor
sub
fldl
inc
add
mov
push
cmp
xor
jno
add
jbe
test
and
sbb
xor
movsb
adc
sub
jbe
adc
dec
iret
adc
mov
pop
aad
repnz
jge
inc
or
iret
std
sahf
dec
rcrl
ds
adc
adc
lahf
rcl
mov
push
mov
or
inc
inc
or
iret
ljmp
iret
rcrb
repz
cmp
iret
lahf
ljmp
inc
ds
push
push
dec
push
cs
js
fistps
ss
mov
xlat
clc
pop
sub
add
lcall
xor
sti
xchg
push
sub
push
mov
jmp
dec
mov
cmp
dec
push
inc
or
push
sbb
rclb
push
and
push
mov
rcl
rorl
and
insb
fwait
mov
int3
aam
mov
imul
leave
rorl
push
paddq
mov
stos
cmp
dec
push
mov
cmpsl
xchg
pcmpeqb
leave
ror
inc
and
push
loope
xor
unpcklps
sbb
jno
rorl
dec
lds
sarb
push
fimull
out
push
ficomps
lock
fstl
movsl
mov
add
cwtl
roll
inc
or
sbb
push
inc
stc
mov
add
dec
adc
jp
hlt
pushf
push
addr16
push
dec
adc
xor
sub
adc
mov
adc
iret
movsl
mov
outsl
cli
repz
js
sarl
xchg
jecxz
cli
xchg
mov
insl
push
lea
ss
push
popf
mov
aas
or
push
fcom
decl
and
xchg
or
out
int3
jns
push
inc
sbb
add
xor
pop
dec
xchg
aas
jnp
lea
add
loope
xor
push
add
imul
testb
aaa
sbb
icebp
js
or
gs
xchg
shll
or
xor
icebp
iret
stos
lods
xor
xchg
js
mov
xor
push
sbb
adc
pop
jae
xor
sbb
sbb
inc
pop
scas
sub
rcrb
push
call
xchg
sub
dec
lret
inc
aaa
mov
xchg
lods
mov
or
sbb
adc
mov
xchg
test
shlb
inc
int3
mov
movsl
pop
adc
dec
and
mov
inc
arpl
fldcw
lcall
jae
sub
shrl
ja
push
aad
xchg
push
mov
rclb
daa
rcr
push
pop
push
movsb
push
orps
lea
int3
dec
fs
xor
xor
lods
inc
sbb
sbb
fmull
inc
es
dec
cmp
loope
lcall
xchg
pop
or
sub
int
imul
lahf
jp
dec
pop
xchg
in
out
mov
stos
xor
mov
adc
aaa
and
mov
dec
fstp
stos
arpl
dec
jbe
cmp
leave
mov
test
jl
jne
xchg
in
fwait
aaa
ljmp
inc
jo
popf
ja
xchg
mov
fisubrs
cltd
and
inc
pop
xchg
lds
mov
lret
mov
inc
outsl
dec
scas
jns
pop
cmpsl
lahf
stos
cmp
mov
adc
mov
leave
imul
js
pop
popf
stos
mov
xchg
pop
inc
iret
pop
or
xchg
fiaddl
add
aaa
mov
mov
push
push
iret
iret
jp
cmpsl
cld
pop
mov
pop
fdivl
icebp
xchg
orl
mov
movsl
sahf
or
mov
mov
xor
out
les
xchg
mov
icebp
add
add
dec
push
push
insl
pop
rcll
push
fnsave
push
aad
test
dec
adc
sarl
mov
or
mov
push
cli
mov
mov
lahf
sbb
fwait
stos
inc
sahf
lcall
daa
popf
mov
iret
cmp
inc
mov
mov
pop
jbe
cli
cmp
fstps
das
sbb
popa
fstpl
iret
cmp
inc
and
fwait
subl
push
sbb
mov
and
pop
sbb
lret
lds
stos
lods
xor
das
inc
movsl
cli
jne
jbe
sbb
aaa
sbb
aaa
add
lea
xorl
sahf
loope
mov
and
lods
cld
out
imul
stos
and
aas
jp
andl
mov
std
xor
adc
cmp
xchg
imul
nop
daa
mov
sbb
lcall
inc
in
cmc
xlat
movsb
fdivrl
test
sbb
mov
cs
pushf
lods
lret
xor
inc
sbb
push
pop
into
adc
nop
outsb
or
lock
xlat
mov
xchg
lea
gs
push
dec
inc
aaa
cmp
adc
xor
push
push
int3
xlat
les
mov
test
fs
push
dec
xlat
inc
cmp
sub
sbb
or
add
into
aad
mov
in
cmpsb
xchg
hlt
xlat
in
outsb
cld
in
sti
jmp
data16
cmc
in
push
movsl
xlat
xchg
setns
pop
fisubl
push
push
push
outsl
sub
xchg
stos
or
lret
test
incb
jnp
mov
cmp
sbb
or
xchg
adc
xchg
xchg
mov
jnp
mov
pop
xchg
adc
push
cmp
mov
pop
mov
mov
scas
js
cltd
xor
adc
int3
dec
in
jae
mov
ljmp
cmpsl
sbb
mov
je
xchg
dec
mov
arpl
mov
aam
nop
aas
lret
adc
test
ret
pop
sbb
or
dec
jb
dec
xor
ja
cmp
mov
lods
cs
lcall
fisttps
jnp
pop
and
push
mov
ljmp
sbb
mov
or
cmp
push
inc
lahf
movsl
aaa
xchg
jnp
adc
add
test
dec
inc
xor
dec
sbb
notb
in
and
add
add
mov
sub
es
sbb
nop
xchg
xor
inc
js
lods
jecxz
jecxz
scas
mov
scas
xchg
nop
cmp
xchg
push
cmp
addr16
lcall
clc
cmp
jnp
hlt
push
add
xorl
test
mov
fnstsw
pop
repz
lret
cs
ja
sbb
or
xchg
jg
fdivrl
mov
dec
popa
data16
lcall
jno
xor
lods
fs
rcll
loope
pop
cwtl
pop
lret
xchg
mov
pop
dec
xor
jge
xchg
or
jne
das
test
mov
lods
push
push
push
pop
dec
test
adc
daa
xchg
mov
mov
mov
mov
es
jp
dec
inc
mov
lcall
in
inc
movsl
xchg
cli
mov
pop
es
lahf
fstp
pop
mov
cmp
aas
cli
mov
xor
lods
sub
data16
ljmp
dec
leave
dec
mov
sbb
jge
shrb
inc
hlt
ja
ds
hlt
dec
xor
mov
dec
inc
pop
push
cs
jno
xchg
stos
add
mov
xchg
outsb
mov
aad
push
mov
loopne
and
xchg
pop
idivb
xor
test
xchg
fwait
xorl
rcl
mov
testb
lods
hlt
xor
push
push
cmp
jne
sti
xor
xchg
pop
cmp
push
stos
test
pop
movsl
pop
jbe
xor
pop
mov
adc
fsubrl
and
cltd
es
test
loope
in
pop
push
mov
sub
add
stos
inc
xor
aad
jmp
push
mov
push
iret
mov
sarl
adc
mov
pop
cmp
xlat
push
aad
ret
mov
adc
add
push
jb
popa
pop
negb
jmp
adc
shll
rcll
enter
mov
es
sbb
mov
lock
xchg
aad
adc
xlat
mov
mov
mov
mov
jnp
jns
mov
sahf
xchg
dec
push
sbb
xchg
addr16
mov
xchg
jle
mov
jnp
xchg
pop
dec
fnop
or
fmull
cli
test
jecxz
leave
int3
xor
push
and
push
push
and
iret
movsl
movsb
lahf
sub
out
imul
sub
pop
dec
sub
inc
fs
fisubl
mov
cli
repz
pop
push
fistpll
icebp
dec
xor
and
sbb
mov
cli
sbb
cmpb
push
cmpl
cmp
scas
xor
xchg
push
and
repnz
iret
inc
push
daa
xor
cvttps2pi
xchg
lds
les
xchg
daa
xorb
bound
inc
mov
test
in
lret
pop
jbe
dec
dec
jnp
iret
push
mov
mov
add
add
cli
test
or
mov
push
iret
dec
push
mov
ja
dec
add
or
or
push
dec
test
push
ja
mov
mov
xor
test
push
test
jg
add
stos
mov
xor
jecxz
mov
dec
mov
adc
xor
dec
xchg
push
sub
pop
subl
xor
bound
mov
fwait
lahf
xchg
stos
cmp
dec
inc
loope
ljmp
push
loopne
mov
push
mov
push
dec
out
xchg
xor
jp
cmp
and
mov
subl
add
mov
iret
out
inc
pop
cmp
inc
stc
jno
jb
bound
negb
pop
xchg
push
jmp
xchg
jp
push
sub
fstl
jo
lds
popf
pop
scas
mov
xchg
inc
dec
xchg
ficoms
cltd
sbb
lods
int
inc
leave
adc
push
popf
inc
ss
mov
dec
push
pop
mov
inc
es
pop
push
cmpsb
cmp
divl
add
cli
sbb
fs
test
xchg
or
mov
xchg
adc
add
xor
dec
add
pop
rcl
ss
mov
rcrl
aad
movsl
int
pop
outsb
gs
aad
out
out
shrb
jae
pop
adc
xlat
mov
rclb
xchg
push
push
xchg
xor
fldt
fcoms
adc
mov
es
mov
push
mov
jp,pt
xchg
rcll
lea
test
rclb
mov
into
test
pop
std
xchg
popf
test
jl
adc
dec
push
dec
xchg
gs
adcl
out
orb
or
mull
ja
sahf
push
mov
rclb
adc
mov
out
push
pushf
push
dec
pop
xchg
dec
addr16
sarl
scas
in
dec
leave
xor
mov
mov
leave
dec
jmp
adcl
fs
enter
iret
pop
das
push
push
mov
aad
popf
xchg
ja
push
mov
jb
mov
pop
mov
rcl
jp
pop
rclb
adcb
jae
push
dec
mov
dec
push
inc
push
sub
mov
push
adc
cmp
xchg
or
push
rcrb
aad
out
fbstp
and
push
dec
pop
jnp
mov
sub
push
dec
push
xchg
dec
into
pop
xlat
xchg
mov
push
lds
push
sahf
pop
mov
aaa
iret
shr
aam
cmp
shlb
jo
or
xchg
push
push
adc
sub
pop
inc
push
adc
xchg
sbb
pop
sub
rcll
push
test
shl
mov
test
sub
cltd
xchg
sbb
adc
jns
test
stos
aam
std
rclb
adc
sbb
xchg
jmp
xchg
xchg
faddp
pop
mov
dec
lahf
pop
inc
aad
loopne
mov
adc
aaa
xchg
or
dec
shlb
pop
mov
adc
push
push
dec
jle
mov
das
out
dec
sbb
or
loopne
das
push
push
aad
mov
pop
add
adc
testl
sbb
push
dec
adc
stos
push
and
call
fcomip
cmp
mov
sbb
add
aam
add
adc
lock
or
rcrb
rcll
push
sub
pop
mov
cmp
mov
dec
rcll
and
fisttps
pop
adc
lret
adc
xchg
test
adc
fmul
push
rcrb
in
push
mov
cwtl
jae
scas
mov
test
push
adcl
dec
dec
shll
cli
xchg
xchg
mov
nop
push
push
mov
jo
or
push
nop
pop
popa
xchg
jmp
iret
jmp
or
push
aam
xchg
and
lret
fisubrs
dec
push
pusha
in
xchg
push
jnp
iret
test
mov
repz
xchg
sarb
lcall
rcl
jg
jecxz
push
das
push
push
jo
sbbl
jbe
jo
mov
mov
fwait
push
int3
shll
mov
fwait
movsb
rclb
xlat
test
daa
xchg
repz
push
das
push
shrb
fwait
popa
xchg
shl
mov
mov
adc
adc
rorb
pop
mov
repz
arpl
les
mov
xchg
punpcklwd
push
push
fiadds
pop
in
push
push
pop
adc
daa
mov
lcall
enter
ret
push
out
mov
out
addr16
mov
adc
rcr
fwait
jns
nop
rclb
adc
not
adc
jno
sbbl
jbe
mov
or
push
dec
shlb
push
stos
push
push
push
cli
xlat
or
cmp
rclb
mov
shrb
into
pop
dec
xchg
das
push
push
fdivr
xlat
nop
mov
push
cltd
xchg
mov
xchg
or
jle
push
xchg
push
xchg
sbb
aad
fwait
rcll
push
dec
ror
adc
aam
imul
int
vphadduwq
and
aad
rcl
stos
xchg
or
mov
cmp
mov
adc
mov
sarb
lret
adc
push
mov
shrl
shll
or
movsl
cmp
inc
lods
cltd
aad
push
mov
xchg
lods
adc
mov
lods
shl
sahf
shlb
push
push
inc
push
popf
jecxz
mov
adc
xchg
push
xchg
fwait
and
fwait
adc
push
adc
and
sarb
shlb
and
into
nop
adc
lea
adc
rcll
xchg
mov
data16
fstps
mov
repnz
xchg
push
push
cld
mov
xchg
aad
push
inc
mov
push
add
jnp
repnz
lret
mov
xor
xchg
push
dec
cmp
add
stos
mov
ds
std
aam
lods
dec
dec
decb
dec
inc
or
int
imul
cmc
rcll
cmpsl
repz
mov
call
hlt
aad
shrb
inc
into
enter
pop
cmp
dec
push
jae
push
jno
push
mov
inc
cmp
jmp
push
lret
xchg
mov
les
stos
shl
mov
leavew
xchg
shll
push
cmp
fstl
push
aam
mov
inc
aad
mov
das
pop
stos
mov
jecxz
push
push
lahf
mov
inc
adc
adc
int
push
xchg
jno
xchg
aaa
sbb
rcl
fidivs
sub
rcl
fstl
ret
lods
push
int
mov
or
rorb
push
push
fcmove
in
push
mov
add
mov
push
pop
push
cmp
jno
push
pop
psrlq
insl
mov
mov
rorb
rol
push
xchg
fdivs
cmp
jnp
xchg
shl
mov
cltd
mov
mov
and
pushf
xor
aad
out
dec
xchg
xchg
dec
mov
xchg
in
mul
les
jb
jno
cmpsl
xchg
xsha1
cmpsb
mov
das
mov
jecxz
push
xor
hlt
adc
inc
xchg
push
out
rcrb
repz
mov
dec
fisttps
test
push
popa
adc
push
dec
push
push
daa
into
sarl
rcrb
lret
cmpsl
cld
pop
test
xchg
xchg
pop
or
mov
jle
push
push
jo
dec
pop
mov
mov
js
jb
icebp
push
scas
jg
pushf
push
int
addr16
std
xchg
inc
or
lods
push
popf
mov
fsubs
mov
xchg
jno
shll
lods
dec
aad
rclb
cs
jg
call
or
mov
fdivrs
mov
cs
cmpb
mov
dec
jae
cmp
sub
jle
in
int3
test
aad
lahf
shll
fs
xchg
aam
cmp
xchg
rcl
mov
push
and
leave
adc
icebp
adc
es
nop
push
cmp
imul
mov
push
pop
das
aad
rcll
adc
adcl
testl
std
xchg
push
push
jge
ret
push
xchg
in
xchg
adc
in
mov
rclb
jge
xchg
in
rep
jne
out
jnp
dec
iret
repnz
mov
pop
addb
mov
push
cmc
scas
mov
pop
mov
sbb
mov
dec
push
sbb
push
shl
insl
mov
fs
gs
rcll
daa
scas
adc
sub
xchg
fdivrs
xor
xchg
xor
aad
sbb
xchg
push
xchg
pop
das
shrl
jns
mov
sbb
xchg
xor
dec
aam
push
shr
or
push
pushf
and
adc
jno
aam
inc
dec
into
push
push
sbb
push
adc
xchg
in
mov
pop
mov
mov
or
rcl
xchg
push
hlt
mov
xlat
rol
mov
ror
mov
hlt
xor
rolb
pop
or
jg
jns
push
xchg
push
or
pop
push
iret
scas
mov
push
popa
rol
push
cmc
scas
dec
adc
rorl
mov
xchg
xchg
mov
std
scas
xor
inc
rcl
push
pop
xchg
push
mov
lds
mov
scas
xchg
adc
mov
adc
out
push
xchg
xchg
push
out
adc
lock
cmpsb
rorl
and
xchg
push
aas
xchg
add
pop
dec
nop
add
push
enter
jb
nop
rorb
push
fcmovb
sbb
push
adcl
lahf
mov
jg
xchg
jg
adc
xchg
mov
push
adc
shrl
stos
test
push
dec
aad
push
push
push
jg
push
stos
inc
jo
filds
or
mov
or
into
mov
and
push
mov
pop
dec
push
mov
shl
mov
ljmp
adc
pop
scas
stos
or
push
popa
scas
stos
movsb
rorb
push
xor
loop
in
mov
mov
push
push
add
stos
pop
mov
in
into
or
pop
xchg
rclb
lods
int
sub
mov
arpl
pop
xchg
add
inc
pop
xor
jb
jnp
pop
sub
inc
jmp
mov
cmpsb
cmc
aaa
out
pop
ret
dec
xchg
rorl
cmc
test
inc
shl
lods
jne
push
push
out
dec
adc
xchg
inc
add
in
mov
dec
and
pop
ret
dec
imul
into
sbb
scas
add
push
sbb
scas
ja
pusha
cmpsl
stos
addl
iret
iret
or
negb
cmc
fwait
jp
pop
stos
sahf
and
pop
and
ja,pt
and
or
int3
adc
testb
cltd
cmp
pop
rorl
repz
cs
xlat
ljmp
or
mov
cmpsl
aad
fnstenv
xlat
cmc
jbe
fisttpll
fmul
xchg
out
sahf
inc
xlat
leave
fbld
push
iret
sti
aaa
bound
or
out
lret
push
test
mov
cmpsl
jns
inc
rcll
push
push
push
shl
dec
mov
dec
push
es
xchg
inc
cmpsl
and
pop
xchg
faddl
lds
xor
fwait
mov
pop
mov
notb
xor
mov
ja
push
adc
dec
xchg
shrb
lea
mov
jns
rcll
out
mov
pop
cmpsl
arpl
mov
aas
iret
cwtl
push
xchg
push
xor
stos
push
into
cmpsl
mov
cmpsl
xor
xchg
shrl
mov
push
scas
ret
in
pop
push
adc
dec
iret
shll
shl
and
lock
push
cmpsl
jp
rcl
cmpsl
sbb
aam
cmpsl
xchg
ss
ret
mov
sarl
popa
xchg
rcl
cmpsl
pop
nop
int3
push
cmpsb
cmpsl
xchg
cmpsb
pop
push
adc
adc
push
cmpsb
cmpsl
pop
xor
aaa
xchg
xchg
xchg
xchg
gs
cmp
rclb
xchg
imul
push
lds
cmpsl
or
push
push
push
or
push
push
ss
dec
mov
lods
iret
dec
mov
lods
scas
addb
mov
div
addr16
movsl
cmpsl
mov
ror
pop
cmpsl
hlt
mov
rcl
pop
adc
nop
dec
jg
push
lret
inc
pop
xchg
shll
rcll
push
shlb
push
shlb
sahf
push
pop
daa
push
sti
aad
adc
push
es
aas
mov
push
lock
sub
xchg
mov
inc
inc
mov
push
aad
pop
xchg
into
dec
xchg
push
mov
mov
inc
aaa
xor
mov
addr16
das
mov
xchg
rclb
dec
push
movb
mov
push
mov
mov
out
scas
mov
ds
xchg
std
dec
ss
outsb
je
mov
sahf
push
jae
cmc
mov
inc
es
xchg
push
dec
in
fstpl
ljmp
aad
pop
into
popa
push
fistpll
mov
enter
lret
mov
out
notl
shlb
shll
fidivrl
lea
xchg
dec
shl
into
sti
idivl
aam
push
fldcw
pop
push
divb
insb
xor
shrb
insb
pop
xor
adc
add
and
xor
sahf
outsl
push
shrb
and
xor
inc
arpl
push
je
push
neg
or
pop
int3
xchg
dec
out
dec
and
sbbl
iret
orb
les
rclb
fstps
mov
stc
cltd
sti
out
dec
enter
inc
loopne
xchg
aad
rcl
push
push
ja
cmc
idivl
pop
pop
rcr
rcl
push
push
xlat
jae
icebp
repz
pop
pop
rcl
clc
jbe
xlat
div
mov
pop
xlat
rcl
push
push
jb
xlat
repnz
mov
pop
xlat
fcmovu
xchg
xchg
push
adc
jg
std
lcall
xchg
xchg
adc
mov
xor
jge
sti
fwait
popf
xlat
sbb
nop
pop
adc
jle
clc
sahf
cwtl
xlat
pop
sbb
mov
xor
lcall
inc
inc
addr16
xlat
in
iret
leave
dec
dec
outsl
imul
inc
inc
arpl
loope
lret
int
dec
imul
jmp
rolb
pusha
xlat
out
into
enter
push
les
bound
in
int3
dec
dec
push
xlat
ljmp
mov
mov
or
addl
and
lea
or
lods
xlat
sub
addb
cmpsb
mov
mov
or
addb
and
stos
lods
scas
sub
jnp
sbb
in
sahf
aad
mov
mov
scas
out
mov
mov
int
aaa
aam
ja
scas
sub
add
pop
lahf
addr16
fdivs
dec
cmp
jg
pop
cmc
sub
movsl
ja
roll
leave
iret
pop
xchg
scas
mov
ja
loopne
into
mov
stos
sub
test
iret
mov
in
mov
fisubs
out
cmpsw
sar
gs
jns
mov
jg
ja
outsl
push
xchg
repnz
iret
repz
dec
inc
lahf
push
cmpsl
xchg
mov
xchg
pop
or
jae
jne
jno
jbe
jb
je
jo
div
mov
inc
lock
xchg
icebp
dec
repz
divl
inc
shll
mov
inc
inc
mov
inc
mov
xchg
inc
dec
inc
movb
orl
xchg
orb
xorb
add
add
add
inc
mov
dec
movsb
mov
and
xchg
and
and
inc
popa
mov
xchg
bound
pusha
mov
loop
in
loopne
in
loope
jecxz
out
iret
lret
mov
inc
leave
mov
xchg
lret
enter
mov
dec
mov
xchg
dec
dec
dec
dec
mov
mov
mov
mov
inc
or
or
or
inc
test
dec
lods
test
das
sub
cs
sub
sub
inc
imul
out
ljmp
xchg
jmp
sub
repnz
cmp
xchg
dec
cmp
mov
add
cmp
mov
jnp
xchg
jg
mov
jnp
xchg
jge
mov
jnp
xchg
jle
mov
jnp
xchg
jl
mov
jnp
xchg
incb
mov
jnp
xchg
cld
add
std
add
sti
add
lahf
add
popf
add
sahf
add
pushf
add
pop
add
sbb
mov
push
add
sbb
mov
jnp
xchg
pop
add
pop
add
pop
add
pop
add
fiadds
mov
jnp
xchg
faddl
mov
jnp
xchg
fldl
mov
jnp
xchg
fildl
mov
jnp
and
mov
push
mov
push
mov
xchg
xchg
dec
xchg
xchg
mov
pop
mov
xchg
mov
mov
mov
mov
mov
jne
stos
mov
mov
mov
mov
mov
addl
xchg
ja
test
mov
xchg
daa
xchg
addr16
out
iret
mov
mov
aaa
ja
das
outsl
mov
inc
mov
dec
inc
lahf
lods
pop
fwait
inc
mov
cmpsl
mov
testb
fisttpll
mull
or
xor
addr16
dec
aas
mov
mov
pop
inc
pop
in
setno
out
incb
fnsave
xlat
out
inc
inc
inc
loopne
xor
xchg
dec
mov
inc
aas
push
aaa
fidivrs
pop
pop
dec
pop
testl
sbb
pop
fistps
cmpsl
push
xchg
xchg
jae
addr16
scas
aaa
jne
fdiv
lods
sahf
sbb
pop
push
dec
ds
dec
aam
push
dec
aam
dec
shrl
cmc
push
fwait
xor
cmpsl
je
ja
mov
adc
in
or
push
jle
mov
xchg
mov
xorl
or
pop
cmpsb
jbe
outsl
inc
jbe
hlt
mov
pop
push
mov
cld
adc
and
cmp
mov
xchg
mov
outsb
iret
out
jo
popf
adc
cmp
mov
inc
push
jo
dec
mov
int3
mov
inc
leave
mov
aad
icebp
pop
mov
mov
cmpsl
inc
xchg
mov
xchg
push
dec
pop
mov
aad
aam
adc
inc
rcll
xchg
xlat
inc
and
add
push
and
repnz
fidivl
out
lahf
pop
iret
push
xlat
lret
adc
inc
jnp
xchg
push
ja
jp
push
aam
shlb
loope
xor
movsl
add
push
xor
xchg
movsb
stos
lea
ss
push
pop
dec
push
nop
in
xchg
adc
aad
jb
push
sub
out
xchg
add
xor
sub
cltd
cmp
popa
adc
loope
pop
outsb
xchg
xchg
push
adc
xchg
mov
lret
mov
lahf
in
pop
add
in
lods
ja
dec
or
aad
adc
mov
ret
xchg
mov
test
fcompl
sbb
sbb
or
xchg
dec
mov
dec
jb
adc
push
xchg
cmc
push
rorb
nop
cmp
nop
or
xchg
xor
adc
or
dec
orl
dec
lods
pop
into
cltd
inc
mov
mov
xchg
adc
ds
lret
testb
icebp
arpl
scas
push
enter
xor
mov
and
jns
js
arpl
push
pop
std
mov
mov
icebp
roll
xchg
inc
pushf
dec
mov
rcl
adc
int3
sub
popa
lods
xchg
aaa
xchg
xchg
adc
jg
xor
int3
stos
xchg
mov
ret
aad
inc
sub
xchg
mov
lods
xchg
lods
xchg
jbe
push
adcb
iret
andnps
jge
into
push
int3
mov
dec
adc
dec
aaa
xchg
or
mov
rclb
arpl
int
sarb
fstl
sub
adc
loope
xchg
aam
lods
cmp
sub
stos
jbe
push
test
adc
push
xchg
sub
pop
fisttps
inc
aas
mov
xchg
or
push
ret
mov
adc
in
orb
movl
cmpsb
push
loopne
mov
xchg
push
pop
mov
xchg
dec
in
pop
subb
adc
aad
test
lods
push
inc
pop
mov
ds
into
and
cwtl
dec
orl
xchg
xchg
dec
filds
add
dec
test
into
mov
and
test
dec
xor
lcall
fwait
xchg
mov
mov
mov
jns
mov
dec
iret
and
repnz
dec
lods
jecxz
xchg
xchg
pop
jb
jnp
iret
pop
xchg
sti
inc
notb
dec
sbb
ret
in
adc
and
adc
mov
mov
and
jb
repz
cs
xor
pop
loope
into
aam
lods
je
mov
imulb
mov
push
inc
mov
pop
pushf
mov
pushf
not
stos
lea
dec
fistl
sbb
push
fwait
xchg
and
adc
nop
mov
xchg
into
mov
lea
jnp
mov
movsb
xchg
pop
and
cs
ficoms
testl
ret
ja
push
push
jbe
into
int
ds
lret
scas
add
push
lea
iret
adc
xchg
xor
sbb
dec
das
pop
and
leave
pop
pop
or
into
int3
add
pop
nop
dec
inc
das
inc
xor
lds
enter
mov
mov
sub
cmp
mov
repz
mov
aaa
bound
xchg
icebp
fnstcw
jecxz
adc
sarl
mov
ror
movsb
adc
cmpsb
je
sub
mov
ss
ds
mov
jge
jb
push
je
sahf
aam
mov
movsl
filds
mov
xor
push
fcoms
std
lret
xor
mov
mov
jl
repz
push
je
or
insb
outsl
loope
push
xor
jb
xchg
aaa
or
push
jnp
sub
shrl
imul
mov
lods
incb
inc
push
and
ret
fs
je
mov
mov
mov
xchg
mov
mov
cltd
daa
xchg
jns
rcrb
xchg
mov
cmp
aaa
xchg
rorb
inc
jle
imul
lea
lea
repnz
jecxz
pop
insl
mov
data16
and
dec
out
fs
jmp
push
adc
fiadds
xor
xchg
rcl
nop
or
mov
push
or
psrld
push
or
push
scas
pop
orb
je
cmp
in
fdiv
out
aam
rol
sub
mov
push
cmp
xchg
rclb
mov
aad
push
popf
mov
xchg
sub
push
cmp
push
icebp
push
ret
xchg
mov
jne
push
loopne
adc
xchg
jo
dec
inc
push
push
mov
add
repz
xor
int
cltd
xchg
in
xchg
ret
adc
lds
dec
push
or
and
sarl
mov
mov
sbb
stos
mov
xchg
or
or
lds
pop
mov
jns
add
dec
loope
rclb
jno
pop
and
push
push
ret
push
fidivrs
ror
adc
dec
shr
mov
pop
adc
push
rcll
shll
fmul
cmc
xchg
push
sub
xchg
arpl
in
rorl
jle
xor
jae
hlt
mov
int3
dec
mov
jmp
adc
cltd
pop
jno
push
adc
adc
xchg
dec
push
and
mov
fisttpl
xchg
cmovle
xchg
pop
mov
add
mov
shl
sahf
shll
lods
xchg
arpl
push
push
xchg
xchg
push
cld
pop
ret
int
scas
mov
aad
test
jno
fnstsw
mov
push
push
movsb
jmp
aaa
fiadds
repnz
push
jns
scas
les
call
or
aas
cmp
test
push
xchg
push
push
dec
push
push
neg
fimull
sub
stc
fdivp
loopne
pop
or
cltd
sbb
mov
inc
inc
rclb
xchg
adc
dec
dec
rcrb
jbe
pop
inc
dec
xchg
xchg
mov
jb
mov
mov
pushf
sbb
mov
je
or
adc
jbe
hlt
xlat
and
push
xchg
aam
das
mov
cmpsl
ficoms
xor
push
outsb
or
dec
dec
dec
push
je
jbe
adc
inc
mov
adc
aas
xchg
mov
lcall
jecxz
lahf
mov
adc
cmp
inc
cmp
add
in
inc
xchg
lret
call
adc
movsb
mov
unpcklps
inc
dec
push
inc
push
testb
sti
xchg
insb
mov
ret
sti
xchg
adc
pop
sbb
icebp
adc
push
test
mov
jg,pn
push
xchg
daa
xchg
adc
lods
jno
aaa
dec
xchg
xor
cmc
push
or
int
pop
ja
cltd
dec
nop
or
mov
adc
aam
push
dec
adc
inc
aad
xor
adc
or
jl
and
inc
xchg
leave
icebp
inc
jae
rclb
push
int
or
push
sbb
cmp
mov
pop
mov
dec
adc
aam
rorl
cmp
jae
mov
insl
lret
jbe
mov
and
mov
loop
mov
or
adc
cmp
mov
je
loope
or
mov
mov
sbb
mov
mov
rorb
cmp
push
sub
and
insl
insl
insl
lret
rclb
int3
push
sub
jg
or
adc
adc
test
xor
loope
jns
adc
or
push
mov
jo
data16
rol
sbb
xchg
jae,pn
xor
sub
sub
clc
outsb
das
divl
pop
mov
cmp
mov
ds
adc
nop
sbb
popa
push
aam
pop
sti
mov
push
mov
add
mov
adc
dec
stc
mov
jo
jnp
cmpsb
or
sahf
dec
jo
push
orl
adc
lea
bound
push
loop
xchg
jne
jno
or
mov
mul
xor
push
push
sub
mov
pop
icebp
popf
lea
icebp
mov
pushf
fcoml
pop
push
aaa
xor
aaa
push
mov
lods
out
jge
push
pop
ljmp
sbb
push
xchg
pop
mov
pushf
mov
jno
pop
push
movsb
aad
cmp
clc
jns
jne
nop
jns
push
adc
pop
je
lea
aaa
mov
push
inc
outsl
std
mov
pop
cmp
xchg
sub
and
xchg
sbb
into
addr16
rorl
iret
mov
mov
mov
scas
cmp
xchg
dec
push
nop
popa
mov
mov
push
or
mov
inc
pop
out
inc
xchg
int
mov
or
les
cs
xchg
ja
pop
fwait
push
cmpb
loopne
jl
lahf
int
pushf
jle
ja
enter
adc
lods
mov
int
aaa
jbe
test
cmc
scas
mov
les
xchg
movsb
jnp
int
aam
adc
xchg
cmpsl
mov
dec
or
mov
push
cmc
test
mov
movsl
dec
loope
sysexit
xchg
cmpsb
cmp
aaa
sbb
outsl
test
divl
dec
cmp
xchg
cmc
push
ret
push
xchg
xchg
mov
and
push
push
dec
dec
aam
popa
outsb
ja
lock
push
gs
popf
jne
rclb
in
sbb
mov
push
push
insl
js
clc
inc
mov
mov
xor
icebp
jns
mov
sub
addr16
stos
jb
leave
aam
jge
push
mov
ss
int
xchg
inc
inc
ja
push
inc
push
inc
outsb
int3
push
int3
les
inc
cmp
add
testb
into
push
xchg
lds
cmpsb
imul
xchg
jo
push
ds
mov
xchg
aaa
sbb
push
xor
xchg
cmp
test
cs
push
mov
and
rclb
mov
push
xchg
lods
ss
push
fsubl
pop
inc
lahf
call
jle
push
adc
push
cmp
lcall
xchg
push
arpl
pop
test
rep
flds
xchg
in
sub
das
mov
pop
mov
inc
fcoml
mov
iret
push
xchg
cmpsl
jmp
lds
icebp
push
rorb
push
push
movsb
insb
push
xor
mov
pop
and
das
sub
mov
aam
int3
jbe
imul
int3
sbb
std
xchg
scas
sahf
test
shrl
and
scas
enter
inc
into
jp
jle
add
ljmp
add
pop
inc
into
mov
dec
sub
sti
test
cmc
rolb
lods
or
inc
sbb
sub
push
shl
pop
iret
push
int
fdivs
cmp
jno
cmp
stc
sbb
xor
gs
jb
lods
jle
gs
xlat
push
fstp
rcll
in
adc
mov
xor
mov
xchg
dec
aad
push
fcmovnbe
in
or
xchg
dec
cmp
pop
outsb
insb
pop
mov
notb
int3
add
lods
test
cs
imulb
fs
xchg
stc
jbe
fs
mov
out
jo
fildl
int3
xor
xchg
dec
push
xchg
vpsubusw
xchg
xchg
dec
pop
xchg
int3
and
stos
imul
ret
in
aam
jo
scas
data16
mov
xchg
je
inc
sbb
push
dec
mov
pushf
or
test
idivl
lds
add
fimull
data16
mov
movsb
pop
dec
out
loope
push
mov
call
loope
repz
cmpsl
add
push
sbb
cmp
lods
into
scas
aaa
add
int
xchg
push
push
adc
push
sbb
sbb
pop
push
push
aam
test
mov
fstpt
adc
pop
ss
negb
xchg
jo
push
sub
je
mov
out
call
fdiv
mov
mulps
cmp
jo
cmp
scas
iret
lds
scas
pop
adc
xor
or
or
fwait
inc
cmpsl
je
sub
repnz
mov
test
push
mov
int3
pop
ljmp
push
aaa
push
sbb
and
nop
fldcw
fistpll
push
daa
fwait
xor
jp
dec
mov
and
push
adc
push
movsl
jae
mov
cmp
sub
lahf
ret
push
bound
jle
aas
cltd
aas
out
push
xchg
jg
dec
fidivrs
ja
out
shlb
pop
cmp
into
dec
iret
adc
pop
lret
jg
push
push
mov
xor
pop
enter
adc
pop
shlb
push
aaa
mov
inc
push
in
jne
jne
rorl
pop
shrb
mov
xchg
mov
mov
push
aaa
mov
ficoms
adc
mov
mov
adc
push
shlb
adc
push
pop
out
adc
adc
mov
inc
test
xchg
pop
test
scas
mov
inc
aaa
nop
fcmovbe
xor
xor
shrb
mov
dec
aaa
push
gs
xchg
shl
popf
adc
mov
jo
imul
mov
push
aaa
flds
aad
push
xchg
or
xchg
dec
push
mov
mov
inc
xchg
push
dec
shll
xchg
cld
rolb
dec
xchg
cwtl
pop
rcrl
insl
aad
xchg
cwtl
cmc
lret
mov
jne
adc
adc
mov
xchg
aaa
dec
pop
repz
push
cwtl
hlt
and
xchg
xchg
lods
xchg
std
adc
dec
aad
mov
jne
aaa
pushf
xchg
mov
aad
xchg
dec
repz
cmpsb
adc
xchg
xchg
add
in
mov
decl
pop
mov
scas
ljmp
popa
dec
aad
in
jle
pop
xchg
mov
shll
adcl
hlt
and
mov
aaa
xor
inc
enter
dec
cmp
pop
lret
mov
jne
xchg
lcall
jle
push
xchg
mov
push
aaa
pop
aad
pop
xlat
mov
insb
adc
aaa
adc
js
mov
js
jne
or
push
gs
shll
xchg
aaa
lods
xchg
std
adc
adc
mov
cmp
test
mov
into
ror
aaa
ficoml
xchg
jo
lock
mov
xor
push
jo
imul
aaa
movsb
adc
cmp
into
push
scas
adc
push
les
cmpsl
xchg
push
push
adc
xchg
adc
movsl
push
lret
mov
jne
adc
pop
mov
adc
adcl
mov
xchg
aaa
in
xchg
adc
push
push
int
nop
mov
aad
adc
inc
sarl
adc
xchg
mov
push
xchg
xchg
pop
inc
scas
mov
inc
aaa
ljmp
shlb
aad
in
ss
repz
xchg
dec
push
jge
xchg
das
rclb
jne
aaa
lods
adc
adc
aam
push
push
or
jne
or
adc
cmpsb
adc
push
and
mov
jne
adc
or
push
adc
add
adc
push
jnp
dec
push
cmc
lret
mov
jne
pop
jge
in
jl
cltd
icebp
mov
jne
adc
xchg
mov
test
push
add
xchg
aaa
xchg
ja
jl
jle
push
mov
je
inc
fs
cs
adc
aad
inc
push
mov
push
aaa
xor
push
jo
subl
push
add
adc
pop
xlat
xchg
inc
add
mov
or
xchg
pop
shlb
push
cmp
lods
sar
push
mov
aad
push
jb
cmp
push
dec
push
xor
mov
sarb
xor
nop
rcl
cmc
lret
jne
jne
aad
xchg
rcl
cmp
lret
mov
jne
aam
push
push
jo
mov
aam
xor
shl
std
push
pop
push
shrb
cmc
push
or
rcrb
mov
sub
rolb
mov
dec
aaa
aam
pop
adc
push
cmc
mov
pop
mov
and
js
xchg
push
xchg
mov
push
imul
jae
movsl
xchg
inc
push
and
or
xchg
push
mov
xchg
rclb
pop
sbb
into
dec
push
das
xchg
adc
sbb
xor
xchg
aad
push
inc
jne
pop
int3
lret
mov
hlt
xchg
xchg
movsl
sbb
xchg
adc
jo
xchg
pop
jo
popf
rcll
xchg
xchg
xchg
adc
cmp
xchg
xchg
rcl
push
dec
push
xchg
adc
adc
push
stos
xchg
dec
push
icebp
push
fwait
dec
aam
push
fwait
dec
xchg
icebp
push
fwait
dec
push
icebp
push
fwait
dec
adc
push
xchg
push
fs
push
push
push
sub
push
push
xchg
inc
rcll
push
test
jbe
adc
rolb
rcrl
shll
jns
xchg
and
mov
lahf
pusha
xchg
xchg
inc
fmuls
popf
out
mov
aad
aad
mov
dec
adc
icebp
push
mov
imul
xor
aad
bound
aaa
or
pop
inc
xchg
add
push
test
push
push
movsl
lcall
jne
call
rcl
dec
jg
push
cmc
push
mov
push
enter
adc
xor
in
popa
xlat
inc
push
xchg
dec
aad
sub
jb
sbbl
sar
xchg
shll
pop
push
popf
shl
xchg
lea
adc
jne
popa
stos
adc
adc
xchg
dec
shl
push
movsl
push
cmp
xchg
xchg
push
mov
aad
dec
xchg
mov
in
mov
mov
mulb
push
adc
movl
popa
xchg
dec
push
out
pop
xchg
push
or
dec
xchg
shr
jg
mov
push
mov
dec
out
movsl
out
aad
gs
rep
out
adc
rclb
adc
das
rclb
inc
xchg
sub
xchg
orl
rcrl
aas
mov
adc
inc
cs
das
rclb
js
mov
sbb
inc
xchg
aad
imul
inc
dec
xchg
rorb
dec
int
xchg
mov
inc
cmp
lret
jne
pop
mov
fidivl
inc
sub
cmc
roll
pop
mov
inc
in
leave
xchg
mov
cmp
mov
mov
mov
adc
cmp
aad
mov
xchg
push
xor
push
nop
push
lods
push
inc
sar
or
dec
pop
iret
xchg
push
test
inc
xchg
mov
push
orl
scas
loop
sahf
not
imul
imul
xor
movsl
roll
out
nop
inc
push
out
mov
xchg
lret
push
pop
mov
imul
dec
adc
jne
xchg
arpl
dec
shrl
push
loop
jbe
dec
adc
mov
dec
cmpsb
shl
xchg
in
push
adcl
push
inc
xchg
aad
xchg
notb
aad
adc
and
push
sub
adc
mov
xchg
int3
into
in
mov
mov
sub
dec
push
add
xor
adc
inc
adc
mov
mov
pop
inc
push
and
push
adc
xchg
mov
xor
aad
arpl
dec
mov
or
xchg
fwait
dec
shl
roll
xlat
sbb
adcl
xchg
jns
xor
mov
push
mov
dec
cmpsl
sbb
push
cmc
aaa
insl
adc
dec
mov
push
inc
scas
mov
xchg
cmpsl
dec
jne
lahf
lods
add
dec
and
xchg
inc
ja
rclb
addr16
pop
mov
dec
mov
inc
mov
inc
aas
mov
mov
fadd
mov
out
daa
inc
jbe
pop
xchg
push
dec
pop
xchg
mov
and
mov
xchg
inc
dec
test
mov
arpl
ficoms
adc
cltd
adc
adcl
adc
or
pop
icebp
movsl
cmc
cmpsb
movsl
cmc
movsl
cmc
lds
pop
in
pop
je
pop
add
pop
xchg
dec
pop
and
mov
pop
inc
dec
pop
rorl
popa
dec
pop
lock
pop
orb
dec
mov
add
mov
mov
jne
mov
mov
and
mov
mov
shlb
icebp
mov
xorl
pusha
xchg
dec
push
pusha
push
xchg
push
lcall
add
int3
mov
push
jmp
nop
xchg
dec
xchg
hlt
lods
push
in
xor
popf
push
rcll
dec
mov
mov
aad
lock
adc
scas
std
adc
push
and
call
push
mov
push
adc
xchg
shl
xchg
dec
push
push
xlat
pop
aad
rclb
mov
sbb
adc
xchg
movsl
xchg
inc
push
and
notl
pop
movsl
xchg
push
out
aad
push
push
mov
dec
shrl
inc
xchg
testl
add
mov
test
xchg
xchg
push
mov
xchg
push
rclb
stc
inc
and
adc
adc
popa
xchg
test
and
pop
mov
dec
dec
adc
int3
popl
adc
aad
pop
in
xlat
pop
add
scas
out
pushf
pop
dec
jae
dec
lcall
xchg
rorb
dec
std
rorb
jo
ljmp
sahf
xchg
push
push
jg
adc
jg
mov
mov
cltd
mov
adc
ljmp
push
into
xchg
dec
js
and
pop
cmp
mov
fimuls
sahf
dec
pop
pop
aas
push
aam
movsl
ja
out
xchg
das
xchg
xchg
jb
sbbl
mov
inc
pop
or
push
mov
push
jg
pop
outsl
imul
test
mov
out
jne
scas
and
pop
decb
xchg
pop
cmpsb
dec
pop
dec
pop
jnp
jle
adc
push
and
jne
xchg
arpl
xchg
add
dec
adc
iret
cmp
dec
or
push
add
lock
aad
push
push
jb
push
push
xchg
imul
mov
xlat
movsl
aad
push
xchg
aam
outsb
xlat
pop
push
adcl
push
cmc
push
imul
push
cmc
push
shrl
lods
adc
out
push
push
push
iret
or
xchg
xchg
and
mov
xchg
cmp
pop
mov
frstpm(287
cmpl
pop
push
dec
adc
stos
xchg
dec
aam
rcrl
arpl
sub
fnsave
xchg
dec
cmc
rorl
ja
push
orl
dec
or
or
icebp
adc
adc
dec
ja
push
lcall
xchg
inc
rcll
int3
push
dec
cmp
mov
xchg
ret
arpl
dec
adc
rorl
jg
dec
push
jnp
shlb
arpl
shlb
lods
push
jl
jle
push
dec
adc
push
divl
push
dec
pop
inc
adc
inc
mov
popf
aad
mov
pop
das
adc
dec
pop
jecxz
pop
jae
push
ja
push
xchg
or
stc
xchg
lods
mov
mov
inc
mov
xchg
aas
lock
cmp
jae
and
and
out
rolb
out
xchg
inc
rorb
mov
lods
xchg
aaa
jnp
imul
cmc
xchg
cmpb
aaa
adc
test
xchg
push
aaa
lock
aad
push
push
adc
repnz
scas
pop
pop
xchg
aaa
xchg
fimull
mov
aam
push
scas
push
xchg
adc
lods
push
inc
adc
xchg
pushf
xchg
jnp
xchg
mov
jne
jnp
adc
xchg
push
jb
stos
xchg
dec
push
icebp
shll
inc
adc
sub
roll
inc
out
inc
cmpsl
popf
push
xchg
shrb
cltd
adc
hlt
outsb
push
daa
lods
adc
mov
mov
aam
movsl
daa
cmc
adc
mov
pop
push
movsl
pop
rcl
adc
aam
dec
push
inc
mov
fmuls
xor
dec
pop
pop
push
adc
fwait
dec
iret
ss
jp
adc
push
pop
adc
daa
mov
cmpsl
or
rcll
mov
test
inc
adc
inc
sarb
mov
pop
jnp
mov
add
pop
mov
arpl
shl
and
push
std
mulb
push
xor
xchg
inc
push
push
dec
rcll
shlb
cmp
dec
adc
subl
and
or
push
adc
dec
adc
push
fwait
dec
shl
push
fwait
dec
nop
icebp
push
fwait
icebp
mov
mov
push
inc
iret
sahf
adc
xchg
pushf
xchg
stos
adc
pop
data16
add
push
rcl
mov
push
in
adc
in
outsl
jnp
mov
mov
xchg
xchg
icebp
xchg
cli
xlat
out
mov
adc
dec
mul
dec
xchg
ficompl
out
in
dec
dec
lahf
xchg
mov
cmp
dec
xchg
mov
inc
addr16
sub
xchg
jp
dec
and
inc
jno
aaa
xchg
sbb
mov
daa
push
mov
lods
mov
pop
dec
cmp
daa
cltd
xchg
pushf
into
pop
push
pop
jbe
into
loop
cmc
mov
adc
dec
ja
xchg
dec
into
dec
mov
mov
mov
xchg
scas
dec
pop
cmpsb
mov
sahf
mov
xchg
mov
movb
inc
jbe
lock
outsb
dec
cwtl
data16
pop
mov
inc
push
xchg
jg
dec
xchg
aas
mov
push
mov
movsl
test
jg
shl
mov
dec
mov
cltd
fcoml
sti
xchg
cltd
mov
stos
xchg
cltd
cmp
pop
xchg
cltd
call
cltd
or
das
rorb
dec
dec
rorb
dec
insl
rorb
dec
mov
dec
sbb
push
aaa
xchg
mov
ja
nop
adc
jae
mov
adc
jae
cltd
dec
nop
test
rclb
shrb
aad
xchg
add
ja
jle
rclb
sbb
xlat
imul
push
cmp
mov
xlat
dec
push
jb
stos
xchg
dec
adc
push
fwait
adc
mov
mov
mov
dec
xlat
xchg
xchg
and
mov
popf
push
out
or
imul
pop
inc
adc
je
adc
jae
dec
jae
icebp
cmp
inc
mov
nop
mov
out
fnstsw
out
mov
cs
jge
push
lods
and
mov
xchg
sbb
mov
xchg
imul
xchg
mov
test
rclb
arpl
push
push
xchg
adcl
adc
xchg
add
arpl
push
xchg
or
xchg
aas
jnp
jle
push
or
cli
shrb
rclb
push
rol
imul
inc
push
sub
push
xchg
adc
jns
and
jo
pop
sbb
aad
outsl
mov
test
push
xor
pop
adc
xlat
imul
push
dec
popf
xchg
xchg
xchg
mov
mov
mov
pop
mov
xchg
push
dec
push
xchg
adc
xchg
push
mov
sbb
dec
xchg
icebp
push
arpl
inc
push
xchg
mov
adc
dec
mov
push
mov
jne
push
lods
push
jbe
xchg
imul
icebp
push
vpclmulqdq
cli
push
aaa
xchg
push
addl
push
rclb
xchg
scas
fs
push
xchg
adc
adc
jb
adc
jb
adc
repnz
or
push
shlb
adc
rclb
xchg
xchg
push
loopne
rclb
push
loopne
cmpsb
jae
push
dec
jg
sarb
push
push
test
xchg
ret
scas
scas
adc
pushf
scas
ret
rolb
scas
cltd
xlat
mov
leave
aaa
pop
xchg
orl
mov
xchg
push
sbbl
fstps
mov
sahf
and
inc
aaa
popf
xchg
aad
cltd
adc
aaa
inc
mov
sahf
icebp
adc
push
pop
add
push
push
mov
aam
or
fidivrs
mov
xchg
mov
cmp
cmp
xchg
dec
aad
pop
dec
rcll
xchg
adc
into
fwait
sbb
xchg
push
ficompl
nop
aaa
adc
push
in
rclb
les
adc
nop
mov
inc
xchg
mov
xchg
pop
push
push
adc
into
aaa
adc
mov
aam
pop
insb
xchg
xchg
xor
mov
or
dec
push
mov
inc
pop
add
jmp
ds
mov
mov
rclb
das
push
test
xchg
or
xchg
aad
aam
xchg
aam
xchg
xchg
loopne
rol
ja
and
out
rolb
push
xchg
pop
or
jle
shl
and
daa
call
xchg
push
and
mov
adc
rcll
repnz
push
xchg
idivb
lcall
notb
arpl
lods
push
jbe
xchg
imul
xchg
les
loopne
xchg
xchg
mov
inc
xchg
mov
jge
mov
adc
outsb
rcl
mov
rcl
xchg
xchg
arpl
aam
shl
inc
push
xchg
xchg
xchg
loopne
push
movb
or
pop
bound
adc
pop
stc
xchg
aaa
xchg
pop
xor
popf
jge
ds
std
data16
xor
pop
adcw
dec
xchg
data16
xchg
pop
xchg
enter
rcll
pop
adc
outsb
shll
adc
scas
pop
dec
nop
les
push
pop
stos
rcl
ficoms
xchg
xchg
pop
ljmp
mov
jle
inc
scas
mov
lds
push
xchg
pop
imul
rorb
adc
out
shlb
nop
insb
inc
xchg
adc
cs
mov
jae
dec
dec
ds
fdivl
dec
pop
sti
dec
pop
mov
sbb
stos
aas
cmp
leave
movsl
cmc
pop
movsl
cmc
call
cmc
or
aam
movsl
push
enter
xchg
dec
ds
adc
and
push
and
cs
xor
mov
mov
test
jl
jle
xchg
xor
xchg
adc
adc
jae
and
xchg
and
pushf
xchg
adc
repnz
imul
jbe
push
imul
inc
lock
lret
xor
mov
xchg
das
aam
jb
arpl
push
xchg
push
loopne
push
into
adc
inc
adc
notb
enter
push
dec
test
xchg
push
mov
inc
cld
xchg
mov
movsb
inc
xchg
dec
mov
xchg
repz
mov
fwait
push
mov
pop
mov
cmp
mov
add
shr
jae
xchg
jae
aas
jae
out
adc
jae
push
push
mov
inc
xlat
xchg
ss
push
out
nop
xchg
and
mov
mov
popf
push
cmpsl
inc
cs
out
push
cmp
lods
push
xchg
inc
xchg
push
or
push
aaa
jns
movsl
push
inc
push
xchg
ja
adc
jl
mov
adc
xor
dec
adc
imul
xchg
dec
xchg
fimuls
fdivs
ss
jge
or
je
mov
xlat
dec
xchg
in
inc
mov
pop
jle
aad
roll
xchg
push
rcll
xchg
jle
lock
mov
xchg
push
pop
xor
or
mov
fsubrp
pop
xchg
mov
xchg
repz
xor
xchg
or
xchg
icebp
or
xchg
push
or
xchg
mov
adc
xchg
adc
ret
push
push
xchg
ja
dec
xchg
xchg
or
xchg
ss
xchg
xchg
or
xchg
hlt
or
xchg
push
or
xchg
mov
pop
push
imul
pop
pop
rcl
fisttpll
and
jle
push
jge
and
adc
xchg
ja
sarl
xchg
mov
push
dec
nop
push
out
xor
pop
xchg
xor
or
dec
pop
and
aaa
or
test
lock
imul
fisttpl
xor
push
xlat
std
imul
cwtl
push
das
push
shl
push
cmc
out
pop
cmc
mov
adc
pmuludq
enter
mov
into
push
push
movsl
cmc
into
shl
popf
adc
dec
xchg
xchg
ss
test
and
mov
push
adc
in
lock
in
mov
xor
inc
rorb
mov
ret
mov
push
and
loop
movsl
rolb
and
xor
push
or
pop
mov
mov
mov
fwait
dec
push
icebp
pop
arpl
jbe
ja
ss
xor
aam
push
adcl
adc
xchg
shl
sbb
mov
pop
into
adc
pusha
xchg
aad
popf
ror
xchg
test
jl
mov
xlat
inc
cs
inc
xor
push
push
fisttpl
adc
or
idivb
push
xchg
xchg
in
int
jmp
mov
push
imul
mov
cmc
xchg
imul
mov
inc
xchg
out
rolb
out
xchg
lds
jle
xchg
or
adc
mov
dec
shl
xchg
arpl
aad
ja
xchg
gs
adc
ss
adc
ja
push
iret
adc
aad
xlat
outsb
mov
dec
lods
subl
mov
xlat
imul
mov
cmc
push
imul
mov
ficoms
mov
sbb
movsl
mov
shl
xchg
and
out
rorb
scas
addr16
mov
dec
pop
lods
adc
adc
imul
insl
xchg
sbb
sahf
rorl
lods
fidivs
push
mov
inc
dec
push
or
movsl
push
dec
xchg
jb
cmp
xchg
xchg
and
adc
adc
cmpsb
pop
pop
pop
arpl
mov
cmpsb
popf
adc
scas
jge
and
popf
dec
push
hlt
xchg
mov
mov
fstl
xor
stos
xor
xchg
rcr
push
adc
and
xchg
mov
cmpsb
push
push
push
mov
cmc
adc
mov
lds
test
rcll
dec
test
push
mov
push
repnz
xchg
enter
mov
iret
jae
addr16
popa
fcoml
es
xor
addr16
push
test
mov
call
push
addr16
mov
mov
xchg
mov
xchg
shll
repnz
inc
divl
cld
inc
int3
mov
test
adc
aaa
iretw
test
clc
mov
adc
enter
in
dec
hlt
popa
sti
nop
sbb
call
inc
shrb
pop
pop
loop
aad
mov
incl
insb
mov
int
mov
je
and
mov
jl
inc
pop
jle
call
ret
sbbb
inc
jmp
insl
test
sbb
aaa
and
jmp
inc
in
cmp
testl
pop
in
xchg
fbstp
sbb
outsl
mov
in
jg
stc
inc
or
sub
cmp
int3
push
cmpsb
aaa
mov
ja
xchg
inc
adcl
cmpsl
cmp
pop
xor
inc
rolb
inc
addr16
push
int
xchg
in
ror
add
xchg
adc
fildl
arpl
inc
xor
fists
test
jmp
fstl
pop
mov
cmc
sub
pop
and
pop
loop
lds
es
mov
clc
pop
ds
xor
leave
daa
insl
push
popf
mov
icebp
jge
mov
rorb
inc
iret
xchg
nop
push
dec
rcl
adc
xor
daa
push
cmc
ret
xor
sbb
rolb
ss
add
xchg
adc
mov
and
xor
push
xchg
andb
out
pop
or
js
dec
movsl
xlat
das
loopne
loopne
add
xor
adc
xchg
mov
push
es
loopne
mov
jge
push
fsubrs
notb
sub
bound
movsb
push
xchg
cltd
movsl
push
push
ret
lock
or
fadd
sbbb
add
sbb
mov
movl
jmp
pop
jecxz
xor
inc
fdivs
mov
cmp
push
inc
adc
dec
movsb
inc
clc
jle
inc
pop
mov
adc
xchg
or
mov
mov
cmp
popf
bound
arpl
rolb
out
jb
sbb
push
mov
es
daa
imul
inc
ss
push
mov
xor
fmul
bound
scas
ret
and
push
inc
adc
or
mov
iret
add
ret
loope
inc
cli
push
loop
pop
loope
and
adc
fnstenv
aaa
into
push
aas
jnp
in
pushf
pop
or
lds
orb
shl
or
adc
int3
outsb
pop
cs
push
jns
pop
cmc
int
sub
enter
dec
in
inc
nop
insl
add
cmpsb
and
ljmp
add
and
sub
mov
ret
cmpsl
dec
out
les
out
hlt
xor
push
bound
xor
aaa
mov
subl
xor
xchg
mov
jo
mov
mov
insl
leave
xor
and
shr
mov
inc
lods
popl
cmp
iret
jecxz
xchg
mov
imul
mov
lock
adc
adc
and
dec
iret
idivl
add
and
sbb
inc
das
push
push
inc
iret
ftst
push
dec
inc
push
lds
mov
fwait
rorb
jae
xlat
fisttpll
xor
add
ret
cs
mov
movsb
je
or
popf
pop
pop
popa
fs
je
and
push
stos
inc
int3
fidivs
inc
inc
out
xchg
push
mov
xchg
addr16
lods
fs
test
shrl
mov
jge
lret
mov
add
ss
inc
iret
mov
mov
push
movsl
and
push
xchg
mov
call
ss
sub
in
pop
test
in
addb
hlt
push
ret
pop
push
inc
arpl
cs
dec
adc
xlat
mov
pop
xchg
mov
add
call
pop
push
lods
add
xor
stos
pop
lock
jecxz
sarl
aaa
cs
xchg
jecxz
not
ja
mov
mov
jne
sbb
sbb
lods
pop
into
xlat
es
mov
pop
sbb
call
int3
dec
sub
test
xchg
xchg
inc
mov
in
push
sti
mov
inc
push
fs
xor
cmp
outsb
in
and
mov
cmp
rorb
orl
cmp
repnz
push
mov
adcl
leave
test
and
mov
push
ret
mov
pushf
sub
add
stc
test
xchg
dec
sbb
mov
iret
scas
or
lahf
push
scas
push
scas
insl
mov
addr16
leave
mov
into
adc
data16
rclb
and
lea
cmp
es
incl
sbb
pop
movsl
dec
xchg
adc
insl
into
lock
popa
inc
cmpsb
xchg
aas
out
jmp
dec
mov
mov
cld
xchg
pop
subl
testb
pop
or
inc
xchg
loop
inc
mov
and
cmpsb
std
cltd
push
sbbb
sbb
mov
fadds
dec
and
jecxz,pn
xor
dec
push
and
sub
je
xchg
add
testl
jne
shlb
ror
jmp
xchg
xchg
ret
and
das
ret
lret
or
xor
mov
inc
aaa
xchg
dec
iret
sub
mov
adc
push
out
sub
iret
mov
aaa
divl
mov
jle
pushf
pop
aad
add
outsb
aaa
hlt
mov
jbe
in
add
mov
inc
jne
fmull
je
push
adc
aas
insl
repnz
out
push
insb
in
daa
jnp
pop
xchg
fistpll
dec
xchg
movsb
pop
mov
jae
jne
les
mov
cmp
pop
inc
mov
xchg
xchg
jle
xchg
inc
add
cmpsb
mov
shlb
or
sti
test
adc
mov
or
gs
dec
push
lds
lock
xchg
addr16
mov
mov
pop
idiv
in
push
xchg
xor
faddp
das
sub
xchg
int3
subl
cmpsb
xchg
push
bound
ja
repz
data16
pop
inc
pushf
xchg
or
inc
jbe
outsl
sbb
rol
or
sti
test
jne
xchg
insl
jb
add
out
xchg
movsl
nop
dec
test
push
ljmp
scas
mov
loop
aaa
inc
ret
mov
push
andl
dec
cmp
subl
and
fcmovnb
sbb
out
mov
pop
mov
andl
push
imul
stc
ss
mov
mov
mov
pop
or
push
inc
pop
sub
fcomps
fdivrl
adcb
and
adc
mov
orb
xor
xchg
and
add
mov
cmp
lea
adc
push
notb
pop
sbb
sub
or
adc
mov
ret
stc
inc
push
push
loope
or
push
leave
stos
inc
pop
gs
xor
xchg
add
stos
into
xor
insl
xchg
push
jns
mov
lret
pop
dec
mov
aad
pusha
scas
mov
dec
scas
fisttpl
mov
lgs
idiv
mov
lods
popf
jbe
push
dec
inc
cmpsl
pop
sub
imul
inc
fisttpl
mov
mov
xchg
push
mov
mov
lods
fisttpll
push
fcompl
aam
xchg
lods
jne
mov
mov
lea
lock
rclb
cli
int
xchg
xchg
lea
pop
lret
shlb
xor
sub
dec
pop
fdivl
out
cmp
push
movsb
sub
imul
pop
xchg
arpl
rolb
dec
js
mov
hlt
hlt
test
data16
test
pop
xchg
ja
xchg
jae
add
inc
mov
ss
jge
ljmp
call
sbb
or
out
add
add
lret
aaa
cltd
cmpsb
test
movsl
aam
mov
lods
aad
or
xchg
push
fistps
pop
xor
hlt
inc
jns
inc
int
mov
loopne
sbb
xor
push
arpl
mov
dec
ret
push
incb
je
inc
and
orb
testl
lock
ret
mov
sbb
divb
stos
ret
push
push
mov
scas
popa
fcmovnbe
mov
out
xchg
dec
aaa
or
sbb
pop
inc
repz
xor
in
mov
movb
jg
pusha
xor
inc
aaa
pop
xor
lret
adc
insl
adc
adc
ljmp
jg
jne
push
test
push
and
repz
xchg
mov
clc
leave
mov
ret
mov
mov
shrb
inc
push
xchg
cmp
mov
xchg
ret
insb
mov
jb
ljmp
mov
xor
or
push
inc
out
dec
push
cmp
es
lods
sub
lock
das
test
std
pop
jbe
jo
movsl
stos
pcmpgtw
les
popl
sub
add
or
xor
adc
xchg
mov
arpl
fld
xchg
jbe
aaa
mov
flds
loope
cmp
jno
stc
jb
cmp
sbb
shll
jg
or
test
xchg
push
loop
in
inc
cmpsb
xor
inc
mov
andb
mov
or
daa
add
sub
sub
add
push
fldenv
lods
push
test
mov
adc
iret
sub
scas
sub
xchg
pop
into
push
push
mov
cmpsb
stos
rcrb
pusha
js
stos
ret
stc
dec
cmpsl
ret
cmp
arpl
ss
jge
push
sub
pop
icebp
xchg
xchg
insb
movsl
mov
adcl
jmp
sbb
arpl
add
fdivrl
jne
xchg
data16
sub
inc
add
dec
ds
adc
int
ret
cmp
mov
mov
sub
movsb
sbb
ss
bswap
sbb
cmp
cmp
pop
mov
ret
adc
sub
stc
xlat
push
std
test
xor
cmp
pop
loop
inc
lds
mov
lea
sub
push
outsb
push
jge
jnp
mov
ljmp
data16
mov
xchg
lea
add
test
add
push
mov
jne
inc
popf
xlat
int
test
std
push
int3
xchg
ret
or
test
mov
aaa
addr16
jge
and
and
in
sahf
and
roll
int3
inc
jecxz
or
push
push
aam
test
cltd
mov
sahf
stos
shrb
jb
mov
push
push
mov
inc
in
push
filds
rolb
test
mov
mov
mov
xor
cmc
push
xchg
int3
and
and
or
add
popa
jbe
ret
dec
js
pop
cmc
jno
jo
jno
jl
aaa
imul
insb
xchg
test
notb
xor
pop
cmp
leave
inc
xchg
ret
push
lods
and
int
or
mov
repnz
call
push
adc
shr
dec
sub
adc
and
xchg
movsl
mov
xor
xor
and
aaa
lods
ljmp
adc
das
jb
or
std
inc
and
push
mov
in
loop
gs
sub
cmp
jecxz
push
mov
inc
mov
and
jg
push
jp
or
aaa
xor
outsb
aaa
and
mov
es
into
jmp
cmpsb
insb
mov
outsb
push
xchg
fcoml
cmp
or
daa
aad
sbb
add
insl
aas
addr16
pop
ljmp
rdmsr
push
dec
mov
xchg
pop
dec
clc
sti
mov
push
mov
xchg
cmp
jp
mov
dec
mov
es
int
sub
mov
push
rorb
and
jp
sahf
mov
out
mov
cmpsl
fildll
test
xor
push
ss
mov
sbb
fstl
outsl
mov
add
and
push
xchg
add
aaa
cmp
out
jne
das
or
pop
cmp
fs
sub
in
jno
jmp
sbbb
cmp
xchg
mov
notl
aaa
and
xchg
mov
or
int
repz
mov
xor
fwait
insl
lods
xchg
sub
push
sbb
cld
push
push
push
push
or
movsb
cmp
les
sbb
pop
mov
ja
inc
push
xchg
into
leave
jae
cwtl
xchg
fidivrl
cmp
push
push
cmpsb
repz
dec
repz
sar
aad
ds
push
seta
sbb
pop
push
shll
sub
and
shrl
lret
je
dec
or
nop
sub
ss
lret
sbb
repz
adc
dec
and
notb
jb
mov
jo
outsb
in
scas
inc
lahf
cmp
mov
aam
lods
rorl
mov
jne
push
dec
jbe
xchg
movsb
mov
dec
xor
xchg
andl
imul
xchg
test
and
xchg
out
jns
in
test
or
test
mov
xchg
xchg
xchg
xchg
push
xchg
ss
sbb
xchg
cmc
out
shll
shr
rclb
sub
lock
cmp
cmp
cmp
xorl
push
mov
and
loope
sub
imul
and
loopne
lcall
mov
mov
shrl
orl
mov
xor
xor
loopne
scas
data16
dec
out
sbb
xor
in
jo
aas
push
int
incl
stos
mov
test
xchg
jge
in
mov
sbb
mov
push
jo
pop
push
mov
cmp
lret
adc
popa
mov
out
xchg
xchg
data16
jns
cmp
pop
andl
inc
xchg
pop
shll
adc
push
xchg
sbb
xchg
popa
jne
xor
pop
aad
push
dec
mov
jo
jno
xor
ss
mov
repz
pop
jg
or
push
xchg
push
cmp
ss
mov
aaa
shlb
xchg
xor
aaa
jb
pop
shlb
mov
xchg
xchg
jae
stos
aaa
inc
xchg
mov
push
iret
jp
mov
ror
sbb
xor
xchg
stc
lds
mov
jae
aaa
or
test
xchg
mov
xchg
xor
and
mov
in
inc
js
xor
sbb
xor
cmpsb
xchg
fmul
aaa
sbb
xor
insl
mov
mov
dec
cltd
mov
iret
insb
xor
mov
xor
push
in
cmpsb
xchg
sub
xchg
jmp
lods
or
adc
mov
andl
push
add
pop
xchg
mov
push
out
pop
xchg
andb
fdivrl
push
xchg
in
mov
popf
aaa
mov
push
jmp
pop
fildll
xor
iret
das
mov
repz
shrl
mov
or
repz
pop
xlat
mov
adc
xor
jo
xor
subl
in
push
xchg
loopne
jne
je
cmp
aaa
call
cmc
into
aaa
xor
or
xchg
or
fld
xchg
repz
outsb
sbb
xchg
and
aam
lcall
in
inc
push
aaa
test
mov
mov
xchg
sbb
sub
xor
mov
ss
aaa
or
xor
push
jmp
or
out
adc
mov
mov
mov
cmc
sub
jb
xor
aaa
js
add
pop
adc
stos
add
xor
jge
cmc
add
jo
nop
shlb
loope
sub
sbb
or
jle
jb
iret
dec
shl
xchg
push
stc
scas
mov
sub
push
dec
xchg
xorl
inc
jmp
xchg
ret
icebp
out
adc
outsb
fidivs
jne
lods
filds
out
mov
gs
lret
xchg
pusha
sti
add
imul
dec
sbb
call
sub
sbb
mov
dec
in
xchg
add
mov
xchg
xor
enter
inc
aad
mov
xchg
enter
xchg
leave
pusha
rorb
jecxz
das
ret
push
jno
or
movsb
fadd
or
repz
adc
dec
push
mov
push
ficomps
in
jb
dec
imul
sub
push
xor
mov
push
mov
test
cmp
mov
ja
push
aaa
or
sbb
add
inc
fldenv
inc
sahf
leave
fisttpll
jecxz
gs
mov
sti
lods
outsl
aaa
sbb
sahf
cld
mov
jbe
loopne
inc
in
sbb
out
xchg
mov
sbb
add
xor
decl
flds
addr16
sub
in
ss
addr16
lock
inc
inc
aaa
movsb
add
cmc
scas
popa
push
or
scas
stc
jnp
bound
mov
ds
sub
adc
loope
rclb
or
mov
mov
pop
cmc
lcall
or
std
loopne
mov
iret
or
sub
xor
cmp
subb
adc
jmp
push
in
aaa
adcl
hlt
rolb
sub
xor
cmp
and
sbb
insl
adc
mov
mov
icebp
mov
scas
and
out
fisttpl
adc
fstps
pop
js
push
mov
aaa
mov
cwtl
push
sbb
out
jnp
xchg
out
call
iret
dec
mov
ja
adc
je
hlt
inc
xor
scas
sbbl
mov
and
loope
idiv
popf
inc
jge
mov
jns
jg
enter
cmpl
add
idiv
xlat
sbb
add
sbbb
and
and
xchg
aad
sbb
mov
pusha
pop
xchg
pop
popa
jb
daa
out
pop
dec
adc
js
cmp
jbe
stc
inc
jb
orl
call
rcrb
sub
stos
mov
inc
dec
shl
push
lret
push
cmp
and
push
loopne
out
stos
xchg
jmp
out
pop
and
or
mov
mov
xchg
gs
ficoml
fildl
push
ret
xor
sub
adc
jne
dec
fdivs
push
out
pop
pop
imul
cmp
lds
xchg
push
mov
shlb
sbb
dec
jne
insl
add
xlat
sbb
pop
and
dec
sub
das
xor
fists
ret
push
push
pop
mov
sub
mov
dec
jae
adc
sbb
xchg
xorb
int
movzbl
adc
orb
inc
or
adc
scas
mov
cltd
push
iret
cmp
fdivrs
push
into
aas
cmpsl
mov
ja
jmp
roll
dec
cmpsb
addr16
popf
xor
xor
lods
mov
lea
xchg
push
dec
ffree
sub
dec
add
ja
xor
lret
mov
insl
mov
xchg
push
hlt
cmp
sub
sti
ret
xor
not
das
mov
data16
push
and
gs
out
jne
pusha
pushf
shlb
cmp
or
jmp
andb
gs
or
ret
mov
stos
dec
lcall
mov
mov
push
inc
inc
ja
add
lcall
xchg
js
inc
xlat
or
adc
sbb
inc
jmp
int3
out
pop
je
push
fnstenv
daa
aaa
cmpsl
mov
icebp
out
and
mov
push
outsl
es
xlat
cmpsl
mov
movb
iret
movsl
sub
fs
and
rcr
popa
aad
scas
cmp
lcall
aaa
lds
push
mov
xchg
sbb
mov
stos
pop
sbb
push
adcl
cmp
ret
cltd
pop
outsl
xchg
mov
add
xor
mov
into
inc
fidivs
insl
or
aaa
inc
inc
inc
shl
lods
movsl
int
mov
xor
pusha
in
push
addr16
movl
cmpsb
mov
xchg
xchg
popa
jno
test
adc
push
mov
shlb
shll
adc
xor
pop
lock
push
and
mov
inc
shr
jmp
adc
repnz
cmc
test
pusha
sti
xor
aaa
jmp
inc
sbb
adc
add
js
fstl
fisttpll
loope
and
mov
xchg
insb
movl
jl
lret
pop
addb
lods
fidivrs
push
les
fisubs
repz
cli
push
test
js
mov
cmpsl
push
xchg
pop
or
mov
push
dec
adc
aas
lds
mov
push
ja
dec
jne
xor
push
ja
mov
mov
imul
xor
mov
lret
test
fcompl
mov
mov
leave
hlt
pop
hlt
pop
xor
jbe
push
jae
lods
movsl
push
ficomps
xchg
imulb
aaa
and
int3
hlt
stos
fistpl
in
mov
es
jbe
mov
push
mov
int
shll
pop
jmp
mov
xchg
jl
insb
pop
aad
lret
ss
jb
addr16
xchg
clc
test
lds
shll
push
loopne
cli
cmpsl
xor
aaa
out
cmc
aam
xor
add
test
dec
xchg
inc
ss
lds
push
rcll
xchg
sbb
adc
inc
mov
pop
push
movsl
int3
mov
mov
out
lods
push
xor
inc
insb
push
and
divl
ret
jg
lea
fs
aaa
ja,pn
arpl
or
aam
sbb
outsb
adc
rep
inc
scas
sub
lods
es
testl
out
in
cmovbe
xor
inc
divb
dec
jbe
jb
mov
cmp
cmpsb
lret
xchg
test
mov
cmpsl
add
or
mov
cmpsb
cmpsl
incb
xchg
push
mov
into
cmpsl
es
mov
xor
xchg
in
les
dec
adc
xchg
jbe
cld
int
repnz
push
and
mov
jo
xchg
push
push
sub
test
movsb
pop
adc
andl
out
ljmp
xor
mov
push
push
push
and
icebp
je
push
sbb
lock
pop
mov
fisubrs
pop
scas
out
xchg
jg
dec
iret
xor
iret
dec
mov
mov
xchg
ret
dec
mov
mov
mov
sbb
es
sarl
pop
cltd
push
xchg
and
les
jne
or
imulb
xor
dec
dec
mov
push
mov
xchg
xchg
dec
lahf
mov
xchg
rorl
dec
adc
jg
mov
push
mov
xchg
je
addr16
xchg
mov
mov
jno
aam
dec
hlt
mov
adc
mov
xchg
push
dec
das
jne
daa
xchg
mov
inc
mov
pop
xchg
aad
shufps
pop
push
mov
inc
ss
xchg
push
dec
out
jbe
out
mov
inc
mov
in
mov
testb
xchg
aaa
dec
mov
ja
scas
mov
cmpsb
dec
testl
xchg
xchg
dec
xor
mov
inc
jle
nop
xchg
jbe
mov
outsb
mov
mov
inc
pop
mov
xchg
push
dec
xor
dec
mov
inc
mov
ds
xchg
ss
mov
cs
es
inc
push
mov
inc
xor
les
pop
adc
xor
xor
xchg
lahf
ja
iret
pop
outsl
jg
xchg
mov
cmpsl
int3
mov
mov
push
push
movsb
cmp
std
push
xlat
into
out
jle
scas
mov
es
idiv
jbe
xlat
cs
data16
xchg
cmpsb
push
push
push
outsb
fwait
ds
mov
push
scas
xchg
pushf
test
je
les
int3
pop
xlat
lods
pop
sysret
imul
out
into
mov
ffree
into
pop
or
test
push
mov
out
iret
sar
xor
push
mov
pop
out
pop
test
cmpsl
scas
pop
cmpsl
aaa
push
xor
xchg
sbbl
sbb
dec
ficoms
mov
ja
ja
xchg
outsl
mull
mov
mov
inc
pop
push
dec
pop
into
sahf
or
rcll
push
dec
ja
push
aaa
into
mov
fwait
int3
pop
inc
sarl
jae
xchg
mulb
mov
xchg
scas
seta
into
shll
dec
xchg
aas
pop
inc
xchg
scas
pop
das
pi2fd
out
ja
xchg
inc
idivb
jmp
out
mov
pop
ud0
stos
xchg
and
scas
lds
push
mov
dec
mov
dec
out
lret
xchg
xchg
scas
lret
push
in
pop
mov
cmp
sahf
pop
test
push
outsb
inc
inc
es
xchg
cmc
aaa
es
jo
dec
push
xchg
xchg
cs
xchg
add
xchg
into
aaa
idivb
jbe
into
decb
pop
xchg
outsb
loopne
pop
data16
test
pop
push
pop
mov
push
xor
es
dec
ror
cmpsl
inc
or
shl
sbb
shl
push
jle
ucomiss
pop
movl
jecxz
mov
push
sub
push
xor
das
xchg
mov
addr16
xchg
mov
aad
in
adc
neg
nop
aad
mov
popf
cs
int
cmpsl
lds
aaa
mov
fisubs
into
repz
shll
lods
mov
std
into
or
out
pmuludq
shll
push
popf
push
and
xchg
imul
into
inc
push
test
subl
inc
divb
xchg
xchg
and
shll
push
jae
pop
ficoms
out
out
and
sarl
mov
mov
inc
xchg
imul
dec
movl
dec
inc
inc
testb
into
mov
fwait
xor
divb
ja
and
adc
jae
neg
mov
xchg
dec
cld
xor
movl
ja
ss
addr16
and
mov
jno
aam
xchg
int3
lret
or
xor
mov
mov
sbb
es
lods
repz
jg
movsb
outsb
addr16
ds
stc
aad
mov
xor
jl
xchg
push
je
mov
popf
insb
popf
xchg
scas
fs
sub
pop
push
jle
adc
adc
movsb
inc
das
cmp
mov
sub
pop
cmpsb
jle
mov
mov
or
pop
orl
xchg
sahf
add
pop
icebp
cmpsb
xchg
scas
sub
mov
lods
repz
xchg
mov
xchg
jecxz
inc
mov
xchg
push
outsl
into
pop
mov
pop
ret
loope
incb
stos
push
pop
stos
mov
sahf
xchg
test
inc
mov
mov
dec
setnp
push
xchg
xchg
out
mov
je
stos
dec
mov
outsb
ss
xchg
shll
lods
xorl
mov
jg
mov
test
pop
pop
add
testb
adc
lods
dec
ja
xchg
movl
imul
xchg
divl
mov
std
mov
sub
dec
fwait
mov
sti
into
dec
and
adc
lds
rcrb
rcll
test
push
ss
pop
into
xchg
add
subl
lret
adc
mov
das
loop
xchg
fimull
pop
mov
sbb
lret
xchg
ret
imul
push
packssdw
es
stos
loopne
out
mov
xchg
mov
mov
mov
pop
mov
data16
xchg
adcb
jp
jb
das
mov
negl
push
roll
pop
popa
ja
xchg
dec
fnstcw
cmovb
pop
fisubrl
cmp
mov
scas
fidivrs
cmovo
pop
rdmsr
cmc
jbe
push
scas
xchg
sub
and
dec
or
xchg
jae
adc
scas
xchg
push
lods
daa
mov
mov
es
scas
into
mov
xchg
or
rcrl
add
pushf
divb
mov
xchg
es
shr
or
jne
jle
mov
dec
stos
push
sahf
push
loope
test
mov
in
xchg
leave
jcxz
cmp
sarl
mov
push
es
push
pop
mov
aaa
add
jns
jno
sarb
jbe
imul
ja
mov
cmp
scas
xor
inc
dec
shrl
icebp
mov
addr16
and
xchg
scas
dec
sub
sub
imul
call
xchg
push
adc
pop
inc
mov
popf
pop
into
pop
mov
inc
mov
pavgw
lds
jg
xchg
xchg
inc
pop
add
shrl
into
paddd
pop
into
pop
dec
mulb
or
adc
call
mov
outsl
arpl
mov
pop
lret
fdivr
xchg
cmp
ror
adc
dec
das
xchg
mov
mov
cmpxchg8b
int
shrl
in
aaa
mov
xchg
sbb
js
inc
out
sub
dec
push
xchg
jo
rcll
push
inc
pop
push
dec
ss
mov
pop
mov
xchg
inc
dec
dec
xor
cs
push
das
es
inc
loopne
popf
ret
cmp
xor
xchg
cld
mov
sub
outsb
addr16
inc
mov
mov
mov
roll
or
xchg
test
push
xchg
rcll
xchg
mov
xchg
jbe
jle
into
pop
push
sahf
icebp
xchg
imul
mov
outsl
inc
int
cmp
dec
out
dec
xchg
fisttps
into
pop
mov
cmpsl
lret
outsl
movsb
pop
mov
push
push
xor
lret
inc
mov
fisubrs
push
mov
xchg
scas
pop
or
push
add
xchg
dec
sub
jne
xchg
pop
jg,pt
movsl
jae
scas
outsl
adcl
scas
out
pop
lret
inc
ja
mov
outsl
pop
dec
inc
test
pop
movsl
aas
jbe
aaa
push
pop
jo
stos
mov
xchg
das
lret
addr16
cmpsb
loop
lds
push
daa
add
movsb
mov
outsl
imul
pop
inc
rolb
movd
mov
mov
xchg
testb
into
pop
and
pop
lahf
out
lret
out
ja
es
push
ficoms
add
pop
dec
out
mov
mov
mov
jle
xchg
xchg
hlt
jle
lret
ja
out
stc
into
push
dec
mov
adc
push
rolb
daa
and
add
inc
pop
mov
into
inc
testb
mov
jle
xor
icebp
mov
scas
or
or
mov
data16
mov
into
movsl
push
out
xor
arpl
xchg
pop
movsl
inc
ss
pop
xchg
pop
and
idivb
ss
es
popf
fiadds
in
push
imul
shrb
fstl
push
mov
xchg
xor
pop
push
mov
push
sub
out
incb
test
push
pop
sbb
inc
ss
aaa
cmc
jbe
in
mov
sbb
movsl
cs
aad
xchg
xchg
int
es
and
mov
out
inc
push
cmpsl
lods
mov
hlt
movl
loopne
mov
push
sbb
pop
es
shlb
xchg
das
into
scas
in
aam
popf
lret
adc
push
mov
scas
pop
mov
cs
adc
iret
int
dec
mov
outsl
mov
jbe
dec
adc
push
xchg
jne
lea
test
das
cmpsb
mov
adc
hlt
pop
pop
jecxz
in
es
rcll
outsl
mov
ss
add
aam
ficomps
outsl
int3
push
outsb
jg
cmp
scas
jle
mov
packuswb
jae
pop
pop
xchg
xchg
jne
je
jg
arpl
insl
lret
cmpsl
push
inc
fisubs
loope
fwait
shll
mov
lods
and
cs
mov
std
outsl
adc
cmc
lret
push
jle
pop
push
xchg
xchg
xchg
adc
pop
lret
lahf
jbe
cs
ja
fwait
sarb
pop
jbe
xchg
outsl
xchg
pop
adc
pop
push
mov
aas
nop
xlat
pop
mov
xchg
repnz
repnz
loope
ja
xchg
pop
test
mov
push
push
aaa
sbb
int
inc
addr16
ja
xor
jl
pop
inc
xor
jno
shlb
idivb
out
test
inc
mov
jno
xor
dec
fs
aaa
lret
ret
cmpsl
sahf
fidivl
push
je
pop
out
push
push
add
add
push
movsl
xchg
outsl
mov
rclb
dec
lret
xchg
mov
pop
jne
lds
push
lds
arpl
ret
mov
jb
es
adc
das
outsb
and
mov
mov
sti
inc
xchg
aas
hlt
xlat
pop
cmpsl
movb
ret
aad
inc
and
cmp
push
iret
lock
mov
inc
ss
cmp
xchg
nop
dec
xchg
outsb
into
xor
adc
xor
push
mov
mov
lahf
aaa
sahf
push
mov
les
inc
and
push
pop
sub
repz
bound
xchg
xchg
movl
into
adc
xchg
addr16
xchg
test
ja
movswl
xchg
pop
dec
pusha
xchg
mov
and
mov
adc
adc
aam
es
mov
xchg
dec
push
sbb
sbb
xchg
xchg
jbe
aam
mov
xchg
xchg
xchg
dec
xchg
mov
xchg
pop
or
sbb
xor
rcrb
inc
out
cmp
jecxz
shll
jbe
jg
xchg
mov
xor
aad
lret
mov
dec
ret
out
aad
xchg
mov
ret
daa
cmpsb
mov
xor
je
mov
shr
test
outsb
into
xchg
xlat
adc
xchg
push
xchg
dec
test
jne
adc
scas
loop
repnz
aas
mov
in
aaa
mov
repnz
adc
mov
sahf
adc
mov
inc
push
jge
add
aam
int3
mov
les
nop
je
ja
jle
push
ja
dec
push
xchg
icebp
xchg
ss
shrb
jne
shl
mov
das
sub
ret
lock
aas
push
add
cmpsl
ja
adc
push
adc
pop
xchg
out
fisubs
inc
pop
stos
sbb
mov
add
testl
xchg
mov
mov
mov
lods
scas
mov
push
ds
test
inc
push
pop
add
test
and
ret
mov
mov
cmp
fidivs
testl
pop
ret
xchg
divb
mov
ror
das
push
seta
fsts
aaa
add
pop
leave
jl
lea
lds
inc
js
movsb
aam
lahf
xor
jbe
dec
mov
shlb
cmova
xor
jne
jno
inc
adc
add
adc
daa
jbe
adc
xchg
inc
je
out
scas
imulb
jle
xlat
xchg
je
fisubs
push
mulb
push
inc
jle
insl
pop
in
popl
jbe
push
scas
xchg
fs
adc
inc
pop
cmp
iret
jae
mov
pop
xchg
add
popa
jg
add
pop
jno
mov
imul
push
das
pop
push
rcll
push
inc
mov
mov
scas
sub
jbe
add
aas
xchg
xchg
jne
xchg
mov
xor
push
inc
push
mov
dec
testb
mov
xor
div
or
aas
rcl
dec
push
ds
sahf
xchg
xchg
mov
ja
das
push
adc
push
push
pop
adc
shll
mov
data16
je
mov
xorb
xor
in
mov
jg
mov
mov
xchg
cs
dec
lods
inc
mov
je
jbe
sbb
cmpsb
xchg
inc
push
xchg
mov
xchg
add
mov
adc
or
add
cmpsl
mov
ja
pop
adc
xor
jbe
sti
jnp
adc
int
dec
gs
fwait
out
repnz
pop
pop
pop
mov
jmp
pop
rcl
xchg
ds
test
loopne
stc
jno
lods
mov
adc
cmpsb
aaa
inc
jg
push
mov
mov
add
xchg
inc
std
aas
push
movb
test
xor
and
mov
scas
sbb
xchg
scas
adc
ret
mov
repz
inc
daa
loop
ljmp
iret
dec
scas
pop
mov
gs
rol
loopne
adc
adc
mov
stos
push
popf
lds
jg
adc
addr16
into
jae
xchg
daa
push
dec
jno
lret
fwait
icebp
add
unpcklps
adc
push
dec
inc
bound
mov
and
div
inc
xchg
aas
incb
aaa
int3
mov
test
imul
jmp
adc
aaa
add
adc
adc
loopne
fnstsw
push
mov
push
mov
mov
lret
and
inc
lods
loop
mov
loop
mov
leave
mov
xchg
push
mov
mov
push
adc
je
sarb
fnstenv
loop
aas
daa
inc
xchg
movsl
xchg
mov
mov
pop
andl
insb
cs
mov
mov
es
daa
xor
cs
xor
in
xchg
mov
pop
jb
lea
scas
mov
and
mov
data16
cs
mov
pop
negl
or
mov
sbb
push
mov
mov
and
scas
mov
lret
inc
ret
jae
xchg
cmovnp
lahf
pop
div
mov
dec
jbe
mov
add
xchg
push
in
lret
jecxz
cs
adcb
add
add
jg
iret
inc
push
inc
push
jg
imul
addl
xchg
adc
xchg
int
outsl
dec
inc
into
lock
roll
xor
rorl
xchg
adc
dec
mov
adc
aad
scas
and
repnz
dec
popa
dec
and
push
jbe
lret
push
and
scas
ss
in
ret
push
mov
daa
dec
push
dec
pop
into
cmc
lds
dec
int
xchg
addr16
fadds
pop
mov
ret
inc
jnp
scas
and
sub
and
jg
insl
cmp
inc
add
dec
mov
mov
arpl
es
adc
cs
cmpsl
les
lret
xor
push
aaa
add
xchg
adcl
aad
mov
mov
jns
ss
push
mov
mov
add
cmp
scas
lea
aad
add
shl
orb
inc
ret
aas
bound
cmpsl
bound
lret
push
push
shl
mov
jno
das
out
es
fcoml
bound
outsb
rorl
lret
imul
xchg
addb
mov
push
push
ljmp
out
push
adc
sub
ja
jb
push
xor
mov
out
mov
cmpsb
daa
mov
mov
loop
cmpsl
shlb
inc
ret
and
mov
divb
aaa
jbe
and
xor
dec
cmc
gs
jg
outsl
int
pop
xor
add
xchg
cmc
lsl
mov
daa
mov
mov
inc
mov
shll
repnz
aaa
inc
xchg
add
xchg
inc
aad
inc
add
adc
xchg
ret
add
aad
cmc
in
xchg
adc
ja
adc
xchg
aad
lea
xchg
lods
add
les
gs
in
aam
xchg
cmc
scas
mov
and
mov
test
fcom
lcall
bound
scas
jbe
xor
aaa
shll
push
int
mov
shl
das
add
add
ljmp
mov
lea
ss
mov
push
mov
inc
mov
outsl
bound
iret
cmpb
imul
aas
or
outsb
adc
int3
data16
mov
rorl
jne
dec
icebp
mov
int
lods
push
mov
daa
icebp
push
shl
cmpsb
shlb
outsb
pop
cmpsl
mov
jb
cs
roll
push
lods
push
dec
es
sahf
xchg
aaa
push
ds
push
gs
adc
mov
ds
mov
mov
pop
into
mov
adc
lret
mov
mov
xchg
in
daa
pop
stos
jno
adc
stos
jb
jno
add
mov
inc
cmp
ret
les
adc
movsb
lea
cmc
aas
pop
pop
fidivrs
inc
pop
ja
imul
mov
jnp
aaa
icebp
inc
outsb
bound
xchg
negl
add
adc
and
xor
mov
movsb
xchg
shlb
lret
push
shll
lcall
mov
mov
xchg
shll
lret
mov
cmpsl
ret
jp
cld
jae
int
ja
xchg
repz
push
ss
inc
xor
jno
hlt
adcb
inc
addl
insb
adc
xlat
mov
inc
jb
sbb
arpl
rclb
inc
bound
repnz
test
das
inc
xchg
mov
xchg
xlat
mov
lret
inc
xchg
iret
add
ret
adc
jbe
and
mulb
popa
adc
negl
xor
rcrl
inc
inc
cmpsl
xorb
aaa
int
aaa
aam
pop
loop
pop
inc
jo
jb
dec
xor
das
inc
jae
in
jp
sub
aaa
mov
xchg
cmpsl
cs
aaa
orb
xor
fs
pop
outsl
xchg
emms
push
out
adc
mov
xorb
jecxz
mov
stos
shll
cmpsl
cmc
add
movb
loopne
xchg
mov
outsb
je
jne
mov
andb
sbb
adc
pop
pop
pop
lret
mov
xchg
jb
mov
test
and
aaa
and
in
scas
repnz
dec
test
js
lods
xchg
add
push
lret
push
inc
ret
xor
inc
push
jb
push
xlat
lock
stos
ja
push
das
cld
pop
jge
jg
push
je
pop
xchg
inc
xor
xchg
dec
inc
cmpsl
lret
adc
and
hlt
jbe
inc
cs
xor
aam
icebp
and
bound
loop
iret
inc
xchg
and
stos
shrb
aas
ja,pn
ss
shl
cmp
mov
cmpsl
ret
jbe
in
inc
fwait
adc
pop
cmp
mov
cmp
lret
mov
loop
cmpsl
mov
push
mov
inc
cmpsl
hlt
into
mov
xor
hlt
lret
ret
pop
push
cld
push
cmp
movsl
dec
shrl
sub
push
jne
and
mov
xor
xor
cmc
add
jbe
adc
push
bound
jae
sbb
iret
cmp
pop
div
test
int
mov
das
roll
inc
mov
cmpsl
ficoms
lret
inc
add
xchg
jns
xchg
push
jae
outsb
xchg
cmpsl
loope
aas
or
icebp
jo
pop
lret
ret
add
fs
dec
aam
cmpsb
movsl
je
push
xlat
inc
push
push
testb
pop
aaa
stos
es
rolb
icebp
add
pop
sbb
inc
ds
rclb
fisubrs
aas
aam
add
mov
push
arpl
xor
jbe
push
inc
outsb
ja
hlt
pop
xchg
fldenv
jae
mov
push
cltd
xchg
mov
jo
test
outsl
push
adc
lock
sahf
jbe
pop
repnz
jg
aam
not
sub
mov
dec
ret
lret
mov
jbe
jg
pop
push
push
fs
repnz
add
inc
push
sub
dec
out
xor
jo
test
mov
aaa
loop
sahf
cmpsl
mov
inc
add
xor
leave
xchg
xor
out
sub
into
adc
xor
push
mov
pop
adc
mov
mov
mov
dec
scas
scas
xchg
rclb
adc
stos
jg
icebp
int3
push
iret
push
push
jle
mov
repz
popl
xor
adc
pop
push
jbe
aas
addr16
bt
hlt
cs
mov
pop
daa
xchg
jnp
mov
test
jecxz
or
scas
test
mov
pop
lret
mov
xchg
jle
icebp
push
loope
push
mov
jnp
adc
repz
jno
das
push
xchg
adc
push
push
outsb
inc
push
pop
pop
fsubl
outsl
push
repnz
ja
jo
ja
push
pusha
xchg
dec
into
cmpsb
mov
into
enter
push
xor
mov
cs
into
into
inc
scas
shlb
das
aas
push
dec
inc
xchg
scas
xor
rorb
xchg
out
loopne
pop
aaa
add
aas
xchg
aas
xor
lret
aas
cmc
stos
out
rcll
push
outsl
movsl
je
daa
jge
jo
clc
xor
mov
inc
fwait
mov
xor
scas
dec
pop
mov
cmp
inc
enter
das
add
shll
jae
sub
mov
mov
sub
repnz
mov
ret
xchg
push
je
sahf
das
outsl
adc
jecxz
inc
data16
mov
mov
add
aaa
xlat
loopne
add
pop
icebp
push
push
loopne
xor
push
cmpsb
mov
adc
xor
pop
sbb
fs
icebp
mov
push
jne
push
lock
daa
hlt
ret
mov
mov
inc
xor
ret
roll
inc
imul
jne
and
mov
xchg
icebp
inc
add
ret
mov
jne
pop
loope
je
jecxz
sub
ss
das
xchg
xor
cmpsb
jne
or
push
es
in
out
add
push
imul
mov
and
scas
scas
inc
popa
inc
icebp
outsl
rclb
mov
stos
xchg
rcl
jle
lret
push
mov
cmp
push
ja
push
xor
ss
aaa
and
pop
inc
mov
rorl
aaa
inc
inc
cmpsb
xor
lret
icebp
mov
jne
dec
mov
je
push
negl
sbb
mov
div
xor
cmp
outsl
xor
stos
shlb
push
popa
adc
mov
xchg
pop
mov
inc
jno
sbbl
ja
add
orl
add
sarl
cwtl
mov
xchg
mov
inc
mov
adc
push
jnp
popl
mov
aam
notb
push
scas
test
movb
add
push
push
xor
xor
jg
roll
adc
jb
bnd
sub
xor
and
push
jmp
int
mov
addr16
sarl
fs
mov
scas
adc
mov
push
jecxz
outsb
out
test
and
adcb
clc
mov
inc
adc
inc
and
cmp
push
bound
add
loope
adc
jne
sbb
jo
jg
int
scas
xor
out
daa
pop
add
mov
jo
in
leave
test
and
mov
movsb
outsl
xchg
mov
jle
xchg
xor
rclb
xor
pop
add
cld
xchg
mov
icebp
dec
sarl
test
in
jg
jbe
in
mov
mov
pop
insb
xor
push
pop
xor
mov
push
push
movl
inc
scas
shl
xor
xchg
shlb
enter
pop
and
jbe
stc
aaa
xchg
das
out
out
adc
push
scas
ja
test
xorb
scas
ja
mov
stc
jg
lret
or
mov
pusha
imul
xchg
xor
ljmp
repz
jb
mov
sub
ss
lds
test
cmc
addr16
test
xorb
mov
loop
shlb
scas
jbe
cltd
and
push
xor
cmpsl
pop
add
into
jo
mov
sub
std
movb
ret
sub
arpl
mov
clc
lret
clc
aad
xchg
je
jecxz
mov
xchg
adc
inc
shl
lock
adc
and
lahf
mov
jbe
inc
push
nop
adc
pop
xchg
aam
jle
jp
mov
les
add
lret
sub
stos
adc
fimuls
lret
ja
subb
mov
insb
jne
xor
rcll
aaa
bound
pop
das
xor
loopne
pop
mov
mov
dec
and
pusha
add
jnp
pop
mov
dec
adc
cmc
jge
shll
out
inc
sbb
repz
gs
ret
mov
in
dec
inc
jae
arpl
add
mov
es
add
inc
pop
mov
add
adc
icebp
xor
repnz
xchg
mov
mov
inc
xor
xchg
nop
lods
xchg
push
enter
lea
adc
xor
xchg
lds
je
mov
rorl
roll
jle
mov
hlt
divb
shlb
aas
xchg
outsl
push
inc
divb
aad
dec
loope
cmc
xor
aam
jne
idivb
mov
repz
mov
push
insl
bnd
xor
pusha
xorl
push
sub
adcb
fcoms
out
icebp
xchg
push
ja
push
xor
outsl
push
icebp
cmpsl
lcall
add
loope
xchg
insb
cs
sub
popf
cmpsl
lods
xchg
js
test
cmpsl
shll
pop
aas
mov
es
cmpsl
loop
iret
xchg
push
into
insb
dec
ja
xor
add
rdtsc
mov
jl
adc
mov
adc
arpl
push
mov
xor
cs
loopne
mov
mov
cs
std
stos
aaa
cmc
aas
and
and
jg
ja
pop
and
es
dec
scas
jecxz
push
mov
divb
bound
mov
dec
inc
push
out
mov
add
push
xor
push
cmpsl
int
in
inc
outsl
push
ja
cmpsl
lods
mulb
popl
push
ss
mov
pop
dec
push
es
test
cmpsl
sahf
cmpxchg
xchg
push
mov
and
andl
movl
pop
in
adcb
outsl
mov
mov
xchg
ja
jne
outsw
scas
jge
mov
test
test
push
ja
ja
cs
cmc
insb
mov
dec
rolb
enter
jae
outsl
ss
daa
mov
pop
xchg
outsb
xchg
and
or
dec
in
inc
outsl
xor
ja
lds
ja,pt
dec
movl
out
jae
adc
adc
int
dec
hlt
xchg
cmpsl
push
iret
cs
testb
cmpsl
mov
pop
pop
push
scas
leave
ja
mov
mov
mov
fistl
cmpsl
jecxz
xchg
bound
rol
loopne
orl
inc
pop
cmc
jge
adcl
shlb
setno
push
push
mov
xorb
mov
ret
outsl
push
lock
mov
push
in
ja
test
and
xchg
testb
negw
jnp
push
mov
and
ret
xchg
jne
push
cmpsl
inc
push
cltd
outsl
pop
pop
xchg
lcall
sub
pop
dec
xor
out
xchg
ja
shrd
pop
mov
inc
jbe
xchg
cmpsl
into
into
jl
aad
std
mov
xchg
cmpsl
ja
xor
cmp
mov
or
cmpsl
xor
jg
mov
xor
push
mov
cmp
cmpsl
sbb
fisubrl
push
dec
pop
mov
mov
mov
movups
jbe
call
xchg
xor
inc
das
ja
cmpsl
lret
pop
test
lcall
cmpsl
xchg
inc
outsl
sub
mov
jle
ljmp
repz
lods
dec
mov
rorl
ja
mov
adc
inc
cs
mov
cmpsl
pop
mov
push
cmpsl
out
jecxz
mov
outsl
push
outsl
push
mov
mov
mov
sbb
cmovg
mov
push
outsl
dec
das
ja
mov
jecxz
lods
out
jbe
lds
mov
outsb
add
add
cmc
ja
cmpsb
and
outsw
lcall
push
pop
cmp
adc
pop
and
inc
icebp
fsubrl
outsl
dec
iret
pop
mov
fisubs
mov
pop
inc
xor
push
movsl
cmpsl
rol
iret
ss
ja
dec
push
mov
mov
and
dec
jle
xchg
jbe
inc
mov
scas
dec
pop
jge
push
cmpsl
push
test
pop
lods
fstl
cmpsl
dec
daa
mov
push
jae
push
xchg
add
mov
ja
mov
roll
push
cmpsl
dec
iret
mov
and
ja
fisttpll
pop
jmp
push
gs
xchg
addb
jbe
push
pop
mov
addr16
addl
xchg
into
cmpsl
aaa
xchg
divb
inc
aaa
lret
cmovno
andb
jne
xlat
lods
adc
testb
and
cmp
inc
fisubs
dec
mov
sub
mov
xor
xchg
adc
inc
outsl
mov
mov
decb
xor
xor
jne
cmpsl
lret
ja
divl
xchg
loop
mov
cmp
inc
ljmp
pop
xorb
pop
xchg
xor
push
ja
aam
aas
mov
icebp
push
jge
xor
inc
xor
inc
xchg
pop
addb
jp
push
es
out
daa
loope
loope
and
ret
cmpsl
cmp
xchg
popa
pop
lea
pop
mov
addr16
mov
pop
mov
daa
mov
dec
push
lahf
xchg
aaa
xchg
sbb
cmp
xor
jo
stos
addb
cmp
xchg
rorb
rcrl
lea
mov
and
cmp
cmpsb
xor
mov
xor
add
mov
xchg
aaa
jo
xchg
out
hlt
xchg
add
push
jge
xor
shrl
add
xchg
xchg
subb
xchg
sbb
stos
inc
repz
jno
loop
mov
xchg
mov
and
inc
movsl
shlb
divb
dec
pop
dec
adc
fidivs
jo
lds
jle
test
loop
push
cmpsl
jle
inc
rolb
dec
shll
or
jae
and
or
inc
dec
xor
xchg
outsb
jae
inc
xor
mov
adc
mov
roll
or
pop
cmpsb
bsr
shrb
cmc
inc
push
xor
ds
push
or
stos
negl
test
xor
ret
mov
lods
xchg
mov
jbe
push
addr16
xchg
dec
and
cs
fcmovb
daa
cmp
xor
mov
pop
add
push
push
popa
sbb
sbb
outsb
mov
pop
and
mov
lea
data16
mov
cwtl
xchg
and
dec
jge
sub
pop
ret
and
movsl
inc
hlt
sahf
cmpsb
inc
jo
add
lods
int3
push
sbb
loope
pop
mov
mov
sub
mov
pop
fs
cmovnp
fs
xchg
dec
lods
int
loope
lods
or
fs
pop
icebp
dec
insb
pop
js
pushf
fwait
test
xchg
xchg
sub
sbb
push
pop
jnp
pop
lret
cli
mov
clc
ds
int
aaa
rcr
movsb
sbb
or
mov
mov
mov
xchg
dec
dec
test
xchg
lods
jl
int3
je
fs
mov
movsb
inc
insb
mov
xchg
les
cmp
mov
lods
sub
push
xchg
lods
aaa
rcrl
push
iret
dec
mov
push
mov
cltd
cmp
sbb
mov
outsb
hlt
neg
sti
scas
pop
out
inc
in
loope
notl
stc
mov
cmp
out
inc
xchg
cld
rcll
mov
inc
mov
xor
adc
ret
xchg
cmpsl
ja
xchg
add
pop
addr16
push
scas
and
cmp
xor
xor
mov
mov
imul
mov
int3
push
xor
inc
or
mov
mov
xor
ja
int
std
ja
lea
lds
push
imul
sbb
xchg
xchg
ds
cld
daa
adc
addr16
push
cli
pop
sub
fwait
jge
movsl
lds
xchg
iret
jg
rcll
xchg
mov
adc
mov
xchg
push
dec
push
xchg
mov
pop
jnp
xchg
xchg
adc
mov
xchg
rorb
push
mov
rorl
push
xchg
jb
xchg
mov
shl
mov
inc
xor
xchg
shll
inc
aam
adc
aad
ss
mov
pop
adc
pop
adc
xchg
xor
inc
mov
adc
je
hlt
jne
cmc
inc
jbe
notb
dec
dec
lock
jno
xchg
mov
lods
xor
xchg
aas
int
cmp
mov
movsl
inc
popf
mov
xchg
lea
sahf
jge
mov
mov
push
mov
xchg
inc
dec
cmp
and
mov
jge
push
fs
pushf
xorb
test
lock
cmp
and
popa
sti
sahf
mov
and
xor
sub
and
adc
or
mov
in
dec
pop
xchg
loope
inc
pop
dec
repz
fadd
or
xchg
dec
ja
jnp
fadd
or
xchg
loope
inc
pop
dec
repz
fadd
jno
outsb
dec
ss
lods
mov
xchg
inc
jle
xchg
mov
inc
push
push
cltd
xchg
push
dec
push
shl
push
xchg
push
or
fidivrs
ds
dec
inc
inc
dec
xchg
stc
sti
stos
in
sbb
loop
enter
lcall
mov
xchg
sti
stos
in
sbb
loop
enter
shrb
fwait
push
push
rorb
xchg
push
negb
arpl
ss
ds
and
ret
pushf
xchg
fcompl
into
popa
into
mov
into
into
mov
add
adc
and
mov
inc
inc
push
dec
notb
popf
pop
mov
jne
jge
test
notb
movsl
dec
lods
xchg
mov
dec
xchg
lds
popa
loopne
mov
and
test
push
popf
xor
outsl
dec
lea
outsl
subb
icebp
repz
push
test
dec
or
jbe
clc
movsl
or
insb
pop
jbe
lahf
je
dec
lds
lahf
mov
and
sub
stos
mov
or
push
cwtl
push
mov
fs
repnz
sbb
inc
ror
jb
pop
jo
push
push
or
adc
inc
adc
ret
repz
mov
repz
xor
xor
xchg
dec
mov
popf
ret
mov
fldcw
add
lock
jns
cmp
loope
mov
push
out
xchg
out
mov
inc
divl
or
add
mov
xchg
adc
shll
inc
repnz
xchg
mov
xor
je
cmp
mov
jne
dec
xchg
cmc
dec
push
xchg
mov
pop
mov
shl
xchg
push
mov
js
xchg
inc
xorb
nop
roll
mov
xchg
repz
mov
push
mov
mov
rolb
enter
rclb
dec
jo
loopne
jno
call
mov
clc
mov
or
adc
inc
and
rclb
dec
xor
xor
inc
push
mov
xchg
rorl
je
pop
xor
mov
xchg
xchg
dec
jno
aaa
mov
nop
aad
orl
repnz
cltd
mov
mov
mov
xchg
mov
mov
mov
xadd
dec
into
leave
inc
jbe
shll
xchg
loope
xor
icebp
inc
jno
stc
fadd
mov
jb
or
mov
xchg
je
sbb
push
lods
and
mov
hlt
mov
push
aad
cmp
xor
push
lods
aam
xor
lock
cmc
lock
adc
orb
sbb
xor
sbb
cmpsl
sahf
adc
xor
inc
inc
mov
jae
xchg
stc
inc
aaa
sahf
leave
jns
xor
push
push
push
sbb
push
adc
rclb
js
cmp
push
inc
fcomps
adc
or
dec
dec
push
mov
xchg
push
pop
gs
dec
push
in
testl
aaa
jns
aaa
cmp
sahf
pop
in
inc
pop
xor
add
out
push
mov
and
push
sti
xor
jo
sarb
incl
mov
inc
push
int3
cmp
fnstcw
mov
cmp
sbb
and
rcrl
sub
bound
hlt
sbb
mov
imul
clc
mov
mov
jbe
mov
int
sbbl
xchg
mov
add
xchg
aaa
add
xchg
lret
dec
xchg
in
lea
xchg
or
jl
cmpsb
xchg
stos
ja
push
aad
cmp
aad
xchg
and
icebp
jno
divb
pop
pusha
call
sbb
add
push
stc
jle
and
mov
insl
jne
inc
dec
push
inc
mov
sbb
mov
push
mov
xor
cmpsb
mov
cmpsb
add
push
daa
insb
adc
jbe
inc
mov
lods
mov
inc
adc
icebp
cmp
stos
icebp
xor
or
aaa
mov
push
aaa
test
aaa
mov
push
stos
adc
xchg
adc
int
sub
rolb
in
push
mov
lea
xchg
pusha
mov
jg
pusha
rcrl
jbe
subb
ret
add
mov
pop
push
into
icebp
xchg
inc
pop
lea
out
add
inc
and
jp
rclb
xchg
aad
popa
std
inc
movsb
inc
pop
sbb
xor
mov
xor
aas
xchg
xchg
idivb
jne
add
aaa
mov
rolb
adc
adc
jb
popl
mov
mov
mov
push
mov
getsec
pop
fs
rorl
jne
stos
or
or
jmp
push
ja
mov
es
xchg
mov
repnz
mov
adc
push
pop
mov
sbb
cmp
iret
dec
push
mov
cmpsl
push
lret
inc
sub
jp
adc
cltd
cmp
push
stos
xchg
push
add
push
mov
jns
push
lret
ja
icebp
testb
push
mov
mov
rolb
nop
sbb
cltd
rorb
sub
jbe
outsl
addr16
pushf
inc
sub
inc
loope
adc
pop
movsl
aad
cmp
push
push
push
jne
push
push
mov
mov
cmpsl
jg
mov
dec
xchg
jbe
xor
push
dec
es
cmc
addr16
out
subl
xor
shlb
adc
push
or
adc
dec
inc
add
test
imul
lods
ja
jo
pop
enter
test
int
mov
xorl
push
inc
sub
mov
aaa
mov
sbb
xchg
jbe
inc
mov
ss
inc
das
inc
xor
mov
xchg
ss
loope
push
cmp
lret
outsb
xchg
inc
pushl
hlt
sub
inc
push
mov
ret
testl
aam
and
movsb
insb
mov
pop
xchg
movsl
pop
jge
mov
fistpll
test
aam
scas
mov
into
jo
andb
jg
adc
loop
jo
cmp
lret
hlt
nop
out
adc
add
aaa
mov
mov
mov
xchg
xor
testl
sbb
xor
cmp
sarl
adc
fmul
mov
aam
in
scas
ret
jmp
mov
test
jmp
xchg
push
ja
and
ja
mov
cmp
jae
pop
scas
mov
xchg
aad
mov
xchg
cld
xchg
hlt
dec
in
in
mov
inc
les
pop
jg
cmc
mov
jbe
inc
pop
pop
dec
xchg
enter
iret
imul
xchg
inc
into
xchg
xchg
fldcw
jns
rcll
lods
pop
inc
adc
xchg
movsl
jg
stos
xor
dec
jbe
push
xor
jbe
adc
in
mov
lods
sbb
rcr
daa
cmp
aam
mov
shll
inc
pop
inc
adc
xchg
insl
pop
imulb
inc
xchg
inc
lods
inc
or
gs
jg
or
xchg
push
in
push
xchg
mov
xchg
jp
es
rorl
rclb
jp
xchg
mov
xchg
jno
xchg
dec
shl
das
rclb
adc
fists
xchg
outsb
mov
fisubrs
adc
lods
mov
seta
sub
adc
xchg
push
push
add
push
aad
rcl
push
mov
push
dec
adc
mov
dec
pop
outsb
and
mov
mov
push
xchg
add
xchg
push
jecxz
jno
push
inc
push
mov
nop
dec
aam
shlb
pusha
stc
lds
lock
jno
lret
cmp
push
rcl
and
jne
jno
jo
push
sbb
adc
push
pusha
ret
xchg
mov
dec
push
sbb
cmp
adc
inc
and
lds
xchg
aad
lds
cmp
lds
xchg
repz
insl
aam
xchg
call
ja
outsl
dec
loopne
cmpsl
push
repz
push
push
push
xchg
inc
rcrl
aam
adc
aad
shll
jp
rol
push
aaa
add
aad
lds
push
xchg
insb
ljmp
mov
ds
mov
push
mov
adc
cmpb
ret
xchg
inc
push
outsb
cmpsl
mov
jns
sbb
push
lahf
test
popf
insl
in
xchg
and
stos
iret
repz
push
fnstcw
cmp
mov
jb
mov
mov
aaa
xlat
mov
imul
and
inc
push
mov
getsec
adc
jmp
lods
aad
loop
loopne
in
test
lods
adc
aad
push
xchg
pop
pop
push
jbe
dec
xlat
mov
cmovg
xchg
pop
inc
xchg
std
xlat
jle
in
data16
out
cmpsl
in
xlat
jmp
das
outsl
scas
xlat
cmc
ss
divb
ja
mov
iret
adc
in
dec
shrl
pop
paddd
outsl
push
fsubs
push
xchg
scas
aaa
aaa
daa
nop
xlat
mov
pop
aas
xlat
ja
xchg
ds
data16
sahf
inc
jbe
mov
push
cmpsb
push
xlat
into
outsb
mov
neg
mov
jmp
push
push
pop
aaa
dec
jmp
aaa
outsb
das
push
rcll
scas
lds
sbb
outsl
daa
xchg
mov
data16
add
stos
cmpsb
push
pop
lcall
adc
pop
xor
sbb
aam
push
rolb
jg
xchg
cmpb
mov
mov
pop
getsec
mov
dec
mov
push
mov
mov
shll
mul
jp
stos
cmpsb
jne
mov
mov
xor
mov
push
xchg
xchg
fimull
lds
xchg
lds
ja
mov
and
xor
xchg
mov
mov
jmp
fs
aaa
ja
dec
jge
xor
punpcklbw
xchg
jne
notb
bound
add
aas
jbe
mov
cwtl
repz
aaa
ret
adc
xchg
mov
movsl
xchg
xchg
adc
imul
mov
mov
jo
pop
sbb
mov
sbb
std
stos
sub
push
das
iret
movsl
mov
stos
lret
sub
lods
mov
cmovnp
outsb
scas
cmc
xor
ja
bswap
mov
xchg
xchg
aam
inc
adc
push
inc
xchg
das
push
mov
das
repz
in
mov
sub
mov
aaa
mov
push
inc
ja
mov
xchg
pop
mov
ret
mov
mov
xchg
push
jbe
push
out
inc
inc
cmp
ja
mov
stos
adc
aad
push
mov
push
cmc
aaa
inc
mov
lret
xchg
ja
xchg
out
aad
push
pop
test
mov
test
in
fistps
mov
int
inc
cli
aaa
stos
dec
ja
push
aaa
repz
sahf
inc
ja
test
int
lret
adc
insb
or
adc
xchg
ss
push
outsl
mov
inc
jbe
jb
jne
push
bound
arpl
fwait
rclb
mov
movsb
cmpsl
xchg
or
sub
xchg
push
adcl
dec
in
in
loopne
ss
es
mov
or
ss
dec
cmc
sbb
mov
or
xchg
inc
add
hlt
xchg
mov
mov
xor
jne
ja
cmpsl
mov
push
gs
jbe
xchg
mov
jne
hlt
lea
scas
mov
add
fs
imul
jmp
pushf
push
xchg
push
ss
fdivl
cmp
in
jbe
inc
xor
xchg
leave
movsb
xor
xchg
sub
add
repnz
mov
nop
adc
js
rol
repz
fucom
ja
mov
xor
ss
ja
testb
and
xor
out
add
ljmp
cmp
scas
and
jns
jbe
mov
jae
add
push
mov
shlb
js
pop
in
push
xor
dec
fildll
rcl
bound
push
aaa
push
push
inc
inc
out
pop
call
or
xchg
lret
push
mov
pop
pop
mov
bound
dec
aas
mov
scas
push
fnstenv
push
call
mov
and
int
pop
xor
push
int
rcrl
push
int
inc
aam
not
enter
stos
cmp
dec
aad
xor
aad
cmpsl
mov
inc
pop
push
push
aas
cmp
adc
push
mov
xchg
dec
dec
dec
xchg
xchg
mov
inc
push
cli
push
ljmp
push
xor
dec
mov
xor
popf
ss
mov
mov
xchg
push
dec
aam
divb
sarl
not
mov
xchg
xor
mov
inc
adc
popf
pop
mov
adc
ja
xchg
jae
jne
adc
popf
mov
inc
xlat
mov
arpl
jg
les
test
popf
lds
add
mov
inc
add
push
divb
arpl
xchg
orl
divb
arpl
daa
cmpsb
rcll
mov
mov
mov
xlat
pop
mulb
dec
cmpsl
xchg
mov
std
lock
in
out
repnz
in
lock
inc
fs
data16
arpl
gs
loope
popf
dec
cmpsb
dec
xlat
test
fcom
mov
rorl
test
popf
ret
dec
lret
xchg
int
shl
arpl
or
push
push
inc
fidivrs
inc
pop
dec
xchg
mov
popf
sub
popf
iret
xchg
sub
cs
and
dec
adcb
push
sbb
in
dec
out
xchg
add
jmp
in
arpl
outsb
inc
add
outsl
imulb
popf
insl
mov
aas
lock
mov
inc
ds
mov
mov
mov
inc
mov
xlat
xchg
cld
mov
inc
and
popf
sti
mov
jl
jle
and
jg
jnp
jge
and
sbb
sbb
push
push
popa
fidivrs
bound
popf
mulb
dec
fcoml
fnstsw
pop
push
loope
pop
arpl
out
xlat
ror
dec
lret
pop
mov
fstpt
xchg
dec
fisttps
testl
ficoms
imull
mov
xchg
sub
popf
sub
fnsave
or
xchg
ljmp
dec
out
fistpll
xchg
mov
cmp
dec
cmp
cmp
jns
xchg
jp
popf
js
cli
fisttpll
idiv
pop
mov
fistl
inc
cwtl
fisttpll
negl
pop
mov
fstpt
inc
pop
fisttpll
neg
pop
mov
fstpt
push
scas
movsb
rclb
cmp
mov
push
xchg
dec
jmp
mov
mov
inc
in
dec
aad
aad
mov
inc
into
mov
mov
xchg
push
add
jo
push
rcll
mov
sbb
push
cmpps
lahf
xchg
inc
aad
xor
movsl
mov
les
movsl
ja
leave
pusha
pop
xor
pop
or
arpl
mov
push
mov
inc
mov
dec
faddp
in
xchg
push
cmc
data16
jnp
add
jne
push
add
movsb
repnz
xor
mov
dec
leave
push
dec
gs
insb
je
fisubl
adc
and
aad
pop
cmp
inc
xchg
or
std
mov
push
mov
adc
shll
pop
adc
fnstsw
filds
lds
xor
rorl
std
pop
pop
push
mov
cmpsb
push
xor
xor
xchg
out
pop
js
jo
pop
pop
scas
push
int3
mov
pop
xchg
pop
popf
mov
mov
push
jno
ss
sub
xchg
xchg
xor
pop
mov
je
adc
orb
xchg
lret
sbb
xchg
fstpl
fwait
aad
sbb
add
stos
push
les
cmp
and
lcall
xor
jl
and
int
pushf
movsl
adc
ds
cmp
aad
push
xor
pop
out
mov
add
sbb
lahf
lds
seta
mov
lds
shrb
adc
lods
les
lea
aam
faddl
inc
pushf
ficoml
xchg
mov
cmp
mov
xor
mov
inc
not
rcr
insl
pop
mov
jne
ficoms
xchg
movsl
add
xchg
loop
xchg
hlt
pop
push
aaa
mov
adc
push
pop
pop
ljmp
add
test
push
into
rcll
adc
xchg
lds
loope
jno
or
stc
push
mov
shll
pusha
call
insb
mov
adc
js
jbe
xchg
mov
nop
mov
test
add
xchg
xchg
inc
sbb
push
xchg
rorl
ja
xor
mov
xlat
xor
push
and
movsl
repz
push
popf
sarb
addb
std
xchg
pop
cmpb
aad
xchg
fwait
mov
pop
push
cmp
jmp
mov
adc
lds
cmp
mov
mov
es
fucomp
mov
mov
sbb
mov
mov
jae
mov
mov
mov
push
ret
mov
jne
mov
pop
aas
fnstcw
rorl
mov
shll
or
lods
fsub
xchg
lods
ja
adc
push
jecxz
jne
repz
nop
iret
repz
iret
sbb
fisubs
mov
sub
in
push
jne
push
inc
jo
nop
mov
xchg
rorb
adc
inc
xor
xor
push
mov
xchg
mov
xchg
adc
xor
push
mov
xchg
mov
xchg
xor
push
xchg
push
dec
push
xchg
mov
aaa
mov
adc
xor
das
cwtl
lock
bound
pop
mov
outsl
mov
mov
ja
sahf
enter
xchg
xchg
jg
cmp
dec
push
pushf
sbb
aaa
dec
mov
mov
pop
into
push
jne,pn
int
popf
mov
inc
pop
cmpl
je
pop
insb
mov
inc
push
mov
test
cmpsl
inc
push
rorl
xor
jne
ret
mov
mov
dec
dec
mov
push
xor
sbb
or
sbb
pop
lea
jge
inc
mov
int3
not
ret
or
into
dec
aad
fcoms
mov
fcmovbe
not
aad
shll
mov
rorl
out
xchg
aad
inc
sub
int
mov
pop
push
ret
pop
std
test
nop
mov
lret
sub
in
ljmp
adc
xchg
adc
rorb
xchg
push
jge
cwtl
push
and
cmc
enter
push
dec
mov
aaa
outsl
std
cmc
dec
mov
cmc
shr
inc
push
mov
xchg
adc
mov
adc
push
decb
adc
or
inc
add
xchg
xchg
negl
nop
nop
push
lds
push
adc
stos
mov
stc
adc
fistps
lock
jge
movsb
lcall
ja
mov
and
out
fstpl
popf
cltd
jg
aaa
cmpsl
imul
ja
inc
int3
and
xchg
in
pushf
rolb
xchg
cltd
cmp
movsl
ja
mov
sbb
dec
rclb
xlat
adc
jae
mov
ficoms
xor
addr16
mov
outsl
xchg
cmc
dec
pop
cmp
mov
xchg
mov
out
mov
idivb
xchg
pop
dec
ja
mov
xchg
scas
das
cs
push
adc
cmpsb
push
cmc
push
lea
pop
nop
inc
mov
daa
mov
pop
mov
mov
xchg
mov
lods
mov
xor
movsb
adc
andb
nop
aam
push
mov
jo
xchg
xchg
push
test
ljmp
pop
xchg
and
rorb
push
push
cli
xchg
pop
fsubrl
not
iret
xchg
pusha
push
ret
xchg
std
out
jge
inc
mov
rcl
adc
xchg
movb
inc
shlb
cmovnp
movb
test
mov
mov
xchg
push
inc
movb
out
inc
ret
inc
push
mov
xchg
and
filds
mov
xchg
clc
dec
sub
add
pop
mov
add
xchg
or
loope
inc
orb
mov
dec
and
arpl
mov
inc
cltd
mov
xchg
mov
dec
popl
xchg
aam
and
jle
lods
adc
cmp
sbb
push
shl
iret
pusha
int
xor
xchg
stos
fld
icebp
xchg
rclb
mov
pop
movsl
movb
xor
aad
stos
push
fldenv
push
sbb
cmp
mov
pop
inc
lcall
xchg
addb
iret
addr16
adc
movsb
mov
mov
pop
mov
fisubrs
outsb
outsl
in
dec
stos
inc
push
rcrl
aaa
iret
dec
add
push
cmp
push
mov
out
hlt
lods
lahf
icebp
repnz
mov
iret
xchg
push
dec
scas
andl
xchg
mov
and
imul
pop
inc
push
out
dec
xchg
inc
or
pop
in
adc
popl
pusha
std
push
dec
ss
push
dec
or
xor
push
dec
pop
xchg
insl
dec
je
int
out
testl
aad
mov
lret
xchg
mov
inc
fcmovnb
xor
adc
pushf
adc
mov
cmp
pushf
stc
clc
xor
rclb
pop
mov
ja
push
into
mov
inc
xchg
xchg
dec
icebp
loope
shll
lds
lahf
lret
popa
dec
sarl
push
push
xlat
loop
push
jle
push
ljmp
scas
test
arpl
vmread
sub
mov
rorl
mov
push
ret
or
cmc
sub
ficoms
rcrb
xlat
jae
rorl
xlat
int
stos
jl
sahf
push
imul
shr
arpl
or
ljmp
lret
and
jno
mov
xlat
lret
cmpsb
mov
push
pop
adcb
bound
test
lcall
test
pop
lods
lods
jno
xlat
dec
addr16
mov
pop
ja
lret
mov
xlat
insl
adc
push
std
lahf
adc
cmp
in
test
inc
in
add
lret
xor
int3
dec
out
jnp
xchg
adc
clc
pushf
subb
lahf
cmp
call
mov
sbb
add
aam
mov
sub
mov
iret
xlat
fisttpll
sbb
push
add
pop
imul
inc
mov
cmp
xadd
dec
xlat
push
pop
mov
jb
test
mov
lahf
scas
jmp
ds
icebp
test
xor
and
popa
iret
int3
mov
sbb
jp
push
pop
jne
cld
enter
xor
mov
mov
imul
loopne
xlat
add
push
lods
push
dec
pop
pop
push
mov
fisubs
dec
int3
jnp
cmp
sub
dec
cmp
push
sbb
pop
imul
pop
mov
mov
sahf
sbb
xchg
xchg
jmp
lret
mov
xlat
movsl
push
call
cmpsl
xlat
jno
xor
lret
cmp
xlat
add
mov
shll
into
mov
ret
negb
sbb
lock
adc
nop
mov
mov
lahf
and
sub
xlat
clc
pushw
ds
testb
inc
xlat
pusha
lea
push
mov
sbb
ret
rcl
inc
dec
lcall
push
jbe
lea
pop
cmp
pop
or
loopne
jmp
nop
mov
xchg
add
fsts
pop
gs
cmc
out
iret
pop
pop
cmpsl
xor
dec
shl
loopne
popa
inc
xchg
mov
call
arpl
outsl
outsl
scas
and
mov
movsl
repnz
popf
rolb
scas
aam
sbb
lret
mov
lea
aaa
cwtl
scas
mov
aaa
popa
scas
cmp
cli
insl
aaa
cwtl
repnz
xor
ljmp
fisubl
add
sarl
dec
lock
inc
scas
and
xor
aaa
js
mov
aaa
popa
scas
cmp
inc
push
stc
dec
sub
jnp
inc
inc
add
adc
sub
add
fcoml
loop
sub
arpl
es
popf
imul
push
jg
leave
jecxz
rolb
xor
movsl
gs
lret
outsb
pop
faddl
xchg
scas
ret
in
hlt
in
mov
adc
jns
pop
ja
xchg
dec
rorb
mov
push
lds
clc
lods
ret
lods
inc
ss
inc
inc
outsb
inc
add
push
aas
sub
or
ret
rdpmc
push
das
clc
es
mov
lea
push
cmp
pop
push
sahf
push
inc
pusha
xchg
paddb
in
cli
add
and
int3
mov
xor
cmp
mov
mov
fwait
movsb
scas
movsl
pop
popf
mov
pushf
mov
mov
in
jb
push
out
push
test
jl
jge
mov
sbb
adc
dec
sahf
sub
and
movsb
mov
stos
dec
mov
fs
addr16
jbe
outsb
adc
mov
retw
pop
and
mov
gs
shrb
inc
lret
inc
jbe
cmc
xchg
test
and
cs
inc
fs
inc
out
mov
std
push
push
mov
xchg
cmpsl
stos
test
lea
cmovnp
je
cwtl
mov
movntps
sub
pop
xchg
mov
lcall
xchg
jge
pushf
gs
xchg
dec
xchg
jge
scas
leave
addr16
push
inc
js
mov
jge
lret
cmp
cmp
insl
es
lock
lods
jle
push
pop
dec
sub
push
inc
or
ds
and
dec
inc
push
mov
ret
inc
cmp
shrb
and
xchg
xchg
fiadds
out
mov
cwtl
sub
fidivrl
ja
jle
scas
xlat
rorl
xorl
shrl
mov
outsb
ds
outsw
and
lods
leave
inc
inc
das
lea
popa
outsl
movsl
fiadds
pop
out
jne
xchg
mov
xchg
sti
fidivl
xchg
mov
add
pushf
ljmp
mulb
mov
inc
push
mov
inc
xchg
push
mov
cmp
sub
data16
mov
lods
dec
cmpsl
jbe
mov
xchg
mov
xor
leave
aas
movsb
push
pop
in
jbe
scas
cli
mov
push
cmc
mov
sub
xor
inc
int3
lahf
insb
scas
lods
movsl
jbe
dec
push
test
sbb
pop
jbe
and
xor
mov
insl
xchg
pushf
push
pop
mov
and
hlt
pop
scas
rcll
aad
arpl
xlat
sbb
hlt
imul
pop
xchg
sub
insb
jl
int
push
xchg
push
cmp
insb
dec
lahf
jbe
xor
pop
daa
pushf
or
xor
cmpsl
pop
scas
mov
nop
movsb
sub
int3
jmp
idivb
mov
je
inc
dec
add
mov
mov
movsb
xor
icebp
int
jne
mov
iret
pop
pop
jae
cmpsl
xchg
mov
cmp
lcall
push
add
scas
inc
data16
nop
fdivl
push
mov
cltd
adc
xchg
ds
push
push
std
inc
cmc
ret
in
mov
push
in
std
int3
cmc
arpl
cli
in
fnsave
cs
xchg
arpl
xor
mov
and
mov
pop
cmp
push
pop
push
push
mov
nop
stos
jo
push
mov
push
push
stos
push
mov
push
xchg
push
ds
dec
std
insb
mov
nop
adc
push
in
out
push
popf
std
inc
cmc
fwait
in
inc
in
out
stos
fstpl
cmpsl
aam
lret
jb
jbe
push
ljmp
lahf
inc
inc
sahf
cs
xchg
pushf
cmp
cltd
icebp
cwtl
mov
jg
movsb
mov
dec
fwait
or
enter
push
and
push
mov
inc
jo
add
loopne
xchg
adc
jecxz
or
or
rorb
fisubl
add
movsl
jg
push
addr16
fwait
push
push
sbb
xlat
dec
and
mov
xlat
es
push
dec
push
and
lret
nop
mov
sbb
std
loop
div
push
cmp
pop
in
ds
nop
xchg
and
mov
nop
inc
xchg
fucomp
bound
cld
push
and
adc
xor
aas
inc
or
es
adc
test
in
shl
outsb
es
ljmp
fildl
mov
inc
mov
cmpsl
push
jbe
push
into
aas
cmc
out
repnz
sbb
or
sub
inc
rorl
or
fnstsw
aam
jne
mov
dec
cwtl
adc
push
mulb
ljmp
sub
aam
jl
popf
push
inc
inc
xor
and
imulb
jno
cwtl
xlat
mov
adc
lret
xchg
push
in
mulb
inc
ljmp
jge
xor
jb
pushf
stc
mov
and
adc
nop
pop
inc
xor
lahf
das
test
imul
fisttpl
sahf
xor
out
jmp
ljmp
fcomps
es
or
adc
mov
mov
xchg
mov
nop
mov
mov
mov
fcmovb
fisubrs
cmpsb
cs
sahf
push
popf
mov
pop
lret
aaa
es
mov
sub
fistps
push
dec
or
enter
mov
cmp
mov
push
out
pop
std
cs
std
in
adc
ffree
fstl
or
push
test
sub
inc
in
mull
cmc
gs
xchg
pop
sbb
loopne
leave
in
mov
cmp
mov
movsb
cmp
mov
push
int
popa
into
orps
xor
enter
dec
xchg
or
adc
xchg
and
adc
add
imul
inc
mov
cmc
ds
sahf
xchg
popf
jecxz
xor
outsl
fimuls
lock
xchg
daa
gs
scas
push
sbb
or
inc
fidivs
and
adc
add
insl
in
push
jb
in
test
arpl
and
inc
add
adc
in
mov
dec
mov
xor
xchg
mov
fcmovbe
mov
jne
inc
mov
mov
adc
inc
repz
and
aas
xor
inc
adc
sub
pop
cmp
addr16
gs
cwtl
pop
add
scas
es
mov
xor
adc
cmc
sahf
popf
popf
rcrb
xchg
gs
inc
int3
xor
negb
jno
mov
popf
push
int3
sub
dec
adcb
fnsave
insl
orb
sti
notl
xchg
inc
jmp
inc
mov
std
add
test
mov
in
ret
xor
and
adc
add
jns
rorl
lods
mov
jmp
imul
push
cmpsb
cmc
aad
adc
sarb
dec
cmp
or
jl
sub
ljmp
cs
dec
cli
jg
inc
outsb
lcall
jns
cs
cli
es
lcall
std
pop
ljmp
push
cmc
jae
and
sbb
inc
nop
call
push
cmpsb
mov
cmp
outsl
mov
inc
loop
out
fidivrl
mov
rol
xor
mov
mov
pop
enter
mov
out
and
ret
sahf
mov
lods
or
popa
gs
ret
cmpsl
es
aam
push
in
mov
nop
jecxz
ljmp
pmullw
mov
nop
bound
push
loope
mov
lock
push
push
cmp
mov
ds
rcll
and
lds
push
add
inc
bound
add
andb
add
cmc
test
inc
out
cli
loop
out
fwait
paddsw
pushf
ficompl
pop
mov
push
jbe
inc
push
xor
lea
subb
imulb
mov
add
add
or
xor
push
push
adc
and
add
mov
inc
pmaddwd
insb
push
adc
add
repz
jnp
cwtl
in
lret
xor
and
adc
add
mov
imul
xchg
push
inc
aaa
lock
iret
ds
xchg
ja
out
mov
dec
jbe
xchg
aaa
iret
icebp
mov
ja
pop
mov
nop
int3
adc
inc
popa
imulb
iret
jno
aad
push
adc
gs
and
mov
cmp
rol
push
ss
push
std
xchg
xchg
testb
inc
sarb
cmp
and
incb
push
xchg
jbe
xorb
mov
fbstp
push
sbb
cmc
fisubl
arpl
fisttpll
jo
push
imul
iret
xor
int
push
xchg
or
bound
ss
jns
popf
sub
push
add
pop
test
push
inc
divb
pop
push
push
cmp
std
cmp
cmc
es
inc
std
fcomi
push
or
adc
inc
mov
fsub
popf
xlat
push
mov
lds
push
mov
bound
dec
adc
imul
addr16
stos
xorb
cs
lods
call
sbbb
xchg
lds
inc
flds
push
xchg
je
bswap
xchg
repz
mov
mov
add
inc
popa
jae
arpl
mov
jl
nop
xchg
jne
pop
mov
push
jbe
add
push
jmp
push
push
lods
lcall
mov
shlb
jl
xor
dec
out
imul
fnsave
push
lret
xor
jmp
imull
in
adcb
je
adc
push
sahf
push
inc
and
mov
out
data16
and
shlb
jecxz
or
xchg
inc
idivb
push
iret
dec
mov
repnz
sbb
stc
pop
mov
gs
es
cmp
shl
push
sub
push
push
das
push
sub
shll
shr
push
lahf
scas
std
push
sahf
mov
xchg
or
enter
in
mov
dec
adc
mov
xor
xor
into
push
in
lea
push
roll
aad
jne
pop
out
popa
inc
jecxz
mov
ret
xor
cmpsb
mov
nop
jmp
push
push
inc
push
aad
jne
add
repz
fisttpll
sbb
mov
ret
push
mov
xchg
ret
push
pop
push
into
std
jle
mov
pushf
mov
mov
enter
cs
add
xchg
nop
rcrb
imul
stos
loop
xchg
jae
or
ss
into
repnz
xor
and
notb
sub
inc
inc
sti
push
icebp
jecxz
jecxz
jecxz
push
pop
adc
xor
mov
pop
ljmp
call
push
aad
jge
aam
cmp
orb
popa
cmp
push
idiv
sahf
test
inc
pop
push
cmpsl
mov
mov
imul
enter
push
int
sbb
lret
ror
fldl
mov
xchg
aaa
mov
xchg
push
fwait
lcall
push
lahf
xchg
sub
rol
cmp
fiadds
jno
fmuls
push
int
adc
mov
les
adc
add
repz
es
mov
cltd
pop
cmp
mov
pop
rcrb
dec
push
mov
inc
jae
xlat
mov
inc
mov
nop
stos
jo
loop
out
push
out
repz
out
fwait
inc
in
sahf
ror
fldl
nop
ret
jo
push
cmp
xchg
push
push
inc
mov
cmp
jno
sbb
push
or
dec
hlt
gs
fwait
shl
xchg
adc
aam
push
enter
cmpsl
mov
dec
and
xchg
std
bound
add
sahf
in
shlb
outsl
push
fstl
push
cmc
jbe
loope
in
pop
pop
dec
mov
adc
lds
cmp
ss
jne
outsl
sub
call
add
or
lock
adc
sahf
xchg
mov
shlb
or
rcll
xchg
xchg
ja
es
mov
lea
mov
sbb
push
push
mov
ficompl
outsl
push
lods
mov
or
enter
push
adc
pop
arpl
xchg
arpl
cli
pop
pop
daa
pop
ret
scas
cmc
orl
xchg
int3
xor
lahf
iret
in
sahf
xor
repnz
stos
add
xchg
outsb
pop
push
test
rclb
or
fisttpll
inc
inc
pop
xor
and
lahf
movsl
ds
ss
in
fsubrl
add
sysenter
mov
xor
fwait
ljmp
stc
bound
daa
cmpsl
cmp
aam
adc
scas
and
dec
lods
cmp
rolb
adc
mov
inc
negl
shl
sub
push
es
outsb
out
lahf
push
adc
cltd
jnp
inc
cwtl
stos
mov
xor
xchg
dec
push
jnp
mov
pop
and
loop
lahf
xor
popf
jmp
mov
dec
pop
scas
xor
jne
nop
cmpsb
push
in
push
and
sub
mov
fwait
dec
fstl
mov
cmp
mov
add
adc
jecxz
hlt
dec
push
push
repnz
hlt
notb
xor
adc
repz
stc
jecxz
jecxz
jecxz
idivb
out
adc
notl
pop
inc
mov
rolb
mov
xchg
cs
mov
nop
adc
xor
pop
xchg
ljmp
inc
std
and
aad
cmp
xchg
cltd
push
hlt
inc
ror
mov
push
ljmp
dec
lock
lods
test
test
jo
push
inc
and
adc
ljmp
je
fnsave
adc
fwait
cmpsl
in
sahf
popf
popf
insl
pushf
xor
test
inc
xlat
mov
adc
xor
and
adc
idivb
icebp
loop
out
fwait
push
inc
cmpsb
into
iret
ss
mov
dec
and
jmp
jne
push
cs
push
cmpsb
adc
and
clc
fstl
inc
xchg
icebp
ret
mov
pop
push
add
cmp
push
mov
inc
pop
ds
mov
loope
aas
mov
ss
jne
push
push
jbe
std
repz
add
pop
leave
aam
cmp
push
jno
lcall
cmp
mov
inc
inc
lea
insl
push
add
in
ja
inc
mov
dec
push
je
xchg
mov
dec
out
inc
or
push
std
xor
adc
repz
shrl
and
ss
mov
nop
lea
mov
mov
int3
push
inc
push
cmp
push
cwtl
addr16
push
cmp
insl
mov
dec
clc
hlt
add
jmp
mov
inc
mov
add
mov
test
ljmp
adc
adc
clc
dec
inc
pop
mov
je
push
mov
ss
cmp
jbe
xchg
mov
aam
mov
cmp
push
xchg
mov
mov
fs
jo
push
nop
xor
cmc
mov
xchg
stc
ret
outsb
jne
mov
in
xchg
xchg
inc
shll
mov
push
mov
pop
cltd
jo
push
xor
je
not
xorb
daa
sarb
roll
inc
sub
mov
jo
sahf
ds
lahf
and
test
sbbl
cwtl
cmp
inc
ss
int3
es
in
or
ror
cli
xchg
jns
inc
call
lea
cmc
shr
mov
xchg
fnstenv
push
fnstsw
call
lock
repz
rcrl
cwtl
push
rcr
push
cmp
inc
mov
and
ret
mov
push
es
pop
in
push
xchg
rol
mov
dec
cs
mov
loop
push
mov
inc
into
enter
sub
adc
jl
push
ja
and
push
bound
enter
test
hlt
dec
shll
jecxz
negb
std
lds
test
cmpsl
or
xchg
repz
mov
loopne
mov
push
pop
in
fdivl
aam
jecxz
xchg
mov
push
mov
xor
dec
pop
push
addr16
add
adc
add
repz
testb
pop
ss
int3
movsl
cs
dec
repnz
cmc
push
inc
add
cmpsl
out
sub
shrb
pop
inc
adc
leave
shlb
jle
xor
leave
je
xchg
mov
xchg
pop
push
push
mov
hlt
push
push
push
in
jbe
xor
xor
adc
and
scas
mov
xor
cwtl
jmp
dec
add
xchg
sbb
mov
inc
sahf
xor
and
adc
out
mov
or
push
push
xchg
loop
ljmp
es
nop
addr16
lds
and
insl
xor
cmpsb
lock
push
lds
scas
push
pop
and
lock
add
cmc
loopne
out
sahf
sub
dec
in
mov
int3
xor
and
cld
sub
fwait
mov
xchg
sahf
ja
jmp
daa
ret
inc
xchg
mov
insl
adc
cmp
stos
jb
inc
jno
mov
in
in
in
sbb
mov
shlb
jecxz
jecxz
cld
adc
lock
int
nop
nop
lahf
cs
int
mov
mov
push
std
sub
loop
pop
insb
scas
mov
jae
adc
aas
xor
xor
mov
aas
arpl
sbb
jno
outsl
addr16
cmp
lods
mov
pop
pop
hlt
lret
pop
xchg
pop
pop
pop
and
pop
xchg
pop
push
inc
pop
sbb
pop
mov
jns
mov
sarb
or
out
nop
push
popl
push
jbe
push
cmc
in
hlt
fstpl
stos
rcrl
not
out
imull
loope
aas
mov
xor
jbe
or
or
or
or
mov
mov
push
in
xor
mov
adc
aad
fdivrs
scas
cmc
add
xchg
in
xorl
out
push
xchg
pop
sarb
xor
mov
jp
out
cmpsb
and
dec
rcll
adcb
mov
mov
scas
icebp
int3
ret
or
push
jg
nop
leave
xchg
and
notl
iret
ss
cmpsl
xor
and
adc
xchg
out
adc
pop
push
mov
pop
rcrb
pop
dec
pop
and
mov
or
xchg
mov
push
inc
jecxz
jecxz
lea
add
push
rolb
fdiv
mov
mov
push
negl
imul
and
mov
cmp
jge
pop
xchg
mov
jge
inc
int3
movsb
aam
pushf
or
cmpsb
jecxz
fstp
xchg
cmpsb
pop
mov
add
fiaddl
mov
inc
stc
push
test
cltd
jecxz
jecxz
insl
sbb
inc
sub
fildll
lahf
xor
mov
adc
in
in
push
push
fucom
fnsave
rorl
and
jmp
mov
inc
fimuls
fcmovbe
inc
mov
sub
fimull
adc
fdivrs
mov
cmp
cmp
inc
lea
imul
fmuls
sub
adc
sbb
xchg
mov
mov
adc
mov
testb
ljmp
cmpsb
mov
icebp
adc
fcmovu
sbb
xor
push
into
push
and
loope
aas
add
xchg
aam
add
xrelease
cmpsb
push
jle
je
and
push
fwait
sub
mov
or
mov
pop
ds
xor
xchg
adc
out
ficoms
cmc
mov
in
push
fwait
sub
cmp
out
leave
inc
dec
adc
push
jge
addr16
idivl
fwait
cmc
inc
mov
nop
test
lret
in
jge
enter
xchg
fstpl
push
inc
lods
add
add
repz
dec
in
mov
fldl
aam
ret
inc
ss
push
push
pop
test
mov
icebp
jbe
xchg
xchg
inc
pop
lds
inc
fldenv
je
pop
inc
aas
mov
cmp
rorl
and
lea
repnz
xchg
out
lds
add
mov
or
or
ds
push
push
mov
inc
movsb
shlb
push
push
lods
push
push
pusha
call
adc
lahf
lret
ss
sahf
xor
roll
xchg
mov
ss
aas
sarb
stos
inc
xor
inc
negl
fwait
inc
mov
xchg
cmp
pop
shl
add
jbe
push
fnsave
fstl
cmpsb
aad
ficoml
xor
pop
movsb
mov
xchg
pop
je
push
pop
xor
adc
repz
aad
ss
inc
xor
and
inc
lahf
lds
mov
jmp
mov
inc
mov
push
push
xor
add
in
mov
nop
mov
inc
lret
push
mov
sub
dec
loopne
push
ds
addr16
add
xor
ret
nop
enter
es
xlat
out
dec
rclb
leave
inc
leave
or
inc
or
or
enter
sub
in
and
lret
inc
fwait
push
dec
mov
push
nop
mov
scas
std
mov
add
pop
and
jne
add
add
addr16
add
stos
lods
lret
imul
lds
push
mov
daa
movsb
dec
sbb
aad
adc
pop
jae
cmpsb
mov
test
ds
adc
ss
ljmp
jge
mov
or
clc
push
cmpsb
push
es
add
rolb
push
call
sar
mov
repz
repz
imul
xchg
lahf
rcrl
fwait
inc
lcall
sbb
adc
addr16
in
lea
inc
rorb
push
push
xor
adc
mov
mov
jo
add
mov
xlat
out
inc
push
shlb
cmp
and
sub
lahf
ds
gs
mov
push
loope
int3
cs
popa
fnsave
fstl
push
push
es
xchg
shlb
hlt
fs
ds
push
push
push
test
or
cmp
lahf
mov
xor
push
fstl
xor
adc
repnz
fnsave
cwtl
adc
neg
cmc
cmpsb
ljmp
xor
xchg
fidivs
cmp
mov
inc
nop
and
rcll
inc
mull
ss
ja
inc
mov
scas
cli
cmc
dec
push
dec
mov
dec
cmp
addr16
dec
ret
daa
ds
out
and
add
and
push
inc
push
jge
mov
push
push
mov
xchg
jae
std
xchg
push
movsl
div
and
test
mov
xchg
and
xchg
loop
inc
into
shlb
jne
mov
pop
stos
mov
repnz
push
add
jnp
xlat
out
out
lret
fisttps
xchg
push
sub
adc
clts
shrl
iret
inc
ja
jle
in
or
outsb
xchg
lahf
inc
push
cwtl
xor
jb
fnsave
repnz
and
mov
xor
in
nop
popf
jo
xor
aaa
dec
or
shl
inc
inc
mov
sarb
je
divl
adc
jo
sarl
inc
push
push
mov
shrb
test
fisubs
inc
adc
inc
xchg
lea
adc
lock
inc
push
cmp
lds
repnz
ret
push
jb
xor
xor
push
xchg
or
int
adc
nop
pop
jecxz
rcrl
and
aas
in
test
push
add
ljmp
push
push
jbe
push
int
jecxz
xchg
in
out
int
dec
xchg
ret
aad
mov
popf
stos
mov
mull
mov
scas
es
and
iret
outsb
mov
mov
enter
mov
inc
lods
adc
adc
add
or
xchg
add
jg
sti
int3
jecxz
jl
push
and
arpl
cmp
into
es
xchg
xorl
in
repnz
mov
and
fidivrs
push
xor
stos
lods
push
xor
loop
ficoml
ss
and
repz
in
mov
inc
inc
fsubrl
pop
rorl
mov
adc
push
add
aam
andb
ja
fildl
adcb
or
je
push
into
sbb
mov
ss
add
notb
std
jbe
insl
cmp
push
cmpsl
fcoml
daa
lea
scas
in
mov
jmp
push
adcl
jne
cmp
dec
push
pop
cs
repnz
push
mov
jg
push
push
mov
icebp
jno
mov
xchg
fnsave
push
inc
or
mov
std
xor
xor
mov
in
fstps
xchg
fldl
xor
add
mov
scas
pushf
push
mov
popf
mov
pop
cltd
mov
xchg
test
daa
mov
mov
shll
nop
imul
es
daa
rorb
mov
fidivrs
and
push
ss
loopne
cmp
or
cmc
or
push
adc
lock
pop
mov
nop
xor
xor
push
add
inc
loope
inc
jo
inc
inc
fisttps
or
pop
out
fnstsw
dec
and
mov
push
int
push
popa
cmc
lock
push
push
insl
scas
sbb
add
int
paddw
mov
dec
push
push
cld
push
inc
cmp
adc
adc
dec
gs
push
aad
test
inc
xor
adc
mov
push
daa
inc
push
aad
std
sub
mov
rcrb
inc
jb
push
xor
adc
icebp
not
sbb
fists
in
sub
inc
mov
mov
mov
inc
out
xlat
inc
in
push
pop
mov
jo
outsb
lods
fwait
out
movsb
sbb
fwait
xchg
cmp
pop
lods
inc
push
ja
mov
nop
lahf
push
push
mov
repnz
ret
movsl
das
out
add
xchg
jg
mov
mov
lea
inc
loope
sbb
mov
xchg
testl
divl
push
mov
or
ss
nop
mov
popl
lahf
jae
mov
not
in
xchg
ja
mov
pop
mov
in
inc
pop
adc
in
ljmp
sarl
jge
jg
jae
xchg
inc
dec
iret
sti
popl
mov
dec
and
dec
push
adc
outsl
cmpsb
es
sbb
and
scas
push
in
jecxz
fwait
pop
pop
int
lods
inc
or
rcl
fists
xchg
add
mov
pop
sbb
jmp
mov
out
out
in
enter
xor
out
and
mov
pushaw
enter
mov
push
xor
xor
xorl
movsb
out
ret
in
mov
and
adc
negb
lret
rorb
aam
loop
inc
mov
inc
add
in
cltd
adc
and
shlb
cmp
push
pop
std
popf
adc
xor
rclb
lahf
jae
push
scas
xor
outsb
repnz
xchg
adc
adc
mov
sbb
pop
rol
mov
andb
aam
scas
jge
nop
pop
std
in
test
fldenv
push
addr16
or
inc
mov
in
push
in
sarl
insb
outsb
mov
test
out
mov
nop
enter
je
xor
push
in
shrl
les
test
add
repz
jecxz
test
ret
xchg
add
aam
xchg
inc
aas
gs
arpl
pop
dec
jg
leave
imulb
pop
hlt
addb
std
fcomi
mov
pop
ja
insl
adc
xchg
pop
lret
push
sub
ret
push
es
fs
in
mov
dec
aad
outsb
int3
mov
fs
mulb
and
in
cs
push
jge
popa
pop
push
jg
sbb
popf
xor
sahf
mov
and
rcl
mov
into
push
cmp
xchg
aas
dec
or
sub
xchg
lret
xchg
inc
push
pop
push
mov
repz
lret
inc
pop
mov
push
ljmp
adc
lea
scas
into
int
push
dec
xor
adc
sbb
mov
das
decb
adc
inc
addr16
pop
gs
arpl
sbb
rcll
loopne
mov
test
dec
or
data16
mov
scas
rorl
push
inc
lcall
gs
std
movsl
cmc
mov
push
add
or
test
jle
pop
xor
out
push
loope
pop
fnstsw
mov
cmp
mov
push
scas
aas
aam
mov
jo
mov
pop
push
or
push
mov
push
in
jg
dec
sahf
push
stc
fwait
mov
notl
and
mov
out
xchg
push
ljmp
mov
push
push
mov
mov
sbb
mov
lds
xor
ss
push
sarl
dec
push
jge
rcll
leave
mov
mov
sub
out
out
mov
mov
dec
std
aam
or
push
inc
push
shll
push
in
fs
nop
sbb
push
ss
in
ljmp
and
clc
mov
icebp
test
notb
dec
sbb
dec
leave
orl
sub
jmp
idiv
xor
sahf
push
imul
cmc
mov
add
mov
and
and
aas
xor
xor
push
in
xchg
mov
push
sub
jne
sarb
jno
leave
jbe
dec
test
push
pop
and
in
and
loopne
pop
cli
int
xor
sub
rorl
pushf
popa
lret
jo
cld
push
xchg
aad
pop
xor
mov
ret
mov
and
rcll
es
int3
or
sub
push
add
cmc
jp
pop
jg
in
mov
pop
inc
fldl
rcll
sahf
ss
lock
dec
inc
fisubs
dec
jbe
ret
repnz
popf
dec
push
adc
sahf
repnz
mov
cltd
adc
adc
cmc
fs
xor
jae
jne
push
mov
mov
xchg
out
mov
dec
sub
inc
popa
ds
ss
add
push
fwait
hlt
mov
cmp
ret
daa
lea
or
push
mov
cmp
ret
push
test
movsl
ljmp
dec
imul
nop
ret
pop
out
scas
xchg
push
fwait
icebp
mov
push
loop
scas
ss
dec
pop
or
dec
es
adc
pop
es
shl
xor
inc
push
cmp
inc
insl
xor
and
insl
mov
sub
fwait
dec
lret
cmp
push
in
xchg
ja
scas
or
daa
int
push
sbb
push
daa
jns
push
rorb
sub
out
fisttpll
cwtl
fwait
not
mov
mov
inc
xchg
cs
je
add
push
lds
scas
add
imul
xchg
dec
and
xchg
adc
scas
mov
xchg
out
push
popa
xlat
pop
xchg
icebp
ljmp
fld
shlb
dec
test
sub
popa
xor
loope
fiaddl
inc
aam
add
shl
or
push
jns,pt
cmpl
scas
push
and
std
or
aaa
je
pop
mov
mov
fstpl
cmp
jne
push
mov
push
sbb
popf
and
dec
jb
gs
or
repnz
lea
push
pop
mov
ss
pop
cmp
fidivrs
mov
sbb
push
jg
ss
mov
insb
int3
mov
inc
inc
cmp
mov
nop
sub
addr16
addr16
mov
ret
data16
adc
push
mov
icebp
outsb
cmp
sahf
addr16
mov
xchg
ss
and
jecxz
push
hlt
fwait
ss
mov
shlb
loop
aas
xchg
mov
std
xchg
scas
cmc
js
inc
sub
inc
sub
inc
xor
jge
xchg
add
inc
xchg
shlb
add
inc
mov
mov
adc
jo
push
push
pop
xor
ret
ss
lods
jo
pop
push
jo
ljmp
xor
mov
push
in
jo
jmp
pop
sbb
sub
xor
inc
arpl
adc
jge
mov
cmp
mov
xchg
inc
xor
mov
scas
sub
xchg
jae
loope
inc
std
pop
sahf
lods
mov
jo
in
push
ss
adc
out
fsubrl
adc
cmc
jnp
adc
add
repz
jecxz
jne
rcrl
in
cltd
push
xchg
mov
adc
mov
jbe
xchg
push
out
sub
mov
lds
scas
adc
sub
je
ficoml
inc
or
adc
and
push
inc
push
push
fstpl
mov
test
mov
sub
test
adc
push
jae
sbb
jne
outsb
adc
xor
jg
fldt
loop,pt
out
aad
test
movsb
inc
jne
add
push
cmpb
inc
test
addr16
jge
int3
push
popf
add
je
enter
aas
push
inc
cld
xchg
and
fidivrl
out
mov
xchg
lahf
icebp
pop
pushf
xor
adc
mov
and
mov
add
imulb
push
pop
sbb
adc
xchg
push
inc
pop
orl
shlb
push
lea
push
fidivs
sbb
icebp
outsb
ss
sti
dec
lock
rolb
or
vpsrld
pop
push
mov
xor
std
pop
cmp
shll
frstor
jbe
pop
push
ficoms
movsl
cmp
xchg
push
shll
mov
adc
and
test
pop
orb
pop
leave
mov
leave
add
mov
pusha
aas
or
mov
enter
dec
inc
addr16
mov
in
add
mov
mov
incl
inc
ficoms
test
adc
xor
pop
jne
push
mov
pop
rcl
mov
adc
fidivl
dec
aam
cmc
push
add
pop
sbbl
sub
inc
test
cmc
inc
push
cmpsb
aas
jmp
sarb
arpl
sub
push
sahf
mov
push
sti
addr16
in
jg
push
repz
stos
push
inc
rclb
push
add
xchg
add
push
inc
jecxz
jecxz
in
rcll
and
fs
push
adc
mov
dec
fcompl
stos
es
rclb
sub
out
test
nop
and
adc
repnz
inc
mov
xchg
icebp
xchg
dec
mov
enter
loope
xor
push
xor
shlb
mov
jb
sahf
cli
int
mov
adc
pushf
and
fdivrs
aad
and
jecxz
push
jecxz
jecxz
jecxz
rorb
inc
mov
xchg
gs
test
stos
add
lods
int
or
jae
mov
repz
push
dec
mov
cmpsl
nop
mov
mov
inc
and
lahf
inc
dec
sbb
mov
mov
shlb
xor
out
or
js
out
mov
popa
int
lds
popa
movsl
sub
lret
scas
push
mov
iret
and
repz
scas
mov
inc
inc
jge
adc
cmpsl
in
push
cmp
push
push
inc
ljmp
sbb
xchg
pusha
loope
xor
push
sbb
fiaddl
push
mov
dec
mov
pop
pop
add
jl
cli
sbb
into
inc
in
and
ret
cmpsb
aaa
xchg
add
es
mov
push
sbb
scas
nop
or
cmc
sub
bound
push
test
pop
ficompl
xchg
hlt
aad
repz
push
xchg
stos
roll
xchg
xchg
outsb
jmp
xchg
pop
inc
cmc
or
shrl
cmpsl
in
leave
inc
lds
test
mov
jno
dec
ljmp
push
xchg
gs
repnz
sub
mov
loopne
lcall
ljmp
push
int
in
sub
and
in
lahf
xchg
mov
je
xchg
mov
arpl
icebp
inc
gs
xor
push
xchg
test
xor
scas
aam
inc
mov
daa
push
repnz
jbe
ljmp
inc
and
add
inc
aaa
pop
push
adc
rol
pop
mov
stos
jmp
fstps
inc
cld
push
xor
mov
hlt
dec
dec
out
ret
push
dec
push
add
ret
or
cltd
mov
sbb
rorb
xchg
dec
mov
cmpsl
addr16
mov
std
dec
ljmp
loope
in
xchg
push
adc
xchg
int
mov
push
adc
cld
ret
fs
or
or
aaa
mov
dec
testb
or
ljmp
ret
aad
je
and
mov
out
adc
ret
repnz
out
fwait
ja
xor
xchg
xchg
leave
pop
dec
dec
xchg
xchg
scas
notl
and
ljmp
jmp
mov
push
cmpsl
sbb
and
aam
jb
idiv
push
ljmp
dec
or
mov
mov
mov
fidivl
mov
fwait
arpl
jbe
sub
push
and
lahf
xchg
mov
test
push
jne
adc
xor
mov
adc
push
movsl
push
xchg
mov
jg
sbb
jo
add
scas
adc
sahf
jne
ja
std
jg
ret
jecxz
gs
rcll
pop
inc
scas
ret
mov
lahf
inc
sub
lahf
add
cmp
ret
push
int
push
fwait
mov
popf
xchg
jbe
xchg
je
adc
sub
fwait
outsb
pop
mov
cltd
jo
dec
inc
and
loopne
cmpb
adc
cmc
ljmp
mov
jne
pop
jp
xchg
adc
pop
dec
int3
icebp
mov
inc
push
adc
repnz
fidivs
inc
jmp
xchg
fisttpll
or
stos
std
ret
and
add
mov
push
mov
dec
push
std
pop
xor
loopne
movsb
push
pop
inc
jle
and
adcb
movsb
xchg
data16
jns
cmpsb
cmp
mov
inc
pop
pop
lahf
adc
fwait
cmp
and
fimuls
fwait
mov
xchg
test
adc
adc
ljmp
add
inc
mov
arpl
adc
scas
mov
jecxz
gs
adc
xor
adc
rcrb
gs
bound
xor
dec
inc
adc
pop
int3
xchg
imul
jp
sub
push
es
xor
repnz
adc
pop
rcrb
gs
inc
gs
mov
hlt
mov
fstpt
std
popf
adc
add
enter
push
or
inc
push
shll
sbb
in
adc
xchg
xor
gs
sub
neg
xchg
inc
jae
inc
xor
and
lods
jo
push
jbe
nop
xchg
rorb
popl
fwait
cmc
ret
mov
adc
push
subl
inc
xchg
mov
jb
fldl
shrl
xchg
jo
fldt
imul
in
shll
test
push
nop
fs
ret
jo
sub
aad
dec
mov
xor
cmp
pushf
adc
gs
aam
out
push
jbe
aad
push
xor
out
and
pop
and
icebp
shrl
enter
cld
cmc
push
cmc
push
scas
xchg
std
fdiv
push
mov
aam
icebp
rclb
push
sbb
daa
mov
arpl
dec
push
mov
add
aam
or
add
shr
ds
adc
jns
dec
in
sbbb
in
std
mov
jo
in
sbb
sub
loopne,pn
mov
ret
les
push
xor
and
imull
shl
xor
imul
icebp
subl
mov
cmpsl
gs
mov
lock
add
vpcmpgtd
push
pop
push
lods
lea
in
jg
fsts
inc
inc
in
outsl
inc
imul
divb
mov
loop
scas
push
mov
ja
out
stos
enter
mov
xor
inc
rol
push
imull
fcmove
in
dec
arpl
sub
cmp
nop
scas
outsb
lods
jge
iret
adc
xor
in
mov
mov
cmc
add
gs
fdivs
push
aaa
sbb
pop
pop
mov
mov
mov
mov
add
cmp
idivb
aas
rcll
insb
or
mov
xor
mov
push
std
dec
sahf
sbb
test
mov
daa
fiadds
mov
cmc
pop
push
les
pop
cmp
mov
int
sbb
out
adc
or
in
daa
mulb
pop
lds
lea
pop
subb
outsl
in
sbb
scas
lods
jb
pop
jp
push
cltd
xor
mov
ret
xchg
fwait
and
pop
jno
add
and
dec
xchg
outsb
ficomps
pushf
fistpl
pop
fnsave
add
ret
pop
xor
and
xchg
sub
ds
lds
lcall
push
push
pop
insb
mov
loopne
pusha
mov
mov
ffreep
and
jge
rcll
cmp
fnstsw
shll
jae
sub
aas
shlb
mov
nop
xchg
cmc
push
inc
data16
cmp
mov
stos
subb
mov
push
push
pop
aad
and
roll
stc
std
mov
in
arpl
fwait
iret
in
mov
out
and
lea
push
lahf
push
xor
jnp
jge
xlat
push
mov
test
and
popw
gs
mov
or
mov
int3
bound
mov
push
xor
cmc
mov
nop
cmpsb
jo
sub
xlat
jo
push
outsb
int
call
xor
rcl
add
in
lea
sub
movsl
rclb
mov
cmpsl
pop
push
das
mov
xchg
mov
inc
jae
cmpsl
lods
xor
inc
jge
dec
leave
xor
mov
mov
jb
cmp
adc
lea
scas
int3
dec
xlat
fwait
cmc
push
sahf
sbb
test
pop
mov
rol
pop
lock
add
out
adc
inc
syscall
xchg
pop
mov
pop
insb
lea
jne
lahf
xchg
mov
pop
push
xchg
mov
or
and
enter
shll
push
mov
mov
inc
add
lahf
std
mov
leave
jo
dec
js
ret
addr16
in
ja
aaa
arpl
mov
push
nop
cld
sub
xchg
push
fsub
mov
ljmp
shll
jp
test
in
jne
push
shl
loopne
mov
test
stos
testl
nop
loope
stos
rcrl
fldl
sahf
cwtl
leave
xchg
pop
jle
lock
sbb
xchg
ret
jnp
cs
mov
int
sbb
cmp
inc
ficomps
adc
inc
mov
xchg
cmp
loopne
adc
pop
cmc
movsl
cmp
adc
rolb
pop
adc
scas
dec
dec
inc
popf
mov
pushf
ljmp
mov
lds
pop
movsl
mov
push
test
push
movsb
adc
outsb
push
adc
pop
es
push
or
push
scas
std
mov
outsb
lcall
in
fmul
mov
in
inc
enter
mov
sub
and
inc
xchg
push
mov
mov
rclb
bound
adc
addr16
xchg
gs
addr16
fs
jecxz
imul
lret
rclb
int
inc
and
pop
cltd
rol
mov
in
cmpsb
push
add
inc
ffree
div
push
div
out
out
pop
xchg
mov
rclb
in
inc
shrl
stos
cmc
cmp
push
movsb
jl
les
jecxz
jecxz
jecxz
daa
out
fstpl
mov
loopne
test
mov
add
mov
pop
test
push
adc
addr16
jg
pop
push
xor
add
add
push
mov
mov
rclb
movb
and
sub
pop
daa
ljmp
fwait
jbe
mov
idivb
mov
leave
push
jl
cmp
pop
pop
stos
mov
push
jecxz
jge
mov
mov
dec
push
daa
push
psrld
and
mov
ss
adc
cmp
rorl
pop
jg
cmp
mov
popf
sahf
mov
add
adc
les
mul
inc
mov
add
subb
inc
mov
push
sbb
push
fsubrl
and
fucom
pop
jo
mov
ret
imul
shlb
ja
pushf
xor
cmp
jo
outsb
adc
rclb
ds
or
enter
inc
sub
inc
ret
jecxz
adc
lods
xor
sub
pushf
enter
movsl
loop
and
dec
jae
xchg
pop
scas
add
jo
push
imulb
scas
xchg
outsb
pop
push
addl
aas
popl
push
enter
xor
stos
and
dec
imulb
mov
adc
mul
fnstsw
push
pop
loop
adc
adc
mov
shl
and
mov
adc
inc
jg
jl
data16
cmp
xor
lcall
push
cmp
inc
cmp
sahf
push
das
int3
inc
sbb
hlt
mov
or
icebp
dec
fnstenv
in
mov
test
pop
clc
lahf
repnz
mov
nop
roll
mov
data16
aaa
pop
in
daa
dec
mov
xor
mov
sbb
inc
cmpsl
push
xor
enter
and
dec
in
outsb
mov
mov
ss
jmp
stos
adc
mov
subb
cmp
ret
test
lahf
sbbb
adc
test
push
addr16
push
lahf
scas
ja
imulb
adc
test
ja
sub
mov
and
fsubp
mov
push
or
push
mov
mov
add
aaa
loope
mov
mov
mov
push
mov
arpl
mov
mov
loopne
rol
push
jl
jo
mov
xchg
out
sub
and
inc
push
xchg
mov
add
mov
mov
inc
sub
mov
mov
adc
and
pop
test
push
jge
rcll
xchg
xor
inc
jb
jno
sbb
push
in
xor
inc
xor
jecxz
insl
add
mov
paddusw
or
rcll
nop
aad
adc
scas
push
shlb
fidivl
xor
adc
addb
adc
jle
ret
rorb
mov
mov
div
cmpsb
xchg
gs
aas
and
adc
divl
pop
scas
jne
shlb
loop
daa
enter
push
scas
sub
je
or
push
push
jg
and
outsl
ljmp
xor
and
push
jecxz
jge
stos
push
popl
or
idivl
inc
test
addr16
sub
inc
ja
mov
jecxz
aas
jo
inc
push
jge
pop
lds
sar
sub
adc
adc
and
adc
cld
call
loope
inc
test
mov
xchg
adc
mov
mov
int3
push
xchg
mov
xor
pop
mov
mov
out
pop
loope
ret
enter
les
push
pop
scas
adc
push
nop
jg
out
loope
popf
lret
mov
outsb
je
add
enter
fstl
shrl
mov
xchg
das
gs
mov
jno
int
cld
push
pop
adc
lret
in
mov
subb
daa
test
add
aas
xor
daa
int
mov
add
lret
rol
mov
mov
cmpl
out
fldl
mov
xchg
nop
aam
lock
push
mov
add
ret
lock
sahf
movups
into
adc
xor
cld
stos
mov
hlt
push
jg
pop
int
insl
push
ret
push
stc
divl
cmp
jl
mov
nop
arpl
lahf
inc
pop
lret
cmpsl
mov
jl
xor
sub
xchg
lods
sub
add
jae
and
les
jnp
adc
xchg
inc
add
jg
jecxz
mov
arpl
hlt
mov
jbe
inc
sub
jae
mov
shl
mov
or
pop
xor
mov
lcall
pop
mov
jns
adc
test
cmpsl
inc
xchg
mov
push
sub
or
mov
and
dec
dec
add
jmp
xor
adc
leave
mov
dec
jge
shll
and
ss
ret
inc
fwait
hlt
inc
pop
add
xchg
frstor
arpl
cs
aam
pop
es
test
insb
push
mov
ficompl
push
aaa
mov
pop
rorl
add
insl
std
or
sub
testb
ljmp
inc
scas
shrl
cmc
dec
sbb
xor
sub
push
xchg
daa
pmaddwd
jecxz
ret
and
and
sub
mov
push
lea
mov
xor
arpl
negl
hlt
fcoml
fnstenv
mov
pusha
aas
sbb
xchg
out
mov
nop
testb
xor
and
aas
jb
sahf
xor
ret
cmpsb
and
testl
xchg
mov
cli
ret
xor
sub
in
lea
fmuls
or
mov
xor
daa
xchg
rclb
xor
int
xor
adc
popl
ret
out
mov
mov
fpatan
test
mov
cmpsl
aas
and
arpl
push
aas
mov
xchg
dec
int3
je
roll
inc
jecxz
add
testl
cwtl
test
mov
sub
xchg
fwait
iret
push
scas
sahf
mov
adc
das
enter
jg
scas
push
aaa
jecxz
in
dec
pusha
fisttpll
scas
push
leave
ja
xor
in
fwait
nop
fdivs
inc
adc
pop
push
jb
nop
jge
fstpl
enter
xchg
imul
push
sbb
shll
icebp
test
rcll
sub
testl
ret
in
adc
or
jg
icebp
enter
fwait
out
int3
xchg
dec
inc
mov
xor
stos
ljmp
mov
data16
jge
lahf
inc
pop
lret
pop
push
sahf
mov
fs
in
jp
xchg
fiadds
sbb
les
mov
std
inc
xor
adc
int3
loopne
pop
mov
xor
notb
jmp
sbb
inc
nop
jecxz
andl
mov
int
sub
adc
add
inc
jg
mov
xor
in
mov
and
daa
sbb
aam
mov
add
gs
push
repnz
int3
xchg
mov
nop
xchg
xchg
cmpxchg
inc
or
dec
jno
sub
scas
test
daa
cmp
cmpsb
in
push
inc
outsb
mov
add
loope
out
mov
scas
rorl
xchg
daa
in
inc
gs
push
test
rcll
jae
fxch
push
js
aas
inc
pop
ljmp
sub
lret
cmp
repz
inc
push
xor
sub
rorb
push
inc
push
fstpl
adc
pop
push
push
push
data16
mov
xor
aas
rolb
mov
lea
arpl
lret
mov
iret
push
in
mov
int
repz
cmpsl
inc
mov
sbb
ffree
inc
into
shll
icebp
and
jl
jecxz
repnz
mov
jb
fnstsw
and
popa
and
push
iret
rcl
iret
jl
xchg
paddsb
jl
test
xchg
push
fstp
fldl
mov
mov
mov
xor
aas
fistpl
xchg
mov
mov
mov
pop
add
push
adc
push
cmpsb
mov
mov
pop
jp
add
in
scas
scas
ds
jae
loope
cmpsl
mov
out
dec
inc
fs
loopew
mov
nop
popf
or
push
sti
and
inc
adc
test
rcll
ffree
scas
add
ds
out
inc
sbb
pusha
scas
mov
and
fdivrl
add
cmp
ret
cmc
push
sahf
shl
mov
cmp
cmp
lock
and
loop
ljmp
gs
ret
mov
call
out
xchg
cmp
jecxz
loopne
push
sarl
shlb
xchg
rcl
jne
addr16
daa
out
mov
int
inc
pop
mov
mov
pop
dec
test
inc
adc
adc
mulb
int3
sub
shl
subl
pop
stos
lea
enter
mov
push
in
mov
jge
ret
jb
lea
or
or
mov
sbb
push
call
jg
dec
adc
repz
insl
call
inc
sub
adc
adc
cmc
je
outsb
sbb
ret
sbb
rcll
or
shll
cmp
mov
xchg
mov
inc
pop
ret
add
push
jecxz
in
jns
adc
arpl
push
test
sub
hlt
add
mov
shl
ret
mov
gs
push
out
push
push
and
mov
push
std
adc
cld
fdivrl
clc
lret
orb
inc
rolb
cmc
jge
ret
adc
lock
push
mov
packuswb
adc
mov
or
dec
jo
inc
mov
enter
aas
mov
xchg
hlt
xchg
popf
xchg
mov
jge
xor
aas
or
neg
inc
xchg
jle
orl
arpl
push
mulb
rclb
push
test
and
or
loopne
jmp
enterw
psllw
test
rolb
push
mov
adc
jge
dec
xor
inc
enter
sub
cli
jg
adc
cld
dec
cmpsb
cli
or
push
rorb
inc
push
int3
stos
orl
and
rclb
andl
mov
adcl
mov
jg
ljmp
xor
mov
mov
mov
dec
nop
sbb
jb
cld
xchg
orl
loop
fimuls
dec
mov
add
and
or
leave
xchg
movsb
outsb
notb
in
cmp
int
pushf
std
pop
ja
pop
or
pop
or
inc
inc
push
dec
rcl
repnz
and
push
push
daa
push
dec
int
or
leave
loopne
daa
paddusb
xor
jae
mov
rorb
in
data16
mov
xlat
dec
es
and
fimull
enter
xchg
or
popa
fsubrl
xchg
daa
adc
pop
leave
xchg
or
mov
or
push
xchg
push
mov
cmp
mov
inc
xchg
mov
xor
xchg
fs
mov
push
xor
add
repz
add
gs
repnz
push
das
popa
sub
push
mov
sub
sahf
dec
int3
xchg
mov
xchg
mov
adc
in
loop
das
sub
sahf
and
test
or
push
lret
cmp
inc
lret
insl
sbb
cld
mov
ss
ljmp
imulb
cmpsb
imul
hlt
mov
repz
scas
ret
int3
mov
stos
inc
es
xchg
pop
and
out
and
push
hlt
adc
add
enter
nop
adc
mov
cmp
mov
notb
test
daa
pop
ss
out
fidivl
and
push
test
jb
testl
dec
mov
repnz
sbb
mov
adc
outsb
adc
test
nop
rol
shlb
daa
nop
jge
push
enter
divl
mov
xchg
stos
rcll
ret
mov
xchg
divl
push
mov
and
fidivs
fsubrs
push
fidivs
sbb
adc
outsb
shrb
push
loop
ficoms
sbb
icebp
rcr
xchg
sahf
jno
and
jg
shrb
xchg
ja
push
ficompl
jo
fnsave
push
int3
jnp
imul
leave
inc
jne
popl
in
jg
xchg
int3
repnz
xchg
inc
fstl
sahf
aad
inc
push
int3
jno
data16
mov
mov
adc
xchg
aad
mov
lcall
rcrb
icebp
mov
add
loope
aas
ja
aaa
xor
inc
mov
ret
and
addr16
pop
outsl
cmc
pop
aad
mov
xchg
adc
hlt
fcmovbe
fidivl
push
adc
bound
inc
xlat
sub
repz
icebp
adcb
fs
divl
jb
xchg
xlat
fmull
sub
std
aam
xchg
xor
scas
fcoml
jno
push
adc
iret
xchg
scas
push
jno
bound
aad
or
pop
xchg
cmc
mov
adc
pop
repz
jno
mov
aaa
inc
jbe
mov
cmc
add
inc
xor
notb
mov
lds
je
xorl
jbe
mov
sub
adc
mov
jb
loopne
lock
ljmp
hlt
hlt
cmpb
ret
aam
and
mov
outsb
inc
gs
cmc
xor
push
and
fidivl
testb
mov
mov
inc
xchg
repz
xor
jno
xchg
lea
mov
mov
lahf
rclb
icebp
adc
push
cmpsb
xor
outsb
mov
cmc
fstps
je
mov
repnz
xor
movsl
ja
test
adc
cmc
push
outsb
xor
pop
mov
icebp
or
adc
addr16
cmc
ja
mov
xor
sub
pop
inc
jo
xchg
adc
xor
fcmovnb
test
dec
mov
jbe
inc
data16
sbb
shlb
lock
jo
ficompl
not
scas
xor
je
adc
mov
lock
adc
fisubl
icebp
cmp
add
fcompl
push
and
ljmp
ss
rcrl
push
jecxz
xchg
rcl
jb
loope
mov
fdivp
dec
xor
mov
cmc
roll
shlb
orl
xchg
mov
idivl
push
hlt
mov
jg
xor
adc
jnp
enter
add
pop
xchg
pop
jno
nop
mov
pmulhuw
cmp
xor
sbb
aaa
mov
mov
repz
jae
jno
xchg
jae
fildl
sahf
rcll
xor
xchg
mov
bnd
roll
inc
and
loopne
aas
xchg
jmp
jo
jo
adc
inc
xchg
xchg
out
ficoml
fdivp
cmp
pop
xlat
xchg
jns
xor
jo
fstl
repz
jl
loope
jb
push
cltd
jno
push
cmp
shrb
add
testl
aaa
repz
divb
pop
inc
add
fdivl
adc
shlb
xchg
divl
and
xchg
out
add
push
rclb
rorb
mov
addr16
push
mov
adc
rcll
addr16
mov
adc
shrb
enter
andl
in
shlw
mov
or
jl
ret
icebp
push
mov
aad
inc
pop
xchg
adc
push
jge
lcall
push
lea
adc
test
rcl
mov
push
or
fs
jbe
lock
mov
push
lock
pop
rclb
ret
rcll
shll
vunpcklpd
push
inc
jne
test
out
lods
or
xchg
pop
adc
jecxz
adc
jns
push
jecxz
or
pop
jne
ret
adc
xchg
sub
adc
shll
inc
xchg
repz
pop
repnz
enter
and
stos
loop
rolb
xchg
popl
xor
daa
adc
rcrb
jns
push
xchg
or
arpl
or
push
jb
in
fst
data16
pushf
push
test
push
adc
not
add
jecxz
jecxz
fcoml
out
test
pop
mov
in
push
out
adc
rorl
jae
pop
xor
lcall
movsl
adc
mov
aad
test
pop
push
xchg
jns
push
sub
aam
jbe
ss
jmp
mov
adc
xor
subl
and
jne
xor
icebp
jns
stos
xor
negb
adc
rclb
jge
jg
push
mov
adc
xor
push
push
xchg
hlt
inc
cmc
push
in
aaa
scas
pop
stos
push
sub
add
xor
shll
nop
loope
cmp
in
sbb
mov
mov
xor
mov
add
jmp
in
push
loope
jb
je
repz
ja
aad
repz
shrl
adc
ficoms
lea
xchg
out
inc
leave
loopne
jbe
fstl
xchg
notl
xchg
daa
adc
mov
inc
sahf
stos
movsb
mov
push
scas
adc
sti
pop
sub
xchg
adc
xor
or
mov
aaa
and
ret
sbb
inc
mov
push
lock
stos
add
addr16
mov
add
inc
xor
aaa
repnz
add
inc
repnz
je
ret
fistps
xchg
pop
inc
cmpsb
mov
xor
dec
inc
or
in
mov
xor
je
rclb
xchg
divl
push
inc
and
adc
arpl
sbb
inc
add
pop
push
rolb
repnz
dec
lock
adc
gs
xor
xchg
adc
push
nop
cmc
pop
push
arpl
movsb
lods
push
rolb
rcrb
pop
xchg
pop
xor
jns
lar
test
rorb
adc
shll
dec
push
mov
inc
jns
testb
inc
loope
call
adc
nop
inc
mov
cs
push
push
je
aad
xchg
loop
aas
adc
adc
test
or
hlt
pusha
sahf
shr
lea
jnp
stos
xchg
xchg
inc
notl
jo
or
cmp
mov
push
shlb
jge
xchg
scas
mov
inc
jae
ret
gs
sti
shl
rcl
jae
stos
jge
mov
sub
and
push
addr16
cmp
cmp
xchg
ret
add
aaa
cmp
ret
rcl
xchg
xchg
repz
push
inc
inc
aad
les
inc
and
cmpsb
adc
cmp
mov
nop
jbe
push
sbb
outsb
jae
and
and
test
xor
cmc
scas
push
xchg
dec
and
cmpb
cmp
shlb
add
xchg
inc
adc
aas
stos
and
jae
adc
fcoml
andb
shll
adc
xchg
xor
xor
repnz
or
push
inc
roll
xchg
add
test
push
mov
testl
adc
inc
test
test
mov
jecxz
in
push
add
adc
nop
pop
adc
orl
push
jmp
ret
mov
xchg
lods
xchg
jno
ss
jge
xor
adc
mov
negl
out
jne
hlt
add
push
dec
sub
adc
out
rolb
sbb
and
push
rclb
rorb
and
daa
adc
xchg
out
dec
rorb
sbb
pop
sahf
xchg
mov
jl
pop
jg
es
adc
sbb
loope
inc
pop
sub
rcl
enter
xchg
inc
cmpsb
add
out
xlat
sahf
pop
mov
ficompl
imul
movsb
mov
lcall
xchg
outsb
repnz
add
xor
jge
push
mov
in
hlt
aam
mov
mov
imul
icebp
daa
mov
jae
shlb
divl
gs
push
mov
inc
adc
mov
in
les
pusha
inc
aaa
inc
loopne
gs
xchg
mov
mov
push
adc
jbe
jnp
lods
adc
xchg
lock
dec
xor
adc
movsl
xor
inc
pop
mov
push
aad
adc
jbe
mov
mov
fs
inc
in
xchg
dec
inc
bnd
mov
lods
fidivs
stos
mov
push
inc
pop
mov
xchg
xor
rol
rcrb
inc
inc
pop
dec
mov
xchg
xor
mov
cld
inc
inc
jo
mov
insb
and
scas
shll
push
sub
mov
loope
mov
test
mov
mov
and
xor
bound
add
in
ret
xor
push
or
push
xchg
aam
hlt
gs
aam
in
hlt
dec
gs
lds
xchg
mov
scas
pop
or
xchg
test
data16
ret
xchg
xchg
push
hlt
dec
xlat
pop
adc
xor
fs
xchg
mov
lods
pop
jno
jne
inc
cmp
mov
jb
mov
xor
into
and
and
addb
xor
jae
mov
xor
shlb
add
je
add
push
int
xor
mov
mov
loop
push
test
mov
adc
mov
inc
and
mov
add
push
cmpsb
adc
sbb
and
mov
pop
inc
rcl
and
daa
mov
xor
shll
jno
ja
lock
jo
cmp
add
hlt
mov
mov
ret
repnz
lea
enter
icebp
cmpsb
xor
dec
nop
push
push
test
andb
push
jb
mov
enter
push
push
mov
cmc
in
mov
jbe
dec
aad
xchg
cmp
je
adc
jge
rol
xor
mov
xor
je
movsb
inc
xor
mov
cmpsb
inc
adc
movb
adc
fcoml
loopne
lea
add
xor
adc
fwait
push
divb
xor
popl
adc
add
adc
gs
jg
jno
xor
push
xchg
lea
hlt
mov
aas
xor
mov
push
jo
xor
testb
add
jg
rcll
test
mov
aaa
inc
aad
push
jne
mov
sahf
xor
push
mov
aad
inc
xor
fisubrl
ja
jbe
idivb
mov
push
xor
mov
push
add
insl
adc
shr
mov
push
jbe
push
ss
lea
adc
jge
out
lcall
aaa
adc
cmpsb
jne
fidivl
repz
jae
loopne
push
mov
icebp
popa
inc
icebp
mov
sahf
mov
jo
cmc
mov
mov
nop
jbe
ss
inc
jne
inc
hlt
fisubrl
rorl
push
jno
adc
testl
jne
jbe
mov
or
je
inc
jne
adc
mov
jb
in
icebp
add
xor
lock
mov
adc
loopne
jmp
jo
mov
mov
icebp
push
repz
dec
mov
lea
lcall
mov
xor
push
mov
push
mov
sbb
je
push
rsqrtps
jno
mov
xor
leave
mov
adc
data16
sbb
lea
je
cmpsb
mov
and
shl
mov
adc
mov
mov
dec
and
je
data16
cmp
add
and
xchg
data16
cmp
xchg
inc
testl
movl
pop
mov
ja
hlt
fs
lock
xchg
divl
ja
aaa
mov
ss
adc
jge
adc
mov
test
ja
add
hlt
shl
and
ret
shrl
xor
xchg
push
ja
aaa
adc
insl
xchg
mov
xchg
mov
jno
mov
gs
aaa
lea
xor
xchg
add
jecxz
insl
xor
and
xor
data16
adc
inc
xchg
popa
cmp
push
jae
adc
adc
es
add
mov
xchg
sub
adc
andl
and
push
mov
divl
push
cwtl
shll
push
add
or
sbbl
push
mov
xchg
jno
xchg
sub
inc
inc
repz
push
jge
xchg
xor
mov
shl
mov
inc
jne
je
push
mov
adc
aam
push
xchg
jecxz
jne
xor
mov
mov
xor
sahf
mov
loope
push
push
mul
inc
daa
mov
push
adc
cmp
adc
xchg
rcll
xor
add
push
jecxz
in
push
jb
mov
in
jne
mov
repz
jb
mov
xor
mov
jo
add
push
mov
hlt
jecxz
fdivl
inc
repnz
jb
mov
cmp
inc
mov
inc
nop
popf
je
xor
sbb
cmpsb
push
je
icebp
jno
xor
mov
testl
xchg
xchg
and
scas
jne
lock
aam
mov
xchg
push
rcrb
inc
add
int3
hlt
xor
in
mov
cmpsb
ss
mov
and
jg
repz
lds
stos
shll
xor
mov
dec
xor
or
enter
xor
cmpsb
jno
lods
nop
icebp
mov
ss
xlat
mov
jne
scas
add
cmpsl
xchg
divl
xchg
push
out
mov
pop
stos
divb
xchg
cmp
inc
and
push
jo
mov
in
mov
popl
xchg
leave
push
push
ss
repnz
bnd
es
and
push
push
mov
test
cmp
and
mov
shlb
xchg
xor
lods
xchg
pop
nop
xchg
and
jb
push
scas
mov
and
out
rol
or
out
pop
xchg
jbe
adc
popa
lods
adc
xchg
push
push
or
push
rep
je
xchg
rcl
movsb
repnz
or
ret
mov
cmp
aad
repz
call
cmc
jnp
mov
in
in
hlt
push
inc
mov
rclb
mov
jno
push
or
shll
sar
test
adc
in
mov
mov
shl
insl
shlb
xchg
movsl
cmp
aad
fs
in
adc
jb
cltd
imulb
mov
adc
push
outsb
xor
adc
shrb
mov
add
jno
jecxz
mov
notb
pop
mov
push
sahf
adc
xchg
push
jne
shll
push
or
xchg
mov
cmpsb
push
aad
adc
and
aad
adc
add
jo
scas
mov
adc
push
push
repnz
shlb
icebp
sbb
xchg
push
ss
xor
aad
ja
dec
aad
fs
jne
adc
or
ss
sub
adc
aad
jle
aaa
je
xor
rclb
gs
xchg
push
repnz
mov
inc
push
mov
aaa
jecxz
insl
jno
scas
ja
loopne
jnp
cwtl
xchg
jbe
lcall
out
hlt
aas
aam
cmpsb
xchg
pop
and
mov
mov
les
rolb
and
notb
adc
xchg
mov
mov
mov
adc
repnz
test
add
or
jae
popa
data16
inc
xchg
rcll
jb
data16
mov
nop
in
adc
inc
and
push
aad
mov
je
lea
out
add
xchg
xor
daa
adc
cmp
inc
push
mov
flds
icebp
and
and
inc
aad
jbe
xchg
xchg
jbe
div
icebp
test
jbe
mov
adc
add
add
and
inc
add
gs
jo
pop
jno
adc
xchg
pop
cmc
push
into
je
popa
out
push
inc
mov
rclb
jecxz
mov
xchg
mov
in
aam
sahf
adc
adc
push
mov
jge
les
test
mov
jae
daa
xlat
ret
gs
divl
out
shrl
and
adc
sbb
in
pop
inc
adc
faddl
fdivrl
mov
sbb
aam
inc
hlt
xor
icebp
jl
adc
xor
add
xor
dec
subb
test
sbb
and
inc
jl
mov
psrad
push
mov
aaa
push
sbbl
ret
pop
mov
mov
je
sbb
mov
ss
ss
subb
nop
ret
repnz
xor
ja
adc
xor
mov
cli
and
pop
push
inc
xor
repz
and
mov
out
mov
mov
jmp
sbb
jbe
xchg
mov
sbb
xchg
in
inc
in
mov
or
daa
mov
add
xor
test
movsl
sub
mov
aad
dec
cmc
stos
les
xchg
scas
les
pop
jge
inc
sub
and
fiaddl
mul
adc
fiaddl
jo
mov
mov
or
sahf
shlb
lea
jecxz
mov
inc
fiaddl
jecxz
sahf
mov
fimull
adcb
test
mov
mov
inc
lea
mov
gs
dec
xor
inc
roll
xchg
sub
cmpsb
sub
mov
jp
cmpb
sub
fstpl
icebp
ret
imul
ss
and
cmp
mov
notl
mov
mull
pop
mov
aas
addl
mov
notl
mov
add
jbe
xchg
sbb
mov
scas
out
pop
in
inc
leave
rcl
jae
sbb
add
mov
je
cli
test
mov
ljmp
test
xchg
and
lea
test
push
fdivp
cmp
out
adc
imul
xor
mov
out
xchg
cmp
mov
mov
testl
shll
sbb
push
or
outsl
jle
jb
jno
mov
ss
divl
adc
scas
adc
ljmp
scas
dec
arpl
mov
push
shrl
mov
sub
dec
test
in
dec
inc
shl
aam
xchg
ja,pn
or
mov
pop
jecxz
sahf
jo
sub
pop
push
testl
xor
push
mov
stc
mov
out
mov
ljmp
pusha
scas
or
sahf
test
movsl
mov
ss
push
fimull
test
mov
ja
fiaddl
jecxz
mov
cmpsl
lcall
inc
sahf
mov
jmp
pop
lds
and
inc
out
adc
jo
nop
sahf
in
lock
ljmp
lock
out
push
adc
inc
xchg
xor
add
loopne
jl
inc
push
pusha
sbb
and
mov
add
xor
popa
jge
mov
mov
jo
cmc
and
std
scas
xchg
icebp
repnz
or
pop
cs
icebp
arpl
xchg
xchg
rcr
dec
arpl
cmp
in
mov
gs
or
movl
push
mov
xor
add
andb
inc
gs
sahf
mov
sbb
or
outsb
pusha
inc
sbb
data16
jl
cmpsb
pop
mov
out
jl
adc
xor
add
jno
in
push
arpl
rcl
gs
ss
in
push
inc
mov
and
ss
cmp
mov
scas
add
pop
mov
xor
in
aam
push
pop
mov
xchg
mov
push
sahf
mov
sub
sahf
xor
jge
jbe
mov
adc
daa
sbb
loopne
jl
cmpsl
sbb
lock
repnz
and
andl
les
outsb
mov
dec
rcrb
pop
data16
xchg
fildl
fisttpl
xchg
repz
ss
testb
xor
and
inc
push
or
pop
jge
push
adc
shrb
lock
addr16
lea
pushf
push
mov
jo
xchg
adc
mov
mov
jo
xor
lea
loope
jecxz
scas
or
roll
inc
xchg
fmull
xor
scas
dec
xlat
scas
inc
daa
sbb
nop
lock
inc
pop
jecxz
cld
xchg
adc
xchg
repnz
lock
shll
sub
push
lock
jno
sbb
and
inc
outsb
jno
ljmp
aas
jecxz
inc
insl
push
mov
loope
sbb
cmp
jge
xlat
jge
test
push
loop
jg
dec
aam
mov
jb
flds
divl
rorb
outsb
xchg
je
adc
mov
mov
push
add
mov
push
fists
sub
bnd
adc
cld
mov
pop
add
in
arpl
sbb
sti
scas
repz
in
push
sti
pop
test
test
nop
test
sti
scas
movsb
xor
ja
nop
cmp
pop
aam
xchg
loop
test
bound
cmc
and
jns
cld
push
scas
dec
add
and
add
rorl
add
nop
inc
adc
loop
sub
and
add
lock
add
mov
loope
adc
adc
sbb
push
inc
mov
aaa
and
aam
jns
dec
inc
fdivp
dec
shrl
das
mov
push
pop
aam
sub
xchg
or
pop
testb
mov
jne
or
or
lcall
push
xchg
sub
or
pop
shlb
popa
rol
sbb
shrb
push
arpl
add
mov
adc
or
scas
dec
push
sbb
mov
arpl
imul
push
inc
test
cwtl
push
pop
xor
cmpsb
scas
push
mulb
pop
push
or
xchg
aam
xchg
hlt
inc
mov
in
lds
xchg
xchg
in
addr16
jecxz
mov
jae
jne
xor
repz
jae
repnz
mov
outsb
inc
pop
ret
ja
popw
repz
xchg
mov
fisubrl
sarb
adc
dec
cmc
dec
jb
push
movsl
test
cmp
and
ljmp
and
mov
jne
mov
icebp
cmp
inc
inc
out
lcall
add
icebp
movsb
jmp
movsb
repz
push
adc
test
mov
push
mov
adc
rorl
xchg
ss
not
mov
adc
mov
xor
and
sub
ja
xchg
jbe
sub
cmpsl
mov
repz
arpl
notl
loope
aas
adc
mov
push
nop
xchg
jno
adc
pop
mov
push
ret
mov
out
mov
inc
add
pusha
xchg
fcmovnb
pop
adc
rcr
mov
push
jb
adc
xchg
mov
test
addr16
jge
dec
nop
pop
adc
push
adc
pop
ret
xchg
aam
fcoml
jno
sbb
xor
push
out
pop
rolb
sbb
cmp
sbb
push
xchg
fsubr
mov
xor
or
push
push
test
pushl
sub
xor
pop
and
jecxz
jb
push
pop
mov
mov
xor
aad
lock
cmc
les
or
lahf
addr16
inc
scas
daa
out
hlt
out
pop
cmpsb
pop
xchg
out
aaa
es
fsub
push
andl
inc
mull
test
mull
mull
add
jecxz
ret
mull
fstpt
cmp
inc
ret
xor
cwtl
and
shrl
pop
inc
pop
and
pop
loopne
rcrb
sbbb
inc
pop
and
mov
sub
lods
aaa
inc
inc
scas
xor
jmp
mov
push
scas
mov
xor
or
or
ljmp
jb
rclb
lods
cmpsl
iret
aam
sahf
fidivrs
xlat
movsb
mov
mov
in
dec
adc
push
pop
xchg
negl
pop
lcall
in
ljmp
cwtl
aad
and
push
xchg
fwait
mov
pop
pop
shl
fimuls
popa
pushw
call
cwtl
pop
push
cli
test
mov
xchg
xchg
leave
jo
les
xchg
sti
mov
jmp
jb
ror
lahf
adcl
rol
pop
inc
cltd
dec
cmp
xlat
fimull
negl
outsl
jp,pt
movsb
xchg
mov
push
loope
cli
pop
fs
jecxz
sub
and
popf
jo
pop
pop
stos
loope
xchg
jecxz
rcr
pop
dec
pop
and
scas
mov
xchg
aas
xchg
ret
mov
mov
jae
lret
mov
push
lcall
out
pop
pop
aad
pop
fwait
cmp
cmp
mov
mov
mov
xlat
pop
fisubrl
fwait
clc
cwtl
or
leave
mov
dec
test
sti
iret
cwtl
inc
push
cmp
pushf
icebp
xchg
xor
stc
test
fcos
cmp
pop
cli
push
push
pop
sbb
fildl
dec
dec
dec
incl
sbb
add
dec
negl
test
mov
das
addr16
push
sub
mov
jnp
mov
sub
mov
push
dec
cmc
fdivrs
push
daa
mov
mov
pop
mov
fldenv
dec
out
xlat
sbb
pushf
jge
popa
popf
fimuls
cmp
ja
pop
aad
sbb
xchg
and
std
mov
imul
addr16
lret
inc
in
stc
push
movsb
mov
jp
and
jnp
dec
shll
neg
push
jnp
adc
inc
test
mov
xchg
mov
cmpsl
xor
cli
cmp
es
lcall
fwait
js
pop
fwait
pop
daa
inc
mov
inc
jg
and
cmp
cmpl
aam
popa
and
mov
cld
sub
push
into
add
xor
xchg
addr16
test
fmull
test
daa
cmpl
jns
out
mov
divl
jge
xchg
mov
mulb
lods
das
push
fbld
inc
daa
popf
mov
iret
mov
add
or
das
fwait
push
fstpl
sarl
inc
and
fwait
inc
andl
stc
out
jbe
stos
xor
dec
xor
jbe
inc
mov
jge
andb
call
aaa
xor
pop
or
arpl
and
cmpsl
sahf
xor
push
fadd
lahf
das
cmp
ds
pushw
into
push
mov
iret
mov
mov
lds
gs
adc
cld
adc
cmp
test
lods
data16
data16
xchg
xor
push
push
enter
aad
pushf
sub
int3
fidivrs
pop
fs
shl
jo
iret
shrb
adc
push
rcl
mov
lock
pusha
xlat
out
mov
pop
push
xor
out
dec
lret
inc
aam
shll
jnp
xchg
repz
xchg
stos
iret
fsubr
mov
xor
gs
cmpsl
imul
adc
rorl
jns
rcl
mov
ja
and
xlat
push
xchg
xlat
shll
add
mov
loope
iret
mov
add
push
push
cmpsb
sbb
xchg
mov
rcll
fcmovnbe
iret
cmp
inc
add
xchg
xor
xlat
push
pop
je
push
xor
shll
xlat
rcl
out
cmp
lds
adc
test
fcmovnb
fisubl
in
jbe
js
adcl
adc
leave
adc
call
shlb
test
repnz
sahf
adc
xchg
xchg
aam
lret
cmp
out
sarb
xlat
sti
push
inc
mov
push
aas
add
inc
xchg
lret
movsl
dec
xchg
ret
rcr
push
mov
mov
xlat
jo
adc
mov
mov
rcll
shl
xor
daa
imul
push
xchg
push
push
push
pop
sbb
sti
push
fldcw
es
inc
adc
inc
xchg
cmc
aad
mov
mov
ret
test
scas
jnp
in
into
aas
xchg
aad
lahf
ror
inc
scas
jle
push
fnsave
push
mulb
mov
pop
test
lock
mov
lds
mov
neg
inc
outsb
jecxz
pop
rcr
ficomps
cmpsl
mov
lret
fwait
lcall
xor
fidivrs
pop
adc
sub
lods
push
push
stos
xor
xor
fsub
inc
mov
and
nop
movsl
jp
mov
mov
js
and
lcall
add
sqrtps
stos
out
faddl
fistps
test
xor
test
dec
cmp
das
mov
daa
cmpsl
cmp
mov
push
mov
ret
mov
fistpll
outsb
iret
push
aad
pushf
prefetcht1
push
addr16
add
shll
push
iret
jne
ja
xchg
mov
push
inc
pop
cmp
ds
insb
inc
mov
xor
lahf
les
mov
mov
pop
cmp
mov
outsw
rolb
xlat
xchg
inc
jns
repz
lahf
mov
pop
nop
movsl
into
mov
data16
jmp
mov
clc
xchg
mov
divb
pop
mov
gs
push
lods
dec
in
jne
iret
fisubs
aas
rcrb
or
test
lahf
mov
pop
adcb
rorl
scas
nop
jno
or
push
sarl
pusha
xor
push
mov
pop
ret
sbb
xor
mov
sarl
cmc
scas
cmpsl
dec
pop
inc
aam
mov
push
stos
iret
sar
notb
aas
push
into
fwait
daa
or
mov
data16
adc
pop
rcrb
mov
adcb
inc
mov
inc
xor
jne
mov
int
repz
sbb
ljmp
out
mov
ret
jge
push
xlat
lret
leave
aas
mov
aad
mov
xchg
xchg
push
int
clc
hlt
jne
outsl
cmp
mov
ljmp
push
xchg
jecxz
paddq
xor
lahf
leave
push
push
aad
dec
xchg
pop
int
cltd
adc
pop
push
mov
leave
dec
ds
rol
jns
out
aam
jge
pop
fistl
adc
notl
lret
mov
jnp
mov
mov
imul
sarb
lods
adc
aad
negl
shll
mov
loopne
aad
jnp
inc
or
mov
jbe
shr
cld
mov
mov
fildll
jne
mov
sub
push
aaa
lahf
lahf
or
popa
cmp
movswl
shld
jne
cmpsl
add
lahf
pusha
cmp
sbb
pop
pop
cmpsl
xorb
xchg
inc
jno
popa
cmpsl
add
push
xlat
shlb
push
push
xchg
dec
mov
in
and
inc
xchg
jo
movsb
and
cmc
cmpsl
inc
jge
mov
lret
push
mov
aad
add
push
sub
ds
mov
jno
ja
cmpsl
add
xor
dec
imulb
iret
pushf
adc
mov
cmp
mov
lcall
push
push
mov
adc
popf
pop
aaa
lds
push
xchg
hlt
ja
xor
cmpsl
pop
xchg
in
std
cltd
mov
lret
mov
push
nop
pushf
ror
mov
lret
pop
cmp
aaa
adc
cltd
xlat
out
subl
int
sub
mov
movl
mov
in
stc
std
fmul
push
fisubs
push
dec
cmpb
fildll
dec
cs
ss
out
xor
aas
fbld
mov
out
xor
roll
ja
mov
lahf
notl
inc
mov
sub
inc
ror
test
mov
mov
aam
jmp
ja
fldt
ret
jl
aam
jo
adc
push
push
xchg
pop
js
inc
sub
addr16
fwait
aaa
movsb
push
js
nop
push
lahf
inc
idivl
pushf
jne
dec
pop
scas
push
mov
roll
pusha
aas
xchg
pop
xchg
ja
and
frstor
movsl
dec
aas
jae
out
ja
xor
fisttps
push
lahf
shlb
sub
mov
cltd
fsubp
ljmp
shll
notl
iret
cwtl
xor
inc
xlat
stos
xchg
rol
js
out
mov
ds
mov
int
fcmovb
test
xchg
xor
rcl
mov
xchg
ficomps
jo
cmp
dec
nop
ds
push
mov
mov
push
and
cmpsl
rorl
push
xor
jne
pop
xor
arpl
sub
ret
sti
mov
xlat
ss
scas
in
shl
sub
into
cmpsb
push
pop
call
mov
nop
iret
xor
imul
mov
mov
and
out
int
loope
shl
lret
dec
inc
push
adc
or
xchg
rcl
ret
lods
mov
xlat
enter
addr16
test
sub
push
jl
xor
iret
mov
stos
shl
gs
push
xor
push
or
cmc
mov
cmp
stos
aad
xchg
imul
dec
test
mov
adc
mov
lret
pop
leave
mov
add
int3
and
push
int3
iret
mov
sbb
lahf
testb
nop
jb
sarl
lds
mov
xlat
jno
mov
dec
fnsave
lods
aaa
and
fcomi
push
mov
dec
jo
dec
cmpsb
daa
out
ss
push
imul
mov
iret
dec
scas
maxps
adc
jno
jbe
out
aaa
in
test
push
push
in
xor
das
mov
gs
insl
shlb
rcll
aas
adc
aaa
rorl
cltd
leave
add
push
cs
rol
movsb
push
addr16
cs
and
std
call
push
aam
mov
iret
stos
cmp
push
cmpsl
and
push
movl
pop
push
pop
lods
mov
xchg
and
cmp
rcl
nop
adc
mov
sub
iret
jno
mov
xchg
fidivrl
test
push
bound
mov
sarb
mov
push
iret
aad
dec
enter
push
in
lret
cmp
das
add
rclb
bound
dec
rorl
inc
push
or
pop
ficomps
inc
xchg
mov
mov
aaa
test
push
nop
adc
xchg
enter
mov
xor
out
jp
hlt
dec
pop
ja
nop
or
ffreep
cs
test
mov
movl
pop
xchg
mov
and
int
data16
popf
seto
sbb
dec
sahf
imul
and
push
fwait
push
leave
cmpsl
ja
int
and
iret
int3
xchg
mov
pop
cmp
lahf
mov
loope
scas
lods
lret
shr
inc
out
andnps
aas
shll
fistps
aam
mov
pushf
xchg
sarb
cmpsl
mov
mov
ja
pop
xchg
cld
pusha
push
cmc
mov
arpl
fmul
sub
push
mov
sub
fldenv
inc
mov
fcomip
inc
mov
rolb
mov
mov
push
xchg
jmp
mov
ret
out
cmp
rcl
std
mov
xlat
jl
test
aad
das
jne
push
in
push
adc
lods
push
movsb
inc
jo
mov
fwait
sub
mov
fwait
in
test
push
mov
shll
aad
dec
push
imul
pop
jg
pop
fstps
aas
test
and
pushf
mov
call
and
fstl
test
out
jnp
cmp
xlat
nop
std
out
addr16
jbe
inc
inc
or
dec
in
div
ja
movsb
push
in
xor
aad
shl
test
push
js
pop
push
mov
out
push
jb
xlat
mov
daa
aam
fcmovnbe
bound
push
cmpsl
dec
int
std
adc
icebp
sub
cmp
cmc
cwtl
int
push
dec
sub
shr
adc
sbb
xchg
ja
cltd
dec
jecxz
inc
push
loope
pop
adc
mov
jmp
xor
xor
xchg
sub
cmp
pop
imull
push
hlt
mov
or
imul
inc
aas
sub
mov
mov
addb
dec
aas
orl
nop
jae
mov
ja
xchg
lods
pop
es
push
mov
es
mov
leave
cmc
shl
and
in
pop
xor
push
push
push
cmp
cltd
pop
mov
pop
nop
adc
leave
incb
outsl
xlat
push
xor
xchg
mov
cs
adc
lock
jne
push
dec
xor
loope
jb
icebp
and
sub
inc
push
xor
xchg
outsl
je
jne
push
pushf
xchg
jo
jle
xor
push
push
jo
push
push
jb
out
not
xchg
aad
adc
loop
mov
dec
nop
pop
cmpsb
aad
mov
out
push
adc
mov
mov
mov
mov
push
clc
add
add
push
int3
aad
icebp
cmp
xlat
xchg
shll
test
aam
push
adc
inc
cmp
sub
daa
push
pop
mov
jg
cltd
fbld
mov
push
nop
dec
pop
push
aaa
cmp
push
fbstp
mov
xor
not
js
jnp
xchg
sub
push
xchg
mov
int
fisttps
mov
int
popa
add
cmp
inc
mov
ret
divb
xchg
and
aas
and
shl
int3
ficompl
bnd
mov
enter
out
lock
scas
cmc
stos
sub
test
dec
rcl
cmp
inc
movsl
scas
lret
adc
lret
fstpl
ret
int
sub
repnz
aaa
sti
ret
adc
movsl
push
pop
sti
leave
pop
cltd
dec
daa
outsl
push
jg
iret
lahf
je
dec
adc
inc
cmp
sbb
lret
rcl
cmpsb
lahf
and
testb
and
dec
pop
mov
rcl
rorl
xlat
xchg
mov
xchg
add
addr16
cltd
inc
inc
pop
mov
mov
jae
push
xorl
and
aad
sbb
mov
ficoms
lds
cltd
arpl
push
out
into
or
add
dec
aaa
push
mov
cmpsl
addr16
scas
rorl
lahf
push
ret
cmp
jg
mov
sbb
sub
popf
mov
pop
xchg
jae
sbb
inc
std
xchg
xor
cs
rorb
adc
call
mov
adc
ja
pushf
out
lods
js
sub
and
pop
fcoml
shl
xor
xchg
negb
xlat
jnp
mov
lods
out
aad
rcrl
push
add
sti
sarl
aas
jae
addb
lea
push
aaa
out
movsl
mov
xchg
mov
enter
adc
mov
rorb
popf
cli
xor
lahf
outsl
ret
out
xchg
push
aad
mov
xchg
xchg
addr16
popa
mov
pop
test
clc
gs
lret
out
fisttpl
lds
mov
jae
dec
jne
and
repnz
pop
aad
ja
mov
iret
rcrl
dec
mov
mov
lds
int
sti
mov
dec
mov
popa
sbb
std
pop
xchg
mov
mov
leave
adc
lret
inc
pop
xlat
jle
adc
in
stos
mov
lret
jmp
iret
leave
call
adc
into
lret
cmpsl
mov
sub
sub
pushf
ja
and
cmc
ds
xor
mov
jle
inc
js
scas
adc
lds
push
mov
shrl
das
mov
out
or
ffree
cwtl
aad
in
lock
inc
das
mov
out
cmp
rcl
mov
adc
cmc
sarb
adc
aad
mov
rcrl
sbb
shrl
cld
rcrl
inc
test
adcb
js
sbb
push
fists
nop
cmpsb
jb
shl
repz
sarb
mov
mov
sahf
mov
je
iret
lret
xor
ja
aad
xor
popf
push
pop
inc
and
ret
jecxz
jl
jg
sbb
mov
mov
rclb
outsl
divb
cmp
sub
add
js
aad
cmp
lret
rcll
mov
lret
cmp
mov
call
iret
std
sub
shlb
xchg
iret
fistpll
ret
scas
lahf
shl
push
in
rcr
rcll
adcb
imul
rcll
mov
cwtl
adc
sub
outsb
rclb
int3
mov
leave
and
push
jb
call
xlat
push
and
mov
scas
sbb
mov
add
add
dec
cmpsl
adc
xchg
daa
daa
mov
dec
xlat
sbb
rorb
aam
idivb
scas
xchg
xor
inc
or
stos
mov
leave
popf
adc
sbb
fildll
jecxz
jmp
pop
dec
fimuls
fsubl
lahf
aam
sbb
cmp
jnp
cmpsl
push
jns
jae
popa
mov
inc
xchg
adcl
loop
iret
bound
add
sub
inc
mov
gs
add
push
aam
inc
and
imul
sarl
add
mov
lahf
mov
cmc
and
test
push
mov
leave
mov
aam
mov
dec
iret
scas
in
cmpsl
mov
cmp
inc
enter
int3
shrb
jnp
mov
mov
or
adc
and
adc
aam
ret
andb
aad
inc
adc
jbe
sti
shlb
mov
stos
jmp
shr
inc
iret
push
fmulp
es
lds
sub
push
xchg
iret
mov
lahf
sbb
cmp
sub
ficomps
jns
inc
loopne
js
fucom
adc
cmpsb
cmpsb
shrl
aas
lock
mov
mov
xchg
lahf
cmpsl
xchg
mov
dec
int3
shll
enter
scas
fiadds
gs
jo
jp
ja
sbb
decb
into
imul
popl
dec
mov
ss
iret
aas
adc
dec
push
pop
pop
inc
jae
mov
insl
aaa
addr16
idivb
sbb
pop
push
cmpsl
enter
push
sub
push
cmpsl
push
or
lods
mov
push
sarl
out
push
out
dec
enter
movsl
mov
cmp
cmp
jl
xor
into
xlat
insl
aam
nop
aad
push
dec
js
aam
mov
addr16
ror
mov
shl
cmp
stos
and
mov
jo
js
mov
add
ret
lret
push
inc
jno
mov
and
lahf
xchg
lods
push
ja
jl
les
mov
or
shll
cmpsl
out
dec
es
jno
imul
sbb
pusha
inc
xlat
stc
adc
mov
cs
sub
push
jg
leave
aad
sub
push
sub
iret
cltd
cmp
ror
mov
sti
lret
scas
adc
popa
xor
popl
dec
ret
in
in
enter
clc
jg
cmp
sbb
cltd
mov
push
jae
push
adc
mov
aad
dec
dec
out
ja
out
xchg
add
lahf
ja
and
push
jmp
ja
or
push
or
jp
dec
add
ja
sbb
adc
addr16
dec
adc
ja
outsl
mov
push
push
pop
xchg
inc
dec
xlat
test
roll
push
adc
add
leave
repz
fisubs
pushf
lret
mov
mov
add
push
out
scas
ficoml
lahf
cmp
push
mov
jns
out
roll
xchg
cli
mov
ja
adc
lret
rorb
rcr
cltd
pop
mov
inc
ret
scas
lret
xchg
ror
pop
or
stc
nop
mov
sub
mov
leave
test
dec
push
pop
nop
mov
xchg
rolb
sub
pushf
mov
ret
mov
addr16
in
mov
push
data16
ja
mov
dec
pop
mov
adc
hlt
inc
iret
mov
push
iret
mov
int3
xor
jp
hlt
sbb
popa
push
xor
cmpsl
rcl
movsb
jne
outsb
xchg
andb
scas
mov
jb
ds
pop
es
roll
xchg
jbe
cmpsl
push
addr16
jp
lahf
addr16
cmpsl
mov
in
and
inc
push
loope
xor
jo
xchg
testb
dec
cmc
movl
push
lret
push
push
mov
xchg
add
push
or
cmp
icebp
frstor
push
mov
xchg
mov
cmp
push
aas
inc
lods
fnstenv
mov
sarb
mov
xor
movsl
adc
je
mov
mov
fdivp
fimull
aad
pop
pop
mov
cmp
jae
es
dec
cld
outsl
pop
cmp
lds
jmp
fdivs
int3
mov
ret
lods
mov
mov
push
mov
or
insb
mov
push
movsb
cwtl
pop
gs
pop
push
xor
or
mov
mov
cmpsl
cmpl
push
jns
adc
push
pushf
es
loopne
addr16
iret
rcrl
xor
lahf
sub
inc
push
mov
jge
sbbl
inc
test
scas
enter
movsb
pop
mov
cmp
adc
push
pop
xchg
les
lcall
test
lahf
push
scas
cmp
pop
insb
inc
pop
sub
call
mov
cmc
lret
lahf
iret
dec
outsl
insl
mov
cmp
clc
ret
insb
arpl
int3
push
jne
xchg
lods
xchg
sub
imul
scas
ss
iret
sub
mov
lds
pop
mov
fists
mov
leave
fdivr
push
test
xor
and
xchg
lods
adc
sub
xor
xchg
ret
je
push
pop
xchg
push
outsl
loop
aad
xor
add
mov
xor
scas
adc
scas
lcall
or
cmp
ds
sbb
jl
shrl
iret
adc
pop
mov
rcll
mov
cmp
and
inc
pop
movsb
cmp
pop
lcall
dec
xchg
mov
and
stc
pushf
mov
rcll
call
arpl
push
cmp
mov
pop
jecxz
gs
out
lods
icebp
iret
push
dec
mov
mov
fs
mov
jl
sbb
inc
sub
cwtl
xor
aad
lret
mov
xor
pop
pop
dec
enter
or
mov
push
jbe
xchg
add
cwtl
mov
sbb
nop
mov
lret
scas
and
adc
mov
cmpl
mov
lret
cwtl
dec
shll
loopne
int3
push
sub
into
lods
mov
movsb
or
xchg
xchg
ja
xchg
push
outsl
stos
mov
mov
mov
inc
xor
data16
hlt
pop
outsb
fmulp
shll
inc
inc
out
std
flds
mov
cmp
push
movsl
jne
loopne
fdivrl
pop
mov
sub
icebp
std
fnstenv
gs
push
push
dec
fcmove
and
andnps
mov
pop
arpl
inc
lea
adc
mov
cmc
and
movsb
dec
rcll
inc
jne
push
push
sub
mov
ja
jecxz
push
push
hlt
push
add
shr
xor
mov
dec
jmp
cld
sub
loopne
mov
sub
inc
mov
push
test
add
xchg
out
and
loopne
gs
inc
addr16
mov
jo
inc
lret
adc
div
add
and
test
out
repz
in
cmp
popf
ss
sahf
in
popf
movsb
fs
arpl
mov
fwait
icebp
cs
daa
push
gs
repz
jmp
push
es
pop
add
repz
scas
push
dec
ljmp
arpl
mov
pop
cltd
scas
push
in
addr16
pop
jb
in
into
loopne
dec
dec
mov
int
cmp
xchg
addl
jb
call
cmpsb
pop
push
ds
and
jae
or
xchg
mov
adc
or
adc
lret
je
inc
or
shl
lcall
or
lods
cli
adc
jmp
jae
push
sub
arpl
push
fnstcw
xor
fbstp
xor
dec
shlb
aad
dec
notb
cmpsb
push
xchg
jbe
adc
sub
inc
fcmovne
lods
jl
jae
mov
es
sbb
shll
jg
push
sub
insl
mov
xchg
cs
pop
cmpsb
xlat
mov
int
xor
adc
ss
repnz
fbld
mov
into
inc
push
xchg
cmp
popa
cli
daa
pop
imul
add
push
xlat
mov
arpl
xlat
sub
jp
shlb
mov
xlat
adcl
sbb
xlat
imul
pop
jg
in
cwtl
movsl
cmp
adc
push
cmp
jne
enter
jo
cmp
mov
xlat
mov
lcall
arpl
jns
mov
sahf
cs
xchg
xchg
aaa
sbb
inc
ret
sbb
ljmp
mov
sar
or
neg
cli
test
jecxz
leave
jb
fdivl
pop
xor
and
pop
mov
pmullw
sbb
fmull
fisubl
leave
loope
ljmp
jg
test
dec
aaa
xchg
rcrl
cmp
xlat
imul
dec
xlat
sub
std
fisubl
outsb
mov
push
hlt
aam
loop
fcmovbe
push
arpl
stos
test
pop
movsl
mov
sbb
mov
pop
out
xchg
pop
iret
leave
mov
fsubrl
ss
cltd
inc
es
sbb
push
jb
jmp
fadds
jp
mov
sbb
jns
daa
bound
iret
fstp
mov
repz
xchg
imul
mov
jae
jno
ds
cmp
push
outsl
aas
xchg
jmp
push
mov
sub
cmp
jg
cmp
ja,pt
mov
adc
imul
pop
push
sahf
or
lahf
repz
jno
mov
pop
sub
xor
mov
inc
xorl
add
mov
pop
mov
jbe
popf
inc
cmp
inc
mov
cltd
daa
lock
pop
repnz
mov
jb
add
roll
mov
xor
mov
jge
addr16
fsubl
ret
aam
xchg
cmp
inc
push
push
sbb
ret
xchg
mov
pop
pop
xor
mov
sub
cmp
xor
xchg
sbb
out
ffree
outsl
and
sub
fstpt
xchg
inc
decb
pop
ficompl
sub
push
jle
aaa
pop
sub
nop
imul
mov
std
cmpl
popf
push
add
fdivs
imul
es
xchg
pop
adc
mov
and
jge
or
fisubl
loopne
divl
je
adc
mov
insl
sub
enter
mov
pop
insl
sub
xor
lds
mov
xchg
xchg
xchg
ret
imul
jnp
inc
rorb
int
pop
cmpsb
mov
mov
jp
xchg
mov
mov
mov
nop
push
popa
outsb
pop
addr16
pop
loope
test
pushf
mov
or
xor
pushf
nop
pop
mov
aas
mov
lds
jae
cli
mov
inc
xchg
jnp
int
lahf
jmp
iret
xchg
lea
dec
test
cmp
sub
lea
push
xor
je
sub
pop
les
dec
sub
pop
sub
xchg
add
sbb
ja
lds
mov
jbe
xor
sub
xor
inc
xchg
or
loop
pop
subb
inc
sub
cmp
cmp
add
sbb
in
mov
loop
test
add
and
stos
mov
pop
movsl
mov
push
xchg
pop
add
icebp
xchg
jecxz
aas
add
test
jae
or
xchg
xchg
push
repnz
shll
adc
sbb
mov
js
dec
mov
add
daa
and
push
jp
mov
xchg
shl
mov
xchg
and
mov
movsb
cmpsb
jp
das
mov
cmpsb
mov
xchg
inc
aaa
bound
dec
inc
jne
into
xchg
jge
or
repnz
ror
stos
nop
mov
cmp
or
lcall
push
loope
cmpsb
mov
mov
daa
sti
popf
aas
adcl
movsl
inc
fwait
mov
shll
xorb
imulb
addr16
mov
push
rcrl
push
jno
andl
dec
in
fldl
inc
and
sub
ret
icebp
notb
sub
jnp
ljmp
sti
mov
inc
add
add
cli
mov
mov
fwait
pop
repnz
iret
fdiv
pop
leave
mov
out
push
lea
xchg
dec
les
cli
sub
xorb
xchg
adc
jecxz
add
mov
xchg
imul
fwait
in
notb
int
lahf
xchg
cltd
leave
iret
arpl
imul
jl
push
in
xchg
push
mov
sarl
push
push
sbb
lods
mov
push
es
nop
fwait
mov
notb
aad
scas
ljmp
imul
adc
mov
push
add
leave
jb
mov
jno
test
xor
lock
add
jnp
inc
mov
pop
or
ljmp
jne
aaa
pop
xchg
popa
icebp
repz
in
rclb
add
int3
pop
mov
mov
lret
movsb
cmp
add
lret
stos
push
jnp
cmc
ret
pop
inc
fwait
adc
jne
xchg
lret
pop
adc
mov
inc
adc
mov
fcmovb
adc
lret
mov
movsl
push
shrl
je
shll
fwait
rolb
gs
mov
lcall
mov
in
dec
and
rcrb
imul
push
and
xlat
xchg
xchg
mov
inc
jbe
adc
lahf
or
jnp
adc
jne
aaa
sbb
lds
in
push
lods
insl
lret
aad
repz
adcl
fstpt
jae
adc
push
sbb
push
push
int
dec
sti
aad
add
popa
push
xor
shlb
stos
rorl
ja
xor
push
sub
in
push
sbb
adc
xchg
lret
adcl
jne
jbe
lods
aaa
pop
sbb
pop
jns
stc
sar
les
mov
mov
sub
lret
testb
xchg
popf
xchg
or
dec
addr16
fwait
adcl
push
adc
sub
mov
push
ss
pop
repnz
sarb
push
push
push
jo
mov
shll
xchg
xor
xchg
int3
jne
push
das
xor
push
sti
push
cmpsb
add
jge
inc
xchg
hlt
lea
or
push
notb
test
add
adc
dec
je
int
mov
fmull
adc
push
shrb
popf
lcall
rorl
aam
xchg
push
in
mov
mov
adc
sarl
lods
jae
or
mov
arpl
push
aam
and
push
movsb
aam
ret
sub
in
jae
inc
adcl
mov
push
lret
mov
dec
xchg
test
clc
rcl
lret
mov
xchg
push
arpl
lret
movsl
push
mov
xchg
jecxz
dec
jns
aad
popa
lret
rorb
call
mov
movsb
cmp
mov
inc
dec
mov
leave
rcrl
xchg
cmp
cmpsb
std
jge
xchg
aaa
mov
push
xchg
xchg
dec
mov
loop
aad
jb
pop
stos
jb
cwtl
jg
push
iret
xchg
andl
mov
inc
insb
ret
idivl
jge
xchg
nop
cmc
xchg
ret
xor
ret
aaa
ja
fdivl
ljmp
je
push
cmp
push
lods
mov
push
xor
repnz
xchg
loop
sbb
xorl
roll
sub
aad
sbb
dec
adc
pop
shl
sahf
lea
fstpl
js
adc
dec
imulb
int
cli
jg
insl
push
icebp
add
cltd
push
ja
popf
shl
aas
mov
sbb
adc
fistpl
xchg
mov
mov
mov
lds
cmpsl
mov
fnsave
add
adc
mov
mov
aad
mov
or
arpl
aaa
xchg
xor
aaa
cld
fcmovbe
xchg
adc
dec
in
hlt
hlt
fmuls
mov
ss
push
adc
lea
aam
icebp
dec
out
aaa
aad
js
lahf
ja
sub
hlt
ret
dec
into
subb
xlat
cmp
inc
adc
sbb
sub
push
cmp
adc
pop
or
xlat
loope
xor
xlat
lds
jecxz
inc
lret
shll
mov
daa
stc
out
pop
jne
xlat
in
nop
mov
inc
push
lods
repz
mov
lret
mov
push
int
jno
les
in
adc
pop
sub
xlat
dec
xchg
mov
punpcklwd
cmc
push
enter
pusha
and
add
jb
mov
push
rcrl
enter
popa
je
adc
xchg
int3
clc
pop
sarb
inc
xor
call
fimuls
jmp
rorb
and
test
cwtl
mov
ret
xlat
ret
xchg
mov
cs
mov
mov
idivl
idivb
pushf
mov
push
das
push
sti
aad
in
rol
aad
lods
push
push
pop
idivb
imulb
fbstp
xchg
rcll
fimuls
pop
into
lahf
mov
sbb
adc
fidivs
mov
fs
iret
jmp
sbb
inc
push
cmp
push
xor
cltd
pop
fsts
ss
rorb
dec
and
dec
dec
jg
cmp
xor
loopne
sbb
aaa
adc
ror
dec
sbbb
lods
push
pop
inc
push
jmp
sub
pop
cmpsb
lret
xor
iret
imulb
hlt
adcl
push
lods
xchg
sahf
rolb
or
dec
inc
jb
mov
lahf
lcall
mov
inc
jle
adc
or
or
push
faddl
cld
fisttpll
push
cli
mov
out
movsl
and
cmp
and
xor
cmp
add
aam
cmp
mov
pop
mov
lret
fisttps
mov
pop
or
jmp
dec
js
stos
fwait
das
sub
xor
popa
mov
dec
loope
pop
roll
jno
adc
add
mov
loopne
subl
inc
pop
mov
or
mov
push
jb
xor
mov
adc
pop
and
inc
and
xor
jo
mov
js
adc
cmpsl
loopne
or
movsl
lea
add
test
mov
aaa
mov
mov
scas
xchg
test
mov
jmp
mov
outsl
addr16
pushf
push
xchg
dec
insb
aaa
call
aaa
das
leave
ja
pop
pop
cmp
inc
pop
out
int
iret
mov
cmp
push
aaa
outsl
aam
iret
fildl
pop
dec
fwait
dec
not
pop
mov
loopne
cltd
cmpsl
fbstp
scas
sub
push
arpl
xchg
mov
lahf
xchg
xchg
adc
push
adc
and
in
jmp
fwait
cwtl
dec
rolb
dec
int
cmpsl
aas
dec
int3
lahf
dec
aaa
xlat
inc
lret
dec
lret
lds
leave
das
inc
dec
push
mov
les
ret
add
rcr
sysret
scas
cmpsb
iret
sahf
xchg
mov
decl
xlat
push
mov
xchg
xlat
test
adc
mov
movsb
pushf
xchg
mov
test
sub
sbb
or
add
mov
mov
addl
sub
sbb
xlat
or
ret
stos
mov
addb
sub
xlat
sbb
or
sarl
xchg
mov
sub
sbb
or
enter
mov
mov
xlat
dec
inc
cmp
sub
sbb
mov
add
mov
ret
add
and
sbb
lea
xor
sbb
ss
mov
sbb
xchg
int3
dec
aas
scas
xchg
aaa
lds
sbb
mov
dec
shll
mov
enter
clc
mov
ret
push
add
or
ja
sub
ffree
out
pop
rcll
xlat
cli
xchg
lds
cs
inc
out
cmp
out
inc
aam
nop
mov
shrb
cli
in
mov
mov
pop
and
xor
and
dec
repz
adc
addr16
and
jecxz
push
fs
xor
mov
outsb
bound
dec
daa
jmp
add
dec
xor
popf
ja
xlat
das
or
push
xlat
pop
and
push
inc
loope
adc
dec
jecxz
sarb
adc
add
adcl
stc
dec
push
addb
xlat
push
pop
lahf
movsl
cwtl
cs
outsb
imul
cmp
fsts
xchg
out
std
push
xlat
lods
enter
sbb
xlat
sub
cmp
push
xlat
aaa
and
in
inc
mov
iret
jo
push
fs
xlat
adc
rcr
inc
pop
mov
and
popf
dec
les
pop
sti
cmc
xlat
add
into
inc
iret
mov
imul
xchg
mov
aad
inc
fcom
or
jge
out
inc
mov
lock
xlat
movsb
cmp
mov
imul
pop
cltd
testb
rorl
test
stc
lret
pop
bound
xor
sub
out
loope
pop
push
mov
pop
pop
adc
cld
movsl
mov
inc
cmp
cmp
imulb
xorl
insl
mov
das
push
mov
nop
push
mov
ja
xorb
add
outsl
rorl
pop
xlat
cmp
orl
jge
ljmp
xchg
cmp
jle
in
adc
rep
dec
movsl
xlat
imul
xlat
out
rcr
and
xlat
mov
mov
movsl
xlat
mov
fwait
into
xchg
iret
fmull
mov
sub
add
call
ja
outsl
std
test
xlat
insb
push
fisubrs
pusha
fcmove
or
aad
push
push
mov
sbb
shlb
inc
adcb
xor
adc
adc
xlat
sbb
sub
stc
adc
xor
sub
aaa
cmpsl
icebp
adc
xor
xlat
ds
jmp
out
cmpb
lret
rcll
sub
inc
scas
mov
idiv
sbb
out
in
jle
push
ja
leave
ljmp
dec
pop
cmp
out
stos
xlat
gs
cmp
pop
or
ja
add
sub
and
xlat
mov
or
shll
rcl
mov
pop
adc
mov
imul
mov
shrl
das
imul
mov
mov
inc
or
inc
mov
repnz
jmp
jno
iret
loop
xchg
fcmovnbe
popa
cwtl
andl
dec
pop
push
xor
jmp
inc
xlat
subb
fstps
enter
adc
xlat
cmp
icebp
mov
xlat
xor
sarb
xlat
outsb
sbb
lahf
xchg
push
mov
dec
pusha
xlat
fs
stc
xlat
setb
adc
int
lahf
stos
lock
xor
inc
mov
pusha
out
inc
jb
fcmovbe
dec
movsbl
icebp
scas
sub
mov
and
mov
pop
out
mov
fldenv
outsb
pop
xlat
sub
movsl
mov
xlat
lods
imul
aaa
dec
ret
push
mov
mov
inc
adc
mov
dec
sub
jg
add
int
or
push
addr16
test
scas
dec
inc
nop
sub
inc
push
cmp
sahf
test
push
fisttpl
fsubp
imul
cmc
imul
test
das
add
pusha
lahf
es
jp
push
adc
adc
test
mov
in
movsl
push
xor
fisttps
cwtl
ja
scas
dec
sbbl
adc
xchg
jno
inc
dec
dec
mov
hlt
xor
push
arpl
mov
outsb
inc
das
xorb
aas
push
push
and
pop
orb
or
jo
and
add
arpl
jle
lods
jbe
dec
xchg
push
aam
xchg
xchg
jp
mov
sub
push
not
pop
xchg
and
mov
ja
fcomps
and
jae
xchg
xor
mov
push
mov
pop
std
lret
ret
ja
mov
imul
fnstenv
sub
leave
mov
aam
ja
pop
loope
shll
icebp
dec
inc
stc
xchg
pop
jo
popa
dec
sbb
cmp
inc
ror
jp
or
and
ja
inc
dec
xchg
ja
mov
js
test
mov
test
fdivl
jl
cltd
sbb
jecxz
cmpsb
mov
popa
inc
dec
mov
call
aaa
pop
mov
cmp
arpl
imul
std
repnz
ja
push
mov
pop
roll
jbe
push
fnsave
mov
mov
lds
jo
pop
les
sub
iret
dec
popa
rclb
lds
iret
jnp
test
repz
popf
sarl
sub
xchg
sbb
or
sti
push
outsl
dec
mov
push
jecxz
repz
push
mov
xchg
push
or
mov
repz
jecxz
iret
mov
cmp
mov
gs
pop
out
lcall
push
pmulhuw
mov
add
push
adc
in
popf
iret
xchg
push
add
lods
mov
lds
rcrl
push
addl
dec
popf
fmulp
mov
hlt
pop
dec
jmp
ja
jb
popf
mov
aam
iret
cmc
mov
leave
xchg
outsl
jnp
les
rclb
rolb
jne
mov
dec
push
rorb
ja
adc
or
orl
push
xor
push
pop
sbb
push
lret
mov
xchg
xchg
or
shrb
rcl
dec
adc
push
push
push
mov
pop
push
in
mov
mov
les
aam
dec
push
outsb
inc
mov
xchg
jle
mov
cmovp
adc
arpl
popf
iret
xchg
out
xchg
push
clc
aaa
das
pop
push
jg
push
sarb
aad
in
adc
sbb
xchg
push
adc
sub
jb
sbb
xchg
ja
shll
mov
pop
mov
stos
arpl
push
aam
adc
pop
xchg
fnstenv
dec
push
xor
enter
shl
push
xchg
pop
daa
dec
jmp
popf
xchg
xchg
pop
xchg
shrl
aaa
lahf
pop
jb
sbbl
dec
push
mov
and
push
adc
push
jns
pop
mov
js
cwtl
xlat
xor
sbb
push
push
push
movsl
rclb
xor
push
sarb
adc
rclb
lret
push
adc
pop
push
mov
inc
inc
push
in
push
mov
xchg
adc
pop
aaa
push
pop
xchg
or
push
das
jns
mov
lret
push
lret
aad
or
pop
xlat
test
les
stos
xlat
out
inc
adc
pop
stos
inc
push
loope
mov
mov
xchg
mov
repz
fmulp
aas
xchg
rcl
adc
out
fistps
jb
adc
mov
push
jb
push
popa
xchg
lcall
inc
aas
in
push
movsl
bound
pop
scas
in
push
push
repz
mov
push
iret
adc
xor
ret
push
les
ficoms
mov
fcmovnbe
aaa
mov
movsl
push
add
stc
dec
rclb
push
loope
xchg
mov
sbb
roll
adc
iret
dec
push
adc
faddp
mov
push
push
test
test
and
push
xor
rclb
aam
arpl
pop
sarl
pop
push
jnp
ficoml
rcrb
pop
xchg
mov
mov
mov
mov
mov
xlat
mov
cwtl
adc
adc
sbb
in
push
mov
in
aad
nop
jecxz
jno
pop
pop
push
jno
xlat
inc
shrb
rcll
adcl
push
aas
dec
dec
lcall
mov
fwait
rcll
adc
push
dec
ficoms
push
inc
push
roll
nop
jmp
push
pop
repz
push
pop
push
aad
repz
push
pmulhw
inc
aam
pop
adc
push
jb
xchg
adc
es
mov
stos
push
cmp
xlat
jns
fcmovbe
shr
or
adc
lret
into
cld
pop
xchg
lods
roll
push
stos
cmp
loope
ficoms
xchg
test
aam
mov
pop
xchg
and
pop
push
mov
xchg
xchg
jecxz
inc
adc
div
mov
dec
lret
push
pop
xchg
push
loopne
xlat
xchg
push
and
push
gs
stos
aam
pop
push
xchg
sbb
icebp
aad
inc
stos
push
test
nop
out
push
xchg
mov
or
push
mov
dec
test
push
add
xor
xor
adc
rorl
lcall
into
shl
push
sar
cmp
push
aad
fwait
rcll
push
xchg
rolb
adc
xchg
ret
adc
idivl
dec
cmp
cmp
dec
xor
push
out
cmp
push
repz
out
pusha
enter
add
mov
data16
inc
shrb
popf
ja
int
push
pop
movsb
adc
pusha
jg
test
std
fldenv
push
push
test
push
adc
imul
jecxz
cmovno
dec
jno
xor
jbe
mov
call
ds
aaa
sub
divb
dec
ja
loop
ret
mov
repz
dec
xchg
push
dec
mov
xchg
xchg
loope
xchg
ljmp
adc
lcall
xchg
xor
adc
ror
stos
in
popf
mov
mov
test
dec
icebp
push
arpl
stos
and
icebp
adc
xor
lds
fwait
adc
insl
test
rcll
push
insl
shl
call
adc
push
mov
xchg
add
xchg
push
adc
mov
rcll
inc
push
mov
leave
cmp
aam
sbb
push
push
xor
icebp
push
rcrb
jae
push
mov
push
sub
lret
vpsrlw
xor
adc
adc
mov
mov
or
xchg
aad
mov
lret
pop
shl
rcll
inc
push
pop
push
pop
push
dec
add
pop
ret
aam
mov
inc
xchg
icebp
dec
xor
dec
std
ret
divb
int3
dec
xorb
jae
adc
ret
pop
lret
orl
xor
dec
jo
popl
pop
mov
mov
xor
push
dec
xchg
push
pop
lret
push
cwtl
dec
cmpsl
pushf
push
psrlw
and
inc
enter
xchg
mov
xchg
ficoms
mov
push
pop
iret
shlb
sarb
nop
pusha
ja
push
cmpsl
pop
dec
notb
bound
push
loope
push
adc
mov
dec
push
dec
mov
inc
push
push
push
sarl
push
sarl
adc
mov
mov
jb
jmp
push
cmp
into
push
lods
adc
xor
and
cs
jg
inc
ds
repz
repnz
mov
push
xchg
popf
jb
sahf
fidivrl
dec
mov
mov
dec
xchg
mov
mov
call
aad
shll
xchg
outsb
mov
jle
arpl
mov
adc
adc
push
addb
or
or
push
lods
push
mov
dec
push
js
shl
inc
jbe
xchg
sbb
push
push
add
rorb
xchg
xchg
shl
scas
or
xchg
mov
cmp
xchg
cs
push
xchg
push
nop
push
sbb
outsb
xchg
jo
insl
out
jnp
dec
iret
repnz
mov
pop
mov
mov
pop
aad
scas
mov
stos
pop
xor
jg
dec
lahf
jne
ja
mov
and
adc
mov
adc
mov
iret
mov
add
imul
xchg
push
xor
shll
stos
add
mov
ss
lret
ja
push
xchg
xchg
xchg
xchg
push
jns
cs
pop
dec
push
adc
in
push
push
dec
xchg
push
dec
shll
xchg
push
cmpsb
movsl
ja
mov
movsb
mov
rclb
adc
movsb
xchg
push
push
popl
xor
push
icebp
xchg
fwait
rcl
fst
sub
or
push
adc
mov
push
rcl
push
sahf
lret
cmp
xchg
xor
adc
inc
push
mov
jnp
push
pop
dec
inc
iret
mov
xlat
dec
push
jmp
push
push
mov
aad
cmp
jnp
imul
sahf
pop
mov
adc
sarb
std
jg
jo
popf
xchg
int
push
shlb
push
and
push
sbb
add
push
mov
cmp
push
in
mov
xchg
xchg
push
push
jno
gs
and
lods
fcoms
cmpsb
push
mov
jno
push
aam
xor
xchg
inc
and
and
and
stc
aaa
fistl
cmp
inc
lods
mov
lods
ficompl
sbb
scas
mov
add
adc
xchg
or
adc
adc
rcrb
stos
push
or
xchg
push
push
stos
rclb
adc
inc
or
mov
sub
fs
lods
rclw
out
adc
pop
xchg
adc
cs
xchg
jbe
push
add
les
int3
lods
das
int3
rol
lods
fidivs
into
inc
lods
adc
inc
stos
pop
mov
aas
adcl
mov
mov
shrb
in
push
icebp
int3
jnp
pop
aad
out
leave
fisubl
int
test
mov
popf
mov
pop
mov
in
mov
pop
pop
test
and
dec
sub
lea
jmp
cmpsb
into
mov
xor
mov
popf
into
shll
push
inc
jne
dec
xchg
rorb
mov
lods
inc
inc
push
aad
xor
dec
add
xchg
aam
popf
shl
shl
push
ljmp
jmp
aad
lods
sbb
stos
lods
pop
push
jp
jg
add
iret
mov
dec
cmc
lahf
jae
addr16
pop
stos
pop
and
pop
and
ja,pt
and
mov
and
push
push
dec
push
rcrb
pop
cmp
pop
rorl
repz
xchg
in
jnp
pop
lcall
sbb
dec
cmpsl
aad
fnstenv
cmc
jbe
xlat
fisttpll
fmul
xchg
push
sahf
inc
push
leave
mov
mov
dec
enter
pop
xlat
push
dec
push
adc
sub
push
and
push
sub
inc
xor
rcll
aam
fwait
dec
hlt
xor
into
push
sbb
sbb
jge
fmull
xchg
ja
sbb
dec
push
jge
mov
not
fwait
xor
mov
ja
cmp
popf
push
sub
xlat
push
push
jge
adc
or
lods
dec
xchg
push
aam
mov
aam
adc
leave
pop
iret
in
popf
push
lcall
cltd
lods
xor
xor
addl
jnp
mov
inc
jo
icebp
push
mov
iret
sarl
stos
push
andl
test
push
mov
lods
xchg
mov
shl
icebp
xchg
jo
in
sub
adc
jno
dec
shll
dec
shll
mov
ret
xchg
loopne
lods
in
cmp
dec
push
loopne
mov
loopne
push
push
lock
jne
adc
mov
dec
mov
js
dec
mov
js
pushf
push
movsl
push
dec
popf
notb
pop
adc
push
sub
rorl
fldcw
rcrb
add
fnsave
xor
shlb
in
push
xor
enter
leave
sub
push
dec
aad
cs
es
aas
lea
push
adc
xchg
mov
xchg
cmovnp
jg
xor
push
shlb
into
xchg
mov
mov
aaa
mov
mov
addr16
sbb
mov
insl
xchg
jno
push
mov
jle
mov
push
cld
inc
repnz
fs
out
scas
xchg
jbe
movb
std
mov
mov
sahf
je
mov
cmc
xchg
in
dec
es
pop
mov
in
fldl
aaa
adcb
ror
cwtl
xchg
pandn
inc
mov
cmpsb
leave
mov
iret
mov
out
mov
inc
push
mov
xchg
rcr
shl
inc
roll
fidivrl
lea
pop
xchg
dec
test
ja
cmp
xchg
push
fldenv
pop
push
leave
test
xor
imull
inc
pop
xor
adc
add
es
clc
xor
sahf
push
shrb
xchg
jae
clc
xor
inc
arpl
insb
push
push
push
cmp
fsubs
out
push
fstpl
xchg
dec
push
cmc
dec
and
sbbl
cmpb
inc
test
lcall
stc
cltd
sti
add
enter
jp
loopne
xchg
dec
xlat
aad
push
push
ja
cmc
test
pop
pop
inc
aad
xlat
push
jae
icebp
repz
pop
pop
rclb
push
jbe
div
mov
pop
pop
rcl
push
xlat
push
jb
repnz
mov
pop
pop
fcmovu
xchg
xchg
push
xlat
adc
jns
xlat
lcall
xchg
adc
adc
mov
xor
jge
xlat
sti
fwait
popf
sbb
nop
pop
xlat
adc
js
xlat
clc
sahf
cwtl
pop
sbb
mov
xor
cld
lcall
xlat
inc
addr16
in
iret
leave
dec
xlat
dec
outsl
imul
xlat
inc
arpl
jecxz
int
xlat
dec
imul
mov
xlat
inc
pushaw
out
into
enter
outsb
push
inc
xlat
inc
bound
lret
xlat
dec
push
ljmp
cmpsl
mov
push
xlat
or
test
xlat
add
movsl
and
lea
xlat
or
lods
sub
addb
add
mov
xlat
or
test
xlat
add
mov
sub
xor
mov
sub
mov
xchg
push
jb
ja
leave
push
mov
fwait
xchg
pop
clc
dec
fidivs
adcb
ja
rorl
popf
push
and
xchg
mov
ja
aaa
push
xorps
inc
popf
iret
inc
iret
and
or
mov
pop
xor
pop
rorb
inc
mov
push
jg
ja
popf
outsl
popf
iret
or
dec
inc
inc
xlat
cmpsl
xchg
outsl
outsl
addr16
pop
or
jne
jno
mov
je
jo
testb
hlt
mov
cmc
mov
inc
repz
xchg
dec
ret
mov
rol
ret
mov
xchg
inc
dec
inc
movb
inc
mov
inc
mov
xchg
xchg
movb
inc
test
add
add
add
mov
xchg
cmpsl
dec
mov
cmpsb
mov
xchg
daa
dec
and
and
and
mov
xchg
addr16
arpl
gs
mov
fs
xchg
out
loop
in
loopne
mov
inc
jecxz
out
iret
dec
lret
int
leave
into
mov
inc
int3
mov
xchg
dec
dec
dec
dec
mov
dec
mov
dec
mov
xchg
dec
mov
lea
inc
mov
or
or
or
mov
xchg
scas
dec
stos
lods
mov
scas
mov
xchg
das
dec
sub
sub
sub
mov
xchg
outsl
dec
imul
mov
outsb
mov
insb
mov
xchg
out
dec
ljmp
jmp
test
roll
iret
xchg
cmp
xchg
dec
cmp
ds
xchg
dec
cmp
cmp
xchg
dec
cmp
jg
xchg
dec
jnp
mov
xchg
dec
jns
mov
xchg
dec
jp
mov
dec
js
mov
pop
xchg
dec
cli
xor
cld
pop
xchg
dec
clc
xor
std
pop
xchg
dec
stc
xor
sti
pop
xchg
dec
pushl
lahf
pop
xchg
dec
fwait
xor
popf
pop
xchg
dec
cltd
xor
sahf
pop
xchg
dec
lcall
cwtl
xor
pop
pop
xchg
dec
sbb
sbb
xor
push
pop
xchg
dec
sbb
sbb
xchg
dec
sbb
pop
pop
xchg
dec
pop
xor
pop
pop
xchg
dec
pop
xor
pop
pop
xchg
dec
pop
xor
pop
pop
xchg
dec
pop
xor
ficomps
xchg
dec
fidivl
fcompl
xchg
dec
fdivs
fstpl
xchg
dec
fnstenv
fistpl
xchg
dec
fbstp
mov
mov
xchg
aam
push
push
mov
push
mov
xchg
xchg
dec
pop
adc
mov
mov
mov
mov
aaa
xor
mov
mov
xchg
mov
enter
cmpsb
andl
mov
xchg
inc
dec
xchg
pop
mov
daa
mov
out
iret
xchg
dec
dec
pop
bswap
das
dec
outsl
out
mov
aas
mov
mov
xchg
pop
stos
testl
cmpsl
mov
push
xchg
mov
mov
inc
pop
fisttpll
shlb
mov
pop
mov
cvttps2dq
idiv
pop
mov
fistl
add
mov
ret
iret
dec
testb
aas
mov
daa
pop
dec
pop
inc
pop
fisttpll
out
inc
testb
mov
cwtl
xchg
aas
xchg
jae
loope
mov
mov
jnp
jo
loope
test
and
inc
push
aam
push
and
inc
rorb
push
push
xor
cmpsl
or
mov
inc
xor
jne
shll
inc
push
and
mov
or
imull
push
shll
fsubrl
jl
adc
loopne
push
xchg
outsl
mov
mov
sub
fidivrs
adc
mov
std
xchg
mov
mov
mov
mov
lods
iret
mov
js
push
mov
out
jbe
mov
outsl
inc
jo
hlt
jo
dec
xchg
int
int3
lret
lods
leave
fstp
aad
mov
xchg
mov
mov
ja
push
inc
pop
mov
xchg
push
dec
aad
aam
adc
sbb
rcl
dec
push
xchg
push
sbb
cwtl
push
rorb
adc
mov
or
dec
rcrb
or
or
add
mov
inc
cmp
clc
ret
ficoms
nop
shrl
push
inc
and
mov
xchg
mov
inc
movsl
std
xchg
push
inc
movsl
and
rclb
dec
iret
cmpsl
enter
stos
shlb
mov
divb
mov
stc
jl
cltd
xchg
cmp
cmp
push
mov
xchg
nop
push
and
xor
pop
popf
cltd
xchg
movsl
rcll
or
and
xor
into
out
popf
adc
lcall
xchg
aad
pop
dec
xchg
add
push
popf
popa
adc
push
aam
push
xchg
push
pop
pop
popf
dec
adc
popf
cmp
mov
or
pop
xchg
in
push
pop
xchg
lock
aam
push
xor
aaa
ss
shll
andb
adc
pop
popf
popf
adc
xchg
lock
xor
push
int3
jae
push
les
lock
mov
sbb
shlb
dec
jl
ret
adc
xchg
mov
push
inc
push
mov
movsl
pushf
pop
lock
jne
sub
and
in
xlat
scas
and
mov
lods
sub
xchg
ficoml
aam
push
xchg
mov
mov
fcompl
dec
pop
push
mov
dec
pop
pop
adc
shll
rcl
repz
mov
xchg
or
dec
int3
fwait
xor
rclb
push
dec
dec
hlt
push
adc
dec
push
in
shlb
stos
mov
mov
inc
push
inc
fs
pop
popf
sub
jecxz
call
jno
push
xor
xchg
adc
adc
mov
inc
and
sahf
shlb
mov
add
add
aad
and
in
rcl
rclb
push
push
push
xlat
push
push
push
xchg
xchg
xchg
xchg
xchg
xlat
xchg
xchg
nop
pop
adc
adc
mov
mov
mov
mov
mov
xor
xor
ja
jne
jbe
jb
jo
repnz
lock
xlat
icebp
repz
xlat
ret
inc
inc
inc
inc
inc
xlat
inc
inc
inc
xchg
addb
xlat
add
cmpsl
mov
mov
and
and
arpl
data16
bound
loop
loopne
xlat
loope
out
lret
int
into
xlat
lret
dec
dec
dec
dec
dec
xlat
dec
dec
dec
mov
mov
push
xlat
or
scas
stos
lods
test
test
sub
sub
outsl
imul
xlat
push
push
in
xlat
jmp
mov
mov
cmp
xlat
cmp
jg
jge
jle
jp
js
cli
cld
clc
std
xlat
stc
sti
lcall
xlat
lcall
push
xlat
sbb
pop
pop
pop
pop
pop
xlat
pop
pop
pop
fcmovnbe
xor
rcll
xlat
push
push
aam
rclb
xlat
push
push
mov
mov
aaa
xor
mov
mov
xor
xor
xchg
xchg
xchg
xchg
pop
adc
xchg
xchg
nop
push
adc
adc
ja
jae
div
xlat
bnd
jb
cmc
repz
icebp
test
dec
xlat
dec
dec
into
int3
lret
dec
xlat
dec
dec
scas
lods
stos
test
sub
sub
sub
lea
or
mov
or
outsl
insl
imul
xlat
ljmp
jmp
jmp
roll
inc
inc
mov
rolb
inc
inc
cmpsl
movsl
mov
and
cmpsb
movsb
mov
and
jp
addl
xchg
add
arpl
in
loopne
bound
jecxz
out
mov
cmp
mov
cmp
xlat
lahf
popf
fwait
cltd
pop
sbb
pushf
lcall
jg
jnp
cld
cli
clc
xlat
jle
jp
std
sti
stc
call
pop
pop
pop
pop
fcmovu
iret
pop
pop
pop
pop
fstp
xlat
push
xlat
push
aad
aam
rcll
rclb
push
rclb
dec
sub
dec
lret
sub
dec
scas
inc
movb
adc
inc
ret
roll
mov
mov
cmp
mov
xlat
mov
mov
mov
mov
xlat
mov
mov
scas
das
scas
xlat
lods
sub
stos
sub
test
daa
cmpsb
xlat
movsl
and
mov
mov
push
xlat
popf
sbb
lcall
xchg
pop
xchg
push
xlat
xchg
adc
xchg
adc
xchg
adc
push
xlat
lea
mov
xlat
mov
mov
xchg
xchg
xlat
test
addb
addl
jle
xlat
jge
jl
jnp
jp
xlat
jns
js
ja
jbe
xlat
jne
je
jae
jb
xlat
jno
jo
outsl
out
outsb
in
xlat
insl
in
insb
jmp
ljmp
out
addr16
in
gs
jecxz
loop
loope
popa
loopne
out
ficomps
xlat
pop
fcompl
ficompl
scas
pop
fcomps
push
and
mov
mov
aad
xchg
aad
push
aad
push
cmp
xor
push
mov
mov
xchg
popf
outsl
ljmp
push
adc
int
xor
mov
push
jne
mov
push
mov
pushf
sbb
test
xchg
xchg
mov
into
adc
xchg
cmp
push
mov
jne
push
xchg
into
lea
inc
popf
lds
cmc
das
lea
jmp
inc
gs
xor
cwtl
push
cld
push
clc
jmp
sbb
push
repz
and
inc
cmc
inc
xchg
push
xor
pop
xchg
xchg
dec
mov
mov
fbld
mov
test
fs
movsl
lods
leave
insl
enter
push
mov
dec
or
sub
xchg
pop
je
jg
sub
mov
and
mov
pop
xlat
push
dec
inc
sub
jb
outsb
hlt
fstpl
imul
inc
pop
movsb
mov
push
imul
xor
adc
addr16
push
lahf
sbb
int3
addr16
add
mov
nop
pop
xor
mov
inc
xchg
clc
addr16
lock
out
rcl
or
jle
and
jecxz
outsb
adc
cwtl
dec
out
fsts
push
sbb
xlat
push
test
xlat
int
mov
xor
pop
js
mov
insb
dec
sub
cltd
stos
cmp
mov
rcll
or
out
jo
lods
xlat
sbbl
aaa
or
mov
xlat
leave
xchg
imul
push
mov
int
mov
ret
mov
mov
out
stos
outsl
inc
jl
sub
je,pn
inc
xlat
lds
mov
clc
aad
icebp
in
mov
hlt
fsubrs
lock
pop
push
or
rcl
sbb
fldcw
xor
into
mov
or
add
stos
imul
adc
rol
xchg
xchg
xchg
scas
inc
or
mov
jg
xlat
fwait
repz
pop
dec
jne
adc
leave
in
outsb
movsb
and
push
int
and
dec
clc
iret
xlat
icebp
inc
adc
mov
and
fidivrl
xor
nop
ret
lahf
adc
or
mov
xlat
pop
adc
stc
outsl
test
push
and
je
dec
iret
hlt
lahf
mov
aas
int3
nop
notb
push
imulb
push
stos
iret
xlat
leave
xor
sub
mov
mov
inc
xlat
adcb
jnp
xchg
or
xlat
fsubr
call
das
jmp
xlat
cmp
jne
call
popa
outsb
push
xlat
jnp
mov
xor
stos
fadds
mov
dec
mov
scas
xor
cmp
xlat
movsl
xchg
pushf
push
adc
xlat
add
mov
test
mov
xchg
call
push
int
sahf
push
sarb
mov
sub
aad
xor
popa
addr16
in
adc
push
mov
rcll
xor
in
cmp
std
hlt
jmp
add
mov
cmp
add
or
xor
popf
sub
das
xlat
cmpsb
clc
mov
daa
lock
xlat
jg
mov
in
test
pop
repz
mov
fbld
cmp
loop
jmp
mov
pop
push
inc
mov
xlat
iret
out
shll
sbb
lods
rorl
je
cwtl
sarl
xor
xlat
sarb
mov
jno
call
or
pop
mul
arpl
aam
aam
mov
cmp
mov
adc
iret
inc
inc
fcomps
pushf
stc
sbb
sbb
cmpsl
sub
jge
inc
xchg
xlat
add
adc
xchg
and
mov
mov
sub
arpl
loope
movsl
xlat
jae
int3
jns
mov
inc
pop
scas
rclb
mov
or
mov
lahf
loope
add
inc
add
test
hlt
lcall
push
sub
iret
or
loopne
push
adc
jo
mov
cmp
cmpsl
jo
xlat
addr16
pushf
lahf
inc
aas
sbb
test
sub
add
rcl
jle
sti
push
and
cli
arpl
outsl
loope
test
sbb
repz
fdivr
jg
xor
mov
adc
call
add
imul
cmpsb
or
enter
mov
mov
test
xlat
cmp
iret
dec
inc
loop
lods
pop
mov
adc
mov
int3
adc
rolb
sbb
cmp
mov
lcall
popf
mov
in
test
lock
jg
aad
std
ficoms
push
cmp
loop
loopne
fistpl
popf
mov
sub
testb
add
adcl
scas
es
sbb
cmpsl
sbb
mov
or
cmp
rorl
xchg
in
xor
xchg
loope
jg
lret
mov
imul
or
sbb
scas
les
dec
fnsaves
mov
xor
push
or
outsb
jg
orb
dec
lcall
shl
rcll
push
and
push
lods
fimull
dec
cli
data16
xchg
aas
aam
mov
data16
xchg
dec
push
add
adc
xchg
xchg
fwait
add
fwait
testl
adcl
or
xchg
dec
je
adc
movsl
inc
mov
xor
bound
xchg
fwait
sub
push
jb
lcall
push
notb
mov
xchg
xchg
mov
pop
mov
push
pop
lcall
adc
iret
lcall
pop
test
jl
xchg
out
mov
and
stos
xchg
aaa
pop
fidivs
or
retw
add
popf
and
sub
pushf
insl
xchg
dec
mov
aad
rorb
xchg
rcll
aad
push
pop
mov
pop
jo
sbb
mov
shrb
icebp
lret
sarl
xchg
rclb
push
mov
adc
mov
sub
cmp
pop
xchg
nop
mov
ds
or
add
scas
xchg
push
lea
adcb
mov
xchg
mov
push
xchg
adc
out
xchg
test
xor
cmp
inc
mov
mov
mov
add
repz
lret
cmp
inc
int
and
xchg
jae
xchg
xchg
mov
test
push
push
dec
fimuls
adc
dec
push
inc
sub
xchg
or
stos
addl
bound
mov
push
adcb
aaa
lods
push
test
int3
xor
push
inc
rcrb
testl
push
xchg
sub
pop
mov
xchg
jle
mov
jne
into
divl
std
bswap
jno
fs
rorl
pop
je
adc
jns
scas
mov
inc
push
xor
mov
hlt
sub
mov
je
xchg
inc
add
push
ss
lret
sahf
rorl
mov
pushf
jae
rcrl
fwait
sub
cmp
xchg
xchg
lcall
int3
push
inc
xchg
lcall
pop
nop
lcall
dec
das
xchg
insb
xchg
xchg
lods
mov
andl
loop
lret
iret
push
xor
xchg
inc
push
daa
xchg
int3
mov
unpcklps
jge
inc
jp
sbb
mov
lcall
and
xchg
insb
xchg
dec
lahf
add
nop
insb
fstl
jne
mov
inc
bound
jbe
jbe
push
orb
mov
out
sbb
dec
mov
xchg
std
dec
je
leave
mov
adc
dec
aad
rorl
mov
clc
xchg
rcll
adc
xor
or
dec
cwtl
mov
in
jnp
jp
push
mov
sbb
movb
rol
push
movsl
push
xchg
jb
pop
mul
xchg
into
hlt
xchg
push
sbb
xchg
jno
into
test
loope
push
push
push
jg
mov
sbb
adc
pop
ror
xchg
rcl
push
mov
adc
xlat
mov
inc
js
push
outsb
loope
jno
dec
iret
es
imul
sub
xchg
pop
sub
mov
inc
dec
movsb
test
mov
mov
push
iret
adc
aad
push
enter
xor
mov
jb
cs
pop
lods
daa
cltd
push
rcll
adc
lea
xor
and
stc
cld
mov
fwait
mov
leave
xchg
lods
je
xchg
lock
push
cmp
cmp
aam
mov
push
out
mov
pushf
aaa
xchg
lea
cmpsb
cmc
xchg
enter
addr16
push
sbb
push
pop
icebp
mov
or
push
pop
adc
pop
inc
ficoms
mull
fwait
mov
push
add
lods
xlat
mov
jbe
mov
lds
adc
jp
ror
mov
cld
int
sti
jns
jno
dec
das
fwait
test
pop
push
inc
sub
pop
and
mov
sub
or
inc
xchg
popf
xchg
inc
xchg
or
xchg
aad
push
dec
ficoms
cmpb
dec
pop
inc
pop
test
or
inc
push
fs
adc
lock
dec
rcl
lock
in
xor
adc
int
adc
pop
je
inc
sub
sarl
ss
mov
cmp
ja
icebp
sbbb
insl
inc
mov
movsl
fnstenv
sahf
outsl
pop
cmp
stc
push
jmp
mov
popf
lods
sub
fwait
xchg
mov
pop
rclb
pop
dec
mov
cmp
je
or
pop
push
gs
clc
rolb
dec
xor
aaa
lods
inc
lret
push
pop
data16
div
dec
insl
mov
push
iret
sub
inc
scas
adc
push
shlb
fdivl
push
shlb
inc
jo
aad
cmp
sub
and
pop
mov
push
scas
in
mov
xor
inc
imul
push
movzwl
std
mov
repnz
lods
adc
pop
pop
insl
mov
mov
nop
jo
aam
or
xchg
testb
xchg
mov
test
iret
pop
rclb
aad
nop
inc
push
fwait
out
int
mov
or
pop
push
mov
stc
xchg
push
pop
sbb
pop
cmc
pop
push
jge
mov
fcmovbe
xchg
cmp
sub
or
xchg
repz
xor
scas
lods
shl
addr16
xchg
adc
call
push
in
fistl
dec
lret
dec
shrb
and
iret
mov
and
pop
dec
push
sbb
mov
insb
roll
repz
push
pop
adc
xchg
enter
jle
xchg
shl
out
ljmp
push
adc
out
ror
stos
mov
inc
clc
mov
pop
push
hlt
or
inc
mov
cmp
pop
dec
xchg
jae
inc
inc
add
xchg
iret
push
shl
and
inc
adc
aad
testl
int3
aad
iret
adc
cmp
mov
push
adc
rorb
xor
sbb
testl
or
ss
pop
mov
mov
xor
pop
adc
xor
addr16
push
dec
fcompl
xor
or
mov
push
dec
push
aad
adc
xchg
ror
mov
ror
xchg
shll
enter
jbe
int
push
loope
lds
fsubrl
mov
xchg
aad
mov
add
and
push
mov
xchg
push
addl
fimuls
cmp
push
daa
inc
lods
and
call
hlt
mov
ja
sub
rorl
jb
dec
inc
aad
es
fimull
xor
jo
into
pop
test
test
into
mov
jne
shl
xchg
or
int3
cmp
arpl
into
test
lret
xchg
dec
fdivl
rclb
mov
jae
lret
repnz
and
pushf
mov
and
shll
lret
fsubr
adc
rclb
pusha
add
das
or
lods
popf
push
sub
and
sahf
hlt
aad
adc
cltd
mov
lcall
rcl
xchg
in
and
and
lcall
xlat
xchg
sbbb
adc
mov
jl
cmp
sbb
je
sbb
aas
lret
xor
lds
jge
add
cwtl
xchg
lods
push
jge
imulb
xor
mov
mov
dec
jae
int
cli
add
mov
jecxz
adc
mov
mov
mul
jmp
pop
push
dec
nop
lret
push
fidivs
push
push
cmc
push
aam
dec
hlt
test
cmp
xor
cmpsl
push
movsl
shll
jns
adc
scas
pop
xor
lods
test
ret
mov
push
push
pop
mov
or
ljmp
push
xchg
shrl
stos
cmp
imul
or
stos
fs
jo
xchg
or
ja
xchg
movsb
adc
add
bound
lock
dec
lods
out
lahf
div
xchg
or
mov
mov
sbb
movsl
lods
movsb
xchg
inc
iret
pushf
xchg
mov
aad
pop
jno
insb
dec
mov
sub
mov
or
adc
test
xor
xchg
mov
jmp
dec
test
xchg
jmp
inc
mov
mov
or
push
pop
in
push
mov
mov
dec
clc
in
scas
jp
xchg
inc
movsb
in
push
dec
adc
dec
scas
in
test
adc
das
leave
xor
cmp
fdivrl
xor
nop
fwait
push
shll
xchg
hlt
mov
cmp
dec
xchg
jl
nop
inc
dec
and
add
sub
mov
and
xchg
jo
daa
sub
inc
sub
scas
push
jge
or
xor
mov
pop
xchg
xor
faddl
std
jg
mov
movsl
adc
mov
adc
rcll
dec
push
ljmp
shr
xchg
xchg
mov
xchg
jne
adc
jge
das
sar
push
or
popf
ljmp
push
shr
pop
push
adc
popl
cmp
shll
mov
dec
jbe
jge
push
xchg
push
xchg
sahf
cltd
push
aam
mov
pop
jnp
repz
xchg
mov
pop
xchg
adc
jno
cld
je
sti
daa
dec
fwait
mov
push
mov
dec
sub
inc
rsqrtps
cmp
jne
into
jle
lock
xchg
int
and
mov
movsl
push
test
rorl
or
xchg
aad
les
test
mov
movsl
add
xchg
mov
mov
pop
mov
xor
xchg
jle
call
lcall
data16
pop
inc
mov
data16
adc
sub
in
mov
inc
int
xchg
xchg
mov
push
hlt
xchg
loope
and
cmp
lods
jb
into
inc
dec
xor
inc
push
xchg
mov
xchg
repz
xor
je
sub
jge
mov
lods
test
xor
addr16
fstl
xchg
adc
ja
popf
outsb
push
pop
or
movsb
hlt
jle
xchg
xchg
pop
xchg
mov
jb
push
aas
xchg
push
cmp
leave
mov
cwtl
rorl
push
ja
adc
push
mov
adc
mov
dec
ds
aam
dec
push
mov
adc
inc
or
xor
push
aaa
xchg
xchg
decl
clc
push
leave
loope
mov
inc
jbe
jg
xchg
adc
or
adc
shrb
jnp
inc
call
aaa
push
mov
lods
out
jge
jno
pop
cmpsb
mov
stos
xchg
push
lahf
and
mov
mov
mov
fisttps
pop
push
movsb
or
jno
arpl
jmp
jae
rcll
mov
pop
movsb
xor
push
pop
mulb
xor
xchg
push
movsl
arpl
xchg
jge
xchg
test
cs
inc
mov
cli
jb
dec
adc
or
ret
adc
inc
fcmovnb
mov
pop
and
jb
cmp
xchg
mov
mov
xor
inc
add
mov
imul
mov
push
aad
xor
push
jae
popa
into
rolb
sbb
mov
dec
dec
push
push
mov
push
mov
inc
push
mov
xchg
cs
in
aad
mov
outsb
push
adcl
jae
mov
inc
dec
icebp
mov
xchg
shrl
adc
jne
into
push
mov
xchg
jge
push
push
adc
mov
insl
push
push
push
mov
jae
sub
dec
aad
popf
aad
ret
inc
loopne
sub
push
das
out
movsb
daa
mov
movsl
aad
nop
mov
mov
or
dec
sub
pop
shufps
add
mov
cmpsb
xchg
push
leave
mov
push
xor
xchg
add
xor
scas
pop
push
push
push
pop
xchg
rcll
jge
fimuls
xchg
pop
dec
pop
pop
push
insl
mov
or
xchg
and
jnp
aad
pop
test
mov
ljmp
and
and
lret
es
push
mov
or
dec
aaa
push
push
stos
jno
adc
data16
xchg
imul
lods
mov
cmp
xchg
dec
add
mov
or
xor
dec
into
decl
mov
push
pop
ds
and
mov
fcomip
scas
inc
ss
dec
int3
xchg
inc
xchg
sarb
lea
mov
push
in
imul
xchg
scas
pop
jbe
hlt
and
xchg
mov
cli
inc
leave
lea
lcall
xchg
lods
or
push
inc
pop
sub
pop
fwait
xor
insl
gs
xor
jb
pop
xchg
mov
ljmp
cmp
mov
lret
sub
xor
push
aaa
lock
sbb
and
jecxz
cmp
push
add
pop
lret
into
aas
nop
jbe
aad
insb
les
push
bnd
fwait
push
aad
inc
pushf
or
addl
push
sub
sar
push
xchg
xchg
cmp
cwtl
notl
inc
mov
aas
sub
xchg
mov
jno
mov
lcall
aas
mov
mov
movsl
sahf
adc
dec
test
push
lret
dec
dec
push
cld
mov
push
movsb
mov
dec
pushf
imul
push
adc
adc
adc
or
inc
mov
pop
adc
lods
fst
jno
or
xor
jle
sbb
add
mov
test
scas
inc
cmpsl
cs
ja
hlt
cmpsl
mov
inc
dec
dec
ja
fs
rcrl
int3
notb
cmp
inc
jae
cmp
xor
and
sub
push
push
dec
cmpsb
push
xchg
cli
ljmp
mov
dec
cs
ja
jecxz
rcr
inc
inc
dec
mov
inc
adc
push
call
stos
aaa
mov
pop
repnz
daa
mov
aam
mov
test
push
aas
loope
hlt
or
out
pop
leave
int
adc
imul
or
fisttps
ds
es
lahf
movsb
int3
sub
xor
scas
pcmpgtb
jbe
push
notb
testl
push
sahf
pop
add
rclb
ret
cltd
das
jae
lods
push
and
aaa
cmp
dec
mov
push
ret
xchg
aam
push
ja
mov
xor
and
push
mov
mov
rolb
xchg
jbe
stos
xchg
inc
pop
xor
mov
ss
imul
pop
lea
stos
imulb
mov
cmc
xchg
mov
fwait
aaa
ss
jecxz
jle
xchg
or
xor
push
inc
push
push
mov
jne
mov
sbbl
mov
cltd
dec
shlb
cmpsl
imul
fcoml
cltd
mov
xor
cmp
int
and
hlt
ja
mov
push
xchg
fwait
xchg
stos
lret
push
retw
fwait
xchg
dec
mov
mov
cltd
mov
scas
cmp
insb
cmc
lock
ss
mov
lret
adc
rcrb
cmp
int
lret
adc
out
xchg
mov
js
xor
push
jg
loope
mov
test
and
lret
rcll
lods
mov
lds
mov
push
mov
push
cmc
shrb
mov
jg
dec
aam
adc
xchg
cmpsl
mov
fmull
cmc
xor
cmc
outsl
ss
cs
xchg
xchg
aaa
mov
mov
xchg
cmp
xchg
cmc
int
mov
push
xchg
mov
ror
pop
mov
xchg
rcrb
testb
mov
lret
mov
mov
jne
pop
vpmaddwd
cmp
xor
insl
sub
lret
ss
inc
shlb
mov
fadd
nop
lods
push
repnz
sub
and
popf
pop
xor
pop
insl
int
xchg
inc
es
inc
push
pop
inc
outsb
push
mov
pop
into
add
mov
or
xchg
pop
rcll
xchg
push
fs
xor
xrelease
repnz
movsb
dec
je
sbb
stos
push
pop
inc
mov
push
cwtl
pop
xor
mov
or
adc
xor
sahf
inc
or
xchg
cmp
or
movsb
adc
pop
inc
mov
popf
aam
dec
push
adc
loop
cmp
into
mov
inc
scas
stos
jbe
push
cli
arpl
test
or
mov
push
mov
lret
jo
scas
xchg
mov
pop
inc
cs
adc
fsubl
lds
fstpt
dec
pop
lds
inc
das
push
push
cwtl
das
push
fstl
fidivl
cmp
imul
sub
cmp
aam
int3
jbe
movsb
roll
add
scas
dec
test
mov
sarw
and
mov
fs
add
mov
lods
into
mov
les
push
and
mov
call
inc
jmp
cmpsl
push
sti
shl
iret
ss
int
out
in
int3
mov
in
hlt
add
sbb
mov
or
lahf
xchg
push
push
fst
fcmovnb
rcll
in
fisttps
ret
adc
xchg
in
fmull
dec
dec
movsb
jb
jno
fcoms
das
insb
pop
mov
ficoms
jg
les
xchg
frstor
ret
icebp
cmp
adc
xchg
mov
push
es
call
dec
inc
repz
jle
mov
mov
movsl
push
sub
xchg
shll
dec
push
cmp
xchg
jo
shll
cwtl
sbb
inc
clc
push
aaa
js
push
jae
dec
cmp
and
bswap
js
scas
inc
xor
test
push
xchg
jo
pushf
xor
jo
loope
movb
xor
ja
push
push
ja
cmpsl
setg
xchg
sarl
mov
scas
mov
cs
movsb
push
out
xchg
push
lahf
adc
mov
into
cltd
test
pop
gs
cld
mov
adc
out
lods
mov
pop
xchg
scas
pop
outsb
push
push
lret
leave
je
scas
mov
mov
out
sbb
add
adc
mov
xchg
dec
push
cltd
mov
jo
cmp
add
lret
daa
test
adc
jl
inc
test
or
or
fwait
mov
je
sub
mov
lret
aaa
add
jne
fisubl
jl
mov
push
sahf
cmp
fisubl
jns
daa
push
ss
ret
mov
mov
mov
mov
rorl
cmp
ljmp
pusha
push
xor
inc
and
add
push
and
rcll
pop
iret
aad
adc
inc
fld
jnp
xchg
jp
push
adc
xor
dec
add
fcmovbe
mov
sbb
dec
int3
aad
push
bound
aas
ja
pop
push
nop
or
movsb
pop
mov
push
data16
xchg
xchg
mov
ret
push
sarl
lret
bound
inc
jle
cwtd
aas
clc
out
repz
push
adc
daa
fidivrs
ja
out
mov
dec
pop
int
popa
mov
jne
pop
loopne
enter
or
aam
push
lcall
rcl
sub
test
mov
in
imul
ja
xchg
mov
rol
je
clc
xchg
dec
imul
cli
dec
pop
shll
mov
inc
pmulhw
aad
aas
cld
jle
push
pop
push
rclb
mov
xchg
xchg
rcl
test
jmp
inc
push
push
lds
scas
inc
or
push
aam
push
icebp
mov
ljmp
shlb
lds
push
scas
push
cmpsl
fbstp
push
int
test
pop
push
xchg
popf
xchg
out
iret
mov
iret
jle
xor
mov
mov
scas
jecxz
cmpsl
inc
lahf
ficoms
testl
pop
xchg
outsl
jecxz
addr16
pop
ficoms
out
and
push
inc
idivl
fwait
mov
das
or
pop
xchg
pop
jecxz
pop
inc
pmaxub
idiv
xchg
push
jge
push
and
xor
pop
popa
push
test
into
mov
scas
pop
xchg
cmpsl
jecxz
and
dec
jne
push
stc
adc
repz
daa
enter
xchg
add
add
pop
xchg
sub
cwtl
push
movsb
rorl
iret
inc
shlb
and
xchg
push
rorl
jns
adcl
mov
adc
and
push
mov
mov
aaa
aam
pop
xchg
xor
adc
mov
jmp
mov
or
aam
popf
pop
rcll
fidivl
push
xchg
mov
and
dec
xchg
or
mov
aad
or
mov
or
adc
mov
andb
xchg
mov
shlb
adcl
mov
rolb
scas
mov
inc
aaa
xchg
ljmp
push
jp
mov
aad
adc
inc
shl
lret
mov
jne
adc
adc
sbb
adc
nop
pop
shlb
push
push
adc
jb
rcll
cmc
lret
mov
insl
aaa
jp
rorb
push
lds
xchg
xchg
notl
rcll
xchg
std
push
jle
adc
push
mov
aaa
in
hlt
pop
adc
push
shlb
adc
mov
or
xchg
in
jne
jne
push
jne
aad
push
mov
pop
xchg
mov
bound
adc
out
jne
mov
mov
push
inc
push
push
aam
or
adc
dec
adc
and
lret
mov
insl
aaa
pusha
ficoml
xchg
pop
sbb
scas
jne
inc
aaa
push
fcmovbe
push
push
notl
dec
adc
rcll
xchg
push
shlb
push
push
or
aaa
add
mov
push
cmp
rorl
xlat
dec
push
push
adc
mov
aaa
xor
adc
rcr
aad
adc
inc
shrb
mov
jmp
jne
dec
xchg
aaa
push
lcall
push
dec
cmc
lret
jne
insl
aaa
mov
dec
loopne
push
shlb
push
adc
dec
nop
adc
push
shlb
aaa
xchg
push
jo
movsl
inc
enter
aad
adc
movzwl
shlb
dec
rcll
cmpsl
and
jle
aaa
inc
add
xchg
dec
adc
push
popf
cmp
mov
aaa
icebp
cmp
xchg
aam
scas
mov
inc
aaa
aad
push
dec
adc
push
pop
shlb
xchg
xchg
adc
nop
int
addr16
mov
decl
xchg
shl
push
in
xor
shlb
xchg
push
or
rclb
mov
push
aaa
adcl
mov
sub
in
in
data16
xchg
repz
aad
xchg
jge
xchg
xchg
adc
push
inc
aaa
aad
adc
cmpb
xchg
jne
xchg
aaa
pop
aam
in
inc
push
sub
xchg
and
mov
pop
pop
imul
repz
mov
push
orl
xchg
cld
push
aad
adc
not
int
adc
sub
shlb
push
sbb
xchg
dec
iret
dec
ss
aam
aad
aaa
mov
mov
push
dec
je
adc
fadds
in
aas
rcrb
fs
jle
push
jno
xchg
stos
xchg
into
push
or
add
xchg
adc
repnz
aad
pushf
xlat
mov
xchg
sbb
imul
cmp
rclb
push
adc
xchg
jmp
mov
or
xchg
gs
xchg
shl
popf
adc
pop
xchg
or
std
push
inc
push
ljmp
mov
aaa
push
aaa
pop
push
sbb
xlat
into
or
imul
mov
or
add
xchg
add
mov
or
push
inc
dec
xchg
adc
add
aad
adc
aaa
repz
icebp
xchg
and
rclb
xor
adc
adc
adc
cmp
shl
loop
push
mov
pop
xchg
or
jae
mov
xchg
aaa
push
jne
aam
ficoml
xchg
push
xchg
stc
stc
push
dec
sar
push
aad
push
mov
push
push
push
loop
xchg
dec
push
pop
rorl
icebp
push
xchg
orl
xlat
dec
icebp
out
push
loop
aaa
aaa
xchg
ficoml
cld
icebp
jl
jle
push
xchg
mov
shlb
adc
fcmovu
xlat
ds
xchg
stos
sbb
mov
push
xlat
jne
jmp
xor
repz
popf
jmp
aaa
cmp
ficoml
mov
jmp
insb
xchg
mov
or
adc
mov
jmp
cmc
adc
mov
dec
aad
cmpsb
xchg
rclb
jne
pop
pop
shl
xlat
int
or
inc
es
lret
mov
jne
push
lcall
popf
adc
inc
xchg
fnstenv
std
push
inc
push
fldenv
xchg
fnstenv
pushf
rorl
and
adc
push
rep
push
lret
lods
shll
push
ret
xchg
lret
jne
jne
adc
insb
pop
rcl
in
mov
pop
inc
clc
adc
xor
push
xchg
or
xchg
xchg
add
push
lret
nop
into
lret
ljmp
mov
adc
adc
lret
pushf
aam
xchg
lea
cld
push
aad
push
mov
inc
push
fimuls
push
dec
adc
adc
xor
ret
push
ret
aad
mov
push
rorl
aam
aaa
push
gs
xchg
push
jecxz
rclb
mov
or
shlb
xchg
push
mov
in
xchg
mov
aaa
lods
push
std
push
aas
aad
add
adcl
popf
xchg
rclb
fimuls
xchg
dec
push
inc
ficoml
dec
shll
xchg
std
push
adc
lds
cmc
lret
mov
jne
rorl
cmp
xor
xchg
ds
xchg
stos
push
xchg
mov
xchg
aaa
pop
push
cmp
test
inc
xchg
and
mov
xchg
mov
adc
mov
push
rcll
adc
dec
xchg
test
aaa
les
aam
push
push
mov
push
aaa
xor
push
mov
jmp
mov
or
xchg
pop
push
xchg
xchg
jecxz
mov
rcll
cmc
lret
mov
jne
adc
repz
jo
xchg
dec
cmpsl
in
xchg
dec
push
jge
jbe
lahf
inc
shll
adc
xor
cmp
mov
push
shlb
shlb
adc
lds
lret
cmc
push
insl
aaa
fnsave
lock
rcrl
hlt
push
lods
test
push
inc
push
mov
push
push
hlt
mov
push
rol
xchg
and
fs
ja
jge
xchg
inc
or
in
lds
dec
pop
xchg
adc
arpl
sub
aam
inc
push
push
push
roll
push
push
rolb
push
inc
shl
push
nop
movsl
xchg
push
xchg
mov
rcrb
nop
icebp
popf
mov
lret
adc
push
mov
jmp
xchg
movsl
adc
cli
jge
rclb
movsl
mov
or
dec
nop
icebp
aad
popf
xchg
iret
mov
jge
mov
mov
mov
mov
repz
not
mov
popf
jae
xchg
push
mov
push
mov
nop
imul
ficoms
or
inc
xchg
enter
iret
mov
cld
push
adc
rcll
xchg
jnp
xor
movsb
cli
push
dec
xchg
loop
jbe
push
xchg
jno
adc
push
push
jns
xchg
and
enter
sub
sub
ljmp
sub
adcl
adc
dec
mov
xor
xchg
push
dec
push
xchg
gs
mov
cmp
xchg
xchg
xchg
push
test
jbe
push
movsl
imul
adc
adc
inc
out
rorb
aaa
mov
iret
inc
xchg
dec
lahf
dec
in
adcl
shll
push
push
xchg
adc
iret
mov
popa
fs
push
lea
adc
popa
cmc
xchg
vrsqrtps
inc
adc
adc
xchg
loopne
push
and
or
fstpt
xchg
aaa
seta
push
xchg
movb
iret
lods
out
pop
cmc
mov
fwait
xchg
xchg
pop
cltd
aam
hlt
into
roll
push
mov
fwait
das
xchg
xchg
icebp
rcrb
shrl
shlb
pop
mov
fs
or
aad
push
inc
xchg
pop
mov
xchg
stos
aaa
xlat
imul
xchg
push
push
cltd
xchg
xchg
hlt
into
aam
hlt
into
rcll
cmpl
das
push
xchg
icebp
shll
mov
lea
icebp
jge
xchg
mov
cmp
aad
sbb
aad
mov
adc
pop
aas
aaa
adc
out
in
xlat
pop
aad
aad
ret
adc
mov
jecxz
lods
mov
xor
icebp
vrsqrtps
inc
inc
cmc
les
xlat
dec
inc
adc
jne
xchg
jb
fwait
dec
adc
push
mov
adc
dec
xchg
icebp
push
fwait
dec
push
icebp
push
fwait
dec
adc
push
fwait
dec
shl
push
fwait
dec
nop
icebp
push
arpl
xchg
push
bound
scas
gs
xchg
xchg
push
push
aaa
lcall
gs
std
push
movb
adc
je
adc
stc
xchg
aaa
push
push
adcl
push
push
jne
adc
push
mov
xor
push
sub
gs
into
movsb
push
rcll
sarl
push
xchg
xor
push
inc
push
push
xchg
push
pop
cltd
pop
xchg
dec
sar
xchg
push
mov
inc
iret
push
and
aaa
push
xchg
inc
push
push
dec
push
xchg
mov
mov
adc
shll
xchg
push
sbb
xchg
nop
loop
movsl
adc
mov
push
enter
push
mov
mov
imul
aaa
mov
push
ret
dec
je
jno
dec
scas
mov
inc
cmpsl
mov
xchg
lahf
dec
add
xchg
mov
mov
inc
xchg
inc
ja
dec
lret
outsl
inc
addr16
divb
inc
push
mov
xchg
movsl
dec
inc
xor
aaa
inc
push
mov
xchg
jecxz
daa
jae
pop
add
setne
dec
pop
mov
incb
testb
out
xchg
pusha
dec
out
divl
xlat
inc
adc
push
inc
dec
adc
shl
push
push
inc
push
or
dec
push
cld
sahf
xlat
mov
mov
dec
ret
push
rorb
dec
jno
dec
add
dec
nop
rorb
push
mov
jae
inc
jae
jae
data16
cmc
jae
rorb
dec
movsb
rorb
dec
ret
rorb
dec
loop
dec
jb
dec
add
dec
xchg
rorb
dec
mov
dec
inc
rolb
rcrl
xchg
cltd
xchg
scas
xchg
movsl
mov
cmp
lock
xor
test
add
push
xchg
xchg
push
xchg
in
adc
mov
jmp
mov
sysenter
adc
rorl
mov
outsb
inc
rcl
xchg
icebp
push
jge
arpl
mov
push
adc
nop
pop
push
xlat
pop
aad
aaa
sub
xchg
sub
adc
xchg
push
dec
mov
stos
xchg
dec
adc
push
fwait
xchg
int
rolb
movsl
xchg
inc
push
push
mov
pop
xchg
out
or
dec
shl
push
jle
xchg
leave
add
or
push
mov
xchg
adc
push
call
cltd
decb
jne
cmp
mov
adc
cmp
out
data16
cltd
mov
adc
xor
adc
or
pop
inc
ja
add
addr16
pop
mov
mov
xchg
mov
xchg
cmp
cli
mov
mov
ljmp
xchg
rcll
add
movsl
call
sahf
xlat
inc
cmpsl
sbb
pop
testb
xchg
enter
aad
mov
mov
xlat
in
xchg
lods
mov
fisttpl
fwait
dec
pop
pop
dec
ds
xchg
loopne
sbb
test
xchg
jle
push
dec
adc
inc
pop
or
push
ret
push
jg
mov
fs
adc
ds
pop
int
les
jne
lods
mov
xchg
sti
dec
xchg
mov
adc
inc
adc
adc
push
adc
adc
hlt
das
rcll
adc
aaa
mov
mov
inc
mov
pop
aaa
pop
iret
push
daa
arpl
mov
push
adc
or
adc
xchg
shll
xchg
orl
cmc
cld
push
xlat
pop
aad
push
adc
adc
and
xchg
xchg
push
loopne
push
mov
enter
add
push
xchg
dec
xchg
icebp
adc
jbe
adc
roll
rcrl
dec
xchg
aad
cmp
mov
fmuls
shl
cld
repnz
inc
cs
push
inc
push
push
dec
aad
dec
adc
push
orl
hlt
xchg
enter
les
pop
aaa
push
push
xchg
adc
repnz
xchg
cld
ds
mov
stc
mov
mov
mov
aaa
inc
xchg
xchg
mov
rcll
mov
xor
out
push
jne
xchg
mov
test
std
mov
mov
pop
test
push
adc
adc
les
fisttps
adc
mov
rcrb
jb
bound
popf
xchg
mov
jo
ja
adc
push
pop
decb
cmpsb
aas
cmp
dec
push
jb
hlt
in
rol
adc
xchg
dec
aam
iret
jl
aam
and
mov
xchg
les
test
aaa
rclb
roll
push
push
rolb
push
adc
test
push
out
into
push
in
xchg
sub
aam
stc
das
mov
adc
push
mov
loop
mov
cltd
push
mov
adc
pop
xchg
mov
cmc
adc
push
xlat
pop
aam
push
in
xchg
jle
xchg
or
addl
seta
mov
aad
lcall
faddl
out
popa
mov
pop
aad
xchg
mov
in
mov
jae
shrb
rcll
lock
and
aam
xchg
nop
mov
shl
into
adc
fwait
dec
xchg
xchg
shl
vpsllw
pop
dec
mov
pop
lods
xchg
mov
nop
mov
mov
rclb
in
lock
lods
adc
or
rcll
inc
aam
adc
movsl
mov
aam
pop
hlt
mov
mov
into
push
gs
popl
loopne
lret
push
jl
mov
mov
push
adc
xchg
shlb
ror
jmp
push
push
imul
pop
mov
fs
aad
xchg
xchg
das
push
idivl
xlat
imul
push
cmc
push
shrl
lods
push
inc
push
or
adc
and
out
dec
and
stos
xchg
dec
xchg
icebp
push
mov
popf
push
mov
adc
mov
mov
cmp
adc
push
jo
jg
xor
cmp
push
adc
pop
push
clc
jnp
xchg
ds
xchg
push
adc
dec
push
push
pop
dec
dec
pop
icebp
daa
jae
cltd
dec
je
pop
inc
dec
pop
call
nop
movsl
cmc
cmp
push
dec
mov
mov
fidivs
cs
aad
mov
mov
int3
mov
je
mov
mov
imul
mov
loop
mov
adc
jae
jno
adc
jae
shlb
jae
adc
mov
mov
dec
addr16
mov
mov
scas
dec
pop
cmpsb
mov
sahf
mov
xchg
mov
movb
inc
jbe
repz
outsb
dec
fwait
data16
pop
mov
inc
push
mov
xchg
dec
dec
cmp
dec
jnp
pop
push
push
mov
push
cmc
popf
adc
adc
cmp
out
mov
xchg
cltd
mov
lods
xchg
cltd
cmp
cltd
pop
xchg
cltd
jmp
cltd
jnp
cltd
or
sub
dec
xchg
cltd
fcoms
call
lcall
nop
dec
push
movsb
pop
std
dec
pop
movsl
dec
pop
dec
dec
pop
hlt
dec
pop
pushf
pop
arpl
mov
fwait
mov
mov
rcl
mov
cmp
mov
xlat
dec
push
jb
arpl
loopne
push
pushf
cwtl
xlat
dec
dec
adc
pushf
dec
xchg
jb
fwait
dec
xchg
icebp
push
fwait
dec
push
icebp
push
fwait
dec
adc
push
fwait
dec
shl
push
fwait
xchg
xchg
inc
lock
mov
mov
mov
mov
lock
cli
push
out
mov
hlt
jbe
cltd
pushf
xchg
cltd
inc
xchg
cltd
jmp
cltd
xchg
xchg
cltd
cmp
mov
fsts
sub
js
push
and
iret
inc
mov
cmc
pop
inc
adc
and
adc
push
and
adc
gs
jbe
aam
cmp
rorl
mov
xor
pop
pop
rolb
adc
push
rorl
jb
mov
mov
xor
jg
jne
dec
jle
rol
dec
rclb
shlb
and
push
push
rcrb
or
out
rolb
xchg
jl
and
mov
lret
push
jae
pop
sbb
cmc
push
rclb
mov
pop
adc
mov
xchg
push
xchg
inc
xchg
sub
popf
pop
adcl
xchg
push
mov
cmc
xchg
imul
adc
push
adc
popa
xchg
and
dec
push
xchg
adc
push
inc
xchg
shlb
adc
push
xchg
inc
push
push
adc
popf
aam
shll
loopne
xchg
dec
xchg
icebp
push
cmp
loopne
push
je
push
mov
test
test
sbb
push
je
xchg
cmc
adc
adcl
cwtl
xlat
mov
adc
mov
jbe
push
push
lods
push
inc
rclb
push
mov
nop
icebp
stos
xchg
xchg
push
adc
mov
popf
aam
mov
adc
push
jb
xorl
adc
es
mov
shll
adc
shrd
adc
into
add
xlat
arpl
rorb
stos
mov
cmp
mov
shll
push
mov
jae
or
dec
push
aaa
cltd
into
adc
jae
fmul
dec
iret
dec
adc
cmc
shll
or
sahf
xor
mov
ret
mov
push
mov
mov
xchg
push
push
rclb
hlt
mov
mov
aam
out
push
rcl
movsl
add
notb
adc
mulb
push
sbb
nop
dec
adc
push
stos
test
jle
mov
jmp
pop
jle
dec
jle
cmpsl
xchg
xchg
lcall
jne
dec
jg
aam
in
xchg
fs
mov
jmp
xlat
add
lods
push
adc
push
das
push
jbe
push
push
mov
mov
imull
shll
inc
cs
push
rolb
push
push
roll
push
push
rolb
push
adc
xchg
and
test
mov
in
enter
aam
xchg
cmc
push
push
lods
shll
adc
mov
inc
xchg
and
xchg
shll
adc
dec
nop
lds
mov
push
loop
adc
insl
push
mov
mov
ds
xlat
dec
push
jb
arpl
push
xor
xchg
push
dec
push
xchg
mov
push
icebp
push
mov
dec
push
adc
or
dec
rcl
dec
xchg
mov
xorl
aam
roll
and
push
xchg
push
ret
or
data16
dec
sub
xchg
xchg
rorl
xchg
outsb
pop
push
mov
xchg
cmp
clc
stc
xor
lahf
inc
push
adc
push
ljmp
cltd
xchg
mov
jl
xchg
inc
xchg
rclb
nop
jg
inc
adc
xchg
xchg
xor
or
aam
aad
cmp
nop
and
cmp
lds
lcall
lods
xchg
dec
rcr
movsl
or
iret
movsl
or
xchg
rcrb
push
mov
lret
or
pop
ret
xchg
ljmp
nop
adc
sub
adc
sub
scas
mov
movlhps
shl
les
dec
inc
dec
mov
dec
push
rorb
and
pushf
cmp
cltd
pop
xchg
cltd
jmp
cltd
jnp
cltd
or
xlat
cmp
fs
dec
sarl
xchg
aas
push
push
shrb
mov
inc
js
push
out
sahf
pushf
xlat
das
mov
xor
xlat
movsl
xchg
inc
push
push
mov
push
hlt
pop
push
xchg
adc
xchg
rcl
xchg
lods
jnp
jae
dec
jle
xlat
pop
push
adcl
xchg
movsl
mov
push
and
std
repnz
adc
jno
dec
adc
cmp
stos
xchg
das
rclb
adc
popf
push
into
adc
out
dec
push
notb
arpl
push
jbe
adc
adc
cmpsl
inc
xchg
push
xor
mov
push
xchg
cmpsl
and
xchg
mov
mov
mov
dec
push
xchg
adc
mov
xchg
xchg
cmp
push
dec
je
add
xchg
mov
cmpsl
fs
cmp
add
nop
mov
popf
xlat
mov
fdecstp
xlat
imul
mov
in
int3
enter
jbe
xchg
imul
pop
push
lret
xchg
adc
roll
xor
pop
adc
in
xlat
pop
push
xchg
push
ror
cmp
loopne
push
adc
xlat
rcrl
jb
cld
adc
xlat
or
push
dec
add
or
push
sarl
rcll
sti
dec
jl
xchg
rorb
dec
or
dec
lret
push
cmp
xor
loop
mov
sub
test
das
push
push
clc
xchg
orl
jg
cltd
daa
xchg
cltd
into
xchg
cltd
jbe
cltd
push
mov
adc
arpl
jecxz
mov
xchg
push
dec
rcll
push
loopne
adc
lods
ffreep
mov
xchg
aad
mov
mov
xchg
adc
xchg
cmp
pop
push
adcl
or
xchg
push
mov
xchg
shl
sbb
lret
xor
stos
xchg
icebp
mov
xlat
imul
push
pop
push
lret
iret
cld
rcrb
xorl
mov
cli
mov
test
or
cmp
mov
adc
ja
push
push
jge
mov
jae
pop
sub
xlat
imul
repz
adc
mov
dec
adc
xchg
xchg
mov
aam
xchg
adc
popf
adc
push
arpl
xchg
and
xchg
push
lods
adc
shl
push
mov
jge
mov
or
lods
mov
xlat
dec
push
jb
add
adc
xchg
xchg
push
push
aaa
adc
loop
xlat
cltd
sarl
push
xchg
jne
push
mov
mov
push
xor
jns
dec
push
adc
push
cmp
aad
nop
xchg
adcl
test
shrb
push
cmc
xchg
movsl
pop
rclb
inc
push
push
dec
push
xchg
xchg
push
xchg
adc
xchg
shlb
lods
rol
iret
jns
push
movsl
roll
push
nop
out
popa
mov
pop
push
movsl
fcomi
xchg
insl
adc
inc
mov
rorb
push
push
fs
xchg
dec
xchg
xchg
cmp
cmpsb
mov
adc
lcall
arpl
push
xchg
adc
popf
xchg
mov
imul
push
xchg
rorb
or
mov
fs
push
sarl
push
andl
push
mov
rcrb
dec
push
push
ss
xchg
dec
jae
rorb
mov
sarl
adc
adc
adc
les
rorl
add
jle
push
adc
xlat
mov
mov
adc
fwait
dec
push
icebp
aad
lret
mov
aam
or
cmc
popf
lds
mov
aas
fs
mov
shll
xchg
mov
pop
push
out
or
xchg
adc
test
dec
xchg
xchg
shlb
push
xor
pushf
pop
xchg
test
xchg
aad
jmp
cmc
ja
nop
push
mov
push
adc
sub
dec
push
rcll
push
aaa
aad
pop
xchg
inc
in
xlat
pop
push
xchg
push
mov
sbb
xlat
imul
sarb
test
push
and
dec
and
mov
cmp
jo
sbb
mov
pop
xorl
xchg
inc
push
cmc
push
inc
xchg
cmc
push
insl
push
pop
aad
cwtl
mov
fs
aam
nop
rclb
xchg
mov
xchg
adc
lods
adc
nop
xchg
or
popf
sarl
sbbl
daa
adc
mov
push
movsl
cmc
decb
mov
xchg
cmc
mov
inc
dec
in
xchg
popf
xchg
mov
mov
xor
add
mov
shll
xlat
mov
adc
mov
repnz
imul
inc
xchg
jle
push
cmc
and
push
mov
pop
fs
aam
xchg
jl
push
mov
push
xchg
dec
push
push
xlat
pop
push
adc
xchg
icebp
test
jbe
shrb
nop
inc
shl
mov
mov
dec
aad
push
arpl
popf
mov
sti
or
inc
sub
xchg
scas
mov
rcrl
inc
or
aad
xchg
or
shll
shrb
shl
cmp
insl
aad
push
xchg
movsl
xchg
inc
xchg
fisttpll
jge
xlat
inc
push
inc
push
cmc
xchg
adc
mov
repnz
jb
adc
rolb
aaa
mov
inc
push
push
push
adc
push
push
jo
rcrl
adc
fwait
mov
pop
into
aaa
mov
pop
into
xchg
mov
pop
into
cmc
pop
xchg
lock
mov
mov
mov
mov
mov
fs
xchg
mov
adc
popf
test
idivb
push
adc
and
jbe
divb
aam
xchg
mov
iret
push
or
adc
push
pop
js
xchg
adc
neg
shlb
lea
xlat
inc
out
xchg
cmc
mov
and
xchg
push
and
xchg
pop
mov
fwait
or
jge
push
std
imul
mov
xchg
push
rclb
push
out
dec
rorb
push
rorl
out
mov
xchg
xchg
out
adc
fisttpl
inc
mov
jae
mulb
mov
dec
adc
sahf
adc
xchg
dec
cmp
xchg
fdivp
cmp
fidivrs
xchg
push
fiadds
adc
push
jbe
mov
push
push
das
push
push
icebp
icebp
lcall
xchg
xor
xchg
into
mov
xchg
pop
into
adc
mov
adc
push
inc
rcrb
push
ss
xchg
push
dec
xchg
xchg
mov
subl
and
mov
jge
mov
mov
adcl
cmc
push
imul
push
inc
adc
mov
sbbl
arpl
aas
xchg
test
adc
dec
daa
xchg
adc
jne
iret
mov
sbb
lret
push
rolb
sub
repnz
inc
adc
rcrl
xor
dec
rclb
push
mov
cwtl
mov
mov
xchg
mov
pop
into
jbe
push
pop
into
aad
adc
mov
rorb
aaa
pop
iret
adc
mov
adc
ja
push
mov
xor
iret
mov
and
or
ja
sub
ljmp
xlat
inc
cs
push
xchg
inc
rcrb
push
lock
xchg
push
push
push
sbb
rcll
push
push
pop
inc
aad
push
jbe
xchg
push
push
aad
push
push
push
xor
xchg
inc
rcrb
dec
repz
div
pop
push
rcll
lods
push
ficoml
push
push
jae
xlat
inc
cs
dec
mov
iret
jb
rorb
inc
or
rclb
xor
adc
mov
xchg
mov
movsl
push
inc
imull
mov
fnstcw
xchg
mov
xchg
movsl
xchg
inc
imul
mov
mov
fs
mov
pop
inc
pop
xchg
dec
xchg
mov
sbb
daa
mov
hlt
xchg
sti
fwait
dec
xchg
xchg
adc
dec
push
inc
nop
into
cmc
jo
mov
repnz
xchg
push
mov
cmc
push
movsl
xchg
xchg
mov
xchg
mov
outsb
pusha
lods
adc
push
xchg
icebp
lock
test
xlat
mov
push
mov
jo
dec
xchg
push
push
subl
out
jle
inc
and
fs
push
arpl
enter
shlb
insb
push
push
adc
adc
nop
xchg
loopne
adc
jbe
je
push
and
gs
cmp
xchg
adc
jbe
adc
fwait
push
push
jbe
dec
xchg
aaa
push
in
push
rcl
dec
xor
cltd
or
test
lock
mov
pop
lret
add
push
push
movsl
outsb
enter
xchg
mov
mov
push
rclb
aam
shl
aam
xchg
dec
nop
icebp
xor
mov
push
gs
rcr
data16
mov
pop
nop
xlat
shlb
fstl
jb
jle
xchg
mov
sub
adc
shll
xchg
pop
mov
pop
push
push
and
mov
push
adc
xchg
aam
rclb
push
pop
xchg
outsl
int3
dec
shl
push
fwait
adc
push
imul
xchg
adc
xchg
push
jo
xchg
push
mov
into
xchg
mov
pop
into
aaa
mov
pop
mov
movsl
dec
shl
cmp
test
aam
push
push
jb
stos
xchg
dec
aam
repz
dec
xchg
icebp
push
fwait
dec
push
icebp
mov
mov
adc
pop
adc
ret
es
xchg
dec
push
lds
call
jmp
adc
push
cld
mov
mov
xchg
notb
mov
ret
not
or
adc
dec
rolb
adc
ds
mov
mov
dec
aaa
xchg
out
les
loop
lods
cmp
ds
push
out
xchg
mov
pop
push
dec
nop
ds
adc
inc
push
ss
mov
aad
pop
push
push
out
xchg
adc
xchg
adc
cmp
or
mov
cmc
fwait
dec
nop
icebp
push
fwait
xchg
push
cs
xchg
mov
push
inc
repz
iret
aaa
mov
inc
xchg
push
dec
repnz
mov
icebp
icebp
mov
xchg
mov
mov
jle
lock
add
das
adc
es
and
hlt
jb
or
es
ret
into
xchg
loop
popf
mov
adc
xchg
push
out
rcll
mov
push
gs
xlat
mov
adc
xor
stos
dec
mov
push
xchg
xchg
xchg
in
mov
inc
xchg
fdivp
in
popf
ja
pop
dec
add
mov
lcall
mov
mov
push
nop
aaa
xchg
xchg
adc
out
into
test
xchg
dec
xchg
rcl
push
xchg
aaa
cmp
xchg
xchg
xchg
or
xchg
cmc
mov
test
push
mov
pop
push
adc
ja
aaa
jge
xlat
dec
push
loopne
out
adc
arpl
sarb
push
out
xchg
push
test
cltd
rclb
xchg
fildl
cmpsb
mov
push
imul
mov
inc
mov
adc
mov
cmp
pop
sub
push
les
aad
out
into
dec
jno
inc
push
pop
jnp
dec
or
push
mov
mov
xlat
jmp
or
and
push
out
mov
xlat
sub
int3
push
in
inc
xlat
pop
pop
or
mov
jle
xchg
movsl
dec
lret
cltd
adc
add
jl
mov
scas
ja
cmp
movsb
ret
xlat
push
push
dec
push
pop
ficoms
aaa
sub
inc
pop
cwtl
ret
mov
pusha
out
xlat
pop
inc
fwait
roll
jle
xor
sub
sti
mov
xlat
jecxz
test
inc
cld
daa
sbb
dec
and
es
xlat
inc
sbb
loop
xchg
in
xlat
pop
mov
test
mov
dec
adc
data16
xor
js
and
sbb
xlat
les
xchg
adc
pop
mov
iret
xchg
mov
aas
xchg
sbb
mov
adc
sbb
and
out
lods
xlat
dec
adc
push
fnstsw
out
mov
cmp
and
inc
cli
test
pop
jl
sarl
xlat
pop
call
imul
aam
lea
gs
sub
sarl
jp
popf
push
vunpckhps
and
xlat
test
nop
cmp
in
mov
push
pushf
ljmp
stos
aaa
test
jmp
xlat
test
push
xlat
aad
mov
mov
sbb
push
imulb
fnsave
stc
jbe
mov
jp
adc
insl
fs
loop
popf
push
int
int3
bswap
cmpsl
dec
aaa
xchg
mov
test
push
pmuludq
jo
scas
incb
jns
dec
cmpsb
fsub
dec
addr16
ror
xchg
cld
lss
adc
push
dec
fs
daa
adc
aam
lds
test
neg
mov
push
jno
icebp
xchg
mov
lock
mov
hlt
xchg
pop
dec
cmpsb
es
test
xor
orl
mov
mov
mov
in
xchg
pop
dec
push
mov
xor
repz
xchg
ret
shll
dec
xchg
in
or
xchg
hlt
push
mov
repnz
xchg
inc
dec
mov
addr16
pop
dec
cmpsb
movb
push
mov
add
jae
loop
inc
dec
rol
inc
mov
cmpsl
xchg
adc
and
jno
add
movb
dec
in
adc
addl
mov
xor
movb
adc
xchg
popl
dec
movsl
and
jecxz
jae
add
jno
shlb
adc
gs
daa
mov
xchg
es
xchg
xor
repz
adc
mov
out
push
pop
or
and
xchg
arpl
bound
das
jle
mov
movsl
ret
xchg
rorl
in
mov
mov
inc
xchg
mov
mov
push
dec
mov
adc
inc
xor
dec
mov
addr16
adc
popa
inc
and
mov
adc
xchg
adc
mov
xchg
dec
ja
out
pusha
mov
inc
mov
inc
mov
xor
push
mov
push
mov
inc
inc
mov
xchg
addr16
incb
add
inc
and
mov
xor
mov
push
aad
fcomi
daa
or
jo
stos
mov
xlat
rorl
pop
dec
pop
or
inc
aaa
mov
xchg
ja
aas
movb
mov
iret
lret
mov
inc
xchg
fwait
xor
movsb
test
inc
scas
jg
pop
fnsave
push
repnz
mov
add
inc
adc
dec
repnz
jb
add
mov
in
inc
or
mov
and
mov
and
mov
fadd
mov
mov
xchg
imul
dec
and
icebp
mov
loop
jae
add
les
ss
addr16
and
inc
xchg
mov
xchg
orb
arpl
inc
test
aaa
mov
inc
cmp
loope
inc
inc
mov
dec
add
je
add
xchg
aaa
add
and
mov
inc
inc
mov
inc
xchg
les
xchg
mov
mov
xchg
xchg
jo
dec
lock
push
mov
push
mov
inc
arpl
movsb
and
inc
out
addr16
inc
push
mov
popa
mov
inc
xchg
mov
xchg
mov
inc
movsb
mov
shlb
popl
test
mov
xchg
inc
dec
mov
enter
inc
lret
mov
xchg
jb
and
repz
add
mov
add
dec
adc
inc
pop
dec
xor
xchg
orl
ret
mov
inc
mov
hlt
xor
push
mov
lea
dec
aam
xor
mov
cmpsb
inc
dec
movsb
out
orb
push
imul
xor
xchg
dec
jb
repnz
loopne
popa
mov
setb
dec
xchg
xchg
popl
xchg
pop
dec
push
aad
ret
scas
je
dec
popl
push
ret
popa
mov
xor
mov
and
xchg
scas
or
jl
lea
rorl
out
das
ret
mov
xor
push
int3
mov
xchg
popa
dec
icebp
ds
mov
inc
orb
xchg
aaa
ret
xchg
inc
ret
repz
sarb
clc
aas
js
xor
pop
mul
xor
int
dec
sbb
xlat
andl
inc
push
imul
imul
add
aad
sbb
mov
cmc
mov
loopne
adc
and
ja
imul
add
inc
push
sbb
andl
dec
out
shrl
ret
or
hlt
inc
ljmp
test
xchg
mov
aad
push
ljmp
pop
nop
cmp
xchg
xlat
mov
cwtl
std
fistps
inc
int
xor
inc
xchg
xchg
lds
xchg
xchg
mov
sbb
in
inc
das
cmp
push
fisubs
and
or
cmp
mov
xlat
mov
outsl
test
push
inc
sbb
xlat
fldcw
xchg
push
fcoml
adc
cmp
xor
pop
mov
dec
int
mov
push
mov
sahf
xchg
das
and
repnz
jle
ret
adc
cs
add
popa
xor
xlat
ds
fcomi
imulb
shl
nop
shld
faddp
aad
inc
aam
mov
sub
mov
xlat
xor
fstl
mov
iret
sub
lahf
shr
lods
xlat
mov
lods
pop
adc
hlt
jecxz
xlat
dec
jmp
imulb
jmp
mov
orl
cwtl
rcll
sbb
mov
push
fstpl
aam
xlat
adc
mov
notl
xchg
xlat
dec
test
add
adc
aaa
xchg
pop
inc
icebp
xlat
andb
pop
and
aaa
xchg
mov
arpl
lahf
mov
xlat
out
sbb
lock
xlat
push
leave
mov
hlt
stos
push
xlat
push
pop
mov
jno
inc
xchg
jbe
pop
dec
sbb
out
leave
adc
aas
push
pop
cld
xlat
ret
movsl
ror
cltd
lcall
sub
out
sbb
push
adc
mov
cs
repz
rol
xlat
push
lods
inc
cmp
and
jle
mov
xlat
or
fidivl
xlat
repz
push
aaa
push
xchg
xlat
xchg
nop
movsl
and
sub
xlat
call
push
inc
std
outsb
nop
addr16
cmpsl
es
xlat
test
out
cli
dec
int
outsl
ss
pop
ret
lret
sarl
ds
mov
inc
nop
push
sub
xlat
sbb
fstps
jno
addr16
rcl
mov
xlat
and
ljmp
mov
inc
cld
pushf
xchg
push
lods
cmp
add
in
mov
adc
int3
insl
mov
ljmp
mov
imul
mov
inc
cmp
xchg
loopne
mov
pop
xchg
mov
xlat
or
pop
mov
stos
sbb
adc
int
pop
pop
adc
in
fildll
fwait
shll
mov
test
pop
add
pushf
ja
fst
pop
cmp
jo
xlat
into
sbb
dec
lods
iret
imul
adc
xlat
ds
cmp
cs
sbb
iret
test
cmp
rol
inc
adc
xlat
js
jmp
fcmove
cmp
xlat
out
or
sbb
add
pusha
inc
jb
and
cwtl
xlat
sbb
iret
jns
dec
jmp
cmpb
mov
mov
jg
pop
sbb
cmp
xchg
push
xor
jmp
sbb
inc
xlat
xlat
or
lret
pop
popf
lahf
ret
popa
push
jne
inc
xlat
repz
jp
push
imul
pop
jbe
hlt
jo
adc
lahf
sahf
add
sbb
rclb
cwtl
lods
push
and
mov
dec
xor
mov
mov
xlat
xchg
jl
sbb
sub
dec
int3
mov
xlat
out
cmpsl
and
pop
cli
mov
lahf
sub
lcall
shrb
and
mov
sbb
roll
or
ss
jno
add
test
and
xlat
shl
clc
js
out
mov
leave
xchg
and
xlat
inc
orl
cmpsl
in
lahf
inc
movsb
rcrb
and
sbb
das
jnp
ret
dec
imul
sbb
into
sbb
push
jae
add
jbe
stos
fs
or
rcrb
lahf
loope
call
mov
fistl
sbb
sbb
rcl
dec
mov
in
jb
test
xchg
mov
pushf
loopne
testb
imul
or
pop
mov
mov
fwait
pop
pop
andb
xlat
xchg
lods
sarl
loop
pop
pop
lcall
sbb
icebp
push
outsl
cld
jmp
cmp
push
lret
mov
xlat
out
or
cmp
add
dec
sbb
out
in
jle
mov
mov
vpsrlw
into
mov
aam
jno
push
push
mov
push
ss
ja
jecxz
mov
xlat
sub
loope
push
shlb
push
les
xlat
sbb
sbb
and
or
push
mov
ja
stos
jecxz
mov
out
add
fidivrs
jno
mov
movsl
xlat
pop
sub
les
sub
jge
adc
xlat
stos
dec
or
cmpsl
outsl
xor
ja
xchg
rcr
or
mov
push
mov
test
or
mov
pop
mov
mov
push
jecxz
leave
xor
jns
xlat
iret
inc
jne
out
mov
jb
sub
shll
sub
aas
icebp
push
data16
pop
pushl
xchg
pop
lret
ret
lret
inc
sbb
adc
popa
mov
or
stos
inc
cmp
mov
pop
mov
ret
aam
gs
sbbl
fcomip
and
mov
lcall
jge
xlat
imul
jecxz
fldenv
add
call
mov
std
adcl
add
stc
sub
iret
ds
sub
imulb
adcb
xchg
or
and
xlat
xor
fisubl
loopne
push
aad
xor
fistl
push
rcrb
mov
add
ret
sub
push
adc
xlat
cld
push
and
mov
push
sbb
clc
adc
mov
test
aam
mov
cmp
add
ja
outsl
lret
lahf
jae
and
inc
xlat
or
lahf
cld
cmpsb
push
fstps
int
mov
daa
cmp
int3
clc
and
adc
fadds
inc
shl
fistl
outsb
arpl
fmull
pop
xchg
shll
repz
daa
out
dec
movsb
mov
and
or
cmp
pop
lahf
iret
jmp
sbb
cmpsl
jno
not
jbe
clc
insb
lret
jo
pushf
mov
ds
cmp
out
xlat
sbb
enter
addr16
in
and
pop
sti
mov
mov
push
push
popf
push
mov
cmpsb
xlat
mov
outsl
lea
aam
mov
ret
dec
jmp
test
stos
addr16
sub
cmpsb
jns
pop
cmp
xchg
dec
push
push
lahf
pusha
cltd
xorl
add
xlat
jbe
dec
xorb
cld
cmp
pop
lcall
mov
sbb
push
and
push
xlat
dec
ss
and
lods
xchg
test
dec
subb
mov
jmp
mov
imul
xor
mov
jo
jecxz
testb
sub
daa
cltd
rcrb
inc
inc
sbb
sub
jmp
adc
push
mov
jecxz
repnz
xchg
adc
pop
ss
mov
sbb
dec
scas
or
aas
ds
mov
pop
xlat
cmp
dec
inc
jb
js
shl
dec
fsubrl
rcl
xor
enter
add
add
into
dec
xor
addr16
jns
mov
cmpsl
xlat
cltd
inc
fdivl
xlat
lds
push
adc
jns
inc
rcl
shlb
and
aam
mov
iret
ja
sbb
sub
xlat
out
loopne
sbb
fcomip
inc
hlt
cmp
xlat
xchg
iret
pop
jg
cmp
scas
stos
push
in
xlat
aam
lahf
xor
sub
cltd
mulb
arpl
xor
pop
xlat
push
popf
std
push
cli
sub
or
push
xchg
nop
inc
add
mov
inc
jb
lret
or
push
xlat
inc
fs
xchg
insb
fstpl
movsl
in
out
lea
xor
mov
push
nop
stos
out
pusha
inc
inc
add
xlat
movsl
loope
dec
mov
rcr
add
in
stc
cwtl
leave
push
movsb
dec
shll
ror
popl
lret
sbb
mov
iret
icebp
jns
scas
call
adc
mov
rcrl
mov
ljmp
xlat
scas
lods
push
mov
jle
xlat
mov
inc
pushf
cmp
stos
push
scas
inc
pop
popa
sbb
xlat
pop
push
les
into
xlat
cli
mov
adc
push
xchg
insl
leave
add
jmp
push
es
lret
jne
and
push
incb
xlat
testl
filds
cmp
popf
out
adcl
pop
sbb
imul
or
push
rcr
xlat
cltd
out
aad
inc
sub
and
fiaddl
xlat
lahf
test
les
or
jo
xlat
jno
cmp
ss
dec
mov
jecxz
out
lret
enter
dec
inc
sub
cmp
xor
lods
les
rclb
repnz
leave
sbb
aas
daa
xlat
imul
push
ficomps
arpl
stos
aad
jb
std
and
repnz
or
jl
scas
out
loopw
cltd
fcmovne
xlat
adc
rcrb
fsubrl
lret
int
xchg
add
xlat
jbe
pop
xor
std
in
mov
fiaddl
and
and
rcrb
cmp
dec
int
and
iret
pop
sub
add
shll
and
in
inc
mov
mov
adc
lahf
rcll
cli
daa
xlat
es
xchg
cmc
cmp
ss
pop
mov
xlat
ret
leave
cmp
iret
mov
dec
jp
sbb
xlat
adc
lahf
jnp
pop
ss
adc
dec
mov
sub
xlat
xor
loope
les
mov
mov
cs
ffree
push
mov
xlat
xchg
pop
lret
sbb
xlat
in
push
loopne
pop
in
xlat
outsb
jb
les
jne
in
dec
movsl
inc
lock
xlat
mov
push
sbb
mov
test
stos
shr
out
xlat
jg
jmp
jne
xor
iret
push
loop
int3
xlat
aaa
dec
sub
push
or
push
inc
xlat
lret
cwtl
inc
popf
mov
dec
int3
jb
and
add
es
cmp
aas
cmp
jmp
xchg
sub
xlat
add
cmc
inc
push
sbb
jecxz
xlat
lds
cld
orb
mov
sub
pop
dec
iret
clc
add
dec
mov
aad
out
pop
testb
xlat
fnstenv
sahf
jno
ja
ljmp
andl
outsl
cmp
jle
xlat
rorl
mov
addr16
push
jae
clc
std
cld
iret
les
xlat
dec
popa
js
add
and
adc
sahf
xchg
movsb
cmpsb
dec
pop
ror
andps
xchg
xor
inc
cmp
sarl
imul
out
das
lcall
push
les
lods
xlat
sar
sub
pop
jne
mov
ss
pop
icebp
mov
mov
int
xlat
mov
loope
lds
inc
mov
sbb
adc
lock
js
fiaddl
sub
aaa
mov
fsubp
les
push
gs
mov
out
aaa
cmc
mov
inc
addr16
stos
or
shlb
rclb
imul
test
icebp
push
mov
xor
xchg
aas
jbe
mov
mov
or
add
icebp
sbb
dec
gs
inc
adcl
fdivrl
in
iret
or
loopne
adc
push
insl
nop
jl
jae
xlat
mov
daa
mov
or
sarb
push
call
add
mov
hlt
in
test
sbb
xlat
test
ss
xlat
bound
sbb
push
andl
pop
call
jne
pop
int
iret
out
je,pt
sub
jnp
cmp
imul
jb
sub
pop
xor
mov
dec
rol
xor
repnz
xlat
dec
mov
xchg
scas
push
sti
xlat
jo
mov
jg
inc
outsb
test
xchg
inc
sbb
and
cmp
jns
rcrb
in
xor
out
pop
addr16
xchg
cltd
jns
push
jne
xlat
inc
xor
push
out
shlb
jo
stos
cmp
iret
into
push
movnti
shr
inc
shl
lret
adc
jb
adc
xlat
scas
in
call
jecxz
xlat
push
xchg
dec
iret
sub
sub
xlat
fcmovb
ds
aam
out
addr16
clc
in
fs
push
or
rorl
xlat
xchg
add
push
pop
or
mov
out
adc
outsl
cmc
lahf
xchg
hlt
mov
push
push
mov
push
xor
mov
divb
outsb
rcrl
xchg
test
mov
push
out
call
add
repz
aam
lret
push
mov
push
out
cmp
jp
mov
mov
jne
in
cltd
out
cmc
push
out
dec
jmp
xlat
pusha
test
xlat
in
xchg
cld
sbb
pop
outsb
xlat
jno
inc
out
jo
and
iret
std
push
pop
mov
arpl
shll
stc
xlat
jmp
push
mov
iret
outsl
push
hlt
mov
and
out
xlat
cmpl
aaa
pop
xlat
addb
or
xlat
test
jge
aam
adc
pop
mov
out
and
sub
outsl
sub
cmp
std
push
xchg
int
les
test
aam
mov
xlat
pop
dec
mov
mov
iret
and
aad
subb
inc
movsl
sarb
movups
cmp
xchg
test
add
sar
mov
cmp
fidivs
iret
xlat
push
inc
push
cli
xor
xlat
les
lods
push
and
iret
cmp
cmpsb
sbb
lods
pop
nop
xchg
in
sarl
add
loop
lahf
fisttpl
cwtl
mov
mov
inc
stos
push
add
jecxz
jb
sbb
jmp
iret
mov
sbb
mov
incb
and
mov
pop
test
sti
push
rcrb
xlat
sub
push
cld
jg
fisubl
add
xchg
sti
adc
pop
xlat
dec
xor
movsb
ror
xlat
js
sub
pop
adc
ljmp
mov
add
and
inc
lahf
stos
aad
js
push
data16
mov
scas
ja
jnp
lock
mov
negb
and
inc
cmp
flds
push
xlat
rcll
adc
xlat
or
sbb
iret
mov
cmp
adc
ss
test
sahf
fimull
xlat
pop
hlt
insl
bound
cmp
inc
clc
xlat
or
cmp
and
sbbb
xlat
mov
jg
adc
push
push
iret
cmp
cmp
loop
adc
lret
xlat
mov
mov
fistps
iret
lret
aaa
jno
pushf
daa
mov
dec
xlat
and
ret
or
adc
inc
imul
andb
iret
or
cmp
fwait
add
mov
cmpb
adc
scas
cli
xchg
mov
mov
subl
mov
jb
xor
das
aam
sub
in
pop
out
shll
sub
cwtl
iret
jo
addr16
adc
loop
lahf
repz
enter
lods
iret
ror
adc
sbb
pusha
iret
mov
xor
push
fistl
sbb
xlat
mov
pop
hlt
jmp
xlat
xchg
adc
dec
jge
test
mov
leave
cwtl
cmp
sbb
xlat
xor
or
pop
inc
vphadduwq
aas
loopne
notb
and
adc
mov
xchg
add
in
mov
sub
incl
push
rolb
inc
rcrl
out
cmc
aas
xor
mov
sahf
and
out
inc
xchg
ds
mov
jp
push
push
insl
xlat
cli
jne
daa
fcoml
outsl
std
popf
push
fs
sbb
adc
shl
cmp
push
xchg
xlat
pop
cmp
hlt
iret
push
imul
adc
insl
pop
leave
aam
xchg
rcl
fldenv
test
xlat
mov
inc
cmpsl
xchg
mov
rolb
xor
mov
jo
ds
jnp
push
clc
adcl
inc
test
mov
rcrb
pop
scas
add
xchg
les
cmpsb
icebp
xor
push
mov
ret
roll
push
loope
mov
mov
pop
ja
cmpsb
sbb
mov
scas
xchg
hlt
and
ja
sub
arpl
push
repnz
dec
sarb
in
mov
push
xlat
xchg
out
loop
pop
daa
scas
popf
inc
adc
cwtl
repnz
add
xchg
push
leave
xlat
sbb
dec
iret
jle
sbb
and
add
mov
jnp
std
mov
push
not
hlt
pop
xchg
jmp
push
jge
sub
inc
sub
data16
xlat
and
int3
lds
iret
pop
rorl
or
dec
scas
xlat
outsb
int3
js
sub
sub
arpl
inc
and
mov
xlat
sbb
sti
lret
gs
mov
pop
repz
dec
adc
mov
xor
inc
pop
outsb
repz
popf
imul
notb
xchg
mov
fistpl
pop
scas
or
push
push
scas
das
push
std
xor
jecxz
push
xchg
adc
imul
sub
xor
mov
xlat
jg
jo
pop
adc
jle
cmp
dec
ret
shrl
inc
iret
push
jg
pop
mov
xlat
je
or
mov
xlat
pop
scas
pop
test
pushf
ret
not
mov
insl
sub
pop
sbb
dec
xlat
in
mov
jae
pop
cmp
dec
and
push
mov
xchg
cwtl
popf
xchg
xchg
pop
xlat
ret
jae
repz
mov
out
shll
fucom
cmc
sbb
fiadds
sub
push
xlat
fistps
shl
and
out
loope
imul
or
mov
sbb
cmpsl
jne
arpl
iret
xor
mov
daa
shrl
loope
add
sub
dec
std
xlat
cli
inc
jp
ret
jge
fwait
push
std
popf
mov
enter
imul
cmpl
jmp
add
das
and
imul
push
sbb
test
push
mov
xlat
inc
jmp
cmp
adc
pop
sub
push
arpl
mov
popa
call
add
sarb
ret
push
rclb
leave
or
cmc
rclb
mov
enter
push
xor
xlat
imul
jle
lret
aas
sbb
xlat
xor
dec
ds
ficomps
movsb
adc
and
addr16
pusha
mov
or
sub
fs
push
pop
or
iret
mov
mov
xchg
mov
mov
and
aas
mov
cld
jbe
ja
mov
mov
mov
repz
rorb
add
mov
jae
dec
hlt
out
sbb
bnd
push
mov
dec
or
sti
sub
xlat
cltd
add
pop
xchg
pop
popa
xlat
hlt
mov
test
sarl
inc
xlat
mov
in
dec
xor
mov
divb
mov
xlat
fistpll
cs
fimull
pop
xlat
xor
cli
lcall
outsl
ds
mov
nop
int
std
pop
push
xchg
popa
mov
mov
nop
pusha
jl
xchg
aas
xchg
adc
dec
data16
xor
mov
push
mov
aam
addr16
xlat
jb
cmp
sahf
pop
fistl
or
pop
and
std
shlb
fcompl
push
movsb
cld
xlat
mov
push
lods
sysret
aam
lods
loope
sub
sbb
xlat
outsl
jae
rcr
inc
push
xlat
cwtl
jb
cs
fsubr
icebp
xlat
sbb
ret
mov
sub
popa
sahf
push
int3
neg
ja
js
es
rol
xchg
lcall
xlat
and
out
xlat
cmp
jl
adc
push
icebp
aad
int
shll
xlat
cli
addr16
out
clc
js
add
fwait
pop
fstl
xor
mov
rcrl
xlat
cmp
lds
adc
xlat
rorl
movsb
mov
loope
in
imul
jns
arpl
xlat
lret
scas
sbb
iret
pusha
iret
mov
cltd
adc
xlat
mov
cs
stos
lods
jo
dec
ret
sub
cmp
xlat
push
sub
cmp
leave
iret
cmpsb
out
gs
imul
sub
lock
nop
lahf
cmp
ja
adc
push
push
cmp
pop
ljmp
cmc
adc
push
xchg
xlat
repz
imul
ss
xchg
call
lahf
pop
ds
adc
mov
cmp
mov
inc
cmp
rcl
or
scas
pop
out
sub
insl
sub
pushf
negb
lods
mov
adc
push
pushf
xlat
or
jle
mov
repnz
fs
mov
xlat
push
mov
or
add
daa
xlat
jnp
xchg
pop
das
int
push
lahf
push
push
addr16
xlat
push
push
pop
mov
jnp
pop
push
xlat
add
clc
ljmp
std
js
incb
sbb
adc
in
adc
xor
loopne
sti
shrb
cs
andl
mov
add
mov
push
sahf
idiv
mov
sub
push
orb
lahf
jecxz
mov
pop
cmp
xlat
js
jae
rol
iret
xlat
add
bound
xlat
adc
cmp
sbb
xchg
xlat
add
xor
and
test
rcrb
addb
jbe
sub
mov
jmp
mov
aaa
lahf
out
mov
adc
add
add
xlat
stos
shl
push
call
addr16
inc
xlat
sbb
adc
mov
rcl
cmpsb
xchg
cmovns
mov
or
xlat
push
mov
xlat
inc
jo
mov
xlat
unpckhps
lods
jbe
fcmove
popl
out
sarb
push
xlat
xchg
mov
mov
push
rolb
or
dec
mull
mov
mov
xchg
ds
mov
push
iret
hlt
sub
lret
mov
and
or
pop
repz
daa
shrl
mov
push
cmp
and
xchg
mov
mov
xor
negb
xor
push
lock
aas
cmp
push
shlb
push
js
sahf
pop
imull
xor
xor
insl
rcrl
jne
cltd
mov
repz
addr16
sbb
add
aam
lahf
loopne
push
mov
mov
xlat
orl
insl
aaa
xchg
pop
push
shlb
gs
mov
lret
add
mov
fcom
xor
pop
sbbb
and
jg
rolb
jne
outsl
sub
movl
sarb
mov
stc
add
inc
xlat
ret
ds
lods
stos
add
push
xlat
adc
fcoms
xor
jl
jp
lahf
jne
xchg
lret
std
xlat
in
out
lcall
rorb
pop
xchg
inc
mov
cmp
adc
mov
xlat
iret
dec
int3
mov
outsl
aas
mov
outsb
and
sbb
push
add
cmpb
cmpsb
pop
push
ret
lret
adc
fidivrs
and
popa
int
mov
jl
xor
jo
iret
jnp
jp
add
stos
lahf
rep
sbb
into
xlat
aad
test
ja
mov
xchg
shl
addr16
xlat
dec
lds
sbb
cs
xlat
add
push
mov
jp
sub
adc
pop
rcl
add
xlat
add
mov
adc
and
mov
xchg
idiv
mov
xchg
jne
xlat
mov
sub
jb
mov
sub
xchg
ficoml
xlat
insb
xchg
sub
pusha
mov
iret
dec
mov
cmc
mov
xlat
hlt
in
outsb
cwtl
adc
in
bound
nop
lahf
adc
push
insl
dec
dec
popf
not
cltd
in
les
sbbb
xor
loop
xlat
sbb
fistpl
outsl
in
iret
xchg
rcl
mov
fmul
int
mov
inc
loope
push
xor
scas
std
cmpsl
imul
int3
and
cmpl
jl
jge
xlat
pop
movsl
sub
call
or
ror
dec
cs
scas
lea
rorl
push
xlat
cli
cmp
dec
out
sbbb
daa
ljmp
sarb
outsl
jle
mov
xchg
dec
roll
xlat
rcl
fistpll
xchg
jl
xor
outsb
cmp
out
pop
aad
rcl
mov
xlat
into
add
mov
iret
cltd
out
add
lcall
jb
jo
cwtl
mov
inc
pop
pushf
xchg
lret
shrl
push
je
repz
rcr
push
push
cmc
ret
roll
int
popa
add
pop
sub
cmpsl
adc
sti
enter
in
cltd
stc
shll
fsub
int3
pop
and
sbb
inc
and
lret
cmp
cmp
push
or
add
js
dec
cmc
jns
and
jno
inc
xchg
test
les
jnp
out
or
pop
mov
push
std
adc
repz
out
and
aad
dec
dec
pusha
jae
xlat
stos
fstps
out
lret
dec
xlat
jecxz
push
pushf
lahf
xor
xlat
push
jns
andb
inc
xchg
add
inc
mov
mov
adc
xchg
inc
push
sbb
enter
ret
jle
xchg
sub
subb
lahf
inc
lahf
mov
or
imul
cwtl
jl
xchg
int
jnp
xor
rorb
add
ljmp
cmc
outsl
push
sub
loope
push
inc
out
iret
and
movsb
xchg
xchg
cli
push
testl
lret
repnz
rcll
xlat
lods
adc
lahf
dec
addr16
inc
fdivl
iret
adc
xchg
jmp
xor
xor
int3
xlat
pop
lods
insb
jecxz
sahf
cmpsb
jp
lods
push
xlat
add
push
push
fwait
data16
aad
push
in
xlat
push
jle
pop
cmp
or
clc
mov
pop
or
popf
mov
out
rcrl
test
push
xlat
adc
out
aas
mov
cld
ljmp
popa
cltd
cwtl
jb
test
jecxz
rclb
jb
dec
fnsave
pop
pop
lock
lret
bound
xlat
xchg
or
das
daa
xchg
pop
pop
xchg
addr16
dec
nop
fcmovnbe
dec
cmp
push
push
mov
and
fwait
push
mov
xlat
pop
push
test
push
xlat
sbbl
and
dec
push
sub
xlat
fsub
sub
clc
sbb
daa
sub
movsl
loope
xchg
addl
push
mov
shll
push
pcmpgtb
mov
ja
xlat
cmp
movb
mov
or
rcll
jnp
out
popa
cmp
push
xorl
in
pop
rcll
cltd
pop
hlt
xlat
add
fwait
out
ret
in
add
xchg
dec
add
push
sbb
xchg
in
jmp
in
cltd
and
dec
jge
lret
push
jp
jnp
xchg
or
xor
stc
pop
lret
popf
cmc
or
movsb
sub
inc
cs
pop
dec
pop
xlat
das
in
jge
mov
xlat
cltd
cmp
cmpsb
adc
add
pop
inc
or
cmp
clc
push
data16
lret
test
in
sub
gs
push
mov
into
inc
mov
mov
dec
daa
sar
xchg
stos
xlat
popa
jb
mov
lods
cmp
ljmp
loope
or
stos
pop
enter
adc
xlat
negl
pop
inc
inc
and
mov
rcl
xor
add
jb
mov
gs
add
pop
xor
aam
popf
ss
adc
mov
mov
cs
jbe
sbb
mov
or
rorl
lret
imul
mov
bound
es
xlat
cmpsl
dec
icebp
stc
mov
loopne
xlat
mov
lret
cmp
stos
andb
pop
pop
or
subb
daa
xlat
gs
pop
jb
rorb
fxch
xchg
mov
sub
xor
mov
jmp
xlat
pop
jno
push
fadds
xlat
fsts
push
mov
popa
std
sub
rcr
pop
inc
mov
out
rcrb
mov
lahf
aam
into
das
shlb
adc
sub
fwait
dec
addr16
push
pop
rcl
mov
inc
mov
sbb
adc
and
adc
sub
sbb
pop
or
mov
push
mov
pop
push
fwait
mov
sub
shrl
jne
push
and
loopne
lods
fcoms
mov
icebp
stos
add
xlat
jl
lea
clc
arpl
rcrl
xor
fidivrs
xchg
or
mov
adc
rorl
xlat
test
adc
mov
dec
popa
mov
leave
add
in
rcll
jge
xlat
out
xor
push
aaa
cltd
lahf
call
jl
inc
inc
add
mov
test
ret
stc
fs
into
mov
leave
mov
mov
filds
rcrb
and
fucom
lcall
push
lret
xor
and
out
roll
mov
mov
addr16
xchg
js
shrl
adc
xlat
mov
es
pop
xchg
sahf
ja
adc
pop
or
ret
sarl
cmpsb
or
mov
sbb
fstpt
testl
adc
pop
pop
jmp
mov
insb
fimuls
jnp
adc
pop
cmp
cld
mov
xlat
mov
or
xlat
ret
pushf
push
repz
rcll
mov
fcom
xor
xlat
mov
sarl
sub
mov
imul
loopne
dec
xchg
and
jnp
rol
shll
xlat
int3
daa
into
pop
xor
pop
sub
fs
push
aaa
aas
adc
and
xlat
mov
fimuls
shrb
cmp
rclb
sub
sbb
sbb
scas
lea
int
roll
addr16
pop
sub
rclb
or
test
lret
les
and
dec
push
sub
xlat
mov
aaa
mov
hlt
mov
icebp
xlat
sub
cli
clc
enter
repnz
cmc
lods
or
sub
push
pop
push
xlat
sub
or
xchg
sub
push
xlat
hlt
cmp
adc
push
das
mov
cmc
cld
fcmovnbe
scas
mov
pushf
lea
adc
cmp
sbb
cmp
lret
xchg
loope
stos
dec
fwait
dec
shlb
jmp
jp
mov
in
pusha
pop
mov
lea
push
imul
xor
repz
std
xor
inc
repz
mov
test
lea
sub
jp
inc
sbb
sbb
rcrb
inc
and
sbb
loop
xchg
imul
sti
mov
adc
movsl
mov
ljmp
insb
push
push
and
in
jle
dec
or
inc
dec
outsl
xor
stos
adc
lahf
cmp
mov
in
shlb
decl
lea
outsl
xchg
dec
mov
cmpsl
xchg
call
jmp
and
mov
pop
ret
add
adc
xor
in
push
and
pop
dec
call
cld
dec
inc
cs
ficoms
lods
repz
inc
test
and
mov
ja
push
cmp
loopne
push
inc
fidivrs
ret
mov
je
mov
lret
sub
es
xchg
pop
lock
pop
loope
icebp
sti
xor
imul
outsl
shlb
lea
inc
mov
mov
sbb
sub
sbb
fldl
ss
bound
jne
add
cmpsb
dec
hlt
cmpsl
dec
out
mov
mov
or
repnz
fwait
or
movsl
faddp
enter
jo
pop
dec
dec
sbb
jg
dec
je
mov
mov
rcrb
dec
mov
repnz
out
imul
xchg
mov
xor
in
fsts
stc
lods
lret
rorl
push
push
aaa
roll
mov
cmpsl
add
dec
insb
gs
outsb
imul
add
bswap
mov
movb
pushl
ret
fldenv
sbb
mov
mov
sarl
dec
sbb
dec
subl
xor
lahf
mov
int
iret
adc
mov
inc
dec
call
adc
testl
sub
mov
jb
mov
ja
mov
sub
or
cltd
inc
push
push
lock
inc
sti
scas
imul
xchg
jmp
mov
imul
mov
xchg
pusha
dec
cmp
and
sbb
dec
sbb
rolb
fistps
mov
xor
sbb
pop
adc
lcall
dec
cld
inc
test
aad
fnstsw
stos
jl
mov
sub
inc
xorb
jmp
scas
mov
push
iret
cmp
out
enter
loopne
push
xor
clc
xor
mov
xor
mov
sbb
lds
mov
dec
mov
hlt
pop
fdivrs
addr16
jge
iret
xchg
test
in
xchg
mov
pop
mov
lea
pusha
mov
mov
call
lea
je
jmp
adc
xor
pop
jmp
inc
xor
or
add
in
mov
fcomp
pop
loopne
mov
inc
inc
fwait
cmp
mov
xchg
nop
jbe
cwtl
adc
sub
cmc
push
mov
sbb
loope
xor
gs
push
jecxz
imul
call
dec
or
dec
scas
nop
xor
and
ss
jae
lock
repz
pop
les
fstpl
sbb
xchg
fisubrl
sbb
repz
push
push
mov
xor
mov
or
sahf
cmc
dec
ds
xchg
fldt
mov
push
inc
xor
push
xchg
mov
nop
inc
mov
mov
mov
orb
rcr
sub
sub
aaa
mov
or
jmp
xlat
and
ljmp
mov
xor
dec
out
sub
inc
jno
icebp
jo
sub
jmp
jns
xchg
out
xor
mov
fidivrl
add
sub
roll
mov
mov
mov
adc
ja
fsts
push
mov
into
push
or
ret
cmp
add
ret
xchg
pop
aas
and
mov
jne
xchg
cmc
mov
repz
and
xor
es
jg
stos
in
pop
cmovo
inc
mov
push
je
cmpsb
fildl
fisttps
push
push
pop
clc
leave
xor
aaa
jg
lea
jns
dec
add
cld
cmp
jl
jg
hlt
mov
fisubrl
adc
dec
mov
mov
lds
fimuls
loop
pop
or
out
pop
into
es
divl
cwtl
imul
sbb
rorl
jae
jge
cmp
dec
out
inc
jecxz
add
nop
fcomps
mov
in
loopne
nop
cmp
or
test
xor
cmp
push
and
int3
negl
mov
mov
pop
les
fwait
mov
loop
dec
or
adc
pop
mov
jmp
lea
jne
clc
cwtl
sub
aas
sar
mov
push
setns
rol
jmp
movzbw
mov
setno
mov
jmp
in
xor
mov
lret
fucom
ret
lods
mov
push
dec
ds
adc
jnp
mov
inc
in
adc
lock
inc
into
jle
sbb
lret
jp
test
fbld
xchg
dec
cltd
pusha
cmpsb
fsubrp
lcall
jmp
jnp
imul
dec
in
dec
pop
lods
test
cwtl
pop
nop
insl
add
in
imul
mov
and
ja
aad
mov
sub
push
shl
setp
lods
push
pusha
cmc
neg
call
std
inc
sub
fiaddl
ja
mov
int3
sbb
loop
stos
xchg
cwtl
xchg
sbb
aaa
mov
lods
lcall
and
test
daa
push
inc
xchg
outsl
imul
mov
call
shrb
insl
push
popa
scas
push
push
inc
insb
mov
add
pop
sbb
cmp
nop
leave
movsl
aaa
enter
push
negl
pop
fidivrs
jecxz
adc
dec
outsl
arpl
inc
jb
add
lret
xchg
loopne
cmpsb
addl
outsb
aas
mov
push
sub
std
add
lret
push
push
das
add
call
je
nop
std
cmpsb
rcl
push
xlat
jg
out
mov
dec
test
push
mov
mov
push
icebp
std
test
in
lahf
pushf
shrl
cmpsl
movsb
roll
inc
xor
pop
ja
fwait
or
sbb
leave
cmp
sub
jg
imul
fs
mov
sbb
dec
xlat
inc
ds
ljmp
jp
faddl
mov
in
out
pop
cli
mov
movsb
in
sahf
jg
xchg
xchg
subl
loopne
cmpsl
aad
sarl
in
fidivrs
jo
mov
bound
jbe
cmp
sbb
inc
sbb
add
in
cs
cmpsb
sub
sbb
das
push
add
leave
xchg
jge
lds
mov
decb
rcr
cmp
add
aas
loopne
cmp
shrb
adc
nop
mov
push
sub
push
push
inc
xor
and
adc
ljmp
addr16
jle
scas
jg
pop
push
cmp
faddl
out
dec
in
fwait
insb
add
icebp
mov
xor
inc
in
xor
gs
insb
shll
adc
sahf
mov
clc
rcrl
mov
add
subb
test
dec
ss
es
loope
lds
popf
dec
stc
cmpsb
dec
add
push
mov
aam
sub
clc
cmpsl
mov
pop
xchg
xchg
xchg
outsl
jbe
inc
cmp
pop
repz
cmp
addl
inc
jae
das
xor
or
test
or
cmpsl
cs
sbb
test
fcoms
ss
pop
xchg
add
sub
pop
xor
push
push
adc
les
sub
popa
add
sbb
xchg
add
lock
dec
mov
cwtl
loope
mov
inc
dec
lods
pop
mov
mov
clc
xchg
pop
push
rorl
xchg
aaa
ljmp
dec
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
movsb
xorl
xor
inc
inc
inc
adc
or
cli
lret
shlb
lret
popa
leave
add
dec
or
data16
addl
movsb
lock
arpl
cmp
out
out
in
in
out
jbe
in
cmp
fsubs
cmpsl
aad
fs
mov
xchg
adc
data16
mov
fisubs
aam
inc
cmc
movsb
pop
push
xchg
dec
adc
mov
inc
push
cmp
pop
xor
push
dec
xor
jne
inc
jmp
inc
fwait
or
sub
lret
movsb
sub
popf
cmp
testl
mov
daa
xchg
shrl
or
push
pop
lret
stos
fmuls
cs
lods
push
dec
sub
es
mov
jle
push
rorb
daa
es
scas
push
daa
push
sub
aad
pop
sahf
in
sub
jecxz
sub
mov
mov
ret
fldt
mov
and
movb
stc
add
pushl
mov
mov
lea
jmp
lea
je
test
call
or
ss
faddl
neg
sub
xchg
xchg
outsb
arpl
add
push
insl
pop
popf
cmp
jb
inc
xchg
add
aaa
in
aad
int
cmpsb
pushf
and
call
fsubrl
lods
sub
clc
sub
push
pushf
push
push
pop
jns
pop
lds
cmpsb
negl
inc
mov
cwtl
jns
mov
movsl
cli
in
mov
addl
test
sbb
sahf
push
pop
mov
idivl
inc
addb
enter
test
push
scas
js
shlb
mov
pop
or
dec
xor
clc
push
cmpsl
inc
fsubrs
mov
push
pop
inc
adc
in
jno
call
in
xor
pop
pop
or
push
je
inc
dec
xchg
push
ret
add
jmp
jo
mov
jle
in
jae
mov
ljmp
and
add
std
mov
jmp
aam
fsubs
mov
sub
int3
sub
lods
mov
xchg
lea
lret
test
addl
ds
xchg
pop
mov
mov
add
xor
jmp
jno
mov
test
mov
test
pop
gs
std
mov
insb
or
push
imul
sbb
pop
sbb
out
jge
lahf
or
in
stc
lock
gs
sti
sub
psllw
das
cmp
shll
cld
movl
lock
andb
js
jnp
jbe
jbe
clc
add
sub
xchg
xchg
stos
pushf
add
pop
mov
mov
xor
lea
mov
adc
dec
dec
dec
dec
inc
push
cs
insb
add
and
jne
push
movb
lahf
movb
bswap
mov
lea
lea
pushf
call
stc
cmp
jb
ja
pushf
call
dec
cmpsl
xchg
stos
ret
mov
lea
cmp
pop
or
test
mov
sbb
sbb
mov
data16
data16
hlt
xor
push
int
push
pminub
sub
rcr
mov
ss
sbb
out
or
int
mov
adc
dec
mov
mov
mov
pop
fldt
jl
jne
xchg
je
gs
lea
gs
jl
aam
add
out
fisubl
pop
adc
aam
pushf
inc
mov
into
mov
mov
push
xor
out
aam
sbb
xchg
inc
jge
adc
mov
adc
pop
outsl
jns
jbe
or
xchg
lock
leave
adc
loopne
les
ret
sbb
sbb
xlat
xor
dec
movsb
push
pop
cmpsl
pop
mov
inc
xor
sub
jns
cmp
mov
pop
sbb
or
call
out
dec
add
mov
into
jnp
mov
lcall
add
cmpsb
out
repz
popa
cmp
mov
lret
lods
mov
pop
push
dec
inc
cmp
add
cmpsb
pushf
xchg
mov
enter
mov
gs
pop
cmp
push
mov
dec
xchg
push
mov
add
push
ljmp
sti
sub
sub
fstpl
mov
jmp
sub
jecxz
mov
ret
push
mov
sbb
sub
push
inc
mov
icebp
movsb
dec
sbb
pusha
pop
mov
mov
add
jecxz
sar
push
cmpb
pushf
movb
call
call
cld
push
aas
xor
ret
jmp
mov
imul
int3
jae
xchg
std
test
push
sub
sub
sub
cmpsb
add
notl
out
scas
mov
sti
and
das
out
js
push
lods
mov
adc
sbb
jbe
xchg
ja
ja
push
cmpsb
std
call
push
clc
popf
pusha
or
adc
add
rorb
mov
mov
mov
pushf
lea
ja
jno
pushf
lea
jb
push
cmpb
pusha
jmp
incb
cmp
nop
add
pop
fsubs
adc
mov
arpl
mov
pop
dec
jg
scas
dec
testl
cmc
fiadds
sub
loop
xor
pop
jge
ret
inc
mov
mov
lret
mov
or
mov
mov
lret
xorl
scas
js
cs
pop
sbb
mov
mov
and
outsl
es
pop
les
stos
rclb
push
mov
movsbw
pusha
mov
pusha
push
pushf
pushl
ret
seto
lods
test
pusha
test
neg
call
add
dec
gs
popa
addr16
outsl
js
add
arpl
aaa
cli
add
enter
ret
shll
lcall
push
nop
ja
cmp
imul
dec
rorb
fpatan
outsb
cwtl
and
out
mov
inc
jle
dec
push
mov
add
repnz
les
addr16
and
loop
enter
jo
inc
mov
nop
mov
add
das
pushf
sub
pop
or
jge
pop
mov
inc
call
arpl
icebp
lret
and
in
lcall
rol
stos
xchg
fwait
cwtl
jae
dec
ds
pusha
fdivrs
pop
jle
xchg
ja
add
mov
int
dec
in
ret
out
mov
rcrl
push
jns
dec
dec
cmovb
iret
in
and
add
rclb
iret
fidivl
aam
adc
pop
mov
lock
add
cli
in
aas
rorb
hlt
stos
pop
pop
into
mov
test
dec
lea
jmp
push
movzbw
not
rol
mov
lea
jmp
lea
movb
mov
movl
movb
pushf
push
mov
mov
mov
pushl
ret
sub
xor
adc
lea
mov
stc
jmp
rep
pusha
not
call
shrl
push
add
imul
sub
and
cli
cmpsl
inc
jo
call
and
iret
adc
dec
ljmp
enter
loope
cltd
dec
fildl
mov
cltd
lcallw
in
and
int
repnz
dec
xchg
loopne
push
mov
popa
shrb
test
mov
adc
adcl
adcl
cmpsl
dec
sti
sahf
and
adc
adc
mov
lret
mov
push
cwtl
xchg
xchg
adcl
es
mov
insb
fidivrl
test
push
movsl
or
enter
ret
push
inc
cwtl
out
cmp
mov
or
add
xor
pop
jmp
lahf
push
xchg
out
and
and
fcompl
rcl
push
inc
jg
mov
xchg
jno
jne
sub
outsl
and
mov
enter
test
xor
stc
add
clc
call
push
dec
inc
dec
dec
xor
cs
insb
add
add
gs
insb
inc
js
arpl
gs
add
fsubs
inc
mov
rol
cmc
pushl
add
jae
stc
mov
push
bt
add
stc
stc
test
test
lea
jns
pusha
push
lea
jne
call
or
movsl
pusha
inc
cld
fcoms
mov
arpl
sbb
insb
xchg
inc
pop
adcb
bound
scas
cmp
xchg
stos
dec
push
inc
xchg
or
push
fisubs
jbe
test
orb
push
xlat
adc
xchg
adc
loop
lret
lahf
jnp
jecxz
xchg
pop
lcall
dec
or
jp
clc
mov
fidivrl
mov
jmp
mov
push
aad
mov
outsb
fdivl
push
shlb
call
add
shll
dec
leave
cltd
imul
test
mov
pop
cmp
jbe
lret
test
mov
push
jle
cmpl
mov
dec
inc
and
ficomps
loop
push
gs
in
cmpxchg
cmp
iret
jle
roll
movsb
in
adc
pop
stc
dec
pop
pop
fwait
loop
inc
mull
daa
loopne
ds
mov
jnp
fs
jbe
bt
bts
mov
xadd
neg
lea
add
xchg
cmc
cmp
stc
mov
shrd
clc
lea
bts
add
mov
xor
btr
movl
stc
mov
push
cmp
lea
jp
pusha
jmp
in
xor
daa
sub
test
mov
sahf
jns
inc
dec
sub
cmp
mov
imul
femms
or
adc
or
adc
dec
jnp
inc
dec
cmpsl
add
pop
add
loopne
dec
or
and
or
adc
add
sbb
pop
cli
loop
and
mov
sub
jae
and
fidivrs
mov
cmp
mov
fwait
cld
stos
or
sarb
cmp
imul
xor
rcll
ljmp
fisttpl
adc
fs
je
adc
bsf
test
add
inc
xor
mov
clc
call
push
stos
stos
test
pop
xchg
js
into
scas
movsb
xchg
sbb
xchg
cmp
rcr
xchg
dec
mov
ja
sbb
call
nop
sbb
jo
xchg
int
test
aas
cmp
lcall
mov
mov
cmp
shrl
mov
mulb
loop
and
inc
or
mov
inc
lea
add
test
pop
pop
pushf
lds
andl
jnp
mov
inc
mov
mov
cwtl
xchg
push
pop
push
push
cmp
mov
inc
inc
and
pop
cld
repz
mov
xchg
sub
mov
test
mov
ficomps
jae
sahf
pop
dec
loopne
pop
test
xchg
jno
addl
loopne
mov
mov
push
adcl
inc
stc
inc
es
mov
inc
pop
test
push
stos
push
or
mov
push
neg
xor
rcr
jmp
lds
aad
mov
add
fmul
enter
imul
scas
push
outsb
adc
pop
addr16
jnp
inc
icebp
push
imul
cwtl
roll
pop
out
cld
out
jns
roll
cmp
xor
push
lcall
leave
stos
jg
or
push
insl
movsl
out
test
test
mov
imul
imul
ror
mov
daa
dec
push
jle
aas
pushf
jg
cwtl
push
mov
nop
push
bound
fistps
idivl
das
ljmp
pusha
setnp
bt
sar
xchg
not
aas
lea
adc
das
sub
aas
push
jmp
xor
gs
popa
gs
push
dec
sbb
inc
xor
or
mul
lret
dec
jno
test
jp
int3
fsubrp
repz
add
sub
test
add
pop
scas
pop
pop
data16
add
adc
xor
adc
stc
dec
outsl
dec
call
cmc
mov
xchg
xor
xchg
push
out
or
mov
mov
das
jg
jns
dec
sbb
cmp
lcall
arpl
mov
movsb
and
or
movsb
leave
ret
and
push
pop
pop
inc
xor
mov
adc
adc
lock
test
push
mov
pop
xchg
aad
sahf
push
fcmovnbe
movsb
jmp
push
cld
push
and
sub
fiadds
cmp
and
repnz
add
repnz
icebp
inc
xchg
xchg
repnz
mov
dec
lods
out
lds
sub
cwtl
out
ficoms
push
aad
aas
fmull
mov
mov
pusha
pusha
mov
lea
jmp
call
scas
imul
fmull
mov
rcrl
pop
inc
xor
imul
or
mov
insl
outsb
aaa
fdiv
cmc
cltd
cmp
popf
mov
xor
mov
sub
mov
jae
filds
int3
adcl
stc
js
fdivs
outsb
subb
sub
repz
das
pushf
aaa
ljmp
adc
fucomip
fs
cli
out
inc
dec
lds
ret
lock
addr16
das
push
xor
pop
into
jge
aad
sub
xchg
jecxz,pt
dec
mov
xchg
test
test
add
add
shl
mov
inc
mov
rol
push
and
mov
push
repnz
pusha
push
jmp
js
lods
movsb
addr16
mov
mov
push
pop
or
ljmp
sahf
cli
mov
or
in
fldcw
pop
test
pop
cs
inc
pop
sbb
push
pop
std
clc
adc
xchg
faddl
cmp
cmp
push
sarb
add
sbb
pmaxub
movhps
shr
and
lret
pushf
lea
jecxz
aas
outsb
dec
push
push
pop
add
jbe
mov
inc
mov
roll
add
fs
imul
add
popa
dec
cmp
in
dec
das
int
xlat
fcmovbe
cmpsb
lea
push
ret
pop
xchg
and
cli
push
lea
mov
xor
out
xlat
dec
jne
imul
jl
pop
cltd
gs
lods
adc
or
xchg
inc
mov
pop
mov
jb
out
dec
stos
jae
xchg
popa
or
xchg
pusha
mov
cmp
je
pop
mov
leave
cwtl
jmp
in
sub
jmp
pop
adc
ja
xlat
jp
loopne
adc
lea
ja
clc
pushf
movw
imul
clc
stc
add
push
pushl
lea
jmp
sbb
ret
jo
cwtl
jle
aas
js
push
aaa
ds
loopne
sarb
insl
or
push
aaa
sarb
jge
inc
inc
in
mov
dec
and
dec
adc
xlat
aaa
dec
shl
cltd
movsb
sar
into
or
jnp
rolb
push
cs
jmp
sti
popf
and
rclb
pop
dec
mov
adc
lods
xor
cmp
jnp
adc
or
int
popf
pop
aas
into
jl
dec
in
pop
lods
cld
add
rcrb
add
adc
ret
push
test
movsb
icebp
nop
jno
iret
mov
subb
dec
cmp
mov
mov
imul
pop
mov
xchg
lods
cmpsl
xchg
mov
xlat
xchg
repz
or
pop
sahf
jno
adc
jo
sub
popf
push
adc
js
pop
xchg
lea
cmp
push
push
aad
out
sub
push
mov
xor
xchg
inc
loope
push
add
mov
or
bt
clc
cmc
cmp
pusha
lea
jae
pusha
clc
add
jmp
cmp
ja
xor
dec
mov
pop
cld
add
mov
mov
mov
int3
add
add
nop
scas
in
sub
cld
mull
pop
je
jge
or
ret
int3
pop
scas
aas
push
test
jle
sahf
js
push
add
sbb
sub
pop
daa
jo
sar
out
lock
loop
pop
imul
lds
ja
stc
mov
mov
std
cmpsb
mov
inc
add
bt
shr
lea
jg
push
lea
je
pusha
adc
pushl
movb
movb
pushf
lea
jmp
shrl
sbb
mov
shll
in
lret
rclb
loop
and
or
test
xchg
xchg
or
sub
bound
movsb
or
cmpsl
mov
inc
xchg
push
push
cmp
mov
sbb
sub
in
add
call
jae
xor
dec
js
stos
dec
mov
scas
mov
mov
xchg
pop
push
push
dec
mov
lods
outsl
push
lds
call
dec
or
js
cwtl
test
push
lods
push
in
push
out
sbb
mul
in
mov
pushf
mov
out
scas
jo
jl
adc
mov
add
add
and
call
pop
movsb
add
scas
sbb
loop
push
mov
sbb
or
stos
or
sbb
mov
lret
sub
aas
dec
sub
sub
andb
dec
hlt
loope
test
loope
cmp
cmpl
xlat
xchg
mov
push
insl
mov
scas
pop
xor
sub
daa
and
imul
into
mov
lea
ljmp
fists
jmp
cs
adc
out
pop
fnsave
in
lock
jecxz
cld
and
cmp
xor
and
popa
lods
mov
sbb
hlt
iret
aaa
aaa
lahf
fs
hlt
cmpsl
pop
or
sub
andl
xchg
push
jae
icebp
rcr
mov
dec
xchg
test
aaa
ds
in
lea
repz
out
imul
push
add
scas
pop
jae
scas
imul
cltd
pop
lods
push
imul
into
jecxz
push
ds
add
jae
add
push
cmp
lcall
rcrb
repnz
xchg
push
lea
movsl
pop
outsl
pop
pop
rclb
dec
repnz
mov
pop
mov
xchg
jl
sub
test
mov
adc
ljmp
jge
mov
pop
inc
and
add
fimull
mov
sub
adc
mov
mov
adcl
rolb
add
in
dec
test
mov
cmp
scas
push
cmp
or
lahf
fs
cmp
dec
sti
mov
cmp
nop
xor
mov
imul
call
and
setae
movzbw
btc
mov
pushf
pushl
test
add
js
cmpb
pusha
pusha
lea
jne
mov
bts
xor
shrd
and
jmp
adc
aas
dec
add
test
xchg
mov
enter
jl
fs
out
into
jns
bound
mov
loop
xchg
dec
outsb
mov
outsb
imul
fs
jmp
sbb
or
xor
divl
call
in
inc
call
push
adc
adc
push
in
adc
test
int3
ret
stc
sbb
bound
jne
out
mov
iret
sbb
adc
je
pusha
daa
xor
jmp
adc
loopne
popa
mov
stc
sahf
push
or
jl
enter
mov
jae
push
pop
cmp
repz
call
cltd
mov
pop
dec
std
movsb
mov
pop
or
stc
enter
pop
int3
add
push
scas
jnp
aam
jecxz
mov
leave
fld
test
lea
movsb
addr16
mov
and
mov
xlat
inc
test
in
loopne
or
sub
into
mov
mov
lea
sub
mov
test
outsl
xor
add
mov
sub
jns
sbb
mov
adc
js
enter
adc
cmp
and
jp
int3
sub
loop
fmulp
mov
cmp
rolb
decb
jp
push
std
in
pusha
fdivrs
jle
mov
inc
nop
aaa
xchg
sub
je
jp
idivl
mov
fldt
adc
xor
loope
aaa
lahf
pop
push
out
in
sub
jmp
faddl
icebp
and
xchg
jnp
andl
loope
inc
pop
out
fistl
ficoms
bound
icebp
cmp
dec
cli
cmc
scas
hlt
or
adc
push
icebp
adc
jp
sarb
jecxz
gs
mov
inc
jbe
clc
mov
not
sub
and
shl
shr
mov
xchg
bsf
movzbw
mov
bsf
dec
mov
add
inc
shr
adc
push
sar
mov
btc
add
lea
pushf
mov
pushf
pushf
jmp
movzbw
pop
bswap
pop
mov
pop
pushf
pusha
movzbw
bswap
mov
jmp
mov
and
lahf
xchg
subl
add
cwtl
inc
pop
add
and
mov
in
jno
fisubrs
inc
mov
or
jecxz
inc
outsb
adc
lcall
inc
lahf
xor
dec
out
mov
jle
ss
inc
lods
mov
fwait
cmpl
mov
mov
dec
cwtl
in
int3
jae
jo
fmuls
sbb
dec
xlat
es
sahf
sti
lods
inc
inc
filds
mov
repz
loope
lea
clc
btc
mov
call
add
bt
pushf
cmc
mov
pushf
movb
mov
mov
cmp
jmp
inc
mov
adc
sbb
xor
adc
push
pop
cmp
sub
clc
out
mov
sub
inc
jnp
orb
fwait
aam
xchg
movsb
mulb
nop
stos
xchg
clc
jae
fists
repnz
xchg
addr16
je
rolb
dec
cmp
or
mov
xchg
jge
ljmp
imul
inc
jmp
jle
mov
je
adc
insl
mov
loopne
mov
dec
cmpsb
xchg
push
repz
dec
adc
jp
in
and
mov
pop
jns
mov
mov
pop
inc
dec
sub
sub
mov
iret
adc
fwait
in
jle
cld
mov
or
mov
inc
in
gs
xchg
push
sub
mov
in
cmp
lock
inc
popf
ret
test
cmpsl
jo
push
inc
xchg
mov
xchg
add
mov
jo
cmpb
mov
inc
sub
sahf
dec
ljmp
mov
bt
xchg
bnd
clc
call
leave
dec
sub
add
add
imul
add
inc
sub
add
add
sub
sub
add
add
pop
add
addb
add
repz
add
add
add
adc
add
add
push
jo
add
add
add
sub
add
add
pop
mov
add
add
adc
cmp
add
add
popa
fildll
add
add
add
add
add
add
addb
add
add
cmp
add
add
or
add
rorb
add
add
add
add
add
ret
xor
jo
sub
mov
xor
mov
sub
es
sub
clc
and
add
add
test
pusha
mov
pushf
mov
pushl
ret
clc
jmp
mov
dec
dec
mov
jnp
xchg
test
push
xor
clc
jecxz
das
dec
repnz
clc
mov
cmp
xor
xor
pop
pop
imul
lods
pop
xor
sbb
mov
ljmp
pushf
jbe
or
pusha
leave
lods
sahf
ficoms
lret
pop
adc
rorb
fidivrl
jecxz
push
add
mov
outsl
or
cmp
cli
test
push
sti
add
enter
jbe
dec
inc
add
dec
idiv
inc
lock
call
test
shrb
mov
inc
mov
push
mov
ljmp
cmpsl
mov
in
stc
rcll
aam
sbb
xchg
mov
sbb
inc
out
les
xor
mov
fsubl
adc
add
aad
or
jmp
mov
pop
dec
sub
aad
cwtl
inc
sub
sub
lret
ret
scas
pop
xchg
mov
push
scas
jne
cmp
enter
mov
loop
or
inc
and
loopne
cmp
mov
in
xchg
inc
repz
mov
scas
xchg
lcall
outsl
push
push
and
repz
mov
sahf
mov
cmc
lcall
xchg
cmp
mov
stos
pop
lods
lds
insl
jl
dec
incb
dec
jno
xchg
jl
sti
pusha
pop
retw
nop
xchg
das
mov
pop
aas
pushf
roll
mov
aad
push
ret
cmpsl
pusha
cltd
insb
test
xorl
sub
pop
or
daa
mov
repz
pop
jbe
jbe
inc
mov
cmc
and
xor
or
pop
es
inc
out
cmp
mov
cmp
rclb
je
fadd
xchg
mov
jb
dec
inc
cmp
int3
jge
dec
mov
pop
cwtl
dec
sub
cmp
xor
mov
scas
loope
xor
lods
or
fsubr
out
sub
push
lahf
jg
cmp
inc
movsb
ja
pop
or
cmp
out
adc
daa
or
inc
loope
aaa
push
adc
cmpsl
pushf
movb
mov
movsbw
push
lea
mov
pushl
mov
pushl
pushl
ret
call
testb
cltd
fstpt
sarb
andb
mov
aam
aad
adcb
add
and
addr16
mov
sbb
push
dec
andb
std
or
dec
mov
push
rol
int
and
cwtl
xchg
je
fsub
popa
fisubl
sub
shll
add
int
mov
cmpl
iret
jl
mov
push
sarl
xchg
xor
jo
popf
mov
add
daa
lea
jne
call
inc
lea
insb
dec
sub
outsl
inc
aaa
xor
out
icebp
fsubl
inc
lock
dec
inc
stc
cmpsb
sub
lret
imul
xchg
cwtl
sub
cmp
sub
cmp
leave
add
lock
sub
popf
sti
adc
push
fiadds
cmp
pop
fwait
repnz
push
add
ss
nop
cmp
mov
inc
cmp
fwait
mov
sbb
loop
mov
mov
imul
mov
pop
mov
dec
lcall
xchg
inc
and
add
push
mov
daa
ret
js
jge
mov
add
mov
lahf
fmuls
lahf
inc
sbb
adc
ficoml
daa
int3
or
push
pop
dec
sti
stos
movsl
leave
pop
mov
adc
ds
or
lock
push
icebp
mov
lock
xor
mov
mov
lods
jle
xchg
mov
sub
or
in
outsl
iret
test
pop
xor
sar
mov
jmp
stos
mov
repz
and
or
add
out
ljmp
hlt
pop
popf
dec
dec
movb
xchg
add
pop
cli
lods
jns
sbbb
enter
jnp
jle
lock
jg
in
pop
in
scas
pop
adc
push
pushf
mov
lea
ja
pushf
lea
jmp
jmp
adc
or
ret
stc
repnz
fnstcw
pop
enter
add
mov
jle
or
xorl
pop
cmp
pop
mov
fs
ret
mov
lock
mov
push
rorl
aas
lock
sub
jmp
int3
add
shlb
push
lret
dec
push
test
adc
push
xchg
icebp
mov
notl
mov
push
iret
cmp
lods
aas
int
sbb
sbb
inc
stc
movsb
inc
cli
mov
or
xchg
dec
cmpsl
xchg
xor
imulb
adc
push
in
ffreep
mov
pop
or
mov
add
mov
loop
iret
pop
test
out
bound
sub
jge
sbb
jae
pop
push
call
hlt
das
int
add
test
xchg
or
out
mov
adc
arpl
popf
ficoms
or
xchg
dec
sub
xlat
jnp
push
add
sbb
pusha
mov
mov
adc
outsb
pop
into
test
lret
js
out
bound
clc
xor
push
stc
xor
ror
and
cmp
mov
push
aad
repz
stos
hlt
lahf
cmpsl
adc
arpl
mov
mov
cmpsl
movsl
cmp
inc
or
push
mov
ret
ss
pop
mov
mov
mov
jl
xorb
maskmovq
testl
pop
test
lods
pop
sbb
and
lcall
xchg
or
cmp
aaa
sbb
aaa
cs
in
in
mov
pushf
sbb
imul
stc
out
dec
jge
pop
stc
pop
mull
push
sbb
enter
outsl
and
push
xchg
add
scas
stos
dec
pop
sub
jecxz
out
iret
jmp
les
sarl
imul
cld
fwait
push
add
arpl
rolb
add
daa
lock
inc
push
lcall
aad
and
lea
jmp
aaa
mov
out
ss
std
test
ret
test
inc
cmp
jo
mov
pop
add
and
lock
fldl
cld
ret
mov
stos
fdivl
and
fimuls
clc
cmpsl
clc
out
ror
movsb
fwait
mov
popa
inc
sub
es
lea
push
xor
ljmp
mov
fwait
xor
and
std
add
mov
pop
sbb
fs
and
cmc
out
lock
stc
adc
sarb
icebp
xchg
xchg
test
test
gs
adc
pop
add
outsb
xor
andl
xor
ja
or
xor
inc
mov
sbb
sub
js
adc
inc
xor
fcom
mov
add
jmp
mov
js
push
repz
mov
adc
js
push
or
jne
loope
cld
cmpsb
xchg
fwait
jne
test
push
add
mov
out
pop
jae
mov
cs
jnp
cmp
cmp
pop
test
cmc
push
jecxz
push
lock
bound
js
aam
ja
adc
inc
adc
mov
jnp
insb
xor
mov
insb
sbb
add
xorl
cmp
xor
push
cmpsl
out
roll
aad
inc
add
adc
les
add
xchg
xor
and
xchg
pop
add
lock
sub
mov
inc
ds
into
pop
inc
pop
stos
pop
lock
xchg
std
sub
shll
mov
adc
mov
scas
lret
sti
push
test
imul
sub
mov
test
ljmp
test
insb
mov
xchg
pop
mov
or
xchg
andb
pusha
mov
lea
call
call
outsl
movsb
mov
popa
inc
pusha
inc
sahf
xchg
nop
lea
adc
add
cmpsl
pusha
xchg
dec
aad
les
xchg
andl
lods
or
xchg
in
pop
push
loopne
out
and
lret
push
mov
and
sbb
pop
cltd
scas
xchg
gs
lods
out
pop
pop
inc
scas
scas
push
lret
add
shll
test
xchg
in
pop
or
jae
iret
mov
push
lea
jne
pusha
stos
pusha
mov
pushf
lea
jmp
clc
add
mov
pushf
lea
jmp
pushl
pusha
mov
lea
ja
pusha
pusha
movb
lea
jmp
mov
pushl
lea
call
pusha
jmp
call
test
xor
cs
mov
jge
sub
out
fimull
mov
cmp
es
popa
dec
aaa
sub
jo
sub
aas
sahf
int3
addl
jge
push
cltd
negb
ror
dec
mov
push
mov
in
or
xor
mov
popa
jg
jmp
adc
add
stos
mov
lock
negb
or
xor
mov
cli
lods
jb
fisubl
pop
jb
mov
pop
pop
testb
ds
cld
cmc
loop
mov
add
inc
add
jno
popf
mov
sub
mov
jb
xchg
test
outsl
mov
imul
mov
shll
mov
mov
add
mov
arpl
jp
daa
jle
inc
inc
cmp
inc
notl
sub
outsl
mov
jge
out
lods
jbe
imul
pop
mov
sbb
out
xor
orl
inc
fcoml
jno
jnp
clc
adc
sub
add
dec
sub
mov
ret
movsb
mov
repnz
sub
pop
pop
push
inc
ret
or
ljmp
push
roll
rep
loope
sub
mov
mov
cmpsl
les
dec
in
mov
mov
dec
or
cmp
test
div
xor
or
std
not
test
pushf
mov
xor
push
mov
jecxz
jnp
xchg
lcall
cld
xor
mov
in
jno
imul
aad
and
loop
jbe
push
add
adc
lods
mov
frstor
mov
les
push
lods
jns
cmpsb
rorl
js
mov
cmp
sbb
jo
enter
xchg
pop
ljmp
popf
out
cmp
or
or
test
jmp
out
push
sar
shl
mov
cmc
cmp
pushf
add
movb
movzwl
bsf
mov
push
call
add
clc
clc
mov
call
pusha
lea
jne
test
mov
cmc
pusha
bt
stc
add
call
sub
outsl
push
add
jae
leave
les
inc
cmp
clc
xchg
dec
int3
gs
mov
lcall
aaa
in
icebp
in
cli
pop
jecxz
or
pop
pop
xchg
leave
jbe
cmp
mov
aas
in
push
mov
les
jnp
jbe
nop
out
sbb
or
sub
stos
sti
and
adc
divl
pop
sub
sbb
cmc
pop
mov
push
adc
pop
mov
add
dec
cmpsl
mov
push
or
xchg
cmp
cwtl
inc
mulb
mov
fldcw
addl
xorb
gs
dec
cmp
add
scas
test
adc
in
and
xor
mov
push
jbe
iret
jbe
inc
in
pop
jns
xor
xchg
inc
fwait
popa
mov
mov
std
mov
aam
cmpsl
cmpb
xchg
fistps
xchg
sbb
sbb
jle
repnz
xor
lahf
dec
cmc
mov
gs
xor
aam
dec
js
mov
nop
mov
dec
sub
mov
in
xor
jp
inc
cmpsl
inc
pop
jno
pop
popa
sti
add
mov
je
sbb
out
xchg
ds
daa
sbb
adc
xor
out
mov
insb
movsl
pop
sbb
or
add
jae
mulb
mov
pushf
dec
imul
loop
dec
adc
fwait
jns
and
cmp
push
rcll
jle
mov
call
outsb
daa
loop
sbb
mov
mov
pop
sbb
cmc
dec
das
nop
jno
cmp
lret
fwait
jns
add
lods
xchg
inc
xor
xchg
popf
mov
aaa
rcl
outsl
push
pop
inc
xor
rclb
jns
sub
push
clc
and
out
cwtl
jmp
jmp
fcmovnu
aad
cmp
mov
sbb
mov
arpl
sub
flds
es
les
in
xor
adc
jp
stos
or
xchg
fstpl
xor
push
xor
repz
or
fcoms
roll
into
and
jg
push
mov
mov
cmp
and
xor
xchg
arpl
jecxz
push
dec
pmulhuw
movl
mov
imul
add
xor
xchg
mov
adc
sub
xor
stc
push
mov
push
and
jl
mov
sub
adc
inc
xor
ftst
fildll
shlb
mov
mov
dec
inc
inc
hlt
stos
lds
sbb
movsl
lea
pop
inc
lods
or
jno
iret
fdiv
cmp
fdivl
push
bound
xor
cmp
inc
xor
xorb
add
orps
popf
jo
call
mov
mov
cwtl
cmpl
jg
add
inc
push
fld
das
out
popf
push
pushf
sub
sub
mov
insl
adc
jle
sarb
jecxz
mov
and
push
push
inc
lea
ja
jmp
sbb
push
dec
fistl
ss
hlt
lds
out
rcr
shrl
lods
xor
push
mov
call
pop
stos
pusha
xchg
insb
jecxz
inc
ret
divl
xlat
mov
aad
fstl
mov
repz
jns
lods
mov
dec
nop
in
movsl
fidivrs
rol
and
mov
sbb
pop
mov
fdivrl
xor
sarb
sub
and
ss
mov
imulb
adc
adc
in
loopne
mov
xchg
mov
xor
adc
hlt
xchg
cmp
enter
ja,pn
out
hlt
sub
shr
lock
xchg
and
xor
dec
jb
xor
aaa
loop
jae
and
es
addl
notl
in
xor
pop
xchg
cmc
imull
jo
lods
push
or
add
sbb
ficoml
std
leave
pop
shrb
lcall
pop
fs
outsb
aaa
out
cs
dec
call
popa
mov
sarl
mov
push
inc
and
imul
daa
sbb
jle
xchg
sub
fildl
arpl
add
fisubrl
dec
jb
sbb
xchg
stos
outsl
mov
fists
jl
popa
pop
mov
adc
xchg
dec
jge
and
and
das
pop
mov
mov
adc
ret
in
adc
pop
or
add
fldt
push
mov
dec
mov
loop
test
dec
mov
adc
mov
mov
adc
xor
pushf
call
mov
jns
inc
insl
arpl
movsl
nop
jae
jae
addr16
cmp
ret
pusha
in
push
cwtl
icebp
ljmp
push
cmp
adc
int3
xchg
mov
loop
ss
sbbl
es
pop
xor
sti
cmp
mov
inc
mov
int3
and
mov
in
add
sahf
fwait
pop
stc
add
xorb
incb
mov
js
push
sbb
or
rcll
mov
sbb
subb
mov
lods
movb
call
lret
and
add
sub
dec
mov
mov
push
inc
xor
lcall
and
push
std
dec
decb
push
out
xor
lods
push
pop
sbb
jo
cs
ljmp
and
mov
jmp
dec
jb
rcrl
mov
mov
enter
pop
push
pop
or
inc
inc
loopne
movsb
pop
test
or
cs
xchg
cmp
mov
loopne
ss
mov
pop
pop
fstpl
mov
jns
push
mov
dec
clc
mov
mov
lock
sub
xor
lea
add
xor
rcr
inc
mov
mov
mov
cmc
cmp
call
mov
jg
movsb
test
leave
mov
xchg
jnp
gs
cmp
in
in
xor
adc
cltd
mulb
inc
mov
push
data16
and
rcll
movsb
mov
or
movsb
fstpl
lods
ficoml
cmc
inc
cmp
inc
xor
hlt
aad
lds
dec
xchg
jne
push
std
add
fildll
xor
mov
fists
mov
insl
jbe
std
aas
inc
pop
sub
pop
pop
dec
das
and
cmc
in
fcmovb
jbe
pop
stc
and
xchg
leave
add
sub
xor
push
jno
and
push
sarl
lea
mov
push
movsb
pop
cli
mov
push
mov
xlat
rorb
test
arpl
jbe
pop
mov
xchg
jle
mov
in
xchg
mov
pop
int3
insl
mov
int
ffreep
test
aas
in
adcl
push
push
xor
and
push
or
xlat
mov
jmp
mulb
popf
push
jle
sar
int
mov
pop
xor
mov
push
or
mov
mov
inc
sub
test
xchg
test
addr16
mov
mov
fistpll
fdiv
ffree
ja
mov
lahf
stos
cmpsb
pop
outsb
lea
hlt
in
clc
xor
add
adc
js
pop
sysret
sub
sbb
jo
mov
sub
cwtl
push
repnz
mov
dec
xor
sarb
js
push
dec
ss
mov
je
ret
jo
cwtl
sbb
jns
lea
gs
jecxz,pn
adc
add
push
dec
xchg
je
aam
fs
nop
loope
int
aas
mov
movsb
fstl
mov
adc
dec
imul
movsb
mov
pop
push
jle
test
add
and
inc
test
sub
cmpsb
pop
test
or
jl
mov
jbe
mov
or
pop
adc
or
push
inc
push
xor
cs
insb
add
adcl
pusha
xchg
rorb
out
out
mov
pop
dec
fildll
dec
cmp
cmp
enter
mov
adc
cmp
cmpsl
aad
adc
and
jp
mov
xor
mov
dec
shlb
inc
fsts
aaa
and
sbb
cltd
fiaddl
jbe
add
arpl
aam
add
dec
adc
std
push
aas
adc
push
and
sub
jle
fdivrl
aad
inc
mov
pop
push
lods
sahf
lea
xor
je
jle
outsb
pop
cmp
sbb
out
jmp
mov
aas
loopne
pop
xor
xchg
jo
lret
imul
into
loope
sbb
mov
or
cli
or
and
inc
imul
cmp
insb
or
in
cmpl
push
iret
aaa
fcomip
fisubl
leave
add
aas
ret
pop
or
fs
xchg
das
xchg
cmp
in
or
fs
subb
bnd
mov
xor
sahf
inc
ljmp
jge
jmp
add
lea
jne
or
ror
shl
xor
stc
sbb
sbb
mov
or
cmc
add
setae
push
push
mov
push
lea
jmp
fbld
adc
mov
cmpsb
pop
loopne
cli
int
mov
lea
loope
mov
mov
fwait
shll
mov
jg
dec
out
or
xchg
dec
xor
lcall
cmc
push
or
sub
scas
out
sub
sbb
icebp
or
cmovge
fldt
cmp
mov
jle
stos
pusha
fidivs
shrl
rcll
push
inc
imul
out
xchg
dec
or
lret
icebp
mov
sbb
xchg
in
inc
or
adc
inc
mov
xor
add
out
mov
arpl
lahf
push
pop
mov
out
mov
pop
sub
sbb
outsl
shll
into
int
cmp
mov
sub
and
lea
add
mov
mov
sar
mov
mov
call
pushfw
call
icebp
cmp
xor
clc
and
cmp
add
lret
mov
test
lret
out
xorb
fistpl
fidivrs
jg
arpl
adc
inc
in
pop
nop
lret
out
cli
dec
fwait
test
cli
xor
es
jne
mov
pusha
scas
jae
or
inc
mov
jp
sahf
lret
or
sahf
int3
test
push
dec
sub
rcll
mov
sbb
xchg
push
popf
ds
clc
sbb
into
das
jbe
pop
stc
mov
out
push
out
movsb
push
cld
scas
push
out
pusha
cltd
lea
pop
lea
pop
call
add
dec
outsb
je
jb
gs
outsl
outsb
outsb
arpl
add
cmc
neg
mov
call
ds
test
test
clc
inc
sub
dec
daa
xor
adc
loopne
xchg
and
and
jl,pn
std
mov
pop
ficomps
mov
bound
jne
push
mov
sub
aam
dec
fcmovne
inc
mov
pop
add
ss
andb
adc
add
inc
fldt
shlb
pusha
std
mov
mov
and
jae
ljmp
rorb
mov
daa
push
adc
pop
adc
sahf
dec
ljmp
test
hlt
cmp
add
ret
adc
xchg
xchg
outsl
pusha
aas
xor
shlb
insl
push
xchg
into
xchg
repnz
cltd
pop
stc
sahf
cs
pop
shrl
push
sub
pop
mov
jg
dec
scas
inc
mov
adc
dec
dec
pop
aaa
pop
push
sbb
adc
hlt
add
dec
lret
ss
add
fsubrp
cmp
push
mov
push
push
inc
cli
leave
ss
pop
dec
pop
cmp
loope
mov
inc
icebp
lcall
mov
push
lea
ja
jmp
sete
mov
cmc
add
shr
and
test
pushl
mov
pushf
pushf
call
cli
dec
xor
sbb
in
aam
into
stos
mov
adc
insb
xchg
lds
notl
jmp
fwait
mov
sub
in
mov
push
cli
scas
insb
mov
faddl
add
fs
ja
clc
cmc
clc
imul
pushf
cmc
movw
stc
add
pusha
pusha
pushf
lea
jmp
xchg
fsub
int3
jge
adc
rcrl
popa
dec
dec
dec
sbb
jmp
int
xchg
pop
add
adc
jl
xchg
dec
jp
in
xlat
sub
fistpl
movsl
je
and
mov
push
js
enter
leave
and
insl
cmpsb
fistl
jae
inc
add
xchg
jecxz
and
xor
dec
aaa
insb
sbb
in
lds
add
sub
mov
insl
xchg
add
push
in
pop
push
inc
dec
push
scas
shll
ror
imul
ljmp
pop
fisubl
and
pusha
sti
int3
add
mov
jne
dec
add
in
push
mov
rorb
call
xchg
xchg
jns
cbtw
in
mov
sbb
jecxz
or
sub
dec
jo
shrb
sub
inc
fnstcw
dec
or
pop
jno
lods
gs
add
xor
push
xor
jge
pop
gs
xor
mov
gs
mov
xchg
mov
xchg
cmp
movb
mov
jp
xor
stc
mov
fldcw
xchg
mov
pop
push
inc
out
mov
jae
xchg
js
mov
xchg
add
int
lods
lea
and
les
or
mov
xor
jns
dec
mov
in
and
int
lret
mov
lods
pop
push
xor
sbb
or
iret
imul
mov
es
inc
in
mov
or
inc
fisttpll
inc
jne
btr
test
mov
or
not
movzbw
sub
not
mov
mov
cmp
sub
pushf
stc
pushl
popl
cmc
cmp
cmp
jmp
cmp
sbbl
or
out
int3
stos
mov
insl
sbb
icebp
mov
add
popa
popl
fdivl
pop
test
ds
push
sbb
lea
sar
cld
add
iret
add
mov
and
xor
imul
arpl
arpl
shll
int3
out
bound
and
stos
push
fincstp
popf
sbb
ret
andb
jge
imul
push
jge
ficomps
js
push
jge
das
fdivrs
loope
xor
mov
sbb
je
outsl
fs
gs
imul
add
cwtl
imul
adc
jg
sbb
sahf
mov
pop
cmpsl
sarw
mov
or
lcall
add
andps
test
cmp
cmp
and
stc
push
pop
sbb
cmp
sbb
dec
mov
inc
jb
test
push
and
cmp
sahf
cld
adc
inc
cmp
stos
inc
call
insl
sub
jle
mov
mov
adc
add
push
lcall
imul
jns
pop
pop
xor
cli
aad
inc
outsl
jecxz
out
sbb
xor
push
test
jno
inc
inc
fxch
mov
clc
sbb
in
out
sub
scas
cmc
sub
aad
or
jbe
inc
push
gs
adc
pop
add
or
stos
fwait
mov
test
adc
mov
sbb
dec
inc
dec
dec
xor
cs
insb
add
gs
cs
insb
add
lea
xchg
addr16
imul
add
jns
enter
xchg
add
pop
jl
mov
xchg
xchg
scas
orb
dec
jg
cmc
sub
sbb
mov
push
xchg
lock
fidivrs
aas
xor
push
adc
and
add
pop
das
repz
adc
or
mov
inc
push
out
inc
add
or
push
xchg
jl
mov
mov
ror
stos
mov
ljmp
inc
or
cmp
mov
adc
fisttpll
adc
sbb
or
cmp
pop
push
or
out
mov
inc
stos
das
mov
rorl
push
mov
test
out
ss
lret
fneni(8087
test
icebp
dec
cmpl
sahf
test
fwait
clc
mov
pop
xchg
or
inc
xor
mov
arpl
sarl
lea
inc
popa
fs
or
fidivrl
lods
fisubrl
loopne
jno
jno
mov
aam
push
mov
clc
xchg
dec
stc
mov
or
dec
test
outsb
and
jb
mov
sub
popa
and
xchg
call
adc
cs
xchg
ljmp
leave
stos
sti
add
fmul
fadd
mov
pop
push
mov
xchg
mov
outsl
shlb
dec
add
out
dec
ljmp
add
cmp
insb
mov
mov
sub
push
xor
ret
scas
roll
and
call
mov
jo
bound
ret
mov
push
out
movsb
pop
mov
and
imul
and
cmp
push
or
aad
rol
movsb
xchg
jbe
loopne
mov
incb
aad
shll
cmp
loop
je
mov
mov
scas
sub
xor
jle
mov
dec
xor
pop
jbe
pushf
and
sub
aaa
imulb
rolb
fs
mov
push
inc
mov
loopne
out
push
pop
add
cmp
mov
dec
pop
fcompl
int
sub
subl
pushf
pop
or
mov
xchg
xor
adc
dec
pop
inc
sbb
fcom
ret
jnp
iret
adc
lahf
shr
cwtl
dec
test
in
shrl
stc
mov
imul
sbb
jp
pop
outsb
mov
nop
jbe
adcb
cmp
cli
xor
or
add
mov
sub
inc
dec
ficoml
mov
cmpsb
enter
movsl
add
or
cmp
fwait
lea
daa
cmp
add
xor
pop
mov
aaa
xlat
aaa
call
dec
ljmp
mov
aam
lcall
adc
sub
out
mov
xchg
xorl
stos
add
or
dec
sbb
popf
adc
mov
sub
arpl
inc
dec
in
and
roll
mov
daa
call
inc
repz
mov
mov
cwtl
fndisi(8087
jb
scas
je
test
push
mov
xchg
mov
xor
sub
pop
jmp
xor
out
dec
add
dec
mov
push
fisttpl
adc
push
push
push
or
jnp
loop
cltd
loop
mov
push
xor
mov
daa
xor
ja,pn
mov
into
lahf
xchg
insl
jb
or
sub
add
or
xor
in
int3
sub
xchg
repnz
push
inc
clc
popf
push
add
jne
cmpsb
out
mov
fwait
insb
jo
outsl
push
lods
cmpsb
xchg
xchg
lea
push
pop
xor
iret
test
xchg
mov
arpl
cmc
out
out
sub
stos
lods
push
pinsrw
lret
addr16
mov
push
mov
mov
push
loope
add
or
xchg
mov
fwait
pusha
lea
call
push
mov
pusha
pusha
movl
lea
jmp
sub
cmp
cmc
cmp
jmp
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
call
dec
movsb
outsb
adc
mov
js
inc
inc
xor
or
andb
call
mov
pop
push
loopne
les
gs
lock
mov
push
movsl
dec
jnp,pt
std
mov
test
loope
sub
sbbb
aaa
pop
add
sub
pop
dec
add
sbb
pop
int
shlb
inc
lods
inc
inc
sbb
dec
icebp
lcall
leave
sbb
sub
mov
iret
testb
iret
nop
fwait
adc
scas
clc
in
jnp
gs
cmpsl
shll
lret
repnz
fbld
clc
mov
push
or
mov
sub
sar
jl
adc
call
mov
lcall
sbb
or
xchg
push
repz
lock
ljmp
into
mov
and
cs
je
cmp
lret
dec
test
dec
pop
int3
mov
cwtl
cmp
jae
idivb
push
popf
movsb
xchg
cmp
in
push
push
inc
xor
sbb
icebp
out
int3
cmpl
lcall
xchg
cmp
add
xor
shll
mov
mov
vphaddwd
push
mov
mov
mov
pop
stos
iret
adc
jno
jb
jo
push
pop
mov
out
lret
sub
and
jecxz
push
add
or
xchg
lret
jae
or
xchg
pushf
mov
inc
dec
cmp
imul
inc
and
add
shlb
sbb
movsl
dec
ficoms
mov
daa
cmp
fsub
push
pusha
xchg
sub
jmp
mov
fidivrl
xchg
cmpsl
mov
cli
xor
inc
insl
inc
push
dec
cld
cltd
sarb
incl
movsb
pop
js
mov
and
cltd
cmp
movsb
pop
add
push
shlb
inc
cmp
push
lea
jb
pusha
cmp
pushf
push
pushf
lea
jae
cmp
test
adc
sub
mov
ror
cmc
shl
rol
mov
shld
shl
mov
stc
stc
cmc
cmc
xor
bt
pusha
jmp
rcrl
in
mov
scas
hlt
lds
sti
lock
fcmovb
mov
xchg
addr16
add
in
xor
in
rcrl
push
xchg
mov
dec
mov
stos
lcall
sub
adc
lock
adc
stc
inc
push
sti
add
ret
dec
lods
add
sbb
addr16
cli
and
sbb
pop
je
cmp
inc
adc
sti
inc
xor
xchg
push
out
mov
cmpsl
inc
mull
and
jno
push
outsl
pushf
pusha
lea
jb
pushf
jmp
or
mov
xor
js
dec
dec
xor
call
or
stc
xor
into
fs
dec
xchg
cmp
adc
dec
pop
outsl
sub
ret
outsl
mov
jae
cmc
lods
mov
mov
push
fwait
pop
mov
lods
cmc
mov
mov
mov
mov
insb
leave
int3
mov
adc
roll
loopne
fnstcw
mov
lret
push
dec
pop
adc
inc
pop
rcrb
fsubl
add
mov
movl
iret
xor
sarb
mov
out
ret
mov
outsl
fldenv
test
push
mov
mulb
mov
std
aas
fcmovnb
xchg
jecxz
xlat
and
out
jmp
fidivrs
and
add
or
pusha
jne
pusha
push
mov
jno
sub
inc
out
mov
cli
stos
adc
mov
sub
daa
ficoml
lahf
mov
cmp
cwtl
movsl
xor
repz
aam
mov
xchg
jns
push
dec
imull
outsb
mov
jbe
sbb
mov
repz
fnsave
sub
je
xchg
xor
loope
mov
daa
push
xchg
lock
sub
dec
dec
out
mov
subl
pop
push
mov
or
mov
fs
call
pusha
pusha
jmp
xchg
fxch
ja
jl
and
push
dec
xor
mov
aas
ljmp
test
in
ret
mov
xor
mov
scas
enter
lahf
mov
hlt
mov
sbb
jl
lret
fsubrl
sub
push
jecxz
sbb
mov
stos
add
cli
ret
jb
cwtl
xchg
adc
into
lea
fsubs
fdivrl
sub
dec
add
or
cmc
mov
repnz
push
in
mov
or
jle
adc
mov
call
sub
push
insl
dec
scas
addb
xor
and
sti
mov
test
push
outsb
sarl
add
out
outsl
push
push
push
test
push
push
sub
jne
addb
scas
dec
add
das
pop
adc
add
lds
leave
mov
sub
cmpsb
add
sbb
mov
loopne
loop
into
jnp
pop
jnp
faddl
pop
out
sarl
xchg
sub
icebp
xchg
sti
in
xor
mov
dec
xor
ja
push
or
scas
and
sarb
scas
mov
xchg
lahf
sub
xchg
and
push
scas
adc
pop
in
and
jo
and
xor
sarb
mov
mov
jg
sarl
fs
mov
cmovnp
dec
pushl
call
mov
hlt
mov
and
ja
and
inc
incl
movzbl
bswap
mov
lahf
lea
jmp
cmp
jns
adc
jle
imul
aas
sbb
add
les
sbb
and
jmp
mov
jb
idivl
jl
xlat
das
xor
xchg
cmp
xchg
pop
sbb
jbe
int3
jg
inc
fbld
and
sti
xor
mov
scas
push
push
out
mov
mov
cwtl
lods
hlt
jmp
xchg
sahf
daa
fdivp
mov
movsb
jne
push
dec
sub
popa
add
arpl
je
in
fimull
mov
int3
shll
push
test
stos
or
push
sbb
inc
xchg
call
mov
sub
cli
and
push
push
push
popf
push
inc
push
clc
xor
fildl
inc
jg
sbb
mov
cltd
sahf
inc
jle
in
pop
outsl
fisttpl
out
xchg
dec
in
cltd
inc
mov
adc
dec
sar
adc
dec
inc
sti
cmp
out
sbb
xor
sub
lcall
sahf
xchg
ds
outsl
test
dec
shrb
push
mov
jge
push
jb
jae
cs
dec
test
in
int
push
mov
mulb
mov
adc
and
mov
pop
stos
or
icebp
lcall
jg
cmc
xchg
xor
mov
mov
adc
add
shlb
dec
test
xchg
pop
aaa
sbb
repnz
movsl
bound
lahf
and
dec
cmp
stos
xchg
add
push
enter
xor
test
cli
cld
or
xor
out
and
js
jne
es
mov
ja
add
add
int
xor
mov
adc
lea
fists
mov
in
stos
repz
test
push
mov
dec
cmp
push
adc
movsl
dec
mov
mov
sub
decl
mov
lahf
jecxz
adc
lock
out
out
and
sub
pusha
or
insb
movsl
lret
popa
cltd
rol
ficompl
jo
rclb
cmpl
mulb
adc
imul
xchg
scas
pop
call
outsl
xchg
mov
and
sbb
out
jg
ja
dec
test
repz
push
add
aam
stos
lcall
mov
mov
sub
lcall
pop
pop
mov
push
sahf
inc
lcall
xor
xchg
push
push
inc
lods
mov
popf
popa
test
jp
aam
dec
stc
mov
adc
mov
sub
std
xchg
xchg
push
mov
ret
jle
push
in
lret
lret
jg
and
or
adc
lret
inc
cli
pop
jl
jge
jmp
dec
enter
pop
pop
ret
in
sub
test
mov
xor
scas
imul
xchg
push
ss
lds
out
xchg
add
jmp
pop
rorb
or
cwtl
imul
adc
cmc
ficoml
out
jbe
pop
mov
loop
cmpsb
lcall
sbb
push
shl
je
mov
test
je
fdivrl
fisttpl
lret
or
add
lods
jg
inc
repz
dec
cld
punpcklwd
lds
adc
cld
imul
int
movl
scas
pushf
xchg
jbe
fs
dec
sub
sbb
mov
mov
in
jmp
faddl
mov
jl
scas
repnz
int
dec
adc
loop
inc
and
push
movsl
push
lods
xor
outsl
popf
bound
stos
enter
sub
cmp
pop
pop
mov
lcall
push
adc
fisttpl
dec
fstps
jno
mov
imul
xchg
mov
and
addl
add
dec
movsb
sub
loop
nop
sub
gs
stos
cld
mov
xlat
out
int3
loope
inc
or
pop
or
je
adc
push
push
clc
inc
sarb
add
scas
pop
std
mov
pop
sbb
dec
add
pop
sub
or
and
in
fnstsw
or
scas
lods
frstor
push
testb
inc
out
inc
and
sub
xchg
dec
sahf
outsl
fwait
mov
pop
jae
addb
mov
negb
fisubrs
mov
mov
hlt
mov
mov
mov
repnz
gs
rcl
and
rorb
stos
pop
std
mov
mov
rcr
and
ftst
and
aam
push
std
add
lods
xchg
xchg
pop
cmp
fidivrs
push
pop
lods
push
jo
xchg
test
xchg
insb
mov
xchg
sbb
out
lcall
xor
out
or
lods
jp
mov
add
outsl
lods
pop
dec
dec
mov
add
pop
pop
mov
jmp
movsl
inc
outsl
lods
data16
fildll
sti
xor
std
or
inc
punpcklbw
inc
mov
lea
mov
nop
stc
pushf
mov
div
push
mov
in
add
lret
push
sub
jp
out
xchg
dec
jmp
push
in
xchg
inc
sti
mov
sub
adc
sbb
or
leave
test
mov
negl
jns
gs
add
loop
das
mov
addr16
sub
mov
aas
outsl
xchg
pop
inc
nop
popa
cmpsl
dec
or
cmpl
jmp
sahf
insl
mov
xchg
jns
outsb
push
and
and
sub
mov
es
or
dec
cmp
inc
sbbl
lahf
dec
add
dec
add
aaa
inc
mov
jmp
dec
hlt
mov
and
mov
ja
inc
and
xchg
jb
pusha
push
pushf
call
repnz
pushf
jmp
mov
hlt
rcll
lcall
movsl
xchg
jne
push
cmp
test
bound
fstpt
imul
cmpsb
negl
xchg
or
int
or
jb
arpl
icebp
test
adc
mov
and
mov
push
push
and
push
xor
in
ret
cmp
daa
les
dec
loop
fidivrs
gs
inc
sub
aaa
popf
mov
jle
push
mov
cmpsb
sub
enter
mov
or
cmp
ss
and
movsl
jp
xlat
dec
sbb
int
push
jl
xchg
lock
cs
add
jmp
cltd
push
repz
cmp
mov
lods
imul
mov
lahf
insl
int
and
xchg
cmp
movsb
dec
adc
adc
or
ds
fidivrs
lret
xchg
jl
pop
inc
dec
sti
sahf
jecxz
cmpsb
push
cmp
out
jle
push
psubw
xchg
cwtl
frstor
inc
dec
lds
mov
arpl
jl
jnp
mov
sub
inc
jno
mov
ljmp
pop
icebp
mov
jo
fcoms
in
ds
mov
ds
es
dec
in
push
adc
pop
inc
das
ss
call
aam
dec
loop
in
add
fwait
cmp
xor
std
jb
ja,pt
ds
sbb
jle
pop
xchg
int
movsl
aaa
xlat
jp
mov
imul
or
push
and
andb
mov
cmp
dec
jo
xchg
jle
ds
push
outsb
and
rcrl
pushf
push
repnz
ss
pop
or
adc
xor
das
push
aad
sbb
int3
lods
or
loopne
fmulp
enter
js
sub
jnp
mov
sbb
lcall
jp
pop
or
fs
or
std
aas
call
push
sub
bswap
sti
test
mov
cli
cmp
repnz
jmp
je
loopne
bound
ret
jp
sbb
cmpsb
push
int
mov
out
jne
adc
mov
sub
lods
pop
clc
mov
mov
push
xor
clc
inc
popf
sbb
xlat
xor
push
or
mov
test
adc
add
jmp
femms
lods
stos
fldcw
push
insl
adc
sub
int3
mov
or
scas
divb
in
cmp
jmp
mov
mov
mov
dec
push
sti
std
inc
pop
fistl
xor
push
mov
sbb
inc
adc
cmp
sbb
pop
cli
adc
subl
int3
jg
sbb
xor
repz
sbb
popa
push
mov
adc
cmp
jnp
ljmp
push
dec
dec
and
in
iret
aam
push
xorl
xchg
xchg
xor
sub
scas
out
mov
scas
mov
cmpsw
rol
insl
rorb
push
scas
dec
mov
xor
je
insb
mov
inc
mov
xor
es
std
dec
mov
pop
stc
aad
testl
in
call
or
mov
dec
lock
bound
mov
adc
int3
scas
movsb
mov
outsb
dec
lods
mov
inc
cmp
idiv
call
outsb
push
inc
jno
xchg
nop
sub
les
pushf
xchg
sub
in
cltd
in
xchg
je
int3
fucomip
xchg
xchg
loop
in
dec
jp
orl
jmp
push
sbb
inc
cmc
loop
js
fisubrs
loope
push
negb
adc
add
fs
cmp
and
push
push
xlat
and
stos
xchg
xchg
xchg
sbb
rol
jbe
xor
popa
cli
repz
aaa
out
add
push
pusha
pop
sbb
cmpb
sub
cmp
in
in
or
pusha
or
and
imulb
jecxz
testb
lret
fidivs
lret
mov
dec
jne
mov
jb
das
fs
aam
test
push
inc
mov
xchg
push
fwait
mov
test
rclb
rorl
push
cltd
inc
in
mov
das
pop
push
dec
call
jge
mov
sahf
push
in
xchg
scas
fdivs
shl
xchg
inc
xchg
sub
jl
push
adc
mov
cmp
ficoml
cld
xor
addr16
lahf
mov
push
sub
fisttpl
mulb
mov
fstpt
dec
inc
push
sti
lods
cmpsl
dec
xchg
mov
dec
mov
mull
pop
in
pop
getsec
sbb
scas
ja
sub
fxch
and
fs
in
jp
test
jo
push
mov
ficoml
inc
incb
das
fs
adc
mov
rcrb
sub
popa
mov
subb
push
push
jo
jns
popf
scas
insb
or
clc
adc
and
js
aaa
inc
jb
sbb
pop
or
cmp
and
clc
inc
int3
sub
mov
mov
xchg
and
inc
dec
adc
in
adc
lahf
pop
sbb
sub
xchg
push
add
adc
popa
fmull
push
lock
std
std
xor
xor
ret
ja
push
pop
int
sbb
mov
pop
loop
xor
xor
cmp
jge
mov
dec
ret
and
aam
pop
ret
call
xchg
mov
test
xchg
lea
push
sub
inc
xchg
mov
fidivrs
mov
pop
sti
ret
enter
fisttpl
in
jge
and
jne
jge
mov
mov
sub
add
mov
pop
sbb
aaa
ljmp
cs
mov
sbb
ret
int
popf
ret
adc
cli
or
and
jecxz
decl
xor
fists
add
or
sbb
mov
enter
push
mov
mov
imul
jne
dec
inc
add
push
jb
mov
icebp
fsubr
sahf
cltd
mov
pop
ljmp
fwait
dec
cmc
mov
xchg
push
cmp
pusha
pushf
lea
ja
bt
jmp
test
mov
lea
je
cmp
jmp
or
cmp
loopne
rolb
lret
leave
mov
jae
popa
dec
das
in
lea
loope
test
mov
dec
fcoml
test
xchg
dec
mov
fildll
inc
rorb
stc
or
or
sub
ja
xlat
xor
shrl
lcall
jb
subl
inc
mov
jae
ret
cmpsb
dec
adc
push
push
jno
pop
shll
inc
cltd
jp
cmp
testb
add
inc
or
jno
cmc
xchg
dec
in
mov
pop
jns
lea
je
test
sub
cmp
cmp
jmp
cli
inc
dec
sub
aas
call
cld
repz
jne
dec
or
clc
stos
pop
cmpsb
xchg
inc
cmpsl
sub
mov
mov
int
cmp
mov
inc
inc
mov
jl
aad
sub
lcall
sahf
iret
mov
scas
pop
jns
sub
mov
jo
lods
pop
or
roll
fbld
in
mov
mov
push
jmp
shld
adc
push
or
bt
sbb
push
cwtl
btr
sar
aaa
push
not
mov
bt
push
pusha
pushf
test
jmp
clc
bsf
and
not
mov
jmp
popa
mov
push
inc
mov
sub
push
dec
push
aas
xor
sbb
add
out
ds
sahf
ss
addr16
or
mov
leave
xor
dec
ror
or
and
and
mov
shll
add
in
mov
mov
pop
adc
mov
sahf
mov
jge
mov
xchg
push
repnz
dec
add
adc
push
pop
jle
lods
mov
jno
mov
inc
cmp
and
or
bound
cmp
add
and
mov
xchg
inc
pop
push
movlps
xor
or
mov
jge
dec
mov
out
daa
pop
or
push
xchg
je
push
dec
fcoms
or
lock
add
mov
jge
test
pop
neg
jecxz
mov
add
sbb
xchg
adc
adc
jbe
dec
or
outsl
push
invd
sti
add
call
call
xchg
push
mul
mov
pop
jno
pop
negb
cmp
scas
dec
arpl
loopne
jmp
rol
dec
sbb
inc
pushf
or
das
rclb
cmp
mov
mov
xor
fisttpl
xchg
adc
inc
repz
add
iret
sbbb
push
dec
ljmp
imulb
add
andb
lea
jne
push
push
pushl
mov
push
push
pushf
jmp
mov
clc
push
neg
mov
dec
pushl
movb
rol
clc
add
pushf
call
pusha
call
pushl
dec
clc
movb
rol
test
test
add
jmp
add
bt
stc
stc
movzwl
jmp
push
inc
push
inc
push
dec
xor
cs
insb
add
lds
or
jl
mov
loop
mov
sahf
mov
dec
dec
dec
or
inc
add
sub
movsb
mov
xchg
jns
dec
and
out
ret
leave
les
gs
test
lods
jge
in
mov
sub
jo
pop
pop
test
push
lds
add
stos
adc
aam
out
ja
push
fadd
sarl
push
gs
jne
jno
mov
cmp
xchg
lahf
sahf
jo
xor
pusha
std
jne
jae
adc
xor
xor
out
xorb
aaa
in
bound
movsb
inc
test
adc
sbb
arpl
test
jne
push
ds
loopne
lods
push
notb
mov
faddl
rcll
lds
out
cmp
incl
lods
dec
pusha
int3
setne
or
gs
dec
lcall
or
sub
push
popf
lret
cmpb
movsb
and
dec
sbb
aas
push
cmp
popf
in
in
in
lock
hlt
lret
ss
adc
xchg
rcl
sbb
fwait
xchg
sub
stos
push
enter
push
insl
cmpsb
imul
shrl
rol
pop
add
xor
xor
xor
jle
mov
xorb
mov
and
test
repz
inc
jp
int
dec
fbstp
xchg
iret
into
stos
mov
dec
pop
inc
repnz
push
lods
xor
lret
ljmp
dec
sahf
ds
ds
andb
mov
jb
jp
outsl
rolb
hlt
pop
jo
push
test
or
xor
adc
lcall
xchg
jp
lods
loope
xchg
jp
mov
pop
inc
std
clc
add
out
mov
je
iret
or
jl
mov
xchg
aam
je
aam
xor
mov
or
xlat
inc
lcall
xor
xchg
and
scas
pop
mov
mov
adc
sti
mov
insl
xchg
xchg
dec
dec
cmc
pop
lret
adc
ret
jb
roll
orl
inc
mov
mov
stos
xchg
push
fwait
out
gs
fistps
lods
add
mov
test
lds
enter
jl
loop
es
jle
adc
jecxz
dec
cmpsb
cmpl
xor
jg
arpl
sbb
sti
in
aam
insb
pop
lods
dec
bound
mov
loope
lods
push
hlt
popa
sbb
add
aam
inc
out
cmp
cmp
cmpsb
mov
jb
loop
aam
adc
cmpsl
pop
inc
rol
push
fs
xchg
inc
sbb
pop
scas
aam
movsb
jns
movsb
shr
aad
sub
iret
jb
rcr
test
sub
cmc
push
shll
out
cmp
mov
or
bound
jo
sub
not
mov
xchg
jl
bound
mov
loop
fwait
aam
bound
or
push
and
js
push
fs
ficoml
aas
scas
jae
in
mov
push
mov
pushf
sti
cmp
jmp
shlb
add
jae
sbb
scas
inc
mov
lock
bound
aam
cmp
mov
xchg
ss
cmpsb
pop
mov
and
mov
sti
int3
add
mov
xor
nop
lds
xchg
sbbb
lock
cmpsb
pop
mov
loopne
sahf
mov
add
std
cmpsb
imul
dec
xlat
pop
pop
lock
adc
pop
xchg
jbe
pop
daa
push
xorl
jo
adc
outsl
addr16
xchg
push
pusha
pusha
mov
add
sbb
jp
fisubrl
xlat
icebp
cmpsb
shlb
imul
lret
shrb
movsl
cwtl
dec
and
ret
pop
movsl
daa
mov
jb
and
cmp
sbb
push
mov
or
xchg
das
xchg
mov
mov
or
in
ljmp
movsl
pop
fwait
sub
cwtl
mov
sub
loop
enter
lods
push
les
add
pop
pop
push
add
fsubp
xchg
iret
je
fwait
push
dec
add
sbb
sub
adc
mov
ficompl
cmc
mov
push
pusha
jb
loopne
cmp
xchg
mov
sbb
cli
fmull
push
fcoms
mov
leave
addb
arpl
mov
sbb
cmp
les
sbb
popa
xor
sbb
or
sbb
fmull
imul
sub
dec
xchg
xchg
shrb
cmp
mov
sahf
mov
jnp
xlat
add
sub
mov
and
xor
mov
lahf
push
call
adc
sub
ja
movb
cmp
call
cmp
jne
adc
sbb
or
neg
mov
jp
sbb
add
mov
lods
cmp
in
xchg
xor
icebp
ljmp
gs
out
pop
sub
stos
daa
adc
orl
ljmp
adc
test
ret
nop
xlat
add
mov
jge
ficoml
sub
test
jle
stos
pop
jmp
push
adc
add
aad
in
inc
inc
fists
sbb
add
in
mov
xchg
jle
sub
inc
in
dec
je
fldenv
add
pop
xchg
cmp
nop
and
or
sbb
loopne
testl
cmpl
mov
mov
test
insb
xchg
call
fsubr
sbb
lds
jns
test
imul
push
das
push
movsl
in
jecxz
imul
jo
rorb
add
add
pop
add
mov
mov
shrl
bound
or
test
xchg
xchg
sub
out
push
add
pop
out
or
mov
push
daa
aam
jl
out
add
leave
loopne
out
loope
xchg
mov
adc
pop
les
lock
out
sbb
xlat
icebp
ds
lds
int
jae
cwtl
and
repz
rorb
push
addr16
fwait
xchg
lret
data16
mov
cmpsb
push
lret
addr16
jge
daa
lds
andb
into
in
mov
inc
add
sahf
lock
mov
sbb
sbb
and
in
pop
stos
imul
dec
iret
fdivs
pusha
dec
rorl
in
sub
jp
icebp
xor
pop
insb
sub
mov
jnp
jmp
sbb
xchg
sahf
pop
push
mov
or
inc
imulb
add
pop
sarl
mov
jge
out
pop
or
xchg
inc
loope
cltd
movsb
jnp
rorl
movsb
add
clc
in
cmp
mov
enter
sbb
ret
sahf
xchg
mov
imul
xchg
iret
jo
aas
and
push
std
daa
shl
mov
push
adc
stc
pop
add
ja
xor
sahf
xchg
push
adc
pop
mov
int
aaa
test
add
inc
and
lds
scas
nop
stc
stc
cmp
movzwl
test
mov
cmp
jmp
fisubs
unpcklps
pop
or
push
add
fst
ret
mov
xchg
aaa
loopne
fadds
push
lea
rorl
test
push
push
cwtl
pushf
testl
push
dec
cltd
pusha
imul
push
dec
je
fdivl
mov
leave
loopne
inc
mov
push
and
xchg
cmc
movsb
push
mov
iret
pop
je
jg
jecxz
cmp
mov
adc
sub
dec
dec
dec
cs
insb
add
cmp
add
mov
jnp
add
pop
sub
pop
push
ss
shrb
cmp
pop
test
inc
out
nop
flds
mov
sbb
sbb
jge
xlat
nop
cmp
aas
fsubs
test
cmp
xor
jns
sub
cmp
mov
subb
ds
inc
inc
add
and
jge
shrl
mov
mov
cmc
ror
pushf
stc
cmc
cmp
cmp
movzbl
push
lea
movsbw
mov
mov
push
call
pusha
mov
pushf
pushf
pushl
pushl
lea
jmp
mov
mov
pushf
mov
pushl
ret
ror
movzbl
shr
bsr
mov
cmc
cmc
test
or
call
repnz
ss
sti
pushf
in
fidivrs
rol
mov
xchg
jno
dec
add
jo
shlb
sub
fst
call
cmc
sub
jmp
test
out
pop
mov
dec
pop
int
pop
cwtl
arpl
sub
or
dec
mov
mov
lock
sub
xchg
scas
enter
dec
mov
pop
sub
push
repnz
jnp
mov
nop
xor
lea
aad
inc
hlt
test
push
ficompl
or
out
stos
js
rorl
stos
fwait
xchg
xchg
fs
ss
ja
arpl
mov
inc
fists
ret
adc
sahf
ljmp
sub
mov
jp
popa
xor
xor
jae
pop
notb
sbb
lahf
pop
sbb
scas
adc
or
ret
add
dec
in
sub
xchg
mov
fdivrl
faddl
sub
aam
adc
mov
sub
xorl
mov
adc
ficoms
add
ja
jbe
dec
jne
push
gs
je
call
pop
movsb
mov
cld
mov
xchg
xchg
insl
push
insb
xchg
inc
fwait
ret
inc
sahf
xchg
ds
stos
jecxz
mov
int3
das
ss
notb
ret
jg
out
sub
outsb
xor
lcall
mov
rorb
shlb
loope
and
les
cld
popf
and
jnp
mov
mov
mov
add
and
test
cmpsl
call
loop
popf
shlb
shld
mov
call
cmp
bt
movzwl
not
and
stc
stc
mov
jmp
aas
aam
sub
movzbw
pusha
cwtl
ror
mov
rol
add
rcr
cmp
mov
pushf
stc
pushf
test
push
pushf
call
je
mov
adc
inc
and
ss
es
xchg
cmpsl
sti
scas
out
xchg
push
or
mov
pusha
jae
test
fwait
cmp
mov
jno
xchg
sbb
cltd
into
jg
push
outsl
xor
dec
test
lods
cli
cmp
jbe
mov
mov
and
sub
ficoml
scas
leave
dec
aaa
mov
push
lea
mov
lcall
sarb
mull
std
mov
sbb
mov
xchg
xchg
mov
in
nop
in
xchg
nop
cltd
mov
in
mov
movsb
xchg
mov
in
popf
mov
movsb
cwtl
pushf
mov
lcall
xchg
mov
loopne
test
je
add
roll
stc
test
test
pushf
jmp
adc
inc
add
inc
incb
loope
xor
invd
in
mov
sbb
jp
mov
dec
fstl
mov
cli
rclb
out
or
sub
dec
mov
sub
stos
mov
popf
ss
sub
psraw
test
mov
inc
aad
cmpsb
fildl
xor
jmp
cmp
loop
inc
jl
xor
inc
and
pop
nop
dec
adc
cli
mov
js
xchg
cmp
push
orb
inc
mov
mov
and
mov
fmuls
dec
les
dec
nop
xchg
mov
mov
movsl
scas
jp
pusha
cmp
in
mov
xorb
push
mov
jns
out
lcall
shrb
std
or
xor
dec
mov
pop
dec
xchg
icebp
mov
cmpsb
xchg
sahf
pop
xchg
mov
je
sbb
or
jecxz
xchg
xchg
arpl
popl
inc
hlt
lahf
dec
jmp
pop
mov
sub
push
aaa
push
in
xor
cmp
or
nop
jno
and
loopne
lret
dec
xor
mov
sbb
xchg
aas
je
fisttpll
mov
xchg
insb
inc
stc
cld
inc
test
cmpsb
fstpt
iret
lods
xlat
mov
mov
popf
fiadds
jg
fcoml
mov
pop
testl
push
negb
cmp
mov
mov
rorl
je
add
xor
rol
mov
pushf
sub
mov
rep
call
push
lea
call
jmp
rcrb
or
or
shlb
nop
outsl
push
inc
push
mov
pop
jle
mov
mov
std
out
lahf
fsubrs
scas
out
xlat
daa
pusha
test
int3
ds
xor
jmp
stos
jl
pop
mov
mov
pop
pop
movsl
pushf
jecxz
adc
stos
xor
test
adc
cmp
push
out
aam
dec
push
adc
movsb
push
in
push
cmpsl
js
les
std
mov
sti
les
adc
test
call
lea
jne
call
sbb
sub
daa
sbb
or
cmc
mov
nop
cmp
in
or
lods
outsl
int3
insl
sbb
mov
filds
cmc
out
out
aas
call
data16
add
fisubrl
fistps
adc
pop
and
and
dec
sbb
push
pop
mov
jnp
aad
push
fwait
inc
add
xchg
lret
jg
lods
push
push
lret
xor
sbb
out
movsl
dec
repz
push
int
cmp
mov
insb
clc
jmp
sub
rclb
cli
dec
cs
fmul
mov
std
pop
into
jle
inc
xor
push
andb
aaa
insb
gs
xor
adc
outsl
je
push
std
jno
repnz
inc
dec
jp
pop
push
aad
into
out
sub
or
int
xor
out
cmp
sbb
ss
sub
movsl
iret
mov
sub
pop
mov
mov
sti
lock
cs
sub
rcll
in
ret
jo
pop
pop
gs
sub
pop
mov
lds
aad
mov
cmp
xchg
lock
dec
push
lock
mov
inc
jl
cs
xchg
inc
stc
shrb
pop
adc
stos
dec
cmp
clc
neg
cmc
sub
pushf
lea
jno
push
ror
jmp
pusha
lea
jne
call
icebp
cmp
mov
stos
xor
ret
adc
call
mov
fs
mov
frstor
test
mov
stos
repz
cmpsb
filds
ss
out
stc
cs
repnz
mov
adc
arpl
popa
lahf
inc
mov
push
scas
xor
mov
or
in
adc
fidivrl
mov
gs
pop
sub
and
in
adc
int3
test
ret
xlat
xchg
aas
loopne
pop
or
dec
mov
pop
adc
mov
pop
dec
sub
push
adc
mov
and
test
lcall
push
mov
pop
mov
rorl
aas
lock
mov
fs
loopne
cmp
addr16
filds
pop
daa
xchg
mov
jae
xchg
lods
or
or
test
cmpsb
imul
loopne
test
test
sub
inc
cmc
pop
and
mov
stos
int3
xor
aaa
loopne
push
std
scas
pop
adc
push
repnz
in
sub
lret
rclb
in
in
ret
mov
movsl
ljmp
jae
sbb
or
xor
insl
ja
mov
cwtl
aam
insl
and
push
mov
or
or
inc
andb
add
outsl
adc
inc
push
inc
leave
in
in
enter
mov
push
loope
lret
js
popa
and
sahf
xchg
pminsw
cwtl
dec
scas
dec
in
mov
lret
pop
mov
inc
jb
popa
mov
sti
stos
popa
mov
or
aad
les
daa
in
lret
pop
inc
cmp
into
mov
fdivrp
test
rolb
or
mov
sbb
jecxz
sub
pop
cmpsb
inc
loopne
add
cmp
popf
loop
popf
sbb
jno
scas
pop
and
stos
movsb
inc
cli
popf
pusha
std
ret
jecxz
das
rclb
add
fs
je
cmp
bt
add
jmp
stos
add
repz
mov
cmc
ret
mov
pushf
cltd
xchg
jno
popa
push
bswap
cmpsb
dec
push
sub
sub
pop
jp
jle
popf
add
lret
scas
push
cli
bswap
lds
cld
mov
or
call
movsb
mov
pop
jbe
subl
push
aad
fs
cs
or
iret
fdivrl
mov
pop
inc
loope
pop
push
mov
or
mov
dec
xlat
adc
mov
imul
jnp
mov
nop
stos
add
icebp
scas
clc
xlat
lock
mov
jae
inc
xor
or
push
xchg
das
xchg
pop
or
add
fwait
or
into
lds
mov
lcall
jmp
mov
out
repnz
push
mov
sub
repnz
subl
mov
jne
gs
cmc
xchg
dec
push
mov
js
sahf
jns
or
inc
clc
cmp
jo
cmp
inc
add
xor
fs
mov
or
lds
stos
scas
mov
inc
xor
push
and
mov
pushf
call
lahf
dec
sub
or
mov
xor
push
and
pop
outsb
xchg
leave
xor
test
push
movsl
out
fwait
adc
cmc
pusha
aam
jg
cmpsl
pop
cltd
popa
xchg
fcmovu
pushf
pop
or
xor
jl
aam
adc
inc
sahf
mov
pusha
pushf
mov
bswap
mov
push
pushl
ret
movl
pusha
mov
push
push
pushl
ret
push
lea
jne
and
shld
shld
xor
or
cmc
mov
pushf
add
clc
mov
push
test
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
inc
and
inc
sbb
and
movb
jmp
add
not
not
seto
pusha
mov
pushf
lea
jmp
fsubl
gs
out
mul
les
bound
cmp
xchg
mov
lods
mov
fdivs
mov
jle
std
mov
push
jp
lcall
enter
lahf
in
cmp
movsl
adc
mov
dec
inc
xchg
fisubl
dec
mov
jo
add
lock
mov
cmp
data16
push
repz
adc
push
inc
xchg
adc
clc
bt
clc
clc
cmp
jmp
cmp
sub
xor
cmp
or
out
mov
push
repz
gs
clc
lahf
xchg
test
lret
imul
mov
pop
ds
ljmp
mov
aad
and
jno
int3
sub
and
or
add
test
pop
mov
sub
push
clc
repnz
shr
adc
std
sbb
js
xor
fwait
pushf
dec
loope
mov
test
fistpl
adc
addr16
popa
add
jo
fiaddl
mov
sarl
addb
mov
dec
cmp
neg
fdivrl
xor
push
ret
jecxz
lock
hlt
iret
fsubp
cwtl
add
sti
hlt
lods
les
sti
ret
pop
into
leave
orb
cmpsl
adc
mov
mov
jg
into
pop
es
mov
dec
jmp
cmp
cmpsl
pop
mov
mov
dec
sbb
sub
into
stos
xchg
out
cmp
subl
jmp
jp
rcrb
aam
call
nop
inc
ljmp
leave
mov
cmp
mov
ret
pusha
cmpb
call
pusha
mov
dec
adc
bsf
sub
btr
lea
cmp
sub
movb
pushl
pushl
popl
jmp
pusha
pushf
mov
call
add
bts
and
bswap
cmc
mov
pushf
sbb
pusha
sub
mov
call
test
movw
pushf
lea
ja
jne
push
mov
push
mov
pusha
push
pushf
mov
jmp
pusha
sub
test
push
cmc
cmp
push
mov
lea
jae
pushf
pushf
movb
pusha
lea
jmp
mov
fistpll
xchg
jl
dec
dec
cmp
and
shrb
pop
ret
fs
aaa
jge
loope
pusha
pop
mov
and
mov
cld
mov
hlt
bound
mov
mov
or
sti
pop
mov
jmp
sbb
in
inc
push
xchg
push
adc
sub
cmp
or
dec
mov
inc
repz
cld
scas
mov
cld
mov
sbb
cmp
adc
loopne
btr
mov
push
clc
cmp
push
add
pushl
mov
pushf
test
pushf
pushf
lea
je
push
test
stc
mov
add
pushf
cmc
clc
pushf
cmp
mov
pushl
mov
lea
jb
pusha
cmp
jmp
mov
test
loope
mov
lods
jle
push
inc
xor
add
lods
fdivs
pinsrw
jmp
mov
stc
daa
jbe
dec
ljmp
pop
adc
sub
push
sbb
add
das
jnp
jns
lahf
enter
das
xorb
xchg
push
fwait
push
dec
test
mov
mov
jae
repnz
pop
daa
rorb
cld
repz
clc
or
pop
push
lret
cmp
js
adc
sub
fmull
rclb
or
shr
cltd
int3
or
out
sub
shlb
push
shlb
mov
xor
pminsw
lret
dec
scas
and
jo
rorl
mov
xchg
lods
out
call
int
lahf
js
lret
or
dec
mov
push
push
subb
dec
arpl
add
jno
adc
jecxz
out
jo,pn
adc
loope
cmp
cltd
ret
mov
jb
outsl
sahf
lret
ret
ja
mov
test
mov
xchg
je
in
pop
jle
cmp
out
fadds
out
xor
shll
das
and
jns
movsbl
imul
testb
sbb
adc
pop
jl
call
mov
push
dec
adc
scas
jbe
ret
aad
aaa
mov
or
fs
je
call
popa
mov
lret
jbe
xor
push
xor
sub
push
insb
adc
and
xor
sbb
pop
jmp
fistpl
repz
cwtl
shl
fwait
cmp
xchg
sbb
in
sub
dec
jo
cwtl
or
xchg
mov
cmp
bound
fs
push
sti
and
fldt
shlb
sub
call
inc
or
inc
les
outsl
jmp
push
stos
mov
mov
add
cmp
sbb
out
in
sub
ja
imul
or
and
stc
dec
std
lods
pop
mov
mov
push
mov
adc
jl
fimuls
pop
fsubl
das
push
push
push
or
lods
dec
jge
stc
lcall
inc
inc
mov
imul
mov
pop
dec
das
adc
add
rolb
pop
les
sahf
xlat
rcrl
repnz
lock
movsl
out
dec
fdivs
mov
shrb
pop
adc
stc
test
push
cmpsl
out
out
loop
sub
xor
or
std
add
iret
and
inc
jnp
push
insl
sbb
mov
adc
jns
fldenv
jg
push
mov
decl
sbb
lcall
xchg
xchg
push
inc
lock
inc
cmp
pop
hlt
jmp
mov
mov
orl
gs
push
scas
xor
fidivrl
cltd
dec
pushf
nop
push
test
mov
or
push
mov
push
pop
lds
movsb
scas
data16
or
xchg
inc
dec
mov
mov
mov
jl
mov
pop
pushf
leave
les
xchg
test
xor
push
pop
dec
adc
push
sbb
sarb
cwtl
pop
stos
or
out
mov
pushl
aas
lock
dec
mull
in
outsl
shlb
pop
iret
xlat
xlat
lods
lock
ljmp
and
and
xchg
mov
add
xor
cmc
push
stc
jb
add
mov
xchg
sbb
push
cmpsl
jno
iret
popf
jbe
mov
jne
xchg
mov
sbb
and
pop
inc
jmp
push
jg
sub
sahf
xchg
mov
pusha
pop
mov
mov
addr16
scas
push
out
in
sub
outsb
cwtl
lret
dec
dec
aad
push
in
inc
mov
test
out
cli
aam
outsl
test
and
lds
xor
cmpb
cmp
shll
xor
divb
fistps
lcall
cmp
cmp
jb
ret
stc
enter
fists
es
int
das
mov
ds
out
and
pop
lret
xchg
adc
and
out
jnp
mov
cmpsl
daa
cmp
cs
ficoms
fsub
imul
fnstsw
daa
sub
adc
ljmp
inc
in
mov
xchg
stos
roll
jnp
xchg
xor
mov
scas
enter
mov
aas
cmc
scas
lcall
push
cli
dec
jmp
in
sbb
inc
jne
lods
pop
shl
xchg
sar
push
gs
fldenv
popf
ret
test
repnz
dec
jae
lods
icebp
es
test
add
dec
aas
ds
mov
inc
mov
in
and
xor
sbb
fists
scas
push
xchg
nop
xor
scas
pop
sti
mov
cld
stos
pusha
or
jg
adc
xor
adc
or
lahf
repnz
fisubrs
mov
cmp
fdivrs
cmp
cld
andb
sub
adc
push
adc
out
add
fimull
es
sbb
sbb
pushl
pop
cs
fsts
movsb
jmp
or
aas
lahf
pop
xor
fistpl
or
int
or
jmp
sub
lret
jecxz
cmp
sub
xchg
cld
mov
mov
call
call
add
inc
jb
ja
imul
lea
ja
pushf
bt
imul
pushf
push
pushf
movw
lea
jmp
scas
jne
bound
cmp
pusha
pop
scas
int
xchg
jne
pop
scas
int
xchg
jbe
std
adcl
xchg
test
xchg
jne
pusha
scas
int
xchg
push
and
jne
test
lds
int
jbe
sbb
cwtl
cld
sbb
stos
in
xchg
dec
call
mov
mov
pop
stos
xchg
xchg
xchg
pusha
jecxz
int
xchg
les
mov
jbe
push
or
xchg
xchg
aas
sarb
add
push
push
xchg
xchg
andl
xchg
jbe
fs
xchg
xchg
mov
fldt
int
xchg
mov
repz
jne
pop
scas
int
xchg
jne
popa
scas
int
xchg
inc
xchg
adc
and
into
enter
jp
add
mov
xchg
xchg
jbe
add
sub
or
lret
push
andl
stos
jb
xchg
xchg
jne
outsb
xchg
int
xchg
and
scas
jne
pop
scas
int
xchg
jbe
lcall
clc
inc
loop
loopne
sub
mov
pop
jbe
out
mov
xchg
jne
pop
scas
int
xchg
orl
jne
pop
scas
int
xchg
jle
scas
jne
andb
xchg
xchg
mov
and
int
xchg
jbe
stos
int
xchg
aas
sub
scas
jne
popa
scas
int
xchg
dec
mov
scas
jne
pop
scas
int
xchg
popf
iret
std
scas
jne
pop
scas
int
xchg
jo
pop
aam
xchg
cs
shlb
aas
lds
xchg
in
adc
mov
subl
xchg
xchg
jne
in
int
xchg
xor
ds
int
xchg
scas
pop
shrb
fcoms
icebp
push
jbe
out
ss
xchg
shll
scas
jne
bound
xor
inc
scas
jne
sti
ror
xchg
xchg
or
pop
scas
int
xchg
jne
push
mov
xchg
xchg
xchg
xchg
leave
scas
jne
mov
into
xchg
xchg
loope
jne
push
out
int
xchg
adc
and
ja
loop
int
xchg
jbe
and
gs
scas
jne
outsb
test
xchg
jne
sti
inc
xchg
xchg
jne
xchg
pop
iret
xchg
xchg
ss
jne
pop
scas
int
xchg
stos
inc
movsb
scas
jne
mov
rclb
frstor
out
pushf
push
stos
jl
mov
mov
dec
inc
sub
pushf
jp
inc
sub
xchg
sub
sub
push
fdiv
xchg
daa
pusha
adc
adc
cli
jmp
mov
pop
test
ret
cwtl
xor
cwtl
mov
xor
std
sub
movsb
pop
adc
or
pop
fmuls
ss
sbb
push
cmpsl
jmp
hlt
mov
jae
lret
jbe
lock
adc
push
push
xor
iret
push
push
mov
push
pushf
pusha
movw
lea
jmp
shrl
sub
shlb
fmulp
mov
ja
aas
call
shrl
loopne
push
das
pushf
inc
mov
push
fsubrl
mov
jecxz
push
das
js
xchg
mov
cli
mov
inc
je
ljmp
int
jg
sub
dec
pop
inc
out
add
jg
mov
xchg
jge
xlat
js
fidivrl
jecxz
aaa
out
mov
mov
jp
mov
mov
imul
sbb
or
repnz
rolb
fcompl
fsubrs
stc
push
mov
jg
lds
add
mov
sahf
push
cmpsl
rep
fisttpll
gs
adc
mov
adc
leave
mov
adc
je
mov
mov
popa
lods
inc
les
shlb
insb
or
subb
adc
or
jmp
sahf
jg
daa
xor
inc
sub
jecxz
and
sti
fcmovbe
mov
cmpsb
cltd
push
adc
sarl
popf
lods
xchg
pop
mov
push
adc
and
cld
roll
sti
scas
daa
test
out
imul
pop
push
fwait
rolb
inc
add
pop
call
sub
popf
xchg
leave
push
lods
fwait
sahf
movsb
fst
mov
cmc
push
stc
push
jnp
add
xchg
cmp
insb
jbe
call
scas
outsb
sbb
cltd
cmp
stos
inc
push
mov
outsb
cmc
pusha
clc
cmp
push
lea
movsbw
mov
jmp
pushl
lea
jne
xadd
push
mov
pushf
xor
bswap
sbb
sub
pusha
lea
cmc
sub
bt
bt
pushl
popl
push
pushl
cmp
jmp
xor
or
pop
dec
inc
sub
sub
fadd
je
inc
aam
mov
ss
mov
jl
push
mov
pop
dec
cmp
mov
add
dec
xor
repz
pop
push
xchg
inc
movsl
mov
adc
jne
mov
sub
out
in
pushf
imul
mov
adc
call
sbb
cli
xor
in
xchg
call
out
clc
push
ret
adcl
arpl
xchg
icebp
es
sub
cmp
mov
jnp
cli
into
sbb
mov
das
jbe
gs
mov
out
inc
test
mov
jae
aam
add
addr16
insl
out
mov
jno
pop
inc
stc
sti
push
sub
loopne
push
ljmp
mov
mov
mov
pop
jo
pop
cltd
cmp
dec
fst
inc
aam
xchg
decb
mov
xor
pop
mov
sub
push
and
int
mov
or
nop
idivl
jl
xor
and
mov
fcompl
addr16
mov
push
sub
and
out
pop
sbb
add
sbb
js
repnz
jmp
dec
xchg
xchg
push
push
push
ds
inc
xorb
pushl
stos
adc
daa
push
sbb
or
mov
movsl
mov
rcl
mov
scas
cli
gs
mulb
pop
and
into
aaa
cmp
sub
xchg
insl
iret
jp
mov
sti
cmpsb
adc
or
and
mov
inc
shrb
sbb
mov
sahf
outsl
test
nop
test
cmp
adc
lds
inc
dec
lahf
push
fwait
xchg
or
stos
adc
fldl
dec
fwait
jp
fsub
cmp
adc
inc
jp
dec
lea
mov
ret
sub
decl
mov
xchg
inc
dec
sub
rorl
mov
push
add
in
cmpsb
mov
fsts
jge
popa
popw
aaa
xchg
push
xchg
cmp
lods
popa
push
aad
das
rolb
dec
mov
xor
cs
insb
add
mov
add
inc
and
xor
or
test
rolb
mov
xchg
xchg
inc
fstpt
push
imulb
cs
push
shlb
sbb
push
fisttps
dec
push
std
cmp
pop
idiv
gs
lock
cmpsb
sar
insb
jns
mov
add
cmp
rolb
fists
out
cmp
fwait
bound
lret
ss
cmp
push
and
dec
xchg
xchg
jb
push
aaa
sbb
insl
and
sbb
and
mov
and
or
cmp
fwait
cmp
leave
dec
push
and
shl
and
fcomi
das
mov
jg
and
sub
push
dec
ss
movsb
out
pusha
imul
xchg
cmp
stos
dec
imulb
sbb
addr16
pop
cmpsl
xor
call
std
repnz
fnstcw
shr
sahf
faddp
das
loop
mov
and
xor
in
cmp
enter
mov
add
jl
int3
xlat
loopne
cmpsl
add
repz
imul
or
xchg
dec
xor
out
sar
inc
and
xor
mov
dec
inc
inc
aad
xchg
inc
cmp
lcall
push
xchg
push
cmpsb
mov
mov
add
lea
ljmp
adc
xor
sbb
hlt
lds
in
aad
fnstsw
push
mov
push
jge
addr16
loopne,pt
push
imul
push
cmp
cs
mov
nop
inc
sbb
cmp
cmp
sub
jo
xor
pusha
mov
mov
fcoml
movsb
xchg
or
and
int3
or
xor
scas
sbb
fistpll
or
fistl
mov
cli
cltd
pop
popa
imul
xor
mov
add
xchg
mov
mov
insl
js
lcall
dec
xor
cs
xorb
in
push
xlat
bnd
mov
aam
xor
es
inc
repnz
fiaddl
xlat
nop
xlat
jae
data16
scas
repnz
shlb
lcall
xchg
aad
scas
xchg
adc
or
outsl
fadd
repz
pusha
mov
aas
add
fdivrl
fnstenv
int
push
and
sbb
add
sub
pushf
bound
adc
mov
inc
jmp
dec
out
test
mov
xlat
pop
mov
jle
cmp
mov
loope
adc
hlt
sarl
or
xor
rcrl
xor
in
icebp
pop
dec
jecxz
stos
imul
push
or
sti
push
pushf
bound
insl
int3
sub
adc
add
addr16
sahf
push
addr16
mov
call
push
add
fsubs
push
mov
data16
pushf
jmp
rol
bt
stc
lea
jle
add
clc
call
mov
pusha
call
stos
add
fisttpll
shll
add
or
mov
pushf
xchg
mov
in
mov
fistpl
and
sub
fistl
cld
cmp
out
aaa
pop
xchg
leave
jp
cmp
daa
insb
leave
out
mov
add
dec
lods
loope
and
fildl
imul
and
movsb
fstl
mov
and
xchg
inc
repz
push
mov
mov
mov
movb
mov
lea
jae
adc
shl
mov
not
or
sub
mov
stc
cmp
ror
mov
push
pusha
xor
call
pusha
lea
je
cmp
pushf
movb
cmp
pusha
lea
je
push
lea
jmp
jmp
js
mov
repnz
mov
push
cmp
and
lock
sahf
cmp
dec
jbe
push
sahf
jns
adc
fldcw
in
push
or
push
outsb
mov
add
call
aam
pop
mov
inc
loop
and
in
add
pop
pushf
sbb
xor
push
cmp
jle
jae
mov
mov
jne,pn
mov
adc
or
insb
and
jg
jmp
pusha
mov
sarb
cmpb
sub
adc
icebp
cmp
or
out
icebp
out
fcmovnb
mov
push
cmc
jns
icebp
adc
pminsw
and
sub
js
aaa
popf
xchg
fsqrt
inc
mov
arpl
xchg
clc
add
stos
js
jbe
inc
mov
dec
mov
fisttpll
in
fisttps
insl
push
cmpsl
dec
bound
int
es
sub
std
ficomps
ret
mov
aad
sub
xchg
inc
cmc
movsb
pop
cld
cltd
dec
adc
testl
xor
loopne
lods
lahf
test
fiadds
aaa
movsl
pop
mov
cltd
testl
int3
mov
mov
scas
aaa
dec
shlb
mov
jg
jo
xchg
ljmp
gs
int3
mov
push
lods
dec
push
sahf
mov
js
mov
sub
push
or
xor
xchg
push
lock
sub
adc
loope
les
jae
sub
scas
lods
dec
sbb
sub
fidivrs
pop
scas
leave
push
xor
jg
mov
sub
cmc
stos
les
test
adc
push
xchg
cmp
movaps
cmp
dec
fsubrl
add
inc
std
or
in
mov
mov
in
dec
stc
stos
cmc
sbb
mov
mov
mov
adc
jle
out
inc
call
adc
push
fsubrs
mov
out
rorl
push
out
clc
repz
rol
mov
inc
and
mov
xchg
inc
mov
cmpsb
nop
push
dec
in
ds
push
push
sti
clc
cmp
xor
outsl
xor
shll
mov
addr16
insl
mov
jns
or
sbb
hlt
hlt
mov
es
inc
push
movsl
adc
xchg
in
or
fwait
or
into
cld
ret
mov
adc
mov
movsl
out
jmp
pop
add
pop
dec
addr16
jns
sarb
and
xchg
xor
popf
pop
or
leave
dec
pushf
jecxz
and
mov
fld
cmpsl
lods
mov
push
dec
sub
jp
pop
sahf
ror
xchg
pop
mov
dec
out
dec
lock
pusha
popa
imul
mov
negb
sub
frstor
nop
lods
out
ds
aad
cs
add
call
stos
sbb
jne
cltd
and
cmp
xchg
ret
mov
pop
and
test
jnp
dec
adc
or
dec
inc
sbb
inc
mov
bound
xor
call
dec
negb
mov
or
inc
adc
and
jmp
inc
adc
add
mov
rcll
jmp
mov
nop
cmp
adc
je
mov
cmp
cmp
sti
movups
adc
daa
aam
and
pop
cmpb
aaa
loop
adc
jbe
lret
cmp
clc
scas
push
pop
fdivrl
fisttps
repz
ss
call
pop
call
std
hlt
in
lock
mov
adc
lret
inc
mov
cmc
mov
jmp
clc
xchg
mov
sub
add
mov
jmp
xchg
lods
loope
xchg
mov
es
test
fnstenv
and
loop
stc
push
jnp
inc
mov
cld
pop
cld
rcl
test
add
mov
add
andb
jnp
fstl
hlt
lea
je
push
sub
mov
stc
cmp
movw
pushf
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
pushf
movsbw
pushf
mov
pusha
pushf
push
pushl
ret
lea
jb
call
test
mov
jnp
scas
mov
push
xor
sbb
mov
mov
lret
push
push
insb
loope
es
clc
loope
hlt
loope
scas
xchg
int
fbstp
sti
add
dec
dec
mov
xchg
das
aam
cmp
xchg
push
add
in
dec
enter
roll
loopne
int3
stos
mov
jne
popa
sbb
imul
pop
dec
outsl
xor
mov
xchg
notb
jg
in
jns
fidivs
mov
xchg
pop
adc
in
cmp
xor
daa
push
fistl
out
aas
push
xor
push
xor
dec
iret
cmp
mov
lcall
xchg
xchg
mov
scas
cmp
data16
es
lds
xchg
test
jmp
in
mov
clc
cltd
pop
std
xchg
mov
mov
jbe
sub
outsb
mov
loop
into
lret
mov
cltd
push
outsb
aas
add
and
data16
fisubs
push
push
push
and
xchg
add
dec
adcb
xorb
sar
mov
pop
xchg
jae
popf
jmp
scas
inc
jne
dec
mov
imul
sbb
outsl
jmp
push
inc
cmp
sarl
inc
pop
loop
ss
je
mov
pop
lret
out
cmpsb
inc
add
rcrb
inc
mov
adc
sbb
xor
jo
inc
pop
sbb
ret
pop
pop
sti
and
jnp
push
aam
pop
push
pop
cmp
mov
mov
call
daa
jp
pop
pop
lock
insb
xor
sbb
dec
pop
iret
push
jle
mov
mov
pusha
ficoms
arpl
rorl
lds
rclb
imull
cli
push
xor
in
fsubrs
mov
rcr
mov
gs
cmp
and
movsl
das
mov
shlw
sbb
xor
and
clc
arpl
fsub
dec
mov
dec
ja
sub
add
fnstsw
adc
or
pop
pop
aam
inc
pushl
jmp
inc
sub
mov
test
add
mov
mov
filds
ljmp
mov
adc
imul
out
inc
and
in
out
in
stos
mov
sahf
xchg
mov
pop
dec
in
iret
jp
pop
pop
into
ficompl
xor
loope,pt
loopne
jmp
sbb
pop
out
cmp
xor
adc
cli
xor
insl
pushf
in
and
call
mov
xchg
int3
add
insb
insl
test
xor
xorl
cli
sbb
mov
adc
inc
stc
cmpsb
push
adc
sbb
jl
mov
mov
fs
sbb
js
dec
xor
adc
les
inc
push
jo
fwait
adc
shr
mov
adc
movsb
push
inc
repz
shrl
cltd
mov
or
add
or
cmp
cmpsb
out
repz
xorb
push
and
sahf
bound
sahf
loopne
mov
jmp
sub
xchg
adc
xor
test
mov
cltd
or
sarb
cld
push
pop
in
push
pop
call
lret
jl
arpl
mov
xchg
mov
sahf
push
mov
rcll
and
out
sbb
mov
inc
fbld
ret
jp
loopne
sub
adc
pop
and
daa
mov
sti
cwtl
pop
mov
mov
in
es
fs
xor
or
hlt
shll
xlat
push
sub
cmp
jp
mul
cmpsb
jle
adc
cli
jecxz
inc
ljmp
jo
adc
or
imul
cmp
add
outsb
mov
inc
xor
insb
push
dec
sub
in
sbb
outsl
icebp
cmp
sbb
lods
gs
sbbb
dec
xor
dec
mov
lcall
frstor
mov
fildll
cmp
xchg
sub
call
cltd
cmpb
sar
cmpsl
adc
lods
lds
lods
arpl
aad
push
lock
cli
pop
data16
imul
dec
in
outsb
fsts
ret
sub
mov
xor
sbb
std
fimuls
es
dec
jl
mov
dec
add
xor
repz
mov
or
xchg
fucomp
test
push
dec
std
sbb
xchg
aas
jbe
mov
lret
test
lods
push
or
pop
shlb
xchg
test
jmp
adcb
adc
add
popf
cwtl
push
xchg
mov
mov
sub
sub
or
loop
cwtl
inc
jp
sarl
sbb
bound
test
jns
pushf
add
pusha
jp
cld
mov
jg
mov
mov
stos
shlb
cmpsl
push
test
mov
andb
pop
jne
sub
mov
enter
mov
adc
lds
mov
aad
cld
mov
ss
dec
in
lahf
fs
ja
mov
fmull
int
inc
outsb
decl
jecxz
lea
jno
push
cs
mul
xlat
mov
pop
pop
adc
push
and
dec
add
mov
push
fisttpll
jmp
mov
push
xchg
and
mov
rorl
pop
notb
pop
mov
add
dec
jmp
mov
enter
xchg
mov
dec
push
stc
xchg
pop
dec
notb
hlt
test
or
adc
fs
ja
call
lea
jae
bts
lea
shr
jnp
mov
pushf
rol
bsf
mov
adc
mov
push
cmc
stc
jmp
pusha
lea
jae
xchg
mov
not
inc
inc
pusha
mov
call
bt
add
jmp
inc
pushf
mov
or
xor
sub
out
jecxz
scas
test
insb
arpl
lret
cmc
mov
fs
insl
mov
or
xor
outsl
gs
and
adc
fs
and
push
cmp
rclb
cli
mov
add
mov
pushl
lea
jmp
mov
and
mov
xchg
jnp
mov
sbb
push
dec
and
lock
adc
inc
jns
jno
sahf
lret
mov
mov
subb
or
pop
pop
or
cmp
outsl
mov
cli
mov
data16
and
and
or
bound
aam
inc
add
js
add
imul
lret
pop
xor
sbb
fldcw
mov
jmp
pop
pusha
xchg
das
dec
sub
test
aas
cmp
adc
lock
ret
pusha
adc
cmpsb
rcrb
insb
aam
fidivrs
repnz
repnz
push
dec
icebp
or
outsb
aas
push
ljmp
mov
divl
fildl
and
add
jmp
jle
mov
xor
push
imul
negl
xchg
pop
mov
test
cltd
in
cmpsl
pop
mov
inc
out
mov
ljmp
es
pop
mov
pusha
pushl
mov
pushl
call
movb
jmp
lea
ja
jmp
dec
cmpsl
mov
outsb
dec
mov
xchg
gs
pop
cmp
or
or
jb
push
pop
mov
sub
jo
push
movsb
sbb
inc
pop
pop
icebp
sti
cmp
sub
loop
sub
scas
jge
and
pop
mov
stos
mov
mov
cli
cmp
jae
push
out
xor
xor
mov
loop
dec
std
mov
mov
push
pop
aaa
cli
cmp
inc
xor
idiv
out
mov
and
add
cltd
neg
xchg
sbb
pop
jg
dec
pushl
sarl
stos
and
pop
out
inc
mov
and
jle
push
jle
imul
cmp
aam
xor
push
xor
adc
loopne
mov
xlat
inc
xor
sub
xor
mov
jae
or
pop
std
mov
sbb
xchg
das
rolb
mov
xor
mov
rcll
sahf
cltd
mov
push
inc
out
mov
jns
or
xlat
jl
mov
add
cmc
bound
popf
push
pop
aas
nop
lds
jae
lret
push
daa
jbe
mov
jne
cltd
jno
mov
out
test
push
nop
push
adc
sub
rorl
bswap
insl
xor
jb
out
adc
rcll
mov
pushl
pushf
pushl
ret
push
dec
mov
lea
jne
mov
bsf
mov
push
cmp
push
mov
jmp
push
cwtl
mov
ja,pn
addr16
daa
or
cld
fnclex
mov
pop
lods
movb
xchg
in
int
cmp
aas
cmc
jl
inc
aam
aaa
cld
mov
add
or
lahf
cmp
in
lods
daa
mov
jns
sahf
jno
adc
lret
aaa
inc
push
cli
inc
xor
fidivl
rorl
mov
or
adc
sbb
push
add
xor
push
adcb
mov
je
push
cmp
adc
aad
xlat
fmul
mov
xchg
mov
cmp
aam
sbb
adc
or
es
hlt
inc
les
loope
daa
fisubs
or
stc
push
xlat
rorb
mov
lea
ret
loopne
into
subl
jno
adc
fisttpll
add
sub
into
push
scas
xchg
inc
jmp
mov
mov
jbe
in
cmp
orl
pop
sbb
jle
repnz
bound
jne
push
movb
pusha
pushf
pushf
pop
mov
setge
lea
jmp
pop
dec
inc
and
cmc
or
or
in
int
mov
call
sahf
push
addps
mov
jge
mov
fcmove
push
mov
and
fisubs
loope
ss
mov
dec
out
cmpsb
inc
imulb
cmp
adc
icebp
jae
lret
and
xchg
int
mov
mov
push
dec
sub
pop
clc
mov
jne
or
inc
and
inc
xor
xor
mov
lea
sbbb
test
mov
pop
mov
enter
push
test
stos
cmpsb
push
scas
arpl
pop
imul
mov
push
xor
and
sub
test
lods
jl
push
arpl
addl
sub
pop
dec
lret
cmp
mov
adc
lea
adc
xchg
add
mov
dec
jno
dec
cmpsl
pop
sub
pop
dec
cmp
add
loop
mov
pop
or
mov
or
xchg
cmp
insl
scas
cwtl
lahf
rorb
push
test
cmp
std
clc
adc
mov
imulb
jecxz
repnz
push
hlt
sbb
jle
out
scas
out
push
pop
inc
test
lds
xchg
xor
mov
sahf
jbe
adc
cmp
jge
cmp
adc
sub
scas
insl
or
pop
adc
add
pop
xchg
int3
and
hlt
stos
in
mov
or
icebp
loopne
shlb
mov
adc
mov
ja
cli
orl
lea
mov
jno
mov
daa
enter
fisttps
mov
lcall
pop
push
mov
or
es
outsl
push
jae
mov
mov
xchg
sbbb
jecxz
mov
int
xchg
add
pop
add
cld
mov
pinsrw
mov
cld
jmp
mov
or
mov
jbe
push
inc
inc
and
adc
lods
cmc
hlt
xchg
mov
sub
cmpsl
push
imul
or
sbb
push
add
rcrl
lar
lock
xor
mov
popf
stc
cmp
pushf
lea
jae
rol
mov
shl
sar
cmc
rcr
mov
ror
xor
mov
clc
call
dec
xchg
cltd
js
dec
scas
dec
inc
ss
push
inc
sub
adc
mov
fisttpl
jmp
mov
adc
ljmp
pusha
xchg
pushf
dec
xor
xlat
sti
inc
jo
pop
shll
or
pop
jo
dec
push
fdivs
ret
int
or
pop
cmpsl
add
adc
mov
push
mull
push
push
sub
mov
rcrl
xchg
inc
mov
or
mov
lcall
ja
xor
adc
mov
in
mov
cmpsb
out
ficoms
divl
out
adc
outsb
movsl
xchg
xor
pushf
movntps
loopne
shlb
mov
insl
xor
int3
xchg
push
jle
mov
mov
rep
pop
xchg
adcb
cmpsb
inc
cmp
xchg
xchg
dec
add
push
mov
mov
lea
inc
sbb
cmp
out
iret
mov
fists
inc
hlt
data16
adc
mov
test
loop
daa
sti
aad
dec
ja
push
mov
or
out
cmp
repnz
dec
mov
testb
out
lds
rorb
push
cli
aas
je
cmpsl
push
in
cmpsl
or
jbe
add
or
xor
sarl
mov
cmp
fdivs
movsl
inc
cld
mov
and
jbe
ret
mov
in
aam
adc
cmp
test
xchg
andl
ds
ret
scas
mov
add
cwtl
and
jg
gs
jecxz
push
and
aaa
aad
repz
imul
mov
pop
or
push
cli
mov
ss
mov
inc
cwtl
dec
add
xor
fiadds
lret
pop
ljmp
scas
mov
xor
mov
mov
cmp
out
leave
outsb
and
mov
pop
lret
push
jg
pop
movw
lea
jne
bt
mov
rcr
sub
bswap
stc
mov
bt
pushf
sub
push
pushl
popl
pushf
cmp
pusha
jmp
push
stos
mov
shlb
pop
pop
dec
xor
xor
daa
or
cld
popf
jae,pn
orb
mov
adc
dec
jnp
adc
cmp
daa
push
notb
sub
popa
mov
jle
pop
stos
fs
mov
mov
aas
int
push
mov
stos
cmpsb
xorb
and
les
cmpsl
pusha
sbb
jae
jecxz
pop
adc
test
stos
mov
push
inc
push
xchg
dec
xor
and
adc
cld
fcmovnbe
mov
and
inc
jg
sbb
xchg
jnp
lods
in
mov
jp
fldt
jmp
or
lss
sub
jmp
or
inc
aas
mov
lods
into
cmp
add
jb
mov
fldl
xchg
mov
xor
sti
add
mov
clc
clc
and
bt
jmp
jge
mov
jo
or
push
dec
cmp
sbb
adc
push
inc
sub
enter
sub
rcrl
lahf
inc
dec
scas
jo
insb
inc
add
adc
or
je
mov
mov
or
xor
mov
loop
cmp
mov
mov
add
or
xor
icebp
dec
fidivl
jecxz
adc
ljmp
pop
cld
es
xor
pop
mov
push
sub
fnsave
sbb
push
int3
push
jo
rcll
stc
sbb
rcll
bndldx
add
gs
push
mov
cmp
sbb
test
jmp
mov
cltd
bound
enter
mov
dec
pusha
push
pushf
lea
jb
test
cmp
push
call
lea
jne
bsr
mov
jmp
cmp
sahf
aam
clc
xor
daa
sbb
out
in
fnstsw
dec
or
adc
iret
addb
push
hlt
inc
in
push
sbb
sub
jmp
cltd
movsl
negb
fdivr
dec
dec
repz
cmc
sbb
sub
fsubrp
pop
leave
cmp
int
jae
add
test
cli
mov
lret
rcrl
cmp
xchg
push
mov
out
and
hlt
popf
jg
cmpsl
inc
cmp
mov
fmull
clc
scas
push
aam
out
test
lods
pop
ds
arpl
inc
inc
xor
adc
fs
jge
popf
mov
cs
das
int3
out
sarb
shr
sbb
xchg
push
in
xor
dec
mov
jmp
lods
dec
jecxz
sbb
stos
jns
push
mov
push
test
fdivrl
outsb
mov
or
dec
out
mov
bound
push
outsb
dec
in
stc
hlt
lahf
fs
mov
cs
jp
aad
mov
test
test
dec
ds
fisttpll
icebp
mov
xor
decl
subb
add
out
test
cmp
push
movb
pushf
lea
jae
xadd
call
jl
mov
add
mov
gs
aaa
cmp
sbb
mov
mov
test
pop
out
and
sbb
scas
cwtl
jo
sbb
push
icebp
sub
adc
sti
pop
jge
roll
flds
dec
lea
xchg
add
jmp
inc
fdivrp
adc
mov
xchg
fidivl
mov
pop
out
repnz
pop
dec
dec
inc
in
movsl
jo
shlb
mov
fisttps
out
dec
mov
sarb
and
cmp
and
ret
popf
dec
out
bound
xor
ret
cwtl
xor
imul
mov
in
or
mov
jbe
aam
dec
idivl
mov
xchg
push
orb
and
xor
mov
repnz
dec
adc
insl
and
fdivr
push
inc
inc
out
cli
pop
mov
fldt
inc
cmp
and
imul
pop
adc
std
xchg
add
nop
push
inc
enter
xchg
xlat
lds
mov
int3
mov
sbb
push
or
mov
pushf
arpl
loopne
adc
mov
or
daa
sub
push
out
sub
pushf
inc
and
pop
add
sub
mov
sahf
nop
lods
cmpsb
inc
call
imul
cltd
mov
cmp
je
popa
jo
outsl
fs
inc
incl
call
test
rcrl
insl
mov
jnp
dec
dec
aaa
sub
insl
mov
push
add
cmpb
jge
add
pop
outsb
cmpsl
int3
cmpl
lret
imul
mov
scas
inc
mov
sbb
xor
and
adc
fnsave
or
inc
stc
xchg
pop
lock
pop
fcomps
adc
xor
ret
sub
inc
adc
adc
out
rcl
les
into
adc
ja
jno
dec
jmp
jge
imul
sbb
adc
push
loope
xor
arpl
jmp
mov
roll
outsl
push
int
xor
test
loope
movsb
ja
out
xchg
dec
pause
dec
call
xchg
fldenv
cmp
test
call
add
pushl
pusha
jmp
cmp
pusha
sub
push
lea
call
call
fbstp
sbb
mov
mov
in
lret
mov
outsl
dec
das
and
jo
sub
lea
fs
js
and
jbe
repnz
scas
ret
add
imul
lret
pop
ret
pop
loop
sbb
xor
repnz
push
cltd
add
dec
mov
mov
xor
mov
aam
pusha
rcrl
and
enter
push
mov
cld
cltd
push
imull
sbb
mov
test
dec
aaa
or
ret
cmp
xor
push
sbb
pushf
xchg
addb
xchg
sti
push
mov
pop
xchg
ss
cmp
ja
enter
arpl
lcall
sbb
xchg
into
add
xchg
sub
mov
aaa
sub
push
pop
xor
inc
inc
or
sbb
ret
aad
cmp
mov
add
sbb
dec
mov
mov
jl
xor
pavgb
mov
mov
sub
add
ja
jnp
ret
adc
jmp
mov
pop
test
push
mov
jae
or
es
test
inc
xchg
sti
fdivs
cmp
mov
or
or
mov
je
cmpsl
cli
inc
std
pusha
dec
dec
push
push
lock
sub
arpl
jg
lcall
flds
fisttps
sti
mov
add
adc
fs
ja
mov
not
shl
shl
sub
movzbw
bts
adc
jmp
push
push
pop
dec
sti
not
cmp
or
mov
cwtl
lea
sahf
adc
xchg
rorb
and
cmp
and
sbb
sbb
jno
divb
cld
push
mov
lds
shrl
add
icebp
mov
mov
faddl
push
shll
pop
adc
adc
jns
pusha
lea
jae
bt
test
push
sub
push
lea
call
push
lea
jae
test
jmp
idivl
and
lret
mov
test
mov
test
lods
jge
cmpsl
movzbl
lds
nop
jb
fcoml
hlt
pop
sub
movsb
xchg
lahf
jno
jb
nop
leave
out
movsl
jo
shlb
xor
insb
movsl
lret
mov
cmp
add
in
sub
repnz
sbb
aam
push
out
fdivrs
in
mov
dec
dec
xchg
sar
add
insb
cs
jo
xchg
inc
dec
scas
add
mov
pop
negl
into
jge
stc
movsb
mov
out
jae
mov
pusha
imul
inc
inc
das
and
push
cmc
out
shll
mov
sub
mov
hlt
adc
shr
in
xchg
jb
pop
cwtl
dec
imul
add
jmp
cmp
divl
es
sub
cmpsb
xor
loope
mov
popf
cwtl
arpl
add
add
repz
xor
mov
or
enter
sbb
and
test
iret
sub
jnp
xlat
insb
xchg
call
mov
and
jle
les
push
packuswb
negb
push
and
push
cmp
daa
adc
out
mov
mov
sbb
cltd
xchg
push
aad
xor
cltd
cmp
add
out
fldl2e
or
mov
push
dec
aad
and
and
arpl
and
add
lock
mulb
sbb
sbb
mov
and
cmp
jmp
mov
mov
jmp
into
xor
adc
sbbb
sub
adc
pushl
push
add
pusha
test
stc
bt
neg
pushf
pushf
inc
cmc
lea
jp
rol
stc
mov
pusha
cmp
test
test
add
bt
cmc
call
sub
pushl
bt
mov
movw
repnz
pusha
lea
jne
shl
xchg
mov
shl
pusha
sub
push
add
rcl
stc
lea
clc
cmp
sub
stc
pushl
popl
pushf
cmp
movw
pushf
lea
ja
sar
push
clc
sub
cmc
lea
add
shl
mov
push
neg
mov
stc
cmp
repnz
pushf
push
pushf
lea
jne
jmp
in
test
pop
ds
mov
sub
and
push
mov
out
dec
pop
push
jg
adc
push
out
rcr
int
repnz
sbb
icebp
add
sub
dec
mov
sub
jno
sbb
rol
aas
ret
mov
movsb
outsl
xchg
xchg
or
jecxz
popf
pop
divl
sub
jnp
loope
adc
xchg
sbb
fs
call
pusha
call
sub
mov
sub
or
clc
loope
lret
aam
scas
mov
or
shr
inc
adc
loope
add
popa
into
insl
mov
testl
nop
cmpsl
js
outsb
lret
xor
inc
mov
mov
lret
or
das
or
mov
pushf
push
adc
mov
mov
xlat
aaa
and
jle
out
inc
divl
daa
mov
jmp
fs
jb
pushf
pushl
pushf
mov
pushl
ret
push
stos
cwtl
xchg
inc
inc
lahf
out
daa
or
inc
dec
dec
sub
add
fxch
xchg
push
mov
cmp
adc
daa
add
test
xchg
lods
mov
xor
jg
les
mov
shlb
sbb
inc
xchg
lea
lcall
ror
dec
lret
pop
rcl
pop
sahf
xchg
jl
into
fnstcw
dec
sbb
cmp
sub
jb
out
inc
cmc
mov
std
ss
mov
push
lea
mov
jle
push
xor
repnz
sub
jae
adc
dec
add
notl
cmp
jle
sbb
and
fistpl
inc
mov
sbb
stc
adc
or
add
xor
cmp
and
ror
push
dec
push
xorb
das
loop
sbb
shl
pop
scas
call
cmp
adc
sub
loop
push
sbb
ljmp
pusha
adc
push
or
sbb
test
mov
call
bound
cmpsb
int
mov
shlb
popaw
inc
dec
sub
pop
push
pop
sbb
push
repz
mov
gs
jne
mov
out
arpl
in
jge
inc
repz
adc
cld
push
and
push
jle
inc
idivb
or
mov
sti
xchg
cmp
xchg
pusha
scas
cwtl
xchg
jl
nop
mov
jno
popa
adc
add
cmpsb
dec
cmpb
fisttps
lock
xor
dec
ljmp
pushf
dec
mov
int
xor
mov
scas
imul
cmp
cmp
decb
pop
call
xchg
fstps
mov
cmp
shl
mov
and
in
nop
sbb
insb
cmp
push
cld
pop
push
add
lret
ds
fidivs
aad
loope
int3
ret
es
adc
mov
pop
mov
pop
pop
jg
jmp
lds
ljmp
sarl
jne
andl
ja
stc
sub
sbb
call
fdivl
lock
icebp
pop
mov
jecxz
mov
orl
push
push
cld
xchg
scas
push
jle
sbb
movsb
fisttpll
outsb
mov
dec
fadd
jge
jnp
sbbb
mov
popf
mov
testl
xchg
or
cld
jae
mov
mov
and
sub
mov
pop
lret
adc
mov
lret
clc
iret
mov
push
mov
push
add
and
xchg
inc
mov
jmp
imul
mov
pusha
pop
inc
and
mul
cwtl
xor
jae
cmp
out
inc
fcompl
mov
nop
xor
push
test
sysenter
stc
cmp
das
mov
fcomi
xlat
sub
adc
or
mov
push
mov
cmpsl
ds
xor
ja
jmp
jecxz
aas
faddl
out
notl
negl
fxch
rorl
pop
cmpsb
xchg
daa
adc
add
rolb
jge
frstor
ss
mov
adc
mov
xor
das
call
ficoms
fisubl
pusha
aad
push
mov
inc
outsl
jae
xor
xchg
cmc
mov
int3
insl
js
outsl
mov
add
dec
pop
clc
mov
pop
pop
add
mov
dec
mov
inc
dec
imull
adc
xor
lds
nop
in
imul
inc
and
sti
lock
sub
xor
mov
xchg
or
loopne
enter
test
in
inc
push
push
aam
insl
and
lock
adc
adc
ss
sahf
mov
add
cmpsb
or
push
jbe
jle
enter
push
cmp
add
lods
idivb
xor
mov
xlat
mov
sbb
sub
add
fs
jne
loope
push
or
mov
cmp
movl
in
rol
movsbl
mov
add
mov
pushf
sub
bt
cmp
repnz
pushl
jmp
popa
mov
insb
lods
inc
mov
js
push
adc
loope
mov
les
das
repnz
dec
in
fisubrs
cmp
iret
lret
inc
cmp
outsb
lods
addr16
ja
popf
andl
in
xchg
push
pop
lock
repnz
mov
movsb
arpl
popl
push
sarb
fnstcw
or
xor
out
popf
cmp
cwtl
dec
adc
jle
mov
cltd
packuswb
lock
mov
mov
mov
insb
pop
push
xor
mov
adc
jne
sahf
dec
cmpsb
pop
ja
loopne
jle
or
insb
xorl
loopne
mov
test
mov
jo
sti
mov
test
repnz
or
es
test
or
lock
push
icebp
push
adc
shrb
jb
jo,pt
sahf
add
hlt
fcoms
xor
test
jmp
mov
stos
push
cmpb
mov
mov
movsb
mov
dec
pop
inc
mov
jbe
cmp
mov
or
insl
xchg
xchg
fnstcw
add
jo
mov
dec
mov
or
jle
imul
fucomi
push
sti
inc
fists
popa
mov
xchg
pop
sbb
add
adc
push
push
out
pushl
call
sub
out
mov
push
out
aaa
out
rcl
int
mov
sarb
and
xchg
inc
loop
inc
in
inc
mulb
add
mov
jbe
push
nop
jns
outsl
push
and
or
in
adc
dec
sbb
rol
bound
adc
or
movsb
imul
bound
jge
ljmp
lret
insb
sbb
arpl
aad
pop
xchg
bound
jns
xchg
mov
arpl
mov
and
pop
mov
push
insb
outsl
out
bound
pusha
inc
dec
dec
and
sbb
les
sub
mov
fwait
sub
cltd
pop
inc
mov
jmp
push
or
add
push
lcall
iret
xor
dec
xchg
cmpl
jae
leave
jl
enter
stos
sbb
mov
dec
scas
mov
and
movsbl
mov
pushf
pushl
movb
mov
lea
jmp
jg
mov
loope
sub
and
cld
jecxz
aad
mov
mov
mov
scas
pop
cmc
enter
lret
add
ds
hlt
xchg
cli
aam
ljmp
stos
adc
add
add
push
mov
aas
leave
sub
and
stos
jecxz
mov
movsb
repnz
xchg
flds
sub
pcmpgtd
cltd
pusha
add
sbb
insl
mov
mov
or
push
xor
add
fcmovnbe
ret
enter
stos
inc
incb
das
repnz
fbld
ljmp
xchg
xor
mov
insb
aad
insl
test
ret
and
sbb
or
sti
les
sbb
iret
cltd
in
fmuls
mov
in
push
mov
outsb
mov
and
mov
or
cwtl
inc
in
pop
add
jbe
aam
adc
mov
xor
js
pop
adc
push
add
sbb
ljmp
ja
aas
hlt
cmpsl
sarl
ret
dec
xchg
jae
shrb
loope
popa
push
push
cmc
mov
push
lods
inc
inc
lock
inc
cmp
test
nop
jbe
repnz
ds
aas
push
es
outsl
ss
cmp
cmp
jns
dec
data16
xorb
fnsave
xor
imul
sub
xor
jl
ljmp
fisttpl
sbb
loope
fs
jge
jmp
dec
push
mov
push
mov
inc
test
outsb
pop
push
sti
xchg
dec
ja
and
cmp
pop
adc
loop
enter
fs
mov
dec
mov
xchg
jg
scas
adc
pop
shlb
movsb
fnstsw
mov
pop
cmpsl
mov
pop
push
pop
inc
mov
mov
adc
idivl
lret
ret
test
push
jle
jae
ret
js
xchg
in
nop
cmp
mov
cmc
xchg
inc
in
dec
out
movsb
popa
mov
cmp
push
mov
pushf
cwtl
stc
cwtl
mov
movsb
pop
adc
inc
mov
jnp
jae
orl
add
dec
jp
or
pop
xor
jg
sbb
imul
in
sarl
and
xor
mov
add
or
andl
lods
gs
mov
adc
cmpsl
stos
add
loop
pushf
test
les
lret
popf
jp
jp
adc
sarl
fldt
scas
add
or
push
jo
mov
cmp
hlt
cld
sbb
ss
imul
aaa
pop
out
movsb
hlt
pop
jl
repnz
mov
fisubrl
add
test
les
dec
mov
pop
or
or
dec
das
xor
nop
dec
mov
jl
cltd
cmp
xchg
aas
hlt
popl
push
push
shll
dec
inc
and
xchg
icebp
shll
enter
pop
arpl
enter
mov
out
jne
inc
jge
neg
fsubrs
push
icebp
add
and
xchg
pushf
jnp
test
push
push
mov
imul
mov
test
mov
or
lea
gs
push
sbb
call
stos
das
lea
jnp
jae
sbb
aam
lret
inc
sti
and
clc
or
sbb
and
test
in
cmp
lods
pop
push
lahf
push
sbb
mov
mov
dec
mov
cmp
xor
and
clc
cmc
hlt
cmp
jns
cmpsl
push
fs
pusha
std
xor
ret
mov
fisubl
cs
xor
out
xchg
inc
sub
fs
dec
cltd
mov
iret
je
xchg
repnz
push
xor
pop
mov
xchg
inc
cmc
cwtl
pop
cld
mov
inc
jmp
push
leave
adc
out
imul
cmp
add
pusha
jmp
inc
movb
lea
jo
adc
pushf
pusha
pushf
movb
pushl
ret
mov
mov
mov
loopne
lods
movsl
xchg
jne
pop
inc
cmp
aad
cwtl
xor
pusha
dec
jne
and
scas
jl
ljmp
xchg
daa
and
popw
and
clc
mov
sub
mov
jne
cmp
jns
sub
loope
mov
xchg
jg
addl
push
ret
mov
out
daa
andb
scas
arpl
fcmovnbe
sub
xor
imul
sarb
sarl
push
call
les
push
xchg
mov
adc
ss
std
mov
mov
dec
stc
lcall
insl
pop
pop
pop
imul
fsubr
sub
adc
mov
jnp
jo
dec
cmpl
sbb
pop
pop
pop
push
nop
leave
mov
insb
xor
test
test
pop
inc
cmp
mov
sbb
push
add
mov
or
leave
dec
aas
fstps
out
lds
mov
aaa
dec
fists
aas
out
std
fimull
jne
jecxz
xchg
sub
cmp
ljmp
ffreep
test
loop
push
xor
jp
test
int3
lds
adc
add
aad
pop
pop
inc
push
adc
add
lds
in
push
sub
test
out
mov
sbb
push
dec
xlat
and
cs
orl
push
nop
mov
xor
inc
and
push
xor
push
pushf
lea
jmp
pop
mov
mov
pop
sub
dec
sbb
repz
jecxz
shll
das
cmpsb
xor
mov
sub
pop
movsl
out
mov
xchg
lcall
and
inc
jg
mov
xchg
outsb
outsl
test
xor
pop
movsb
cmpsb
fwait
dec
jbe
fdiv
add
andl
jo
in
lret
jl
push
dec
lock
dec
inc
cld
test
imul
jno
push
sub
rorb
sub
mov
xchg
scas
sbb
mov
mov
inc
cmc
push
cmp
sub
dec
push
in
cmpsb
iret
test
fisubrs
and
in
push
xlat
mov
sub
mov
jae
sub
xchg
mov
mov
xor
sti
sbb
pushf
fldt
rorl
rcr
bound
jbe
xchg
jle
mov
push
mov
lods
je
popf
cs
stos
popa
mov
test
xchg
inc
pop
pusha
mov
pop
and
xchg
push
lea
sbb
imulb
jecxz
push
int
and
xor
mov
roll
gs
push
inc
cmc
add
jecxz
jnp
and
dec
cmp
jp
loopne
dec
sti
test
mov
mov
ss
repz
push
je
push
push
es
out
lret
mov
jg
fmuls
xchg
push
mov
dec
add
sub
and
aam
jp
jle
sub
push
mov
pop
and
repnz
fldz
jb
loopne
xor
push
adc
mov
popa
arpl
stc
sbb
sbb
ficoms
mov
sar
repnz
stos
jecxz
popf
pop
push
aam
xor
or
movsl
pusha
ret
lcall
sub
mov
ljmp
xchg
inc
jmp
push
mov
adc
test
mov
repz
push
add
mov
insw
dec
icebp
cwtl
sti
mov
or
lods
xor
je
pop
jl
xchg
sahf
adc
cmpsl
gs
push
jmp
pop
mov
ret
xor
cli
add
leave
out
xor
xor
sarl
insb
mov
aas
xor
clc
sbb
lods
jmp
mov
xor
imul
imul
stos
popf
sbb
and
and
dec
mov
loop
inc
or
pinsrw
mov
jns
lret
push
rol
mov
stc
bt
jmp
mov
stc
stc
bt
test
jmp
pusha
lea
jae
stc
cmp
jmp
loope
xor
shlb
adc
loopne
aam
mov
pop
xor
nop
stos
popa
aad
cmpps
or
cmp
add
ret
mov
inc
movsb
inc
or
or
xchg
adc
outsb
flds
mov
call
sub
dec
or
scas
data16
out
pop
movzbl
loope
xor
mov
mov
jecxz
subl
jns
test
xor
enter
xchg
cmp
lret
fadd
pop
loopne
xor
and
std
add
xchg
mov
pushl
dec
push
decl
notl
and
mov
icebp
inc
cmp
adc
mov
mov
xor
add
cmp
clc
or
mov
pop
sbb
xchg
ficompl
or
cmp
push
sarb
out
les
xorb
xor
adc
lcall
jae
add
aam
ja
insl
mov
pop
pop
loopne
dec
pop
pop
lods
inc
xchg
mov
in
icebp
aam
clc
out
xor
adc
sbb
call
push
push
das
xlat
out
fsub
sahf
pop
fwait
pop
dec
pushf
popl
cltd
push
dec
outsl
rclb
repz
add
stos
pop
or
xlat
scas
push
outsl
sbb
xor
ret
andb
jg
loope
das
rclb
loopne
iret
jmp
inc
and
and
xchg
icebp
cmp
or
int3
mov
mov
test
ja
pop
and
xchg
dec
xchg
mov
add
lret
lahf
mov
lods
gs
mov
pop
scas
cmp
mov
outsb
push
test
push
in
lock
and
movsb
adc
mov
lret
jnp
jns
mov
inc
dec
inc
pop
movsb
popa
add
sbbb
xchg
sbb
fisttps
add
mov
ds
popa
dec
sti
mov
adc
add
enter
push
mov
xchg
test
in
or
das
pop
push
dec
pushf
fisttpll
push
aad
icebp
es
cmp
push
push
sbb
push
push
mov
push
add
ret
shrl
dec
fstps
in
loope
sbb
sbb
int
xchg
call
jmp
aas
push
mov
push
ret
je
mov
mov
lea
and
lock
push
inc
sbb
add
in
fcmovne
imul
or
xlat
rcll
idivb
push
loopne
sti
in
xchg
cmc
sub
repz
inc
out
ss
aas
xchg
dec
mov
outsb
mov
mov
push
scas
jecxz
popa
cltd
stos
dec
sub
push
ret
out
ficomps
push
scas
adc
in
lahf
das
lods
bound
sub
mov
stc
adc
aad
in
xchg
fldl
stc
cmpsb
dec
adc
das
mov
pop
mov
lcall
ret
scas
mov
and
hlt
out
iret
mov
popa
cld
outsl
ss
pop
bound
mov
gs
cmc
add
xchg
cmp
mov
push
mov
pop
push
mov
sub
push
xchg
ss
sub
dec
out
test
jb
dec
mov
jmp
sbb
out
loopne
jp
out
cmp
movsb
push
hlt
fwait
push
inc
mov
cmp
cmp
pushl
jmp
jg
shlb
inc
mov
pop
cs
or
or
out
les
xchg
inc
in
pop
int3
add
pop
icebp
sub
fst
stos
cmp
loop
nop
clc
jbe
or
in
adc
pushf
mov
aam
loope
lret
or
out
testb
cmp
sbb
cmp
cli
inc
mov
jg
and
push
repz
arpl
sub
add
fmull
dec
sbb
nop
dec
loopne
cmp
pushf
pop
mov
std
add
inc
push
inc
outsl
insb
outsl
jb
add
lods
pushf
dec
add
dec
push
push
dec
inc
xor
push
xlat
rol
mov
in
mov
sahf
fiaddl
ja,pn
addr16
cld
cmc
inc
into
mov
imul
push
sbb
push
pop
mov
xor
rcrl
in
adc
xchg
cmpsl
loopne
fdivp
adc
fists
out
daa
adc
clc
or
xchg
pushf
gs
jg
fstl
icebp
test
hlt
mov
adc
xchg
add
aam
mov
and
fs
push
inc
adc
lock
mov
add
add
xchg
ljmp
push
mov
fs
mov
ja
in
shrl
hlt
cmp
adc
add
xchg
outsl
sti
mov
scas
insl
cltd
int
mov
push
dec
int3
inc
and
cltd
mov
fisubl
js
shr
inc
push
hlt
xchg
ljmp
ds
pop
adc
mov
ret
std
push
ss
cmp
mov
movsl
lret
mov
movsl
xorb
cmp
je
dec
js
cmp
movsb
and
fisttps
adc
insl
mov
jp
aam
mov
adc
lods
aad
iret
adc
lcall
pop
mov
popa
loope
and
loop
js
popf
cwtl
and
sbb
add
dec
std
stos
dec
clc
stos
dec
adc
mov
popa
ret
or
loope
jbe
cmp
je
pop
push
dec
cmp
and
mov
xchg
mov
lahf
cld
lahf
leave
hlt
pop
adc
outsl
push
mov
les
adc
push
js
dec
iret
inc
mov
push
outsb
cmpsl
fdivrl
mov
test
jp
out
pop
mov
ja
inc
std
jp
shrb
sub
sbb
jnp
sub
inc
inc
xor
inc
rcrb
xor
xchg
xor
movsb
popa
sbb
data16
mov
aad
out
in
xchg
int3
or
lea
push
inc
es
sbb
loopne
ds
std
pop
pop
bound
add
xor
xor
fwait
sub
and
sti
add
pusha
cltd
into
jns
mov
pusha
daa
js
inc
jnp
test
sbb
clc
jle
push
leave
xchg
iret
hlt
stos
sub
lock
mov
mov
sub
and
imul
fidivl
bound
outsb
adc
jmp
or
mov
push
ds
xchg
xorl
mov
add
je
enter
stc
cmp
test
shlb
dec
and
adc
lock
xchg
adc
add
or
jg
jae
mov
cmpsb
call
mov
mov
pop
pop
into
pop
cmp
and
adc
gs
out
imul
add
out
cmp
inc
adc
in
shll
jbe
pop
jb
and
sbb
push
inc
in
fwait
pop
xchg
aaa
scas
pop
push
xor
cli
cwtl
fwait
jno
stos
pop
cli
in
cwtl
inc
cld
movsl
pop
and
arpl
jbe
shlb
xchg
mov
into
ret
outsb
mov
jbe
push
xor
sbb
sbb
add
jmp
xchg
pop
dec
repz
jno
pop
sbb
fwait
and
in
mov
mov
into
adc
gs
mov
xor
dec
fisubs
je
xchg
ja
loop
mov
and
push
lea
sbb
mov
leave
xchg
js
xchg
push
inc
pushf
icebp
fcompl
xlat
mov
mov
cwtl
jmp
fldcw
mov
into
cmp
repz
pop
sbb
pop
dec
mov
out
ja
and
mov
add
cwtl
pop
mov
repz
and
mov
pop
ja,pn
inc
inc
sub
lret
imul
es
js
push
mov
into
fisttpll
std
adc
call
scas
jne
adc
fidivrs
mov
pcmpgtd
sub
addb
dec
stc
mov
mov
xchg
add
fsubr
add
or
fistl
les
dec
dec
cmp
push
or
mov
test
pminub
loope
mov
adc
adc
pop
push
jle
in
inc
cmc
imulb
or
sbb
sbb
aaa
jg
jnp
xor
test
cld
push
jmp
inc
icebp
ljmp
orps
mov
in
push
sbb
xchg
inc
cmp
and
jmp
popf
dec
stc
pop
lcall
stos
push
pop
fldcw
mov
imul
add
dec
cmp
mov
adc
jo
aam
and
fcoms
pushf
lea
jne
jmp
xor
loop
sbb
and
add
scas
xchg
nop
ja
imul
cmp
scas
sbb
movsl
adc
aam
pop
push
stc
adc
js
adc
outsb
mov
adc
test
ret
clc
mov
adc
fbld
sub
pushf
lahf
jns
or
bound
outsl
adc
dec
or
icebp
pop
mov
cld
cltd
push
adc
outsb
and
mov
push
dec
xchg
xchg
and
push
jmp
cmp
adc
lret
lods
pop
adc
loope
aas
cld
pushl
sub
repz
push
inc
cmp
xchg
cmp
jge
push
in
jno
ja
test
lcall
mov
xchg
mov
sub
or
fisubrl
xchg
xchg
js
bound
lds
and
xchg
pop
cli
mov
push
sub
xor
xchg
ds
scas
pop
idivb
sub
enter
das
stc
jmp
push
clc
push
xor
lea
pushf
pushf
pushf
inc
lea
jmp
test
jge
jb
cmp
movsb
cltd
jp
jle
pop
pop
cld
mov
pop
mov
flds
sbb
jg
imul
les
and
and
xor
imulb
cmp
call
cmp
in
aaa
mov
mov
idiv
jmp
rorb
mov
pusha
adc
adc
popf
mov
fmull
pcmpeqb
sarb
mov
push
mov
lahf
in
ss
xchg
xor
cmpsb
push
add
xor
jle
adc
xor
sti
mov
add
pusha
cltd
nop
xchg
xorb
pusha
dec
xor
or
ljmp
shll
call
mov
fwait
nop
cmp
mov
inc
in
jno
outsl
fldl
mov
fildll
les
sbb
in
in
leave
adc
lea
dec
jbe
push
cmovb
negl
bound
outsl
aad
and
jg
pop
cmc
gs
test
mov
mov
les
jo
js
inc
test
lahf
adc
ds
ljmp
xor
pushf
mov
mov
test
mov
inc
in
dec
sti
and
fldl
icebp
xchg
mov
xor
stos
mov
pop
inc
dec
and
dec
dec
cmp
lret
jmp
scas
fcomps
enter
jb
pushf
sub
pop
dec
sbb
pop
xor
sbb
add
and
icebp
adc
loop
fmuls
sbb
in
lods
repz
jle
fstps
jns
fcmovne
xor
xchg
repz
fnstsw
cmpb
mov
sub
mov
sarb
cwtl
fldenv
jecxz
pop
and
sub
fidivrl
mov
cmp
lods
addr16
adc
testb
lret
cld
rcr
lahf
clc
fnstenv
sub
hlt
jecxz
lret
rol
adc
fidivl
and
fwait
cmp
pop
xchg
rep
mov
push
mov
jo
into
push
out
inc
xchg
outsl
xchg
int
mov
inc
mov
repnz
popf
cld
dec
cmp
sub
mov
into
push
gs
stc
clc
sbb
and
lcall
sti
or
inc
pop
xchg
mov
mov
test
fcomps
jecxz
test
and
push
cltd
dec
or
adc
adc
pop
mov
shrb
and
in
mov
shll
xor
mov
mov
ljmp
rorl
dec
cld
inc
cs
shrb
jnp
int3
gs
divb
dec
inc
add
push
add
xor
jg
mov
mov
cld
or
mov
inc
add
mov
cmpsb
push
adc
lods
fstl
lcall
ja
int
sub
mov
js
std
orb
rol
addr16
ds
push
xor
cmp
adc
or
cwtl
dec
jae
jle
jle
fldenv
or
dec
sub
dec
push
sti
mulb
js
outsb
sbb
popf
pop
jno
xchg
pop
gs
insb
jp
mov
mov
int
pop
lods
stc
sahf
ljmp
popf
pushf
insb
push
pop
cltd
sub
fcoms
mov
icebp
mov
ja
out
mov
pop
or
dec
mov
xorl
push
jno
test
lods
mov
xor
xchg
inc
mov
mov
popa
lock
out
pop
je
cmpsb
popf
jl
js
pop
cmc
pop
mov
bound
js
add
mov
test
pop
or
aam
or
test
push
inc
in
movsb
popa
cld
push
mov
mov
in
test
add
inc
cmc
stos
dec
push
scas
push
pop
shlb
repz
arpl
sbb
fiadds
lods
into
mov
pop
bound
mov
mov
sahf
ljmp
push
std
pusha
inc
xchg
cmpb
imul
fsubs
aad
sub
mov
and
loop
out
sbb
and
and
mov
push
xchg
dec
or
sarl
push
dec
test
bound
aad
lret
mov
inc
jmp
push
jo
mov
repz
test
xlat
insl
das
rcrb
rorb
out
popf
dec
cmc
mov
icebp
pop
mov
lds
push
dec
pop
lahf
sbb
ret
ret
cltd
nop
xchg
outsb
popa
inc
mull
mov
xor
fiadds
mov
aam
xchg
mov
mov
es
out
mov
cmp
fs
gs
inc
icebp
and
cmc
mov
xchg
mov
mov
ljmp
xchg
jmp
adc
lcall
dec
jb
jae
push
lret
orb
mov
daa
xchg
call
pushf
lea
je
sar
shld
rcr
mov
add
dec
add
not
bswap
mov
push
movb
jmp
fnsave
push
or
rcrl
sti
lock
mov
arpl
sahf
roll
xor
jle
rcrl
incb
outsb
push
hlt
out
cmp
add
push
push
clc
cmp
pop
sub
push
scas
jg
sbb
cmp
add
movsb
sti
xchg
sbb
pop
int
popf
mov
cmc
mov
mov
mov
or
lret
js
pop
jbe
lret
icebp
mov
xchg
inc
in
cmc
pop
fwait
fs
dec
cli
mov
pop
iret
xchg
not
push
mov
fs
sbb
jle
in
jnp
ds
dec
push
mov
fst
xchg
shlb
lret
push
cmp
shlb
int
mov
cs
jnp
out
pop
jns
subl
pop
xor
mov
mov
sbb
jnp
add
shr
pop
push
pop
and
jp
and
aad
sub
cwtl
mov
cwtl
dec
fs
push
jae
test
in
mov
cmc
decl
mov
pop
lret
mov
ret
nop
bound
cmpps
pop
or
mov
int3
xor
popa
pop
nop
lret
mov
mov
fidivs
mov
jo
sbb
add
mov
orb
scas
push
mov
push
dec
sbb
push
out
mov
data16
ret
movsb
imul
xorl
and
loopne
rol
mov
aam
add
mov
and
pop
lds
ror
pop
mov
and
cmp
push
aam
pop
retw
mov
in
add
jmp
xor
fildll
dec
mov
iret
xchg
dec
fwait
subb
mov
mov
xor
lahf
inc
mov
loopne
fs
jb
stc
stc
pushf
bt
cmpb
call
xchg
fsub
into
test
arpl
inc
aaa
push
sti
bnd
push
js
jno
sub
xor
pop
sub
loope
icebp
push
cmp
sub
ud1
pop
mov
xchg
jnp
ja
ja
push
in
mov
rol
adc
into
mov
lcall
pop
mov
push
ss
xchg
les
jno
mov
sbb
testb
ds
bound
jmp
jo
ljmp
push
cmp
inc
in
test
xor
pop
xor
das
push
xchg
and
mov
inc
mov
xchg
cs
mov
dec
pop
rolb
fistpll
push
dec
mov
pushf
loope
scas
ret
jmp
cs
adc
or
sbb
in
out
xchg
dec
sti
mov
test
fisttps
mov
xchg
movsb
lods
pop
cli
inc
fdivl
das
fcomps
mov
cmpps
mov
sahf
in
xchg
movsl
xchg
aam
scas
mov
aaa
sub
fiaddl
inc
sbb
insl
sbb
sub
cwtl
mov
pushf
cwtl
ja
popf
mov
into
add
jle
daa
sar
add
rcpps
and
dec
cmpb
mov
imul
adc
cli
es
add
iret
pop
loopne
or
mov
shll
pop
jbe
inc
jno
inc
jp
lods
pop
pop
rolb
into
jno
jmp
in
push
mov
jp
add
rcrb
mov
stc
lcall
subb
add
xchg
mov
mov
loope
orb
and
jmp
lods
lock
icebp
sahf
stc
add
jns
mov
xor
add
fsub
push
roll
xlat
cwtl
mov
das
xchg
inc
daa
loopne
jb
pop
into
cmpsl
sbb
sbb
push
loopne
js
cmpsb
insb
add
ja
xchg
mov
jecxz
add
lret
outsl
add
pop
mov
pop
mov
into
sub
pop
push
dec
mov
or
or
mov
fistps
inc
adc
repnz
cmpsb
dec
cs
test
dec
dec
aad
ret
inc
nop
jns
jns
lea
in
call
test
pop
cmp
aad
popa
xor
adc
adc
cmp
fisubl
fdivr
push
or
push
jecxz
push
xor
cmp
ret
std
cmp
xchg
nop
addr16
push
inc
jg
sahf
arpl
out
and
into
pushf
adc
add
cltd
add
inc
dec
mov
lahf
and
pop
arpl
ficoms
call
or
add
mov
pushf
stc
add
jmp
xor
pusha
daa
and
or
cli
fst
fcmovnbe
ret
mov
test
aad
inc
outsb
cmpsb
pushf
mov
push
rolb
ds
and
and
es
cmp
jge
jmp
sub
inc
je
mov
cmpsb
jg
test
sub
mov
lock
iret
mov
adc
repz
cmp
out
hlt
sbb
adc
xchg
into
das
ljmp
pop
xor
cli
and
xlat
lret
frstor
adc
mov
clc
xchg
out
int
jg
frstor
test
mul
mov
popa
fs
inc
inc
hlt
xchg
mov
xchg
push
mov
push
inc
cmpsb
mov
mov
cmpsl
shrl
lock
adc
lret
sahf
push
loope
jg
in
inc
push
not
xchg
fisttps
fidivrs
imul
xlat
outsl
test
andb
int
pushl
adc
scas
popa
sub
loopne
pop
inc
pop
stc
mov
xchg
dec
sti
mov
xor
js
aam
ss
adc
int3
ja,pt
xor
decl
xchg
inc
cmp
inc
cmp
aad
xchg
push
notl
enter
mov
push
mov
mov
arpl
xor
cltd
xchg
xor
mov
sub
and
addr16
imul
inc
push
mov
out
dec
add
dec
sub
pop
outsb
daa
ss
mov
mov
mov
pop
test
lds
push
inc
loop
mov
cltd
xchg
xchg
ficoms
xchg
xlat
sbb
lea
cmp
movsl
inc
inc
in
push
mov
dec
cld
aam
movsb
jno
je
pop
pop
cmpsl
sub
lea
sbb
test
dec
mov
testb
orb
fadds
inc
xor
fstpt
data16
inc
jns
xor
loopne
jge
jne
das
fidivrl
adc
loop
test
clc
incb
movsb
inc
jbe
pop
rol
stc
out
mov
push
test
adc
sbb
mov
jae
push
sub
in
push
sbb
outsb
repz
jae
enter
aad
sub
ror
add
add
xor
icebp
lea
pop
mov
cmp
jae
pop
mov
insb
popl
jae
dec
ja
cmc
or
lods
jb
mov
fs
andb
lods
mov
inc
mov
push
mov
mov
and
mov
insb
jno
test
cli
and
and
out
out
cmp
sub
push
pop
int3
cmp
das
int
out
mov
jmp
push
jns
imul
mov
sbb
cs
pop
mov
mov
sub
stos
dec
jbe
shll
leave
mov
mov
mov
aad
js
pop
push
add
xchg
enter
leave
sbb
call
ja
mov
sbbl
cmc
fdivrs
push
dec
sti
add
popa
or
idiv
cwtl
loope
arpl
and
aad
cltd
or
jno
aaa
cld
adc
xchg
stc
mov
iret
cltd
add
adc
ds
or
mov
subb
cmpl
stos
ljmp
aam
test
pop
ret
popf
or
mov
mov
scas
stos
pop
das
rclb
mov
jecxz
aad
xor
fdivrl
inc
adc
sub
out
sti
jge
inc
add
gs
movsl
xchg
xor
pop
ss
or
jae
stc
adc
mov
lret
or
mov
mov
insb
mov
imul
loopne
mov
mov
xchg
xorl
pop
jl
cltd
pop
pusha
pop
sbb
nop
mov
pop
push
or
push
adc
cmpsl
and
test
popf
dec
inc
out
adc
mov
mov
lret
adc
popa
movl
and
stos
push
repz
sarl
mov
adc
int
adc
faddl
inc
pop
pop
or
in
mov
jmp
sbb
lds
je
and
push
sarl
fimuls
xlat
cltd
adc
sub
push
cs
push
int3
push
scas
push
push
or
mov
int3
adc
fildl
rorb
aam
sbb
je
pop
lock
iret
sbb
es
pusha
mov
mov
cltd
inc
add
xor
push
addr16
cmc
push
lods
out
stos
pop
negl
cli
jbe
inc
call
fisubrs
mov
xor
xchg
push
cmp
mov
jmp
addb
pusha
pop
inc
ss
sub
mov
outsb
jne
out
mov
out
mov
inc
sti
and
jno
ficompl
mov
idivb
sub
mov
mov
mov
ss
sahf
fmull
pop
jmp
adc
pop
js
cmp
outsl
popf
in
loopne
int
or
push
pop
bound
rcr
mov
mov
popa
in
cmp
mov
jge
leave
sbb
xchg
rcl
insl
push
ss
add
cmpsb
imul
sbb
imul
mov
mov
inc
clc
add
daa
sbb
subb
js
xor
std
pop
pop
pop
push
xor
jmp
cmp
jbe
mov
pop
add
les
jae
lock
jae
sbb
sub
test
mov
sub
lea
mov
lret
in
loope
push
mov
ja
call
push
jbe
mov
sub
popf
movsb
cmp
or
inc
add
js
dec
outsb
jo
sahf
arpl
fisttpl
sub
xchg
jbe
and
jb
lret
mov
hlt
sbb
pop
push
xchg
fnstcw
fsubl
mov
xor
test
fistpll
outsb
xchg
push
add
arpl
pop
cli
xchg
cmp
aas
and
pop
fidivl
sbb
rcrb
or
push
dec
ja
push
cmc
insl
mov
push
repnz
push
jg
stos
loopne
jl
pop
lods
mov
loop
subb
loopne
out
push
into
ds
mov
inc
sub
jno
jno
cmp
bound
cmp
sbb
and
adc
rcrb
mov
push
and
sbb
xor
or
js
lods
or
nop
push
pusha
hlt
lds
jno
and
roll
adc
cmc
cld
jmp
cmp
xchg
lret
lea
lods
dec
dec
or
stos
mov
sbb
in
jmp
leave
xchg
in
jns
out
imul
adc
push
add
clc
xchg
jnp
arpl
fmull
lret
insb
inc
xor
repnz
mov
push
mov
cmp
std
push
xorb
push
jmp
pop
test
ljmp
in
adcl
jo
mov
ja
or
aad
fcompl
repnz
in
lret
leave
mov
aas
push
push
call
inc
les
in
out
jmp
or
mov
mov
push
inc
fdivl
mov
xchg
mov
ret
out
shlb
imul
pop
inc
jecxz
xchg
pop
or
xor
dec
in
push
jmp
mov
gs
mov
fisubrs
and
mov
dec
inc
and
cmp
dec
inc
neg
lcall
mov
test
dec
sarb
sub
push
out
lahf
lcall
jle
stos
jge
icebp
call
push
pop
mov
loope
popl
insb
rcrl
push
inc
ds
lods
ljmp
adcb
in
mov
test
xchg
xor
jns
jl
sbb
xor
adc
call
aaa
cli
cmpsl
mov
nop
in
in
sahf
dec
inc
sbb
add
or
lcall
aaa
cmp
out
inc
inc
and
add
aad
inc
mov
loope
mov
lea
in
loope
inc
ljmp
pop
scas
xchg
leave
push
repnz
dec
sub
cld
enter
push
jge
insl
xchg
out
xabort
mov
push
inc
ds
movsl
das
xlat
dec
addps
xor
int
mov
mov
sbb
or
lods
ficomps
shll
clc
sub
add
cmp
cmp
mov
data16
scas
push
push
cmp
lods
loope
fs
in
test
xor
cwtl
stc
call
inc
outsb
popf
in
and
ljmp
add
lret
loop
mov
xor
cmp
xor
cld
mov
mov
lea
xchg
loopne
mov
xor
ds
out
adc
cmpb
adc
jmp
adc
pop
testb
das
test
adc
or
lods
pop
adc
mov
sarb
add
jne
mull
daa
or
sub
sbb
je
push
push
dec
adc
dec
ret
insb
int
push
insb
sbb
dec
add
pusha
jmp
push
push
push
dec
adc
fsts
mov
fsubs
cs
sbb
dec
push
xorb
jp
xor
add
ret
xor
lea
sub
into
adc
mov
sbb
arpl
mov
sbb
fisubrl
jns
enter
jp
mov
lahf
push
pop
adc
xchg
jbe
push
mov
call
arpl
sub
lret
and
jp
mov
scas
adc
adcb
or
call
aaa
cs
jae
push
fdivs
xlat
jbe
lahf
pusha
cmpsl
mov
jo
inc
or
mov
sub
out
scas
mov
fnstsw
inc
iret
jns
nop
and
mov
jecxz
imul
mov
mov
adc
in
or
mov
scas
mov
mov
or
or
xor
ror
sub
xchg
inc
and
das
ror
mov
xor
add
xor
shll
adc
push
jb
in
mov
shlb
xorl
shlb
xchg
imul
dec
jl
adc
repnz
into
imul
and
and
sub
and
jg
mov
andl
cmpb
loop
push
ret
cmp
mov
jp
xchg
cmp
icebp
and
jp
shrb
hlt
fbstp
fwait
dec
cmp
inc
jecxz
test
insl
fwait
push
xchg
out
fbld
or
pop
das
dec
loopne
sbb
fimuls
pop
xchg
ds
ds
pop
cld
shr
push
cmp
xchg
xchg
inc
pop
push
add
je
add
sahf
xlat
fidivrs
test
jp
push
or
jne
shl
mov
dec
orl
push
mov
in
mov
pop
aas
fs
dec
test
or
mov
inc
bswap
jmp
aas
in
pop
bound
call
jmp
xchg
xor
jp
mov
loope
mov
dec
notl
or
xchg
mov
mov
add
call
jl
inc
lahf
mov
les
xchg
mov
pop
in
repz
push
push
adc
repnz
ds
mov
inc
xor
push
mov
pop
inc
lock
mov
cmp
lahf
fcomp
shlb
cmp
dec
xchg
jle
repnz
mov
aas
jo
inc
mov
lea
pop
addr16
jmp
xor
subl
test
cmp
cmp
add
cmp
mov
jns
sub
ftst
mov
cltd
sahf
push
sbb
push
pop
inc
js
adc
mov
pop
sbb
rorb
mov
xchg
adc
stos
pop
mov
sbb
loop
xor
xchg
rcl
imulb
xchg
jns
xchg
insb
mov
lods
addr16
xor
add
lods
or
icebp
or
and
jno
jecxz
sub
sub
and
loop
stos
movsl
and
repnz
pop
mov
mov
inc
add
insb
mov
mov
push
jecxz
ljmp
ja
in
ja
test
mov
sub
rcrl
cmpsb
imul
cwtl
and
sbb
add
jnp
gs
test
or
fdivs
push
cmc
lock
xor
add
lcall
jo
mov
mov
jl
mov
mov
popf
out
cmc
loop
and
movsb
xor
jo
into
jnp
das
rcll
add
push
lret
orb
test
into
mov
outsb
push
jno
mov
subl
mov
mov
or
daa
or
aas
loop
cli
scas
les
jns
lds
mov
push
push
mov
xor
pusha
jb
sbbl
jmp
mov
roll
mov
mov
push
or
sub
xor
dec
push
xor
jne
iret
mov
stos
hlt
jecxz
xchg
cmp
mov
add
outsb
imul
mov
add
jbe
xor
insl
mov
into
jge
jae
inc
jne
in
mov
into
cmp
je
pop
jae
gs
movsl
push
dec
dec
adc
pusha
addr16
movsl
or
lods
mov
cmpl
pop
cmpsb
fstpt
pop
leavew
xor
ljmp
mov
add
movsb
iret
arpl
sub
jae
mov
pop
sbb
cld
adc
fldl
movsl
into
movsl
cwtl
add
add
sahf
dec
dec
ret
inc
cltd
mov
push
adc
add
cmp
imul
xchg
push
dec
je
inc
and
pop
mov
xchg
jbe
jle
sub
sbb
dec
mov
push
aad
fsubs
imul
loopne
jb
dec
in
xor
pop
or
inc
mov
inc
push
cmc
push
mov
push
push
inc
add
stos
in
push
push
inc
jle
dec
cmpl
pop
pop
dec
mov
loop
jmp
xchg
push
fwait
mov
pop
fcoml
fs
ror
out
adc
xor
xchg
xor
fiadds
push
loopne
pop
xorb
nop
xchg
xchg
and
cmpl
cld
dec
aas
jge
daa
std
push
mov
jo
imulb
mov
pop
pop
and
jne
jg
mov
xor
popf
pop
adc
dec
inc
mov
jmp
xor
adc
cmc
add
mov
xor
adc
push
jmp
jbe
shll
popf
add
dec
lods
pushf
dec
in
cmp
xchg
es
sub
xor
adc
adc
dec
adc
mov
cmc
cwtl
popf
inc
imul
cmpsl
mov
jge
imul
daa
dec
mov
pusha
jne
pop
aaa
cmp
push
push
in
sarl
add
fs
js
shlb
shll
push
movsb
mov
adc
mov
outsl
lea
push
jbe
rol
add
dec
test
test
mov
xlat
add
xor
sbb
inc
test
push
in
lea
inc
cmpsl
inc
pop
push
add
scas
push
cmpsl
in
popf
pop
rolb
mov
inc
aaa
cld
popf
cwtl
sbb
ss
and
add
mov
jb
dec
ljmp
das
hlt
outsl
dec
enter
dec
in
add
lds
mov
out
aas
inc
xor
lea
fistpl
adc
xchg
fwait
ds
ljmp
mov
xchg
nop
dec
mov
test
in
sbb
push
inc
ds
mov
sarl
fisttpl
mov
xchg
lea
popl
loopne
mov
call
mov
icebp
ds
xchg
ja
int
mov
jae
daa
in
mov
pop
push
mov
mov
loope
mov
mov
jnp
add
cmp
xor
pop
in
or
push
loope
dec
xchg
ss
push
add
call
push
jle
sub
nop
je
adc
sbb
lods
sbb
test
outsb
xchg
mov
push
jl
addr16
add
imul
mov
pop
push
sahf
push
jl
psllw
insl
sbb
out
xchg
scas
ret
sarl
mov
xor
jp
std
xor
inc
xchg
pop
xchg
or
inc
add
ljmp
pop
jno
mov
clc
jmp
cld
xlat
adc
cltd
mov
pop
pop
sti
repz
out
cwtl
shll
fidivs
jo
mov
scas
fildl
cltd
shlb
dec
jl
pop
out
ret
xchg
fs
jo
inc
mov
out
lahf
pop
daa
fstps
bound
cmp
adc
jns
cltd
mov
enter
mov
hlt
cmpsl
mov
pop
daa
xor
cmp
repnz
mov
es
loope
jne
aam
lahf
pop
adc
pop
std
adc
or
aam
dec
mov
xchg
xchg
int
xchg
xor
out
rorl
notl
mov
adc
outsl
adc
in
mov
iret
jns
test
shlb
sub
mov
cmpsl
call
sarb
pusha
xchg
lahf
call
pop
std
clc
xor
enter
rcrb
mov
sbbb
inc
jmp
or
mov
lret
test
rorb
mulb
dec
mov
pop
cmpsl
int
xchg
aas
mov
ret
fadds
je
push
cmp
add
push
addr16
adc
mov
adc
fidivrl
movsb
push
dec
out
das
call
cmp
adc
clc
or
fsubrs
dec
out
stos
loopne
cmp
mov
pop
sub
test
out
fwait
jb
ds
popf
insl
lret
ja
icebp
ds
xchg
sub
adc
jbe
popf
mov
js
sbbl
hlt
xchg
lods
loope
pop
stc
insl
or
sub
pop
and
mov
sub
adc
adc
or
xchg
xchg
iret
les
xor
xor
roll
fstpt
inc
mov
sub
sbb
jmp
lods
in
push
cmp
aaa
sbb
test
xor
leave
push
or
test
lock
leave
add
push
ret
jo
jnp
mov
daa
adc
movb
mov
jmp
rol
popa
adc
dec
sub
mov
mov
lods
dec
xchg
lret
push
xchg
dec
inc
sub
mov
jo
cld
scas
loopne
sub
in
pop
imul
jge
inc
inc
es
or
and
inc
adc
add
hlt
mov
jge
cltd
loop
mov
and
ja
jnp
xor
pushf
std
cli
mov
pop
or
fwait
arpl
sub
push
inc
je
inc
sub
cmpb
or
jo
cmp
ljmp
xchg
testl
adc
out
inc
xchg
jecxz
jo
cmp
stos
andb
push
out
stc
cmp
mov
mov
pop
addr16
pop
mov
int3
cltd
ja
mov
cmc
pop
dec
xor
iret
sub
push
jecxz
adc
cmp
call
pop
subb
imul
pop
xor
and
xchg
dec
movsb
in
icebp
imul
sti
cltd
mov
leave
lods
lods
mov
mov
std
sbb
inc
and
int3
mov
addr16
jbe
jmp
mov
dec
lock
pushf
dec
pop
or
adc
movsl
add
in
dec
push
aas
out
stos
cmpsb
mov
bound
mov
pop
test
pusha
rcr
movsb
cmp
mov
js
stos
dec
pop
sti
mov
int3
adc
sbb
stos
and
movsb
push
push
and
imul
ror
xor
push
ljmp
xchg
ffreep
out
retw
cmpsb
dec
dec
adc
out
xchg
inc
jne
test
sub
pushf
nop
ucomiss
and
xchg
xor
or
es
push
rorl
xchg
inc
stos
into
out
imul
fiaddl
add
bound
cmp
rcll
aaa
or
xor
outsl
xor
in
lock
push
pop
pop
add
adc
jno
sbb
push
cmp
in
loop
pop
repz
aas
dec
andl
mov
push
xchg
add
jmp
pop
js
adc
add
out
pushf
xchg
cmpsb
mov
outsl
icebp
jg
icebp
inc
dec
inc
add
mov
dec
fneni(8087
xchg
mov
pop
stc
hlt
lcall
xchg
and
cmp
int3
loop
pop
mov
push
in
jns
cmp
ss
insl
mov
rolb
push
aaa
cmpb
sub
fmul
xchg
imul
call
push
mov
jecxz
arpl
mov
lods
notb
sub
js
bound
loope
leave
push
sub
mov
mov
cmp
repz
cmpsb
adc
aaa
sbb
pop
xchg
addr16
das
jnp
hlt
mov
sbb
es
clc
dec
add
jae
testl
xchg
mov
pop
push
test
sbb
cmc
pop
mov
sub
add
int
add
cli
bsf
add
mov
push
data16
push
pusha
bswap
xlat
push
xor
pop
js
push
ror
xchg
adc
lock
jg
add
clc
sti
push
mov
stc
fists
pop
adc
into
mov
andb
fstp
dec
xchg
gs
cmpsl
inc
jecxz
adc
mov
int3
or
push
pop
or
pop
lods
pop
mov
cli
sbb
push
pop
dec
in
mov
mov
testb
or
xor
fdivrp
jl
lock
cmp
cmpsb
in
xchg
iret
test
scas
aas
dec
or
fnstsw
out
mov
mov
shr
pop
cltd
dec
lods
mov
xor
fidivs
jl
cmp
in
bound
and
mov
cmp
hlt
mov
xchg
inc
push
push
push
addr16
jmp
loop
popa
pop
or
int
test
sub
push
subb
add
cwtl
push
test
scas
imulb
call
mov
mov
movsl
popf
mov
cltd
cmp
mov
stos
lea
iret
outsb
adc
adc
mov
mov
mov
ret
enter
outsb
gs
sti
pushf
cmpsl
test
test
jmp
loop
jne,pn
xchg
dec
cmp
test
fcomps
inc
add
pop
push
add
mov
popa
mov
push
sub
hlt
cmpsl
clc
out
rolb
pop
or
xlat
adc
popl
lea
mov
and
lods
nop
inc
loopne
push
cltd
ljmp
outsb
push
lcall
pop
mov
std
add
mov
je
les
cltd
outsl
xchg
lret
sub
sbb
add
aaa
cmp
stc
push
mov
xor
cmp
stc
jbe
sub
sub
clc
pop
inc
jecxz
popf
ljmp
mov
pop
xchg
cltd
jp
rcr
fsts
ret
jne
xor
ljmp
mov
fldt
xchg
inc
mov
movsb
jmp
sbb
fwait
push
jge
push
ret
jne
jg
pop
pusha
dec
sub
sbb
cli
out
fwait
ss
rep
inc
imul
xchg
inc
push
xchg
stos
insl
or
mov
dec
mov
fstp
neg
sub
cmpsl
dec
test
jle
je
imul
shrb
inc
dec
xor
gs
movsl
fs
inc
call
nop
and
sbb
lds
leave
jnp
xor
cwtl
cmp
dec
or
adc
mov
mov
cmp
ljmp
icebp
loopne
into
mov
push
fs
hlt
fwait
mov
mov
cmpsl
sahf
aas
in
xchg
xor
or
dec
push
ja
mov
fdivrl
inc
jns
dec
mov
jl
jmp
sub
mov
jecxz
mov
pcmpgtb
and
sbb
and
fadd
and
ljmp
jg
iret
xchg
stos
inc
pushl
iret
iret
inc
mov
xlat
sarl
mov
jmp
movsb
sbb
call
insb
jno
jmp
xchg
cli
out
sbb
sub
mov
aaa
pop
movl
in
push
mov
mov
xor
push
cmpsl
call
scas
mov
push
test
nop
ljmp
es
lock
lods
pop
je
add
ja
dec
lret
scas
pop
arpl
sahf
mov
push
pop
jnp
fwait
xor
xchg
mov
fldenv
push
ja
push
lock
lock
fists
nop
xor
mov
mov
xor
iret
xchg
stos
inc
sub
into
fstl
mov
cmpsl
rorl
push
jae
xchg
mov
jb
aad
sbb
mov
ffree
push
and
jle
shll
mov
or
pop
dec
nop
push
fwait
int
mov
mov
mov
shl
xor
pop
cmp
xchg
dec
rcr
mov
xor
aaa
add
lret
js
int
mov
insb
movsb
xchg
in
sbb
jns
mov
inc
js
inc
stos
ja
test
mov
dec
mov
pop
fildll
push
inc
scas
nop
in
xor
dec
adc
mov
inc
adc
mov
bound
cltd
scas
cmc
ret
push
mov
jmp
clc
inc
cmp
sub
dec
stos
clc
xor
cmp
les
dec
ds
lea
in
push
fistpll
nop
pop
sub
rol
cltd
mov
push
dec
cmpsl
shll
xchg
aaa
adc
cli
mov
iret
imul
das
fsts
xor
stos
xchg
xor
mov
aad
stos
xchg
dec
adc
inc
adc
nop
cmp
js
dec
testb
xor
inc
cmpsl
xchg
push
mov
xchg
xchg
pop
xchg
lea
push
sbb
pop
mov
rcrl
xchg
xchg
jno
lods
adc
sub
mov
or
aas
enter
mov
sub
xchg
cmp
lea
push
arpl
decb
lods
daa
sub
es
mov
dec
roll
jne
leave
stc
push
ds
cmpsl
les
xchg
jnp
xor
sub
aad
nop
mov
mov
xchg
dec
or
mov
xchg
outsl
or
dec
ret
cwtl
lea
xchg
sub
jecxz
sbb
je
mull
pop
ret
std
leave
rep
adc
nop
mov
scas
repz
mov
std
push
shrb
ret
mov
xchg
out
iret
mov
jb
push
xchg
arpl
fwait
mov
gs
cmc
outsb
lahf
mov
scas
mov
fcmovnbe
xor
pop
mov
xchg
cmp
int
imulb
out
in
cmp
sub
cmpsl
pop
lret
or
pushf
xor
mov
mov
pop
sbb
jae
cmp
popf
mov
mov
mov
cmpsb
test
sbb
mov
cltd
xor
jmp
mov
add
cltd
in
and
cmp
hlt
into
das
adc
adc
jmp
cmp
enter
mov
gs
adc
mov
movsl
aaa
jbe
and
push
call
lds
int
aad
and
sbb
mov
xlat
mov
jns
cmp
xchg
inc
mov
inc
popl
adcl
lahf
int
cmp
xchg
pop
pop
je
jge
cmpsl
inc
add
add
aad
loop
xchg
nop
das
adc
jo
daa
rorb
pusha
dec
divb
lock
adc
push
jne
iret
mov
pushl
xchg
or
dec
xor
or
push
movl
into
gs
push
inc
mov
bound
orl
stc
mov
xchg
rol
cmpsb
jno
push
rol
sub
dec
test
cwtl
into
pop
adc
into
xor
into
push
pop
push
cmpsl
rcrb
mov
cld
into
mov
stos
pop
aam
xchg
mov
mov
xor
ja
lods
cmp
es
mov
push
arpl
repnz
inc
and
pop
and
sub
mov
xor
xchg
shrl
xchg
or
jno
mov
cmpsl
push
pop
mov
outsl
xchg
inc
popa
in
mov
inc
adc
add
xchg
dec
push
jno
xchg
test
xor
movsl
mov
and
inc
jge
or
aas
inc
mov
fwait
rclb
testl
mov
mov
into
push
outsb
inc
dec
setbe
sbb
popl
loop
in
in
into
mov
push
mov
ss
lea
pop
sub
cmpsb
push
adc
inc
out
jge
testl
adc
test
aaa
fs
ret
leave
rol
les
lret
lcall
pop
jns
ss
out
pop
push
push
mov
inc
cmc
or
jne
mov
dec
std
push
mov
mov
and
pop
dec
xchg
mov
xchg
inc
stos
mov
repz
and
push
xchg
into
dec
in
cmpsb
mov
push
mov
gs
cmp
cmpsb
push
adc
push
out
xchg
push
mov
shl
add
test
add
jecxz
mov
fstl
adc
arpl
jns
leave
rcl
xor
or
mov
pusha
std
mov
fisubrs
jnp
add
out
jecxz
push
mov
push
push
mov
lret
xor
jnp
testl
sub
mov
sti
cmp
pop
push
push
js
bnd
inc
ja
pxor
xorl
jno
cmc
jbe
dec
jp
iret
sti
jne
cmpsl
xlat
out
mov
xchg
add
lahf
sub
sbb
adc
sbb
mov
aaa
cmp
lahf
call
and
xor
nop
shl
lods
mov
xchg
adc
pusha
pop
or
jg
jp
inc
or
inc
jle
dec
sbb
les
mov
int
adc
outsb
adc
xchg
push
jp
push
sbb
popf
ja
negb
push
xor
and
cmp
movsl
mov
lock
xor
lods
cld
xchg
mov
das
aaa
fisubrs
orl
mov
xchg
popf
stos
mov
cmp
cmovge
lea
pop
or
int3
gs
sub
push
das
into
adc
cmp
adc
xor
mov
dec
call
notl
add
lds
mov
xchg
fwait
add
mov
add
mov
add
gs
scas
xchg
jbe
lods
loopne
sahf
ds
jno
leave
jb
les
repnz
mov
jnp
xor
inc
adc
repz
xchg
lahf
adc
pop
push
in
adc
dec
aad
mov
mov
add
mov
pop
adc
je
xchg
xor
shl
sub
out
and
lahf
jecxz
jnp
push
repnz
dec
cmp
iret
insb
sbb
das
jge
push
push
inc
ds
icebp
adc
mov
sar
xor
lds
or
pop
inc
and
inc
or
xor
sbb
testb
push
push
scas
push
pop
jnp
mov
cmp
jb
imul
jge
sbb
cmp
mov
sahf
lods
jb
and
and
add
nop
adc
push
in
xchg
mov
rol
in
push
dec
push
lret
xor
scas
das
mov
rcrl
xchg
mov
xor
xchg
int
push
inc
push
push
movsl
insl
dec
dec
ret
jo
stos
pop
test
inc
ret
imul
xchg
aad
loop
nop
std
inc
fbld
adc
inc
xchg
xchg
jb
xlat
inc
movsb
inc
jle
sub
push
out
dec
adc
push
cmp
mov
dec
xchg
mov
outsl
and
inc
sub
jmp
movsb
inc
into
lret
int3
cmp
fbld
cld
cmpsb
jnp
mov
inc
push
cmp
lahf
or
int3
mov
jecxz
popf
cmc
and
fldl
into
push
xor
aaa
push
pop
nop
inc
arpl
dec
mov
nop
push
cmp
lock
movsb
lret
std
insl
add
xchg
das
or
scas
lods
ret
xchg
xor
jno
pushf
adc
and
into
insl
xor
mov
sarb
inc
and
inc
dec
and
test
xchg
mov
scas
movsb
aam
fdivl
push
out
out
mov
rcll
adc
nop
dec
jo
jle
dec
cmp
mov
bound
mov
push
jge
pushf
push
lods
dec
or
test
aad
xchg
jae
mov
or
setne
xchg
xchg
push
dec
dec
push
jmp
jl
mov
xchg
mov
inc
adc
sbb
cmp
cld
push
stos
xchg
xor
xchg
cmp
pop
xorb
xor
xchg
dec
add
movb
scas
lds
ret
or
adc
inc
push
nop
jae
movsl
fcomi
cmp
xchg
and
adc
aas
daa
iret
nop
sbb
or
cmpl
xchg
lret
xchg
mov
mov
xchg
xchg
jecxz
dec
icebp
fldcw
incb
sahf
and
lret
or
fiaddl
xchg
or
jecxz
aas
popf
ret
mov
in
ret
int3
jns
imul
sbb
cmp
mov
ss
cld
cmp
popf
subl
or
orb
popf
icebp
mov
xor
mov
std
cmpsb
pop
rcrb
movsb
mov
lret
dec
mov
add
test
jno
roll
xchg
mov
mov
sub
loop
subl
popf
and
imul
mov
ret
stc
test
int3
fwait
nop
jae
je
inc
testb
pop
lret
pop
std
push
lods
out
mov
aad
ja
repz
outsb
cld
mov
outsl
scas
push
cltd
lods
xchg
iret
in
subb
ror
enter
ss
repnz
lahf
imul
rclb
pop
mov
aas
and
rcrl
push
dec
imul
push
jnp
incb
jle
add
sbb
xor
stos
mov
fsubrl
jnp
fadds
xor
mov
add
int
les
mov
push
push
orb
lret
pop
dec
inc
mov
xchg
shlb
sbb
xor
mov
movsl
pushf
clc
cmpsl
call
scas
out
sbb
lods
rorb
fnsave
push
dec
and
xchg
repz
gs
xchg
lahf
push
std
int
lock
into
scas
adc
outsb
repnz
int
imul
in
clc
pop
sbb
insl
xor
jno
iret
js
jl
xchg
ja
test
dec
shlb
or
pushl
cmp
fcoml
cmpb
xchg
dec
mov
and
lods
cwtl
mov
xchg
test
push
movsb
xchg
push
sub
xchg
jmp
pop
cwtl
sbb
pop
dec
xchg
outsl
out
mov
or
dec
xchg
jge
add
jo
leave
xor
fs
dec
lock
into
sahf
mov
mov
push
ja
sbb
test
daa
or
adc
push
loopne
mov
mov
push
xchg
jb
push
clc
and
xor
repnz
mov
adc
cs
xchg
in
mov
cmpsl
adc
daa
jnp
adc
push
stos
iret
arpl
pop
int
mov
mov
aaa
xorb
rcrl
push
jmp
call
repnz
cmp
or
pushl
xchg
push
inc
shrb
adc
or
adc
xchg
data16
jne
lods
out
outsl
push
xchg
shlb
scas
mov
or
dec
xchg
fldl
mov
pop
fisttpll
push
cwtl
loope
aad
lock
js
mov
xor
out
nop
jg
mov
repnz
adc
push
sahf
xchg
scas
push
ret
or
lds
cmp
cmp
push
sbb
jle
popf
loopne
and
sarb
jns
test
ljmp
shll
les
xchg
popa
movsl
leave
int
popa
mov
mulb
mov
outsb
pop
insb
cltd
push
inc
and
ljmp
enter
jb
fadds
cmp
mov
into
push
inc
jno
cmpsb
add
data16
push
sbb
orl
xchg
enter
cmp
sub
cld
shlb
leave
outsl
das
adc
jne
repnz
xchg
shll
orl
inc
cmp
mov
jns
xchg
les
adc
mov
or
dec
enter
rclb
mov
adc
mov
rorb
push
rolb
es
out
vcmpss
xchg
inc
sub
gs
xchg
adc
or
mov
adc
fsubrs
mov
loop
and
imul
nop
movups
insl
fimull
mov
adc
popf
das
enter
iret
mov
mov
loopne
push
stos
les
sub
mov
je
cmp
call
xchg
sub
or
repz
call
pop
push
push
jb
stos
mov
insb
sahf
jg
adc
sbb
jns
fwait
into
shrl
jge
add
inc
push
add
mov
sarl
nop
pop
sub
lock
mov
jg
std
adc
cmp
movsl
iret
loopne
mov
not
int
add
inc
scas
xor
into
mov
mov
sub
mov
ss
push
aas
pop
dec
shlb
mov
dec
adcb
ficoml
jae
sub
into
daa
popa
sub
cmp
les
push
pushf
xor
push
in
in
add
icebp
es
add
roll
add
sub
dec
ret
ficomps
add
icebp
jecxz
les
addr16
aas
dec
mov
jb
sbb
push
mov
cmc
ja
lock
test
xor
stos
dec
cmp
jb
push
mov
pop
arpl
shl
jl
adc
or
adc
and
cmp
fs
and
jle
jle
mov
std
out
jns
inc
das
cmp
pushf
cmp
xor
mov
ja
shll
adc
sub
mov
mov
sbb
movsb
ljmp
adc
jae
cmp
adc
xchg
mov
mov
dec
aaa
dec
imul
push
xchg
stc
and
das
push
lahf
out
xchg
lock
hlt
push
adc
ret
sbb
jb
mov
test
shrl
in
jmp
mov
faddp
inc
out
add
daa
mov
dec
mov
push
adc
pop
mov
das
xchg
dec
cmpsl
xor
test
or
aad
cmpsl
icebp
mov
adc
jno
ds
inc
mov
jg
mov
in
aad
cmp
iret
cwtl
into
ja
outsl
cmc
stos
push
cli
and
adc
xchg
test
in
and
jo
mov
mov
aam
nop
jle
adc
insl
imul
add
shl
std
pushl
in
popa
movsb
jb
xor
lea
adc
lcall
sbb
popf
sub
ret
das
xor
inc
aad
fisubrl
mov
jbe
notb
add
dec
ret
sub
mov
jle
inc
insl
idivl
mov
popa
test
lret
push
fsubs
mov
xor
dec
xor
dec
push
mov
xor
dec
pop
xor
cmpsl
jg
dec
sub
xor
cmpsl
xor
push
pop
inc
divl
pop
lods
mov
sahf
loop
cmpsb
dec
cmp
sub
roll
js
xchg
xor
push
movsb
bound
or
aaa
cmp
or
repnz
jmp
or
scas
scas
xchg
xchg
jp
push
movsb
mov
ja
push
scas
rolb
jb
cs
push
cmp
push
jbe
xor
mov
push
aaa
fistpl
mov
mov
fnsave
mov
jns
pop
bound
fstl
inc
jmp
add
xchg
and
adc
imul
stos
push
in
fwait
shl
pop
fisttpll
rorb
xchg
rorl
ret
dec
test
mov
jle
mov
mov
push
les
sarb
imull
add
gs
js
test
push
sub
mov
pop
jle
pop
test
ss
xchg
mov
je
popf
pop
xchg
imul
pop
xchg
inc
mov
je
pop
popa
adc
or
sahf
or
es
shll
mov
faddp
cld
popa
fidivrs
imul
jg
mov
push
mov
test
inc
cwtl
enter
nop
lret
addr16
mov
jle
and
in
xor
sbb
aas
mull
mov
jno
hlt
hlt
stc
and
pop
test
jle
jae
in
subl
fiaddl
pop
push
cmpsl
aad
insb
adc
movsl
jns
in
xchg
fwait
in
into
mov
andl
mov
je
fwait
cmpsb
cmc
idivl
andl
mov
addr16
roll
mov
push
adc
mov
mov
dec
insl
push
dec
scas
iret
mov
sarl
inc
cmc
dec
mov
push
dec
inc
out
jle
aas
or
lods
ret
lods
and
std
dec
loop
adcb
bound
xchg
adc
adcl
pop
and
xchg
dec
scas
dec
mov
or
lods
scas
or
test
lds
cltd
in
imul
cltd
jle
push
scas
rorb
cltd
ficoms
stos
hlt
icebp
out
inc
fldenv
pop
xchg
pop
fistl
or
xor
jecxz
adc
imul
stos
push
out
test
pop
out
fwait
rclb
loopne
push
push
loope
les
or
call
rcrl
das
xchg
cmp
xor
mov
lds
das
sar
fidivs
hlt
mov
cmc
iret
push
fs
dec
mov
mov
dec
and
fnstenv
shll
stc
xchg
stos
vmovlpd
ror
mov
inc
mov
mov
nop
inc
push
aaa
mov
loope
inc
and
xor
std
xchg
in
pop
test
stos
sti
mov
push
inc
ret
add
in
in
adc
shl
enter
loopne
and
sti
or
mov
push
shll
das
lcall
fldenv
lea
loope
mov
loope
mov
sbb
jge
in
mov
or
jb
movsl
jmp
dec
sub
jo
movsl
and
into
jmp
dec
jmp
add
jno
scas
aaa
and
out
pop
icebp
or
cmp
stos
test
inc
xor
shl
fisubs
pop
in
mov
mov
pop
inc
dec
or
dec
pop
mov
jnp
mov
mov
popa
push
pushl
xchg
dec
xor
jecxz
mov
test
or
enter
adc
push
addr16
add
dec
sbb
adcb
bound
or
sahf
mov
div
enter
lock
inc
ret
cld
or
sub
or
sti
inc
test
push
stc
mov
adc
push
sbb
into
ljmp
jbe
mov
std
mov
or
nop
add
pop
ds
ljmp
aaa
inc
lea
sub
xchg
pop
inc
jae
cld
and
comiss
push
loop
int3
push
jbe
cmpsl
jae
cld
inc
mov
and
add
and
add
clc
sub
push
or
mov
push
jecxz
push
xchg
popf
sbb
xchg
loop
stos
push
cmc
adc
dec
mov
enter
jle
mov
push
loop
push
xchg
or
aad
imul
cld
or
adc
dec
and
dec
popf
aad
dec
int
out
data16
pop
jae
push
notl
dec
data16
dec
adc
xchg
movsb
jnp
dec
xor
push
adc
add
stos
scas
and
push
stc
sub
iret
push
lcall
imul
fimull
jg
arpl
arpl
pop
adc
xchg
scas
fists
push
lret
enter
sub
mov
das
shll
int
iret
gs
aaa
mov
push
mov
imul
adc
and
sbb
mov
mov
push
jo
fnsave
popa
push
pop
cs
and
cmpsl
adc
push
inc
aas
push
inc
cmc
lds
imul
and
jno
push
gs
xor
xchg
lods
or
cmp
dec
cmovae
xor
rclb
adc
nop
les
ret
ja
mov
mov
aad
scas
nop
mov
scas
push
dec
xchg
cmp
mov
or
push
inc
and
sbb
or
inc
test
cld
dec
adcl
test
or
or
addr16
push
cmp
in
ja
lods
pshufw
movsb
cmp
and
stos
adc
add
push
sub
mov
mov
dec
or
push
lods
mov
jge
mov
je
pusha
and
shlb
pop
mov
inc
iret
mov
pop
cltd
mov
xchg
sbb
es
inc
cs
movsb
mov
mov
inc
in
aad
movsb
insl
in
sbb
push
push
mov
inc
push
sbb
cmp
outsb
push
xor
push
xchg
cmp
push
shll
jb
popf
dec
inc
push
push
inc
dec
mov
dec
cmp
cmp
xchg
inc
mov
aas
mov
out
faddl
dec
ja
sbb
lods
rcll
lret
hlt
xchg
add
inc
xchg
mov
in
je
mov
cs
daa
jle
std
and
lret
out
pop
lds
jns
pop
nop
jmp
dec
pop
ljmp
into
xchg
sbb
mov
iret
push
leave
pop
fistpll
iret
dec
xor
add
sub
or
negb
mov
adc
push
xchg
jae
nop
cmp
loopne
cmp
dec
adc
lock
lods
nop
nop
ret
jae
imul
mov
dec
ja
insb
cmp
dec
lds
xor
push
cmp
and
mov
adc
mov
cld
cmc
xchg
decl
loop
aaa
fsubs
mov
icebp
pop
dec
fs
jg
mov
lcall
and
mull
xor
ja
lock
aaa
adcl
push
pop
push
shll
fistl
jg
dec
mov
mov
jae
mov
les
and
and
movl
ljmp
push
bound
lock
inc
xchg
mov
mov
pop
xchg
sbb
fisubs
xchg
adc
insl
test
outsb
xor
cltd
rcrb
push
cmpsb
mov
pushf
or
mov
gs
inc
mov
lods
inc
xchg
aas
mov
push
cmpsb
orl
mov
push
mov
or
mov
popf
jb
mov
addr16
rclb
cmp
mov
mov
pop
lcall
jb
hlt
into
loopne
and
and
mov
mov
cmpsb
into
xor
out
mov
stos
sbb
pop
ret
pop
xchg
sarb
dec
sti
adc
or
je
or
inc
daa
xchg
xor
adc
adc
sahf
hlt
mov
jp
daa
pop
xchg
pcmpeqd
stc
add
sbb
xlat
push
jg
mov
inc
mov
add
sub
movsl
popf
xchg
and
fsubs
fcompl
faddl
iret
fs
fwait
push
mov
mov
test
iret
jb
jle
lcall
sbb
aas
pusha
data16
xorb
ret
mov
fdivrl
out
mov
daa
xchg
pop
push
cmovns
xchg
pop
call
addr16
lret
enter
add
imul
in
inc
sbb
push
push
sub
dec
test
xor
mov
arpl
fdivs
arpl
pop
popf
add
ds
and
inc
cmpsb
mov
sub
jo
inc
xor
sbb
mov
rolb
lods
add
pop
aas
nop
call
lods
mov
mov
call
jg
int3
packsswb
xchg
and
mov
in
add
mov
push
adc
cmpl
xchg
lods
jle
xchg
rorl
je
imul
dec
nop
ljmp
push
jg
adc
in
mov
mov
push
or
nop
and
xchg
dec
icebp
jnp
cmpsl
push
mov
sub
xchg
outsb
daa
mov
bound
jno
mov
inc
sbb
andl
into
inc
mov
lea
negl
jnp,pt
int3
xchg
icebp
bound
movsl
push
lods
adc
out
jl
push
in
in
mov
xor
lds
iret
push
jp
in
leave
notl
psllq
mov
arpl
xor
sbb
mov
int
popa
sub
and
repnz
fadd
outsl
dec
push
in
hlt
xor
mov
outsb
and
push
pop
inc
xor
inc
icebp
aaa
movsl
sub
mov
ret
aas
fidivl
not
into
mov
ja
mov
movsb
xchg
jo
fwait
jmp
adc
mov
in
pop
mov
jae
cltd
mov
xor
pop
cwtl
xor
xchg
xor
adc
xor
shll
ret
pop
adc
xchg
xchg
adc
push
into
jp
xor
xorl
insl
and
outsl
dec
mov
cmpsb
lods
dec
test
adcl
mov
push
dec
jb
into
push
adc
js
inc
adc
lea
fmull
sarl
mov
stos
lods
pop
cmp
rorb
repz
mov
pop
xor
shrl
mov
push
mov
mov
stos
dec
cmp
divl
popa
xchg
mov
shrb
xchg
negl
loop
movsb
adc
test
dec
rcrl
sar
sbbb
adc
ljmp
inc
inc
in
sbb
adc
xchg
mov
pop
mov
push
mov
stos
mov
loop
and
push
cmc
jbe
mov
dec
lock
mov
xor
sarb
xor
and
dec
ljmp
xchg
xor
aaa
jp
lock
cmc
int
mov
push
ficompl
or
aam
xchg
push
pop
mov
ret
jmp
push
cmp
ret
les
stos
mov
jo
inc
ret
mov
andb
push
push
xor
xchg
mov
ret
mov
xchg
adc
jb
pop
sub
les
mov
dec
jae
jo
xchg
clc
dec
xchg
adc
or
int3
sub
xchg
test
lea
mov
mov
fdivs
sarb
and
or
mov
test
loop
stos
mov
std
lret
pop
paddsb
rorb
rol
xor
ficoms
into
scas
mov
in
inc
mov
push
es
add
shl
xchg
jnp
or
iret
pop
jae
stos
out
mov
push
or
lds
shrb
jnp
shlb
into
xor
dec
stos
imul
sbb
dec
jns
sub
inc
enter
pushf
push
popa
xchg
rorb
rorl
xchg
sbb
or
or
lahf
cld
or
mov
cs
mov
xor
dec
push
stos
mov
add
mov
lcall
mov
add
dec
out
test
jno
fists
and
nop
or
mov
in
mov
addr16
push
nop
push
fisubl
shlb
lock
sbb
loop
mov
lods
repnz
lds
jne
xchg
push
int3
xchg
adc
xchg
push
push
dec
sub
push
add
ret
mov
or
lret
outsl
mov
rolb
imul
in
daa
subb
push
imul
mov
sti
je
xorb
mov
add
movsl
lock
add
movsl
push
into
add
in
stos
pop
popf
xor
ljmp
xor
sar
or
nop
dec
ljmp
stc
jmp
inc
dec
cmp
pop
adc
inc
xlat
ljmp
ja
mov
into
jns
aas
mov
sub
xor
jno
in
fisubl
mov
pop
dec
sti
cmp
mov
mov
jno
pop
nop
aaa
cmp
movsb
loope
test
repnz
repnz
ljmp
adc
decb
pop
mov
cltd
scas
fbstp
mov
ror
ret
xchg
cld
jb
adc
or
xor
cli
push
cmp
iret
xchg
shr
cli
test
ja
stos
pop
mov
inc
xchg
pop
das
push
jl
adc
adc
sub
gs
fists
iret
push
mov
mov
add
mov
cmp
cmp
insb
xchg
lahf
jnp
fsubr
xor
jo
fwait
rorb
popf
loop
mov
cmpl
add
mov
in
jp
adc
mov
bound
xor
push
push
cmp
and
push
pop
push
mov
rorl
dec
dec
or
jg
rolb
pop
arpl
xchg
sub
ret
outsl
mov
dec
cmp
pop
xchg
lods
mov
pop
cltd
mov
xchg
into
adc
icebp
pop
mov
inc
fs
cmc
cld
fsub
mov
ret
dec
adc
lcall
inc
adc
cli
jl
mov
adc
nop
push
jl
xchg
push
inc
notb
mov
xchg
jae
pop
rorb
lret
mov
xchg
jp
jle
lods
mov
lods
ja
fldl
push
mov
dec
lods
sbb
pop
dec
stos
jne
call
push
xchg
and
imul
jp
jno
adc
popf
and
pop
cltd
stos
fisubl
push
xchg
fimull
mov
shrl
stos
mov
iret
lret
out
jbe
nop
pop
roll
movsl
xchg
lea
inc
sub
mov
and
xchg
aas
scas
adc
mov
xchg
ret
mov
xchg
jge
in
push
cltd
sub
daa
lds
je
cld
cmc
out
popf
dec
xchg
mov
pop
mov
inc
xchg
in
sub
jns
sbb
xor
cmp
pop
pop
cmc
cmc
pop
test
mov
insl
jne
scas
lea
sub
adc
popf
ret
add
out
out
loopne
je
mov
ret
out
xchg
fcompl
and
lcall
mov
push
or
xor
aaa
out
cmpsb
in
in
je
aaa
das
xchg
mov
sti
add
pop
popa
cwtl
mov
push
lds
sbb
ljmp
mov
xchg
jb
in
xchg
jmp
push
or
xchg
pop
lahf
jp
inc
xchg
popf
mov
ja
jbe
movsl
cmp
add
dec
call
ficoms
add
cmp
int
cmp
addr16
mov
adcl
rcrb
mov
push
xchg
mov
in
test
call
stc
inc
stos
les
test
lock
jmp
push
dec
add
clc
arpl
les
test
jae
push
xor
mov
shl
xchg
jne
mov
inc
jbe
rorb
fcoml
stos
jo
sbb
in
fs
jnp
mov
rcl
das
xchg
imul
pop
jecxz
xchg
addr16
jle
xor
xchg
jmp
sub
into
fisttpll
push
sbb
ret
pop
pusha
push
pop
jle
push
pop
xor
sub
xchg
mov
dec
lahf
lcall
int
scas
jecxz
into
cbtw
aad
adc
outsl
jge
and
adc
mov
push
pop
js
adc
aas
enter
adc
sbb
fsubs
cmp
dec
cmpsb
jmp
inc
lock
hlt
rol
mov
xchg
jmp
hlt
add
cmp
or
inc
sbb
and
pop
or
lods
and
sbb
dec
mov
pop
data16
dec
fs
adc
xchg
xor
repnz
jnp
inc
fisubrl
pop
cmpsl
sub
mov
dec
sub
xor
je
adc
push
out
mov
mov
sbb
xchg
dec
orl
xchg
addr16
lds
inc
pop
aas
add
fstl
xor
xchg
hlt
stc
movsl
dec
inc
push
push
ret
enter
arpl
imul
mov
xor
fwait
loop
mov
xchg
push
push
and
jne
adc
cmpsl
mov
dec
outsl
test
stos
mov
push
rcrl
jae
mov
jae
push
arpl
les
jo
mov
cltd
scas
xor
jae
shl
mov
xlat
pop
arpl
stos
lods
sub
push
int
jbe
scas
aad
fcomps
xchg
cmp
adc
out
adc
jb
mov
jg
aas
push
repz
data16
or
loopne
cmpl
std
imul
addr16
xchg
mov
xor
into
adc
mov
inc
adc
jnp
sbb
cmp
sub
sahf
push
lock
adc
arpl
mov
movsl
pop
add
in
gs
nop
incl
fbld
cwtl
sbb
jecxz
mov
push
cwtl
data16
into
adcl
push
push
shrl
push
sub
hlt
push
fs
mov
pop
xor
scas
xor
dec
test
pop
cmp
jb
les
fldt
jnp
xlat
inc
cmp
aas
mov
adc
or
sbb
fistps
into
scas
lea
test
add
sbb
and
mov
push
mov
push
iret
sub
xor
js
pop
loop
adc
fsub
fmuls
nop
pop
xor
jo
adc
dec
aad
scas
mov
daa
repnz
sub
inc
out
out
popa
mov
fistpll
mov
adc
aam
or
xor
mov
jg
mov
rcll
dec
loop
jae
bnd
aam
mov
fwait
dec
shll
test
push
inc
repnz
notb
xchg
pop
push
xchg
xchg
aaa
push
jb
push
push
adc
pop
sbb
push
rorb
and
loop
je
and
ja
jo
test
cmp
insb
cld
aam
pop
sbbl
lret
aad
std
lret
jmp
out
pop
inc
pop
or
inc
test
sbb
and
imul
and
mov
jmp
fwait
stos
dec
push
push
ds
rcrb
daa
loop
pusha
dec
jae
inc
call
mov
out
sarb
std
xor
loop
ljmp
sbb
call
fistps
iret
dec
data16
scas
nop
dec
or
push
jb
lahf
dec
push
adc
enter
clc
add
ja
pop
xchg
inc
mov
ss
mov
push
sub
add
push
dec
add
jg
mov
jnp
pop
test
int3
ja
mov
xchg
mov
testl
repnz
inc
mov
negl
test
int
out
xchg
mov
push
cmp
in
jp
hlt
lret
xor
cmp
das
adc
xchg
or
aaa
inc
es
mov
arpl
fldl
repnz
popf
jl
mov
ret
xchg
dec
add
pusha
lcall
scas
out
into
adc
mov
inc
pop
inc
cmc
cltd
lds
xchg
sbb
shlb
pop
jmp
divb
fdivl
push
sbb
mov
mov
push
scas
mulb
lret
repnz
sbb
push
mov
pop
nop
cs
sbb
outsb
push
adc
fldl
cmp
jne
shlb
cmp
stos
push
sbb
sub
sbb
jl
inc
outsl
mov
dec
and
xchg
out
mov
testb
mov
imul
mov
mov
enter
fisttpll
mov
push
ret
sbb
jo
or
jg
inc
pushf
push
push
xchg
inc
mov
sbbb
lret
lea
stc
xchg
sub
mov
adc
push
pop
test
jl
xor
jnp
lahf
sbb
pop
and
and
adc
iret
nop
idiv
cltd
mov
dec
and
rclb
pop
test
sub
into
cmp
rorl
mov
push
xchg
mov
sbb
call
shrb
dec
dec
mov
daa
pop
xchg
repz
pop
dec
mov
enter
adc
mov
add
mov
js
in
push
push
fldenv
stos
push
push
in
lds
loopne
jns
jle
sbb
gs
or
arpl
test
mov
out
pusha
inc
cmp
pushf
fwait
imul
out
mov
data16
push
insl
fldt
jnp
mov
fistl
aaa
jae
jne
pop
jmp
jecxz
inc
mov
adc
loop
xor
lods
lcall
xchg
mov
mov
scas
into
ret
jecxz
pop
pop
ret
pop
lods
jle
inc
mov
sbb
aam
daa
jge
enter
and
ss
sbb
mov
push
mov
jp
mov
mov
out
mov
push
scas
mov
push
popf
xchg
clc
mov
call
div
shl
lods
cmp
cmp
aaa
nop
cmpl
mov
pop
sub
xor
cmp
jl
xchg
inc
lods
lock
xorb
mov
lods
fmuls
into
pop
lea
gs
les
insl
mov
cwtl
rep
push
xchg
push
jle
popa
repz
mov
fcoms
and
inc
pop
inc
repz
push
ljmp
lea
xor
stos
addr16
lahf
gs
mov
daa
mov
daa
jo,pn
cli
mov
iret
xor
and
faddp
adc
jae
rcl
fnstcw
lock
dec
fisubrl
ja
jo
xchg
jmp
lock
out
push
push
cmp
adc
imul
pop
loopnew
sbb
dec
add
es
movsl
or
loop
arpl
nop
inc
xor
ret
outsb
sti
test
popa
clc
rorb
mov
bound
sbb
scas
jae
jae
out
mov
and
add
inc
cmovp
push
arpl
dec
adc
push
add
adc
or
xchg
jo
dec
inc
pop
xor
les
lods
add
mov
xchg
scas
dec
rclb
lss
jl
js
arpl
out
mov
andb
and
or
stos
lods
mov
cli
or
cld
movsb
ds
adc
loop
mov
cmc
cmc
int
ljmp
fidivrl
xor
sbb
jge
arpl
mov
push
mov
fmulp
lods
jo
dec
mov
cmp
cmpb
clc
push
pop
push
lock
adc
imul
iret
xchg
and
mov
nop
test
in
daa
adcb
popf
lds
data16
data16
push
dec
fstpl
addr16
jno
or
loopne
jmp
mov
sbb
enter
jg
push
xor
dec
rorb
sbb
stos
fwait
pop
and
pop
push
ljmp
push
fwait
xor
ficompl
mov
arpl
pop
lret
in
fsubs
mov
mov
pop
inc
cwtl
add
mov
inc
adc
cli
sbb
outsl
mov
or
adc
aad
jg
xchg
fadd
and
pop
movsl
aad
dec
fsubrs
pop
fs
mov
mov
inc
sub
xor
dec
and
mov
repz
pop
xor
pop
or
push
adc
and
test
jge
pop
lea
jl
inc
scas
jo
mov
scas
mov
xor
pop
in
fdivrs
dec
fwait
push
pop
dec
fwait
insl
sti
push
sbb
nop
lods
mov
ss
mov
jle
fs
ja
fldt
into
jmp
add
fisubs
in
mov
push
or
testl
jb
jle
push
fcomps
dec
cmp
mov
out
mov
js
dec
jp
mov
mov
loope
adc
pop
jno
sbbl
mov
xor
sahf
push
xor
shrb
xchg
in
lret
in
jae
jg
data16
cmp
lods
fnstenv
push
pop
std
mov
sbb
test
aaa
int
icebp
divl
fnstcw
mov
jne
xchg
in
pushl
sub
jbe
in
mov
in
xchg
into
gs
push
xchg
test
out
jl
lcall
ret
test
xor
inc
add
daa
out
xchg
rcrb
aas
adc
push
fs
xchg
jae
push
les
xchg
mov
adc
mov
xchg
popf
aam
nop
xchg
jl
pop
dec
xchg
mov
and
js
pop
dec
jbe
inc
stos
ljmp
clc
dec
jle
xchg
dec
shlb
jp
xor
testl
inc
lock
addr16
cmp
test
jg
scas
add
pop
out
loop
push
cld
aas
add
mov
test
lods
dec
mov
push
push
nop
sbb
mov
cmp
rclb
xor
and
add
imul
inc
cmpsb
pop
dec
aas
mov
sub
xor
mov
gs
pminsw
xor
fsubrl
cmp
mov
sub
or
movsb
pop
pop
in
sar
xlat
pop
dec
lret
test
xchg
xchg
push
or
bndstx
adc
dec
fs
push
cwtl
nop
enter
fs
setbe
sbb
fs
clc
push
ljmp
xor
jge
ljmp
stos
fcoml
add
sbb
pop
gs
fstpt
sbb
add
dec
xor
inc
in
test
fistl
or
dec
lods
test
xchg
dec
add
sbb
pop
insb
cmc
cmp
fbstp
pop
js
dec
xchg
xchg
shrb
xor
push
test
mov
jp
push
inc
icebp
lock
out
pop
repz
and
je
jno
pop
mov
jg
jl
mov
fdiv
fidivrl
je
jno
fstpt
push
sarb
inc
inc
pushf
xchg
jno
leave
scas
test
xor
push
dec
lods
jg
cld
push
dec
dec
arpl
ret
push
lret
cmp
insl
mov
jmp
insb
dec
adc
cli
xchg
add
push
jno
jmp
bound
sub
mov
cmp
and
mov
inc
inc
and
and
inc
pop
cmc
mov
and
test
push
xchg
pcmpeqb
ret
push
inc
sbb
and
push
mov
cli
popa
lock
mov
pop
test
ljmp
cmpsl
inc
xor
push
icebp
adc
mov
icebp
push
rcll
nop
mov
or
scas
xlat
xor
les
jp
sti
mov
mov
enter
xor
push
decb
icebp
pop
push
ror
icebp
push
leave
shlb
xchg
dec
xchg
icebp
push
rcl
sub
xor
jmp
rorb
and
or
pop
inc
cwtl
mov
pop
fiadds
push
enter
mov
in
shlb
lret
push
inc
mov
push
jno
mov
lock
movsb
jb
cld
movsb
je
jno
loop
jae
popf
das
rcrb
movsb
push
xchg
imul
scas
popa
inc
loopne
fwait
mov
cmp
xlat
push
lods
dec
sbb
mov
dec
outsl
mov
std
xor
popa
pop
dec
jg
xchg
mov
mov
or
sahf
cmp
mov
faddl
jle
or
hlt
xchg
hlt
push
push
adc
popf
lods
rcrl
xchg
addr16
or
mul
xchg
adc
pusha
lods
arpl
adc
icebp
push
nop
popa
add
mov
xor
dec
aas
in
mov
mov
inc
icebp
mov
ja
jno
pop
inc
jge
repnz
mov
and
lret
xchg
jg
ljmp
inc
aaa
aaa
into
mov
loope
dec
adc
je
sub
pop
mov
push
inc
pop
push
into
sbb
jg
push
cltd
mov
xchg
push
andb
sbb
mov
lret
dec
fs
out
ja
lret
cmp
stc
inc
jne
and
adc
lcall
xchg
fwait
mov
cmp
mov
cmp
push
popf
mov
ja
jae
sarl
pop
aaa
les
add
mov
xchg
xor
adc
add
add
dec
cmp
xor
push
sbb
addb
es
fldl
push
mov
les
les
xor
and
mov
iret
out
outsl
cld
stos
lds
int3
dec
pop
dec
add
xchg
or
push
xchg
mov
test
cmpsb
push
daa
cld
jno
jne
int3
out
inc
sub
sti
icebp
cs
push
leave
mov
call
testb
xchg
jne
adc
rcll
add
aam
mov
aam
repz
dec
mov
ja
jecxz
out
fs
mov
push
aas
mov
pusha
dec
push
add
pop
push
test
mov
jge
or
mov
xchg
les
aam
mov
aam
mov
sub
cmc
mov
lods
and
jmp
push
cmp
fs
push
and
fidivl
mul
xchg
push
adc
jl
fisubs
sbb
div
outsl
pop
push
lret
push
push
xchg
lds
in
cs
pop
bound
leave
std
or
mov
jnp
gs
sbb
sub
adc
in
push
xor
push
mov
es
arpl
ja
xchg
jle
int
out
fs
mov
xchg
pusha
push
xchg
xor
test
mov
jecxz
lcall
mov
fdivr
sahf
or
clc
shll
in
imul
arpl
adc
push
or
int
popa
in
pop
scas
nop
xor
inc
mov
hlt
gs
subb
in
es
ljmp
xchg
fistps
sbb
lods
xchg
mov
cld
cmp
push
dec
cld
fwait
popa
xchg
in
mov
in
and
scas
add
xchg
push
roll
jl
pop
into
push
test
sub
mov
xchg
daa
mov
jns
fsubrl
dec
sbb
push
aad
ret
filds
in
mov
sub
call
adc
add
movsb
into
xor
and
idivb
add
sarl
mov
mov
xchg
pop
xchg
dec
shl
push
dec
cld
xor
mov
rclb
imul
mov
mov
pop
std
mov
push
test
dec
xor
xchg
mov
cmp
jg
adc
scas
xchg
lea
add
outsb
jle
and
aaa
mov
scas
jmp
sbb
adc
xchg
pop
fnstenv
popf
adc
adc
rclb
cmpsb
lds
adc
xchg
adc
mov
sbb
std
sub
test
sbb
into
sbb
or
dec
minps
repz
cwtl
mov
mov
outsb
leave
out
aaa
into
icebp
fadd
push
and
sbb
inc
arpl
mov
and
shl
daa
mov
sub
add
outsb
inc
jmp
shlb
je
ja
sbb
daa
sub
aad
add
xor
mov
dec
pop
insl
ja
ds
mov
xchg
push
lea
pushf
nop
pop
imul
push
xor
dec
imul
aad
mov
popa
enter
cli
xchg
mov
mov
jl
repnz
adc
mov
or
sub
lds
ficoml
mov
pop
outsl
mov
ljmp
bound
sbb
cmp
push
loope
cld
xchg
movsl
popf
add
popf
xor
xchg
fdivl
aam
jbe
jge
test
lock
jge
je
inc
cwtl
sti
andl
mov
dec
insl
int
mov
push
mov
data16
jge
test
daa
cltd
insl
xor
in
cltd
sti
jge
jo
jb
cwtl
push
cmp
into
rol
mov
pop
rol
mulb
inc
or
out
repnz
nop
cmp
and
lock
pop
inc
test
mov
push
cmp
js
or
jl
jae
icebp
aaa
sbb
in
test
repnz
or
lcall
outsb
dec
popa
dec
pop
mov
dec
xchg
lahf
bound
cmp
and
push
loopne
adc
pop
and
test
mov
test
cmp
jg
push
mov
pop
mov
add
and
sbb
cmp
jo
and
push
ss
inc
out
sub
adc
stc
xchg
cltd
fildll
pop
pop
or
or
dec
hlt
arpl
into
pop
fistl
loop
gs
pop
in
push
jb
lds
pop
gs
fistps
add
jb
lds
dec
lds
imul
jmp
lea
mov
pop
jecxz
push
or
lds
movsb
test
out
aad
mov
xchg
nop
pop
adc
fcomps
sahf
xchg
sbb
pushf
lock
xchg
into
mov
mov
xchg
int
stos
fisubs
xchg
in
sbb
je
into
leave
jne
xchg
mov
sbb
push
adc
icebp
cwtl
pop
mov
xchg
pop
les
sbb
add
xchg
nop
loop
lea
xchg
fs
popa
sbb
cli
dec
xor
mov
add
mov
and
xchg
xchg
xchg
xchg
dec
push
out
mov
icebp
ljmp
mov
push
xchg
mov
xor
ds
pop
or
sub
shl
lea
imul
lret
gs
jg
xchg
xchg
nop
loope
jne
fildl
std
pop
aaa
pop
fwait
outsb
and
mov
loope
mov
mov
iret
jae
in
jnp
xor
pop
test
jo
lcall
pop
mov
sub
jae
jecxz
dec
xchg
adc
or
fistpll
xchg
xor
shll
fldenv
icebp
loopne
or
or
test
push
fildll
bound
in
les
sahf
cmp
loopne
in
fidivs
jb
inc
push
adcl
push
aas
popf
jge
faddl
mov
mov
in
xchg
pop
mov
fistps
rol
push
in
pushf
es
mov
push
out
or
shlb
lds
jne
int
add
push
xchg
mov
arpl
pop
xchg
int3
call
pop
cmp
mov
test
add
inc
js
and
push
nop
gs
repz
clc
mov
int
cmpsb
ljmp
mov
in
or
mov
mov
inc
xchg
or
lds
jno
jb
push
jno
int3
and
push
inc
pop
fmuls
dec
push
shll
fwait
aad
pop
mov
int3
in
xchg
adc
push
rcr
pop
pop
xchg
pop
mov
nop
scas
sub
dec
cld
push
adc
aad
mov
aad
xorl
jnp
pop
aad
into
sub
scas
mov
icebp
sahf
mov
push
pop
imul
lret
jge
int3
scas
xor
call
sbb
or
stos
jnp
sub
rorb
or
je
xchg
mov
dec
test
pop
jae
or
inc
push
in
lret
cli
adc
sti
sbb
sub
outsb
sbb
pop
xor
out
adc
add
jl
lcall
jg
nop
push
pop
mov
sub
push
out
pop
cmpsb
mov
aas
icebp
push
cltd
in
and
mov
jle
cli
xchg
jle
nop
sub
and
add
inc
cmp
sub
jle
sub
in
fildll
ret
sbb
gs
xchg
mov
mov
pop
bswap
mov
stc
add
arpl
adc
mov
push
mov
push
into
sub
mov
loop
and
push
fwait
push
mov
ds
sbb
cld
dec
xchg
lods
jne
mov
xor
and
decl
in
mov
push
hlt
outsl
push
and
push
push
mov
mov
xchg
sbb
cmp
das
outsb
push
jne
xchg
pushf
out
stc
add
int
test
iret
sub
cmp
xchg
scas
mov
dec
icebp
xchg
push
lds
add
std
add
cmpsl
lcall
xchg
nop
push
das
push
cmc
in
jle
and
adc
aaa
mov
dec
stos
inc
mov
pop
pop
lock
mov
or
ljmp
and
push
lret
std
fistps
ds
imul
dec
fdivl
mov
std
adc
popf
push
cmc
and
push
push
cmp
stos
jo
adc
je
loopne
add
daa
out
popf
or
push
cli
int
xchg
into
daa
push
inc
cwtl
inc
push
mov
scas
imul
push
fnstsw
xchg
movb
xor
shrl
xchg
dec
jb
lds
inc
mov
pop
sti
lea
out
fistpl
adc
mov
adc
jge
adc
dec
out
adc
inc
xlat
xchg
push
mov
inc
or
and
mov
stos
mov
fcoml
pop
xchg
dec
and
sbb
scas
cmp
iret
sahf
push
cld
and
mov
dec
ret
push
sbb
jmp
rclb
mov
movsb
jmp
insl
stos
sti
inc
ljmp
mov
imul
shll
enter
inc
jo
test
lret
pop
subl
sub
cmp
or
dec
sti
dec
lret
rolb
lock
pop
xchg
push
imul
sbb
leave
mov
or
pop
lds
out
pop
ret
aaa
lods
pop
jl
insl
jp
jb
dec
cli
push
divb
add
sub
shlb
into
push
test
ret
mov
mov
repz
adc
push
push
jge
dec
iret
mov
and
into
lds
sub
jmp
repnz
sarb
test
shlb
int
hlt
push
mov
or
xchg
mov
inc
fildl
cmp
sub
loop
push
fwait
lds
push
icebp
dec
aaa
je
dec
roll
ss
ficomps
jbe
mov
shll
or
add
push
sbb
roll
dec
cs
inc
mov
push
sbb
rcll
lahf
hlt
xchg
mov
push
jmp
lret
add
lds
mov
push
lahf
push
mov
test
lret
lcall
call
push
mov
mov
into
stos
jmp
mov
nop
push
xor
cmp
rcl
into
dec
je
rcll
into
lea
rcr
cmc
into
outsb
ss
push
xchg
lds
cmpsb
test
sti
xorb
jns
xor
mov
fld
and
mov
cs
or
shl
movl
adc
aaa
sbb
adc
lahf
add
incb
jns
sub
sarb
neg
add
add
xchg
mov
push
xor
push
xor
ss
inc
jae
cmpsb
pop
mov
cltd
pop
mov
push
sbb
rcl
fsubl
xor
pushf
inc
mov
xchg
mov
xchg
movsl
je
ljmp
cmc
dec
pop
xchg
xchg
xor
xchg
vpsllq
aas
imul
dec
inc
addb
mov
mov
fnstcw
dec
popf
xor
sub
add
cld
cld
push
dec
loop
push
cmc
mov
hlt
adc
jge
or
jp
and
or
cmp
pusha
inc
adcb
test
push
in
and
dec
push
test
push
inc
adc
mov
inc
sbb
push
adc
mov
mov
and
fbstp
dec
repnz
into
orl
sarl
adc
mov
scas
call
and
pop
push
push
xchg
lcall
cmp
scas
or
in
dec
divb
sub
mov
jne
adc
insl
das
xchg
jno
sbb
dec
xchg
jle
dec
pop
addr16
sahf
enterw
into
jno
lds
jbe
adc
xlat
or
scas
inc
xchg
add
cmc
cmp
lods
data16
xchg
sti
outsb
dec
lea
into
push
stc
lds
adc
push
jae
repz
shll
cmc
mov
into
xchg
pop
dec
or
adc
stos
push
xor
xor
lds
xchg
push
dec
sbb
into
and
jo
int3
pop
push
sub
out
ss
xchg
lods
pop
push
aas
ret
popf
hlt
mov
jbe
lock
popf
movsl
xchg
dec
dec
adc
xchg
xor
aaa
xchg
push
jae
fs
lds
jl
insl
xchg
xchg
cwtl
mov
xchg
shrl
jle
icebp
ljmp
dec
out
xchg
mov
xchg
fs
push
fwait
ret
popf
cmp
movsb
dec
jb
inc
inc
lods
dec
into
xchg
ds
inc
mov
into
mov
push
mov
mov
xchg
xchg
test
into
adc
popf
push
xchg
rorb
pop
stos
sbb
cwtl
jle
into
push
jae
xchg
dec
in
xchg
addl
mov
xchg
xor
repnz
mov
xchg
jb
push
jg
dec
mov
lds
sbb
sahf
cmpsl
xor
mov
add
jno
sub
das
stos
nop
xchg
jbe
push
adc
xor
mov
mov
insl
sub
mov
pop
adc
mov
cmp
les
and
outsb
in
repz
adc
jmp
mov
pop
mov
fadd
out
sbb
xchg
mov
xchg
stos
into
push
push
pusha
ret
loopne
xor
lds
shll
lds
adc
lds
push
mov
xchg
jb
lds
mov
xchg
mov
lds
shlb
lds
adc
lds
push
shl
push
jae
pusha
stos
dec
xchg
xchg
loopne
cmp
push
adc
mov
pop
or
nop
scas
scas
stc
aam
mov
aas
xchg
xchg
mov
and
mov
cmpsl
push
push
pop
sbb
lret
pop
aad
jecxz
dec
ja
int
xchg
adc
dec
nop
lds
ss
jmp
fnstsw
in
cmpsl
push
xchg
pop
push
movsl
sub
out
movsl
xchg
xor
pop
inc
sahf
xor
adc
and
mov
mov
or
lods
bound
es
mov
ds
mov
popa
sti
and
sub
cmpsb
inc
lock
bound
mov
adc
lds
pop
popf
xchg
inc
sub
and
sub
mov
adc
sub
fistl
or
pop
ret
rcl
mov
adc
mov
adc
lds
mov
xchg
jp
leave
nop
mov
add
mov
js
test
shrl
mov
or
stc
and
jmp
arpl
sbb
mov
mov
mov
mov
jne
sub
stos
jns
dec
lret
mov
dec
bound
push
dec
mov
lods
dec
sti
xchg
inc
xor
jmp
mov
fnstsw
daa
out
cmpsb
pop
xor
sub
dec
inc
jo
movsl
jne
enter
mov
xchg
std
push
cmp
mov
aas
mov
push
or
in
jns
jo
incl
lods
push
int3
nop
fwait
cmp
cmc
push
popf
fidivs
popf
into
mov
outsb
inc
xor
mov
xchg
xchg
fimull
mov
lahf
xchg
xor
daa
dec
fstl
insb
pop
xchg
inc
mov
lods
idivl
inc
jl
mov
fcomps
dec
fisubrs
mov
addr16
rcl
push
into
jg
jo
lds
cwtl
jl
pop
xchg
xchg
mov
aad
inc
jo
mov
jmp
cld
mov
nop
bound
and
imul
rcrl
pop
movsl
into
adc
jle
mov
rol
jo
pop
in
dec
cmp
sbb
xchg
xchg
and
call
pop
jbe
leave
mov
jg
pop
jmp
fstpl
stos
add
xchg
aaa
sbbl
and
sub
xor
pop
inc
movd
xorl
test
insb
sbb
dec
insb
pop
arpl
ss
mov
add
mov
cli
int3
into
push
mov
into
or
fisubrs
cmc
call
mov
cwtl
outsl
clc
call
xchg
aam
int
xchg
fidivs
inc
mov
ret
push
clc
cmpsl
push
mov
mov
fs
jecxz
scas
mov
stos
nop
xchg
pop
and
pop
loope
lret
inc
or
push
pop
in
dec
notb
scas
ret
mov
sbb
mov
sbb
out
sbb
mov
sti
scas
sub
in
fnstcw
inc
jmp
jae
sbb
sbb
shrb
hlt
mov
clc
cmpsl
xchg
dec
test
mov
addb
adc
pop
adc
filds
fmull
mov
xchg
test
ss
pop
data16
sbb
cwtl
sub
xor
inc
cmpsb
sbb
nop
aad
sub
leave
xor
jmp
rcrl
aas
jbe
ja
push
jb
das
hlt
mov
mov
fmull
mov
data16
js
out
add
gs
pop
xchg
adc
mov
int3
mov
add
scas
scas
mov
out
inc
push
sub
sub
push
dec
add
in
jns
sbb
stos
lret
test
dec
jo
cmp
bound
sub
repz
pop
mov
cmp
lock
xchg
or
int
popa
mov
fists
mov
cmp
in
ja
push
sbb
sbb
cmp
xlat
mov
sub
addr16
mov
xchg
mov
daa
lock
fimuls
aad
rorb
stos
popf
das
lret
xchg
lcall
pop
mov
iret
dec
xor
adc
jb
push
lock
mov
push
out
adc
mov
cmpl
cvtps2pd
pushf
aaa
shlb
push
dec
xor
fsubrs
fsubl
lea
pop
xor
xchg
std
cmp
daa
lea
xchg
push
dec
arpl
lods
mov
insb
call
lods
rolb
jns
idivb
mov
pop
push
idivl
mov
sub
pop
adc
cli
inc
gs
mov
push
jl
stos
incl
filds
out
add
xor
sti
xor
mov
cmpsl
cld
adc
outsb
or
test
sub
adc
xchg
mov
or
dec
out
xchg
call
mov
adc
movsl
sub
test
aam
sub
adc
data16
in
push
dec
ret
add
jge
dec
pushf
shlb
mov
inc
xor
cld
lret
je
scas
sete
lock
addr16
push
dec
cmp
cld
lcall
jl
xor
mov
into
adc
pop
mov
out
xor
das
insl
push
dec
mov
fsubl
dec
cmpsb
push
push
lahf
inc
ret
scas
sbb
popf
xchg
xchg
dec
dec
adc
out
lds
adc
and
adc
jne
sub
xor
leave
cmc
scas
xor
push
push
scas
inc
xchg
pop
cmc
inc
push
jae
arpl
scas
push
jmp
jbe
mov
or
lock
test
scas
adc
pop
push
push
xor
stos
xor
into
pop
dec
push
or
mull
pop
xor
sbb
fsubrs
xor
clc
cmpsl
call
lcall
mov
out
cmp
jmp
pusha
enter
jmp
sbb
inc
dec
out
sub
in
jbe
mov
jmp
mov
jbe
test
cmp
jge
fstps
adc
icebp
jnp
sahf
jp
nop
iret
test
sti
and
or
mov
push
test
mov
addr16
push
push
jle
cs
mov
iret
in
adc
inc
pop
loopne
pop
lds
jo
rcll
fstl
insl
jo
into
jo
adc
out
notb
std
rcll
lds
or
int
add
out
sub
inc
js
lods
ds
popf
lds
cmc
dec
adc
mov
or
mov
push
xchg
nop
xchg
jmp
mov
popf
gs
mov
pop
roll
sub
dec
jge
adc
xchg
mov
sahf
ljmp
movsl
imul
ss
addb
ss
addb
or
std
fxch
test
leave
movsl
out
test
movsl
out
data16
lods
imul
xor
inc
sbb
push
xchg
aaa
into
movsl
sar
repnz
or
loop
lods
push
mov
mov
or
test
add
sbb
sbbb
push
inc
in
ret
mov
sbb
insl
popf
jo
test
scas
sub
into
ret
push
push
sarl
addr16
fcmovbe
lds
into
xchg
popa
fs
push
clc
or
lea
mov
push
sahf
xchg
adc
fistps
pusha
insb
cmc
sub
and
cmp
into
push
dec
xor
pop
jg
xchg
into
out
jae
xchg
xchg
sbb
lds
mov
sbb
push
or
cmp
adc
jns
sbb
push
and
push
outsl
notb
pop
sahf
xchg
loopne
fwait
xor
lret
std
mov
pop
sub
das
pop
pop
push
movsl
cmpsb
fcoml
push
xchg
out
ja
inc
daa
int
jle
in
les
mov
or
int
scas
push
and
mov
lds
mov
test
xchg
aaa
popf
mov
mov
rcrl
lds
cmp
into
sti
stos
daa
adc
lds
loop
jle
into
mov
xchg
push
lcall
dec
and
sbb
in
dec
and
lds
adc
xor
adc
cwtl
mov
push
lret
bnd
loope
mov
lret
shll
push
mov
cltd
xchg
mov
adc
mov
notb
mov
shll
adc
xchg
adc
mov
mov
dec
cmp
insb
inc
and
and
fnstsw
loopne
push
mov
sbb
nop
insl
xor
fsts
inc
cmpsb
or
pushf
or
jnp
lods
xor
cltd
loopne
push
cmp
pop
mov
lds
mov
aad
jno
or
inc
call
loope
sub
sbb
dec
mov
not
daa
rcl
lahf
pusha
inc
fldenv
ret
push
mov
sbb
or
jmp
fs
cmp
stos
pop
andl
in
and
inc
xor
nop
out
enter
pop
push
pop
mov
or
sti
lret
xor
mov
xchg
jo
shll
lock
loop
lcall
and
sbb
int
fcomps
or
mov
test
cmp
pop
adcl
in
addb
add
in
aaa
cmpsl
data16
cmp
into
mov
push
fcomps
jnp
ficoms
setge
aas
xchg
mov
jbe
xchg
xchg
shll
into
push
xchg
jnp
or
sbb
jl
daa
outsb
xor
adc
ret
repnz
movsl
fisubl
push
shr
lods
dec
stos
notb
pop
and
add
in
roll
dec
mov
mov
xchg
add
in
dec
aaa
xor
fldl
mov
xor
nop
lods
dec
pop
jg
xchg
dec
cwtl
call
or
sbb
out
and
mov
and
jg
das
das
daa
in
or
jg
cmpsl
push
xchg
ja
inc
mov
stos
lret
or
imul
mov
nop
jbe
mov
and
xchg
cmp
dec
xchg
movsl
adc
or
filds
fsubs
push
xchg
or
jns
into
xorl
popf
fisubrl
push
and
jmp
inc
sar
rcrb
mov
xlat
xor
out
mov
jo
inc
stos
lret
xchg
lods
sub
incl
jnp
das
dec
xchg
push
out
xor
shr
and
inc
jmp
and
mov
cli
lret
insl
ss
sbb
pop
mov
push
xchg
jb
pop
sub
inc
aaa
mov
test
xchg
sbb
xor
rcrl
cmp
push
flds
clc
outsb
push
xor
push
sub
enter
shrb
jno
cmpsl
mov
mov
inc
aaa
dec
pop
cltd
cmpsl
insb
dec
fisubrs
arpl
and
push
push
xor
lret
jo
lds
pop
push
fidivrs
inc
xchg
movsl
inc
add
dec
rcrl
dec
stc
jb
mov
push
adcb
loope
mov
dec
andb
stos
lds
dec
aam
pusha
dec
xchg
out
outsb
flds
mull
mov
loopne
inc
aas
inc
dec
pop
daa
idiv
mov
mov
in
out
jo
test
push
jl
nop
dec
jl
xor
jbe
mov
imul
xchg
lods
rclb
ret
dec
sbb
std
cmp
clc
mov
cmp
sahf
scas
sbb
dec
ss
mov
pop
push
scas
rcl
xor
add
push
test
popa
aaa
int
jno
adc
jle
mov
lods
jnp
jo
xor
mov
xchg
adc
cmpsb
fstl
fistpll
loopne
push
jnp
arpl
cmp
xchg
les
xchg
repz
sub
xor
test
xchg
aaa
dec
xlat
test
jns
sarb
add
xor
mov
push
pop
dec
ljmp
add
test
jge
sbb
sbb
nop
inc
sub
xchg
loopne
or
test
mov
cmpl
dec
sbb
into
mov
insl
faddl
lock
out
push
adc
es
dec
xor
les
in
and
adc
dec
mov
and
cltd
jmp
movsb
or
stos
dec
ja
push
bnd
outsb
mov
lds
dec
xchg
mov
inc
hlt
push
lcall
push
inc
ja
sbb
push
dec
lock
mov
xchg
mov
xchg
jno
push
cmp
jno
mov
mov
dec
pop
mull
jno
mov
sarl
jno
xchg
mov
stos
dec
into
pop
mov
fnsave
out
out
adc
aaa
stos
rcll
xor
mul
mov
cltd
pusha
push
hlt
cltd
jb
imul
pmaxub
mov
mov
lods
fs
xchg
arpl
sbb
mov
into
jecxz
das
test
dec
into
mov
rcrl
outsl
push
dec
lds
test
adc
mov
aaa
test
xchg
mov
test
sbb
mov
lret
div
imul
stc
push
les
test
in
xchg
imul
mov
xor
les
cld
dec
shl
gs
push
mov
mov
mov
mov
into
mov
mov
push
mov
mov
or
mov
add
mov
lds
aaa
xor
call
aas
sbbb
mov
nop
push
test
jmp
and
mov
mov
xchg
push
push
pop
out
jbe
shll
mov
addr16
shrl
adc
cltd
stc
pop
outsb
xchg
mov
rcrl
sbb
and
es
test
and
out
add
or
jb
add
push
mov
dec
fwait
sahf
icebp
in
imul
mov
sbb
xor
outsl
dec
push
mov
leave
xchg
inc
leave
inc
add
test
sbb
mov
jmp
rcrl
push
lcall
fisubs
loop
ja
inc
mov
xchg
jne
sbb
incl
aaa
pop
mov
push
mov
lods
add
xchg
xchg
mov
mov
ret
push
mov
pusha
clc
ret
decl
popf
js
das
stc
rsm
mov
test
mov
or
hlt
push
push
mov
xor
adc
ja
xor
out
test
adc
insl
ja
sub
push
dec
pop
loopne
cmpsl
mulb
icebp
or
push
imull
rcrb
jge
and
dec
loope
cmp
test
icebp
xchg
cmc
jno
add
int
push
icebp
stos
cmc
dec
push
inc
movsl
xor
scas
jl
icebp
or
stos
roll
sub
jae
xor
sbb
fxtract
movsl
push
xchg
jo
and
jo
mov
lds
xchg
sbb
jns
gs
imul
mov
push
xchg
shlb
cmp
mov
icebp
decb
jmp
fs
dec
push
icebp
out
push
adc
stos
add
inc
sub
arpl
mov
stos
dec
jno
xchg
cmp
xchg
push
shll
call
adc
dec
loop
nop
cmp
add
stc
inc
mov
pushf
insb
or
mov
lret
sbb
nop
leave
cwtl
add
cmp
stc
add
mov
add
into
adc
xchg
add
testl
out
fisttps
out
xchg
loop
and
push
or
jmp
adc
and
xorl
xchg
mov
add
aaa
arpl
pusha
stc
and
push
icebp
rol
push
out
lods
gs
fcmovu
sbb
mov
jbe
cmp
xor
icebp
jle
add
inc
add
xchg
das
sarb
dec
je
addr16
jecxz
mov
adc
mov
jecxz
into
inc
adc
repnz
xchg
test
popa
jno
daa
jmp
test
div
int
addl
outsb
xor
jns
cmp
unpcklps
imulb
int
nop
in
inc
dec
mov
imul
xchg
mov
lahf
mov
sbb
out
jne
lds
mov
arpl
sbb
push
lcall
mov
bound
pop
nop
and
mov
sbb
fisubl
jnp
loopne
push
gs
lock
or
dec
jns
repz
fsubs
cmc
mov
and
jo
pop
cld
and
jle
aas
inc
filds
loopne
lret
and
jge
aad
in
add
xor
fildl
cmpsl
pop
aaa
and
fdivrs
xchg
nop
std
dec
jmp
idiv
call
pop
and
inc
mov
lahf
ljmp
jg
pop
outsb
dec
push
jb
outsb
dec
push
pop
idivb
sub
mov
sub
shr
mov
add
sbb
sub
icebp
xchg
push
sub
sub
js
cmc
fs
xor
sub
pop
imul
data16
sahf
push
movsl
adc
popf
out
jp
xchg
xor
xchg
mov
clc
fistpll
jo
adc
pop
sbbb
in
imul
dec
cmpsl
jl
mov
xchg
popf
xor
jae
aam
pushf
pop
xchg
sbb
stos
pushf
push
mov
les
daa
into
stc
cmp
add
mov
jle
test
xchg
lds
hlt
mov
and
shrl
adc
out
scas
je
xor
inc
dec
movsb
das
mov
jmp
jbe
lds
js
mov
push
sbb
out
nop
or
mov
mov
popf
and
aam
fldt
xor
pop
inc
sbb
insb
mov
mov
mov
es
ss
vmovhps
jp
xchg
jo
dec
dec
or
pop
enter
dec
add
jb
jne
push
xor
jns
mov
dec
ret
xor
test
icebp
mov
lahf
xchg
push
lds
dec
sub
loope
aaa
xorb
in
cwtl
jno
xchg
gs
push
mov
push
jb
lds
inc
lds
push
lds
xchg
lds
rol
pop
jb
lds
sub
pop
adc
adc
test
mov
dec
pop
adc
pop
stos
adc
xor
push
ret
bound
push
std
bound
push
dec
push
push
mov
adc
jecxz
stos
push
and
push
push
ja
arpl
pop
mov
jb
into
pop
xchg
jb
cmp
cmp
shlb
fcoml
jb,pt
fdivr
mov
adc
lds
dec
loopne
out
pop
fadd
xor
cmp
sbb
jo
adc
jp
adc
cmp
jp
pop
and
enter
in
jnp
jbe
fidivs
insl
fstl
subb
aam
push
mov
pop
jb
pop
sbb
mov
cmp
mov
cmp
pop
pop
test
jnp
sbb
pop
push
xchg
sahf
xchg
js
add
sbb
aaa
scas
lret
imul
call
out
lcall
int
ret
sub
pushf
pop
data16
jae
stos
outsb
push
fistl
rorb
nop
pop
add
sbb
lcall
or
add
xor
aam
mov
outsb
cmp
mov
lret
jge
subl
mov
push
call
push
clc
movsl
xchg
xchg
das
adc
lret
xchg
inc
xchg
inc
loop
cmp
add
mov
xchg
xchg
imul
mov
push
dec
nop
rcr
aaa
sbb
cld
cmp
into
xchg
cmc
mov
int3
adc
pop
xchg
enter
cld
into
leave
mov
inc
dec
daa
mov
push
test
xchg
les
jge
add
aas
lock
cmp
out
jae
mov
lret
divb
mov
scas
inc
mov
pop
rorb
adc
imull
lcall
mov
fwait
jns
xchg
or
mov
sbbb
mov
lods
rcr
mov
popf
mov
xchg
jge
push
cmpsb
ret
insb
xchg
lret
xor
or
dec
or
dec
or
dec
or
rorb
ljmp
xchg
sahf
shlb
jg
jge
cmp
call
fld
roll
movsl
sbb
and
sti
imul
lret
outsb
ja
lret
loopne
test
test
xchg
or
push
push
xor
fcompl
mov
xchg
cmc
or
in
outsb
addr16
add
add
sbb
and
gs
dec
into
push
xchg
pop
lret
xchg
idiv
rcrb
dec
xor
iret
mov
fisttpl
clc
jbe
push
shrb
fcmovnb
inc
fisubrl
adc
imul
loop
xchg
aam
in
and
cs
mov
pop
shrl
in
fs
push
and
subb
pop
inc
lret
xchg
cmp
add
bound
js
ror
inc
nop
insb
add
rcrl
xchg
test
daa
pop
push
pop
repz
lds
dec
add
lock
jb
lds
dec
add
pop
cmp
xchg
ja
mov
adc
adc
xchg
cmp
xor
xchg
fmull
addr16
adc
nop
movsl
das
xchg
push
hlt
mov
sahf
sub
sub
stc
mov
dec
test
mov
sub
lods
sahf
dec
inc
lods
icebp
mov
add
inc
sbb
adc
jo
lret
pop
loop
sub
lds
test
xchg
jae
jle
stos
rorl
mov
mov
imul
pop
sbb
loope
lea
adc
fcoml
adc
fwait
mov
mull
jg
cmp
xchg
stos
adc
and
and
subl
imul
jge
inc
js
mov
cld
push
aaa
aaa
out
or
and
mov
sub
popf
sub
xor
sahf
push
insb
ss
inc
imul
adc
inc
insb
daa
jae
popf
in
or
xor
lds
pop
sub
dec
dec
fmulp
iret
lds
xor
xchg
enter
xor
leave
inc
dec
daa
jae
mov
xor
mov
xchg
pop
dec
movsb
pcmpgtd
lock
xor
das
nop
cmc
sub
and
pop
xchg
ja
repz
faddl
jo
test
sbb
inc
xor
std
push
push
dec
scas
inc
call
adc
add
mov
cmp
mov
mov
sbb
into
jle
sbb
jl
nop
fadd
sbb
clc
rcll
dec
lcall
cli
fcmovne
push
hlt
addr16
mov
fucomp
add
sub
addl
sbb
cmp
imul
or
mov
or
aaa
sbb
add
add
jecxz
mov
int
mov
sub
xchg
mov
movhps
jecxz
push
jle
out
mov
rorl
cmp
ja
lcall
xchg
les
ss
sub
sbb
jp
stos
xchg
sbb
daa
out
xchg
jp
das
stos
out
icebp
fwait
lods
cmpb
addb
cmpsb
push
dec
jae
test
pop
imul
int3
inc
lahf
aam
mov
fs
aaa
mov
jb
nop
xor
cwtl
push
rclb
inc
int
sbb
shlb
dec
pop
test
cmp
inc
cmc
mov
add
lods
mov
bound
pop
sar
sar
outsl
nop
pop
stos
fdivs
pop
nop
push
or
clc
lcall
les
mov
xchg
rorb
leave
mov
push
push
sub
enter
int
rclb
inc
push
lret
cmp
jne
pop
push
push
aad
push
xchg
mov
push
push
stos
jge
adc
sbb
in
jne
prefetchw
mov
ds
add
inc
jmp
or
or
sub
inc
dec
mov
mov
jl
push
aad
icebp
mov
cmp
cwtl
mov
cwtl
je
stos
ljmp
divb
jo
mov
lcall
lea
hlt
mov
test
ja
aas
nop
inc
jnp
sahf
jo
cmp
mov
mov
inc
lods
call
aad
adc
lock
push
cmc
leave
out
mov
in
adc
jno
push
mov
xor
js
xchg
mov
and
mov
orb
lcall
push
insl
push
lds
mov
jae
pop
out
jnp
push
or
jo
add
enter
xchg
scas
rolb
and
inc
jnp
xchg
push
andl
mov
ja
lret
mov
jle
push
les
ficoms
stos
les
cmc
in
inc
sub
mov
insb
fisubrs
aaa
sub
cmp
push
out
enter
sub
adc
fisttpl
push
push
lret
sub
aaa
stos
xor
adcl
pop
jge
add
in
push
dec
push
in
pop
adc
ficoms
popa
mov
mov
jp
mov
push
call
add
mov
lret
mov
sbb
iret
je
inc
and
in
pop
inc
sbbb
into
mov
iret
push
lds
and
aad
shlb
fisubs
xor
adc
js
fs
or
loopne
jg
push
and
sub
dec
enter
dec
add
jg
pop
stc
lds
dec
out
cmpsl
mov
les
es
jno
push
xor
test
push
pop
mov
dec
jecxz
cmpsb
fcomip
sbb
ja
adc
mov
fisttpll
lss
add
add
testb
mov
cltd
outsb
lock
inc
jnp
lock
sarb
in
push
push
adc
pop
lock
lret
les
jmp
je
add
jnp
je
movsl
stos
jnp
aaa
or
call
push
mov
sub
jne
pop
add
in
adc
xchg
ffreep
xor
stc
je
push
mov
mov
pop
in
adcl
pop
fnsave
stc
push
dec
iret
push
cmp
jnp
inc
adc
sti
mov
movsb
dec
nop
data16
sbb
xor
jg
stos
push
test
jbe
cmp
pop
adc
jno
mov
add
fildll
sti
mov
in
push
sbbl
xchg
mov
add
mov
jge
xchg
xchg
xchg
cmp
enter
or
push
cmc
jo
sbb
jb
jge
loopne
pop
lret
mov
mov
ret
lock
pop
push
leave
pushl
in
add
push
pop
in
xor
inc
and
xchg
and
adc
or
push
stc
stc
pop
add
in
sbb
mov
mov
shr
lret
sub
out
mov
xorl
das
hlt
add
mov
movsl
mov
dec
jnp
ret
idivl
clc
stos
ret
and
lahf
icebp
lock
cmc
ja
adc
push
adc
jb
cli
push
test
adc
lds
push
jnp
lret
enter
pop
mov
arpl
push
in
xchg
hlt
cld
insb
xchg
push
sbb
arpl
sub
ret
xor
lcall
outsb
push
repnz
nop
outsl
lcall
icebp
inc
adc
imul
xchg
dec
roll
in
mov
shrl
mov
push
stos
dec
popf
cmc
inc
fsub
stc
pushf
mov
sti
out
pop
div
sarl
push
test
xchg
sub
adc
les
nop
fcoms
fucomi
xor
in
out
mov
fstpt
enter
lret
mov
mov
mov
jecxz
pop
std
inc
lcall
aad
icebp
insb
jnp
inc
fxtract
cmp
nop
jb
rorl
jb
push
mov
fldcw
fwait
jl
mov
xor
adc
mov
ret
sahf
push
jno
pusha
push
push
inc
int
arpl
xchg
sub
mov
mov
xchg
mov
mov
aam
xchg
xor
mov
adc
div
push
sbb
cmp
inc
vmovupd
cmp
in
dec
dec
adc
xchg
insl
repz
xor
repz
lods
lds
ds
and
shrl
fildl
sti
arpl
sbb
test
int
pop
cmp
sti
xchg
mov
xchg
out
nop
daa
dec
aaa
push
jb
xor
push
jbe
or
and
mov
dec
ret
or
add
push
lods
shlb
add
xchg
push
jmp
jge
das
xchg
lahf
push
lods
lock
stc
mov
test
cmpl
sub
add
clc
aam
in
or
pop
inc
push
fidivs
lock
xchg
pop
nop
xchg
or
adc
aaa
sbb
out
into
mov
jmp
and
xor
fisubl
jg
in
cwtl
daa
mov
dec
out
and
push
or
xchg
dec
jno
mov
shrl
lahf
adc
leave
out
mov
in
fistl
xor
cmpsb
fs
xor
ds
inc
adc
and
nop
jns
pusha
loopne
adc
mov
stos
popa
inc
push
pop
daa
jnp
out
mov
jg
xchg
je
int
imul
cmpsl
add
aad
adc
lea
clc
mov
hlt
lcall
adc
out
addl
imul
hlt
pop
or
push
imull
add
push
jnp
push
jo
movsb
adc
xor
notb
int
rclb
out
pop
fwait
inc
mov
jecxz
or
push
and
lea
adc
mov
dec
or
mov
lods
inc
cmpsl
push
daa
push
pop
adc
popa
push
inc
and
pop
jbe
push
jb
sub
dec
xor
pop
xchg
arpl
sub
stos
pop
mov
mov
sub
cmpsl
dec
mov
rcll
lock
xorl
xor
xchg
mov
push
mov
movzbl
xchg
jmp
ret
out
or
cmp
mov
mov
add
adc
xchg
xchg
inc
push
aam
xchg
in
mov
jns
imul
push
and
cli
sub
xchg
aaa
dec
or
call
movsl
aam
js,pt
fiadds
repnz
jne
push
iret
mov
int3
stos
inc
testl
add
cmp
mov
stos
int
sub
pusha
and
repz
addr16
ret
push
and
mov
mov
arpl
stc
das
ja
imul
stos
rcr
lods
mov
mov
mov
cmc
popf
push
mov
cmp
leave
popf
inc
mov
cmp
mulb
push
lret
sub
xor
nop
push
test
call
push
aas
push
mov
lods
cmp
lock
or
mov
xchg
nop
push
mov
sbb
int3
leave
mov
mov
mov
ja
pop
outsl
inc
pop
pusha
and
jb
add
or
xor
outsl
xorb
lret
jle
aad
pop
push
insb
movsl
push
mov
dec
or
aas
mov
stc
xchg
and
xchg
ljmp
scas
push
out
adc
mov
addb
jmp
xor
pop
adc
lcall
ss
mov
push
sub
xchg
out
dec
mov
push
test
xchg
sbb
sarl
pop
sub
insb
movsl
out
mov
xchg
stc
inc
sbb
cmp
xchg
inc
xchg
mov
mov
aad
call
stos
push
sbb
addl
jle
fnsave
pop
bound
ficoml
pop
and
push
lret
jg
cltd
je
push
and
ror
out
xchg
xor
cltd
aaa
push
xchg
and
lea
xchg
fdivrs
rclb
imul
aas
sbbb
add
fsub
xorb
dec
pop
test
lods
jo
xor
mov
icebp
dec
mov
mov
inc
inc
xchg
movsl
jle
rorb
in
inc
scas
insl
sbb
pop
outsl
xchg
push
jg
mov
aad
mov
xchg
mov
sahf
clc
xor
jbe
push
arpl
lds
xchg
and
xor
sub
or
hlt
cs
pushf
inc
add
sub
ret
and
idiv
jb
icebp
nop
imul
dec
xchg
jo
lret
push
in
iret
or
subl
xor
adc
and
nop
subb
bound
jecxz
hlt
mov
mov
xor
stos
hlt
test
xchg
scas
jge
mov
je
scas
push
jno
fmull
mov
lods
jle
jb
mov
jg
push
xchg
inc
push
sbb
jge
push
pop
cmp
lods
jb
pop
scas
sub
mov
inc
cmc
fimull
push
scas
mov
and
adc
lahf
push
dec
mov
int3
mov
add
dec
xorl
hlt
mov
mov
icebp
cltd
mov
mov
mov
mov
or
into
gs
xchg
and
aam
sti
popf
jg
js
xchg
mov
mov
xchg
lds
xchg
dec
scas
mov
fwait
rcr
out
push
xchg
scas
mov
je
movsl
mov
cmc
das
push
popf
mov
cmc
mov
movsl
lahf
xchg
jmp
into
fldl
mov
xchg
movsl
pop
inc
mov
mov
pop
fimuls
int3
mov
xor
ss
movb
cs
push
in
or
fmulp
es
jg
dec
pushf
pop
mov
test
subl
xchg
cmp
dec
ja
arpl
xchg
hlt
mov
mov
imul
mov
lds
xchg
outsl
mov
je
movsl
movsb
ret
jae
mov
mov
mov
bound
gs
or
mov
adc
mov
pop
sub
push
stos
sbb
and
out
dec
sahf
je
mov
jp
and
mov
push
scas
and
jg
sahf
fadds
das
mov
fiadds
push
pop
arpl
pop
testl
push
push
ds
or
enter
or
jg
and
inc
sub
cmp
nop
lods
in
inc
mov
lods
adc
pop
loop
ja
pop
xchg
js
push
push
lahf
pop
inc
mov
dec
cmp
pop
imulb
mov
jmp
jecxz
pop
bound
arpl
test
adc
inc
sub
dec
mov
inc
fisttps
inc
xor
cli
mov
mov
xor
mov
xor
mov
imul
xchg
ret
mov
adc
pushf
mov
xchg
mov
mov
push
push
bound
les
les
xchg
mov
add
popf
xor
cmpsl
sbb
arpl
dec
sub
mov
clc
iret
hlt
sub
rcl
into
pop
les
unpckhps
arpl
testl
xchg
int3
dec
repz
push
mov
mov
adc
mov
insb
inc
sbb
ret
movsl
push
jns
push
pusha
sbb
jae
push
mov
int3
jle
int3
xor
mov
lds
jne
xor
or
aam
add
mov
push
icebp
xor
inc
xorb
in
lea
aam
push
jb
lds
sahf
roll
xor
add
call
or
sbb
ljmp
fistl
fs
int3
aam
std
bound
jecxz
jae
push
nop
mulb
imul
gs
mov
nop
xchg
pop
inc
nop
jmp
dec
lds
inc
push
popa
mov
repz
mov
push
shrb
std
pop
cmc
shlb
mov
out
jg
mov
into
mov
in
xchg
mov
call
mov
sub
fucom
cld
mov
push
iret
xchg
stos
jmp
jns
xchg
xchg
adc
in
ljmp
and
dec
adc
jle
cmc
ret
inc
mov
or
jl
mov
push
push
in
into
outsb
call
out
test
adc
ret
incb
dec
jge
adc
aaa
or
pop
arpl
incl
dec
icebp
and
scas
aas
xor
orb
cwtl
andb
pop
or
hlt
xor
nop
jecxz
fisubrl
fidivs
in
roll
add
mov
add
cmp
jns,pt
lods
jecxz
mov
hlt
fs
jge
fisttps
push
add
xchg
ret
sub
lret
daa
test
cs
push
mov
pop
mov
jge
into
xchg
cmc
in
aad
push
jl
subl
in
das
scas
mov
clc
adc
std
push
add
xchg
xchg
lcall
adcb
je
xchg
mov
push
dec
xor
cld
pop
jns
ss
inc
loope
mov
std
xchg
pop
out
or
inc
out
aas
stos
xchg
jo
push
stc
mov
push
test
mov
push
mov
mov
into
push
push
xchg
xor
testb
pop
mov
dec
add
lds
sbb
xor
popf
add
add
icebp
mov
dec
rcl
stos
test
add
sub
or
stc
cmp
pop
jg
mov
inc
mov
push
jno
sti
stos
outsb
lods
jae
test
ret
outsl
ss
lock
jg
jo
lds
aaa
or
pusha
ss
inc
xor
xchg
ja
hlt
mov
lret
lea
push
es
push
popf
adc
push
or
jo
xchg
mov
xor
dec
push
imul
das
fs
push
cmp
mov
mov
test
push
in
hlt
adc
jno
fs
mov
sbb
mov
nop
mov
xchg
jmp
dec
push
sbb
data16
cltd
dec
divl
inc
add
pop
sahf
or
xchg
dec
mov
orl
and
data16
mov
lock
scas
inc
xchg
es
movsl
f2xm1
add
cmp
lds
out
xchg
mov
sbb
mov
aaa
xchg
outsb
adc
call
mov
scas
jecxz
xchg
push
add
xchg
pop
popf
inc
adcl
xchg
pusha
fldt
mov
jp
dec
dec
sub
stos
inc
out
and
sub
lods
leave
pop
sub
inc
fnstsw
pop
aaa
push
add
aaa
sbb
mov
jbe
stos
push
je
adc
jg
xchg
dec
sbb
mov
jae
lds
xor
shll
adc
into
pop
lods
adc
aaa
mov
ret
out
jae
jge
shlb
jg
in
xchg
movsb
add
repz
xchg
cltd
scas
outsl
push
iret
sub
inc
xchg
lods
xor
repnz
mov
mov
xor
outsb
adc
mov
add
mov
pop
xchg
push
scas
xchg
js
test
sub
xor
clc
sbb
xchg
push
adc
cmp
outsb
adc
mov
cmp
pop
push
and
cmp
shlb
test
cmp
int3
lods
mov
and
mov
add
cmp
jg
xor
sub
xchg
nop
cmp
mov
jmp
addb
push
xchg
aad
mov
mov
test
inc
xor
and
xchg
pushf
popf
lds
jecxz
enter
xchg
pop
fsub
rorb
mov
aad
or
inc
dec
icebp
lock
pop
divl
aaa
nop
inc
test
push
imul
push
icebp
xlat
mov
std
or
push
adc
mov
and
lock
dec
cwtl
test
fcmovnbe
mov
scas
add
lods
add
jnp
sbb
icebp
mov
popa
movsl
stos
popa
idivl
jne
inc
push
inc
lret
mov
into
nop
testl
and
sub
push
push
nop
and
jecxz
and
arpl
int3
push
mov
adc
adc
xor
fucomi
pop
dec
push
xor
js
cwtl
fs
fistps
imul
xchg
in
mov
xor
dec
fcomps
adc
jo
dec
mov
jnp
or
xchg
leave
mov
fimull
imulb
xchg
out
fnsave
repnz
popa
daa
cmp
mov
sti
dec
push
test
mov
pop
cmp
jno
sbb
fbld
sahf
cmpsl
pop
cmp
pop
out
in
or
adc
mov
lock
cmp
push
mov
cmp
leave
xor
sbb
enter
cmc
mov
jmp
cmp
popf
xchg
or
movsb
pop
push
dec
rorb
cmp
push
mov
push
mov
insl
cmc
mov
mov
inc
xchg
out
mov
xor
cmp
xchg
out
mov
cmc
cmp
pop
push
das
jo
mov
iret
mov
jne
add
jne
aad
xor
and
fidivl
mov
cltd
out
repz
pop
push
push
dec
leave
xchg
out
test
fmulp
mov
mov
repz
fwait
dec
jge
xor
dec
push
jg
cmc
cmp
adc
les
adc
repz
into
lcall
imul
adc
and
frstor
push
aaa
lahf
or
idivb
popf
stos
and
out
mov
adc
sub
pop
xchg
test
mov
mov
add
or
in
outsb
int
cli
sbbl
cmp
dec
or
adc
into
mov
mov
dec
addr16
out
mov
fwait
push
lods
adc
mov
xchg
imul
push
outsb
jb
and
or
or
dec
iret
js
test
sub
out
or
enter
mov
shr
mov
mov
ss
bound
nop
and
imul
xor
mov
in
out
pushw
pop
das
mov
lret
jnp
push
and
mov
adc
xchg
std
adc
loopne
mov
imulb
out
and
jg
stos
jns
lds
cmc
mov
add
jmp
fstpt
imull
xchg
into
pop
xchg
cmpsl
xchg
inc
sbb
jnp
pop
fldt
dec
sub
out
jae
jmp
aad
shl
testb
out
jge
shll
int3
movsl
out
pop
popf
shll
aad
std
and
movsb
dec
cld
out
jecxz
movsl
mov
cmc
fstpl
xchg
movsl
dec
loopne
cmc
into
jb
xchg
pop
mov
fidivs
data16
push
stos
lock
xchg
jo
pop
mov
cmp
rcll
mov
xor
inc
lods
sarl
cmp
dec
adc
xor
pusha
pop
sub
test
xchg
insl
fistl
mov
mov
pop
ss
and
cs
push
outsb
imul
pop
dec
into
dec
jbe
mov
sbb
outsb
cmp
lds
fisubrl
xchg
lods
cwtl
pop
or
sub
stos
std
lahf
jg
xchg
push
nop
divl
inc
mov
add
push
into
daa
ret
pop
sbb
cwtl
jae
jl
rcrl
ljmp
xchg
push
lret
mov
pop
push
mov
sbb
arpl
dec
sbb
into
rclb
jmp
inc
dec
ja
sub
sub
outsb
or
mov
adc
mov
jmp
lcall
adc
ja
push
and
dec
adc
dec
lods
mov
adc
lods
jno
jbe
test
push
int
addr16
mov
adc
and
mov
out
dec
or
lds
jns
fistps
mov
xor
cmc
shll
insb
mov
lds
outsb
lds
sti
and
loopne
push
xor
cmp
mov
inc
or
faddp
lcall
into
mov
mov
hlt
int
loopne
sub
pop
xor
int
test
fbld
jb
scas
pop
not
sbb
imull
sti
lret
icebp
inc
fiadds
shl
add
pop
scas
mov
pop
nop
add
setge
imul
fildl
xorl
lret
push
nop
or
icebp
adc
xchg
cmc
pop
fnstsw
cmp
fmulp
std
mov
repz
pop
jge
addr16
adc
push
cmpsb
scas
sbb
repz
mov
enter
fisttpll
adc
xor
push
lods
jae
fnsave
sbb
jmp
xor
fs
aaa
mov
mov
xchg
cmp
mul
jg
iret
je
mov
std
stc
movsb
je
popf
xchg
push
xchg
sub
in
ret
sbb
mov
ret
jge
pop
icebp
add
xchg
sub
adc
into
xor
push
jg
out
fdiv
loopne
cmpl
jb
popf
in
dec
pop
movsl
fists
daa
jae
mov
int3
push
ja
stos
in
pop
adc
adc
hlt
popf
lret
cltd
xor
xchg
jno
cmp
test
cwtl
lea
pushf
mov
jle
outsb
dec
pop
pop
stos
mov
cmpsl
les
mov
stos
cld
stc
push
cmp
cmc
and
jb
into
imull
push
adc
stos
les
push
add
adc
fsubrl
loop
jmp
test
fucom
jnp
or
inc
fsub
adc
stc
sti
repz
sub
fcompl
test
xchg
mov
mov
sub
pop
mov
leave
add
iret
pop
aas
stos
mov
pop
std
das
loop
mov
cmp
xchg
aad
or
imul
lds
lcall
mov
lretw
int3
mov
aas
adc
add
hlt
or
add
pop
sbb
fwait
les
push
out
mov
stos
fnstenv
xchg
jne
cli
stc
lds
out
cltd
scas
xor
adc
adc
retw
insb
neg
or
push
movsl
imul
cmp
shl
pop
add
sbb
xor
mov
out
pop
jbe
lods
cld
xchg
pop
push
jecxz
adc
psubq
mov
inc
dec
test
adc
pushf
push
push
fwait
je
mov
iret
inc
lods
out
inc
dec
aad
sbb
jnp
pop
add
jnp
fbstp
or
stos
aas
nop
add
cmp
arpl
mov
inc
test
in
mov
sbb
xor
arpl
push
push
nop
sub
fiadds
push
fdivl
addl
sbb
sbb
jecxz
sub
push
cld
mov
or
iret
fistl
and
fcmovnbe
dec
push
xor
push
iret
sbb
notb
jmp
jne
push
cltd
lahf
push
xchg
xor
jo
xchg
into
ficoms
outsb
dec
int
sbb
leave
adc
mov
lret
add
loope
mov
je
push
fwait
es
test
dec
sti
idivl
cmp
mov
pushf
adc
mov
data16
adc
add
cmp
inc
cld
push
adc
mov
cmpsb
add
xorl
into
mov
add
mov
add
ja
mov
push
out
stos
inc
xchg
mov
xchg
loope
lods
push
pop
mov
outsb
xchg
xchg
stos
lea
mov
jae
sbb
hlt
popf
adcl
addl
jle,pt
cmpb
push
jnp
iret
or
orb
gs
and
into
inc
dec
faddl
and
aad
inc
rcr
cmp
das
xchg
cwtl
inc
and
and
jle
inc
lcall
jo
or
push
lret
dec
pop
inc
push
outsb
xor
int3
subl
movsl
adc
pop
sbb
arpl
jge
add
nop
adc
dec
enter
cmp
movsb
cmpsb
sbb
dec
mov
jl
dec
into
push
mov
jns
push
inc
xchg
xor
mov
or
inc
loope
lds
in
or
xchg
es
push
in
add
icebp
into
jns
mov
jmp
bound
scas
xchg
jmp
mov
xchg
sbb
dec
cld
xor
nop
in
call
mov
lret
cmc
pop
mov
pop
inc
shrb
jo
push
sbb
repz
mov
inc
jecxz
push
xchg
in
pop
xorl
mov
fbstp
lds
cmpb
mov
loope
loop
popa
sbb
dec
pop
fdivl
cltd
inc
data16
test
jns
aas
sub
stc
add
mov
cs
or
mov
out
jno
sub
push
std
xor
fists
cmc
movsb
lret
jmp
sub
sbb
in
push
jl
ljmp
xchg
fs
dec
dec
mov
pop
les
inc
test
ljmp
pop
push
jb
ret
mov
mov
cmp
pushf
dec
mov
cltd
scas
pusha
ljmp
call
nop
aas
outsb
mov
scas
jb
lock
and
arpl
data16
out
sbb
push
push
outsb
lds
pusha
ficompl
fbstp
mov
jbe
pop
sarb
cwtl
divb
int3
xor
out
shl
jle
lock
push
test
dec
inc
pusha
jno
lods
out
mov
jmp
mov
dec
fmull
addr16
xor
jle
push
and
mov
adc
mov
icebp
cs
testb
jle
rcll
sub
jle
adc
push
into
push
mov
push
ffreep
push
in
jbe
push
sub
mov
shlb
push
ds
xchg
pop
movsl
xor
xchg
fmuls
xchg
aad
adc
jae
testl
addr16
lret
xchg
addr16
push
dec
jne
out
sarl
mov
xchg
mov
fwait
rorb
stos
xchg
sahf
pop
push
mov
sub
gs
pop
jle
dec
aad
inc
lret
in
mov
sbb
lcall
mov
mov
xchg
dec
pop
scas
lock
sti
std
jnp
jecxz
insb
xchg
aas
rclb
mov
jns
into
lock
adc
adcb
imul
pop
clc
sbb
or
outsb
mov
pop
dec
jge
test
ljmp
fucomi
cmp
xchg
dec
xchg
lock
shll
mov
cltd
xchg
and
mov
push
mov
or
sahf
lcall
stc
sbb
or
in
jmp
mov
rolb
call
sahf
and
das
sahf
add
mov
sbb
pop
sub
sub
out
dec
cmp
into
mov
fcoms
add
jecxz
adc
pop
mov
cmpsb
imul
cmpsb
and
adc
scas
sub
mov
out
sub
push
nop
jg
idiv
gs
cli
and
cmc
inc
dec
flds
and
ret
iret
mov
in
inc
ja
mov
xor
int
subl
js
mov
loopne
fmull
or
dec
xchg
pop
pop
sbb
jbe
iret
sub
ret
sub
inc
in
cmovbe
push
and
out
and
push
add
xor
cmpsl
nop
dec
fs
cmp
lods
xchg
lea
shll
mov
ret
adc
adc
push
inc
pop
or
out
mov
cmp
or
gs
cmc
sbb
inc
push
movups
push
ss
addr16
adc
fnsave
popa
fsubp
push
sbb
out
std
mov
into
inc
insb
arpl
daa
pop
loopne
and
cltd
mov
sub
dec
testb
sahf
xchg
jno
mov
mov
cmpsl
test
fisttps
rol
rcr
in
jge
jmp
and
sub
jbe
mov
es
sub
outsb
dec
data16
movsl
jmp
add
cmp
dec
xchg
mov
scas
xchg
or
push
test
and
ja
push
push
sbb
hlt
sub
data16
fdivs
mov
ss
adc
jg
push
pop
pop
add
push
cmp
sbb
aas
in
fucomip
pusha
push
lret
sub
mov
inc
xchg
push
ffreep
outsb
gs
adc
shr
mov
cmp
mov
pop
loop
scas
aaa
nop
dec
jg
idivw
sub
jbe
push
jnp,pt
inc
fstps
push
mov
sub
or
mov
fwait
bound
xchg
lods
mov
pop
aas
adc
mov
popf
push
nop
jae
dec
fs
jg
repz
movsl
cmpsl
scas
stos
fcomps
inc
in
divl
sub
lret
outsb
loope
add
out
stos
sbb
jmp
xchg
and
push
xor
pop
fstps
inc
adc
cld
mov
lret
dec
lock
adc
cmp
int3
add
jg
add
inc
xor
pop
sbb
fnstenv
mov
stos
lock
into
ret
sub
dec
hlt
sbb
in
push
inc
mov
jbe
dec
jmp
mov
mov
push
test
fildl
jecxz
fcoml
out
aad
ja
stos
xchg
mov
mov
adc
jbe
add
push
jno
fldt
sbb
lea
sbb
enter
and
mov
mov
das
inc
and
xor
jge
xchg
sti
mov
shll
cs
out
cs
sahf
nop
popa
mov
sub
sti
pop
ret
mov
movl
xchg
fwait
xor
stos
jmp
adcl
lcall
dec
and
pop
sbb
xchg
or
add
lea
or
rcrb
push
dec
xor
nop
int
lea
cmp
into
jge
lret
out
mov
imul
mov
push
stc
mov
jae
inc
gs
xchg
lock
sarb
inc
out
adc
scas
das
pop
ss
add
mov
jge
ljmp
in
mov
nop
adc
pop
inc
ljmp
mov
rorl
inc
mov
cmc
ja
mov
jle
frstor
mov
pusha
lods
in
bound
aaa
pop
mov
ljmp
ljmp
insl
int
xchg
push
fistpl
das
lcall
mov
outsb
or
ds
xchg
scas
xchg
and
iret
insl
test
inc
dec
arpl
scas
imul
inc
xchg
or
ja
stos
add
dec
aaa
mov
xor
xor
sti
arpl
inc
inc
pusha
ret
adc
mov
js
and
gs
inc
sub
addl
aam
jp
idivb
aaa
push
cmpsb
aas
pop
in
into
aas
mov
push
xchg
lds
push
aas
push
bound
sub
rorl
push
xchg
push
dec
insb
aas
mov
sub
into
addb
rclb
pop
dec
and
xchg
inc
iret
push
aas
stos
les
in
adc
addr16
sub
push
dec
ret
jno
sub
orl
mov
sbbl
mov
mov
mov
pushf
inc
lock
outsb
je
dec
test
inc
inc
sub
in
sub
fiadds
fcmovu
dec
sbb
add
fists
cld
repnz
cmp
adcb
fcmove
data16
dec
fdivrs
add
dec
sbb
adcl
not
cmpsb
std
cmpsl
ret
testb
xchg
test
xor
es
jecxz
push
mov
ret
cld
subl
movsl
adc
pop
mov
inc
mov
mov
and
movsb
pushf
in
dec
lock
push
pop
outsb
mov
cmc
adc
cwtl
shr
repz
pop
inc
mov
popl
inc
add
std
or
xor
push
in
lea
pushf
arpl
ljmp
scas
sub
inc
cmpsl
inc
jae
outsl
cli
mov
mov
loope
lahf
and
mov
mov
push
adc
das
mov
pop
aas
stc
pop
jle
push
in
test
pop
fs
enter
cmp
out
jns
xor
out
mov
adc
lds
mov
push
mov
or
sub
loop
mov
sarl
out
test
adc
addr16
sub
mull
or
mov
movsl
subb
insl
mov
cmp
in
das
lret
and
out
movsl
sub
aam
mov
push
mov
xchg
and
mov
mull
inc
jo
sbb
ds
fwait
lahf
sbb
or
adc
popf
outsl
into
rclb
adc
nop
and
mov
int3
lcall
in
js
ja
push
adc
sahf
pop
cmpsl
or
roll
shrb
pop
ja
cmc
das
js
push
pop
stos
inc
ja
icebp
push
movsl
ja
dec
push
xor
and
or
jmp
aas
int3
mov
iret
push
dec
xor
jbe
insl
add
sub
and
jl
push
js
fdivrs
stc
clc
dec
cmpsb
insl
jno
sub
and
sub
fnstenv
cmpsb
cld
fdivr
cmpsb
sahf
pop
lret
divb
mov
add
jg
jno
xchg
rcr
mov
fisttpll
fistps
mov
push
outsl
out
pop
nop
mov
xor
pusha
test
xchg
xchg
or
pop
dec
sbb
dec
and
into
xchg
stc
lds
xor
subb
or
push
sub
jns
mov
xchg
adc
mov
je
lds
cmp
pushl
push
fwait
test
adcb
shrb
es
out
cmpsb
jecxz
gs
andl
fbstp
mov
xchg
push
ja
dec
lods
cltd
ss
pop
test
js
or
adc
mov
cmc
nop
adc
repnz
jecxz
aad
nop
lret
dec
adc
xchg
enter
lahf
fcoml
xor
push
lea
cmc
into
lods
dec
movl
mov
fnsave
in
test
pop
push
jnp
sbb
aad
add
jl
outsb
pop
daa
mov
mov
pop
pop
dec
mov
inc
aaa
mov
inc
inc
xchg
pop
inc
add
sbb
push
iret
dec
and
cmpsl
arpl
loope
or
sbb
xchg
cmpsl
xchg
mov
jge
in
sbb
out
lods
fnstsw
test
dec
notl
pushf
cmp
fsts
in
ret
aaa
mov
sbb
dec
jle
div
lret
rol
mov
shlb
sahf
repz
int3
ja
aas
inc
js
adc
mov
daa
jbe
shlb
xchg
cmp
pop
xlat
nop
pop
out
filds
ja
push
push
mov
arpl
mov
jnp
rclb
xchg
pop
scas
mov
xchg
push
jbe
push
pop
mov
clc
sahf
inc
mov
jo
sbb
adc
popf
mov
mov
leave
mov
jp
inc
stos
negl
and
add
sbb
jp
sub
xchg
pop
inc
push
or
jmp
or
mulb
jb
push
mov
movl
mov
and
aam
or
or
push
mov
dec
or
cmp
jle
cmp
jmp
cmp
adc
and
rorl
dec
mov
xchg
das
or
xchg
outsl
fdiv
loop
mov
cmp
les
inc
mov
dec
and
loop
jnp
movsb
les
jmp
add
and
jns
nop
insl
or
mov
in
rcrb
dec
adc
pushf
shrb
mov
xor
nop
sbb
in
data16
aad
pop
imul
imul
inc
ret
push
sbb
addr16
gs
mov
mov
jno
dec
sbb
ss
or
inc
ficompl
insb
test
in
les
iret
pop
mov
mov
mov
loope
push
mov
dec
arpl
push
imull
jo
push
iret
stos
adc
pop
aaa
nop
pop
xchg
push
dec
xchg
outsl
push
inc
dec
mov
fdivs
sarb
adc
inc
jo
push
mov
cltd
addr16
cmp
fwait
xchg
test
jbe
cli
jb
lds
xchg
dec
push
inc
mov
aaa
xor
or
add
adc
mov
test
idiv
mov
xchg
popa
psrlw
adc
std
rorb
and
fimull
push
xor
push
mov
shlb
ja
mov
push
xor
inc
xor
mov
je
jno
iret
xchg
mov
scas
lds
xchg
rcr
mov
pop
and
lret
mov
xchg
dec
stos
jnp
rcl
rcrl
sbb
push
lcall
mov
mov
push
mov
pop
jp
xchg
testl
lods
pop
sbb
xor
inc
sbb
rol
push
fistl
rol
dec
mov
mov
pop
push
mov
ret
inc
addl
push
push
stos
push
js
ja
sub
xchg
jp
scas
push
jge
push
cwtl
hlt
push
adc
jle
rcl
lods
pop
stos
jae
or
xorb
mov
fdivrl
add
aas
call
adc
shlb
mov
sub
mul
nop
jbe
out
jae
faddl
jle
xor
adc
jne
jnp
repz
stos
idivl
lods
fdivrl
pushf
ja
je
and
hlt
nop
stc
int
or
out
mov
xor
adc
loopne
add
in
xor
xchg
mov
dec
sbb
dec
push
push
xor
stc
xchg
cmpl
jbe
xor
lods
lods
push
fcoml
fwait
movsb
fwait
dec
mov
div
xor
mov
js
adc
push
mov
sbb
aam
int
ja
fildl
mov
mov
test
jb
inc
pop
xor
push
mov
push
xchg
xchg
outsl
mov
js
std
mov
iret
outsl
xchg
popf
mov
enter
xor
push
inc
mov
add
xchg
and
adc
push
outsb
adc
andb
jecxz
imul
call
adc
xchg
mov
ret
rcrl
inc
or
pop
mov
lock
inc
jecxz
jecxz
ja
dec
mov
pop
out
adc
xchg
popw
fsub
inc
sti
mov
fisttps
push
maxps
iret
lret
out
pop
xchg
pop
mov
push
dec
cmpsl
or
loopne
stos
cmp
push
pop
sub
mov
pop
mov
lods
mov
or
mov
les
xor
pop
test
mov
nop
fwait
cmp
cli
lahf
adc
ds
dec
cmpsl
jg
mov
dec
lods
in
adc
push
jne
aaa
and
push
mov
mov
rclb
push
mov
arpl
nop
dec
jo
mov
aaa
xor
or
xorb
inc
pop
push
movsl
push
cltd
inc
loop
sahf
stos
shll
das
mov
lahf
imul
pop
aad
fldt
cltd
jmp
stos
lret
mov
jecxz
mov
mov
push
push
mov
movsb
jno
xchg
mov
add
and
push
rep
popw
mov
xchg
inc
xlat
outsb
scas
sbb
sbb
in
rol
sub
jae
outsb
imul
daa
xchg
loope
pop
add
cmpsl
ljmp
xchg
xor
push
lods
ja
pop
xchg
cmp
iret
push
js
xchg
cmp
sub
imulb
iret
stos
in
jne
addl
jbe
push
pop
xchg
aam
push
xchg
mov
cltd
mov
inc
push
sub
push
inc
sbb
jae
push
xchg
faddl
scas
mov
iret
mov
aaa
movl
loop
mov
inc
ss
lahf
shl
dec
mov
push
subl
ljmp
jp
or
sarl
and
mov
xchg
nop
xchg
inc
out
stc
inc
outsl
adc
out
mov
lret
shrb
aad
dec
mov
xchg
das
nop
enter
or
xchg
push
pop
xchg
add
and
enter
sahf
push
lahf
dec
jge
fcmovne
and
add
adc
stos
xchg
enter
insl
mov
jbe
xchg
int
xchg
inc
adc
addr16
jno
pop
pop
lahf
repnz
lods
aaa
into
jge
mov
divb
mov
out
leave
lea
push
arpl
ljmp
out
sub
push
out
inc
in
jle
sbb
popf
scas
je
adc
or
sarl
mov
ffreep
cmpsl
daa
mov
cmp
ret
aas
inc
jb
rolb
push
negb
leave
std
in
jns
inc
int
jmp
aaa
adc
lret
movsb
push
movsb
hlt
push
ret
cmc
and
mov
cmp
in
inc
add
mov
stos
pop
jle
mov
lods
adc
xor
mov
mov
xchg
xchg
leave
push
push
nop
sbb
scas
inc
loopne
aaa
push
sub
sbb
mov
ja
gs
aas
or
into
fxch
popa
cmp
insl
arpl
jae
scas
in
pop
loope
xchg
cld
fiaddl
pop
dec
push
scas
das
aaa
xchg
push
mov
cmpsb
sti
xchg
mov
mov
xlat
push
into
inc
idivb
out
inc
mov
xor
fistl
test
mov
sub
pop
daa
push
into
cmpb
pop
ds
xchg
movsl
aad
mov
inc
mov
out
pop
lahf
mov
jae
jecxz
xchg
mov
jbe
idivb
xchg
mov
adcl
cwtl
jecxz
in
cli
jnp
ret
jmp
xor
movsb
adc
sarl
aad
pop
arpl
inc
fldcw
mov
std
sbb
adc
add
sub
cmpsb
js
iret
inc
sub
rorb
sahf
aaa
lea
call
scas
fwait
push
js
xor
mov
cmp
pop
cli
xchg
inc
js
lods
leave
xor
pop
xchg
inc
stc
xchg
cmp
push
shll
pop
mov
les
rcpps
dec
xchg
test
add
lret
mov
dec
adc
pop
fwait
imul
xor
fdivs
push
mov
fisubs
std
xor
push
mov
pop
stos
mov
scas
dec
loop
push
adc
out
xor
or
pop
iret
ds
mov
pop
sarl
add
cmpsl
xor
add
cmpsl
ds
or
nop
aas
scas
xchg
mov
mov
sbb
aaa
in
xchg
lods
inc
push
pop
cmpsl
mov
into
aas
scas
xchg
fdivr
cmp
and
xchg
mov
daa
xchg
push
aad
cmpsl
nop
add
in
push
mov
ja
sbb
aas
jge
ret
sub
dec
sbb
fwait
sbb
jecxz
cli
mov
inc
leave
aaa
nop
fisubrs
insl
hlt
into
int
adc
into
aam
movsb
pop
and
xchg
cld
fsubs
mov
xor
les
dec
push
fnstenv
push
mov
xor
xchg
fsubr
arpl
push
divb
ss
sub
mov
dec
lret
imul
push
xchg
stos
or
xchg
jbe
adc
stos
ror
out
sbb
pop
fmulp
sub
jbe
pushf
loope
mov
cwtl
ret
pop
fldenv
dec
cmc
xor
xchg
aaa
mov
scas
xor
fldl
subb
xor
cmp
test
xchg
push
sahf
lods
test
movsb
dec
sbb
xchg
pop
sub
and
dec
imul
or
ja
outsl
dec
xchg
jbe
scas
ds
fwait
aad
mov
mov
icebp
imul
mov
mov
into
data16
push
push
lret
push
movsl
shrb
aaa
xchg
ror
xchg
and
xor
xchg
sub
add
jecxz
mov
inc
inc
jnp
negb
and
adcl
rol
es
adc
ds
ja
add
and
or
cmc
adcl
ss
or
aad
subl
daa
xor
cmc
sub
jae
and
add
ja
pop
xchg
xor
js
jns
ffreep
xor
dec
cmp
fimull
mov
enter
inc
push
sbb
add
adc
add
ss
movsl
xchg
cmp
incb
aaa
nop
cmpl
inc
aas
sbb
lods
xlat
es
and
outsb
mov
push
push
inc
ret
jbe
lahf
les
dec
push
mov
sarl
inc
mov
mov
jae,pt
scas
mov
bound
push
andl
mov
cwtl
jle
aad
pop
add
xchg
mov
push
test
scas
and
fildl
dec
dec
testb
shrl
std
dec
push
and
pop
js
adc
pop
pusha
mov
popa
mov
std
xorl
ja
repz
xchg
jecxz
jg
sbb
adc
pop
jbe
mov
sahf
pop
inc
sbb
jle
sbb
jnp
in
jnp
mov
mov
push
push
mov
cli
rorl
push
xchg
push
xchg
shl
pop
sbb
std
inc
sub
lods
aad
icebp
rcrb
js
lahf
es
add
xchg
push
inc
in
push
orb
fmull
push
mov
std
push
fdivr
sub
xor
inc
subl
scas
outsl
movl
mov
sahf
inc
mov
pop
mov
and
fwait
xchg
adc
fcoms
push
std
repz
imul
cmp
xor
cltd
xchg
sbb
nop
sub
fdivrs
std
sub
test
std
and
push
notb
int3
pop
sub
gs
inc
clc
int
jno
push
sub
cmp
lods
data16
adc
ret
shrl
mov
adc
and
jmp
cmpw
push
shlb
adc
push
xchg
mov
push
ficoms
push
sub
add
daa
iret
mov
ret
inc
cmpsb
sub
pop
das
js
and
aaa
je
mov
jp
adc
cs
inc
scas
dec
movsl
iret
int
nop
stos
scas
in
scas
pop
push
push
outsb
xchg
icebp
push
add
scas
aaa
sbb
leave
nop
out
lret
xor
mov
push
cmp
je
std
xor
mov
xchg
push
pop
jnp
sbb
push
or
iret
mov
pop
movsl
notl
pop
js
mov
xor
leave
jl
shl
mov
orb
xchg
mov
xchg
out
xchg
sub
aaa
imul
mov
jnp
sbb
and
out
xchg
loope
iret
or
dec
jecxz
adc
je
xchg
jne
iret
cs
and
loop
out
mov
push
int
adc
jmp
jmp
sub
mov
int
mov
rcll
mov
mov
rcll
jb
in
dec
sub
nop
test
in
les
mov
lret
test
or
mov
mov
adc
test
mov
dec
adc
repz
lret
pop
xchg
outsl
xchg
jbe
mov
lds
scas
mov
pop
movl
and
dec
aad
scas
sub
ss
cmpsl
aas
jb
xchg
in
jge
ss
pop
test
lds
into
ret
mov
scas
adc
push
int
inc
inc
or
add
scas
push
lret
pop
inc
jns
xchg
call
out
ds
xor
fsubl
shl
cmp
jb
lea
jbe
adc
add
cmp
pop
jecxz
pop
jns
callw
dec
dec
stos
sub
xor
adc
pop
jo
dec
jbe
lods
jne
push
aas
lret
jecxz
sahf
cmpsb
loop
jnp
mov
std
cmp
mov
mov
dec
pop
dec
inc
lods
inc
ret
mov
iret
xor
movl
lea
movsl
mov
dec
mov
stos
inc
jmp
insl
cmpsb
cmpsl
add
xchg
cmp
inc
push
jle
lods
lret
dec
xchg
lds
xchg
mov
xchg
jle
push
inc
adc
mov
dec
pop
mov
shlb
shl
ds
sarl
rcrb
xchg
pop
dec
popa
mov
imul
mov
cltd
push
testb
push
jecxz
jle
sub
loop
shrb
add
jne
mov
xchg
and
jl
inc
push
cmp
xor
xchg
xlat
repz
jbe
xchg
inc
jbe
incb
pop
iret
iret
sub
xchg
or
leave
mov
int
jecxz
pop
pop
jmp
jg
xchg
sti
imul
aas
aad
or
cmp
jp
testl
arpl
cmpsl
ljmp
repz
mov
sub
sbb
inc
adc
scas
test
mov
clc
xchg
roll
repz
jnp
xor
mov
subb
cld
mov
fucomi
mov
mov
jnp
mov
loope
cmp
xchg
in
or
and
in
sar
fldl
push
aam
fs
popa
mov
outsb
ret
ds
pop
mov
test
lods
test
sar
inc
rcll
aaa
shrb
push
adc
jbe
push
clc
or
int
aad
push
cmp
call
xor
cmp
mov
loope
std
out
mov
and
test
dec
push
pop
daa
mov
push
jle
xchg
dec
add
std
xor
mov
aaa
insl
js
aaa
mov
sahf
dec
sub
popa
lods
scas
mov
aad
psrlq
dec
mov
jle
jp
or
pop
inc
notb
stos
bt
jle
repnz
loopne
out
cmp
xchg
das
cmpsb
lds
ret
cltd
cmpb
add
shld
test
mov
aad
pop
mov
xchg
mov
aaa
push
shl
push
imul
fdiv
test
pop
push
xchg
and
adc
rolb
xchg
add
and
shlb
mov
inc
repnz
xchg
xlat
jbe
push
aad
xchg
cld
aaa
sub
popf
orb
mov
cmc
jle
fcom
into
test
fiadds
adc
in
ljmp
loope
int3
adc
into
push
ds
mov
xor
sbb
or
xchg
nop
call
xor
adc
mov
push
enter
mov
mov
push
mov
jbe
xchg
xchg
cmp
and
ret
mov
cs
mov
mov
repz
repnz
push
dec
sbb
jns
xchg
dec
aad
inc
loopne
inc
lds
arpl
pop
sub
mov
rclb
pop
lea
ja
out
aaa
out
addl
push
sar
daa
jle
lods
sbb
mov
leave
pop
imul
and
cltd
out
sahf
movsl
cld
cmc
stos
xchg
in
xchg
xchg
rcrl
adc
and
sub
and
xchg
aad
inc
outsb
mov
jbe
je
xchg
int
xchg
jno
fs
xchg
test
stos
mov
sub
mov
stos
mov
xchg
inc
stc
or
mov
shll
dec
inc
sahf
xchg
jne
dec
push
fildll
ja
mov
popf
adcl
stos
data16
in
cmpsl
cld
push
adc
mulb
sarb
push
lcall
roll
inc
nop
popf
jns
push
lea
out
adc
sub
outsl
and
jge
stos
mov
ret
stos
js
outsl
jg
mov
inc
xchg
jnp
stos
sbbb
jae
in
add
test
cs
push
lods
pop
pop
mov
inc
sti
repz
push
mov
ret
mov
mov
sbb
cmp
mov
lds
mov
into
pop
fiadds
repnz
push
lret
mov
mov
sub
mov
out
push
clc
or
stos
cltd
xchg
adc
mov
cmp
out
testb
mov
arpl
loopne
dec
pop
pop
push
cli
in
lods
jbe
stos
ss
mov
jg
iret
jmp
xor
jecxz
ljmp
pop
fdivl
cwtl
xchg
aad
imul
mov
sub
aaa
xorb
and
sbb
ficoms
inc
out
jne
jbe
stos
push
mov
mov
push
mov
in
add
dec
mov
into
mov
fiadds
insl
cmc
push
lea
pop
dec
cmp
push
lgs
mov
inc
push
xor
inc
ja
cmp
nop
lahf
xchg
mov
jp
inc
cmova
xlat
inc
lock
jge
aaa
repz
rolb
in
mov
in
int
testl
nop
push
push
inc
cs
mov
jnp
pop
fnstenv
adcl
jle
jle
test
leave
in
data16
mov
xchg
ss
cmpsb
mov
ret
or
shrl
aam
jg
xchg
ror
cmc
push
sub
lock
add
in
mov
push
push
inc
inc
in
dec
dec
mov
mov
xchg
adc
js
xchg
cmpsb
dec
aaa
pop
pop
icebp
pop
ret
nop
lds
dec
and
xchg
aaa
push
sub
push
xchg
mov
mov
out
push
fidivs
add
jae
out
divps
outsl
push
pop
mov
mov
ret
push
inc
push
inc
ror
mov
iret
xchg
int3
push
stos
mov
mov
push
rcpps
andl
push
push
jmp
das
dec
fidivrs
adc
xchg
dec
push
das
xchg
shll
shll
ljmp
iret
daa
fmulp
ds
gs
and
jae
pop
cmp
int
and
mov
cmpsl
pusha
push
jge
sub
aam
rcrl
out
xchg
mov
pop
js
jnp
push
push
lcall
cmp
pop
data16
shl
ja
mov
rolb
or
sub
xor
loop
shl
push
mov
pop
rcll
jb
push
stc
xor
mov
lret
xchg
pop
jae
sbb
inc
xor
xorb
or
movsl
imul
test
popa
add
mov
imul
in
insl
les
jge
xor
mov
push
cs
push
loop
xchg
and
inc
leave
adc
sub
neg
cmc
push
jns
pop
leave
mov
enter
mov
fiadds
add
dec
aas
outsl
std
mov
push
lahf
dec
fwait
stos
inc
cld
sti
hlt
push
rcll
xchg
popa
push
and
insl
mov
orl
xchg
push
or
xchg
and
sbb
lahf
lods
lods
push
test
shl
fmuls
imul
xor
je
out
mov
ljmp
mov
xchg
nop
cli
in
mov
push
lahf
std
cmp
out
imul
push
out
jle
xlat
xchg
xchg
inc
or
movsl
xchg
js
jg
mov
adc
stos
hlt
xor
pop
cmp
in
mov
xchg
xor
adc
sub
lahf
jo
pop
in
lds
push
pop
mov
sub
out
xchg
and
mov
push
iret
and
or
push
cmp
cmpsl
lock
nop
pop
push
js
or
out
cmp
xchg
dec
adc
in
mov
inc
ja
pop
in
inc
jl
add
push
repz
scas
movsb
sbb
xchg
jb
sub
xchg
cmp
inc
jns
add
cmpsb
xchg
ja
mov
or
addr16
lds
hlt
out
aas
dec
lret
dec
jecxz
mov
adc
test
imul
and
cmp
and
es
pop
sbb
jne
outsl
movsb
popf
push
and
add
xchg
je
push
addl
jecxz
idivl
ljmp
ret
faddl
jl
test
xlat
gs
icebp
xchg
daa
lret
inc
arpl
mov
xor
push
jmp
sub
mov
push
mov
pop
adc
lods
sbb
and
test
ret
btc
jne
sub
or
in
xchg
ss
cmp
jge
pushf
jg
or
push
push
push
cs
inc
testb
or
fisubrs
or
pop
fsubs
ja
xchg
dec
lahf
cli
mov
sahf
stos
dec
test
xchg
insb
push
daa
mov
mov
xchg
sub
outsb
js
mov
inc
xchg
ljmp
inc
dec
in
ret
inc
and
repnz
aad
dec
js
mov
jb
mov
mov
ret
mov
xchg
roll
sbb
cmp
push
lds
adc
mov
testb
ja
lret
cld
jg
mov
mov
jnp
mov
push
sub
mov
fsts
inc
xor
push
lea
aaa
mov
std
aaa
cmpsl
pushf
push
jmp
mov
ret
out
jp
jge
ja
mov
adc
push
jno
adc
pop
mov
mov
pop
mov
sub
mov
fcoms
repnz
jne
jo
inc
and
mov
mov
bound
mov
popa
lods
test
into
rclb
cmp
lods
mov
popa
cmp
pop
sub
xchg
lea
rorl
sti
pop
mov
das
aaa
mov
jecxz
bound
dec
js
xor
xchg
das
ljmp
push
adc
mov
shlb
mov
loop
inc
push
mov
fimull
jg
and
pushf
push
xchg
sbb
gs
cmp
lcall
mov
inc
div
mov
lea
into
int
mov
mov
sub
push
cmpsb
aam
mov
xor
jmp
rep
jg
cmp
cmp
imul
mov
pop
jnp
icebp
js
testl
and
mov
sahf
xor
mov
add
lret
out
in
outsb
xlat
adcl
addr16
mov
adc
sub
add
lret
shll
mov
aam
xchg
lds
pop
add
mov
int
in
lds
fs
xchg
push
push
adc
outsb
mov
pop
in
sub
lret
int
mov
cmpsl
dec
xor
mov
inc
or
add
jne
jnp
test
add
push
pusha
subl
lods
push
stos
shlb
jge
sub
ret
xchg
push
mov
je
popf
xchg
push
shlb
orl
or
xchg
push
xchg
dec
xchg
rcr
mov
test
cmp
or
and
sbb
dec
das
push
mov
push
lea
jne
jb
movsl
jbe
xchg
jae
stos
mov
leave
lds
or
std
ja
mov
or
push
ja
aaa
push
cld
dec
xor
inc
mov
mov
add
ss
ljmp
inc
notb
push
aas
lret
xchg
stc
mov
std
mov
sub
in
aam
cmc
test
js
bnd
or
gs
hlt
iret
loope
add
lds
sbb
cltd
movsl
ja
xchg
push
xor
addr16
sbb
add
xchg
fiaddl
jl
bound
test
in
sub
xchg
push
lret
sub
arpl
sahf
cmp
and
sub
out
mov
jle
in
loope
push
xor
addr16
jbe
lahf
dec
xor
das
jge
pop
dec
mov
nop
inc
dec
std
lret
leave
adc
jo
scas
lahf
loope
rclb
and
ja
mov
repz
mov
jle
sbb
jl
push
adc
add
sahf
add
out
cli
sub
sub
imul
xchg
dec
mov
ret
xchg
pop
loopne
jge
mov
cmp
xchg
push
mov
dec
push
ficoml
sbb
push
dec
jmp
cltd
cmp
inc
jmp
aas
nop
mov
xchg
jae
pop
aaa
jmp
data16
gs
sbb
in
mov
ds
sub
inc
inc
inc
cmc
jne
pop
fbstp
movsl
mov
and
add
aam
cltd
fdivrl
mov
xchg
jp
sarl
mov
xor
inc
in
xchg
adc
sbb
add
push
push
fcomp
repz
inc
xlat
pushf
dec
ja
push
mov
pop
aaa
xchg
and
gs
add
stos
mov
test
insb
and
int3
jo
mov
adc
xchg
idiv
mov
cld
push
mov
xchg
ss
push
cmp
mov
les
dec
fistpll
dec
cwtl
ljmp
clc
es
into
ja
cwtl
pop
ja
sbb
pop
adc
fstpt
in
and
mov
xchg
roll
pop
xchg
xor
ror
leave
mov
xchg
and
je
dec
or
cmpsl
and
pop
mov
popf
adc
pavgw
mov
xor
pop
cmpsb
mov
popf
adc
imul
dec
and
ret
jmp
xchg
imul
cs
out
pop
stos
clc
mov
jecxz
pop
cmp
mov
fadds
nop
gs
jl
int3
pusha
iret
negl
shlb
icebp
push
dec
push
jg
mov
lret
or
pop
cmp
in
pop
nop
and
loope
push
add
sahf
push
and
sahf
js
jle
mov
dec
loope
int
stos
cli
jnp
jnp
inc
int
xchg
cld
fdivl
dec
dec
push
and
mov
test
inc
adc
out
xchg
sbb
lods
stos
pop
push
inc
cltd
adcl
adcl
out
xchg
cli
or
aaa
mov
jle
movsl
outsb
fs
js
lds
lods
test
adc
pop
push
in
pop
push
lahf
in
stos
sbb
mov
sti
pop
adc
push
filds
movsl
stos
mov
push
inc
or
ret
sbb
pop
rolb
push
test
bound
dec
jmp
enter
sbb
inc
fnstenv
jg
adc
in
lret
push
iret
gs
ficoml
stos
or
lcall
xchg
or
loop
mov
xchg
add
sbb
pop
mov
adc
pop
mov
jbe
jge
jno
inc
jg
sub
xchg
imul
push
inc
pop
rol
aaa
push
inc
sahf
in
mov
dec
cld
jle
push
jle
adc
loopne
hlt
dec
or
ret
idivb
mov
add
pop
sbb
pop
jmp
jle
fildl
nop
dec
out
xor
mov
outsb
daa
int
out
aas
inc
xchg
fcoml
push
nop
mov
or
xchg
push
xchg
jecxz
std
jae
mov
jo
mov
cmp
mov
aaa
sarb
frstor
or
push
rorb
lcall
jmp
mov
test
push
mov
jmp
cmp
mov
rcll
jle
std
adc
cltd
cltd
pop
pop
mov
pop
cltd
push
lret
out
lds
mov
bound
js
pop
lods
mov
aas
mov
scas
scas
data16
outsl
jb
xchg
js
loopne
xchg
mov
aad
jmp
rorb
push
cmp
adc
push
or
mov
adc
dec
pushf
pop
push
fiaddl
decb
cmpsl
mov
div
cmp
subl
mov
pop
in
dec
cmpsb
push
add
mov
icebp
adc
mov
mov
jbe
js
push
pop
xchg
mov
xor
jg
shrb
jmp
jmp
aam
cmc
dec
sub
inc
popa
dec
dec
dec
daa
xchg
out
lds
mov
pop
or
fsubl
adc
mov
push
jle
sbb
mov
jno
and
push
or
inc
rolb
addr16
cmp
inc
add
sahf
xchg
or
in
imul
mov
cs
ja
xchg
fs
data16
out
or
xchg
sub
fs
leave
add
gs
rol
jmp
mull
inc
pop
adc
sub
clc
aad
stos
add
mov
ds
mov
dec
xchg
jl
dec
aas
xchg
out
lahf
subb
jg
dec
movsl
imul
cltd
mov
xor
iret
fwait
nop
dec
jp
pop
daa
std
jge
ja
mov
fistpll
inc
inc
pop
xchg
sbb
inc
sub
push
data16
jg
adc
cmp
and
not
add
sbb
out
in
ss
push
mov
push
mov
es
push
cmp
dec
jbe
pushf
xor
mov
mov
mov
sbb
ja
mov
xchg
or
push
loopne
pop
adc
xor
dec
movsl
das
jbe
je
sub
lods
jb
stos
sub
icebp
mov
jae
lret
ret
push
inc
nop
cmp
into
fstpl
xor
repnz
cmp
xor
inc
jne
xor
mov
cmp
ja
rcll
inc
dec
and
scas
je
repnz
adc
popa
jmp
mov
js
push
pop
shlb
sbb
sbb
add
cmc
push
dec
pop
adc
mov
push
in
xlat
int
jecxz
inc
pop
rorl
push
xchg
adc
lods
fsubl
fsubs
sti
sub
adc
stos
mov
cmp
jp
test
add
leave
mov
and
sbb
inc
pop
push
push
cmc
and
add
xor
les
imul
jo
mov
stc
imul
cmp
iret
jg
xchg
jg
lds
clc
inc
push
stos
into
hlt
pop
imul
gs
cmc
mov
hlt
stc
mov
leave
xchg
mov
inc
jmp
test
add
roll
xchg
mov
gs
aas
daa
addr16
cmp
push
lahf
stos
and
xchg
and
cs
subb
icebp
or
mov
lret
test
fisttps
das
ds
push
push
js
fsubs
inc
cmp
push
xchg
sbb
mov
mov
pop
mov
lret
mov
idivb
test
jb
mov
lahf
sbb
mov
cltd
cmp
sbb
cmpsl
aaa
mov
pop
inc
out
jae
into
in
iret
push
ds
inc
add
rolb
fsts
testb
xor
inc
sbb
push
sub
push
push
push
cmp
rcrb
js
lods
add
dec
dec
dec
decb
jb
add
into
mov
or
jle
ja
arpl
cmpsl
sub
push
int
mov
mov
stos
cmp
enter
sbb
pop
pop
je
cld
sbb
and
mov
cmc
ficoml
nop
xor
je
and
mov
rcrb
ljmp
inc
pop
pop
iret
dec
jnp
fimull
stos
pop
inc
insl
sub
inc
pop
lds
push
sbb
cmp
scas
xchg
mov
cmpsl
aaa
jae
mov
push
lea
ljmp
xchg
push
pop
pop
ja
das
push
jecxz
xchg
js
aas
int
out
cmpsl
dec
mov
cmp
xchg
xchg
rclb
push
scas
inc
or
and
or
push
fcoml
sbb
hlt
push
xchg
pushf
dec
imul
pshufw
fiadds
fs
aaa
out
jno
fdivr
cld
and
cmc
or
push
outsl
and
sub
popf
push
fiadds
mov
mov
ljmp
out
aad
adc
cmpsb
or
push
mov
adc
cmp
dec
xor
dec
push
or
sbb
jnp
test
sub
fimuls
xor
mov
mov
sbbb
xor
xor
push
mov
data16
cmp
aam
into
ficompl
loope
loope
sbb
pusha
stos
movsl
adc
lds
leave
dec
ds
push
dec
push
std
jns
add
xchg
fcmovne
cmp
mov
pop
aas
push
negb
jbe
lock
ret
cmp
push
dec
jecxz
jge
lahf
mov
xchg
jbe,pn
mov
lret
cmp
je
sub
mov
sahf
notb
lahf
dec
cltd
add
mov
mov
jmp
nop
ret
leave
nop
sbbl
dec
addl
addr16
imul
sub
in
and
adc
int3
test
enter
jne
sbb
mul
add
jb
aas
inc
or
jle
mov
jl
in
push
ss
ret
out
sbb
mov
mov
sbb
sbb
xchg
ret
nop
pushf
cmc
push
push
stos
sbb
lods
clc
xor
mov
aad
mov
and
xchg
sbb
mov
mov
push
imul
inc
in
push
das
aad
xchg
mov
cmp
stc
cmp
jb
testb
mov
mov
loopne
push
adc
sub
xchg
pop
jle
lahf
addr16
mov
je
add
cld
and
inc
imul
sub
inc
fwait
mov
and
dec
hlt
aaa
clc
mov
sbb
or
jmp
mov
pop
lret
ret
cmp
lret
aaa
nop
scas
not
mov
jns
push
js
sahf
sahf
aam
jle
ljmp
ljmp
pop
test
stc
inc
add
outsb
sub
mov
jb
push
push
daa
jecxz
push
aas
imul
dec
cmpsb
jp
cmp
das
dec
adc
ret
hlt
lret
cmp
cmc
pop
lahf
adc
add
inc
and
mov
ss
cmpsb
in
fsubrp
or
ret
out
test
scas
xchg
cld
addr16
cmp
lret
sbb
xlat
clc
and
mov
leave
div
daa
or
xchg
jg
mov
fisttpl
xchg
pop
dec
ljmp
rorb
nop
inc
push
test
cmp
test
jge
jmp
dec
xor
xchg
or
outsl
mov
and
movsl
lcall
cmpsl
xchg
je
in
and
mov
aas
nop
in
cld
mov
ret
dec
in
cld
push
stos
inc
insl
int
sbb
xchg
insl
xor
outsb
shlb
mov
pop
psubw
jge
aad
dec
data16
push
push
mov
sub
out
jo
jge
ss
mov
inc
popa
inc
mov
test
push
mov
notb
mov
add
imul
loope
lds
enter
fdivl
aam
and
lret
test
adc
mov
gs
xchg
and
test
lret
fwait
dec
xor
cmp
cld
mov
jbe
jge
sub
mov
int
inc
inc
scas
bts
cmpsl
repz
iret
xchg
jecxz
mov
in
fmulp
sub
add
into
fiaddl
push
inc
push
and
push
push
lret
pop
xchg
scas
nop
or
push
scas
mov
mov
lahf
adc
nop
lods
add
mov
mov
pop
fwait
pop
js
sti
jbe
mov
push
ja
sub
sbb
inc
dec
sahf
push
cmp
pop
mov
xchg
xchg
dec
adc
xchg
lahf
mov
test
jg
mov
push
mov
movsb
adc
cmp
inc
ret
sarl
lahf
xchg
js
cmovne
jle
jecxz
iret
lahf
js
lds
lret
jp
add
push
insb
iret
out
xchg
mov
out
rorb
es
add
push
sbb
xchg
pop
and
mov
ds
sarl
adc
dec
pusha
es
gs
fildl
and
lahf
fs
js
jg
sahf
aas
mov
push
mov
cmpsl
mov
pop
popf
jecxz
out
mov
lcall
aad
add
jne
cwtl
sbb
negl
stos
dec
dec
mov
popf
repz
sub
sbb
mov
lods
mov
ss
mov
in
lea
jns
sub
add
aas
movsl
dec
inc
xchg
cmp
scas
xor
pop
aad
adc
xor
shl
xchg
mov
addr16
nop
jmp
adc
sub
mov
mov
nop
lods
int3
pop
xor
insl
mov
das
outsb
lcall
mov
sbb
fstpt
push
fmull
xor
pop
mov
xchg
push
jbe
nop
jmp
and
test
push
insl
jge
dec
fcomps
sbb
and
jo
sub
and
sbb
shl
and
mov
movsl
sbb
or
dec
lret
sbb
pushf
je
mov
shlb
adc
xchg
nop
scas
push
xor
mov
nop
popw
aas
mov
pop
mov
movsb
rcrl
jbe
lret
cmc
xor
and
bound
adc
rcl
std
jbe
imul
in
repz
adc
dec
rolb
mov
xchg
sbb
inc
addl
jle
jmp
cmpsl
mov
inc
xor
mov
les
cmc
mov
sub
push
mov
mov
push
mov
mov
cmp
adc
sbb
les
or
mov
and
test
out
cmp
imul
leave
jle
add
and
adc
into
or
push
addr16
fiadds
inc
insb
out
iret
mov
mov
ficompl
outsb
inc
loopne
jno
pop
push
push
popf
or
and
pop
addb
dec
rcr
adc
jg
aaa
mov
inc
nop
cmp
notb
nop
vunpcklpd
jg
out
imul
jnp
repz
scas
mov
xchg
xor
jecxz
lcall
nop
notb
sub
ss
adc
iret
jmp
imulb
cmp
lcall
lea
lahf
mov
dec
aam
adc
mov
or
push
les
jae
jg
sarl
clc
inc
mov
jae
fbstp
nop
jns
in
and
cmp
aaa
jne
pop
testb
push
sbb
jbe
xor
push
clc
cli
popf
sub
ja
dec
iret
test
add
ss
nop
adc
out
jns
sub
push
dec
sub
pushf
stos
movsl
dec
fwait
mov
dec
cmc
or
insl
stc
cmc
dec
mulb
rolb
dec
push
addr16
gs
pop
cmp
mov
dec
xor
scas
rorb
cmp
push
aas
and
int
inc
xchg
pop
mov
xchg
insb
push
mov
daa
and
push
sub
test
je
mov
xchg
sub
inc
sahf
fistl
ss
imul
arpl
push
dec
aaa
pop
mov
xchg
push
mov
inc
into
stos
or
setle
pop
out
nop
cmc
push
scas
sub
scas
push
xor
xlat
mov
nop
push
or
sbb
pop
rorl
stc
rcll
mov
xchg
cmpsl
ja
movsl
sbb
fsubrs
jp
mov
notb
cmc
mov
xchg
add
mov
push
mov
push
adc
movsl
aam
mov
jbe
pop
and
outsl
mov
lea
pop
dec
adc
push
dec
xchg
popf
jg
aaa
jnp
xchg
sbb
in
outsb
push
dec
jne
push
ret
pop
filds
mov
push
push
jbe
and
push
fldcw
lds
cmpsb
mov
pop
push
dec
gs
aas
lret
stc
mov
mov
xchg
dec
fcomps
fs
mov
insl
jo
cmp
xchg
mov
rorb
pop
push
or
aaa
or
aaa
int3
jmp
imul
mov
adc
dec
lret
scas
mov
cmpsb
into
jbe
jp
inc
jg
movsl
pop
enter
mov
mov
lahf
leave
sub
xchg
gs
mov
fldl
xor
or
adc
cmpsb
dec
hlt
or
into
aam
cmp
je
inc
mov
stos
dec
movsl
call
push
sbbl
jnp
xor
loopne
and
dec
push
scas
mov
cmpsb
jmp
jmp
ljmp
mov
jmp
xchg
jne
xchg
insl
roll
dec
xchg
cmpsb
mov
inc
push
imulb
ss
jmp
xchg
push
hlt
lds
pop
popf
push
in
pop
mov
jb
xor
push
mov
test
cmp
push
xchg
aas
xchg
adc
or
ds
inc
push
and
aaa
jns
dec
rclb
je
sub
mov
or
jb
and
fisubl
aaa
cmc
outsb
das
aas
mov
lret
jle
mov
inc
test
cmp
jg
push
and
loopne
lahf
push
into
ficomps
add
stos
cld
pop
xchg
jmp
jbe
mov
sub
addr16
mov
or
insl
mov
lcall
cmpsb
push
dec
pop
adc
push
dec
and
nop
cmpsl
shlb
mov
ljmp
xchg
xchg
push
mov
push
stos
pop
lcall
mov
cmc
nop
leave
test
jnp
and
pop
popa
dec
icebp
je
pop
cli
test
inc
mov
mov
jecxz
movsb
xchg
jnp
aad
and
push
out
adc
aad
inc
call
push
mov
adc
movsl
aad
mov
dec
inc
dec
push
lock
fs
push
pop
rcr
repnz
or
jg
fsubl
push
adc
shlb
jmp
test
call
add
cmp
clc
std
ljmp
mov
pop
mov
add
push
and
scas
out
mov
rclb
imul
sbb
daa
jnp
aad
xchg
test
dec
aaa
addr16
scas
in
in
push
inc
lret
fcmovnb
andl
mov
mov
out
sbb
mov
movsl
push
into
out
jle
jle
lea
cmpsl
cmpsl
mov
xchg
xchg
nop
movd
lods
aaa
mov
mov
xor
into
jle
mov
addr16
lcall
scas
jmp
inc
loop
jne
dec
int
js
imul
adc
pop
cmp
insb
inc
sub
shl
popa
and
fisubrs
inc
cs
rcrl
mov
ljmp
inc
add
ljmp
jbe
ds
mov
pop
dec
mov
lret
xchg
push
les
mov
xor
pop
jecxz
shll
dec
adc
dec
pop
call
std
cmp
mov
xor
loop
addr16
mov
xchg
aaa
outsb
xor
rol
in
pop
out
ja
ja
push
add
ljmp
jne
out
repz
sub
pop
dec
fimull
addb
dec
sub
lods
fwait
mov
nop
push
lcall
add
cli
mov
test
xchg
adc
push
adcl
inc
xchg
push
inc
push
push
mov
gs
pop
xor
popf
inc
mov
fwait
adc
aaa
push
iret
cmp
sbb
mov
add
lods
xchg
rclb
dec
lret
cld
out
mov
pop
mov
mov
stos
push
lods
out
pusha
and
repz
cmp
xchg
sbb
repnz
aaa
imul
js
pop
push
inc
adc
push
cmp
sub
movsl
repz
mov
inc
je
mov
mov
adc
fs
mov
push
pop
mov
xchg
fimull
fsubs
push
lea
sub
mov
or
lock
inc
xchg
addr16
mov
iret
inc
xor
pop
push
mov
xor
or
push
xchg
xor
xchg
xchg
ds
lcall
adc
je
adc
ds
sbb
mov
fnsave
and
and
cmp
jno
mov
mov
sub
pop
xchg
xchg
cld
out
imul
stos
xchg
adc
mov
into
mov
xchg
fmulp
jb
push
xchg
in
pandn
mov
ret
xchg
cmp
sub
inc
lret
testb
insb
xchg
lret
dec
sub
mov
inc
or
outsl
cmp
into
cmp
imul
adc
adc
cld
dec
fisttps
jle
test
ret
lret
ficoms
jae
jnp
repnz
xor
in
popaw
pop
jg
jg
and
int
mov
lcall
xor
adc
repnz
and
push
div
and
sbb
iret
in
adc
in
inc
sbb
mov
cmp
add
daa
in
adc
stos
and
mov
nop
icebp
fbld
mov
jp
fldcw
shll
repz
sbb
inc
mov
iret
sub
mov
cmp
mov
inc
cld
fsubl
repz
push
fidivl
rol
jo
add
xchg
pushf
pop
cmp
jge
pop
cmp
push
cmc
jnp
and
mov
xchg
adc
dec
aas
rorl
ja
xor
rclb
lods
dec
jge
push
lea
xchg
adc
lds
add
mov
xchg
fidivl
cs
cmpsb
test
lret
enter
or
ret
xchg
aas
xchg
xor
sbb
gs
mov
movsl
cmc
mov
not
jmp
xchg
nop
out
inc
popf
adc
daa
dec
sub
adc
ja
and
fistl
or
mov
jg
cwtl
pop
lds
push
mov
cmpsb
mov
and
mov
jb
xchg
mov
js
push
call
push
add
lock
fidivl
ret
repnz
jl
pushf
cmp
xchg
sahf
iret
mov
test
rcll
movsb
imul
mov
mov
pop
xchg
lds
lea
scas
nop
mov
xor
add
jmp
mov
test
cli
mov
cmpsb
mov
add
xor
addr16
ja
xchg
jg
mov
push
xlat
lds
push
jmp
push
xchg
shll
lods
adc
cmp
ret
and
gs
adc
lahf
jns
gs
les
notl
testb
scas
lock
and
xchg
movsb
or
xor
jb
dec
xor
mov
pop
xchg
lea
sbb
movsl
roll
arpl
les
movsb
inc
mov
fnstcw
jecxz
shll
sbb
cli
inc
in
in
jbe
sbb
pop
rcl
dec
jae
lds
mov
scas
cmp
push
inc
test
repz
addr16
ja
dec
mov
jmp
stos
int
xchg
popf
fbld
adc
inc
xor
xchg
cmpsl
iret
and
xor
mov
push
mov
or
add
mov
test
and
push
xor
xchg
imul
jge
bound
xor
xchg
movsl
in
scas
dec
dec
cs
iret
jo
into
ret
push
xor
lds
popf
push
and
push
add
dec
xchg
ss
xchg
mov
push
xchg
mov
aad
cltd
pop
mov
mov
push
dec
or
add
jp
xchg
sahf
aam
jns
xor
cmpsl
lods
sbb
repz
insl
ja
adc
mov
hlt
xchg
mov
xchg
dec
push
call
insl
iret
push
stos
repnz
dec
xchg
in
xchg
test
enter
repz
mov
call
push
lcall
adc
loop
das
dec
int
pop
xchg
pop
push
mov
adc
push
jno
pavgw
push
adc
ds
cmc
pop
push
dec
xor
push
incl
lock
sub
pop
or
mov
enter
daa
jnp
js
xchg
movsb
insb
out
imul
or
fucomi
imul
movmskps
repz
lock
popf
sbb
daa
adc
push
out
ja
mov
mov
mov
adc
mov
pop
xchg
insb
inc
cmp
mov
push
into
mov
mov
je
inc
out
add
dec
test
pop
cmpsl
cmc
out
mov
mov
mov
lret
dec
pop
or
and
adc
aaa
pop
std
add
fwait
jno
xor
mov
jae
cld
xor
int3
jo
inc
add
cld
jb
hlt
sub
movhps
push
sub
insl
in
into
sbb
push
mov
insl
push
inc
sub
ss
adc
xchg
add
lods
fwait
mov
or
fs
push
arpl
mov
sbb
jmp
mov
sub
scas
xchg
mov
xor
xor
lods
add
and
jne
add
push
mov
xor
nop
loopne
out
lret
ds
pop
pop
insb
adc
and
aad
jl
xchg
not
and
cmp
mov
cmp
push
xlat
mov
stos
jge
xchg
add
sub
aam
out
jp
lods
ds
jb
hlt
shrl
gs
rclb
sub
pop
int3
mov
scas
aaa
fld
loope
mov
movsl
popf
aas
out
stc
xor
movsl
mov
push
fs
arpl
ds
aas
aam
popl
jge
mov
aas
xchg
scas
ja
imul
adc
test
adc
int
push
push
nop
or
mov
pushf
jne
cmp
fisttps
sbb
dec
xchg
adc
inc
mov
push
sub
jno
xor
iret
pop
nop
adc
dec
test
lret
cmpsb
or
dec
push
sar
nop
ss
push
out
cltd
mov
fsubrl
jg
and
mov
pop
mov
arpl
mov
xchg
repz
je
loopne
aaa
mov
imul
cmp
fdivl
adc
push
mov
jp
jae
pop
xor
xchg
int3
pop
mov
dec
jae
jle
hlt
jnp
dec
in
std
imul
xor
xchg
mov
cltd
pop
test
jnp
sub
das
mov
mov
mov
mov
jnp
icebp
mov
or
scas
mov
bnd
push
sbb
mov
sub
pop
icebp
jge
cld
and
xor
jb
fwait
xchg
push
add
push
aaa
adc
add
cmpsb
mov
dec
leave
push
daa
add
xor
mov
inc
xchg
dec
mov
and
into
pusha
test
cmp
jns
stc
inc
es
jge
xor
nop
sbb
push
lcall
hlt
mov
gs
cmp
out
sub
jne
ret
dec
mov
xchg
test
jle
loop
ss
cmpsl
nop
pop
pop
and
or
mov
xor
nop
sbb
push
xchg
adc
loopne
mov
inc
cmpsl
outsb
mov
xchg
mov
mov
je
push
and
xor
or
mov
cmpsl
dec
dec
int
mov
mov
mov
stos
ljmp
outsb
stos
insl
rorl
movsl
mov
pop
cmc
lret
or
pop
xchg
test
imul
mov
push
test
test
mov
decl
sarb
fld
iret
sub
popa
das
sbb
pop
repz
repz
mov
daa
loope
cli
sbb
pop
into
pop
aaa
js
dec
in
xchg
xor
outsl
or
inc
xchg
mov
and
cmc
xor
leave
sbb
mov
xlat
xchg
hlt
mov
dec
movsl
je
nop
fbstp
xchg
mov
push
jle
sub
xor
orl
int
jae
dec
arpl
ss
cmp
mov
insb
es
fucomi
mov
jl
mov
popf
push
dec
sahf
pop
fdivrs
cltd
sarb
insl
ds
jo
les
xor
imul
movsb
inc
test
dec
inc
cld
jmp
sub
call
xchg
mov
xor
loope
test
iret
xlat
xchg
das
enter
jbe
lahf
mov
mov
das
and
jg
ret
lods
push
xchg
mov
jns
inc
jne
mov
inc
mov
or
arpl
push
add
push
test
call
mov
add
or
imul
cltd
mov
cmp
cmp
aas
std
sbb
sbb
add
out
lret
nop
ja
mov
jb
push
push
jo
lods
jecxz
mov
jnp
rcr
sub
push
mov
lahf
mov
xchg
ret
adc
cs
xchg
stc
cmc
sarl
notl
push
in
popf
push
shll
rcl
iret
push
js
pop
xchg
jbe
or
imul
pop
imul
sbb
push
mov
push
in
mov
sub
sub
push
nop
pop
pop
addl
or
lret
cmp
sub
jle
pop
pop
cmc
das
jno
outsb
inc
test
out
lods
enter
sub
pop
push
push
outsl
cmova
testb
roll
ljmp
mov
xchg
jmp
push
test
jne
in
mov
fs
cmpsl
xchg
cld
jae
cli
lods
xor
pop
xchg
push
andb
xor
pop
jnp
rcrl
inc
mov
push
xchg
xchg
cmp
xchg
nop
cmpsb
add
data16
xor
push
addl
add
jnp
cltd
int
outsl
pop
fcomip
mov
dec
push
cmpsl
aaa
clc
inc
xchg
add
mov
mov
adc
mov
adc
pop
stos
or
mov
sarl
inc
iret
icebp
jmp
or
mov
mov
mov
ja
and
dec
push
xchg
jl
daa
aaa
xchg
aam
sbb
fsub
xchg
sbb
mov
mov
sub
gs
repz
or
stos
or
xchg
es
cwtl
adc
fidivs
adc
mul
xchg
xchg
xor
mov
dec
dec
hlt
sti
xchg
in
or
dec
pop
mov
lcall
push
test
mov
inc
push
cmpsl
bound
jo
nop
adc
sbbl
cmpsl
add
lock
lds
mov
nop
mov
push
xchg
mov
cmp
mov
xchg
dec
push
lds
jb
lret
cmp
xchg
outsl
fcmovbe
scas
fisttps
mov
jle
dec
dec
push
mov
in
daa
cld
inc
mov
xor
mov
hlt
scas
outsl
push
lahf
scas
out
or
mov
ret
and
pop
stos
xchg
jae
daa
xchg
jo
mov
aaa
out
push
scas
mov
rorb
iret
lock
js
push
jo
xchg
sub
xchg
xchg
jae
or
ss
push
shrb
mov
in
jne
mov
lahf
fcmovnu
sub
adc
lds
enter
pop
jecxz
xor
xchg
jle
dec
fldl
fs
loope
pop
cmp
lods
push
xchg
or
jmp
lods
lret
dec
nop
or
addb
subl
sbb
ret
push
xchg
jne
xchg
das
mov
into
cwtl
ret
loope
xchg
out
inc
xor
xor
pop
fwait
hlt
test
in
push
aas
cmp
push
mov
jnp
lsl
mov
lods
push
cwtl
fwait
xchg
push
cmpsl
sbb
jecxz
jb
xor
sub
mov
xchg
fisttpll
int3
lods
inc
xchg
and
and
mov
cmpsl
pop
push
lds
push
push
push
mull
addr16
lock
mov
mov
into
dec
pop
cmpsl
lahf
pop
adc
adc
cld
push
mov
push
sqrtps
sbb
cmc
mov
and
test
pop
inc
int3
mov
paddw
sar
jb
mov
ror
pop
or
lds
shl
dec
adc
cmpsl
mov
sub
test
jge
xchg
ficoms
fisubl
addb
fsubl
mov
or
cmp
adc
divb
mov
push
lds
and
and
ret
adc
popa
gs
xchg
adc
xor
sub
lcall
ror
negb
pop
or
mov
inc
in
lods
jl
and
aam
sbb
and
inc
cmp
test
inc
pop
mov
dec
lret
aas
fcoms
cmc
inc
jnp
jne
movsl
dec
loope
inc
aaa
js
je
pop
cmpsl
scas
mov
xchg
iret
popf
mulps
outsl
dec
push
mov
lea
sbb
stos
lahf
es
leave
sti
push
js
jno
adc
xchg
push
adc
leave
xchg
dec
push
or
idivb
adc
push
push
jge
nop
xchg
adc
xchg
inc
addr16
lahf
sbb
decb
inc
lods
xchg
push
jae
mov
js
mov
popf
and
gs
pop
dec
xchg
addr16
mov
fsubl
pop
jecxz
cmp
mov
pop
jle
push
nop
mov
mov
pop
xor
addb
ffreep
push
js
jae
aaa
ja
cmp
sbb
mov
jae
lret
inc
dec
or
jno
mov
nop
mov
mov
fwait
mov
jle
dec
popa
xchg
push
int3
push
enter
inc
and
rolb
push
fimull
fstps
jle
sub
pop
cld
xor
mov
ss
out
jne
outsb
jle
movsl
inc
fimull
in
aaa
pop
mov
loope
les
in
lds
adc
sbb
push
sub
dec
push
mov
mov
jnp
push
loop
add
and
dec
mov
jbe
mov
and
dec
dec
gs
rcrb
popa
hlt
mov
pop
ds
scas
movsb
push
mov
repz
jo
xchg
adc
decb
stos
lds
sub
aaa
in
inc
int3
pop
xchg
jmp
fidivs
or
shrb
mov
xchg
mov
and
loop
aaa
jns
shlb
adc
dec
add
mov
xchg
jle
pop
inc
xor
divb
sbbb
push
xchg
nop
idivb
lcall
div
jo
adc
xchg
nop
gs
dec
addr16
pop
sub
sahf
fisttps
inc
test
jl
and
jnp
pop
xchg
call
es
icebp
jecxz
aad
out
aas
jg
arpl
inc
shll
sub
movsb
xlat
out
test
sub
addr16
mov
call
push
mov
and
das
dec
cmpsl
nop
sti
mov
mov
das
pop
lahf
push
aad
fcmovb
js
xchg
nop
dec
sub
xchg
rcll
insl
mov
icebp
mov
inc
jno
mov
mov
and
push
push
jnp
sub
rolb
push
jb
push
push
sbb
pop
and
stos
mov
lahf
push
jmp
adc
jmp
jle
fsubl
imul
ror
push
movsl
jle
push
xchg
and
loop
sbb
xchg
add
scas
xchg
adc
push
pushf
call
aad
push
loopne
pop
imul
pop
fdiv
adc
adc
repz
xor
test
in
movsb
shlb
nop
push
jp
imul
mov
push
pop
adc
testb
cs
cli
and
push
push
lock
sbb
or
pop
mov
mov
push
adc
mov
xchg
push
jbe
idivb
dec
and
mov
mov
xor
pop
push
nop
shlb
jg
mov
xor
insl
ljmp
push
js
enter
xor
jg
aaa
fistl
push
pop
xor
and
sbb
dec
xor
lods
jecxz
jge
ret
mov
and
notb
cmp
dec
lcall
push
add
stc
xchg
jbe
mov
daa
nop
sahf
loope
inc
bound
xchg
xor
sbb
repz
mov
mov
das
and
add
inc
hlt
xchg
in
mov
push
push
inc
cmp
dec
sbb
mov
or
xchg
loope
inc
das
mov
les
sub
hlt
pushf
rclb
imul
xor
sbb
inc
xchg
sbb
jl
push
push
aaa
mov
pop
mov
test
mov
xor
pop
gs
cwtl
sub
popf
jb
sti
popl
inc
pextrw
xchg
in
popf
clc
inc
inc
pop
cmc
and
xchg
ret
daa
aaa
cmpsb
pop
xchg
xor
xchg
inc
cmp
les
repz
int3
insl
xor
push
insl
jge
movsl
sti
push
or
mov
jne
into
push
dec
icebp
out
arpl
and
syscall
popf
inc
jno
sbb
pop
dec
mov
pop
jne
ja
in
scas
test
mov
movsb
fcoms
cli
dec
fadds
addb
nop
pop
and
inc
dec
xchg
getsec
jg
pushf
mov
aaa
sbb
pusha
cld
jmp
cmp
fdiv
out
subl
lret
dec
nop
add
jg
test
dec
mov
sbb
cmp
add
adc
dec
incb
mov
sub
sbb
leave
adcl
arpl
cmpsl
in
pcmpeqw
ret
push
std
or
imul
data16
enter
rclb
jg
addl
xchg
iret
mov
xor
pop
movsl
inc
gs
cmp
or
rcrl
pop
orl
jmp
and
lret
push
push
sub
ja
xchg
sub
mov
fdivl
aaa
ljmp
cld
aas
jp
adcl
inc
jge
push
and
outsl
aad
dec
or
add
out
jl,pt
add
fldt
mov
inc
push
pushl
popf
in
mov
stc
addr16
dec
cs
xchg
into
mov
into
xchg
lret
or
dec
mov
push
or
aad
jnp
push
adc
jne
negl
testb
ret
aam
jne
push
or
leave
leave
xor
aam
in
cmp
dec
jne
iret
in
fdivrl
sbb
ja
in
adc
xchg
xor
sbb
fs
into
xchg
jecxz
sbb
xchg
bnd
push
ljmp
loop
int3
inc
inc
push
dec
xor
push
push
jo
sbb
xchg
mov
imul
push
clc
push
adc
pop
jle
cmc
mov
push
shrb
mov
stc
pop
pop
in
and
shl
in
xchg
shl
push
lea
xchg
repnz
idivl
into
jg
cmpsl
notb
sub
lock
xor
orb
xor
mov
popf
xchg
loop
and
add
pop
sbb
pop
fisttpl
push
xchg
jne
popa
lods
cld
sbb
adc
push
xor
push
adc
adc
into
dec
cmp
cmc
movsb
pop
xchg
and
sbb
imul
into
shrl
cltd
push
int
cmp
cli
stc
xchg
push
cmp
xchg
mov
xchg
push
div
mov
stos
mov
push
dec
jge
push
xorl
mov
sub
scas
mov
jmp
leave
pop
inc
and
stc
enter
lahf
data16
pop
callw
sti
inc
push
or
unpcklps
out
sbbl
push
mov
imul
xchg
outsl
test
in
jmp
pop
mov
dec
repz
hlt
or
adc
xchg
mov
pop
jnp
push
popf
push
push
add
sbb
outsl
mov
cmpsl
mov
in
and
xchg
aad
fistpll
jle
scas
aam
sahf
lret
adc
das
push
mov
inc
xchg
add
ret
test
xor
lods
pop
inc
push
aad
cmpsl
lods
dec
std
in
pop
cmc
mov
mov
fldcw
cwtl
jbe
or
aad
sub
cmp
movsl
dec
in
push
lea
ljmp
cmpsb
jmp
sub
push
fisttpl
addr16
shrl
dec
or
ja
sub
and
cltd
rorb
into
jg
ror
mov
lea
pop
aad
repnz
push
xor
push
js
fwait
push
iret
jb
push
push
out
pop
roll
inc
mov
in
xchg
ret
dec
or
mov
push
xlat
inc
sub
decl
popf
aad
push
ret
xchg
and
scas
xchg
in
js
xor
pop
dec
scas
xchg
movsl
aad
nop
inc
inc
repz
sbb
cmp
xor
enter
mov
or
cmpsb
ret
sub
roll
push
xor
adcb
push
xchg
aam
dec
or
xlat
push
movsl
cmpsb
fimuls
sub
xchg
stos
rcll
mov
jo
add
push
jnp
inc
mov
insl
lods
lret
mov
es
pop
adc
and
aad
movb
xor
imul
mov
scas
sti
mov
pop
sub
nop
and
jp
mov
xor
dec
pop
ja
test
fnstenv
movb
jmp
mov
jne
popa
mov
mov
xchg
outsb
ja
xchg
xchg
loop
jmp
nop
cmp
mov
or
add
mov
xchg
sbb
jae
scas
jne
je
sbb
subl
in
mov
enter
lock
xchg
mov
addr16
aas
hlt
bound
mov
adc
clc
outsb
jge
dec
je
leave
outsb
sbb
dec
into
pop
aaa
jno
push
sti
add
xchg
mov
lcall
iret
push
flds
and
jae
faddp
int3
stos
mov
xchg
jge
rolb
pop
mov
shlb
int
xor
outsb
and
jne
rol
cmpsl
and
mov
mov
dec
mov
xchg
cld
inc
push
je
sahf
fildll
mov
sub
test
insl
mov
pop
mov
or
add
mov
sub
imul
xorl
hlt
ficoms
in
pop
insb
scas
aam
nop
pop
jno
lods
adc
pop
dec
out
xor
mulb
icebp
push
movb
adc
xchg
push
sbb
stc
aaa
adcl
mov
jecxz
insl
sub
xor
sub
and
push
data16
push
addr16
push
daa
nop
scas
testb
loope
xchg
in
loop
cli
cmpsb
sub
addr16
jl
xor
push
test
bound
fidivs
xor
ljmp
test
scas
inc
lods
xorl
shlb
sub
lds
xor
push
mov
dec
sub
xchg
inc
dec
iret
out
inc
sbb
scas
je
mov
inc
test
sub
gs
loope
das
xchg
sbb
scas
xchg
xor
xchg
ja
inc
imul
fimull
jnp
inc
mov
jl
dec
jne
mov
mov
pop
fidivs
xor
jl
rclb
sub
int3
sahf
js
hlt
pop
test
mov
sub
push
scas
fbld
insl
lret
push
shll
xchg
outsl
call
jbe
jg
jne
sbb
and
sahf
psrlw
cmp
jb
push
lcall
rorb
dec
cmp
adc
mov
js
pop
and
push
mov
and
es
lds
outsb
in
repz
lea
pop
cmp
inc
iret
push
sub
in
push
dec
pop
arpl
adc
add
lea
dec
mov
iret
sub
fwait
mov
rorl
mov
jg
lcall
cs
outsb
int
fisttpll
in
mov
mov
popf
jg
adc
sbb
popf
xor
xchg
cmp
jo
add
popl
xchg
inc
push
mov
sub
sbb
jmp
jns
repz
xchg
xchg
ret
jne
inc
stos
mov
bound
jle
outsb
xchg
dec
mov
cmp
cmc
call
dec
cltd
mov
lock
dec
mov
scas
jb
jb
test
jle
xorl
push
jle
mov
mov
call
gs
jb
movsl
mov
adc
push
mov
xchg
dec
cmp
mov
cmc
jge
jne
xchg
lods
out
pop
cmp
cmovg
mov
out
testb
pop
mov
cmpsb
inc
scas
fbld
mov
mov
push
dec
lds
push
rclb
in
xchg
xor
jg
aaa
adc
flds
cld
or
dec
mov
mov
rclb
enter
mov
fdivl
push
sbb
xchg
xchg
adc
cs
mov
jmp
outsl
sbb
mov
jmp
popf
fwait
xchg
mov
push
negb
jb
imul
std
inc
fadd
movsb
sbb
pop
inc
ret
mov
call
les
lods
jge
fmull
sub
mov
jmp
and
mov
movsl
mov
movsb
outsb
mov
sbb
adc
xchg
adc
data16
popf
cmp
mov
push
xchg
nop
int3
sub
xor
test
add
lods
test
outsl
add
in
stos
pop
lock
lds
cmp
into
push
mov
orl
pop
adc
mov
jmp
test
pop
xchg
repnz
jo
jecxz
aas
mov
nop
dec
in
out
ja
or
inc
push
sub
mov
pop
movb
push
xchg
xchg
gs
loop
pop
push
lcall
nopl
sbb
push
pushf
shll
jmp
mov
shlb
daa
pop
cld
push
sub
pop
lods
adc
or
pop
fs
cld
adc
xor
out
jp
sub
and
pop
push
ret
adcl
xchg
pop
sbb
mov
movsl
ljmp
mov
sti
fs
jg
mov
dec
rcrb
push
push
aaa
divl
or
inc
cmpsb
and
ja
nop
outsb
adc
mov
lods
cmp
sbb
aas
add
sub
push
jmp
pop
ret
rcrb
xor
int
mov
and
mov
fistpll
jne
add
int3
dec
add
pop
or
dec
adc
mov
mov
aaa
xor
out
and
adc
gs
mov
movl
scas
push
scas
xchg
and
loopne
nop
sub
add
fisubs
mov
in
mov
int
jns
or
push
mov
push
fistps
sub
xchg
mov
cmp
push
and
inc
xchg
mov
push
mov
outsb
mov
ror
imul
les
sbb
push
aam
xor
pop
addb
add
sub
xor
dec
and
mov
xchg
mov
lods
or
add
inc
push
xchg
sbb
sbb
nop
xor
ss
hlt
adc
sub
jmp
mov
mov
nop
fistps
fsts
inc
aam
add
movsb
push
xchg
incl
jge
and
mov
inc
and
gs
sub
imul
adc
mov
not
jae
ja
negl
mov
in
aas
or
shll
dec
jge
push
and
xchg
pop
and
adc
gs
sub
sub
jno
mov
loope
out
or
add
cmp
shlb
push
lds
mov
ss
arpl
in
xlat
push
mov
mov
gs
loope
xorb
rorl
nop
pop
push
push
sbb
mov
sbb
sub
mov
cltd
cmpsl
mov
jmp
xor
push
rorb
and
pop
push
int
jle
push
push
sub
xchg
xchg
ja
mov
mov
jae
cmp
or
lods
fidivl
mov
gs
pop
or
pop
testb
sarl
clc
jecxz
adc
adc
xchg
hlt
pop
movsl
or
mov
cmpsb
push
pop
aas
rorl
add
stc
or
dec
sub
jl
mov
push
into
fwait
adc
scas
in
pavgw
ret
lea
hlt
in
push
hlt
xchg
stos
mov
out
loop
mov
push
out
sar
mov
inc
sti
shrb
inc
cmpsl
jb
sbb
nop
mov
jl
addr16
outsl
or
ja
and
push
add
inc
mov
jo
jmp
pop
cs
cld
jmp
adc
mov
int
and
mov
cmp
add
inc
imul
pushf
std
nop
mov
jb
mov
incl
lods
and
push
jge
inc
inc
jg
mov
enter
pop
inc
iret
inc
fiaddl
push
pop
xchg
adc
xchg
inc
sub
pop
and
sbb
lea
sbb
or
sbb
jb
jbe
aas
xchg
ficoms
xchg
movsl
insl
push
mov
pop
mov
xchg
inc
xchg
cmc
sub
mov
shr
jg
inc
arpl
dec
mul
inc
sahf
rorb
ljmp
xor
dec
push
daa
data16
nop
lret
and
xchg
aas
xchg
enter
in
mov
dec
push
ret
pop
subl
jne
and
mov
js
pop
sbb
xchg
andb
xchg
mov
out
js
mov
mov
push
jle
pop
sub
xchg
les
ds
push
pop
fcmovb
pop
outsb
push
imul
in
push
add
lea
mov
adcl
push
push
xchg
cmp
dec
jg
xor
push
repz
xchg
jne,pt
dec
in
push
cmpb
xchg
aaa
xchg
subl
in
out
jp
xlat
xor
stc
scas
jl
cmp
mov
test
sarb
lahf
mov
fistpll
cld
xor
daa
mov
mov
addr16
imul
int3
je
lret
sub
dec
out
add
in
popa
sbb
xor
popa
inc
and
movsb
decb
cmpsl
dec
stos
mov
lods
pop
fisttps
hlt
imul
xor
mov
pop
inc
lds
sti
push
aam
ljmp
scas
mov
mov
andb
cs
popw
or
test
lods
out
movb
loope
sbb
mov
movsl
xor
mov
je
push
pop
inc
inc
dec
fbstp
push
lcall
lods
insb
dec
pop
dec
pop
je
fisubrl
pusha
insb
rclb
outsb
and
inc
cwtl
pop
aas
xchg
scas
push
cs
aad
das
int3
push
pop
fnstsw
lods
int3
negb
inc
nop
or
inc
and
dec
lret
cmp
dec
shrl
jae
mov
xchg
jae
rcr
in
pusha
outsb
cwtl
push
xchg
scas
jne
in
sbb
lds
stos
push
push
ljmp
rol
cmp
sub
nop
push
test
movl
rcll
cmp
mov
sub
cmpsb
inc
idivb
mov
xchg
aaa
jmp
les
sbb
call
sbb
out
mov
in
sahf
sahf
adc
inc
mov
adc
xchg
adc
jnp
mov
jo
jae
mov
std
addl
xchg
jne
sbb
out
int3
sahf
sti
cli
cmp
std
push
add
in
sbb
jns
sbb
loop
cmpsb
bound
shll
test
pusha
popw
xchg
aaa
insl
cs
pusha
aam
nop
and
inc
xchg
inc
lahf
xchg
loop
sbb
pop
mov
orb
bnd
mov
fdivs
subl
xor
pop
mov
push
adc
fcompl
out
and
push
jecxz
pop
in
mov
scas
lret
xchg
int3
push
into
je
in
imul
xor
je
sub
mov
xchg
and
push
shl
sarl
xchg
mov
mov
jmp
cmpsl
testb
push
es
cltd
iret
push
inc
mov
out
push
mov
aaa
jle
test
xchg
xchg
push
mov
cmpsl
push
pop
inc
or
xchg
xchg
mov
xchg
xchg
and
inc
test
lock
rorl
stos
cli
inc
and
inc
sti
lea
jne
inc
add
xor
adc
lock
jne
aad
js
pop
daa
dec
or
pop
mov
daa
test
cmp
sub
cmp
xchg
lock
das
mov
stc
pop
call
rcll
xor
in
cmpsb
lock
lds
cmp
popa
addl
jae
jae
and
mov
and
int3
lahf
jae
ret
mov
adc
notb
and
sbb
repz
es
cmpsl
xchg
pop
gs
mov
xchg
or
orl
and
push
push
and
mov
pop
repz
xor
sub
lea
or
ja
mov
pusha
mov
jo
test
and
sub
stc
data16
mov
jae
add
shlb
and
into
mov
sbb
push
mov
inc
rcrb
shrb
out
push
scas
cltd
mov
jecxz
mov
arpl
and
mov
lds
lret
cmp
mov
sub
les
jnp
and
dec
aam
out
mov
jle
push
rorb
mov
mov
and
mov
inc
xchg
mov
ror
sbb
dec
shll
popf
xchg
into
mov
or
lret
int
out
into
mov
push
mov
fs
dec
xchg
arpl
sub
push
popf
xchg
xchg
cmpsl
push
iret
adc
or
movsl
aad
dec
push
arpl
gs
xor
sub
outsl
nop
sub
in
dec
adc
add
iret
test
or
aas
and
xchg
or
inc
push
jae
and
sbb
push
das
and
xchg
lcall
push
mov
xchg
lds
or
mov
fwait
pop
push
or
xchg
xchg
ds
mov
imul
jg
mov
test
xchg
ljmp
pop
mov
lcall
insl
mov
sub
jmp
rcll
dec
movsl
mov
jne
out
int3
aad
std
imul
cmpsb
add
addr16
aam
es
and
gs
jge
repz
and
inc
mov
dec
bound
xchg
xor
rcrl
das
mov
les
pop
xchg
mov
or
lods
inc
pop
or
xor
push
mov
fwait
cltd
movsb
xchg
and
imul
mov
push
pop
jb
xor
push
add
jae
sbb
dec
mov
and
jo
lret
push
xchg
mov
xchg
mov
data16
mov
mov
push
xor
mov
cmp
mov
fisubrl
in
mov
push
add
rcll
push
sub
pop
inc
test
sbb
lea
loopne
adc
into
mov
rcll
arpl
adc
cli
lret
lods
push
rcll
xchg
jge
or
shll
mov
leavew
adc
mov
push
cs
mov
push
les
mov
push
test
xchg
cmp
cld
stos
movsl
std
cmp
pusha
lret
mov
push
out
add
icebp
hlt
push
cltd
push
stos
loope
pushf
jge
add
xchg
lods
or
sub
dec
cmc
repnz
ds
mov
jecxz
add
mov
mov
xchg
pop
insl
int
cbtw
jl
imul
push
sbb
xchg
add
sbb
aaa
cmpsb
push
add
xor
dec
popf
arpl
aaa
mov
jle
cmp
lahf
loop
inc
push
lds
sub
mov
xor
jns
pop
hlt
adc
or
sub
jae
sbb
mov
inc
popf
std
jmp
xrelease
out
insb
fiaddl
sbb
popl
adc
xchg
andl
lods
adc
std
adc
sub
leave
xchg
xor
cld
jne
sbb
fistpll
pop
push
arpl
dec
sub
mov
mov
sub
lods
movsl
js
andb
cmp
dec
and
aam
or
jmp
outsb
xchg
cmp
sarl
xchg
std
loop
movd
lods
xor
hlt
pop
leave
push
aam
adc
ljmp
jbe
push
sub
sbb
out
test
sysexit
push
repz
add
adc
rorb
push
dec
fs
dec
int3
into
xchg
push
lret
out
inc
cltd
notl
sub
lea
addr16
repz
fisttpll
testl
xchg
pop
mov
xchg
mov
mov
dec
or
jecxz
loope
es
adc
jg
stos
cmp
leave
lret
or
pusha
ret
xlat
add
jle
and
out
shr
or
jnp
aam
mov
ret
and
cmpl
adc
call
add
lods
mov
mov
push
movsb
cltd
scas
xor
adcb
dec
icebp
sub
sarl
mov
fidivs
xchg
push
mov
xor
dec
nop
inc
data16
push
divb
mov
adc
mov
xchg
mov
scas
push
jbe
aaa
mov
mov
sbb
mov
jbe
sub
rorl
push
aaa
mov
aaa
cmc
sahf
xchg
aad
mov
lds
xchg
lds
scas
xor
adc
jo
fmull
mov
mov
adcb
daa
dec
jb
sbb
push
pop
movsl
gs
cmp
adc
jg
sub
pop
adc
xchg
fwait
test
jno
repnz
scas
imul
divl
mov
mov
enter
jns,pt
mov
jno
ja
or
jne
leave
lods
mov
out
mull
testb
scas
scas
scas
sbb
fiadds
cmp
push
daa
jp
fbstp
cli
push
arpl
out
out
xchg
sub
lret
adc
imul
and
ljmp
pop
lods
rcll
mov
sub
loopne
test
lcall
or
fimull
sbb
push
xchg
ja
mov
cwtl
into
ret
inc
cmp
add
iret
push
nop
lock
scas
ja
jbe
mov
mov
js
call
aaa
mov
and
mov
mov
mov
sbb
daa
aaa
mov
jle
mov
imul
cmp
mov
or
aaa
cmc
mov
and
sbb
fimull
pop
inc
mov
subl
inc
sarl
mov
xchg
push
ds
dec
push
push
fst
sub
enter
inc
loop
mov
pop
nop
push
jg
rolb
out
push
sti
push
push
sbb
sahf
sbb
fimull
jmp
movsl
cmpsl
mov
xchg
push
pop
arpl
mov
ja
iret
xor
cmp
mov
cmp
loope
sbb
xchg
loopne
inc
fdivl
cli
sub
call
test
push
je
ja
inc
daa
sub
push
mov
je
lea
iret
mov
movl
pusha
or
jle
mov
sti
test
cmp
into
adc
nop
mov
push
js
dec
nop
rclb
mov
lahf
sbb
rcr
pop
aas
repz
dec
jle
mov
sub
and
rorb
mov
pop
adc
dec
std
xor
insb
decb
add
add
nop
test
mov
or
je
popa
lcall
cmp
push
sbb
je
inc
stos
push
loop
out
ja
pop
mov
bswap
pop
mov
mull
mov
mov
aad
arpl
jns
push
pop
pop
jecxz
fnsave
xor
mov
popf
idivb
in
lods
push
pop
xor
lods
mov
sbb
pop
or
xchg
or
adc
jp
orb
es
scas
je
jecxz
dec
nop
pop
rcrl
mov
rcll
push
jp
add
xor
nop
into
iret
ret
sub
xchg
pop
lret
fmull
subb
jns
das
data16
das
sbb
mov
dec
adc
adc
mov
or
les
mov
mov
sbb
lods
pop
mov
addb
movsb
push
mov
push
xor
mov
scas
jne
fistpll
in
movsb
adc
push
pop
pop
push
push
leave
inc
mov
xchg
seta
lret
shlb
dec
xchg
xchg
cmp
xor
insb
mov
divb
sar
popf
imull
mov
sub
rcrl
pop
sbb
mov
jp
cmp
outsb
leave
xchg
xlat
ret
hlt
push
jg
mov
push
loope
xchg
iret
add
mov
sahf
mov
xchg
pop
push
mov
pop
sub
adc
repz
or
jg
sar
cmp
shll
push
xchg
jle
mov
jmp
adc
mov
pop
xchg
loop
mov
dec
inc
divb
sub
out
iret
nop
ja
push
sub
adc
sub
iret
ss
inc
cmp
xchg
pop
sarl
mov
sarb
nop
jbe
xchg
nop
push
add
push
test
sahf
mov
xchg
idivb
or
push
inc
iret
mov
adc
iretw
lret
test
dec
sub
movsl
sbb
jecxz
dec
scas
mov
or
push
ljmp
mov
les
test
push
aaa
mov
xchg
pop
mov
mov
push
inc
pop
pop
mov
out
mov
dec
mov
jbe
jb
ja
mov
push
scas
xchg
ds
push
aaa
in
or
mov
push
xchg
lea
push
rcll
lea
mov
jne
in
fnstenv
sbb
cltd
gs
xchg
int
cmp
mov
mov
inc
xlat
xchg
push
aam
hlt
pop
mov
dec
loope
out
adc
mov
mov
das
out
cld
xor
scas
push
stc
js
sub
popa
jns
pop
sbb
xchg
loope
fdivs
mov
or
nop
sahf
les
fistpl
mov
lahf
push
nop
adc
aam
std
adc
test
iret
push
popf
int3
outsl
fcomip
into
fcomip
xor
js
shlb
xchg
lret
jge
jno
jo
push
movsb
push
popl
xchg
xchg
les
lods
pop
mov
xor
xor
and
fs
push
or
jge
mov
imul
cmp
aam
in
and
fldcw
dec
inc
xchg
push
lahf
mov
aam
adc
push
in
fs
das
cmp
ljmp
mov
xchg
cmp
dec
loope
cmpsl
vcvttps2dq
aad
mov
cs
push
ret
ss
movsb
dec
dec
mov
divl
lret
nop
xchg
push
inc
xchg
int
cmp
decl
sbb
pop
mov
inc
scas
dec
popf
cmp
cmp
pmullw
add
cmpsl
sbb
inc
repnz
dec
repz
rcrb
cli
xlat
stos
and
in
mov
fld
and
mov
hlt
jbe
xor
outsl
inc
mov
adc
std
jge
dec
test
inc
adc
hlt
fldpi
adc
push
lret
xchg
aad
xor
xchg
lahf
das
lods
test
xor
andnps
sub
out
push
in
aam
mov
xchg
pop
test
inc
fdivl
adc
xchg
cmpsb
inc
rcrl
xchg
push
jae
push
mov
xchg
out
add
push
mov
xchg
int
scas
jb
sbb
xor
mov
inc
push
icebp
dec
cmpsb
roll
out
rorl
xchg
xchg
mov
jno
push
xchg
scas
xor
ja
mov
lock
rolb
iret
nop
dec
xorb
lds
xor
adc
int3
aaa
idivl
shlb
mov
into
xchg
dec
ja
imul
inc
lahf
cmpsb
dec
push
pop
gs
and
orl
inc
pop
adc
outsl
aaa
lret
pop
sub
or
xchg
xchg
jbe
lds
ss
push
xchg
cmc
mov
mov
xchg
pop
jne
lds
xor
test
les
je
push
pop
xor
notb
repz
sarl
jae
push
xor
pop
repnz
lds
xchg
xor
rcll
mov
pop
das
mov
jno
push
mov
les
dec
add
mov
ror
mov
nop
xchg
jo
pusha
inc
push
dec
xor
push
mov
in
mov
lret
xchg
push
xchg
imul
aaa
mov
mov
xor
in
jb
aas
cmc
xchg
push
add
inc
mov
xchg
pushf
pop
stc
dec
loope
mov
aad
pop
stos
imul
cld
testl
adc
xchg
daa
cmpsb
mov
pop
outsl
repz
cmpsl
shl
xor
psubusb
cld
mov
add
into
notb
scas
and
pop
popa
dec
mov
nop
aaa
imul
test
dec
jecxz
mov
inc
nop
icebp
shrl
push
lods
dec
sub
leave
jnp
mov
pop
loop
jo
add
or
ret
shll
adc
scas
movsl
imul
dec
nop
fisubrs
dec
nopl
mov
mov
outsb
push
ja
outsl
cmpl
data16
lock
nop
mov
notb
dec
xlat
cmp
sarl
int
dec
or
icebp
dec
sbb
inc
jmp
mov
aad
push
push
add
addr16
push
js
aaa
testl
or
add
jg
jbe
enter
lret
int
lret
leave
stc
fadds
inc
mul
inc
xor
pop
les
dec
cmp
pop
rol
sbb
pop
scas
fbstp
jnp
adcb
and
fld
xchg
sub
inc
ljmp
cmp
cmpsl
nop
sarl
dec
push
xor
aas
mov
mov
xchg
xchg
scas
pop
jnp
sbb
out
test
dec
test
adc
and
filds
push
mov
mov
mov
and
fcoml
jecxz
mov
out
xchg
jecxz
add
fst
pop
push
int
je
jle
mov
aam
es
lds
push
dec
dec
stos
inc
lock
outsl
leave
mov
lea
mov
aam
shll
jmp
inc
js
mov
pop
cmpsb
sub
mov
and
ret
lds
pop
jne
mov
lds
mov
rolb
sbb
leave
xor
ja
lea
pop
aad
adc
jne
std
std
mov
dec
mov
jbe
fs
and
test
sbbb
stos
sarb
outsb
ss
aaa
into
and
out
inc
adc
cmpsb
inc
xchg
cmpsl
xchg
lods
inc
dec
mov
xchg
jnp
xor
movsb
in
adc
ja
sti
stos
sub
sbbl
cmp
mov
ljmp
sbb
int
je
aaa
sahf
scas
mov
fstpl
cmp
pop
pop
aad
jae
mov
stos
test
adc
dec
mov
test
mov
mov
jns
adc
fwait
push
push
xchg
jg
rclb
lds
gs
adc
cmpsl
stos
adc
sbb
cmpsl
nop
outsl
into
sbb
roll
xor
sbb
sahf
sub
xor
push
push
nop
into
fsubl
test
imul
fidivs
adc
gs
jbe
jae
test
cmp
leave
adc
test
mov
out
push
test
mov
out
in
push
jecxz
mov
push
jle
or
mov
push
icebp
cmp
ja
aam
jle
sub
shrl
in
repz
lcall
sub
xor
aas
push
mov
stos
inc
sub
cmpsl
push
pop
add
sbb
cmp
std
gs
push
test
lods
js
pusha
pop
push
mov
push
cmc
push
mov
xchg
inc
mov
push
mov
push
insl
ror
mov
jecxz
cmpl
push
negl
xchg
hlt
mov
mov
mov
arpl
push
xchg
nop
push
test
ss
mov
lock
ss
xchg
iret
fcmovnb
xor
stos
iret
or
les
sub
das
cmpsb
pop
sbb
popf
lock
hlt
dec
iret
notb
inc
andb
xor
ret
cs
push
push
jb
lds
repz
and
pop
add
sbb
adc
lods
sub
jle
cld
cmc
imul
adc
out
inc
mov
push
fidivl
loop
ds
imul
mov
aad
mov
dec
pop
imul
sahf
fildl
in
shll
rcll
mov
repz
out
fmull
jbe
sti
hlt
ja
push
outsb
cmp
inc
testb
aam
std
jmp
loop
popf
aam
and
push
mov
faddl
das
jg
shll
mov
mov
adc
aad
test
daa
inc
lea
xchg
pop
je
push
mov
enter
adc
xor
xchg
inc
ficoml
and
ret
leave
xchg
fisubrl
cmpsb
fdivr
mov
lock
adc
or
push
jmp
into
and
jge
mov
and
xor
scas
mov
cmpsl
js
pop
add
arpl
fnstcw
xor
cmp
rcll
fbstp
addl
aaa
xchg
push
xchg
pop
scas
mov
aas
push
out
jmp
daa
jbe
jae
jmp
sub
into
and
push
xor
leave
enter
shlb
jle
insb
and
jmp
inc
js
cmp
add
sbb
pusha
inc
xchg
jnp
mov
and
push
push
jge
jbe
push
jno
aad
push
mov
nop
pop
shl
dec
inc
fiaddl
scas
jbe
mov
mov
cmpsl
dec
sbb
inc
test
mov
in
mov
push
js
dec
test
xchg
mov
dec
aaa
lods
dec
xchg
xchg
cltd
fwait
jg
pop
popa
inc
test
out
inc
add
cmpsl
sub
mov
call
mov
lcall
movsl
into
jne
sbb
mov
gs
loope
jne
dec
pop
cmp
call
shlb
inc
sbb
mov
mov
pop
and
js
and
mov
les
sub
sbb
push
sbb
cmp
jbe
pop
std
sbb
pusha
aas
ss
sub
test
icebp
xchg
push
sbb
adc
or
fstpl
sub
cmp
je
rcrl
fists
cmp
push
mov
inc
cs
test
jo
aas
nop
xor
mov
pop
lcall
or
insb
dec
pop
fadd
arpl
mov
xchg
loope
xlat
xor
gs
cmp
cld
nop
xchg
stos
push
dec
or
push
mov
or
sbb
mov
mov
jl
ds
fiaddl
jns
stos
in
aas
push
sbb
lds
les
xor
lds
mov
or
push
icebp
rol
pop
fdivrl
popa
mov
iret
adc
mov
stos
dec
enter
mov
adc
add
push
sahf
pop
pop
movsb
hlt
cmpl
cwtl
cmpsl
jmp
int3
aam
nop
add
out
leave
push
mov
mov
call
shlb
xchg
test
jb
pop
xchg
loopne
or
jnp
lods
idivb
divl
mov
jbe
or
cmp
mov
scas
cmpsl
sbb
cmp
test
nop
mov
dec
mov
sub
dec
imul
xchg
or
arpl
xchg
aad
pop
dec
or
pop
xchg
nop
mov
and
lods
cmp
clc
mov
jg
cmp
arpl
add
mov
lds
mov
leave
lods
out
mov
popf
jnp
push
addl
mov
xor
mov
sbb
out
push
shlb
loope
cmp
mov
mov
sbbl
jne
pop
loop
cmp
inc
cmc
push
sub
sub
xor
test
mov
mov
xchg
pop
loopne
or
lds
pop
push
or
dec
sti
inc
aad
aaa
lds
stc
mov
push
clc
fistpl
cwtl
out
pop
mov
out
adc
popf
jg
xchg
ret
nop
repz
mov
push
fsubrl
mov
cwtl
rolb
sahf
jns
aas
and
dec
sbb
hlt
xchg
push
bound
xor
xchg
mov
cmc
xchg
push
inc
test
aas
and
jge
cmp
sbb
leave
loope
xchg
shll
mov
cmp
push
pop
push
shlb
subb
mov
cmp
xchg
push
clc
int
jle
jno
dec
jmp
mov
jle
push
inc
sbb
aaa
mov
dec
shll
pop
into
aas
add
test
aam
xchg
add
pop
dec
xchg
out
cltd
scas
add
daa
sub
sbb
stc
lods
ficoms
fisttps
ds
and
push
xchg
cwtl
lret
lods
sub
cmpsb
mov
xchg
cs
sbb
sbb
mov
lock
xor
rolb
shll
pushf
adc
xor
loopne
lds
das
push
mov
lock
pop
mov
and
jne
aaa
pop
xchg
stos
cmp
mov
aad
xchg
arpl
adc
push
push
adc
rorl
roll
push
js
cmp
in
cmp
jg
push
sub
add
and
sub
jnp
mov
daa
mov
shl
dec
ror
or
rcll
mov
inc
aaa
movsb
push
ja
dec
cmp
aas
mov
sbb
adc
inc
jmp
int
jecxz
cmp
sub
mov
mov
shrl
inc
pop
movb
adc
push
mov
sar
shr
pop
addr16
int
mov
ror
subb
cmp
repz
aaa
mov
out
cmpb
js
fsubrs
pop
inc
add
es
cmp
ss
addr16
fwait
std
cmp
lahf
sbb
sub
inc
pop
mov
or
sub
scas
cmp
xchg
inc
sbb
mov
push
adc
inc
mov
cmp
dec
mov
cmp
rcl
pop
cmp
mov
fnstsw
pop
or
xor
adc
or
jns
adc
test
cmp
sbb
push
sbb
inc
adc
inc
xchg
jecxz
roll
test
mov
lods
icebp
daa
jge
cli
xchg
xchg
sub
leave
xorb
lret
cltd
nop
fldenv
xchg
jne
pop
inc
sub
inc
in
stc
sbb
cmp
lea
hlt
lret
pop
jg
mov
in
movsl
aam
jecxz
les
inc
jle
jns
shlb
cmp
lea
xchg
adc
mov
cmp
neg
daa
repz
outsl
aas
cmp
std
flds
fsubrl
lea
xchg
in
mov
es
insb
aaa
xchg
sbb
inc
jmp
repz
aaa
xchg
inc
xchg
mov
push
sarl
mov
movsb
and
add
shlb
stos
aas
push
dec
inc
cmpsb
mov
negb
inc
inc
adc
repz
add
mov
push
test
lods
ficoms
cmp
mov
inc
jnp,pn
sti
rol
mov
pushf
sbb
xor
aaa
push
imul
push
mov
lds
sub
inc
bound
ja
adcl
adc
mov
scas
dec
mov
das
clc
mov
adc
or
dec
fildl
jbe
imul
push
sub
aas
ja
pop
mov
inc
pop
dec
pop
xorb
cmc
out
or
push
jle
scas
aaa
ss
into
stc
mov
data16
aaa
icebp
ja
pop
sbb
cmp
xchg
in
inc
xchg
or
pop
and
jo
inc
nop
es
mov
jmp
inc
mov
sahf
jno
into
add
jle
pop
dec
cld
pop
push
and
insl
push
shlb
fmulp
or
sbb
sub
xchg
jmp
mov
xor
popa
insb
mov
insl
lahf
mov
iret
imul
lds
dec
shl
and
sbb
push
dec
push
dec
inc
cmp
and
adc
adc
add
aaa
and
pusha
dec
pop
mov
pusha
lds
out
scas
mov
fmull
cmp
out
addr16
hlt
jg
lea
dec
or
mov
iret
sub
mov
mov
cmc
lea
sbb
sbb
sbb
mov
mov
sub
pop
add
xlat
jno
fucomi
imul
and
mov
jle
mov
jnp
xchg
shlb
xchg
fs
pop
adc
jecxz
pop
loop
push
in
push
mov
dec
xchg
repz
mov
cltd
loop
mov
jne
and
and
and
inc
cmp
imul
pop
inc
test
in
xchg
and
lods
push
iret
rolb
sbbb
cmpsb
fildll
inc
lcall
jne
daa
rolb
shll
nop
push
int
aad
cld
push
xchg
lods
adc
pop
into
lods
rcl
dec
and
sbb
push
ja
mov
aam
jecxz
dec
nop
pop
mov
sbb
push
jo
xchg
fistps
fdivrl
divb
mov
popf
mov
shlb
xchg
pop
lods
ja
jmp
ljmp
pop
test
mov
xchg
and
outsl
push
test
int
dec
les
pop
xchg
lret
xchg
xor
pusha
ds
imul
repz
inc
scas
out
xorl
mov
dec
xchg
aad
inc
sbb
xor
aas
and
inc
scas
ret
cli
sti
neg
pop
mov
mov
daa
mov
jns
push
lods
dec
mov
aaa
inc
inc
mov
jae
push
xor
mov
xchg
lods
cltd
sbb
fiadds
push
xor
lret
mov
aad
in
scas
inc
jmp
inc
xor
inc
push
fcom
sbb
or
shl
adc
xor
sub
nop
sub
or
xchg
inc
sub
pop
in
mov
mov
ja
cmp
mov
cmp
notb
iret
outsb
sub
pop
iret
add
and
imul
xchg
jmp
inc
adc
repz
inc
mov
push
jge
adc
inc
adc
jbe
cmc
fnstenv
mov
xchg
mov
pop
sub
push
add
je
ss
inc
orl
pop
outsb
pop
mov
es
imul
mov
daa
inc
xor
dec
xchg
sbb
mov
fstpl
push
stos
mov
cmpsl
lds
push
out
clc
popa
out
leave
jmp
mov
das
notb
mov
in
xchg
out
rorl
mov
test
mov
mov
or
xchg
inc
pop
and
aaa
movsl
mov
ja
mov
jb
mov
push
rorb
sub
inc
dec
cmp
inc
lahf
sub
xor
insb
adc
ficomps
adc
jae
subb
sub
and
and
xor
sbb
mov
inc
push
je
mov
jnp
mov
repnz
imulb
test
in
mov
push
xchg
out
js
xchg
mov
shrl
xor
jle
jnp
sbb
mov
cmpsl
sbb
pop
daa
ja
push
adc
cld
push
nop
aas
daa
ret
cmpsl
testl
outsb
ds
lea
in
out
dec
mov
sub
in
xchg
inc
das
dec
fcmovbe
mov
jne
jae
cmp
in
cmc
push
mov
mov
std
out
xor
mov
pop
push
push
jge
pop
incl
and
aaa
mov
outsl
in
lahf
sti
mov
pop
mov
xchg
in
dec
mov
and
or
jnp
sub
push
mov
inc
jnp
loopne
pop
popl
xor
aad
lret
std
loope
xchg
rep
imul
xor
pop
popa
movsb
mov
outsb
inc
push
jo
mov
mov
push
jae
negb
insb
imul
dec
and
cltd
iret
xchg
shll
ret
lods
jns
aam
jmp
into
sbb
jmp
push
adc
js
mov
shl
jnp
mov
push
lret
adc
mov
cli
into
jmp
stos
jmp
cmp
fldt
pop
js
rol
nop
adc
loop
mov
rcr
dec
mov
and
rorb
sahf
jne
das
test
fdivl
push
lret
test
cmpsb
sub
outsb
pushf
hlt
push
xor
cltd
xchg
and
pop
sti
xchg
hlt
lahf
xchg
rclb
sahf
das
xchg
aad
ja
sub
inc
fcoms
mov
scas
fwait
arpl
adc
jge
push
adc
loope
pop
push
fnstcw
sti
cmc
aad
gs
adc
shrb
adc
mov
stos
ret
jp
dec
inc
inc
adc
cmpsb
mov
add
addl
pop
daa
js
jns
mov
sbb
pop
jle
insl
pop
std
repz
sbb
inc
sbb
push
cmpsb
loopne
pop
popf
push
or
jnp
stos
mov
sahf
filds
ret
push
jle
jb
adc
sahf
js
add
pop
pop
outsb
push
pop
jmp
test
pop
sub
push
sahf
lds
fdivl
nop
mov
push
call
lods
mov
add
and
test
jp
shll
dec
ja
mov
clc
xchg
pop
mov
mov
or
cmp
or
ds
push
scas
mov
popf
nop
xchg
xor
aaa
in
jl
jg
adc
aaa
rclb
int3
jae
js
imul
mov
es
cld
or
int
in
roll
aaa
pop
nop
cmp
aaa
mov
iret
clc
jo
sbbl
mov
fnstsw
push
test
mov
sarl
movsl
add
push
imul
inc
insl
aad
enter
or
mov
test
data16
sub
jns
xchg
jae
jge
cs
push
fmull
inc
mulb
xorb
daa
push
sub
imul
jl
jecxz
jne
push
xchg
fimull
or
std
pop
out
xchg
outsb
push
xchg
mov
lret
popf
adc
mov
push
icebp
int
adc
addr16
push
iret
mov
inc
or
xor
dec
inc
cmp
fadds
xchg
mov
fcmovb
cmp
movsl
jmp
arpl
pop
mov
aaa
movsb
xchg
dec
insl
cmpsl
and
fdivl
lods
addb
add
push
cmp
out
iret
ret
jmp
lahf
mov
xor
push
rorb
rclb
fdivr
ljmp
in
pop
sub
push
lcall
imul
fcompl
push
inc
roll
jecxz
cmp
popa
mov
mov
adc
repz
sti
hlt
xchg
push
or
mov
dec
xchg
push
adc
fisubrs
imul
mov
cld
leave
out
shlb
test
pop
xchg
pusha
xchg
in
and
sahf
outsb
cmpsl
in
nop
push
int3
jnp
xchg
and
push
pop
inc
mov
mov
lods
mov
dec
mov
add
insb
stc
mov
enter
push
jae
ret
scas
lock
rcll
mov
xchg
into
push
enter
ja
int
jo
push
xchg
imul
mov
xor
gs
cmpsl
push
loop
das
repnz
cmp
dec
mov
ss
push
sbb
dec
mov
mov
push
dec
jecxz
mov
adc
lock
jb
mov
push
mov
gs
lods
xchg
repnz
inc
xor
dec
jg
xchg
ja
aas
xchg
adc
pop
test
dec
push
xchg
inc
push
arpl
nop
leave
or
mov
push
repnz
shlb
nop
push
in
test
push
pop
nop
push
aad
stc
enter
mov
dec
repz
dec
mov
xchg
mov
ja
mov
jnp
adc
out
nop
js
mov
push
push
out
lock
jge
dec
mov
xchg
ja
mov
xor
dec
jns
dec
xchg
sahf
lahf
pop
jle
dec
ret
and
inc
mov
adc
into
jo
nop
xchg
xor
xchg
xchg
mov
mov
sbb
lods
push
xchg
cmpsl
adc
jb
cmpsl
push
stos
or
mov
ds
xchg
ja
mov
xchg
cmp
sbb
sbb
mov
or
inc
mov
jg
jo
mov
cmpl
sbb
jno
mov
shll
push
push
sbb
xchg
enter
rcll
dec
fcmove
dec
adc
dec
iret
add
and
fsubrl
push
xchg
out
or
int
rorl
ja
add
clc
push
sub
addr16
jle
dec
dec
test
fnstcw
movsl
push
add
mov
pop
mov
repz
cwtl
rol
call
sub
mov
mov
adc
into
push
cmp
push
cmp
cmp
inc
jg
mov
mov
iret
jnp
les
fldcw
out
jne
push
jne
mov
push
es
ret
xchg
xchg
cmpsl
imul
test
cwtl
lret
repnz
cmp
dec
repz
movsb
out
inc
push
repnz
push
jae
int3
adc
outsb
inc
add
push
movsl
xchg
aam
daa
inc
push
pcmpeqw
das
arpl
aaa
xchg
mov
inc
aas
push
pusha
jbe
popf
ja
inc
push
adc
dec
xchg
dec
mov
inc
lock
push
inc
or
xchg
pop
nop
adc
xchg
cmpsb
lea
jb
outsl
movsl
push
repz
adc
btr
jg
mov
xchg
std
xor
push
xchg
mulb
popf
ss
mov
inc
cmpsl
push
rclb
pushf
loop
xchg
xchg
pop
pop
nop
and
add
xchg
xchg
aas
mov
lds
mov
mov
jns
xchg
push
popf
adc
xor
iret
nop
mov
shrb
mov
inc
in
adc
nop
and
mov
dec
movb
jnp
push
mov
mov
jecxz
mov
clc
ss
jnp
or
nop
xor
inc
push
out
hlt
ds
aad
test
popf
nop
idiv
mov
push
fwait
cmp
in
lds
xor
lds
or
daa
sub
faddl
test
aad
mov
push
cltd
xchg
and
rclb
mov
test
adc
fwait
int3
ja
mov
push
jae
mov
cmp
xor
jg
xchg
mov
or
fcmovbe
mov
imul
xchg
jle
int
in
fucomip
sbb
pop
xchg
nop
add
out
mov
nop
add
dec
push
xchg
mov
sbb
xor
push
push
mov
into
loope
jo
or
fmuls
sub
sti
sbb
adc
push
repz
push
nop
pop
and
sub
aas
nop
inc
mov
mov
jnp
or
ret
out
adc
out
scas
test
nop
dec
cmp
std
mov
push
popl
nop
inc
sub
and
aas
push
leave
scas
mov
movb
int
iret
test
cltd
pop
or
pop
int3
mov
inc
mov
out
mov
stos
ja
aad
mov
xchg
sysenter
mov
dec
mov
and
mov
sbb
sbb
scas
cmp
orl
xchg
cld
xchg
icebp
adc
orb
out
popf
push
arpl
inc
mov
mov
xchg
mov
pop
xchg
hlt
add
aas
daa
cmp
push
aas
test
aas
int3
inc
aad
mov
test
dec
jl
enter
xor
lods
or
mov
enter
cltd
pushf
imul
pop
push
dec
in
mov
insb
outsl
fiaddl
sub
loopne
and
insl
cltd
mov
pop
mov
sti
lock
push
cwtl
ret
dec
inc
nop
push
shlb
push
push
loop
imul
iret
mov
pop
adc
ss
xchg
xchg
adc
inc
mov
out
arpl
scas
sub
ret
push
bound
mov
cmp
push
add
ljmp
insl
push
aas
nop
call
aas
mov
add
adc
dec
dec
cmc
cmp
rclb
arpl
fists
mov
pop
dec
xlat
cltd
pop
sbb
jno
cwtl
adcb
das
cmp
shlb
jmp
xchg
push
mov
adc
call
lods
xchg
repz
loop
cmp
xchg
sub
int
and
imul
into
or
outsb
xchg
mov
enter
sbb
inc
and
icebp
outsl
sub
jmp
jge
nop
into
adc
mov
inc
into
xchg
outsb
int3
mov
dec
jne
pop
xchg
dec
xchg
push
lahf
xorl
ds
dec
add
data16
repz
scas
add
dec
pop
fucomip
mov
mov
sbb
sbb
xchg
mov
push
pushf
sub
adc
and
popf
daa
mov
jge
arpl
and
adc
leave
nop
bound
jnp
jbe
and
xor
data16
pop
push
and
xorl
jmp
and
push
gs
jno
addb
mov
push
loope
mov
test
adc
movsb
mov
leave
mov
gs
xchg
or
cmpsl
movsb
cltd
add
add
mov
pop
subl
jge
xchg
aaa
jge
into
daa
add
sbb
sbb
jmp
cmp
mov
inc
imul
xchg
xor
stos
sbb
lcall
cmpsl
xor
lds
sbb
or
push
push
mov
scas
enter
pop
push
dec
out
pusha
adc
ja
push
iret
adc
push
jb
sub
dec
mov
sub
leave
pop
jmp
mov
sbb
inc
fisubrl
fwait
xchg
add
sarl
sub
mov
push
push
divps
lahf
dec
mov
xchg
in
int
push
xchg
jno
lret
mov
gs
mov
lods
sbb
sti
lods
push
scas
clc
std
aad
push
bound
lea
mov
add
jns
daa
dec
lret
inc
enter
pop
imul
mov
mov
cmpsl
popf
ja
nop
fdivl
xor
sub
mov
xor
ja
pop
cmp
jno
stos
fcoml
sahf
rcll
mov
test
addr16
and
xchg
aam
mov
xor
insl
call
imul
and
add
fdivrl
shll
xor
cmp
rcrb
pop
pop
cmpsl
sarl
sub
fidivl
jge
lods
mov
sub
enter
ja
mov
mov
adc
cmp
aaa
dec
ret
mov
or
xchg
jbe
xchg
xor
leave
mov
mov
inc
dec
inc
xchg
pop
xchg
mov
mov
inc
mov
out
mov
test
aaa
xchg
mov
les
xchg
xlat
clc
mov
mov
mov
push
mov
scas
test
dec
adc
js
push
or
xchg
mov
mov
cmp
stos
in
push
js
mov
push
js
bound
notb
lret
lahf
cmp
andb
mov
mov
push
jb
add
sbb
mov
cmc
fmul
js
movsb
dec
bound
jecxz
int
xor
loop
inc
mov
loop
ja
shrb
adc
push
xor
into
cwtl
ficomps
mov
adc
xor
pop
push
stc
xlat
inc
xchg
fists
mov
repnz
xchg
loopne
pop
jp
fs
cmp
xchg
xor
cs
pop
outsb
sbb
push
cmc
push
fwait
int
das
dec
xchg
mov
bound
gs
jae
mov
test
push
sti
push
insl
jb
mov
and
cltd
aaa
lret
js
gs
sbb
cmpb
jae
lods
dec
mov
mov
push
ss
inc
test
xchg
stos
lret
pop
fwait
mov
loopne
test
jo
jnp
dec
sbb
push
push
pop
xchg
lods
std
sub
test
fs
pop
sahf
xchg
push
dec
jl
push
nop
mov
aam
and
aas
push
add
dec
das
cmc
int
mov
xchg
loop
sarl
imul
aad
nop
aas
in
cmpsl
fisttps
clc
sbb
xchg
lahf
ss
aaa
jp
and
push
jge
pusha
js
cmp
pop
xchg
mov
test
subl
stos
paddsw
push
xchg
aad
stos
dec
mov
cld
fnstenv
and
ja
loope
hlt
imul
mov
std
push
roll
shl
pop
fwait
jle
mov
jge
xchg
notl
repz
dec
out
sub
mov
xchg
sbb
dec
pop
int
iret
xor
push
mov
inc
mov
push
outsl
lret
add
into
jo
pop
or
jae
clc
dec
aad
jne
adc
mov
pop
and
mov
scas
ja
cltd
mov
inc
mov
or
out
movsl
jno
xor
inc
jb
dec
sahf
mov
test
sbb
mov
mov
xor
pop
sbb
push
cmpsb
call
les
mov
stos
xchg
xchg
fstpt
stos
pop
or
pop
in
aaa
cmp
ret
inc
and
adc
hlt
stos
sub
testl
sbb
cmp
ja
push
icebp
mov
rorb
and
enter
and
xor
pop
sete
push
sub
repz
push
into
mov
mov
push
adc
mov
inc
xor
mov
mov
xlat
mov
inc
negb
loope
jnp
xor
or
cld
orb
nop
imul
xchg
jbe
imul
sub
and
aas
fnstenv
testb
sahf
scas
sbb
push
pop
mov
fisubrs
ret
sub
inc
and
test
xchg
subb
pop
sbb
cmp
or
jmp
imul
xchg
dec
push
sahf
in
sub
shlb
in
mov
mov
mov
nop
pop
jmp
mov
jo
lret
call
mov
xlat
lret
imul
sub
nop
sbb
inc
jo
daa
mov
cmp
mov
out
js
notl
je
adc
fadds
cmp
cli
or
es
dec
mov
cmp
push
cld
nop
jne
js
push
mov
sahf
outsb
outsb
pop
aad
jnp
cmc
jo
adc
mov
aaa
nop
push
movq
jne
test
push
sbb
xchg
or
loop
rcr
idivb
stos
jp
andb
out
cmpsb
mov
enter
std
imul
adc
add
ja
push
pop
fnstcw
jecxz
sbb
inc
and
fbld
or
jb
mov
lret
cltd
jecxz
mov
shlb
aaa
enter
jg
sub
or
fsubrl
or
mov
xchg
cmc
cli
insl
addl
aaa
xchg
push
repz
dec
xor
dec
jnp
push
arpl
xchg
xchg
lahf
pop
jo
bswap
pmuludq
cld
or
fcmovu
leave
mov
adc
push
in
adc
mov
and
pop
nop
out
mov
arpl
and
lahf
insb
std
sbb
adc
inc
push
in
push
cs
div
pop
inc
pop
outsb
mov
pop
jge
ror
shrl
outsb
or
cmp
push
lahf
cmpsb
faddl
lods
popa
add
mov
xorl
dec
ror
lret
jo
std
mov
mov
fdivrs
roll
push
mov
loopne,pn
nop
icebp
lcall
jo
mov
xor
pop
test
xor
push
std
aad
dec
aad
push
xor
int
or
outsb
dec
ret
push
mov
mov
pop
test
fmulp
lods
iret
xchg
mov
jge
sub
js
xor
and
int
incb
pop
sahf
lods
in
lret
mov
mov
and
add
jne
aaa
in
in
icebp
mov
xor
dec
stc
rcrl
fists
mov
push
imul
sub
mov
xchg
dec
mov
mov
mov
jne
add
xor
scas
sar
mov
adc
das
sahf
jnp
gs
lock
push
xor
mov
xchg
jno
cli
and
repz
in
pushf
xor
jbe
sarb
fcomi
mov
xchg
xchg
dec
popf
xchg
ficoml
pop
je
out
push
push
sub
arpl
xchg
lods
jmp
aas
jge
pop
pop
mov
clc
xor
cmp
movsl
add
sub
test
jmp
ds
mov
and
fisubs
pop
dec
daa
shll
and
jae
rcll
imul
gs
pop
movsl
dec
jecxz
add
inc
mov
mov
sub
imul
pop
nopl
mov
jb,pn
add
push
adc
leave
adcb
push
sar
in
daa
mov
cmpsl
fdivrs
jle
sbb
and
addr16
mov
jg
arpl
xchg
mov
jmp
xor
cmpsl
jmp
test
sbb
rorb
ja
das
mov
aas
push
jnp
bound
enter
add
negb
incb
outsl
pop
cmpsl
sub
in
pop
xor
inc
aad
xchg
pop
dec
mov
lret
imul
pop
mov
mov
test
or
cmp
outsb
ja
jns
xchg
mov
mov
xchg
sbb
psrad
xor
push
fldenv
xchg
lea
jp
push
pop
hlt
push
xchg
outsb
das
popf
sub
add
loopne
fimull
mov
aaa
pop
dec
gs
out
test
sub
cli
xchg
dec
sbb
or
push
cmp
push
dec
add
mov
xchg
dec
inc
cmp
fidivrl
fistpll
mov
test
fcoml
nop
jne
cmpsb
pop
and
jecxz
dec
and
xchg
xchg
mov
pop
adc
push
and
lret
aas
hlt
mov
push
or
inc
adc
pop
aaa
mov
lcall
or
or
sbb
mov
lds
mov
jle
test
mov
inc
push
sub
ret
movl
mov
push
mov
fcoms
and
lahf
hlt
and
pop
je
daa
cmp
out
aaa
mov
rolb
sahf
shrb
fidivl
lret
lods
out
inc
xchg
mov
loope
pop
mov
jmp
test
push
mov
mov
out
and
mov
movsb
pop
shl
xchg
jle
mov
fiadds
stc
ds
jns
je
dec
dec
test
jbe
dec
jl
xchg
mov
and
arpl
loope
xlat
dec
fidivl
mov
push
out
into
fbstp
inc
mov
cmp
in
xchg
pop
insl
stos
fsubrp
push
fucomp
int
ret
or
leave
lods
fisttpl
in
push
jne
mov
xor
cmp
sahf
scas
cs
mov
aas
xchg
cmp
stos
loopne
or
jno
loopne
rcrb
xchg
xchg
jp
jg
orl
inc
lea
xchg
dec
adc
imul
imul
fimull
dec
mov
jbe
add
cmp
jb
out
xor
int3
cwtl
or
push
pop
inc
pop
ss
dec
jmp
inc
mov
or
dec
nop
jae
push
rol
mov
stos
fsts
repz
xchg
xchg
shl
mov
push
call
mov
jo
leave
add
shll
mov
sbb
ds
jg
mov
movsl
nop
sub
cld
popf
cmpsl
movsb
imul
mov
push
scas
xor
imul
xchg
jg
mov
fcoml
insl
push
lock
push
mov
cmp
rorl
imul
jb
fistl
movsb
mov
dec
sbbb
icebp
and
jo
addr16
js
cltd
and
out
sbb
pop
jge
jg
imul
sarb
cmp
mov
dec
nop
inc
xchg
imul
sti
mov
lret
in
pop
mov
insb
cmpl
fidivs
adc
dec
fldcw
mov
imul
out
fisubl
mov
insl
std
sbb
jbe
xchg
add
or
sarb
andl
mov
shlb
sub
add
movntq
out
enter
mov
fbstp
and
jmp
lahf
rorl
xor
pop
cmp
xlat
adc
sahf
xor
data16
mov
divl
jno
lahf
movsl
push
mov
jl
cli
jg
dec
or
iret
imul
sub
cltd
mov
mov
jg
into
iret
dec
xor
dec
sar
scas
dec
movsb
mov
xchg
fwait
cmp
int3
sbb
cld
movsb
sahf
loopne
jns
push
mov
scas
add
adc
mov
mov
sub
hlt
std
xchg
inc
pop
stos
push
xorb
sbb
loope
inc
cs
xor
jns
std
popa
adcl
int3
mov
mov
sbb
lret
mov
movsl
cmc
loope
sub
dec
lret
xchg
push
jb
dec
xor
or
out
fmull
pushf
dec
pop
jae
outsl
jp
pusha
xor
jecxz
or
sub
mov
add
mov
inc
push
and
repnz
pop
mov
insl
shrl
out
hlt
bound
ljmp
push
sbb
mov
jnp
inc
and
popa
int3
xor
pop
sahf
lahf
push
movsb
inc
pop
pop
out
jbe
cltd
sarl
or
fisttpl
jg
in
mov
sbb
sbb
inc
jb
pop
shlb
and
dec
sub
movb
roll
adc
xchg
push
cmc
rorb
in
or
repz
jge
out
stos
push
mov
or
mov
push
rcrb
mov
setne
lret
icebp
icebp
pop
mov
in
jle
daa
mov
ja
dec
cmp
stos
orb
popf
jne
adc
cmp
pop
mov
sahf
mov
bound
pop
inc
cmp
fsubrs
sub
xchg
insl
lret
sub
xchg
xor
aas
aas
test
adc
mov
xchg
adc
andl
and
cmp
repz
sbb
rorb
in
ficompl
rol
inc
inc
stos
into
std
mov
xchg
outsb
mov
xor
ret
mov
push
sbb
xchg
mov
pushf
mov
popa
dec
in
sub
pushf
mov
xor
and
gs
push
push
adc
call
cmpsb
sbb
daa
push
xchg
inc
jp
inc
mov
push
dec
jno
addr16
fdivl
int3
in
push
and
jno
rorb
adc
fwait
xchg
or
sbb
dec
cmp
pop
mov
into
lods
dec
lds
fdivrs
and
insl
cmp
ja
adc
or
out
aaa
and
add
inc
mov
lds
arpl
or
stc
jns
dec
repz
mov
cmp
xor
and
ljmp
jb
out
sbb
add
into
dec
je
in
cld
in
add
pop
jle
ret
sbb
sti
sbb
pusha
insb
and
data16
stos
shlb
ljmp
loope
test
xchg
shrb
pop
push
cmp
lds
notb
add
sbb
adc
lcall
jp
pop
dec
leave
addr16
or
cmp
mov
lds
loop
inc
xor
sub
mov
jnp
int
ret
leave
filds
and
jo
ret
xchg
push
jne
xor
loope
stos
andb
push
cli
idivb
mov
popf
lcall
sti
xchg
cmc
jbe
dec
pop
ret
bound
push
and
lea
mov
out
rorl
insb
enter
pop
mov
out
mov
xchg
inc
negb
scas
nop
fldenv
push
ficomps
call
xor
cmp
ficoms
push
mov
and
out
cmpsb
sub
sub
iret
sahf
jnp
mov
mov
outsb
push
mov
xor
push
add
aaa
add
sub
nop
cmc
pop
nop
sub
xor
adc
shrl
insl
dec
in
sbb
dec
cmp
pop
cmpsl
adc
and
inc
mov
out
pop
popa
xchg
mov
sbb
jg
and
add
xor
mov
xor
popl
insl
cmp
sub
pop
push
idivb
inc
sub
dec
in
cmpsb
mov
std
cmc
fistpll
xor
aas
xor
pop
push
pop
test
aad
in
cs
cmc
jge
xlat
mov
adcl
out
out
push
mov
scas
repnz
filds
sbb
jecxz
push
dec
jnp
aam
pushf
js
xchg
out
xor
jl
add
jl
inc
fisubrl
out
and
out
test
ja
push
and
or
cmpb
and
aam
and
jmp
divb
incb
xor
sub
aam
dec
js
scas
cltd
das
inc
mov
aas
aad
and
aaa
shll
mov
sahf
mov
xor
or
stos
jae
cmpsb
shrb
xchg
aad
fisubrl
cmp
scas
cmpsb
xchg
fcoms
cwtl
addl
sub
xchg
mov
scas
ja
push
inc
aam
or
or
ret
fcompl
ret
xor
mov
and
sub
iret
test
jmp
jbe
loope
fldcw
push
inc
push
sbb
lret
adc
jl
push
daa
fidivrs
addr16
jbe
mov
call
sbb
fadd
insb
sbb
xchg
popl
repz
jbe
dec
cld
fisubrs
jo
xor
les
sbb
sub
xchg
add
mov
sbb
mov
cltd
mov
jp
mov
add
xor
out
outsl
sub
fbld
ficompl
ljmp
or
mov
ja
cmp
scas
es
aam
inc
mov
mov
imul
stos
jmp
sub
mov
icebp
lods
xor
jnp
adc
lea
shll
stos
dec
fcoml
int3
dec
ret
add
cs
jp
dec
sub
sub
mov
or
gs
fdivl
sub
push
test
lahf
aaa
sbb
les
adc
push
aaa
scas
adc
rcrb
inc
push
data16
or
rcrb
shll
cmc
push
or
lods
out
or
shlb
push
lret
xor
inc
icebp
adc
adc
mov
cmpsw
jge
push
icebp
push
movsl
xor
pop
fwait
xor
jne
pop
adc
sbb
andb
cvttps2pi
mov
jae
jbe
xlat
xchg
shl
mov
hlt
iret
mov
test
push
aaa
js
imul
add
in
mov
pop
or
call
lahf
shlb
iret
stos
std
mov
push
nop
push
orb
ds
aas
mov
cmp
pop
sbb
into
xchg
lcall
inc
xchg
rcll
rclb
sahf
loop
jnp
push
xchg
mov
or
xchg
sub
aas
std
test
and
jnp
hlt
xchg
mov
imul
test
xchg
imul
push
lcall
sbb
add
nop
inc
or
lock
xchg
push
imul
add
scas
lods
inc
in
test
xchg
aaa
add
xor
inc
fdivr
ret
xchg
mov
subl
fmull
dec
sub
dec
jl
inc
lods
push
dec
clc
mov
xchg
idivb
push
dec
mov
gs
sub
mov
xchg
clc
repz
dec
xor
leave
add
add
movsb
xor
or
pop
jmp
sub
mov
pop
ret
nop
das
xor
xchg
daa
aam
push
mov
jmp
xchg
sbb
mov
xor
inc
out
lock
test
orl
sarl
sbb
push
mov
push
movsl
jbe
mov
cmpsl
fcmovb
sub
sbb
inc
and
orb
inc
or
andb
push
lock
add
add
dec
or
or
inc
push
cli
popf
inc
into
mov
adc
ja
fwait
rorl
adc
pop
adc
lds
pop
or
xor
push
sub
jle
pop
jo
test
push
jmp
xor
hlt
push
mov
and
mov
pop
mov
cmp
std
xchg
shll
add
add
ret
sub
inc
rcr
mov
cld
int
mov
lret
add
push
cmp
ja
or
enter
iret
adc
cmpsb
ja
dec
and
xchg
repnz
imul
push
lahf
stos
mov
imul
aad
mov
aad
push
dec
nop
rcll
test
dec
xor
xchg
cmp
loope
sbb
enter
repz
pop
repnz
mov
cmp
pop
fwait
aaa
adc
xor
mov
dec
jmp
jno
pop
sub
jno
stos
cmp
rorl
mov
cmpsl
ret
aam
jg
add
sbbb
cmp
xor
loopne
inc
loopne
jmp
mov
popf
jnp
les
push
jne
cwtl
loop
jmp
mov
xchg
adc
adc
mov
or
std
push
xor
adc
gs
jle
mov
inc
sbb
dec
mov
cs
mov
leave
pop
mov
push
xor
mov
xchg
bound
rcll
push
sbb
xor
rcr
mov
scas
stc
iret
sbb
adc
xchg
mov
mov
and
mov
mov
mov
js
mov
adc
flds
sbb
push
sbb
out
arpl
cmpsb
and
fildll
daa
push
test
push
inc
push
mov
jp
jne
stos
js
xor
cmpsb
sbb
int3
pop
mov
jno
js
imul
xor
bound
out
lods
fmull
ljmp
mov
inc
pusha
sbb
icebp
push
fldenv
push
mov
add
enter
adc
mov
push
push
inc
ljmp
mov
cltd
test
dec
ja
scas
jle
mov
out
scas
mov
in
fwait
lcall
in
inc
xchg
and
fildll
xchg
jl
ret
enter
fstpt
inc
js
mov
xchg
mov
cmp
push
hlt
addl
and
out
dec
sbb
push
enter
iret
aam
sub
rorl
inc
icebp
dec
mov
repnz
aad
sbb
inc
out
adc
pop
fiaddl
sahf
ja
xchg
jmp
mov
sub
sub
fisttpll
mov
notl
out
cmp
pop
repz
out
stos
push
in
fisubrl
divb
mov
xorb
pop
testb
adc
int
xchg
cmc
sti
pop
sub
mov
mov
inc
in
adc
into
xchg
add
mov
mov
and
mov
cmpsb
cmpsb
rclb
or
cmpsb
dec
sub
ret
mov
pop
rol
dec
popa
lods
aaa
nop
js
in
inc
popf
outsb
aaa
loopne
xchg
das
push
jne
xchg
rep
iret
pop
mov
adc
call
and
inc
push
sbb
cmpsl
add
push
iret
scas
idivl
jge
out
ljmp
lock
nop
xchg
pop
add
jbe
mov
daa
or
sbbl
sbb
pop
lods
push
inc
jnp
jne
xlat
aas
out
cmpb
jge
imul
pop
push
jmp
jbe
lret
mov
ss
daa
les
lock
nop
out
stc
mov
out
pushf
mov
js,pt
in
iret
push
push
scas
inc
js
and
sub
aam
mov
lret
leave
push
jmp
push
mov
adc
mov
xchg
cs
adc
jecxz
inc
ss
ljmp
aas
es
xchg
mov
pushf
rolb
xchg
pop
les
arpl
cmp
jmp
std
xchg
inc
movsl
adc
inc
outsb
test
lret
ds
push
insl
xor
icebp
xchg
or
push
mov
add
out
or
mov
jo
nop
lret
sub
icebp
into
daa
or
jmp
inc
popa
movsb
dec
jns
cmpsl
cmp
jecxz
stos
and
in
rorb
jge
test
pop
inc
cmc
test
out
sbb
add
jge
pop
and
sysret
mov
push
cld
clc
or
mov
sbb
adcl
sahf
xchg
dec
aam
push
dec
in
movsl
lahf
mov
ljmp
pcmpeqb
ja
les
lock
push
pusha
jl
and
subl
scas
add
mov
sbb
add
pop
addl
loop
jl
rol
pop
fmull
jle
in
iret
pop
push
out
push
sub
mov
xor
std
pop
jecxz
jge
push
mov
xor
not
mov
pop
les
push
inc
xor
sbb
sbb
cltd
mov
push
nop
mov
inc
push
pop
mov
and
mov
inc
shlb
divl
xchg
iret
sub
ja
ret
pop
mov
aam
lahf
int3
xchg
scas
shll
xchg
lds
sub
cltd
mov
outsb
mov
mov
ss
adc
pop
aaa
or
xor
call
call
pop
sub
cld
imul
shll
mov
outsl
xor
lahf
pop
mov
into
jbe
jns
lds
push
xor
sbb
jmp
loopne
jg
cmp
hlt
xchg
xchg
jnp
push
icebp
mov
cs
arpl
into
sub
fidivs
mov
in
mov
dec
jge
or
inc
sti
call
sbb
mov
jne
ljmp
aad
out
aaa
orl
jo
jecxz
mov
push
mov
aaa
fdivrp
dec
jge
xchg
jecxz
xchg
in
pop
dec
notb
pop
mov
lret
or
adc
mov
mov
outsb
std
jns
mov
rcrb
fsubrl
cmp
sbb
push
ss
push
loop
xor
bound
xchg
and
and
mov
test
scas
addr16
jp
mov
scas
jle
jp
mov
call
cwtl
mov
xor
push
and
int
mov
in
jne
fistl
call
rorb
or
mov
mov
mov
jp
xor
mov
arpl
dec
push
fcomps
pop
into
push
dec
push
mov
push
or
aam
dec
adc
ret
push
sbb
sahf
daa
rcrb
push
jb
jmp
aas
jmp
xchg
nop
xchg
or
cld
nop
add
jg
xor
data16
xchg
xor
jo
aad
incb
mov
jl
sbb
xchg
dec
push
push
imulb
push
sbb
and
inc
push
sub
xchg
inc
sub
std
dec
repz
pop
in
pop
pop
mov
sbb
shrb
aas
xor
lock
call
xchg
jmp
pop
pop
in
sub
shl
enter
in
cltd
sarl
mov
jbe
xchg
mov
adc
pop
adc
pop
dec
loope
mov
fisttps
or
outsl
or
mov
hlt
jno
xchg
fisttps
imul
mov
out
push
cld
out
add
dec
in
lock
imul
mov
loope
sub
cmp
sahf
es
loope
into
pop
push
push
lods
adc
dec
movsl
test
cmp
popa
call
rcll
mov
inc
popl
mov
push
lods
adc
sub
movsl
or
das
xchg
push
imul
pop
mov
repnz
notb
rcll
jge
inc
xor
in
jo
xorps
in
sti
push
jle
mov
ljmp
push
push
and
xchg
mov
or
xchg
andb
fsubrs
aas
pop
push
pusha
inc
in
repz
int
sbb
ja
dec
rorb
inc
or
lahf
leave
push
xchg
xchg
roll
out
cmc
mov
mov
jnp
jge
and
nop
adc
sbb
lahf
into
cmpsl
sub
mov
imul
inc
sub
cli
jmp
and
pop
inc
add
xor
dec
das
data16
cld
jbe
mov
cmpsb
dec
inc
push
lahf
inc
loop
xchg
ljmp
cli
cmp
insl
lods
es
aaa
pop
xchg
ljmp
sbb
push
push
push
int
jbe
add
and
movzwl
jne
lds
leave
fwait
and
out
rep
fs
mov
dec
lahf
mov
mov
xchg
lods
pop
xchg
lret
push
ljmp
sub
aas
ljmp
jbe
jle
push
xchg
xchg
sahf
mov
or
lahf
stos
in
ja
sub
test
sub
and
fsubrl
fcom
shll
or
inc
imul
cli
sub
sti
jo
xchg
xor
leave
inc
jnp
into
in
inc
sub
xor
rclb
sbb
scas
xchg
mov
mov
aas
push
faddl
pop
xchg
sub
xchg
mov
jno
popf
in
xchg
pusha
xchg
xor
inc
aad
and
inc
jmp
nop
xchg
cs
jge
dec
pop
bound
push
stos
mov
sub
les
nop
roll
minps
push
xchg
mov
adc
mov
cmpsb
sub
scas
mov
stos
cmp
nop
and
adc
mov
addr16
cmp
and
pop
dec
and
daa
sti
jo
fwait
aad
cmp
sbb
int3
mov
push
sbb
fadd
pop
popf
js
je
xchg
cmp
movb
inc
stc
int3
scas
sbb
ret
nop
dec
sarb
pop
inc
mov
cwtl
mov
mov
addl
mov
jge
aaa
inc
dec
cld
inc
pusha
inc
icebp
xchg
sub
lds
mov
outsb
sarb
pop
test
push
push
adc
xchg
or
stc
les
lcall
jmp
fisttps
andl
outsb
mov
inc
cld
fsts
jae
in
aam
pop
fldenv
dec
fs
inc
mov
xor
mov
ret
mov
pusha
and
les
mov
mov
and
pusha
pop
into
loopne
xor
imul
mov
jle
cmp
jne
sub
outsl
xor
orb
cli
lret
cmc
mov
mov
pop
in
lods
inc
cmp
int
shll
mov
jb
inc
jecxz
sahf
mov
nop
and
ret
jmp
xchg
push
jecxz
mov
ss
push
xchg
cmp
ffreep
mov
popa
movsl
push
aad
repz
sbb
cmc
dec
enter
and
jbe
stos
js
sbb
push
test
push
dec
popa
push
out
ljmp
cli
xchg
cmpsl
mov
mov
pop
or
xlat
rorl
or
mov
push
mov
daa
cmc
gs
mov
inc
shl
push
mov
jle
mov
mov
add
xchg
lds
popf
das
popf
shl
int
mov
in
jno
inc
jecxz
jbe
jge
sarl
xchg
mov
jmp
sbb
scas
add
stos
lods
jecxz
leave
inc
repz
pop
push
or
jge
call
push
mov
inc
movsl
xor
sahf
sbbb
pop
addr16
and
adc
cmp
lcall
enter
ret
mov
cmc
adc
gs
aad
inc
mov
sub
ret
xchg
nop
jo
fisubs
lea
sbb
add
mov
aad
push
out
dec
test
jmp
popf
sub
stos
xchg
flds
pop
mov
aaa
leave
jmp
les
dec
jg
mov
pop
jne
xor
push
adcb
push
stc
add
mov
xchg
imul
hlt
mov
dec
fstl
orl
mov
mov
cmpsl
dec
lahf
sbb
mov
cltd
pop
imul
push
popl
mov
imul
sub
xor
pop
and
or
or
ret
and
je
les
xor
push
subb
js
jg
jno
push
adc
mov
sub
xor
mov
imul
leave
xchg
aad
sub
popa
sub
pop
mov
fwait
push
mov
sub
lahf
dec
xchg
inc
dec
mov
nop
mov
jg
cmpsl
inc
push
sti
pop
aaa
xchg
aad
nop
clc
js
clc
sub
add
xchg
addr16
nop
stos
pop
cmp
adc
cmp
movsb
loopne
sub
aam
mov
sarl
or
mov
pop
cmc
jne
ret
je
cmc
addr16
cmc
jns
mov
or
nop
fs
ret
js
xchg
jo
xchg
out
jae
sub
cld
lahf
addb
adc
and
push
lcall
daa
mov
push
dec
or
inc
and
cmpsl
sbbl
dec
lcall
mov
in
pop
das
cld
jecxz
mov
out
cld
repnz
sbb
setns
pop
sbb
push
mov
xor
inc
pop
sarb
mov
mov
mov
or
mov
imul
push
sub
bnd
sub
scas
push
jle
int
imulb
push
data16
push
push
fmull
cld
cltd
test
mov
fists
out
das
jns
mov
mov
aaa
cmc
cmp
xor
imul
xchg
push
mov
shll
pinsrw
popf
and
or
daa
mov
lret
pop
inc
xchg
pop
sbb
dec
cmp
nop
xor
pop
push
xchg
dec
push
cmpsb
jns
daa
test
mov
je
movsl
stos
push
inc
pop
sub
ljmp
xchg
imulb
mov
in
mov
out
fimull
jge
jg
or
xchg
push
push
sub
rol
lock
or
pop
mov
ja
aad
mov
adcl
push
add
jae
push
adc
fisubl
sbb
js
inc
mov
push
mov
jp
jns
or
jne
ja
xchg
lock
rcll
mov
insb
inc
sub
push
push
adc
xchg
dec
repz
or
xchg
pop
push
cmp
mov
sbb
add
popf
repnz
out
fdivr
out
ss
pushf
cmpsb
mov
mov
ret
pop
sub
jle
in
ret
dec
xchg
cli
pop
jns
mov
out
mov
pop
test
pop
nop
rclb
pop
stos
push
aas
mov
add
mov
mov
sub
adc
jmp
or
mov
shl
push
mov
or
push
add
jle
ss
leave
outsl
dec
sub
loop
xchg
pop
fsubs
lahf
adc
addr16
loope
pop
dec
add
lret
cmp
adc
sub
fldenv
mov
pop
xor
xchg
push
sub
xor
lods
sbb
or
fimull
mov
or
mov
cmc
lret
imul
cltd
xor
mov
inc
and
add
adc
mov
scas
sbb
cmp
xchg
mov
mov
lcall
or
or
xchg
into
mov
jg
aad
push
inc
xchg
pop
sub
lds
lcall
jmp
or
dec
mov
push
push
sahf
push
add
cmp
inc
sahf
jle
pop
jle
jecxz
fdivs
lret
imul
repnz
bound
stos
clc
mov
sbb
mov
std
xorl
push
fldt
ja
xchg
shr
aaa
xor
dec
push
pop
sub
xchg
das
mov
inc
pop
dec
dec
xorb
stos
push
mov
pop
push
shlb
insl
push
xchg
sbb
dec
add
fnstsw
out
repnz
push
mov
fwait
sahf
jg
mov
mov
lods
rolb
mov
mov
aaa
or
hlt
inc
mov
and
add
xor
js
in
push
push
orl
sub
jns
mov
inc
and
sbb
lock
xchg
dec
xchg
enter
push
jb
lret
out
cmp
inc
test
push
imul
ja
mov
aaa
daa
xor
cmp
int
stc
das
dec
xorb
std
jge
shll
ret
orl
mov
mov
jle
push
and
add
dec
repnz
push
stos
and
pop
into
ss
jne
xor
pop
jae
dec
push
testl
mov
xlat
pop
jnp
imul
mov
adc
outsl
loope
xchg
add
cltd
test
dec
jns
push
add
mov
lret
incl
inc
aad
clc
jmp
popl
movsl
js
xchg
test
aam
xor
das
jge
jns
stos
add
inc
mov
adc
xchg
dec
jmp
in
pushf
push
daa
test
sub
sbb
xchg
aas
push
pushl
dec
cld
nop
xorl
ss
dec
lea
adcl
cmp
jmp
and
dec
outsb
xchg
xor
sbb
mov
sbb
aas
add
sub
scas
outsl
cmpsb
mov
jle
push
push
sub
int
jnp
or
stos
inc
clc
adc
out
iret
into
push
nop
lods
jne
in
fwait
lret
ss
mov
dec
rorl
cmp
or
enter
jne
movsl
sbb
add
mov
insl
dec
mov
lahf
das
or
xor
sbb
iret
jle
inc
xchg
pop
mov
sub
int3
scas
mov
psubusb
test
add
shll
jo
ljmp
outsb
sahf
adc
je
gs
into
stc
out
xchg
std
sbb
lods
lret
push
das
inc
cli
daa
and
into
cld
cmp
xorl
jne
shlb
lods
mov
bound
shll
push
lret
push
mov
decb
pop
jo
mov
mov
adc
out
movsb
lahf
fisubrs
push
out
ds
push
mov
jp
in
std
cmp
pop
ja
gs
test
mov
pop
xchg
icebp
mov
sbb
push
xor
ret
arpl
dec
jnp
jl
lahf
das
std
sub
lods
in
test
xorb
das
jge
addr16
ds
test
jo
cmp
dec
int3
mov
sub
mov
push
std
and
shl
cmpsb
xor
xchg
aad
enter
cli
sbb
jno
pop
frstor
in
sbb
dec
push
jl
add
xchg
jmp
insb
in
jmp
xchg
jg
es
idiv
fxch
inc
sbb
outsb
aad
ficoms
nop
ss
dec
jb
add
clc
xchg
mov
cld
scas
fs
dec
scas
out
out
pusha
shlb
int
ljmp
lods
aaa
repnz
inc
test
dec
cmp
and
stc
mov
fwait
mov
in
push
xor
xor
test
sarb
cmp
cmp
push
pop
ret
mov
movsl
xchg
ljmp
cmp
mov
inc
rolb
scas
aad
out
mov
aaa
test
cwtl
inc
sbb
js
lds
movsb
jnp
fistpll
jbe
fsts
sub
inc
orl
into
sub
loopne
mov
xchg
cmpsb
pop
mov
in
push
fsts
inc
jns
inc
pop
push
mov
xor
ljmp
mov
xchg
lods
and
loope
cltd
lcall
cmp
loop
adc
xor
into
cmp
fwait
aad
test
mov
mov
pop
es
add
lea
pop
jb
mov
or
sarb
xor
stos
fbstp
or
mov
jmp
int
jnp
xchg
cmp
subb
movsb
mov
sbb
push
je
ret
inc
loop
xchg
xchg
jne
das
adc
push
sub
int
and
ret
dec
xchg
pop
and
mov
icebp
popf
mov
dec
xchg
adc
xchg
xchg
cmc
aam
mov
das
lea
das
les
ljmp
push
xchg
sahf
jne
ljmp
mov
ljmp
xor
enter
xchg
ljmp
testl
hlt
xchg
aam
les
int3
popa
push
push
fcoms
movsl
call
pop
sahf
repz
xor
jae
je
ljmp
ffreep
inc
ljmp
test
mov
mov
movsl
jns
out
add
or
lods
xchg
mov
mov
adc
jge
mov
test
outsb
mov
jecxz
xchg
cmpsb
or
mov
inc
and
push
mov
pop
cmpsl
add
mov
dec
pushf
xchg
fcoml
mov
dec
aad
iret
ret
je
sahf
insb
iret
xchg
fs
mov
adc
jo
add
in
jne
jns
push
dec
test
mov
test
vcvtss2si
push
mov
ja
add
jecxz
lds
dec
aaa
sbbl
mov
xchg
je
nop
fldcw
fistpll
call
pop
das
aad
dec
jae
and
adc
xor
xchg
mov
imul
ficoms
jmp
cld
out
dec
inc
jno
push
cltd
xchg
iret
sbb
or
xchg
push
mov
inc
jae
xchg
sub
jbe,pn
fsub
mov
jnp
fsts
fadd
test
jno
mov
sarb
fsub
das
sbb
scas
pop
push
pop
jmp
pop
xor
aad
adc
pop
pop
sub
shr
ret
fisubs
sbb
bound
ret
and
mov
scas
rorl
repnz
or
or
mov
cmp
in
movq
mov
cmp
cmpsl
test
sbb
int
pusha
notl
inc
ja
push
jnp
lret
pop
jp
pop
inc
imul
mov
cmpsb
mov
leave
adc
dec
jmp
adc
mov
js
push
jl
pop
movsl
xor
nop
jmp
xorb
sbb
cmp
mov
and
aaa
ds
enter
pop
jmp
mov
jg
nop
fwait
sbb
push
shrl
cmpl
fldcw
dec
pop
xor
jl
lea
movsb
xchg
roll
push
cltd
movsl
xchg
mov
cmpsl
ja
jg
nop
sub
cltd
sub
jo
xchg
cmpsl
jbe
ss
cmpsl
xlat
push
nop
repnz
push
mov
xchg
je
jnp
dec
arpl
fucom
push
cmpsl
adc
jp
mov
jae
nop
mov
aas
ljmp
push
nop
xchg
xor
out
dec
faddl
dec
cmpsl
hlt
test
inc
aaa
dec
xor
pop
lea
out
dec
pop
push
jbe
lds
sbb
jb
inc
aas
mov
jbe
xchg
jbe
push
jmp
lret
xchg
inc
sbb
into
mov
lock
xchg
mov
inc
je
mov
stc
into
adc
push
test
lret
fs
push
scas
mov
repz
pop
repnz
call
imul
mov
out
mov
sub
push
in
jo
pop
imul
xchg
into
xor
gs
mov
gs
pop
cmpsl
rorl
jecxz
subl
mov
sahf
mov
movl
pop
es
push
cltd
cmp
add
or
ja
jnp
ret
sbb
sub
push
es
sbb
into
push
push
adc
cmpb
pop
cmpsl
stos
dec
mov
hlt
mov
push
xor
jle
into
push
dec
addr16
adc
into
or
jg
push
xor
pop
cmp
jbe
mov
push
mov
adc
into
jbe
jae
lock
mov
ret
fmull
sbb
out
pop
dec
inc
in
popl
push
icebp
adc
jl
aas
cmc
xor
aas
leave
mov
ss
ds
cmpsb
pop
adc
or
adc
jge
js
xchg
les
mov
popf
cld
jl
adc
mov
ret
push
stc
repnz
jmp
and
mov
jmp
adc
sub
push
loope
or
sbb
mov
lret
clc
jbe
fisubl
add
cli
push
mov
aaa
sbb
clc
bound
dec
shlb
fwait
jne
filds
aam
jae
xchg
cmp
jae
out
jnp
inc
int
push
or
adcb
sub
iret
out
popa
jns
mov
jbe
imul
push
mov
add
push
mov
sarb
sbb
outsb
cmp
pop
cmp
push
xor
imul
loop
push
iret
jb
aaa
cmp
lods
mov
mov
and
popa
push
mov
mov
outsb
sub
sbb
fidivrl
jl
push
xor
jae
jne
sub
mov
inc
scas
daa
imul
flds
cmp
add
mov
mov
xchg
inc
mov
cwtl
outsb
movsl
fcoms
pop
mov
pop
aas
sbb
aas
pop
dec
push
outsl
and
or
cmp
ret
std
mov
outsb
mov
xchg
js
pusha
xchg
pop
lods
outsb
cmpsl
iret
aaa
popf
mov
push
sub
pop
mov
xchg
push
mov
loopne
jb
xchg
pop
mov
out
scas
loope
sahf
and
sub
mov
faddl
pop
sahf
push
and
pop
adc
inc
int
fwait
lahf
outsl
xor
bound
dec
pop
fs
or
adc
pop
xchg
adc
push
and
call
cmpsl
pop
faddl
in
enter
jnp
fsubrl
mov
add
int
scas
mov
lds
dec
cmp
subb
adc
mov
cmp
mov
lds
outsb
std
sub
stos
mov
adc
mov
xor
jp
pop
pop
decl
ja
mov
hlt
mov
add
cmc
loopne
sahf
dec
pop
mov
mov
cwtl
arpl
ds
call
xor
scas
loopne
add
std
sub
movsb
push
scas
push
and
cmc
inc
lret
mov
shll
je
cmpl
xchg
std
imul
cli
push
jo
ret
lods
loopne
scas
scas
sbb
icebp
push
push
push
lret
lds
xchg
popa
pop
ja
je
push
out
and
stc
test
mov
xchg
inc
xchg
pop
xchg
dec
jl
ljmp
cmp
xchg
xor
popa
cmpsl
dec
jo
mov
fcmovne
shrl
js
cmp
mov
sub
jnp
cmpsb
inc
add
cmp
int
or
rcll
or
xor
xchg
dec
decl
mov
mov
fldcw
dec
into
cmp
xor
mov
xor
ss
xchg
push
inc
cltd
call
mov
mov
mov
mov
iret
mov
mov
adc
mov
mov
das
pusha
and
ljmp
mov
test
inc
shr
into
jno
sahf
xchg
push
jo
fnstenv
fstpl
pop
cmpb
jne
mov
jno
dec
shrl
neg
fidivl
fdivl
aas
out
pop
daa
sbb
xor
call
test
or
inc
aaa
jle
insl
inc
inc
aaa
frstor
in
iret
adc
xor
lods
xchg
push
dec
imul
push
shrl
lcall
mov
icebp
cmpsl
adc
mov
add
dec
jbe
add
aam
subl
mov
or
mul
mov
int
into
in
xor
sbb
xor
dec
stc
addr16
mov
in
mov
push
push
push
scas
dec
nop
add
ja
sbb
outsl
mov
push
sbb
push
adc
and
lret
out
dec
dec
scas
inc
outsl
das
mov
push
stos
jge
mov
jg
sahf
inc
addr16
mov
movsl
je
inc
out
flds
loopne
mov
lret
pop
mov
mov
mov
dec
inc
iret
pop
xchg
inc
jmp
adc
and
test
scas
pop
jmp
lods
push
mov
ret
div
and
inc
in
sub
stc
fdivl
adc
cmp
scas
inc
lahf
cmpsl
adc
mov
xchg
inc
or
cli
xchg
inc
pop
mov
cmp
pop
inc
int3
jmp
popf
lods
test
pop
or
or
lret
pop
xor
inc
or
jno
mov
xchg
mov
pop
dec
xorb
xchg
inc
fstps
cmc
sub
outsl
xor
dec
xchg
out
jne
adc
cmpsl
fsubp
push
xchg
mov
lods
adc
jnp
mov
sub
xchg
std
pop
int
add
jne
fld
ret
outsb
mov
iret
loope
stos
pop
lock
daa
in
fiaddl
mov
xchg
jg
ficoml
fisubrs
pop
jp
fcmovu
jae
test
pusha
scas
and
mov
ja
lds
test
aad
sbb
fdivrl
aam
ss
push
pusha
imul
jbe
rcl
push
imul
push
xchg
mov
sbb
cmp
negb
sub
and
inc
push
inc
cmpsb
fucomip
and
mov
cmpsb
mov
fcmovnb
and
in
je
dec
out
pop
sti
mov
mov
das
out
pop
mov
xchg
cmp
testb
xor
or
sar
lods
neg
jmp
jnp
mov
lahf
pop
adc
icebp
arpl
lcall
enter
adc
sub
add
add
pop
xchg
cs
ds
rclb
sub
mov
rorb
jle
fildll
inc
icebp
push
cltd
fiaddl
js
add
dec
pop
out
or
fbstp
pop
hlt
aas
push
inc
adc
add
mov
fisttps
out
and
xor
cmp
push
xor
cs
lahf
scas
sub
shrl
xchg
add
imul
mov
pusha
incb
sbb
cmp
pop
insl
pop
cmp
inc
adc
mov
sub
hlt
int
xor
ljmp
lcall
and
and
jno
xchg
mov
dec
mov
dec
inc
pop
push
loopne
lcall
nop
and
fwait
out
fistl
pop
dec
in
nop
pop
pop
loop
mov
mov
sub
xchg
nop
or
xchg
jg
test
and
ljmp
sbb
push
cmp
bound
outsb
jmp
je
or
lods
pop
xchg
sti
daa
ds
dec
cwtl
shrl
sbb
push
bound
fcomip
cmpsl
fldenv
xchg
sarl
mov
xor
jnp
test
fmul
xor
jns
scas
mov
aam
or
adc
sub
xor
pop
inc
cmpsb
mov
ss
xchg
hlt
xchg
dec
repnz
jno
xchg
mov
push
push
ret
mov
push
mov
mov
sub
pop
mov
jl
mov
pop
mov
xchg
sub
imul
mov
clc
mov
dec
aad
iret
pop
xchg
sahf
cmpsb
fimull
xor
add
inc
mov
mov
ja
or
jmp
mov
pusha
jno
aad
in
jbe
mov
scas
and
xor
outsb
in
dec
movsl
xor
sub
pop
in
mov
iret
cmp
icebp
pop
sbb
aaa
movsl
xor
aam
loope
test
xor
dec
inc
sub
push
xor
push
sbb
sub
sub
ss
sbb
xchg
pushf
jbe
in
inc
movl
mov
enter
jns
fsubp
xor
mov
and
rcll
push
and
jge
test
into
xor
xor
into
icebp
dec
shll
mov
mov
sub
dec
xlat
dec
ss
sahf
dec
in
pop
mov
mov
mov
mov
adcl
mov
push
mov
jnp
mov
push
dec
gs
mov
and
xchg
sub
cmpsl
shrb
pop
sbb
jmp
jnp
fisttps
in
adc
sub
lret
xchg
insl
adc
ja
jb
adc
adcl
mov
mov
sub
popf
mov
into
out
scas
xchg
or
jg
jnp
test
sahf
cmp
sub
pop
adcb
dec
sbb
aam
xchg
jno
shr
sbb
les
mov
les
outsb
dec
xchg
dec
scas
insl
jg
rcl
rorb
adc
sarl
sub
jl
xor
jge
popa
pop
fwait
mov
xor
xchg
push
into
negb
push
pop
ss
cvtps2pd
cli
push
xor
nop
mov
outsl
out
out
sbb
ja
jmp
xor
sbb
mov
fs
lods
test
test
mov
test
into
daa
xchg
fwait
mov
inc
lds
into
dec
mov
mov
cmova
mov
lds
mov
adc
mov
outsl
xchg
scas
pop
xchg
adc
mov
xchg
nop
xchg
sbb
sbb
push
notb
mov
mov
mov
xchg
outsl
push
fdivr
jle
push
cmp
pop
cmpsb
out
nop
aas
mov
cs
inc
mov
inc
pop
mov
rcrb
das
mov
pop
jo
mov
xchg
lods
mov
sti
or
clc
jle
mov
aas
aaa
xchg
jno
mov
xor
stc
sub
sbb
cmp
cmpsb
jbe
filds
paddb
roll
icebp
enter
adc
out
push
clc
mov
dec
outsl
inc
adc
and
lock
and
repnz
lods
dec
xchg
lahf
nop
ds
filds
push
inc
aad
fidivs
cmpsl
jo
repz
nop
pop
and
scas
repz
nop
add
xchg
mov
dec
nop
test
push
mov
inc
fldenv
lret
test
sub
mov
fmuls
push
xchg
mov
jmp
sbb
outsl
clc
lret
pop
mov
add
pushf
rolb
adc
ja
mov
addb
int
into
pop
xor
lret
aam
inc
adc
jecxz
dec
mov
nop
jp
push
mov
fisttps
inc
out
add
mov
loopne
testb
cmc
outsl
and
push
jle
inc
pop
fldenv
loope
jge
xorb
dec
add
fists
leave
enter
leave
imulb
push
movsb
mov
adc
aas
outsl
mul
popf
stos
loope
xchg
inc
ja
ja
mov
xchg
ror
lods
mov
ja
lods
xchg
xchg
cmpsl
mov
nop
xchg
pop
push
mov
inc
jb
rolb
adc
xor
cmpsl
push
andb
in
fildll
xlat
xchg
loopne
adc
adc
int
inc
fcompl
push
or
nop
aas
fdivrs
call
addb
ss
push
hlt
sub
negb
inc
mov
sbb
movsb
aaa
fwait
push
mov
ja
imul
xor
loopne
stos
sub
jecxz
xor
mov
bound
mov
call
pop
adcb
faddl
test
push
sahf
pop
leave
xchg
fdivs
mov
xchg
xchg
shlb
mov
cmp
cmpsl
arpl
cmpsb
cmp
xchg
dec
in
dec
push
stos
jnp
rcrl
mov
inc
push
xor
mov
int
push
out
fists
cmpsb
mov
shl
or
nop
outsb
pop
int3
mov
push
xchg
test
sbb
sbb
jge
sti
mov
hlt
push
or
add
add
xor
dec
inc
push
xchg
fists
sub
cwtl
adc
push
adcb
lea
ret
sub
inc
jl
fdivl
push
in
daa
cltd
jl
push
or
add
cmp
in
arpl
sub
or
xor
scas
jle
jb
sti
sub
cmp
mov
jecxz
push
aam
inc
sbb
sub
outsb
ss
push
lea
cltd
rorl
sbb
enter
std
mov
inc
cld
inc
iret
xchg
mov
std
aas
test
pusha
inc
mov
jecxz
es
les
cmp
sub
js
dec
in
into
imul
push
fcoms
mov
jmp
mov
cmc
pop
sbb
ljmp
sub
xor
mov
aad
enter
mov
mov
imulb
xlat
into
adc
fcoml
sub
test
cltd
xchg
pop
and
or
outsb
out
lea
dec
inc
aad
repz
xor
inc
jo
sahf
inc
lods
cmp
inc
lret
in
sub
sarl
gs
pop
pop
inc
daa
mov
xor
sbb
pop
push
jg
idivb
or
movsb
jnp
addr16
mov
cmpsb
ja
outsl
pop
daa
mov
cmp
mov
aad
mov
dec
xchg
and
mov
xchg
test
out
push
stos
shl
test
fcoml
cmp
cltd
cmpsl
mov
inc
xchg
add
mov
lods
or
sbb
push
mov
lds
sbb
lods
mov
nop
xchg
shrb
fisttpl
nop
out
out
mov
or
xchg
das
imulb
cmpsl
mov
mov
mov
mov
adc
testb
addr16
iret
mov
and
dec
cmp
test
mov
xchg
or
cmp
push
jle
sub
les
jbe
cmc
das
pushf
lea
es
jle
aaa
int
test
mov
adc
daa
xor
xchg
push
sbb
mov
and
or
nop
lret
in
adcl
js
sub
pop
faddl
mov
cmp
js
out
mov
fsubrs
sub
adc
movsb
lea
dec
dec
out
lret
mov
mov
cmc
aaa
sub
push
cmc
repnz
loope
jge
or
or
xchg
mov
in
pushf
rclb
stos
andb
shrb
outsl
data16
add
stc
mov
mov
push
jnp
lock
xchg
xor
add
xor
lock
cltd
mov
dec
shll
or
lods
mov
push
sub
cltd
adc
jnp
xor
or
in
xchg
cli
adc
sbb
clc
xchg
jnp
adc
dec
mov
out
cmp
xchg
adc
ret
scas
nop
rorl
push
nop
and
jmp
sahf
out
sahf
dec
push
lods
orb
push
das
xchg
into
fadd
push
movsl
sub
dec
xchg
cltd
xor
int
jecxz
inc
push
inc
stos
in
jb
jnp
sbb
ror
push
movsl
mov
into
ret
lock
aam
adc
mov
sbb
rolb
scas
mov
mov
ror
mov
in
mov
pop
cmp
add
lock
mov
push
and
mov
aad
mov
push
or
push
das
daa
or
in
ss
jge
add
inc
push
jge
mov
pop
mov
dec
sbb
adc
nop
cmp
lds
shrb
ret
sub
test
js
loope
repnz
jl
or
out
fmuls
cmc
mov
test
pop
shr
add
mov
mov
loope
lds
sbb
bndstx
mov
mov
or
dec
sbbl
test
jl
aad
stos
mov
shll
ja
sub
dec
jle
out
ljmp
inc
or
dec
js
rclb
and
mov
fisttpll
hlt
nop
adc
fimull
enter
inc
idivb
mov
sbbb
sub
sbb
mov
sahf
xchg
adc
mov
dec
fiadds
fstpt
adc
repz
cmp
xchg
fsts
dec
in
xor
jno
push
mov
out
je
cmpsl
push
das
jecxz
clc
inc
pop
mov
outsl
jne
lea
jl
sbb
xchg
cmp
mov
mov
mov
out
adc
mov
push
dec
mov
jno
inc
dec
push
dec
addr16
add
xlat
fwait
mov
lea
push
push
and
notl
jo
fwait
imul
jnp
popa
scas
and
xchg
dec
xlat
lea
cmp
imul
inc
or
xchg
add
mov
cwtl
sbb
movb
leave
lahf
xchg
stos
and
ret
mov
into
test
xchg
cmp
imull
pop
and
nop
xchg
push
into
and
or
nop
lods
repz
cmpb
nop
jbe
cmp
test
lret
scas
sub
or
cli
push
pushf
inc
ds
jo
inc
loop
jp
xlat
mov
out
enter
outsl
lcall
ret
cmp
outsb
pop
ret
xchg
mov
xchg
pop
mov
sub
pop
mov
jb
cwtl
sahf
aad
mov
es
xchg
insb
dec
jl
and
hlt
int
xchg
fld
outsb
mov
cs
push
add
adc
sbb
mov
inc
push
xor
mov
cmp
scas
call
fisubs
scas
jb
lret
mov
fwait
push
pop
sbb
or
cwtl
sbb
in
stc
fsub
xchg
sub
dec
mov
ret
je
cmc
mov
nop
lret
xor
stos
sub
jmp
ds
and
mov
push
jmp
pop
test
and
push
jge
xchg
fbld
xchg
or
int
jnp
dec
jmp
daa
stos
push
inc
aas
cmp
cwtl
sub
daa
repz
movsl
scas
or
cmp
dec
icebp
sti
ret
jg
pop
andnps
je
mov
inc
enter
in
stos
dec
std
xor
sbb
push
mov
jne
add
pop
sbbb
dec
mov
cs
push
gs
psubsw
adc
sahf
push
shrl
stos
popa
scas
jp
mov
clc
adc
inc
nop
xchg
or
xchg
fwait
mov
add
sub
inc
adc
sub
frstor
add
outsl
testb
aam
adc
addr16
dec
sti
add
std
push
xchg
into
int3
sbb
sbb
mov
pop
pop
stos
mov
fidivs
or
lds
sub
sub
cltd
jle
mov
or
push
or
aam
mov
xor
nop
mov
out
jmp
call
pop
xor
cmpsl
xchg
dec
dec
sbb
jae
pop
leave
sbb
lahf
lret
sbb
shr
leave
cwtl
lods
filds
scas
lods
jecxz
pop
repnz
push
cmp
dec
jge
dec
mov
and
in
lods
pop
mov
js
fcoml
daa
out
jno
fnstenv
loopne
dec
ret
cmp
jl
push
sub
mov
test
mov
fs
out
aas
outsl
xor
movsl
push
orb
cmp
int
push
or
push
negl
jp
gs
jp
sbb
jnp
push
pop
xor
testb
push
xor
dec
xchg
cmpsl
inc
gs
jmp
shl
jae
sbb
call
pop
push
mov
bound
push
pop
pop
mov
inc
ficoms
rol
ss
inc
push
leave
jae
movsl
pop
into
notb
push
ret
aam
push
aaa
jbe
rcl
subb
lds
movsl
xor
gs
mov
addr16
dec
xchg
sub
sbb
cmp
add
shr
or
into
inc
dec
add
and
or
mov
and
adc
jae
add
sub
popa
je
fistps
aaa
push
movsb
std
loope
cld
cmpsb
sahf
xor
dec
inc
add
adc
dec
shlb
jg
ljmp
and
test
dec
sbb
jg
jg,pn
ja
arpl
mov
lret
add
cmpsl
cmpb
mov
push
ljmp
dec
mov
cmp
out
fidivs
gs
fcmove
cmp
aam
cmpsl
inc
push
daa
repz
js
xchg
sbb
mov
push
popa
out
mov
icebp
test
cs
pop
scas
aaa
xchg
adc
rcrb
xor
mov
push
sbb
inc
lcall
sub
mov
bound
or
ja
jo
mov
faddl
and
lods
test
xchg
or
sti
bound
stos
fdivs
push
popf
sbb
out
incb
and
icebp
rclb
roll
dec
sbb
fs
scas
pop
js
xor
xchg
mov
push
mov
pop
mov
aaa
jo
sbb
push
insl
in
mov
mov
pop
xchg
iret
clc
test
and
and
and
sbb
sub
mov
and
mov
jae
dec
cmp
push
mov
stos
jle
xchg
mov
mov
int3
xor
mov
aaa
and
mov
gs
jnp
xor
cmp
idivb
xor
adc
mov
or
in
pusha
out
movsl
sbb
mov
sub
popa
js
jg
inc
ljmp
loopne
repz
mov
mov
shlb
aaa
iret
nop
mov
inc
pop
shr
push
mov
dec
pop
gs
sbb
pop
mov
mov
and
adc
loope
mov
data16
mov
data16
fsubs
sbb
pusha
inc
sbb
cmp
inc
add
sub
rcrl
inc
add
push
xorb
std
scas
iret
pop
ds
out
test
je
jg
inc
in
lret
pusha
out
leave
or
xchg
int
jno
pusha
push
or
aaa
sbb
out
sub
mov
popa
dec
fdivl
inc
int
out
and
mov
or
movsb
mov
fdivrl
nop
cmp
in
into
in
mov
sbb
add
nop
sbb
mov
jge
dec
hlt
push
push
push
ljmp
xor
push
imul
paddusw
xchg
aaa
mov
jmp
inc
mov
aad
hlt
out
cmc
stos
out
mov
sub
cmp
lret
rcr
mov
dec
mov
movsb
aaa
nop
enter
lds
xorps
daa
sbb
test
into
sbb
int
dec
mov
mov
xor
add
mov
push
or
sbb
jmp
shlb
test
sbb
jns
movsl
in
lret
sbb
orb
fistps
sahf
mov
dec
push
inc
push
js
dec
fsubl
mov
pusha
mov
mov
or
pusha
cmp
sub
inc
push
sahf
sub
aad
nop
inc
xchg
data16
adcl
pop
xchg
lret
push
jbe
mov
mov
int3
sahf
pop
xchg
mov
mov
aam
dec
loop
jbe
leave
in
idiv
adc
mov
xor
xchg
cmc
nop
mov
mov
inc
lods
inc
iret
sub
enter
lret
sbb
mov
jbe
xchg
fsubrl
fisttps
je
cld
nop
mov
jns
or
daa
shr
in
nop
ret
test
sbb
mov
outsl
cmpsl
add
push
cmp
inc
sub
nop
mov
insl
das
rcrl
dec
int3
push
cltd
adc
in
out
pushf
in
incb
push
outsb
es
inc
sbb
sub
push
dec
aad
xchg
jnp
and
scas
clc
pop
mov
and
dec
jbe
push
or
mov
xor
inc
sub
lock
iret
pop
mov
push
push
das
pusha
dec
mov
loop
lea
mov
das
inc
nop
lds
fmulp
mov
insb
cmp
inc
aad
push
lds
nop
int3
xchg
popf
jnp
push
mov
jae
jne
in
pop
pop
jecxz
lcall
adc
pop
std
decl
jbe
sub
mov
xchg
hlt
xor
pop
test
add
in
push
mov
cmpsl
cmp
mov
fs
sub
jle
dec
pop
stos
dec
xchg
jnp
jb
lcall
dec
cmp
popa
aaa
lock
lret
mov
aaa
and
cmc
loope
adc
leave
dec
test
insb
or
mov
inc
data16
push
fidivrs
lret
pop
sbb
push
movsl
and
xor
aaa
sub
cltd
push
out
rorb
xor
mov
sub
push
testb
push
xchg
mov
aaa
test
cmpsb
xchg
and
scas
mov
scas
mov
xchg
int3
xlat
fsubrs
jmp
xlat
and
mov
sbb
lret
mov
mov
je
fdiv
sub
pop
mov
push
pop
add
jmp
mov
jne
and
xchg
adc
sub
mov
loopne
cmpsl
xchg
adc
xchg
jno
paddw
mov
aas
pushl
xchg
pop
call
into
mov
outsl
and
adc
push
scas
push
dec
in
aaa
xlat
mov
mov
adc
scas
inc
and
dec
mov
out
lahf
mov
mov
xor
icebp
add
loopne
sub
xchg
push
push
xchg
xchg
insb
test
jb
out
ret
out
mulb
out
call
stos
mov
ja
mov
mov
popf
sti
xor
mov
xor
int
nop
push
sub
jnp
pop
adcl
cltd
fwait
ret
jno
xor
cld
xor
xor
jne
rcll
cld
push
push
cmp
dec
je
xchg
sbb
mov
ret
hlt
stos
mov
adc
repz
scas
push
mov
xor
iret
add
aaa
sub
or
ret
jbe
pusha
pushf
enter
into
insb
and
sbb
xor
mov
and
sub
fildl
fsubrl
gs
cmp
imul
dec
ret
pop
and
mov
lods
daa
mov
adc
sbb
mov
js
loop
lods
aaa
and
adc
adc
xor
mov
cmp
dec
leave
fcompl
xchg
iret
sahf
xor
frstor
mov
pop
or
add
mov
popa
xchg
call
mov
jmp
popa
icebp
test
ja
sub
xlat
dec
or
out
xor
in
adc
inc
pop
jo
lds
sbb
mov
dec
sub
ja
lods
lock
arpl
xor
ret
hlt
pop
aam
into
push
ret
into
lods
lahf
test
outsl
adc
xchg
jle
mov
stos
lock
stos
add
out
xchg
mov
jg
imul
add
mov
gs
adc
pop
push
pop
rcl
nop
jo
push
pusha
inc
adc
sarl
dec
aam
push
pop
cs
pop
mov
add
les
pop
les
mov
jnp
in
imul
pop
faddl
jne
out
pushf
addr16
sti
insl
adc
adc
cwtl
fld
push
sub
call
xor
adc
and
inc
sub
mov
lahf
sbbl
nop
insl
and
add
flds
mov
xchg
cmp
sub
push
push
insb
or
stos
test
shrb
jo
inc
test
jbe
mov
cmp
push
aaa
mov
cmp
jb
mov
push
sub
mov
jle
push
lahf
mov
fdiv
mov
sbb
add
shrb
push
xchg
jns
out
pop
jmp
aad
sub
cld
mov
push
ret
ss
mov
push
mov
pop
stos
icebp
dec
adc
pop
fidivrl
lret
inc
inc
mov
mov
xchg
inc
inc
jge
add
jg
mov
stos
sbb
test
add
sub
repnz
movsb
add
and
pop
mov
fldl
xchg
lods
jns
movsb
mov
pop
jge
inc
loope
jns
and
gs
mov
scas
sub
pop
xor
mov
das
addr16
jae
test
inc
nop
rclb
adc
jmp
sbb
sub
pop
xchg
cmc
scas
xchg
imul
movsl
xor
jle
xchg
sub
out
shlb
inc
xchg
mov
sub
jmp
push
arpl
add
lret
push
mov
mov
lcall
sbb
pop
popf
mov
test
pop
pop
mov
in
daa
rclb
and
xchg
repnz
test
mov
repnz
jmp
arpl
push
call
xor
mov
push
lea
nop
aaa
inc
mov
cmp
mov
lret
add
mov
and
cmp
pop
jp
test
test
xor
fsts
lahf
jecxz
lds
testl
cltd
and
mov
jno
push
adc
xor
xchg
xlat
jbe
nop
mov
gs
mov
pop
shlb
pop
das
inc
jmp
movb
jge
je
jecxz
into
into
pop
test
test
push
fisttpl
in
sahf
lret
push
ja
cld
mov
scas
addb
mov
or
mov
dec
aaa
push
mov
lret
xchg
das
aad
repz
mov
ror
repnz
dec
roll
stos
in
test
in
cli
xchg
arpl
mov
repz
xchg
xchg
jecxz
iret
int
jae
out
pop
cmpsb
add
cmpl
leave
js
add
js
movsl
mov
add
subl
sbb
lcall
adc
adc
push
xchg
mov
dec
aaa
cmp
xorl
sti
das
xsaveopt
nop
xchg
std
jnp
dec
cltd
pop
inc
mov
or
inc
shll
stc
lock
imul
mov
adc
xor
pop
pop
jnp
aas
mov
jl
mov
mov
insb
push
ret
aaa
enter
xchg
lret
mov
pop
mov
dec
inc
aas
mov
xchg
call
repz
add
je
fidivrl
gs
jecxz
cli
cmp
push
fildll
or
in
pop
xor
pop
xchg
dec
in
cltd
leave
test
push
sbb
push
xorps
xor
stc
call
push
filds
mov
push
and
decb
mov
in
fdivrl
mov
inc
inc
fidivs
lret
mov
xchg
xlat
xchg
adc
inc
ljmp
sub
mov
leave
push
inc
fwait
hlt
pop
or
loopne
mov
xchg
jg
jmp
mov
xchg
mov
mov
mov
jle
in
addr16
loop
hlt
inc
js
sbb
ret
bound
js
pop
clc
xor
add
inc
jo
cmpsb
aaa
mov
sahf
in
pop
ja
iret
push
jo
mov
sbb
mov
jnp
mov
or
mov
stos
mov
dec
mov
dec
push
xchg
movsl
push
adc
shrl
es
pop
lds
jno
cmp
fbld
or
dec
push
lea
xor
jae
aaa
ljmp
mov
xchg
jge
mov
das
jge
scas
outsb
dec
dec
inc
mov
mov
sub
dec
mov
dec
cmp
mov
sub
xchg
out
mov
sub
xor
jg
out
mov
mov
rolb
mov
mov
add
mov
mov
mov
pop
push
mov
xor
pop
xchg
pop
cmp
scas
push
mov
push
mov
daa
scas
xor
aas
int
sub
push
jnp
mov
cmp
or
and
add
pop
mov
fildll
mov
or
outsl
push
dec
loopne
je
inc
jge
daa
pop
fwait
test
mov
xchg
dec
fbld
outsb
xchg
sahf
dec
cmp
or
das
cmpsl
mov
nop
add
push
sub
push
dec
aaa
shll
jge
or
mov
sar
push
aas
jne
shrl
inc
adc
ja
pop
dec
inc
jge
jbe
xchg
inc
nop
test
jae
and
push
xchg
push
inc
pop
ret
xchg
or
ret
push
jp
lahf
pop
in
mov
push
aad
ljmp
nop
cmp
or
and
mov
inc
pop
mov
fmulp
lret
mov
push
push
out
push
jb
roll
dec
fsubl
jmp
push
rorl
fbld
push
int3
jmp
clc
out
lods
iret
rolb
xchg
inc
dec
mov
pop
jns
nop
mov
stc
test
push
sbb
dec
xchg
movsl
add
sahf
mov
into
mov
sbb
mov
sub
xor
mov
ret
sbb
fimull
mov
add
xchg
xor
sbb
xchg
fwait
xchg
cmc
lods
xor
mov
lret
push
jne
mov
mov
xor
loop
mov
loop
mov
test
xlat
in
data16
int
shrl
push
test
loope
push
mov
jmp
mov
inc
mov
cmc
mov
push
push
xor
add
out
jae
sub
pop
gs
sbb
test
pop
sbb
cld
sbb
pop
mov
int3
std
adc
mov
iret
pop
lock
cmpl
jecxz
sub
imul
push
mov
xchg
add
sub
push
mov
shrl
pop
push
and
out
rcr
jne
repz
je
lret
out
ljmp
std
push
enter
sarl
xor
ret
push
dec
jnp
sbb
dec
lds
cmp
lcall
loop
test
xchg
mov
dec
and
sub
ficompl
add
clc
dec
dec
mov
push
xchg
xchg
imul
imul
cltd
lret
shl
iret
or
and
inc
ror
rorl
adc
mov
rcll
push
ljmp
scas
and
pushf
clc
or
pop
dec
test
scas
cmp
cmp
es
iret
xchg
mov
nop
jbe
pop
inc
lea
adc
jne
and
idiv
jns
mov
lds
add
nop
mov
fdivs
push
sub
dec
xchg
sti
imul
dec
jle
lods
jge
xor
or
fisttpl
rcll
stos
sub
les
dec
xchg
cli
ja
nop
inc
mov
cmp
aam
sub
xchg
jbe
nop
jmp
in
xchg
xchg
jne
and
fcompl
inc
pop
ret
imul
xor
iret
mov
cmp
xlat
idivb
std
pop
push
xor
sbb
imul
mov
nop
imul
inc
data16
out
xchg
pop
mov
stos
xorb
and
lahf
pop
mov
cmpsl
cmp
dec
push
gs
repz
sub
imul
sbb
add
out
shrb
inc
or
adc
ljmp
std
sahf
pop
jecxz
cltd
inc
enter
in
xlat
dec
add
mov
xor
pop
sub
push
jle
outsb
shlb
sub
inc
enter
push
mov
or
cltd
scas
test
sbb
ficompl
xchg
subl
cmp
xor
ss
filds
mov
aas
pop
pop
mov
push
js
add
push
rclb
mov
jnp
sub
dec
test
xchg
mov
sub
lcall
xor
adc
cld
pop
sahf
hlt
add
sbb
xchg
dec
cmp
dec
inc
stos
pop
test
inc
loopne
call
test
and
in
addr16
add
xchg
test
in
sub
inc
cmp
cmpsl
lock
push
lret
test
clc
daa
sub
orb
adc
mov
adc
sub
fsubr
cmp
lods
into
push
and
sbb
push
xchg
sub
data16
xor
sbb
fbstp
inc
push
inc
cmp
dec
jp
pop
inc
dec
add
add
push
sbb
mov
jb
jne
aas
js
adc
mov
pop
test
mov
mov
mov
mov
fadd
ret
mov
jp
scas
lahf
push
inc
inc
and
push
jns
push
jno
add
push
pop
mov
add
add
mov
add
mov
test
and
push
loope
jns
push
mov
mov
nop
cmpb
mov
jecxz
int
xchg
push
xchg
in
test
mov
int3
sahf
pop
iret
popf
push
push
mov
insl
in
mov
adc
popa
mov
fimuls
dec
out
lret
movsl
ja
sbb
inc
add
xor
addr16
test
test
inc
inc
pop
jmp
data16
out
out
xor
aas
nop
mov
ja
push
cltd
mov
push
ds
mov
pushl
addr16
lret
leave
push
mov
into
push
rorb
or
rcll
mov
sbb
xchg
push
mov
ss
jecxz
insb
int
daa
mov
mov
stc
inc
jge
mov
inc
or
fistps
lods
ja
xchg
push
scas
mov
daa
arpl
adc
push
mov
mov
out
pop
sbb
push
sbb
pop
or
das
insl
nop
or
inc
mov
cmp
fcomps
stos
mov
fisubrs
and
cmc
adc
cmp
add
mov
jo
arpl
adc
shl
pop
inc
push
xor
ja
push
push
cmpsb
push
push
fildll
js
mov
mov
in
in
xor
adc
push
nop
cltd
ret
push
call
xor
xor
cld
cltd
aad
test
adc
sub
stos
push
push
mov
mov
enter
cmpsl
mov
imul
mov
int3
jmp
jae
clc
popf
lds
pop
xchg
push
add
cltd
lea
mov
rcrb
push
outsl
int3
fs
dec
mov
dec
lods
and
fwait
mov
int3
pop
lret
add
jl
test
insl
aad
adc
movsb
repnz
xchg
jle
push
mov
xor
xchg
lret
jmp
subb
xor
daa
adcb
iret
les
testb
test
fimuls
orb
mov
test
pop
xor
jecxz
ljmp
std
sub
in
mov
lret
adc
cmpsl
ja
mov
lods
push
adc
xor
int
jno
js
cmpsl
idivb
rcll
cwtl
xor
mov
cmp
dec
mov
mov
pop
push
sub
ss
popl
sbb
xchg
decb
movsb
in
repnz
cwtl
xchg
mov
jnp
mov
push
push
shll
adc
insl
test
les
lock
in
cmp
shl
ljmp
add
adc
xor
jp
mov
push
add
sarl
test
sahf
jbe
aad
mov
aas
push
emms
cmp
cli
insb
xor
int3
cltd
scas
rcl
and
xchg
mov
inc
jecxz
les
cli
dec
cmpl
cmp
faddl
sbb
outsl
push
ret
dec
sbb
orb
and
or
bound
push
divl
test
icebp
mov
xchg
fldt
icebp
scas
in
sub
sub
add
xchg
cmpsl
dec
and
int3
enter
xorl
cld
inc
daa
mov
ret
xchg
inc
xchg
ja
nop
dec
repz
mov
or
ja
idivl
push
push
or
hlt
sbb
adcl
adc
mov
aad
adc
push
mov
cmp
scas
mov
xchg
cmpl
xchg
lret
inc
js
dec
pop
adc
lret
jo
ljmp
lods
jnp
mov
aas
aad
dec
pop
out
sahf
or
sbb
sub
shrb
arpl
sahf
mov
dec
adc
fmuls
inc
inc
mov
jecxz
testl
rorb
imul
jne
iret
pop
lds
sub
xchg
jnp
add
pop
sbb
call
inc
jmp
aad
adc
mov
hlt
xor
cli
adc
cmp
pop
fcmovne
lods
push
popa
inc
std
cltd
mov
mov
js
mov
adc
cwtl
xchg
jle
je
mov
xchg
xchg
sbb
das
mov
fistl
fsubrl
sbb
xchg
ret
js
or
push
sub
inc
mov
jg
inc
cmpsl
cs
aas
aad
stos
rcrb
mov
lret
jns
dec
and
mov
mov
mov
xor
or
test
outsb
je
dec
es
add
iret
dec
movsb
mov
shrl
sbb
lret
mov
dec
xchg
pushl
sbb
lret
lret
popa
leave
inc
das
push
push
rcl
inc
pop
xchg
dec
shll
subb
lret
push
insb
sub
loope
xchg
mov
cli
fs
xor
lcall
movb
dec
push
dec
cmpsl
xor
cmpsl
repz
in
pop
sahf
in
jecxz
adc
jmp
or
jnp
mov
repz
xchg
popf
enter
add
mov
adc
lahf
mov
test
mov
loope
dec
cwtl
adc
test
jmp
std
imul
inc
aaa
popf
mov
fcmove
jg
stos
test
in
enter
dec
scas
and
or
xchg
mov
sub
cmp
jg
cld
mov
das
mov
or
out
scas
or
mov
aaa
lahf
std
xchg
push
mov
test
adc
xchg
cltd
shll
inc
sub
mov
jbe
push
lahf
dec
movsl
push
dec
push
mov
out
xchg
pop
ja
int
inc
movl
popf
rcrl
or
jle
fwait
fwait
dec
ret
out
adc
mov
cs
cmp
shrb
jecxz
xlat
fistpl
lock
idiv
fistps
outsl
rorl
les
mov
xchg
xchg
push
xchg
xlat
jnp
or
sarl
mov
arpl
in
adc
mov
enter
sub
js
mov
ret
cli
test
call
imul
js
mov
xchg
xor
push
gs
xchg
movsl
cmpsl
push
lods
aad
push
mov
lods
mov
insb
push
mov
out
xchg
add
mov
add
xchg
adc
push
shrb
in
ss
sarb
int3
in
or
stos
out
daa
into
aad
or
or
jne
test
jmp
xor
notb
aad
mov
pop
pop
shrb
fs
dec
pop
jmp
jmp
into
xchg
aad
nop
or
jns
dec
push
dec
pop
add
ret
arpl
ja
xchg
adc
pop
nop
sub
and
outsl
and
out
xchg
jae
imul
xchg
shl
hlt
sub
jae
nop
fwait
mov
setne
mov
inc
jnp
test
jbe,pn
jo
jle
mov
aad
movsl
int
popf
rorl
pop
xorl
mov
lods
xor
int
nop
jns
cmc
cltd
inc
adc
jge
fstl
pop
xor
outsb
enter
xchg
xchg
nop
jge
mov
xor
mov
pop
rorl
add
aam
xchg
outsl
adc
leave
ret
jp
jg
and
call
sub
pop
mov
push
inc
push
repz
mov
in
jg
sbb
inc
xchg
aam
inc
daa
cld
js
mov
dec
push
and
xchg
mov
aam
push
js
flds
rorb
pop
mov
sub
cli
lret
out
add
andb
inc
mov
mov
stos
out
movsb
push
outsb
pop
mov
roll
sub
xor
sbbl
jecxz
loop
popa
shl
movsl
sub
aad
jnp
xor
and
cmp
aas
jnp
jg
xchg
jge
adc
xchg
es
push
xchg
dec
sbb
adc
or
out
dec
adc
scas
roll
js
cmc
aad
rcr
scas
sub
js
and
out
cli
outsb
loope
into
push
add
mov
shl
jle
int3
inc
hlt
and
sahf
aad
aam
jge
fsts
xchg
sbbl
pmullw
ja
mov
mov
arpl
fisttps
pop
sub
clc
xchg
hlt
xor
inc
into
xchg
sbb
shll
sahf
aas
hlt
lret
cwtl
dec
in
aad
pop
push
jecxz
fcomps
jecxz
push
sysenter
xchg
gs
sub
loop
outsb
push
out
mov
adc
xchg
aas
push
or
push
iret
jp
insb
xorb
repz
aad
sar
jnp
mov
iret
inc
xor
aam
popl
dec
ficoms
lret
shll
xchg
daa
ss
test
ljmp
mov
mov
jno
xchg
cs
xchg
mov
scas
mov
test
insb
testb
insb
fdivrs
movsb
lock
mov
jnp
xor
xchg
aaa
or
into
dec
andl
mov
out
mov
pushf
dec
je
fsub
pop
stos
pushf
push
and
stos
mov
mov
sbb
inc
aad
mov
or
and
ss
fcoml
mov
jo
loopne
enter
xchg
mov
ss
repz
xchg
fucom
pop
sahf
test
shrl
sbbb
into
ficompl
jg
xchg
fadds
cmp
mov
out
dec
ret
lret
push
pop
subb
nop
aas
cwtl
fs
fwait
and
cmc
xchg
sbb
nop
and
or
push
sbb
aaa
lods
data16
nop
push
inc
cmpsl
clc
mov
dec
sub
adc
loop
std
xchg
lcall
mov
xchg
in
xchg
sbb
mov
sub
push
cmp
mov
mov
stos
sahf
testl
mov
push
aas
cld
repz
sti
xlat
mov
adc
rcrb
rorl
lret
sub
pmaddwd
mov
lock
lret
pusha
xor
pop
and
and
fidivs
shlb
aad
cmp
mov
inc
roll
rorl
mov
push
jae
repz
adc
outsb
pusha
cmc
aad
dec
mov
mov
cmp
sahf
push
dec
sub
int
fdivrs
sub
int3
cmpsl
mov
js
fnsave
add
add
adc
roll
adc
mov
inc
fildll
xchg
push
cld
je
ja
shl
lcall
xor
push
aas
xchg
mov
xor
cmpsb
addr16
cmp
xchg
sarl
jmp
push
push
pop
stos
mov
cmp
jno
scas
mov
mov
add
loop
pop
xchg
xchg
sbb
dec
scas
movsb
xor
imul
push
cs
andb
dec
aaa
jne
or
call
jo
push
shl
pop
std
scas
jae
xchg
jmp
jnp
push
inc
aas
mov
xchg
add
gs
jp
mov
fadds
in
in
sahf
arpl
jmp
nop
outsl
pop
dec
sarb
and
fsts
mov
pop
sub
pop
jmp
sbb
cltd
fs
aam
ja
jecxz
std
js
cltd
lahf
nop
push
push
mov
xchg
into
and
les
and
sbb
xorb
scas
xchg
push
stos
sub
insl
test
sub
jb
outsl
cmp
repnz
dec
pop
and
mov
std
fisttps
mov
nop
rolb
iret
push
push
and
in
and
lea
lock
or
subl
movsl
sub
xor
mov
mov
scas
pop
mov
jnp
fmuls
push
mov
push
scas
jle
sub
mov
adc
mov
jnp
mov
imul
mov
mov
iret
sub
neg
push
je
cmp
xchg
loope
nop
cmp
sub
lock
ljmp
mov
sub
or
and
ja
aaa
mov
aad
das
aaa
mov
pop
and
outsb
imul
aam
inc
test
pop
loop
xor
cmp
je
ds
fcoml
ss
js
mov
sti
jle
fwait
xchg
notl
scas
jge
mov
xchg
mov
add
stc
inc
mov
xchg
push
jne
leave
sbb
inc
inc
jp
push
jp
pop
stos
pop
rorl
in
pop
adc
subl
cld
lds
fstpt
in
cmp
xchg
push
and
push
rcl
dec
jbe
idivb
in
out
jo
mov
ret
scas
inc
notb
ljmp
es
fadd
or
rcll
movsl
dec
rol
jae
adc
jge
push
test
xchg
jl
aad
mov
pop
push
scas
test
icebp
sub
sbb
stos
sbbb
sbb
xor
pop
scas
int
fistl
cmpsl
adc
fdivrs
mov
xchg
jl
adc
divb
js
mov
add
mov
mov
cs
or
push
popa
xchg
adc
fdivs
das
xchg
add
inc
jecxz
or
push
dec
push
addl
out
sub
sub
loope
cltd
in
jle
cmp
and
mov
ret
push
xchg
js
ja
and
mov
push
xchg
jecxz
lea
aas
pusha
jae
in
mov
adc
pop
jmp
data16
inc
rcll
cmpsl
cmc
lret
out
fistl
int
push
inc
pop
dec
cmc
dec
out
sbb
mov
lcall
data16
mov
mov
or
xchg
rolb
clc
push
xor
mov
lds
ja
in
popf
fcompl
ss
cld
push
daa
test
out
jmp
mov
mov
pop
mov
pop
sti
inc
xchg
mov
xor
jb
push
das
jne
fnstsw
xorl
xchg
into
icebp
pop
inc
js
dec
push
ss
bound
ficompl
push
pop
fimull
xchg
adc
push
inc
lcall
add
imul
push
outsb
dec
nop
scas
lods
fistl
rcr
push
rclb
mov
gs
or
cmp
cmp
shrb
mov
test
mov
iret
nop
jg
cmp
movsl
pushf
lock
xchg
push
xor
mov
or
mov
inc
push
inc
jg
jg
rcrl
pop
nop
jp
std
iret
sarb
inc
or
dec
sbb
dec
xchg
aad
lret
jo
subl
dec
xchg
push
aam
mov
enter
cwtl
push
add
pop
repnz
xchg
xor
mov
popf
ja
pop
mov
cmp
xor
pop
mov
xchg
push
mov
xchg
xchg
inc
xchg
dec
xor
inc
dec
xchg
mov
sbb
nop
loop
xor
iret
sbb
gs
gs
dec
ret
rorl
dec
xor
jbe
push
in
inc
xchg
push
cmc
inc
xchg
je
sahf
mov
pop
es
jbe
xchg
sbb
aas
inc
insb
aaa
mov
inc
mov
mov
inc
pop
mov
inc
dec
mov
inc
fidivs
xchg
es
xchg
daa
or
in
xchg
jbe
aas
xchg
cld
push
mov
in
scas
add
mov
addb
jg
aad
cwtl
push
es
mov
iret
lods
dec
not
lret
dec
mov
sub
test
adc
test
aad
add
shlb
jp
aad
inc
aaa
or
and
lea
stos
stos
xlat
mov
rcrl
jle
lds
jle
add
xchg
es
clc
lahf
xorb
daa
call
pop
jp
scas
loopne
adc
or
test
lcall
setbe
subl
movsb
inc
jp
add
nop
push
xchg
subl
mov
das
add
add
adc
sbb
movsl
add
ljmp
sbb
dec
ds
jl
sbb
mov
inc
cltd
fcoml
xchg
xchg
push
inc
addl
ss
sub
in
mov
jp
fnstsw
pop
sub
mov
lahf
and
inc
jae
aaa
push
nop
ss
cmp
mov
inc
cmp
jns
icebp
pop
addr16
test
adc
cmp
or
lcall
fcmovnb
jno
mov
into
sbb
test
pop
dec
int3
sub
inc
and
rorb
push
mov
cld
jp
inc
std
shrl
adc
not
adc
lret
repz
cltd
scas
popf
testb
fbld
ja
ret
aaa
xchg
lods
loope
sahf
jno
loop
fs
cmp
push
ja
lret
jecxz
and
mov
xorb
out
sbb
mov
in
test
push
mov
jns
rorl
lea
xchg
gs
mov
hlt
pop
dec
add
imul
mulb
fsubr
jnp
in
jmp
or
dec
rclb
mov
scas
jo
mov
notb
lret
in
mov
pop
sub
adc
fisttpl
mov
mov
std
sub
pop
mov
aad
movsl
mov
inc
pushf
fwait
imul
push
jmp
les
push
scas
nop
sub
out
push
mov
xchg
xchg
cmpsl
insl
ja
js
clc
mov
push
lahf
popf
push
negl
add
pop
subb
and
stos
lret
xchg
shl
lret
add
xor
sub
imul
cs
js
cmpsb
dec
cmp
dec
adc
push
ja
jle
mov
imulb
adc
jle
xor
lock
arpl
sub
inc
imul
popa
dec
push
inc
push
jmp
or
jmp
inc
pop
aas
jp
sbb
imul
push
sub
cmp
jne
pop
nop
rcrl
or
xchg
adc
fwait
cmc
stos
mov
mov
pusha
dec
xchg
jae
lret
pop
mov
dec
dec
inc
in
add
pop
stos
mov
lret
dec
ret
push
repnz
ja
cmpsb
pop
pop
popf
pop
sbb
push
popf
rclb
imul
sub
cltd
cmpsl
dec
or
ja
mov
dec
mov
out
push
ss
pop
inc
xor
inc
push
ret
jle
sbb
aaa
mov
das
jecxz
cmp
adc
sub
xor
mov
jbe
adc
mov
sarl
sub
adc
dec
mov
xchg
ja
cmp
dec
xchg
sbb
fsts
gs
test
enter
mov
jbe
lret
push
xchg
dec
sub
sti
lret
mov
cmpsl
xor
js
cmpb
sbb
dec
stos
xchg
aaa
jp
xlat
push
fcompl
cmp
jo
add
jmp
xchg
mov
xchg
adc
xorl
ja
cmpsl
jne
aaa
aad
adc
outsb
nop
lret
imul
vmwrite
mulb
jbe
repz
push
fimull
inc
ds
cmc
push
add
sub
ja
xor
xchg
inc
push
add
mov
aaa
pop
sub
dec
xchg
and
sbb
nop
inc
xor
enter
mov
jnp
mov
mov
pop
inc
and
outsb
jnp
sbb
scas
mov
loopne
roll
jmp
push
stos
lock
popa
call
fcoml
push
nop
cmpsl
xchg
jg
cld
in
out
movsb
rcr
adc
push
pop
xor
hlt
inc
mov
gs
dec
pop
movsl
xchg
jp
sub
and
movsl
push
cmpsb
out
aad
mov
push
shl
in
xor
daa
call
loope
mov
add
lcall
mov
nop
sar
out
mov
std
fsubl
cmp
jmp
lea
mov
sub
arpl
inc
pop
ret
xor
or
jmp
mov
in
mov
adc
or
fistps
call
xor
jl
push
in
cmp
loope
jbe
or
or
and
shrb
pushf
addr16
xchg
push
adc
arpl
adc
dec
popf
fstl
xor
pop
sbb
insb
daa
ret
dec
and
add
int
xor
cmc
jle
jo
dec
aad
movsl
mov
or
push
test
mov
inc
cmp
jno
fdivr
aas
out
and
mov
call
push
cmpsb
xchg
adc
jmp
in
mov
inc
sbb
xchg
sbb
and
jmp
clc
and
and
pop
adc
xchg
xchg
fwait
mov
inc
sti
fidivrs
sar
or
adc
mov
sub
jns
out
adc
mov
scas
xor
mov
cmpsb
inc
fwait
mov
cmp
in
push
mov
mov
in
cmp
xchg
aad
dec
jmp
push
jge
nop
nop
lea
ret
cld
pop
mov
mov
jne
adc
pop
int3
push
sbb
aam
xchg
in
push
out
xchg
test
jne
mov
adc
or
cmp
sub
cli
in
xchg
xchg
rcl
jecxz
mov
data16
inc
mov
incl
adc
cmpsb
push
lcall
pusha
jge
in
mov
cmp
jp
scas
inc
xor
std
pushf
out
mov
rcrl
mov
into
add
jmp
xor
daa
fwait
lock
mov
sbb
gs
jb
test
inc
mov
push
loopne
int
jecxz
int
mov
ss
std
push
int
xchg
sbb
dec
in
addr16
push
add
or
mov
adc
cmp
sbb
push
adc
inc
mov
outsb
mov
adc
cs
push
push
add
xchg
pop
sbb
inc
inc
aas
test
inc
inc
cmp
test
lea
cltd
aad
pop
pusha
scas
sbb
inc
in
movsl
aaa
xchg
iret
inc
dec
cli
ljmp
mov
jns
fbld
icebp
cmc
add
movsl
mov
int
into
sbb
sub
test
inc
stc
into
fildll
arpl
xchg
push
jne
nop
dec
or
lret
fs
xchg
mov
mov
adc
mov
dec
ret
adc
mov
mov
adc
pusha
and
outsl
or
js
shld
xor
vmovntps
sbb
mov
push
iret
nop
pop
mov
sbb
mov
sti
and
test
push
dec
nop
ljmp
xchg
int
data16
addr16
cmp
mov
arpl
cld
in
sbb
aam
popa
cld
xchg
loope
push
outsb
scas
pop
or
insl
push
jmp
and
leave
lods
repz
ds
mov
je
add
inc
nop
ret
rcll
pop
mov
idiv
popa
xchg
cmp
xor
cld
push
lds
pop
sub
lds
js
out
gs
popa
sbb
lea
or
push
cmp
mov
lods
sub
pop
and
int3
nop
xchg
rcrb
out
cmp
imulb
dec
sbb
or
les
mov
imul
inc
fcoml
inc
mov
jmp
nop
daa
lcall
mov
into
aad
fidivl
mov
jo
jg,pn
fisttpl
in
or
pand
add
add
shr
vprotq
mov
stos
jbe
jecxz
adc
lahf
fstl
jge
cmp
into
sahf
jmp
jge
push
inc
fucomi
mov
add
insl
outsl
adc
lahf
movsb
mov
add
jecxz,pt
aad
aad
xchg
movsl
add
or
shrl
in
add
insl
push
popa
je
mov
dec
cs
scas
sarl
adc
cmp
loopne
push
cmp
mov
neg
mov
rclb
mov
jg
sbb
lock
inc
outsb
arpl
pop
mov
pop
cmc
cmp
push
mov
or
sahf
js
mov
or
call
test
lcall
cmp
mov
jle
sbb
leave
repz
sbb
and
adc
jmp
je
sub
xor
leave
xchg
jg
and
and
ljmp
inc
lret
cmc
hlt
aad
and
jnp
mulb
mov
stc
mull
adc
xchg
mov
xor
aad
mov
arpl
push
rolb
push
adc
lahf
and
jae
shrb
xor
mov
pop
daa
jae
mov
and
fstpt
push
sarb
mov
add
lret
mov
push
iret
cld
notl
add
hlt
add
pop
sub
push
mov
xchg
insl
adc
nop
test
scas
mov
sub
inc
push
mov
cmp
push
xor
mov
nop
loope
add
hlt
pop
adcl
fisttpl
aas
out
into
ret
jmp
aas
jbe
lock
int3
mov
mov
mov
push
fstpl
pop
push
aam
push
xor
shll
mov
jmp
xchg
filds
sub
cld
leave
repnz
or
cld
mov
lahf
lods
ds
xchg
push
mov
inc
lods
cmpsb
or
lods
jge
dec
xor
sbb
divb
aad
push
pop
dec
imul
and
shrl
xor
scas
xchg
sbb
popa
jbe,pn
stos
je
push
adc
stos
and
popf
adc
ret
mov
xor
or
sub
sub
aad
mov
dec
vpsrad
mov
scas
xor
add
inc
scas
daa
int
daa
push
mov
inc
mov
cld
into
pop
nop
mov
sub
cmp
push
inc
pop
inc
mov
xchg
mov
sti
popa
gs
xor
scas
in
lds
clc
aam
xor
xchg
push
adc
xchg
inc
test
lret
stos
cmpsb
mov
lods
int
dec
inc
fs
adc
or
jae
scas
adc
inc
pop
cmpsl
mov
std
xchg
scas
stos
outsl
in
mov
aaa
lea
adc
push
repnz
and
test
and
dec
mov
cmpb
test
mov
divb
stc
xchg
icebp
inc
dec
mov
std
imul
in
cmp
jae
loope
dec
fidivrl
lods
popa
push
std
jge
jl
dec
and
sub
cmp
mov
sarb
mov
das
cmpsl
cli
mov
or
mov
mov
mov
shll
call
sub
xchg
push
fisubrs
fidivrl
dec
nop
jae
xor
test
adc
out
jns
jle
insb
sub
std
lahf
xor
adc
pop
loope
inc
mov
nop
jmp
mov
pop
stos
jne
sbb
mov
or
ret
lret
dec
ret
icebp
and
fstps
inc
and
movsb
cmpb
pop
xchg
mov
test
inc
dec
push
sub
cmp
mov
xchg
out
ret
mov
aas
das
lahf
mov
mov
add
jecxz
int3
pop
mov
jg
outsl
mov
cli
sbb
adc
repz
addr16
sub
iret
mov
pop
stos
push
jge
movsl
lods
mov
nop
pusha
pop
and
jg
adc
sbb
aam
sub
aad
jbe
stos
sub
dec
icebp
xchg
inc
xchg
mov
xor
mov
mov
pop
cmp
cmp
data16
xchg
xor
push
inc
add
mov
xchg
sbb
je
inc
in
push
cmp
out
push
hlt
fwait
lret
jo
iret
or
mov
mov
add
jge
testb
jae
pop
std
stc
inc
int
push
pop
imul
push
testl
ja
popl
inc
jle
mov
lahf
cmpsb
dec
push
in
call
xchg
pop
mov
push
mov
jns
cwtl
inc
sbb
fmull
ficoms
insb
jg
addr16
pop
sti
int
push
nop
and
rorb
inc
jno
into
mov
mov
mov
call
jnp
cmp
aad
aad
add
sub
addb
inc
sub
inc
mov
and
leave
ret
cmp
arpl
push
cmc
inc
inc
ljmp
rcrb
fdivrl
and
fnstenv
xor
add
sbb
fsub
sbbb
xchg
inc
imul
outsb
insl
gs
daa
shr
mov
cmp
les
nop
in
mov
or
andl
int3
test
xor
adc
cltd
dec
and
cltd
orl
test
daa
nop
ret
or
jecxz
dec
add
xchg
dec
jnp
iret
jmp
pusha
nop
dec
push
xchg
fcmovnu
push
adc
iret
rcl
ret
icebp
sbb
mov
cmp
nop
rol
mov
cwtl
push
xchg
imul
adc
pop
xor
mov
nop
xchg
or
jg
es
cmpsl
gs
nop
ss
adc
subb
push
xchg
das
push
inc
sub
aam
xor
testl
sub
dec
div
mov
xchg
hlt
cmp
cmp
xor
push
xor
cld
fs
inc
pop
jl
or
sub
fs
cmp
daa
mov
and
dec
nop
push
xchg
lods
pop
into
out
cltd
hlt
inc
jmp
out
hlt
outsb
mov
mov
call
xchg
or
js
insl
mov
aam
cmp
cld
ds
and
mov
into
pop
mov
mov
int3
xor
xchg
fcompl
jb
dec
repz
fldt
xor
dec
mov
mov
rcrb
in
cld
pop
into
sub
jle
jle
xchg
adc
cwtl
je
les
push
sub
push
mov
jge
push
loopne
scas
or
jmp
jge
cmp
xchg
ja
int3
mov
or
pop
pop
dec
xchg
mov
xor
ss
xor
nop
aaa
sbb
cld
addr16
call
adc
sub
sub
pop
inc
or
sbb
or
scas
jecxz
xchg
xor
xchg
mov
fcmovnb
aam
insb
and
add
lret
add
jb
sbb
sahf
mulb
mov
aaa
test
fcoml
fildll
mov
popf
adc
mov
sti
scas
push
adc
mov
std
orl
in
sub
dec
cmc
lea
dec
cmp
inc
fsubr
cmp
daa
xor
outsl
andl
adc
mov
loope
jge
xchg
fs
push
push
pop
out
push
pop
test
add
inc
push
dec
push
cmpsb
les
xchg
arpl
sahf
push
in
scas
mov
fisubrl
sub
xchg
xor
xchg
jl
mov
pop
ss
sbb
aam
hlt
in
stc
mov
and
mov
fsts
gs
call
ror
ds
inc
pop
xor
mov
pop
adc
sbb
lds
add
cmpb
in
insb
push
sbb
sbb
nop
xor
sub
and
mov
shl
inc
je
lret
push
sbb
push
mov
gs
lea
lret
int
and
or
and
inc
mov
pop
inc
adc
and
in
dec
mov
dec
inc
shlb
fwait
pop
aam
roll
stos
mov
mov
std
test
mov
int3
nop
xor
push
mov
xor
pop
mov
rclb
xor
shll
push
pop
gs
xor
icebp
inc
pop
mov
ror
jae
mov
jbe
ljmp
ss
mov
lea
sbb
stos
nop
xchg
or
push
mov
push
lcall
out
test
jo
ja
nop
pusha
dec
test
inc
mov
mov
lock
sub
sbb
repz
dec
pop
in
jo
jo
jne
in
popa
aam
fs
push
mov
push
test
adc
sub
mov
loop
andl
mov
jge
dec
xchg
sbb
xchg
mov
repz
jle
xor
gs
fnstenv
arpl
sahf
testl
and
scas
mov
in
xor
mov
adc
rolb
push
xchg
loop
dec
sbb
push
jge
nop
aas
ljmp
mov
or
jecxz
cltd
add
int
ss
jne
test
rcr
adc
ret
mov
lret
jg
lret
jmp
xor
test
mov
sbb
notl
mov
and
pop
enter
jmp
xchg
pop
addr16
fs
pop
mov
dec
data16
out
inc
jg
aas
mov
jns
jnp
fiaddl
mov
sbb
pop
shr
adc
ljmp
shrb
cwtl
inc
movsb
pop
out
pop
xor
pop
call
jbe
xor
out
xor
xchg
jo
jl
cli
pushf
adc
and
mul
loope
cmp
inc
and
lods
repnz
pop
cwtl
in
movsb
rclb
or
fcoml
mov
inc
push
sbb
fldt
stos
xor
fisttpll
ds
test
mov
nop
fidivrs
xchg
jp
and
or
in
notb
sub
mov
xor
mov
mov
test
arpl
stos
scas
mov
jne
jo
xchg
cmc
ret
xchg
in
xchg
dec
sbb
lods
pop
fidivs
sub
mov
movl
test
popa
clc
xchg
cwtl
aas
xor
sub
mov
cmp
mov
repz
outsl
jecxz
std
jns
sbb
cmpsl
movsl
pop
or
clc
push
adc
inc
fs
add
push
lret
filds
jo
mov
dec
adc
and
stos
fbld
data16
or
pop
cltd
push
fwait
xchg
pop
ljmp
jl
push
into
ja
jnp
fidivl
out
xchg
loope
lea
dec
push
ret
shl
jp
jae
jl
sbb
xchg
movsl
pusha
inc
cltd
shl
movsb
rolb
imul
mov
inc
xor
outsl
mov
push
and
rcrl
cmp
aad
repnz
xchg
fdiv
xor
ret
or
inc
cmc
aad
sbb
pop
or
xor
je
pop
xor
mov
rcrl
out
insb
push
das
fidivl
xor
scas
dec
pop
je
lods
dec
les
push
imul
inc
into
sub
mov
push
in
out
push
dec
ds
mov
lcall
add
cltd
add
cli
jbe
fists
pop
fadd
xor
xchg
dec
adc
or
pop
or
fstps
push
aad
sbb
fcoms
lahf
or
cmc
scas
out
movsb
aad
mull
xchg
mov
rcll
xor
mov
int3
mov
adc
mov
push
and
or
push
mov
add
ds
pop
sub
xor
hlt
sub
add
incb
inc
add
sti
les
push
jno
pop
mov
and
mov
aad
dec
sub
int3
sub
dec
adc
js
stc
adc
mov
mov
jle
fldcw
xor
jae
push
or
sub
rorb
xchg
mov
data16
test
les
sub
stos
iret
testl
mov
push
mov
xor
cmp
rcpps
into
jbe
xchg
xchg
aad
mov
fsubrl
xchg
addr16
pop
inc
push
jae
gs
push
movsb
push
sbb
add
lock
lret
rol
dec
shr
pop
mov
mov
fcoml
movsl
xchg
sub
xchg
scas
mov
lret
shr
inc
popf
stc
sub
mov
jbe
scas
sub
psllq
mov
push
push
mov
fmuls
mov
adc
xor
jmp
dec
imul
add
fbstp
out
ds
mov
shr
rcrb
sub
in
int
js
push
xchg
xchg
add
es
fcmovnbe
push
imul
int
andl
rcll
std
mov
lcall
push
mov
sti
sub
add
xor
push
mov
or
xchg
ret
scas
addl
ret
out
test
int3
mov
int3
aaa
xchg
jge
test
adc
dec
ja
cmove
push
cmpsb
test
xchg
mov
or
adc
sysenter
lahf
test
in
scas
or
mov
xchg
push
mov
testl
orb
inc
pop
in
clc
mov
ret
mov
je
push
enter
push
imull
adc
mov
mov
popa
dec
neg
jp
jle
mov
gs
ret
out
adc
fwait
ja
xchg
mov
and
not
loope
mov
or
mov
or
jnp
or
shrl
push
ja
pop
dec
inc
inc
fwait
mov
cltd
cwtl
lods
xchg
lahf
cmp
sbb
jge
ja
test
js
pop
push
or
and
jg
jnp
nop
daa
test
jle
sbb
fs
in
stos
nop
or
xchg
sub
pop
add
notb
daa
das
nop
mov
into
push
xchg
cwtl
inc
mov
dec
popf
sbb
add
push
mov
sbb
push
scas
xchg
in
test
jo
ja
sub
xor
adc
repnz
push
dec
movntq
out
rol
add
push
or
ret
gs
adc
ret
sub
loop
mov
pushf
jge
out
xor
push
shlb
les
sti
and
xchg
lods
pop
mov
cmc
push
subl
mov
repz
lret
clc
push
mov
cmp
fldenv
ret
arpl
mov
fsubr
pop
xor
subl
scas
push
xchg
andl
push
jbe
aam
scas
pop
out
sub
inc
push
xor
jp
dec
test
mov
cmp
je
sbb
push
xor
fcmovnb
ss
xchg
repnz
mov
mov
imul
mov
dec
int3
stos
in
test
stc
push
push
fadd
jb
sbb
dec
sub
mov
xorl
ja
push
test
push
lahf
roll
mov
mov
mov
lods
sbb
pop
sub
shll
sub
inc
sbb
push
xchg
xchg
mov
decl
je
mov
and
cli
scas
xchg
xor
mov
pop
test
push
dec
jecxz
jmp
in
xchg
test
xor
xor
adcl
mov
pop
gs
xor
ja
aad
ficoms
adc
mov
fcmove
stc
adc
xchg
mov
push
inc
inc
push
ja
lret
je
adc
jge
pop
inc
jo
les
scas
popw
xor
mov
push
push
xor
pop
sub
jge
aad
in
lahf
rorb
dec
sub
wrmsr
fdivp
mov
dec
stos
aas
test
in
int
lahf
test
imul
mov
xor
shlb
mov
stc
lahf
fstpt
jnp
ljmp
mov
sub
cmpsl
push
and
aad
insb
or
cmpsl
sbb
cmp
mov
lahf
roll
mov
aas
jecxz
jne
mov
sub
mov
dec
push
xchg
sub
mov
aaa
xor
dec
dec
addr16
pop
decb
sub
cmpsl
pop
push
cmp
lock
in
inc
xchg
sbb
arpl
sahf
mov
stos
adc
flds
xor
jb
adc
into
xor
out
inc
cmp
aaa
mov
nop
clc
pushf
std
inc
xchg
add
adcl
mov
sub
or
mov
outsl
jle
mov
push
ficomps
cli
push
dec
lds
and
sti
cs
xchg
std
rcrl
add
push
clc
and
and
sub
push
dec
cs
and
mov
dec
enter
jg
xchg
out
pop
divl
push
in
addr16
cmp
sbb
dec
push
dec
fs
lcall
push
imulb
stos
push
jge
cmp
cmp
aad
js
mov
mov
scas
sahf
loope
mov
mov
arpl
push
iret
fisubrs
fsubs
dec
xchg
and
jge
and
lret
popa
jp
jnp
repnz
pop
inc
das
fcoms
jmp
add
and
les
je
jecxz
std
push
mov
lea
mov
aad
filds
inc
pop
pop
lret
dec
into
xchg
mov
aad
and
shl
xor
cmp
nop
movsl
pop
jmp
xchg
dec
mov
cmp
push
fcmovnbe
loope
xor
jb
imul
xchg
dec
mov
xor
xchg
or
sbb
into
xchg
and
fcmovnbe
inc
lea
pop
test
mov
out
dec
cmpsl
nop
repnz
or
mov
jbe
push
sbb
in
adc
fadd
and
loopne
mov
lods
mov
sbb
out
repz
cmp
mov
lahf
and
push
out
xchg
adc
adc
mov
test
lret
jmp
jmp
add
lods
xchg
mov
jne
imul
inc
jbe
xor
hlt
aam
mov
das
nop
bnd
jbe
sub
dec
into
scas
cmp
jo
adc
dec
inc
pop
movb
cld
bound
std
pusha
sub
in
add
mov
sub
jnp
test
imul
xchg
xchg
inc
das
adc
mov
stos
stc
xor
add
inc
out
hlt
mov
mov
and
out
shlb
sub
inc
pop
gs
pop
push
jb
cmp
jp
pop
add
fcomi
in
leave
out
inc
xor
shlb
aaa
and
inc
dec
pusha
adc
outsl
and
stos
xchg
imul
xor
ljmp
cli
rcl
ficoml
cmp
out
or
xor
nop
jg
lahf
jge
sub
ss
xor
mov
add
push
sub
mov
fidivl
std
mov
mov
sbb
mov
sub
cwtl
adc
test
push
push
ds
push
lcall
xchg
cmp
mov
mov
mov
lret
lret
push
test
js
adc
and
loopne
lods
cmp
dec
adc
mov
scas
sbbl
mov
push
sti
cmp
lds
test
pop
mov
cld
daa
addr16
xchg
movsb
ja
lret
sarb
test
mov
cld
rcl
lods
int
add
xlat
xor
xchg
into
loope
int
jle,pn
hlt
mov
mov
cmp
xor
mov
adc
xchg
dec
fcmovne
mov
or
aad
shll
gs
pushf
push
jle
mov
out
jg
nop
push
popf
mov
inc
mov
sub
test
and
imul
repnz
lods
cs
std
call
movsl
js
aaa
iret
jmp
sbb
mov
stc
mov
mov
std
inc
jo
fs
add
cld
xchg
scas
js
mov
mov
cs
bound
arpl
je
loop
push
addl
mov
and
xor
adc
adc
sbb
nop
cs
xor
sub
cmpl
add
or
movsb
and
push
push
rcr
cli
dec
sub
shrb
fsubrp
sub
inc
je
imul
xchg
xor
push
nop
roll
mov
and
lret
movsb
iret
std
and
pop
mov
add
and
mov
xchg
in
aam
dec
cmp
aas
push
scas
loope
rolb
dec
aad
cmp
xlat
push
xor
mov
pop
loopne
and
rcrb
pmullw
cmp
dec
xor
lcall
fcoms
push
int
mov
mov
push
mov
xchg
test
sti
test
inc
ss
aam
imul
aam
inc
aad
push
icebp
ss
out
mov
jne
sub
cmpsl
inc
lods
jb
into
arpl
inc
mov
nop
push
add
ljmp
nop
in
loope
push
addr16
cmpsb
push
xor
xor
icebp
mov
pop
scas
nop
inc
mov
xchg
xor
push
xchg
push
push
add
xchg
cmpsl
nop
push
lcall
mov
jg
xchg
mov
cmp
xchg
sub
cmc
cmp
nop
test
faddp
popf
popa
or
in
popf
xchg
bound
rcll
adc
lret
mov
rcll
jge
leave
inc
mov
add
sub
mov
xor
push
nop
sub
mov
xchg
mulb
mull
adc
adc
popl
sbb
pop
dec
mov
mov
aaa
lret
add
rcrb
scas
fwait
xor
inc
pop
cmp
stc
gs
imulb
scas
in
jl
mull
pop
nop
sub
inc
jno
xor
stos
adc
and
jnp
out
loop
mov
ss
das
in
ret
jge
ljmp
xchg
mov
xchg
mov
jbe
outsl
mov
and
in
loopne
jecxz
in
movl
cmp
xorl
push
mov
mov
xchg
sbb
xchg
cmpsl
push
jecxz
xor
imul
sub
iret
shlb
xchg
outsl
pop
insl
test
mov
mov
cmp
pop
fwait
sbb
pop
or
stos
mov
jle
mov
je
in
push
xchg
faddl
sub
push
sbb
sbb
xchg
mov
mov
xchg
jp
std
xchg
js
leave
jns
jmp
lds
mov
mov
xor
aas
xor
in
mov
mov
mov
leave
jl
ret
fsubl
in
mov
sti
push
jmp
sub
push
dec
mov
mov
fsubs
sti
xor
mov
test
icebp
mov
and
stos
push
adc
push
aam
popf
jno
pop
subl
mov
pop
cmpsb
and
sbb
xchg
sub
mov
cld
cmpsb
int
mov
push
adc
repnz
fisttps
imul
into
or
shrl
or
or
fidivrs
inc
test
movl
out
pop
movsb
push
or
xchg
mov
leave
seto
jns
cltd
fldt
fldt
pop
cmp
fbstp
gs
pusha
sub
sub
lods
xchg
test
push
jb
jge
mov
add
cmpsb
imul
mov
xor
xchg
outsl
and
xchg
nop
stos
mov
adc
sbb
xchg
xchg
popf
ljmp
xor
mov
fwait
dec
xor
fwait
dec
adc
lds
les
sub
cmp
ror
rol
ljmp
jmp
int
jne
aad
js
dec
xchg
sahf
inc
les
je
aad
shll
dec
inc
aas
xor
ss
fiadds
mov
cmc
and
dec
push
dec
insl
repz
jmp
inc
xchg
adc
in
hlt
aam
les
int
iret
jecxz
repz
fwait
daa
xchg
fwait
into
mov
ret
cli
inc
jmp
ret
lret
jecxz
sub
mov
fisttpll
add
addr16
pop
xchg
jecxz
mov
ja
dec
xchg
sbb
dec
sbb
cmp
pop
push
jecxz
jmp
rcll
pop
mov
movsb
stc
pusha
in
adc
shlb
jns
das
notb
xor
iret
push
adc
mov
xchg
sbb
cmp
inc
cs
and
fstl
rol
xchg
std
push
mov
inc
arpl
mov
push
cli
je
inc
push
jmp
mov
out
and
xchg
adc
ret
imul
bound
mov
decb
dec
sahf
ret
inc
inc
and
dec
jne
ret
jg
fsubl
xchg
lds
clc
loope
or
inc
jle
pop
cmp
jbe
shrl
flds
out
divl
gs
mov
xchg
sub
arpl
inc
fnstcw
nop
pop
jnp
cmpb
mov
mov
scas
or
subb
leave
xchg
fildll
mov
push
jg
mov
lcall
xchg
imul
jb
ror
popf
mov
mov
out
test
pop
roll
jle
jae
in
lods
inc
push
inc
stos
sub
mov
mov
xchg
pusha
push
mov
movsb
es
andl
push
add
rorb
adc
push
mov
call
mov
push
shrl
pop
addr16
mov
jle
test
xchg
loopne
cltd
mov
std
int3
xor
and
sbb
pop
imul
insb
negl
clc
adc
aad
in
jb
mov
sbb
mov
shl
rcll
and
pop
push
push
push
and
leave
out
scas
mov
add
das
lahf
lock
and
xor
ss
int
xor
jae
or
iret
xchg
gs
fsubrp
pop
mov
mov
push
jno
push
dec
adc
iret
js
push
mov
test
scas
jge
sub
sarl
ja
outsl
popf
mov
push
adc
repz
mov
iret
mov
or
xchg
mov
jne
push
jns
mov
jno
sub
stos
mov
adc
and
sbb
imul
frstor
dec
stc
sub
mov
push
xchg
jg
fists
push
pop
sbb
mov
jne
push
xchg
mov
mov
clc
sbb
add
cs
dec
ret
das
xchg
xor
xor
sub
cmp
adc
mov
jnp
arpl
sarb
xchg
xchg
jmp
aaa
cmp
inc
adc
add
adc
cmp
aad
pop
out
aad
sbb
enter
mov
jno
pop
mov
pop
xchg
mov
jnp
ss
ss
xor
jmp
adc
fcomip
or
dec
push
mov
lock
les
inc
imul
jp
sub
mov
sbb
xchg
insb
jmp
mov
inc
cmp
scas
into
leave
shrb
xchg
add
inc
mov
in
aaa
push
mov
xchg
pop
sub
aam
cmp
sbb
into
fstps
lahf
pop
or
out
lahf
scas
push
test
ret
mov
shll
ds
fcoml
xor
jno
in
insb
loopne
out
inc
stc
ja
aaa
movsb
and
sub
and
xchg
cmp
gs
add
adc
sahf
mov
dec
mov
int
call
lcall
mov
dec
orl
or
scas
fbstp
pop
jle
xchg
into
push
pop
cltd
aad
mov
push
cli
inc
aad
test
ror
bound
push
rorb
daa
jle
sub
add
mov
mov
sub
or
insb
mov
mov
es
mov
add
fadd
leave
cmp
mov
stc
push
mov
je
adc
lds
xchg
jle
add
mov
mov
inc
xor
fdivrl
movsb
popf
xor
push
jle
xchg
jbe
ss
cmpsl
ja
lods
jbe
scas
ret
push
inc
dec
icebp
ds
and
jo
ret
out
scas
arpl
lods
jo
ss
movsl
xchg
jns
inc
sarb
nop
repz
sub
fsubrl
clc
bound
icebp
nop
mov
push
stos
clc
cwtl
stos
jge
pop
cld
mov
push
int3
push
loopne
sub
sbb
mov
sbb
dec
into
bound
out
icebp
ror
or
orb
xchg
jmp
nop
push
lret
jle
xchg
adc
call
cmc
and
aad
gs
sbb
repz
xchg
push
sbb
scas
fistps
xchg
sbb
mov
lcall
xchg
into
nop
repz
jae
in
sbb
inc
jl
or
imul
add
jge
aaa
mov
dec
push
ret
iret
test
add
test
nop
push
sub
je
jecxz
inc
adc
lea
arpl
jle
sti
jmp
shl
iret
add
push
fisttpl
inc
xchg
addr16
sahf
jne
aad
fadds
test
mov
dec
fwait
aaa
arpl
outsb
add
push
inc
lods
jle
out
aas
fcmovnu
xchg
cmc
rorl
nop
test
fsts
aaa
mov
iret
mov
or
jle
idivb
lcall
xor
jbe
dec
in
jge
das
add
test
testb
xchg
movsb
jne
cmpsl
sub
lea
in
push
mov
cmpsl
mov
cmc
mov
test
mov
scas
call
mov
pop
mov
outsb
cs
stos
fnstcw
and
f2xm1
gs
adc
or
sub
stos
jle
fwait
xchg
fnstcw
xchg
sub
xor
or
fbstp
dec
ljmp
nop
jle
fsubl
lods
mov
out
jne
mov
cmp
lods
sub
pop
ljmp
lea
hlt
sbb
xchg
shll
xor
and
scas
jnp
fists
mov
xchg
push
addr16
adc
push
sahf
int
mov
ret
adcb
cmp
je
pop
test
pop
sbb
fmuls
add
xchg
rclb
ja
lods
sbb
lods
mov
popf
in
test
inc
or
push
sarl
ljmp
sub
in
pop
jne
lods
xchg
mov
insb
ja
ja
sbb
idivl
add
push
ja
cld
ficomps
sub
bound
mov
nop
sarb
fwait
push
addr16
push
test
jecxz
shll
xchg
lds
inc
fidivs
js
mov
daa
cmp
jg
js
inc
daa
sub
pop
xchg
out
mov
adc
push
jmp
xor
js
scas
mov
jnp
or
add
jge
jb
jne
fildll
nop
inc
pop
and
sbb
scas
call
test
cmp
inc
push
movb
out
sub
dec
shll
or
lret
movl
aad
mov
rolb
inc
sub
icebp
adc
lds
adc
push
add
sub
js
idivb
call
jbe
push
sbb
sbb
test
jecxz
jge
or
xchg
cmp
orb
repnz
xchg
icebp
cmp
mov
sub
out
xchg
in
nop
sub
inc
fs
fstps
jnp
xchg
and
scas
fidivs
add
inc
cmp
or
and
outsb
jnp
add
xor
rcll
and
inc
nop
dec
xor
pop
mov
ret
xchg
ljmp
mov
sub
dec
test
je
test
lods
shll
in
movsl
xor
loopne
movsl
push
push
xor
and
inc
mov
lods
test
cmp
push
push
scas
inc
mov
nop
sub
dec
out
inc
daa
cmp
sbb
bound
out
mov
out
mov
xrelease
sbbb
xchg
sbb
or
sub
ja
iret
rorl
mov
lret
sahf
jo
dec
fldl
mov
cmc
pop
imul
xchg
mov
fistl
stc
or
xchg
xchg
pop
adc
sub
mov
nop
fdiv
mov
js
sbb
jno
sub
or
mov
addl
aaa
adc
or
xchg
xchg
push
pop
xor
je
aad
mov
out
aad
jl
xor
sbbl
and
add
testl
je
pop
int
mov
sbb
lods
outsl
stos
lahf
jle
mov
add
sub
inc
xor
mov
icebp
dec
xchg
fcompl
pop
cmp
scas
pop
insl
mov
aam
aaa
xchg
cltd
cmp
inc
loop
xchg
sbb
and
jmp
xchg
sub
or
roll
mul
sahf
lret
xchg
xchg
stos
xor
leave
mov
dec
lods
insb
pop
pop
in
mov
jbe
cmp
nop
in
cmpsb
in
lahf
sbb
xchg
pop
mov
gs
sub
adc
ret
mov
xor
mov
int
and
mov
xchg
lock
inc
sbb
jmp
jae
in
fidivrs
or
xor
cli
data16
fs
xchg
cmp
ret
inc
aad
nop
inc
fdivr
xor
cmp
dec
xchg
pop
pop
add
or
xchg
loopne
lahf
pop
pop
mov
cli
push
cmp
xchg
bound
xor
daa
pop
mov
das
pop
or
pop
xchg
inc
fsts
dec
lds
adc
std
push
lret
and
xor
daa
loop
inc
push
in
fisttpl
sbb
xchg
sub
mov
movsb
mov
pop
mov
test
js
add
pop
jo
sahf
in
in
dec
xor
icebp
mov
fwait
mov
ja
or
out
inc
nop
jmp
inc
and
mov
rcrl
jb
dec
mov
in
scas
and
loopne
add
ljmp
ljmp
adc
push
jmp
inc
pop
lods
into
je
mov
sub
mov
xchg
pop
jg
fadd
cmp
and
mov
mov
cltd
pop
sub
out
jecxz
pmaxsw
xchg
movsl
dec
cmp
gs
mov
mov
fwait
out
or
xor
scas
out
sbbb
pop
adc
aam
cld
cmp
cs
ffreep
out
xchg
mov
leave
adcl
loope
ret
add
sbb
andl
cmpsb
xchg
fmull
jo
jns
mov
jl
clc
adc
faddl
adc
xchg
xor
popl
mov
mov
pusha
mov
inc
fsubrl
inc
femms
pop
push
xchg
inc
sbb
sbb
pop
adc
dec
cmp
fs
cmpsl
push
mov
xchg
xchg
fidivs
out
lahf
inc
movsl
mov
movsb
add
and
sti
enter
imul
inc
mov
scas
sub
jbe
scas
fwait
xchg
mov
jp
xchg
dec
cld
xchg
push
je
adc
mov
shll
outsb
adc
aam
nop
dec
out
xchg
icebp
shl
pop
and
mov
xor
sub
cmp
push
mov
and
inc
scas
dec
jle
lahf
out
aam
pop
andl
sub
repnz
pop
in
jae
sbb
sub
and
add
push
jge
mov
pop
cmp
ret
cmp
pop
sub
add
push
outsb
fwait
pop
push
ss
mov
nop
inc
repz
add
dec
dec
fdivrl
inc
cmpsl
mov
dec
jbe
xor
sarl
jns
sub
div
fimull
aad
cmpb
sbb
pop
cmpsb
mov
mov
notb
adc
dec
push
movsb
inc
notl
mov
aad
jecxz
jno
jne
and
jl
out
or
and
testb
addb
fcoms
imul
rcl
push
fs
mov
pop
nop
loope
sbb
lock
cwtl
pop
or
cmpsl
adc
mov
jl
jg
sub
cmpsb
loop
xor
ljmp
pop
push
jmp
fiaddl
mov
inc
mov
dec
nop
xor
push
pop
adcl
ss
jp
lret
nop
icebp
test
add
divl
pop
jns
outsl
xor
xor
lea
fidivl
test
mov
lret
pop
inc
lods
or
cmp
inc
mov
inc
je
push
leave
popa
test
push
push
jns
mov
fs
push
mov
fmuls
or
dec
mov
and
cmp
xchg
mov
mov
xchg
push
mov
sbb
fsts
stos
cmp
xor
xchg
xchg
int
xor
idivb
pop
testb
add
push
jge
movsl
adc
je
xor
xchg
bswap
ds
fnstsw
xor
push
jg
sub
sbb
xor
ljmp
push
scas
leave
je
jae
lret
ja
cmc
ss
push
shll
enter
jl
jno
je
push
add
and
inc
iret
imul
fs
xchg
repz
ljmp
lods
cmc
sbb
andb
daa
or
jmp
testb
fists
push
nop
cmpsb
inc
lcall
xchg
xor
ficoml
dec
aaa
nop
cmpsb
cmpsb
pop
movsb
shl
cmp
xchg
sti
mov
mov
pop
ja
push
call
mov
mov
fldenv
shlb
xchg
pop
inc
pop
jae
xor
xchg
aam
in
test
repz
sbb
push
fidivrs
jge
push
pop
pop
and
test
sub
cmpsb
test
cmpsl
aaa
xchg
xchg
inc
ja
pusha
dec
push
pop
sbb
mov
hlt
pop
sbb
pop
jmp
scas
fmuls
mov
les
pop
inc
cs
scas
cmp
aas
xor
ss
mov
pop
add
insb
cwtl
fsubrl
xlat
mov
mov
adc
test
pop
pop
sub
xchg
push
mov
jb
push
ficoml
jle
push
jle
shld
mov
push
xchg
xor
ds
nop
add
mov
xchg
push
pop
ret
push
mov
pop
stos
jge
gs
out
mov
mov
adc
mov
mov
inc
push
mov
inc
mov
xchg
fdivrl
mov
jge
stos
or
faddl
add
ljmp
sbb
jno
testb
cwtl
add
mul
cld
jmp
repnz
mov
js
aad
in
push
ja
js
or
nop
rcll
call
cmp
gs
ss
add
push
mov
inc
shll
inc
mov
or
inc
mov
imulb
push
ss
pop
fwait
pop
lret
add
loope
mov
xchg
es
adc
cmc
imul
test
sbb
ds
fldt
scas
dec
lea
pop
inc
add
nop
mov
movsl
scas
fadd
bound
cmp
aad
xchg
adc
inc
ret
mov
in
inc
push
aas
aad
adc
or
insl
std
test
mov
ret
cmp
cmpsl
ja
push
aaa
sub
pop
lods
imul
pop
in
fmuls
pop
in
jae
mov
aad
sub
lock
into
jle
pop
push
fs
out
test
dec
out
test
fs
xchg
xchg
shrl
int3
add
mov
fnstsw
cmp
out
xor
jmp
inc
mov
pop
pop
ficomps
mov
int
cmpl
lret
mov
iret
xchg
pop
sbbb
adcb
inc
aad
mov
mov
or
xchg
dec
dec
cmc
pop
push
popf
std
jb
fwait
xchg
mov
repz
into
xor
adc
std
fwait
xchg
cwtl
push
and
mov
fidivs
dec
out
or
adc
cmp
adc
inc
repnz
pop
je
out
dec
pop
inc
push
sub
inc
movb
lcall
ja
add
sub
lret
aaa
xchg
shrb
jle
sbb
xchg
mov
in
lret
push
rcrb
das
xchg
pop
iret
adc
adc
mov
jae
pop
adc
add
sub
sbb
or
adc
cld
mov
adc
inc
jo
xchg
stc
ja
mov
nop
push
adc
xchg
mov
and
mov
or
dec
mov
sub
lea
ja
rep
aad
mov
addl
jne
popf
push
mov
fdivrl
xchg
scas
sbb
xor
xchg
fnstsw
mov
xchg
in
lahf
pop
sub
jnp
shlb
mov
lock
stc
push
dec
sub
mov
dec
pop
push
fdivrl
lea
dec
test
pop
push
test
mov
dec
push
orb
sub
push
mov
dec
add
xchg
out
rorb
sub
sub
xor
jg
dec
push
cmc
lcall
pop
and
lods
pop
arpl
xchg
push
dec
xchg
jg
push
mov
clc
mov
xor
push
in
dec
nop
and
sahf
scas
into
lock
cmpsb
imull
stos
inc
xor
xor
or
xchg
xchg
nop
loopne
call
pop
xchg
dec
aad
sar
xchg
mov
inc
out
rorb
sub
push
fwait
xlat
xchg
shlb
pop
jmp
cmp
mov
pop
leave
enter
jg
dec
mov
xchg
scas
scas
adc
test
and
push
out
jmp
pop
inc
fsubrp
fidivl
sub
subl
mov
mov
xchg
xchg
xor
shrb
jg
jno
outsb
xor
sar
decl
test
mov
daa
cmp
jno
push
out
xor
and
negl
cs
not
push
mov
gs
lret
cmp
dec
mov
push
int3
enter
mov
inc
mov
jne
push
je
mov
shl
push
add
lret
dec
sbb
xor
and
pop
ret
sub
call
inc
stos
into
sbb
and
mov
dec
sti
lds
cs
push
or
adc
daa
call
mov
daa
nop
adc
or
xchg
mov
adc
sbb
fwait
xor
jne
mov
mov
ss
lds
cmp
mov
ss
mov
cmp
sub
cmp
rorb
sub
cmp
in
xchg
daa
push
stc
lds
jne
adc
push
out
jle
fistpll
mov
js
sarb
aas
sbb
inc
cltd
xor
mov
daa
jle
or
sahf
mov
dec
imul
into
push
pop
xor
push
xor
or
adc
sbb
out
push
cmp
sahf
push
notl
cmpsb
xor
inc
xchg
addl
push
mov
std
int
pop
dec
push
rcl
mov
sbb
mov
push
jbe
cmpsb
test
aaa
cltd
cmpsl
scas
cmp
jne
lds
and
subb
rcl
js
xchg
mov
jecxz
popf
mov
loop
cmpsb
xchg
inc
mov
push
mov
adc
movl
sahf
xchg
aam
ljmp
jno
xor
mov
inc
dec
mov
test
pop
sub
fadds
ret
push
sub
lds
test
jmp
sbb
mov
lcall
mov
in
xchg
pop
cmc
std
xchg
adc
not
nop
mov
lcall
fisttpl
scas
enter
add
hlt
and
mov
adc
in
test
adc
mov
lock
loopne
aas
xchg
loope
dec
push
cmp
pop
icebp
pop
clc
pop
push
or
push
cmp
mov
sub
inc
xchg
xchg
add
dec
outsl
popf
sub
daa
das
dec
jno
test
lcall
adcl
xchg
popa
pop
stos
push
sbb
push
sub
sbb
mov
fistpl
jle
lea
aaa
mov
fistpl
sarb
add
cmpsb
and
push
out
jae
clc
pop
jbe
pop
sahf
neg
jmp
mov
cmp
and
out
add
or
add
lods
push
ficoms
pop
mov
js
sub
cmp
test
fwait
pushf
bound
nop
pop
cmp
mov
out
aaa
and
mov
sbb
fmuls
notl
and
dec
js
add
or
cmp
mov
jle
sahf
clc
sti
popl
push
mov
mov
inc
cmp
ss
mov
xchg
push
outsl
xchg
ficoml
mov
ss
xor
je
aad
nop
in
loopne
push
inc
cmp
dec
cmpsb
xchg
pop
ret
jle
std
dec
mov
pop
ja
lea
repnz
jo
ds
test
nop
rol
inc
add
daa
add
jb
lds
lods
jne
dec
jle
test
pop
inc
push
push
sbb
sub
decb
nop
mov
cmp
jno
jne
xor
jb
icebp
bound
dec
int
mov
stc
mov
dec
js
xor
fimull
push
and
in
sub
xchg
xchg
aam
loopne
and
nop
push
imul
in
fs
jne
fcoms
les
sub
pop
aaa
adc
testb
and
dec
shll
push
scas
sbb
testl
add
insl
mov
jae
nop
insl
jns
pop
mov
xchg
fnsave
ret
jmp
in
fcomp
push
and
or
xchg
xchg
xor
loope
inc
jg
pop
sbb
xor
lea
cmp
jp
fdivs
leave
xor
mov
aam
inc
cmpsl
xchg
outsl
ja
push
mov
jne
cltd
scas
pop
js
rcrl
les
or
jae
rdtsc
nop
je
mov
mov
inc
decb
jae
xor
dec
sbb
mov
xor
and
mov
mov
loop
cmpsb
roll
adc
xchg
jnp
xor
aad
jle
jne
inc
push
adc
push
cld
push
les
and
jmp
sahf
pop
pop
insb
lahf
orl
in
fmul
xchg
in
xchg
int3
mov
or
pop
and
dec
lds
xchg
nop
fnstcw
inc
push
jnp
dec
into
xchg
int
int
push
sub
imul
popf
ds
dec
inc
jo
fcomi
mov
adc
jge
lret
push
jo
sbb
sub
sbb
sti
outsb
sub
fldenv
outsl
xchg
dec
dec
std
pop
push
iret
mov
pop
lods
sti
or
jbe
jl
add
lds
cwtl
xchg
ds
or
mov
sub
push
popf
sub
and
cmpsl
push
push
push
and
jge
mov
roll
jmp
push
pop
lds
das
or
loope
pusha
or
cmp
jbe
insl
or
rcrb
sub
push
xlat
ror
imul
jmp
sbb
hlt
cmp
pop
test
xchg
xor
cmpsl
out
bound
out
add
pop
imul
cmpsl
lea
fildll
pop
into
pop
xchg
and
loope
sbb
clc
mov
push
cmpsl
or
daa
and
movsl
jecxz
and
mull
addr16
jmp
not
cmpsl
test
stos
lret
mov
pop
jae
push
jmp
repz
icebp
nop
les
divb
addb
mov
jnp
cs
dec
pop
pop
popf
xor
sbb
in
iret
and
xorl
or
xchg
jne
xchg
jle
adc
fstpt
pop
mov
cmc
jle
push
xchg
addl
leave
rclb
ja
cld
sub
inc
pop
imul
loope
lcall
sarl
xchg
imul
jle
inc
aaa
aad
add
pop
sub
ljmp
jmp
jle
dec
mov
xor
dec
and
adc
shll
xchg
or
stos
xchg
inc
mov
leave
roll
shr
cmpsb
mov
or
aad
and
idivl
out
lea
mov
xchg
pop
out
test
or
sbb
adc
push
sbb
jle
xchg
les
push
xchg
xchg
int3
rcr
stos
movsb
jae
xchg
xchg
dec
pop
andb
sti
test
cmp
repz
dec
xchg
scas
sbb
daa
cmc
leave
fucomip
scas
imul
and
aad
sbbb
enter
jbe
mov
adc
scas
test
aas
test
xchg
cltd
jb
test
jne
les
lahf
xchg
cmp
jl
mov
jge
adc
xchg
mov
dec
xor
aad
stos
push
out
movsl
sarb
bound
sub
jl
nop
xor
and
sub
cmc
shll
ud0
out
sahf
lds
popw
inc
nop
mov
jecxz
insl
hlt
popa
aad
mov
gs
or
pop
orl
pusha
ss
lods
ja
pop
dec
in
shlb
push
xchg
lods
sti
mov
xchg
vpunpcklwd
cmp
pop
jns
imul
dec
adc
cmp
ds
dec
mov
push
fnstenv
dec
xchg
mov
mov
add
mov
movsb
test
fldcw
pop
cmpsb
movsb
daa
movsl
and
jbe
jp
adcl
push
inc
clc
jbe
ja
or
lahf
jmp
cmpsb
std
and
adc
xor
sbb
xor
xchg
sub
faddl
and
div
popf
leave
mov
inc
dec
push
lcall
dec
mov
sahf
imul
test
sbb
movb
or
divl
xor
push
xchg
inc
pusha
jmp
pop
out
adc
add
sbb
dec
outsb
pop
or
lret
or
sahf
sahf
mov
jo
mov
jecxz
add
stos
jae
xor
or
xor
xor
cmpsl
adc
xor
cmp
repz
inc
pop
jg
push
rcrb
cmp
dec
mov
ja
mov
mov
shrl
je
jg
out
cwtl
push
test
rol
adc
lret
sbb
xor
pushf
nop
cs
iret
push
loope
aad
pop
jnp
push
jb
nop
mov
add
mov
in
mov
and
push
mov
xor
push
ficoms
inc
cmp
cld
xchg
cld
negb
dec
mov
pop
inc
out
push
xchg
and
sub
jg
lret
mulb
cmpsl
fldcw
pop
leave
jg
sub
pop
push
not
aad
xchg
lret
jbe
push
cltd
aad
ss
in
push
cmpsl
cmc
pop
or
mov
and
push
mov
adc
aam
std
inc
sbb
mov
adc
cmp
push
in
jne
fcom
rcll
xchg
sarl
pop
push
mov
add
out
call
mov
xchg
pop
push
lds
lret
mov
ja
das
stos
push
xor
orl
mov
inc
xor
jo
bnd
adc
rorb
mov
xchg
jp
cld
cld
xchg
xchg
aas
daa
mov
inc
cwtl
lret
push
insl
dec
xor
xor
imul
clc
sbb
stos
popf
sti
lret
in
add
gs
or
dec
jge
xchg
in
cltd
cwtl
xchg
iret
shrl
addl
out
mov
xchg
pop
cmc
xchg
mov
push
and
fs
jnp
push
test
leave
fxch
bound
cmp
ljmp
jne
fldt
jge
xor
cmp
mov
ja
dec
push
mov
imul
aaa
jnp
jle
cwtl
testb
into
ss
int
push
mov
xor
push
imul
mov
and
mov
jle
adc
xchg
xchg
mov
lods
mov
aas
imul
stos
rcll
pop
mov
sysenter
fisubrs
dec
js
xchg
aas
testl
or
sub
cld
dec
addr16
adc
aas
das
dec
jle
push
pop
xchg
and
jge
xchg
mov
xchg
fisttpll
inc
jl
stos
mov
and
dec
xchg
mov
mov
xor
xchg
ss
nop
dec
cmpsl
xchg
add
push
mov
mov
push
lods
test
aas
pop
cmpsl
mov
pop
imul
push
ret
add
repz
push
je
fwait
mov
mov
or
insl
jge
mov
data16
and
mov
je
addl
orb
sar
lea
pop
and
mulb
or
clc
gs
jo
ljmp
sarl
adc
sub
dec
cmp
sbb
int3
das
fidivl
fildll
push
sbb
int3
mov
std
addr16
je
and
mov
pop
mov
sbb
mov
lea
cmp
inc
push
jne
xor
shrl
sub
je
roll
pop
jle
call
mov
push
jg
jo
lahf
daa
xchg
iret
das
insl
idivb
aaa
int
test
lods
int
dec
push
gs
imul
jbe
fsts
push
sub
jb
mov
mov
test
mov
in
jbe
cld
sub
mov
mov
and
mov
mov
nop
divb
out
adc
movsl
loop,pt
rclb
and
mov
and
jg
dec
addr16
testb
xor
fldl
dec
pusha
ret
sub
std
inc
xor
add
leave
xchg
das
leave
movzbl
fcompl
loop
les
xchg
xchg
inc
sub
push
jb
lea
xchg
mov
lahf
xchg
adc
fsubrl
pop
sub
xchg
cmp
push
xchg
xchg
sbb
ja
mov
jl
mov
cld
cli
xor
sbb
pop
aaa
scas
jmp
pop
mulb
decb
cmpsb
mov
gs
cmpsb
aas
aam
inc
in
inc
mov
aaa
jge
mov
lods
mov
inc
xor
mov
sub
iret
push
cmp
jae
xchg
xor
imul
pop
mov
and
mov
cmpsl
xchg
ja
push
mov
fistl
inc
test
in
jne
das
pop
jle
push
mov
or
outsb
dec
xchg
xchg
stos
adc
les
fdivl
mov
jge
sbb
and
iret
push
shl
stos
stos
das
pop
xor
rol
cmp
stc
cmp
out
adc
push
repz
push
fisubrl
sbb
push
loop
daa
adc
mov
sub
inc
dec
mov
fs
mov
and
mov
inc
xchg
mov
clc
jecxz
adc
push
lods
fwait
and
mov
pop
in
cmp
mov
out
mov
loope
xchg
int
std
leave
cmp
xor
inc
leave
lods
dec
clc
test
in
popf
ret
mov
cli
gs
call
test
dec
cmp
mov
mov
in
lcall
mov
xchg
and
mov
dec
je
pop
mov
xchg
adc
inc
and
nop
into
mov
inc
lods
push
pop
in
or
or
cmp
mov
and
add
test
ja
cmpsl
stos
fiadds
mov
fwait
out
int
mov
dec
jle
cmp
push
mov
push
mov
int
rcll
sub
faddl
inc
push
rcll
std
mov
mov
cltd
enter
adc
cwtl
or
dec
mov
dec
and
std
adcl
imul
mov
and
xchg
mov
addr16
ror
push
or
push
shll
push
or
addr16
xor
fdivl
push
mov
adc
pop
sbb
pop
stos
add
jecxz
xchg
dec
mov
xchg
jb
lret
jmp
in
inc
xchg
mov
subl
imul
das
jl
cmp
dec
dec
nop
int
sub
notl
call
push
push
pop
dec
jno
popf
cmp
adc
rol
sub
stos
out
mov
cmp
mov
enter
sbb
cmpl
in
lods
inc
mov
xor
push
cltd
rcr
scas
out
sub
cmp
and
xor
arpl
xchg
nop
mov
jae
aas
xchg
xchg
xchg
sub
jbe
xor
pop
mov
adc
gs
or
mov
fisttpl
push
movsl
subb
xchg
loope
scas
sahf
bound
cld
enter
push
cmc
xchg
add
in
cltd
out
lds
mov
std
subl
adc
push
rcr
mov
and
sub
das
mov
faddl
cmp
mov
inc
in
xchg
fisubrs
lock
addr16
rcrl
lods
jne
xchg
ja
jbe
mov
decb
sub
fmull
mov
out
arpl
adc
push
jg
push
and
xchg
push
mov
and
enter
fsubrl
xor
push
mov
dec
test
jnp
rcrl
and
outsl
xor
adc
lret
xchg
int3
jnp
mov
or
cmpl
or
sub
jle
sbb
mov
or
fsubl
sbb
xor
cmc
add
or
scas
and
mov
inc
lea
fdivrl
js
pusha
je
adc
sub
dec
xor
dec
push
and
rcrl
pop
fidivrl
mov
push
jge
fcoml
jmp
sti
ja
fwait
mov
popf
iret
lds
fld
and
pop
das
and
mov
jbe
icebp
movsb
jbe
push
arpl
push
xchg
jbe
mov
addr16
mov
addr16
mov
jo
bound
std
nop
pmaxsw
mov
jns
loope
add
data16
dec
push
mov
sbb
push
jno
fiadds
ret
mov
or
jl
xchg
jg
mov
imul
repnz
aam
mov
xchg
cmp
jl
mov
imul
repnz
loop
outsl
sarb
out
pushf
inc
iret
jge
mov
adc
or
adc
mov
mov
mov
jno
sub
in
into
pop
pop
mov
sub
jge
adc
dec
js
dec
aas
xor
and
ljmp
repnz
cmpsl
push
aaa
mov
push
add
push
scas
notb
dec
mov
icebp
daa
aad
sub
jae
sub
lret
jle
or
je
adc
xorb
and
sub
loopne
mov
mov
dec
sub
clc
push
mov
sbb
imul
int
jns
add
pop
push
lods
and
jbe
adcl
hlt
lret
jne
in
inc
push
push
pop
jge
mov
testl
push
popw
or
out
hlt
pusha
mov
push
dec
enter
mov
shl
sub
outsb
hlt
mov
ret
mov
negb
or
rorl
and
std
cmc
ja
mov
pop
sub
dec
lret
int
pop
xor
popa
pop
jae
jmp
jle
cmc
dec
xchg
adc
in
and
in
ljmp
jmp
movl
je
dec
mov
push
in
adc
lret
das
cld
inc
mov
push
nop
cwtl
xchg
data16
push
cmpsb
into
push
lods
inc
stc
mov
xchg
rorl
loope
ret
push
std
leave
pop
dec
nop
mov
or
mov
mov
gs
sub
or
jp
fmul
jo
dec
adc
jno
adc
mov
decb
pop
xor
pop
mov
inc
mov
xchg
mov
mov
pop
mov
fsubp
nopl
das
aam
mov
xchg
aad
push
mov
ret
repz
jne
dec
inc
adcl
ds
dec
xchg
sti
repnz
xchg
repnz
les
xor
enter
int
jne
in
loop
mov
fwait
sbb
pop
push
outsl
push
mov
test
xchg
out
out
sbb
js
daa
xchg
fisttps
cmp
mov
pop
mov
push
adc
and
push
stc
push
or
lahf
ja
lds
mov
inc
hlt
test
adc
dec
xchg
push
sbb
cmp
adc
dec
mov
stc
stos
cmpsl
mov
rcll
adc
aad
lock
or
lcall
ss
pop
imul
les
push
jg
aam
pop
adc
scas
jp
mov
mov
das
lcall
lret
cld
mov
lahf
push
adc
enter
scas
xchg
scas
push
divl
test
jo
aad
ja
fadd
sub
scas
sub
add
test
imul
sub
pop
mov
push
xchg
jae
push
stos
sbb
cld
mov
xchg
enter
jno
xchg
nop
pop
lahf
lock
mov
mov
xchg
or
sbb
fistpl
lea
sti
lds
stos
loope
jnp
jbe
jne
mov
xor
xor
jbe
mov
movsl
sbb
test
icebp
ljmp
mov
pop
pop
std
xorb
pop
imul
js
jle
pushf
mov
xchg
ret
jmp
mov
test
pop
test
jmp
jmp
sbb
lods
out
jle
mov
sub
mov
xchg
add
cld
stos
push
xchg
mov
outsl
push
sub
mov
out
nop
call
les
mov
hlt
sahf
jge
sub
jb
xchg
js
dec
jne
add
mov
outsb
mov
add
mov
aas
lods
mov
mov
pop
mov
mov
push
cmp
pop
lcall
mov
icebp
push
cs
test
idivb
lock
in
insl
sbb
lcall
and
rcll
jns
popf
pop
xor
inc
lds
cmp
repz
xor
push
mov
stos
xchg
sbb
imul
adc
out
adc
inc
outsl
into
sub
jecxz
outsb
adc
mov
icebp
push
mov
scas
sub
push
dec
inc
jno
lcall
scas
nop
cmp
test
jle
cmp
mov
aas
imul
je
fdivrs
push
ja
fidivrs
gs
jne
adc
xor
cmpl
add
ljmp
xor
mov
cmp
inc
xchg
jb
daa
xor
xor
mov
mov
mov
sub
lcall
pop
in
inc
sbb
cmp
insl
push
mov
fidivrl
jecxz
int
das
jle
cmp
add
mov
push
jbe
fs
jecxz
mov
xor
add
push
dec
filds
cwtl
mov
jp
gs
pop
mov
stos
cmp
js
das
mov
inc
das
insl
cli
xchg
int
popa
cltd
adc
das
mov
jecxz
cwtl
push
push
push
enter
mov
cltd
pop
rcll
jg
dec
mov
movsl
repnz
movl
shll
push
cmp
pop
sbb
add
gs
jnp
cmp
adc
vsqrtss
jae
inc
xchg
dec
add
repz
pop
loope
mov
sbb
xchg
into
in
test
ret
aaa
push
push
jb
jno
addr16
in
fcomps
decl
mov
push
bsr
rcrl
xor
mulb
ret
aaa
cmp
mov
lods
jmp
mov
or
push
xor
dec
xor
or
and
xchg
fs
shrl
rcll
lea
lret
xor
jb
sbb
jbe
ror
cmp
cld
dec
mov
aad
popf
arpl
shrl
mov
inc
jne
sbb
cvtps2pd
loope
dec
xchg
cli
push
outsb
sarl
mov
jno
xchg
lahf
ja
xchg
andnps
push
imul
inc
jnp
and
and
adc
ret
xor
lret
jo
std
mov
mov
jnp
push
sbb
jmp
ljmp
inc
cmp
popa
in
sub
jbe
sbb
sub
xor
lds
jge
or
push
int3
jnp
or
jl
mov
cmp
xchg
pop
jle
out
movb
in
addr16
jo
decb
lods
aaa
adc
jle
and
lret
adc
ljmp
repz
ljmp
sub
sbb
ds
ret
or
push
xchg
iret
mov
roll
xor
mov
inc
insl
mov
push
xor
xchg
rcll
fdivl
dec
out
inc
xchg
out
jmp
les
or
test
jg
icebp
and
or
test
addr16
shl
jmp
imul
addr16
insl
dec
push
stos
adc
ljmp
mov
aad
out
mov
sbb
ss
push
ja
nop
stos
jmp
fsubr
ret
cmpl
dec
jne
scas
out
or
jecxz
insl
filds
mov
inc
push
xchg
push
cld
xor
push
int
xor
jl
xchg
iret
push
lods
es
jns
mov
pop
insb
std
adc
imul
jg
loop
daa
xchg
mov
sub
faddp
lahf
fdivrl
cmpsb
ds
sti
std
xchg
fsubr
sbb
sub
pop
out
filds
or
sub
push
ss
adc
sti
lret
ret
mov
cmc
push
jmp
outsb
jecxz
dec
jb
cmp
cmpsl
ret
ret
sarl
stos
jo
call
pusha
nop
sti
dec
mov
adc
push
int3
ret
adc
jne
jnp
sub
push
in
pop
push
movsb
shlb
aad
sbb
enter
mov
pop
cmp
cmp
adc
sahf
divb
jle
sub
mov
mov
jge
and
loopne
ret
nop
lock
mov
mov
inc
rcrl
mov
test
nop
fiaddl
push
lahf
mov
xchg
lea
fdivl
sbb
jae
insl
xchg
adc
sub
mov
stc
jno
js
roll
sub
lcall
mov
cmc
inc
mov
pop
sbb
sbb
or
cmp
and
dec
mov
aad
ds
xchg
sub
aam
push
scas
mov
inc
in
xor
sbb
jecxz
mov
sti
mov
or
add
es
fistps
stos
push
jo
mov
xchg
pop
sti
jmp
sahf
fmuls
mov
adc
not
inc
inc
lds
sub
les
mov
xchg
jge
jne
or
jo
or
ds
repz
lret
movsb
add
adc
fcompl
repz
and
leave
adc
out
ret
pop
iret
fcoms
mov
jecxz
lcall
std
ljmp
xchg
jb
dec
nop
fwait
xorl
cld
test
adc
hlt
dec
mov
xchg
dec
stc
pop
ss
mov
mov
test
lret
jo
mov
lea
outsl
inc
lret
mov
aaa
inc
sahf
pop
xor
fidivl
push
div
sbb
aas
ss
sub
mov
in
iret
movsl
idivb
xor
notl
xchg
sub
adc
rcrl
fisttps
test
loope
data16
or
pushf
jnp
jne
push
icebp
and
add
xchg
stos
push
popa
jnp
fbstp
cmp
add
push
mov
dec
aaa
loopne
ret
js
or
in
mov
cld
ljmp
pop
daa
or
nop
adc
repz
iret
jns
push
sub
and
cld
std
mov
mov
sub
popf
cld
adc
nop
sbb
pushf
push
xor
push
mov
sub
outsb
repz
mov
sub
mov
xor
dec
jp
das
popf
aam
inc
mov
mov
sub
out
fdivl
mov
into
xchg
mov
lds
out
push
jne
pop
lds
repnz
and
fldt
lods
dec
outsl
pop
or
mov
cmp
andl
movsb
mov
ret
jp
movsb
fsubl
mov
pop
clc
enter
xchg
sub
mov
aad
xchg
push
leave
notb
std
mov
into
pop
shlb
sbb
out
push
ds
scas
nop
mov
pop
dec
sahf
mov
xchg
sbb
je
negb
rolb
pop
push
xchg
stos
push
xchg
aad
jnp
nop
cmpl
jmp
jne
push
rcll
in
mov
cmp
addb
sub
jno
stos
push
push
xor
mov
and
jecxz
inc
xchg
mov
mov
shll
cmp
daa
addr16
adc
loopne
mov
pop
jmp
hlt
cmp
xchg
sbb
dec
inc
mov
ret
fwait
aaa
dec
aam
inc
and
pop
test
mov
aam
adc
mov
aaa
cld
sub
cld
dec
cltd
scas
sar
jg
movsb
xor
jae
sar
jecxz
sub
push
aad
mov
pop
addl
adc
jg
test
les
jmp
cmovo
ss
sbb
xchg
dec
roll
mov
add
cmpsb
sub
mov
hlt
std
mov
pop
pushf
in
push
cmp
adcl
jno
out
sub
mov
mov
xorb
pusha
xchg
xor
enter
lds
lcall
lea
mov
inc
inc
cmpsl
aam
cmpsb
mov
fnsave
mov
inc
adc
push
adc
dec
mov
jb
mov
int3
inc
aad
adc
and
loope
rorb
ja
mov
adc
nop
adc
cmp
lock
jnp
xchg
inc
shl
inc
scas
cmp
insb
scas
jmp
push
sahf
sarl
push
jne
inc
mov
sub
aaa
xchg
adc
js
es
jmp
hlt
std
mov
pusha
int3
ss
mov
bound
insb
xor
pop
test
mov
inc
mov
fwait
rcrb
sti
mov
mov
lret
push
or
mov
das
mov
xchg
in
or
cmc
cmpsb
js
xor
test
cmpsl
adc
test
lahf
in
pop
shl
scas
adc
pop
icebp
dec
adc
push
inc
jle
sub
js
mov
incb
cmp
nop
xor
test
jmp
jecxz
pcmpgtb
dec
xchg
mov
lahf
ds
sub
push
pop
ja
inc
rorl
call
mov
movsl
imul
cmp
push
jecxz
imul
outsb
xchg
inc
mov
dec
mov
sti
mov
add
xor
add
repnz
xor
or
mov
xchg
push
or
jl
push
cmp
xor
std
mov
pop
inc
dec
cmc
out
mov
in
and
fcoml
call
dec
cmp
popf
pushf
pusha
mov
push
jp
xor
mov
insl
dec
sbb
lret
cmp
xchg
add
mov
jle
pop
add
roll
pop
mov
pop
aaa
jle
lea
push
and
ret
xor
cld
mov
js
lods
in
push
dec
icebp
les
ret
pusha
inc
inc
lea
sbb
jg
mov
jb
push
shl
add
mov
pusha
adc
dec
ljmp
and
ja
mov
push
mov
test
mov
push
sahf
jmp
dec
inc
insl
out
mov
push
xchg
push
xor
dec
push
shl
insl
cmp
inc
mov
aas
aas
inc
loope
inc
push
dec
push
xchg
outsl
and
fnstcw
mov
scas
repz
aad
ds
xchg
addr16
push
out
and
icebp
scas
push
aas
jmp
outsl
movsb
mov
xor
cmc
imul
bound
adc
ljmp
sbb
fwait
lock
push
outsl
stos
ja
aam
nop
popf
pop
nop
scas
iret
mov
jnp
repnz
ret
scas
aam
xchg
stos
lock
push
sbb
nop
aad
fbld
xor
sub
stos
aad
push
adc
pop
push
aaa
push
dec
aas
in
dec
out
mov
xchg
outsb
nop
cmp
jmp
lods
push
xchg
rorl
jg
into
negb
rcll
nop
jno
movsb
and
test
xchg
inc
adc
adc
repnz
push
les
lds
xor
and
nop
idiv
emms
xor
fdivl
inc
mov
pop
adc
jp
push
outsb
pop
test
push
inc
pop
bnd
rcl
mov
inc
push
cmc
adc
mov
movsl
sarb
into
iret
push
lock
aaa
in
push
scas
je
xchg
nop
sahf
pmaxsw
ffreep
fsubl
mov
orl
jb
loope
push
adcl
pop
dec
jne
xchg
lea
pop
xchg
push
out
xlat
sarl
push
and
xlat
cmpsb
rcr
ret
stos
jnp
sub
fstpt
neg
mov
xor
dec
pop
pop
add
inc
insl
xchg
filds
call
push
ret
popl
cmp
push
mov
sbb
das
scas
xchg
cmp
pop
into
sub
and
scas
ss
iret
inc
and
outsb
and
sub
inc
push
sub
ja
cmp
jne
mov
daa
mov
shll
ja
push
icebp
mov
gs
push
cmp
jns
rcr
out
adc
mov
fldt
gs
in
mov
dec
bound
stos
lock
fnstcw
and
sahf
cmpsb
je
lds
movsb
xchg
mov
jmp
lods
push
sti
and
out
inc
pop
cmp
or
mov
mov
mov
pusha
mov
shrb
xor
dec
push
rcll
and
mov
dec
push
dec
in
loopne
inc
enter
std
scas
mov
push
pop
or
add
mov
mov
hlt
mov
js
ret
add
push
pop
cmp
aas
inc
call
xchg
push
push
inc
mov
add
int
jle
xlat
mov
pop
mov
inc
lods
push
mov
stos
mov
xchg
xorl
fbld
jae
inc
jge
or
mov
inc
pop
push
mov
inc
add
data16
lods
jg
push
test
push
out
cwtl
lock
rolb
cld
inc
faddp
fsubs
sbb
xchg
out
lret
or
idivb
outsb
in
in
pop
clc
addl
js
shll
ss
cmp
mov
leave
xorb
aaa
pusha
sub
push
xchg
push
ja
mov
movsl
imul
imulb
incb
xchg
mov
idivb
push
inc
push
movl
xchg
pop
sub
push
pop
or
lock
in
insl
adc
push
lods
cli
jle
jae
js
mov
mov
iret
stos
sbb
pop
jge
icebp
dec
inc
repnz
mov
lods
int3
nop
add
in
push
push
inc
rcrl
jmp
jns
sti
int
sub
sbb
and
out
lods
dec
add
cmpsb
xorl
mov
into
cltd
adc
stc
sub
xchg
mov
ds
xchg
mov
iret
popa
insl
aas
pop
subl
jl
pop
ja
popf
cmp
lret
push
insl
and
pop
pusha
scas
sub
pop
mov
aaa
or
adc
lret
push
lods
fdivrl
or
aad
or
lds
inc
mov
push
dec
add
in
and
daa
cmp
sahf
or
mov
out
mov
aaa
movsb
pop
cld
popf
hlt
out
jecxz
js
fbld
addr16
fdivs
jmp
add
mov
arpl
push
and
rorb
mov
movsl
mov
cmpsb
push
xchg
popa
mov
outsl
addr16
lahf
repz
lods
xchg
xlat
ja
arpl
daa
stos
inc
xlat
mov
aas
jo
cmpsl
inc
sub
mov
iret
sbb
cmp
xchg
cmp
adc
cltd
mov
cmp
inc
mov
jae
jno
dec
xchg
xchg
inc
and
or
das
adc
dec
iret
fdivl
in
cld
dec
mov
ja
pop
cmpxchg
pop
pop
das
nop
xchg
mov
adc
daa
nop
mov
push
notb
les
mov
dec
aaa
nop
jg
adc
into
sbb
jg
xchg
addr16
dec
nop
pop
shll
jbe
adcl
pop
into
je
addr16
mov
push
fwait
scas
outsl
nop
push
into
mov
jg
cli
mov
aaa
push
adc
jg
xchg
jae
repz
xchg
xchg
aaa
adc
xchg
mov
cltd
push
mov
xchg
iret
aaa
nop
adc
nop
mov
mov
push
scas
push
nop
fsubs
movsl
cmp
adc
sarl
xchg
nop
mov
dec
int3
xchg
inc
xchg
dec
mov
cltd
jne
mov
inc
scas
mov
sbb
pop
or
dec
jmp
std
rorb
repnz
movsb
nop
cmp
mov
into
in
xchg
dec
nop
and
fwait
push
nop
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
inc
jne
ss
mov
jbe
cli
cmc
mov
je
xorl
lods
dec
xchg
iret
jg
nop
mov
out
xchg
ficoms
out
jp
xor
mov
xchg
notb
nop
pop
mov
pop
nop
into
in
push
push
xor
jecxz
test
mov
pop
add
push
cmpsl
dec
shl
add
scas
movsb
pop
push
xchg
push
cmpsl
mov
xor
test
shrl
sahf
shll
into
mov
mov
lods
lods
arpl
inc
mov
ja
lret
add
mov
mov
push
and
lret
push
xor
inc
xor
push
fs
outsl
mov
arpl
push
jb
das
dec
dec
sarb
xor
ret
xchg
and
jbe
xchg
jns
and
js
inc
les
sub
push
jb
xchg
lds
xchg
nop
insb
xchg
mov
jae
lds
push
push
in
inc
push
jne
push
push
dec
les
mov
lea
enter
push
mov
out
aam
int3
lods
les
out
pop
xor
mov
cltd
adc
or
mov
push
mov
sarb
xchg
inc
into
mov
das
ljmp
test
or
pop
mov
push
into
fistl
imul
adc
test
lods
repz
mov
adc
test
test
xor
mov
scas
push
adc
scas
fistpll
imul
out
sub
daa
nop
jl
sar
sub
lods
pop
jle
aam
rorb
pop
sub
gs
pusha
imul
jns
sub
notl
pop
pop
sub
push
insl
dec
int
out
inc
dec
cmc
push
mov
outsl
cmp
pop
mov
or
xchg
jmp
sub
ss
js
fs
inc
ljmp
aad
nop
dec
sbb
add
xor
sti
xchg
cwtl
sbb
shrb
loopne
mov
jp
dec
lea
clc
inc
adc
adc
fisttpl
pop
pop
rcr
sub
push
testb
inc
sub
lret
inc
lods
sbb
sub
pop
fldcw
push
imull
mov
js
inc
xor
iret
mov
dec
test
idivb
xchg
test
sbb
sti
nop
inc
std
inc
or
fdivl
lea
dec
test
outsl
gs
dec
dec
push
push
add
lods
loopne
dec
adc
inc
dec
or
xchg
inc
xchg
jg
mov
jmp
shll
mov
add
fldl
insl
js
and
test
pop
stos
loopne
ljmp
mov
or
add
pop
int3
mov
int3
mov
out
out
pop
xchg
xchg
out
mov
jnp
jmp
pop
jl
daa
out
xor
jge
pop
sbb
ret
movsb
push
xor
adc
jb
faddl
loope
iret
cltd
jnp
xchg
ja
mov
xchg
pop
int
adc
pop
insl
jbe
cld
mov
mov
fcomi
gs
outsl
loopne
jl
dec
jle
jp
insb
inc
jl
mov
into
fiaddl
mov
jno
dec
repz
jl
ficoms
lock
cmpsl
iret
jnp
dec
stos
xchg
aaa
push
lcall
push
mov
movsb
push
mov
adc
xchg
and
sub
add
mov
jno
cmpsb
sub
or
nop
lock
cwtl
fisttpl
and
adc
inc
ja
push
sub
seto
lahf
sbb
jle
xor
xchg
out
pop
rorl
test
add
xchg
lret
das
scas
or
lods
add
lcall
loopne
dec
jge
sub
aaa
mov
push
jle
sbb
insb
mov
aam
int
imul
add
sbb
in
ja
jg
push
xor
repz
add
dec
into
jg
inc
mov
and
jb
bound
push
leave
outsl
xor
pop
mov
add
inc
scas
push
pop
pop
rorl
test
out
pop
out
cmp
jge
mov
pop
hlt
cmpsl
jge
sahf
push
jns
add
arpl
pop
adc
push
jmp
js
clc
ret
fmuls
fldcw
iret
ret
popf
aad
ret
add
xchg
adc
test
push
ja
mov
xchg
js
push
xor
xchg
ret
push
nop
or
js
mov
push
pop
add
iret
popa
jle
mov
xchg
mov
jge
jnp,pt
sub
sbb
movsl
push
test
or
dec
adc
ss
fildl
ficomps
out
repz
mov
hlt
js
push
dec
lahf
sub
pop
cmc
fidivrs
nop
and
xor
or
push
lods
cmc
test
jg
add
fs
jbe
add
lea
push
js
sub
ds
aad
jbe
jge
adc
imul
mov
pusha
aaa
sbb
mov
jo
adc
xchg
inc
scas
pop
mov
mov
sub
jbe
das
inc
dec
sbb
fs
inc
cltd
adcl
xchg
cmp
mov
sarl
flds
adc
sbb
jl
lock
shlb
paddw
add
push
in
faddl
jnp
push
inc
addr16
mov
aas
push
mov
pop
adc
inc
rclb
iret
and
ja
add
push
lcall
or
fstl
out
aam
dec
aam
int3
inc
lds
mov
mov
adc
testb
test
or
cmp
and
arpl
fbstp
sahf
push
cmp
stos
jp
add
cmc
negb
mov
push
movb
or
add
pusha
mov
stos
mov
xor
fisttpll
pop
pop
fidivl
bound
das
push
mov
mov
push
pop
popf
fildl
aas
nop
outsb
popa
rolb
sbb
pop
js
sub
and
test
pop
inc
ss
icebp
sub
push
daa
sub
mov
xor
adc
iret
and
rol
imul
fsubs
sbbl
mov
nop
inc
das
sahf
jle
and
jge
aaa
fistpl
cmp
repz
hlt
pop
cmp
or
add
rcrl
and
or
sbb
sbb
out
xor
pop
mov
or
mov
roll
dec
inc
dec
daa
stos
xchg
call
dec
lods
mov
xchg
push
xchg
adcb
pop
mov
js
push
outsl
sbbl
cmpsl
jg
cmp
jne
or
lahf
mov
mov
es
adc
mov
ds
movsb
mov
pop
cmc
aam
add
in
lods
lds
repnz
push
push
mov
aad
mov
icebp
push
mov
mov
jmp
jnp
cmpsl
pushf
push
ljmp
xchg
jle
es
inc
cmc
in
xchg
mov
lds
test
negl
scas
lret
lea
iret
pop
pop
inc
out
sti
shll
pop
jl
jp
mov
ja
scas
notb
cmc
daa
mov
jmp
xor
ss
xchg
xor
xor
in
cltd
movsl
hlt
repnz
push
inc
xor
iret
lahf
out
inc
in
mov
xlat
andl
jmp
daa
lock
sub
sub
push
jae
xchg
fidivrl
cld
bound
or
mov
push
dec
imul
negl
and
xchg
movsl
mov
popf
jmp
xchg
mov
dec
dec
pop
pop
es
inc
shll
ljmp
mov
xor
push
push
ss
push
cmc
addr16
aad
cmp
sub
mov
mov
addb
es
adc
cld
push
lret
shld
mov
push
sub
hlt
into
int3
popf
push
rcll
jecxz
mov
adc
inc
jo
pop
imul
mov
ja
daa
jbe
xchg
mov
mov
jnp
mov
cmp
push
push
nop
sub
shlb
inc
cmp
ja
enter
jmp
bound
inc
cwtl
cmp
jl
lret
push
mov
and
push
hlt
iret
mov
cmpsl
adc
rcll
mov
xchg
push
dec
iret
inc
push
lret
add
imul
sbb
testb
fsubrl
movsl
aaa
sbb
divl
push
pop
fldcw
int
mov
jmp
pop
push
inc
jg
clc
in
aas
sbb
leave
or
scas
xchg
in
xchg
adc
subb
addr16
pop
jno
inc
in
daa
pop
fwait
outsl
xor
push
push
push
inc
aas
cmpsb
pop
out
xchg
pop
mov
ljmp
rcr
cmpsl
push
pop
sub
into
jge
sub
les
imul
mov
lods
or
cmp
cmp
mov
jge
mov
jo
stos
cs
push
sub
cmp
fdivrl
aad
rcll
nop
mov
bound
sbb
roll
test
lds
iret
or
cmp
inc
rclb
push
jge
int
dec
push
pop
xchg
dec
push
dec
pop
jbe
jge
ss
pop
jno
adc
sub
jnp
adc
or
movsl
aaa
iret
fwait
mov
xchg
nop
lahf
hlt
stos
scas
fsubrs
push
fsts
scas
inc
fldenv
mov
jp
mov
mov
add
imul
dec
mov
sbb
jge
mov
dec
jg
add
out
cmp
mov
pop
pop
push
jle
xor
out
dec
sub
nop
pop
int
addr16
cmpxchg
inc
pop
pop
or
or
imul
shl
cmpsb
mov
sbb
or
mov
jmp
mov
in
imul
mov
and
addr16
jg
sbb
clc
mov
xchg
jbe
mov
call
push
in
mov
push
shll
lds
lret
rorb
add
ret
int
fildl
mov
ja
sbb
aad
cmp
dec
test
int
xor
jg
jecxz
mov
std
mov
test
add
ret
inc
out
jl
test
repz
out
ja
stos
or
mov
scas
or
pop
add
sbb
add
stos
adc
ficomps
xchg
mov
xchg
push
aam
or
int3
cmp
shlb
notb
mov
xor
or
mov
inc
aaa
dec
xor
mov
push
inc
cmp
mov
pop
jmp
fcoml
add
or
les
fnstcw
push
sarb
pop
std
sub
adcb
test
lea
xchg
std
jecxz
sub
sub
push
ffree
lock
pop
stc
fstl
push
xchg
repz
jmp
in
jecxz
ljmp
hlt
xor
cli
mov
mov
jecxz
push
imul
stos
pushf
mov
test
cmp
xchg
jne
or
mov
cmc
scas
jg
inc
pop
roll
lods
out
xor
xchg
sbb
lods
sub
ja
mov
or
aad
pusha
sahf
dec
shl
xchg
sub
lods
std
rcll
inc
jae
mov
js
jae
adc
aad
inc
div
pop
movups
mov
push
notl
mov
pusha
loopne
cld
addr16
hlt
mov
sbb
cld
sbb
fnstenv
adc
mov
sbb
imul
and
ss
daa
je
test
and
mov
mov
inc
stos
leave
mov
into
fidivs
loop
mov
aas
popa
sti
mov
cmpsl
dec
sbb
jg
push
in
mov
ret
xchg
sti
enter
repz
add
inc
repz
inc
sbb
repz
maxps
sbb
cld
mov
aam
iret
inc
ret
stos
mov
pop
repz
xchg
sahf
cmc
mov
hlt
adc
jg
shl
mov
pop
outsl
mov
push
push
adc
adc
aad
adc
scas
sbb
inc
in
hlt
icebp
inc
or
ds
adc
mov
sahf
xor
aad
xor
imul
push
push
into
in
lods
mov
sub
inc
lds
std
gs
and
and
outsb
fcoml
clc
sbb
xchg
mov
cmp
inc
mov
negb
pop
test
out
lret
sbb
rclb
xchg
push
mov
push
inc
mov
push
aaa
sarb
xchg
incl
mov
xchg
rep
movsl
inc
pop
rorl
cmpl
mov
leave
and
jnp
rorl
mov
or
nop
jg
aam
subl
xchg
dec
enter
in
mov
dec
sub
push
xor
add
test
mov
push
lret
loopne
xor
mov
ss
lods
mov
lds
dec
xor
test
pop
sub
pop
repz
nop
dec
dec
ret
imul
dec
lods
test
nop
outsb
sub
add
adc
stos
push
jmp
and
xchg
faddl
into
lods
aad
bnd
mov
dec
xchg
cmpsl
jp
outsb
enter
mov
sbb
or
inc
sbb
xchg
nop
mov
dec
jp
jecxz
shrl
nop
mov
aas
push
xor
andb
and
push
jp
in
gs
xor
repz
scas
pop
fdivl
scas
sub
push
inc
pop
stos
or
pop
adc
repz
test
ja
push
xor
lock
add
adc
scas
xchg
aaa
stos
add
mov
mov
push
or
loop
push
movsb
mov
push
pop
xchg
push
loopne
jnp
je
fcmovbe
mov
push
push
movsb
push
sbb
push
sbb
sub
std
fisubs
aas
fisttps
cli
aad
and
das
test
aaa
mov
xchg
int3
mov
sub
fisubrl
xchg
pop
lahf
nop
imul
xor
sub
clc
lds
into
sbb
rolb
cmp
cmc
and
stos
fbstp
orb
pop
xchg
cs
push
arpl
cmp
pop
mov
sub
cmp
clc
xchg
jbe
sahf
push
mov
mov
dec
sbb
movsl
push
xchg
cmc
push
inc
orl
dec
xor
test
test
mul
out
add
mov
call
cmp
jns
mov
mov
pop
addl
jne
enter
lret
lods
out
or
outsb
ja
aam
repz
add
adc
jo
or
std
shl
xor
daa
push
or
mov
jne
inc
movsl
sub
clc
pextrw
inc
pop
iret
or
mov
push
adc
mov
add
sbb
scas
test
fimuls
pop
fildl
sti
into
roll
or
adc
sub
jno
push
fisttpll
sbb
sahf
cmp
push
pop
jne
repnz
xor
in
js
dec
into
dec
lcall
sahf
divb
sub
fmull
push
dec
sub
into
in
in
cmp
xor
repnz
ljmp
insb
mov
sub
adc
scas
xchg
or
mov
nop
cmovg
jne
in
push
into
pushf
jle
pop
mov
sbb
mov
jne
dec
sarl
std
out
jnp
cltd
ret
repz
xchg
cli
mov
ja
int3
mov
mov
push
push
xchg
data16
inc
loopne
comiss
dec
call
add
aad
push
add
das
xchg
aaa
dec
mov
test
mov
sbb
dec
adc
push
jg
and
insl
mov
insl
push
dec
mov
fstl
shlb
lds
pop
sbb
fildll
push
int3
nop
je
push
sub
iret
pop
push
mov
mov
nop
lret
xchg
scas
lds
cmp
jne
mov
nop
cmp
ljmp
std
dec
push
daa
push
bound
xor
xor
pusha
push
mov
push
faddl
call
xor
xor
test
dec
jb
jbe
sub
rcrb
lahf
jecxz
lods
xor
cmp
sahf
clc
pop
mov
adc
xor
popa
push
mov
hlt
jns
xor
mov
test
adc
mov
mov
mov
jl
pop
test
in
mov
cmp
xchg
xchg
and
outsl
or
jo
sub
jnp
sub
push
mov
xchg
imul
shr
xor
jbe
adc
mov
cmpsb
mov
outsl
nop
xorb
js
into
inc
mov
scas
adc
mov
pop
xor
push
inc
aaa
pop
dec
xor
outsl
in
repnz
mov
les
jbe
test
je
cmp
mov
mov
fists
pop
inc
sbb
out
lods
pop
push
dec
mov
cmpsl
int3
test
pop
shl
pop
mov
mov
idivb
iret
lahf
mov
mov
les
pop
mov
cmp
mov
aaa
in
cmp
inc
fidivs
clc
push
les
repz
push
push
pop
lock
pop
xchg
sub
xchg
xchg
mov
lods
rclb
nop
rolb
jnp
dec
sarb
xor
ret
push
xchg
lods
call
or
push
bound
jne
inc
mov
addl
adc
ficoms
and
shlb
pop
pop
repnz
test
push
scas
push
jb
vshufps
cmpsb
add
jne
inc
push
ss
dec
pop
lahf
dec
mov
or
lcall
inc
push
or
mov
cwtl
test
mov
nop
cmp
in
push
daa
lret
repnz
lar
in
scas
xchg
mov
xor
or
inc
in
movsl
mov
test
and
cs
push
jns
loopne
shlb
out
int3
inc
fmull
dec
adc
jo
ret
inc
push
or
cmp
ja
divb
ret
sub
popa
std
jb
xor
mov
js
sbb
xor
or
push
sahf
sub
sbb
mov
idivb
cmova
jmp
pop
sub
cmpsb
clc
enter
mov
push
push
mov
and
xor
mov
nop
adc
push
je
xchg
movsb
add
lahf
xchg
mov
rol
notb
fnop
addr16
push
scas
cwtl
fucomip
jno
popa
ss
push
xor
sbb
imul
sub
jle
roll
push
outsl
and
add
xor
std
test
xchg
lea
je
and
mov
push
scas
rclb
in
cltd
sti
inc
stc
and
stos
and
dec
nop
mov
mov
out
push
nop
repz
je
mov
popf
ljmp
jnp
fdivl
cltd
mov
fbld
lods
dec
jge
and
scas
jecxz
popa
pusha
push
sbb
orb
mov
inc
popa
fildl
mov
mov
aad
add
gs
and
pop
ljmp
add
sti
sbb
mov
jbe
cli
pop
inc
stos
nop
imull
ret
sahf
in
xchg
int
add
or
cmpsb
loopne
inc
cmp
data16
sbb
divb
in
inc
aad
push
clc
test
out
mov
neg
mov
psllw
jle
mov
jb
add
sbb
push
jg
mov
sbb
das
in
mov
jbe
adc
std
or
cmp
mov
inc
jge
std
movsl
repz
lret
movsl
into
sbb
xchg
jae
inc
iret
std
insb
pop
jns
jmp
and
aad
jle
mov
mov
nop
mov
pop
movsb
dec
cmp
ret
mov
mov
xchg
popa
mov
inc
push
in
jno
mov
movsl
mov
inc
shl
notb
aaa
mov
inc
addr16
and
leave
nop
loopnew
pop
daa
shrl
adcb
mov
inc
xchg
stos
cmp
fnstsw
jae
push
out
dec
shll
sti
in
mov
ret
sub
test
push
ss
xchg
imul
movsb
sbb
lahf
mov
xchg
mov
inc
out
push
xchg
jnp
test
pop
dec
in
fbstp
jge
arpl
std
leave
mov
inc
xor
sbb
scas
imul
pop
mov
aad
pop
pop
push
xchg
sbb
xor
add
xor
pop
mov
sbb
mov
mov
loope
shll
mov
ficoms
mov
inc
pop
pop
jmp
sub
sub
andl
test
daa
test
cmc
cmp
inc
push
xor
hlt
sbb
xchg
jle
leave
ljmp
insl
push
inc
pop
xor
les
push
int
test
mov
outsb
aad
sub
dec
mov
cmc
jns
imul
sarb
jne
push
mov
into
mov
into
cwtl
vcvtpd2dq
out
sub
scas
xor
mov
sub
aaa
imul
mov
movsl
lret
adc
fcomp
push
pusha
mov
add
jb
push
xchg
mov
std
push
mov
sub
popa
hlt
dec
sahf
mov
shll
or
add
add
cmpsl
int
loope
or
ljmp
stc
xchg
jg
add
dec
lods
jg
js
call
adc
adc
or
mov
pop
jnp
sub
aas
xor
pop
xchg
loopne
cmpsb
stos
mov
sbb
ss
ret
xchg
movl
gs
jmp
sbbl
out
mov
push
loope
cmp
lret
cwtl
sub
clc
and
rorl
stos
into
sbb
sbb
mov
mov
int3
mov
adc
add
xlat
mov
int
jp
leave
cmpsl
mov
aad
mov
scas
push
ja
lods
gs
int
call
pop
jno
mov
adc
dec
push
lds
jmp
pop
xchg
xchg
sbb
les
mov
push
push
mov
in
int3
jno
test
stos
cmp
jge
mov
jno
roll
lods
scas
ljmp
and
mov
sub
xchg
jb
enter
mov
inc
or
lds
jge
out
or
inc
pop
loopne
push
xchg
adcb
repnz
lods
test
jecxz
adc
ja
cmp
mov
xchg
xchg
xchg
mov
jne
or
jbe
lock
mov
jmp
inc
lcall
nop
add
stos
xchg
mov
dec
cmp
pop
xchg
xor
xchg
inc
sub
mov
out
sbb
repnz
xor
mov
mov
or
cmp
xlat
orb
fwait
mov
xor
into
push
mov
outsb
inc
and
inc
xchg
aaa
mov
lods
cwtl
mov
cmp
fs
cli
daa
mov
movsl
les
xchg
adc
and
sub
jl
mov
stos
push
test
sub
fistps
jbe
rcll
mov
lods
mov
enter
cmc
jmp
imul
js
add
dec
lods
mov
pop
pop
movsl
mov
or
mov
mov
add
push
dec
jo
sbb
cmpsb
int
outsl
lcall
push
sub
pusha
push
sahf
mov
jbe
mov
mov
ja
jmp
sbb
dec
popf
js
mov
or
jmp
dec
mov
inc
mov
cmpsb
inc
mov
lods
jno
mov
push
mov
cmpsb
outsl
ljmp
xchg
fisubl
sbbl
dec
xor
adc
cmp
xor
stc
jne
aam
xor
lods
pop
ds
mov
aam
aas
leave
lock
and
sbb
sbb
nop
addb
and
mov
mov
mov
xor
int
sub
es
inc
dec
add
sbb
mov
xchg
int3
mov
les
insl
mov
rcll
cmp
mov
sub
and
xchg
in
sub
shlb
aad
idiv
inc
loope
xchg
in
scas
lahf
repz
mov
pop
push
inc
cs
push
jbe
sub
cld
mov
push
es
ror
sbb
mov
repz
aam
xor
jge
movsl
push
lds
nop
adc
outsl
js
aaa
pop
pop
popf
mov
xchg
mov
push
or
pop
xchg
push
daa
mov
ret
int
xor
xchg
cmp
hlt
mov
xorb
aam
inc
out
sbbl
sarl
push
imul
push
mov
inc
dec
xchg
mov
push
dec
das
lods
add
enter
scas
pop
push
mov
testl
cs
filds
and
into
out
ljmp
dec
pop
rorl
adc
push
xchg
dec
pop
push
adc
mov
pop
xchg
je
mov
bound
ss
adc
push
xor
arpl
pushf
call
das
enter
movsl
cld
mov
ret
aaa
aam
inc
dec
int3
aad
cmpsl
inc
loop
mov
inc
pop
push
adc
ljmp
insl
dec
xor
sahf
shrb
or
inc
dec
mov
dec
xor
jbe
jbe
ljmp
iret
movsb
aas
les
mov
in
shr
insb
fs
dec
lds
jg
inc
lods
jmp
data16
inc
inc
xor
imul
mov
aas
cld
std
test
sahf
sub
aas
mov
out
movsb
sbbl
addl
mov
cmc
mov
pop
inc
xchg
jle
dec
or
inc
ret
mov
scas
pop
lret
and
popf
mov
iret
cmp
addr16
iret
adc
inc
adc
mov
or
push
and
stos
xchg
iret
aas
nop
pop
imul
ja
icebp
push
aaa
lret
inc
ss
push
das
mov
ljmp
jae
outsl
fdivs
jb
xor
xchg
fnstcw
cmp
das
pop
mov
push
seto
lods
lea
mov
nop
pushf
les
icebp
push
jmp
jae
mov
fwait
mov
nop
dec
or
sub
push
sbb
int3
and
pop
in
mov
aaa
pop
jle
fldenv
push
ss
push
or
lods
out
jb
push
test
jmp
nop
inc
pop
scas
dec
mov
fisttps
adc
jmp
rcl
ja
mov
mov
rcll
sbb
js
xchg
add
pop
sub
inc
mov
jge
inc
jns
inc
arpl
jecxz
pushf
enter
lds
mov
or
adc
jecxz
mov
dec
fdivr
jg
push
dec
test
call
loopne
inc
push
pop
xchg
pop
lds
shlb
cmp
pop
sbb
jmp
lds
and
sahf
xchg
mov
das
cltd
outsb
ljmp
and
fs
jne
test
and
ja
ds
fisttps
int
ljmp
mov
xchg
in
push
push
call
inc
mov
xor
dec
push
ficoms
pop
sahf
test
sti
pop
leave
sbb
jns
sbb
xchg
jmp
dec
jno
adc
inc
xchg
rorb
nop
jp
adc
and
aad
bound
xor
in
sbb
lock
mov
nop
xor
lea
out
push
jo
fcomi
push
push
test
test
mov
cmc
cmp
test
xchg
fistpll
inc
je
xor
cmp
jbe
popa
inc
aad
xchg
mov
ret
lods
int3
das
jmp
mov
fldcw
xor
sbb
das
mov
xchg
ja
mov
sub
cmp
nop
inc
mov
fldl2e
and
mov
outsl
cmp
jle
xchg
sbb
adcb
sbb
push
mov
ds
fcmovne
outsl
lahf
pop
sub
push
inc
push
inc
decb
les
test
iret
cmp
cmc
ficomps
sub
out
or
movsb
jg
nop
jo
pop
jp
cmp
mov
add
unpckhps
cmc
inc
cmp
sbb
xchg
push
push
dec
pop
pop
sbb
test
call
int
adc
dec
add
outsb
ja
rorl
std
js
test
xchg
int
or
rorb
push
inc
scas
ss
push
push
repnz
jmp
leave
mov
stos
xchg
fmul
mov
mov
sti
mov
dec
xchg
mov
xor
pushf
sub
dec
sbb
mov
adc
push
daa
inc
ret
stos
push
cltd
fnstcw
mov
mov
jecxz
int3
add
sub
push
xchg
movsl
xor
gs
mov
and
and
or
xor
dec
add
mov
nop
clc
add
test
mov
push
dec
add
sbb
test
shl
in
or
pop
jle
fsub
push
ret
je
push
xor
and
sbb
mov
shlb
shlb
cmp
ja
mov
mov
sub
pop
push
dec
push
mov
shll
rorl
or
aam
push
lods
aam
lret
jl
popf
std
mov
inc
ljmp
test
std
mov
push
ucomiss
js
es
popf
in
mov
mov
mov
aas
jl
dec
vptest
movsl
aas
sbb
push
ja
lret
frstor
inc
aas
mov
jp
rep
and
add
cld
adc
xchg
jne
cmp
and
lahf
inc
fimull
xchg
pop
sub
dec
sahf
insb
or
stos
sub
jle
inc
push
lods
xchg
scas
ss
xchg
iret
stos
or
xchg
xor
aaa
ljmp
push
clc
aam
push
subb
clc
push
fcoms
mov
push
adc
lret
inc
stc
dec
andb
fsubs
adc
xor
dec
mov
dec
subb
xchg
push
jns
jo
cli
cmc
out
adc
adc
in
fs
add
mov
lock
adc
mov
test
xchg
mov
jmp
xchg
pop
roll
aas
mov
sub
scas
jnp,pn
cmp
push
sbb
aas
cmpsb
movsl
push
inc
adc
xchg
mov
add
xchg
dec
sbb
push
sbb
fs
jmp
push
notb
dec
ss
fdivs
add
cmpsb
and
in
das
push
test
push
scas
cmp
aas
sbb
push
aas
dec
rol
call
push
divb
fcmovbe
fnstenv
mov
mov
cmp
adc
scas
outsb
xor
imul
xor
aam
and
cmp
fsubrl
call
outsl
mov
pusha
movsb
mov
ss
and
rclb
pop
mov
enter
arpl
dec
pop
mov
das
test
je
loopne
lds
mov
xor
lock
imul
mov
or
push
push
ret
cmc
out
out
test
xchg
or
jnp
add
out
jg
sub
push
addr16
jp
mov
mov
dec
mov
es
scas
adc
xchg
das
pop
insb
pop
nop
dec
dec
jp
and
dec
shrl
dec
mov
xchg
lahf
leave
pop
dec
sahf
add
inc
xchg
fmull
lods
mov
and
shl
push
inc
out
jg
testb
fistpl
inc
inc
push
sub
sub
mov
jge
mov
sbb
and
pop
arpl
fsub
cld
hlt
lret
xor
jns
fcomip
pop
je
push
mov
out
in
lock
mov
inc
push
mov
push
shll
push
push
mov
pop
sbb
mov
fld
std
jecxz
mov
xchg
cltd
push
fadd
sbb
pusha
xchg
xchg
pop
inc
nop
xchg
sub
push
sti
dec
adc
nop
xchg
sbb
add
mov
xor
test
ror
mov
jg
xor
jo
inc
js
dec
mov
aam
imul
cmpsl
xchg
or
insb
jg
dec
pop
sbb
imul
les
and
retw
int3
mov
xor
test
fistpl
jecxz
out
pop
dec
lea
jecxz
xchg
arpl
lea
xchg
out
clc
push
adc
pushf
pop
dec
jg
mov
and
scas
inc
in
sbb
xor
pop
adc
scas
cwtl
or
lea
sti
adcl
xor
sahf
xchg
or
aaa
mov
rcrl
fimuls
aas
mov
dec
fs
les
cld
adc
and
or
outsb
push
inc
ja
xchg
add
push
and
icebp
shl
mov
flds
jbe
jmp
xor
xor
aas
cmp
mov
ljmp
movsl
fwait
push
out
into
in
outsb
arpl
arpl
movsl
fisubl
shrb
gs
je
xchg
pop
outsl
gs
js
test
stos
dec
clc
add
sahf
jb
xor
add
repnz
adc
lret
test
xchg
in
xchg
inc
int
neg
mov
mov
xchg
xchg
ja
sbb
fmull
adc
push
mov
clc
ljmp
sbb
push
xchg
inc
int
mov
lods
xor
and
test
subl
int
xchg
nop
jb
or
dec
adc
outsb
push
sbb
dec
pop
adc
ss
jmp
es
int3
cltd
adc
rolb
and
fidivrl
fdivrs
sbb
inc
add
repz
aas
sbb
push
fnstsw
adc
pop
leave
insl
mov
inc
stos
jns
testb
adc
cmpsb
imul
jle
or
pop
pop
push
nop
jbe
inc
jp
scas
rcrl
xchg
pushf
lea
fdivrl
xchg
test
js
xchg
jmp
inc
xchg
stos
inc
xchg
xchg
xchg
clc
xchg
mov
adc
ret
dec
ja
mov
pop
mov
rcrl
aaa
jb
gs
test
jle
fisttpll
mov
out
dec
xchg
sbb
xor
jb
xchg
iret
daa
xor
test
shrb
jmp
call
or
inc
nop
daa
dec
inc
daa
mov
jbe
cmpsl
ret
mov
inc
lcall
and
adc
leave
or
add
add
addb
push
add
adc
jg
repnz
jmp
push
rolb
mov
imul
out
inc
xchg
inc
sub
adc
ljmp
leave
out
add
lods
mov
pop
xchg
inc
fidivrl
rcrl
andl
movsl
push
fstl
lcall
repz
js
jecxz
int3
xchg
insl
inc
notb
outsl
mov
ss
push
repz
xor
lods
push
insl
xchg
sub
cmpb
mov
adc
pop
into
or
sti
or
lea
and
shrb
fcmovnb
xchg
cmc
inc
mov
std
std
mov
inc
jmp
lods
pop
dec
push
nop
fstl
jne
xor
xchg
xchg
std
add
aaa
xchg
mov
aas
mov
imul
push
jmp
xchg
aaa
jae
jns
arpl
adc
mov
daa
xchg
ret
pop
and
out
scas
dec
shl
xchg
push
adc
ljmp
or
imul
adc
mov
lods
orl
jne
dec
inc
vphaddubw
popf
iret
mov
test
mov
lahf
adcb
jb
imul
mov
fcmovnb
mov
icebp
jns
in
push
sbb
mov
aad
movsl
pop
add
outsl
dec
sti
bound
outsb
fsubl
loopne
push
jge
cmp
lods
inc
lret
sarl
adc
stc
pushf
xchg
xchg
lods
dec
pop
push
imul
outsb
popa
iret
dec
sahf
sub
test
nop
testl
aas
insl
bound
loope
push
scas
jns
les
mov
mov
into
sub
lock
mov
nop
mov
fdivl
dec
adcb
xor
jo
lahf
xchg
push
lods
nop
subl
pop
xor
xor
mov
jae
jae
decb
mov
push
jl
nop
mov
xcrypt-ecb
cmpsl
mov
movntps
daa
nop
dec
mov
push
fsubrp
je
sahf
sbb
mov
dec
mov
repnz
mov
js
test
adc
pop
lea
jmp
aas
jb
inc
in
pushf
lds
std
mov
scas
mov
repnz
nop
mov
jg
imul
sub
mov
jp
inc
push
in
ss
sbb
push
test
in
ja
test
aas
dec
lret
out
icebp
bndstx
xchg
push
test
aad
test
andl
or
int
repz
push
dec
jo
jmp
push
shll
dec
inc
xor
test
nop
push
jbe
lock
xchg
cld
mov
xor
pushl
call
cmp
push
xchg
shll
xor
add
and
pop
mov
imul
and
jp
mov
lret
mov
inc
add
ret
insl
xor
popf
loope
mov
pop
cltd
sub
mov
jg
add
ds
scas
cmp
dec
mov
mov
roll
push
dec
cli
popa
aas
jne
test
push
call
jnp
adc
cmp
js
movsl
xorb
out
mov
push
nop
outsb
outsl
sub
sahf
mov
mov
adc
jge
out
scas
mov
cmp
cmp
mov
nop
dec
ss
push
fistpl
movsb
popa
push
stc
into
inc
mov
adc
hlt
xchg
jecxz
cmp
lds
dec
jne
movb
mov
jne
mov
stos
mov
js
in
xor
in
xchg
in
jbe
mov
sub
mov
jb
jns
and
test
nop
jbe
sar
mull
sub
subb
dec
cmc
std
test
repz
mov
cmp
scas
nop
lcall
mov
push
jmp
imulb
xor
lret
mov
mov
sub
jmp
mov
hlt
xchg
out
push
aaa
lret
lahf
lds
imul
loop
mov
dec
lret
sbb
jae
jne
jo
sahf
movsl
xchg
sub
mov
fimull
je
pop
ret
adc
ja
push
scas
aaa
push
and
test
outsl
imul
sbb
in
xchg
push
fld
mov
mov
imul
dec
sbb
xchg
mov
add
push
xchg
xchg
scas
sub
loopne
fwait
cmpsl
nop
int
scas
andl
shll
sub
pop
sub
push
mov
cmp
mov
stos
mov
call
fiaddl
out
daa
dec
cmp
pop
or
jnp
and
shll
mov
adc
cmp
xchg
scas
into
sub
daa
rorl
xor
push
fisubs
push
in
sbb
pushw
sbb
mov
push
bound
pop
jnp
les
dec
nop
out
cmpsl
mov
fs
psrad
inc
adc
jmp
mov
ljmp
sete
jno
je
push
inc
adc
mov
dec
fs
mov
push
jle
call
xchg
mov
fisttpl
jb
cmp
cmp
cld
cmp
push
scas
mov
inc
xchg
dec
inc
or
inc
cmp
aad
lret
xor
mov
popf
mov
je
call
aas
sub
popa
ret
mov
xchg
inc
repnz
lds
mov
xchg
das
mov
adc
mov
scas
jecxz
cmp
and
cld
xchg
ljmp
xor
test
and
sub
jnp
inc
xor
clc
insl
dec
call
fadds
push
pop
mov
xchg
fnstenv
jae
mov
jo
pop
lock
imulb
adc
pop
in
xor
daa
dec
int
hlt
scas
mov
jg
outsb
scas
roll
outsl
lcall
call
je
call
in
jnp
jnp
dec
jb
es
lds
xor
cmp
push
sahf
mov
inc
push
sub
or
out
jg
adc
adc
xor
push
scas
pop
repz
js
xchg
inc
add
adc
jge
out
out
lods
push
mov
mov
jecxz
or
enter
jp
cmpsb
cmp
in
pop
mov
and
mov
mov
cmp
xchg
std
call
cmp
mul
push
jle
les
std
rcll
inc
or
inc
mov
add
imul
or
imul
frstor
cltd
nop
sbb
daa
cli
incl
push
mov
xor
inc
mov
sbb
xchg
rcl
xor
mov
sub
ret
jbe
adc
pop
xor
lret
mov
dec
xchg
xchg
push
ds
sarb
adc
dec
adc
jmp
popa
popf
adc
ja
sbbl
mov
pop
sahf
aam
jnp
in
cmc
imul
mov
and
xor
out
mov
pop
ljmp
aaa
imul
adc
push
sbb
mov
xchg
nop
add
and
dec
or
xor
add
push
loop
jge
jo
dec
dec
insl
jle
fcompl
dec
cmp
mov
xor
pop
cltd
jae
xchg
mov
or
out
adc
xchg
jg
inc
jae
or
out
adc
int
jne
out
xchg
incb
fcoml
fisubrs
jbe
idivl
pushf
sub
adcb
scas
sbb
or
in
push
dec
mov
addr16
or
adc
fldcw
push
pop
pop
mov
mov
cmp
scas
stos
sub
jg
in
pop
add
decl
std
test
movsb
adc
and
or
addr16
pop
fmul
push
jne
into
fsubrl
xor
push
sub
dec
push
adc
les
pop
xchg
aad
push
cmc
jo
orl
cmp
pop
testl
dec
dec
scas
scas
sub
xchg
inc
ss
test
mov
sbb
cld
aas
divb
andl
pop
push
cs
in
lcall
push
adc
inc
jbe
ret
mov
jle
ret
push
and
or
orb
std
ss
mov
jo
jns
cmp
lret
sahf
mov
jne
int3
cli
scas
xchg
clc
pop
mov
xor
jo
aaa
pop
les
leave
jecxz
rorl
jae
pop
fistpll
or
xor
xchg
xchg
inc
test
adc
or
xchg
cs
jp
imul
or
pop
jne
inc
adc
push
leave
nop
push
test
mov
sub
sub
ljmp
xor
and
js
sub
aas
add
mov
or
test
inc
icebp
xchg
cmpsl
fcomps
mov
lds
jne
xchg
shll
push
out
cltd
lcall
test
jne
dec
in
nop
xchg
cmp
push
arpl
sub
inc
push
jecxz
xchg
push
mov
inc
into
cmpsb
lods
in
movsb
into
les
cmpsb
insb
inc
pusha
add
movsl
cmp
popa
dec
and
scas
nop
pusha
adc
xchg
das
ds
mov
xchg
sub
dec
stos
xor
es
les
add
orb
jecxz
lret
mov
ret
dec
add
inc
lret
lahf
pop
sub
out
in
fsubl
mov
bnd
xor
xchg
adc
sub
js
xchg
push
sti
jno
insl
add
cmpsb
adc
leave
scas
sbb
stos
mov
jo
pop
idivb
popf
mov
mov
xchg
dec
movsl
cld
xchg
addr16
loopne
shll
pop
mov
push
arpl
scas
pop
les
loopne
mov
testb
inc
fdivrs
xor
ror
push
nop
les
xchg
mov
push
dec
mov
xor
push
shr
test
fsts
mov
jae
mov
xchg
mov
sti
lock
cli
jo
inc
pop
mov
test
lods
popf
outsb
lods
rorb
ret
insl
sarl
cmpsl
pop
mov
test
dec
sahf
jno
mov
sbb
jg
movsb
jnp
iret
mov
push
call
or
push
sub
movsl
jbe
int3
mov
popaw
fisubrs
push
jb
add
or
sbb
mov
inc
xchg
ss
sbb
leave
inc
shll
aas
sub
fdivl
out
cmpsl
push
dec
decl
inc
xlat
scas
notb
jmp
lea
leave
std
cmp
repz
push
mov
aaa
jmp
into
js
sbb
dec
inc
fxch
jmp
mov
cmc
or
dec
aaa
fstpt
lea
aad
or
and
jecxz
je
aad
ss
lods
cmc
inc
fmull
pop
mov
mov
notl
nop
jmp
xchg
popl
dec
loope
mov
std
pop
inc
outsl
movsb
push
pop
pop
test
xchg
js
sbb
mov
pop
mov
nop
push
adc
jl
cmp
call
outsb
inc
shll
push
mov
daa
pop
mov
mov
movsb
in
roll
iret
gs
inc
inc
inc
rcll
scas
mov
inc
sahf
cmp
lahf
xchg
xor
mov
movsl
fidivrs
shl
fcmovnb
aad
mov
lods
data16
cmpsb
and
int
stos
sbb
je
in
jae
movsl
in
mov
sti
cmp
int
mov
lea
iret
movsl
xchg
mov
mov
jl
xor
mov
mov
xchg
xor
or
mov
nop
dec
xchg
sub
pusha
inc
lods
fcom
imul
pop
fwait
sbb
rol
adcl
or
imul
push
sub
test
cmp
decb
mov
pop
sub
clc
cmp
test
cs
pop
pop
out
sub
out
dec
push
leavew
mov
inc
xor
mov
xchg
xchg
icebp
outsl
mov
pop
inc
fisttpl
mov
popf
lock
sbb
retw
je
inc
inc
lea
lds
xchg
jbe
mov
test
sub
xor
aad
mov
adc
jge
push
js
sti
into
mov
hlt
mov
nopl
push
pop
xor
sub
mov
test
aad
shll
adc
ficoml
jae
jae
out
jne
outsl
jno
xchg
jne
inc
xlat
call
push
rcr
icebp
adc
gs
aam
dec
jmp
mov
movsl
jne
jo
adc
dec
and
dec
mov
xchg
fisubs
ffreep
fldenv
sub
fists
fstpt
add
jge
enter
xor
push
cmp
repz
cmp
push
sbb
into
es
sub
out
xlat
mov
mov
lahf
jg
or
sbb
aad
ret
test
out
push
stc
into
inc
aaa
inc
cmc
div
and
fldl
xchg
sub
cmp
sti
sar
jns
sub
dec
aas
rol
dec
icebp
test
pop
in
inc
push
ja
xchg
daa
inc
jnp
inc
dec
test
push
jo
push
mov
fsubrl
js
push
shlb
int
add
fidivrs
jge
scas
adc
xchg
call
shrl
and
and
paddb
jb
mov
sbb
push
scas
imul
das
dec
sbb
pushf
and
push
jp
inc
lea
fistl
pop
imul
dec
rolb
cs
mov
adc
call
cmc
pop
fsubrp
lcall
jnp
jle
add
add
inc
sbb
ljmp
and
cli
xchg
mov
mov
mov
pop
vcvtsi2ssl
cmpb
jnp
mov
sahf
mov
jne
xchg
xchg
repz
push
test
aas
xor
or
add
loope
outsl
xchg
adc
sub
ja
adc
add
cltd
lock
mov
iret
xchg
sbb
mov
dec
dec
mov
mov
test
into
rorb
xchg
jle
jnp
movsl
fabs
jne
sti
sbb
fisttpll
scas
fisttpll
outsl
mull
mov
push
sbb
adcl
sbb
pop
xchg
mov
add
or
xchg
jno
ret
lea
imul
iret
adc
ss
dec
nop
clc
rcr
cli
lret
mov
hlt
jns
cld
cmp
pop
mov
enter
clc
fildl
xchg
inc
aas
neg
cli
decb
xor
dec
std
mov
in
and
xchg
loope
adc
adcb
push
xchg
int3
xor
xchg
test
movsl
jp
adc
dec
imul
xchg
test
in
clc
mov
adc
xchg
mov
popa
jne
leave
and
xchg
arpl
into
and
jle
gs
sub
inc
mov
icebp
popf
ljmp
and
ror
push
sbb
sub
cmp
nop
add
push
mov
pop
and
xchg
adc
pop
mov
daa
nop
jns
xchg
clc
aaa
pop
adc
std
pop
mov
adc
pop
cmp
ret
jo
xchg
and
xlat
icebp
lcall
inc
pop
xchg
scas
mov
loope
push
nop
imull
or
xor
mov
lods
jb
push
or
scas
dec
lcall
mov
mov
push
movsl
sub
add
sahf
adc
fdivs
inc
lods
push
ror
and
arpl
jl
sbb
test
push
xchg
fildl
and
inc
fwait
or
or
xchg
jb
add
cs
ret
fdivl
push
notb
xor
loopne
push
rorl
ret
mull
mov
push
adc
je
bound
mov
xchg
xor
addl
cmp
je
hlt
iret
jae
dec
push
ss
test
stos
bound
cmp
inc
jmp
test
stos
insl
mov
scas
fmuls
popa
jbe
mov
fnstsw
xor
movsb
push
mov
fyl2xp1
daa
lock
cwtl
in
aam
inc
sbb
xchg
lds
out
inc
push
inc
push
aas
add
out
push
mov
or
xor
aad
dec
ret
aas
cmpl
lods
xlat
cmp
jne
push
adc
sbb
pushf
icebp
mov
cltd
or
stos
fstp
lods
mov
add
stos
or
stos
add
xchg
nop
pop
mov
sbb
pusha
aam
and
cwtl
adc
shrb
mov
xor
mov
dec
adc
and
or
push
xchg
sub
pop
jne
sbb
bound
aaa
ret
and
ja
movsb
int3
sub
jnp
push
test
stos
sub
ja
ljmp
arpl
and
xchg
mov
sub
out
shrb
xchg
cmpsb
cmp
dec
repz
lcall
aad
mov
sub
xor
mov
jae
lret
mov
inc
xchg
ja
or
xchg
inc
lret
xorl
lods
sub
inc
xor
pop
fwait
adc
jg
push
aas
xchg
idivl
cmp
jmp
cmc
and
orb
out
mov
cld
mov
add
leave
mov
test
leave
xchg
pop
je
gs
gs
dec
daa
fnsave
ljmp
pop
inc
aam
aam
pop
jg
rclb
xchg
test
xor
dec
jbe
movsl
int
movsb
pop
dec
imul
xorl
jge
sub
ffreep
pop
cmp
dec
cmp
aaa
ret
test
xor
cmp
gs
hlt
int
ja
sbb
adcb
xchg
test
inc
fmuls
cmp
push
add
mov
loope
cmpsb
iret
jne
push
mul
xor
sub
push
shr
test
xchg
sbb
mov
push
andb
loop
xchg
sti
pop
push
fmul
cmp
mov
mov
cld
std
movsl
push
sahf
push
mov
jbe
jb
adc
enter
lods
push
mov
pop
out
push
jne
inc
adc
push
push
lret
test
mov
adc
jo
notb
push
pop
in
mov
outsb
adc
and
push
pop
push
sub
shlb
stos
jl
mov
movsb
stos
sub
mov
mov
fs
lahf
mov
loop
shrb
mov
inc
cmp
cmp
mov
dec
aas
jnp
or
xor
call
imul
jp
fsts
push
sbb
sub
push
mov
inc
sti
js
push
cmpsb
sub
mov
ja
pop
lea
or
lcall
fsts
xchg
js
ss
mov
pop
jo
cmp
mov
sub
testl
gs
pop
insl
xor
adc
outsl
negl
js
mov
pushf
test
sbb
mov
pop
mov
xor
fildll
mov
test
adc
mov
pop
icebp
je
dec
push
leave
movsl
call
jne
adc
jo
int
and
push
xchg
ja
adc
loopne
sbb
mov
xor
push
lea
mov
xchg
sbb
ljmp
aam
adc
mov
test
adc
dec
sbb
inc
in
and
fnsave
popf
push
pusha
pop
push
addb
pop
aaa
push
lcall
nop
xchg
test
dec
jbe
xor
or
mov
push
mov
loop
inc
xor
fdivs
mov
dec
nop
out
iret
pop
cmp
pop
hlt
ret
adc
call
movsb
add
mov
mov
lahf
dec
js
pop
jmp
xchg
daa
pop
les
std
mov
mov
mov
lea
mov
pop
mulb
cmpsl
test
mov
rorl
lahf
scas
lcall
orb
lds
out
mov
add
push
lock
loop
jmp
jae
xor
arpl
fmuls
inc
arpl
xor
cli
xchg
and
mov
sbb
push
inc
dec
leave
jo
aam
and
xor
dec
mov
repz
xor
xorl
and
inc
mov
fsubl
mov
sub
push
inc
xchg
shll
outsb
adc
nop
clc
add
dec
sub
mov
mov
mov
loope
adc
pusha
cmpsb
sbb
push
nop
outsb
hlt
mov
aaa
lahf
sbb
hlt
jg
mov
js
sub
shlb
add
sbb
dec
xchg
jmp
push
mov
sub
repnz
cmp
adc
push
jo
lret
sbb
push
jmp
mov
jl
adc
and
ret
bound
mov
jnp
jecxz
push
nop
syscall
xchg
push
mov
lods
jno
inc
lods
jg
pop
repz
out
lds
lcall
insl
mov
push
mov
xorb
or
pop
or
xchg
leave
lret
adc
xchg
mov
xchg
cmc
mov
scas
inc
out
add
sub
push
xchg
ret
nop
adc
add
int
pop
pop
es
fwait
dec
xchg
inc
push
ret
fmull
mov
mov
popf
pop
adc
mov
fs
xchg
mov
fdivl
xor
sbb
mov
nop
mov
sbb
sbb
and
push
test
imul
adc
fs
xchg
push
das
mov
push
and
adc
xchg
pop
pop
push
add
mov
sub
push
jg
pop
dec
mov
hlt
pop
les
aas
rol
adc
cli
ret
sub
mov
push
inc
sbbb
jl
dec
xchg
and
dec
pop
ret
fstpl
xor
lret
nop
enter
jnp
add
mov
inc
mov
scas
fwait
scas
leave
push
push
jg
cltd
dec
scas
mov
inc
daa
loop
inc
pop
pop
jne
das
enter
jo
pop
jp
insb
outsl
fnstenv
sbb
jmp
gs
nop
ret
inc
adcl
aad
push
xchg
fstpl
pusha
jne
sub
int
lea
xchg
adc
xor
leave
js
aas
into
ds
push
loopne
pop
inc
into
mov
in
jle
push
pop
ret
nop
mov
pop
mov
ret
out
stc
lea
xchg
sbb
sub
std
and
int
je
pop
mov
js
and
push
ds
mulb
adc
xor
jne
or
xchg
and
mov
cli
rcrb
jmp
push
sbb
xlat
xchg
fldt
shlb
daa
in
in
add
cmp
mov
xchg
js
rorl
xchg
dec
in
ja
mov
movsb
notl
adc
out
lds
add
addr16
popa
in
or
shl
sbb
in
filds
imul
xchg
lret
cmp
loope
fwait
xor
fisubs
sub
cmpsb
sub
adc
movd
xor
lea
ljmp
xchg
jo
and
pop
ret
xchg
fstl
pop
mov
push
mov
rcll
and
mov
inc
xchg
out
push
divb
sub
nop
and
jns
test
jb
stos
nop
ret
testl
mov
mov
fwait
xor
fistpll
imul
mov
fisubs
inc
daa
mov
dec
pop
pop
mov
jb
hlt
sbb
pop
mov
test
cmp
mov
cmpl
mov
insl
test
jp
xchg
clc
fistl
add
jbe
es
daa
loop
fs
add
xchg
xchg
or
jl
test
rcrl
mov
xchg
add
push
imul
dec
mov
mov
pop
test
mov
movsl
adc
cmpsl
sub
mov
out
in
arpl
xor
push
hlt
loop
mov
lock
mov
inc
inc
cwtl
incl
sbb
xor
lock
sbb
add
mov
bound
and
xor
leave
ss
fdivl
vpsubusb
mov
jp
loop
pop
pop
iret
test
aad
and
xchg
xchg
fidivl
mov
and
mov
gs
leave
or
sub
mov
sarl
sub
add
sub
fcompl
ja
dec
jbe
loope
and
outsl
cmp
adc
sub
adc
add
mov
mov
rorl
out
out
les
popf
adc
mov
pusha
nop
call
push
cmp
adc
movsb
mov
sub
pop
divb
es
dec
mov
push
and
add
inc
enter
mov
jns
cmp
xchg
mov
or
jmp
xlat
in
rcrb
mov
or
and
and
orb
xchg
dec
aad
cltd
hlt
popf
stos
hlt
sub
repz
mov
inc
mov
or
or
add
pushf
ret
pop
mov
push
jmp
int
push
sbb
mov
lahf
stos
faddl
cs
outsl
xchg
jp
std
clc
das
ret
xor
lods
xor
xlat
xchg
shll
int3
dec
js
mov
rol
sarl
adc
or
jne
lcall
filds
addl
mov
inc
xor
mov
dec
cmp
mov
hlt
dec
nop
jmp
mov
push
lods
dec
js
scas
bound
fistpl
daa
out
scas
lock
fisttpl
or
aas
lea
xchg
and
mov
push
cmp
aad
mov
std
pop
xchg
pop
fisubrs
inc
xor
or
js
inc
dec
xor
mov
pop
dec
mov
fidivs
pcmpgtw
repz
fidivrs
ja
test
mov
jmp
jle
pop
push
lods
jns
out
jge
push
fiaddl
pop
push
dec
enter
mov
mov
jb
js
ss
push
inc
icebp
stos
pop
pop
xchg
pusha
pop
jo
enter
xchg
or
ret
xchg
push
addl
xchg
mov
add
nop
push
cli
mov
sub
xchg
sbb
repz
mov
jns
dec
lret
push
std
sub
adcb
jge
sub
loopne
and
into
jg
push
cmc
fldenv
insl
sub
lods
jecxz
mov
lods
adc
inc
push
jno
push
or
dec
push
cmpsb
pop
test
call
fnstenv
cld
push
xchg
imul
mov
cmc
xchg
xor
xchg
and
push
aas
outsl
jmp
sbb
out
aam
imul
gs
aas
and
mov
and
sbb
add
xchg
xchg
push
inc
cmp
ss
sarl
push
or
and
repz
pop
sti
stos
out
mov
add
or
push
popa
or
or
and
cmc
xchg
jne
ss
cmp
adcl
push
cmp
pop
and
pop
mov
test
jo
xor
jno
pop
pop
add
sbb
psadbw
outsb
xor
xchg
xor
cmp
lcall
mov
jns
and
leave
cmp
int
int
or
inc
adc
sub
mov
nop
adc
push
scas
mov
mov
dec
bound
in
pushf
xor
sahf
hlt
or
jne
popa
inc
push
xchg
add
jne
inc
jle
leave
xchg
jg
pop
and
inc
les
push
inc
inc
test
shlb
lret
jo
add
sar
jne
roll
lods
jg
sahf
pop
mov
data16
fcomps
mov
mov
jge
orl
push
or
lret
loop
lock
adc
xor
into
inc
nop
ja
fidivl
mov
mov
pushl
mov
xchg
lea
xor
aam
nop
add
fsubrl
jnp
cli
jmp
pop
lds
add
dec
test
push
shlb
les
cmpsb
lods
lea
mov
repz
nop
jg
mov
fs
lods
sbb
xlat
xchg
andps
add
loopne
sbb
push
mov
inc
out
xlat
jge
mov
push
push
into
sbb
inc
mov
sub
mov
pop
inc
ret
mov
xorl
mov
and
sub
sub
add
jne
inc
adc
xor
dec
mov
shrb
adc
mov
imul
sti
push
lea
xorb
aas
sbb
xchg
movsb
mov
mov
pop
mov
call
scas
mov
push
mov
les
dec
sbb
xchg
xchg
jg
xor
outsl
push
inc
mov
addr16
in
dec
call
dec
fcomip
push
sbb
leave
pop
dec
int
cltd
lahf
fldt
inc
outsl
daa
outsl
rorb
mov
loope
push
dec
jp
decb
pop
or
nop
push
jg
xchg
lods
aaa
pop
jecxz
mov
xor
mov
inc
or
dec
mov
pop
std
stc
pop
lds
sahf
popf
push
shll
pop
idivb
ret
pandn
xor
jecxz
js
pop
push
popf
jne
nop
jl
mov
xor
mov
dec
lret
orb
not
dec
daa
nop
add
test
mov
sbb
mov
stos
mov
data16
into
push
hlt
jl
ret
or
cmp
mov
fdivl
divb
add
shrl
pop
inc
xchg
push
shrl
mov
pop
sbb
push
dec
aam
pop
jg
mov
mov
inc
ss
push
lock
insb
ret
rorl
in
xchg
je
adc
aaa
pop
pop
lea
insl
aad
jns
jmp
shll
int
ds
jmp
jp
jno
add
repnz
leave
pusha
mov
dec
mov
inc
addr16
and
push
inc
aad
jecxz
mov
push
fnsave
xchg
xlat
xchg
aad
mov
scas
add
mov
push
xchg
ja
cmc
loop
std
jns
sub
jmp
cmp
or
mov
aad
inc
and
xchg
lret
das
push
sahf
pop
sub
outsb
testb
push
stc
aaa
mov
ja
push
in
jle
lahf
test
cwtl
push
sbb
adc
jle
fdivrs
nop
jne
call
sub
test
fdivr
and
mov
test
dec
lahf
mov
mov
notb
scas
ret
xor
fadd
negl
pop
cmp
mov
stc
gs
mov
iret
push
stos
sbb
pusha
or
aas
mov
bnd
lahf
pop
leave
imul
xor
out
inc
loopne
inc
dec
add
das
push
int3
test
in
pop
mov
jns
or
int
xchg
inc
cmc
xchg
xor
mov
mov
mov
lidtl
mov
ret
clc
pop
cmc
lcall
mov
push
insb
inc
aaa
xor
es
aas
inc
icebp
out
cmpl
mov
xchg
fs
push
dec
xchg
insb
jg
imulb
arpl
adc
lahf
lret
push
lods
jo
popa
cltd
mov
int3
jns
inc
ja
pop
sub
lahf
mov
sub
push
bound
xchg
mov
ret
xchg
stos
stos
fucomi
cli
ret
push
cmc
js
shlb
daa
popa
movsl
push
mov
adc
sub
scas
fistps
jl
mov
nop
mov
sarb
xchg
ja
lock
pop
jo
sarl
outsl
test
sar
adc
pop
lods
pop
lret
hlt
dec
mov
test
xor
xchg
pop
fwait
adc
jnp
test
adcl
mov
jb
push
rcll
mov
mov
cmpl
inc
push
cwtl
aam
mov
jp
sti
repz
jb
jnp
out
jo
mov
jge
sbb
mov
inc
call
add
call
add
mov
out
jae
mov
dec
pushaw
cltd
fsincos
inc
xchg
aam
sbb
sbb
xchg
push
mov
jmp
nop
fsts
add
imul
ljmp
sbb
imul
sub
aaa
ds
sbb
push
fdiv
mov
fldl2t
sbb
fdiv
lcall
xor
jnp
sbb
mov
negb
imul
ja
shlb
test
dec
pop
imul
stc
inc
sbb
mov
sahf
pop
dec
nop
std
out
inc
push
push
and
sub
outsb
mov
lock
inc
xchg
inc
lahf
push
in
out
lahf
mov
je
dec
cmp
cmp
aas
nop
rcrl
js
add
inc
subb
xchg
xor
push
jle
test
mov
push
insb
xor
xchg
fbstp
repnz
and
inc
adc
dec
in
repnz
cltd
sub
fs
cltd
mov
pop
add
mov
rcll
push
lcall
and
mov
jp
mov
dec
ljmp
adc
std
inc
push
jg
jmp
popa
fisttps
push
push
push
sbb
stos
cmpsb
cltd
push
push
inc
iret
ret
push
pop
and
in
add
loopne
jns
outsb
out
jno
scas
mov
arpl
test
lcall
push
pusha
sbb
add
xor
in
jo
std
lods
sub
push
pop
xchg
and
mov
addr16
jle
or
xor
das
rorb
test
cmp
push
imul
dec
cli
mov
addr16
or
ret
aad
jmp
ficompl
imul
popf
sub
jno
mov
inc
aaa
xlat
leave
mov
nop
lret
and
mov
movsb
push
fcoml
lret
xchg
and
lods
pop
xor
sbb
jg
jg
pop
xor
cmc
push
sub
push
add
iret
pop
and
popa
mov
subl
lock
lret
add
lret
scas
add
loope
stc
addl
sbb
dec
in
aaa
or
pop
sahf
int3
ljmp
mov
adc
xchg
js
mov
jmp
xchg
cmc
cmp
lods
inc
xchg
insl
nop
cmp
xor
aaa
imul
cltd
stos
scas
xor
enter
add
arpl
push
fsts
fwait
mov
out
dec
pop
ljmp
sbb
jae
fimull
test
das
or
mov
inc
test
sarb
and
aaa
pusha
or
incl
push
enter
mov
sub
sbb
add
sbb
xchg
push
and
lds
pop
aam
sbb
sub
mov
jmp
cltd
sub
mov
ljmp
mov
hlt
aaa
ret
stos
adc
xor
inc
jp
sub
stos
test
push
nop
scas
add
dec
je
bound
mov
jbe
adc
sbb
lret
fldenv
sub
shll
sub
aas
jl
push
pop
jp
inc
xchg
mov
jl
aas
mov
rorl
lahf
sub
cmc
mov
xchg
xchg
out
pop
jbe
inc
notl
push
dec
stos
aam
mov
arpl
adc
insl
jl
movsb
and
out
mov
cmp
sarb
xchg
mov
inc
js
xor
std
sbbl
add
mov
push
shlb
mov
in
jne
stos
sti
test
loop
xchg
in
dec
movsl
mov
push
push
stos
jmp
std
inc
lea
subb
xchg
ljmp
out
adc
icebp
adc
ret
out
popf
leave
insl
xor
sbb
repnz
mov
jmp
push
xor
in
push
js
inc
push
fdivs
dec
xchg
shll
xchg
inc
into
inc
push
jae
xor
in
aas
daa
in
repnz
nop
testb
xchg
popf
push
xchg
cs
ja
imul
iret
pop
adc
dec
jge
ljmp
out
lcall
sbb
mov
ss
mov
arpl
lds
xchg
xor
mov
ret
jbe
dec
mov
imul
mov
aaa
loope
iret
cmpsl
ja
nop
dec
mov
repz
push
mov
cmpsl
pusha
cmpsb
xor
test
mov
mov
sub
jle
rcr
enter
call
mov
pop
nop
xchg
sub
sub
xchg
sbb
adc
mov
xor
andb
mov
nop
icebp
push
and
dec
jbe
scas
mov
push
mov
scas
mull
hlt
mov
cmp
scas
test
iret
js
shll
das
in
aad
fistpll
mov
mov
ficomps
out
push
mov
repnz
jmp
pop
pop
add
xchg
mov
testl
lsl
les
fdivrs
and
test
scas
imul
fadds
jle
mov
pop
or
lds
ljmp
cltd
loop
push
mov
popa
jle
insb
mov
stc
lock
aam
or
les
xor
stos
lock
aas
jbe
xchg
fsubl
aam
lods
sub
xor
in
dec
pop
inc
inc
mov
dec
jge
popf
stos
les
mov
in
and
mov
sub
push
mov
xor
or
mov
jle
push
xor
sbb
pop
jmp
mov
sub
inc
cltd
cwtl
jnp
movsl
sbb
cmpsb
int
lret
mov
movsl
mov
mov
bound
movsb
mov
and
cmpsl
mov
loope
dec
xchg
jne
add
ss
cmpsb
pop
and
sahf
nop
inc
addr16
lds
cmp
ja
sbb
inc
pop
out
jg
sbb
mov
or
stos
ret
mov
xchg
iret
cmpsb
sti
mov
cmp
or
mov
mov
idivl
push
stos
mov
cmp
movsl
addr16
dec
pop
mov
arpl
mov
pop
nop
mov
scas
outsl
push
jnp
sub
lds
pop
imul
nop
jbe
out
add
rorl
int
dec
adc
sbb
xchg
test
add
cli
sub
loope
loopne
lods
mov
mov
dec
repz
sub
or
out
xor
jbe
xor
sub
ja
in
aas
movsb
stc
test
clc
cmpsb
xor
cmp
mov
mov
fisubrl
lahf
mov
mov
int
test
xchg
push
sbb
fisttpll
pushf
jno
iret
mov
push
aad
cmp
scas
fidivrs
or
add
ljmp
jo
int3
xchg
sub
lahf
sbb
call
enter
sbb
leave
ret
lods
jo
adc
js
adc
fwait
dec
cmpsb
aad
jo
pop
mov
xchg
nop
sub
pop
cwtl
mov
inc
xor
inc
into
mov
out
ret
pop
ret
or
inc
inc
hlt
int
aas
icebp
test
sbb
xor
cmp
inc
xor
aad
push
adc
imul
and
push
repz
loop
jle
jge
ret
inc
aaa
inc
pop
sbb
sbb
add
mov
jg
push
xchg
add
in
test
int
in
int3
stos
cltd
cmp
mov
or
lret
popa
pop
mov
mov
jmp
or
inc
push
aaa
inc
mov
pop
lods
aad
mov
xor
push
repz
outsb
jbe
sbb
mov
mov
leave
xchg
jo
insl
mov
jg
jo
mov
adc
lods
xchg
mov
pop
sbb
mov
mov
test
aas
aas
mov
add
inc
jle
in
mov
push
int
repnz
testl
or
stos
sub
dec
mov
test
negb
sub
xor
hlt
dec
cmp
scas
jg
or
mov
xlat
jg
cmp
xchg
sbb
ss
jg
dec
les
mov
ret
movsl
push
aad
mov
shr
and
push
pop
jle
mov
pop
dec
push
dec
shrl
pop
mov
gs
adc
push
sbb
xchg
sti
jmp
pop
pop
cmp
jge
shlb
xor
add
inc
dec
gs
iret
fs
push
or
mov
mov
nop
mov
xor
mov
jbe
mov
jno
cmp
xchg
xchg
pop
sub
nop
mov
pop
push
jae
cli
jecxz
fisttpl
ljmp
mov
mov
in
ret
cmpsl
jnp
mov
in
nop
jnp
std
cmp
in
dec
xorl
shl
cmp
icebp
jo
dec
jg
mov
sbb
test
sbb
fnstenv
fwait
push
add
push
mov
insl
scas
mov
js
test
inc
jne
xchg
addr16
sbb
push
push
bound
cmpsb
mov
fadds
cmpsl
sub
mov
xor
test
xchg
ds
jmp
cmp
mov
aas
mov
pop
adc
sub
ljmp
stos
mov
adc
jmp
std
aas
inc
bound
push
call
xlat
xchg
in
test
nop
cmpb
out
out
loop
jnp
add
je
loop
daa
outsl
cmp
mov
arpl
adc
sbb
aaa
shll
mov
inc
cmp
dec
inc
jmp
rcrl
xchg
js
gs
or
fnstsw
mov
mov
lret
int3
sbbl
cmpsb
mov
jae
pop
outsl
popf
pop
movsl
mov
lahf
cmpsl
movsb
std
push
into
pop
insb
xchg
jae
mov
mov
lret
shl
out
mov
mov
into
mov
out
cwtl
lcall
outsb
pop
repz
jne
jno
jnp
scas
jae
into
fildl
leave
adc
lahf
adc
pop
mov
stos
pop
stos
int
xor
or
xor
les
iret
fildl
jnp
enter
outsl
shl
out
stos
fimuls
out
outsl
stos
mov
cmpsl
js
jl
sbb
test
mov
and
pop
mov
adc
cmp
add
fs
dec
xchg
nop
mov
mov
scas
sbb
inc
and
sbb
adc
mov
jg
mov
or
mov
clc
incl
sahf
inc
sbb
int
ds
scas
inc
aas
in
mov
mov
lock
adc
roll
cmp
cmp
inc
pop
std
mov
cli
subl
sub
xchg
cltd
test
mov
and
mov
xchg
aaa
lret
aas
andb
jo
xchg
inc
lock
sub
xchg
push
cmpl
pop
leave
sarl
cmpsb
fcmove
jno
mov
and
sahf
cmpsl
lock
mov
xor
lods
sarl
aam
jmp
out
fistpll
loope
jb
movsl
xchg
into
push
push
xchg
ret
stc
aaa
mov
xchg
inc
int
mov
jbe
xor
adc
mov
mov
jnp
cmp
xchg
and
sbb
dec
and
imul
cwtl
push
std
stc
sub
int3
xorl
xchg
xchg
xchg
loopne
xchg
ss
std
aad
addr16
jle
leave
scas
xor
cmc
pop
inc
adc
lret
xchg
cmp
jl
adc
cmc
aad
addr16
int3
inc
xchg
mov
in
jnp
mov
hlt
adc
fcmovu
cmp
testb
daa
sub
xchg
xchg
arpl
ret
mov
sbb
add
xor
mov
and
lods
xchg
addb
cmp
jle
scas
popf
daa
ja
iret
pop
imulb
push
fcomps
push
movsl
mov
sarl
outsb
xor
push
scas
fistpl
cld
into
sub
sbb
out
xchg
mov
nop
out
pop
mov
lds
mov
pop
mov
pop
pop
ds
popa
adc
mov
movsb
mov
add
neg
je
mov
sarl
pop
and
call
into
inc
fdivl
cmp
xchg
scas
insb
pextrw
scas
sub
inc
lret
mov
add
scas
pop
mov
repnz
add
outsb
xchg
lret
movsl
mov
dec
out
jmpw
mov
lock
ja
mov
add
dec
dec
out
arpl
jge
ror
dec
fbstp
xor
inc
dec
pop
or
pop
cmp
ja
pop
sub
pop
mov
sub
jnp
adc
pop
movl
movsl
or
jp
jno
test
xlat
ffreep
mov
iret
jae
sar
icebp
push
enter
decl
mov
ss
mov
mov
fcoml
pop
mov
dec
add
fidivl
mov
aad
push
jns
push
jmp
inc
mov
push
ss
cmpsb
rorl
or
jg
push
arpl
insb
push
dec
scas
mov
inc
cmp
js
pop
fildl
push
orb
cmp
pushl
in
inc
inc
or
xor
pop
movaps
jbe
jno
xor
mov
xchg
out
mov
mov
push
std
sbb
stos
sub
sub
cmpsl
jmp
aad
jbe
aas
jns
mov
push
pop
pop
xchg
cltd
imul
cld
loope
fisubrl
push
pop
scas
aaa
sub
xchg
movsl
mov
jecxz
inc
jg
or
sbb
push
push
out
int
xchg
dec
sbb
pop
mov
xor
stc
icebp
movntps
jge
and
cmpsb
adc
adc
cmp
mov
xor
pop
jb
icebp
sahf
pop
dec
xchg
test
dec
js
mov
lods
out
iret
sbbl
ror
aas
jno
dec
add
je
sbb
and
sbb
push
stos
pop
sarl
imul
pop
xchg
or
aaa
push
icebp
xor
popa
add
xchg
jnp
xor
jnp
and
mov
dec
dec
test
sbb
lds
imul
xor
adc
cmp
push
adc
testb
aaa
aas
xor
stos
rorl
pop
mov
scas
insl
xchg
notl
push
mov
inc
sbb
sub
pop
aad
push
xor
inc
popa
shl
xor
fidivs
testb
mov
imul
js
mov
aad
lcall
rcrb
cmp
and
xchg
add
adcl
fiaddl
xchg
aad
xchg
jo
mov
mov
stos
test
hlt
mov
sub
int
mov
ja
jge
aas
jecxz
ja
cli
cmp
xchg
dec
xchg
and
and
std
add
sbb
rclb
daa
jecxz
fnstenv
js
pop
nop
sbb
sub
pop
xor
mov
into
popa
ss
faddl
push
pop
pusha
xchg
cmpsl
icebp
js
dec
fstpt
dec
mov
lods
test
lods
mov
dec
inc
or
pop
cmp
lea
dec
inc
inc
shll
push
jp
push
inc
loop
cs
dec
into
cmp
dec
dec
or
nop
cld
jne
je
jp
das
inc
sub
push
jbe
loope
mov
add
sbb
push
lret
sub
sub
cmp
scas
jle
andb
jbe
jne
in
dec
nop
je
in
js
movsl
aaa
stc
scas
mulb
mov
aaa
adc
xor
out
ret
jle
mov
movsl
lret
fnstsw
ja
div
daa
call
and
sub
stos
jg
adc
es
adcl
jecxz
push
mov
mov
in
dec
pop
fwait
aas
dec
orb
repnz
and
daa
nop
sbb
nop
jno
repz
jmp
mov
mov
insl
test
jle
cmpsb
repz
mov
mov
loope
jmp
jge
dec
mov
das
cmp
mov
adc
daa
lods
dec
inc
add
sub
sub
stc
imul
int
mov
add
or
xchg
push
xor
inc
insl
sub
lods
arpl
mov
daa
mov
fidivrs
xchg
mov
outsb
push
xchg
sub
pop
mov
mov
pop
into
int
lods
aaa
aaa
aaa
and
jbe
jae
lahf
mov
xchg
adcb
pop
mov
push
sbb
rclb
shll
push
xchg
pop
test
test
push
ljmp
outsl
jp
cmpsl
and
xchg
mov
loope
xor
and
movsl
xchg
ficoml
xchg
mov
cmc
out
add
sub
outsb
cmp
dec
and
dec
add
sti
nop
xchg
iret
daa
imul
out
cmp
jns
ret
setnp
xchg
call
jecxz
dec
in
std
arpl
dec
mov
push
dec
sbb
pop
mov
dec
and
mov
xchg
std
nop
imul
pop
mov
fildll
push
inc
pop
mov
mull
adc
icebp
or
out
idivl
or
mov
and
fsubrl
mov
ja
xor
js
sub
test
mov
cld
or
aaa
inc
mov
stc
outsb
xor
es
mov
ljmp
and
negb
js
push
inc
test
lret
jle
add
out
lea
jnp
out
test
cli
rorb
add
push
outsl
push
out
cmp
pop
movsl
xlat
testl
in
or
fstps
inc
sbb
pop
test
rorl
jo
movd
mov
jae
xor
subb
daa
mov
lds
push
push
cmp
mov
bound
pop
aad
dec
push
jmp
std
jmp
inc
xchg
out
lods
cltd
ret
xchg
mov
cmpl
cmpsl
outsb
stos
test
and
mov
jmp
aaa
xor
jg
lds
in
or
call
daa
mov
push
dec
ss
rcll
popa
inc
je
ss
lret
mov
outsl
xor
mov
jne
and
mov
insb
push
outsb
scas
or
sub
mov
lea
orb
stc
mov
dec
int
jg
daa
dec
inc
mov
outsb
sub
shlb
popa
lock
mov
adc
or
imul
out
icebp
not
mov
xchg
adc
dec
rcll
mov
jne
cmp
repz
and
aaa
imul
xchg
jmp
xchg
inc
mov
adc
xor
cli
dec
pop
mov
sbb
push
dec
mov
mov
test
int3
loope
inc
lret
out
ljmp
and
lahf
xchg
cmp
xor
cli
movsb
jb
ja
sti
sbb
mov
sub
pop
dec
push
jbe
mov
insl
ret
mov
pop
loope
pop
or
es
pop
stos
push
jae
cmp
or
hlt
daa
push
sbb
movsl
sub
lret
dec
mov
cs
sub
mov
loop
scas
dec
mov
out
xorb
pop
push
icebp
push
nop
xchg
lods
pop
mov
hlt
mov
inc
and
jae
clc
ret
sub
leave
cmp
xchg
jge
push
je
pop
cmpb
data16
push
mov
movl
pushf
nop
pusha
ret
addr16
push
mov
stc
xor
rorb
ljmp
cmp
nop
add
xchg
mov
hlt
pop
lea
xor
cmp
dec
cmp
in
jns
cmp
je
dec
movsb
xor
je
mov
mov
add
xchg
xchg
sahf
in
and
push
pop
mov
ss
xchg
stc
jo
ret
dec
push
fdivl
jbe
mov
mov
jne
ret
rcrl
gs
pop
push
dec
pop
pop
jno
imul
xor
mov
movl
aas
push
shll
sbb
subl
and
mov
add
stos
mov
or
sbb
jecxz
scas
pop
pop
xchg
mov
mov
out
dec
jmp
shll
cmc
xor
dec
push
or
fcmovu
or
lret
ss
jae
lods
je
popa
rorb
mov
fmull
jo
out
add
cmp
scas
dec
push
clc
shll
lret
aad
xchg
pop
cwtl
mov
jbe
and
xchg
push
test
push
mov
inc
sub
dec
cld
fldt
and
imul
pop
sub
aam
mov
inc
jg
or
fsubrs
push
add
mov
in
stc
inc
mov
lahf
das
daa
jecxz
shll
out
lret
xchg
ss
push
and
sti
xor
mov
pop
push
mov
rorl
fcoms
ljmp
cltd
gs
data16
rcl
jns
pop
fnop
or
pop
sub
fnsave
cmp
loop
xor
out
gs
cmpsl
dec
mov
push
sub
mov
hlt
lds
ja
pop
fld
lea
lods
ret
jnp
pop
aaa
push
dec
lods
das
neg
and
push
or
push
gs
in
mov
jge
pop
jbe
lahf
mov
repz
mov
push
and
movb
daa
mov
push
dec
mov
icebp
mov
jmp
jl
loopne
xor
cmpsl
cli
lods
test
aad
arpl
movsl
fs
xchg
in
cmc
sub
into
arpl
lret
mov
testb
aad
dec
fisubrs
inc
ret
movsb
mov
push
pop
add
adc
cmp
lea
cmc
add
jo
mov
xchg
lret
lea
push
sbb
dec
jne
mov
sub
or
into
scas
dec
fsubs
xchg
push
jp
ss
repz
xchg
sbb
pop
dec
repnz
adcl
inc
lea
call
les
mov
into
mov
nop
sub
call
pop
js
cmp
lds
mov
pusha
out
addb
dec
mov
push
sub
cmp
fimuls
push
sbb
sbb
pop
xor
xor
int
jo
xor
mov
mov
jae
adc
lock
mov
insl
std
mov
jns
daa
cmc
jns
stos
mov
inc
ja
and
mov
push
pop
push
sub
or
mov
aaa
mov
cmp
loop
aam
dec
mov
lahf
stc
lret
dec
and
jle
mov
and
dec
sti
push
lea
add
aad
mov
dec
xchg
movsl
dec
mov
jbe
mov
lods
pop
mov
add
lods
sbb
inc
lahf
push
addl
and
jns
mov
jp
adc
cs
mov
jl
mov
int3
pop
sbb
cmpb
aad
add
and
dec
add
imul
or
jle
movsl
fstpt
jo
lods
imul
mov
test
pop
dec
lds
fcoml
and
cmpl
ljmp
cltd
mov
movsb
mov
mov
mov
neg
mov
ja
fdiv
pop
push
insl
sub
jnp
nop
push
aaa
xchg
shrl
push
jle
inc
dec
inc
nop
cmpsb
faddp
imul
pop
cs
add
repnz
sahf
dec
les
cmp
pop
fs
add
dec
push
jp
je
dec
ss
in
fistl
cli
les
cld
jno
lcall
std
cmpsb
int
mov
js
cmc
or
xchg
test
addr16
sbb
and
xlat
jge
jge
call
jge
insl
push
adc
in
cs
rorb
adc
xor
cmp
sub
mov
out
ja
rorb
cmpsl
sbb
js
dec
repz
xchg
jns
xor
mov
nop
cwtl
xor
popa
dec
jecxz
arpl
dec
scas
mov
mov
stos
jle
imul
mov
cmpsl
xchg
cmp
mov
cmc
insl
lret
push
inc
xchg
push
arpl
cwtl
int3
adc
out
inc
mov
stc
inc
cmpsb
ret
insl
dec
dec
push
pop
cmp
ret
cwtl
jno
sub
adc
dec
rolb
pop
adc
sub
mov
mov
mov
imul
call
inc
roll
divl
sti
cmp
scas
enter
xor
mov
push
sub
sbb
std
jl
pop
cmc
outsl
dec
add
loopne
ret
addr16
jbe
xchg
or
in
scas
sub
inc
dec
cli
dec
or
imul
ja
push
pop
stos
xchg
rcll
iret
cmp
push
nop
sbbb
lods
hlt
inc
xchg
std
mov
ret
xor
inc
xor
inc
and
xor
ds
hlt
adc
aaa
std
inc
dec
sahf
sub
hlt
jnp
inc
ret
pusha
xor
ljmp
dec
mov
lods
cmpsb
data16
mov
std
pop
inc
and
xchg
inc
test
inc
pop
adc
mov
into
mov
add
jmp
js
push
mov
into
pop
jbe
lahf
push
jg
jnp
repz
mov
sub
test
pusha
lock
inc
mov
mov
mov
jg
lea
pop
jl
push
shl
je
dec
imul
gs
bound
pop
test
push
jns
imul
add
jne
popf
cmp
call
mov
and
adc
insb
sub
outsb
push
cmp
push
rolb
xchg
jne
inc
jg
imul
sbb
pop
sbb
add
addb
cs
sbb
dec
xchg
rcrb
div
je
jle
js
mov
gs
sbb
and
sub
mov
ret
stc
xchg
xorb
ds
popf
daa
test
jbe
cs
jl
and
inc
add
fisttpl
nop
push
cld
clc
frstor
xor
jge
out
cmp
into
cmp
fmuls
fidivrs
push
insb
pop
and
push
jg
ret
in
scas
ret
test
ja
in
jmp
cmc
sbb
push
nop
mov
xorb
push
xchg
sbb
es
cmp
jnp
jno
popf
test
cmc
sbb
and
mov
inc
cli
fadd
xchg
dec
push
lcall
rcr
xchg
pop
inc
sub
rorb
or
pop
push
nop
and
testl
sarb
jae
push
sbb
shrl
mov
add
mov
pop
movsl
add
xor
nop
shll
jne
push
fdiv
int
ficoms
out
call
fdivrl
sbb
xlat
std
mov
xor
in
mov
iret
rorb
cmpsl
shrb
add
scas
fcompl
xor
push
lods
jge
lret
cltd
scas
out
or
loop
xchg
jb
ret
inc
pop
push
mov
pop
xchg
jge
test
add
mov
addr16
dec
push
jg
repnz
aam
jecxz
sub
add
push
ds
int
mov
divw
rorl
mov
js
dec
and
ss
jle
adc
pop
leave
sbb
icebp
jb
scas
aam
xchg
pop
sbbb
pop
mov
adc
xor
push
popf
decb
pop
lcall
xchg
test
test
push
xor
popf
cmp
stos
xor
jge
jo
jnp
out
push
cltd
test
sbb
cmpsl
repz
mov
in
hlt
sbb
decw
fistpll
jle
cmpsb
test
lock
sub
push
inc
pop
int3
add
cmp
leave
fcompl
faddl
loope
xor
outsb
mov
cltd
jle
xchg
lods
leave
sbbl
dec
in
pop
adc
movsb
xchg
lret
jle
inc
repnz
fistpll
adc
mov
pushf
movl
cltd
mov
inc
jae
sub
aaa
mov
mov
or
rcrl
ja
mov
fdivl
addr16
jne
xchg
popa
push
pop
jno
nop
cmpsb
inc
mov
mov
adc
jbe
mov
pop
shlb
cmpsl
pop
pop
jl
mov
mov
mov
shlb
fcoml
rorb
movsl
outsl
mov
pop
mov
add
std
mov
inc
push
jo
cld
fildll
lret
hlt
cs
cmpsl
aas
xchg
add
pop
inc
rorb
push
jne
lahf
xchg
aas
mov
fs
leave
nop
lds
mov
mov
aad
dec
push
mov
add
test
ja
lahf
sarl
roll
fwait
aaa
pop
fdecstp
aad
xorl
nop
ret
push
xchg
xor
lea
fdivl
loopne
pop
push
mov
sub
rol
mov
xchg
sbb
imul
or
mov
into
aam
inc
pop
and
in
repnz
into
leave
add
test
inc
sub
mov
xchg
nop
or
dec
sub
ret
pop
and
mov
push
stos
ljmp
push
sahf
loop
sub
scas
sahf
sub
cmp
sub
mov
adc
cmp
mov
int3
sahf
pop
loopne
scas
xchg
js
movsl
pop
fildll
mov
sbb
add
sbb
push
pop
dec
pop
aaa
test
popf
fadd
movsl
mov
scas
out
sbb
pop
dec
add
mov
mov
orl
push
dec
pop
aam
mov
in
insb
daa
fchs
pop
xor
rcrl
in
cmp
mov
es
inc
jns
aam
lock
in
jo
nop
sahf
ljmp
fsub
push
jno
mov
push
into
add
sahf
or
dec
push
outsl
cmp
xchg
ja
nop
or
mov
push
aas
daa
inc
cltd
inc
mov
ds
adc
stos
mov
das
jmp
pop
and
stos
sbb
mov
fsubr
push
xchg
cmp
aas
sar
or
data16
sbb
push
adcl
adc
lock
imul
sub
mov
sbb
push
mov
loopne
lds
adc
xor
mov
cmp
movsl
mov
sbb
sub
aaa
push
pop
push
iret
nop
push
rcll
scas
xor
test
inc
xor
xchg
nop
inc
sahf
cmc
stos
xchg
into
aaa
xor
xchg
jae
push
ljmp
push
xchg
mov
adc
pop
and
mov
mov
jle
cmp
addr16
cmpsl
or
cmc
mov
in
cmc
shl
xchg
pop
mov
cmp
cmp
xchg
push
fwait
aaa
imul
xchg
sub
aaa
push
in
xor
sbb
nop
inc
popa
pop
xlat
pop
jle
mov
sub
and
fistpll
iret
icebp
popf
mov
inc
das
aas
sub
or
outsb
mov
cmp
pop
mov
sbb
jl
ret
sbb
filds
xorb
ret
gs
sbb
add
jp
mov
xchg
mov
shrb
jmp
cmpsl
test
pop
jbe
js
ja
test
and
ljmp
mov
fists
xchg
or
jecxz
pop
push
mov
test
cmp
add
lea
data16
xchg
mov
xorb
popf
test
std
push
and
jmp
movsl
push
aas
sbb
fistl
subl
sub
mov
sub
add
xor
in
pop
xlat
clc
inc
push
bswap
xchg
pop
cmp
sbb
enter
add
clc
les
mov
mov
je
sub
loope
bnd
jg
hlt
daa
sbb
dec
js
jle
lahf
xor
lds
jne
mov
call
mov
push
outsl
sbb
aad
sarl
mov
dec
scas
mov
sarb
mov
dec
add
ret
mov
mov
leave
das
pusha
push
or
inc
mov
xor
leave
mov
and
xchg
iret
imul
leave
jecxz
mov
daa
and
push
push
push
cmpsl
jg
js
adc
out
adc
xor
jb
stc
mov
mov
lds
je
mov
jne
xchg
sbb
xchg
adc
mov
bound
jle
inc
jmp
mov
dec
dec
mov
mov
scas
sbb
aaa
mov
xchg
in
aas
cltd
cmpsl
divl
mov
xlat
dec
aaa
push
mov
sub
lea
mov
in
ds
outsb
xor
jbe
xchg
popf
in
icebp
push
inc
fsubrp
lods
xchg
jge
push
xor
out
call
inc
push
xor
lret
and
fiadds
popa
xchg
nop
insl
scas
and
fadds
jle
cmpsb
and
shll
ljmp
sbb
sub
inc
hlt
lea
inc
std
mov
jnp
xchg
xchg
or
mov
cli
movsl
ficoms
fdivl
inc
xor
bswap
popa
mov
xchg
cmpsl
outsb
inc
mov
rcr
push
ja
mov
pop
jp
rorb
add
imul
inc
jge
jge
push
xchg
loope
out
mov
and
arpl
nop
mov
jp
call
jmp
mov
fisttpl
fists
clc
out
aad
dec
sub
xchg
iret
mov
jno
cmp
arpl
nop
add
xchg
mov
subl
ss
xor
in
xor
imul
daa
ffree
mov
rclb
fbstp
adcl
ret
into
xchg
xchg
das
lret
pop
nop
adc
aam
aaa
fadds
mov
and
jle
ja
aaa
femms
daa
push
xor
or
xor
outsl
lahf
jno
mov
sbb
or
jge
jne
inc
ss
push
hlt
cmc
jge
inc
sub
fildl
movl
daa
sbb
xchg
test
leave
and
xorb
and
ja
in
xor
cmpsb
movsl
fs
nop
cmp
xor
jb
mov
push
ret
cmp
push
dec
mov
inc
pop
sbbl
ljmp
fldenv
xchg
stos
dec
shll
lods
pop
xor
popf
sub
aam
nop
inc
pop
mov
or
mov
adc
jecxz
mov
scas
and
fistpll
fcmovnb
nop
xchg
ja
mov
inc
mov
imul
jo
push
xlat
rclb
rclb
push
rcll
xchg
enter
push
jns
push
mov
mov
pop
pop
into
hlt
mov
arpl
sahf
adc
push
push
push
xchg
push
mov
ret
and
lds
enter
xchg
or
xchg
std
int
adc
fdivp
outsl
lret
jae
push
ja
xchg
mov
adc
setb
mov
int
inc
shrl
push
decb
mov
repnz
sub
cmpsl
into
mov
xchg
xchg
jno
mov
cmp
rcll
sub
or
inc
popa
push
lea
mov
or
lcall
jmp
out
fstl
rol
dec
ss
push
sub
and
and
push
notb
js
scas
mov
inc
jmp
mov
cmp
scas
fnstenv
jnp
xor
test
jecxz
test
mov
mov
jbe
fisttpll
and
inc
rolb
int
pop
icebp
push
mov
dec
addr16
fs
pop
daa
pop
popa
mov
xchg
xchg
inc
andb
push
adc
push
dec
push
ret
push
cmpsl
mov
dec
fwait
je
out
mov
je
repz
fwait
in
in
ret
mov
mov
js
aaa
xor
xchg
xchg
mov
dec
xchg
into
jne
or
shll
xchg
push
xor
xchg
cmp
cmp
rolb
mov
cmp
mov
sbb
mov
ljmp
fiaddl
sbb
fcmove
dec
xchg
daa
scas
mov
adc
test
lea
pop
xor
xchg
test
lds
xor
jo
sub
fdivl
lods
sbb
pop
push
dec
mulps
push
js
add
mov
mov
add
lret
scas
xor
shr
sub
mov
iret
std
mov
aad
dec
mov
jnp
push
inc
add
pop
or
and
dec
mov
scas
std
inc
in
ss
mov
xor
sub
push
pushf
xchg
push
movsb
cmp
cmp
jne
lods
sbb
cwtl
push
cmp
mov
push
mov
and
push
mov
xchg
push
jo
xchg
push
in
mov
lahf
ret
jns
pop
push
and
fwait
sti
mov
ret
xor
lds
jmp
adc
orl
enter
lds
js
sub
fildll
subl
xor
mov
scas
testl
mov
pop
and
andb
or
push
lock
or
mov
addl
fcoml
mov
repnz
mov
js
lcall
jo
lods
xchg
mov
pusha
sub
or
jl
neg
out
mov
add
in
testb
add
add
cmpsl
or
mov
mov
dec
cwtl
mov
inc
loope
gs
addl
mov
pusha
das
mov
test
inc
bound
divb
into
lods
cmp
aas
and
ret
mov
sub
inc
sbb
xchg
lret
or
test
push
cmp
jne
mov
add
hlt
fsts
or
sahf
pop
std
xor
js
gs
shlb
notb
dec
sti
gs
nop
subl
rcpps
adc
mov
fwait
pusha
lcall
inc
mov
fmul
fs
into
gs
cmp
lds
or
ja
xchg
pushf
push
ret
movsb
mov
xor
jne
lret
jecxz
test
mov
into
push
mov
mov
jb
mov
fcomps
inc
adc
lock
ja
cmp
cmpsl
mov
fimull
add
and
jle
negb
cmc
xor
lret
subb
cmp
mov
xchg
or
cmp
insl
sub
xchg
pop
mov
fcoml
arpl
cld
jno
mov
data16
xor
fsubs
lds
jle
push
dec
sbb
mov
and
cmpsl
sbb
movsl
mov
scas
roll
hlt
repnz
test
and
test
mov
mov
daa
movsl
js
mov
outsb
hlt
ds
push
sbb
jne
adc
out
stos
mov
mov
ss
into
iret
add
les
mov
add
into
adc
and
js
in
aaa
push
daa
inc
ss
mov
sbb
fsincos
add
add
or
imul
fmul
xor
js
jl
arpl
ret
ja
bnd
xor
js
sub
sub
add
xchg
and
hlt
xchg
scas
das
aam
aaa
addb
push
mov
adc
jge
lock
dec
shrl
data16
leave
sbb
cmp
cmpsl
xor
inc
adc
xor
push
cmp
in
and
scas
push
mov
or
mov
jge
iret
cmp
push
jle
xchg
aad
rcll
outsl
rcrl
push
dec
pop
stos
mov
movsl
pop
in
xchg
btc
outsl
inc
xchg
daa
ja
xor
ror
sti
xor
arpl
jno
aaa
push
shr
xchg
popf
and
aaa
iret
aad
sub
jnp
mov
subl
xchg
push
sub
xchg
ds
shrb
inc
mov
insl
xchg
xor
adc
or
std
cmp
and
shll
mov
int
rorb
sarl
xchg
out
nop
and
mov
pop
test
rorl
std
inc
xchg
in
rorb
ret
icebp
daa
and
sbb
and
into
mov
sub
add
inc
sbb
xchg
mov
js
mov
push
aaa
aad
inc
andb
xor
out
cmc
pop
jge
dec
jge
ja
mov
dec
mov
mov
nop
subl
sub
adc
mov
hlt
push
inc
mov
pop
in
sub
into
sarl
imulb
mov
mov
xor
dec
xchg
lahf
scas
pop
ljmp
add
int3
mov
ret
cmp
xor
test
fiaddl
mov
push
loop
add
mov
xchg
into
cmp
mov
mov
dec
pop
and
mov
dec
pop
lahf
pop
mov
push
xor
adcl
jnp
jne
mov
xor
shl
sbbl
mov
lods
mov
mov
jbe
and
sub
test
fwait
mov
les
dec
xor
adc
mov
dec
mov
cli
iret
data16
int
lods
push
xchg
imul
data16
ror
or
mov
mov
rolb
jge
and
xchg
or
mov
imul
mov
mov
push
mov
aad
inc
push
cmp
xchg
xor
adc
outsl
loopne
mov
dec
sbb
ss
js
shll
mov
fnsetpm(287
cmp
test
rclb
movsl
es
sub
js
aam
mov
xor
mov
xchg
lahf
arpl
sbb
push
xlat
or
mov
fildll
out
fs
cltd
dec
fsts
mov
iret
pop
dec
sbb
xchg
push
mov
iret
xor
iret
orl
adc
sbb
fcomip
fsubl
push
icebp
lds
pop
sub
nop
lds
scas
cltd
fsubr
popf
sbb
xchg
jns
jne
jmp
inc
xor
sub
das
sbbb
cwtl
scas
and
jmp
fsubl
test
js
jns
aas
push
loope
xlat
xor
std
int3
gs
mov
nop
jmp
out
inc
mov
sub
add
ljmp
and
cmp
mov
ja
sbb
jle
dec
cltd
xchg
mov
cmp
xchg
mov
or
mov
jecxz
ljmp
push
xchg
mov
ja
xchg
test
add
imul
stos
nop
xor
xchg
pushaw
outsb
ret
ror
cmpsb
mov
mov
out
sbb
xchg
xchg
scas
jne
dec
cli
xchg
mov
adc
dec
push
dec
lret
dec
xchg
mov
mov
insb
inc
test
push
pop
repz
push
movsl
fmull
rcll
ficoms
lret
jle
mov
mov
out
enter
adc
adc
mov
rcl
pop
sub
fcoml
add
push
add
mov
xchg
add
into
push
leave
nop
in
add
cs
mov
ljmp
cmp
and
dec
mov
inc
lret
shll
roll
divb
fsubrl
daa
dec
or
mov
sub
mov
mov
js
gs
mov
repnz
inc
out
mov
pusha
cmp
aaa
pop
xchg
xchg
outsb
inc
aas
fcoms
xor
inc
and
in
add
test
leave
or
inc
dec
cmp
jb
push
call
bound
mov
lds
js
lcall
mov
fsubrl
push
fstpt
dec
lcall
adc
ret
fs
sahf
mov
sbb
jae
jb
cld
push
xchg
int3
xchg
mov
mov
jge
out
mov
movsl
mov
jbe
sbbb
xchg
outsb
mov
imulb
cmpsl
adc
mov
maxps
push
fldenv
in
jg
sbb
and
jp
sbb
add
aaa
and
sub
add
fadds
push
add
in
lds
orps
outsb
fwait
daa
pop
jno
notb
mov
or
xor
push
movsl
xchg
nop
or
xchg
push
les
rolb
fcompl
femms
js
mov
hlt
out
jg
nop
shrl
xchg
dec
and
sbb
scas
repz
xchg
shl
pop
sub
pop
push
xor
in
not
push
nop
test
xor
dec
mov
cmpsb
mov
mov
ficomps
popf
sub
icebp
sti
jbe
or
add
lret
or
cmp
daa
cmp
fldl
mov
xchg
arpl
cltd
in
nop
sub
rcr
adc
xchg
mov
ja
bound
jo
or
iret
ljmp
or
mov
movsl
notb
mov
or
aaa
leave
xchg
push
cmp
cmp
sete
scas
pop
push
enter
in
cli
mov
aas
fnstenv
iret
inc
xchg
add
es
bsr
repnz
add
lcall
mov
cmc
jle
mov
mov
imul
popl
je
and
ja
js
nop
mov
loope
jle
leave
adc
mov
negb
mov
inc
jns
xchg
hlt
in
mov
ret
loop
fcmovnu
std
out
call
sti
jge
nop
bound
and
mov
imul
mov
aam
ss
sbb
and
stos
push
sbb
push
or
out
fistps
xchg
sbb
daa
lods
push
imul
cwtl
nop
jl
ss
add
mov
ljmp
mov
and
mov
and
mov
lea
push
jle
xor
imul
inc
xor
rorl
cmp
inc
js
push
test
ds
mov
jle
daa
push
xor
fistps
pop
daa
out
pop
adc
aas
mov
sbb
inc
cmpsb
iret
outsl
es
pop
stos
add
cmp
cmp
pop
leave
pushf
mov
xchg
pop
scas
dec
xchg
add
stos
or
mov
mov
xchg
adc
xchg
popa
lods
xchg
push
nop
sbb
aaa
jecxz
out
pop
or
outsb
cmp
xor
push
push
insb
in
mov
add
aas
and
jg
cltd
xlat
gs
jnp
shll
scas
fnstsw
sbb
and
xchg
xchg
not
xchg
jle
in
dec
mov
lahf
js
lret
jnp
xor
clc
add
adc
mov
cmp
seto
aas
and
mov
push
cmp
push
rolb
jae
nop
pop
mov
fidivrl
mov
aaa
or
sbb
lea
out
bound
in
xor
mov
test
pop
leave
xchg
mov
aaa
cltd
call
xchg
movsb
int
xchg
test
jl
mov
inc
sub
mov
xor
cltd
sub
pop
ret
jecxz
mulb
jne
push
xor
or
inc
insl
sbb
mov
nop
xor
mov
mov
insl
and
mov
scas
call
jno
daa
outsl
fdivl
dec
and
ss
std
xlat
sarl
jbe
xor
pop
aad
mov
dec
popa
add
inc
fldl
inc
push
push
push
mov
ss
mov
mov
ret
aad
inc
mov
mov
adc
mov
or
gs
insl
mov
push
sub
inc
pop
lods
pop
push
or
std
xchg
inc
test
jae
xchg
dec
outsl
sub
sahf
flds
push
cmp
push
out
cmc
sub
sub
in
jmp
loope
or
jecxz
inc
bnd
mov
and
xchg
jp
xchg
test
jg
jg
ffreep
mov
in
add
push
mov
or
icebp
cmpl
jo
jbe
mov
cmp
iret
aas
sbb
inc
std
mov
sub
pop
dec
dec
aaa
dec
lea
aaa
bound
stos
sbb
mov
inc
inc
sti
dec
stos
xchg
leave
shrl
jnp
and
pop
mov
dec
sub
clc
outsb
in
repz
jnp
lods
test
adc
xchg
aaa
imul
xor
addr16
pop
jnp
icebp
push
xchg
mov
xchg
mov
sub
pop
cmp
xor
inc
cmp
cmpb
ret
mov
xchg
pop
sarl
pop
adc
les
aam
jle
in
insb
and
dec
adc
xor
out
mov
stos
mov
imul
push
stos
ljmp
test
iret
stc
push
mov
outsl
scas
add
adcb
pop
mov
les
sub
mov
aad
std
dec
inc
fsubl
rorb
fsubrs
and
leave
test
mov
push
jle,pn
bound
mov
inc
mov
lea
in
pop
sbb
insb
mov
cmp
xchg
xchg
mov
pushf
sub
sbb
adc
cld
incb
dec
xchg
mov
inc
in
or
sub
data16
nop
stos
and
shrb
xchg
sub
movsb
orl
mov
add
dec
mov
in
push
cmp
pop
jo
iret
ja
imul
push
dec
push
jmp
pop
mov
xor
xor
movsb
mov
push
mov
mov
cmp
mov
cltd
jp
jne
popa
pop
stos
xchg
pop
mov
push
mov
imul
or
pop
pmullw
imul
lret
sti
xor
lahf
jns
xchg
cmp
and
cmp
lcall
and
sarl
push
fs
push
mov
ss
push
mov
push
ret
fimuls
add
out
push
sub
sbb
gs
sarb
lret
inc
push
in
push
xor
pop
mov
xchg
fadds
jecxz
ret
arpl
lods
ss
ror
aaa
add
push
mov
xchg
adc
scas
xchg
arpl
cltd
sbb
das
mov
xchg
data16
shrb
out
xchg
sbb
rcrb
test
sub
add
push
pop
push
jmp
aas
jns
jne
into
mov
scas
pop
lret
cltd
xchg
sub
jge
cmp
mov
nop
lret
leave
hlt
dec
mov
loop
jecxz
adc
jg
repz
xchg
addb
cmpsl
aaa
mov
aad
repz
xor
mov
mov
fwait
mov
rcr
or
mov
xchg
and
or
aam
and
xchg
lret
jnp
mov
int
pop
lock
mov
leave
sub
fists
shll
sbb
rep
movl
push
inc
jb
mov
dec
sbb
fidivrs
cs
mov
insl
xchg
nop
clc
sub
cltd
lods
aam
xchg
sbb
xchg
and
sbb
insl
push
sbb
out
rorb
pop
aad
push
cmp
in
adc
sbb
imul
loope
dec
nop
dec
int3
xchg
data16
jg
push
rcll
notl
cmp
dec
sbb
lods
jg
mov
ss
fcmovb
mov
sbbl
push
sub
daa
mov
mov
mov
imul
in
js
push
mov
repz
xchg
idivl
movsb
pop
nop
push
mov
imul
lods
cmp
mov
mov
aaa
inc
fs
shlb
inc
sbb
push
push
and
imul
xorl
movsb
out
add
fs
int
rclb
mov
js
int3
jb
loopne
or
in
push
scas
cmpsl
mov
xchg
mov
out
xor
inc
ss
push
ja
jl
ljmp
in
push
xchg
add
je
js
out
std
rorl
fldcw
adc
test
data16
xchg
clc
leave
pop
stos
fidivs
int
push
push
xor
ret
adcl
aaa
notl
jae
lds
push
jbe
xchg
js
lret
mov
addr16
adc
roll
insl
jb
xchg
push
and
lds
iret
and
shll
push
imul
stc
xchg
push
inc
xor
xorb
fcomp
xchg
je
dec
call
nop
push
ja
push
xor
inc
sarl
pop
aas
hlt
fcmovu
sub
add
pop
jns
dec
imull
ret
mov
mulb
fiadds
mov
ja
push
pop
or
int
jle
mov
mov
push
fisttps
incb
mov
adc
std
imul
scas
jo
or
pop
gs
xor
jne
jbe
xchg
xchg
flds
subb
jl
test
xchg
nop
adc
aaa
filds
pop
dec
and
sbb
mov
mov
pop
jg
leave
sub
mov
jae
pop
adc
test
fcmovnu
seto
out
jnp
mov
mov
shrb
sub
jecxz
xchg
sbb
sahf
aaa
inc
shlb
int3
adc
inc
mov
sub
aam
ja
imul
fdivrp
push
frstor
jmp
dec
jg
mov
cmc
sbb
adc
leave
movsl
fisubs
jmp
cwtl
daa
mov
mov
mov
push
repnz
push
pop
dec
out
xchg
hlt
sarl
mov
pop
pop
in
sub
push
rclb
mov
ret
mov
sbb
leave
xchg
xchg
xchg
ja
push
add
mov
test
xchg
push
pop
mov
mov
xchg
iret
sub
loopne
xchg
or
mov
or
loop
icebp
pop
adc
rorl
loop
out
mov
sahf
mov
into
leave
out
in
aaa
mov
add
inc
mov
test
push
xchg
pop
inc
dec
cmc
mov
repnz
inc
sbb
mov
mov
loop
mov
js
testl
loop
push
push
mov
push
dec
push
jl
cmovg
push
cmp
leave
xor
cmp
aaa
mov
sub
mov
out
test
mov
pop
dec
jae
pop
insl
addb
mov
pop
cmp
fsubrs
xchg
into
ficoms
adc
data16
xchg
scas
lock
pusha
mov
les
xchg
adc
jg
mov
inc
inc
js
dec
dec
jmp
xchg
pop
lret
lahf
lret
jns
stc
pop
mov
cmp
xor
ret
in
mov
inc
addr16
xchg
or
ficomps
cmp
or
inc
or
flds
cwtl
lds
ret
leave
mov
ret
stc
lods
lods
ljmp
cmpb
ret
or
xchg
sarl
add
jns,pn
hlt
pop
push
cmp
push
pop
xor
mov
or
hlt
add
stos
lret
mov
imul
sub
add
mov
cmp
rclb
mov
add
fdivs
repnz
mov
fnstsw
or
setb
in
inc
adc
push
jae
and
push
mov
int
mov
repz
dec
mov
outsl
sub
mov
cmp
addr16
or
sub
mov
aaa
add
cltd
enter
out
jne
jbe
pop
mov
orl
mov
mov
popf
dec
mov
pop
dec
cs
push
push
cltd
adc
lret
aas
or
mov
cmc
dec
mov
pop
pushf
mov
cmp
adc
jne
incl
lahf
xorl
test
ss
loope
and
daa
and
pop
push
ds
cmpsb
xchg
movsl
mov
push
add
mov
mov
mov
inc
insl
aad
ds
adc
nop
dec
loop
push
jo
and
or
inc
jg
stos
mov
cmp
xchg
sub
int3
ljmp
or
xchg
jg
push
aas
das
sbb
push
mov
ja
test
ss
aad
xor
addr16
mov
fs
loope
dec
je
mulb
xorl
in
std
mov
mov
xlat
nop
or
fidivrs
outsb
pop
aam
jge
cmc
push
fdivs
out
out
decl
ror
insb
push
icebp
fabs
mov
pop
mov
xor
ds
pop
add
push
mov
lods
rcll
pusha
xchg
xor
cli
adc
popl
or
push
test
mov
out
inc
sbb
aas
stos
push
pop
xor
aas
mov
mov
ds
out
jbe
push
repz
mov
jnp
fistpll
pop
push
xchg
push
push
xor
or
and
repnz
hlt
shl
lahf
test
clc
mov
mov
es
mov
ret
mov
adc
xchg
mov
inc
nop
aam
fnstsw
cmp
xchg
test
inc
lods
xchg
xchg
xor
mov
sarb
xchg
add
mov
rol
xor
mov
mov
cmpsl
inc
cmp
lret
xor
pop
xchg
sbb
xchg
xchg
inc
dec
aam
lods
jbe
shlb
scas
lcall
mov
aas
bound
dec
mov
sub
ss
loope
ret
xchg
mov
sub
sbb
stc
adcl
mov
jno
ja
test
mov
inc
ljmp
mov
sub
outsl
xchg
jmp
xor
test
les
sahf
push
js
push
dec
push
aad
xchg
dec
in
mov
stos
sub
ja
mov
sub
imulb
pop
push
repnz
stc
mov
pop
aaa
xchg
shlb
push
ss
lods
jbe
sub
push
xorb
out
repnz
iret
mov
orb
jnp
in
mov
dec
xchg
gs
pushf
gs
sub
push
push
push
repnz
jecxz
sbb
into
stc
mov
sbb
pop
rcll
repnz
sub
orps
enter
xor
inc
sbb
repnz
or
mov
and
cmp
setbe
jae
movsl
in
inc
push
pop
mov
lcall
mov
movsl
pop
fsubrl
pop
std
loope
std
jp
aam
decl
inc
das
adc
mov
and
dec
ljmp
mov
adc
pop
jle
cmp
addr16
fsubl
in
pop
cld
sub
sbb
add
cltd
cld
aad
cmp
lds
lret
jne
mov
push
mov
imul
adc
adc
icebp
rcr
xor
add
leave
and
and
xor
lds
dec
nop
aas
ficoms
idivl
bound
pop
cmp
inc
jle
gs
mov
inc
xor
fmull
rorl
xchg
mov
aad
dec
lahf
sub
inc
jbe
mov
cli
adc
inc
scas
or
adc
jle
dec
xchg
inc
pop
addr16
cmp
je,pn
pop
mov
inc
dec
mov
hlt
push
jl
ja
test
das
orb
sahf
rcrb
sbbl
cld
in
iret
inc
lahf
sar
js
cmc
pop
sbb
sub
hlt
dec
mov
dec
adc
sub
test
sbb
addr16
jnp
shl
sbb
jg
pop
or
repnz
ja
mov
cmp
repz
flds
jle
mov
std
ja
or
inc
shl
imul
nop
std
mov
mov
adc
mov
cmpsl
dec
jmp
out
jle
lds
std
imul
mov
pop
mov
clc
jbe
imul
int3
imull
pop
sub
stos
sub
push
rcll
sub
jns
mov
leave
mov
mov
shlb
mov
and
aaa
fbstp
pop
stos
sbb
sub
outsb
ja
pushf
xchg
sahf
inc
adc
and
scas
xor
mov
insl
push
stc
and
mov
sahf
inc
xor
nop
cmpsl
int3
stos
xchg
imul
fst
lods
cltd
xchg
sarl
lods
test
xchg
mov
iret
scas
dec
nop
scas
add
mov
es
push
cmp
shr
test
jmp
dec
xchg
mov
sub
cmc
and
or
iret
adc
fs
negb
jae
maxps
inc
ror
aas
ja
mov
sub
mov
sub
push
inc
test
xchg
inc
cmp
push
push
aaa
imul
sub
jg
dec
sub
jb
inc
leave
cmc
ss
push
cmpsb
mov
cmp
aam
sub
dec
push
mov
xchg
std
push
ss
es
mov
in
xchg
sub
mov
inc
cmc
aas
scas
cmpsl
test
js
jb
mov
sub
pop
xchg
les
sbb
test
aaa
mov
adc
pop
inc
inc
sbb
test
pop
jb
outsl
lret
leave
mov
lds
push
sub
add
mov
stos
and
jecxz
mov
mov
cmp
rorl
adcl
lret
mov
add
lods
in
mov
gs
cld
in
icebp
push
jle
inc
inc
push
mov
into
mov
xchg
loop
push
lds
xchg
pusha
jnp
aas
scas
repz
push
sahf
xchg
inc
in
pushf
push
lea
or
mov
test
sbb
addr16
fsubrl
out
push
test
pop
sahf
mov
enter
lods
test
inc
sbb
inc
aaa
rol
push
push
dec
adc
sbb
nop
outsb
fadd
test
xchg
adc
xchg
sbb
repz
pop
nop
ja
fucomip
fdivs
repnz
shr
xchg
ja
xor
inc
jmp
insl
dec
jbe
movsb
xchg
arpl
adc
add
jp
adc
sbb
add
ss
iret
cmpb
int
mov
and
xchg
mov
mov
fsts
cmpl
shrb
sub
imul
dec
pop
imul
fwait
push
and
ja
or
mov
push
or
daa
mov
mov
mov
mov
aad
lock
nop
aad
mov
add
scas
jo
imul
imul
push
dec
aaa
iret
subl
loop
push
ss
ss
and
or
nop
fnstcw
in
rolb
inc
jecxz
addr16
fildl
fnsave
jg
out
inc
adc
adc
mov
int3
test
out
mov
jle
inc
andnps
jo
stos
fsubrs
mov
lret
push
loop
aas
push
sbb
add
cmc
leave
js
mov
mov
lods
fadd
push
jno
gs
or
lock
adc
pusha
outsl
jae
out
mov
dec
movsb
outsl
or
lock
jmp
push
sti
add
andl
jp
scas
int3
cmp
sub
jge
gs
dec
xchg
scas
lahf
imul
dec
inc
fisttpl
mov
xrelease
pop
js
js
inc
mov
inc
mov
pop
pop
add
xorl
push
jb
mov
xchg
mov
rol
mov
in
out
or
cmpl
mov
xchg
gs
pop
in
or
mov
xor
aad
cltd
inc
test
and
pushf
mov
jo
pop
xchg
roll
mov
pop
es
pop
rolb
mov
mov
js
jb
test
ret
and
mov
shlb
pop
leave
repz
data16
and
pop
sub
sub
mov
jbe
mov
mov
jo
sarl
sub
inc
jmp
xor
jmp
xchg
scas
mov
pop
push
cmp
or
push
jg
cmp
jbe
les
pop
fbstp
jmp
push
mov
arpl
add
js
xor
sbb
cmp
je
dec
gs
aad
mov
push
sbb
dec
sbb
sub
mov
mulb
xchg
adc
fistps
addr16
xchg
test
jb
test
jns
xor
mov
stos
rorb
lcall
testl
add
add
sbb
iret
xchg
rorl
adcb
add
ljmp
pusha
enter
adc
ror
scas
adc
add
push
sbbl
mov
push
imul
addb
adc
push
push
cwtl
lea
xchg
sahf
clc
push
mov
add
mov
mov
ffreep
push
cmp
inc
dec
pusha
inc
cmp
and
cmc
jecxz
xchg
fldenv
push
lret
add
bound
pop
push
mov
imul
loopne
mov
test
inc
dec
jae
xchg
push
movsl
iret
mov
mov
test
xchg
or
xchg
andb
xor
dec
mov
cmpsl
push
inc
sbb
add
nop
xor
push
inc
adc
popl
out
xor
xchg
jg
add
dec
ja
xchg
outsl
mov
addr16
inc
or
negb
add
xchg
divb
test
popa
xor
xchg
dec
push
orl
inc
test
or
add
dec
ja
repnz
das
mov
daa
mov
push
arpl
jmp
shll
arpl
cmpsl
mov
pop
pop
nop
repz
ja
cltd
cmpsl
xchg
push
xor
push
test
mov
xchg
xor
adc
and
hlt
dec
ljmp
sbb
xchg
xor
and
into
inc
xchg
in
mov
mov
mov
in
mov
sub
pusha
stos
inc
mov
cmp
mov
adc
push
insl
xchg
cmp
cmc
aas
xor
pop
adc
mov
and
xchg
jge
in
inc
push
jge
jbe
out
or
push
fsub
lds
es
xchg
mov
shrb
lds
mov
testb
dec
inc
dec
xor
je
fstl
xor
les
dec
push
ja
mov
scas
xchg
push
mov
dec
xchg
scas
xchg
or
jne
mov
and
stos
in
and
adc
xchg
jge
loope
mov
cmp
negb
add
push
and
cmp
sub
add
mov
mov
mov
call
push
dec
add
mov
and
jle
jnp
mov
sbb
push
inc
xor
in
fdivs
int
mov
cmp
xor
push
push
push
pop
jnp
rcl
stos
neg
sbb
push
iret
imul
test
jnp
ds
out
push
sub
sub
fidivrl
sbb
arpl
fisttps
xchg
inc
jnp
pop
lret
mov
test
adc
jnp
daa
mov
adc
stos
cmp
cmpsb
das
test
pusha
push
pop
jne
push
inc
out
call
push
xor
fldl
aad
dec
jle
stos
rol
push
ss
fcmovnb
loop
sbb
fs
ss
pop
mov
pop
ja
push
testb
xlat
adc
sub
inc
cli
mov
fwait
and
inc
shl
jbe
ficomps
clc
repnz
pop
mov
movl
sub
mov
data16
mov
nop
mov
les
pop
mov
push
sub
stos
gs
addb
nop
lock
out
and
mov
popa
push
add
ret
mov
or
movsb
mov
into
sbb
in
je
pop
mov
push
push
bound
pop
and
jae
xor
sub
pop
and
xor
aad
out
aad
sbb
nop
mov
pop
loop
aam
out
sub
xchg
jmp
rol
out
push
xor
cmpsb
jnp
rcll
mov
into
addl
mov
aas
lret
shlb
push
pop
mov
pusha
push
in
into
dec
pop
aaa
mov
fs
cmp
fsts
inc
dec
dec
and
clc
orb
sub
leavew
mov
je
out
movsb
pop
xor
pop
dec
int3
push
ret
enter
dec
jbe
push
das
les
lds
adc
sub
push
xchg
push
out
mov
mov
xchg
dec
mov
data16
test
jne
pop
push
inc
xchg
pop
aaa
push
shl
leave
adc
inc
ss
dec
pop
dec
pop
jo
jns
rolb
mov
xchg
mov
pop
test
movsb
xchg
je
mov
mov
adc
xchg
mov
sub
jns
xor
sub
test
sbb
mov
push
jae
or
sub
mov
xchg
test
mov
mov
add
cmc
sub
imul
out
aaa
jle
cmc
push
test
mov
xchg
dec
cmp
mov
out
xchg
xchg
repnz
ret
stos
in
mov
sub
dec
inc
stos
lea
xor
nop
fwait
dec
jmp
shll
jnp
xchg
and
adc
cmp
lock
jp
scas
sub
hlt
mov
rcrl
imul
ljmp
cmp
lds
lea
xchg
and
mov
sub
nop
push
imul
hlt
ror
mov
js
stc
dec
shrl
jbe
stos
leave
aad
sarb
loop
inc
sti
dec
xchg
fwait
dec
rorl
test
gs
cmp
scas
dec
sbb
inc
pop
nop
add
mov
fwait
xchg
xchg
mov
push
push
push
xor
addr16
jbe
dec
mov
and
inc
sub
push
dec
arpl
pop
lods
out
xchg
push
dec
jns
jbe
enter
cs
mov
or
push
pusha
pop
fwait
rcll
dec
movsb
dec
fsubl
xchg
pop
cmpsb
adc
sub
nop
ret
mov
mov
test
std
int3
sbb
and
mov
arpl
xchg
lods
push
loope
dec
sbb
jnp
into
inc
nop
addr16
adc
int
jo
mov
jle
push
jnp
xchg
and
xor
cmp
jnp
inc
js
movsb
push
mov
dec
inc
movsb
xor
shlb
nop
shll
rclb
sub
hlt
adc
cld
into
and
js
fstl
cmpsb
into
and
stos
sub
in
inc
xchg
cltd
icebp
scas
out
push
and
push
mov
xchg
stos
mov
xchg
fildll
sbb
adcl
and
adc
mov
addl
mov
shrb
mov
ja
cmp
arpl
pop
data16
jbe
mov
andnps
and
lret
gs
arpl
push
lds
test
xchg
fs
pop
dec
inc
cmp
mov
kmovb
lds
inc
dec
pop
mov
movntq
pop
dec
push
xchg
ret
and
or
mov
sbb
lods
mov
rcll
pop
shlb
scas
pusha
xchg
mov
fmull
nop
cmp
addr16
adc
addr16
dec
mov
xchg
test
fnsave
outsl
aam
pop
adc
andb
mov
mov
push
adc
gs
inc
sti
cmp
xchg
leave
adc
jmp
mov
push
push
das
in
decl
cmp
push
inc
jbe
pop
add
fdivr
rol
push
xor
xor
mov
adc
aaa
addb
popa
outsb
cld
jo
fsts
push
lret
jmp
xor
out
adc
push
lret
outsl
js
jnp
mov
mov
test
mov
bound
imul
adc
ss
js
and
mov
jbe
jae
pushf
das
or
dec
sbb
mov
push
aad
xor
arpl
popf
iret
pop
sbb
sbb
pop
out
int
and
mov
or
cmp
aam
inc
jmp
jno
js
outsl
lcall
idiv
xchg
mov
mov
push
push
ret
lret
jg
cmc
into
sbb
into
movsl
mov
and
outsl
sbb
mov
xlat
int
arpl
add
cmp
or
jg
add
das
inc
inc
adc
adc
mov
push
and
cmp
orb
pop
pop
xchg
pop
lret
and
sub
test
movsl
js
inc
pop
xor
mov
gs
inc
mov
mov
out
stc
xchg
xor
rorl
pushf
nop
push
clc
jne
lret
hlt
cmp
into
jnp
fisubs
sub
mov
or
cmc
popf
gs
arpl
aad
ret
lods
lods
arpl
ret
dec
add
dec
xor
mov
and
scas
cmpsl
add
mulb
push
cld
js
xchg
inc
in
into
outsb
push
push
rolb
out
ss
mov
inc
dec
mov
shll
orl
jns
jno
rorb
xchg
sub
nop
push
mov
dec
das
push
dec
call
cmp
outsl
clc
out
sub
notb
add
insb
jb
aaa
or
pop
xchg
adc
xor
in
jns
inc
pop
scas
sbb
mov
mov
scas
xchg
mov
inc
xchg
xor
pop
stos
cmc
xchg
call
scas
sbb
push
pop
mov
mov
imul
push
xchg
inc
xchg
ss
push
mov
push
push
hlt
inc
movsl
pop
xchg
push
push
sbb
xchg
mov
gs
push
lcall
outsb
xchg
mov
push
add
mov
push
insl
dec
jno
fwait
setne
push
dec
insb
movb
stos
sbb
xchg
adc
mov
xor
mov
pop
test
and
mov
sti
sar
sbb
sub
add
movsb
mov
outsl
jecxz
call
aad
pop
leave
pop
aaa
and
jle
push
int
push
xor
out
pop
cmp
xchg
inc
aaa
xchg
das
adcl
cmp
fistps
mov
dec
cli
jecxz
mov
rol
pushf
nop
push
and
xor
mov
xchg
jbe
aaa
ss
push
in
in
jne
mov
mul
dec
shl
fs
icebp
and
mov
lahf
nop
xchg
mov
jo
in
hlt
and
test
dec
lock
shll
xchg
subl
jnp
lret
pop
jmp
in
testb
or
lds
rolb
push
cli
into
dec
divl
dec
or
and
insl
mov
pop
mov
lods
cmp
pop
pop
fcompl
adc
insl
pop
push
jle
push
in
dec
sub
inc
test
cmpsl
cmp
mov
sbb
mov
inc
inc
pop
inc
gs
add
and
int
and
repnz
pop
fnstsw
mov
and
int
mov
cmp
sub
sbb
dec
cld
push
dec
xchg
jne
jo
xor
mov
push
clc
jae
aad
je
and
mov
jle
mov
sub
nop
imul
push
sub
imul
mov
in
iret
xchg
in
outsb
mov
dec
push
pop
fildl
sahf
push
sbb
fbld
inc
dec
and
push
nop
insb
adc
das
lahf
and
xor
dec
pop
nop
sub
in
cltd
das
xchg
pushf
addr16
jle
push
xor
adc
stc
daa
xor
xchg
add
ret
and
neg
jb
mov
das
out
std
mov
or
gs
push
fldl
sahf
in
sub
inc
mov
sbb
subl
or
scas
ret
cmpsl
push
into
sbb
mov
or
stos
icebp
repnz
mov
lds
icebp
lods
pop
xchg
shrb
lods
cmp
int
cmpsb
xorb
xchg
es
hlt
and
mov
sub
movq
add
dec
rcll
cltd
lret
aaa
mov
xchg
xchg
or
out
push
push
fmuls
into
mov
inc
sbb
xor
das
push
add
mov
xchg
push
in
jo
lds
into
mov
div
inc
rol
lret
jo
sub
insl
lea
xchg
inc
std
mov
jo
shlb
enter
sarb
cmpsl
jbe
mov
jno
pop
pop
aad
mov
xor
jge
fnstcw
repnz
fldenv
inc
xchg
push
mov
int
add
mov
pusha
mov
iret
aaa
iret
nop
inc
in
dec
or
push
mov
jo
jg
push
subb
sub
push
push
adc
outsl
ja
mov
js
shrb
mov
int3
sbb
cmpsl
pop
nop
icebp
xchg
dec
mov
aad
adc
stos
mov
nop
push
out
mov
popf
inc
ss
outsb
xor
shll
jle
sub
add
jg
addr16
mov
fsubrp
cmp
js
gs
enter
jno
pop
ja
mov
mov
scas
addb
xchg
xchg
imul
sbb
loopne
or
out
lahf
imul
mov
jmp
lret
sub
imul
inc
jecxz
cltd
movsl
xchg
ss
pushw
mov
pop
mov
jl
leave
push
cmpsl
aam
hlt
cld
adc
fsubs
imul
mov
pop
xchg
mov
sbb
sbb
cli
cmp
lret
adcb
int3
xor
lahf
cltd
pop
popf
mov
subl
adc
pop
mov
cmp
repnz
rorb
xor
xchg
in
int3
push
gs
jb
mov
testb
shl
xchg
cld
fdivl
dec
add
rcll
jbe
or
ja
into
push
leave
daa
sti
aam
idivl
sahf
jecxz
xor
jge
repnz
dec
push
or
xor
stos
push
inc
stos
push
add
push
xchg
fnstsw
jnp
out
sarb
cmpl
imul
pushf
test
add
enter
jno
inc
inc
push
fmuls
dec
mov
fcmovnb
pop
data16
pop
in
inc
ret
sub
inc
mov
mov
sbb
jmp
call
mov
push
mov
and
leave
in
push
cmp
das
pusha
adc
sub
pop
loopne
ja
das
jmp
mov
nop
xchg
cmp
ret
out
mov
pop
sub
mov
jae
mov
dec
loopne
das
das
push
and
insb
lea
scas
and
in
push
adc
into
mov
cli
and
fsubp
pop
lock
inc
cmpsl
push
mov
out
daa
enter
sbb
jns
aaa
out
lcall
sub
out
fnstenvs
mov
adc
dec
and
jle
mov
cs
jmp
test
push
mov
jmp
mov
jbe
xchg
ss
mov
aam
lahf
pop
sbb
movl
inc
sub
push
mov
movsl
adc
cld
pusha
add
call
fsubrl
mov
push
push
loopne
pop
ret
jnp
sbb
push
mov
sub
imul
mov
aaa
push
loope
cmp
jle
cwtl
shll
xchg
icebp
loope
gs
into
addps
cmp
shll
je
mov
add
xchg
shlb
jo
clc
sub
push
inc
adc
pop
pop
mov
mov
in
pop
sbb
or
lds
aas
imul
data16
sbb
sbb
cmpsb
pushf
imul
adc
sbb
push
mov
decl
dec
ds
fadd
xchg
mov
loopne
jns
popw
out
nop
fldenv
addr16
stc
arpl
jge
popa
mov
test
xchg
adc
stos
js
fidivl
xor
aaa
nop
out
inc
mov
adc
lahf
xorl
nop
dec
test
xchg
mov
or
aas
inc
sbb
fld
imul
add
imul
jno
mov
out
inc
xor
jmp
jge
jp
jnp
inc
lds
jns
aam
loope
notb
sbb
inc
inc
shll
cs
movsl
xchg
jle
in
lds
pop
fstl
lods
inc
jl
pop
add
cmp
imul
movsb
pushw
cmp
or
repz
cmpsl
push
mov
push
imul
and
jnp
movsb
mov
push
inc
testb
mov
jmp
mov
int
jbe
add
ret
std
pop
movsb
inc
fcoml
imul
cmp
mov
jae
mov
arpl
cs
lea
mov
cmp
test
divl
out
cwtl
xor
je
mov
push
push
test
mov
or
fbld
testl
insb
pop
sarb
xchg
je
hlt
pusha
jno
adc
mov
jne
push
in
fnstenv
clc
mov
or
mov
nop
xorl
test
bound
push
dec
push
or
in
xor
stos
clc
cld
sub
mov
mov
fldt
pop
jns
movsb
xlat
jge
das
sbb
xor
fstp
outsb
jge
adc
cmp
pop
jmp
in
sbb
xchg
fisubrl
or
fildl
pop
sbb
inc
imul
leave
add
cmp
jle
lahf
xchg
sbb
cltd
dec
lods
jo
push
push
ficoml
aaa
sub
aas
and
pusha
mov
push
adc
btc
mov
mov
or
fldt
sahf
mov
mov
into
popf
lea
jnp
sub
lcall
loop
push
push
dec
dec
sub
scas
rorb
inc
and
jns
rcll
cmc
cmp
in
insb
inc
xchg
ds
ret
ss
cmp
and
out
rclb
cld
xor
sbb
pop
xor
jecxz
stos
outsl
ret
lock
cld
xchg
pop
xchg
push
mov
xchg
mov
ds
fildl
stc
and
in
int3
jnp
es
mov
nop
xchg
std
dec
push
push
add
adc
cwtl
cs
and
fiadds
add
leave
mov
je
daa
arpl
sub
sub
push
dec
pop
test
ds
cli
mov
lahf
xor
flds
sbb
mov
pushaw
pop
mov
dec
mov
lds
sbb
xor
mov
xchg
inc
js
cmp
mov
gs
lret
jo
flds
adc
stos
dec
divb
xchg
subl
lds
mov
mov
push
jp
push
test
inc
push
dec
xchg
adc
ss
adc
xchg
sbb
mov
push
xchg
push
aas
sahf
decl
jg
mov
dec
shrl
js
movsl
inc
mov
ffreep
outsb
lods
cmp
mov
inc
rcll
test
shrl
test
inc
repz
rcll
xor
sub
lcall
or
pop
test
fwait
push
aaa
mov
les
aam
and
loopne
outsl
mov
push
push
js
xchg
outsl
sub
mov
lods
dec
mov
jo
xchg
xchg
shlb
fstps
dec
xchg
and
xlat
imul
push
int3
xchg
data16
lahf
add
push
mov
ds
push
push
mov
in
hlt
or
lock
addr16
push
jge
inc
cmp
out
mov
mov
movsb
mov
sbb
stc
xor
sbb
stos
imul
xor
fsubrs
fdivl
adc
dec
ljmp
or
sub
dec
jle
push
sbb
les
out
xchg
jge
rclb
gs
dec
pop
rcrb
jo
cltd
pop
imul
sbb
pop
aad
cmp
popf
std
test
sub
inc
mov
pop
int3
mov
sub
repz
cltd
fadds
pop
aam
dec
aaa
sbbl
xchg
add
and
xchg
sub
mov
leave
ret
mov
mov
aad
cmp
gs
sub
fisubrs
iret
fwait
lahf
and
pop
pop
mov
jl
ja
insl
std
imul
ja
les
repz
js
add
pushf
lods
les
imul
or
adc
push
mov
popa
fists
xchg
fnstsw
xchg
jmp
xchg
jno
ret
xchg
iret
popf
jl
cmp
in
add
cmp
adc
inc
insl
fisubrs
xchg
daa
aaa
adc
sub
adc
std
add
and
call
mov
pop
push
call
ss
jecxz
lods
test
aas
mov
or
scas
jns
sahf
aad
cmp
push
sub
sahf
push
adc
add
adc
xchg
mov
pop
sub
mov
out
ss
mov
sahf
mov
leave
lea
sbb
adc
leave
nop
js
out
sub
scas
into
cmp
mov
repz
leave
fstpt
subb
mov
fnstsw
pop
mov
rcll
jbe
cmp
and
ja
xchg
mov
mov
loopne
test
push
daa
movsl
mov
sbb
lahf
fisttpll
cmpsl
addr16
in
jo
sbb
cltd
push
lcall
push
outsb
out
mov
cli
push
xchg
lods
icebp
sahf
lock
jecxz
sbb
dec
adc
dec
sarb
xchg
jge
xchg
repnz
dec
mov
xchg
mov
scas
imul
inc
stos
in
lods
mov
aad
fisubrs
or
sbb
xchg
aaa
mov
and
mov
sbb
loope
mov
dec
das
xchg
mov
adc
dec
push
test
imul
jno
mov
jbe
pop
dec
push
jle
mov
sar
out
push
push
or
jb
andnps
hlt
std
add
cld
inc
push
imul
push
faddl
in
xor
add
cs
outsl
outsl
mov
mov
sub
mov
xchg
adc
xchg
jmp
xchg
ss
push
cmc
in
ror
xchg
lods
fistpll
dec
jle
or
lret
mov
pop
inc
jo
dec
adc
inc
and
pop
lret
jo
mov
lock
and
add
push
cld
call
xchg
popl
js
sub
xchg
cmpsl
mov
sub
adcl
add
jecxz
sbb
ja
or
push
push
into
jns
jb
xchg
fld1
pop
inc
mov
mov
pop
nop
into
inc
in
sbb
outsb
push
push
mov
in
aaa
xchg
paddq
hlt
xchg
push
add
xor
lock
hlt
addb
ljmp
cmp
push
xchg
decl
dec
aad
sti
js
jl
inc
imul
pop
into
cli
push
push
push
nop
aam
xor
lret
push
xor
fldenv
lcall
nop
ss
clc
js
xchg
xchg
push
aam
pop
aaa
mov
pop
jge
xchg
test
or
cs
idivb
jle
lea
hlt
ret
stc
sub
xchg
repz
sub
inc
dec
mov
dec
xchg
pop
inc
push
push
rol
jb
sbb
push
mov
mov
shlb
rclb
xchg
xchg
lahf
jecxz
lds
fnsave
jno
jle
inc
pop
xor
add
shl
jne
orb
cld
aad
inc
loop
inc
jns
scas
jno
aad
mov
bnd
inc
push
sbb
dec
cmc
mov
xchg
sahf
xchg
cmp
xor
mov
cmpsb
pusha
xchg
ja
jecxz
jnp
dec
xchg
in
mov
std
test
aad
jo
mov
push
and
leave
jg
sahf
push
xchg
jecxz
add
sub
fldenv
mov
sub
jmp
xor
jp
jnp
movsb
aaa
mov
subb
scas
jo
jbe
mov
mov
jle
mov
adc
or
add
int
test
cmp
jno
ret
fsubrs
and
sbb
jbe
inc
mov
pop
aad
xchg
mov
lret
mov
adc
jo
popf
xor
les
ret
mov
data16
and
pop
ret
adc
repnz
cmp
dec
push
cmp
lock
lods
adc
ret
xor
outsb
mov
mov
xor
mov
add
and
jo
jmp
orl
test
das
shrl
iret
pop
pop
pop
subl
mov
out
jl
loop
jae
out
cmp
cmc
loop
movsb
jp
into
push
aad
imul
movsb
cwtl
sub
inc
dec
daa
push
xchg
mov
inc
inc
and
add
sahf
xchg
inc
popf
cmp
push
adc
sub
xchg
pop
and
arpl
pop
mov
call
dec
jnp
and
xchg
pop
pop
lret
push
add
mov
in
jbe
out
in
loopne
xchg
out
mov
adc
jb
jns
push
add
out
pop
cmpsb
sub
push
pop
fdivs
jmp
sbb
xchg
or
int
xorl
fsubrs
sub
hlt
sub
sarb
lods
movsb
add
cmc
pop
push
into
and
out
inc
push
cmc
and
fiadds
scas
int
lds
add
mov
inc
aaa
xchg
negl
mov
sbb
pop
sub
das
daa
jle
inc
pop
push
pusha
les
in
stos
pop
popf
adc
mov
ror
pop
mov
into
shlb
jl
addr16
dec
adc
in
add
pusha
push
mov
ljmp
cmp
roll
dec
in
adc
ljmp
and
or
jp
in
aaa
test
in
sbb
jp
dec
fnstcw
loop
clc
xor
sbb
push
and
out
cmp
dec
dec
cmpsb
inc
fidivrl
cmp
iret
out
lds
dec
xor
dec
push
push
js
xchg
xchg
adc
adc
sub
in
popa
xor
cmp
cmp
repz
push
push
fwait
lds
inc
std
pushf
dec
ficoml
insl
push
mov
mov
bound
scas
jmp
les
inc
inc
je
push
in
jbe
rcrb
out
imul
rclb
in
lret
adc
je
mov
in
jae
mov
xchg
js
pop
icebp
mov
add
mov
push
movsb
mov
cld
dec
dec
push
dec
lahf
push
inc
hlt
and
sar
js
movsl
sahf
mov
scas
enter
lods
out
je
xchg
test
addr16
mov
jnp
mov
std
mov
push
xlat
mov
jg
repnz
pop
out
cmc
into
cld
repnz
dec
jge
arpl
repnz
xchg
test
rorl
jo
pop
adc
imulb
jecxz
loop
das
cltd
mov
bnd
xchg
adc
stos
sub
notb
mov
cmpsl
adc
in
nop
imul
jbe
out
jne
mov
push
hlt
push
pop
add
xchg
lds
fisubrs
adc
adc
mov
fidivl
mov
stos
dec
negb
imul
mov
sbb
jmp
arpl
in
in
and
fwait
scas
cmp
test
movsl
cmc
inc
or
mov
cmpsl
les
nop
cmp
jnp
bound
stos
xor
idivb
insl
jle
hlt
ror
add
sarl
jmp
mov
xchg
sub
pop
psrlw
xor
inc
scas
xor
dec
rcl
xchg
sbb
jnp
inc
cmp
jecxz
andl
mov
cmc
movsb
repz
std
ljmp
mov
addr16
jecxz
or
scas
daa
dec
lock
dec
xchg
adc
or
push
dec
adc
inc
adc
sub
outsb
jge
mull
xchg
adc
enter
jns
mov
mov
loopne
sahf
sub
scas
imul
xchg
jae
add
mov
outsl
jno
pop
cmpsb
xchg
mov
stos
lea
xchg
xor
mulb
pop
daa
lods
lahf
ret
orl
jmp
xor
fs
data16
xchg
lods
aaa
sub
sub
sbb
in
lds
cmpsb
dec
std
mov
mov
sahf
cmovne
mov
mov
inc
add
leave
movsb
shl
jbe
cli
sbb
jp
jns
fucomi
jo
sub
sbb
js
mov
dec
xchg
scas
sub
out
sub
shrl
sahf
sbb
in
aaa
and
add
ja
xchg
sbb
mov
add
mov
nop
shr
repnz
rcll
mov
xchg
fisubs
addps
ljmp
mov
add
xor
pusha
xchg
and
inc
adc
in
loope
inc
sub
aas
hlt
inc
or
push
imul
mov
cmp
inc
jge
jno
push
aad
mov
pop
pop
filds
shl
notb
loope
inc
cs
pop
sbb
stc
daa
js
mov
inc
divps
fsubrs
fists
enter
mov
inc
out
mov
push
inc
jmp
cmpsb
push
dec
pop
jae
scas
adc
mov
test
out
pop
mov
les
mov
in
sahf
sahf
stc
out
xchg
xchg
cmp
and
in
imul
xchg
ja
out
xchg
lret
fcoml
stos
xchg
lds
sub
shlb
in
mov
cmc
and
sbb
rcll
std
jecxz
gs
outsb
lods
mov
lds
ja
sti
sahf
sub
xchg
cmpsl
sub
mov
inc
aas
jo
xor
push
lods
mov
xchg
adc
in
mov
inc
ljmp
stos
stos
jne
hlt
stos
into
in
fcoms
add
jns
stos
iret
in
pop
stos
mov
lret
aas
lods
es
cld
test
das
push
lock
cld
push
popa
mov
push
lea
decl
fistps
insl
inc
or
jle
lds
test
aaa
mov
mov
mov
sbb
out
std
xchg
adc
les
ja
lahf
mov
mov
cld
shll
jecxz
daa
fwait
into
jno
push
clc
pop
cmp
enter
ds
xchg
pop
repz
stos
adcl
mov
dec
push
push
push
sbb
lea
push
add
rcll
nop
xor
mov
or
push
aaa
test
and
jae
jle
aas
cmc
sbb
inc
dec
pop
sub
into
pop
pop
sub
hlt
fcoml
mov
into
cmp
mov
rcll
int
stos
sti
in
lcall
inc
ret
xchg
inc
fmull
in
push
push
and
mov
fiadds
cmp
sub
or
push
mov
jne
adc
mov
loope
xor
adc
sub
sbb
and
push
mov
ret
jnp,pt
add
adc
repz
dec
mov
mov
cltd
outsl
mov
repz
std
int
jmp
cmp
outsb
decb
jnp
pop
inc
dec
sub
sahf
data16
cltd
mov
lea
jo
jl
mov
test
ret
mov
nopl
adc
mov
rorb
data16
mov
adc
popa
lret
cmpsl
lea
sub
pop
sub
xchg
sbb
dec
aaa
jo
mov
fisttps
call
mov
daa
fucomip
adc
adc
pop
std
dec
mov
aas
cmc
vpaddw
ja
pop
rcrl
mov
cld
xor
outsb
clc
sbb
cmpsb
rcll
add
pop
mov
imul
jl
push
add
sub
inc
lahf
scas
pushf
or
pop
sahf
adc
push
add
push
mov
lds
popl
fsubs
xor
lret
cld
add
mov
dec
push
push
inc
inc
xor
inc
cltd
shlb
xchg
lahf
dec
loope
adc
push
in
out
enter
push
stos
xor
dec
push
arpl
pop
mov
movd
rol
mov
push
dec
cmpsb
je
pop
leave
pusha
mov
inc
outsl
inc
js
push
mov
repz
aaa
dec
rcl
fstl
stc
stos
rcrl
repz
ffreep
adc
add
test
inc
xchg
iret
dec
aaa
mov
mov
ds
xchg
and
daa
mov
mov
loopne
fisubl
sbb
jne
cs
push
mov
jns
mov
fcmovbe
push
or
pop
xchg
dec
fldl
ds
es
pop
or
sub
lcall
fistpl
aam
aad
sub
dec
cmp
jb
jl
ss
leave
out
repnz
push
inc
sub
stos
in
popf
scas
fdivp
scas
inc
js
sti
scas
hlt
scas
mov
adc
xlat
jecxz
cld
jo
sahf
hlt
or
imulb
push
sub
std
mov
cmp
mov
xor
ds
cs
xor
int3
mov
mov
lea
mov
and
lods
xchg
movsl
jp
mov
rcrl
cmc
std
adc
cmp
cltd
movsl
aad
sbb
lahf
push
mov
insl
mov
pop
mov
dec
in
cmp
lcall
xchg
cli
aad
dec
scas
loope
jns
dec
enter
jno
sub
push
aam
test
shlb
aaa
mov
sbb
mov
add
mov
js
scas
push
pop
imul
jle
js
push
or
pop
mov
nop
stc
je
pcmpeqw
insl
ja
shlb
mov
push
dec
mov
outsb
mov
and
pop
mov
imul
jmp
in
jae
test
inc
shll
sbb
popf
inc
mov
dec
mov
test
jo
xchg
inc
push
pop
jl
pop
ja
arpl
lods
rclb
adc
rcr
jb
outsb
jg
fildll
outsb
and
push
js
cmpl
or
sub
test
aad
cmp
lret
daa
ss
adc
xchg
cmp
mov
in
jns
rcll
aaa
addb
aad
bound
outsb
insl
or
sub
aad
cmp
shlb
push
push
jp
push
cmp
int3
cld
mov
iret
pop
and
mov
mov
or
adc
shl
mov
sbb
jp
xchg
lret
lods
lea
jg
std
or
jne
aas
jecxz
fsts
pop
test
adc
or
inc
aaa
loope
push
in
add
sbb
xchg
in
push
nop
or
xor
inc
pusha
leave
push
in
mov
rclb
mov
outsl
and
adc
aaa
cltd
mov
xchg
xchg
scas
jne
js
ja
cmpsb
jo
ret
pop
sub
and
call
add
fsub
aad
cli
sbb
lret
jo
push
nop
xor
pop
icebp
or
lret
fists
sub
lret
mov
iret
lock
test
ljmp
mov
xorb
in
js
pop
adc
push
stos
add
pop
or
ret
aas
and
fs
xchg
pusha
into
mov
pop
pop
sbb
jnp
int
pop
std
lret
leave
sbb
cmpsl
not
inc
adc
dec
lret
mov
lret
pop
xlat
pop
rcrb
loopne
in
sti
ret
push
je
mov
pop
mov
stos
stc
pop
pop
fstl
in
aas
imul
aam
and
pop
dec
call
dec
jb
das
push
mov
fadd
xchg
repz
je
loope
pop
push
int
add
in
or
jns
cwtl
divb
lahf
cmpsl
cld
test
nop
dec
adc
testb
faddl
lds
jno
jbe
mov
pop
sub
fs
and
mov
fsts
mov
push
push
or
sbb
sbbl
adc
cltd
pop
cmp
das
push
push
xor
push
test
scas
mov
mov
call
aaa
fiaddl
mov
dec
or
mov
push
insl
icebp
movsb
cmp
xchg
aaa
cmc
test
inc
test
es
jnp
imul
sbb
add
jmp
movsl
andl
rcl
test
mov
cmpsb
sbb
push
lret
and
out
mov
in
aaa
nop
fnstenv
in
dec
test
push
jne
sbb
pop
pop
and
mov
mov
ja
nop
or
in
and
inc
loopne
jge
jl
adc
sub
ds
push
adc
dec
ja
mov
mov
pop
mov
in
inc
dec
bound
pop
lods
mov
imul
sub
inc
xchg
das
adc
pop
dec
sbb
imul
shrl
or
inc
jmp
xchg
outsl
pop
xor
aas
pop
test
mov
adc
mov
pop
sbb
fisubrs
dec
dec
jbe
into
or
dec
test
push
movsl
xchg
sbb
pop
aad
mov
jbe
add
jne
adc
and
pop
imul
sahf
movsl
cmpsl
mov
scas
dec
sub
adc
iret
cmc
xlat
loopne
mov
cmc
dec
popf
cmp
xchg
adc
push
inc
test
hlt
cwtl
cld
xor
push
out
js
xor
outsl
adc
push
xchg
imul
aam
push
fs
xor
pop
xchg
inc
mov
push
divb
sub
mov
decb
aad
stos
movzwl
push
jae
mov
lahf
ret
popf
mov
pop
or
inc
xchg
movsl
lds
je
nop
jnp
mov
mov
xorl
lret
rcr
cli
call
scas
xlat
xchg
leave
rclb
popl
aad
adc
jno
xor
mov
aaa
xchg
sub
vpmadcswd
nop
xor
fidivs
sbb
mov
jmp
mov
adc
cmp
and
sub
and
cmc
inc
movsl
jnp
add
iret
rclb
sub
or
out
int3
mov
nop
inc
mov
adc
test
sbb
in
ss
in
inc
xor
je
orl
or
xchg
inc
and
cmp
dec
aaa
xor
mov
xchg
nop
call
scas
mov
lods
lds
inc
push
rclb
scas
fadd
or
fs
test
mov
cld
mov
fsubs
push
setne
xor
jmp
jp
pop
and
and
ljmp
shll
push
dec
bound
daa
and
push
std
push
jl
cltd
jp
mov
ja
clc
mov
in
clc
xchg
push
cmpsl
and
sbb
inc
aaa
push
iret
daa
mov
addr16
jnp
daa
sbb
aam
out
ficoml
xchg
out
scas
movsl
ja
push
scas
enter
ds
ret
xchg
scas
cmpsl
aaa
add
mov
or
fmull
push
jmp
adc
mov
sub
ja
push
movsl
xchg
fadds
and
js
push
cmpsb
dec
or
push
in
xchg
rcrl
testb
cmc
into
xchg
ja
xor
xor
adc
mov
addb
add
enter
scas
or
sbb
pusha
shrb
xchg
jae
pop
jnp
es
ret
ja
aaa
addr16
and
mov
pop
dec
bound
fwait
bound
das
ss
mov
cltd
jge
inc
fcompl
xchg
inc
dec
jge
xor
pop
mov
mov
or
pushf
inc
pop
mov
hlt
pop
iret
fistpll
push
inc
jmp
stc
pop
rcrl
stos
scas
das
add
mov
dec
mov
cmpsl
xchg
mov
or
in
mov
cld
mov
push
xor
xchg
sbbl
xchg
mov
data16
lret
test
inc
inc
mov
mov
xchg
mov
xorl
cmp
mov
lods
mov
lods
mov
xchg
mov
xchg
adc
sbb
dec
js
data16
fld
aaa
out
push
jbe
xor
xchg
push
pop
add
gs
push
sahf
sti
lahf
and
or
pop
ljmp
lds
sub
fwait
jb
inc
daa
aaa
ja
int
mov
fs
mov
jbe
push
loope
mov
jge
cmpsl
xchg
cmpsb
sbb
adc
hlt
aaa
aam
repz
mov
mov
xchg
and
rcll
popa
inc
fists
aad
stos
mov
mov
daa
std
leave
cmp
and
add
movl
pop
push
jb
push
mov
les
push
iret
mov
pop
aas
mov
xor
push
inc
jmp
dec
shrb
cmpb
push
mov
jecxz
adc
pop
jae
jo
lret
movsl
inc
aad
inc
fistps
cmp
jns
movsl
int
iret
xchg
sub
adc
add
pushf
aaa
rorb
xchg
lea
sbb
mov
imul
xchg
sub
xchg
lock
dec
mov
or
cmc
test
xchg
js
mov
sub
mov
jg
jbe
jbe
in
jno
add
scas
add
pop
push
mov
pushw
mov
pop
push
mov
jno
xchg
mov
cmp
movnti
push
mov
orb
add
dec
jb
mov
lds
mov
shll
xor
jbe
xor
lea
push
mov
shrl
inc
cltd
lahf
jbe
or
jae
sub
xor
sub
scas
imul
and
inc
imul
push
jbe
pop
insl
add
aad
adc
mov
rcll
jg
mov
mov
stos
xchg
mov
xchg
xor
add
packuswb
scas
andb
mov
in
push
aaa
fs
push
popf
pop
fsubrl
push
mov
aad
roll
pop
and
adcl
shlb
aaa
fiaddl
push
shr
cltd
int
iret
aas
imul
sbb
and
lds
sbb
xchg
sbb
jbe
lock
loopne
lahf
sbb
pop
xchg
sub
lret
push
aad
or
push
cmp
popa
test
xor
pushl
in
xor
and
jecxz
aam
std
push
pusha
inc
push
cmp
ffreep
sti
and
cld
aad
mov
cmp
scas
push
sarl
mov
sub
xchg
lahf
xchg
mov
int3
push
push
das
ja
xchg
cmpsl
je
mov
fstl
adc
repz
push
inc
rcl
aaa
stos
push
xchg
push
jge
mov
jnp
aaa
mov
adc
sbb
push
mov
push
das
cmp
pusha
outsb
xchg
std
add
sahf
and
leave
lahf
jae
lahf
int3
cmpsl
adc
std
cli
xor
jb
xchg
mov
std
jmp
rorl
jg
mov
dec
adc
incb
iret
cmp
daa
push
add
push
push
pop
roll
or
and
mov
mov
sarl
cmp
pop
data16
push
or
mov
pusha
ret
int
loope
lret
inc
xchg
int
adc
push
mov
outsl
addb
inc
das
inc
ficompl
xchg
les
popf
add
mov
in
lock
jecxz
lcallw
add
shrl
mov
jne
ja
mov
push
ret
adc
and
rcll
mov
aaa
lahf
daa
pop
mov
cs
cmp
ret
adc
push
scas
add
pop
push
aaa
fsubl
test
xchg
daa
xchg
test
dec
push
stc
mov
mov
leave
je
dec
add
and
int
loop
adc
and
or
cmp
aad
inc
ds
sbb
movsl
or
cmc
ret
repz
or
mul
aam
inc
sahf
mov
jnp
outsb
sbb
push
mov
push
adcl
pop
leave
sarb
arpl
aas
and
adc
jmp
nop
test
shll
fisttpl
test
ret
xchg
push
pop
arpl
dec
mov
movb
repz
dec
ret
sbb
mov
test
fsubr
ja
ss
push
cmp
lds
push
sub
mov
push
mov
mov
imul
ret
xor
int
dec
lds
fdivs
dec
push
mov
sbb
in
pop
cmpsb
jae
xchg
cs
sbb
fistps
sarb
jmp
sub
mov
es
pop
std
mov
lods
mov
std
fadd
data16
out
in
jg
mov
mov
mov
stos
aas
cmp
mov
test
or
out
dec
or
lods
hlt
push
ja
cmp
mov
mov
push
pop
repz
faddl
mov
adcl
rorb
push
or
fdiv
jno
and
inc
jle
or
push
adcl
xor
jno
add
test
cltd
std
arpl
or
test
and
mov
xchg
lods
lds
adc
int
dec
xchg
imulb
mov
jns
mov
mov
add
ss
rclb
xchg
mov
adc
sbb
int
movsl
neg
les
push
ljmp
fs
xor
lcall
ds
repnz
insl
ja
jmp
and
and
imul
xor
lret
adc
jg
cmp
adc
notl
add
xchg
out
pop
or
mov
std
adc
push
dec
mov
dec
xchg
mov
in
or
mov
addr16
ret
nop
and
ds
xchg
push
mov
movsb
pop
adc
mov
outsl
push
ss
or
ss
pop
lret
iret
popf
ja
sub
movsb
repnz
lods
adc
push
sahf
cmpl
shrb
mov
mov
dec
rcll
fdivr
pop
push
cld
xor
frstor
adc
mov
int
imul
ss
test
mov
stc
stos
jmp
cwtl
das
pop
mov
loop
test
aad
and
or
repnz
mov
lret
push
out
lods
jmp
fabs
icebp
movsl
cld
out
push
repz
push
sbb
mov
daa
xlat
std
dec
xor
imul
rcll
xor
cmpsb
mov
pop
ficoml
add
out
jg
fxch
or
jnp
lahf
inc
mov
dec
pop
mov
mov
data16
xor
nop
int3
lea
ret
mov
pop
or
inc
mov
stos
bnd
in
je
stos
rorb
push
sub
popa
cmp
dec
xor
sbbl
push
jbe
stos
and
xchg
hlt
mov
std
xchg
add
shll
xor
pop
jg,pt
imul
sub
lret
in
adc
fmull
mov
mov
cmp
icebp
xor
push
mov
test
enter
xchg
test
xor
sub
fwait
xor
xchg
int
mov
outsl
inc
adc
xchg
int
dec
adc
or
push
fs
push
or
xchg
aam
out
mov
adc
inc
jae
test
dec
pop
fucom
pop
xor
getsec
repz
and
out
lods
push
xchg
rcr
roll
push
aaa
xor
sbb
jl
push
mov
sbb
adc
jbe
push
jge
sahf
popf
and
mov
push
in
iret
pop
gs
outsb
adc
jl
pop
jecxz
xor
push
iret
push
sbbl
xchg
xor
aad
push
repz
rolb
aad
mov
sub
pop
xorl
push
shld
xchg
imul
dec
shl
adc
lea
adc
les
pop
or
iret
xor
xchg
mov
pop
cld
js
stc
adc
int3
mov
dec
and
xchg
cmp
pop
movsb
and
outsl
jns
out
jmp
cwtl
incb
in
xchg
xchg
cmp
jns
and
cmpsb
hlt
rorb
jbe
mov
push
cmp
mov
push
cmp
jnp
fidivrl
mov
in
aaa
mov
dec
add
scas
in
ret
ror
fadd
repz
xor
xor
sarl
jbe
jae
inc
cmp
inc
xchg
loop
lret
sahf
mov
push
jecxz
cmpsl
cmp
push
ds
inc
jp
in
mov
lds
stos
mov
fwait
dec
shrl
inc
inc
rorb
push
loop
inc
iret
pop
mov
shr
ja
mov
push
or
push
bound
inc
jg
xchg
jne
ja
lods
int3
repz
dec
push
or
cmc
int
mov
mov
lea
pop
inc
lds
mov
fisttps
pop
sub
dec
sahf
cltd
lea
pushf
xchg
andb
js
lods
xor
push
cmpsb
xor
pop
ficomps
das
in
push
shlb
mov
stos
jecxz
pop
sub
add
test
mov
out
fists
in
outsb
ret
inc
pop
cmpl
aaa
out
fldl
mov
das
mov
mov
sub
mov
and
lods
aaa
dec
inc
push
sbb
mov
cmp
insl
mov
pop
fisttps
loope
jl
data16
rcr
ficoml
pop
cmp
mov
push
nop
jmp
add
cmp
sbb
es
imul
imul
mov
push
mov
pop
and
popf
mov
in
emms
cmpsl
lahf
movsl
or
es
mov
popf
test
xchg
cmp
inc
ja
hlt
jnp
in
xchg
dec
inc
pop
xor
aad
inc
lds
mov
mov
rclb
mov
lock
xor
lret
push
negl
inc
shlb
mov
xchg
mov
clc
shrl
adc
inc
jnp
jo
out
inc
test
add
pusha
or
fdiv
cwtl
pop
mov
aaa
daa
hlt
into
inc
orl
jecxz
xor
mov
mov
popl
cmpsb
inc
push
jne
movsb
dec
xor
mov
dec
push
jne
push
mov
adc
mov
out
test
jb
into
mov
scas
call
iret
aam
popl
aad
and
imul
pop
rcl
mov
mov
sarb
or
dec
or
adc
push
mov
inc
mov
xchg
adc
jl
rcl
imul
mov
repz
movsb
adc
cmpsl
outsb
mov
pop
pop
pop
xchg
inc
push
movsb
cltd
mov
aas
outsl
push
cmc
mov
xchg
movsb
int
push
orl
push
lea
lcall
subl
mov
mov
and
mov
mov
push
repnz
stos
adc
and
push
mov
aaa
lock
lahf
gs
inc
push
daa
push
dec
xchg
adc
xorb
cmp
dec
cmp
hlt
push
jge
negb
sahf
mov
outsb
fs
push
jge
loop
add
in
pop
addl
subl
sarb
xchg
pop
call
cmp
popf
mov
mov
mov
and
addr16
inc
lahf
mov
ja
push
jg
dec
outsl
imull
repnz
add
std
sarl
lods
adc
inc
xchg
mov
gs
stc
notb
push
lahf
cmpsl
outsb
leave
inc
in
shlb
repnz
stos
in
xchg
mov
or
leave
pop
arpl
das
js
sbb
mov
sub
adc
shl
jp
insl
iret
loop
lds
rcrb
leave
add
shrb
xchg
popf
sbb
lret
shlb
push
inc
insl
cmpsb
jle
je
orb
stos
mov
ret
push
sub
mov
test
mov
pop
jle
cmp
sbb
gs
mov
xor
jle
jecxz
sbb
daa
add
ret
sbb
rcrb
insl
adcl
xchg
mov
iret
push
add
xchg
sub
xchg
xor
popa
daa
popf
xor
xor
cmpsl
std
dec
sub
ret
jge
repz
bound
cltd
mov
sub
test
pop
iret
setno
iret
inc
aas
dec
idiv
into
pop
les
and
mov
pop
lret
std
pop
inc
xor
mov
xor
dec
xchg
orl
jle
xchg
sbb
adc
fcomps
pop
cltd
xrelease
xchg
in
or
and
push
or
sahf
mov
dec
mov
or
mov
pop
lds
mov
enter
arpl
xchg
mov
cmp
aaa
adc
mov
mov
or
mov
aaa
add
ljmp
jl
mov
ds
or
sbb
iret
ret
pop
add
shrb
enterw
jge
push
inc
lods
add
notl
cmpsb
addr16
mov
daa
mov
inc
push
cs
lret
sbb
gs
or
cmp
jg
movl
or
out
push
aas
pop
sbb
inc
xchg
repnz
outsb
pop
js
cmpl
aad
leave
jmp
mov
mov
addr16
outsb
call
nop
cmp
das
negb
lds
sahf
mov
push
sbb
xchg
in
or
mov
mov
xchg
iret
mov
push
das
adc
pop
pop
stos
clc
and
cwtl
iret
inc
pop
mov
jge
subl
or
mov
mov
int
lods
xchg
or
cs
dec
clc
cmc
movsl
aam
fwait
inc
lds
sub
and
mov
push
aam
shl
mov
aad
jnp
stos
jge
xchg
popf
aad
push
ljmp
dec
and
fwait
dec
xchg
jne
ss
mov
scas
mov
sub
scas
repnz
cmp
mov
test
aad
mov
xor
push
lret
or
aam
push
out
fs
jl
pop
out
jp
out
xchg
gs
sub
mov
cmpsl
mov
subl
test
repz
fbstp
jg
jle
xchg
aas
lret
cmc
adc
inc
imul
inc
xor
lods
aas
xor
mov
fst
jecxz
sbb
xchg
inc
sbb
scas
pop
sbb
jmp
dec
out
jbe
int
sbb
dec
iret
xchg
divb
push
xchg
out
sbb
fnstsw
daa
pop
cmp
jnp
xor
lcall
aas
lret
mov
push
ljmp
xchg
sub
jmp
sub
ffreep
das
push
or
mov
pop
push
aad
pop
addl
fisttpll
and
push
push
mov
int3
sbb
js
clc
mov
xchg
aam
iret
mov
test
inc
ss
hlt
scas
clc
mov
mov
fidivrl
jne
xchg
push
mov
pushw
dec
stc
outsb
repz
cmp
enter
jmp
jae
adc
daa
push
nop
das
pop
mov
mov
or
xor
xchg
les
mov
les
popa
dec
push
mov
or
enter
cmpsl
mov
movb
xchg
pop
mov
sahf
repz
shl
ret
test
push
in
adc
ret
int3
movsb
shl
test
gs
adc
pop
repz
aas
imul
mov
sub
pop
call
jge
adc
xor
inc
or
pop
fisttps
sub
inc
adc
cmp
push
xor
mov
xchg
mov
xor
push
ljmp
insl
mov
enter
sub
mov
adc
adc
mov
aaa
and
inc
cmp
inc
loope
push
scas
push
cltd
dec
mov
jbe
jae
push
xchg
movsl
inc
cmpl
repz
aad
xchg
lret
gs
lea
pop
repz
or
andl
sub
mov
andl
daa
imul
jbe
jge
mov
lret
daa
jnp
sbbl
push
ffreep
sub
jnp
aaa
push
js
push
jae
add
xchg
push
or
into
mov
xchg
lea
add
test
loopne
push
mov
mov
push
cmp
xor
nop
dec
imul
sahf
mov
jle
std
cmp
sbb
inc
icebp
mov
movsl
fistl
xchg
shll
lahf
push
xchg
push
das
mov
push
push
inc
aam
push
aaa
shll
fwait
notb
pop
mov
pop
mov
divb
fsts
mov
jbe
inc
cmc
or
dec
mov
adc
popf
nop
jge
dec
push
push
xchg
mov
lods
add
jg
addb
lds
lock
ja
dec
xchg
mov
in
push
xor
nop
mov
aas
jecxz
xor
out
xor
scas
insl
sub
and
fsubr
pushf
lret
aaa
in
xchg
mov
sbbl
pushf
lea
aam
dec
lods
mov
filds
dec
leave
sbb
mov
jg
or
sar
cltd
lret
adc
fisttpl
sub
sub
or
int
into
out
dec
jne,pt
movsb
clc
pop
ja
add
pop
push
adc
cmp
call
cmp
lods
push
test
push
mov
push
test
sub
inc
push
mov
jle
std
mov
iret
sub
lret
jbe
dec
mov
xchg
leave
mov
inc
cmp
push
mov
in
pop
adcb
call
push
or
mov
incb
daa
test
cmp
test
jno
mov
xchg
out
pop
dec
push
js
cmpb
repz
push
adc
jl
enter
adc
pop
addr16
jl
das
pop
sahf
dec
push
xchg
es
in
push
inc
jbe
out
aam
out
lds
les
imul
jb
inc
xlat
jmp
fcmovbe
and
mov
outsl
rorl
call
add
xor
fcoml
scas
fsubrl
notl
cmp
or
push
inc
xchg
shlb
push
push
mov
std
sub
arpl
inc
nop
in
jae
push
jge
jne
dec
or
out
mov
push
ret
and
jnp
mov
lods
inc
mov
ds
pop
jns
es
jbe
out
pop
loope
das
xchg
pop
and
and
mov
mov
test
std
out
add
orl
lahf
stos
mov
and
pop
sahf
jmp
leave
xchg
enter
cld
xchg
into
dec
icebp
inc
mov
push
mov
mov
mov
stc
outsb
loope
out
inc
in
test
hlt
movsl
mov
push
pop
daa
push
push
or
out
mov
pop
mov
xchg
ret
gs
and
fcoml
mov
into
mov
push
ret
in
mov
and
lods
push
mov
aas
js
mov
add
pop
inc
push
mov
aam
aad
inc
cld
mov
jne
xchg
scas
mov
outsb
aam
lahf
jb
dec
pop
jbe
clc
sub
iret
cmp
cmp
lret
leave
repz
addl
or
out
stos
test
subb
sub
ret
and
mov
movsl
sarl
ja
in
add
mov
push
js
sbb
sbb
cmpl
ja
and
scas
dec
inc
mov
adc
insl
jne
mov
gs
neg
jecxz
stc
scas
mov
and
cmp
nop
mov
push
mov
shlb
daa
movsl
call
dec
imul
sarl
imul
shlb
jg
sub
push
jge
xlat
rclb
cmp
xchg
sbb
sbb
pusha
testl
lahf
or
test
pop
mov
inc
cmc
jae
and
xchg
sub
pop
mov
cmp
das
bound
dec
iret
std
fs
and
mov
leave
mov
and
xchg
sbb
idiv
aas
cmp
daa
out
jno
aaa
int3
gs
cmpsb
loop
ljmp
mov
and
push
fs
jle
adc
imul
sbb
pop
xchg
inc
jo
movsb
or
and
push
js
repz
bound
push
int
daa
sbb
push
into
and
lea
cmp
aam
aaa
filds
jns
lret
mov
inc
outsb
pop
jecxz
or
cmc
aad
push
ljmp
and
dec
sbb
mov
jno
jecxz
popf
and
pop
cs
sub
nop
fistl
mov
xchg
hlt
addr16
sub
or
sbb
jle
out
sbb
dec
or
xchg
inc
imul
push
fs
in
dec
call
inc
test
out
cmp
lds
clc
pop
xabort
fs
ds
in
nop
mov
cmp
dec
out
mov
hlt
fwait
push
adc
cli
cs
push
jge
pop
aad
rorb
js
call
lea
or
mov
mov
test
mov
push
cmp
pusha
pusha
aaa
push
jge
stc
fisttps
sbb
jne
sbb
shll
xor
push
fcoml
pop
push
repz
push
sbb
jbe
ss
fldenv
mov
sbb
xor
push
pop
mov
testl
pop
nop
fcomi
or
inc
xchg
inc
mov
jg
cltd
mov
clc
push
pop
movsl
lods
loope
pop
mov
das
push
stos
mov
in
lea
scas
xchg
gs
fnstcw
hlt
and
mov
or
mov
loopne
movsl
mov
push
mov
test
mov
xor
ret
sbb
out
and
int3
std
cltd
sbb
mov
lods
lahf
adc
push
out
aas
xchg
cmp
mov
addr16
pusha
and
shlb
aaa
dec
fsubl
ja
dec
cmp
lret
jbe
repnz
jmp
test
sbb
inc
addb
aas
sbb
adc
fstl
cmp
mov
push
imul
or
xchg
mov
movsb
out
pusha
unpckhps
mov
js
je
inc
mov
sbb
mov
repz
jne
addb
lods
push
inc
pop
xchg
faddl
movsl
jmp
cmp
mov
cld
jg
loopne
mov
scas
and
cmpsb
xchg
jmp
mul
xor
mov
not
ja
dec
mov
shrb
nop
shll
js
fistpl
daa
or
nop
aad
xor
jnp
push
lcall
aam
mov
mov
mov
aam
push
xor
scas
loopne
outsl
mov
jle
scas
mov
jp
adc
fmull
stc
pop
push
push
out
mov
push
adc
pop
mov
jbe
aas
mov
sub
imul
adc
inc
or
aad
pause
jge
rolb
pop
je
mov
into
jb
imul
ficoms
or
push
push
cmp
ljmp
sub
cwtl
mov
ret
in
sub
push
adc
push
shrl
adc
int
test
mov
push
push
cs
call
ja
fninit
sahf
in
int
inc
cmpsb
xor
jnp
inc
or
adc
push
dec
popa
adcl
int
fadd
push
xor
xchg
xlat
iret
test
cltd
rcl
mov
shll
nop
dec
mov
push
in
ja
push
addr16
testl
ds
push
mov
ja
jg
fwait
pop
mov
mov
xor
or
push
rcl
sub
push
xor
mov
xchg
outsl
je
jne
xor
dec
data16
cs
into
sbb
dec
into
ret
mov
xchg
jns
js
push
xchg
and
loopne
hlt
lret
mov
jb
notl
int
pop
xchg
jnp
jnp
jge
data16
sub
xchg
pop
div
dec
into
and
mov
push
sub
pop
js
addr16
xor
inc
leave
scas
in
movsl
ja
movsl
je
iretw
jp,pn
testb
sahf
sbb
jae
adc
aas
js
adc
push
test
lahf
js
cmp
out
andb
xor
or
mov
adc
int
movsl
mov
je
sub
sbb
inc
ret
pop
call
xor
scas
pop
xor
pop
int
xor
mov
inc
jecxz
cwtl
out
rcl
mov
clc
arpl
mov
and
sbb
test
stos
out
pop
xchg
mov
leave
ljmp
ja
pop
bound
jbe
sar
xchg
mov
js
mov
push
xor
roll
jecxz
leave
mov
imul
lock
cmp
mov
out
add
shll
sub
lds
lds
je
int
jnp
xchg
in
xchg
js
lret
xchg
inc
pop
lcall
push
push
in
sbb
inc
xchg
xchg
sbb
inc
stos
arpl
jg
mov
add
jns
pop
bound
pop
mov
int3
imul
hlt
mov
mov
jb
mov
dec
cmp
dec
inc
mov
jg
jge
mov
rclb
mov
lods
mov
adc
cmpsl
fucomi
lods
mov
jg
ds
aas
aaa
sbb
sbb
or
mov
in
test
jo
call
fwait
pop
xchg
add
push
into
adc
cld
lds
pop
dec
popf
aad
mov
aaa
pop
mov
mov
or
filds
jbe
sub
and
les
jb
ret
push
xchg
dec
loop
xor
dec
xchg
xchg
cs
sub
ret
xchg
mov
test
mov
imul
add
sub
lret
sarl
ret
mov
fistpll
cltd
push
push
aaa
dec
jecxz
sbb
or
push
mov
inc
mov
xchg
je
ljmp
arpl
bound
inc
xchg
pop
gs
lret
stos
jne
inc
aad
jp
xorl
ljmp
push
mov
lahf
or
or
push
xor
mov
rolb
push
ljmp
mov
loop
push
pusha
cltd
mov
jo
dec
and
push
or
loope
leave
daa
jmp
data16
in
push
mov
jmp
adc
stos
rcr
xlat
sbb
mov
jge
xor
lods
inc
xchg
cmp
lds
popf
adc
loop
inc
xchg
repnz
stos
mov
les
xchg
mov
cmp
pop
sbb
dec
psraw
bound
out
mov
inc
leave
std
popf
push
pop
mov
mov
xor
cmc
or
lds
in
mov
aas
imulb
push
lods
sub
rcrl
testb
adc
rolb
dec
or
and
ret
out
aaa
ja
push
jne
sti
idivl
cmc
adc
aaa
or
icebp
fstpt
in
popa
pusha
sub
mov
xchg
scas
push
mov
mov
pop
mov
mov
ret
test
jbe
das
jnp
push
rcll
xchg
xor
push
daa
aad
nop
test
insl
cmpsl
mov
jne
lret
ss
inc
pop
aam
inc
sti
mov
jae
jbe
jecxz
rclb
mov
inc
outsb
add
cmpsl
pop
arpl
std
imul
int
daa
sbb
aaa
js
push
mov
or
pop
lods
inc
jnp
dec
testb
mov
daa
adc
ss
gs
rcr
inc
cmp
jo
mov
jno
div
xchg
push
in
xchg
gs
and
in
je
repnz
jae
jecxz
out
push
add
mov
mov
imul
mov
push
sbb
jbe
mov
addr16
xchg
pop
sub
int
rcrl
pop
mov
in
adc
sahf
jle
aam
test
dec
sub
dec
test
inc
mov
pop
sbb
mov
mov
mov
sahf
pop
jae
loope
fdivr
xor
loope
xlat
cmp
mov
sbb
mov
add
imul
mov
divl
scas
mov
or
loop
sbb
xor
sti
adc
jmp
movsb
sub
mov
idiv
test
sub
sub
test
push
add
dec
insl
into
lret
mov
adc
push
sbb
stos
stos
lcall
jae
push
in
mov
mov
xor
mov
xchg
push
jmp
pop
stos
sbb
dec
sbb
push
imul
xchg
inc
shrl
mov
push
ret
inc
aas
add
push
stos
push
pop
jle
inc
clc
push
or
push
xchg
pop
mov
popa
or
dec
add
pop
mov
lea
roll
stc
cmpsb
outsb
repz
xchg
and
addl
inc
xchg
xchg
sahf
insl
test
sub
add
add
out
mov
call
jns
cmp
xchg
push
std
test
sti
mov
popf
sbb
jge
pop
mov
xchg
and
test
fdivs
dec
les
clc
or
cmpl
cmc
sahf
pop
sbb
mov
call
jno,pn
cmp
push
xchg
or
imul
cmpsb
adc
clc
vpsraw
jb
and
cmp
inc
std
mov
or
out
adcb
hlt
and
idivl
aam
dec
test
mov
mov
dec
sub
sbb
mov
sub
stc
les
and
xchg
imul
inc
add
inc
mov
cld
faddl
push
pop
push
pop
mov
ja
fdivrp
jecxz
sbb
xchg
adc
jg
push
mov
lret
leave
faddl
out
sbb
loopne
imul
bound
mov
pop
lahf
push
aad
addr16
push
lret
aas
jecxz
dec
ja
jmp
adcb
sub
dec
inc
data16
xchg
jg
repz
int3
inc
sub
mov
jg
icebp
pop
and
pop
js
mov
jge
dec
mov
lods
xchg
into
gs
data16
mov
jl
push
in
push
imul
sbb
push
mov
in
jg
xchg
jmp
jae
push
rcll
lea
mov
dec
aas
lret
inc
js
xor
imul
push
mov
sti
pop
sub
push
dec
jecxz
xchg
aad
add
dec
and
into
enter
xchg
xlat
xchg
mov
dec
mov
dec
ja
ds
jge
mov
push
scas
xchg
enter
lcall
xchg
outsb
mov
scas
insb
imul
vandnpd
sub
push
scas
cltd
rcrl
pusha
jnp
mov
in
push
sub
add
loop
les
mov
dec
cmc
lds
pop
std
inc
vmwrite
test
data16
mov
dec
xor
shlb
dec
out
mov
xor
repz
pop
jo
ljmp
jle
loope
cltd
popf
das
ja
es
das
mov
das
xchg
mov
loope
jle
aad
adc
mov
lea
cmp
xorl
movsl
push
pop
imul
pop
test
sahf
and
cmp
not
imul
rcrb
dec
cmp
mov
cmp
and
add
subb
sti
dec
pop
jbe
cwtl
cmpsb
fbstp
aas
imul
imul
mov
negb
movsb
xorb
mov
mov
gs
mov
mov
ds
aad
icebp
dec
icebp
out
sbb
std
nop
ja
aad
adc
fsubl
dec
or
jmp
jecxz
mov
loope
sub
test
sub
xchg
jecxz
outsb
cmc
push
in
ret
jg
mov
xchg
jmp
pop
mov
push
jns
mov
xchg
push
aad
jne
sbb
inc
fsubs
in
aad
xor
add
repz
pop
inc
xchg
mov
out
add
push
in
mov
push
mov
lea
lahf
push
repz
or
adc
dec
add
push
inc
pop
jg
cmp
push
xchg
mov
sub
lods
push
add
mov
mov
push
std
subl
ss
jl
xor
push
in
mov
push
out
cmp
mov
cmp
inc
xchg
xchg
das
daa
xlat
adc
cmp
cmpsl
outsb
adc
push
mov
std
xor
pop
and
mov
pop
ja
xor
insb
push
push
mov
aas
aad
pop
rclb
fldcw
dec
scas
jecxz
xor
test
ror
addb
mov
outsb
aad
cmp
or
jmp
dec
dec
aaa
mov
xchg
xor
aas
std
adc
sub
xchg
ret
mov
arpl
inc
mov
divl
pusha
inc
add
mov
fimull
sbb
xor
call
sbbb
insb
push
jnp
lret
ss
or
xor
sbb
rorl
outsl
das
sarb
cmpsl
ds
add
xor
stos
pop
cmpsl
or
mov
scas
push
sbb
pop
stos
repz
xchg
cmp
or
into
or
dec
andb
mov
mov
dec
and
mov
push
add
mov
or
iret
adc
xchg
pop
sbb
dec
mov
inc
or
xchg
and
xor
adc
add
aas
incl
jne
pop
mov
add
or
push
inc
mov
xchg
sub
inc
negb
in
mov
adc
repz
sub
mov
xor
repnz
xor
dec
add
xor
mov
push
arpl
mov
mov
jle
add
jbe
insl
mov
mov
scas
mov
jmp
js
je
lret
mov
inc
out
or
pop
scas
enter
bound
push
dec
ffreep
enter
mov
jecxz
mov
pop
rsqrtps
cmp
jecxz
loop,pt
test
movsl
mov
jno
push
dec
and
fdivl
sbb
inc
pop
jb
lds
in
repz
jne
lret
test
int
inc
sub
pop
ss
pushl
mov
xchg
loope
jno
push
lea
sub
ret
sub
jge
inc
sbb
fbstp
cmpsb
or
lret
faddl
push
sub
in
shr
rol
add
jb
and
sahf
dec
roll
sub
orb
test
push
inc
outsl
pop
enter
jmp
int
mov
mov
xorb
add
in
inc
sbb
mov
and
fwait
loop
lds
sub
sub
shll
push
mov
push
mov
jle
mov
xchg
pop
mov
xor
pop
pop
dec
inc
mov
mov
test
pop
mov
cmpl
add
sbb
scas
iret
pop
xchg
mov
pop
xchg
xchg
sub
and
rol
out
mov
shrl
pop
mov
ret
mov
call
cmp
in
jo
adc
adc
sbb
jnp
icebp
mov
pop
fmuls
ret
jno
cmpsb
fwait
push
or
cmp
nop
sbb
sub
int
adc
xchg
pop
jae
xchg
fidivl
pop
scas
xor
pop
in
aad
mov
fnstcw
and
inc
inc
pop
aas
mov
add
inc
mov
cs
add
fnstenv
xor
jae
xor
int3
xor
imul
fisubs
push
js
and
lret
insl
lret
mulb
insl
xchg
push
cmp
inc
leave
jge
aam
mov
mov
cmp
xchg
cmpsb
repz
fisubrs
popa
sub
dec
cwtl
cmpsb
sahf
aaa
shll
iret
jbe
and
cmpsb
jle
movl
lcall
fists
imul
js
or
or
iret
mov
leave
outsb
and
test
push
icebp
jnp
fsubs
mov
push
shr
lods
xor
jge
cld
cmova
push
mov
ja
mov
inc
sub
cmp
xchg
hlt
sub
dec
mov
jb
rol
mov
lret
in
xchg
pop
mov
jecxz
cvtps2pi
ficompl
outsl
aaa
mov
cmpsl
loopne
out
adcl
in
aam
ffreep
outsl
dec
push
pop
and
inc
xchg
inc
or
out
flds
sub
aaa
push
cmpsl
pop
test
stos
lret
leave
daa
cmpsl
mov
mov
or
data16
movsb
sarb
lock
ret
xor
fcmovnbe
stos
adc
inc
jo
gs
jmp
cmp
push
pop
push
sahf
in
xor
xchg
daa
inc
insb
or
and
int3
adc
aam
inc
in
adc
loop
and
daa
sbb
push
or
sahf
adc
iret
dec
mov
xchg
dec
sbb
movsb
jecxz
adc
mov
and
xchg
fistpll
mov
mov
lcall
mov
inc
xchg
xchg
cmp
ja
fsincos
adc
jae
or
xchg
movsb
addb
lea
repz
adc
dec
cmp
mov
sbb
nop
push
xchg
pop
rep
fwait
jecxz
adc
xchg
xorb
pop
push
ja
jecxz
jne
push
dec
mov
or
fistps
lret
mov
jnp
cmp
or
repnz
dec
jp
inc
mov
stos
mov
repnz
cld
jo
adc
aad
dec
inc
sub
mov
jns
xor
enter
push
pop
pop
sbb
cmc
jno
push
repnz
rorl
je
ds
sbb
mov
push
cmp
adc
aaa
call
dec
ss
aad
mov
and
movsl
push
sahf
out
sahf
mov
sub
mov
pop
push
dec
mov
scas
mov
jo
xchg
lock
inc
xor
pop
push
dec
push
rcll
mov
xor
inc
mov
mov
das
jno
sbb
cli
pop
dec
xchg
fdivrl
in
repnz
les
imulb
dec
jge
mov
inc
pop
mov
push
out
xchg
mov
xchg
push
adc
pop
vsqrtss
push
cmpsl
hlt
ja
pop
dec
mov
imul
mov
roll
dec
mov
movsb
ja
jl
sbb
inc
mov
sub
mov
jecxz
and
andl
rcl
popa
mov
pop
loope
ds
xchg
sub
ret
mov
je
scas
int
xchg
xlat
adc
std
pusha
xor
int3
sbb
enter
sub
and
xchg
imul
xchg
shl
jg
xor
inc
mov
push
icebp
jmp
inc
mov
fildl
lods
fistpll
or
jno
fwait
add
mov
lret
cltd
xor
or
mov
jb
xor
fcoms
roll
jo
dec
ret
jmp
aas
stc
inc
dec
mov
nop
mov
dec
add
xchg
cmp
jl
les
cmp
xor
xlat
mov
xchg
add
gs
mov
imul
ret
movsl
mov
mov
xchg
popf
std
repz
test
jno
lods
inc
repnz
pop
pop
in
add
inc
sub
ja
push
js
out
pmullw
mov
imul
xchg
jge
and
push
cmc
adc
test
jb
and
and
scas
fists
repnz
xchg
mov
lcall
push
adc
inc
xchg
pop
jmp
ficoml
ljmp
fildll
cmpsb
adc
test
pop
imul
fists
xchg
xorb
xchg
int
insl
fbstp
loop
xchg
in
ljmp
sub
sbb
xor
push
mov
jmp
jmp
nop
js
testl
fs
jmp
ret
sarb
outsb
xchg
pop
cmp
out
pop
nop
test
adc
insl
mov
shl
aad
jge
pop
jg
pop
cmpsb
sahf
inc
repnz
xor
mov
cld
jecxz
lea
out
cmp
mov
iret
outsl
jg
int
das
data16
xchg
movsb
test
adc
pop
mov
incb
push
cmpsl
inc
sahf
jg
leave
mov
xor
xchg
xor
xchg
inc
jle
sbb
aam
xorl
jle
push
xchg
into
iret
mov
push
rcl
movsl
mov
lds
popl
fstpl
in
insl
pop
xor
movsb
mov
or
aad
xlat
movsb
btc
push
pop
das
fstpl
aas
push
xchg
xchg
push
adc
incb
arpl
sub
insl
aaa
imul
in
dec
daa
push
aas
adc
cmpsl
adc
out
pop
ret
loope
stos
pop
cmp
clc
into
push
lret
add
jae
mov
mov
xchg
js
or
sub
xor
pop
sahf
clc
cltd
scas
sbb
test
fisttps
mov
jmp
jg
pop
push
xor
mov
dec
aam
add
add
mov
cmpsl
xchg
ja
jne
mov
xor
sub
jo
pop
xor
xchg
loop
adc
cmc
pop
inc
xor
out
inc
andb
sub
js
and
shrb
and
adc
mov
idiv
lret
frstor
repz
push
aad
mov
mov
notl
mov
dec
cwtl
inc
pushl
or
dec
insb
in
repz
fwait
hlt
imul
push
mov
rolb
pop
aaa
mov
push
movsb
insl
lds
hlt
xchg
push
shll
outsb
test
scas
jns
rcl
nop
dec
cli
jno
xlat
pop
push
jno
xchg
ljmp
les
imul
jnp
cmp
sbb
ffreep
cmp
xor
icebp
in
fiadds
jnp
js
insb
lods
movsl
mov
mov
stos
and
ficoml
stos
mov
xor
std
mov
mov
and
mov
rclb
call
ja
sub
adc
test
pop
ss
out
mov
jmp
mov
mov
cs
mov
pop
xor
xchg
adc
movsb
ss
mov
or
popf
imul
lds
mov
out
xchg
cmp
out
cmp
into
inc
out
xchg
fcomps
mov
mov
xor
jnp
ret
aaa
divl
push
rolb
sahf
xor
test
addr16
sahf
stos
loopne
cmc
icebp
test
aad
xor
jno
inc
push
cmp
stos
xchg
out
fadd
test
out
shl
or
fimuls
outsb
push
int
js
dec
sub
jge
xchg
cltd
jns
and
int
subb
inc
arpl
scas
in
inc
mov
cmp
out
std
popa
xchg
data16
inc
xor
jg
gs
pop
sbb
jb
dec
call
arpl
cli
hlt
inc
push
adc
or
cmp
pop
add
aam
xchg
adc
pop
jge
in
mov
xor
dec
jl
push
ja
loope
sbb
mov
sbb
jb
shl
dec
hlt
std
leave
adc
pop
push
inc
outsl
cltd
xchg
stos
mov
rorl
cld
mov
jmp
imul
mov
mov
mov
xchg
mov
mov
mov
test
in
mov
aad
iret
mov
mov
pop
xchg
mov
cmp
xor
inc
in
ja
push
in
inc
nop
aaa
mov
fdivrs
push
loope
negb
les
fcoml
inc
cmp
frstor
jns
sub
ja
aad
fisubrl
and
lcall
mov
repz
xor
push
jge
adc
ret
xchg
fldt
js
les
xor
lods
adc
fsubrl
aas
xchg
clc
push
call
outsl
fcmovnb
outsl
imul
in
mov
pop
imul
add
jge
aam
or
sarb
aam
stos
push
mov
ds
add
dec
pop
aaa
mov
push
imul
fiaddl
ja
xchg
cmp
adc
mov
inc
adc
adc
mov
mov
fldl
imul
xchg
cmp
ljmp
xor
xor
idivl
push
lea
shll
aaa
adc
push
mov
adc
push
jnp
loopne
rclb
lods
lods
mov
cmp
aaa
sub
mov
and
jb
inc
lock
lds
sarl
jo
mov
pop
inc
xorl
mov
adc
xchg
stos
lcall
push
cmc
test
iret
inc
pop
mov
mov
jbe
fs
fs
xchg
cmpsl
pusha
mov
or
or
jl
push
mov
cmp
dec
lret
in
sub
imul
stos
aaa
mov
test
sub
jnp
push
out
lods
dec
jne
inc
fsubr
or
adc
imul
xor
fcoms
lds
imul
mov
jns
dec
data16
arpl
adc
pop
and
int
jae
or
xorl
xor
nop
pop
xor
dec
xor
aas
cmp
and
lods
mov
out
hlt
aaa
ret
xchg
cmp
popa
jge
test
jmp
lds
mov
call
ja
testb
outsl
aaa
inc
inc
js
mov
sub
sbb
dec
unpckhps
cmpl
aaa
sub
mov
ja
cmc
stos
dec
aas
jb
imul
sub
dec
xchg
sbb
jp
repnz
div
mov
shlb
insl
inc
outsb
cltd
dec
and
ret
stos
jo
test
xchg
ret
adc
jle
mov
mov
inc
divb
nop
mov
sub
push
fistpll
jge
xchg
ret
jge
lret
push
and
lea
mov
cmp
pop
dec
and
punpckhdq
out
cmc
inc
sub
pop
jl
inc
jno
and
xchg
pop
push
aaa
push
dec
pop
pop
sbb
iret
xchg
es
rorb
mov
jne
sbb
sub
pop
push
sub
inc
add
jge
pusha
pop
xchg
fsub
leave
pop
inc
es
push
mov
stos
inc
shrl
and
pop
pop
push
dec
push
lds
push
out
adc
xor
push
and
mov
iret
hlt
out
xchg
sub
std
orl
jge
mov
push
in
iret
pusha
xor
std
mov
xchg
jbe
inc
add
push
adcl
shlb
das
sbb
xlat
add
and
pushf
xchg
fsts
and
mov
test
dec
push
push
gs
lcall
mov
test
ret
push
xor
mov
xor
mov
popf
xchg
aam
neg
mov
xchg
sbb
mov
inc
ss
negb
and
jge
xor
dec
mov
cmp
or
mov
out
test
nop
pop
hlt
pop
test
add
enter
push
das
and
adc
movsb
pushf
push
pop
xor
js
das
ss
dec
mov
mov
repz
dec
pop
scas
add
pop
aad
add
dec
imul
push
jae
fs
aaa
inc
pop
push
sahf
add
pop
std
jg
jne
push
mov
inc
push
inc
cmp
xchg
ret
pop
test
in
nop
fwait
gs
add
lds
cmp
gs
fnstenv
iret
mov
pop
sbb
or
cld
in
lods
std
push
fwait
mov
add
mov
out
xor
loope
sub
inc
insl
mov
repz
xchg
adc
jbe
cmp
sbb
imul
inc
std
ljmp
or
mov
out
stos
aad
dec
nop
mov
ss
dec
out
adc
pop
imul
mov
jmp
and
jg
push
psubsw
sub
mov
pusha
std
jnp
leave
xchg
push
jmp
sbb
lcall
dec
jl
test
sbb
leave
fcmovb
cmp
into
adc
xor
test
stos
jge
gs
out
call
xchg
mov
jbe
sub
lea
jmp
push
jbe
out
dec
into
dec
fildl
aaa
repnz
sbb
add
iret
mov
test
sbb
movsl
xchg
xor
stos
and
xchg
shll
dec
iret
lcall
cld
cli
shl
push
stos
dec
aam
repz
mov
js
inc
pop
jbe
jg
inc
enter
sbb
sub
push
test
jge
push
mov
test
pusha
cld
dec
adc
mov
mov
scas
adc
push
int
jne
scas
test
or
cmpsl
jg
ds
cwtl
mov
pop
xor
std
dec
jmp
dec
and
js
negb
cld
xchg
enter
mov
adc
test
pop
mov
ss
sub
inc
jg
mov
mov
leave
cltd
mov
stos
ss
xor
leave
lea
insl
daa
jae
mov
mov
or
mov
mov
inc
fiaddl
les
fsubrl
push
jecxz
jp
filds
sbbl
hlt
sbb
lds
add
int3
jne
push
mov
inc
dec
ja
js
fcomi
es
sub
sahf
push
lahf
mov
adc
ret
mov
movsb
xor
les
push
iret
jne
cmp
adc
xor
push
xor
add
imull
outsb
xchg
iret
sub
sbb
xchg
jbe
dec
mov
dec
fidivl
fsts
mov
lods
mov
pop
xchg
fisubrs
adc
in
xchg
jp
or
in
pop
sti
test
mov
sub
sbb
jbe
xchg
sub
sbb
inc
sub
mov
mov
es
push
xor
adc
lahf
pop
fwait
test
pop
leave
inc
shlb
out
rol
push
icebp
aaa
js
xchg
push
sarb
repnz
idivl
ds
and
fstps
sti
mov
adc
aas
mov
cmp
jge
imul
mov
adc
loop
std
or
push
jmp
movb
xor
daa
test
or
imul
daa
adc
pop
mov
dec
cmc
in
add
jbe
mov
jns
cltd
adc
loop
rcll
test
pop
xor
inc
js
pop
in
int3
adc
lock
adc
or
div
clc
sub
insl
lret
out
aas
mov
xor
sub
push
cmpsb
jbe
xor
adc
leave
add
jbe
insl
lcall
rorb
inc
inc
mov
jmp
or
arpl
roll
call
iret
int3
mov
fidivrl
test
push
xchg
xor
adc
fdivr
xchg
mov
and
xchg
sub
jmp
les
outsb
test
or
mov
lds
lahf
push
sbb
and
dec
fs
jae
loop
jge
dec
jge
mov
inc
xor
mov
mov
push
jp
adc
adc
dec
xchg
shl
push
cmpsb
inc
test
sub
adc
or
mov
xchg
imul
mov
add
push
sub
push
inc
mov
fwait
xor
sub
pop
sub
sub
mov
mov
gs
js
fwait
push
xchg
in
fs
push
adc
std
lods
or
or
xor
movsb
ja
push
pop
imul
mov
iret
repnz
jle
xor
ja
in
push
dec
idiv
mov
xacquire
push
jnp
aas
lret
push
xchg
sbb
je
push
cs
xchg
push
sbbl
mov
loope
add
push
pop
push
jnp
fdivl
xchg
jge
inc
and
aas
xor
pop
mov
sahf
hlt
mov
xorl
dec
pop
jge
push
dec
jb
pop
push
imul
xor
popf
bound
mov
sbb
dec
inc
sbb
push
mov
mov
xchg
mov
adc
and
dec
jae
pop
xchg
aas
jle
stos
sub
in
mov
add
gs
sbb
iret
xchg
shrb
in
inc
adc
sub
daa
jp
flds
inc
push
scas
stc
movsl
xchg
bound
not
jecxz
int3
pop
or
out
cmc
pop
mov
hlt
std
adc
mov
add
mov
cmpb
cmp
aaa
bound
popf
lods
xchg
push
lock
in
sbb
fiadds
aaa
stc
mov
dec
hlt
fwait
inc
push
dec
sbb
push
jge
test
dec
sub
leave
mov
shrl
jne
aas
mov
pop
mov
pop
adc
lret
dec
std
cltd
in
mov
mov
lcall
mov
xchg
mov
fldt
arpl
das
push
jl
and
jge
mov
xor
adc
xchg
loope
sub
or
lods
imul
cmp
outsb
ss
xor
std
jge
aaa
jmp
stos
sahf
xchg
sub
sbb
sub
xchg
cmp
adc
aaa
sbbl
add
fistpll
jge
xchg
and
xchg
cmpsl
jmp
and
push
fsubrl
in
mov
popf
add
pop
sbb
aas
push
out
aaa
sub
and
mov
mov
and
gs
pop
and
std
insl
push
dec
daa
or
push
mov
in
xchg
jns
repz
cmpb
pop
inc
insl
mov
inc
pop
and
fldt
mov
adc
jg
and
or
aam
gs
hlt
jb
scas
test
test
xlat
stos
jae
xchg
dec
and
xchg
add
aad
int3
int
mov
sbb
into
pop
mov
pop
hlt
xor
movsb
ljmp
xchg
push
enter
mov
imul
mov
inc
inc
outsl
jmp
shlb
inc
fsubrl
xchg
fldenv
adc
cmp
mov
hlt
sub
xchg
cmp
jle
jmp
outsl
clc
push
aas
push
int
jle
std
dec
add
mov
and
fdivr
mov
add
lds
jge
jle
js
pusha
aaa
cwtl
lahf
sub
out
std
adc
repz
cmpsl
stos
jnp
hlt
into
outsb
jmp
push
das
mov
push
fildll
push
out
xor
aam
dec
adc
xor
push
fdivrl
cmpsl
inc
sbb
sub
mulb
shll
xor
jns
stos
jno
es
es
sub
call
js
es
mov
cmp
or
jl
cmpsb
jbe
push
in
dec
pop
outsb
dec
mov
out
mov
divb
hlt
hlt
xor
sbb
in
mov
xchg
mov
aad
push
test
jmp
out
in
jge
lcall
sbb
mov
sbb
rcrl
sub
test
fimull
cmpsl
xchg
lea
les
cld
cmp
popa
sub
mov
fldt
mov
jecxz
stos
xchg
jle,pt
adc
int
sbb
cmp
popl
aaa
lahf
mov
inc
cmp
xchg
loopne
cmpsl
repz
in
push
and
and
and
xchg
mov
sbb
aaa
in
cmpsb
inc
test
push
adc
imul
dec
push
xchg
nop
mov
sub
ret
inc
add
outsl
xchg
mov
add
mov
push
daa
mov
out
or
or
xor
loop
push
fs
pop
mov
ja
adc
xchg
mov
jbe
into
xchg
imul
fstpl
dec
xchg
pop
aad
inc
push
add
data16
push
mov
dec
dec
dec
out
inc
iret
outsl
mov
mov
adc
mov
mov
sub
mov
or
jmp
mov
sbb
push
mov
jae
fisttps
cld
faddl
jle
int
mov
or
in
cmc
cmp
cmpsb
mov
into
in
jge
or
repz
and
mov
dec
leave
jbe
imul
and
or
lret
fdivrs
in
dec
push
push
test
pop
aaa
iret
sbbb
push
inc
arpl
shrl
scas
cwtl
fxch
jle
dec
add
push
cmc
lret
push
xor
out
cld
xchg
call
mov
xor
and
jb
fsubp
mov
hlt
add
aaa
or
jmp
loop
jge
aad
push
sub
cltd
mov
js
cmpsl
mov
xor
stos
lahf
ret
push
sbb
mov
int
mov
jo
push
or
aas
jl
push
lock
movsl
inc
dec
dec
in
stos
std
rcll
daa
in
scas
icebp
aaa
mov
test
loopne
xor
jmp
mov
mov
dec
ss
iret
xor
sub
pop
dec
mov
add
pop
mov
das
or
xchg
jg
in
jnp
xchg
gs
outsb
leave
xchg
and
fs
les
es
std
test
ret
leave
stos
aad
mov
scas
mov
sub
subb
movsb
mov
jo
fadds
das
sub
cs
inc
xchg
je
subb
sub
push
push
mov
ret
or
push
fnsave
les
or
fistl
lds
push
xor
jmp
xchg
out
js
mov
std
rcrb
jecxz
out
xor
or
je
push
incb
repz
mov
sbb
gs
mov
inc
in
ret
push
dec
int3
scas
or
cmpsl
les
sti
fcoms
xor
pusha
out
sbb
arpl
dec
frstor
bound
push
push
inc
push
loope
stos
push
sbb
xchg
mov
jg
jp
lret
imul
fs
add
jmp
je
daa
xor
outsl
lret
rorl
xchg
aaa
lret
pop
cltd
ret
jbe
pop
js
inc
and
ja
mov
pop
add
or
aas
jns
sub
cmp
aas
push
shlb
dec
push
xchg
dec
aad
in
fucomi
push
cli
push
add
jmp
jno
mov
stos
fldt
cmpsb
ss
pop
xchg
push
xchg
ss
shl
test
or
hlt
fstpt
cmc
jbe
and
les
mov
in
push
test
jge
mov
jbe
stos
clc
pop
mov
nop
dec
jle
mov
inc
pop
test
pushl
orb
jmp
cs
sub
adc
push
inc
sub
ljmp
inc
js
std
cmc
pop
jp
loopne
aaa
aas
xchg
dec
out
or
pop
adc
rcr
inc
jle
std
es
cmc
stc
or
pop
sbb
mov
scas
xor
jge
sahf
xor
add
fisttps
test
repnz
in
adc
pop
jl
xor
mov
js
xchg
notl
ss
jbe
popl
push
or
mov
scas
ja
aas
sarl
and
orl
xchg
pop
adc
fadd
iret
jecxz
loop
or
dec
mov
stc
cs
adcb
sub
xor
es
test
pop
push
push
shrb
inc
mov
xor
nop
jle
inc
sub
xor
or
push
mov
test
push
idivb
fildl
mov
dec
inc
push
mov
mov
lds
lods
push
aas
xchg
mov
mov
nop
jmp
sub
inc
push
mov
dec
mov
mov
push
sti
cmc
inc
addr16
aad
fbstp
mov
push
xor
adc
mov
dec
push
jno
aaa
mov
xchg
mov
fs
and
xor
mov
dec
idivl
jne
dec
xchg
xchg
pusha
orl
inc
ljmp
jle
jmp
mov
in
mov
push
dec
mov
xchg
mov
fisubl
into
iret
pop
mov
test
fildll
rorl
cmpsl
push
xchg
adc
pop
mov
adc
inc
lret
mov
outsb
dec
mov
int3
lods
addr16
jl
sbb
jmp
sti
imul
nop
movsw
mov
push
or
push
add
scas
nop
dec
xor
and
rorl
cltd
xchg
aaa
or
jg
mul
mov
popf
pop
call
mov
dec
rcll
aad
mov
or
shrb
mov
or
movl
push
sysenter
inc
cwtl
push
scas
sub
add
jl
adc
leave
inc
dec
nop
mov
jno
movsl
xchg
cld
js
mov
jbe
xorb
lods
aad
xor
mov
or
inc
out
jbe
mov
mov
aas
and
out
pushf
xor
lea
mov
sbb
cmp
cmc
mov
or
jbe
movsl
insl
loopne
inc
fimull
xchg
addr16
mov
jbe
mov
or
sub
sbb
sub
lea
or
sti
ja
dec
loopne
scas
jl
mov
jo
pop
add
dec
leave
sub
lret
xor
sub
rolb
jmp
imul
push
aas
addr16
int
mov
pop
xchg
aaa
js
out
mov
inc
mov
test
mov
scas
dec
sbbb
jp
adc
jp
mov
aas
xor
jne
test
movsb
and
or
mov
repnz
mov
push
fdivp
aaa
adc
mov
push
ror
jg
xchg
adc
out
cmpb
daa
call
ja
push
testl
out
addr16
aam
aaa
mov
test
pop
pop
push
dec
jae
lea
push
push
lods
ljmp
push
iret
xor
inc
cli
daa
add
pop
stos
inc
adc
xorl
jmp
xor
ja
push
xchg
mov
mov
ja
add
sahf
sbb
fisttps
mov
adc
pushl
jmp
jle
out
sub
aam
imul
call
pop
push
sbb
repz
xchg
andl
push
mov
rol
cmp
out
iret
inc
push
ret
mov
aaa
mov
mov
mov
scas
scas
inc
outsb
inc
hlt
cmp
mov
repnz
mov
fidivrl
mov
xor
insl
lods
and
das
ss
mov
aas
xor
mov
push
mov
mov
mov
repz
stos
push
out
push
pandn
loop
mov
push
mov
out
lahf
inc
mov
iret
sbbb
pop
dec
xchg
push
mov
dec
iret
sub
aaa
sub
xchg
pop
and
dec
jns
mov
shll
mov
cmpsb
daa
in
sbb
out
xor
xor
addl
addb
ja
lret
lea
sahf
or
stos
dec
orl
adc
idivb
repz
mov
aam
lret
out
lahf
push
pushf
lds
jns
sbb
cmp
ud0
aad
jge
fsubrl
pop
ret
pusha
pop
call
lret
incl
div
call
sbb
ljmp
xchg
jmp
xor
lock
jbe
gs
dec
inc
cmpsl
fmul
add
adcl
or
cmpsl
and
fistpl
inc
cs
dec
shl
stos
pop
call
das
enter
mov
shlb
cmp
xchg
sahf
loopne
mov
aaa
xchg
negl
scas
sub
das
jmp
pop
xchg
xchg
les
sub
out
cmp
xlat
int
insl
sub
imul
pop
sarl
data16
pop
lds
outsb
add
mov
xor
jns
add
push
jbe
mov
aaa
sub
imul
aaa
jle
loope
ljmp
jae
nop
add
jle
mov
add
sub
decl
inc
inc
test
sbb
pop
leave
dec
push
pop
into
push
adc
test
mov
loope
adc
js
mov
inc
mov
push
xchg
mov
inc
mov
xor
aad
jle
push
and
pop
aad
sahf
dec
mov
dec
std
pop
cwtl
loope
mov
lret
adc
sbb
out
test
out
jae
loopne
pop
rclb
mov
mov
stc
push
cmpsb
daa
cs
nop
mov
mov
jge
sub
loope
dec
in
add
push
mov
cli
xor
mov
data16
cwtl
lds
sbb
stos
push
mov
shll
dec
iret
mov
out
cmpsl
shrb
sahf
iret
aas
lahf
jnp
mov
pop
cwtl
fdivr
push
push
stos
inc
sbb
test
cmp
pop
inc
sub
jp
sub
inc
data16
and
jns
or
xor
xor
cmpsb
inc
mov
ja
push
pop
xchg
inc
pop
arpl
pusha
push
push
cmp
sub
mov
loopne
pushf
mov
and
mov
ljmp
xchg
inc
movsl
and
mov
or
sbbl
add
xchg
jbe
nop
jb
dec
adcl
out
mov
inc
pusha
jb
dec
test
mov
pushf
adc
lret
hlt
and
mov
jo
add
mov
sbb
sbb
into
rcl
nop
mov
decl
int3
inc
dec
xor
pop
sub
mov
in
cmp
mov
dec
mov
cmp
sub
addb
inc
xchg
js
push
scas
inc
push
dec
lods
push
cmpsl
inc
lods
push
xlat
es
pop
ss
loop
push
fdivl
leave
test
ror
lahf
rol
mov
test
lcall
xchg
inc
jnp
sbb
xor
popa
loopne
loope
sti
inc
pop
out
pop
mov
outsb
push
iret
xchg
dec
push
push
xor
data16
mov
lods
xchg
mov
mov
mov
xchg
dec
notb
sub
stos
fldt
mul
dec
xchg
stos
aaa
mov
outsb
hlt
mov
pop
jl
mov
add
mov
imul
and
dec
out
sahf
stos
clc
jl
test
rorb
mov
mov
xchg
mov
aaa
xor
cltd
mov
aad
or
inc
js
cmp
ss
inc
mov
std
fmulp
jmp
popf
push
jle
push
rcrb
lret
js
jb
push
fsubp
shrb
out
dec
shlb
std
pop
jmp
jnp
jle
and
std
sbb
ds
mov
sbb
jg
testl
fisubs
loop
cmpsl
imul
mov
xchg
outsb
sbb
mov
les
jns
mov
test
and
rorl
js
std
shrb
js
imul
push
out
jecxz
call
fdivl
fistpl
pop
pop
push
push
mov
pop
dec
push
jns
jp
pushf
mov
in
test
out
hlt
pop
out
scas
mov
sub
inc
in
aad
xchg
pop
lret
adc
aad
jns
cmpb
fidivs
and
aad
rcrl
adc
js
mov
daa
push
and
mov
ja
roll
push
xchg
les
aaa
xchg
js
inc
outsb
or
xchg
add
push
pop
push
dec
in
ret
pop
mov
mov
jl
rolb
cmc
xchg
push
lea
mov
mov
or
mov
adc
and
inc
js
cs
mov
imul
ficomps
aad
scas
mov
jbe
push
mov
dec
repz
cmp
mulb
adc
jmp
cmpsl
add
xchg
aas
adc
pop
imul
pop
in
rorb
lods
decb
arpl
jmp
fs
push
mov
ret
pop
lods
cs
or
ret
mov
pop
mov
hlt
and
push
aad
movsl
aaa
or
sahf
and
xchg
mov
cmc
ret
jno
inc
push
xor
vshufps
je
stc
rol
lret
movl
xor
std
aad
fdivrs
test
movl
add
cmp
xor
add
sbb
dec
cs
pop
stc
jbe
adc
out
dec
mov
xchg
scas
pop
push
pop
mov
jecxz
aad
test
sub
sahf
test
jecxz
fs
dec
and
push
stos
push
mov
nop
xor
jbe
pop
cmp
and
andl
lret
jne
add
inc
add
xor
inc
jb
inc
testl
movsb
ja
out
lret
cmp
dec
cmpsb
fstl
push
icebp
insb
mov
cmc
pop
dec
bound
add
xor
sbb
adc
test
mov
adc
mov
fsubs
addb
scas
mov
cmp
fistl
jecxz
addr16
fnsave
jl
adc
adcl
add
inc
sahf
scas
mov
arpl
push
xchg
lahf
aas
adc
jle
inc
inc
jg
aam
add
mov
xor
dec
adc
and
sahf
mov
clc
movaps
sbb
fbld
jl
pop
int3
push
sbb
mov
jle
aaa
and
adc
xchg
dec
popf
mov
jbe
imul
lcall
mov
je
lods
leave
cs
push
push
pop
pop
stos
and
out
in
cmc
int
mov
xchg
movsb
sbb
cli
cmc
adc
mov
pop
xchg
aas
mov
jge
or
sahf
outsb
in
les
sbb
lock
rclb
call
xchg
push
nop
xorb
test
push
xchg
call
fwait
sbb
push
lcall
cmp
inc
pop
jge
add
adc
pop
sbb
mov
or
ja
clc
aaa
inc
inc
aaa
sub
push
add
fwait
jl
and
mov
std
js
aas
pop
aas
les
mov
js
js
std
jge
jb
dec
pop
stos
mov
shll
add
push
mov
cmp
iret
jnp
pop
or
mov
leave
sahf
xor
adc
pop
std
dec
cmp
lcall
sbb
daa
pop
imul
mov
cmp
mov
loop
ret
std
sbb
aad
sub
mov
xchg
xchg
in
fsubrs
push
dec
cmp
scas
aad
sub
andb
shl
dec
lds
pop
scas
mov
jb
jbe
enter
and
pushf
jecxz
js
mov
int
data16
mov
rol
jecxz
mov
dec
subl
movsl
and
mov
data16
ds
std
mov
stc
jbe
fisttps
jmp
jb
lds
mov
sbb
mul
aad
fildl
sub
fcmovbe
fnstenv
std
adc
pop
push
sub
aaa
cltd
fwait
mov
mov
sahf
xchg
scas
mov
push
sbb
sub
jle
std
jns
fmull
adc
sbb
dec
scas
mov
mov
stos
stos
stos
jecxz
xchg
stos
xchg
xchg
push
push
std
out
jecxz
pop
sbb
xchg
push
hlt
into
stos
and
stos
push
jmp
pop
lret
ja
inc
xchg
cmpsl
push
xchg
pushf
shrl
jne
or
movsl
mov
mov
push
inc
push
out
dec
test
jl
xchg
cmpsl
cld
dec
mov
data16
sahf
int
xor
lret
mov
aas
cmc
sub
stos
mov
mov
jg
jecxz
scas
into
lret
xchg
jl
dec
out
scas
dec
jecxz
icebp
adc
sub
mov
mov
push
inc
mov
das
pop
cmc
call
pop
insb
xchg
pusha
shll
dec
rcl
mov
cmp
mov
or
jne
cltd
mov
inc
adcl
inc
lds
outsb
jne
cmp
dec
scas
jae
in
dec
jbe
adc
add
jge
pop
stos
pushl
xor
dec
xor
inc
xor
lods
xlat
lea
mov
inc
test
xchg
cmpsb
or
fistl
enter
nop
dec
insl
loope
sub
add
mov
mov
pop
test
clc
xlat
lods
jmp
mov
cmp
add
out
sbb
ficoml
divb
xchg
scas
jmp
dec
xlat
sbb
lahf
nop
cmp
mov
sub
xor
mul
adc
adc
push
sahf
dec
mov
imul
mov
jmp
mov
ja
sub
xchg
xor
fs
imul
inc
cwtl
and
cltd
jecxz
inc
adc
sbb
sti
mov
insl
or
add
aaa
mov
or
mov
xchg
jbe
ja
daa
pop
dec
jg
js
ret
mov
das
xor
mov
aad
sbb
insb
cmp
push
mov
jne
cs
mov
jne
fiadds
xor
pushl
push
inc
lret
mov
subb
xchg
jae
repnz
dec
std
and
ret
jnp
notl
lock
int
xor
jmp
imul
idivb
mov
nop
push
pop
push
xor
pop
adc
mov
mov
mov
xchg
pop
pop
adc
ficoml
push
ja
outsl
rcll
mov
cmp
ss
and
test
pop
adc
jbe
int
lods
gs
aam
xor
push
cmp
negl
aad
jle
bound
idivb
hlt
xor
mov
inc
outsl
push
mov
dec
movsl
clc
aam
mov
mov
inc
ljmp
jmp
xchg
add
sahf
movsb
lret
xchg
fimuls
stos
and
cmpsb
cwtl
push
lods
pop
xor
negb
aad
gs
dec
mov
aaa
mov
inc
and
sbb
jg
jecxz
shr
inc
cmc
jle
sbb
jbe
into
je
int
fmull
sbb
xchg
clc
mov
or
sub
adc
out
cmp
inc
shrb
inc
leave
aaa
stos
inc
mov
das
negb
xchg
inc
sar
dec
xchg
mov
outsb
fldt
lret
rorb
aas
cltd
int
push
xchg
icebp
adc
mov
stos
movsl
in
or
movsl
xor
push
xor
inc
ja
pop
xchg
in
lret
lcall
scas
sub
ja
mov
adcb
repz
aad
inc
xor
add
push
push
imul
nop
aam
out
adc
xchg
xor
jge
jp
dec
mov
sub
stos
call
xchg
orb
pop
aaa
pop
repnz
dec
arpl
mov
out
sbb
xchg
xchg
gs
and
pop
ds
fcoms
lea
imul
fsub
or
jmp
jmp
jns
stos
and
inc
iret
pop
mov
roll
pop
dec
leave
adc
sti
testl
jge
mov
out
xchg
xchg
dec
push
cmp
rclb
mov
and
addr16
dec
fstl
dec
stc
inc
int
fstps
push
pushf
in
sub
jecxz
aam
mov
out
mov
fistps
add
mov
inc
jmp
inc
and
push
adc
fwait
lret
xchg
popa
icebp
hlt
ja
cmp
js
test
std
cmp
jecxz
mov
xor
sub
repz
aas
xchg
xchg
cwtl
inc
sbb
stos
cmp
test
iret
aad
dec
pop
leave
loopne
sahf
lock
movsl
nop
int
adc
inc
ja
or
sbb
sub
incl
mov
js
sub
sub
inc
roll
push
leave
mov
inc
xchg
lods
mov
or
jnp
ret
fcoms
gs
out
std
test
dec
imulb
ja
into
cmp
mov
fbstp
inc
subb
push
push
movsb
test
callw
aaa
adc
mov
imul
sahf
jne
hlt
inc
adc
in
aaa
mov
cmp
lcall
adc
lret
leave
filds
stos
into
jge
add
loopne
aas
sub
dec
std
or
dec
jecxz
sub
mov
inc
movsb
mov
push
data16
les
js
lods
daa
movsl
xchg
lret
out
mov
pop
pushf
add
cmp
dec
fbstp
outsl
addr16
daa
orb
daa
xor
dec
push
gs
inc
jbe
xchg
mov
js
rclb
and
pop
mov
addr16
faddl
fnsave
and
mov
or
je
ret
stc
pop
cmp
fstpl
sub
call
stos
sub
sbb
outsb
ds
or
xor
and
arpl
scas
xchg
xor
bound
mov
and
popf
mov
aas
jo
outsb
int
push
inc
iret
mov
adc
inc
push
xchg
or
xchg
aas
push
scas
shl
dec
sarl
dec
movsl
adc
inc
mov
sub
andl
xchg
jno
mulb
push
dec
out
mov
sahf
scas
idivb
or
ja
push
pushf
daa
inc
movsbl
or
inc
xchg
stos
jp
ljmp
jmp
xlat
mov
movsb
fistps
pop
insl
rcrl
mov
hlt
mov
mov
ss
xor
das
out
and
mov
mov
push
repz
and
mov
cltd
stos
fld
pop
xor
js
outsb
flds
scas
jnp
xor
push
jmp
mov
repnz
or
rcl
call
idivl
jbe
or
pop
mov
out
add
sub
sbb
ud2
hlt
dec
inc
and
xchg
add
cmpl
ds
xor
imul
ss
add
scas
sbb
iret
jne
jecxz
in
rclb
out
pop
jnp
dec
shlb
movsl
pop
sub
notl
jne
xchg
sahf
xchg
aad
push
lds
scas
sub
sbb
mov
xchg
stos
mov
sub
push
call
pop
push
cmp
aaa
fsts
test
cmp
call
ljmp
or
enter
jge
rcrb
hlt
sahf
push
jnp
sbb
sub
add
mov
notl
addb
jge
jns
rorb
xchg
addr16
lods
addl
mov
push
sbb
sub
or
xchg
sarl
mov
aas
cmc
loope
mov
mul
sarl
sbb
mov
jle
pop
adc
and
push
jg
dec
in
dec
cld
pop
sbb
lds
aam
stos
leave
mov
sbb
add
xor
jge
mov
cmc
push
lahf
pop
pslld
out
fmuls
stos
movsl
push
and
in
cmp
pop
push
mov
sbb
mov
out
push
xchg
mov
int
mov
xchg
pop
test
jge
xor
aad
xchg
cmc
repz
dec
pop
divb
sub
lods
jb
decl
push
test
icebp
jne
mov
push
mov
xchg
mov
in
inc
stos
mov
dec
test
mov
shrb
xor
leave
jle
sbb
mov
and
addl
jle
and
leave
enter
mov
xchg
popa
mov
and
fs
cmp
lea
inc
inc
jbe
sahf
pusha
or
sub
movsl
add
sti
enter
in
testb
fs
push
ja
xchg
mov
mov
jae
sub
movsb
dec
adcl
ret
pop
or
rcrb
scas
cmc
sahf
cs
mov
xchg
mov
ss
mov
movsl
dec
fstl
xchg
add
or
ds
xchg
jl
cmc
push
jbe
mov
out
daa
jle
xchg
xor
dec
test
or
test
or
les
insb
imul
sti
sbbb
adc
lock
xorl
out
xchg
jge
mov
fcompl
nop
push
mov
dec
push
dec
insl
sahf
rcll
xor
js
and
idivl
in
push
aaa
test
adc
stos
sarl
pop
pop
mov
sbb
jecxz
sub
movl
ss
pop
mov
inc
insl
push
jbe
fdecstp
sub
xchg
xchg
jle
sub
pop
push
imul
test
sti
cmp
out
outsb
pop
daa
or
jecxz
inc
test
jecxz
aas
sub
ret
mov
adcb
aaa
or
into
mov
adc
push
push
pop
jae
or
cmp
mov
into
out
pop
dec
gs
int3
scas
insl
insb
adc
imul
stos
xchg
xlat
test
pop
push
jg
jo
dec
inc
dec
cmc
cld
sub
cltd
xchg
xchg
fstps
push
sub
and
aaa
aad
and
and
movsb
jnp
mov
test
aad
add
push
xchg
xchg
mov
inc
xchg
mov
out
xor
cmpsl
ljmp
aam
jne
aam
pop
sbb
in
fstpt
pop
sub
int
cmpsl
aad
aam
adc
rorb
add
inc
sbb
data16
les
movb
cs
mov
pop
push
pcmpeqb
adc
push
and
cmpsl
push
daa
pop
cmp
test
je
push
mov
pop
mov
jnp
pushf
pop
es
and
les
cmpsl
jle
xchg
daa
add
mov
xor
cmc
cmc
pop
nop
adc
repnz
scas
jle
jns
xchg
xchg
outsl
or
mov
cltd
push
ss
repnz
mov
sahf
cmc
les
sub
out
lods
inc
pop
push
outsl
pop
aaa
xchg
push
push
aam
ja
jns
dec
push
ds
call
pop
out
fsubs
ja
mov
pop
push
ja
pop
inc
mov
add
jo
push
and
xchg
popf
inc
push
mov
ds
push
mov
xchg
mov
call
js
mov
jg
xchg
cmp
mov
jp
repnz
scas
or
dec
push
jne
and
sar
mov
int
mov
fnstsw
and
xchg
aad
call
jbe
mov
clc
xor
adc
leave
arpl
sub
inc
mov
aaa
aas
popa
aad
and
inc
jns
adc
mov
push
in
sbb
sti
fadd
jb
add
ljmp
cmpsb
xchg
inc
jg
sbb
jmp
lods
out
pop
mov
xchg
shll
push
imul
pop
mov
mov
test
xor
ljmp
icebp
xor
inc
lret
aaa
leave
fistpll
cmpsb
or
inc
jne
repnz
inc
aam
or
ret
mov
adc
ret
cltd
jg
xchg
cmp
sbb
addr16
aas
xor
hlt
and
stc
stos
mov
sbb
xchg
out
aaa
jg
push
out
leave
dec
in
inc
ja
mov
jbe
loop
cmp
nop
push
xchg
daa
mov
mov
scas
pop
ret
lret
mov
xchg
iret
mov
push
lahf
mov
cmpsl
lahf
mov
mov
aaa
aad
push
sbb
clc
push
dec
daa
call
cmp
cmpsl
jno
imul
push
xchg
mov
clc
and
jnp
out
test
jno
adc
cmp
dec
aaa
mov
lock
out
xor
arpl
loop
icebp
push
mov
mov
push
test
lea
shlb
pop
test
mov
sub
cmp
cmc
out
aaa
xchg
cmp
or
mov
cmp
mov
jae
nop
push
mov
pushf
popa
pop
sub
repnz
inc
pop
ret
mov
pushf
aaa
lret
shr
inc
mov
inc
xor
cmpsb
and
xchg
cmovno
iret
adc
imul
mov
lret
cltd
jbe
shrb
lds
ret
out
add
test
pop
scas
mov
fwait
mov
scas
push
mov
and
mov
mov
out
mov
xor
fsts
mov
sahf
push
out
jecxz
rclb
aas
leave
jo
jbe
xchg
ss
faddl
xchg
fs
popl
inc
es
pop
push
xor
iret
test
add
movl
aad
mov
push
mov
pop
or
inc
pop
decl
add
mov
jbe
mov
inc
mov
jno
push
push
insl
ds
mov
aad
mov
adc
lods
rclb
loope
pusha
das
adc
mov
jbe
jns
scas
dec
aad
push
pop
sbb
pop
out
cmpsl
mov
mov
or
lret
jg
jle
lahf
xchg
ds
test
ja
dec
mov
sbb
fidivl
sub
clc
ss
lret
mov
nopl
daa
and
xchg
in
mov
jno
xchg
in
bnd
aas
fsts
hlt
loopne
sub
aaa
lret
rcrl
jg
adc
outsl
loopne
pop
push
xchg
call
push
cmpsl
sub
mov
jecxz
lahf
pop
mov
aaa
sub
dec
adc
fsubs
ss
sahf
adc
sti
jge
or
xchg
fisttpl
mov
xchg
mov
adc
movsl
adc
scas
jbe
dec
push
cmpsb
rcrl
lods
xchg
xchg
inc
neg
outsb
push
hlt
cltd
pop
out
adc
ja
aam
push
dec
sbb
aas
js
out
in
repz
inc
jg
pushf
cwtl
mov
dec
push
test
rorl
dec
fsubl
push
fwait
or
rorb
negb
and
ret
mov
je
mov
inc
ljmp
hlt
mov
subb
aaa
iret
sub
or
cmp
aaa
inc
xchg
sub
push
or
cmpsl
mov
push
cmpsl
daa
lahf
mov
dec
jle
sbb
loope
add
or
cmpsl
mov
pop
mov
leave
xchg
or
insb
test
pop
or
jb
pop
xchg
incb
or
and
add
xchg
aad
imul
gs
loop
mov
ja
jae
adc
mov
or
or
das
ret
or
sahf
or
xchg
dec
rorb
aaa
cld
mov
cmp
jnp
pop
fldt
aas
jp
ds
fsubs
scas
stc
jns
adc
xchg
dec
stos
decl
dec
xchg
cwtl
mov
and
mov
push
mov
jbe
mov
adc
pop
xchg
jecxz
loop
repnz
in
pop
add
imul
inc
mov
jle
aaa
in
jmp
test
sbb
data16
jmp
hlt
inc
ljmp
nop
rolb
cmp
test
loope
in
mov
movsl
xchg
mov
adc
sbb
mov
ss
inc
inc
and
aad
xchg
xor
inc
pusha
mov
aad
inc
sub
adc
push
cmpsl
aad
aam
push
nopl
ja
mov
mov
and
dec
push
jae,pn
test
cmp
inc
aad
fadds
aaa
fisttps
scas
jns
or
sbb
es
sar
pop
std
movsl
add
out
cmpsl
rcll
ror
push
pop
adc
call
aad
call
movq
pop
out
push
int3
cmp
sub
aaa
xchg
inc
repz
xchg
leave
push
push
dec
xchg
int
or
dec
aam
adcl
pop
lods
rolb
and
lret
dec
sbb
pop
xchg
divb
or
outsl
jae
lret
xor
mov
ret
pop
push
mov
test
mov
mov
pop
neg
push
das
test
mov
inc
out
jbe
outsl
mov
push
push
xor
adc
aas
imul
flds
shll
je
rclb
adc
stos
mov
and
es
cmc
cltd
stc
xchg
fwait
movsl
pushf
adc
adc
or
dec
xchg
fnstsw
jbe
cmpsl
cmp
cmp
mov
imul
aaa
js
add
test
jb
cmpsl
lods
movsb
fxam
xor
clc
addr16
push
movsl
testb
dec
push
out
scas
add
inc
inc
pop
and
sub
xor
and
fisttpll
aas
push
jae
aaa
cmpsl
pop
xchg
pop
nop
out
fwait
das
in
aad
xchg
lahf
or
leave
nop
lods
push
movsb
addr16
ja
pop
iret
nop
in
cltd
push
sbb
aam
cmpsl
nop
xorl
icebp
hlt
aaa
nop
jb
fimull
adc
rep
pop
xor
mov
add
loopne
movb
jnp
xchg
mov
pop
stos
push
out
hlt
add
cmp
not
into
repnz
or
movsb
outsb
lods
xor
out
scas
push
mov
lock
xor
lock
pop
ljmp
inc
dec
xlat
and
mov
mov
pop
sbb
in
adc
jge
xchg
psrlw
aaa
mov
jg
aas
inc
frstor
xor
pop
push
push
mov
clc
sub
pop
sub
push
pop
pop
sub
testb
stos
cmpsl
aad
push
movb
or
and
notl
aad
imul
out
adc
sarl
push
aad
push
jnp
mov
mov
jg
iret
dec
mov
scas
mov
rorb
addr16
inc
iret
and
mov
jnp
dec
out
fisubl
xchg
setno
aam
andl
test
mov
jge
fbstp
imul
jle
mov
lods
stc
test
bnd
ljmp
mov
sub
jnp
jmp
test
push
into
pop
dec
cmp
add
xchg
pop
xchg
outsb
sbb
jg
rcll
scas
mov
sub
sahf
mov
inc
add
push
shrl
sar
ja
fsin
jns
mov
roll
ja
int
pop
jge
icebp
xlat
shrl
ret
scas
in
jo
mov
mov
jb
jge
cmp
hlt
frstor
test
stos
inc
sbb
adc
pop
pop
cmpsb
out
dec
pop
shll
imul
fnstsw
mov
call
sbb
rorb
popa
push
cmp
mov
inc
clc
pop
fldl
sbb
pop
stc
cmp
xchg
daa
sub
sub
xchg
in
lret
dec
mov
push
std
xchg
pop
scas
dec
lods
xchg
inc
xor
and
and
cmpsl
cmc
sub
sbb
mov
dec
das
mov
popf
jmp
push
mov
push
rcr
or
inc
mov
jmp
scas
ss
filds
pushf
cmpsl
adc
call
mov
ja
imul
jbe
loop
ss
pop
push
shrl
or
loop
fs
aam
mov
dec
dec
pop
das
xchg
mov
cmp
js
adc
adc
movsl
ja
sbb
push
mov
mov
sbb
or
lea
jp
push
xchg
cmp
lea
push
sbb
cmp
and
xchg
adc
imul
add
hlt
or
aas
imul
mov
cmp
lods
adcl
sbb
stos
sub
mov
push
add
lahf
xchg
sbb
inc
loope
mov
aad
jp
out
cmpsl
das
mov
in
icebp
std
mov
sbb
pushf
mov
nop
mov
cmpsl
and
or
mov
hlt
push
cmp
inc
sub
aam
scas
aaa
add
sahf
xor
jae
sub
push
add
aaa
sbb
xor
dec
xchg
cltd
dec
aaa
bound
xor
mov
push
xchg
xchg
sbb
adc
sahf
xchg
in
pop
and
lahf
or
mov
std
jae
adc
in
mov
or
mov
xchg
add
mov
inc
shr
out
dec
mov
cwtl
dec
mov
fcomps
lods
dec
movsb
iret
adcb
inc
or
testb
inc
loop
mov
cmp
ja
push
add
divb
sahf
test
jne
ja
sub
inc
fst
xchg
int
push
pop
loop
and
mov
les
sub
sub
add
dec
push
fnsave
dec
jle
cmp
mov
jb
loopne
xchg
lret
inc
ret
aad
and
push
add
inc
cmpl
aaa
aas
xchg
mov
ffreep
push
ja
dec
jecxz
adc
pop
imul
push
xchg
jl
dec
xor
lds
pop
popf
push
dec
imul
cltd
inc
mov
rorl
inc
imull
mov
xchg
aad
ss
sub
pop
subb
std
leave
push
loopne
jecxz
jmp
mov
call
lods
dec
iret
outsb
repz
in
pop
cmp
jmp
fcoms
mov
jmp
aad
rorl
test
inc
xchg
xor
xor
data16
sbb
xchg
or
sub
out
push
cld
inc
sub
stos
cld
bound
mov
adcl
sbb
rcrb
mov
aaa
jns
lret
inc
mov
shll
xchg
add
mov
xchg
xor
sbb
mov
les
adc
lahf
xchg
inc
outsl
or
aad
fsts
sahf
stos
enter
inc
mov
stos
jae
or
lds
xor
mov
dec
xor
mulb
fsubrl
adcl
pop
sarl
dec
xchg
dec
pushf
inc
push
int3
mov
loop
adc
xchg
mov
and
xchg
mov
stos
fcoml
mov
ja
pop
cmpl
pusha
inc
inc
push
push
jecxz
mov
add
push
ja
into
push
sbb
mov
push
testl
fsts
jne
jmp
sub
push
test
and
stos
pop
test
cli
clc
std
pop
sbb
add
cs
pop
jp
pop
stos
mov
in
xor
imul
mov
popl
fsub
fwait
xlat
adc
pop
mov
shlb
nop
push
dec
mov
adc
mov
xor
jae
push
mov
sbb
fidivl
jmp
out
and
scas
pop
dec
push
cvtps2pi
divl
lcall
scas
lahf
push
aad
xchg
mov
or
fs
fmuls
imul
sub
fmull
mov
xchg
adc
mov
and
negl
pop
mov
js
cmp
pop
mov
iret
adc
shlb
sbb
insb
dec
imul
nop
adc
sub
cmpsb
inc
mov
imul
fisttpll
arpl
jmp
xchg
jl
jp
shlb
sbb
pop
inc
mov
rcll
imul
push
iret
sub
or
xchg
pop
mov
in
dec
mov
mov
jp
bound
mov
push
mov
scas
push
iret
gs
sub
js
rcll
shl
jae
ret
mulb
mov
adc
in
adc
daa
lock
orl
inc
xor
cmp
add
js
xchg
shrb
mov
test
mov
and
cld
aaa
icebp
pusha
dec
mov
movl
cs
cmpsb
cld
pop
adcl
nop
mov
addr16
mov
out
sub
xchg
aas
movsl
shrl
faddp
repnz
std
lds
mov
push
aaa
scas
std
dec
hlt
movsb
push
hlt
or
xor
repz
or
cmp
rcrb
mov
dec
dec
push
out
xchg
fnsave
into
add
push
pop
push
ljmp
push
cli
ss
jo
mov
jl
aaa
push
jge
sbbb
push
stc
fistpll
push
imul
jp
notl
sbb
fcom
jle
push
and
mov
sub
and
iret
add
mov
cmp
jp
inc
mov
inc
jnp
push
xor
push
mov
jle
mov
and
push
push
mov
sub
mov
out
aas
mov
fldl
mov
jno
xor
push
xchg
in
push
xchg
gs
mov
jle
outsb
cmpsl
js
inc
pop
ret
mov
fisubl
add
mov
inc
test
arpl
dec
mov
cmpsl
mov
xlat
mov
mov
insb
ljmp
gs
and
or
stos
inc
dec
in
xor
pushl
fwait
mov
rol
fcompl
lods
in
pop
fisubs
mov
jmp
mov
stos
call
cmpl
inc
and
pop
ficompl
push
adc
jnp
gs
mov
add
outsl
lahf
add
lock
rcll
add
lcall
dec
test
dec
imul
and
mov
ret
jle
xchg
imul
adcb
xchg
das
dec
mov
in
xor
xchg
push
xchg
sub
enter
sub
movsl
xchg
lret
dec
call
aam
jb
mov
aaa
and
popa
scas
xorl
dec
xchg
mov
loop
out
inc
mov
aaa
xchg
fidivs
imul
test
rcrb
jecxz
mov
bound
int
outsl
jnp
push
lds
loopne
adc
mov
add
add
std
or
mov
imul
mov
cmp
mov
std
mov
sub
and
ds
jns
insb
mov
leavew
mov
pop
cmp
cld
lods
or
xchg
jns
fmull
out
fistpl
dec
and
mov
inc
push
in
or
sahf
mov
out
mov
cmp
cmp
mov
jne
mov
int
jecxz
mov
leave
sti
js
pmaddwd
aad
sub
jbe
push
mov
and
jbe
adc
int3
jb
rclb
sbb
xchg
jecxz
xor
outsl
sbb
int3
arpl
mov
cmpsl
mov
pop
jl
insl
fsubl
add
rorl
dec
and
outsl
xchg
scas
mov
aaa
xchg
ja
adc
dec
lret
mov
lahf
movsb
and
push
mov
cmp
dec
scas
cmc
push
or
xchg
das
js
dec
adc
nop
lahf
insb
push
adc
dec
mov
les
daa
xor
xchg
xchg
movsb
add
int3
push
mov
ret
xor
xchg
xchg
in
inc
addr16
push
xchg
xchg
mov
hlt
out
lret
scas
lds
push
cmp
inc
lea
push
gs
dec
aas
push
push
pop
aad
add
pop
mov
gs
data16
fidivrl
adc
jnp
jg
pop
ficoml
add
dec
mov
adcb
gs
js
mov
xchg
jle
dec
repnz
mov
les
lret
and
inc
xchg
mov
mov
insl
and
push
inc
outsb
imul
das
movsb
inc
les
lods
add
std
add
inc
in
sub
add
push
out
cli
dec
xor
rorl
adc
sub
xchg
xor
dec
mov
sbb
outsb
jp
pop
fdivs
jb
inc
jecxz
inc
jae
sub
jg
mov
add
mov
in
pop
out
aas
pop
pop
mov
push
in
or
push
fdivs
push
and
arpl
pop
popf
xor
mov
push
pop
inc
pop
push
bound
imul
jns
cmpsl
int
cmp
jle
lret
shll
js
cmpb
push
mov
imul
dec
xchg
add
jecxz
push
pop
dec
pop
sbb
inc
scas
leave
mov
add
rcll
mov
ret
pop
add
outsb
sbb
mov
xchg
out
loopne
or
cld
push
xchg
or
jmp
int
shrl
and
fadds
sbb
mov
dec
stos
push
xchg
ret
lds
xchg
outsl
inc
out
ret
pusha
inc
xor
mov
cmp
lock
push
std
sub
test
inc
scas
aas
sbb
lds
sub
mov
aaa
stos
sub
ja
sbb
jmp
sub
push
sub
lods
pop
dec
aaa
sub
pop
stos
jno,pt
aaa
std
nop
sbb
scas
test
pop
xchg
dec
stos
add
push
or
pop
mov
pushf
addb
cmpsl
mov
jne
daa
push
rolb
hlt
dec
adc
sbb
ss
stos
inc
stc
shr
hlt
jo
divl
into
adc
mov
loope
in
bound
out
fists
scas
sbb
stc
clc
scas
iret
xor
inc
or
lret
push
jb
jle
scas
lret
or
sub
cmp
stos
pop
push
test
mov
sbb
mov
repnz
jg
out
movsb
jp
scas
cmp
or
mov
xchg
add
aad
mov
cmp
pop
jg
pop
out
push
arpl
inc
je
rcrb
adcb
mov
jg
out
aas
loop
cmpl
in
inc
or
cmpl
insl
cmc
cmp
xchg
stos
sub
mov
out
int
cmp
push
pop
mov
clc
lea
cltd
ret
mov
and
dec
pop
add
add
test
inc
addr16
int
xor
mov
mov
fst
xchg
push
sub
cmp
push
mov
test
xchg
jle
imul
cmp
mov
inc
add
dec
enter
fdivs
mov
mov
jne
mov
mov
push
jb
inc
into
push
int
mov
iret
subl
testl
test
mov
arpl
and
push
mov
jb
test
mov
scas
clc
inc
shrl
addr16
jecxz
jmp
jle
xor
fdivrs
cmp
ret
push
shl
fdivrl
ja
dec
cli
cwtl
cld
popa
mov
mov
xor
stos
jne
jae
mov
iret
adc
xorl
rcll
rcrb
fcomp
mov
cltd
mov
cmp
js
ja
xor
sbb
out
aas
test
test
mov
lcall
test
mov
mov
push
lock
outsb
add
lods
jae
icebp
dec
rcll
pop
bnd
outsl
push
xchg
sub
aaa
aad
inc
adc
repz
gs
imul
adc
or
ss
repz
int
insb
adc
in
lahf
jg
mov
xchg
cmpsb
fimuls
add
jae
in
into
lock
lods
loop
icebp
in
pop
and
call
test
jle
jle
enter
push
into
fsub
add
dec
push
add
jmp
and
jp
aam
lret
test
sbb
adc
mov
mov
loopne
jo
pop
mov
jg
push
cmpsl
xchg
pop
mov
inc
xchg
push
cwtl
push
fs
shrd
and
enter
adc
xchg
andl
dec
nop
cs
mov
and
jp
mov
dec
stc
inc
xor
pop
pop
in
jb
inc
pop
jge
adc
mov
lret
jmp
data16
push
fisttpl
inc
lds
fcomi
push
ficompl
add
xlat
int3
and
mov
ja
rclb
lret
add
orl
lcall
orb
dec
push
xchg
outsb
fcoms
iret
inc
and
jle
mov
into
pop
scas
call
dec
not
inc
loopne
aad
cmpl
dec
out
pop
cli
xchg
xor
out
stos
xchg
iret
xor
adc
mov
out
cmp
push
inc
leave
mov
push
enter
mov
mov
dec
xchg
rclb
insb
pop
inc
gs
test
jbe
cmpsb
xor
and
mov
push
leave
insb
mov
addr16
scas
xchg
pop
lea
loopne
jne
xchg
xchg
cmpl
hlt
push
cmpsb
push
cmpb
mov
inc
out
test
or
cmpsb
shl
test
push
dec
cltd
mov
sub
scas
xor
pop
shlb
mov
gs
mov
andb
scas
cmc
jmp
xchg
jg
out
pop
negb
mov
int
lret
scas
arpl
nop
pop
add
push
push
xchg
das
xchg
int3
test
in
push
pop
pop
push
es
inc
jbe
sar
push
sbb
in
inc
sub
xor
ret
and
cmp
or
xchg
into
cmp
push
xor
dec
push
mov
mov
fdivr
pop
fimuls
jg
inc
xchg
aaa
dec
sti
cmp
push
push
push
out
inc
cmpb
fcomip
sbb
xor
jae
and
and
push
mov
ret
das
sub
and
cmp
cmp
ds
mov
mov
mov
lcall
icebp
and
jmp
cld
or
dec
cs
or
pop
fildll
ret
mov
fimull
daa
sahf
repz
dec
sub
push
cli
jnp
inc
xchg
scas
adc
adc
jae
es
dec
sub
add
scas
mov
loope
xlat
mov
and
mov
xchg
cmp
aaa
lds
xchg
sbb
xchg
push
add
pushl
out
dec
out
into
filds
insl
int
pushf
pusha
int3
mov
cmpsb
movsl
xchg
xchg
sub
xor
testb
lcall
out
sbb
inc
xchg
and
lods
in
mov
test
mov
pop
push
and
xchg
imul
movsb
fsub
add
push
xchg
aaa
xor
xchg
imul
inc
mov
inc
ja
setb
xchg
movsb
cltd
xchg
shlb
das
xlat
pop
xor
mov
fists
ja
cmp
movsb
push
arpl
out
aaa
aaa
adcl
outsl
xchg
testb
adc
and
mov
out
ja
adc
pop
int
aaa
movsb
or
push
and
cmp
mov
xchg
in
loop
push
lds
int
cmp
ret
push
mov
mov
in
iret
ljmp
cmp
xlat
pop
rcll
in
rclb
test
push
pop
das
test
inc
repnz
inc
loopne
arpl
dec
ja
lahf
mov
and
mov
mov
mov
push
fistpl
aaa
lahf
std
sbbl
scas
repz
jmp
fiaddl
cmp
int3
pop
xor
in
sahf
sbb
add
lret
jae
xchg
push
js
loope
xchg
imul
movaps
loop
lret
in
jns
loop
inc
dec
and
mov
xchg
pop
push
stos
and
pop
jg
repz
cmp
in
popf
mov
cmpsb
out
rorl
dec
dec
mov
sbb
outsb
dec
jecxz
xchg
rolb
movsl
shl
jo
ljmp
xchg
sbb
cmpsl
aad
mov
lret
mov
arpl
jle
nopl
rcrl
mov
out
jns
mov
xchg
push
mov
sub
jmp
pop
enter
push
mov
cmp
imul
ljmp
aad
inc
testb
dec
imul
xor
jnp
aaa
loopne
add
mov
sbb
mov
push
fldcw
mov
stos
mov
orb
mov
mov
jne
outsl
in
xlat
js
in
sbb
movsb
mov
arpl
in
mov
int
std
inc
outsl
std
mov
xor
push
push
out
jg
cmpsl
jg
xor
mov
or
xor
addr16
jmp
jb
xchg
aas
cmp
mov
mov
pop
cmpsl
adc
push
ds
mov
dec
mov
push
or
ljmp
mov
ljmp
push
cmc
nop
fstl
jmp
pop
jne
mov
inc
mov
inc
int
adc
aaa
jae
inc
stos
xchg
and
mov
nop
cmp
mov
bound
bound
repnz
rclb
outsl
sti
dec
push
and
jb
lahf
or
jae
push
aaa
xorl
data16
movl
dec
js
or
lods
aaa
out
push
xchg
xchg
mov
ret
dec
sbb
sub
jb
in
int
scas
and
xchg
nop
mov
jp
faddp
pop
imul
ffreep
xor
test
xchg
mov
nop
rcl
inc
dec
xor
inc
xchg
iret
fdivrl
iret
fisubs
mov
dec
jecxz
pop
sti
adcl
xchg
ja
int3
loope
or
pop
ljmp
xor
gs
mov
xchg
not
std
cmp
inc
aas
xorl
nop
inc
repnz
movsl
scas
jg
sbb
int
daa
cs
outsb
inc
push
add
inc
mov
les
xor
dec
and
mov
push
add
push
xchg
stos
pop
jecxz
add
scas
and
in
mov
push
loopne
cmp
push
rcrb
cmp
stos
lock
imul
dec
xchg
xchg
lods
push
mov
xchg
add
sti
aas
push
xchg
mov
adc
push
or
push
jb
imul
adc
fistpl
insb
push
xchg
faddl
daa
out
out
ror
lret
pop
aaa
mov
ficomps
scas
adc
daa
jle
ds
pop
ss
jl
bound
jmp
repz
add
test
jg
sahf
sub
popf
mov
cmp
cmp
fisttpl
adc
lea
repz
outsb
pop
mov
mov
lret
pop
pop
mov
std
inc
pop
mov
inc
sti
and
inc
imul
sahf
xchg
push
shrb
sub
or
mov
out
cmp
mov
mov
lods
adc
icebp
stos
lods
pop
jae
xchg
sub
icebp
push
inc
xchg
jbe
leave
xchg
and
lret
mov
aas
into
mov
adc
fcmovne
nop
push
xchg
lods
jb
pop
or
vdivss
xor
addb
cmp
insl
mull
push
xchg
push
imul
cltd
xchg
call
dec
leave
lahf
push
fidivl
adc
inc
popl
in
and
mov
mov
mov
push
dec
aad
sub
shrl
sbb
test
push
cmp
out
addr16
and
jle
sbb
mov
dec
jg
lock
and
shl
int
sub
js
repz
jbe
data16
inc
movsl
mov
push
xor
rcll
out
pop
nop
pop
mov
rcl
pop
sub
dec
mov
frstor
jle
jne
test
test
out
sbb
aaa
nop
pop
test
out
mov
mov
adc
xor
push
jne
das
movl
cmpsl
sbb
cwtl
movsl
rcl
adc
dec
add
mov
jle
int
adc
sbb
sbb
pop
pop
add
int
dec
add
mov
stos
dec
clc
movsb
adc
test
aam
pop
imul
insl
popf
std
add
add
fs
scas
xchg
js
xor
or
mov
and
aaa
push
pusha
xor
das
lcall
fisttpl
lahf
aas
icebp
aaa
inc
dec
sub
icebp
icebp
mov
mov
into
cmpsl
jbe
lcall
jns
test
adc
outsb
push
std
and
sub
sbb
jg
jecxz
scas
ffreep
out
xor
inc
xchg
not
gs
in
arpl
inc
xchg
inc
push
or
stc
sahf
or
cmc
pop
mov
inc
or
xor
scas
xchg
fisttpl
inc
dec
aaa
imul
add
daa
adcl
jnp
ja
mov
jecxz
cld
lret
fmul
sahf
loope
movsl
push
inc
xor
dec
mov
js
test
mov
outsl
jecxz
sbb
sbb
fsts
mov
cmp
in
lods
cmovb
fwait
shll
aas
test
mov
hlt
push
lods
pop
adc
dec
dec
push
cmpsb
and
and
pop
jbe
push
mov
cmp
lods
aam
mov
fiaddl
jns
adc
sbb
sti
mov
xchg
and
or
jae
scas
mov
and
out
sub
add
adc
std
adc
sub
xchg
pop
push
dec
mov
mov
pop
and
mov
xchg
lock
add
jle
std
pop
jecxz
push
xchg
xor
add
xchg
xchg
adc
into
adc
adc
and
push
nopl
and
mov
fiadds
adc
cld
pop
pop
inc
adc
push
aaa
xor
inc
call
xor
int3
mov
test
mov
loopne
push
push
hlt
jmp
mov
loope
xchg
lret
and
push
movsb
add
fimull
xcrypt-cbc
cmpsl
adc
cli
mov
jecxz
rorl
adc
in
xchg
and
mov
xchg
and
mov
aaa
add
iret
shll
movsl
adc
pop
mov
pop
inc
cmp
into
xchg
iret
push
mov
shl
dec
icebp
jp
icebp
and
jecxz
into
sub
sbb
das
mov
aas
test
cs
xor
mov
stos
clc
mov
sub
or
cmpsl
jbe
xor
fdivl
push
pop
dec
or
add
sti
or
xchg
mov
sub
out
adc
sub
mov
push
mov
jnp
clc
xchg
fcomps
test
adc
dec
test
sub
dec
cmpsb
loope
and
sbb
popa
jecxz
mov
inc
xor
mov
push
std
add
lods
push
add
mov
cmp
into
push
mov
fidivs
pusha
jmp
insl
jmp
stos
adc
jmp
call
mov
outsb
dec
mov
adc
mov
daa
ljmp
pusha
jmp
pop
jo
sahf
dec
jle
push
mov
mov
std
pop
xchg
xchg
loopne
enter
adc
mov
pop
out
js
sub
lcall
and
jg
inc
add
pop
push
jns
mov
dec
into
loopne
inc
xor
rclb
aaa
lods
or
and
js
mov
stc
add
dec
inc
loop
loopne
jns
subl
cmp
outsl
arpl
push
sub
pop
fbstp
or
sub
jmp
cmp
nop
jne
inc
mov
loope
push
or
xor
xchg
sti
jle
and
rolb
mov
lods
je
jnp
dec
stc
cmp
test
ljmp
mov
loope
popf
or
daa
sbb
mov
aad
daa
adc
cmp
jp
adc
mov
mov
inc
adc
cmpsb
pop
ret
sbb
int
mov
add
dec
mov
xchg
sub
mov
mov
lds
add
sbb
ds
dec
push
imul
leave
imul
sub
movb
add
inc
xchg
jae
sub
in
and
inc
sub
or
dec
ljmp
out
out
aas
lret
out
cld
in
jmp
push
adc
lods
xchg
jle
lds
mov
pop
xlat
std
sbb
pop
and
xchg
mov
sahf
and
xor
push
jns
dec
mov
dec
mov
out
push
sbb
cmp
mov
test
test
addr16
in
pop
arpl
jo
cmp
adc
std
dec
jecxz
cmpsb
je
pop
or
sarb
and
jns
std
nop
add
cmp
aas
aaa
cltd
mov
test
sbb
xor
jg
int
inc
jo
out
mov
in
popf
subl
xchg
mov
add
insl
add
push
push
xchg
add
jecxz
xchg
pop
addl
mov
aad
sub
sbb
and
lret
jb
push
dec
push
jb
cwtl
jno
cli
lds
rclb
push
adc
jb
fists
movsl
fidivl
mov
pop
mov
cmpsl
push
pop
add
bound
ficoml
nop
adc
imul
shrl
xchg
into
push
daa
push
in
jne
in
push
xchg
in
mov
inc
cmp
dec
add
aaa
lret
lret
dec
je
sti
jo
push
test
push
sti
insl
cmp
inc
jp
out
dec
and
test
cmpsl
dec
xor
push
nop
dec
arpl
arpl
out
push
stc
dec
loope
ja
cwtl
dec
push
lock
loop
mov
mov
dec
push
adc
or
push
jnp
inc
push
ljmp
inc
rcrb
sub
adc
filds
imul
xchg
mov
add
sub
cmp
mov
pop
stos
inc
inc
xchg
mov
imul
dec
and
sub
or
fiadds
xchg
out
fcomps
negb
xchg
mov
jns
neg
jecxz
out
mov
mov
jg
sbb
mov
inc
aaa
dec
cmp
mov
ja
mov
jmp
fs
fimull
movsl
lds
repz
dec
inc
xchg
rcrb
sbb
aaa
inc
pop
push
ss
ja
nop
add
xchg
aad
jne
xchg
sbb
negl
pop
push
mov
inc
and
mov
std
xchg
and
ds
cmp
dec
cmc
stos
daa
inc
xchg
adc
aaa
insl
jg
lahf
in
lds
clc
gs
das
lods
xchg
push
int
out
pop
xor
ss
dec
push
jne
out
pop
aaa
cwtl
or
leave
mov
out
into
pop
push
xor
mov
data16
orl
lds
cwtl
adc
push
repz
push
jno
pop
lds
cmp
loop
xor
mov
pop
sbb
xchg
arpl
stos
xchg
dec
test
ja
mov
or
pop
repz
cmp
rol
mov
xchg
jge
mov
fsts
ror
rorl
leave
pop
xchg
jo
inc
adc
popf
addr16
lret
js
inc
gs
mov
cmpsb
push
lods
lods
inc
into
into
mov
jecxz
or
movlps
xor
jnp
jnp
in
movsb
lret
ljmp
jo
sahf
sbb
das
nop
mov
pop
sbb
or
push
lds
sbb
nop
sub
loope
data16
dec
filds
xor
mov
mov
adc
pop
clc
std
fcomps
sub
das
faddl
jecxz
or
scas
js
xchg
fdivl
ret
nop
xchg
fdivrl
stc
aas
xor
push
xchg
push
or
push
mov
push
push
cmpsl
dec
cmp
add
sub
push
jmp
aad
dec
es
push
std
pop
loope
setle
sub
mov
push
stc
mov
cmpsb
xchg
stc
aaa
js
push
xchg
in
aas
data16
ja
jge
inc
mov
mov
push
push
mov
mov
xchg
mov
xor
ja
pop
push
sub
xchg
xchg
cmpsl
andl
int
cmp
popf
cmpsl
xor
xchg
pop
mov
cmpsl
jbe
outsb
and
mov
and
imulb
nop
lock
cmp
mov
mov
pop
push
inc
inc
mov
leave
in
mov
lret
push
adc
or
add
rcrl
mov
pop
add
jo
cmp
mov
jl
add
rorl
mov
sahf
cs
dec
into
sbb
xchg
insb
stos
test
xchg
adc
ja
mov
ja
subl
mov
fldl
xchg
adc
push
das
cmp
ss
and
rdmsr
xchg
push
inc
dec
lret
imul
mov
jae
arpl
jecxz
sbb
jae
stos
aas
jne
std
adc
repnz
pop
fisubs
lods
xchg
cmp
jge
div
sbb
xchg
ret
test
pop
mov
hlt
add
stos
insl
push
inc
dec
scas
adc
pop
xchg
mov
rcll
sub
cmp
rcl
fadds
add
adc
jnp
mov
lret
xchg
push
inc
scas
in
incb
pop
dec
jnp
filds
dec
inc
sbb
mov
icebp
subb
mov
xor
push
xor
xor
lods
push
or
adc
dec
pop
mov
xor
push
lock
sub
xchg
mov
push
xchg
cmp
rorb
or
xchg
lahf
in
push
stos
push
xchg
cmp
xor
push
pop
fists
xor
and
ljmp
mov
or
mov
enter
outsb
pop
add
fldt
jmp
daa
int3
xchg
jecxz
adc
les
fcmove
mov
add
mov
push
adc
mov
arpl
setbe
pop
mov
loop
fistl
std
xchg
push
outsl
scas
sti
out
pop
mov
test
sbb
sbb
xchg
inc
aad
adc
arpl
dec
in
subl
pop
scas
add
setne
push
outsb
fadds
jmp
stc
ss
lret
pop
dec
cmpsl
lds
iret
mov
fidivs
pop
adc
sub
push
push
cmc
out
xchg
ds
test
jbe
sub
stos
jae
xchg
push
pop
xor
cmp
add
test
mov
jno
inc
and
push
inc
js
leave
adc
jl
es
arpl
push
mov
idivb
xor
add
add
jle
cmc
int3
push
popl
daa
lds
repz
movsl
shll
dec
shll
lock
mov
jbe
stos
push
adc
adc
cmp
adc
sub
repnz
push
sub
xchg
decl
aam
bound
out
loope
sub
mov
je
ss
popa
jmp
dec
push
sbb
js
cmpsb
xchg
in
scas
push
cmp
js
adc
push
mov
jae
imull
dec
and
fnsave
stc
xor
adc
jg
iret
lds
out
and
cmp
stos
lret
jae
push
push
into
xor
push
outsl
sub
pop
mov
mov
out
outsl
push
push
fnstsw
mov
xor
int3
jne
xchg
in
mov
nop
stos
lds
push
inc
jne
mov
inc
daa
dec
aam
into
lahf
frstor
dec
jecxz
cmc
mov
push
inc
insl
int3
inc
inc
adc
dec
mov
jle
lret
mov
push
sub
je
addl
fdivs
jnp
js
ror
pushf
inc
mov
mov
push
aad
jmp
xchg
das
adc
xor
aad
ja
xchg
jne,pn
cmpb
dec
stc
xchg
lods
sbb
js
stos
repz
lret
or
mov
xchg
mov
mov
jle
push
aaa
cmp
and
aaa
aad
inc
aaa
nop
test
in
dec
xchg
mov
xor
out
inc
xchg
mov
lds
jnp
cmpsb
xor
xor
pop
fmull
hlt
xchg
xor
xchg
repz
xor
repz
rcr
into
xor
mov
push
mov
into
jb
mov
jb
mov
jnp
xchg
xor
lret
xchg
adc
notl
push
mov
mov
mov
xor
out
lret
sbb
adc
push
xchg
out
in
mov
inc
das
scas
mov
jbe
aas
shlb
adc
pop
mov
xchg
fisttpll
cmp
mov
std
inc
sti
mov
xchg
mov
xchg
ja
lret
jne
aam
pop
push
cmpsb
shrb
mov
adc
or
xchg
outsl
js
shlb
rcll
adc
sbb
iret
stos
nop
ljmp
mov
rol
sti
mov
or
sbb
int3
mov
cld
daa
mov
popf
mov
or
jmp
repz
in
inc
sub
cmp
jo
dec
ja
mov
mov
aas
ljmp
add
js
pop
cmpl
xor
gs
jp
test
and
lret
sbb
and
ja
in
cmpsb
push
pop
aam
test
pop
sti
push
sub
push
push
xchg
outsl
mov
fsts
loop
add
nop
rcr
sub
jg
pop
nop
lods
dec
xchg
outsl
xchg
scas
mov
fstpt
int3
movsb
xchg
jle
nop
movsl
sahf
mov
mov
mov
sub
dec
notl
cmp
mov
lret
mov
test
test
push
inc
cmp
mov
cmpsl
jae
jnp
and
movsb
mov
iret
into
ja
sbbl
mov
xor
xchg
gs
jmp
dec
push
sub
xor
jne
int
lds
push
arpl
jno
mov
jp
jno
adc
adc
or
and
pop
dec
shl
out
inc
shr
push
scas
dec
push
test
cmpsl
xchg
push
shlb
push
mov
dec
xchg
frstor
fsubrs
xchg
je
push
les
or
pop
mov
cli
mov
imul
mov
xchg
dec
sub
inc
sti
and
lahf
gs
aaa
daa
call
test
pop
fdivs
lds
pop
outsl
std
ja
gs
pop
cmpsl
nop
testl
mov
pop
jge
adc
jo
jbe
xchg
jno
push
xchg
adc
jae
jge
pop
cli
mov
sarl
in
dec
add
loopne
aam
incl
mov
xchg
iret
mov
out
mov
push
sbb
and
aas
mov
inc
pop
popf
xchg
or
repz
mov
repz
std
mov
fimull
mov
div
dec
stos
mov
arpl
mov
gs
xchg
mov
pop
sbb
cli
fiaddl
mov
leave
adc
dec
data16
push
mov
add
imul
push
mov
cmp
gs
shll
lahf
jae
pop
jno
testb
int
cwtl
pop
cmp
mov
jbe
lret
xor
lcall
mov
and
add
pop
mov
xchg
mov
mov
lds
into
adc
mov
push
xchg
push
xchg
pop
mov
lret
lcall
jnp
sub
push
lret
aaa
inc
sub
inc
lds
cld
shrl
add
pop
mov
push
lahf
insl
sbb
daa
mov
mov
aam
in
repz
push
push
test
imul
fadd
ja
cld
jp
negb
ja
test
and
pop
xor
xor
xchg
dec
nop
add
in
testb
aam
cmp
mov
fistpll
scas
pushf
ficomps
pop
sub
scas
xor
cli
addb
divb
mov
push
ds
mov
cmp
pop
enter
dec
pushf
ret
and
dec
out
xchg
repz
xchg
jmp
lret
test
aaa
xchg
andb
inc
daa
mov
mov
cmp
loopne
ss
inc
test
add
js
sbb
push
int
mov
jns
cmp
push
pop
sub
test
cmp
test
jbe
jle
mov
pop
aaa
js
sub
push
inc
hlt
jno
jge
arpl
fidivl
jp
mov
hlt
ret
xchg
xor
mov
adc
push
out
xchg
pop
push
add
addr16
xchg
lea
pop
dec
inc
mov
out
rcrl
xchg
fldt
shll
or
sbb
rclb
ss
xchg
or
pop
xchg
and
inc
and
cmp
jmp
cmp
dec
and
cmp
jle
in
stc
push
ret
sub
in
dec
inc
push
jp
sub
iret
sub
jle
cmp
fistps
cmp
into
inc
mov
push
pop
fdivrs
loop
dec
xor
xchg
xor
ss
mov
dec
lds
push
fists
xor
sub
imul
fmul
popa
inc
inc
xchg
fsubl
inc
jno
sub
sbb
jp
or
adcb
popf
sbb
out
std
cltd
mov
or
in
jge
or
xchg
sbb
mov
aas
pop
scas
mov
sub
js
mov
inc
pop
mov
mov
xchg
mov
jp
mov
sbb
push
add
rolb
jecxz
pop
testl
sub
pop
dec
repz
xor
into
aad
add
xchg
dec
into
or
dec
cmp
cltd
sbb
push
mov
add
or
mov
popf
notb
pusha
aas
or
jmp
outsb
das
or
mov
stc
les
inc
pop
cs
nop
sbb
mov
or
divb
xor
xchg
jg
push
bswap
mov
aad
xor
mov
mov
mov
pop
aam
icebp
stc
cmpxchg
sub
roll
adc
clc
mov
adc
fisttpl
push
inc
add
push
or
fnstcw
ds
add
je
xor
sub
js
std
test
mov
aaa
cmp
rol
gs
and
xchg
movsl
int
mov
pop
jno
repz
pop
jae
add
mov
sub
addr16
and
dec
jbe
js
pop
or
xor
dec
pop
nop
fdivr
mov
sbb
xor
fs
dec
std
mov
jp
stos
rcl
int
push
xchg
pop
mov
movsl
ja
and
aam
sub
pusha
xor
pop
nop
cmpsl
out
and
xchg
jne
xor
cs
ja
stc
addr16
sbb
add
jle
mov
mov
daa
int
pop
push
push
cmp
in
sub
ja
inc
xchg
dec
mov
das
nop
push
mov
pop
or
rclb
iret
nop
mov
out
jmp
add
sbb
test
nop
cmp
nop
mov
push
mov
jb
jp
mov
inc
xchg
push
dec
aaa
xchg
pop
dec
push
cmpsl
ss
or
and
nop
aad
push
adc
out
xchg
cmc
dec
out
pop
test
jbe
jbe
stos
fucomip
aaa
or
push
mov
sbb
adcl
stos
inc
stos
push
mov
out
cmp
add
push
aad
cld
out
mov
fmull
inc
jae
push
jno
push
adc
pop
mov
pop
rcrb
add
mov
cmpsb
xchg
cmp
xchg
xchg
pop
pop
adcb
adc
push
test
movsb
test
xor
mov
cmc
pop
pop
rorl
jmp
ds
push
xor
jmp
leave
mov
adc
jmp
pop
or
adc
sub
or
sahf
sub
ficompl
pop
sub
out
fcmovnb
mov
xchg
jns
jge
xchg
cmc
mov
movsb
imul
push
pop
mov
mov
sbb
punpckldq
inc
js
jbe
sub
ss
jae
mov
gs
xchg
mov
dec
std
sub
xchg
inc
sar
xchg
pop
jle
mov
cmpsl
mov
in
inc
aam
push
mull
sbb
roll
mov
fildll
push
fldt
mov
or
adc
pop
cltd
into
push
jns
pusha
adc
mov
testb
jne
xchg
popl
cs
aad
daa
mov
mov
dec
xchg
nop
or
dec
ret
ljmp
outsl
es
aaa
f2xm1
xlat
mov
jecxz
bound
jnp
dec
cmp
cmp
ss
or
sahf
jnp
shlb
pop
lret
test
mov
fstps
fstp
int
lahf
dec
sub
or
push
in
sub
sub
aad
cs
outsb
add
in
jle
icebp
pop
inc
sub
inc
mov
push
add
icebp
pop
ds
test
xchg
pop
stc
ret
jle
mov
mov
inc
addr16
pop
xchg
jo
xchg
lds
adc
xchg
dec
pop
divb
and
push
std
ja
cmp
out
pop
push
xchg
test
mov
adc
and
pop
jae
xchg
pop
xchg
sub
mov
xchg
cmp
fistps
in
pop
or
or
add
pop
sbb
imul
aad
cltd
cmp
sub
cmpsl
and
lds
adc
icebp
push
jl
mov
mov
push
addr16
fs
push
jecxz
add
scas
inc
mov
push
xchg
jae
push
sbb
or
ret
std
test
aaa
push
js
pop
mov
dec
mov
mov
in
pop
jecxz
ja
cmp
movl
jecxz
andb
dec
cmp
cmpsl
cli
faddl
jecxz
test
jg
mov
xchg
daa
and
sub
xor
jne
cmp
adc
leave
cmp
jne
sahf
aad
add
negb
mov
aaa
mov
int
repz
push
fmul
out
stos
fs
into
adc
and
pop
jg
mov
add
push
inc
pop
xor
pop
mov
neg
int
iret
dec
dec
xchg
les
mov
int
stos
movsb
push
adc
pop
clc
jp
test
test
cmp
aas
jbe
sti
xchg
dec
cmpsb
sahf
xchg
jnp
or
pop
jmp
jg
ja
dec
sub
pop
pop
js
aas
and
jmp
push
sub
xchg
int
xchg
out
and
jbe
inc
pop
mov
call
inc
xor
push
inc
sub
push
pop
xor
data16
nop
sub
mov
js
int3
js
jp
daa
dec
jmp
push
mov
cmpl
shrl
sub
fistl
jle
dec
push
mulb
js
push
std
dec
cltd
ja
push
push
add
mov
xor
vpxor
ljmp
test
je
pop
jbe
jae
pop
pop
fmull
push
jg
sub
xor
pop
jp
fstl
push
adc
in
shr
sbb
mov
and
pushf
loope
mov
in
nop
mov
xchg
xor
js
out
test
xchg
repz
cltd
jmp
pop
xchg
pop
scas
addr16
lods
xor
out
out
or
scas
sbb
mov
rorl
add
and
push
pop
fcmove
cmp
movsl
test
insl
adc
stos
rorl
adc
pop
cld
push
sti
mov
xchg
pop
idiv
pop
loopne
mov
mov
shrl
shll
int
and
notb
mov
jle
adcl
test
leave
sbb
add
outsl
mov
inc
std
cs
loopew
std
mov
mov
xchg
aam
sbb
aas
sbb
clc
leave
notb
shll
cltd
mov
fcoml
cmp
cmpsl
xchg
inc
mov
addr16
jnp
sub
or
pop
adc
xchg
cmpsl
aad
cmpsb
lret
xchg
scas
inc
push
sbb
sub
jecxz
xor
shrb
es
jmp
nop
in
fildl
int3
jmp
and
fdivs
js
mov
xchg
and
icebp
push
sbb
lods
push
mov
pop
and
sub
mov
insl
daa
fistpll
mov
ret
mov
fsub
sarl
pop
jae
push
xchg
aaa
sbb
xchg
test
sbb
sub
das
mov
add
aas
dec
mov
js
push
inc
cmpsb
sbb
cli
fstps
mov
mov
int3
or
fwait
jmp
flds
mov
xor
sbb
cli
sbb
mov
xchg
outsb
addr16
push
xchg
pop
dec
out
mov
jecxz
ret
pop
ja
push
lea
xor
imul
adc
xor
pop
bsr
pop
sub
mov
andb
or
push
mov
std
dec
pop
imul
mov
out
jne
xchg
popf
dec
mov
std
call
dec
jg
xchg
pop
lea
jg
out
loopne
mov
or
inc
xchg
mov
xchg
xchg
mov
sahf
fimull
cld
inc
popf
sub
ja
sub
scas
sbb
inc
pop
daa
mov
jecxz
cmp
popa
xchg
filds
in
lds
cwtl
xor
adcl
xchg
add
sbb
into
or
insb
sub
mov
ljmp
stc
push
or
testb
push
adc
push
dec
in
nop
add
addr16
ljmp
dec
cmp
ret
mov
out
fdivr
lock
out
cmp
add
add
mov
arpl
aas
inc
fcoms
into
add
jl
sub
sub
mov
test
jbe
mov
gs
dec
or
insl
inc
and
mov
lret
jge
cmpsl
cmp
or
fwait
push
fnstcw
and
cmp
adc
testb
jg
scas
mov
pop
xchg
out
dec
pop
sbb
or
or
sti
out
aas
mov
cltd
pop
ret
mov
xchg
test
cmp
xor
inc
pop
jbe
dec
inc
mov
aam
outsb
sbb
adc
push
sub
and
jecxz
push
add
dec
cmpsb
cmp
loopne
push
outsb
mov
inc
mov
sbb
mov
jecxz
mov
ljmp
xchg
adc
sahf
iret
xchg
cmp
iret
test
popa
sub
std
in
or
das
mov
iret
sahf
ds
push
push
mov
nop
pop
or
imul
mov
out
jns
loope
and
mov
jg
addr16
mov
jbe
adc
xchg
mov
ja
popf
jbe
mov
pop
test
cld
ja
mov
inc
pop
or
mov
jns
cmp
sahf
jnp
mov
lods
push
xchg
jne
xor
jbe
mov
push
imul
xor
enter
insl
mov
int
xchg
mov
jno
dec
in
js
pop
hlt
xchg
jecxz
adc
dec
shll
jg
out
sarb
or
mov
fmull
je
jmp
es
push
lea
movsb
scas
xor
gs
stc
jge
sub
dec
pop
push
add
lea
mov
fnsave
cmp
outsb
adc
cs
xchg
sub
mov
xor
inc
icebp
mov
repnz
jbe
or
stos
sbb
mov
movsb
or
leave
add
pop
dec
or
iret
jge
mov
in
movsb
out
jge
jmp
lret
out
in
xchg
dec
sbb
into
fimull
mov
insb
jnp
push
int3
xchg
std
xchg
jmp
cli
and
je
cmp
mov
jecxz
adc
xchg
jbe
jb
or
xchg
scas
ret
fwait
mov
lfs
sti
xchg
pusha
daa
pop
pop
dec
sub
ljmp
sti
ss
cli
nop
jnp
cmc
aam
or
mov
xchg
sbb
cmp
lret
pop
adc
pop
shl
div
ret
pop
sub
lea
adc
outsl
add
rorb
pop
mov
mov
inc
push
sbb
mov
xlat
or
dec
pop
and
or
pop
xchg
call
mov
add
push
sti
dec
loopne
icebp
ja
clc
out
leave
push
int
mov
mov
and
movsb
cmp
mov
sbb
add
notb
dec
imul
lea
int3
dec
std
dec
cld
pop
sub
in
jle
push
lahf
addr16
test
neg
roll
inc
pop
outsb
mov
push
pop
mov
sbb
test
inc
mov
stos
sbb
loope
dec
arpl
aas
mov
xchg
sub
ja
aaa
xorb
mov
jmp
iret
leave
mov
mov
adc
lret
mov
adc
and
jmp
les
and
mov
push
push
in
jecxz
pop
stos
insl
xorl
jne
bound
jne
sub
movsl
std
aas
sub
rcrb
test
popf
sub
mov
xor
adc
sbb
pop
add
cmp
cmp
mov
int3
dec
mov
mov
pop
cmp
pop
cmpsb
aas
xchg
ds
movsl
xchg
addr16
push
cmp
arpl
cli
ja
nop
ret
divb
adc
inc
push
cmc
repz
shll
hlt
ss
cmp
pop
cmc
stc
and
icebp
stos
out
jle
mov
sub
jo
mov
mov
sub
mov
rcrl
jmp
push
jo
or
ja
fnstenv
lds
mov
addr16
mov
ja
jne
and
push
jle
sbb
dec
cmpl
scas
inc
mov
sbbb
adc
iret
test
mov
mov
shrb
daa
rol
sub
push
test
scas
push
sahf
sub
xchg
push
pop
out
xchg
xor
jno
fisttpll
mov
push
dec
imul
data16
aad
xor
lods
cmc
fcompl
mov
xchg
or
inc
pop
xor
repnz
xchg
test
jp
add
aaa
into
add
sbb
js
and
mov
aaa
mov
mov
je
lods
pop
mov
data16
push
loopne
je
data16
faddl
pop
and
nop
or
fmull
xchg
lds
push
push
jge
xor
iret
loopne
jle
lock
dec
or
imul
shlb
xchg
mov
jo
mov
dec
or
cmc
sub
sub
jecxz
push
xchg
test
outsl
jle
lods
sahf
aad
addl
pop
in
xchg
fcomps
ret
sub
jae
test
clc
xlat
jg
jo
jmp
cltd
stos
xchg
icebp
iret
sbb
ds
mov
xchg
subb
fisubl
push
gs
cli
jbe,pt
sbb
inc
in
das
sti
in
out
sub
mov
jne
push
sahf
shll
in
data16
std
sub
jmp
xchg
mov
sub
dec
mov
leave
mov
push
dec
mov
adc
pop
test
push
stos
xor
mov
xor
pop
ds
pop
loope
push
cmp
sub
sub
adc
fsubl
rorb
jge
sbb
inc
ljmp
repz
mov
scas
pop
iret
imull
lahf
pop
ret
mov
scas
xchg
faddl
sti
stc
data16
pop
xchg
inc
cli
jge
pop
movsl
and
repz
xor
outsb
fistpll
mov
sub
int
add
add
sarb
adc
psubb
mov
or
shl
adc
mov
out
in
fildll
jg
lock
dec
ss
hlt
pop
push
jno
mov
xor
xor
insb
cmc
add
dec
inc
jl
inc
aaa
and
repz
insb
xchg
pop
push
dec
or
lock
add
xor
cmpsl
in
add
mov
js
inc
adc
aam
push
xchg
cmc
mov
pusha
push
or
push
mov
sub
hlt
mov
mov
jge
xchg
cmp
dec
jne
push
test
movsb
jmp
mov
hlt
pop
test
das
int
mov
pop
cmpl
imul
cmc
fwait
push
sub
cmc
idivb
push
sbb
iret
ljmp
mov
idiv
nop
mov
loope
add
sbb
push
xor
xor
xchg
sub
outsl
stc
in
into
sub
push
jbe
xchg
jnp
popa
pop
loope
call
add
in
lods
gs
cmp
adcb
push
popa
jmp
and
lods
ds
fstpl
mov
pop
in
hlt
ss
mov
ss
inc
jecxz
sub
inc
imul
jnp
sbb
mov
inc
negl
adc
cwtl
stos
sbb
fstps
lcall
hlt
popf
negb
sbb
daa
cmc
aad
ss
or
pop
adc
mov
mov
scas
push
ud1
jns
dec
mov
or
mov
inc
and
pop
stos
clc
repz
addr16
or
daa
sbb
dec
cs
xchg
mov
mov
sub
adcb
or
shlb
pop
lea
jl
stc
or
jb
xchg
jmp
and
insl
dec
imul
add
sti
sarl
nop
push
mov
mov
lahf
push
aaa
call
add
daa
xchg
cmp
sub
sub
mov
imul
mov
add
jb
mov
pop
add
loop
hlt
cmc
test
loope
lret
in
leave
fxch
or
cld
cmpsl
xchg
dec
add
in
filds
and
sub
jle
push
xchg
and
mov
js
imul
push
jle
and
testl
repz
mov
mov
lods
sbb
jg
fists
pop
std
and
xchg
jne
stos
loope
add
hlt
or
xchg
adc
mov
scas
mov
jecxz
test
and
fcoml
sahf
cmp
pop
ds
or
dec
nop
adc
aam
xor
mov
mov
std
sar
ds
ljmp
mov
xrelease
jae
aaa
movsl
xorb
icebp
dec
push
adc
loopne
iret
mov
push
push
je
mov
stos
inc
push
loopne
lret
stos
test
lds
pop
punpcklwd
rcll
fisubl
rol
or
sbb
inc
xor
mov
push
mov
lock
scas
test
iret
pop
scas
mov
xchg
adc
repnz
pop
push
and
adc
sub
mov
mov
mov
cld
adc
push
xchg
mov
xchg
jbe
mov
nop
sbb
lret
aas
inc
shlw
iret
nop
loope
jmp
adc
addr16
mov
lret
cmp
aad
lcall
sbb
mov
lods
sub
stc
sbb
in
jbe
int
sub
mov
cmpsb
lods
xor
inc
hlt
sbb
popf
xchg
js
jmp
push
stos
sahf
repnz
aaa
mov
dec
in
sbb
jb
inc
mov
outsb
mov
pop
sbb
mov
push
dec
test
adc
mov
ljmp
ret
rcll
fnstenv
or
sbb
mov
sbb
inc
push
loopne
mov
sti
xchg
dec
sub
push
sbb
add
sarl
mov
js
jl
repnz
adc
jp
lea
rcr
sub
xor
xchg
mov
rorl
and
and
dec
pop
sbb
inc
mov
fldenv
dec
movsb
popf
sub
xlat
lahf
jecxz
sbb
xor
out
pop
or
pop
dec
xchg
mov
scas
mov
adc
inc
and
pop
jecxz
shr
test
loope
lret
pop
enter
push
je
clc
mov
aaa
jbe
scas
or
decb
mov
inc
xchg
mov
lret
gs
ljmp
jge
insl
lds
hlt
mov
dec
push
dec
push
fcompl
cmc
mov
xchg
mov
xor
push
scas
repz
xorl
or
ja
popa
add
inc
xchg
pop
mov
lods
das
fisttpll
dec
icebp
je
cmp
push
pop
push
cmp
data16
sbb
jp
out
ja
mov
push
xor
rorl
mov
xchg
mov
rol
outsl
mov
cmp
aam
push
into
xor
xchg
lock
inc
mov
mov
push
push
push
stc
into
mov
inc
jmp
push
popf
nop
into
iret
xchg
daa
aam
rcrb
rolb
xor
nop
push
fadd
mull
push
hlt
lret
ret
cmp
xchg
mov
ret
add
mov
sub
inc
fbld
and
pop
adc
jbe
push
push
lods
sub
mov
or
dec
lea
mov
cs
mov
push
hlt
sar
loope
and
cmp
xor
fstpt
test
inc
out
and
sbb
cmc
xchg
es
fcoml
ljmp
repnz
jg
xchg
sub
push
bound
dec
mov
pop
cmp
mov
add
ret
int3
dec
daa
lods
sahf
js
mov
and
pop
mov
fisubrs
push
mov
mov
cmp
das
das
push
sub
ret
je
or
rcrl
jl
push
rorl
cld
mov
aad
jns
pop
mov
arpl
xchg
push
enterw
aas
sub
js
pop
cmpsl
pop
test
scas
sbb
fnstenv
adc
insb
cmp
aaa
and
jbe
aaa
xor
call
dec
and
mov
sub
push
test
inc
clc
xlat
fdivs
nop
pusha
out
dec
int3
jb
aaa
sub
and
push
pop
xor
jg
lods
xchg
xchg
inc
repz
mov
cld
repnz
cmp
jb
inc
inc
pop
stos
bound
xor
das
leave
shlb
xor
test
mov
add
hlt
psubsb
or
mov
cmp
sbb
mov
sub
leave
aas
jge
mov
add
jnp
lret
or
imul
icebp
and
sahf
or
mov
loope
pop
rcll
stc
sahf
idiv
mov
jno
pop
cmp
push
lods
sbb
jecxz
dec
imul
test
jnp
repz
loopne
jns
jne
std
in
xor
cmc
inc
dec
mov
xchg
jge
add
push
cmc
mov
add
nop
sbb
jb
sbb
push
out
lahf
mov
adc
ds
cmpb
jo
or
dec
scas
out
pop
push
cmpsl
and
bound
orb
xor
js
mov
adc
cmp
out
in
ljmp
test
pop
ljmp
loopne
test
cmp
jge
stos
sub
in
ss
movsb
mov
fsubl
mov
aad
inc
and
ret
adc
jne
andl
push
repnz
xor
push
pop
inc
data16
add
ss
dec
lret
dec
das
cmp
or
aas
xchg
push
push
xchg
iret
mov
push
or
dec
dec
push
jg
push
aas
sbb
mov
xor
lods
jecxz
pop
stc
push
adc
dec
xor
repnz
sub
sbb
and
mov
pushf
call
cld
push
xor
mov
jae
orl
adc
ret
dec
sub
popf
fwait
js
and
lret
mov
mov
mov
xchg
insb
ljmp
adc
call
aaa
std
and
add
add
and
mov
jno
filds
xchg
outsl
xor
aam
cmpsb
fidivrl
arpl
jno
aad
ret
in
lds
test
scas
je
mov
adc
dec
sbb
hlt
nop
imul
arpl
mov
mov
push
daa
push
imul
jge
je
sub
xchg
mov
ss
fs
fdivl
test
adc
sbb
push
addr16
add
ja
mov
aaa
mov
rcrl
or
shrl
add
jge
push
xchg
fisubrs
sbbl
jge
outsl
push
cmp
xchg
mov
adc
push
mov
daa
xor
and
mov
lods
mov
xchg
mov
mov
xchg
jne
xor
ja
sub
push
mov
dec
jmp
dec
push
dec
inc
xchg
xor
cld
lock
jbe
pop
mov
jo
mov
dec
push
in
xor
adc
sbb
xchg
add
mov
je
mov
das
pop
cmc
mov
mov
mov
movl
fisttps
xchg
aam
ja
shl
scas
mov
push
arpl
mov
shrl
popf
sbb
push
enter
inc
insb
into
mov
ja
in
std
andb
adc
dec
add
gs
lahf
out
add
lods
in
mov
int3
ljmp
pop
imul
fildll
inc
pusha
xchg
pop
adc
loop
push
push
inc
data16
seto
ds
and
ret
or
mov
lods
xchg
dec
mov
mov
mov
std
cmp
fcoms
xchg
push
loope
sbb
sub
mov
pop
icebp
or
pop
nop
ret
adc
sub
stos
mov
movsb
adc
lahf
sub
xor
mov
hlt
je
das
int
jle
fisttpll
or
xchg
pop
dec
shll
push
in
adc
mov
ds
add
xor
fisttpll
flds
aad
lahf
and
mov
mov
repz
pusha
jb
sbb
les
add
pop
stc
je,pt
jmp
addl
adc
out
pop
mov
stc
inc
inc
rcrl
outsl
in
dec
mov
mov
jne,pn
sti
rcrb
mov
push
in
psubsw
dec
int
push
jle
inc
daa
mov
jge
fldl
or
jle
into
sbb
outsl
outsl
nop
pop
leave
xchg
cmp
pop
mov
rcrb
fs
dec
pop
fsubrl
dec
jg
cld
dec
mov
push
daa
lret
ja
cmp
frstor
push
repnz
mov
xchg
cmp
test
pop
aam
into
stc
leave
daa
jge
nop
add
into
pop
insl
xchg
movsl
mov
es
stos
fbld
cmp
std
imul
cmc
and
cmp
imul
pop
sub
ds
nop
and
enter
outsl
fildll
xorb
lods
das
dec
push
dec
ss
adc
std
or
xor
xor
test
jle
mov
nop
sbb
and
sub
sahf
push
stos
mov
xchg
push
pop
jno
xchg
imul
adc
int3
inc
xchg
push
xchg
pop
adc
or
stos
cmpsl
outsl
mov
outsl
jle
sbb
ds
mov
test
cmp
into
xchg
mov
cmpsl
jg
sub
out
dec
dec
dec
icebp
int
sbb
shlb
mov
jno
pushf
xchg
int
mov
js
nop
cld
das
dec
jns
mov
rcrb
dec
hlt
mov
inc
rorl
in
into
addr16
mov
mov
jecxz
cmp
xchg
cli
push
sbb
push
jno
fdivrs
rcrl
vpor
jg
sarb
pop
cmpsl
push
aaa
nop
jbe
rorl
decl
inc
shl
add
jp
push
repnz
loope
add
jmp
or
xchg
cmp
lds
xor
sbb
mov
lahf
pop
dec
cltd
pop
mov
mov
cld
loope
in
cmp
pop
pop
cmp
mov
mov
ja
add
add
pop
pusha
add
mov
or
scas
fwait
lods
cmp
inc
cmp
stos
rcrl
push
nop
mov
fcoml
ret
mov
xchg
aas
sub
leave
aad
negb
test
inc
xchg
xchg
push
fs
fisttpl
inc
cmp
xor
loope
mull
scas
push
dec
outsl
mov
lret
mov
loop
in
cmpsl
pop
movl
xchg
mov
mov
dec
arpl
dec
xor
ss
sbb
adc
test
fs
daa
and
jns
cld
jmp
push
leave
mov
mov
and
call
fnsave
xor
push
cs
das
negl
xchg
and
jbe
dec
xchg
xchg
cmp
xchg
cmp
xchg
xor
push
je
push
pop
out
push
sub
jnp
and
test
test
outsb
gs
dec
loope
lods
sub
test
fstpt
jmp
inc
xor
flds
outsb
mov
fdivr
inc
out
fucomp
lds
xchg
ds
xchg
ljmp
push
adc
sub
test
shlb
ffreep
aaa
arpl
mov
push
fistl
xchg
pop
cwtl
push
jle
mov
imull
add
aaa
xchg
mov
ljmp
or
std
xorl
xchg
push
in
and
push
jle
sahf
add
sbb
sbb
or
inc
pop
xor
sub
jl
inc
arpl
mov
mov
mov
inc
sahf
aam
cmpsl
sbb
js
lock
xor
dec
fmul
test
jnp
or
fs
jne
mov
in
or
push
inc
mov
sub
data16
xchg
xor
shll
and
rorb
ret
insl
call
pop
in
or
mov
pop
shlb
cmp
sbb
hlt
mov
out
pop
fisubs
sub
dec
cmp
int3
push
fs
inc
ficoms
aad
lret
gs
outsl
aaa
nop
rolb
jo
lret
and
adc
xchg
cmc
sbb
testb
push
or
jne
mov
ss
addl
add
nop
pop
push
imulb
test
sbb
sbb
cmp
in
into
aad
int
sbb
inc
xor
ja
scas
pop
push
sarb
jnp
lods
sbb
or
mov
pop
aam
testl
push
movsl
mov
cmpsb
inc
push
xor
cmp
sahf
mov
jns
cmpsl
leave
pop
jmp
push
movsl
ss
dec
push
jne,pt
ja
sbb
int3
popf
mov
nop
in
and
xor
adc
sub
movsl
push
dec
lret
sbb
les
sti
enter
jecxz
les
loope
jg
and
test
pushl
inc
pop
xor
js
dec
adc
inc
ds
aam
xchg
out
inc
lret
mov
into
dec
aaa
incb
aas
test
sbb
das
fsubl
add
push
data16
xor
pop
or
jnp
or
push
test
cmp
sahf
inc
mov
pop
aad
sub
push
adc
inc
int
daa
xchg
dec
pushf
popa
rorl
push
std
xor
push
mov
fwait
jnp
mov
mov
fbstp
push
jg
movsl
shrb
imul
test
repz
adc
xor
push
repz
pusha
ret
mov
pop
gs
dec
mov
js
jg
adc
into
rol
jg
and
jne
inc
mov
sarb
mov
push
sub
mov
iret
push
xchg
mov
arpl
das
test
iret
jle
test
hlt
adc
ljmp
lret
stos
inc
pop
sarb
push
enter
cmp
jle
loope
sub
xor
out
aam
ret
nop
data16
imul
jecxz
sub
and
lods
ja
mov
mov
stc
xchg
mov
xor
aad
ss
mov
cmpsl
push
sub
push
decl
daa
push
sbb
and
push
sub
pop
push
ror
sbb
xchg
jbe
es
ficomps
gs
aaa
test
sub
loopne
scas
mov
jae
cmpsl
sbb
pop
adc
jne
sbb
adc
inc
imul
hlt
sub
dec
inc
mov
dec
mov
xchg
and
into
push
mov
mov
inc
cmc
pop
nop
and
stos
in
xor
push
lods
ja
aad
xchg
inc
movb
dec
jnp
push
into
sub
shrl
mov
repnz
or
push
outsl
lods
xchg
cmp
push
push
jp
dec
inc
push
fdivrl
outsb
mov
mov
aaa
jp
fmul
ja
in
lret
sahf
mov
cld
adcb
xchg
inc
pop
cmp
or
push
and
or
mov
jp
mov
mov
push
and
rol
xchg
push
arpl
in
xchg
xor
mov
loope
push
mov
sub
int
sbbb
jp
aam
and
jb
inc
clc
mov
or
mov
dec
das
call
add
jl
or
mov
xchg
dec
out
xchg
lea
xchg
pop
jecxz
lea
xchg
arpl
rcll
aam
sbb
cs
sbb
je
sub
mov
pop
movsl
push
and
cmp
jl
mov
and
add
data16
popf
mov
es
dec
aad
std
stc
inc
rcll
or
into
dec
cmp
mov
and
testl
scas
inc
js
xor
pop
enter
xchg
ret
wrmsr
xchg
fcomip
ds
jle
inc
divb
imul
add
mov
or
stc
mov
sahf
pop
adc
xor
inc
mov
sub
push
push
inc
mov
es
leave
push
dec
cmpb
mov
push
sub
outsl
pop
pop
or
subb
into
cmpsl
punpcklwd
jbe
sub
icebp
xabort
stos
lcall
nop
pop
lahf
inc
or
push
out
into
cmp
mov
in
push
push
fldt
loop
cmpsl
nop
xchg
cs
fcmovu
jp
inc
dec
inc
pop
add
cld
xchg
int
and
lods
jbe
jbe
mov
mov
js
test
shlb
add
pop
push
movsl
xchg
pop
jae
stc
out
ret
data16
cmp
mov
je
fimull
lods
mov
pop
rorl
xorl
cmp
leave
mov
cs
inc
push
pushf
cmpsb
mov
push
push
decb
cmp
fbld
add
fwait
nop
mov
inc
jge
mov
xchg
mov
popa
lcall
daa
add
rcrl
addb
jmp
mov
mov
testb
nop
cmp
mov
shrb
lds
xchg
ljmp
push
sbb
fildll
xor
out
mov
xchg
push
xor
inc
sub
mov
gs
imul
in
xor
inc
xchg
insl
push
push
lds
xchg
les
andl
repnz
and
push
pop
jmp
in
nop
iret
adc
ficomps
xchg
jae
pop
outsb
nop
adc
inc
das
nop
lods
push
mov
test
dec
notl
ja
sbb
mov
dec
fmul
push
mov
adc
stos
push
push
inc
fucomp
sub
push
pop
cmpsb
and
std
stos
jb
add
push
int3
in
fistpl
clc
cld
ficoms
jnp
in
fldcw
outsb
nop
fldl
not
jbe
into
xor
lods
xchg
adc
mov
cmpsl
xchg
jle
popa
les
jecxz
mov
fwait
shlb
nop
cmp
pop
adc
cwtl
sbb
mov
push
fadds
mov
xor
push
inc
popa
cmp
jle
insb
inc
repz
daa
sarl
js
aas
pop
movsb
xchg
test
jecxz
popl
mov
out
sarl
inc
in
pop
mov
dec
xchg
xlat
cmpsl
in
into
jp
leave
push
pop
testb
aad
dec
movsb
aam
mov
repnz
mov
mov
jmp
ja
scas
das
test
aas
mov
jge
fwait
and
ror
les
clc
pop
stos
adc
int
fistl
jl
negl
cmp
aad
scas
fcoms
cli
jmp
pop
aad
xor
fcoms
add
inc
addr16
mov
inc
sbb
ret
mov
into
idivl
cwtl
andb
lock
fdiv
loope
xchg
aad
xchg
iret
or
mov
push
add
and
jb
scas
in
ja
push
cmp
imul
sub
shl
in
xchg
mov
jge
shl
push
cs
fstps
push
test
add
je
dec
out
xchg
in
add
xchg
cmc
nop
xchg
cmp
ds
pop
inc
pusha
mov
push
in
xor
leave
cmpsl
inc
mov
jmp
mov
rclb
gs
mov
adc
inc
and
repnz
bound
imul
mov
mov
imul
xchg
mov
imulb
and
mov
xor
aas
jns
inc
pop
jae
ret
clc
icebp
incl
insl
daa
jge
icebp
and
jbe
je
add
inc
dec
dec
sbb
push
jl
xchg
mov
cmp
nop
xor
dec
iret
add
pop
shll
sbb
and
or
sahf
inc
or
push
repnz
das
movl
sahf
stc
clc
stos
arpl
jg
lock
jnp
cld
or
mov
scas
mov
stos
bound
scas
ds
ds
add
lods
jae
xor
xor
push
daa
jmp
dec
sbb
shll
mov
push
jmp
jno
dec
add
aas
into
inc
addr16
and
mov
lods
mov
lret
stos
fbstp
sub
push
ret
mov
push
and
cmp
rcl
fiaddl
mov
test
ja
xor
inc
and
add
mov
in
jge
aas
js
xchg
fcoml
xchg
sub
out
into
dec
rorb
xor
popf
mov
adc
inc
mov
scas
xchg
mov
sbb
mov
sub
and
jp
je
aas
idivb
push
repnz
jne
mov
mov
mov
icebp
push
mov
xor
lea
popf
stos
adc
jecxz
jle
xor
fldt
cltd
push
jae
jno
scas
js
or
dec
mov
sahf
movsb
ret
movsl
les
shrb
mov
sub
repnz
cmpsb
rclb
cli
cwtl
lret
push
out
mov
pop
mov
dec
stc
jae
cmp
push
xchg
mov
out
add
daa
aaa
or
pop
mov
stc
inc
pop
jecxz
les
mov
cmp
pop
cld
adc
lret
rcll
sbb
add
out
idiv
or
mov
jg
mov
fs
xchg
or
out
mov
nop
nop
fldenv
les
sbb
jne
mov
sub
aam
cmpsl
lock
cmpsl
call
nop
sbb
jbe
mov
packssdw
jg
je
repz
xchg
in
jb
inc
xchg
jns
ds
lea
cmpsb
adc
mov
jbe
lcall
in
sub
test
shlb
iret
lea
xchg
aaa
outsl
rcrl
sahf
jbe
inc
cmpsl
xchg
jle
das
pop
sbb
in
aad
sub
push
pop
sbb
pusha
popf
push
xor
popf
cld
add
iret
or
dec
xchg
jg
iret
jo
sub
sti
sti
arpl
stos
xor
lea
sbb
xor
mov
xchg
scas
or
xor
shrl
mov
mov
sub
adc
fs
mov
out
sti
adc
sub
lcall
mov
jne,pt
lods
in
nop
or
movsb
arpl
pop
pop
mov
mov
mov
aaa
mov
aas
idivb
sarl
in
pop
ret
into
insl
adc
lds
xor
cmc
mov
outsl
push
popf
jns
inc
adc
pop
xor
out
sbb
pcmpeqd
add
cs
in
call
lea
out
les
adc
xor
out
xchg
movsb
jno
stos
cltd
ret
or
stc
outsb
inc
pop
ljmp
xor
lahf
dec
or
clc
xchg
aaa
mov
popa
daa
jno
mov
mov
sbb
adc
xchg
pop
adc
mov
mov
or
adc
sarl
lahf
sub
jg
mov
mov
inc
xor
xor
adc
jb
xchg
movsb
push
orb
adc
pop
lods
pop
inc
fisubrl
jbe
popf
inc
insl
adc
ret
arpl
scas
in
mov
jae
mov
jmp
jl
mov
push
mov
inc
cmpsb
adc
dec
pop
xchg
dec
dec
mov
in
push
adc
mov
imul
cwtl
cld
xchg
cmp
cmp
ret
lock
push
pop
fidivl
imul
add
daa
ss
push
and
pop
cltd
lods
ja
jae
xchg
push
inc
movsl
aam
into
push
or
lock
xchg
jl
out
cmp
repz
add
pop
push
mov
jg
lock
adc
and
jl
inc
hlt
or
lret
int
sub
out
sarl
and
fs
adc
xor
mov
jp
in
fdivrs
lods
and
sbb
out
push
ret
xor
dec
push
mov
nop
sbb
sub
pop
sub
dec
subb
mov
mov
jle
lock
push
lcall
lea
jo
sub
mov
sarl
je
ja
test
and
push
movsb
das
mov
add
xchg
pop
add
repz
js
mov
mov
mov
adc
xor
adcb
sbb
shll
stos
aaa
enter
mov
ret
ja
and
scas
adc
mov
out
test
mov
mov
daa
aam
mov
mov
stos
pop
mov
inc
push
mov
out
dec
insb
and
jae
xchg
jne
adc
xchg
xchg
frstor
push
movsl
hlt
es
jbe
aam
mov
data16
mov
xor
dec
out
out
xchg
adc
les
dec
cmc
jbe
aad
mov
jne
mov
aam
hlt
unpckhps
mov
popa
push
outsb
aaa
loopne
jl
xorb
push
pop
mov
stos
aas
sub
inc
and
and
xor
mov
dec
adcl
adc
inc
dec
les
or
jg
cmpsl
aam
ja
sub
jbe
pop
aaa
jns
scas
or
sahf
fdivrs
aas
adc
rcl
popf
stos
je
movsb
out
scas
hlt
nop
sbb
pop
sarl
xchg
lods
and
mov
sub
push
test
lods
out
ret
and
xchg
inc
push
mov
int
in
mov
push
stos
pusha
sub
adc
mov
out
xchg
in
sub
jmp
mov
push
shlb
inc
outsl
or
mov
aas
popf
outsb
cmpb
mov
dec
cmp
adc
add
dec
fwait
loopne
cmpsb
jmp
inc
inc
aam
imul
out
insl
je
xchg
dec
repz
sub
popl
push
mov
js
xchg
aaa
mov
or
fisttpll
cmpsl
mov
xchg
mov
xchg
xlat
cmp
xchg
xchg
jge
push
das
sahf
inc
pop
out
aas
lods
pop
cmp
jp
dec
push
pop
mov
pop
fwait
loop
aas
push
adc
or
scas
mov
push
cs
xchg
mov
mov
mov
mov
push
imul
notb
into
dec
jle
fs
xchg
leave
or
jp
popf
lcall
loop
dec
mov
sbb
nop
rcll
sub
sub
dec
aad
sahf
rolb
nop
mov
scas
and
flds
and
mov
mov
cmpsl
inc
filds
test
stc
adc
jo
pushf
and
ss
sbb
or
mov
push
fwait
and
jbe
add
xchg
iret
loope
icebp
push
imul
cmp
aad
mov
dec
push
push
aaa
push
mov
enter
xchg
pop
cmp
xchg
popf
push
mov
shll
iret
roll
sbb
pop
pusha
fildll
cmp
adc
mov
adc
add
fists
push
nop
repz
rorl
shlb
adc
in
push
dec
iret
ret
outsb
std
push
int
mov
rolb
into
push
xchg
sbb
lds
jns
test
adc
pop
pop
mov
push
xchg
mov
fsubrp
test
call
add
test
mov
mov
es
push
lods
sub
fbstp
xchg
pop
cmpl
js
sbb
cwtl
scas
test
roll
pop
mov
xor
stc
lea
fsubs
xor
std
fldenv
xchg
je
aas
aam
cmpsl
mov
inc
push
arpl
dec
mov
fldt
xchg
shlb
mov
mov
lds
jmp
pushf
cmp
negb
adc
mov
nop
sub
inc
jne
xor
mov
test
fstpl
sbb
mov
pop
leave
mov
je
xchg
ss
dec
stc
andl
dec
xrelease
andl
sub
cmp
inc
push
mov
stos
loope
iret
push
fbstp
hlt
sbb
lret
jmp
xlat
mov
jmp
and
outsl
fisttps
ja
ds
sub
daa
ds
and
mul
jp
sub
ret
ja
and
ds
pop
push
rorb
test
pop
mov
aaa
pop
xchg
test
dec
ror
ja
mov
aad
add
or
dec
xor
inc
sbb
out
rorl
repnz
ljmp
add
xchg
xchg
notl
test
xor
nop
mov
jge
add
nop
int
lds
inc
ss
fwait
pop
xchg
jae
repz
pop
and
decb
mov
adc
inc
sti
mov
outsb
outsb
cmc
int3
in
repnz
fcompl
sub
fstl
push
subb
inc
daa
sbb
push
outsb
in
fildl
aad
pop
jle
cltd
cmpsb
xchg
adcl
outsb
leave
or
xchg
jle
mov
adc
fistl
mov
mov
outsl
pop
call
testb
fs
and
xchg
jle
test
das
out
repnz
movsl
xchg
daa
xor
mov
xor
out
or
mov
mov
mov
sbb
gs
fsub
es
sub
icebp
les
xchg
pop
popa
dec
insl
jo
push
fnstcw
mov
test
out
mov
imul
aaa
pop
sub
inc
mov
or
inc
lods
popf
pop
dec
push
data16
std
add
mov
xor
scas
test
ret
mov
int3
adc
pop
jle
or
nop
lea
adc
mov
divb
jno
div
sbb
sahf
sbb
xor
jo
push
out
mov
xor
xchg
xchg
push
ja
dec
and
aaa
push
mov
add
leave
cltd
popa
sub
pop
sub
mov
xor
es
pop
pop
sahf
fisttpll
aas
std
fbstp
test
push
insb
shr
sarb
scas
cld
push
jl
aad
pop
push
aas
xor
nop
mov
mov
jno
popa
into
mov
popf
jae
mov
mov
adc
adc
xor
jmp
flds
mov
lret
rcl
jg
push
incb
dec
negb
mov
int
cmc
das
jo
pop
icebp
or
les
sbb
lds
or
xchg
pop
mov
adc
add
lods
push
nop
sbb
les
push
mov
jbe
adc
add
xchg
cwtl
gs
pop
fs
or
in
inc
cmp
je
pop
push
call
sbb
mov
cmp
sbb
lds
xchg
clc
and
cld
arpl
movsl
add
or
push
or
ss
mov
sub
push
pop
test
push
push
mov
xchg
and
jnp
dec
jbe
movsb
mov
add
jge
test
ffree
mov
dec
roll
xchg
cwtl
int
jle
int
xchg
inc
mov
add
add
mov
dec
adc
cmpsl
jge
pop
fs
inc
mov
rorl
addr16
jecxz
add
int
cmp
mov
fisttpl
push
cld
popa
sahf
cltd
dec
sbbl
push
adc
mov
inc
aad
hlt
out
cmc
cmc
push
rclb
mov
mov
rol
ja
dec
aaa
mov
adc
mov
inc
mov
ja
pop
ja
dec
nop
test
xchg
xor
inc
mov
cmp
mov
inc
inc
rcl
mov
xor
je
shll
lds
aaa
and
in
icebp
cmp
lea
test
xchg
loope
xchg
sti
jae
inc
mov
mov
mov
cmp
imul
hlt
jae
fiadds
enter
lret
jo
and
pop
aaa
rorb
mov
adc
out
xchg
jae
sub
sahf
xor
sbb
pop
inc
and
sbb
cmpsl
mov
pop
or
xchg
mov
mov
mov
pop
mov
ja
jbe
jne
and
fsts
pop
cwtl
or
insl
sub
nop
sbb
aam
mov
mov
xor
mov
push
push
and
cmc
xchg
mov
lds
jl
add
cmp
lret
xor
mov
push
test
xor
mov
out
mov
inc
fs
and
shr
cmp
daa
pop
lret
inc
fldt
lret
mov
sti
and
aaa
nop
jbe
adc
dec
shll
das
sub
add
in
jns
cld
dec
subb
int
push
xorl
inc
bound
lret
sbb
mov
repz
nop
or
movl
cmpsl
nop
test
pop
test
jnp
out
in
pop
mov
xor
adc
leave
cltd
jg
cmp
inc
push
lds
sbb
xchg
xchg
inc
jmp
adc
movsl
cmp
es
sahf
pop
shlb
std
push
cltd
cmpsl
ss
and
dec
imul
adc
notb
or
and
outsl
loope
dec
xchg
xchg
adc
sahf
sub
cmpsl
aad
aam
xor
cmp
gs
xchg
sub
sbb
cmp
jbe
push
je
mov
adc
xor
mov
inc
mov
out
bound
adc
push
hlt
bsf
push
push
aas
dec
xchg
iret
lds
jnp
and
push
fadds
vcmptruess
rcll
sbb
nop
enter
gs
test
mov
cmp
mov
pushf
cmpsl
mov
push
jge
cwtl
imul
outsl
flds
notb
fisubs
orb
outsb
mov
push
add
sub
mov
nop
push
lds
iret
mov
rcl
ficoms
push
cli
inc
shll
sub
mov
mov
nop
fisubs
mov
pushf
clc
loop
sbb
mov
mov
in
push
mov
mov
dec
jmp
jg
leave
mov
cltd
pop
fs
xor
lea
fists
mov
stos
mov
lods
test
int3
push
and
inc
sbb
ret
pop
rcr
mov
mov
int
js
andb
dec
lahf
mov
jg
inc
xchg
xchg
adc
or
sarl
sbb
xchg
jmp
lods
insb
popf
out
mov
push
daa
nop
stc
addr16
mov
sarb
loopne
sub
adc
into
cmpsb
fistps
mov
xchg
ljmp
outsb
idivb
mov
out
pop
lds
jle
out
jmp
data16
jb
jle
das
dec
jp
inc
cmp
insl
aad
fwait
or
fiadds
std
push
push
jmp
pop
mov
and
aad
sub
js
push
stos
adcb
shrb
addr16
out
cltd
inc
out
xchg
nop
xor
inc
aam
xor
mov
add
adc
leave
mov
add
outsb
adc
sbb
cmp
shl
adc
ret
fidivrs
push
adc
add
or
adc
addr16
lahf
mov
out
mov
mov
aas
jo
jb
inc
hlt
jmp
aas
dec
rcll
inc
call
sbb
rcrl
int
lret
mov
push
xchg
scas
cmp
adc
out
jno
aaa
in
jae
pop
hlt
cmp
xor
cld
imul
pusha
xor
pop
iret
jne
inc
xchg
xchg
dec
ljmp
lods
mov
jge
nop
aad
mov
mov
js
xadd
push
adc
imul
cmp
dec
popf
adc
lcall
andb
out
js
mov
and
dec
mov
push
mov
mov
xchg
jnp
push
pop
xchg
loopne
pop
testl
out
fidivrl
sbb
andb
repnz
aam
notl
repz
rcll
jno
into
mov
test
mov
jmp
pop
hlt
push
cmc
and
mov
xchg
pop
nop
xchg
and
test
in
cmpsb
dec
jnp
inc
xchg
mov
sub
cmp
push
aaa
daa
add
xchg
std
nop
jecxz
dec
mov
cli
es
dec
repz
xchg
adc
fs
lock
xchg
mov
jle
test
aaa
pop
loope
jns
pusha
add
add
xchg
test
into
jnp
iret
xchg
sub
dec
inc
or
xor
or
sahf
xchg
lahf
xchg
push
dec
or
mov
push
push
decb
cld
test
bound
mov
fimuls
sub
jl
cmc
lds
ret
push
nop
scas
push
push
mov
xchg
xchg
push
bnd
mov
inc
mov
icebp
arpl
lahf
loope
jle
fmull
push
ss
sub
fstpt
hlt
add
xchg
mov
and
ja
mov
icebp
rolb
jg
fbld
xor
xchg
cmp
fstl
inc
jl
and
mov
mov
jg
fwait
mov
pop
mov
jp
cmp
outsl
lahf
pop
xchg
lea
push
xor
adc
sarl
sbb
leave
mov
or
mov
hlt
stos
jno
sub
stc
or
cld
int
xor
mov
fldl
aam
je
nop
inc
xchg
inc
pop
jbe
bound
pop
aas
jae
xor
or
sbb
dec
adc
lds
lea
or
inc
pusha
inc
in
jmp
iret
pushf
ss
daa
mov
das
pop
aam
sbb
ljmp
fxch
pop
inc
cmp
adc
sub
roll
mov
incl
pop
mov
lea
test
movsb
xchg
jbe
dec
pop
inc
push
popf
jecxz
pop
lods
mov
jmp
test
fmull
adc
test
fidivl
ja
sbb
js
nop
fisubl
clc
outsb
mov
pop
fwait
dec
xchg
push
decb
push
inc
push
xchg
or
xchg
test
fsub
cmc
add
push
and
int3
mov
out
pop
push
mov
out
inc
xor
stos
loopne
test
rcll
push
xchg
nop
imul
sub
lods
jl
xchg
outsl
xor
or
pusha
adc
addr16
push
sbb
mov
xlat
and
movsb
and
scas
lcall
adc
adc
not
rclb
pop
repz
lret
cmp
cmp
xor
cmc
lods
outsb
into
xchg
daa
std
inc
aaa
sti
dec
wrmsr
stos
dec
mov
mov
inc
fdivs
jbe
jl
inc
dec
cwtl
cmp
aaa
push
push
shll
jae
xor
cmp
mov
xorb
sub
fstpt
orb
mov
mov
nop
stos
rolb
push
neg
push
cmp
or
js
inc
xchg
mov
inc
rcr
push
cmc
mov
cmpsl
mov
out
iret
loope
cmc
loopne
adcl
push
ja
fsubs
pop
and
cwtl
popf
loop
in
js
lcall
adc
test
ja
xchg
mov
cmp
js
fstpt
push
movsb
xor
hlt
cwtl
push
xchg
std
mov
insl
mov
jns
ret
sub
xchg
test
ss
movsl
mov
fcmovnb
xor
or
out
xchg
aaa
mov
push
and
inc
leave
sub
cmp
icebp
push
mov
push
cld
and
pop
push
and
in
dec
shll
xor
imul
mov
lahf
cmpsb
xor
scas
addb
and
shlb
adc
adc
and
imul
xchg
or
rorb
mov
sbb
loope
mov
sbb
xor
ds
mov
xchg
cmpsb
mov
xor
rcl
aaa
test
aaa
cmc
mov
inc
leave
and
out
dec
out
jl
xor
mov
mov
aas
jnp
mov
push
loope
lock
pop
dec
add
jg
mov
adc
push
lods
lods
mov
nop
xchg
sti
sbb
mov
call
outsb
test
stos
mov
adc
jns,pn
jg
loopne
lods
jne
xchg
inc
cmp
sbb
sti
stos
cmp
xchg
jle
or
xor
xor
add
mov
gs
cmp
test
fidivrl
adc
sub
out
mov
pop
xchg
mov
test
cmp
xor
jnp
nop
adc
ret
sbb
arpl
jo
js
and
ja
in
nop
jbe
jecxz
push
sub
cmp
jmp
clc
test
andl
dec
push
data16
dec
jb
stc
jle
push
pop
pop
fadds
push
and
jl
cmp
mov
push
pop
add
push
movsb
shll
mov
lahf
sub
dec
shrb
movzbl
xor
xchg
test
and
push
mul
fdivrl
data16
mov
mov
add
sbb
lahf
lss
inc
ljmp
inc
mov
adc
movsb
fs
fwait
xor
stc
cmp
daa
loopne
push
lock
xchg
add
test
repz
gs
xchg
sub
jg
xor
aad
sub
sahf
mov
hlt
adc
fcoml
xchg
roll
and
sbb
dec
mov
push
hlt
pop
xchg
orl
push
push
push
lods
stos
pusha
adc
add
repnz
and
cmp
cmp
inc
addl
cwtl
aaa
pop
popf
fwait
jbe
mov
popa
inc
pop
cld
push
fldl
int
sbb
jle
sti
out
mov
inc
hlt
push
and
mov
pop
rcrl
stc
or
xchg
ja
lahf
and
and
into
mov
cmp
inc
ja
pop
and
pop
pusha
cltd
mov
sbb
ja
loopnew
jge
cli
add
add
xor
out
shlb
stc
inc
outsb
aaa
iret
negb
sbb
sub
sub
sbb
jbe
gs
icebp
xlat
inc
xchg
or
pop
loopne
aam
cltd
lret
push
fsts
js
mov
cmp
fnstenv
nop
je
rcrl
inc
mov
jl
loop
fcmovnb
push
sbb
and
sub
jmp
popa
in
imul
test
push
jnp
out
test
mov
sub
daa
mov
and
test
and
out
mov
sahf
in
adc
jne
mov
iret
adc
pop
jecxz
push
enter
mov
push
sub
mov
lods
std
sarl
inc
rcll
insb
mov
push
cmp
adc
cmp
push
movl
mov
out
push
ja
sbb
daa
cmp
ret
jmp
fadds
mov
insb
daa
movsb
sbb
add
dec
sub
xor
xchg
push
adc
adcl
sub
push
push
or
hlt
popa
hlt
loop
lret
repz
fcmovu
pcmpgtw
dec
mov
in
jle
adc
pop
push
push
nop
ds
pop
cmp
push
mov
int
push
add
test
fistpll
fdivr
sub
mov
adc
mov
xchg
xchg
pop
outsl
ljmp
push
addr16
testl
pop
scas
and
jnp
out
dec
loope
add
xchg
xbegin
mov
mov
scas
xchg
sbb
xchg
jg
push
jne
imul
push
push
or
ss
cmc
pop
nop
mov
fucom
psrad
xchg
movsl
cmp
into
aam
cmp
shlb
inc
lea
test
push
arpl
pop
cmpsb
jecxz
and
push
lods
mov
nop
push
lret
lcall
sbb
mov
jmp
lahf
pop
xorb
icebp
jns
notb
aad
aaa
xchg
lahf
lret
repz
aam
cmp
dec
in
mov
jbe
jle
push
mov
seto
xchg
in
or
mov
mov
iret
lret
or
inc
ljmp
mov
jae
pop
sbb
aaa
fucomp
xlat
dec
andl
mov
out
add
imul
lahf
lahf
jle
cmpl
mov
into
jmp
jnp
repz
movl
add
cltd
js
bound
sbb
and
push
sub
mov
mov
cmpsl
or
andl
call
cmp
testl
xchg
mov
or
ss
bound
push
daa
pop
jecxz
push
cwtl
mov
cmc
mov
sub
mov
in
out
rclb
cltd
xchg
pop
xchg
aad
xchg
jb
cld
notl
dec
sbb
sarl
add
pop
push
push
sahf
nop
add
mov
or
cwtl
ror
test
xor
mov
divl
arpl
cmc
test
std
ret
mov
je
in
dec
cmp
iret
pop
das
mov
add
cmc
jbe
movb
in
fidivs
lret
hlt
mov
jg
repnz
pop
sarb
sbb
fcmovnbe
leave
nop
add
in
sub
or
fldl2e
or
add
sbb
stc
imul
sub
ljmp
jnp
mov
mov
jns
sbb
testl
dec
mov
push
inc
dec
lret
sbb
sub
lahf
icebp
mov
add
rcll
mov
jle
pop
nop
xchg
push
mov
sub
adc
sub
sub
imul
and
out
pop
cmc
mov
clc
pop
xchg
mov
mov
jp
imul
insl
addr16
xor
lea
dec
xchg
jmp
cmp
inc
aad
rorb
jmp
data16
aaa
mov
aaa
loope
imul
into
fisubl
xor
movsl
lahf
adc
and
cmp
push
mov
mov
jbe
ror
das
mov
int
in
xchg
es
xchg
push
scas
sbbl
addl
push
or
aaa
sbb
mov
sub
jb
fdivrl
pop
xchg
pop
or
fcmovnb
mov
sub
shll
push
and
xor
mov
in
orb
sbb
inc
xor
imul
jecxz
cmc
aaa
pop
jecxz
cmp
outsb
cmp
add
sbb
sbb
pop
xor
ret
jecxz
sbb
in
add
movsl
adc
shll
rol
sbb
fcoms
or
adc
iret
mov
fprem1
adc
loop
add
push
xlat
mov
lods
sub
stos
leave
adc
in
adc
cltd
sbb
xchg
mov
cltd
insl
lea
sub
sbb
push
jmp
sbb
dec
neg
dec
inc
daa
out
loop
add
and
pop
test
pop
or
inc
fld1
out
outsl
jle
push
jle
imull
lods
insl
jbe
sbb
push
ret
jge
pop
outsb
outsl
sub
imul
mov
inc
cmc
movsb
sbb
mov
mov
pop
lods
test
in
ja
fcmovbe
fdivrl
mov
mov
je
je
and
sub
pop
jb
jg
or
fistpl
stos
xchg
ljmp
adc
xor
mov
dec
xchg
dec
adc
mov
faddl
scas
adc
mov
jmp
xchg
testl
sbb
mov
sub
aad
add
dec
negb
ja
xchg
mov
cmc
addl
dec
adc
cmpsl
aam
mov
cltd
shll
push
xchg
daa
ss
cmpsl
repz
mov
clc
cmpsl
imul
push
jae
cmpsl
mov
sbb
cmpsb
xor
adc
inc
jg
cmp
ss
push
setno
hlt
push
pop
xor
ja
mov
jbe
xchg
xchg
aam
jle
mov
push
dec
ret
xchg
xor
dec
mov
xchg
mov
jbe
stos
das
adc
mov
test
enter
sub
xor
mov
aas
jae
mov
xor
fisttps
sub
adc
aaa
inc
xor
dec
sub
std
ss
ja
roll
cltd
xchg
movsl
push
cmp
stc
jae
leave
outsb
nop
mov
ljmp
mov
aad
outsl
mov
lds
dec
xchg
mov
mov
push
jle
or
ss
cltd
xchg
fadds
inc
inc
sub
aad
arpl
rorl
mov
dec
nop
push
jg
mov
lret
xor
add
iret
push
and
cmc
jns
mov
inc
xchg
jp
cmp
aas
leave
push
out
jl
jecxz
imul
mov
or
and
imul
sub
in
xor
sarb
sub
mov
cmp
ss
mov
mov
jae
aad
jns
ret
es
in
push
mov
xor
rclb
xchg
cmpsl
jecxz
leave
cwtl
inc
jge
call
pop
in
jge
jb
andl
dec
mov
push
pop
mov
push
xor
jbe
movsl
pop
ds
sbb
add
jmp
mov
xor
pop
es
jb
xchg
lahf
sbbl
popf
xlat
fbstp
addr16
cmpl
or
sbb
aad
mov
int
rclb
cmp
push
dec
int3
iret
outsb
dec
nop
push
ja
mov
xlat
jl
pop
xchg
aaa
scas
sub
jg
or
insl
xchg
rclb
es
push
jae
cmc
add
cs
pushl
jae
add
jb
sbb
subb
mov
xorb
xor
xchg
mov
psubd
mov
test
scas
and
idiv
mov
aaa
push
int
aad
jge
jge
lock
dec
clc
push
call
scas
push
dec
cltd
sbb
or
xchg
fiadds
or
push
bound
cmpsl
in
cltd
movsl
negl
push
cld
in
loopne
mov
insb
cmpsl
frstor
mov
and
cmc
iret
movsl
ffree
mov
ret
xlat
es
push
mov
cltd
ss
fmuls
push
push
imul
cmpsl
scas
enter
inc
popl
addr16
pop
loop
ss
mov
add
jg
mov
inc
imul
push
pop
or
out
jno
mov
pop
adc
mov
nop
outsb
xor
loopne
jno
pop
sahf
jnp
js
dec
pop
sub
nop
and
ficoml
mov
sbb
fisttpl
mov
lds
leave
rclb
ficompl
push
jle
lcall
inc
leave
call
push
adc
xor
leave
push
leave
js
test
into
push
push
push
mov
adc
xchg
xchg
stos
inc
mov
xor
in
repz
int
loope
js
mov
sbb
ja
jae
xor
and
int
xor
dec
add
jecxz
notb
andb
bound
sub
mov
pop
xor
xorb
nop
xor
sbb
jmp
sbb
add
adc
dec
xor
adc
aam
movsl
mov
aad
push
dec
or
aad
ret
xchg
nop
mov
aam
out
jo
shl
cmpsl
dec
xor
popf
inc
mov
push
in
or
pop
mov
enter
xchg
in
inc
test
std
dec
outsl
pop
xchg
in
add
sti
mov
and
imul
mov
xchg
mov
or
xchg
add
fs
jno
mov
xchg
mov
or
lods
xor
push
add
mov
xchg
mov
jp
xchg
or
movsl
pop
pop
and
ss
gs
pusha
es
js
xor
addr16
sub
pop
and
lahf
inc
jle
or
jno
sbb
xchg
pop
mov
aaa
add
mov
dec
ja
pop
mov
jle
pop
in
or
and
scas
xchg
enter
push
clc
leave
cmpb
adc
lods
pop
pop
mov
inc
xchg
test
orl
mov
adc
out
jl
mov
loopne
mov
orl
mov
test
push
loop
stc
inc
inc
lds
es
dec
lea
pop
xchg
jbe
cmpsb
cltd
ljmp
xor
jle
push
mov
adc
sub
inc
cmpsl
insl
jp
imul
fs
ret
jbe
jae
mov
add
shll
lret
and
push
or
mov
or
psadbw
mov
mov
xchg
cmp
adc
pop
out
jb
add
xchg
jnp
adc
fdivs
add
dec
push
xchg
movsl
push
fs
push
mov
mov
and
xchg
and
xchg
lret
push
jo
mov
dec
cmp
addr16
push
cmpsl
cld
js
stos
push
xchg
sbb
fdivrs
inc
outsb
sbb
mov
add
lds
add
add
sub
pop
pop
mov
lret
xchg
push
push
nop
dec
popf
pop
adc
sbb
xchg
jb
mov
outsl
lret
add
data16
dec
cmpsb
shll
pop
fildl
out
rcl
mov
or
inc
cmpb
ds
aad
jbe
stc
aas
adc
xchg
pop
push
or
xchg
popf
hlt
jle
sub
ret
inc
test
in
push
xchg
push
sti
adc
jge
pop
sbb
sub
adcb
add
sub
mov
adc
adc
cmp
pusha
test
or
jle
sub
pushf
nop
adc
dec
jnp
iret
mov
sahf
repz
jp
insb
jge
sub
sub
mov
stos
mov
repz
mov
mov
xor
ret
imul
repnz
les
aam
push
repz
in
xchg
ja
mov
std
cmp
inc
jmp
xor
imulb
jnp
fnstenv
inc
stos
jae
aam
mov
cmp
lock
cmpsl
or
in
das
jl
sub
xor
jmp
xor
into
jecxz
out
adc
mov
rcrl
and
test
jbe
jp
or
repnz
rolb
mov
outsb
xor
xor
pop
sahf
call
ss
sbb
pop
fistl
aaa
sti
adc
jbe
imul
xchg
sub
mov
inc
xchg
fsts
push
dec
aad
jecxz
addr16
movsl
mov
jmp
orl
out
nop
mov
fstl
and
jg
loope
pop
mov
xchg
imul
cmp
shr
inc
push
mov
cmp
addb
sbb
fldenv
fbld
imul
jb
mov
pop
mov
testl
jne
jnp
les
dec
loop
mov
inc
sub
in
push
imul
cmpsb
mov
insb
es
cmp
jle
nopl
int
data16
cli
mov
xchg
mov
dec
scas
lret
out
mov
mov
inc
jae
std
cmp
xchg
leave
sbb
or
and
lds
es
inc
mov
scas
push
pop
jecxz
xchg
mov
pop
push
fucomip
adc
cmpsb
test
inc
clc
js
push
aas
jecxz
std
sarl
js
push
cmc
movsb
sti
aaa
les
xchg
inc
sarl
std
mov
adc
jmp
sub
sbb
lahf
push
dec
and
pop
repz
mov
add
xchg
leave
std
cld
lahf
sub
test
pop
call
push
xchg
ret
mov
out
dec
cltd
cmpl
and
xchg
into
sub
stos
push
nop
aad
stos
enter
push
aad
inc
mov
cmp
incl
push
cmc
repz
vorps
pop
std
test
mov
icebp
push
dec
in
cltd
inc
cmpb
scas
inc
and
aad
das
sub
mov
sbb
sahf
mov
loopne
xor
push
and
arpl
sub
mov
not
pop
sarl
mov
sub
scas
sub
jecxz
push
adc
lods
stos
rcrl
in
dec
lods
cmp
imulb
xor
jecxz
sub
jge
push
aas
loope
lods
hlt
out
mov
pusha
mov
outsb
jmp
fnstenv
aaa
jnp
pop
sahf
xorb
out
jmp
inc
cltd
flds
jbe
dec
xchg
pusha
inc
mov
loopne
xlat
jae
push
mov
add
pop
and
or
jl
int3
fildl
ja
fistl
cmp
clc
lods
out
push
add
push
push
jae
aaa
call
dec
sub
mov
clc
mov
cmpsb
stos
ss
lret
fucomip
sub
dec
add
scas
int
mov
xchg
insl
filds
fcompl
in
mov
cmp
scas
sub
mov
cmp
jbe
xor
xchg
outsb
xchg
xchg
add
jecxz
sahf
xor
push
stc
sbb
rcll
jle
out
mov
adc
aad
jno
imul
xchg
mov
push
loope
mov
sbb
inc
lds
push
imulb
adc
push
nop
popl
and
cmp
mov
ss
imul
cmp
fidivl
out
cltd
out
mov
adc
insl
push
dec
push
mov
outsl
mov
dec
addr16
ljmp
pop
xchg
inc
lahf
jle
jns
into
ret
mov
sarb
cmp
dec
and
adc
fdivs
sbb
mov
fwait
nop
sbb
pop
aaa
lock
cmp
mov
push
jne
xchg
mov
in
pop
mov
xor
push
xchg
fisubl
mov
jecxz
mov
testl
xor
cmp
js
dec
push
cmpsb
and
mov
pop
pop
and
inc
les
inc
ret
bound
js
xorl
stos
dec
sbb
pop
repz
lret
add
scas
aas
iret
scas
pop
das
adc
iret
leave
dec
mov
iret
xor
jbe
testb
mov
or
dec
icebp
outsl
std
inc
daa
in
fistpll
hlt
cltd
inc
xor
lods
mov
icebp
adc
mov
dec
xchg
rcr
popf
jne
nop
cmpsb
mov
dec
aaa
test
inc
movsb
inc
scas
cmp
or
mov
push
dec
sbb
push
inc
xchg
jnp
jnp
and
notb
mov
mov
mov
mov
xchg
scas
hlt
data16
dec
adc
xor
cmpsb
push
addb
cmp
rorl
call
add
loope
mov
int
cltd
orb
out
mov
test
lock
sbb
andl
and
sahf
xor
or
xchg
loop
xchg
and
sti
stos
sub
das
sub
inc
push
ja
jg
xchg
inc
lock
test
addb
mov
jecxz
aam
jmp
fbld
fildll
test
push
inc
dec
aaa
mov
mov
sbb
imul
mov
imul
dec
sbb
subl
aaa
pusha
xor
xor
xchg
fs
scas
mov
cmp
hlt
xor
test
adcb
and
test
sti
imul
mov
enter
jae
fidivrl
xor
mov
int
pop
sub
arpl
or
rorl
adc
nop
pop
jae
out
test
jle
xchg
not
cwtl
movsb
dec
xchg
aaa
and
mov
adc
movsl
jb
pop
sbb
adc
sahf
xchg
and
ret
inc
mov
mov
out
sbb
xor
xchg
shlb
mov
adc
add
lcall
pop
add
mov
push
rcrb
dec
sub
xor
dec
and
mov
movsb
stos
push
icebp
inc
jne
inc
cmp
sarb
and
jge
arpl
outsb
and
mov
lock
lock
xor
and
daa
repz
inc
mov
mov
ds
ljmp
aam
xchg
jne
dec
aaa
inc
std
push
pop
push
sub
sbb
inc
inc
fisttps
mov
dec
pusha
adc
xor
jae
sbb
mov
xor
inc
dec
loope
aam
imul
xchg
pop
out
andnps
aaa
mov
mov
jg
scas
mov
mov
call
inc
jo
sbb
inc
xor
jl
cmpsl
inc
sbb
fwait
aaa
clc
lds
inc
xor
cmp
mov
cmpsl
sbb
loopne
js
inc
jbe
outsl
push
adc
and
adc
push
mov
push
fwait
push
dec
xor
aam
jg
ja
dec
enter
js
loop
imul
xor
sbb
jl
xchg
add
and
out
test
les
inc
push
pop
dec
sub
dec
adc
stos
xchg
adc
xor
xor
ljmp
test
mov
lea
dec
mov
pop
inc
filds
das
inc
push
mov
xlat
jge
hlt
sub
mov
jnp
cmp
xor
dec
pop
pop
lahf
mov
and
leave
push
push
aam
add
aam
pop
aaa
fwait
xor
negb
sbb
lods
xor
mov
and
mov
aam
shlb
xor
adc
mov
dec
mov
cli
iret
data16
jnp
dec
push
pop
nop
dec
movsl
aaa
lods
imul
scas
jns
jae
daa
push
xchg
or
xchg
add
mov
negl
lods
or
mov
aas
imul
sub
mov
sbb
pop
out
sarl
aad
sub
leave
mov
add
outsl
loopne
mov
movsl
adc
js
shll
xor
dec
fsubrp
fnsetpm(287
or
push
dec
pop
movsl
ljmp
dec
pop
ss
inc
ja
mov
xor
lahf
arpl
repz
into
inc
call
xor
adc
lea
stos
xchg
cltd
cli
dec
shl
arpl
fcmovnb
imul
cmp
int3
jle
push
das
mov
ljmp
in
push
outsb
ss
std
sub
inc
mov
xchg
lods
inc
test
cmpsb
mov
jl
std
std
pop
fiadds
and
cmp
sahf
test
lea
stos
into
imul
jae
push
out
adc
xor
sahf
shl
dec
dec
scas
xchg
adc
and
nop
stos
cwtl
iret
jg
cli
push
inc
adc
dec
push
push
imul
xchg
sbb
pop
push
mov
and
and
movsb
loopne
cmp
test
cltd
lahf
xchg
ret
arpl
scas
fstpl
add
jns
and
xchg
icebp
pushf
outsl
addr16
out
mov
cmpsl
aaa
xchg
pop
psadbw
shll
and
in
lret
fxch
test
cmp
xor
dec
jnp
jae
sbb
xchg
imul
mov
dec
outsb
int
insb
imul
andl
adc
mov
dec
std
decl
push
in
fs
scas
xchg
mov
orl
push
out
orb
mov
orl
jg
lods
or
xchg
jbe
aad
mov
push
xchg
jo
push
xchg
sar
jns
xor
jne
xchg
dec
iret
imul
mov
sarl
cmpsl
js
popf
add
out
int
adc
rcrl
insl
lock
add
out
push
fwait
adcl
or
gs
push
xlat
ds
pop
mov
in
mov
mov
ja
dec
pop
jnp
sbb
lcall
fwait
inc
in
jle
addr16
mov
xchg
repnz
xchg
push
arpl
leave
inc
xlat
dec
andl
push
xchg
enter
jns
xchg
push
mov
inc
sbbb
into
in
jecxz
ja
xchg
inc
mov
xor
jbe
nop
outsl
std
pop
sbb
addb
inc
mov
loop
xor
jne
jl
and
iret
mov
out
or
std
gs
inc
jle
pop
roll
aas
js
sbb
pop
pop
test
ss
cwtl
pop
mov
ret
adcb
aam
sbb
jp
repnz
pop
xchg
cmp
jg
aas
test
or
orl
loopne
insl
clc
mov
xorb
xchg
mov
movsl
test
cmp
cmp
jo
inc
in
dec
test
mov
iret
hlt
mov
mov
xor
adc
push
sahf
jle
inc
dec
jle
lea
and
pop
sub
shlb
jae
movsb
mov
gs
dec
lahf
roll
adc
dec
popf
xor
imul
insb
jg
jnp
push
pusha
add
sbb
fidivs
xchg
mov
aas
stos
mov
mov
jne
aaa
adc
in
inc
pop
inc
xchg
or
int
lret
cwtl
mov
outsl
lcall
jne
push
sbb
fdivp
inc
aam
loope
shll
data16
mov
mov
repnz
shll
mov
xchg
inc
jecxz
lea
mov
insl
fsubs
jmp
push
addl
pop
cmp
mov
addl
adcl
push
mov
idivb
js
mov
xchg
push
nop
mov
cmpsl
inc
inc
adc
inc
push
iret
inc
or
adcb
adcl
notl
rolb
mov
nop
jle
scas
aad
cltd
push
xchg
mov
stc
stos
movsb
ret
cmp
sub
xor
pop
mov
in
aad
std
je
scas
adc
lods
pop
sahf
mov
adc
cld
mov
xchg
bound
mov
loope
andl
stos
aas
iret
xorb
cmp
and
pop
pop
test
xchg
cltd
leave
rcll
js
pop
adc
adc
aad
repz
and
js
lods
lods
aas
je
leave
in
push
mov
add
movsl
mov
pop
out
std
out
adc
stos
inc
aaa
jo
scas
call
inc
int3
xchg
lea
int
jnp
mov
std
adc
jp
mov
movsb
cmpsb
mov
jmp
int3
test
ja
jecxz
sub
daa
lds
loop
pop
push
lcall
sbb
addr16
int
cwtl
xchg
dec
jecxz
lret
and
lret
xchg
pop
clc
jae
addl
pop
out
mov
inc
aas
inc
mov
or
lds
lret
movsb
inc
enter
inc
mov
lods
imul
dec
add
mov
dec
mov
adc
adc
xor
adcl
out
mov
sub
scas
jae
mov
xchg
ss
pusha
jo
add
sub
nop
xor
gs
mov
xor
in
pop
add
push
inc
ja
adc
jecxz
xchg
mov
push
movsb
sbb
xor
jne
push
pop
ret
pop
mov
jbe
test
sbb
icebp
and
mov
mov
pop
mov
inc
and
movsl
lea
sub
fsubp
xchg
jecxz
mov
in
std
aaa
aas
repz
adc
js
scas
cmc
mov
xchg
test
sbb
scas
into
dec
js
decb
hlt
dec
out
mov
xchg
hlt
dec
xor
fdivr
fisttpll
sub
mov
repnz
pop
xadd
add
ja
lret
repz
pop
mov
lods
lds
mov
popf
fbld
test
lcall
andl
jp
inc
xorb
xchg
add
jecxz
pop
mov
vpextrw
lds
and
leave
lock
sub
out
dec
ss
pop
adc
jne
dec
nop
cmp
in
loope
cltd
stos
into
sahf
out
inc
push
push
pop
fildll
or
jnp
and
xchg
negl
inc
xchg
mov
mov
jl
test
adc
enter
fstpt
mov
jmp
mov
in
sub
jne
dec
push
std
shll
sbb
cwtl
hlt
cmpsb
pop
mov
xor
mov
int
push
xchg
and
sbb
into
or
std
jnp
jecxz
push
inc
test
fistpll
xor
dec
das
stos
in
xchg
imul
and
lret
add
xchg
push
insb
hlt
xchg
cs
jp
aad
cmc
insb
hlt
stos
outsb
in
cmc
rcr
jno
insb
push
test
dec
push
push
jb
stos
push
dec
insl
stos
adc
push
cwtl
iret
lret
pop
add
mov
push
int3
orb
push
xor
insl
adc
lds
popf
jecxz
ds
addr16
jge
pop
add
arpl
aad
inc
rep
ja
dec
ror
cmc
int
push
test
mov
jg
bound
adcl
inc
gs
movsl
mov
loop
ret
xor
push
jecxz
push
sbb
or
cld
push
add
mov
in
and
jae
push
push
xchg
fistpll
out
fcoms
push
jnp
xor
add
adc
add
push
addb
push
mov
mov
sbb
push
xlat
cltd
movsl
cmc
jb
mov
inc
js
andb
xchg
out
mov
das
das
and
je
gs
loope
mov
jne
push
mov
mov
adc
aam
cmpsl
hlt
cltd
cmpsl
xchg
xchg
sub
sub
jo
icebp
xchg
imul
dec
stos
push
push
mov
fcmovnb
cld
out
mov
mov
les
insl
scas
mov
jp
mov
mov
add
mov
xchg
mov
mov
cwtl
sbbb
add
dec
scas
sub
stos
fiadds
fistps
pop
push
movsl
push
cld
inc
enter
cltd
mov
and
bound
xor
adc
cltd
in
lret
jle
and
xor
push
fisubl
pop
scas
xor
adc
sbb
jno
jb,pt
xchg
mov
xor
addr16
inc
fnstcw
test
decl
aaa
sahf
adc
jbe
cmc
push
imulb
notl
mov
dec
push
hlt
sarl
test
lds
jno
ja
mov
mov
pop
jno
sbb
shl
mov
stos
pop
push
icebp
ss
xchg
aad
hlt
idivl
adc
fwait
push
pop
test
clc
loopne
jg
test
xor
add
mov
sub
bound
hlt
in
inc
aas
jmp
ss
xchg
cld
mov
clc
or
mov
mov
addr16
xchg
sbb
xchg
ret
pop
nop
xor
insl
inc
xchg
in
mov
loope
int
jnp
sub
inc
loop
test
lods
and
hlt
jmp
jnp
pop
cmc
sub
cld
mov
sbb
push
dec
pop
xchg
test
lret
aam
sbb
dec
and
cld
xor
cmp
jle
fbld
jbe
jne
ljmp
hlt
imul
nop
adc
iret
jne
fistpll
sub
push
push
fdivr
into
adc
daa
fstl
cmp
hlt
or
adc
inc
fisttps
dec
mov
lcall
insl
or
jo
sahf
sbb
inc
jg
xchg
lahf
mov
mov
repz
mov
rcrl
scas
mov
adc
sbb
fs
lods
clc
pop
xchg
sbbb
inc
cmp
or
adc
repz
cli
mov
outsb
push
pop
jbe
inc
ja
aam
std
cmp
mov
lahf
jle
pcmpeqw
mov
dec
xor
outsl
xor
movsl
cli
into
xchg
push
nop
jp
or
push
shlb
xchg
xor
aas
pop
add
fwait
test
push
xchg
in
pop
out
mov
mov
mov
mov
sbb
jo,pn
in
adc
dec
dec
pop
lock
inc
pop
addr16
sbb
inc
in
push
aad
xchg
pop
adc
mov
mov
jle
push
xor
mov
roll
cltd
in
ss
xchg
inc
xchg
addb
inc
movsb
sub
jmp
adc
mov
cmp
mov
dec
ja
and
rorl
fsts
mov
ja
nop
push
xchg
and
shll
mov
xor
sbb
std
push
shr
cmpsl
nop
out
xor
mov
xchg
addr16
push
adc
dec
xchg
iret
mov
xchg
outsb
daa
xchg
mov
pop
call
cli
mov
lds
xchg
jge
xchg
jo
inc
fsubl
add
jae
inc
push
xlat
mov
xchg
sahf
daa
xchg
cltd
daa
out
or
pop
mov
lea
mov
int3
sub
imul
clc
inc
mov
gs
xchg
push
imul
mov
ss
addr16
ja
fimuls
mov
repz
sub
addr16
jmp
aad
rclb
inc
or
mov
inc
xchg
addb
mov
mov
ret
ljmp
and
xchg
mov
sub
mov
mov
lret
fmuls
fs
ror
mov
or
sbbl
sbb
push
rcrb
mov
jle
sbb
int
adc
add
fadd
ret
sub
lock
xor
xchg
std
dec
mov
int3
cli
ja
daa
aad
shl
adc
pop
mov
in
mulb
shl
jb
jmp
mov
or
or
and
sbb
sti
hlt
iret
jnp
nop
inc
sarb
gs
arpl
daa
xchg
ds
dec
clc
jl
or
pop
jae
xchg
xchg
aad
mov
adc
gs
adc
xor
mov
into
mov
and
roll
jg
adc
aam
popf
xor
add
adc
popf
fsts
push
sub
testl
nop
sub
mov
sub
js
xor
bound
mov
into
pop
enter
sub
inc
loop
psubb
hlt
xchg
xchg
dec
aad
div
cmp
aad
inc
lods
push
xchg
push
out
add
js
sub
lock
sub
fsubr
popa
addr16
xchg
dec
loop
push
mov
dec
mov
into
and
lods
out
pop
push
outsl
inc
mov
inc
cmp
push
pop
mov
out
mov
mov
pop
mov
scas
scas
dec
int
dec
ljmp
arpl
pop
inc
jmp
add
mov
mov
ja
fildl
dec
push
adc
jg
ja
push
sub
fistpl
in
lea
sbb
push
dec
nop
mov
cmp
mov
sbb
push
pop
rcrl
aas
jg
push
mov
mov
scas
push
scas
and
cli
int3
pop
mov
pop
fwait
mov
ja
in
movsb
les
cmp
fsubl
imul
cmpsb
mov
push
test
push
cld
subb
cmpsb
xchg
shr
mov
mov
subps
fadd
call
xchg
gs
loop
adc
xchg
fwait
push
inc
bound
xchg
in
imul
mov
nop
hlt
push
popf
jnp
sub
xchg
test
iret
js
push
rcll
mov
xchg
sub
div
aam
sarb
and
nop
xor
stos
hlt
int
call
mov
mov
cmp
stos
sub
sub
mov
ficomps
fsubl
nop
cld
pop
nop
xor
mov
jae
in
aaa
repnz
push
shll
adc
scas
or
inc
adc
cmp
hlt
push
inc
scas
xchg
sbb
mov
aad
aaa
insl
out
mov
ret
int
inc
mov
das
pop
imul
shl
dec
xchg
sarl
inc
xchg
xchg
icebp
pop
mov
mov
loope
leave
and
sbb
mov
cmpb
adcb
xor
xor
inc
ljmp
xchg
arpl
push
fistl
jnp
sbb
out
push
push
adc
shrl
js
inc
mov
imul
ret
sbb
filds
xchg
adc
jle
or
mov
cmp
jb
dec
xor
push
mov
cmp
inc
pop
inc
inc
adc
push
jg
test
lods
sbb
mov
push
push
addr16
and
jg
xchg
xor
dec
push
dec
sbb
test
movsb
and
mov
test
xchg
mov
in
enter
jo
out
jp
gs
rcrb
aas
dec
inc
and
int3
int
xchg
lods
and
ss
sbb
adc
popa
inc
out
aad
xchg
sbb
push
and
ja
fisttps
into
jle
mov
movl
lock
insl
mov
dec
mov
out
sbb
int
mov
js
sub
adc
dec
nop
inc
stc
test
js
lods
add
jne
ljmp
loope
aas
xor
je
ret
gs
iret
gs
jno
mov
fiadds
retw
sarl
pop
inc
mov
into
or
sbb
xchg
xor
or
xor
mov
cmp
fists
jne
or
jl
rol
xchg
enter
jg
imul
mov
inc
and
mov
mov
data16
daa
mov
jbe
pop
push
nop
or
testb
sbb
and
sbb
jnp
push
cli
pop
subb
adc
adcb
sub
mov
fwait
push
push
push
sarb
outsl
mov
in
mov
push
push
push
mov
iret
and
cmpsl
dec
shl
call
push
rcrb
roll
in
mov
nop
or
push
repz
pop
dec
xor
in
adc
lods
sbb
jmp
adc
nop
cltd
sahf
scas
mov
mov
push
add
jmp
out
aad
mov
fldenv
lret
dec
pop
xchg
int3
xchg
jmp
xchg
scas
sub
push
lea
nop
enter
jl
cmpsb
insb
xor
mov
sbb
sub
inc
rcr
fdivs
in
popf
sbb
addr16
rorb
or
repz
jp
mov
pop
push
ret
adc
jle
in
adc
cmp
inc
out
aam
sub
push
push
and
das
mov
jle
cmp
cmp
mov
lret
insb
pushf
aam
nop
loop
stos
pop
mov
out
into
inc
arpl
add
mov
imull
outsb
or
imul
les
sub
dec
jl
adc
mov
and
adc
aas
orb
add
push
cmp
sahf
incl
mov
xchg
mov
int
cmc
frstor
mov
scas
aaa
and
pushf
adc
cmp
js
inc
mov
enter
add
mov
aaa
jo
pop
out
int3
nop
imul
lret
jb
sub
scas
xchg
adc
dec
nop
scas
jp
lods
inc
jno,pn
add
dec
ret
inc
sarb
mov
jbe
or
cli
mov
movsl
out
mov
inc
loope
das
xchg
mov
push
mov
push
lds
pop
jecxz
push
fistpl
inc
add
ror
ret
xor
rclb
shll
ss
sbb
xchg
mov
jle
xchg
inc
daa
ja
xchg
ror
enter
aas
gs
jmp
roll
xchg
les
outsl
mov
jecxz
loopne
push
aad
in
sub
push
cmp
cld
test
add
xchg
in
push
sub
aad
mov
popf
xchg
repnz
add
mov
out
fwait
lods
in
lods
inc
icebp
push
mov
outsl
sub
mov
inc
cmpsl
sub
push
cltd
xchg
or
xor
dec
ja
inc
sbb
jp
push
aaa
push
xchg
jne
dec
mov
iret
ljmp
fdivl
iret
addr16
mov
imul
gs
jl
sub
imul
inc
mov
cmp
fstl
and
rcl
ja
and
mov
jl
nop
cmp
cltd
movsl
testb
push
push
push
ret
mov
mov
lods
push
lret
ds
sbb
add
jp
and
mov
and
imul
inc
jmp
cmpsl
jno
xchg
nop
dec
mov
iret
out
sbb
idivl
lods
rcl
cmpsl
xchg
int
int3
dec
inc
jne
push
inc
scas
cmp
mov
xchg
testb
mov
xchg
cmpsl
nop
pop
cmpsl
sub
dec
gs
andps
xchg
mov
std
test
mov
out
mov
loope
sub
pop
ljmp
in
jg
xor
sahf
notb
mov
shrl
shll
xorb
jb
into
das
loope
cwtl
movzwl
mov
xchg
aas
mov
pop
xchg
test
adc
sub
pusha
xor
xchg
jbe
pop
mov
dec
pop
bound
aas
subb
cmp
xor
jmp
mov
cmc
jl
push
faddl
into
mov
mov
aad
push
xorl
mov
nop
push
dec
pop
mov
int3
jne
rorl
add
fwait
scas
sbb
loop
push
push
push
jmp
arpl
jno
outsl
and
dec
mov
lahf
xor
jl
mov
jno
dec
push
loopne
mov
mov
add
addr16
mov
mov
mov
in
or
lods
xchg
daa
push
adc
sub
out
lea
pop
adc
mov
jge
fisttpll
xor
adc
sub
out
jae
cmp
mov
cmpsl
rcrb
imul
push
outsb
xlat
mov
push
push
mov
ret
int3
pop
mov
inc
xchg
lahf
addr16
xchg
dec
xor
outsl
cmp
dec
into
and
push
out
inc
jmp
add
outsb
cmpsl
call
or
mov
mov
dec
push
loop
mov
or
add
jae
vmread
or
jns
in
inc
lock
icebp
scas
js
xor
insl
sub
and
fwait
inc
popa
xchg
repz
push
nop
inc
cmpsl
mov
inc
xchg
or
sbb
jb
inc
aaa
leave
aaa
lret
mov
mov
mov
div
push
cmp
daa
fs
push
jo
or
add
jp
lds
mov
scas
cmp
cmp
fs
ffree
inc
pop
int
push
fbld
in
ja
negb
fsubs
pop
addr16
aaa
outsl
mov
hlt
stos
sub
mov
sub
rcll
dec
push
mov
gs
out
push
shll
stos
scas
dec
nop
cwtl
and
stos
or
aad
sub
or
add
test
cs
pop
push
pop
add
jmp
iret
mov
popa
ja
xchg
shrl
fldenv
mov
into
xlat
sti
icebp
push
adc
fbstp
jbe
sbb
and
pop
test
sub
mov
sub
rclb
xor
adc
or
fidivl
out
xchg
test
jle
cmp
sti
stos
mov
xchg
in
loope
inc
mov
or
sub
ja
xchg
cmp
sbb
jmp
js
fmull
push
dec
or
inc
pop
pop
popa
fdivr
jno
inc
ja
xor
sahf
mov
insb
scas
sbb
call
outsb
cmpsb
rcll
enter
in
mov
sti
leave
sbb
pop
mov
add
out
sahf
test
dec
inc
dec
icebp
mov
mov
fadd
xlat
movsb
mov
or
or
mov
imul
push
sbbb
xchg
mov
fnstenv
sub
jnp
mov
jns
jl
jmp
enter
mov
fwait
mov
ret
fisttpll
mov
sti
mov
and
loope
xchg
sub
push
add
js
mov
inc
cmp
fimuls
xor
xor
aaa
jmp
inc
sub
mov
mov
hlt
notb
popf
fnstenv
jo
pop
int
adc
test
cwtl
dec
movl
adc
std
rcr
jbe
pop
push
repnz
ss
xchg
mov
dec
pop
mov
jae
mov
shrl
ret
shl
adc
add
insl
dec
mov
xor
icebp
incb
jbe
xor
mov
push
test
or
out
mov
sub
test
popf
sub
inc
add
add
mov
leave
add
push
aad
mov
aas
mov
xchg
scas
mov
xor
movsb
adc
jp
js,pn
jmp
jg
xchg
adc
popf
int
test
int
xor
jecxz
nop
daa
subl
mov
pop
jae
std
daa
lcall
sub
movsl
mov
mov
mov
call
mov
add
jecxz
pop
add
std
adc
jmp
in
push
dec
xor
push
xor
mov
cltd
jmp
sbb
lret
jo
inc
lret
sbb
fmull
or
sub
js
fs
ljmp
sub
mov
mov
aad
sbb
xor
jo
adc
shrb
dec
cmp
jns
push
test
in
into
cmp
jl
lods
nop
cmpsl
sbb
sti
mov
test
rcrb
mov
iret
nop
pop
icebp
mov
das
mov
and
mov
pop
imul
cmp
shll
shrb
mov
sub
enter
in
mov
out
outsb
xor
xchg
sbb
xor
xchg
pop
ljmp
je
aaa
pop
xchg
xor
fstpt
dec
jmp
xor
inc
pop
adc
xor
lret
pop
sbb
das
xchg
push
push
cmp
xor
dec
xchg
mov
push
nop
sarb
fsubl
pop
mov
push
mov
add
pop
hlt
rorl
add
push
mov
aaa
nop
jo
iret
or
adc
not
lret
jbe
cmpsl
xchg
inc
mov
push
mov
xchg
aad
cmc
pop
push
dec
dec
setne
jne
cmp
push
mov
xchg
cmpsl
mov
aam
clc
shrl
push
mov
mov
xchg
inc
xor
lahf
push
nop
cld
mov
mov
or
push
push
mov
outsb
mov
lret
inc
imull
imul
lahf
stc
stos
jnp
jge
fcompl
rorl
push
ds
loopne
sti
icebp
roll
iret
mov
cmp
mov
jb
lds
xchg
aad
inc
stos
imulb
mov
xchg
imulb
jle
fnsave
pusha
pop
xchg
push
ja
loope
aaa
jnp
ja
mov
popf
outsl
ficoml
pop
xchg
adc
lea
mov
xor
ja
cmove
movhps
and
aaa
mov
mov
sarl
dec
sar
mov
mov
pop
mov
shlb
nop
jae
mov
push
xchg
jno
dec
sbb
cmp
dec
mov
xchg
outsl
test
aaa
mov
std
dec
inc
jb
psadbw
push
mov
jbe
adc
fcoms
nop
sti
inc
add
inc
ret
test
push
mov
in
add
jl
sbb
cwtl
scas
js
sbb
sub
movsl
xor
aaa
inc
fs
leave
add
xor
sarl
jns
fcoml
xor
pop
inc
adc
call
imul
jle
xor
test
pop
push
in
ljmp
push
adc
mov
adc
imul
mov
loope
popf
mov
ss
xchg
jl
sub
sbb
sub
add
ficoms
cmpsl
add
ss
mull
fwait
xchg
xchg
fistpl
loopne
xor
inc
push
dec
movsb
cmc
gs
push
fldcw
push
mov
xchg
push
imul
js
jnp
fadds
dec
inc
dec
jp
gs
xchg
xchg
mov
push
push
xchg
pop
mov
fistpll
hlt
insl
inc
cmc
js
sub
jg
add
fsubp
ss
popl
ss
jbe
in
dec
and
xor
testl
aam
push
push
lds
sbb
scas
ret
cmc
or
dec
push
mov
push
addr16
cltd
pop
ja
cli
cmc
ljmp
pop
mov
push
sbb
mov
leave
stc
cmc
ret
call
sbb
test
sub
in
je
xlat
inc
sbb
scas
fiaddl
in
fidivrs
push
xchg
xor
inc
mov
ss
or
lret
into
add
mov
in
xchg
icebp
mov
xchg
es
xor
popf
pop
push
cmp
mov
movsl
icebp
inc
and
or
lea
adc
and
es
mov
fst
jbe
pop
arpl
into
cmp
sbb
push
push
cmp
outsb
ror
jecxz
dec
and
add
push
adcl
add
mov
dec
adc
mov
js
mulb
mov
test
roll
divb
insl
cvtps2pd
push
daa
push
andb
std
out
loope
cmp
mov
sub
rorl
stos
push
in
mov
notl
push
add
andb
jle
sbbb
mov
je
and
jg
les
andl
call
xorb
push
cmp
jge
imul
dec
das
cmp
inc
out
cli
jge
adc
in
test
mov
scas
fmull
inc
popf
ja
mov
xchg
xchg
xchg
mov
sub
jae
fistl
xorl
js
adc
and
push
dec
inc
pop
mov
xchg
adc
xchg
pop
nop
mov
nop
hlt
mov
xchg
gs
inc
add
aaa
or
and
dec
xchg
xchg
push
mov
dec
cmc
nop
jno
mov
sbb
inc
hlt
scas
mov
aaa
rcrl
cmp
xchg
inc
js
aam
push
jne
xchg
divl
add
mov
pop
cmp
and
fildll
outsb
xchg
repnz
mov
pop
pop
cs
cmp
jnp
sub
inc
out
or
ja
add
scas
stos
jl
inc
jae
add
fadds
int
lea
inc
nop
push
xchg
jbe
sub
push
arpl
lea
push
xlat
jne
xchg
xor
cmp
lcall
insl
push
lret
mov
enter
lods
push
aas
stos
or
xchg
in
cmp
pop
and
sub
push
xchg
shlb
idivb
das
jg
push
jmp
xchg
xor
mov
cld
xchg
stos
sti
sti
jmp
dec
enter
movsl
push
push
jnp
movsb
push
push
fidivrs
sbb
shll
lcall
cmp
jae
and
mov
xor
outsb
push
aas
jnp
and
pusha
mov
fnop
jge
arpl
aas
jle
jge
ja
sub
add
clc
mov
cli
jl
sahf
pop
pop
imul
in
xchg
je
mov
inc
rcrb
cmc
xchg
test
push
push
ljmp
xchg
out
stos
mov
xor
repz
dec
push
and
mov
cmp
into
test
imul
lret
popf
ss
lcall
adc
adc
add
inc
fistps
stos
dec
xor
jno
xchg
enter
test
adc
mov
mov
lret
iret
mov
jg
xor
fwait
mov
loope
arpl
jge
xorb
xlat
sub
xchg
add
js
inc
lea
cmpsl
insl
or
ds
xchg
imul
dec
fbstp
push
call
nop
lret
mov
std
pusha
mov
mov
pop
xchg
loope
pop
push
push
push
jbe
push
outsb
ret
sub
fwait
test
inc
mov
sbb
mov
arpl
negl
add
ret
ret
and
adc
cltd
add
dec
push
pop
xor
xchg
fwait
imul
aam
gs
lahf
push
inc
xchg
in
jae
das
cmp
and
or
pop
cmp
mov
adc
xchg
xchg
insl
push
dec
nop
lods
mov
xchg
sahf
add
jne
dec
xchg
cmpsb
pop
out
sub
xchg
xor
push
outsb
test
into
mov
mov
out
inc
cmpsl
rol
insb
lea
fwait
dec
loope
pop
out
or
cld
fistps
jecxz
jge
mov
inc
mov
mov
jge
mov
aas
daa
icebp
mov
or
mov
mov
mov
jg
rcll
sbb
xchg
add
inc
sub
add
in
xchg
cmc
xchg
mov
test
sub
mov
sub
shr
pop
xor
out
icebp
push
xchg
xor
mov
rcll
mov
fwait
sbb
lret
mulb
outsl
dec
imul
dec
push
out
mov
cmp
dec
outsb
push
xchg
mov
sub
mov
popf
push
lcall
mov
addr16
xor
sub
aaa
pop
scas
ret
mov
sbbb
daa
rclb
aaa
dec
xchg
push
shrl
xchg
nop
dec
mov
loopne
mov
inc
push
or
sbbb
imul
pop
pop
fimull
mov
outsl
or
cmp
daa
shrb
xchg
xchg
mov
sbb
pop
mov
push
scas
rcll
fcmovnb
jmp
mov
push
fildl
mov
mov
push
jg
and
scas
jp
sti
or
sahf
std
icebp
mov
or
xor
aas
mov
pop
nop
mov
out
inc
xor
sub
or
and
int
inc
ret
daa
imul
pop
daa
cwtl
lock
lods
or
push
dec
xchg
rcl
pusha
fistpll
stos
pop
push
ja
movsb
pop
ja
aad
xchg
lods
sub
mov
xor
roll
shll
imul
negb
mov
pop
or
lods
stos
psubusb
sub
fdivr
push
adc
cmpsb
sarb
sub
stos
movsb
cli
cld
sbb
outsb
popf
divl
and
ret
xchg
mov
bswap
sbb
mov
xor
mov
popa
nop
inc
inc
adc
jb
xor
adc
mov
ja
cmpsl
xchg
mov
gs
jge
mov
scas
push
scas
push
xor
idiv
jmp
push
testb
fistpl
daa
xor
mov
sahf
leave
adcl
jecxz
pop
jle
imul
mov
dec
arpl
rcll
push
mov
mov
icebp
stc
adc
fstps
jmp
nop
pushf
ret
js
in
inc
popa
ljmp
std
nop
xor
jl
xlat
mov
jae
nop
sub
lds
or
loop
in
mov
push
jne
aaa
inc
jle
xchg
xchg
mov
lahf
dec
sub
andb
popa
inc
mov
xchg
and
out
pop
aaa
mov
sbb
leave
mov
pop
shrl
call
nop
xchg
inc
fidivl
push
jns
mov
leave
sarb
mov
aam
xchg
jle
or
mov
ja
lret
int
cli
repnz
ljmp
sbb
mov
lods
fnstsw
mov
fimuls
or
sub
cs
call
in
mov
mov
inc
mov
inc
std
sbb
imul
nop
push
cli
iret
mov
pop
inc
xchg
push
pop
sbb
sbb
mov
sbb
or
fildl
jg
jecxz
ret
mov
hlt
into
inc
and
leave
incb
ja
cli
dec
in
test
or
pop
jecxz
ja
imul
movsl
push
mov
sbb
jp
leave
data16
clc
cmp
punpcklwd
push
out
sbbl
pop
pop
clc
scas
dec
push
mov
nop
vmovups
cmp
icebp
pause
mov
out
mov
or
sub
gs
aas
xor
aas
adc
stos
icebp
jne
in
xor
sbb
sub
jae
push
ret
add
sahf
sbb
ficoml
sub
dec
daa
push
mov
sbb
xchg
into
data16
jge
lret
shl
cltd
or
mov
push
and
and
push
sbb
push
rcll
or
sub
add
pop
mov
mov
mov
mov
dec
xor
dec
jecxz
roll
iret
daa
xchg
or
pop
mov
dec
push
adc
xchg
data16
das
and
xchg
push
adc
shrl
lret
and
mov
in
stos
outsb
push
jns
inc
adc
jne
jge
decl
aad
add
push
fsub
xchg
cli
iret
gs
adc
test
loop
pusha
sub
mov
push
rol
sbb
or
stos
ret
xchg
mov
outsb
movsl
test
cmc
sub
mov
sarl
cwtl
lret
pop
mov
inc
popf
aad
sti
xor
hlt
daa
nop
lahf
bswap
lcall
dec
cs
xor
or
xor
push
shlb
pop
cmp
mov
cld
push
xchg
push
enter
das
das
jmp
mov
inc
incl
cmp
push
sub
push
dec
stos
sbb
mov
xchg
sub
xchg
inc
addr16
mov
push
mov
outsb
out
sar
push
jecxz
push
enter
shlb
mov
repz
and
mov
daa
testb
xchg
inc
add
jmp
in
addr16
nop
ret
popf
cmpsl
push
and
mov
movsb
test
or
add
sub
pop
mov
in
das
idivb
mov
mov
cltd
lahf
and
mov
ja
and
pop
aad
nop
setne
jnp
push
movsl
xor
es
daa
nop
mov
int
lock
arpl
cmc
movsb
mov
repnz
nop
mov
loop
pop
popf
xchg
sub
jmp
lods
xor
and
in
shl
lret
jg
inc
sub
incb
int
lahf
adc
aam
js
inc
addr16
pop
addr16
push
adc
dec
insb
dec
xchg
dec
andl
add
jg
mov
ret
adc
xor
mov
test
cli
out
movsb
movsb
lock
dec
add
insl
dec
sub
into
lea
inc
sub
mov
pop
pop
jb
push
test
cmp
fldenv
dec
movsb
lret
stos
inc
pop
sahf
icebp
mov
iret
inc
xchg
loope
mov
pop
in
out
xchg
ret
dec
push
btc
ja
lahf
push
and
inc
aaa
sbb
aad
test
ljmp
addr16
int3
dec
fscale
out
or
aaa
mov
mov
jae
mov
lods
push
inc
lods
jecxz
sub
mov
shll
nop
inc
add
cmp
jo
pop
jle
mov
mov
push
cli
dec
and
ficomps
andl
mov
mov
shlb
stc
sbb
call
push
mov
insb
push
mov
out
cltd
mov
jl
sbb
push
ja
push
popa
lea
xlat
pop
jl
cmc
mov
cltd
and
cli
mov
ljmp
mov
outsl
pop
shrb
cltd
out
jnp
roll
leave
call
sahf
js
sub
daa
mov
test
hlt
hlt
push
call
int3
lahf
add
mov
mov
dec
adc
cltd
pop
insb
xchg
call
mov
adc
imul
or
int3
or
shll
divb
cmpsl
nop
pushf
xor
ret
adc
or
sti
nop
xchg
adc
cmp
push
dec
test
roll
jnp
push
adcl
shll
lds
mov
xor
iret
jb
ss
adc
in
popf
movsb
xchg
push
cs
test
push
aaa
xor
jnp
scas
out
sub
out
aaa
cltd
fidivs
xchg
aaa
pushf
into
cmp
inc
sbb
inc
sub
fldl
sub
dec
int
xor
ds
cmpsl
popf
movswl
mov
push
push
sub
in
out
jmp
cltd
fidivl
out
movsl
js
xchg
jnp
mov
out
mov
push
arpl
and
push
repz
gs
movsl
jno
movups
ss
or
daa
jecxz
popw
jnp
cmpsl
js
jg
xchg
xchg
nop
mov
cwtl
ffree
mov
int
mov
cmpsl
xchg
js
ret
fbstp
fcom
xchg
in
dec
mov
ret
enter
inc
loopne
clc
ja
lods
sti
lret
ja
std
push
xchg
and
scas
pop
call
cmpl
inc
gs
mov
inc
fdivl
cmp
mov
call
insl
adc
cmp
stos
add
cltd
mov
ja
enter
mov
dec
and
pop
testl
in
jecxz
mov
ret
and
dec
mov
adc
push
insl
pop
sbb
test
push
xchg
mov
jge
testl
push
movsb
movzwl
cmpsl
xchg
dec
mov
mov
rolb
ja
dec
xor
std
mov
cmpsl
mov
mov
mov
xor
or
adc
clc
testl
cmc
loop
xchg
jo
lds
jg
mov
jg,pt
rorb
jg
lock
ljmp
stos
dec
adc
ss
pop
test
inc
stos
nop
aaa
dec
mov
in
or
fsubrs
xchg
scas
sti
mov
ja
push
xchg
aad
sub
imull
xchg
faddl
nop
cmp
outsl
jne
outsb
lahf
int3
je
roll
and
cld
out
jbe
pop
in
fistl
enter
cmpsb
lock
scas
cmp
es
stos
mov
jbe
pop
stos
lret
sub
push
cmpsl
pop
aaa
aad
ja
pop
rorl
repnz
in
rcll
adc
inc
mov
sub
aas
pop
push
aaa
pop
jl
daa
ja
inc
push
lcall
cs
dec
scas
adc
or
xor
dec
test
push
outsl
xor
push
xchg
mov
ret
jae
enter
arpl
dec
test
lahf
push
mov
dec
mov
roll
imul
daa
pusha
maskmovq
jle
aad
pop
in
dec
inc
fadds
and
fnstsw
cmp
in
lcall
iret
ret
jecxz
pop
call
in
in
push
adc
fldcw
xorl
mov
sarb
fwait
add
xor
lock
out
cmpsl
mov
mov
aas
mov
rcll
nop
mov
dec
movl
and
sbb
movsl
push
aas
test
adc
in
jp
out
xchg
inc
xchg
fsubrl
mov
xchg
push
add
jmp
cltd
cmpsl
push
test
mov
outsb
xor
jae
cmp
cltd
xor
insl
sbb
mov
stc
cmp
dec
fwait
lret
pop
into
or
xchg
push
dec
adc
addr16
inc
daa
pop
fs
and
outsl
and
mov
push
and
adcl
mov
daa
data16
int3
lea
mov
push
inc
imulb
iret
repz
out
insb
lahf
pop
fsts
mov
push
int
bound
inc
push
sbb
stos
jle
iret
or
scas
lods
out
inc
das
pop
in
push
mov
daa
pop
pop
stos
std
jne
push
outsl
jle
popf
jne
fdivrp
iret
mov
aam
sbb
fstpt
lock
js
xlat
daa
push
out
adc
in
stc
xor
push
aad
push
sub
mov
ja
xchg
mov
push
mov
jne
clc
iret
xchg
jnp
std
pushl
mov
pop
xchg
push
pop
sbb
mov
xor
xchg
repnz
mov
gs
jae
push
nop
ret
in
xchg
adc
lds
jbe
mov
xor
mov
movb
js
mov
pushf
push
ja
xchg
nop
mov
inc
push
pop
int
scas
jnp
mov
jne
out
cld
subb
std
js
fsubl
dec
shrb
pop
dec
into
dec
jne
jecxz
xchg
push
daa
nop
loop
push
es
gs
sbb
jmp
jb
push
movsl
push
mov
add
mov
mov
das
nop
cltd
out
cmpsb
addr16
test
or
and
mov
mov
in
mov
nop
push
mov
mov
dec
pop
adc
xor
sub
inc
js
out
inc
sub
mov
xchg
shlb
xchg
lret
push
scas
stc
nop
add
fsubl
mov
pop
push
cld
loopne
xor
mov
pop
cld
and
cmp
lret
mov
cmpsl
xchg
and
les
xchg
aam
scas
mov
sti
aaa
mov
fs
cmpsb
push
in
xchg
mov
faddl
mov
bound
pop
lods
inc
dec
insb
push
in
test
out
cmp
je
cld
jmp
jge
dec
mov
cmc
adc
xchg
mov
shll
sub
nop
les
fwait
ja
ja
push
xor
sbb
sbb
adc
xchg
shlb
jns
mov
fwait
adc
push
nop
test
push
mov
push
ret
pop
sbb
aad
ja
inc
fisttpl
je
fcoml
or
or
xchg
pop
int3
mov
and
lahf
inc
sbbl
xchg
push
rol
fistps
push
in
mov
hlt
jae
mov
aaa
mov
push
loopne
mov
ret
jge
imul
sub
cmpsl
and
loope
push
idivl
shrl
sbb
ja
ret
pop
mov
aam
or
push
pop
rolb
adc
enter
pop
xchg
jne
xchg
mov
lods
xchg
adc
das
adc
nop
and
idivl
mov
push
mov
jbe
cmp
loop
insb
inc
test
shll
inc
adc
jno
jbe
cmp
jg
or
decb
jae
lcall
cmpb
jmp
call
jmp
pop
sahf
aas
nop
out
lds
push
mov
adc
dec
addr16
sahf
mov
roll
out
cmp
rorl
fstl
out
jo
adc
in
sub
adc
popl
xchg
add
cmpsl
xor
add
call
dec
add
xor
hlt
sub
inc
movsl
add
inc
xchg
adc
mov
mov
mov
sub
ret
fdivs
dec
push
inc
xchg
leave
inc
test
nop
mov
fcmovnu
jmp
aad
xchg
movsb
mov
inc
xchg
scas
mov
subl
lahf
cmpsl
mov
mov
test
mov
mov
js
loopne
xor
jbe
scas
loop
stos
movsl
mov
adc
jo
pop
mov
nop
imul
inc
mov
cmpsb
mov
mov
cs
outsb
daa
filds
sbb
mov
jmp
push
cmc
mov
xchg
xchg
mov
push
movsl
or
out
movsl
mov
pusha
cmpsb
push
and
xchg
ss
push
in
jne
dec
sub
pop
xchg
shlb
pop
mov
or
addr16
mov
jbe
arpl
adc
pop
push
mov
std
lret
add
push
cmp
mov
xor
cmp
xor
jo
insb
ja
jle
je
mov
out
xorl
sarl
add
adc
xchg
cltd
dec
je
mov
pop
ljmp
jecxz
cmp
push
fcmovne
mov
repz
inc
js
and
movsl
inc
cltd
cmp
jge
lods
jbe
adc
push
int
and
pusha
scas
pop
dec
cmp
movsb
ja
sub
adc
cmpsl
push
ficoms
inc
mov
fstl
test
and
rclb
and
int
fwait
jno
into
adc
test
jle
mov
aad
aas
lods
push
inc
sbb
orb
shl
inc
mov
test
repnz
dec
in
aas
nop
sub
adc
aad
movsb
mov
xchg
push
mov
jge
mov
and
test
aas
sub
lods
sub
mov
bound
dec
mov
push
out
shr
dec
mov
inc
inc
mulb
decb
repnz
imul
aad
andb
mov
neg
mov
mov
and
js
xchg
mov
jno
aad
push
jg
mov
jnp
or
dec
adc
ja
outsl
jle
mov
int
and
ss
mov
cmpsl
rorb
fidivrl
ss
aaa
xor
mov
dec
out
xchg
and
xor
mov
push
aas
outsb
mov
inc
push
insl
imul
jae
cli
mov
jge
js
adc
dec
pop
insl
inc
repnz
int
xor
push
xor
pop
pop
in
and
sub
pop
int
ret
or
push
xor
addr16
data16
pusha
inc
push
ja
cmp
mov
test
arpl
xchg
data16
repz
ja
clc
add
push
jecxz
shl
nop
xor
ljmp
mov
mov
cs
das
movsb
not
lahf
test
sbb
mov
sub
test
cltd
daa
cmp
xchg
push
addl
adc
and
jg
push
push
bound
jbe
pop
jle
xchg
xchg
xor
push
js
rcll
outsb
sahf
push
lods
push
cmp
lret
leave
cmp
sub
jo
dec
stos
jmp
out
ficoml
pop
or
movsb
pop
aas
mov
xchg
xchg
imul
arpl
push
jnp
rcll
adc
adc
mov
xchg
ja
or
xor
add
fdivp
stos
jp
push
adcl
mov
aas
mov
inc
push
inc
nop
dec
es
dec
int
xor
roll
je
notb
out
xchg
aad
nop
cld
push
or
sarb
pop
cmp
sti
xchg
cmp
pushf
andl
jp
test
aas
inc
popa
mov
adc
enter
pop
imull
and
lret
lcall
int
mov
mov
divb
adc
mov
mov
push
dec
cvtps2pd
jecxz
fs
imulb
mov
int3
cwtl
stos
push
iret
dec
cmc
ja
push
mov
push
leave
fisubrl
dec
mov
test
inc
mov
js
or
mov
test
je
daa
pop
add
push
std
addr16
das
nop
lahf
ds
das
aaa
pop
xor
push
or
js
sub
icebp
add
jp
cld
inc
jl
test
hlt
push
add
ret
fstp
push
daa
add
sub
ss
stos
ljmp
dec
dec
cmpb
in
cmp
lret
sbb
dec
mov
loope
daa
xchg
outsl
into
lods
pop
adc
out
mov
mov
mov
sti
pop
loope
inc
scas
aaa
arpl
xchg
sub
mov
lret
and
jg
icebp
test
push
ds
adcl
jne
test
out
mov
sub
xchg
shll
mov
sub
pop
lret
lock
test
scas
inc
dec
sarb
jo
test
mov
nop
and
mov
je
das
sub
sbb
popa
pusha
inc
call
pop
inc
adc
mov
ss
outsb
sub
push
gs
push
xchg
les
pop
mov
or
rclb
incl
mov
iret
lods
push
movsl
popf
lea
leave
push
sahf
cs
adc
mov
push
je
out
sbb
and
inc
ja
dec
fisubrl
add
sbb
and
inc
nop
cmp
dec
lods
push
arpl
mov
xor
iret
xchg
xor
sub
imull
push
inc
pop
stc
mov
lods
inc
pop
pop
aad
cs
mov
loope
push
add
xchg
push
dec
mov
aas
xor
xchg
cmpsl
test
fists
mov
lock
in
lahf
sbb
pop
mov
ret
shrl
and
arpl
mov
cmp
xchg
subl
imull
rcll
jnp
mov
sub
adc
push
loope
std
xchg
inc
pop
cmp
mov
cs
sub
cs
add
jmp
repnz
mov
out
into
push
push
nop
mov
mov
push
push
push
xor
movsl
sub
aaa
inc
insl
pop
movb
in
dec
mov
iret
mov
xchg
inc
shlb
inc
mov
inc
jecxz
mov
add
mov
pop
mov
gs
repz
jnp
push
push
inc
test
mov
rcll
aad
or
cmp
mov
or
pop
mov
js
test
nop
dec
mov
push
adc
cmp
xor
mov
jl
mov
sub
das
mov
mov
lret
lds
xor
sarb
inc
in
push
bound
mov
divb
add
jmp
sbb
cmp
mov
lods
es
mov
jg
xchg
int3
mov
nop
adc
xchg
or
push
fs
dec
sub
out
dec
and
dec
xchg
jp
iret
xchg
sub
dec
loope
inc
les
mov
int3
daa
mov
dec
movsb
lret
or
test
btc
shrl
out
mov
outsb
xchg
pop
test
cmp
ret
ftst
shr
xorl
lahf
js
mov
subb
mov
mov
arpl
mov
xlat
add
inc
mov
inc
push
psubd
jno
ret
imull
mov
and
insb
pop
pusha
xchg
xchg
add
dec
pop
sbb
imul
dec
mov
xchg
ja
enter
inc
in
stos
stos
ret
int3
sbb
int3
mov
jmp
xor
mov
xchg
std
std
popa
lea
fnsave
xchg
jae
lret
xchg
xchg
pop
lock
push
pop
pop
inc
push
xchg
or
mov
enter
test
jge
outsl
loopne
jl
nop
or
cmpsb
sub
push
xchg
jns
filds
into
cmpsl
xchg
ljmp
inc
add
and
jnp
jnp
cmp
sbb
gs
out
xchg
adc
push
movsl
push
pop
daa
push
jle
pusha
daa
pop
inc
or
adc
imul
sub
push
dec
pop
xor
jecxz
loop
in
divl
int3
jbe
fildll
sti
sub
pop
mov
pop
cld
lds
pop
aam
sub
clc
roll
jns
jno
xchg
jns
adc
or
ret
mov
rorb
push
jp
inc
mov
mov
mov
imul
mov
sbb
mov
mov
push
daa
lahf
xor
roll
jle
dec
and
adc
es
push
fstps
sbb
cmp
pop
ja
inc
rolb
daa
xor
cs
filds
les
push
mov
pop
xor
std
nop
xchg
or
push
ja
dec
jl
repnz
addr16
out
pop
outsl
mov
push
and
arpl
xchg
dec
jns
xor
loop
inc
int3
outsl
neg
adc
sub
fs
add
adcb
test
shll
push
scas
jge
jno
sbb
pusha
fidivs
xchg
aaa
jne
aad
adc
cmp
loop
mov
ss
mov
lcall
ret
push
je
loopne
movsb
outsb
push
fdivp
push
pushf
popf
add
pop
mov
in
and
je
xor
testb
jno
ja
lret
push
sti
mov
pop
adc
pop
stos
mov
outsl
ss
lds
sub
imul
jb
aas
xor
sub
cmp
js
xor
push
push
das
add
mov
mov
xor
into
mov
adc
mov
jbe
dec
sti
iret
fnstenv
adc
addr16
mulb
cmp
adc
xor
mov
xor
add
inc
jbe
test
mov
sysret
stos
rcrb
jb
jnp
popf
sub
jo
test
and
dec
fs
mov
sbb
xor
lods
add
inc
in
mov
ss
xchg
sbb
push
lock
jno
mov
push
jae
mov
lret
popa
nop
push
cltd
jnp
inc
js
push
rclb
or
and
lods
adc
cs
inc
jmp
rorl
rcll
sahf
es
push
mov
push
scas
fists
mov
test
sti
adc
pop
lahf
inc
xchg
decb
cwtl
xchg
out
dec
inc
xchg
imul
in
ja
int
jmp
lods
ja
sub
hlt
fcoml
xchg
ljmp
lea
lods
push
mov
nop
xor
jnp
bound
inc
ja
repnz
mov
ja
pop
loopne
cmc
push
mov
rorl
mov
or
aaa
or
fidivs
jmp
xchg
repz
xchg
roll
and
push
dec
jno
aaa
out
scas
sbb
mov
and
adc
xchg
push
repnz
mov
and
out
insb
test
inc
js
fisubs
stos
sti
scas
sarb
mov
sub
ret
push
pop
sbb
mov
jae
pop
testl
aaa
cmpsb
sti
rcll
jae
push
ja
push
xor
xor
ret
lock
rcll
mov
fistps
mov
fwait
dec
into
shrl
lds
shrb
ja
push
shlb
gs
test
xor
cmpsl
adc
iret
inc
jne
or
out
jbe
cmpsl
nop
xchg
dec
cmc
mov
lods
push
mov
inc
jmp
push
cmp
ret
cmpsl
jo
adc
fdivrl
lds
sbb
xchg
inc
xor
jecxz
cmc
lret
pop
neg
dec
dec
nop
stos
adc
push
imul
inc
daa
aas
sbb
cmp
inc
fwait
movsb
imul
cmpsb
lods
imul
outsl
mov
inc
lahf
sbb
pop
stc
imul
test
popa
js
or
loope
jae
push
insl
nop
in
js
dec
scas
sbb
mov
adc
or
aad
sbb
leave
xchg
push
fistps
cmp
xchg
xchg
nop
aaa
push
xchg
and
xchg
cwtl
dec
jne
aas
mov
push
in
pop
nop
push
xchg
jo
stos
xor
into
out
aam
nop
push
xor
ret
cmova
ror
xor
aaa
inc
fs
add
cmp
test
jl
movsl
push
notl
lea
mov
inc
jb
inc
js
pop
inc
push
push
lahf
cltd
pop
xchg
repz
repnz
lret
fiadds
pop
movsl
push
xor
pop
mov
test
pop
sub
fidivl
sarb
leave
pop
xor
aaa
mov
xchg
dec
rcll
adc
or
scas
lret
stc
jns
mov
bswap
xchg
mov
and
loop
movsb
movsl
notb
pop
and
mov
out
push
jecxz
xchg
sbb
hlt
cltd
aas
push
lret
or
dec
jb
das
xchg
jmp
popf
aad
sbb
ja
fcoml
jbe
pop
sub
cltd
dec
jmp
jne
repz
imul
outsb
enter
adc
jecxz
sub
dec
fbld
ret
mov
dec
or
xchg
add
daa
add
call
loop
and
mov
cmpsl
out
leave
mov
nop
pop
mov
xchg
mov
cltd
repnz
mov
xchg
inc
nop
pop
iret
gs
cmp
notb
mov
mov
cmp
push
repz
fsubs
mov
jecxz
jno
aad
cmpsl
cld
fmull
adc
fs
loop
mov
leave
push
mov
arpl
inc
rolb
inc
adc
mov
lods
cmpsb
out
xor
xchg
jb
dec
ficoms
aad
adc
pop
cltd
popa
push
inc
mov
adc
iret
cwtl
ror
lock
gs
fistpll
test
adc
push
xchg
jecxz
mov
jne
push
iret
xor
pop
cmp
ds
push
mov
mov
and
xchg
into
jae
push
xchg
xor
repnz
dec
shlb
mov
adc
rorl
into
xor
dec
xchg
into
testb
notl
push
dec
nop
xchg
imul
jae
push
mov
mov
aas
sbb
sarb
adcb
inc
dec
scas
mov
fistpl
lds
test
push
scas
sub
or
aam
std
pop
call
rcll
mov
xor
addr16
xor
int3
add
dec
lsl
xchg
adc
mov
in
jne
xchg
mov
or
xchg
push
mov
inc
pop
inc
cmp
aaa
js
mov
push
mov
pop
into
push
jne
out
imul
jae
inc
imul
mov
test
pop
daa
sbb
xor
jp
daa
mov
dec
mov
xor
inc
nop
ror
sub
cmpsb
nop
mov
outsb
cld
lock
cmp
inc
adc
pop
and
push
negb
or
mov
leave
icebp
jle
jbe
inc
push
push
xor
jge
lahf
mov
pop
insb
adc
cmp
push
push
sahf
nop
arpl
push
or
fcmovnu
sub
shlb
xor
ljmp
movsl
fnsave
mov
mov
push
inc
hlt
push
js
std
xor
adc
mov
mov
inc
xchg
mov
enter
jbe
nop
jb
or
mov
xor
cmpb
nop
sahf
lahf
rclb
push
flds
neg
push
adc
adc
test
pusha
enter
push
push
clc
mov
adc
pop
jae
fnstsw
adc
xchg
push
ja
xchg
sub
and
icebp
sbb
sbb
imul
pop
pop
cmc
cwtl
sti
jbe
sub
cwtl
decl
and
rolb
push
leave
pushl
sti
sbb
stos
sbb
mov
stos
js
sahf
es
adcb
arpl
nop
clc
mov
mov
cmc
and
push
xchg
or
push
test
bswap
movzwl
push
shrl
mov
jmp
sbb
xor
imul
jecxz
cmc
ljmp
xchg
xchg
es
mov
daa
xor
mov
mov
sub
lods
into
xor
sti
pop
push
xchg
xor
xor
andb
sub
xlat
sbbl
and
andnps
jecxz,pn
jb
btc
and
mov
mov
repz
out
out
outsb
les
push
arpl
pop
xchg
decl
dec
dec
test
push
fisttpll
mov
sub
jg
xor
cmpsl
js
and
popa
jge
push
xchg
nop
xchg
mov
cmp
mov
pop
cmp
sbb
mov
lds
outsb
movsl
test
data16
add
outsl
and
mov
nop
aas
scas
add
pop
mov
adc
repz
into
xchg
outsb
rorb
xchg
inc
lods
pop
mov
sarb
sub
push
imul
pop
push
cs
idivb
ret
dec
or
mov
outsb
jnp
or
mov
push
mov
push
negl
cmpsl
dec
nop
pop
aad
mov
into
ja
lret
notb
jmp
and
push
icebp
mov
adc
adc
or
sbb
mov
ss
xchg
jl
icebp
jbe
out
jmp
in
jge
mov
orb
inc
push
mov
inc
xor
ljmp
in
jae
xchg
lret
xor
adc
test
cmp
notl
outsl
adc
xor
movb
add
xchg
push
mov
iret
cmpb
insb
lret
dec
pushl
pop
inc
sbb
jp
and
jle
repnz
ss
ss
jne
jb
inc
rclb
in
inc
sub
lret
int
fsubr
xchg
mov
push
shll
cmp
mov
scas
ret
cmovle
xchg
xchg
push
mov
ja
lret
xor
or
sti
mov
or
sahf
pop
or
cwtl
mov
inc
dec
sub
clc
aas
dec
mov
push
mov
test
sub
aaa
xchg
xchg
rol
stos
inc
mov
sbb
jbe
push
icebp
inc
korw
sub
mov
cmpsb
push
dec
loop
mov
iret
adc
xor
mov
and
cmp
sub
cmp
je
jge
cmpsb
data16
iret
push
xchg
xchg
mov
mov
pushf
inc
sbb
pop
std
pop
int3
xchg
dec
add
sbb
out
ds
or
sub
mov
mov
mov
in
into
adc
push
xchg
ret
and
mov
jg
js
cmp
mov
push
pop
mov
test
add
negl
cmp
inc
jge
aaa
mov
scas
jle
in
imul
jle
mov
into
pop
xchg
dec
in
ds
and
aad
lahf
sbb
push
push
dec
repz
push
ret
movb
mov
jge
repz
adc
pop
push
ss
push
mov
ja
stos
mov
int
pop
mov
inc
dec
cli
push
push
sub
adc
mov
orb
jnp
idivb
sbb
sbb
jge
xchg
xorl
outsb
xor
test
xchg
push
mov
scas
icebp
mov
lock
sub
loop
lcall
leave
pop
add
mov
mov
inc
lcall
and
ds
test
aad
and
adc
inc
inc
mov
xchg
dec
ret
mov
imul
add
push
hlt
test
nop
mov
and
ds
xchg
ja
mov
cmp
mov
dec
jg
xchg
mov
push
jne
ljmp
and
sti
out
sti
and
mov
fidivs
xchg
rcrb
xchg
dec
fnstsw
sub
xchg
jecxz
mov
pusha
push
sub
jp
xchg
dec
decb
gs
pop
iret
std
pop
and
inc
cmpsl
adc
mov
and
mov
xchg
xchg
lret
push
mov
push
xor
leave
jns
or
test
mov
adc
inc
test
repz
adc
mov
sub
es
sbb
add
scas
push
stc
push
maskmovq
notl
or
mov
sub
jb
dec
sbb
xchg
insb
xchg
stos
mov
xor
mov
orl
jg
jb
ret
inc
jecxz
loope
out
or
sbb
xchg
lods
mov
mov
or
xchg
mov
xor
out
sahf
jne
test
jo
cmpsl
ret
dec
mov
and
mov
ret
cld
insl
mov
pop
adc
lods
call
mov
inc
mov
icebp
mov
into
or
into
loop
push
and
mov
inc
and
jns
adc
mov
pop
sbb
scas
adc
jne
shlb
mov
mov
push
mov
xchg
int
push
push
lret
adc
xchg
nop
sbb
repz
mov
pop
sbb
push
mov
mov
push
das
in
mov
aas
mov
and
imul
mov
inc
mov
xchg
jge
or
nop
lret
inc
fldenv
rcrb
dec
inc
inc
sbb
cmp
jne
cmpsb
inc
imul
and
and
dec
mov
xor
sarl
rcrl
dec
sarb
sbb
cmpsl
jnp
or
mov
adc
mov
dec
mov
mul
movsl
jnp
mov
mov
mov
sub
xchg
mov
and
enter
in
nop
sub
sub
neg
fwait
mov
scas
ja
jns
lahf
loope
mov
xchg
std
pop
or
dec
aad
and
movsl
dec
aad
int
fists
ffree
int
pushf
add
nop
cmp
xorps
xchg
jmp
int
xor
es
stos
xchg
ds
js
fnsave
movsl
push
jbe
out
cmp
daa
sbb
cmp
fwait
xchg
mov
push
push
test
or
in
mov
in
or
enter
xchg
dec
fidivrl
das
movq
mov
stc
xchg
orps
fcompl
scas
in
sub
xor
mov
xchg
testl
jge
andl
fiadds
adc
sub
xchg
mov
out
xor
pop
ja
adc
adc
mov
cmp
adc
cmc
aas
into
test
inc
pop
leave
in
lahf
scas
pop
out
and
mov
jp
mov
rcl
fldt
push
roll
roll
jle
insb
sbb
jnp
xchg
lods
addr16
into
addb
and
or
and
jb
push
ljmp
mov
adc
iret
sti
sbb
mov
mov
sbb
pop
inc
mov
js
sar
mov
mov
or
mov
inc
loope
iret
lcall
in
hlt
mov
mov
sub
mov
test
xchg
lahf
lods
mov
cmp
jno
dec
ljmp
lods
lahf
dec
push
out
scas
cwtl
das
hlt
jo
cmpsl
lret
push
jnp
jg
adc
test
xchg
out
sbb
sbb
nop
pop
inc
mov
loope
cmc
cmpsl
test
out
add
xchg
nop
out
push
sub
xchg
arpl
rclb
mov
mov
inc
mov
jmp
rolb
clc
ss
or
push
inc
sub
and
push
or
push
jg
xchg
dec
nop
negb
pop
scas
cli
ret
lock
jno
adc
cmpsl
lret
dec
xor
mov
xchg
xchg
push
and
sub
fmull
ja
mov
jg
pop
xchg
xchg
stos
adc
adc
fidivrl
mov
mov
inc
mov
and
sub
ja
mul
sbb
mov
mov
inc
dec
movb
adc
fcmovne
pop
xchg
stos
sbb
add
push
add
jae
jae
push
and
movsb
repz
addr16
out
xchg
xchg
into
into
mov
cmp
push
into
mov
mov
cmp
add
adcb
decl
push
shl
push
cs
add
insb
in
mov
sbb
pop
rcrb
iret
imul
out
ret
mov
pop
cmp
lea
push
pop
sahf
mov
in
cs
imul
sub
scas
loopne
pushf
or
sbb
sub
hlt
push
sub
mov
dec
mov
dec
jae
scas
push
adc
mov
int
pusha
dec
inc
xchg
test
push
loop
cmp
jecxz
lds
nop
push
xor
inc
adc
xchg
mov
xchg
dec
es
cmp
nop
push
mov
mov
inc
xchg
cmp
mov
int
popf
jle
cmp
imul
mov
dec
test
outsl
cmp
in
xor
mov
add
stos
sbb
out
xchg
leave
divb
ret
jbe
data16
push
jg
into
or
inc
div
in
rcrl
gs
jle
mov
lods
in
inc
mov
lret
aam
sbb
leave
pop
jg
mov
and
dec
jo
add
popf
scas
faddl
mov
or
sahf
shl
inc
jns
xor
lods
into
jmp
lret
push
cmp
roll
dec
lcall
inc
idivb
or
dec
aaa
int
mov
mov
fildl
lahf
out
js
test
adc
stos
inc
xor
mov
dec
mov
sub
adc
adc
movsb
or
pop
mov
mov
into
dec
pop
aaa
mulb
in
xchg
mov
and
in
lret
gs
sbbb
cmpsl
decb
and
cmp
push
dec
test
aas
mov
jg
xor
nop
sbb
cmpb
jle
sub
cwtl
mov
fwait
mov
sti
add
and
inc
push
ret
jg
xor
push
les
push
test
in
nop
sbb
cmp
or
lcall
int
mov
xorb
cmpsb
movsl
sub
jo
or
into
pop
pop
test
mov
mov
sbb
test
out
pop
popf
inc
inc
leave
mov
sub
xchg
jecxz
mov
xor
adc
cmpsb
xchg
cld
mov
mov
add
push
xchg
movsl
lds
push
xor
clc
ret
mov
pop
imul
lods
nop
mov
shrb
xchg
sub
jns
mov
dec
jmp
jae
jo
cmp
jg
xor
std
sub
push
mov
jmp
dec
push
ljmp
in
jmp
jno
in
lods
push
or
fisubrl
fisttps
cs
push
sub
sub
fistps
mov
scas
mov
loop
xchg
popf
into
inc
inc
xchg
and
xchg
lahf
test
lahf
out
inc
xor
pop
and
leave
xchg
mov
push
push
mov
dec
sub
jne
es
nop
inc
into
mov
idivb
mov
nop
push
jg
mov
jmp
xchg
pop
into
lods
outsl
push
ljmp
inc
mov
scas
xchg
adc
jae
out
ja
xchg
push
pop
or
in
xchg
into
xchg
iret
cmp
shll
xchg
sub
xchg
pop
loop
pushf
or
aam
xor
fisubl
sub
pop
iret
push
cmpsb
scas
fldenv
scas
sub
je
call
push
inc
cmp
xor
add
jo
int
imul
cmpsl
xchg
xchg
xchg
xchg
es
aad
insl
aad
js
cmc
cmpsl
rcrl
sbb
roll
inc
pop
mov
push
in
and
pop
cmp
lods
imul
and
adc
cld
xchg
cmp
mov
inc
ja
rcl
daa
mov
push
pop
pop
js
xor
pop
cmpsl
aaa
stc
sub
test
xchg
sbb
and
cmp
jmp
or
inc
outsb
adc
xor
push
jg
and
inc
dec
push
adc
mov
pop
or
xor
outsb
jno
inc
mov
mov
lds
inc
ret
scas
add
icebp
outsb
pop
lods
adc
and
mov
data16
mov
insl
xor
fbld
jo
push
rorb
xor
xchg
jmp
cld
dec
test
in
push
jle
in
adc
clc
ja
adc
pop
loopne
inc
js
mov
lea
aam
in
xchg
leave
mov
nop
mov
movsl
or
adc
mov
shlb
ja
leave
pusha
lds
shll
xchg
movsl
jl
mov
js
jle
comiss
xchg
pop
negl
arpl
sar
pushf
dec
jge
inc
or
lahf
xorb
push
dec
xchg
stos
nop
pop
jnp
out
sub
imulb
mov
lea
mov
or
mov
cs
xchg
adc
adc
add
pop
jb
pop
adc
add
ret
inc
jnp
adc
ljmp
and
cmpsb
mov
imul
mov
sbb
push
lds
scas
mulps
and
mov
popa
sqrtps
rclb
lds
adc
mov
xor
imul
ljmp
xchg
nop
or
inc
xorl
xchg
subb
subl
lcall
jge
lods
push
jo
inc
and
gs
inc
pop
push
mov
lea
fcomip
imul
sub
lds
sub
xor
cmp
lds
add
stos
pop
in
mov
and
popf
sub
xor
outsl
enter
int
lock
scas
push
lea
adc
testl
in
sub
push
daa
nop
push
xor
cmp
testb
imul
mov
dec
outsb
hlt
inc
outsl
or
scas
mov
cmpsl
dec
pop
cmp
mov
inc
push
pop
mov
mov
ja
xchg
xchg
aaa
jo
dec
mov
ss
jne
leave
xchg
and
xchg
jge
ret
cmp
rclb
test
sbb
pop
inc
xchg
int
std
jp
nop
lea
lods
add
adc
dec
add
mov
cld
mov
ja
je
add
inc
into
fcompl
addb
in
jge
add
addr16
daa
or
test
ss
imul
cmp
lock
loope
pop
cmpl
in
lahf
movsl
idivb
pop
fistps
mov
adc
lahf
mov
loop
cmpl
jge
cwtl
adc
mov
mov
pop
pop
jnp
mov
fists
repz
jb
xor
cmpsl
mov
nop
mov
pop
push
aad
into
repnz
mov
les
push
push
jecxz
jge
push
out
or
inc
popf
pop
call
lea
push
nop
jbe
lret
std
jns
push
cmp
cltd
xchg
push
sbb
outsl
movsl
push
repz
aad
and
pop
shlb
in
jne
test
gs
pushf
inc
dec
jge
push
dec
cltd
psrlq
dec
jecxz
inc
push
scas
pop
inc
push
mov
jne
push
jb
popa
mov
movsl
lods
fdiv
imul
or
nop
jp
pop
push
imul
dec
jbe
test
xor
push
dec
sbb
or
xchg
jecxz
xchg
fcoms
sbb
into
pop
repz
test
inc
daa
pop
loope
mov
add
jns
push
pop
fidivs
mov
nop
inc
fnstcw
lcall
jge
in
aad
pushf
xchg
pop
lds
sbb
push
enterw
loope
jp
jns
and
es
clc
outsl
gs
ds
nop
lret
fwait
insb
mov
mov
into
xchg
push
rorl
pop
sbb
sarl
push
in
mov
ss
and
in
or
stc
fwait
nop
and
add
and
lds
loopne
and
lds
fsubl
mov
add
cmp
in
jmp
adc
popf
dec
ja
mov
pop
xchg
cmp
aad
dec
cmp
lods
push
testb
gs
jb
dec
sti
sbb
outsl
aad
adc
stos
lea
ret
xor
inc
jno
jg
inc
push
and
add
je
or
push
lock
sbb
test
cld
inc
and
les
push
dec
adc
cmp
inc
dec
inc
cmp
mov
imul
cmpsb
and
jl
jae
mov
mov
movsl
cmp
outsb
cmp
and
lea
xchg
inc
aad
cmp
jae
das
sub
jb
ret
jmp
jge
outsb
lds
rcrb
lock
push
in
movsl
jbe
add
ja
cmp
add
xchg
ljmp
mov
inc
push
cmp
add
popf
add
adc
mov
dec
mov
sbbl
mull
shll
daa
xchg
adc
xchg
scas
pop
div
loopne
cmpsb
movsb
push
pop
mov
movsb
mov
jo
lds
mov
xchg
repz
dec
scas
cld
ret
ja
pop
mov
mov
xor
cwtl
xchg
pmulhuw
jno
std
mov
push
ror
lds
loopne
mov
xchg
imul
inc
lret
rcll
cmp
dec
stc
push
mov
popf
add
jmp
xor
dec
out
nop
mov
jle
fs
int3
ljmp
int
push
push
dec
xchg
or
push
unpcklps
mov
xchg
push
es
dec
or
int3
ficoms
outsl
pop
cmp
mov
pop
push
dec
nop
lea
int3
insb
aad
push
mov
nop
mov
insl
movsb
cmpb
sbb
jg
bound
sahf
xchg
inc
pusha
mov
repz
lock
mov
roll
cmp
ds
push
imul
inc
pop
mov
shlb
cmp
push
sbb
mov
xor
ja
adc
in
jmp
pop
aaa
xchg
ljmp
jb
enter
pop
test
cmpsb
push
xchg
das
push
xchg
xor
jnp
dec
or
repnz
jmp
sub
es
test
pop
imul
icebp
adc
cmp
fisttpll
mov
xchg
jno
push
mov
fistpl
test
test
inc
push
or
gs
leave
mov
ds
clc
or
movsl
push
dec
xchg
data16
mov
xchg
pop
cli
inc
xchg
test
loop
mov
gs
repz
mov
add
jecxz
mov
sbb
mov
cmp
lcall
loopne
gs
xor
out
sbbb
pop
mov
xchg
pop
or
xchg
lock
nop
outsb
sub
lahf
call
pop
lods
rcrb
lods
mov
dec
shl
mov
in
mov
jecxz
imull
mov
or
aad
nop
lret
jo
shll
or
push
adc
mov
cs
ljmp
mov
in
out
mov
and
imul
test
xor
stos
ss
jecxz
jg
rol
or
xor
sub
dec
pop
sbb
mov
jmp
lahf
and
aas
test
mov
gs
mov
filds
shl
or
dec
outsl
adc
incl
or
cmpsb
aas
pop
sti
outsl
scas
popa
pop
mov
pop
and
push
mov
add
out
push
jnp
iret
out
mov
int
jo
insb
xchg
xchg
or
aad
in
lea
testb
pop
mov
cmpsl
and
mov
or
int
xchg
mov
lods
cmp
mov
sti
push
and
cltd
addr16
popa
insl
mov
stc
mov
stos
mov
pop
test
scas
jecxz
rorb
imul
addr16
inc
negl
mov
popa
mov
mov
ja
js
jg
mov
sub
nop
jl
mov
aas
hlt
mov
adc
data16
pop
mov
jne
sbb
mov
mov
rclb
mov
imul
leave
mov
lret
aas
fwait
or
sbb
movsb
mov
xor
jl
lods
or
call
jnp
js
adc
lods
sahf
sub
inc
sub
fcomps
aas
xlat
fs
loope
xchg
adc
jno
in
outsl
movsb
cltd
mov
mov
out
adc
mov
sbbl
cwtl
lahf
jns
ret
loopne
cmpsl
push
cs
xor
pop
pop
jb
add
inc
sub
or
cmpsb
sbb
xchg
pop
pop
comiss
and
xchg
inc
xor
or
xor
sbb
jmp
lock
xor
addr16
sub
jg
btc
mov
std
loope
or
jmp
xchg
ja
jo
add
cltd
pop
mov
movb
or
or
pop
sti
aad
into
lret
in
aam
push
inc
adc
icebp
js
sbb
test
push
ret
jbe
adc
loop
pusha
inc
sub
call
mov
lds
adc
out
lods
lods
fnsave
mov
test
jp
xchg
addb
mov
xor
fists
aaa
fnsetpm(287
scas
and
mov
jnp
pop
insl
pop
mov
movsl
xchg
shll
push
mulb
adc
adc
jnp
jecxz
mov
mov
ss
or
adc
in
or
cmc
xor
lret
mov
xchg
sahf
in
mov
mov
push
movsb
mov
pop
adc
xchg
mov
mov
mov
ds
inc
popa
out
movzwl
push
ja
cmp
push
neg
std
dec
inc
inc
jbe
ret
jb
jae
rolb
fbstp
jbe
lds
mov
pop
divb
icebp
pop
sbb
mov
mov
lret
scas
lret
cmpsl
pop
js
jnp
mov
jle
mov
xchg
int
js
push
addl
sub
mov
shl
aad
or
ss
cli
enter
in
fldl
psubsb
andl
in
ljmp
mov
roll
push
in
shr
xchg
js
jecxz
pushf
jnp
xor
sbb
push
cmpsl
sbb
add
sub
dec
mov
jge
jno
mov
adc
xor
dec
ret
notl
jl
fsubrs
fs
xchg
or
cmc
lods
out
mov
mov
sub
shl
adc
jecxz
push
repz
mov
mov
test
xchg
jmp
sub
mov
xor
fsts
nop
ficomps
or
xor
and
les
xchg
loope
aaa
fcos
mov
push
daa
sarl
test
mov
mov
ja
push
dec
and
imul
cmp
lahf
xchg
inc
sbb
xchg
inc
hlt
int3
pop
jb
pusha
int
fimuls
aad
ja
add
mov
aad
gs
leave
rorl
pop
mov
mov
jnp
lds
and
add
xchg
cmp
xchg
test
in
xlat
push
std
out
xor
addr16
mov
mov
jnp
jns
arpl
ret
js
shlb
jle
cmpsl
mov
sub
imul
cltd
xor
hlt
mov
inc
lds
pop
gs
nop
mov
es
push
inc
adc
ret
imul
jecxz
push
mov
push
inc
add
jl
mov
mov
repnz
push
mov
cmp
rcrl
mov
es
adc
outsb
xor
mov
in
ss
mov
jecxz
jb
aad
pop
mov
or
or
pusha
inc
ja
daa
and
xchg
aas
es
jecxz
inc
fisubs
nop
push
adc
inc
cmc
jae
push
sub
xor
adc
and
call
shrl
dec
lahf
imul
leave
cwtl
mov
pop
xchg
test
into
xor
fidivl
adc
fdiv
shrl
data16
gs
or
dec
mov
addr16
pop
mov
jecxz
fists
and
iret
loope
jne
mov
hlt
push
inc
ds
lock
jnp
daa
in
xor
scas
movsl
call
push
add
push
push
inc
imul
xor
mov
xchg
xor
mov
icebp
sti
xchg
mov
popf
xchg
xorl
cld
fs
add
sqrtps
call
jnp
scas
cld
clc
notl
inc
push
dec
xchg
jecxz
lea
cmpl
sbb
pop
sub
mov
aad
cmp
imul
inc
cmp
inc
cmpsl
adc
push
xchg
mov
bound
sbb
adc
add
iret
mov
lods
mov
rolb
mov
add
in
mov
gs
push
xchg
movsl
lahf
insl
jmp
mov
inc
xor
mov
mov
gs
outsl
shr
mov
dec
idivb
or
cmpsb
out
dec
test
aaa
or
jmp
xchg
cmp
mov
mov
and
js
leave
insl
xchg
cltd
dec
push
dec
mov
popf
pop
enter
mov
mov
xor
xor
lret
inc
push
fwait
mov
mov
mov
out
add
fcmovne
fdivl
int3
push
jnp
call
stos
xor
out
and
mov
imul
dec
xor
mov
lds
mov
mov
add
dec
mov
sub
adc
mov
fisubl
hlt
outsl
into
nop
scas
jne
mov
imul
xchg
push
adc
xor
mov
stos
xchg
je
mov
rorb
repnz
xchg
andl
les
xchg
jg
aaa
jae
ja
pop
adc
rcll
fldcw
mov
xor
aam
aas
lret
sbb
mov
das
xor
stos
jo
push
imul
nop
or
adc
pop
push
push
xchg
pop
or
sbb
mov
out
nop
sbb
lret
push
push
cmp
mov
mov
xchg
xor
dec
leave
xchg
enter
imulb
cmpsl
nop
fcompl
dec
dec
push
iret
dec
test
into
push
xchg
push
ret
xor
mov
repz
ja
jg
filds
or
cld
fwait
adc
xchg
pop
stos
push
insl
icebp
nop
or
je
mov
je
addl
mov
ret
test
cmp
dec
sbb
outsb
ret
push
push
mov
stc
ja
and
dec
push
and
into
fimull
jg
adc
sub
jae
sbb
xchg
push
stc
push
jle
mov
xchg
insl
push
push
sub
pop
fldenv
dec
shrl
and
nop
pop
mov
xchg
in
jbe
xchg
ss
push
rorb
aam
ret
ret
mov
jle
jle
sbb
xchg
call
dec
in
into
stos
or
loop
in
jno
lret
rcl
mov
aaa
call
dec
inc
test
mov
ss
jl
push
xchg
sbb
lods
xchg
popf
hlt
into
mov
mov
lret
pop
mov
divb
out
stos
popa
nop
jb
cli
push
stos
sbb
mov
fldenv
orl
nop
out
lcall
in
xor
push
add
nop
inc
stos
inc
xchg
mov
mov
sbb
test
imulb
into
mov
inc
xchg
mov
roll
orl
mov
inc
out
mov
and
or
lock
adc
pop
adc
shr
adc
insb
shl
inc
nop
mov
xlat
repz
pop
mov
nop
inc
repz
cmpsb
les
and
push
cld
jo
mov
inc
fiaddl
pop
scas
mov
rol
shll
mov
fistpl
inc
adc
mov
test
in
jmp
sub
imul
mov
adc
mov
sub
add
stos
inc
shl
sub
dec
stos
leave
icebp
ror
test
dec
and
xlat
mov
popf
iret
mov
pop
push
cltd
popf
mov
into
lea
cmp
sahf
cmp
sbb
rol
loopne
stos
xchg
xor
jnp
inc
leave
enter
js
ljmp
mov
xchg
cmc
shrl
out
lods
mov
mov
dec
mov
xchg
push
fistl
test
push
ja
push
ss
shll
sbb
sbb
out
xchg
incb
adc
mov
pop
pop
lock
fyl2x
adc
mov
mov
dec
sub
shl
les
push
stos
mov
xchg
xchg
adc
cmp
mov
mul
lods
and
mov
jae
mov
divb
jns
sub
es
mov
xor
mov
fistps
mov
push
or
jne
jg
add
fadd
mov
push
adc
nop
in
and
test
enter
jo
icebp
pop
jge
pop
push
cmpsb
sti
xchg
inc
jo
mov
out
mov
inc
mov
pop
cmp
xchg
sbb
xor
push
not
push
xchg
lahf
mov
loope
push
mov
enter
repnz
cltd
mov
jle
and
push
lea
jge
dec
jae
push
push
andl
push
push
jns
sub
rcll
ret
out
push
mov
nop
xchg
lods
repnz
sbb
jmp
xor
hlt
into
je
xor
aam
jnp
scas
insl
push
xchg
je
add
fsts
pop
test
add
xor
mov
rcl
xor
lock
xchg
jl
add
xchg
mov
mov
int3
imul
ja
fcompl
jne
and
xchg
xchg
mov
ret
jge
jnp
aad
dec
mov
icebp
pop
jge
fiadds
xchg
nop
or
hlt
push
jp
mov
roll
or
out
aaa
movsb
or
adc
cld
scas
push
xorb
lds
sub
xor
dec
sbb
lsl
stos
push
pop
sbb
nop
inc
test
ja
jle
xchg
fstp
call
stos
pop
mov
cli
das
push
and
add
insl
jge
mov
lock
mov
mov
xchg
ret
stos
pop
sub
adc
sbb
jne
mov
xchg
enter
dec
daa
xchg
dec
xchg
jae
xor
testl
and
mov
mov
imul
into
inc
and
pop
lds
int3
inc
xchg
push
sub
dec
cmp
mov
push
lods
inc
mov
push
inc
mov
movsb
imul
pop
arpl
mov
or
mov
jae
js
shll
es
mov
or
sarb
jnp
xchg
addr16
jle
dec
xchg
loopne
lahf
imul
jmp
subl
addl
dec
mov
mov
jg
das
das
xchg
loopne
mov
sub
inc
insb
into
xchg
xchg
fcoms
inc
jno
xchg
pusha
xchg
fdiv
sbb
mov
fiadds
stc
mov
rcl
or
nop
scas
dec
jg
iret
daa
mov
fs
sbb
fwait
xor
lods
xchg
inc
pop
push
orps
movsb
add
pop
in
xchg
adc
add
add
inc
loop
inc
xchg
rorb
xchg
jmp
jo
lods
lret
dec
mov
sbb
popa
inc
dec
push
sub
jno
xchg
cmp
jecxz
adc
je
jno
fistpll
cmpsb
into
or
push
ret
push
into
rorl
xchg
mov
add
push
data16
xor
test
jle
test
loopew
dec
mov
push
fstps
lcall
adc
jge
pop
push
xchg
rclb
movsl
std
adc
vmovd
jmp
jecxz
idiv
dec
mov
pop
adc
push
xchg
sti
jl
jge
sub
add
sbb
sub
ss
rolb
jno
xlat
xor
shrl
leave
jge
adc
mov
rclb
ds
mov
push
arpl
fdiv
jg
in
cmc
out
inc
je
inc
mov
test
mov
jae
data16
shrb
dec
mov
jecxz
in
pop
cmp
push
xchg
in
jae
or
stos
in
mov
mov
mov
scas
enter
sahf
sub
pusha
int3
fiadds
xchg
sbb
movsb
outsb
push
push
leave
pop
popa
stc
ja
jg
movl
popa
mov
xchg
mov
iret
flds
leave
addr16
cli
mov
popf
mov
xor
mov
jae
dec
and
gs
arpl
mov
add
mov
xchg
daa
add
sub
mov
jno
orb
leave
out
divb
mov
jbe
lret
jge
scas
push
cmpsl
adc
lods
mov
pop
jp
gs
cmp
push
push
lea
mov
out
mov
push
mov
out
out
xchg
mov
ret
orb
mov
add
int3
fmull
mov
std
xchg
pop
imul
inc
mov
cmpsl
aaa
mov
jmp
or
sub
negl
mov
pop
jno
push
inc
pop
xor
shll
jo
cmpl
cmp
mov
add
ss
mov
jecxz
pop
mov
nop
mov
cmp
dec
or
xchg
cmp
popf
pop
inc
jae
mov
xor
mov
dec
xchg
push
and
sbb
cmp
popf
jl
fbstp
sbb
stc
xor
fmulp
xlat
cmp
xchg
add
lock
ds
and
xor
jle
lds
into
out
gs
mov
fs
push
loop
leave
pop
inc
add
mov
push
lret
cwtl
jmp
jmp
and
divb
mov
cmp
lods
imul
mov
push
aaa
loope
mov
jmp
mov
sub
dec
sti
jmp
js
jo
sub
pop
inc
xchg
popf
mov
mov
add
xor
in
xor
cld
movsb
mov
mov
xchg
sbb
lods
aaa
jmp
pop
fidivl
iret
fidivl
outsl
push
int
xor
mov
cltd
shrb
jmp
lret
jecxz
pushl
js
cs
jle
inc
or
pop
imul
push
repnz
xchg
fpatan
mov
sbb
dec
xor
sbb
outsb
sbb
outsb
gs
test
mov
pop
fildl
jnp
into
ljmp
push
xchg
xchg
add
popa
lods
cmc
ja
jns
scas
jno
mov
mov
pushf
dec
inc
push
xorb
add
mov
inc
mov
mov
std
sbb
in
jb
pop
js
xchg
sahf
or
ss
call
dec
mov
inc
mov
dec
pop
dec
jge
jmp
popf
push
adc
roll
roll
sbb
mov
popf
ret
into
add
aaa
aas
das
fstl
inc
sub
jmp
das
ret
or
push
rorl
out
pushf
xchg
xor
cs
xor
iret
ss
pop
pusha
dec
test
aaa
xor
pop
lea
notb
add
dec
add
clc
test
aaa
mov
nop
test
repz
mov
scas
inc
pusha
xchg
test
mov
je
test
dec
test
xchg
orl
mov
mov
mov
lret
sbb
and
xor
mov
ds
adc
scas
aas
sub
scas
pop
xchg
fidivrs
or
cltd
jge
xchg
jno
or
sbb
into
mov
stos
sti
stc
xchg
adc
jbe
and
aaa
mov
adc
mov
rorl
xchg
xchg
in
sbb
jbe
mov
ret
sub
xchg
arpl
xchg
xchg
stos
sbb
pop
pop
and
out
push
pop
lds
pop
std
mov
cmp
js
fwait
dec
lods
daa
inc
xorl
out
xchg
addr16
xchg
cmp
stos
mov
rorl
scas
in
push
dec
aaa
nop
scas
adc
cmp
pop
adc
fisubl
test
cld
icebp
xor
imul
dec
add
sarb
in
cli
iret
xchg
scas
and
int
cmpsb
jns
xchg
push
pop
mov
inc
mov
xor
xchg
add
jle
sbb
aaa
shufps
mov
fbstp
in
dec
das
inc
js
inc
fbld
mov
mov
mov
mov
cs
mov
xor
in
pop
adc
or
movsb
dec
dec
xchg
jae
mov
mov
and
add
add
jecxz
ljmp
loopne
dec
scas
or
das
aas
cmpsl
ja
sub
iret
mov
pop
ror
jle
or
leave
inc
inc
push
jle
sub
jnp
js
mov
cld
jae
or
fsub
and
ljmp
push
xchg
jp
or
mov
fadds
inc
jg
push
cmpsl
test
jbe
ud0
cmc
lcall
dec
je
jg
test
cwtl
ss
xchg
jle
imul
add
sub
pop
adc
mov
sub
and
dec
je
xor
dec
int3
int
gs
sub
loopne
outsl
int
push
imulb
inc
lods
lock
xchg
and
shll
fcmove
fwait
mov
and
les
mov
and
ja
and
fwait
sti
mov
test
pop
pop
loope
lods
dec
inc
mov
mov
popa
or
mov
or
mov
leave
xchg
sbb
xchg
mov
cwtl
pop
inc
cmpsl
divb
xor
push
repnz
xor
pop
lods
adc
adcl
addr16
jne
aas
std
inc
adc
xchg
xchg
mov
xor
cmc
mov
icebp
fisttpll
enter
xchg
sub
aaa
fists
lods
mov
push
inc
mov
push
ds
push
stos
mov
inc
sub
dec
pop
sahf
xchg
shlb
inc
cmpsl
shrb
ret
lods
jo
add
sbb
mov
or
outsb
xchg
iret
loope
js
lods
cmpsl
jg
push
lock
jno
in
dec
and
lods
jle
aaa
pop
xor
lea
shr
daa
imul
mov
jecxz
lret
jmp
scas
hlt
test
inc
mov
mov
push
adc
add
out
adc
lret
leave
cmpsb
jle
push
gs
ror
dec
jnp
push
mov
cmpsb
data16
int3
imul
push
adc
popfw
inc
push
adc
ss
pop
aas
dec
shlb
sub
adc
dec
sub
ret
mov
inc
nop
clc
out
test
inc
add
mov
ret
cmc
adc
cmpsb
or
daa
jo
jg
push
inc
test
bound
and
dec
ffreep
testl
in
push
inc
popf
pop
inc
test
pop
aad
cmp
cmc
lea
scas
out
jmp
ret
sahf
push
shlb
in
adc
sub
std
mov
cwtl
cmp
adc
adc
adc
cltd
mov
push
and
add
jecxz
jbe
mov
aas
and
xchg
jns
inc
and
or
in
js
push
into
inc
js
sbb
scas
ja
mov
xchg
fwait
iret
inc
sub
sti
incb
test
mov
inc
sub
push
xchg
dec
lret
out
cmc
cmp
push
lods
add
cmp
sbb
add
mov
nop
cmp
rolb
scas
lods
shr
cmpsl
jg
sub
std
lea
loopne
repnz
jo
mov
sub
shl
scas
dec
jns
or
repnz
and
pop
jne
sbb
js
push
int
jnp
imul
xor
pop
testl
std
sub
lret
push
sub
scas
lds
cmp
scas
adc
rorl
xor
inc
inc
neg
mov
sbb
push
outsb
push
add
xor
mov
fildll
dec
fistl
lea
bound
mov
inc
js
cmp
push
add
pusha
sub
jp
fdivl
mov
push
cld
fdiv
inc
je
push
and
outsb
xchg
in
dec
cld
addl
out
test
sahf
adc
addr16
mov
push
cmpsl
xor
mov
mov
iret
push
mov
insl
cltd
sub
fiaddl
jge
roll
in
pop
sbb
in
mov
aam
mov
sarb
lahf
mov
test
les
pop
jg
aad
sub
comiss
andb
ss
fs
dec
imul
inc
inc
push
xchg
lret
movsl
xchg
xor
mov
mov
mov
xchg
sahf
dec
into
push
dec
jmp
mov
jns
add
jmp
bound
jle
std
mov
popa
or
out
pop
adc
or
pop
jo
push
inc
xor
aas
pop
inc
outsl
test
fcoms
or
imul
addr16
call
mov
sbbl
adc
sub
fst
pop
mov
xorb
sbb
jnp
ret
cmp
push
mov
les
scas
xchg
aas
dec
in
pop
mov
scas
out
nop
mov
jp
rcr
dec
test
nop
add
daa
leave
fstl
jnp
sub
mov
nop
mov
mov
std
js
stc
scas
and
jmp
pop
sbb
test
aam
push
mov
out
pop
sub
push
cmc
adc
int
ja
sbb
or
mov
jg
out
push
sbb
adcl
and
mov
leave
push
xchg
shlb
push
fdiv
pusha
pop
jb
daa
xor
pop
sub
ds
scas
mov
inc
cli
cmp
sbb
ja
out
jne
inc
movsl
rorb
jne
out
daa
and
sub
cs
insb
mov
clc
stos
stos
fs
push
clc
xor
push
gs
aaa
out
out
clc
push
mov
sub
fdivrl
fstpl
bound
jnp
leave
mov
sarb
aad
pop
sbb
and
sub
mov
or
mov
jno
cmp
daa
sub
mov
mov
xchg
cli
fwait
addr16
adc
stos
loop
jns,pn
movl
pop
scas
aaa
and
mov
inc
mov
test
ds
into
xchg
push
pop
sub
sbb
popl
out
lahf
imul
fs
mov
push
test
xor
daa
push
pop
xchg
out
jne
mov
aad
das
inc
mov
stos
xchg
data16
sahf
adc
ret
es
pop
aaa
jp
xor
aaa
jo
ss
push
out
scas
into
sbb
repnz
insl
fcompl
or
in
pop
ja
fmul
cld
jmp
mov
or
mov
mov
sahf
mov
ret
sub
push
pop
stos
fwait
stos
ss
fidivl
mov
jne
hlt
orl
inc
orb
int
xchg
pop
or
in
ficomps
xor
sbb
loope
push
or
mov
xchg
sub
jns
mov
jbe
movsb
jecxz
lret
mov
and
dec
cli
iret
test
push
out
mov
lea
data16
stos
hlt
icebp
imull
test
outsb
push
shrb
xchg
shrb
xchg
nop
mov
push
sub
xlat
dec
test
nop
sbb
pop
daa
out
sti
cld
cmp
or
xchg
sbb
and
data16
std
js
xor
ret
adc
mov
mov
mov
mov
adc
add
mov
jecxz
lods
test
xorb
enter
nop
scas
addl
aad
jbe
push
pop
xchg
aas
pop
mov
mov
lret
adc
jno
pushf
xchg
jecxz
inc
pop
scas
and
movsl
test
out
mov
mov
or
cwtl
adcl
roll
lods
fwait
pop
push
xchg
dec
jmp
jo
pop
lret
daa
ja
sbb
jg
xor
aas
imul
jbe
push
pop
pop
cmp
cmc
jo
push
stos
aaa
xchg
notb
lds
idivl
das
call
scas
dec
mov
pop
inc
nop
inc
les
gs
repnz
and
and
jo
dec
pop
ficoms
push
push
xor
jmp
imul
sub
shrl
cli
mov
jae
push
inc
cmpsb
test
inc
or
mov
adc
adc
ja
mov
ret
es
cld
js
dec
push
dec
mov
cmp
mov
je
sub
add
pop
mov
pop
shrb
jge
mov
sub
xchg
or
nop
jg
data16
xor
leave
data16
xchg
aaa
push
mulb
sbb
and
pop
mov
ja
xchg
add
xchg
add
test
adcl
jmp
adc
add
dec
dec
cmp
mov
adc
lret
js
add
call
popf
add
jo
inc
imul
cmc
push
cmp
and
cmp
sahf
pop
pusha
jecxz
leave
push
js
mov
nop
movsl
mov
push
cmp
inc
mov
xlat
or
andl
adc
roll
xchg
ss
mov
mov
cmc
lret
rcrl
inc
dec
out
aam
sub
pop
or
mov
loop
pop
jp
imul
xlat
push
ss
and
pop
shll
arpl
rcll
and
sub
pop
cmp
nop
or
mov
mov
mov
lret
into
or
pop
mov
mov
js
sbb
rcll
xlat
push
xchg
pushf
pop
lods
mov
shl
test
repnz
and
outsl
fidivl
sub
icebp
xchg
jbe
mov
pop
mov
fmulp
mov
andb
xchg
les
mov
mov
inc
pop
pop
push
push
aad
iret
lret
lret
jbe
lods
jb
aam
inc
push
iret
nop
ja
lret
xchg
xor
scas
out
mov
mov
cs
or
arpl
hlt
ficoml
push
aas
cld
incb
pushf
addr16
clc
sarb
mov
les
aad
aaa
mov
les
push
mov
arpl
jno
mov
cmp
mov
cltd
mov
sahf
adc
sub
mov
mov
push
cli
or
cmp
adc
mov
push
cmp
xchg
mov
ss
xor
xchg
outsl
orl
ror
or
or
dec
cmc
pop
jge
or
faddp
aaa
rcr
xchg
popa
movsb
stos
adc
outsl
xchg
xchg
stos
fimull
out
pushf
mov
into
out
xchg
sbb
or
sbbl
shrl
int
loopne,pt
leave
adc
addr16
push
push
into
lahf
jnp
arpl
jnp
sub
daa
pop
leave
jg
es
sub
mov
push
cmp
xchg
stos
in
mov
and
jge
fyl2xp1
xlat
into
xor
jno
inc
sahf
mov
aad
cli
push
dec
mov
inc
mov
scas
or
iret
and
mov
sarl
mov
pop
xchg
shll
dec
sub
call
jae
xor
in
nop
adc
xorl
shrl
sbb
and
outsb
aam
mov
out
adc
jne
cmp
pusha
or
jbe
mov
xchg
xor
lahf
or
push
sub
pusha
pusha
popa
jnp
leave
jmp
stos
cmpsl
mov
je
orl
popf
dec
out
notl
sbb
shl
mov
pop
lock
aam
hlt
out
mov
aaa
idivb
lods
sbb
insb
pop
loope
sub
je
pushf
nop
jg
int3
inc
addr16
movsb
dec
scas
sub
mov
stos
mov
call
in
aas
loopne
fcomp
inc
lods
bound
lcall
pop
cltd
and
push
inc
cmp
xchg
ret
mov
adc
lods
jbe
fstl
test
sbb
pop
je
ja
js
mov
xchg
and
es
popf
cs
lret
or
mov
loope
fidivrl
mov
sbb
and
test
xchg
xchg
or
lods
mov
fbstp
push
mov
mov
cmp
inc
dec
xchg
icebp
jbe
iret
xor
stc
sub
fwait
nop
mov
shll
cwtl
call
mov
mov
sbb
jge
and
pop
mov
mov
mov
addr16
popf
mov
lea
sbb
mov
in
pusha
adc
dec
xor
repz
mov
add
fisubl
dec
mov
js
sub
nop
cmpsb
test
lret
outsb
xchg
pop
mov
mov
nop
scas
mov
push
mov
or
cmpsb
fdivl
xor
leave
mov
arpl
add
dec
push
addr16
lret
inc
test
mov
paddusw
push
nop
sub
ficompl
jl
mov
out
ficomps
mov
fsubr
xor
out
clc
or
pop
xchg
mov
aaa
ds
mov
pop
fistl
cld
lds
ret
add
testb
subl
mov
add
stc
ja
mov
push
push
pop
outsb
js
int3
mov
push
ret
out
jg
andl
out
loope
pushf
in
push
xchg
sbb
je
jecxz
mov
push
scas
int
xchg
xchg
dec
sub
es
jp
cmp
es
jg
jge
iret
xchg
aas
nop
dec
dec
decl
pop
mov
lret
inc
mov
lret
aam
loop
cmpsb
add
int3
sbb
inc
inc
lahf
mov
cld
add
outsl
ds
push
mov
aam
addb
cmpl
in
mov
xchg
testb
cs
xor
push
sbb
decb
js
repz
or
repz
out
jp
rorb
push
inc
in
sbb
pop
or
daa
pop
adc
fisubs
mov
pop
ror
cmc
push
in
sub
sbb
add
xor
ret
push
imul
cld
jnp
sbb
mov
mov
mov
aad
mov
mov
nop
in
out
divl
xor
adc
mov
lahf
jl
xor
xchg
push
mov
cwtl
push
mov
das
rcr
maxps
cmp
out
leave
pusha
mov
sarb
in
adc
out
fdivs
pop
movsl
xchg
inc
mov
testl
test
dec
ds
in
cld
pushf
inc
sub
gs
xchg
roll
aad
data16
jo
stos
push
xchg
lods
enter
int3
dec
sbb
in
mov
cs
fsincos
cmp
push
cmp
inc
xchg
dec
xchg
dec
mov
mov
jecxz
cmp
mov
pushf
mov
pop
pop
xchg
imul
fnstenv
xchg
xor
fcoml
push
mov
loop
adc
mov
jno
or
jmp
inc
xchg
call
xchg
int
fadd
xchg
mov
test
jl
and
movb
jno
cld
and
cmp
pop
lcall
movsl
popf
js
xchg
pusha
xchg
cmpsl
mov
pop
scas
ror
and
jbe
mov
pop
jg
xor
jae
divb
sti
jo
jmp
jl
pusha
and
sbb
mov
add
pop
lock
out
adc
mov
hlt
cmc
xlat
imul
push
addr16
std
xchg
pop
xchg
jecxz
sbb
push
insl
cmpsb
mov
sbb
movsl
mov
out
sarb
push
mov
push
aas
cld
mov
cmp
sub
rcll
mov
jecxz
call
jge
dec
mov
mov
sub
shrb
adc
sahf
adc
xchg
xchg
mov
fs
sbb
outsl
adc
xorb
stc
dec
jo
mov
inc
cmp
mov
scas
inc
xchg
iret
mov
aad
pop
fbstp
mov
scas
aas
mov
mov
xchg
cltd
outsl
int
or
lods
mov
xchg
stc
push
inc
stc
push
in
xchg
mov
stc
jge
scas
into
js
ss
xchg
inc
jge
cmpsl
mov
or
sbb
sub
aam
push
int3
cmp
iret
jecxz
test
aam
popa
jge
test
pop
dec
jno
dec
mov
xorl
mov
sub
adc
rolb
fmulp
call
stos
jmp
xchg
add
pusha
and
pop
push
xchg
popf
mov
daa
outsb
jnp
xor
mov
push
ds
mov
mov
push
int
jg
in
mov
out
jmp
hlt
movsl
push
push
dec
js
pop
mov
inc
sbb
pusha
sub
je
cmp
dec
sbb
xchg
rol
jmp
or
sub
dec
ljmp
sbb
or
jae
sub
fwait
inc
nop
int3
mov
pop
pop
mov
mull
sbb
sti
xchg
out
fisubrl
hlt
inc
std
imul
movl
andl
mov
sub
push
mov
mov
sarl
shrl
pop
jbe
enter
push
ja
adc
out
mov
lret
popf
enter
sub
jge
lods
sbb
xor
mov
cmpxchg
cmp
xor
lods
add
aas
leave
popf
iret
mov
ror
shll
daa
sbbl
lods
ja
sub
inc
popf
out
mov
jmp
out
mov
andl
xor
mov
xchg
movsb
push
in
lcall
mov
movsb
std
jbe
fnstenv
mov
mov
cmp
stc
inc
icebp
push
mov
xchg
cmpsl
mov
inc
out
stc
inc
jo
mull
xor
int
adc
iret
cmpsl
push
pop
test
repnz
imul
js
adc
push
loopne
test
test
cmpsl
icebp
adc
cmp
nop
pop
lret
cmp
add
pop
jmp
idivl
add
lods
push
sarl
out
leave
cwtl
xchg
mov
mov
lds
enter
jno
xchg
addb
movsl
xlat
xor
lret
jae
lret
xor
shl
xchg
jnp
into
js
dec
xor
aaa
adc
mov
stc
xchg
js
fwait
and
xchg
cmc
stos
lods
xchg
mov
sbb
or
xchg
outsb
shlb
lahf
pop
mov
test
inc
scas
or
rcr
pop
inc
and
lds
and
icebp
adc
popf
stos
into
adc
cmp
xor
fimuls
testb
cmp
stos
mov
mov
lret
movsl
sbb
dec
push
push
dec
cmp
dec
pop
pop
jge
jae
dec
inc
js
or
inc
adc
maxps
push
ss
jo
jnp
mov
addr16
pop
dec
sbb
pop
lahf
pop
or
add
pop
into
scas
cmp
sarb
and
cmp
xchg
ja
push
fadd
mov
aas
ret
lods
pop
das
sarb
jne
push
bound
pop
pop
pop
or
js
adcb
mov
inc
xchg
pop
dec
mov
push
sarb
out
and
out
aas
push
jnp
inc
bound
inc
or
push
push
es
mov
mov
adc
ret
adc
and
pusha
push
les
leave
outsb
mov
adc
mov
stos
fbstp
leave
mov
mov
pusha
mov
rcrl
imul
push
dec
mul
pop
push
jg
dec
shlb
mov
push
shrb
cmp
imul
mov
jno
imul
lahf
xchg
cmc
ror
lods
push
mov
popf
pop
cmp
pop
jne
mov
cmc
ss
mov
imulb
mov
arpl
dec
lods
nop
inc
mov
in
lods
push
inc
mov
in
lods
adc
imul
jg
mov
stos
enter
adc
xchg
mov
rorl
shll
inc
push
loop
ja
add
dec
mov
sub
jbe
imul
repz
cmp
push
mov
outsl
out
mov
sub
aaa
push
dec
push
xor
or
xchg
xchg
mov
pop
jno
push
aam
mov
mov
cmp
sbb
sub
push
mov
mov
jge
mov
insb
jge
jb
pusha
jb
pop
pop
xchg
movsl
add
hlt
lods
xor
icebp
mov
jno
xor
sbb
dec
lods
pop
inc
mov
in
lods
push
inc
mov
in
lods
xchg
inc
mov
in
mov
inc
dec
push
or
xchg
inc
cmc
xchg
xchg
adc
mov
xchg
aaa
inc
and
xor
mov
ja
frstor
xor
rcrl
int
loopne
fwait
mov
mov
sbb
mov
shll
mov
push
xchg
bswap
stos
and
out
rorb
bound
push
popf
std
or
dec
loop
shll
push
xchg
push
loopne
pop
test
sbb
loope
add
push
adc
xor
mov
pop
push
dec
lods
aaa
pop
mov
scas
dec
or
pop
cli
xor
pop
inc
pop
sub
push
movl
xlat
mov
clc
mov
js
cmp
outsb
mov
cmpsb
dec
jmp
dec
sub
push
xchg
dec
stos
cmpl
and
mov
pop
and
pusha
cmpsl
movsl
stos
sbb
inc
std
clc
addr16
cmpsb
ja
enter
nop
xchg
inc
daa
repz
cld
aad
sti
push
mov
dec
loop
lret
inc
mov
into
inc
mul
xlat
and
and
daa
push
jmp
sub
pop
and
mov
mov
or
mov
or
cmp
xchg
andb
mov
fidivs
nop
and
ss
pop
aad
test
cltd
cmpsl
xchg
pop
or
sub
lcall
icebp
push
push
push
outsb
stos
in
mov
andb
cmp
aad
dec
in
filds
xchg
pop
aaa
lret
push
mov
shrb
cmp
push
stos
push
jnp
pop
mov
adcb
sbb
movsb
andb
loop
mov
divb
out
stos
jnp
stc
movsl
push
xor
rcr
insl
add
outsb
ljmp
aaa
add
xor
cmp
jge
imul
jae
scas
adc
mov
lock
push
pop
mov
movsl
sbb
jo
pop
or
mov
sbb
in
jnp
jbe
pop
js
add
lea
mov
out
fnstsw
into
adc
pop
jge
sub
mov
ret
mov
inc
inc
std
add
adc
jbe
pusha
std
movsl
je
imul
xchg
in
fldt
add
out
jecxz
cmpsl
fnstsw
roll
sub
addr16
mov
arpl
ja
sbb
jge
xchg
inc
ja
mov
pop
js
sbb
xchg
aaa
addr16
inc
xchg
xor
xrelease
aam
sub
test
or
ret
xchg
sub
daa
js
pop
inc
inc
push
lret
sub
mov
gs
xchg
std
test
cmp
mov
mov
stc
sbb
imul
xor
popf
fcom
data16
xchg
lods
and
xchg
out
popf
jmp
adc
leave
mov
push
and
scas
das
xchg
mov
xchg
add
cmp
push
add
nop
and
jg
lock
popf
insl
out
imul
and
ja,pn
mov
testb
mov
pop
xchg
lods
mov
repz
mov
sahf
xor
jnp
push
ret
jnp
loopne
js
sahf
mov
jbe
mov
cs
cmp
mov
pushf
jle
data16
mov
xor
ret
insb
mov
jne
add
mov
mov
push
in
rolb
inc
sbb
sbb
aam
leave
nop
ljmp
push
outsl
shrb
and
mov
xchg
faddl
mov
push
dec
push
aad
nop
mov
pop
ror
shll
ss
push
aaa
mov
dec
dec
sub
mov
mov
lea
mov
dec
into
stos
cmpsb
and
nop
push
in
cmpxchg8b
lret
pop
les
jmp
push
jge
ret
and
ret
pop
mov
arpl
mov
xchg
repz
push
mov
dec
leave
mov
scas
xchg
aas
ss
lret
mov
js
mov
sahf
jmp
rcl
lret
add
push
cld
repz
in
pop
nop
ret
ss
in
jae
sub
mov
xchg
lea
sarl
inc
pop
push
in
aam
sbb
jle
bound
inc
rcll
es
mov
ret
adc
shll
jmp
fidivrs
aaa
mov
pop
inc
idivl
ret
test
and
sub
out
inc
jo
adc
sub
popf
lret
push
xor
cmpsb
xor
das
jg
or
ret
lahf
jle
sbb
pop
ds
aam
in
xor
push
adc
xchg
fiaddl
or
jle
notb
or
imul
lea
mov
rcl
xchg
mov
adc
mov
mov
nop
jno
inc
jle
rclb
seto
mov
test
jne
mov
daa
subl
repz
mov
fnstcw
loope
mov
inc
mov
dec
bound
popf
addr16
stos
fst
divb
ljmp
jge
mov
iret
cld
inc
mov
clc
out
repnz
xchg
std
mov
outsl
ljmp
push
aaa
mov
cmp
dec
pop
es
dec
js
pop
dec
mov
loop
in
inc
xchg
nop
dec
mov
xchg
icebp
dec
dec
cmp
dec
dec
adc
outsb
adc
xchg
jl
int
stos
aaa
sbb
jmp
aaa
test
rcll
push
xchg
inc
ds
popl
repz
notb
xor
sub
cmpsb
xchg
ret
rolb
hlt
daa
xchg
jl
mov
xor
mov
jmp
vmread
out
xor
test
cmp
rcl
orl
shl
mov
test
out
sbb
cs
mov
subb
add
jg
shrl
push
xchg
in
fsubrl
aad
push
add
imul
ror
mov
xor
ret
push
ret
pop
push
shrb
cmpsb
int
lods
sbb
adc
mov
push
aam
add
sub
lahf
imul
cltd
outsl
cld
dec
stos
inc
mov
mov
fidivrs
mov
and
out
or
out
ds
sbb
pop
push
rcrb
shlb
jle
adcl
push
adc
std
cmpsl
aad
divb
clc
pop
push
out
rorb
sub
pushf
gs
arpl
imul
and
fstpt
mov
lds
xchg
in
sub
sbb
push
movsl
sarl
addl
dec
mov
xor
shrl
jg
sbb
push
and
push
push
ficompl
pop
jns
aam
or
pop
mull
lret
enter
imulb
ficomps
mov
in
cld
xlat
jnp
notl
adc
inc
push
lret
sbb
enter
cwtl
sbb
cmpsb
jne
lock
sahf
cmpsl
mov
jae
and
push
lahf
mov
lcall
inc
jne
int
or
mov
popf
push
lahf
xor
lea
scas
sbb
mov
outsb
cs
in
xor
mov
bound
push
ds
shll
leave
out
dec
iret
orb
lea
push
imul
stos
enter
addr16
lods
jo
imul
movsl
lea
xchg
or
ret
sahf
xchg
add
stos
inc
jecxz
mov
jle
leavew
ljmp
push
lcall
loop
xor
imul
dec
lahf
cmp
mov
or
pop
xlat
fidivrs
push
scas
stos
pop
int3
movsl
fsubrs
lcall
mov
push
leave
xrelease
mov
jne
rclb
cmp
out
js
jnp
mov
pop
out
je
test
cmc
xchg
sub
push
rol
and
or
cs
scas
cwtl
jle
xchg
lret
lods
push
dec
sbb
cmp
ja
lea
xor
out
ds
mov
leave
dec
je
mov
inc
scas
pusha
adc
mov
inc
fidivrl
inc
cs
mov
xlat
js
fdivrl
xchg
in
sub
mov
xchg
mov
and
dec
lea
or
gs
xchg
dec
pop
ja
out
cmpsb
xchg
testb
setno
fwait
mov
xchg
cmp
les
sbb
jno
push
pop
inc
mov
sbb
cmpsl
push
popa
xchg
adc
aas
jg
add
lea
idivb
js
scas
push
jg
lea
xor
push
idivl
dec
add
push
scas
or
and
adc
fdivrs
adc
outsb
mov
mov
loop
jg
jo
in
mov
out
inc
push
imul
gs
hlt
lods
pop
in
mov
sbb
mov
mov
pop
not
loop
subb
xchg
ds
js
out
push
cmp
popf
inc
adc
int
out
iret
xor
sub
or
push
pop
lea
mov
fistpl
popa
shlb
fidivs
call
lods
add
push
mov
cld
aad
cmp
pop
pop
test
rcl
out
aad
std
cmp
dec
and
jl
adc
fwait
xchg
je
inc
int
loop
std
add
repz
lods
in
cmp
scas
pop
cmp
in
into
rorb
dec
push
jecxz
in
ljmp
dec
cld
xor
jne
mov
jmp
in
dec
sub
jne
jne
inc
add
rcrb
scas
stos
in
mov
cmp
lahf
nop
outsl
ljmp
sahf
sub
insb
bound
fisubs
jmp
popl
outsl
cmp
or
adc
xchg
in
leave
sahf
fbld
and
test
scas
or
sbb
cmp
jne
push
fnstenv
jns
movsb
mov
xchg
hlt
jno
test
pop
adc
mov
mov
movsl
out
xchg
sbb
pusha
inc
sub
xor
xchg
data16
xor
xchg
sti
mov
push
out
ret
lock
insb
ja
xor
mov
mov
push
add
sbbb
mov
xor
sbb
scas
mov
stos
mov
mov
jmp
sub
lea
mov
add
and
xchg
lock
lret
dec
push
in
repnz
dec
push
mulps
fisttpl
out
mov
iret
sbb
lods
inc
mov
fs
imul
dec
inc
adc
test
adc
shlb
dec
cmp
inc
xor
out
bound
stos
fcomip
jle
call
hlt
jnp
leave
xchg
cmp
xor
jecxz
sbb
std
notl
sub
jecxz
sti
jne
jns
xchg
addr16
pop
mov
sarb
mov
inc
fs
jp
mov
test
sbb
into
in
inc
or
js
jg
test
imull
mov
cld
les
jne
adc
mov
js
jge
sub
dec
sbb
dec
adc
mov
sub
mov
das
outsl
movsl
inc
pop
sub
xor
pop
mov
adc
xchg
xchg
lahf
lea
dec
popf
in
cmpsb
dec
push
aad
sub
jmp
ja
mov
xchg
ja
inc
aad
fimull
and
test
xlat
jecxz
inc
mov
pop
cmpsb
sti
lds
filds
scas
test
push
sub
jl
lret
add
scas
sub
add
or
scas
insl
jmp
sub
imul
gs
push
cmp
jg
int
jl
out
push
aad
loop
xlat
and
dec
adc
xchg
or
bound
inc
pop
adc
jecxz
mov
mov
inc
adc
and
xor
pop
sbb
mov
lret
mov
mov
mov
push
adc
or
rcl
lret
stos
jge
jmp
xor
inc
sub
push
sub
popf
dec
mov
cld
mov
nop
loopne
imul
in
addr16
push
fistpll
xchg
jno
popf
in
push
mov
inc
jbe
cmc
pop
xchg
mov
enter
leave
mov
mov
stos
fldl
shl
addr16
mov
scas
xor
or
xchg
outsl
mov
xor
mov
mov
ds
push
dec
sahf
mov
ficoms
ret
xchg
addr16
ret
vunpckhps
push
mov
mov
adc
pop
jae
xchg
jnp
mov
mov
jb
testb
sbb
push
addb
aaa
in
inc
nop
mov
data16
xchg
movsl
mov
xchg
rclb
mov
aad
pop
lahf
lret
js
daa
imul
ds
adc
mov
mov
inc
fidivl
inc
xor
lahf
sub
add
pop
push
icebp
xchg
fnstcw
mov
sbb
scas
add
xchg
and
nop
insl
test
negb
movsl
add
addr16
add
sbb
stos
mov
outsl
sbb
cmp
stos
dec
jge
testl
pop
sti
jae
mov
and
repz
mov
ljmp
push
fbstp
stos
shlb
insl
add
sub
mov
cmp
test
subb
pop
scas
imul
cltd
adc
mov
jb
fmuls
xchg
sti
jo
xor
lret
addr16
xor
das
cmpsl
in
test
shll
ficompl
mov
mov
notb
pop
lret
jne
rcll
daa
or
outsb
ret
adc
stos
or
ja
in
jo
mov
dec
mulb
push
ret
inc
into
iret
loope
cld
ja
hlt
xchg
les
sbb
js
xor
ret
mov
push
int
dec
iret
das
movsl
pop
mov
test
mov
or
sub
adc
and
movsb
ljmp
and
xchg
xchg
insl
jg
nop
xchg
xchg
or
lods
xchg
xchg
and
and
push
mov
fsubrl
ss
iret
nop
data16
jmp
inc
out
out
lds
pop
and
out
push
jle
fwait
mov
nop
daa
les
xchg
lahf
pop
inc
inc
jmp
int
add
lret
jge
imul
nop
jge
call
jmp
lahf
xor
dec
fcmovne
movl
dec
fstps
jecxz
std
fsubrs
cs
imul
jge
xchg
lret
xchg
rcll
mov
ret
inc
adc
ljmp
fistpl
int3
stos
mov
std
mov
add
loopne
lret
pop
ljmp
hlt
xchg
mov
fidivrl
aad
dec
aam
into
xchg
imul
imul
pop
jb
mov
repnz
xchg
jae
mov
repz
aam
xchg
out
dec
dec
rorb
jo
test
aam
push
aam
cmp
jl
xchg
arpl
movlps
aam
aam
out
vcvtdq2ps
xchg
hlt
movsb
aaa
pop
mov
mov
jbe
ss
cmc
mov
sbb
test
mov
xchg
xchg
repnz
test
xor
push
inc
test
push
mov
and
and
je
imul
mov
pop
scas
rorl
push
out
pushl
test
jmp
or
out
stc
outsl
adc
enter
xchg
push
insl
ja
vmread
rorb
push
jge
repnz
pop
fwait
mov
jne
inc
inc
or
test
push
shrb
jp
ret
in
popf
repz
sbb
mov
push
inc
outsb
adc
xor
jle
xchg
dec
sub
data16
ljmpw
push
addl
cmpsl
push
cmp
je
test
mov
scas
pop
push
orl
adc
test
jg
dec
sub
nop
or
inc
lahf
rcl
nop
jnp
gs
insb
addr16
or
xor
loopne
cwtl
rcrb
dec
xorl
inc
dec
out
stc
fidivrl
out
xor
pop
aas
push
adc
stos
sub
sub
push
out
mov
sub
mov
cmpsl
aaa
aad
scas
movsl
push
out
subl
shll
jecxz
mov
fcoml
insb
rcrl
push
jg
aaa
sub
outsb
add
push
pop
sub
je
outsl
and
flds
and
popa
jp
cmp
jbe
ja
testl
movsl
aas
pop
cmp
daa
imul
orl
aaa
out
into
out
mov
xor
in
fists
push
icebp
xchg
stos
mov
pop
or
xchg
and
xor
jge
sub
lcall
outsb
mov
cmp
pop
mov
inc
movsl
popf
xchg
mov
in
dec
icebp
lods
xchg
mov
cmp
mov
std
test
sbb
mov
xchg
xor
movsl
jle
xor
jecxz
push
add
daa
sub
into
data16
xorb
ret
or
mov
daa
fsubl
mov
xlat
fs
push
subl
pusha
and
test
sbb
add
imul
pusha
xchg
push
fnstsw
aad
int
sti
inc
mov
or
hlt
aad
mov
js
jle
sbb
jmp
inc
das
call
dec
jne
aas
nop
scas
mov
std
push
in
cmp
adc
into
mov
mov
and
push
shrb
movsb
mov
mov
mov
cmp
jmp
lret
dec
inc
inc
nop
sub
add
in
shll
adc
jg
aam
dec
jle
shll
loope
mov
pusha
nop
in
daa
mov
sub
hlt
pop
mov
sti
xchg
iret
inc
fdivrl
mov
test
sub
cmp
leave
push
or
leave
das
mov
mov
incl
sub
mov
xchg
xchg
push
insb
lea
or
fistps
test
lret
dec
ja
jge
and
mov
aas
and
mov
movb
push
loopne
and
pushl
stos
addr16
or
pop
mov
jecxz
test
stc
mov
loopne
push
int
movsl
ja
cmpsl
testb
or
add
push
mov
mov
gs
mov
mov
addr16
lcall
mov
nop
mov
imul
pop
xchg
inc
sub
imul
popf
cmc
jnp
scas
fmull
lret
dec
movl
sub
jl
mov
sub
adc
scas
lret
push
push
out
fcom
mov
and
sahf
inc
cmpsl
jg
fs
scas
mov
dec
inc
test
pop
stos
xchg
cmp
fbstp
pmulhuw
inc
mov
addr16
in
sub
cltd
scas
xchg
outsl
pop
push
push
test
xor
pop
pop
stc
dec
lret
mov
sbb
popa
ja
daa
xchg
sbb
lea
sub
mov
sarl
jge
jle
push
arpl
add
call
add
cltd
cs
mov
push
out
lds
xchg
mov
mov
inc
jnp
testb
adc
jge
xchg
aaa
inc
stos
or
ja
mov
xchg
aad
cmp
mov
imul
jle
push
dec
mov
cmp
outsb
test
xchg
mov
mov
testb
push
push
adc
xchg
pop
mov
js
dec
push
cmp
mov
xor
cmpsl
popf
dec
mov
out
lret
jl
popa
popl
sbb
into
xchg
aam
aas
sar
jl
idivl
sub
xchg
sub
dec
scas
in
inc
pop
arpl
mov
std
mov
sub
inc
pop
xchg
aad
jecxz
pop
js
lea
add
lds
std
popa
jmp
mov
pop
push
rcrl
loopne
xor
rcll
add
and
iret
popf
xchg
sbb
idiv
pop
stos
push
mov
aaa
iret
dec
dec
ja
lret
dec
das
xchg
cmpsl
inc
mov
inc
xchg
xchg
test
mov
iret
pop
lahf
pop
aad
test
pop
mov
aas
fildll
xlat
pop
ret
push
add
mov
push
push
inc
test
adcl
rol
nop
int
xor
in
sbb
pushf
jnp
mov
push
mov
addr16
jne
aas
mov
std
sahf
mov
mov
iret
data16
adc
mov
push
mov
add
pop
lahf
xor
pop
mov
into
and
jnp
mov
mov
mov
gs
xchg
xor
inc
ret
in
shlb
mov
mov
repz
nop
mov
add
shlb
aad
pop
mov
lea
adc
jg
loop
fildl
dec
cmpsl
dec
push
repnz
nop
xchg
nop
inc
stos
pop
scas
call
ljmp
lds
daa
mov
xchg
cmp
xchg
popw
fucomip
mov
sub
mov
xchg
push
scas
dec
adc
xor
xor
xchg
nop
pop
xchg
pop
js
popf
shll
cmp
lea
imul
dec
outsl
scas
cmp
sub
mov
sub
mov
or
jae
enterw
imul
cmpsb
aam
cmpsl
cmpsb
mov
jp
repz
iret
cmpsb
pop
mov
mov
dec
int
jge
stc
mov
fucomi
cltd
out
push
pop
lea
xchg
push
aad
leave
loopne
or
pop
sar
shrl
xor
cltd
pusha
or
mov
lahf
cmpl
and
sub
sub
rolb
out
xor
inc
insl
pop
cwtl
loope
xchg
push
mov
mov
sahf
and
mov
xchg
in
int3
sub
sub
pop
push
mov
and
sbb
ret
inc
pushf
pop
daa
sbb
xchg
aaa
mov
jp
enter
inc
and
sbb
stc
sub
mov
mov
or
or
mov
insb
mov
ds
scas
int3
js
pop
out
ja
mov
xchg
outsb
adc
aam
nop
jne
js
inc
mov
leave
aaa
xchg
xor
es
aad
mov
insb
push
mov
jne
or
cld
xchg
fisttpll
cmc
sahf
xor
cld
fnstenv
lahf
xor
dec
dec
mov
je
js
icebp
es
pop
adc
push
pop
jp
fimuls
cmpsb
cmpsl
push
mov
lock
lahf
aaa
int
sub
ds
int3
sbb
mov
sub
mov
cmpsl
scas
icebp
jae
mov
das
stos
push
sub
dec
inc
sub
push
or
cmc
or
test
cli
mov
movsb
pop
adc
jae
rolb
sub
lret
subl
out
loopne
dec
push
cmp
push
daa
xchg
aad
aad
addr16
pop
scas
mov
test
sub
xchg
ret
and
in
mov
fnstcw
js
dec
addr16
lahf
jp
mov
js
push
out
into
and
js
xchg
or
sbb
mov
jbe
daa
mov
mov
lret
mov
add
sbb
out
nop
shl
pop
aad
dec
adc
scas
adc
test
sbb
xor
cmpsb
adc
mov
push
or
nop
jo
out
mov
call
enter
popa
das
push
push
dec
into
iret
dec
mov
sbb
xchg
push
in
xor
xchg
mov
mul
mov
jae
orb
aaa
mov
push
popf
aaa
xchg
out
jae
scas
cmc
or
mov
cmp
and
push
inc
ljmp
pusha
mov
cs
xchg
add
int
dec
aad
dec
push
dec
inc
ja
pop
clc
cld
xor
jae
paddusb
ret
mov
and
pop
pop
scas
test
leave
fstpl
pmullw
mov
cs
and
into
roll
or
jecxz
or
shlb
mov
inc
pop
jmp
mov
xor
fidivs
mov
inc
xchg
sarb
adc
movb
sbbl
xchg
lahf
test
mov
and
xchg
les
or
aas
xor
in
mov
mov
or
pop
xchg
leave
les
iret
xor
insl
scas
imul
dec
pop
cmp
jmp
pop
aad
push
jle
movntps
add
and
leave
ss
leave
scas
jecxz
popa
sub
add
inc
sub
in
xchg
loope
aas
fistl
mov
notl
push
mov
and
mov
cmp
sub
mov
mov
mov
or
jnp
inc
dec
sbb
jg
pop
push
pusha
mov
cmc
sbb
int3
jbe
jb
jne
jge
icebp
popf
rclb
push
scas
jp
fidivs
out
cmp
aad
sbb
sbb
jns
div
call
movsl
jge
inc
repz
scas
iret
out
js
sar
outsb
bound
insl
aaa
mov
daa
dec
stos
sahf
ja
test
jae
call
or
pop
sbb
test
or
push
xor
cltd
inc
xchg
std
lret
inc
andl
adc
fimuls
cmpsl
sub
sub
xor
in
scas
in
movsl
daa
mov
xor
fnstcw
xor
mov
cmp
sub
xchg
out
loope
imul
jg
and
jnp
mov
scas
out
fistpl
mov
push
std
imul
xchg
adc
sar
ljmp
pop
mov
and
scas
push
mov
idivb
notl
jg
pop
mov
xchg
cmpsl
in
ja
xchg
in
mov
cmpsl
adc
js
pop
xchg
mov
popf
fldt
xor
push
in
push
mov
cmc
rcrl
lret
sub
mov
adc
and
cltd
leave
or
xor
adc
int3
dec
mov
and
push
ret
sbb
lcall
cmp
test
inc
out
jmp
cmp
mov
mov
inc
imul
jg
loopne
aam
and
mov
xchg
and
mov
cmp
dec
push
or
pusha
lret
out
nop
fistpl
jmp
out
cs
jecxz
shll
or
inc
das
push
subl
subb
push
mov
add
dec
cmpsb
ja
rcll
repz
ret
push
popl
sbb
jne
adc
sbb
pop
stos
test
outsb
ret
and
les
xchg
mov
arpl
adc
out
int3
mov
jno
xchg
add
into
or
scas
mov
dec
adc
in
pop
stos
xchg
daa
pushf
sub
orb
shl
jmp
sahf
adc
imul
orl
pop
pop
aaa
lret
int3
int
loope
roll
and
mov
js
mov
dec
bound
imul
lcall
xchg
rorb
jnp
sahf
xor
push
add
nop
std
roll
std
cltd
sbb
cmpsb
jnp
mov
inc
into
adc
aad
xchg
and
jmp
mov
xor
fstpl
outsb
mov
leave
pop
push
shrb
les
push
stos
nop
popa
mov
dec
and
fsts
into
stos
test
js
mov
pusha
jno
mov
aad
sub
dec
into
jbe
cs
js
into
ja
mov
stc
mov
jp
js
lret
adc
stos
sahf
xor
nop
push
jg
jae
jnp
popa
jmp
or
and
dec
adc
subl
repz
aam
pop
inc
cmp
jle
ss
add
push
scas
pop
lret
pop
lds
dec
test
mov
push
sub
inc
xchg
test
adc
adc
sbb
lods
inc
fsubl
dec
mov
inc
inc
xchg
fxch
adc
xor
push
mov
or
pop
mov
push
notl
sbbb
ret
daa
xor
mov
jo
mov
rcll
inc
xor
stos
addr16
ljmp
mov
cmp
pop
xchg
fistpll
out
xchg
jle
adc
mov
enter
andl
test
push
fdivr
push
lods
xchg
xchg
add
add
sti
mov
mov
xchg
out
and
scas
nop
rep
inc
mov
pop
sahf
cmp
xchg
lods
xor
cmp
imul
xor
es
push
xorl
fisubrs
mulb
aam
push
mov
or
rcl
mov
lods
iret
mov
js
ljmp
xchg
xchg
mov
pop
test
test
inc
int3
push
inc
aas
xchg
addr16
popa
cmc
mov
sbb
sub
sub
inc
test
nop
pop
call
jne
popa
test
nop
std
sub
mov
lock
aaa
adc
pop
jae
int3
test
pop
mov
sbb
push
jo
test
es
xchg
inc
insb
jmp
or
sbb
outsl
shll
inc
lds
push
and
mov
xchg
mov
shlb
xlat
aad
dec
fisttps
mov
mov
into
call
push
jne
addr16
repz
mov
pusha
dec
adc
push
js
adc
out
imul
icebp
xlat
dec
sbb
jge
rol
jnp
outsl
pop
jp
pop
loopne
out
push
jge
test
aam
lea
pop
dec
jae
out
jnp
popa
jl
cmc
xchg
sti
xor
mov
movsl
adcb
jne
fwait
aaa
seta
xor
fstl
ret
push
pop
in
inc
push
add
lret
and
mov
flds
in
int
jnp
fistl
adc
jecxz
lret
scas
and
ja
and
lods
xor
and
jge
ret
enter
add
clc
nop
leave
ja
dec
and
adc
dec
sarl
sub
nop
stos
mov
and
or
mov
and
fisubs
repnz
mov
rorb
adc
movsl
dec
adc
ds
push
repz
jle
vmaxss
les
inc
ror
ja
in
pop
stos
add
dec
aaa
or
mov
xor
xlat
mov
testb
mov
scas
fsts
jnp
add
xlat
mov
aas
jmp
aad
mov
sahf
xchg
and
jle
fwait
and
ja
outsb
xchg
lret
fcmovb
mov
push
addr16
pop
daa
adc
xchg
and
cmp
pop
test
ret
mov
shl
lret
cmpl
pop
loop
ss
jne
test
mov
xchg
push
imul
mov
scas
push
clc
es
into
pop
push
daa
movsl
mov
in
les
sahf
std
mov
sbb
xchg
lahf
popf
mov
int
push
sub
push
sbb
fisttpl
mov
jae
sub
std
jg
std
outsl
into
arpl
push
pop
jne
fdivrp
stos
sub
adc
push
insl
jne
dec
or
mov
aad
rcll
mov
mov
sub
add
js
mov
jb
sarl
push
dec
xor
sahf
mov
and
jmp
xor
pop
ja
filds
dec
int3
scas
cltd
roll
pop
sbbl
mov
std
scas
jecxz
cmp
inc
ret
jecxz
sbb
mov
and
test
rcll
js
aaa
cmp
std
xchg
notb
leave
cwtl
jmp
xor
iret
mov
add
push
outsl
fisttpll
idiv
lahf
cs
cmp
or
ret
or
leave
xor
or
inc
jge
adc
xor
mov
sub
lahf
and
js
cltd
push
jmp
sbb
or
jo
mov
cmp
jl
dec
xlat
rorl
sub
push
movsb
mov
fs
jle
roll
push
cmc
cmp
pusha
ja
fcoml
dec
mov
sbb
or
push
jns
loopne
mov
inc
mov
mov
cld
xchg
push
fists
mov
in
ret
jecxz
lret
jb
aas
push
lea
fmull
or
jns
nop/reserved
push
mov
mov
push
pop
sub
xchg
ret
jl
xor
mov
mov
jae
es
cwtl
sub
jg
ss
sarb
std
xor
repz
xchg
aaa
iret
shrl
adc
sbb
nop
xchg
sti
push
xchg
push
iret
std
jno
pop
inc
mov
das
jnp
rcrl
push
fdiv
les
inc
lock
dec
aam
in
arpl
ljmp
mov
clc
aad
loope
sub
pop
das
push
or
xor
mov
dec
jmp
imul
leave
enter
push
mov
xchg
out
rol
mov
repz
mov
mull
mov
cmp
in
push
les
push
gs
lds
mov
in
cmp
in
imul
pop
ret
addr16
lds
lahf
lods
sbbl
cmp
dec
inc
ret
lea
dec
push
ret
xor
ljmp
mov
push
mov
outsl
sub
aas
push
inc
pop
push
rcrl
mov
add
jg
cmp
loop
sub
movsl
push
movb
test
mov
jbe
shrb
mov
cs
mov
sub
sbb
and
dec
sarb
and
je
sahf
mov
mov
outsl
push
xchg
and
cmpsl
call
or
into
mov
inc
scas
jb
push
cld
xchg
repz
jle
and
ja
push
push
push
and
inc
cmc
in
jg
popf
push
adc
out
pop
in
jo
aas
jmp
aam
cld
push
or
adc
bound
loop
scas
adc
lcall
loopne
insl
aam
lods
rcr
cltd
xor
sub
std
mov
dec
add
sbb
dec
mov
mov
out
push
sub
in
cmp
pop
test
ja
out
cmpsl
push
dec
lock
faddl
mov
loope
insb
sbb
loope
sbb
cmp
not
lret
mov
push
insl
pop
mov
aad
shrb
dec
out
adc
add
aaa
xchg
sub
cmpsl
lcall
scas
lock
mov
lods
push
or
das
add
push
aaa
xchg
and
xchg
stos
pop
mov
test
idivl
into
outsb
je
push
cltd
sub
fistps
push
xchg
fcompl
enter
xchg
push
xlat
repnz
push
iret
aad
add
fmull
rol
push
jge
cmpsl
push
das
movsl
aad
into
sub
mov
ficoms
int
push
js
test
fidivrs
xchg
fldl
ss
setae
movsl
imul
inc
lock
mov
inc
dec
jge
sbb
into
shrb
jbe
mov
dec
pop
xchg
xorl
fidivrs
aaa
and
loope
pop
pop
mov
mov
test
sbb
ret
jbe
mov
nop
xchg
push
outsl
in
adc
imul
inc
aas
xchg
add
mov
xor
rcl
dec
js
cmp
pop
xchg
mov
mov
inc
fists
push
test
jnp
fucomp
cmp
data16
or
adc
mov
sbb
dec
mov
pop
iret
xchg
mov
outsl
push
cmp
aas
in
mov
das
cmpsb
test
mov
stos
enter
mov
mov
xchg
pop
mov
xchg
test
mov
xchg
nop
insb
mov
xor
xchg
divb
fcoms
imul
mov
xchg
push
shrl
addr16
push
inc
pop
sub
or
iret
fdivrl
mov
rorl
adc
aad
push
xor
jp
mov
fistps
iret
es
js
inc
int
cmp
movsb
ds
mov
enter
insl
mov
or
mov
jnp
jecxz
outsl
in
sar
ret
out
and
xor
int
dec
repnz
jne
sbb
xor
out
out
cltd
arpl
lahf
scas
and
cli
and
popa
ja
pop
pop
dec
testb
inc
adc
in
mov
jecxz
imul
cld
jae
mov
pop
xchg
loope
cmp
call
mov
lea
mov
sub
lock
cmp
mov
out
mov
xlat
pop
mov
lret
cmp
loopne
mov
push
aam
cmp
mov
mov
mov
push
imul
dec
scas
adc
mov
repz
push
push
in
xchg
jmp
and
xor
das
dec
lahf
cmc
mov
imul
notb
mov
iret
jnp
xor
mov
lret
leave
lret
sbb
push
fwait
gs
repz
mov
xchg
ljmp
push
cmpl
xlat
out
dec
nop
xchg
push
loop
outsb
sub
jg
or
rol
ja
std
cmpsw
lret
add
xchg
dec
sbb
movsl
mov
xor
sbb
mov
mov
call
stos
or
aam
pop
and
xchg
sbb
bound
sahf
sub
fbstp
rclb
jnp
ja
sbb
test
cmpsl
shll
xor
cmp
out
outsl
aad
mov
mov
cs
pminub
cmp
push
leave
push
daa
add
fistpll
in
repnz
mov
adcl
inc
aas
pop
popf
push
in
push
pop
popf
enter
shlb
pop
cmpsl
roll
lret
dec
int
push
push
or
scas
leave
sahf
les
popf
mov
lds
xchg
mov
dec
cmpsb
rcll
clc
aad
mov
js
inc
mov
insb
and
bound
lcall
adc
into
push
jl
inc
test
push
cmpsb
adc
inc
lret
movsb
lret
push
insl
add
cmc
push
cmc
pop
outsl
mov
xchg
addr16
in
movsl
cld
iret
xchg
xor
cmpsb
jbe
out
xchg
pop
jmp
cltd
adc
xchg
pop
imul
adc
or
mov
inc
fists
je
xor
xchg
push
push
in
mov
test
jb
xchg
push
xchg
or
into
push
ljmp
cmc
int3
repz
mov
xchg
ror
push
movnti
test
mov
push
add
imul
xchg
mov
out
idivb
adc
and
mov
sub
push
xor
test
jbe
adc
push
mov
xchg
shrb
adc
js
mov
aaa
xchg
loop
xchg
inc
mov
xor
sub
xor
sub
pop
pop
shr
mov
or
mov
sub
and
inc
xchg
sub
dec
imul
jnp
inc
jmp
sub
xchg
aaa
push
inc
cmp
add
mov
stos
jle
cmp
mov
or
jb
outsl
out
adc
inc
jmp
outsl
mov
into
xchg
testl
or
scas
and
mov
daa
mov
mov
sbb
jle
push
xchg
dec
std
push
sub
in
adc
in
fiaddl
mulb
ret
leave
mov
pop
stos
idivb
lods
nop
dec
mov
imul
inc
xchg
cld
xchg
hlt
and
filds
lret
stos
dec
aas
push
pop
push
ljmp
xor
aas
cltd
jb
jmp
jb
pop
aad
jno
and
mov
movsb
push
mov
addr16
mov
jecxz
xchg
repz
stc
xor
insl
es
push
or
or
adcl
and
xor
scas
xchg
push
iret
les
mov
jbe
fdivrl
enter
dec
test
push
test
fnstcw
in
xor
push
pop
sti
unpcklps
cmp
jg
xor
add
pop
call
adc
xchg
repz
cmp
sub
movsb
insl
cmpsl
insb
pop
out
lock
lcall
rorl
inc
cmp
les
jg
stos
aas
mov
js
inc
push
es
into
push
rcll
or
pop
mov
testl
movsl
test
xor
dec
popf
ds
push
and
out
negb
iret
sub
nop
outsl
xor
pop
mull
leave
loopne
lds
jp
das
and
ljmp
jle
aad
xor
mov
sub
or
stos
inc
push
push
push
push
add
inc
orl
ja
xchg
daa
and
test
push
in
dec
mov
sub
mov
iret
pop
and
mov
js
scas
mov
dec
pop
daa
xchg
icebp
inc
fdivl
fcmovbe
sbb
int3
xchg
adc
cmp
adc
out
pop
xchg
jbe
std
push
lods
stos
into
cmp
iret
data16
mov
daa
nop
pusha
sub
dec
xor
loop
aaa
mov
inc
nop
mov
in
int3
aam
push
in
in
or
push
mov
push
sub
not
add
mov
mov
fcmove
jnp
sub
mov
iret
test
sbb
test
leave
or
xchg
ss
xchg
insl
ja
stos
iret
cmpsb
ja
push
mov
xchg
lods
mov
pop
int
movsl
cmc
inc
in
mov
or
sbb
mov
outsb
dec
xlat
pushl
movsl
in
call
or
pop
xchg
es
in
add
sub
mov
ficoml
xor
pop
test
dec
jbe
and
sbb
cmp
hlt
aaa
popa
pop
pop
std
in
das
ret
daa
clc
test
scas
push
roll
mov
inc
pmullw
push
adc
mov
mov
or
popf
js
push
or
ret
mov
pop
sahf
rorb
or
mov
and
xchg
jle
loope
adc
xchg
push
mov
repz
out
xchg
lods
mov
add
test
scas
sbb
sub
div
ret
xorb
xor
sbb
fisttps
sarl
cmp
aam
loop
xchg
std
push
sub
data16
mov
scas
xchg
or
movsb
out
sbb
cmp
aaa
js
aaa
inc
dec
inc
pop
das
sbb
sub
and
dec
inc
jne
inc
dec
jbe
movsb
sub
jno
ja
sub
stc
hlt
mov
daa
popf
ss
xchg
aas
or
cmp
bound
and
mov
push
cmp
sbb
pop
push
dec
mov
xchg
inc
mov
out
push
mov
dec
js
adc
push
mov
push
leave
and
xor
pop
ffree
repnz
dec
mov
pop
and
aad
leave
arpl
adc
insl
inc
sub
nop
movsl
dec
jg
add
arpl
sub
enter
mov
sub
dec
mov
mov
call
mov
aaa
int
inc
xor
mov
mov
cmp
ja
bound
sbb
aaa
add
test
ja
and
push
cmp
shufps
js
test
test
push
push
ljmp
pop
addb
xchg
hlt
inc
mov
stos
dec
shll
dec
daa
jecxz
loopne
add
lds
adc
stc
aaa
fistl
adc
and
outsl
inc
cli
cmpb
xor
pusha
cs
dec
adc
sub
jl
outsl
sub
mov
clc
inc
loope
aaa
cmp
in
mov
push
roll
scas
sub
movsb
jnp
hlt
jp
mov
jno
out
cmp
js
movsb
stc
jp
rorb
push
push
stc
inc
lock
jg
mov
test
push
push
cmp
mov
stos
cltd
enter
sbb
mov
sub
mov
stos
pushf
and
inc
cmc
pop
or
push
or
cmp
mov
mov
mov
xchg
jae
nop
leave
scas
cs
add
dec
xor
sub
nop
mov
jp
push
into
aad
xchg
adc
ret
iret
lock
xor
rorb
les
sub
add
jmp
out
mov
mov
mov
jl
push
inc
pop
cmpb
pop
mov
push
xor
bound
repnz
pop
and
aaa
loope
and
loop
loope
shrb
jnp
pop
std
pop
test
mov
sub
lret
mov
lock
shlb
mov
pop
lahf
call
bound
into
fs
cmpsl
or
mov
repz
in
ds
aad
pusha
inc
loope
shll
mov
jno
movl
fistpll
mov
negl
mov
jg
enter
mov
push
add
and
adc
xchg
mov
iret
sbb
sub
adc
out
paddsw
out
mov
das
aad
ja
adc
lods
xchg
test
imul
js
sub
xchg
or
stos
push
pop
loopne
add
xor
das
jnp
sbb
insb
lods
ret
call
add
cmpsl
lock
hlt
into
call
cltd
cmp
leave
jo
jae
js
inc
mov
push
xor
adc
jnp
mov
sub
enter
mov
cmp
aaa
push
mov
jg
fisttps
lods
aaa
sub
mov
call
lods
gs
inc
insb
loope
fwait
mov
fidivs
and
inc
lds
mov
add
mov
ja
dec
daa
shlb
inc
jnp
cmc
push
aaa
mov
xor
xchg
pop
js
lcall
js
fs
je
sub
aam
xor
lods
adc
aad
das
jae
mov
dec
push
lods
js
pop
push
xchg
pop
out
xchg
sbb
xorl
sub
xchg
ljmp
push
inc
sub
or
aad
sub
std
add
outsb
xchg
jle
xor
xchg
ljmp
test
cld
push
mov
shrd
test
shr
and
mov
mov
stc
add
mov
fdivrs
nop
mov
leave
cmpsl
mov
xor
into
sub
lahf
scas
test
push
xor
xchg
push
loope
pop
xchg
sbb
push
sahf
nop
lods
shrb
mov
cmp
pop
mov
cmpsb
pop
dec
xchg
dec
scas
mov
jbe
xor
ljmp
lret
xchg
insl
cli
cmpsl
push
daa
pushf
xchg
or
fbstp
cli
jl
or
pop
mov
push
inc
pop
scas
loop
and
sbb
test
aas
cld
cltd
addr16
or
and
inc
xor
js
dec
xor
rorl
pushf
movb
sub
stc
mov
adc
jge
mov
pushf
jmp
push
gs
add
pop
arpl
push
push
lock
mov
ror
mov
addl
mov
add
pop
nop
mov
ds
faddp
leave
mov
jle
scas
aam
out
nop
xchg
das
cmpsl
mov
aad
mov
xchg
mov
jg
jmp
popf
mov
call
cmpsl
pop
or
mov
push
das
lods
xchg
adc
xchg
out
leave
pop
xor
sbb
jo
addr16
xchg
ja
bswap
sub
popf
mov
dec
sub
pushf
adc
xchg
ja
pop
jns
fidivl
lods
repz
notl
fcom
cmp
mov
xor
outsl
cmp
mov
pop
loope
mov
xchg
scas
popa
rcr
push
dec
cmp
or
or
mov
out
testb
mov
push
push
xchg
pop
movsb
jmp
mov
dec
call
nop
aas
in
inc
je
sub
jl
cmp
in
jo
dec
fs
and
pop
push
out
jo
pushl
pop
mov
mov
fmul
lcall
addl
lea
sarl
iret
ja
lahf
push
addr16
mov
sbb
mov
cmpsl
stos
into
daa
je
xchg
mov
lahf
lret
lahf
jae
daa
mov
ss
lahf
dec
mov
cmc
and
jp
pop
dec
loop
sbb
fisubrs
xor
mov
int
pop
cmp
mov
cwtl
inc
sbb
adc
and
xor
decl
pop
gs
inc
lcall
das
enter
adc
mov
mov
or
mov
std
push
stos
push
daa
movsl
inc
ja
iret
adc
hlt
xchg
and
xor
js
outsb
cmp
loopne
outsb
mov
adc
xchg
and
or
xchg
xor
add
call
stos
adc
add
dec
mov
testl
call
dec
movsl
pop
cmp
pop
push
mov
imul
in
xchg
cli
out
ja
pushl
hlt
movsb
je
jle
cmp
stos
push
cmp
in
mov
mov
movsb
mov
push
aam
jmp
fidivrs
mov
dec
in
dec
pop
lret
out
insb
inc
notb
loopne
aas
insl
inc
pop
xchg
xchg
sub
sbb
or
je
sub
push
dec
jb
mov
inc
subl
hlt
test
mov
pop
inc
pop
jo
cld
adc
stos
sbb
mov
es
mov
and
mov
loop
mov
mov
sub
fcmovb
mov
sbb
pop
out
stc
sbb
pushf
push
mov
leave
push
mov
mov
in
and
mov
js
pusha
push
pop
mov
mov
les
shll
fistpl
nop
sub
pushf
mov
into
lea
mov
xchg
add
adc
bound
jecxz
imul
cli
jns
push
test
pushf
push
iret
fwait
addr16
dec
jne
cmc
cmpsl
repz
mov
jmp
jno
popa
sbb
fsts
jge
scas
push
scas
out
mov
shll
adc
mov
inc
out
enter
jmp
loop
mov
mov
xor
cmc
inc
xchg
fists
adc
in
fildl
jno
leave
lock
or
ret
lahf
mov
mov
in
fwait
insl
xchg
add
lea
ss
sarl
sub
movsb
xor
and
ret
aad
sbb
push
sbb
arpl
and
push
ja
dec
lods
ja
jg
rorl
push
cmpsl
aam
pop
xchg
gs
mov
push
mov
mov
aas
lea
loope
js
cld
fdivs
repnz
stos
daa
dec
shlb
jnp
imul
addr16
mov
scas
aad
pop
fsts
lret
pusha
out
lds
pop
sahf
mov
dec
cli
add
out
xchg
jbe
jne
clc
inc
rcrb
daa
shll
mov
insl
cmpb
lret
insb
pop
popf
dec
repnz
xchg
xchg
outsb
push
in
dec
inc
cli
inc
out
push
adc
inc
jnp
mov
testl
int3
and
out
push
xor
js
psubb
mov
sbb
jae
cmp
das
xor
aaa
nop
popf
inc
out
imul
mov
ja
ret
push
sub
ret
repnz
in
in
nop
mov
dec
stos
lahf
nop
nop
add
fwait
in
scas
jno
in
ret
jmp
mov
mov
mov
push
xchg
call
push
fdivrl
sbb
sub
push
shrl
cld
xchg
aad
out
or
push
jle
mov
ds
pop
movsb
jnp
hlt
outsb
dec
mov
cltd
into
push
xchg
int
add
xchg
push
jno
sub
stos
sbb
nop
xchg
out
dec
bnd
xchg
jbe
xchg
call
and
mov
js
push
mov
mulb
mov
ljmp
and
and
idiv
imul
jmp
sar
xchg
loope
ds
push
or
ret
xchg
div
sti
cmpl
adc
cmpl
repnz
cmpsl
orl
out
es
bound
in
pop
out
inc
xor
shll
jns
adc
push
test
dec
jns
daa
mov
jecxz
mov
scas
adc
sub
and
cmpsb
push
stos
jecxz
dec
clc
fisttpl
inc
mov
pop
mov
mov
addr16
scas
xor
loopne
mov
rcll
push
pop
test
scas
pop
js
pop
mov
xor
pushf
in
lahf
cmpsl
aam
repz
outsb
nop
outsl
fnstsw
int
jle
cmp
outsb
pop
jp
rolb
adc
xor
movsl
xchg
movsb
lods
idivb
fldenv
xchg
and
inc
inc
sub
dec
dec
add
scas
aaa
and
mov
fwait
xchg
pop
mov
aas
clc
mov
mov
jne
cli
lret
jecxz
divb
mov
out
stos
fs
adc
cmp
imul
lds
repz
push
push
mov
cmc
je
push
mov
dec
push
ja
lret
pop
push
and
imul
in
adc
jae
test
popf
push
aaa
cmpsb
stos
mov
xchg
xchg
push
addr16
xchg
push
mov
nop
pop
out
insl
fisubs
dec
daa
movsl
enter
popf
adc
adc
subl
mov
jbe
and
mov
subl
push
stos
lret
frstor
push
adc
into
jae
testl
jns
ret
pop
jns
mov
es
in
mov
vsqrtsd
pop
aaa
adc
jae
xor
js
lods
jno
in
mov
jno
and
lods
mov
popf
daa
movsl
mov
decl
jmp
inc
adc
jae
push
jbe
ja
pop
adc
aaa
imul
mov
mov
fwait
xor
adc
push
stos
lret
fstpl
push
adc
sahf
jae
cmp
add
ret
pop
popa
inc
mov
es
in
mov
lds
push
mov
sahf
fstl
jae
in
cmp
jbe
fidivl
push
std
add
sahf
xchg
out
mov
sub
mov
xlat
ds
imul
or
test
adc
push
sarl
ret
clc
test
out
adc
mov
xchg
mov
ja
enter
call
stos
push
call
push
lock
mov
cmc
adc
mov
pop
push
ss
jmp
pop
push
rorl
sub
xlat
push
and
xchg
repz
xchg
jecxz
in
mov
mov
std
push
outsb
popf
out
addr16
xchg
or
add
mov
mov
pop
mov
fistps
das
stos
cmp
cs
adc
push
mov
add
scas
nop
jg
inc
rcll
gs
out
mov
sbb
xchg
lahf
fildll
dec
xchg
hlt
xchg
data16
insl
orl
lds
jbe
and
mov
movb
adc
xchg
lret
mov
sbb
pop
or
xchg
jmp
xchg
stos
pop
fnstsw
jns
mov
mov
fsubr
fs
xchg
shrl
xchg
or
add
rorb
call
sbb
mov
sub
xchg
cmpsb
and
add
filds
mov
fisttpll
popf
ror
scas
inc
mov
mov
int3
or
lea
inc
dec
js
and
mov
outsl
hlt
or
iret
mov
mov
movsb
inc
or
mov
xor
lret
ss
ret
out
cmp
inc
push
adc
jno
ds
pop
iret
aaa
sbb
in
xor
pushf
add
pop
mov
ss
fcomip
imul
js
mov
testb
xchg
adc
add
dec
ds
or
mov
subl
add
or
mov
jg
sub
or
or
fsubl
inc
gs
xchg
add
loope
sbb
xor
lret
jecxz
es
jle
in
adc
mov
les
sbbb
loope
sub
dec
sub
jns
sub
lods
stc
push
add
dec
in
nop
arpl
ja
js
or
fisubl
ror
bswap
sbb
xor
fs
and
push
xor
xor
add
and
sbb
sub
in
jecxz
xchg
mov
or
dec
imul
idivb
ss
subl
sub
inc
and
daa
in
mov
js
loop
mov
pop
add
push
fcoml
es
test
pop
outsb
xor
dec
fists
cmp
daa
cmp
popa
mov
fsubs
lds
push
and
xor
and
add
xchg
and
jnp
scas
test
inc
ret
rorb
gs
aaa
nop
push
cmp
cmp
mov
lahf
xor
sub
inc
mov
movsb
pop
in
sub
mov
xor
sbb
prefetchnta
sub
sbb
loopne
lock
or
sub
xor
fistps
test
test
or
jno
sbb
inc
mov
sub
adc
dec
xor
mov
dec
scas
adc
out
mov
cli
out
or
sub
xor
sub
pop
inc
jg
inc
out
mov
mov
cmp
out
ja
xchg
mov
cmp
push
fmuls
sub
push
repnz
lods
mov
jle
idivl
daa
xchg
addb
mov
add
dec
repz
in
clc
jne
negb
imul
nop
mov
xor
pop
daa
movsl
inc
clc
js
jg
call
notl
mov
or
inc
repz
adc
pop
loopne
out
sub
cmp
imul
ja
mov
insl
dec
add
xchg
movsl
mov
lea
push
aas
and
jo
mov
sub
shr
push
in
call
adc
iret
lods
aad
clc
jns
cmp
dec
nop
inc
out
add
jns
push
sahf
test
fbld
sub
aas
outsb
in
inc
push
dec
jmp
push
outsl
rcll
mov
call
mov
pop
dec
jno
sbb
cmc
leave
adc
xchg
mov
decl
sbb
inc
fdivrl
pop
jne
pop
jnp
int
xor
out
fwait
mov
pop
and
mov
pusha
dec
adc
lahf
xchg
xor
repnz
xlat
mov
or
andb
stc
mov
lods
test
add
inc
and
add
mov
pop
mov
mov
sbb
mov
neg
or
outsl
pop
xchg
xchg
xchg
fsubrp
push
mov
adc
jae
mov
xchg
pop
popf
mov
fdivs
loopne
or
dec
je
enter
and
sahf
sub
movsl
inc
movsb
sbb
xor
stos
and
inc
cmp
fcmovbe
pop
sbb
cmp
out
in
mov
jbe
mov
mov
andb
jmp
jae
mov
scas
and
cmp
jmp
rcll
mov
mov
mov
leave
gs
jl
fs
lea
jl
adc
jg
sub
push
add
dec
shll
cmp
dec
nop
xchg
stos
adc
add
iret
ja
lods
mov
enter
jo
push
ss
pop
std
int
aaa
add
sub
shl
mov
jge
add
sub
les
sub
daa
loope
outsl
push
pop
inc
sti
push
adc
aad
fmul
adc
jnp
mov
nop
sbb
jo
nop
mov
sub
mov
lahf
push
inc
push
or
mov
imul
aaa
dec
inc
lods
loope
mov
push
f2xm1
mov
imull
mov
ret
push
mov
pushf
std
push
pop
pop
xor
repz
push
fdivrs
push
pop
xor
mov
sbb
dec
imul
jne
mov
jecxz
inc
and
ds
push
inc
in
iret
sbb
jns
imull
add
mov
in
daa
xor
xor
js
les
sub
and
jne
cmp
mov
mov
scas
aaa
mov
out
rorl
dec
out
scas
fisttpl
mov
xor
test
cmp
sub
sub
bound
je
sbb
into
out
into
mov
aad
ss
add
inc
push
xchg
inc
lret
mov
push
adc
mov
loopne
dec
gs
add
xor
shlb
cmpsb
inc
adc
fisubs
rcl
add
mov
and
lcall
xor
test
adc
imul
int
js
push
gs
mov
jo
aas
out
cmpsl
dec
ja
and
lahf
and
scas
xchg
iret
maxps
mov
xchg
stc
inc
fxch
mov
mov
nop
sbb
rcll
xor
sub
in
jecxz
cmpsb
sbb
popf
inc
imul
xchg
mov
stos
ja
mov
add
js
rcr
cs
stos
pop
mov
int
sub
ss
sbb
sbb
add
pop
jbe
mov
mov
negb
and
xchg
dec
push
in
xchg
fstl
jbe
ficoms
repz
daa
nop
shr
push
xor
es
andl
movsl
mov
or
popf
mov
out
lea
push
inc
or
lahf
adc
xor
rcll
or
xor
add
movsl
fstpt
popa
push
aad
daa
mov
std
ja
lret
shrb
xchg
jmp
add
sarb
push
mov
jle
out
jne
cmp
das
cmp
ret
je
dec
xor
xchg
lods
nop
movsb
push
popf
jnp
pop
mov
sbb
xor
mov
mov
ljmp
xchg
mov
lret
rolb
lret
fstl
fstpt
mov
lea
fdivrl
stos
mov
addr16
call
dec
iret
sub
shrb
cmp
jae
xchg
mov
out
inc
mov
adc
cmp
flds
sub
aas
adc
aaa
jl
jnp
push
das
aam
fstpt
xchg
pop
and
push
pop
mov
jnp
jo
rcrl
jle
mov
lret
sahf
push
aaa
out
into
cs
mov
xor
jns
aaa
inc
push
stos
pop
sbb
leave
jmp
ret
fmuls
stos
in
xchg
jne
xchg
fdivs
mov
dec
mov
inc
inc
jnp
shlb
pop
jbe
call
jecxz
mov
stos
loope
jnp
lahf
mov
xchg
and
pop
stos
aam
sub
nop
sbb
adc
jecxz
ret
ss
fildl
xchg
test
movsb
stos
insl
les
xchg
xchg
mov
jecxz
or
jmp
imul
lods
popf
mov
jo
das
js
pop
xchg
or
push
cmp
or
adc
mov
jecxz
jle
push
xchg
adc
sahf
mov
mov
mov
dec
dec
andb
mov
out
aas
push
lods
ja
dec
enter
lock
mov
xchg
sti
iret
dec
mov
mov
mov
ja
incl
mov
push
dec
sbb
sub
jne
cwtl
push
inc
jmp
and
flds
call
js
mov
xchg
or
sub
jge
pop
mov
xchg
fcoms
imull
idivl
rorl
aam
or
hlt
mov
push
js
gs
frstor
mov
popf
push
mov
push
lret
sub
addr16
daa
inc
rclb
lahf
stos
and
sbb
dec
lahf
add
add
testl
movsb
test
jp
mulb
mov
flds
jg
data16
xchg
bound
or
sub
adc
xchg
rcrl
sbb
leave
addr16
pop
mov
jne
pop
ja
mov
jge
shrb
mov
leave
jle
sbb
fistl
sbb
pop
xchg
mov
mov
leave
or
mov
in
inc
sub
out
loop
lods
out
add
sub
xor
or
push
xchg
into
out
notl
nop
mov
sub
fld
push
adc
subb
ret
xor
cmp
movl
jns
cmpsb
ds
inc
scas
jns
sub
int
xchg
movd
dec
cmc
mov
mul
lock
lret
fbstp
push
xor
out
dec
rcl
xor
or
aaa
add
jae
mov
mov
leave
xchg
movsb
xor
xchg
hlt
inc
push
adcl
sbb
mul
jg
push
fdivl
mov
jo
mov
sub
dec
int3
shufps
mov
mov
js
inc
lds
adc
pop
or
movb
xor
push
jmp
jecxz
jle
ja
stc
imul
inc
and
int3
sarb
loopne
sub
inc
sbb
jl
add
and
nop
adc
inc
data16
rclb
fcomi
push
rcll
mov
mov
jge
pushl
imul
pop
stos
dec
sbb
js
xor
pop
dec
gs
inc
cli
inc
add
outsb
xor
and
lret
mov
adc
decb
fpatan
adc
std
sbb
and
outsl
mov
jmp
notb
push
cmp
clc
xchg
ds
aam
inc
xchg
push
inc
imul
mov
out
shlb
shlb
clc
cmp
out
fdivs
xor
nop
xor
jnp
xchg
repnz
shll
sub
test
imul
mov
iret
imul
sbb
in
dec
xchg
sbb
xor
test
xor
push
aad
dec
jecxz
in
insb
jle
fnsave
jl
aad
xchg
inc
bound
add
push
or
push
cmp
push
cmp
mov
lods
mov
scas
mov
lahf
test
or
sub
push
jle
dec
dec
lods
pop
inc
push
xchg
bound
pop
push
mov
xchg
in
xchg
aaa
lods
dec
jg
inc
je
sub
push
lods
aaa
add
call
mov
inc
mov
xchg
out
mov
sub
sub
loop
scas
push
notl
pop
outsl
addr16
comiss
lret
mov
xchg
lock
fsubp
imul
mov
pop
xchg
adc
mov
idivl
push
push
lret
add
aaa
js
cmp
mov
sbb
out
lcall
out
mov
leave
fstpl
mov
mov
jae
mov
add
aad
lea
mov
mov
mov
imul
sub
divl
out
push
and
cmc
in
ja
mov
test
xor
test
xchg
sub
ret
cmp
stc
lret
jnp
dec
imul
mov
ror
hlt
adc
xchg
ret
sti
fisttpll
js
aaa
xchg
into
arpl
repnz
addr16
mov
cmp
or
xor
jp
out
hlt
inc
std
lods
dec
dec
insb
rcrl
sbb
sub
cli
jle
sub
scas
leave
pushl
jge
in
loopne
jnp
push
imul
and
scas
and
add
popa
stos
aaa
dec
mul
rclb
mov
sarl
pusha
sbb
xchg
xor
scas
jne
mov
cmpsb
movb
adc
xchg
fimuls
mov
pop
sbb
leave
ja
lea
pop
push
lods
mov
mov
sub
lcall
fbstp
aam
mov
jmp
lods
inc
fsub
push
je
ja
shl
aam
test
rorb
insl
pop
out
leave
leave
scas
shr
pop
mov
addr16
inc
push
mov
call
add
pushf
int
movsl
and
orb
out
inc
push
cmpsl
aas
mov
leave
lea
data16
xchg
ret
lock
push
outsl
xor
nop
or
leave
enter
ja
mov
aad
xchg
xchg
ds
push
xchg
push
pop
pop
cmp
mov
movsl
add
mov
rorl
rcll
sub
data16
pop
mov
sahf
imul
aas
aaa
adc
nop
ss
xchg
pop
jne
mov
das
imul
mov
fwait
mov
jle
jne
dec
jo
stos
xchg
aaa
push
pop
ss
sahf
add
mov
outsl
scas
push
std
scas
mov
xchg
aaa
mov
lods
mov
mov
out
lods
out
mov
aaa
jge
jne
pushf
imul
pop
daa
mov
leave
or
jmp
ljmp
mov
mov
js
insb
rcrb
xchg
cmp
lret
add
xchg
cmp
jns
cwtl
and
jmp
aaa
jne
idivl
inc
aam
dec
sub
jnp
out
lret
inc
scas
push
js
and
sub
std
sti
mov
sub
cmpsb
lods
outsl
dec
notb
pusha
daa
addr16
push
sahf
icebp
or
inc
xor
push
in
add
or
iret
push
mov
fnstenv
pop
jle
cmp
or
add
xchg
sub
jae
sahf
xor
sub
xchg
mov
call
sub
xchg
pop
add
mov
insl
dec
mov
jle
xor
push
inc
push
fcoml
pop
jg
xor
pop
add
adc
int3
js
lea
aaa
popa
sub
pushf
mov
fcoml
enter
jnp
mov
xchg
add
int3
mov
nop
fisttpll
mov
jnp
push
ror
mov
fildll
pop
mov
sarb
shll
jo
out
hlt
xchg
mov
out
sub
push
push
mov
into
data16
andl
jbe
and
fidivrl
mov
or
outsb
xchg
mov
cmpsl
sti
add
add
std
mov
push
push
adc
and
dec
dec
icebp
ja
loop
mov
push
cmpsl
out
jg
mov
shr
adc
or
popa
xchg
pop
std
jg
push
fsts
pop
mov
outsl
imul
into
scas
sub
icebp
cli
bound
push
sbb
rorl
mov
xor
fnstcw
std
sub
inc
dec
movsl
iret
ret
aas
inc
idivl
cli
lgs
in
pop
std
jne
push
call
mov
mov
ss
adc
test
leave
in
mov
xor
mov
jmp
push
push
jae
xor
scas
pop
cli
dec
mov
in
jg
xchg
mov
mov
insl
movsl
lds
nop
pop
mov
mov
push
xor
test
ret
sub
dec
ret
sbb
rclb
mov
lods
mov
test
and
jmp
rol
mov
and
sbb
push
sub
movsl
dec
popw
and
mov
lea
dec
ret
add
mov
xchg
cmpsl
mov
fdivrp
int
leave
cwtl
push
call
into
push
push
ror
jae
dec
dec
xor
sub
leave
push
xlat
std
add
cmc
lods
popf
push
xchg
fwait
cmp
xchg
jo
cs
stc
imul
pop
cltd
aad
push
sub
rorl
cltd
rcll
sbb
jb
pop
cltd
jnp
aad
ja
jge
xchg
and
lock
adc
movsb
test
inc
rcl
push
mov
pushf
mov
icebp
or
cmp
jne
ja
mov
popf
sti
xchg
shrl
adc
mov
push
add
push
jg
mov
out
in
jl
sarb
pop
jle
inc
andb
jb
sbbb
sub
std
sub
fdivs
mov
cltd
ja
stos
pop
inc
aas
mov
pop
lods
mov
jno
or
cmpsl
ja
or
mov
lret
xchg
stos
jbe
cmp
jnp
mov
imul
inc
into
push
dec
jle
mov
pop
in
sahf
repnz
cmc
sub
inc
cmpsl
jle
iret
pop
adc
sahf
arpl
xchg
pandn
push
gs
fcompl
xchg
jno
cld
aad
inc
ja
shll
aas
std
daa
out
hlt
xchg
jae
dec
fistps
into
sbb
pop
mov
or
das
pop
js
into
push
ds
icebp
xchg
cmp
fs
and
ljmp
adc
sahf
les
adc
call
imul
repnz
mov
mov
ds
stos
and
mov
in
das
lds
mov
add
xor
xchg
std
popw
sub
or
mov
mov
cmpsl
addl
daa
je
mov
movb
dec
push
adc
leave
mov
push
ja
sub
sti
int
stc
sti
lea
ljmp
cmpsb
bound
ret
bound
add
aad
arpl
into
popa
push
pop
and
mov
gs
lock
neg
mov
pop
inc
lds
outsl
fistpll
mov
js
push
xchg
loopne
cld
push
and
cmp
int
in
nop
xchg
lds
sub
std
insl
ss
lcall
pop
push
adc
std
pop
push
sub
mov
xchg
mov
mov
xchg
js
das
mov
scas
xlat
cs
jnp
push
imul
rep
aaa
jg
fstpt
ror
push
stc
pop
push
out
rcrb
roll
mov
mov
outsb
lret
out
inc
pop
outsb
repz
sbb
mov
mov
rcrl
jb
and
popf
lahf
lret
lahf
cltd
cmp
lret
inc
sub
lock
sahf
add
push
ret
fst
sarl
pop
xor
add
ljmp
pop
add
outsl
dec
push
mov
cs
adc
and
push
dec
and
xchg
je
dec
mov
cmpsl
test
and
dec
outsl
mov
cmpsl
lods
sbb
pop
outsb
dec
dec
fsubp
mov
xchg
xchg
push
push
frstor
add
sub
shrb
cmp
out
stos
jle
rcl
pop
pop
rorb
outsl
test
insl
cwtl
ja
mov
adc
lods
popa
sbb
sbb
js
push
mov
jmp
inc
mov
inc
pop
aad
pop
fnstsw
stos
mov
rclb
ja
mov
mov
mov
addr16
nop
pop
add
lds
pop
stos
xor
cmp
push
repz
fidivl
fldt
sub
add
push
mov
push
and
addl
fst
xor
js
xchg
pop
sub
dec
sbb
lret
mov
inc
mov
test
cmp
sarb
out
shl
adc
arpl
inc
pop
mov
xchg
lret
adc
xchg
sub
pop
and
into
adc
aad
mov
xchg
fildll
cmpsl
sahf
faddl
out
pop
fildl
icebp
or
xor
xchg
mov
aas
cltd
sbb
cmp
push
shlb
sar
aam
cmp
sahf
jnp
pop
popa
sarl
pop
push
fdivrl
and
cmp
mov
mov
xor
dec
dec
push
inc
xchg
xchg
cmpsl
xchg
movsl
daa
cmpsl
xchg
jecxz
cmpsb
jne
stos
fsubrl
shlb
aaa
test
pop
or
rclb
std
jmp
mov
fisubs
mov
ret
xor
mov
outsl
mov
ror
mov
dec
add
jns
ja
adc
neg
inc
lock
pop
js
dec
fsubl
xor
leave
jle,pt
mov
shl
mov
sbb
std
out
dec
or
and
pop
xchg
xor
cmp
sbb
nop
add
enter
mov
adc
pop
ja
adc
nop
adc
notl
adc
int3
out
xchg
xor
mov
inc
or
ljmp
fwait
imull
mov
mov
scas
std
xchg
cmp
mov
std
js
idivb
sarl
test
lods
aad
aaa
arpl
xchg
fbstp
leave
mov
sti
icebp
mov
or
adc
and
stc
les
push
pop
xchg
imul
sbb
inc
sub
and
scas
lds
or
inc
pop
imul
into
imul
xlat
mov
mov
arpl
mov
pop
sbb
in
pop
mov
mov
arpl
xlat
push
imul
std
cmp
cmp
adcl
clc
sub
inc
cmc
cmp
daa
in
std
push
push
mov
mov
gs
insl
int3
adc
push
cmp
sub
mov
scas
rolb
sub
jmp
sbb
imul
and
add
in
adc
pop
push
adc
jle
ss
dec
xchg
push
mov
js
sahf
scas
sarl
lods
mov
inc
ss
push
js
fwait
mov
mov
movsl
daa
mov
int
stos
xchg
daa
adc
jl
pop
adc
or
mov
into
xor
data16
lds
xlat
adc
insl
aaa
imul
js
sarl
iret
jmp
xchg
popf
enter
cmp
rorb
mov
pop
cmp
push
cmp
and
sahf
hlt
add
xor
or
cmpl
test
dec
push
sbb
xorl
aaa
push
out
sbb
cmpsl
mov
xor
dec
jp
pop
adc
jle
stos
inc
sbb
dec
pop
cmc
daa
mov
xchg
mov
jnp
adc
lret
xchg
jne
sub
mov
hlt
mov
cmpsl
push
and
lahf
mov
add
mov
mov
mov
jo
lock
popf
cmpsl
sar
repz
xchg
fistl
fnstsw
adc
jne
mov
inc
jl
out
bound
push
filds
mov
stos
inc
jg
dec
add
cmpsl
aad
adc
lock
xor
je
xor
xchg
fs
inc
jne
movsb
mov
jl
ljmp
iret
xchg
jnp
sarl
ret
mov
or
lds
incl
and
in
and
ds
fldt
mov
jnp
pop
loope
cltd
xor
js
mov
aad
out
mov
scas
leave
mov
in
int3
jno
mov
icebp
xchg
xchg
dec
aaa
sbb
push
mov
icebp
enter
inc
adc
pop
push
push
es
sub
arpl
iret
ss
movsl
pop
mov
out
mov
orl
jmp
ret
pop
jecxz
outsb
loopne
lods
jb
cli
bound
mov
insb
push
punpckldq
pop
mov
mov
hlt
mov
cltd
and
jo
aas
push
cmp
inc
lret
cmp
push
je
addr16
out
mov
sbb
ret
xchg
out
stos
int
fistpll
pop
icebp
sub
aaa
mov
loop
xchg
loope
mov
ljmp
jae
outsl
sahf
lret
inc
leave
outsb
and
cmpsl
lret
shld
aad
cwtl
insl
daa
aad
fsubr
ds
push
mov
shlb
imul
or
iret
cld
push
lds
nop
sbb
adc
stos
ret
sbb
cs
jmp
inc
adcb
mov
sub
jne
xchg
test
mov
or
push
mov
xchg
jecxz
xor
add
jnp
jecxz
fidivrl
shl
jbe
pop
pop
xchg
mov
cmp
orb
mov
xchg
cmpsb
xchg
jecxz
loope
xchg
nop
push
daa
sub
in
mov
cs
cli
scas
jecxz
xchg
addr16
lret
adc
mov
les
nop
out
pop
mov
push
pusha
adc
fpatan
andb
cs
adc
rol
xor
cltd
cmc
insl
xor
xlat
mov
ret
jnp
test
lret
lret
mov
addr16
in
int
sbb
or
and
outsb
lea
stos
pop
iret
popf
clc
sbb
xchg
mov
cmp
or
scas
sbb
jp
xchg
fbstp
mov
jle
mov
adc
inc
push
or
mov
insl
cmp
iret
aad
jno
sahf
js
cmc
jle
dec
imul
inc
cmp
xor
mov
and
test
xchg
xchg
xor
icebp
rcrl
push
sysenter
hlt
adcl
mov
mov
aas
xchg
js
sbbl
in
sub
das
xchg
mov
inc
pusha
sar
xchg
js
dec
mov
push
enter
mov
xchg
ja
std
pop
lds
xor
cmpsb
outsl
aad
int3
ja
sub
or
js
dec
mov
inc
push
into
xchg
nop
xor
jno
xchg
ds
pop
xchg
xor
mov
adc
daa
cmp
enter
xchg
enter
push
sub
dec
shl
sub
sbb
mov
mov
xor
dec
lods
inc
sahf
fdivl
push
mov
lock
test
xchg
inc
sbb
rorl
xor
push
push
repz
add
dec
xor
sbb
push
push
inc
clc
int
jo
push
mov
lock
xchg
in
jno
xor
xchg
pop
js
pop
pop
jle
dec
cmpsl
and
pop
mov
shl
mov
in
mov
outsl
jge
mov
push
lret
bound
push
inc
in
notl
cmpsb
push
cltd
iret
mov
mov
outsb
js
mov
sti
jle
pop
and
sti
adc
sbb
mov
js
cmpsl
push
inc
ja
inc
pusha
add
xchg
sub
inc
mov
mov
add
xchg
adc
outsl
jle
xchg
int
ja
mov
std
out
stos
mov
mov
rcll
sbb
mov
nop
js
in
jnp
pop
lock
das
or
xor
sub
pop
mov
push
push
outsl
xchg
int3
nop
test
mov
or
popl
adc
test
or
lea
xor
sarb
pop
ss
jb
bound
out
adc
jnp
or
dec
iret
cmc
push
js
jb
nop
je
sub
mov
xchg
add
shl
cltd
icebp
addr16
imul
outsl
mov
fwait
aaa
nop
jb
xor
movsb
in
xor
mov
fbld
sti
negb
insb
bound
jmp
push
push
cmp
es
pop
add
mov
mov
outsl
push
mov
divl
out
push
movsb
out
sub
cmp
jge
mov
jbe
jecxz
and
sbb
inc
push
lcall
movsl
jae
mov
cmpsb
fwait
iret
mov
mov
mov
add
fs
pop
push
pop
sub
into
pop
cmpsl
jg
test
out
rcrl
stos
mov
sahf
lds
scas
sub
aad
sbb
xchg
mov
inc
outsl
mov
nop
iret
movsb
insb
mov
daa
nop
ds
mov
xchg
mov
xchg
push
nop
or
movsl
pop
sub
repz
in
mov
dec
and
ret
jl
mov
mov
xor
push
enter
jmp
mov
call
mov
push
enter
or
cmpsl
mov
lret
jecxz
mov
out
add
push
sub
test
jbe
xlat
jnp
xchg
xor
xor
iret
int
xchg
addb
xor
add
ficoml
jg
test
mov
out
mov
sbb
sbb
cmp
mov
ret
xchg
sub
test
testl
sbb
pop
mov
mov
lea
inc
repnz
or
movsb
ret
push
pop
sahf
sbb
in
mov
out
cmovl
jle
xlat
ss
les
xlat
daa
jnp
add
fistpll
fidivs
clc
cwtl
or
scas
push
inc
jmp
push
bound
dec
jmp
pop
jae
xor
mov
and
mov
mov
popf
outsl
sub
push
add
xor
push
shl
push
sbb
add
cmp
shr
push
xor
loop
sahf
rorl
repz
and
lret
scas
mov
xor
lods
js
es
sbb
mov
mov
popl
stc
xor
dec
jo
rcl
pavgb
mov
js
es
dec
sbb
test
mov
sub
add
xor
inc
xchg
adcl
shl
jne
jns
or
nop
mov
test
inc
sbb
mov
xchg
push
or
pop
and
add
fistpll
xor
inc
outsb
xchg
je
xchg
mov
mov
inc
xor
xchg
adc
lea
xchg
xchg
js
je
in
es
jbe
imul
fadd
or
js
sahf
movsl
inc
and
data16
xchg
sbb
xchg
inc
dec
incb
or
cmpsl
push
cmpsl
add
lahf
lret
shr
dec
je
sahf
pop
or
cmp
int
xor
icebp
and
mov
cmp
pushl
cmp
jae
adc
xchg
js
push
fiaddl
je
out
ret
cmpxchg
push
mov
sti
lret
fdiv
fdivrs
lods
rcrb
fs
push
jecxz
and
cmp
fsts
inc
xchg
ret
jl
aad
lock
mov
pop
in
xchg
fiadds
inc
jbe
mov
cmpsl
adc
pop
pop
pushf
jecxz
xchg
xchg
sbb
outsl
popa
jne
pop
pop
mov
jg
mov
in
jo
and
xchg
mov
add
jle
aas
sub
out
xchg
outsb
sub
xchg
xchg
ljmp
inc
cmpsb
jle
jg
sub
mov
adc
mov
mov
fmuls
outsb
jecxz
das
add
je
repnz
push
loope
push
xor
mov
mov
push
mov
push
inc
mov
push
cmpsl
stc
push
out
xor
mov
hlt
mov
notb
lcall
js
clc
sbb
movsl
inc
xchg
orb
and
cmpsl
lods
xchg
push
jns
outsl
and
scas
mov
out
jno
into
add
pop
outsb
loop
dec
sub
addr16
inc
or
mov
lods
push
lret
movsb
mov
and
insl
pushf
das
push
jno
cmpsb
push
sahf
cmc
aad
push
cmpsb
pop
loope
mov
jg
xchg
mov
adc
mov
inc
sub
fistpll
fadds
jecxz
mov
mov
fnstsw
fcoms
scas
dec
movsl
and
jno
and
ja
aas
xor
mov
jecxz
std
lcall
js
mov
insl
out
out
adc
adc
nop
sarl
fucom
test
adc
sub
mov
subb
movsl
mov
fcmovb
dec
iret
js
popa
addr16
scas
es
lods
push
pop
xchg
mov
pop
push
sub
jne
cmp
fisubl
and
mov
insl
pop
lods
std
outsl
push
push
int3
aad
test
das
mov
iret
lods
xchg
cli
or
adc
pop
pop
push
rclb
test
mov
repnz
outsl
repz
sti
lret
pop
fucomp
xor
and
subl
out
xor
popf
je
outsb
add
fucomi
pop
pop
rorl
es
pop
push
dec
cmp
mov
shrl
push
sbb
into
ds
inc
cmpsl
push
jle
mulb
pushl
mov
lds
faddl
js
mov
xchg
push
js
inc
jo
or
mov
stos
mov
xchg
mov
outsb
jo
cmpsl
sub
xchg
addr16
mov
inc
mov
fwait
in
adc
push
fdivl
ja
xchg
test
jns
adc
in
nop
cmp
test
or
jns,pt
dec
xor
mov
ds
ja
scas
xor
pop
dec
xchg
lods
jge
inc
dec
cmp
jbe
xlat
jns
xor
mov
aad
leave
rcl
sahf
add
enter
cmpsb
aaa
mov
daa
mov
xor
jne
push
push
hlt
lret
outsb
jl
mov
stos
sti
xchg
or
fcmovnb
pop
jle
mov
inc
push
mov
mov
mov
jae
dec
adc
iret
push
subl
mov
and
add
mov
stos
mov
scas
sub
xor
sbb
fnstenv
psrld
xchg
scas
pop
mov
sub
xor
jno
lock
cltd
das
or
cmp
data16
gs
cli
and
push
in
push
pop
sub
rclb
push
jmp
cmp
loop
push
js
mov
js
sub
enter
adc
jbe
lret
imul
dec
mov
xorb
inc
mov
xchg
xchg
fisttps
push
stc
or
sub
push
or
sbbl
ja
fldl
test
lds
xchg
je
cwtl
mov
cmc
fists
sub
js
sub
notl
xchg
mov
add
imul
push
icebp
loopne
adc
cld
xor
sbb
lds
and
popa
push
add
pop
jnp
adc
js
mov
push
in
imul
bound
adc
lds
or
mov
xlat
mov
decl
cmpsb
aaa
mov
sbb
push
xchg
scas
xchg
ficoml
push
sti
loopne
fsubrs
aam
divl
in
mov
and
inc
cltd
jl
add
movsl
dec
negl
cmp
pop
cmp
and
stos
mov
add
out
push
jb
mov
ret
or
sti
and
stos
and
jecxz
sahf
into
add
fnstcw
mov
sbb
in
fcoms
filds
in
sahf
cmp
mov
cmp
js
leave
xor
pop
stc
int3
pop
nop
fidivs
or
scas
xor
sahf
cmpsl
nop
xchg
fwait
jnp
out
rorb
xor
rolb
std
fcoml
cmp
sub
ja
fdivs
push
push
mov
loope
fcoml
addr16
flds
pusha
aaa
mov
loope
lods
cmc
add
scas
pop
sub
push
lret
jl
pop
ja
or
xor
adc
dec
aad
repnz
enter
inc
inc
cmpsb
dec
das
inc
test
dec
mov
mov
std
roll
and
mov
add
pop
xorb
out
or
mov
leave
loope
adc
mulb
movsl
push
jp
cmpsl
jp
divb
adc
push
ljmp
movsl
aaa
push
jb
cmp
xor
cmp
xchg
out
cmpb
pop
mov
mov
and
inc
out
mov
cmc
jp
sub
adcl
insb
mov
inc
and
inc
adc
cmc
sbb
jne
jmp
push
xchg
iret
in
imul
mov
outsb
scas
xchg
cmp
inc
lret
into
cmp
cmp
movsb
roll
aaa
sarb
push
push
leave
jge
insb
lds
mov
lock
xchg
jne
sub
xor
pop
out
push
jns
movsl
push
push
mov
mov
dec
in
stos
add
sub
jb
mov
call
data16
inc
mov
aaa
pop
mov
adc
mov
xchg
in
outsl
xor
cmpsl
sub
dec
fimuls
pop
mov
inc
push
and
inc
js
mov
jnp
cmp
jns
inc
inc
push
inc
xor
add
lods
xchg
mov
xchg
int
and
xor
ficomps
xlat
pop
jnp
mov
aas
js
std
jo
data16
fists
fs
repnz
pop
jo
push
pop
adc
rol
cmp
popf
test
xor
xchg
xchg
outsl
jle
int3
pushf
jecxz
cmp
popa
push
pop
mov
in
xchg
cld
ret
inc
xlat
mov
push
inc
daa
test
mov
into
jnp
mov
mov
mov
insl
add
dec
jb
js
mov
stos
and
scas
lret
out
mov
push
aad
xor
pop
push
sub
mov
ljmp
movsb
sbb
iret
sbb
jns
imul
int3
in
stos
in
mov
and
popa
pushf
js
ret
fcomip
adc
jns
mov
or
lret
jo
xor
int3
cli
adcl
sbb
aaa
stos
jle
jecxz
fsubl
into
scas
fdivl
js
and
cmc
sbb
inc
ss
jbe
in
and
xor
cwtl
arpl
and
imul
push
mov
and
notb
push
xchg
pushf
movsb
cmp
idiv
push
in
mov
mov
xchg
xor
in
or
sub
mov
fmul
mov
idivl
pop
mov
jo
outsb
or
pop
and
mov
out
adc
mov
lret
outsl
aad
xlat
push
xchg
imul
xchg
ljmp
into
cmc
out
cmpsb
xor
mov
cmp
mov
inc
pop
xchg
xor
cmp
outsl
cltd
repz
loope
leave
incl
add
mov
fadds
lcall
shlb
jne
in
pop
pop
cmc
and
test
mov
add
cltd
imul
dec
jl
fidivl
lods
xor
xor
lcall
mov
repnz
lahf
repz
adc
int
xor
push
jbe
icebp
jae
out
nop
sbb
lret
xchg
imul
lret
push
pop
inc
cld
subb
jp
push
movsl
mov
int
or
cmc
xchg
xchg
cmpsl
movsb
pop
xchg
jns
mov
and
aaa
fldcw
adc
and
sarl
jb
xchg
nop
in
sub
or
mov
xor
jmp
out
push
xor
jb
cwtl
push
xchg
loope
pushf
adc
daa
xor
mov
xchg
jg
flds
mov
or
jg
not
and
nop
mov
mov
jecxz
mov
arpl
mov
sbb
sub
pop
jnp
xor
imul
adc
movsb
mov
dec
ljmp
lret
jg
sahf
jecxz
aas
xchg
pop
out
ret
and
aas
mov
idiv
sbb
mov
hlt
shrb
rcll
pop
add
xchg
pop
mov
inc
sub
or
mov
adcb
xchg
cmpsl
movb
inc
pop
dec
inc
mov
mov
inc
imul
xor
pop
lods
inc
flds
mov
or
scas
js
nop
adc
movsl
das
pop
jae
rcr
sbb
xchg
pop
sbb
jmp
sub
movsb
xchg
xchg
xlat
ffreep
jecxz
movsl
nop
cld
sarb
adcb
cmp
negl
push
cmpsl
push
mov
fadd
jg
negb
mov
inc
xchg
fsts
aaa
mov
outsl
lock
data16
mov
add
dec
ror
sub
sarb
push
and
daa
push
push
fmuls
cmp
cmc
cltd
inc
cmpsl
adc
pop
jp
sbb
fdivrl
out
pop
cmpsl
cmp
aaa
xchg
addr16
sub
xor
push
xor
fdivl
aaa
and
dec
pop
or
xchg
test
lea
xchg
adc
mov
aad
nop
inc
or
das
aas
fsubs
pop
pop
lret
lods
ds
jecxz
inc
in
ret
cld
and
negb
das
loope
mov
mov
and
sbb
cld
ss
shll
adc
mov
mov
scas
lret
fsub
pop
push
sub
mov
sbb
lds
push
in
pop
xor
arpl
repnz
movsl
pop
pop
aad
bound
fimull
sbb
movsb
adc
leave
xchg
lock
xor
jl
cmp
sbb
sbb
mov
shlb
and
aam
fcmove
adc
jg
lods
jno
dec
inc
fmull
loopne
loopne
or
inc
sbb
jb
sub
shrb
fwait
dec
sbb
sbb
sub
or
sbb
pop
lods
adc
push
mov
xchg
cmpsl
pop
sahf
movsl
test
push
stos
outsl
mov
out
inc
inc
daa
push
arpl
xchg
pop
leave
aad
test
mulb
or
xor
push
jp
or
ja
adc
nop
inc
ss
xchg
jbe
pop
adc
push
and
add
pop
lods
sbb
xor
mov
pop
mov
ss
jmp
scas
xchg
lret
push
jl
outsl
sbb
cmp
lds
push
and
adc
aaa
sbbl
pop
mov
jle
push
mov
and
mov
mov
push
ja
cmp
fbld
cmp
stc
sbb
pop
mov
push
adc
out
rcl
fstl
xchg
jg
jp
fs
xor
xchg
push
inc
sbb
ss
ja
int
lret
int
mov
in
xor
pop
add
dec
push
and
jecxz
mov
jg
daa
push
nop
ret
sub
fiaddl
cmp
mov
aad
mov
mov
aaa
pop
push
aas
or
test
xchg
testb
movsb
pop
xor
js
lds
clc
gs
movsl
xchg
js
rcr
cmp
xchg
mov
mov
and
jmp
mov
fstpt
test
gs
jmp
lret
mov
dec
cmp
fs
jge
lds
sbb
inc
and
xor
jecxz
fsts
fldcw
mov
mov
js
dec
int
aaa
lahf
sarb
adc
test
dec
or
out
out
or
mov
insl
xchg
int
nop
ret
in
mov
std
jne
pop
add
movsl
aaa
std
scas
mov
adc
call
cmpsb
aam
fs
rcrl
in
test
pop
xchg
mov
cmc
cmpsb
dec
popf
push
into
push
ja
out
das
mov
incb
mov
mov
hlt
or
outsl
scas
cmp
jb
ds
scas
nop
xchg
dec
mov
xchg
das
rclb
aas
shlb
negl
fldcw
or
xchg
and
cmp
into
mov
mov
inc
lock
mov
adcb
scas
inc
xchg
sti
ja
inc
jnp
hlt
movsl
addr16
and
idiv
push
jmp
aad
pop
jae
xor
pop
sbb
enter
mov
cmp
aaa
repz
xchg
lret
das
dec
mov
pop
lds
mov
out
dec
push
sahf
sub
mov
cmp
xor
push
pslld
pop
push
xchg
jmp
iret
rorl
inc
mov
sbb
cltd
pop
mov
and
mov
jg
mov
cmp
mov
mov
adc
mov
mov
mov
scas
repnz
addr16
pop
sar
sub
jnp
jle
sarl
js
xchg
mov
adcb
sub
sbb
dec
xchg
jnp
xor
int3
cmpsl
push
mov
std
mov
mov
mov
shlb
mov
mov
mov
xchg
iret
sub
lds
push
dec
push
mov
rcrl
addl
or
js
mov
je
mov
stc
sub
pop
jle
movsb
or
outsl
scas
out
hlt
cmpsb
das
lea
xchg
add
std
shl
xchg
xchg
aas
mov
xchg
and
ret
out
xchg
pop
ret
adc
or
loop
cwtl
lods
iret
sub
and
bound
aaa
test
jnp
iret
adc
bswap
or
ret
mov
ret
push
sub
ja
push
fisubl
test
push
shll
jnp
sbb
pop
std
out
mov
adc
cmp
scas
mov
pop
cld
push
sbb
scas
inc
lds
repnz
mov
aad
and
nop
cld
push
movsl
pop
sahf
jns
lret
das
xchg
dec
xchg
fsubl
icebp
inc
scas
das
nop
clc
adc
int3
call
jmp
aad
gs
popa
test
inc
fdivl
scas
sub
cs
pop
and
imul
or
sub
icebp
mov
mov
gs
push
mov
xor
sahf
jle
out
push
inc
push
pop
mov
lret
addr16
xchg
mov
pushf
in
pop
push
mov
out
fstpl
outsb
gs
mov
xchg
xor
dec
adc
rclb
pop
fsub
pop
dec
lret
cld
daa
fists
sbb
dec
xchg
scas
cmp
mov
das
outsb
in
push
push
js
repnz
adc
push
prefetcht1
pop
xchg
sbb
aaa
jg
fwait
ljmp
insb
mov
test
cmpsb
in
aas
push
shl
out
out
push
or
sub
mov
test
push
mov
jecxz
pop
lock
push
icebp
rcl
mov
lahf
sub
shlb
dec
loope
imul
and
jl
jl
fimuls
dec
xchg
mov
das
cltd
fwait
jmp
test
iret
pop
mov
std
imul
js
shll
and
lds
andl
adcl
iret
jecxz
mov
mov
aaa
jnp
add
out
sub
adc
popl
test
js
or
add
mov
sub
jg
ds
nop
rorl
mov
jge
mov
or
sbb
or
jecxz
rcrb
jle
inc
mov
ret
inc
stos
aaa
push
int3
push
movsl
xor
mov
in
adc
shrl
icebp
js
rolb
jge
add
pop
pop
insl
xchg
mov
fimuls
rclb
cmc
push
nop
mov
adc
mov
ja
das
aad
dec
pop
int
pop
mov
out
cwtl
test
repz
add
cli
nop
fmul
rcrl
or
xor
aaa
ss
jo
aad
xchg
add
jle
add
stos
in
into
mov
pop
mov
daa
add
cmp
adc
shll
aad
std
leave
out
rcr
push
xchg
ljmp
jl
pop
xchg
sub
sbb
loope
mov
iret
mov
test
or
inc
jp
fcompl
xchg
cmpsb
outsl
or
cwtl
cmpsb
mov
xchg
cld
mov
or
push
pop
gs
ja
ljmp
jle
mov
idivl
xchg
mov
nop
jg
in
lahf
mov
lret
gs
sub
adc
test
cld
popa
sbb
std
fdiv
sub
jle
icebp
mov
cmp
push
dec
js
xor
in
pop
ret
sbb
xchg
push
pop
inc
mov
push
ja
push
ljmp
fucom
sub
pop
mov
iret
shll
stos
pop
push
adc
jnp
outsb
out
inc
hlt
fsubl
out
or
leave
inc
inc
stc
mov
sub
fidivs
add
xchg
mov
daa
jle
aas
jge
dec
ja
dec
mov
or
fcmovnu
xchg
jle
jge
and
dec
and
aas
xor
aaa
bound
xor
cmpsl
mov
das
xor
mov
popf
std
fimuls
xchg
inc
pop
and
xor
xchg
push
insb
mov
sbb
dec
cmp
push
ret
inc
jp
scas
scas
shrl
cmp
leave
ja
push
fistl
ja
dec
pop
inc
in
push
jg
dec
scas
subb
jge
adc
push
xchg
add
je
xchg
rorb
cmp
jbe
dec
je
cmpsb
scas
fdivl
push
pop
mov
inc
push
sub
mov
xorl
aad
mov
sub
inc
inc
sbb
push
xor
cmpsl
push
stos
clc
out
cltd
test
jl
jge
jno
push
sbb
cmpsl
pop
loope
int
mov
push
add
shrb
mov
inc
popa
push
jp,pn
sub
and
sub
push
js
sub
cmpsl
lds
fsubrl
push
jbe
dec
or
dec
clc
sti
cmp
and
aad
jno
adc
or
das
pop
testl
outsl
mov
daa
aaa
dec
jle
fwait
lods
add
mov
pop
mov
jae
rorl
add
pop
outsb
cld
jmp
lds
fistl
adc
sbb
mov
xchg
or
outsb
js
call
xor
xor
scas
inc
addr16
or
data16
xchg
fxch
gs
or
out
inc
out
cmp
addr16
mov
icebp
ja
js
gs
aaa
jb
jne
lods
bound
mov
and
fxch
pop
shlb
clc
xlat
mov
jo
xor
xlat
add
js
jg
imul
mov
outsb
lret
cltd
call
fdivs
jg
les
xchg
xchg
movsb
pop
sbb
dec
iret
jle
bound
mov
sbb
jne
xchg
sarl
cmpsl
out
int
test
test
fstl
aas
cltd
cmpsl
jo
pop
les
cmc
jecxz
pop
aas
cmpsl
jg
cld
repz
pop
dec
lret
stc
scas
and
lcall
push
cmp
out
jo
cld
not
dec
mov
mov
mov
mov
adc
add
mov
cmp
outsb
cmp
dec
cld
push
lret
push
nop
test
sbb
in
adc
push
cmp
enter
fsubrs
adc
sbb
xchg
aaa
mov
inc
lods
lods
hlt
jecxz
imulb
adcb
xlat
dec
nop
cmpsb
pusha
pop
sub
cs
hlt
mov
mov
xor
jge
lods
fistps
xchg
dec
aaa
std
xchg
jecxz
and
mov
sub
jl
aaa
push
in
testb
dec
pop
xchg
pop
jmp
lret
test
nop
lock
jo
negb
iret
aas
xor
ljmp
dec
mov
ss
movsl
xor
ss
call
inc
ljmp
xlat
push
int
lods
mov
imul
scas
out
pop
dec
xchg
cmpps
mov
addr16
push
in
lods
xor
out
movb
call
lcall
andl
dec
mov
dec
loope
sbb
les
mov
push
xchg
jg
mov
rorb
dec
test
jb
mov
mov
aad
pop
enter
mov
push
in
adc
daa
stos
pop
clc
jne
inc
xor
jo
icebp
or
ss
sbb
jge
fwait
or
mov
push
xor
and
shlb
lods
cli
xchg
jns
pop
or
cli
popa
clc
fdivrl
adc
mov
movsl
daa
sbb
mov
cmpsl
rcrb
and
mov
repz
dec
ret
mov
xchg
div
adc
adcl
adc
daa
aaa
scas
pop
mov
shl
jmp
pop
mov
adc
in
lods
nop
loope
out
fmuls
shlb
cmpsl
aad
mov
adc
jo
nop
push
stc
movsl
or
xor
sub
int
pop
inc
scas
xlat
outsl
sub
popf
jbe
cwtl
cmp
adc
sbb
repz
js
xlat
sar
dec
repz
ja
push
fistpl
out
dec
push
andb
out
scas
lods
movsl
fs
sarl
xor
ja
adc
jp
insl
xchg
mov
inc
mov
js
pusha
decb
into
ss
loop
mov
aaa
stos
jecxz
jge
pusha
mov
cmp
orl
outsb
shlb
push
aad
mov
pop
mov
jecxz
ja
idiv
mov
inc
aas
test
pop
cmc
jg
dec
lahf
ja
jnp
jne
adc
adc
lret
xor
sbbl
out
pop
push
das
push
fucom
dec
sub
pop
adc
mov
outsb
sahf
js
or
sarb
outsb
aas
push
icebp
clc
loop
sarl
ja
lea
inc
addr16
xchg
inc
jg
aad
mov
ljmp
lock
stos
pop
inc
dec
mov
push
or
ja
imul
nop
lret
popf
or
movd
iret
pop
mov
pop
aas
in
push
xor
inc
insl
fmul
mov
jae
mov
jae
mov
pusha
dec
into
mov
add
test
mov
inc
scas
mov
shlb
mov
mov
js
mov
jbe
jl
adc
mov
js
pusha
dec
mov
xchg
sub
fistps
imul
dec
mov
enter
in
vcvtpd2dqx
push
stos
sub
in
pop
xchg
sub
addr16
in
mov
add
xchg
and
push
fs
fstpt
unpckhps
lret
push
push
pop
cwtl
push
daa
xchg
jmp
cmp
push
add
adc
das
shr
stc
pop
scas
repz
aaa
lds
xchg
mov
js
in
xchg
je
lods
stos
push
add
lds
movb
int
push
loope
pop
jnp
roll
mov
xchg
push
das
jge
outsl
jno
xchg
and
rorb
sub
lock
jle
imul
push
shl
jmp
push
pop
imul
sub
adc
adc
inc
xchg
gs
mov
stos
js
clc
into
push
iret
cmc
cld
xor
jmp
rorl
push
mov
sub
sarl
jno
mov
jge
shlb
pop
pop
xchg
fwait
int3
insl
xchg
jg
mov
cmpsl
cltd
or
xchg
inc
jo
push
dec
xor
xor
push
std
movswl
xchg
add
mov
push
xchg
jae
and
sub
mov
push
jge
jp
adc
xchg
mov
sbbl
aad
imul
aaa
pushf
daa
out
jne
push
xchg
repnz
rclb
pop
mov
jl
and
mov
pusha
xor
daa
mov
and
jbe
pop
in
or
jns
movsb
vcvttss2si
push
pop
sbb
adc
imul
shl
dec
ffreep
sbb
cmp
xor
sub
inc
aam
dec
sti
fisubs
stos
pushf
inc
outsl
movsl
xchg
scas
push
aaa
in
mov
push
inc
inc
ljmp
sbbb
loope
mov
ja
dec
mov
imul
fdivl
mov
mov
jl
push
pop
std
movsb
faddl
icebp
jne
sub
sub
adc
push
stos
clc
incb
push
and
das
push
in
xor
test
dec
sub
pop
mov
aas
mov
push
insl
test
push
sbb
jno
iret
loopne
outsb
js
or
les
mov
adc
adc
push
jno
pop
dec
pusha
ret
bound
dec
cmp
mov
and
ljmp
push
cmp
cmp
out
fldl
outsb
loopne
aad
pop
pop
lods
jecxz
mov
ror
stos
sarl
mov
xchg
rol
mov
adc
pop
and
pushf
adc
out
inc
pushaw
xor
inc
mov
push
xor
movsl
testl
out
nop
sub
ffreep
addr16
push
pop
mov
adcb
cmp
les
mov
dec
enter
add
fdivrp
addl
ds
push
fadds
cmp
daa
push
mov
dec
dec
pop
imul
push
adc
sbb
lods
mov
call
in
pop
adc
fwait
inc
pusha
imul
pop
cmc
push
std
adc
inc
popa
mov
ss
mov
fnstsw
pop
xchg
mov
sub
dec
fidivrl
and
cld
inc
push
pop
mov
popa
mov
out
xchg
cwtl
cmp
and
imul
in
adc
adc
gs
mov
pop
cmp
outsb
dec
sbb
imul
stos
fdivp
pop
fsubs
out
add
mov
aaa
sub
loope
es
pop
loope
scas
enter
testb
cwtl
pop
sub
xchg
fmull
inc
jb
scas
mov
mov
mov
mov
xchg
test
dec
loopne
fxam
enter
push
xchg
lret
mov
mov
push
and
into
and
inc
inc
mov
imulb
mov
xchg
loope
in
jge
sti
mov
sbb
dec
xchg
test
mov
mov
mov
xchg
jo
push
pop
fldl
sarl
mov
ja
inc
sub
sti
jo
test
test
adc
xchg
mov
mov
jl
fidivrl
sti
rcrl
cltd
pop
jns
fistpl
mov
ret
adc
movsl
sbb
ret
int3
cmp
movsb
int
adc
pushf
mov
aad
mov
jbe
addr16
dec
scas
and
mov
xchg
push
out
xchg
pop
mov
mov
sarl
dec
iret
mov
mov
push
insl
xchg
jne
push
xchg
lcall
stc
gs
sub
insl
pop
jmp
lcall
push
scas
leave
out
test
pop
fldenv
cmp
fdivl
shll
fldl
mov
dec
jle
and
pop
inc
push
sarl
in
aad
fistl
adc
mov
xchg
loope
je
fsubrl
ret
test
adc
sahf
notb
pop
out
xor
idivb
or
pop
sbb
lret
mov
mov
fnstsw
gs
es
das
pop
iret
add
repz
jecxz
lods
hlt
insb
aas
sub
pop
add
mov
lret
stos
js
fisttpl
fisubl
or
cs
jnp
stc
and
xor
int
xchg
push
mov
mov
fistps
std
ret
hlt
cs
repz
std
leave
inc
pop
add
mov
xchg
ss
out
adc
rolb
out
mov
xor
ret
sub
ja
push
sub
dec
add
clc
push
push
sarl
cmp
inc
scas
push
xchg
cmp
adc
loop
add
rcll
mov
imul
jle
xchg
pop
mov
mov
push
add
fldenv
fwait
movsl
ret
fstp
les
bound
pop
jns
shlb
in
add
icebp
popf
decb
mov
cmp
push
dec
cmpb
dec
cmpsl
mov
dec
push
es
mov
notl
ja
aad
mov
mov
mov
mov
nop
cmp
cmova
pushf
cmpsl
mov
idivl
dec
nop
inc
add
dec
js
mov
insb
xor
insl
nop
sub
pop
idiv
inc
push
xchg
pop
ja
jbe
repnz
scas
adc
sbb
xorb
rol
push
add
data16
xchg
fists
iret
popa
xchg
repz
jo
int
inc
xchg
jge
xchg
xor
jo
and
in
movsl
sbb
jnp
sbb
pop
ja
incl
mov
or
aaa
out
lahf
nopl
dec
mov
inc
js
incb
shl
imul
ds
lcall
jg
addr16
addr16
mov
ja
test
es
nop
fucomip
cmp
and
cltd
xchg
inc
mov
cmpsb
mov
jecxz
adcb
cmp
out
int
js
divl
mov
rcrl
stos
xchg
hlt
cmp
xor
mov
mov
and
xor
mov
lahf
lret
mov
inc
lret
jmp
loopne
in
movsb
ljmp
mov
and
inc
pop
out
xchg
pop
mov
fldt
mov
nop
in
mov
pop
cltd
inc
outsl
cmpsl
aam
neg
or
dec
ja
mov
sub
cmc
dec
aam
push
scas
fildll
mov
in
dec
dec
jb
dec
push
loop
jne
push
lcall
mov
in
mov
mov
xor
cmp
das
pop
lock
adc
scas
nop
int
adc
and
mov
leave
mov
mov
push
xor
xor
and
lcall
push
outsb
nop
icebp
xor
call
xchg
add
mov
loope
dec
testl
jge
mov
stc
orl
mov
fidivl
out
xchg
fwait
xchg
mov
sbb
ds
lret
js
mov
cmpsl
ja
mov
xchg
ret
loope
and
scas
js
push
cld
aas
shll
mov
mov
or
xor
lods
jg
fistpl
mov
das
inc
nop
inc
mov
and
mov
pop
dec
mov
push
fsubs
scas
xchg
push
jbe
lahf
xchg
outsl
inc
xchg
ja
jle
push
xor
ja
mov
fwait
dec
mov
mov
insb
outsb
shll
mov
mov
mov
mov
fistpll
aad
stos
es
movsb
scas
mov
out
pop
nop
mov
sub
ja
mov
popa
addr16
add
mov
insb
cmpsl
xchg
test
shll
xchg
or
dec
xchg
ret
adc
mov
out
push
lods
cmp
cmc
fcoml
mov
clc
mov
fstpt
mov
test
sub
mov
data16
scas
test
add
jecxz
sub
lret
add
sbb
add
out
mov
ss
cmc
inc
in
add
ror
and
inc
out
ljmp
ss
es
sbb
test
or
dec
jle
inc
call
ljmp
jecxz
cmpsl
mov
stos
rolb
adc
dec
pop
xchg
cwtl
popa
nop
mov
jb
adc
cmp
rcrl
imul
inc
shr
nop
cmpsl
mov
lret
push
mov
mov
adc
addl
ja
retw
cld
mov
sarb
mov
pusha
xor
xor
cmpsl
push
xchg
or
das
aaa
dec
add
fs
loop
data16
sti
pop
push
mov
xor
popa
adc
sahf
add
adc
mov
lds
enter
shlb
or
in
lcall
imul
mov
cmp
call
lods
insl
dec
pop
and
mov
aaa
adc
test
push
sub
ds
iret
std
push
adc
addr16
xchg
ret
cmc
inc
js
or
dec
stos
mov
repnz
leave
jge
shll
dec
popf
inc
hlt
cmpsb
testl
inc
pushf
add
xor
pop
es
nop
xchg
jne
in
call
mov
lods
pop
sarl
dec
dec
std
lds
in
subb
xchg
pusha
mov
mov
inc
push
out
stos
out
pusha
pop
ljmp
fs
mov
pop
cltd
sub
mov
jle
call
dec
cmp
jne
xchg
cmpsl
std
xchg
aaa
adc
inc
pop
dec
jl
add
pop
sub
sbb
out
push
lds
jne
adc
jl
adc
add
sbb
inc
mov
add
mov
adc
mov
mov
popf
and
mov
jg
cmc
mov
adc
xchg
pop
mov
fnstenv
push
cmc
outsb
xor
push
adc
push
cltd
in
inc
inc
insl
jecxz
mov
call
addr16
sub
pop
dec
in
jmp
dec
les
sarl
enter
inc
sub
mov
cmp
sbb
pushf
and
xor
push
das
adc
lcall
add
js
aaa
inc
or
outsb
xchg
xor
imul
ja
inc
fstpl
mov
inc
int
popa
xor
stos
mov
setne
das
lahf
dec
iret
or
lds
cmpsb
or
mov
xchg
repnz
scas
loopne
mov
int
push
or
fwait
lret
xchg
and
sbb
pop
mov
mov
inc
push
iret
arpl
push
jnp
xor
je
dec
lret
mov
add
sub
xchg
lahf
pop
mov
rol
es
int3
jo
les
xchg
scas
testb
mov
cmp
test
mov
lret
pop
test
in
jbe
pop
add
nop
pop
js
fsubrs
mov
in
inc
adc
jmp
clc
xor
mov
lcall
loope
pop
mov
dec
imul
aam
jnp
xchg
jl
cmpsl
into
xor
jbe
call
mov
ret
xchg
lea
mov
mov
js
inc
data16
rcr
test
jmp
mov
ja
scas
add
sbb
je
js
jne
jl
mov
add
mov
and
cmc
adc
fisubrl
int
pop
fbld
or
in
push
sub
dec
not
xchg
mov
adc
and
data16
push
push
shlb
and
cmpsb
shlb
movsl
lret
mov
lahf
imul
jp
push
and
sub
sub
mov
mov
lahf
sub
scas
pop
push
adc
mov
imull
incb
sbb
mov
shlb
push
prefetch
mov
popa
ss
ret
les
rcll
adc
mov
adc
mov
add
aaa
fucomp
mov
clc
add
pop
pop
stos
adc
nop
mov
shrl
mov
ret
outsb
mov
test
outsb
cltd
push
jnp
xor
cmp
mov
push
loope
enter
arpl
das
scas
jbe
xchg
loope
mov
outsl
push
push
add
xchg
cli
mov
xor
inc
cltd
and
outsl
jecxz
xchg
aaa
repz
inc
arpl
or
mov
push
out
add
pop
es
sub
xchg
in
push
pop
ficompl
shll
ficoms
cltd
aad
adc
jecxz
mov
xchg
pop
xchg
and
sbb
pop
test
mov
js
inc
jb
jnp
nop
out
mov
addr16
test
adc
scas
in
pop
fistpl
jmp
gs
mov
inc
xchg
mov
pop
ss
sti
or
dec
xchg
mov
jns
sbb
dec
std
adc
mov
bnd
mov
cmpsb
cmp
pop
ret
stos
stc
roll
mov
inc
mov
aam
mov
rolb
int
repnz
pop
outsb
je
dec
je
fwait
scas
or
inc
js
fadd
jb
aam
sub
adc
inc
and
xor
mov
and
loope
mov
test
and
call
pop
mov
aaa
sti
stos
insb
cld
inc
adc
lea
sbb
adc
xchg
cmp
stc
andb
and
lods
in
fnstenv
and
mov
mov
cmc
hlt
pushf
into
das
cmp
in
and
int
sub
outsl
jno
insl
fcoml
ss
lret
andb
push
push
loope
loop
imul
xchg
nop
cs
pop
sub
aas
mov
inc
push
jne
arpl
out
sar
sbb
nop
inc
xor
mov
add
adc
mov
loop
push
testb
push
mov
mov
sbb
xchg
movsl
es
pop
mov
xchg
rclb
dec
gs
cltd
sub
add
mov
mov
inc
out
test
xchg
out
movsb
sbb
mov
pusha
je
cld
push
sahf
gs
pop
push
or
in
lcall
ljmp
sub
sub
lret
sub
push
add
mov
mov
sub
fsts
pop
xchg
lcall
mov
pop
lock
rol
in
dec
mov
dec
ret
stos
addr16
xchg
pop
push
lcall
adc
cmp
mov
dec
xchg
jbe
inc
insl
xchg
jo
cmp
dec
push
js
xchg
popf
xor
nop
sbb
add
gs
test
data16
or
adc
fdivl
xchg
xchg
nop
aas
lcall
popf
xchg
lea
fwait
adc
pop
dec
xchg
push
gs
dec
les
pop
add
test
mov
sbb
dec
pop
std
mov
lahf
push
pop
sub
movsw
je
adc
push
push
mov
adc
pop
nop
fmuls
push
mov
gs
xchg
call
pop
cmp
iret
fcomps
push
ja
les
push
sub
sub
push
and
in
push
int
xor
popa
test
bound
fdivl
cltd
js
sahf
addr16
xchg
out
adc
or
sub
mov
inc
sbb
pop
jb
fdivrl
cmp
ja
xchg
cmpsl
fcmovnu
lret
xor
push
inc
enter
pushf
notl
scas
cmpsl
mov
addr16
negb
pusha
movsb
into
aam
fists
je
sahf
cmp
aad
js
pop
pop
sbb
xor
dec
xchg
xchg
aad
jmp
imul
xor
test
gs
adc
xor
jl
pop
mov
mov
inc
aad
sub
sbb
cmp
divl
out
nop
test
cmpsb
lods
aaa
mov
pop
jne
push
add
pusha
sub
mov
data16
ret
dec
nop
loopne
inc
divb
stc
repz
cli
mov
mov
mov
js
dec
xchg
out
xchg
stos
decb
jecxz
scas
test
ss
lret
adc
sbb
mov
pop
xchg
mov
mov
pop
xor
push
mov
inc
popf
or
addr16
gs
test
and
icebp
test
in
stc
inc
mov
std
ljmp
nop
out
pop
shlb
inc
and
mov
in
ja
imul
icebp
into
jno
adc
enter
mov
xchg
aad
mov
xchg
mov
imul
insb
or
lret
lds
push
addr16
dec
jnp
int
rcll
push
mov
es
xchg
xchg
jecxz
inc
cmp
mov
shlb
in
pop
add
ja
add
icebp
mov
scas
ja
les
and
jno
dec
mov
into
mov
out
jnp
mov
leave
outsb
mov
aaa
sub
jo
pop
push
adc
test
cmp
out
jbe
mov
inc
addr16
enter
les
cmp
push
int
push
pop
mov
data16
inc
stos
adc
orl
xlat
mov
mov
jb
adc
pop
jno
mov
jmp
xchg
divb
add
and
jecxz
pcmpeqd
jle
enter
dec
stos
out
push
adc
imulb
dec
and
gs
and
ja
fisubrs
repnz
les
lods
jmp
xor
pop
ret
lock
xchg
jno
cltd
adc
enter
pop
push
lret
insl
push
inc
enter
sbb
mov
push
xor
stos
fst
adc
js
ja
mov
je
xchg
cmp
and
pop
sbb
aad
inc
lds
mov
mov
les
or
pop
fidivl
mov
pop
lods
repnz
and
test
scas
xchg
dec
inc
cmpsl
sbb
jo
test
pop
pop
push
cmp
jmp
outsl
pusha
xor
mov
push
inc
sub
inc
cli
jle
mov
jge
mov
xchg
push
jl
or
inc
sub
mov
adc
ss
ljmp
cmpsl
mov
adc
dec
std
sahf
jmp
jge
mov
gs
sahf
jle
sbb
xor
mov
andl
mov
leave
push
adcb
movb
or
push
mov
xchg
jmp
aas
xchg
out
shrb
fcmovb
rolb
fmuls
xchg
push
pop
ss
test
ror
ljmp
sarb
fbld
pop
pusha
or
mov
cmp
xchg
rol
aas
mov
mov
xchg
or
jge,pt
push
rolb
aaa
lret
sub
mov
mov
sub
cmpsl
out
lret
gs
xchg
pop
fbstp
add
or
inc
sub
sub
nop
xchg
insl
sbb
test
mov
out
jnp
popa
cmp
ljmp
dec
movsb
xchg
aas
adc
sbb
lods
add
inc
jge
jae
test
aaa
insl
inc
xor
push
ss
dec
shr
lret
add
xor
repz
or
imul
lret
xchg
push
ds
test
pop
sbb
and
and
jg
dec
add
jns
inc
es
mov
jne
sbb
mov
mov
mov
mov
lods
xor
dec
into
xchg
push
mov
xchg
sub
cmp
scas
and
mov
jmp
insl
cmp
std
jg
or
stos
add
push
pop
movsl
mov
sub
insb
jno
cmc
ljmp
sbb
jno
out
mov
andnps
out
pop
sub
movsl
or
notb
push
rorb
mov
xchg
fnstcw
lods
ret
mov
daa
sub
fcoml
lahf
xor
inc
cwtl
jp
ja
arpl
sub
and
test
sbb
in
nop
aad
ss
shlb
andb
lcall
lcall
jae
and
adcl
dec
jbe
inc
inc
xor
push
sbb
call
sub
sti
xchg
shll
jb
adc
xchg
xchg
pusha
test
movsl
push
xchg
ja
dec
mov
fisttpl
xchg
ja
fisubrs
mov
xchg
xchg
ja
bnd
or
stos
test
mov
movsb
imul
push
es
fpatan
cmp
testb
sbb
aad
iret
sub
ja
adc
scas
popa
movsl
adc
and
aam
dec
pop
jno,pt
hlt
xchg
not
ret
sub
shrl
fcmovb
pusha
sbb
xor
jmp
in
inc
fisttpl
adc
jecxz
int3
adc
pop
mov
lods
pop
mov
cmpsl
sub
xchg
test
xor
aaa
sbb
movsb
lea
jo
dec
lret
out
adc
inc
adc
jp
imul
and
stos
adc
mov
xor
lods
mov
push
stos
push
adc
jno
jmp
add
xchg
and
ja
outsl
sbb
sbb
dec
std
sbb
sbb
mov
push
nop
sub
mov
repnz
lcall
hlt
das
jbe
into
or
xchg
nop
pop
xchg
cli
push
popf
aaa
xchg
sub
insl
inc
data16
push
adc
sbb
scas
xchg
das
leave
xchg
mov
cmp
aas
in
aaa
lcall
push
test
dec
or
aad
ljmp
outsb
mov
pop
sarb
dec
jge
add
icebp
pop
and
fcoml
mov
leave
mov
iret
mov
inc
add
mov
mov
je
xor
inc
adc
jecxz
mov
add
scas
mov
test
fnstsw
inc
test
cli
js
jno
mov
mov
add
push
inc
or
lea
jecxz
fwait
outsl
js
scas
std
out
and
lret
mov
and
mov
ss
add
add
ret
test
aas
inc
pop
mov
mov
imul
je
es
mov
pop
cld
mov
pop
jae
dec
fimull
jae
roll
paddusb
and
xor
xchg
push
bound
push
jbe
movb
or
fisubl
pusha
xchg
mov
add
jl
and
xor
xchg
mov
daa
ret
xchg
push
iret
add
pop
nop
jbe
rorl
gs
in
mov
or
aas
in
pusha
lods
add
xchg
adc
popf
sbb
mov
jb
lds
mov
sbb
push
inc
add
jcxz
adc
xchg
sti
jb
mov
adc
pop
jle
sub
or
ja
cwtl
vcvtsi2ssl
mov
and
push
sahf
test
test
pop
test
xchg
add
std
sbb
repz
movsl
stos
add
shll
mov
pop
imul
std
scas
add
jmp
mov
test
or
xor
cmpb
xchg
adc
push
and
jp
and
push
xor
aas
sbb
jge
and
enter
in
xor
push
jb
mov
push
icebp
sub
cli
fcmovnb
jg
rcr
sahf
aad
mov
sbb
repz
popf
fs
cmpsb
mov
popf
cmpl
adc
mov
outsb
aas
daa
into
sbb
jmp
mov
xchg
mov
outsb
lds
enter
les
nop
jge
dec
gs
repz
sbb
aas
bound
ljmp
xor
mov
jecxz
adc
push
mov
pop
nop
mov
popl
pop
pop
in
inc
fcmovne
js
dec
cs
inc
scas
dec
adc
mov
inc
jecxz
adc
shrb
push
mov
scas
xchg
xchg
rcrb
stos
push
mov
push
mov
sbb
jl
mov
jbe
fwait
push
int
fisttpl
mov
js
sbb
dec
ror
arpl
xchg
roll
push
mov
fldt
xchg
stos
xchg
fistl
xchg
inc
js
xchg
ds
jp
xchg
pop
out
mov
mov
out
adc
fsubl
rorl
pusha
fidivrs
outsl
sbb
or
cmpsb
ret
daa
sbb
dec
cmpsb
xchg
and
sahf
mov
cld
xchg
adc
mov
mov
add
cmp
jae
mov
aaa
inc
jmp
loop
add
fdiv
and
outsb
mov
jecxz
cmp
inc
add
mov
pop
les
aaa
dec
inc
aam
xchg
pop
sbb
sub
xchg
cmpsl
daa
ljmp
sbb
fcmovbe
xchg
fists
ss
or
xchg
push
inc
pop
mov
push
stos
jb
lock
mov
xchg
jg
pop
faddl
outsl
std
iret
imul
add
sub
sti
rcrb
push
xor
pop
int
and
mov
nop
ja
or
xchg
lahf
xchg
inc
fbld
sub
add
nop
mov
cmp
adcb
ret
sub
repz
fdiv
inc
popa
xor
insl
insl
js
int
sbb
rcll
pop
dec
push
test
js
mov
adc
icebp
sub
std
inc
jmp
jmp
add
mov
and
loopne
out
xchg
lods
pop
aaa
inc
or
sub
xchg
cltd
sub
sbb
jmp
shrl
dec
sbb
push
push
add
xchg
or
mov
inc
dec
lds
bnd
dec
nop
aas
jecxz
and
and
mov
hlt
cmp
push
xor
ss
popa
mov
cmp
insb
jg
push
and
jp
icebp
pop
and
rcll
push
mov
outsl
push
in
jns
mov
arpl
mov
inc
mov
pcmpeqw
xlat
push
fistpll
push
jae
lods
aaa
mov
out
sbb
test
outsb
pop
inc
or
mov
shlb
inc
leave
jmp
in
sbb
aad
sub
insl
or
inc
loop
pop
in
bnd
cmp
push
into
jo
dec
cmc
and
insl
push
or
and
lahf
cmp
push
inc
add
movsl
in
and
or
lea
pop
jmp
lcall
cmp
jmp
mov
movsb
cmpsl
sub
sub
jg
lds
pop
or
jbe
inc
pop
add
and
aad
pop
into
push
adc
push
sub
push
push
inc
pop
inc
nop
idiv
xor
and
mov
pop
xchg
push
lock
shlb
popf
mov
fwait
push
in
aad
inc
clc
add
mov
xchg
mov
cmp
std
cmp
cmp
sub
push
aaa
fstl
mov
jp
sbb
movsb
push
add
hlt
fsubrl
jp
nop
pop
in
movsb
mov
jbe
xchg
ds
push
xchg
and
sbb
adc
out
call
mov
sbb
push
mov
mov
inc
ds
xchg
cld
jmp
push
nop
push
negl
notb
adc
push
aaa
pop
arpl
dec
rcrb
shll
leave
sub
or
push
push
clc
mull
lea
xchg
mov
mov
fsubs
or
push
dec
sbb
jl
into
or
mov
inc
movsl
js
inc
repz
ljmp
add
gs
ret
sbb
int3
sbb
out
rorb
ss
dec
sub
mov
cli
and
sbb
in
mov
mov
outsb
dec
and
xchg
pop
std
inc
test
push
popf
aam
pop
fistps
cmp
jnp
xor
sub
stos
dec
jmp
sub
lahf
jbe
mov
mov
lcall
inc
cmpsl
jg
sti
ss
cmp
cmpsl
fcoms
lret
test
mov
inc
aas
mov
fists
js
or
lcall
shlb
sub
into
sub
or
ret
mov
lret
repz
rol
sti
scas
push
xor
pop
push
cmpsl
fisttps
mov
test
xchg
test
mov
scas
or
push
orl
xchg
rcrb
mov
pop
mov
push
or
lret
ja
mov
jne
rclb
xchg
push
mov
adc
into
sbb
pushf
xchg
pop
mov
sahf
xor
mov
push
into
stos
push
or
push
lahf
xchg
push
mov
and
or
ja
js
sbb
aad
pop
xor
jns
mov
addb
and
dec
cmp
mov
mov
and
mov
adc
and
mov
push
pop
ja
sbb
mov
pop
aad
mov
fs
jo
mov
les
mov
enter
pushf
ret
imul
xor
outsl
sub
xchg
leave
nop
testb
dec
fldt
out
add
xchg
sbb
ss
mov
inc
adcb
mov
or
scas
fucomp
pusha
aaa
xchg
push
mov
jecxz
or
pop
dec
ficoms
adc
aas
cmp
xchg
push
scas
ficoms
fnstenv
or
loop
stos
leave
ljmp
jecxz
pop
or
and
movsl
mov
cmp
pop
fwait
pop
cltd
cld
hlt
jne
aaa
add
mov
sbb
int3
les
sbb
out
cmp
jle
xchg
cmp
mov
mov
flds
add
mov
lret
clc
mov
mov
fidivrl
jg
sbb
sbb
test
aaa
dec
vpxor
cmp
daa
jb
fwait
inc
ret
popl
add
mov
int3
loopne
sbb
vstmxcsr
pusha
jecxz
sar
mov
jp
push
inc
jns
inc
fucomip
mov
in
pop
pop
cmp
shll
push
aam
fs
push
mov
or
pop
repz
sub
or
outsb
mov
lret
ds
xchg
mov
inc
inc
adc
sbb
sbb
out
jae
sub
or
out
pop
imul
data16
jmp
mov
mov
push
inc
or
mov
test
scas
mov
dec
inc
in
daa
push
ficomps
mov
testl
movsl
cmp
cltd
es
addl
cmp
jae
dec
mov
mov
pusha
dec
in
test
mov
and
or
pop
fldcw
mov
mov
out
inc
out
stos
or
rclb
ret
movsb
mov
lock
add
xchg
imull
push
stc
mov
and
xor
das
call
ficoms
nop
ja
push
ja
mov
out
xor
sub
push
scas
cmp
imul
pop
fstpt
xchg
xchg
aaa
pop
push
std
push
idivl
je
xchg
sbb
nop
ljmp
lods
addl
mov
std
aaa
inc
or
lods
sub
inc
inc
jmp
mov
push
test
bound
mov
loopne
add
popa
imul
clc
bound
push
and
pop
dec
dec
sub
aas
out
imul
into
mov
cmp
insb
out
loop
rol
xor
add
xchg
lea
jnp
cmpsl
jnp
xchg
ja
mov
add
mov
pop
and
jp
xchg
fbld
pop
cmp
cli
iret
sar
cmp
shr
cmp
test
pop
dec
mov
das
shll
mov
hlt
push
mov
xor
out
adc
mov
push
pop
push
cmp
and
stc
pop
mov
repz
pop
jecxz
stos
mov
xorb
imul
fsubl
cmp
and
mov
or
cmc
imull
daa
add
ljmp
ljmp
add
das
inc
push
test
push
ficomps
mov
and
sbb
cmc
stos
xor
cmc
push
push
or
pop
or
mov
cmp
lods
push
xor
sti
imul
dec
call
in
or
scas
nop
mov
jecxz
shr
pop
stc
imull
xor
ss
fwait
mov
jp
mov
dec
fbld
mov
test
rcll
mov
outsb
mov
cltd
dec
out
ss
add
or
mov
mov
push
es
or
andl
push
nop
cld
and
mov
movsl
xchg
inc
or
add
sbb
ret
dec
sub
xchg
sbb
outsl
nop
aad
cmpsl
push
sub
rcr
jnp
and
test
andl
fcomp
mov
ja
cld
mov
push
iret
ret
fdivl
test
jg
xchg
in
xchg
dec
imul
lret
and
aam
sub
daa
adc
lcall
mov
testb
pop
cltd
adc
jle
sbb
lret
aad
aas
sub
ja
lahf
aad
scas
xchg
rcll
cmp
xchg
push
cld
xor
sbb
not
xor
lret
push
lcall
adc
add
fisubrs
inc
scas
leave
sbbb
ja
add
pop
aaa
dec
add
mov
popf
insl
js
jecxz
mov
out
pop
sub
push
dec
dec
push
mov
ret
jg
int3
sbb
fstpl
ret
jecxz
insl
fsubl
fstps
or
js
dec
or
xchg
inc
mov
inc
and
imul
orb
sub
sub
mov
pop
repnz
jne
inc
sub
loopne
push
repnz
std
aaa
sbb
nop
fldpi
pop
mov
xchg
in
inc
lret
dec
and
ds
in
and
nop
add
mov
jae
sbb
pop
je
nop
mov
call
sub
cmc
nop
js
daa
outsl
cmpb
add
in
or
ret
popf
push
das
xchg
jle
dec
ja
out
aaa
sbb
daa
inc
push
inc
scas
xchg
cmpsl
xor
das
lea
loop
inc
sahf
addr16
mov
dec
and
popf
mov
xor
sub
jns
lahf
int3
lds
scas
add
jg
push
aas
jne
movsb
or
xor
insb
clc
push
add
mov
pop
inc
jns
icebp
inc
mov
xchg
aas
aaa
dec
xor
mov
iret
sti
mov
pop
xlat
sub
dec
cmpsl
lods
data16
sub
push
jno
scas
mov
loope
or
xchg
push
xor
sbb
adc
sbb
or
sbb
fcoms
jno
mov
dec
ret
int3
jne,pt
or
fidivrl
push
adc
scas
or
cmc
inc
mov
xchg
addr16
xchg
or
mov
enter
lods
lock
mov
and
xor
add
xor
and
fst
imul
xchg
push
mov
inc
sub
or
push
movsl
or
jmp
adc
dec
mov
insl
pop
xchg
ljmp
inc
cmp
inc
not
popf
nop
negb
and
xor
cld
imul
mov
nop
and
test
clc
mov
jg
push
mov
dec
sti
pop
aaa
mul
sub
daa
mov
jns
shrl
inc
pop
dec
adcl
mov
adc
mov
sub
push
gs
aaa
in
aas
mov
addr16
inc
push
lds
mov
lahf
pop
andl
mov
mov
adc
das
psllq
xchg
clc
jnp
inc
push
mov
pop
cwtl
xchg
xor
imul
imul
cli
leave
push
push
test
call
test
mov
aad
js
sbb
leave
aad
call
lret
add
lcall
mov
xchg
cs
xchg
scas
push
push
adc
pop
imul
push
cmp
filds
packssdw
cmpsb
imul
daa
mov
mov
mov
adc
gs
cmp
push
mov
popf
enter
xor
add
test
ltr
push
clc
pusha
mov
in
dec
lcall
cmp
testb
xchg
xor
lea
out
scas
or
xchg
sbb
fcmovb
cmp
mov
rcrl
mov
push
sbb
adc
push
ror
pop
lret
inc
push
mov
cmp
sub
mov
xlat
pop
in
inc
ja
or
sub
aad
into
pop
cld
gs
sbbl
pop
fists
mov
dec
add
pop
add
jecxz
divb
xchg
dec
stos
popf
inc
popa
adc
jmp
sbbl
sbb
lods
push
outsb
xor
xor
mov
and
cmp
mov
pop
sub
push
cmpsl
nop
jne
push
pop
push
push
xchg
psrlw
fcoms
jno
pusha
dec
push
xor
mov
ret
xor
idivb
insb
jae
add
jbe
mov
shlb
mov
inc
push
cld
nop
push
pop
loope
jge
jle
fdivrs
push
xlat
or
cmpsb
pop
shlb
int
mov
adc
int
je
aaa
cmpsb
xchg
xor
xchg
push
aas
xchg
popf
jno
jmp
pop
rcr
push
xor
rcll
ret
fcmovnb
jge
dec
out
pop
sbb
mov
add
ficoms
inc
sbb
sub
xchg
mov
xchg
shll
xchg
sbbb
cmp
lea
cmp
sub
das
fidivl
in
test
fnsave
aas
jns
out
dec
ja
mov
pop
pop
les
adc
mov
sbb
aaa
sarl
nop
pop
jns
rorl
pop
xchg
mov
cmp
sti
test
iret
push
inc
add
imul
xchg
cmp
inc
jge
fcoms
cmp
adc
lcall
test
xor
int
jg
subl
xchg
xor
mov
jmp
or
mov
jl
mov
jl
in
js
xchg
imul
rorl
pop
std
stos
stc
loope
in
xor
xchg
loope
sbb
xor
sub
mov
scas
int3
in
iret
gs
xchg
mov
ja
adc
jge
sub
mov
xchg
push
jecxz
inc
fwait
shrb
movsb
sti
aam
adc
ja
out
fcoms
xchg
test
ret
push
pop
pop
sahf
rol
pushf
call
scas
push
mov
adc
rcrl
sub
mov
pop
ror
subl
xchg
jne
scas
outsl
dec
push
jmp
jno
test
das
std
fcompl
dec
faddl
sub
xchg
jge
sahf
es
insl
cmp
fdiv
iret
std
cltd
xor
test
mov
cld
dec
cwtl
ss
xchg
mov
lea
nop
xor
xchg
add
pusha
fld
testb
pop
int
lock
and
or
mov
cli
mov
shrb
xchg
push
xor
jbe
pop
inc
movsl
imulb
push
arpl
js
pop
jne
cmp
gs
xchg
xorl
add
aas
cmp
test
and
enter
sahf
dec
pop
push
add
xor
in
jno
inc
test
inc
sbb
cmpsl
add
push
jno
ds
add
fs
sub
inc
adcb
testl
push
inc
cmpsl
fistps
dec
inc
stos
fcoms
cmp
inc
fadds
repnz
cs
sahf
push
cmpsl
sti
in
cmpsb
shlb
mov
jnp
mov
add
xchg
xchg
mov
ret
adc
add
jmp
dec
mov
mov
mov
lahf
fsub
scas
pop
loope
sbb
push
jae
dec
lds
xchg
mov
ret
mov
fisubrs
movsl
jne
push
mov
jmp
add
stos
lods
test
mov
cltd
sbb
jmp
or
adc
data16
dec
pushf
loop
inc
or
jbe
shrb
repz
cli
outsb
adc
stc
mov
mov
aam
sub
aas
mov
ret
negl
adc
or
sbb
clc
jp
stos
mov
aas
lods
shll
ja
clc
cmp
xlat
and
jecxz
add
gs
mov
and
js
das
xchg
mov
leave
iret
pop
sub
in
push
orl
out
dec
out
or
cld
pop
mov
xchg
imul
ret
fwait
adc
cmp
movb
jl
push
cs
lahf
scas
flds
sub
and
xor
jno
je
lock
in
sbb
mov
mov
in
lea
inc
dec
out
into
out
pop
xchg
dec
ret
xchg
sahf
and
jo
aam
nop
ror
xchg
add
in
push
addr16
pop
cs
das
mov
in
fisttps
mov
mov
adc
inc
mov
cmp
mov
xchg
out
shlb
movsb
dec
daa
addl
lds
mov
xchg
nop
dec
and
or
imul
adc
ficomps
mov
in
xor
pop
xchg
cld
push
push
cwtl
stos
bound
movsl
sbb
hlt
imul
pusha
dec
fldl
scas
loope
ljmp
xchg
fdivl
pop
repz
movsl
and
iret
sbb
xchg
jg
aaa
std
adc
dec
add
imul
jmp
cmp
xor
ja
push
dec
xchg
iret
push
outsl
xchg
roll
movsb
pop
jg
aaa
call
push
outsl
xor
mov
and
pop
mov
pusha
xchg
mov
sub
divl
pop
xor
fld
into
iret
call
stc
aas
mov
pusha
mov
mov
lods
jecxz
loope
stc
inc
cmc
sbb
fcmove
xchg
std
insl
push
sub
cs
mov
test
mov
push
cmp
jae
jg
in
jbe
outsb
sub
mov
into
mov
or
push
test
out
xor
xor
aad
int
insl
int
push
adc
leave
jo
loop
std
insb
xchg
pop
inc
stos
rorl
idivl
popf
testl
daa
mov
cli
mov
repz
sbb
inc
xor
aas
lahf
dec
popl
sub
jmp
cmp
pop
or
in
bound
dec
cs
or
xchg
loopne
pop
iret
out
push
xor
loop
popf
jbe
in
lods
lods
xor
dec
shll
cld
out
mov
inc
test
in
sbb
xorb
outsb
test
outsb
mov
xchg
push
pop
cmp
outsl
test
fcoml
xchg
daa
mov
cmp
inc
fwait
das
addr16
pop
ss
popa
push
es
push
inc
pop
lret
out
in
fnstsw
sti
fsts
pop
jnp
jne
sub
cwtl
push
sub
outsl
sahf
cmc
pop
inc
sub
push
mov
ss
cs
jno
and
sbb
dec
dec
push
or
in
js
mov
pusha
jo
add
xchg
ret
xchg
addr16
push
enter
shrl
mov
incl
pop
sarl
dec
cmp
mul
movsl
mov
xor
outsb
fsts
fwait
gs
jbe
jne
daa
ss
jbe
test
jnp
sbb
push
mov
adc
or
dec
sub
ret
cmp
into
aaa
push
inc
mov
imul
fs
notb
jne
cs
add
lds
nop
stos
sub
xchg
movsb
sbb
rol
and
dec
imul
ffreep
sbb
sub
push
mov
xor
and
imulb
dec
inc
and
mov
pop
xchg
lea
fs
mov
test
into
notb
inc
mov
outsb
push
add
xor
aam
lahf
and
adcb
mov
pop
jne
clc
add
out
cs
push
adc
adc
push
mov
push
sub
bound
loope
adc
adc
mov
aam
mov
sub
cmp
cmpsl
cld
pop
mov
sbb
cmp
rorb
push
arpl
jecxz
in
xor
mov
push
loope
inc
xchg
push
and
sahf
jmp
faddl
out
jge
jg
mov
addr16
jl
inc
leave
push
jo
scas
sbb
jo
insb
imul
pop
mov
arpl
pop
mov
pop
ja
dec
adc
frstor
int
insl
aaa
sti
xchg
xor
andl
clc
aad
xor
nop
dec
push
lea
nop
int
in
popf
int
xor
mov
shll
sbb
add
call
icebp
into
fcmovu
shlb
daa
rcll
xor
dec
shlb
insb
nop
ljmp
fsubl
fcoms
push
mov
mov
push
loope
push
popf
lret
cs
push
xchg
push
es
xchg
push
mov
xchg
push
mov
xchg
mov
and
xchg
lea
mov
lret
mov
js
stos
mov
fdivrl
out
xorb
sti
out
xchg
mov
popf
test
stc
mov
push
repz
nop
icebp
cmpsl
repnz
mov
jb
jg
push
push
aaa
push
nop
push
jecxz
pop
and
cmp
in
mov
adc
inc
mov
rolb
dec
mov
aaa
aas
jne
mov
dec
jge
pushl
mov
insl
popf
xchg
sbb
inc
mov
cmpsb
insl
pop
or
scas
push
add
mov
mov
sbb
shll
adc
les
mov
outsb
and
fdivr
jge
mov
adc
pushf
sarl
cmpl
xchg
int3
pop
sub
scas
shlb
lret
pop
xchg
rcrb
and
and
stc
add
jne
cmp
mov
mov
js
cmp
adc
xor
daa
rorl
je
adc
inc
inc
mov
xchg
push
pop
pop
pop
inc
sahf
sub
inc
iret
loope
arpl
and
inc
nop
mov
lret
pushf
xchg
loope
hlt
cmp
call
and
inc
mov
push
aaa
aas
std
cltd
gs
cli
adc
mov
test
ret
xchg
mov
arpl
mov
shrl
push
or
sbb
mov
push
add
sbb
movsl
outsl
inc
out
rcrl
je
push
pop
lcall
test
push
inc
lahf
xor
mov
movb
pusha
test
xor
dec
mov
testl
sbb
jge
jge
mov
rcll
xor
lcall
aam
daa
cmpsb
inc
mov
mov
cmp
add
sbb
inc
stc
add
mov
inc
mov
stc
mul
sub
inc
rcrb
xchg
dec
ret
inc
jbe
mov
jge
mov
mov
xor
or
adc
ret
hlt
fisttps
push
js
gs
dec
movb
mov
adc
dec
movsb
push
shlb
or
add
mov
xchg
cmpsl
adc
xor
pop
and
pop
mov
and
push
jne
pop
sub
aam
loopne
rcrl
in
movsl
sbb
sub
mov
sbb
icebp
push
ja
sbb
mov
xor
jle
pop
mov
inc
xchg
lock
and
xor
and
testb
add
lods
and
into
and
scas
lret
out
rclb
out
push
aam
das
mov
outsl
shlb
sarl
nop
dec
jnp
dec
rcrl
movsl
push
pusha
inc
test
jb
aaa
test
stos
mov
xor
int
int3
add
mov
movsl
testb
mov
orb
sbb
sub
jg
push
mov
loop
or
das
std
jle
cmc
lods
jo
jno
cmpsl
adc
mov
sahf
and
hlt
jno
cmpsb
std
jns
std
pusha
mov
fsub
es
imul
sbb
mov
mov
sub
dec
adc
pop
insl
clc
in
aad
push
in
rclb
sbb
inc
clc
inc
sti
gs
and
pop
cltd
ret
enter
mov
adc
hlt
adc
fsubl
push
sbb
jl
fsubrl
xchg
and
push
divb
xchg
scas
cmp
out
lods
or
push
inc
gs
sbb
aam
xor
daa
gs
cs
divb
inc
or
lds
sbb
push
enter
and
xor
adc
bound
mov
inc
inc
std
xchg
adc
push
xor
test
popa
loope
pop
movsb
cmp
int
rcll
and
repz
or
inc
shll
push
inc
cmp
push
fadds
bound
stos
jb
jno
mov
pop
and
pop
dec
loop
sti
xchg
inc
push
lods
mov
xchg
test
and
repnz
ret
push
setno
pop
xor
xchg
ljmp
xchg
or
cmp
dec
lret
int3
sbb
jl
test
xor
shl
xor
in
inc
outsb
pop
jnp
not
out
iret
test
jecxz
cli
sbb
jecxz
mov
and
gs
rolw
in
xchg
jae
mov
dec
rcll
aas
sub
jp
inc
int3
int
int
iret
dec
jle
pop
mov
and
test
rclb
daa
in
pop
inc
cmp
mov
push
push
push
xchg
bound
sub
hlt
push
sbb
pusha
mov
aaa
notl
adc
push
sbb
sbb
ret
pop
sbb
inc
lcall
gs
xor
test
ljmp
addb
mov
cmp
cld
in
mov
and
nop
jbe
jge
lds
jno
xchg
inc
insl
ja
xor
push
mov
ret
sbb
push
mov
das
xchg
sahf
adc
ret
sbb
push
xchg
inc
dec
scas
fdivp
pop
dec
pop
or
xor
aaa
testb
push
mov
dec
inc
mov
fistpll
popf
sub
cltd
sub
mov
js
cmp
mov
cmp
mov
repz
xlat
clc
xchg
push
sub
rorb
ret
int3
idivl
cmp
daa
dec
jae
mov
in
orl
nop
mov
inc
cmpsl
pop
xchg
mov
ja
push
dec
imul
dec
cmp
sub
aad
xchg
mov
lahf
push
nop
add
cmpsl
jno
push
push
addb
outsl
clc
movsb
mov
movsl
cmpsb
pop
and
jbe
jb
mov
jg
mov
not
or
sbb
mov
cmpsb
push
daa
adc
cmpsl
xlat
and
push
xchg
xchg
in
jg
loope
int3
lods
je
addr16
mov
sbb
fists
or
into
push
mov
mov
stos
adc
push
dec
ficomps
arpl
xor
inc
aas
sbb
push
xorl
fstl
loope
inc
divb
inc
pusha
sbb
out
lods
aad
ret
jg
lret
andl
lret
adc
xchg
fdivrs
pop
ja
push
xor
ret
out
nop
or
sahf
mov
inc
mov
pop
imul
or
xor
mov
daa
xchg
outsb
inc
lea
mov
cmpsl
lods
push
jle
pop
mov
inc
adc
pop
xor
dec
fidivl
aad
add
jg
sub
mov
dec
cmpsl
push
pop
popa
inc
sti
pop
fists
mov
and
xchg
jne
test
inc
adcl
test
outsl
nop
sahf
int
mov
cmpsb
xchg
adc
inc
push
cwtl
adc
pop
sbb
mov
push
lds
xchg
je
outsw
imul
iret
xchg
jnp
push
mov
lret
int
cmp
insb
adc
mov
xchg
scas
call
mov
cmp
ds
cli
in
dec
jp
push
and
xor
aas
std
add
mov
lahf
cmp
jge
inc
add
sbb
dec
out
nop
js
dec
or
mov
jge
imul
jo
lea
jne
mov
repnz
pop
andb
aaa
cmpsl
pop
ret
mov
cwtl
push
into
xchg
adc
je
jb
lahf
xor
mov
pop
lret
incl
pop
lret
int
push
adc
xchg
sub
mov
mov
push
sbb
pop
mov
push
dec
xor
adc
incb
cld
or
mov
mov
aam
xchg
test
push
and
push
pusha
aaa
xchg
sub
adc
xchg
xchg
mov
mov
xchg
xor
adc
or
mov
lahf
mov
or
jle
data16
std
xchg
lahf
adc
in
pop
test
lahf
pop
shrl
sub
add
cs
mov
aas
outsl
mov
sbb
ss
jmp
sbb
dec
push
mov
div
mov
aam
mov
inc
or
add
into
std
cmpl
xchg
push
rcrl
out
mov
insb
cmpsb
js
mov
psubsw
lcall
or
sbb
xchg
leave
cmpsl
sub
xor
rcll
xchg
mov
mov
ret
mov
mov
nop
or
jb
shlb
mov
pop
in
stc
lea
cld
lret
mov
int
jae
lds
jle
cmpsl
mov
shll
xchg
adc
pop
fwait
mov
lret
movsl
sub
ss
ret
pop
cmp
fs
sbb
sbb
and
mov
outsb
inc
es
arpl
xor
nop
sahf
filds
and
push
mov
nop
pop
cmpsl
leave
idivb
lods
mov
nop
scas
push
popa
dec
adc
rolb
xchg
lock
sarl
mov
bound
lock
lret
cmovl
cmc
add
lock
xor
sbb
scas
aad
cld
cmp
das
cmpsb
lock
mov
vpmovdb
aaa
js
pop
mov
mov
and
or
nop
jno
cltd
mov
pop
sub
arpl
mov
cmp
push
std
sbb
or
inc
mov
rorb
pop
negb
aam
push
enter
pop
cs
sub
jle
push
mov
in
aaa
jne
ljmp
sbbb
clc
xchg
cmp
dec
outsb
jp
lret
rcrb
add
pop
mov
sub
push
js
lods
mov
stos
cmpsb
es
scas
addr16
out
mov
cmpsb
sub
aad
das
mov
in
inc
jg
and
out
or
sbb
jo
xor
stos
mov
or
xchg
scas
xor
pop
sbb
imul
scas
dec
and
outsb
sub
lds
mov
mov
rolb
mov
sti
push
pop
lret
inc
orb
arpl
aaa
test
dec
lret
dec
jg
mov
into
testb
mov
add
mov
cmp
mov
xchg
or
mov
mov
out
mov
jne
repnz
mov
jbe
jnp
xchg
jle
cmc
xor
hlt
out
cltd
cmpsl
xchg
sbb
xchg
fwait
and
push
adc
xchg
loopne
test
pusha
call
xor
cmp
stos
push
aam
push
sub
xor
mov
adc
shrl
dec
test
xchg
jmp
sbb
out
jne
scas
xor
jae
ss
mov
or
shll
rcll
fcompl
add
jnp
or
pop
rorl
sub
negl
or
push
nop
jno
lahf
nop
inc
movsb
dec
insl
movsl
xchg
push
nop
and
popf
lcall
test
mov
ds
mov
gs
dec
xor
mov
sub
bound
add
into
dec
int
outsl
push
sarb
cmpb
and
outsb
and
sub
movsl
mov
lret
and
cmpb
push
lret
outsl
dec
lods
out
jg
adc
js
test
dec
nop
insl
outsb
ljmp
xor
cmp
xor
xchg
stc
push
lret
inc
js
and
cmp
ss
pop
mov
pop
leave
xchg
inc
cmpsl
ret
add
ficoms
nop
pop
jp
or
xchg
mov
ret
sbb
fs
cmp
mov
insl
and
inc
sbb
add
ret
cmp
add
fldcw
inc
nop
dec
scas
dec
pop
aam
sub
lds
sub
bnd
and
lahf
orl
jmp
ret
and
mov
test
ljmp
dec
or
xchg
shlb
pushl
push
std
inc
es
jge
addl
aas
dec
push
jle
in
cwtl
push
cmp
mov
xchg
pop
xchg
jb
das
out
or
xor
out
fisttpl
movsl
jmp
sub
lret
icebp
xchg
mov
xchg
int3
add
lods
imul
or
cs
shl
lods
cltd
push
in
add
ds
icebp
aam
sub
dec
addl
out
rcrb
popl
or
xchg
jnp
mov
loopne
into
jnp
imul
fwait
shrl
push
xchg
fsubrs
pop
xchg
cmp
xor
mov
js
pop
pop
push
mov
pop
jnp
fsubl
fsts
add
lock
push
jmp
inc
icebp
daa
and
add
loopne
lods
aad
cmpsb
mov
mov
push
repnz
shll
je
mov
mov
push
mov
xchg
push
push
xchg
sahf
jmp
dec
inc
popl
mov
out
adc
push
shrb
mov
push
adc
pushf
int3
stc
addr16
movsl
xchg
dec
mov
jae
or
adc
std
test
fistl
imul
ret
lret
out
aam
mov
push
push
jge
lock
mov
movsl
dec
out
dec
pop
fldpi
subb
adc
je
xor
mov
or
int3
inc
pop
and
inc
xchg
pop
outsl
xchg
add
subl
sub
inc
rcll
ja
daa
inc
mov
cmc
mov
dec
jmp
sub
popa
adc
js
jmp
mov
sbb
mov
sub
into
inc
leave
aaa
mov
and
lea
inc
movsl
mov
in
enter
shlb
mov
icebp
mov
or
cld
rclb
xchg
cmovl
das
mov
push
pop
fsubrl
xchg
inc
cld
insl
movsb
add
mov
lahf
xorl
push
mov
sub
and
les
jno
mov
rorl
mov
and
fcomps
dec
dec
stos
int
cmc
adc
movsb
jle
fcompl
mov
dec
xchg
pop
push
jle
mov
movsb
test
loopne
pop
inc
sahf
ud2
adc
dec
ja
aas
xchg
daa
pop
xchg
push
xor
je
mov
push
ret
outsl
sub
lahf
adc
pop
dec
and
and
dec
and
jb
inc
outsb
push
xchg
mov
pop
lcall
adc
xor
mov
adc
inc
enter
or
push
xchg
push
lods
jg
cs
dec
enter
in
mov
pop
pop
mov
push
repz
push
and
mov
cld
lock
flds
pop
xchg
movsl
and
out
mov
pop
daa
xor
sbb
test
xchg
mov
mov
fsubs
adc
test
sahf
sbb
ffreep
pop
pop
lods
push
jb
mov
xchg
es
sbb
push
ret
bound
pop
mov
rolb
dec
pop
push
mov
jg
mov
or
cs
jno
sub
sbb
call
jl
lcall
or
add
xchg
cmp
test
js
ret
rorb
std
in
push
push
jb
loope
into
test
push
pop
mov
enterw
stos
test
in
and
addb
cmp
shrb
add
in
mov
inc
jb
jae
ja
lret
in
popfw
iret
adc
mov
inc
scas
and
adc
outsl
into
pop
and
ds
push
jae
push
test
stc
pusha
push
sbb
roll
jge
or
pop
mov
ret
loop
xchg
roll
mov
mov
inc
add
hlt
loop
push
sub
pop
sub
mov
pop
scas
imull
xor
out
add
test
stos
xchg
xchg
jmp
sub
mov
out
insl
arpl
mov
fidivl
nop
and
js
adc
ljmp
insl
mov
mov
push
int3
xchg
stos
jno
out
stos
icebp
dec
gs
faddl
adc
shrl
scas
push
sub
push
clc
sbb
mov
mov
loopne
xchg
divl
rorl
arpl
in
lcall
and
inc
jecxz
lea
int3
int
std
rcrb
ss
out
jb
rsm
cli
pop
cmp
popf
pop
stos
jnp
push
sub
test
sbb
daa
fst
xlat
push
xor
lret
lcall
rclb
or
out
jmp
insw
rclb
xor
ja
int
pop
andb
cmp
xchg
aaa
js
inc
aad
cmp
sarb
bound
mov
ds
nop
lea
rorb
mov
and
in
jmp
test
out
cmp
lahf
shl
dec
mov
inc
mov
jbe
jg
rcr
arpl
adc
rcrl
bnd
call
dec
or
adc
fisubrs
add
mov
sti
jle
std
insl
rorl
js
fsub
lea
xchg
jle
inc
or
arpl
pop
xchg
pop
loopne
in
xor
mov
lock
sub
repnz
adc
mov
dec
jns
adc
mov
ds
stos
sub
or
jmp
or
nop
pop
mov
aam
xchg
sub
push
ret
testb
cltd
mov
testb
ret
dec
push
sub
popa
adc
sub
xchg
mov
flds
in
test
lahf
cmp
jnp
sub
dec
movsl
imul
in
mov
ss
jb
sysenter
out
iret
and
pushf
adc
inc
sub
push
pop
mov
xchg
pop
lret
mov
mov
inc
jg
rorb
outsl
js
lds
xor
ja
add
and
leave
scas
inc
and
nop
push
inc
xchg
scas
stos
xor
pushl
faddl
sub
fcoml
mov
xor
fnstcw
into
out
lahf
loopne
jge
and
or
fstp
pop
inc
pop
sbb
sub
xor
adcb
sbb
out
icebp
xchg
mov
inc
mov
hlt
xor
cld
repz
push
nop
push
test
dec
mov
outsb
mov
add
rcrl
xor
sahf
loope
mov
pop
xor
sbb
nop
or
incb
pushf
jle
gs
inc
push
cmp
gs
lret
inc
cvtpi2ps
dec
aas
ret
push
sbb
cmp
xchg
or
in
movsl
fisttps
mov
adc
pop
js
nop
cld
mov
sub
xor
out
lret
pop
xchg
cmc
mov
jb
movsl
jle
jb
jno
mov
xchg
lods
mov
ja
inc
mov
outsl
sbb
or
dec
shrl
pop
test
aad
or
jmp
mov
mov
jp
retw
inc
cld
and
pop
pop
int
pop
rolb
xchg
in
mov
out
xchg
fwait
push
aas
mov
test
cmp
mov
cmp
inc
outsl
addr16
int3
xchg
fs
adc
out
dec
or
mov
sub
daa
mov
push
pop
loope
sbb
adc
xorb
jp
stc
cmp
lret
and
rorb
aaa
fnstenv
xor
sub
nop
or
jnp
js
sbb
jmp
in
lret
aaa
dec
mov
push
movsb
lret
popa
push
shrl
and
pop
and
nop
imul
lods
rcl
pop
sbb
sbb
cmp
sbb
jl
xchg
push
scas
adc
les
jae
rolb
jge
imul
and
ror
lock
outsb
daa
cld
test
int3
pop
dec
in
or
jg
or
dec
mov
mov
shrl
jnp
dec
into
dec
aad
mov
pop
jbe
std
mov
addr16
xor
or
adc
loopne
psadbw
inc
out
nop
leave
jle
adc
push
xchg
sahf
mov
repnz
mov
pop
jg
stos
mov
xor
pop
dec
nop
or
movsl
ja
xchg
fst
popf
aad
xor
sbb
lret
or
shll
mov
lret
ja
dec
add
stos
mov
pop
lods
push
push
lcall
into
aas
inc
insb
push
mov
lods
mov
leave
aas
xchg
push
cmp
mov
mov
aad
jb
bound
pop
inc
out
in
sarl
inc
jmp
or
mov
call
stos
nop
mov
iret
inc
cmpsl
pop
sbb
test
dec
pop
ja
cmpsl
adc
mov
ja
jg
outsl
stc
into
jp
inc
inc
outsl
bound
fisttpll
aad
jl
repz
jnp
cmp
or
shlb
cmp
xor
pop
add
and
jg
adc
and
dec
in
dec
aad
pushf
ljmp
pop
mov
sbb
adc
mov
mov
sbb
mov
sahf
icebp
addr16
adc
add
fsts
pop
ja
xchg
mov
lcall
push
aad
xchg
mov
push
les
push
jo
fidivrl
dec
jmp
push
xorb
push
adc
fcompl
int
pop
dec
cltd
hlt
je
or
inc
stc
mov
arpl
or
dec
nop
fwait
scas
ss
inc
repz
std
iret
push
jg
out
add
movsl
mov
mov
aam
push
seto
rcll
push
hlt
js
xchg
pusha
pop
and
pop
dec
xchg
mov
dec
cmp
mov
xchg
adc
hlt
addb
mov
les
jo
outsl
mov
xor
and
sbb
cmp
push
call
jg
adc
push
stos
dec
mov
push
into
repz
inc
pop
xchg
push
mov
xchg
js
daa
test
inc
aas
sub
les
sbb
mov
js
je
inc
dec
mov
rorb
int
and
push
insl
ret
ret
fsubrl
shrb
xor
rolb
mov
out
jb
cmp
fadd
int
scas
les
sbb
xchg
mov
jns
mov
push
stos
sub
inc
js
mov
xchg
insb
inc
xor
iret
push
jae
lret
inc
pop
mov
mov
inc
lods
mov
dec
mov
push
xchg
mov
adc
sub
mov
aas
inc
addb
pop
imul
xchg
in
mov
adc
or
outsl
aaa
add
stc
aas
mov
inc
jmp
adc
jbe
push
sub
inc
clc
mov
adc
int
jg
dec
cmp
std
mov
cmpsl
fsubrl
or
stos
scas
and
mov
nop
lea
xchg
xor
push
enter
int3
jecxz
movsl
cwtl
or
insl
adc
sub
test
ljmp
add
iret
dec
mov
std
scas
dec
xlat
in
jg
push
sub
loope,pt
in
ret
out
data16
enter
jl,pn
add
jmp
test
push
jg
ret
into
pop
push
push
adc
mov
jmp
ja
rorl
mov
std
fadd
sub
mov
push
daa
shrl
xor
aaa
leave
jge
mov
rclb
nop
outsb
shl
scas
imul
sbb
pop
pop
adc
xor
jns
xor
inc
aad
nop
sub
adc
jne
daa
mov
test
out
inc
xor
in
xchg
cmc
jnp
or
aas
shll
push
and
push
lds
xchg
sbb
daa
lods
adc
add
pop
push
lods
cmp
mov
and
jge
lods
cmpsb
fistps
fnsave
inc
in
mov
xchg
fistpl
leave
mov
inc
nop
rorb
pop
xor
cmpsl
aas
mov
stos
add
fwait
mov
jo
mov
mov
out
and
dec
fstpl
icebp
sarb
xchg
xchg
lds
hlt
mov
sbb
in
inc
push
fxtract
mov
sub
lret
pop
xchg
or
test
xor
inc
jle
push
int
push
push
iret
js
lock
insb
mov
jmp
test
push
jge
push
and
xchg
ja
sub
jp
fisttps
in
fcmovne
xchg
and
lea
pop
jecxz
mov
sbb
sbb
cltd
call
jo
test
jmp
sub
js
cltd
sub
add
jns
mov
mov
in
je
scas
dec
cmp
push
xchg
std
cltd
sbb
aas
xor
out
jle
adc
sbb
call
and
adc
mov
adc
jnp
xchg
bound
adc
mov
pop
in
rclb
cmpsl
fldenv
les
add
adc
adc
stos
jb
and
aad
add
in
mov
mov
outsb
scas
mov
cmp
in
hlt
push
or
dec
push
xchg
cmpsl
ja
push
pop
aaa
iret
pop
mov
mov
stos
adc
sbb
xor
div
sbb
adc
push
cld
jecxz
xor
stc
cmpsb
in
sahf
mov
mov
push
divb
mov
dec
pop
inc
xchg
pusha
mov
xchg
xchg
push
in
daa
pop
xchg
sbbb
movsl
pop
insb
fists
lds
jnp
aas
and
mov
xchg
cltd
int3
ja
lods
lea
fcmovnb
outsl
outsb
repnz
push
pop
push
pushf
icebp
mov
rcl
cmpsl
inc
mov
push
push
bound
mov
imul
pusha
mov
inc
scas
push
in
add
inc
ficoms
fisubrl
mov
pop
jno
divb
pusha
inc
out
xchg
out
into
nop
daa
push
xorb
rcrb
ja
cmp
adc
int
sbb
push
jecxz
inc
sti
jnp
inc
add
mov
add
mov
mov
inc
mov
lds
mov
loopne
xchg
imul
scas
mov
scas
pop
nop
and
sbbb
or
fmuls
push
xchg
icebp
push
sahf
rolb
inc
aad
shr
leave
add
xchg
outsl
scas
stc
push
fwait
sbb
dec
inc
shrb
ljmp
cmp
sti
test
jo
push
call
jp
sub
out
mov
arpl
adc
leave
adc
pop
nop
outsb
jo
mov
fnstcw
push
xor
inc
das
push
shrl
cmpsl
adc
push
mov
inc
scas
and
jg
les
outsl
push
or
es
mov
mov
sahf
mov
pmulhuw
clc
stos
aas
cmpsl
fistps
lock
mov
cmp
mov
or
cmpsl
pop
jecxz
lds
cmpsb
std
ret
repz
enter
mov
dec
filds
jg
clc
ret
sarb
jmp
lcall
jno
shll
xor
sbb
jno
sahf
sbb
neg
aas
in
nop
jl
push
pinsrw
push
stos
sbb
aas
js
pop
int3
adc
data16
push
inc
leave
push
dec
xchg
mov
aaa
xchg
arpl
nop
xor
mov
outsb
xor
loopne
imul
xchg
xor
push
and
test
repnz
dec
adc
mov
cmpsl
xchg
pop
cmp
push
xor
xchg
push
xor
in
jmp
int
outsl
fildl
add
push
fwait
inc
nop
scas
repz
arpl
jae
mov
push
dec
flds
xchg
ljmp
aas
and
insl
in
push
fdiv
imul
sbb
or
scas
and
dec
popf
xchg
cmpsb
pop
or
imul
mov
push
lods
or
sbb
sbb
jle
cmp
das
fistl
lahf
mov
mov
stos
nop
lahf
push
mov
cmp
jg
pop
fwait
sbb
push
testb
push
push
inc
cmp
xchg
mov
mov
mov
dec
and
mov
jmp
fsubrl
or
sbb
imul
mov
mov
stos
call
sbb
jnp
inc
aam
jecxz
push
adc
hlt
mov
mov
mov
lret
lret
test
int
pusha
add
loop
jnp
sbb
xchg
xchg
orl
dec
mov
inc
pop
into
in
sub
jecxz
push
jnp
add
adc
push
dec
hlt
call
xlat
loopne
dec
mov
push
cwtl
das
push
pop
mov
mov
and
mov
and
sbb
push
or
sahf
stc
mov
push
das
push
lock
test
or
mov
jl
out
sub
cmp
and
addr16
inc
rolb
ret
push
jge
scas
push
nop
add
xor
dec
xor
lods
pop
std
sub
mulb
nop
cmp
cld
bound
sti
mov
out
cmp
out
xchg
xchg
out
rep
out
sbb
cltd
jmp
nop
mov
scas
aad
jecxz
or
xchg
dec
cmp
inc
and
js
pop
nop
dec
orl
sbb
cmp
outsl
inc
call
mov
aaa
mov
pop
repnz
push
iret
dec
mov
mov
xor
movzwl
pop
push
jecxz
pop
fldcw
or
mov
pop
lds
sbb
shll
test
js
xor
ss
into
jle
pop
xor
lock
lea
outsl
lret
shrl
cmp
stc
ss
addr16
push
and
lods
ljmp
mov
leave
xor
or
mov
into
flds
loopne
psadbw
xor
scas
scas
pop
fsubp
inc
jg
xchg
adc
mov
xor
outsb
aas
lods
xor
test
dec
aaa
jl
push
into
out
dec
nop
lahf
dec
sbb
jae
push
fld
cmc
test
icebp
lea
mov
iret
rcr
pop
nop
xor
add
jge
roll
popf
xlat
repnz
pop
xor
jns
push
iret
insb
roll
cmp
and
mov
xchg
push
cmpsb
dec
mov
mov
sbb
and
test
inc
dec
scas
xchg
add
mov
lock
insl
notl
or
movsl
jle
xor
sub
insb
xchg
shlb
mov
jle
aad
cltd
jg
es
mov
lods
int
pop
mov
pop
pop
mov
mov
in
fcoml
jge
jmp
jne
loop
inc
sbb
mov
imul
jbe
outsl
in
push
mov
jmp
push
jnp
push
mov
lret
in
xor
dec
adc
mov
pop
pop
sbb
xor
mov
xchg
push
xchg
in
in
and
fst
adc
cld
movsl
adc
mov
mov
in
xor
ficoml
mov
inc
xlat
test
xchg
cltd
mov
cmp
xchg
nop
add
sbb
xor
shlb
ret
insl
mov
ja,pn
popf
pusha
dec
jg
pop
inc
es
cmp
aam
mov
shll
push
mov
adc
pop
pop
and
aad
lret
jecxz
icebp
pop
rorb
inc
int3
mov
inc
in
mov
rcrb
popa
addr16
or
lea
fistps
loope,pt
testl
pop
push
lods
push
rcll
push
sub
scas
mov
nop
sbb
popa
jbe
fildll
and
insb
dec
cmp
mov
inc
cmc
jl
fcmovnu
xchg
shlb
mov
dec
dec
in
fwait
hlt
push
lds
xor
inc
inc
sti
aaa
iret
lret
push
dec
jl
xor
push
and
mov
clc
xor
push
out
mov
call
movsl
push
xchg
inc
xchg
lret
pop
fsubrl
sub
outsl
xchg
cmpsl
dec
fs
mov
cltd
stc
xchg
pop
mov
jle
pop
fld
sbb
enter
mov
sub
inc
aas
add
sbb
ficompl
lds
lock
and
aaa
pop
jl
pop
push
or
jl
xchg
add
jae
out
stos
iret
jnp
out
daa
movsl
mov
ret
cltd
cmpsl
hlt
bound
movsl
or
je
andl
shl
pop
xchg
rcrl
rorb
sbb
inc
or
insl
cmpsl
leave
pop
fwait
jmp
jb
pmulhw
loop
dec
xor
ja
sahf
xor
addr16
imul
or
mov
in
push
daa
pusha
and
lahf
or
jbe
sbb
fsts
popf
mov
jo
xor
faddp
dec
mov
dec
pop
mov
rcll
stos
push
leave
cmp
dec
add
movsl
into
push
cmpsl
iret
xchg
mov
stos
push
aad
addr16
btc
jno
xchg
dec
inc
aad
jmp
popf
arpl
outsl
sbb
xor
add
push
in
aad
ss
cmpsl
fmull
lock
ss
pop
jns
daa
mov
rol
fwait
aam
xchg
sbb
js
or
adc
xor
loop
mov
mov
je
and
dec
dec
sub
repnz
mov
or
cmpsl
js
nop
outsl
nop
mov
pop
mov
lods
int3
pop
addb
mov
and
outsb
dec
stc
pop
inc
xchg
aad
pop
sub
inc
pop
xor
or
push
mov
sbb
lods
mov
adc
outsb
sbb
mov
ret
dec
mov
add
dec
outsl
inc
dec
out
pop
pop
sub
mov
aas
outsb
mov
dec
jnp
xchg
lahf
pop
mov
dec
daa
mov
ja
jg
rclb
xchg
adc
vmwrite
lcall
push
mov
inc
jns
movsl
push
int
rorl
bound
les
xor
adc
repz
push
push
mov
adc
xor
push
fnstcw
fidivs
push
std
mov
inc
flds
inc
push
sub
stos
xor
inc
dec
aaa
or
push
and
xor
fucom
push
sarl
dec
add
mov
and
xchg
mov
dec
or
lds
dec
mov
int3
mov
in
cmp
rcrl
jge
dec
mov
movsl
aas
mov
and
sti
ds
xchg
daa
or
sahf
pop
jp
and
and
scas
sub
int3
out
xor
xchg
test
hlt
adcb
pop
sub
jg
add
leave
out
sbb
mov
mov
loopne
jbe
aam
mov
pop
pop
out
lds
mov
xor
pop
cmpl
shlb
xchg
lods
lds
push
shrb
lods
sbb
fimull
xadd
adc
subb
add
xlat
mov
iret
mov
pop
sub
xorb
push
sbb
mov
cmc
jp
dec
lahf
jo
sbb
and
ror
ss
mov
xchg
add
mov
ljmp
shr
jno
adc
movsb
cmp
mov
fmuls
ja
es
test
sbb
neg
xor
jge
pop
pop
daa
ret
ret
ret
and
fisubl
mov
sub
repnz
pop
or
js
aad
scas
mov
xor
sbb
jae
cli
push
jne
jge
pusha
inc
xor
xchg
lret
daa
sub
pop
add
mov
daa
adc
ss
push
int
test
lds
pusha
dec
incl
xchg
pop
xor
sahf
xchg
mov
outsl
adc
lea
rorb
mov
add
outsl
aad
imul
push
push
aad
mov
cmpsb
sbb
cmp
lea
and
mov
sbb
jge
jnp
pop
xchg
jecxz
adc
scas
jle
adc
mov
pop
jg
into
pop
push
jo
inc
fnstenv
push
cmp
mov
mov
and
int
mov
cltd
jle
jmp
lods
call
xchg
inc
push
clc
scas
cld
jp
dec
iret
mov
xchg
jnp
scas
lea
xor
in
ret
xor
push
dec
and
adc
fildl
outsl
les
int3
movsb
clc
mov
push
inc
mov
sahf
and
dec
insl
lahf
mov
inc
nop
pusha
sub
inc
ljmp
gs
out
int
mov
movsb
lret
fcmovnb
test
pop
adc
outsb
sbb
outsl
cmpsl
mov
add
jb
cli
mov
scas
test
lret
mov
fcomip
mov
xchg
mov
je
pop
ss
xchg
rcrl
xchg
test
jno
or
mov
addr16
mov
js
mov
subb
mov
mov
mov
sbb
imul
push
dec
das
or
jg
leave
aad
imul
cmc
xchg
mov
or
pop
or
faddl
dec
xlat
pop
mov
xchg
or
cmpl
pop
sbb
or
cmp
jge
movsl
bound
inc
mov
ret
pop
lahf
out
stc
xchg
xor
sub
cmpb
and
cmpsl
xchg
aad
ss
and
outsb
aad
aaa
or
lds
jbe
loope
stos
mov
test
or
mov
mov
mov
dec
fwait
addr16
ja
ja
push
insl
test
inc
push
fdivrl
fdivl
jne
enter
fisttps
pop
xchg
jae
mov
movsb
stos
movsl
leave
inc
lahf
dec
test
into
mov
rcl
aad
aas
dec
adc
clc
mov
daa
push
jmp
jb
push
in
inc
jns
jg
cmpsb
dec
push
or
stos
push
or
imul
fldcw
adc
jecxz
lock
push
push
inc
xor
inc
push
sub
jne
movsl
add
scas
fdivl
repz
push
add
mov
mov
je
inc
pop
mov
pop
rclb
jle
mov
imul
push
gs
jbe
xchg
cmpl
fstpl
dec
in
xor
pop
mov
stos
nop
cs
xchg
mov
mov
stos
pop
fsub
rolb
mov
pop
inc
arpl
fnstenv
adc
push
adc
outsl
xchg
xor
loope
insl
repz
push
cmc
or
sub
jmp
repnz
call
adc
inc
test
inc
and
and
xor
inc
int3
fsts
push
daa
outsb
jg
mov
sub
subb
push
sarb
hlt
out
dec
inc
leave
inc
test
cmp
rol
or
xchg
pop
aaa
xchg
jbe
inc
push
aad
ss
nop
jbe
sbb
pop
pop
push
xchg
aaa
mov
inc
xchg
push
mov
ret
jnp
inc
ja
xchg
mov
push
cmp
fdivl
jl
push
sub
sub
push
xchg
adc
add
push
fbld
mov
mov
mov
incl
add
int3
mov
xchg
add
push
std
adc
mov
sbb
inc
mov
rorb
or
mov
adc
lahf
xchg
xor
fs
xchg
lahf
sar
out
and
mov
sbb
shrl
lock
inc
cmp
xchg
add
roll
xchg
je
xor
fmull
cmp
clc
mov
xchg
xchg
lock
insb
sbb
jge
dec
sbb
jae
sbb
xchg
mov
ja
stos
sbb
jb
push
shll
pusha
mov
xchg
leave
fs
jg
mov
fwait
gs
nop
out
xchg
fs
mov
xor
push
cmpb
mov
flds
xchg
sub
aaa
les
add
call
sbb
cmp
movsl
ret
sbbl
dec
cmp
xchg
cmp
mov
push
shlb
jge
mov
std
mov
adc
ds
insb
and
shll
mov
cmp
sbb
add
mov
dec
je
das
icebp
jb
jo
jmp
mov
ret
add
mov
in
ret
rcl
test
clc
daa
mov
inc
ljmp
lods
xor
ss
clc
and
scas
mov
pop
fdivl
andl
movsl
sbb
mov
and
int3
sub
and
aaa
dec
bound
sbb
pop
push
mov
mov
in
inc
xor
orl
sbb
hlt
fnclex
daa
addr16
nop
cmpb
xchg
mov
pop
pop
stos
add
cwtl
sub
ds
xchg
pop
in
and
xor
in
out
std
mov
sbb
pop
dec
mov
xor
pop
xor
inc
push
outsl
sub
pop
sbb
sub
repnz
cmp
daa
das
or
cltd
out
stos
adc
push
mul
das
ret
in
out
mov
pop
push
adc
nop
in
xchg
mov
lds
adc
into
stos
push
loopne
movsb
push
push
mov
jl
outsb
adc
dec
xchg
repz
outsl
loopne
mov
cmp
push
lds
adc
test
jnp
stos
add
cmovae
pop
and
lea
cmp
or
mov
add
or
mov
mov
xlat
nop
fstpt
lea
adc
daa
push
call
add
ret
inc
fmul
mov
and
pop
xchg
orl
cmp
stos
and
addr16
lahf
or
xchg
lret
sub
xchg
cmp
mov
jle
add
push
jg
pop
sbb
stos
test
mov
inc
pop
push
mov
fs
jmp
pop
cmp
repz
test
or
pop
sub
fstl
out
les
push
xchg
aam
rcrb
xor
stc
push
cwtl
clc
ret
mov
or
ljmp
cmp
das
mov
in
xor
cmp
mov
cmpsl
nop
xor
mov
xchg
ljmp
dec
nop
stos
and
mov
sub
lods
sub
lss
jl
int3
stos
rclb
add
scas
push
and
cmp
jb
cmp
xlat
rcrl
jle
popa
jae
xchg
push
sub
mov
sbb
sti
mov
jbe
pop
adc
test
mov
pop
fcoml
xchg
std
into
push
out
shlb
pop
mov
lret
enter
pop
push
pop
mov
mov
or
push
cwtl
sub
xchg
pop
pop
sti
adc
aaa
xor
jg
rorl
into
adc
pop
pop
push
or
mov
repnz
and
xchg
ds
repnz
das
imul
mov
xchg
pusha
aaa
daa
sbbb
mov
sub
les
test
push
cmp
push
push
in
inc
jb
inc
nop
outsb
xchg
frstor
push
jns
xchg
or
and
jae
icebp
pop
in
pop
pmullw
xchg
imul
pop
mov
jnp
dec
cmp
nop
mov
stos
in
enter
aad
pop
pop
xchg
dec
jae
cmpsb
stos
push
shlb
push
cmc
outsb
and
rolb
push
xor
mov
push
std
int
inc
inc
push
int3
jb
push
scas
add
push
mov
mov
in
mov
repz
aaa
icebp
push
into
xchg
dec
xchg
pop
pop
xchg
nop
bnd
mov
pop
test
aas
xchg
dec
hlt
jge
stc
dec
xchg
push
notb
xchg
mov
mov
mov
adc
dec
adc
push
push
jmp
jecxz
add
push
push
out
xchg
or
int
lret
add
ror
push
jmp
nop
adc
lea
je
fisubs
mov
push
push
mov
xor
outsl
and
mov
adc
cmp
and
ds
and
ja
shll
jmp
cmp
pop
and
pop
divl
mov
jmp
out
stos
xor
outsl
repz
dec
xor
sbb
sbb
mov
pushf
adc
sub
mov
cld
aas
stos
cltd
into
imul
pop
div
mov
inc
mov
cmpsl
sub
sub
and
xor
and
sub
and
fcmovnu
jg
mov
mov
jle
dec
push
cmc
movsb
mov
pop
shll
xor
dec
daa
out
ss
loope
push
jp
sbb
mov
sub
dec
xchg
jns
xchg
stos
fstpt
pop
out
ds
sbb
mov
fsubp
in
mov
ss
push
sti
ret
push
cltd
and
push
loope
sbb
xchg
aad
inc
push
xor
jno
jbe
push
push
or
mov
std
add
jecxz
test
push
idivb
xchg
lods
pop
lds
insb
push
inc
daa
subb
sub
movl
dec
scas
inc
mov
jae
xchg
jecxz
pop
lods
jmp
xchg
and
dec
and
pop
xchg
push
push
add
push
mov
adc
lcall
jg
or
xor
arpl
cmova
int3
lahf
adc
push
arpl
stos
or
xor
mov
dec
pop
dec
aam
gs
std
pop
ljmp
jecxz
inc
jp
sbb
ss
movsb
and
sbb
in
cmpsl
push
push
xchg
and
mov
mov
jle
mov
cmp
inc
lcall
gs
lret
or
inc
jge
cld
fsubr
or
xchg
pop
stos
and
hlt
and
in
ss
lods
adc
adc
and
test
sbb
jle
cmc
adc
cmp
pop
stos
push
sub
mov
lods
xchg
adc
sub
push
xchg
inc
adc
sti
mov
xlat
fs
incl
xchg
subb
mov
js
pop
lods
fcomi
jecxz
jg
or
cmp
ss
lahf
lods
jle
push
shrb
dec
lods
mov
outsl
add
popa
fldl
insl
lcall
in
test
xor
sbb
dec
test
fs
iret
lods
cmp
nop
jge
cltd
push
in
filds
pop
shlb
adc
arpl
jle
adc
push
fbld
or
js
push
andb
in
test
shll
out
push
inc
rorl
fistpll
scas
dec
fisubrl
cld
xor
in
xor
inc
inc
pop
jne
mov
cmp
mov
mov
inc
imul
outsl
or
ret
test
aam
and
adc
jecxz
sbb
fld
sahf
shll
jg
in
inc
xchg
iret
xchg
mov
iret
dec
jns
xchg
mov
adc
or
dec
adc
inc
fdivr
loopne
cs
xor
sbb
inc
ret
rclb
inc
jp
add
fsubrl
jae
jae
in
cmp
and
mov
and
jge
bound
cltd
nop
scas
rcrb
mov
push
xor
and
xor
cmc
ret
adc
lods
out
sarb
lret
sbb
xor
cmpsl
pop
es
addr16
inc
mov
nop
adc
inc
jne
dec
and
into
dec
push
mov
push
dec
ja
cmp
test
out
out
cmp
into
lds
xor
jns
rcll
inc
movsb
test
or
pop
daa
popf
ja
and
push
push
ret
cmp
je
nop
popf
mov
test
jnp
jbe
scas
push
sbb
cltd
aas
inc
test
push
and
pop
les
sub
inc
aas
ja
es
and
les
xchg
cs
stos
loopne
mov
daa
out
adc
or
jg
rclb
jne
mov
ja
scas
int3
add
cld
jle
jge
ja
enter
inc
jbe
push
in
fisttpl
test
lods
and
push
jl
sbbb
adc
jo
das
cmp
jne
inc
sub
and
and
or
and
repz
scas
aam
and
mov
aas
and
in
sub
std
and
icebp
lea
mov
xor
add
lret
stos
jecxz
ja
decb
pop
ja
pop
arpl
movsb
and
or
push
scas
mov
lret
enter
mov
fwait
adc
xchg
les
push
sub
sub
mov
jecxz
mov
inc
movsl
push
ffree
xor
ds
fisubrs
inc
adc
out
inc
and
mov
cmp
aaa
stos
cltd
test
fmuls
pop
insl
inc
test
bound
adc
mov
mov
inc
xchg
lds
divl
add
xchg
gs
sub
in
mov
fsts
pop
enter
sub
xor
dec
hlt
mov
pop
sbb
scas
lds
mov
jle
cmp
mov
lret
pop
hlt
xor
adc
add
dec
stc
pop
arpl
mov
adc
inc
stos
xchg
push
mov
jge
sub
xchg
lret
test
mov
stos
outsb
iret
divb
cmp
ret
ja
mov
out
push
push
jle
leave
mov
or
lock
cmp
int3
mov
fcmove
fcmovb
xor
jne
pop
jno
mov
inc
xchg
dec
idiv
test
push
push
shlb
mov
xchg
jge
xchg
mov
scas
nop
ror
fsubs
sub
push
aaa
pop
xor
notb
push
ds
out
inc
out
or
adc
ja
inc
iret
add
sti
leave
sbb
rorl
js
jle
mov
jl
mov
push
xchg
pop
ret
lret
outsl
in
pusha
std
fsubs
sub
repz
fldt
leave
rclb
xchg
inc
inc
add
mov
rolb
repz
inc
test
lods
inc
cli
pop
pop
fcompl
imul
pop
jno
mov
aaa
mov
rcrb
pop
jbe
push
mov
xor
rolb
cmp
cmpsb
jecxz
daa
push
into
sub
xchg
and
dec
sbb
dec
mov
sbb
dec
repz
mov
cmpsb
daa
xor
cli
movsb
push
jb
insb
sbb
enter
dec
jne
mulb
xchg
pop
lret
lea
nop
sbb
inc
xchg
scas
int
outsl
fbld
sbb
mov
jg
data16
nop
xchg
nop
and
int3
jl
sbb
faddl
test
mov
aam
xor
dec
das
nop
jne
es
int3
orl
dec
push
gs
leave
and
inc
dec
lret
and
aas
das
cltd
dec
sub
push
sbb
sub
and
mov
scas
xchg
sub
int
rcll
mov
mov
outsl
and
dec
insb
cmpsl
iret
js
mov
sub
es
movsl
vmovntps
sti
js
scas
jle
out
add
fcoml
jo
nop
dec
sbb
and
arpl
lods
push
xchg
xchg
js
into
js
stos
popl
aaa
sbb
sti
adc
mov
divl
cs
and
mov
pop
rclb
orl
mov
push
js
dec
in
sbb
jmp
in
mov
dec
fisubrl
mov
out
xor
fisubs
and
out
shrb
ds
ja
xchg
push
test
shll
fistl
pop
add
jge
jnp
jecxz
jmp
aad
cmp
xor
sbb
mov
add
fwait
xchg
jns
push
cmp
js
movsb
stos
cltd
pop
jns
nop
test
sub
fsubrs
jecxz
mov
inc
adc
mov
or
adc
mov
fnclex
cmp
cltd
xor
sub
xchg
mov
fwait
pushf
push
arpl
mov
ret
inc
testb
cmp
outsb
je
lcall
nop
xchg
mov
cld
pop
lret
aas
jne
sti
nop
cs
inc
sub
push
cmpl
ret
xchg
pop
cmpsl
rcr
addl
scas
push
ret
jnp
cmp
out
jle
int
jno
xor
testb
sbb
pop
dec
int3
mov
xor
inc
sbb
add
out
cld
inc
dec
pop
cmp
or
mov
shr
icebp
add
push
dec
scas
xchg
xchg
loope
shrb
mov
into
fildll
repz
dec
cmpb
icebp
loope
push
cmp
mov
insl
and
xchg
mov
inc
sub
cld
xchg
fiaddl
mov
aam
fisttpll
ljmp
add
dec
mov
push
mov
jae
fsubrl
mov
push
js
ss
gs
jle
daa
inc
push
push
stos
imul
sbb
lret
jbe
push
shl
mov
cmpsl
jge
adc
stos
addr16
test
scas
aam
mov
mov
xor
mov
in
jo
inc
mov
push
out
mov
jns
sub
sub
inc
orb
mov
stos
leave
loopne
pop
cmpsb
push
movups
adc
sbb
es
xchg
in
push
push
movsl
push
sbb
jne
andb
cmp
cmpsb
daa
and
mov
push
sub
call
lret
cmpsl
scas
adc
sarl
inc
jbe
xchg
arpl
ret
jle
in
xchg
shrb
jle
sbb
and
scas
lret
pop
push
inc
dec
fs
stc
mov
xchg
enter
nop
sbb
sahf
dec
mov
pop
sub
mov
mov
out
icebp
xor
xor
fistl
pop
out
scas
sub
rcrl
mov
jl
lds
add
xchg
pop
loope
mov
cmpsl
xchg
testb
std
lods
aaa
jmp
in
divl
pusha
mov
lret
leave
jmp
xor
mov
ret
int
inc
cmp
xor
inc
faddl
pop
jns
test
out
pop
dec
movsl
ret
push
adc
mov
js
sub
adc
jns
pop
push
xchg
mov
stos
sbb
andl
imul
div
add
flds
lret
out
iret
cmp
aaa
mov
loop
jae
mov
addr16
lret
xchg
or
shlb
sub
aas
ljmp
inc
addr16
clc
iret
inc
push
adc
sbb
cwtl
lods
mov
xchg
or
sbb
and
add
mov
mov
in
ret
fists
cmc
mov
xchg
sti
xchg
xchg
pop
lcall
scas
push
test
xchg
ja
stc
sub
rorl
movsl
adc
mov
pop
jne
icebp
mov
jg
test
mov
pop
insb
ret
xchg
adc
mov
mov
ret
dec
ljmp
xor
pushf
pop
push
jecxz
xchg
mov
jecxz
jbe
mov
cmp
aad
sub
nop
lcall
aam
lahf
xchg
aas
or
inc
scas
push
aad
aad
out
push
stos
jbe
add
pop
add
add
xor
pop
int
adc
inc
arpl
fisttps
xchg
int
cmp
sbb
enter
and
js
adc
jb
xchg
cltd
iret
ret
xchg
push
lahf
jne
push
fnsave
pop
daa
xchg
and
loop
dec
adc
rcr
pop
fadd
adc
dec
in
mov
scas
xchg
popa
xchg
or
scas
fs
int
outsl
or
xchg
mov
pop
stos
and
scas
sub
stos
in
jne
daa
sti
add
push
imul
sahf
adc
iret
in
jl
mov
aas
fwait
cmp
mov
lea
jmp
or
sbb
or
js
xchg
cmp
jbe
jmp
cmc
lods
sub
test
nop
xor
and
push
int
push
int
icebp
loopne
loope
push
xchg
js
pop
test
or
leave
cmp
rcll
cmc
adc
ret
dec
xchg
fldt
sahf
or
mov
js
sbb
ja
dec
inc
cltd
faddl
popf
xor
dec
mov
adc
out
mov
xchg
sub
mov
mov
gs
fs
push
xchg
mul
sub
pop
jg
lcall
cmpsb
int3
ja
popa
add
xor
icebp
sbb
cmp
in
cmp
aaa
xchg
lret
sbb
pop
jnp
adc
xchg
pop
pop
pop
pop
inc
push
arpl
imul
sub
arpl
cmpsl
or
jmp
mov
push
dec
xchg
push
shll
add
xchg
mov
push
shr
popf
ljmp
mov
icebp
jge
mov
add
aas
fdivrl
shlb
in
insl
mov
adc
mov
jmp
scas
js
enter
jnp
aas
dec
cmp
or
in
cmp
add
leave
rol
pop
rclb
mov
mov
jb
test
subb
cld
mov
pop
push
movsl
out
mov
aam
lods
push
jmp
add
nop
cli
jmp
popa
push
mov
adc
cmp
in
movsl
adcl
and
inc
pop
cmp
mov
inc
shufps
sbb
inc
fs
adc
lea
aad
push
stos
pop
dec
out
xor
ret
ja
xchg
pop
popa
push
rcll
inc
pop
cmp
fstpt
lea
pop
outsl
lods
stc
jne
movsb
push
mov
pop
mov
sbbb
in
mov
in
das
fstps
sub
std
lea
test
fdivs
pop
xchg
fdivrl
xor
sub
cmp
test
out
inc
adc
hlt
ret
dec
movsb
mov
cmp
lea
sti
and
jne
push
push
push
fisubrl
cld
dec
xchg
test
and
xor
dec
mov
stos
test
addr16
addl
push
sub
imul
dec
mov
push
xor
in
adc
insb
sti
cld
push
test
out
sahf
nop
pusha
and
inc
fs
pop
stos
add
sub
inc
or
inc
xchg
mov
xchg
add
xchg
lret
pop
sub
addb
add
lods
or
and
movsl
pop
xchg
out
stos
lret
movsl
jnp
test
mov
add
into
inc
push
mov
sarl
insb
pushw
dec
incb
pop
add
inc
inc
sbb
aaa
fistpl
andl
jns
out
mov
push
mov
and
xchg
pusha
inc
leave
addr16
push
xchg
adc
and
inc
inc
dec
push
or
subl
aaa
mov
push
push
inc
xor
sbb
in
sbb
inc
xchg
or
add
ja
push
lock
xchg
pop
fstpl
add
jo
jmp
les
mov
add
repnz
cld
cmpsb
or
test
in
ljmp
xor
cmpsb
mov
push
aam
in
push
xchg
adc
dec
lds
cs
add
aas
mov
imul
dec
cmp
xchg
mov
adc
mov
lret
sbb
and
dec
pop
inc
lret
ficoms
les
or
xor
cs
into
mov
imul
cltd
mov
aaa
insl
leave
or
fmul
mov
push
cmpsb
addr16
xchg
aaa
cmp
daa
pop
cmpsl
xor
xchg
movsl
sub
lahf
sarb
aas
fisttpl
mov
fstpl
pop
sbb
jecxz
mov
mov
pop
rcrb
cmp
repz
ds
or
xchg
rcr
jl
rol
out
mov
test
and
std
ret
push
mov
ret
jbe
fmul
roll
daa
mov
jmp
roll
pop
mov
nop
mov
cmp
aas
mov
xchg
mov
iret
lahf
in
adc
dec
add
adc
test
lods
mov
cmp
xchg
push
push
jge
jae
lods
dec
repz
xchg
test
rcrl
xchg
repz
inc
jmp
stos
push
pop
jb
mov
adc
jae
push
cwtl
and
xchg
sbb
ficoml
dec
jge
cmp
daa
add
aas
jne
sub
ds
sbb
enter
lds
ja
xchg
xrelease
push
fimull
in
insb
cmp
shlb
mov
leave
inc
mov
or
cmp
ffreep
cs
cld
pop
mov
fmull
and
ljmp
dec
leave
jbe
nop
rcrl
cld
pop
int3
sub
ds
in
mov
in
adc
push
pop
fistpll
stos
xor
push
in
aaa
and
mov
stos
es
push
jge
cmc
jmp
jbe
mov
movsb
aaa
jmp
cmpsb
dec
xor
lods
pop
and
cld
xchg
add
fildl
xor
out
mov
imul
dec
pushf
filds
push
ficompl
lods
pop
xor
fimull
push
mov
xchg
jb
push
das
movsb
scas
fadd
xor
jl
adcb
sahf
jg
nop
add
movsb
jbe
in
cltd
in
cmpsl
push
add
xchg
jg
lods
sub
sbb
push
xchg
loopne
fwait
xchg
push
mov
scas
nop
cmpsl
subb
xor
aaa
pop
mov
xchg
nop
mov
sbb
aaa
repz
jbe
adc
and
mov
out
xchg
jbe
nop
pushw
sti
das
mov
or
xchg
int
lcall
pop
xchg
inc
push
std
xor
push
mov
mov
jecxz
inc
lret
jbe
and
xlat
cmp
sub
outsl
loop
jbe
push
sub
adcb
push
pop
mov
mov
lock
mov
ret
push
shrb
lea
and
fisubrs
or
push
test
pop
idivb
mov
sbb
das
mov
loopne
into
pop
and
mov
sarl
xor
push
xor
jl
sub
ja
scas
sbb
ds
mov
pop
ror
fcoml
jmp
imul
mov
fsubs
jne
cmp
push
add
mov
idiv
or
push
cmp
ret
daa
push
xchg
inc
fisubrs
cmp
imul
pop
jnp
loop
jmp
mov
xor
push
mov
bts
jg
push
push
cltd
xorl
jge
mov
mov
loope
cmpsl
ja
xchg
xor
cmpsl
inc
push
mov
xchg
neg
addr16
sbb
movl
iret
xchg
xchg
shll
ja
jnp
inc
mov
and
test
movsl
cltd
inc
mov
jp
add
xor
jae
nop
rclb
sahf
add
out
xchg
push
jg
loope
or
mov
lea
mov
pop
iret
idivb
lods
insl
sbb
push
mov
push
fnsave
lret
lret
jmp
cmp
adc
popa
cmp
jb
int3
sbb
inc
add
test
adc
sub
jnp
xchg
pop
push
mov
movsl
scas
sbb
test
out
js
cmpsl
push
jae
sub
xchg
ss
sahf
ss
fcmovne
inc
lahf
shlb
and
es
xchg
les
notb
jl
stos
cmp
mov
inc
mov
mov
xchg
dec
push
add
push
mov
mov
sbb
lds
aas
or
dec
fwait
push
lock
push
mov
xor
adc
rcll
mov
push
xchg
mov
movsb
xchg
dec
rep
or
lds
sbb
sti
lea
inc
gs
pop
push
cmc
std
jns
lods
add
ficoms
push
push
jl
adc
rcll
vandpd
mov
dec
dec
push
and
movsl
mov
push
push
push
call
push
mov
inc
adc
aas
mov
adc
xor
xchg
cmpsl
into
aam
push
inc
ret
jno
adc
cltd
enter
mov
mov
push
mov
push
cmpsl
into
push
push
push
xchg
xchg
mov
and
sub
adc
and
xchg
dec
adc
jp
push
mov
jg
mov
mov
xchg
mov
jno
push
mov
push
rcrl
gs
in
jmp
push
das
popf
jbe
mov
dec
lret
pop
adc
lock
mov
cmp
push
jb
sub
dec
in
cld
jg
cmpsb
pop
int
scas
xchg
scas
faddl
dec
sahf
mov
xchg
imul
aad
cli
xchg
mov
or
sahf
mov
xchg
test
mov
daa
mov
sbb
cmp
xor
push
into
add
and
cld
jp
push
arpl
sbb
jge
and
shrb
adc
and
mov
adc
adc
mov
mov
sub
mov
mov
mov
in
dec
push
mov
jg
mov
lods
xchg
mov
push
test
nop
xchg
insl
sub
popf
out
adc
sbb
popa
mov
mov
adc
or
cmpsl
into
adc
fists
scas
cs
dec
ljmp
sahf
adc
nop
jne
ret
jb
lds
and
jecxz
jnp
mov
fbld
lods
iret
jp
sbb
stos
jecxz
and
mov
push
cmpsl
inc
adc
mov
arpl
stc
mov
loopne
inc
loopne
lods
pop
incl
xchg
push
fcoml
imul
push
shlb
repz
xchg
out
mov
xchg
cmc
addr16
mov
xchg
ja
sub
or
sbb
xchg
inc
or
mov
cmpsl
mov
xchg
cltd
dec
rorb
mov
jbe
xchg
mov
dec
xchg
dec
insb
subl
outsb
xchg
addr16
aaa
or
mov
mov
pusha
rorl
mov
add
stos
in
push
adc
sbb
xchg
xchg
mov
jo
mov
cmpsl
ja
xchg
data16
es
test
dec
push
cld
in
jge
push
pop
arpl
daa
inc
lahf
pop
mov
subl
add
xchg
add
xor
lea
orl
xor
inc
inc
pop
fdiv
adc
gs
pop
divb
fwait
push
inc
mov
mov
pop
xchg
mov
inc
nop
cld
bound
or
xchg
cmpsl
cmp
outsl
push
push
sub
inc
and
mov
test
push
lea
loopne
adc
scas
ljmp
or
outsb
cmp
mov
loope
repnz
jne
xchg
xlat
imul
cmp
inc
lret
in
mov
scas
dec
dec
xchg
out
inc
aam
dec
sub
testl
test
and
sbb
sub
shl
out
into
jno
fldt
sub
enter
inc
in
in
aam
sbb
sub
add
jg
pop
loope
jnp,pt
enter
dec
outsb
mov
xor
outsb
push
adc
faddl
push
sub
jle
inc
and
mov
push
mov
pop
xor
int
sbb
std
out
or
in
cmp
xchg
fdivr
pop
cmp
pop
dec
or
sbb
aad
nop
mov
cmp
shl
dec
jge
add
jnp
mov
cmp
pop
xor
fnstcw
cltd
jbe
mov
jge
ja
xchg
sub
aad
js
inc
stc
sub
out
cmpsl
dec
ljmp
popa
adc
test
pusha
rorl
dec
jbe
sub
or
scas
adc
test
xor
ja
sub
push
xchg
pop
push
test
mov
mov
xchg
pop
adc
pop
popf
scas
pop
mov
lcall
mov
adc
push
jb
jnp
dec
jecxz
xchg
std
out
jmp
sub
and
out
scas
push
or
repnz
std
pop
jecxz
leave
mov
mov
aas
repz
pop
jae
dec
pop
dec
es
sub
cmc
pop
leave
rcrb
mov
jo
js
xor
inc
cmp
jge
adc
pop
orb
lods
movsl
faddp
xchg
cmp
daa
in
ljmp
call
lds
pop
cli
jge
fistl
ja
mov
jle
popf
std
test
cmp
sahf
jmp
or
mov
leave
enter
push
jle
push
mov
push
cwtl
aad
cld
std
jecxz
repz
cmpsl
imul
xchg
dec
mov
aaa
hlt
shrb
pop
or
mov
or
repnz
aaa
nop
cltd
clc
xor
in
jmp
sbb
fucomp
pop
pusha
sub
loop
mov
aas
xchg
and
pop
outsl
call
mov
xor
mov
mov
inc
sbb
inc
fbstp
mov
sbb
mov
faddl
inc
stos
add
js
jbe
outsb
arpl
rcrl
lock
lds
pop
insb
or
jmp
lcall
shll
sahf
mov
je
shrb
pmullw
popf
ljmp
pop
add
push
pcmpgtd
cmp
jp
popf
cwtl
fnstcw
jno
xor
sahf
jnp
call
mov
pop
dec
add
add
pusha
inc
in
mov
push
testl
inc
push
sub
test
fbld
loopne
jbe
mov
fdiv
push
leave
js
dec
sbb
sbb
and
push
push
out
or
cmc
adc
and
js
xor
cltd
mov
sub
push
daa
imul
loope
add
inc
pusha
outsl
mull
sbb
out
adc
xor
scas
mov
push
pop
inc
mov
fidivl
arpl
ds
inc
es
or
mulb
inc
nop
jbe
pop
mov
push
es
cmp
icebp
es
pop
sub
jb
fwait
mov
into
cmp
cmp
sbbl
fnstenv
outsb
or
xchg
sbb
test
fnstcw
push
leave
mov
mov
xchg
dec
or
lods
sbb
mov
push
notb
fisttpll
push
add
stos
ss
pop
inc
mov
push
add
sbb
and
inc
jle
push
sbb
jecxz
sbb
jmp
pop
shll
jo
xchg
or
out
js
lea
push
fldcw
in
push
aad
push
sub
out
sbb
movsl
outsl
sbb
ss
ret
fadd
lock
fcoms
dec
mov
iret
sub
mov
flds
mov
mov
scas
in
push
push
imul
jle
daa
jle
mov
dec
scas
pop
in
inc
jne
daa
push
rcll
mov
mov
in
mov
dec
cmpl
adc
inc
push
ret
jecxz
sbb
or
jne
jecxz
xor
or
inc
enter
jp
call
mov
adc
test
xor
mov
jbe
or
cmp
jp
xor
jae
mov
xchg
inc
loope
and
stc
xchg
push
cmpsl
out
addl
shll
mov
push
xchg
jb
sarb
mov
out
mov
ja
xchg
xor
mov
cld
and
sbb
add
sub
xor
fmull
inc
dec
lret
lahf
fst
lret
push
push
insl
lds
in
mov
push
add
mov
adc
test
add
mov
arpl
push
sub
fistpll
test
arpl
insl
xchg
cmovg
pop
int
xchg
mov
popa
std
lods
icebp
push
movsl
push
push
out
mov
dec
xor
into
mov
fucomip
push
inc
push
cli
cmpsb
movsb
lods
push
ffree
jne
mov
insb
mov
pop
push
arpl
jb
fcompl
mov
shlb
lret
or
jle
cwtl
rorl
lds
addr16
sbb
xchg
scas
add
jo
data16
xchg
xchg
and
into
jae
lock
push
mov
cmp
lock
mov
xchg
nop
and
inc
cli
mov
aad
fcmovnbe
pop
mov
in
xchg
mov
sub
jg
nop
pop
add
xor
stos
mov
and
push
scas
inc
gs
adc
pop
jb
add
jbe
icebp
jae
inc
dec
jbe
push
jno
xchg
fstpt
movb
fcoml
mov
lret
icebp
mov
mov
int
xchg
cmpsl
and
nop
addr16
push
mov
pop
lods
and
bound
repz
adc
test
fsubs
mov
lds
pop
fmul
and
and
mov
mov
insl
adc
dec
into
ja
sahf
mov
mov
inc
push
mov
mov
out
push
xchg
mov
jl
mov
imul
mov
jmp
out
jecxz
cmc
pop
jle
mov
fsubl
aaa
cld
mov
in
imul
and
cmp
xor
enter
push
sbb
add
iret
dec
adc
mov
jb
in
dec
mov
int
pop
movsb
pop
and
cmp
out
shll
mov
push
xorl
xchg
fnop
lea
aas
dec
lret
xor
add
mov
js
xchg
mov
xor
fwait
aaa
xchg
popa
insl
adc
sub
mov
jnp
cmp
inc
adc
cmp
inc
divl
outsl
imul
push
inc
scas
dec
hlt
add
movsl
hlt
mov
cs
sbb
cmpsl
mov
nop
movsb
scas
decb
adc
outsl
cmp
insl
std
sarl
xchg
fld
inc
and
cmp
mov
mov
int3
mov
or
call
xchg
scas
jp
test
das
in
xor
mov
jae
inc
inc
xchg
stos
mov
jp
push
jne
jecxz
dec
insl
popa
mov
jecxz
push
out
dec
dec
in
xchg
push
cmp
pop
lods
sahf
rolb
cmp
adc
dec
ss
daa
cld
mov
xchg
push
cmp
lahf
push
adc
shlb
push
mov
push
fwait
test
insb
hlt
mov
mov
mov
nop
add
in
push
mov
push
push
jge
es
in
xchg
jnp
mov
test
sbb
xchg
mov
lret
fcmove
sar
xor
adc
jne
jae
es
or
mov
or
cmova
push
mov
inc
cmp
dec
and
and
addr16
mov
test
dec
mov
add
stos
pop
aad
imul
pop
push
xchg
jno
je
das
push
addr16
mov
xchg
add
test
aaa
dec
xchg
jle
in
jns
mov
movsl
pusha
push
push
into
ja
mov
imul
das
xchg
stc
mov
outsl
mov
push
int3
xor
sub
pop
inc
xor
lretw
insl
int3
in
add
pop
pop
jne
divl
pushl
jge
into
out
loop
xchg
aaa
sub
out
jbe
jecxz
jne
mov
adc
inc
sahf
in
idivl
ret
ror
nop
mov
mov
mov
js
and
push
xchg
movsl
adc
cwtl
mov
pop
imul
sub
jnp
in
notl
nop
and
icebp
xor
lahf
sarl
sti
or
mov
cld
push
jp
or
add
jmp
test
mov
out
xor
movb
out
loop
inc
push
stc
shl
push
sub
push
pop
push
js
or
xchg
dec
sbb
jg
nop
xor
cmp
loope
pop
in
jge
pop
dec
andb
adc
inc
lret
pop
es
rorl
xchg
and
jb
int
fldl
stos
scas
lret
push
inc
aad
int3
inc
pop
push
cmp
and
cmp
dec
into
push
fimuls
mov
pusha
into
cmpsb
mov
into
or
xchg
dec
xchg
aad
sete
sbb
orl
repnz
xor
cmpsb
xchg
xor
dec
adc
mov
mov
cltd
scas
xchg
aad
pop
mov
pop
sbb
stos
pop
incb
scas
dec
jge
inc
cs
cmpsb
enter
cmp
sub
xorl
push
jmp
xchg
mov
xor
cmc
mov
aaa
adc
ret
arpl
call
aam
shl
in
xor
loope
out
dec
aam
in
mov
ja
aad
xchg
xor
or
loope
add
jbe
adc
mov
inc
arpl
loop
push
ret
cmpsl
mov
pop
sub
mov
xor
and
mov
or
test
cmp
mov
std
push
xchg
and
adc
push
mov
pop
mov
mov
jne
mov
outsl
aas
nop
out
stc
xchg
xchg
mov
or
xchg
and
xchg
lret
sbb
stos
cmp
jns
scas
mov
jl
xor
fildll
out
xchg
sub
scas
jle
ja
lret
xor
push
pop
pop
stc
push
inc
popf
shrb
mov
lret
call
ds
sub
push
int
mov
in
jp
into
pop
xchg
pop
xor
imul
movsl
scas
nop
out
ret
mov
sub
sub
fistpll
cmp
add
xchg
xchg
mov
pop
mov
in
decb
gs
and
push
mov
adc
arpl
in
cmp
ficoms
mov
lcall
js
mov
ja
xor
cmc
push
fs
lret
xor
adc
fists
mov
mov
fadd
adc
dec
lret
fidivs
ljmp
or
in
cmpsl
push
xor
inc
rcll
push
jle
inc
and
adc
push
mov
xor
mov
mov
and
jb
xor
adc
jae
scas
ljmp
jb
jecxz
xchg
sub
jns
repnz
adc
movsb
fisubrl
cmc
sub
mov
adc
ljmp
sub
aaa
inc
imul
and
pop
lret
adc
mov
push
sbb
jmp
mov
mov
push
outsb
clc
inc
das
dec
movsl
adc
stc
pop
mov
push
movsl
cmp
int3
icebp
jne
aaa
aaa
push
mov
popf
xchg
test
aaa
adc
or
aas
pusha
cmpsl
pop
and
mov
in
js
cmp
mov
pop
mov
mov
das
push
xchg
xchg
push
xchg
ja
aaa
xchg
push
adc
inc
dec
pop
into
lock
test
dec
into
icebp
dec
mov
shlb
xchg
mov
pop
adc
cmp
xchg
loop
jo
sbb
inc
addb
xchg
out
pop
mov
js
mov
xchg
jle
jmp
out
jecxz
and
int
cltd
mov
mov
xlat
adc
les
int
sbb
and
jo
and
sahf
out
add
cli
jno
xchg
push
jne
mov
xchg
pop
sbb
ret
mov
movsb
sub
mov
inc
jl
mov
cwtl
xor
loopne
nop
xchg
mov
adc
lahf
push
sub
push
mov
daa
lret
ret
cs
and
sahf
test
mov
xor
stc
mov
js
ret
lods
rolb
loopne
dec
pop
lcall
dec
mov
lds
lret
xchg
in
aam
shll
mov
imulb
and
mov
popf
fwait
mov
sub
mov
ss
sub
and
lahf
push
aad
ja
jbe
cmpsl
imulb
jne
into
out
shlb
inc
mov
add
jl
stos
sar
mov
mov
aad
hlt
rol
xor
and
mov
mov
enter
sbb
aaa
imul
xchg
pop
add
mov
lea
mov
std
int
jl
lcall
int
add
sbb
fistl
adc
mov
test
pop
push
mov
cmc
mov
xor
sar
xchg
rcr
dec
js
pop
inc
dec
lret
cmp
fstpt
sbb
jecxz
pop
mov
incb
pop
xor
ret
repz
rep
stos
movups
jge
jle
out
dec
jg
les
cmpsb
sub
int
dec
mov
icebp
out
push
sub
subb
aad
mov
cmp
outsb
sbb
int
fisttpll
cmp
sar
mov
insl
sahf
adc
sbb
hlt
mov
in
pop
test
negb
mov
push
scas
aas
adc
adc
std
add
mov
cs
xchg
push
rcll
mov
ficoms
pop
out
push
decb
addr16
mov
push
jge
xchg
fnstsw
pop
fucom
test
mov
mov
xchg
iret
sub
jge
inc
inc
pop
push
push
pop
roll
imulb
dec
lds
out
data16
shl
ret
scas
test
push
addr16
out
pop
jb
jle
fidivl
mov
xor
adc
mov
jbe
in
aas
jbe
mov
ss
jo
sub
inc
lods
dec
pusha
mov
xchg
shll
mov
js
mov
test
cmp
scas
cmp
jecxz
mov
out
rcrb
ss
mov
scas
out
stos
fldt
cmp
cmp
fcomps
js
mov
cli
add
xchg
adc
inc
and
inc
sub
test
add
dec
or
out
in
mov
mov
push
xchg
pop
and
addr16
movsb
movsl
aas
nop
mov
mov
gs
incl
sbb
hlt
arpl
fimull
mov
lods
pop
inc
or
jecxz
test
pop
mov
push
xor
jg
out
das
ret
cltd
lahf
jbe
addl
pushf
ja
pop
loopne
jbe
push
mov
test
mov
ljmp
mov
xor
jae
sbb
les
jno
and
cld
pushf
cmp
pop
sbb
and
into
add
fucom
fcmovnu
test
adc
js
adc
fxch
jl
mov
and
ja
mov
mov
out
xorb
lods
sbb
dec
pop
lods
xlat
lret
xor
push
and
xchg
xchg
fidivs
ja
dec
aaa
test
mov
mov
and
and
mov
push
scas
gs
idivl
nop
ffree
mov
and
push
fnsave
je
into
out
dec
cmp
xor
leave
aas
jbe
inc
gs
out
iret
push
pop
pop
leave
mov
adc
aaa
cmp
pop
movsl
xchg
jno
push
jnp
jno
jbe
std
fnstenv
or
push
mov
mov
int3
mov
cld
lods
xchg
cli
xchg
movsl
out
push
mov
mov
imul
mov
jbe
mov
leave
xchg
in
xchg
inc
jmp
pop
lret
imul
mov
dec
pop
xor
jbe,pt
stc
ss
scas
pop
shl
pop
inc
xchg
push
ret
sti
push
xchg
inc
imul
sub
jb
cld
pop
add
add
adc
in
cltd
lods
mov
in
inc
add
cs
mov
cmp
enter
roll
leave
shll
jge
xchg
adc
bound
jle
fxtract
aam
push
rcll
push
sub
and
and
cmp
xchg
rcrb
das
push
jnp
ja
mov
xor
sbb
xor
or
push
arpl
inc
test
outsb
and
xor
fcomps
push
push
sub
in
aaa
sbbb
adc
xchg
sbb
fmuls
mov
mov
std
mov
cwtl
out
push
xchg
xchg
shll
cltd
ss
das
mov
lret
test
sub
or
pop
pop
and
ds
ja
jb
pop
and
inc
out
daa
nop
das
mov
test
lret
sete
xchg
mov
sbb
movsl
push
and
lea
xchg
push
dec
shlb
mov
add
in
push
popf
adc
dec
xor
cltd
mov
mov
stos
pop
fcoml
nop
std
push
leave
pop
aas
sbb
mov
leave
push
cmp
cmpsb
fdivp
inc
cld
pop
xchg
aam
cltd
daa
cmp
cmp
mov
mulb
push
mov
mov
and
stc
ss
lret
jmp
inc
ja
mov
aas
mov
sub
dec
lods
push
fsubs
mov
or
shl
pop
push
in
js
adc
fcoms
fdivrl
jo
dec
lea
movsb
jp
imul
mov
into
inc
sahf
fstpt
outsb
adc
out
into
aas
mov
outsl
push
fstl
mov
jo
call
jnp
sbb
sti
adc
pop
add
andb
xchg
int3
dec
aam
xchg
jno
mov
daa
sbb
jno
out
cmp
cmp
inc
cmpsb
add
inc
push
xor
sub
in
mov
and
mov
sahf
loope
test
add
mov
iret
add
fdivs
leave
ljmp
jnp
shl
sbb
mov
mov
das
dec
mov
js
aas
push
xor
xchg
add
or
xor
jne
mov
xor
fidivs
movsl
lahf
push
and
mov
mull
scas
inc
aam
cmpsb
push
xchg
sub
fcmovnu
or
sub
mov
mov
ret
popf
push
pop
mov
and
sbb
fsubl
loop
lahf
imul
dec
in
hlt
or
xor
sar
sti
movsl
insl
xchg
jg
xor
pop
adc
jbe
inc
movsb
xor
mov
jb
frstor
xchg
std
push
js
aas
mov
and
sbb
dec
scas
push
mov
pushf
jbe
std
js
mov
cmp
cmp
inc
mov
push
repnz
adc
sub
add
dec
mov
dec
push
push
mov
mov
xchg
faddl
loopne
xor
jae
pushf
hlt
out
cld
aam
cmpsl
sbb
adc
mov
xor
xor
mov
mov
stc
adc
inc
in
pop
xchg
addr16
mov
mov
pop
test
mov
push
inc
in
xor
hlt
xchg
sub
lods
push
aam
mov
and
mov
push
push
jle
rcr
xchg
jmp
imul
inc
cmpl
test
adc
jnp
neg
fmull
push
pop
popf
sbb
sbb
scas
rcll
ja
fistpl
add
cmp
push
sbb
push
out
in
imull
or
push
pop
icebp
aad
testb
xchg
cmpsl
fistl
rcrl
jnp
push
mov
movb
push
mov
shr
iret
or
mov
cld
aas
inc
lret
ja
push
aaa
es
insb
add
mov
mov
shrl
cmp
js
dec
stc
ffreep
in
mov
pusha
mov
insb
in
pop
inc
nop
lret
dec
mov
stos
xchg
push
fildll
ds
scas
shrb
fldl
xchg
xchg
ret
push
dec
mov
mov
push
mov
flds
in
xchg
dec
movsb
cltd
loope
xchg
xchg
jns
dec
mov
pop
xchg
cmp
jmp
pop
or
mov
fsubl
fldln2
adc
mov
loop
sbb
enter
stos
push
mov
insb
push
xor
cmp
xchg
fucomip
sub
push
jecxz
pop
dec
inc
dec
inc
gs
loopne
scas
aas
fs
xor
imul
xor
arpl
sub
adc
inc
adc
xor
mov
scas
and
stos
dec
pop
neg
mov
jle
in
xor
mov
add
shlb
addr16
adc
pop
jo
xlat
mov
mov
adc
inc
mov
xor
or
pop
imul
sarb
inc
push
sahf
xchg
lret
rclb
dec
gs
nop
and
xchg
jb
lahf
ljmp
nop
cmpsl
sub
lahf
sbb
xor
or
movl
xchg
aas
cmc
mov
jo
adc
in
pop
shr
into
and
gs
or
xor
repnz
sub
fcoms
into
rolb
shll
inc
nop
mov
mov
sahf
or
push
xorl
pop
jnp
push
cmp
cmpsb
std
jmp
iret
mov
sbb
xchg
mov
rolb
test
inc
int
xchg
xor
jno
mov
pushf
pop
xchg
pushw
push
jb
insl
jno
xchg
leave
ss
inc
jge
test
nopl
jbe
sbb
sbb
push
das
into
call
aaa
ds
mov
jno
xor
jmp
test
in
xchg
stos
imul
shll
mov
fisttps
dec
inc
stos
jne
repnz
test
lods
dec
mov
and
jbe
dec
stos
mov
push
xchg
push
cmp
test
jbe
add
xorl
stos
mov
in
dec
cmp
rorb
test
dec
std
pop
xchg
in
in
movsb
ja
xchg
jl
adc
adc
call
xor
je
cmp
push
mov
jnp
xchg
jle
jmp
pop
stos
aam
insb
addl
xor
and
pop
add
fsub
repnz
and
pop
sub
loope
enter
mov
addl
clc
xchg
dec
ret
movsb
jp
push
cld
mov
pushl
jbe
cmp
lahf
lahf
scas
ja
or
or
xchg
sub
fcoml
cmpsb
lds
sbb
sub
push
into
fidivl
daa
stos
nop
aam
and
adc
mov
xchg
xor
subl
lret
add
outsb
scas
not
adc
pop
jae
mov
test
inc
subb
std
dec
push
add
ja
imul
lds
cltd
jno
xchg
scas
mov
mov
ss
stos
pop
mov
mov
repz
sbb
dec
jae
imul
sahf
sub
push
ret
cmpsl
les
das
enter
rcll
lret
push
rcll
cmp
ss
sahf
mov
mov
jmp
mov
cld
sub
fwait
push
dec
xor
jmp
pop
jg
fwait
add
xchg
fildll
fmul
and
aas
scas
aaa
pop
cmp
scas
aaa
sub
cld
test
xlat
sbbl
mov
jnp
dec
jno
sbb
test
cli
call
jg
dec
xchg
insb
xor
cltd
jbe
outsb
insl
cmpsb
cs
jo
mov
push
xchg
negb
out
pop
ret
push
sbb
cs
xchg
es
mov
cmpsl
mov
in
stc
shl
pop
pop
adc
scas
xor
dec
js
xor
xor
pop
inc
dec
ror
js
fldl
sub
inc
mov
scas
xchg
inc
xchg
loope
mov
adc
repz
test
xchg
arpl
rolb
shrl
clc
out
inc
mov
add
sub
outsl
mov
dec
dec
cmp
push
out
mov
mov
xor
imul
push
in
push
push
pop
daa
mov
enter
repnz
adc
fucomip
movsl
xchg
mov
adc
in
je
nop
inc
cli
ret
push
xchg
leave
xchg
mov
push
mov
jle
int
jbe
lret
int
xor
fxch
sahf
add
jbe
xor
mov
xchg
scas
lahf
rorl
push
rcrb
ret
jno
sub
mov
jns,pt
lods
push
inc
out
adc
div
inc
in
xor
and
test
push
sub
js
push
pop
aas
call
jmp
je
cmc
std
nop
inc
jmp
pop
bound
lea
sbb
cmp
and
mov
mov
jne
pop
push
ljmp
jecxz
pusha
push
cmpsl
and
into
mov
aas
insl
xor
cmp
or
mov
rcll
xchg
in
mov
jb
jge
out
mov
push
jmp
jne
mov
js
xor
or
outsl
pop
ja
and
in
gs
mov
movsb
xchg
iret
mov
sub
jnp
xchg
adc
mov
scas
sti
and
jnp
jno
xchg
mov
mov
neg
ds
jg
lahf
sub
pop
into
jns
jle
icebp
inc
int3
jmp
or
inc
mov
mov
or
mov
mov
mov
inc
xchg
xchg
imul
pop
adc
jo,pn
fildl
and
bound
fcompl
or
jle
pop
nop
push
sbb
fidivrs
sbb
js
lods
cmpsl
pop
ret
jp
mov
mov
inc
shrl
push
test
jp
or
in
les
test
jp
aam
xchg
loope
cmp
out
xchg
and
mov
inc
cmp
int3
jbe
pop
ja
cwtl
adc
aaa
push
push
push
jbe
adc
jg
popa
or
xor
fdivp
aaa
mov
xchg
adc
push
sahf
push
and
dec
iret
pushf
daa
inc
into
aaa
mov
ja
outsb
aad
mov
push
push
adc
or
xchg
mov
lcall
xchg
nop
inc
mov
mov
fists
pop
xor
aaa
leave
xchg
je
mov
fnstenv
fsts
int3
out
inc
xchg
mov
stos
out
sub
mov
xchg
push
cmp
ja
xor
nop
inc
adc
push
xor
sbb
dec
sub
nop
outsb
mov
jp
mov
adc
in
mov
dec
lret
orb
cli
mov
push
xor
adcb
jge
mov
cld
xor
mov
out
imul
ds
sbb
sub
notl
lret
imul
mov
scas
pop
xlat
gs
pop
push
or
mov
andb
into
xchg
sub
sbb
arpl
push
cmpsl
sbb
incb
leave
mov
lea
jne
sbb
cmp
ret
jge
inc
mov
cwtl
fisubrs
inc
fildl
mov
rcrl
ror
insb
xor
sbb
adc
dec
out
mov
outsb
fisubrl
push
lods
add
jne
cli
dec
jle
jnp
jo
push
aaa
mov
mov
out
aas
jnp
ja
sbb
fisttps
insl
cmp
jns
movsl
int
test
add
leave
leave
xchg
mov
stos
inc
or
cmpsl
nop
mov
outsb
pop
push
jo
mov
sub
inc
mov
dec
adc
push
pop
sbb
add
insl
ret
sub
push
lods
mov
adc
fcoml
add
jge
mov
sub
add
shrl
shl
fildll
push
dec
scas
pop
sub
ja
int
pop
pop
popa
adc
rcll
pop
test
testl
cmpsl
test
push
xchg
pusha
sbb
movsb
cmp
adc
ss
xchg
mov
orl
in
push
sub
mov
adc
stos
xchg
sbb
ret
ljmp
mov
adcb
xchg
dec
in
daa
aas
xchg
in
mov
scas
pushf
fisttpl
fnsave
pop
inc
mov
push
jns
mov
or
push
dec
jae
add
outsb
lcall
lahf
push
sbb
ss
daa
xchg
jp
aas
in
addr16
imul
int3
cmpb
aad
push
shll
ret
ret
bound
or
gs
mov
lds
in
movsb
call
nop
dec
fmul
cwtl
daa
pop
sub
jecxz
fildl
pmaxsw
or
or
rcll
mov
jmp
fsubrs
xchg
shlb
rcll
repnz
and
jae
out
iret
jnp
pop
rorl
shrb
leave
cmp
into
stos
mov
xchg
jge
shlb
xchg
fisubs
pop
pop
adc
cmpsl
xchg
sbb
js
je
xchg
in
bnd
add
lods
mov
cmp
jge
mov
add
inc
add
pusha
in
lods
addr16
fisttpl
mov
js
decl
add
hlt
in
inc
aas
mov
adc
outsl
stos
call
imul
insl
add
sbb
aam
add
add
jno
pop
push
nop
mov
adc
push
adc
sub
aaa
adc
into
and
jo
xchg
pop
mov
and
jo
popa
into
adc
xor
pop
push
out
aad
xchg
jecxz
les
pop
mov
in
mov
adc
stc
rclb
adc
mov
adc
sub
push
xchg
scas
daa
lcall
cmc
xor
sub
fdivrp
xor
jp
stos
inc
loope
cmc
push
dec
add
xchg
adc
xchg
inc
imul
aad
int
outsb
xchg
dec
adc
pop
into
cmpl
xchg
mov
inc
push
dec
in
or
gs
rcll
lret
jg
icebp
xchg
xlat
push
shll
rorb
scas
xchg
push
gs
xchg
nop
lds
out
rcl
rcll
and
sbb
jns
loope
aad
jnp
scas
ss
mov
mov
lods
outsb
adc
ror
mov
int3
jl
cmp
adc
adcb
rol
int
cmc
dec
xlat
mov
pop
jl
sahf
jg
dec
add
and
out
xor
pop
and
xchg
leave
call
jno
cmp
mov
in
into
dec
jmp
jle
cwtl
adc
sbb
sbb
adc
push
and
push
xchg
xchg
arpl
mov
mov
outsl
insl
push
mov
jne
push
aad
adc
push
and
adc
dec
push
imul
sbb
test
or
jp
dec
cmpsb
adc
or
ss
dec
jbe
aaa
mov
mov
xor
mov
add
test
int
adc
jg
dec
jbe
xchg
push
and
push
xchg
pop
lods
inc
adc
aas
jae
mov
adc
pop
inc
mulb
inc
mov
cmp
negb
push
in
rcll
mov
js
out
test
mov
lds
sysenter
xchg
cwtl
dec
sbb
scas
dec
jge
mov
push
ss
daa
mov
xchg
aad
and
arpl
xchg
pop
push
loop
xchg
push
adc
jecxz
push
push
mov
inc
xchg
mov
hlt
jmp
shll
adc
out
stos
aam
dec
dec
out
jge
lds
mov
data16
add
push
out
xchg
mov
daa
ja
push
xorl
loopne
data16
aad
xchg
mov
loope
rcl
adc
push
loop
xchg
rol
cwtl
dec
dec
push
in
shlb
adc
adc
mov
xchg
xchg
mov
lods
adc
xchg
movsl
add
xchg
inc
ja
and
push
xchg
lods
mov
dec
dec
jle
dec
mov
mov
sub
push
outsl
mov
push
das
call
mov
mov
push
dec
stc
mov
push
cmp
xor
adc
dec
sub
into
je
adc
cwtl
xchg
push
jg
lea
pop
push
xor
push
xchg
push
ret
int
inc
dec
packuswb
push
push
mov
xchg
or
adc
out
mov
in
out
push
adc
pusha
mov
pop
mov
xchg
popa
and
loopne
xchg
push
bound
rcll
arpl
adc
inc
rclb
fs
into
adc
rclb
into
xchg
push
jmpw
rcll
push
jne
inc
rcrb
adc
cmp
or
aad
pop
das
jp
rolb
jmp
xchg
sub
pop
mov
mov
adc
leave
fistl
pop
push
adc
or
sub
pop
mov
push
inc
xchg
xchg
xchg
add
push
xchg
pusha
ret
pop
gs
pushf
xlat
mov
into
push
sub
mov
es
xchg
or
sbb
lds
das
sahf
jg
leave
mov
stos
xchg
mov
daa
mov
pop
push
aam
adc
mov
mov
aad
push
lret
jg
lret
dec
pop
and
daa
cmc
push
icebp
mov
xchg
xchg
in
mov
xchg
lds
es
push
mov
mov
in
dec
imul
push
adc
sub
outsl
jg
jg
jb
sti
aaa
jbe
stc
lea
sbb
xchg
mov
aad
mov
mov
into
shll
lock
mov
lock
mov
push
mov
adc
xchg
and
sbb
lds
jne
lds
mov
push
aaa
lds
into
mov
aaa
aaa
addl
mov
out
inc
lock
mov
adc
xchg
ja
sub
xchg
mov
xchg
push
mov
inc
xchg
jne
mov
aam
lds
xchg
xor
xchg
xchg
repnz
add
push
popf
lock
dec
shl
mov
push
ss
addr16
xchg
shlb
push
push
fcmovu
pop
mov
test
jnp
aas
ljmp
mov
aam
adc
pop
push
push
mov
aas
fcoms
jo
out
inc
push
test
xor
xchg
adc
ret
mov
arpl
push
dec
and
dec
mov
popl
push
and
xchg
jb
cmp
xchg
jbe
push
xchg
out
push
mov
push
dec
adc
mov
imul
adc
mov
push
xchg
adc
andl
aaa
lds
into
inc
mov
mov
and
xor
xchg
aaa
add
ret
add
mov
addr16
repz
ss
sub
addr16
rol
xor
add
outsl
jae
mov
adc
inc
push
mov
inc
mov
mov
int
push
mov
push
nop
sbb
inc
xor
dec
or
add
fldl
int3
rorl
xchg
add
push
test
xchg
rcll
gs
lods
push
mov
jb
in
push
aad
and
gs
dec
movsl
std
adc
daa
stos
push
jb
aaa
popw
dec
xchg
clc
aaa
out
push
mov
push
addr16
xchg
cmpsl
movsb
lock
out
adc
ret
test
push
mov
jns
push
int
bound
shl
adc
out
push
adc
into
adc
xchg
lock
gs
inc
push
mov
data16
rcl
rcrl
adcl
and
xchg
mov
call
push
fdivrl
adc
push
negb
jg
out
sbb
das
lock
fnsave
lcall
test
out
inc
data16
negb
popf
into
jnp
rcll
pop
arpl
in
push
int3
lock
outsb
pop
pop
push
nop
std
out
arpl
push
dec
xchg
fidivrs
push
xor
xchg
xor
pop
mov
dec
fsubs
inc
push
into
mov
js
lods
imul
stos
cmp
dec
or
dec
orl
ficompl
enter
rclb
xchg
mov
inc
in
icebp
push
push
cmp
lds
and
cli
push
xor
xchg
pop
adc
push
pop
shl
pop
xchg
outsb
or
das
jns
xchg
enter
xor
mov
std
in
out
imul
stos
xchg
sub
sub
fcmove
les
inc
shl
movb
scas
nop
cmp
adc
lods
out
cli
aad
dec
dec
adc
xor
push
dec
mov
mov
out
mov
adc
lret
addr16
inc
les
xor
mov
pop
insb
rclb
xchg
inc
adc
push
xchg
cmp
xchg
push
dec
dec
rclb
jno
bound
mov
xchg
mov
adc
push
movsb
stos
xlat
xchg
adc
jmp
inc
movsl
sbb
push
into
xchg
jg
ja
shrl
mov
std
into
out
adc
mov
mov
popa
and
rcpps
mov
xchg
mov
and
xchg
push
into
sbb
dec
aad
jecxz
jg
push
mov
nop
pop
mov
sub
xchg
mov
inc
adc
jg
sbb
out
dec
into
jno
in
push
xchg
repz
jp
push
insb
dec
inc
mov
jge
hlt
xlat
push
rolb
xchg
xchg
xchg
nop
jo
cmp
inc
pop
dec
nop
push
lds
das
mov
int3
loope
filds
imul
mov
xchg
mov
adc
xchg
aad
enter
flds
hlt
imulb
std
insb
xchg
cmc
stos
xchg
mov
xchg
lret
jge
pushf
push
mov
fwait
scas
fimull
test
out
notl
dec
xchg
xchg
mov
lea
out
faddp
enter
mov
push
rol
lock
cmp
pop
jg
mov
shlb
in
add
adc
lds
push
or
dec
jecxz
adc
les
in
lds
jne
mov
es
xchg
dec
push
lds
in
aam
das
mov
lcall
scas
mov
push
sub
push
inc
nop
sahf
rolb
push
mov
icebp
mov
push
xor
lods
not
jg
xchg
lods
adc
sub
adc
lds
arpl
adc
test
in
xchg
rclb
lret
jg
xchg
mov
aad
out
xchg
aam
jl
push
push
out
lahf
pop
xlat
push
fmul
jae
loopne
mov
and
cld
rorb
adc
or
icebp
insl
xchg
mov
push
adc
adcl
mov
xchg
pop
into
adc
fs
jb
ret
aam
jg
rorl
das
es
xchg
push
adc
mov
pop
mov
lods
shll
in
adc
push
incl
xchg
xchg
jmp
les
shl
scas
fstps
xchg
push
loopne
xor
xor
outsb
push
lods
lods
aaa
lds
movsl
jg
push
mov
lods
adc
xchg
jne
xchg
aam
adc
sbb
jbe
in
xchg
nop
xor
push
mov
xchg
in
stos
mov
call
lock
dec
and
adc
loopne
out
and
in
push
loopne
push
ror
pop
aaa
rcl
into
loope
adc
popl
pop
je
cmpl
mov
mov
stos
mov
lods
fwait
push
add
orb
inc
adc
pop
in
popf
xlat
lds
out
xchg
xchg
lret
xchg
into
rorb
sahf
adc
lods
push
xchg
out
fnstenv
push
mov
lds
out
fs
xchg
lods
adc
scas
dec
js
bound
int3
into
push
arpl
and
ja
mov
mov
ret
data16
mov
xchg
adc
xchg
push
daa
inc
gs
aad
adc
mov
rol
addr16
rcl
push
out
sbb
xchg
jo
pusha
mov
lds
popa
add
push
jge
dec
ljmp
mov
add
mov
mov
rorl
addr16
scas
rorl
rcrl
xchg
jg
fimuls
testb
lds
into
adc
xor
inc
sqrtps
mov
push
xor
rcll
lds
lcall
xor
das
mov
adc
jg
out
xchg
shlb
jno
push
mov
pop
out
dec
jg
xor
mov
inc
jno
mov
xchg
filds
stos
lds
push
pop
mov
push
push
adc
push
dec
or
ret
sbb
pushf
mov
adc
fmulp
les
daa
into
cmp
push
inc
daa
sti
cmp
call
daa
sti
cltd
stos
loop
enter
daa
sti
enter
enter
or
add
pushf
pop
adc
stos
push
iret
adc
pop
iret
fcoms
mov
out
test
popa
push
jo
lds
fst
pop
pop
jnp
add
xchg
push
iret
push
je
jne
and
dec
mov
js
rol
mov
xchg
cmc
push
pop
ret
notl
cmp
adc
sbb
dec
mov
sti
stos
push
rclb
xchg
pusha
pop
arpl
adc
xor
inc
notb
xorl
and
xor
jg
rol
std
push
mov
mov
enter
mov
jo
scas
outsb
inc
sub
push
outsl
dec
xor
jg
out
out
test
adc
insl
orps
add
xor
les
xchg
daa
xchg
pop
push
dec
jecxz
je
arpl
in
inc
mov
ret
jl
fbstp
and
cmp
or
xchg
push
mov
push
push
xchg
adc
mov
xlat
movl
out
data16
adc
xchg
adc
mov
dec
mov
xchg
push
mov
arpl
xchg
push
pop
clc
test
push
fs
mov
adc
gs
xchg
shll
dec
nop
xchg
addr16
mov
into
push
inc
dec
pusha
out
xchg
and
adc
mov
or
xchg
shll
dec
pop
das
adc
into
xor
mov
out
xchg
arpl
out
nop
pusha
loop
push
insb
or
jg
xchg
ret
push
jle
xchg
mov
sbb
cmc
filds
aad
dec
jg
mov
lds
pop
in
int
push
add
mov
test
out
sub
into
push
pop
aad
dec
insl
fidivrl
daa
dec
or
lret
movsl
jecxz
stos
stos
pop
cmp
aaa
stc
xchg
xchg
daa
dec
dec
in
lret
movsl
inc
daa
stos
out
pop
popf
adc
daa
mov
dec
dec
adc
sbb
into
push
js
adc
rcll
xchg
xchg
xchg
pop
xchg
jle
aad
mov
imul
push
xchg
jp
xor
jnp
aam
arpl
test
xchg
push
daa
xor
push
jl
int3
xchg
mov
xlat
xchg
push
loop
push
lods
dec
dec
push
mov
out
mov
rclb
xor
xlat
das
add
sbb
dec
xchg
push
mov
sub
push
mov
and
jle
data16
in
push
mov
xchg
adc
push
dec
inc
adc
jnp
or
push
xchg
adcl
cmpsb
sar
inc
lock
jg
xlat
inc
xor
pop
xchg
push
fstl
add
cmp
xchg
aas
add
adc
mov
xchg
mov
mov
icebp
rcll
mov
int3
rcll
mov
cmpsb
ja
dec
aam
nop
adc
lret
push
gs
xchg
xlat
ss
add
and
mov
xlat
xchg
pop
aam
add
pop
sub
xor
or
jae
and
js
jnp
test
fimuls
adc
movsl
mov
push
push
lds
stos
nop
push
adc
cmpsb
and
jg
adc
in
adc
scas
rorw
xchg
shrb
gs
push
lret
cmpsb
or
push
int
outsb
inc
inc
into
imulb
les
ss
scas
push
push
mov
sub
loop
xchg
mov
pop
clc
mov
xchg
sbb
out
loope
sbb
dec
pop
adc
rorl
pop
int
xchg
jecxz
js
push
cmp
mov
mov
xchg
xchg
shll
push
les
push
xor
xchg
out
and
push
xchg
out
jg
xor
enter
aaa
push
dec
and
xchg
aad
gs
cmc
loope
ror
adc
sbb
dec
adc
mov
mov
inc
dec
loopne
jecxz
popf
aad
xchg
mov
xchg
notl
into
push
push
in
xchg
mov
adc
xchg
shll
adcl
add
push
daa
push
mov
xchg
push
lret
aad
lds
push
loope
or
or
ds
shll
and
rclb
lds
jecxz
or
not
mov
adc
inc
aam
xchg
xchg
es
mov
cmp
push
out
les
mov
scas
and
dec
push
adc
stos
arpl
aam
mov
adc
cmpsb
mov
xchg
in
push
or
push
mov
mov
sbb
jae
dec
jmp
xchg
dec
je
adc
ja
shrb
push
dec
sbb
push
jl
xchg
and
push
es
push
mov
mov
scas
pop
out
inc
aad
mov
mov
int
xor
into
int
push
loopne
push
adc
push
mov
mov
xchg
xchg
mov
bound
jo
arpl
push
xchg
adc
or
and
push
stos
mov
adc
rclb
sti
out
jne
push
cmp
inc
aas
stos
mov
pop
sbb
sub
in
ret
cld
aas
lods
cmp
sar
xchg
mov
scas
out
push
push
cs
dec
push
adc
icebp
dec
xlat
ja
xor
mov
and
aam
test
push
in
pop
fstl
pop
push
dec
add
lock
mov
cld
out
pop
dec
xchg
mov
dec
je
lret
pop
movsl
pop
lahf
dec
lret
pop
fnstsw
pop
call
pop
movsl
pop
lds
xor
mov
jp
xchg
dec
inc
data16
fs
lods
aam
aam
push
inc
push
push
es
popa
shrl
push
fsubrl
push
aad
xchg
fiadds
rorl
scas
loopne
insl
lods
dec
add
pop
pusha
dec
out
ljmp
mov
push
jg
je
push
jmp
push
into
mov
push
mov
mov
mov
jg
outsl
xchg
into
rol
push
lods
aaa
dec
push
xchg
hlt
outsl
or
mov
lods
inc
xlat
movb
add
push
mov
addr16
rcrl
mov
call
inc
xchg
mov
jg
and
pop
adc
int
rcll
rolb
xor
lret
push
rcr
mov
cmpb
rcl
cmc
push
mov
mov
cltd
and
pop
fstl
movsb
fwait
xchg
push
push
jecxz
push
mov
gs
stos
push
and
mov
fidivrl
mov
xchg
pop
add
cmp
push
and
daa
lock
aad
rcr
aam
push
push
mov
add
push
xor
rcll
arpl
adc
sti
adcl
lea
push
mov
jbe
sbb
adc
ret
into
xchg
outsl
inc
mov
out
xchg
push
xchg
aam
popl
lock
adc
lock
mov
pop
ljmp
jae
aam
aaa
xchg
push
out
mov
xchg
mov
into
enter
adc
dec
pusha
or
push
mov
mov
popa
pop
in
xlat
xchg
int
dec
bound
lcall
adc
add
lahf
jle
mov
mul
pop
shr
dec
xor
aam
adc
push
jp
mov
pop
adc
dec
adc
lods
cmpsb
jg
xlat
xchg
jne
adc
dec
mov
mul
xchg
push
lahf
or
ljmp
popa
xchg
rcrb
lds
jb
adc
and
pushl
jae
pop
adcb
push
or
mov
pop
push
mov
dec
xchg
jbe
sbb
clc
mov
dec
sub
stc
dec
adc
xchg
cli
dec
mov
push
push
stos
xchg
movsl
imul
push
jp
jg
push
push
pop
mov
sti
repz
add
or
ret
jl
testl
jo
cmp
push
test
push
mov
sahf
addr16
divb
adc
cmp
adc
enter
out
adc
in
lds
push
cmp
subl
dec
fildl
rorb
push
test
push
in
jecxz
idivl
mov
js
push
adc
out
not
lret
push
push
xchg
fs
xchg
das
push
mov
cmc
mov
mov
imul
mov
mov
into
shll
xchg
ficoms
pusha
cmp
mov
xchg
popa
out
mov
adc
movsl
xor
push
dec
ljmp
jmp
mov
push
pop
icebp
or
das
adc
cld
push
mov
xchg
push
rcrb
stc
sub
xlat
lods
xchg
rolb
data16
aaa
repz
pop
sub
mov
emms
sbb
sub
push
mov
mov
pop
popa
jg
sarl
mov
xchg
dec
scas
lret
xchg
fwait
add
push
dec
push
push
unpcklps
xchg
xchg
mov
lods
adc
or
push
aad
popf
xchg
mov
dec
mov
sbb
pop
rcrb
mov
xchg
xchg
repz
push
dec
adc
push
outsl
inc
out
push
adc
out
jg
adc
cltd
enter
es
push
push
mov
loope
push
hlt
dec
mov
outsl
xchg
push
push
push
inc
push
push
mov
push
and
adc
sbb
xchg
rclb
dec
push
push
inc
xchg
shlb
adc
gs
jns
adcl
push
xchg
adcl
jp
repz
dec
ret
pop
xor
xchg
lret
xchg
pusha
mov
rcll
xlat
aad
adc
bound
xchg
or
outsl
rclb
jle
xchg
jecxz
push
push
movups
int
xchg
in
mov
scas
mov
push
push
jle
jae
push
xchg
outsb
fs
lds
cwtl
dec
push
rol
push
cmc
bound
and
out
fidivrs
jg
je
aaa
adc
daa
inc
mov
aad
call
stos
loop
enter
jg
clc
jl
pop
cli
inc
push
sbb
loop
xchg
or
push
xchg
xor
sbb
adc
sahf
or
in
jae
pop
sbb
out
cmpsb
adc
adc
xchg
adc
push
hlt
test
dec
mov
leave
xchg
mov
nop
xchg
aam
mov
inc
aam
stos
xchg
aaa
mov
xchg
aad
lods
arpl
into
loop
rcll
xchg
icebp
ljmp
data16
aad
icebp
aaa
xchg
andb
xchg
mov
mov
xchg
daa
adc
aad
xchg
xchg
imul
lahf
xchg
aam
push
sbb
push
xchg
push
xorps
mov
push
aas
jge
jbe
int
xor
mov
mov
stos
sbb
push
push
xchg
push
pop
dec
jnp
sub
mov
and
jne
movlps
pop
push
ficoms
es
das
xchg
push
pop
cmpsb
adcb
xchg
xchg
pop
adc
pop
mov
mov
scas
pop
and
dec
inc
push
xchg
dec
mov
mov
popa
dec
dec
mov
push
dec
push
xchg
aaa
mov
lods
sbb
aam
push
adc
dec
cmp
push
das
lds
imul
jmp
mov
xlat
jg
xor
int
into
divb
pop
mov
movsl
jg
mov
mov
dec
dec
adc
adc
push
push
xchg
mulb
and
mov
aaa
mov
rol
ret
das
mov
jle
pop
inc
adc
lret
xchg
and
bound
push
dec
xchg
jecxz
cmpsb
push
xchg
push
mov
fs
adc
push
mov
xchg
push
in
inc
aad
mov
pushf
adc
pop
jle
jecxz
je
push
push
out
push
mov
test
movhps
iret
orl
jge
repnz
or
daa
cwtl
ss
daa
into
insb
xor
adc
ret
xchg
sbb
ret
inc
and
jae
pop
jnp
stos
aad
and
inc
ds
movhlps
into
or
enter
nop
push
js
inc
lret
adc
fdivrl
mov
inc
xchg
imulb
and
cltd
push
sub
push
xchg
xchg
movsl
jmp
pushl
mov
shll
push
rclb
pop
push
dec
aaa
xor
xchg
pop
push
lds
xor
adc
adc
mov
or
xor
sub
or
jbe
and
push
into
rcll
rol
push
ja
push
jg
xchg
mov
nop
push
aas
push
pop
mov
pop
lcall
lds
mov
scas
jnp
mov
fdivrs
addr16
fistpl
pop
fcoms
jo
test
push
outsl
ss
xchg
dec
pop
xchg
nop
jb
or
daa
push
jle
xlat
mov
aam
pop
jle
cmc
pop
jns
push
into
xchg
das
xorb
sbb
lds
inc
pop
aas
ret
mov
jbe
mov
xchg
into
add
outsl
xchg
shlb
push
adc
push
andl
lds
or
mov
aaa
xchg
dec
test
push
outsl
rcrb
es
jae
outsl
mov
mov
mov
jo
adc
idivb
xchg
add
les
mov
shlb
lahf
xchg
xchg
shr
out
add
aad
ja
je
adc
xor
int3
mov
xchg
aaa
add
xchg
pushf
gs
shrb
adc
mov
and
jmp
ja
mov
mov
and
jb
sbb
iret
aaa
out
outsb
sarb
imul
dec
xchg
xor
bswap
xor
ja
dec
xchg
mov
scas
push
mov
inc
lock
shll
rorl
jg
add
xchg
and
xor
stos
xchg
jbe
xor
lds
inc
mov
cmpsl
xlat
sub
mov
mov
mov
shrl
jb
lea
xchg
into
lods
xchg
inc
icebp
xchg
movsb
inc
lds
popl
xor
into
mov
fdivr
sub
movsb
sbb
adc
sub
push
mov
pusha
and
jg
push
xchg
add
popa
shl
repz
dec
xor
mov
std
into
xchg
push
rclb
fcoml
jae
repnz
gs
sbb
cs
aad
xor
mov
mov
add
xor
mov
mov
mov
mov
mov
inc
jl
push
test
ficoms
mov
adc
xlat
je
or
and
xor
jo
lock
xor
outsl
mov
arpl
xchg
adc
push
pop
push
scas
sbb
int3
mov
xchg
aaa
es
dec
ja
mov
lds
stos
aaa
addr16
mov
push
add
lcall
test
lds
cmpsb
xchg
push
or
adc
loope
cmc
mov
aaa
push
xchg
subb
and
mov
rorl
nop
adc
xor
push
sahf
insb
or
ss
ret
xchg
xor
xchg
ss
popf
push
dec
pop
xchg
or
xchg
push
mov
xchg
xchg
xor
xchg
daa
bound
cmc
mov
inc
push
sarl
rol
fidivrs
nop
push
adc
and
repnz
xchg
negb
pop
push
sbb
jb
ret
into
popa
mov
into
push
mov
dec
xchg
lds
lods
push
inc
rcl
mov
les
inc
dec
outsb
dec
in
mov
jb
add
mov
es
inc
cld
mov
test
push
negb
test
lahf
mov
adcb
adc
jbe
lds
int
ja
pop
push
xor
xchg
push
jle
popa
sbb
mov
adc
lret
das
push
or
mov
mov
rol
stos
aaa
into
mull
ror
mov
xchg
bound
aam
hlt
lea
fdivs
in
push
mov
mov
in
mov
mov
adcl
aaa
clc
mov
test
xchg
jne
push
xchg
ret
and
mov
lds
iret
cmp
mov
and
add
add
ja
inc
jno
sahf
xchg
out
ret
sahf
cmp
lods
cmc
enter
xchg
loop
test
xchg
aaa
xchg
mov
push
test
rcll
ja
xchg
push
xchg
das
push
in
xor
pop
inc
inc
jbe
xchg
ja
movsl
into
shrl
push
mov
outsl
xor
pop
push
scas
cmpsb
cmp
or
xchg
aad
inc
jbe
mov
xchg
mov
out
mov
push
dec
cmpb
outsb
aam
xchg
and
idiv
jge
mov
or
outsb
mov
sti
dec
mov
inc
and
hlt
jbe
pop
inc
xor
mov
ret
xor
ret
adc
fs
dec
int3
xor
add
gs
push
mov
lds
adc
xchg
xchg
adc
ds
bound
lds
rclb
xor
aad
and
into
orb
repnz
daa
xor
xchg
dec
ja
hlt
xchg
shlb
shlb
xchg
mov
jp
ret
mov
stos
rol
das
and
mov
ret
scas
ficoms
or
mov
shll
adcl
inc
vmulpd
push
xor
jo
push
loope
mov
xchg
out
push
xchg
xchg
pop
je
mov
iret
jbe
sub
daa
into
pusha
and
movsb
sbb
xor
cmpsl
mov
inc
fsubrl
sbb
test
ret
add
add
popf
pop
sbb
push
int3
test
and
inc
and
daa
pusha
xchg
xor
xchg
mov
repz
cmp
adc
xor
adc
cmp
xchg
xor
shl
rcrl
mov
push
xor
inc
ret
xor
sahf
in
dec
push
xchg
jg
test
nop
int
out
inc
pop
mov
aad
jbe
inc
xlat
or
xchg
inc
or
lds
or
das
vpsubq
mov
adc
mov
movsl
loop
rorl
mov
push
test
dec
push
lds
dec
inc
mov
int3
adc
les
inc
or
pop
popf
mov
dec
std
mov
jmp
rol
std
outsb
das
iret
cmpb
insb
les
pusha
rolb
adc
adc
or
rol
mov
xlat
adc
in
jl
cmpsb
in
cmc
xlat
icebp
hlt
mov
push
gs
fdivs
mov
int3
in
scas
mov
jle
jne
push
enter
sahf
cmp
popa
mov
ss
dec
enter
imul
xchg
in
mov
cld
or
xor
mov
mov
outsb
std
jp
pop
fs
insb
and
mov
cmp
sub
cltd
inc
jmp
mov
bound
mov
xchg
in
inc
push
dec
dec
xor
adc
out
ror
mov
cltd
dec
out
mov
mov
sbbb
cmp
mov
leave
loopne
sbb
rorl
dec
pop
bound
jb
sub
leave
fnstsw
dec
jbe
and
hlt
xchg
jns
enter
or
sbb
ja
and
cli
mov
mov
cmp
ljmp
gs
or
inc
hlt
js
adc
xor
sbb
aad
rorb
or
repnz
fcmovu
lret
popf
xchg
cmp
hlt
xchg
mov
and
outsb
aaa
fdiv
xlat
sub
xlat
pusha
ja
outsl
or
add
and
jp
cmp
lods
sbb
ja
das
xor
mov
hlt
push
lahf
in
lods
xchg
push
lea
or
or
mov
sub
jg
leave
enter
scas
xchg
or
in
insl
aad
xorl
fwait
movsb
push
popl
in
mov
pinsrw
lcall
insb
out
aas
mov
in
jecxz
mov
mov
mov
jb
push
inc
repz
fstpt
lcall
mov
pop
inc
out
hlt
cmp
mov
orb
xchg
imul
ljmp
fsubrl
cmp
jbe
clc
add
or
xor
pop
fildll
out
xlat
lcall
pop
adc
or
jmp
lret
shll
push
outsl
pop
inc
ss
in
rol
pop
movaps
out
ret
or
xchg
sub
sbb
cmp
out
or
rcrl
inc
movsl
jecxz
push
mov
scas
jmp
cmp
pop
mov
ss
sbb
sub
sub
int3
cmp
xchg
adc
lods
stos
dec
bswap
ja
shll
out
pop
repz
mov
insb
call
cli
faddp
jp
lds
adc
fcmovnb
test
insl
and
sbb
inc
add
add
push
jg
pop
fmuls
inc
pop
inc
lahf
sbb
xchg
sbb
mov
xlat
push
push
cmc
test
push
out
or
daa
iret
insb
lret
daa
aam
adc
xchg
movsb
fsts
ljmp
mov
sub
sbb
loopne
mov
loope
ret
rclb
sbb
mov
sbb
jno
stc
mulb
jnp
aad
mov
incb
pop
inc
fmuls
push
mov
pop
insl
adc
or
imull
clc
inc
xor
mov
add
push
adc
ffreep
mov
push
repnz
mov
ss
je
pusha
arpl
popa
repnz
fwait
or
hlt
cmp
jnp
and
icebp
or
cltd
inc
imul
push
cmpsl
push
jmp
int
xlat
and
decl
or
int3
sbb
adc
scas
mov
mov
sub
pop
adc
cmp
inc
cmp
mov
movsl
cmpb
popf
push
icebp
xchg
push
push
mov
sbb
mov
daa
cmp
jmp
icebp
cmp
and
shll
mov
push
push
das
sub
js
dec
add
adc
cmpsl
pop
fidivrs
pop
dec
add
shl
loope
cmp
lods
in
mov
adc
scas
sbb
adc
xor
or
add
cltd
popa
popf
out
pop
and
cld
fwait
mov
push
rep
cmp
push
inc
enter
push
cli
mov
sbb
outsl
cmp
mov
mov
xorb
test
sub
das
and
push
xlat
into
sarl
jge
xlat
insl
adc
lods
xor
push
pop
clc
xchg
orl
test
es
inc
jnp
adc
pop
cmp
push
mov
je
imul
pop
mov
mov
rol
cs
pop
mov
jo
imul
jge
cmp
push
pop
push
sub
into
push
mov
rcrl
shll
xchg
mov
pop
or
inc
loopne
mov
dec
neg
sub
add
scas
stos
mov
daa
ret
test
arpl
repnz
push
jp
and
adc
pop
sbb
mov
sbb
xor
xchg
cmpsl
test
or
adc
into
stos
bound
jb
sub
pusha
sub
push
sahf
inc
mov
call
adc
fimull
cld
roll
lahf
push
sbb
test
sbb
jno
sti
mov
add
sub
mov
loope
jnp
mov
mov
popf
mov
inc
cmp
add
mov
iret
sbb
or
in
xor
xchg
mov
mov
xchg
jno
data16
gs
lods
adc
lds
add
out
loop
sub
jle
xchg
ljmp
popf
inc
outsb
or
pop
ds
mov
subl
aas
imul
enter
popl
sti
xchg
mov
jnp
sti
cmp
jnp
addr16
add
dec
pushf
cmp
xchg
mov
arpl
and
cli
ret
add
and
sub
fimuls
xor
mov
je
mov
add
imul
test
ljmp
mov
test
mov
push
pusha
ret
mov
pop
das
and
or
aam
xchg
xor
aaa
pushf
sbb
enter
dec
xchg
xor
mov
adc
push
xchg
fisttpl
lahf
test
lea
lods
and
dec
jnp
add
in
les
int
jne
dec
js
add
lock
push
dec
push
sarl
jnp
hlt
mov
xchg
xchg
jns
jmp
inc
cmc
stos
popa
add
das
mov
xor
gs
adc
xor
outsb
gs
daa
sbb
push
icebp
fdivrl
pop
add
push
adc
push
push
loopne
sub
es
into
xor
or
sbb
xchg
arpl
xor
pusha
xchg
dec
xchg
aaa
insb
sbb
add
or
iret
jo
adc
cmp
mov
add
mov
fsubl
xchg
mov
mov
mov
fcmovnb
fsts
out
cmp
mov
sti
xchg
pop
or
sbb
adc
fmuls
movsb
jne
mov
bound
aas
sbb
shrb
push
imul
sti
mov
in
cmpsb
fists
inc
xor
xchg
mov
cmpsb
add
jecxz
das
int
xchg
lahf
in
lahf
pop
stos
arpl
cmpsb
and
add
rcr
mov
addr16
add
sub
lret
sbb
mov
mov
push
repnz
mov
mov
in
insb
ljmp
xchg
or
aaa
xor
xchg
dec
lock
dec
test
adc
fld1
dec
mov
add
push
dec
incl
out
and
adc
pop
cmp
xor
repnz
int
cmp
movsl
sbb
push
repz
stc
xor
data16
sar
out
fwait
mov
sub
repz
repnz
pop
orl
insb
fcoml
dec
outsl
es
adc
nop
mov
sbb
push
loope
out
mov
mulb
aad
stc
fildl
add
je
lret
sub
push
dec
test
mov
push
mov
xchg
addb
cmpsl
outsb
sbb
insl
es
mov
xor
mov
mov
leave
push
ss
mov
push
pop
inc
cs
dec
jb
pusha
mov
xchg
lcall
mov
push
push
adc
push
adc
push
ror
add
cs
pop
sarb
jmp
mov
jp
outsb
mov
popa
pop
or
dec
sbb
inc
inc
and
mov
dec
pusha
xchg
mov
test
shll
shll
cwtl
jns
idivl
or
add
scas
in
int3
in
pop
out
arpl
scas
jne
push
scas
cmp
icebp
cmp
push
and
movsb
inc
hlt
lahf
inc
std
mov
sbb
outsb
daa
in
or
cltd
sbb
paddb
imul
pushf
xchg
xchg
test
jbe
inc
das
xlat
jb
test
dec
stos
dec
out
push
sbb
xchg
js
xchg
call
test
jecxz
scas
pop
stos
mov
adc
push
mov
int
in
mov
mov
and
mov
mov
pop
cmp
jge
xlat
jle
lea
scas
dec
mov
jmp
out
add
add
icebp
jle
test
aaa
popl
pushf
movw
test
push
cmp
pushf
lea
ja
clc
test
bt
sub
movzbw
add
mov
pushf
jmp
mov
jmp
decb
mov
xchg
mov
dec
xor
sbb
loop
inc
or
adc
out
mov
nop
outsb
inc
mov
xchg
mov
xor
xchg
clc
cmp
mov
iret
or
lods
sbb
mov
mov
outsl
sub
jmp
xchg
dec
or
loop
xchg
jno
add
cli
cmp
pop
mov
push
cli
mov
mov
mov
xor
dec
dec
aaa
in
pusha
push
ret
xor
and
add
cld
jmp
mov
cmp
push
add
cs
mov
xchg
jno
pop
push
cmpl
jns
push
ret
sub
hlt
dec
outsb
mov
addb
test
jnp
jbe
aaa
out
into
add
mov
sub
sub
push
dec
int
adc
hlt
mov
push
jle
fiaddl
rcll
popf
adc
lcall
movsb
popa
add
and
mov
mov
mov
mov
popl
sub
inc
pop
inc
test
or
outsb
add
jle
mov
clc
outsl
pop
test
pop
mov
data16
aam
lods
push
mov
cmp
mov
bound
in
out
and
add
outsl
ficompl
inc
and
jp
lret
pop
inc
sub
or
mov
call
cmp
je
or
sub
stos
dec
popf
add
andl
xchg
mov
cmp
dec
bound
aam
pop
sbb
xor
mov
cmp
and
inc
cltd
push
pushf
iret
and
aas
ljmp
xchg
repz
add
inc
mov
dec
addb
jl
lods
mov
mov
fwait
jae
mov
sub
pop
push
sbb
pop
add
shlb
and
jle
ret
in
dec
clc
scas
push
pop
mov
ja
pop
lock
push
pop
mov
shrb
inc
cmp
sbb
ret
mov
loope
pop
mov
pop
mov
rcr
mov
scas
xchg
outsl
ficompl
xlat
clc
adc
in
sub
scas
sbb
inc
imull
xor
fsts
cmp
fdivrl
imul
ficoms
inc
lahf
insl
mov
push
mov
lcall
xor
mov
cmp
sarb
jae
jge
mov
outsb
insl
dec
push
or
in
xchg
cmp
and
mov
fnstcw
lods
sbb
jns
xchg
fwait
inc
loopne
scas
bound
lahf
ljmp
shl
std
add
iret
test
xchg
dec
fisubl
xchg
dec
xchg
sbb
aaa
out
pop
mov
add
inc
es
sub
lock
ret
shrb
push
pushf
xchg
xor
and
repnz
std
jno
push
jo
adc
and
movsl
inc
test
mov
mov
shl
imul
fs
jmp
and
les
push
int3
lahf
call
ret
jne
push
push
std
stos
xchg
popl
stos
dec
in
mov
and
test
sbb
cltd
dec
cli
decl
lea
jmp
fisubl
sbb
test
rorb
cld
not
iret
mov
jae
push
cli
lods
loop
imull
mov
ror
jae
push
insl
pusha
lock
hlt
pop
dec
inc
mov
lahf
inc
push
pmuludq
out
adc
adc
jp
daa
pop
lods
rclb
es
jmp
lret
dec
push
popf
mov
int
test
lods
insb
mov
pop
cmpsl
dec
pop
pop
mov
mov
xchg
jg
or
inc
test
imul
out
and
sti
push
movsb
jmp
aaa
cli
movsl
inc
or
jbe
into
mov
je
mov
push
lea
je
cmp
stc
pusha
cmp
sub
test
cmp
pusha
lea
ja
call
dec
xchg
mov
cmp
popf
jle
push
cmp
aaa
xor
push
sbb
jecxz
xor
js
pop
sbb
movsb
subl
pusha
arpl
mov
inc
dec
add
mov
push
mov
std
call
add
mov
sarl
pop
add
dec
hlt
jp
out
add
cmp
jp
in
and
popa
scas
ja
iret
mov
push
adcl
add
je
les
int
daa
into
mov
mov
sahf
test
dec
xchg
inc
sbb
std
add
inc
in
repz
pop
jb
push
xor
fistl
adc
and
inc
mov
sub
inc
insl
and
cmp
ret
xor
arpl
or
cli
mov
data16
aam
mov
test
into
jmp
jns
add
aas
in
fidivrs
iret
js
fcomps
adc
mov
xor
cltd
pushf
mov
mov
in
nop
xlat
test
fs
jne
ror
mov
jmp
or
das
ljmp
stc
clc
in
mov
pop
inc
sti
movsb
dec
fstpt
scas
fimuls
fcmovb
ljmp
mov
mov
loopne
jae
int
je
pop
ljmp
xchg
hlt
out
fadd
pop
leave
idivl
cmpl
push
mov
push
sti
sub
es
jbe
fcmovnu
jbe
les
sub
outsl
jo
xor
push
mov
fisubs
test
mov
inc
or
test
pushf
movw
movl
mov
pusha
push
movl
push
pushf
push
movb
lea
jmp
shrl
or
mov
bound
shrb
dec
push
cmp
sub
jb
bound
jl
dec
out
jmp
mov
jae
out
mov
pusha
mov
das
mov
cmp
lods
sarb
into
dec
lods
mov
mov
mov
pop
adc
lahf
lock
lods
mov
shlb
arpl
jnp
jg
leave
fistpl
pop
mov
mov
or
dec
push
dec
cmp
dec
mulb
xchg
jne
int3
mov
and
sbb
jo
mov
pop
add
adc
sbbl
xor
aaa
sbb
and
and
hlt
in
fsubrl
insb
adc
popa
pop
std
cwtl
scas
je
test
xchg
or
mov
popf
mov
push
jae
sbb
pop
lea
add
rcll
jne
push
cmp
lock
adc
push
push
repnz
adc
inc
jno
mov
mov
xorb
ss
xchg
add
rcrb
fs
sbb
inc
sti
addr16
add
gs
xchg
dec
ret
clc
add
cmp
call
cli
mov
and
test
or
cmc
ja
mov
add
pusha
push
push
call
pushl
lea
je
pushf
mov
push
mov
pushf
pushl
ret
pushf
hlt
aad
imul
fwait
sahf
mov
pop
push
inc
dec
sub
mov
pop
mov
movsl
push
lret
imul
cmpsb
mov
je
jge
test
icebp
movsb
inc
xchg
pop
xchg
int3
icebp
xchg
out
notb
js
shl
popf
ds
mov
aam
roll
lea
pop
cs
sub
cwtl
lea
insb
aam
xchg
cmp
jecxz
test
orb
fs
andb
fldenv
or
test
in
jmp
shlb
pop
pop
dec
ss
mov
shll
sub
lret
fcom
mov
pop
hlt
sarl
cmpsb
filds
cld
add
scas
flds
push
outsb
xchg
pop
test
and
mov
outsb
ljmp
adc
or
out
or
imul
out
cmc
mov
adc
pusha
std
mov
sub
mov
mov
xchg
iret
daa
and
sarb
in
mov
lahf
cwtl
orl
test
test
mov
addr16
cmc
stos
js
push
or
cltd
out
stc
sub
push
std
ss
or
jecxz
imul
leave
inc
adc
cmp
shlb
add
jmp
push
add
mov
mov
mov
clc
mov
or
mov
sbb
fwait
int3
adc
mov
lock
in
mov
jp
and
add
jae
lds
cwtl
xlat
inc
aam
mov
mov
imul
or
add
cmp
imul
in
fucom
test
xlat
hlt
test
pop
mov
ret
cmpsb
pop
mov
inc
mov
adc
jmp
xchg
iret
arpl
cli
addr16
or
insl
cmp
lea
dec
jmp
leave
cmpsl
mov
mov
cmpsb
std
ljmp
iret
mov
mov
xchg
mov
mov
ljmp
xchg
mov
pusha
adc
pushl
push
pushl
ret
pusha
call
sbb
mov
lahf
lods
jle
lods
cltd
jp
jp
dec
sub
inc
jo
loop
cmp
jl
pop
pop
pop
movsl
push
test
inc
gs
inc
inc
ret
adc
inc
jnp
xchg
xchg
out
shlb
shrl
cmpsb
andl
mov
adc
inc
sti
loop
dec
sahf
xchg
xor
mov
repz
and
js
or
sub
xlat
ja
xor
enter
rol
mov
je
push
ret
mov
push
pop
dec
in
inc
xchg
icebp
xchg
ret
out
in
mov
int
or
int
mov
lods
imul
mov
jnp
idivb
cld
mov
cmp
pop
cld
cli
push
cli
test
jp
iret
les
xchg
scas
lock
into
outsl
cltd
xchg
mov
add
rol
stos
xchg
ss
pop
dec
lea
movsb
mov
daa
iret
out
pusha
pop
add
daa
sub
ds
xor
add
jns
dec
out
cmpsl
or
in
mov
push
orb
add
or
mul
lret
shlb
imul
fcmovnbe
leave
inc
dec
add
scas
icebp
mov
aas
jp
jge
addw
mov
mov
push
movsb
dec
sahf
push
sarb
dec
cwtl
push
mov
popf
or
jecxz
add
xchg
aad
jne
scas
mov
aad
and
in
dec
mov
jb
add
aad
cmc
lcall
int
cmpl
push
xor
dec
push
mov
stc
mov
adc
jo
xor
add
xlat
loopne
addr16
fidivl
push
notl
push
lea
mov
jle
sub
movsb
aas
cmp
xchg
jbe
shlb
dec
push
and
or
dec
jae
jp
out
aas
out
sahf
fstpt
dec
pushf
mov
jmp
aas
and
repnz
xor
or
or
fdivr
or
enter
add
ret
inc
sar
fmull
xchg
xchg
movsb
fsts
call
sbb
and
jg
cmp
sub
fisubrs
cmp
or
dec
std
mov
push
xlat
mov
in
push
push
inc
push
xor
cs
insb
add
xchg
and
lcall
push
ss
dec
sahf
fistps
in
and
call
jno
cmp
mov
bound
jge
mov
lds
mov
inc
dec
inc
sub
add
orb
cmp
push
shll
cmp
jl
dec
js
fisubrs
out
dec
push
ret
cs
cmp
daa
cs
or
dec
sub
adcb
aas
inc
cmp
mov
rcl
xor
or
inc
test
loop
xor
pop
jp
ret
leave
push
or
xchg
lcall
inc
or
mov
inc
push
stos
xchg
js
shr
pop
test
mov
lcall
sub
test
cmovb
idivb
sub
enter
outsl
js
xchg
movsl
int
and
cmp
pop
movsb
lock
inc
lea
xchg
outsl
es
leave
xchg
movsl
in
imul
sbb
inc
jge
fs
pop
pop
sbb
sub
adc
xchg
int3
add
mov
pop
lret
fistl
ds
ds
and
mov
fidivl
pop
mov
xor
inc
movl
lret
push
test
mov
mov
pushf
push
lea
jne
cmc
bsr
mov
cmc
jmp
pushf
lea
jne
push
lea
call
push
movw
pusha
lea
jmp
ja
les
xor
cmp
dec
sub
adc
add
movsl
push
jp
ljmp
push
push
mov
fsubrs
dec
xchg
xorb
dec
pop
dec
and
mov
pushl
cld
add
or
dec
movsl
inc
test
daa
aam
in
in
mov
je
fnstcw
stc
mov
mov
sub
cld
popf
inc
or
das
mov
std
hlt
dec
dec
ss
test
mov
dec
cmp
out
push
jl
inc
xlat
stos
xor
lock
sahf
ljmp
adc
nop
pop
push
inc
loop
lcall
arpl
dec
mov
mov
icebp
xchg
lret
push
xchg
xchg
out
popf
adc
nop
aas
mulb
mov
mov
inc
imull
test
push
jecxz
adc
sub
outsb
call
inc
or
pop
adc
sbb
aam
fwait
sahf
lds
cmc
add
xchg
jns
rorb
shlb
sbb
or
or
stos
dec
inc
sti
ret
repnz
jmp
push
je
call
fstps
mov
mov
out
sbb
loop
cld
loope
aaa
jge
sarb
lret
xorb
int3
jbe
call
fstps
xor
or
xchg
inc
mov
mov
pop
jae
repz
mov
push
pop
psubd
or
mov
call
pop
jl
push
popf
jecxz,pn
or
dec
incl
adc
fdivs
push
aas
fsubl
gs
push
inc
loopne
push
stos
or
add
xor
sub
stc
lods
dec
and
out
xor
push
push
add
fnstcw
jo
shrb
les
jmp
inc
add
or
jae
leave
and
std
mov
movl
mov
push
dec
dec
or
stos
ficompl
inc
push
push
in
cmp
mov
push
lcall
sub
push
test
pop
les
mov
mov
jbe
rcr
jo
xor
inc
in
cmp
xchg
push
clc
lahf
push
mov
hlt
add
push
push
pushl
pushl
lea
jmp
sub
jae
add
jno
sub
pop
sub
pop
adc
lock
push
out
or
ljmp
dec
pusha
add
or
popa
push
loop
jle
popa
dec
dec
pusha
mov
mov
cmpsl
les
sub
xorl
or
cmp
add
decl
gs
jo
mov
int
jae,pt
mov
jp
mov
mov
bound
repz
push
push
sub
sub
mov
inc
adc
xor
add
jno
popa
sbb
and
cmpb
xchg
mov
cmp
clc
sub
push
repnz
pushf
pushl
lea
jne
dec
adc
mov
jmp
xlat
mov
lret
outsl
inc
dec
xchg
xchg
es
test
jbe
addr16
aad
imul
loope
out
outsl
mov
ds
aam
dec
mov
dec
aas
xchg
mov
push
mov
cmpsl
push
add
test
rorb
aad
lods
lret
sarl
sar
popf
rcl
aad
aad
inc
push
aad
rcl
adc
add
push
dec
clc
iret
push
xchg
ljmp
push
push
sbb
sub
push
inc
es
xchg
xchg
mov
push
scas
inc
inc
adc
mov
sbb
mov
mov
movsb
popf
xchg
sbb
mov
cmp
iret
fmulp
adc
pop
dec
add
adcl
in
or
leave
stos
push
in
push
iret
xor
push
jg
ja
push
push
pop
push
in
push
in
iret
push
scas
push
lahf
push
cmpsl
push
mov
int3
lods
push
dec
or
icebp
shlb
cli
or
or
adcb
sub
push
or
xchg
inc
add
mov
stc
and
xchg
out
jns
mov
test
or
test
lret
or
xchg
ss
mov
push
ss
sbb
out
out
aad
mov
jmp
add
mov
inc
stc
mov
sub
cmp
cmp
mov
push
cltd
cmp
rolb
mov
push
enter
cmp
shl
call
rclb
nop
dec
inc
popa
pop
mulb
jmp
aad
sub
mov
add
rol
sub
push
add
mov
lods
inc
mov
data16
lret
aad
mov
cmp
movsl
adc
inc
cmp
fwait
lods
adc
addr16
push
push
data16
xor
push
aad
andl
push
int
mov
xor
pop
push
fs
stos
shll
xor
push
sub
and
jle
mov
xchg
xchg
adc
mov
lods
pushf
cmp
int3
xchg
arpl
sbb
mov
push
push
stc
shlb
mov
cmp
xorl
xchg
xchg
xchg
das
or
push
pop
repnz
das
pop
cmp
std
mov
xchg
xchg
sbb
xchg
popa
adc
add
iret
dec
adc
test
jbe
push
dec
xor
push
dec
push
jbe
ja
into
call
mov
aaa
inc
push
mov
push
dec
roll
into
aaa
test
jle
mov
aaa
or
js
aaa
lods
mov
push
jae
xchg
mov
mov
into
iret
and
ror
sbb
xor
xchg
stc
lds
mov
jae
aaa
or
test
mov
xor
push
iret
mov
mov
xchg
lods
or
xor
ret
adc
das
mov
fldt
ds
push
aaa
movsl
iret
lea
inc
xor
mov
mov
xlat
sub
mov
dec
mov
iret
push
xor
xchg
popf
xor
pop
push
jmp
inc
pop
xor
push
sbb
movsb
adc
mov
inc
testl
in
jmp
inc
ficoml
fldenv
xchg
mov
xlat
pop
aaa
imul
sbb
out
jle
sub
adc
pop
aaa
push
fs
push
shl
jge
pop
xlat
mov
adc
xor
jo
xor
subl
in
push
xchg
loopne
jne
je
inc
mov
push
add
das
aaa
lea
cmc
push
hlt
and
out
xchg
test
jmp
lret
inc
inc
mov
je
ljmp
push
adc
push
aaa
sub
pop
xchg
sbb
sbb
xchg
loope
jnp
sub
jmp
inc
das
aaa
mov
loopne
sub
and
pop
push
rol
ljmp
xchg
mov
fsubs
sub
mov
aaa
and
mov
xchg
mov
cltd
push
sbb
xor
cmc
sbb
test
loopne
mov
xchg
stc
mov
xlat
jp
push
iret
jnp
rorb
sti
xchg
subl
and
sbb
mov
clc
mov
push
sti
aam
test
icebp
out
fcoml
cmpb
ffreep
xor
xchg
popa
out
xchg
pop
repnz
lds
xchg
sub
push
add
inc
call
sub
sbb
mov
dec
xchg
sti
sub
mov
mov
mov
aad
mov
fs
mov
xchg
nop
mov
sbb
nop
mov
or
ds
movsb
sbb
adc
addr16
fisubrs
outsl
js
out
dec
outsb
rep
out
mov
insb
movl
pop
mov
or
test
test
dec
ja
mov
xchg
aaa
movsb
pop
cmp
xchg
add
icebp
xchg
inc
push
sahf
jne
push
push
push
inc
push
gs
mov
sti
outsl
aaa
sbb
mov
cld
rcrb
and
mov
fdiv
imul
movl
dec
sbb
movl
adc
cmc
aad
addr16
mov
or
mov
leave
loopne
mov
insb
sbb
shll
xor
shl
or
dec
scas
stc
fs
sub
aaa
xchg
popa
jno
ds
add
xchg
fwait
jne
adc
sub
test
cli
dec
ds
das
fists
popa
psrlq
cmc
xor
push
lcall
fwait
iret
fildll
xchg
loopne
xor
iret
sbb
and
jmp
lcall
push
jne
add
popf
aaa
or
add
lods
hlt
hlt
in
ja
sub
xor
cmp
and
sbb
mov
pop
sub
push
nop
add
sbb
pusha
fcompl
out
mov
sbb
mov
out
shll
js
push
repz
aaa
dec
or
push
pusha
adc
dec
je
out
push
cmpl
aad
fs
xchg
jns
push
push
push
jno
push
dec
push
push
mov
lods
adc
je
aam
mov
xor
mov
int
xchg
lods
je
repnz
insl
xchg
jmp
in
and
pop
mov
aam
cmp
inc
jb
and
stos
nopl
jae
jns
jno
enter
inc
pop
sub
rclb
sbb
incl
pop
inc
sbbb
and
and
mov
dec
xchg
dec
pop
popa
jb
daa
add
dec
adc
js
cmp
fdivrp
inc
adc
mov
stc
adc
pop
pusha
dec
or
dec
adc
inc
dec
scas
in
lret
cmp
and
jns
arpl
and
adc
stc
xor
pop
and
adc
or
mov
xchg
ret
gs
push
sbb
adc
dec
mov
jno
sbb
sub
adc
jne
fsubrs
push
adc
cmp
or
rolb
push
aas
ror
mov
shrb
mov
imul
add
sbb
pop
xlat
and
dec
sub
xor
jp
stos
mov
das
push
pop
lret
mov
jb
mov
aaa
mov
dec
xchg
mov
subb
int
pop
mov
divb
leave
orb
adc
mov
xchg
cltd
push
cmp
xchg
aas
mov
nop
rol
xchg
test
xor
ss
jb
leave
lods
mov
xor
es
push
dec
mov
cltd
mov
insb
cmp
xor
mov
leave
xchg
lods
cmp
out
mov
dec
out
addr16
xchg
aas
sbb
xchg
dec
cmc
jmp
push
hlt
cmp
mov
push
or
or
fcomps
xchg
xor
test
push
hlt
int3
mov
push
push
and
push
push
shl
cmp
xchg
mov
jb
jmp
xchg
mov
pop
or
les
sub
push
mov
dec
jl
push
lahf
mov
mov
mov
pushf
mov
sysexit
aad
or
movl
mulb
lcall
xchg
js
and
xlat
and
popa
loopne
xchg
dec
test
cmp
aad
int3
fdivl
fsts
pop
icebp
out
and
mov
push
pop
es
xlat
cmpsl
mov
movb
movsl
sub
inc
aad
mov
jecxz
popa
lret
dec
scas
cmp
jp
inc
and
test
mov
mov
fwait
push
xchg
xchg
inc
testb
mov
adc
lods
into
sbb
ret
arpl
outsl
xchg
adc
sarl
jns
jae
push
mov
mov
mov
lret
sub
inc
js
cmp
aaa
inc
push
push
mov
movsl
xlat
int
jne
fmull
dec
push
nop
out
scas
cmp
sbb
lea
mov
mov
icebp
push
scas
subl
imul
cmp
pop
pop
lock
pop
lea
leave
insb
push
pop
add
je
or
fsub
xchg
icebp
push
pop
mov
xor
loop
test
push
push
aaa
pop
gs
xchg
jns
lods
xor
dec
adc
js
adc
push
or
fbld
cmpsl
mov
xchg
pop
jnp
and
loopne
mov
addb
push
gs
adc
sub
cmpsb
fidivrs
aam
adc
outsl
xchg
lds
repz
les
mov
inc
js
dec
mov
xlat
push
cld
pop
or
rcl
and
adc
ss
gs
into
xchg
shlb
jne
mov
int
push
and
lds
sahf
jne
das
call
and
push
xor
mov
incb
adc
scas
hlt
pop
pop
hlt
pop
lock
mov
movsl
leave
push
sbb
xchg
lahf
imulb
aaa
data16
hlt
stos
aaa
fistpl
in
mov
jbe
insl
sbb
mov
pop
push
mov
xchg
mov
mov
jle
jl
pop
aad
shlb
jb
outsl
addr16
xchg
test
lds
xchg
xchg
push
stos
jg
movsb
cmpsb
aaa
xchg
adc
out
and
repnz
cmc
test
xchg
aas
inc
jbe
push
mov
ja
popf
push
sub
or
sub
movsl
int3
and
lods
push
hlt
movsl
inc
clc
push
jbe
jae
pop
mov
lret
ret
mov
mov
movsb
fs
loopne
xor
pop
aaa
ja
arpl
inc
lock
aam
clc
fwait
lea
adc
loope
mov
mov
mov
out
jo
adc
and
in
ja
fldl
mov
arpl
xchg
jbe
and
lea
cmpsb
push
inc
push
scas
mov
in
lds
push
jne
or
lret
mov
add
cmpsb
cmpsl
outsl
inc
jbe
push
mov
mov
cli
xchg
lds
xchg
xchg
in
xchg
mov
adc
xchg
imul
int
repnz
and
jo
xchg
push
push
add
cs
pop
xchg
xchg
cmp
add
rcl
sbb
inc
std
insb
sub
out
xor
sbb
ja
test
push
xchg
push
jge
aad
xchg
push
jne
push
push
aam
inc
mov
xchg
out
pop
aaa
iret
mov
iret
mov
jnp
mov
xchg
stos
dec
ret
mov
mov
mov
sbb
es
stos
popf
xchg
dec
adc
xchg
adc
sub
xchg
jne
or
mov
idiv
mov
dec
pop
xchg
mov
mov
scas
mov
cmpsl
mov
xchg
lahf
dec
mov
jnp
xchg
xchg
testl
mov
xor
outsl
xchg
jo
addr16
nop
mov
mov
push
inc
shlb
inc
adc
inc
push
mov
xchg
jno
daa
xchg
mov
mov
pop
inc
shll
pop
adc
inc
push
mov
xchg
jb
out
xchg
mov
mov
inc
shlb
mov
mov
xor
scas
xchg
mov
cmpsb
repz
adc
xchg
inc
xor
mov
je
jle
mov
mov
outsb
xchg
aam
data16
hlt
mov
adc
mov
xchg
push
dec
inc
jne
ds
mov
inc
mov
cs
aad
es
cmc
mov
push
arpl
mov
pushf
xchg
mov
push
dec
inc
cmp
sub
sbb
or
aad
aaa
xchg
xlat
lahf
ja
pop
outsl
jg
xlat
xchg
mov
daa
outsl
in
mov
pop
mov
push
push
movsb
cmp
std
push
xlat
into
out
jle
scas
mov
es
idiv
jbe
xlat
cs
data16
xchg
cmpsb
push
push
push
outsb
fwait
ds
mov
push
scas
xchg
pushf
test
je
les
int3
pop
xlat
lods
pop
sysret
imul
out
into
mov
testl
mov
mov
into
iret
and
push
push
mov
mov
sti
mov
std
scas
cmc
cmpsl
cmp
lahf
lahf
rcll
jle
das
xchg
popf
fmulp
cmpxchg
imul
ja
stos
ja
mov
repz
stos
dec
jle
pop
mov
cmc
sahf
stos
mov
push
aaa
pop
shll
push
push
push
dec
call
aaa
into
inc
out
mov
arpl
movsl
pop
inc
aas
xchg
idiv
pop
mov
movsbl
into
xchg
roll
xchg
xchg
scas
pop
xor
pushf
movl
ret
mov
xchg
out
aaa
mov
fisttpll
pusha
mov
movl
xchg
loopne
mov
test
movsl
out
stos
mov
xchg
scas
scas
push
sti
fisttpll
rcll
sahf
call
outsb
xchg
inc
adc
xchg
push
cmc
cmp
out
out
popf
push
into
xchg
inc
inc
pop
mov
roll
xchg
into
push
jle
inc
jbe
fwait
mov
mov
pop
dec
pop
lds
or
negb
mov
pop
mov
fwait
cmpsl
inc
pushf
adcl
jbe
aaa
rcll
jle
lods
cs
pop
push
es
or
push
sub
mov
ss
das
xchg
std
mov
inc
xchg
jae
mov
mov
inc
mov
fnstsw
cs
int
cmpsl
std
lds
mov
push
or
dec
lahf
into
inc
pop
mov
mov
push
pop
jo
fwait
mov
sti
into
andps
push
popf
mov
movl
xchg
mov
pop
or
xchg
mov
push
shll
pop
pop
fidivrs
sti
into
out
or
shll
ss
push
mov
dec
je
subl
addr16
cmp
cs
addr16
mov
imul
fidivs
testb
push
mov
sbb
or
inc
fimuls
movq
cmp
xor
shll
ss
push
inc
mov
xchg
fcoml
inc
mov
ja
mov
mov
pop
mov
stos
ja
mov
mov
cs
push
pop
es
cmp
push
movl
jo
mov
xchg
lods
mov
les
je
dec
xchg
insb
out
faddp
scas
fs
sub
rcrb
jecxz
stos
les
xchg
dec
enter
cmp
xor
sub
cmc
cmpsb
pop
pop
movl
or
daa
loope
dec
hlt
lods
add
sahf
test
jne
lds
cmp
popf
push
imul
add
das
repz
addl
jmp
xchg
xchg
jecxz
inc
imul
out
push
outsl
into
fnsave
aad
mov
and
lds
aaa
mov
xchg
fidivl
test
mov
mov
mov
xchg
mov
ss
popf
mov
xchg
xchg
ror
cmpsl
mov
inc
dec
movl
jnp
jae
xchg
pop
pop
jl
mov
arpl
je
pop
push
enter
mov
ja
imul
xchg
ds
jbe
push
scas
jo
imul
test
inc
dec
out
dec
sahf
jo
stos
mov
xchg
out
or
jg
sbb
adc
push
push
or
icebp
xchg
mov
cs
repnz
jae
cmc
pop
mov
sbb
lods
pop
mov
fsubl
lret
xchg
ret
test
ss
mov
aad
mov
mov
mov
xchg
dec
scas
jbe
mov
stos
xchg
jle
pop
mov
into
sahf
cwtl
data16
into
adc
cmpsl
jp
jb
imul
out
push
cmp
sbb
iret
xchg
pop
jns
ja
dec
idiv
jb
movsb
inc
testb
jecxz
cmp
pop
setno
hlt
lods
xor
jbe
scas
mov
mov
cwtl
dec
mov
cmc
data16
xchg
dec
sbb
scas
xchg
daa
xor
xchg
out
adc
lret
or
fidivrs
imul
mov
add
dec
mov
jle
fisubs
xchg
shll
jbe
jle
pop
inc
dec
daa
aad
loope
adc
pop
adc
lret
or
gs
addr16
sub
test
es
mov
into
mov
xchg
sub
sbb
push
jbe
imul
jge
lods
mov
gs
push
subl
push
inc
shrl
imul
dec
sub
sub
inc
sahf
cs
cmpsb
mov
xor
stos
mov
xchg
sbb
outsl
push
adc
dec
pop
inc
mov
pop
notb
stos
push
notb
jnp
xchg
out
mov
pop
movb
add
xchg
cs
into
mov
pop
clc
or
jne
pop
mov
lock
lcall
mov
outsl
push
incb
cmpsl
fcoms
pop
push
rcl
lods
enter
mov
mov
mov
stos
lahf
mov
test
ja
es
mov
jo
mov
hlt
sbb
mov
movsl
push
lret
add
pusha
inc
or
push
mov
mov
xchg
mov
outsb
xchg
inc
mov
das
lds
fldl
dec
out
cmp
xor
lods
xchg
je
out
arpl
push
lret
inc
xchg
xchg
inc
push
imul
rclb
into
jae
sbb
xchg
jle
mov
jle
adc
pop
lcall
xor
xchg
rcll
mov
sub
mov
pop
mov
cs
out
xchg
push
and
xchg
dec
not
outsl
inc
out
lahf
pop
subl
xchg
mov
lods
pop
into
cmc
decb
lret
outsl
pop
cli
mov
push
sub
fwait
push
lret
pop
inc
dec
mov
lds
dec
mov
scas
lret
mov
xchg
cmpsl
fcoms
mov
repz
lahf
lret
xchg
ljmp
fnstsw
jg
pop
ja,pt
outsl
jle
jbe
pop
addr16
mov
add
pop
lret
ja
jle
outsl
push
lret
outsl
lret
test
stos
aas
jbe
aaa
mov
pop
push
sahf
xchg
das
inc
lret
andl
daa
hlt
mov
mov
outsl
ss
cmp
and
xor
pop
push
daa
into
pop
enter
dec
xchg
mulb
or
hlt
imul
lret
out
ja
es
xchg
push
mov
hlt
xchg
dec
sub
dec
imul
shr
push
sahf
pop
ffree
into
xchg
push
lret
bound
out
jo
stos
movsl
mov
shlb
addl
daa
adc
mov
xchg
outsl
mov
in
aas
into
xchg
push
mov
inc
xchg
pop
mov
ja
lret
jle
inc
dec
mov
scas
cwtl
fidivs
or
pop
adc
into
stos
orps
dec
inc
push
jge
into
pop
incb
test
or
xchg
adc
or
ficoms
push
jb,pn
xor
dec
push
gs
xchg
dec
push
fnstenv
out
jb
pop
push
sub
inc
push
in
xchg
lret
pop
in
ss
cmc
movsb
xchg
xchg
mov
hlt
movl
lret
xchg
into
int
lds
mov
movl
lods
mov
inc
movl
adc
mov
enter
addr16
pop
es
shll
xchg
in
into
scas
adc
mov
idivb
scas
scas
pop
mov
cs
adc
jmp
adc
cmp
mov
jne
lea
es
das
mov
mov
pop
push
or
sub
mov
ja
out
mov
ss
mov
xor
pop
sahf
outsl
push
mov
adc
jne
pusha
mov
xor
movsb
addr16
mov
pop
pop
xchg
xchg
sahf
push
je
push
mov
cmpsl
push
inc
fiadds
or
faddp
cmp
mov
xor
out
jb
fwait
subb
xchg
cli
out
xor
es
cmc
push
lahf
jle
pop
int
xchg
cmpsl
jecxz
mov
xchg
jg
insb
xchg
imul
xchg
pop
pop
lret
lahf
ud1
cs
ja
shl
jg
pop
push
push
xchg
jecxz
aam
xor
dec
pop
push
loop
aas
aas
shlb
pop
pop
mov
xchg
push
adc
cmpsl
mov
bnd
push
loope
xchg
pop
test
jae
xchg
aas
mov
lock
inc
addr16
ja
xor
push
push
xorl
mov
mov
cmpsl
inc
cmpsl
divb
jg
scas
out
sbb
inc
mov
dec
push
xor
fs
inc
aaa
cmpsl
ret
cmpsl
sahf
ja
pop
mov
int
add
jb
das
push
xchg
pop
outsl
mov
rcll
dec
lret
outsb
xchg
mov
jne
jg
xchg
es
xor
adc
adc
outsb
mov
stos
mov
arpl
xchg
sti
mov
cmpsl
xchg
pop
jae
mov
aad
inc
adc
insl
xchg
nop
je
push
repnz
mov
inc
inc
pop
cmp
rclb
outsb
mov
mov
xchg
cltd
int3
pop
push
cmpsb
jae
cmpsl
pop
adc
sahf
push
add
les
mov
pop
sub
repz
push
nop
pop
mov
mov
add
adc
xchg
xchg
adc
test
movhps
xchg
pop
ljmp
inc
push
aad
push
xchg
mov
adcb
inc
adc
aam
es
xchg
inc
test
push
ja
lahf
xchg
xchg
jbe
mov
mov
into
xchg
into
dec
mov
fstpl
scas
outsl
test
in
orl
fs
cmc
add
pop
jecxz
add
jg
jne
mov
push
xor
cmpsl
ret
and
movsb
out
aad
xchg
inc
out
xchg
lahf
daa
cmpsb
jae
scas
lret
inc
nop
hlt
test
rcr
in
pop
in
xchg
inc
outsb
mov
iret
adc
xchg
push
dec
movb
xor
sub
push
add
jne
aad
mov
into
repnz
inc
int
sahf
sub
mov
xchg
xchg
push
inc
mov
add
aam
int3
pop
inc
cmp
les
adc
ja
jle
push
and
dec
push
xchg
icebp
mov
shrb
xchg
dec
sar
aas
sar
das
and
lock
aad
cmpsl
xchg
ja
add
push
lods
aam
outsb
jno
xchg
fiadds
dec
pushf
inc
arpl
pop
sub
faddl
mov
ja
aaa
mov
add
mull
inc
xchg
outsl
and
mov
mov
mov
scas
inc
test
je
xchg
add
scas
mov
scas
into
aas
ret
inc
aad
mov
xlat
fdivp
inc
dec
push
sbb
push
pop
xchg
idivb
pop
and
or
das
mov
push
divl
aaa
add
add
scas
jl
scas
and
inc
push
aam
aad
xor
les
jno
jno
dec
inc
cmpsl
xor
push
in
push
jne
jno
inc
mov
pop
add
dec
lahf
adc
int3
jbe
into
rcl
je
scas
divb
idivl
jnp
je
fimuls
push
fs
inc
pop
sbb
inc
jle
pop
ss
jbe
idiv
pop
xchg
pop
ja
in
mov
pop
xchg
jne
and
iret
jae
push
add
add
stc
xchg
pop
aad
movl
mov
xchg
orb
fs
aas
inc
incb
sbb
push
add
testl
xchg
mov
xor
inc
mov
lret
mov
into
bound
inc
data16
xor
testl
ds
jbe
xchg
xchg
xchg
xchg
das
xor
adc
push
pop
int
scas
jb
icebp
jle
mov
lret
ja
mov
xor
je
mov
push
jbe
xlat
and
inc
and
enter
lock
aas
mov
mov
sbb
mov
shll
sbb
pop
adc
mov
mov
xchg
nop
sahf
sbb
xchg
notb
or
add
cmpsl
push
daa
push
ds
adc
cmpsb
jbe
es
xor
push
repz
shlb
icebp
fsubp
sub
inc
adc
pop
mov
int
jecxz
add
pop
dec
bound
mov
shl
aaa
adc
jle
testl
xchg
loopne
lock
inc
jo
insl
push
mov
mov
inc
rcll
aam
das
scas
in
xor
pop
adc
inc
ret
dec
xchg
inc
inc
andl
lret
mov
dec
pop
mov
gs
ja
rorb
mov
inc
mov
stos
push
out
xchg
ret
fidivrs
add
addr16
stos
jae
xchg
daa
dec
shll
fwait
push
add
xadd
int3
xchg
movsl
inc
adc
mov
and
div
xchg
aas
test
lea
aaa
fwait
mov
daa
mov
xchg
push
es
cs
mov
movl
rol
pop
mov
jno
mov
mov
jb
ret
ret
mov
mov
ret
mov
aam
lahf
xor
mov
xchg
fstl
push
je
dec
inc
jmp
adc
jo
loop
mov
mov
into
sub
lock
xor
xlat
mulb
add
cs
ret
hlt
int
popl
es
and
jg
and
cmpsb
xchg
add
mov
xchg
xchg
mov
pop
jb
addr16
scas
mov
outsb
clc
xor
faddl
xor
fwait
addr16
or
jo
orb
xor
dec
es
mov
mov
jnp
mov
xor
xchg
setno
lahf
sbb
testb
xchg
jbe
mov
push
aaa
pop
push
fidivs
frstor
enter
sahf
jae
xchg
pop
mov
cmp
add
push
mov
push
imul
lods
test
add
adc
adc
xchg
and
inc
push
lock
mov
add
divb
adc
cmc
shlb
push
adc
repnz
scas
jge
push
repnz
adc
and
push
jbe
and
out
into
shll
in
ret
adc
daa
adc
cmc
lret
pusha
xchg
xor
int
lahf
ret
pop
or
inc
loop
inc
sub
lods
lock
and
andl
cmp
sbb
add
add
int
mov
arpl
and
xchg
inc
pop
add
les
lret
aad
push
aaa
out
push
repz
aaa
adcl
out
mov
scas
test
add
push
mov
sbb
mov
scas
mov
rcl
subb
dec
repnz
hlt
test
in
mov
bound
lret
adc
mov
scas
das
arpl
jns
pop
push
cmp
outsb
rorl
movsb
lret
das
jbe
sbb
and
sarl
notb
dec
cmc
int3
cmpsb
xchg
xchg
bound
add
jle
pop
jb
push
addl
popa
shl
out
ds
addr16
daa
push
mov
adc
mov
xchg
sub
lea
mov
testb
or
and
xor
mov
scas
outsl
rolb
pop
add
pop
add
xchg
ja
mov
add
lahf
repnz
inc
ja
mov
mov
rol
repnz
repnz
aaa
inc
mov
xchg
out
and
inc
notb
jbe
ss
leave
add
aad
loop
es
adc
ja
adc
xchg
xchg
stos
jecxz
xchg
lods
push
mov
push
iret
sahf
dec
data16
xchg
out
inc
mov
and
mov
adc
addr16
cmp
shll
ss
sub
mov
ss
rcl
mov
shl
xchg
test
or
ljmp
mov
mov
test
lahf
mov
sub
into
push
into
inc
dec
and
bound
roll
mov
mov
imul
or
outsb
adc
push
data16
inc
xor
shll
adc
add
rcll
xchg
shl
aas
shlb
sbb
mov
lret
sub
pop
jbe
inc
push
shll
xchg
sahf
xor
push
cmpps
push
lcall
out
ds
and
mov
cmc
jae
add
sub
jg
pop
lds
adc
jno
add
mov
inc
lea
cmc
into
cmc
ret
jne
insl
movsb
mov
ret
jg
fisubrs
pop
mov
inc
cmpsl
xor
outsb
bound
mov
aad
into
icebp
movsb
outsb
addr16
arpl
dec
and
pop
xor
mov
stos
xchg
lret
roll
std
lcall
mov
mov
xchg
roll
lret
mov
mov
push
ficoms
outsb
mov
dec
shl
ja
xchg
loope
push
ss
das
add
add
xchg
adcb
mov
adc
shll
outsl
inc
jb
pushl
inc
ret
arpl
rclb
lea
into
repnz
fs
push
inc
xorl
push
movsb
mov
xchg
xlat
mov
lret
inc
xchg
insl
iret
add
adc
jbe
and
and
lea
jne
jecxz
sahf
push
or
test
rcrl
xorb
aaa
je
push
lock
pop
outsl
mov
jo
jb
test
mov
jae
in
sub
add
aaa
mov
xchg
cmpsl
lds
sub
xor
fs
cmpsl
pop
xchg
emms
push
push
jne
push
xchg
rorb
ljmp
push
fstpl
mov
enter
aas
inc
out
in
jecxz
add
cmpb
cli
xchg
outsb
je
jne
mov
test
jl
and
fcmove
pop
pop
pop
lret
mov
xor
mov
test
inc
imul
mov
mov
imul
aaa
and
inc
repnz
adc
add
adc
push
xor
inc
adc
mov
mov
pop
stos
push
jg
push
je
pop
mov
mov
jo
scas
dec
mov
pop
cld
cmp
push
jg,pn
xchg
fs
cmpsb
icebp
std
adc
cmpsl
iret
inc
xchg
and
cmpsl
mov
cs
ja
loop
rorb
ljmp
mov
int
mov
mov
data16
mov
loop
cmpsl
inc
jbe
push
xlat
cmpsl
mov
into
ret
jecxz
test
push
addl
push
or
movsl
adc
inc
out
xor
jo
sub
jne
and
adc
out
in
jbe
mov
test
cs
jae
dec
sbb
stos
mov
mulb
inc
leave
aad
inc
cmpb
shrl
mov
cmpsl
ficoms
lret
add
xchg
lods
lods
xchg
outsb
xchg
fsubl
pop
inc
shl
jo
push
xor
leave
add
and
pop
cmpsb
mov
mov
xchg
testb
pop
cs
mov
aaa
inc
es
push
pop
insb
icebp
adc
cld
pop
mov
stos
testb
jne
ficoms
aam
add
subl
cmp
dec
xor
and
hlt
mov
fldenv
jae
mov
ljmp
mov
mov
cs
daa
sahf
cmpsl
pop
inc
repnz
ror
push
push
testb
mov
cmpsb
movsb
xchg
jno
daa
inc
scas
add
pop
adc
push
bnd
mov
fwait
add
es
bound
movsb
adc
add
jo
test
jo
loop
aas
cmpsl
mov
mov
dec
xor
leave
xchg
push
repz
outsl
jb
pop
push
adc
and
xchg
shll
lahf
rcr
mov
cmp
xchg
jno
mov
adc
popa
jne
fsubl
and
stos
rorl
push
push
iret
adc
scas
jle
mov
mov
mov
fwait
xor
jb
addb
adc
out
addr16
bt
add
mov
imul
lods
aaa
dec
repnz
hlt
ret
inc
sub
arpl
xlat
add
icebp
adc
daa
mov
jo
in
movsb
adc
push
hlt
xchg
notb
sbb
pop
jns
xchg
repnz
ja
jo
ja
push
pusha
das
outsl
pusha
adc
cmpsb
inc
adc
into
adc
mov
add
bound
ret
rol
mov
push
nop
inc
xchg
push
test
ss
xchg
mov
fists
loopne
pop
xchg
push
xchg
aas
addb
shl
rcll
push
mov
scas
mov
adc
mov
mov
inc
dec
pop
xor
mov
inc
push
push
jns
das
push
into
mov
daa
push
jae
add
inc
les
bound
mov
ret
xchg
push
and
aas
das
mov
cmovg
ss
int
mov
insb
arpl
add
in
dec
push
push
pop
jno
mov
ret
test
push
lfs
xor
sbb
mov
les
mov
icebp
mov
push
cmpsb
ss
lock
mov
inc
xor
mov
shrl
mov
mov
in
addr16
jns
jne
jno
xor
adc
jne
jnp
leave
je
fsts
scas
hlt
addb
cmpsb
jne
adc
adc
xchg
out
add
push
imul
xrelease
lods
and
scas
inc
inc
popa
mov
outsl
dec
adc
mov
inc
xchg
rcl
jle
lret
inc
push
mov
and
xchg
xchg
ja
push
test
in
xchg
les
mov
pop
filds
mov
imulb
jb
aad
xor
mov
je
adc
sub
jl
mov
mul
xor
xor
pop
inc
cmp
xor
ja
xor
rcll
pop
popa
jne
dec
repz
mov
adc
lahf
xchg
dec
xchg
cmc
jg
ja
add
adcl
lods
push
cmp
cmpsb
mov
iret
mov
adc
push
lods
adc
xchg
sub
nop
aam
divb
inc
scas
sbb
daa
movb
nop
xor
xor
adc
inc
xor
int
cmpsl
bnd
das
sbb
test
and
rclb
mov
sub
mov
mov
sbb
mov
scas
divl
mov
jecxz
outsb
out
inc
push
addr16
stos
push
sub
insb
mov
or
hlt
inc
jl
lds
xchg
adc
aas
pusha
int
scas
adc
jne
pop
sbb
xor
loope
fisubrs
pop
pusha
mov
pop
push
xor
jo
jne
aam
sahf
aas
push
mov
mov
movsb
outsl
xor
scas
jno
inc
xor
xorl
hlt
xchg
insl
out
xchg
loopne
aas
push
mov
icebp
adc
sub
mulb
mov
jbe
int
sarl
mov
stos
pop
and
rcll
sbb
mov
imul
xchg
mov
mov
scas
dec
icebp
mov
add
rclb
mov
adc
adc
out
adc
dec
push
scas
ja
test
mov
and
cmpsl
in
and
idivb
xor
pusha
jg
xchg
xor
gs
nop
ss
aad
ja
jb
mov
cs
ss
addr16
std
inc
test
and
aad
cmc
addr16
stos
imul
mov
pop
jle
xorl
jbe
mov
mov
pop
add
into
mov
mov
test
ljmp
pop
test
arpl
mov
mov
aad
mov
mov
xchg
xchg
insl
mov
adc
push
inc
push
loopne
jne
gs
xchg
inc
xchg
nop
adc
xchg
aam
test
xor
dec
xchg
add
or
add
rcll
fimuls
push
adc
ja
add
js
je
mov
and
addb
aad
int3
push
xchg
mov
pop
xorl
ss
sbb
into
xchg
addb
and
pusha
in
pop
test
mov
xor
cmc
scas
rcl
add
xchg
push
repz
inc
ja
ret
lea
nop
xchg
inc
jae
arpl
cmpsb
push
mov
xchg
mov
es
roll
xchg
pop
mov
jg
jbe
xchg
jb
je
in
mov
jbe
push
mov
nop
xchg
pop
mov
repz
test
xor
push
xor
mov
mov
xor
sbb
xchg
into
mov
in
and
adc
enter
dec
inc
int3
test
xor
mov
hlt
testb
xor
mulb
loop
mov
dec
out
push
jl
shlb
leave
cmpsb
outsb
dec
es
addl
push
jne
rolb
jne
or
inc
popa
notb
add
repz
data16
negb
inc
lret
out
loopne
xchg
ja
xor
inc
setle
mov
in
xchg
es
insb
add
subl
sub
push
push
push
cmpsl
roll
cmpsl
test
aas
mov
int3
mov
popf
cmpsl
pop
xchg
xchg
out
into
es
ja
sbbb
je
icebp
and
cmpsl
sub
ja
push
popf
cmpsl
xchg
adc
sbb
mov
xor
add
pop
pop
inc
mov
ja
mov
out
ljmp
outsb
push
inc
clc
dec
xchg
insb
jg
dec
popf
and
cli
pop
dec
cmpsl
add
outsl
mov
adc
out
xor
add
add
outsl
inc
outsl
xchg
ja
cmpsl
ret
imul
mov
pop
dec
adc
inc
scas
mov
sahf
sahf
out
mov
mov
mov
add
fs
enter
jecxz
into
ds
in
sub
pop
mov
pop
imul
pusha
outsw
scas
scas
mov
push
inc
sub
scas
push
ja
inc
cs
cmc
es
adc
sub
inc
push
push
movsl
sbb
ss
mov
lcall
testl
outsl
add
ss
es
movsl
push
outsl
ja,pt
mov
mov
xchg
out
shrd
cmpsl
xchg
adc
lock
cmpsl
adc
stos
ja
cmpsl
xchg
iret
cs
scas
push
in
gs
dec
cmpsl
mov
sbb
scas
aam
outsb
ret
adc
outsl
push
mov
fsts
xchg
bound
outsl
dec
shl
insl
adcl
or
push
mov
mov
push
cmpsl
rcrb
adc
cmpsl
inc
pop
pop
sub
ja
inc
lcall
int
cmp
outsl
mov
push
bound
test
mul
inc
jecxz
lods
push
cmp
ja
and
xchg
jae
jne
push
lea
pop
xor
mov
test
pop
xchg
xor
out
das
ja
shufps
mov
or
xchg
xchg
cmpsl
push
into
sub
xor
in
andb
outsl
mov
jbe
xchg
xchg
andb
push
fimull
push
adcb
pop
mov
cmpsl
js
jne
outsl
sahf
xchg
dec
popf
mov
inc
mov
pcmpeqb
jbe
pusha
hlt
or
xor
inc
xorl
push
dec
pop
jnp
cmp
jo
andb
aaa
jb
inc
mov
and
into
push
dec
push
in
dec
xor
enter
subb
lds
adc
inc
cs
mov
cmpsl
lcall
pop
cmpsl
dec
fldl
push
outsl
ljmp
jle
add
cmovg
mov
push
outsl
adc
mov
popf
ja
push
out
and
out
mov
outsb
jmp
or
into
push
mov
outsl
cs
sbb
adc
mov
adc
outsl
ss
es
and
and
sbb
rcrb
add
lds
or
xchg
movsl
cmpsl
push
iret
lds
dec
ja
xchg
push
mov
mov
jns
push
mov
pop
addr16
ja
jbe
inc
pop
mov
xchg
pop
stos
xchg
push
cmpsl
div
into
ficomps
ficoml
mov
adc
push
xchg
push
scas
ja
cmp
pop
int3
cmpl
iret
mov
ja
fimull
pop
in
jo
outsl
push
push
mov
add
xchg
addr16
hlt
jo
into
cmpsl
dec
aaa
xchg
test
hlt
mov
xor
inc
xchg
sub
insb
mov
mov
push
testb
mov
pop
cmpsl
inc
outsb
xor
mov
test
sahf
mov
fidivl
xor
aas
mov
icebp
cmc
mov
mov
bnd
das
add
xor
mov
daa
mov
xor
jne
cmpsl
push
push
sbb
testl
xor
push
dec
mov
inc
jmp
push
lcall
cmpsl
adc
mov
aam
adc
or
push
xchg
push
ja
aam
mov
inc
data16
scas
add
jl
mov
bound
pop
subb
xchg
es
and
lret
loope
jge
dec
add
xchg
scas
mov
mov
xchg
pushf
pop
mov
sbb
inc
dec
addr16
xchg
mov
mov
daa
mov
adc
divb
loope
inc
xchg
jo
inc
sub
shlb
clc
ret
pop
add
jl
mov
cmp
inc
jecxz
test
insl
push
movb
mov
aaa
xchg
push
data16
xchg
add
push
scas
add
loopne
jno
xor
xchg
movb
xchg
jl
inc
inc
loope
lea
push
push
je
mov
outsl
sarb
mov
inc
notb
pop
adc
iret
faddp
xchg
sub
xor
mov
xlat
pop
xchg
je
test
inc
add
mov
ljmp
arpl
xor
and
jae
inc
test
mov
adc
mov
rorl
cmpsb
bswap
xchg
jmp
lds
into
mov
loop
xchg
xor
cmp
push
jb
fiaddl
inc
negl
stos
inc
in
xor
dec
bound
xchg
dec
xor
xchg
andb
xchg
xchg
and
fs
xchg
dec
daa
mov
xor
jle
mov
pop
push
cwtl
jle
daa
adc
clc
or
and
stos
add
and
xlat
xchg
adc
mov
sub
lds
scas
jge
scas
dec
add
sbb
and
mov
mov
outsb
pop
jo
push
inc
int3
push
jp
mov
mov
sub
mov
dec
pop
push
int3
setne
fs
mov
lods
shlb
push
fs
pop
loopne
es
sub
pushf
mov
push
adc
xchg
sub
sbb
adc
sbb
lret
insl
mov
inc
dec
mov
ds
rclb
ds
or
cmp
mov
adc
dec
xchg
test
jl
int3
je
fs
xor
mov
mov
mov
jne
cld
mov
lods
push
sub
aaa
enter
jecxz
xchg
pushw
xlat
dec
mov
push
shl
cltd
sarl
cltd
outsb
data16
inc
pop
fisttps
divl
ja
xchg
mov
cmp
out
xchg
cld
aad
dec
shl
lds
inc
mov
xor
push
adc
ret
je
ja
push
jmp
addr16
push
call
jecxz
fdivs
cwtl
push
mov
iret
imul
shll
xor
rclb
xor
or
sti
mov
pop
mov
cmpsl
sbb
pop
insl
lea
lret
xchg
mulb
sub
adc
fwait
xor
xchg
insl
pop
add
fwait
stos
testl
add
adc
mov
nop
mov
inc
adc
rol
adc
inc
adc
rol
adc
push
xchg
mov
inc
adc
dec
aad
push
mov
push
mov
xchg
mov
xchg
dec
test
mov
push
mov
xchg
dec
push
adc
push
mov
xchg
push
dec
xchg
shll
inc
push
mov
xchg
adc
je
aam
xor
push
mov
xchg
pop
dec
ja
neg
or
jno
icebp
jb
repnz
jae
repz
je
hlt
jne
xchg
mov
dec
iret
xchg
leave
int
pop
mov
movsl
inc
popf
mov
xchg
lea
jge
jne
mov
pop
mov
xchg
dec
dec
inc
cmp
and
xchg
or
dec
popa
orb
in
pushf
loope
or
mov
dec
xchg
inc
dec
cmp
xor
sub
mov
adc
or
add
aam
dec
adc
mov
or
xchg
loope
inc
pop
dec
repz
xchg
ja
lods
rcrb
jnp
fadd
or
xchg
loope
inc
pop
dec
movsb
outsb
xchg
data16
lods
lret
add
xor
push
jle
xchg
mov
jo
push
dec
inc
and
push
adc
enter
mov
repz
dec
cs
ss
ds
inc
or
in
stc
shl
enter
lcall
lcall
sti
stos
in
cli
shl
enter
lcall
ja
mov
jne
push
arpl
cs
ss
inc
inc
std
int
pushf
mov
push
sbb
popa
push
mov
push
bound
fidivl
xchg
or
sbb
mov
inc
cmp
arpl
gs
insl
mov
inc
jge
test
lea
xchg
mov
lods
mov
sbb
mov
inc
int
mov
mov
leave
outsb
mov
inc
sub
lock
cltd
lds
outsl
xor
add
inc
mov
pop
fidivs
repz
push
test
or
jbe
and
or
cli
pop
lods
jbe
clc
push
cmpsb
dec
cmp
lods
cmpsb
lahf
adc
adc
js
data16
or
cmp
popa
popf
mov
pop
sahf
lods
xchg
loope
out
mov
sahf
out
push
je
jbe
push
mov
imul
call
push
aas
xor
pop
sub
xchg
mov
in
popf
jnp
mov
addr16
push
mov
cmp
sahf
inc
cmp
shr
inc
push
mov
push
out
xchg
out
mov
inc
divl
xrelease
xchg
or
aad
sbb
and
inc
xor
jo
mov
xchg
lock
inc
jno
dec
icebp
mov
xchg
mov
xchg
adc
mov
push
mov
idivl
js
nop
xchg
orb
mov
inc
cwtl
mov
xchg
mov
testl
rol
mov
mov
rolb
mov
xchg
je
loopne
jne
call
ja
clc
mov
xchg
add
or
inc
sbb
aam
sub
inc
cmp
push
dec
enter
jo
mov
xchg
xor
icebp
mov
xchg
mov
xor
add
mov
fadd
mov
push
aad
test
dec
mov
xadd
dec
into
leave
inc
jb
shll
xchg
loope
xor
mov
inc
icebp
mov
xchg
stc
dec
cmc
movb
jbe
mov
adc
jo
mov
fadd
mov
push
mov
inc
shll
cmp
cmc
mov
aaa
mov
push
scas
push
mov
cmp
mov
lock
loopne
add
test
addr16
pop
dec
fwait
notl
xchg
es
ret
push
mov
out
xchg
add
xchg
jbe
stc
inc
ret
aaa
leave
jns
test
push
pop
push
sbb
push
mov
enter
cmp
inc
in
adc
and
in
cmpb
daa
mov
push
mov
rcl
push
jmp
loope
scas
dec
jns
mov
add
nop
mov
mov
sub
loop
fwait
lret
sar
and
and
leave
push
xor
dec
call
inc
mov
inc
mov
int3
sbb
cltd
push
out
inc
out
adc
leave
rcrl
sub
loope
hlt
ret
jmp
jno
negl
and
mov
xchg
inc
xchg
jb
addr16
xlat
jbe
nop
and
orl
ss
iret
xorl
add
lret
icebp
xchg
pop
inc
lods
xor
adcb
test
aad
repz
xorl
xchg
pop
and
out
fwait
mov
sbb
aam
pop
pusha
push
movsb
dec
jbe
sbb
adc
aaa
add
inc
push
xor
and
jns
divb
dec
xor
cmpsb
or
push
daa
adc
jbe
push
inc
jbe
rorl
mov
inc
xchg
adc
das
cmp
icebp
in
lds
int
mov
das
test
pop
dec
aaa
ret
push
mov
xor
xor
sub
jb
stos
in
push
lea
jmp
inc
divb
mov
stos
addb
mov
mov
aas
inc
inc
xor
movsb
mov
pop
xor
rclb
inc
inc
aad
popa
shrl
mov
jae
ret
gs
inc
push
mov
xor
aas
ret
xchg
idivb
adc
add
inc
mov
aaa
mov
push
jae
adc
mov
mov
int
xchg
test
push
pop
loop
aaa
movsl
fs
shll
mov
jmp
mov
ja
and
cmp
xchg
xchg
repnz
inc
inc
aad
inc
mov
movsl
sbb
aam
dec
push
mov
cmpsl
xchg
push
inc
repz
add
jp
push
ss
addr16
add
push
mov
jns
hlt
mov
ret
icebp
divb
popa
mov
xchg
andb
fdivs
mov
xchg
mov
aaa
cltd
nop
mov
out
icebp
add
jecxz
push
addr16
xchg
loope
std
adc
imul
push
mov
push
push
mov
push
mov
lds
aaa
mov
xchg
jbe
push
addr16
dec
es
mov
imul
mov
mov
sbbl
repnz
testl
xchg
and
inc
add
cmp
cmp
ja
sti
push
sub
ret
xchg
mov
and
push
mov
cmp
mov
or
jbe
rcl
lds
test
into
inc
scas
inc
mov
add
lds
pop
rcrl
xor
or
movsb
mulb
xchg
aaa
and
cmp
mov
sub
jg
mov
ret
testl
aam
sub
cld
mov
jo
inc
push
sbb
rclb
mov
inc
cmpsl
fiaddl
rolb
mov
xchg
test
ret
xchg
gs
xor
fsts
mov
pop
xchg
cmp
inc
jg
nop
xchg
out
mov
outsb
xor
cmpl
aaa
shlb
push
dec
xchg
inc
xor
stos
insl
hlt
ja
mov
fcomps
cmp
arpl
inc
fisubrs
outsl
pushl
ss
inc
ret
jmp
mov
test
jmp
lret
insl
ja
and
ja
push
push
icebp
inc
mov
scas
mov
or
ja
mov
cld
mov
inc
in
mov
xchg
fmull
int3
mov
test
lock
xor
jb
rclb
mov
xchg
mov
xchg
adc
imul
int3
inc
xchg
xchg
fld
push
xchg
inc
jb
les
inc
icebp
xchg
pusha
xchg
test
push
mov
push
in
ja
arpl
push
mov
jbe
sub
rcll
pop
lods
sbb
cli
je
shll
cmp
es
mov
ror
test
push
dec
pop
sub
push
xchg
add
je
outsb
push
push
push
xor
jno
dec
inc
xchg
push
push
add
in
push
xchg
lea
aad
mov
xorl
scas
or
aad
ret
push
aas
icebp
xchg
xchg
pop
aas
int
pop
rcll
dec
mov
push
test
nop
xchg
cmp
test
dec
adc
pop
and
xchg
dec
cmp
push
shll
lods
aam
adc
push
adc
dec
jo,pn
setno
dec
dec
adc
loope
mov
pop
rclb
call
push
push
adc
push
addl
cmpsb
aam
shlb
pusha
stc
lds
lock
jno
lret
cmp
push
rcl
and
jne
jno
jo
push
sbb
adc
push
pusha
ret
xchg
mov
dec
push
sbb
cmp
adc
inc
and
lds
xchg
aad
lds
cmp
lds
xchg
repz
insl
aam
xchg
call
ja
outsl
dec
loopne
cmpsl
push
repz
push
push
push
xchg
inc
rcrl
aam
adc
aad
shll
jp
rol
push
aaa
add
aad
lds
push
xchg
insb
xor
or
sbb
xchg
mov
mov
jno
sbb
jno
outsb
cmpsl
mov
inc
je
inc
lock
lret
test
popf
insl
pop
sub
iret
fsubl
fsts
push
int
push
out
ror
mov
aas
xor
mov
push
ds
mov
jp
pop
out
movl
push
xchg
ja
inc
adc
xchg
inc
jno
loopne
xlat
loop
ret
sti
jecxz
push
ret
and
fimuls
pop
aam
jbe
dec
mov
xlat
cmovg
xlat
pop
inc
xchg
std
jle,pt
xlat
in
data16
out
cmpsl
mov
cs
out
das
outsl
scas
cmc
xlat
jbe
divb
ja
aas
addr16
iret
mov
addr16
dec
add
mov
outsl
push
pop
jmp
std
rcll
daa
inc
aad
lahf
pop
xlat
cmpsl
pop
aas
ja
xchg
ds
mov
es
sahf
inc
jbe
mov
xlat
push
cmpsb
push
into
outsb
mov
mov
mov
rorb
xor
push
mov
and
xchg
outsb
scas
add
mov
mov
add
fwait
xchg
xchg
ja
cmp
xchg
adc
aaa
push
add
repnz
push
dec
je
adc
xchg
loope
xor
mov
out
aam
push
rclb
fwait
mov
rcll
aaa
cs
mov
xchg
adc
jnp
lss
into
mov
push
cmpsl
ja
sub
push
jne
shll
sbb
leave
outsl
inc
sarb
popf
push
xchg
mov
xchg
xchg
lret
inc
jbe
bound
push
ret
jae
ja
mov
jb
push
adc
lcall
sti
or
and
mov
lock
xchg
ja
dec
add
outsb
dec
adc
xor
mov
jne
notb
push
xchg
bound
insb
jg
cwtl
repz
xchg
dec
aaa
int
addr16
int
mov
ss
in
mov
xorl
xchg
xor
mov
jo
pop
jge
ret
lret
jge
mov
stos
add
das
iret
mov
dec
mov
lret
negb
cmovnp
cmc
subb
sqrtps
or
unpcklps
push
setne
xchg
lcall
into
rolb
xchg
mov
mov
add
cmp
aaa
xor
out
ja
mov
xchg
pop
cs
ret
xchg
mov
aad
ss
cmpsb
jbe
arpl
lea
ja
cmp
inc
adc
aad
push
inc
aaa
xchg
cmc
aaa
mov
pop
push
dec
jae
cmpsb
ja
dec
out
aad
mov
jae
dec
pop
testb
xchg
push
imul
fstpt
cltd
xchg
add
pop
mov
aaa
rcll
lds
test
jne
dec
push
notb
mov
xchg
push
mov
or
adc
xchg
pop
repnz
mov
outsl
jb
jne
push
sbb
shl
into
ret
aaa
cmpsl
jbe
mov
add
clc
xchg
push
test
pop
or
dec
fidivl
add
jbe
into
ja
fiaddl
xchg
xchg
cmc
sbb
xor
or
xchg
or
outsl
hlt
aaa
mov
xor
push
adc
lds
cmpsl
aaa
xchg
push
mov
sahf
push
xchg
xchg
inc
jne,pt
mov
and
scas
mov
call
mov
clc
repz
mul
loopne
lret
and
push
jb
push
dec
pop
mov
jbe
push
pop
inc
loop
or
leave
ds
xchg
test
into
cmc
mov
mov
xor
xor
xor
imul
mov
dec
shl
negb
jb
cld
leave
mov
dec
xor
mov
jae
les
int3
adc
jg
je
into
lods
fistl
sub
mov
pop
push
cmp
pop
mov
mov
or
nop
pop
cmp
mov
push
xor
and
push
add
clc
sbb
xor
dec
int3
xchg
adc
cltd
movsl
adc
inc
inc
inc
out
pop
gs
xchg
lods
push
ja
mov
pop
xor
aas
mov
lds
cmp
push
sub
mov
and
int
pop
xor
push
int
rcrl
push
int
inc
aam
not
and
in
pop
outsb
pop
or
jne
shlb
adc
or
arpl
dec
dec
arpl
push
push
lock
lods
push
inc
shll
mov
xchg
jle
xor
ss
xchg
imulb
popf
mov
mov
xchg
dec
aam
mov
mov
nop
or
xchg
div
arpl
mov
cmp
cmc
inc
adc
push
je
jbe
cmp
xchg
dec
jae
jne
lods
adc
push
inc
testb
dec
mov
inc
inc
push
mov
jg
popf
les
mov
inc
lds
mov
popa
push
add
xor
push
mov
inc
aas
push
test
xchg
xor
test
and
push
adc
int
push
and
mov
xchg
pop
mov
inc
cmpsb
push
jb
cmpsl
arpl
jo
mov
mov
inc
mov
arpl
fs
data16
inc
addr16
arpl
gs
not
inc
dec
push
dec
push
xlat
mov
dec
testb
rcll
push
iret
test
popf
int
shlb
fidivrs
inc
or
sti
arpl
inc
inc
sub
mov
cmc
popf
sub
cs
addl
arpl
lods
xchg
orb
imul
arpl
in
inc
add
popf
insb
mov
outsl
mov
inc
insl
push
add
movsl
xchg
cmpsb
aas
xlat
test
fcom
mov
mov
arpl
mov
mov
mov
sti
push
std
mulb
pop
dec
jl
jle
and
jnp
jge
popf
and
mov
popa
or
mov
popf
mov
repz
fidivrs
fisttpll
loopne
mov
loope
pop
inc
pop
push
pop
mul
loop
fisttps
test
mov
xchg
dec
out
dec
testl
ficoms
inc
or
mov
fstpt
xchg
sub
popf
sub
fisttpll
fistpll
xchg
push
call
out
pop
or
popf
mov
cmp
cmp
cmp
xchg
jns
popf
jp
js
dec
cli
idiv
pop
mov
fstpt
inc
lcall
mov
fstpt
inc
pop
fisttpll
negl
mov
fstpt
xchg
fistpll
scas
dec
rcrb
cmp
push
push
lods
dec
pusha
mov
mov
sub
adc
mov
xchg
adc
dec
into
into
hlt
push
movb
add
pop
les
aad
or
lret
testb
dec
pop
xchg
lahf
dec
cmpsl
pop
int3
stos
into
aad
mov
ret
dec
xchg
ja
leave
pop
push
stc
fistpll
mov
mov
fisttpll
mov
mov
repz
fadd
or
addr16
js
rcl
adc
inc
addb
inc
xchg
into
mov
aaa
mov
aaa
pop
dec
ja
mov
notl
lea
into
nop
inc
sub
into
adc
aaa
jno
icebp
mov
mov
pusha
push
movsb
xchg
psllq
adc
jno
jno
cmc
mov
aaa
iret
ja
aad
jo
mov
cmc
movsb
repnz
push
mov
mov
aaa
mov
mov
push
inc
push
xchg
push
mov
fs
shll
mov
mov
dec
mov
mov
imull
adc
push
seto
adc
movsb
xchg
unpcklps
mov
adc
into
mov
xchg
add
adc
pop
xor
jne
jo
cmpxchg
rclb
jno
xchg
push
xorl
movsb
mov
adc
mov
xchg
mov
test
push
lfs
jae
sysenter
orl
mov
movsb
nop
movups
ds
cmc
stos
jae
push
movzbl
lock
lret
unpcklps
xchg
jp
jae
repz
xchg
aad
push
les
mov
ljmp
lock
jle
xchg
adc
shlb
hlt
mov
orb
rorb
rdpmc
xor
or
aaa
xchg
inc
hlt
lock
movsb
xor
jno
mov
mov
xor
dec
icebp
push
and
adc
cmp
seto
mov
aam
adc
xchg
lcall
stos
ja
mov
xor
and
repz
or
fwait
addr16
inc
push
lcall
adc
push
xchg
aam
setno
into
jae
aaa
xor
xchg
xor
add
mov
aad
jo
mov
dec
pop
daa
nop
fcoml
xchg
shlb
adc
aaa
mov
scas
push
cmc
xor
hlt
dec
aam
push
shrd
divb
aaa
mov
xor
jno
adc
mov
xchg
adc
jbe
mov
push
into
xchg
in
mov
cmc
jbe
push
mov
xchg
xchg
jae
rdtsc
mov
js
aaa
insb
push
ds
push
mov
into
aad
xchg
stc
mov
je
xchg
adc
jbe
and
mov
cld
rorl
push
pop
xorl
push
shrb
pusha
cld
mov
iret
aaa
aam
sysexit
jbe
and
mov
idivb
adc
addb
xchg
rdmsr
xchg
xchg
sub
or
jne
jno
sub
movhlps
vpshld
mov
ja
mov
not
adc
sbb
xor
jne
bound
movsb
aad
ss
mov
cmc
movsl
mov
pushf
icebp
je
sub
xchg
lfs
hlt
orl
or
mov
sarb
adc
push
xchg
into
shrb
mov
repz
xchg
mov
push
cmpsb
pusha
dec
movsb
xchg
dec
testb
cmc
jae
movlps
shlb
jbe
into
dec
push
scas
mov
sub
jo
adc
xchg
mov
xor
hlt
xchg
mov
sbb
mov
mov
mov
push
inc
pop
push
ja
adc
mov
arpl
adc
xor
mov
arpl
pop
adc
xor
gs
shll
shrb
adc
xchg
ficoms
dec
xchg
xor
dec
testl
xchg
dec
ja
inc
aad
push
inc
adc
xor
aaa
mov
pop
arpl
mov
xchg
movsl
adc
and
dec
push
dec
cmc
jae
into
shlb
into
mov
aaa
mov
icebp
mov
inc
push
mov
inc
push
pop
dec
mov
xchg
xchg
aaa
dec
push
aaa
xor
nop
into
mov
aaa
mov
hlt
mov
dec
mov
lret
dec
jae
adc
add
ds
mov
push
movsl
lock
and
dec
aam
push
mov
repnz
sar
lods
jo
lds
adc
jg
shrl
nop
test
call
push
sarb
adc
ds
je
aam
push
movsb
push
movzbl
jne
inc
adc
fcmovnu
shll
pop
cld
push
xchg
jnp
pop
push
and
cmc
sub
xor
push
pop
icebp
stc
les
sub
jp
mov
or
xor
xor
je
lea
pop
add
cmp
sbb
and
sbb
and
xlat
xchg
cwtl
or
mov
jns
cmp
push
fwait
pop
in
xorl
adc
mov
jb
pop
push
mov
sarb
scas
into
stc
cmpsl
insl
pop
mov
fwait
pop
into
ss
daa
cmc
icebp
add
inc
imull
mov
adc
stos
mov
jo
test
cmp
jge
lea
xlat
call
mov
cltd
movhps
enter
xchg
test
dec
push
jne
inc
stos
mov
ss
and
mov
outsb
pop
es
stos
dec
push
mov
cltd
and
or
dec
push
outsl
repz
sar
pusha
pop
fsub
mov
pop
daa
push
jbe
xor
push
jno
sub
push
addr16
xchg
inc
xchg
movsl
imul
or
jg
es
xor
and
sbb
xor
dec
bound
fistpll
popa
roll
rcll
mov
fstps
mov
pop
jo
addr16
adc
mov
pop
mov
pushf
rcrb
pop
icebp
lock
ja
jno
leave
imul
xchg
mov
lahf
ror
push
mov
subl
cmp
or
notb
sbb
movsb
adc
arpl
cmpb
ret
inc
aaa
aad
and
ret
addr16
data16
cltd
jne
fsts
rcrb
mov
inc
cmpsl
cmp
ret
pop
mov
mov
xor
and
sub
fmuls
inc
adc
mov
pop
rcll
ret
xchg
dec
jne
popl
sub
mov
mov
into
gs
cs
xor
dec
sbb
inc
roll
bound
push
out
addr16
mov
inc
xchg
lahf
dec
mov
je
push
mov
mov
add
lds
adcl
cmp
push
xor
popa
loopne
or
sbb
xor
dec
pusha
cmp
and
fnsave
out
jmp
adcl
push
int3
pop
shll
aaa
idivb
les
test
adc
xchg
fadds
mov
test
lds
sub
cmp
inc
mov
lahf
push
or
out
sbb
xor
rclb
push
lcall
icebp
rolb
adc
xchg
mov
js
addr16
dec
stc
out
jbe
add
mov
ss
iret
imul
shlb
jb
icebp
or
data16
adc
dec
int
push
dec
pop
push
lds
xchg
int3
stc
jmp
sub
xor
lea
sbb
jno
sbb
cltd
mov
jmp
aad
bnd
imul
xor
dec
add
hlt
mov
xchg
push
insl
repz
inc
adc
popf
sbb
ss
push
aas
pop
ficoms
mov
jo
dec
aaa
xchg
mov
push
inc
stos
pop
inc
inc
add
xchg
idivl
or
push
outsl
daa
je
imul
xchg
imul
lds
xor
out
mov
mov
ss
ss
cltd
push
jmp
stos
ss
cmp
jae
fcoms
xor
shlb
rol
pop
hlt
in
ss
aam
or
xchg
inc
outsl
sbb
aaa
bsf
jge
mov
xchg
push
inc
dec
adc
jo
shlb
cwtl
sub
inc
sub
repnz
les
out
push
xor
and
stos
daa
ret
out
xor
inc
ret
cmpsb
sub
notl
leave
push
mov
jne
int
mov
fistl
push
movsb
push
mov
xchg
xor
pop
add
or
mov
push
ljmp
test
adcl
mov
out
shl
xchg
ss
mov
sub
mov
out
inc
mov
push
xor
mov
xor
mov
int
mov
xchg
out
cmc
dec
push
stos
sarl
jbe
add
pop
pop
push
push
mov
test
inc
xchg
js
es
pop
adc
push
shlb
ret
xchg
cmp
pop
add
mov
and
xlat
pushl
inc
sbb
fisubs
mov
stc
mov
mov
leave
jns
xchg
stos
ljmp
mov
adc
jp
sbb
inc
xchg
inc
xor
inc
mov
push
cmp
dec
stos
adc
mov
adc
mov
and
leave
jmp
pop
jne
sub
jle
mov
dec
xchg
and
sub
and
cmp
or
push
sub
xchg
arpl
push
nop
sbb
aas
jb
inc
ss
dec
jge
inc
cmc
push
mov
mov
cltd
sbb
adc
imul
mov
mov
leave
inc
add
es
dec
jge
push
sbb
stc
inc
mov
inc
mov
int
je
aam
inc
subb
jae
ret
pushf
xchg
lods
or
push
xor
sub
cmpsb
mov
cmp
sbb
lcall
int
movsl
bts
or
aam
stc
xor
bound
jg
mov
mov
enter
mov
jmp
loope
add
adc
push
fdivl
lods
cli
movsb
int
nop
mov
cmpsb
push
xchg
jno
pop
ret
xor
sub
mov
xor
fsubs
inc
mov
and
incl
out
or
shlb
fistpll
adcl
xchg
mov
mov
movsb
xor
push
enter
and
xor
fwait
push
popf
add
push
or
faddl
add
dec
push
jae
std
push
push
sub
push
xchg
mov
push
xchg
pop
sarl
xchg
out
pop
mov
mov
push
icebp
adc
shlb
jno
inc
xor
xchg
or
test
test
shll
inc
add
addr16
lea
movsb
push
ret
cmpsl
xor
popl
inc
sahf
fnstenv
into
lock
aaa
cmc
lcall
push
jge
fiaddl
adc
daa
daa
aaa
imul
xchg
scas
xchg
push
push
xchg
bound
enter
enter
mov
xchg
fs
adc
outsl
and
icebp
mov
lret
xchg
jne
into
sbb
xchg
inc
in
es
jne
jne
mov
addr16
adc
xor
push
sti
mov
arpl
mov
add
hlt
sti
xchg
jmp
pop
in
repnz
movsl
outsb
dec
test
popa
xor
push
xchg
sub
scas
push
xor
orb
aaa
adc
push
lret
adc
push
xchg
shlb
into
push
cmp
inc
lcall
pop
loope
cmc
mov
mov
ja
xor
orl
insb
push
xchg
scas
mov
mov
dec
push
out
jmp
mov
add
jb
xor
mov
sahf
or
mov
mov
jb
repnz
mov
xchg
xor
cmp
pop
inc
inc
pop
inc
out
xorb
and
add
loope
mov
sahf
cmp
call
movl
jle
andb
test
stos
jmp
mov
mov
rcl
push
add
mov
mov
jae
push
xor
movsl
pushfw
xor
das
mov
sub
enter
idivl
rcr
inc
out
adc
adc
in
xor
in
jge
in
jne
movsl
mov
test
xor
aaa
ret
xor
xchg
data16
int
jns
xor
mov
xor
stos
aad
mov
jb
mov
pusha
mov
pop
or
jp
ret
jb
mov
sub
loopne
push
jmp
inc
mov
xchg
nop
stos
movsl
push
sub
xor
inc
add
dec
jns
or
mov
xchg
loopne
add
fidivrs
arpl
lods
stos
popa
shrl
leave
mov
jbe
mov
lods
adc
fwait
jmp
or
push
scas
adc
xchg
push
and
cmpb
cmp
popf
popf
daa
movsl
ror
fs
mov
int
in
ret
xor
cmp
jle
adc
sbb
nop
xchg
shlb
pop
mov
repz
add
inc
loope
aaa
inc
and
int
mov
pop
push
push
inc
pop
lea
std
movsl
xchg
xor
aad
adc
add
mov
xchg
cmp
fwait
jo
sbb
ror
jns
mov
sbb
and
push
jno
hlt
outsb
ds
add
iret
fcmovnb
xchg
jecxz
xchg
inc
xchg
adc
repnz
xor
popa
movsl
pop
xor
aaa
sbbl
sub
test
mov
sahf
outsb
gs
es
mov
outsb
adc
and
mull
stos
dec
arpl
cltd
lcall
cltd
xchg
add
das
insb
push
jbe
xchg
mov
inc
add
xor
push
or
mov
xor
fsubr
dec
push
mov
mov
cmp
in
stc
imul
std
jne
insl
out
cmpsb
mov
sub
adc
xchg
push
dec
aaa
pop
pop
outsb
jbe
test
fwait
je
xchg
xchg
mov
pop
cltd
leave
out
test
popl
xor
xchg
push
and
jno
adc
insb
stos
addb
push
kxorb
and
xchg
jbe
mov
xor
stc
sub
sbb
mov
cmp
daa
cmpsl
jb
jb
mov
and
push
sub
int3
inc
sub
lods
ja
arpl
mov
repnz
and
int
mov
push
or
shlb
aaa
mov
dec
aad
xchg
mulb
gs
xchg
or
in
cmp
mov
cmp
and
xchg
mov
adcl
sub
in
and
push
leave
pop
int
xor
sbb
test
clts
lret
loopne
ds
xchg
or
push
adc
dec
cmp
or
dec
fsubrl
adc
inc
or
add
stos
xor
test
jns
es
lret
in
inc
mov
scas
jle
jns
jne
inc
mov
xchg
lret
mov
pop
popf
stos
push
xor
popa
out
test
or
inc
scas
leave
sub
rorb
xor
xor
shl
mov
jb
pop
cwtl
sbb
sbb
aaa
popa
loopne
repnz
pop
jl
cmpsb
cmp
mov
loopne
std
movsl
out
repnz
hlt
xorl
mov
and
pop
shll
sub
icebp
cmp
lds
xor
pop
mov
aaa
jae
add
arpl
pop
push
hlt
xor
ja
lcall
bound
and
stos
push
popa
sub
add
test
or
addl
xor
aad
lret
inc
aas
xchg
lcall
shl
sbb
test
movsl
xor
push
rclb
hlt
and
fnstenv
rcrb
add
pusha
push
jns
and
push
push
adc
lea
movsb
aad
nop
adc
loope
je
int
mov
and
daa
push
mov
jnp
movsl
adc
mov
and
rolb
out
mov
add
xor
jae
pop
push
dec
mov
leave
into
add
aaa
dec
and
mov
call
jl
hlt
mov
or
pop
sub
dec
xor
or
push
mov
mov
inc
loope
lahf
out
mov
aad
es
mov
mov
andb
jno
movsl
push
mov
xchg
jg
stos
mov
sub
hlt
loope
and
and
lret
add
push
mov
mov
js
icebp
sub
push
scas
xorb
dec
mov
ret
jle
mov
cmp
mov
jne
scas
pushf
xchg
sbb
testb
mul
mov
push
rcl
aaa
pusha
dec
cmp
mov
outsl
cmpsb
inc
dec
test
shrb
inc
cmp
scas
in
push
dec
jae
cwtl
dec
and
shrb
mov
xor
mov
add
xchg
adc
pusha
xor
insb
pop
jge
icebp
jne
xchg
lds
or
rcll
xor
daa
lock
cld
adc
mov
dec
cmovne
stos
fldt
rcrb
jmp
movsl
xchg
push
stc
sub
lds
and
adc
jb
outsb
xchg
xchg
or
adc
push
and
popf
xor
push
aad
add
sahf
xor
adc
das
movsl
adc
lods
mov
mov
fs
mov
aad
pop
cmc
cmp
jae
jae
gs
mov
aad
notb
cmpsb
roll
mov
mov
mov
xchg
xchg
mov
scas
popa
loopne
daa
cs
icebp
sarb
cmp
pop
cltd
add
push
imul
pop
fsubs
jg
iret
les
jle
push
mov
andl
mov
mov
scas
push
xor
push
bound
movsl
xchg
enter
inc
xor
sahf
mov
divl
push
mov
hlt
and
jecxz
inc
cmc
inc
lds
cmp
inc
adc
and
cmc
in
out
mov
scas
inc
pop
xor
pop
push
inc
inc
mov
dec
jg
pop
inc
pop
inc
test
sbb
add
push
xor
jno
sub
imul
push
rorl
inc
mov
jb
mov
mov
repnz
dec
jns
xchg
lahf
lods
aaa
stos
je
ja
shrl
adc
jp
inc
inc
outsl
shlb
mov
cmpsb
and
shll
inc
sub
mov
cmpsb
and
or
lret
push
push
stos
xor
aaa
fs
add
data16
roll
out
sub
addl
andl
in
aas
xchg
loope
inc
and
mov
movsl
daa
inc
int3
insb
hlt
cld
mov
cmc
cmp
inc
loop
movsl
lret
xchg
add
ret
gs
xchg
xchg
xor
xchg
in
cmp
inc
imul
cmc
jge
mov
inc
inc
xchg
sbbl
mov
and
and
add
arpl
sub
pop
sub
mov
push
dec
pop
movsl
lds
xchg
lcall
mov
jg
aaa
enter
xor
adc
stos
pop
test
add
rep
mov
cmp
mov
adc
inc
jb
hlt
xchg
adc
sbb
sbb
cmc
ret
inc
inc
xor
mov
and
or
test
cmp
xor
aad
mov
xor
jmp
fwait
stos
push
mov
mov
dec
shlb
aad
daa
xor
aam
sbb
or
sbb
insl
xlat
movsb
repnz
mov
ror
scas
addr16
and
inc
pop
lods
ss
inc
or
adc
sub
xchg
lret
xchg
xchg
addr16
ss
inc
jge
mov
int3
mov
pop
xor
mov
pusha
int
in
xchg
xchg
movsl
cmp
and
daa
insl
and
add
outsb
mov
xchg
or
jmp
pop
push
out
in
test
imul
inc
xchg
aaa
into
adc
push
sbb
dec
dec
xchg
add
mov
dec
jmp
mov
lock
sub
xor
repz
lahf
xchg
mov
push
cmp
lds
lea
mov
insl
test
push
and
gs
rorl
dec
mov
sbb
dec
mov
jno
inc
xchg
lods
and
lcall
ss
xchg
cmp
dec
insl
pop
jno
ret
push
and
mov
push
sub
sub
mov
fildl
test
dec
jbe
xchg
mov
xchg
imul
mov
sti
push
mov
mov
sub
nop
call
xor
sbb
xchg
jnp
cmp
xor
xchg
adc
jbe
outsl
and
lea
xchg
inc
xchg
pop
aam
mov
sahf
movsb
int3
mov
and
rorl
cmpsl
mov
int
js
fs
inc
jb
mov
ss
es
xor
mov
mov
xchg
fistl
movsl
gs
sbb
cmp
fnsave
pop
div
xor
pop
pop
nop
andl
dec
add
mov
push
push
adc
sbb
ret
sbb
std
ss
add
mov
fisttpl
loope
xchg
mov
jbe
into
test
dec
nop
push
dec
aam
icebp
fsubrs
mov
add
imul
inc
popa
inc
je
push
mov
mov
dec
sarl
mov
mov
lds
ret
cmp
cs
or
fidivs
xchg
into
subb
std
adc
inc
pushf
xor
inc
adc
mov
and
mov
mov
icebp
lds
mov
and
xor
sarb
xor
mov
ss
xchg
xor
push
push
jne
and
ror
test
jmp
push
stos
ret
movsb
and
insl
mov
test
push
ret
inc
ss
xor
daa
mov
cmpsl
pop
negb
jbe
shrl
movsl
push
lds
and
cmp
in
push
ss
xchg
jge
ss
mov
les
lea
rorl
mov
pop
jbe
inc
pop
stc
add
jmp
xchg
mov
sbb
add
pop
xchg
mov
mov
fs
fs
mov
ds
mov
nop
inc
inc
xchg
adc
adc
xchg
pop
jo
xchg
fs
fs
jo
dec
imul
int
mov
cmc
and
and
mov
lea
sub
out
push
inc
inc
movsl
inc
lds
dec
pop
push
aad
xor
dec
inc
aas
mov
roll
js
and
xor
xchg
stos
inc
in
out
xor
loop
clc
inc
adc
inc
and
inc
jbe
aas
addr16
jo
test
pop
inc
mov
mov
xchg
inc
or
pop
daa
dec
push
push
pop
test
and
dec
fs
roll
xchg
fmull
inc
push
xchg
loope
and
and
push
scas
mov
xor
push
addr16
or
jbe
adc
pop
ss
adc
mov
testb
ret
lret
mov
sub
xchg
lds
jns
int
pop
pop
insl
xchg
pop
fldz
lods
push
and
aaa
add
pop
aad
mov
call
push
and
mov
shlb
push
xor
pushf
aad
icebp
cltd
mov
cmp
les
fmuls
jb
sbb
mov
mov
fldcw
fisubl
push
out
movsb
mov
je
movsb
xor
lods
cmp
and
mov
xchg
cmpsl
notb
cmp
and
mov
push
sub
inc
mov
lahf
inc
fmull
dec
inc
add
adc
xor
imull
push
not
test
xor
xchg
sahf
out
xchg
inc
push
mov
pop
sub
cmpb
xchg
fwait
in
adc
ret
jne
loop
pop
gs
sub
adc
out
adcb
aad
jg
sti
mov
xor
pop
adc
cmpsb
xor
aas
mov
sub
add
cmc
inc
mov
lret
mov
scas
add
repz
add
mov
adc
cwtl
push
rclb
int
test
push
add
mov
inc
rcrl
rolb
sub
test
bound
ss
pop
outsb
cmp
adc
movsb
mov
xor
and
xchg
mov
and
mov
hlt
sub
push
mov
aad
testb
xor
lock
push
mov
mov
xchg
mov
mov
adc
test
push
mov
xchg
pop
dec
xchg
movsl
je
xlat
outsl
insb
je
jg
repnz
push
movsl
xor
mov
jb
nop
xchg
push
nop
movsb
push
add
adc
mulb
in
sub
sbb
clc
lret
lods
adc
mov
insl
mov
xchg
mov
add
xchg
cmp
adc
cmp
xchg
sbb
movb
movsb
int3
adc
xchg
jmp
xchg
aaa
push
xchg
notb
test
into
xchg
adc
movsb
call
add
icebp
sbb
ds
aaa
mov
jae,pn
jne
daa
insl
arpl
push
push
mov
pop
cmp
dec
pop
push
cs
or
or
in
and
xor
es
xor
sub
stos
push
icebp
aas
int3
cmp
inc
fsubs
mov
sub
ss
hlt
mov
xor
adc
cmp
ja
incl
push
push
xchg
mov
mov
dec
adc
ja
inc
dec
jb
iret
cmp
rorb
ja
push
mov
je
bnd
or
cmp
into
jbe
mov
mov
arpl
pushf
ror
xchg
test
push
imul
shrb
into
aad
inc
ss
lock
pushf
jno
hlt
lea
daa
xchg
movsb
xrelease
jle
jnp
test
push
dec
jno
out
icebp
cmp
mov
xchg
push
or
adc
arpl
mov
js
repz
adc
mov
insl
std
mov
mov
dec
adc
sbbl
movsb
icebp
rdmsr
popl
aaa
xchg
push
dec
je
mov
adc
je
dec
mov
icebp
inc
push
xor
jb
inc
mov
inc
xor
loope
push
testl
mov
jbe
xor
scas
add
sub
dec
sub
fisttpll
sbb
jge
xor
inc
push
std
lret
mov
gs
mov
cmp
in
adcb
rcrl
cmp
movsb
and
mov
inc
movsb
emms
jl
stos
adc
inc
nop
mov
out
cmp
push
jle
xchg
out
in
dec
cmp
cmp
loop
loope
mov
roll
data16
xor
stc
add
push
stos
xor
into
out
movsb
test
sarl
dec
fdivs
iret
aad
pusha
fcmovnbe
xor
je
jg
sub
mov
dec
jp
and
adc
push
add
lods
xchg
sub
out
roll
bnd
jle
sbb
rcll
rorl
aaa
bound
adc
xchg
xor
test
xlat
sub
cmpsl
in
mov
inc
popa
add
add
cmp
add
movsb
negb
xchg
pusha
sbb
mov
iret
add
imul
and
and
mov
push
mov
jmp
aad
outsb
inc
loop
or
ret
xchg
aas
test
ss
lret
test
inc
jns
or
pusha
lret
mov
mov
cmp
out
lgs
push
dec
dec
add
mov
add
in
pop
inc
xchg
pop
mov
or
es
je
ret
aaa
xor
inc
ret
push
idiv
adc
cmpl
das
add
inc
xorl
pop
mov
sbb
lds
int
loope
sahf
xorb
into
and
add
hlt
mov
adc
inc
xor
fldcw
scas
js
cmp
jne
sbb
test
inc
fldenv
push
dec
flds
mov
or
call
mov
bound
movl
arpl
mov
cmpsb
mov
push
ret
aaa
inc
mov
mov
shlb
shlb
bound
nop
xor
mov
jo
sub
hlt
ret
ja
push
mov
jbe
jno
movb
jne
movsl
add
imul
das
lds
pop
mov
pop
jo
pop
je
jmp
cmp
mov
xchg
addr16
inc
aaa
loopne
mov
xchg
mov
lds
dec
and
movsl
in
rolb
adc
pop
adc
ljmp
aaa
jbe
test
or
inc
jb
in
jno
shl
or
push
push
mov
enter
cmp
adc
pop
sbb
mov
pusha
in
xchg
mov
jae
icebp
hlt
xchg
lea
jne
cmc
jo
pop
mov
mull
push
cmc
insl
loope
push
je
int3
pop
ss
xchg
fldenv
pop
jmp
jg
cmp
sub
xchg
cmp
xor
push
fmulp
xchg
pop
rcll
xchg
add
push
lds
push
fmulp
popf
lods
xor
push
inc
dec
xchg
xchg
jns
je
pushf
les
sbb
mov
int3
repnz
fucomp
cwtl
and
pop
mov
enter
sarb
popf
xchg
lea
gs
push
dec
inc
cmp
sbb
les
dec
test
push
mov
es
push
push
jle
cli
lods
scas
ja
cmc
xchg
in
and
nop
jle
cmpsl
outsb
pop
mov
lods
xchg
pop
xchg
mov
push
pushf
and
shlb
es
ss
inc
lea
outsb
and
xchg
jmp
mov
pop
sub
sbb
pop
inc
lods
test
movb
icebp
push
adc
mov
in
add
aam
repz
gs
inc
or
adc
lods
rorl
lcall
movsl
inc
mov
mov
aam
cmp
enter
mov
int3
or
mov
sbb
mov
cmpsl
les
ficoms
cmp
inc
mov
push
lea
lea
dec
cmp
cmp
dec
rol
movsb
sub
pop
fcompl
xchg
xor
xor
in
jo
mov
pop
inc
xor
mov
scas
lock
jmp
mov
data16
or
xor
sarb
fs
jmp
adc
cwtl
jle
iret
pop
sahf
pop
add
mov
adcl
iret
cmpsl
adc
add
mov
rcrl
mov
in
adc
dec
daa
adc
in
dec
push
lea
nop
xor
lock
fidivs
xor
inc
mov
sub
dec
cmp
gs
insb
cli
push
mov
add
xor
mov
insb
xor
mov
jge
cmc
insl
sub
adc
pop
lods
adc
fucom
sbb
sub
stos
pop
nop
push
lock
std
out
inc
mov
cmpsb
push
mov
push
out
sub
xchg
jnp
xchg
pop
xchg
pop
dec
popf
dec
inc
pop
cmp
pop
outsb
ss
pop
stos
dec
out
into
xchg
or
push
xchg
pushf
pop
hlt
imul
lods
lret
data16
mov
imul
and
xchg
inc
das
xchg
mov
jle
lods
insb
mov
leave
pusha
pushf
lods
cmpsb
pop
ret
pushf
ljmp
mov
sub
cmp
imulb
std
push
mov
pop
push
stos
pop
mov
int
mov
add
ds
cmp
aad
push
xor
clc
and
jle
dec
push
icebp
rcll
lds
xor
push
stos
adc
test
xchg
mov
mov
mov
in
notb
lea
repnz
aam
jecxz
int3
inc
push
push
lret
ds
mov
xchg
or
fs
lods
rcll
mov
lock
push
fmulp
insl
pop
mov
jne
mov
movsl
lds
fsubl
hlt
fstpt
aaa
repnz
cmovg
inc
xchg
sub
incb
sub
push
in
push
fldcw
shrl
adc
aad
mov
add
cli
aad
push
lods
adc
gs
cmp
popa
les
push
xchg
cmp
adc
and
sbb
aad
negl
mov
lods
mov
loop
pop
xor
xchg
out
cmpsl
insl
lods
fs
fwait
rcll
popf
xchg
xchg
jnp
jecxz
mov
cld
cltd
push
inc
push
push
xchg
adc
stos
push
xchg
nop
adc
test
jp
out
test
push
push
nop
cmp
jmp
mov
push
add
inc
mov
pop
or
inc
or
add
inc
nop
insb
dec
into
test
fsts
jp
insl
mov
push
dec
lea
push
xor
pop
fs
int
mov
and
mov
stos
push
pop
xor
mov
cmc
dec
lahf
jbe
fistpl
cmc
xchg
push
mov
adc
mov
xor
push
lods
push
push
enter
cmp
outsb
rol
push
dec
or
dec
arpl
popf
push
mov
sar
pop
adc
into
jno
adc
mov
rclb
sub
cmc
sub
jbe
push
push
cld
out
rol
or
lods
imul
mov
xchg
ja
mov
cmp
pushf
push
cmp
mov
mov
push
xchg
xlat
test
dec
mov
sub
out
daa
rcrl
nop
inc
pusha
inc
or
inc
dec
jge
xor
scas
cld
lods
xor
and
fwait
mov
or
frstor
inc
push
lods
aam
dec
insl
add
push
mov
mov
lods
and
es
push
movsl
push
sub
inc
cmp
push
vrcpss
lds
lods
push
popf
push
inc
push
push
mov
in
xor
push
push
jae
or
xchg
orl
push
lret
push
push
sbb
les
inc
out
push
add
es
pop
rolb
cmp
cmp
cmp
imulb
test
dec
insb
sbb
mov
dec
xchg
sub
loop
ljmp
sub
clc
xchg
aam
adc
and
shll
cmpsb
nop
xor
inc
ss
stos
pop
jns
aad
sbb
ret
lds
or
mov
dec
pop
insb
xchg
push
mov
adc
xchg
xchg
cmp
inc
in
popl
mov
iret
rcl
fstl
enter
lahf
mov
insb
stos
mov
pop
daa
shll
rcll
adcl
mov
mov
scas
cmp
aaa
iret
push
sub
aam
movsb
pop
dec
lahf
popa
shl
in
xchg
iret
mov
or
mov
inc
push
lret
hlt
push
movsl
roll
outsb
adc
in
or
jne
rclb
iret
rclb
xchg
pop
jb
dec
mov
shl
mov
inc
push
mov
xchg
rorl
xchg
mov
xor
mov
xchg
mov
aad
cmc
mov
mov
jbe
xchg
xchg
mov
test
lods
xchg
rcll
adc
lret
push
dec
nop
lock
xchg
mov
inc
adc
adc
push
mov
daa
mov
mov
xchg
pop
dec
scas
outsl
mov
mov
inc
push
xchg
jg
xor
cmc
push
xchg
mov
xor
xchg
dec
xor
push
pop
mov
xchg
int
mov
inc
jne
cmp
aam
or
xchg
insb
dec
push
mov
inc
bound
cmpsl
push
jle
xor
lret
xchg
add
mov
xchg
dec
inc
mov
or
jne
lcall
dec
sbb
iret
test
xchg
mov
not
ret
or
into
dec
push
mov
movsl
stos
mov
fcmovbe
not
aad
shll
mov
adc
out
aad
xchg
inc
sub
int
mov
pop
push
ret
pop
std
test
nop
mov
lret
dec
scas
push
add
pushf
rcr
pushf
test
adc
rorb
dec
jecxz
push
aaa
jg
jno
movzwl
and
arpl
pop
into
push
mov
cmc
inc
fwait
push
cmp
flds
shrb
aas
push
imul
push
repnz
shr
adc
push
psadbw
mov
pop
xchg
adc
dec
ja
dec
rorb
dec
dec
aas
jecxz
pop
inc
mov
mov
cli
xchg
pop
dec
rol
mov
testb
xchg
or
aad
add
push
notl
mov
ror
lea
mov
iret
int3
rcr
fucomi
xchg
lcall
dec
outsl
aad
rclb
sbb
mov
and
out
fucomp
inc
leave
mov
aad
adc
xchg
aas
outsb
mov
int3
shl
movsb
push
rcll
into
ret
mov
xchg
cltd
clc
push
mov
adc
ja
mov
ficoml
inc
mov
mov
dec
fidivs
inc
into
mov
xchg
addr16
mov
outsl
mul
mov
xor
scas
xchg
mov
out
shlb
inc
adc
jg
xchg
mov
rorl
setne
dec
xchg
mov
rorb
pop
xchg
push
dec
mov
mov
xchg
mov
andb
fistpl
imul
xchg
push
mov
pop
sub
iret
xchg
pusha
push
ret
xchg
std
out
jge
inc
mov
inc
adc
xchg
movb
inc
shlb
cmovnp
movb
test
mov
mov
xchg
push
inc
movb
out
inc
xor
inc
inc
push
mov
xchg
and
mov
and
sub
dec
data16
movsl
mov
add
fildl
mov
xchg
loope
inc
movb
mov
mov
xchg
and
arpl
ret
cltd
mov
inc
mov
mov
daa
das
in
dec
jle
lods
pop
je
nop
cmp
ficoml
test
jo
and
add
repz
xchg
stos
fld
jmp
icebp
mov
nop
dec
lret
jge
into
iret
jecxz
aad
ret
movl
inc
push
add
clc
icebp
pop
adc
mov
arpl
or
mov
sub
not
iret
mov
mov
lods
inc
sub
in
mov
outsb
push
outsl
in
dec
test
push
fcomi
gs
mov
shlb
dec
ffreep
push
jle
xor
mov
xor
ja
sub
or
xor
push
ja
mov
mov
xchg
or
mov
cmp
pop
xchg
insl
fidivl
inc
mov
notl
mov
aad
xchg
mov
mov
mov
xchg
dec
xor
aad
xchg
xchg
scas
push
add
ja
push
mov
xor
rcll
adc
rcl
icebp
loope
bswap
mov
mov
arpl
xchg
lret
jno
cltd
sarl
rcl
push
loop
iret
push
jle
push
ljmp
scas
test
arpl
js
mov
sub
mov
xlat
or
shlb
pop
fcmovb
or
shl
sub
pop
adc
rcrl
jae
xlat
rorl
int
xlat
stos
jl
sahf
push
imul
repz
arpl
or
call
js
orb
mov
inc
mov
lret
cmpsb
iret
mov
push
pop
adcb
xor
mov
sbb
sub
lods
jno
dec
xlat
mov
mov
addr16
lret
mov
insl
adc
cmp
std
cs
inc
push
in
in
test
inc
add
push
lret
xor
int3
dec
out
jnp
adc
clc
pushf
subb
cmp
aad
shll
cli
xlat
sbb
add
aam
scas
inc
sub
pop
imul
dec
in
xchg
mov
roll
pop
imul
inc
mov
xlat
jbe
xadd
dec
mov
popf
push
jb
lcall
mov
jmp
xlat
ds
icebp
lds
lahf
sub
fldenv
cwtl
mov
int3
mov
dec
sbb
jp
rcrl
cld
enter
loope
sub
cmp
imul
loopne
add
mov
dec
pop
mov
mov
std
dec
int3
jnp
popa
shrl
lahf
cmp
rcrl
pusha
pop
imul
loope
stos
das
pushl
mov
aam
sbb
xchg
jmp
jb
mov
mov
movsl
push
xlat
call
cmpsl
jno
iret
xor
lret
in
jno
push
xlat
mov
jb
cmc
into
mov
ret
popf
sbb
out
sbb
lock
adc
nop
mov
mov
lahf
and
sub
clc
mov
dec
testb
inc
pusha
xlat
push
add
rcrl
xlat
ret
rclb
mov
sbb
jbe
lea
pop
cmp
pop
or
loopne
jmp
nop
mov
xchg
add
push
xlat
mov
lods
out
push
pop
cmpsl
pop
cmpsl
xor
dec
hlt
xlat
loopne
popa
inc
xchg
mov
mov
popf
mulb
inc
mov
sub
popf
rolb
scas
aam
sbb
imul
lea
aaa
cwtl
scas
mov
aaa
popa
scas
cmp
cli
insl
aaa
cwtl
repnz
xor
ljmp
fisubl
or
dec
aam
dec
lock
inc
scas
and
xor
aaa
cwtl
scas
inc
mov
popa
scas
cmp
inc
push
mov
jnp
inc
inc
ret
aam
or
fimull
mov
out
adc
fimull
in
mov
jmp
daa
dec
mov
push
leave
xchg
xchg
aas
rcll
dec
loope
outsb
leave
dec
jb
in
std
cmp
mov
mov
pop
test
dec
out
jne
test
sbb
lods
pop
lods
mov
inc
push
inc
pop
inc
mov
aas
lret
fstpl
ja
or
setbe
clc
pop
sub
mov
mov
pop
cmpsl
pop
cmp
pop
push
push
pop
push
mov
cmovge
mov
in
cli
fstpl
cmc
or
and
int3
scas
int
xchg
out
push
cmp
mov
mov
sti
push
movsb
outsb
movsl
inc
lock
into
pushf
sahf
popf
inc
push
outsb
xchg
fists
aaa
test
divb
adc
dec
mov
std
cmp
push
dec
sahf
fimull
cmpsb
mov
mov
mov
xchg
push
dec
pop
addr16
rcr
jbe
mov
mov
pop
aas
and
les
lds
notb
aas
gs
icebp
testb
insl
mov
jbe
jae
ds
xchg
cmpsb
mov
cli
aaa
push
cs
inc
fs
inc
loop
mov
std
push
push
mov
xchg
cmpsl
stos
test
lea
cmovnp
je
cwtl
mov
movntps
sub
pop
xchg
mov
lcall
xchg
jge
pushf
test
inc
popf
push
jae
xchg
aad
imul
push
mov
xchg
adc
es
mov
xchg
pop
dec
dec
sub
push
inc
dec
dec
ds
inc
aad
inc
xchg
cmp
mov
rolb
fwait
and
adc
xchg
jecxz
jge
test
mov
pop
shr
sti
xlat
xlat
mov
lock
pushf
rclb
les
je
inc
dec
std
pushf
gs
sub
jbe
cmpsb
push
add
jns
imul
fcomip
xor
xchg
pop
lods
es
insb
stos
jg
scas
out
iret
lret
sbb
sbb
aam
scas
sub
fistps
inc
xor
add
mov
xor
xorl
bound
into
shr
mov
pop
add
aas
loopne
mov
and
test
dec
jnp
lret
pop
jne
jg
jae
inc
xor
sbb
call
pop
or
and
sub
ds
js
imul
push
jb
psubusb
outsb
sub
sbb
adc
lds
dec
out
mov
cmp
clc
popf
sub
mov
pop
mov
sbb
leave
js
adc
leave
push
filds
add
jb
mov
push
rcr
mov
loop
mov
test
outsb
push
pop
cmp
xchg
rcrb
mov
lret
or
sahf
sahf
or
mov
adc
sbb
std
ss
lds
cli
out
aaa
and
mov
jno
fcmovb
mov
mov
mov
in
push
pop
clc
mov
and
aaa
fdivrp
add
clc
mov
std
movsb
imul
nop
mov
dec
jbe,pn
popw
mov
jb
add
xor
push
stc
out
out
loope
lahf
xchg
outsl
push
mov
mov
rolb
pop
xor
clc
dec
cmp
cmp
sub
dec
pop
mov
xor
adc
sti
push
push
aam
lock
push
add
adc
and
dec
add
adc
aad
data16
inc
mov
jno
divb
iret
pusha
pop
inc
shl
pop
sbb
mov
sub
sub
scas
dec
or
fs
mov
dec
lcall
mov
iret
mov
test
sbb
dec
rolb
mov
fldenv
mov
sahf
push
clc
adc
cmc
scas
out
push
clc
adc
jecxz
sti
xor
fsubl
movsb
xchg
cld
sub
xchg
inc
sub
lock
clc
cmpsl
pop
addr16
mov
outsl
add
das
fisttps
js
call
pop
adc
dec
int
lret
cld
lods
sub
shl
ret
pmaxsw
fcom
mov
popa
add
adc
test
mov
mov
cs
push
add
fwait
movsb
push
cli
mov
jno
push
jb
jo
mov
mov
fs
add
dec
fcomi
sti
inc
jecxz
aad
ja
les
inc
push
test
mov
mov
adc
jl
bound
ss
xor
int3
jno
leave
mov
fiaddl
xor
sbb
clc
sbb
nopl
or
frstor
sub
push
or
test
int3
lods
incb
mov
test
je
dec
inc
cld
cmpsl
sub
dec
dec
lret
loope
std
jbe
movsb
sbb
jo
std
dec
push
cmp
pop
jae
jp
decl
call
sub
mov
adc
or
pop
ret
loopne
cmpsl
sbb
out
mov
cli
lods
dec
mov
fs
clc
pop
movsb
in
fadds
jg
cmpl
mov
pop
outsl
fs
push
adc
pop
adc
bound
mov
dec
or
shr
jns
stc
decl
jmp
xchg
cmpsl
aaa
sbb
xor
sub
bound
add
or
push
in
mov
lods
or
pop
loopne
or
cmp
inc
and
mov
in
push
decb
rcrb
adc
lret
lahf
cmp
mov
leave
sbbb
daa
lret
int
mov
lcall
sbb
jge
out
pop
push
cmp
push
bnd
dec
std
cmpsb
pop
add
jb
into
mov
ds
cmpsb
cltd
orb
pop
xchg
sub
pop
push
inc
aas
cs
ljmp
das
outsl
push
sti
scas
notl
dec
adc
lock
xchg
in
mov
repnz
lods
repz
cmc
ds
ret
jae
xor
push
pop
fsub
xlat
jo
fisubrs
push
cwtl
jg
lea
das
leave
push
pop
arpl
or
xor
lret
test
in
add
movsb
sbb
inc
pop
lods
pop
push
inc
jg
mov
sbbb
push
mov
or
rcll
push
pusha
movl
pushl
movl
pushf
mov
push
push
lea
jmp
xchg
scas
shlw
fs
mov
imul
clc
mov
into
mov
cltd
cmp
in
pop
or
dec
fs
shl
mov
inc
lea
pop
pushf
mov
call
subb
stos
push
je
test
inc
or
mov
mov
mov
testb
fdivs
inc
mov
and
inc
shll
jp
cmpsl
jbe
or
bound
mov
cmp
popf
pop
mov
hlt
jge
lret
aas
cmp
test
lds
sub
adc
inc
jnp
jp
subl
jnp
inc
loopne
out
pop
ret
cmp
push
lods
mov
sbb
mov
or
adc
shl
pop
mov
mov
adc
outsl
movsb
mov
ret
sbb
repnz
fidivrs
jno
repz
cmp
test
clc
mov
or
mov
outsl
inc
cltd
cwtl
test
inc
push
pop
adc
and
neg
rol
mov
cmp
lea
icebp
nop
xchg
lret
es
adc
jo
setle
fisubs
sub
int3
adc
test
mov
lcall
mov
xchg
dec
les
push
stc
xor
pop
movsl
push
ljmp
cltd
push
in
mov
or
icebp
cli
out
jne
jmp
mov
push
cmp
push
pop
push
mov
mov
insl
mov
dec
fdivrl
sbb
mov
lds
mov
ret
ja
adc
push
rclb
out
and
rcrb
push
aas
out
xor
dec
dec
popa
xor
mov
and
insb
mov
mov
xchg
out
mov
mov
mov
fstpt
int
inc
mov
dec
inc
div
mov
push
roll
add
or
jbe
gs
bt
mov
rcr
setl
or
add
cmp
rol
shr
sets
mov
pushf
test
jmp
sub
aaa
mov
and
or
jecxz
lods
xchg
ja
pop
pusha
or
push
add
xchg
out
pushf
or
gs
les
cmpl
push
cltd
pop
sub
and
repnz
sbb
leave
insl
mov
incl
mov
sarl
idivb
dec
fs
idivb
out
pop
dec
mov
stos
inc
sti
push
imul
rolb
mov
or
scas
js
rolb
rorb
inc
dec
test
mov
pusha
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
test
bt
cmpb
pusha
call
bt
repnz
push
call
mov
mov
out
icebp
mov
xchg
inc
das
or
adc
lock
xor
jne
push
mov
sti
mov
jno
out
aad
jp
enter
test
lea
pushf
rcrb
push
cmpl
mov
sbb
mov
shll
pop
pop
lea
nop
in
xor
or
fs
loopne
into
scas
push
sti
jp
pop
mov
push
int
scas
push
xchg
pushf
jge
std
es
inc
mov
test
sbb
test
mov
int3
lret
repnz
sub
mov
sahf
cmpsl
cmpb
dec
sub
mov
lds
das
mov
fsts
ret
inc
ss
int
int3
cli
jl
sarb
sbb
xor
test
adc
jecxz
push
test
mov
js
ror
mov
jmp
movsl
jno
jg
int
das
into
cmpl
mov
sub
mov
jl
inc
and
test
fcoms
or
out
mov
je
sub
in
pushf
loope
nop
sub
jns
push
push
add
shl
jb
cwtl
icebp
scas
divb
neg
push
jge
jmp
imul
ja
push
scas
mov
and
pop
test
lock
and
mov
mov
cmpl
inc
cmc
push
sarb
jp
cmp
sub
jns
or
pop
and
jle
jns
leave
insb
mov
mov
movb
mov
pushf
lahf
mov
not
pushf
lahf
not
lea
pusha
call
aad
push
sbb
adc
inc
aaa
and
out
jmp
in
mov
mov
in
enter
bound
xor
call
add
cmp
out
push
subb
adc
dec
scas
andb
push
nop
dec
xchg
cld
imul
loopne
lahf
cmp
arpl
loopne
push
vcvtpd2dqy
aad
fists
inc
add
jns
imul
popf
ret
shll
mov
lea
jle
cmp
stc
cmpsb
push
in
mov
pop
popa
add
sbb
rcrl
ror
jge
mov
icebp
stos
imul
cld
add
insl
jnp
push
cmp
push
mov
je
xchg
push
jmp
pop
faddl
push
std
pop
push
enter
sub
xor
mov
inc
xor
in
and
jo
das
pop
out
or
lret
scas
add
ret
cld
mov
jmp
pop
adc
jbe
mov
addl
xor
push
xor
test
js
lods
pop
and
jge
jp
fs
push
or
fcmovnu
mov
xor
pop
add
mov
and
add
lds
jp
sarl
xor
mov
sub
xchg
mov
das
lods
mov
xor
ds
jl
pusha
push
push
cmp
push
stc
sahf
inc
pop
adc
mov
in
rcrl
fldenv
ss
ljmp
xchg
mov
lock
icebp
in
push
adc
das
fs
ffreep
sub
xor
jecxz
sub
mov
lret
jecxz
dec
dec
push
mov
movsb
iret
push
pop
inc
mov
pop
and
lds
dec
pushl
pushf
mov
cmp
fnstsw
lea
mov
adc
dec
lods
sbb
popa
push
adc
movsb
jp
testl
mov
fcomi
lcall
mov
cmp
push
dec
inc
fsubrl
xchg
inc
pusha
dec
jg
jns
inc
imul
enter
mov
sbb
stc
arpl
divb
leave
fistpl
cmpsb
aam
dec
mov
mov
jg
out
push
rcll
stc
cmpsb
pop
je
aaa
jle
sub
xchg
pop
hlt
mov
adc
mov
adc
pop
add
push
cmp
jl
pushf
lea
jae
test
pusha
cmp
movb
lea
jae
jmp
and
push
incb
cmp
sub
and
movsb
xchg
andb
jo
jns
fwait
inc
jmp
push
ret
or
lcall
and
and
mov
dec
test
fsts
mov
fnstsw
test
jbe
push
mov
xchg
mov
les
rclb
xchg
sarl
scas
push
mov
call
jns
popa
push
jecxz
std
repnz
std
inc
pop
sbb
or
in
or
pop
mov
in
lret
rorb
cmpsl
push
out
mov
adc
and
cmpsb
mov
push
push
stos
test
lret
cld
divl
add
push
pop
or
fcomp
mov
cmpsb
movsl
movsb
mov
movb
jnp
test
mov
cmp
pop
push
addr16
adc
add
sbb
or
adc
jb
or
mov
and
cmp
arpl
subl
inc
stos
lods
loope
adc
dec
aas
xor
mov
mov
cltd
add
cmp
and
cmp
aam
sub
lcall
dec
add
push
fmuls
js
iret
lods
jae
mov
lret
pop
cmp
pop
dec
sub
add
fstps
icebp
gs
lcall
xor
or
cwtl
in
push
cmc
lods
lock
jo
inc
inc
cld
inc
or
in
sbb
dec
mov
pop
xchg
pop
inc
je
adcb
scas
pop
test
pop
inc
pop
pop
mov
or
das
loop
add
es
test
push
popa
adc
stc
shrb
and
xor
lcall
in
pop
stos
inc
mov
cmpl
lea
popf
push
push
cmpsl
mov
pop
pusha
add
pop
lods
pop
in
mov
or
sahf
dec
hlt
stos
push
fdivs
jns
jge
aaa
push
push
cmp
hlt
sub
jmp
mov
xchg
and
test
repz
sub
loope
xchg
sub
in
cltd
sub
and
xor
or
cmp
pop
nop
leave
out
mov
outsl
cltd
jp
jne
mov
decb
in
cmpsl
clc
lahf
push
popa
inc
mov
mov
and
scas
jae
test
push
loop
sti
pop
xor
jo
xchg
push
push
decl
pop
and
jnp
fstpt
test
mov
xor
sarb
sbb
je
add
sar
and
je
add
je
adc
and
add
call
pushf
mov
pusha
lea
jb
call
pop
cmpsb
fwait
nop
cmp
es
je
cmp
sbb
jo
ret
jb
ja
stos
pop
cmpsl
xchg
dec
inc
pusha
shll
es
jp
stos
hlt
sbb
inc
scas
in
stos
cmpsb
inc
jnp
cld
jns
pop
mov
jmp
lods
imul
pop
or
pop
ljmp
iret
shll
xlat
add
mov
adc
mov
out
jae
mov
ret
out
xor
popa
cmpsl
cmp
push
imul
andl
pop
mov
push
mov
xchg
dec
idivb
dec
sub
inc
xor
adc
fcmovnu
int
cmp
das
add
jmp
popf
fistpl
mov
cmp
cmp
and
sub
in
mov
mov
xchg
mov
add
push
ljmp
icebp
movsb
dec
js
in
lods
repz
mov
jl
int
lcall
addr16
std
mov
hlt
xor
add
xor
push
cmpsl
call
jl
das
sub
ljmp
stos
cmp
pushf
cmp
je
adcb
jnp
ret
in
fnstsw
js
pop
inc
xchg
push
hlt
sub
sbb
jg
push
push
mov
cmc
mov
arpl
dec
std
push
push
xor
pushf
xchg
cmp
dec
dec
jmp
ss
out
imul
and
or
out
dec
mov
bound
jb
std
mov
cmp
and
enter
or
dec
popf
mov
jmp
imul
test
cmp
movsl
inc
sti
mov
out
push
icebp
fisubs
mov
add
pop
xchg
dec
mov
out
out
imul
pusha
mov
test
dec
mov
les
cwtl
addr16
mov
enter
aad
jb
and
cmpsb
mov
jns
cmp
loop
sbb
arpl
movsb
add
mov
sub
push
lock
test
out
inc
pushl
pop
int
movl
pop
push
enter
divl
sub
mov
mov
call
test
popa
push
push
sahf
pop
int
daa
jo
push
xchg
pop
pop
rolb
pop
test
sbb
outsb
arpl
push
and
sahf
fisttps
sub
mov
lret
xor
movsb
dec
movsl
xor
dec
cmp
test
popf
test
sbb
push
dec
mov
daa
movb
cmp
insb
sub
in
lahf
pop
or
ja
sbb
rcr
adc
int3
addr16
sbb
xor
cmpsb
mov
push
xchg
lods
pusha
inc
sub
pop
cmpsb
xchg
xorb
pop
dec
push
xor
or
std
daa
int
stos
dec
frstor
mov
pop
outsb
pusha
adc
xchg
subl
daa
add
jbe
seto
int
addb
arpl
pop
push
xchg
dec
bound
mov
jmp
or
or
mov
js
mov
mov
xchg
lea
insl
jmp
ret
mov
add
ret
aas
dec
jecxz
pop
and
sti
test
cmp
sbb
push
or
repz
mov
fbld
cmpl
fiaddl
cmp
sti
pushf
outsb
sub
imulb
mov
push
lahf
adc
xchg
cs
or
insl
imul
push
push
xchg
inc
jbe
pop
jb
mov
and
and
pop
imul
push
jae
mov
fnstenv
xor
cmp
cmc
nop
mov
pop
or
subb
xchg
pop
mov
lock
pushf
dec
push
jnp
pop
cmp
mov
inc
xor
push
ret
clc
popf
adc
jno
in
and
mov
sbb
cmp
add
cmp
fwait
outsb
pushf
scas
jg
inc
stc
add
out
nop
js
cli
mov
imul
cltd
fwait
nop
xchg
sbb
mov
mov
push
rcrl
int
jno
aam
mov
js
xchg
aaa
cmp
popw
shlb
fs
pop
push
ds
clc
leave
adc
out
mov
xchg
andb
cli
mov
lret
test
cmp
addr16
divl
mov
xor
cmp
popa
mov
adc
pop
pop
xchg
pop
mov
ss
and
popl
inc
nop
dec
cmpb
or
adcl
bnd
leave
out
pop
push
das
xchg
out
dec
push
push
imul
add
mov
bound
popf
out
jb
pushf
dec
add
popf
je
dec
jo
addr16
mov
ja
flds
icebp
in
outsl
int3
not
mov
pop
not
movsbw
not
mov
jmp
arpl
fs
xor
cs
insb
add
lods
movsl
pop
arpl
jo
dec
push
inc
and
in
sub
into
inc
into
adc
daa
int3
cli
sub
sahf
or
and
or
int3
mov
jecxz
jne
ret
adc
das
sbb
or
cs
sub
test
xorb
icebp
pop
sub
cmp
das
je
repz
add
sub
addr16
repnz
sub
sub
shrb
cs
inc
add
pop
push
jge
xor
mov
push
leave
dec
adc
push
or
les
or
push
cmp
nop
xor
mov
add
and
xlat
aas
xchg
or
cs
das
js
push
add
xlat
mov
pusha
sbb
add
shr
adc
aam
adcb
filds
push
aas
shlb
jecxz
je
pop
mov
bound
push
mov
mov
adc
in
ja
pop
mov
jl
pushf
dec
push
sbb
or
inc
jo
pop
cmp
sub
loope
lcall
lahf
stos
mov
aad
lock
xchg
jno
into
jge
roll
sub
mov
jnp,pt
lret
pop
das
addl
xor
pop
pop
sub
or
out
mov
push
push
test
xchg
ret
in
pushf
stc
scas
enter
sub
sbb
or
pop
jg
dec
int3
inc
test
pop
cmp
or
mov
test
test
cmp
ljmp
shr
int3
add
imul
out
xchg
jle
fiadds
add
shll
iret
dec
dec
inc
push
inc
mov
shl
add
xchg
lea
sar
mov
call
mov
lret
into
mov
push
mov
push
inc
and
xchg
inc
js
cld
add
in
inc
pop
int3
out
fdiv
das
lcall
jmp
cmp
jge
jmp
mov
adc
xor
imul
in
aaa
jo
push
cli
shll
outsb
sub
or
or
in
jmp
lods
jl
inc
das
stc
add
inc
fsubs
pop
in
adc
cmp
jo
mov
xor
dec
cmp
icebp
pushf
fstpl
fsubrs
sbb
lods
jecxz
mov
test
fisttpl
sti
mov
mov
jmp
stc
jmp
ret
or
fsts
cmpsl
mov
fidivrl
inc
dec
cmp
push
cmp
stos
mov
adc
sbb
mov
lret
sub
dec
ret
cs
ret
movsb
add
fldt
lods
mov
xchg
jge
jmp
cltd
xor
mov
cmp
pushf
lods
fisubl
cmpsb
dec
xchg
jae
mov
sub
or
jne
not
lret
xchg
adc
sub
xchg
xor
fwait
ss
mov
or
jle
pop
xchg
jmp
xchg
inc
imul
push
push
push
ds
xlat
fmull
int3
cltd
out
adc
cld
mov
adcl
ja
pop
xorb
test
inc
sub
inc
jp
mov
fimuls
mov
add
arpl
inc
mov
bound
xchg
push
lea
rorb
stc
cwtl
pop
test
cmp
lahf
push
jecxz
pop
adc
push
into
andl
xor
cs
insb
add
gs
sti
push
xor
shll
jl
outsb
jae
inc
cmp
xchg
leave
outsb
loop
mov
lret
jle
jb
fwait
je
lcall
ss
push
mov
in
sbb
xchg
xor
divb
clc
pushf
adc
sbb
lcall
sbb
lds
fstpl
les
sbb
xchg
fisttpl
jmp
push
std
les
dec
lea
je
pushf
cmp
call
out
xlat
xchg
lea
lock
mov
push
cmp
sbb
add
jbe
test
enter
pop
xlat
aas
iret
sbb
fcmovnb
imul
add
push
mov
jbe
sbb
lahf
lcall
shr
push
lahf
lods
or
jne
lcall
rcrb
cltd
mov
enter
enter
and
cmp
out
lock
cmpsb
push
lret
sarl
jl
cmp
cmpb
mov
in
pusha
bt
in
les
rcrl
adc
mov
in
cli
not
test
outsb
push
dec
aaa
sbb
jbe
mov
aad
imul
dec
out
sub
lcall
sbbb
ret
inc
enter
inc
enter
add
ret
sub
arpl
addr16
je
xor
subb
les
xchg
jl
pop
test
sti
push
add
fwait
popa
test
sub
enter
inc
notl
dec
mov
scas
ja
mov
inc
in
cmp
mov
or
ds
fucomp
mov
mov
dec
dec
sub
fmull
xchg
insl
into
insl
hlt
outsl
les
iret
or
xchg
adc
sub
and
or
add
xchg
jns
subb
sbb
mov
subl
mov
lock
mov
cli
mov
sti
scas
pop
push
mov
adc
jne
int
or
fimull
jg
addr16
cmp
inc
and
cli
out
shll
and
dec
cmp
push
mov
mov
mov
arpl
jmp
push
xor
xor
xchg
sbb
sbb
mov
orl
cmp
in
std
or
scas
or
jecxz
out
cmc
push
add
pop
mov
sbbb
pop
popf
loop
mov
xchg
xchg
mov
add
pop
or
fisttpl
mov
btc
setg
mov
push
and
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
xor
call
shll
cmpsl
mov
jne
pop
dec
cmc
movsb
fsts
mov
inc
aaa
mov
lods
pop
mov
jnp
add
ss
movsl
pusha
lcall
push
sbb
mov
addr16
xchg
lcall
push
test
sub
lcall
sub
and
call
pusha
mov
call
std
push
push
aas
in
stos
scas
ret
ljmp
leave
shlb
inc
add
out
inc
lahf
iret
insb
adc
stos
fisubrs
loop
or
movsl
cmp
lcall
sbb
movsbl
inc
in
sub
sbb
adc
cmpl
cmove
add
roll
outsl
inc
xchg
sbb
stc
enter
sahf
popf
adcl
ja
stc
cmpsb
mov
jge
lea
cwtl
ffreep
fistpl
cmp
popf
dec
imull
rep
arpl
or
loope
jmp
int
push
or
in
cmc
aam
mov
pop
pop
inc
and
jle
dec
or
cwtl
lahf
cmc
cs
mov
outsl
push
sub
push
call
mov
call
nop
jns
xor
adc
roll
je
mov
out
in
pop
and
aad
pushf
xlat
sti
cwtl
dec
cmpl
loope
int
sbbb
ja
lods
repnz
pop
in
ljmp
lret
jg
sbb
lcall
popf
push
inc
add
and
inc
stc
decl
add
xchg
and
jae
jmp
mov
jecxz
lea
mov
int3
leave
stos
xchg
andb
inc
adc
jae
xor
and
or
push
ret
movsl
xchg
js
outsb
mov
mov
icebp
lahf
lret
sub
add
cmp
stc
incl
mov
leave
adc
out
daa
sub
pop
jmp
adc
sub
and
mov
pop
adc
clc
in
cmp
add
adc
shlb
enter
ret
jge
cmpb
mov
out
dec
add
pusha
movsbl
push
lods
mov
pop
mov
mov
pushf
cltd
jp
arpl
and
ret
and
leave
mov
mov
xor
sbb
mov
pop
adc
xor
std
mov
sarl
lahf
push
mov
dec
pusha
cmp
shrl
pop
pop
ret
sub
stos
pop
leave
sub
push
ret
jp
jae
rcll
mov
lock
inc
push
dec
push
je
gs
insl
inc
gs
jb
insl
add
or
jbe
test
mov
inc
sub
and
or
or
pop
dec
out
mov
push
loopne
rcr
scas
outsb
pop
sti
jge
stc
cs
push
popf
mov
lahf
repz
push
add
jb
mov
fisttpll
out
sub
je
add
clc
call
gs
mov
outsb
dec
mov
pushf
xchg
pushf
xchg
sbb
shll
rorl
sub
cld
clc
mov
mov
addr16
popl
xchg
stos
insl
cwtl
ljmp
dec
pop
pop
mov
cmp
mov
imul
movsl
push
adc
mov
cli
and
add
in
into
adc
mov
inc
shlb
and
mov
ret
popa
pop
inc
pop
or
and
pop
sub
js
fdivrl
icebp
stos
popa
inc
cmpb
or
hlt
jbe
xlat
pop
add
mov
cmp
ja
mov
int3
lods
mov
gs
add
adc
sub
stc
sbb
test
outsl
adc
add
mov
fadds
ret
in
inc
add
bound
jnp
xchg
cmc
imul
mov
leave
push
rorb
add
pusha
or
mov
fs
cwtl
mov
pshufw
push
sbb
out
in
stos
outsb
or
out
sbb
cli
mov
les
mov
or
out
push
popf
sarb
push
jg
xchg
adc
add
mov
adc
fidivs
aad
add
jns
mov
js
pop
jle
jb
cmp
inc
and
iret
js
ds
jne
mov
inc
decb
or
jnp
cld
push
inc
cmp
sub
cs
ror
mov
jo
add
pop
mov
sarb
jbe
dec
and
icebp
xor
mov
aaa
hlt
pushl
cmp
ds
push
or
adc
aas
inc
lret
cmp
add
cmc
lock
shlb
lods
in
push
push
icebp
lret
movsb
fstl
mov
pop
xchg
fs
jmp
push
push
mov
adc
push
lock
push
jae
not
mov
pusha
inc
push
mov
lea
push
call
icebp
dec
ss
out
popf
mov
jmp
stos
mov
xchg
mov
push
xor
in
scas
dec
xchg
fdiv
shll
push
add
and
inc
lods
dec
lea
sub
jo
jnp
in
and
fisubrl
cmp
xchg
jbe
in
mov
push
scas
pop
cmpsb
imull
and
push
mov
xchg
int3
lods
test
ret
xchg
repz
aas
cmp
out
push
leave
stc
push
enter
push
repz
shl
out
and
leave
xor
enter
in
lea
pushf
pusha
cmpsl
lods
dec
or
cmp
lcall
mov
test
pop
add
movsb
fst
add
or
lods
cwtl
xchg
xchg
xorl
mov
mov
push
out
xchg
andl
inc
push
repnz
orb
sbb
adc
bound
std
outsb
xor
dec
rorl
popf
jbe
cld
pop
das
rcr
fwait
in
inc
inc
sub
out
aad
repnz
sbb
push
add
lods
pop
mov
es
cmpsb
pop
test
lea
pusha
sbb
cmp
mov
and
bound
or
and
pop
adc
loopne
sub
pop
popa
push
cmp
lock
mov
or
fidivrs
fcmovnbe
mov
je
and
inc
out
ljmp
jmp
mov
addl
cmpsl
dec
cmpl
xchg
pop
jb
test
mov
iret
mov
bound
sbb
sub
imull
and
xchg
sub
cltd
sbb
movsb
stos
push
popa
shlb
inc
and
jbe
dec
inc
inc
das
or
lock
jne
inc
testl
movsb
popa
loop
rorl
lret
out
xchg
pop
jbe
xor
rcrb
faddl
sub
pop
aam
ret
cld
daa
jecxz
sbb
fs
loop
int3
cmp
sbb
out
setne
jmp
repz
das
rcl
cli
mov
outsb
lret
rcl
xorb
mov
dec
negb
cmp
push
mov
mov
in
jo
mov
add
jb
lret
repz
inc
mov
roll
dec
inc
cmp
into
cmpsl
repz
std
loop
loop
into
stos
mov
xor
or
ja
outsl
test
ds
dec
std
xor
mov
or
addr16
adc
push
jns
jl
cmovp
in
pop
xchg
fs
scas
pushl
or
add
cli
pop
in
cmc
idivl
inc
rol
pushf
pop
inc
lock
or
push
inc
pop
cmpsb
repnz
lds
movsb
stc
lret
xchg
outsl
sbb
jb
lea
sub
jecxz
subb
fs
push
sahf
push
adc
addb
push
cmpxchg
movsl
mov
sub
xor
enter
lcall
pop
adc
jle
xchg
repnz
mov
pushf
xorl
pop
add
mov
or
shl
sub
cmp
cmpb
in
dec
sbb
sbb
dec
mov
cmp
cmpsb
lret
add
in
xchg
insb
leave
orb
lret
aaa
lahf
bound
adc
push
xor
lea
mov
out
fstl
loop
jae
sub
mov
xor
ret
cmp
dec
mull
out
call
adc
dec
pop
out
sub
stc
or
aas
cmpsb
sub
sbb
dec
orb
dec
mov
popa
test
mov
stc
iret
push
jge
xor
popf
fs
andl
mov
fadd
movsl
push
mov
test
sahf
push
ret
into
sarl
shll
fmuls
or
push
stc
sahf
mov
sub
push
or
inc
and
xor
shlb
cmp
sbb
jge
add
or
adc
in
stc
daa
shl
cld
or
jae
and
adc
test
adc
jo
lods
arpl
or
out
jno
mov
mov
lea
jmp
jmp
scas
push
add
jg
scas
push
stos
mov
ror
rol
pushf
inc
cmp
out
xchg
lret
jae
mov
je
sahf
lock
jnp
pop
into
mov
insb
adc
mov
sub
mov
daa
ljmp
pop
mov
daa
jecxz
loopne
push
sub
fsubrs
cmp
cli
dec
jo
pop
dec
and
jns
in
call
mov
add
push
cli
push
dec
add
mov
sbb
nop
std
in
cltd
dec
clc
add
add
shll
or
test
dec
or
jle
lret
or
push
aaa
mov
icebp
into
xchg
loope
push
leave
lcall
jge
pop
inc
aas
push
aad
leave
jb
rcr
push
mov
pop
mov
add
mov
mov
cmpsl
add
lret
add
add
insl
rcrl
or
movsl
push
mov
gs
mov
dec
push
and
out
dec
aas
ljmp
mov
cmc
scas
arpl
mov
mov
shrd
shr
shl
btc
mov
test
jg
test
cmpb
call
mov
sti
lahf
mov
sahf
popf
jle
jb
push
inc
inc
and
out
mov
xchg
and
arpl
sbb
cmp
pop
adc
and
sbb
pop
lods
push
movsl
iret
incb
push
mov
add
fistpll
add
pop
mov
pop
sbb
add
pop
out
mov
dec
dec
inc
mov
das
xchg
rorl
cwtl
dec
hlt
cltd
push
mov
adc
clc
mov
cmp
test
call
lea
ja
bt
cmp
test
call
clc
imul
pusha
call
rcrl
push
adc
shlb
scas
mov
jl
inc
cmp
adc
stos
repz
out
sub
dec
fsts
mov
shlb
xorl
add
aaa
inc
in
sbb
mov
in
ss
leave
sub
xchg
das
lret
fsubrs
push
into
sub
xor
or
mov
cmpsb
movsb
add
jge
inc
cmp
leave
push
mov
jno
mov
nop
test
dec
cmpsb
push
adc
and
test
lock
mov
and
jae
gs
xchg
jne
int
xchg
sahf
jl
pop
pop
dec
cmp
xchg
mov
movsb
aas
int3
gs
mov
dec
push
pop
scas
mov
and
jmp
pop
mov
pmullw
mov
mov
cmp
ret
movups
loopne
ret
xor
xchg
mov
jmp
push
add
notl
cltd
rolb
mov
mov
lahf
cld
and
add
sub
inc
outsb
mov
and
int
scas
lea
mov
xchg
xchg
add
sti
imul
out
aaa
loopne
dec
or
lahf
and
pop
push
jns
js
adc
cmp
fadd
mov
shr
mov
cld
cltd
negb
punpcklbw
ds
xchg
js
ret
jae
pop
bound
movsl
lret
mov
cli
scas
mov
shll
mov
add
pop
ljmp
lods
js
xchg
test
xchg
jbe
sub
mov
aam
loope,pt
push
or
je
or
sub
pop
push
sahf
xor
cmp
push
xor
imul
fdivl
mov
sahf
add
mov
mov
fmuls
inc
scas
movsl
xchg
rorb
mov
adc
mov
or
cli
inc
jbe
loop
sub
shlb
push
pop
arpl
mov
jno
dec
std
mov
imul
mov
adc
jbe
ficoms
push
mov
jbe
inc
lock
mov
lea
jae
bsr
not
setae
add
mov
or
movzbw
cmp
mov
btr
bt
mov
pushf
clc
jmp
xchg
fucomip
jecxz
sbb
test
jecxz
inc
inc
das
or
out
into
test
xor
std
mov
mov
push
push
adc
es
popf
orb
shrb
jno
ret
les
into
cmp
or
push
xchg
addl
push
inc
mov
mov
jb
mov
in
mov
lods
int3
xor
push
jle
cmp
xchg
dec
jmp
inc
or
or
test
sbb
mov
add
sbb
push
lods
cmpsb
lahf
mov
mov
das
sub
or
stos
inc
out
in
dec
cli
and
mov
or
pop
mov
rolb
ficomps
push
jae
clc
xchg
xor
cmp
pop
xchg
jge
mov
ds
mov
inc
iret
scas
dec
cmpsb
addl
test
mov
inc
cmp
pusha
sub
pushf
jmp
cmp
das
push
fcmove
sbb
adc
rol
shrb
in
xchg
xchg
xor
int3
sbb
mov
or
pmuludq
or
fwait
mov
jno
dec
xchg
dec
mov
ja
cli
ret
mov
arpl
dec
movsb
mov
cli
outsl
pop
test
xlat
mov
mov
inc
dec
out
push
divb
ss
dec
mov
mov
jle
rcr
or
dec
dec
aaa
or
out
fidivl
cs
mov
repz
fists
push
sbb
cwtl
inc
sbb
pop
cmc
iret
jmp
sbb
xor
pop
test
dec
lea
push
pushf
loopnew
insb
stos
push
jo
test
test
aas
js
arpl
add
add
xchg
dec
push
dec
lock
sarl
lock
popf
pushf
dec
add
icebp
xor
push
stos
sbb
test
dec
adc
cmp
ret
fadds
shrl
jns
notl
in
mov
or
xlat
adc
add
add
js
adc
cmp
adc
sub
add
mov
lea
scas
and
subl
out
mov
mov
les
vminsd
mov
mov
les
popf
sub
cli
scas
or
movsl
repz
pop
adc
cwtl
data16
movsb
das
cmp
jbe
ja
mov
sub
cs
xchg
sarb
cmp
in
mov
lods
rorb
movsl
insl
insw
lret
sbb
aad
out
stos
outsb
jp
mov
mov
xor
cwtl
cmp
movsl
push
fsts
lods
sahf
pop
add
pop
inc
sub
mov
repz
fmuls
out
lahf
inc
in
hlt
sub
rcr
cld
cmp
mov
cmpl
push
gs
mov
aaa
out
sub
mov
ret
pop
jae
movsb
frstor
dec
jg
addr16
lahf
test
jbe
mov
imul
or
mov
mov
loopne
inc
stc
pushf
arpl
mov
xor
or
pop
xchg
ficompl
pop
push
push
add
sub
call
int
mov
mov
xchg
mov
sti
mov
pushf
ljmp
push
push
cmp
adc
dec
test
insl
das
cmp
btc
xchg
cltd
inc
add
test
insl
mov
add
add
jo
call
mov
dec
mov
pop
push
in
arpl
sti
dec
sbb
movl
fldl
sar
pop
mov
aas
fdivrl
aam
xchg
popf
inc
fldt
pop
fdivrs
loope
pop
cld
mov
sub
imul
aad
sbb
enter
js
mov
ljmp
orl
test
loopne
cld
in
lahf
call
adcb
clc
cmp
xchg
push
and
pop
adc
push
mov
popf
mov
xor
mov
ss
xor
cs
pop
jle
lcall
lea
addl
add
inc
loop
stc
xchg
add
hlt
lods
test
fwait
cli
pop
adc
shrb
xorb
sarb
pop
insb
out
push
out
mov
es
jle
fmuls
xlat
cmpsb
sub
or
test
rol
movzbw
seto
add
bt
bswap
bts
shrd
sub
add
sar
shr
rol
mov
rcl
not
rol
add
btr
sub
shld
sar
add
bsr
mov
clc
shr
clc
cmc
call
lea
jne
jmp
int3
adc
call
stos
mov
in
mov
mov
cmp
shlb
push
push
fnstenv
inc
add
xchg
push
sahf
out
mov
push
or
mov
dec
xchg
in
xchg
adc
mov
cmovs
pop
repnz
xchg
rcr
dec
cli
and
or
stc
xor
int3
cmc
sub
push
jp
testl
adc
ret
shll
inc
repz
or
mov
jmp
cmp
ss
push
inc
cmp
sub
imul
loopne
mov
push
popf
shr
jp
jb
jb
pop
push
mov
mov
jae
mov
int
je
mov
adc
pop
in
sub
div
xchg
push
mov
hlt
jmp
ja
test
xor
adc
js
int3
jne
aad
mov
adc
mov
dec
xchg
js
xchg
outsl
bound
pop
pop
sub
in
jle
dec
lock
sbb
sarl
sub
pushf
nop
jnp
inc
mov
arpl
fisubrl
sub
sar
in
cmc
mull
in
mov
lret
arpl
hlt
das
adc
cmpxchg
mov
jnp
sbb
mov
iret
jb
enter
pushf
dec
mov
xchg
iret
daa
adc
int3
xlat
ret
stos
mov
fdivrl
jl
pusha
pop
push
adc
push
ljmp
push
sbb
mov
or
pop
adc
lcall
test
jnp
insl
js
gs
and
je
jg
cmp
pop
sbb
or
sbb
jl
xchg
lret
fildl
or
or
insb
ficoms
lea
ja
adc
test
call
xor
pop
sbb
in
xor
ror
test
xchg
xchg
jle
sub
imull
test
lock
loopne
push
aaa
mov
push
clc
jmp
pop
dec
sti
push
out
inc
push
xchg
jle
inc
lods
ds
arpl
test
popl
sbb
test
rol
add
sbb
notb
mov
in
divl
cmp
push
les
hlt
cs
push
push
aad
inc
cmc
hlt
test
filds
add
test
in
or
rolb
stc
test
pusha
movl
jmp
fisubl
daa
push
fld
sbb
xlat
mov
xlat
mov
pop
cmp
in
xchg
in
pop
sbb
jg
mov
jns
jg
jo
nop
xchg
push
cmp
sbb
lcall
dec
dec
in
mov
rorl
jmp
js
aam
pop
adc
jl
enter
xchg
testb
cmpl
inc
sbb
sub
or
out
loop
mov
stos
cmp
xchg
nop
cmp
dec
fwait
or
jmp
mov
mov
pop
pop
adc
adc
faddl
and
mov
mov
xchg
push
sahf
fdivl
rolb
pushf
mov
sbb
sub
or
jae
sarl
lret
iret
xchg
and
leave
cmp
call
lods
xchg
mov
stc
sbb
inc
sbb
lock
stos
xchg
mov
xor
xor
je
daa
ljmp
pop
scas
push
enter
stos
repnz
cmp
repnz
rclb
cmp
ja
pop
into
pop
push
cmc
add
bnd
mov
movsb
int3
mov
add
cmp
and
pushf
scas
add
hlt
pusha
cmp
pop
mov
lock
xchg
popa
ffreep
adc
mov
scas
dec
jae
lods
cmpsb
mov
outsl
loop
cmp
add
out
mov
fisttpl
pinsrw
push
aam
mov
repz
and
mov
pusha
pushf
cmpb
jmp
pop
movsb
lea
push
inc
dec
cmp
pop
sbb
or
repnz
les
adc
xor
aas
pop
adc
xor
fst
imul
fcoml
pop
shl
pop
sub
mov
xor
and
inc
sub
cmp
repnz
cmp
loope
outsl
dec
hlt
fwait
out
adc
inc
call
dec
mov
pop
sbb
cli
pop
add
push
out
ss
shlb
movsb
add
movl
int
mov
cmp
jmp
push
mov
bswap
pushf
bswap
movzbw
mov
pushf
lea
mov
lea
mov
push
lea
jae
mov
jmp
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
rorl
stc
decl
jnp
pop
cli
pop
sub
dec
push
dec
dec
dec
xor
push
out
aam
ss
dec
jecxz
jle
ja
xchg
dec
setg
aaa
movl
dec
mov
inc
inc
dec
push
dec
xchg
mov
cmpsl
push
stos
data16
xor
adc
push
cmp
xor
fs
xlat
sarb
or
xor
mov
daa
fisubl
mov
xor
mov
pushf
movw
mov
lea
jmp
lea
je
cmp
pushf
test
pusha
sub
push
cmp
bt
cmp
call
jmp
push
mov
pushf
lea
jmp
dec
movsl
mov
or
add
repnz
ret
mov
jnp
and
xor
cli
pusha
mov
fs
lcall
stc
pop
xchg
imul
mov
ja
pop
push
movsb
pop
sbb
fcomip
scas
out
sbb
lods
insb
leave
cmpb
inc
lods
scas
aam
loope
and
movsb
adc
in
mov
jge
sbb
dec
add
aad
or
cmpsl
mov
mov
and
subl
scas
mov
inc
xchg
in
lret
mov
int3
pop
cwtl
sub
leave
into
mov
bound
mov
test
lods
mov
outsb
jg
jo
aas
xor
cs
popf
mov
dec
xchg
inc
pop
sbb
dec
popl
lret
mov
mov
mov
sub
js
xor
cmp
in
mov
rcl
sub
rcll
xlat
mov
test
ss
and
mov
stc
imul
pusha
lea
jmp
lea
ja
push
sets
dec
push
inc
not
jmp
mov
stos
ret
cmp
test
push
push
cmp
adc
xchg
xor
cmp
cmp
adc
mov
dec
sbb
push
mov
dec
pusha
xchg
mov
push
std
ss
stc
je
fdivrp
inc
cmpb
mov
clc
push
add
xor
cld
inc
xorl
jecxz
aam
pop
xor
daa
popl
test
mov
sti
mov
mov
jmp
les
jbe
push
pop
adc
aas
sarl
jmp
aad
popa
sub
aas
jno
shlb
int3
xor
shll
add
dec
cmp
sbbb
fnsave
out
cmpsb
pop
add
pop
pushl
mov
push
mov
cwtl
cmp
ret
push
sub
or
ficoms
adc
inc
jecxz
inc
outsl
push
fisubrl
mov
mov
cmp
add
je
lods
scas
hlt
in
repnz
ret
aas
cli
daa
ret
push
bound
cwtl
int
insl
cltd
fwait
pushf
pop
add
dec
xorl
cmpsb
add
xchg
scas
clc
stc
loop
clc
xchg
rcl
cmp
push
in
xor
lea
mov
push
test
mov
sub
jg
fstpt
mov
mov
jmp
jns
adc
sbb
push
or
nop
test
sub
xor
pop
repnz
xlat
push
sbb
and
movsl
ds
jle
jl
xchg
shlb
add
mov
fs
lods
mov
mov
lea
cmp
stc
std
jl
sub
int
cmp
xchg
in
mov
mov
jecxz
and
cmc
cwtl
or
xchg
test
mov
sub
mov
pusha
push
push
inc
div
jnp
movsb
call
mov
bound
inc
inc
cli
inc
inc
imul
test
in
arpl
mov
mov
shlb
pop
pop
out
jbe
int3
pop
cli
cmc
adc
out
movsb
mov
test
and
nop
dec
mov
sbb
leave
test
nop
icebp
int3
rol
mov
pop
pop
in
leave
mov
mov
in
or
pop
rorb
jmp
inc
cli
ret
add
or
pop
sbb
scas
scas
jbe
mov
push
lea
cmp
cltd
dec
dec
cli
popf
push
icebp
lcall
std
fidivrl
in
mov
push
mov
push
mov
int3
in
pop
xchg
sbb
pop
adc
xor
in
fcom
ret
inc
cli
pop
adc
xchg
insl
mov
subl
rolb
and
stos
mov
xor
lds
sbb
adc
daa
mov
jecxz
cmp
jno
push
shrb
jbe
scas
stc
ret
ljmp
stos
sub
jmp
adc
sbb
movsl
es
sbb
mov
mov
lods
lea
int
xor
aaa
and
add
xchg
in
xlat
adc
outsb
daa
popa
sub
jo
fadds
scas
imull
jb
push
imul
outsb
pop
inc
inc
sub
or
mov
add
ljmp
or
negl
mov
test
adc
sub
jge
jb
pop
shll
dec
mov
insb
scas
int3
add
push
inc
jmp
dec
fisubs
das
or
add
and
out
mov
mov
mov
sbb
push
sub
xor
dec
sub
mov
xchg
flds
cmc
xchg
inc
hlt
mov
or
jge
insb
call
jmp
lea
jne
test
mov
test
clc
cmp
cmp
add
pushf
pusha
stc
movzwl
add
jmp
push
mov
push
push
mov
sahf
dec
sub
pop
cmp
aam
subb
and
ret
cld
popf
sbb
test
cmp
dec
cmp
adc
cltd
orl
aam
jmp
popa
push
fisttps
inc
mov
xchg
rcll
in
dec
jns
mov
mov
mov
es
inc
cs
mov
mov
sarl
xchg
nop
insb
cmp
mov
and
xchg
inc
add
or
sub
cltd
cld
push
inc
xor
mov
adc
sar
out
mov
dec
xor
mov
mov
int3
sbb
sahf
popl
jae
lods
stos
mov
or
cltd
push
mov
pop
mov
mov
ljmp
aad
shl
fstpl
jecxz
loope
adc
sbb
adc
pop
std
push
js
movsb
dec
add
cmc
idiv
push
add
out
out
pushf
inc
jo
popf
leave
xlat
push
aas
hlt
insb
sbb
subl
adc
sub
xchg
inc
in
pop
hlt
fwait
pop
sti
movsb
pop
mov
push
ds
sub
rol
mov
out
stos
mov
ja
push
sbb
add
jle
ljmp
push
sti
inc
aas
ds
push
mov
inc
arpl
adc
sub
inc
out
cmp
or
adc
sti
ret
es
push
repz
and
jno
sbb
sub
jns
jbe
sahf
js
sbb
dec
sbb
or
mov
add
hlt
imul
cmp
loop
movsl
xchg
xlat
adc
in
outsb
insl
mov
les
pop
enter
dec
and
pop
lahf
xchg
pop
cld
fwait
push
std
les
mov
sub
leave
push
dec
leave
adc
fsts
mov
out
clc
jecxz
shll
push
pop
mov
mov
sahf
out
mov
out
mov
nop
cmp
or
and
outsl
ret
xor
jae
sbb
adc
push
stos
into
faddl
in
fisubrs
fcomip
dec
test
icebp
test
cmpsl
cld
jl
in
xchg
or
mov
pusha
movsl
cwtl
int
jg
fs
pop
jp
cmpsb
pop
ljmp
insl
adc
push
out
cmpsb
push
or
je
ljmp
mov
test
pop
push
sbb
cmp
ss
push
or
fists
jmp
rcr
insl
dec
rclb
jo
push
mov
arpl
or
push
add
pop
adc
es
pop
jno
in
add
jo
dec
mov
rcr
xlat
aas
inc
popw
sub
into
test
negl
out
fidivrl
inc
je
cmp
cmpsb
jne
loopne
pop
pop
aam
frstor
add
xlat
and
add
xchg
stc
push
jo
add
bt
pusha
add
jmp
pop
pusha
pushl
movb
pushl
ret
aaa
jo
sbb
jo
jb
mov
test
dec
sub
adc
cmp
andb
jae
xchg
dec
mov
icebp
scas
mov
pop
push
sti
dec
push
pop
mov
sahf
cli
mov
and
mov
lret
ss
gs
cmp
test
sbb
xor
sbb
xor
nop
mov
cmp
inc
shll
mov
pusha
add
pop
aam
es
or
mov
pop
hlt
xchg
ljmp
xlat
mov
popf
xchg
jge
push
inc
and
mov
jbe
jb
or
lea
inc
out
mov
mov
mov
xor
add
push
ret
into
leave
push
push
cmp
and
int
mov
push
inc
and
or
adc
jp
pusha
nop
pop
adc
pmuludq
ja
push
repnz
adc
sbb
or
sub
stc
decl
sbbb
icebp
bt
cmp
push
cmpb
jmp
jne
mov
shr
xor
mov
call
lcall
stos
mov
push
xor
xor
out
ret
xchg
add
lret
jne
jmp
nop
and
cs
movsl
jge
lret
cmp
fmull
daa
xor
cmp
add
stc
shrl
std
pop
push
sti
adc
jle
xor
fwait
loopne
mov
cmp
bound
fistps
int
lds
sbb
xor
mov
inc
xchg
or
cmp
aad
add
and
pop
int3
mov
pop
std
stos
mov
stc
add
cmp
es
cwtl
in
or
dec
sub
fidivrl
pop
pop
dec
notl
shl
jo
lret
cmp
std
mov
les
mov
test
nop
and
mov
scas
add
in
jg
stos
loopne
adc
or
push
mov
add
mov
fldcw
pop
sub
mov
pop
inc
xchg
test
push
xchg
repnz
cltd
inc
add
subl
pop
call
add
fs
dec
adc
lds
fbld
mov
inc
mov
dec
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
test
mov
stc
push
sub
call
in
sbb
mov
scas
cmpb
outsl
pop
dec
dec
cmp
fstpt
dec
and
test
xor
xor
int3
insb
fnstenv
testl
dec
and
rclb
push
or
out
ss
cs
or
inc
adc
push
push
add
jmp
cmpsl
loopne
mov
adc
adc
mov
scas
pop
adc
in
xlat
adc
out
adc
or
sbb
ret
sub
or
outsb
and
add
or
jns
roll
movsl
daa
js
neg
roll
mov
nop
insl
push
dec
ss
cmp
movsl
pop
je
inc
adc
cmp
call
lahf
cmpsb
iret
xlat
ret
pop
sub
sbb
adc
adc
mull
lds
cmp
stos
lahf
mov
sub
xchg
aas
repnz
aam
int
xor
push
mov
adc
jae
xchg
fs
shlb
aam
xchg
xchg
ljmp
mov
mov
fildl
or
stc
ljmp
jnp
xor
cmpsl
adc
add
mov
pop
push
dec
xor
stos
push
out
dec
bound
lea
jge
test
push
aas
ficoml
pop
jmp
cli
out
movsb
pop
add
xor
mov
lahf
push
sahf
xchg
jbe
mov
xchg
jo
insb
imul
sbb
or
fistl
neg
cmp
insb
adc
lds
sahf
add
jno
bswap
push
jno
pop
pop
enter
mov
dec
cwtl
es
inc
idivl
lcall
mov
mov
and
adc
in
lods
repz
out
or
addr16
jnp
int3
adc
adc
or
lock
or
lock
ss
cmp
sti
sahf
popa
and
mov
sbb
xchg
xchg
xchg
mov
mov
xchg
mov
xchg
xchg
pushf
xchg
xchg
in
mov
cltd
mov
in
mov
movsb
xchg
mov
in
popf
mov
movsb
cwtl
pushf
mov
lcall
xchg
mov
loopne
test
test
jmp
mov
jbe
stc
cmp
call
outsl
mov
lahf
cmp
out
sbb
cmpsl
or
in
ret
mov
ret
sub
mov
pop
icebp
sub
cmp
out
and
imul
mov
jns
test
adc
push
loop
xchg
hlt
and
xor
lcall
insl
jg
test
fwait
movsb
dec
mov
shll
dec
dec
xor
pop
inc
test
stos
jecxz
sarl
inc
pop
sub
dec
sbb
fsubr
adc
pop
pop
adc
or
xor
mov
fisubs
push
fisttpll
push
mov
movl
call
lea
ja
pushf
lea
jge
jmp
pusha
mov
cmp
bt
cmpb
jmp
out
inc
xor
jmp
fdivrl
mov
jno
pop
sbb
dec
clc
and
or
cmpsl
inc
mov
test
sahf
pop
add
cmp
rcrl
adc
push
and
test
std
and
xor
add
xor
push
pop
shl
repz
cmp
inc
ret
xor
outsl
mov
xor
mov
popf
pop
lods
mov
inc
fldl
or
pop
call
cmp
js
shll
shlb
bound
fdivs
icebp
mov
leave
add
outsb
addr16
cmp
sbb
and
or
mov
mov
out
ret
sub
std
shlb
xchg
xchg
inc
shrl
adc
sbb
leave
into
or
rorl
lret
lock
int
sbb
ss
dec
outsb
push
fwait
aaa
sbbl
pop
scas
popa
sub
mov
repnz
les
sarl
mov
mov
pushl
xor
mul
xlat
enter
test
cmp
arpl
and
lcall
mov
sub
and
mov
mov
je
adc
js
stc
push
jnp
push
inc
popa
xor
lret
dec
jne
enter
mov
cmp
or
inc
in
push
or
inc
popa
xchg
movsl
mov
fstpt
aad
dec
clc
cltd
push
cmc
pushf
push
clc
stos
outsb
mov
adc
jns
popa
add
shlb
mov
fiaddl
daa
and
hlt
in
rol
mov
mov
enter
or
cli
xchg
cmp
test
insl
push
lret
mov
loopne
jne
jo
scas
sbb
shrl
jle
mov
leave
push
cltd
into
cmp
in
mov
cmc
mov
in
leave
sbb
pop
repnz
sbb
mov
int
in
mov
sbb
dec
ds
push
mov
sbb
outsl
xor
lcall
or
popl
mov
pusha
push
pusha
pop
dec
xor
shlb
xlat
mov
mov
gs
int3
pop
movsl
xor
inc
hlt
pop
dec
scas
rclb
lods
bound
jle
jle
cld
sbb
sub
loopne
in
dec
repnz
out
inc
lock
stos
repz
jle
xor
lds
mov
stos
lcall
int
xor
lds
push
mov
pop
sti
mov
add
sub
mov
mov
icebp
cmp
adc
push
jae
pop
cmp
xor
mov
push
or
fmuls
imul
mov
sbb
das
inc
xchg
aas
push
leave
popf
and
xor
int3
icebp
test
test
pusha
xor
jae
dec
and
aas
xchg
mov
push
and
ljmp
push
insl
xchg
jmp
xchg
pop
in
lahf
push
shll
outsl
insb
xor
cs
insb
add
and
ja
call
jg
int3
stos
outsb
add
jbe
pop
inc
ds
in
les
inc
sbb
out
push
mov
add
sub
jp
decl
dec
mov
lea
push
cmpsl
jo
je
xor
mov
and
imul
xor
in
xor
push
hlt
inc
add
mov
pop
outsb
lret
dec
orl
pop
or
add
inc
clc
or
aas
push
cmc
mov
movsb
pop
or
jp
fsubs
call
dec
mov
iret
mov
sti
int3
adc
mov
xchg
mov
cld
mov
imul
fwait
stos
aad
imul
xor
movsl
inc
test
mov
pop
xor
js
mov
sbb
add
fistl
mov
sub
test
push
push
cli
sub
movsb
test
lea
dec
cmc
adc
adc
mov
xor
mov
or
jns
xor
inc
daa
adc
in
pop
subl
std
clc
leave
rcrb
leave
mov
lcall
mov
andb
adc
adc
pop
or
pop
shll
ret
inc
lock
sbb
sahf
fs
aam
stc
inc
lods
pop
xorb
push
icebp
adc
mov
pop
mov
out
rolb
jo
jge
inc
mov
jns
push
aad
jp
pusha
xchg
pop
jmp
sub
lcall
gs
or
inc
cmp
cli
std
into
pop
hlt
std
cli
jmp
jbe
dec
sti
pushf
loope
pusha
mov
mov
push
dec
cli
rcr
das
loopne
out
in
fildl
lret
xor
sbb
xchg
ss
test
sbb
xchg
loopne
sub
je
or
subl
call
jecxz
aad
leave
scas
mov
xorl
inc
jecxz
sub
sub
pop
mov
pause
mov
movsb
push
add
sbb
movsl
mov
imul
sub
jge
sub
aaa
xchg
cmp
jbe
sub
and
dec
or
fimull
pop
or
xchg
xchg
xchg
in
lcall
js
hlt
mov
rolb
add
pop
das
xor
pop
inc
icebp
or
xchg
test
mov
mov
lds
jnp
sub
inc
sub
psubd
in
sarb
roll
jmp
ljmp
lods
lahf
mov
movsb
mov
or
sub
sub
insl
mov
lahf
lods
rcrl
popf
jp
push
je
mov
jno
xor
mov
es
into
ret
jne
fcmovne
cmp
jecxz
xor
xchg
ss
dec
idivb
xor
lret
sbb
in
shl
mov
add
mov
and
into
stos
stc
test
sub
cmpsl
or
adc
push
into
mov
ss
mov
xchg
out
mov
jb
mov
ficoms
push
out
ret
dec
scas
adc
mov
rcrl
mov
divl
push
push
repnz
aam
xchg
jae
lret
sbb
jne
rorb
mov
push
xor
jno
add
mov
out
lahf
or
xchg
xchg
hlt
xchg
inc
adc
aaa
and
lods
inc
mov
mov
into
mov
mov
adc
xchg
xchg
xchg
xchg
xchg
push
into
pop
into
xchg
sbb
push
lcall
adc
rclb
rclb
mov
shll
ret
mov
rcll
int
xchg
push
xor
push
push
mov
adc
aam
jae
shlb
push
lock
gs
adc
lock
sub
pop
mov
pop
xor
dec
gs
xchg
xchg
adc
xchg
push
into
adc
cmp
push
int
ss
lcall
dec
mov
sahf
roll
push
mov
mov
rorb
push
ja
jae
sbb
dec
and
shlb
stos
loop
in
popa
pop
pop
movsl
mov
mov
ret
push
mov
ret
adc
je
dec
pop
jo
cwtl
xor
dec
xor
jl
push
lods
lcall
xchg
cmp
jb
ret
rol
xchg
inc
mov
ja
xchg
xchg
pop
sahf
or
mov
sti
es
jmp
pop
xchg
cmp
rclb
mov
rcl
ret
xchg
xchg
mov
push
movsb
cmp
mov
iret
jns
push
adc
imul
int3
loop
out
mov
popa
imulb
dec
mov
push
lret
sarl
xchg
mov
cltd
mov
mov
jno
cmp
mov
mov
mov
rcrl
clc
or
call
nop
mov
cs
shll
orl
call
add
push
adc
shll
cmpl
stc
iret
and
nop
cmc
dec
sbb
int
fs
mov
addr16
push
sub
loop
push
dec
andb
cmc
mov
mov
dec
mull
test
mov
adc
inc
push
addl
nop
ja
mov
mov
lahf
lret
and
dec
push
adc
mov
push
adc
push
jmp
and
imul
mov
mov
pop
adc
fwait
push
ret
rcll
jecxz
inc
idivb
sub
xchg
xchg
and
pop
loop
rorl
andl
add
adc
push
jmp
rolb
pusha
push
lret
or
lret
aas
testb
iret
cmp
xchg
js
xchg
rcl
jmp
lret
mov
lahf
inc
aad
pop
xchg
aad
nop
in
mov
dec
pop
ja
mov
jae
cmc
rcll
out
shll
fstpl
sarl
pandn
pop
fcoml
ja
xchg
pop
push
cmpsl
sbb
in
xchg
nop
sbb
mov
sti
jns
add
rcll
aaa
mov
cmp
and
aam
mov
inc
and
enter
vprotb
xchg
inc
in
xchg
xchg
clc
push
cmc
cmpsb
cli
nop
int3
lods
mov
mov
jne
jp
cmp
dec
out
subl
mov
mov
xor
subb
or
shr
aam
mov
fwait
rcll
dec
add
cltd
xlat
xchg
orl
mov
ret
push
repnz
dec
xor
inc
push
lds
std
mov
rorl
fwait
lret
mov
push
in
scas
xor
pop
fs
add
lods
rcrl
push
popf
push
inc
mov
imul
jecxz
sahf
xchg
mov
je
mov
inc
push
aam
mov
out
test
shrb
loopne
pop
stos
out
sbb
outsl
add
idivb
stos
aaa
aad
scas
and
dec
movsb
in
push
sbb
or
ja
jmp
out
gs
mov
sub
push
mov
adc
xor
sbbl
cmp
js
scas
je
xor
mov
lock
mov
jle
addr16
cltd
xor
pop
pop
test
xchg
sub
repnz
adc
mov
popf
dec
or
les
xchg
jne
xor
in
xchg
rclb
xchg
cs
inc
and
in
inc
outsl
sub
push
xor
push
dec
mov
aad
mov
scas
xchg
cmc
sub
test
insl
jne
mov
ror
push
dec
adc
jp
std
push
push
fs
sub
mov
loope
or
mov
adc
movl
or
sub
leave
jge
dec
lret
test
aaa
stos
push
push
lods
mov
add
xor
xchg
rorb
xchg
xchg
inc
cmpsb
pop
sbb
mov
xchg
add
shrl
ja
adc
sbb
shll
outsl
push
repnz
sarb
lds
inc
daa
test
xor
cmp
xor
shll
jmp
mov
mov
outsl
int
jl
xchg
in
jbe
push
ja
enter
cmp
into
clc
lahf
mov
sarl
cwtl
xchg
int
aam
xor
decl
ja
in
gs
lock
and
jnp
xchg
hlt
pop
fnsave
repz
stos
outsl
loop
xor
lods
mov
cs
leave
cmp
clc
jne
push
push
push
sub
mov
shll
add
mov
aaa
addb
es
adc
and
leave
cs
cmp
imul
push
in
push
inc
xor
iret
scas
xchg
ljmp
xor
jmp
jbe
xorb
inc
sahf
jno
pop
aam
je
dec
mov
dec
ljmp
stos
mov
sbb
ret
nop
cmpsl
mov
jnp
xchg
inc
or
test
jg
cmp
jns
xchg
mov
mov
xchg
xchg
xchg
lods
xor
and
push
push
mov
xchg
pop
shll
leave
rorb
pop
js
call
inc
cwtl
es
movsl
nop
popf
insb
mov
push
jne
add
dec
cmpsl
push
mov
mov
lahf
jnp
mov
inc
ficoms
call
pushf
push
xchg
pop
or
mov
lds
cltd
fwait
pop
mov
ds
sbb
xchg
push
rol
leave
iret
inc
aad
and
sub
cmc
mov
sub
inc
pop
xchg
pop
mov
aas
cmpb
cmpsl
insb
sbb
mov
lods
lods
lds
daa
and
mov
push
aam
rorb
loop
jl
lods
inc
mov
enter
inc
data16
mov
inc
and
push
ljmp
ret
dec
sbb
inc
or
es
xchg
les
inc
xchg
cld
ja
clc
or
dec
inc
xchg
jne
repnz
rcrl
lods
dec
mov
or
mov
rclb
int3
lahf
or
xchg
aam
mov
std
out
imul
mov
push
mov
pop
jge
int3
cs
cmc
sub
mov
hlt
das
aas
mov
lcall
pop
rcll
xchg
insl
mov
mov
jae
cmp
dec
fidivrs
movsb
adc
mov
jns
add
mov
adc
adc
repnz
adc
mov
lcall
jecxz
xlat
test
jo
pop
xchg
loope
adc
mov
inc
loope
fisubrl
or
fisttps
mov
xor
adc
rclb
xchg
mov
push
cmpsl
addb
aam
dec
and
repnz
rcrl
add
or
lea
fcmovbe
loop
test
sub
aam
out
mov
js
bound
repnz
jnp
stos
mov
int
das
cli
push
jge
movsb
push
fimuls
pop
jbe
popa
test
lds
mov
ja
ljmp
xchg
int
test
xor
sbb
jo
sbb
into
cmp
jecxz
jge
lea
push
pop
xor
nop
push
xor
mov
shll
cmc
cmp
inc
nop
cmpsl
add
pop
pop
out
adc
aad
xchg
aad
aaa
outsb
imul
stos
rcl
ds
xchg
ljmp
adc
lret
insl
mov
inc
shld
adc
stos
mov
adc
jne
jmp
iret
mov
repnz
mov
shll
push
addb
test
adc
jno
sub
shrb
jno
mov
xchg
cltd
mov
lods
mov
mov
mov
sub
jmp
or
nop
inc
test
xsaveopt
arpl
mov
inc
xchg
cs
ljmp
sub
xchg
cmpsl
jbe
mov
add
jne
nop
add
ds
or
cmp
outsl
pop
add
jo
xchg
jg
out
mov
bound
aad
lret
popf
jmp
test
push
sbb
out
mov
outsl
mov
or
sbb
ds
jecxz
rorl
mov
fildll
jp
adc
fidivs
dec
sub
jp
inc
ljmp
mov
dec
xchg
imul
push
inc
xor
or
shlb
push
movsb
dec
pop
nop
int3
icebp
jb
push
inc
jbe
mov
ret
inc
push
xor
loopne
cwtl
sub
ret
xlat
mov
aam
lret
mov
xor
and
nop
push
mov
xchg
lret
push
mov
push
andb
push
xchg
vpcmpgtw
aam
mov
mov
test
push
call
mov
adc
fs
int
mov
outsl
push
ds
psubb
arpl
mov
js
gs
test
into
sti
mov
cs
push
mov
hlt
jns
jae
cmp
nop
push
pusha
or
daa
pop
notb
testl
push
std
add
imull
ret
stos
pop
cmp
cwtl
cmp
call
shll
imul
lret
pop
or
dec
or
pushf
cmp
push
iret
fildll
jo
in
mov
xchg
shll
and
xor
push
sar
push
cmpsl
iret
adc
cmpsl
xchg
fwait
in
imul
xchg
mov
shl
nop
jae
into
jmp
dec
call
add
xlat
add
jg
cltd
lret
jo
rcr
imul
jp
outsl
adc
pop
sahf
cld
out
arpl
scas
pop
ja
inc
clc
je
daa
cmp
ror
iret
inc
je
das
nop
push
xchg
xor
aam
into
test
xchg
add
lds
sub
fwait
sub
push
mov
dec
adc
mov
ficoml
outsl
call
pop
mov
stos
rorl
cmp
dec
jnp
aam
repnz
xor
pop
push
add
cwtl
cld
cli
cmc
or
inc
mov
mov
arpl
scas
pop
stos
jecxz
adc
ds
shl
mov
cld
adcb
lea
ret
mov
add
push
sub
xchg
mov
subb
imul
mov
cmpsl
out
xchg
outsl
fiaddl
and
imul
lret
shll
xchg
fs
cmp
testb
mov
mov
inc
shlb
push
call
lret
shrb
sub
xchg
cmp
mov
and
les
cmc
adc
rcll
inc
mov
divl
stos
mov
sbb
xchg
dec
push
sbb
mov
int3
mov
roll
dec
lods
test
ja
clc
dec
scas
inc
pop
jae
scas
mov
xchg
jg
movsl
sbb
xor
sahf
test
mov
insl
xchg
aam
mov
jl
decl
aaa
call
jecxz
dec
jnp
xor
sarb
xchg
jg
std
mov
movsl
cwtl
ja
mov
mov
dec
inc
mov
mov
inc
jne
xchg
loopne
in
cmpsb
mov
mov
aam
movsb
jo
loop
and
das
or
lahf
push
call
xchg
pop
gs
aam
push
jnp
nop
scas
cmc
repnz
movsl
add
out
fisubrl
insl
lds
cs
fimuls
add
movsl
adc
stc
or
sbb
mov
push
imulb
xor
cmp
mov
xchg
imul
xor
jp
ret
lock
sbbl
mov
xchg
pop
adc
fcoms
inc
cltd
or
mov
jg
lock
leave
mov
nop
dec
xor
jae
push
sub
fadd
daa
pop
out
sub
push
cmp
mov
mov
and
inc
mov
or
ret
push
push
jg
cmp
ret
cltd
sbb
add
mov
dec
int3
arpl
leave
aam
cmp
push
ret
stos
fimull
xchg
push
jmp
jg
pop
sbb
imul
push
mov
cmc
das
cwtl
scas
xchg
lahf
push
ljmp
or
clc
push
mov
jle
popf
ss
in
push
cmc
addr16
and
push
pop
pop
mov
scas
mov
dec
xlat
sub
leave
loop
dec
rorl
int3
aas
out
inc
push
mov
sub
cs
ret
out
xchg
mov
mov
mov
nop
popa
sub
xorl
incl
iret
rcrb
rclb
push
aam
stos
ljmp
push
outsl
pop
shrb
icebp
adc
scas
inc
popf
jb
ret
pop
test
push
mov
dec
mov
jmp
mov
dec
dec
rcr
jg
mov
sub
mov
mov
sub
in
inc
xchg
and
mov
inc
out
xor
loopne
out
jne
dec
repz
pusha
push
mov
rorl
jmp
imul
iret
shl
dec
lods
add
out
mov
and
mov
mov
mov
mov
jmp
lcall
xchg
xor
jnp
and
movsl
aam
loop
pop
pop
leave
jle
int
shll
iret
in
ja
mov
adc
sub
or
movsb
fldenv
mov
lcall
js
mov
outsb
push
into
add
mov
jle
jecxz
cwtl
mov
ficoms
out
xor
jne
jae
and
push
xchg
adc
mov
xor
jp
test
or
jg
nop
jno
cmp
push
fwait
pop
ret
and
mov
add
rcr
aam
jp
lahf
add
shr
imul
pop
xor
andb
les
sbb
ja
aad
adc
jno
xchg
sbb
cmp
adc
sbb
xchg
pop
mov
mov
pop
xchg
xor
int3
stos
clc
add
and
leave
mov
shl
add
jmp
dec
jp
pop
pop
pop
out
int3
out
and
ret
lea
add
ret
push
nop
fdivrl
pop
inc
mov
jne
jbe
and
sub
lock
dec
push
addr16
inc
aad
repnz
test
testl
and
mov
in
aam
pusha
faddp
nop
fwait
dec
dec
mov
add
or
cld
lret
mov
shrl
pop
cli
ja
xor
xor
jp
mov
fisttpl
mov
mov
xchg
dec
jb
daa
sti
mov
push
add
shll
push
xor
scas
xor
scas
stos
aam
inc
lret
outsl
pop
xor
inc
push
pusha
xor
pop
lods
test
adc
mov
and
add
pop
jecxz
mov
pop
popf
jbe
or
cmpsl
fistpll
and
sub
sahf
stos
mov
push
jge
je
jnp
xor
pop
clc
mov
jbe
xchg
push
mov
or
or
mov
mov
mov
fimuls
mov
and
ret
xlat
adc
pop
ror
imul
pop
sbb
adc
adc
incl
push
int3
or
jg
lahf
rclb
mov
js
test
push
add
out
mov
adc
dec
xor
adc
dec
jnp
jl
loop
imul
filds
fsubrs
lcall
mov
xor
shll
cli
mov
movsl
popa
fwait
ljmp
xor
mov
adc
mov
leave
rcrb
pusha
mov
cmp
jne
aaa
fisttps
rol
gs
ds
add
in
sub
int3
dec
xorl
jl
fcmovb
xchg
loopne
jns
popa
or
iret
jns
cmp
std
mov
adc
xor
cmp
loope
xlat
imul
cmp
scas
les
ss
cmp
stos
mov
lea
fists
push
bound
inc
scas
icebp
add
shrl
xchg
push
jge
add
dec
aam
inc
cltd
pop
sub
rorl
sbb
push
lods
movsb
jbe
mov
mov
jmp
imul
rclb
adc
sub
push
rorl
or
in
adc
jnp
push
int
out
or
mov
xor
les
xorb
jae
pop
xor
sub
lret
mov
shrb
shr
ss
pop
test
push
push
and
sbb
adc
pusha
adc
or
mov
in
int
push
mov
sahf
xchg
nop
dec
cmpsl
mov
jo
mov
dec
lahf
sub
mov
scas
movsb
popa
push
pusha
mov
dec
stc
and
push
dec
cmc
mov
gs
and
fstpt
mov
test
add
seto
xchg
jns
shlb
lcall
sbb
add
mov
xchg
mov
lock
sahf
adc
dec
rcrl
test
pop
shl
xor
adc
xchg
sbb
mov
inc
adc
popf
gs
dec
enter
aaa
mov
das
add
mov
rolb
inc
mov
xor
aad
push
scas
pusha
and
mov
outsb
mov
sub
fimull
sub
xor
lods
jmp
loopne
fmulp
not
sbb
das
repnz
dec
xlat
and
xchg
dec
mov
or
dec
lds
xlat
movsb
sbb
xlat
es
push
xor
jmp
aam
jne
cmpsl
cltd
arpl
adc
jmp
push
ljmp
mov
adc
push
dec
shrl
jae
mov
stos
fmuls
and
jl
mov
mov
lcall
cmp
cmp
enter
sub
sub
xlat
popa
clc
or
mov
push
pop
jp
mov
test
and
insl
mov
xchg
mov
push
data16
push
xchg
jecxz
jge
lods
xor
inc
xor
mov
stos
lcall
pop
lret
ds
pop
jb
ret
rolb
xor
lock
add
filds
adc
mov
pop
push
fistpl
xlat
pop
inc
es
out
dec
out
push
repz
xchg
sbb
stc
pop
sbb
adc
subb
cmp
sarb
shll
jb
cmp
rclb
std
in
sbb
ja
pushf
push
frstor
jmp
scas
inc
pusha
xor
sahf
repnz
mov
or
std
jbe
xchg
sbb
ss
jmp
fisttpll
xchg
aam
in
aam
jo
xor
push
scas
xchg
cmp
nop
lds
cli
mov
push
sub
xchg
dec
aam
insl
cmp
jmp
loopne
ror
test
or
and
sarb
mov
mov
xchg
sar
sbb
cmpsb
add
xlat
or
cmp
mov
cwtl
outsl
into
lea
lods
shll
fadds
not
lret
gs
sbbl
mov
repnz
lret
push
pop
add
mov
push
dec
push
or
outsb
pop
leave
scas
cmc
pop
and
mov
mov
lods
call
nop
or
xlat
repnz
mov
xchg
rolb
sub
push
mov
fcoml
mov
push
iret
dec
sbb
outsl
imul
push
jae
ret
nop
lea
addl
and
aas
xor
inc
rcl
inc
arpl
ret
nop
push
sub
jbe
jb
mov
dec
call
loop
cmpsl
ja
push
sbb
inc
xor
scas
clc
cli
rcll
mov
pop
jns
inc
add
inc
mov
in
jns
es
xchg
pop
xchg
es
sub
mov
sti
scas
fsubrs
mov
xchg
std
rcrl
mov
push
add
pop
cmpsl
jae
out
sti
and
xor
push
loope
and
inc
repz
aaa
or
idivl
ja
push
mov
iret
and
lret
out
call
lret
out
mov
fs
sbbl
sub
ja
rcl
dec
inc
sub
outsb
and
jge
lcall
adc
rolb
aaa
mov
xor
dec
scas
cmp
inc
xchg
push
inc
pop
jecxz
mov
mov
aaa
dec
xchg
scas
and
mov
mov
es
pop
in
aas
cltd
inc
mov
jg
lret
jnp
std
xlat
aas
cmc
sub
xchg
lret
push
jecxz
in
lret
scas
int
mov
add
cmp
jo
dec
imul
cltd
lret
pop
lds
arpl
inc
mov
stos
add
lods
ss
cld
mov
gs
sub
mov
sbb
les
xor
test
imul
stos
daa
cmp
push
push
push
lods
icebp
test
mov
lea
dec
and
negl
lock
mov
jmp
cs
bound
js
aas
call
rclb
mov
daa
xor
mov
xchg
imul
ljmp
leave
xchg
lahf
sub
sbb
dec
mov
dec
call
stos
aad
cmp
out
xchg
dec
fwait
add
je
mov
lock
jmp
insl
icebp
sti
jbe
jo
pushf
xor
shrb
jg
insl
fwait
notl
push
data16
fildll
aad
jnp
insb
icebp
in
pop
push
js
xchg
jg
mov
cmpsb
js
dec
adc
mov
jecxz
pop
mov
test
ret
popf
jbe
jmp
psubusw
sub
outsl
repnz
jo
add
fsts
jl
xchg
inc
inc
push
mov
outsl
jae
mov
testb
push
hlt
lcall
sub
iret
adc
aam
loope
nop
adc
into
mov
pop
push
or
pop
mov
push
xchg
and
ret
xor
jl
ljmp
mov
aas
mov
sbb
mov
adc
jne
push
aad
sub
adc
pop
sbb
in
mov
lahf
jl
je
dec
xchg
cmp
jno
test
push
cmpl
inc
xchg
or
cmpsl
aas
insl
push
insb
inc
mov
pusha
and
test
ljmp
sbb
jle
pop
ja
mov
lret
dec
nop
push
dec
packsswb
pop
inc
cmpsl
mov
sbb
ljmp
mov
lock
cmp
or
cmc
xchg
cli
mov
jmp
mov
ret
mov
lahf
inc
push
or
cmp
push
leave
dec
repnz
mov
sarb
mov
pop
ret
add
insl
pop
fsubp
xchg
or
cmpsl
mov
mov
xor
hlt
call
fnstcw
ja
dec
and
mov
xor
and
push
adc
cmpsb
fs
js
inc
inc
push
push
mov
cmp
es
xchg
adc
ret
int
add
ret
inc
mov
mov
mov
and
add
push
pop
popa
mov
int
cmp
loopne
adc
aad
or
mov
inc
mov
ret
dec
xor
xchg
or
mov
outsl
std
jo
xchg
mov
outsb
lahf
shrl
mov
inc
mov
dec
movsl
test
xchg
lods
fwait
out
out
icebp
mov
and
adc
adc
or
bound
inc
scas
mov
jbe
add
mov
pop
int
push
xchg
or
xor
adc
jno
das
inc
adc
xor
ds
or
lods
push
or
or
out
and
inc
cltd
sub
push
and
enter
cmpsl
leave
fwait
push
fnsave
mov
add
mov
mov
xlat
imul
xchg
mov
push
incl
xchg
xchg
int3
aad
ss
fwait
add
js
or
sti
mov
mov
mov
popa
lret
lods
aaa
aam
sbb
jge
inc
mov
cmpsb
xchg
xlat
xor
roll
enter
jne
cmpsl
pusha
xor
int3
rcl
push
mov
dec
iret
push
pop
sbb
stos
mov
in
iret
xchg
inc
div
das
xlat
jno
andl
movsl
std
push
sub
sbb
cmp
adc
aaa
cltd
sbb
push
cld
inc
or
cmc
out
out
mov
or
shll
mov
xlat
and
pop
cmp
mov
xlat
scas
pop
sub
xlat
sub
ss
xlat
addr16
std
jmp
insb
jne
scas
test
cmc
ja
cmp
testb
mov
xor
ljmp
jbe
subb
addr16
lahf
jns
imul
push
mov
xchg
aaa
sub
lea
xlat
arpl
mov
xlat
testb
or
scas
fwait
dec
and
xlat
in
into
and
xorb
sbb
popf
in
out
pop
testl
fistps
mov
outsl
adc
or
fwait
in
xlat
push
mov
sub
xlat
lcall
iret
xlat
mov
dec
add
jo
sub
adc
out
pop
pop
fdivrs
fisubrs
test
and
jle
xlat
lahf
les
call
xlat
in
mov
push
out
push
xlat
int
mov
aaa
xlat
enter
insl
rcl
mov
xor
pop
xor
jne
lret
lods
in
push
sarl
ficoms
js
sbb
adc
inc
idivb
push
iret
lret
movsl
je
cmpsb
nop
loope
xlat
pop
inc
xor
add
push
inc
xchg
push
sbbb
push
xchg
fisttpll
add
xlat
lret
ret
adc
pop
mov
jp
stc
xlat
pop
xor
lock
repz
xlat
loope
ljmp
add
jl
shlb
test
aaa
xchg
pop
dec
iret
daa
lahf
cmpsb
cltd
push
rcrb
shrb
jns
xchg
or
insl
xlat
std
loope
lahf
popl
into
neg
dec
ffreep
loopne
xchg
dec
xlat
inc
mov
and
sarl
repz
out
bt
addr16
and
stos
cmpsb
into
ret
inc
cmp
shrl
mov
aas
inc
rorl
xchg
xlat
dec
push
adc
cmp
add
fldt
mov
imull
mov
mov
pop
fisubs
fs
and
inc
add
rorl
or
jnp
in
add
xlat
test
push
xlat
outsl
mov
mov
and
xor
fwait
gs
mov
xor
jp
fnstenv
add
loopne
jge
stos
sub
ja
popa
or
cmc
xor
cmp
loop
mov
mov
shlb
rcll
pusha
nop
mov
or
into
sbb
scas
xchg
shll
xlat
mov
orb
push
xchg
lret
xlat
test
push
add
sbb
scas
stos
and
rorl
jge
jl
sarb
lods
sbb
inc
pop
sub
fs
xchg
xlat
mov
stc
jp
fists
in
clc
xlat
mov
ficomps
inc
adc
loopne
add
lahf
dec
cmc
outsb
lock
icebp
aad
xlat
mov
sub
fnstenv
xchg
xlat
cmp
hlt
loop
inc
addr16
xchg
sbb
cmpsb
lods
mov
outsl
mov
cs
mov
adc
jp
lock
sahf
push
enter
and
xlat
outsl
repnz
push
mov
xlat
sbb
inc
ret
shll
mov
cmp
js
lahf
sbbb
sarw
mov
jle
sbb
adc
inc
jno
xlat
scas
testl
xchg
insb
pop
les
xlat
add
sarl
outsb
adc
or
mov
aam
xlat
pop
adc
sbb
xchg
or
xchg
sbb
cmp
lret
inc
outsb
je
xlat
inc
xchg
mov
jnp
sub
stc
ja
inc
xor
xor
push
cmp
fiadds
add
xchg
mov
mov
test
ljmp
add
jae
rcl
dec
ret
stos
xchg
sub
and
arpl
mov
jo
mov
xchg
push
jno
jnp
cmc
jg
loopne
mov
fldcw
cmpl
lahf
in
lret
sbb
xchg
xlat
insl
sbb
cmp
xlat
insb
add
in
cmp
lods
xlat
cltd
rcrb
lods
mulb
outsb
fsubrs
mov
das
out
pop
std
adc
cmc
mov
push
sbb
xchg
fsubrp
not
mov
call
data16
push
cmp
mov
and
dec
adc
pop
mov
lret
add
mov
aaa
push
xlat
movlps
stos
and
lahf
cmc
cmpsl
adc
pop
push
and
add
and
xchg
add
in
mov
and
jecxz
xchg
outsb
in
push
sarl
std
push
pop
ss
jns
ljmp
dec
or
adc
mov
adc
inc
arpl
jno
cmpsb
imul
cltd
pop
sahf
and
jl
sbb
outsl
jg
xlat
or
stos
aas
pop
lss
pop
xlat
test
jl
push
push
xlat
in
imulb
mov
lret
add
scas
cmc
and
xchg
and
lock
xlat
aas
inc
stos
les
push
inc
adc
xlat
out
adc
loope
fcmovnb
test
xlat
movntq
xchg
shrl
adc
pop
inc
dec
xchg
xlat
xor
and
xchg
jge
push
xlat
dec
outsb
jo
pusha
push
xlat
arpl
dec
inc
repz
push
push
call
dec
mov
sbb
rcrb
cmp
scas
cmp
xchg
or
popa
lods
cmpsl
mov
aad
xchg
mov
push
cwtl
shlb
pop
adc
xlat
ret
sub
xchg
addr16
jl
gs
lcall
daa
mov
lahf
stc
call
inc
cmp
pop
in
jne
xlat
movsb
loop
adc
xchg
repz
pop
push
nop
adc
stos
sub
or
mov
or
rcl
add
shrb
xor
fiadds
call
pop
inc
repnz
out
cs
jbe
ret
aad
data16
push
dec
fdivrl
aad
mov
push
test
pop
leave
inc
sbb
push
ds
clc
mov
add
jge
into
ljmp
pop
xor
inc
sbb
out
mov
lret
push
cld
fsts
xlat
xchg
test
je
mov
add
lcall
mov
pushf
iret
idivb
fisttpl
repnz
fcmovbe
pop
mov
sub
aad
and
fdivl
imul
dec
test
add
mov
les
mov
sbb
sbb
sbb
scas
pushf
xchg
ret
jge
mov
sub
out
cmp
sub
add
xchg
push
mov
push
es
dec
loop
sarb
rcrb
fsubr
jno
add
jo
xchg
scas
jbe
or
mov
inc
mov
shrl
sbb
cmp
scas
shlb
rclb
xlat
cmc
jge
inc
dec
add
out
xlat
gs
fs
and
cmpsl
loopne
mov
cmp
xchg
jge
cmp
push
sub
bound
xlat
push
cmp
inc
xlat
dec
mov
scas
xchg
ds
add
enter
dec
lea
adc
cs
push
xchg
sahf
movswl
gs
rcrb
je
bound
lds
test
sarl
pop
sahf
out
iret
lret
data16
dec
int
sub
sub
sub
les
iret
gs
aad
inc
adc
sbb
repnz
lret
es
shl
pop
out
daa
fstpt
fcompl
adc
cmpsl
rorl
xchg
or
stc
xchg
add
pop
adcl
sub
daa
js
rcl
lcall
hlt
stos
rcll
adc
xlat
pop
sbb
pop
movsb
bound
mov
cmp
ror
xlat
es
rep
push
mov
dec
cmpl
out
mov
movsl
pop
fbstp
push
in
jae
or
adc
fildl
inc
idiv
xchg
rcr
mov
cmp
xchg
xchg
lods
push
rcr
mov
fcomip
xchg
fwait
xlat
or
add
nop
jl
push
cmp
mov
and
xor
sub
test
fs
int3
hlt
jg
sbb
mov
xlat
divl
xchg
xlat
shlb
and
xlat
out
ss
nop
mov
popf
testl
iret
push
int
mov
mov
fcom
fbstp
rorb
cld
cmpsl
dec
repz
movb
mov
ljmp
popa
in
or
test
movb
adc
lods
xlat
push
js
fisttpl
das
rorl
and
cli
cmp
out
repz
gs
shrl
sub
cmp
xchg
pop
xlat
sahf
lock
xchg
cmp
addr16
sub
xchg
push
pop
lret
lahf
push
sti
xor
adc
rorl
pop
imul
arpl
adc
jbe
jmp
push
ret
xlat
and
or
mov
mov
push
or
mov
fucomi
xor
sub
mov
movq
in
add
jmp
out
and
leave
iret
loope
out
cmpsb
cmp
mov
ds
adc
fidivs
sbb
adc
aam
xor
dec
xlat
loope
rorl
scas
adc
sub
sub
lahf
cmp
inc
or
mov
aam
adc
xlat
out
mov
lock
push
bswap
mov
push
mov
push
lret
mov
cmp
sarl
mov
fwait
or
push
addr16
inc
ror
push
add
pop
push
lea
xchg
repz
gs
and
jnp
and
imul
pop
mov
lods
sub
push
sub
aaa
insb
sub
aam
movsb
push
movsb
add
jmp
mov
sbb
pop
adc
aaa
push
and
imul
iret
imul
xlat
pop
push
xchg
mov
pop
jo
int
adc
aam
push
xchg
in
aaa
mov
or
xchg
aam
js,pt
xchg
nop
xchg
mov
cmp
imul
push
aam
nop
mov
repnz
push
negb
aam
and
ss
push
ljmp
shll
xchg
xchg
sbbb
mov
sbb
nop
idiv
xchg
xchg
adc
adcb
icebp
or
cmp
ja
mov
mov
fidivl
xor
jecxz
xchg
xor
pop
xchg
add
pop
iret
mov
popa
sarl
lock
and
daa
mov
dec
or
xchg
push
icebp
sarb
adc
mov
adc
shl
les
adc
dec
into
jmp
lods
xchg
cltd
iret
stos
inc
adc
test
mov
dec
aam
or
jmp
mov
xchg
rorl
fldl
jnp
mov
push
add
iret
jg
pop
scas
jle
fistpl
jo
rorl
mov
fwait
sub
aas
in
popa
shll
insb
pusha
jp
js
xchg
mov
sub
or
mov
fucom
scas
das
fisubrs
sub
outsb
pop
cmpsl
jbe
mov
xchg
daa
push
dec
or
lds
jnp
dec
mov
xlat
mov
sbb
imul
daa
das
inc
arpl
adc
aaa
fistl
aam
or
inc
add
jg
fwait
push
xchg
orl
repz
lock
cmp
shll
and
out
jmp
inc
fnstsw
aas
arpl
mov
lods
aam
xchg
mov
push
aam
in
imul
sub
ds
notb
xchg
lea
iret
push
mov
inc
ret
fmuls
adc
mov
outsb
xchg
aaa
aaa
ret
pop
addb
sub
movzwl
sbb
ret
mov
jo
mov
fisttpl
mov
dec
xchg
lods
sahf
pop
push
shl
push
xchg
iret
mov
xor
mov
popl
pop
scas
dec
cmc
xchg
jg
insl
fcom
push
cmc
aam
rorl
xor
ss
dec
scas
cmp
push
sub
jmp
add
cmp
mov
subl
rcrl
or
sbb
mov
mov
jnp
dec
inc
leave
adc
dec
fsts
fst
xchg
mov
ret
jecxz
jae
mov
mov
nop
pop
in
lea
pop
fwait
jmp
into
mov
jle
push
mov
mov
ja
jne
dec
fbstp
rcll
push
imul
xchg
test
mov
jecxz
push
xlat
sbb
sbb
cmp
cmpsb
repnz
lods
add
outsl
sbb
popa
cmp
repnz
push
mov
pop
inc
dec
push
inc
cmpsl
mov
in
jbe
cli
push
cltd
pop
inc
ds
bound
mov
cmp
gs
jbe
arpl
inc
pop
aaa
fwait
arpl
sbb
mov
enter
ret
mov
push
xor
arpl
jg
imul
dec
push
out
jo
cmp
cmpsb
out
and
pop
xlat
out
jae
adc
jbe
in
pop
lahf
dec
inc
sbb
jnp
inc
movsl
xlat
add
addr16
push
pop
pop
inc
pop
xchg
rorl
cmp
adc
pop
sarb
ret
or
lock
pop
sbb
bound
leave
aas
sub
ret
sub
jl
xlat
mov
lock
rcl
sub
push
lahf
subb
daa
sbb
sub
inc
rorl
add
push
xchg
popf
rcl
jle
cmp
mov
jp
mov
ret
dec
xlat
in
push
ja
lods
and
mov
into
xlat
addr16
xor
sbbb
jnp
and
xlat
fwait
mov
pop
xchg
mov
je
int
jmp
xlat
pop
push
cli
rorb
loope
mov
lret
sub
ljmp
sbb
inc
cmp
fwait
xor
sub
jbe
xor
mov
jne
mov
mov
jp
adc
mov
sbb
mov
repnz
xlat
cmp
arpl
outsl
xor
mov
mov
xlat
jg
xor
aas
daa
flds
xchg
adc
add
aam
shr
push
js
cmpl
repz
xchg
rolb
into
fs
pop
shll
mov
out
aaa
jo
rcr
cmc
movb
movsl
ret
test
xlat
or
inc
inc
mov
lock
loopne
xlat
cwtl
hlt
loope
push
xor
int3
iret
mov
jecxz
out
repnz
test
lods
mov
sti
pop
adc
mov
xlat
sub
xlat
dec
pop
and
gs
repnz
mov
adc
pop
jmp
mov
movsb
out
mov
or
mov
jp
sbb
aaa
ret
mov
cmp
mov
mov
xchg
insl
cmpsb
mov
xchg
sbb
adc
xlat
xchg
mov
adc
dec
xchg
divl
jnp
ret
and
push
in
cwtl
sbb
in
daa
xorl
imul
jo
push
xor
cli
jne
mov
aad
xor
pop
push
xlat
xchg
inc
dec
scas
enter
jo
jns
xchg
jge
sub
roll
xlat
loope
or
pop
ljmp
push
inc
mov
mov
stc
inc
cmc
sbb
mov
notb
js
jmp
nop
xchg
push
mov
xchg
add
mov
call
pop
sbbl
mov
aam
add
mov
push
dec
mov
jg
push
pop
lret
std
repz
or
push
mov
aaa
nop
inc
roll
or
mov
lahf
dec
dec
jbe
add
aaa
stos
and
adc
adc
cmpsl
xchg
popf
push
fbld
mov
mov
push
hlt
mov
inc
stos
cmp
rcl
cmp
mov
xchg
adc
xchg
and
scas
add
icebp
cmp
outsb
sbb
mov
sahf
scas
adc
xchg
jnp
iret
rcll
js
sub
loop
xchg
push
jg
jnp
dec
mov
mov
xchg
adc
mov
lods
decl
pop
std
ja
ss
leave
lret
jecxz
jecxz
ljmp
popf
fs
rclb
nop
loop
es
and
mov
jg
lea
stos
loopne
pop
mov
mov
mov
jae
andl
imul
add
outsl
xlat
and
mov
add
sbb
jno
sbb
jg
hlt
stos
iret
inc
out
jmp
xchg
mov
jno
jne
rcll
or
pop
dec
pop
arpl
sbbb
ret
xchg
rcr
xchg
sbb
push
and
pop
repnz
inc
or
xor
cmp
mov
sub
mov
push
push
out
je
push
daa
xchg
mov
clc
scas
and
or
scas
xchg
scas
imul
je
mov
jnp
xchg
leave
nop
outsb
in
lcall
or
pop
push
adc
jge
cli
and
sub
fldenv
fisubs
or
add
or
and
int3
push
ret
jo
iret
insb
dec
test
mov
inc
rolb
aad
nop
jle
jne
add
repnz
xchg
jb
sbb
scas
xchg
mov
lds
je
pop
xchg
jnp
fsub
into
mov
cmc
mov
mov
les
pop
int
sbb
mov
pop
mov
lahf
sub
dec
int
nop
fsubrl
inc
into
sbb
sub
pop
mov
xchg
not
sarl
arpl
lea
out
push
rorb
ds
insl
lcall
mov
addl
mov
rcll
insl
nop
xchg
movsl
and
mov
mov
pop
sub
push
sub
cmpsb
fsub
mov
mov
xchg
push
cltd
fldcw
movzwl
sub
xchg
movsb
cs
cld
daa
mov
stc
sahf
sub
adc
push
sub
add
fstp
adc
cwtl
loop
push
pop
cmp
dec
orl
jae
inc
pop
nop
ljmp
xchg
cli
mov
or
mov
sbb
loope
ret
je
incb
lods
leave
outsb
push
xor
icebp
and
ja
fwait
mov
mov
push
push
mov
js
jge
jg
outsb
pushf
xchg
xchg
jecxz
in
leave
xor
in
fbld
pop
xor
inc
mov
push
and
inc
mov
push
ljmp
movl
adc
pop
ja
aas
nop
push
jo
std
inc
xor
adc
xchg
into
rcrl
or
leave
mov
adc
fidivl
sti
lds
push
xchg
adc
sbb
mov
loop
lds
jb
push
notb
and
mov
jge
xchg
mov
jae
ret
pushl
sahf
and
inc
ja
adc
aam
addr16
cli
xchg
mov
push
and
xor
push
push
ret
fcom
xchg
dec
mov
loopne
nop
cmp
int
xchg
adc
mov
xchg
adc
xchg
xchg
sbb
arpl
in
mov
mov
push
lea
xor
mov
ljmp
mov
push
inc
mov
test
iret
pop
sbbl
inc
iret
aad
imul
pushf
cmp
adc
aad
mov
imul
mov
xchg
cltd
xchg
xchg
lods
pop
xlat
imul
pop
sub
mov
call
and
movsl
ret
dec
pause
arpl
pop
adc
daa
stos
dec
sub
sub
push
sub
pop
stos
imul
adc
gs
adc
lods
fwait
sub
je
mov
insl
push
mov
shrb
aaa
repnz
push
xchg
jg
xor
jne
sub
jno
mov
push
mov
aaa
sti
out
mov
mov
inc
and
enter
push
pop
mov
or
loopne
nop
int3
out
pop
cmp
mov
pop
xchg
leave
mov
or
inc
sbb
adc
push
adc
nop
pop
insb
inc
adc
cli
in
add
xorl
jg
xchg
xor
imul
lods
push
jge
add
pop
jno
mov
jecxz
push
shrl
mov
cmpsl
mov
sbb
xor
ret
daa
push
dec
out
push
push
dec
sti
aas
aam
js
and
aam
notl
kmovb
xchg
inc
repnz
andb
push
sub
pushf
lahf
push
aaa
ja
stc
scas
xchg
dec
ret
loope
mov
outsl
adc
push
js
inc
popa
xor
mov
in
aam
iret
push
push
and
pop
mov
cld
xchg
sbb
xchg
adc
or
xchg
cmc
lret
push
imul
xchg
lcall
cmpsl
stc
or
or
xchg
push
push
cmp
add
test
sub
cmp
xchg
fsubr
test
std
sbb
adc
jg
ds
cld
add
jns
sbb
nop
pop
sub
stos
into
aam
jno
pop
cmpsl
call
int3
mov
mov
xabort
and
iret
mov
stos
mov
push
pop
lods
inc
lea
aam
jp
add
xor
nop
push
dec
into
mov
xor
mov
stos
sub
mov
jge
gs
mov
cmp
cmpsl
xchg
bound
push
add
out
jmp
mov
pop
xchg
push
jl
scas
mov
xchg
fs
xor
ljmp
xlat
xchg
mov
push
mov
ret
jno
and
scas
add
mov
rol
pop
ja
fdivs
fnstenv
dec
outsl
mov
aaa
push
ficoml
shrb
sbb
nop
and
sub
mov
cmc
out
push
or
lds
mov
pushf
push
pop
pop
cs
mov
add
inc
cli
lahf
pop
popf
fcmovnbe
mov
leave
add
jae
cmpb
iret
pop
test
mov
loope
push
repnz
movsl
fwait
mov
test
add
ror
or
xchg
out
xorb
leave
jg
ja
fcoms
and
mov
xor
lcall
popf
xchg
hlt
sti
push
les
mov
mov
mov
xchg
gs
inc
les
rol
sahf
mov
insl
and
push
or
cmp
aas
mov
adc
cwtl
mov
xacquire
add
and
adc
push
jns
pushl
inc
mov
mov
mov
dec
jecxz
nop
add
iret
in
mov
mov
aam
cmc
inc
pop
inc
and
aam
nop
inc
jbe
cmpsb
push
sbb
and
sub
aam
mov
loop
adc
outsb
cld
sub
xchg
and
xchg
icebp
jno
pop
push
xchg
jne
adc
push
jge
leave
add
inc
mov
pop
lret
pusha
sub
les
stos
xorl
test
cwtl
clc
outsl
mov
mov
sbb
outsb
xchg
adc
jmp
jno
adcl
ja
test
xor
push
push
add
xor
sbb
push
fisttpl
pop
cmc
pop
inc
outsl
sahf
mov
insl
add
inc
jb
data16
mov
jo
call
repnz
fs
rcrl
add
inc
mov
lret
xchg
fisubs
push
mov
sahf
ja
pushf
iret
cwtl
aam
nop
push
into
jae
xor
inc
cmp
xchg
leave
inc
push
mov
push
aam
imul
shlb
movsl
jns
inc
mov
pop
movsb
pop
in
xchg
lea
cld
xchg
rorb
ret
es
jo
push
mov
test
cmpsl
xchg
shll
and
mov
inc
out
xchg
mov
fnstsw
xchg
lods
mov
jg
daa
imul
sub
sbb
sub
lahf
mov
jnp
jl
imul
pop
mov
jmp
or
mov
mov
dec
jno
ja
nop
fcoms
orb
loop
push
xor
inc
adc
test
repnz
jp
adc
add
subl
inc
popf
sbb
and
and
pop
nop
testl
ss
aas
mov
push
inc
dec
fnsave
push
xchg
sbb
int3
pusha
lret
or
cld
jnp
push
mov
mov
movsb
dec
incb
xchg
cmp
dec
enter
aas
push
mov
xchg
adcb
shr
cmp
inc
mov
sub
in
mov
jns,pt
xchg
push
dec
iret
cmp
add
sahf
ljmp
lahf
jno
fcmovb
pop
add
adc
jne
aas
mov
mov
and
loope
xchg
jbe
cmpsl
pop
mov
sahf
lret
test
sub
pop
mov
xor
rol
jns
scas
and
nop
lcall
xlat
pop
dec
fisttps
aas
mov
mov
pop
push
or
sub
or
and
mov
pop
add
pop
cmpsb
nop
add
popf
lahf
push
test
push
inc
gs
mov
mov
mov
push
cmpsb
jmp
mov
scas
js
xchg
nop
mov
lods
dec
daa
sub
cld
lock
sbb
xchg
addr16
xchg
lret
sti
popf
out
aam
mov
xchg
out
out
rsm
fidivl
out
adc
mov
out
sub
cmp
jg
out
cmpsb
mul
xor
jmp
movsl
scas
mov
add
cwtl
dec
enter
ja
dec
mov
pushf
xor
or
xchg
inc
loopne
pcmpeqd
aaa
jns
cld
adc
int3
pop
mov
inc
in
xchg
mov
mov
lcall
inc
push
cmc
daa
aas
mov
add
jp
push
mov
or
inc
in
scas
add
outsb
scas
cmpsl
push
jnp
outsb
dec
scas
inc
xor
dec
aas
cmpsb
adc
cli
lret
mov
mov
jp
scas
adc
out
movsb
sar
arpl
repz
gs
mov
push
jne
jbe
cs
lret
gs
into
iret
rcl
lahf
inc
add
loope
test
mov
scas
mov
out
iret
lds
sub
inc
mov
loope
movsl
stc
popa
cmpsb
xchg
je
or
cmp
xor
test
mov
iret
pop
je
shll
dec
leave
test
inc
mov
shrl
test
push
mov
cli
inc
lcall
mov
cwtl
ret
sub
xchg
or
xchg
les
pop
sub
cmpl
mov
outsl
pop
shll
mov
sahf
nop
add
sub
adc
and
cmp
xor
jg
mov
lret
sahf
jns
imul
sub
lcall
push
scas
repnz
xor
adcl
pushf
dec
leave
dec
mov
and
or
cmpl
jmp
mov
mov
push
aas
in
aam
ret
xchg
test
sbb
decb
sub
nop
adc
rol
add
xor
push
jnp
xchg
cmpsl
mov
lds
mov
and
fdivs
daa
ja
xchg
pop
sbb
xchg
push
mov
rolb
mov
repz
mov
mov
adc
xchg
mov
or
nop
and
pop
cli
les
es
jbe
jb
push
scas
cltd
loop
cmpsl
lret
dec
dec
iret
pop
mov
mov
sub
roll
ret
int
or
push
rcrb
out
pusha
xchg
or
inc
xchg
adc
dec
jge
fwait
mov
xchg
xor
outsb
js
pop
push
mov
jbe
lret
push
add
jg
mov
out
push
orb
ss
popa
inc
jo
pop
dec
mov
dec
jbe
lahf
fmull
push
cmpsl
fisttpll
sbb
xlat
enter
pop
loopne
add
sub
xchg
iret
xchg
and
outsb
or
pop
mov
les
mov
scas
sbb
pop
fstl
out
mov
adc
imul
cli
dec
fwait
push
ljmp
lds
and
aaa
mov
mov
fld
adc
insb
cmp
rcll
pop
push
ficompl
cli
or
adc
shl
fisubrs
out
mov
mov
out
cmp
repz
sahf
and
pop
imul
push
aad
pop
mov
fcomip
jmp
aam
xor
push
and
sbb
xor
repnz
fdivl
jl
dec
daa
sbb
xchg
jmp
test
push
adc
scas
xchg
aad
xchg
cmp
cmp
sbb
mov
aam
scas
shlb
loop
pop
ret
or
pushf
jnp
sahf
sbb
leave
sub
xor
sub
or
nop
mov
cmp
or
ja
push
popl
mov
test
cmpsb
in
mov
adc
sub
clts
mov
mov
xchg
xor
scas
mov
jl
out
mov
sub
daa
xor
push
adc
in
lods
xchg
fimull
jmp
stos
cld
cmp
scas
sahf
sbb
js
mov
fisttps
repz
stos
mov
adc
mov
js
sbbb
insl
in
ffreep
push
or
cmpsb
andb
adc
mov
nop
xchg
mov
push
ss
mov
aaa
add
sub
push
aam
push
add
scas
xchg
sbbl
pop
loopne
into
or
pop
jg
les
sahf
movsb
xlat
push
ja
sub
xor
inc
xchg
mov
cmp
clc
rolb
mov
xchg
shl
mov
loop
ljmp
nop
test
cmpsb
mov
jle
test
in
xchg
xchg
out
mov
cltd
inc
mov
gs
push
ret
mov
lods
add
fmull
cltd
mov
test
or
cmp
orl
nop
jae
xchg
sarb
add
add
aaa
dec
jle
inc
cld
loop
xor
leave
xchg
rcrl
mov
test
sbb
int
cld
cwtl
push
inc
inc
xlat
bound
jmp
sub
test
xlat
fmuls
xchg
not
inc
in
nop
cwtl
stos
mov
popf
dec
faddl
jl
out
imul
out
sti
out
sbb
adc
inc
sub
fwait
xchg
shll
push
xchg
sbb
nop
dec
int
into
adc
and
dec
rorl
cs
mov
adc
adc
inc
ror
xchg
sti
xchg
xchg
inc
jmp
lahf
outsb
scas
pusha
rcll
cmpb
mov
jne
jg
lods
orl
mov
push
out
inc
mov
sub
adc
movsb
jb
popf
lods
xchg
push
push
push
faddl
fwait
xlat
cld
enter
push
mov
or
andl
loope
fdivrl
pop
outsb
leave
push
or
mov
loope
mov
das
mov
cmovle
aad
sbb
ret
mov
cmp
adc
shl
cwtl
mov
nop
sub
mov
and
sbb
lea
adc
enter
insb
xchg
ret
xchg
add
jl
push
stos
shrb
scas
jb
inc
mov
mov
int3
sbb
lods
mov
ret
aas
nop
daa
scas
lods
scas
mov
aam
push
inc
mov
jns
fsubrs
ficomps
jb
pop
cmp
sub
dec
xor
data16
lds
mov
mov
xchg
data16
test
stos
lahf
call
rorl
lret
aam
or
lds
repnz
outsl
ljmp
and
mov
lods
addr16
notl
mov
push
inc
push
mov
pop
scas
icebp
dec
rol
xlat
xchg
and
repz
fiadds
push
inc
sub
aam
popa
xlat
test
data16
rcrl
pop
lea
outsl
bound
cmp
pusha
sahf
cli
ljmp
int
dec
or
insl
mov
fldl
and
aam
or
rcrb
in
fadd
nop
mov
lahf
aam
mov
pop
test
popa
xchg
xor
push
cmp
jg
in
test
adc
rorl
sbb
hlt
insl
push
adc
iret
sub
mov
jecxz
movsl
lock
cmp
xchg
mov
xchg
icebp
mov
xchg
push
popf
push
adc
lea
cwtl
and
rcrb
jns
test
shll
mov
imul
add
mov
aad
sbb
adc
aam
inc
xchg
stc
or
xor
mov
lods
loop
imul
nop
push
int3
and
pop
repz
adc
or
pop
stos
pushf
add
test
inc
data16
fisubrs
xor
popa
nop
xchg
stos
stos
dec
mov
leave
mov
pop
lea
inc
ljmp
inc
fsts
mov
ret
sub
pop
aam
stos
push
insb
jb
mov
shll
mov
mov
mov
dec
pop
mov
icebp
add
xor
jne
mov
cmp
out
cmpsb
rorl
int
pop
or
add
or
mov
jnp
mov
mov
jns
int3
jg
inc
int
fs
mov
sub
sbb
xchg
ja
sub
and
scas
and
mov
xchg
add
fmuls
mov
adc
aam
or
out
pop
aad
orl
cmpsb
cmp
xor
mov
lds
stc
aam
and
nopl
lods
clc
sub
mov
jbe
jbe
mov
jmp
scas
push
sbb
stc
push
shll
cmp
mov
sub
adc
fildl
adc
mov
cmc
inc
or
nop
outsb
push
fstpt
iret
dec
jbe
pop
rcr
test
ds
mov
push
outsl
inc
mov
jb,pt
lret
mov
sub
outsb
fnstenv
mov
cmpsb
repnz
rolb
push
push
mov
scas
inc
repnz
in
and
and
xchg
aad
jne
loopne
lea
scas
pop
lret
in
aaa
xchg
movsb
imul
out
and
rcl
sbb
nop
pushf
in
cmp
jnp
add
and
mov
rol
xchg
sub
movsl
sahf
mov
nop
jbe
scas
sub
push
xor
push
in
out
mov
sbb
insl
mov
fmull
mov
dec
xchg
in
xlat
imul
in
cmp
xor
mov
jns
dec
rcll
fcomip
scas
mov
into
nop
jnp
mov
inc
mov
cmp
imul
das
pop
aam
loope
sbb
fwait
mov
gs
out
fcompl
mov
in
imul
sbb
inc
incb
and
add
jbe
xchg
xor
sub
movsl
lds
addl
mov
xor
scas
xchg
sub
or
xchg
or
flds
into
or
ja
sbb
xor
pop
inc
add
loopne
hlt
sub
xchg
sub
dec
fs
fcmovne
dec
jbe
adc
mov
pop
testb
stos
imul
pop
sbb
scas
loopne
xchg
loopne
ljmp
lret
dec
jnp
mov
inc
lea
push
scas
ret
in
cmpsl
and
mov
and
nop
mov
roll
shll
shlb
outsl
push
dec
nop
iret
xchg
jecxz
rcll
push
jle
inc
mov
inc
or
movl
cmp
push
pop
push
add
jnp
xlat
and
shlb
mov
mov
mov
sub
sahf
test
push
xor
mov
idivb
cmp
fnstenv
mov
cmp
sub
inc
sub
adc
xchg
xor
sbb
sub
mov
jmp
jge
sub
sub
int
lds
and
stos
aaa
aam
stos
dec
pop
adcb
push
andl
push
push
push
insb
fwait
in
xlat
imul
and
adc
mov
jb
cld
jb
roll
pop
xchg
in
nop
add
xor
clc
inc
xchg
mov
push
bound
test
adc
xchg
dec
out
xchg
out
xchg
js
orb
in
mov
lds
loope
mov
inc
repz
xchg
sub
mov
xor
ret
in
push
stos
dec
push
aas
mov
ja
negb
xchg
stos
loop
sbb
xor
aam
adc
or
inc
out
xchg
add
repz
cli
pop
addb
inc
jle
mov
xor
mov
ja
out
mov
loop
pop
jnp
dec
mov
pushf
rolb
aam
sub
nop
or
xor
pop
pop
jecxz
xchg
sub
jb
bswap
stos
xchg
iret
aas
nop
mov
or
xor
xchg
adc
mov
popf
scas
xchg
scas
jae
jg
xchg
xchg
sbb
sub
push
enter
das
xor
mov
xor
scas
inc
sub
push
jmp
jg
je
or
jmp
mov
fldcw
mov
ss
mov
ja
cmp
inc
adc
xchg
jb
sti
rolb
repnz
sbb
into
inc
pop
mov
aas
mov
shl
xchg
xor
pop
xlat
scas
testl
and
ror
scas
loopne
mov
in
or
jno
cltd
ja
lcall
xchg
inc
push
sub
iret
iret
ss
lret
add
adc
movsl
test
call
jo
test
xchg
cld
or
lretw
ds
ja
cmpsl
fldenv
xor
dec
scas
lahf
scas
jnp
push
add
std
nop
sub
daa
ficompl
arpl
jbe
addl
cli
ret
add
leave
pushf
inc
cltd
mov
shlb
out
push
and
jle
mov
jmp
push
lret
add
add
add
pushf
ficoml
nop
dec
jae
in
xor
cmp
adc
scas
xchg
cli
sbb
ljmp
lret
mov
sub
jnp
jle
adc
fwait
ret
hlt
xlat
mov
dec
inc
xchg
mov
ret
and
into
mov
push
mov
repnz
nop
iret
xor
shlb
mov
xlat
cmp
adc
dec
mov
rol
fldcw
lds
call
pop
add
call
nop
sbb
cmp
inc
push
cmp
sarl
jg
push
dec
mov
das
repnz
cmp
sbb
loop
or
lea
inc
xchg
lcall
jbe,pt
push
add
pop
lea
and
mov
div
sbb
jns
cmc
mov
adc
jne
mov
lods
jmp
xchg
test
or
rcrb
push
bswap
xor
xchg
add
jne
fdivl
and
mov
jb
div
fld
pusha
jmp
aas
fs
mov
in
dec
pop
jmp
imul
add
xchg
push
sbb
inc
inc
adc
daa
jne
mov
push
iret
push
and
fs
mov
xchg
xchg
pop
scas
or
xlat
into
sbb
jnp
repnz
push
es
aam
cld
inc
cmpsl
mov
hlt
and
aam
nop
shl
sbb
pop
mov
push
ret
pop
aam
cltd
ja
mov
lcall
push
push
mov
xor
push
sub
aam
adc
cli
lahf
sbb
xor
mov
xor
xchg
test
inc
jl
jo
mov
dec
pop
ja
add
jne
and
cmp
mov
aas
pop
js
xor
ret
ljmp
xlat
pop
mov
addr16
cmp
and
loop
sub
lret
mov
int
mov
fwait
loop
mov
mov
add
cmp
repnz
jg
pop
data16
mov
mov
aaa
jno
ficoml
mov
aas
sahf
stos
and
and
ret
and
inc
fsts
xchg
sub
ds
jbe
stos
pop
repz
cmpsl
lcall
aaa
dec
in
and
add
rcll
nop
mov
pusha
out
mov
imul
hlt
mov
mov
mov
roll
and
in
arpl
and
xor
sub
push
jnp
mov
inc
xchg
pop
outsb
loop
aaa
jg
jae
sbb
push
outsl
in
popa
test
pop
inc
mov
outsb
adcl
popa
or
push
shll
jnp
push
arpl
ret
xlat
mov
xchg
icebp
push
fistps
rorb
out
sub
test
mov
mov
aam
xchg
sahf
mov
add
sub
data16
jl
jge
jo
leave
jae
mov
lret
mov
insl
jle
std
aaa
xor
xlat
mov
in
popa
mov
cltd
add
or
inc
lods
inc
aad
sarl
xchg
rcrl
nop
addl
lahf
mov
push
mov
inc
adc
jbe
pop
sbb
pop
mov
ss
negb
xchg
or
cmpsl
dec
cmp
mov
aas
aaa
inc
or
aas
outsl
daa
rorl
aas
ret
xchg
mov
xchg
pop
push
idivl
insb
push
shlb
fsts
mov
pop
shll
aas
nop
dec
enter
jno
jnp
test
jle
push
xor
aad
sbb
ss
mov
loop
push
sub
xchg
xchg
stos
les
sbb
push
sahf
cs
cltd
mov
test
mov
pop
jg
xchg
shlb
xor
xlat
cmc
mov
stos
jecxz
loope
xchg
dec
jnp
sub
in
leave
cmc
mov
push
adc
sarb
scas
mov
mov
nop
out
pushf
mov
xchg
mov
mov
adc
cmpsb
inc
jle
xor
pop
sub
push
repnz
daa
pop
cmpsb
cmp
stos
nop
mov
out
lds
out
into
mov
push
add
mov
xchg
sarb
movaps
mov
ljmp
ljmp
mov
jg
jnp
jnp
stos
mov
ja
push
mov
movsl
leave
stos
mov
sub
test
repnz
add
push
pushf
inc
loope
push
stc
push
in
mov
in
std
xchg
xor
iret
jecxz,pn
cltd
xchg
aaa
negl
shlb
fldt
cld
mov
xchg
rcrl
inc
fdivrl
adcb
fistpl
gs
shll
pop
nop
cmp
jnp
mov
dec
in
push
mov
insb
pop
xor
xor
into
jno
movb
sub
rclb
pop
sbb
and
loope
push
jne
nop
sahf
arpl
lcall
roll
inc
ret
bound
inc
adc
push
cld
and
insl
xor
outsb
into
cmp
int3
adc
fcompp
sub
aas
clc
call
aas
inc
cmp
movaps
jnp
jno
repnz
mov
outsl
push
push
in
mov
fidivrl
inc
or
test
jo
jbe
pop
cmpsb
jno
lahf
inc
sbb
loop
cmovge
jecxz
rolb
rclb
mov
xchg
jnp
lea
orb
nop
cld
adc
fldcw
lods
push
push
call
sub
scas
pushf
gs
push
and
or
call
rorb
xchg
nop
js
push
push
pop
push
aas
mov
rcrb
or
or
jp
out
pop
xlat
pop
sbbb
mov
ja
outsl
mov
pop
in
mov
add
and
pop
iret
fmul
adc
inc
int
imul
nop
mov
and
test
mov
pop
addb
int3
fsubrs
adc
movsb
loope
lret
scas
xchg
pop
push
out
cmp
jg
stos
jae
and
lret
lret
shlb
inc
sub
adcl
or
cwtl
lahf
outsb
lahf
jge
bound
dec
pop
mov
loop
mov
lahf
imul
jg
jg
push
jmp
outsl
pushf
stos
dec
aam
jmp
stos
pop
stos
pushl
jl
xchg
jbe
push
sbb
push
xor
push
stc
or
es
jmp
lock
jg
loope
fs
dec
pop
imul
xchg
ret
out
iret
cli
pop
addr16
repnz
mov
cmp
sub
bound
sahf
jle
aam
loop
inc
cmc
mov
sub
jg
and
jl
push
mov
stc
hlt
lods
stc
jnp
and
pop
fadds
int
xor
xchg
repnz
push
mov
ret
inc
cs
inc
jp
push
gs
subb
add
ja
imul
cld
pop
mov
or
sub
inc
or
xor
pop
and
adc
mov
adc
iret
cld
cmp
loop
jne
je
ret
push
mov
sbb
sub
sbb
push
xor
rcll
sbb
xchg
mov
sbb
shlb
push
ret
pop
dec
outsl
xlat
dec
inc
stos
sub
jge
test
sub
inc
adc
sub
adc
or
jge
push
xchg
pusha
jbe
out
in
lods
jne
dec
sub
dec
sub
mov
jae
sbb
sahf
cmp
sbb
nop
ret
pop
xor
pop
jb
push
dec
sbb
cmp
jecxz
rolb
or
mov
insb
xchg
jns
inc
inc
inc
mov
sahf
mov
inc
test
xchg
adc
aad
cmp
sub
insb
shl
test
movsb
stc
cmpsb
aad
shrl
xchg
cmpl
jbe
in
ret
jae
pop
mov
icebp
shll
jmp
movsb
fnstenv
scas
or
inc
mov
dec
inc
ljmp
ficoml
xchg
push
adc
gs
xor
cmpsb
adc
outsl
add
push
popf
daa
std
fwait
int
inc
pop
mov
xor
iret
xchg
call
aam
mov
in
sub
cmpsl
loope
hlt
push
add
arpl
jg
ja
repnz
outsb
test
les
test
imul
out
push
jo
fs
dec
jb
adc
std
shll
fsubs
nop
or
pushf
ret
xchg
pop
scas
aad
xchg
loop
pop
and
pop
push
jne
mov
es
out
pop
test
cmp
push
sahf
xchg
inc
adc
jmp
shr
pop
sbb
sbb
in
cmp
rcrl
dec
xor
aaa
aaa
jge
pusha
inc
aad
data16
mov
xor
and
jl
push
pop
fcmovb
mov
ljmp
js
mov
mov
xchg
xchg
pop
ret
ss
add
std
rcrb
movsb
pusha
sbb
ficoml
shll
xlat
icebp
mov
subb
adc
sbb
das
subl
mov
mov
stos
lahf
mov
addb
jae
add
add
xor
pop
ss
dec
sub
mov
pop
in
lea
jo
mov
popl
dec
jb
cmpsb
mov
sbb
dec
dec
scas
out
les
xchg
dec
xor
mov
xchg
lea
lahf
mov
inc
mov
push
mov
loope
cmp
gs
test
movsl
sub
mov
push
and
adc
mov
dec
push
xor
mov
mov
bnd
pusha
mov
adc
mov
mov
mov
or
dec
mov
xchg
aam
or
sub
sub
sbb
mov
inc
cwtl
xchg
test
mov
dec
jg
ja
mov
cmp
mov
xor
mov
mov
sub
inc
mov
mov
xor
nop
fcoml
push
push
test
and
mov
jge
add
xchg
cmc
gs
sub
test
pop
fwait
rclb
int3
stos
shlb
cltd
inc
push
in
mov
sub
mov
xor
fidivl
dec
aam
and
pop
lret
pop
idivl
dec
popa
insl
repnz
mov
testb
mov
cmp
popa
stos
mov
xor
inc
xchg
pop
add
adc
xchg
cmpsb
mov
and
stc
add
sbb
xlat
add
xchg
loope
daa
nop
test
mov
lods
shr
cmpsl
add
gs
xchg
movsl
sbb
sarl
or
dec
inc
test
aas
cld
scas
sbb
sbb
movsb
jg
adc
mov
mov
shll
push
or
aas
jne
dec
fists
in
inc
jne
dec
outsb
or
jge
dec
cs
jbe
mov
sub
aaa
and
xlat
dec
jle
inc
fwait
adc
in
sub
cmp
sahf
les
cmc
leave
ss
ss
jns
xchg
incb
pushl
repz
outsb
test
adc
cs
imul
or
rcl
lret
cmp
sahf
dec
fadds
pop
jnp
push
mov
and
fmul
pop
cli
outsl
aam
sbb
hlt
lcall
lahf
aaa
dec
sbb
cs
ficoml
inc
sub
es
push
mov
out
lods
adc
sti
repnz
nop
xchg
add
mov
add
and
in
xchg
and
mov
push
jne
fnstcw
mov
lds
xchg
mov
jae
jmp
cmp
out
mov
aam
pop
mov
loope
push
pop
test
pmaxub
ret
mov
push
pop
xchg
fidivl
sbb
jne
inc
stc
jne
mov
pop
sub
mov
mov
adc
adc
jg
in
test
mov
or
movsl
fbstp
xor
mov
inc
loop
or
daa
jae
or
sbb
je
std
dec
push
xor
xchg
mov
cltd
addr16
pop
roll
jnp
inc
xchg
roll
std
adc
inc
loopne
adc
pavgw
cmpsl
xchg
dec
bound
in
sti
movsl
inc
mov
call
adc
push
notb
int
xchg
das
mov
int
imull
jb
mov
aas
mov
sub
cmp
sbb
jne
ds
enter
push
mov
xor
out
inc
out
fisubrl
or
daa
sbb
cmp
xlat
inc
sar
ss
cmp
or
or
push
shlb
push
imul
jmp
push
xchg
adc
mov
add
adc
dec
lea
mov
jae
or
mov
into
mov
repz
pop
or
adc
in
flds
pop
xchg
cmpb
fisttpl
lret
rcrl
loop
mov
inc
leave
pop
pop
pop
int3
cmp
xlat
lret
inc
daa
inc
pushf
cmpsb
inc
sub
cmp
sahf
call
mov
aam
lret
sbb
rcll
call
xchg
sub
xchg
ljmp
push
loop
mov
pop
ja
jnp
sub
sbbl
scas
pop
scas
or
addb
xchg
ja
jle
jl
jne
cmpl
pop
rcll
scas
insl
rolb
in
xchg
push
loop
lea
xchg
cmp
pop
jg
mov
incl
cmc
xor
xchg
mov
mov
inc
lods
xchg
mov
cltd
nop
outsb
or
xchg
fisttps
inc
fadds
dec
sub
xorb
fiaddl
push
add
push
mov
xor
rcl
inc
mov
push
subl
in
xchg
adc
nop
jo
lret
stc
mov
sti
add
mov
mov
pandn
stos
cmc
xor
cmpsl
inc
or
rorb
push
rolb
stos
xchg
xchg
clc
sbb
shlb
and
ret
xchg
push
and
stos
imul
mov
and
adc
push
out
sahf
enter
jge
sub
cltd
sbb
cld
in
add
push
fiaddl
lcall
out
arpl
mov
push
mov
mov
pop
dec
aad
jb
shll
shl
mov
rcrb
xchg
lret
iret
shrb
and
lret
cmp
fstl
xchg
jle
inc
scas
pop
mov
ja
into
and
mov
mov
incb
and
add
pop
inc
gs
imul
mov
mov
sbb
dec
addr16
mov
pusha
mov
inc
lret
inc
and
adc
and
ljmp
lret
imul
push
pop
outsb
mov
sub
push
xchg
inc
jne
mov
dec
or
jne
movsl
jnp
and
aad
dec
nop
jb
mov
mov
in
sar
sarb
push
test
adc
push
pop
sub
xlat
or
sbb
xlat
lds
push
mov
sub
cmc
sub
aad
push
or
mov
fcomi
lds
mov
xor
iret
aam
arpl
je
mov
inc
jb
sub
mov
and
ror
adc
mov
inc
mov
fs
mov
movsl
sbb
pop
dec
loope
xlat
popf
add
leave
orl
mov
imulb
and
inc
jl
stos
jecxz
push
sahf
roll
cmp
xchg
xlat
inc
adc
mov
xor
and
xlat
sar
icebp
test
mov
sbb
mov
out
int3
les
in
and
cltd
sbb
mov
lret
cmp
jl
push
outsb
xlat
or
cmp
rolb
and
push
or
adc
std
push
lret
or
jge
lds
xlat
lret
xchg
push
int
mov
and
out
jecxz
inc
xlat
mov
dec
dec
pop
xlat
inc
cli
adc
cmp
push
sub
ljmp
adc
xlat
push
jmp
in
fst
or
add
decb
cmc
xlat
filds
push
icebp
pushf
les
ror
lahf
hlt
lods
andl
sub
or
ljmp
mov
rorl
push
or
js
pop
out
stos
in
mov
lahf
dec
mov
ljmp
or
xlat
in
dec
jns,pt
or
push
mov
sbb
mov
lahf
cmp
xor
outsb
push
sbb
and
sbb
enter
sarl
inc
pop
mov
daa
pop
mov
adc
je
int3
add
fwait
mov
push
xlat
fistpl
jbe
fidivrs
sahf
aad
mov
in
or
mov
and
lahf
jae
flds
pop
or
and
cli
movsb
pop
push
ficoml
mov
ret
mov
cmpsb
pop
push
scas
adc
xlat
roll
pop
mov
xlat
xchg
lahf
and
adc
int3
xor
inc
jnp
xlat
or
dec
mov
and
bound
pop
dec
mov
jns
jne
out
push
cli
cmp
andb
pop
mov
push
leave
adc
mov
pushf
xlat
mov
xchg
les
popf
imulb
scas
lock
imul
inc
scas
insb
xlat
sahf
xor
fnstcw
or
fists
dec
mov
lcall
pop
inc
nop
icebp
push
mov
xor
sbb
sub
and
jp
sbb
xor
cmp
push
ljmp
push
jno
fldenv
lcall
jecxz
lods
xlat
push
mov
cmp
sbb
mov
insb
movsb
cmp
aaa
xchg
cltd
in
pop
mov
pop
je
fst
les
and
ret
mov
xlat
sti
sbb
adc
pop
out
sub
jno
decl
pop
psubw
gs
mov
adc
mov
xlat
test
cltd
gs
jg
test
and
push
mov
imull
mov
pop
and
xlat
mov
inc
pop
push
rorb
lods
arpl
mov
out
popa
push
sbb
cmpsb
mov
jmp
stc
insl
sbb
sub
cmpsb
inc
in
sarl
popl
push
xlat
xor
test
rclb
aas
pop
mov
add
push
xlat
loop
add
idivb
xor
push
in
shr
iret
jle
icebp
jbe
imul
adc
xor
ja
xchg
mov
adc
jne
dec
out
gs
jg
xchg
xlat
mov
jo
xchg
ret
aam
mov
test
mov
xchg
mov
aas
ja
xlat
call
faddp
mov
cwtl
cmpsb
adc
roll
mov
inc
mov
xlat
test
push
inc
ljmp
or
es
dec
adc
push
cmp
add
xlat
mov
sbb
insb
mov
xor
pop
mov
add
jo
and
insl
orb
mov
push
cmpsb
xlat
adc
dec
mov
loope
mov
cmp
int3
adc
push
mov
mov
lds
xlat
and
sbb
dec
jecxz
mov
pop
arpl
xlat
imul
sub
push
jl
xlat
das
mov
imulb
or
jge
into
cld
aad
adc
mov
mov
xlat
mov
flds
add
adc
xor
lods
xchg
mov
pop
ret
imul
jns
mov
out
sub
mov
insb
xchg
pop
jo
iret
inc
or
pop
and
shlb
test
cld
or
pop
daa
xchg
pop
jmp
sub
xlat
xchg
pop
jne
mov
test
cmpl
rcl
or
xor
scas
mov
gs
adc
inc
xlat
lret
fnstsw
and
jns
insb
xor
jo
ss
fcmovbe
xchg
xchg
sti
jns
in
rcl
imul
inc
ret
pushf
in
ljmp
dec
jne
imul
in
or
push
out
fcmovb
nop
jge
std
imul
lods
and
jecxz
test
mov
add
xlat
std
jns
push
out
xlat
push
sbb
add
push
cmpsl
xchg
sub
cwtl
movsb
shl
xchg
dec
mov
jno
dec
aaa
jmp
popa
xlat
mov
mov
xor
in
xor
add
xlat
sub
popf
push
test
xlat
repnz
lods
imul
vandnps
or
push
mov
xlat
and
mov
iret
rcl
or
push
icebp
dec
rcll
ret
jge
nop
xlat
cmp
sub
or
loopne
xlat
in
xor
and
popf
rclb
dec
ja
bound
je
mov
push
xchg
mov
inc
stos
adc
xor
dec
nop
pusha
out
xlat
push
xchg
cmp
push
sub
unpcklps
fimuls
addr16
sub
lds
mov
mov
pushf
ret
out
push
sbb
nop
loopne
out
mov
or
iret
mov
jge
call
in
jno
pop
mov
lock
gs
jne
pushf
out
fistl
sub
mov
xor
xchg
push
xor
push
push
jne
sbb
sbb
or
adc
pusha
push
adc
lret
hlt
call
dec
cltd
lock
pop
and
or
ja
jmp
inc
sbb
cmp
call
mov
fdivr
insb
clc
jg
iret
aad
imul
push
push
js
outsl
hlt
fsubp
push
fcomps
lret
adc
or
and
sub
inc
and
adc
loopne
in
cltd
xor
pop
jecxz
xchg
jl
leave
push
das
loope
mov
ret
pop
sbb
dec
xlat
dec
and
mov
test
cmp
cmp
xlat
mov
lds
push
out
inc
outsl
xchg
push
pop
mov
sub
mov
xchg
jns
xor
jg
dec
imul
push
addr16
mov
adc
into
mov
mov
repz
data16
sub
lcall
lods
shr
aad
fcmovb
or
push
xor
xor
xlat
mov
in
jle
leave
add
cmp
fistl
ror
pushl
mov
fbstp
in
sbb
sbb
push
stos
add
stos
repnz
xlat
dec
test
std
push
jae
xchg
test
mov
je
nop
lods
ds
movl
add
ss
mov
fucomip
push
pop
inc
xchg
or
mov
and
fs
xchg
fcoml
out
xlat
mov
and
fisubrs
pop
jnp
adc
push
push
or
int
cmc
sub
loop
jbe
fsts
outsl
push
scas
iret
cmp
xor
stc
push
push
mov
xlat
xchg
int3
into
cld
push
fisubrs
xlat
jp
add
push
push
inc
or
adc
xlat
test
jne
rclb
std
adc
sti
mov
sbb
loopne
or
inc
xlat
negl
aaa
rolb
jmp
das
test
cli
push
call
adc
pushf
rolb
inc
aam
adc
push
and
in
fcoms
aas
add
outsl
sub
nop
or
sbb
into
fdivl
adc
inc
int
adc
sbb
nop
es
ds
dec
loopne
dec
xor
sub
push
sub
outsl
sub
int
mov
nop
rorb
mov
jnp
dec
jne
mov
mov
xchg
cs
xor
xlat
xchg
fisubrl
mov
push
adc
lea
jge
mov
sti
xchg
popa
ss
sbb
pop
and
sbb
scas
rclb
push
sub
xor
daa
adc
int
rorl
aam
js
lds
shrl
jp
ja
data16
loopne
fnsave
test
jg
mov
dec
aas
mov
adc
in
and
mov
mov
cmp
jmp
pop
out
lea
icebp
rcl
pop
fwait
cmp
mov
or
ds
pop
ss
aam
push
mov
stc
pop
fistl
es
xchg
lods
aaa
outsl
mov
xchg
add
dec
push
dec
test
jmp
ljmp
test
loop
mov
mov
adc
into
xlat
daa
sbb
jb
push
pop
xlat
fmuls
push
add
mov
adc
mov
rorl
popa
push
inc
ficomps
inc
imul
xor
mov
cmp
xlat
lds
shr
adc
in
int3
ss
xlat
pop
rorb
xlat
xor
jb
test
clc
xlat
pop
insb
loop
insl
xchg
inc
addr16
mov
and
out
xlat
rcrb
repnz
popf
jecxz
xlat
pop
or
mov
xor
sbb
cmp
cmp
sbb
repz
sub
jle
xor
mov
xlat
mov
std
out
jb
cmp
pop
dec
add
pop
into
dec
in
jmp
sub
scas
adc
or
pop
mov
jecxz
mov
adcb
rol
pop
or
aam
push
call
cmp
adc
test
repz
xor
push
gs
idivl
and
jge
jo
fnstsw
pop
xlat
cli
push
add
or
mov
xor
mov
xor
mov
std
xlat
out
cmpsl
mov
xlat
imul
push
jp
pop
pop
fcoms
xlat
push
mov
jb
xlat
int3
addr16
and
xlat
pop
filds
outsl
fisubs
adc
sbb
rol
pop
scas
aaa
jnp
xchg
xlat
ljmp
and
jge
mov
cmp
imul
pop
push
das
mov
mov
mov
loop
sub
mov
pop
xlat
inc
cmp
xor
xlat
sub
outsb
mov
add
pop
fimuls
adc
pop
es
mov
sub
cld
pop
xchg
repnz
sarl
int
test
add
out
jae
fst
pushf
xchg
mov
fildll
mov
iret
adc
int3
repnz
xor
ja
out
push
sbb
fadd
mov
inc
jp
aam
jnp
mov
movsb
jg
call
lock
dec
and
jnp
sahf
outsb
addb
out
jle
sub
dec
xchg
pushf
sub
outsl
hlt
mov
adc
and
inc
push
sbb
push
or
push
xchg
insl
pop
inc
mulb
xor
xchg
jg
pop
mov
repz
push
push
mov
scas
mov
push
out
pop
push
jmp
sub
xchg
sub
cmp
xchg
inc
mov
xchg
inc
xchg
push
pop
mov
adc
add
scas
test
scas
adc
pop
or
cs
insb
stos
pop
and
in
pop
pop
push
add
aam
arpl
mov
test
inc
popf
inc
loopne
and
inc
xor
scas
sub
add
push
pop
cltd
iret
xchg
shrl
and
jmp
jl
mov
sbb
mov
inc
cs
or
mov
pop
sub
scas
mov
test
xor
mov
test
and
jp
sahf
add
stos
sbb
adc
addr16
in
push
in
lret
xor
inc
mov
into
cmpsl
nop
aam
or
cmp
data16
gs
pop
nop
lcall
sbb
sti
and
scas
stos
dec
and
test
jbe
lods
sbb
aaa
lea
pop
mov
hlt
lcall
ficomps
aaa
test
sbbl
test
fisubs
out
mov
aas
xor
mov
mov
fistps
mov
inc
jne
lcall
fwait
inc
outsb
dec
in
ds
sub
stos
push
aad
pop
sbb
xor
cmp
fildl
xor
inc
scas
sbb
jecxz
dec
movsl
xor
mov
sbb
add
jne
mov
mov
inc
jnp
idivb
xor
push
int
sbb
out
mov
or
aad
pop
shll
test
sbb
sbb
das
xor
jne
push
shl
pop
and
outsl
sahf
out
jne
enter
mov
es
adc
pop
inc
push
aad
xchg
test
inc
add
loopne
mov
xor
jmp
out
scas
mov
xor
out
mov
es
test
test
int
mov
lret
out
pop
xchg
cmp
pop
test
pop
xchg
test
int3
nop
pusha
xchg
adc
cmpsl
lret
cwtl
lock
inc
mov
stos
xchg
adcl
mov
mov
mov
inc
push
jg
xor
cmc
push
nop
push
inc
push
imul
vpmacssdql
lea
ficoml
xchg
or
mov
mov
push
into
repnz
adc
arpl
cld
aad
repz
xor
inc
loop
mov
iret
mov
aad
mov
jns
jbe
jo
lret
fldt
ja
in
add
mov
rcll
mov
es
add
std
xchg
cmpsb
shrl
push
sbb
mov
jnp
jge
adc
jmp
sarl
jecxz
repz
test
add
pop
mov
dec
fsts
lods
stc
mov
pop
ss
pop
ficompl
push
sub
jl
dec
mov
xchg
cmp
movsl
xchg
cli
cld
int3
sub
jne
imul
mov
movsb
sbb
nop
test
inc
mov
in
or
loope
jno
dec
out
testb
inc
int
pop
rcll
adc
mov
outsb
inc
loope
mov
nop
mov
xchg
fists
mov
fsts
dec
icebp
nop
mov
jg
imul
pop
cld
incb
inc
xchg
xchg
rcr
jg
enter
pop
dec
movsb
mov
adc
ficoml
fdivrl
inc
push
xorb
sahf
hlt
arpl
inc
popa
mov
cmpb
jg
lods
mov
sub
push
cmc
inc
add
lds
mov
and
movsl
popa
outsb
fwait
pop
in
xchg
aad
flds
leave
inc
jl
jo
data16
rcrb
and
test
mov
pop
jb
repnz
fldl
and
cmp
mov
inc
jecxz
mov
pop
and
or
push
push
in
cli
repz
jl
xchg
shrl
dec
test
imul
or
enter
mov
mov
dec
aam
push
leave
sub
jo
jnp
inc
mov
repnz
iret
or
test
adc
andl
testb
push
ret
xlat
xor
movsl
adc
pusha
daa
mov
cld
mov
xchg
xor
fistpll
dec
push
addr16
push
mov
test
xchg
mov
mov
movsb
xchg
and
test
jg
add
mov
push
pop
cld
scas
cmp
stc
insl
sbb
sbb
aam
sub
xor
cmp
aam
mov
repnz
add
cmp
int3
aad
push
out
mov
scas
jmp
in
inc
jecxz
jbe
in
test
shrl
pop
loopne
js
lret
fnsave
sbb
fcompl
add
dec
xchg
nop
out
fcmove
shlb
scas
push
mov
inc
imul
lahf
aaa
popa
dec
test
mov
lcall
xchg
mov
pop
and
jmp
mov
fisttps
aad
mov
xor
inc
fcoms
mov
in
nop
test
mov
sub
push
xchg
mov
dec
scas
push
cs
adc
mov
xlat
add
in
fmuls
mov
jg
push
jmp
mov
mov
push
mov
in
push
jb
jnp
sub
cmp
lahf
ret
outsl
push
jle
dec
aam
cmc
shl
inc
xchg
and
inc
lods
xchg
sbb
add
ljmp
aam
std
aaa
push
inc
inc
jo
inc
lods
xor
pop
mov
lock
or
aas
jb
lahf
sbb
out
xchg
push
repnz
into
push
insb
pop
xorl
push
movsb
repnz
les
imull
insb
or
pop
sbb
adc
mov
mov
push
sbb
fisttpll
iret
mov
ljmp
push
in
xchg
mov
rcll
movsl
not
aad
ja
mov
rclb
dec
or
push
mov
pop
les
push
insb
out
xor
add
push
insl
cwtl
bound
cmpsl
and
cld
pop
jns
ret
out
sti
imul
or
fwait
add
adc
clc
sbb
int3
and
mov
aaa
addr16
and
gs
push
ss
cmp
xlat
enter
bound
je
imul
sub
fsubl
xorl
jns
push
adc
in
stc
cmpsb
and
xlat
inc
push
sub
sub
out
ljmp
iret
xchg
xor
add
aad
mov
outsb
push
xchg
insb
push
adc
adc
push
add
pop
out
in
mov
mov
aas
jge
cmp
jns
cltd
out
lock
sahf
dec
adc
icebp
subl
add
mov
sub
outsb
inc
mov
leave
cmp
aaa
push
fcmovnb
fdivs
jg
xlat
add
xor
and
addr16
ja
pop
xlat
sbb
xor
addr16
adc
xchg
rcr
mov
hlt
pushf
cmpsl
outsb
cmp
mov
push
xlat
push
ljmp
xlat
xor
cmp
fisubrs
hlt
aad
sbb
xlat
repnz
push
icebp
push
xchg
iret
pop
test
jmp
jae
popa
aam
filds
cmp
add
xor
or
mov
insb
lods
lock
aad
mov
popa
test
xlat
mov
push
inc
xlat
mov
push
int3
test
imul
adc
jg
cwtl
outsl
xlat
add
mov
mov
loopne
fwait
inc
dec
sub
not
xlat
movsl
pop
or
outsb
imul
nop
mov
scas
out
das
jg
xlat
mov
inc
mov
mov
mov
push
push
pop
rcl
loopne
push
jmp
ret
movb
mov
ds
mov
push
xlat
dec
loopne
push
fsubs
je
pop
dec
inc
or
xlat
cmp
dec
sub
in
jg
push
stos
scas
pusha
mov
xor
xlat
push
lods
movsb
pop
sub
jae
int
push
xchg
sub
push
lret
mov
pop
sahf
pop
xchg
mov
out
ret
js
rcrl
or
mov
mov
notb
pop
xorb
jp
jle
or
cwtl
xor
scas
faddp
js
and
push
pop
mul
stos
cmp
ficomps
lea
push
inc
stos
fwait
sbb
imul
xor
cmp
fsts
mov
gs
jecxz
pop
aad
ss
cwtl
sub
das
insb
mov
xchg
sbb
xchg
mov
out
add
add
jl
test
xchg
push
pop
fs
cmc
std
and
inc
ss
push
js
or
and
aam
shr
push
sbb
lret
jne
imul
test
mov
and
rcll
mov
inc
pop
cmp
inc
add
jbe
sbb
mov
test
inc
scas
in
jmp
dec
cmp
shl
push
push
fisubs
aas
push
ss
mov
fisttpll
sahf
mov
daa
ja
sbb
xchg
testb
pop
and
inc
pop
xchg
cmp
ja
jecxz
mov
call
lcall
test
or
mov
xchg
xor
gs
nop
xor
sbb
cmpsb
lods
or
fidivl
aam
and
jg
mov
pop
aaa
cs
jo
cltd
cld
mov
popf
adc
jg
subl
jmp
sbb
sahf
out
scas
add
push
testb
cmpsl
add
mov
add
xor
sarl
ja
mov
pop
testb
sub
aaa
adcb
test
push
mov
mov
fiaddl
ljmp
jmp
mov
sbb
or
nop
push
xchg
dec
cmp
jnp
enter
sbb
nop
cmpl
xchg
or
movsb
mov
lds
adc
loopne
inc
xchg
mov
sbb
push
negl
dec
add
lea
subb
popa
outsl
mov
leave
add
mul
and
scas
xchg
cld
mov
dec
jns
lahf
sbb
jb
push
xchg
pushf
aam
jbe
shlb
push
xor
or
xchg
pushl
test
into
insb
xchg
push
pop
push
repnz
nop
movsl
adc
aam
push
adc
aad
ss
adc
adc
xlat
in
push
nop
mov
ret
jne
das
push
mov
inc
std
sbb
add
push
aam
sbb
or
lds
pop
mov
mov
sahf
and
pop
fdivrs
les
rcl
push
adc
scas
xchg
xlat
lock
imul
outsl
mov
int
clc
push
mov
mov
sub
xor
jbe
in
adc
and
lret
sar
loope
fcmovb
sti
imul
xlat
imul
loopne
out
push
les
nop
bound
jae
mov
xlat
mov
xor
pop
xor
mov
sahf
or
addr16
in
ret
adc
cld
rolb
std
andb
arpl
repz
mov
out
xchg
mov
push
push
aam
decb
ds
iret
inc
add
jnp
out
std
jecxz
and
xor
cmp
lock
lret
aad
ss
or
insb
enter
or
nop
xchg
pusha
jnp
jnp
out
mov
aam
push
loopne
add
mov
pop
xchg
or
imul
mov
sbb
scas
dec
nop
dec
sti
leave
pop
stos
mov
sbb
aaa
je
or
scas
mov
xlat
dec
inc
dec
popf
daa
stc
sbb
je
mov
dec
cli
testl
arpl
repz
mov
call
test
jno
push
dec
ss
sub
subl
mov
imul
aas
inc
js
hlt
mov
shll
ja
iret
push
or
lahf
aam
xchg
push
jnp
out
jb
outsl
push
test
test
daa
sbb
mov
jae
loop
int
mov
idivl
push
jnp
mov
jbe
int3
jg
xchg
repz
out
pushf
add
mov
sbb
push
movb
dec
data16
xchg
sbb
mul
push
xlat
icebp
int
pop
out
fwait
imul
mov
cmp
xchg
pop
pushf
adc
or
or
or
aad
in
lock
stc
iret
fsts
cmp
pop
shrb
into
shll
cmc
pop
jae
cwtl
std
aad
sbb
dec
mov
pop
adc
popf
data16
sub
xchg
dec
rcll
lmsw
add
and
cmp
sbb
fiadds
ss
mov
enter
outsb
pop
cli
jb
pop
sub
nop
cwtl
bound
push
push
or
loope
cmpsl
xchg
in
lods
test
repnz
stc
jne
push
add
aas
out
lcall
nop
push
xor
movsb
lea
test
iret
adc
xchg
adc
xchg
xchg
push
jb
nop
cmpsl
mov
pop
sbb
loope
adc
sub
and
mov
add
aaa
clc
add
xor
adc
clc
xchg
dec
add
pop
mov
sub
es
xor
enter
sub
push
sub
pop
sahf
xchg
push
aas
pop
inc
jbe
xchg
aam
mov
pop
dec
shrb
dec
out
js
pop
inc
adc
loopne
or
pop
out
pop
es
xor
xchg
sbb
push
pushf
or
inc
or
push
dec
mov
scas
add
nop
cmpsl
je
or
push
adc
arpl
sub
push
inc
sti
sbb
xchg
icebp
ja
jns
repnz
add
and
aad
push
repz
push
sbb
push
dec
test
cmpsl
jnp
sub
scas
scas
or
out
push
xchg
outsb
mov
xlat
stc
mov
jmp
sub
pop
mov
push
sarl
push
scas
not
xchg
inc
pop
popa
xchg
or
fwait
cmp
stos
sbb
dec
push
hlt
dec
fisttpll
adc
mov
ret
sti
xchg
sbb
xchg
lods
pop
or
add
sbb
iret
jl
int3
mul
dec
dec
mov
adc
or
in
dec
push
dec
bnd
fnstcw
stc
jge
dec
enter
ja
add
xor
jge
sub
xchg
pop
jg
push
cmpsl
mov
inc
hlt
incb
mov
test
loope
dec
cmpsb
scas
inc
mov
xor
mov
loope
add
inc
lea
xchg
cli
push
cld
dec
in
nop
fidivl
jmp
xchg
test
xchg
rolb
dec
add
xchg
lret
test
test
jmp
lret
xor
xor
test
aaa
and
inc
push
jo
int
mov
pop
mov
jae
xor
xchg
and
daa
sub
xchg
pop
notb
movsb
jnp
xchg
popf
pop
xor
sbb
add
jo
xlat
pop
jns
fimull
insl
scas
rclb
inc
or
das
cmp
enter
aas
dec
inc
xchg
out
testb
fsin
sub
sbb
mov
xor
inc
fisubs
outsb
mov
clc
or
stc
fs
jg
in
lcall
add
inc
or
rcl
sub
ja
mov
jle
in
mov
pop
or
out
or
mov
fimull
cmp
mov
mov
scas
mov
ret
xor
jge
jne
std
push
adc
in
jmp
cmp
jnp
movhps
in
fcmovnb
dec
call
xor
js
das
ret
mov
sbb
adc
adc
addr16
ss
push
adc
mov
or
mov
push
test
fsubl
inc
adc
movsl
ss
test
xor
xor
int3
data16
lcall
xchg
adc
inc
adc
scas
push
dec
xchg
cmpsl
mov
test
fmull
test
xlat
xchg
lahf
cmp
xchg
xor
dec
jns
fs
shrl
les
and
mov
pop
out
xchg
fwait
sahf
and
lods
mov
xchg
sbb
jl
xchg
push
int
shrl
jns
mov
movsl
scas
inc
pop
outsb
and
hlt
cwtl
int
jns
mov
std
jae
sti
inc
fldt
imul
pop
mov
sbb
add
pop
dec
xchg
jns
inc
jmp
and
dec
loopne
pop
jne
jge
push
or
jbe
ds
rclb
push
scas
jmp
int3
inc
sub
mov
fildl
divb
cmp
xchg
fmuls
mov
add
movsb
aas
mov
cli
dec
ja
cmp
aas
mov
movb
and
dec
mov
repnz
sbb
add
mov
xor
xchg
jg
call
mov
xchg
inc
push
aad
fnstenv
xlat
add
imul
and
xor
outsl
fcoml
aad
aas
xchg
fs
fldt
lds
xchg
jbe
pop
xlat
adc
rorb
test
xor
push
mov
lods
or
in
jmp
push
inc
enter
xlat
jae
xchg
push
outsl
mov
nop
scas
xlat
stc
add
arpl
ja
inc
jno
cmp
xlat
mov
cmp
pop
test
ljmp
popa
jmp
aam
or
enter
dec
mov
xorb
loop
mov
xlat
sub
mov
jb
insb
mov
push
repnz
xor
lcall
dec
jns
xchg
or
out
inc
pop
xlat
outsl
adc
and
fwait
mov
mov
pop
jge
mov
repnz
adc
mov
pop
push
fldcw
ret
xchg
dec
pop
mov
mov
jmp
stos
xlat
add
jno
inc
leave
xor
cmp
loopne
inc
push
js
lret
adc
movsb
dec
ja
mov
testb
xchg
shr
add
xlat
das
xor
outsb
push
cmp
jbe
inc
ljmp
xor
movsl
popl
hlt
pop
inc
cli
push
nop
dec
adc
push
jecxz
push
xlat
imul
or
xor
gs
fcmovnb
in
dec
inc
xlat
out
inc
cld
test
icebp
cmp
xchg
dec
imul
fsubp
pop
push
sarl
leave
lahf
es
out
hlt
aas
add
fidivrs
fidivs
shl
mov
cmpsl
inc
inc
mov
xlat
std
xor
sub
push
clc
cmp
pop
scas
xchg
jg
lcall
xlat
icebp
cltd
inc
insl
mov
outsb
mov
rolb
jns
pop
xchg
jg
aam
or
fst
enter
sti
fstpt
inc
arpl
adc
adc
push
lds
dec
cld
xlat
pop
aas
in
inc
sbb
sahf
xlat
jne
sbb
fs
pop
test
and
rclb
or
lds
daa
iret
loop
pop
packsswb
xlat
imul
mov
mov
jnp
xor
inc
movsb
adc
xlat
scas
adc
fcom
subb
xchg
jmp
sub
xlat
inc
xor
cmpsl
adc
cmp
mov
mov
and
dec
add
negb
cmpsb
pop
popf
loopne
cmp
sub
out
roll
aaa
bound
inc
mov
leave
daa
sub
imul
xchg
mov
js
psrlq
lcall
xchg
cli
xlat
aas
loope
mov
xlat
adc
mov
lahf
stc
lds
ds
ret
shrb
enter
or
add
xchg
cmp
adc
cmp
push
ja
and
repnz
imul
xlat
sub
cmp
pop
sub
cmp
cs
jae
subb
xchg
mov
es
cmpsb
mov
dec
or
inc
daa
aas
addr16
insb
mov
pop
jmp
in
aad
imul
pop
cmp
fiadds
dec
cltd
cld
aad
int3
ss
outsl
lods
inc
hlt
sub
rcl
dec
jns
jecxz
fsubp
lock
or
in
push
pop
mov
repnz
cmp
out
imull
lahf
repnz
xor
pop
test
ss
sahf
cli
iret
pop
into
sti
fcmovne
leave
insb
or
push
addr16
sbb
inc
daa
xlat
jno
adc
je
pop
xlat
jo
mov
iret
push
jns
mov
xlat
pop
nop
into
imull
pop
test
mov
scas
shlw
je
sti
arpl
mov
test
sub
xlat
mov
pop
loopne
pop
adc
aad
imul
push
dec
in
jmpw
inc
push
xchg
or
push
inc
rclb
in
adc
ds
lock
popa
insb
aad
fcoml
pop
inc
sbb
adc
aaa
mov
enter
inc
jl
cmp
push
xlat
cmpb
scas
pop
push
cmp
inc
cmpsb
jae
xchg
or
shrb
xlat
xor
xchg
fstpt
mov
pop
add
std
ss
cmc
sahf
adc
arpl
xlat
daa
orb
xor
lods
sub
ret
loope
add
inc
hlt
xlat
lea
jne
cmp
insb
push
pop
pushf
pop
and
roll
push
rorl
mov
rcrb
and
push
sub
clc
xor
pop
push
lds
test
inc
lods
push
dec
int3
loop
or
xlat
sub
jb
push
or
lahf
sub
shrl
pusha
cwtl
adc
xor
xor
and
cmp
or
adc
add
cs
addr16
mov
je
movsb
out
daa
out
mov
imul
shll
and
iret
shr
aas
imul
xor
cltd
jbe
pop
int3
scas
xchg
mov
sarl
sbb
imul
push
add
sub
cmp
in
mov
xlat
dec
lds
push
mov
sub
sub
mov
mov
and
xlat
jbe
or
es
mov
addr16
mov
xlat
lods
push
adcl
imul
dec
jnp
outsb
fcoms
into
cmp
push
xlat
ret
dec
sbb
xlat
xchg
dec
out
pushf
inc
jecxz
xlat
flds
push
std
iret
daa
cltd
xchg
pop
in
sub
and
les
mov
mov
rorl
out
mov
test
jmp
xlat
xor
in
xlat
pop
sub
icebp
lods
sub
sub
imul
mov
fistpl
xlat
sub
jmp
xor
cmpsl
xlat
dec
negl
xor
mov
sbb
movsb
call
mov
xlat
pop
xchg
inc
cmp
xor
and
je
jmp
jo
xlat
pushf
cld
jp
xor
push
xlat
mov
pop
xor
sbb
in
ret
sahf
popa
sub
int
out
aam
sbb
mov
add
adc
mov
mov
lret
xlat
test
xor
ret
xlat
inc
or
adc
and
dec
or
mov
shlb
xor
aam
jp
add
xchg
loope
sub
xlat
and
lret
mov
lahf
xlat
sub
pop
mov
mov
xlat
js
jo
mov
arpl
fwait
pop
sub
stos
ffreep
xlat
sbb
dec
ja
frstpm(287
loop
dec
icebp
cmp
sbb
pusha
jae
imul
cmp
xchg
popa
mov
inc
mov
test
xlat
clc
je
push
mov
jo
push
and
inc
push
xchg
pop
jne
mov
popf
sahf
pop
xchg
xlat
clc
push
das
repz
push
fucomi
cwtl
idivl
mov
jnp
inc
test
xlat
push
mov
add
dec
pusha
sub
jns
fiaddl
fimuls
in
stos
push
in
rcrl
adc
jp
jb
pop
dec
out
jecxz
xor
inc
xlat
pop
mov
jmp
or
mov
mov
dec
rorb
pusha
lock
xlat
jns
cmpsb
sahf
dec
mov
lahf
sub
int
mov
lcall
fidivrs
xor
pop
insb
mov
pop
test
cld
arpl
lahf
repnz
jo
aas
mov
cmpsl
jo
lea
je
rorl
pop
js
call
fldl
sub
aas
test
sti
xlat
or
xor
daa
sub
inc
xlat
test
clc
mov
loop
mov
pop
mov
xchg
sub
inc
fimuls
adc
int3
mov
xlat
or
rorb
push
xor
lcall
rcl
scas
xchg
mov
pop
cmpsb
add
add
pop
rorb
test
jo
adc
mov
xor
cld
cmc
dec
push
jno
int3
jb
stc
inc
push
jg
mov
rorb
dec
mov
in
push
frstor
fcompl
movsb
mov
push
inc
xlat
lods
mov
add
xchg
adc
fldt
mov
stos
rorb
or
sbb
lahf
ja
in
cmp
test
fcom
pushf
jl
fdivrl
mov
dec
jno
roll
add
lret
xlat
dec
shrl
or
sbbb
xlat
stos
add
jae
adc
xchg
pop
das
xor
xor
push
push
push
jb
inc
pop
inc
dec
xor
shll
icebp
mov
sbb
and
rclb
aam
in
pop
inc
cld
fs
aas
int3
sbb
shll
addr16
inc
adc
iret
popl
stc
ret
mov
xor
lret
mov
mov
or
sbb
mov
push
xchg
xlat
sub
je
jge
test
adc
data16
jnp
popf
insb
negb
fyl2x
lds
daa
lahf
les
scas
mov
cmp
xlat
aas
xor
pop
xor
rol
pop
enter
aam
ss
lcall
mov
sub
int
cltd
pusha
popa
mov
lea
or
outsl
cmpsl
loopne
mov
mov
ljmp
adc
adc
cwtl
add
and
mov
sbb
test
aaa
rcrl
mov
adc
mov
xchg
cmp
jmp
xchg
jne
xlat
push
sub
push
into
icebp
cwtl
scas
les
rcll
dec
lret
xor
and
xlat
push
mov
lcall
enter
xor
mov
adc
dec
add
popa
mov
mov
mov
push
inc
ret
dec
js
xor
xchg
lods
ja
push
cltd
in
test
cli
mov
pushf
daa
fdivrl
pop
mov
push
mov
pop
sbb
nop
dec
lods
mov
push
mov
xlat
xchg
and
sub
and
test
inc
adc
jo
pop
and
mov
cmpsl
lret
nop
or
out
push
aaa
add
sub
nop
lcall
mov
nop
inc
lret
jae
or
cmp
push
enter
insb
std
sbb
jmp
stc
pop
stos
iret
nop
in
stos
mov
add
ror
in
nop
xor
add
idivl
xchg
push
adc
mov
cmp
cmpsl
lahf
mov
data16
dec
push
add
push
je
jmp
dec
in
ret
ss
pushl
push
adc
adc
jns
out
cmp
lret
xor
repnz
mov
push
in
mov
les
xchg
pop
gs
jecxz
arpl
jle
in
lret
inc
dec
int3
test
aam
shll
add
jns
xor
data16
jne
dec
sbb
outsl
xor
or
push
inc
mov
into
adc
fs
xchg
es
lcall
ljmp
cmpsb
mov
push
andl
adc
push
xlat
mov
adc
mov
fsubl
sub
push
and
cltd
dec
rolb
pop
cmpsl
inc
mov
mov
jbe
inc
lahf
sbb
scas
mov
push
mov
aam
imul
fld
inc
sub
popf
mov
loope
xor
ficoms
stos
fimuls
scas
jmp
mov
jnp
and
jp
sbbb
mov
fs
mov
push
push
jne
cmp
sub
push
test
aas
sub
lock
in
repnz
nop
sub
rorl
mov
adc
roll
insl
ss
lahf
cmp
fidivl
lret
int
mov
mov
lock
add
xchg
sahf
xor
shll
shl
lahf
fxch
mov
or
in
mov
ficoml
xchg
loope
dec
pop
jbe
xchg
mov
jae
dec
or
cmpsb
jmp
xchg
daa
xchg
int3
stc
into
cmpsl
and
and
insl
mov
or
aas
xor
rcll
in
sub
pop
rcll
mov
xchg
data16
xchg
dec
sbb
inc
outsb
push
rcl
ret
test
mov
mov
mov
in
push
push
mov
push
sbb
xchg
cwtl
out
mov
ja
lea
repnz
push
shrb
test
nop
ljmp
jne
xchg
movsb
loope
fildl
cmpsb
mov
adc
ja
push
xlat
push
mov
sub
ret
and
xor
ss
aam
xor
test
sbb
andl
xchg
xchg
cwtl
lea
lods
outsb
and
bound
add
mov
xor
jp
jmp
int
xchg
test
lcall
lcall
xlat
sbb
sahf
xchg
pop
jno
xchg
aas
sub
xchg
sub
ret
push
test
mov
sub
in
lea
into
mov
sub
add
rclb
mov
into
in
jp
fwait
jge
lea
jg
xchg
dec
mov
mov
mov
xchg
and
sub
pop
add
inc
cmpsb
mov
jge
mov
lea
test
test
stos
test
imull
mov
scas
loopne
out
pop
xlat
sbb
push
mov
pop
ficomps
mov
popa
inc
dec
xlat
xchg
aam
cmpsl
push
aas
nop
mov
nop
mov
adc
pop
mov
xchg
aas
jl
mov
xor
pop
mov
test
push
imul
xchg
leave
adc
ret
and
ja
add
gs
jg
mov
push
rcrl
sbb
mov
xchg
fwait
cmp
xchg
mov
mov
inc
mov
mov
xchg
xlat
nop
in
fadd
pop
sar
add
loop
scas
sti
pusha
mov
adc
jg
xchg
or
cmp
adc
pop
sub
ficoms
enter
test
mov
aas
sbb
jp
ljmp
jns
iret
scas
cli
and
push
mov
dec
mov
cmp
xor
aaa
cmpsl
xchg
mov
test
push
inc
out
sub
gs
mov
dec
xor
xchg
insl
push
inc
push
shll
fidivs
jl
push
inc
jmp
shrl
lret
xchg
fstpl
mov
pop
xchg
into
test
mov
sbb
add
push
out
dec
add
xor
xchg
stc
jno
ja
nop
xchg
daa
xchg
scas
fdivrs
imul
fldcw
lods
mov
je
ret
lret
aas
sub
lods
cmp
inc
push
mov
jnp
push
dec
jge
dec
cmp
mov
adc
in
aam
in
adc
push
sar
ret
ficoms
add
pop
jle
adc
dec
pop
xor
jno
lea
rclb
scas
mov
sbb
imulb
inc
jecxz
add
push
ja
push
jns
jg
fdivrl
adc
mov
cli
ljmp
xor
and
sbb
mov
mov
push
push
sub
cmp
std
xor
test
std
inc
enter
sbb
les
mov
sbb
mov
push
xchg
add
sbb
pop
aad
add
adc
push
das
sbb
cmp
sub
jg
sub
inc
xlat
cmp
mov
mov
jnp
je
aas
mov
das
push
pop
repz
scas
adc
aad
push
add
pusha
push
ljmp
aam
fs
out
fistpl
orl
stos
sbb
test
pop
jl
mov
inc
ror
cmp
mov
ss
or
or
sahf
aas
movsl
dec
bnd
les
bound
or
jecxz
cmp
cmp
rcll
xchg
pusha
mov
or
mov
fdivs
or
ljmp
sub
xchg
divl
out
push
aas
cltd
mov
lret
mov
jecxz
lock
mov
aaa
xchg
imul
jl
xor
jo
lret
push
push
aas
adc
xchg
mov
sarl
adc
dec
cmp
inc
lock
call
ja
push
je
sub
insl
repnz
mov
pusha
xchg
mov
add
int
or
lods
sahf
in
cmpsl
lock
xchg
jb
xlat
push
leave
sbb
iret
adc
fwait
shll
repz
adc
and
imul
outsb
es
pop
repnz
jns
xor
push
les
jnp
xchg
adc
rclb
push
xchg
push
or
cmp
xchg
xor
jno
test
jnp
dec
or
stos
xor
scas
sbb
fsts
mov
cmc
xchg
outsb
mov
sub
ficoml
inc
sbb
iret
cli
adc
pop
aad
mov
fistpll
ja
pop
mov
cmp
cmpsb
out
jl
mov
sbb
imul
dec
sbb
add
dec
push
sub
aaa
hlt
or
cmp
and
cmp
ja
inc
pop
pop
mov
jecxz
lods
jb
loop
or
ja
xchg
pop
jb
loop
scas
mov
cmpsl
xchg
ja
adc
inc
lods
or
xchg
jno
mov
nop
dec
iret
pop
ret
xchg
call
cmp
nop
popf
xchg
and
xchg
ret
repz
lds
inc
push
xchg
push
pop
push
rcrb
popf
or
fsubrl
nop
cmp
mov
adc
mov
out
and
aas
cmp
xchg
mov
adc
iret
xchg
sbb
mov
dec
xor
outsl
mov
push
shr
out
and
jae
inc
mov
mov
pop
jo
iret
mov
cltd
xlat
clc
in
sbb
mov
jns
push
imul
cmp
xchg
jg
adc
lods
or
mov
nop
jbe
push
mov
cmp
mov
ja
sbb
xor
xlat
add
imul
sahf
cmp
dec
or
pop
xchg
ljmp
adc
cmpsb
aas
pop
sbb
int
adc
hlt
aad
int3
int
std
cmp
pop
xchg
push
aam
mov
sub
xchg
add
aad
pop
cli
jle
xor
and
jbe
addl
repnz
mov
arpl
push
pop
sarl
jae
inc
push
sbb
and
iret
repnz
jbe
mov
jae
aad
rclb
jle
stos
dec
xchg
aas
push
stos
mov
in
xor
xchg
into
test
in
pop
and
sbb
scas
mov
loopne
push
pushf
xchg
mov
push
addl
popf
cltd
shrl
lahf
nop
pushf
fs
jle
push
or
shlb
xchg
pop
mov
lods
push
mov
inc
mov
nop
sub
leave
and
rolb
ret
jge
lahf
xchg
rcl
das
push
and
add
inc
inc
mov
pop
fldcw
int
push
jne
mov
pop
pop
mov
ret
pop
and
iret
dec
xchg
ja
lahf
pop
cmp
add
jno
jmp
mov
mov
sub
mov
in
outsb
aam
adc
bound
push
in
aam
mov
or
xchg
div
shrl
xchg
adc
mov
or
inc
fnsave
sbb
imul
mov
shlb
leave
mov
shr
and
jmp
out
xor
inc
ja
sbb
cmpsb
in
jmp
xor
mov
add
add
pushf
and
aam
lds
mov
dec
scas
cmc
sub
pusha
pop
fld
ret
in
fcoml
jle
or
sub
xchg
cmp
out
pop
leave
loope
popf
sbb
dec
sub
movsl
inc
shl
sbb
inc
mov
xor
leave
nop
pop
push
lcall
mov
pmulhw
dec
insl
nop
mov
xchg
in
pusha
lds
pop
xor
sahf
xchg
movsl
xlat
pop
add
ja
iret
testb
sub
movb
jmp
repz
movsb
lahf
outsl
incl
test
sbb
repz
or
pop
call
adc
push
sahf
and
lahf
flds
mov
aaa
nop
les
mov
in
lcall
lods
xchg
pusha
xor
sub
add
pop
pop
push
test
data16
xchg
lret
stc
push
jecxz
mov
mov
inc
addr16
inc
mov
pop
push
cmp
push
sub
push
xlat
lret
dec
jmp
addl
shrl
mov
cmp
push
int
and
gs
test
cltd
fmull
mov
cmp
int
adc
sbb
mov
jno
clc
xchg
sbb
and
sbb
push
ljmp
inc
rol
sub
sub
mov
insb
out
push
imul
xchg
ffreep
mov
mov
mov
cmpsl
or
xchg
adc
daa
por
push
cmp
subl
mov
or
adc
scas
into
push
ja
xacquire
dec
loope
aas
mov
mov
sub
xchg
jno
mov
xchg
icebp
or
pop
push
push
mov
push
or
mov
sbb
mov
lret
mov
xchg
adc
inc
or
ficoms
mov
sub
popl
out
pop
xor
lahf
mov
add
repz
pop
adc
ficoms
pushf
jg
mov
push
add
mov
movsb
scas
cld
aad
pop
inc
lret
adc
or
rcll
call
sub
xorb
nop
push
lret
cli
test
and
lret
ja
ficoms
pushl
cmp
xor
iret
xchg
mov
shrb
push
and
stc
sub
add
xor
xchg
xor
inc
sarl
psraw
push
jmp
imul
into
xchg
hlt
aam
out
jo
mov
sbb
jl
jnp
in
xchg
ljmp
lret
mov
jl
cs
ret
push
lret
into
cli
in
jecxz
xchg
jbe
iret
xchg
jl
sub
aam
in
sbb
dec
aad
les
xor
xchg
fiadds
push
std
cmp
into
insl
push
loop
sbb
icebp
outsb
push
or
repnz
pushf
jg
enter
std
cmpsl
inc
imul
dec
pusha
lret
inc
iret
and
std
sub
adc
adc
repnz
or
mov
xchg
nop
xor
stos
gs
mov
mov
lea
pop
out
stos
xchg
mov
xlat
fdivrl
inc
cmp
nop
into
lcall
sub
xor
jg
adc
xchg
fisubl
mov
nop
sub
sarl
jmp
rcrb
push
push
mov
mov
movsb
add
mov
insl
cld
push
adc
lcall
rolb
xor
push
xor
jge
test
fimull
mov
lret
test
mov
xchg
jmp
jmp
nop
cld
sti
cmc
sbb
cwtl
pop
inc
dec
loope
addr16
inc
call
jnp
add
add
movsb
xor
cmp
fsubs
mov
lret
in
cs
loopne
push
dec
push
pusha
cpuid
out
repz
dec
jp
xor
mov
fstps
leave
lods
popf
mov
xchg
jmp
jg
scas
insl
push
pop
nop
mov
adc
mov
dec
cs
leave
push
pop
mov
lea
xchg
lahf
mov
outsb
hlt
out
xchg
jnp
ljmp
cmp
arpl
movsl
clc
xchg
and
bound
adc
lret
push
in
ret
xor
shrl
mov
mov
push
loop
ficompl
push
leave
testl
xchg
sub
push
ljmp
push
int
push
pop
and
pop
cmp
mov
xrelease
inc
rcll
push
mov
dec
out
and
sahf
subl
repnz
in
imul
mov
jmp
leave
outsb
mov
push
mov
sub
jge
xchg
mov
add
popf
add
addl
pushf
jmp
pop
xchg
mov
fxch
sbb
lea
and
sub
pop
loope
inc
fsts
lds
mov
movsb
or
in
loope
fs
mov
stos
push
stc
vmread
mov
and
mov
mov
rsqrtps
add
mov
mov
lods
push
cmp
pop
cmpsl
leave
cmp
mov
int3
fidivs
jmp
daa
jecxz
or
mov
sub
mov
cmpsl
out
pop
jnp
in
enter
inc
iret
xchg
dec
sbb
cmp
imul
xor
addb
push
jne
aad
inc
pop
push
fnstsw
jbe
cmp
scas
decl
lods
jge
ror
imull
add
mov
xor
xchg
xlat
sahf
xor
xlat
idivb
hlt
or
in
fwait
shrl
push
sbb
dec
iret
loopne
mov
add
xchg
mov
sub
adc
shll
sub
xchg
aam
mov
aam
aad
lret
push
sub
xlat
jge
mov
sbb
mov
out
ret
sub
lahf
rep
and
sbb
mov
dec
data16
pushf
add
push
not
ror
inc
jns
jmp
pop
fsubrl
xlat
int3
popf
ret
cmp
rorb
mov
and
xchg
into
push
add
les
shlb
popa
xlat
fldenv
test
fists
enter
pop
sbb
divb
xlat
inc
sub
popa
cmc
repnz
mov
push
mov
or
adc
push
setg
fwait
mov
dec
add
sbb
xchg
hlt
dec
mull
xlat
lods
sub
jmpw
mov
test
xor
jg
iret
out
jne
jecxz
in
rcr
test
insb
lcall
jmp
aad
cltd
jno
push
xlat
ljmp
arpl
push
jg
xlat
mov
mov
xlat
mov
adc
pop
pushw
xchg
mov
sbb
add
gs
pop
push
mov
mov
xor
dec
push
jo
xlat
shll
mov
mov
add
sbb
jno
mov
mov
xlat
pushf
cld
xchg
mov
enter
push
adcl
loope
test
xlat
lahf
cmp
pop
ss
jb
aam
mov
sub
test
xchg
imulb
sar
mov
cwtl
test
xlat
aad
mov
inc
ljmp
cmp
push
cmp
xchg
idiv
aad
pop
imul
mov
xchg
nop
cmp
pop
call
mov
loope
rcll
sub
inc
ret
xchg
aam
sbb
int
lahf
push
aas
sub
mov
in
ljmp
push
fwait
jecxz
mov
lock
mov
data16
push
aad
nop
jg
and
stos
cmpl
jno
add
inc
jb
pusha
out
scas
rcl
decl
cmc
sub
push
fidivrs
mov
jg
stc
jmp
push
or
iret
dec
inc
into
in
data16
fs
jbe
and
fst
xor
rcrl
mov
sbb
push
repnz
jae
jnp
sbb
xchg
in
mov
dec
cld
jbe
push
mov
pop
xor
dec
inc
popf
and
int3
mov
lock
mov
cmpps
pop
ret
and
notl
insb
mov
add
adc
sti
lods
rol
jmp
roll
movsb
sbb
orb
inc
iret
aad
lea
dec
fiadds
cwtl
sbb
lods
xchg
xor
std
xchg
insb
mov
or
dec
mov
push
jbe
out
sub
pop
mov
mov
or
test
push
outsb
pop
or
ret
cmpsl
in
push
mov
xor
and
mov
out
adc
out
jnp
xor
xor
sub
fcoms
mov
pop
jle
mov
mov
mov
jbe
mov
ja
sub
push
push
push
nop
scas
loope
push
inc
dec
dec
mov
shr
inc
ss
fdivrl
es
ljmp
inc
and
repz
in
xor
add
out
mov
xchg
jg
sbb
mov
mov
js
loop
mov
cld
ss
sahf
enter
cmc
mov
jle
inc
insb
lods
mov
jo
mov
inc
sbb
push
mov
scas
stos
or
fsubs
mov
pusha
xchg
xor
shlb
mov
or
testb
gs
inc
jp
sub
scas
sbb
shrl
mov
fnstcw
or
test
test
push
or
imul
or
out
xchg
inc
cmc
fisubs
mov
pop
xchg
cmp
xor
cltd
fs
adc
pop
int
mov
flds
leave
aad
sbb
add
fmull
mov
cmc
daa
nop
jecxz
inc
popf
aaa
fists
xchg
sbb
xchg
fidivs
ficompl
pop
push
inc
ret
pop
push
inc
mov
test
adc
xor
sub
add
lahf
ds
in
mov
mov
jge
sub
xchg
dec
aam
sbb
loope
aad
arpl
daa
sar
pop
cmp
nop
sbb
adc
bound
mov
jp
adc
xor
pop
push
imull
mov
mov
and
les
je
mov
int3
cmp
rcll
dec
dec
inc
cmpsl
mov
cmp
repz
push
xor
mov
cmpsl
in
mov
lods
scas
jnp
into
bound
cld
sub
mov
mov
nopl
rorl
lds
cmp
mov
dec
mov
dec
adc
inc
lahf
xchg
and
jle
lds
push
mov
mov
aam
pop
mov
dec
and
in
mov
add
push
lcall
daa
idivb
add
push
in
jns
pop
mull
jnp
fadds
daa
dec
xchg
jg
fdivrl
out
loopne
mov
cwtl
fcmove
add
sub
int
pop
daa
jnp
dec
mov
jno
adc
repz
xor
jnp
and
daa
sbb
int
nop
in
sarl
dec
mov
inc
sub
push
jns
xlat
cmpsl
mov
jp
nop
push
mov
scas
rcl
pop
or
mov
dec
push
loop
test
jl
jmp
mov
ljmp
inc
cmpsl
arpl
scas
jl
je
pop
adc
mov
adc
nop
inc
lock
imul
or
in
test
mov
fs
bound
sbb
lahf
cmp
push
ret
aam
push
and
pop
lea
nop
adc
test
sbb
fimull
enter
cmp
testb
icebp
orb
popa
push
movsb
cmp
mov
and
fldl
jl
adc
mov
or
aad
xchg
xchg
or
sbb
gs
fmull
jg
dec
in
mov
loop
xor
push
xchg
aad
pop
iret
ljmp
leave
aam
mov
nop
out
mov
xchg
lock
xor
dec
inc
aam
jbe
mov
cmp
test
aam
xchg
mov
adc
cmpsb
push
push
aam
adc
mov
test
mov
loope
push
jl
push
in
jne
sub
inc
inc
push
inc
ret
inc
popf
roll
add
sub
fldl
test
sub
sub
popf
push
mov
jns
jg
pop
add
push
pop
sbb
ja
cld
test
cmp
ficoms
xchg
xorl
xchg
sub
nop
inc
test
adc
xchg
sbb
fistl
enter
inc
and
mov
ret
xor
cld
aad
pop
xorb
je
xlat
add
xchg
sbb
inc
sbb
repz
hlt
aam
jno
and
inc
mov
cmpb
jp
out
jl
mov
pushf
sub
add
test
and
inc
mov
sub
dec
and
inc
adc
xchg
adc
xor
pop
shl
lods
aam
inc
mov
adc
mov
cmpsl
orb
ja
nop
mov
js
mov
adc
mov
push
adc
fdivrl
movb
xlat
xor
mov
push
jnp
sbb
add
test
mov
cmpsl
cmp
leave
daa
outsb
fadd
ja
pop
jg
ljmp
hlt
mov
jno
gs
xchg
cwtl
lahf
sbb
xchg
cmp
sahf
pop
push
mov
xlat
imul
sub
jge
sub
in
jo
ss
mov
lret
daa
dec
xchg
loopne
arpl
scas
lret
cmp
add
xchg
stos
or
jl
lods
out
fdivl
inc
out
enter
jbe
fists
push
mov
adcl
sqrtps
inc
in
ss
test
adc
stos
outsb
les
jne
adc
jg
or
sub
aam
push
xchg
fmuls
mov
sbbl
nop
sbb
rcl
lock
jge
add
scas
dec
dec
loopne
lea
and
mov
jle
daa
inc
insb
dec
adc
pop
cmc
fdivrl
cmpsb
pop
adc
and
pop
sbb
cmp
add
lret
out
and
mov
inc
mov
mov
orl
out
jbe
ja
sub
mov
mov
xchg
sbb
cmpsl
test
push
dec
gs
pop
pop
les
lret
cld
jge
fcoms
cmp
mov
inc
push
leave
xchg
or
bound
sub
add
aaa
mov
sub
inc
fs
out
aas
jmp
cs
dec
add
add
mov
push
xchg
fnstcw
fwait
mov
mov
mov
mov
iret
cmpsl
hlt
jle
jge
test
jg
xchg
jp
xor
repz
push
test
test
xor
mov
ret
pop
dec
cmpsl
test
std
mov
aaa
sbb
mov
sbbl
lods
pop
sti
push
int3
cmp
scas
rol
mov
xchg
arpl
lds
hlt
sahf
xchg
movsb
push
cmc
cmp
shl
pop
stc
fidivrl
out
movsl
mov
and
sahf
flds
jle
push
ret
xor
daa
lcall
pushf
xchg
icebp
cmp
cmpsb
xlat
fisubs
cmp
xor
push
cmp
push
imull
daa
add
arpl
xor
loope
stos
xlat
xchg
std
or
out
cmpsl
fildll
sarl
loope
fs
lahf
fsubs
adc
rcl
cmpsb
inc
neg
push
dec
xlat
mov
cmp
jle
cld
aam
sti
ret
push
push
aaa
cmp
dec
push
xlat
push
jle
sbb
les
jg
pop
out
xlat
or
xlat
cltd
ljmp
cmp
sub
and
and
cli
and
sbb
mov
sub
rorb
stos
es
iret
xlat
xchg
jg
xlat
imul
pop
xchg
sbbb
push
add
dec
mov
xchg
mov
add
addr16
push
out
sbb
in
xchg
inc
adc
popa
push
pop
push
sbb
dec
xor
inc
mov
xor
in
mov
loopne
push
or
push
bound
psraw
jle
sbb
jle
jge
push
or
inc
push
ss
or
std
jmp
cld
stc
out
aam
jns
call
cmpsl
aad
cli
cmpsb
xor
xchg
aam
sbb
or
pop
jge
lea
mov
jns
add
mov
add
inc
aad
inc
shlb
jnp
or
mov
jb
movsl
scas
in
mov
jnp
xchg
or
mov
inc
push
sbb
fcmovnu
ds
mov
fs
xchg
test
inc
inc
xchg
in
mov
mov
pop
ret
pop
adc
int3
mov
fisubs
jge
iret
jecxz
leave
nop
idivl
stos
add
pop
jne
icebp
shlb
aam
pop
xchg
cli
ljmpw
mov
xor
mov
int3
stos
jns
mov
fcomps
lods
adc
stc
lret
push
pop
lods
out
iret
fcom
adc
cmp
and
mov
mov
std
adc
pop
outsb
loope
push
in
aam
sub
and
adcl
fldl
std
hlt
jbe
aaa
loop
fcmovu
push
rcll
adc
bnd
into
mov
jnp
sbb
loop
aam
sub
adc
pop
add
aam
inc
lods
popa
sbb
mov
lcall
sub
les
push
mov
pop
in
adc
pusha
sahf
das
or
sbb
cmp
cmp
test
mov
push
stos
and
and
pusha
mov
mov
mov
jo
sbb
test
stc
jmp
in
cmp
jp
mov
and
xor
mov
pop
inc
sub
jnp
out
int3
mov
push
mov
xor
jno
lds
jne
mov
icebp
adcl
xchg
pop
aam
cltd
pop
shl
jnp
mov
cwtl
adc
daa
ud1
inc
testb
addr16
xchg
jmp
divb
aaa
jns
adc
movsb
cli
aad
xlat
fcoms
stos
inc
mov
jno
jns
imul
icebp
iret
xlat
push
mov
call
mov
adc
or
add
scas
push
pop
in
xor
shrl
outsl
movsb
pop
pop
xlat
xchg
out
fdivs
push
xlat
mov
test
repz
loope
xlat
cmc
mov
fidivs
test
xor
xlat
out
movsl
imul
jmp
jno
jb
in
enter
mov
jae
dec
mov
xor
outsb
mov
int
scas
push
iret
jns
orb
sbb
mov
cmp
or
call
cmp
in
inc
xlat
mov
test
test
dec
lret
cmova
ror
faddl
testl
roll
std
sbb
dec
andl
xlat
fisubrs
cmp
xlat
inc
push
orl
fwait
jmp
push
and
sbb
addr16
push
pop
mov
outsb
ds
xlat
roll
lahf
sarl
add
out
in
mov
add
sahf
or
insb
or
into
int
xchg
div
leave
out
mov
in
jno
and
call
scas
je,pn
jp
pop
jne
mov
mov
xchg
push
push
icebp
xchg
lods
lcall
pop
adc
or
sahf
mov
mov
add
lahf
gs
loope
pop
sub
xor
xlat
xchg
mov
lods
dec
xlat
fstl
cwtl
xlat
dec
jp
movaps
jnp
xlat
mov
fldenv
jle
mov
lock
or
cmp
lods
dec
xchg
xchg
mov
sub
sbb
pop
out
pop
rcl
fwait
push
test
xlat
int3
aad
jne
cmp
fstl
xlat
gs
jecxz
jmp
std
xlat
jo,pt
cmpsl
stc
xor
int
outsb
xor
cli
push
xchg
sbb
jmp
in
cmp
cltd
push
shrl
push
movsb
scas
cmpsb
xlat
sub
pushf
xchg
iret
inc
test
iret
xchg
push
xchg
fistps
leave
ret
testb
xlat
push
cltd
xor
xlat
pop
mov
pushf
outsb
iret
test
jns
mov
xlat
mov
or
scas
mov
rcll
test
fstl
push
popa
aam
jno
pop
mov
lock
cmp
cmc
cwtl
loop
cld
mov
scas
fcmovnbe
pop
mov
jb
adc
jb
frstor
sti
es
mov
cmp
movsl
jp
sub
add
and
fwait
aad
jge
or
xlat
cmp
inc
bound
xor
dec
push
dec
stos
xlat
loop
mov
dec
adc
or
js
aam
int
icebp
in
or
mov
in
cmpsb
shrl
in
push
sti
jl
dec
popa
jbe
mov
dec
sbb
xlat
pop
int3
xchg
iret
dec
fisttpll
pop
je
mov
rcl
sbb
cmp
ret
pop
and
jmp
std
cmp
repz
sar
hlt
xlat
mov
inc
imul
out
xlat
push
repz
inc
xlat
lds
fldcw
xlat
add
jno
jns
dec
inc
out
jmp
aam
popf
cmpsl
lahf
xlat
and
push
mov
les
pop
xchg
shl
cwtl
xorb
mov
call
mov
xlat
inc
fwait
out
jmp
xchg
rcrl
pop
in
xlat
mov
fwait
out
loopne
inc
js
icebp
dec
mov
addr16
jge
mov
push
rcll
mov
mov
test
xlat
mov
out
jb
loopne
xor
scas
into
jp
icebp
mov
fxtract
push
out
mov
xchg
ja
xchg
jecxz
xlat
mov
mov
xchg
xor
clc
ficoml
dec
xlat
jbe
bound
xchg
add
aam
sub
insl
and
jbe
push
roll
and
adc
fwait
rorl
xlat
sub
shr
xlat
mov
adc
das
out
adcl
aam
je
iret
adc
pushf
decb
jnp
rcrb
push
shrl
hlt
push
leave
xlat
jmp
push
iret
insl
lds
push
sahf
jo
mov
cmp
sti
roll
xlat
ds
ret
cmp
jns
out
push
lret
rol
mov
add
lahf
jne
outsl
js
push
fisubs
pop
xchg
sar
xor
in
xchg
lahf
xlat
sub
xlat
in
push
xchg
sbb
add
jl
inc
rcrl
jne
cwtl
pop
sbb
xlat
mov
sbb
xlat
out
inc
or
xchg
xor
xor
jl
jmp
shll
xlat
xor
jb
and
scas
pop
iret
ret
ja
cmc
aaa
xlat
adc
sub
cli
mov
pop
aam
mov
mov
test
pop
aad
stos
lcall
jecxz
aad
sub
daa
xlat
arpl
push
adc
mov
sub
loopne
out
xlat
push
fs
jns
xlat
ficoms
or
and
inc
ror
adc
fwait
sub
rorl
lahf
xchg
push
sub
arpl
mov
xor
adc
adc
movsb
xlat
fisubl
das
test
sub
push
adc
xlat
dec
add
jno
push
cmp
in
ds
xchg
push
pop
adc
adc
hlt
push
jl
adc
adc
pop
sbb
xlat
jl
mov
dec
in
push
cmp
aas
rcrl
mov
lods
xlat
fnstcw
push
jmp
movsl
adc
and
in
aaa
adc
xlat
mov
and
inc
or
and
add
xlat
out
rorb
inc
test
sbb
mov
aam
xchg
popf
mov
or
mov
and
dec
xor
push
jl
xlat
ds
mov
xlat
sbb
push
xlat
mov
pop
cmpsb
cwtl
pusha
adc
lock
mov
xlat
push
push
jns
sub
xlat
sbb
inc
in
xlat
dec
fimuls
pop
rorb
pop
sub
xlat
mov
into
pop
xor
scas
lds
rorb
mov
add
sub
xor
mov
mov
push
fwait
mov
push
push
daa
push
inc
xlat
or
dec
sbb
jae
lret
jno
loope
adc
ss
scas
fisttpll
pop
inc
iret
ret
lret
insb
mov
push
mov
xlat
push
add
xchg
xor
or
sbb
jg
push
jbe
lods
sub
cmp
and
jp
or
xlat
or
mov
inc
xor
cmp
cmp
and
cli
mov
mov
adc
sbb
sub
xlat
movsb
test
push
in
insl
mov
pop
test
aad
dec
arpl
xlat
mov
mov
mov
and
sub
ljmp
mov
ja
mov
stos
and
xlat
push
dec
daa
ds
pop
mov
cmpsl
jmp
adc
out
mov
das
pop
inc
sbb
push
and
mov
cmpsb
push
sbb
xlat
mov
div
adc
leave
test
enter
cmp
pop
sbb
mov
pop
imul
xlat
mov
pop
xlat
je
xchg
cmpsb
ret
repnz
movsb
and
adc
xchg
insb
mov
aas
adcb
mulb
inc
mov
lahf
imul
adc
daa
or
mov
dec
js
pop
push
adc
frstor
stos
add
pop
and
sahf
enter
dec
cmpsb
push
xlat
jnp
dec
and
and
fdivrp
jp
arpl
mov
out
stos
or
ja
std
gs
roll
mov
pop
xlat
cmp
sahf
push
movntps
sbb
je
and
sub
cmpsl
xlat
gs
xor
cmc
sub
fmul
add
mov
dec
or
aas
imul
push
call
aaa
xchg
sarb
xchg
mov
loop
je
movsb
test
adc
fadds
cwtl
das
mov
daa
pop
jecxz
and
pop
push
int
rclb
fcoml
mov
sub
dec
out
or
daa
ja
stc
lahf
mov
mov
xor
mov
jg
shrl
leave
dec
stos
and
cmp
add
jp
xchg
rcl
cmc
rol
xor
xchg
and
outsl
nop
mov
pop
dec
fld
into
push
sbb
test
cmp
mov
xchg
ret
mov
fcoml
test
mov
xorb
and
scas
or
sbb
adc
pop
stc
leave
in
mov
sbb
roll
mov
mov
pop
pop
jae
and
fisttpll
mov
mov
mov
xor
nop
push
sub
scas
gs
jecxz
ja
mov
mov
dec
xchg
rcrl
xchg
push
nop
lahf
popa
or
push
mov
push
jmp
pop
cmpps
and
cmpsb
mov
jge
cmp
inc
cmpsl
fimull
clc
jbe
aaa
push
ret
shr
ljmp
mov
cs
inc
jns
jl
and
mov
adc
add
push
ficoml
cltd
inc
scas
scas
test
push
dec
pop
ljmp
mov
xchg
adc
xchg
mov
sarl
xor
hlt
imul
inc
mov
flds
dec
shll
out
int3
pause
jnp
xor
loope
stos
mov
sbb
mov
add
dec
lock
cmp
xchg
nop
pop
inc
mov
test
cmpsl
mov
fildll
cmpsb
out
scas
ja
aam
add
movsl
negl
or
xlat
imul
fsubs
pushf
sub
jo
iret
fsts
adc
loopne
add
pop
aas
das
sbb
inc
lcall
call
mov
imul
or
mov
push
cmp
pop
cmp
push
sti
bound
cli
inc
inc
cmpsl
dec
mov
icebp
popa
fidivl
loopne
adc
iret
pusha
or
push
sbbb
data16
lret
cmp
dec
movsb
mov
push
jle
adc
mov
push
adc
xor
jg
sarb
in
pushl
gs
xchg
push
out
rcrl
mov
push
push
and
addr16
sbb
or
and
lret
adc
movl
and
mov
scas
or
cmp
int
and
in
mov
outsl
push
mov
mov
push
xor
mov
gs
test
sbb
roll
sbb
nop
pushl
clc
jae
lock
sub
xchg
fcmovnbe
jbe
nop
test
xor
inc
cld
push
dec
emms
repnz
pop
push
leave
sbb
and
jg
mov
les
das
xchg
pop
shr
leave
pop
mov
cmp
add
aad
cmp
add
stos
mov
outsl
dec
jmp
repnz
imul
adc
scas
inc
data16
adc
push
inc
sub
pop
mov
gs
mov
lret
mov
cmc
mov
imul
mov
sbb
or
jb
mov
jbe
in
call
xchg
nop
cmpsb
lret
jnp
hlt
ret
inc
sbb
or
inc
pop
pop
inc
icebp
hlt
inc
sub
in
rcll
in
cmp
push
lret
inc
cmpsl
xor
xor
pop
jl
xchg
xor
xor
mov
dec
or
icebp
xchg
jbe
jno
arpl
cmpsl
sbb
jne
int
dec
mov
jge
adc
into
rcrb
pop
xchg
daa
dec
push
sub
mov
leave
or
jle
inc
imul
jmp
xchg
sub
dec
sbb
das
sbb
nop
imul
adc
jmp
push
sbb
js
xchg
xor
in
push
cmp
or
xlat
mov
mov
out
pushf
repz
sbb
mov
mov
xchg
pop
fisubrs
aad
xchg
pop
inc
pop
xorl
movsl
dec
fsubrl
mov
inc
and
pop
adc
pusha
pushf
lret
lods
bound
es
pop
pop
fldenv
sbb
adc
divb
fiaddl
dec
pop
mov
pop
jnp
popa
push
lret
cmp
int
jo
jle
inc
fisttpll
jmp
mov
sub
sub
push
ret
fnstenv
push
sub
imulb
and
cmp
jne
jmp
test
jecxz
inc
scas
sbb
movsl
xor
jge
movb
mov
adc
mov
sbb
jg
adc
or
movsb
rcll
pop
lahf
aas
cmp
fsubr
shr
push
xchg
ja
scas
push
pusha
adcb
push
aam
mov
scas
xor
testb
in
out
movsl
jno
rorl
in
dec
hlt
xchg
sahf
lock
int3
cmp
inc
cld
insl
lcall
push
repnz
xchg
mov
cmp
mov
mov
lock
adc
lock
xchg
in
jae
cmp
mov
and
nop
inc
or
aad
inc
dec
mov
jp
lea
jg
clc
nop
mov
jmp
adc
std
movsb
cmpsl
xor
mov
lahf
mov
sbb
fnstenv
push
sbb
adc
and
fst
xor
shr
rorl
mov
es
and
mov
ss
iret
pop
xchg
nop
mov
adc
shll
adc
mov
aam
xor
push
add
scas
mov
cmc
xchg
cmp
push
jns
mov
ljmp
out
loop
loop
jo
mov
in
loope
adc
push
roll
aam
mov
push
scas
mov
lock
lods
inc
mov
pop
ja
cmc
outsl
sub
pop
aaa
xchg
add
sbb
mov
xor
jb
xor
sbb
ret
cmp
jp
shrb
sub
jmp
pop
mov
mov
jnp
pop
jbe
xor
negb
adc
ret
lock
sub
push
lea
mov
icebp
clc
xchg
idivl
popf
push
scas
nop
push
inc
jg
scas
inc
pop
mov
rcrl
je
cli
aas
aam
dec
adcb
add
aas
scas
sbb
mov
fiaddl
or
xor
stos
leave
nop
and
divb
adc
add
push
dec
sbb
xor
addr16
out
aaa
add
xchg
mov
or
jl
aad
sti
imul
pop
imul
in
push
mov
and
gs
push
mov
pop
shl
push
xchg
jnp
imul
xchg
or
jbe
addps
mov
cmp
fadds
in
xchg
in
mov
movl
pop
jle
aam
gs
inc
jecxz
rorl
adc
gs
xor
or
jnp
and
test
ret
mov
in
imul
or
in
jns
lock
cmpsb
pop
ja
cmp
rcll
test
cli
daa
mov
add
sahf
icebp
xchg
call
jp
mov
sbb
cmp
mov
mov
xchg
mov
call
sahf
add
outsb
and
dec
push
les
cmp
icebp
daa
js
int3
sub
mov
xor
loopne
mov
jbe
xor
idivb
xchg
js
and
sbb
xor
mov
push
shrl
push
xor
repnz
push
dec
pop
nop
mov
insl
sub
mov
add
insl
adc
outsl
mov
sbb
movsl
fs
leave
jae
mov
scas
adc
daa
jle
and
push
repnz
in
mov
xchg
lea
test
scas
mov
or
mov
mov
fs
andl
jmp
adc
mov
inc
lret
and
adc
add
stos
movsb
mov
inc
in
add
push
insb
popf
cmp
movsl
fsubrl
std
jmp
or
rol
mov
aad
sub
mov
adc
pop
push
imul
inc
sbb
xchg
cmpsl
sub
mov
je
jmp
sub
push
shl
imul
cmp
sub
enter
xor
test
cmp
and
mov
mov
add
ljmp
es
mov
test
bound
xchg
imul
pusha
ds
or
jnp
and
push
imul
mov
sub
aas
lds
rcll
mov
fistpll
shll
cmp
adc
xor
ret
test
movsb
sub
dec
fnstcw
out
daa
scas
cltd
iret
dec
rorl
aam
pusha
mov
outsb
das
aam
int
stos
test
lock
or
xchg
ret
jmp
scas
js
push
bound
xchg
pop
fnstsw
das
test
jnp
hlt
adc
or
xchg
push
pop
push
mov
mov
sub
pop
add
push
fwait
mov
popf
xchg
push
or
add
xor
ret
dec
cmc
xchg
adc
push
outsb
shll
xchg
shrl
bound
mov
scas
jp
insb
test
mov
in
mov
pop
xchg
xchg
xchg
iret
add
xchg
outsl
fisttpll
xor
jge
rolb
sub
mov
xchg
repnz
xchg
jo
mov
and
xchg
lcall
cmp
adc
pop
loop
mov
inc
movsb
or
mov
jnp
fildl
scas
xchg
push
out
stos
xchg
sub
sbb
and
jmp
pusha
inc
lret
mov
ja
sbb
fisubs
xor
into
inc
cmc
mov
cld
xor
mov
fildll
dec
xchg
or
and
sub
dec
xor
fmull
cmp
pop
mov
mov
xor
stc
jns
lcall
and
sahf
fstps
sahf
mov
xchg
gs
stc
repnz
mov
ficoms
mov
std
push
add
xchg
fisttpl
std
inc
jne
stos
pop
out
insl
nop
mov
jmp
inc
or
fsubrl
push
pusha
in
adc
mov
push
js
stc
sub
adc
jge
xor
pop
or
sti
pop
negl
test
dec
sbb
dec
gs
xchg
inc
push
sbb
and
addr16
jmp
les
cmp
mov
xor
cld
and
jbe
xchg
cmp
sbb
out
incb
push
cmp
daa
cmp
mov
xchg
sub
roll
dec
mov
dec
mov
into
add
aam
jg
cltd
sbb
jge
shlb
adc
mov
xor
stc
xor
rcll
sub
cmp
das
push
nop
je
ljmp
push
loope
inc
mov
jge
sbb
push
in
inc
push
int
inc
rorl
push
pop
andl
shll
imul
mov
mov
dec
into
call
mov
stc
mov
pushf
mov
xor
std
or
xor
rol
jle
mov
inc
or
iret
aad
mov
cmp
or
jle
hlt
adc
lock
ror
scas
pop
aad
rcrl
movsb
jbe
les
test
pop
cmp
lret
xchg
idiv
mov
daa
out
into
mov
nop
nop
adc
mov
jl
inc
mov
jbe
cmc
xor
fisubrl
or
push
xchg
add
es
lcall
aam
dec
imul
mov
push
fisubs
jp
add
std
xchg
push
jo
movsl
gs
inc
dec
xor
sti
dec
lea
xlat
sub
jmp
sarb
dec
lret
push
out
out
scas
nop
mov
repnz
iret
imul
out
das
mov
mov
jo
xchg
add
lret
fisttpll
in
xchg
mov
adc
aas
mov
test
sub
or
jns
daa
cmpsb
dec
test
adc
stos
add
cmpsl
fstps
scas
mov
nop
lahf
adc
ljmp
mov
inc
xchg
daa
dec
xor
xchg
mov
in
or
stos
jnp
jnp
incb
cmp
mov
aas
fld
in
lret
ret
and
mov
push
scas
inc
dec
ficomps
lods
daa
arpl
jecxz
ja
jno
xor
cmp
adc
mov
mov
jns
pop
cmp
xchg
scas
repnz
shl
xlat
xchg
adc
outsb
cltd
fwait
xchg
mov
popa
mov
xor
dec
notl
lcall
pop
and
xlat
push
clc
jmp
fldcw
scas
lret
or
mov
sub
cmp
xchg
lods
or
xchg
loope
inc
sub
cld
and
and
or
nop
xchg
jle
ljmp
lahf
adc
inc
loope
adc
xchg
jg
popf
inc
xchg
push
nop
cmp
sbb
cmp
cltd
int3
mov
lcall
adc
fadd
ret
xor
pop
repz
cmp
addl
dec
hlt
test
xchg
jle
cli
and
enter
rorb
sbb
and
sbb
dec
mov
mov
lock
mov
push
sub
loop
cwtl
mov
ss
outsb
neg
push
in
xlat
pop
or
mov
test
lods
repz
test
xchg
in
pop
and
movsl
cmp
cmc
mov
test
mov
cmp
enter
xchg
sahf
lret
push
cmp
into
aas
aad
aaa
sahf
mov
jne
test
gs
inc
jl
add
mov
nop
adc
out
sbb
mov
lahf
stc
aam
addl
subb
mov
cmp
cmc
jmp
incl
and
mov
nop
clc
sahf
outsl
xor
push
loop
sub
out
or
mov
inc
hlt
sahf
adc
dec
repnz
in
out
jbe
pushf
mov
sti
lea
sub
imul
int
xor
repnz
xor
fdivs
jge
es
fidivl
ja
mov
sub
sub
cmp
sub
mov
and
adc
mull
mov
cmc
mov
mov
lret
aaa
and
mov
int
mov
lea
cmp
xchg
ret
cmc
mov
shll
ret
push
or
cmpsb
les
mov
ret
lds
pop
mov
pop
scas
push
in
cmp
data16
stos
dec
adc
ss
insl
dec
or
adc
push
mov
leave
inc
shrl
scas
mov
fwait
aaa
pop
push
mov
mov
scas
ffree
jl
mov
lds
leave
lahf
xchg
and
dec
xchg
roll
scas
fmuls
test
add
into
inc
mov
out
add
fdivrl
out
mov
inc
sub
and
bound
test
lods
xor
out
mov
out
outsl
mov
lret
jae
leave
aaa
or
lea
sub
lahf
push
sub
fwait
mov
cmp
fst
inc
add
xor
outsl
nop
jle
lods
scas
in
xchg
mov
aam
adc
into
xchg
mov
cmp
ret
mov
cs
or
pop
cli
mov
inc
cmp
push
call
pop
and
jns
divb
or
outsl
sub
push
adc
xchg
xor
in
stc
data16
sbb
xchg
rol
and
shlb
std
repnz
sbb
mov
xchg
mov
xchg
inc
dec
and
ret
mov
push
inc
fdivrl
setne
loopne
imul
lds
mov
inc
xchg
in
cmp
mov
fldl
ljmp
pop
mov
mov
xchg
sub
outsl
pop
xchg
cmp
les
mov
popa
dec
mov
mov
int
adc
fldt
xorb
iret
or
or
jo
scas
and
sbb
aaa
inc
and
lock
clc
xchg
outsb
sbbl
js
xor
icebp
sub
nop
sub
jbe
xchg
mov
gs
push
sub
icebp
xchg
out
sbb
sbb
sub
imul
dec
lret
pop
jl
push
sbb
push
mov
imul
ficoml
mov
cmp
test
and
mov
dec
xchg
scas
lahf
rcr
mov
nop
lods
cmp
pop
xlat
bound
sbb
clc
int
pop
mov
cmpsb
repz
scas
xchg
add
aaa
test
mov
lods
cmp
push
or
add
sbb
int
jns
das
jp
enter
sbb
add
aas
mov
mov
rcr
or
cmp
orb
xchg
ljmp
push
sti
or
lea
fidivl
sbb
std
push
and
sti
sbb
adc
ljmp
or
daa
push
shrl
adc
and
iret
daa
adc
inc
xchg
mov
and
mov
rep
aad
pop
mov
xchg
out
mov
or
dec
dec
adc
sub
jns
imul
xchg
ret
mov
rol
bound
sub
subl
or
lcall
icebp
xchg
mov
inc
add
xchg
pusha
dec
jo
imul
dec
pop
mov
rcr
jmp
insb
addr16
dec
sbb
sti
and
push
mov
add
inc
mov
scas
inc
int3
aas
rorl
ret
sbb
xchg
test
cwtl
inc
es
popl
inc
mov
fistl
jl
mov
or
aam
jle
popa
mov
js
mov
bnd
aas
std
aaa
dec
push
and
push
loope
ret
lock
push
out
and
std
popa
ret
ret
push
shlb
inc
nop
or
jg
mov
shl
xchg
adc
sahf
test
adc
or
mov
xchg
ss
js
imul
aas
sbb
rol
xchg
loopne
dec
aas
push
fbld
xchg
iret
fdivl
fmul
add
dec
xor
sbb
cmpsb
pop
not
hlt
push
mov
adc
adcl
mov
out
testb
jno
aam
rolb
and
or
inc
mov
and
mov
cmp
negb
or
xchg
xor
jge
push
push
mov
xchg
fadds
stos
jae
pusha
xchg
inc
mov
dec
fs
xchg
mov
xchg
mov
xchg
dec
test
sub
or
xchg
shll
das
ret
insl
subl
test
loop
add
xlat
or
and
or
mov
pop
and
pop
sub
mov
gs
sbb
insb
test
adc
arpl
lock
xor
mov
or
in
fdivrs
insb
shrl
cmpsb
movsb
mov
mov
popf
jg
testb
addr16
lea
and
insl
lods
mov
mov
lahf
mov
mov
sub
pop
popf
adc
sub
mov
aas
xchg
clc
mov
lds
mov
mov
push
int3
fs
repz
stos
lea
data16
call
popa
nop
test
scas
mov
scas
xchg
decl
sub
xorb
mov
cmp
stos
aam
add
loope
ja
mov
cmpb
pop
push
push
in
push
jne
sbb
iret
push
ss
or
lds
pop
pushf
aad
sub
mov
jle
mov
add
xor
in
dec
mov
repnz
adc
mov
inc
mov
dec
push
and
std
jg
pop
mov
repz
loope
xlat
fldcw
fcoml
mov
testl
pop
dec
hlt
push
aad
leave
pop
movsl
sbb
xchg
jne
stc
lods
vphsubbw
nop
xor
adc
xchg
push
adc
mov
mov
mov
mov
roll
sub
lahf
xchg
mov
sub
mov
arpl
movl
jne
mov
shrb
ret
dec
push
hlt
ret
or
push
push
jge
cmp
rcll
push
mov
cmc
iret
inc
popa
repnz
sbb
hlt
pop
xchg
cld
scas
int3
pop
mov
mov
dec
mov
or
nop
test
test
mov
popa
nop/reserved
pop
and
imul
lds
jmp
xchg
inc
lds
daa
nop
sahf
mov
mov
jg
or
imul
jp
mov
inc
stos
push
inc
pusha
lret
xor
sbb
cmp
xlat
imul
outsb
dec
or
mov
sub
push
xchg
adc
mov
jbe
jl
aam
mov
lea
push
mov
out
xor
pop
jmp
mov
lret
enter
lahf
sar
jnp
es
push
jnp
lods
mov
lcall
and
pop
pop
movsl
pop
mov
push
outsl
aam
xchg
sbb
insb
call
mov
push
push
aas
in
or
jo
mull
xchg
nop
mov
out
test
inc
pop
js
inc
mov
rorl
shlb
mov
add
out
movsl
dec
stos
jo
pop
imul
inc
xchg
vpcomud
mov
scas
or
xor
notb
stc
ss
pop
jg
loop
pop
xchg
push
and
and
or
dec
sar
lods
sub
nop
imul
jl
mov
int3
ja
cmp
mov
push
mov
stos
into
or
or
jno
jg
pushf
jns
xchg
pop
cmc
imul
jnp
xchg
pop
inc
adc
adc
aaa
and
leave
scas
xchg
mov
lahf
in
sbb
bswap
cmpsl
sarl
lahf
pushw
and
push
mov
jl
xor
aam
sub
stos
sbb
nop
pop
fildll
mov
lea
repz
push
or
daa
pop
inc
mov
lds
lcall
jns
sahf
popa
ficomps
pop
orl
mov
ja
pushf
ljmp
fnstenv
jae
outsb
jne
or
scas
xchg
mov
fistl
sub
mov
cmp
lcall
movsb
ucomiss
lret
pop
lds
xchg
in
dec
or
or
cli
sub
dec
push
jne
mov
add
fdivr
mov
sbb
push
cmpsl
popl
testl
jbe
xchg
mov
cmpsl
lcall
and
out
and
xchg
mov
sub
xor
cmp
dec
jecxz
fimuls
cltd
pushf
or
in
movsl
repz
aam
nop
rorb
mov
pop
mov
sbb
xchg
lea
aas
push
jp
jbe
mov
jo
xchg
cmp
sub
and
ja
popa
loopne
shl
in
inc
sbb
sbb
sti
mov
adc
pop
xchg
clc
iret
into
ljmp
lock
repnz
scas
lods
jg
mov
xor
inc
loopne
syscall
xchg
adc
mov
sub
mov
mov
mov
test
mov
js
jg
lahf
aam
fstl
mov
mov
cmp
movsl
loopne
loope
in
repnz
xchg
add
add
rorb
and
xchg
aad
mov
ljmp
lret
ror
sub
leave
movsl
mov
out
pop
mov
push
mov
in
jge
mov
jmp
xchg
js
test
cs
js
gs
imul
enter
xchg
mov
scas
add
pop
mov
xor
push
jg
push
aam
adc
ret
insl
pop
push
std
mov
mov
adcb
adc
in
pusha
jns
out
ret
cld
stc
inc
gs
xor
jmp
jno
cmpsb
aad
daa
mov
xlat
lcall
add
into
cli
mov
jae
out
std
mov
fcmovb
imulb
popf
pop
sub
out
dec
inc
aam
roll
dec
fsubl
mov
lahf
mov
pop
adc
add
adc
sub
mov
cmp
mov
aam
push
cmp
add
mov
pushf
cmp
and
repnz
fwait
xor
add
mov
in
dec
ret
add
xchg
xchg
pop
push
push
int3
clc
pop
mov
nop
ljmp
mov
insl
out
stc
int
mov
jmp
or
orb
sahf
mov
adc
fisubrs
sub
jge
nop
nop
jmp
fsubs
mov
pop
xor
push
outsl
nop
fistps
add
xchg
pop
mov
push
imul
aaa
vandnps
mov
adc
jge
mov
stc
int
nop
jl
mov
xchg
ja
jge
pusha
mov
inc
sub
adc
and
icebp
mov
pop
cmp
imul
sub
nop
and
mov
pushf
dec
mov
mov
cmpsl
xchg
pop
repnz
nop
fs
cmp
lret
xchg
xchg
push
div
outsl
stos
lea
xchg
rcll
cmp
repz
aas
nop
mov
pushf
out
add
sub
jne
nop
pop
in
scas
rcl
sbb
js
fwait
in
ret
xlat
pop
mov
leave
in
aam
mov
sub
aas
and
mov
mov
mov
test
test
xchg
nop
push
ds
in
jb
test
daa
loopne
repz
jle
jg
inc
enter
lds
jno
adc
or
subl
xchg
dec
pop
sub
mov
push
sbb
fcompl
lahf
mov
sbb
adc
scas
fldenv
jnp
sti
lds
inc
outsl
mov
xchg
roll
nop
lock
das
jnp
sbb
enter
cltd
nop
jo,pn
jge
in
leave
outsl
mov
xchg
cmp
xor
aad
fucomip
mov
icebp
es
and
pop
adc
in
mov
pop
adc
or
outsl
cli
adcl
add
sbb
xchg
stos
mov
lods
mov
stos
mov
js
lret
add
mov
push
add
test
add
in
lea
xchg
cmc
xor
dec
push
shll
xchg
pop
aas
pop
in
jg
aas
xchg
push
xchg
sahf
aad
frstor
mov
testb
and
jecxz
je
enter
add
fidivs
mov
xchg
pop
cmp
sahf
and
xor
mov
cld
push
mov
xchg
cmpsb
push
insl
lret
sbb
mov
inc
lods
xor
cmp
lcall
cmpsl
sub
int
mov
xor
lds
pop
push
arpl
cwtl
mov
shrl
test
push
shrb
adc
adc
mov
fwait
lds
or
iret
inc
cmpsl
std
add
cs
xor
in
loop
xchg
mov
cs
out
inc
xchg
jg
scas
inc
rolb
and
cmpsb
adc
les
xchg
inc
out
push
push
cmp
stos
adc
std
mov
add
ljmp
fwait
or
dec
xchg
cmpsl
daa
adc
cmc
jbe
mov
xor
mov
out
lds
into
cld
shrl
xchg
and
lcall
mov
jnp
mov
into
icebp
loopne
dec
dec
inc
bnd
sub
push
arpl
fcmovbe
mov
stc
out
cmp
in
std
out
adc
push
sbb
repnz
push
mov
or
xor
xor
dec
psrld
add
rcrl
and
imul
push
xchg
pop
in
mov
fwait
xor
int
mov
and
xchg
jmp
out
lret
sub
inc
jno
lea
and
xchg
faddl
pop
out
mov
jp
jnp
xlat
mov
add
lds
jnp
out
aad
mov
mov
add
mov
pop
lock
pop
pop
in
cwtl
sub
stos
mov
mov
pop
add
cmp
push
xor
repnz
je
bound
ret
mov
xchg
lods
sbb
in
ja
pop
mov
cmc
adc
data16
js
mov
int
test
xor
outsb
mov
sbb
mov
out
in
mov
and
add
imul
xchg
scas
cmp
rorb
or
mov
xchg
xchg
scas
icebp
das
iret
jg
xchg
addl
hlt
inc
jae
sarb
and
push
in
push
aaa
repz
mov
mov
mov
adc
push
xor
inc
inc
subb
push
aas
sub
in
pop
addr16
repz
ret
xchg
out
mov
adc
gs
inc
sub
in
jmp
jnp
movsb
add
clc
lcall
ja
pop
rcrb
pop
mov
xchg
shrl
and
xlat
ljmp
and
ss
xchg
inc
adc
shrb
dec
and
fadds
notl
flds
sbb
mov
data16
nop
mov
xchg
xor
divl
xor
daa
leave
push
cld
mov
adc
ss
outsl
cs
bound
leave
scas
orb
xchg
adc
repz
lds
loop
sub
jae
push
push
repnz
fcmove
stos
push
pop
pusha
sbb
adc
xor
rorb
loope
pop
imul
arpl
add
xor
mov
mov
sbb
mov
pop
nop
rcrl
cmp
fisubl
insl
jmp
sti
mov
jns
test
xor
adc
push
sub
mov
ret
or
adc
nop
lcall
pop
push
daa
imul
aas
shll
or
push
adc
xchg
rcr
sbb
out
mov
scas
aam
icebp
xchg
dec
addr16
pop
cmp
call
cmpl
dec
inc
pcmpeqd
xor
inc
push
call
fwait
ss
dec
pushf
sbb
cmpb
mov
and
push
ss
cli
ljmp
insb
xorb
call
cli
pop
aas
jnp
es
xchg
adc
xchg
movsl
push
addr16
and
cs
or
insb
hlt
stc
push
pop
xchg
iret
daa
mov
jns
out
mov
cwtl
int
repnz
lea
outsb
sbb
push
inc
sbb
jnp
lret
mov
push
repz
mov
popa
mov
pop
icebp
notl
mov
std
ret
push
lcall
xor
shlb
mov
lods
jbe
or
pop
into
outsl
mov
sub
aas
push
data16
test
xchg
inc
inc
cli
jp
jbe
add
push
in
std
push
in
mov
adc
xchg
push
jg
js
jo
ret
or
rolb
xchg
fstl
push
arpl
xchg
jbe
cwtl
out
ret
add
nop
ljmp
pop
scas
pop
divl
jnp
lea
hlt
in
inc
xor
xchg
ja
pop
bound
nop
ss
icebp
push
pop
inc
mov
data16
aas
pushl
std
add
arpl
in
rcll
inc
enter
sub
inc
pop
scas
dec
repnz
in
test
push
or
mov
andl
fwait
sahf
loop
push
in
push
into
shll
dec
mov
sti
sbb
xor
in
add
jno
gs
xchg
lea
xchg
rorl
lret
rol
sbb
pushf
ja
xchg
loop
jmp
mov
lods
hlt
add
rcr
jecxz
cli
rcll
aaa
sbb
outsb
push
jl
dec
mov
shl
shll
or
push
scas
adc
sbb
xchg
cmp
jno
sbb
cmp
or
loopne
and
xor
leave
mov
and
pusha
push
subl
cmp
xchg
testl
rcl
mov
aas
loopne
mov
insb
icebp
mov
das
mov
jge
inc
aad
mov
daa
adc
ss
cmc
mov
test
add
lret
inc
xor
pop
or
mov
add
outsb
cmc
lret
dec
popf
pop
cmp
push
arpl
sub
fldl2e
mov
gs
sbb
sarl
mov
testl
std
mov
xchg
into
push
ljmp
pushf
adc
and
nop
fs
pop
push
jbe
and
mov
ret
stos
hlt
leave
jg
sahf
mov
mov
dec
popa
xchg
adc
or
mov
mov
bound
cld
ljmp
pop
mov
nop
icebp
loop
mov
add
inc
jge
mov
lret
mov
and
xchg
cmpsl
inc
jns
gs
ja
nop
hlt
negl
sub
lds
nop
leave
cmp
dec
ret
pop
push
loop
jmp
adc
jge
scas
or
jne
mov
sbb
ja
sbb
rcl
mov
push
das
cmpsb
and
aam
mov
xchg
inc
movsb
in
cmpsb
fstpt
mov
scas
in
jmp
push
jg
outsl
iret
sub
das
lahf
jmp
outsb
dec
inc
ss
std
or
pop
popf
inc
pop
push
sarl
mov
out
lock
dec
ret
stos
inc
jl
jg
jno
add
xlat
frstpm(287
mov
outsb
inc
inc
aad
pushf
push
mov
add
mov
in
xor
dec
push
test
iret
pushf
daa
adc
push
sti
dec
xlat
out
or
ret
and
add
xlat
jle
mov
outsl
xlat
bound
and
xlat
sahf
lret
addr16
cmpsb
loope
xlat
imul
dec
je
popf
xlat
test
lret
dec
iret
popl
sub
std
imul
loop
inc
adc
or
iret
add
jmp
hlt
test
xlat
hlt
and
jge
adc
xchg
jecxz
mov
decb
push
popf
divl
pop
dec
or
fisttpl
popa
or
sbb
or
pop
cmpsb
aad
mov
out
clc
push
das
insl
nop
xlat
adc
pop
fcmovne
call
or
movsb
ljmp
sbb
xlat
enter
xor
or
push
xchg
cli
dec
lahf
in
xlat
push
sbb
mov
ret
jle
rcll
imul
dec
jg
cwtl
push
adc
cmpsl
mov
stc
jbe
jle
fwait
add
push
rclb
fiadds
nop
addr16
rcrl
mov
in
daa
fnsave
mov
sbb
xlat
and
cmp
aam
bound
cmc
jecxz
mov
insb
rcrb
fs
sbb
mov
movsl
int
call
lods
sbb
and
lret
xlat
outsb
lahf
dec
and
pop
fsubs
mov
orb
mov
add
shrl
fdiv
es
shrl
pop
fcmovb
out
xchg
lds
enter
pop
loope
jg
mov
xor
popf
ja
aam
jno
ss
lods
xchg
mov
nop
pop
lods
push
mov
test
add
sbb
pop
mov
not
inc
mov
lret
out
std
sub
test
pop
mov
aaa
adc
mov
nop
xor
mov
lahf
jb
jbe
jg
inc
bound
nop
shrl
jg
sub
mov
mov
daa
or
rorb
push
adc
adc
cmp
mov
imul
lret
ret
sub
mov
add
dec
push
data16
pop
mov
xchg
xlat
and
in
dec
fisubrl
cld
fldenv
ja
or
and
pop
sub
mov
cmpsb
shl
lea
fistps
or
lret
cmp
jl
sub
pop
and
xchg
xchg
lock
stos
jne
or
rcrl
jp
sub
mov
iret
or
enter
pusha
inc
in
mov
ffree
pop
push
push
push
out
jbe
ror
sub
fwait
pop
mov
push
jae
nop
in
nop
xor
mov
mov
flds
push
fdivrl
rcrl
sub
mov
mov
int3
jne
and
dec
hlt
push
cmp
mov
in
xchg
andl
in
div
mov
lahf
daa
inc
out
jo
mov
or
into
setae
push
lret
inc
xchg
cmc
and
pop
arpl
das
out
and
ss
xchg
rcrb
mov
loope
rolb
push
frstor
mov
sbb
pushf
ja
lret
adc
nop
sar
mov
jp
jmp
pop
repnz
fistpll
cwtl
ds
loop
mov
push
stos
mov
call
adc
xchg
testl
sub
in
pop
ret
and
ljmp
ret
aam
mov
cmpsl
or
push
mov
fildl
inc
or
pop
aam
xchg
nop
mov
mov
pop
cmpsb
add
inc
int
pop
test
mov
jle
cltd
lock
xchg
jne
pop
sbb
rolb
pop
mov
dec
mov
xchg
cmp
xchg
inc
sub
pop
pop
fwait
jne
sub
int3
call
in
stos
pop
imul
scas
stos
cmp
dec
add
shrl
sub
mov
jmp
mulb
xchg
push
aaa
mov
jne
mov
and
test
ja
iret
ljmp
subl
sbb
rorl
jnp
mov
fincstp
cmpsb
pop
push
mov
adc
push
inc
in
cld
aam
out
xchg
iret
ja
sub
notl
cli
sub
dec
mov
xor
and
or
push
mov
jae
rorb
xor
and
andl
scas
movsb
push
scas
cmp
jp
add
or
xchg
adc
in
js
sub
xlat
mov
mov
and
inc
sbb
adc
cmp
popa
movsb
sbb
aas
cmp
xchg
xchg
ret
nop
jmp
adc
lret
mov
enter
test
jb
xchg
sbb
gs
aas
adc
pushf
jmp
dec
fidivrs
cmp
insl
adc
les
data16
int
inc
xor
out
out
mov
rclb
addr16
mov
jl
xor
cmp
jnp
adc
dec
jp
mov
nop
dec
jmp
stc
pop
and
fwait
test
sub
mov
mov
or
adcb
pop
jecxz
lds
out
xor
xchg
mov
fs
cmp
cli
sub
xor
scas
into
lods
aam
push
popa
jle
pop
ja
ds
lods
add
jbe
inc
fimull
loop
leave
xchg
sbb
jg
xchg
pop
push
mov
iret
out
push
jl
inc
xorb
xor
mov
stos
jb
and
int3
xor
add
idiv
fwait
nop
adc
ss
xchg
sti
lods
cmp
rolb
add
mulb
sub
lret
adc
xlat
xlat
fists
in
xor
push
aaa
and
arpl
aad
mov
or
jmp
lock
sbb
push
xchg
jg
daa
mov
nop
aaa
sub
repz
mov
xor
js
out
lret
ljmp
mov
dec
sub
daa
mov
mov
dec
sub
xor
test
inc
push
xchg
mov
mov
jb
in
sub
or
pop
stc
mov
hlt
out
into
leave
cmp
add
lds
pop
mov
or
aas
inc
add
and
add
and
fnstcw
adc
cmp
mov
gs
js
insl
les
jle
outsb
jg
imul
dec
cmp
jmp
int
push
ljmp
mov
jne
in
sub
xchg
imul
or
lods
push
ljmp
pop
into
loopne
pop
bound
outsb
xchg
jecxz
jmp
sub
stos
stc
test
mov
inc
pop
iret
add
or
cmpsb
leave
add
fisubrs
sbb
iret
dec
xchg
inc
test
xchg
inc
mov
out
push
jg
ret
push
mov
scas
mov
in
pusha
dec
xchg
xchg
pop
fwait
xchg
sub
repz
ds
aam
mov
sub
into
mov
xor
jge
xor
mov
ficoml
jp
les
push
push
fdivl
cmpsl
sbb
jmp
and
test
sahf
dec
cmp
push
sbb
lret
xchg
aaa
nop
jns,pn
iret
push
ds
push
jnp
jl
or
subb
xorb
sbb
push
fisubrl
sub
inc
leave
pop
aam
jns
sub
sbb
sti
sbb
js
rcll
adc
popf
fwait
xlat
div
maxps
and
movsl
xchg
cld
pop
xchg
fsts
push
mov
dec
nop
push
sbb
mov
jns
jbe
mov
shll
loopne
addr16
xchg
jle
sbb
mov
sti
mov
push
mov
daa
xchg
cmp
jmp
xchg
mov
xchg
cmp
or
bound
dec
mov
mov
in
xchg
jg
and
dec
jl
bound
inc
add
hlt
fnstenv
stc
xchg
leave
push
mov
bnd
and
leave
jmp
inc
xchg
jmp
jbe
pusha
lcall
push
out
clc
or
into
nop
stos
shr
aad
sarl
lret
xchg
cmp
inc
je
pushf
aas
shrl
pop
jnp
test
aaa
add
aad
stc
pop
ficoml
pop
mov
jb
daa
in
mov
jae
cli
out
add
test
aam
mov
movsb
inc
std
jmp
pusha
leave
ret
lods
inc
fcmovnb
iret
sti
sahf
insb
test
ret
icebp
inc
or
pop
lahf
push
xchg
roll
cltd
rcr
mov
and
nop
cmpsb
fbld
jnp
cmp
cmp
popa
fisubrl
dec
dec
xor
jp
test
in
out
and
add
cli
in
ret
cltd
push
cmp
or
mov
icebp
jl
mov
sub
adc
popa
mov
imul
mov
je
aaa
mov
inc
lret
sub
adc
mov
enter
in
bnd
xor
adc
pop
sbb
or
xor
push
leave
xchg
adc
sbb
xor
sub
xchg
pop
js
push
ret
pop
pop
lahf
and
je
test
cli
clc
rorl
lret
sub
inc
mov
iret
insb
pop
sbb
lcall
xchg
rclb
sub
test
mov
pop
push
lods
xor
cmp
inc
cltd
jbe
sub
addl
push
leave
sub
push
and
ret
mov
dec
lods
rolb
xchg
enter
ret
add
or
cs
jno
dec
repz
sbb
fcoml
push
inc
mov
repz
aas
iret
sbb
inc
push
aas
repz
repnz
or
aad
jb
adc
jp
mov
mov
or
in
adc
daa
mov
ljmp
add
sbb
add
notb
xlat
inc
sub
mov
sub
mov
inc
inc
mov
decb
test
pop
jo
mov
call
repnz
pushf
rcll
aaa
cs
adc
insb
jns
push
or
sahf
loopne
int
loop
lcall
jge
ret
cli
xchg
xchg
out
iret
mov
gs
roll
scas
cmpsl
fimull
movsl
add
dec
fs
lods
xchg
mov
mov
dec
adc
lods
mov
iret
mov
push
mov
aad
int
cmc
pusha
xlat
imul
cld
sahf
dec
outsb
int3
cwtl
loope
jno
xchg
push
pop
fwait
push
and
xchg
out
das
cmp
or
adc
sbb
stc
jns
mov
hlt
pop
mov
cltd
aad
imul
adc
ret
ret
adc
test
outsb
xchg
outsl
sbb
je
pop
ret
ljmp
mov
nop
mov
daa
xor
inc
pop
leave
pushf
push
repnz
aas
cmp
mov
adc
sbb
popl
pop
mov
icebp
mov
outsl
aam
sbb
cmp
dec
pop
js
les
xor
shll
out
int
loope
or
inc
into
popa
aam
loopne
cmpsb
out
or
sbb
mov
dec
mov
int
loope
fcomi
test
fmuls
loopne
xchg
push
in
jbe
outsb
mov
sbb
stc
ja
mov
jno
gs
loope
subl
sbb
sahf
xor
daa
sub
mov
sub
bound
sub
jmp
sub
pop
fcoml
stc
xchg
pop
lahf
push
test
popf
push
push
insl
nop
outsb
testb
jecxz
sti
mov
ror
lret
cld
mov
adc
ret
inc
jle
sbb
iret
sbbb
push
out
xchg
push
fs
in
or
xchg
cmp
lret
pop
mov
sub
xor
jp
xlat
xor
enter
pop
es
mov
sbb
sub
mov
pop
shl
int
psubsw
mov
jne
mov
push
jp
cmp
jns
or
jae
mov
jge
jg
xchg
adc
pop
adc
in
xlat
sbb
out
xchg
leave
hlt
sub
push
lea
cwtl
ret
mov
cmp
mov
sti
xlat
pop
xor
xchg
xlat
lcallw
cwtl
loopne
cli
mov
and
xlat
pop
sub
int
adc
iret
popf
jno
pop
lahf
cwtl
sarb
xor
mov
xlat
stos
push
adc
pop
add
leave
xlat
and
lods
cmpsl
push
sub
or
sub
or
sub
inc
mov
inc
xchg
push
inc
mov
fdivrp
pusha
or
jl
lahf
mov
jecxz
out
in
and
dec
xlat
push
jmp
or
adc
push
es
push
jg
ds
in
ljmp
xlat
sub
sub
mov
sbb
sarl
mov
push
mov
dec
mov
loop
scas
fsubrl
pop
lock
popf
lahf
push
pop
mov
mov
fcmovbe
dec
int3
mov
or
push
fsts
adc
fsubrs
xlat
and
or
cmp
fidivl
pusha
cmp
cli
test
lahf
mov
push
popa
sub
pop
jo
fst
mov
and
hlt
addr16
movsl
fidivs
adc
out
negb
jo
mov
mov
xlat
mov
adc
mov
adc
dec
or
xor
sbb
ljmp
rorl
dec
cmp
add
mov
pop
sub
dec
inc
shll
and
push
jl
mov
xacquire
xor
cwtl
roll
arpl
lock
mov
dec
ja
mov
lods
repz
hlt
push
mov
jl,pn
aad
and
scas
or
int3
cmp
jge
mov
jo
xchg
roll
and
mov
iret
push
add
jl
insl
daa
push
mov
es
cs
xchg
dec
js
xlat
xchg
mov
cmp
push
pop
xchg
xlat
mov
and
sahf
movsb
adc
xor
testl
xchg
fisubrs
dec
fbstp
xlat
imul
mov
mov
adc
adc
xor
xlat
dec
sub
shl
repz
cmc
repnz
mov
push
pop
pop
pop
cmc
lret
shlb
mov
xlat
sbb
les
xlat
jo
push
push
cmp
lods
movsb
xlat
pop
shll
aad
daa
pop
xlat
mov
data16
clc
cmpsb
out
xlat
pop
roll
add
push
test
push
adc
xlat
lds
adc
add
cld
rol
jle
xlat
cmpsl
mov
mull
cltd
inc
xlat
test
mov
and
mov
sbbb
enter
pushl
pop
mov
push
frstor
jmp
sub
xlat
call
push
mov
xlat
rcrb
sbb
mov
sub
mov
insl
jmp
xlat
jo
insb
jmp
dec
mov
xlat
rcrl
pop
out
js
xlat
xchg
shll
push
ficoms
xchg
cmp
negl
push
xlat
sbb
stos
push
mov
leave
xlat
push
pop
adc
test
sub
or
movsl
popf
in
pop
pop
push
push
aam
xor
xlat
mov
insl
mov
clc
dec
ret
and
xlat
sbb
and
jp
xlat
add
xchg
jle
xor
pop
adc
adc
mov
pop
aam
out
int
mov
out
andl
lds
pavgw
xlat
test
jge
stc
aas
and
mov
lahf
popa
push
push
jno
dec
shlb
pop
jne
shl
sahf
dec
hlt
lea
stc
add
inc
xlat
pop
jge
iret
test
xchg
mov
lahf
rorl
xlat
std
sub
jae
out
call
inc
ficoms
inc
push
ficompl
jmp
dec
mov
repz
inc
popa
outsb
lock
shrb
pop
andb
push
or
xlat
dec
call
leave
cmpl
test
lds
xlat
iret
lret
dec
mov
mov
sub
add
je
cmp
or
sub
jne
dec
add
mov
push
jmp
fstps
in
xor
fwait
inc
ret
pop
sbbb
inc
aaa
pop
hlt
xlat
stos
faddl
or
mov
xchg
adc
push
fisubrs
mov
jecxz
push
lock
mov
push
ljmp
mov
xlat
and
cmp
jb
stos
adc
in
mov
jne
iret
aas
lods
pop
cmp
push
repnz
leave
cmc
sbb
cmp
xlat
sub
std
dec
and
test
ss
and
dec
xchg
lcall
pop
dec
jbe
clc
and
cmpsb
sbb
lods
xlat
lods
sub
push
cmp
nop
pop
popf
loopew
or
xlat
ficoml
and
out
adc
mov
fs
testb
lods
imul
rorb
jnp
xchg
ljmp
inc
outsb
xlat
movsl
cs
arpl
mov
lea
cltd
rcrb
dec
push
cmp
cmp
push
xlat
sub
pop
xchg
aad
call
cld
insb
fnstsw
ds
inc
push
xor
hlt
aam
mov
ss
and
rcrb
push
push
adc
push
nop
cmp
xlat
lret
call
iret
fidivs
push
dec
push
push
js
xlat
in
jecxz
dec
sbbl
rolb
test
fstl
and
mov
pop
pmuludq
iret
xlat
dec
jae
push
adc
in
adc
xchg
push
std
or
mov
push
imul
xlat
jl
mov
std
cmc
cwtl
mov
pop
xlat
mov
adcl
push
xchg
sub
push
pushf
mov
fs
xchg
jb
aam
cld
bound
mov
jle
pop
mov
std
add
xchg
xchg
iret
push
add
push
lods
xchg
jo
stos
iret
push
adc
pop
mov
xlat
add
nop
lret
ja
add
mov
xlat
add
dec
adc
insl
xchg
pop
xlat
rclb
stc
dec
shll
adc
or
add
add
daa
pusha
fcmovbe
stos
je
gs
add
aas
iret
addr16
jl
mov
sarb
loop
cmp
testl
inc
xlat
rcrl
xor
fcomi
xlat
loope
lret
sbb
mov
dec
es
dec
mov
mov
mov
pop
xlat
mov
jl
int3
andb
or
sarl
mov
xlat
sahf
lods
pop
cmp
adc
pop
xlat
mov
imul
xlat
daa
sub
test
xlat
inc
dec
iret
jecxz
mov
mov
push
cmc
std
sub
push
scas
call
push
clc
xor
hlt
push
push
sbb
sbb
add
mov
jno
add
and
int3
xchg
stos
js
adc
add
mov
adc
push
hlt
push
insl
xlat
fistpl
in
int
xchg
xlat
aas
xchg
andb
dec
sbb
inc
jge
pop
aam
std
lcall
out
loope
shll
jg
xchg
jbe
int3
ja
adc
in
nop
dec
jno
mov
and
rcrl
mov
fwait
daa
adc
int
push
mov
xor
pop
cmp
iret
lret
push
icebp
pop
ret
out
mov
inc
loop
push
sahf
shlb
loop
mov
xchg
aaa
je
test
scas
enter
outsl
add
cmp
sbb
aam
push
dec
add
mov
or
mov
jmp
out
and
mov
jp
inc
mov
push
aaa
jo
xor
daa
mov
daa
mov
leave
inc
inc
iret
dec
imul
pop
or
stos
xchg
daa
nop
rol
in
ss
xchg
test
int
test
int
pop
pop
int
sarl
sbb
scas
ret
int
mov
scas
xor
mov
repnz
nop
inc
sub
push
in
push
mov
adc
cmp
xchg
popf
jnp
cli
push
mov
cmp
iret
mov
push
repnz
jmp
outsb
xchg
fcmovne
pop
nop
mov
fnstcw
push
adc
dec
subl
repnz
ss
lea
xchg
notb
outsb
mov
xor
mov
jbe
daa
or
cmpsb
out
out
das
icebp
cwtl
rorl
test
push
sti
push
inc
sbb
gs
xchg
iret
ja
mov
in
fs
dec
leave
push
ffree
jecxz
add
fs
mov
test
inc
into
and
mov
in
shll
push
hlt
sbb
dec
or
fsts
push
lret
aaa
sub
mov
push
xor
out
adc
sbb
or
and
ja
cmp
dec
fistl
fists
mov
pop
pop
adcl
xchg
repz
arpl
repnz
add
push
sub
sbb
rorl
ficompl
lret
pop
imul
les
mov
lock
push
jmp
pop
jg
mov
mov
int
xor
ror
sub
repz
pop
inc
out
pop
xchg
mov
mov
cmp
dec
js
into
popf
enter
xlat
scas
inc
mov
aam
loope
movl
cs
adc
into
enter
xchg
leave
aaa
mov
lock
data16
rorb
mov
rcll
sub
xchg
adc
inc
lods
enter
dec
push
xor
push
test
xor
mov
sub
sahf
pop
pop
cmp
sbb
fsts
js
repz
add
nop
xchg
xor
sahf
add
sbbl
sar
pop
mov
std
out
decl
cmc
dec
aad
pop
mov
mov
out
adc
sub
adc
pusha
cmp
adc
mov
hlt
jae
xor
inc
lret
das
adc
leave
sub
push
mov
subl
nop
in
test
sbb
xchg
loopne
outsb
sbb
push
mov
add
ljmp
xchg
lea
shll
mov
lods
jbe
xlat
cmp
loope
mov
sub
add
cltd
cld
stc
movsb
and
std
inc
cmp
loopne
or
inc
pop
aam
mov
xor
mulb
daa
fistpl
sbb
cwtl
scas
aam
shrl
mov
nopl
xchg
nop
inc
add
push
outsl
ja
and
mov
bound
lods
nop
mov
ret
aas
and
add
and
pop
or
loopne
lret
xchg
jmp
adc
pop
fdiv
jecxz
ljmp
pusha
xchg
dec
nop
sahf
jecxz
add
xlat
adc
push
dec
imul
cmp
mov
mov
sahf
mov
jne
lods
rcll
jg
inc
sbb
add
sbb
test
fbld
and
xchg
out
pop
push
or
pop
andl
cmpsl
aam
iret
mov
out
xchg
push
push
and
adcb
sub
sbb
inc
cmpsl
ret
test
jmp
stos
pop
lds
jge
pop
mov
rolb
dec
stos
pop
stc
lret
xchg
pop
nop
cmp
cld
out
arpl
imul
scas
pop
sub
mov
sbb
fmull
lea
dec
sub
push
jmp
ljmp
cs
add
scas
dec
out
out
scas
rcll
and
xchg
fistps
mov
sub
cmp
ret
test
test
scas
mov
sub
inc
je
loopne,pt
push
jecxz
mov
cmpb
xchg
mov
outsb
sti
shll
stos
push
fisttps
sbb
push
xchg
jg
jno
arpl
sbb
xchg
push
jg
rorb
repnz
js
push
aam
push
mov
cld
jnp
hlt
nop
mov
data16
shll
mov
push
xchg
dec
imul
push
icebp
popf
jno
cmp
mov
imul
out
add
cmp
ret
adc
in
inc
imul
nop
cmpsb
dec
es
adc
mov
and
mov
jno
push
outsb
je
dec
xor
xor
fs
and
mov
repz
sub
lods
dec
jmp
ret
enter
cli
andl
sub
outsl
pusha
inc
jmp
adc
nop
sbb
shlb
repnz
pop
sbb
ja
push
sub
movsl
or
ret
into
jb
lret
fimull
or
pop
negl
cmp
mov
nop
rcl
and
add
mov
adc
add
insb
jnp
cmp
inc
iret
jge
mov
or
pop
test
mov
fwait
nop
sub
addl
aam
inc
fdivl
jg
cmp
pop
jp
dec
and
vpunpckldq
sub
cli
pop
inc
pop
es
cmp
or
clc
inc
cmp
xchg
call
cs
lea
aad
aas
xchg
adc
outsb
idivl
js
jnp
iret
loopne
pop
cltd
cmp
and
jge
push
mov
in
fnstcw
and
in
stos
adc
dec
je
loop
enter
push
iret
dec
fwait
pop
dec
test
cld
in
aad
xor
xor
inc
lock
lret
ss
dec
movsl
adc
nop
jo
sub
inc
or
les
clc
iret
dec
icebp
and
jmp
enter
imul
dec
aam
push
out
sahf
push
iret
fcoml
xchg
xchg
or
cmp
mov
scas
imul
daa
shlb
decl
push
inc
pop
std
xor
lock
sub
jne
outsb
xchg
mov
sarl
pop
rolb
out
pusha
mov
int
pop
sbb
mov
mov
nop
mov
xor
sbb
push
mov
mov
xorl
shll
arpl
sbb
imul
sub
nop
shlb
jl
jle
pusha
or
iret
sub
sbb
aam
jge
js
cwtl
lret
jne
addr16
inc
dec
jbe
divl
out
cld
das
cmpsb
mov
nop
or
sub
adc
aam
inc
or
push
pop
dec
and
jg
mov
jbe
stc
xor
pop
leave
cmp
repnz
adc
sarb
or
xchg
fbstp
movb
mov
pop
pop
fisttpll
andb
nop
push
mov
or
into
aad
sbb
out
jne
mov
add
xchg
cmp
iret
iret
xchg
jne
or
inc
rcl
sbb
mov
sbb
pop
mov
adc
mov
cmp
jb
aas
mov
mov
cmpsl
inc
sub
mov
lahf
sar
cli
xchg
push
outsb
sahf
xlat
nop
mov
out
lahf
jge
push
jl
fdivrs
or
in
cmp
push
sub
fwait
repnz
fiaddl
jo
nop
pop
or
push
push
sbb
xchg
mov
imul
stos
gs
repz
jge
scas
mov
cmpsb
pop
outsl
xchg
push
loop
lods
push
stos
mov
xchg
ljmp
and
enter
kmovb
jo
jnp
and
call
test
je
cmp
push
dec
push
xchg
popf
fnstenv
pop
enter
and
and
xor
shlb
sub
bound
xorl
or
fs
or
xchg
ljmp
jmp
push
fdiv
pop
insb
std
mov
cmpsb
mov
jle
push
scas
push
outsb
popf
insl
mov
sub
lods
mov
scas
cmp
adc
ljmp
mul
push
fdivs
dec
aas
nop
jmp
pop
cmp
jnp
inc
fdivrp
test
push
inc
dec
aam
xchg
add
sar
fcomi
lret
sub
js
call
mov
mov
jnp
adc
mov
mov
sarb
sbb
sti
and
inc
lret
push
lret
cld
mov
nop
hlt
sbb
push
sbb
cmp
subl
push
pop
daa
outsb
adc
pop
mov
gs
mov
aaa
sub
lods
jg
hlt
push
push
push
aas
xchg
hlt
push
jb
xchg
jbe
and
daa
fdivl
mov
in
cs
popa
lret
je
xlat
cltd
mov
jno
ljmp
mov
out
dec
sti
aas
aad
jns
xchg
ljmp
mov
mov
add
xlat
repz
std
addl
ss
pop
es
test
xchg
sub
repz
ret
xor
mov
lock
das
and
adc
sbb
mov
int
fstpt
jg
lods
pop
ja
sub
add
sbb
out
sbb
jbe
repz
jp,pt
pop
pop
push
fs
cs
pop
ljmp
and
aad
sub
xchg
push
pop
adcl
loope
fisubl
movsl
xlat
scas
mov
addr16
or
insl
mov
push
inc
cmp
fxch
shl
xor
jmp
add
les
ret
pop
insb
cmp
sbb
repz
xchg
inc
pop
adc
sahf
inc
jp
lds
scas
xchg
je
sbb
hlt
test
jecxz
add
mov
pop
insl
sub
pop
aad
xchg
out
and
repz
pop
inc
push
subb
mov
movsb
fstps
sti
push
stc
aam
nop
mov
lods
mov
mov
sbb
repnz
adc
xchg
popa
jnp
xchg
negl
sub
call
mov
in
out
sahf
dec
mov
xchg
ss
xchg
jg
push
jb
mov
mov
in
test
sbbb
inc
out
or
call
ret
mov
mov
nop
pop
outsb
mov
push
cmovbe
imul
adc
insb
dec
ja
mov
add
push
xchg
popf
movsl
inc
xchg
mov
or
push
mov
jne
dec
mov
inc
xchg
push
icebp
sbb
repnz
push
ja
mov
sub
mov
out
mov
cmpb
add
test
pushf
das
mov
jns
mov
decb
xchg
movsl
mov
hlt
std
adc
fcoml
arpl
cmp
xor
xor
lods
push
mov
pop
xchg
inc
ficomps
inc
push
mov
nop
ret
jno
jns
lahf
sub
add
scas
loope
sub
xor
xchg
repnz
or
dec
clc
xor
push
sub
out
enter
push
repnz
in
or
dec
xchg
sbb
rcrl
xchg
js
divb
pop
ja
test
push
cltd
repnz
add
mov
int
add
push
mov
int3
push
adc
in
mov
incb
mov
and
pop
jns
out
icebp
loopne
aad
xchg
pop
add
lods
mov
sub
mov
arpl
test
ss
js
adc
shrl
daa
pop
aaa
adc
fcompl
mov
xchg
repnz
inc
xchg
sub
mov
xchg
mov
mov
jno
bound
xchg
jmp
mov
clc
and
fcmovnu
shll
pop
pop
cld
jne
out
repnz
pop
sbb
aam
arpl
sbb
or
aas
adc
lds
sub
mov
mov
aam
imul
leave
cwtl
or
fwait
int
fbld
jbe
daa
push
repnz
fisttpl
add
or
mov
fs
icebp
test
cltd
push
cmpb
das
scas
mov
mov
scas
xchg
inc
ja
or
addb
in
popl
iret
and
loope
faddl
jecxz
leave
push
cli
ret
add
ja
jg
mov
add
add
aas
push
into
jnp
adc
xor
test
outsl
mov
inc
test
or
imulb
scas
mov
cltd
pushf
xor
inc
js
clc
ja
sbb
xchg
sub
dec
add
xchg
push
fildl
mov
fcmovbe
mov
mov
jg
out
test
sub
outsl
fstpt
in
pop
lahf
test
shlb
cli
inc
jno
push
mov
aad
ror
cwtl
pop
cs
push
adc
pop
cmpsl
mov
imul
loopne
or
jle
outsl
inc
fmull
pop
xchg
out
mov
ljmp
aaa
lcall
dec
ret
test
shr
fs
ret
gs
scas
aad
cld
inc
and
aam
popa
cmc
nop
out
loopne
out
aam
gs
xchg
xor
mov
jle
stc
fwait
xchg
adc
xchg
xchg
cmp
jb
and
jno
ja
xchg
and
mov
jge
jmp
jnp
mov
jg
mov
pop
gs
xchg
outsl
test
stos
loope
sbb
dec
fmull
cmpsl
loope
js
xlat
test
mov
sbb
xchg
repz
add
pop
dec
call
push
negb
mov
sahf
add
jne
test
pushf
mov
cmp
scas
in
mov
sub
in
fs
pusha
or
or
aad
mov
mov
push
dec
mov
enter
push
es
adc
inc
push
xchg
repz
mov
adc
jmp
negb
lret
mov
in
icebp
jbe
lret
popa
nop
xor
sub
mov
and
push
adc
std
mov
stc
adc
andb
add
insl
inc
icebp
mov
orb
jecxz
mov
std
mov
jmp
xchg
xor
dec
sub
cwtl
cmpsl
jnp
cmpsl
fs
xor
sub
push
mov
aaa
shll
outsb
leave
mov
pop
inc
fs
out
cmp
cmp
cmc
int3
mov
pop
lret
lds
sub
aad
push
cmp
fiadds
popl
lods
jecxz
pushf
scas
adc
xlat
push
stos
jae
pop
notb
loope
mov
and
jmp
movsb
xor
movsl
in
lret
cs
pusha
std
cmp
xor
push
in
jg
xchg
jbe
sbb
jno
cmp
nop
mov
inc
ds
xchg
push
jo
stos
xchg
cmp
push
out
sbb
imul
subb
and
iret
ficompl
mov
out
pusha
inc
sbb
add
pop
iret
add
pop
inc
or
cmp
jp
inc
int3
push
add
orl
iret
mov
xor
pop
lret
xor
insb
or
aas
std
dec
or
xchg
mov
nop
mov
mov
testl
jle
push
dec
or
fmuls
nop
mov
xor
jnp
fsubrl
bound
jmp
fstps
sbb
xor
adc
mov
inc
sub
repnz
fxch
push
into
outsb
pop
daa
inc
jge
sub
ret
popa
scas
nop
mov
inc
jbe
sahf
mov
stos
add
xchg
mov
dec
outsb
and
mov
adc
jne
xor
mov
adc
scas
shrb
cmp
mov
cmp
push
add
sub
sub
adc
jb
mov
jg
push
or
sbb
adc
out
insb
push
mov
pop
mov
in
ja
jne
jns
inc
inc
xchg
fists
jns
xlat
sbb
es
and
sub
nop
out
dec
arpl
in
push
or
rcll
push
popf
test
stc
or
out
inc
cs
lret
bound
loopne
out
add
sub
les
in
mov
stos
jbe
inc
mov
push
xchg
dec
cmp
xchg
mov
addr16
sbbb
mov
daa
mov
mov
call
into
scas
jmpw
hlt
inc
aam
sar
add
iret
xchg
cmp
lods
xchg
cmp
mov
mov
push
lods
pusha
cmp
add
cltd
mov
mov
mov
aad
leave
test
insb
jg
add
movsl
mov
ja
stos
push
inc
sbb
in
push
loope
lret
push
jbe
push
adc
push
or
mov
or
inc
icebp
xchg
adc
jne
nop
or
mov
shl
andb
addr16
mov
push
out
push
bnd
int
test
and
insl
nop
mov
test
outsb
lret
sub
aas
push
cmp
fnstsw
movl
or
aam
mov
push
mov
cmpsl
test
adc
mov
pop
and
pop
adc
sbb
and
cmp
mov
and
jp
aad
loopne
sbb
popf
cltd
nop
in
pop
jp
dec
test
ljmp
mov
cli
inc
js
out
mov
fimuls
scas
addr16
scas
push
jge
inc
mov
xchg
repz
inc
scas
mov
fnstcw
add
fidivrl
jg
jecxz
aad
xchg
pop
jns
leave
sub
inc
add
jp
mov
mov
xchg
repnz
pop
pop
inc
pop
mov
out
lock
stos
add
imul
inc
push
cltd
jmp
mov
cmc
stc
filds
mov
fidivl
stos
mov
sub
fldenv
jg
loope
call
inc
cli
in
mov
ret
aad
add
push
sub
insl
cmpsb
decl
jp
sub
xor
adc
lret
fstpl
mov
pop
dec
iret
push
jmp
nop
push
sbb
jp
repnz
jge
jp
ret
sbb
movsb
xor
sub
add
lods
xchg
sbb
pop
xchg
popa
fcmovnbe
int3
out
loope
test
mov
add
jge
adc
sti
ss
xchg
dec
xchg
test
sbb
not
outsb
and
test
and
cld
cmpsl
jge
mov
mov
out
pop
inc
push
pause
lret
int3
lock
rcrb
and
push
stos
adc
aad
mov
cmp
mov
xor
inc
lods
adc
push
mov
movsl
mov
bound
add
xchg
jg
cmp
out
inc
ss
ljmp
mov
rclb
ljmp
imul
pushf
outsb
es
jge
inc
pop
and
leave
xchg
loope
xchg
push
lea
in
adc
imull
mov
cmc
testl
pop
mov
imul
mov
xlat
xchg
or
mov
mov
aam
adc
fisubrs
adc
test
shrb
in
mov
cwtl
daa
insl
pop
mov
push
sahf
nop
sbb
sbb
shr
sbb
xchg
add
mov
add
stos
jl
and
orl
loop
mov
mov
icebp
aam
movsl
movd
push
dec
das
nop
cmpsw
pusha
into
jecxz
imul
sti
scas
rcrl
cltd
rcll
add
sub
ja
pop
scas
test
stos
jp
sbb
jo
stos
loop
sbb
and
out
sub
imul
fcmovb
adc
int
addr16
cmp
jae
jae
xchg
loope
addr16
push
mov
mov
xchg
mov
mov
mov
jp
jns
and
dec
xor
rcrb
insl
mov
add
xchg
out
dec
test
xor
fucomi
outsb
mov
sbb
pop
push
mov
rol
inc
adc
xchg
pop
stos
pushf
xchg
mov
xchg
insb
jl
lods
jns
jno
push
gs
jmp
movsl
adc
je
and
negl
pop
leave
adc
mov
sbb
jmp
inc
mov
pop
dec
xchg
lsl
adc
ljmp
xchg
outsl
sar
jnp
faddl
jbe
sbbl
cmp
push
xor
xchg
xor
dec
scas
fiaddl
gs
outsb
xchg
stc
xchg
cwtl
loop
and
add
pop
iret
iret
dec
icebp
fs
shlb
in
in
inc
jmp
and
mov
aam
pop
xchg
lret
lock
outsl
mov
lock
mov
pop
or
fldenv
aad
stc
gs
icebp
mov
mov
cmp
ret
push
lahf
mov
imul
pop
xlat
call
nop
pop
add
push
push
sub
int
inc
pop
and
pushf
mov
or
lea
in
js
pop
xchg
rorb
fwait
jne
addr16
xchg
or
xchg
popf
adc
std
xor
mov
add
adc
jle
sbb
fcompl
or
int
int3
stos
jb
cmp
lret
ret
mov
sbb
inc
mov
arpl
xor
or
dec
mov
jg
adc
push
adc
pop
jp
hlt
mov
out
mov
pop
jnp
or
mov
fidivl
or
mov
gs
dec
mov
sarb
add
pop
mov
dec
add
push
xor
bound
or
sub
sbb
lret
cwtl
mov
mov
cmpsb
out
ror
js
xchg
push
inc
add
std
mov
iret
out
insl
pop
pop
dec
jbe
repnz
out
roll
mov
call
xchg
sbb
inc
inc
das
rcrb
jo
or
scas
addr16
out
mov
mov
lret
test
push
jno
ret
clc
ja
sbb
outsl
nop
outsb
in
adc
mov
sub
pop
pop
or
mov
cmp
push
hlt
xor
mov
sbb
and
add
cmpsb
loopne
fsubrp
nop
adcl
xor
jns
push
add
sbb
mov
jmp
jb
mov
aas
mov
pop
add
gs
push
aam
loope
mov
jmp
xchg
sbb
xor
add
and
cltd
push
nop
jge
mov
push
in
stos
mov
ds
pop
shll
out
xlat
ss
add
dec
nop
jge
scas
cmp
in
sbb
jl
test
mov
xor
aas
pop
add
popw
in
fcoml
imul
sub
pop
sbb
cltd
xchg
add
xor
xchg
adc
subl
loope
inc
in
push
shrl
sub
jle
jns
cwtl
mov
pop
nop
pop
push
js
push
ja
cmp
in
or
xor
pusha
inc
lds
loope
mov
bound
mov
leave
xchg
mov
pop
mov
xor
mov
dec
push
xor
mov
call
fdivs
cld
mov
pop
fdivrl
int
xchg
push
iret
fs
stc
repnz
popf
dec
fistl
add
adc
lcall
pop
push
enter
leave
and
xor
iret
gs
es
xor
mov
incl
lahf
push
adc
inc
cmp
inc
psubsb
hlt
pop
lcall
pop
adc
sbb
sub
xchg
sbb
gs
pop
and
ret
scas
adc
pop
sbb
out
pop
jl
and
pop
or
iret
imul
negl
and
adc
mov
and
pusha
or
mov
jge
jo
cmp
mov
sbb
jecxz
int
mov
push
push
mov
jl
push
sbb
stos
mov
aaa
xor
outsb
or
pop
xchg
test
dec
sti
mov
jle
push
sahf
fnstenv
rcrl
movsb
mov
scas
aad
repnz
mov
faddl
in
mov
cld
loope
push
sub
xor
and
mov
mov
jo
sbb
ret
xchg
cmp
ret
aam
shlb
push
sbb
push
cmp
loopne
mov
loopne
jae
in
insl
push
mov
add
nop
sub
in
stos
lods
cmpsb
pop
ss
jmp
xchg
stos
int3
dec
imul
decl
imul
inc
xorl
scas
sbb
fisttps
jl
pop
jmp
fimuls
mov
mov
sahf
lret
subl
arpl
rcl
adc
mov
fdivrs
test
bound
loopne
sbb
aas
shlb
pop
inc
xchg
pop
mov
shl
lret
ror
lret
repnz
jg
cmp
loope
pop
add
push
push
mov
ja
scas
insl
popf
roll
dec
push
mov
add
cli
rdmsr
mov
xor
test
mov
scas
or
xchg
cld
nop
lds
lret
rorl
test
or
adc
lret
inc
clc
mov
adc
movsl
hlt
xor
je
xchg
xchg
or
lret
mov
out
lahf
rolb
mov
mov
or
cwtl
sbb
loopne
mov
je
imul
rcll
aam
sarb
or
iret
xchg
ja
fcompl
aam
add
pop
mov
dec
decb
push
cmp
pop
xchg
icebp
hlt
cmp
cltd
sbb
repz
fldenv
dec
mov
divl
into
lock
loopne
cli
scas
testl
addr16
mov
outsb
scas
hlt
mov
dec
pop
addr16
sub
stos
sbb
out
mov
in
test
lock
pop
jg
or
xchg
imul
inc
and
cmpsb
mov
xor
popf
lcall
xchg
mull
pop
sbb
fidivrs
dec
insb
ss
out
sbb
xchg
xor
sub
aaa
dec
inc
lock
pop
int
nop
jb
push
ljmp
sub
mov
aaa
jne
es
mov
inc
sahf
loopne
rcll
cmp
into
push
xchg
adc
fsubr
dec
mov
fisttpl
pop
push
push
dec
in
inc
ret
div
add
daa
push
cmp
cltd
out
scas
clc
xlat
mov
into
mov
in
mov
inc
xchg
inc
mov
push
adc
adc
iret
daa
and
push
ret
or
loop
sbb
clc
mov
pop
sub
lret
cmp
ret
gs
cli
sub
mov
popa
test
ja
xchg
sub
mov
mov
fidivs
imul
xor
dec
je
test
popl
out
add
dec
fisttpll
pop
or
or
pop
jb
push
dec
mov
outsb
daa
call
inc
mov
dec
mov
ja
lods
cmc
iret
sub
jp
sbb
loope
and
stos
mov
mov
mov
inc
int
xchg
xor
xor
iret
fbstp
test
mov
push
push
and
or
jge
lcall
sub
stos
andb
sbb
dec
clc
outsb
sub
mull
inc
xchg
test
push
rcll
mov
mov
repnz
xchg
lods
push
sub
call
orl
test
jecxz
out
out
shll
sbb
add
or
push
in
jns
hlt
dec
js
js
adc
mov
in
inc
pushf
jbe
or
xchg
shll
jne
or
jns
pop
mov
movsl
mov
xchg
dec
xchg
xor
stos
int
mov
loop
mov
push
ret
mov
push
add
push
negl
repz
xor
arpl
scas
adc
jo
push
idivl
insl
popa
push
push
cld
sbb
ret
pop
cs
cmp
data16
xchg
sub
test
or
cmp
popa
lock
add
out
xor
shl
pop
and
clc
sub
stos
sahf
xor
leave
inc
testb
xchg
push
testb
in
insl
mov
sbb
sbb
jecxz
push
movsw
lods
xor
scas
in
je
pop
adc
dec
shl
xchg
jl
lahf
mov
bnd
xlat
cmpsb
push
lods
aaa
sahf
mov
das
imul
repnz
xlat
in
xchg
jne
add
lret
push
jge
xchg
in
inc
xlat
scas
lds
pop
push
dec
xlat
iret
test
inc
popf
xlat
jae
movsb
mov
mov
mov
xlat
lock
das
ret
dec
xor
cmpsb
xlat
out
xor
add
enter
push
outsb
mov
gs
fwait
mov
je
in
mov
stc
ret
pop
cmpsb
cld
push
push
adc
sbb
add
xor
xchg
sub
in
mov
rorb
rcrl
rcl
xor
mov
push
cmp
daa
iret
push
sub
addr16
js
enter
jno
aad
sub
jmp
movsb
daa
xchg
xlat
xor
push
enter
or
pop
pop
pop
test
movsl
out
lahf
xchg
test
cmpsl
or
and
pop
push
loopne
shl
cmp
cmpb
xlat
popf
inc
daa
lahf
push
push
xor
mov
mov
xor
repz
xlat
test
pop
jno
xlat
stos
arpl
js
or
test
push
pop
sti
jp
xlat
daa
clc
xor
mov
es
insl
sbb
int
shll
fsubrl
add
ss
mov
negb
sbb
cmp
cltd
xchg
xlat
jp
sbb
pop
gs
mov
scas
in
xlat
jmp
dec
add
test
or
out
lret
xchg
out
out
aaa
xlat
int3
fidivrs
les
mov
rcrl
dec
mov
lods
fs
lahf
xor
repnz
push
xlat
into
cmp
inc
jmp
nop
andb
sub
inc
cmp
jle
aam
cmp
jl
sbb
mov
inc
mov
xlat
jb
adc
icebp
out
orb
adc
imul
xor
jo
cld
iret
xor
xchg
daa
mov
push
cmpsl
fidivl
iret
dec
xchg
dec
and
xor
xlat
subl
not
das
cld
fidivl
xlat
inc
loopne
lret
sub
mov
push
rcrl
ret
pop
xor
jns
jmp
or
inc
repnz
je
push
and
addr16
mov
rcrl
inc
cmp
xlat
fistl
jne
xlat
mov
mov
mov
jb
push
sbb
fsts
inc
push
int
add
adc
inc
and
in
rolb
push
xchg
movsb
in
xlat
fists
popa
cmp
or
push
rcll
pushf
push
ds
add
roll
popf
out
lea
dec
outsb
clc
jle
test
into
inc
jns
test
icebp
cmc
pusha
mov
pop
cwtl
iret
mov
out
test
sbb
push
xchg
xchg
scas
mov
xor
in
jbe
mov
xlat
adc
fs
xlat
mov
push
pop
and
sub
xlat
pop
jns
fcoms
and
and
inc
push
mov
dec
xlat
adc
enter
pushf
fmull
cmp
mov
sbb
xlat
jl
int3
into
xor
popf
mov
jg
shr
pop
scas
adc
or
pop
inc
fs
sbb
or
lods
stos
xchg
xlat
stos
imul
je
addr16
push
insl
pop
cmp
push
xlat
aad
pushf
nop
xchg
in
rcl
inc
push
loop
gs
push
inc
cltd
xor
mov
icebp
xlat
lahf
xchg
aam
xor
sti
faddl
stos
xorl
xlat
pop
hlt
mov
or
add
xlat
sbb
sub
icebp
xlat
push
addb
xor
pop
sbb
push
aas
aam
jmp
push
xlat
sub
mov
xchg
scas
cmp
add
dec
jmp
in
cli
xor
movsl
cwtl
push
mov
fistl
xlat
push
test
sbb
xchg
ret
xor
jge
jb
adc
xchg
xlat
fwait
shll
shl
dec
icebp
mov
adc
fstpl
outsl
enter
adc
pop
negl
or
das
mov
sarl
sub
in
dec
inc
mov
popf
ret
test
sbb
fsqrt
cwtl
mov
cmp
gs
sar
xorb
dec
xlat
add
sarl
mov
bound
pop
xor
pop
push
rorl
push
sbb
rcll
cwtl
mov
and
pusha
imul
push
cli
add
jecxz
testb
xlat
sub
fcmovne
mov
sub
fdivl
icebp
lcall
pushf
xchg
jle
aaa
outsl
adc
xlat
mov
insb
jg
jmp
mov
sbb
sbb
in
xlat
mov
sbbb
xchg
xlat
adc
adc
add
cmp
sub
jmp
mov
aam
xchg
sbb
adc
lahf
sub
mov
lret
rcrl
clc
outsb
push
xchg
xlat
adc
test
addr16
rorb
inc
add
push
bound
inc
outsb
iret
xchg
imulb
sbb
jbe
lods
iret
push
xor
lahf
add
rcrl
and
stos
push
test
sbb
or
cmpsb
jno
inc
sbb
ds
or
cmp
mov
jns
push
dec
xlat
test
sbb
fcmovnbe
les
dec
or
sub
adc
ja
sub
cmpsb
iret
xchg
lcall
dec
imul
mov
out
fldenv
jne
fiadds
sub
adc
jge
out
addr16
xlat
pop
push
and
xchg
pop
in
adc
mov
mov
push
xlat
xor
cmp
xlat
mov
call
mov
lcall
pop
push
xchg
mov
fiaddl
adc
jnp
xlat
mov
push
sbb
jl
orl
pop
push
add
movsb
inc
xor
and
sahf
mov
aad
int3
mov
push
lods
ficompl
push
pop
ror
add
fst
in
sub
jo
mov
jl
aaa
sarl
sbb
xlat
xor
jae
jl
mov
xlat
aad
push
scas
xchg
lods
inc
rcl
mov
lret
or
xlat
inc
call
outsb
jmp
mov
addr16
lret
mov
out
xlat
xchg
les
pop
in
fidivrs
xchg
xor
test
pop
jno
cmp
sahf
xchg
pop
mov
incb
dec
cmpsl
je
shlb
xor
mov
xlat
rcrb
aam
in
add
sbb
add
test
jns
jg
jb
dec
ss
add
xlat
sub
insl
sub
mov
or
std
inc
sti
xlat
and
es
pop
aad
mov
pop
push
nop
xlat
jle
repz
and
xchg
imul
xor
lods
pop
adc
pop
xlat
pmulhw
int
daa
jno
xlat
hlt
pop
mov
fcmovnu
inc
imul
xlat
loop
dec
mov
and
pop
shr
inc
adc
sub
int
mov
in
mov
lock
test
popf
jl
xor
adc
add
xchg
aam
sbb
jbe
push
sarl
cmp
in
xlat
out
lret
pop
sub
test
shrl
cwtl
addl
ror
push
xchg
adc
or
out
sbb
aaa
leave
xlat
add
push
mov
sahf
or
lock
mov
mov
inc
xlat
clc
ret
sub
xchg
shr
lods
add
cmp
repnz
faddp
out
in
adc
adcl
dec
and
test
lcall
sub
shlb
mov
insl
in
sub
and
fsubrs
stos
test
push
sub
addr16
mov
xor
pop
lret
vpmacsww
sbb
stos
in
clc
repnz
lahf
mov
jno
js
sbb
pop
je
test
fistps
xlat
and
xchg
jb
mov
mov
shlb
dec
ret
outsb
sti
in
aas
ffree
cmpsb
std
in
fbld
jnp
es
pop
add
ret
xlat
push
push
ds
jle
cmc
adc
repz
jge
roll
mov
xchg
push
jb
int
cmc
fiadds
sarl
jnp
fwait
jmp
imul
adc
xorl
mov
push
ret
shrl
jge
cwtl
mov
les
adc
fwait
idivl
xor
mov
dec
and
mov
inc
popa
out
mov
jle
or
mov
fstps
push
int
scas
movsb
mov
aaa
int3
aam
lock
lahf
js
mov
out
xlat
xchg
mov
daa
dec
mov
imul
dec
mov
jo
push
sub
sub
ja
add
sbb
push
ret
nop
cmp
inc
or
dec
or
sub
xor
insl
aad
test
cltd
loope
xchg
test
shr
or
push
data16
js
shl
fsub
push
repz
les
and
mov
pop
mov
cmp
sub
dec
mov
or
jbe
ss
fwait
daa
pop
inc
movsb
cmp
jmp
jle
cmp
subb
in
mov
fs
test
inc
xor
movsb
loope
repz
adcl
or
aas
mov
pusha
daa
sbb
inc
fstpt
jmp
and
jl
push
fstpt
negl
leave
xor
fcompl
inc
jp
cmp
pop
pop
nop
jg
mov
icebp
loop
add
rcrl
gs
aaa
mov
sti
out
sbb
sub
push
lcall
loope
lock
iret
fsts
sub
xchg
jl
out
inc
cmp
jno
movzwl
or
push
and
cmp
cld
xor
mov
xchg
mov
repz
test
and
in
pop
lea
cmpsb
fimull
cmp
push
mov
iret
jecxz
test
push
adcb
jmp
gs
add
pop
dec
push
ds
imul
sub
scas
pop
aaa
decb
cmp
dec
mov
lock
outsb
test
push
xchg
repnz
loopne
loop
mov
jp
aad
movsb
and
pop
jp
cld
rcr
ljmp
sub
mov
call
ret
jbe
aad
push
test
push
mov
xorl
sti
push
stos
mov
mov
test
jno
mov
aam
hlt
aaa
in
or
outsb
adc
adc
lock
jb
jae
or
enter
sbb
pop
mov
jnp
lcall
std
push
popf
sti
out
xor
mov
rcl
out
adc
lea
push
pop
vcomiss
rorl
jl
shlb
jmp
add
out
jmp
jmp
mov
lock
pop
popf
enter
dec
mov
iret
jmp
sub
and
push
aam
and
lock
ret
aam
mov
cmp
inc
icebp
out
lret
addr16
xchg
int3
pop
mov
xchg
push
mov
xchg
dec
xchg
inc
mov
mov
xor
out
aam
roll
nop
dec
add
cmpsl
mov
adc
clc
clc
fsub
nop
mov
jmp
gs
or
pop
add
pop
fbld
out
xchg
pushf
insl
inc
neg
nop
xor
mov
push
mov
pop
fwait
scas
ss
push
pop
ds
std
cmp
inc
adc
xchg
in
fwait
jb
cmp
lods
or
inc
fs
adc
xlat
jle
das
mov
out
xchg
lods
pop
aad
dec
movl
xlat
insl
jl
push
xchg
cwtl
roll
cli
lods
loop
xchg
pop
fprem1
insl
add
test
xlat
cmp
rcrl
mov
sbb
sub
mov
das
bound
dec
jmp
jb
mov
jnp
pop
bound
dec
sub
outsl
jp
stos
cmpsb
cmp
pop
push
sbb
xor
mov
xchg
int
mov
xchg
call
sbb
ja
xchg
cld
jge
cmc
sub
xor
orl
sub
jle
xor
jne
sti
jp
mov
loopne
mov
mov
out
and
icebp
sub
push
imul
add
pop
fwait
repnz
xchg
push
dec
and
adc
pop
xchg
aad
loope
gs
repz
nop
pop
cli
jp
or
imul
addr16
mov
fldt
popa
std
jo
push
nop
subb
push
add
inc
addr16
js
push
xor
dec
into
push
jp
pop
fwait
fisttps
in
shr
sbb
scas
cmpsl
add
imul
out
or
mov
aaa
ja
rclb
xchg
imul
mov
inc
or
mov
adc
iret
imul
loopne
int3
repnz
and
add
jecxz
mov
and
xchg
clc
or
cwtl
xchg
out
fadds
mov
xor
ds
jle
aaa
and
fdivrl
sti
jg
loope
scas
inc
rorl
push
ljmp
bound
ror
jp
xlat
pop
sbb
mov
clc
filds
dec
movsb
jg
ljmp
xor
mov
movsb
pop
ret
and
out
dec
fsubr
mov
and
in
mov
idivl
inc
jo
fld
lea
in
mov
and
pop
mov
adc
mulb
fldenv
cs
xchg
imul
call
cli
dec
sbb
sahf
cmpsb
fisttpl
rorb
sub
mov
out
enter
adc
test
insl
cmp
repz
sarb
mov
xchg
push
out
adc
loopne
or
mov
addr16
pop
push
lods
and
nop
outsb
xorb
aad
push
mov
jo
sub
int
jnp
push
sub
mov
mov
xchg
mov
mov
push
ret
std
mov
enter
pop
mov
jle
mov
aad
and
outsb
jecxz
popa
loop
adc
lea
add
aad
testb
pop
aam
push
dec
and
and
jo
adc
cmp
cmpsb
fwait
mov
rcrl
xchg
lcall
xor
dec
sbbb
jl
stc
jmp
shr
push
adc
jns
lods
lock
inc
fcoms
pusha
scas
dec
daa
mov
out
rorl
xchg
stos
push
xchg
mov
fisttpll
add
cli
js
sub
aas
pop
ficoml
cmp
fs
and
and
aam
nop
test
aam
xor
xchg
inc
push
sub
fcomps
data16
scas
outsb
adc
out
dec
inc
sub
pop
movsb
mov
out
mov
jns
popf
cmpsb
rcrb
cwtl
mov
je
add
push
out
test
addb
push
add
xchg
xchg
ret
arpl
shll
cmc
ret
and
cli
xchg
mov
jmp
lds
jbe
aam
ja
adc
jae
imul
cmove
sub
xchg
loope
pushf
icebp
xor
scas
sbb
into
cmp
inc
imul
sub
xchg
rcll
push
jnp
fcmovnbe
jl
jns
scas
test
enter
xchg
fwait
inc
fstl
rcll
mov
inc
adc
jae
mov
icebp
push
sbb
xchg
push
stos
outsb
test
int3
enter
push
push
in
push
xchg
incl
push
sarb
and
outsb
adc
jnp
jne
sbb
mov
ja
scas
mov
out
cmp
bound
insl
enter
sub
psubw
pop
mov
sbb
jno
push
inc
nop
or
bound
test
add
mov
sub
bound
xor
lret
jecxz
lds
fsubl
data16
cmpb
adc
xor
pop
icebp
lods
rcll
nop
pop
dec
stc
xor
sbb
xchg
cld
cld
adc
or
mov
imul
cltd
movsl
rcll
fnstenv
fwait
pop
jb
dec
mov
pop
or
mov
daa
shll
es
sahf
lret
jmp
add
jge
test
push
les
movsb
shlb
dec
or
and
test
pop
pop
filds
or
sub
andl
or
mov
dec
nop
pop
daa
ljmp
shrb
push
mov
inc
notl
cld
insl
lea
js
aas
roll
jbe
xor
mov
shll
jp
adc
fsubl
add
pop
jbe
pop
push
jo
mov
pop
cmp
mov
inc
mov
loope
enter
jmp
jg
adc
aam
test
jp
or
xchg
xchg
inc
aas
push
loopne
and
insb
shrl
stc
pop
mov
push
mov
fnsave
inc
push
aam
sub
stos
add
loope
pop
mov
lock
aam
push
sbb
out
js
xchg
rorl
adc
xor
jb
dec
jae
test
pop
add
sub
cmpsl
lret
add
inc
xor
push
rclb
pop
in
cmp
mov
test
sub
mov
and
add
jno
xchg
test
aas
xor
cld
lahf
push
int
fistl
stos
ja
stc
lret
xchg
sbb
push
jl
xor
push
fldlg2
addr16
adcl
push
add
adc
je
iret
rorl
mov
stos
xor
lds
mov
in
int
dec
dec
imul
xchg
push
add
int
xchg
dec
fs
jmp
sbb
sbb
xchg
fisttpl
sbb
mov
xchg
and
dec
por
cmpsl
jmp
and
cmpsl
mov
dec
ja
sub
ss
jge
arpl
cmc
sub
add
add
aad
test
jp
and
push
dec
dec
push
cmp
or
mov
loopne
mov
scas
dec
movsl
aam
push
xchg
push
popf
aas
dec
stc
test
add
mov
inc
fiaddl
add
or
ret
mov
and
js
sarl
hlt
in
cmp
pop
pushf
mov
or
lea
inc
inc
inc
bound
add
mov
pop
xchg
es
xor
aad
or
pop
add
mov
or
push
outsl
xor
add
xchg
mov
pop
rcll
punpckldq
loope
sbb
lret
sbb
enter
push
mov
or
adc
sbb
dec
std
jns
enter
jg
mov
sbb
repnz
testb
cmovnp
xchg
and
bound
cmp
mov
pop
hlt
add
and
test
adcb
imull
ds
xchg
dec
in
add
test
xchg
imul
lret
mulb
sbb
xchg
insb
sahf
inc
rcr
mov
iret
add
hlt
nop
subb
nop
adc
std
push
and
add
lea
mov
and
je
mov
push
scas
mov
faddl
lahf
orl
xorl
cmp
xchg
call
rorl
mov
jno
repz
loope
aad
nop
es
adc
add
adc
mov
cli
add
sahf
ret
scas
xor
pop
repnz
lock
scas
lret
loope
fists
cmp
cli
push
jge
in
addr16
inc
f2xm1
mulb
pop
inc
idiv
test
pop
jnp
xor
test
dec
cli
push
sbb
hlt
aam
cmp
xchg
sub
insb
push
ds
jnp
mov
leave
xor
sahf
cli
add
popf
sbb
fisttps
lds
push
iret
imul
push
stos
adc
xor
jns
or
cmp
xor
mov
call
test
mov
pop
mov
rclb
leave
jl
push
nop
lret
out
dec
fs
je
rorb
sbb
xor
lea
sahf
rclb
std
inc
jmp
xor
leave
jge
sub
add
test
pop
mov
sbb
mov
jns
pop
xchg
idivb
shrl
popa
jge
lods
stos
push
dec
popa
inc
xchg
ret
sbb
and
sub
not
test
sbb
inc
pop
pop
repnz
and
scas
or
inc
aad
push
fdivr
inc
scas
mov
add
mov
aad
push
xchg
test
int
nop
add
xor
jb
xor
rorl
outsl
mov
mov
ljmp
jnp
mov
or
lods
xor
js
jnp
adc
jmp
dec
adc
mov
daa
dec
or
imul
push
pop
xchg
lds
leave
mov
push
dec
gs
mov
xor
mov
mov
ficompl
into
adc
scas
scas
push
nop
or
jge
inc
pop
pushf
and
cwtl
sub
mov
mov
push
cld
dec
xchg
jecxz
sub
jmp
testb
leave
sbb
in
xor
es
mov
xor
dec
sub
mov
idivl
inc
sbb
push
cmp
hlt
jge
mov
fcmovne
jns
cmp
je
nop
js
mov
aas
pusha
jo
call
je
jecxz
ret
adc
orb
or
mov
cltd
jmp
movsl
jns
push
js
mov
mov
sbb
pusha
pop
or
inc
in
iret
loope
mov
push
imul
mov
adc
imul
daa
aad
sub
insb
outsl
sub
and
cmp
roll
enter
out
dec
aas
adc
pop
xchg
pop
pop
push
sbbb
lods
lcall
nop
mov
and
mov
ret
and
inc
subb
and
inc
mov
xchg
mov
clc
adc
sub
sbb
int
dec
faddp
xchg
fmul
cmp
xorl
sti
xor
mull
xchg
xorb
mov
inc
xchg
cmpl
leave
jb
adc
cmpsl
add
popf
gs
xlat
sbb
mov
ja
in
mov
lea
aaa
in
lea
jae
mov
sub
sbb
mov
mov
pop
mov
xchg
repz
mov
ficompl
incl
jbe
adc
cmp
mov
adc
lret
jb
sarl
push
mov
push
push
aaa
pop
leave
xchg
mov
test
daa
pop
jne
sub
popf
xlat
mov
push
lds
cmp
inc
pop
ret
add
lods
loope
into
dec
in
xchg
shrl
addl
or
jle
mov
ret
sub
mov
push
inc
fiaddl
les
jb
test
push
hlt
pop
sub
or
mov
daa
pop
add
add
and
jae
sub
push
dec
xchg
mov
sub
lea
hlt
lds
sub
lods
mov
imul
mov
das
out
mov
push
jl
outsb
loopne
out
out
lret
xchg
dec
mov
dec
test
nop
lahf
cli
addr16
add
repz
movsl
pusha
gs
jle
dec
sbb
jnp
inc
or
orb
cmc
or
dec
push
out
sbbl
pop
push
jo
pop
je
out
daa
in
sbb
imul
ror
lret
xlat
push
repnz
or
cmpsb
xor
xchg
repz
xchg
jae
adc
inc
sbb
push
fistpl
das
bound
adc
sahf
or
push
addr16
nop
sti
sti
mov
test
add
push
mov
xor
push
iret
fdivrl
jne
je
mov
sbb
mov
and
xchg
sbb
push
in
lret
iret
mov
test
out
jecxz
xchg
mov
stos
cltd
and
add
adc
lock
xchg
call
mov
inc
rorb
jbe
nop
xchg
pushw
subl
rcrl
scas
dec
xchg
jno
sar
cmp
das
mov
int
pop
out
fs
jns
jae
fdecstp
scas
sbb
test
sub
fsubrs
mov
sub
pop
xchg
pop
cwtl
pop
mov
cmp
js
xor
cmpsl
sbb
push
fsubl
add
push
stos
inc
lods
push
mov
adc
or
rcll
cmp
pop
sbb
add
negb
xchg
outsb
push
dec
xchg
int
push
mov
adc
jbe
inc
pop
fcomp
jno
lret
ja
jecxz
fmul
fcompl
ficoms
lock
nop
mov
jo
and
idivl
sub
cmpsl
movl
leave
cmpsb
mov
dec
jbe
loopne
mov
xchg
adc
sbb
pop
mov
lds
pop
jmp
mov
inc
and
or
mov
fisttps
fdivr
outsb
xchg
ss
shrd
cmp
addr16
jg
sub
cmp
pop
xor
cli
sub
cmp
adc
jnp
pushf
daa
mov
cltd
push
jbe
sti
aad
fwait
sahf
ja
or
pop
xchg
arpl
test
imul
ret
adc
xor
mov
push
push
push
imul
inc
mov
jnp
mov
push
sbb
mov
cmp
xchg
mov
ficoml
pop
jno
in
call
push
sbb
sbb
in
lahf
xchg
bound
mov
inc
lahf
mov
jge
popf
sbb
jns
fildll
leave
mov
scas
jl
sahf
dec
xchg
push
and
xlat
and
insl
sbbl
or
aad
mov
dec
test
loope
pop
push
addr16
icebp
ret
loopne
jmp
dec
xchg
mov
ret
inc
je
movzwl
mov
repz
scas
pop
pop
xchg
and
or
jmp
push
xor
bound
inc
rclb
mov
fisttps
movsb
jge
inc
decl
sub
dec
pop
outsl
imul
sbb
dec
sub
cwtl
xlat
cli
or
sbb
jecxz
jns
dec
lret
xchg
cmp
push
fbld
cmp
xor
xchg
jnp
add
jmp
inc
insl
insl
aas
subl
mov
cmc
aad
out
push
pandn
and
inc
pop
and
sti
mov
jmp
movsl
add
testl
divl
insl
adc
mov
mov
xchg
test
in
xor
add
cmp
aam
pop
sahf
cmp
sub
sbb
fsubl
mov
sub
int3
sbb
stos
fs
loopne
jnp
sahf
mov
mov
mov
je
push
pop
jmp
mov
out
xchg
jl
sbb
daa
jl
test
dec
xchg
ret
fs
aad
call
cmovge
fwait
bnd
sar
cli
daa
decl
sub
sbb
xchg
dec
enter
and
xor
jnp
sbb
fmul
cmpsb
daa
stos
iret
xchg
lret
mov
add
daa
imul
subb
into
mov
mov
repz
jg
fbstp
jae
rorb
aaa
lcall
repnz
in
adc
leave
lret
mov
push
xchg
pusha
adc
iret
cmp
push
sbb
nop
xchg
insl
xchg
arpl
sahf
and
dec
testl
fdivl
mov
hlt
ret
sub
inc
rcrb
fs
jo
cld
cmp
addr16
jo
gs
aas
ss
push
mov
test
fsts
sbb
inc
dec
jge
in
test
xchg
nop
out
shl
inc
sub
loop
mov
push
dec
out
mov
aas
inc
jl
shrb
stc
pop
xor
aaa
fdivl
and
push
aam
lock
xlat
push
cltd
rolb
push
pop
out
mov
movsb
mov
sub
pop
sahf
out
lret
fadds
cld
sbb
inc
testl
pop
stos
inc
cmpsl
pop
jl
sbb
aaa
sub
aas
test
inc
test
pop
inc
nop
mov
lea
cmp
mov
sahf
mov
loop
pop
out
adc
mov
stos
movsb
push
xchg
inc
ja
fisttpl
inc
test
negl
sbb
dec
add
lahf
mov
inc
adc
inc
pop
hlt
cmp
repnz
mul
mov
movsl
loopne
xchg
mov
dec
repnz
jnp
push
push
mov
scas
push
xchg
out
inc
cmp
sbb
add
leave
jno
xor
xchg
sbb
mov
inc
in
jne
mov
push
xor
sub
lret
push
outsl
mov
sbb
scas
mov
test
jne
dec
xor
inc
push
jo
sahf
or
or
scas
xchg
mov
rcll
push
mov
add
out
inc
scas
ficompl
mov
sbb
movb
in
pop
mov
dec
jnp
mov
mov
out
cmp
ret
mov
lea
jg
jp
loop
and
jp
cmp
xchg
sub
push
dec
mov
mov
ret
cmpsl
adc
add
test
inc
scas
sbb
xchg
mov
out
push
adc
idivb
xchg
adc
xchg
sahf
je
rolb
push
sahf
xchg
mov
sbb
lcall
pmaxsw
sbb
into
sbb
lock
dec
xlat
push
push
xor
in
shlb
xchg
jge
jae
in
fucomp
xchg
sbb
daa
push
jmp
xchg
xor
pop
movsb
fidivrs
shrl
jno
adc
pop
aaa
dec
or
scas
jns
sbb
mov
ret
xor
scas
cld
call
roll
cli
push
xchg
xchg
xchg
pop
mov
jb
dec
fadd
or
xor
dec
stos
in
mov
sarl
xchg
mov
mov
lea
lahf
call
inc
imulb
inc
inc
addr16
push
push
es
aad
ljmp
ss
sarb
pop
or
pop
gs
cmp
xchg
xchg
mov
mull
ret
mov
call
add
xchg
or
sub
lret
dec
dec
inc
jns
mov
push
lods
das
add
jg
call
outsb
xor
and
add
add
inc
pop
jge
popl
nop
aam
cmp
push
les
or
out
int
leave
adc
daa
bound
jo
push
stos
faddp
push
scas
or
xor
ret
inc
inc
xchg
nop
loopne
jno
mov
cmp
insb
xchg
sub
ss
xchg
ljmp
lods
int
fsubl
lret
push
adc
xlat
fwait
mov
jecxz
sbb
xchg
xor
into
movsb
dec
aam
lcall
inc
sbb
cmp
scas
xchg
jbe
cli
fstps
add
xlat
xor
dec
cli
fwait
in
xchg
xchg
or
xor
and
jmp
dec
adc
jl
in
cmpsb
ficoml
ja
shrb
insb
test
imul
jl
xor
pop
mov
test
dec
jle
jmp
mov
ljmp
pop
sub
scas
and
pop
mov
sub
sbb
out
xchg
fistps
push
nop
lret
leave
pop
lds
pop
push
jle
pop
mov
pusha
or
cmp
push
mov
iret
jbe
xchg
cld
popa
adc
mov
ss
sbb
mov
int3
ljmp
lahf
mov
into
xorb
inc
mov
loopne
iret
out
movsl
inc
out
adc
add
aaa
adc
push
ss
lret
pop
int3
xor
in
pop
sub
lock
mov
es
mov
mov
imul
fpatan
pop
int3
fwait
mov
jae
pop
ret
stos
ss
jne
pop
jbe
mov
ds
fcompp
andb
push
in
shlb
aam
stos
cmpb
mov
leave
pop
cs
adc
inc
add
push
xchg
pop
dec
jns
add
or
daa
stc
aad
push
pop
push
mov
rcll
adc
jg
dec
aam
aaa
xchg
cmpsb
ret
lods
mov
mov
stos
adc
jns
fiadds
scas
pusha
pushf
add
ficoml
pop
cs
sub
out
cmp
xlat
xchg
scas
leave
sahf
xchg
nop
cmp
fiaddl
xlat
je
lds
push
into
loopne
xlat
out
xchg
mov
and
movsl
test
data16
pushf
mulb
pop
xchg
xlat
dec
ret
shlb
xlat
mov
mov
std
pop
xlat
out
int
mov
mov
mov
and
jnp
mull
inc
xor
push
cmpsl
pop
add
inc
push
pop
int
xlat
scas
mov
mov
insl
sti
dec
xlat
pop
mov
daa
mov
inc
cltd
push
call
mov
adc
xlat
es
enter
push
lahf
or
stos
repnz
inc
add
xlat
xchg
dec
cmp
mov
in
test
in
push
sub
mov
add
sarl
adc
dec
adc
jecxz
fs
sti
jbe
stos
and
xor
daa
mov
idivb
data16
xor
in
stos
int
ja
popf
xlat
xor
cmpsb
aas
mov
dec
test
loope
jbe
xchg
iret
scas
xchg
sti
inc
mov
xchg
cmp
push
sub
pop
xchg
fadds
cli
push
pop
out
mov
jmp
pop
add
aaa
popa
filds
cli
or
mov
jp
shll
or
add
mov
lahf
icebp
push
dec
and
rclb
jp
dec
outsb
push
xor
fstpt
xchg
movsb
mov
sbb
shll
sub
stos
add
adc
sub
mov
pop
inc
js
fnstenv
pop
mov
adcb
inc
out
ret
cmp
and
in
and
pop
data16
in
loope
ret
xor
jns
aad
sub
sub
pop
hlt
rcll
pop
push
add
ficoml
addr16
lahf
mov
xchg
imul
sub
shll
in
lds
fld
nop
xchg
mov
sbb
lds
sub
inc
mov
jbe
cld
pop
xor
xchg
push
ja
inc
pop
sbb
arpl
mov
jecxz
call
fdivl
sbb
or
lods
movsl
lods
xor
aaa
cmp
jg
mov
iret
aaa
pop
and
sbb
xor
lods
stc
mov
cmp
cltd
xchg
push
mov
jmp
cmpl
pusha
push
loopne
ror
adcb
mov
xchg
push
xchg
stos
jne
out
shlb
mov
mov
stc
insb
xchg
lret
lret
mov
and
ljmp
sbb
and
push
mov
sub
out
out
jmp
add
add
rorl
ss
pop
addl
in
mul
rcll
and
push
int3
mov
icebp
mov
or
or
movsl
imulb
test
xchg
out
cmp
and
gs
lret
mov
movsl
mov
dec
inc
add
xchg
cmp
mov
xor
jo
stc
scas
add
imul
in
and
xchg
gs
clc
inc
sahf
add
mov
fsubrl
and
jno
imul
icebp
lods
sbb
push
sub
ret
sbb
adc
and
call
cmpsl
xchg
leave
fisubl
aas
push
imul
xor
adc
insb
shll
push
shll
jp
aam
push
testl
data16
movntps
iret
scas
pop
mov
sub
dec
sbb
jno
xchg
inc
rclb
push
adc
mov
pop
push
repnz
rcll
icebp
dec
ffree
mov
subb
insl
mov
bnd
nop
push
stc
jae
inc
mov
in
mov
inc
and
push
cmp
dec
fwait
cmp
cmc
xor
dec
push
pop
dec
jp
add
imul
mov
jno
add
aas
push
mov
lods
jns
push
jne
sbb
fistps
cmp
or
mov
ja
mov
xchg
out
nop
call
xlat
movsl
xchg
mov
sahf
push
adc
loop
fmull
das
stos
subl
jmp
iret
xchg
out
mov
and
shrl
mov
enter
shr
addl
idiv
scas
sub
sub
mov
mov
mov
ja
dec
mov
sub
rcll
xchg
or
pusha
xor
mov
mov
sbb
mov
xor
mov
xor
or
fcomps
mov
jp
and
pop
rorl
test
xchg
je
int
sub
jnp
into
dec
mov
imul
cld
outsb
inc
loope
pop
and
ljmp
inc
jge
push
lret
pop
add
add
mov
sbb
mov
xchg
bound
xchg
cli
or
sub
addr16
out
sbb
mov
push
mov
iret
shlb
sbb
dec
push
clc
xlat
cwtl
repz
loope
push
cmp
xlat
sub
or
rcl
icebp
cld
das
rclb
jle
add
in
xlat
shrl
scas
jecxz
jns
push
aad
sbb
loope
cmp
loopne
mov
xlat
xor
sub
xlat
lods
std
movsb
mov
or
dec
shrb
pop
xlat
testb
jmp
dec
sarb
add
fs
aas
push
nop
lods
and
push
fsts
insb
fimuls
jle
sbb
jae
push
mov
out
or
mov
add
or
pop
lock
mov
roll
push
or
cld
sub
sbb
push
shlb
ss
stos
testl
jg
lea
or
sahf
xchg
jge
cltd
repnz
xor
mov
pusha
mov
fiadds
xlat
fildll
inc
fsubl
jo
in
push
mov
dec
loop
lds
lock
aad
lea
mov
mov
inc
cltd
sahf
pop
mov
pop
add
sahf
js
pop
mov
lea
jle
pop
ds
xchg
fsubrs
mov
cwtl
xlat
imul
dec
push
inc
sbb
cld
hlt
push
xchg
xchg
inc
mov
mov
mov
xchg
mov
or
mov
lock
aaa
dec
xchg
mov
jbe
scas
mov
sub
cmp
pop
and
mov
int
cli
movsl
inc
not
ret
orl
stos
adc
imul
aam
in
xlat
pop
movsl
lahf
lock
fs
scas
dec
sbb
and
fdiv
jg
in
rcrb
sub
pop
nop
add
pop
cmp
shll
aad
inc
fisubrl
adc
sub
xchg
nop
cld
mov
repz
mov
add
dec
addr16
out
sbb
pop
jge
mov
mov
gs
sub
sbb
movsb
cmp
ljmp
jmp
mov
push
insb
aas
add
and
hlt
paddw
inc
in
lods
mov
lods
pop
outsb
sarb
leave
and
adc
cmc
push
fildl
mov
jo
mov
lods
nop
add
and
test
xchg
outsb
pusha
mov
jmp
or
cmp
lock
add
push
adcb
insl
nop
push
out
pop
cmp
xlat
iret
xchg
xchg
dec
sbb
fidivl
sub
push
lret
jg
loope
add
adc
sahf
inc
adc
in
cli
pop
pop
hlt
mov
cmpsl
fldenv
stos
adc
and
nop
push
inc
jns
out
lret
jp
adc
rolb
imul
xor
mov
sbb
nop
inc
push
mov
imul
jb
je
leave
adcl
adc
sub
leave
icebp
inc
outsl
out
in
jns
fs
pop
push
inc
jnp
push
push
pop
enter
loop
test
js
outsl
nop
jnp
testb
sarl
test
clc
movsl
or
mov
mov
loope
and
mov
outsl
int3
pop
add
inc
scas
stos
sub
rol
out
bound
cmp
xchg
dec
int3
nop
cmp
cmc
ret
mov
int
nop
sbb
fs
into
xchg
aam
xor
scas
stos
imulb
cmp
jnp
jecxz
gs
mov
ror
mov
sarl
adc
mov
mov
pusha
inc
mov
jmp
adc
xchg
imul
subb
jp
mov
nop
cmp
fs
sbb
bound
mov
adc
jo
add
test
gs
pop
xchg
sbb
inc
aam
xchg
je
scas
mov
inc
adc
xchg
mov
lods
dec
jle
repnz
jge
cmpsl
sub
jb
daa
jg
mov
sbb
add
fildl
push
loope
popa
xor
mov
inc
xchg
xor
cmpsl
jbe
push
adc
nop
mov
xchg
xchg
adc
jo
mov
jne
fwait
iret
sub
push
insl
mov
subl
mov
sbb
outsb
pop
mov
pop
mov
and
ss
in
decl
aam
int
adc
jle
xchg
xchg
adc
push
icebp
cld
scas
enter
jmp
jae
xchg
mov
hlt
mov
mov
sub
sar
mov
gs
test
popf
lahf
cli
mov
jmp
sub
mov
lods
cmp
jmp
lock
xchg
mov
jno
repnz
cmp
xchg
lcall
clc
sbb
pop
mov
adc
movsl
jge
rorl
mov
icebp
inc
mov
adc
inc
insl
jl
inc
ljmp
and
adc
add
js
mov
sbbl
lea
pop
aam
fs
sbb
and
mov
xor
push
push
pop
cmpsb
sub
push
add
ja
nop
jle
testb
mov
test
fdecstp
mov
and
xchg
sahf
sub
xchg
lods
push
movsl
pop
mov
jno
xor
mov
mov
dec
jbe
fidivrs
inc
imul
ret
cmc
or
dec
and
adc
leave
cmp
pusha
sub
mov
xchg
je
xchg
ja
int
hlt
jecxz
push
mov
cmpsl
pop
xchg
cli
mov
xor
ret
repz
pop
cmp
addr16
pusha
lcall
mov
arpl
adc
lret
mov
test
add
pop
mov
xchg
adc
notb
sub
jg
xchg
in
and
mov
push
repnz
adc
in
mov
dec
int3
stos
pop
sub
mov
mov
imul
lea
lret
jbe
sub
xor
sbb
das
inc
xlat
stc
adcb
mov
and
mov
and
fbstp
mov
nop
xchg
test
mov
in
int
fldcw
or
aaa
rcl
movsb
ds
ja
ret
jnp
pushl
out
sbb
mov
xchg
aad
fdivrl
out
leave
aaa
test
mov
in
ret
insl
add
mov
inc
cmp
mov
add
hlt
dec
icebp
ljmp
xchg
pop
in
push
jbe
cld
hlt
xchg
mov
and
pop
jl
inc
fcmove
mov
outsb
test
sbb
push
test
dec
scas
jl
loop
or
into
fldcw
in
xchg
jae
pop
xor
mov
test
push
xlat
xchg
in
mov
sub
sub
scas
jb
stos
mov
xor
mov
or
ljmp
inc
ja
lret
ja
adcl
or
ficoms
dec
mov
mov
shrl
int3
call
decl
fs
aam
sub
mov
shl
mov
mov
add
divl
sbb
push
test
cli
fs
addb
add
fsub
test
nop
in
imulb
jne
cld
loop
cmc
inc
repnz
and
mov
scas
push
cmp
seto
arpl
mov
dec
push
xor
and
dec
mov
lretw
push
into
es
aam
outsb
and
fisttps
mov
nop
cmp
push
xchg
and
test
fistpll
mov
inc
dec
jne
fwait
sahf
ljmp
fstl
shl
or
push
sbb
stos
xor
sarb
jo
clc
pop
ss
dec
out
aam
mov
push
xchg
inc
cmp
sub
cmpb
sub
test
mov
add
inc
loop
push
jno
lret
and
repnz
lahf
sub
fcoml
xchg
ljmp
pop
mov
ficoml
mov
mov
in
dec
xlat
push
ss
pop
std
pop
rcll
loop
push
sub
or
xchg
call
push
leave
or
add
int3
or
loope
fcompl
popl
pop
out
and
loope
sub
int
out
add
sub
sbb
pop
mov
mov
mov
repnz
ja
push
xor
pop
cmp
and
aam
xor
pop
jge
repnz
mov
jae
push
xchg
repz
shrl
push
stos
jmp
xchg
loope
popfw
mov
push
clc
cmp
cltd
mov
jle
mov
repnz
aas
bound
add
xlat
aam
outsl
dec
aad
pop
inc
jecxz
jmp
daa
mov
jno
ss
test
addr16
jmp
cmp
dec
movsb
jbe
pop
cmp
pop
adc
dec
je
icebp
add
loope
dec
inc
dec
mov
call
sbb
push
loopne
ljmp
fwait
mov
dec
dec
jecxz
cmpsb
push
cli
jnp
shrl
xchg
aam
loop
mov
pusha
pop
shll
lret
lock
ss
mov
sbb
push
rcll
fs
push
push
sbb
cmp
ja
std
dec
in
or
aad
sub
jp
ja
scas
fs
hlt
jo
inc
cmp
mull
jl
xor
adc
fstl
jne
xchg
push
mov
jnp
xchg
mov
scas
in
mov
add
pop
outsb
and
adc
lock
adc
ds
cmc
inc
ffree
insb
dec
mov
fmull
mov
test
movsl
pop
mov
scas
pop
inc
lret
jb
mov
aam
mov
push
pop
insl
mov
ds
xor
call
nop
adc
add
scas
mov
push
test
test
pop
in
dec
mov
lret
mov
popl
pop
mov
mov
or
adc
pop
mov
cmp
ret
fnstsw
out
outsl
inc
out
mov
mov
jo
mov
push
test
jns
std
jnp
mov
test
rclb
mov
rclb
sbb
inc
repnz
fimull
mov
jp
sub
imul
cmp
outsb
sub
out
fsubl
fsub
xor
nop
insb
js
xchg
jbe
xor
jnp
hlt
add
pop
mov
and
ss
and
sahf
jge
sub
fcoms
add
inc
pop
ret
mov
cmp
xchg
pop
fdivs
push
mov
scas
mov
mov
pop
mov
xchg
jo
mov
iret
mov
jle
push
bound
jl
test
addb
test
adc
scas
pop
iret
sbb
test
mov
and
mov
xchg
lret
cmp
xor
loopne
arpl
mov
and
adc
adc
mov
bound
mov
mov
test
cmp
test
faddl
and
push
sub
xchg
nop
pause
in
std
ljmp
push
sar
inc
cld
sub
pop
xchg
xlat
jnp
pop
lds
pop
mov
leave
dec
movsb
jb
rol
dec
lret
pop
icebp
popl
sub
cmp
fdivrs
insb
repnz
stos
pushf
inc
pop
mov
aam
dec
adc
in
cli
hlt
fs
loope
push
lods
repnz
jnp
nop
fistpl
mov
jmp
nop
jo
call
mov
pushf
rcrb
xor
xchg
mov
mov
sub
fsubrl
dec
outsb
repz
sub
ficoml
scas
push
adc
sub
jo
hlt
pop
insl
clc
aaa
rorl
sbb
mov
sahf
lock
mov
iret
xchg
movsb
or
pop
bnd
rorl
mov
dec
mov
ljmp
rolb
rcrb
jecxz
fdivs
and
mov
fadd
adc
xchg
sbb
push
inc
inc
jns
cwtl
mov
jbe
icebp
push
xchg
push
dec
mov
dec
pop
sbb
nop
cmp
clc
roll
adc
enter
adc
fisttps
sub
jg
icebp
push
xor
lea
popa
sbb
adcl
cltd
jmp
sub
pop
mov
cmp
cmpsb
cmpsb
or
or
ja
roll
mov
arpl
push
sub
roll
and
xchg
int
or
inc
mov
xor
jmp
scas
clc
fwait
lock
push
arpl
dec
stc
inc
and
jle
xchg
sub
pop
inc
ret
rcr
and
add
cmp
iret
les
mov
aaa
xor
sbb
jbe
pop
fcmovbe
mov
dec
jae
mov
inc
xor
leave
xor
mov
notb
js
fldenv
fnstenv
ret
inc
and
add
popf
shrl
aam
movsl
stos
test
lds
scas
rclb
subl
aam
add
daa
pop
lahf
cs
test
arpl
out
out
push
or
adc
sub
jae
push
cwtl
sbb
fisubrl
scas
sub
jl
dec
pop
jmp
test
aad
or
mov
fsubl
cmp
sahf
ret
pop
imull
test
sarl
out
aas
xchg
jnp
mov
sbb
xchg
xor
push
test
jbe
inc
nop
gs
arpl
adc
push
mov
mov
shrl
push
push
outsb
fs
mov
pop
mov
rcll
lret
cltd
scas
lea
xchg
call
mov
sbb
jnp
in
rcll
push
xchg
testb
rclb
scas
adc
mov
test
pop
mov
jl
and
adc
pandn
mov
push
adc
mov
scas
xor
arpl
xchg
test
inc
inc
add
cld
or
mov
push
cwtl
jle
mov
aam
dec
es
jb
mov
adc
mov
setl
aaa
adc
lods
enter
sbb
adc
sbb
xchg
idivl
je
pop
inc
jg
sbb
rcrl
ja
lods
lds
sbb
nop
jnp
pop
xchg
fidivs
mov
dec
push
les
xchg
pop
mov
ret
inc
ja
out
mov
cmp
nop
enter
scas
pop
mov
pop
xor
cld
imul
jle
cmp
test
lret
aaa
cld
mov
sbb
xchg
sub
fcmovne
sub
cld
dec
inc
and
in
lea
add
sbb
fstpl
movsb
enter
repz
sbb
xchg
push
inc
int3
mov
mov
out
dec
mov
lds
mov
xchg
mov
fisubs
sbb
aam
adc
lds
mov
mov
in
ds
fs
jno
mov
orl
shl
mov
mov
mov
rolb
jmp
push
or
or
mov
ss
les
das
or
popf
cmp
fnstenv
and
mov
fimull
loop
push
dec
fistl
sub
test
inc
jmp
nop
fs
mov
or
mov
xor
or
lock
lds
inc
push
fcmovbe
lods
cld
sbb
stc
jns
mov
mov
incl
or
dec
inc
push
cmp
mov
dec
std
gs
fidivrl
lds
loopne
mov
es
dec
popf
jb
xor
jg
mov
js
cld
sbb
sub
test
xchg
mov
mov
xor
inc
nop
mov
int
nop
jns
shll
cs
or
jae
test
push
stos
inc
insb
xor
js
movsb
push
cmc
mov
gs
repz
mov
inc
insl
or
jb
mov
cltd
mov
cmpb
pop
in
pusha
and
aam
push
push
sub
dec
sbb
and
out
aad
mov
mov
subl
movsl
jae
into
iret
mov
push
fnstenv
mov
mov
adc
gs
adc
sub
pop
cs
notb
sarl
scas
mov
shlb
repnz
popl
mov
sub
dec
dec
imul
loope
loop
sbb
scas
xchg
lret
mov
rorl
sbb
fsubs
popa
xor
fstpl
cwtl
aas
pop
add
sub
fnstcw
add
lock
fs
jecxz
aad
nop
and
inc
fwait
gs
adc
lcall
aad
push
xchg
or
cmp
push
stos
pop
aam
push
xchg
sub
iret
mov
dec
jns
mov
inc
aaa
add
push
leave
sahf
ds
call
adc
sub
loopne
mov
xchg
and
push
push
aas
insb
icebp
sub
or
and
xchg
and
and
inc
ss
push
mov
pop
mov
cli
jo
pop
cld
jecxz
xchg
hlt
imul
and
ds
add
or
pop
test
mov
lret
inc
cmpsl
mov
jge
cmp
cltd
xor
adc
and
repnz
sbb
xchg
mov
rorb
push
in
into
test
shll
xor
ss
or
sub
add
mov
stos
orb
or
xchg
int
aam
mov
out
cmpsb
xchg
iret
xchg
subb
push
sub
jae
data16
mov
xchg
mov
jg
sub
dec
cmp
jbe
inc
mov
orl
mov
pop
fbstp
nop
pop
mov
push
daa
pop
sbb
xchg
mov
sub
fwait
adc
fstps
test
jbe
outsb
push
data16
or
into
lcall
in
add
jge
test
and
stos
adc
sub
or
mov
push
jge
dec
pusha
rolb
mov
ret
mov
dec
rcll
sbb
iret
mov
or
mov
push
cmp
jno
ja
fmull
push
xchg
cwtl
call
sbb
mov
mov
inc
add
push
loopne
ret
cs
cwtl
scas
or
xchg
or
sub
aad
push
xor
push
sbb
jnp
xchg
ja
fnsave
push
xchg
xchg
jae
push
or
pop
scas
fcoml
cli
ljmp
iret
sarl
aas
dec
pop
lds
ss
push
outsb
shl
cmpsl
jle
movsb
sub
andl
inc
push
xchg
fimuls
or
daa
mov
mov
xchg
xchg
jg
jmp
movsb
fcmovu
push
pop
nop
cmp
lahf
mov
aad
xchg
push
xor
add
std
cmp
mov
xchg
jl
popa
xor
pop
movsl
cwtl
or
daa
fimull
and
imul
and
xchg
add
add
adc
dec
popa
cli
repz
xor
fs
ljmp
enter
push
cli
push
daa
push
pop
sar
xchg
push
mov
add
jne
stc
mov
cmp
mov
test
test
cmpsl
push
add
repnz
sbb
rcll
out
imulb
out
scas
cwtl
jmp
cmp
cmc
xor
leave
call
mov
addr16
add
mov
mov
into
pop
fnstenv
and
fwait
lret
insb
scas
dec
lock
inc
je
mov
jecxz
inc
test
inc
mov
scas
cmp
popa
pop
mov
jo
data16
out
sbb
or
scas
icebp
int3
imul
sbb
push
mov
ljmp
push
lea
inc
jp
push
dec
inc
xchg
fistl
xchg
adc
sub
pushf
rorb
xchg
cmpl
xchg
loope
mov
cmpsb
mov
ror
loopne
out
xlat
mov
fisubl
pop
imull
inc
push
cmp
or
sti
dec
daa
iret
rclb
xchg
and
test
into
mov
repnz
dec
lods
stos
mov
aad
dec
mov
cmp
xlat
jmp
xor
xlat
nop
ljmp
xlat
hlt
jne
stos
mov
pop
xlat
test
cmp
or
xlat
mov
lock
scas
sbb
rcrl
push
xchg
push
pop
jne
mov
popa
dec
lods
xchg
jmp
push
adc
adc
call
dec
add
enter
cmp
add
xchg
xchg
aas
inc
lods
sarl
sbb
xchg
or
mov
out
loope
add
pop
push
mov
imul
mov
int
jb
and
xchg
or
cltd
xchg
cmp
lret
icebp
push
mov
movsl
out
and
iret
inc
fisttpll
outsb
nop
sub
repnz
push
fldt
inc
nop
xchg
inc
divl
push
xchg
xor
aad
sbb
movsl
ljmp
out
adc
aam
repz
fstpt
push
loopne
shlb
add
loopne
iret
cmp
insl
or
xchg
in
cmp
orb
mov
adc
loope
sbb
cmpsl
insl
mov
rcl
pop
push
nop
lcall
jge
inc
cwtl
mov
cmpsb
testb
inc
mov
mov
mov
and
out
add
jbe
and
jnp
repz
cmp
or
fldln2
fadd
mov
xor
xor
mov
and
inc
or
pop
xchg
adc
stos
sahf
jl
adc
sar
pusha
aad
stc
push
inc
int3
xor
inc
cmpsl
rorl
mov
ds
rol
mov
leave
add
int
adc
lock
pop
fistps
rclb
mov
mov
xlat
jp
mov
nop
push
sub
xchg
cmp
cli
test
and
in
ss
out
jno
lods
mov
sbb
lods
test
pop
iret
subl
lahf
xor
flds
int
aam
dec
sbb
add
ret
mov
and
add
and
mov
push
aas
enter
jns
jge
xchg
fstpt
jg
adc
inc
mov
xchg
mov
enter
ds
into
push
mov
xchg
mov
sub
int
inc
xor
sbb
js
jnp
dec
das
aam
and
aaa
jns
xchg
loopne
sbb
push
aad
xchg
cmp
outsb
pop
adc
sarb
dec
ss
data16
inc
or
lret
cmp
mov
out
je
test
mov
sub
mov
mov
jmp
fldenv
sbb
inc
xor
jmp
add
aas
pop
adc
xor
inc
imul
jnp
int
pop
fnstenv
pop
fbstp
dec
sti
or
dec
les
jae
fnstcw
shl
bound
int
in
push
inc
sbb
cmc
cmp
mov
push
test
jmp
scas
out
add
sub
jg
cwtl
sub
mov
das
pop
ja
adc
sbb
enter
mov
outsl
mov
add
cmc
push
lock
test
popa
add
mov
xchg
fstp
jns
jge
iret
push
iret
xchg
jge
add
mov
push
data16
ja
and
outsl
mov
mov
mov
push
adc
xchg
cmp
leave
mov
scas
arpl
ljmp
rcrb
cmp
add
aas
stc
jno
mov
jbe
xchg
or
inc
jge
iret
sub
lret
lcall
push
jnp
ja
int
push
scas
or
jge
stc
iret
jmp
std
push
push
pusha
daa
or
cwtl
ret
ja
mov
repnz
adc
and
jge
sub
fcos
test
sbb
sub
add
mov
push
xchg
dec
pop
sahf
rcrb
lahf
mov
push
aam
fcmovbe
pop
loope
leave
mov
lret
loope
jns
nop
stos
in
inc
cwtl
mov
sub
int3
mov
inc
ds
cltd
mul
jnp
icebp
mov
and
incl
xor
xor
inc
int
dec
sbb
and
imul
negb
loop
cmp
cmpsl
push
dec
mov
repnz
push
jge
push
int
cmc
test
mov
data16
out
pop
scas
mov
xchg
xchg
dec
movsb
mov
and
jmp
fiadds
int
int
loope
std
dec
test
push
shl
adc
ss
mov
cmc
inc
jg
nop
fcompl
push
inc
stos
xchg
pop
scas
pop
pop
call
nop
pop
aas
fxch
stc
sub
jnp
xchg
fcoml
or
nop
dec
mov
mov
icebp
loope
mov
dec
aam
arpl
adc
sbb
push
vpcomb
out
nop
ljmp
sbb
xchg
xor
inc
test
sahf
push
test
mov
aaa
pop
insb
frstor
sbb
xor
fildll
subl
ja
test
xchg
lret
scas
ret
aaa
aad
sub
add
fcoml
fistl
pop
jle
adc
cmpsb
inc
sbb
mov
popf
mov
lock
or
xchg
popf
mov
pop
pop
dec
lods
nop
mov
xor
lea
sahf
push
pusha
cmpsl
sub
adc
xchg
mov
push
jecxz
leave
lea
data16
sbb
push
nop
cwtl
aam
mov
and
fnstenv
adc
out
jmp
les
lock
mov
into
addb
xchg
sbb
jmp
and
mov
pop
aas
fcomp
jno
mov
pop
lcall
gs
cmp
into
push
pop
dec
xchg
add
jg
sub
icebp
clc
sub
jne
mov
pop
jns
je
mov
and
dec
push
mov
mov
cmp
push
sbb
pushf
faddl
add
xorl
stos
lcall
mov
roll
xchg
adc
add
xor
lds
mov
fcom
mov
nop
or
lods
mov
push
adc
scas
js
mov
arpl
adcb
aam
in
push
pop
sub
push
add
inc
cltd
sbb
and
or
in
repz
or
insb
pop
and
adc
repnz
aad
out
pop
jno
nop
cmpsb
les
mov
or
xlat
imul
pop
jl
mov
nop
shl
mov
mov
es
daa
cld
bound
mov
leave
mov
lds
outsl
or
lcall
aad
nop
xchg
and
rorl
loope
fcmovb
cli
call
ret
fnstenv
add
xchg
lea
out
cmp
cmpb
add
or
scas
add
ret
xchg
adc
and
cmp
mov
out
xor
xchg
pop
xor
aaa
mov
mov
or
cltd
inc
ja
movsl
mov
aaa
outsb
pop
in
je
daa
nop
push
aad
sub
sahf
mov
mov
push
pop
in
cs
daa
xor
stos
push
xchg
mov
repz
xor
inc
push
mov
add
inc
aaa
sahf
sbb
gs
sub
xorl
out
or
lea
movsl
negb
cmp
dec
repnz
orb
out
pusha
ret
popa
nop
arpl
xchg
mov
jnp
shrb
pop
mov
add
cmp
mov
mov
adc
cmpsb
setne
add
dec
mov
rorl
sbb
inc
adc
push
xor
enter
jle
lods
gs
mov
rol
popa
lea
add
sti
cmp
xchg
ss
inc
orb
inc
aam
mov
aam
xchg
jg
add
pop
scas
fdivrl
repnz
pop
push
nop
inc
lret
scas
add
cwtl
xchg
pop
inc
adc
daa
mov
stc
push
std
inc
and
mov
xchg
jnp
xchg
sbb
data16
ret
nop
scas
mov
mov
out
and
imul
push
sti
mov
in
xchg
xchg
sub
push
push
jle
pop
stos
hlt
sub
lcall
push
call
jbe
pop
cmpsl
mov
popa
push
sarb
sub
cltd
shl
xchg
add
push
jns
lret
idivb
bound
jne
out
inc
sarb
into
ja
adc
lea
jp
pop
mov
nop
mov
test
aam
scas
bound
js
pop
cmp
ja
push
cli
sbb
ja
ret
pop
ss
call
iret
cld
sub
fistpl
push
lret
adc
loopne
push
push
mov
xchg
xchg
push
mov
jae
rcr
dec
scas
xlat
xchg
or
xchg
cmc
push
ret
mov
and
jb
and
lret
push
stos
cmpb
cmp
mov
pop
push
jns
add
mov
idiv
jno
push
xor
scas
out
pushf
std
stc
lods
loope
lret
hlt
jp
fs
push
fadd
shl
sub
inc
fs
inc
sbb
hlt
add
sub
lret
mov
daa
std
xchg
xor
sub
pop
imul
out
push
xor
aam
push
sub
inc
out
iret
and
mov
sub
mov
andb
sub
cmp
test
jl
mov
pushf
cmpsb
sahf
or
iret
xchg
mov
roll
das
cs
pop
aas
jae
and
xchg
les
dec
inc
jb
idivb
call
jb
xlat
xchg
mov
pop
adc
sbb
ja
mov
popf
ja
fld
adcl
xchg
das
dec
or
or
or
sbb
pop
pop
imul
iret
sub
lods
mov
mov
cmp
cmp
xchg
lahf
dec
stos
inc
xor
stc
aaa
xchg
xlat
sbb
divl
jns
xor
sub
cmp
addr16
nop
and
mov
sbb
mov
add
rcl
test
mov
push
sahf
cli
iret
aas
add
cmp
jmp
scas
out
push
mov
les
je
std
cmp
pop
and
cs
popl
xor
xchg
pop
sub
pop
mov
loopne
mov
dec
std
lea
sti
out
sahf
push
scas
sub
rol
cmpsb
cli
fdivrs
repnz
and
mov
mov
push
pop
pop
call
xchg
in
test
adc
pop
stos
pop
mov
cwtl
daa
inc
test
xchg
rcll
es
add
mov
cs
movsl
or
in
and
test
scas
cmp
or
nop
jb
or
push
xchg
sbb
or
xor
rol
movsl
or
int
add
shl
leave
pop
mov
mov
mov
push
sub
mov
sub
fisubl
stos
or
xchg
mov
dec
xor
test
mov
adcl
negl
adc
inc
sahf
xchg
push
fists
jg
xchg
inc
cli
add
adc
sub
shl
aad
data16
jnp
in
outsl
rorb
roll
mov
jbe
lods
pop
adc
push
mov
fwait
aaa
dec
cli
jmp
lds
cwtl
les
dec
fcmovb
addb
and
sbb
aad
fstps
fimull
sbb
shrl
dec
bound
out
mov
lods
or
rcr
int
lret
lret
mov
nop
js
lret
xchg
xchg
scas
pop
arpl
bound
testl
mov
and
cld
jmp
xor
xchg
and
fnstenv
mov
arpl
pop
jb
xchg
and
fiadds
pop
cmp
cmc
push
cwtl
mov
inc
push
shlb
lock
imul
cmp
xlat
and
popa
cltd
xlat
loope
jae
jecxz
aaa
jmp
sbb
test
in
add
js
sarl
es
pop
out
aas
or
xchg
adc
or
lret
sbb
adc
fs
lods
cld
push
jle
sub
addr16
or
rcrb
push
xlat
data16
pop
jg
je
daa
adc
pop
cmp
jge
mov
in
or
aas
and
xlat
jl
and
mov
sbb
push
sub
inc
xlat
fisubrl
pop
xor
push
arpl
xlat
jno
mov
sbb
fsts
mov
jbe
stc
data16
pusha
jg
and
pop
push
subl
push
repnz
sahf
mov
push
notb
loope
scas
lock
mov
dec
pop
je
mov
js
mov
adc
stos
jb
sbb
dec
dec
jae
dec
out
or
imul
mov
jp
cmpl
mov
and
push
xchg
lahf
ds
or
sbb
mov
arpl
adc
cs
mov
ret
xchg
sub
mov
lods
add
in
xchg
in
in
mov
xchg
sar
and
and
dec
dec
hlt
pop
jbe
and
aam
aas
inc
mov
inc
add
nop
mov
icebp
jle
in
movsb
cmpsl
push
dec
push
push
xchg
xchg
fimuls
push
xchg
mov
hlt
cmp
ljmp
out
push
dec
xor
lret
pusha
iret
icebp
fiadds
jp
pop
mov
and
in
jbe
cld
bound
cmp
aam
icebp
xlat
movsb
stc
dec
pop
pop
repnz
and
sub
cmp
jbe
rcl
repnz
pop
int
mov
aam
ja
stos
mov
rol
popa
lea
aaa
movsl
stos
add
sub
insb
lret
jae
inc
std
xchg
mov
daa
rol
cwtl
jg
sub
nop
cwtl
add
rcll
scas
mov
push
xchg
push
hlt
push
mov
test
xchg
push
ss
jmp
mov
repz
pop
jo
fs
cmp
inc
rolb
pop
and
jns
or
mov
fbld
stos
cmpsb
add
mov
sbb
mov
mov
adc
inc
fbld
dec
shrb
push
pop
pop
inc
aas
adc
push
mov
xor
hlt
xchg
add
xor
loope
loopne
daa
inc
inc
sub
aaa
mov
mov
and
pop
insb
iret
jl
sub
adc
nop
jbe
insb
shll
repnz
test
lds
outsb
push
shlb
xchg
push
sbb
or
dec
jnp
adc
lods
insl
ficoms
imulb
enter
int3
sahf
xor
dec
add
ss
data16
dec
xor
lea
icebp
xor
pop
xor
xchg
mov
pop
data16
aad
push
sahf
jle
and
and
or
fidivl
shlb
nop
pop
sub
movsl
mov
test
sub
jne
mov
jp
fcom
ret
outsb
pop
stc
inc
mov
scas
push
or
mov
adc
loopne
out
lods
sahf
sbb
aas
nop
sbb
mov
cmc
cmp
stos
or
mov
sbb
push
pop
nop
ja
sbb
jmp
mov
or
mov
and
mov
lret
cmp
mul
jecxz
sub
mov
cmp
xor
add
push
xor
ret
push
nop
cmc
int3
cmp
mov
fadds
mov
adc
leave
call
mov
xchg
loopne
inc
push
xor
cld
icebp
adc
sbb
push
aam
jg
sub
push
notl
add
dec
cmp
ss
jno
stc
ret
adc
add
push
test
nop
sbb
and
jle
push
insl
loope
mov
push
jae
jbe
mov
mov
xor
pop
xchg
adc
addr16
adc
lods
mov
fiadds
xor
adc
xchg
aas
orb
dec
add
xchg
xchg
mov
shll
adc
leave
xchg
adc
jmp
movsb
push
jge
cmpsl
mov
fisttpl
aam
mov
in
adc
sub
sub
xor
dec
sbb
mov
outsb
out
aam
pop
aas
add
fsubr
push
push
rcrl
mulps
callw
out
mov
and
pop
cmpsb
push
arpl
xor
or
lahf
test
jbe
xchg
in
xchg
xor
mov
jb
pop
stc
aam
xchg
jmp
mov
push
jbe
into
sahf
jecxz
in
push
push
ret
mov
sbb
out
mov
fwait
imul
loop
nop
add
sbb
pop
shrl
push
bound
push
cmp
loop
add
inc
scas
cmp
in
test
jmp
cltd
js
inc
imul
push
inc
imul
jl
in
adc
xchg
cli
dec
push
xor
xchg
int3
icebp
lods
cmp
cld
pop
add
and
adc
aad
lret
inc
and
or
ljmp
enter
cmp
daa
sub
sbb
pop
push
cmpsl
pop
dec
mov
or
pop
and
push
pop
or
xchg
lock
aas
shlb
cmp
dec
notl
or
mov
sub
cmp
dec
mov
sbb
filds
mov
lcall
xor
incb
cmp
push
push
sbb
fdivrs
xchg
mov
add
cmp
fdecstp
popf
jp
xchg
out
mov
adc
sahf
imull
scas
fs
and
cmp
popa
aaa
pop
frstor
subl
inc
aam
push
push
jne
or
dec
outsb
pop
push
pop
jbe
ret
mov
inc
aad
mov
cmp
and
test
shlb
dec
rclb
cmp
xorl
push
pusha
adc
inc
mov
jnp
outsb
movsb
adc
lret
mov
push
jge
aad
pcmpgtw
shrb
push
xchg
adc
ret
cli
sub
lret
and
mov
jo
test
fs
iret
aam
clc
jns
jle
push
mov
push
xchg
ljmp
cmp
orb
inc
xchg
les
dec
fwait
mov
aam
xlat
test
fcoms
in
jecxz
inc
mov
inc
mov
add
mov
inc
sub
xchg
fisubl
das
jge
or
xchg
imul
ret
arpl
js
xor
dec
shlb
lds
or
aad
imul
test
lds
fnstcw
adc
adc
xor
mov
decl
nop
cmpsl
adc
add
sahf
adcl
inc
xchg
jae
mov
jp
in
fidivrl
loope
mov
scas
adc
sub
and
aad
imul
xlat
push
mov
mov
mov
xor
jmp
outsb
mov
sahf
xchg
push
mov
jg
cld
stc
je
mov
jle
pop
in
add
iret
jp
roll
mov
jne
lods
pop
in
lret
arpl
cmc
adc
test
xchg
ret
dec
clc
sub
mov
sbb
or
sahf
push
pop
in
stos
or
fs
push
add
and
out
les
scas
dec
mov
xchg
andb
push
fs
ret
and
jge
call
xchg
inc
aad
stos
js
loope
mov
xor
ret
adc
and
fdivrs
iret
xchg
or
adc
push
hlt
pop
push
imul
adc
jns
and
popf
add
push
std
adc
push
mov
adc
and
roll
les
and
mov
xchg
clc
pop
and
loope
aas
aas
stos
sub
and
push
fisubl
xchg
sub
inc
jb
xchg
mov
nop
sti
lret
aad
or
fnstsw
xchg
mov
pop
rcl
inc
repz
jg
divb
sub
xor
scas
inc
adc
lods
aas
adc
mov
inc
push
notl
mull
dec
xchg
mov
jmp
push
jp
xor
aam
fisubrl
xchg
out
adc
imul
sub
loope
inc
xchg
dec
rclb
cmpsb
mov
jno
js
and
lea
loopne
mov
orl
shlb
ret
js
test
and
into
js
dec
jae
xor
jnp
push
mov
adcb
cmpsb
aad
inc
push
fdiv
xchg
adc
mov
les
push
fcmovnbe
mov
cld
push
mov
jp
stc
data16
mov
xorl
mov
loopne
jg
mov
insb
ljmp
push
push
aam
insb
mov
shlb
mov
push
int
sbb
fwait
iret
inc
fmulp
test
leave
fstl
jmp
mov
and
xor
lea
xchg
int
fldcw
adc
cmp
pop
or
sbb
iret
sub
loope
je
loop
fistpll
jecxz
mov
mov
or
mov
xor
push
hlt
out
jl
and
dec
mov
add
push
adc
sti
aaa
fcmovbe
cld
xchg
int
sub
adc
ss
pushf
nop
pop
sbb
enter
lret
hlt
bound
mov
daa
mov
inc
dec
mov
mov
mov
inc
je
xchg
sub
movsl
adc
mov
xor
nop
jmp
mov
pop
ret
jns
call
lret
lods
in
aam
pop
lret
lds
jae
ljmp
inc
mov
and
imul
in
pop
mov
adc
nop
push
rclb
sbb
sub
mov
fildl
outsb
sbb
rcll
add
fisubl
jmp
shll
test
cli
mov
sub
push
test
push
arpl
js
mov
nop
and
mov
pop
xchg
pop
iret
sbb
add
sub
mov
add
iret
inc
cmp
rolb
and
xchg
pop
push
aad
call
mov
sub
int
sub
into
lret
sbb
inc
rol
imul
lret
jecxz
push
adc
xchg
xchg
ss
push
outsb
push
adc
jae
push
adcb
sbb
icebp
int3
rol
push
jmp
sub
xchg
inc
xchg
pop
mov
popl
loopne
jmp
fldt
add
nop
mov
stos
and
test
inc
push
and
xchg
fmull
ljmp
dec
jae
lret
in
and
mov
adc
sub
lock
cmp
js
or
dec
add
jl
jb
add
fs
xchg
rol
popa
jne
inc
fists
push
push
jns
jnp
or
mov
filds
sbb
sub
mov
repnz
ret
mov
add
movsl
arpl
nop
jb
ret
dec
lret
push
lea
jae
sub
sti
sub
ljmp
rcll
push
sahf
inc
mov
push
inc
fldenv
cmpsl
sub
mov
jno
fwait
xor
sbb
pop
cmpsb
push
and
push
lods
fsub
sub
cld
in
mov
sti
mov
imul
roll
lods
inc
in
aas
lock
dec
cmp
nop
gs
inc
fsubs
scas
into
jecxz
or
nop
inc
inc
jp
mov
repz
xor
mov
into
sahf
xchg
hlt
dec
in
mov
xchg
scas
fisubl
gs
fimull
add
mov
in
inc
sbb
repnz
push
lea
xor
adc
fdivl
jge
lods
push
in
jne
xor
scas
sub
jecxz
push
or
insb
iret
out
cs
sub
stos
cmp
adc
push
movsl
jge
rol
sbb
push
aas
es
push
sbb
and
lea
pop
jle
outsl
scas
mov
mov
push
or
inc
mov
int3
subl
xchg
inc
shll
xchg
scas
sahf
call
jg
lods
in
inc
mov
xrelease
mov
clc
mov
sub
push
pop
pop
insl
push
lahf
bound
test
fisttpll
xchg
inc
int
lds
pusha
dec
xchg
jns
add
and
mov
cmpsb
or
push
fs
daa
rcll
mov
mov
rclb
in
sbb
xor
ret
mov
pop
or
fnsave
mov
xchg
cltd
mov
sbb
pop
nop
lahf
ljmp
pop
scas
inc
push
add
repz
shrb
adc
mov
pop
push
outsl
xchg
push
dec
jno
push
pop
xchg
gs
sbbl
mov
add
rep
mov
gs
stos
mov
sub
rcll
mov
stos
xchg
push
mov
into
test
xchg
pop
cwtl
mov
cwtl
jmp
imul
mov
ss
jne
scas
add
jmp
mov
cli
loop
out
xchg
xchg
call
fldenv
dec
cmp
xor
stos
in
fs
jmp
mov
ret
add
arpl
iret
push
stos
and
fwait
jmp
mov
int
or
in
mov
jg
sbb
aas
dec
sbb
frstor
lods
sub
js
int
stc
xchg
std
add
jge
add
sub
sub
mov
mov
mov
push
lds
pop
sub
cld
fcmovbe
pop
add
std
aaa
fwait
mov
xchg
mov
jnp
daa
and
das
inc
pop
data16
orb
sub
repz
into
cmp
pop
jns
sahf
and
mov
mov
test
dec
and
cld
xchg
add
cmp
fisttpl
push
out
popl
sub
fdiv
aad
xchg
pop
scas
gs
pushf
pop
bound
test
call
cmp
in
sub
sbb
xlat
pop
scas
insb
jecxz
jae
add
mov
jle
mov
jl
pop
shl
pop
fs
or
jne
sub
dec
test
push
lds
jl
loop
sub
add
cli
ret
xorb
lock
sub
and
push
push
sar
mov
push
xlat
bnd
mov
pop
in
popa
lds
mov
test
lods
mov
in
ss
pop
xchg
sub
jne
loop
sbb
hlt
cmp
xlat
dec
cmpsb
mov
mov
in
negb
mov
mov
in
mov
lds
xlat
push
push
mov
xlat
aad
int
xor
and
ljmp
and
lods
in
mov
add
pop
or
ret
movsb
aas
push
dec
mov
or
aam
push
cmp
mov
mov
dec
push
mov
xchg
test
xlat
and
int
xlat
jl
popf
ret
cmp
pop
pop
cmpsl
dec
xchg
loop
xlat
and
xchg
mov
sub
jne
xor
sbb
sbb
jnp
inc
xlat
popf
test
sbbl
rorb
xlat
and
mov
iret
mov
pop
arpl
cwtl
ss
adc
in
pop
jae
push
out
fisubl
cs
idivb
xlat
cmpl
cmp
adc
fisubl
iret
out
dec
rorl
push
lret
in
xlat
jp
fwait
pop
repnz
shlb
mov
mov
fistpl
into
xlat
cmp
inc
cld
xlat
pop
inc
ss
and
xlat
lea
xor
iret
fidivrl
inc
jmp
adc
xlat
repnz
sbb
mov
lods
adc
push
fwait
lret
rcrl
jb
xlat
mov
aas
jne
xchg
lahf
mov
pop
mov
leave
jl
pop
cmp
pop
xor
stc
mov
sub
cld
adcl
add
xchg
push
mov
sub
arpl
xlat
cmp
call
xlat
push
jle
fsubs
cwtl
sahf
xlat
pop
movsl
jmp
sbb
mov
add
pusha
aaa
repnz
cmpsl
push
pop
mov
cmp
ja
push
rclb
addb
shrl
cmc
mov
xor
outsb
xlat
jbe
rorb
pop
adc
xchg
push
lods
out
out
mov
pop
jecxz
test
xlat
xchg
lds
ljmp
dec
xlat
lods
mov
jecxz
data16
aam
cmp
pop
in
xlat
test
cltd
outsb
gs
mov
pop
and
jl
aas
in
push
out
xlat
pop
cli
xchg
xlat
adc
sub
sub
mov
and
dec
rcl
or
mov
mov
pop
xlat
mov
xchg
pop
fists
and
ja
dec
idiv
ds
test
pop
cltd
aas
not
cmpsb
mov
in
fsubrs
xlat
scas
mov
int
push
popf
iret
test
mov
xlat
xchg
sbb
iret
jbe
ljmp
or
cmp
daa
mov
jmp
loope
shlb
cld
stos
jmp
mov
xchg
sbb
sub
aad
push
adc
inc
lret
shl
push
ss
pop
add
and
imul
xlat
orb
cs
out
adc
jb
mov
in
fmull
out
mov
leave
out
test
leave
mov
rorb
call
mov
lahf
and
subb
mul
scas
arpl
cs
xchg
ja
lds
mov
xlat
mov
push
jae
xlat
mov
flds
inc
pop
add
shlb
test
xlat
inc
aas
addl
inc
ds
pop
test
fdiv
insb
mov
sbb
xlat
adc
out
mov
fwait
iret
ret
pop
pop
test
inc
mov
adc
lock
test
push
lcall
xchg
pop
subb
jns
mov
inc
mov
bound
in
xchg
in
sub
jge
stc
xlat
lea
mov
repz
or
xchg
mov
jmp
movsl
roll
xlat
jge
mov
jne
cmpl
fmuls
pop
shrb
add
out
ljmp
xlat
adc
mov
dec
lahf
adc
mov
aas
push
mov
in
mov
lahf
push
lea
ss
popa
jno
push
xlat
lcall
leave
xlat
arpl
loope
scas
sbb
xlat
ljmp
add
pushf
addr16
cltd
sub
lds
mov
addr16
fsubs
dec
mov
cmp
ja
roll
lahf
push
cmp
mov
inc
mov
rclb
stc
hlt
fs
mov
xlat
mov
xor
adc
mov
mov
jne
ds
push
iret
rolb
movl
sbb
rcl
jne
jae
jb
iret
rorb
mov
int
nop
jmp
push
xlat
fdivp
stos
push
pop
lret
out
add
jecxz
je
mov
fs
push
pop
xlat
test
sbb
xor
xlat
jg
pushf
pop
les
sbb
dec
push
leave
out
iret
pop
mov
cli
xlat
ja
mov
xchg
sub
dec
xor
scas
xchg
push
pop
mov
into
inc
mov
fmulp
cld
pop
xchg
int3
cmpsl
aad
push
jae
aam
call
scas
inc
fdivl
sbb
mov
lahf
jmp
mov
mov
leave
cmpl
push
inc
cmpsl
cld
push
inc
dec
push
xchg
cwtl
mov
scas
xchg
pop
mov
testb
aad
add
pop
das
out
aaa
fidivrl
mov
sub
rcl
lods
and
dec
inc
je
or
jmp
out
sub
push
in
sub
xchg
aam
and
pusha
bound
xchg
inc
mov
xchg
rcrl
sbb
cmp
rcl
jne
cltd
xlat
push
jnp
and
cld
xchg
out
pop
sbb
jecxz
popa
enter
testl
mov
mov
mov
adc
xlat
cli
xor
dec
inc
mov
sti
nop
ljmp
xlat
or
pop
mov
xlat
jmp
sbb
xchg
dec
outsl
incl
mov
xlat
jno
pop
loope
sub
mov
int3
in
iret
addr16
sub
bound
iret
outsl
mov
inc
dec
cmp
cli
lods
xchg
loop
mov
and
jns
jle
pop
sbb
push
pop
or
adc
cmp
mov
js
pop
pop
cmpsl
adc
add
fiadds
cmp
js
stos
mov
pushf
add
shlb
mov
sarl
xchg
add
or
shlb
xlat
cmpl
add
xchg
inc
inc
push
xor
sti
xlat
inc
push
pop
and
clc
mov
divb
test
adc
pop
xor
add
out
mov
push
push
jmp
mov
adcl
outsb
xor
icebp
adc
in
fisubs
test
add
xchg
int
stc
in
mov
aad
add
jp
xlat
dec
leave
repnz
inc
mov
pusha
or
jns
sbb
lds
xor
popf
aam
divl
adcl
push
xor
adc
adc
add
stos
lcall
mov
rorb
fwait
lret
mov
adc
sbb
or
shl
xor
push
or
push
idivb
push
aaa
xor
push
fistpl
sarl
add
aam
add
mov
pop
dec
insl
in
inc
stos
xlat
popa
stos
adc
add
xlat
mov
iret
xor
xlat
fdivs
cmp
cmc
cmp
and
xor
adc
or
popf
outsl
xchg
xlat
ja
leave
fcmove
push
outsb
out
rorl
xchg
adcb
repz
xlat
sahf
jbe
cmp
push
imul
mov
fldenv
xchg
or
das
sbb
mov
in
fcmove
or
adc
or
movsb
mov
aad
pop
mov
adc
pop
shll
dec
iret
adc
aad
mov
sub
sub
lds
rcll
xor
fistl
addb
dec
push
rcl
cmp
scas
add
inc
out
cltd
inc
and
xchg
mov
add
sub
fadds
hlt
sub
mov
pusha
fnsave
pop
repnz
sti
add
jl
stos
mov
aad
pop
mov
insb
movsb
in
jg
push
xorb
es
cmp
shrb
adc
xlat
orl
mov
mov
rcll
je
push
lahf
push
lods
ror
push
pop
xchg
mov
pop
test
jmp
sub
adc
mov
popa
lock
xlat
imul
cmpsl
dec
mov
mov
xchg
lret
xlat
pop
jno
push
ljmp
sub
sbb
mov
mull
repz
in
inc
iret
cmp
rcrb
sbb
repnz
mov
and
rcll
popf
ja
imul
jg
cmp
lods
sbb
pop
and
jb
test
pop
mov
add
fisubrs
lret
nop
aad
add
jmp
cmc
cmpb
out
jnp
bnd
mov
nop
fcompl
lret
lods
pop
in
bound
in
fsts
fdivrl
jno
inc
pop
mov
sbb
ret
pop
push
mov
jmp
in
sti
sbb
and
push
aam
stc
jae
xchg
ja
mov
shl
inc
sbb
xchg
adc
push
sbb
repnz
mov
cld
aam
or
lcall
push
jae
jo
repnz
or
lcall
test
push
nop
dec
xchg
in
sti
inc
sahf
inc
cmp
sahf
inc
in
inc
sbb
lods
in
cmpsl
jp
xchg
ss
mov
call
push
nop
data16
neg
stos
ja
out
call
sbb
rclb
mov
mov
dec
inc
shlb
xchg
sbb
fldt
call
sbb
jns
jno
sbb
js
mov
sahf
adc
mov
sub
jg
cmpsb
dec
out
cmp
xchg
stos
ja
and
add
mov
fbstp
mov
jnp
xchg
xchg
sbb
jne
xchg
cmc
jb
cltd
cmp
mov
dec
xlat
imulb
or
lcall
lret
mov
push
add
stc
jge
jb
aas
xchg
jne
aad
jo
push
out
mov
inc
clc
xchg
mov
xor
jecxz
adc
sahf
xchg
ja
inc
jne
dec
mov
inc
les
mov
gs
aad
xor
jnp
cmp
push
stos
aad
mov
and
jmp
fdivrl
xchg
pop
cmp
xlat
mov
aam
dec
push
ret
and
sub
dec
and
jno
mov
jg
xchg
mov
pop
push
jb
push
mov
or
adc
ss
lcall
movsl
lret
outsl
inc
nop
mov
ficoml
dec
stos
xlat
aad
inc
das
loop
mov
repnz
mov
scas
mov
imul
aad
mov
sub
stos
sbb
icebp
mov
movsl
pop
rcr
inc
push
cmpsl
jmp
xor
scas
loop
rclb
sbb
nop
jle
cmp
jno
jle
js
xor
scas
sbb
pop
dec
cmp
int3
and
inc
mov
ja
stos
mov
leave
dec
adc
add
dec
jge
mov
xlat
add
mov
adcb
int
aaa
push
mov
negb
cld
fwait
mov
adcl
cmp
shrl
push
pop
cmc
addr16
popa
xchg
fbld
js
fisttpl
cld
test
ret
imul
stc
mov
mov
int
out
sub
or
ja
mov
dec
cld
jnp
dec
jne
inc
ret
adc
sbb
inc
sahf
and
pop
nop
jp
mov
inc
pop
inc
call
test
scas
push
fcmovnb
cld
lods
mov
xor
push
jo
mov
add
pushf
fisttpl
repnz
dec
loopne
outsb
sub
sbb
les
mov
sub
xchg
movl
adc
sahf
imul
test
dec
add
std
mov
inc
adc
xor
int3
xchg
loopne
aam
sbb
add
pop
jb
mov
dec
aad
int
sbb
add
lods
sbb
pop
jnp
jmp
dec
pushf
jl
cltd
in
ja
xor
sub
mov
and
mov
mov
nop
js
xchg
pusha
inc
dec
cmp
mov
inc
push
imul
sub
mov
jne
mov
bnd
cli
cmp
out
and
xchg
fbstp
inc
and
mov
pop
mov
hlt
mov
adc
aad
call
push
loope
jbe
sub
out
movsb
test
nop
cltd
test
xor
mov
int
leave
fdivrs
push
lret
sub
xchg
sub
mov
and
mov
inc
pop
aad
xchg
adc
pop
aas
jg
ret
sbbl
push
push
dec
cmpsb
lods
cmp
inc
inc
jne
xor
xchg
mov
pop
xchg
loope
sub
cmp
leave
into
mov
addr16
lock
out
adc
in
xchg
or
push
jl
sbb
cmp
adcl
inc
rcrb
xchg
mov
mov
or
or
dec
cld
xchg
cli
in
ss
sbb
stos
xchg
ljmp
ficoml
subb
aad
xchg
push
mov
push
gs
dec
and
stc
test
and
pop
les
cmovnp
dec
sarb
mov
mov
sbb
xchg
push
lds
scas
subb
clc
fisubrs
ja
test
xor
dec
mov
cli
out
push
loope
mov
orb
dec
pop
xchg
mov
pop
sarb
fnstenv
in
ja
jo
mov
or
sbb
or
mov
mov
jmp
xchg
dec
xchg
mov
neg
cmp
and
test
aas
fstpl
imul
loope
mov
or
addb
fucomip
pop
rorl
mov
and
add
gs
movsb
ja
or
inc
nop
cmp
scas
xor
jne
jbe
push
icebp
add
cmp
xchg
adc
pop
lock
scas
dec
jp
mov
and
mov
stos
cmp
jg
negl
dec
pop
daa
jmp
imul
add
shlb
dec
fcoml
xor
sbb
mov
sti
nop
test
push
pop
inc
pop
push
xlat
jmp
cmp
loop
in
push
shll
aas
notl
inc
fcoms
add
leave
inc
or
mov
mov
pop
es
pop
in
daa
mov
pop
lock
pop
mov
call
sub
xlat
xchg
xor
mov
lock
mov
and
push
insb
fmuls
jmp
xor
jmp
sub
lock
adc
push
lea
test
or
mov
shlb
daa
cmp
mov
xlat
sbb
sbb
sbbl
out
xor
lods
nop
adc
mov
or
sub
mov
cmp
jecxz
xchg
mov
std
test
inc
test
gs
ljmp
dec
cmp
inc
popf
lahf
negl
aam
pusha
cwtl
mov
or
faddl
fcmove
add
or
pop
xlat
xor
test
into
insl
xlat
and
mov
scas
mov
push
xlat
push
sub
sbb
dec
mov
roll
shrb
rcrb
or
xlat
je
movsl
cmp
dec
cli
push
mov
jno
sarb
mov
sbb
sbb
xlat
push
sti
aam
inc
cmc
or
dec
lret
adc
mov
ja
outsl
xor
negl
leave
test
xchg
sub
or
or
pop
xlat
negb
std
jbe
loope
add
add
popa
pop
sti
addr16
in
test
or
sbb
push
out
mov
outsl
loope
push
icebp
lods
jne
iret
mov
inc
xor
xlat
cmc
sahf
sbb
repnz
push
out
lock
or
xlat
and
ret
sbb
aad
test
call
sbbl
je
rorb
mov
divb
xor
sub
pop
jecxz
fldl
or
mov
push
cwtl
inc
mov
xlat
cmp
push
cld
out
mov
mov
jns
xlat
dec
add
stos
xlat
dec
jmp
mov
xlat
mov
inc
fdivl
or
and
mov
jecxz
aas
mov
xlat
das
pop
lock
fwait
rcll
xchg
in
xor
out
dec
xlat
sbb
outsb
mov
test
xlat
repz
xor
xlat
loop
push
or
sahf
jg
mov
test
in
test
add
lock
push
xlat
imul
jo
repz
insl
aas
adc
inc
push
adc
xlat
bound
imul
and
xlat
jp
adc
iret
into
scas
in
mov
jmp
movsl
xlat
sarl
movsb
cmp
mov
mov
add
jo
cmpsb
dec
cmp
add
scas
pusha
mov
das
stos
loop
dec
xlat
rorl
rolb
adc
ret
mov
fstl
sarb
sub
sti
fs
sub
iret
pop
pop
add
sub
xchg
xlat
aad
dec
into
inc
pop
jp
mov
push
pushf
adc
xlat
aam
imul
fcoml
xlat
mov
rcr
adc
sub
or
lock
inc
rcrl
xor
or
xlat
jmp
and
nopl
ror
add
xlat
mov
xchg
es
xlat
inc
xchg
loopne,pn
push
xchg
sbb
rcrl
sub
call
das
dec
mov
xchg
rorl
bound
dec
ljmp
ds
xlat
mov
and
xlat
dec
and
std
in
mov
inc
mov
rorb
ret
pop
xchg
xchg
xchg
test
jl
xlat
jecxz
shll
xlat
es
setno
xchg
mov
or
stc
push
mov
fwait
add
rcr
push
in
xlat
cmpsl
mov
es
lock
stc
xchg
push
jmp
into
xlat
add
js
ljmp
add
sub
rolb
pop
adc
xchg
enter
xor
xchg
xlat
add
scas
movsb
dec
inc
lret
xchg
nop
out
test
pop
adcb
sbb
cltd
xlat
push
pop
or
jae
insb
lcall
sbb
mov
jb
xchg
idivb
ds
gs
push
aas
xlat
bnd
pop
mov
pushf
adc
cli
mov
adc
aad
hlt
sub
and
mov
and
stc
out
aas
mov
xlat
dec
fildll
xlat
cwtl
fsts
mov
or
mov
xor
out
fnstsw
lret
aaa
pop
mov
push
in
and
in
adc
xchg
adc
jne
out
rol
push
dec
imul
adc
in
inc
pop
test
push
mov
aad
push
push
mov
adc
loope
xor
add
aaa
add
xlat
inc
mov
sbb
mov
fs
sbb
xchg
lahf
jp
in
jmp
dec
or
call
mov
shrl
pusha
sub
jnp
int
out
jge
div
out
jle
jmp
pop
cmc
push
and
add
mov
xlat
nop
inc
arpl
inc
mov
outsb
aam
xlat
inc
filds
out
add
fidivrl
insb
in
pop
push
jge
sbb
call
xchg
lods
cs
mov
and
lahf
loope
push
and
xor
xchg
pop
int3
inc
cltd
fmull
rcl
push
imul
fildl
jnp
mov
insl
push
iret
add
push
lods
fcmovbe
negb
mov
out
mov
cmpl
aas
mov
jg
test
mov
cmp
es
xlat
jbe
rolb
lock
lods
xlat
jb
inc
js
cmp
xor
xlat
add
inc
insb
pop
adc
pushf
mov
jg
mov
jecxz
push
sub
xchg
xlat
xchg
sbb
xlat
rcll
ret
push
nop
cmp
lods
shld
aam
pop
cmc
xor
arpl
xlat
rcrl
outsb
loopne
jecxz
out
mov
les
es
mov
push
jae
and
into
call
push
jmp
gs
fwait
ret
rcr
mov
cmp
popa
std
dec
push
mov
mov
xor
mov
xlat
stos
push
jge
cmp
mov
xlat
pop
and
lret
mov
lret
push
inc
and
out
inc
cld
ret
xchg
sub
cmpsl
lcall
inc
inc
fadds
push
mov
or
cmpsb
xlat
lock
add
cmp
lret
cmp
mov
insl
adc
mov
or
enter
lret
movsl
outsl
test
fistps
mov
xlat
jnp
lcall
les
fidivrs
gs
cmpsb
js
stos
xlat
scas
lock
loope
or
push
adc
sti
pop
lahf
cmc
out
movsl
push
sarl
in
movsb
mov
pop
push
jbe
mov
daa
xchg
add
xlat
fldl
lret
outsl
pop
ret
xlat
mov
into
push
xlat
leave
mov
or
sahf
lcall
sub
push
xlat
lods
je
insl
daa
dec
push
sbb
pop
and
popa
daa
jnp
xchg
imul
mov
push
cmpsb
scas
call
xor
insl
xor
iret
cs
push
pop
incb
inc
push
shl
pop
add
addr16
xlat
mov
mov
leave
lods
xor
mov
ss
clc
lds
inc
mov
mov
xlat
ds
mov
aaa
xlat
jae
mov
sub
dec
addr16
xchg
mov
out
cmc
stos
mov
jge
adc
pop
mov
adc
mov
test
cmp
dec
jg
int3
test
pop
push
es
out
and
fdivs
dec
push
out
jns
sbb
rcr
push
repz
in
loop
sbb
mov
xlat
inc
movntps
xlat
loopne
int
or
out
gs
adc
mov
lds
xlat
fdiv
mov
push
adc
xlat
add
out
loopne
xlat
call
sarl
xor
sub
or
imul
mov
cmp
add
jmp
push
xchg
xor
mov
dec
scas
iret
cmp
jg
pop
por
testb
hlt
sbb
movsl
add
xchg
dec
xlat
lods
mov
fbld
test
and
enter
dec
loop
xor
jo
arpl
adc
jg
bound
fistpll
mov
test
sbb
stos
cmc
sbb
inc
pusha
xchg
sarl
and
nop
outsb
or
pop
repz
jle
mov
jno
jp
ljmp
cmp
stos
outsb
cmp
xchg
or
in
adc
decl
or
fbstp
push
xor
sbb
mov
mov
or
fucomp
fsubl
add
mov
aas
pop
jmp
movsl
sbb
aas
fnstcw
das
add
cmpsl
pop
mov
cmc
stc
es
jp
aaa
push
hlt
adc
call
jae
push
inc
mov
adc
mov
fistps
bound
call
inc
dec
outsb
xchg
sub
sbb
mov
pop
scas
insl
add
leave
pusha
mov
inc
jmp
aas
pop
loop
mov
nop
ret
cmp
iret
ret
xor
test
mov
pusha
fdiv
sub
pop
jo
and
pop
sub
out
jge
xchg
dec
in
lock
loopne
jne
push
xchg
lahf
scas
inc
ja
mov
sbb
add
pusha
in
or
mov
lock
nop
loopne
mov
sub
push
enter
mov
nop
adc
imul
insl
sub
dec
pop
das
sbb
xchg
or
sbb
jmp
mov
xchg
sbb
loopne
nop
pushf
fcomps
or
ja
xchg
inc
pop
aam
ss
jae
cmc
int
lea
xor
mov
mov
sub
inc
aad
aaa
xchg
fdivl
int
aam
lds
cltd
stc
rcrl
mov
data16
cmp
lret
mov
mov
sub
mov
fnclex
xchg
sub
sub
nop
xchg
fistl
je
fildl
nop
mov
xor
add
sbb
test
fcmovne
mov
nop
push
cmpsl
shll
loope
in
notb
cmpsb
mov
mov
and
subb
int
jp
cltd
pop
and
in
mov
rcr
mov
dec
xchg
fdivl
rorl
nop
sub
sti
mov
test
pop
nop
cli
sub
sub
nop
push
sbb
xchg
dec
xchg
xchg
daa
sub
and
in
dec
push
jb
pop
loope
adc
sub
mov
pop
mov
jne
pop
sub
jle
push
pop
dec
cltd
pop
mov
cmp
movb
sub
cmp
sub
xchg
and
sub
cmp
jne
test
enter
jne
aam
pop
cmp
movsb
dec
add
jbe
outsb
add
xor
mov
jno
cmc
out
and
cmp
and
jne
inc
stos
imul
sbb
fadds
jae
scas
inc
stos
aam
test
cmp
out
test
aad
mov
lret
das
adc
les
ja
ror
push
mov
pop
push
push
stc
or
jg
out
dec
icebp
outsb
dec
cli
xchg
mov
aam
fnsave
push
pop
mov
inc
bound
mov
mov
cmp
adc
mov
jnp
out
and
sub
inc
ja
sbb
hlt
xchg
iret
adc
xor
mov
mov
pop
adc
pop
pop
jbe
push
inc
ret
sbb
push
lods
stc
loope
loop
mov
sub
scas
push
xor
adc
cmp
mov
push
inc
ror
or
in
pmullw
cmp
testl
in
pop
in
sbb
xor
inc
xchg
popf
leave
out
jl
pop
pusha
imul
jmp
js
ss
gs
rclb
jnp
xchg
dec
sti
icebp
pop
cmpsl
mov
jp
cmp
imul
aam
ja
mov
shlb
mov
clc
jne
sbbb
iret
and
inc
outsb
and
out
cmp
mov
mov
fists
jnp
push
arpl
and
incl
mov
mov
and
jmp
xchg
not
jmp
mov
fmul
movlps
movsb
mov
add
jb
inc
jb
sbb
outsb
lahf
orb
leave
pop
mov
dec
mov
es
jmp
cwtl
inc
fcmove
orl
test
xchg
xchg
mov
loope
push
cmp
xor
sub
in
aad
and
in
xor
jbe
adc
loopne
scas
mov
xchg
and
adc
xchg
jge
add
ss
sbb
mov
jb
aam
and
test
sub
push
xchg
or
xadd
inc
push
cli
pop
or
xlat
xchg
push
and
ja
push
sbb
data16
out
aam
inc
repnz
inc
xchg
mov
outsb
popa
pop
rcrb
inc
cltd
nop
push
mov
add
divl
jne
xor
pop
cmpsl
sbb
aad
mov
rcll
and
in
mov
mov
push
xchg
jmp
clc
mov
and
mov
lahf
adc
add
inc
jne
or
mov
rorb
cmc
inc
in
inc
inc
or
out
icebp
mov
sbb
aad
add
ja
or
out
and
mov
push
cmp
cli
pop
xlat
fstpl
ret
xlat
lods
ja
out
dec
jo
call
push
xlat
jmp
ja
pop
xlat
or
sti
fcompl
enter
and
pushl
movsb
lahf
pop
dec
xlat
add
jp
adc
jmp
mov
pop
jge
das
inc
mov
pop
inc
adc
xlat
out
jbe
addb
add
mov
xor
out
loop
xlat
int
push
adc
adc
push
hlt
nop
add
rcr
adcb
in
aaa
ss
fisttpll
lock
ds
push
xchg
fistl
imul
aad
not
mov
jns
inc
addr16
cmovnp
aam
hlt
xor
xchg
out
lods
push
call
xchg
sbb
and
test
nop
leave
xlat
into
add
xchg
mov
pop
sub
adc
test
negl
in
push
iret
imul
xchg
daa
sahf
mov
subb
mov
push
ss
loope
lahf
and
lahf
mov
mov
sbb
popf
data16
inc
jo
sub
or
aam
insb
inc
outsl
insl
addr16
add
pop
mov
in
inc
fistl
fbld
jb
jae
xchg
loope
pop
outsl
mov
mov
nop
je
xlat
pop
mov
stos
bound
imul
mov
inc
push
repz
dec
lea
pop
ja
and
iret
aas
in
mov
out
pop
push
add
xorl
xlat
pop
add
mov
icebp
xlat
mov
adc
pop
in
cmp
adc
pushl
mov
in
out
or
push
js
nop
arpl
jns
sub
inc
nop
xchg
test
inc
mov
xlat
out
mov
aaa
in
incl
or
shr
mov
gs
loopne
mov
adc
repnz
sub
data16
xlat
push
mov
dec
xor
and
iret
add
ret
xor
mov
ja
mov
and
jge
rorl
xlat
sbb
outsl
inc
iret
or
iret
xor
pop
testl
dec
negl
test
xlat
cmp
add
jb
mov
xlat
packuswb
jno
cmp
shrl
test
push
xchg
mov
xlat
jo
cmpsb
fsubl
outsl
inc
mov
stc
pop
push
or
xlat
popf
pop
xor
stos
rorb
mov
or
addr16
aam
jae
rcll
cmpsb
aam
sub
das
pusha
addr16
mov
into
sti
push
adc
or
out
lahf
xchg
mov
mov
loope
pop
scas
imul
or
push
xlat
bound
mov
xlat
xor
jp
mov
sub
negl
test
jae
cmpsb
mov
pop
adc
fldt
xlat
pop
repnz
mov
jp
add
or
pushf
push
mov
xchg
lret
dec
adc
nop
jecxz
xchg
dec
adc
shll
push
sub
xlat
adc
test
dec
in
add
out
adc
jo
mov
out
sub
xor
pop
and
iret
push
dec
pusha
cltd
inc
in
jle
inc
jl
data16
push
inc
pop
dec
xchg
sbb
movsl
subb
fs
add
lcall
adc
cld
out
jnp
sub
rcl
rcll
enter
out
push
rolw
cltd
xchg
repz
testb
rol
mov
fsubrs
std
enter
mov
xlat
cmp
into
nop
lcall
mov
cs
rorl
or
ret
and
mov
daa
ficomps
mov
xchg
jmp
jns
mov
into
rcll
inc
xlat
mov
test
insb
frstor
sub
shrb
xlat
xor
pop
test
iret
push
mov
dec
lret
xchg
xlat
jg
inc
inc
add
loope
ds
push
jnp
fcmovbe
sub
xchg
push
mov
jns
test
pop
push
iret
mov
inc
inc
adc
bound
popf
ja
cmp
cmp
or
xlat
arpl
test
xlat
push
fbld
xchg
add
jne
xlat
rclb
nop
out
push
aam
test
xlat
repz
rcrb
or
xor
or
sbb
xlat
repz
and
call
cmp
jb
inc
add
loopne
jmp
cmpsl
nop
outsl
sub
ja
scas
mov
pop
sub
push
dec
lcall
xor
xor
xor
aaa
je
xchg
mov
mov
mov
insb
addb
push
xlat
add
aaa
lret
mov
test
sub
pop
into
xlat
les
lock
sbb
lods
mov
mulb
out
movsb
jle
aad
mov
sub
ret
sahf
mov
lods
scas
call
push
cmc
scas
mov
jns,pt
rcl
clc
repz
xlat
sbb
inc
mov
cmpsb
xlat
gs
into
jecxz
lret
mov
pop
movsl
xchg
pop
xlat
mov
mov
cmp
xor
pop
call
mov
lds
gs
sbb
or
xchg
inc
iret
sbb
push
cmpsl
xchg
mov
int
repnz
xchg
pusha
mov
nop
imul
dec
sti
loopne
lods
in
xchg
adc
das
adc
enter
add
sub
rep
loope
mov
and
mov
aad
lock
sar
mov
bound
push
outsb
push
xchg
xlat
inc
add
xchg
pop
sahf
add
and
dec
mov
sub
xchg
mov
test
scas
std
les
iret
pop
pop
out
inc
sbb
pop
xchg
pop
add
rcll
addr16
dec
call
jbe
mov
sbb
out
xlat
mov
rcrl
fcomip
in
jne
pop
inc
andb
pop
and
rclb
mov
ljmp
mov
into
mov
or
out
ljmp
mov
lret
rcrl
lret
ret
adc
xlat
loopne
daa
out
ljmp
xchg
sbb
xlat
xchg
les
ret
jmp
popf
pop
in
push
jg
rorb
jl
neg
insl
jnp
ljmp
adc
lods
xchg
pop
inc
xlat
push
or
and
fcom
xchg
xchg
iret
sbb
aas
in
add
xlat
scas
pop
stc
xor
push
pop
or
jecxz
push
cli
mul
ds
xlat
inc
mov
int
addr16
xlat
rcrl
scas
sbb
xor
in
mov
pop
inc
imul
xor
stc
fwait
mov
fcmove
fmuls
cmp
iret
adc
in
inc
xlat
jae
arpl
mov
sar
sarl
mov
shll
mov
push
rcll
pop
iret
pop
xor
shll
mov
mov
xlat
ret
xor
gs
jae
pop
cmp
add
adc
subl
leave
aad
fsubrl
pause
xor
xlat
in
mov
pop
dec
cwtl
sarl
xlat
in
pusha
push
push
popf
xlat
mov
inc
add
xor
ds
dec
fwait
adc
inc
dec
mov
cltd
mov
inc
jle
cs
pop
shrl
mov
stos
roll
push
fcoml
lea
sub
hlt
fxam
cli
xlat
aad
push
dec
scas
out
pop
pop
aad
mov
cli
cmpsb
xlat
insb
inc
scas
in
jb
cmp
subl
mov
push
int
imull
bound
shl
mov
xchg
into
mov
jne
mov
rcll
shrb
xlat
lods
pop
mov
iret
mov
std
xor
jge
xor
jbe
and
sarb
mov
in
outsb
xor
lock
or
sbb
shlb
cmp
pop
popa
mov
jle
xlat
movb
pop
shl
cmp
outsb
cmp
push
and
cwtl
add
or
mov
aam
mov
rcll
mov
jne
cs
out
add
das
fldl
dec
xlat
mov
cmc
stc
stos
mov
fsubl
sub
iret
and
divb
dec
add
xlat
fsts
cmpsb
aam
and
loop
cli
or
testb
xlat
and
sbbb
sub
ljmp
xlat
xor
popf
gs
dec
mov
pop
lods
pop
aas
aad
imul
dec
test
loop
cli
add
jb
xlat
sub
outsl
pushf
imul
repz
or
mov
insb
repz
inc
cs
mov
out
rcl
or
sbb
in
movsb
jns
jmp
lods
pop
std
sub
add
push
ret
shl
mov
jo
negl
xlat
inc
sbb
lret
dec
cmp
xchg
mov
cltd
pop
fmul
add
into
cmpsl
or
sarb
rcr
jp
xlat
inc
jg
dec
cld
lock
mov
inc
aaa
inc
iret
mov
adc
push
int3
jecxz
push
jp
iret
mov
cmp
dec
xor
cmpsb
mov
cs
hlt
lods
or
inc
dec
into
jns
lahf
outsb
test
adc
fcmovnbe
jp
lea
into
mov
xlat
mov
xor
scas
bound
and
cmc
adc
sub
push
cwtl
adc
push
xlat
add
cmp
xlat
aaa
xchg
adc
cmp
jmp
fcoms
int
xlat
dec
pusha
pop
je
adc
xchg
call
call
push
mov
imulb
jne
test
mov
dec
fiadds
out
ror
mov
aaa
dec
xchg
push
jne
xlat
sarb
call
lods
addr16
sub
lea
xor
fisubl
push
pop
mov
call
aam
push
mov
ret
subb
push
rcrl
xchg
push
mov
adcb
jns
clc
stc
ret
and
repnz
sbb
inc
xchg
bound
movsb
enter
mov
or
cmpb
sbb
lods
sub
and
jnp
out
pop
xchg
sub
mov
repz
push
mov
add
cmp
pop
push
xchg
cmp
mov
enter
aas
xchg
movsl
rcrb
jbe
neg
and
xchg
jge
scas
fs
pop
dec
sub
lahf
add
xchg
movsb
push
orl
jnp
mov
jmp
mov
jae
loop
xor
pop
add
arpl
in
xor
sahf
imull
sub
mov
dec
sbb
lds
xchg
movsl
add
jg
es
xor
sub
sbb
jmp
jno
add
xor
inc
xlat
xchg
add
sahf
sbb
fisttpl
mov
sub
add
pop
push
mov
test
adc
jbe
jo
clc
sbb
cld
iret
in
dec
imul
loop
and
nop
mov
ficoml
mov
cs
push
pop
lret
xchg
aam
xchg
fcoms
ret
push
xor
insl
and
sbb
ficoml
sbb
stc
je
inc
sub
pop
and
and
sub
mov
xorl
lock
xchg
dec
mov
aas
ret
xchg
ret
ss
xchg
mov
adc
sbb
jns
and
rclb
jge
adc
push
notb
icebp
pop
imul
jmp
xchg
fistpl
out
jge
lret
aas
xchg
xchg
adcb
sbb
repnz
int3
pop
mov
in
mov
sbb
in
xor
in
pop
imul
lahf
pop
cmp
mov
and
stos
imul
enter
lea
incb
ja
stc
mov
pop
dec
ss
nop
lods
inc
jae
dec
in
push
inc
or
lahf
imul
jmp
data16
mov
stos
daa
push
nop
add
paddusw
imul
xchg
and
iret
jne
imul
stos
xchg
sub
adc
lea
leave
call
scas
add
ja
fs
loope
cld
mov
mov
sub
int
jmp
sub
inc
jo
dec
mov
sbb
es
icebp
mov
in
push
sub
test
sahf
dec
aas
lcall
jle
lret
mov
data16
call
inc
repnz
testb
xor
rorb
or
test
mov
es
sar
sub
call
data16
fcomps
rcll
sti
scas
push
int
mov
xchg
xchg
push
pop
sbb
mov
imul
jnp
sbb
and
int
pop
jecxz
das
inc
pop
push
pop
clc
sub
push
addl
add
mov
sbb
xor
cmpsl
popf
mov
push
xchg
mov
stos
iret
sbb
aam
subb
int
scas
fists
fldz
and
add
pop
daa
mov
inc
out
add
ja
cmpsb
in
dec
repz
jle
mov
sub
testl
in
ds
nop
mov
pop
mov
and
pop
and
cmp
lret
fcmove
pop
lea
mov
int3
xchg
stc
mov
test
out
aad
xor
dec
mov
into
or
add
scas
push
loope
xor
ss
aad
pop
rorl
jno
push
lret
in
dec
mov
inc
jl
jle
jb
inc
lret
out
insl
dec
cmpsb
mov
mov
decl
popa
iret
les
fdivs
mov
xchg
outsb
or
jnp
inc
sub
mov
or
nop
lahf
das
mov
pop
mov
jbe
sub
add
xchg
lcall
imulb
pusha
imul
enter
xchg
inc
nop
jns
xor
leave
scas
mov
arpl
xlat
xchg
sbb
push
imul
int
push
adc
faddl
push
add
adc
xchg
inc
push
in
popf
nop
sub
test
pushf
shll
dec
imul
mov
xchg
mull
cmp
mov
in
aad
mov
sub
push
aaa
xchg
out
fistl
movsb
mov
dec
xchg
push
in
cmp
mov
inc
mov
sub
mov
push
mov
test
lahf
pop
adcb
inc
fdivl
inc
std
inc
mov
imull
je
icebp
test
xchg
mov
clc
jge
sbb
js
jnp
push
xchg
mov
jmp
pop
bound
cmc
mov
adc
mov
loope
adc
jo
fstpl
xor
outsb
or
and
shrb
mov
addr16
cmp
add
xchg
mov
addr16
fsubrs
test
loope
xchg
sbb
in
dec
xchg
aad
push
nop
bound
lcall
iret
dec
outsb
xor
mov
push
out
or
shlb
xor
add
inc
mov
mov
test
xchg
jnp
xchg
push
dec
inc
iret
inc
mov
mov
dec
xlat
xchg
ljmp
les
xchg
adc
sub
pop
lea
adc
filds
mov
jecxz
mov
ret
xchg
xchg
int3
fdivr
cmp
dec
adc
xchg
imull
inc
dec
enter
cld
clc
cmp
repz
mov
mov
jbe
cld
mov
ret
nop
mov
icebp
jmp
in
adc
pop
mov
xor
cmpsb
xchg
outsl
push
in
repz
int
sub
aas
loop
adc
imul
mov
clc
mov
sbb
dec
dec
test
repnz
aad
jg
sti
push
cmc
mov
fwait
mov
fiaddl
jno
jg
ret
imul
iret
ss
adc
sbb
dec
adc
pop
scas
lret
lcall
sub
sahf
insl
out
aam
mov
lods
aam
repnz
cmp
int
dec
jo
test
fimuls
sbb
subb
ret
clc
push
nop
popl
aaa
mov
xlat
jp
push
aaa
and
daa
out
insl
cltd
push
pusha
outsb
mov
jb
out
fld
scas
push
imul
push
sbb
mov
nop
icebp
inc
aam
aad
sub
dec
pop
mov
inc
mov
sarl
xchg
iret
xchg
fldenv
add
xlat
jle
mov
ljmp
xlat
push
pop
or
xor
xlat
jb
pop
movsl
cmp
xor
jg
and
push
jmp
sub
jecxz
lods
push
call
cmc
xlat
mov
mov
push
sahf
push
iret
ret
mov
out
jecxz
xor
cmc
arpl
push
mov
cmp
out
outsl
add
rcll
mov
js
lret
xlat
push
fisttps
test
sub
loope
mov
xlat
dec
pop
mov
jge
push
enter
das
mov
mov
sub
or
rcrb
out
inc
pop
clc
ficoml
push
in
sbbl
lock
fcmovbe
mov
adc
push
or
adc
push
mov
xlat
sbb
dec
adc
and
sbb
sub
push
add
xchg
mov
inc
push
inc
push
push
jae
jmp
rcr
cmp
loope
bound
dec
ja
adc
les
ffreep
add
dec
shlb
sbb
or
sub
sub
sti
hlt
sub
xlat
sub
mov
sub
loope
daa
pop
xlat
add
clc
mov
xlat
sub
xor
add
pop
sbb
xlat
inc
push
add
mov
roll
out
or
out
roll
loop
or
ret
shlb
pmullw
push
xlat
xor
sub
fidivs
cmp
mov
jne
nop
and
enter
int
popa
pop
movl
pop
mov
clc
mov
mov
sbb
movb
out
ficomps
xlat
stc
adc
sbb
xlat
pop
shll
cmp
and
fwait
mov
mov
cli
jbe
jle
iret
call
mov
cmc
and
adc
xchg
lahf
fisubl
xlat
daa
leave
popf
push
stos
sti
xchg
add
not
clc
ret
sub
add
sbb
jno
and
mov
dec
pop
push
xlat
enter
or
mov
les
lds
mov
mov
out
xchg
popl
shrl
push
xor
xlat
out
cmpsb
fcoml
add
addb
mov
data16
sub
lahf
hlt
enter
adc
jp
fimuls
scas
repnz
loop
fst
pop
xlat
sub
push
and
jmp
xor
hlt
decl
sub
subb
int
adc
je
mov
adc
decl
frstor
pop
pop
inc
and
xlat
sub
inc
mov
jg
test
adc
push
pushl
push
jecxz
xor
pop
push
scas
mov
push
mov
and
nop
sbb
xlat
mov
scas
add
sbb
mov
pop
mov
sbb
inc
xchg
dec
test
mov
mov
in
or
push
xlat
mov
in
cmp
xor
imul
arpl
fcmovnbe
sub
cmp
xlat
sub
sbb
add
test
divl
jbe
xlat
in
aam
sbb
xor
cmp
jo
xlat
push
or
scas
cltd
addr16
mov
cli
inc
fcoms
inc
ljmp
push
repz
mov
mov
or
pop
mov
xlat
xor
outsl
outsb
inc
pop
mov
jl
sub
mov
lea
mov
push
dec
cltd
cmpsb
pop
cltd
lret
aad
mov
je
lcall
and
out
jge
imul
out
loop
xor
xlat
sub
add
out
dec
push
sub
hlt
jg
or
add
xchg
sbb
adc
lea
jp
push
jbe
mov
inc
shll
xor
xlat
outsb
inc
or
jecxz
pop
xlat
sub
push
cmp
scas
jb
iret
icebp
sbb
sar
mov
xlat
mov
cmp
pushf
test
cmp
push
inc
pop
push
movsl
mov
stos
sbb
imul
ret
fldt
fildll
xchg
xlat
pop
mov
or
or
test
popf
bound
xchg
adc
fcmovb
jbe
and
hlt
pusha
cmp
mov
loopne
enter
inc
in
xlat
and
adc
mov
mov
xlat
test
repnz
test
call
xlat
scas
or
sahf
xlat
in
shl
fistps
gs
out
iret
mov
lcall
test
dec
and
arpl
mov
mov
push
test
push
in
movsl
adc
jb
out
aad
jne
push
mov
xlat
cmp
cmp
add
mov
xlat
inc
leave
sbb
pop
inc
and
out
aad
fsts
nop
mov
mov
loope
mov
test
mov
mov
xlat
xor
fwait
lret
xlat
popa
scas
jle
lcall
lahf
std
push
mov
push
stc
mov
mov
or
add
cmpsb
cmc
lahf
pushf
imul
sub
mov
mov
movsb
or
mov
jg
test
jmp
loope
or
rol
mov
sbb
add
adc
popa
fcmovbe
jnp
mov
js
add
mov
iret
push
fstpl
icebp
push
xchg
push
jno
repz
les
filds
pop
iret
ret
mov
aad
add
push
pop
lahf
aaa
in
out
ret
adc
push
xlat
scas
shll
cwtl
mov
xchg
or
mov
mov
and
stc
jl
pop
xchg
xlat
cmp
dec
je
dec
xor
mov
inc
cld
push
and
xlat
or
mov
mov
fstl
loop
mov
xlat
inc
pop
mov
gs
fbstp
scas
jae
popa
mov
je
dec
std
imul
dec
xchg
push
jae
jne
add
hlt
jg
xlat
shrl
jecxz
jnp
xlat
lret
inc
sahf
hlt
icebp
lcall
mov
jnp
xlat
rorl
lret
dec
xlat
aaa
push
jl
cld
aad
lret
std
mov
clc
or
mov
dec
xchg
aas
lock
or
cwtl
xchg
jmp
or
cmpsb
lods
inc
fdivs
shll
out
test
xlat
jo
sbbb
dec
aaa
adc
lock
and
pop
pop
xlat
psadbw
jp
adc
stos
mov
inc
push
testl
dec
mov
in
sysexit
cmp
xchg
and
addr16
mov
add
xchg
and
int3
lahf
gs
mov
xlat
mov
mov
mov
sub
sbb
outsl
dec
push
and
movsl
xchg
xor
add
push
fcmovbe
cmp
add
jge
push
out
xlat
daa
lret
cmp
dec
xchg
jno
in
stos
xlat
ss
mov
xlat
push
inc
movsb
mov
insl
loopne
iret
idivl
or
addr16
cmp
int3
xlat
xchg
inc
es
and
inc
insl
jp
ret
pop
std
repnz
in
lds
jne
movsl
bound
aaa
dec
jbe
rcll
push
jbe
sbb
testb
mov
cltd
data16
and
xlat
fstl
jmp
jb
mov
xlat
xor
lahf
dec
pop
sbb
aam
fisttpll
mov
and
xlat
imul
cmpxchg
xor
jo
mov
mov
loopne
xlat
js
insl
pop
push
lods
fscale
xlat
cmpsl
pop
mov
jp
push
dec
lea
xor
aad
clc
cmp
xlat
pop
pop
movsl
mov
xlat
hlt
mov
insl
add
mov
bound
cltd
cmc
data16
cld
movl
shlb
dec
adc
xlat
call
lds
and
cld
stos
imul
mov
iret
ret
fs
sbb
insl
outsl
hlt
out
add
xchg
xlat
ror
aad
fstl
jb
ss
ds
push
mov
inc
popf
pop
fnsave
int3
mov
mov
insb
lock
jl
mov
aam
cld
push
loopne
sahf
xor
cmp
jmp
xlat
pop
ds
dec
mov
sbb
mov
xlat
cmp
aam
xlat
jae
in
aaa
sub
xor
outsb
xchg
out
adc
int3
repnz
xchg
cwtl
fisubs
add
in
inc
jge
mov
push
adc
inc
mov
dec
pusha
xlat
jae
dec
fwait
or
and
and
out
testl
pusha
stos
aam
sarl
arpl
fs
push
xlat
mov
xor
rcll
cmp
and
dec
and
stos
add
sarl
mov
xchg
lret
repnz
adc
pop
push
scas
pop
xchg
lds
inc
jns
sub
fcoms
daa
xchg
fldenv
mov
add
cs
pop
mov
cmp
inc
push
inc
push
xchg
sbb
pop
and
icebp
pop
arpl
dec
sub
ljmp
rol
aam
sub
inc
dec
push
push
cwtl
loope
pop
jno
mov
nop
scas
mov
or
and
inc
jp
fsubrl
add
pusha
sbb
add
ret
push
cmp
and
lret
mov
sub
mov
add
mov
xchg
in
fstpl
ljmp
repnz
cmp
xchg
xor
out
test
dec
aam
sbb
adc
push
out
push
outsb
or
in
notl
ret
mov
outsl
or
mov
xor
test
sub
int
pop
test
xchg
imul
add
repz
xor
xchg
inc
lea
pop
cmpsl
jne
adc
jle
arpl
inc
xchg
xchg
nop
sbb
dec
push
xchg
sbb
nop
jecxz
sbb
das
jle
dec
or
mov
bound
or
jge
pop
mov
xor
mov
jp
aas
loopne
mov
xor
jbe
fwait
xor
mov
icebp
sbb
popf
outsl
xchg
jo
xor
int
mov
adc
mov
pop
aam
mov
aam
mov
popf
lahf
insb
dec
sub
push
xlat
pop
cmp
js
add
lcall
aam
outsl
test
inc
xor
adc
cmp
adc
inc
movq
or
push
mov
push
add
fnstenv
mov
dec
xchg
in
outsb
mov
dec
push
sub
and
clc
jecxz
xor
or
orl
push
mov
dec
inc
stos
sub
test
rcrl
addl
xchg
mov
lret
dec
popf
mov
call
dec
push
cmp
nop
outsb
mov
lds
and
mov
out
xchg
mov
mov
insl
das
insl
mov
mov
dec
pop
push
bnd
adc
fsts
jg
lods
push
jo
sub
push
repnz
popf
sbb
dec
gs
bound
ljmp
ret
xchg
pop
stos
sub
xchg
clc
or
mov
lods
in
out
nop
and
pop
mov
ja
pop
in
pop
mov
or
pusha
nop
in
loopne
rcrb
xchg
mov
stos
aaa
stos
mov
andl
rorl
push
push
aam
fs
or
sub
xbegin
dec
pop
jnp
and
negl
inc
push
aad
mov
xchg
cli
lds
fmull
jecxz
scas
in
daa
popf
aas
add
popf
stos
int3
jb
ds
mov
lret
jns
fidivs
je
xchg
cmp
pop
xor
jmp
fsts
test
push
lea
cli
pop
or
ljmp
stos
xor
cmp
popf
xchg
sub
and
add
fucomp
jne
stos
xchg
movl
filds
add
dec
jg
mov
pop
xchg
jge
xchg
sub
in
ret
nop
inc
dec
iret
out
jo
jge
add
xchg
or
mov
sbbb
cmpsl
jae
xchg
jecxz
out
mov
or
lods
mov
aad
subl
push
push
or
in
daa
sahf
orb
jge
xchg
out
push
negb
xor
jo
push
adc
test
jno
sbb
lahf
aaa
test
repz
xchg
sub
jae
out
xor
fldcw
jle
lods
inc
adc
xor
mov
js
pop
leave
divb
jmp
clc
cld
shll
sbb
sbb
pop
clc
enter
lret
aam
jl
push
aam
inc
js
movsl
pop
add
fs
rorb
fsts
les
out
mov
loop
mov
jb
xchg
out
aad
in
add
rorl
add
in
sbb
les
jae
lds
movsl
das
inc
mov
into
call
cmc
stos
jae
mov
rcrb
mov
movsl
adc
xchg
pop
nop
push
push
and
dec
inc
aad
mov
inc
sbb
lret
jmp
pop
pop
push
addr16
mov
or
push
dec
jmp
ror
repz
cmp
dec
inc
shrb
sbb
fnstsw
ss
add
mov
call
dec
or
scas
and
inc
ja
or
ret
jnp
gs
es
outsl
dec
out
ds
cltd
xchg
test
mov
jp
adc
adc
mov
add
push
mov
xlat
dec
mov
sarl
push
imul
jmp
add
test
xor
adc
repz
pushf
stos
sub
ljmp
adcl
in
loopne
xchg
sbb
loope
pop
adc
fldcw
test
int3
ds
mov
push
jne
out
loopne
inc
stos
xchg
push
dec
pop
repnz
les
sub
add
lahf
xchg
dec
loopne
or
mov
xchg
sbb
push
push
data16
push
mov
push
iret
fchs
dec
jg
jg
jp
fistpl
mov
add
cmp
push
in
cwtl
mov
jecxz
cltd
mov
insb
xor
hlt
mov
loopne
je
xchg
out
mov
add
aam
or
in
inc
adcl
fimull
stc
jmp
xlat
jae
pop
mov
outsl
inc
cmp
sar
push
enter
dec
jnp
mov
outsb
mov
out
aas
mov
scas
inc
pop
cmc
loop
push
sarl
fadd
mov
movsl
orl
jnp
sub
cmp
and
cmp
sub
test
xchg
pop
mov
inc
add
jne
add
nop
dec
loop
add
mov
pop
cltd
mov
lahf
aam
or
gs
fimull
std
sub
fnstenv
pop
add
sti
jg
mov
dec
and
addl
pop
aam
sbb
lret
int
add
insl
mov
xor
add
xchg
leave
and
rcll
icebp
daa
mov
xor
aad
incl
nop
push
and
push
push
xchg
mov
aam
pushf
in
stc
add
repz
fimuls
xor
mov
sub
std
mov
add
pusha
scas
xchg
mov
jae
xlat
jbe
lods
mov
nop
mov
nop
dec
dec
xchg
cmp
or
fildll
jae
sbb
in
lods
pop
adc
or
sub
scas
pop
mov
out
mov
mov
and
sbbl
fistpll
std
mov
test
mov
into
jmp
inc
fsts
ds
mov
xor
or
ficoml
insl
push
pusha
sbb
mov
scas
xchg
xchg
pop
adc
scas
pusha
ret
pushf
sub
xchg
imul
push
xor
xchg
dec
mov
adc
mov
daa
cltd
mov
pop
inc
mov
orb
hlt
shll
xor
push
test
cmpsl
jns
popl
pushw
movsl
call
push
jmp
in
pushf
daa
stos
aas
xchg
nop
xchg
push
ret
mov
movsb
aad
in
in
mov
adc
in
mov
cmp
cli
and
xor
test
repnz
roll
hlt
inc
adc
cmp
xchg
and
xchg
add
adc
push
pop
inc
mov
cmp
sti
ljmp
push
cltd
pop
and
inc
jle
jne
vcvtss2si
sbb
push
sub
orb
mov
fdivl
fcmovbe
fiaddl
adc
adc
inc
stc
cmpsb
popf
xchg
jbe
jnp
xor
shrl
enter
nop
jecxz
ret
mov
jns
add
xlat
ss
out
mov
das
out
and
movsl
mov
push
mov
fmuls
mov
fisttpl
popf
imul
pop
xchg
outsl
hlt
lahf
jne
inc
add
xor
cmp
mov
adc
push
addr16
sub
inc
adc
push
aas
nop
rep
rcrb
jnp
push
int3
into
xor
mov
add
stos
pop
mov
pop
jge
scas
andb
push
sahf
outsb
xor
jmp
jno
andb
cld
mov
aaa
mov
xchg
push
js
push
mov
out
jge
js
idivb
jecxz
fidivs
pop
call
fiadds
xor
fs
mov
cmp
inc
adc
mov
mov
shll
adc
pop
stos
pop
into
mov
mov
loopne
cld
stos
add
adc
dec
or
fscale
xchg
add
jg
xchg
enter
test
xchg
jbe
gs
cmpb
ljmp
scas
outsb
adc
repnz
insl
inc
neg
inc
adc
out
add
push
cmpsb
mov
mov
loope
testl
mov
sbb
aad
xor
sbb
adc
es
ja
or
ror
shll
mov
shl
sbbl
outsb
inc
stc
lea
pop
scas
nop
js
or
mov
in
or
mov
push
push
jne
xor
iret
mov
xchg
ret
dec
add
push
cmp
loope
jne
fldt
ja
jmp
xor
push
mov
repz
add
or
lods
push
pusha
lret
dec
and
push
mov
push
xchg
mov
ret
cmc
jns
repnz
mov
jnp
push
jo
xchg
sub
ret
xorl
mov
push
loope
inc
sub
cwtl
or
xchg
aas
cld
xorb
xchg
dec
movl
outsb
lret
push
nop
subl
aas
xor
xchg
xor
push
gs
nop
cmp
push
sub
filds
adc
jge
push
daa
lret
stc
jno
xchg
or
cmp
push
inc
dec
data16
xchg
push
jmp
data16
xor
mov
push
or
popa
xchg
jp
fstpt
xchg
sarl
nop
ja
jge
pop
or
xchg
mov
stos
loope
mov
inc
fstps
mov
nop
scas
shlb
or
daa
flds
pop
inc
mov
jp
jmp
test
mov
mov
pop
leave
cld
mov
mov
shl
and
push
int
nop
cmp
add
jge
xorb
push
insb
cmpsl
addr16
mov
jae
pop
fisubrs
adc
nop
pop
insb
shrl
cmpsb
in
pop
push
xor
arpl
call
inc
les
sub
mov
pushf
sbb
push
outsb
pop
mov
sar
mov
add
pop
ja
jno
xchg
jge
jmp
mov
push
int
out
fsts
fwait
xchg
aad
repnz
dec
sbb
add
shll
push
nop
and
jmp
push
sub
addl
lods
jg
flds
test
lods
adc
lea
push
add
enter
sbb
jne
mov
inc
lock
iret
repnz
jb
sbb
pop
mov
inc
fmull
int
and
mov
in
outsl
mov
cmc
sahf
mul
nop
lds
dec
sbb
mov
nop
outsb
icebp
add
shll
addr16
mov
mov
in
scas
add
mov
sbb
add
fildl
ss
mov
imul
mov
mov
sbb
cmpsb
mov
movsl
mov
stos
ret
in
movsl
lret
lret
rcll
mov
or
das
jbe
xchg
fsubrl
and
mov
and
add
and
incb
adc
mov
rolb
xlat
inc
in
rclb
nop
scas
jae
call
pop
xor
mov
enter
test
int
imul
ret
pop
xor
test
or
rclb
ret
cmp
lods
jg
mov
leave
push
std
loope
lds
xchg
testb
jmp
inc
mov
sub
add
xchg
sub
and
jae
addl
mov
leave
ret
aaa
mov
bnd
loop
sub
adc
stos
fwait
or
nop
aam
ss
push
pop
jne
pop
imul
iret
outsl
mov
nop
jo
repnz
push
les
mov
dec
notb
or
xor
cmp
rcll
imul
fimull
aas
fidivrs
cmp
jg
push
xor
pop
xchg
cmp
mov
mov
ret
nop
test
push
xchg
out
push
mov
mov
stc
pop
adc
stos
aad
mov
cmc
enter
pop
mov
ret
nop
push
sahf
sbb
mov
jp
mov
and
pop
sub
gs
xchg
push
aad
lea
pop
hlt
push
addl
and
dec
add
pop
repnz
mov
add
adc
xor
inc
subl
or
sbb
push
repz
sub
adc
dec
out
jnp
scas
aam
adcl
mov
lods
push
test
mov
cmc
xor
icebp
stos
xor
jnp
repz
sub
push
sbb
je
ss
push
enter
pop
or
fimull
pushf
lea
add
or
cs
cmc
mov
ljmp
orl
dec
inc
sub
aam
jg
mov
or
push
mov
mov
mov
mov
fists
jbe
das
mov
pop
mov
loop
and
jp
cmp
inc
cs
push
inc
sub
dec
ljmp
and
pop
fdivrs
pop
mov
mov
push
push
adc
dec
adc
popa
dec
popf
in
lods
stos
mov
or
arpl
mov
mov
pop
push
stc
jb
cmp
dec
sub
pop
pop
xchg
mov
stc
adc
adcb
lea
jp
jle
adc
mov
mov
xor
scas
add
sar
fcomp
add
mov
and
lock
xchg
mov
fwait
test
nop
xchg
sbb
pop
lods
shrb
inc
cmp
xchg
inc
mov
bound
xchg
jecxz
mov
mov
xchg
pextrw
or
aaa
ret
imul
into
fcompl
fisttps
xchg
xor
jg
nop
in
adc
sub
and
dec
test
jecxz
orl
shrl
loopne
and
or
lret
xchg
push
push
pop
incl
inc
jnp
aad
cmp
out
stos
inc
sbb
lea
inc
lods
in
cmpb
jne
mov
rorb
pop
iret
xor
cmp
mov
pop
nop
rolb
scas
mov
mov
pop
pop
inc
popf
cmp
jecxz
mov
stc
je
jae
adc
gs
dec
lods
xchg
nop
xchg
push
mov
in
pop
mov
in
mov
pop
mov
insl
dec
nop
enter
push
xlat
es
jae
xorl
sub
jp
fcmovnb
sub
inc
jbe
fldenv
xchg
test
pop
leave
push
pusha
outsl
ret
sbb
lea
jge
clc
pusha
push
mov
test
filds
sub
adc
outsb
fisttpl
decl
pusha
and
push
add
sub
push
out
mov
sub
mov
push
mov
shl
mov
mov
test
xchg
iret
sbb
mov
dec
inc
iret
sub
push
jmp
mov
fsubl
mov
fimull
inc
sbb
push
sub
mov
or
sbb
xchg
mov
xchg
and
lods
mov
roll
inc
push
push
mov
push
gs
inc
or
pop
nop
cmpsb
add
mov
jecxz
pop
xchg
xchg
sbb
pushf
scas
ja
gs
movsb
lds
nop
jecxz
push
xlat
out
in
hlt
movzbl
mov
xlat
inc
jns
cltd
inc
cli
push
cmp
xchg
mov
ret
xchg
rcl
push
cltd
cli
movsl
out
in
push
jb
xlat
mov
dec
mov
sub
dec
push
inc
add
fs
sbb
jg
cmp
ficoms
add
lock
in
addr16
nop
loope
es
popf
into
data16
xlat
xchg
lock
movsl
sub
and
push
push
mov
pop
pushf
xlat
mov
cld
mov
ds
mov
xchg
inc
xlat
popa
lock
xchg
call
mov
sub
cltd
addb
sahf
mov
xor
addr16
pop
sarl
and
mov
das
iret
xchg
mov
sbb
mov
mov
mov
xlat
push
xchg
pop
shlb
ds
and
in
jo
call
fbld
jmp
mov
cmp
pop
push
cmpsb
outsb
fistpl
jne
or
and
or
dec
mov
xlat
pop
and
xchg
bound
fildl
fadds
lret
jmp
xor
mov
mov
outsl
mov
jl
sub
xlat
lret
dec
or
pop
test
fwait
popf
sbb
sbb
lods
inc
adc
std
pusha
mov
add
sti
mov
xor
sub
gs
jb
jne
and
scas
fsts
movl
pop
dec
je
or
out
lret
cmp
js
mov
mov
mov
dec
jns
in
adc
mov
jecxz
sub
add
mov
in
cmp
pushf
or
xchg
out
jge
dec
daa
mov
inc
movsl
xchg
and
jne
add
and
or
jo
in
into
pop
fdivs
scas
xchg
adc
scas
outsl
pop
andb
jbe
test
xor
fwait
loop
mov
popf
scas
sbb
adc
add
cmp
push
shr
jl
sub
psllw
fdivs
xor
xchg
outsb
int3
aam
daa
repnz
mov
nop
push
ljmp
imul
out
push
outsb
push
xchg
lahf
mov
xchg
cmp
xchg
fsubr
gs
ljmp
push
push
out
cli
pushf
jns
or
scas
push
sbb
jmp
dec
cmp
or
cmc
lods
push
loope
and
out
or
mov
cmpsb
in
in
xchg
push
jnp
sub
jnp
movsb
xlat
cld
push
in
out
mov
push
cmp
dec
sbb
push
out
adc
dec
mov
mov
push
add
mov
mov
repz
pop
jbe
add
or
cmpsl
mov
xchg
adcl
enter
sub
into
call
inc
lret
imul
popl
push
pop
stos
pop
movsl
mov
push
sbb
pop
pop
xchg
pop
jp
xor
cmp
add
in
dec
nop
or
shlb
and
push
into
or
aaa
movsb
mov
push
xchg
xor
lods
iret
shrb
test
aaa
xchg
iret
into
test
or
jmp
push
sub
xchg
jmp
aad
mov
call
mov
xor
inc
mov
fs
mov
jbe
rorl
jmp
clc
shr
nop
pop
addr16
mov
inc
test
ffreep
jecxz
xchg
mov
hlt
pop
testl
cmp
aam
fwait
mov
mov
fsubrl
mov
mov
xor
sub
gs
mov
scas
aaa
nop
mov
scas
mov
dec
test
adc
leave
iret
sti
ljmp
push
mov
aam
mov
add
mov
in
arpl
jge
fildl
dec
pop
xchg
sub
push
test
nop
fiadds
xchg
movl
jns
add
shlb
cmc
mov
lods
jmp
inc
cmc
sahf
sub
aam
mov
fiaddl
les
jne
ja
xchg
leave
inc
ret
imul
mov
and
ror
js
loopne
push
or
xor
jp
shll
jo
mov
dec
test
mov
mov
jne
or
sbb
xchg
out
imul
pop
fists
mov
das
pop
lods
ret
rcl
insb
sub
adc
cmc
push
add
pusha
mov
jle
lods
adc
or
xchg
jg
and
sbb
rclb
or
sbb
push
dec
push
push
scas
test
mov
adc
roll
call
inc
hlt
push
cmp
sub
stos
adc
or
xchg
xchg
int
out
cmc
repnz
nop
loope
fcoml
dec
fiaddl
mull
xchg
pop
dec
lock
jg
jne
mov
stos
aaa
push
sar
jmp
nop
xchg
pushf
dec
sbb
and
int
in
inc
ret
pop
sub
out
aad
nop
iret
sub
dec
pop
ljmp
adc
lds
push
push
out
push
daa
jno
and
fisubl
aaa
xor
jne
das
mov
or
push
mov
shll
mov
mov
cmc
stos
xchg
mov
xlat
rclb
loopne
fwait
mov
addr16
jecxz
xchg
loope
xchg
jae
iret
ss
mov
sbb
fstp
imull
inc
fisttpl
out
pop
aaa
cmp
ret
enter
jg
aad
xchg
cwtl
lock
fprem
cli
outsb
sub
add
or
stos
mov
gs
dec
add
xchg
pop
hlt
jp
in
aas
stc
inc
cmp
nop
sbb
sbb
sbb
lods
push
ljmp
xchg
mov
dec
int3
xor
testl
xor
xorb
xchg
dec
or
ret
inc
sbb
xlat
xchg
mov
xlat
ljmp
and
inc
lods
xor
fcmovu
adc
adc
je
xchg
icebp
cld
lea
ljmp
xlat
sahf
push
imul
sub
jmp
and
push
in
dec
repnz
daa
mov
fimuls
cli
adc
nop
mov
sub
ficoms
dec
mov
mov
mov
sub
lds
mov
adc
add
sub
adc
aam
and
sbb
xchg
nop
ror
cli
xor
adc
lods
push
dec
icebp
mov
mov
adc
ret
bnd
pop
test
or
push
stc
pop
pusha
jbe
mov
les
xchg
cli
cmp
scas
dec
insb
aas
stos
mov
jb
lahf
int3
jmp
in
pop
inc
test
pop
sbb
pop
xchg
sbb
dec
lods
aam
sub
pusha
xchg
cmp
push
nop
lock
lahf
cmpsl
fiaddl
scas
sti
or
dec
push
je
pushw
fst
daa
sbb
and
pusha
lds
scas
fbstp
test
cmp
imul
insb
test
push
lea
xchg
les
jmp
gs
div
sbb
pop
sbb
adc
iret
mov
aaa
sbb
pop
adc
xlat
imul
gs
fld
mov
xchg
pop
dec
jmp
xchg
pop
push
inc
stc
xor
shlb
cwtl
inc
push
test
xchg
lahf
nop
pop
or
push
jl
push
cmc
sbb
rclb
scas
fcoml
lret
pop
sub
ss
xor
dec
inc
dec
sarl
pop
sub
cmc
jl
inc
inc
push
push
jg
push
imul
mov
fldt
inc
xchg
outsb
mov
inc
sahf
shlb
mov
rolb
sub
jbe
xor
inc
cld
lcall
test
out
push
or
mov
roll
sub
pop
ret
inc
cltd
sbb
jnp
xor
dec
shl
mov
test
jo
sbb
pop
iret
inc
fcmovbe
adc
lds
nop
out
scas
cs
xor
mov
cmp
sub
ljmp
scas
inc
imul
divb
jbe
inc
dec
push
push
sbb
jno
xchg
jge
filds
inc
mov
xor
rcl
xchg
mov
sub
or
pop
inc
lock
mov
xchg
stos
repnz
lock
jl
xchg
jp
jns
shl
add
sar
xor
mov
xchg
ret
push
addr16
lret
mov
ret
dec
decl
add
mov
or
aaa
repnz
inc
stc
push
add
aad
lret
jb
mov
outsb
andl
cmpb
ljmp
shll
or
cmp
dec
pop
fsub
xor
mov
xchg
fcomps
lret
push
sub
sbb
mov
adc
jbe
xlat
jbe
cmc
stos
icebp
es
mov
sub
sbb
fstpt
adc
sbb
push
fmull
cmp
inc
adc
fmuls
pop
outsl
loope
and
sbbb
mov
pop
out
cli
xchg
gs
fwait
xchg
xor
jae
stos
ss
add
jno
repnz
and
nop
push
ljmp
shrb
sbb
in
pop
and
xchg
fmull
fs
das
stos
jge
cld
icebp
dec
jae
test
xlat
xchg
inc
imul
push
dec
addb
aaa
push
push
in
xchg
add
cmp
and
dec
cmp
mov
sub
inc
ret
sub
nop
rclb
mov
into
jns
call
inc
push
lret
mov
ret
js
mov
neg
cltd
jmp
xchg
aaa
push
or
ret
xchg
jl
lret
mov
aad
xchg
mov
and
or
out
xchg
scas
int
sahf
mov
ss
push
aad
dec
aam
call
inc
mov
movsl
cmpb
cltd
xchg
dec
stos
gs
stc
aad
xchg
popa
adc
outsb
subb
mov
addl
imull
fcompl
lds
out
pusha
mov
jno
jnp
mov
loop
clc
mov
aam
jl
fstpl
imul
adc
repnz
mov
leave
pop
xchg
sub
repnz
inc
fwait
push
push
icebp
adc
in
xor
mov
mov
aam
stos
sbb
shlb
xchg
call
dec
jge
test
mov
subl
mov
mov
pop
ficompl
dec
mov
jb
imul
pop
rolb
divl
int
je
in
fcmovu
divb
push
pause
in
push
mov
outsl
repnz
sbb
pop
mov
xor
int
outsb
sbb
fcmovnb
mov
sub
js
repz
dec
ret
insl
pushf
out
imulb
push
es
push
mov
mov
mov
fsts
mov
mov
mov
adc
adc
dec
sbb
lcall
shl
add
mov
mov
lcall
ficomps
jl
out
movsl
rdmsr
stc
push
sbb
jmp
lahf
push
lret
sub
pop
or
iret
cmp
inc
mov
push
rcrl
popf
xchg
shll
cmc
adc
sbb
sub
in
push
out
push
xchg
stos
mov
mov
and
cs
imul
es
cmp
aad
dec
add
inc
ljmp
aaa
ja
sbb
sbb
xchg
cmp
scas
push
ror
mov
add
xor
outsb
jnp
in
out
stos
test
adc
and
loope
mov
inc
jg
xor
add
ljmp
xchg
ds
pop
push
pop
push
push
sarb
lods
push
cmpsb
jecxz
sub
inc
pop
pop
cmc
sub
imul
dec
mov
jne
gs
mov
push
into
jnp
andb
fs
mov
dec
cli
xor
jp
nop
jmp
iret
mov
push
subb
in
insl
movsb
jmp
push
or
jne
lret
pop
xchg
xor
lock
ret
xchg
mov
jle
adc
sti
sbb
sub
and
pop
pop
xor
fsubrl
das
add
sti
data16
daa
mov
adc
lock
xor
or
sub
in
jmp
adc
sbb
inc
sbb
imul
mov
and
inc
mov
jne
inc
and
ret
and
nop
sti
push
lret
jae
adc
xor
pop
lahf
out
push
lret
xchg
fildl
inc
sahf
mov
stos
jmp
out
int3
cwtl
dec
les
repnz
scas
aam
jl
enter
inc
leave
xchg
out
cwtl
dec
lahf
xchg
imul
add
dec
cmc
push
inc
mov
jecxz
aad
leave
sbb
sub
cli
mov
add
pop
mov
mov
jmp
mov
xor
in
jmp
lods
andl
adc
mov
cmp
gs
int
push
and
fdivl
call
lea
xchg
movsl
dec
insl
pop
adc
in
bound
mov
test
mov
jo
dec
test
sub
add
lds
int3
xor
ja
mov
pop
inc
and
sub
les
add
out
sbb
push
dec
mov
pop
cmp
aad
jno
mov
iret
push
sbb
shrl
rcrl
push
adc
mov
aaa
pop
xor
nop
ds
adc
fidivl
flds
addr16
fstps
xor
jg
dec
nop
xchg
xchg
xchg
xchg
inc
dec
sub
pusha
scas
fs
lret
xchg
dec
and
jecxz
loopne
inc
pop
jbe
dec
imul
nop
out
daa
pop
jno
pop
arpl
iret
xchg
call
push
add
pop
repnz
mov
push
sbb
push
lahf
jnp
sub
lret
test
je
pop
push
loopne
outsb
mov
jg
fstpt
test
cmc
cmp
ret
mov
push
mov
pop
xchg
aad
movb
sbb
clc
jg
dec
fcomps
mov
xor
aam
pop
ret
mov
inc
sub
lock
mov
mov
stc
ror
inc
and
cld
sbb
jecxz
xlat
mov
sbb
lcall
xchg
fiadds
mov
adcb
jae
fildl
cwtl
out
addr16
aaa
idivb
dec
push
iret
sub
cmp
dec
pop
fcompl
loopne
xor
inc
aaa
jnp
rol
ret
shrb
add
adc
hlt
in
jne
scas
pop
rcl
lods
sti
xor
lret
mov
mov
xlat
je
or
mov
ja
fldt
adc
outsb
movsl
rcll
or
xor
dec
int3
xchg
popa
std
pop
pushf
sbb
sub
repz
ficoml
jne
cmp
lcall
mov
negb
ljmp
fcmove
andb
jnp
mov
popf
rcrl
dec
int
fst
movsl
mov
sbb
ja
aas
mov
in
push
cmp
xchg
cmp
mov
inc
or
es
mov
mov
imul
sub
mov
xchg
sbb
daa
xor
rorl
add
test
inc
das
in
xor
out
mov
push
movl
sbb
in
nop
cmpsb
ss
mov
and
out
inc
push
movsl
or
scas
sbb
fistl
aam
cmpsl
mov
push
pop
cmpsl
test
cltd
jne
sbb
xchg
jb
push
cli
cmp
dec
inc
push
and
push
jge
loop
aaa
add
je
scas
fwait
sub
mov
ds
mov
sub
mulps
inc
push
pop
jns
sub
test
scas
mov
pop
lret
inc
nop
add
jl
in
sub
sbb
roll
add
jnp
mov
push
ja
mov
xor
mov
mov
xchg
out
sub
pusha
aam
sbb
aad
mov
xchg
mov
cs
push
cs
movsb
int3
test
mov
xor
or
add
mov
sub
inc
bnd
cld
pop
daa
scas
stc
dec
imul
xchg
mov
mov
out
xlat
xchg
sti
data16
pop
jmp
pop
aam
mov
test
lea
xchg
dec
or
push
and
add
fcmovnu
ficoml
jbe
in
test
jmp
pop
decb
lret
mov
shll
aam
imul
mov
mov
mov
cmpsb
faddl
sbb
pop
pop
xchg
addr16
loopne
mov
pop
push
inc
repnz
std
jo
gs
sbbb
and
jns
sub
loope
rorl
icebp
jl
push
pop
jo
out
fmull
dec
jnp
inc
dec
shlb
pop
push
mov
mov
fcos
push
test
or
dec
mov
pop
xlat
push
ss
adc
pop
xchg
xchg
scas
sbb
call
adc
mov
mov
pushf
mov
mov
push
hlt
ret
mov
out
lods
adc
mov
imul
aam
jl
mov
aam
in
pop
das
mov
jge
lds
push
cmovns
out
push
lea
cmp
nop
outsl
cmp
inc
or
mov
cmp
cld
fidivs
or
rorb
mov
jle
fadd
insl
sub
sarb
push
bound
cmp
mov
ret
inc
nop
pop
inc
int3
scas
jbe
mov
push
shlb
hlt
rcrb
jle,pn
inc
push
mov
mov
pop
mov
pop
out
aam
lcall
pop
popf
sub
pushf
cwtl
mov
sub
dec
je
pop
mov
and
jns
jne
mov
mov
stos
push
lret
or
in
fwait
mov
rclb
call
sbb
rorb
lds
xchg
add
or
stos
pop
sbb
and
mov
and
aam
mov
dec
subl
cmpsl
cmp
mov
or
push
push
es
jbe
adcb
mov
loope
rorl
lcall
xchg
cmp
xor
mov
scas
aad
pop
outsl
mov
and
clc
and
mov
jmp
in
xchg
fucom
push
fidivl
out
rcrb
push
cwtl
cld
cmp
pusha
movb
dec
and
push
add
jl
test
call
repnz
pop
mov
stos
dec
ret
inc
les
out
mov
shrb
adc
xchg
mov
fwait
enter
test
nop
push
inc
aad
xchg
push
orl
sub
repz
mov
out
outsb
add
mov
pusha
insl
mov
pop
inc
lcall
sub
fiaddl
in
icebp
adc
stos
cld
mulb
lahf
nop
add
pop
out
les
sub
pop
push
jg
adc
int3
icebp
sbb
or
mov
test
aam
rorl
ja
xorl
out
mov
shll
aam
enter
js
cli
or
pop
dec
lods
inc
cmp
push
xchg
clc
fldt
shll
repnz
mov
cmpsb
push
sub
dec
ljmp
push
int
or
cltd
xchg
js
mov
push
aaa
and
xlat
mov
aam
or
adc
outsb
mov
popf
pop
mov
sahf
inc
xor
lock
push
cmp
jne
sbb
pop
mov
adc
xor
repnz
pushf
adc
pop
iret
movsb
rcll
or
scas
gs
mov
leave
xchg
icebp
aad
cmc
sbb
pop
push
mov
cltd
adc
xor
leave
aam
push
mov
lds
mov
leave
orl
jae
pmullw
int
pop
pop
jno
xchg
inc
lahf
sahf
aaa
cmpsb
call
xor
test
dec
cmc
xchg
jo
mov
jp
test
aad
push
loop
jnp
sub
sub
dec
outsl
sbb
xchg
lods
ret
loope
add
push
fistl
arpl
mov
jmp
scas
xchg
and
stos
scas
fstl
pop
int3
fisttps
mov
out
mov
imul
push
xlat
packssdw
or
push
stos
fsts
mov
enter
or
lea
outsb
mov
xchg
inc
std
xchg
fidivrs
add
cmpsb
add
scas
test
xchg
dec
sub
sub
and
rol
push
jb
out
push
mov
adc
mov
jp
xor
or
stc
cmpsl
or
outsb
push
push
pop
ja
ja
jne
xor
mov
jecxz
loop
shlb
lods
cmp
ffreep
pop
sub
sti
adc
dec
mov
out
jb
ret
outsl
push
lock
rcll
push
sbb
inc
lret
jg
stc
pop
mov
int
stos
imulb
cmp
pop
mov
ja
inc
test
push
sbb
dec
mov
jmp
gs
repz
mov
or
pop
mov
pop
inc
xchg
call
inc
popf
insl
repz
nop
pop
cmpsl
sbb
inc
or
push
jne
xlat
xchg
scas
cmp
jmp
add
inc
mov
daa
xchg
leave
jb
xchg
cmp
sub
ret
dec
cmp
cmpsl
subb
ss
fs
inc
das
repnz
jne
push
in
mov
cmpsb
xorb
push
movsb
fistps
hlt
stos
and
or
push
nop
loope
lret
mov
jbe
pop
xchg
mov
popf
fdivp
nop
insb
mov
inc
or
xor
jb
xlat
add
out
push
cld
lret
sbb
fistps
stos
adcb
int
pop
xchg
cltd
cmp
sahf
pop
filds
and
shrb
subl
stos
sub
mov
test
popf
jbe
jg
fcmovbe
mov
inc
iret
aam
and
xor
test
je
psllw
or
stc
rclb
pop
cmpl
add
sub
nop
outsl
jno
push
and
in
cmp
leave
mov
sub
cmp
aad
dec
adc
ret
xchg
inc
aaa
cs
push
out
pop
inc
repnz
mov
int
out
enter
nop
mov
or
fistl
adcl
inc
sahf
repz
sbb
pusha
mov
sbb
mov
add
sbb
and
xchg
scas
stos
or
stos
adc
xor
xchg
lock
jecxz
mov
lcall
ffreep
mov
sub
lock
and
mov
dec
adc
xor
fnsave
sub
clc
jae
adc
push
mov
lods
std
loope
mov
pop
mov
outsl
mov
bound
shl
inc
in
and
scas
push
clc
pop
cwtl
sti
or
add
out
pop
xor
mov
inc
inc
mov
and
mov
in
xchg
mov
mov
fldcw
jbe
hlt
mov
cmp
jge
ljmp
int3
add
ja
inc
push
dec
or
sub
push
sahf
mov
in
mov
ljmp
movsb
gs
sub
mov
mov
test
ss
push
cwtl
mov
xorb
jecxz
inc
imul
loope
sbb
aas
fsub
mov
xchg
ret
inc
insl
out
shrb
cmpsl
nop
mov
pop
push
mov
and
aas
sbb
adc
add
bnd
xor
jge
mov
shr
loopne
xchg
dec
push
mov
out
adc
and
iret
test
imull
repnz
ret
bound
ret
inc
imul
jo
insl
and
sbb
cli
xchg
add
loop
fsub
imul
repnz
loope
test
lret
and
mov
push
js
dec
mov
adc
fnsave
mov
or
into
popf
pusha
jae
ret
xchg
int3
push
pop
add
aas
cmp
and
inc
pop
mov
dec
mov
jbe
mov
sub
mov
test
adc
xchg
lock
fistps
pusha
lret
xor
mov
outsl
call
rorb
aad
ljmp
cld
addb
mov
or
fstps
nop
cmp
sbb
dec
mov
and
push
les
sahf
ss
cmp
fisubl
es
mov
nop
pop
test
inc
fistps
jle
adc
loop
nop
es
xor
shlb
cmp
inc
lock
scas
sbb
sbb
jp
dec
dec
mov
sub
push
or
xchg
das
aam
nop
mov
dec
aaa
inc
jmp
rcrb
insb
aas
jl
add
mov
sbb
leave
mov
jge
xchg
mov
outsl
insl
inc
data16
in
pop
stos
jbe
xchg
pop
mov
movsl
enter
mov
jmp
scas
mov
daa
js
mov
cmpsl
insb
and
jg
mov
mov
inc
push
addr16
jecxz
cmp
imulb
mov
xchg
scas
xchg
in
pop
ljmp
jnp
cmp
add
inc
inc
cmpsb
adc
inc
and
dec
inc
sbb
xor
and
sarl
jl
stos
mov
aad
xchg
xchg
jge
cs
jbe
aad
inc
mov
shlb
sub
push
shrb
and
imul
lods
push
nop
cmp
fdivs
pop
out
movsb
push
xchg
xchg
sbb
mov
cmp
push
mov
mov
mov
loop
mov
xor
or
jmp
ror
adc
shlb
lea
xor
cltd
add
fwait
mov
push
xor
cwtl
aaa
fwait
stc
and
push
cmp
shrl
test
arpl
xor
gs
pusha
aad
repnz
or
xor
pop
mov
popf
or
rol
sub
scas
aad
std
sahf
add
bnd
xor
rcr
flds
push
sbbl
sbb
xchg
jnp
mov
mov
or
fcoms
jge
mov
ss
add
mov
loope
test
rclb
in
jg
xchg
pushf
mov
inc
orb
lret
jecxz
ss
imul
sbb
xchg
sub
scas
sub
pop
inc
and
test
lods
xor
into
icebp
les
mov
jo
in
xor
push
jae
adc
fisubl
or
test
or
arpl
lock
sti
inc
rcll
mov
xchg
pop
fwait
out
in
adc
mov
sbb
mov
xchg
mov
push
icebp
frstor
jae
ja
xchg
aad
xchg
inc
lcall
inc
std
mov
or
nop
rcll
xchg
xor
leave
sbb
dec
sarl
and
into
xchg
mov
push
mov
xlat
imul
push
fisubl
bnd
pop
cld
xchg
out
mov
rorl
fdivrl
loopne
mov
js
mov
fdivs
add
mov
int
push
push
xchg
jge,pt
sub
or
inc
call
int
and
loopne
int
mov
int
cmp
roll
lods
or
js
xchg
adc
js
inc
adc
or
push
or
aaa
inc
mov
in
adc
dec
imul
or
mov
test
cmp
adc
and
popf
jecxz
cmpb
jl
rep
push
out
or
jg
dec
lds
cld
addb
mov
mov
sub
cli
push
mov
jno
mov
xchg
jbe
mov
xlat
imul
pop
or
push
in
insl
fsubl
insb
ja
mov
push
in
sbb
je
lods
mov
dec
push
inc
push
pop
fiadds
andb
imul
sub
cli
cmc
push
test
sbb
push
dec
pop
fwait
lret
in
inc
stc
dec
jp
aam
mov
xchg
pop
fcoml
pop
sbb
movsb
lds
sbb
xchg
in
jbe
lcall
or
or
std
ret
out
sub
rcl
xchg
mov
movsb
ja
nop
mov
adc
mov
clc
stos
outsl
mov
out
iret
cmp
outsb
add
xor
adc
les
cmp
mov
das
jg
dec
pop
xchg
iret
xchg
enter
fsubrp
icebp
mov
ror
pop
pop
jmp
pop
mov
jo
pop
xchg
adc
cmp
inc
idivb
pop
out
pop
xlat
in
sti
jnp
outsb
sub
ret
dec
jae
push
xlat
push
aam
into
data16
xor
cmpl
dec
repnz
popa
push
test
shrl
push
and
pop
xchg
sub
jns
sub
inc
sahf
dec
or
movsl
jp
xlat
add
push
fs
jecxz
cmp
in
adc
sbb
push
int
out
xlat
or
dec
loope
repnz
cmp
jbe
mov
fistpl
clc
popa
testl
aaa
outsl
mov
shrl
mov
jns
xchg
ljmp
mov
or
jg
sub
sub
push
loope
dec
clc
mov
fsubrl
mov
fs
push
mov
push
repz
cld
in
push
jnp
sbb
add
data16
lea
inc
fld
fisttpll
lods
and
mov
scas
call
test
cli
mov
shlb
je
xchg
xchg
lods
mov
cmp
nop
idivl
cmp
test
jne
imul
jg
mov
movb
cs
dec
mov
ss
pop
in
call
add
push
xchg
mov
add
adc
mov
and
xchg
mov
aad
mov
inc
fisttpl
mov
cld
mov
pop
push
stos
adc
fistps
xchg
xor
ret
pop
hlt
and
mov
in
filds
sarb
aam
fnsave
das
push
out
fisttpl
fbld
jecxz
xchg
xchg
pop
xchg
push
adc
subl
faddp
xchg
into
sbbb
mov
ja
lock
mov
hlt
lret
xchg
lock
jmp
aam
loope
enter
sub
adc
cmp
movsl
sub
rorl
cli
repz
fidivrl
aam
adc
std
cmp
scas
dec
jnp
push
or
cld
xchg
jge
aas
lcall
push
inc
adc
imul
loope
test
push
repz
inc
sub
shr
ret
mov
add
inc
scas
adc
mov
movsb
sub
xchg
add
test
inc
js
add
cmp
xchg
in
sub
and
andl
leave
jmp
aaa
fisttpll
mov
roll
mov
xchg
sti
aam
call
cmp
mov
add
xchg
push
xchg
lea
cwtl
push
mov
mul
daa
sub
add
push
push
mov
sbb
lods
inc
ljmp
mov
cmc
pop
call
mov
inc
mov
scas
js
add
mov
push
mov
push
sahf
mov
sub
jae
aam
daa
ret
inc
xor
mulb
cltd
cmp
jl
repz
js
nop
and
cmpsl
pop
ds
arpl
inc
sbb
aam
cmpsl
jmp
stos
in
dec
iret
inc
repnz
jnp
cld
inc
dec
test
mov
repnz
outsl
lret
paddb
add
inc
dec
imul
xor
mov
pop
mov
adc
inc
ds
xchg
cmp
sub
sub
in
ficomps
nop
imulb
inc
sbb
push
adc
nop
pop
and
mov
mov
push
mov
out
dec
std
mov
ret
cmp
jge
lcall
mov
jg
xchg
fdiv
sub
lods
inc
mov
out
lock
or
pop
ret
out
or
xchg
je
repnz
sbb
nop
sarl
xchg
pop
xchg
or
scas
aaa
dec
arpl
jnp
in
xchg
sub
jns
faddl
dec
sbb
push
hlt
push
aad
jae
mov
jne,pt
xor
push
cmp
scas
bsr
ljmp
lret
jle
push
push
and
cmp
inc
pop
out
mov
lea
mov
xchg
lock
cwtl
pop
jp
jno
nop
inc
add
hlt
mov
and
popf
mov
add
stos
add
fsubr
sub
xchg
push
mov
mov
ljmp
xchg
mov
mov
add
xor
or
pop
inc
lds
mov
repnz
cmp
nop
cmp
aam
xor
xchg
jge
mov
push
outsb
icebp
push
roll
loope
mov
mov
sub
aas
nop
pop
mov
sub
rcll
lea
cmpl
lret
dec
mov
jecxz
ret
or
arpl
fs
mov
mov
fsts
push
nop
pop
outsb
shll
mov
mov
rcr
test
fdivp
push
pop
xchg
and
ret
adc
les
add
jecxz
mov
adc
mov
iret
icebp
adc
nop
pop
push
pop
shlb
push
jne
or
push
push
adc
add
mov
out
mov
mov
dec
aam
cwtl
adcb
push
jmp
and
push
out
shrl
mov
pusha
call
mov
mov
mov
adc
cmp
pop
push
xchg
pusha
mov
outsb
jecxz
xchg
fisttpl
popf
mov
xorl
test
mov
movsb
mov
nop
cwtl
mov
ret
sbb
lods
hlt
cmp
pop
add
xchg
push
mov
or
xchg
jb
mov
icebp
jp
scas
out
scas
fbstp
push
hlt
mov
adc
int3
jnp
mov
lods
fisttpll
dec
lret
popa
xchg
shll
sbb
ja
pop
in
jnp
mov
jnp
movsb
js
push
dec
repz
orb
nop
xchg
jmp
mov
inc
ss
stos
lcall
into
fisttpl
jnp
pop
mov
jg
push
xlat
push
xchg
sbb
daa
nop
outsb
adc
sub
out
mov
jns
or
and
mov
xor
iret
ficoml
pushf
repz
push
ss
mov
rcrl
iret
mov
imulb
in
fwait
sbb
mov
inc
pavgb
mov
jno
shll
mov
jle
stc
xor
gs
dec
leave
fnsave
and
dec
xchg
mov
clc
xor
xchg
jne
sub
lods
add
xlat
aaa
lods
jne
es
cmpsl
cmp
enter
jbe
call
push
pop
jne
sahf
iret
inc
test
cmp
push
push
sub
ja
loop
add
or
imul
mov
mov
dec
adc
ja
shr
xor
pop
xlat
in
add
xlat
jmp
scas
stos
sub
add
mov
test
test
xlat
ret
stos
fimull
add
xchg
out
call
data16
mov
xchg
es
imul
jecxz,pt
inc
in
lock
inc
pop
add
mov
adc
sbb
add
xchg
xlat
lods
shlb
adc
mov
clc
mov
outsl
xlat
cmpsl
sub
mov
cli
xchg
enter
ror
sub
mov
xor
imul
dec
lods
pop
push
outsl
jl
jae
or
inc
movsl
in
xchg
shll
pushf
sub
cmp
jle
lahf
pop
mov
mov
push
and
pusha
or
in
outsl
movsl
or
xlat
jo
imul
jbe
insb
xlat
shl
adc
fsubs
or
xchg
rcl
adc
iret
iret
dec
scas
in
out
aas
xor
not
push
jp
push
nop
and
xchg
in
jle
test
xlat
imul
push
mov
mov
sbb
add
adcb
jle
adc
dec
push
ds
mov
adc
mov
xlat
fstl
push
pop
xchg
mov
popa
iret
test
xchg
pop
lret
cmp
jno
jge
mov
xlat
pusha
sbb
dec
dec
mov
mov
jne
xlat
mov
lret
addr16
js
xchg
popa
add
rcll
pop
add
xlat
xorb
cwtl
lock
scas
mov
inc
sti
lahf
mov
lret
insl
adc
xchg
inc
lahf
shll
pop
inc
mov
les
iret
lods
idiv
xchg
push
mov
mov
sarb
mov
testl
mov
pop
decb
mov
in
push
or
repnz
push
data16
daa
sti
mov
roll
test
mov
rcr
jmp
shl
xor
and
dec
xchg
pop
add
and
mov
push
and
fdivr
outsb
in
and
int
loope
mov
xorl
sahf
jnp
ret
pop
cmp
icebp
push
aaa
or
stos
add
adc
or
repnz
push
xchg
ja
aas
inc
mov
or
and
mov
and
xorl
jge
inc
fcmovbe
loop
and
mov
push
aam
cmp
aam
add
or
aas
xchg
filds
mov
mov
sbb
adc
xchg
gs
aam
aaa
ficoml
push
mov
xchg
xor
sub
push
mov
fs
jne
cmpsl
mov
mov
cmp
xor
adc
ja
addl
bound
mov
push
repnz
loopne
jmp
cld
jg
xchg
cmp
push
pop
lahf
fs
pushf
jne
cmp
pusha
xor
test
xchg
or
jg
shlb
aad
mov
stos
rcr
pusha
adcl
jae
jmp
cmpsl
xchg
clc
stos
aaa
iret
add
push
cmp
aas
rcl
cmp
or
mov
pop
daa
in
jecxz
sahf
add
or
mov
int3
fidivl
sbb
insb
nop
scas
ret
mov
out
xor
and
lock
movl
push
aas
test
inc
outsb
cs
dec
out
ss
dec
add
mov
mov
lahf
bound
in
jg
cmp
loopne
mov
or
xchg
cmp
jl
dec
xor
or
dec
or
sub
sti
mov
lret
repz
fmul
or
push
daa
jmp
test
in
xor
push
mov
gs
nop
idivb
in
lods
fwait
aaa
adc
cmp
sbb
lds
adc
jnp
add
jl
sbb
xor
mov
aas
stc
faddl
std
mov
scas
or
push
xor
out
aaa
pop
imull
mov
fdivl
add
test
sbb
divl
pop
inc
add
add
mov
pop
xchg
xchg
push
loope
xor
add
and
fwait
xchg
scas
orl
or
inc
jae
roll
or
inc
mov
mov
ret
mov
popf
jmp
dec
xchg
inc
xor
mov
iret
pusha
xchg
xchg
push
cmp
mov
or
dec
add
push
push
lock
loope
shrl
aam
and
dec
gs
and
scas
mov
and
mov
jmp
loope
mov
jne
lods
xchg
jmp
sbb
lret
repnz
shll
out
das
outsb
cmp
pop
subl
push
shlb
flds
dec
lea
dec
mov
jbe
ja
aaa
mov
xchg
lcall
lods
pop
loope
mov
jnp
xor
jmp
dec
mov
pop
scas
scas
aad
stos
in
addr16
and
imul
fnstcw
mov
sbb
bound
loop
rcrl
movsl
addr16
call
jmp
cli
rcll
mov
popl
pop
test
cmp
hlt
xlat
xchg
mov
mov
addr16
aas
adc
lods
cld
lcall
xchg
push
mov
mov
aam
pop
adc
push
rcl
cmpsl
sbb
inc
jmp
jnp
lret
dec
sbb
lret
inc
push
nop
call
lods
iret
or
scas
xlat
out
xchg
imul
enter
inc
pop
gs
add
or
adc
mov
cmp
ja
mov
inc
pop
out
std
aaa
call
nop
dec
idivb
dec
cmpsl
push
loop
rcr
in
sbb
pop
xor
sti
and
sbb
adc
test
xchg
mov
mov
inc
int3
les
fcmovbe
fsubrl
and
pushf
fwait
sub
sub
jnp
stc
cwtl
aam
xchg
inc
inc
insb
sbb
sub
sbb
scas
ljmp
push
mov
je
xor
lcall
mov
out
enter
aad
loopne
ljmp
mov
lds
daa
mov
jb
mov
call
int3
jae
mov
pusha
pop
adc
mov
mov
pop
test
cmpsl
aas
stos
inc
xlat
mov
adc
test
hlt
out
xchg
and
aas
adc
and
xor
sbb
jmp
or
dec
stos
xchg
rcrb
sbb
aad
leave
cltd
pop
sbb
push
dec
xlat
inc
loop
or
lea
daa
aas
pop
push
push
enter
outsb
dec
mov
jns
cmp
xchg
rcll
aam
sbb
out
mov
pop
xchg
ljmp
dec
inc
jmp
sbb
repz
mov
mov
insl
pop
sub
stos
adc
mov
pop
xchg
jns
cmp
lahf
xchg
xchg
pop
mov
sahf
pop
push
fcmovnu
or
ljmp
mov
jmp
or
adc
jnp
sbb
fucomi
loop
inc
fistps
daa
sarl
stc
jmp
sub
in
pop
mov
outsb
dec
push
cmp
xor
orb
xchg
movl
or
clc
fstl
subb
push
xor
test
adc
cs
sbb
in
xchg
xor
and
or
xchg
xchg
enter
mov
mov
es
mov
sbb
push
pop
and
jp
jnp
sbb
repnz
pop
mov
negb
mov
fsubl
jae
rcll
in
push
add
mov
fidivl
insl
adc
imul
stos
pop
aaa
jp
cmp
insl
xor
mov
xor
movl
adc
jo
cmp
mov
fidivs
addr16
push
or
sub
out
xchg
and
repnz
sub
pusha
mov
mov
iret
idivl
stos
ss
and
push
cmpsl
pop
xor
mov
aam
sbb
cmc
repz
icebp
outsb
mov
rorl
lea
loopne
pusha
inc
and
orb
faddp
sti
mov
and
dec
adc
mov
and
adc
pop
xlat
jae
inc
insb
in
push
xlat
pusha
fwait
lret
xchg
or
cwtl
mov
loopne
mov
adc
mov
outsl
fst
jb
fs
and
add
xchg
call
xor
pop
push
and
xlat
adcl
std
jmp
bsr
dec
notb
sarl
jns
cmp
cmpsb
jae
xchg
mov
adc
sbb
lret
ds
aam
push
xlat
addb
lahf
lods
jg
or
xlat
popf
pop
cmpsl
paddq
and
xlat
add
mov
mov
push
out
xlat
fidivl
xor
xor
in
pop
and
add
inc
mov
push
lret
jp
insl
xchg
xlat
test
cmp
jmp
sub
and
jo
push
xlat
repnz
lret
fimull
add
and
int
mov
mov
push
cmp
mov
adc
push
mov
push
rcr
mov
std
lock
mov
fistpl
mov
loopne
imul
xchg
inc
out
pushf
mov
sub
mov
aam
ds
add
cmpsb
test
lock
pop
add
xor
lahf
dec
shll
adc
adc
out
mov
xchg
xorl
or
xor
xlat
xchg
and
add
xlat
push
xor
sti
push
xlat
fldt
daa
mull
cmc
lods
addr16
push
or
shlb
mov
mov
cmp
out
xor
ljmp
fcoml
add
xor
xchg
fidivrl
jo
nop
hlt
jo
sub
pop
xor
sbb
sub
inc
jbe
in
dec
decl
outsb
in
dec
or
mov
add
enter
int3
mov
ja
aam
fcoms
scas
adcb
mov
testl
jecxz
rcll
stos
repnz
out
das
xchg
jne
push
scas
shrl
call
decb
xor
dec
outsl
xchg
inc
and
pusha
dec
outsl
and
cmp
rcrl
pushf
jecxz
movsl
cmp
xchg
xchg
lods
mov
rorb
xlat
push
and
hlt
mulb
addr16
out
cmp
ja
mov
or
in
lods
test
ret
adc
icebp
pop
mov
int3
popa
aam
rcl
and
pop
sub
or
dec
mov
adc
cmp
mov
clc
insl
stos
adc
ss
sbb
repnz
cmp
pop
mov
fwait
stos
jl
fisttps
outsb
sub
into
nop
push
je
dec
push
sbb
aam
lods
mov
xchg
lods
jg
sarl
sub
lret
inc
xchg
sbb
sar
mov
push
mov
test
cs
outsl
daa
dec
push
fcmovnb
xlat
sbb
aad
int3
rcrl
iret
iret
rorl
mov
mov
stc
rcll
cmp
jecxz
cmp
mov
and
xlat
es
std
repnz
movsl
fnsave
shrl
shlb
xlat
in
icebp
inc
adc
cli
xor
repnz
sub
cmp
xchg
lods
sbb
mov
and
cmp
add
mov
push
mov
jecxz
js
mov
xlat
pop
dec
mov
icebp
xlat
pop
into
pop
inc
sbb
fidivs
cmc
dec
subl
imul
cmp
inc
out
orb
add
add
xlat
xchg
call
xlat
cmp
mov
jle
and
cs
out
dec
jo
cmp
test
pop
adc
nop
push
xchg
dec
fadd
xor
xor
stos
mov
jb
cmp
xor
imul
pop
leave
in
mov
sarb
andl
ret
fs
xor
rclb
imul
nop
dec
sbb
call
ja
nop
jle
sub
into
je
nop
out
mul
ja
jnp
inc
fdivr
inc
jge
or
jge
jb
sahf
fcoml
lahf
or
cmp
pop
enter
mov
icebp
push
inc
jg
iret
dec
sbb
sbb
call
out
rcr
or
jo
loopne
hlt
xchg
mov
scas
pop
subl
not
jns
jne
popf
and
aad
push
lret
shll
adc
sbb
xor
mov
jecxz
ss
testb
pop
loope
out
es
mov
jo
cld
sbb
dec
adc
jbe
xor
jbe
inc
test
pop
fwait
scas
pop
mov
push
dec
sbb
cld
movsl
jmp
les
mov
dec
sub
test
inc
popa
add
xchg
sub
jmp
mov
jl
xchg
outsb
stc
or
inc
add
pop
notl
daa
jg
fcoml
les
lds
hlt
popa
pop
pop
popa
loope
rorb
js
iret
and
mov
pop
jmp
frstor
iret
jg
push
and
outsl
mov
aas
sub
andl
popa
sbb
mov
mov
sti
sub
mov
sbb
dec
lds
out
jno
lea
stos
lds
mov
iret
aaa
jmp
xchg
nop
loop
push
xchg
call
mov
inc
lret
adc
fadd
jg
les
xchg
pop
cmp
fldcw
mov
gs
lods
adc
xor
lods
lods
int
mov
sbb
jno
sti
lds
adc
mov
xchg
sub
pop
scas
pop
fidivl
cmc
adc
addl
or
scas
cmp
outsl
fucomip
in
pop
mov
je
imul
pop
adc
sbb
fs
fistl
out
mov
mov
ret
push
mov
pop
iret
nop
push
xchg
cmpb
cld
xorl
nop
mov
mov
xchg
xchg
sub
popa
icebp
aad
sub
mov
sahf
adc
sbb
lret
cmpsb
pop
imulb
jbe
rcrl
pop
or
cltd
mov
cmp
dec
pop
mov
xor
push
pop
gs
add
sub
dec
sub
push
jecxz
repnz
lcall
mov
pop
imul
ds
or
jl
aad
adc
mov
add
dec
and
push
sub
mov
addb
mov
and
dec
test
data16
and
xor
leave
mov
rcrl
leave
mov
int
iret
push
int3
add
movsl
push
xlat
mov
add
rorb
xor
fisttpll
roll
jg,pn
mov
in
rcrl
xchg
jbe
arpl
sarl
xor
pushf
addr16
mov
stc
jae
inc
hlt
xor
xchg
movsb
out
sub
xlat
mov
enter
data16
xor
mov
shlb
outsl
call
push
dec
inc
jae
fcom
xlat
push
iret
mov
iret
jo
adc
bound
lahf
addr16
xchg
inc
shrb
and
dec
xlat
inc
push
pop
lahf
icebp
sub
std
or
sar
jnp
lcall
and
iret
sbb
pop
and
addr16
xor
sub
inc
pop
enter
js
xlat
ficoml
mov
cmpsb
xchg
xchg
int
or
cltd
mov
xlat
fidivl
cmp
xlat
sarl
xchg
mov
cmp
cmp
repz
lea
xlat
fsubs
xchg
cwtl
movsl
adc
fs
cmp
xchg
lods
imul
and
xlat
mov
mov
lds
mov
xchg
repnz
test
push
xor
jecxz
gs
jle
jne
sbb
stos
aad
mov
push
js
mov
inc
leave
aam
repnz
sahf
mov
out
jge
mov
jnp
adc
push
sbb
cmp
aam
mov
and
mov
jmp
movsl
inc
movsl
cld
fxch
dec
push
jb
data16
test
cmp
stos
jnp
in
test
mov
inc
shrl
inc
in
dec
push
repnz
push
out
and
mov
jb
mulb
jne
push
cmp
nop
and
pop
sti
scas
inc
ffreep
inc
aad
sub
push
jp
add
rorb
pusha
ss
mov
add
imul
les
sub
mov
add
icebp
in
push
sbb
repz
shlb
xchg
aaa
insb
adc
roll
repz
and
cs
or
loope
mov
mov
cmpsb
movntps
cs
and
adc
nop
dec
push
jecxz
push
xor
mov
mov
vmovd
pop
imul
pop
in
ljmp
cli
popf
ficompl
sub
jp
xor
mov
nop
mov
mov
and
jbe
enter
call
inc
add
push
rcrl
in
iret
dec
xor
pop
cli
loopne
lret
ficoml
movsl
out
test
mov
lret
xor
aaa
xchg
or
mov
dec
clc
rorb
rcr
push
adc
nop
shrb
jl
call
dec
gs
icebp
cld
mov
pop
mov
cmp
into
pop
xchg
add
cmpsb
cmp
pop
mov
mov
nop
daa
sarl
jg
xor
mov
pop
mov
mov
subb
inc
stos
jbe
dec
fcomip
mull
dec
jno
mov
lcall
sub
inc
mov
adc
movsl
jp
xor
xor
jnp
shll
fwait
out
push
adc
adc
lea
js
test
fisubs
jecxz
pop
shrb
or
cmc
inc
add
mov
aas
and
pop
sbb
insb
jg
xor
xchg
jnp
test
mov
and
xor
mov
call
xchg
stc
ja
movsb
jmp
sahf
push
push
icebp
mov
mov
daa
jb
fadds
cmp
mov
dec
pusha
mov
dec
loope
aad
sub
jmp
mov
pop
and
add
inc
push
aaa
test
das
loope
dec
dec
xchg
cmp
xor
mov
cmc
mov
fldenv
icebp
push
mov
xlat
jp
fmull
xlat
sbb
mov
jo
cmp
rcrl
fiadds
cmp
inc
std
jo
mov
and
daa
xlat
push
cli
sub
pop
pop
sbb
fwait
psubb
ds
jns
xchg
fildl
jbe
inc
xlat
sub
or
xchg
std
je
int3
test
mov
push
mov
xor
ficompl
call
or
push
xchg
stc
add
ret
out
cmc
push
adc
xlat
in
jns
xor
mov
dec
stc
aam
or
icebp
sti
cmpsb
jmp
popw
std
scas
inc
jae
loope
mov
xor
dec
mov
ljmp
pop
nop
aad
jnp
or
in
cmp
ret
ficoms
adc
sbb
mov
xlat
mov
aaa
mov
sbb
movsl
or
mov
jecxz
add
ss
out
cwtl
xor
push
shlb
movb
arpl
sbb
rcll
xchg
lahf
pop
cld
jae
movsb
cmpsb
fisttpl
inc
xor
leave
xchg
mov
mov
shll
jne
xchg
in
or
repnz
rcll
popa
adc
ja
dec
jb
notb
lea
adc
subb
rclb
or
popf
add
push
sub
cmpsb
sub
inc
fcoms
lret
out
mov
mov
add
gs
add
inc
and
mov
outsb
mov
pushf
and
mov
xor
xlat
jbe
sbb
adc
aas
mov
and
repnz
jmp
mov
icebp
push
xchg
or
fdivs
stos
ret
xchg
mov
cmpsb
movsb
jnp
sahf
sub
cmp
aas
lahf
sar
mov
das
adc
pop
push
ftst
cli
mov
sbb
xchg
or
lock
loope
add
in
pusha
es
push
movsb
js
and
lcall
orl
outsl
mov
divb
fiaddl
pop
mov
addr16
sbb
js
jb
push
lods
fsts
and
cmp
aam
outsb
adc
push
dec
nop
xor
pop
das
mov
jl
cmc
pop
in
mov
int3
pushf
pop
jmp
push
lea
mov
hlt
sub
in
jmp
ret
and
pop
sbb
mov
cmp
pop
mov
mov
adcb
sbb
nop
pop
mov
adc
leave
inc
jno
daa
stos
xchg
mov
xchg
gs
in
sbb
mov
adcl
xchg
mov
scas
mov
rolb
addps
xor
and
repnz
out
xchg
push
or
nop
icebp
mov
dec
sub
sub
repz
mov
adc
lds
mov
jne
jbe
into
pop
outsb
sub
lahf
dec
fisubrs
cmp
fs
mov
arpl
and
mov
dec
leave
sub
mov
or
add
ret
inc
pop
daa
mov
mov
mov
int
stos
push
js
shlb
aad
mov
js
push
in
ds
jnp
addr16
push
sbbb
add
xchg
fdivrl
jo
fcompl
shl
sub
test
mov
js
aam
hlt
lcall
sub
add
inc
nop
sub
push
in
sbb
orb
pop
xchg
mov
ret
outsb
sti
das
sub
mov
and
lods
sbb
std
cmpsl
and
shlb
or
rolb
mov
push
inc
repnz
dec
xorb
lret
hlt
mov
and
mov
test
out
roll
inc
jl
jns
cmp
xchg
test
nop
adc
push
push
jnp
sub
les
aad
ret
mov
sbb
push
add
adc
dec
cmpsb
pop
jg
mov
inc
cmpsb
lods
mov
mov
pop
out
jp
pop
adc
pop
cmp
dec
mov
cmp
pushf
fimull
gs
mov
mov
rolb
pop
imul
sbb
xchg
xor
jge
enter
add
sahf
xchg
adc
orl
ret
mov
xorb
mov
add
mov
jae
sbb
xchg
or
jo
rcll
mov
and
xchg
daa
or
cmc
jp
mulb
mov
dec
push
sub
aaa
scas
fdivl
mov
pop
fiaddl
xlat
and
xchg
popf
add
sarb
sub
jle
imul
adc
int
cwtl
cltd
out
dec
ljmp
or
push
cwtl
notl
or
inc
clc
test
out
push
pop
jg
xchg
cs
aam
pusha
mov
mov
push
xor
rorb
dec
insl
rcrl
sbb
pop
lods
push
add
adc
pop
fdivs
test
fdivs
aas
addr16
push
gs
pop
sbb
enter
push
add
bnd
xor
int
cmp
lea
cld
leave
xchg
sub
test
jl
ljmp
ret
add
jbe
std
sbbl
add
cmp
xchg
aam
jbe
lock
adc
push
add
data16
pop
dec
sub
xorb
out
cmp
aaa
movl
add
mov
daa
fisubs
push
movsb
or
nop
pop
xor
fwait
mov
in
aas
or
dec
sbb
ss
ja
out
pop
xchg
loopne
and
pop
push
shll
push
sub
sbb
subb
aaa
jo
sub
pop
add
and
pushf
enter
outsl
jno
orb
stc
mov
push
jmp
insl
jbe
jmp
push
sbb
cmp
in
sbb
movsb
enter
dec
jo
int
std
jne
xor
lods
adcl
mov
dec
sbb
sub
imul
pop
mov
push
leave
dec
roll
loopne
add
shrl
ficoml
xchg
inc
sub
sub
sbb
outsb
xchg
fsubrs
cs
jbe
pop
js
jae
ja
push
mov
add
mov
jbe
fucomip
xor
lea
jg
fists
inc
cmp
jno
push
adc
cli
pop
mov
fcmovnb
das
add
pop
popa
cmp
sub
loope
hlt
mov
dec
push
addr16
jb
stos
adc
nop
xor
rcr
push
lods
dec
dec
fbstp
test
fstpl
xor
lods
into
pop
mov
xchg
sahf
rclb
lods
pop
mov
add
inc
add
addr16
aas
push
les
inc
add
mov
pop
inc
and
jl
dec
stos
inc
cmp
jmp
push
pop
rcl
test
test
rclb
push
mov
jno
loopne
repnz
mov
or
into
aad
sbb
call
xchg
xchg
xchg
add
enter
ss
push
incl
sub
inc
sti
xchg
pop
rclb
fucomi
inc
scas
mulb
ret
or
and
mov
lret
je
mov
into
nop
iret
mov
pop
sub
mov
pop
inc
mov
sub
cmp
sbb
mov
jp
mov
outsb
dec
je
loop
jp
xor
push
or
sbb
push
inc
cmp
jae
cwtl
push
xor
sub
pusha
es
push
or
sbb
ret
sbb
adc
aaa
call
call
jge
lret
movsl
xor
inc
incb
inc
push
jmp
dec
inc
notb
int3
test
shl
jnp
inc
adc
outsl
push
inc
inc
mov
inc
push
sbb
ret
xor
xchg
divb
dec
lret
lcall
xor
pusha
mov
fimull
inc
scas
pop
add
mov
cmp
ja
adc
aad
iret
ror
cmpb
sub
repz
pop
pop
sarb
mov
xor
sub
adc
xchg
add
pop
int
pop
xlat
adcb
cld
and
in
inc
sub
bnd
cmp
popa
push
jg
xchg
lret
add
cld
stos
xor
xchg
testl
mov
adc
lods
mov
loopne
pop
mov
push
push
testb
and
lods
xchg
aas
sbb
movsb
repnz
cmp
lret
loopne
and
mov
dec
add
icebp
imul
cwtl
insb
inc
lret
int
xchg
sbb
mov
shrl
cmpsl
es
push
movsl
aam
rolb
cmp
out
or
push
mov
in
adc
push
addr16
mov
or
dec
int
xor
push
jle
ret
mov
dec
dec
andb
out
mov
loopne
lods
jle
in
test
shrl
pop
or
lcall
xchg
std
das
lea
add
pop
dec
xor
lret
imul
push
adc
sub
inc
imul
sbb
fstl
push
jge
jbe
sub
andb
in
cmp
pop
pushf
in
or
out
mov
inc
pop
cmp
jge
jecxz
and
add
out
mov
push
daa
repnz
ret
xchg
xchg
aas
jecxz
add
dec
iret
mov
xchg
and
aas
and
sbb
inc
pop
lahf
xchg
inc
inc
sub
test
jp
pop
xlat
cltd
pop
dec
add
scas
lods
push
pop
jne
sti
inc
push
and
jae
mov
aam
cmpsl
jnp
aas
inc
and
inc
xor
rorl
xor
shrl
mov
sbb
pop
cmp
add
mov
push
push
negl
pop
loope
lods
cmp
std
mov
adc
dec
std
aas
nop
loope
mov
lods
dec
aaa
movsl
cmp
push
out
cmc
push
daa
stc
lcall
mov
cli
ss
fmul
in
cmpsl
push
cmp
fs
cli
push
xlat
push
aas
nop
repz
lods
xchg
cmp
push
movsb
or
pop
fwait
xchg
cmpl
out
add
ljmp
adc
rolb
dec
gs
inc
jp
sub
cmp
push
inc
and
hlt
dec
mov
fldcw
adc
sarb
fcmove
stos
mov
mov
lret
pop
push
add
in
pop
iret
mov
mov
cli
dec
loope
in
jecxz
leave
fadds
mov
mov
add
xchg
sub
roll
dec
repz
push
pop
pop
jns
and
inc
hlt
adc
sub
outsb
cmp
xor
pop
lret
adc
in
out
fcoml
adc
in
mov
in
xchg
out
test
dec
sbb
daa
mov
jg
cmp
enter
sbb
cld
xor
lds
sbb
scas
xchg
mov
mov
rcl
test
pop
jo
sar
popa
push
pop
jns
or
or
test
adc
mov
mov
pop
bound
jl
mov
xor
ret
mov
jb
mov
es
xchg
call
mov
outsb
xor
mov
stc
jge
xor
mov
and
repz
pushf
movsl
cmpsl
dec
nop
movsb
add
jecxz
movsl
pop
pop
jge
xorb
mov
aam
aam
dec
aas
mov
and
std
aam
cmp
in
inc
pop
xchg
test
movsl
sbb
inc
mov
lock
jl
imul
pushl
or
push
cmpsb
xlat
sti
insb
mov
mov
cmp
sbb
pop
jmp
xor
xlat
loop
push
mov
adc
stos
sbb
pop
js
push
test
xlat
data16
daa
call
sub
cld
push
dec
mov
lahf
xor
mov
rorb
inc
iret
xchg
xlat
push
enter
jne
jo
jle
adc
mov
inc
arpl
data16
xchg
mov
pop
mov
das
mov
or
lahf
fldl
dec
push
push
inc
xlat
scas
test
fisubrs
bound
inc
xlat
ljmp
or
inc
cwtl
jmp
xor
es
xlat
loop
mov
enter
popf
xchg
sbb
sub
sbbb
dec
fidivl
loopne
stos
test
pusha
push
jbe
loopne
sarb
daa
add
lock
sub
mov
xchg
fdivs
fstl
les
std
pavgw
leave
adc
mov
rclb
inc
sahf
push
jecxz
stos
pop
inc
xor
jno
and
aad
cmc
test
rcpps
outsl
int
and
xchg
inc
int
pop
fisubrl
adc
mov
movl
pop
adc
push
cmp
shl
cli
aad
movsb
fucomi
ds
fists
nop
sub
jp
add
sti
out
jo
adc
enter
mov
loop
mov
xchg
into
movsb
sub
push
repnz
lahf
dec
or
in
push
iret
push
shl
leave
push
mov
cmp
into
stc
mov
xchg
mov
bound
jae
inc
sbb
and
popl
int3
fsubrl
jecxz
mov
cmc
jl
inc
loopne
mov
sub
mov
jae
sub
lods
mov
outsb
sbb
lret
adc
adc
dec
xorb
jbe
scas
cmp
movl
hlt
pop
das
mov
mov
or
add
sbb
lahf
xor
fsubrl
lea
dec
stc
ja
stos
inc
loope
bound
inc
cmp
sub
xchg
pop
cmp
jbe
mov
leave
xchg
clc
jmp
push
mov
div
mov
imul
inc
in
test
leave
repz
out
push
fmuls
sbb
cmpsl
nop
sbb
cmc
scas
xchg
movsl
mov
rcrl
lea
inc
sbb
and
stos
or
lock
ljmp
xchg
aad
pop
mov
bnd
stc
sub
mov
jae
pop
shlb
call
stos
sbb
mov
mov
in
lret
jns
fdivr
push
cmp
mov
imul
cli
cli
and
or
xlat
sar
jns
push
sarb
fsubrl
push
out
stc
adc
jnp
jo
movb
add
mov
call
cmpsb
adc
lods
sub
aaa
adc
or
in
aas
mov
adcb
outsl
repnz
je
xchg
and
daa
mov
pusha
shrl
aas
xchg
xorb
pop
addr16
fsubrl
fcoml
lea
sbb
sub
lea
nop
fsts
mov
cs
lds
jle
jae
int
mov
ffree
pop
ffree
xchg
sti
clc
or
dec
std
push
imul
or
mov
jle
inc
jo
jg
nop
inc
or
scas
mov
jne
push
fidivrl
push
xorl
movl
mov
mov
loope
mov
jg
fistl
mov
mov
fmull
mov
clc
mov
es
push
and
xchg
push
mov
pop
push
and
push
adc
jg
inc
adc
add
sbb
in
nop
in
lock
in
mov
lret
mov
aam
out
int
data16
ljmp
mov
cli
mov
cmp
repnz
pop
xchg
pushf
jb
push
lret
sbb
xchg
lods
mov
dec
pop
or
into
add
jmp
lock
aas
pop
mov
dec
fwait
dec
test
int3
cmpl
xchg
jae
scas
mov
sarb
outsb
jo
xchg
loop
test
aad
xchg
push
push
movsl
jmp
daa
mov
call
cld
js
pop
int3
decl
fstpt
jnp
adc
adc
adc
push
mov
mov
in
popf
aad
mov
loope
fsubl
jo
inc
nop
mov
dec
cld
jbe
cmc
mov
cmp
popf
mov
jns
push
test
aam
push
scas
mov
ret
inc
lret
inc
sti
outsl
test
push
xor
cwtl
roll
xor
ror
sbb
fwait
xchg
repnz
adc
add
sub
and
pop
cmpsl
push
mov
push
outsb
push
sbb
dec
inc
orl
xor
outsb
scas
xchg
inc
sbb
adc
data16
add
sub
in
call
stos
adc
jns
sbb
lods
and
mov
aam
xor
ljmp
push
jo
mov
sub
push
mov
adc
out
mov
add
xchg
pcmpgtw
xchg
dec
push
push
imul
inc
in
xchg
push
inc
pop
pop
test
xchg
stc
pop
fmuls
outsl
push
es
les
aaa
or
dec
nopl
fwait
push
inc
icebp
and
sub
mov
push
mov
das
nop
loopne
dec
orb
lcall
inc
pop
jb
rcll
xchg
ret
fistl
dec
mov
mov
aam
xor
inc
cli
scas
mov
movsb
jmp
sub
pop
mov
mov
add
pop
xor
int3
and
or
scas
or
cltd
fisttpll
adc
xchg
mov
pop
fwait
xor
or
lods
push
lahf
in
mov
xor
cmp
daa
xchg
mov
call
mov
cmp
in
sub
and
out
push
cmpsl
xor
mov
inc
lret
mov
xchg
adc
scas
dec
outsb
cmp
sbb
and
mov
mov
cli
jl
movsl
in
incb
pushf
adc
and
negl
pop
pop
or
mov
mov
add
ret
ret
enter
push
lea
jl
cmpsl
rcll
testb
mov
insb
pop
inc
cmp
mov
sbb
ret
sub
popf
lahf
icebp
push
cld
inc
jmp
nop
pop
cs
bound
mov
sub
bound
mov
xchg
leave
aad
pop
push
and
mov
jns
testb
or
pop
ds
imul
rol
push
push
iret
imul
xchg
push
and
pop
clc
or
movsl
inc
or
fdiv
jg
xchg
inc
int
rolb
and
jmp
mov
test
xchg
mulb
loope
adc
xchg
mov
adc
mov
fcmovb
aam
xchg
xchg
scas
add
sub
add
dec
mov
add
xor
outsb
call
jae
add
inc
jg
push
pop
adc
stos
nop
inc
aam
xchg
movsb
or
mov
and
into
adc
imulb
aas
xchg
cmp
add
fcoms
repz
test
jns
sub
jnp
sub
and
jg
jnp
test
mov
xchg
out
ret
sarl
and
je
repz
jg
dec
sbb
lds
ja
and
xchg
test
sahf
dec
fistpll
dec
sbb
inc
clc
mov
inc
rcrl
adc
adc
loope
mov
adc
jnp
and
sub
mov
cmpsb
aas
xchg
xchg
stos
imulb
sbb
mov
mov
repnz
out
lea
fdivrl
sbb
testl
xchg
pop
xchg
jle
scas
nop
aam
pop
scas
push
inc
into
aam
or
addr16
jb
jno
push
jns
cld
dec
xor
cmp
aas
outsb
pop
jo
shll
xchg
movsb
pop
test
imul
mov
in
imul
xor
pusha
xchg
inc
add
cs
enter
xchg
jecxz
pop
popa
pop
inc
cmp
sub
mov
les
inc
mov
jo
inc
aam
jne
add
mov
pop
cs
and
test
jmp
add
mov
jb
mov
xchg
movsb
jnp
imul
pop
adc
mov
and
sub
pop
sbb
or
jo
cmp
loop
add
sub
push
push
mov
fldcw
enter
test
inc
xchg
outsl
stos
push
loop
arpl
cmpb
mov
in
mov
jbe
jae
push
mov
pop
add
inc
scas
lcall
scas
or
and
mov
stc
xchg
sbb
inc
adc
repz
aam
jne
sub
aas
xchg
imul
mov
call
imul
and
es
xchg
pop
jns
daa
and
mov
int
mov
into
loopne
mov
loopne
inc
out
mov
dec
cmp
or
ret
fmulp
or
push
mov
out
push
pop
pusha
imul
in
inc
ja
nop
push
mov
jmp
jo
pop
adc
ja
or
inc
push
xchg
ljmp
shll
enter
xchg
js
cltd
inc
test
movsb
mov
sahf
movsb
icebp
jge
test
repz
jp
mov
sti
xchg
add
lcall
scas
jg
icebp
jl
negl
loop
jae
shll
lret
or
imul
ljmp
insl
sub
adc
dec
jae
adc
ds
jo
or
sub
jge
mov
test
shlb
pop
cmp
or
inc
rol
bound
sub
call
mov
sti
and
adc
test
cmc
dec
rcll
adc
jmp
cmp
cmpsl
nop
and
fsubl
movsl
mov
jmp
jo
mov
in
add
xchg
inc
rclb
test
ss
scas
adc
js
sub
ss
loop
sbb
repz
sbb
out
add
or
popf
out
push
pop
fildl
sbb
loop
lods
cmc
stos
mov
mov
nop
scas
aad
push
xchg
sub
rorl
adc
dec
test
loope
sarl
mov
repnz
mov
mov
out
adc
dec
in
sbb
call
jmp
cld
ja
int3
les
mov
mov
lahf
mov
mov
push
inc
loope
cwtl
or
pop
addr16
sub
sub
nop
cmpb
sbb
adc
and
into
lea
insb
cs
repnz
movsb
push
nop
dec
inc
mov
inc
adc
xchg
ja
es
fcmovne
aam
sub
dec
and
mov
iret
sbb
mov
pop
and
scas
shll
push
jge
and
push
ds
lahf
xlat
ja
mov
ss
stc
imul
aaa
orl
adc
push
fimull
rcrb
rcl
xchg
push
pop
mov
cmpsb
fildl
inc
mov
xor
mov
jp
adc
scas
mov
fildl
icebp
sbb
daa
dec
xchg
ror
add
lret
imul
and
int3
mov
inc
push
mov
nop
mov
mov
in
cmp
and
mov
jbe
loop
mov
mov
int3
mov
mov
dec
jbe
mov
leave
add
cmp
push
cs
adc
pop
adc
int3
sbb
sarb
xlat
iret
adc
mov
lds
push
push
aad
jae
inc
pop
and
icebp
pop
jo
fwait
mov
jae
cmp
out
mov
ret
scas
popa
cmp
iret
jbe
adc
mov
lea
sti
jge
jb
in
ljmp
push
stos
lret
shlb
sub
mov
xchg
aam
dec
push
add
jne
or
push
inc
pop
push
fcomi
out
cmp
ljmp
xchg
sub
mov
push
sbb
or
pop
adc
and
test
mov
mov
adc
insl
sbb
mov
mov
shrb
jae
xchg
pop
aam
out
lds
mov
gs
inc
mul
inc
clc
jb
cmpsb
das
ror
lret
lock
pushl
add
mov
js
add
lods
dec
xchg
movsl
push
lods
cmc
shl
or
pop
mov
stc
xchg
or
dec
push
jno
cli
aaa
pop
loope
sbb
push
in
xchg
test
pop
sub
and
and
inc
out
inc
pop
fld
popa
nop
xor
mov
add
mov
or
and
jno
dec
fidivl
enter
fwait
mov
or
cmc
mov
jecxz
or
aaa
xchg
cmpsl
xchg
cli
pop
add
sbb
fidivrs
sarl
imul
daa
lods
in
fbstp
cld
stos
mov
stos
notl
gs
movsl
jge
repnz
jle
push
cmp
xor
sbb
or
jge
stos
or
dec
or
push
movsl
fcomip
insl
pushf
and
bound
enter
jbe
pop
pop
test
jb
fsubl
daa
in
insl
xor
stos
sbb
pop
mov
je
mov
shlb
sbb
les
xchg
shlb
pusha
adc
sahf
and
out
cmp
push
xchg
push
daa
cld
nop
add
imulb
add
mov
mov
mov
jg
fcomps
nop
lds
add
mov
addr16
repnz
and
push
xor
inc
test
or
jecxz
orb
pop
rorb
sahf
dec
xchg
jns
mov
jns
adc
or
mov
mov
sub
xor
xchg
cmc
testl
pop
mov
sbb
push
sarb
fdivl
outsl
cltd
lock
xor
mov
pop
addl
mov
sbb
adc
mov
mov
test
sbb
sub
xchg
test
jmp
push
adc
sub
jg
rclb
data16
or
pop
jnp
push
xchg
sahf
dec
cvtps2pd
cmp
dec
push
pop
ljmp
movsb
pusha
stos
inc
and
movl
imul
pop
int
adc
pop
test
orb
sbb
push
mov
aaa
mov
daa
sub
js
adc
pop
mov
adc
arpl
je
xchg
ss
int3
mov
add
mov
adc
mov
lock
push
sub
mov
fldt
inc
push
lea
divb
in
scas
bnd
or
fsts
out
mov
out
add
sub
inc
ffreep
xor
and
ja
xor
lgs
pop
adc
push
repz
mov
int
mov
sbb
ret
push
add
fucomp
lock
dec
pop
scas
push
je
out
xlat
sbb
sahf
inc
jo
sub
xlat
sti
mov
lahf
inc
xor
in
cld
xchg
jl
xlat
or
add
xlat
scas
jmp
and
mov
jge
outsl
test
out
sub
sbb
pushf
add
or
lods
aam
data16
or
test
test
and
add
xlat
daa
xchg
xor
cmpsb
adc
into
pop
hlt
inc
add
ja
sub
inc
cltd
idivl
imul
rcr
fisubs
fwait
in
int3
adc
ret
xlat
mov
movsl
or
fldl
mov
in
adc
sbb
ffree
mov
push
sub
sub
in
out
jg
aam
inc
ljmp
xchg
mov
movsl
scas
sbb
aaa
push
cmp
mov
pop
loopne
cltd
cmp
jns
mov
std
mov
std
divl
sbb
mov
cmpsl
sbb
xor
mov
add
inc
data16
push
insl
mov
shl
jge
pusha
test
ja
mov
push
in
inc
bswap
loope
jg
pop
add
adc
adc
aas
aam
int
les
js
mov
mov
inc
cli
sbbb
sub
mov
repz
dec
lea
pop
hlt
sbb
fdivl
inc
mov
dec
push
xor
leave
dec
lret
lods
data16
push
jg
iret
aaa
or
popf
in
test
push
stos
addr16
leave
mov
mov
nop
test
scas
xchg
sbb
xor
mov
sbb
dec
aam
movl
jmp
mov
push
into
xchg
loope
orl
inc
xor
scas
adc
ljmp
daa
pop
adcb
cmp
and
aad
sub
inc
cs
in
inc
push
inc
pop
cmp
aam
int3
mov
dec
cwtl
push
xchg
outsb
push
aad
mov
loope
out
add
cltd
jne
lds
shrl
in
nop
aad
mov
hlt
jl
dec
adc
shlb
testb
fsts
xchg
xor
lods
inc
inc
int3
movsb
fsts
pop
cpuid
or
dec
sub
pop
xchg
sbb
sub
add
xchg
xor
mov
cmp
stos
imul
ficomps
in
sbb
cmp
jnp
sub
push
sub
mov
into
mov
ja
xchg
pop
xchg
mov
fistpl
inc
xchg
aad
pop
mov
in
dec
test
repz
inc
hlt
sbb
mov
andb
repz
sbb
popl
dec
daa
daa
aaa
into
sub
mov
repnz
lea
lret
jg
jno
int
push
or
pop
push
cmpsb
fiadds
orb
ret
xchg
nop
rcrl
inc
movsb
inc
iret
in
push
inc
sbb
mov
xor
data16
out
int
lcall
jae
xchg
add
arpl
pop
xorl
add
cmpsb
or
hlt
mov
cmp
lret
out
scas
xor
jl
inc
push
jb
and
nop
insl
mov
roll
ss
movb
xchg
mov
jp
fcoml
in
mov
out
mov
frstpm(287
jo
repz
pushf
in
mov
movsb
inc
lahf
js
push
or
xor
inc
cmc
incl
sbb
inc
mov
nop
call
and
iret
mov
ss
test
xchg
daa
pop
mov
push
fwait
xchg
mov
mov
imul
aam
adc
jg
das
mov
sbb
cmpsl
mov
add
and
sub
jecxz
loopne
mov
ret
sub
mov
lock
shrb
xor
dec
lcall
lds
push
xchg
popa
pop
sbb
in
push
xlat
add
mov
pop
jae
rorb
jg
fidivrl
popf
add
rol
push
and
mov
push
repnz
xor
or
pop
jecxz
ja
call
xor
mov
pop
mov
adcl
scas
in
loop
sub
jno
sbb
out
pop
jmp
nop
imul
xchg
loopne
push
inc
test
mov
enter
push
jecxz
sub
and
mov
mov
scas
rcrl
or
imul
pop
rcl
xchg
arpl
fldcw
mov
scas
push
dec
je
xchg
imul
stc
loope
mov
dec
jo
xchg
iret
sub
xchg
cmp
aad
popa
inc
fcmove
adc
inc
pop
cmp
lret
call
or
test
aad
imul
testl
adc
int3
lcall
js
pop
fiadds
std
inc
jns
xchg
push
sbb
in
lahf
dec
mov
aaa
sahf
and
test
js
aad
adc
pop
ljmp
add
mov
loopne
shrb
test
fdiv
add
mov
in
adc
xorl
xor
imul
dec
jl
icebp
stos
mov
xchg
aas
call
add
push
inc
jmp
in
xor
popa
push
dec
xor
nop
pop
adc
mov
mov
xchg
adc
jns
nop
cwtl
mov
neg
jo
aam
push
sub
jg
jbe
pop
imul
nop
or
jmp
xor
sahf
data16
add
adc
ljmp
jp
xchg
xchg
jo
pop
rorl
sbb
fwait
cltd
mov
jg
sti
lcall
movsl
lcall
das
lret
sub
aam
xchg
xchg
jno
xchg
mov
pop
xor
icebp
nop
mov
inc
xchg
mov
jbe
and
rcrb
pop
push
sub
out
cli
sub
sbb
jg
mov
out
and
cmp
add
nop
mov
inc
sub
aaa
sub
inc
bound
mov
cmp
mov
inc
pop
movsl
xor
stos
cmpb
jb
ffreep
clc
pusha
add
jbe
sub
pop
jmp
pop
sahf
mov
fdivl
ljmp
or
lret
in
sbb
jo
mov
mov
dec
cmp
mov
sub
mov
movsl
jb
mov
pop
aas
mov
stos
mov
xchg
lods
push
lds
ret
clc
dec
mov
scas
aad
jnp
mov
mov
cmpb
call
inc
scas
push
nop
and
fisttps
test
and
pop
fldt
mov
sbb
rcrl
mov
jnp
mov
int
jecxz
pusha
pop
xor
stc
inc
jge
ret
rclb
xchg
nop
push
ret
out
mov
inc
cmp
xor
mov
aaa
jle
sub
outsl
in
std
fs
push
int
movsb
lcall
fsub
lea
shrb
pop
mov
xchg
ret
notb
gs
xchg
add
or
test
inc
inc
cmc
out
aas
scas
cmpsl
mov
repz
fimull
ret
aaa
mov
sbb
cmp
int3
daa
repnz
and
adc
sub
adc
push
jo
jge
push
int3
sub
das
mov
or
jmp
testl
xchg
xchg
jne
out
xchg
popa
int3
mov
mov
leave
fcoml
nop
mov
dec
bound
vpermilps
pushf
js
xlat
test
lock
push
xlat
stos
cmpsl
lret
int3
mov
xlat
enter
sbb
into
aas
sbb
imul
lock
or
xlat
fdivl
ljmp
fs
inc
push
jg
or
js
pushf
push
jge
test
fstl
mov
pop
mov
pop
shrl
aaa
jmp
fdiv
pop
xcrypt-cbc
cmpsl
xlat
cmp
push
or
jnp
rcl
sbb
aaa
dec
test
push
fcmovne
shrl
fdivp
mov
xchg
pop
adc
aaa
leave
cs
jmp
xlat
mov
mulb
sbb
xchg
ret
inc
sub
adc
and
mov
das
and
jns
pop
repz
pop
push
int3
lcall
leave
mov
xlat
jbe
sbbb
loop
jne
push
inc
lods
rcl
icebp
jg
adc
add
fdiv
mov
enter
mov
aad
dec
gs
movsl
xlat
pop
aam
jbe
sbb
mov
in
xchg
cmp
iret
dec
popa
or
sbb
pop
faddl
out
stos
xchg
jmp
mov
xlat
bound
jne
fimuls
pop
shr
out
test
ja
cmp
xlat
shll
sahf
pop
lds
push
ret
jns
cmp
clc
xchg
inc
adc
stc
xlat
sbb
fmulp
std
add
adc
push
jg
xchg
mov
imul
mov
jp
mov
pop
push
xlat
popa
dec
jno
jmp
outsl
cmp
adc
push
xlat
jae
das
mov
xlat
filds
imul
adc
jbe
mov
clc
mov
inc
xlat
outsl
call
das
xchg
xlat
imul
push
and
data16
adc
xchg
sbbb
es
or
ror
xlat
cmpsl
mov
cld
jns
adc
inc
xchg
dec
gs
pop
les
or
mov
jmp
mov
jns
repnz
jae
add
mov
inc
add
cmp
xchg
test
xchg
pop
leave
push
adc
mov
mov
cmp
jmp
fs
nop
loope
mov
mov
outsb
sbbl
loope
jl
loop
sti
push
pop
outsb
xchg
inc
add
in
xor
and
mov
push
pushf
lahf
daa
or
aas
ja
fcom
jg
test
divl
and
mov
iret
mov
xlat
push
inc
xor
fstl
dec
cwtl
mov
call
test
push
rcr
add
out
dec
or
ficoms
pop
xor
jp
pmullw
inc
mov
push
xor
dec
fcoms
sub
xlat
out
es
in
cmp
iret
sar
dec
xchg
jns
lret
pop
xorl
push
add
push
push
shr
lods
add
xchg
cmp
xlat
callw
mov
add
popa
out
xchg
xor
push
jbe
adc
loope
sbb
or
std
adc
cmp
fldl
xlat
stos
push
pop
pop
adc
adc
rcll
loope
add
lea
and
cmpsl
stc
out
rcrl
push
adc
lds
mov
xchg
push
mov
lahf
mov
clc
add
sub
lcall
outsl
and
fnstenv
or
dec
mov
xlat
adc
in
negb
add
xlat
cmp
adc
sub
es
std
popf
test
mov
cmp
xchg
outsl
idivl
add
hlt
xchg
cmpsb
xor
je
ja
out
xlat
mov
jecxz
xchg
jno
push
fwait
shll
inc
in
jmp
stc
mov
jns
pop
out
gs
xlat
jmp
cld
ret
adc
insl
mov
jge
xlat
add
or
or
adc
sub
dec
test
aam
jbe
mov
mov
mov
xor
ljmp
push
enter
jno
call
lret
adc
clc
in
cmpl
push
cmp
insb
outsl
aam
das
mov
enter
sub
and
xlat
dec
jns
cmpsl
add
test
out
fisttps
fld
adc
enter
mov
fadds
jb
xchg
bound
xchg
popf
push
xor
iret
mov
mov
addr16
adcl
insb
jmp
nop
cmp
dec
pop
cmpsb
or
push
fmulp
scas
adc
xlat
enter
mov
and
popf
lea
jbe
pop
sarb
xlat
jle
and
push
mov
pop
add
mov
mov
dec
std
movsb
int3
xchg
push
jl
xlat
data16
sarl
jae
push
xchg
lret
je
mov
push
and
sbb
mov
divb
out
pop
lods
shrl
out
xchg
stos
lret
arpl
repz
mov
push
das
mov
outsb
aas
iret
inc
imul
nop
call
mov
jae
lcall
jo
in
rcl
hlt
add
jno
or
movsl
pop
xlat
arpl
mov
xlat
jl
out
mov
rorl
pop
xlat
outsb
pop
mov
mov
negb
jle
cmp
mov
xlat
les
jne
dec
xor
adc
loope
aad
test
fcom
aas
jle
jecxz
inc
scas
outsl
xlat
or
iret
jbe
stos
sub
aas
inc
ds
scas
dec
mov
inc
xor
dec
push
sub
shl
sarb
sub
nop
std
cmp
in
xlat
addr16
js
lahf
push
sub
aaa
xlat
inc
push
sub
jecxz
leave
pushf
xlat
jnp
icebp
ja
inc
sbbl
popa
and
mov
lods
pop
pop
popf
and
gs
mov
shl
pop
lcall
aas
daa
aad
sbb
jge
repnz
lods
or
mov
xlat
mov
out
push
in
xlat
cli
addr16
loope
gs
xchg
out
jae
iret
aad
mov
xlat
das
stos
into
aaa
jne
pop
xor
popf
imull
xlat
dec
sarb
sti
mov
repnz
jns
rcl
dec
adc
xor
jle
mov
cmp
mov
adc
xor
xchg
stc
out
adc
inc
outsb
sarb
shlb
ficompl
jmp
leave
mov
js
xlat
push
daa
inc
ja
push
and
pop
adc
push
add
leave
cmp
stc
mov
xlat
push
inc
mov
out
ficoml
bound
cmp
sbb
inc
js
mov
out
xchg
fst
push
cltd
pop
and
dec
xchg
sub
into
mov
push
mov
lea
xor
jmp
inc
dec
negl
repnz
and
iret
ss
xchg
outsb
mov
aad
jo
ret
pop
xlat
push
pop
sbb
je
sub
or
xlat
push
adc
mov
inc
cwtl
out
out
pop
sub
adc
stos
jnp
stc
outsb
adc
xchg
movsb
mov
daa
movsl
mov
mov
adc
inc
jnp
cmp
xlat
stos
ss
dec
xlat
stos
pop
aaa
fld1
sub
int
fs
leave
shrb
or
xlat
cld
push
sarl
xor
jnp
test
xlat
std
pop
pusha
mov
sbb
push
psrlq
or
sub
xlat
outsb
iret
cld
inc
jecxz
je
xlat
shrb
pop
dec
push
sbb
or
leave
lock
rcl
call
sub
imul
pop
fiaddl
sbb
mov
pop
pop
mov
outsb
jo
shr
cmp
xchg
movsb
cwtl
jne
call
lret
je
sti
sbb
in
xchg
pop
jbe
xlat
cmp
push
inc
add
mov
sti
bnd
cmp
sbb
dec
lods
mov
scas
xchg
or
movsl
cwtl
imul
iret
aaa
pushf
fdivs
cmpsl
adc
xlat
mov
mov
jmp
stc
mov
or
add
mov
xlat
xchg
sarb
aas
jbe
cmp
lock
leave
pop
jmp
pop
xlat
mov
jae
insb
pop
xlat
scas
push
fptan
sbb
iret
xchg
and
mov
mov
dec
inc
fistl
push
jbe
xlat
outsb
inc
xchg
inc
jns
es
sbb
pop
lahf
mov
mov
mov
jnp
pushf
inc
dec
leave
cli
adc
lock
push
mov
xchg
pop
sub
push
outsb
pop
xlat
sub
and
jbe
jg
xlat
xchg
and
sub
dec
and
sub
lret
iret
imul
or
adc
or
jp
rcll
jnp
xor
xor
inc
daa
push
xchg
inc
imul
jo
dec
pop
and
jbe
sub
rclb
jbe
aad
xor
pop
sub
mov
cmp
divl
pop
adcb
pushf
dec
inc
xchg
add
inc
xor
loope
movsl
imul
out
push
adc
dec
cmp
push
and
lods
sbb
stc
push
jmp
pop
nop
jne
add
ljmp
xor
mov
pusha
jae
xchg
in
test
cmp
cmpsl
jge
bound
aam
and
mov
mov
adc
push
nop
aaa
stos
inc
iret
divps
jmp
sub
mov
test
fcmovbe
jnp
nop
add
and
pop
add
test
or
dec
icebp
lods
stos
aad
jnp
out
adc
cld
fisubrl
inc
dec
int
pop
jl
in
jne
decl
nop
push
gs
cmp
shrl
xchg
mov
mov
stos
push
jecxz
cmp
pusha
pop
cmp
inc
inc
enter
js
pusha
lret
jg
jb
das
in
lahf
mov
dec
push
pop
jnp
sbb
sarl
push
dec
push
inc
mov
jnp
push
xor
and
pushf
shrl
mov
cmp
faddl
and
cld
es
call
jle
mov
and
xchg
cmp
mov
cmc
xchg
addb
les
push
or
sbb
dec
ret
nop
iret
pop
in
jnp
and
ret
sub
xchg
jno
andb
cli
scas
mov
ffreep
sub
test
insb
dec
mov
lea
rclb
lods
add
lea
fmull
lods
inc
ds
jbe
xchg
xchg
pop
arpl
ficompl
mov
js
mov
jmp
movsb
int3
scas
xchg
pop
jae
cwtl
mov
test
mov
in
dec
xchg
push
jge
xor
mov
push
sbb
mov
adc
cs
aad
daa
dec
add
cmp
and
cmp
orb
mov
xor
jno
mov
bound
fisttps
fmull
mov
test
mov
cld
pop
jne
andb
frstor
cltd
popa
xchg
les
sbb
mov
test
sbb
jnp
inc
push
stos
jge
lret
lds
pop
sahf
jmp
movsb
cltd
adc
pop
rol
mov
mov
cmp
je
int
aam
ljmp
push
mov
nop
movsl
mov
inc
dec
push
add
es
jne
pop
mov
inc
js
js
adc
aam
push
mov
popa
lret
mov
inc
push
sub
jo
push
push
mov
std
in
pop
sub
xchg
mov
or
lret
xchg
lock
pop
sub
subb
loopne
nop
lock
xchg
addb
movsb
or
push
shrl
mov
mov
mov
sub
push
notl
cld
sbb
mov
and
nop
sbb
xchg
ja
xchg
shrb
adc
push
stos
mov
loopne
data16
js
inc
aas
lahf
aas
push
lds
add
inc
sbb
jecxz
outsb
out
rorl
adc
xchg
adc
push
mov
mov
nop
jne
test
and
mov
test
lahf
mov
xor
cmp
lahf
mov
pop
and
sbb
mov
push
jae
div
or
je
add
mov
lret
in
shl
out
xchg
xchg
mov
cmp
dec
pop
ja
enter
sbbl
movsb
adc
inc
loope
sbb
mov
jae
xchg
lahf
ret
pop
imul
xchg
scas
dec
cmpsl
daa
scas
or
out
aaa
aam
sahf
pop
adc
push
nop
outsl
fwait
sahf
aaa
dec
in
cwtl
sub
scas
shl
cltd
rorb
cmpsb
xor
fld
insb
in
jae
cmpsl
ja
or
xchg
push
shll
imul
mov
inc
mov
js
jle
push
push
jmpw
in
jne
cmp
dec
fldt
lods
pop
stos
mov
push
lock
insl
out
sbb
mov
sbb
mov
ljmp
push
cli
aam
fwait
in
dec
adcl
fldcw
cmpsl
add
ss
ja
sbb
mov
lahf
ss
and
jne
repz
push
sbb
jp
mov
sub
mov
pop
fcmovb
xchg
and
inc
iret
sbb
mov
nop
movsb
cmp
adc
insb
adcl
notl
pop
lods
mov
cmp
pop
out
pop
les
pop
mov
inc
ja
mov
mov
add
fs
mov
loop
mov
aaa
or
fwait
xchg
decl
es
scas
hlt
mov
in
je
lret
or
push
inc
fsubrl
roll
jge
pop
mov
xchg
mov
aas
mov
add
imul
movl
arpl
inc
insl
cmc
xlat
jne
mov
scas
add
loope
int
jecxz
sub
dec
xchg
data16
jp
xchg
cmp
mov
xchg
jecxz
shlb
inc
adc
mov
test
lret
xchg
mov
adc
jne
mov
adc
fld
dec
outsl
nop
mov
adc
mov
sub
lcall
jp
xor
scas
xchg
mov
fs
mov
outsb
shrl
dec
pushf
pop
jg
push
std
lods
loop
inc
addl
xor
mov
mov
jge
lret
xchg
shl
dec
mov
psubsb
repnz
outsl
call
ret
aaa
nop
mov
jb
sbb
aam
popf
add
pop
iret
or
mov
mov
xor
pop
cmp
dec
out
sub
cli
mov
movsl
dec
lock
push
out
and
repnz
ss
jmp
push
xchg
scas
xchg
in
lea
and
mov
or
sub
xchg
mov
ret
mov
cli
test
jae
jne
lcall
jne
jg
dec
aam
daa
jns
test
mov
rcrl
je
xchg
cmpsb
das
pop
cmp
test
nop
lret
addr16
inc
xchg
pop
xchg
and
push
dec
fstps
ret
and
jns
inc
jp
mov
data16
or
push
mov
js
sbb
dec
aas
push
mov
ret
testl
mov
dec
test
sub
jg
iret
scas
sub
mov
rclb
neg
mov
shll
pusha
icebp
sbb
adc
cmp
movsb
xchg
lcall
mov
aaa
sahf
adc
xor
pop
sbb
xchg
orb
fs
cltd
int3
dec
leave
sbb
mov
xchg
adc
fcmove
mov
pop
jbe
cmp
jbe
fdivl
mov
push
scas
aad
mov
cmc
nop
and
sub
mov
sbbb
aas
mov
and
int3
shr
add
lds
mov
aad
mov
ljmp
int3
sub
jae
lods
aaa
pop
fwait
lds
pop
push
adc
aaa
inc
sbb
roll
pop
mov
gs
scas
in
mov
xor
pop
add
xor
loopne
leave
sar
scas
and
and
popf
jne
rorl
adc
aaa
cmp
jb
add
and
lret
jae
push
dec
mov
hlt
fwait
pop
mov
imul
add
sub
dec
jo
fsubr
mov
mov
xlat
or
or
stc
jge
jg
faddl
jg
fwait
push
loope
mov
mov
or
jg
mov
pop
dec
add
push
inc
rorb
push
xchg
in
loope
push
mov
mov
pop
adcb
sbb
jbe
movsb
leave
sbb
out
lds
push
jae
aam
nop
pop
daa
and
xchg
add
popa
rol
cmp
cli
ja
cmpsb
daa
pop
pop
fs
jp
inc
mov
ficoms
adc
pop
sbb
mov
aaa
jmp
cmc
ljmp
addb
dec
aam
insb
bound
iret
sahf
out
jl
and
push
pop
nop
adc
push
gs
push
jns
mov
nop
pusha
pop
out
pushw
hlt
xchg
mulb
clc
outsb
daa
mov
test
inc
sbb
les
aam
jmp
jb
popf
sub
pop
xor
sbb
push
add
in
sub
jmp
sbb
add
shll
push
push
loope
pop
bound
outsl
ja
jg
sbb
and
loope
inc
repz
outsb
dec
pop
xor
add
xchg
xchg
loop
pop
loop
push
add
or
mov
mov
and
lea
js
and
rcl
imul
dec
gs
mov
sub
mov
xchg
lods
xchg
ret
scas
mov
jb
mov
adc
xchg
test
mov
mov
jnp
xchg
ret
mov
arpl
add
cmp
cmp
in
rcrl
shrl
scas
xchg
outsb
lret
fimull
and
lock
ja
push
inc
xchg
push
fnsave
outsl
sub
add
aas
pop
nop
mov
lds
push
lds
or
sbb
jecxz
sub
pop
fdivl
add
andb
jecxz
std
xchg
lea
push
dec
adc
setnp
faddp
sub
popf
or
jg
adc
lock
xchg
mov
clc
mov
popa
mov
clc
push
inc
jge
scas
jmp
rcll
movzwl
ds
mov
stos
dec
rclb
inc
leave
mov
addl
lret
and
dec
pop
mov
lock
mull
aas
out
inc
cs
call
fs
adc
repnz
cs
les
jbe
pop
mov
sbb
jecxz
jl
push
fstpl
stos
dec
insl
iret
xchg
mov
mov
daa
jno
bnd
rcll
pop
inc
cmpsb
clc
call
mov
rcrl
pop
push
mov
mov
aad
scas
repz
jmp
nop
and
mull
jg
roll
adc
mov
rcl
dec
je
mov
xchg
aaa
xlat
mov
and
aad
je,pt
xlat
std
jb
pop
ficoml
mov
xlat
fnclex
adcl
sbb
sub
xlat
and
mov
hlt
in
xlat
inc
pop
push
and
fst
and
mov
and
lret
je
push
cmp
adc
iret
xchg
sbb
rclb
push
add
aad
mov
xlat
pop
dec
adc
jns
aaa
cmp
lock
cmpb
ficoml
rcrb
call
xor
mov
into
push
sub
shrl
jecxz
ret
out
int3
adc
adc
enter
cmp
xor
stos
ret
dec
push
dec
imull
xlat
cld
xchg
lea
dec
repnz
rorl
cmp
sub
dec
xor
add
mov
push
sub
or
mov
aaa
xchg
inc
das
insl
jae
cmc
out
push
xchg
jge
push
xlat
int
fmull
xlat
mov
popf
pop
push
mov
xlat
xor
mov
or
bound
call
jl
push
dec
inc
fdivrp
mov
xchg
aaa
test
nop
imull
fisttpl
out
and
push
daa
gs
xlat
pop
fnstsw
mov
aad
loop
add
push
push
inc
gs
add
movsb
xlat
sbb
add
rcpps
jmp
xlat
outsb
and
negl
xlat
out
cli
jb
pushf
mov
jnp
sub
cli
pop
ret
inc
scas
jbe
xor
jb
daa
inc
movsl
mov
jg
rol
inc
cmove
mov
dec
sbb
call
aam
fs
push
iret
sbb
aad
mulb
outsb
popf
repnz
rol
xchg
push
test
mov
xchg
stos
loope
rcl
push
dec
jmp
call
orl
sbb
or
mov
adc
jae
ret
jge
inc
pop
add
mov
xchg
xor
lods
jmp
iret
mov
mov
cmp
nop
in
jo
sbb
jl
xchg
movsb
loope
mov
aaa
add
nop
js
add
lahf
inc
mov
daa
in
iret
icebp
mov
lock
icebp
daa
add
lea
and
xchg
and
scas
nop
loopne
stos
incl
pop
ss
and
lret
push
icebp
aad
in
push
and
mov
js
loop
mov
seto
jmp
push
lock
hlt
xor
cmp
jno
imul
push
xlat
jg
or
sbbl
jnp
int
mov
xor
push
std
xor
dec
mov
in
xlat
lds
xchg
out
ret
sbb
sbb
lret
rorl
mov
jns
or
push
fs
xlat
mov
scas
xor
pop
and
adc
lret
pop
xlat
pop
ret
arpl
addr16
xchg
xlat
mov
or
inc
das
mov
lret
xlat
lret
xchg
mov
dec
add
mov
xlat
or
imulb
push
inc
xlat
push
xchg
and
popa
mov
js
sbb
testb
pop
xchg
fisttpl
aad
scas
sbb
pop
lahf
cmpsb
mov
pushf
xor
icebp
jo
adc
inc
lods
sahf
xchg
fistpll
cmp
out
push
std
scas
add
dec
xlat
mov
jl
inc
std
mov
andl
sbbb
shrb
xlat
add
inc
adc
dec
stos
sti
iret
je
aas
and
adc
cltd
push
cld
ret
pop
xchg
push
int
jecxz
or
and
int
dec
push
nop
push
pop
adc
lea
xchg
xchg
sarl
repnz
lds
out
test
popf
push
xlat
ficomps
pop
es
xchg
dec
xlat
mov
xlat
punpcklwd
mov
xlat
into
inc
mov
mov
pop
mov
movsl
xlat
inc
leave
ss
lret
cld
xlat
fdiv
cmp
push
lods
xlat
gs
cmp
mov
test
adc
arpl
pop
xlat
test
dec
xlat
sub
pop
mov
or
xlat
xchg
lds
mov
popf
cmovne
imulb
jbe
int3
sbb
vpsrlq
pop
pop
pop
lret
pop
lret
aas
pusha
mov
dec
notb
stos
hlt
dec
inc
lock
inc
fdivrl
or
lea
inc
subl
in
push
xchg
call
pop
enter
jmp
stc
xlat
mov
cmpsl
inc
xor
xlat
pop
pop
out
sbb
nop
mov
out
repnz
out
adc
repz
xchg
push
adc
xor
jnp
pop
push
fisubrs
xlat
aas
inc
ret
sub
arpl
jge
push
lock
in
sbb
aas
push
add
pop
outsb
mov
jmp
push
cmpsl
add
jo
mov
sbb
or
mov
mov
adc
sbb
les
mov
or
addr16
push
xlat
pop
test
ds
and
scas
sbb
jl
shrl
xor
sbb
sbbb
iret
sub
inc
fincstp
in
rcll
push
and
aas
jge
push
scas
sub
cmp
loopne
rcrb
arpl
fwait
pop
and
shll
rcll
outsb
cltd
insl
and
pop
mov
ror
mov
push
cltd
inc
rcll
cmpsl
nop
pushf
fsubrs
xchg
inc
adc
aaa
mov
scas
mov
mov
repnz
outsb
mov
dec
mov
pop
jle
add
adc
iret
adc
push
push
sahf
imul
jb
es
loope
add
lea
call
js
xor
pop
into
je
fcoms
sub
test
or
add
dec
sub
push
testl
sbb
dec
dec
test
jbe
jnp
lea
mov
jge
sub
add
fwait
pushf
dec
push
xchg
xor
js
fisttpl
jmp
lahf
or
xor
dec
mov
movsb
or
es
push
adc
inc
fcmovbe
lods
rclb
dec
xchg
lds
inc
push
pop
or
shll
iret
inc
lods
xor
pop
into
sahf
push
xchg
ret
adc
pop
shll
call
nop
test
cmpsl
jp
imul
rclb
jb
adc
call
aam
leave
xchg
negb
mov
lahf
xchg
jno
sbb
mov
gs
xorb
add
lahf
sub
xchg
pop
mov
rcl
mov
nop
jne
cmpsb
scas
mov
out
and
aad
mov
dec
shr
xor
bound
stc
lea
xchg
mov
pop
outsb
adc
imul
sbb
scas
fs
xchg
mov
push
loope
rcl
in
sarb
jecxz
sbb
fcmovne
fnstenv
add
push
push
or
in
ja
fsts
mov
stc
cltd
mov
push
jae
out
stos
ficoms
aad
nop
add
sub
sti
loop
jle
push
dec
xchg
out
jmp
lret
jno
and
mov
mov
push
test
pop
cmc
test
sub
push
rcr
in
inc
imul
xor
xlat
sub
dec
inc
and
jle
xchg
shrl
in
shl
push
inc
aas
dec
jmp
iret
xor
outsb
push
aam
rorb
pop
imul
add
das
jnp
shlb
mov
inc
xchg
cmc
in
or
aam
mov
xchg
js
or
icebp
lcall
xchg
xchg
addl
mov
and
pop
sti
fidivrs
jge
pop
inc
in
scas
fld
cld
outsl
fdivs
push
xlat
xchg
cltd
std
mov
mov
out
pop
leave
in
mov
shl
fcoml
mov
ss
in
push
bnd
scas
xchg
aam
jle
in
inc
mov
dec
mov
sbb
mulb
sub
test
or
mov
aas
stos
sub
std
jnp
ljmp
sbb
or
adc
inc
bnd
and
fnstenv
cmp
adc
mov
lret
imul
mov
xor
test
dec
inc
outsb
loopne
sbb
jb
mov
xchg
fsubr
jbe,pt
mov
jno
popa
push
cwtl
enter
cmp
test
adcl
cli
and
int
rcll
adc
xchg
fnstenv
sbb
loop
cmp
push
jb
sbb
mov
cmp
push
or
nop
push
push
sti
nop
jne
ja
xorl
cmp
sahf
and
cmpsl
mov
sub
stos
pop
add
mov
sbb
jnp
push
roll
lcall
xor
daa
shl
std
adc
shrl
adc
inc
mov
ljmp
out
dec
jae
sbb
bound
nop
pop
and
int3
test
pop
xchg
stos
or
loopne
push
dec
lret
lock
add
rolb
push
jg
mov
nop
inc
or
or
sbbb
bound
sub
mov
cld
ret
lds
or
mov
daa
filds
in
mov
addb
add
data16
repz
dec
sahf
clc
jmp
cmp
cmc
imul
mov
or
insl
imull
enter
inc
inc
and
push
cltd
js
or
mov
sbb
lock
sub
lea
or
mov
movsl
leave
or
cmpsl
jb
push
add
test
cmp
rorl
mov
inc
push
rol
loope
call
add
mov
xchg
xchg
pop
imul
ss
sbb
cmp
dec
sbb
lret
insb
not
xchg
add
scas
ljmp
jns
das
and
mov
cmp
and
aam
shrl
int
sbb
outsb
aas
xchg
push
dec
insl
pop
in
xchg
jbe
scas
nop
hlt
cmpsb
pop
dec
lods
and
scas
mov
scas
mov
in
fadd
sbb
jne
inc
daa
xchg
ds
sub
add
mov
sbbl
cmp
lret
in
cmp
jo
nop
cli
int
lcall
mov
lods
and
mov
push
mov
test
xor
sub
in
and
lods
and
push
and
addr16
adc
jbe
ret
enter
inc
loop
inc
mov
es
jle
or
inc
andl
pop
icebp
cltd
sbb
jl
mov
add
fcmovnb
mov
mov
mov
push
pop
and
xchg
mov
mov
stos
jmp
mov
sbb
mov
sbb
inc
movsl
imul
sbbl
mov
mov
icebp
sub
call
adc
add
cs
jae
nop
fwait
sti
pop
addr16
idivl
push
mov
xlat
arpl
sbb
mov
jecxz
std
cmpsl
mov
adc
inc
sub
cmpl
add
fidivl
popa
pusha
in
jl
iret
iret
test
mov
inc
jge
xchg
pop
push
sahf
iret
inc
aas
outsb
popa
mov
jp
orl
dec
xor
cltd
enter
test
test
sbbl
jmp
xlat
fldenv
mov
mov
adc
xlat
testb
xchg
ret
xlat
dec
sbbb
pop
into
xlat
sarl
inc
jo
ljmp
cltd
sub
aas
hlt
iret
xlat
in
popf
or
add
inc
int3
add
cmp
lahf
mov
push
cmc
jno
push
xor
xlat
add
mov
dec
xlat
shlb
insl
sub
mov
and
loop
arpl
fidivs
xchg
rcll
mov
xlat
fwait
pop
adc
fiadds
xor
lcall
xchg
jb
xlat
jecxz
loop
aam
arpl
add
mov
inc
xor
jge
mov
out
xlat
cmc
lcall
xlat
mov
mov
sahf
insl
not
xor
fsts
mov
in
jne
inc
es
int
ret
stc
xlat
inc
push
jbe
mov
mov
roll
sub
dec
movsbl
xchg
jmp
fisubs
sbb
mov
inc
sub
xchg
lahf
cmpb
rorb
xlat
fwait
aaa
or
mov
dec
xchg
mov
cmpsb
mov
xlat
push
inc
fwait
ret
push
push
xchg
stc
push
mov
adc
fcoml
cmp
xor
dec
jmp
xlat
sbb
adc
xchg
out
or
iret
dec
vaddsubpd
cli
xor
insl
jae
fisttpll
das
pusha
push
sub
rorl
negl
sub
mov
rorl
imul
push
xlat
dec
inc
pop
push
mov
stos
sub
sub
pop
push
xlat
cmp
xor
mov
mov
scas
stc
notb
bound
pop
xlat
sub
pop
mov
movsb
getsec
call
xlat
pop
mov
test
out
sub
test
pop
or
popf
jle
sti
xorb
push
aad
mov
xchg
push
in
lock
add
xlat
mov
pushl
shrl
cmp
arpl
mov
icebp
push
mov
testl
push
jnp
adc
xlat
jne
mov
xchg
fstps
test
dec
push
mov
mov
mov
mov
push
mov
mov
push
cmpsb
push
add
pop
iret
lods
pop
dec
push
aam
xlat
repz
pop
fstl
icebp
mov
loop
popa
xlat
jns
aas
sarl
mov
inc
fld
jmp
adc
jo
iret
xchg
daa
sbb
imul
push
push
pop
ja
pop
scas
lret
out
shl
fdivl
xlat
rol
sti
or
jno
push
jp
mov
nop
ror
insb
adc
lods
xchg
jb
xchg
xlat
pop
xchg
push
jne
paddd
lods
xlat
ror
mov
ljmp
in
imull
xor
add
xlat
push
fwait
jmp
lods
in
sbb
push
jno
mov
sbb
iret
jbe
sub
notb
fildl
scas
pop
aam
es
arpl
das
repz
mov
xor
and
xchg
enter
in
jecxz
sahf
test
fiaddl
xor
mov
dec
dec
jge
scas
mov
jle
aaa
loopne
scas
int3
gs
divb
mov
cmp
shlb
xlat
push
fstps
daa
jns
xlat
es
push
sbb
dec
dec
jo
out
xlat
insb
fidivs
pop
popa
jbe
fcmovbe
icebp
or
in
xchg
popf
cmp
cmp
xlat
push
dec
inc
jne
lods
loopne
xlat
jae
mov
insl
add
or
fdiv
cmp
dec
sarl
cmp
jge
cmp
pop
ror
pop
push
sbb
lods
ret
div
cmp
pop
cli
pop
hlt
mov
adc
dec
dec
xchg
clc
lahf
pop
add
pusha
fisubrl
mov
cli
push
cld
xlat
xchg
out
in
mov
mov
mov
ja
pop
or
adc
shrb
jg
cld
out
xlat
xchg
cwtl
mov
js
loopne
mov
cmp
xor
rcrb
std
mov
jg
xor
or
imul
scas
inc
out
cmp
xchg
in
stc
arpl
inc
js
jae
xchg
xlat
scas
das
inc
jle
insl
jbe
in
int
cmc
in
rcl
cli
inc
adc
rcrl
jge
mov
dec
dec
pop
sub
pop
dec
mov
jnp
imul
test
jg
mov
ficoml
inc
sub
sub
popa
rolb
inc
add
gs
xchg
stc
jbe
pop
xor
mov
inc
xlat
jle
jno
mov
xor
and
adc
jno
and
pop
sbbb
push
shl
sar
out
push
xlat
push
add
enter
fimuls
inc
punpcklwd
cmp
addr16
push
ror
cmp
inc
jmp
mov
inc
out
jp
cwtl
scas
dec
inc
or
push
rcll
sub
mov
das
lahf
or
rep
cmc
xlat
inc
insl
adc
jmp
xlat
out
jbe
push
mov
xor
jecxz
adcl
or
out
xor
cltd
aad
xchg
adc
or
and
out
leave
out
aad
pop
mov
jb
xlat
lds
pop
insl
out
sbb
andb
test
xlat
repz
mov
mov
inc
dec
jecxz
adc
mov
xlat
xlat
sahf
enter
and
mov
test
dec
adc
mov
out
sbb
xlat
leave
add
or
ja
iret
insb
rorl
dec
mov
adc
push
in
xlat
leave
push
jecxz
outsl
lcall
jb
dec
popa
pop
sbb
xchg
mov
inc
sub
lods
outsb
xlat
fs
mov
xlat
in
insb
xchg
xchg
notb
jmp
push
sbbl
xlat
pusha
push
jo
mov
sub
mov
idivl
ficoms
cmpsb
iret
ret
and
mov
loope
xlat
push
shll
in
jae
loopne
rorl
xlat
inc
jl
jg
xchg
test
jo
mov
xlat
je
mov
imul
mov
adc
dec
mov
mov
enter
into
mov
inc
sbb
mov
xchg
ficompl
pop
lahf
ffree
pop
popf
shl
and
je
xor
dec
popf
sti
inc
cmc
out
lock
push
mov
stos
and
loopne
mov
mov
dec
xlat
jo
aas
mov
pusha
jns
out
stos
xlat
aam
fs
rcrl
jge
js
mov
frstor
add
fs
xlat
test
and
shlb
mov
dec
dec
aam
imul
sub
stos
je
shll
mov
cmp
or
push
xor
jle
iret
xlat
mov
arpl
pop
addr16
iret
nop
adc
hlt
mov
pop
subl
adc
dec
add
aam
or
divl
icebp
or
jbe
es
inc
pop
xlat
scas
jecxz
cltd
out
or
sub
adc
aad
and
xlat
pop
nop
enter
loope
pop
outsb
push
lods
repz
stos
inc
mov
ja
pop
mov
adc
in
add
jno
jb
lcall
cmc
push
mov
pop
sub
inc
out
cmp
mov
push
sbb
mov
mov
xchg
lea
sub
scas
test
push
mov
das
xchg
pop
daa
push
xlat
mov
push
mov
ret
test
sbb
xlat
std
push
mov
mov
jae
jnp
addl
push
and
pop
call
in
dec
cld
jbe
push
push
jg
mov
mov
xor
hlt
jo
daa
mov
jo
xchg
jmp
js
in
push
sbb
lock
mov
mov
wbinvd
sahf
aam
jge
inc
jmp
sahf
aas
mov
xlat
mov
push
mov
repz
faddl
xor
hlt
js
lret
fldt
add
jmp
or
in
mov
test
adc
add
dec
push
mov
inc
inc
addl
mov
cli
icebp
xor
sub
and
adc
loop
mov
jl
stos
lcall
fnstcw
stos
xchg
jle
dec
xor
test
nop
inc
adcb
push
pop
ja
aas
nop
stc
jle
dec
mov
sti
inc
lret
fbld
pushf
rcrb
push
aas
outsb
mov
add
or
sbb
push
loopne
rorl
dec
sbbb
fsubs
mov
iret
in
jle
mov
sbb
pop
push
xor
and
sub
push
shlb
subl
push
lds
in
push
nop
in
ljmp
cmp
lds
sub
ret
outsb
dec
cmp
iret
push
inc
cld
jnp
jecxz
gs
xchg
dec
nop
mov
div
push
mov
or
mul
mov
xchg
xchg
cs
loop
icebp
push
mov
sahf
cli
cmp
stc
inc
mov
idivl
sbb
or
imul
iret
xchg
xchg
jne
adc
jnp
int3
cmp
movsl
mov
cli
pop
pop
sahf
sub
mov
out
or
cmp
and
lock
mov
xor
pop
repz
mov
aaa
fwait
cmp
push
daa
nop
jns
aam
xchg
sub
test
sti
inc
fcoms
xor
xchg
sub
rorl
ljmp
xchg
lods
xchg
and
ljmp
inc
xchg
jo
jecxz
jnp
jle
or
imul
or
fisubrl
xor
sbb
mov
stos
das
sub
add
aaa
xlat
jmp
call
gs
ret
sub
test
gs
mov
test
cmpl
or
mov
sub
xchg
sub
les
fs
vpshufb
xchg
push
daa
pop
mov
mov
sub
ljmp
js
xorl
inc
aaa
xchg
dec
push
les
or
imul
dec
div
inc
sbb
push
xchg
gs
scas
push
and
fwait
xor
mov
aad
xchg
movb
push
loope
pop
stos
sti
cmp
aad
push
pop
pop
ret
xor
sbb
testb
push
push
pop
test
stc
insl
mov
rcr
sbb
xor
mov
sub
lahf
xchg
and
test
shr
out
stc
jbe
sbb
movsb
ljmp
inc
mov
pop
out
cltd
xbegin
jge
js
and
lods
pop
jecxz
mov
mov
lret
adc
gs
push
inc
in
in
cltd
ss
jne
test
jle
mov
ror
lret
mov
sbb
popf
xchg
xchg
adc
xchg
shrb
cmpsl
or
ss
jle
cmp
dec
xchg
mov
int
pop
movsl
loopne
xor
xchg
xor
testl
scas
cmp
cmpsb
rcr
stos
sub
pop
inc
ficoml
aam
mov
push
movsl
out
fninit
enter
push
mov
add
sbb
or
mov
ljmp
hlt
sbb
cltd
jnp
jmp
and
and
jns
stos
push
mov
pop
rcl
jecxz
inc
push
mov
outsb
mov
mov
adc
mov
sbb
fiaddl
addl
icebp
mov
popf
xlat
mov
xchg
jo
iret
loopne
sar
pop
pop
xchg
jo
inc
testl
xor
lods
in
jmp
jo,pn
push
mov
adc
pop
add
fs
rcl
scas
add
clc
rorl
fldt
mov
arpl
or
test
xlat
mov
pop
or
cld
push
pop
sub
cli
nop
jb
xlat
sar
adc
xlat
inc
jmp
adc
fwait
push
xlat
adc
cmp
ds
outsb
add
push
stc
jne
or
clc
xchg
pop
push
lods
adc
aas
mov
mov
gs
aaa
notl
or
sbb
insl
shlb
xor
in
mov
cmc
fst
addr16
daa
imul
js
pop
pop
mov
out
les
lret
pusha
ffreep
or
cmc
fld
cmp
fdivs
scas
faddl
rolb
mov
mov
cmpsb
mov
dec
gs
icebp
adc
inc
pop
fimuls
fs
add
adc
adc
sarb
es
mov
icebp
add
and
pcmpgtw
movsb
addr16
aam
mov
mov
inc
dec
jae
fadd
das
out
test
orl
inc
or
cmp
aaa
outsl
sub
inc
sbb
mov
push
fisttps
aam
cld
cmpsb
daa
sub
xchg
daa
and
adc
jmp
aad
cld
push
repz
dec
das
mov
push
push
sub
dec
stc
mov
push
xchg
adc
sub
jge
jo
inc
mov
pop
aam
xchg
jg
lret
loope
aas
movsb
mov
pop
push
fbstp
dec
nop
adc
mov
mov
lret
jne
sbb
and
mov
sbb
mov
mov
mov
or
xchg
in
mov
scas
mov
sbbl
fidivrs
imul
scas
xor
jne
or
leave
icebp
fsts
roll
in
mov
arpl
sbb
push
xchg
cmpsl
dec
loop
and
ja
and
mov
mov
xchg
dec
fst
push
mov
jp
push
cmp
xor
mov
mov
into
aas
jg
jle
push
shrl
sbb
jmp
mov
fstpl
and
mov
jl
xchg
xlat
adc
les
movsl
mov
bswap
stos
jecxz
dec
repnz
pusha
popa
pop
xlat
xchg
cld
or
dec
xlat
imul
fimuls
cmpsb
mov
xlat
sbb
adc
and
push
mov
fisubs
rcrl
xchg
sbbl
rcr
mov
mov
cmp
in
sti
xchg
iret
pop
mov
mov
mov
fcoms
sahf
sub
sbb
mov
fldl2e
or
cs
adc
cmp
aas
js
mov
add
ret
adc
popf
xchg
sub
aas
sub
inc
not
push
sbb
mov
mov
outsl
jge
mov
inc
nop
sbb
imul
out
adc
nop
or
sarl
xchg
dec
jnp
je
add
sub
cli
sbb
negb
xchg
mov
imul
pushf
nop
call
insl
jmp
rcr
inc
inc
inc
out
xchg
xchg
aad
adc
test
inc
es
leave
outsb
mov
xlat
cwtl
aas
je
adc
inc
jo
scas
push
lods
nop
fcomps
adc
xor
repz
push
test
adc
add
fstpt
rcr
xchg
sub
cmp
into
loope
movsl
jo
adc
add
stc
sarl
inc
fwait
sub
dec
mov
sub
stos
shrl
loopne
push
les
cmpb
insl
jnp
ffree
movb
jecxz
push
clc
aaa
sbb
dec
movsl
xchg
push
gs
das
das
mov
scas
jne
mov
test
int3
aaa
jl
xor
scas
std
int
pop
cmp
xchg
stc
mov
aam
and
scas
adc
insl
push
push
fimull
lea
sub
fmul
adc
or
mov
daa
push
mov
inc
bound
js
loopne
jmp
sub
push
pop
test
ljmp
out
lock
push
nop
fistpl
int
sub
outsl
orl
mov
xchg
movsb
cmp
mov
popa
push
dec
push
repnz
pop
mov
and
xor
fcomi
cltd
jge
and
mov
in
push
outsb
sub
lea
shrb
push
xchg
mov
outsb
xchg
jl
ja
push
pop
je
fcoms
dec
iret
mov
jmp
mov
lret
mov
pushl
ja
das
push
pop
jmp
or
mov
xchg
mov
popl
sub
pop
int3
lds
xchg
jo
mov
sbb
mov
adc
in
bound
mov
jbe
mov
in
cs
cmc
xlat
lods
in
sub
jb
and
dec
movsb
cltd
xlat
inc
xor
add
cmpsl
loopne
aam
and
jmp
xor
or
rorb
push
and
or
aas
mov
sti
ret
jb
and
inc
xchg
test
outsl
push
inc
cmp
aam
jo
daa
mov
loope
scas
jb
jbe
and
je
enter
adc
sbb
dec
mov
scas
in
scas
addr16
xorb
mov
push
mov
push
dec
pop
outsb
cli
xchg
jmp
scas
fimull
jae
xchg
ss
stos
push
adc
test
sahf
popf
sbb
mov
mov
mov
xor
push
sub
ret
ds
jp
mov
std
xchg
call
or
cmp
pop
mov
shr
mov
aam
hlt
jle
mov
xchg
insl
jmp
jmp
push
pop
shll
lret
mov
xchg
cli
into
pop
nop
push
pop
adc
inc
push
out
mov
mov
fs
jge
push
test
push
sahf
out
inc
jnp
add
leave
add
inc
hlt
inc
push
rcrl
xlat
shlb
sbb
loope
sti
adc
cmp
jb
aas
jne
icebp
sbbb
mov
xor
sbb
xor
sbb
int
push
jo
jbe
icebp
sbb
inc
mov
inc
jge
jae
ret
jbe
cmpb
rcll
jmp
adc
pop
in
fdivrp
cmpsb
scas
stos
mov
mov
rorb
cmpsl
mov
or
adc
stc
ss
push
ficoml
inc
movsl
add
adc
ss
aas
add
cmpsl
outsb
push
push
inc
iret
mov
xor
adc
addl
push
test
push
pop
mov
rolb
aam
jne
jno
mov
push
test
loope
pop
mov
add
jg
xlat
lahf
iret
ret
scas
imulb
es
out
jne
not
inc
and
lahf
test
js
rorb
hlt
mov
int3
and
cltd
or
aaa
daa
outsb
cmp
dec
jno
notl
fildl
mov
mov
mov
inc
xlat
sub
xor
jp
mov
shll
andb
inc
jge
jle
adc
stos
pop
sbb
lea
sub
bound
adc
andb
jno
adc
fidivl
ret
sbb
insb
mov
arpl
add
xlat
push
daa
leave
icebp
cmp
xor
xlat
push
mov
and
cmc
jbe
xor
lcall
push
cmpsl
add
mulb
xor
xlat
rcr
push
cmp
inc
cltd
xlat
push
push
mov
jo
lock
sbb
fucomp
push
aam
lret
pop
pop
ss
js
dec
iret
cmp
jl
leave
imul
test
push
ret
repz
insl
std
nop
mov
daa
pop
repnz
inc
mov
dec
call
loope
aas
and
aas
nop
test
sarb
dec
jg
shr
test
or
jne
scas
pushf
subl
dec
stos
cmp
ss
call
jl
jge
mov
popa
stc
xchg
dec
sub
inc
fdiv
shrl
sahf
aas
iret
xchg
mov
push
sub
rorl
sbb
pop
xchg
push
aad
inc
xor
inc
add
shll
cs
jmp
jle
enter
loope
std
push
sub
dec
je
popf
add
dec
nop
ficoms
enter
xchg
sbb
cmc
ret
jo
mov
int3
rcrl
xchg
sbb
jno
or
aam
nop
cli
insb
cltd
clc
ret
scas
xchg
mov
push
pop
xchg
popl
mov
push
outsb
sub
in
push
or
dec
dec
jne
scas
cmp
out
xchg
fldt
inc
loope
nop
xchg
xchg
sbb
sahf
mov
inc
adc
cmpb
imul
add
pop
aas
inc
cltd
repnz
cli
nop
orb
call
sub
lods
sub
pusha
jbe
inc
push
push
mov
sub
out
xrelease
cmp
mov
sub
test
or
sub
popf
adc
xchg
dec
sbbb
dec
cs
mov
pop
jbe
mov
jp
mov
test
outsb
mov
int3
sbb
sbb
mov
sbb
sbb
popf
dec
xchg
decb
jg
dec
sbb
push
xchg
in
loopne
inc
dec
add
negb
hlt
pop
mov
and
inc
test
repnz
inc
sub
and
mov
add
stos
pusha
scas
push
stos
inc
fldl
or
movsb
out
add
lea
jns
nop
sbb
cmpsl
adc
mov
xor
movsb
inc
sahf
ss
mov
sbb
pop
push
lret
mov
sbb
xchg
lret
mov
push
sbb
stc
decb
aad
shlb
add
fcoms
fbld
rolb
xor
jmp
xchg
scas
cmp
arpl
pushf
jl
mov
xchg
pop
adc
mov
test
cmp
or
rcll
sub
inc
lret
stos
dec
pop
inc
xchg
scas
pusha
mov
lahf
push
test
mov
jge
xchg
push
fistl
add
add
or
stos
adc
outsb
jbe
sub
lea
mov
inc
fiadds
xchg
iret
cwtl
xchg
jmp
arpl
out
imull
cmp
pop
test
aas
mov
adc
loopne
dec
mov
daa
dec
adc
mov
rcl
or
jne
mov
hlt
bound
movsl
jnp
imul
mov
mov
iretw
mov
sbb
xlat
xchg
fwait
inc
rcrb
jg
sbb
test
xor
mov
xlat
xor
aad
mov
cmp
xchg
sbb
push
mov
and
push
inc
lcall
addr16
iret
bound
daa
imul
pop
inc
jo
dec
sub
mov
outsb
popf
data16
icebp
leave
je
and
fimull
imulb
xlat
pop
xor
xlat
mov
xchg
add
insb
sbb
cmpsb
mov
sbb
xlat
rcrl
sub
add
jnp
add
inc
cwtl
daa
cmc
push
adc
xchg
pop
xchg
mov
push
iret
pop
rcrl
leave
adc
xchg
lock
push
jp
sub
fnsave
sub
in
into
pop
and
and
xlat
sti
mov
xlat
jbe
lock
xlat
cmp
test
pop
jae
xlat
test
adc
xlat
push
call
insb
push
xlat
xor
sbb
xlat
data16
inc
divl
test
outsl
xlat
sarl
and
fcoml
mov
repz
mov
cmc
xlat
inc
sbb
pop
jno
clc
sub
inc
stc
mov
xor
adc
andl
cwtl
mov
push
sbb
mov
or
incl
dec
aam
xlat
dec
out
in
fiadds
xchg
sub
popf
mov
xchg
in
cli
icebp
pop
inc
pop
repz
xchg
mov
adc
ret
aaa
and
pushf
xlat
idivb
xlat
or
divl
gs
jbe
xorb
repnz
test
dec
test
jno
out
xlat
ret
mov
pusha
stc
push
cmp
lds
sbb
sahf
jmp
xlat
ret
mov
push
aam
pop
push
fst
fs
jecxz
nop
adc
xor
adc
push
movsb
in
inc
adc
fwait
ret
frstor
lcall
sarb
xlat
pop
es
aaa
in
xlat
xchg
ret
inc
inc
and
xlat
pop
add
mov
and
mov
mov
inc
nop
jnp
jg
lret
adc
xlat
shlb
and
scas
add
rorb
lahf
cmp
sbb
xor
fisttps
xlat
jg
pop
out
aaa
xchg
stos
jne
sbb
xlat
push
jge
fnstenv
or
mov
xlat
movl
sahf
xlat
data16
mov
lahf
and
int
shlb
in
mov
arpl
xlat
mov
leave
sarl
sbb
aaa
xchg
sub
cltd
mov
and
cli
shlb
jmp
push
xlat
into
rcrl
xlat
xchg
dec
xchg
out
mov
inc
ret
mov
mov
mov
mov
and
push
jle
jge
fidivl
mov
push
jp
in
pop
pop
mov
mov
leave
push
nop
mov
pop
js
fisubs
loop
out
scas
xlat
ljmp
and
xlat
call
cmp
mov
mov
cmp
cmp
xlat
sbb
orl
xor
add
scas
adc
push
xor
pop
cmc
stos
lods
insl
ja
lahf
addr16
mov
call
cmp
pop
xlat
daa
or
fldl2e
inc
cmpsl
js
bound
rolb
movsb
sahf
pushf
out
out
rcr
add
dec
and
in
or
shrl
xor
ret
shll
xlat
or
mov
xor
mov
mov
sbbb
je
ljmp
jb
xor
mov
flds
ret
or
cmp
into
and
lahf
add
jl
mov
or
add
xlat
rcrl
test
push
and
lcall
sarb
or
test
xlat
imul
and
fldl
dec
xlat
cmp
fldcw
xlat
and
add
pop
iret
cmpsl
inc
cmc
push
insb
sbb
push
cmp
xlat
xor
imul
add
cmp
inc
mov
mov
fwait
lahf
cmc
xchg
dec
mov
movsb
and
fldt
lret
or
pop
xlat
add
mov
and
mov
out
insb
pop
pusha
decb
iret
mov
sub
imul
dec
jge
or
out
iret
cmp
jbe
or
dec
xchg
jg
jmp
cmp
cmp
push
mov
rorb
data16
dec
into
leave
cltd
jo
cmpsb
cmc
mov
scas
mov
sub
lahf
rorb
pop
mov
movsb
jle
stos
xlat
dec
lods
mov
test
xchg
ret
into
add
out
je
inc
jmp
sbb
pop
mov
push
fwait
mov
aad
xlat
cmpsl
std
xor
je
cmp
xlat
sbb
pop
shrl
dec
push
iret
stos
xchg
mov
ror
add
inc
fistl
fidivl
xchg
popa
imul
xlat
mov
and
jno,pn
into
iret
mov
jne
daa
or
pop
add
xor
adcl
scas
jno
in
fiaddl
rorl
mov
xlat
dec
pop
pop
sbb
push
and
ljmp
xlat
pushf
cmpsb
push
dec
sub
xlat
xchg
call
cmp
xlat
sbb
mov
pop
inc
and
cmp
mov
ret
pushf
das
lahf
xchg
leave
outsb
imulb
push
xor
jmp
mov
in
out
xchg
ficoml
cmp
xchg
push
lahf
pop
repnz
leave
dec
sbb
addr16
loop
mov
mov
inc
xorb
lock
enter
pop
xchg
mov
xchg
outsl
jecxz
xlat
xor
fs
add
jge
les
mov
hlt
xlat
scas
pop
ss
push
and
dec
fcmovnbe
inc
aaa
fwait
mov
stc
mov
xlat
sub
testl
mov
sbb
leave
lcall
cmpsl
xlat
icebp
call
xlat
ficoms
mov
mov
xlat
mov
jge
cs
lock
xlat
aaa
pop
adc
xlat
sbb
callw
ret
daa
mov
add
aam
cld
push
iret
add
jecxz
outsl
or
jno
outsb
fwait
sarl
lea
push
js
and
movsb
in
cli
lock
enter
xlat
lds
inc
xor
scas
pop
mov
fcomps
push
sub
jnp
xlat
aaa
sbb
mov
cmp
loopne
int
xor
dec
sub
std
enter
mov
les
daa
jns
scas
mov
xlat
repnz
in
pushf
fs
rorb
push
xlat
adc
and
sbb
jbe
xlat
leave
pusha
mov
sbb
adc
hlt
in
testb
xlat
sti
xchg
push
xlat
push
in
repz
cmp
cld
lahf
push
mov
addr16
arpl
lods
xlat
or
add
and
lahf
sub
sub
call
pop
adc
mov
popf
lahf
sub
out
jl
xor
sti
or
icebp
imul
sub
jle
sbb
fs
jno
test
cli
xlat
ljmp
cmc
push
nop
pop
or
shll
es
jge
xor
add
xlat
mov
push
jno
pop
adc
pop
cs
mov
sbb
cmp
xlat
push
sbb
push
pushf
ljmp
loop
xlat
jbe
aam
lock
repz
jae
jbe
xchg
aam
or
push
insb
add
movb
mov
sar
xchg
out
pop
jo
lret
sub
int3
mov
aam
jg
out
pop
inc
cld
add
repz
mov
nop
cs
mov
int3
mov
add
or
inc
push
cmp
nop
adc
and
xlat
jae
out
fistps
cmp
and
outsb
inc
sub
arpl
jbe
loop
jmp
add
in
sahf
outsb
imul
mov
mov
jb
adc
repnz
xchg
xchg
mov
aad
imul
testl
push
mov
xchg
jp
test
mov
cmpsb
lods
push
loope
xor
or
sub
sbb
aaa
jbe
dec
or
cmc
jmp
sbb
lret
sbb
loop
rorl
in
lret
jecxz
inc
daa
leave
xor
inc
pop
mov
into
sbb
nop
sub
push
test
ljmp
leave
ret
pop
mov
roll
dec
pop
mov
mov
addb
pop
outsb
add
xor
addl
fld
add
sbb
pop
pusha
mov
push
out
ds
cmp
push
dec
aaa
mov
testb
pminub
test
mov
arpl
fisttpl
fwait
cmp
mov
lret
cmpsb
imul
fldl
nop
xor
out
repz
and
adc
nop
or
jp
mov
out
rorb
sbb
or
mov
mov
mov
subl
sarb
xor
jmp
test
sar
adcb
mov
movsl
adc
loope
idivl
test
xor
int3
imul
push
mov
add
xor
fisubl
lea
dec
pop
ret
je
sahf
movsl
adc
pop
dec
stos
leave
xchg
inc
dec
gs
xchg
repz
outsb
fdivs
mov
push
call
mov
rcll
push
mov
mov
js
inc
inc
nop
pop
scas
mov
jmp
pop
bnd
stos
aad
imul
iret
mov
daa
lods
aad
push
repnz
movsl
testb
ffreep
cmp
sub
lds
mov
aam
in
mov
stos
push
leave
bound
imul
push
adc
xlat
es
push
xchg
mov
or
jno
jns
outsl
mov
push
negl
inc
je
mov
fs
imul
in
jl
out
aam
mov
out
in
loope
add
xchg
arpl
ds
xchg
cmpsb
mov
repnz
gs
cmp
cmp
cmc
pop
lock
xchg
rcrl
lret
lea
fstpl
inc
xchg
jbe
in
sub
call
push
loopne
imull
jmp
pop
mov
and
lods
aaa
add
cmp
movsb
xchg
jge
jno
aaa
leave
dec
aad
cmp
mov
push
bswap
cmpsl
aas
scas
cwtl
adc
hlt
leave
neg
jo
int
adc
stos
jns
sbbb
scas
loope
mov
lret
scas
rcrl
outsl
mov
shlb
lds
mov
inc
fwait
sub
mov
push
cmp
jae
gs
mov
pop
in
iret
dec
mulb
xchg
mov
push
stc
sub
out
sar
outsb
inc
les
or
mov
mov
add
mov
sbb
and
in
lock
xchg
or
xor
and
cmp
mov
pushf
mov
inc
mov
mov
sbb
nop
mov
cmp
pop
test
jne
ret
fxch
xor
sti
xor
nop
in
push
stc
jle
subl
test
nop
cld
jns
fwait
inc
dec
xchg
lret
mov
or
sbb
push
aad
add
mov
fisubrs
aad
into
cmpsl
jae
fsubrl
cmp
aaa
aam
nop
or
push
mov
push
out
sbb
add
and
jno
add
sbb
or
xlat
lret
je
push
dec
aaa
outsl
xchg
clc
sarb
cmp
xlat
idivl
add
shl
jo
lahf
xchg
push
mov
or
shll
subl
fs
inc
push
push
repnz
addr16
icebp
sub
jb
mov
pop
rcrb
and
adc
or
jne
push
lahf
ret
and
mov
xchg
dec
shr
xchg
mov
hlt
xchg
imul
loope
push
das
xchg
gs
js
mov
aam
mov
xchg
cwtl
xchg
and
aaa
sti
sahf
nop
pop
add
jo
add
jb
ret
mov
lock
dec
xchg
jl
push
xor
mov
leave
mov
jmp
inc
aam
xchg
in
ja
je
xchg
testb
inc
test
movsl
push
leave
push
sahf
faddl
xchg
aaa
jbe
dec
sbb
xchg
aad
sbb
jmp
leave
cltd
push
mov
pop
push
fistl
xchg
aad
jmp
test
push
jae
mov
lret
dec
mov
mov
pop
and
mov
lret
adc
pop
mov
mov
scas
outsl
inc
daa
fstpt
cmp
and
xchg
nop
nop
sti
jge
inc
cmp
jecxz
push
lahf
and
jl
movsb
inc
add
xchg
xorl
pop
cmp
and
or
dec
insl
ja
pop
lods
pop
push
insl
mov
stc
sub
add
fists
dec
xchg
gs
or
ja
mov
or
ss
std
out
xor
mov
inc
outsb
pop
icebp
repnz
xchg
ja
xchg
jo
xchg
flds
mov
ret
cltd
fdiv
dec
inc
aam
inc
fcmovnbe
dec
push
pop
mull
sahf
push
popf
in
add
mov
adc
insb
out
ffreep
dec
out
iret
nop
mov
jbe
aas
sub
sbb
gs
jp
mov
in
call
mov
das
jmp
dec
nop
dec
sbb
mov
and
stc
mov
fistpll
ficoml
fcoms
pop
loop
adc
adc
sub
and
fsubrp
cmp
push
shl
mov
lea
cmc
loop
inc
xor
mov
enter
sub
pusha
push
and
jne
xchg
adc
fyl2xp1
stc
out
jp
popf
aaa
aas
add
sbb
mov
inc
xchg
jg
xor
jmp
mov
out
repz
jecxz
fistpll
rcr
testb
push
int
mov
fbstp
rcrb
and
arpl
mov
in
aas
bound
mov
out
adc
loope
addl
cmp
dec
dec
mov
adc
push
movsl
mov
ljmp
daa
test
inc
movsl
mov
add
out
mov
nop
mov
pop
in
add
xchg
push
lea
inc
test
mov
loopne
aam
xor
roll
xchg
test
ret
sub
sub
clc
mov
fstl
adcb
mov
and
out
jle
mov
sbb
lcall
jae
test
les
rolb
les
mov
rorb
mov
int
cmp
cmp
xlat
pop
enter
cmc
outsl
notb
cmp
mov
inc
mov
pop
inc
dec
syscall
push
sub
push
ret
dec
mov
test
arpl
adcb
mov
jmp
or
push
xchg
xchg
ret
aas
mov
dec
pusha
jb
stos
loope
fsts
pop
aam
jo
pop
je
mov
loope
push
aaa
aad
inc
inc
addr16
lds
nop
cltd
dec
fs
fidivs
pop
aam
or
xchg
or
shll
xor
rsqrtps
aam
jbe
fnstenv
cmp
push
sub
iret
fldcw
cmp
add
jge
inc
test
ljmp
nop
js
movsl
ljmp
adc
sbb
enter
cmp
mov
or
iret
rcl
jne
dec
stc
xor
jns
dec
movsl
aaa
lea
sbb
daa
cmpsb
push
leave
dec
insl
aam
out
leave
adc
ret
cmp
and
mov
in
dec
adc
ja
xchg
mov
or
das
cmp
mov
inc
xchg
cmpsl
outsl
sbb
shlb
mov
insl
or
adc
push
sbb
and
nop
adc
xchg
adc
insl
shl
in
mov
rol
cmc
rcl
pop
fwait
push
bt
stc
and
lcall
fcomps
aam
mov
jae
cwtl
lock
fsubl
div
popf
push
leave
cmp
xchg
sbb
inc
aam
adc
outsb
sarl
sub
mov
sbb
fisubrs
pop
or
mov
jns
push
pop
sbb
fnstenv
cmp
ficoms
lahf
mov
repz
and
add
sbb
push
in
jns
iret
sbb
xchg
gs
rcrb
imul
out
inc
dec
add
or
or
cli
imul
xor
inc
mov
stc
pop
xor
int3
fsts
mov
xlat
xchg
xchg
icebp
cmp
in
rorb
pop
xor
mov
lcall
xchg
js
stc
cmpsl
add
jne
jecxz
inc
dec
fwait
pusha
xchg
mov
xchg
in
pop
jmp
adc
xlat
imul
dec
js
add
hlt
push
loop
jb
mov
xchg
add
je
cld
mov
xchg
fs
adc
sbb
jmp
push
jae
and
sub
and
mov
test
mov
out
sub
leave
xor
mov
xor
lahf
adc
or
push
and
push
cmpsl
add
mov
mov
ss
aad
xchg
pop
fisttpll
xchg
je
cmp
imul
jl
sub
rorb
or
push
push
aam
mov
fsubrs
lahf
ret
ret
xchg
jg
shll
or
inc
cmpsl
fwait
jbe
mov
lock
jp
push
lods
mov
pop
mov
sti
testl
mov
jmp
push
lods
cs
sbb
add
inc
and
insl
adc
push
aad
mov
lret
int
inc
jbe
jne
mov
push
xchg
jl
mov
pop
xor
and
xchg
xor
push
pop
push
and
and
imul
pop
xor
rcrl
sbb
repz
mov
shll
sbb
inc
enter
loop
mov
repz
sbb
jecxz
mov
pop
pop
cmp
dec
gs
xchg
mov
loope
jle
mov
daa
dec
xchg
je
js
ds
or
sub
call
push
in
inc
inc
mov
inc
cld
cli
dec
add
xchg
loop
and
cmp
mov
cs
sbb
ret
out
lods
fcmovne
js
sub
xor
lods
add
loope
test
dec
repnz
int3
jle
js
aam
les
loopne
jno
pop
push
imul
jo
inc
popf
scas
jns
inc
inc
inc
sbb
lods
xor
leave
das
mov
push
adc
inc
inc
sarl
mov
lret
repz
mov
pop
mov
enter
xchg
das
sub
sub
xchg
lahf
pop
scas
add
lret
lret
mov
dec
rcll
fldcw
fstl
dec
test
inc
popa
or
cmp
subl
lcall
jmp
int
pop
mov
test
mov
xchg
neg
push
in
and
stos
add
scas
mov
adc
pop
pop
push
adc
loope
push
and
inc
and
rclb
daa
inc
adc
loop
add
adc
dec
push
mov
aam
mov
xor
aad
sti
or
sbb
dec
xor
push
dec
arpl
fsubs
dec
adcb
pop
sub
enter
in
int
nop
xor
iret
imul
or
aas
enter
push
iret
imul
adc
rcll
fldenv
in
sarb
fiadds
sbb
mov
cmp
stos
adc
xlat
mov
xchg
icebp
inc
lods
and
aad
sub
xchg
inc
ret
arpl
inc
iret
adc
dec
mov
inc
or
jae
nop
dec
ret
inc
int3
cmpsb
stos
ret
cld
addr16
xor
dec
mov
aam
sahf
mov
jge
push
daa
pop
movsl
mov
dec
push
fcmovb
adc
jno
cli
and
sbbb
sub
popa
imulb
sbb
or
adc
sbb
adcl
dec
in
nop
mov
add
lret
pop
inc
or
mov
sub
lahf
js
ret
repnz
lret
aad
jle
jae
push
pop
stos
out
dec
imul
and
pop
dec
push
jg
xchg
pusha
xchg
push
mov
out
pop
xchg
fcomps
jmp
mov
ss
sbbl
or
aam
cmc
outsb
dec
ret
xchg
push
mov
mov
xor
and
jmp
or
jnp
shl
lds
cli
or
sbb
lds
outsb
inc
and
loope
mov
lods
das
roll
scas
push
push
and
mov
mov
fcompl
and
imul
ja
inc
out
xchg
insb
iret
jmp
or
mov
nop
dec
bound
in
shll
xor
jg
mov
sub
aad
aam
inc
loopne
mov
mov
call
int3
stos
xor
jb
dec
lret
mov
adc
mov
push
popa
pop
add
movsl
xor
jne
xchg
pop
and
dec
mov
or
adc
nop
cmpb
sub
mov
in
sahf
sbb
push
pop
mov
out
les
nop
fdivrs
out
lahf
into
sub
cmpsl
popa
mov
flds
lret
stos
out
stos
jae
push
scas
repnz
inc
cli
pop
es
test
fistps
aam
xchg
jl
hlt
dec
das
push
nop
sub
cmp
pop
cli
and
adcl
xorb
test
cwtl
pop
movsb
mov
ljmp
and
fbld
push
arpl
mov
jg
adc
std
inc
or
mov
test
fnstenv
and
testb
and
mov
pop
cli
lea
push
mov
sbb
sar
clc
mov
add
cmp
nop
je
dec
lock
lods
sarl
mov
push
push
repnz
mov
add
mov
or
fadds
mov
gs
sub
fwait
and
or
pop
aad
ljmp
popf
mov
jmp
insl
aam
test
push
push
xchg
xchg
out
icebp
rorb
lret
xor
dec
jns
je
int
push
jno
nop
sahf
bts
mov
xor
leave
int
and
imul
mov
dec
mov
mov
sahf
and
mov
push
repz
mov
push
mov
ret
pop
xor
repz
je
pop
fcoml
and
cld
rclw
outsl
fst
dec
and
push
rorb
fsts
sbb
gs
fxch
adc
mov
jno
dec
roll
mov
in
adc
fsubr
push
stos
loope
push
add
xor
jno
pop
shll
jle
mov
adc
stos
mulb
or
lcall
push
imul
stc
adcb
jmp
shll
dec
sub
hlt
nop
jmp
or
push
js
dec
xor
jmp
rol
notb
or
loopne
leave
aad
dec
ss
add
mov
mov
cmpsb
jmp
mov
and
mov
jmp
shrl
and
jb
mov
loopne
xchg
enter
push
pop
or
jae
xchg
jne
jbe
xchg
repz
rorl
call
push
js
aaa
cmp
and
adc
sub
pop
hlt
mov
add
out
mov
mov
pop
adc
xchg
fwait
xchg
sub
adc
xchg
jno
xchg
pop
mov
sti
sbb
testb
loope
adc
rcll
nop
pop
mov
iret
inc
mov
xor
adc
movsl
adc
inc
push
add
aad
dec
xchg
dec
pop
in
xchg
and
cmp
fs
repnz
shl
xchg
ljmp
cmpsb
jbe
mov
sub
clc
and
frstor
fsubs
xchg
push
in
xchg
fmuls
aas
lds
push
in
mov
aaa
jmp
mov
mov
or
cmpsb
cmc
imul
mov
xchg
xor
dec
dec
xchg
mov
fistpll
push
bound
int
sub
inc
xchg
xchg
jne
mov
cmp
jne
jl
shll
adc
movb
xor
mov
mov
push
xorb
gs
mov
idivl
jg
jle
push
out
push
fsubrl
adc
je
jl
daa
mov
fwait
xchg
enter
mov
mov
aas
std
js
mov
sub
and
mov
lds
jnp
int
inc
or
stos
shrl
pop
pop
push
testb
jg
xchg
mov
xor
into
sbb
dec
mov
sub
ret
jbe
das
inc
cli
xchg
cs
scas
dec
pop
jg
xor
xor
dec
sahf
jbe
mov
fcomip
sbb
inc
mov
mov
imul
mov
maxps
pop
pushf
scas
xor
add
sub
adc
jmp
mov
shrb
aam
jno
jbe
iret
in
insl
ss
push
mov
push
push
subl
packsswb
cmp
pop
test
fcoml
movsl
xchg
pop
mov
mov
in
pushf
sub
pop
jbe
sbb
inc
xor
xor
aam
add
mov
pop
push
xchg
xchg
inc
mov
test
xlat
ljmp
pop
ja
fdivs
movsl
iret
fsubrl
xlat
lods
xchg
mull
sub
dec
aam
or
outsl
jae
jo
jl
lock
push
nop
aad
mov
shll
fiaddl
fstpt
sbb
xchg
lds
dec
or
repnz
out
cmp
dec
int
pop
xchg
cmc
bnd
add
and
jl
lret
lcall
popa
mov
mov
lock
push
int
push
mov
aaa
adc
cmpsl
xchg
push
adcb
clc
xchg
fiaddl
sub
mov
sub
notb
jnp
mov
mov
adc
adc
mov
xchg
pop
pop
add
xor
popa
push
imul
fadds
in
xorl
cmp
fidivrs
inc
psubw
aas
jle
bound
movsl
repnz
and
cmp
jmp
lods
into
je
ss
push
fnstcw
mov
cli
mov
nop
xchg
push
add
mov
rcrl
jo,pt
cmp
push
xchg
jp
mov
fisubrl
xchg
mov
outsb
lds
aaa
mov
repnz
dec
cmp
jno
pop
sahf
push
shr
pushf
enter
addb
jae
xchg
xchg
push
icebp
ret
movsb
fnstcw
sub
push
mov
call
out
cmpsb
mov
fcoml
stc
add
jle
movsl
mov
les
jnp
lahf
add
jb
stos
mov
mov
addr16
loope
out
ret
ds
xchg
pop
jae
push
inc
add
loope
fidivl
pop
lds
add
xlat
nop
cmp
xchg
test
cld
adc
or
outsl
je
out
fimull
dec
std
adc
test
and
mov
shll
rolb
dec
push
push
data16
adc
sub
xchg
repz
popf
mov
or
in
jg
adc
ja
pop
fists
mov
repnz
dec
mov
mov
int3
movsl
data16
push
scas
mov
rcr
scas
ja
nop
sub
sbb
ret
dec
out
aad
push
xchg
xchg
xor
add
scas
jne
jmp
jg
adc
sub
mov
int3
dec
mov
jecxz
js
icebp
cli
fwait
repnz
mov
xchg
lods
ret
add
mov
mov
pop
mov
lahf
dec
mov
jne
push
jmp
xor
test
aam
add
mov
imul
dec
pop
sahf
lock
gs
outsb
jne
cltd
test
insb
mov
mov
xchg
pop
sub
xor
test
sbb
adc
push
cmpsl
loop
aad
pop
mov
sub
pop
aas
mov
outsb
mov
aad
into
mov
push
notb
mov
mov
inc
repnz
rcrb
out
test
pusha
jb
fcom
xor
leave
push
loope
xchg
lds
xchg
sub
or
jmp
ljmp
cwtl
or
loopne
aam
mov
dec
jecxz
imul
mov
lock
dec
cwtl
fstpl
pop
jmp
xchg
pop
jnp
mov
int3
nop
mov
xchg
cmc
mov
pop
popa
pop
aad
push
imul
xlat
jnp
sbb
jmp
movsb
bound
or
pop
push
sbb
movsl
sub
aad
movsl
fidivrl
repz
jo
mov
repz
xor
sarl
leave
je
js
insb
jle
inc
xchg
xchg
test
test
mov
xchg
aam
and
rcrb
or
or
rolb
cltd
jp
cwtl
fwait
xchg
sbb
les
int
stos
adc
xorb
pop
inc
out
into
mov
inc
stos
push
pop
inc
pop
adc
jnp
int3
sbbl
daa
nop
pop
push
push
mov
ds
mov
dec
int3
jnp
cmpsl
sub
addr16
nop
adc
mov
cmp
pop
aas
mov
inc
cmpb
jge
mov
jp
int3
nop
inc
dec
sarb
cmp
sbb
pop
int3
and
or
adc
lahf
pop
mov
jmp
mov
negl
in
roll
pop
mov
stos
sahf
arpl
mov
jmp
pop
pop
and
imul
nop
mov
inc
mov
daa
fstpl
fidivs
xchg
xor
das
xchg
lcall
xor
popa
mov
flds
in
pushl
xor
ret
int3
add
sub
outsl
mov
out
cli
pop
pop
out
mov
xchg
cmpsb
dec
inc
xchg
cmpsb
fwait
outsb
sti
int
fistpl
inc
push
add
pop
inc
dec
dec
mov
and
jo
ffree
cmpl
mulb
xlat
jno
out
in
or
xor
movb
mov
sub
xlat
xchg
push
enter
daa
sahf
movl
mov
fisttps
outsl
xor
movsb
jae
or
in
xor
dec
jmp
dec
push
imul
xchg
aaa
pop
jno
xchg
test
xor
bound
sub
mov
aam
nop
js
and
xchg
or
mov
add
adc
adc
popa
jno
mov
popf
int
adc
mov
pop
xor
add
lea
test
push
push
add
pop
mov
xor
pushl
mov
imul
mov
lea
loopne
cmpsl
mov
mov
arpl
cmpl
dec
out
dec
stos
mov
lds
aam
cwtl
lret
jnp
out
scas
sbb
arpl
lods
aam
jno
and
js
addl
js
sbb
mov
mov
loope
cmp
sbb
pop
mov
pop
push
inc
cwtl
in
or
pop
xor
adc
clc
push
pop
adc
faddl
inc
add
jge
xor
xor
sbb
pop
mov
push
add
nop
mov
xchg
incb
out
nop
mov
or
xchg
add
sbb
jne
dec
imul
lahf
adcb
mov
xor
jecxz
push
mov
in
xor
add
xor
or
fwait
dec
xchg
xor
inc
push
lret
icebp
cmc
mov
xchg
mov
inc
outsb
in
sahf
vpxor
rclb
or
mov
push
xor
cmpsb
daa
insl
inc
mov
push
jle
inc
lret
sub
es
fs
add
xchg
js
sub
mov
and
shll
push
sbb
and
sbb
lahf
pop
std
fsubs
xchg
fidivs
repnz
sbb
ds
movsb
out
in
and
and
adc
push
ljmp
lods
and
push
shlb
incb
arpl
lret
shll
add
popa
cmp
jp
and
negb
in
and
in
addl
jb
out
test
and
in
pop
cmp
dec
jb
flds
daa
sub
aaa
sbb
mov
and
inc
cmp
jecxz
cmp
test
dec
cmp
cmpsb
leave
and
test
mov
int3
call
adc
inc
mov
faddp
push
add
pop
push
add
xor
ret
push
push
aad
ss
and
cmpsl
inc
outsl
xchg
sbb
test
pop
mov
fnstcw
mov
add
mov
scas
imul
cmp
adc
and
xchg
mov
sbb
stc
hlt
shrl
push
and
test
ja
cmp
xchg
outsb
pop
fcmovne
pop
push
rorl
hlt
inc
xchg
ret
inc
fldl
test
xchg
mov
pop
jbe
aad
mov
lret
push
fisubrs
mov
add
xor
sbb
dec
cmp
dec
aam
inc
and
adc
leave
cld
fs
add
iret
jp
cmp
nop
xor
sub
pop
dec
adc
loope
jo
push
std
aad
push
xchg
pop
adc
shrb
mov
mov
aam
xchg
shrl
iret
push
adc
and
mov
shll
loope
out
in
stos
mov
jge
xlat
into
adc
outsb
loope
int
lret
sti
mov
into
pop
mov
sub
aas
out
push
mov
pop
popf
sahf
push
shrb
in
stc
lods
mov
cmp
mov
in
mov
gs
incl
pop
xchg
push
inc
dec
inc
lret
popf
xlat
js
jp
out
sub
mov
sbb
fs
xchg
xchg
adc
test
mov
or
scas
inc
mov
mov
fsubrp
dec
pop
arpl
test
cmp
out
xchg
leave
sub
je
movsl
xor
sub
adc
and
push
pop
aas
mov
rcll
addb
cmp
add
sub
inc
stc
ret
aad
xchg
and
testb
aas
push
jp
inc
nop
sahf
push
jge
xor
sub
push
ret
xchg
mov
call
mov
adc
cmp
aam
jb
push
inc
push
nop
adc
addl
pop
nop
mov
jmp
sbb
sbb
or
sbb
adc
fwait
sbb
repnz
jge
xchg
xchg
adc
sub
in
mov
or
mov
fldt
add
test
test
into
adc
jb
xchg
dec
mov
sub
aaa
nop
shrb
fisttpll
dec
insl
mov
or
fsubl
sbb
adc
jo
dec
mov
dec
leave
add
imul
sub
insl
imull
and
inc
mov
xor
jmp
add
mov
xchg
pop
adc
ja
fildl
ret
nop
clc
scas
mov
test
daa
int3
insb
mov
cmp
mov
outsb
ret
sub
inc
pop
out
add
jecxz
sub
aaa
hlt
pop
and
mov
inc
mov
shll
inc
push
gs
shl
mov
push
push
dec
nop
pop
jno
mov
mov
lret
fs
in
jmp
icebp
ret
inc
mov
and
call
aam
add
push
test
aam
pop
mov
out
movsl
cltd
pushf
add
xchg
and
or
jo
nop
ficomps
dec
push
fnstcw
stos
jg
sbb
mov
ret
and
xchg
fistps
pop
fiaddl
loop
stos
xor
sahf
cli
mov
xor
adc
js
lods
icebp
les
or
sarl
in
sub
push
jg
in
pop
out
inc
or
sub
cmp
mov
pushf
sbb
sbb
mov
cmp
adc
mov
lcall
sti
fiaddl
out
pop
std
inc
inc
mov
into
stc
xchg
loop
lea
push
cmc
mov
xchg
test
popf
shll
test
iret
loope
stos
sub
mov
scas
rorl
mov
fwait
pop
push
mov
pop
lret
ljmp
aam
loopne,pt
xchg
jmp
shl
sbb
pop
mov
cmp
jecxz
pop
sub
cmp
testl
mov
push
mov
jl
mov
popa
aaa
nop
ret
loopne
xlat
jne
jnp
push
inc
mov
add
dec
adc
xlat
push
dec
shll
xlat
adc
insl
test
ret
in
xlat
jo
shrl
shrl
pop
cmpsl
and
xor
adc
adc
xlat
inc
fldl
xchg
out
inc
push
icebp
xlat
push
jne
xchg
das
jmp
out
daa
inc
loop
js
rcrb
repz
xlat
popf
mov
mov
sub
popa
loope
cltd
stos
insl
sbb
aaa
call
aad
xlat
jb
int3
xchg
pop
and
push
lret
mov
adc
ret
repnz
iret
sarb
out
fisttpll
or
dec
std
mov
sub
cmp
leave
xchg
mov
out
nop
xchg
sub
popa
fisubrs
testl
sarb
add
ljmp
loop
mov
clc
inc
or
jmp
xchg
sahf
mov
aad
mov
mov
sahf
xlat
jno
out
or
xor
inc
aad
inc
add
ss
jo
push
fnstcw
mov
idivl
jle
and
popa
outsb
and
sbb
dec
add
xor
mov
imul
stos
int3
out
ds
mov
shrl
or
fisubrl
lods
add
fnstenv
fcomi
fsubs
aam
in
add
fldenv
push
inc
imull
loopne
nop
add
push
int
push
hlt
mov
xchg
cmp
int
mov
jge
push
dec
jg
daa
jge
cmp
ljmp
nop
gs
push
sbb
and
xor
xchg
in
jle
in
test
lahf
dec
push
je
adc
push
aas
nop
dec
bound
sahf
rorb
xlat
cmpsb
cmc
out
inc
loop
ljmp
jle
shll
sbb
mov
out
ja
cmpsb
shl
sti
xchg
xchg
mov
popa
pop
nop
enter
test
sbb
loop
fdivrl
sbb
mov
mov
sub
jle
adc
xchg
movsb
xchg
push
mov
je
jp
cwtl
xchg
fldenv
sub
cld
out
push
sub
jns
rol
inc
pusha
and
push
adcb
inc
pusha
mov
pop
bound
jmp
popa
int3
adc
sub
sbb
mov
push
data16
jae
int
push
aam
mov
bound
ds
loope
push
aam
repnz
push
add
lret
stos
ror
jo
rcrl
fadds
mov
pop
xchg
adc
jae
jnp
pmullw
sbb
cld
xchg
xchg
sub
xor
aam
dec
mov
jb
pop
mov
ret
mov
mov
nop
sub
ja
dec
mov
aaa
or
fcoms
and
or
dec
test
lea
dec
nop
jnp
cs
mov
cwtl
or
imul
push
aas
nop
or
imul
outsb
adc
inc
sbb
xchg
test
pop
fwait
leave
pusha
cmp
out
xchg
jns
mov
adc
or
jne
mov
fwait
or
mov
jo
ss
loop
mov
rclb
sub
nop
mov
sbb
adc
iret
aas
push
adc
adc
nop
dec
pop
mov
ja
mov
test
sbb
fisubrs
inc
nop
repnz
pusha
sub
scas
xor
add
sarb
fs
lea
sti
nop
inc
out
xchg
and
add
lods
add
ljmp
mov
movsl
gs
ja
mov
adc
adc
mov
mov
notl
inc
and
sub
scas
lret
popa
nop
stc
stos
push
ret
call
rcll
nop
jnp
jo
mov
outsb
in
cmpsl
fadd
subb
mov
es
mov
scas
pop
add
and
xor
mov
push
popf
mov
push
nop
xor
inc
sbb
daa
jmp
sbb
and
inc
add
xchg
or
xchg
ja
add
xor
jbe
jbe
stos
frstor
les
sub
mov
fildl
jmp
shl
scas
pop
jmp
cmp
sbb
xor
popf
adc
inc
lock
stos
imulb
sbb
pusha
ja
cmp
mov
scas
pop
ja
adc
cmpsb
xchg
cwtl
cmpsl
orb
cmpsb
pop
sbb
imul
cmp
jp
sub
xchg
push
std
nop
imul
push
pop
dec
lret
js
adc
push
push
push
bound
jnp
pop
nop
fldl
jne
push
jg
dec
sbb
pop
bound
pop
push
pop
repnz
adc
cwtl
cli
mov
lcall
icebp
enter
push
mov
in
jge
jns
adc
xor
ret
mov
push
cmp
sbb
inc
and
ss
push
lcall
add
sbb
add
leave
nop
inc
roll
sahf
dec
mov
push
add
ffree
xchg
test
jl
adc
aas
push
adc
mov
out
ljmp
jmp
movsl
ja
xchg
test
cltd
add
pop
xor
pop
rcl
jecxz
leave
add
mov
testb
faddl
leave
xor
pop
jle
daa
inc
ljmp
mov
push
jo
mov
mov
fmuls
loop
pop
adc
movsl
jns
xchg
es
jg
pop
inc
int
into
lea
sbb
push
push
sbb
cld
mov
inc
jnp
inc
dec
aam
aas
xchg
repnz
xchg
inc
lods
and
aam
inc
push
ss
jns
mov
xor
xchg
nop
and
ja
pop
dec
aam
icebp
cltd
xor
popf
pop
rclb
test
daa
dec
push
movsl
fists
mov
shll
idivb
push
pop
out
xchg
dec
push
jge
orb
add
and
mov
into
mov
aaa
je
inc
stc
jmp
sbb
sbb
sbb
jnp
repnz
add
xor
push
loopne
fildl
mov
fnstsw
mov
jmp
adc
jbe
mov
sub
xor
push
ja
outsl
cmpsl
addr16
movsb
bt
sbb
dec
mov
subb
fs
enter
loopne
mov
lret
and
lds
aaa
lea
inc
mov
daa
jne
out
int3
xchg
lret
inc
and
iret
lret
inc
dec
adc
add
push
es
sbb
pop
nop
sbb
xchg
dec
add
push
push
cmc
and
add
xchg
lcall
sub
mov
mov
mov
in
sar
mov
mov
xor
adc
xlat
sub
jae
jns
push
add
lahf
mov
enter
xlat
add
and
in
sbb
sarl
sbb
pushf
xchg
jae
shrb
adc
aaa
jae
xlat
fistpll
imul
xlat
xchg
push
test
or
addr16
hlt
and
xchg
movsb
cmp
xor
lea
aas
loopne
inc
mov
cmpsl
js
imul
adc
pushl
dec
xlat
mov
sti
xor
mov
push
mov
rolb
or
aad
lret
xlat
cwtl
movsb
cmc
inc
ret
sbb
and
add
xor
rcl
cmp
insl
push
xchg
fs
fstp
xchg
lahf
push
mov
add
out
movsb
iret
es
ret
fnstsw
call
aam
xlat
ljmp
aas
xlat
push
adc
js
hlt
inc
sub
ret
adc
aaa
sub
sbb
out
movsl
aad
mov
hlt
sbb
fidivl
into
adc
pop
test
fst
int
and
stos
pop
inc
out
inc
xlat
push
jb
pop
pusha
cmp
pop
jno
adc
cmpsb
xlat
jo
cli
mov
sbb
dec
xlat
cmp
xor
icebp
rcrl
jp
add
outsl
ja
push
mov
test
xlat
subl
lods
jmp
insb
in
push
push
xchg
pop
sbb
mov
push
mov
xchg
int
out
pop
lahf
mov
fst
mov
jg
addr16
xchg
pop
push
aam
adc
fisubs
popf
je
adc
out
sbb
loope
xor
out
cmpsl
loopne
sub
sbb
push
iret
push
lock
sub
je
pop
bound
pop
xlat
add
jg
push
jmp
mov
xchg
das
sbb
cmp
xor
setno
mov
lret
xlat
mov
inc
push
aam
aas
xlat
rorl
cli
jae
daa
lahf
mov
push
insb
xchg
xor
mulb
hlt
add
push
sbb
sbbl
inc
mov
adc
dec
inc
mov
int3
push
push
repnz
clc
and
push
jne
cmp
ficoms
mov
test
mov
xlat
sub
adc
xchg
add
jp
push
mov
fldenv
xlat
leave
push
inc
into
jbe
mov
pop
aas
es
addl
fwait
pop
push
dec
xlat
out
or
and
insb
data16
mov
add
jne
addr16
push
sbb
std
push
xchg
ret
pop
jle
cmp
pop
out
lahf
adc
or
mov
fsubr
add
jo
icebp
cmc
mov
scas
push
sbb
cmp
sbb
mov
jns
dec
aad
xor
lcall
cmp
pop
mov
or
mov
add
fidivs
aaa
iret
or
mov
lods
notl
xlat
mov
jecxz
cmpsb
sbb
or
and
test
or
push
test
adc
lods
lds
out
fcompl
in
out
push
pop
outsl
mov
push
push
fists
xlat
les
call
xchg
xlat
es
mov
sbb
fs
sub
push
outsb
adc
cmp
pop
and
mov
loope
sub
call
adc
cmp
sbb
fidivrs
cmpl
aas
lock
sbb
pop
push
fst
mov
sbb
xchg
xlat
xor
jecxz
mov
push
cmpsl
adc
add
in
xchg
popa
mov
rcl
xchg
jle
xor
dec
cmp
cmp
daa
out
xlat
das
in
inc
inc
frstor
mov
mov
inc
sub
xlat
in
pop
mov
xor
mov
cli
loopne
xlat
sbb
int
xlat
push
sub
lcall
mov
mov
je
mov
xlat
insb
xchg
push
or
dec
sbb
fcoml
mov
inc
imul
adc
rolb
ds
scas
std
add
jecxz
push
popa
sarb
rcrl
xchg
or
adc
int
mov
lahf
loopne
neg
not
das
addr16
jno
and
sub
pop
mov
pop
mov
xor
out
xor
cmpxchg
xor
out
scas
subl
sbb
push
mov
xlat
lods
add
popf
inc
xlat
ds
ror
mov
cmp
aad
in
cmc
jecxz
xlat
xchg
mov
xlat
enter
cmpb
mov
imull
adc
in
cmpsb
fisubrs
rcrb
cmp
xlat
or
gs
xlat
test
fwait
jecxz
add
ja
sbb
in
lock
cmp
mov
ret
test
out
jmp
inc
xlat
seta
mov
fmull
xchg
pushf
in
shrl
add
mov
jb
fs
or
ficoms
data16
aad
xchg
scas
mov
and
ret
mov
les
stos
and
orl
jae
and
outsb
movzbl
cs
mov
mov
jno
lret
or
iret
jae
dec
xchg
add
mov
repz
in
jns
pop
and
xlat
lods
xchg
add
and
outsl
sub
hlt
pop
cmp
mov
xor
daa
push
pop
or
aad
push
fsubs
and
dec
adc
pop
dec
dec
or
push
notb
jns
frstor
iret
add
lret
and
lea
xlat
mov
movsb
jg
cmp
or
inc
shl
rcll
xchg
in
pop
mov
xlat
out
das
xor
sub
enter
subl
dec
into
sbb
push
xchg
jle
xlat
mov
or
pop
mov
js
divb
aam
pushl
lcall
push
test
movsl
testl
jns
shrb
jmp
pusha
xor
mov
iret
push
sbb
mov
jno
out
hlt
movsb
pop
pushl
inc
cltd
aad
mov
push
mov
jle
stos
jge
shll
out
xchg
mov
cltd
mov
jae
cmp
and
sbb
pop
sbb
push
mov
push
dec
fnsave
pop
icebp
mov
je
lods
ds
inc
call
mov
fdivrp
push
adc
sbb
mov
rcrb
out
fidivl
push
rcll
mov
push
dec
sahf
sbb
or
jle
push
jge
aad
and
lods
jno
push
sahf
outsb
fcmovnbe
xor
stos
mov
inc
dec
cmc
jmp
xlat
mov
icebp
outsl
mov
out
jnp
mov
sbb
dec
test
mov
iret
test
adc
pop
xlat
sarl
mov
jle
xchg
mov
mov
scas
jne
jl
and
xor
arpl
mov
mov
sbb
push
push
outsl
cmp
add
mov
pop
xlat
popf
or
pop
iret
dec
xlat
push
jg
sbb
jmp
jne
mov
pop
mov
lods
rcl
mov
rorl
xlat
js
adc
sbb
inc
xlat
daa
mov
orl
stos
lcall
inc
xor
or
push
jo
test
sarb
push
rcrl
fcompl
and
sub
rorl
lock
cmp
mov
xchg
fildl
sti
push
or
xlat
rclb
jecxz
roll
daa
in
push
xlat
xchg
lods
dec
test
dec
inc
inc
rcl
orb
pop
push
lods
xlat
scas
and
xchg
mov
fwait
push
iret
inc
inc
sbb
mov
xlat
or
in
adc
pop
sub
xlat
orl
mov
pop
pop
xor
xchg
lods
push
ja
and
sub
xlat
dec
fdivl
cmp
xlat
mov
loop
repz
outsb
push
arpl
jmp
ds
xlat
sti
sub
loop
xchg
cltd
sub
add
subl
xchg
pop
or
stc
test
cli
leave
xlat
in
mov
fcomip
or
xlat
adc
in
nop
enter
or
mov
inc
call
cmpb
jp
pop
not
cltd
and
add
cwtl
daa
xchg
add
cmpb
mov
adc
xchg
mov
and
xor
pop
xlat
fs
orb
and
jbe
pop
stc
out
pop
rol
xlat
xor
push
sbb
dec
xlat
rorl
orl
mov
std
push
mov
hlt
push
pop
gs
cmp
mov
xchg
pop
daa
and
mov
int3
lods
mov
sbb
jle
call
push
gs
pusha
sahf
cmp
testl
shrl
and
mov
test
mov
mov
repnz
adc
cmpb
or
int
jbe
jl
push
jnp
adc
sub
and
fsubrl
ret
push
nop
cltd
sti
out
adc
fsub
icebp
int3
sbb
ljmp
ja
nop
scas
cmpsl
aam
scas
mov
leave
cmp
aad
sub
out
das
sbb
and
ret
aad
inc
xor
icebp
mov
shll
push
pusha
push
push
dec
mov
ret
cwtl
aad
sub
aaa
push
nop
fs
dec
mov
push
xlat
xchg
loopne
stos
push
jmp
and
push
sbb
pop
mov
out
out
fcoml
cwtl
jl
movsb
xor
sahf
hlt
cmpsb
rcrl
test
cmp
je
aaa
mov
movsl
or
out
leave
lahf
outsl
fildll
mov
imull
fs
ficoms
sub
popa
jnp
cmpsl
pop
jle
mov
lock
mov
lcall
xchg
cmp
xchg
test
mov
xor
shlb
nop
negb
mov
xorb
push
jg
add
xchg
xchg
xor
out
or
sbb
cmp
sbb
out
inc
push
sbb
xchg
iret
mov
ljmp
nop
cmp
xchg
repnz
sub
adc
sbb
lock
sbbl
jge
xorb
push
sbb
lods
out
add
lock
sbb
push
xchg
sahf
mov
rcr
and
mov
add
movsl
addb
scas
cmp
mov
jmp
xchg
jo
test
movl
or
popw
dec
adc
pushf
push
std
sbb
inc
push
dec
repnz
mov
loope
push
pop
sbb
sub
ret
aam
aam
add
pop
lock
mov
test
daa
pop
xchg
mov
sbb
fwait
jne
adc
push
add
repnz
xchg
push
pop
or
rclb
cmp
cmpl
leave
lret
mov
in
sarl
and
stos
int3
mov
popa
jecxz
push
cmpsb
out
mov
and
mov
and
pop
outsl
xchg
dec
sbb
jb
call
jle
xor
pop
or
movsl
push
sbb
ljmp
xchg
xchg
pop
addl
jnp
push
aad
and
imul
adc
out
xchg
scas
or
lds
iret
xor
loope
seto
jae
scas
xchg
lock
sbbl
mov
test
decl
push
mov
mov
lret
in
dec
mov
jmp
stc
pop
lock
sahf
sarb
dec
lret
xor
out
mov
push
aaa
adc
sbb
adc
add
push
loopne
mov
jmp
mov
push
addr16
clc
xor
nop
rorb
jmp
pop
mov
fisttpl
imul
mov
mov
xchg
int3
scas
jmp
hlt
int
lock
js
inc
inc
xchg
or
xor
nop
lea
adc
mov
xchg
push
ja
repz
pop
shr
pop
mov
sbbb
sub
dec
enter
icebp
in
jne
mov
add
pop
mov
stos
iret
imul
subb
iret
fnsave
stc
sub
inc
mov
leave
inc
jecxz
std
icebp
xchg
pop
or
add
insl
mov
fxam
test
enter
adcb
shll
xor
xchg
insb
jl
in
fstps
lret
mov
xlat
sbb
cwtl
ret
les
xlat
and
popf
addr16
sbb
rcll
scas
mov
and
icebp
and
callw
xlat
ljmp
jo
js
jno
les
loopne
jnp
data16
sarl
xchg
rorb
sub
and
or
xchg
push
ret
mov
lahf
inc
out
cmp
test
ficoms
xlat
sti
pop
push
push
and
adc
xlat
mov
mov
test
xor
ja
and
pop
add
das
mov
and
fwait
shld
repnz
push
aad
cmp
xlat
nop
inc
iret
push
pop
mov
push
xlat
push
sbb
call
pushf
seta
mov
jbe
fadds
dec
push
pushl
mov
xchg
arpl
ss
loopne
mov
mov
sub
je
jae
adc
out
push
xchg
clc
dec
xlat
lcall
pop
xlat
sub
pop
sbb
cmp
in
pop
inc
scas
xlat
sarb
xchg
xlat
out
dec
push
sti
xlat
pop
add
es
sbb
iret
lock
cwtl
and
repz
aad
push
out
push
xlat
fldcw
lds
pop
push
scas
xlat
adc
sub
mov
cmp
repz
adc
test
cs
adc
jge
xchg
addl
scas
lock
mov
testl
inc
xlat
call
scas
lock
add
rolb
push
cmp
pop
lds
cmc
ret
mov
test
xlat
xor
mov
pop
inc
insl
mov
sub
stos
inc
daa
mov
scas
fwait
movl
lds
xlat
mov
pop
es
outsl
cld
dec
xchg
add
cmc
fstpt
mov
ret
jb
push
xor
jns
fs
xchg
cmp
sub
push
pop
leave
pushf
rcll
aam
cmpsl
sbb
xlat
add
adc
mov
jo
dec
sub
xlat
and
xchg
push
sub
sti
add
iret
imull
aad
inc
jo
inc
imul
and
out
lods
inc
pop
mov
mov
sbb
je
sarb
loop
inc
push
incb
hlt
aas
rcr
jmp
or
or
call
adc
iret
cs
jns
cmp
pop
fs
out
xchg
inc
out
cld
rorl
xlat
jae
mov
sbb
add
bound
xlat
lret
inc
popa
and
aas
sub
fstps
mov
test
rolb
bound
xlat
push
push
dec
xchg
adc
or
mov
scas
stos
in
and
shl
sbb
aad
jle
push
pop
aas
testb
loop
jg
scas
nop
pop
stc
mov
adc
sub
inc
push
roll
sub
lret
test
gs
dec
outsl
xchg
cmp
fistpl
mov
lods
sub
push
inc
xlat
aaa
mov
sti
inc
iret
subl
push
cli
mov
jo
xlat
add
out
inc
nop
push
xlat
or
xchg
jb
daa
cmp
jne
jl
decb
dec
xlat
xor
mov
stos
ret
xchg
xlat
sbb
adcb
daa
fsub
mov
out
xlat
sahf
cld
aaa
scas
loope
push
out
and
lret
cmp
cmpsb
and
data16
xchg
xor
xor
xlat
sahf
rol
fists
out
mov
mov
xor
gs
xchg
sbb
shll
sbb
insl
repz
aad
xlat
popa
xchg
xchg
lret
mov
stos
pop
sub
jb
inc
jne
add
pop
jecxz
push
movsl
pushf
cmpsb
push
clc
dec
pop
sti
xlat
jnp
mov
fadd
fldl
jns
lahf
jno
out
aad
and
sbb
into
xlat
lahf
jmp
xlat
cli
mov
mov
int3
sub
mov
mov
cld
push
xlat
lret
out
cmp
sahf
mov
mov
hlt
push
fldenv
cmpsb
popf
cmc
and
test
pop
add
push
cltd
sbb
adc
rorb
arpl
shr
shll
add
jl
loopne
pop
lret
mov
into
push
scas
fdivrs
aad
out
jg
inc
xlat
dec
daa
push
mov
mov
sbb
sub
lahf
hlt
xchg
pop
out
mov
mov
jg
inc
adc
add
push
cmp
pop
iret
dec
add
std
inc
aam
xor
rol
push
cs
inc
lahf
jno
or
pop
inc
jae
rolb
sub
mov
inc
dec
push
xor
xlat
jle
adc
sbb
sub
add
sarb
xor
pop
adc
sub
leave
xchg
mov
fnstsw
push
xchg
cltd
div
cmp
cmp
push
sti
xlat
fwait
jp
cli
mov
incb
popf
adc
bound
daa
or
pop
push
inc
sarb
mov
pushf
mov
iret
push
testl
and
mov
insb
mov
jle
pushf
lcall
mov
pop
mov
pop
movsb
push
divl
mov
jbe
push
mov
adcl
push
mov
scas
mov
and
rcll
sbb
xlat
arpl
into
xlat
jle
movsl
sub
add
test
xchg
adc
jg
into
popa
out
jbe
lret
pop
adc
cld
ret
jne
xchg
sahf
out
test
not
jle
sub
ret
push
cltd
cs
fisubrs
add
or
faddl
push
or
dec
cmc
cmp
ror
xchg
dec
out
stc
out
jno
cmp
cmp
mov
xchg
mov
fdivp
scas
pop
sarb
das
rcl
sub
lock
in
mov
adc
ret
pop
arpl
cmp
cmp
movsb
imul
xlat
add
add
pop
pop
mov
sbb
cmp
push
rcl
sbb
inc
add
fnstenv
push
popf
push
or
sbb
mov
add
dec
jmp
push
pop
aam
cmpb
in
xlat
outsl
lods
xor
dec
fistpl
mov
outsb
daa
rorb
adc
and
lods
mov
mov
push
add
jae
or
fnsave
scas
cmpsb
mov
inc
adc
leave
push
ja
add
insl
icebp
sub
lea
push
push
push
cmp
insb
mov
popf
inc
ja
scas
pop
les
ret
fcoml
dec
shlb
scas
cmp
fiadds
stc
in
jmp
jp
pop
fisttpl
shlb
xlat
insb
in
push
push
stos
pop
xlat
mov
jne
xor
in
dec
xchg
mov
subb
mov
or
dec
xchg
mov
sbbb
cld
xlat
andl
and
movsl
xchg
push
std
xor
int3
xchg
lods
sub
jmp
fst
push
inc
xlat
mov
pop
pusha
mov
enter
shll
xchg
xor
loopne
push
lret
and
jl
popf
mov
pop
sbb
scas
rcll
xlat
adc
mov
fisubs
jbe
xchg
sti
or
jmp
push
xlat
orb
in
sbb
xlat
imul
xlat
call
mov
mov
aad
rcr
xchg
sub
sub
fwait
pusha
mov
fnstenv
xlat
or
ror
adc
pop
jb
ret
aaa
pop
xlat
into
ss
rclb
pop
cwtl
shrb
cmp
imul
pop
lahf
lods
cld
popl
pushf
pop
mov
push
xor
add
dec
lods
in
sbb
push
shld
push
enter
mov
jb
mov
loopne
aad
popa
popl
sbb
mov
lcall
inc
xlat
pop
stos
aaa
ficompl
or
xchg
fisubl
es
adc
inc
jbe
iret
pusha
cwtl
ss
mov
test
or
sub
mov
or
xor
push
sbb
inc
cwtl
mov
sbb
mul
cmpsl
int
cmc
stos
sti
dec
jbe
ss
mov
cmpsb
pop
idivl
inc
inc
xor
cltd
aaa
aam
cmp
in
movsb
cld
fwait
xlat
insl
and
mov
xchg
xchg
mov
inc
repz
add
mov
in
out
ret
push
lcall
nop
fbstp
lock
sub
test
push
xor
inc
mov
ror
cmc
add
xchg
jge
pop
cmp
fwait
aaa
ss
aam
cmp
ret
mov
addr16
outsl
and
ret
adc
fnstcw
add
std
jnp
sub
cmc
sub
stc
pop
add
sub
sub
test
out
push
out
pop
mov
test
nop
out
mov
pop
dec
mov
leave
xchg
mov
add
ja
daa
add
xor
and
sbb
xchg
out
cmp
sarb
xchg
nop
xchg
jl
pop
cmp
test
punpckhdq
lods
mov
dec
int
mov
xor
pop
xor
lods
jmp
cmp
push
inc
fmull
idivl
fwait
sub
mov
inc
pop
dec
pop
lret
and
xchg
pop
jecxz
lret
mov
fbld
loopne
or
push
aas
js
pushl
jne
faddp
fmuls
stos
pushf
pop
pop
rorb
std
xchg
mov
imul
xchg
in
mov
xchg
adc
pop
mov
inc
sub
shl
push
mov
mov
dec
fnstcw
aad
add
xchg
test
xchg
iret
lahf
nop
das
in
jg
sub
mov
aam
mov
push
push
xchg
fwait
or
and
mov
xor
lahf
add
push
loope
addl
sub
mov
mov
inc
sbb
gs
xor
aam
inc
jnp
inc
rcrb
mov
incl
jle
nop
xorl
cmp
sbbb
jmp
mov
enter
inc
sbb
inc
sahf
sbb
test
pop
mov
fcompl
ror
outsb
popf
mov
push
rcll
dec
aad
inc
mov
rorl
ret
mov
and
add
stos
push
fnstenv
nop
shlb
cmpsl
sub
icebp
sti
aad
cld
stc
adcl
or
iret
ljmp
cmc
and
clc
jb
iret
cmc
sub
push
test
jne
fldl
stos
xchg
call
mov
les
jecxz
cmc
sbb
mov
lock
je
subl
push
ja
int
mov
mov
cmpsl
sub
push
dec
dec
push
mov
xchg
enter
jae
sub
dec
outsl
and
fs
xor
fnstsw
xor
pop
xchg
leave
icebp
dec
lret
push
in
and
aaa
push
adc
rcrl
pop
daa
bnd
xor
fwait
push
jne
lods
push
inc
aam
cmp
sbb
aaa
cmp
adc
and
lds
mov
xor
flds
jp
mov
push
repnz
iret
arpl
aaa
into
insl
adc
xor
lea
xorb
das
xor
sbb
jge
sub
and
and
out
test
xchg
mov
dec
push
lds
stos
in
or
xchg
adc
mov
roll
jp
push
aam
or
and
aad
movsl
push
fldenv
cmpsl
inc
adc
inc
jmp
and
and
sub
leave
cmp
ljmpw
jp
mov
insb
and
or
mov
lock
out
out
inc
inc
cmp
std
xchg
sub
mov
push
sbb
sbb
dec
jo
and
dec
or
negl
sub
sbb
ret
test
adc
ficompl
pop
jns
lret
stos
add
mov
shlb
xchg
int
aam
xchg
add
xchg
mov
in
xchg
and
add
push
ret
sub
inc
xor
and
aam
fidivrs
xchg
xchg
push
mov
inc
mov
loope
cmpsb
xchg
pop
lods
addl
adc
mov
mov
sbb
daa
shrb
inc
pop
les
jne
js
dec
cmp
adc
les
jg
inc
hlt
mov
mov
nop
idivl
sbb
out
and
push
ljmp
mov
xlat
sub
mov
mov
xor
xchg
addr16
mov
inc
push
adc
or
ja
stc
data16
je
xchg
das
ds
mov
or
mov
mov
mov
lret
aas
jmp
add
pushf
mov
nop
dec
push
dec
nop
or
in
sbb
inc
nop
cs
stos
and
ret
mov
mov
imul
push
loope
cmp
call
rol
les
scas
or
sti
not
and
aam
addl
stc
aam
mov
sbb
add
test
xchg
and
sbb
jg
in
inc
ss
into
fbstp
push
nop
cltd
jge
adc
rcll
xchg
pushf
js
test
add
aam
jb
xchg
push
jbe
lods
addb
inc
dec
or
pop
rcll
sub
fs
adc
jbe
dec
push
stc
aam
xchg
push
mov
adc
mov
xchg
shlb
ss
add
mov
adc
adc
enter
jmp
mov
pop
inc
mov
add
dec
mov
xchg
lock
jo
lret
jne
push
jg
flds
xor
lods
int3
lods
dec
data16
int
std
and
push
adc
push
pop
pop
movsb
iret
ds
sti
fwait
scas
repz
les
inc
add
fistps
nop
sbb
xlat
jnp
js
negb
sbb
pop
cmc
and
push
and
xor
jl
daa
pop
imul
mov
int
aaa
nop
and
out
jl
hlt
test
sub
adc
mov
scas
in
shl
nop
fnsave
psubsb
add
ja
nop
mov
pop
arpl
call
mov
cltd
and
stc
movsl
adc
mov
leave
ljmp
lret
scas
in
sub
and
sahf
adc
push
mov
shrb
xchg
int
push
push
inc
dec
inc
repz
xor
scas
shll
sub
inc
pop
dec
mov
out
add
fwait
repnz
ficoml
cmp
jecxz
bswap
pushf
mov
pop
std
mov
jmp
and
scas
nop
inc
inc
mov
ja
scas
ficoms
nop
cmpsb
repnz
adc
pop
es
xchg
pop
dec
pop
pop
push
mov
inc
xor
mov
mov
pop
fdivs
std
jb
ret
inc
adcb
stos
dec
je
mov
orb
xor
repz
jae
push
loop
pop
sub
jnp
aas
call
rorl
subl
inc
enter
icebp
sub
xchg
sbb
push
and
nop
int
fcomi
push
fisubl
cmp
xchg
sarl
mov
cli
aad
imul
xchg
lret
inc
mov
pusha
sub
repz
cld
add
lea
xlat
pusha
cwtl
sub
cs
pop
stc
lea
daa
rcrb
and
push
sub
pushf
repz
mov
cltd
jbe
inc
daa
mov
mov
mov
xor
pusha
ret
out
nop
stc
jno
jae
or
ja
pop
sbb
fidivs
aad
repnz
imul
inc
sbb
push
scas
dec
dec
stos
sub
adc
sub
mov
pop
and
inc
and
cmp
jb
ljmp
and
sahf
test
fdivl
pop
scas
inc
jno
das
mov
and
jns
inc
push
adc
sub
loope
mov
aad
or
pop
nop
out
push
frstor
iret
pop
inc
sti
mov
and
call
call
out
xchg
enter
fcmovnu
unpckhps
sub
outsb
add
adc
and
ja
inc
das
outsb
std
pop
dec
jle
lret
fmuls
mov
push
ja
xchg
cld
adc
dec
pusha
mov
nop
in
in
iret
and
push
dec
mov
scas
into
add
mull
mov
xchg
cmpsl
mov
and
daa
inc
push
into
mov
mov
out
aam
and
push
or
in
imul
push
imul
in
mov
sub
aad
jmp
sub
xor
jnp
adc
mov
xor
fwait
out
mov
sbb
lahf
insl
xor
pushf
in
rolb
leave
xchg
in
cmc
xchg
add
xchg
and
mov
test
cmp
mov
loope
test
mov
add
or
imul
jl
dec
out
data16
in
mov
enter
mov
pop
xchg
ss
and
das
jl
imul
push
push
fs
mov
jo
mov
xlat
frstor
jne
addr16
test
jo
xlat
mov
dec
adc
xlat
icebp
iret
push
notl
and
sarb
xlat
insb
and
lahf
pop
push
fnstenv
cltd
mov
inc
cmpsb
lea
jns
xlat
inc
sbb
into
adc
aad
pop
xlat
fst
fwait
mov
sbb
mov
mov
lahf
mov
dec
xor
and
and
add
fisttpl
jae
frstor
push
nop
in
jne
xchg
xlat
lea
in
mov
int
mov
lret
sarb
mov
repz
call
iret
imul
sub
mov
xor
ja
fiadds
cmc
mov
mov
js
dec
mov
and
xor
add
mov
and
popa
pop
jns
mov
addr16
repnz
mov
mov
dec
ret
inc
pop
es
and
in
adc
sub
repz
stos
add
ret
int
inc
xor
xchg
push
outsb
stos
mov
loope
push
outsl
iret
push
mov
in
lahf
xlat
int3
and
lahf
add
xor
aas
push
push
repz
out
lods
aam
cmp
push
add
out
nop
mov
xchg
clc
mov
jb
sub
pop
inc
adc
xlat
sub
out
add
nop
adc
xlat
mov
mov
into
arpl
shl
lahf
add
adc
push
pop
mov
das
lret
fsubp
pop
mov
mov
xlat
cwtl
lock
imul
adc
or
fucomp
lahf
scas
lahf
aam
inc
sarl
pop
pop
xlat
aad
out
pop
inc
imul
mov
jp
clc
xlat
xchg
movsb
les
xlat
pop
sub
popf
neg
inc
call
lret
sarb
shll
jo
stos
mov
nop
jmp
xlat
scas
aad
push
insb
in
loope
pop
pop
xchg
xlat
ljmp
pop
nop
fmull
nop
xlat
repnz
dec
popa
inc
sbb
nop
enter
xlat
int3
cli
pop
data16
addr16
add
shlb
jne
adc
xor
mov
xlat
or
ds
js
call
shlb
inc
leave
or
sbb
call
sbb
rcl
fs
push
jl
or
inc
test
out
sbb
sti
and
lock
xchg
lret
jle
in
movsb
mov
divl
test
clc
ja
mov
xlat
push
lret
jmp
vmwrite
stos
mov
test
inc
xor
sub
shlb
xlat
or
xlat
addb
jl
addr16
xlat
xchg
cmpsl
jle
inc
stos
mov
jne
scas
and
shrb
subl
cmpsl
fs
xor
cmp
lcall
xchg
and
xlat
or
pushf
mov
mov
nop
mov
xlat
cmp
insl
jp
clc
mov
fistps
adc
add
int
xor
mov
insl
sub
pop
xlat
daa
sbb
ja
jmp
xchg
out
repnz
xlat
or
xor
mov
mov
inc
lret
lds
ret
pop
push
cmp
push
out
pop
xchg
aad
push
push
aas
ret
xlat
test
test
cmp
push
test
imul
cmp
add
outsb
mov
ror
add
cmp
push
aad
mov
xlat
sbb
pushf
mov
xlat
adc
fld
popf
cmpsb
nop
or
xchg
sbbb
xchg
xlat
add
lock
daa
mov
push
xor
xchg
or
fdivs
sbb
jno
xor
ja
sti
insw
mov
into
inc
rcrb
ljmp
cmpsl
andl
sub
pop
jne
push
xlat
jb
and
jbe
aas
pop
xlat
and
jns
popf
in
push
sub
sub
fwait
mov
shlb
adc
addr16
inc
jae
lcall
push
movsb
xchg
xlat
cmp
div
lahf
adc
adc
push
sarl
xlat
push
shll
mov
pop
mov
or
xlat
push
jnp
inc
mov
out
push
sbb
cltd
inc
test
movsl
sbb
ret
xlat
push
scas
adc
and
cmc
in
add
sub
lock
mov
in
fistps
mov
out
jbe
mov
testb
test
push
mov
jge
ret
in
sbb
scas
call
ret
mov
add
xor
lret
xlat
cmp
cltd
subl
mov
add
popa
fists
test
scas
pop
hlt
pop
stos
or
addr16
js
lcall
sbbl
push
mov
popa
call
std
arpl
into
dec
xlat
sub
mov
mov
stos
xchg
mov
push
mov
std
or
pushf
mov
xchg
push
xchg
sub
mov
add
xchg
push
inc
iret
mov
movsl
std
push
pop
inc
xlat
pop
sbb
push
mov
popf
and
jne
push
sub
mov
nop
push
ficoms
add
mov
sub
sbb
and
dec
add
inc
rolb
aam
lods
lock
xchg
sub
rcrl
jnp
pop
adc
negl
pop
adc
xlat
sub
in
push
xlat
fidivs
fstp
dec
iret
pop
ret
push
test
shr
lcall
pop
adc
stc
hlt
xlat
stos
sbbl
popf
fdivrl
insb
pop
pop
cmp
mov
insl
iret
inc
data16
nop
rorb
inc
fwait
mov
out
pop
xlat
cld
push
pop
pop
mov
addr16
stos
push
cmp
push
sub
xlat
pop
aam
mov
pop
adc
je
jnp
jge
jno
rorb
shrl
push
push
js
xlat
loop
pop
jo
ss
push
mov
push
aaa
push
icebp
jge
xlat
int
or
sbb
rcl
sbb
xor
gs
xchg
pushf
xlat
xor
shlb
dec
xlat
xor
iret
xlat
xor
inc
mov
xlat
pop
mov
in
xlat
fs
in
mov
xor
int
inc
xor
daa
adc
out
push
xlat
in
adc
lahf
std
pop
scas
mov
xchg
xlat
xor
pop
jl
test
out
dec
mov
add
rorl
hlt
and
shrb
ja
cmp
sti
dec
mov
out
mov
xor
dec
and
sti
rcr
out
or
adc
add
dec
add
sub
xchg
rolb
add
testl
sbb
jmp
sahf
addr16
pushf
jo
addr16
enter
mov
mov
roll
addr16
aad
andl
pop
in
mov
scas
out
cmpsb
pop
jne
sbb
mov
pushf
cmp
and
pop
aad
dec
imul
xchg
sub
xor
cmc
pop
adc
xlat
mov
cs
xlat
sbb
inc
mov
lods
jge
lahf
int3
sti
testb
pop
mov
mov
xlat
stc
int
jae
and
fidivrl
and
mov
push
jns
adc
add
aam
repnz
mov
adc
cmpb
sub
mov
into
add
xorl
push
or
aam
xlat
inc
std
and
push
cmpsl
arpl
sbb
mov
ja
or
repz
mov
mov
push
in
les
dec
push
out
sub
adc
push
mov
fld
jle
lahf
ds
push
scas
aam
xorb
divb
mov
xlat
sbb
or
and
stos
cmpsb
jo
cmp
push
int
inc
cltd
ror
add
dec
imul
out
in
and
out
and
dec
jae
in
fs
and
lcall
repz
rol
js
xlat
and
ljmp
fsubs
shll
jecxz
fnstsw
push
xlat
cld
push
dec
loop
jmp
dec
stc
add
out
iret
xchg
inc
xchg
aad
outsb
push
data16
xchg
dec
in
pop
inc
pusha
mov
mov
jl
iret
aad
add
xor
leave
leave
insb
iret
scas
jp
mov
fisubl
cli
xor
cmp
lds
cli
mov
xchg
push
xor
push
fsubl
xor
std
push
decl
nop
ret
in
inc
aaa
cmc
push
cmp
sbb
ja
repz
mov
int
inc
mov
fxtract
je
push
sub
rcrb
jbe
fbstp
inc
ljmp
call
adc
imul
dec
jae
loop
push
push
fidivrl
enter
stos
adc
ficoms
jae
add
mov
jae
xor
pop
ret
sbb
or
push
mov
cvtdq2ps
mov
mov
sbb
fiadds
jge
xchg
int3
in
xor
cmp
stos
dec
jp
test
jns
adc
sbb
daa
stc
bound
nop
cld
push
das
inc
sub
out
pop
cmp
push
outsb
cmp
push
outsl
nop
dec
jl
shll
leave
clc
xchg
shlb
fcom
les
push
xchg
sub
stc
into
adcl
push
inc
lock
sahf
aad
adc
scas
mov
mov
push
mov
fisttps
cmpsl
nop
jb
arpl
inc
pop
out
ret
and
sbb
pop
sub
push
pop
jbe
ror
pushf
mov
lret
push
mov
lcall
xchg
push
add
lahf
data16
sbb
out
cmp
mov
js
into
lds
jge
jle
rolb
cmp
xchg
jg
mov
jg
nop
or
mov
mov
push
ds
sbb
aam
inc
sbb
sbb
xchg
mov
pop
flds
shll
aad
cmp
pop
pop
out
scas
sbb
mov
fwait
movsl
pop
sub
xchg
fbstp
call
ret
fmuls
imull
sbb
lahf
mov
pop
xor
jnp
std
fsubs
adc
and
mov
ds
ds
movsb
bound
pop
mov
div
insb
int3
pop
or
mov
pop
fdivr
inc
lahf
push
subl
cmp
cwtl
aad
clc
mov
sub
jp
ja
fisttps
pop
push
xchg
out
and
leave
sbb
stos
mov
dec
leave
mov
ret
sbb
and
loopne
mov
in
dec
in
push
gs
push
mov
or
xchg
cmc
nop
test
mov
add
pop
push
mov
movsl
out
inc
xchg
gs
xor
jg
lret
leave
mov
adc
stc
fiaddl
std
lret
sahf
pop
test
or
fs
mov
icebp
bound
icebp
add
or
mov
nop
mov
ja
inc
mov
mov
push
mov
lret
jg
mov
xor
jmp
pop
pop
dec
push
xlat
jbe
loope
lds
fsubl
stos
xorl
jno
repnz
or
adc
dec
sub
outsb
not
sub
mov
xor
inc
repz
push
push
xor
sub
mov
gs
mov
sbb
jp
xchg
mov
pop
mov
outsb
push
repz
inc
js
imul
xor
rorb
cmp
mov
shrb
test
mov
push
sbb
dec
sub
pop
fdivrl
push
xchg
jne
aaa
mov
lock
loop
pop
mov
sub
dec
xchg
into
jbe
pop
dec
add
pop
xor
idivb
mov
push
test
mov
ffree
adc
gs
fsubl
aaa
pop
movzwl
mov
add
or
sub
pop
push
inc
gs
mov
fstpt
test
jmp
sti
xchg
pop
stos
push
add
xchg
test
pop
ds
inc
out
sub
sbb
push
sbb
push
out
jge
out
push
mov
std
sbb
inc
xchg
cmp
fimull
jecxz
leave
dec
add
loopne
jo
and
ljmp
rorb
aas
outsl
aad
fwait
int
stos
adc
mov
pop
test
and
cmp
jae
jmp
aad
filds
adc
repnz
mov
jo
xchg
stos
pusha
jnp
nop
jp
add
and
adc
mov
sti
add
push
mov
mov
jp
sub
mov
sbb
sbb
subl
stc
jge
dec
adc
push
sub
adc
push
sub
sub
sub
mov
or
sahf
dec
or
rclb
pusha
gs
dec
jg
sbb
cmpsb
sbb
add
orb
je
les
fiadds
jbe
ljmp
adc
lret
addr16
lods
in
leave
pop
mov
aad
aaa
sbb
push
in
xchg
pop
push
xchg
cmp
ja
mov
mull
mov
xorb
sub
push
push
cmp
sub
sbb
outsb
scas
jmp
mov
mov
and
jge
xchg
or
aam
ds
push
cmpsb
inc
inc
pop
ja
int
add
inc
add
fdivrs
pop
sub
jecxz
dec
popf
or
cmpsl
out
inc
add
dec
adc
jle
or
cltd
loop
and
mov
xor
mov
inc
xor
or
xchg
adc
or
jbe
rcll
int3
pop
xchg
mov
xchg
loop
cmp
or
ret
js
and
adc
nop
push
shrb
xlat
push
adc
jb
imul
sub
jno
xchg
xchg
sahf
stc
sbb
dec
movsb
mov
mov
shlb
push
out
mov
push
cmc
pop
pop
iret
xor
or
mov
movsl
push
sbb
cmp
sbb
pushl
decb
mov
jmp
leave
xchg
bnd
xchg
mov
pop
ffreep
pop
dec
lock
cs
pushf
insb
roll
xor
cmp
imul
iret
ss
outsl
add
shll
mov
inc
stos
dec
add
pop
jae
add
mov
hlt
mov
and
xchg
nop
movsl
xor
mov
mov
sub
ret
jbe
adcb
dec
push
ret
pop
rclb
jae
adcb
out
mov
aas
ja
and
getsec
adcl
push
je
mov
jg
lret
fimuls
push
inc
out
mov
push
loopne
pop
repnz
aam
dec
out
ret
lret
imul
ss
xchg
mov
or
mov
stos
xchg
mov
mov
or
xchg
pop
rcrl
imul
dec
rol
out
fistl
cmpsl
mov
jns
pusha
and
sub
xor
outsl
js
sbb
jg
inc
and
ljmp
or
ss
xchg
call
nop
stos
sub
dec
jae
or
insb
mov
outsb
jg
xor
jl
out
int3
scas
scas
lea
mov
jo
sub
add
dec
jnp
cmp
ljmp
pop
out
lods
xor
xchg
push
push
cmp
and
ja
jnp
push
mov
jmp
shll
fcmovbe
push
mov
mov
iret
les
adcb
mov
xchg
adc
jp
jb
pop
and
outsb
ja
ja
cmc
pop
bound
xor
mov
lods
push
push
add
popf
imul
cmp
lods
xor
push
rcll
sbb
loop
or
sub
jg
jmp
or
mov
mov
aam
dec
push
pop
sub
push
rorb
lock
nop
jae
or
aas
push
inc
test
push
sub
xchg
or
ss
jmp
call
pop
stos
cmp
imul
div
pop
int3
nop
cld
scas
sti
rcll
mov
movsl
mov
jmp
add
insb
cmpb
and
mov
pusha
sub
jl
xchg
inc
xchg
ja
push
mov
into
pop
cmp
push
jb
and
mov
arpl
or
mov
mov
jo
roll
fucomp
pop
add
nop
aaa
dec
out
pop
xor
sub
jmp
iret
inc
dec
rcll
fistl
push
fistl
mov
shll
pop
jmp
jnp
shrl
and
or
test
mov
mov
or
xchg
dec
mov
lods
mov
stos
and
pop
jae
and
push
dec
andb
in
stc
inc
mov
or
lock
lods
jne
jnp
iret
xor
and
fstpl
or
push
jg
stos
aam
scas
movsb
adc
call
jmp
lods
push
mov
adc
ss
mov
jo
fdivl
sbb
fbstp
pop
inc
cmp
imul
popl
pop
inc
ja,pt
rolb
push
mov
sub
push
repnz
nop
mov
fwait
dec
sub
sahf
inc
dec
cs
out
pop
add
shrl
mov
xchg
push
push
in
clc
or
or
cmp
sbb
and
fld
fwait
push
adc
jge
sbb
out
out
dec
movsl
xor
shlb
addr16
sbb
push
xor
sbb
xchg
cmp
cmp
out
cld
push
ljmp
pop
in
lahf
neg
push
in
je
xlat
push
push
xchg
ja
dec
in
mov
retw
mov
xchg
xor
iret
cmp
mov
das
mov
add
mov
cmc
js
loopne
mov
mov
aaa
and
pop
xor
jmp
lock
xlat
cmp
scas
test
stc
scas
pushf
lods
mov
and
ds
lea
xchg
arpl
mov
loopne
scas
mov
sbb
inc
push
adc
cmpsl
and
lea
fwait
aaa
jg
nop
imul
push
mov
sbb
xchg
sub
enter
push
cmpsl
std
mov
repz
mov
mov
jmp
divl
pop
out
mov
push
int
mov
and
movsl
push
les
pop
roll
pop
mov
rcll
and
inc
sbb
add
inc
xchg
js
xchg
les
std
aam
dec
cmpsl
inc
mov
lret
out
add
cmp
mov
jg
rcll
daa
jmp
mov
xor
ret
lds
les
scas
sbb
inc
or
subb
xchg
jnp
push
ss
pop
mov
cmp
inc
out
les
aad
cmova
dec
es
subb
push
push
cmp
pop
adc
inc
mov
mov
in
add
push
imul
test
addr16
adc
push
sub
xor
pop
mov
or
ret
add
sbb
jns
inc
mov
inc
sbb
stos
sub
xchg
xlat
cmp
test
test
xchg
mov
shl
movsb
out
mov
inc
xchg
aaa
sub
and
pop
and
subb
mov
je
pusha
es
adc
loope
mov
xchg
jae
dec
cld
add
sti
aaa
mov
sub
or
into
mov
mov
jle
ret
xchg
and
lahf
stc
in
jge
movsl
lea
test
int3
out
xor
je,pt
cmp
js
pop
cmp
fst
add
mov
cltd
mov
inc
cmpsl
xchg
decl
test
test
out
pushf
adc
inc
icebp
ljmp
lret
pop
scas
movsl
jg
xchg
fbld
push
rcll
fnstcw
push
dec
pop
jne
orl
cmpsb
inc
cmp
ret
or
dec
or
nop
sbb
ret
and
fmulp
dec
pop
fwait
hlt
jle
mov
dec
push
cmp
inc
mov
push
pop
jnp
fildl
cli
sbb
jae
filds
icebp
jg
or
movl
inc
fistpll
and
out
mov
scas
sarl
sub
inc
mov
gs
jbe
imul
arpl
mov
pusha
into
or
inc
or
jnp
shl
sub
push
push
xchg
test
test
xor
xchg
xchg
pop
cmpl
ljmp
or
push
mov
nop
hlt
loop
mov
jne
cld
fidivl
push
mov
in
add
sub
nop
ret
stc
ret
mov
movsb
mov
cmp
xlat
xchg
mov
les
dec
mov
mov
add
test
xor
icebp
dec
mov
sarb
jnp
mov
fdivp
nop
hlt
dec
imul
jle
xor
call
dec
sub
mov
mov
adc
pop
mov
daa
test
inc
xchg
nop
daa
fnstcw
mov
test
dec
fxch
hlt
loope
sbb
pushf
cmp
dec
lods
out
adc
shl
sbb
shrb
nop
sub
pop
mov
inc
xchg
inc
xor
or
popa
or
push
sbb
xchg
inc
ss
xchg
pusha
dec
xor
jecxz
mov
mov
xor
lret
cmp
pop
mov
scas
or
into
inc
imul
rorb
mov
shll
adc
xor
imul
aad
call
ficoml
adc
jae
sub
mov
daa
mov
mov
mov
nop
inc
adc
std
cs
add
sti
push
ficompl
mov
gs
or
inc
test
add
inc
in
push
roll
jns
rclb
fsubl
sub
lret
jg
pop
scas
int3
movsl
push
inc
inc
ja
xor
insb
mov
test
arpl
jge
scas
and
rcl
xchg
sub
mov
sar
mov
jp
dec
jge
xor
inc
inc
push
js
xchg
mov
int3
neg
mov
cs
adc
in
lret
mov
pop
arpl
mov
imul
pop
mov
cli
jecxz
adc
int3
ljmp
add
imul
data16
rcr
push
insb
push
popf
and
sahf
xchg
xchg
jl
cli
dec
push
push
xchg
in
mov
add
inc
pop
rol
mov
psrld
mov
xchg
adc
push
dec
jmp
mov
adc
sahf
scas
inc
mov
mov
pop
xor
divb
orb
xor
pop
pop
flds
out
sti
and
mov
cmp
add
jnp
sub
std
mov
sbb
movsb
xchg
pop
jae
adc
clc
mov
cmp
push
cmp
mov
jle
pmuludq
xchg
mov
push
sub
adc
arpl
or
stc
repz
sub
lods
int
jo
nop
push
cld
push
xor
pop
ret
fimull
in
nop
movsb
and
xchg
sbbb
int3
xchg
ret
add
sub
jae
mov
xchg
sub
mov
jnp
imul
sbb
imul
in
loope
test
popa
dec
iret
pusha
xchg
sti
test
enter
push
add
cmc
jae
jbe
add
addr16
fld
dec
mov
sub
fwait
pop
cmp
mov
aad
inc
fwait
roll
repz
stc
mov
daa
push
mov
push
stc
jno
pop
sbb
inc
mov
test
inc
scas
cmp
add
test
pop
xchg
cmp
sarl
xor
inc
leave
jbe
daa
mov
mov
bound
xchg
add
sbb
aas
inc
les
call
icebp
pop
push
or
xor
mov
jg
lds
ss
cltd
mov
iret
cs
mov
push
test
shlb
xor
decl
outsb
mov
and
jmp
and
inc
ficompl
push
sub
xchg
insl
jg
lods
cltd
jnp
subl
cmp
ljmp
fnstcw
add
popl
and
nop
pop
jmp
rcrb
dec
repnz
aaa
hlt
cmp
inc
pop
sbb
cmp
in
inc
add
scas
push
lock
jbe
inc
leave
jo
daa
dec
bnd
gs
in
jbe
fbld
orl
push
scas
nop
adc
adc
inc
repz
mov
add
pop
and
lret
cmp
stc
jnp
xchg
mov
dec
sbb
mov
xchg
mov
shll
out
push
mov
stos
pop
mov
insl
enter
cmp
ljmp
xchg
outsb
pop
xchg
mov
rol
fs
sahf
movsl
mov
ss
add
mov
fsubs
in
or
mov
xchg
fidivs
mov
inc
lret
daa
mov
adc
int3
jns
fdivrs
inc
aam
fwait
fs
bnd
bound
pop
fisttps
jp
data16
nop
test
iret
jae
rorl
push
lret
fmull
in
ret
inc
cs
scas
pop
enter
outsl
jg
mov
add
test
nop
mov
mov
aam
adc
add
adc
cmp
pop
ret
jns
jmp
inc
enter
pop
mov
mov
xchg
xchg
in
rcrb
mov
testb
pop
xchg
jp
sub
aam
mov
test
aaa
aas
in
mov
ss
mov
xor
or
fbstp
fists
mov
int3
arpl
shl
movsb
stc
lea
cmp
fsts
fdiv
or
stos
mov
cmp
hlt
xchg
cmp
push
push
xchg
lds
sub
das
and
pop
lock
roll
es
sbb
push
lods
or
mov
and
pop
adc
fisubrs
mov
sbb
mov
ret
jmp
mov
nop
pop
stos
xchg
cltd
push
fstpl
push
rclb
xor
mov
rcr
dec
in
mov
sti
adc
mov
xchg
sbb
inc
in
add
inc
cld
jg
jbe
call
fstps
bound
push
repnz
inc
mov
jmp
dec
mov
pop
adcb
fnstenv
adc
scas
stos
add
pusha
or
jge
andl
xchg
or
dec
scas
xchg
dec
mov
sub
jae
in
int
scas
idiv
fistpl
push
scas
mov
xchg
or
cmc
in
xchg
add
ljmp
dec
ret
xchg
popf
popf
add
jge
push
adc
repnz
mov
cmpsl
xchg
int3
mov
inc
or
arpl
scas
ret
test
xlat
ja
daa
xchg
out
loopne
scas
and
aaa
sbb
call
sbb
iret
pop
mov
in
xchg
pop
jg
dec
or
movsb
out
fisttpl
mov
push
ficoml
sub
inc
dec
push
push
sbb
scas
xor
bound
dec
jb
pop
mov
dec
nop
sub
sbb
ret
jp
dec
out
cmp
jle
adc
fsubr
jo
imul
mov
sbb
es
movsl
aas
dec
rcrb
cmp
dec
stos
adc
mov
lea
sbb
inc
mov
xchg
or
daa
cs
pusha
cmpb
add
lods
adcl
mov
mov
out
or
cmc
inc
inc
ja
and
aam
jb
and
or
test
fdivp
pop
mov
push
inc
pop
sbb
ds
xchg
pop
lret
in
jecxz
and
mov
loope
stos
mov
cs
mov
in
int3
sbb
xchg
xor
xchg
lds
test
aam
adc
push
hlt
lods
mov
push
lods
dec
daa
mov
aaa
scas
mov
mov
mov
xchg
and
and
stos
mov
ss
outsb
inc
fistpll
xchg
add
stc
outsl
dec
ss
cmp
test
adc
push
enter
mov
fnstenv
pop
loope
jp
mov
mov
nop
mov
stos
into
inc
sub
mov
daa
nop
dec
das
push
jo
sub
xor
mov
ret
or
iret
imul
cs
lods
add
jl
repz
mov
scas
cmp
outsl
xor
mov
jge
loope
sbb
addb
mov
xchg
and
jge
pop
nop
xor
inc
inc
icebp
push
dec
pop
outsb
sbb
in
sbb
mov
and
hlt
cmp
sub
sbb
add
imul
rcl
pop
mov
push
jnp
dec
in
stos
inc
nop
vcvtpd2ps
sub
shr
or
adc
jb
mov
xor
add
mov
mov
enter
mov
es
and
push
mov
fsubl
out
enter
je
pop
imul
lea
cmp
or
xor
mov
adc
pushf
dec
pop
test
or
push
xlat
sbb
mov
sub
inc
and
aam
js
xor
jecxz
push
pop
jmp
cmpxchg
pop
cmpl
mov
out
out
movsb
shll
cwtl
cmp
pop
adc
mov
mov
xlat
dec
popa
ficoms
pop
test
xchg
inc
xor
std
movsl
jge
clc
sub
xlat
ret
dec
iret
adc
fisubl
pop
out
and
lea
test
iret
pop
jbe
sbb
mov
lret
and
insl
rcl
addr16
pop
pop
xchg
std
jle
dec
cmp
xlat
pop
jge
data16
cmp
vmovupd
rorb
shr
xchg
ds
das
mov
xlat
sbb
leave
repz
xchg
xor
add
fimull
lds
movsb
pop
xlat
xchg
in
mov
out
xlat
loope
xor
xchg
cmpsb
dec
icebp
sbb
adc
gs
adc
out
lret
or
xchg
sbb
xlat
and
sub
fdivl
je
mov
pushf
push
cmc
sbb
arpl
jno
shr
movsb
dec
mov
popa
and
pop
sbb
frstor
adc
cmpsb
loop
es
and
sub
mov
xlat
xor
cmp
push
mov
xorl
mov
dec
leave
mov
nop
xlat
add
icebp
mov
data16
rorl
mov
xlat
pop
add
xor
pop
rorl
jge
xor
in
jp
fldt
xlat
xor
test
mov
xlat
in
push
je
into
shr
in
jbe
rcrl
pop
orb
mov
mov
mov
jb
arpl
pop
aad
adc
ljmp
ret
stc
hlt
lods
pop
or
arpl
sbb
cmp
xlat
mov
rcll
outsb
out
pop
mov
mov
mov
idivb
sti
rol
mov
lret
add
jmp
lahf
mov
mov
sar
mov
jno
lcall
out
mov
adc
cwtl
and
jb
and
mov
lock
adc
pop
pop
cltd
imul
hlt
xlat
add
sub
jo
fisttpll
imulb
xlat
or
xlat
and
pop
scas
iret
jns
fsubrl
jecxz
pop
push
mov
xlat
negb
fidivrs
rol
jne
cmp
push
rorl
push
or
into
mov
dec
aam
pop
xlat
lea
sbb
gs
push
or
inc
out
xlat
mov
rcrl
pop
xlat
jecxz
or
movsb
dec
xchg
sub
js
addr16
and
sar
pushf
dec
xchg
sub
sub
cmc
xor
clc
sbbl
mov
sub
mov
filds
mov
xchg
adc
ret
xlat
pop
cmp
jno
xlat
fs
push
or
fwait
xchg
je
inc
scas
adc
xor
insb
cmp
fldl
pop
mov
in
jo
outsb
mov
push
sub
icebp
mov
or
mov
xlat
pop
or
jo
and
in
pushl
xlat
lahf
and
xchg
rcl
inc
cmpsb
repz
cli
xlat
adc
push
movsb
dec
lods
and
adc
jle
fldenv
sarl
push
lret
dec
scas
sbb
xchg
fwait
rcl
jns
cwtl
repnz
mov
lahf
xchg
pop
xchg
sbb
xlat
jno
jne
bound
cmp
adc
xlat
in
mov
inc
adc
mov
dec
xlat
add
sub
int3
mov
xlat
enter
lcall
filds
dec
clc
imul
mov
cmpl
stc
data16
mov
mov
jnp
and
or
lahf
lods
lds
mov
xlat
jnp
in
xchg
mov
mov
sub
mov
idivl
aaa
cs
dec
xor
out
shr
cli
inc
mov
mov
jns
pop
int
cld
in
es
test
jo,pt
pop
push
dec
lods
mov
iret
or
cmp
jecxz
dec
mov
int3
inc
push
jp
aas
ret
mov
nop
jecxz
insl
addr16
popf
fs
lea
mov
xlat
adc
ja
daa
jb
xlat
scas
popa
ffreep
stc
mov
xlat
lret
std
arpl
out
mov
movsb
test
mov
sti
cmp
mov
test
mov
xlat
gs
or
xlat
and
jno
jecxz
iret
ja
sbb
sti
out
xchg
scas
xchg
adc
fidivrs
outsl
sti
xlat
dec
lock
mov
aam
notl
scas
loopne
aad
shr
lock
lea
pop
dec
ss
scas
push
cmp
jo
mov
subl
adc
mov
in
xchg
sub
sub
mulb
mov
jnp
xchg
mov
xlat
dec
out
imul
push
push
sbb
mov
scas
int3
jb
push
jge
xlat
lahf
push
add
sti
mov
xchg
xchg
mov
xor
pop
and
pop
mov
test
cli
xlat
xor
lock
fstps
pop
rorb
mov
cmp
mov
sub
bound
pop
aas
or
xor
rorb
es
int
aad
inc
das
dec
xlat
pop
insb
daa
in
pop
jb
adc
sbb
cmp
repz
cld
mov
mov
xlat
test
inc
mov
cmpsl
loope
stc
mov
xchg
sub
inc
lahf
test
ja
and
xlat
gs
icebp
add
in
xchg
lock
cmpsl
adc
lods
xlat
jle
sub
jnp
in
stos
jne
xchg
popl
cmp
and
sbb
lods
mov
inc
push
shll
out
test
pop
rorl
loopne
or
sbb
mov
sub
pop
rol
mov
xlat
pop
loope
or
mov
mov
cmp
clc
xchg
mov
divl
cmpsl
rcrl
inc
push
mov
or
jno
ljmp
dec
sbb
cwtl
adc
fstps
nop
negl
lea
dec
mov
fimull
fsubrl
xlat
sbb
mov
loop
xchg
mov
lret
in
lret
shlb
das
mov
push
push
dec
mov
xor
movsl
outsl
cmpsl
jbe
cmp
lahf
bound
sbb
mov
inc
add
mov
push
sbb
iret
leave
inc
mov
mov
xlat
adcb
rcl
bound
push
cmp
cmc
out
ret
in
jo
and
adc
mov
scas
xrelease
adc
movsb
mov
sub
mov
add
stos
xlat
ss
in
out
pop
xchg
out
sbb
push
fistl
lahf
sbb
or
stc
sbb
shlb
mov
dec
add
inc
in
xlat
testl
and
mov
pop
fldt
adc
push
sqrtps
outsl
mov
popa
mov
or
jle
dec
add
inc
data16
jns
sbb
jne
jp
xlat
out
loope
in
push
notb
push
mov
ljmp
loope
std
out
inc
lcall
pop
inc
xlat
cld
jo
lods
out
inc
out
and
in
mov
push
add
ja
adc
ljmp
cwtl
cld
jmp
cmpsb
dec
cmpsb
lahf
lea
push
xchg
push
mov
fcmovnbe
dec
imul
outsl
sahf
dec
xor
mov
inc
and
movsb
push
jge
loope
adc
in
dec
fsubl
add
inc
cld
pop
cmp
nop
adc
xor
loopne
push
ja
add
cmpsl
and
loope
enter
icebp
ret
roll
inc
sbb
push
mov
sbb
ljmp
leave
int
or
test
lret
and
lods
or
and
push
in
cmp
push
xchg
arpl
repz
mov
enter
mov
push
mov
cli
adc
jg
xor
or
xchg
sarb
jbe
loopne
pop
push
out
testb
sbb
mov
mov
push
mov
sbb
ljmp
mov
and
xchg
cmc
rcrb
repnz
adc
ljmp
fs
mov
push
mov
orl
push
lret
jo
jbe
mov
xchg
mov
lahf
nop
add
and
mov
fildll
and
xchg
mulb
subl
and
adcb
andb
out
jecxz
sarb
sbb
lret
stos
fwait
xchg
add
jne
xor
out
push
sub
jg
xchg
xlat
cmc
cld
pop
ljmp
mov
loopne
pop
pop
fcoml
nop
gs
shrl
mov
inc
aad
fpatan
gs
movsb
cmp
mov
and
loope
inc
scas
aad
mov
movsb
outsb
outsl
xchg
lcall
mov
mov
jmp
jg
and
sbb
xchg
inc
jge
icebp
std
sbb
into
jmp
sub
sahf
fbstp
xchg
mov
shrl
lahf
psraw
test
jecxz
mov
loope
push
xchg
cltd
movsl
popl
inc
inc
add
mov
sbb
mov
jno
mov
loope
in
das
daa
inc
movsb
aaa
nop
subl
inc
bound
mov
movsb
stc
sahf
cmp
pop
mov
pop
lods
xorb
nop
jecxz
lock
in
pop
xchg
sub
jecxz
xchg
clc
loopne
mov
repz
cmp
shlb
faddl
das
pop
test
mov
xor
mov
andl
sub
push
out
adc
dec
mov
stos
scas
ret
mov
dec
iret
mov
jg
push
lock
lods
repnz
sub
dec
jae
das
mov
loopne
inc
push
test
xchg
rcll
inc
push
out
mov
imul
mov
jnp
or
stos
ret
fisttps
inc
jnp
cmp
pusha
rcl
arpl
addl
gs
cmp
lret
xchg
bound
mov
push
int
xchg
cmp
or
xlat
inc
fs
jno
movsl
ss
dec
inc
jbe
sti
xchg
mov
lret
out
fs
scas
xorl
pop
and
dec
dec
addl
adcl
cwtl
add
or
cmp
cwtl
fisttps
sub
ljmp
aas
push
sub
scas
push
fistl
dec
jl
loope
ja
sub
cmp
or
inc
movsl
push
aas
or
or
adc
sbb
dec
add
inc
xor
lahf
push
inc
ret
nop
adc
sub
mov
inc
scas
xchg
xchg
jb
add
cmp
pop
movzwl
jae
stos
rcll
adc
lds
jbe
pushl
loope
jb
sub
cmpsl
fistpll
mov
inc
cmp
repnz
pop
jge
and
rcrl
mov
jns
inc
cld
jae
jo
dec
mov
dec
test
mov
testl
mov
and
inc
mov
cmp
xchg
cmc
pushf
jl
les
push
bound
jbe
xor
mov
ror
xchg
jge
xchg
push
adc
xor
divb
sbb
mov
fwait
inc
mov
les
cmpsl
xchg
fdivrs
fidivrs
shll
xor
in
jmp
mov
fnstenv
push
and
cmp
sub
es
pop
insl
mov
sbb
or
daa
inc
push
lcall
xchg
jo
call
jb
cmp
pop
fwait
pop
sub
cmc
adc
mov
inc
jo
jno
loop
scas
and
pop
dec
add
jno
gs
mov
jns
xchg
es
and
mov
out
ljmp
lret
inc
dec
mov
mov
dec
lods
add
ret
outsb
mull
inc
push
inc
mov
dec
cli
movl
add
nop
adc
rcrb
cmp
inc
xchg
mov
scas
imul
cmp
mov
jae
mov
pop
ss
lahf
aaa
mov
sub
bound
pop
push
je
aad
int
add
pop
add
or
mov
aas
mov
mov
lods
mov
push
jmp
sbb
sbbl
xchg
popf
lea
adc
add
mov
cmp
inc
jnp
mov
xchg
addl
cli
mov
sbb
mov
and
nop
fnstenv
dec
enter
push
push
pushf
into
pop
sahf
imul
pop
ljmp
pop
and
push
jecxz
xor
mov
stos
add
testl
sahf
cmc
mov
pop
mov
jge
mov
ret
adc
cmc
xchg
xchg
arpl
xchg
mov
adc
test
inc
fcmovb
mov
mov
out
shrb
gs
arpl
ja
je
ret
sub
cmpl
sbb
xlat
insb
push
pop
inc
jl
fsub
negb
aas
xlat
cmp
xlat
jmp
insb
cmpsb
call
sarb
test
arpl
je
lods
iret
push
ret
icebp
jns
nop
adc
ficoms
or
sbb
xor
sbb
mov
xor
out
mov
lahf
and
je
mov
enter
jg
rcr
adc
outsb
add
mov
inc
int
ljmp
push
xchg
fst
out
daa
xchg
sub
mov
cmp
testb
pop
lret
pop
pop
jg
jle
adcl
stc
dec
aad
jno
cs
int3
fwait
and
sbb
cmpb
aas
inc
mov
icebp
inc
xor
movsl
test
xchg
mov
movsb
js
push
pop
cmp
rclb
and
decb
mov
inc
sbb
sub
aad
mov
mov
push
xor
in
test
mov
mov
inc
mov
test
jne
iret
sub
rcrb
enter
lods
sbb
sbb
jle
dec
scas
push
jg
mov
fldenv
lods
in
sbb
clc
pop
jb
sahf
lea
out
outsb
pop
push
cmp
mov
mov
mov
add
add
ret
xchg
mov
daa
insl
test
inc
cmp
mov
lahf
push
js
pusha
shrl
data16
mov
mov
push
shr
outsb
sahf
mov
ret
sub
out
mov
aam
sbb
sbb
jp
mov
jbe
mov
adc
rol
cmp
repz
cmc
pop
call
inc
inc
pusha
loopne
scas
xchg
sub
and
scas
lret
gs
fsubl
aad
mov
pop
ljmp
mov
add
or
mov
mov
aad
aas
dec
fsubr
or
cmp
repnz
insb
push
movsb
jbe
sbb
add
stos
aaa
sbb
int3
mov
pop
xchg
dec
mov
xchg
cltd
lret
jbe
adc
add
jo
test
jp
adc
add
xchg
push
sti
testl
mov
mov
fistl
sbb
add
mov
add
cmp
lahf
dec
jg
movsb
fwait
outsb
xorl
mov
jl
sbb
sub
pop
pop
sub
data16
pop
inc
jecxz
xchg
and
imul
ds
movsb
aas
ret
cmc
push
fcmovne
push
aas
movsb
add
and
aad
jmp
jecxz
sub
or
mov
test
daa
push
pusha
jno
jne
nop
hlt
adc
aas
scas
bound
mov
mov
test
mov
mov
in
push
xor
adc
dec
adc
lcall
test
sub
fs
xchg
jno
mov
dec
xor
xchg
lahf
shr
adc
mov
in
jnp
rcr
jbe
push
repnz
jge
lea
filds
call
jg
cli
int3
scas
arpl
cmp
daa
loopne
jp
jae
sbb
imul
sbb
rcll
or
movsl
or
nop
fistps
ljmp
stc
daa
xlat
jmp
mov
xchg
cltd
testb
ds
mov
sarl
push
fdivrs
std
jb
jo
mov
aad
mov
lahf
mov
bound
push
aaa
jge
mov
inc
pop
pusha
shrb
scas
in
ja
xchg
daa
mov
pop
xor
add
adc
imulb
and
lret
pushf
daa
ja
push
fwait
jno
sbb
negl
mov
or
mov
jne
fcoml
mov
add
xchg
int3
jb
into
test
pop
mov
sbb
test
sbb
adc
lahf
nop
cs
hlt
out
xor
orb
jl
add
decb
mov
repnz
sbb
sbb
inc
scas
and
push
and
mov
adc
xchg
ret
int
add
jnp
cs
inc
lret
adc
cmpsl
fmull
push
cmpsb
mov
scas
pusha
xchg
popf
ret
fiadds
js
mov
negb
stc
imul
scas
scas
push
and
int
imul
aam
cmc
pop
mov
aad
xchg
mov
jbe
mov
fsubl
out
ja
dec
cmc
lods
xchg
push
mov
mov
adc
inc
sub
notb
stc
ljmp
pop
xorl
mov
pop
stc
dec
inc
push
lea
mov
arpl
aaa
insb
pop
jae
out
jns
aas
rolb
std
xchg
sbb
das
push
and
pop
movaps
stos
lods
fdivrl
jbe
xor
add
cld
scas
mov
push
rcrb
sub
jge
push
jae
mov
pop
repnz
push
bound
push
bound
mov
fldcw
inc
mov
aam
popa
popf
mull
aad
sub
nop
xor
out
in
xor
sbb
jmp
push
push
push
pop
or
jge
mov
popa
fiadds
sti
jmp
pop
xchg
cmp
xchg
stos
and
bound
pop
cmp
push
ret
je
pop
into
mov
cmp
or
jg
sbb
shlb
inc
mov
push
popf
pop
adcl
mov
push
inc
cmp
adc
jmp
push
rolb
push
int3
hlt
inc
dec
mov
mov
cmpsl
xchg
jne
sbb
jge
daa
pop
insb
test
dec
dec
aad
adc
cmp
jg
loope
iret
stc
push
mov
mov
pop
aad
out
mov
mov
mov
dec
aad
and
mov
mov
pop
cmpsl
ss
push
out
enter
lahf
push
push
inc
pop
cmp
loope
sub
nop
pop
roll
jmp
movsl
iret
loope
scas
in
in
sbb
ss
inc
mov
rorb
sahf
insl
cmp
mov
idivb
shll
data16
popa
cmp
stc
cwtl
cld
push
inc
and
clc
cmpsl
iret
in
notl
xchg
les
loopne
sub
sub
or
xor
sbb
cli
notb
dec
pop
pop
cmpsb
xor
jae,pt
test
and
daa
out
jno
pop
jmp
pop
sub
shrl
lods
pop
ljmp
cmc
ret
or
mov
adc
int3
sbb
aam
cmpsl
sbb
popa
dec
cld
pusha
jge
rol
insl
in
xchg
cltd
mov
outsl
mov
lock
sahf
leave
outsb
gs
aam
out
test
sbb
loop
stos
sbb
xchg
xchg
mov
mov
nop
nop
jp
mov
repz
jo
inc
int
scas
sub
movsl
inc
or
das
jbe
push
mov
nop
pop
jns
xlat
or
enter
xlat
in
cmp
cltd
sbbl
dec
lods
mov
inc
out
sarl
rcll
push
stos
inc
cld
xor
imul
fildll
xlat
and
add
xchg
mov
ds
call
jbe
xlat
into
pop
inc
stos
shrb
in
xlat
jae
xorl
in
push
in
lcall
and
fisttpll
jl
sbb
loop
mov
xlat
jo
scas
push
ja
and
mov
push
adc
xlat
daa
sub
decl
or
sbb
and
jno
mov
test
add
mov
push
inc
imul
xor
es
les
or
pop
dec
jb
fdivrs
xchg
sbb
lret
mov
mov
push
test
testb
mov
sub
pop
jo
rclb
shrb
fdivr
out
aad
add
lahf
jge
xor
mov
push
sub
xor
arpl
das
cmc
xlat
xchg
xor
cmp
scas
lcall
gs
js
dec
adc
sbb
popf
dec
dec
fdivl
ret
imul
mov
cltd
inc
and
popl
add
aad
adc
inc
mov
mov
jnp
mov
pop
out
and
mov
cmp
aaa
and
test
xchg
inc
hlt
mov
jnp
sahf
test
mov
mov
push
xchg
add
or
pop
mov
call
mov
fnsave
and
jb
cmp
xchg
out
fldcw
ret
jbe
pusha
nop
mov
popl
out
aam
fdivs
sarl
jge
bound
sub
test
mov
out
xor
call
pushf
notl
sar
push
fidivrl
js
out
addb
jnp
sub
sbb
jg
sub
fsubrl
in
jne
ljmp
pop
mov
push
movsb
pop
jmp
lock
mov
pop
xchg
fdivrs
pop
test
inc
jecxz
sub
call
adc
data16
xchg
or
xor
or
out
fmul
shll
in
inc
inc
mov
cmp
inc
dec
cmp
mov
pop
add
sbb
repnz
push
in
orl
adc
or
push
mov
jge
xchg
sbb
jecxz
inc
rcl
jbe
inc
xor
mov
xchg
xor
add
into
loope
enter
dec
mov
movsb
outsb
sbb
mov
inc
lret
movl
xor
test
and
fmull
push
cwtl
xor
cmpsl
inc
iret
loop
sbb
cmp
notl
xor
or
push
jnp
out
add
orb
data16
lock
es
xor
jbe
jae
push
adc
mov
repnz
mov
jne
pusha
sub
mov
loope
xlat
xchg
jae
mov
pusha
jbe
cmc
xchg
outsb
and
adc
inc
or
inc
inc
add
pop
loop
sbb
testl
insb
test
nop
mov
jmp
sarl
mov
xlat
xchg
int
int3
cmc
nop
sub
cltd
mov
xchg
aam
mov
add
nop
cwtl
lods
mov
xor
jge
movsl
inc
sbb
fisttpll
ja
add
inc
mov
das
jbe
mov
stos
sub
scas
add
jmp
jnp
fsubs
xchg
cmp
or
inc
and
nop
in
nop
cmpsb
mov
mov
dec
cmp
stc
out
xchg
mov
pusha
mov
mov
push
mov
lock
fstl
icebp
stos
or
jle
pop
xor
push
roll
lods
jp
mov
in
pop
mov
mov
push
pop
popa
pop
lea
sbb
jne
lds
and
int
sbb
lods
pop
nop
ret
xor
push
mov
and
sbb
jg
dec
sar
add
aad
fsubl
ret
iret
cmp
jmp
cwtl
jnp
xor
lea
push
mov
inc
rcll
push
xchg
fs
in
popa
aad
aam
push
cmp
sbb
dec
adc
dec
adc
xor
lahf
push
add
inc
push
lods
xchg
jbe
cmpsl
push
daa
outsl
add
push
movsl
jb
dec
lods
aaa
pop
scas
outsb
insl
inc
xchg
out
adc
ja
pop
jbe
ja
mov
xor
lret
and
mov
lods
mov
mov
jecxz
call
pop
mov
push
pop
sbb
stos
pop
sahf
mov
loope
add
push
iret
mov
xor
sub
fildl
sbb
cwtl
jmp
xor
test
adc
loopne
lret
push
iret
inc
sub
bound
or
call
xchg
push
or
mov
scas
daa
push
adc
test
in
mov
sub
jl
jecxz
aad
rcrb
int
xor
sbb
add
nop
mov
stos
mov
push
cmp
sarb
lcall
pop
and
push
gs
dec
daa
in
jno
pop
fdiv
ret
jmp
adc
adc
sbb
shll
int
bound
dec
jbe
adc
addr16
outsb
imul
pop
add
popf
fiaddl
jne
scas
out
pop
and
add
cmc
gs
sub
jne
inc
pop
nop
or
adc
and
popa
lds
iret
mov
in
test
jmp
negl
inc
ja
or
sti
pop
fisttpll
jbe
and
inc
mov
rcrl
test
cmp
xlat
popl
fwait
add
xor
xlat
int
dec
mov
arpl
mov
cmpsb
cmp
lret
test
add
stos
add
iret
jp
xchg
add
repz
shlb
mov
mul
push
add
or
out
outsl
mov
cmpsl
cmp
ficomps
mov
out
pop
idivb
arpl
sub
pop
inc
fimull
xlat
cmpsb
dec
fcomps
out
gs
movsb
or
cmpsl
stc
xlat
bound
xchg
inc
out
ret
inc
aas
xlat
xchg
cmp
push
jmp
pushf
jne
dec
mov
in
dec
aaa
xor
or
push
pop
sbb
xlat
xor
adc
lods
adc
je
lea
jl
sbb
add
inc
sahf
ja
loope
in
or
xlat
fistl
jp
lcall
pusha
aad
inc
sub
xlat
jbe
and
xlat
push
mov
push
int3
xlat
negb
repz
xlat
sbb
cmpsb
out
or
out
mov
bound
outsl
push
insl
loop
test
rorl
inc
int3
inc
hlt
sbb
dec
js
mov
imul
mov
push
jmp
xlat
jmp
rclb
adc
mov
sarl
xlat
stos
push
jge
pop
add
testl
mov
sbb
out
stc
mov
push
inc
push
jb
lret
xlat
sarl
insb
jle
add
xlat
scas
push
pop
xchg
mov
pop
dec
jmp
iret
push
std
iret
xor
or
clc
mov
cltd
je
mov
jmp
loop
out
push
and
out
dec
xor
aaa
cmp
rcrb
pop
leave
xlat
adc
xlat
inc
mov
sub
scas
test
adc
ret
xlat
mov
mov
and
sbb
pusha
out
jae
or
iret
mov
jno
sar
push
push
lea
push
adc
jns
rcr
loope
iret
mov
wrmsr
mov
popf
scas
adc
inc
je
adc
lea
in
inc
rorl
arpl
orb
push
dec
les
push
iret
xchg
sub
mov
adc
lahf
xor
fiadds
lds
add
jbe
jbe
xlat
aam
mov
jno
xlat
es
dec
scas
pop
fadds
jge
push
dec
pop
das
xlat
pop
loope
push
push
xlat
imulb
rolb
fisubl
mov
or
xlat
inc
ja
int3
and
test
jo
jp
inc
nop
cld
cli
and
and
push
xlat
stc
push
sarb
xlat
xor
lret
addr16
cltd
ljmp
sbb
push
cmp
cmp
xlat
mov
dec
mov
xor
add
dec
or
insl
iret
out
cmp
subb
shlb
and
adc
aas
cltd
push
enter
cli
xlat
sub
movsb
test
test
and
andl
cmc
inc
fwait
xlat
insb
aad
pop
sti
dec
jecxz
jge
cmc
add
out
xchg
mov
dec
hlt
jg
insl
adc
xlat
lods
negl
je
pop
sti
stos
mov
sarl
cltd
stos
mov
int
push
ret
dec
sar
insb
jle
rcll
call
sub
xlat
sahf
xchg
les
add
xlat
pop
adc
or
fs
xlat
sbb
lea
enter
insb
pop
and
sbb
dec
xlat
mov
jg
adc
fwait
imull
jno
pop
pop
nop
mov
inc
enter
shll
pop
stos
xlat
cli
mov
loope
xlat
mov
cmp
sbb
jnp
xlat
pop
pop
scas
cmpsl
or
fsubs
ficoms
mov
push
loop
pop
inc
jno
lock
add
movsl
insb
cmp
xlat
insl
in
in
dec
ds
xlat
mov
stc
int
rclb
pmaxub
fs
arpl
loope
loopne
xlat
sarl
mov
in
add
imul
gs
sbb
and
movl
xor
xlat
mov
cs
js
jne
inc
ss
fs
cmpsb
or
fs
iret
mov
mov
xlat
xor
lock
ud2
pushf
push
rcrb
pop
sbb
sti
out
rcll
adc
cmpsl
mov
push
and
mov
cmp
iret
test
jle
push
lret
add
mov
cmp
movsl
adc
dec
cmc
shlb
mov
aad
or
xchg
inc
or
in
pop
scas
jl
cmpsb
call
jge
xlat
pop
out
xchg
mov
lret
or
cwtl
mov
xlat
outsl
sahf
inc
lret
rorl
insb
bound
xchg
inc
fcmovu
jl
stos
aad
sbbb
decb
mov
mov
push
xor
pop
out
sbb
shll
or
pop
loope
cmp
mov
jae
pushf
scas
xor
xlat
test
xchg
pop
push
lea
test
xlat
mov
lcall
aam
and
xlat
mov
js
jl
fwait
subl
add
sub
sbb
cmpsl
jp
ret
push
les
cltd
sub
icebp
cli
iret
mov
ficompl
mov
sbb
cmp
jo
cmp
imul
cld
dec
loope
scas
out
xchg
sbb
inc
and
loop
sahf
bound
das
not
push
cwtl
outsl
push
sbbl
mov
pop
dec
xlat
je
cmpsb
pop
inc
mov
jecxz
jbe
in
stos
pushf
jl
xchg
jo
popa
xlat
push
xchg
sbb
fstpl
xlat
jnp
mov
xchg
or
push
ljmp
push
test
loopne
add
mov
jecxz
aaa
daa
loop
and
insb
hlt
fnstcw
inc
push
ret
sbb
or
ss
add
xlat
jge
inc
popa
scas
xor
cmp
outsb
xor
imulb
nop
pop
xchg
or
push
sub
and
stc
div
into
xlat
loope
and
lea
mov
add
push
aam
sub
ja
and
pop
shl
leave
test
or
sarl
cwtl
push
pusha
loop
xlat
int
mov
rcl
dec
mov
shl
cmp
decb
shll
adc
sbb
pop
adc
int
xlat
dec
and
icebp
mov
sahf
fiaddl
cmpsb
jno
pop
xchg
mov
mov
mov
sti
data16
jecxz
in
ficoms
or
shll
cmc
cwtl
neg
mov
stos
jae
std
out
idivl
xlat
xor
shrb
mov
xlat
insl
test
dec
xchg
lahf
mov
pop
sarl
pop
dec
leave
call
sti
in
xlat
loop
ss
mov
sub
ret
aas
bound
cmp
frstor
xlat
xchg
cli
clc
mov
int3
mov
pop
lods
xor
outsb
rclb
sub
xchg
cmpsb
pop
push
sbb
test
adc
and
and
xlat
mov
jno
sub
jge
pusha
xchg
outsb
adc
mov
cmpb
repnz
pop
jge
add
rorl
call
jb
jecxz
inc
adc
cmp
xlat
outsl
repz
mov
push
jg
sarl
cmpl
sbb
dec
jl
jbe
push
in
in
test
roll
xor
pop
xlat
hlt
and
adc
ret
outsb
iret
ficompl
shrl
mov
xlat
push
cmp
sbb
pop
mov
pusha
dec
emms
movsl
xchg
test
push
push
ljmp
cmpsb
imul
cmc
sbb
push
setge
inc
xchg
movb
icebp
imul
adc
cwtl
hlt
gs
cld
adc
inc
sahf
xor
pop
xchg
push
xlat
mov
lret
add
sbb
or
in
bound
and
daa
test
fwait
push
mov
pusha
idivl
mov
adc
sub
xchg
dec
std
les
popf
push
lods
push
out
adc
fcoml
dec
push
xchg
mov
and
and
xor
cld
stc
lret
in
jg
and
lods
pop
setg
fcmovnb
fisubl
pop
icebp
aaa
and
repz
fucom
test
xorb
stc
nop
and
xchg
adc
jb
mov
jge
stc
jno
nop
pop
lods
bound
push
dec
lret
fcmovnbe
jecxz
cmp
mov
mov
icebp
pop
out
sbb
and
in
adc
out
out
mov
outsb
lret
sub
int3
rclb
ja
popf
mov
stc
lcall
xor
pop
xchg
mov
sbb
jnp
push
loopne
and
ljmp
fldt
lcall
js
pop
ljmp
aas
mulb
nop
imul
es
ja
dec
ret
inc
movsb
sbb
mov
sbb
or
mov
nop
shll
inc
add
dec
cmp
cmp
aad
aas
push
adc
jnp
imul
test
pop
push
out
lea
fcom
sbb
mov
sbb
inc
xchg
ror
pop
or
and
je
ss
int3
ja
adc
fcmove
xchg
push
loop
das
fs
shlb
rcr
pop
mov
ja
mov
pop
arpl
mov
sub
leave
jg
nop
and
cmc
lock
out
cmpsl
xchg
lods
mov
push
or
mov
nop
out
sahf
pop
or
test
inc
push
pop
push
or
push
nop
mov
out
xchg
pop
shll
int
xchg
add
cmpsb
inc
jmp
call
mov
nop
lcall
push
stos
push
cmp
imull
call
push
jmp
mov
rorb
lret
ds
pushf
mov
in
xchg
repz
popa
pop
jge
mov
shll
fsubr
jmp
inc
mov
aam
and
popa
jmp
repnz
nop
addr16
aam
pop
jmp
mov
xor
dec
and
movsl
xlat
imul
andl
or
clc
shrl
xor
fcompl
subps
adc
pop
mov
js
xchg
aas
andb
jmp
jo
push
pop
mov
jmp
cmpsl
mov
mov
xchg
dec
lahf
push
in
xchg
and
pop
sub
ret
xchg
adcl
mov
add
mov
jp
mov
mov
adcb
or
inc
mov
add
and
cli
mov
fs
sub
pop
testb
xchg
orb
mov
push
sti
pop
das
ror
repnz
add
xor
xchg
mov
das
repnz
push
mov
nop
mov
add
mov
add
outsb
pop
push
adc
and
xor
dec
sbb
lds
shll
nop
push
in
mov
mov
fistps
xchg
mov
mov
decl
adc
mov
popf
pushl
aam
lods
inc
jns
pop
pop
mov
lock
pop
or
mov
mov
flds
ja
jno
pop
loope
mov
scas
add
fnstenv
pop
cwtl
mov
mov
xchg
addr16
jmp
inc
adc
pop
sbb
enter
fwait
mov
pop
mov
sub
or
xor
cmc
and
nop
jnp
dec
dec
ja
mov
xor
push
and
lods
pop
fwait
repz
sub
or
fchs
push
in
jb
daa
push
fcoml
icebp
aas
in
subb
aaa
lcall
push
push
inc
and
sbb
cmpsl
stos
bound
iret
pusha
jle
nop
insb
into
mov
mov
sub
andl
lods
call
rcrl
aam
push
xchg
cmc
ljmp
adc
arpl
cmp
cmp
sub
push
pop
mov
test
pop
pop
repnz
loopne
mov
das
mov
and
lret
pop
pop
nop
and
test
movsl
sub
inc
nop
repz
mov
xchg
cwtl
daa
test
nop
dec
xorl
jg
cmc
aad
fistps
mov
loop
testl
movsl
adc
mov
push
add
lods
mov
push
faddl
fnsave
arpl
add
jg
jle
adc
iret
inc
not
into
jbe
inc
rorl
or
xchg
inc
mov
int
sbb
popf
xchg
dec
loop
rcl
xchg
lret
cmpsl
sahf
std
nop
fdivrs
andl
xchg
mov
push
aad
movsl
push
mov
mov
cmp
idivb
nop
xchg
dec
imul
push
mov
aas
xor
lock
xorb
or
cmp
aaa
mov
hlt
sahf
mov
in
push
adc
xchg
cmp
aas
aaa
outsb
xchg
add
mov
push
mov
aam
push
push
dec
adc
and
stc
jne
sub
adc
and
add
dec
mov
jb
orl
mov
popa
movsl
pusha
pop
sbb
movb
sub
je
fwait
pop
and
inc
mov
jl
pop
loope
mov
andl
scas
sub
cltd
push
adc
ljmp
daa
and
mov
rcrl
push
movsl
sub
fdivrl
jns
adc
cmc
jle
or
mov
imul
mov
cmp
xchg
out
dec
orl
xchg
cld
adc
cmp
xchg
out
call
adc
cmc
mov
aam
std
xchg
xor
nop
or
bound
test
movsb
jmp
insl
sarl
ja
cmp
mov
in
nop
stos
or
push
mov
aaa
xchg
ret
jmp
out
pop
or
pusha
sub
xchg
aas
jno
sbb
filds
test
std
ja
push
mov
pop
jbe
pop
aas
sbb
inc
rclb
sbb
aam
adc
hlt
clc
pop
fsubrs
aam
js
call
mov
daa
add
faddl
sub
pop
adc
mov
imul
andb
adc
xchg
jl
xor
ret
cmp
mov
test
jl
leave
stc
mov
and
jle
out
mov
stos
sub
gs
ret
xchg
push
pop
dec
mov
pop
mov
ficompl
mov
pop
incb
and
out
mov
jb
out
cmp
das
xor
in
aam
in
sbb
aad
inc
mov
mov
mov
lea
adc
cmp
adc
pop
xlat
lret
fldenv
sub
cli
mov
cmpsb
emms
out
xchg
xlat
popf
int3
xchg
dec
inc
cmc
or
fcompl
rolb
incb
addr16
imul
xor
es
cwtl
mov
inc
adc
pop
push
leave
insb
pop
mov
sarl
out
or
xlat
cmp
out
push
lea
sub
lahf
push
xchg
inc
pop
sub
push
mov
xlat
add
mov
outsl
cmc
enter
jg
stc
test
mov
and
xchg
jbe
scas
out
xlat
daa
psubsw
jno
bound
xchg
fchs
push
mov
jbe
aas
movsl
lock
push
sbbb
pop
xlat
xchg
ja
lret
subl
cltd
xchg
loope
push
pop
in
pop
sar
or
or
adc
xchg
int3
leave
fwait
andb
adcb
xlat
xchg
sbb
shrb
mov
lahf
inc
out
mov
roll
xlat
xor
je
cmp
push
lods
inc
in
and
das
roll
cli
xlat
jl
ljmp
popf
sahf
test
mov
sbb
and
addr16
movsl
cmp
jp
cmpb
into
mov
test
lcall
xlat
and
inc
mov
push
cs
iret
scas
inc
cltd
jae
pop
jle
sub
out
fistps
lds
lods
rcl
in
xchg
lea
stc
dec
xor
icebp
jnp
out
adc
iret
out
xchg
lret
movsl
rcll
pushl
divb
xlat
jge
push
sarb
xor
inc
jo
cmp
xlat
adc
into
std
das
jmp
adc
sti
ss
lcall
mov
lock
mov
cli
lods
mov
sbb
dec
and
lods
push
pusha
cs
mov
arpl
push
test
mov
aaa
mov
roll
mov
insb
or
fcmovne
lret
ss
sti
sbb
sarb
nop
stc
inc
fbstp
xor
xchg
xchg
fldt
inc
fimuls
bound
sub
loope
fwait
add
adc
aad
push
xlat
aas
mov
gs
ljmp
xor
scas
repnz
xchg
pop
push
jne
jns
iret
adc
lods
mov
ljmp
mull
or
pop
xor
fwait
cmc
addr16
insb
lret
shlb
out
add
xchg
xchg
xchg
inc
mov
in
loopne
jbe
jmp
push
fxch
and
inc
out
inc
mov
sub
push
cld
nop
div
xor
pop
call
xor
push
dec
scas
xchg
in
sub
xchg
xchg
jbe
xor
aad
cmp
loope
add
or
iret
jg
sub
push
hlt
cmp
decl
daa
dec
or
add
xchg
nop
mov
pop
leave
jnp
mov
aaa
repnz
xor
add
jbe
jb
ja
out
notb
sbb
push
push
inc
in
negl
or
mov
dec
cli
mov
push
aam
sahf
fisubs
mov
pop
mov
jns
aam
or
adc
call
jmp
push
stc
out
cltd
in
or
jb
dec
cmpsb
addr16
nop
daa
add
xchg
xlat
pop
sbb
loope
jae
jno
pop
jae
xor
in
sbb
xor
or
jmp
push
push
cmpl
js
adc
inc
xor
out
inc
sbb
loope
movsl
leave
push
inc
aas
scas
cmp
cmpsb
jne
sar
stc
orl
sub
add
pop
xchg
lds
dec
nop
add
add
sbb
or
pop
xchg
std
stc
scas
nop
sbb
adc
xchg
mov
xor
xor
mov
xchg
xorl
test
push
aas
jb
mov
inc
fcomps
mov
inc
ret
adcl
int
xchg
ljmp
jbe
mov
xchg
xor
xchg
inc
nop
scas
mov
aas
adc
adc
ljmp
mov
push
bound
fidivrl
aad
lods
daa
dec
clc
mov
adc
movl
sub
sub
jmp
mov
pop
ret
gs
stos
jmp
std
inc
testl
and
lea
mov
jle
loope
sbb
xchg
dec
in
pop
je
mov
pushl
push
mov
add
pop
inc
pop
sbb
int
lea
jns
das
xchg
sbb
mov
mov
out
fmull
cmp
out
lock
sbb
addr16
decb
mov
inc
fisttps
iret
xchg
dec
xchg
pop
icebp
push
sbb
xlat
jecxz
fldl2t
nop
push
sub
ss
push
push
ds
xchg
xor
adc
push
mov
sti
cmp
or
pop
or
push
mov
inc
xor
and
and
sub
shlb
mov
js
adc
inc
sub
icebp
loopne
pop
flds
movsl
xchg
jne
mov
xchg
inc
scas
inc
pushf
xchg
cmp
pop
or
pushw
rorl
test
add
neg
hlt
repnz
fsubs
out
jbe
loope
jbe
inc
pop
stc
pop
sbb
cli
jg
aaa
or
aas
inc
pop
fsub
mov
jb
cmp
enter
rorl
addr16
mov
mov
stos
mov
add
push
std
ret
lret
ret
into
xor
int3
and
notl
mov
mov
repnz
nop
aas
dec
rcll
xchg
enter
xlat
sub
scas
stos
mov
outsb
bound
xor
in
cld
scas
or
xlat
cmp
and
lcall
mov
scas
jae
inc
mov
xchg
or
dec
and
jne
xchg
mov
sub
inc
mov
inc
rclb
lret
or
aam
adc
mov
rol
mov
add
fimull
dec
test
lods
mov
sbb
test
dec
pop
in
or
inc
cmp
and
xchg
or
inc
fistl
cmp
daa
dec
jnp
xchg
fimull
ja
cld
mov
push
cltd
xlat
dec
pop
xor
js
push
pop
jnp
pop
jge
clc
mov
notb
loop
roll
js
dec
sbbb
test
xchg
dec
cli
aaa
jbe
push
test
jns
imul
mov
xchg
pushf
sub
adc
popa
fsubl
jmp
out
ret
jb
imul
rorb
sbb
iret
or
fists
clc
sub
jge
mov
cmpb
loopne
cmpsb
call
daa
iret
repnz
addr16
pop
aaa
pop
rorb
jmp
ds
pop
fcmovnbe
xor
add
movsb
iret
jle
data16
and
pop
mov
push
addr16
addr16
sbb
ljmp
mov
xchg
out
pop
mov
rcrl
nop
lahf
inc
dec
mov
mov
cld
lahf
lret
cmpsb
scas
jbe
sub
xlat
xchg
adc
repnz
sub
pop
xor
xchg
jmp
in
loop
addr16
mov
adc
push
std
stos
jae
push
push
repnz
sbb
adc
bound
jmp
std
add
stos
adc
xlat
add
daa
jne
jp
jmp
cmpsl
out
xlat
jno
into
xchg
mov
icebp
in
pop
arpl
inc
jl
xchg
xlat
jb
mov
addr16
testb
adc
rcl
repnz
int
popf
fbstp
xlat
repz
out
ficomps
cmp
lock
xlat
lods
pop
in
jnp
iret
add
adc
mov
mov
pop
dec
or
test
xchg
iret
and
jp,pt
sub
sbb
push
lcall
cmp
xlat
pushf
add
cmpsl
and
mov
es
xlat
mov
push
and
dec
sub
loope
lahf
fdecstp
pop
dec
jb
or
mov
dec
push
mov
and
scas
adc
in
push
mov
out
xlat
fmull
leave
inc
fists
mov
jns
xlat
push
mov
insl
aam
sbb
imul
scas
lock
cltd
and
in
xchg
rorl
cmp
loopne,pt
out
iret
subb
roll
add
rcl
pop
adc
xlat
daa
leave
push
pop
sarb
negl
jo
xlat
sub
sbb
test
dec
mov
mov
pop
xor
adc
aas
repnz
push
mov
push
or
pop
sub
xlat
jnp,pt
or
xlat
or
loope
mov
push
jo
imul
aam
jmp
jns
addr16
fs
or
pop
iret
cwtl
ss
adc
pop
nop
movsb
xlat
push
xor
xlat
jbe
iret
mov
inc
cld
bound
sbb
mov
shlb
cmp
push
dec
lahf
jae
push
in
test
inc
addr16
push
rclb
leave
gs
fwait
lret
nop
dec
bound
lret
mov
fisttpll
lahf
xchg
add
pop
aam
push
fwait
or
js
cmp
xlat
mov
icebp
pushf
adc
dec
movsl
dec
sub
jb
out
push
ljmp
inc
adc
testb
mov
mov
mov
jne
add
push
repz
stos
xor
lods
cmp
pushf
jle
xlat
test
add
mov
aam
pop
xlat
les
add
push
xchg
aas
sub
sub
mov
std
and
xlat
out
int3
and
mov
inc
mov
les
push
sub
fiadds
rorb
or
fsubl
inc
stos
test
loopne
stc
movsb
mov
xor
dec
adc
jp
dec
imul
xlat
sub
cld
cli
test
jns
out
adc
lods
sub
dec
loope
scas
lea
or
cmp
jnp
inc
fdivrl
lea
lahf
in
int3
cli
xchg
cmp
ds
lret
out
or
inc
fmuls
mov
popf
nop
les
pop
fwait
jbe
lahf
in
jmp
jnp
add
and
mov
cwtl
test
xlat
movsb
nop
xchg
fdivrs
xor
dec
inc
loop
push
jb
adc
imul
cli
inc
inc
outsl
arpl
inc
jecxz
push
pusha
cwtl
xlat
flds
lahf
dec
add
xlat
pop
mov
sub
and
sub
stos
cli
and
jg,pt
jge
rorb
pop
add
mov
xlat
repz
inc
enter
xlat
sub
pop
and
ffreep
jle
or
xchg
mov
stos
push
sub
xchg
jecxz
aam
pop
rorb
cmp
xlat
inc
sbb
mov
xlat
sahf
pop
push
jp
xor
pop
roll
ja
xchg
pop
and
add
xor
data16
xor
xor
loope
mov
arpl
mov
scas
cwtl
xchg
jge
dec
fistps
outsb
xor
js
or
push
mov
mov
pop
cmpl
jne
mov
jmp
sbb
xor
cltd
cmp
adc
sub
jno
jecxz
add
sbb
int3
xlat
xor
mov
mov
jle
ficoms
and
sub
jecxz
cmp
mov
add
mov
mov
loop
mov
inc
sbb
pop
rcrb
lea
mov
mov
jae
push
fimuls
sar
mov
iret
add
pop
sub
aas
push
xor
loope
adc
dec
or
adc
xlat
add
js
daa
repz
data16
pop
add
and
sbb
sbb
mov
repnz
push
shlb
mov
push
ja
dec
add
outsb
sub
dec
out
mov
mov
dec
jno
shl
out
mov
xlat
mov
add
push
ret
push
ror
stc
add
jns
nop
jg
pop
xchg
in
jae
aad
add
ljmp
or
sub
insb
test
cmpl
sub
test
les
dec
sbb
xchg
loopne
mov
mov
sbbb
aaa
pop
cmp
mov
mov
and
mov
insl
rcrb
cmp
xlat
mov
mov
cmp
in
sti
loop
cli
cmp
iret
jno,pn
xchg
movsl
mov
cmp
leave
loope
jp
xchg
icebp
xchg
jg
in
mov
push
stos
xor
xlat
cli
clc
mov
lahf
out
insl
pop
cmp
out
pop
xlat
pop
std
lods
orl
test
mov
push
xlat
imul
xlat
fwait
fs
inc
xlat
push
add
das
es
xchg
dec
insb
mov
sub
adc
cli
aam
aad
xchg
sbb
xor
lahf
inc
mov
insl
loopne
jle
dec
xor
adcb
mov
push
clc
stc
mov
jle
jb
outsl
xlat
lret
push
xor
test
mov
out
mov
jle
loopne
pop
push
xor
leave
push
lret
std
xlat
faddl
les
pop
xlat
push
pop
lock
popa
jmp
sub
mov
mov
mov
xlat
int
lahf
sbb
mov
shrb
cs
dec
aas
jbe
mov
data16
inc
mov
hlt
scas
xlat
faddl
fst
adc
mov
fdivs
popf
xlat
or
test
or
stos
inc
outsl
xlat
jg
out
mov
inc
rclb
push
xlat
out
movsl
lea
lahf
mov
push
cmp
add
fst
sbb
inc
cwtl
mov
stc
mov
sub
sbbb
shrb
dec
test
fwait
xlat
cmpsb
fdiv
mov
xlat
cmp
mov
cmp
push
subl
cmp
out
arpl
shll
jl
or
xlat
xor
pop
gs
std
cli
sar
xor
jnp
int
rcrb
push
inc
dec
shl
push
insb
xlat
dec
testl
and
fisubl
cmc
mov
xlat
adc
ss
xor
pusha
mov
mov
xchg
xlat
mov
stos
in
push
mov
out
xchg
mov
push
pop
xchg
push
pushf
ljmp
mov
xchg
cmp
lahf
adc
mov
call
jns
sub
sub
push
mov
sbb
out
int3
mov
add
inc
xchg
xor
push
mov
stos
fiaddl
sbb
mov
insl
cli
or
push
sar
mov
xor
jmp
movb
jb
jl
cld
jp
movsl
cmpsl
push
push
adc
sub
popa
mov
push
pop
mov
mov
inc
out
fmull
push
and
shlb
adc
insb
mov
jp
and
pop
les
adc
ja
add
jg
int
push
outsl
adc
pop
cmp
aam
pusha
lods
ret
dec
push
repnz
jnp
mov
add
sbb
sbb
adc
nop
pop
shl
movsl
mov
test
xor
lcall
iret
pop
push
shlb
mov
inc
jb
xchg
jmp
int
jns
shrb
inc
rcrl
int
iret
mov
dec
lods
daa
xchg
inc
jg
fsubr
fists
aam
pop
in
aad
xchg
nop
mov
test
mov
cmpsl
aam
inc
jecxz
sub
lock
cmpb
in
aad
flds
pop
cmp
cmpb
push
push
mov
mov
mov
push
inc
lods
sub
xor
jge
jmp
mov
pop
inc
ffreep
mov
xchg
xchg
xchg
jb
or
pop
jl
test
adc
xor
mov
cmpsl
test
shr
rcll
pop
mov
pop
mov
cltd
mov
aaa
fwait
ret
dec
dec
sbb
repz
jbe
fidivl
nop
xor
add
out
call
xchg
cld
rdpmc
ss
jmp
xchg
mov
mov
outsb
cmp
push
out
or
dec
rcrb
mov
adc
mov
jge
xlat
ret
loope
sbb
rorb
push
mov
and
mov
mov
jno
add
icebp
jnp
fcomp
test
sbb
fistl
nop
mov
add
jo
test
leave
adc
sub
jb
sbb
sahf
call
adcb
popf
pop
inc
mov
xor
push
push
movb
push
sub
cmpsl
fcoml
mov
loope
das
stc
mov
test
jno
and
nop
pusha
mov
dec
cs
lahf
mov
jns
mov
push
nop
hlt
insb
scas
test
incl
xchg
bound
inc
push
lahf
mov
xchg
iret
rcrl
push
dec
mov
push
fadd
test
sbb
mov
call
ljmp
inc
sub
xchg
ret
mov
adc
js
xlat
push
sbb
fdivrl
fiaddl
jnp
pop
dec
dec
adc
sub
in
jb
or
adc
sti
xchg
out
cld
cmp
mov
mov
mov
fwait
sbb
mov
daa
leave
ret
mov
aas
icebp
daa
mov
stc
lock
mov
lahf
sbbl
or
pop
sub
push
jb
test
pop
add
or
or
jge
js
push
sbb
mov
fstps
jmp
xor
dec
mov
pusha
cs
adc
pop
jae
xchg
ficompl
popa
ret
lahf
lcall
addr16
nop
ja
mov
sub
mov
sub
in
nop
mov
outsb
sbb
cmc
test
mov
push
sahf
lahf
mov
sbb
mov
jne
jle
test
jo
ficoms
cmp
jae
adc
jbe
pop
mov
lods
clc
xlat
cmp
adc
push
cs
test
inc
mov
ljmp
mov
xchg
fisttps
aad
xchg
inc
gs
leave
ret
ja
jle
pop
sbb
pop
jnp
jb
xchg
push
in
push
or
nop
cmp
pop
lcall
jo
sub
iret
mov
in
jecxz
add
xchg
cmpsl
daa
sahf
add
mov
push
leave
xchg
nop
fbld
jnp
jbe
mov
push
dec
imul
jo
rcl
push
push
push
adc
lock
lea
jge
mov
movsl
xor
pop
mov
add
lds
mov
lds
aas
adc
aaa
xchg
dec
jmp
and
or
rcrl
mov
das
push
push
jnp
movsb
into
scas
pop
jp
scas
mov
stc
shll
xchg
ss
sbb
test
jg
out
and
and
dec
and
cmp
inc
sbb
hlt
orl
test
sub
into
sub
adc
nop
bnd
mov
mov
aam
pop
stos
xor
xchg
jns
inc
jmp
ja
lret
mov
scas
mov
call
or
mov
in
push
loopne
imul
out
cmp
push
fsts
bound
in
pop
add
in
lret
fstpl
pop
es
sbb
dec
repnz
inc
aas
push
add
cmp
divb
sub
aam
sub
push
cmpsb
jbe
rcll
dec
inc
roll
ret
nop
test
out
pop
cmc
pop
out
insb
cmc
aam
in
imul
xor
adcb
push
jg
lock
ja
outsl
pop
pop
fldenv
sbb
inc
ficoms
pop
les
imul
pop
jns
fimull
icebp
and
jle
or
aaa
rcll
ja
mov
in
jmp
imul
cld
sbb
cltd
andps
jge
and
lret
ficoms
arpl
dec
push
mov
lret
jnp
pushf
xchg
fnstsw
bound
adc
fucomi
mov
xchg
pop
enter
jnp
icebp
cmp
xchg
arpl
adc
sbb
imul
inc
add
scas
push
fildl
push
stos
jmp
adc
ljmp
roll
add
mov
mov
stos
test
arpl
out
xchg
test
fisttpll
jl
dec
aas
mov
not
out
or
mov
pop
hlt
iret
cmp
fcoms
and
xor
cmpsl
lcall
inc
or
xchg
mov
dec
push
bound
add
dec
hlt
xchg
mov
enter
sub
daa
cmp
mov
and
outsb
pop
cmp
stos
pop
and
daa
inc
push
jo
xchg
jl
ficompl
fdivr
xchg
test
push
pop
inc
repnz
int3
ret
addr16
mov
xchg
xchg
jb
cmp
mov
mov
mov
sbb
bnd
xchg
xchg
cmp
mov
ret
rol
aad
push
push
std
repnz
popa
pop
mov
jp
movsb
out
add
xorb
fchs
loope
and
jp
hlt
dec
gs
scas
and
in
mov
cwtl
aad
insb
pop
negl
mulb
idivl
xor
sahf
jmp
out
push
xchg
cs
fisttpll
sbb
pop
stc
fs
xchg
sub
inc
out
aaa
fidivs
imulb
leave
xor
inc
pop
and
push
adc
add
cmpsl
and
pop
and
pop
out
sub
xor
ljmp
mov
jno
mov
mov
inc
push
push
iret
faddl
inc
jb
cmp
into
inc
xchg
inc
push
aas
jmp
lds
xor
das
int
pop
push
mov
stos
test
lds
mov
mov
stos
cld
cld
ja
and
push
cmp
xchg
movsl
fildll
mov
and
aam
mov
aam
clc
stc
xchg
mov
and
sbbb
jmp
dec
adc
repnz
subb
dec
mov
filds
adc
push
icebp
nop
add
add
jmp
mov
ds
ja
rorl
add
ss
add
jno
mov
jge
inc
or
cmp
mov
pop
data16
repnz
jg
mov
inc
lret
lock
lods
iret
push
dec
pop
ret
jb
jg
adc
dec
sub
xchg
sbb
test
ljmp
mov
pushl
scas
push
daa
jno
xor
mov
adcl
sbb
pop
orl
gs
add
sbb
mov
imulb
sub
ljmp
mov
inc
sahf
and
sbb
mov
push
jae
adc
or
xchg
rcrb
es
out
and
push
jo
jns
jne
aas
nop
mov
jmp
xchg
mov
iret
in
jnp
and
jnp
in
push
add
lds
push
jmp
scas
dec
outsb
fsubrl
pop
icebp
leave
mov
jp
loope
adc
out
fimuls
cmpl
jg
insb
fwait
sbb
std
in
pusha
xchg
in
push
or
scas
stos
xchg
movsl
fs
iret
cwtl
flds
pop
pop
mov
mov
sub
cltd
dec
int
or
sbb
scas
mov
xor
mov
mov
lret
pop
leave
jo
sbb
out
in
pop
add
fdiv
ljmp
mov
xlat
add
adc
adc
mov
or
mov
mov
add
lock
jnp
daa
movups
mov
mov
push
xchg
sbb
sub
gs
lcall
scas
mov
adc
cmp
aam
sub
orb
or
add
xlat
pushf
xor
sbbb
hlt
idiv
ss
rcr
ja
adc
xlat
clc
jbe
cmc
jle
and
jmp
lds
xlat
cmp
aam
sub
dec
mov
sahf
add
lahf
testl
lock
push
std
or
jb
loopne
xlat
test
cmpb
arpl
iret
sub
int3
mov
xlat
rclb
dec
mov
cmpsl
or
jmp
fnstsw
jns
rolb
je
out
addl
daa
xchg
dec
ret
lret
xchg
sbb
or
pop
ja
lds
xchg
and
in
mov
pop
out
into
call
jmp
adc
pop
mov
sub
jne
jl
test
jns
ja
sbb
sbb
push
stc
scas
mov
inc
mov
mov
hlt
pop
adc
push
in
pop
xchg
push
adc
fimuls
jbe
xlat
imul
jnp
xor
jecxz
rcr
sti
loop
jns
sti
repnz
inc
cltd
call
rcl
lahf
push
scas
xchg
push
push
mov
mov
mov
stc
inc
pop
mov
rcr
insb
pop
or
les
ljmp
mov
xchg
dec
in
cmpsl
stc
outsb
jg
lret
fsubs
jno
xor
xor
std
test
dec
lea
jge
adc
subb
xor
das
xor
scas
sub
jge
fwait
jne
fcomps
mov
adc
hlt
cld
int
jbe
adc
bound
aam
xchg
mov
fldenv
mov
sub
cmp
mov
inc
jp
es
mov
repz
out
pop
repnz
repz
test
pop
inc
notl
in
inc
adc
shl
aam
or
stc
mov
cld
jmp
sbb
jg
sub
push
pop
mov
lds
outsl
shr
add
xchg
push
rol
in
sti
stc
stos
jmp
or
adc
icebp
arpl
cli
loope
aad
nop
or
test
or
mov
sub
pop
movsl
rcr
mov
xchg
stos
dec
inc
jg
sbb
cmp
inc
arpl
or
and
inc
mov
xor
ss
mov
cwtl
jle
shrl
stos
mov
leave
imul
in
mov
sub
xchg
jns
repz
leave
nop
test
data16
fs
call
ljmp
fcoms
inc
cmp
nop
ss
idivb
inc
pop
mov
imul
nop
fcompl
and
push
mov
ret
mov
xlat
or
inc
push
add
int
inc
mov
adcb
and
cmp
and
lods
test
or
mov
mov
lods
repz
mov
jnp
push
push
jne
jb
cwtl
movsb
mov
xor
add
add
pop
sub
leave
test
imul
lods
fcmovb
mov
scas
sbb
mov
mov
mov
push
adc
test
xchg
lods
aas
aaa
inc
stc
jae
add
icebp
pop
dec
xchg
mov
lods
js
fsts
xor
icebp
jnp
loope
cmpsl
ss
add
pusha
add
ja
fs
shufps
or
shll
call
sar
add
bound
xlat
pop
loopne
inc
loope
push
xlat
adc
test
iret
pop
scas
outsl
imull
movsl
adc
inc
nop
dec
out
lods
xlat
dec
stos
adc
cmp
xchg
xlat
test
pop
push
ja
addr16
and
or
adc
int
inc
lahf
push
jle
cli
xchg
rcrl
rcll
or
loopne
inc
mov
inc
push
sbb
shll
pop
jl
xor
jb
mov
dec
xor
xchg
xchg
dec
loop
pop
jp
xlat
jns
shrl
inc
cmp
scas
popa
jnp
js
insl
nop
xlat
fcmovb
dec
mov
fcmovne
dec
xchg
xchg
adc
mov
and
icebp
xor
ret
stc
rorl
sti
jecxz
nop
pop
mov
jno
shr
aaa
cmp
sbb
or
push
xchg
cmp
xchg
adc
inc
cmpsl
fxch
sub
aad
jae
stc
cmc
call
stc
sbbl
nop
ss
dec
add
sbb
cld
jne
in
scas
adc
cmc
dec
arpl
ljmp
and
jno
xchg
inc
aad
gs
loope
mov
out
into
aam
loope
icebp
stos
fdivrl
add
dec
outsl
test
xchg
cmp
jnp
jns
movq
in
ss
jbe
in
rorl
push
std
sub
int3
ja
nop
mov
loopne
cmp
pop
jnp
cmpsl
mov
or
inc
jl
imul
lds
push
mov
nop
inc
adc
sub
rclb
roll
add
pop
aas
xchg
xorb
imul
fnsave
pop
xor
call
jne
lret
ret
xchg
dec
fdivr
repnz
in
mov
sub
popa
cmp
stos
clc
jno
xchg
xchg
aam
add
mov
data16
iret
mov
mov
notb
add
jg
jmp
xchg
mov
loop
shll
rcrl
push
push
xor
mov
mov
pop
push
xchg
sar
bound
mov
mov
rcr
dec
adc
rol
mov
out
filds
push
mov
gs
mov
xchg
adc
das
ret
sub
push
push
lret
out
hlt
int3
mul
jmp
push
adc
or
sahf
inc
roll
jl
fbstp
nop
test
dec
pop
sti
lahf
jmp
loope
cwtl
cmp
push
sub
imul
pop
dec
push
lret
sbb
mov
mov
repnz
xchg
les
call
mov
sbb
cli
scas
dec
mov
inc
mov
sbb
xor
int
xchg
fs
and
mov
inc
mov
test
sbb
xor
sbb
nop
xchg
mov
sub
xchg
adc
inc
out
mov
fldenv
xor
out
mov
in
sub
mov
aaa
inc
inc
pop
cmpsl
sar
dec
in
push
dec
aad
xchg
sub
stos
xchg
pushf
pop
int
xor
ss
xchg
lret
ljmp
jge
gs
mov
mov
cld
imull
mov
add
ret
sub
std
sub
jns
repnz
cmpsb
lds
adc
popf
pop
xchg
mov
rorl
daa
adc
xor
mov
pop
mov
mov
lcall
out
xor
xchg
into
push
popa
out
aas
leave
outsb
mov
push
pop
mov
or
int3
mov
push
bound
push
push
xor
sbb
int3
sar
push
xor
jae
mov
lods
das
iret
pusha
xchg
bts
inc
cmp
inc
inc
fnstcw
ret
inc
in
push
xchg
sub
jl
cmp
push
rol
out
xorb
out
sub
loopne
cmp
jp
in
cmpb
xor
push
pop
and
in
mov
xor
or
inc
adc
jmp
and
push
mov
lds
sub
rol
rcrl
lods
enter
pusha
sbb
das
adc
pop
xor
sbb
pusha
ljmp
jg
lcall
push
leave
mov
gs
aam
pop
xor
cltd
pusha
jp
cwtl
jle
cmpsl
nop
loope
fsincos
xchg
scas
and
jno
aad
pop
shll
fwait
pop
outsb
or
pop
lret
cmp
or
not
lds
mov
mov
idivl
jb
sub
test
fildll
mul
movl
adc
fwait
mov
shr
sti
cmc
daa
enter
out
jo
pop
loope
and
pop
xchg
icebp
nop
xchg
outsb
dec
sub
adcb
add
pop
adc
or
lcall
dec
push
jnp
aas
mov
leave
jmp
mov
into
sbb
jae
xor
js
daa
cld
imul
xor
nop
faddl
inc
fsubl
jbe
lret
int3
lret
or
es
cs
test
push
pop
mov
stc
jne
mov
mov
das
mov
push
push
sub
xchg
cmc
rorb
test
jae
or
push
mov
aas
stos
mov
inc
sar
dec
int
mov
leave
daa
xchg
pop
and
xor
js
imul
test
fcmovnbe
dec
xchg
sbb
sub
push
adc
jnp
lret
sub
das
jmp
pop
add
mov
scas
sbb
leave
mov
jb
fsts
adc
outsb
pop
out
mov
jae
fnstenv
ljmp
lds
push
jno
jns
pop
sub
imul
lods
inc
pop
in
or
jp
hlt
mov
mov
into
xchg
jl
mov
cmp
and
cmp
jge
and
pop
xchg
or
cmp
pop
xchg
nop
pop
out
fcoms
jmp
sbb
les
hlt
es
loope
add
in
in
test
outsb
jge
adc
xchg
pop
enter
xchg
iret
cmpsb
and
xchg
add
aaa
nop
jnp
pop
cmp
dec
jge
imul
aaa
dec
adc
and
xchg
icebp
lret
outsb
pop
inc
mov
clc
cld
stos
lods
ret
mov
mov
scas
mov
jge
push
fcomi
rcr
movsl
adc
pop
jl
sbb
es
add
inc
dec
insl
add
inc
bound
rorb
or
aad
dec
push
loope
hlt
repnz
stos
mov
mov
push
sub
mov
fwait
test
fs
cmp
test
xorb
and
in
mov
loopne
mov
mov
xchg
fstl
rclb
mov
jne
and
xor
inc
ret
add
pop
sub
call
or
adc
adc
xlat
jno
insb
nop
push
outsb
jbe
sbb
aam
outsb
das
and
mov
cld
bound
nop
sbb
sub
cwtl
cli
mov
xor
movsl
push
inc
sbb
es
or
mov
mov
scas
mov
daa
xchg
rcl
aad
mov
cmpsl
sub
xorb
sahf
dec
ret
pop
lds
xchg
pusha
inc
mov
push
mov
ret
nop
or
pop
mov
pop
push
adc
in
pop
adc
or
stos
xor
xlat
jecxz
xchg
xchg
bound
push
xchg
jmp
js
xchg
sbb
hlt
cmp
dec
in
int
jecxz
jns
pop
in
or
rcll
in
and
div
pop
rcll
lahf
xlat
pop
sub
int3
push
jecxz
sbbb
sbb
cmp
pop
dec
push
sbb
das
dec
or
xlat
add
sub
push
cli
sub
imul
xor
testl
prefetch
or
jae
out
cmp
aad
loop
push
mov
jecxz
andb
mov
in
sub
sbb
lret
ljmp
and
pushf
add
call
xlat
add
or
xlat
and
lock
cmovo
pop
std
sbb
sbb
add
and
push
inc
add
push
push
stc
pop
xlat
sbb
shrb
iret
inc
pop
enter
das
std
cmpb
mov
push
loop
clc
mov
xchg
cltd
xor
add
xlat
fstl
call
aam
imulb
xlat
pop
outsl
cmp
xchg
xlat
cmpsl
and
pop
adc
test
or
xlat
inc
mov
popa
mov
repnz
mov
aaa
dec
jl
ficoml
xor
insb
cli
mov
push
cmp
dec
xchg
sub
cmpsb
dec
adc
cli
mov
jge
insl
fwait
ror
inc
xlat
insb
cmc
jecxz
adc
pushf
lcall
and
xlat
cmpsl
sarl
pop
pop
lret
out
pop
int3
aad
or
enter
dec
roll
sub
insl
pusha
out
mov
xlat
bound
lods
mov
sbb
add
sub
push
xchg
lret
push
jecxz
shrl
cmp
push
ret
in
fcmovbe
and
rorb
xchg
lcall
fwait
xlat
sbb
cmpl
adc
adc
iret
pop
into
mov
clc
inc
divl
pop
imul
sbb
push
sbb
and
inc
not
pop
add
add
mov
cmp
test
add
lahf
push
fnstcw
int3
mov
sahf
fcmovnb
and
shrb
insb
sbb
shr
imul
inc
lods
push
ljmp
mov
loope
add
mov
pushf
arpl
adc
notb
adc
adc
pop
mov
sti
inc
xlat
jl
dec
add
cwtl
jno
shrl
jnp
add
dec
adc
xlat
shlb
push
xchg
lahf
xor
mov
jno
pop
mov
adc
push
and
jge
dec
xorb
pop
dec
fcmovbe
mov
daa
xlat
lcall
popf
mov
loop
stc
or
leave
xlat
mov
mov
in
xlat
mov
push
cltd
pop
mov
jmp
ljmp
nop
sub
roll
sbb
iret
test
mov
std
xlat
xor
inc
fs
shl
sbb
and
rcr
lret
jne
pushf
xlat
out
cmp
sbb
push
fwait
rcll
cltd
dec
xchg
push
mov
jg
and
sbb
adc
mov
cmp
xlat
mov
pop
cmpb
push
out
cs
cmp
push
inc
pop
cmp
push
pop
popf
insb
xchg
ds
clc
xchg
sbb
addr16
fcmovbe
js
cld
lret
iret
sub
push
mov
mov
icebp
mov
and
push
imul
divb
mov
fiaddl
adc
push
mov
cmp
inc
or
mov
xchg
in
dec
iret
clc
aad
jg
push
pushf
rol
icebp
xlat
ja
dec
inc
adcb
dec
xlat
jnp
push
adc
fdivrp
mov
sub
data16
or
sbb
arpl
adc
in
add
mov
adc
adc
jg
std
test
jno
outsb
popl
jg
fcmovnbe
cmp
jb
pop
das
lock
je
cmp
jno
hlt
mov
insl
jbe
fwait
push
out
and
mov
mov
int3
cmpsl
push
lock
pusha
mov
sbb
rorb
add
cmp
fldcw
push
dec
mov
pop
sbb
cltd
repz
sbb
stos
pop
cmp
dec
mov
pop
and
and
in
outsb
cmpsb
call
pop
add
testb
leave
or
lahf
in
xlat
int3
sti
arpl
imul
push
cmp
outsl
xlat
cmp
scas
outsl
fisttpll
xchg
stc
xchg
lods
lahf
loope
fcmovbe
in
mov
xlat
lret
les
push
pusha
push
xlat
aaa
loop
cltd
mov
jbe
xlat
imull
xchg
imul
in
sub
out
ja
ret
lea
or
xchg
inc
pop
push
adc
lcall
mov
adc
mov
adcb
rcl
outsl
sbb
std
fildll
lret
cld
aam
repz
inc
ljmp
mov
adc
mov
lds
pop
je
xchg
ret
into
adc
vphaddubd
ljmp
loop
sbb
jb
pop
mov
roll
xor
push
lahf
jmp
cltd
sbb
mov
cmp
andb
mov
icebp
divl
shlb
loopne
and
mov
adc
cmp
cs
sahf
cmp
mov
rcrb
call
xchg
sti
lock
sbb
inc
dec
adc
xor
test
outsb
div
sub
or
push
stos
je
xchg
pushl
data16
mov
mov
mov
addl
inc
mov
sbb
jle
push
mov
xchg
insl
push
lret
cmpsl
jmp
scas
and
dec
sub
adc
pshufw
xchg
and
cltd
sbb
pop
xor
mov
sbb
lods
out
sar
cmp
xchg
rolb
jmp
sub
repnz
repz
icebp
cwtl
sbb
mov
pop
and
xchg
inc
mov
push
xchg
xor
pushf
adc
mov
rcll
xor
adc
pop
out
addr16
sbb
ljmp
dec
sub
inc
bound
mov
jbe
mov
xchg
in
sti
adc
xor
sub
xchg
mov
ret
bound
pop
aad
jo
cmp
or
jo
stos
xchg
stc
aam
mov
pop
sbb
mov
push
iret
inc
xchg
mov
mov
add
push
mov
lret
jge
out
aas
mov
divl
pusha
jno
mov
jnp
push
sub
loopne
xchg
je
or
xor
ret
mov
sbbl
sbb
xchg
adc
jns
lcall
push
mov
jg
sbb
mov
fiadds
cwtl
loop
shrl
sub
scas
dec
pushf
fistpll
hlt
mov
fwait
bound
loope
inc
scas
fsubs
dec
mov
mov
mov
mov
test
nop
sbb
mov
mov
pusha
inc
imul
mov
loopne
imul
jae
lods
inc
aam
sub
sub
int3
lods
sbb
push
jne
aad
test
loop
pop
jmp
mov
push
test
sti
xlat
push
iret
add
and
or
pushl
fwait
movsb
fucomi
test
popf
cmc
push
push
repnz
sub
inc
mov
xlat
ja
sbb
addl
mov
pop
xchg
mov
imul
fnstenv
sub
push
lea
inc
jg
stc
mov
fisttpl
inc
repnz
xor
cmp
lods
lret
jp
sahf
fs
jl
jae
ja
jnp
test
rclb
cli
cmp
inc
cmp
into
out
push
xchg
jb
xchg
pop
pop
push
push
xchg
ret
hlt
dec
nop
lahf
lods
push
xchg
push
xchg
xchg
in
jo
mov
adc
sar
movsl
scas
and
aam
push
cmp
dec
rcrl
jge
push
or
sub
xor
xor
roll
jle
in
jg
jne
enter
mov
mov
aaa
mov
adc
sbb
addr16
frstor
mov
or
es
sbb
test
mov
iret
test
daa
ret
mov
rcll
jo
addr16
push
das
xchg
adc
repz
push
jo
sbb
decl
in
sbb
xchg
mov
ss
out
daa
lods
test
shl
xor
cmp
cld
out
pusha
daa
and
push
idivl
ret
adc
fsubrs
and
mov
cld
dec
loope
mov
jns
xchg
mov
in
lahf
repnz
xor
xorb
dec
xor
jbe
shll
lret
pop
das
push
outsl
ret
stos
push
jle
mov
jmp
mov
sti
sbb
cmc
pushf
jle
outsb
mov
dec
sbb
xor
fistl
push
ljmp
lock
pop
std
mov
enter
lahf
dec
sub
xlat
sub
out
push
push
add
clc
pop
and
xor
shlb
add
xlat
mov
push
sub
xlat
sbb
dec
pop
xchg
jmp
xlat
into
lds
insb
add
sbb
aad
push
jmp
in
lea
inc
push
sti
pop
pop
cs
mov
adcb
mov
push
lock
lahf
call
iret
cmpsl
pop
add
jnp
jo
pushf
es
jno
fists
push
aas
xchg
incb
inc
xlat
js
push
dec
imul
or
ficoms
pop
fiadds
jle
xchg
out
ljmp
xlat
pushl
sbb
jle
xchg
pop
xor
test
rcr
lret
rcrb
xlat
adc
stc
popa
pop
bound
into
adc
add
cmp
mov
aad
int3
add
aaa
xor
xchg
outsb
jg
cmp
les
adc
xlat
cmpsb
sub
lock
ret
lret
pop
adc
mov
xchg
add
pop
add
pop
xlat
dec
subl
push
shlb
adc
ds
xlat
jne
fsubl
imul
insb
int
addr16
pop
sbb
jle
pusha
push
add
xlat
dec
out
inc
test
xchg
je
add
xchg
push
dec
sarl
pusha
ret
mov
movsb
or
sahf
or
cmp
xlat
out
and
outsb
scas
cltd
xchg
mov
inc
push
sahf
mov
test
ret
xlat
pushf
clc
ljmp
jne
and
mov
adc
test
mov
sbb
orb
pusha
shr
call
fstpt
and
mov
lock
mov
push
pop
shlb
jb
cmp
lock
jo
xlat
lret
pop
clc
leave
js
fsubl
mov
and
adc
inc
iret
sahf
aaa
dec
push
mov
les
cmp
scas
shlb
ret
xor
or
lods
iret
pop
lret
cld
ja
pop
inc
js
in
inc
xlat
add
adc
aas
mov
xlat
out
dec
xor
inc
inc
cmp
mov
jns
rcrl
out
inc
or
add
sbb
mov
imul
and
ds
inc
sub
adc
jp
jae
xlat
xor
into
or
or
xlat
xchg
mov
xchg
push
pop
es
testl
mov
sar
xchg
dec
mov
mov
mov
inc
xlat
sub
adc
shlb
addr16
sbb
cld
lcall
xor
mov
fidivs
add
lods
sub
stos
je
dec
pop
popf
rorb
loopne
xor
xlat
aam
ficompl
xlat
cltd
push
xchg
and
add
lahf
mov
lahf
and
out
test
test
shrl
cltd
xchg
addr16
mov
stos
mov
inc
imul
call
aas
test
dec
or
js
roll
daa
sarl
lods
mov
xor
cs
jp
outsl
adcb
push
imul
in
mov
fnsave
movl
xor
cmp
and
ds
sbb
jne
ficoms
or
es
mov
pop
add
push
mov
repnz
xlat
push
mov
popf
scas
inc
ja
rclb
mov
push
and
out
popf
mov
in
shll
or
push
iret
pushf
sub
xor
sbb
mov
and
lea
loopne
xlat
xchg
inc
enter
adc
xlat
in
repnz
mov
jecxz
rorl
xchg
jl
lahf
mov
flds
mov
loopne
inc
js
add
ljmp
mov
ror
jge
lret
pop
lahf
adc
mov
xlat
bound
stos
les
mov
ret
xchg
xor
imul
inc
mov
hlt
adcl
xchg
frstor
int3
sbb
out
popf
int
mov
fistpl
movsb
xchg
pop
ljmp
loopne
mov
mov
xlat
andb
es
xlat
loop
in
xchg
adc
inc
xlat
fdivp
sbb
jg
push
dec
jne
jge
mov
dec
mov
mov
xlat
mov
sti
add
push
pop
stos
insb
cmp
xor
lret
mov
add
dec
dec
out
movsl
mov
cwtl
je,pt
or
mov
dec
cmp
fs
mov
insb
lods
je
mov
sub
mov
adc
popa
stc
adc
push
shr
pop
push
sarl
xlat
icebp
js
mov
xlat
test
out
cli
add
call
jae
xlat
cmpsb
push
jnp
ljmp
mov
xchg
loopw
cmp
repz
loope
mov
mov
repnz
ret
ja
int3
repz
and
push
fwait
aam
push
pop
inc
xlat
jne
cmp
mov
push
push
fidivs
xlat
xor
mov
xchg
xlat
lods
bound
aam
jl
les
xlat
rdmsr
jbe
xchg
sub
lret
int
xlat
mov
add
call
psubsw
movsb
fsubrl
fsubs
mov
adc
ret
inc
xor
xlat
imull
orl
std
lahf
popa
movsl
and
pop
into
je
xor
ljmp
stos
xlat
loopne
push
xlat
and
push
out
shlb
mov
sti
push
cmp
pop
insb
ss
xlat
xchg
int
test
loop
movsl
mov
xlat
inc
push
popl
xlat
and
sbb
outsl
pop
jbe
and
xlat
lret
dec
movsl
out
xlat
xor
fsub
jo
cmpsb
test
inc
pop
jmp
xchg
xchg
movsb
daa
xlat
sub
sub
xlat
aad
jge
shr
add
xlat
adc
dec
cmpsb
mov
and
fisttpll
xlat
js
ss
sub
push
push
push
decb
ljmp
shrl
add
rclw
daa
jo
imul
iret
jl
ret
pop
out
cltd
cs
rclb
sbb
inc
icebp
xlat
je
push
mov
pop
mov
call
push
push
ja
push
sbb
aad
sub
iret
test
xchg
popf
mov
push
idivb
sub
jle
lcall
jno
sahf
jne
jg
xor
shll
cld
pop
pushf
mov
movsb
inc
daa
aad
call
inc
inc
jo
xlat
cli
sub
mov
add
xlat
fcoms
jo
add
dec
cmp
rcll
rolb
mov
cmpl
lahf
mov
mov
sub
mov
push
aam
pop
enter
out
shrl
cmc
xchg
pop
mov
daa
test
sahf
jbe
mov
xchg
push
repnz
push
dec
sub
xlat
xor
sub
addr16
rcrl
xchg
inc
call
xchg
adc
xlat
sbb
add
stos
shrb
sbb
pop
mov
xlat
arpl
sub
inc
jecxz
adc
xlat
ja
add
inc
mov
push
dec
add
mov
hlt
adcb
push
add
inc
or
out
mov
pop
pop
rolb
dec
adc
jno
mov
lcall
xlat
int3
mov
stos
mov
add
adc
rcll
dec
xchg
addr16
sahf
pusha
mov
ljmp
test
mov
adc
push
push
js
popf
cltd
fcmovu
repnz
dec
xor
inc
xlat
xchg
adc
xlat
lock
cmpsb
and
ret
push
insb
mov
jae
rcl
pusha
ret
lods
dec
rolb
aam
inc
scas
inc
mov
loopne
xlat
hlt
xor
ret
mov
into
lods
cli
rcll
pop
cmp
cmp
dec
jae
xchg
mov
sub
rorl
mov
xchg
fstpt
mov
sti
adc
and
rol
rorb
jno
mov
rorl
xlat
jns
xchg
jnp
icebp
lods
pop
xlat
fnstsw
cltd
dec
xlat
xchg
loop
pop
push
out
subl
iret
and
cmp
and
or
xchg
jl
pop
adc
xlat
fists
jg
ds
dec
div
in
lcall
mov
pusha
add
shlb
xchg
shr
dec
and
arpl
je
and
xlat
mov
cmp
xlat
jne
mov
xlat
fisttpl
inc
pop
fcomi
shlb
addr16
stc
push
movl
pop
jg
lahf
ljmp
sbb
cli
jmp
fcmovnbe
xchg
jbe
js
outsb
push
aam
sbb
xchg
movsl
inc
fnstenv
dec
add
shlb
fcmovbe
sbb
adc
stc
in
cmp
or
adc
and
sbb
fdivrl
sbb
inc
xor
adc
cltd
repz
adc
push
pop
pop
cmp
movsl
stos
sub
jl
jmp
push
lret
call
imul
inc
push
outsl
and
jge
or
div
mov
jns
fildll
in
inc
aaa
mov
out
or
mov
inc
out
pop
adc
sbb
mov
jl
and
je
sbb
and
jmp
jecxz
imul
pop
push
or
fnstcw
movsb
gs
sub
repz
mov
icebp
fnstsw
push
int
sbb
dec
fdiv
jns
sbb
add
stc
jns
dec
pop
insl
pop
fwait
xchg
mov
cmp
faddl
out
sarl
repnz
cmp
pusha
mov
add
mov
mov
mov
dec
nop
push
cmp
xchg
loop
fdivrl
sub
sbb
push
dec
out
or
xchg
stc
push
lods
jnp
lods
jno
mov
xchg
dec
xchg
and
mov
ss
aaa
mov
popa
jbe
lea
add
test
push
loope
fcompl
pop
or
and
stc
addr16
and
mov
adc
mov
lcall
and
scas
lea
cld
sbb
xlat
sub
orl
imul
imul
xor
imul
mov
push
add
in
ljmp
xor
cwtl
fwait
pop
rorb
sub
clc
jae
shrb
mov
ret
cs
xchg
add
cmpsb
or
mov
aam
pusha
rcrb
xchg
jns
dec
cmp
add
ss
cmp
inc
lods
cld
in
cwtl
sbb
scas
dec
fisttps
xor
ljmp
sar
xor
bound
xor
pop
cwtl
test
ret
sbb
ftst
push
scas
clc
test
fwait
xlat
pop
in
cltd
dec
test
ljmp
sbb
fiadds
sahf
outsb
mov
insl
jae
pop
outsb
pop
xor
push
ljmp
fcmovu
ja
mov
push
stc
and
fcomp
aad
jmp
lds
pop
adc
and
cltd
jnp
xchg
aam
nop
push
push
enter
mov
push
fmull
jg
in
movsl
out
jl
into
inc
clc
mov
pop
mov
jae
movsb
mov
int
test
cmp
sub
lret
xor
xchg
stos
mov
popf
adc
scas
push
mov
dec
std
call
aad
aam
mov
cmp
cli
mov
jg
outsl
mov
mov
loopne
pop
mov
pop
sub
cld
paddw
mov
ss
cltd
push
adcb
xchg
fsts
cli
jns
lock
xchg
push
xor
mov
sbb
and
or
nop
repnz
xchg
mov
inc
loope
pop
add
stos
and
sbb
ror
push
cli
and
xchg
push
imul
lahf
mov
jo
add
enter
inc
roll
xor
mov
add
mov
int
out
mov
lret
call
jl
inc
nop
in
jle
fs
jno
mov
cmp
sub
loope
cmp
arpl
loope
sub
pop
mov
scas
jnp
sbb
sub
int3
inc
sbb
call
push
pop
add
shlb
sbb
dec
cmp
mov
lret
xor
loopne
jg
jmp
into
repnz
mov
push
mov
jecxz
sub
sbb
push
cs
nop
cmpsb
fmul
pushf
push
xor
addb
cmp
sahf
dec
sbb
mov
push
adc
sbb
daa
mov
movsl
or
seto
movsl
in
mov
or
pop
adc
push
repnz
ror
xchg
xchg
cmp
dec
icebp
nop
push
lcall
pop
lods
stc
sub
mov
inc
ret
jbe
mov
punpckhbw
dec
hlt
mov
cwtl
test
out
inc
aad
pusha
std
adc
nop
loopne
or
pop
sub
fs
jo
loope
push
test
dec
adc
mov
pop
xchg
out
leave
add
fnsave
push
pop
call
sub
push
outsl
xchg
in
inc
inc
mov
test
inc
testl
nop
pop
cld
repnz
outsl
andl
jmp
push
mov
mov
popl
lds
aaa
xorl
sbb
adc
rorl
xor
les
dec
in
mov
outsb
dec
jnp
gs
pop
iret
mov
inc
mov
sahf
mov
mov
push
dec
loop
jns
dec
dec
dec
aam
fs
cmc
lods
add
ljmp
mov
xor
lds
sbbl
dec
push
cmp
enter
adc
cmp
repnz
mov
xchg
sub
jge
bound
adc
jno
out
mov
pop
jge
ret
cmp
nop
jae
andb
mov
je
pop
inc
xchg
out
pop
ds
mov
mov
push
iret
sub
push
imul
cmp
lea
and
mov
loopne
das
add
push
enter
in
ljmp
jnp
cs
mov
add
mov
in
ljmp
sub
jecxz
out
stc
sbb
mov
ss
pop
or
sbb
cmp
xor
mov
std
pusha
ss
adc
arpl
inc
fs
mov
cmp
and
out
aam
mov
fs
movsl
les
aaa
imul
xlat
fisubl
xor
adc
jae
adcb
pop
repz
jg
scas
lahf
in
daa
xchg
dec
inc
push
addr16
sbb
aaa
sub
cwtl
pop
mov
into
pusha
sbb
into
mov
fldcw
sbb
jmp
sbb
pop
stc
ret
mov
in
push
data16
fbld
jne
cld
cmp
loop
adc
mov
int
xor
xchg
fists
mov
outsb
pop
cs
subb
mov
aam
shll
popf
inc
cli
pop
sub
sbb
or
es
imul
in
cmp
fldcw
lret
pop
insb
and
xchg
or
inc
into
scas
push
cld
add
xchg
inc
stos
cmp
sub
pcmpeqd
jge
push
dec
inc
aas
adc
push
adc
outsb
test
jae
xchg
scas
test
or
sahf
or
rcll
inc
filds
jne
mov
xor
scas
or
push
lds
or
in
and
pushf
std
and
jle
in
xchg
adc
dec
das
xor
sbb
lret
sbb
notl
mov
pop
xor
nop
mov
outsb
outsl
push
or
xchg
cld
xor
dec
iret
imul
lret
cltd
push
icebp
incb
mov
adc
mov
mov
shl
rcrl
in
push
pushf
push
and
cli
leave
decb
mov
ljmp
addb
and
test
jecxz
cmp
loop
jg
mov
ret
ja
aas
fmull
stos
push
pop
repnz
jno
inc
test
ljmp
imul
inc
daa
xchg
out
out
inc
cmpsl
cmp
dec
aas
jmp
add
scas
cltd
cmp
jge
dec
mov
int
mov
xchg
imul
clc
pop
cli
xchg
mov
sub
sbb
pusha
mov
iret
dec
nop
mov
sbb
pop
mov
das
or
inc
in
cmp
add
into
js
xor
push
mov
mov
lods
xchg
daa
in
ljmp
mov
sahf
push
mov
out
ficoms
loope
push
mov
rorl
daa
ds
push
xor
jecxz
mov
lock
pop
xor
inc
ljmp
sub
in
insl
fcomps
jp
dec
xchg
mov
outsl
ret
mov
out
add
lret
mov
ss
jge
not
std
in
rcl
test
js
daa
nop
jnp
and
lods
jbe
ss
jg
jns
clc
hlt
mov
mov
jle
in
jge
push
xchg
pop
movsl
pushl
popa
je
aaa
mov
nop
pushl
add
mov
stos
push
or
mov
orb
cmp
fcoml
cwtl
sub
push
jle
push
adc
repnz
sti
sub
rorl
and
push
aam
test
mov
int
jecxz
leave
nop
std
fs
lods
adc
leave
inc
incl
pushf
mov
aad
ja
and
push
add
mov
sbb
mov
dec
pusha
adcb
mov
fdivrs
sbb
fdiv
lcall
sbbl
or
cmp
mov
ljmp
loopne
mov
xor
jno
cmp
add
das
imul
jg
sub
dec
nop
std
fistps
mov
popf
mov
jno
mov
mov
pop
adc
inc
pusha
or
test
mov
outsb
push
dec
sub
xchg
lds
into
mov
pop
nop
pushf
jg
cmpsl
gs
ss
aam
and
push
mov
les
inc
xchg
jne
jecxz
xchg
mov
push
and
and
inc
repnz
cmp
xor
sbb
shl
add
imull
mov
adc
sub
stc
inc
pop
inc
xor
inc
dec
xor
fst
daa
adcl
aam
and
mov
inc
les
imul
divb
xor
add
popa
or
xlat
xchg
into
xchg
outsb
test
pop
out
push
add
aad
shr
sbb
mov
sti
xchg
cmp
and
repnz
add
mov
fldcw
pop
xchg
xchg
mov
rcll
jne
pop
jecxz
roll
cwtl
jmp
flds
mov
mov
push
xchg
xchg
cmp
xchg
xchg
adc
sahf
dec
shrl
loope
fists
mov
pop
xchg
mov
ficoms
pop
daa
mov
add
jg
ljmp
movsb
cmp
cltd
cmp
and
jg
xchg
out
push
pushf
sub
jmp
cld
std
mov
daa
sbb
push
movsb
sub
out
andl
xchg
mov
sbb
js
xor
inc
xchg
stos
mov
mov
push
imul
push
hlt
xchg
test
imul
out
sub
mov
jne
lea
scas
add
test
lret
inc
insl
xchg
out
pop
rcrl
dec
fisubs
push
outsl
fstps
adc
lock
push
sub
rorl
pop
dec
pop
cmpsl
popa
std
push
mov
cli
icebp
push
leave
movsl
push
xor
rorl
sbb
push
leave
aaa
pop
lcall
mov
cld
dec
loop
lock
mov
dec
and
nop
add
add
cmpsb
mov
pop
test
dec
xchg
shl
das
mov
mov
sbb
sbb
mov
fidivrl
pop
ljmp
cmp
gs
push
leave
pop
or
addr16
aad
test
imul
repnz
add
dec
inc
add
movl
mov
scas
push
add
mov
or
xchg
in
xor
outsb
adc
sub
fs
sub
popa
xchg
sbb
push
xchg
xor
xchg
push
mov
adc
lds
mov
pop
pusha
addr16
mov
aaa
jge
and
psllw
sbb
aaa
xchg
dec
mov
lahf
sti
pop
dec
jmp
inc
dec
mov
mov
out
mov
mov
mov
jmp
loope
sahf
add
mov
lea
out
pop
adc
push
pop
jne
sub
sbb
jge
and
push
pop
aas
repnz
ljmp
not
pop
aaa
test
loope
lcall
add
stc
outsb
aad
jne
ret
test
jno
call
pop
iret
xchg
cmp
xchg
mov
movsb
scas
out
inc
mov
adc
enter
out
push
jl
xchg
in
cmp
mov
leave
jg
or
imull
aad
mov
xor
push
add
or
dec
in
loopne
daa
imul
divl
int3
testl
push
scas
ss
cmp
jp
les
or
out
sub
popa
cmp
decl
mov
cltd
pop
ja
pop
lds
ja
nop
fs
jl
insl
rolb
outsb
cli
sbb
inc
mov
mov
dec
clc
inc
xor
add
popa
nop
aad
and
dec
sahf
sub
push
add
cmp
fs
adcb
sub
mov
iret
push
insb
mov
cmpsl
sub
repnz
sbb
loope
shl
xchg
sub
adc
leave
sbb
and
inc
scas
hlt
imul
push
cmp
aam
adc
ljmp
xchg
xor
cmpsb
mov
cmp
pop
or
inc
mov
cmp
mov
popf
scas
or
or
dec
faddl
push
addr16
lcall
jg
aam
jno
mov
divl
inc
or
mov
es
push
dec
test
shr
nop
int3
fcomps
push
xor
shll
cld
mov
stc
or
mov
mov
cmp
dec
push
adc
fistpll
xlat
and
hlt
mov
jle
stc
ds
mov
inc
int
xor
pusha
push
sti
xor
xchg
xlat
pop
fcmovb
add
gs
adc
mov
sub
fbstp
ret
nop
mov
mov
xor
mov
call
mov
scas
fwait
hlt
sbb
or
cs
inc
test
mov
stc
fs
lods
or
out
jne
aam
sbb
xor
jb
or
mov
cwtl
jg
mov
inc
sub
xchg
outsb
or
leave
adc
lds
scas
mov
mov
test
jp
out
mov
lret
insb
dec
nop
aaa
ret
mov
dec
and
pop
fstps
aas
cmp
iret
or
ljmp
notb
mov
ja
jae
in
sbb
jno
xchg
push
repz
adc
push
inc
inc
mov
xchg
sarl
xchg
in
push
adc
iret
mov
aas
dec
loop
xlat
lds
insb
pop
pop
movsl
std
data16
movups
jo
mov
inc
cmpsb
pop
fwait
sbb
rcrb
and
dec
mov
push
mov
jmp
sti
nop
sub
or
cld
dec
enter
ljmp
cmp
pop
adc
lea
dec
loope
pop
inc
mov
push
fistps
add
testl
loopne
fwait
sbb
stos
not
test
push
enter
lahf
in
xchg
scas
es
stos
cmp
hlt
jo
inc
cmp
daa
mov
clc
sub
popa
lds
lcall
xchg
xor
or
scas
and
mov
aad
nop
imul
loopne
push
xlat
xor
icebp
mov
jge
stos
xchg
outsl
orl
jae
sub
nop
and
xlat
xchg
test
jg
add
xchg
or
stos
or
aaa
xchg
mov
and
sbb
jle
push
xlat
imul
adc
dec
sbb
mov
jmp
jmp
nop
inc
mov
aaa
dec
aam
les
push
imul
arpl
data16
mov
add
pop
imul
jge
cmc
lret
es
scas
mov
xor
inc
stos
inc
mov
pop
popf
lock
jmp
xchg
stc
lods
dec
xchg
jb
in
pop
jb
jo
fwait
xchg
pop
sub
xor
mov
dec
or
pop
cmp
mov
jge
call
sbb
adc
pop
mov
lcall
sar
or
push
gs
inc
lret
aad
in
cmp
flds
mov
aad
mov
fldcw
inc
mov
jp
mov
mov
sub
jno
repz
sahf
adc
push
dec
jbe
inc
cmp
mov
cmp
dec
cmc
sub
lods
pop
jbe
jp
sbb
dec
lahf
mov
in
mov
and
sub
xor
mov
nop
xchg
out
enter
mov
xor
pop
jo
scas
std
push
mov
bswap
cmp
pop
pop
jb
mov
iret
sbb
adc
xchg
pop
dec
jg
add
call
outsb
ficomps
mov
push
jl
bound
daa
push
sub
push
sbb
mov
xchg
sub
in
push
mov
jo
ret
mov
lods
clc
mov
push
loope
scas
iret
sub
fmull
testl
xor
xchg
xor
test
or
push
test
sub
fcoms
jae
gs
and
sbb
stos
or
rclb
push
push
shrl
sbb
push
aad
nop
incl
cmpsl
inc
sbb
or
jge
and
pop
les
lret
xor
push
mov
pop
cmpsl
lret
jp
test
ret
add
mov
fsts
xchg
test
sahf
cmp
jecxz
test
into
jno
push
inc
fiadds
ds
out
fadds
iret
inc
fdivrl
xlat
sarl
push
jge
mov
lock
and
popa
lcall
addr16
or
lcall
cmp
adc
xor
jo
ficompl
sub
in
sbb
ja
into
ret
nop
cmp
iret
xchg
dec
jmp
hlt
pop
aaa
jae
push
jmp
push
cmpsl
sbb
jbe
lock
mov
imul
or
xchg
cmp
leave
jmp
lods
test
nop
cmpb
push
rcrl
and
loop
mov
push
jge
add
adc
sub
loop
scas
adc
nop
fwait
aas
xchg
and
lret
out
pop
adc
jg
mov
adc
and
lahf
jb
cltd
stc
xlat
cmp
stos
inc
jo
jle
pop
jns
or
jbe
jg
push
out
inc
mov
mov
fcmovu
pop
mov
add
push
adc
fsubl
xor
xor
sbb
sbb
cmp
ret
dec
test
cmp
ret
jle
adcl
sub
aad
outsl
mov
adc
ljmp
loope
inc
xchg
inc
repnz
mov
loope
adc
add
mov
imulb
sbb
cltd
nop
scas
lret
dec
xchg
movsb
fnstsw
mov
jae
subb
push
int
lcall
rcrl
out
testl
sub
shlb
gs
repnz
mov
iret
mov
jbe
imul
arpl
ret
clc
mov
pushf
mov
jnp
xchg
inc
roll
aam
les
xchg
aad
mov
lret
scas
adc
mov
mov
xchg
call
sbb
dec
lret
rcll
in
and
xchg
lock
sbb
aad
orl
fdivs
or
into
nop
push
std
lret
es
mov
xor
lret
push
aam
dec
push
mov
jmp
and
lea
fiaddl
push
leave
ja
jle
sahf
sbb
mov
in
xchg
lret
adc
add
sbb
ja
pusha
jle
fnsave
cmc
inc
ljmp
fs
loop
mov
into
push
dec
sar
add
sbb
pop
inc
stc
inc
std
jecxz
call
sbb
xchg
mov
pop
sub
add
xor
jb
xchg
adcl
jno
push
dec
aam
push
in
enter
fstpt
inc
repnz
dec
orb
repnz
xchg
outsb
xor
mov
fldenv
adc
mov
imul
pop
testb
push
pop
push
xchg
adc
sbb
addr16
lock
xor
bound
fwait
jmp
mov
mov
lret
cltd
nop
xchg
sahf
testb
sbb
sub
inc
std
cmpsl
dec
cmp
lods
aad
nop
outsb
adc
aam
xchg
mov
enter
sti
and
and
mov
jg
out
cmp
jnp
xchg
ss
mov
cli
jp
mov
aas
mov
call
cmp
mov
xor
pop
add
lea
nop
fidivrs
loope
das
jg
fs
loopne
mov
outsb
push
push
pop
adcl
xchg
int3
enter
test
repz
xor
int3
cwtl
add
inc
pop
cmc
aad
rclb
enter
aam
or
add
push
adc
in
jg
xchg
rcll
mov
ja
inc
xchg
or
cli
popa
test
lret
jmp
mov
outsb
ja
dec
cmp
or
push
or
ret
iret
dec
pop
shl
mov
adc
lds
mov
sub
lods
aam
xor
sbb
xchg
mov
xor
xchg
enter
out
cs
aam
push
xchg
mov
shr
ret
add
and
sbb
add
lret
adcl
and
pusha
push
sub
add
push
adc
nop
adc
adc
nop
add
icebp
pop
pop
jp
jp
push
add
push
scas
nop
xchg
aam
push
repnz
lret
movsb
fnstenv
mov
adc
jmp
ljmp
in
sarl
push
push
insl
adc
jg
ret
test
adc
imul
xor
out
jb
jge
jp
adc
int
push
pop
outsl
mov
xor
push
add
scas
fisttpl
sahf
rcrb
xor
push
add
mov
adc
xchg
ret
pop
nop
nop
xchg
jge
in
sub
mov
pop
aaa
mov
mov
inc
fldcw
test
pop
push
and
incb
mov
fmuls
mov
aad
sub
mov
mov
cmp
shr
xchg
arpl
aam
push
ficoml
sub
cld
xchg
jge
rcll
shll
lds
cmpsb
bound
cmpsl
push
stc
pop
lds
jg
stos
pop
pop
add
mov
mov
cmp
sub
jnp
mov
aam
fistps
aas
out
test
inc
lahf
cmp
aam
pop
sub
xlat
jno
adc
pop
mov
test
cmp
popa
cli
int3
fimull
pop
sahf
rolb
mov
fstps
lods
cmpxchg
nop
shrb
test
fstl
int3
mov
popa
cmpl
mov
sbb
mov
sarl
inc
pop
add
int3
shlb
push
sti
xor
lea
mov
out
pop
cltd
fs
fsts
adc
or
stos
sbb
mov
pop
outsb
nop
xchg
ljmp
les
in
xchg
setl
inc
push
or
jp
xor
mov
in
xchg
lret
push
test
sti
jb
or
in
ja
nop
jbe
icebp
pushf
lods
push
jb
lret
loope
sbb
mov
mov
cmpsl
stos
jg
xchg
call
mov
ret
sub
das
add
mov
mov
jecxz
push
imul
and
iret
or
adc
aas
ss
les
fisttpll
mov
xchg
sbb
and
movq
int
lods
aad
scas
xchg
das
ljmp
mov
xor
jne
jbe
mov
mov
fcmovb
shl
into
jmp
bound
push
nop
push
push
ja
cmp
imul
mov
jecxz
repnz
fwait
push
lret
jne
sbb
sub
mov
inc
dec
int
pop
inc
mov
stos
sbb
sub
call
int3
push
sti
dec
loop
mov
lcall
ret
lea
nop
sbb
movsb
subb
sbb
clc
jne
cld
mov
mov
sub
in
push
jno
nop
jne
ret
inc
xchg
cmp
inc
push
and
imul
lock
mov
fsubrl
push
pop
push
add
daa
outsl
sub
rol
add
push
sub
sub
lea
push
dec
std
cld
jbe
addl
loope
popf
jns
mov
cmp
nop
fadds
xchg
cmp
cs
jmp
stos
jae
jg
jmp
inc
jl
or
repnz
adcb
mov
pop
mov
stos
push
sahf
xchg
je
das
mov
sahf
idivl
int
cmp
jae
loop
inc
sbb
inc
test
test
jae
xchg
repnz
aaa
xchg
mov
push
stos
out
adc
divb
push
repz
jge
enter
xchg
nop
sbb
or
aaa
push
sub
pop
je
rorb
dec
jno
jmp
cmpsb
pop
push
js
dec
jae
xchg
lret
je
pop
xchg
insl
lcall
mov
and
pusha
nop
or
jno
xor
lret
addr16
popa
xor
int
gs
add
dec
mov
dec
pop
and
loope
cmp
inc
cmp
repz
leave
pusha
sbb
adc
mov
lret
ljmp
repz
sub
sbb
repz
mov
lds
dec
jne
cmpsb
and
sbb
dec
xchg
xchg
nop
ds
shl
cld
dec
xchg
cmp
dec
scas
jecxz
jle
iret
icebp
fwait
dec
push
push
sub
add
in
mov
aam
les
jo
sub
pop
inc
ljmp
fst
std
les
inc
pop
out
loopne
xchg
xlat
mov
stos
xlat
adc
icebp
imul
and
xlat
add
hlt
sub
cmc
adc
xlat
pop
fs
popa
aas
cmp
xlat
mov
or
pop
ret
xlat
jb
mov
dec
pop
aaa
mov
xchg
pusha
push
sbb
inc
push
mov
fsts
mov
mov
jecxz
mov
push
mov
pop
jmp
mov
movsb
jae
sbb
sti
lahf
add
insb
lcall
xlat
inc
cmp
jno
adcb
in
cmpsb
xlat
into
push
iret
sub
push
jle
and
xor
xlat
leave
sbb
fwait
rcl
mov
mov
and
pop
pusha
xchg
sub
out
sub
cwtl
adc
imul
test
dec
adc
xlat
sub
push
imul
push
xchg
or
xlat
add
inc
mov
sub
outsb
stos
leave
xlat
pop
fsubl
jmp
movsb
sub
jg
aaa
xlat
mov
cmpsb
lods
out
sbb
iret
push
dec
push
sti
outsb
add
fcmovnbe
sub
jo
xchg
aas
mov
sarl
cwtl
xor
pusha
mov
dec
test
push
mov
in
xchg
sub
mov
sub
imull
mov
jecxz
call
fstpl
stc
xchg
pop
repnz
jo
sbb
fld
push
in
mov
repz
in
jbe
inc
pop
arpl
fdivs
add
cmp
or
and
fsts
mov
bound
in
lcall
icebp
ret
lds
imul
bound
movzwl
jmp
push
ds
push
ficoms
adc
add
lahf
fdivl
mov
jp
clc
std
rcr
sub
fcoml
jge
and
xlat
jmp
jnp
in
outsb
ror
fsts
dec
jg
sub
mov
cmp
add
adc
mov
mov
rol
add
push
mov
and
nop
pop
mov
xchg
pop
xchg
pop
test
mov
iret
xchg
sbb
dec
xchg
xchg
pop
pusha
mov
icebp
add
ss
fiaddl
dec
out
cs
call
pop
rorl
lods
cmc
adc
dec
jnp
xchg
pop
fadds
sub
cld
rol
cltd
mov
sbb
into
icebp
push
int
stos
dec
lcall
cmp
mov
cltd
pop
nop
fldcw
loope
daa
mov
aam
pop
icebp
loopne
jbe
fs
and
pop
sub
xchg
xchg
lock
jb
pop
jmp
int
push
sbb
out
fsubl
nop
jl
xorb
mov
xlat
cmc
add
jmp
jmp
pop
aas
mov
xchg
mov
and
scas
cs
test
mov
mov
mov
sub
xor
mov
pop
arpl
jge
ret
aaa
jle
js
scas
repnz
es
cmp
int
sub
adc
xorb
cmc
pushf
sbb
hlt
jnp
pop
lock
out
mov
sbb
arpl
sbb
test
ret
xchg
mov
add
add
mov
mov
jnp
push
es
addr16
mov
xchg
sbb
pop
sub
pop
push
push
out
mov
cmp
lock
popa
add
pop
xor
loope
xor
xchg
sahf
sub
in
sbb
mov
imul
repnz
gs
adc
xlat
push
push
xchg
cmp
jo
mov
in
ret
lea
cwtl
inc
mov
lret
push
mov
fs
ret
xchg
aad
push
div
mov
scas
ficompl
out
out
js
sbbl
sbb
mov
fstps
mov
push
jge
push
jbe
not
lret
mov
cs
scas
enter
dec
inc
add
notb
pop
subl
xlat
pop
xchg
orb
and
hlt
pop
subb
rorl
pusha
jnp
testl
inc
dec
push
pusha
mov
mov
jp
aam
mov
jg
xor
loopne
fwait
mov
nop
stos
and
out
xor
sbb
pop
mov
ret
in
or
push
jg
and
aaa
cs
inc
xor
shlb
mov
mov
leave
cwtl
popl
cmp
sub
jo
addr16
push
push
je
imul
call
push
and
inc
in
sub
inc
int
aam
mov
mov
iret
loop
add
fwait
lret
pusha
jecxz
lds
and
fnstenv
mov
sbb
sub
clc
daa
mov
sbb
jle
xchg
lods
mov
jp
dec
pop
iret
push
xchg
mov
ss
stos
xchg
add
xchg
or
test
aaa
call
daa
roll
popa
pop
cmpsl
cmp
jnp
int3
push
pop
sbb
lret
xchg
in
mov
mov
repz
mov
push
lahf
inc
test
xchg
clc
add
jg
pop
mov
cmp
out
xchg
fistpl
jnp
and
aam
mov
movsb
stc
or
cld
add
rclb
jns
inc
daa
sub
xchg
push
arpl
push
into
icebp
cltd
inc
sbb
rcll
jg
xor
jnp
inc
cld
mov
and
push
fwait
out
jecxz
jecxz
sbb
xor
mov
xchg
mov
int
jns
push
pop
mov
sub
sarb
add
mov
test
sub
xor
fwait
movsl
out
xchg
inc
adc
add
nop
incb
shrb
aaa
xlat
and
mov
out
push
test
mov
fidivrs
push
addb
fcom
cmp
dec
or
adc
addr16
dec
lret
mov
stc
pop
mov
sub
test
add
mov
mov
lret
jle
jo
add
into
jg
icebp
sub
fcompl
jns
dec
xor
rorl
jno
mov
inc
xchg
cmp
push
aam
pusha
push
mov
test
inc
xchg
imul
inc
xchg
inc
pop
jbe
nop
pop
dec
push
es
inc
xchg
sahf
iret
in
lods
add
sti
popf
dec
pop
les
xchg
mov
sub
mov
aas
es
pop
push
lods
mov
mov
scas
inc
flds
push
xor
rclb
xlat
adc
pop
inc
mov
xor
xchg
sbb
icebp
call
mov
out
and
or
mov
push
scas
add
aad
xchg
out
fs
hlt
daa
pop
nop
inc
mov
jle
call
mov
ja
and
rcl
gs
pop
loop
pop
fdivrl
insl
cmpsb
mov
add
mov
xchg
pop
std
sub
test
inc
fistpl
jmp
shll
nop
jns
sub
xor
inc
inc
mov
adcb
jns
mov
vmovapd
stc
rcl
pop
loop
mov
lds
cmp
inc
sbb
or
mov
xchg
sub
inc
frstor
ss
imul
les
rcrl
mov
mov
mov
adc
mov
and
nop
imul
jb
mov
jbe
nop
aas
lea
testb
les
ss
ljmp
ss
xor
cmp
push
cmp
pop
inc
mov
or
adc
mov
and
js
sbb
mov
dec
test
daa
mov
shr
loopne
push
inc
mov
mov
js
mov
mov
pushf
jge
shrl
jge
shll
ret
out
inc
jl
mov
dec
xchg
jl
aaa
int
daa
loope
or
sub
loope
aaa
xor
in
mov
push
xchg
fsubs
cmp
mov
repz
sahf
dec
adc
mov
jne
jl
aam
mov
inc
adcb
or
jmp
adc
jge
cs
icebp
add
sahf
jb
or
outsl
mov
ret
aas
push
pop
nop
call
loop
pop
js,pt
sub
sbb
xor
jbe
cmp
xor
mov
rorl
imull
add
aas
cmpsl
daa
cmp
imul
add
mov
dec
xor
cwtl
movsb
push
push
addl
pop
arpl
out
inc
lahf
jne
gs
fcmovnbe
stc
inc
push
push
xchg
jl
cmpb
in
imull
xor
mov
into
iret
test
rcr
jbe
sub
fwait
push
push
mov
pop
jbe
sub
clc
loop
mov
xlat
xchg
insl
js
sbb
aaa
loopne
jge
and
push
add
repz
ficoml
xchg
push
test
sub
sub
imul
add
rorl
cmp
aas
scas
push
aad
xor
faddl
dec
imul
enter
cli
scas
icebp
in
pop
sub
ljmp
and
sbb
adc
flds
mov
xchg
int
push
xor
test
test
inc
pusha
cmp
mov
push
add
or
xchg
jmp
push
aad
adc
xchg
xchg
inc
int
arpl
inc
ja
and
fists
adc
in
and
popa
rol
adc
stc
popf
sbb
jno
vpcomw
int3
mov
sarb
and
jmp
and
in
pop
cmp
xchg
pop
int3
jg
adc
outsl
jbe
push
jl
orb
add
or
cld
aaa
adc
xor
jecxz
cmp
jo
inc
out
pop
mov
mov
icebp
jb
and
push
lret
ljmp
pusha
mov
add
sbb
mov
aas
rcll
jg
in
in
jne
loope
nop
in
fdivp
mov
push
add
sti
mov
adc
add
jb
or
scas
inc
xor
pop
jecxz
add
scas
sub
or
mov
or
cmp
rcrb
push
inc
mov
lock
ror
or
xchg
popl
add
xor
nop
mov
jg
sub
mov
sub
into
repnz
js
pop
sar
outsl
aam
inc
repz
add
inc
push
ljmp
subb
jnp
sub
pop
dec
mov
sub
mov
xchg
int3
iret
hlt
in
mov
inc
push
cwtl
in
jmp
mov
dec
test
jae
inc
fcoml
testl
out
mov
mov
out
inc
insl
fs
add
jge
cmp
cmp
mov
fsts
adc
jmp
adc
nop
sahf
cmpsl
and
repnz
mov
add
in
adc
jo
hlt
mov
cmp
inc
push
dec
ret
sbb
push
pop
ss
inc
iret
pop
inc
xor
or
mov
xor
inc
mov
cli
xor
push
repz
test
scas
fstpt
ffreep
imul
xchg
adc
sbb
sbb
addr16
stos
repnz
nop
addb
flds
push
mov
or
mov
push
add
notb
fcoml
cs
push
xchg
inc
das
repnz
mov
dec
mov
daa
iret
sbb
sub
mov
mov
insl
ret
lea
adc
lret
shr
shlb
cmc
jl
xchg
sub
sub
push
add
xor
jl
push
aas
pop
inc
sub
pop
out
adc
bound
cmp
mov
adc
fldenv
ss
jnp
dec
adc
pusha
mov
push
jle
es
imul
and
lock
pop
ss
jno
push
mov
icebp
stos
push
aam
mov
or
out
sti
sub
clc
cmp
aad
test
pop
mov
xor
inc
insl
scas
nop
fmul
lock
jnp
cmp
scas
mov
negb
decb
add
adc
scas
stos
sti
adc
push
gs
inc
pop
lahf
lds
iret
in
jl
fisttpll
mov
cmpps
inc
loope
mov
mov
movsl
loopne
xchg
mov
subl
es
scas
mov
ror
mov
or
lahf
repnz
imul
mov
jne
mov
xchg
stos
pop
fimull
pop
and
add
test
aad
shrl
and
sbb
out
adc
push
das
lods
xchg
jg
mov
jecxz
dec
xchg
xchg
ljmp
mov
clc
leave
mov
roll
sub
test
aam
xor
mov
ret
sbb
lret
and
mov
mov
shrb
inc
sub
cmp
ret
jae
mov
ret
xor
call
xchg
pop
inc
nop
aas
outsb
xchg
mov
jl
xchg
sbb
mov
push
cld
add
cmp
nop
jne
xchg
mov
adc
mov
push
jae
jae
pop
xchg
sti
ftst
mull
or
hlt
pushf
icebp
inc
xor
adc
sub
jle
nop
lahf
and
adc
xchg
pop
mov
fcoms
inc
mov
in
jno
jp
sub
mov
testl
sti
and
out
enter
push
dec
rol
hlt
ret
stc
lahf
loope
ret
mov
mov
jb
mov
into
pop
loopne
std
xor
andl
xchg
lock
stos
dec
mov
dec
pop
mov
xor
mov
push
outsl
out
sub
xchg
dec
das
add
xor
jmp
push
std
mov
imul
jae
andb
lret
rol
call
add
xor
mov
jne
stos
mov
and
push
xchg
scas
aas
jle
out
sub
loopne
mov
test
mov
clc
add
sbb
cli
push
ret
mov
iret
in
mov
aam
and
pop
pop
pop
int3
pop
jnp
adc
cmp
sub
scas
fimuls
ja
pop
pop
fistpll
sub
jne
fisttpl
int
imull
out
and
pop
pop
inc
sti
inc
mov
mov
subb
imul
lods
fmuls
stos
pop
adc
mov
scas
mov
or
xchg
add
repz
repz
lret
mov
or
xlat
sahf
dec
push
xchg
loopne
scas
scas
jle
lds
shll
scas
outsb
dec
iret
aam
inc
push
xchg
shl
ficomps
sub
or
aad
mov
xchg
adc
mov
addb
stos
adc
sbb
adc
mov
add
outsb
rcrl
push
mov
aam
jmp
call
or
add
dec
pusha
fcmovnb
mov
fmuls
iret
jmp
xor
mov
sbb
fldl
test
das
jle
push
aas
or
pop
test
loop
ljmp
imul
cmp
inc
and
mov
pop
adc
add
xlat
jno
xor
or
cld
xlat
lret
inc
outsb
xor
adc
xlat
inc
aas
jge
cmpsl
jle
pop
out
xlat
mov
mov
insb
out
inc
mov
push
sbb
in
jp
roll
and
les
movsl
add
je
add
xlat
arpl
ret
jo
push
ljmp
cmc
cs
adc
add
shrl
push
lds
nop
xor
xlat
mov
lods
mov
in
lahf
xor
inc
rcll
pop
cmpsl
or
int
mov
lahf
lods
mov
lret
mov
test
sub
lret
xlat
fldcw
push
out
hlt
scas
mov
xor
in
movsb
shll
fwait
xchg
dec
xlat
mov
negl
inc
push
sbb
add
adc
cmc
inc
lahf
mov
xchg
repnz
stos
xlat
xor
in
and
mov
je
and
movsb
adc
in
or
dec
push
stos
adc
mov
push
push
fwait
push
xorl
xchg
mov
dec
xor
xlat
test
jl
cmpsb
mov
lods
imul
pop
sbb
cmp
loope
inc
or
out
dec
iret
pop
aad
scas
xchg
inc
leave
and
lret
rcr
cmp
test
cmp
movsb
loop
ss
sbb
sbb
adc
xlat
push
stos
inc
std
mulb
cltd
and
pop
push
jne
fisttps
sbb
xlat
jnp
mov
xchg
mov
test
and
mov
and
push
fsubl
cwtl
xlat
mov
int3
dec
jbe
dec
xlat
cmc
jb
rcrl
cmpsb
jnp
mov
push
mov
mov
push
push
xlat
movsl
sarl
cmp
insl
pusha
mov
imul
push
mov
mov
mov
jbe
jns
mov
xlat
mov
arpl
cwtl
sbb
push
add
lods
scas
xchg
cmp
sbb
mov
sarb
sbb
xchg
aam
lods
and
aad
add
gs
sub
xlat
or
cmp
inc
pop
fmulp
jae
sti
div
fstpl
ret
xlat
hlt
arpl
js
cs
xlat
jmp
jle
out
push
mov
lahf
jne
loopne
movsb
rorl
pop
ss
mov
scas
xlat
push
mov
stos
mov
jg
push
cwtl
sbb
hlt
mov
mov
xor
inc
xchg
xlat
cli
mov
jecxz
sub
scas
inc
mov
mov
icebp
xlat
iret
inc
xchg
mov
xlat
lret
dec
outsb
arpl
push
dec
xlat
orb
ljmp
dec
cmp
sub
push
std
add
sti
cmpsl
ss
xlat
push
cmp
pop
popa
dec
mull
pop
or
pop
xlat
in
cs
push
mov
lret
in
aad
pushl
ds
bound
push
icebp
xlat
jg
mov
pop
mov
fmuls
fs
shll
cmp
sbb
push
push
add
cli
xlat
sub
adc
out
inc
xlat
sbb
jp
int3
push
jo
outsb
jbe
lret
pop
or
jnp
movsl
and
pop
dec
ficoms
xchg
xlat
dec
in
and
mov
jmp
iret
aaa
sub
lahf
sbb
push
pop
adc
xlat
add
mov
stc
mov
dec
xlat
data16
call
mov
icebp
fnstsw
or
adc
xlat
push
sub
insl
xlat
push
xor
dec
iret
mov
fstl
push
call
inc
sub
lret
xlat
aam
pop
push
pop
movsb
mov
xlat
lds
loope
xlat
dec
mov
ljmp
xchg
add
rcl
popf
stos
mov
or
insl
xlat
cmpsl
mov
ljmp
movb
sarl
mov
push
cltd
das
fisubrl
sbb
fcmovnb
mov
mov
nop
dec
icebp
or
add
push
fwait
inc
push
stos
shr
cld
xlat
cli
fcoms
cmp
iret
push
out
xorb
lcall
cmpsb
scas
shrb
je
test
sbb
xor
dec
jle
add
mov
push
push
dec
in
xlat
ljmp
not
cmp
in
lods
jne
aas
xlat
stc
or
xlat
fisubl
jbe
xlat
add
fadds
faddp
lods
sbbb
aam
cmpsb
push
mov
imul
jge
lods
lods
mov
jp
adc
sub
mov
cmpsl
xlat
sahf
adc
insl
je
das
adc
movsl
pop
and
fdivl
mov
sub
repz
mov
pop
mov
test
pop
and
fsts
and
sbb
shll
pop
scas
sti
mov
sub
sarl
pop
pushf
pop
or
xchg
jne
popl
or
outsb
or
push
and
es
sbb
xor
out
pop
andb
jns
enter
ret
cli
jmp
sub
jbe
test
sbb
nop
pop
mov
mov
pop
cld
aam
sbb
mov
addr16
dec
sbb
xchg
dec
neg
cmpsb
es
jle
mov
jmp
xchg
sarl
cmc
lods
push
sub
gs
lahf
movsl
ds
mov
push
or
jle
into
inc
mov
sub
sahf
fdivrl
jl
push
andb
pop
mov
fcoml
lea
cltd
ljmp
fistl
aaa
inc
sub
loope
shlb
and
fisttps
in
mov
xchg
nop
in
sub
leave
or
push
add
lea
cwtl
not
sub
xlat
enter
lods
push
xlat
stos
mov
lcall
dec
aad
adc
sti
xchg
hlt
add
add
xlat
xchg
and
and
xchg
push
iret
xor
cmp
pop
iret
gs
push
and
nop
mov
stos
adc
imulb
mov
lods
movsl
dec
addr16
adc
int3
rcll
adc
xor
xchg
push
jae
sbb
xor
fcoml
jbe
sub
arpl
push
pop
jp
int
xlat
ret
mov
and
pop
add
xlat
psubq
lret
cld
xlat
lods
loop
es
cmpsl
mov
adc
jle
mov
push
pop
enter
pusha
or
push
repnz
negl
cmp
ret
and
std
mov
jle
rcl
or
je
xlat
adc
aaa
test
fists
leave
dec
ficomps
popa
outsb
popf
mov
adcb
xor
aam
lock
lret
in
sub
cmp
sarb
sbb
sbb
sbb
addr16
inc
ja
pop
jae
xlat
call
stos
xchg
lret
rep
push
sbb
std
mov
sbbl
int3
fwait
xchg
mov
pop
inc
in
sub
lret
xchg
out
and
mov
cs
fwait
xor
in
or
das
xor
pop
nop
push
jl
stos
pop
daa
mov
jecxz
mov
outsb
push
lahf
pusha
jmp
xlat
or
pop
add
movsb
jns
cmc
xlat
call
add
je
int3
adc
mov
fs
rcll
fstpt
subl
jg
scas
xchg
lds
shlb
adc
cltd
and
ja
xlat
mov
sahf
rcr
mov
pop
les
mov
stc
rcll
jl
clc
scas
rorl
and
hlt
roll
popf
mov
aam
pop
pop
or
pusha
outsb
out
pop
ds
xchg
pop
xchg
sti
jb
rorb
imul
mov
mov
pushf
daa
fxch
cmpsb
aad
jbe
mov
ror
push
mov
sbb
xor
pop
mov
mov
add
sbb
scas
pop
ds
sub
mov
cs
fs
adc
mov
push
nop
cwtl
rclb
xchg
ss
scas
mov
xchg
aam
adc
mov
sbb
jg
and
xor
loopne
mov
mov
mov
pop
mov
pop
ljmp
add
sub
imul
mov
pop
xor
xorl
mov
mov
aad
shlb
xor
push
sbbb
pop
nop
movsb
mov
pop
mov
mov
cmpsl
and
in
movsl
push
movsb
ljmp
nop
inc
test
push
adc
inc
rorl
sbb
lahf
arpl
push
aam
sbb
jae
jae
jns
pop
xor
aam
insl
test
xchg
testb
cmp
into
mov
xchg
push
jg
mov
call
pop
fdivs
and
jmp
cmp
jo
cmp
ds
loop
adc
scas
xchg
fs
fstl
hlt
mov
lcall
daa
push
xlat
xchg
cld
sbb
jo
cs
lods
stos
mov
adc
add
push
in
loope
pop
xchg
or
jae
in
aas
push
cmp
lret
dec
mov
cltd
add
cmpsl
push
sub
lret
lods
cmp
xchg
std
xor
inc
lea
inc
push
hlt
scas
jmp
in
outsb
int
or
sti
or
and
rclb
xchg
xor
add
mov
mov
inc
adc
das
fildl
jmp
xlat
pushl
test
inc
fbstp
lods
js
mov
loop
sub
pop
lret
cltd
xlat
cmp
ret
dec
rcl
add
jmp
jnp
inc
xchg
rclb
xchg
add
shll
mov
nop
inc
loope
mov
sub
vxorps
add
jnp
arpl
dec
xor
call
sub
cmp
and
fsubl
stos
add
mov
adc
mov
xor
test
enter
jge
mov
aas
mov
shl
inc
mov
mov
or
sub
daa
fldcw
sbb
inc
jge
mov
mov
repnz
insl
dec
push
cmc
adc
push
leave
iret
xor
fnstsw
adc
and
sbb
pop
arpl
push
jae
scas
repz
pop
lret
mov
bound
imul
xor
mov
mov
jge
js
or
sbb
nop
cmp
scas
mov
mov
add
seto
jbe
mulb
shlb
lock
pop
stos
shlb
cmp
sbb
ss
push
xchg
iret
mov
and
mov
pop
nop
dec
stos
xor
add
xor
cwtl
call
mov
push
xchg
push
xorb
out
mov
sti
rcrl
fisttpl
sahf
or
test
push
mov
sub
ss
in
out
and
ret
arpl
aas
mull
rcll
and
scas
mov
mov
inc
cwtl
jmp
in
pop
pop
mov
adc
dec
stos
xchg
rolb
xchg
xor
dec
mov
dec
pop
xchg
repnz
adc
idivl
out
pop
inc
cmpsb
jecxz
test
jbe
int
pusha
inc
in
dec
fdivrl
mov
mov
mov
fistl
xchg
push
testb
mov
sub
push
push
into
sbb
cltd
arpl
inc
mov
out
push
fwait
xor
jge
cmp
fidivrs
clc
cmp
push
adc
fisubrs
mov
add
ljmp
mov
ljmp
aaa
xor
pop
aad
cmp
decb
call
add
rcl
and
repnz
or
fs
push
nop
aam
pop
push
in
pop
jbe
jle
xlat
push
xchg
mov
bsr
popa
xlat
or
push
pop
in
cmp
rcrl
mov
icebp
mov
fcomp
hlt
neg
xlat
sub
mov
out
scas
loope
jo
dec
test
xchg
mov
insl
xlat
in
xor
xchg
xlat
dec
cld
mov
or
push
int3
adc
push
dec
into
xchg
mov
mov
lcall
jmp
pop
pop
adc
push
jmp
call
jno
lahf
adc
lahf
das
mov
pop
adc
jmp
xlat
shll
push
lahf
pop
das
gs
data16
lods
leave
cmpsl
shll
imul
iret
pop
xlat
leave
cmp
je
clc
loope
adc
shlb
dec
in
daa
sahf
mov
cmpb
add
xor
scas
inc
inc
loop
xlat
jo
mov
mov
xor
iret
outsl
and
jns
fstl
jecxz
xlat
in
xor
clc
sbb
mov
sbb
push
xlat
lods
xchg
scas
out
ja
xor
xchg
cmpsb
mov
push
push
data16
mov
pop
cmpb
sti
clc
fisttpl
add
and
rolb
aam
cs
icebp
lods
call
xor
inc
xchg
add
out
sbb
int3
xor
xchg
mov
mov
ja
stc
sarb
repz
aam
xchg
pusha
lds
mov
out
jbe
sbb
out
aad
xchg
imul
je
movl
fsubp
int3
sbb
mov
mov
cltd
lret
add
cmp
xchg
inc
adc
xchg
sbb
daa
fiaddl
pop
arpl
stos
fs
out
repz
xor
pop
xor
adc
cmp
out
sbb
jl
pop
add
pusha
fisubl
rcrl
mov
icebp
xor
jae
jmp
pop
loop
btr
int3
std
adc
pop
notb
mov
hlt
push
lods
jnp
push
das
fidivl
ret
je
xchg
seto
mov
imul
bound
nop
sahf
icebp
sarb
inc
movsl
xorb
imul
sbb
push
xor
mov
test
lea
popa
jns
nop
push
aam
xchg
outsb
pusha
add
in
push
and
and
pop
sbb
fcoms
sbb
pusha
cld
scas
pop
out
fsts
nop
mov
fisubl
mov
dec
popf
sahf
loop
enter
xchg
enter
cmp
push
aam
lods
pop
cmp
pop
cmpl
imul
lahf
jecxz
clc
push
push
fmulp
test
mov
mov
scas
and
add
xlat
aad
xchg
fstpl
jne
int
pop
xlat
add
fimull
and
and
fisttpll
sbb
in
loopne
mov
or
add
xchg
jae
mov
dec
lock
jnp
or
in
mov
ljmp
mov
std
xchg
inc
mov
rcrb
stc
sub
mov
idivl
cld
xchg
rcll
mov
in
test
fisubrs
add
aad
fsts
test
mov
rcl
jecxz
push
adc
jp
xchg
daa
imul
jge
movsb
or
outsl
rcrl
fisttpl
pop
jge
pop
xor
push
jnp
loopne
sbb
mov
lock
push
pop
dec
stos
mov
les
pop
pushl
jo
aam
pop
mov
mov
sbb
mov
and
or
sbb
xchg
dec
pop
pop
leave
je
daa
stc
xchg
scas
xchg
mov
test
insb
into
imulb
ljmp
xchg
fistpll
sub
xchg
sbb
push
xchg
sbbl
and
enter
cmc
push
daa
mov
mov
dec
shrb
xor
int3
xchg
mov
xorb
or
and
pop
daa
jbe
jns
faddl
mov
pmulhuw
xchg
mov
fcomps
test
scas
jne
sti
scas
imul
cmp
fiaddl
stos
or
mov
pop
jp
cld
xor
mov
and
clc
scas
sub
sub
fstl
adc
aam
add
scas
mov
cmpsl
mov
adc
pop
mov
nop
mov
xchg
daa
xor
idiv
test
pop
sbbl
dec
nop
mov
in
stos
gs
cmp
pop
mov
call
icebp
add
ret
jns
jo
fwait
call
or
loopne
sub
aad
mov
inc
jo
lret
rcr
aam
xor
enter
pop
jmp
lcall
lret
jo
fldt
mov
xor
iret
and
mov
pushf
mov
inc
decl
pop
test
popa
cmp
xorl
dec
lret
pop
out
les
mov
sarb
sub
pxor
inc
pop
push
mov
notb
hlt
test
or
sub
or
mov
push
sbb
cmp
fs
and
movl
fcoml
out
pop
shll
mov
xchg
cmc
xchg
pushf
movsb
scas
dec
inc
imul
and
aam
loopne
incb
fistl
sahf
sbb
add
sub
imul
push
mov
aaa
xchg
xchg
iret
lret
sbb
jg
pop
add
icebp
mov
jno
sahf
mov
ss
iret
xchg
jl
ljmp
inc
pop
arpl
icebp
int3
test
or
insl
test
xor
push
jno
mov
sbb
xor
inc
mov
cld
loop
into
aas
in
adc
movaps
loope
cld
lods
lret
and
jle
mov
jns
ret
aam
inc
xchg
and
pop
inc
stos
dec
faddp
xchg
sub
into
aam
nop
adc
jle
pop
aaa
lods
roll
adc
in
xchg
inc
add
sahf
add
jg
fisttpl
xor
scas
add
push
xor
push
mov
lods
sub
icebp
sub
pop
mov
cmp
in
sarl
cmc
lods
xchg
icebp
mov
inc
outsb
nop
daa
and
push
sahf
mov
cmp
nop
pop
rcll
out
dec
fs
mov
mov
rolb
lret
push
insl
push
sub
add
addl
notl
push
ja
sub
cmp
xlat
icebp
mov
sbb
loope
imul
scas
frstor
shrl
and
test
fucomip
pusha
divb
sub
lret
cmp
lret
fs
add
in
les
fildl
movsb
dec
xlat
adc
cmpb
ret
in
push
inc
fstpt
mov
mov
rcll
mov
ja
xlat
setbe
ljmp
rcrb
arpl
jp
push
ss
mov
ror
mov
push
xor
xlat
sti
ss
inc
call
data16
iret
pop
in
subb
sub
dec
add
bound
in
cmp
dec
push
xchg
mov
mov
mov
pop
adc
insb
aaa
jne
cltd
nop
cmpsl
xlat
jmp
mov
sarb
je
mov
dec
iret
push
push
add
xlat
stc
xor
sub
xlat
adc
xchg
imul
data16
mov
stos
push
andl
addl
mov
cmpsl
mov
es
and
add
nop
mov
rcrl
mov
adc
xlat
cld
jae
push
pop
stos
sbb
jnp
std
push
test
mov
mov
mov
inc
push
mov
mov
lret
xchg
std
jmp
out
and
imul
dec
xlat
insb
cli
adc
out
movsl
push
xlat
out
out
xchg
push
rcl
dec
push
pop
xchg
push
mov
sbb
lret
cmp
cmp
cltd
enter
adc
xlat
jle
jns
ds
or
int
push
and
and
dec
jle
gs
int
sbb
pop
push
push
mov
out
jp
mov
jecxz
xchg
orl
sti
gs
cmpsb
xlat
jmp
xor
out
or
loopne,pt
xlat
add
or
sub
rol
mov
mov
sbb
push
xchg
jge
in
jle
adc
mov
jb
enter
xor
add
inc
inc
or
loop
sbb
dec
in
adc
mov
adc
test
mov
lahf
out
sub
cli
dec
push
xchg
dec
fwait
insl
xlat
scas
jne
hlt
lcall
loopne
lock
add
xlat
jl
lea
scas
dec
xorl
es
mov
sub
and
dec
pop
cmp
je
adc
mov
repz
cltd
pusha
inc
xor
inc
aaa
cld
xchg
lahf
pop
lahf
hlt
xlat
mov
push
lret
jb
cmp
test
inc
xlat
inc
fmul
xchg
mov
sti
sub
mov
xor
xlat
orl
mov
jmp
cmpsb
pop
mov
in
jl
xlat
sahf
into
scas
push
mov
add
cs
cmp
call
js
sbb
aas
arpl
out
cmc
mov
xchg
dec
loopne
sbb
mov
out
cmc
popa
cltd
xlat
cmp
add
lods
pop
pop
testl
iret
loop
lcall
movsl
cmp
xchg
mov
or
xlat
lods
inc
and
rcrl
xlat
fidivs
lret
inc
mull
mov
cmp
adc
mov
jbe
jb
inc
xlat
xor
mov
dec
repnz
and
cli
jb
in
xchg
mov
xchg
orb
fwait
outsb
or
xchg
xor
adc
ret
in
adc
pop
cmpsl
nop
imul
test
mov
or
xchg
jo,pt
fwait
adc
test
mov
ds
push
scas
mov
sbb
jbe
add
sbb
jne
mov
cmpsl
gs
dec
aaa
fisttpl
mov
push
jp
push
push
pop
cmp
shrb
nop
jge
nop
scas
pop
inc
sub
jns
fdiv
mov
pop
and
ljmp
xor
stos
mov
push
inc
jle
into
push
stc
sub
testl
nop
nop
cmc
aam
add
repnz
add
in
mov
adc
nop
mov
lds
in
rcll
mov
negl
cltd
xchg
cs
jbe
mov
dec
push
sbb
nop
and
ret
les
addb
sub
push
pop
and
xchg
jns
lahf
loop
aam
and
xor
pop
test
xlat
sub
loop
std
pop
cmpsl
pop
shrl
or
mov
cwtl
xchg
fidivrl
push
mov
xchg
add
xchg
add
cmp
inc
aam
and
sub
xchg
out
mov
fwait
adc
jmp
or
jmp
and
xchg
pop
push
shll
mov
mov
fmull
cmp
xchg
repnz
in
test
mov
mulb
dec
nop
je
sub
mov
loopne
xchg
pop
sub
imul
out
int
xor
push
lods
xor
out
mov
pop
dec
nop
cltd
jg
mov
sbb
js
adc
sbb
cmp
mov
clc
fnsave
iret
repnz
les
nop
adc
push
jge
xor
xorl
cld
sahf
addr16
and
test
and
fcoms
decb
repnz
out
inc
faddl
sbb
shl
xchg
push
adc
enter
lahf
cmp
je
ret
ds
cmpsl
roll
push
mov
xor
inc
ja
out
shll
xor
jae
mov
jbe
xor
stos
loope
sbbb
loopne
out
push
rorb
sub
xchg
imul
cmpsl
nop
add
mov
cmpb
ss
dec
test
inc
cmpsb
xchg
and
push
sub
mov
shlb
ljmp
inc
xor
inc
insl
push
stos
sbb
mov
scas
out
lds
sbb
xor
mov
mulb
dec
int3
test
out
daa
mov
mov
mov
nop
iret
mov
repnz
repnz
lds
mov
lea
ret
push
sbb
push
test
cwtl
jno
inc
jg
aam
lea
stos
ret
ret
lcall
mov
pop
faddl
aaa
dec
adc
inc
adc
adc
inc
xchg
insb
stc
into
push
aaa
fcmovu
adc
ret
push
faddp
pop
iret
arpl
cmp
in
sbb
popl
xchg
xchg
mov
outsb
or
jg
sub
cltd
sbb
stc
sbb
cli
icebp
movsl
out
jbe
and
lods
rcr
xor
and
mov
pop
les
mov
aaa
nop
aam
pop
negb
sahf
push
push
dec
in
mov
aas
js
inc
push
addl
mov
mov
pushf
pop
movsl
fwait
or
daa
mov
testb
ret
and
add
fcom
loope
fadd
aam
add
jns
push
ret
sbb
out
ret
dec
aaa
mov
inc
int3
jl
testl
icebp
call
inc
aam
xchg
and
imul
das
sub
aaa
xlat
cmc
push
clc
jmp
fsubr
enter
nop
fldcw
xchg
pop
ljmp
sub
xchg
jns
add
mov
cmpsb
fisttpll
mov
pop
leave
and
add
rcll
outsl
test
push
icebp
jae
mov
stc
inc
mov
stos
and
mov
pusha
inc
sahf
adc
cmp
add
in
xchg
aas
xchg
push
cmc
jae
xchg
daa
fcompl
jnp
push
je
mov
jl
push
jnp
inc
sbbb
and
or
rorb
nop
pushf
loopne
sbb
negb
movsl
pop
outsb
jmp
lods
pop
sarl
nop
aas
xor
aas
push
lds
les
stos
sbb
pusha
scas
push
imul
dec
xchg
rorb
dec
imul
stos
out
lds
mov
rclb
or
push
pop
imul
testl
mov
push
movsb
inc
dec
movsb
imul
pop
mov
jns
aam
int
add
inc
jns
xor
jg
xor
inc
fldl
popa
pop
imul
lock
mov
fsts
lods
rcrb
mov
mov
jmp
ret
ret
and
push
das
int3
jmp
arpl
js
dec
add
inc
add
int3
cmp
repz
in
add
or
testb
add
in
add
cmpsl
nop
cmc
lahf
shrl
enter
push
jae
mov
sbb
repnz
jnp
dec
loop
jmp
inc
and
mov
pop
push
dec
cld
jo
mov
xchg
xor
jge
rclb
mov
dec
fistl
mov
cli
inc
rclb
adc
test
aas
ret
jp
mov
test
imul
ja
mov
mov
loop
inc
decl
xrelease
lods
leave
mov
xlat
cli
test
mov
inc
jecxz,pt
push
sub
jge
dec
imul
sbb
mov
movsl
lods
cmpsb
shlb
push
mov
inc
jecxz
sbb
rorl
push
add
out
mov
sbbb
add
jl
jle
in
nop
mov
adc
jmp
pop
or
sub
pop
xchg
push
test
xchg
pop
daa
das
sub
mov
into
ficoms
xorl
shll
sahf
jns
push
fwait
sbb
dec
cltd
aad
pop
fistpll
jae
out
sub
int
lds
mov
xor
sbb
test
movsl
stos
scas
push
xchg
in
cmpsb
xor
testb
push
ret
into
shlb
push
lcall
mov
aas
mov
lods
popf
cmpsl
jnp
sub
mov
ffreep
inc
mov
mov
dec
sub
test
repnz
aas
dec
in
sub
xor
stos
inc
xchg
jl
pop
int3
dec
or
mov
inc
cli
movsb
aas
movhlps
xor
call
jne
shlb
dec
lds
js
int3
mov
xchg
nop
scas
mov
and
lods
shl
mov
fnstenv
nop
pop
das
mov
loope
dec
xor
aas
js
out
mov
aam
cmp
inc
das
push
push
enter
add
mul
leave
push
adc
dec
cmp
pop
and
filds
push
jge
cmp
call
daa
lea
mov
mov
cmc
and
add
aaa
pop
out
ja
fldl
aad
out
daa
jo
dec
xor
push
std
xchg
mov
sbb
cmc
cmp
fmulp
arpl
mov
cmpsl
leave
mov
mov
out
jb
dec
dec
jmp
aam
cmp
fstl
aaa
xchg
les
scas
pop
or
movsb
or
xchg
mov
xor
scas
inc
cmp
fiaddl
cmp
out
clc
sub
sarb
xor
stos
mov
out
lahf
in
jecxz
lret
xor
mov
movsb
mov
xchg
mov
and
into
inc
jmp
sbb
outsb
arpl
mov
idiv
insl
scas
scas
dec
push
push
xchg
jo
ret
sub
shll
mov
push
adc
flds
ror
adc
push
xchg
stos
ret
nop
aad
pop
aam
setnp
jmp
fsubl
mov
jb
fmull
rcl
add
xchg
lret
and
or
sbb
sub
fdivrl
cmp
mov
jne
dec
jmp
hlt
mov
and
pop
xchg
xor
loopne
lock
dec
into
imul
mov
fwait
push
pop
imul
idivb
sbb
adc
push
mov
push
push
adc
cld
push
xor
scas
xchg
mov
inc
test
lcall
lret
aam
mov
cmp
rcl
aad
nop
repz
mov
jge
pop
inc
sbb
sub
sbb
ret
jbe
jae
sarl
ljmp
fwait
xchg
pop
xchg
fildll
or
sbb
cmpsl
jge
ljmp
nop
jmp
ljmp
sub
xchg
or
sbb
mov
sub
int
repz
xchg
sbb
aaa
sti
jae
mov
in
scas
pusha
out
pusha
sti
fidivl
adc
inc
stc
sbb
fistpl
inc
xchg
cltd
mov
adcl
cmpsb
mov
push
pop
mov
or
outsl
add
rorl
adc
push
lods
xchg
sbb
in
mov
xchg
mov
push
lds
add
push
and
lret
imul
pop
mov
repz
mov
pop
mov
lret
nop
push
sbb
adc
bound
jg
mov
or
mov
call
xor
dec
cmp
sbb
cld
icebp
push
icebp
add
inc
mov
cmp
into
rcll
xlat
xor
mov
ljmp
ret
rorl
xchg
sub
dec
adc
mov
fsubp
addr16
add
ficoml
test
push
cmp
adc
fwait
xchg
fnop
in
and
pop
sbb
or
or
xor
xor
mov
lods
cmp
in
jge
or
inc
inc
icebp
pushf
out
test
ss
add
jbe
dec
call
push
je
mov
divl
ret
cld
adc
mov
mov
pop
or
pop
mov
jae
inc
ret
xchg
push
stos
push
jae
mov
xchg
pop
jns
push
sub
sub
cmc
stc
adc
xchg
adc
iret
cwtl
sbb
scas
and
repz
imul
inc
xor
add
test
mov
std
cmp
or
out
and
in
lret
mov
fwait
sub
gs
jge
jge
ret
aaa
call
pop
mov
pusha
inc
adc
scas
imul
js
push
xchg
insb
std
addr16
add
dec
inc
sti
mov
inc
push
and
xor
and
push
aad
mov
sahf
out
and
add
stos
push
mov
shll
aam
in
or
scas
or
sbb
xor
jnp
dec
and
lock
jmp
ljmp
xchg
or
sbb
jle
dec
and
mov
add
mov
sbb
adc
neg
xor
push
pop
nop
pop
mov
cmp
rclb
and
in
inc
imul
push
mov
nop
movsl
add
cmp
xchg
mov
cmp
aad
in
std
push
arpl
test
in
inc
xor
jns
lahf
jno
fcoms
inc
or
add
adc
jge
or
iret
insb
jne
je
pop
bound
xor
and
mov
scas
push
in
out
and
cmp
jmp
xor
aam
vmovq
cmp
rcrl
pop
iret
js
sub
jmp
movsl
in
xchg
fcmovnbe
adc
xlat
ss
out
xor
xlat
jge
pop
mov
ja
loope
or
pop
aaa
sbb
lahf
outsb
sub
mov
data16
call
iret
leave
jae
hlt
pop
xchg
stc
cmp
ds
iret
jne
mov
push
fldt
mov
push
push
lock
shll
mov
sahf
scas
or
push
rorl
hlt
stos
aam
jg
mov
aad
rcr
inc
mov
push
or
xor
xlat
lret
xchg
out
xlat
adc
aam
rorl
xchg
dec
add
outsb
jmp
popa
add
mov
lock
inc
jno
or
rcll
push
add
jns
je,pn
xchg
sub
mov
xchg
inc
jl
mov
inc
in
mov
push
repnz
fnstenv
lds
hlt
loopne
stos
jns
pop
mov
loope
adc
xchg
repnz
pusha
bound
sahf
fsubrl
lahf
loop
jnp
jp
stos
scas
xchg
push
fisttpll
cltd
or
clc
adc
pop
add
xchg
insl
xchg
mov
inc
xchg
aas
jae
mov
xchg
xorl
sarl
xlat
mov
repnz
sub
sbb
cmc
lret
add
mov
iret
in
out
aaa
mov
cmovne
sbb
ret
loop
in
je
mov
and
and
inc
sbb
or
lock
sub
icebp
std
jg
mov
push
ss
mov
iret
jge
or
nop
daa
orb
inc
enter
cmpsb
nop
mov
sub
pushf
pop
mov
sahf
ja
test
xlat
and
cmp
sub
fidivs
mov
ja
nop
pop
test
in
pop
sahf
inc
add
inc
je
sti
jae
idivb
add
sbb
imul
push
push
aam
mov
repnz
lea
testb
xchg
xor
shlb
in
out
scas
fiadds
out
ss
loope
inc
scas
jg
rcl
imul
aaa
push
pop
jbe
dec
fcoml
push
sub
push
mov
mov
push
repz
jge
jge
fbld
adc
mov
mov
shll
xorb
lea
xchg
push
or
adc
das
movsl
add
sahf
inc
mov
inc
dec
flds
dec
loopne
xchg
push
in
mov
paddq
xchg
cmp
mov
push
or
mov
popa
ljmp
lock
mov
rclb
xor
dec
adc
and
adc
js
rorl
sub
divl
movsl
scas
mov
mov
sbb
pop
mov
loope
dec
dec
jmp
fidivs
imul
out
cmp
mov
push
inc
mov
test
xor
and
call
hlt
jle
in
aam
or
icebp
in
jge
out
xchg
stc
hlt
sub
adc
in
push
pusha
mov
stos
shlb
repnz
push
ljmp
test
shrl
push
xor
aad
inc
mov
jnp
or
sub
add
lods
xchg
out
xlat
or
dec
lds
inc
add
pop
stos
test
add
es
bound
shl
jmp
pop
jmp
mov
sub
cmp
test
sbb
dec
inc
aam
sbb
pop
js
mov
dec
push
in
outsl
rcll
mov
xchg
mov
cltd
or
leave
dec
arpl
arpl
mov
ficoml
jecxz
int
jne
push
and
mov
pop
jp
call
cmp
aas
and
aas
or
outsl
aaa
jle
aas
cltd
data16
iret
mov
mov
mov
inc
xor
rorb
icebp
and
jge
je
iret
in
rolb
imul
xchg
call
rcrb
sub
js
add
sbb
jp
push
mov
rcll
scas
sbb
out
add
xchg
icebp
js
xchg
xorl
adcb
pop
lahf
inc
aam
xchg
push
fildl
aas
mov
dec
pusha
push
out
cmpsb
js
in
inc
daa
jnp
leave
mov
jle
fstpt
push
and
call
test
jecxz
outsb
adc
sub
ret
dec
push
iret
and
dec
mov
dec
sub
lods
push
lret
dec
stc
stos
jecxz
daa
ret
aaa
push
and
mov
push
xchg
test
aam
push
cli
or
test
jge
push
icebp
push
xor
movsl
mov
aaa
out
jmp
ret
sub
movsl
sahf
nop
dec
add
or
jg
test
lcall
push
daa
out
add
xchg
mov
cmpsb
sub
enter
jp
jno
cmc
jne
test
daa
xchg
sub
or
bound
js
stos
int
push
ja
dec
sbb
jmp
vmread
push
jne
adc
mov
inc
adc
xchg
int3
pusha
mov
mov
aaa
and
mulb
jo
rcll
and
inc
add
pop
xchg
inc
mov
mov
jno
mov
int
xor
pop
loopne
pop
aas
repnz
adc
sub
into
cmp
lea
pusha
mov
xchg
pop
mov
push
lahf
mov
and
adc
add
mov
mov
pop
pushw
push
adc
es
jg
or
hlt
xchg
stos
jns
jno
ljmp
in
pop
pop
xchg
push
fisttpll
xchg
push
inc
xchg
add
adc
imull
xor
push
aas
dec
cmp
ss
pop
loope
mov
aas
cmpsb
cmpsl
xor
sbb
js
adc
inc
mov
aas
lcall
push
nop
inc
push
enter
xlat
xchg
stc
sub
xlat
inc
fs
mov
push
movsl
xor
sbb
jmp
xlat
jl
stos
in
lcall
pop
push
sti
lret
rcl
or
xlat
out
sbb
xor
shll
push
rorb
std
inc
scas
sbb
jmp
rorb
scas
in
out
xor
jnp
hlt
outsb
xlat
cltd
int
add
adc
out
mul
dec
inc
ljmp
dec
xlat
shrb
dec
leave
mov
fwait
popa
sub
stos
shlw
mov
cwtl
push
adc
fwait
in
mov
roll
movsl
sti
lahf
inc
mov
loop
sbb
push
xlat
jmp
ret
loope
pusha
xlat
sub
nop
or
push
sbb
mov
aaa
dec
and
push
or
jg
fdivp
inc
mov
imul
xlat
add
dec
loope
cmp
and
sub
lret
xlat
mov
stc
adc
out
pop
movsl
push
rorl
xlat
mov
fwait
mov
sbb
adc
xor
jg
mov
jb
in
mov
es
enter
ret
pop
and
repnz
lods
jbe
call
xlat
sub
insl
add
je
cmp
or
ret
cmc
sbb
inc
or
push
push
cmp
addl
jae
mov
mov
jne
gs
push
jo
pop
adc
jmp
add
in
mov
jne
ja
mov
pop
xlat
mov
jnp
scas
lahf
jno
mov
sahf
push
add
cmpsb
rcll
mov
mov
pop
std
xchg
in
sbb
daa
jge
pop
rcll
loope
rcr
or
stos
mov
cmp
mov
pop
xlat
rcll
sub
cli
mov
inc
aam
cmpsl
xlat
or
leave
fcom
es
ljmp
and
test
mov
in
int
adc
and
xchg
dec
mov
loope
pusha
push
sbb
leave
adc
out
movsl
jge
arpl
daa
call
popa
xlat
adc
mov
rcl
inc
mov
jg
stos
mov
hlt
loopne
fstpt
adc
push
imul
cmp
in
xchg
mov
fdivrl
gs
test
mov
mov
popf
hlt
mov
mov
ds
scas
rol
insb
mov
mov
push
push
adc
nop
loop
jb
ret
xor
std
andl
rcrl
mov
out
enter
push
out
xlat
roll
push
outsb
nop
inc
test
xlat
movsl
mov
iret
add
cli
push
xchg
insl
xlat
out
test
mov
std
mov
idivl
cmp
push
jbe
sbb
je
adc
pcmpgtb
lret
fstpt
faddp
adc
xlat
das
cmc
cmp
lods
nop
push
or
adc
and
scas
push
fnsave
shrl
pop
or
icebp
mov
popf
mov
dec
loopne
jle
push
xlat
fidivl
or
test
ja
push
enter
data16
pop
jp
insb
cmc
mull
rolb
pop
aam
lea
jno
stos
jnp
hlt
mov
dec
push
xlat
mov
mov
sub
cmpsb
xlat
mov
adc
inc
xlat
in
inc
dec
bound
sbb
jne
popa
lahf
fldcw
loop
adc
les
inc
je
rorb
fwait
push
in
std
fisttpll
aad
leave
add
xlat
cld
cmp
xor
xlat
and
jns
mov
xchg
mov
mov
cmpb
lret
cltd
arpl
xlat
jbe
lods
mov
xlat
xor
adc
xchg
pop
sarl
xchg
pop
cmpsl
sub
dec
cmp
mov
ljmp
cmpsb
idivl
aaa
fs
mov
aam
sarl
outsb
ss
aas
jg
adc
ret
scas
sbb
mov
and
jbe
std
cmp
mov
sub
mov
lock
sub
cmp
stos
rcrb
xlat
jmp
mov
adc
imul
jo
jb
rorl
mov
jmp
jne
addr16
cmc
imul
mov
push
adc
inc
test
jmp
fcoms
pop
scas
mov
add
sub
shll
shr
pop
jae
fsubl
jge
stc
shlb
out
inc
push
adc
scas
inc
and
popa
lock
add
in
push
dec
xlat
push
xor
sub
mov
jl
bound
sti
xor
xlat
xor
sub
push
int3
dec
sub
adc
ss
roll
inc
loop
roll
and
repz
pop
enter
dec
stos
gs
out
pop
xlat
in
popl
pop
sbb
push
mov
dec
pop
gs
int
dec
xlat
cmp
rcrb
xlat
mov
pop
mov
mov
mov
xchg
int
xchg
xlat
or
rcrl
or
add
aad
jae
addr16
rclb
lea
mov
mov
or
jb
scas
push
lret
popa
mov
jno
shlb
stc
xlat
out
popf
js
ss
ret
xlat
fisttps
int3
dec
cmc
xorb
pop
or
fstpl
int3
mov
sar
out
mov
jae
xlat
mov
fsubl
stc
inc
daa
sub
push
xchg
ret
or
dec
jb
out
inc
lcall
ficoms
outsb
cwtl
sub
lods
mov
ljmp
movl
out
inc
pop
adc
stc
out
mov
xlat
dec
add
rcrb
mov
jne
sarb
lret
pop
jae
xchg
iret
jae
push
repnz
cli
daa
fdivl
dec
mov
mov
enter
lock
jmp
adc
dec
mov
mov
xlat
nop
and
fcompl
cmpsb
cmpsl
push
jnp
lds
sbb
movsl
pop
pusha
cld
mov
ljmp
bound
xchg
and
xlat
sbb
mov
sbb
pushfw
and
cmp
arpl
cmp
fdivrl
adc
inc
cld
ja
std
fadds
daa
imul
push
pushf
ds
inc
mov
sub
push
ja
es
push
cmp
jb
xlat
pop
mov
mov
and
daa
xor
ret
aad
sbb
mov
jne
sub
adc
cmpsb
in
jb
push
or
mov
jecxz
shlb
inc
add
sar
ret
sub
pushf
in
and
pop
mov
mov
xchg
dec
jecxz
aam
xlat
lcall
imul
jmp
jg
mov
xor
adc
fcoml
jl
xlat
in
inc
or
hlt
pop
xor
xor
mov
cli
into
sbb
dec
out
pop
call
mov
mov
dec
lea
fcom
call
out
jns
mov
xchg
shlb
pop
iret
sbb
fdivs
adcb
xlat
jae
ja
xor
xlat
enter
cwtl
and
bound
nop
xlat
orb
clc
push
or
xlat
add
push
jo
mov
xlat
cli
mov
cmpsb
xchg
repnz
js
stc
xor
xlat
push
mov
and
aaa
or
xlat
sbb
xlat
cmpsl
loope
lahf
add
cwtl
cli
scas
pop
add
or
clc
iret
in
mov
jg
mov
aas
push
icebp
pop
shrl
fsubs
adc
fistps
shll
inc
pop
inc
mov
jbe
xlat
test
or
jns
cld
cmpsb
xchg
cmpsb
sbbb
xchg
xor
dec
xlat
adc
push
or
scas
jecxz
cmc
adc
xor
adc
sub
lock
adc
testb
and
lds
insb
add
out
pusha
clc
inc
std
rcrb
rol
sbb
sub
mov
lcall
lock
mov
mov
cs
sbb
stc
dec
xchg
jg
push
jp
mov
sub
xchg
jnp
stc
mov
stos
testl
push
sbb
mov
aam
nop
push
lret
nop
pusha
jg
fs
repnz
mov
aaa
push
sub
fwait
bound
mov
jnp
push
ja
in
inc
mov
and
aas
pop
adc
js
pop
clc
stc
mov
xlat
movsl
hlt
clc
movsb
cmc
sbb
mov
push
daa
xor
xchg
xlat
sbb
sarb
jmp
pusha
rorl
and
jne
lods
daa
nop
push
sahf
rorl
or
xor
mov
push
mov
repnz
add
dec
mov
int
sbb
lret
mov
mov
sub
adc
rcl
shll
ret
xchg
js
inc
aas
loope
pop
add
jnp
jecxz
lods
test
jnp
xchg
aam
jg
rcll
fcoml
rol
repnz
lods
push
scas
add
push
and
aaa
pop
add
mov
in
add
sub
pop
fst
nop
push
hlt
imul
jnp
hlt
and
mov
mov
sub
call
mov
pop
xchg
or
and
and
xor
add
mov
repz
jnp
mov
scas
test
jb
and
lea
mov
mov
shll
mov
xchg
jnp
outsb
sub
jns
pop
pop
and
rcpps
mov
push
shll
sbb
mov
nop
insl
or
fwait
pop
mov
stos
jno
cmpsb
stos
dec
jae
push
cmpsl
xchg
ret
inc
adc
or
test
decb
nop
xchg
xchg
negl
sahf
test
ret
jg
mov
or
cld
push
sbb
mov
push
jp
sbb
fcmovnb
mov
fwait
xchg
and
or
sbb
mov
in
int3
mov
mov
sti
mov
cmp
inc
jge
adc
gs
fiadds
jne
push
inc
lds
movsb
ret
push
loop
dec
nop
dec
sbb
out
sbb
inc
sbb
daa
dec
ljmp
ljmp
aaa
push
xchg
pop
out
push
push
orl
leave
call
or
add
mov
imul
andl
mov
jnp
xor
les
aam
mov
loop
xor
insl
dec
adc
jle
fistl
loope
inc
scas
push
ja
mov
loope
and
push
sub
mov
fsubrl
adc
aam
dec
cmpsb
cmpsb
push
pop
aam
add
jmp
jge
hlt
sahf
sub
andl
addb
divl
sub
xor
mov
push
xchg
dec
ss
or
push
sbb
dec
sbb
int3
in
xor
dec
cmp
repz
xchg
int3
nop
hlt
pop
sbb
and
and
es
out
ljmp
xchg
jge
mov
sti
rorb
lcall
out
xchg
or
decl
nop
sub
mov
pop
adc
adc
dec
xchg
in
popf
cmpsl
jae
xor
sbb
ja
push
adc
lock
jg
out
or
movsb
push
jbe
repnz
jle
or
test
lret
push
mov
sbb
aad
xchg
mov
mov
out
fnstsw
test
jo
cmpsl
mov
adc
mov
out
jge
loope
xchg
aas
lret
jle
push
adcb
inc
scas
pop
cmc
and
dec
cmp
bound
adc
adc
cld
cs
xchg
dec
inc
or
out
sub
divl
fists
clc
sub
xor
arpl
add
xor
jnp
push
out
pop
test
adc
lea
testl
jg
inc
pop
push
and
add
std
mov
test
data16
xchg
andl
pushf
flds
or
sahf
sbb
push
jb
adc
push
and
fstps
imul
add
or
loopne
int
nop
sbb
cltd
outsl
and
sbb
mov
lret
dec
jnp
push
bound
int
push
sti
push
pop
lds
fmul
mov
scas
mov
xchg
sbb
jg
inc
std
or
aad
ja
adc
cmc
testl
nop
push
jno
mov
and
lds
hlt
ret
pop
rcl
cmc
pop
lret
dec
in
add
cmp
cld
adc
ja
sahf
xchg
cld
sbb
gs
call
adc
xchg
in
enter
test
push
push
adc
outsl
nop
ljmp
cld
sahf
mov
push
xchg
jne
shrb
mov
and
aam
inc
sub
jecxz
lret
adc
cmp
push
icebp
dec
les
test
mov
jno
fnstenv
cmp
into
cmc
jo
out
jl
pusha
add
out
jns
jge
das
shrl
sbb
mov
sbb
jne
shl
lods
cmp
mov
icebp
cmpsl
jg
mov
shrb
sbb
adc
scas
xor
ret
mov
adc
mov
push
movsb
fiaddl
out
pushf
xchg
jne
cs
xchg
jg
idivb
sarb
into
pop
jo
test
adc
jne
fcmovbe
cs
mov
aad
push
push
daa
pop
xlat
ja
mov
shrl
add
push
fdivs
sbb
xor
test
adc
sbb
adc
pusha
iret
cmp
arpl
into
xlat
add
inc
lret
sub
xlat
xchg
lcall
fnsave
scas
rorl
dec
imul
js
call
loope
ret
sbb
pop
add
nop
aad
push
rcl
out
bound
cmc
les
test
push
push
push
jmp
xlat
lahf
scas
pop
pop
inc
and
outsb
push
xlat
daa
sub
mov
adc
push
pop
aam
pushf
out
scas
xlat
lock
adc
lret
xor
pop
push
jb
imul
adc
and
scas
andl
repnz
mov
loop
inc
pop
adc
dec
xlat
push
scas
adc
inc
add
push
lret
adc
pop
leave
mov
jmp
sbb
xlat
push
inc
cmp
dec
aas
xlat
out
jle
les
push
xlat
aaa
pop
or
add
std
nop
dec
sbb
jl
cmpsb
nop
mov
mov
iret
imull
scas
pop
pop
mov
fsubs
jae
hlt
push
mov
nop
push
sub
scas
inc
sarl
sub
mov
gs
adc
or
inc
sub
cmpl
ror
cmc
xchg
loope
xor
fimull
xchg
xchg
movlps
xchg
jae
pop
push
sbb
mov
fbstp
scas
pop
dec
lcall
pop
ret
mov
sbb
or
xor
sub
incl
jbe
nop
enter
ret
sub
xor
int
xchg
lret
insb
pop
mov
insl
notl
clc
nop
in
pop
jo
aaa
xor
jle
sti
push
push
aam
jg
push
fmuls
pop
or
aam
jb
mov
adc
xor
pop
xlat
xchg
insl
and
mov
sub
sub
xlat
xchg
std
jge
dec
nop
hlt
pop
xlat
leave
inc
or
mov
push
in
repnz
pop
scas
xlat
stc
push
push
mov
xchg
dec
mov
icebp
or
push
or
push
mov
jae
cmp
pop
mov
pop
aam
sbb
das
pop
inc
mov
shr
rorl
imul
fwait
jno
test
sbb
ja
xlat
sub
pop
add
iret
cmp
sahf
fists
pop
popf
sbb
push
xor
jae
int3
mov
mov
sub
nop
loop
icebp
or
cwtl
adc
mov
rorl
xlat
aaa
push
enter
cld
mov
lock
out
dec
subb
mov
xchg
dec
xlat
xchg
push
push
out
and
sub
dec
mov
mov
jp
xlat
add
shrb
clc
and
mov
addr16
adc
xlat
mov
movsl
inc
push
loope
jne
lret
int3
jle
jbe,pn
add
insl
mov
aas
add
xor
push
xlat
or
cwtl
sbb
jl
jmp
mov
in
or
mov
filds
subb
les
pop
hlt
adc
add
pop
dec
aam
arpl
rcl
in
filds
out
mov
out
adc
push
jp
insl
pop
xlat
add
push
sub
xor
pop
xchg
xlat
and
sti
mov
arpl
pop
stc
rolb
jno
xlat
mov
mov
mov
adc
cmpsb
cmp
test
xlat
add
bound
dec
movsb
xlat
adc
jp
cmpsl
xlat
push
and
fnsetpm(287
icebp
sbb
mov
call
cmp
xor
lahf
inc
in
lds
sub
jae
xlat
imul
fadds
mov
ret
je
adc
mov
xor
shr
cli
and
dec
xor
jb
inc
xlat
jno
pop
sti
daa
aas
sub
jae
inc
int3
js
out
xlat
pop
push
imul
mov
cmp
repnz
xchg
or
ret
jbe
push
imulb
test
hlt
sbb
inc
dec
and
sub
daa
stc
bound
movsb
mov
push
jp
or
cltd
fisttpl
lods
lahf
into
push
lods
and
sarb
scas
and
clc
lds
scas
xorb
adc
shl
in
push
dec
xor
xlat
xorb
push
jbe
stos
mov
std
adc
mov
loopne
xor
iret
aad
in
and
and
xlat
subl
jb
daa
xlat
sbb
shl
xchg
fwait
popa
rolb
mov
cmpsl
mov
pushl
lahf
cmpl
outsl
gs
rorl
fs
inc
iret
mov
es
or
roll
xlat
inc
and
pop
iret
adc
adc
jo
xor
add
lock
mull
jmp
adc
out
mov
cmp
iret
push
and
sbb
sahf
or
mov
cmp
out
jnp
dec
aad
push
clc
cmp
dec
xlat
mov
je
lahf
push
push
pushf
or
push
lret
sub
aam
out
xlat
sub
push
or
cmp
jae
cmc
jge
cmp
xlat
in
mov
sub
lret
dec
movsl
popf
inc
scas
cmc
jae
xlat
fcompl
std
jecxz
out
jg
rcrl
stc
push
xlat
cmc
and
sub
repz
cli
rorl
iret
arpl
jo
orw
push
roll
daa
xlat
jg
or
xlat
arpl
add
stos
outsl
rorb
fimuls
mov
xlat
pop
daa
out
mov
aas
adc
and
dec
inc
pop
push
xlat
pop
push
jle
cmp
out
xlat
lods
imulb
xchg
std
xor
sbb
inc
orb
cmpsl
push
push
seta
jae
testb
cltd
xchg
aaa
std
push
dec
mov
xlat
pop
push
pusha
decb
call
add
mov
in
iret
dec
push
ds
xlat
test
aad
or
and
push
mov
jns
notb
outsb
xlat
dec
fisubs
xor
sbb
arpl
xlat
loop
call
bswap
or
mov
movsb
std
xlat
mov
sub
push
mov
mov
adc
cmpsb
dec
and
iret
cmp
sub
roll
aaa
xchg
lret
sub
xlat
sbb
xlat
add
lret
movsb
push
outsl
xor
int
loope
add
sbb
pop
cmpsb
jg
xchg
sub
xlat
pop
cmovne
xchg
xchg
enter
and
iret
jbe
in
popf
jo
push
data16
xlat
xchg
jle
or
push
xor
je
fistpl
xlat
int3
jl
fsubs
nop
add
repnz
or
xchg
dec
popf
push
xlat
add
xchg
rcr
xchg
push
jp
mov
and
ljmp
mov
into
pop
aad
push
test
xor
ljmp
bound
xlat
leave
push
inc
repz
mov
cmp
mov
add
icebp
ficoml
push
scas
loopne
mov
data16
xchg
dec
repz
loope
rcll
and
adc
mov
sar
ret
pop
scas
nop
xlat
dec
adc
jl
dec
imul
push
mov
and
xchg
jge
mov
inc
jno
jne
mov
fst
pop
mov
sub
inc
or
stc
sbbb
push
rcr
sbbl
jns
mov
popa
cmpsb
imul
sub
fldl
cli
xlat
lock
fwait
xchg
sbb
flds
dec
mov
rcrl
arpl
mov
jmp
jmp
push
mov
in
xlat
mov
enter
dec
cmp
loop
test
add
dec
bound
iret
incb
roll
push
insb
rdpmc
xlat
jmp
mov
lods
xlat
push
clc
movsl
iret
dec
push
jae
xlat
aam
mov
dec
incl
bound
stos
hlt
lahf
pop
xor
mov
mov
lcall
adc
not
sub
shll
pop
adc
jge
ljmp
fildl
sub
xlat
pop
xchg
and
aam
adc
lea
mov
daa
ss
in
xchg
roll
iret
jg
in
pop
das
adc
decb
cmp
jl
aaa
fs
xchg
mov
adc
lods
jg
push
ficomps
rorb
aad
int
cld
and
xchg
sub
cmp
xlat
orl
insb
mov
mov
push
inc
xor
scas
xlat
lds
fs
cmp
mov
xlat
sahf
push
fwait
cmp
sub
xlat
jp
popa
lahf
bound
mov
fwait
addl
outsl
iret
fbstp
cwtl
out
push
test
xlat
out
loope
andb
shr
push
add
sub
push
fisttpll
mov
fisubrl
jo
fwait
xlat
loopne
shlb
mov
cmp
xor
dec
sti
adc
adc
in
push
jo
repz
test
xor
out
pop
aad
outsb
cmp
std
xlat
mov
jmp
jg
sbb
dec
xlat
hlt
mov
popa
std
xlat
test
mov
aad
lcall
leave
pushf
pop
add
and
scas
test
mov
lock
repz
xlat
lods
push
xchg
not
xchg
pop
push
loopne
mov
sbb
loop
aaa
mov
mov
fnstcw
cmc
xlat
imul
ror
jne
not
lds
xchg
imul
push
fidivl
mov
xlat
lret
pop
sub
xchg
decb
mov
sbb
fildl
and
push
faddp
jg
mov
hlt
stos
xlat
adc
add
sub
pop
xchg
xlat
ja
in
push
lods
aaa
mov
stos
xor
xlat
dec
fs
inc
pop
jp
mov
mov
dec
jnp
sbb
mov
pusha
xor
test
mov
push
scas
mov
mov
loop
jbe,pn
push
add
out
cmpsb
scas
mov
faddl
ret
push
rcrl
icebp
cmp
adc
adc
add
adc
inc
ud1
stc
xor
divb
or
add
mov
fsave
jns
repnz
aad
jno
push
hlt
push
push
sbb
je
ja
loopne
lret
inc
push
mov
xchg
add
xchg
lcall
sub
fsts
subl
mov
sbb
xchg
mov
fisubrl
xchg
subl
outsb
inc
xchg
inc
add
add
shll
fnstenv
dec
data16
lods
loope
stos
mov
adc
jnp
add
cmpsl
nop
aaa
pop
inc
and
dec
cmpsl
inc
test
aaa
xchg
mov
out
xchg
shlb
lock
nop
test
cli
dec
xor
and
mov
pushf
aad
cmp
lret
repz
xor
pop
idivl
int
jp
jmp
xchg
mov
ljmp
inc
add
test
call
bnd
pop
mov
sub
adc
pop
ret
xchg
pop
inc
mov
ret
std
and
movsl
push
sub
sahf
lock
lock
lea
sbb
xchg
stos
ficoms
int
push
and
int3
les
inc
daa
iret
xchg
popa
insl
out
dec
test
pop
iret
notb
fbld
loopne
dec
ss
fnsave
test
jecxz
test
loope
mov
mov
lahf
in
push
inc
rclb
sbb
ss
fistps
std
fdivs
xchg
rol
std
roll
pop
insb
ret
push
jb
and
stc
shlb
push
sbb
nop
jg
mov
mov
cmp
mov
cmc
aaa
daa
out
sbb
inc
xor
sbb
rcr
add
nop
dec
shl
aad
stc
mov
pop
int
add
mov
push
fdivl
wbinvd
jnp
pop
sahf
pop
out
or
and
daa
ret
sub
push
sbb
mov
addl
push
in
mov
mov
jecxz
cmp
test
ds
add
pop
ss
scas
or
mov
les
sub
cmp
shll
sahf
daa
outsl
xlat
sarl
add
fcmovbe
dec
xlat
subl
inc
mov
or
lcall
mov
jp
scas
fcmovnb
sbb
mov
or
lret
xlat
add
mov
xlat
adc
mov
push
xlat
mov
mov
lods
mov
daa
pushf
and
mov
in
jno
mov
adc
xlat
icebp
mov
int3
mov
outsb
je
jbe
and
mov
xor
xlat
inc
cmp
xlat
jle
lock
xor
or
xlat
sti
push
jmp
cmp
shrb
jnp
pop
dec
add
movsl
sbb
int3
xlat
pop
push
mov
adc
mov
xlat
enter
push
fsub
xlat
dec
cmp
inc
xlat
xorl
movsl
pushl
aam
sub
xchg
lret
xlat
cmpsb
sbb
test
frstor
shlb
dec
xchg
xlat
mov
mov
outsl
add
loop
repz
scas
in
loop
xlat
push
imul
scas
popf
loop
and
xchg
sti
inc
test
push
push
pop
adcb
imull
and
xchg
mov
dec
imul
or
cltd
movsl
xor
or
add
push
dec
insb
push
std
add
or
mov
push
sbb
xchg
std
and
pop
loopne
enter
pop
mov
and
stos
cmp
mov
aas
test
int3
out
scas
arpl
inc
cwtl
pop
mov
ss
testb
adc
inc
idivb
scas
addps
ret
out
mov
jnp
jg
nop
pop
lcall
xchg
inc
inc
mov
loope
dec
int3
mov
push
adc
xchg
lods
sbb
push
lcall
bound
pop
cmp
pop
gs
dec
jmp
inc
adc
mov
mov
inc
xor
mov
rol
sbb
fsts
jge
sbb
dec
adc
int3
sbb
jp
cltd
push
cmp
inc
lock
lcall
mov
pop
jle
jmp
ret
mov
dec
pop
lods
cmc
loope
push
or
mov
lahf
cwtl
push
nop
and
aad
pop
xchg
mov
inc
xor
or
inc
xchg
adc
daa
icebp
inc
data16
mov
adc
idiv
cmpsl
scas
fidivrl
outsl
call
inc
mov
xchg
pop
adc
popf
ss
inc
mov
xchg
dec
lahf
and
in
decl
pop
test
orb
add
jo
rcl
dec
incl
fldcw
ret
xchg
dec
int
dec
pop
pop
test
fwait
sub
decb
jo
in
and
jp
cmp
ss
decb
rorb
rclb
das
nop
jmp
filds
fdivrs
jg
mov
popf
repz
mov
xchg
mov
out
sbb
push
dec
xchg
xchg
and
aam
filds
nop
repz
rcll
and
xchg
dec
jne
jbe
push
inc
cmpsb
stos
inc
iret
adc
cmp
xchg
sbb
stos
push
dec
insb
pop
pop
ja
and
xor
xchg
test
out
jno
ljmp
out
lret
xor
ds
sti
mov
jne
jg
push
cmpsl
fimull
aaa
stos
rorl
mov
cmp
mov
push
dec
pop
lahf
aad
adc
dec
mov
jmp
lock
and
in
inc
pop
rol
inc
inc
lea
pop
pop
lahf
cltd
sbb
int3
lcall
dec
xchg
das
movsb
mov
lret
push
pop
out
mov
aaa
push
dec
mov
mov
dec
pop
add
repz
mov
jae
aad
ljmp
adc
rorb
or
or
xlat
ret
fdivp
sub
cmp
xor
out
leave
je
push
push
xor
dec
lds
adc
rcrl
out
mov
xlat
sbb
out
cmc
jae
jbe
mov
xlat
and
jl
pop
xchg
outsb
mov
sub
shlb
jp
dec
mov
cmp
adc
std
out
xor
push
mov
fldl
mov
mov
ret
push
test
pusha
test
adc
jecxz
or
sbb
rcrb
xlat
cmp
cltd
xchg
cmp
arpl
inc
cmp
shll
je
cmpsl
addr16
push
dec
sbb
adc
inc
xlat
push
rorb
iret
jl
movsl
lods
adc
nop
pmaddwd
insl
and
push
inc
cmp
cmp
mov
pop
xlat
lds
addr16
iret
jl
gs
sbb
mov
push
xlat
in
bound
pop
cmpsl
adc
inc
int3
lds
mov
or
xor
xor
ds
push
daa
xlat
stc
ss
jmp
scas
add
mov
inc
cmpl
adc
cmpsb
mov
mov
negb
jb
enter
sar
add
jmp
mov
mov
jo
push
mov
inc
jl
dec
ss
jnp
push
imulb
shrl
jbe
and
jecxz
hlt
out
mov
push
scas
push
lret
lret
test
xchg
and
into
push
jg
lods
mov
cwtl
add
pop
mov
inc
in
xlat
in
add
or
stc
xlat
imul
push
inc
outsl
inc
xlat
pop
in
mov
xlat
jo
repz
scas
andb
clc
fcmovbe
add
jbe
test
mov
jns
inc
mov
nop
jo
outsb
push
mov
fsts
dec
pop
jbe
loopne
pop
test
in
xchg
cld
clc
inc
sub
pop
testb
scas
adc
lahf
nop
add
jmp
sbb
push
pop
loope
adc
into
mov
cmpsb
mov
insl
cli
fwait
rcl
int3
add
xor
aad
sub
xchg
sub
js
shlb
xorl
mov
imul
shrl
sbb
rcrl
xlat
pop
out
jnp
test
rcrb
std
lahf
mov
mov
jnp
ror
pop
idiv
outsb
xlat
insb
add
test
scas
xchg
pop
ljmp
sub
andb
mov
dec
add
mov
push
lods
jge
sbb
ds
mov
lret
jg
sbbb
mov
clc
mov
xor
jmp
int
fbstp
and
out
jo
hlt
sbb
inc
ja
imul
faddl
sub
lock
jb
inc
cmc
mov
pop
lret
pop
loop
ljmp
jns
mov
sti
push
lods
inc
jne
scas
mov
cmp
mov
cmp
dec
xchg
aas
fst
cltd
xor
fcoms
xor
ds
jne
lods
mov
xor
or
dec
mov
sbb
arpl
fstp
popa
jnp
dec
fs
xlat
int
mov
mov
xchg
or
adc
xlat
inc
cmp
pop
enter
xlat
ror
jns,pt
fildl
bound
int3
sbb
sahf
jno
call
or
rcrb
clc
inc
xchg
pop
add
pusha
out
jl
outsb
mov
dec
inc
cmp
adc
enter
fwait
movsl
imul
and
xlat
inc
jmp
mov
jg
aaa
ficoms
shl
cmp
outsl
jne
cli
xchg
stc
inc
xlat
subl
xlat
xor
shll
cmpb
cmp
lds
mov
out
xorl
dec
xchg
adc
sti
shrb
jmp
mov
xor
cld
lcall
out
xlat
or
cli
adc
xchg
rcrw
mov
sarl
jbe
xlat
psllq
pop
jg
mov
rol
push
cwtl
inc
jo
stc
lods
out
lahf
xor
dec
xlat
jns
loop
orl
test
push
push
ret
xlat
out
dec
aaa
pavgw
mov
inc
rcl
push
or
ljmp
adc
fsubr
jmp
pop
sbb
stos
ss
adc
and
enter
leave
adc
subl
jne
adc
iret
je
arpl
repnz
xlat
adc
jb
pusha
mov
das
cmpl
or
and
inc
fcom
pusha
sub
adc
popa
aam
nop
ficomps
mov
xlat
in
push
int3
xor
push
mov
aad
inc
push
xlat
lret
mov
js
mov
cmp
jb
jae
xlat
mov
jnp
pusha
ret
xlat
lcall
iret
xlat
std
orb
mov
push
vpshufhw
test
adc
add
xchg
mov
jo
jns
icebp
repz
jnp
lahf
aad
fsts
pop
pop
pop
xlat
xor
or
aas
pop
roll
or
xchg
xor
adc
inc
cs
aaa
mov
push
nop
ljmp
sub
add
sbb
jecxz
mov
sbb
int
int3
xor
xor
adcb
mov
cli
jne
iret
mov
faddl
or
shlb
mov
lods
xlat
in
mov
jbe
xchg
jecxz
jne
xlat
test
das
insl
xlat
pusha
aad
cmp
pop
inc
popa
out
rorb
aas
jne
rcl
adc
in
push
negb
mov
cmpsb
sarb
pop
xlat
cli
xor
add
in
std
adc
xchg
inc
adc
outsb
inc
scas
push
or
out
mov
call
in
xchg
jl
xlat
pop
scas
das
test
sahf
jmp
xlat
inc
fcos
addr16
dec
cld
push
inc
pusha
xlat
jne
iret
scas
into
cwtl
mov
lcall
xlat
cli
hlt
ljmp
xlat
in
pop
je
xchg
jp
iret
gs
and
push
scas
jno
mov
xor
cmp
sbb
pop
test
addr16
jge
xlat
cmp
add
push
scas
jmp
xlat
cmp
pop
adc
xlat
fs
mov
or
sub
mov
test
push
add
inc
popf
aad
aas
int3
mov
inc
sbb
mov
ficompl
inc
stos
push
xlat
dec
dec
stc
aam
cmc
and
adc
xor
adc
mov
inc
sub
adc
fistl
lea
addr16
mov
or
xchg
js
ljmp
cmp
jmp
outsb
out
int
jle
and
aas
data16
repz
push
nop
outsb
mov
xor
mov
mov
push
ja
inc
push
mov
test
addr16
leave
ret
mov
stc
xchg
outsb
xor
in
push
dec
inc
fisubrl
xlat
aam
rorb
loopne
sub
cmc
pop
fldl
shll
or
mov
mov
mov
les
rorb
loop
jecxz
xchg
insb
aad
xchg
bound
cltd
cmovnp
add
hlt
push
lret
pop
push
fmul
addb
mov
mov
xchg
lcall
mov
shrb
shlb
push
inc
adc
and
adc
pop
fwait
jne
xchg
adc
ret
xchg
shll
cmc
cs
pop
adc
or
and
pop
pop
mov
loop
jae
mov
mov
and
in
aam
adc
stc
adc
ss
ret
mov
sti
lahf
imul
push
jo
nop
mov
mov
pop
adc
outsb
mov
jmp
mov
daa
mov
xchg
push
call
or
inc
fidivs
jg
adc
loopne
pop
cli
jp
mov
sub
fsubr
test
mov
jno
cmpsb
push
imul
out
inc
fdivr
aas
jne
add
insb
fwait
sbb
leave
nop
push
lea
out
push
sub
cs
ret
pop
aam
sub
imul
jecxz
jbe
stc
push
icebp
aam
pop
shl
fildll
xor
lds
xchg
jg
ss
mov
pop
addb
sbb
mov
jns
mov
sub
inc
jnp
popf
aad
mov
insl
cmp
loope
bound
in
scas
xor
cmp
test
jae
cmp
sti
in
mov
test
std
cmp
xlat
inc
fimuls
jns
xchg
ljmp
xchg
in
icebp
std
sbb
jne
xchg
push
dec
hlt
lcall
imul
pop
and
cld
stc
js
bswap
scas
dec
push
je
stos
or
sti
adc
sub
push
aam
std
lret
push
leave
or
mov
jp
mov
mov
lods
push
movb
aam
add
inc
adc
out
xlat
adc
cs
adc
jnp
sbb
mov
mov
loopne
and
jle
mov
fiadds
xor
mov
leave
mov
mov
fwait
fs
dec
xor
lods
push
fistpl
mov
in
sub
nop
cmp
arpl
imulb
adc
jmp
sti
mov
out
shl
movntq
out
addr16
dec
addr16
cs
mov
lods
inc
jmp
in
push
xchg
mov
mov
jp
push
shl
or
inc
cmp
add
cmp
pop
mov
pop
fsubrs
xchg
in
aad
cmc
scas
lods
mov
push
jnp
call
sbbb
scas
aam
js
mov
inc
fimuls
jbe
sbb
insl
cmp
scas
es
and
mov
dec
inc
rorl
dec
add
xchg
sbbl
xchg
mov
jmp
mov
nop
add
mov
adc
xor
cld
or
sbb
mov
mov
cltd
nop
mov
lods
or
and
xacquire
or
mov
stc
inc
sbb
sub
jb
dec
add
cmp
sbb
mov
adc
push
cli
gs
bound
xchg
adc
mov
sbb
cmp
jnp
shll
mulb
repnz
add
push
mov
cld
aad
inc
push
sub
xlat
cmp
test
std
jp
or
mov
aam
fldcw
mov
ljmp
push
nop
decb
enter
stos
xor
push
dec
scas
mov
addl
hlt
enter
xchg
pop
jmp
call
lcall
adc
sbb
scas
mov
mov
nop
sub
mov
fwait
push
fcomi
pop
mov
cmpsl
rorl
nop
dec
out
test
push
or
rorb
adc
mov
mov
in
jbe
lret
insb
call
sbb
mov
jg
mov
mov
add
inc
inc
nop
inc
mov
loope
aam
shrl
ds
mov
out
sbb
dec
jo
lcall
mov
jl
fists
sahf
addr16
xlat
rol
add
cli
xor
arpl
cmpsb
mov
mov
mov
adc
imul
adc
jle
mov
lea
inc
sub
mov
or
sahf
mov
adc
rcrl
mov
cmp
adc
xchg
test
stos
popl
ficoml
out
nop
sbb
mov
adc
scas
dec
mov
es
jge
jnp
sbb
sbb
dec
clc
inc
outsb
out
mov
ds
inc
sub
stc
add
lods
sbb
outsb
aaa
mov
shrl
jae
and
fwait
lds
push
imul
jmp
jo
pop
add
insl
cmpsl
sbb
xlat
repnz
push
jb
movsb
insb
pop
loope
jge
aad
dec
sbb
mov
cmp
fwait
push
int3
push
aad
pop
repz
aas
cmp
into
adc
fildll
outsb
xchg
scas
cmp
pushf
sbb
jge
mov
mov
stos
or
nop
pop
lods
test
mov
pop
sub
cmpsl
cld
loope
jns
jmp
movsl
ja
dec
cmpsb
pushf
push
or
fcomp
rcr
mov
dec
enter
shr
pop
push
xor
mov
sbb
fldcw
push
enter
inc
andb
dec
subb
in
dec
jb
sbb
mov
ret
mov
inc
adc
repz
or
in
sub
rcr
inc
dec
jo
aaa
sub
aas
adc
mov
jnp
pop
mov
test
xlat
xchg
mov
and
dec
nop
aad
insb
in
xor
inc
jmp
pop
jmp
nop
sahf
pop
xor
cmc
pop
and
notl
mov
cltd
mov
mov
repz
dec
jmp
scas
nop
notl
pop
fisubl
sbb
orb
add
daa
out
insb
push
or
pop
pushl
push
or
mov
cmp
xorl
dec
jmp
mov
xor
inc
xlat
stos
mov
nop
fidivl
xchg
mov
mov
repnz
xchg
iret
and
mull
dec
inc
sbbl
cmc
loopne
std
push
ds
xor
xchg
cmp
iret
imul
inc
aad
lret
sarl
push
cltd
shl
mov
push
dec
pop
fisttpll
xor
push
mov
xorb
fwait
je
ret
mov
xchg
fsubrl
sbb
push
fsts
mov
add
test
ds
cld
repnz
stc
aad
dec
jge
fildll
xchg
xchg
stos
cmp
outsl
stos
cli
mov
sub
orl
xchg
pop
jnp
fsubl
jo
jae
push
mov
and
mov
test
nop
or
xor
cmpsl
xchg
push
data16
sbb
push
xchg
mov
and
adc
add
push
push
daa
cmp
pop
xchg
bnd
nop
pop
ret
jne
dec
add
cmpsl
sub
movsl
cmp
mov
sbb
mov
mov
push
cmpsb
jbe
imul
pushf
das
and
mov
xchg
es
jg
inc
test
xchg
popf
call
adc
lret
clc
mov
adc
test
jl
push
out
les
dec
push
stos
js
push
push
push
xchg
mov
imul
in
jle
push
xor
fbld
iret
or
ljmp
fs
pop
dec
sbb
jl
inc
loop
mov
add
dec
pop
pop
aaa
pop
lret
push
jecxz
enter
pop
mov
and
aam
mov
mov
sar
mov
mov
rol
sbb
mov
outsb
xor
or
mov
xchg
xchg
fwait
xor
sub
cmp
in
lea
aaa
mov
inc
xchg
out
les
mov
cld
dec
inc
cmp
movsb
cmp
mov
gs
stc
push
push
ret
shll
and
sub
pop
bound
ja
sub
arpl
jl
xchg
mov
adc
xor
mov
cmp
pop
mov
lock
js
test
into
xchg
lds
test
out
xchg
dec
aas
test
adc
xchg
cmp
rorb
mov
jmp
mov
ljmp
add
jl
push
int
or
and
popf
mov
jge
sub
sbb
rolb
out
and
mov
pop
inc
rcll
push
jnp
pusha
cmp
jecxz
test
rorl
jmp
add
ljmp
adcl
insb
adc
sbb
lret
lods
pop
mov
pushf
fs
push
pop
cmp
gs
aam
sbb
cmpl
test
and
orl
out
addr16
pop
nop
shlb
push
pop
mov
xor
aas
cld
cmp
pop
and
fcompl
cmc
mov
or
lcall
xchg
xor
cmp
adc
daa
test
cmc
stc
inc
scas
lods
fmull
repnz
jge
xchg
pop
cli
lods
add
and
pop
xchg
sub
enter
loop
cmp
outsl
and
fcmovnbe
std
test
insb
inc
add
movsl
mov
or
data16
roll
push
xor
popl
xchg
cmp
mov
lock
mov
pop
sbbb
and
inc
sub
jg
rorl
inc
stos
sti
fincstp
inc
pop
iret
xor
lods
out
test
inc
lahf
xorl
mov
add
pop
mov
lret
cltd
daa
notb
xor
rorb
jae
xchg
cmpsl
out
dec
jnp
or
mov
lcall
arpl
stos
les
sbbl
push
xor
adc
jmp
ret
out
mov
mov
faddl
inc
lahf
mov
or
push
mov
xchg
mov
sbb
inc
pusha
ret
mov
scas
movsb
popf
out
jnp
sbb
xchg
popl
test
mov
sub
in
loopne,pn
and
pop
pop
cmc
pop
gs
flds
out
stos
stos
mov
in
cmp
jge
push
pop
ret
in
pop
fsub
sub
rcr
mov
cmp
lea
push
loop
cld
dec
dec
adc
test
fists
ret
push
add
stc
fisubrl
je
or
dec
xor
nop
and
sbb
or
pop
mov
inc
cltd
push
inc
scas
mov
xor
xor
aad
mov
sahf
bound
xchg
dec
es
cmp
mov
pop
out
jge
add
sub
es
test
nop
jo
out
cmp
sub
mov
sbb
push
lock
movsl
iret
sub
aas
add
and
push
push
fnstenv
jns
lret
jns
push
faddp
mov
outsb
jb
push
xchg
mov
and
adc
xchg
mov
mov
out
xor
mov
mov
mov
add
jnp
test
aad
nop
iret
test
scas
dec
and
fdivl
pop
jbe
lea
test
imul
add
frstor
mov
rorb
and
xchg
adc
test
inc
pop
inc
add
test
fcmove
imul
sub
loope
sub
ret
mov
pop
add
pusha
lahf
sbb
loop
mov
adc
lret
adc
cmc
cmc
aad
cltd
call
xor
sub
ja
sti
inc
and
inc
dec
inc
out
push
sbb
bound
mov
mov
jb
shlb
insb
mov
xchg
stc
add
mov
mov
nop
ss
xchg
out
inc
shlb
adc
fwait
push
mov
push
rcr
or
and
movsb
adc
aam
xor
loop
sbb
adc
pushf
imul
stc
sub
xor
xchg
mov
pop
xor
lcall
jg
jmp
nop
xchg
clc
outsb
cltd
push
or
adc
aaa
or
data16
dec
pop
imull
in
int
add
sarb
sbb
icebp
jns
cld
mov
jbe
add
add
cltd
adcl
test
mov
sarl
add
stos
mov
sbb
les
insb
ja
dec
or
ret
lds
inc
fimull
loope
inc
inc
test
cmp
scas
fldl
cmp
jb
pop
push
sar
inc
fwait
ljmp
mov
sbb
xor
cmp
pusha
lahf
sbb
and
ret
mov
mov
pop
scas
imul
rcll
mov
dec
fdivrl
movsl
push
mov
xor
push
cmpsl
jle
adc
repnz
mov
pop
lods
add
and
flds
and
int3
add
xchg
push
pop
test
out
imul
xchg
cmp
repnz
pop
add
pusha
add
out
xchg
mov
push
sbb
stc
xor
ficoms
sbb
and
mov
popa
sbb
adc
cmp
std
in
nop
cmp
push
call
push
adc
sub
ror
stos
repz
mov
lea
inc
sbb
jae
inc
sbb
call
sub
into
sub
mov
mov
lret
nop
dec
sub
push
mov
mov
aam
lea
or
xchg
fnstsw
shlb
push
jb
imul
xor
dec
add
icebp
test
popa
mov
add
push
or
add
in
jp
and
xchg
mov
call
test
pop
xchg
add
xchg
lea
xor
fbld
mov
iret
pop
xchg
adc
fdivl
sahf
insb
enter
dec
inc
xchg
pop
xchg
dec
cs
push
jl
sahf
pop
or
nop
arpl
cs
add
or
aaa
nop
xchg
push
aam
adc
ja
sbb
icebp
fwait
sub
in
movsb
jge
push
lcall
das
push
jg
fsubs
lods
dec
inc
sub
fisttpll
xorl
add
fchs
push
mov
and
sub
in
ja
add
inc
loope
outsb
sbb
xor
or
and
cmp
stos
jl
or
sbb
movsb
testl
dec
nop
push
cmp
pop
and
or
lods
push
and
daa
std
or
jno
mov
mov
pop
in
mov
in
push
push
shll
lcall
outsb
push
push
mov
xchg
and
or
nop
dec
push
enter
and
xchg
imul
inc
xorb
sub
iret
inc
aaa
rcll
icebp
pop
fmuls
dec
ja
adc
fs
decb
lret
cli
shll
rcll
push
push
outsb
or
push
cmp
scas
push
dec
ljmp
idiv
imul
sub
inc
push
sbb
shll
xor
mov
add
gs
out
repnz
out
insb
jg
xchg
sbb
jg
or
setne
stos
out
std
push
jbe
mov
push
push
xor
inc
xor
mov
and
add
sbb
shlb
ljmp
insb
pop
movsb
aam
or
adc
scas
rolb
adc
push
or
push
pop
out
xchg
inc
cmpsb
insl
jmp
iret
pop
pushf
aad
mov
mov
dec
mov
rcr
fnsave
mov
jnp
repnz
ficomps
dec
aam
jb
cmc
inc
cmp
jge
cmp
push
decb
or
adc
aad
lods
pop
loope
inc
sub
lcall
lods
xchg
fld
std
mov
xchg
jmp
add
rcll
out
mov
xchg
paddb
loope
lods
lods
adc
dec
les
clc
aas
orb
jne
push
pop
ja
push
ja
add
aaa
mov
outsb
int3
cmc
stos
pop
xlat
test
repz
sub
mov
xor
leave
test
push
jbe
out
jb
mov
icebp
jecxz
mov
aaa
test
push
cmc
test
and
movsl
xor
mov
push
jp
sbb
xor
sbb
jg
push
mov
pop
cmp
pushf
not
insl
sbb
cmp
pop
fnsave
loop
xorl
dec
fisttps
mov
gs
pop
mov
or
xchg
cmp
mov
rcl
xchg
mov
jnp
out
pop
add
cmp
lret
out
sbb
xchg
repnz
orl
cmpsl
aas
negl
std
add
das
aad
pop
xor
jecxz
lods
jne
into
cmp
sbb
jg
pushl
aaa
jp
mov
sub
clc
dec
push
xlat
imul
outsl
mov
mov
fldcw
cld
mov
and
mov
cmpsb
cmp
orl
nop
mov
aad
sbb
jg
mov
or
jmp
insl
aam
mov
cmp
push
pop
sahf
nop
cmp
push
sti
and
and
cmp
jnp
adc
aam
imul
adc
add
movsb
mov
cmpsb
inc
ss
adcl
outsl
xchg
outsb
adc
lahf
mov
cmp
cmp
and
jmp
imul
sub
in
or
nop
in
rorl
sub
cmp
sbb
ja
cmp
andb
mov
fsts
dec
inc
add
daa
testl
inc
leave
jge
pop
sub
push
repnz
fs
je
ror
sub
jbe
mov
testb
or
loop
xchg
jae
test
fstpt
ficoml
dec
lret
jmp
xchg
scas
sub
cmp
dec
pusha
mov
fs
or
xor
shr
mov
in
movsb
jmp
rorb
or
aad
cmpsb
scas
nop
pop
xchg
jnp
loopne
aad
outsl
gs
add
inc
or
mov
and
aad
xchg
fbld
scas
dec
ljmp
rolb
jl
mov
xchg
stos
mov
inc
or
pminub
adc
aas
mov
js
jnp
cmc
jmp
push
sahf
dec
loopne
push
arpl
push
mov
loop
sub
test
loope
push
push
adc
pop
add
dec
not
adc
jmp
mov
pop
sbb
pop
push
xor
aam
scas
stos
jmp
aam
cmp
xor
push
and
push
sub
pop
dec
mov
sbb
adc
aam
ljmp
jo
jb
fldcw
push
push
incl
dec
insl
addl
xorl
pop
mov
ss
inc
inc
or
dec
hlt
add
aam
push
xchg
push
pop
dec
test
dec
xchg
hlt
pop
movsb
fisubrl
xor
jg
sub
mov
fldenv
jge
or
loopne
lea
sbb
cli
aaa
and
xor
pop
je
fisubs
lcall
ret
xchg
test
or
sbb
push
les
dec
push
xchg
cmp
popf
pop
stos
mov
ja
cmc
in
mov
sbb
push
movsl
sbb
jnp
repz
cmpsb
fistpl
nop
jge
xor
dec
in
xchg
sbb
dec
int
icebp
jnp
loope
sbb
out
jbe
push
xchg
enter
dec
push
lods
sbb
addr16
aas
add
ja
fcomp
ds
nop
out
stc
jge
in
inc
jo
mov
int
and
adcl
lret
js
xchg
pop
daa
repnz
mov
pop
shl
mov
pop
ljmp
mov
add
cmp
add
jbe
xor
mov
aad
adc
stc
sub
jp
push
jb
scas
fldcw
mov
aad
repnz
sbb
movsb
repnz
mov
addr16
pop
pushl
in
jg
imul
rcr
mov
ss
js
pop
pop
mov
pop
pop
cmp
jg
js
cmpsb
loope
adc
lock
dec
mov
push
imul
cli
scas
or
nop
inc
inc
cmc
xchg
iret
mov
cmp
push
jns
inc
fs
mov
mov
repz
cwtl
xor
mov
jnp
cmp
shlb
pop
cmp
jmp
inc
sbb
scas
test
shll
mov
addr16
nop
icebp
ret
aas
lods
inc
sub
and
jg
or
push
insb
ret
dec
xchg
inc
adc
mov
jnp
sub
mov
in
repnz
sbb
push
out
cli
iret
cmp
ret
cmp
mov
xchg
int3
rorl
inc
pop
mov
addr16
rol
jns
sub
or
mov
push
jns
pop
pusha
pop
das
pop
hlt
js
aaa
dec
ret
pop
nop
ss
fdivr
sbb
stos
fchs
or
mulb
push
loope
mov
adc
pop
xchg
push
mov
in
sar
imul
inc
rcrl
out
aad
fidivl
mov
js
dec
in
mov
stc
ror
dec
inc
mov
jmp
push
notb
aam
or
out
pop
fwait
out
lcall
mull
aam
xchg
pop
ds
jmp
jnp
inc
nop
mov
inc
mov
xor
nop
jne
ror
arpl
aaa
cmp
jecxz
aad
fmull
mov
xchg
jno
shll
jo
ja
push
add
cmpb
fimull
dec
mov
mov
mov
nop
rcrl
jle
dec
xchg
mov
out
mov
push
lock
incb
pusha
jg
and
aam
in
in
scas
fists
push
ja
add
sbb
in
jb
test
adc
icebp
sbb
data16
loope
jp
jg
int
and
cltd
jne
mov
pusha
mov
jo
dec
mov
nop
mov
and
ret
adc
fmull
repnz
insb
fimull
aad
andb
je
jb
sbb
xchg
lock
loope
in
sbbl
ja
push
jno
or
xchg
lahf
in
mov
mov
xor
xchg
xor
lods
scas
jae
cmp
scas
adc
out
fldenv
xchg
inc
aaa
and
dec
aam
sbb
mov
jne
push
and
pop
xchg
sub
mov
cmpsb
inc
in
mov
jle
rcr
aas
dec
hlt
xchg
add
dec
sub
ljmp
roll
xor
lods
cltd
add
in
pop
sub
mov
iret
fsubrl
insb
nop
mov
jl
mov
jno
out
sarb
popf
sbb
sub
out
data16
and
stc
or
std
pop
mov
ljmp
jl
mov
mov
std
xlat
mov
leave
icebp
mov
dec
lods
jge
ja
sbb
fnstsw
aam
jno
and
add
stos
jnp
in
shl
mov
pusha
mov
mov
fcompl
daa
and
test
mov
mov
int3
jae
and
mov
fildll
push
cli
mov
inc
xchg
test
out
mov
ret
mov
jle
cmp
mov
nop
add
sarb
jg
ror
shll
sti
in
mov
roll
sarl
xchg
jecxz
fiaddl
xchg
jo
sti
sub
dec
scas
push
testl
mov
gs
cli
push
nop
addr16
or
ret
test
lds
into
jge
push
cmp
xchg
test
pushf
rcl
das
sub
or
pop
push
xchg
popa
inc
icebp
test
mov
sti
inc
mov
add
sbb
dec
pop
stc
mov
add
xchg
call
cli
lods
ds
out
int
repz
jg
fcomp
nop
or
adc
loop
sahf
fcompl
mov
ret
bound
and
divl
pushl
and
xor
stc
pushf
jge
jl
mov
sbb
popa
xchg
mov
jl
movsb
mov
adc
outsb
pop
mov
ja
mov
mov
xchg
pop
cs
std
cmp
mov
mov
fistpll
movsb
inc
lahf
sbb
jo
add
nop
repz
dec
imul
scas
jns
incl
sahf
aam
cmp
out
cwtl
test
shll
icebp
ljmp
inc
jge
and
jmp
mov
inc
dec
or
out
imul
rcrl
mov
pop
sub
insl
test
out
sbb
es
sub
mov
mov
lahf
sbb
mov
scas
nop
sbb
ror
fisubl
push
daa
mov
add
pop
enter
fs
shll
xchg
cmp
xchg
inc
fbstp
add
jae
sbb
add
sahf
and
into
push
in
jmp
js
mov
push
inc
mov
pop
fmull
nop
cmp
dec
out
lret
mov
cmp
sub
xchg
or
jbe
and
aaa
push
push
scas
xchg
jbe
xor
xchg
cmp
scas
sub
orb
xchg
jbe
arpl
inc
loope
in
push
fldenv
dec
mov
xchg
enter
adc
lret
int
jo
fs
aam
inc
add
cmp
mov
xor
push
xor
shl
push
mov
push
xor
xchg
mov
jbe
aaa
aas
scas
data16
enter
lret
in
ja
pop
sti
or
jecxz
fstl
test
push
push
dec
shl
idivl
dec
call
ucomisd
lods
enter
arpl
xchg
or
lahf
push
scas
mov
mov
inc
shll
test
mov
mov
orb
push
dec
push
push
dec
xor
push
and
data16
imul
pop
adc
stc
lods
out
jg
xor
fimull
inc
cld
mov
adc
jg
stc
in
jle
filds
and
cwtl
fmulp
mov
lea
std
add
inc
insl
push
aas
and
inc
jp
ds
es
sbb
lods
inc
sbbl
int
pop
dec
xor
ret
jae
push
js
xorb
nop
inc
call
test
mov
ja
mov
mov
fwait
jno
sub
aaa
nop
jle
inc
mov
out
es
sub
xor
mov
xor
jecxz
adc
ret
jae
inc
test
jno
int
xor
fadd
movsl
cmp
jbe
dec
lock
data16
xor
shlb
push
aam
in
out
pop
nop
not
jge
sub
mov
loope
cmpsl
sbb
inc
mov
cld
push
xchg
push
mov
mov
lret
xor
dec
aad
or
mov
addl
inc
test
rep
into
or
cmp
daa
nop
jbe
jg
sub
xchg
mov
addl
out
dec
mov
add
int
dec
cmp
mov
jecxz
and
cld
mov
into
adc
sbb
test
push
push
fmull
and
scas
cltd
test
outsb
push
and
ja
cmc
mov
sahf
jnp
daa
push
jnp
inc
pop
jge
mov
push
shr
fwait
mov
mov
lea
adc
loopne
or
lds
ja
mov
sbbb
movsb
add
push
or
jg
mov
push
sbb
lds
je
enter
mov
mulb
mov
xor
jmp
adc
xchg
stos
stos
mov
inc
popf
daa
notb
call
cs
mov
nop
int
ja
pop
sbb
out
imul
sti
jne
in
jns
in
cwtl
mov
mov
inc
nop
push
call
xchg
rcl
xchg
ja
les
push
jge
icebp
adc
lcall
jno
xor
xor
scas
fldenv
push
sbb
xlat
jmp
stc
in
repnz
enter
roll
gs
mov
cmp
xchg
ja
pop
dec
jge
add
mov
pop
sbb
clc
mov
jns
push
sahf
sbb
and
inc
mov
add
pop
adc
pop
mov
cmp
jecxz
repnz
push
mov
lret
in
int
jge
adc
cmp
lock
scas
push
das
push
aaa
icebp
ss
push
dec
dec
xchg
push
push
dec
inc
nop
imulb
pop
xlat
cli
pop
mov
or
imul
lcall
adc
fcoml
pushf
push
cmp
inc
inc
cmpsb
aas
pop
adc
test
mov
aad
aas
ds
iret
xor
xor
int
or
nop
mov
mov
jmp
mov
jmp
scas
sbb
in
jne
stos
hlt
cwtl
mov
scas
inc
fwait
addl
mov
inc
mov
xor
or
jae
into
aaa
push
cld
mov
rorb
daa
repnz
xor
sarb
inc
xchg
stos
add
and
fcomps
inc
jno
sbb
and
roll
dec
lods
aaa
inc
jmp
pop
pop
mov
jmp
fcmove
stos
int
fisttps
es
addb
ret
addr16
fsub
test
lods
inc
or
lds
popf
adc
pop
sbb
xchg
push
mov
in
xchg
cwtl
mov
mov
js
mov
push
rol
sub
sarl
jp
pop
or
adc
sub
jle
sahf
push
push
test
pusha
ret
sbb
data16
xchg
mov
or
aaa
push
jbe
testb
push
mov
std
pop
fildl
or
jno
test
iret
xchg
xor
int3
xchg
mov
cmp
dec
xorb
rorl
push
mov
and
jbe
nop
pop
cmpsl
push
xchg
shrl
cmc
xchg
mov
lds
xchg
add
or
and
jnp
out
lcall
xlat
xchg
js
fld
adc
movsl
xor
mov
test
jle
lret
lret
inc
fst
mov
imul
pop
adc
pop
adc
sbb
xlat
and
stos
xchg
aaa
nop
or
repz
call
jg
push
mov
jecxz
fdivs
xor
mov
or
sbb
clc
test
decl
and
sub
loope
cmpsl
jg
loope
in
aam
cmp
fcompl
mov
out
mov
push
decl
adc
jbe
push
std
jp
call
fildll
pop
xchg
jns
aas
or
out
mov
mov
pop
lods
pop
icebp
pop
fsubr
aaa
out
xchg
adc
mov
mov
xchg
pop
pop
mov
cmp
outsl
mov
xchg
lcall
fld
mov
nop
std
call
jne
inc
mov
cmc
mov
sti
push
popa
ss
or
into
jnp
ja
push
or
cmp
lahf
pop
push
out
mov
ljmp
pop
lret
xchg
rcrb
in
and
cmpsl
cmp
ja
nop
mov
imul
cmp
inc
sbb
adc
mov
push
out
dec
jns
in
jnp
mov
pop
mov
push
out
or
add
pop
mov
mov
or
inc
shlb
nop
out
and
sub
les
sub
scas
nop
jno
dec
out
push
mov
sub
nop
inc
xchg
aas
adc
mov
sti
daa
jp
arpl
push
lods
and
adc
dec
xchg
lcall
or
in
in
arpl
loope
sub
add
pusha
jno
fld
adcl
mov
test
dec
push
test
adc
xor
mov
hlt
cmc
mov
mov
inc
cld
cmp
fidivrl
sbb
dec
dec
fsubp
mov
xor
mov
scas
cld
outsl
mov
out
and
mov
cmp
mov
or
sub
cmp
pop
sbb
mov
addl
add
rcll
fdivl
xlat
outsl
inc
lock
pop
and
xlat
mov
test
sub
push
daa
mov
push
and
xlat
or
test
movsb
loop
mov
xlat
mov
or
xlat
aad
movsb
sub
mov
adc
int
add
shl
cmp
push
addr16
xchg
sbb
fs
inc
add
inc
or
cltd
cld
loop
mov
fisubl
rcl
sub
push
test
testl
xlat
add
orl
push
mov
ds
push
adc
imul
bound
xlat
sub
mov
jnp
jb
test
sub
popf
pop
mov
add
jmp
daa
out
pop
fcmovnbe
test
nop
clc
mov
pop
loop
mov
pop
pop
mov
mov
rorb
push
iret
xlat
movsl
sub
xchg
hlt
adc
fs
xchg
cmc
cmp
mov
xchg
int3
xlat
ja
mov
mov
je
mov
push
pop
sub
test
mov
lds
imul
cwtl
xchg
adc
insl
ret
push
icebp
fistl
push
test
push
lahf
xor
mov
inc
inc
cmp
cmp
xchg
dec
repnz
sub
mov
push
cmpsb
xchg
cmp
xchg
mov
push
lds
das
andb
xor
push
loope
and
add
xor
push
out
adc
xchg
mov
mov
jmp
rcll
xchg
mov
movsl
aam
enter
aad
mov
cmp
out
pop
mov
enter
cmpsl
outsb
mov
push
in
inc
mov
shll
mov
mov
mov
ja
subb
pushl
repnz
iret
ja
inc
fdivp
mov
arpl
dec
inc
cmc
imul
cmpsb
add
fwait
pop
xor
jecxz
adc
insl
dec
inc
lock
aas
ds
rcll
hlt
call
stc
adc
xchg
lods
xor
sub
fcom
mov
mov
les
repnz
pusha
push
and
or
sti
and
xchg
rclb
cld
arpl
std
sub
mov
mov
movsl
rcrl
cmpsl
sub
sbb
cmc
mov
test
in
mov
xlat
les
lds
xlat
orb
dec
sub
add
dec
xlat
leave
clc
pusha
aad
rolb
iret
jecxz
mov
div
push
xlat
fnstenv
dec
mov
daa
xor
stos
xlat
lds
xlat
flds
jmp
adc
int3
scas
inc
fidivl
xor
xchg
shll
sahf
aam
xlat
inc
pop
out
aaa
lods
addr16
xlat
inc
mov
sbb
xlat
fsubrl
add
pop
lock
jbe
xor
push
and
jmp
cmpl
ds
sbb
jmp
fwait
es
int
and
cs
jl
mov
xlat
call
add
xlat
push
in
pop
jg
cmpsb
xchg
out
inc
xor
movsl
or
cmc
iret
pushf
jbe
sbb
dec
dec
jns
sub
jecxz
xchg
fdivrs
fistpl
pop
push
mov
dec
movsl
lret
push
cli
pop
cmp
mov
sbb
insb
adc
pushf
push
adc
cmc
mov
inc
repz
xlat
subb
loopne
pop
js
xlat
arpl
rcr
adc
outsb
aam
lds
movsl
mov
jb
pop
xlat
adc
addr16
lods
xchg
lods
and
push
pop
push
sub
rcrl
test
xlat
xchg
pushf
xchg
push
dec
mov
leave
pop
andb
xor
ljmp
arpl
pop
mov
xlat
int
mov
cli
scas
cmpl
pop
aam
push
loopne
inc
mov
adc
dec
xlat
hlt
jg
xchg
mov
mov
loop
mov
xchg
lret
pop
push
jle
mov
mov
mov
and
daa
arpl
fldl
cmp
ljmp
sbb
rol
rorb
sub
insb
cmpsb
ficomps
sti
rcrb
rclb
jne
mov
repz
scas
icebp
jl
mov
rcl
push
mov
or
xlat
xchg
test
movsl
das
mov
iret
or
push
cmc
in
jne
cmpsl
xlat
lea
pop
inc
add
xchg
xlat
es
pop
arpl
and
sbb
shll
sahf
xlat
or
adc
js
frstor
rol
sub
xor
out
sbb
sbb
fnsave
nop
iret
les
mov
pop
sbb
xlat
add
imul
inc
adc
xlat
push
pusha
cmp
or
bound
insb
pop
push
pop
ljmp
aad
inc
cmp
cltd
or
lock
jp
hlt
pushf
mov
xchg
cmp
add
lahf
jge
pop
fwait
mov
dec
dec
mov
shr
xor
or
xlat
test
lret
xlat
insb
push
roll
pop
es
repz
js
cmp
mov
sbbb
dec
mov
in
test
mov
sbb
fucomip
xchg
stc
adc
insb
xchg
sbb
ret
xlat
pop
outsl
idivl
addl
push
push
adc
mov
xlat
mov
dec
enter
cld
xlat
inc
sbb
ljmp
cmpsl
push
cmp
mov
ficoml
addr16
xlat
popf
subl
add
test
mov
xlat
push
lret
pop
cltd
loopne
fdivl
faddp
stos
xlat
dec
jbe
mov
shl
out
push
cwtl
int
adc
xlat
mov
call
cs
add
out
pop
xchg
pusha
rcrb
mov
or
das
mov
fcoms
lahf
loope
stos
xlat
xchg
adc
dec
inc
lds
roll
js
or
pop
cmpsl
xlat
inc
lret
push
cmpb
dec
add
adc
sti
and
mov
xor
imul
xchg
jge
cs
pushf
icebp
mov
and
pop
in
and
cmpb
aad
loopne
std
pushf
xlat
fdiv
dec
xor
les
or
jecxz
dec
push
popf
mov
out
jg
pop
adc
lods
orb
xchg
insl
add
pop
popa
int
mov
outsl
cmpsb
inc
and
pop
xchg
mov
xlat
dec
rcrl
xlat
mov
cli
loope
lahf
pmullw
and
pop
or
or
mov
in
aam
push
fstps
xor
shrb
cmp
sub
jbe
cmp
push
add
movsl
xor
rcrl
add
out
shl
insb
aad
sub
fcoml
aas
icebp
outsl
mov
xlat
fs
dec
inc
jmp
stc
test
xlat
xchg
out
add
cltd
stos
xlat
jmp
push
adc
cmpsb
pop
gs
cmp
mov
fisttpl
xlat
movsl
ror
test
sti
ljmp
jno
push
xorb
xlat
bsf
add
jnp
lds
push
cmpsb
fcomps
xlat
add
in
outsb
sar
gs
push
push
xlat
sub
loope
fidivs
lods
adc
mov
mov
insb
xlat
push
mov
xlat
sbb
sbb
jb
rcl
jnp
cmp
ret
push
adc
iret
cs
xor
rcrb
add
and
rcrb
mov
xlat
sbb
cmp
and
lahf
adc
cltd
aad
or
cmp
sarb
mov
xlat
sbb
dec
test
js
inc
je
xlat
push
sbb
push
mov
ret
xlat
hlt
jecxz
push
es
xlat
cs
rcr
call
rcrb
xchg
js
inc
xlat
mov
cmp
push
xlat
negl
mov
lahf
add
mov
roll
mov
in
mov
scas
add
sub
or
jns
test
lock
mov
jbe
push
inc
out
dec
aam
rol
xor
repnz
xor
xor
mov
xlat
in
xor
inc
lods
scas
xchg
addr16
jns
adc
into
imull
push
ret
dec
sbb
xlat
or
bound
inc
lahf
cmc
scas
addr16
push
iret
aad
out
or
lret
mov
inc
pop
and
xchg
out
push
sbb
push
xchg
xlat
lcall
xor
and
cli
push
inc
pop
imul
icebp
mov
jbe
inc
loope
jmp
mov
sub
inc
lea
xor
dec
inc
or
mov
imul
inc
daa
mov
cli
nop
xlat
add
push
shr
xorb
aad
sbb
xchg
xor
shrb
gs
out
je
xchg
enter
dec
out
iret
mov
xor
addr16
xlat
push
in
cmp
lahf
enter
jp
fdivr
sbb
mov
add
sti
movsl
mov
into
adc
dec
fimull
add
cmp
cwtl
addr16
cmpsl
scas
std
bound
popf
jnp
jns
icebp
add
push
stos
addr16
and
mov
sbb
push
rorl
xlat
adc
arpl
push
aam
xlat
insl
movsl
sahf
mov
and
sbb
add
addr16
add
pop
popa
mov
call
sarl
mov
mov
xchg
xchg
pop
jae
ret
rorb
adc
xchg
dec
movsl
out
fsubr
test
daa
inc
loopne
lret
aad
ret
out
jbe
xlat
add
dec
fiadds
xchg
out
jl
mov
dec
stos
test
pop
mov
dec
sbbl
shl
scas
xlat
dec
pop
add
fisttpll
ljmp
fsubl
mov
lret
movsl
test
pop
icebp
cmp
xlat
sub
mov
daa
cmp
nop
sarl
imul
imul
or
adcb
rcll
pop
pop
mov
loop
sarl
inc
mov
cli
stos
lods
insb
outsl
frstor
loope
sub
jnp,pt
pop
mov
das
add
test
push
xor
and
jg
and
pop
mov
push
ffreep
xor
mov
mov
inc
mov
mov
and
setnp
jge
aam
loope
xchg
jb
movsb
dec
pusha
pop
xchg
jae
mov
pop
in
push
fdiv
lcall
std
bound
push
sahf
fmul
mov
sub
mov
movl
and
push
pop
lret
bound
mov
xor
sbb
fcompl
nop
je
aaa
xchg
es
fisubs
test
sub
int
mov
inc
inc
sbb
dec
jge
pop
aaa
das
fimull
or
mov
pop
or
rolb
mov
imul
mov
and
inc
test
in
cli
pop
pavgw
mov
add
mov
jecxz
jmp
loope
mov
ret
cld
stc
sub
mov
xchg
popa
rcrb
pop
add
jb
push
sbb
pushf
lds
xor
mov
and
sbb
adc
adc
repz
pop
or
push
or
nop
cmp
mov
ret
push
pop
add
out
mov
loop
rcll
jns
nop
sbb
fidivrl
arpl
sub
pop
adc
inc
add
repz
lcall
adcb
nop
xor
cmpsb
call
cmp
push
adc
sub
push
mov
or
imul
adc
cmp
and
repz
xchg
popf
ss
xchg
adc
sub
out
add
ljmp
icebp
movsl
dec
add
arpl
sbb
pop
push
fbstp
je
xor
mov
fbstp
and
add
cmc
icebp
cmp
lock
dec
mov
lret
push
xchg
adc
pop
idivb
shrl
xchg
adc
mov
dec
cmpsb
dec
pop
or
and
out
jg
sub
or
dec
sbb
push
fcoml
mov
in
imul
lret
adcb
xchg
jg
xor
notl
insl
jbe
cmp
aad
mov
lahf
call
xchg
lcall
mull
or
add
test
movsb
es
mov
aad
nop
sarl
leave
test
data16
int3
xor
lcall
sub
dec
mov
cmp
ss
inc
repnz
gs
fwait
xchg
lock
xor
mov
cmp
rclb
mov
mov
and
xor
aad
xchg
sub
sub
scas
jecxz
add
nop
inc
cltd
push
mov
js
sub
xchg
pusha
push
imul
test
pushf
mov
jp
sub
xchg
xchg
mov
out
ljmp
adc
imul
adc
repnz
or
pop
mov
or
sbb
mov
and
scas
sub
popf
insb
push
dec
loop
and
or
mov
lahf
mov
test
mov
loopne
pop
or
lret
movsb
xchg
outsb
fldenv
stos
adc
pop
push
pop
enter
adc
stc
mov
and
outsb
fnstenv
jmp
mov
push
add
and
xchg
xor
mov
inc
xor
out
push
and
rcrb
je
aad
jbe
sub
push
aad
push
es
mov
xor
xchg
inc
adc
mov
xchg
adc
nop
shlb
fsts
pop
shr
in
jnp
mov
mov
mov
rorb
call
dec
into
jno
std
xor
jns
imul
and
clc
inc
xchg
and
cld
mov
ficoml
dec
test
xorb
roll
pop
or
mov
insl
jp
or
mov
aas
roll
dec
cmp
sub
mov
jnp
cmpb
mov
cmp
and
jns
fimull
mov
loop
xor
pusha
in
inc
pop
cmp
or
sbb
stos
cmp
clc
ret
and
dec
adc
xor
cli
rcrb
das
mov
aas
ja
pop
ljmp
push
mov
push
test
out
lea
rcll
xchg
cmpb
stos
xor
shlb
incl
sbb
mov
sbb
cmpsb
jno
sahf
lds
push
aad
push
push
nop
in
add
scas
add
sbb
out
mov
mov
pop
push
push
mov
jnp
fcoml
fnsave
ljmp
xor
nop
setno
mov
rorb
dec
daa
push
sbb
mov
testl
jecxz
jg
loope
inc
fadd
imull
jl
mov
out
out
lods
hlt
add
xchg
ja
iret
ss
rolb
mov
mov
daa
rol
stos
push
adc
inc
or
popf
inc
das
psllw
jg
jb
repnz
push
mov
aaa
popa
nop
mov
jnp
icebp
cs
leave
or
rcrl
lret
lcall
ja
flds
lea
aad
cmp
insb
xchg
jg,pt
cli
xchg
cld
cmp
subl
push
call
cmpsl
mov
rolb
pop
fnstsw
jns
enter
mov
cmpl
or
frstor
push
and
mov
sti
and
mov
sbbb
lea
int3
andb
xor
cmp
fildll
sbb
repz
and
sbb
sub
mov
pop
mov
and
inc
sub
pushf
push
jae
xchg
in
repnz
inc
cld
sbb
into
inc
inc
mov
adc
clc
dec
xchg
push
mov
pop
pop
fisubl
dec
mov
vmaxpd
mov
enter
sub
jae
add
test
imul
aad
shll
adc
in
enter
ja
fcomip
cmp
pushf
mov
xchg
push
daa
cmp
test
gs
mov
ficomps
iret
std
add
sbb
sti
rorb
aam
cmp
sub
loopne
int
mov
aad
mov
movsl
jae
mov
xchg
imul
inc
adc
iret
sub
push
movsb
stos
popa
xchg
enter
sar
push
cmp
ret
int3
add
lret
push
mov
loopne
push
push
xor
inc
xchg
dec
imul
out
mov
data16
dec
mov
sbb
mov
and
lahf
fdivl
pop
cmc
aad
jg
xchg
out
pop
mov
xor
mov
hlt
mov
adc
pop
sub
dec
sahf
inc
pop
icebp
imul
call
sub
or
sub
nop
int3
xchg
inc
mov
lock
mov
sub
mov
je
adc
and
xor
cmp
mov
mov
jmp
cmp
bound
nop
js
lods
pop
mov
sbb
add
push
jo
mov
xor
and
hlt
mov
push
xchg
daa
xchg
daa
jmp
mov
into
outsl
mov
scas
inc
xor
lods
xchg
sub
mov
test
insb
push
pop
jbe
fiaddl
inc
jae
int3
repz
xor
sub
jnp
pop
and
sbb
xchg
push
mov
lock
pop
ror
mov
dec
and
ja
push
inc
ret
or
int
aad
je
add
mov
pop
pop
icebp
adc
sbb
sbb
popa
daa
cmpl
xor
js
jge
sub
sar
stos
xchg
push
lock
xorb
inc
mov
add
cmpsb
xor
lret
out
mov
fs
xlat
mov
mov
mov
dec
inc
out
adc
ljmp
shr
ficoml
mov
aaa
clc
add
xchg
fistps
rcrb
clc
stc
inc
call
or
out
sbb
test
jge
and
scas
js
inc
mov
test
int
dec
pop
xchg
mov
push
mov
cld
mov
ret
sub
cmp
or
cmp
imul
sbbb
push
and
xor
dec
aaa
inc
fsubl
sub
push
jmp
dec
mov
ret
dec
push
loope
mov
push
nop
test
imul
jg
sbb
cltd
dec
sub
js
mov
rcrl
rclb
sub
cmpsl
jl
fistl
aaa
push
gs
sub
sbbb
push
xchg
in
mov
xchg
xchg
cltd
icebp
stc
adcl
inc
jnp
add
in
or
xlat
mov
aam
pop
push
add
add
and
in
add
and
mov
push
iret
lahf
add
or
mov
lock
sbb
mov
xor
jae
jl
jno
push
orl
cli
inc
sub
loope
cmpsb
insb
icebp
js
shrb
cli
ds
cs
test
aas
cmc
fnstcw
xlat
pop
aam
jnp
ret
add
je
jge
scas
outsl
rcl
leave
push
xchg
mov
adc
inc
repnz
inc
mov
push
add
mov
movq
xchg
push
sbb
jle
mov
lds
inc
xchg
dec
mov
test
dec
xchg
xchg
leave
lret
imul
cmp
shr
mov
mov
dec
ss
xlat
imul
leave
sub
jge
mov
jae
nop
jns,pn
cli
lahf
ret
in
scas
jmp
cmp
das
roll
sub
stos
mov
mov
push
add
into
jp
add
ljmp
mov
push
int
fstl
out
stos
mov
sub
lret
pop
iret
or
pop
pop
std
adc
imul
xor
add
into
sahf
xor
xchg
iret
or
fucomp
or
jnp
fsub
stos
xchg
adc
in
nop
sti
pop
push
iret
dec
imul
mov
pop
sbb
dec
adc
clc
daa
in
daa
stos
dec
inc
jnp
test
repz
test
ror
add
xchg
fidivl
hlt
pop
inc
add
decl
ret
mov
mov
nop
cli
cmp
std
mov
data16
stos
mov
daa
add
fdivl
or
sub
adc
jb
cmpsl
mov
cmp
shll
mov
pop
lcall
jl
loop
mov
sbb
adc
adc
arpl
jne
data16
sub
or
xor
imulb
aam
in
dec
loope
mov
mov
mov
jmp
scas
pop
dec
inc
cmp
fcoml
clc
pop
mov
testl
fsubs
cmp
outsb
sub
cmp
daa
and
push
mov
out
add
into
pop
ja
test
in
inc
nop
iret
jb
lahf
pop
xor
leave
test
mov
dec
inc
loop
scas
sub
data16
pop
cli
mov
jno
mov
clc
xor
fbstp
fnstenv
fistpl
inc
in
or
pop
xchg
adc
pop
pop
mov
xchg
add
xchg
loope
notb
outsb
pop
mov
mov
add
clc
push
ret
xchg
movl
xchg
inc
push
and
shll
enter
add
arpl
lahf
sbb
mov
jp
loopne
lds
iret
mov
mov
fidivrs
or
loope
mov
jge
pop
mov
out
push
test
mov
sarl
aas
push
test
xchg
adc
out
push
sub
data16
lds
inc
jmp
inc
lahf
out
pushf
out
mov
inc
scas
mov
cwtl
outsb
pop
lret
stc
out
popf
scas
repnz
xchg
aad
and
xor
ja
mov
add
jg
adc
lret
inc
xchg
push
mov
enter
leave
pop
xor
scas
call
mov
xchg
fstpl
xchg
add
mov
jnp
jecxz
test
and
les
dec
mov
push
js
test
ds
int
sbb
xchg
inc
nop
add
adc
daa
mov
push
daa
incl
pop
pusha
sub
xor
xchg
push
and
add
fwait
repnz
mov
or
xor
dec
lret
mov
loopne
dec
iret
lds
xchg
scas
pop
xchg
jg
or
xor
or
loope
stos
cmp
adc
stc
jbe
test
mov
adc
test
mov
adc
icebp
and
xchg
push
ret
sbb
sbb
and
sbb
clc
outsl
das
nop
cmc
mov
lock
js
mov
adc
push
sub
or
repz
stos
ja
lea
sub
fistps
mov
paddsb
mov
xchg
cmpsl
xorb
loope
mov
sbb
fs
jle
ljmp
jmp
fisubrl
mov
jnp
lea
clc
xor
fcmove
sub
adc
mov
sub
ret
leave
xchg
mov
inc
pop
stc
rcl
mov
mov
in
xchg
mov
lea
xchg
xlat
push
xchg
pop
mov
inc
daa
mov
into
rol
sub
mov
dec
xor
lret
xor
aam
dec
out
sub
jno
cmp
inc
cmp
pushf
in
mov
js
pop
loopne
add
dec
ljmp
xlat
xor
push
pushl
push
nop
ljmp
push
xchg
and
call
inc
les
sub
mov
adc
sbb
fstps
add
ficoml
out
sbb
sbb
inc
fdivl
rorl
repz
test
fs
popa
push
push
andl
fadds
adc
cmpsb
nop
das
ret
mov
popf
in
mov
push
jmp
or
add
leave
pusha
out
sub
rcrl
mov
repnz
sarb
jmp
sub
jno
arpl
mov
push
std
cmp
test
and
aad
xor
pop
enter
add
jge
mov
bound
mov
sbb
pop
add
push
xchg
push
push
cmpb
andl
jno
outsl
and
xor
inc
xchg
adc
in
jmp
jmp
into
adc
mov
push
nop
fistl
out
mov
test
ja
or
lods
divb
dec
xchg
mov
ret
adc
faddp
pop
mov
test
int3
in
pop
movsl
shrl
inc
out
sub
xchg
inc
aad
xchg
and
dec
insb
nop
cmp
js
gs
roll
mov
inc
jnp
lret
roll
push
fbld
jb
lock
test
fdivl
adc
inc
xchg
fmull
out
pop
add
in
repz
pusha
scas
adc
incl
sbb
push
jge
cmp
mov
xchg
mov
or
loope
subl
jne
xchg
adc
scas
test
cmpl
xor
mov
shrb
xor
addb
lock
mov
mov
addr16
lock
aam
test
int
xchg
out
enter
pop
jle
dec
mov
sub
dec
pop
aaa
std
aas
push
mov
xlat
nop
sbbl
lods
adc
rorl
xchg
cwtl
xlat
das
test
pop
lret
xor
xlat
test
movsl
std
nop
nop
out
xlat
lahf
mov
pop
sub
dec
clc
pop
roll
add
jnp
mov
negl
in
rcrl
mov
mulb
sahf
ret
pop
push
cmc
out
jmp
movsl
push
mov
adc
xchg
mov
stos
pushf
mov
repnz
out
sbb
mov
bound
and
ljmp
ljmp
adc
mov
lds
push
pop
subl
test
mov
push
xlat
pushf
jb
dec
xchg
into
mov
push
aaa
add
and
xchg
testl
jae
nop
pop
iret
lock
xchg
mov
add
and
pusha
lret
aaa
test
jb
ret
pop
lock
hlt
js
pop
adc
push
push
pop
jno
xlat
jo
imul
test
pushf
dec
xlat
inc
cmp
sbb
in
and
xlat
push
ret
adc
push
fwait
xlat
jecxz
push
scas
xorl
int3
mov
dec
xchg
add
xor
js
cmpsb
mov
fisttpll
cmp
sahf
sbb
xlat
pop
xchg
outsl
loop
xlat
cli
imul
xlat
inc
mov
pop
ja
jns
iret
mov
add
aam
mov
pop
push
jg
jp
mov
or
xchg
adc
fiadds
repz
xlat
les
cmp
iret
sbb
jne
pop
push
nop
lret
push
and
or
in
xlat
cmpsb
push
stc
and
fisubl
xchg
in
xlat
or
add
xlat
adc
movsl
adc
cmc
imul
int3
push
pop
jle
call
sub
mov
mov
popf
repnz
cli
push
repz
pop
inc
jbe
rcrb
xchg
pop
cltd
ret
hlt
gs
mov
pop
rclb
lea
vunpcklpd
pop
xlat
inc
sbb
or
cmp
xor
push
push
xlat
bound
loop
sbb
in
sub
adc
imull
jg
xor
jmp
sub
jne
dec
repnz
sub
xlat
mov
jb
movsb
push
sbb
push
jp
pop
popf
aad
in
xlat
pusha
mov
addr16
xlat
outsb
loope
push
mov
call
or
add
das
jns
adcb
out
popf
sub
aad
icebp
jl
das
movsb
in
xlat
push
inc
push
mov
push
xor
fwait
lahf
lds
das
push
sbb
add
push
filds
mov
jl
ss
adc
push
pop
sarl
lock
sub
inc
jl
test
sahf
movsb
andl
mov
cmp
pop
add
xlat
mov
jmp
int
movsb
xlat
dec
cmp
lret
and
loope
lret
xor
pusha
cwtl
adc
rcrl
repz
xchg
fcoms
mov
xlat
jb
adc
inc
nop
and
pop
jecxz
shrl
push
or
das
cmp
xchg
sarb
xchg
cld
insl
out
adc
mov
pop
and
adc
jecxz
xlat
sub
pop
jge
push
sub
sbb
sbb
repnz
ret
out
leave
orl
outsl
out
push
push
xlat
sahf
mov
inc
adc
cmp
imul
stc
mov
mov
add
iret
test
fbld
mov
aas
xlat
jbe
mov
ficomps
iret
mov
lahf
das
lods
xor
add
xchg
lds
xlat
push
mov
sub
adc
xlat
sub
adc
out
dec
idivl
stc
mov
jo
inc
iret
dec
bndldx
les
or
stc
xlat
jp
out
push
sbb
adc
test
and
sbb
adc
dec
mov
imul
loopne
jno
pop
lahf
shl
pop
scas
lods
xor
inc
xchg
xlat
fiadds
adc
mov
daa
ret
enter
cmp
movsl
sahf
rorb
inc
cmp
dec
adc
ja
ds
inc
rcl
mov
imul
subb
mull
sarb
xlat
ljmp
call
cmp
xlat
je
jle
xchg
and
pop
outsb
movsl
loopne
xlat
xchg
das
xchg
lea
and
add
pop
std
sub
cmpxchg
dec
jno
xchg
pop
sbb
cld
xlat
mov
pop
test
pop
sub
jns
idivl
sahf
scas
and
cmp
inc
clc
xlat
js
push
jge
mov
arpl
pop
push
adc
xor
lahf
mulb
inc
mov
and
xchg
sahf
xor
idivl
in
add
je
jl
push
sub
test
xlat
and
inc
clc
inc
cli
pop
adc
je
sti
fcmovnbe
push
loopne
sbb
xlat
mov
jp
addr16
in
icebp
test
pop
andb
shrl
push
jo
lock
cwtl
leave
cmpsl
sti
sbb
push
daa
nop
shr
inc
mov
test
in
adc
aam
leave
cmpsl
mov
sub
dec
pop
aas
push
add
clc
stc
sub
loopne
adc
xlat
jl
push
sar
inc
faddl
mov
test
xor
push
lret
and
shlb
push
pop
fcompp
add
xlat
xorb
scas
mov
mov
xlat
pushf
popa
mov
dec
push
mov
add
adc
xlat
iret
pop
add
mov
jns
pop
sub
enter
xlat
imul
push
xlat
lret
loope
dec
jo
fcoml
dec
mulb
iret
dec
daa
mov
shrl
mov
fcompl
cwtl
jg
or
aad
lock
mov
fxtract
out
idiv
out
cmpsb
lret
aas
jne
dec
xlat
loopne
fs
jmp
xor
xchg
adc
dec
xchg
or
inc
push
add
mov
movb
xlat
rcll
cli
pop
mov
mov
lods
pop
fcoms
sub
stc
dec
sbb
fwait
sub
cld
push
jl
xlat
insl
mov
pop
push
inc
jb
jg
lret
scas
test
mov
xlat
sbb
rol
xlat
out
add
popa
sti
xor
jmp
adc
mov
mov
pop
fcom
xchg
aam
adc
je
inc
xlat
fisubl
pushf
or
aaa
rcrb
or
lret
loope
mov
out
push
imul
notb
sbb
repz
icebp
mov
xlat
clc
mov
inc
dec
xlat
sahf
mov
stos
xlat
stc
mov
jne
ljmp
sbb
mov
pop
jle
cmp
and
lahf
pop
loop
sahf
into
push
cwtl
mov
xlat
push
lea
inc
mov
gs
fisttps
pushf
add
mov
ljmp
ss
or
shrl
inc
xchg
xor
push
cmp
push
add
inc
push
mov
shll
outsb
add
jecxz
mov
adc
xlat
xor
cli
imul
sub
fcomps
mov
jns
xchg
daa
dec
int3
scas
xlat
ljmp
sbb
mov
sar
inc
pop
mov
mov
push
divl
ret
xlat
outsb
movsb
jg
daa
sbb
cmp
push
in
cmp
dec
xlat
jae
sbb
je
or
inc
into
cmp
push
fs
dec
fucomp
xlat
mov
leave
shlb
mov
lsl
push
movsl
iret
lds
mov
aad
in
repnz
and
es
jge
mov
add
sbb
lods
sbb
xlat
mov
dec
xchg
pop
sub
in
addr16
cmp
int3
push
xlat
push
jno
scas
inc
xor
icebp
xlat
daa
roll
xchg
xlat
out
shll
inc
mov
xor
cmpsb
fcomi
aam
mov
out
insl
xlat
push
and
push
xlat
test
or
test
xlat
jo
test
cli
add
adc
xchg
fildll
and
in
dec
cmpl
das
xchg
or
mov
aad
dec
add
mov
mov
xlat
ret
stos
aam
push
pop
jne
xlat
xor
mov
mov
sbbl
shrl
fsubs
xchg
cmp
xchg
pop
cmp
xchg
xlat
ret
pop
xor
mov
mov
xlat
inc
insl
lar
xlat
clc
data16
sarb
inc
xlat
cld
popf
jnp
aam
sub
lret
push
ficoml
add
idivb
sar
fs
outsl
cmpsl
mov
into
adc
jne
out
xlat
mov
aaa
cs
cmp
pop
mov
ja
or
sti
add
clc
adc
adc
faddl
pop
pop
xchg
out
scas
sahf
push
mov
jbe
jne
aaa
xlat
test
ret
jmp
mov
lret
mov
or
and
sbb
xor
fdivl
mov
ljmp
push
xchg
in
inc
sub
sub
ja
lcall
repnz
xchg
je
jg
sub
adc
nop
mov
mov
jle
push
sbb
into
xchg
std
sahf
add
decb
ret
jns
pop
sub
xlat
push
imul
mov
jl
out
iret
xchg
stc
arpl
jge
push
cmovns
jnp
jbe
push
cmp
xor
mov
mov
or
out
sub
xchg
imul
mov
rorb
jnp
xchg
adc
out
fldenv
cmpsl
shll
jae
push
mov
push
adc
jecxz
sahf
bnd
pop
test
jo
sahf
cld
lock
or
sbb
mov
push
mov
ffreep
push
cmc
mov
cwtl
jp
inc
jns
mov
out
mov
xlat
repnz
sbb
es
sub
out
dec
xlat
xchg
lcall
rcll
mov
mov
int
inc
push
jecxz
aam
pop
add
and
inc
and
mov
aas
aad
pusha
into
jnp
test
or
mov
je
pop
push
nop
sub
xchg
loop
pop
test
xchg
inc
outsb
sbb
cmpsl
bound
xchg
into
jno
jb
adc
fidivs
test
dec
sub
pop
iret
leave
outsb
inc
jbe
clc
inc
cwtl
push
jb
adc
in
jmp
negl
out
movsl
daa
sub
rorl
cwtl
jmp
sbb
inc
sbb
adc
test
aaa
inc
popa
iret
sbb
inc
fstps
in
repnz
xchg
push
xor
jp
jae
and
xlat
fs
mov
adc
push
mov
jb
sub
lcall
inc
loopne
test
add
icebp
push
test
mov
or
xor
jmp
stos
mov
push
test
pop
inc
daa
mov
mov
or
testw
nop
cmc
insb
adc
add
mov
pop
fnsave
cwtl
movsb
push
cmp
dec
mov
xchg
and
out
ljmp
das
jno
pop
add
ret
push
inc
divl
mov
loopne
lods
mov
ret
imul
jns
push
notl
ljmp
dec
je
loopne
lea
mov
test
inc
mov
add
gs
fucomip
imul
pushf
leave
lret
cmpsb
xor
not
in
jo
and
xchg
or
fdiv
mov
mov
int
jns
stos
xchg
fsts
test
lds
push
add
jp
fimull
inc
andl
test
nop
nop
push
ljmp
sahf
in
xchg
cli
mov
outsb
in
movsl
cwtl
add
test
xchg
or
aam
and
fmuls
pop
push
ljmp
add
mov
les
or
fldl
in
jge
decl
outsb
in
xor
push
mov
subb
inc
scas
and
jp
call
fcompl
out
or
les
xchg
rcll
jb
xchg
repz
push
aam
popa
xchg
dec
adc
imul
jg
inc
movd
mov
subb
scas
cmp
mov
dec
sub
jae
cltd
adc
cmpb
aam
sub
mov
sti
lock
sub
rclb
imul
test
daa
jne
lahf
pop
ret
push
push
inc
push
das
dec
mov
fs
out
or
mov
rcll
mov
roll
outsl
sub
cld
popa
sti
sbb
notb
sahf
xor
cli
push
add
loop
jp
inc
and
adc
mov
call
fisubl
and
test
lret
xchg
jbe
fsub
jae
loopne
inc
push
inc
mov
xchg
dec
jmp
cmpsl
rcll
mov
ljmp
fwait
cmp
cmp
or
xchg
wbinvd
or
in
sub
push
decb
iret
cmc
pop
imul
mov
cs
lea
dec
mov
mov
mov
sub
add
and
jmp
pop
xor
adcb
rorl
jne
push
sub
sbb
jb
ja
mov
jmp
les
rcrb
jbe
mov
imul
div
cld
pop
mov
add
mov
lret
bnd
push
shll
rorb
push
xor
mov
fdiv
fnstenv
mov
ljmp
lea
xlat
mov
and
pop
push
mov
mov
sbb
cmp
std
and
daa
ss
adc
cs
push
xor
sbb
std
xchg
and
fmuls
fcoml
popl
test
add
cmpsb
nop
fnsave
sar
or
ja
inc
jl
mov
inc
push
sub
pop
add
sbb
xchg
xchg
fwait
imul
or
mov
push
aad
outsb
daa
pop
jl
outsb
mov
cmpsb
shrb
stos
pop
imul
cmp
jecxz
out
rcll
push
xchg
jne
pop
cs
xchg
das
sbb
loope
test
ftst
xlat
cmp
push
repnz
jp
fdivs
inc
push
adc
jb
nop
cmp
gs
xchg
and
scas
mov
cmc
push
fdivr
mov
pcmpeqd
adc
adc
cmp
adc
mov
mov
lea
inc
xchg
mov
xor
mov
sbb
imul
push
mov
push
pop
mov
dec
xchg
add
mov
xor
jmp
mov
daa
jp
xor
jnp
cmc
fsts
sub
stc
in
loope
jo
jbe
add
sbb
cmpl
ljmp
nop
xchg
push
call
int3
stc
aad
scas
jbe
adc
adc
aas
pop
cli
test
sub
testb
ror
push
add
fisttpl
add
adcb
pop
aam
jne
xor
data16
scas
and
cld
cltd
divl
sub
xchg
mov
xchg
int3
xlat
mov
out
cmp
sahf
or
aam
adc
cwtl
les
movsl
mov
or
adc
push
sarl
jg
fwait
and
jecxz
pop
inc
sbb
xor
aam
sbb
dec
mov
jo
sub
jge
sub
xor
jb
or
sbb
jne
loopne
cmp
jnp
adc
pop
mov
aaa
sub
scas
stos
lret
rcrb
nop
addr16
dec
cmp
jmp
shlb
mov
jle
icebp
jge
aad
imul
ret
nop
outsb
jp
test
daa
mov
xlat
dec
dec
mov
push
inc
andl
pop
push
lods
and
ret
sbb
inc
aas
adc
pop
dec
cmp
mov
jne
inc
rorl
or
mov
sub
dec
cmc
sahf
in
xchg
leave
mov
add
mov
ljmp
adc
jmp
cwtl
scas
inc
xor
shll
lds
pop
inc
pusha
mov
pusha
jns
in
xchg
test
mov
pop
add
scas
js
repnz
cmpsb
mov
mov
mov
xchg
dec
fdivrl
scas
xor
mul
push
sbb
mov
sbb
pushf
cmpsb
adc
sub
cmp
cmp
jg
arpl
sub
scas
stc
sbb
and
in
mov
dec
aas
fwait
cmpb
call
sub
inc
orb
addr16
cmp
outsb
adcl
repnz
xchg
xchg
sbb
and
adc
mov
loope
sti
lods
test
and
jno
cmpsb
jne
jp
fmull
mov
jo
jge
xor
scas
cmc
mov
out
cmp
repz
in
or
call
push
sub
and
loopne
fstl
xor
dec
test
jb
jg
and
testl
add
xchg
ljmp
nop
lcall
ja
fistpl
and
pop
cs
mov
mov
add
int
cmc
mov
jbe
sub
pop
or
mov
mov
adc
jne
jbe
js
push
or
dec
lret
jl
xor
scas
pusha
pop
xor
inc
dec
js
mov
stos
mov
mov
jge
inc
out
test
mov
sbb
inc
arpl
mov
scas
out
lea
int
or
mov
adc
add
inc
and
or
arpl
subb
pop
xchg
fcomip
scas
shrl
sbb
lea
cmp
cltd
pop
sbb
leave
std
xchg
iret
nop
sub
aam
cmpsl
pushf
fs
pop
mov
cs
sbbb
repnz
sbb
push
iret
fwait
cwtl
cmp
cmp
push
cs
pop
mov
xlat
in
ret
jge
add
mov
jmp
sbb
int
daa
mov
adc
mov
jg
mov
add
jae
jbe
pop
cmpsl
fs
pop
pop
out
pusha
jl
icebp
mov
pushf
stc
xor
int
sbb
out
adc
fmull
mov
add
xor
jns
adc
cmp
cmpsl
fcoml
test
xchg
dec
pop
mov
mov
incl
adc
add
nop
and
xchg
pop
movsb
sub
or
dec
push
pushf
sti
xchg
jnp
out
dec
sub
nop
pop
rorl
mov
rcrl
sahf
mov
dec
mov
sub
cld
cltd
sbb
mov
jg
repnz
xor
xor
rclb
rorl
xchg
mov
push
nop
add
mov
dec
inc
jnp
mov
mov
jp
or
sbb
jg
push
jae
mov
imulb
sub
jp
dec
adc
adcb
add
mov
adc
push
stos
iret
pop
je
mov
enter
inc
xchg
mov
push
jp,pn
adc
sarb
mov
add
mov
xor
inc
mov
mov
pop
ret
test
fwait
mov
xlat
sbb
cs
jo
gs
xor
cmpsl
adc
mov
mov
xor
mov
inc
into
or
or
sub
adc
sub
gs
nop
push
insb
inc
xchg
aaa
fmull
mov
stc
data16
out
xor
or
lret
ret
in
daa
push
out
mov
sbb
hlt
pop
mov
rcl
loope
xchg
lods
je
jmp
addl
jmp
in
mov
jp
or
cmp
jb
push
filds
mov
std
sub
jbe
sahf
out
xor
push
jo
xchg
inc
jno
ss
xor
adc
adc
insl
stc
dec
jecxz
inc
add
mov
ret
out
ljmp
xor
fdecstp
fwait
popf
testb
cmc
xchg
add
mov
iret
flds
dec
xchg
int3
mov
and
xor
shlb
and
or
scas
or
fs
pop
ret
shlb
push
mov
add
xchg
pop
dec
jb
jecxz
sbb
jno
daa
mov
out
lret
or
insb
iret
add
sub
ss
adc
jno
stos
out
and
hlt
xchg
jo
sub
ljmp
shll
and
sbb
cmp
sahf
and
test
divb
movsb
std
out
sbb
cli
cmp
and
fcoml
jnp
cmpb
nop
repz
xlat
adc
jg
shl
neg
mov
sahf
test
xchg
xrelease
push
inc
mov
cmp
mov
ljmp
lret
pop
mov
ffreep
ja
test
jp
sub
jmp
adc
movsb
rcrb
lret
xchg
call
adc
cmpsl
ret
lret
xlat
mov
rorl
ret
pop
xchg
pop
aam
cli
mov
das
dec
add
dec
push
jecxz
sub
std
xchg
mov
js
jae
add
add
mov
aas
mov
ja
inc
into
scas
jecxz
out
inc
aas
push
lahf
inc
ljmp
inc
pop
outsb
cmc
dec
out
and
dec
xor
stos
mov
incb
in
lcall
push
inc
xor
stc
or
sbb
fidivrs
lret
ret
and
xchg
push
jge
fistps
nop
and
jp
xchg
sbb
or
loope
outsl
insb
mov
xchg
jnp
add
incb
mov
adc
ficoml
mov
xchg
mov
xlat
in
jge
xchg
mov
enter
cmc
fldenv
mov
bound
sub
mov
in
jmp
sti
mov
push
je
jns
mov
mov
adc
in
mov
testl
out
stos
and
mov
or
aas
push
jmp
out
push
std
jno
push
test
add
pop
jmp
outsl
mov
cmp
mov
jge
fwait
lds
mov
stos
pop
iret
push
jne
mov
pop
xor
rcll
mov
lcall
mov
insl
pop
jnp
mov
clc
pop
das
jp
inc
xchg
mov
pop
call
jge
repnz
fs
lea
roll
jg
adc
inc
insl
jmp
mov
and
xchg
push
push
sbb
outsb
repnz
rcrl
sbbl
jecxz
mov
adc
mov
ret
push
jne
iret
out
sar
xor
into
loop
mov
mov
or
ss
mov
sbb
ret
xchg
leave
insl
movsl
or
ficoms
mov
decb
scas
lock
les
dec
mov
inc
pop
dec
fwait
call
icebp
shll
int
xchg
push
imul
fidivl
jns
jbe
addb
fstl
mov
pop
enter
test
xor
inc
mov
mov
cmp
and
sub
cmc
imul
cmp
shl
jns
add
ss
adc
cmovnp
lahf
and
scas
daa
xlat
lret
and
jnp
or
nop
xchg
lahf
add
sub
pop
cwtl
push
pop
inc
int3
leave
and
jnp
out
daa
mov
sbb
adc
inc
push
mov
jg
imul
dec
mov
pop
push
adc
out
aad
repnz
sub
fisubl
push
loope
and
lea
jae
mov
adc
push
testb
int3
scas
rcl
mov
cmp
in
rcrb
incl
movsl
sub
hlt
div
sub
adc
pop
hlt
add
scas
or
fldenv
test
loop
bound
xor
and
adc
add
jge
adc
sub
rcll
fadd
shlb
std
lret
adc
movsb
mov
push
test
imul
rclb
repz
push
xchg
neg
in
mov
or
rcll
mov
jns
ss
in
nop
loopne
dec
adc
mov
sub
in
add
xchg
push
test
adc
jl
xchg
pop
pop
loopne
testl
push
cmp
mov
adc
ja
cmp
in
dec
shrl
cmp
cmpsb
mov
push
jb
xor
sub
xchg
sub
pop
dec
lds
outsb
leave
mov
push
cwtl
addr16
adc
into
rorb
sbb
inc
std
lods
int3
jp
mov
pop
das
lfs
stos
mov
and
mov
out
outsb
aam
jg
pop
in
jp
lcall
fwait
cltd
inc
sub
pop
daa
and
mov
push
shr
pop
mov
adc
lock
mov
jae
cs
mov
mov
xchg
sbb
cmp
fisttps
je
inc
and
and
adc
pop
popa
push
mov
dec
jg
jbe
mov
mov
jo
add
gs
xchg
mov
push
popf
or
daa
mov
outsl
mov
xchg
das
roll
push
sbb
and
outsl
ret
test
stc
dec
data16
jmp
adc
cmp
popl
and
nop
sub
inc
mov
scas
pop
sub
push
stos
or
push
add
xor
lock
inc
iret
sub
xchg
out
and
xor
rol
sti
shlb
jne
lret
test
repnz
xchg
mov
ja
fwait
dec
shlb
mov
lods
sub
addl
insb
mov
rolb
imul
push
jmp
in
scas
test
in
xchg
lods
jmp
and
popf
fwait
mov
sahf
jecxz
aam
xchg
cli
pop
sub
fimull
jb
daa
fbstp
lock
mov
mov
inc
outsb
out
rolb
jae
inc
test
dec
xor
cmp
xchg
sbb
push
xchg
lock
fwait
and
sbb
sti
xlat
push
and
cmpsl
sub
dec
xchg
leave
or
scas
xchg
test
push
fnstsw
xchg
pop
sahf
pop
cmp
sub
das
pop
dec
jns
inc
xor
nop
fsubs
in
popf
xchg
or
in
mov
pop
or
adc
and
jbe
mov
shrl
fldt
inc
fdivs
cld
xor
aam
cs
push
mov
out
in
and
aad
jbe
aas
pop
fxam
mov
jl
notb
outsb
xchg
dec
clc
sub
add
jg
nop
mov
lds
adc
sahf
pop
fisttpll
pop
clc
inc
cmc
jno
xchg
mov
js
cmp
loopne
push
and
xchg
mov
sbb
in
dec
cmp
lahf
dec
loopne
pop
cmc
xchg
jg
test
mov
aad
pushf
in
iret
into
xor
hlt
daa
out
loope,pt
mov
cmp
in
cwtl
out
daa
scas
lahf
ficoml
push
mov
adc
cmp
and
shll
mov
test
sbb
iret
xchg
mov
xorb
mov
mov
xchg
or
jge
out
adc
icebp
aas
popf
pop
mov
jl
mov
add
dec
inc
lret
mov
sub
adc
sbbb
add
inc
js
adc
rcr
jbe
jns
negl
push
scas
les
imul
cs
jo
test
push
filds
sbb
test
nop
sub
push
add
inc
mov
and
pop
lret
mov
mov
inc
jne
push
outsb
xchg
mov
lcall
adc
out
mov
jg
das
aaa
push
mov
cld
jmp
cmp
push
cmp
sub
xchg
in
jbe
xchg
stos
or
mov
inc
xorb
or
not
loope
ja
sub
or
nop
or
cmpl
add
leave
in
inc
jne
mov
stc
inc
inc
add
ret
outsb
mov
shll
arpl
jge
andb
cmpsl
mov
int3
outsl
sti
jno
xor
xchg
xchg
scas
and
mov
dec
and
sbb
stos
pop
adc
lret
dec
push
scas
int3
scas
push
add
ljmp
sbb
lahf
inc
out
daa
fmuls
dec
lret
jne
arpl
xchg
in
pop
inc
clc
cld
sub
sub
cmp
mov
cmp
adc
mov
push
aam
adc
mov
ficompl
adc
scas
lret
mov
lcall
adc
mov
push
xor
sahf
mov
sarb
sarb
adcb
test
jecxz
or
xchg
stos
fcoms
xchg
nop
pop
out
ss
mov
jbe
clc
pop
mov
push
pop
jg
xor
pop
mov
pop
orb
lret
xchg
inc
xorb
mov
add
je
xchg
jno
xor
push
fstpl
jge
movsb
jg
cmp
cmp
mov
and
jns
mov
mov
jge
neg
jmp
dec
or
cli
jg
lret
shlb
mov
and
imul
push
xchg
xor
ficoms
mov
cltd
add
xor
pop
call
xor
into
pop
mov
pushl
cld
sbb
xchg
out
lahf
cmp
jle
cmp
push
sahf
inc
lock
rclw
divl
ja
lahf
arpl
es
xor
rcl
mov
adc
lods
lds
fstp
or
aaa
lods
mov
cmpsb
push
xchg
mov
jl
je
icebp
rcll
outsb
dec
jnp
data16
xchg
adcb
sub
pusha
mov
leave
das
ljmp
or
lods
cmp
jge
int3
out
repnz
dec
in
cmp
into
cmp
sbb
push
in
and
jmp
ret
subl
mov
sub
leave
dec
test
pop
nop
mov
lds
mov
adc
inc
repnz
mov
gs
xchg
int
cltd
in
fnstenv
xchg
mov
add
xchg
pushf
fwait
sahf
bound
sti
ficoml
jnp
and
fwait
xchg
cmp
cmp
test
xchg
imul
stos
pop
push
cmp
loop
mov
push
xchg
aam
push
or
mov
xor
popl
stos
sbb
inc
sbb
lcall
xchg
test
bnd
jp
aad
shlb
nop
icebp
cmpsl
mov
adc
aam
aam
fnstcw
mov
stc
jbe
fs
sbb
aaa
arpl
mov
test
stc
test
push
pop
push
or
mov
mov
inc
xor
inc
xor
xor
xchg
mov
sar
scas
cmp
mov
dec
jns
repnz
mov
dec
sbb
lahf
push
aad
aam
adc
imul
xchg
lahf
ret
arpl
in
mov
cmp
pop
jo
push
andb
adc
gs
mull
sar
out
cs
iret
sbb
xchg
lds
mov
cmpsl
iret
fidivl
pop
jge
xchg
push
mov
adc
mov
lret
nop
inc
fsubrp
fisttpll
aaa
add
test
xchg
pop
cmpsl
fnstenv
icebp
mov
xchg
lock
nop
fisubrs
mov
xchg
push
inc
ret
mov
ljmp
jno
ret
sub
ret
pushf
xor
scas
aad
and
cmp
adc
mov
loope
outsb
aad
add
xchg
arpl
adc
lea
jnp
pop
mov
setne
pushf
xor
and
adc
mov
and
xor
movsl
lahf
nop
adc
push
sarl
mov
arpl
and
fisubs
and
jg
inc
mov
add
push
pushf
ret
dec
xchg
push
and
mov
jae
negb
dec
lds
test
inc
jmp
test
shlb
push
fcompl
pushf
xor
inc
or
imulb
xchg
fisttps
sbb
mull
das
push
nop
test
hlt
adc
pushf
sti
push
andl
icebp
and
int
sbb
icebp
inc
aam
jae
push
adc
test
rol
popf
in
lods
rcrl
loopne
lock
enter
iret
shlb
sbb
inc
pop
in
data16
cs
and
aam
in
rorb
jg
cmp
les
andb
push
loop
daa
sbb
popf
xchg
cmpsl
nop
lods
push
jo
push
xchg
xor
bound
pop
lret
dec
imul
lea
xor
fisubl
pop
fldenv
dec
lret
jb
lret
pop
lds
mov
fsubl
mov
test
push
cltd
mov
aam
pop
or
and
outsb
leave
out
mov
ss
cmp
repnz
insl
push
pop
fcoml
rolb
daa
xadd
or
mov
mov
dec
jge
sub
add
lret
cmp
pop
xchg
stos
das
fstps
les
push
jb
aaa
leave
outsb
test
pop
cmp
add
nop
inc
push
jbe
mov
adcl
loopne
movsl
pop
mov
mov
scas
add
bswap
mov
lock
xchg
jg
shl
jmp
sub
add
xor
cmpsb
or
rcll
add
sub
inc
ja
aam
ljmp
mov
dec
push
fsubs
scas
mov
push
leave
push
cmpsl
xor
or
pop
imul
js
cmp
test
rcr
inc
rol
test
sbb
shrb
push
dec
aam
mov
fildl
inc
mov
nop
sbb
test
push
lret
sbbb
in
nop
and
mov
jo
sbb
mov
in
jmp
fs
out
popl
fldl
sbb
mov
pop
adc
or
push
xchg
iret
je
lret
lahf
push
inc
lds
repz
mov
lcall
stos
push
scas
out
xchg
or
fsubrl
cmp
pop
fstl
movsl
into
rorb
ja
sub
inc
es
sub
ret
iret
imul
insl
pop
push
push
fidivl
push
mov
sub
fbld
mov
push
cmp
pop
adc
sbb
sub
xor
aam
mov
in
scas
out
negb
ficoms
popa
aaa
jmp
inc
mov
movsl
int
notb
fldenv
in
stos
ret
mov
sub
sbb
jle
inc
xor
aas
jge
pop
mov
int
bound
in
clc
out
dec
jbe
cmp
jg
push
sbb
inc
out
int
adc
push
inc
pushl
pand
mull
inc
jge
mov
idivl
jne
fnstenv
scas
dec
inc
xchg
sub
cli
in
inc
icebp
push
loope
mov
jg
lods
xor
sbb
fsts
cli
inc
add
popa
cmp
mov
enter
xor
nop
mov
jns
dec
jne
mov
std
sub
aas
xchg
add
shrb
xchg
mov
xchg
xchg
xchg
popa
pop
test
ss
decb
fs
fs
adc
mov
jno
addl
push
or
xchg
arpl
xchg
mov
sub
imull
sbb
xlat
fcoml
inc
mov
jp
mov
pop
icebp
xor
and
add
icebp
aaa
dec
jge
add
lods
push
jmp
fwait
nop
jbe
cld
out
sbb
enter
pop
loope
jno
push
mov
xchg
scas
loope
dec
dec
inc
lods
and
shrb
inc
inc
sbb
adc
or
jg
pop
mov
ficompl
jge
call
fbld
jg
jo
lds
lea
dec
pop
aas
bnd
xchg
test
or
push
dec
or
flds
leave
fisttps
push
loopne
or
dec
jns
cmc
xor
cmp
mov
mov
inc
mov
add
mov
add
int
xchg
aaa
or
xor
data16
inc
xchg
enter
xor
mov
popfw
mov
mov
adc
sub
jb
xor
ret
xchg
mov
pop
rclb
test
mov
mov
or
sahf
sub
jle
sbb
xor
push
mov
aam
xor
fdivl
pop
aas
mov
rclb
lods
push
int3
pop
bound
mov
dec
call
xlat
push
icebp
push
fisttpll
mov
jg
dec
roll
adc
aas
stos
aad
xchg
aam
inc
cltd
js
rcrb
xchg
inc
aas
daa
xchg
aam
out
cmp
add
jecxz
rol
push
fsubl
insl
enter
lds
or
insl
push
dec
dec
ret
push
mov
orl
movsb
xchg
sub
outsl
push
in
popa
sub
outsb
cmp
jbe
ljmp
lcall
aaa
mov
movsl
fadd
xor
call
fidivrl
rcrl
mov
aaa
jo
or
fdivl
xlat
pusha
imul
insb
popf
fists
aas
out
xlat
es
push
test
adc
lea
mov
arpl
lods
push
xlat
add
hlt
pop
adc
xor
mov
pop
test
popa
in
shl
mov
xchg
gs
aaa
dec
inc
pop
mov
roll
repz
jno
cmc
mov
xlat
test
dec
inc
push
idivb
pop
pop
fmul
mov
ds
jno
sbb
cmp
push
mov
test
adc
lahf
in
pop
into
sbb
icebp
pop
push
adc
pop
aam
mov
push
mov
push
mov
pop
nop
lods
dec
jg
cmp
mov
xlat
movsl
sub
cmc
mov
jecxz
shr
push
outsb
xlat
es
inc
jg
ljmp
pop
jmp
push
lds
xlat
jg
fs
xlat
cmp
leave
xor
pop
push
testl
cmpsb
cltd
pop
xlat
or
push
mov
xlat
sbb
sub
jbe
mov
ds
popf
push
push
leave
xlat
mov
adc
lahf
mov
push
ror
inc
xlat
cmpsb
data16
out
icebp
lods
mov
inc
push
insb
sub
ror
mov
enter
into
loopne
xlat
push
ja
push
add
sub
rcrb
test
mov
aas
dec
or
dec
gs
js
test
mov
mov
adc
inc
pop
mov
mov
push
xlat
movntps
iret
pop
jo
xlat
inc
lock
jns
arpl
mov
sub
daa
mov
cmp
cld
ja
out
addr16
out
mov
add
mov
in
rorl
test
dec
mov
or
js
dec
adcb
adc
negb
icebp
int3
push
int3
cmpsb
insl
adc
or
out
ss
push
mov
cmpb
inc
xlat
clc
mov
popa
jmp
lds
sbb
jmp
sar
push
dec
enter
add
jp
xlat
aad
jne
repnz
xor
cmp
jns
pop
add
mov
sub
out
ret
xchg
je
or
xor
xlat
imul
xlat
cmp
scas
inc
xlat
jmp
pop
or
jno
pusha
ljmp
aam
scas
loop
push
pop
aaa
sub
rorl
shll
xchg
scas
imul
inc
lock
rcrb
jb
lahf
dec
addr16
cmc
mov
xchg
mov
or
lahf
xor
dec
mov
aam
pushf
sub
into
and
adc
sbb
sub
mov
neg
xlat
xchg
and
jge
xlat
aam
xchg
inc
rcrl
and
add
push
lds
or
idivb
mov
faddp
mulb
scas
inc
js
cmp
mov
and
push
add
lea
pop
xor
idivb
sti
xchg
or
push
xlat
mov
cwtl
inc
xor
pop
push
fistl
fists
nop
sahf
in
cmc
jbe
cwtl
xlat
fsubl
jp
push
lret
leave
xlat
mov
imul
inc
or
jbe
cmpsb
dec
and
xlat
mov
mov
push
xlat
jle
cltd
mov
faddl
fcomps
popa
jmp
movswl
mov
rolb
xchg
dec
scas
xor
add
xlat
inc
das
or
xor
add
mov
test
mov
fnstsw
xchg
cmp
xor
adc
add
cmp
aam
push
test
push
mov
dec
and
mov
mov
roll
xlat
mov
call
push
xchg
flds
nop
jge
mov
mov
hlt
mov
mov
xchg
xlat
inc
andb
fcmovnu
xlat
mov
sub
xlat
xor
cmpsb
fsubs
xlat
out
cmc
enter
mov
loop
xchg
adc
sub
cmp
jne
cmp
or
aad
fnsave
or
push
pop
inc
insl
clc
in
xor
ss
sbb
movl
pop
int3
sbb
es
lret
add
js
add
adc
adc
inc
rcrb
inc
xchg
nop
es
add
mov
aaa
push
std
mov
mov
js
add
fcmovne
jno
pop
pushf
insb
add
sbb
jl
pop
hlt
xchg
fists
xchg
nop
pop
mov
sarl
std
mov
fmuls
push
add
sbb
add
call
in
cmc
andl
add
sub
repnz
jns
adc
stc
lds
inc
in
mov
dec
mov
out
xchg
or
loopne
fnstcw
loope
out
int3
scas
nop
rcl
imul
scas
xchg
adc
sub
mov
or
and
xchg
inc
repnz
mov
sub
add
pop
cmp
aam
add
je
jb
mov
mov
cmp
push
jbe
jno
dec
ljmp
adc
adc
sub
loopne
jae
repnz
dec
mov
xchg
shl
repnz
shrl
arpl
outsb
push
in
xlat
mov
sar
int
jnp
adc
imul
cmp
mov
mov
iret
repnz
ds
adc
xchg
sbb
clc
inc
test
scas
jmp
lods
int3
pop
cltd
xchg
and
jns
mov
je
jecxz
jo
sbb
arpl
xcrypt-cbc
cmpsl
adc
mov
repz
xor
push
pop
add
fsubl
js
xor
out
or
cmpsb
push
inc
jge
jmp
sub
adc
mov
pop
cld
mov
leave
insb
movsb
xchg
nop
repnz
in
xchg
iret
dec
push
out
jnp
push
scas
in
and
aad
and
mov
and
test
lret
enter
sbb
test
mov
shl
jnp
pop
add
icebp
lret
mov
out
iret
mov
inc
pusha
xchg
jg
inc
imul
or
std
popl
cmp
add
push
fsubp
daa
imul
shrl
sbb
in
sahf
outsl
xor
out
inc
sbb
loope
xchg
scas
mov
xor
jbe
sbb
in
sbb
mov
iret
sub
aaa
incl
mov
repnz
cmp
xchg
add
nop
jp
inc
adc
jne
add
push
inc
xor
aad
xchg
arpl
push
jne
push
xorl
adc
nop
xchg
iret
mov
jmp
lea
test
loopne
cmpsl
stc
jbe
movsl
mov
fs
cs
flds
push
or
mov
call
scas
inc
mov
pop
mov
repz
mov
clc
shl
cmp
mov
jnp
xchg
decl
subb
mov
mov
and
mov
push
sbb
pushl
pop
inc
mov
xchg
daa
jo
xchg
orb
std
ret
mov
inc
push
push
fs
add
inc
repnz
out
inc
mov
aad
test
daa
add
mov
out
dec
adc
ret
aam
sub
nop
adc
cmp
dec
in
add
sbb
je
test
in
xlat
repnz
or
inc
xchg
lods
popf
mov
mov
outsb
push
mov
loopne
stc
jp
out
add
jb
ds
mov
pop
xchg
xchg
dec
xlat
push
std
and
push
adc
ss
test
cmp
mov
fildll
xchg
xor
nop
daa
add
fsubs
adc
pop
jo
rclb
xchg
std
dec
jns
push
out
outsb
fiaddl
call
ret
xlat
mov
push
in
mov
mov
rcr
push
xchg
mov
jge
adc
xlat
aaa
mov
cwtl
and
inc
nop
stos
xlat
fdivrs
mov
push
cmp
push
xlat
dec
test
movsl
xchg
pop
in
in
or
pop
js
add
sbb
shrl
mov
sahf
andl
jg
inc
iret
dec
inc
lret
pop
test
lret
jo
clc
add
fdivs
pushf
pop
xlat
pop
mov
or
mov
xor
call
idivl
xlat
loopne
je
in
scas
push
into
xlat
pop
popa
jl
mov
push
frstor
lods
adc
push
xlat
mov
xor
dec
add
out
rcll
jns
mov
xchg
cs
push
xor
scas
add
mov
rcl
mov
jp
push
fsts
mov
push
xor
leave
xlat
aam
add
sub
int
iret
in
je
in
insb
fst
cwtl
pop
fsubrp
nop
or
push
ror
mov
or
out
stos
test
int
mov
sbb
mov
add
push
popa
dec
sub
fwait
xchg
mov
inc
call
addr16
insl
bound
rorl
pop
sbb
xor
xor
lods
out
xlat
mov
xor
mov
or
xor
enter
push
mov
xlat
and
filds
xlat
xor
dec
popa
xlat
icebp
push
push
and
aam
mov
mov
jmp
movsb
std
add
rcrb
inc
imul
pop
cmpsl
mov
xlat
stos
inc
lcall
ss
mov
push
into
push
clc
icebp
jl
scas
add
stc
push
xlat
mov
shlb
xlat
fs
in
out
push
fwait
push
adc
push
pop
and
pop
je
xorb
roll
rol
xor
in
jg
fisubrs
aad
seto
lcall
in
mov
aad
push
mov
fidivrl
push
and
in
mov
jo
cmp
adc
pop
sbb
jb
sbb
iret
jnp
mov
jbe
scas
mov
xlat
sub
inc
mov
sahf
xor
cmp
xor
loop
pop
adc
sbb
push
dec
shl
insl
jg
xor
xchg
popl
or
and
shlb
imul
test
jecxz
enter
mov
pushw
lahf
int
cmp
loop
sbb
jmp
mov
jle
and
xor
in
sub
add
int
mov
mov
test
mov
push
cmp
or
jnp
lahf
and
xor
push
xlat
adc
add
inc
stos
push
movsb
adc
mov
add
xchg
push
lret
mov
push
jmp
imul
and
xlat
sub
mov
inc
iret
shrb
sbb
addr16
xlat
orl
pop
mov
cmp
add
and
push
loopew
or
rcl
cld
clc
xchg
xlat
sub
addr16
iret
push
fsubs
shl
xlat
ret
push
iret
xor
scas
jo
mov
sub
xlat
or
stc
push
in
addl
add
ss
push
popf
fwait
cmpsb
mov
std
addr16
rcrl
imulb
push
fcom
ret
dec
jp
orb
mov
push
les
arpl
test
scas
push
cmp
xor
inc
lock
lahf
mov
dec
xchg
sarb
loop
test
push
inc
mov
mov
add
adc
sarl
movsl
test
adc
cmp
dec
xlat
lret
test
mov
xlat
imul
outsl
js
pop
jmp
mov
cmpb
jae
cmp
es
or
and
push
cmp
outsl
lods
mov
adc
gs
xlat
add
mov
mov
pop
cltd
add
jae
rcll
push
push
cmp
out
xor
pop
mov
insb
dec
cmp
movsb
add
nop
cli
mov
dec
pusha
mov
inc
pushl
xlat
int3
ret
fstps
add
std
add
rorl
xchg
xlat
add
ljmp
mov
sbb
ltr
mov
movsb
xchg
mov
jne
jns
rorl
push
add
sub
xlat
mov
mov
bound
xlat
push
mov
inc
aas
xlat
inc
das
xchg
fwait
and
outsl
fisubs
sbb
jmp
xchg
dec
xchg
shll
jl
movsb
xlat
imul
adcb
xlat
imull
fisubl
aas
sti
mov
addr16
pop
sbb
cmc
jnp
xor
and
jns
inc
pop
xor
jg
inc
xchg
shrl
xor
pop
xlat
pushf
stos
mov
mov
call
cmp
pop
push
xlat
pop
int3
push
cmp
push
jnp
mov
push
jmp
in
rcrl
cmpl
fbld
xchg
pushf
xlat
jg
into
clc
js
inc
sbb
mov
push
jns
xlat
xor
dec
repnz
jmp
scas
outsl
icebp
cltd
adc
inc
insl
out
fimull
mov
inc
leave
mov
or
jae
mov
in
xlat
clc
xchg
add
movsl
iret
jbe
popf
push
aam
enter
cmp
push
imul
xlat
in
je
mov
jbe
jae
push
rcll
jne
ret
clc
xchg
es
in
pop
mov
xlat
sbb
jmp
inc
mov
cmp
pop
mul
rcl
or
mov
mov
inc
sbb
lahf
mov
pop
mov
xlat
jnp
jmp
cmpsl
xlat
or
mov
iret
pop
jb
movsl
push
add
mov
mov
mov
cmpsl
fcoms
push
loope
mov
lcall
xor
sarb
or
xchg
xlat
sti
inc
inc
in
mov
mov
iret
xchg
add
sets
xlat
sub
xlat
push
push
cmp
in
rorb
mov
and
data16
arpl
clc
scas
cs
or
push
dec
fs
xchg
subl
dec
mov
add
iret
repnz
and
mov
pop
mov
je
cmpb
out
sub
sbb
mov
test
leave
fistl
cs
adc
mov
add
outsb
hlt
cli
lret
xlat
orl
dec
aad
fwait
sub
rclb
and
jae
xlat
loop
mov
call
add
out
mov
mov
stc
in
rcll
or
test
sbb
pop
fadds
arpl
mov
cmpsb
xchg
std
sarl
aam
cmc
outsl
push
xlat
repz
mov
dec
mov
dec
popa
xlat
es
mov
cmp
push
xlat
sub
ljmp
popf
jl
jno
fiaddl
jp
shl
cmp
xchg
sub
mov
shll
enter
es
insb
mov
leave
cwtl
xor
xchg
rcll
inc
sub
dec
pop
fwait
into
pop
xchg
stos
movb
mov
push
sub
mov
xlat
mov
adc
loopne
fcmovnbe
mov
cmp
sti
rcrb
scas
mov
xlat
int
les
mov
mov
xchg
testb
lock
popa
sbb
cli
gs
out
xlat
aas
test
ret
mov
shrl
jge
not
jp
mov
in
pop
and
insb
scas
xor
jbe
lods
push
xlat
inc
or
fimuls
sub
push
xor
xlat
iret
sub
mov
jo
repnz
lahf
push
sarb
xchg
test
cli
test
pop
xlat
xchg
push
icebp
dec
mov
xchg
mov
addb
inc
ror
xor
inc
jl
mov
xlat
imul
es
mov
dec
hlt
test
sbb
int3
jp
mov
sub
adc
xchg
and
push
xlat
mov
mov
pop
les
dec
push
pop
shrl
scas
dec
and
js
dec
mov
cmp
rcll
dec
loop
cmc
repz
jge
stos
lcall
inc
nop
or
mov
xor
mov
xor
and
adc
push
pushf
jnp
push
js
push
mov
insl
mov
sub
pusha
stos
xor
aas
out
shr
and
push
sbb
adc
mov
jo
jb
and
pop
flds
flds
cmp
sar
nop
cld
lds
sub
pop
push
lods
out
add
xchg
fcompl
jge
cmp
sbb
ds
pop
aaa
mov
sub
mov
enter
repz
or
cmp
adc
pop
mov
orb
mov
pushf
sub
and
jae
enter
shll
pop
js
xchg
jo
inc
jnp
jle
sbb
movsl
jmp
arpl
out
scas
xor
mov
push
shlb
jl
adc
pusha
dec
pop
pop
stos
aaa
lock
int3
nop
pusha
stc
xchg
mov
jno
dec
add
mov
sbb
es
adc
inc
push
inc
adc
clc
sub
mov
pop
pushf
ljmp
jp
mov
into
daa
inc
int3
and
xor
xchg
in
popl
lret
aam
and
mov
xor
loope
stos
xchg
xchg
mov
gs
or
mov
sbb
scas
mov
loope
mov
jg
push
push
push
pop
jns
xchg
fld
and
neg
dec
fdivrl
ljmp
jge
mov
inc
xchg
inc
mov
gs
push
and
in
jmp
push
fsubl
mov
adc
pop
clc
fwait
call
push
orb
pop
icebp
imul
add
adc
mov
sbbb
push
roll
cs
and
sbb
rorb
jmp
pop
jne
iret
jnp
nop
cld
mov
movsb
mov
pop
jo
cmc
xor
or
cltd
xchg
dec
iret
push
pop
lret
popa
scas
cs
push
aam
movsl
bound
in
adc
mov
cmp
dec
xchg
aad
outsb
cmp
enter
int3
mov
xlat
pop
adc
xchg
jmp
mov
and
sbb
flds
fldcw
cmpsl
inc
nop
mov
rcrb
xor
add
pop
inc
out
es
mov
cmp
jmp
ds
jne
cmp
repnz
push
and
icebp
daa
jl
mov
repz
jne
loope
xchg
pop
mov
rcll
movsb
inc
cmpb
movsl
lret
mov
vmovups
mov
loope
ret
int3
push
lods
aam
mov
je
rorl
sahf
and
fsubs
jecxz
ret
push
test
repnz
mov
or
mov
js,pt
pop
xchg
sbb
scas
jmp
mov
and
mov
lods
jne
and
notl
outsb
cmp
sub
or
shll
push
jno
in
push
out
out
nop
out
add
inc
push
lods
xchg
aas
adc
jb
sarb
in
mov
ret
inc
xchg
mov
lret
adc
sbb
xlat
fsts
push
sti
mov
out
mov
enter
je
xlat
adc
cmpsb
mov
cmp
cmp
adc
mov
repz
xlat
sbb
dec
xlat
pop
imul
and
push
call
cmc
stos
and
xchg
js
call
hlt
ja
int3
insb
sub
jmp
scas
xlat
mov
loope
jp
cs
pop
repnz
jae
mov
sarl
xlat
ret
test
xlat
in
ret
aas
cmpsb
sub
jmp
xlat
repnz
mov
sbb
add
cmp
cmp
loop
in
cmc
or
movsl
call
xor
scas
cmpl
cmpsb
add
mull
fstpl
rcrl
mov
adc
push
lret
cmp
out
push
mov
add
cs
jp
sub
das
lea
cmc
sbb
xlat
or
pop
movsl
cmp
add
jg
test
sbb
mov
rcl
jecxz
mov
dec
xlat
xor
add
pop
inc
daa
mov
ret
cmpl
xlat
or
mov
xchg
loope
xlat
leave
mov
xorl
xlat
mov
sub
xlat
pop
in
push
scas
cltd
repz
xlat
xchg
ds
mov
and
loop
lea
mov
lock
test
pop
fcmovnu
cmpsb
xlat
arpl
out
outsb
hlt
xlat
mov
idivl
mulb
mov
ret
fistl
hlt
xlat
lods
mov
repz
adc
outsl
xlat
sub
setb
xlat
pusha
cs
loop
stos
test
cmp
out
pop
mov
cwtl
adc
pop
dec
inc
in
mov
pushw
xor
or
loop
pop
pop
fcom
xor
test
je
jb
ja
push
into
cmpl
adc
jo
jne
jl
xlat
insl
loop
jae
push
mov
lahf
mov
shr
pop
xchg
nop
adc
test
push
andl
insl
push
mov
mov
cli
std
push
mov
nop
sbb
or
jbe
xchg
in
inc
cld
xor
mov
add
fdivrl
cmp
or
enter
addb
ret
rcrb
nop
nop
ds
add
movsl
xchg
call
jae
gs
fbstp
xor
daa
xchg
adc
push
int
push
xchg
dec
shlb
pushl
ss
pop
cld
pop
out
jmp
daa
aaa
add
xor
mov
dec
lods
repz
xchg
cmp
jne
gs
lret
and
ret
ret
sub
sarb
sarb
addr16
aam
xchg
or
dec
jmp
xchg
inc
xchg
stos
mov
inc
mov
aaa
xchg
icebp
daa
aad
fcomi
lcall
xchg
cmp
push
xchg
xchg
cmp
pop
outsl
in
inc
mov
xor
loopne
ret
push
ret
sbb
dec
push
adc
or
cmp
or
imul
movsl
cmp
in
mov
inc
jg
fnstenv
in
lds
sbb
and
aaa
sarb
nop
ret
inc
pop
cmc
js
and
imul
jo
adc
lock
adc
adc
inc
cld
out
inc
lods
push
push
stos
fldenv
xchg
js
lahf
lahf
jmp
stos
out
mov
in
xchg
loope
mov
das
test
jae
push
outsl
push
iret
mov
lret
mov
js
faddp
cmpsb
mov
lret
sub
add
movsb
or
scas
or
daa
lea
test
std
push
sub
aam
push
dec
pop
sbb
cmc
or
imul
roll
movsl
add
jnp
repz
push
xor
sahf
or
enter
outsl
sub
xchg
pushf
pop
int3
aaa
movsl
lods
test
xchg
shl
fisubl
inc
shl
scas
pusha
jecxz
xchg
ja
lods
imulb
fsubl
pusha
jno
cmp
add
fs
adc
or
inc
pop
fdivl
adc
fadds
cmp
aas
nop
push
xchg
xchg
dec
sbb
mov
sbb
aas
mov
jne
popl
ret
cli
mov
lock
int
shl
pop
andb
pop
repnz
dec
fists
out
pop
int
add
pushf
mov
cwtl
lahf
jnp
mov
sbb
fbstp
aam
jp
pop
repnz
mov
push
mov
fnstcw
sub
imul
movsb
pop
push
inc
mov
insb
rorb
imul
lock
jecxz
push
or
sub
xchg
mov
mov
push
testb
fwait
cmpsl
movsl
xchg
dec
inc
sahf
dec
pop
mov
jno
jo
gs
inc
mov
rcrl
data16
push
pop
nop
mov
mov
xchg
mov
mov
jo
cld
pop
rorb
int
lds
mov
push
rorb
sub
sub
inc
xchg
mov
sti
adc
add
pop
sub
and
mov
out
dec
fadds
push
or
pushf
fldl
jnp
divl
cmpsl
xchg
std
cmp
jnp
dec
mov
pop
push
jmp
inc
cmp
jmp
jge
aam
cltd
nop
jge
xchg
pop
add
ficompl
ret
cli
mov
mov
jbe
lcall
or
xor
cmpsb
xor
rolb
sti
add
shlb
jp
fnstenv
xchg
sbb
sti
push
pop
popl
nop
ds
mov
mov
out
fwait
imul
bnd
sbb
rcr
fdivrl
jmp
arpl
lret
mov
jp
jmp
xchg
andb
push
ror
inc
pop
enter
js
dec
pop
mov
scas
ljmp
and
sbb
out
mov
pushf
add
fstps
lods
inc
push
jge
jne
jno
es
fst
pop
jnp
adc
cmp
mov
lahf
push
sbb
jp
xor
repnz
cmp
aas
cwtl
jg
inc
scas
int3
repnz
pop
xchg
pop
loopne
daa
clc
sub
sbb
push
cmp
sub
aad
ja
push
fisubl
jge
push
arpl
les
jne
xchg
nop
rcrb
lds
xor
imul
jbe
sub
mov
fildl
add
fisttps
shrb
fisttpll
vaddss
icebp
adc
int3
popf
push
loop
fbld
or
cmpsl
shrl
sub
mov
mov
fiaddl
sub
cmp
addb
add
mov
mov
sbb
das
cmpsl
jl
in
call
stos
cmpsb
pop
xor
lods
mov
pop
stos
test
imul
xor
adc
in
inc
enter
xchg
lahf
test
mov
mov
or
dec
adc
aas
scas
or
xor
roll
mov
add
in
movsl
clc
gs
clc
pop
xor
stos
popa
dec
fimull
mov
xorl
mov
and
add
mov
incl
mov
mov
cwtl
test
aas
shlb
inc
clc
sbb
scas
dec
fs
jp
xor
nop
ret
aad
dec
sub
xor
sub
sbb
xchg
fcomps
leave
xchg
sbb
ret
pop
fisttpll
aaa
push
dec
push
pop
aas
jbe
xchg
xlat
lea
jg
aam
push
cmp
mov
push
ficoml
les
jne
jp
data16
jns
adc
adc
sbbl
pop
pusha
push
lret
ficomps
cmp
sbb
and
push
ds
nop
or
stc
xchg
popf
iret
aaa
mov
xorl
xchg
fs
inc
or
push
xorl
ds
ja
push
test
pop
lods
nop
addr16
iret
mov
pop
incl
iret
aam
xchg
and
stos
xchg
xchg
out
js
aas
mov
push
nop
jne
pop
mov
in
mov
push
arpl
test
fsubs
mov
xchg
dec
adc
and
pop
ss
cmc
mov
lods
xchg
pushw
repnz
in
push
xlat
repz
pop
rorb
mov
es
repnz
mov
dec
cmp
mov
push
int
jnp
and
xor
xchg
rorl
lahf
fsts
pop
mov
push
sbb
hlt
mov
push
inc
mov
je
mov
jbe
add
arpl
out
mov
rcrb
mov
adc
repnz
sarl
rep
xlat
jb
in
popf
ret
enter
mov
roll
xlat
fdiv
outsl
adc
movsl
mov
stos
dec
fwait
jecxz
xlat
jb
adc
xchg
mov
bound
orb
sub
xchg
out
push
sbb
lea
jo
pusha
push
xlat
or
mov
popa
xlat
jnp
sub
test
dec
pop
sahf
fisubs
dec
cmpsb
and
push
mov
xor
rcl
insb
or
adc
jmp
jns
sar
mov
cmp
mov
mov
mov
xchg
lock
int
orl
xlat
lods
pop
add
lahf
xlat
sbb
mov
jecxz
adc
xchg
out
pop
mov
or
rolb
push
sbb
hlt
gs
lret
jb
clc
adc
xlat
mov
xchg
cmp
inc
lods
inc
nop
pop
mov
xor
subb
push
or
push
pop
call
ret
dec
inc
jne
in
jl
sub
jp
ljmp
inc
xor
sub
xchg
daa
mov
mov
jp
notb
mov
xorb
mov
or
pop
ljmp
dec
xchg
add
ficoml
test
mov
or
rcrb
mov
ficoms
dec
jne
mov
push
cmc
jnp
in
pop
jmp
xor
inc
lods
jnp
lock
and
push
xchg
jp
jne
mov
xchg
js
cmpsb
mov
test
iret
ret
mov
mov
dec
jmp
scas
loope
les
je
leave
call
mov
inc
enter
into
dec
jecxz
pop
cli
sub
push
fsubl
pop
out
mov
aaa
jp
mov
rcl
xchg
ss
jne
dec
push
rcl
scas
add
inc
andb
das
jnp
mov
mov
or
add
jns
and
scas
xchg
fsubrl
test
aaa
jbe
fwait
cmc
fimull
xchg
addr16
mov
push
mov
scas
jle
inc
neg
or
sbb
xor
repz
jbe
mov
pop
xchg
int
scas
jo
stc
jg
push
sbb
add
incb
pop
jecxz
xchg
je
adc
mov
push
mov
add
mov
sbb
hlt
xchg
imul
pusha
aam
mov
mov
ss
stos
pop
in
mov
push
jno
sbb
test
pop
push
jg
xor
sbb
gs
xlat
push
xchg
mov
outsl
int3
data16
jle
fstpt
jl
and
xor
dec
push
rcll
outsl
sahf
cld
sub
jns
jg
and
mov
mov
mov
outsb
sub
clc
mov
adc
repz
ja
pop
movsl
aad
sub
mov
lock
cmp
and
insl
dec
aam
mov
sbb
subb
sub
mov
mov
ja
cmc
dec
and
iret
sbb
mov
mov
push
dec
xchg
push
nop
inc
sbb
test
out
adc
push
mov
sar
int
ljmp
je
xor
int3
adc
ret
sti
mov
enter
inc
mov
repz
sarb
mov
adc
jae
adc
or
into
imul
sub
pop
xor
aam
jmp
xor
dec
cli
mov
sub
imul
mov
call
pop
dec
xchg
mov
push
dec
stc
imull
daa
adc
aam
xchg
sbb
mov
push
pop
mov
add
fcomi
ljmp
iret
mov
mov
cmp
xorb
scas
pop
cli
sub
mov
inc
int
hlt
inc
jb
jns
sub
mov
xchg
movsl
mov
pop
jl
add
jb
mov
nop
sub
imull
mov
inc
and
popf
add
in
fwait
cmpsb
sub
and
hlt
aad
mov
testb
xor
xor
enter
mov
leave
fwait
sub
fldl
in
jle
scas
leave
ja
andl
ret
sub
sub
xchg
sbb
leave
and
fwait
add
mov
orl
in
adc
dec
fnstsw
mov
cmp
out
push
mov
mov
pop
fmull
xlat
xchg
xchg
or
and
jg
rolb
lea
cwtl
test
scas
and
adcl
pop
scas
xchg
inc
dec
xor
xchg
lds
sarl
nop
loope
pop
rolb
fs
mov
jecxz
xchg
jns
dec
je
push
jns
nop
push
add
ret
xchg
flds
xchg
test
mov
cmp
mov
aad
mov
cmc
jno
popa
popa
fwait
and
pusha
iret
cmp
inc
outsb
pop
cmp
sub
imul
inc
lahf
out
bound
mov
push
xchg
jno
jge
test
pop
push
push
push
outsb
rorb
xor
xchg
xchg
sub
sub
mov
inc
lods
mov
and
cmp
cmp
jp
sub
xchg
stc
imul
out
and
lds
lret
call
adcb
sub
xor
xchg
sbb
pop
stc
cmpsb
add
in
and
xchg
mov
push
ja
clc
je
sbb
mov
ret
xor
and
mov
xchg
add
lahf
testb
adc
jb
std
adc
adc
and
xchg
in
and
lea
jns
dec
pop
jae
adc
mov
out
mov
fcompl
adc
cwtl
lock
mov
jno
push
mov
jns
mov
repz
dec
scas
lods
jmp
mov
adc
adc
sbb
push
stos
jle
mov
mov
test
lret
mov
xchg
addb
sub
adc
rolb
lahf
sahf
test
mov
bound
nop
push
pop
in
inc
cmp
mov
mov
je
mov
subb
and
inc
movsb
mov
lods
pop
test
into
ja
push
mov
mov
mov
push
mov
loope
ja
iret
cmc
push
jecxz
cwtl
lea
sub
test
iret
push
mov
sbb
rorb
lahf
pop
inc
dec
push
push
loopne
shl
lret
mov
leave
arpl
mov
loope
test
jbe
or
stos
push
push
out
adc
and
sub
sahf
mov
push
sub
inc
mov
mov
aam
xchg
sbb
inc
leave
out
ja
push
out
cmp
xor
mov
sar
stc
das
orl
adc
push
push
xor
push
pop
daa
and
rorb
cmp
cmpsb
mov
push
add
push
xchg
pop
test
and
push
xchg
xor
mov
pop
cmpsw
mov
or
cmc
lods
jmp
and
fsubs
ja
nop
mov
jno
cwtl
xor
xchg
stos
bound
stc
imul
add
adc
idiv
imul
roll
outsl
inc
mov
gs
adc
pop
sub
shr
mov
xor
add
pop
mov
sub
loope
dec
in
push
adc
push
jecxz
xchg
push
mov
icebp
mov
test
pop
mov
xor
mov
jae
jecxz
insb
cmpsb
lahf
jb
xlat
xchg
imul
repz
nop
aam
lahf
iret
loopne
add
or
lock
ret
xchg
pop
rorl
aad
dec
out
subl
mov
imul
test
and
xlat
jp
inc
leave
cmp
test
jo
xlat
push
into
aaa
int
mov
xlat
push
std
lods
aam
inc
mov
lahf
dec
xlat
jne
xchg
cmp
pop
pushf
pop
pop
inc
sub
popa
xlat
lahf
or
xor
sub
mov
les
sarb
int
sti
rcrb
xlat
outsl
xchg
cmp
stos
inc
xlat
jnp
sub
test
jno
dec
mov
dec
xor
mov
outsb
or
jbe
idivl
in
or
stc
mov
lods
aad
pusha
aaa
jmp
addr16
jp
mov
or
data16
cwtl
cmp
mov
dec
push
jp
jecxz
rcl
mov
push
xlat
ret
out
nop
out
xor
mov
and
push
xlat
frstor
xor
aas
sbb
pop
call
in
dec
xor
les
bound
xlat
mov
xchg
adc
aad
or
mov
scas
lock
xchg
dec
xchg
lcall
xlat
leave
add
pop
cmp
xlat
pop
ret
and
push
jns
xchg
cmp
and
fistpl
xlat
imul
dec
xlat
adc
in
xchg
sub
mov
ss
adc
addr16
ror
cmc
aad
or
int
iret
mov
dec
lahf
bswap
in
adc
xlat
pop
inc
pop
or
xlat
aas
push
clc
xchg
cmp
loop
xlat
cld
mov
xlat
in
call
daa
jbe
popf
push
sub
inc
xchg
out
xor
xlat
mov
insb
adc
mov
rcrl
adc
xlat
xchg
lock
adc
fldcw
lds
xlat
gs
bound
xlat
ret
fidivrs
pushf
xlat
adc
cmpsl
jp
test
fiadds
xlat
lds
lods
sbb
xlat
fmuls
popf
movsl
mov
and
cltd
push
xchg
cmp
dec
lahf
mov
aad
dec
add
push
mov
dec
rcll
jge
rcl
jmp
mov
mov
or
xadd
jecxz
push
xlat
xchg
push
daa
jns
mov
jl
fwait
lds
insl
pop
pusha
movb
jno
mov
lods
sahf
ret
xlat
ficompl
and
mov
inc
lods
mov
xlat
popf
mov
sbb
sbb
dec
sti
data16
or
daa
leave
mov
xor
xlat
adc
mov
shl
call
rcrb
xchg
or
rcrl
push
shrl
add
loop
fcom
js
inc
cli
pop
adc
pop
loope
decb
pop
call
int3
imul
les
mov
mov
andl
pop
aad
pop
pop
pop
out
xlat
adc
clc
call
xlat
fadd
outsl
movsl
mov
add
sbb
cwtl
push
sbb
cmp
iret
xor
sub
xlat
xchg
xorl
mov
xchg
lret
jbe
aas
int3
in
sbb
and
push
sub
scas
mov
sbb
scas
xlat
inc
mov
testb
jp
lahf
popa
sub
xlat
pop
push
and
dec
lahf
stos
je
jp
filds
xor
pusha
iret
mov
inc
loopne
push
jo
negb
aad
sbb
inc
inc
adc
mov
mov
add
sub
fs
aas
push
pop
mov
inc
cld
pop
xchg
cmc
in
pop
xlat
aad
ret
xor
daa
test
inc
dec
pop
xlat
lods
push
jbe
test
xlat
cli
cmp
cmp
xlat
cmp
dec
sub
movsb
xor
clc
xlat
ja
lds
xlat
jmp
cs
cwtl
out
and
xlat
in
cmpsl
mov
mov
js
ja
jp
rol
push
pop
addr16
clc
loope
mov
add
xlat
repnz
in
rcl
stc
pop
dec
rcrl
jnp
adc
leave
jg
fisttps
cs
clc
push
mov
dec
mov
std
xor
imul
mov
fdiv
xlat
lods
sbb
mov
iret
sub
lea
sbb
sbb
xor
popf
es
jg
in
lret
popa
hlt
pushf
out
cmp
add
and
mov
fidivrs
xor
stos
cmpsb
push
das
out
or
lea
sti
pop
add
push
push
xlat
jecxz
xor
jne
adc
xlat
mov
fwait
mov
jo
xlat
loope
lock
jnp
into
add
repnz
jge
or
in
mov
xlat
aam
mov
xlat
outsl
sub
pop
xlat
dec
mov
enter
pop
daa
or
js
xlat
fcmovnu
stos
adc
push
jae
fiaddl
div
and
xlat
add
out
fsubrl
sbbl
loopne
cltd
xlat
add
insb
xchg
jbe
lock
arpl
es
popa
cltd
popf
xchg
xlat
je
into
dec
or
push
ss
lods
fistl
imul
popf
aaa
iret
jb
jg
in
stos
and
lahf
push
mov
cmp
mov
pop
xchg
roll
mov
mov
mov
add
jle
cmp
std
inc
call
sbb
aas
mov
jmp
mov
test
mov
lahf
dec
rcll
xor
mov
xlat
pop
push
jnp
leave
adc
in
arpl
dec
jecxz
stc
mov
iret
inc
dec
test
popf
subb
xlat
sbbl
adc
stos
mov
shl
dec
enter
mov
mov
adc
add
mov
mov
adc
stc
xlat
jbe
jnp
in
pop
popa
xlat
shrl
imul
pushf
jge
notl
ffree
xlat
xor
sqrtps
sub
inc
fisubrs
jge
mov
shlb
xlat
int3
aad
ja
lds
cld
cmp
es
push
add
xlat
pop
jb
sti
loopne
jge
xor
dec
bound
fistpl
cmp
mov
mov
jmp
rcl
lcall
xlat
stos
pop
sbb
sahf
xlat
sbb
mov
inc
xlat
mov
fcompl
push
push
fisubrs
sti
iret
int3
jno
ret
fsub
cld
aam
cmp
lock
mov
mov
aad
test
mov
xlat
or
dec
xlat
ret
inc
in
and
fcomps
xlat
or
xor
lret
std
add
mov
xlat
imul
aad
rcll
cmp
popf
mov
push
xlat
mov
jecxz
sti
xlat
xchg
test
add
xlat
add
pusha
shrl
push
add
mov
rolb
xchg
dec
add
xlat
cmp
xlat
nop
sahf
push
or
cwtl
mov
push
es
fsubl
inc
pop
mov
xlat
jge
adc
jae
ror
icebp
push
aam
pop
mov
sub
cmp
negb
sbb
das
inc
aad
pusha
cmp
jmp
pushf
idivb
daa
add
divb
fs
enter
dec
inc
lock
cmp
imul
push
lcall
and
sbb
ss
mov
dec
jl
dec
int
popf
xlat
push
out
inc
xor
cmp
jo
cld
ds
je
pusha
lods
std
inc
in
movsb
dec
or
add
push
cli
out
jae
fwait
jnp
and
int
adc
jbe
jg
mov
xor
rorl
xlat
mov
int
fisttpl
sub
xor
mov
mov
xlat
cmp
jmp
fimuls
xchg
xlat
jno
lahf
dec
jb
cmp
xlat
xchg
add
cmp
dec
pop
xlat
ss
pushf
outsl
adc
loop
xlat
pop
sub
fildl
movsl
fiadds
push
and
push
pop
sti
out
push
scas
enter
adc
test
or
idiv
out
dec
push
popf
cltd
popa
aam
mov
iret
icebp
addr16
add
push
out
addr16
out
adc
push
lcall
enter
push
mov
mov
push
push
sti
dec
and
arpl
int
xlat
mov
ret
pusha
jmp
popf
mov
rcll
pop
mov
add
and
push
sbbb
loopne
mov
nop
add
jns
imul
mov
sarb
in
inc
and
fwait
outsb
xchg
rorl
sbb
loope
xor
inc
in
dec
or
mov
cmovs
jg
repnz
sahf
popf
ljmp
decl
cmp
xchg
stc
test
dec
sbb
add
lret
data16
cmp
ficoms
rcrb
rolb
push
imul
sbb
movsl
adc
mov
imul
sbb
clc
pop
push
mov
xchg
orb
xchg
fldcw
adc
adcl
jnp
push
pop
and
shrl
out
or
or
aad
pop
push
test
repnz
mov
jecxz
test
pop
daa
pop
es
sbbl
repz
sbb
mov
mov
mov
push
inc
hlt
lea
inc
fnstenv
loope
unpckhps
test
int3
test
xchg
ret
sub
xchg
shll
out
ss
cmpsl
mov
ficoms
fldcw
insl
ss
xor
call
push
sti
push
mov
jp
jne
xchg
mov
mov
cmp
xchg
out
pop
jne
pop
and
dec
and
mov
test
lcall
insl
lods
xor
fisubl
mov
mov
cmc
pop
jle
sahf
xor
test
addr16
nop
sub
decl
mov
and
sahf
in
mov
and
dec
xchg
nop
movsl
lods
adc
lahf
loope
inc
mov
pop
aam
jge
mov
aas
leave
insl
fldenv
loopne
fwait
cld
lea
fisttpl
in
lahf
mov
pop
imul
out
or
or
inc
mov
jecxz
aad
xchg
test
das
sub
mov
pop
popa
in
insl
in
xchg
cmpsl
popf
push
xor
aad
aas
mov
stos
xor
jno
enter
cld
dec
aam
sbb
data16
jp
add
iret
mov
jp
lds
nop
jecxz
or
arpl
inc
push
iret
mov
ret
or
mov
push
cld
dec
xchg
xorl
xchg
pop
cmp
add
cmp
mov
mov
jne
or
aas
sub
out
rcr
das
jle
jb
lods
mov
xlat
cmp
sbb
lods
xor
pop
push
flds
imul
xlat
insb
in
das
ja
hlt
lahf
lret
scas
add
stos
rcrb
pop
mull
xlat
sbb
jl
fwait
xlat
xor
or
fst
or
push
dec
xlat
gs
inc
repnz
mov
xlat
insb
and
aad
lods
xchg
xor
pop
adc
and
loopne
xstore-rng
cmpsl
inc
sub
aaa
in
xchg
ds
xlat
cmp
mov
in
push
or
test
adc
ds
xlat
pop
scas
cmc
aad
mov
rcrl
add
push
pop
insb
aam
sbb
jno
jns
jmp
outsb
movl
imul
mov
adc
mov
outsl
loope
imul
xchg
sarb
and
shll
repz
repnz
xlat
test
dec
xlat
push
in
sahf
stos
bound
jmp
rolb
xlat
lock
aaa
pop
pop
or
inc
lods
jae
or
aas
jle
aaa
out
adc
xlat
push
push
jg
cmp
std
mov
xchg
shll
in
xlat
mov
test
push
mov
cltd
push
inc
nop
scas
pop
dec
xchg
inc
arpl
idivl
pop
sub
rclb
nop
jbe
inc
add
sti
leave
pop
push
sbb
movsb
pop
ss
cmc
push
ja
sahf
mov
mov
mov
in
negl
sbb
rcrl
pop
xchg
dec
sti
sbb
mov
cld
cld
icebp
or
mov
push
incb
imul
stc
mov
xchg
mov
inc
repnz
call
or
dec
andl
lea
jg
mov
mov
out
je
mov
xlat
xchg
add
sub
ljmp
pop
ljmp
mov
in
daa
pop
cli
cmpsb
pop
lahf
adc
xchg
inc
shr
mov
ljmp
add
and
idivb
insl
inc
dec
inc
lock
imul
movsb
scas
das
dec
test
push
cli
xchg
fwait
add
fiaddl
sub
jmp
ficoms
mov
pusha
enter
jecxz
push
and
adc
ret
ret
add
hlt
push
sti
jne
icebp
or
repnz
movsl
lods
jmp
sbb
mov
inc
jb
lods
mov
sbb
xlat
xchg
pop
sbb
mov
push
jb
mov
decb
sahf
fadd
dec
sub
jmp
outsb
dec
mov
scas
dec
jno
flds
or
nop
jmp
push
or
jb
out
cmp
jecxz
pop
rolb
adc
pop
dec
js
xor
ljmp
test
mov
mov
test
cmp
jo
inc
mov
scas
lahf
mov
push
xchg
fisubl
xchg
aad
cmp
je
jno
and
and
add
push
aam
pop
cmc
xchg
or
addr16
jo
and
repnz
stos
mov
out
xchg
into
and
lods
fcompl
dec
pusha
xor
pop
fadds
in
mov
cltd
xchg
lcall
cmova
dec
or
mov
jne
fsub
nop
mov
mov
js
dec
pop
push
dec
or
pop
imul
cs
daa
fistpll
pop
daa
pop
xchg
sbb
sarl
lret
inc
daa
xchg
data16
adc
and
adc
fistpll
nop
dec
loopne
bnd
cmp
movsb
aad
imul
dec
push
push
outsb
or
mov
jp
inc
leave
sahf
and
pop
neg
je
pop
data16
sarl
adc
xchg
into
aas
push
mov
aaa
popf
rolb
leave
mov
mov
xlat
pop
adc
ficoml
imul
inc
jnp
ret
inc
pop
inc
and
or
nop
dec
add
and
mov
fcoms
enter
sahf
xor
xchg
inc
inc
cld
mov
movb
pop
mov
jg
fcoml
ja
cmpsb
nop
jb
rcll
ret
xor
ja
aam
aad
ljmp
je
dec
jno
pxor
sarl
dec
mov
leave
jmp
mov
cs
sahf
mov
adc
std
mov
mov
xchg
inc
xchg
pop
in
mov
pushf
test
out
push
sbb
dec
sub
add
mov
add
lock
sbb
repnz
cld
mov
nop
enter
cmp
xor
jo
mov
xor
jae
iret
nop
addr16
fsts
jne
pop
in
iret
cmpsl
ljmp
and
movsl
mov
idivl
sbb
lret
mov
cmc
lcall
repnz
lret
insl
jnp
nop
jmp
sbb
xor
outsb
pop
push
rolb
mov
aam
lcall
sbb
jmp
and
jge
leave
sub
or
sub
lds
ss
sub
out
xor
neg
ja
mov
sub
insb
lock
aam
ret
cmpsl
pop
cmp
imul
xchg
add
and
mov
rol
and
jl
mov
pop
push
push
scas
in
loope
popl
push
mov
sbbl
js
mov
pop
add
mov
push
sub
and
test
outsl
fiaddl
dec
sbb
cmp
xchg
cltd
leave
sti
ljmp
imul
mov
fwait
pop
xchg
insl
mov
pop
push
iret
fwait
xlat
in
loope
test
xchg
inc
in
sub
mov
stos
push
insl
divl
fs
cli
push
dec
jg
or
xchg
pop
xor
das
in
lahf
add
and
sar
xlat
arpl
fcomps
int3
cmpsb
fidivs
jne
xchg
xorl
or
pop
adc
repnz
nop
ret
xlat
inc
js
add
xchg
pop
pop
xlat
jg
jle
dec
pop
lcall
jp
inc
xor
jno
mov
sahf
lock
xlat
mov
or
iret
jnp
mov
push
fisubl
aaa
stc
push
pop
aam
adc
xlat
and
outsl
mov
jo
jo
fidivs
popf
pusha
das
push
pop
stos
push
int3
add
jbe
jno
leave
add
sbb
mov
xlat
pop
imul
mov
adc
or
dec
xlat
push
out
popa
xor
ss
xlat
xorb
mov
xor
cltd
pop
fldl
cmp
aam
pop
push
pop
push
cmc
rcll
sub
scas
mov
mov
imul
aaa
push
mov
js
mov
movsb
push
cmp
push
enter
push
aad
pop
sbb
cmpsb
clc
imul
sbb
xlat
lds
adc
inc
pop
daa
dec
xlat
das
and
push
sti
rcll
imul
aad
xlat
cwtl
stc
repnz
and
xlat
jp
jmp
jb
inc
out
shlb
xlat
lcall
pusha
lret
xlat
std
outsl
in
push
cmp
sti
xlat
xor
lods
js
sub
adc
mov
or
mov
sub
out
ljmp
shll
dec
orl
pop
subl
lahf
xchg
mov
out
mov
xor
imul
sbb
mov
inc
test
cmp
std
add
xorb
je
stos
jns
hlt
stos
arpl
outsl
pop
testb
rcrl
add
pusha
mov
xlat
fcompl
loop
loope
cmp
mov
shll
xlat
mov
pop
testb
adc
out
mov
mov
subb
sti
shrb
inc
sbb
inc
rorb
xlat
hlt
addl
lahf
inc
lods
fnstcw
inc
imul
loope
out
inc
and
xlat
sub
sahf
test
out
cmp
xlat
and
pop
lret
imul
dec
inc
push
fcoms
out
xlat
jb
jge
pop
std
sbb
shll
sub
std
jecxz
pop
xchg
nop
pop
popa
xlat
inc
push
mov
and
lret
mov
push
jecxz
and
sub
leave
dec
mov
mov
aaa
ret
iret
mov
xorb
sbb
sbb
jmp
leave
or
push
pop
xlat
sar
fildll
xor
jle
outsl
lret
shrb
and
repz
popf
rcll
ss
pushf
aam
xchg
lods
pop
adc
leave
out
jg
xchg
lahf
fcoms
dec
sbb
push
in
adc
xlat
movsl
aam
test
mov
inc
sbb
mov
dec
out
jg
rcl
xchg
push
popa
adc
xchg
ja
sub
js
repz
dec
add
ficoml
in
cmp
mov
sbb
or
repz
stos
mov
mov
test
mov
mov
or
jg
dec
mov
sbb
inc
sahf
rcll
xlat
sbb
ja
lahf
inc
xor
lock
or
push
cwtl
mov
xchg
lock
mov
push
lock
add
mov
aam
mov
xchg
adc
dec
movsb
jb
xlat
out
inc
leave
popf
xchg
and
out
cmpsl
call
and
inc
or
and
jmp
sub
xlat
stos
rorb
cmp
movsb
loope
lea
adc
xlat
xchg
sbb
insb
jmp
or
shrl
jns
outsb
mov
fadd
movsb
ds
add
jne
lds
push
jecxz
sbb
int
add
jns
sub
clc
xor
sbb
sbb
add
cmp
jae
xchg
adc
pop
popf
cmp
adc
popa
and
xchg
jo
xlat
push
adc
movsb
pop
cmp
aas
push
sbb
ss
and
shll
ret
js
cmp
sub
fimull
mov
data16
jno
ret
iret
les
mov
cmp
aam
loopne
dec
add
adc
icebp
sbb
mov
out
sbb
pushf
out
push
in
aam
in
out
sahf
pushl
sbb
enter
lods
xor
insl
aaa
jmp
xlat
outsl
test
push
mov
or
jecxz
xlat
mov
jno
movsl
test
fwait
orb
insb
push
add
shr
xlat
out
hlt
push
popf
push
stc
xlat
int
js
sub
xlat
aaa
mov
sbb
add
out
rcrl
mov
aad
mov
call
jno
js
inc
scas
xchg
aad
pushf
adc
mov
sub
pop
mov
push
mov
mov
mov
xor
ds
xlat
arpl
xor
lret
scas
mov
jp
fisubl
loope
shrl
int
xlat
pushf
jmp
into
clc
xlat
ret
jp
cld
hlt
cmpsb
cwtl
xlat
cmp
push
fwait
std
jns
mov
pop
push
in
rorl
stos
cmp
add
das
aaa
xlat
aad
mov
mov
mov
rorl
rcl
jb
pop
call
push
jmp
add
stos
jne
sarl
jns
gs
add
daa
pop
xlat
lock
fs
leave
lahf
xor
pop
imul
cmp
jo
mov
or
scas
inc
aad
out
pop
negb
xor
push
sub
lcall
sbb
std
outsb
cwtl
shrl
sahf
rolb
xlat
aas
mov
xor
jg
dec
data16
push
aaa
testb
ja
aaa
sbbl
inc
push
lret
or
insl
sub
xlat
dec
and
and
fnsave
test
adc
cmp
xlat
mov
xlat
cwtl
mov
subb
int3
out
jmp
add
mov
repnz
add
ret
jnp
cmp
pop
dec
out
mov
or
sub
inc
ljmp
sarl
arpl
cld
mov
or
adc
scas
xlat
jp
sub
popf
icebp
out
add
sbb
or
pop
or
xlat
or
in
add
cmp
mov
test
movsl
adc
sub
movl
and
addr16
pop
data16
aaa
pop
repnz
shl
mov
inc
jg
cmp
lret
jle
lcall
imul
xor
lods
inc
fnsave
pop
shrl
test
scas
addr16
add
xlat
xor
and
into
pop
movsl
loope
call
mov
add
mov
iret
jbe
cmpsl
hlt
mov
iret
adc
xlat
mov
and
jmp
ds
cld
xchg
push
iret
jg
or
int3
and
aam
ljmp
sbb
mov
jns
push
xor
aaa
mov
pop
es
push
mov
xlat
arpl
and
sub
stos
sti
dec
dec
mov
push
mov
das
xlat
push
mov
sub
lahf
in
xlat
cmp
fstl
jbe
inc
sbb
xchg
rclb
out
scas
in
ss
aas
cmc
xlat
mov
mov
aad
lea
fmuls
push
les
ljmp
dec
xlat
mov
ss
rclb
faddl
pushf
xor
insl
adc
jno
shrl
mov
mov
mov
adc
leave
mov
xlat
sub
sbb
stc
cmpsb
loop
in
xlat
and
shll
pushf
xlat
loopne
aad
bound
cmp
bound
push
xor
jge
mov
aaa
loopne
push
adc
in
mov
fisubs
mov
in
lret
mov
sbb
roll
mov
aam
push
sbb
scas
shrl
cmpsl
pop
push
ljmp
sbb
lret
adc
gs
adc
shlb
or
mov
ss
jo
xchg
sbb
push
sahf
or
jmp
xchg
push
xor
pop
xlat
int
test
sub
pusha
pop
and
pop
inc
ret
jb
xchg
xor
mov
jne
jle
jno
xchg
or
js
dec
rcll
mov
fs
and
int3
cli
sub
pop
pop
jnp
mov
jg
mov
jnp
inc
mov
fistps
sbb
sub
xlat
test
andl
push
mov
xchg
mov
fisubl
xchg
jns
repnz
aaa
push
adc
adc
je
sbb
xor
lea
sub
mov
sbb
pop
mov
jno
and
stos
fstpt
dec
bound
aas
jecxz
inc
fstps
xor
imul
fs
pop
addl
xchg
sub
je
adc
or
pop
outsl
lock
jno
xor
scas
mov
sub
repnz
jmp
fstpt
loop
jno
lret
mov
adc
negb
and
mov
pop
cmp
aaa
xrelease
test
lcall
mov
repnz
scas
fnstcw
sbb
xchg
or
or
xchg
pop
daa
sbb
add
sub
shrb
sbb
outsb
out
stc
inc
cmp
xchg
pop
fwait
xchg
scas
loopne
aad
xor
pop
inc
insl
in
or
sbb
imul
out
pop
adc
lods
dec
push
movsl
cli
push
cld
mov
mov
fistpll
ss
jge
rolb
and
lcall
push
pop
push
inc
mov
in
aad
jne
mov
mov
push
aam
mov
sub
push
aam
mov
push
negb
ja
fst
cmp
xlat
mov
ret
add
mov
in
push
pop
sarb
xchg
imul
stos
jle
xchg
mov
push
sub
repz
cmp
and
je
jo
xor
test
mov
dec
mov
adcb
lret
and
scas
push
pop
ss
jne
enter
aad
jle
xlat
or
stos
fs
ss
fstps
idivl
mov
cmp
sti
sub
push
adc
inc
xlat
scas
mov
mov
mov
cmpsl
sub
push
adc
insl
jmp
add
fldl
aam
scas
mov
mov
cmpsl
pop
xchg
mov
mov
aad
mov
pop
lock
test
repnz
add
out
arpl
rorl
out
addr16
lahf
sbb
fsubp
and
in
cmp
cs
lret
xlat
xchg
outsl
xorl
xlat
popl
test
fsubr
in
mov
fiadds
loope
dec
int3
cmp
sbb
mov
imul
daa
adc
pop
notb
loop
ret
mov
iret
cmp
mov
xchg
or
mov
xlat
push
ret
jo
or
out
sbb
mov
pop
xchg
mov
adc
or
pop
xlat
fisubl
cmc
jle
cwtl
mov
ljmp
ja
cmpl
pop
loop
cmp
xor
lret
mov
adc
iret
mov
popf
fisubrl
xlat
in
cwtl
push
clc
sub
jae
jg
sbb
or
sarb
mov
add
mov
add
dec
out
not
and
aaa
cmp
push
fcoms
add
inc
push
aad
mov
in
pop
cs
mov
gs
or
xor
xchg
cmp
push
enter
adc
xlat
jl
push
aad
cmpl
and
push
cs
cmp
mov
xchg
adc
jecxz
das
and
icebp
sub
xlat
pop
jp
aaa
decb
test
nop
enter
mov
lcall
xorl
lea
xlat
lahf
les
fwait
pop
sbb
xlat
in
mov
test
jns
dec
lahf
dec
add
cmp
sub
pop
movsb
adc
mov
pop
lock
lock
fisubs
xor
subl
shlb
out
push
scas
call
into
std
shlb
fisubrs
xchg
repnz
lahf
idiv
shll
jge
mov
sbb
arpl
daa
pop
sbb
xlat
lods
dec
aaa
lock
mov
ja
rolb
push
xor
xlat
xchg
inc
shlb
dec
test
in
inc
xlat
mov
imulb
xchg
les
icebp
or
stos
lahf
sub
jns
add
int3
fs
xchg
cmp
mov
aad
arpl
pop
inc
xorb
jns
cmp
xlat
outsl
roll
mov
inc
mov
xor
ss
icebp
xlat
sbb
stos
xchg
xlat
cmp
push
xchg
pop
xlat
rolb
fcmovnbe
dec
push
mov
xchg
sub
outsl
dec
jns
xlat
pop
sub
sbb
add
xor
scas
aad
call
lea
jb
mov
pop
push
and
cli
dec
mov
ljmp
stc
mov
xlat
movsb
jg
add
popf
push
xlat
fildll
xchg
cmp
jge
push
mov
rclb
cmp
xchg
insl
shll
dec
mov
lds
push
fadd
shl
or
dec
fwait
int3
inc
mov
xchg
std
push
xchg
rcll
js
mov
pop
mov
and
jae
in
movsl
jmp
aas
push
push
fldt
add
mov
add
movb
or
push
rcl
mov
jb
xlat
ficoml
loopne
xor
push
lcall
sbb
xor
fcom
ret
sub
sbb
and
mov
nop
cli
and
jo
sahf
push
push
lods
xorl
cwtl
inc
int3
xlat
inc
jg
fiaddl
mov
sbb
cmpb
scas
jno
push
or
cs
daa
shrl
inc
sahf
les
popa
pop
jb
sub
xchg
cmc
pop
ret
push
xlat
frstor
pop
xor
pop
sub
jae
scas
xchg
pop
add
out
rcrl
cmpsb
ss
jmp
cmp
popa
mov
movsb
jle
push
cmp
xor
cmp
rcl
mov
jns
hlt
je
mov
in
mov
shr
mov
mov
cmp
xor
movsb
insl
sahf
sar
sub
push
adc
xchg
mov
cmpsb
lods
or
je
ja
mov
in
xlat
rcrb
out
fisttps
or
cmp
repz
scas
ds
jbe
or
xchg
test
xlat
sbb
jae
push
les
sbbb
int3
popa
xlat
adc
push
nop
jno
push
decl
adc
daa
jmp
cli
xlat
test
push
push
mov
xlat
adc
cmp
push
mov
sbb
loop
das
jno
jns
lret
sbb
push
xchg
iret
xlat
xchg
or
ss
rcr
ja
xlat
popf
rcr
movsl
callw
xlat
loope
ljmp
push
cmp
aaa
or
xlat
cmc
add
jmp
testb
fucomp
dec
push
adc
fistpl
in
jo
shr
pop
cmp
lods
fcomps
pushf
pop
xor
xor
sti
lock
fcompl
lret
roll
sub
pop
adc
int
jmp
sbb
mov
mov
xlat
sarl
outsb
fsubs
jle
pop
xchg
ja
jbe
lods
jp
or
lods
movl
jbe
inc
dec
jne
jmp
out
sbb
in
xor
cltd
push
sbb
mov
dec
sbb
fsubs
out
rolb
filds
xlat
xchg
rorl
out
mov
lret
popf
adc
fdivrl
sub
push
or
pushf
fildl
xlat
dec
addl
sub
sahf
adc
das
popa
push
out
sbb
pop
adc
sbb
xorb
setno
xchg
insl
adc
and
sub
push
iret
xor
inc
enter
lock
je
mov
addl
lods
test
add
and
cld
aad
pop
jno
in
push
hlt
pop
out
inc
adc
xlat
imulb
test
std
cmpsb
cmpl
jb
mov
popf
daa
in
imulb
gs
inc
cwtl
mov
adc
sbb
xor
int
ret
sahf
out
pop
xlat
or
xor
ret
xchg
xlat
dec
mov
sub
iret
mov
mov
pop
and
inc
popa
or
sbb
out
jmp
sub
dec
pop
mov
pop
jb
aad
mov
xchg
push
dec
xlat
xor
iret
rcrl
cmpsl
leave
lods
jo
dec
mov
push
adc
mov
scas
push
xor
or
sub
inc
push
mov
es
push
lahf
hlt
xlat
addr16
xchg
xlat
pop
jge
in
call
loopne
cltd
lret
repz
xlat
mov
adc
sbb
daa
std
sar
add
ja
push
push
lahf
aam
push
pop
xlat
ss
cltd
mov
inc
mov
loopne
mov
adc
fcmovnu
ja
adc
adc
dec
sub
push
xlat
loopne,pn
ret
repnz
out
xlat
sbbb
int
push
dec
xlat
shrb
lret
adc
add
sarl
adc
adc
push
icebp
add
negb
lcall
sub
mov
aam
adc
adc
adc
mov
xchg
cld
xlat
jns
jecxz
sbb
jl
test
lea
loope
rcll
jg
push
mov
xor
std
mov
insl
xlat
ja
mov
and
or
stos
pusha
lret
ret
push
into
inc
aad
push
dec
daa
xlat
jne
adc
lahf
aad
and
sahf
push
decl
xsaveopt
xlat
sub
out
cmpsb
call
sar
xchg
mov
mov
xlat
std
pop
outsl
je
es
cmp
ljmp
mov
xlat
imul
push
gs
daa
stc
hlt
xlat
enter
sbb
sub
xlat
cld
bound
test
sbb
mov
dec
push
adc
add
jge
jmp
xor
je
mov
inc
fs
addr16
gs
cmp
inc
xchg
push
es
pop
mov
cmp
scas
nop
mov
rcl
in
arpl
mov
pop
int
mov
daa
inc
sub
imul
test
xlat
les
rorl
push
mov
adc
xlat
in
loop
stc
or
rcrb
mov
into
shlb
and
inc
sti
xlat
divl
adc
and
shl
fistpll
xlat
inc
icebp
sbb
xlat
flds
imul
mov
mov
pop
and
xorb
xlat
iret
lahf
pop
pop
fsubrs
xlat
repz
cmc
mov
xchg
int3
sbb
sub
mov
lock
lds
das
xlat
out
mov
pop
xlat
inc
mov
push
in
lahf
mov
push
loope
jp
xlat
jbe
mov
cs
pop
or
inc
cli
mov
scas
out
xchg
add
pop
xlat
negl
rorb
cmpsl
cmp
cmpsb
xchg
fmulp
adc
xor
push
xchg
dec
xlat
lds
sub
out
inc
xor
xchg
push
cmp
sub
and
mov
fistl
mov
jbe
fadds
je
pop
aad
xlat
call
and
lahf
icebp
inc
popf
cmc
cmp
push
std
lea
mov
mov
mov
sbb
add
xor
pop
ficoms
cwtl
jb
jl
mov
imul
xlat
mov
cmc
and
aam
sbb
lahf
dec
imul
ficoms
in
movsb
and
sbb
test
mov
or
jnp
mov
mov
inc
jo
push
pop
imull
adc
mov
ss
xchg
adc
inc
mov
data16
jb
pop
adc
sub
dec
jg
adc
call
pop
in
inc
iret
xchg
int
sbb
fisttpll
bound
fdivs
incl
out
movsb
mov
movsb
fmull
sbb
dec
cli
nop
scas
rcll
lock
or
adc
fadd
mov
push
out
mov
jge
in
sub
dec
push
clts
lret
and
push
aaa
xlat
xchg
pop
inc
les
adc
adc
xchg
orb
out
sub
inc
pop
pop
and
mov
jmp
and
sbb
sbb
sbb
pop
in
pop
rorl
fmull
mov
xchg
push
iret
fwait
scas
and
nop
adc
jl
xchg
dec
fldl
sub
xor
add
js
aaa
rcrl
mov
sbb
pusha
scas
and
je
jnp
xor
out
mov
sti
ret
mov
fdivs
insl
loope
jnp
sub
cli
into
stos
fcmovb
mov
push
sbb
fstp
in
dec
cmp
mov
fnstsw
or
jle
scas
jo
sbb
imul
test
rcrb
mov
xchg
mov
cmp
imul
js
jne
sarl
mov
sub
fcmovne
xchg
add
fucomi
jg
mov
aaa
nop
xor
pop
jne
push
iret
pop
pop
movsb
icebp
pop
sbb
mov
je
lods
sbb
jecxz
sub
xchg
fidivl
adc
inc
orl
mov
or
jbe
sub
inc
pop
push
mov
pop
cld
xor
mov
sarb
mov
fsubr
std
int
cmp
adc
test
scas
loope
sub
lea
mov
sbb
or
sahf
pushf
std
adc
aaa
push
cmpl
pop
mov
test
sbb
imul
mov
nop
push
sarb
or
clc
push
inc
mov
inc
mov
push
aas
sub
outsb
ss
scas
xchg
std
ds
push
mov
iret
aaa
sbb
dec
jl
xchg
fcmovbe
aam
arpl
xor
out
adc
and
negl
call
insl
xchg
sbb
dec
jne
shrb
or
les
inc
movsl
pop
aas
dec
hlt
lds
mov
xchg
mov
xchg
daa
repnz
mov
fstpt
push
inc
out
pusha
insb
daa
cmp
jns
es
mov
mov
inc
push
loope
dec
shrl
nop
call
lea
imul
ja
in
lret
push
cmp
shll
cs
push
scas
push
in
nop
movsl
sbb
mov
imul
push
data16
scas
mov
incl
jge
movsl
add
xchg
test
loope
imul
adc
int3
std
or
lret
and
loopne
iret
lret
enter
adc
test
jge
add
xlat
imul
adc
movsb
fldcw
push
ljmp
out
imull
xchg
stos
push
jo
inc
inc
mov
out
sbb
test
add
pop
test
push
jae
cmp
lds
mov
and
push
mov
out
nop
ficompl
testb
mov
lea
dec
ljmp
sahf
fsts
leave
and
mov
sbb
inc
cmpsl
mov
mov
addl
xchg
outsb
push
orl
xchg
mov
cmp
aas
mov
fsubrl
push
sahf
or
loope
lods
rcl
add
xchg
and
adc
fmull
xor
inc
adc
insl
cmp
out
int
adc
dec
mov
dec
mov
push
out
fidivs
or
xor
push
push
mov
inc
jl
or
lds
hlt
inc
repz
xchg
pop
popa
xchg
daa
mov
in
jb
fbld
inc
xor
xchg
aaa
push
lahf
mov
filds
xor
xchg
ficoml
inc
subl
test
inc
fbld
xor
push
imul
jo
inc
in
add
sub
fdiv
pop
aaa
cmp
ss
popa
shlb
nop
es
scas
insl
rorb
pop
xlat
xor
mov
inc
sbb
popf
jae
dec
stos
adc
pmulhuw
cmc
repnz
imul
pop
xlat
jbe
icebp
test
rcl
or
mov
xchg
je
aad
mov
test
outsb
xlat
xchg
mov
jecxz
jmp
mov
jmp
xlat
mov
leave
mul
xlat
inc
clc
inc
xchg
sub
lods
xlat
das
add
mov
ja
adc
fbstp
or
jae
cmp
icebp
xchg
sub
add
mov
push
mov
and
pop
lock
jecxz
xlat
lahf
icebp
sub
push
dec
aam
pop
sbb
pop
in
lret
popf
jne
arpl
fwait
into
out
adc
int3
aaa
je
xor
adc
mov
sub
enter
inc
out
movsl
push
xlat
push
sub
loop
push
std
ficomps
fcomi
int3
notl
sbb
xor
fisubs
ja
mov
xlat
sub
push
lcall
mov
mov
jno
dec
inc
push
sub
sbb
repz
insb
and
jg
jmp
frstor
lods
test
sbb
mov
add
mov
enter
add
mov
mov
iret
or
dec
xor
outsb
sbb
push
icebp
lcall
xlat
rclb
out
fs
notb
out
fisubrs
xlat
cltd
add
ret
mov
sbb
inc
mov
xlat
jns
stc
jbe
mov
in
inc
xorb
rclb
mov
and
pop
data16
outsb
mov
pop
jns
add
sub
xlat
push
add
jle
mov
pop
jb
push
es
insb
sbb
add
out
xor
jno
sarl
cmp
push
mov
mov
repnz
dec
push
gs
sarl
sub
jmp
xlat
rclb
arpl
nop
fchs
addr16
adc
cmp
sbb
push
xchg
rorb
outsb
scas
mov
cmpsb
sub
inc
mov
inc
pop
push
mov
scas
fbld
dec
mov
inc
lods
pop
push
out
mov
jne
pop
mov
out
add
gs
jmp
popf
int
shll
loopne
inc
push
lds
pushl
ret
and
ret
add
jns
cmpl
subb
rorb
xor
push
div
xlat
mov
add
mov
data16
js
dec
movsb
fsubl
dec
push
xchg
adc
adc
cmp
and
stc
cmpsb
jns
int3
sbb
shrl
enter
sbb
ss
test
mov
iret
mov
pop
sti
jnp
push
inc
pusha
mov
stos
mov
fdivl
mov
nop
call
in
ljmp
xchg
sub
stc
lahf
inc
pop
lret
jle
test
adc
repnz
ja
xchg
xor
sub
out
xchg
add
fs
mov
adc
int3
lret
xchg
jp
xchg
dec
inc
pop
imul
xor
add
nop
push
push
test
leave
jg
mov
je
hlt
sub
pusha
jecxz
dec
jo
test
lock
mov
xchg
scas
adc
xlat
xchg
das
bound
gs
adc
out
aas
js
cmp
nop
adc
pop
fwait
add
aam
sub
call
xchg
xor
and
sub
stos
xchg
pop
sub
out
xor
pop
xchg
fisttpll
enter
sbb
movsl
outsb
dec
ret
cmp
cs
mull
mov
mov
imul
add
aas
nop
loope
mov
mov
cmpsl
out
adc
xchg
sbb
outsb
mov
add
movl
mov
pop
cmp
jmp
ds
sub
or
mov
add
mov
gs
jnp
ja
dec
imul
dec
sarl
out
add
rcll
mov
pop
in
dec
sub
cmp
movl
movl
cmp
dec
xor
sub
mov
xchg
dec
pop
clc
out
xlat
xchg
leave
xor
fidivl
cmp
shr
mov
and
imul
movsb
lahf
fsts
jecxz
stos
in
adc
add
jnp
dec
aam
into
in
push
notl
cld
push
mov
nop
test
out
adcl
adc
push
sbbb
push
shrb
sbb
mov
test
mov
inc
dec
in
nop
inc
imul
scas
xor
aaa
inc
in
test
rol
outsb
jle
leave
popf
jns
add
test
js
scas
xchg
xor
mov
mov
sub
add
sahf
loopne
shll
loope
mov
fstl
repnz
fnsave
mov
sti
nop
aam
or
adc
xlat
cmpsl
in
lret
cmp
xchg
mov
and
add
in
mov
cmp
ffreep
push
jne
or
stc
mov
in
mov
xchg
push
dec
insl
xchg
out
ja
push
ljmp
add
or
add
cmp
dec
push
pop
mov
adc
sub
jge
stc
imul
shll
insl
push
add
xor
gs
bound
adc
adc
scas
jnp
jmp
pop
or
fdiv
in
test
sbb
repz
xor
lcall
adc
lret
push
pop
out
mov
ficoms
sub
push
and
add
mov
inc
arpl
sbb
aas
and
push
mov
cld
dec
push
aam
movsl
imul
testl
jbe
push
push
mov
mov
rclb
imul
jp
lods
or
jmp
into
dec
dec
in
jp
lret
scas
and
pop
or
imul
rclb
int
jbe
push
inc
jnp
daa
jo
push
outsl
or
inc
adc
push
push
jne
push
sbb
push
xor
xchg
arpl
out
nop
data16
dec
xchg
xchg
jb
ja
dec
inc
sbb
in
xor
ret
mov
nop
fs
jne
pop
adc
imul
push
xor
and
sbb
push
inc
mov
inc
ss
or
sbb
jno
xchg
vpshab
aam
test
hlt
xchg
lock
pop
inc
or
jge
nop
mov
ficoml
sub
or
sub
and
mov
mov
aaa
cmpsb
in
xlat
inc
and
sub
outsl
scas
in
sti
xchg
mov
sbb
lahf
out
fwait
arpl
inc
push
sbb
sbb
mov
mov
out
ljmp
sbb
cmpsb
or
pop
cmpsl
ret
pop
aam
push
ja
mull
loope
add
dec
aam
mov
mov
test
mov
xchg
sub
outsb
and
mov
mov
pop
scas
in
xchg
lcall
daa
nop
push
mov
xchg
dec
jmp
iret
fsubrl
scas
loope
ss
rcll
cmp
fnstcw
sahf
push
pop
negb
cmp
jno
or
roll
in
fsub
not
mov
rclb
aaa
out
mov
mov
push
cmp
jb
sbb
andl
xor
iret
mov
jb
cltd
ret
sarb
xor
mov
lret
inc
and
jmp
sub
leave
mov
pop
xchg
aam
mov
dec
push
mov
ss
mov
mov
push
data16
xor
sbb
sbb
lret
and
mov
jg
push
inc
imul
mov
stos
fimuls
insl
xorl
mov
xor
iret
ljmp
jne
shr
sbb
fwait
or
inc
jns
hlt
aad
xchg
outsl
scas
xchg
cmp
aaa
bound
ja
or
sub
adc
xchg
stos
call
push
sahf
fldt
cwtl
scas
movsl
lods
mov
mov
pop
xor
rcl
jmp
fidivs
and
push
mov
aam
add
je
lods
mov
pop
push
shlb
lret
cmpb
loope
mov
xlat
in
inc
sbbl
pop
xchg
addr16
dec
lea
xchg
mov
cmc
xchg
xlat
jns
ja
ret
dec
push
mov
inc
test
jbe
xlat
pop
icebp
mov
nop
popf
jb
add
or
sub
roll
into
sbb
cli
mov
or
in
adc
mov
and
add
add
pop
jg
add
fisttpl
jne
aad
pop
mov
and
lcall
push
daa
clc
int
and
cmp
cmc
add
adcl
imul
rcrl
cmpsl
jbe
addr16
xchg
insb
shld
and
inc
and
aaa
mov
dec
lret
mov
mov
jmp
mov
les
cmp
cmp
push
scas
adc
in
int
movsl
out
repz
push
jg
nop
in
jmp
or
lahf
lods
das
daa
mov
pop
rorb
shll
mov
aad
nop
sub
out
popf
leave
pop
ljmp
int
out
jae
ror
nop
add
inc
xchg
daa
outsl
arpl
xchg
mov
pusha
mov
and
sbb
jne
daa
repnz
iret
fucomp
aas
push
mov
inc
jl
scas
ficoms
aad
mov
je
pop
or
jg
ret
mov
add
dec
cmp
leave
sub
out
cwtl
test
jecxz
popl
mov
push
vpunpcklwd
pop
and
les
xor
scas
ret
loopne
in
xchg
outsl
pop
lret
mov
dec
ja
mov
aad
popa
push
mov
movsl
inc
cmp
ret
add
adc
ss
dec
pop
testb
shrb
jmp
push
xchg
in
xchg
mov
push
cltd
sbb
scas
add
xor
inc
jno
in
ret
or
pop
mov
test
cltd
std
ror
scas
xchg
stos
ss
pop
xor
cmpb
xchg
pop
inc
add
jae
mov
push
xchg
and
in
jno
fs
mov
and
jge
push
sub
mov
ja
sub
xorl
sahf
xchg
movsb
sbb
mov
divb
add
jb
out
pop
lcall
test
jns
xor
push
inc
jno
and
mov
into
pop
jne
adc
sbbb
aad
scas
sarb
mov
mov
push
out
jg
fbstp
xchg
sbb
test
jae
ss
test
nop
loope
xchg
sti
in
push
sbb
adc
rolb
mov
pop
cmp
nop
add
cmp
dec
mov
jl
popl
pop
mov
jecxz
fildl
shl
aam
mov
nop
insl
js
nop
mov
mov
dec
xchg
inc
sub
xchg
icebp
test
adc
ret
adc
jo
mov
out
je
mov
pop
mov
stc
int
jae
in
inc
fists
nop
cmp
mov
les
test
jno
pop
aam
xor
jo
xchg
ja
daa
int3
out
fcomip
add
dec
jg
out
stos
inc
mov
repz
mov
inc
aaa
sub
xchg
cmp
mov
pusha
or
mov
inc
and
inc
std
sbb
mov
pop
cld
dec
and
mov
ret
mov
sahf
pop
and
retw
out
sbb
push
in
jb
jns
and
ja,pt
mov
push
test
sub
rorb
es
cli
sbb
out
int3
push
nop
xchg
jge
cmp
adc
ret
and
dec
push
jae
xchg
fidivrs
sbb
daa
pusha
xor
xchg
jb
repnz
bound
jmp
pop
jb
add
and
xchg
adcl
in
aam
and
es
xchg
cli
lods
lcall
ret
jno
push
fdivl
sbb
cld
push
xor
inc
stos
ret
pop
add
mov
cmp
xchg
loop
in
dec
pop
lahf
rcrb
add
and
pusha
push
bound
push
cmc
fsubr
mov
data16
pop
ret
ja
int3
pop
adc
pop
dec
or
pop
ficompl
jg
mov
mov
push
jp
int
jp
push
imul
jbe
mov
mov
test
xor
int
jbe
inc
roll
scas
and
or
arpl
xchg
lcall
addr16
nop
fnstenv
ljmp
outsb
jne
mov
xor
pop
adc
subb
pop
lock
into
stc
xor
dec
fidivl
mov
jo
mov
shl
cmpsb
adc
mov
mov
adc
aas
adc
bound
jmp
xchg
and
cmpsb
xor
pop
mov
xlat
out
fwait
fs
xor
ror
add
adc
xlat
in
pop
pop
mov
and
imulb
or
mov
icebp
xlat
cli
outsl
mov
inc
jg
adc
or
out
test
in
push
or
and
inc
xchg
xlat
push
inc
sub
xlat
outsl
mov
cmp
push
loopne
shrl
inc
dec
popa
or
cmpsb
xchg
dec
xchg
push
jmp
hlt
cli
push
lcall
aas
leave
sub
xlat
jmp
jmp
inc
int
aaa
xlat
js
mov
xlat
out
xchg
xlat
pop
mov
jo
ret
push
xchg
cli
test
inc
jl
add
adc
cld
sub
push
mov
shlb
rcll
jnp
xchg
into
add
gs
xlat
rorl
mov
push
mov
lahf
adc
mov
call
in
iret
xor
push
pop
out
inc
inc
sbb
rcr
xchg
stos
in
jno
inc
jecxz
inc
jo
nop
jnp
loope
pop
ja
sub
subb
orb
jbe
sbb
repz
ret
nop
push
inc
mov
imul
mov
push
xchg
mov
ret
ss
cmp
inc
jg
cmpsl
add
nop
cmpsb
add
repnz
loope
pop
xlat
std
jno
and
xlat
dec
aad
cmp
sbb
aam
jnp
jmp
xchg
outsl
xlat
lods
out
jecxz
xor
push
pop
and
das
mov
jo
into
cld
push
sahf
xor
iret
and
jns
sbb
adc
fidivl
xlat
lock
sbbl
ss
adc
loopne
mov
xor
adc
push
xlat
cltd
xor
movsl
and
add
xlat
push
mov
fcomps
aam
aad
push
push
popl
xlat
xchg
sub
jp
movsb
pop
push
xlat
xor
repnz
test
lahf
fwait
stos
and
lahf
push
sbb
shll
lods
mov
aad
lret
out
dec
mov
ss
or
jne
mov
xlat
lea
mov
xlat
dec
push
dec
pop
fdivr
mov
xlat
sbb
int3
xlat
dec
mov
std
fbstp
xor
lds
mov
int
roll
sub
mov
push
addr16
repz
jl
testl
sar
stos
sbb
mov
mov
dec
pop
iret
pop
dec
ss
in
es
enter
sahf
test
jmp
imul
mov
sarl
mov
xlat
cld
repnz
jecxz
hlt
xlat
scas
sbb
jecxz
mov
rcll
jae
adc
xchg
mov
add
mov
pop
sub
dec
push
xchg
and
jnp
movsl
inc
inc
mov
mov
mov
xor
pop
repnz
outsb
rcr
addr16
xlat
lret
xchg
push
mov
xlat
add
add
sub
ja
dec
mov
jae
cmp
push
sub
into
test
negb
mov
shl
sub
mov
jecxz
test
add
jp
sub
pop
int3
daa
arpl
inc
xlat
into
mov
mov
push
xchg
js
scas
out
shll
xlat
test
mov
ja
mov
icebp
pop
loop
xor
adc
or
xchg
enter
rcl
mov
and
adc
dec
mov
mov
inc
xlat
push
jecxz
xchg
pop
stos
add
outsb
add
fbld
xlat
cmpsb
fimuls
push
xlat
pop
stc
xchg
mov
xlat
xchg
jecxz
insl
cmpsl
sarb
dec
inc
xlat
repnz
mov
les
imul
aaa
push
xlat
test
data16
jl
outsb
scas
mov
lahf
hlt
mov
inc
jp
rol
mov
xlat
subb
aad
repz
pop
or
mov
scas
inc
jmp
cmp
push
adc
push
fadds
mov
pushf
push
jle
jnp,pn
adc
inc
sbb
in
sub
xchg
jbe
inc
or
xchg
add
xor
sbb
xchg
outsb
dec
mov
aad
fisttps
cli
lds
mov
cmp
sti
push
out
inc
cmc
pop
and
xchg
lret
gs
jne
mov
and
mov
daa
stos
test
and
lahf
in
push
sbb
inc
adcb
adc
ja
mov
mov
xchg
mov
lret
mov
outsl
adc
mov
add
and
push
or
inc
fsubrl
fsubl
sbb
push
push
adc
push
mov
pop
adc
pop
dec
rcr
sub
pop
lahf
and
decl
stc
cmc
aam
pusha
xchg
cli
cwtl
push
adc
sahf
or
xchg
cmp
mov
movsb
aaa
xchg
nop
xor
xor
pop
jg
inc
aaa
cmpsl
mov
bnd
rcrl
adc
je
mov
std
out
fcoml
aad
xchg
imul
jmp
xchg
lcall
jmp
jle
test
xchg
cld
pop
mov
cmpsl
test
mov
hlt
push
xchg
and
push
nop
jecxz
shll
imul
ret
sbb
icebp
xchg
mov
sarl
push
or
fldcw
fnstsw
addr16
xor
ficomps
and
out
test
and
push
sub
inc
ss
add
scas
loope
push
mov
xchg
jp
mov
mov
ja
xor
or
lcall
out
in
dec
int
stos
sub
cwtl
aam
dec
mov
les
inc
stos
ljmp
out
in
pop
mov
xchg
and
jb
jnp
jecxz
int3
nop
push
sub
and
cmp
xchg
int3
rolb
add
out
nop
mov
mov
mov
aam
xchg
and
xchg
or
or
decb
std
mov
pop
mov
pusha
adc
mov
dec
call
data16
nop
xchg
fidivs
mov
lea
xlat
add
dec
jnp
and
das
or
jl
aam
ja
mov
test
xchg
fnstsw
scas
xlat
xchg
fsubrs
jmp
pushf
mov
mov
lcall
jno
xchg
outsl
mov
outsb
push
dec
into
sub
xchg
lea
jge
mov
stc
into
push
pop
lods
inc
adc
push
gs
xchg
mov
fisubl
pop
push
pop
sub
mov
pop
inc
mov
push
cmp
pop
out
sahf
cmp
movsl
jg
dec
push
mov
jmp
jne
mov
rcr
xchg
cli
dec
pop
rcll
ret
ret
push
xor
les
dec
cmpsb
sarl
ret
test
pusha
jecxz
lods
inc
inc
fnstenv
nop
and
leave
ret
xchg
lahf
test
sti
push
push
roll
mov
sar
pop
inc
sbb
adc
std
in
mov
dec
inc
mov
or
mov
repz
mov
add
lock
call
jmp
adc
or
pop
jp
xchg
jbe
aad
ja
dec
repnz
jno
pop
push
mov
cmc
imul
popf
addr16
pop
lahf
das
fnstcw
and
test
mov
sbb
fdivrl
arpl
add
cs
stos
push
stos
or
push
call
cs
nop
sub
lds
xor
add
pop
lret
mov
mov
nop
pusha
jp
fisttps
pop
and
adc
nop
call
aam
pop
push
out
hlt
push
lea
add
pop
mov
mov
push
mov
mov
pusha
push
xor
push
push
jae
xchg
lret
mov
jle
push
xor
insb
adc
push
or
scas
fsubl
idivb
insb
call
movsl
test
jge
adc
pusha
dec
cmp
sarl
rclb
xlat
dec
xchg
xchg
mov
sub
push
pop
daa
sub
icebp
inc
cmp
sbb
mov
add
test
mov
ja
lret
out
jmp
cld
out
imul
mov
pop
inc
scas
clc
jnp
mov
sbb
jmp
test
mov
push
sbb
cmp
mov
jle
inc
mov
movsl
repnz
nop
lcall
xchg
pop
push
mov
sahf
jge
fsubl
movsb
lret
add
nop
inc
xlat
int3
cmp
mov
xchg
mov
fcomip
or
jb
xchg
leave
roll
mov
not
jae
inc
fsubl
shll
sbb
mov
push
mov
adc
mov
cmpsl
push
push
mov
jg
xor
cs
cmp
pop
cli
mov
push
out
jae
out
leave
pop
dec
dec
icebp
jle
sub
adc
mov
cltd
xchg
xchg
cmpsb
fnstcw
lret
in
mov
mov
cmp
insb
inc
jb
pop
mov
adc
iret
xchg
scas
push
sub
cmp
xchg
add
pop
inc
mov
lods
mov
divb
push
jge
inc
pop
and
aam
dec
pop
add
out
outsb
push
dec
push
dec
mov
push
loope
bound
and
orb
xchg
inc
shrl
adc
int
nop
stos
xor
jecxz
ret
lret
negl
ror
adc
and
in
mov
ljmp
dec
out
stc
mov
fcoml
cmc
or
nop
inc
icebp
jle
xchg
cmp
test
ljmp
mov
xchg
fsubrl
ret
mov
nop
pushf
mov
xchg
jg
stos
jecxz
mov
adc
push
pop
rol
decb
or
out
test
cld
imul
popa
mov
xor
mov
inc
leave
cld
mov
ret
xchg
inc
inc
out
shll
push
xchg
push
inc
jmp
xor
fdivl
inc
arpl
int3
sub
or
mov
stos
loope
fcompl
insb
mov
aam
mov
scas
jbe
push
and
xor
nop
scas
std
in
cltd
adc
push
jle
nop
pop
lods
shrb
out
into
rolb
push
cmp
inc
insl
mov
scas
push
aaa
out
roll
xchg
outsb
cmc
sub
jg
test
ret
decb
jbe
jg
fwait
ret
xor
shrl
push
mov
jbe
mov
leave
sub
sub
popf
imulb
pop
add
and
mov
push
rcll
stos
aam
add
je
adc
lcall
into
xchg
add
xchg
clc
add
or
mov
xor
mov
scas
xchg
out
cmp
in
mov
jg
cmp
mov
push
mov
imul
mov
xrelease
xor
mov
testb
fwait
ss
fistpl
fidivrl
mov
nop
dec
shll
and
mov
push
adc
inc
ljmp
popf
or
xchg
dec
mov
inc
testl
push
add
mov
jnp
cld
ret
mov
in
addb
ja
pop
xchg
and
gs
xchg
outsb
and
pop
sahf
mov
rorb
daa
xchg
das
ja
mov
push
in
mov
jg
sub
pop
sahf
mov
fists
enter
imul
dec
mov
into
mov
es
gs
nop
jp
xchg
push
call
call
lods
mov
pop
xchg
orl
mov
addb
scas
hlt
cmp
scas
ficoml
andl
nop
jo
leave
inc
daa
ds
fisubs
jns
cld
xor
adc
adc
mov
jmp
cmp
and
jg
mov
aam
push
nop
cli
outsb
mov
sbb
ja
gs
sar
and
gs
mov
xchg
sub
xchg
outsb
inc
or
dec
push
push
fs
lcall
vmwrite
mov
cmpsl
std
rcll
or
stos
testl
call
jmp
cmp
mov
xchg
ljmp
sti
and
test
xor
push
sbb
mov
movsl
test
mov
out
lods
pop
xorb
jb
sub
jo
pop
cmp
xchg
stc
mov
mov
push
adc
hlt
aaa
and
into
mov
add
lret
icebp
cmp
ret
mov
int
push
mov
imul
push
fwait
gs
icebp
jg
or
int
stos
fwait
mov
jecxz
iret
jbe
out
mov
mov
push
enter
gs
add
xchg
enter
mov
fists
sub
mov
inc
lea
das
mov
cmpsb
pop
mov
cmp
xchg
sub
xchg
lret
inc
loope
hlt
iret
push
pop
xchg
sbb
sti
cmp
xchg
cmp
sbb
and
bnd
fcoms
mov
jno
loop
xchg
mov
ja
xchg
lods
lods
xchg
mov
into
test
mov
fdivrl
fcmovnb
call
dec
imul
add
pop
nop
add
adc
cmp
jne
dec
mov
orl
pop
sbb
xchg
and
fs
mov
enter
or
test
stc
in
aam
loopne
mov
cmp
push
or
stos
out
or
scas
adc
lods
dec
or
mov
pop
xor
pop
mov
in
mov
in
lret
imul
push
movl
xchg
scas
inc
enter
mov
arpl
nop
pop
fidivrs
cmp
les
push
jge
lods
inc
sbb
push
mov
imul
cmp
dec
repz
aad
mov
xor
out
pop
insl
or
push
add
nop
jge
in
push
push
add
sbb
je
ja
jle
inc
or
aaa
dec
xchg
mov
enter
fsubl
jo
xor
sbb
lock
pop
rcll
loopne
sbb
test
gs
into
outsb
sbb
pusha
test
out
cld
xchg
and
inc
je
xor
sbb
insl
ja
jo
push
mov
sub
sahf
xchg
iret
mov
xchg
pop
push
scas
sbb
inc
movsb
lea
xchg
ficompl
imul
and
jg
xchg
push
adc
xor
lret
lods
sti
sbb
and
mov
xchg
xor
jl
arpl
ja
sti
cwtl
push
pop
mov
ja
arpl
inc
lock
mov
ljmp
or
cmpsl
pop
lret
xor
out
pop
dec
sub
lahf
mov
sahf
out
lods
push
and
inc
clc
mov
test
imul
nop
mov
xor
and
fstl
scas
and
and
xor
xchg
insl
pop
pop
dec
xor
js
adc
or
icebp
push
scas
pop
push
jne
pop
mov
add
lods
mov
dec
mov
test
ret
fdivr
sti
ss
negl
push
clc
scas
mov
lahf
push
imul
adc
mov
rcrl
mov
ret
mov
stc
adc
and
lcall
ss
push
cs
push
psllw
movsb
sub
test
xchg
adc
cmp
add
mov
cld
testb
add
shl
nop
hlt
push
call
out
cmp
nop
and
rcrb
jmp
xlat
xchg
sub
mov
push
push
mov
add
mov
rcr
iret
loop
movsl
mov
cmp
xchg
sub
aas
aas
fs
mov
shll
sub
test
push
sbbb
loope
call
xchg
aam
jb
mov
push
and
ljmp
dec
fcomi
and
loop
pop
pushf
xchg
loopne
xchg
dec
inc
push
in
push
lret
push
popa
cwtl
ds
or
push
out
adc
shll
movsb
loope
mov
dec
xor
or
je
adc
repnz
pop
push
stc
movsl
add
sub
nop
sub
sub
mov
jp
mov
testl
mov
xchg
and
lods
jns
fs
adc
insb
mov
xchg
jbe
adc
mov
addr16
sbb
imul
dec
push
and
fisttpl
pop
and
aam
mov
ret
test
xor
xchg
sub
push
adc
add
sarl
jge
mov
adc
jne
adc
xchg
xlat
push
mov
call
or
leave
mov
adc
push
fstl
fwait
dec
push
or
cmpsl
out
movsb
sub
sub
call
ljmp
adc
pushf
es
rcl
and
adc
mov
repnz
sub
jne
sbb
rcrb
test
mov
xlat
adc
gs
lock
loopne
lret
aam
mov
retw
movsl
mov
or
xlat
popf
dec
dec
cmp
xlat
sbb
aas
cwtl
repz
xlat
lods
pop
in
imul
loop
adc
or
adc
xor
cmc
mov
shlb
mov
into
jb
adc
iret
ss
cmp
add
lea
out
frstor
mov
imull
push
fldcw
std
inc
dec
add
jbe
stos
jb
pop
pop
add
fstl
lcall
orl
mov
hlt
jnp
scas
mov
xchg
cmp
sbb
xchg
scas
and
ffree
or
rcrb
int3
mov
sti
sub
data16
and
inc
lea
faddl
push
xlat
jl
fldl2e
push
inc
sbb
daa
mov
mov
mov
movsb
jne
xchg
lahf
ret
jp
addl
add
lock
les
xor
pop
int3
inc
ret
ss
push
in
nop
cwtl
fs
xor
insl
inc
xchg
out
and
cmc
sub
inc
or
imul
sbbl
mov
pop
in
fs
jmp
imul
inc
or
jnp
mov
out
inc
xchg
test
nop
sarb
add
pop
test
faddl
sahf
cmp
ret
ja
nop
add
sarb
scas
fldenv
mov
iret
sbb
and
aad
lret
adc
sbb
andb
std
js
cld
xor
hlt
sti
idivb
lcall
pusha
and
xchg
push
cmp
iret
push
xchg
add
nop
cmp
jg
jg
gs
popf
gs
mov
shr
sbb
pop
pop
insb
stos
pop
inc
push
lret
cmp
or
jg
adc
add
scas
xor
push
push
sahf
or
pop
xchg
jbe
pop
and
ds
mov
mov
add
jp
xor
test
or
adc
jg
mov
cs
jge
jbe
mov
mov
repnz
in
sbb
icebp
xchg
inc
fstpl
mov
mov
mov
dec
fs
push
pop
aam
cmp
cli
pop
mov
mov
pop
jl
into
mov
outsb
dec
fucom
cmp
clc
sub
mov
or
nop
push
jmp
push
dec
mov
stos
xchg
ja
inc
scas
in
fdivr
es
sbb
inc
and
lods
pop
sahf
pop
les
and
pushf
mov
jg
hlt
sub
add
lea
iret
aas
jge,pt
aam
dec
adc
inc
sub
daa
mov
mov
cmpsb
mov
bound
test
lret
mov
sbb
stos
add
icebp
mov
adc
fwait
test
mov
popa
popf
mov
jno
ss
push
and
cmp
xor
testl
add
mov
in
out
sbb
add
pop
ss
mov
ffreep
nop
and
xchg
hlt
pop
mov
push
cmc
xchg
fnstenv
xchg
mov
sub
xchg
add
inc
nop
rcll
inc
fdivrl
sti
jmp
or
pop
pushw
inc
out
sub
test
xor
xor
shll
aas
mov
ret
dec
sub
push
pop
out
push
cld
aaa
adc
push
add
jp
pop
xlat
jbe
mov
cmp
aas
cmp
rorb
iret
leave
adc
dec
lea
mov
stos
and
movsl
stos
cmpsl
cmp
or
jns
stos
cltd
add
bound
jecxz
lcall
jb
lahf
in
inc
in
mov
nop
std
push
mov
aas
imul
hlt
jg
push
pop
lcall
adc
incb
pop
mov
cmc
push
mov
mov
std
aam
and
pop
xchg
jns
aam
aad
jbe
ljmp
aaa
sub
push
xor
aad
repz
notb
scas
shl
test
push
mov
test
ljmp
addl
jg
sub
jns
jp
ror
decl
xchg
inc
pop
or
jo
aam
adc
out
adc
or
lods
sbb
or
movsb
adc
adc
mov
aas
inc
jg
lea
imul
movsl
cmp
inc
je
jne
ja
and
xlat
or
mov
or
scas
sbb
int3
sbb
in
push
iret
mov
push
sub
aaa
sbb
lret
inc
mov
loope
pop
inc
pxor
inc
sbb
mov
and
aaa
push
out
inc
adc
push
jmp
hlt
lret
gs
test
pop
out
movsb
cs
push
aam
pop
dec
and
jmp
or
out
int
mov
mov
and
mov
cmpps
nop
mov
data16
jmp
loope
fsub
out
int
repnz
jl
nop
stc
pushf
das
shrl
push
mov
test
iret
mov
lea
mov
mov
dec
adc
xor
aad
add
push
or
adc
jne
mov
adc
jg
cmpsl
sub
sub
mov
enter
nop
inc
inc
sub
push
sbb
add
out
pop
add
cmpsb
add
movsl
mov
mov
xor
shrb
loope
push
dec
jbe
hlt
push
pop
ret
stos
iret
out
and
jnp
sbb
xor
subl
xchg
pusha
js
hlt
imul
mov
push
xor
xchg
inc
mov
cmp
or
mov
mov
mov
push
aas
repnz
add
jne
icebp
jg
je
mov
jge
sbb
pop
fsts
imul
iret
mov
inc
outsb
stc
jmp
adc
scas
rclb
mov
leave
or
adc
rcrl
lcall
mov
ficompl
push
and
sahf
lret
mov
aam
sti
outsb
cmp
mov
mov
fs
jp
fidivs
push
push
xchg
xor
mov
rcll
jg
push
jno
add
aam
test
stc
push
scas
sub
dec
mov
aam
mov
mov
push
lret
push
add
xchg
negb
push
repnz
sub
xlat
add
push
sub
jne
xlat
and
insl
mov
in
movsb
xchg
lret
push
daa
out
xlat
sbb
sub
fcmovnb
jp
push
mov
jmp
xlat
mov
cmp
lods
frstor
lahf
movsl
iret
fdiv
inc
xor
sbb
sarb
mov
adc
std
push
sub
shl
fldenv
adc
loop
add
xor
mov
pushl
sbb
les
in
xlat
inc
and
mov
xlat
or
cmpsb
mov
xlat
popa
pop
inc
je
push
add
ss
movl
shr
or
push
pop
jecxz
pop
jnp
adc
push
and
xlat
mov
fcomp
push
stos
pop
pop
test
pop
jns
out
xor
mov
xlat
orb
cmp
test
stos
hlt
scas
ss
fcoml
aas
and
or
cmpsb
pop
mov
pop
outsb
xlat
mov
and
mov
arpl
sbbb
lds
jnp
cmpl
pop
xchg
sub
inc
xlat
jl
or
jg
cmp
or
xlat
dec
sbb
jle
xlat
jl
xchg
aas
and
cli
addr16
add
stos
add
jg
or
fldenv
sbb
fimuls
mov
mov
and
mov
insb
mov
andb
aas
out
aam
es
xor
or
scas
pop
jns
lret
xchg
sarl
or
jge
repnz
clc
push
inc
mov
out
inc
xor
add
addb
sub
cltd
movaps
mov
xor
into
repz
mov
sti
and
hlt
ss
xlat
push
int
mov
or
jg
xor
mov
fwait
mov
test
inc
mov
mov
cmpl
in
mov
push
ret
mov
notb
int
xlat
or
xor
cmc
or
cwtl
xlat
mov
cmp
scas
and
cltd
cmp
jae
gs
loop
adc
ret
pop
ja
out
adcb
lods
xor
out
xchg
xchg
popa
cwtl
sarb
mov
lret
fistl
dec
add
or
loope
lahf
xlat
movsl
jp
xchg
jmp
mov
inc
sub
jmp
mov
xlat
cmp
sbb
push
cmpsb
les
adc
scas
icebp
mov
psrld
inc
iret
sbbl
jg
xor
sbb
mov
xor
jl
out
push
adc
xlat
mul
jne
mov
inc
xor
movsl
xchg
repnz
iret
jmp
jge
addr16
xchg
push
push
dec
pushf
inc
and
shll
and
push
pop
adc
mov
icebp
rcl
or
xchg
add
rcrl
cmp
loope
xchg
cli
xchg
sub
xlat
lret
push
push
mov
icebp
pop
insb
xchg
in
not
movsl
fisubs
cmp
adc
and
pop
push
jle
les
lret
add
push
mov
pop
lahf
jns
push
inc
enter
push
pop
inc
pop
xchg
jnp
mov
stc
andb
xlat
jne
mov
ret
cwtl
push
clc
scas
in
dec
xlat
mov
jne
nop
mov
pusha
iret
addr16
jg
mov
cmpsl
xlat
push
mov
inc
lret
xlat
adc
jg
pop
lea
iret
orb
leave
ss
mov
mov
mov
arpl
pop
pop
lock
sarl
xlat
inc
dec
imul
loopne
push
mov
xlat
pop
es
out
enter
rorb
out
push
adc
pop
int3
inc
andnps
xor
scas
movsl
sbb
jns
cmp
jle
dec
mov
hlt
out
xlat
mov
ret
int3
popa
icebp
adc
lds
mov
push
pop
jbe
sbbb
test
jecxz
xlat
popf
insb
xchg
push
daa
jbe
mov
push
in
pop
mov
xlat
movsl
stos
stc
rorb
je
xlat
dec
pop
test
add
scas
add
xchg
lea
or
std
push
or
sub
or
and
cmp
pop
rclb
jle
shlb
jno
xchg
in
shrl
fldl
dec
fisubl
rorl
adc
mov
add
pop
out
loop
push
xlat
mov
inc
scas
push
pop
test
repz
push
xlat
test
mov
paddsw
pusha
in
pop
xlat
push
mov
xchg
leave
clc
adc
push
mov
add
ret
sub
cmpsl
repnz
jbe
shrl
inc
test
lret
pop
sbbb
icebp
out
sbb
fwait
or
add
aad
inc
jl
in
mov
mov
leave
out
dec
sub
sbb
pop
cmc
enter
bound
repz
rcrb
jge
add
sbb
out
in
fucomp
loop
aam
fwait
xlat
inc
cmc
or
xlat
cmpsl
lcall
adc
lret
add
xlat
shrl
xor
fs
out
push
sarl
mov
cli
mov
iret
xor
mov
aam
push
aad
bound
rcl
mov
jnp
push
lods
inc
adc
cmp
shlb
call
arpl
dec
iret
push
fiaddl
ret
imul
test
jecxz
in
andl
aad
push
push
ror
mov
cwtl
pop
rcl
shll
jae
inc
push
inc
push
roll
sar
fidivrs
push
xlat
mov
push
aas
loopne
inc
inc
je
xor
fcmovne
xlat
inc
lret
pop
sub
fnsave
pop
jmp
lahf
xor
mov
pop
push
or
adc
das
cmc
jae
pop
int
xlat
lret
pop
jle
cwtl
sarb
push
shrb
cmp
pop
pusha
push
popf
mov
adc
gs
shl
pop
dec
or
xlat
mov
jp
sub
es
gs
pop
shrb
xchg
xchg
shr
pop
stos
sti
inc
xchg
shll
data16
js
call
bnd
dec
add
shrb
push
adc
adc
inc
adc
lret
iret
sub
push
clc
cmp
mov
shrl
fisttpl
fdiv
out
iret
sbb
push
adc
insb
xor
out
jb
orb
je
inc
xor
lahf
mov
add
jnp
push
sbb
mov
shlb
add
jge
sbb
sarb
ret
movd
adc
repz
jmp
jnp
dec
rcrb
adc
iret
sahf
int
into
push
cmpsb
dec
inc
pusha
faddp
rcl
mov
xlat
lret
push
xacquire
pop
or
add
je
xlat
xor
or
jae
or
cmp
pushf
call
and
lods
les
sub
mov
daa
dec
inc
push
xlat
out
mov
xlat
adc
fcompl
insl
roll
xchg
push
sbb
push
shl
lods
push
ret
dec
xchg
test
inc
dec
int3
inc
push
fld
xlat
inc
mov
add
scas
push
rcl
sbb
test
mov
pop
aaa
imul
es
popf
push
outsb
adc
lahf
sub
loope
inc
push
inc
mov
fmulp
stos
and
outsb
das
mov
inc
sbb
in
sub
jmp
rorb
cmpsl
pop
rorl
in
fisubl
insl
or
adc
xchg
push
rolb
xlat
rcr
jns
dec
sbbb
out
lret
mov
cmc
xchg
xchg
ss
vprotq
addr16
pop
sub
aam
mov
loop
push
adc
dec
repnz
xchg
inc
sub
movsl
dec
lcall
add
ret
jae
sub
dec
nop
nop
cmp
and
lret
loope
or
xchg
std
negb
xchg
nop
xor
loop
out
repnz
inc
fisttpl
mov
loop
add
fstps
cmp
adc
inc
aam
or
nop
sub
ja
in
pushf
push
mov
push
filds
pop
lds
cli
fs
push
fwait
scas
in
xchg
pop
std
test
sahf
nop
add
or
adc
pushf
dec
cmpsl
fs
mov
out
pop
hlt
sub
shlb
cltd
mov
mov
nop
lea
mov
xor
mov
mov
test
popa
dec
testb
nop
and
push
int3
sub
jb
jbe
add
aad
mov
inc
aad
fdivl
xchg
gs
pop
pushf
mov
loope
sahf
aaa
sub
sbb
cmp
jo
jge
andb
mov
int
fildl
adc
icebp
addr16
aam
inc
add
jl
mov
mov
cld
cmp
and
imull
outsb
aam
cmp
or
xor
cwtl
push
pop
mov
xchg
test
hlt
mov
iret
lods
cmp
push
sarl
inc
outsb
aam
subl
cmp
jae
mov
jge
aam
ret
nop
cmp
mov
xor
pop
mov
push
fnstenv
xchg
xor
push
notl
aaa
nop
cmpsb
sahf
jmp
je
mov
xchg
test
xchg
leave
test
mov
mov
pop
jl
imul
xchg
scas
xlat
lret
cmp
push
daa
adc
xor
push
add
xchg
fidivs
pop
movsl
xor
test
mov
cmp
push
subb
lret
sbb
sahf
xor
mov
rcll
popa
cs
scas
xchg
mov
xlat
das
outsl
fs
scas
sub
push
mov
add
inc
movsl
in
daa
nop
pushf
inc
sbb
sbb
adc
sahf
lods
mov
jle
inc
mov
scas
sub
mov
mov
inc
ret
add
adc
xchg
or
jae
std
rcl
xlat
xchg
dec
sbb
gs
sbb
pop
aaa
in
stos
fisttpl
push
div
sbb
mov
movsb
test
dec
dec
xlat
cmpsl
cmp
test
inc
rcr
inc
fs
add
nop
popa
adc
inc
fisubrl
push
cmp
dec
incl
imul
add
into
in
lahf
fmull
nop
shll
aam
add
lock
cwtl
scas
inc
cmp
ficoml
ja
lock
flds
outsl
aaa
pop
std
in
fdivrl
mov
gs
jp
sti
iret
ja
push
cmp
dec
nop
xorb
mov
sub
popf
xor
fcoms
stc
scas
daa
movsl
andl
mov
out
pop
cmp
push
fdivrl
mov
rcll
jo
stos
clc
mov
ficomps
addb
adc
popa
mov
lock
test
lods
xor
les
jp
shll
jno
faddl
sahf
mov
sub
mov
mov
and
pop
aaa
sbb
mov
cmp
inc
shrb
jg
jae
pop
pop
xor
pushf
push
push
sbb
aaa
std
stc
aam
push
cmpsl
sbb
push
sub
dec
or
ret
leave
clc
cld
nop
sti
out
push
add
push
and
inc
mov
mov
inc
mov
xor
fmull
sbb
pop
call
add
xchg
iret
imul
fnstenv
clc
pop
jp
in
mov
popa
pop
push
je
gs
mov
aaa
push
sbb
std
inc
add
and
pop
lds
mov
bnd
aad
mov
dec
jle
lahf
iret
lcall
adc
comiss
fildl
push
xchg
movsl
das
nop
int3
call
sub
inc
out
outsb
cmp
push
adc
jmp
lahf
xchg
jp
lret
sbb
popa
stos
mov
and
ret
stc
addr16
scas
mov
inc
xchg
testb
mov
xchg
pop
ja
push
inc
push
shrl
jecxz
sub
lret
scas
cld
push
stc
aam
stc
je
jb
cmp
inc
scas
cltd
imul
sysret
push
shll
jae
adc
sub
push
addr16
pop
insl
out
outsl
jae
iret
insl
jecxz
sub
insb
rcrl
dec
cmp
js
xorb
mov
call
inc
dec
pop
call
daa
xchg
mov
mov
lcall
aas
pop
and
adc
or
sub
sbbb
pop
jns
scas
mov
out
subb
ret
ffree
nop
adc
pushf
out
adc
xchg
pop
push
add
dec
push
nop
mov
sub
jmp
jmp
fcmovnu
inc
inc
ljmp
jecxz
stos
addr16
add
sub
sub
push
and
out
orl
jns
lcall
scas
xor
mov
fwait
sub
sahf
cmp
jae
imul
or
push
sub
shl
inc
sbb
shl
mov
or
adc
adc
testb
jb
cs
inc
mov
pop
int3
push
jmp
aam
ficomps
mov
and
test
and
jns
bswap
xchg
adc
out
cmpsl
mov
mov
loopne
mov
xor
in
cmpsb
add
inc
jae
nop
shl
movsb
fldcw
lea
mov
mov
pop
or
jecxz
add
fs
push
mov
sti
inc
scas
shl
out
cmp
lahf
push
std
stos
xor
push
test
add
rcll
xor
jecxz
das
fs
shrb
mov
cs
add
jmp
xlat
fsts
lret
and
sub
movsl
cld
stc
scas
rcrb
ljmp
mov
xchg
cwtl
test
mov
mov
loope
test
lea
xchg
lret
or
pop
scas
dec
lea
mov
ret
mov
cmp
push
xor
lock
push
jbe
sub
and
rcrl
xchg
fsubr
repz
inc
add
xor
cmpsl
mov
and
sahf
jg
cmp
mov
mov
or
cs
cmp
xchg
int3
adc
mov
cld
movsl
jns
nop
mov
mov
pop
jnp
ljmp
mov
add
and
sub
and
movsb
loope
call
scas
popa
push
sub
push
insl
pushl
cmp
xor
mov
repnz
sub
sub
test
xchg
int
lods
cmpsb
popf
xchg
clc
out
flds
mov
imul
test
js
shrb
cli
scas
adc
inc
fbstp
movb
aaa
enter
mov
xor
xchg
rclb
mov
jno
popf
stc
call
shlb
push
mov
in
push
nop
jmp
jp
popa
negb
xor
lcall
jne
inc
cmc
or
dec
jae
adc
pop
mov
mov
add
icebp
ljmp
test
std
lret
aam
xlat
pop
jbe
std
pusha
out
sub
es
mov
push
adc
xlat
scas
inc
cmp
add
xlat
cmpsb
jo
adc
rcl
mov
and
push
movsl
sbb
mov
xlat
push
out
lret
add
sbb
xlat
mov
cmp
xlat
aaa
imul
psubsb
sarl
xlat
imull
jb
fdivr
push
lahf
sub
xchg
rorb
out
add
aad
pop
pop
sub
xor
xlat
xor
sti
sbb
or
pushf
and
dec
mov
mov
adc
xlat
jg
or
nop
dec
adc
add
in
aaa
call
popa
stc
test
lcall
mov
test
xlat
mov
inc
hlt
or
push
push
call
inc
rclb
lahf
mov
xchg
imul
add
cmpsl
mov
jns
bound
adc
and
mov
data16
dec
sbb
in
pop
adc
push
repz
divl
aaa
scas
xlat
movsb
push
daa
stos
popf
jnp
xor
sub
push
mov
ljmp
jbe
insl
adc
and
cmp
orb
xlat
dec
test
loopne
or
cmpsl
addr16
mov
push
add
in
xorl
mov
movsl
cmpsb
js
and
call
jg
pushf
mov
sbb
xchg
mov
xlat
cmp
push
push
into
inc
xlat
push
xorl
xlat
cmp
in
xchg
cs
xlat
in
inc
aaa
std
lea
rcr
mov
popa
aad
test
jecxz
push
jo
xlat
hlt
jo
clc
xor
arpl
push
mov
adcb
mov
xor
push
stos
test
push
bound
and
out
and
or
lret
lea
xlat
or
movsl
pop
xlat
aas
pop
or
cltd
add
xlat
jne
mov
jb
stos
inc
xor
xlat
dec
stos
fs
xor
repz
pop
and
lahf
inc
daa
aam
dec
inc
cwtl
add
popa
xlat
fwait
movsl
sbb
mov
in
xchg
in
mov
sub
xlat
mov
pushf
push
mov
inc
jg
rclb
mov
cltd
adc
mov
or
xchg
mov
fstl
dec
fisttpl
push
or
mov
cmc
fwait
gs
mov
push
ljmp
lahf
inc
leave
nop
out
sub
cmp
push
xlat
fnstsw
sti
add
orb
jae
xchg
add
xchg
pop
sub
leave
inc
pop
sbb
pusha
xchg
jnp
fdivl
xchg
sbbb
push
cmp
cmc
jbe
xlat
subb
pop
cmpsl
adc
ss
outsb
xlat
adc
and
shll
ret
mov
sbbb
sbb
mov
les
add
mov
pop
or
addr16
push
push
repz
hlt
ss
pop
leave
mov
nop
and
test
cmpsb
repnz
xchg
fsub
inc
inc
sub
mov
cli
jno
push
xchg
sbb
nop
inc
cmc
push
dec
jbe
jecxz
xchg
xor
cld
les
scas
adc
rolb
mov
clc
push
sahf
add
sub
and
jno
cld
inc
inc
nop
pop
pop
mov
xor
clc
int3
ret
dec
pop
jle
mov
inc
test
int3
lret
sbb
stos
sbb
cmc
dec
shrl
ljmp
jo
add
ja
xchg
addl
mov
or
loopne
cs
ja
mov
xchg
sub
mov
adc
mov
xlat
leave
imul
inc
or
inc
sbb
mov
stc
or
rcll
sbb
push
or
loopne
fs
and
mov
cmp
pusha
daa
add
loopne
lods
stos
jecxz
and
sub
ljmp
push
push
aam
aaa
jnp
push
fyl2x
xor
dec
xchg
aaa
cmp
sbb
mov
int
inc
out
stos
sbb
adc
ret
and
fildl
sub
sbb
push
mov
push
nop
loopne
sbb
std
js
scas
push
or
out
add
repnz
or
sub
nop
call
push
fcmovu
pop
rcll
mov
sahf
leave
rcr
into
in
pop
push
push
leave
iret
imul
iret
aaa
push
pop
adc
push
mov
and
sub
cs
mov
adc
add
js
outsb
jbe
out
leave
negl
push
fs
inc
pusha
dec
lods
push
aam
nop
lds
ret
mov
mov
subl
and
pop
xchg
inc
xor
push
imul
xchg
xlat
jmp
imul
sar
in
rcll
jmp
addr16
mov
inc
lds
pop
pop
mov
push
negl
mov
stc
divl
mov
push
imul
call
pop
cli
adc
or
lret
ds
jl
xchg
imul
push
ret
test
mov
push
xchg
shrl
fcoml
mov
xorb
mov
add
inc
mov
cmpsl
nop
push
dec
repz
pop
les
mov
and
dec
adc
pop
in
int
mov
out
adc
mov
lods
jp
mov
mov
or
scas
add
popa
insl
adc
mov
iret
cmc
push
gs
and
xor
mov
insb
in
mov
movsb
scas
les
mov
scas
stc
dec
in
push
js
mov
sbb
add
inc
add
outsl
and
imul
jae
iret
inc
repz
sbb
outsl
jnp
pop
in
mov
mov
ffreep
mov
call
mov
jmp
inc
or
inc
jle
nop
mov
mov
dec
ror
pop
inc
adc
mov
cmpsl
fcomps
mov
xor
dec
stos
insb
outsb
bound
pop
jbe
je
cmp
jnp
mov
jmp
push
pop
mov
pop
rcll
out
test
shrl
sbb
and
nop
pop
shl
lods
jnp
nop
add
sahf
les
push
jg
mov
xlat
aad
xchg
fdivl
sti
sub
pop
loop
add
adc
dec
leave
in
add
push
push
dec
sub
mov
xchg
mov
sbbb
jae
ffreep
popa
xchg
jno
cmpl
and
fistl
adc
sarb
shlb
mov
cmp
xchg
pop
inc
xlat
pop
jp
adc
cmp
cmpsb
sub
or
lahf
movsl
sahf
je
movsl
je
xlat
ja
add
mov
insb
lret
daa
push
ljmp
xchg
push
stos
xor
dec
sti
cmpsb
lods
xchg
adc
xor
movsl
mov
test
int3
cmp
std
push
pop
nop
test
mov
sub
push
sbb
sub
sbb
inc
inc
xor
push
fmuls
mov
xchg
dec
pop
jg
mov
jecxz
ss
aaa
es
xchg
movsl
gs
xchg
outsb
insb
out
aas
fists
push
and
popa
fwait
sub
push
xchg
jb
mov
pop
push
out
xchg
sub
inc
xchg
mov
mov
push
push
inc
out
dec
sbb
adc
dec
xor
push
test
mov
aam
mov
ffreep
push
lret
add
call
adc
sub
push
movsl
dec
aas
xchg
lret
and
and
pop
dec
sbb
into
aas
std
xor
nop
cld
std
rorb
inc
inc
addr16
xchg
pop
and
mov
call
ret
js
push
mov
push
xor
mov
and
out
ja
push
shll
add
sti
sub
test
nop
cmc
push
lea
xchg
jne
ss
pop
sbb
popf
mov
sbb
lret
jnp
add
xchg
dec
jecxz
mov
xchg
outsl
or
jmp
push
mov
mov
xlat
push
pop
mov
loop
fdecstp
pop
repnz
loopne
jle
out
push
jnp
sbb
mov
mov
sub
jb
jp
push
in
aas
mov
jge
sbb
or
jmp
and
jo
rol
lcall
adc
jle
cs
stos
adc
mov
stos
mov
xchg
add
xor
xchg
iret
icebp
sbb
scas
add
mov
add
je,pt
jmp
mov
cs
cmp
xlat
insl
pop
or
sub
scas
fnsave
loope
xchg
pusha
dec
adc
xor
mov
mov
loope
int
leave
out
mov
xchg
enter
mov
mov
mov
jg
pop
xor
daa
enter
pop
sbb
mov
cmpsl
xor
or
push
ret
push
mov
dec
rclb
mov
or
mov
push
fistl
or
hlt
fcompl
jp
xor
add
mov
lahf
push
push
xor
hlt
subl
je
cmp
jb
xlat
pop
test
scas
out
aam
mov
bound
xchg
je
mov
enter
call
pop
pop
xchg
mov
sbb
int
stc
cmpl
fdivs
inc
in
push
jp
mov
jnp
mov
xchg
les
in
pusha
nop
negb
cmp
jg
or
push
sbb
addl
loop
pop
daa
push
lahf
ja
mov
stos
into
pop
fnstcw
out
sub
ja
adc
jmp
ss
add
stc
mov
add
ss
jb
rcll
in
js
cli
xchg
pop
add
dec
sub
dec
push
mov
loop
es
sub
add
sbb
add
cli
out
mov
aam
push
ficoms
sbb
xor
fcompl
scas
jle
cmp
ret
es
mov
loop,pn
jns
lods
cmp
xchg
and
cli
jle
cmp
adc
push
mov
add
in
ror
xor
or
dec
mov
inc
leave
xchg
mov
into
fistl
mov
stos
push
test
dec
fwait
adc
push
std
jno
clc
sbb
lods
bound
pop
add
mov
stos
mov
lret
jb
sbb
ss
les
or
mov
xor
out
outsb
repz
or
orb
dec
loop
cwtl
pop
out
aas
and
add
mov
sub
jmp
add
cs
push
mov
inc
insl
mov
out
out
inc
scas
sbb
sub
hlt
mov
jmp
ja
int3
aam
inc
nop
cmp
pop
xor
insb
sub
adc
mov
fimull
out
push
cmp
repnz
ds
in
sub
dec
cmp
mov
jecxz
out
stos
push
rcl
cmpsb
jae
push
inc
push
fdivs
repz
or
jmp
xor
and
mov
mov
daa
nop
mov
mov
test
cwtl
bound
pop
mov
xchg
push
push
mov
lea
aam
push
testl
mov
jmp
mov
jnp
sbb
cs
lea
xchg
aas
std
push
aad
nop
out
push
xchg
mov
outsb
leave
push
aam
xchg
cmp
xlat
out
or
and
inc
add
shrl
add
out
aaa
and
in
popl
nop
sahf
push
or
inc
loopne
outsl
sbb
daa
mov
xlat
inc
and
out
sbb
sbb
fs
jl
jbe
cmp
punpckhbw
and
out
xor
push
push
add
lret
xchg
fxch
pusha
add
fdivl
adc
lock
orl
add
jp
fistps
xchg
sahf
out
and
dec
and
xor
xchg
mov
aam
imul
lcall
mov
add
shl
rcr
mov
cld
push
popa
nop
sti
scas
inc
and
and
add
mov
add
xchg
lds
loope
jbe
mov
push
xchg
aaa
xchg
movl
jbe
jmp
ret
ja
xchg
pop
or
mov
nop
test
xor
pop
push
cs
sbb
mov
scas
inc
bound
mov
in
enter
fildl
mov
adc
cli
add
xlat
test
jp
inc
lcall
jle
push
sahf
mov
clc
inc
mov
mov
push
mov
xchg
nop
jno
mov
push
jb
repnz
jg
and
pushf
fwait
xor
mov
rolb
stos
add
insb
scas
testl
inc
jae
arpl
fistl
mov
xor
insl
test
test
and
pop
mov
popl
pop
pop
les
mov
sahf
paddq
sbb
mov
add
mov
subb
cli
push
xor
nop
scas
cmp
popf
xor
jl
adc
jle
les
in
lock
scas
xor
cmp
out
outsb
lods
pushf
popa
int
sub
out
sbb
je
mov
jb
repz
mov
sbb
xchg
pushf
push
lea
pop
xchg
push
mov
repnz
adc
xlat
pop
fdivl
jl
adc
xor
iret
enter
aad
call
sub
jbe
mov
nop
xlat
add
push
pop
in
xchg
shll
insl
mov
fstpt
inc
pushf
cli
daa
hlt
sbb
jp
inc
cmp
nop
adc
mov
lret
push
xlat
dec
popf
pusha
sahf
pop
aaa
imulb
xchg
mov
xchg
push
xchg
pop
loop
aad
lcall
xlat
inc
cs
mov
pusha
sub
mov
xchg
idivl
add
shll
xor
or
adc
les
xchg
pop
test
ss
xchg
pusha
lahf
add
inc
data16
out
loop
cli
push
or
repz
sbb
mov
dec
test
jbe
aam
daa
add
xlat
inc
pop
xchg
dec
push
xor
xlat
mov
inc
sbb
or
sbb
lahf
push
mov
jae
imul
xchg
push
and
xor
xlat
cmp
pusha
sbb
xor
mov
sbbl
cmpb
mulb
jae
jmp
lahf
mov
mov
in
jg
pop
mov
cmp
dec
adc
aam
dec
mov
lret
xchg
mov
cmp
pop
das
or
mov
xchg
adcl
nop
mov
push
xchg
loope
add
xchg
sbb
push
add
xor
inc
int3
xlat
and
add
aad
dec
repnz
inc
mov
mov
sbb
lock
dec
shr
addr16
daa
xor
out
lahf
insl
push
xchg
fstpl
clc
ja
repnz
xor
mov
xor
ss
lret
push
sub
gs
pop
mov
je
sar
add
sti
stos
int
mov
mov
push
sub
adcl
jnp
dec
xlat
sbb
cli
aaa
hlt
sub
rolb
add
pop
xor
repz
xlat
dec
cmc
cwtl
iret
ret
cmpsl
addr16
out
in
repz
push
icebp
popf
scas
inc
clc
and
gs
int3
std
add
ds
cmpsl
mov
add
ret
push
add
xor
add
scas
lds
aaa
sub
sbb
inc
shrl
and
test
dec
and
fisttps
lods
sub
out
jp
ffree
fdivs
xor
enter
test
mov
daa
push
imul
dec
xlat
cmp
sub
mov
pop
and
mov
leave
fs
dec
lcall
push
mov
in
pusha
lahf
jge
sub
roll
in
in
enter
shll
insb
push
mov
jl
mov
pop
bound
adc
lods
aaa
ds
and
gs
mov
scas
shlb
ret
fcomps
mov
stos
ret
sarl
out
xlat
jns
lods
jae
lods
sahf
sbb
xor
shl
jle
mov
xor
push
mov
push
les
xor
ljmp
aad
pop
sbb
mov
mov
shlb
sbb
out
nop
sub
adc
xlat
scas
pop
mov
sub
xchg
jnp
inc
sub
lcall
xchg
mov
inc
outsb
xlat
mov
adc
cmpsl
insl
sbb
mov
ljmp
fwait
clc
adc
xlat
mov
sub
shlb
xor
adc
iret
cs
rolb
and
ljmp
pop
push
sbb
insl
xlat
icebp
sbb
push
pop
mov
pop
xor
nop
int3
xlat
mov
shlb
inc
sub
ror
arpl
xlat
jmp
xchg
test
lods
stos
fisttpl
aam
pop
mov
int3
jge
lods
add
inc
fdivs
shl
dec
mov
pop
xlat
and
lahf
into
add
std
lock
or
adc
mov
or
push
jl
adc
inc
fs
mov
mov
mov
mov
pusha
ret
pushl
sub
inc
sub
hlt
jnp
call
aaa
adc
push
fcoms
ja
cmpb
mov
push
inc
popf
out
rorb
adc
nop
scas
pop
pop
sar
dec
andb
dec
negl
pop
call
push
and
sahf
icebp
dec
sbb
fmull
fdivrs
sahf
test
cmp
push
mov
mov
pop
test
rorb
addl
push
mov
mov
loop
xor
pop
xchg
sbb
test
xchg
dec
mov
mov
shll
int
icebp
repz
push
pusha
fwait
sbb
iret
stos
std
inc
fisubrs
and
lahf
icebp
cmp
fldcw
jge
push
shlb
adc
or
lret
out
or
xor
pop
repnz
fstps
jecxz
push
sbb
xchg
mov
mov
jmp
dec
and
sub
fdivl
int
cwtl
fmull
inc
pop
mov
lret
clc
push
fwait
je
dec
clc
inc
jl
imul
jb
out
jge
mov
pusha
add
outsb
imulb
or
inc
push
cmpsl
xchg
nop
fwait
int
loopne
jge
lret
dec
and
add
cld
fmul
jae
fadd
jo
jns
xchg
push
mov
scas
inc
rolb
sub
mov
push
inc
and
adc
jle
outsb
mov
shll
xchg
lret
leave
daa
and
push
push
jbe
aad
push
iret
inc
inc
sbb
jns
movsb
adc
xchg
cmp
inc
stos
out
xchg
pop
xchg
inc
repnz
add
mov
push
inc
push
push
aas
add
inc
mul
sub
aas
mov
mov
xchg
cwtl
leave
jns
push
sub
popa
nop
add
sbb
pop
scas
mov
in
data16
insb
les
out
push
out
mov
mov
loope
sbb
scas
aaa
fists
notb
mov
test
mov
cmc
dec
mov
xor
out
add
and
aaa
push
dec
push
push
mov
mov
out
adc
and
jno
std
xchg
addr16
xchg
nop
and
cld
dec
js
pop
stc
inc
int3
icebp
and
or
repnz
and
sbb
mov
enter
in
mov
and
add
notb
hlt
fisubrl
and
insb
sub
rcrl
push
jbe
mov
shl
loope
lahf
push
icebp
scas
cmc
mov
movsl
rol
xor
xchg
pop
lods
mov
push
jno
out
and
add
mov
mov
sub
pop
pop
dec
xchg
pusha
cld
testl
pop
loopne
sbb
push
mov
add
dec
add
adc
xchg
das
aad
jg
mov
cmp
stos
sarl
and
insb
stos
lahf
scas
adc
lret
shl
mov
mov
lds
pop
adc
sub
popa
lcall
vpandn
sti
xor
mull
insl
adc
xchg
cs
nop
xor
adcl
daa
dec
dec
dec
popf
leave
and
or
rcll
ret
sub
ret
pop
and
jge
pop
repnz
cmpsw
cmp
cs
jmp
test
fsubrl
hlt
ja
nop
jns
bound
arpl
xorl
je
push
xchg
shrl
in
incb
adc
inc
sbb
filds
sbb
dec
nop
in
cmp
inc
mov
fs
repz
xor
xor
insl
push
sbb
pop
xor
xchg
dec
jo
mov
ficoml
test
aad
cmp
out
sub
sahf
addr16
rorl
jne
xor
jge
push
sub
xor
xor
cwtl
mov
xlat
xchg
ja
dec
js
scas
pop
sbb
cmp
push
adc
lret
rcll
les
fistpl
xchg
jnp
out
push
xchg
and
fwait
out
into
or
aam
mov
jns
adc
icebp
fsubl
jge
leave
int
push
fldcw
xchg
or
ja
aaa
rolb
add
mov
inc
jns
jo
adc
sbb
scas
imull
ja
pop
out
add
sbb
bound
lret
movsl
inc
int
shll
push
mov
fists
leave
xchg
pop
pop
in
jbe
jno
add
add
jp
dec
scas
dec
pop
mov
hlt
ret
int3
inc
cmc
xor
xchg
pop
mov
scas
arpl
jb
add
sbb
mov
add
or
test
enter
mov
inc
scas
les
fldenv
icebp
jecxz
xchg
cltd
pop
add
push
cli
xor
ret
sub
mov
mov
jp
enter
dec
mov
xchg
sub
hlt
aad
fs
cmpsb
jnp
pop
ret
xchg
ret
jne
mov
insl
mov
or
sbb
inc
ljmp
push
movsb
xor
dec
xchg
jbe
fwait
nop
mov
mov
lock
cmpsb
divl
xchg
scas
repnz
lret
nop
sahf
jecxz
pop
mov
loope
jnp
pop
shl
mov
or
xor
in
icebp
jge
shl
outsb
ljmp
aam
in
add
inc
jae
xchg
mov
pop
push
jae
enter
nop
dec
icebp
adc
movsl
adc
cld
jnp
mov
in
mov
add
push
xor
outsb
ret
testl
mov
inc
jns
sbb
cmp
mov
je
mov
xchg
ja
or
addb
xor
leave
nop
leave
push
ss
jmp
leave
inc
push
push
mov
aas
das
enter
or
insb
jo
push
sub
cmc
sub
push
lahf
lea
les
or
pop
jne
xchg
popa
push
aad
xchg
pushf
fdivl
ret
add
jns
lds
push
cmpsl
clc
pop
xchg
cmp
ffree
leave
data16
pop
pushf
not
lahf
cmp
cmpsb
stc
mov
cmp
add
dec
adc
pop
loop
mov
xor
mov
mov
adc
test
clc
mov
inc
lcall
cli
into
lods
sbb
lods
jb
jp
add
push
lds
fwait
jb
leave
inc
nop
and
lcall
repz
loop
or
jecxz
orl
sbb
jge
inc
js
xor
or
pop
mov
hlt
sbb
fdivr
ret
or
inc
sub
sbb
xchg
jnp
ljmp
adc
or
inc
inc
loopne
adc
movl
pop
sub
jmp
je
jmp
outsw
test
jns
jb
cmc
adc
nop
or
ja
loope
sub
sub
adc
cmp
inc
in
dec
mov
dec
cs
inc
rcr
imul
daa
mov
mov
jne
in
mov
iret
xchg
add
dec
stos
test
mov
mov
out
inc
imul
aaa
fst
stc
repz
clc
fnstenv
daa
jbe
jno
cmp
aam
push
insb
ljmp
rorl
sahf
add
jae
popf
sub
xchg
movhps
aam
shr
inc
adc
int
sahf
push
inc
or
fdivl
xchg
sub
icebp
mov
popa
addr16
stos
cmp
andnps
rorb
mov
inc
es
jecxz
fcmovu
inc
fiaddl
sar
fdivrl
adc
enter
sub
aad
xor
jnp
js
mov
sar
or
sahf
fmuls
inc
mov
nop
xchg
or
mov
sbb
push
fucomip
inc
cwtl
lock
lret
mov
or
fnstenv
cmp
cmp
gs
fdivl
je
sbb
cmp
mov
adc
adc
xchg
sbb
adc
addl
add
pop
ljmp
mov
and
int
fwait
push
ret
outsl
aas
aaa
outsb
jo
stos
sub
lock
stos
not
into
add
aad
out
mov
inc
xor
repnz
orl
repz
jmp
ss
and
in
xor
daa
arpl
sti
mov
int3
push
gs
push
and
mov
dec
or
sbb
xchg
mov
or
xor
sbb
dec
mov
xchg
arpl
es
cmp
xchg
daa
push
mov
and
stc
and
inc
mov
mov
gs
mov
adc
mov
js
xlat
xchg
imul
int
and
arpl
cmp
mov
les
xchg
and
sbb
sti
jge
add
movsb
sbb
xor
xchg
lea
pop
fisttps
mov
imul
lods
xchg
cmc
repz
push
add
adc
lret
aam
in
jnp
nop
out
inc
das
stos
add
jb
gs
ljmp
push
xchg
jae
repz
add
es
rclb
in
mov
data16
ss
orb
sahf
jbe
or
ret
jns
cmpxchg
test
pushf
cmp
movsl
xchg
insl
scas
or
mov
lds
std
sub
push
inc
fcoms
xchg
cmc
test
inc
push
mov
xor
orb
out
push
addl
shlb
pop
mov
in
js
sub
lahf
aas
dec
bound
addr16
add
inc
dec
push
jnp
push
xor
sub
or
jmp
jbe
shl
cmp
mov
imul
jl
inc
sub
call
or
sbb
add
xlat
jbe
add
adc
pop
fistl
jg
repnz
inc
scas
aad
pop
ret
rorl
push
test
xor
xor
pop
pandn
xor
jle
adc
lret
jge
push
push
jg
xchg
or
mov
popa
mov
xor
xchg
cmp
push
lea
adcl
or
lcall
test
test
stos
ret
inc
pop
imul
add
aas
xchg
add
inc
pop
mov
inc
adc
cmp
jmp
mov
xchg
cli
aam
or
nop
add
add
wrmsr
fldenv
mov
inc
inc
iret
xchg
or
movsl
xchg
insl
xchg
push
mov
pusha
adc
sbb
shlb
adc
sub
cmp
mov
and
sti
and
shll
out
and
xor
xchg
mov
stc
xlat
outsl
mov
inc
mov
cmp
adc
cmp
subb
xchg
or
mov
test
xchg
fiaddl
mov
inc
push
mov
lret
xchg
jne
jns
cmp
outsl
jp
lds
aam
dec
mov
das
shrl
movsl
insl
xor
cs
mov
mov
inc
scas
stos
mov
sbb
sub
out
inc
add
lds
fimull
leave
gs
pop
pusha
pop
xor
xchg
fs
les
sub
movsb
fisubl
adc
push
fs
push
gs
add
cld
repnz
mov
and
xor
ja
mov
nop
loope
aas
sbb
jnp
push
testb
pop
push
movsb
sub
call
or
inc
sub
stos
push
popa
test
pop
outsb
jno
inc
pop
sbb
pop
fwait
shlb
pop
push
rcrl
test
mov
xchg
sbb
popa
int3
sub
and
mulb
pop
pop
icebp
imul
mov
mov
xchg
xchg
lret
cmpsl
add
filds
mov
lahf
scas
inc
mov
stos
mov
push
sbb
fwait
pop
cmp
out
cmp
inc
add
stc
jecxz
mov
mov
dec
mov
dec
ss
inc
int
pop
stc
into
cli
popf
pop
xchg
movsl
rcl
xchg
or
js
out
cmp
int3
in
pop
fbld
push
nop
out
jmp
fdivrl
insb
xorb
xchg
in
pop
lahf
stc
pop
inc
xchg
xor
sahf
jmp
orb
jg
sbb
or
adc
fucomip
pop
jg
dec
in
iret
icebp
in
test
push
adc
lret
xor
cmp
dec
or
mov
cli
xchg
jmp
mov
fwait
loop
push
cwtl
mov
out
aam
xchg
stc
push
fs
xor
mov
inc
pop
pop
ljmp
sub
pop
push
or
mov
aaa
xchg
mov
imulb
sub
or
inc
sbb
mov
jmp
shll
mov
sub
sbb
add
cmp
inc
clc
add
xor
sub
adc
pop
out
cld
lods
stos
push
ss
popl
out
xor
sbb
sbb
mov
sub
insl
push
mov
stos
in
les
xchg
icebp
sbb
movsl
aad
mov
push
scas
lret
pop
sub
push
xchg
loopne
les
cs
loope
in
xchg
repnz
mov
sbb
data16
fs
pushf
push
in
jecxz
int3
jp
inc
lods
dec
xchg
push
adc
in
push
and
dec
aas
jmp
out
or
mov
xor
mov
jnp
push
hlt
or
testl
xlat
jb
sbb
rol
mov
inc
in
adc
lahf
gs
in
push
rclb
hlt
fwait
jnp
nop
mov
arpl
into
push
test
out
or
shlb
pop
add
lcall
out
xlat
shl
pop
push
dec
mov
push
jecxz
xlat
adc
cmp
fpatan
rorb
mov
je
adc
mov
lods
xor
xor
cmpsb
dec
scas
xlat
test
sbbl
mov
outsb
adc
push
xor
mov
ja
sbb
sbb
popf
or
les
adc
divl
repnz
push
movsl
std
imulb
rcr
and
xlat
or
mov
dec
push
push
in
mov
jo
fsubrl
movb
and
stos
xchg
fdivs
pop
xlat
lods
lock
pop
addr16
pushf
xchg
lea
dec
jb
out
outsb
and
lret
pop
push
inc
popa
xlat
mov
mov
movsb
xlat
icebp
sbb
aas
sub
lahf
out
push
test
sarl
lea
outsb
int3
mov
cmp
or
lret
pop
xchg
aas
cwtl
mov
xlat
js
loope
dec
clc
dec
jne
or
test
sbb
and
jno
add
jecxz
xchg
mov
jmp
into
lahf
test
jno
or
je
fsts
xlat
adc
push
dec
xchg
pop
fcmovnbe
xor
sbb
es
imul
iret
cmp
clc
push
cmp
jb
inc
lods
pop
negb
cld
les
aad
xlat
ret
leave
shr
lock
nop
inc
inc
mov
ss
shll
clc
jae
dec
xor
repnz
daa
cli
les
jp
cmpb
push
js
xlat
xor
inc
cmp
or
nop
pop
xor
fstpt
lods
xlat
xchg
and
mov
leave
aam
test
jns
nop
xor
xchg
out
inc
cld
jbe
dec
push
xor
cmp
and
mov
sbb
imul
xchg
lcall
mov
out
jle
xchg
push
loope
cmp
pop
leave
jo
leave
mov
lea
and
mov
mov
stc
adc
ja
and
xchg
mov
dec
outsb
loopne
pop
adc
not
stos
sbb
imul
insl
repnz
rorb
jle
dec
cltd
out
test
out
mov
leave
xchg
push
lds
jo
jnp
repz
adc
mov
or
ret
fs
xchg
addr16
ja
jecxz
jo
add
dec
and
in
lcall
icebp
mov
lea
aad
sbb
mov
pop
pop
xor
test
and
xchg
aaa
sub
cmp
in
lds
fistps
pop
and
dec
int
les
les
dec
popf
jae
imul
mov
xchg
xchg
in
and
sbb
fcmovb
aaa
mov
cli
repz
mov
jb
xchg
dec
mov
loopne
inc
xor
sub
jg
dec
in
lcall
add
push
push
inc
lahf
jnp
sub
sub
push
lahf
mov
inc
imul
dec
push
push
fmul
jp
ds
cmp
dec
mov
out
or
xor
or
push
inc
out
popf
or
and
mov
mov
movsl
nop
cli
add
js
aam
and
sub
pop
dec
sbb
adc
inc
jbe
es
jmp
das
or
push
mov
push
push
imul
ds
jo
add
test
mov
call
sbb
xchg
out
xchg
rcr
jp
dec
sahf
jo
xlat
cmp
pushf
fptan
lds
orl
and
xchg
lock
enter
mov
loop
ret
mov
mov
jb
pop
mov
movsl
out
std
mov
flds
leave
xchg
loope
add
fadds
mov
or
mov
mov
add
ret
or
imul
aad
inc
int
xchg
iret
int
imul
imul
ss
roll
loope
xchg
pop
sub
iret
sub
jecxz
out
xchg
test
in
push
xor
inc
and
shlb
daa
xchg
testl
sbbb
ret
adc
sbb
pop
xchg
jge
shll
test
ret
mov
mov
das
nop
outsb
lahf
leave
jg
mov
cmc
inc
add
repnz
cwtl
int3
lcall
ss
xor
test
adc
mov
mov
lock
mov
pop
push
xchg
repnz
rcrl
jl
cmp
dec
test
cli
gs
imul
dec
cs
aas
mov
mov
add
mov
cltd
xchg
and
cmp
dec
loope
add
scas
push
rcl
pop
jmp
add
scas
add
fsubs
inc
les
inc
sbb
inc
imul
leave
aad
cmc
lds
dec
lods
lcall
rcll
xchg
lock
xor
lods
test
lret
jno
testb
rol
pop
jbe
jbe
fwait
sub
in
js
sbb
add
jo
xchg
pop
cmp
fisubrl
cmp
xor
nop
scas
dec
js
xchg
pop
pushf
in
dec
mov
xchg
xchg
pop
xchg
in
sub
add
pop
ss
jp
jo
lret
mov
repnz
cwtl
dec
test
ja
adc
pusha
dec
ljmp
inc
test
pusha
pop
add
dec
imul
sbb
dec
nop
jg
cmp
fbld
dec
pop
jmp
sub
sub
sbb
cmp
insb
int3
mov
mov
mov
xchg
hlt
and
jbe
xor
mov
adc
faddl
aas
jmp
stc
jae
mov
cmp
dec
stc
push
lret
xchg
adc
add
mov
outsb
pop
outsl
shrb
ret
out
ljmp
mov
les
cmpsl
add
test
lea
test
and
push
pop
sub
decl
push
fcomps
inc
subl
test
ds
mull
add
jns
andl
scas
sub
outsb
mov
pop
jg
popa
sbb
add
dec
lods
mov
adc
xchg
add
sub
notb
stos
int3
ss
jo
arpl
lock
aaa
rcrl
inc
xchg
xor
je
scas
pop
sbb
pop
test
aad
int3
data16
lods
mov
jae
cmp
test
sbb
lock
idiv
inc
push
ja
repz
enter
pop
fwait
cmp
fsts
shll
xor
out
mov
mov
cmpsl
cli
lods
movsl
and
arpl
in
jbe
jns
ljmp
rorl
inc
ret
sub
push
jle
das
movlps
lods
fcoml
stos
in
or
nop
sub
scas
scas
dec
cmp
xchg
mov
jecxz
xchg
les
mov
iret
pop
out
jae
add
xchg
jb
ret
andl
adc
add
pop
icebp
out
fmull
mov
or
les
mov
mov
adc
xchg
dec
into
ret
shr
xor
test
notb
nop
out
imul
dec
dec
pop
sub
and
xchg
jno
adc
aam
mov
test
jne
or
insl
scas
dec
punpckhwd
mov
gs
cs
cmp
idiv
push
mov
mov
mov
xor
mov
enter
js
sbb
sbb
lahf
test
xchg
inc
jmp
xchg
fmull
push
inc
or
fistpll
iret
or
sbbl
ret
cltd
xchg
mov
inc
sahf
ror
popa
sub
dec
out
mov
out
pusha
icebp
sub
pop
rcll
sbb
xlat
mov
push
imul
or
jmp
xchg
mov
test
jno
shlb
mov
test
aaa
imul
add
iret
inc
adc
mov
xor
nop
and
mov
add
sub
in
mov
mov
scas
sub
inc
sahf
pop
adc
cmpsb
sbb
ret
mov
cmpsl
out
sub
pop
nop
sahf
dec
inc
xchg
pop
pop
lods
mov
dec
push
xor
mov
pusha
pushf
cmp
and
out
mov
sbb
filds
ljmp
loop
cmp
push
cltd
mov
into
dec
fisttps
mov
or
jns
aas
pop
stos
xchg
cmp
lods
mov
test
out
dec
es
push
fsubp
pop
and
jne
adcl
cmp
in
lods
xchg
cmp
push
dec
and
push
mov
aas
adc
rorb
adc
test
adc
aam
pop
xor
lcall
sbb
mov
push
sahf
xchg
push
push
jmp
push
fstps
in
mov
mov
mov
mov
dec
xchg
ret
inc
stos
sub
mov
ret
cmp
inc
ljmp
rorl
aas
int3
cmp
cmc
daa
fcmovne
inc
xorb
aas
shlb
ret
jmp
dec
add
or
jge
jmp
sub
mov
ja
cmpsl
test
out
xor
data16
xor
mov
or
sarb
push
lcall
pop
mov
flds
xchg
std
xlat
jmp
mov
cmp
imul
jl
ficoml
idivl
ss
xor
sub
aam
jmp
pop
lret
xrelease
cwtl
imul
inc
aam
add
mov
and
aad
push
insl
decb
mull
mov
or
hlt
jae
adc
xchg
mov
aam
adc
negl
negl
or
daa
pop
push
xchg
sub
inc
pop
sub
push
or
sti
lods
push
push
push
jmp
pop
push
leave
fisttpl
rcll
mov
inc
mov
jae
sbb
mov
adc
pop
insb
out
push
cmp
xchg
pop
fs
jbe
stc
clc
pop
jecxz
aas
mov
ds
push
dec
or
push
jp
aaa
push
inc
cmpsb
popf
pop
mov
and
jno
inc
incb
int
je
add
lea
addr16
iret
std
pop
xchg
and
aam
dec
daa
pop
or
or
pop
add
push
cltd
and
fists
sbb
loop
out
inc
or
movb
roll
mov
movb
jle
xchg
jbe
test
cld
push
sbb
inc
mov
adc
cs
inc
mov
sbb
out
test
pop
jle
dec
cs
aad
stos
sahf
lcall
add
and
sub
fwait
mov
xchg
and
inc
jl
and
mov
dec
jl
sbb
jge
mov
jmp
std
and
rclb
jge
inc
mov
jnp
daa
xor
jnp
enter
sti
pop
ljmp
dec
jne
mov
ja
pop
add
jp
lods
cld
pop
rcrl
adc
and
xor
jp
aam
mov
dec
out
iret
xchg
enter
mov
mov
inc
daa
out
jg
andb
das
fbstp
fnstenv
les
pop
push
icebp
ret
mov
stos
adc
jno
or
mov
adc
leave
movsb
inc
aam
nop
cmc
outsl
stos
dec
push
adc
sub
pop
xchg
ffreep
jg
sbb
mov
popl
sub
fistpll
sbb
jl
popa
push
xchg
call
loopne
lds
xchg
cs
fcompl
nop
imul
aam
in
adc
jg
cmp
inc
cmpsb
sbbb
loope
or
mov
jg
push
inc
push
ror
sbb
mov
pop
dec
sbb
lret
cmp
xchg
fisttpl
mov
orb
cmpsb
ret
adc
cmpsb
sahf
jmp
loope
in
jnp
mov
push
sbb
xlat
ret
adc
daa
sbb
aas
xchg
out
mov
imul
pop
outsb
dec
repz
xlat
lretw
and
mov
jg
mov
sub
lahf
int3
dec
adc
mov
jmp
xchg
push
ja
pop
xchg
sahf
and
dec
push
icebp
int3
bound
leave
inc
mov
rcrl
aad
js
jecxz
xor
lret
mov
push
imul
mov
nop
mov
dec
out
aas
push
adc
cmp
in
dec
mov
jns
jno
shll
xor
xchg
movsl
adcl
inc
and
les
fbld
xchg
out
push
in
fidivs
rcl
cli
je
push
std
jg
lahf
sbb
stc
jbe
push
cmp
outsl
jmp
lods
lahf
adc
or
sbb
pop
icebp
xlat
xchg
leave
push
cmp
mov
add
inc
out
sbbl
icebp
push
jecxz
out
push
lret
xor
negl
xrelease
imul
mov
dec
rcr
add
js
sub
push
lods
scas
cli
ljmp
popf
sar
addr16
mov
push
push
xchg
andl
cmp
test
push
sbb
lods
in
aad
nop
or
adc
divb
mov
mov
cmp
xlat
add
dec
rcl
jbe
test
out
ror
pop
xlat
gs
pop
dec
sti
jp
loopne
xchg
lods
xchg
inc
inc
fcom
lock
jns
pop
mov
inc
flds
mov
push
test
inc
sub
out
data16
sub
mov
xchg
sbb
dec
aas
pop
xlat
dec
ljmp
rcr
pop
or
inc
int
sub
mov
jg
sub
mov
xchg
sarb
pop
dec
inc
mov
adc
and
rcrl
xchg
cmp
pusha
add
sub
jle
lds
out
jp
cmp
inc
ja
aas
clc
sbb
sbb
xchg
jg
repz
xchg
sbb
pusha
xchg
filds
or
and
push
int
mov
mov
sarl
sub
movl
stc
dec
repnz
or
aas
cli
add
ret
push
roll
scas
fmull
sbbb
subb
scas
and
test
add
xchg
aaa
into
aam
rclb
pop
push
mov
ds
add
cmpsl
push
sbb
loop
ret
call
fmull
ja
mov
scas
adc
roll
sub
daa
add
or
cli
aad
lods
push
ret
jge
in
nop
push
mov
cltd
lds
pop
gs
xchg
arpl
sub
mov
sbb
lds
push
scas
push
insl
mov
xchg
jnp
or
aas
dec
nop
mov
fcmovnu
ror
pop
in
mov
push
sbb
jno
into
int
pop
adc
shrb
lods
aas
repz
jb
mov
sbb
push
test
movsb
xor
ja
movsb
push
rorb
mov
sub
mov
aam
inc
mov
lock
mov
sub
jge
leave
lods
push
mov
sbb
fstpt
lahf
loopne
loope
ljmp
pop
mov
push
inc
sbb
dec
and
sub
imul
testl
fcmovbe
out
xchg
inc
aas
int3
pop
mov
cmp
ja
jnp
push
xchg
sbb
adc
stos
cmp
pop
adc
addr16
rorl
or
or
sub
push
orl
ljmp
sub
inc
sub
jg
nop
pop
into
enter
out
mov
add
mov
gs
clc
push
test
jno
fldt
sti
fwait
jbe
lods
filds
ljmp
mov
nop
aam
jecxz
push
icebp
cld
int3
imul
fwait
mov
pop
or
fildll
and
ret
xor
dec
out
leave
xchg
ret
lea
decl
notb
xchg
sub
hlt
sbb
adc
add
mov
fs
add
sub
xchg
rcr
xchg
mov
xorl
push
sarb
test
imul
inc
mov
rcl
xor
and
mov
xchg
aam
mov
mov
or
pushf
repnz
roll
mov
loope
mov
aad
mov
fs
inc
or
xchg
shll
rolb
fcoml
xchg
add
push
sbb
sub
stos
rol
mov
jne
adc
mov
and
xor
xorb
mov
jo
ret
nop
or
aam
lret
dec
pop
in
shlb
xlat
add
mov
arpl
or
scas
adc
adc
ret
pop
inc
pop
notb
into
xchg
pop
aas
or
jnp
push
shlb
es
jp
cmp
ds
xchg
mov
movsl
adc
aam
xor
pop
jp
lret
rcll
inc
add
push
jp
mov
pop
or
stos
fcmovnbe
inc
nop
notl
sbb
dec
xchg
ljmp
loopne
nop
test
xlat
fimuls
push
jne
repz
in
and
xchg
dec
addr16
into
jns
ret
push
in
jge
cltd
sub
push
mov
mov
pop
sub
pop
roll
inc
loope
pusha
test
outsb
stos
pop
aam
inc
lds
xchg
push
imul
xor
sbb
or
dec
dec
sbb
popf
push
nop
mov
int
sub
lcall
sbb
stos
lcall
out
nop
xchg
imul
push
push
int
stos
aam
fs
mov
push
rol
rorl
add
pop
shlb
sub
inc
dec
push
or
int3
popa
mov
cs
int
rol
fdivrl
inc
aas
push
aaa
imul
cmp
mov
mov
xchg
stos
nop
inc
mov
jns
pop
cmp
popa
aaa
mov
mov
aam
daa
sub
popf
leave
push
pop
jecxz
nop
push
pop
roll
das
imul
mov
sahf
mov
daa
testl
pop
dec
call
stc
push
iret
dec
add
out
pop
adc
idivb
mov
movsl
cmp
push
insl
and
mov
inc
adc
adc
lds
adc
sbb
call
stc
pop
ja
gs
fnstcw
aas
jnp
xchg
imull
std
sub
pushf
xchg
mov
into
out
frstor
xchg
inc
push
int
test
mov
test
imul
pop
stc
mov
popf
cltd
jmp
lds
cmp
sbb
jmp
sub
xor
add
and
sbb
pop
fistpl
pop
ret
add
in
push
scas
outsl
lock
ficoml
push
loope
adc
ss
xchg
mov
rcll
call
dec
mov
stos
mov
in
mov
push
test
inc
jae
dec
dec
std
addb
fmuls
push
bound
jmp
int
push
push
rorb
cld
ja
add
test
jmp
mov
stos
inc
rcll
fdivr
js
rcrb
push
out
sub
dec
mov
sub
test
xor
mov
les
pop
xchg
push
xchg
sbb
pop
or
scas
inc
mov
aam
push
xor
insl
add
scas
sub
fs
stos
lock
xor
repz
pop
dec
cmp
pop
sub
jnp
out
leave
mov
dec
cmpb
xchg
xchg
sub
bound
ret
jle
out
loope
mov
lds
fiadds
outsb
js
push
jmp
das
dec
and
inc
push
mov
adc
push
jmp
cli
push
mov
imull
nop
inc
or
stos
jmp
insl
mov
xchg
mov
xchg
sahf
out
shrl
xor
fidivrl
or
push
xchg
adc
rorb
imul
cmp
mov
and
inc
jp
push
sub
leave
add
and
mov
outsb
aas
mov
or
test
je
xor
scas
jb
add
fmulp
cmp
ret
cmp
or
jo
cld
fdivrl
or
jecxz
lds
add
inc
cmpb
jmp
out
imul
fucomp
push
lret
push
pop
rcll
or
sub
jl
lods
out
stc
movsl
daa
xchg
or
push
dec
cmp
sub
sbbb
cmp
pop
shlb
mov
out
sbb
aam
nop
adc
or
scas
sub
pushl
xor
xor
mov
fldt
dec
insl
or
jecxz
shlb
mov
dec
dec
jp
inc
lret
xchg
mov
or
push
test
out
leave
subl
in
icebp
pop
and
sub
outsb
sub
in
mov
sub
and
test
fmull
out
mov
lret
aam
scas
subb
push
cmp
adc
adc
ret
jae
into
mov
sub
push
outsb
mov
jp
sbb
gs
mov
aaa
xchg
adc
push
jge
repnz
cmpsl
nop
aas
je
and
jbe
jl
push
stos
scas
dec
jg
mov
push
aad
mov
fcmovbe
cmpsb
xchg
and
sbb
jne
xor
cmp
ficompl
xchg
addl
ret
jp
mov
lahf
out
dec
and
push
mov
inc
sub
std
movsb
mov
repz
jmp
add
pop
xchg
lea
test
cli
outsl
xchg
outsb
mov
aad
mov
cmpsl
pop
adcl
mov
push
and
popa
jmp
movlps
mov
mov
dec
stc
test
test
xor
rcrb
shrb
xchg
sahf
sub
stos
pop
sbb
mov
push
sbb
rorb
cmpsb
push
mov
sub
push
pop
mov
daa
call
addr16
mov
inc
xchg
es
or
fcoml
pop
lcall
xlat
adc
mov
pusha
mov
jg
pop
cmp
rorb
mov
jp
dec
mov
dec
mov
out
sub
and
rorb
add
outsb
nop
call
cmp
and
inc
mov
or
push
lods
in
pop
daa
mov
jbe
push
test
iret
rorl
leave
xor
aad
sbb
imul
lcall
fsubrs
pop
mov
movsb
sub
xchg
andl
dec
mov
jae
push
cwtl
sbb
adc
and
push
mov
daa
orb
xchg
jns
inc
fld
sub
fnsave
insb
aad
fnstcw
icebp
push
das
xchg
dec
inc
mov
mov
pop
xor
add
mov
insl
clc
jae
jb
rorl
mov
cmp
addr16
jp
sbb
idivl
mov
sbb
scas
lcall
nop
adc
fsubrl
dec
pop
insl
xchg
iret
adc
fstl
jg
inc
test
jne
and
adc
push
lods
xor
data16
cmc
pop
sbb
std
mov
dec
pop
push
xor
nop
jecxz
aad
and
pop
jl
xchg
iret
jecxz
mov
and
ljmp
add
or
add
lea
dec
gs
repnz
and
dec
xchg
jae
icebp
mov
sub
das
sbbb
lcall
nop
popa
inc
in
pop
jns
xchg
xor
jg
mul
pop
sarl
roll
sbb
xor
out
aad
push
mov
mov
or
cmovo
jmp
jmp
fldenv
addr16
pop
jo
push
mov
ret
arpl
add
push
in
fidivrs
mov
push
lods
mov
out
xor
ret
push
cmp
paddq
mov
jae
xor
jne
pop
lahf
mov
shrl
adcl
aaa
stc
sarb
mov
orl
dec
sub
or
adc
xchg
not
pushf
call
nop
mov
sbb
cmp
popa
cmpsl
cmp
mov
lock
adc
sbb
call
mulb
mov
add
shrl
js
sarl
aad
iret
jo
cltd
nop
push
and
pushf
fdivr
cmpsb
xorl
leave
fldenv
sbb
xor
fists
shll
pop
das
call
sbb
push
sbb
dec
sahf
sbb
inc
adc
add
dec
hlt
int
fisubs
inc
adc
lret
movsb
iret
mov
rorl
inc
jle
cmc
sbb
mov
in
dec
cltd
adc
lahf
aam
xchg
cmp
or
lret
inc
in
jmp
push
daa
xor
pop
iret
js
xchg
ja
xchg
pusha
mull
rol
cmpsb
js
out
test
ret
nop
or
add
imul
out
cmp
xchg
movl
adc
mov
mov
push
sub
dec
jle
dec
pop
dec
mov
fld
inc
hlt
xrelease
out
mov
push
cmp
mov
lea
scas
sbb
push
xchg
sub
push
nop
imul
dec
sti
hlt
ret
mov
fsubrl
imul
inc
out
pushf
cld
ret
leave
ljmp
fs
test
std
fnstcw
in
js
add
scas
jae
inc
jno
aad
repnz
push
mov
shrb
inc
or
mov
inc
sub
and
hlt
xor
push
add
std
call
imul
push
cmpsb
mov
repnz
mov
pop
div
push
mov
push
sbb
ljmp
jl
decb
jnp
sbb
mov
mov
fadd
mov
push
das
push
nop
xor
lds
sbb
xor
jl
dec
cmc
rcr
movsb
add
scas
cld
add
inc
imul
inc
pop
fnstenv
addr16
fldl
cmpsl
or
mov
ret
data16
add
aad
idivb
movl
and
pop
xor
cs
jmp
inc
imul
push
out
xor
scas
jmp
ljmp
outsb
faddl
mov
bnd
cwtl
push
push
xchg
lret
and
es
cld
inc
mov
mov
mov
add
jg
push
mov
cmp
iret
mov
mov
mov
pop
insb
xor
lret
and
imul
push
sbb
dec
dec
add
add
into
xlat
push
xchg
lahf
setnp
push
inc
cld
xor
stos
sub
popf
aaa
and
jge
into
popa
xchg
adc
mov
xchg
lods
and
leave
outsb
mov
jno
cmp
adc
mov
adc
sahf
dec
sub
mov
pop
lahf
or
xchg
xchg
inc
sub
xorb
scas
aaa
lea
stos
mov
push
scas
fsubrl
push
outsb
outsl
lock
mov
mov
repnz
mov
fistl
js
or
int
nop
mov
daa
mov
lahf
mov
call
dec
subb
loopne
int
mov
loop
inc
mov
call
flds
out
xchg
test
je
arpl
outsb
out
pop
data16
mov
dec
sub
aas
dec
or
sub
repz
repz
mov
fnsetpm(287
aam
sub
mov
mov
jne
movsl
out
mov
push
sarl
iret
or
mov
inc
pop
outsb
xor
aas
push
pop
out
add
fisubrs
aad
rolb
push
in
or
arpl
pop
pop
lcall
xor
push
nop
or
les
cli
mov
fidivrl
int3
mov
inc
shlb
mov
add
stos
loope
mov
jae
sbb
repz
xor
gs
jecxz
in
aas
push
nop
insl
jno
pushl
pushl
outsb
jecxz
lods
js
adc
inc
cld
add
imul
mov
xchg
and
inc
adc
mov
ret
adc
popf
xchg
in
into
xchg
in
addr16
jmp
mov
add
xchg
nop
pushf
pop
repz
jg
sbb
pop
mov
jbe
pusha
fldl
adc
xlat
call
lds
fdivl
sub
sub
je
bound
leave
insl
pop
push
mov
jnp
xlat
jne
popf
mov
fnstcw
xchg
lcall
or
cmp
je
mov
lret
out
push
not
mov
sub
dec
arpl
data16
or
mov
mov
jnp
nop
test
mov
decl
ss
xor
and
iret
push
pop
out
aas
fcomps
or
push
loopne
fwait
in
jp
nop
lret
xor
insl
xchg
out
cmc
testb
ljmp
pop
xchg
faddp
xor
daa
mov
enter
es
inc
aad
push
cwtl
xchg
cmpsb
inc
xchg
lods
inc
adc
fmull
xchg
inc
in
xlat
xchg
adc
sbb
fstps
imull
inc
pop
jmp
or
outsl
sub
sahf
xchg
push
sti
xor
xorl
loopne
mov
or
push
pop
nop
xor
xchg
aam
mov
ljmp
xchg
scas
jp
dec
hlt
lock
lahf
mov
adc
data16
add
dec
movsl
jle
xchg
sub
xor
adc
xchg
push
sahf
jg
fldcw
push
sbb
mov
fsts
jge
ljmp
stos
or
sbb
cld
pop
mov
xchg
out
fs
xchg
jl
jae
addb
mov
jl
fs
xchg
mov
loope
stos
xchg
xchg
lods
das
pop
sbb
fwait
mov
addb
shlb
nop
sahf
stc
sub
mov
mov
test
mov
push
push
adc
jp
jno
sbb
push
aaa
daa
ss
mov
int3
in
inc
or
mov
adc
xor
rcrl
and
sti
mov
mov
js
in
and
inc
add
outsb
add
xchg
mov
xchg
ja
in
insb
rolb
shlb
fwait
stos
in
daa
test
mov
jae
push
jecxz
lahf
out
add
lods
mov
in
sub
pop
push
mull
adc
lea
jbe
jp
jno
movsl
dec
or
into
xor
add
lods
cltd
push
cld
pop
mov
in
mov
pusha
mov
sbb
repnz
call
adcb
jae
xchg
aaa
insb
ret
jo
lods
sahf
mov
insl
mov
push
mov
jns
or
or
enter
sub
es
xchg
jg
mov
dec
sahf
enter
nop
gs
icebp
sahf
fdiv
ljmp
lea
mov
lds
ss
ja
lods
je
mull
scas
xchg
xor
mov
lds
shrb
in
mov
fidivl
cmp
dec
aam
xchg
movsb
outsb
aam
cld
into
and
sub
dec
inc
dec
loope
repnz
mov
mov
sbb
xchg
cld
and
scas
mov
mov
or
scas
xchg
pop
mov
lret
ficoml
xchg
stos
lcall
push
xor
pop
mov
jle
xor
sbb
mov
or
xor
sub
test
jo
test
dec
sub
adc
movsb
inc
daa
shr
xchg
mov
pop
and
lahf
mov
shlb
lret
popa
gs
das
xor
les
xchg
push
ficoms
mov
xchg
sahf
mov
lods
repnz
and
stos
jne
ret
cmp
mov
push
out
pop
dec
jne
dec
scas
ror
adc
sub
pop
out
adc
jbe
shrl
ss
inc
pop
testb
lret
fsubrs
cmp
fsubl
mull
stc
aad
int
repz
mov
in
int
pop
push
jle
mov
mov
mov
imul
mov
cli
add
adc
mov
push
gs
jne
or
xor
shll
popf
dec
stc
iret
push
dec
push
mov
jl
add
add
jae
add
push
ficomps
mov
pop
dec
and
icebp
push
cmp
out
dec
icebp
adcb
ret
jnp
xor
mov
xlat
xchg
ficoml
lods
dec
nop
sbb
jns
cmc
mov
ret
inc
gs
push
aad
dec
push
and
ret
cltd
jnp
jo
jbe
cmpb
pop
push
cmc
mov
arpl
inc
fnstcw
out
or
mov
push
addr16
fwait
lcall
inc
es
movsb
nop
inc
mov
and
inc
shl
pmulhuw
sbb
inc
roll
test
daa
mov
aam
add
shrl
jge
mov
andl
xor
lods
js
les
test
mov
xchg
stos
xor
xchg
mulb
inc
cli
pop
test
jecxz
inc
jo
mov
cwtl
inc
jne
mov
pop
mov
lahf
add
push
jmp
jbe
aaa
leave
xlat
jmp
std
ss
cmp
ja
push
xlat
mov
or
stos
fs
xlat
sub
cmc
call
mov
call
or
or
cmc
jnp
icebp
mov
cmpsb
dec
outsl
push
cmp
add
arpl
push
scas
jmp
lock
xlat
xchg
jae
pop
sub
inc
ret
aam
hlt
sub
push
out
cs
dec
loop
shrl
fs
fwait
in
push
xchg
lret
in
xor
pop
xlat
icebp
xchg
popf
inc
test
xchg
rcrl
xlat
dec
popa
and
xchg
int
lahf
add
push
add
rcrb
fiaddl
or
fsubrs
and
sahf
mov
icebp
xchg
xlat
sbb
out
sub
mov
sbb
cmp
mov
dec
adc
fiaddl
push
scas
mov
rol
ljmp
ljmp
or
and
xchg
xlat
or
outsb
cltd
pop
inc
xlat
mov
jno
mov
test
push
mov
jge
mov
xlat
pop
stos
gs
and
add
cld
adc
pop
or
push
xchg
sbb
pop
loopne
pop
bound
mov
cmc
inc
xchg
adc
cld
jb
mov
xlat
and
xchg
lret
mov
pop
addr16
outsb
int
xlat
pop
xchg
sbb
jns
mov
lret
cmp
sbb
pop
xlat
xchg
add
push
shrl
in
div
je
hlt
sahf
aad
jns,pn
faddl
lock
jle
push
sub
rcrl
hlt
xlat
out
movsl
dec
lock
sbb
xchg
sahf
ror
cmp
sub
repnz
adc
push
jecxz
aas
fiadds
shll
xchg
pop
cld
das
inc
mov
ja
cwtl
inc
inc
dec
nop
sahf
add
inc
pop
xor
jnp
sbb
cmp
aaa
sub
in
jo
xchg
cmpsb
pop
dec
int3
nop
push
hlt
jns
dec
jne
outsb
pop
xor
mov
adc
mov
and
mov
sbb
mov
push
lahf
nop
sarl
push
mov
inc
addr16
aas
popa
adc
jne
test
cmp
orb
mov
jbe
cmpsl
mov
insb
daa
jb
and
int
xor
jl
imul
inc
cmpl
add
or
sub
pop
ret
dec
jmp
add
jne
aas
mov
mov
fdivs
insb
mov
lahf
and
cltd
scas
int3
ss
inc
adc
fcoml
call
testl
jae
testl
out
fdivr
mov
inc
push
push
push
ret
mul
in
rorl
testb
mov
call
mov
sub
dec
loope
sbb
push
pop
or
ljmp
mov
notb
dec
sbb
sbb
ror
or
aam
or
jecxz
int
sub
or
jl
fmull
xor
xor
xchg
adc
push
shl
add
stc
call
iret
mov
xchg
add
sbb
adc
mov
or
outsl
into
jl
mov
aaa
xor
jne
xor
imul
test
aaa
adc
add
fcom
xchg
jnp
sub
add
fisttps
fsubrl
mov
xchg
mov
pop
add
add
sarb
ficoms
ret
testb
fistpll
sbb
pushf
jle
aad
test
and
pop
adc
mov
mov
push
dec
sarb
xlat
sarl
movsb
jmp
jl
add
cmp
xlat
xor
lea
ficoms
in
and
rolb
xlat
xchg
inc
pop
inc
jns
or
ret
jecxz
adc
sbb
pop
dec
test
cltd
iret
cmp
lds
or
mov
inc
mov
sarb
gs
xorb
cmpsb
into
xlat
test
dec
or
inc
xlat
inc
cmp
lea
xlat
add
mov
out
add
scas
xlat
dec
ljmp
jmp
fadds
jg
int3
push
nop
cmpsb
xlat
cld
jae
mov
push
sbb
xlat
sub
push
cmp
test
ljmp
mov
out
arpl
or
mov
adc
sti
rcl
inc
dec
and
fdivl
aaa
movsl
mov
sbb
mov
pop
int
rorl
cmp
mov
add
inc
call
lret
push
or
jne
xchg
orl
mov
xor
inc
into
aad
mov
xchg
js
mov
cmpsb
mov
ja
cs
les
jle
xor
xchg
push
insb
mov
pop
or
push
pop
rclb
xchg
subl
mov
lret
push
mov
faddp
lahf
rorl
dec
subl
aad
loopne
mov
lcall
pop
sub
adc
notb
and
cmpl
scas
gs
lahf
xor
push
pop
lcall
cltd
imul
adc
ret
xchg
mov
adc
loopne
inc
call
pop
xchg
mov
add
insl
and
mov
mov
les
sbb
jp
icebp
repnz
scas
sub
ljmp
xor
in
lret
nop
or
aam
loopne
jne
mov
xor
dec
mov
push
pop
mov
ljmp
rorl
jge
fnstenv
push
sub
mov
scas
in
test
nop
into
int3
lcall
fimuls
mov
fsubs
add
add
inc
push
dec
aam
imul
jo
inc
push
cmpb
subb
xchg
loop
ljmp
push
in
xor
push
sbb
es
movsl
out
sbb
pop
and
jmp
movb
or
iret
push
xchg
add
rorl
fildl
out
aaa
adc
sbb
aad
push
insb
roll
popa
daa
or
xlat
rorl
inc
mov
stos
add
jecxz
das
and
pop
push
xlat
lcall
int3
adc
add
xlat
out
xor
xchg
pop
es
xchg
adc
in
mov
add
mov
clc
imul
js
adc
outsl
mov
out
inc
enter
push
xlat
test
mov
jge
leave
add
movl
cmc
mov
xlat
push
outsb
iret
cld
subb
sbb
cwtl
xlat
mov
jns
fistps
dec
sarb
movsb
mov
arpl
jno
testl
mov
lock
mov
mov
xor
or
xchg
in
mov
pushf
adc
pop
mov
pop
les
jo
push
lods
jge
aam
jg
push
in
bound
pop
mov
dec
xor
pop
rclb
inc
ja
add
ja
mov
je
nop
cwtl
jnp
stos
jle
stc
lods
sti
setnp
mov
js
hlt
cmp
imul
pop
sub
sti
dec
or
mov
test
bound
cmp
and
cmpsl
inc
rcl
xchg
test
push
xor
nop
faddl
jo
sbb
mov
mov
inc
push
cmp
pop
jns
fs
adc
cmp
ljmp
mov
outsl
jae
in
add
add
xchg
mov
push
orb
pop
and
mov
sub
paddusb
repz
pop
inc
mov
push
nop
xchg
jo
aaa
xor
jg
mov
sbb
inc
dec
jns
adc
fldenv
mov
ljmp
adc
divb
jg
adc
loop
sahf
dec
lea
and
ficoml
sub
push
mov
data16
nop
ss
pop
inc
mov
in
xchg
mov
ja
xchg
and
push
stos
imul
fldcw
mov
adc
inc
mov
bound
sahf
mov
pushf
adc
mov
repz
sub
or
cmp
cmc
mov
das
fnstcw
cmp
xchg
sub
jnp
lea
test
into
les
fiadds
cmp
xor
sbb
xchg
movb
gs
out
outsl
out
xlat
pop
mov
cmp
mov
mov
mov
mov
xlat
cltd
inc
jne
cmp
lds
mov
out
test
adc
mov
pop
sub
mov
pop
sbb
mov
xlat
je
mov
xchg
sahf
fimuls
adc
aad
push
out
push
jbe
mov
push
movmskps
ficompl
or
js
fcom
add
es
or
cmovb
sub
adc
push
mov
mov
ret
pop
fdivrp
inc
push
aad
mov
scas
lods
xor
pop
in
ljmp
jb
mov
mov
dec
push
inc
shll
lret
pop
dec
xchg
lock
pop
cmp
pop
shrb
bound
jecxz
jae
add
or
sbb
arpl
iret
shrb
or
shll
cmp
outsb
test
lret
sub
xlat
cli
jge
jae
fsubs
stc
dec
sbb
push
ret
shrl
lds
sbb
sahf
lock
orb
pusha
xlat
xor
pop
ja
push
mov
add
rorb
loopne
fwait
dec
cmpsl
out
call
sbb
icebp
pop
xchg
outsb
rorb
inc
std
inc
xlat
cmpsl
mov
cmp
fwait
mov
sbb
jne
jl
les
sub
stos
xchg
in
add
xchg
call
test
jecxz
out
divl
das
repz
push
adc
jne
ficoml
das
or
pop
push
adc
xor
push
xchg
xor
add
xlat
lret
gs
daa
insl
sahf
push
in
in
mov
jmp
mov
ss
xlat
add
cli
mov
or
sahf
dec
lods
cmpsl
mov
insb
xchg
mov
jnp
insl
pop
adc
cmp
cmpsb
cmpsl
shrb
pop
pusha
push
pop
adc
push
xchg
fcmovnbe
mov
repnz
or
arpl
pop
scas
in
leave
mov
cmc
sbb
jnp
iret
and
daa
jle
pop
test
sbb
int
dec
outsl
mov
mov
popa
pop
sub
and
mov
xor
sub
mov
sahf
sbb
xchg
xchg
imul
subl
jmp
stc
xor
push
lret
xor
add
jmp
jns
push
pop
repnz
test
add
inc
sbb
pmuludq
movsl
push
aaa
sbb
xor
pop
push
and
rcll
push
inc
inc
and
aad
pop
sbb
daa
cmc
or
repnz
loopew
ret
ja
sbb
cmpsl
stos
or
add
pop
mov
cmp
mov
or
insb
mov
push
dec
shll
jns
scas
into
in
sbb
dec
push
jp
stos
and
ret
push
ljmp
mov
bound
mov
imul
pushf
adc
xchg
sub
jg
fistpll
orl
rcl
sbb
xchg
pop
cmc
mov
adc
xchg
sahf
push
ret
add
idivb
mov
iret
pop
repnz
dec
sti
outsb
inc
js
nop
dec
fbld
icebp
jo
add
xchg
mov
clc
mov
scas
mov
nop
adc
fdivl
adc
sbb
push
xchg
ljmp
movsl
insl
test
icebp
shr
cs
cmpsb
mov
and
std
jbe
cwtl
inc
es
jge
ret
inc
sbb
lahf
jnp
orb
sub
pop
and
xor
jecxz
aad
shll
inc
mov
inc
mov
xchg
mov
sub
nop
repz
sahf
jge
fmul
lcall
mov
mov
fcmovu
call
addr16
and
jne
lea
jmp
pop
sbb
mov
xor
rcl
inc
aaa
je
mov
test
xor
mov
sahf
mov
mov
xlat
cltd
icebp
lcall
orb
imul
pushl
loope
push
mov
and
pop
pop
xor
dec
adc
jnp
cmp
cld
imul
mov
in
jno
and
pop
aad
xchg
push
fwait
push
call
xlat
push
out
xchg
leave
or
xlat
cwtl
mov
iret
mov
pop
adc
add
xlat
fs
xchg
add
push
mov
push
sbb
push
xlat
mov
jl
ljmp
inc
mov
data16
repz
testb
jno
inc
cmp
xlat
rcrb
pop
repnz
xchg
push
int
lds
jge
mov
jb
ret
nop
inc
std
stos
and
dec
xchg
js
push
jl
shrb
push
std
inc
lock
push
jnp
fld1
je,pn
adc
cmpsl
ret
icebp
fwait
imul
in
iret
xchg
xor
arpl
adc
outsl
dec
popa
mov
pusha
movsb
push
xlat
jbe
cmc
stos
sbb
sub
movsb
jns
push
dec
nop
ljmp
xor
lea
fadds
push
daa
sub
icebp
cmpsb
mov
cmc
sbb
aas
arpl
ljmp
cli
cld
test
call
adc
inc
cli
out
in
insl
mov
cld
cmp
lret
jg
xchg
mov
jno
roll
mov
dec
jmp
dec
xchg
es
cmp
gs
push
sbb
sub
sbb
out
stos
ror
lcall
pop
xor
add
lret
out
mov
jmp
aas
fcoms
xor
test
nop
xchg
daa
lcall
mov
inc
xchg
mov
jmp
pop
mov
test
push
mov
pop
mov
in
add
aam
xchg
aaa
ja
dec
push
testl
jge
jo
pop
and
lds
lahf
xchg
sbb
je
jno
sub
lds
daa
push
mov
rcll
dec
inc
into
nop
push
pop
mov
and
nop
scas
cmp
or
sub
test
pop
dec
cmp
mov
lea
xchg
rclb
popl
sahf
push
dec
mov
movsl
inc
push
dec
scas
xchg
cli
or
inc
push
and
add
xor
xchg
push
add
pop
mov
int
cld
and
push
jnp
jns
pop
dec
imul
test
test
add
xchg
xchg
pop
or
push
push
add
hlt
aam
shlb
popa
sub
scas
mov
hlt
aam
inc
jno
xchg
sub
insb
ret
sbb
sbb
cmpsl
jl
cmp
int3
sahf
jg
and
push
xchg
ljmp
mov
push
addr16
les
dec
dec
fistl
dec
xlat
xorps
and
aaa
lods
xor
sub
cmp
xlat
dec
and
sub
or
mov
add
rcl
in
test
dec
xlat
cmc
cwtl
inc
cmp
mull
mul
inc
stc
xlat
sbb
pop
or
aaa
sbb
xor
sahf
iret
sarl
int3
lods
jl
mov
cwtl
test
cltd
sbb
clc
inc
xor
xlat
cli
enter
mov
hlt
bound
pop
lock
dec
sub
xlat
dec
cmp
pop
ret
xor
add
add
mov
es
cmc
mov
and
xlat
xor
ret
xor
outsl
xchg
pop
lret
xchg
jno
adc
js
cmp
scas
adc
dec
inc
lods
cltd
daa
pop
mov
jge
inc
xlat
inc
lea
je
pusha
and
adc
popf
mov
adc
push
xlat
scas
popa
icebp
or
mov
test
jecxz
jne
mov
leave
mov
out
xlat
xchg
sub
inc
xlat
aaa
jns
mov
cli
push
xlat
push
jmp
xor
adc
xlat
pop
cwtl
bswap
xchg
int
cmp
jb
popa
jle
out
push
push
mov
in
int3
or
xlat
pop
idiv
and
mov
and
pop
lock
mov
fisubl
push
xor
addr16
mov
fistps
and
iret
shrb
cmp
mov
xchg
jns
xlat
and
rclb
fsts
sub
data16
dec
push
stos
movsl
out
iret
xchg
pushf
inc
stc
fs
mov
mov
xlat
push
sub
frstor
sbb
loope
fsubr
push
sbb
push
ret
aad
pop
pop
push
mov
rcr
imul
sbb
adc
push
push
xchg
lock
jl
push
dec
xchg
fwait
and
and
movsl
xchg
cli
cmpsb
xor
push
jne
out
xlat
daa
fs
into
jbe
mov
test
cmpsb
out
xchg
call
add
sub
fidivl
xlat
movsb
ficoms
inc
std
in
mov
cmpsb
mov
jbe
lea
mov
aas
cmp
rcl
out
add
push
call
ret
in
ljmp
ja
out
xchg
cmp
loopne
shrl
xlat
cmp
imul
in
sbb
push
insl
push
fwait
sti
xlat
or
and
dec
xor
addr16
adc
repnz
xlat
psrad
subl
repnz
cmp
xlat
je
push
adc
jno
mov
roll
pop
or
jl
sahf
push
push
jmp
rcr
cmp
mov
adc
popf
lds
fsts
stos
adc
push
cmp
dec
jo
xchg
insb
pop
loopne
push
mov
fs
dec
jbe
loop
inc
dec
imull
stos
jmp
test
jno
daa
sbb
std
shrl
sub
or
dec
pop
xchg
inc
add
pop
loopne
push
mov
sub
sbb
push
int
xlat
out
jo
add
daa
cmp
xchg
push
ja
test
adc
cmp
pop
rolb
and
and
push
sbb
fbld
sub
cld
loope
out
shll
hlt
xor
insb
fwait
inc
dec
sbb
js
mov
lret
add
jae
out
add
xor
lea
or
fidivl
dec
fsubl
mov
xor
lret
fldl
jmp
mov
iret
inc
into
jnp
addb
fnstenv
outsl
push
pop
sub
movl
sar
enter
cld
jmp
ds
int3
daa
sbb
outsl
shlb
js
sbb
movsl
and
cmp
loope
test
insb
ret
enter
jle
filds
imul
mov
scas
mov
and
idivl
mov
push
stos
jb
sarl
pop
fildll
sub
inc
imul
in
inc
mov
xor
xchg
inc
jg
mov
or
popa
mov
movsl
inc
and
lods
outsb
mov
sub
test
lret
dec
cmpsl
aam
fisubrs
ljmp
sbb
pop
mov
enter
sub
aam
dec
outsb
repz
and
out
xchg
fdivl
lods
addr16
mov
rcr
lahf
bnd
fs
mov
mov
je
inc
jbe
push
sub
cmp
inc
daa
or
jge
cmp
push
push
repnz
xchg
int3
aas
aas
loopne
jmp
pop
imul
cmpsb
sub
lret
push
pop
arpl
pop
pop
sahf
pusha
inc
xchg
xor
call
fwait
xlat
ss
mov
movsl
flds
and
das
leave
nop
test
mov
hlt
add
lds
sbb
neg
or
fsub
jle
test
adc
sbb
or
mov
ja
ss
aam
cld
inc
lret
xchg
pop
xor
xchg
in
les
lds
sub
mov
xchg
dec
mov
int3
mov
scas
pop
inc
cmc
sub
cmp
mov
sub
andl
leave
out
sbb
jo
xor
mov
sub
test
repz
and
jnp
pop
mov
imul
push
mov
mov
cli
push
divl
je
ret
js
mov
enter
nop
ret
inc
nop
jmp
divl
cltd
cmp
loope
pop
or
mov
xor
xor
mov
scas
sub
cmp
jo
cli
rclw
mov
fwait
sub
mov
add
pop
mov
add
inc
test
mov
hlt
cmpsl
sti
leave
xor
push
inc
mov
pop
sub
repnz
aam
xchg
sbb
sbb
mov
and
fcoml
push
mov
movsl
ficoml
sub
push
push
adc
loop
pop
dec
adc
jge
sub
jo
insw
ss
push
cmp
test
repnz
jg
push
divl
mov
repnz
dec
xor
cmp
scas
adc
jns
xlat
push
mov
jge
pop
fcoms
mov
cwtl
adc
jb
jae
lret
inc
push
inc
imul
mov
bound
jp
push
dec
pop
xlat
daa
add
sti
adc
cmp
push
fistl
xlat
xor
xor
mov
push
jl
mov
add
or
pop
dec
int3
xchg
inc
ljmp
shrb
movsl
mov
lea
xor
adc
ret
adc
push
sbb
xlat
popf
test
sub
aam
xlat
mov
or
aad
jne
xor
sbb
xor
sub
mov
mov
and
sub
pop
int3
add
pop
mov
mov
dec
sbb
cltd
pushf
xor
nop
out
loope
pop
rorb
aam
sbb
cmovno
bound
lds
sbb
les
adc
mov
out
lods
xchg
out
jbe
xor
js
xchg
jmp
sar
insb
jmp
mov
jp
aas
pop
inc
cmp
mov
mov
push
ljmp
jmp
mov
lods
adc
fiaddl
hlt
sbb
ficoms
in
pop
mov
cmpb
sub
inc
inc
ljmp
add
incl
adc
inc
ss
adc
out
std
out
xchg
fisttpll
shlb
cmp
clc
xor
inc
roll
or
addr16
mov
lea
in
ret
xor
lea
lcall
mov
mov
addb
movsb
jecxz
push
scas
xchg
nop
push
mov
insb
lret
mov
pop
jecxz
movsl
adc
jno
repnz
movsb
dec
xchg
clc
mov
roll
inc
sarl
mov
xchg
fadds
lea
xor
adc
inc
sbb
inc
add
mov
iret
fidivl
pop
mov
cmp
sbb
fs
or
nop
and
in
sti
push
test
pop
push
in
jno
sub
test
sbb
xchg
in
dec
sbb
inc
mov
ja
xchg
inc
or
xchg
xor
lock
dec
loop
sbb
push
xchg
out
sbb
icebp
pop
and
pop
jg
fnsave
mov
insl
mov
jp
mov
push
xor
mov
and
cmp
dec
fs
pop
mov
fisubl
bnd
xchg
xchg
xor
test
fsubrl
sub
repnz
pop
mov
sub
jge
add
push
mov
and
movsb
mov
ja
arpl
addr16
imul
jno
fnstenv
sub
adc
mov
or
aam
push
ja
movsb
call
dec
stc
xchg
and
insb
pop
aaa
push
push
out
mov
cmpsb
std
in
in
pop
nop
movsl
push
rcll
push
das
stc
adc
jmp
cli
mov
or
andb
sub
shrl
sbb
nop
sbb
adc
stos
bound
adc
mov
lret
jno
ds
repnz
lret
gs
mov
mov
das
sbb
lea
shll
xchg
imul
mov
and
cld
loop
or
push
jbe
jns
jge
mov
shll
cmp
aad
popf
cmc
shlb
mov
arpl
repnz
cmp
aaa
and
mov
lea
arpl
std
jb
lahf
push
mov
fwait
lea
mov
push
pop
addl
std
rorl
rcll
dec
out
sahf
sub
fistpl
inc
mov
add
cmpsl
loop
stc
inc
push
add
push
cmp
sub
dec
or
dec
jg,pn
xchg
cmp
or
and
jae
mov
pop
popf
call
xchg
cmpsl
faddl
movsb
ljmp
loop
push
stos
pop
jg
cltd
add
jae
dec
adc
nop
idivl
and
sub
mov
add
push
mov
jle
repz
sbbb
xlat
jnp
aas
daa
mov
jmp
aam
aad
lods
inc
scas
rcrb
dec
xchg
add
push
cmp
sbb
stos
pop
push
lret
xor
dec
and
inc
dec
test
sbb
adc
movsl
sbb
jbe
xlat
aam
or
add
lcall
out
xor
xlat
sbb
sbbb
jbe
mov
pushf
rolb
stos
xlat
mov
xchg
jae
cmp
inc
xlat
insl
jne
popf
cmpsb
test
mov
arpl
or
adc
outsb
lock
pop
mov
push
cli
add
inc
xor
inc
mov
in
pusha
dec
loop
dec
and
add
xor
or
outsl
stos
adc
out
xlat
outsb
fdivrl
xor
mov
lods
lea
cmp
mov
cmp
outsb
xlat
aam
sbb
or
push
push
jmp
xlat
sahf
scas
movsb
aas
or
inc
leave
push
cmpsb
jns
sbb
add
push
pop
adc
mov
test
push
orl
movsl
mov
sub
shrl
ljmp
cmp
xchg
ja
xlat
fwait
xchg
add
sub
add
repz
jae
pushf
pop
mov
test
adc
loope
sub
arpl
and
out
mov
sar
mov
mov
fisttpl
push
or
out
lds
mov
inc
fs
mov
sbb
das
mov
cmp
mov
adc
loope
push
divps
je
fildl
daa
dec
insb
lea
add
push
icebp
addr16
add
cwtl
cwtl
cmpsl
dec
mov
scas
repnz
fmull
push
nop
jb
add
aas
orl
jne
fisubl
pop
scas
push
out
in
inc
jns
add
insb
dec
pop
in
jbe
cmc
leave
inc
jp
shlb
cmc
fld
nop
lock
sub
fmul
cmp
cmp
loope
push
xor
pop
push
mov
mov
in
add
sbb
js
dec
sub
push
xor
inc
nop
xchg
push
push
lahf
jle
and
adc
add
sbb
rol
adc
adc
sbb
js
into
daa
lcall
xchg
repz
or
fdivrs
ret
mov
push
fdivrl
dec
mov
jmp
das
test
pushl
adc
mov
dec
aas
sbb
ret
fsts
out
jge
mov
pushf
push
repnz
jg
mov
cmp
xchg
stos
lea
repnz
movsl
sbb
in
mov
bndstx
adc
jp
mov
fsts
xor
arpl
cmp
pop
pop
rcll
test
fcoms
sbb
sub
lret
mov
mov
es
neg
xlat
popa
push
imul
jle
lea
fwait
xor
stos
sub
insl
and
push
inc
xchg
nop
sahf
rol
aas
mov
pop
fldenv
hlt
je
js
rclb
mov
fistpll
aas
push
xchg
insb
fs
stos
or
mov
iret
cmp
push
das
inc
xor
cmc
push
mov
fisttpll
nop
les
or
ds
mov
mov
imul
adc
nop
ss
js
fbstp
int3
das
daa
mov
rcrb
adc
or
clc
aad
or
shr
leave
mov
add
sti
xchg
mov
imul
std
testl
push
jge
add
fs
push
inc
scas
pop
lock
fwait
xor
ss
mov
inc
pop
lock
xor
cmc
jne
xchg
mov
and
mov
fadd
mov
mov
insb
cmpsl
inc
nop
lods
push
xorb
jo
mov
fsubrl
mov
jg
rcr
sahf
dec
cmpsb
push
sti
mov
sbb
cmp
and
inc
cli
out
dec
sti
adc
inc
daa
jo
daa
sbb
outsb
fdivrl
dec
adc
xor
mov
or
jnp
shll
jp
inc
test
stos
bound
ret
xor
shlb
sbb
jp
cli
pop
sub
xchg
clc
stc
add
jmp
xchg
mov
push
mov
pop
out
jge
xchg
mov
mov
fcoml
pop
mov
es
xor
sub
cmp
xlat
insb
mov
xchg
cli
xlat
call
outsb
pop
test
inc
sbb
inc
xor
adc
std
into
add
test
fildll
xchg
mov
xor
fnsave
aam
mov
test
fstl
xlat
mov
ror
int3
lods
mov
int
rclb
iret
test
inc
cmp
push
jnp
xlat
sahf
lret
push
sti
aad
adc
xchg
jb
iret
xor
push
pop
sahf
mov
pop
add
cs
sub
dec
out
stos
test
jne
push
inc
push
push
xchg
jmp
or
add
xlat
cmpsl
pop
ss
sbb
jo
pop
push
mov
xlat
aam
stos
pop
jl
mov
xlat
imul
out
dec
inc
shl
pop
pusha
lcall
mov
pop
xor
xlat
movb
data16
test
lea
dec
in
pop
pop
jbe
stos
loope
lahf
stc
in
dec
test
xchg
jg
int
out
sub
jle
or
repnz
loopne
xor
or
ja
mov
adc
sbb
pushf
push
nop
lods
xchg
in
dec
and
sbbl
daa
scas
pop
mov
xor
and
mov
fs
jg
lret
xor
lds
mov
add
lods
aas
xorl
mov
iret
mov
inc
sbb
iret
rcll
fstpt
sbb
mov
fcom
jg
mov
mov
movsl
push
pop
pop
aas
iret
scas
lds
mov
psrad
movsb
push
fidivl
mov
call
fnstsw
xor
jno
mov
xchg
lret
adcl
xor
ljmp
or
rorl
jmp
sbb
out
std
cmp
aad
push
push
push
sbb
mov
jle
rclb
xchg
and
es
repnz
mov
pop
xor
fadds
inc
mov
cmpl
jp
mov
mov
scas
jg
fbld
inc
cmpl
daa
adc
andb
fistl
pop
ret
out
xchg
push
push
xchg
outsb
test
mov
lds
negb
daa
popf
into
test
push
movb
or
push
pop
imul
ret
mov
stos
icebp
fsubl
push
aad
pop
aas
jo
jno
push
test
scas
in
andl
jb
xor
addr16
sub
shrl
fnstcw
mov
adc
push
js
adc
sbb
mov
aam
add
inc
loop
sbb
jbe
sub
add
dec
inc
jecxz
mov
mov
fsubl
adc
fimull
xchg
lret
mov
cmp
out
inc
div
and
int
and
cld
enter
cmc
mov
lret
adc
aas
gs
mov
cmp
lahf
loope
stc
pop
mov
dec
push
pop
cmpsb
mov
pop
jae
cmpsb
xchg
xchg
mov
sbb
mov
mov
leave
push
add
inc
ja
ret
ret
push
fs
pop
jb
inc
jo
pop
dec
pop
out
inc
xchg
adc
cmp
jge
xchg
cwtl
xchg
inc
cmpl
lods
mov
pop
sub
add
or
xor
sub
rcl
bnd
sub
xor
outsb
in
aaa
lods
sub
rcll
mov
and
push
call
loop
jns
pop
xor
sub
mov
mov
sti
push
rclb
push
fidivrl
sbb
mov
imul
clc
mov
movsb
fsin
push
ljmp
ja
jo
mov
xchg
add
inc
movsl
stos
mov
fadd
loop
sub
and
mov
mov
les
hlt
xor
xchg
int3
xor
xchg
stc
push
xchg
mov
ret
loopne
xchg
mov
cmp
cmp
push
es
scas
aad
xchg
jg
mov
popf
or
repz
xchg
pop
lods
pop
dec
sahf
lds
fistps
mov
in
inc
nop
pop
aam
outsb
mov
fmulp
pop
push
mov
mov
mov
jge
les
movsb
dec
sahf
pop
xchg
lret
popa
subl
jmp
mov
ret
rcl
mov
ret
repnz
roll
adc
mov
dec
cld
inc
int
mov
push
nop
mov
or
jnp
pop
jecxz
fwait
addr16
mov
divl
rcll
add
test
test
mov
out
daa
push
ror
mov
aas
adc
dec
cmp
push
aas
add
movsb
pop
cs
mov
push
frstor
sti
cmp
aam
add
inc
pop
jg
and
and
mov
gs
inc
push
ret
jae
add
adc
mov
cli
xchg
mov
jl
jl
out
xor
insl
dec
ja
cli
loope
push
inc
mov
xchg
in
push
repnz
mov
pop
jmp
daa
lret
push
push
in
or
xor
mov
xchg
inc
inc
lds
lahf
daa
mov
push
aas
daa
hlt
nop
mov
dec
add
sbb
add
dec
enter
and
int3
mov
adc
outsl
fcoml
scas
daa
mov
pop
rcrb
vmwrite
dec
daa
std
jo
xchg
push
shll
aad
in
iret
push
dec
ss
add
ljmp
xor
xorb
icebp
repnz
mov
sbb
jl
in
dec
fldenv
stc
xchg
add
cmpsb
imul
push
or
ret
mov
dec
aaa
ss
inc
mov
and
dec
call
pop
lods
sub
outsb
push
imul
jmp
mov
jb
pop
jno
and
xchg
push
mov
pushl
sbb
sbb
or
into
jmp
shlb
ds
xchg
js
mov
jg
rcll
xchg
mov
incb
mov
loopne
mov
xor
rcrb
xchg
mov
or
lret
stc
lds
sub
xor
add
aas
aam
test
loope
dec
mov
cmp
hlt
ljmp
gs
aas
outsb
aaa
out
inc
fdivrl
xchg
inc
nop
daa
arpl
ret
mov
mov
lcall
adc
call
mov
xchg
and
xor
out
inc
push
mov
push
jnp
dec
lcall
popf
aad
and
pop
aad
sub
fnsave
xor
cmp
mov
or
push
xchg
inc
add
pop
in
sbb
jmp
lcall
cltd
sbb
lock
mov
into
scas
testl
push
sbb
pop
sub
outsl
roll
stos
push
inc
mov
xchg
push
out
ss
in
lea
pop
aad
ds
and
mov
fiaddl
loope
push
or
and
and
in
xor
imul
repz
mov
inc
xorb
xchg
dec
not
popa
sbb
jne
dec
mov
cmc
or
je
sbb
out
mov
daa
or
inc
jg
xchg
mov
sahf
xlat
cli
insb
stos
sbb
adc
cmpsb
sub
sub
push
pop
sub
into
add
rcr
or
sarl
xchg
xchg
rcl
push
bound
je
test
hlt
jae
inc
loope
clc
pop
fisubrl
mov
xlat
popf
out
rorl
xlat
insl
repz
out
xlat
aas
iretw
lods
xor
lock
xlat
lds
in
mov
repz
xlat
popa
jmp
aad
mov
dec
and
push
sbb
sub
arpl
xlat
repnz
dec
and
mov
push
std
xchg
scas
lret
jns
es
scas
mov
or
mov
lret
in
sub
push
mov
fs
lahf
sub
dec
jge
xorb
leave
jmp
push
cmp
add
in
cmp
jns
es
repnz
adc
in
int
mov
add
push
push
xor
adc
out
pop
xor
in
mov
fwait
cmp
sbb
movsl
scas
cmp
mov
jnp
pop
insl
sub
adc
popf
mov
jne
sti
cmp
ja
rclb
xchg
sub
rorl
push
pop
jmp
pop
in
lods
fdivl
test
pop
push
sbb
dec
loop
sub
xor
rorl
sbb
out
loopne
mov
lods
bnd
adc
mov
mov
jo
std
movsl
lcall
ret
sahf
scas
xchg
outsl
fstp
cmc
jne
icebp
aam
ljmp
inc
xor
negb
or
mov
push
repz
xchg
xchg
adc
popl
mov
out
cltd
jo
nop
inc
jecxz
sbb
sub
cltd
aas
loop
fists
xchg
and
xchg
leave
ja
aaa
and
movsb
dec
in
rcll
inc
aad
adc
cmpb
fwait
hlt
add
pop
lock
lods
pop
sarl
and
iret
push
push
jge
insb
loop
push
sub
pop
xor
stos
stos
cmp
aas
mov
adc
je
or
mov
jmp
xchg
dec
jmp
pusha
jae
ljmp
push
sbbb
mov
les
fsubrl
clc
incb
pop
push
outsb
xchg
xor
adc
cmp
stc
fcoml
push
sbb
inc
fimull
bound
sub
mov
and
pop
cmc
inc
and
out
les
push
sbb
js
cmp
mov
in
lods
ja
inc
imul
jnp
js
cwtl
mov
pop
cmp
sbb
test
scas
orb
nop
shlb
insb
lret
push
add
push
cmp
clc
int
jge
lahf
and
lods
enter
ss
test
jnp
gs
movsb
mov
xorb
into
add
cmp
and
inc
mov
mov
out
sbb
les
pop
dec
out
sub
cmp
aas
jne
fnstcw
lds
adc
data16
stos
pop
lea
inc
push
jnp
fnsave
gs
xchg
mov
cld
daa
fisubrs
and
sub
loopne
ja
inc
les
clc
ffreep
dec
push
push
loopne
xchg
outsb
push
repnz
mov
bswap
gs
push
sbb
aaa
lock
daa
nop
push
sub
pop
and
xchg
xchg
shll
adcb
nop
jmp
jle
fdivr
fcoml
outsb
push
sub
xor
mov
in
dec
or
rolb
loope
es
jg
movsl
jge
lea
xor
push
iret
fildl
xchg
mov
dec
rol
out
je
lods
rol
sub
inc
push
pop
pop
xlat
out
shll
test
mov
mov
pop
jmp
insl
out
adc
push
leave
fwait
xchg
adc
and
out
add
daa
add
mov
jo
lret
xchg
nop
in
xchg
lret
xchg
in
test
aam
push
cmc
bnd
outsl
ret
cmp
push
popf
push
inc
mov
fmull
jecxz
mov
aam
movb
arpl
mov
inc
pop
inc
mov
push
fsubl
push
xchg
sub
popf
lds
mov
mov
or
adcb
mov
stos
add
pop
das
es
pop
dec
and
mov
mov
push
addr16
mov
cmp
mov
bound
decl
adc
xlat
mov
popa
xchg
je
dec
and
sarb
xchg
data16
pop
inc
sbb
daa
xchg
xor
mov
mov
clc
cs
bound
mov
scas
add
rclb
xchg
mov
mov
cld
in
cmpsl
cmp
out
pop
and
cmp
push
cmpsl
jnp
add
das
nop
les
test
pop
xchg
jmp
sti
sbb
sub
inc
popf
adc
in
call
iret
insl
mov
ja
adc
mov
hlt
push
call
mov
push
les
inc
jp
inc
add
push
iret
imul
insl
fs
std
inc
sar
mov
mov
outsl
test
lret
mov
or
pop
iret
outsl
add
mov
mov
or
mov
xchg
pop
sub
push
ficoms
fs
or
xchg
xchg
fnstsw
mov
cmp
inc
push
and
cli
inc
mov
mov
test
test
mov
test
fdivl
rcrb
jae
jp
push
fwait
adc
int
mov
out
sbb
push
push
or
cmp
xlat
xchg
sahf
in
incl
xor
leave
xchg
outsl
jne
mov
cmovae
vmulsd
cld
insl
cmpb
mov
xlat
rcrb
or
test
aas
mov
daa
sbb
cmp
xor
xchg
jp
xlat
stc
cltd
cwtl
fwait
out
push
addr16
shll
xlat
test
sub
cli
and
inc
cmp
out
xchg
adc
rorl
lds
sarb
push
sub
mov
out
add
cwtl
iret
mov
dec
inc
repz
stc
stos
js
out
test
gs
mov
out
nop
push
pushf
lds
pop
jnp
std
or
fiadds
aad
stos
in
repnz
jmp
aad
xchg
gs
adc
mov
xchg
lret
imul
test
in
mov
jmp
cmp
mov
cld
inc
rorb
leave
mov
aad
mov
sub
push
pop
mov
mov
std
bound
push
sahf
inc
les
mov
xor
sti
adc
pop
jp
jge
pusha
jae
and
test
push
mov
inc
jmp
shrb
adc
cmp
mov
mov
and
daa
xchg
adc
pusha
adc
xchg
pusha
lds
shll
mov
mov
mov
es
mov
cmpsl
xchg
mov
pop
mov
mov
xlat
push
add
pop
sti
test
xchg
and
outsb
add
mov
and
lret
push
inc
lret
or
push
xor
dec
popa
sbb
lahf
jp
sub
dec
rorl
and
xor
jb
pusha
sub
add
neg
xchg
ss
jge
fisttpll
fwait
sbb
xchg
mov
loop
add
pop
xlat
iret
mov
scas
jge
or
pop
and
jle
sbb
in
xlat
jl
inc
les
mov
or
int3
pop
inc
jle
xchg
aad
jo
jmp
pop
jb
push
test
sbb
out
rcll
aad
push
sub
jecxz
adc
dec
aaa
test
xlat
push
shrl
xlat
xchg
mov
pop
or
dec
push
pop
rcll
ret
mov
fcoml
movsb
insb
scas
jmp
jbe
xor
std
xlat
push
jo
inc
cmp
push
lcall
xchg
add
mov
sub
xlat
ret
and
xor
ljmp
mov
test
bnd
or
adc
and
dec
jb
adc
xlat
push
enter
frstor
mov
inc
add
push
aad
or
arpl
in
repnz
mov
jmp
cwtl
inc
shr
pop
popf
or
push
rcl
xchg
imul
out
cmp
pushl
mov
jl
test
xor
jl
sub
scas
xchg
jle
pop
xor
test
scas
nop
mov
adc
mov
push
jg
shll
jg
adc
jns
mov
and
nop
sbb
scas
and
loop
xchg
mov
push
mov
ret
fisttps
pop
aad
cwtl
ss
ja
scas
dec
jnp
mov
sbb
mov
lock
outsl
xchg
ret
pop
push
shr
gs
and
mov
lock
stos
aam
pop
fmul
imull
mov
xor
xchg
push
cmpsl
inc
jle
xchg
jp
pop
xchg
iret
imul
jle
lcall
bound
outsl
add
xchg
xchg
push
xchg
jne
addb
lahf
xor
xor
sti
imul
inc
pop
add
lds
sarb
imul
jle
sub
jp
sahf
sub
jns
jg
cmp
push
movsb
jp
aas
stos
pop
aad
jecxz
push
dec
push
in
push
out
enter
add
sbb
out
testl
sti
inc
es
loopne
xchg
orl
popf
or
add
inc
xlat
test
icebp
sbb
sarb
out
xlat
in
aad
stos
mov
clc
xlat
xor
xor
adc
call
mov
test
xchg
push
stos
jl
stos
es
dec
jle
and
mov
test
push
cmp
int3
jmp
xlat
stc
xchg
ret
ds
loope
add
fmulp
mov
sub
pop
icebp
mov
push
imul
jmp
push
mov
add
enter
push
aam
lret
outsl
xlat
insb
jne
mov
and
dec
std
xchg
mov
cmp
aad
pop
mov
push
lret
xor
mov
ror
push
dec
out
std
xlat
pop
shrl
push
sbb
das
std
mov
xlat
sbb
fidivs
pop
add
mov
rcll
xor
test
xlat
addr16
dec
inc
add
repz
xlat
adc
loop
mov
lcall
pop
sub
jnp
or
or
sbb
ret
daa
es
fxch
mov
ds
adc
sbbb
or
icebp
xlat
in
subb
push
jae
loop
ja
std
xchg
push
cwtl
addr16
mull
push
pop
iret
dec
in
lods
lea
jnp
pushf
pop
jns
test
sahf
xlat
cmpsb
lods
imulb
xlat
cmp
xor
sub
xorb
or
idivl
or
rcll
lcall
ret
pop
jae
jl
aam
xor
roll
stos
jbe
imul
dec
clc
cs
leave
ds
pop
outsl
shll
in
shlb
xlat
jg
and
xlat
jmp
stos
rolb
add
seto
test
cmp
rorl
int3
dec
mov
gs
shrl
cli
xlat
mov
testl
inc
ret
rclb
push
in
mov
clc
sub
xlat
sub
outsb
scas
jb
loopne
xlat
mov
pop
fs
in
es
fstl
sub
fildll
pop
adc
out
mov
push
push
cmp
mov
iret
push
pop
xlat
insl
sub
mov
shll
pop
and
xlat
lea
adc
push
xlat
loop
sub
ficomps
push
icebp
in
fistpl
mov
in
push
mov
adc
repz
jle
push
sti
xlat
rcrl
mov
mov
push
mov
mov
xlat
lret
mov
xchg
inc
mov
lods
or
add
dec
jle
test
ficompl
xor
inc
xlat
mov
push
mov
lahf
stc
push
xlat
pop
mov
cmp
js
stos
inc
xlat
sub
and
out
jno
out
lahf
pop
sbb
mov
or
dec
icebp
mov
cld
push
scas
xlat
cmp
ljmp
push
lahf
xlat
mov
mov
fdiv
mov
out
ret
int
lods
ror
mov
popa
inc
lahf
push
insl
mov
test
and
jp
sti
stos
imul
and
out
out
sub
pushf
ja
mov
sub
adc
xlat
cmp
pop
int
xor
xlat
sub
mov
lods
pop
aaa
mov
add
xor
popf
add
mov
into
cwtl
inc
nop
and
pop
or
pop
roll
mov
cltd
and
subb
cmpsb
cld
push
popf
push
fninit
xlat
and
loopne
mov
imul
stos
xorb
sub
cmpsb
cmp
xlat
ljmp
and
iret
shlb
sbb
arpl
xlat
rorl
cwtl
add
call
mov
iret
xchg
repnz
pusha
ret
mov
xchg
dec
cmp
lods
fnstenv
push
rol
adc
cmpsl
sbbb
xchg
cwtl
mov
jns
xchg
in
loop
mov
negb
lahf
or
and
mov
xor
dec
mov
xlat
jb
decb
push
mulb
xchg
into
xor
pop
dec
mov
xchg
sub
cmp
cmpl
xchg
mov
add
mov
dec
cld
mov
sbb
rol
call
mov
xlat
fists
pop
xchg
rcrl
cmp
ret
jns
sarb
xchg
shll
cmp
pop
mov
pop
je
sarl
pop
push
sbb
push
ljmp
aas
rcll
pop
jo
xlat
lds
cmp
xlat
lods
mov
fists
mov
inc
xchg
mov
sbb
inc
jl
icebp
jecxz
pop
aam
push
scas
sbb
repz
xlat
jno
cltd
shl
cli
cwtl
out
xchg
mov
rcrl
adc
adc
in
fcmovbe
xor
pop
mov
sbb
mov
and
xlat
dec
jl
int3
sub
jnp
xlat
cmc
jbe
rolb
ja
or
adc
sbb
cmpsb
imul
add
mov
push
xlat
scas
or
ret
inc
clc
subb
sub
mov
dec
test
ljmp
jo
adc
daa
xor
fwait
popa
ret
andb
icebp
adc
inc
in
jae
arpl
repnz
cmp
popa
rorb
push
xlat
add
mov
lret
add
xchg
xor
cwtl
pop
lock
jp
xlat
je
pop
test
mov
pop
pop
push
xlat
mov
add
mov
pop
repz
xlat
mov
rcll
push
mov
xlat
decl
fsts
cld
mov
cltd
add
fbstp
adc
and
xor
rol
pshufw
call
push
iret
cmpsl
cmpsb
push
stc
xlat
movsb
mov
adcl
lods
std
push
push
mov
loope
icebp
test
into
mov
ja
lahf
je
jge
mov
clc
sbb
adc
add
pop
shlb
lods
fisubs
xlat
add
enter
mov
clc
loop
cmp
cli
jmp
jns
lods
mov
lahf
sahf
adc
aam
cs
mov
pop
push
jns
movsb
int3
data16
cltd
out
jge
es
outsb
aad
mov
inc
adc
pop
and
out
fstpl
into
outsb
enter
test
push
jne
dec
test
add
xlat
mov
gs
adc
std
mov
sub
dec
and
mov
xlat
scas
out
xor
lds
jne
icebp
cmp
lahf
loopne,pn
arpl
xor
xor
jle
fcomps
jb
icebp
mov
clc
push
xlat
pop
pusha
repz
adc
subl
aas
push
xor
out
xchg
scas
nop
or
inc
xlat
add
jecxz
andl
adc
das
daa
adc
and
and
aam
sub
push
xchg
loope
xlat
and
fbld
adc
xlat
daa
outsb
fildl
mov
loop
sahf
add
lea
sbb
or
call
aam
mov
or
xchg
lods
xchg
ss
jmp
fs
iret
xlat
dec
add
sub
std
lahf
lods
imul
ror
add
xchg
cmp
cwtl
std
ret
xchg
pop
add
adc
or
inc
sbb
rcrl
mov
xlat
cmp
mov
icebp
in
fst
add
cmp
inc
insb
dec
push
into
xlat
adc
in
xor
adc
xlat
cmpb
sti
and
jg
mov
adc
subb
lods
outsb
jno
lds
int3
loop
inc
loopne
or
in
adcl
and
fnstsw
xlat
sbb
or
and
sti
stos
xlat
mov
cmpl
xlat
test
addr16
nop
leave
add
xor
add
adcb
imul
adc
cmp
mov
xchg
inc
rcr
popf
int3
dec
mov
and
sbb
js
push
fmuls
mov
pop
jmp
xlat
fsubs
xlat
in
test
scas
ret
mov
rcr
xchg
cwtl
mov
testb
adc
repz
mov
std
out
dec
nop
jb
loope
pop
push
scas
cmc
mov
or
adc
orb
cmc
int3
xlat
int
out
fbld
adcl
divb
mov
stos
test
shll
ss
ja
push
pop
cmc
sub
iret
fwait
stos
dec
dec
add
sarl
sbb
aaa
mov
repnz
xor
ljmp
test
add
adc
inc
fmuls
les
push
pop
divb
rcr
push
hlt
out
add
cwtl
mov
rcl
repnz
repnz
int3
push
xchg
add
pop
pop
in
stc
cmp
mov
lret
out
or
or
mov
nop
sahf
push
nop
push
cld
bound
ljmp
jnp
mov
mov
push
pop
je
cmpb
mov
nop
add
push
adc
fstps
add
jp
push
aas
iret
mov
xchg
push
and
xor
pop
fcom
xor
sbb
loopne
sbb
add
push
xchg
pop
lds
imul
push
sub
repz
cmc
loopne
jecxz
popa
shrb
aam
and
mov
jl
int
xchg
imul
inc
cmpsb
repnz
xchg
sbb
and
clc
or
mov
flds
sahf
inc
cmp
xchg
pop
add
sub
jbe
aas
push
test
fdivl
or
or
sbb
mov
aas
add
lahf
xchg
test
push
sub
fcmovnb
mov
add
dec
xchg
dec
and
sahf
add
gs
sub
jae
pop
nop
sub
xlat
pop
cmp
ljmp
lds
in
lahf
mov
arpl
or
inc
xor
jnp
les
ljmp
fcomp
shrb
insl
xchg
lea
rcr
mov
pop
int
and
adc
sbb
xor
pop
lcall
sbb
mov
mov
aas
pop
xor
pop
lea
movsb
fldl
jp
push
dec
stos
pop
fidivl
jne
popf
je
push
sub
inc
orps
leave
imul
nop
imul
xchg
js
inc
sti
sub
mov
adc
cmpsb
cmp
orb
jle
mov
jmp
pusha
xor
out
das
pop
and
and
jae
repz
cld
ficoms
stc
dec
mov
aad
in
les
mov
outsb
daa
sbb
mov
and
aam
out
hlt
and
fidivl
aam
je
jb
in
and
nop
jg
pop
push
mov
and
push
mov
aaa
rclb
in
fdivl
push
clc
andl
push
repnz
cld
movsl
and
jg
push
bound
push
shlb
fcoms
arpl
ss
cwtl
out
or
mov
mov
fdivrl
jge
xchg
adcb
nop
lds
insl
repnz
mov
lcall
inc
push
loope
sub
scas
mov
add
xchg
sbb
mov
and
and
loopne
divl
adc
nop
addr16
adc
and
fcmove
sbb
mov
add
jne
aam
stos
xchg
mov
add
repz
out
xlat
or
push
mov
mov
sarb
ja
jg
ja
nop
or
add
adc
jp
les
call
fimull
test
cmpsl
adc
imul
sahf
push
clc
mov
shll
imul
inc
rcrb
lock
aad
xchg
mov
xchg
xchg
inc
sub
jmp
mov
push
dec
adc
es
loopne
sbb
xor
sbb
cld
and
and
inc
sbb
inc
in
dec
rcr
push
sub
mov
imul
adc
xor
jne
pop
fadds
fdivrs
mov
ja
bound
lcall
push
push
loopne
iret
test
cmp
aad
shr
hlt
into
inc
loope
mov
out
jmp
sahf
push
sbb
xor
sub
dec
pop
pop
sub
adc
jmp
movb
push
sub
jb
mov
mov
je
fmull
xor
mov
push
mov
cmp
gs
xchg
inc
sbb
or
jecxz
mov
adc
popf
pop
xchg
xor
insb
gs
fisubrl
out
mov
nop
xor
cmp
sbb
or
shlb
outsb
mov
lret
xchg
or
push
and
xchg
sbb
jecxz
gs
stc
mov
test
cli
cmpb
popf
gs
mov
in
aas
cmp
jg
gs
xchg
xchg
xor
sar
mov
mov
cmp
add
addr16
mov
xchg
roll
mov
push
jp
pusha
xchg
es
pop
sub
les
pop
sti
sub
add
mov
xorb
ja
dec
scas
lods
mov
jl
xor
push
jnp
sub
sub
ljmp
mov
je
xor
in
mov
xchg
adc
icebp
push
pop
sub
fs
push
outsb
out
inc
jmp
mov
jge
add
ja
jmp
scas
iret
jno
dec
sub
inc
hlt
rcl
fld
shll
repnz
jne
cmp
push
not
xchg
in
and
sahf
ja
or
pusha
inc
xchg
in
outsb
aaa
sub
sahf
iret
out
push
mov
cld
push
repnz
mov
push
rclb
mov
ret
and
jmp
fcmovu
push
in
nop
xchg
pop
nop
or
pop
int3
add
inc
pop
mov
mov
ds
adc
scas
sahf
cs
mov
arpl
cli
fs
pop
sarl
insl
repz
insb
push
mov
cmpsl
push
fisubrl
scas
cmovnp
fsubr
int3
mov
out
arpl
or
cmc
mov
push
sbb
push
loop
fwait
dec
sub
xor
pop
nop
and
jnp
pop
bound
inc
addr16
mov
push
nop
nop
adc
jae
dec
bound
jg
sahf
dec
sub
or
xchg
fs
shlb
icebp
mov
stos
in
negb
jmp
sub
sbb
fsubrl
or
push
xchg
decb
sbb
in
mov
stos
sbb
jne
push
mov
dec
mov
js
pop
lret
stos
scas
jns
and
pop
adc
jmp
bound
subb
mov
sub
add
sti
dec
repz
jo
test
jae
fisubrl
sar
test
jno
nop
scas
push
ffreep
cmp
sbb
adc
inc
repz
jbe
jbe
dec
add
inc
xchg
sbb
shll
add
int
add
mov
cmp
test
sti
int
inc
int3
daa
outsl
sahf
mov
adc
mov
add
inc
adc
push
nop
pop
dec
jmp
inc
or
nop
cld
pop
jb
push
int3
or
outsb
xchg
jne
push
and
inc
cli
clc
in
or
jnp
mov
mov
xchg
mul
dec
pop
in
mov
or
ss
pop
popa
add
mov
mov
add
sbb
rorb
jle
mov
notl
mov
stos
mov
mov
ljmp
int
out
mov
jb
popl
jp
adc
fidivl
jo
mov
daa
stc
lock
popf
enter
mov
cmp
xchg
cmc
cmc
jbe
movsb
sub
jbe
sbb
leave
shrl
int
aad
dec
cmc
inc
iret
icebp
xchg
negb
cmpsl
and
sub
cmp
imul
push
rcr
jno
cld
sub
inc
xor
inc
icebp
fisubrl
fnstenv
push
in
cld
decl
fistl
aam
sub
loope
lret
mov
addl
inc
sbb
add
jns
mov
out
mov
nop
jmp
push
and
xchg
push
or
movsb
test
incb
jp
mov
inc
lahf
aam
jne
popf
ja
mov
movsl
add
sub
negb
fmull
pop
in
pusha
mov
test
dec
push
jne
and
jae
or
in
arpl
out
inc
out
sub
dec
cmp
xchg
sbb
xchg
in
xchg
mov
xor
xchg
cmp
jb
and
cmp
xlat
mov
mov
cmp
test
xchg
scas
xchg
jg
push
pop
mov
sti
adc
and
sub
inc
mov
push
or
addl
adc
daa
xchg
movsl
adc
xor
jecxz
push
pop
test
and
call
int3
and
shr
sbb
push
xchg
lea
mov
inc
cmp
mov
push
mov
lock
lret
out
push
and
bound
call
lcall
insl
jl
and
mov
shrl
dec
xchg
inc
aaa
aad
aam
andl
stos
fs
sti
fbstp
and
xor
and
fnsave
outsl
movsb
mov
repnz
movsl
push
push
es
out
scas
add
fdivrs
cmp
ljmp
into
jecxz
xorb
xlat
pop
xchg
sub
scas
add
adc
push
aam
jecxz
adc
xchg
fmull
fmull
rclb
pop
sub
push
ret
aas
shrl
sbb
loop
jle
lock
cmp
rolb
mov
or
jecxz
shll
leave
rcr
lret
mov
fwait
mov
inc
nop
dec
or
inc
cmp
les
and
cmp
jmp
or
test
xchg
ret
mov
dec
mov
cmp
mov
subb
inc
jae
mul
rcr
dec
pop
shll
ret
or
mov
push
inc
sbb
push
mov
mov
mov
out
out
mov
inc
aaa
outsb
jl
movsb
pop
xchg
jmp
loope
mov
shrl
cmp
cwtl
jnp
fildl
adc
xchg
iret
enter
leave
out
jne
or
int
adcb
scas
push
mov
adcl
shl
cmp
mov
pop
leave
xchg
xor
sub
repnz
jnp
and
cmp
cmp
xchg
xor
in
outsb
iret
xor
jge
shl
movsb
out
mov
push
imul
out
cmp
mov
sub
add
dec
push
ds
stos
xchg
mov
pop
adc
inc
sub
push
pop
xchg
sbbb
jle
sbb
insb
mov
xchg
dec
and
pop
mov
add
jg
test
scas
aam
xor
in
or
jg
push
cmp
sbb
cli
mov
fwait
add
fisttpl
push
arpl
out
in
add
xchg
lret
adcb
push
js
stos
imul
mov
aam
adc
test
and
inc
addl
outsl
imul
lcall
jnp
pop
sub
sbb
leave
jl
xor
cmpsl
adc
int
lea
push
cmp
sbb
ret
mov
sahf
clc
sbb
xchg
scas
xchg
das
push
int
mov
stc
pop
or
push
in
cltd
imul
pop
mov
test
fistpll
insb
xlat
cli
push
mov
scas
add
rcrb
mov
addr16
jae
inc
push
jno
xchg
fisubl
lret
notb
adc
iret
lret
jb
popl
inc
xor
fsts
popa
fildll
aam
loope
mov
jle
sbb
orb
xchg
jg
pushf
iret
aas
sbb
mov
pop
push
in
jle
push
xlat
scas
pushf
movsb
sub
jne
bound
mov
mov
and
xchg
xchg
lcall
ret
fscale
push
xor
mov
xlat
je
xor
dec
scas
icebp
xchg
adc
mov
lds
faddl
shrl
in
mov
sbb
dec
scas
pop
xor
stos
xor
push
push
push
mov
sbb
jle
xchg
cmp
mov
jne
lahf
loope
dec
in
inc
dec
movsl
cmpsb
pop
pop
ja
or
fsts
outsb
add
sar
jp
sarb
mov
cwtl
add
clc
dec
pop
divl
pop
mov
adc
mov
pop
xor
sbb
or
outsb
xchg
add
jmp
call
icebp
ret
lret
insb
cmp
stos
loop
push
repz
pop
ds
adc
adc
mov
dec
push
jg
addr16
in
push
sbb
push
xchg
push
out
add
or
rorb
stos
dec
add
fdivl
divb
mov
das
loope
cli
xchg
pop
stc
stos
xchg
add
mov
les
idivl
push
jg
sbb
lea
call
xchg
xchg
stos
test
or
cmp
xchg
cmp
pop
shrl
push
in
iret
xchg
cli
add
mov
mov
jae
pop
stos
insl
jg
jns
push
xor
aas
cmpxchg
cwtl
data16
aad
cmc
xchg
pop
dec
fldt
pusha
fsubl
popa
xchg
sbb
mov
clc
mov
and
xor
mov
adc
rcr
jno
mov
mov
lahf
adc
pop
test
xlat
cmp
cs
mov
out
jmp
sbb
aaa
fmull
push
jo
int
leave
xlat
push
call
add
shrb
mov
stos
push
cmp
mov
jns
mov
popa
sti
xchg
lea
xlat
jae
lret
push
or
add
fucomp
xchg
addr16
sub
jmp
xlat
pop
jne
inc
movsb
dec
xchg
adc
cmp
cltd
xor
jo
int
dec
xlat
and
jmp
jae
in
xlat
mov
adc
je
shrl
mov
mov
push
pop
pop
sbb
push
aam
rcr
pop
or
cmp
or
std
pop
and
daa
imul
sbb
fsubp
mov
xchg
or
and
aas
ror
mov
xchg
pop
hlt
pop
sahf
repnz
add
popa
cltd
in
fcompl
cmpb
mov
jno
fbld
fdivl
aaa
sarb
xor
push
arpl
mov
pop
lods
sub
inc
out
lcall
jbe
jb
sub
add
add
sbbb
fld
mov
icebp
mov
out
sti
mov
mov
sub
inc
pop
insl
mov
cli
sbbl
imul
dec
dec
rcl
sti
inc
rolb
fwait
out
into
jl
pop
xchg
scas
push
ret
jg
fstl
int3
xchg
nop
lret
jae
hlt
std
jge
sub
mov
cmc
hlt
nop
and
cld
sub
cs
jp
and
movsl
ficomps
inc
mov
push
fildll
lock
enter
pop
mov
ret
sub
inc
iret
int
mov
call
jle
cmp
dec
pop
jnp
add
sub
int3
stc
inc
call
dec
or
nop
mov
jl
xchg
outsl
aam
pushl
cmpsl
dec
sub
xor
inc
test
xchg
repz
dec
mov
fmull
jns
mov
pop
xchg
cmp
gs
bound
fsubl
das
jl
and
adc
adc
loop
das
push
xchg
fdivrs
out
add
js
je
ret
loope
mov
mov
lret
sub
repnz
sub
gs
ljmp
inc
xor
pop
push
hlt
testb
cmp
in
outsb
fwait
std
out
or
jo
in
xchg
shr
xor
mov
stos
push
or
rorl
jecxz
xchg
inc
shrb
mov
jp
ficomps
mov
lock
jnp
and
daa
stos
cmp
out
popa
nop
push
xor
popa
mov
xor
lret
pop
lret
dec
lahf
xor
inc
enter
or
xchg
ds
das
in
leave
sbb
pop
xor
sbb
and
adc
push
negl
aam
incb
outsb
in
pop
ja
ss
jbe
mov
cwtl
cmc
sub
idiv
ret
jb
fmull
push
shl
jmp
adc
adc
arpl
cli
popl
into
and
sbb
push
iret
push
adc
frstor
sti
and
xor
mov
xchg
cmp
out
xor
fs
mov
cwtl
int
inc
inc
out
dec
cmpb
dec
fstl
mov
subb
rorb
inc
ljmp
inc
mov
nop
dec
pushf
divl
jne
dec
lcall
jnp
pop
dec
and
test
mov
add
rcll
scas
mov
xor
or
mov
push
lds
nop
insb
mov
clc
xchg
inc
add
lea
sub
or
push
jecxz
jo
loopne
sti
mov
sahf
jnp
xchg
loop
test
stc
in
aas
jne
test
dec
pusha
enter
aad
xchg
scas
test
push
fs
add
aad
xchg
fmuls
add
mov
lret
sti
jmp
jbe
jge
jmp
nop
dec
sub
mov
ret
or
add
pop
mov
jnp
inc
dec
mulb
cmp
ljmp
pushf
ffreep
mov
negb
icebp
xlat
cs
and
sti
mov
js
stc
faddl
aam
jns
ljmp
fistpl
or
ja
push
mov
and
mov
clc
call
test
daa
dec
test
ret
nop
jecxz
xchg
dec
iret
lods
loop
pop
mov
pusha
mov
and
shrb
notb
jl
adc
cmpsb
mov
sbb
pop
stc
mov
add
and
fsts
adc
sbb
cmp
test
cmp
push
clc
sahf
push
and
neg
mov
stos
fcomps
pusha
inc
es
neg
aam
imul
add
out
dec
flds
jge
cmpsl
aaa
ficoms
lods
out
dec
lahf
addr16
jg
xchg
push
sarb
and
adc
subb
fistl
fwait
jp
sub
pop
pop
repz
shrl
cmp
xor
mov
or
aad
mov
int
mov
xchg
popa
jecxz
sub
mov
inc
in
mul
stos
jne
stos
stos
add
xchg
mov
mov
sub
mov
mov
fxch
cltd
sub
xchg
cmpb
addr16
iret
adc
xor
call
xchg
imul
xor
mov
xchg
mov
mov
cmp
ja
pop
aad
sub
jb
pcmpgtb
int
jle
jb
jnp
push
inc
nop
adc
push
jmp
mov
fisttps
add
mov
and
add
ja
test
sub
or
mov
xor
ret
out
fcos
xchg
or
clc
add
push
outsl
scas
cmp
push
out
loope
sbb
mov
sub
jmp
enter
sub
imul
sub
push
pop
ret
scas
adc
xlat
int3
dec
xchg
mov
imul
and
fwait
inc
ds
cmp
pop
add
mov
scas
xchg
mov
dec
leave
inc
lods
and
out
sub
sbb
out
push
ret
adc
xchg
lods
mov
test
cltd
push
xchg
aam
xchg
push
mov
rcrl
mov
out
mov
sub
lods
mov
xor
clc
jge
xchg
das
cmp
es
jl
pop
adc
push
push
push
xor
or
dec
into
outsb
mov
arpl
lret
imul
js
pushf
insl
mov
push
push
jmp
fldenv
ljmp
ret
add
hlt
lods
inc
js
cmp
lcall
add
sbb
ljmp
cmp
and
pop
and
xchg
mov
pop
mov
and
clc
arpl
lret
ret
sub
dec
es
subb
adc
jne
in
sahf
add
adc
not
mov
int3
mov
nop
sub
lcall
pop
push
nop
mov
jle
pop
mov
adc
cwtl
fcmovnbe
std
mov
cmc
cmp
cmp
hlt
pop
inc
mov
sub
pop
push
jl
pusha
push
adc
xor
ja
cmc
jg
pop
cmp
fcom
mov
pop
sti
bound
push
int3
inc
test
sbb
jp
mov
fsubrl
and
in
jg
dec
nop
sahf
or
sbb
lcall
aas
sbb
mov
cmpsl
pop
faddl
testl
lret
and
or
in
inc
mov
jle
ja
out
lods
ja
push
cmp
sub
mov
jbe
ficoml
mov
inc
idivl
pop
sti
inc
call
sub
push
adc
enter
pop
cmp
jmp
fdivl
out
iret
out
inc
cmp
xor
xlat
jmp
and
mov
icebp
nop
mov
fsubl
inc
and
mov
mov
pusha
ds
subl
inc
jne
adc
cmp
sbb
aam
pop
sbb
icebp
popf
jbe
mov
nop
xchg
sbb
mov
imul
loope
lods
and
pop
movsb
mov
fwait
loop
pop
ret
xchg
lret
push
lods
aaa
jge
pop
push
fs
rcll
fdivrl
push
stc
stc
icebp
outsl
push
mov
in
pop
cmp
jge
push
rcll
int
sub
inc
ljmp
xor
xchg
repnz
and
xor
and
lods
shlb
test
bound
mov
in
or
out
inc
lcall
push
sbb
mov
cld
lcall
orl
or
popf
inc
pop
cmc
and
or
pusha
xchg
nop
in
dec
out
push
int
xchg
mov
sbbl
data16
lret
xchg
les
imul
ja
out
shll
or
sub
rolb
jl
aad
fisubl
sbb
add
dec
or
dec
out
fisubl
loopne
jae
xor
imul
enter
lods
dec
jmp
jne
push
cmp
aam
filds
push
js
cmp
adc
cmpsl
add
jecxz
dec
stos
out
negl
stc
mov
fnstcw
mov
pop
sub
ja
pop
mov
mov
movsb
aad
cs
shl
dec
dec
xchg
aaa
inc
sbbl
mov
cwtl
mov
rol
xorb
mov
or
fstpl
dec
popf
inc
ret
or
mov
les
xchg
fldenv
inc
sti
aam
xor
adc
insb
rcr
or
mov
or
add
dec
push
outsb
add
adc
add
mov
outsl
push
nop
or
push
add
nop
and
lret
sub
sbb
push
fistps
pop
sub
xchg
shlb
dec
out
test
mov
add
fs
repnz
jge
mov
xor
sub
jo
insl
lea
in
add
dec
pop
into
clc
pop
xor
mov
fs
add
lret
mov
jmp
mov
inc
sub
enter
jne
out
xlat
sbb
ja
push
les
ficomps
cli
call
imul
loop
aad
jo
in
xorl
sub
sbb
push
rol
adc
dec
push
mov
mov
shrl
jecxz
dec
fldl
lret
mov
js
std
cmp
ss
fidivrs
pop
mov
adc
in
mov
cmp
pop
js
mov
cld
mov
jp
sbb
out
jnp
add
mov
rcrb
fucomi
inc
or
in
divb
dec
jmp
rorl
jno
nop
xorb
pop
pop
jae
mov
push
xor
nop
inc
call
mov
mov
push
lcall
out
daa
imul
leave
into
push
mov
ja
lahf
int
fbstp
rcll
dec
shll
call
add
dec
insb
gs
lea
push
mov
into
or
xlat
lods
mov
mov
xlat
add
and
sarb
shll
cmp
sbb
mov
pop
stos
ret
into
mov
fdivl
sbb
iret
lock
jno
pop
lea
dec
inc
aad
stos
arpl
xlat
fildl
mov
adc
leave
cmp
mov
in
inc
lock
sbb
push
ljmp
hlt
mov
add
cmp
push
test
pop
div
in
mov
fisubl
scas
pop
mov
inc
pop
shll
shrb
xor
lea
xlat
addr16
cmc
adc
movsb
cli
xlat
loop
fdivs
jo
xlat
movsl
jg
mov
mov
sub
in
sub
rcll
cltd
push
in
adc
mov
rcrl
xchg
pushf
mov
mov
jp
mov
lret
or
pop
in
shl
push
xor
mov
adc
sub
ja
xchg
jbe
xlat
sub
inc
jl
push
int
push
sub
js
jne
jno
aam
ljmp
adc
dec
ja
je
leave
add
in
jns
sub
in
push
out
mov
xchg
inc
aad
or
xlat
mov
sar
jo
xlat
flds
or
shl
jecxz
mov
inc
xlat
mov
pop
ja
lods
daa
lahf
int
cmp
into
out
loopne
adc
xchg
iret
clc
xor
mov
rcr
mov
pusha
or
pop
stos
inc
xor
or
icebp
adc
flds
js
mov
pop
jo
push
mov
xchg
imul
push
push
icebp
ror
mov
or
xchg
lahf
mov
jb
sti
xlat
mov
leave
nop
xlat
jmp
dec
testb
xchg
mov
add
jmp
xlat
and
daa
sbb
sbb
xlat
leave
fimuls
inc
lcall
lahf
mov
and
sub
pop
jo
xlat
iret
xchg
inc
and
fs
mov
jne
xor
sub
cmp
xor
ja
rcrl
and
shlb
lret
mov
stos
fiaddl
int
jge
lahf
xor
add
je
adc
rcrl
inc
call
insb
sub
imulb
dec
jl
cmp
push
scas
mov
add
sub
jle
aam
shll
lcall
xlat
sti
popf
push
out
sbb
in
jno
enter
mov
into
push
neg
push
int3
rorl
mov
movsb
inc
ficompl
mov
clc
xlat
jp
sub
cltd
xor
xlat
testl
gs
jo
cmp
aam
or
xlat
inc
cld
inc
and
lods
ja
xlat
push
xchg
incl
lahf
xor
push
sbb
daa
mov
mov
in
pop
push
fnstcw
push
xlat
xchg
ja
insb
fldt
xchg
lret
fmull
sub
jp
xor
data16
xchg
cwtl
push
das
mov
cmpsb
loop
shrb
js
cmp
or
pop
icebp
rcl
rcll
xlat
sub
loope
imul
and
xlat
jg
mov
and
or
loopne
add
in
in
mov
xlat
mov
and
add
xlat
lret
fstpt
xor
and
cmovns
aad
and
add
in
fdivs
push
xlat
mov
fdivr
rolb
int
push
adc
xlat
cwtl
ret
add
inc
jo
pusha
xlat
repnz
cmpsl
sbb
std
xlat
sbb
rol
xlat
mov
sbb
rorl
stc
inc
int3
xlat
xor
pushf
xor
xlat
data16
rclb
dec
xchg
sub
aad
xlat
cmpsl
out
add
xlat
jne
xor
ja
pop
xlat
cmpsb
sarl
pop
loop
popa
pusha
and
adc
jae
pop
loopne
imul
bound
jo
jne
int
xor
orl
dec
or
push
jmp
sbb
aad
sti
cmp
data16
jo
shll
int
xor
xchg
add
jae
lret
adc
nop
mov
cmpl
outsl
xlat
leave
xchg
jns
test
cld
and
data16
xlat
adc
cmp
repz
cmp
ret
sbb
xchg
sub
mov
rcrl
movsb
mov
xor
cmpsb
adc
sub
push
add
int
movsb
jmp
clc
fwait
mov
adc
imull
mov
push
jg
xorps
push
adc
rol
mov
push
inc
outsb
add
xlat
mov
fildll
push
xchg
mov
cld
xor
outsl
xlat
icebp
push
or
test
out
mov
add
test
rcr
mov
js
xlat
icebp
cmpsb
sub
jecxz
lahf
xchg
inc
xchg
push
push
lcall
ds
in
lahf
repnz
push
inc
add
int
xlat
jge
mov
mov
cmc
mov
xchg
sub
sub
sarl
mov
xlat
aas
icebp
add
jmp
mov
stos
jo
aad
pop
adcl
mov
shlb
mov
out
out
cmc
lods
hlt
xlat
lahf
imul
iret
mov
inc
shlb
mov
xchg
mov
mov
fistl
jle
enter
mov
negb
iret
test
ds
xlat
fiaddl
dec
data16
sbb
mov
fwait
pop
test
cld
or
and
mov
call
jb
xlat
adc
jge
xlat
mov
lods
jp
xlat
out
mov
cmc
mov
faddp
js
xchg
shlb
xlat
fisubl
sbb
popl
or
xchg
aas
loope
js
jl,pt
mov
xchg
xlat
push
mov
push
aas
rorl
inc
xor
int
rcr
gs
xlat
inc
out
sahf
rcrl
sbb
mov
sub
adc
mov
mov
je
inc
and
in
mov
sar
test
loope
dec
rcrb
xlat
mov
mov
push
push
orb
mov
sbb
xchg
sbb
aam
lods
sarl
jae
popf
popa
in
dec
dec
shll
jo
aad
stos
scas
test
mov
sbb
icebp
adc
addr16
popa
cmp
cmp
and
cmp
hlt
aam
xchg
inc
pop
sti
addr16
mov
dec
xchg
add
add
xlat
mov
pop
push
xlat
lahf
xchg
pop
lcall
xchg
aad
mov
test
fs
sbb
sbb
xlat
cmp
jo
xlat
dec
loope
xchg
fcoml
mov
pop
adc
mov
mov
fnstcw
std
pop
jno
pop
scas
das
cmpsl
jae
dec
cld
xlat
ret
nop
fwait
cmovge
xlat
cmp
cmpsb
loopw
in
mov
add
out
rorl
ret
cmpsb
aas
adc
push
xlat
add
jb
mov
xlat
fisubrl
icebp
fisttpll
cmpsl
mov
or
leave
hlt
push
jb
adc
jne
or
sar
push
xlat
adc
push
jmp
xlat
sbb
cli
jo
xor
shll
mov
xlat
xchg
fwait
es
jge
pop
xlat
mov
xchg
insb
mov
xor
adc
popa
pop
cmp
nop
ficomps
jmp
fistpll
xor
dec
pop
cmc
push
lret
aaa
jnp
test
jbe
cmp
sbb
fimull
mov
adc
xor
mov
stc
mov
sbb
jno
lds
push
jg
mov
adc
neg
in
ds
sbb
or
imul
adc
xchg
mov
sub
adc
loope
ja
ljmp
sbb
mov
xor
mov
or
sub
leave
jle
nop
clc
shl
xchg
ljmp
jnp
call
addr16
sahf
mov
sbb
outsb
xchg
repz
or
mov
and
push
nop
add
test
mov
xor
out
sbb
cmp
mov
leave
rcl
pop
inc
rcr
aaa
inc
or
inc
cs
sbbb
andl
adc
pop
jp
out
adc
leave
sbb
out
sbb
dec
lcall
xchg
out
xlat
and
mov
jge
mov
jns
mov
shl
in
jnp
and
nop
add
out
testl
xchg
and
sbb
fldcw
lahf
pusha
and
mov
popa
inc
mov
aaa
out
mov
outsl
pop
xor
jnp
sub
fs
mov
cmp
aam
lea
stc
add
cmpsb
push
ret
fisubs
adc
aas
mov
lds
jecxz
pop
mov
leave
and
fistps
push
imul
jp
xor
adc
leave
ss
fwait
lds
fnstsw
scas
sti
hlt
push
jnp
fmuls
iret
xchg
loop
jecxz
cmp
and
or
or
jmp
add
stos
sub
xchg
enter
mov
jbe
je
and
pop
dec
shl
dec
push
or
jno
jmp
scas
push
or
push
scas
adc
in
into
add
outsb
mov
xchg
pop
mov
test
nop
jecxz
addb
aam
daa
pop
cmp
stos
jbe
rcll
adc
in
fs
loope
notl
fs
dec
imull
lahf
fsubr
pop
mov
fwait
xchg
dec
mov
outsb
mov
fisttpl
and
testw
subb
push
aam
rcl
aam
nop
and
inc
jmp
call
adc
pop
bnd
jo
ja
inc
or
stc
sahf
xchg
add
cld
sub
pop
xchg
xchg
jno
sub
loope
sahf
imul
lret
add
sub
mov
mov
xlat
and
cmp
push
add
jo
je
push
int
shlb
or
push
imul
sub
xchg
pop
fstpl
push
jae
adc
jge
stos
cmpsb
inc
fisttpl
sub
cmpsb
xor
push
push
test
and
push
shll
cld
pop
mov
and
push
test
pop
leave
or
daa
and
sub
in
mull
mov
push
call
mov
js
jge
cmc
out
lods
push
les
into
in
cmpsl
push
sub
neg
je
mov
jg
or
lods
push
test
scas
inc
mov
inc
gs
incb
in
and
pop
lock
dec
ds
cmp
imul
jl
sbb
out
add
pop
fildll
adc
adc
jb
sbb
xchg
sub
loope
int3
mov
mov
icebp
dec
ret
sbb
xchg
and
sarl
and
push
test
push
in
mov
idivb
mov
lret
aad
sti
cmpsb
sbb
rorl
fildl
xchg
mov
bound
nop
xor
insb
out
int
mov
mov
xor
lcall
aam
sbb
inc
xlat
lcallw
js
inc
xchg
pushf
sahf
pusha
pop
ret
in
cmc
fisttpll
mov
xchg
pop
jg
dec
mov
mov
cmp
cmc
cmpsb
clc
adc
cltd
imul
cli
fildll
or
shrb
sub
xorb
add
mov
and
in
data16
jecxz
outsl
subb
mov
int3
sbb
push
mov
fmulp
fstpl
pop
cmpsl
jne
jmp
mov
cmp
cmp
mov
nop
rolb
xor
xchg
mov
loope
xor
and
int
push
rcrl
nop
lahf
ljmp
mov
xchg
push
ljmp
inc
dec
add
add
pop
dec
mov
adc
adc
mov
addr16
shrb
daa
add
cltd
inc
xor
lds
fsubs
inc
push
xchg
push
or
pop
mov
ss
mov
notb
adc
fsubrl
lret
xor
dec
push
jno
push
mov
data16
mov
jb
push
nop
xor
mov
outsl
outsb
jnp
push
mov
mov
jge
pushf
jg
fwait
dec
mov
sub
aaa
int3
mov
mov
add
xor
pop
or
fcoms
nop
xchg
adc
leave
jge
pop
ret
testb
shl
inc
je
jno
pop
ret
jnp
lahf
mov
add
lcall
mov
mov
stos
movsl
push
fsubr
sbb
call
xchg
fwait
aas
push
aas
jp
xor
jg
dec
fdivl
inc
mov
add
xchg
ret
cmp
loop
push
sub
and
sarl
movsl
inc
adc
adc
loop
shrb
test
pop
add
lock
xor
imul
iret
fdivr
mov
clc
pop
mov
xor
pop
rorl
cmp
jge
xchg
jb
mov
inc
sub
test
or
pop
aam
test
mov
pop
mov
aad
ja
fimuls
mov
mov
push
dec
pop
test
pop
xchg
or
xchg
fsts
cmp
sbb
inc
scas
jns
cmc
push
test
inc
mov
shrl
jbe
mov
sti
repz
sahf
jle
out
jl
or
dec
out
inc
aam
jo
ss
popf
int
inc
xor
idivl
cli
mov
add
xchg
mov
inc
jl
leave
push
repz
jne
pop
test
gs
pop
mov
ss
or
dec
push
stos
jmp
inc
sub
fwait
cmp
jno
jnp
adcb
adc
fsubrs
push
jae
fldlg2
or
subb
imul
repnz
pop
stos
cmpsb
pop
pop
fdivrs
in
pop
cmp
nop
push
sbb
mov
sbb
cmc
aad
xchg
test
xchg
out
psubsw
push
sub
shrl
test
mov
inc
pop
sbb
sbb
ret
loope,pn
inc
test
in
inc
pop
inc
je
or
pusha
mov
add
std
xchg
add
lock
nop
mov
sbb
pop
mov
in
loope
loop
sbb
aam
cmp
jnp
iret
adcb
ljmp
xchg
adc
or
inc
pop
ss
xchg
pop
mov
leave
mov
mov
lods
or
sub
dec
xor
ss
add
imul
movsb
arpl
adc
repnz
and
mov
or
push
pop
cltd
enter
mov
les
lahf
mov
icebp
idivb
push
xchg
fistpl
in
jmp
ljmp
repnz
xor
stc
push
ret
pop
int
pop
fsub
subl
mov
push
lods
push
movsb
lret
lods
in
mov
xor
or
jnp
test
inc
cmp
test
ja
xchg
dec
cwtl
mov
xchg
mov
fldl
dec
daa
xchg
shr
leave
or
repz
mov
xor
add
xorb
sub
sbb
jne
push
pop
hlt
pop
andb
out
rorb
sbbl
push
mov
jnp
lret
xchg
mov
xchg
xchg
push
shll
pop
inc
int
mov
push
mov
loope
xchg
push
addr16
int
mov
sbb
nop
pop
insl
in
into
and
inc
int
inc
rcrb
fsubrs
jb
cmpsb
movq
xor
xchg
sbb
dec
adc
mov
pushf
push
and
dec
and
add
add
in
rorb
sbb
rorl
mov
fnsave
icebp
cmp
lahf
dec
mov
mov
push
xor
mov
nop
mov
fs
mov
xchg
mov
push
lret
lods
mov
or
cmpsl
xor
cmc
mov
shlb
xor
mov
repz
xchg
movsb
imul
push
shll
add
xchg
rcrb
int
ss
in
dec
std
push
fwait
dec
imull
inc
mov
xor
ret
xor
movsb
mov
mov
jb
add
iret
test
jle
lcall
pop
and
adcb
fldcw
push
lock
nop
movsl
call
mov
fstpl
cmp
jmp
cmp
pop
dec
insl
ss
push
sbb
jae
mov
lds
mov
sbb
movsl
shrd
aaa
xlat
adc
loopne
nop
shr
mov
mov
adc
xchg
fxch
std
nop
push
sbbb
inc
jb
pushf
nop
mov
mov
sahf
aam
popf
adc
mov
lret
int3
int
jnp
mull
movsl
cmp
dec
xchg
xchg
leave
xorl
test
sbb
mov
sbb
adc
mov
lock
idivl
push
push
cs
sbb
pop
nop
imul
push
push
loopne
aas
bnd
test
push
push
scas
mov
xchg
shr
js
cs
and
xchg
ret
cmp
adc
mov
bound
mov
sbb
pop
xchg
les
repnz
jge
rep
inc
ret
or
fstp
outsl
fistpll
add
jo
jno
ja
loopne
push
out
push
aad
xchg
shll
jns
in
je
mov
pop
add
pop
movl
dec
leave
mov
fbstp
cmp
pop
aam
ja
lret
add
mov
call
stos
mov
cmc
aas
inc
jb
movsb
pushf
cmc
js
mov
scas
clc
sti
movsl
cmpsb
dec
sub
pushf
scas
sti
nop
mov
cmpb
shrl
jg
test
mov
mov
mov
sbb
add
inc
pop
stc
mov
sar
inc
pcmpgtd
sub
mov
push
decl
aas
add
fnstcw
mov
data16
aam
arpl
mov
imul
push
pop
scas
dec
loope
nop
pop
aas
sub
cmpb
xchg
mov
aas
mov
mov
push
nop
mov
pop
ret
xchg
mov
mov
add
xchg
dec
cmpsl
out
push
inc
pop
mov
decl
aam
lahf
xor
jno
mov
push
xchg
mov
cltd
dec
andl
aaa
jl
inc
mov
sbb
dec
mov
scas
loope
fildl
sub
sbb
loope
mov
fldenv
sub
loop
or
xor
xlat
sub
xor
hlt
push
nop
push
jmp
mov
and
fisttpl
aam
mov
xor
aad
dec
rcr
rcrl
add
adc
mov
jl
xchg
lods
xlat
andb
lock
aad
pusha
push
mov
ljmp
ret
popa
in
out
mov
icebp
lcall
mov
sbb
push
push
jne
adc
and
fdivr
xor
lock
mov
mov
icebp
and
mov
lods
mov
testl
shrb
mov
iret
mov
push
es
sbb
mov
stos
mov
sub
push
jno
ficoms
xlat
mov
lods
xlat
out
js
mov
test
das
xchg
test
and
in
mov
add
adc
mov
or
jl
mulb
lahf
lahf
inc
pop
imul
je
xor
in
adc
in
xchg
xlat
cmp
out
fs
dec
pop
hlt
xor
jae
cmc
test
ja
clc
sarl
loope
or
daa
addr16
sbb
lods
rol
inc
xor
insb
hlt
jge
lds
pop
add
jae
sar
sbb
stos
ja
mov
outsl
xlat
std
in
xorl
sub
sbb
push
xlat
mov
and
xlat
or
gs
xlat
dec
jp
out
adc
xchg
push
mov
std
sub
out
and
xlat
imul
mov
bnd
cmp
xor
inc
data16
jne
icebp
ds
shr
sbb
adc
gs
js
inc
xchg
mov
push
push
stc
push
out
or
dec
dec
pop
adc
pop
rcl
xor
iret
push
out
inc
les
rcrl
dec
daa
imul
out
stc
mov
xchg
cld
hlt
clc
subl
jnp
je
inc
gs
push
repnz
lods
repz
and
pushf
aam
dec
sarb
and
mov
js
loope
out
lret
es
mov
ljmp
or
cmp
test
out
xlat
inc
and
cmpsl
loope
loop
in
sub
je
cmp
pop
aaa
rorl
push
jae
lds
das
inc
cmp
pop
xchg
movsb
sub
xor
xchg
fstp
push
jno
roll
jae
jmp
push
call
xchg
inc
imul
iret
mov
xor
push
xor
cmp
mul
mov
lret
add
rclb
test
pop
int3
push
popf
xlat
jp,pt
pop
dec
jno
mov
mov
inc
repz
lahf
push
sarb
push
mov
sti
cmpsb
mov
dec
adc
lahf
xlat
mov
pop
iret
dec
addr16
aas
jge
inc
lcall
xchg
sub
cmp
mov
xorl
jnp
repz
xlat
cmp
mov
pop
inc
fwait
out
xlat
mov
sub
ror
arpl
les
cmp
test
jo
xchg
leave
repnz
inc
sarl
jno
mov
xlat
insl
into
aaa
add
pop
and
jmp
lret
mov
add
loop
fwait
mov
imul
xlat
mov
scas
inc
pop
cmp
ljmp
sarb
dec
dec
and
xlat
adc
fbstp
inc
in
xlat
xchg
sbbb
loop
sbb
clc
jns
ss
adc
or
dec
lcall
stc
cltd
inc
mov
fisttpll
xchg
mov
aad
or
repz
push
popf
dec
iret
scas
je
adc
jbe
inc
adc
xchg
jmp
push
cmp
cwtl
out
xlat
test
xlat
jns
pop
push
add
sbb
sti
and
cmpsl
mov
adc
repnz
repz
mov
rcr
test
ret
lcall
fwait
jg
je
inc
xlat
mov
sub
xchg
push
push
mov
jb
filds
out
mull
aad
das
stos
push
sbb
xlat
jge
push
lea
aas
jae
push
in
cmp
into
rol
jl
test
les
fimuls
ja
mov
inc
sbb
ffree
pop
sub
leave
and
inc
je
xlat
mov
lahf
cmp
xlat
and
aas
sub
push
cmovle
sti
xchg
repnz
sahf
mov
dec
push
ljmp
jne
test
test
rolb
scas
movsb
pop
xlat
sahf
cmpsl
jo
add
push
inc
xchg
mov
mov
xchg
inc
sbbb
mov
pop
cmpb
mov
xlat
rcrl
adc
adc
pop
test
jo
mov
in
push
and
xlat
push
xchg
or
rolb
out
jne
fadds
dec
inc
xlat
addr16
imul
clc
repz
mov
jp
sbb
int
sbb
sub
cmpsb
xlat
cmp
push
adc
repnz
jne
add
sub
sbb
xlat
inc
jns
and
mov
stc
mov
fidivrs
xor
fmul
aaa
aam
push
out
xlat
xor
xor
mov
jge
fxch
xchg
jbe
xlat
sub
sub
pop
pop
xlat
movsl
cli
gs
ss
stc
xlat
mov
fwait
bound
lods
fs
div
jg
mov
and
mov
add
dec
rep
push
jecxz
pop
jmp
xlat
sub
dec
lcall
loop
push
cmp
test
sub
or
test
mov
xor
mov
adc
sbb
pop
loopne
inc
pop
or
mov
push
and
fcmovb
dec
push
loope
xchg
in
or
jg
push
rol
inc
sbb
cmp
clc
jg
ljmp
aam
mov
add
sbb
addr16
dec
sbb
or
mov
jnp
scas
and
xchg
mov
pop
sub
mov
jecxz
sahf
lcall
fcoml
cli
mov
flds
push
nop
cmpsl
xchg
xor
pop
fisubl
pop
aam
jnp
test
jg
pop
pop
and
popa
mov
stos
cmpsl
jne
mov
mov
pop
inc
jnp
push
lock
inc
adc
dec
movq
xor
addb
je
lret
rolb
sub
in
inc
sub
call
xchg
repnz
test
mov
dec
add
jmp
les
xchg
jp
jle
call
int3
mov
imul
cmc
and
mov
les
pop
call
xlat
and
sub
xor
cwtl
sti
sarb
or
pop
pop
jp
mov
sbb
cld
mov
notb
addl
dec
push
mov
imul
mov
dec
push
xchg
pop
lahf
xchg
clc
stos
inc
fwait
inc
cs
mov
pop
cmpsb
mov
rcrb
les
xchg
pusha
mov
or
add
rcll
xchg
cmp
cmp
dec
dec
pop
mov
and
fsts
lret
mov
out
lods
cltd
gs
cmp
arpl
cmp
stos
pop
ja
popa
scas
mov
and
push
push
or
fisttpll
popa
fmull
push
adc
adc
jg
fstps
fisubs
inc
inc
dec
aam
addr16
xchg
push
add
subb
sbb
lods
outsb
mov
mov
cwtl
aaa
push
jmp
xor
xchg
xor
fldt
hlt
sub
stos
pop
cs
push
cli
int
push
pminsw
jmp
push
loopne
aad
push
add
leave
movsb
dec
mov
and
mov
cs
fiaddl
cli
dec
xchg
sbb
mov
popa
and
outsb
fidivrs
and
jbe
filds
or
or
cmp
cs
cmpsb
or
popa
adcb
sub
xchg
pop
ja
ret
vsqrtps
faddl
mov
nop
repnz
sub
cmpsb
mov
mov
add
sbb
call
std
push
or
ds
inc
out
push
ret
cli
nop
pop
test
aad
mov
cmpsl
adc
mov
in
push
ljmp
xor
push
pop
cmp
aad
jp
lret
in
imul
mull
and
sub
jg
add
cwtl
inc
sbb
sbb
ja
mov
jbe
nop
dec
xor
repz
je
pop
jmp
xchg
jo
fwait
mov
xchg
sub
subl
sbb
or
je
and
mov
mov
cmp
and
stos
add
dec
add
and
cmp
xor
cltd
jl
ja
nop
lods
inc
subb
mov
inc
cld
push
sbb
adc
faddl
jnp
push
notl
pop
lahf
pusha
loope
rcll
inc
or
fwait
jnp
nop
in
lock
fcoml
aad
and
or
jne
add
fstpt
pop
push
pop
or
mov
out
std
inc
inc
xchg
add
xor
inc
pop
dec
mov
add
sub
add
mov
js
lret
cld
scas
and
sub
out
fwait
sub
mov
inc
jecxz
mov
sbb
pop
add
push
cwtl
sub
shll
leave
lahf
aam
mov
lods
addr16
jp
mov
test
xchg
outsb
mov
sbb
jle
mov
in
push
pop
push
adc
mov
scas
add
lahf
test
and
hlt
outsl
mov
mov
mov
clc
push
or
mov
sub
xchg
pop
daa
testl
ja
cmp
jmp
jo
and
mov
mov
repnz
add
mov
out
adc
divl
adc
out
pop
jbe
scas
addr16
jo
addr16
aam
sub
lods
imul
stc
mov
adc
lret
add
dec
les
inc
fidivl
and
push
lods
cmp
sub
inc
dec
popf
fists
insl
stos
xchg
mov
into
push
mov
dec
aas
aam
movsl
rolb
jg
divb
pop
xor
or
mov
scas
mov
in
pop
mov
notl
add
scas
xor
sub
add
xchg
mov
test
cmp
mov
nop
or
jle
xchg
pop
in
mov
imull
and
sub
ja
divl
mov
icebp
inc
cli
xlat
ljmp
or
dec
icebp
rcll
in
cmp
outsb
mov
flds
in
mov
add
jo
sbb
leave
or
lds
or
imulb
repnz
sbb
mov
xor
xchg
and
call
stc
divl
das
sub
fldenv
jne
nop
push
fisttpll
into
inc
or
ss
cmp
fisttps
cmp
jmp
sbb
mov
gs
mov
push
mov
pop
adc
and
arpl
orb
call
les
sbb
xchg
fdivp
sbb
clc
cmpsl
push
imulb
in
xchg
mov
out
in
xor
aaa
mov
xchg
jbe
sub
mov
aam
xchg
jle
jg
push
sbb
cltd
fisubrs
inc
jg
mov
pop
add
push
fidivs
mov
add
inc
jns
faddp
loopne
xor
iret
hlt
out
mov
jae
repnz
jl
pop
lods
jle
add
roll
movsb
fsts
scas
decl
mov
add
mov
rcr
imul
xlat
mov
sti
cmp
mov
pop
insb
xchg
mov
pop
pushf
adc
jnp
fmull
rcr
nop
jbe
loopne
nop
push
adc
js
pop
mov
fstps
push
hlt
sbb
mov
cmp
sahf
cmpsl
cmp
in
adc
mov
and
fnstcw
add
mov
out
aam
pop
in
sbb
mov
jg
nop
adc
repz
stc
sub
fs
add
adc
fsts
sbb
in
cwtl
add
xchg
fwait
test
inc
or
xor
push
test
xlat
add
fistl
sub
aas
lods
mov
adc
xchg
xor
jae
cld
lods
mov
push
inc
add
push
add
jge
dec
rcll
mov
adc
pop
jp
hlt
cmp
out
xchg
pop
jnp
lret
lret
das
mov
jp
ja
inc
stos
mov
icebp
mov
nop
mov
and
ret
stc
idiv
int3
adc
in
incl
inc
pop
and
adc
xchg
movsb
stos
jae
test
xlat
xchg
aas
pop
add
and
dec
out
mov
stos
outsb
xor
dec
pusha
loope
jg
mov
inc
test
cmp
ds
out
loope
xor
add
push
jle
mov
idiv
call
iret
xchg
outsl
fisubrs
lds
xchg
pushf
in
mov
fadd
iret
sahf
mov
insb
das
pop
pop
movb
ljmp
jbe,pt
jnp
in
inc
fdivs
inc
sbb
ljmp
xlat
dec
lcall
leave
lods
or
aaa
push
mov
ret
push
push
ljmp
inc
mov
xchg
imul
mov
addb
lods
leave
mov
jle
and
sahf
int
dec
ds
pop
std
ljmp
out
sbb
mov
sub
dec
fstl
clc
lret
adc
aam
pop
xchg
xchg
nop
inc
test
gs
aad
and
inc
test
test
xor
fstl
movsb
jg
mov
leave
aas
mov
loope
inc
xchg
jno
pop
aam
push
or
in
add
mov
push
andb
fwait
adc
repnz
loop
iret
mov
out
or
mov
nop
sub
repnz
into
jge
stc
movsb
mov
cmp
mov
push
jle
dec
lret
mov
sbb
dec
inc
iret
sub
mov
fs
movsl
sbb
cld
orb
fsubs
xor
nop
and
shlb
movsw
xchg
ja
daa
aaa
push
test
mov
ljmp
xor
mov
fidivrl
popa
or
xlat
xchg
push
insb
sahf
pop
icebp
in
dec
push
ja
test
jge
push
xor
dec
xchg
sarl
push
xlat
jp
sub
mov
mov
cmpsb
outsl
shrl
ret
jmp
scas
xchg
sub
insl
sub
push
add
out
lcall
cmc
xlat
outsl
sar
push
lods
mov
adc
hlt
add
stos
bound
std
ror
mov
mov
arpl
mov
xchg
xlat
cmp
jo
lds
push
insl
xlat
or
psubw
xor
rcrb
jmp
sbb
scas
xlat
idivb
pusha
lcall
imul
cmp
in
xor
and
jmp
xlat
inc
test
jns
out
xlat
jmp
jnp
adc
popa
inc
pop
xchg
pop
mov
pop
mov
lahf
lea
ja
test
xchg
enter
fcom
jg
loopne
aam
mov
xlat
ret
cs
jl
adc
mov
and
fists
xchg
pop
sbb
notl
sub
shlb
fistpll
mov
iret
xchg
or
inc
mov
lret
aaa
jle
scas
ds
inc
iret
xchg
push
push
adcb
jbe
cmc
fisttpl
add
mov
lahf
mov
dec
aas
call
xchg
adc
cs
cmp
jae
es
mov
out
fstps
push
aas
dec
sub
lcall
hlt
mov
test
shlb
push
adc
sub
adc
shll
add
xchg
add
mov
dec
xchg
add
jmp
jnp
cld
nop
add
idivb
imul
js
scas
in
mov
jge
mov
inc
testb
pop
and
adc
sbb
add
inc
stos
jl
inc
cltd
mov
je
sbb
push
jl
dec
cmpsb
mov
inc
inc
push
sub
mov
and
or
rcrl
ja
stos
cmp
mov
roll
inc
out
inc
aas
pop
loope
jmp
ja
mov
and
hlt
ljmp
or
sub
add
inc
bound
daa
inc
jp
adc
out
pop
outsb
leave
sbb
fmull
cmpb
dec
gs
inc
xchg
sarl
aaa
mov
clc
adc
jnp
loope
mov
jbe
or
xchg
iret
jmp
cwtl
mov
adcb
sbb
nop
gs
inc
xchg
mov
ja
xchg
stos
inc
sbb
gs
pop
popa
jp
xchg
test
mov
push
nop
scas
jge
mov
mov
add
push
sub
or
popf
adc
xlat
loopne
jno
repnz
ficompl
stc
mov
pusha
rcll
mov
cmp
dec
adc
inc
xchg
jge
repz
into
mov
push
adc
sbb
shll
ret
push
les
adc
repz
lret
xchg
jae
sbb
dec
push
adc
pop
pop
std
xchg
repnz
aam
sub
pop
push
sbb
fsubr
inc
pushf
adc
jns
nop
inc
std
or
hlt
mov
push
stos
aas
and
rcr
cmp
xchg
xchg
dec
jl
pop
sbb
dec
out
imul
lahf
xor
lea
dec
sub
sti
rclb
jp
aas
adc
ret
subl
or
pop
xor
mov
sbb
outsb
xor
sahf
into
cmp
aam
mov
in
int
push
cmpsb
xchg
cmc
int
aad
aam
and
mov
ffreep
ds
xchg
pusha
inc
popa
int3
cvtps2pd
test
mov
icebp
sub
adc
xchg
jl
jmp
out
xor
xchg
in
pop
pop
mov
pop
dec
and
pop
in
in
inc
daa
fs
sub
test
or
cmp
mov
mov
mov
jo
or
js
mov
sub
les
sub
cmpsb
jmp
repnz
ja
jge
aaa
lret
cmp
jle
xchg
lahf
in
in
sub
mov
jge
mov
jnp
testb
mov
repz
clc
jge
in
rol
push
pop
or
pop
insl
cmp
sub
cmp
in
sub
fcoml
xor
pop
xor
leave
and
nop
int3
sbb
mov
jg
mov
mov
inc
out
inc
cmp
xorb
sbb
push
ja
ret
cmp
adc
xor
mov
and
int3
inc
xor
xor
mov
add
xor
iret
xor
push
and
in
imul
negl
dec
or
jb
inc
mov
xchg
aam
cmp
xchg
or
pop
outsb
push
push
fxtract
and
sbb
mov
mov
pop
or
imul
mov
testl
sbb
hlt
xor
push
and
jp
negl
int
and
xor
or
add
sbb
repnz
imul
in
bound
adc
pushf
popf
inc
cmp
shr
rcll
cmc
jmp
aas
xchg
dec
into
add
rcrl
sub
imul
pop
mov
sub
rclb
in
mov
sub
and
jno
sbb
xor
popl
in
pop
stos
add
ljmp
pop
negb
cltd
add
dec
xchg
sbb
andb
mov
les
dec
push
decl
inc
notb
sbb
roll
adc
scas
add
mov
fidivl
movb
inc
mov
out
in
out
stos
jae
sbb
mov
sub
icebp
roll
mov
pop
add
mov
inc
sbb
sub
lcall
ret
sbb
sahf
mov
fcomi
jp
cli
test
cmp
sub
aaa
pop
sub
out
push
mov
nop
mov
or
repnz
pop
cltd
pop
data16
aas
push
pusha
adc
cs
popa
sbb
jne
pop
jno
faddp
and
orl
pop
fsub
leave
push
clc
js
cmp
rcll
movb
mov
pop
add
mov
sarl
sbb
incb
sarb
xchg
inc
js
push
int3
rcrb
sub
jecxz
sbb
add
jne
aam
sbb
cli
inc
adc
pop
test
int3
mov
adc
rcll
fistps
jmp
or
int3
cmp
inc
mov
cmp
dec
sub
sub
mov
rol
dec
jne,pt
push
jne
cmpsl
daa
push
jg
mov
pop
mov
xor
mov
mov
mov
push
aam
mov
add
rorl
shl
les
xor
fistpll
stos
mov
nop
in
add
sbb
mov
out
loope
xchg
ret
dec
push
sub
xchg
lahf
sub
cli
ret
js
and
push
leave
adc
inc
mov
jae
cli
pop
xor
jno
hlt
and
test
lods
cltd
mov
inc
gs
insb
sub
xor
mov
adc
inc
ljmp
inc
pop
enter
mov
outsb
and
lods
push
sbb
cmp
inc
loope
adc
lret
fmuls
rol
shl
cld
cmp
ficompl
hlt
nop
jne
dec
pop
imul
inc
jp
xchg
or
mov
sub
cmp
mov
into
mov
cmp
sub
cmp
loopne
xlat
bound
sbbl
adc
xchg
dec
clc
pop
adc
xlat
lds
sahf
xor
pusha
dec
cli
movsl
or
push
lret
add
mov
jo
dec
add
incb
xchg
push
stc
sarb
lods
xlat
gs
fisubl
hlt
outsl
pop
dec
jecxz
mov
mov
call
fwait
shrl
push
fcmovnbe
sti
inc
sbb
movsb
nop
push
lahf
sub
aam
fldl
in
shll
xchg
loop
addr16
pushf
sbb
popa
mov
inc
icebp
enter
push
gs
js
mov
jno
mov
rcrl
incb
mov
xchg
adc
lret
lahf
daa
xor
std
movsl
into
xlat
mov
sbb
icebp
mov
sub
and
jno
mov
mov
push
into
push
mov
xor
jecxz
mov
sub
int
rolb
das
xor
push
inc
or
xlat
test
mov
rcl
fiaddl
ss
xlat
mov
fdiv
icebp
mov
scas
cmp
enter
nop
xlat
push
test
dec
jb
aas
add
int
inc
cltd
inc
push
dec
xlat
call
xor
mov
into
mov
mov
loopne
jno
jns
mov
dec
aad
iret
in
sbb
dec
orb
xor
mov
pop
or
add
lods
dec
push
bound
xchg
mov
std
iret
hlt
cmp
jmp
adc
jo
xlat
mov
add
mov
ficoms
lods
dec
and
sti
loope
xor
pop
adc
leave
push
dec
iret
jle
jmp
mov
ret
pop
push
cmp
dec
and
pop
xlat
rcrb
jle
sbb
add
xlat
into
cmpb
xlat
mov
fstpl
repnz
mov
dec
clc
mov
xchg
int
jecxz
fs
xlat
xchg
mov
sti
fisubs
adcb
stos
loopne
pop
popa
sub
cmp
dec
addr16
or
mov
mov
popf
and
in
inc
or
gs
push
vprotq
inc
mov
sub
test
movsb
out
mov
sbb
imulb
loopne
leave
out
sub
stos
adc
jle
call
push
fidivrs
fildl
sbb
mov
sbb
jp
push
inc
mov
nop
mov
lret
aam
mov
mov
add
jne
fldenv
jnp
icebp
push
mov
test
cmp
js
enter
fldenv
pop
ja
lds
iret
push
xchg
out
sub
cmp
jg
ja
sahf
shll
jns
mov
movsl
mov
adc
rolb
adc
mov
push
std
sbb
inc
or
xor
mov
or
push
cltd
loope
mov
punpcklwd
imul
mov
iret
outsb
fists
sbb
mov
jne
mov
push
mov
aad
push
mov
incl
test
std
or
mov
cld
nop
mov
add
pop
test
cmc
jge
roll
cmp
rcrl
rcll
inc
in
dec
adc
fidivrl
fldcw
or
sbb
stos
xor
pop
lret
mov
xchg
push
xchg
jg
xchg
divl
fstpt
adcb
push
mov
iret
pop
jae
xchg
add
out
mov
lods
pushf
pop
flds
callw
xchg
or
mov
and
dec
lock
out
pop
pushf
into
scas
adc
repnz
lret
mov
xchg
push
gs
nop
rcrl
rorl
je
ja
xor
loopne
addr16
adc
pop
mov
popf
icebp
int3
fsts
int3
adcl
mov
cld
and
and
xor
rol
sub
aam
dec
mov
icebp
jb
pop
sub
enter
or
int
jge
jnp
sub
push
ja
or
push
daa
mov
push
int
push
jmp
sub
push
jl
sub
pop
shl
aas
jl
icebp
jmp
adc
inc
cmp
xor
out
jle
sahf
inc
or
xor
lcall
dec
and
movsb
daa
aas
mov
mov
test
lcall
pop
fcompl
add
enter
jo
pop
pop
push
inc
aad
push
mov
xchg
mov
movsl
add
sub
test
sbbb
mov
addb
arpl
mov
mov
inc
orb
pop
rcr
shll
push
and
xlat
addr16
and
pop
dec
in
cltd
sti
jl
cmpsl
mov
or
gs
pop
pop
cmp
sub
add
xor
rol
pop
loope
cmp
lcall
subb
aam
popa
test
inc
xor
loopnew
ret
rclb
push
js
jmp
dec
ljmp
cld
stos
call
sbb
mov
mov
xor
sbb
notb
outsb
ja
xor
shrb
lods
scas
out
inc
lods
fnstcw
aad
push
jbe
sub
xchg
pop
les
cmp
or
fcoml
push
sub
fdivrs
adc
mov
adc
push
and
loope
leave
nop
faddl
pop
adc
lcall
cmp
jge
jb
call
aam
arpl
jns
test
aam
shl
xor
repz
cltd
popf
shlb
mov
dec
mov
push
xlat
xchg
cmc
mov
test
inc
inc
jo
ljmp
mov
jg,pn
movsb
pop
mov
mov
xor
mov
aas
mov
stos
add
sbb
fstpt
mov
cmp
mov
xchg
mov
pop
adc
add
aas
in
jmp
imull
push
push
ja
sub
sub
sub
clc
out
sub
lea
inc
or
sub
fstps
mov
inc
xchg
push
cmpsl
neg
nop
shr
xlat
mov
xor
fadds
mov
lret
mov
push
scas
inc
fdivl
mov
arpl
inc
js
jno
inc
fnstsw
aad
sti
cltd
or
xor
jns
mov
mov
sahf
addr16
fsubl
mov
fnsave
mov
mov
pop
out
adc
xor
rcll
cmp
fwait
push
mov
xchg
out
outsb
xchg
and
push
stos
nop
leave
pop
lret
shlb
jns
popf
shll
xchg
loop
iret
lock
jnp
insl
mov
cmp
adc
cmpsb
mov
sub
loop
cmp
dec
sub
in
add
cmp
add
rorl
scas
jns
in
fists
cmp
call
aad
push
dec
mov
jge
cmovns
and
cwtl
xchg
nop
pop
ret
hlt
sub
push
or
out
sbb
test
int3
mov
and
inc
enter
adc
movl
mov
push
test
sub
mov
enter
inc
call
pop
jmp
or
mov
rclb
xchg
mov
fiadds
sbb
or
pushf
mov
push
rorb
ret
adc
mov
xlat
jbe
and
les
sub
inc
iret
sub
mov
je
jmp
loopne
aad
fcoml
fldl
inc
shll
movsb
pop
jg
loop
sbb
pop
jp
push
imul
sub
into
push
mov
seto
mov
pop
ret
lret
mov
mov
test
imul
jg
add
mov
gs
stos
iret
loope
and
pop
xchg
xor
lock
adc
popa
xorl
sarb
addr16
adc
sub
jmp
fwait
add
enter
decb
sbb
sub
roll
ret
jo
and
dec
dec
jg
ret
decl
push
sub
or
inc
dec
int3
pop
xchg
mov
adcb
aas
sub
cmp
mov
cmp
cmpl
push
jb
push
sbb
es
in
stc
es
dec
shll
jmp
mov
xor
mov
mov
inc
jo
jg
ljmp
into
in
nop
push
add
xlat
icebp
insb
cli
inc
fdivrs
daa
xor
wrmsr
lcall
je
mov
jno
xchg
pop
rcrl
xor
cmc
into
not
xor
lret
and
iret
sarl
pop
xlat
popf
and
pusha
out
daa
test
adc
int
xlat
pushf
mov
jnp
xlat
mov
dec
xchg
dec
repnz
imul
xchg
jne
xlat
pop
push
push
jl
dec
jo
xlat
ss
cmp
xlat
scas
cmp
test
iret
xor
sub
fldt
jo
add
dec
jge
add
jmp
jmp
xlat
sbb
nop
mov
mov
out
add
shll
xor
mov
dec
jb
sbb
fst
sub
movsl
mov
mov
mov
nop
mov
mov
cltd
xchg
push
sbb
cmp
fcmovbe
lock
jg
add
lea
sbb
xor
adc
jo
sbb
mov
iret
jl
jle
push
mov
mov
jne
mov
shll
fidivrl
pop
xchg
xchg
sbb
xor
fnstenv
data16
add
enter
sbb
cmpsb
call
iret
imul
out
push
adc
jbe
stc
fcomp
jge
mov
adc
cwtl
mov
adc
dec
aam
cmc
sub
nop
jbe
mov
jnp
outsb
fcom
dec
cld
jl
jl
mov
mul
xor
pop
dec
jnp
sub
mov
jns
jg
xchg
loopne
pop
cmc
lock
in
xor
mov
pop
mov
jge
push
adc
mov
mov
scas
jp
inc
inc
hlt
test
sbb
jnp
sub
frstor
subb
leave
cmpb
popa
pop
cmp
jp
imul
inc
mov
push
adc
stc
mov
lods
fstps
ret
pop
mov
nop
incb
xor
push
add
mov
add
inc
push
xchg
loope
repz
sub
ja
notl
mov
xchg
xchg
inc
or
orb
fcmovnb
ret
aad
xchg
jg
cltd
sbb
lret
cmp
call
jge
jecxz
add
mov
jge
scas
fstps
mov
xchg
fdivrl
sbb
test
ficoml
lock
xchg
das
aam
int
pop
ret
and
int
add
jl
jnp
mov
mov
shlb
pop
out
gs
nop
movsl
data16
lods
jbe
jl
seto
imul
add
mov
jp
jmp
push
nop
mov
push
xorb
repnz
mov
stc
jl
inc
call
ss
jmp
inc
jnp
sti
mov
imul
inc
lahf
sbb
add
sbb
clc
insl
stc
add
fiadds
pop
xlat
push
mov
jno
stc
pusha
cs
pop
les
dec
and
inc
sbb
lods
sbb
rcll
scas
js
mov
sbb
test
int3
mov
mov
jne
push
shlb
aaa
sarb
mov
sbb
cmp
loope
xor
cwtl
add
add
std
aam
and
lahf
pop
xor
adcb
bound
shlb
int
gs
push
or
push
nop
scas
scas
in
inc
push
sub
in
add
mov
mov
mov
mov
lds
sbb
push
int
pop
repnz
test
push
sbb
enter
incb
daa
adc
cmpsl
xor
gs
xchg
in
jmp
jmp
ret
push
and
adc
mov
je
add
xor
lea
dec
pop
lret
sub
mov
push
jnp
stos
imul
add
das
cmp
push
pop
inc
outsl
out
dec
fs
aam
aaa
pop
imul
dec
xchg
fistl
mov
aam
and
push
aaa
jle
fadd
xchg
sub
std
divl
ret
sbb
xchg
adc
mov
xor
arpl
or
pop
push
cld
jnp
xchg
test
popa
push
movsb
pop
in
out
pop
mov
call
sub
cmp
sbb
test
in
rcrl
out
rcrb
aad
ret
mov
daa
sub
into
lods
test
test
sbb
aas
fwait
jmp
mov
mov
repnz
testl
inc
sbb
and
add
inc
xchg
dec
scas
mov
sbb
adc
jg
sbb
jnp
pop
adc
in
stc
fisubs
sbb
mov
mov
pop
jns
xorb
insb
pop
imul
hlt
sbb
cmpsl
mov
fwait
nop
cmp
roll
adc
mov
inc
mov
mov
mov
out
pop
mov
dec
push
add
mov
das
cmp
lahf
fsubl
loop
push
roll
mov
xlat
jle
xchg
subb
test
inc
xlat
movsl
and
dec
dec
test
xchg
dec
and
movsb
cli
mov
mov
mov
adc
or
mov
in
rorl
xchg
cld
jne
aam
cmp
push
push
ja
cmpsb
xor
stc
inc
mov
sbb
jne
repz
xlat
xor
aad
pop
inc
imul
push
pop
mov
and
xlat
imul
stos
lahf
aaa
insl
xlat
inc
push
ss
xor
xchg
cmpsb
or
add
loope
mov
xchg
dec
jp
cmp
out
add
push
cmp
xlat
xchg
mov
and
mov
lock
out
addr16
add
mov
cmp
mov
jmp
movsb
aad
scas
jnp
out
lock
mov
bound
popa
rcll
xlat
add
sub
addr16
pop
cltd
push
and
cmp
cmp
cmp
mov
add
dec
lret
inc
jmp
xlat
dec
lds
icebp
push
movsl
ror
jecxz
jmp
cmp
repz
push
xchg
imul
mov
hlt
xlat
pop
repz
cmp
mov
jle
mov
out
clc
in
xlat
cs
jnp
adc
gs
xor
jb
clc
divl
adc
cmpb
loop
jns
sarl
fwait
xchg
das
ficoml
sub
xchg
mov
iret
cmp
ret
inc
mov
sbb
jg
gs
or
xor
cmpsb
xlat
dec
mov
ret
mov
cld
mov
add
cli
xlat
xchg
xchg
dec
inc
or
stc
xor
fcmovnbe
out
or
xlat
lods
into
and
jg
stc
mov
xchg
les
test
xor
sub
out
pusha
xchg
ret
xlat
fs
imul
and
and
push
lret
ja
xlat
shl
out
mov
sbb
call
jmp
sub
push
dec
xlat
xchg
je
xchg
pop
testl
lea
xlat
mov
xor
mov
pushf
fcmovbe
lock
int3
mov
sub
jo
mov
imul
notb
jl
xor
or
push
testl
push
test
mov
out
push
fwait
push
scas
shlb
sbb
jle
js
cmp
xchg
mov
push
imul
xlat
mov
inc
popa
sbb
rcl
insb
inc
or
lahf
xchg
and
icebp
or
scas
loop
xlat
fwait
inc
mov
mov
clc
mov
ljmp
or
outsb
test
sarb
cs
fs
test
pop
repnz
insl
ljmp
mov
repz
adc
sub
cmp
mov
hlt
lahf
popa
in
notl
adc
jmp
pop
mov
pushaw
mov
orb
jb
test
mov
loope
push
test
aaa
xlat
push
imulb
sub
movsl
dec
add
shl
mov
mov
ret
mov
dec
or
scas
and
fimuls
leave
sub
test
lcall
mov
ret
inc
sub
xlat
add
cwtl
lcall
sbb
inc
ss
adc
sarl
mov
je
stc
and
cwtl
xlat
out
adc
rolb
dec
xlat
mov
int
filds
mov
lahf
cmp
movsb
fiadds
mov
and
iret
cmpb
mov
mov
sub
out
cmpsb
clc
rcll
bound
push
lret
jge
call
mov
subl
dec
js
lea
sub
xlat
push
test
cli
dec
iret
mov
adc
jo
xchg
xlat
sub
int3
inc
xchg
xlat
dec
xor
or
mov
push
int
mov
inc
adc
cmc
rclb
xlat
mov
cmpl
pop
aad
adc
sub
xlat
jl
push
pushf
xlat
adc
dec
jb
hlt
adc
cmp
pop
mov
mov
inc
lods
icebp
pusha
cld
sbb
pop
popa
out
push
add
and
xlat
mov
push
sbb
adc
cmc
mov
xor
and
aas
push
mov
jg
inc
clc
das
ja
adc
dec
mov
scas
and
dec
nop
and
addr16
push
jmp
call
push
repnz
xlat
mov
fstl
mov
push
push
insb
test
rcl
test
jb
lock
jae
push
dec
xlat
pop
and
int3
xchg
test
ss
lea
std
sub
mov
adc
insl
icebp
mov
gs
iret
rorl
shrl
adc
fwait
seta
out
stos
fbstp
add
xlat
pop
adc
repnz
je
rorl
out
std
aad
repnz
sub
inc
out
mov
pop
add
mov
jle
ret
xlat
or
xchg
jp
mov
inc
xlat
cmpsb
imul
aad
mov
arpl
shll
mov
push
and
ret
sbb
pushf
shr
jne
or
pusha
adc
mov
jb
ss
int
jne
adc
xchg
xlat
add
lock
out
pop
rorl
aad
or
and
inc
in
push
adc
and
imulb
aam
stc
sahf
repz
outsl
ja
inc
lods
add
pop
insb
shrl
imul
jb
jg
lret
out
jae
in
data16
int
cmp
push
subl
cmp
stc
test
sub
out
xchg
scas
xlat
lock
xor
dec
popa
lahf
adc
rcll
push
jmp
jne
inc
testb
lods
orb
nop
pop
cmpsb
xchg
popa
arpl
stc
aad
call
cltd
call
xor
int
test
cmp
aaa
inc
mov
outsl
cmp
xchg
iret
pusha
pop
dec
ret
nop
mov
xor
mov
jae
fs
xchg
xlat
mov
push
repnz
stos
dec
mov
movsb
imul
mov
out
sbb
mov
add
xlat
shl
sub
popa
out
insl
lret
or
cli
bound
jae
lcall
fildl
add
pop
push
js
adc
mov
in
loop
outsl
push
xlat
cltd
ljmp
notb
scas
mull
int3
sub
or
int
xchg
sub
pop
xlat
mov
add
push
push
lahf
inc
mov
inc
nop
mov
or
xlat
jnp
jecxz
push
cwtl
jb
mov
stos
icebp
addr16
imull
pop
xlat
rcr
cmc
mov
cmp
iret
dec
mov
and
fsubs
movsl
nop
xlat
ficompl
cli
pop
iret
aam
xchg
pop
dec
adc
jp
xlat
mov
int3
jo
and
inc
pusha
adc
push
loop
mov
push
or
sub
popf
cmc
mov
mov
jae
int
xlat
mov
xchg
sbb
cmp
xlat
test
sub
mov
hlt
jle
mov
pop
shll
inc
adc
cli
or
sbb
into
repnz
mov
sub
pop
out
sbb
ja
cmp
sti
lock
pusha
sbb
lret
jecxz
mov
std
clc
xlat
xor
lock
cld
xlat
xchg
pop
out
ret
jmp
ret
mov
fisubrl
xlat
roll
pushf
push
imul
in
mov
clc
rcl
idiv
xchg
xlat
mov
adc
pop
into
add
ret
push
dec
xchg
push
jl
xlat
xchg
popl
push
xchg
je
mov
imul
push
add
not
pop
and
dec
imul
xlat
sub
mov
loopne
cmp
inc
mov
out
fistps
lret
sub
jp
fildll
popf
imul
ficompl
or
mov
fcmovnbe
mov
xor
shr
jo
pop
aam
outsb
mov
pop
and
movsb
nop
call
rcll
repnz
cmp
sbb
mov
cwtl
iret
and
adc
cmp
iret
mov
mov
sar
mov
add
and
scas
shr
xorb
adc
outsb
xchg
inc
mov
nop
out
mov
les
loopne
stos
pop
aam
imul
xchg
jb
inc
aad
pop
outsl
dec
jecxz
jb
or
stos
in
xlat
push
add
or
inc
mov
out
sub
pop
mov
test
xchg
mov
sahf
mov
test
xchg
test
push
inc
aad
fdivs
sbb
mov
adc
idivb
int
out
adc
xchg
push
mov
jae
adc
ds
test
dec
push
xor
cld
mov
and
mov
add
xchg
mov
sti
inc
loopne
rol
lock
mov
xchg
add
adc
gs
sub
dec
xlat
aas
inc
sub
inc
pop
mov
sub
jp
jg
stc
addr16
jge
rsm
xchg
pop
push
pop
and
adc
pop
roll
int
sub
push
push
imul
or
mov
jbe
inc
xor
mov
jns
dec
sahf
lret
xor
sbb
pop
dec
sti
ljmp
cwtl
xlat
stc
xchg
mov
xchg
xor
repnz
adc
sub
mov
mov
dec
push
push
jle
adc
fs
mov
es
mov
dec
scas
stos
xchg
mov
ret
sub
push
mov
sub
xchg
add
or
in
bound
into
add
mov
shl
xchg
orl
sub
push
in
loop
aad
jp
pop
inc
mov
jge
sbb
jp
idivl
mov
jle
sbb
shr
das
adc
cs
add
jno
push
repnz
fsub
lds
outsl
push
pop
sbb
adc
jl
popa
pop
pop
ss
cmc
jle
out
arpl
popf
mov
add
xlat
xor
add
mov
push
lods
loopne
in
dec
ret
mov
adc
bound
mov
push
inc
aam
sbb
sti
ja
mov
push
jne
test
enter
sub
and
xor
jbe
mov
xor
scas
jmp
stc
imul
mov
mov
imul
dec
movsl
xor
xchg
fs
xchg
jne
fxch
inc
out
fnstsw
mov
movsb
into
mov
cmpb
aad
mov
pop
jmp
aad
loope
xchg
dec
and
nop
arpl
fs
lds
sbb
sub
mov
aaa
in
xchg
sub
hlt
aaa
test
notb
bound
iret
xor
mov
fs
mov
and
mov
leave
adc
xlat
imul
rcl
notl
sbb
dec
insb
enter
fsubl
gs
mov
jno
jb
aad
rorl
cld
aaa
addl
rclb
push
enter
push
jmp
or
xchg
mov
cmp
push
fcoml
sbb
cmp
add
es
lea
push
pop
cmpsb
loop
or
loope
sub
test
rorl
enter
push
mov
mov
test
mov
inc
imul
inc
mov
mov
add
mov
and
in
xlat
sahf
inc
test
ss
cmp
jnp
dec
jmp
or
das
mulb
lret
shlb
clc
mov
xlat
jmp
js
push
xlat
add
jb
xlat
enter
iret
arpl
cmp
sbb
js
adc
gs
into
cmp
inc
mov
stos
int
xchg
add
cli
imul
xlat
ja
lods
sbb
mov
push
les
cli
fidivrs
xchg
syscall
xchg
out
pop
and
daa
leave
imul
mov
push
or
sub
ficomps
or
cld
and
xor
xlat
cltd
pop
cmp
lods
lea
shll
orb
dec
mov
in
idivl
xlat
mov
lods
jmp
addr16
mov
inc
pop
jb
insl
sub
pop
adc
clc
mov
push
xor
xlat
pop
in
xchg
les
jmp
sahf
lahf
clc
stos
and
push
or
mov
xor
xlat
daa
into
mov
incb
and
mov
push
cmp
xlat
xchg
in
push
jp
pusha
scas
stos
xlat
loopne
mov
xlat
andb
ljmp
shlb
push
aam
cs
xlat
cmp
xchg
shlb
loop
iret
add
jnp
mov
sub
sbb
adcl
xor
mov
aad
rol
mov
mov
fdivl
jle
rolb
fmulp
shr
mov
lock
outsl
stos
aad
inc
and
adcb
sub
imulb
out
mov
rcr
insb
enter
lahf
mov
cmp
mov
push
cmp
in
pop
pushf
push
movb
lods
adc
dec
sbb
inc
pop
fisubl
std
lahf
fs
cmp
sub
outsl
xlat
cmp
ficoml
mov
bound
xlat
xchg
insb
out
xor
ret
in
mov
aaa
movsl
and
outsb
sub
std
xlat
fbld
push
push
cli
push
jbe
jmp
pushf
mov
call
arpl
mov
xchg
leave
and
es
xchg
loopne
sahf
cs
xor
pop
orb
add
repnz
jmp
and
xlat
mov
mov
push
and
jnp
fnstsw
mov
test
xlat
jns
inc
outsl
js
xchg
mov
insl
and
enter
push
sbb
sub
stos
movsl
fwait
mov
dec
mull
inc
jne
jns
pop
rcll
inc
stos
sub
xlat
in
ficomps
pop
xlat
mov
adc
popf
xlat
mov
xchg
dec
loop
rcl
es
and
lahf
or
push
shrl
xor
subl
sub
xchg
sbb
aad
movsb
pop
test
pop
clc
push
rorl
arpl
xlat
adc
out
mov
xlat
push
xchg
dec
mov
aad
test
and
out
fcoml
mov
in
xlat
into
gs
roll
sbb
ds
xlat
nop
inc
mov
cmpsb
sbb
jecxz
vcvtsi2sdl
cmp
xlat
add
dec
mov
popf
push
sbb
xlat
xor
and
ja
je
lods
pusha
xor
pop
test
mov
out
dec
or
insb
lret
push
pusha
in
inc
js
and
test
mov
push
fcompl
push
rolb
sbb
push
lods
or
xlat
cmpsb
lahf
adc
out
js
lock
loope
inc
outsl
xchg
call
xlat
push
pop
mov
xlat
mov
xor
mov
pop
enter
cmp
push
mov
cltd
imul
lret
sub
add
cli
mov
pusha
xlat
or
lret
cmp
pop
insb
cmpsb
fmulp
aam
movsb
dec
psrlw
xor
arpl
mov
inc
pop
aaa
mov
lahf
out
ljmp
jle
mov
mov
xlat
xor
pop
and
outsl
popa
mov
pop
ja
rorl
fcom
push
cli
add
hlt
jp
iret
inc
jbe
ljmp
fcomi
push
out
outsl
xlat
mov
loope
fwait
adcl
mov
sbb
enter
or
inc
adc
aaa
and
fwait
cltd
jg
sub
jae
xor
in
inc
xor
fwait
mov
cmc
or
xlat
out
push
and
xor
push
mov
aad
lcall
hlt
outsl
insb
aad
sub
push
dec
xchg
xlat
mov
in
cmp
out
fwait
xlat
out
mov
mov
jne
jge
dec
adc
push
mov
xlat
mull
xchg
int3
dec
mov
roll
xor
rorl
lahf
sub
inc
xchg
cmp
jg
pop
adc
cmp
insl
mov
les
xor
ss
xlat
inc
push
sub
pop
movsl
lret
xlat
and
mov
xlat
sbb
mov
adc
xor
mov
mov
mov
push
lahf
ror
aam
sbb
mov
nop
out
sbb
leave
les
jo
mov
loope,pn
repz
cli
xlat
xchg
ja
push
or
aad
fmul
xchg
mov
cmpsl
rcll
jno
daa
pop
outsl
inc
addr16
shlb
out
xor
out
out
xchg
sbb
mov
fbld
push
sbb
or
push
gs
testb
cli
cwtl
addl
xor
mov
stos
cmpsb
aaa
imul
lods
push
in
mov
adc
fisttpll
xlat
add
xchg
xlat
xchg
lea
push
mov
cli
jo
insb
aad
ss
add
dec
hlt
stos
jae
mov
out
pop
aam
dec
mov
sub
jl
mov
sbb
call
mov
xlat
int3
mov
insl
or
test
xor
shr
mov
adc
and
mov
mov
xchg
roll
pop
out
aam
sbbb
mov
mov
ja
stc
cwtl
dec
sbb
dec
adc
pop
test
adc
lock
lret
enter
dec
inc
sub
out
push
sti
jae
add
insb
jl
test
notb
add
mov
lahf
bound
packuswb
xchg
test
jae
mov
popf
imul
add
std
shr
mov
rcll
adc
rcl
ret
lret
jbe
adc
dec
lods
and
aaa
sub
jno
pop
ficomps
add
imull
addr16
out
sarl
xlat
inc
js
push
mov
mov
xlat
pop
push
hlt
cmp
cmc
rclb
push
orb
xlat
xchg
mov
push
xlat
adc
pop
xchg
sbb
aad
xlat
or
sub
mov
insl
or
jp
repz
mov
xlat
repnz
push
add
cmp
nop
cwtl
mov
pop
idivb
call
mov
xor
jg
fsts
shll
xlat
jnp
mov
push
xlat
popf
xor
test
insl
repz
int
scas
aaa
or
gs
xlat
hlt
dec
or
lahf
mov
mov
and
or
test
dec
daa
jge
jno
in
aam
dec
lods
add
into
fistl
lret
and
cmp
movsl
iret
push
aam
cmc
std
lock
pop
subb
xlat
mov
in
cwtl
cld
xlat
add
mulb
dec
add
and
xadd
xlat
out
bound
xlat
pop
es
adc
arpl
mov
xlat
and
xor
mov
pop
in
push
pop
negl
out
sub
inc
sbb
sbb
aam
push
test
sbb
out
jno
push
inc
or
mov
fcmovbe
inc
add
punpcklbw
xchg
mov
nop
cwtl
adc
fwait
add
xlat
shrb
jo
push
or
movsb
xchg
jno
mov
add
aam
xor
popf
push
xlat
cmp
pop
ret
rorb
xlat
rcr
sahf
jge
jl
mov
movsl
adc
push
cmp
loop
mov
fadd
aad
xchg
sub
nop
imul
hlt
xor
stos
pop
xor
shl
xchg
lcall
pop
aaa
out
mov
fcoml
movsb
lea
mov
sbb
test
aaa
mov
sub
mov
or
bound
xor
repnz
adc
sbb
mov
mov
fiadds
cmpsl
rcl
sbb
nop
ss
ret
pop
jns
dec
std
xchg
mov
pop
ljmp
jge
shll
rcrl
dec
mov
not
roll
jb
mov
xor
adc
inc
aam
dec
fcoms
jns
inc
inc
out
scas
and
out
mov
shl
cltd
nop
push
jmp
icebp
xor
or
jle
or
pusha
mov
sub
xchg
lahf
adc
test
xchg
ja
cmp
into
call
mov
fcoml
push
sbb
leave
jmp
pop
leave
lret
pop
fistps
or
aam
xchg
cmp
dec
mov
addr16
mov
xchg
and
daa
jo
sar
inc
add
imul
mov
out
pop
mov
mov
sub
sbb
iret
pop
negl
jno
sbb
scas
push
xrstors
enter
pop
cli
scas
scas
jns
adc
mov
push
fs
fldcw
xor
aad
pop
xchg
daa
xchg
notb
push
lret
es
in
xchg
into
nop
fstl
outsl
fcompl
pop
lds
pusha
and
ds
pop
jmp
repnz
mov
mov
push
imul
addr16
jns
inc
ljmp
shl
cmp
xchg
jp
inc
cmpsl
cwtl
xchg
jmp
sbb
jmp
fcos
pop
lcall
mov
repnz
vfrczsd
jmp
psubusw
shll
push
pusha
xor
scas
rol
dec
jb
sbb
scas
jmp
int
stos
jle
orl
hlt
xchg
inc
xor
into
iret
loope
fistl
fld
sbb
int3
fistl
rclb
out
adc
xchg
inc
int
inc
jne
pop
lea
test
inc
sub
sub
push
outsb
xchg
and
mov
push
fadd
push
test
call
aaa
xchg
dec
ret
push
push
inc
pushf
test
fstps
inc
hlt
mov
nop
ljmp
dec
fnsave
xchg
in
pop
adc
push
mov
es
push
mov
push
lods
push
daa
pop
jecxz
cli
mov
xor
lret
xchg
repz
inc
xor
inc
mov
jns
xor
icebp
mov
jae
lret
ret
jle
sarl
push
nop
mov
jmp
andb
sbb
ja
nop
push
xor
xchg
enter
adc
or
push
lret
push
lahf
mov
or
cltd
js
pop
int3
jo
push
scas
aaa
mov
nop
in
icebp
inc
xchg
test
fstps
jp,pn
push
shr
lcall
pop
xor
xlat
rolb
xor
in
loopne
add
addr16
mov
mov
sub
mov
mov
mov
outsl
or
fwait
sbb
add
or
inc
push
mov
out
push
xor
jg
call
ret
pop
popf
lds
mov
ret
ja
and
push
daa
adc
ljmp
ret
ja
es
xor
cmp
lret
orl
sbb
add
push
fadd
sbb
inc
rclb
mov
push
cmp
dec
mov
push
xchg
imulb
fucomp
adc
cmp
or
cmp
push
test
add
inc
int
cmp
test
repnz
sbbb
xlat
lock
mov
mov
pop
stos
pop
sbb
add
mov
ljmp
xchg
sbb
xchg
mov
push
xor
pop
imul
das
ljmp
push
or
jecxz
pop
pop
jae
aas
inc
dec
xor
pop
out
adc
lahf
pop
and
jp
cmp
push
mov
ljmp
notb
and
out
notb
xorl
mov
mov
test
dec
mov
mov
ss
xchg
mov
pop
dec
mov
sbb
mov
lret
movsl
loopne
repz
jns
das
fwait
jbe
inc
xchg
mov
inc
jo
cmp
call
aaa
mov
int3
push
fbstp
cmp
mov
stos
or
jp
mov
jnp
lret
pop
out
es
mov
sbb
inc
mov
aas
inc
pop
pop
test
data16
mull
jp
mov
test
stc
jns
mov
xor
adc
repz
hlt
add
je
push
call
test
repnz
and
mov
cmpb
pusha
xchg
mov
mov
push
sub
arpl
pop
pop
lret
mov
jnp
jae
push
aam
or
xchg
mov
mov
jecxz
mov
shrl
push
imul
addr16
leave
mov
sub
xor
scas
std
ljmp
ret
inc
aas
mov
or
fcoml
push
idivl
jb
in
xchg
mov
mov
maxsd
test
std
xchg
jo
sahf
sub
xchg
adc
pusha
inc
pop
or
repnz
pop
das
mov
data16
mov
ret
sarb
or
or
pushf
test
les
fcoms
cwtl
int3
dec
xchg
aad
push
daa
mov
jp
jmp
pop
repnz
into
aas
or
inc
jg
or
sbb
inc
sub
nop
mov
push
movsb
xchg
adcl
rol
push
or
fisttpl
sbb
mov
mov
sbb
dec
js
jb
dec
cmp
sub
mov
xor
mov
push
stos
fsts
jnp
nop
lods
mov
dec
dec
xchg
into
cmp
je
nop
test
ficoms
lcall
pop
ret
and
and
fidivs
das
add
pop
jbe
jge
lret
stos
pop
test
out
add
adc
pop
mov
cmp
out
dec
push
mov
ds
mov
inc
xor
sub
negb
ss
out
dec
mov
mov
xchg
lods
xchg
sbb
sub
and
flds
bound
add
popf
mov
xchg
icebp
jecxz
mov
fwait
inc
fcomps
sbb
bound
aaa
push
lcall
adc
mov
and
xchg
or
lods
ja
xchg
mov
lcall
mov
xchg
add
lods
xchg
add
xor
jl
adc
lahf
xchg
dec
mov
aad
sahf
sti
test
adc
dec
stos
jmp
push
xchg
stos
adcl
mov
fwait
addr16
push
mov
cltd
xor
imul
mov
sti
repz
cltd
sbb
call
and
lret
nop
imul
rcl
insb
in
and
dec
pusha
xlat
test
or
mov
xlat
dec
add
mov
jo
ret
pop
xchg
push
mov
stc
push
xlat
mov
xor
jl
ret
test
mov
push
fwait
mov
cwtl
inc
adc
and
clc
cmp
lock
jns
lret
push
jecxz
cmpsl
out
xchg
outsl
mov
popl
aad
push
and
cmp
rcl
mov
xor
mov
pop
ljmp
xchg
mov
adc
ret
adc
lods
xchg
call
in
and
adc
sbb
xchg
sub
pop
popa
dec
mov
jge
mov
aam
rcrb
lods
and
inc
mov
adc
dec
loopne
flds
mov
sub
or
nop
and
push
fwait
sub
out
mov
in
xor
scas
mov
fcmovnbe
xchg
and
hlt
aas
mov
pop
push
cltd
push
fs
jns
jle
nop
jmp
jnp
pop
test
test
xchg
push
repz
sub
movsb
mov
fistps
pop
nop
mov
adc
lret
sbb
and
pop
sar
mov
cwtl
shlb
loope
lds
adc
je
data16
stos
mov
mov
mov
xchg
xchg
sbb
loope
loope
adc
add
mov
hlt
and
mov
jae
add
aaa
xlat
and
in
ret
mov
gs
int3
insb
into
mov
jnp
idivb
pop
scas
adc
pop
nop
fs
stos
add
ss
jae
popf
fdivs
in
iret
into
jns
pop
inc
push
pusha
lret
xlat
stc
arpl
fnstenv
pop
sbb
sub
jae
psllw
int3
leave
fidivl
ljmp
je
cwtl
fstpt
add
pop
lea
bound
mov
push
jl
leave
sub
rolb
xor
nop
mov
sub
or
or
push
clc
mul
shrb
sbb
mov
adc
test
test
in
adc
mov
add
cld
popa
sub
mov
dec
pop
dec
xor
inc
sbb
and
inc
fwait
push
xor
cmp
je
fcompl
testl
test
test
cli
cltd
bound
and
pop
cmp
mov
add
xor
inc
xchg
outsb
fbld
fldenv
out
xchg
nop
xchg
addr16
mov
push
jp
pushf
push
push
roll
pop
lods
ret
out
or
or
cli
mov
jnp
sub
cmp
mov
out
and
iret
in
fcoms
mov
xchg
outsb
cltd
lret
and
xor
aad
sahf
push
dec
rcll
loopne
or
mov
insl
mov
sub
inc
sub
and
lret
vpmacsww
xor
xchg
mov
adc
loopne
xchg
or
mov
adc
call
add
xor
mov
push
pop
mov
mov
fdivl
test
jbe
out
daa
addr16
xchg
xchg
mov
add
inc
sub
ret
push
pop
adc
imul
sub
clc
shll
inc
inc
bound
jle
and
xchg
lea
lea
pusha
sub
pop
lahf
out
mov
xchg
sub
push
mov
pushf
inc
repz
mov
add
scas
inc
cmp
stc
mov
add
sub
sub
xchg
sahf
pop
xchg
fsubrl
dec
arpl
test
push
fcmovbe
pop
out
and
outsb
xor
pop
data16
xchg
or
div
movsl
inc
pop
scas
in
movsb
test
aam
pop
mov
lods
push
scas
sahf
mov
jb
rorb
mov
loope
jge
inc
sbb
repnz
sub
cmp
out
rolb
aam
das
stos
and
cld
lcall
in
mov
test
add
jecxz
js
daa
cmpsb
inc
leave
jmp
pop
out
and
mov
mov
adc
ficoml
sbb
insl
incb
cmp
push
jo
pushf
hlt
pop
dec
jne
je
popa
cli
dec
icebp
jmp
loopne
or
push
adc
add
mov
pop
jae
xchg
inc
push
test
cmpsb
nop
sub
out
xlat
sub
sahf
std
mov
jl
repz
jmp
scas
sarb
jl,pn
xor
or
fs
jmp
or
xchg
jne
and
sbb
mov
out
jp
dec
cmpsb
and
roll
nop
add
out
or
mov
ffreep
aad
loope
sub
push
sub
decl
loope
jl
sub
cmpsb
movb
dec
xor
fcoml
sub
push
inc
push
inc
hlt
xchg
or
int
pop
and
sahf
pusha
into
dec
hlt
ja
test
rcll
xchg
cvtdq2ps
cmpsb
icebp
and
notl
fistl
mov
push
scas
sub
nop
xor
push
aam
push
cwtl
clc
cmp
gs
scas
aaa
dec
ret
sbb
testl
aaa
cmp
inc
test
mov
insb
xchg
push
push
inc
mov
jp
icebp
repz
in
mov
add
pop
aas
inc
inc
int3
lret
mov
lea
pop
add
test
mov
in
push
cwtl
push
jo
insl
cmp
xchg
pop
scas
pop
and
pop
mov
or
in
add
stos
stos
dec
and
push
jae
cmpsb
rorl
fcomi
cltd
mov
out
fiadds
cmpsb
push
lcall
push
nop
cmp
sub
das
cmp
mov
jnp
fildl
mov
movsl
aam
dec
add
cli
mov
push
add
or
pop
mov
push
adc
adc
dec
int3
fsts
mov
cwtl
and
lea
jne
dec
cmp
fdivrl
adc
xor
nop
outsl
jge
negl
pushf
sub
or
repnz
sahf
jb
aad
ficoml
adc
out
mov
push
repnz
dec
outsb
jp
cmp
lret
cmp
pop
inc
mov
insb
sbb
sahf
mov
inc
sahf
sub
ss
jg
loope
add
xchg
int
cs
xchg
mov
movsl
ss
rorb
cmp
pop
xlat
aaa
sub
push
add
cmpsl
nop
ror
mov
test
push
xlat
pop
pop
sub
aam
xor
aam
mov
jne
pop
inc
or
jns
int3
sbb
cmp
aam
add
and
push
lock
adcb
push
iret
or
dec
ljmp
jg
shll
sub
icebp
lds
fisttpll
out
out
shll
lahf
rcll
iret
imul
ja
cmp
popa
jg
jo
fucomip
pop
rorl
push
adc
fcmovu
das
inc
sub
nop
adc
sbb
pop
mov
outsb
fcoml
inc
sbb
xor
outsb
fmull
mov
jbe
pusha
xor
nop
es
imull
call
mov
inc
nop
shlb
pusha
fbstp
stc
jmp
test
call
adc
pop
fstl
inc
aas
fisttps
push
xchg
fsubr
and
inc
push
jmp
adc
add
in
jbe
push
lret
fistl
loope
repnz
incl
inc
pop
inc
xchg
inc
lret
je
stos
fdivrs
aaa
aad
push
or
or
add
sbb
rorl
aad
repnz
jne
push
scas
push
mov
mov
gs
rolb
pop
stos
sbb
dec
sbb
and
movsb
mov
out
jg
popa
ret
sti
mov
insl
and
inc
popa
mov
mov
movsb
fldcw
outsb
inc
nop
inc
rol
or
ror
out
stos
and
cmpb
jns
mov
data16
push
lods
sub
ja
or
cmp
sarb
and
insl
aad
test
dec
sub
or
jnp
pop
add
aam
xchg
mov
imul
lds
stos
rcll
nop
sahf
dec
xor
push
and
sbb
pop
sbb
adcb
pop
iret
xchg
nop
pop
loop
pusha
xchg
in
loopne
jmp
cli
xor
or
sbb
imul
push
movsl
sbb
inc
sbb
scas
cmp
mov
fs
pushf
mov
jns
ss
sbb
and
cli
enter
stos
adc
or
popf
insb
or
and
fcom
xchg
push
pop
adc
int
pop
mov
movsbl
jl
inc
lods
sbb
fisttps
test
adc
inc
mov
cmc
out
sbb
inc
add
cmp
enter
sbb
dec
fldcw
fidivrs
cmp
daa
mov
adc
stc
sbb
cld
dec
pop
lcall
xor
adc
add
dec
xchg
cmpsl
daa
out
adc
cli
aad
test
inc
xlat
and
stos
adcl
jbe
shrl
sbb
lods
xchg
mov
add
int
or
adc
or
mov
mov
inc
cmpb
test
cli
inc
stos
mov
imul
inc
ret
and
xchg
cmp
push
inc
add
test
pop
dec
pop
lea
push
cmpsb
inc
scas
jle
xchg
dec
sub
or
adc
stos
jne
ja
imul
lds
dec
add
adc
nop
xor
mov
stos
stos
and
cmc
dec
xor
lods
test
push
mov
orl
sbb
loop
adc
push
jo
and
popa
iret
jnp
andl
mov
pusha
sbb
imul
xor
cs
xchg
jns
sti
out
or
xchg
fidivrs
lods
ss
mov
xchg
movl
filds
push
inc
sbb
lret
and
test
or
ficompl
push
call
int3
or
push
stos
adc
jle
lret
dec
cmp
xlat
icebp
sbb
sbb
mov
jbe
insb
sub
inc
xchg
adc
pushf
dec
sub
daa
pop
xchg
mov
sbb
mov
sub
inc
ret
out
sbb
and
pop
add
or
scas
insb
push
mov
jbe
out
and
pop
addr16
cli
movsl
and
push
fldenv
xor
movsl
cld
nop
lods
rcrl
fildll
mov
and
cmp
xchg
out
push
xchg
add
mov
adc
and
sub
ret
mov
cmp
ljmp
in
bound
popf
gs
cltd
loope
and
jle
inc
mov
mov
test
les
pop
ret
jmp
aad
test
add
aaa
pop
lock
rol
and
imul
ja
jno
sbb
add
ds
in
xlat
xor
imulb
in
movl
scas
or
xchg
xorb
ret
dec
push
add
data16
jge
fcmovb
mov
xchg
adc
cs
loop
out
sbb
shrb
pop
lea
pop
scas
icebp
pop
add
xlat
push
xchg
add
fisttps
mov
loopne
mov
negb
sbb
mov
mov
out
clc
pop
ficoms
mov
xor
push
sub
ljmp
lcall
jae
jb
pushf
jo
test
mov
das
jnp
mov
jecxz
lock
daa
scas
loope
ficoml
sahf
mov
lods
sbb
mov
sub
ljmp
daa
rorl
sbb
lret
or
push
xlat
xchg
in
cmp
scas
push
jo
inc
cmp
cld
xchg
and
fiaddl
scas
scas
fld
inc
movsl
call
pop
jns
ja
js,pt
xchg
inc
iret
xchg
mov
xchg
sub
das
push
xor
cmp
mov
adc
mov
lods
cmp
aad
xchg
gs
jle
sbb
out
fldt
cs
mov
sub
rol
sbb
pop
in
hlt
push
jmp
jnp
or
add
popa
sbb
jae
xchg
cld
pop
xor
jo
insl
orl
inc
and
loop
rcrb
nop
xor
dec
lea
notl
inc
inc
addr16
mov
stc
mov
jp
pop
ret
mov
les
daa
xor
rolb
fs
push
pusha
sarl
pop
mov
ret
jge
xchg
inc
pop
gs
into
outsl
mov
mov
aas
mov
push
mov
sahf
out
add
dec
mov
aam
push
or
xchg
std
or
clc
sbb
dec
loope
sti
out
mov
out
js
repz
jo
and
jge
sbb
lock
push
dec
popa
loop
lcall
or
jo
rcrl
pop
scas
nop
sti
dec
push
aad
fcoms
adc
jnp
ret
lret
mov
mov
aad
test
jbe
cmp
lock
push
dec
fwait
nop
jbe
out
sub
pop
sarl
sub
cmp
xchg
push
int
rcrl
shll
ss
pusha
outsb
sub
mov
lcall
jecxz
aas
cmc
imul
push
xlat
ficompl
and
les
divl
mov
mov
mov
pusha
sub
mov
dec
mov
dec
test
sub
lods
cmp
ror
pop
jo
fwait
add
stc
nop
lret
pop
sub
mov
jo
ljmp
mov
icebp
mov
fsts
daa
ret
push
xor
sbb
nop
xchg
mov
sti
cmc
xchg
jle
int3
push
mov
out
push
sub
mov
and
not
sub
notl
jge
ljmp
sub
out
xchg
loope
rcrl
adc
add
sub
aad
xor
bound
add
in
push
arpl
jmp
ss
ret
mov
cltd
pop
dec
mov
xor
lret
dec
rcrl
scas
push
push
rcl
ja
push
sub
in
sub
jmp
lret
add
in
adc
fcoms
ret
xor
hlt
outsb
sahf
and
xchg
leave
pop
test
mov
jge
pop
ds
mov
sbb
adc
jg
aaa
lods
jns
pop
mov
push
lods
sbb
ror
out
mov
push
push
xchg
add
lret
loopne
lds
jecxz
sbb
and
adc
dec
popa
inc
mov
sbb
lods
pop
pop
xchg
shlb
or
test
pop
push
adc
jnp
sbb
cltd
dec
xor
mov
inc
pop
out
rclb
dec
push
xchg
aad
pop
jnp
sahf
xor
js
es
mov
adc
stos
test
ss
sub
mull
test
push
fwait
xchg
push
or
ljmp
xor
mov
fadds
rorl
test
lret
mov
xor
sub
ret
and
dec
push
out
icebp
xor
mov
pop
cli
jns
push
pusha
mov
sbb
rorb
dec
jns
adc
pop
daa
ja
ficompl
add
sbb
or
mov
rcrb
nop
pop
movsl
out
sub
dec
scas
pop
jge
add
aad
fildl
mov
enter
outsl
inc
pop
out
xor
jns
lahf
jno
inc
cmp
or
dec
xchg
fldcw
lds
test
jge
push
sub
inc
clc
jo
out
mov
pop
shl
jl
mov
inc
push
xchg
leave
adc
cmp
andb
jecxz
hlt
lea
jo
gs
lods
xchg
in
cld
rcr
push
sbb
dec
test
mov
ret
sub
aaa
stc
inc
inc
adc
aam
and
dec
into
in
cmp
pop
rcrl
push
adc
sbb
or
mov
es
pop
movsb
dec
push
rcll
lods
cmc
push
xlat
in
ret
ret
daa
xchg
cmp
dec
mov
sarl
xlat
or
incl
lock
inc
mov
fwait
push
xchg
test
mov
push
xchg
sti
movsb
jae
dec
and
aas
push
fsubrp
addr16
outsb
adc
mov
negl
rclb
or
mov
mov
xor
mov
add
mov
inc
movsl
lcall
lret
inc
mov
hlt
push
pop
jmp
jbe
add
enter
jl
push
aaa
imul
push
iret
inc
add
ds
jns
dec
fnstcw
ficoml
jbe
fbld
inc
js
push
std
dec
rcl
out
pop
pop
nop
sbb
or
lcall
lods
int
nop
adc
xchg
mov
inc
aam
dec
cltd
sbbb
loop
js
push
das
mov
aad
out
jnp
lahf
stc
jp
popf
jg
xlat
lods
sarl
lds
imul
xchg
add
inc
mov
sub
popa
inc
nop
jp
int
and
adc
xchg
or
mov
jbe
mov
jg
nop
test
jne
mov
jne
dec
scas
xor
sbb
dec
mov
repnz
push
jne
push
mov
sbb
xchg
mov
inc
imul
pop
jge
jl
testl
jo
in
int3
mov
mov
jp
mov
shr
imul
mov
adcb
les
test
stc
imul
xchg
cmp
movl
je
shlb
xchg
in
sub
sbb
addr16
mov
and
mov
insl
mov
jle
das
dec
nop
push
les
mov
adc
sub
jae
jecxz
jle
test
fdivr
stos
or
inc
fcoml
jbe
xchg
and
fs
xchg
inc
jo
lahf
pop
sbb
xchg
shll
in
mov
pop
xchg
push
dec
mov
mov
jl
lcall
notl
int3
test
dec
jbe,pt
xchg
pop
push
sbb
push
xchg
pop
pop
lcall
or
popf
xchg
add
sarl
xor
jge
push
push
stos
mov
push
mov
dec
fimull
xchg
jns
add
cmp
call
stos
gs
xchg
loop
jne
adc
psllw
xor
popa
cld
int
sbb
pop
inc
ljmp
xor
pop
int
dec
mov
repz
outsl
xor
cs
xchg
scas
inc
je
ud0
lods
loopne
jns
push
movsl
xor
inc
jg
pop
call
xor
dec
movsl
mov
imul
je
addr16
dec
data16
nop
insb
inc
jmp
rcll
lds
or
pop
ficomps
adc
ja
push
push
adc
mov
sub
adc
mov
in
imul
insb
pop
lods
push
inc
sbb
inc
pop
push
adc
sti
pop
clc
xchg
add
jmp
test
jnp
scas
out
aas
mov
ds
mov
mov
jmp
imul
mov
mov
test
mov
rol
fcomp
dec
rcll
fisttpll
fadd
dec
xor
inc
inc
in
and
popf
dec
clc
sub
push
ja
sub
rorb
ds
fsubr
mov
not
pop
icebp
jno
push
fdiv
jmp
iret
imul
mov
adc
scas
xor
rcll
adc
cmc
decb
push
int3
lret
ret
dec
jecxz
stos
mov
or
push
adc
lods
in
and
xchg
aaa
jg
addr16
scas
sbb
or
and
mov
cmpsb
and
xchg
leave
test
jg
repnz
push
rclb
cmp
enter
mov
jmp
cmp
dec
insb
test
aam
mov
enter
pop
xor
sbb
inc
lcall
or
mov
push
cmpsl
aaa
xchg
mov
adc
xchg
jae
mov
xchg
xlat
nop
mov
adc
xchg
jg
jae
xchg
xlat
dec
xchg
flds
inc
icebp
fimull
lret
outsl
or
leave
adc
aas
mov
hlt
or
dec
jg
cld
ja
xchg
xchg
mov
fwait
aad
inc
cmp
xlat
mov
push
and
xchg
cmp
adc
rol
pop
lock
jns
scas
mov
sbb
jnp
jge
in
arpl
xor
lcall
push
daa
sahf
test
sbb
push
int3
or
data16
jo
mov
mov
mov
pop
fnsave
repnz
hlt
sbb
sbb
inc
inc
mov
sbb
scas
hlt
imul
mov
mov
jnp
lock
shll
jmp
pop
push
stos
pop
xchg
lahf
out
mov
je
xor
dec
and
out
ret
xchg
adc
sub
xchg
mov
jnp
and
jno
int
xlat
or
mov
xchg
push
inc
decb
inc
dec
cmp
sub
sahf
fdivl
and
adc
neg
or
mov
js
ja
mov
add
cli
push
mov
xchg
fimull
repz
xor
sahf
xchg
je
and
dec
es
adcl
and
adc
mov
xchg
repz
dec
mov
scas
inc
and
mov
xchg
addb
popa
xchg
call
ja
lret
inc
xchg
inc
dec
enter
push
cmc
mov
adc
sbb
popf
push
scas
or
push
inc
movsb
sbb
fsubl
dec
sub
arpl
loope
add
xor
cld
test
rcll
shll
fdiv
push
push
jmp
lret
adc
out
sahf
pop
aas
shl
loopne
fisubrs
aad
fidivl
mov
mov
in
xchg
adc
mov
jmp
test
xor
push
add
cmp
add
push
int
iret
in
adc
xchg
mov
xor
pop
aad
aam
aas
add
push
pop
test
nop
pop
cltd
lods
lock
cmp
nop
jns
test
push
dec
xchg
jbe
inc
cmp
f2xm1
popf
cmp
in
mov
fwait
push
nop
pmulhuw
xchg
adc
jne
dec
aas
push
loope
outsl
rolb
nop
pop
mov
jno,pn
cmp
sbb
sbb
push
xchg
xchg
jmp
dec
loope
cmp
mov
pop
mov
in
and
aad
and
or
inc
mov
mov
dec
pop
xchg
mov
inc
mov
cld
into
arpl
xchg
add
inc
mov
data16
bound
dec
xlat
mov
cmp
mov
stos
testb
iret
scas
or
jae
cli
jnp
inc
sub
fwait
jmp
icebp
sarl
rcll
pop
gs
ja
shrb
lock
shll
je
fwait
add
add
sahf
and
sbb
mov
leave
push
lods
add
daa
aam
imul
jae
dec
fnstsw
iret
fisttps
pop
ret
hlt
fidivl
fadds
imul
call
addl
arpl
add
cld
mov
nop
pop
fs
add
xorl
and
call
icebp
test
and
push
mov
xchg
jnp
mov
divl
sub
push
xchg
or
loope
lret
jp
mov
scas
repz
cmpsl
jno
sti
mov
mov
pop
pop
sbb
repnz
imul
aas
mov
sbb
jae
dec
add
inc
lds
push
fs
div
fisubl
lea
out
mov
mov
and
mov
test
xchg
mov
xor
mov
test
jge
sub
or
dec
push
std
or
stos
arpl
lea
dec
stos
loope
xchg
adc
mov
mov
out
adcb
xor
mov
jbe
dec
xor
int3
mov
mov
popa
jp
lahf
mov
cmp
insl
xor
out
and
inc
ret
cmp
mov
lods
xor
add
xchg
xchg
xor
add
shrl
xor
inc
popf
ss
fdivrs
mov
jle
mov
sub
fincstp
sarl
mov
fcoms
push
addb
inc
mov
aaa
test
fcoms
mov
xchg
xchg
scas
sbb
sbb
jge
add
or
xchg
shlb
add
xchg
sub
xor
rclb
leave
push
inc
add
movsb
push
jmp
lret
aam
dec
into
or
test
xor
test
mov
repz
fistps
adcl
fdivr
lret
jecxz
sbb
and
jbe
mov
jns
cmp
dec
cmp
bound
pop
adc
xlat
pop
js
test
ljmp
shll
cmp
xlat
cmpb
lret
push
mov
faddl
xlat
popa
aas
push
or
push
out
fwait
ret
shrl
add
cmp
push
sbb
dec
xchg
add
cmp
out
inc
sbb
lds
fbstp
pop
pusha
pop
xlat
adc
xchg
and
xlat
sbb
pop
xlat
nop
adc
dec
loopne
test
loope
pusha
lret
rcll
sub
xor
pop
clc
add
jne
fwait
mov
rcl
loop
movsl
aaa
xor
imul
dec
jecxz
pop
aam
and
out
add
add
xlat
xchg
shr
movsb
adc
push
pop
jmp
jo
xlat
sbb
scas
or
inc
lods
pop
lock
cmp
leave
ja
dec
nop
lahf
push
mov
popa
ror
imul
adc
in
incb
cmp
adc
push
jb
out
das
cmp
adc
jmp
sub
addb
or
sti
pushf
xchg
aad
jg
stos
jno
movb
mov
std
mov
stos
xchg
cmp
cwtl
jle
inc
insl
jp
mov
scas
adc
xlat
jb
mov
cmpsb
sbb
addr16
out
sarb
idivl
out
lahf
inc
test
or
push
out
xchg
je
and
aam
dec
inc
sub
mov
rcll
mov
jnp
gs
mov
sbb
adc
push
adc
and
shll
rcrl
incl
and
sub
mov
lahf
rorb
xlat
sti
das
popa
scas
cmp
mov
jne
jmp
xor
mov
and
push
sub
stc
sub
nop
dec
xchg
aaa
leave
cmpsl
mov
ljmp
push
adc
xchg
xlat
sbb
jge
iret
outsl
pop
and
das
fiaddl
or
mov
lahf
jb
and
lds
inc
cmpsb
cmpb
xchg
jp
mov
fcoml
mov
lock
add
movsb
jns
mov
insl
mov
xlat
icebp
sub
pop
push
adc
xchg
xlat
lret
push
mov
mov
or
jno
cltd
mov
xor
xlat
mov
mov
movsb
dec
addr16
jbe
dec
xlat
push
cmpsl
iret
cld
cmp
shl
jmp
and
or
xlat
xchg
sub
jnp
adc
aam
imul
mov
fistpll
mov
test
and
jns
aaa
xchg
insl
and
stos
push
sti
xchg
xchg
jl
outsb
popa
dec
outsl
lock
jns
mul
pop
orl
aaa
pop
paddw
test
mov
mov
ret
or
dec
mov
inc
xlat
pop
pushf
aaa
outsl
cmp
jle
cli
xor
mov
neg
jmp
xor
jno
sub
cli
mov
in
mov
test
cmp
into
cmpb
clc
add
add
sub
sbb
adcb
inc
jmp
out
sbb
aad
repz
mov
and
cli
sub
add
dec
fs
test
leave
daa
stc
mov
jmp
xchg
sub
idivb
inc
lcall
out
popf
nop
lods
xlat
sahf
xor
add
xlat
inc
jmp
jne
ja
scas
aad
xchg
pop
mov
pop
mov
out
xlat
fs
cmpsb
push
and
sbb
or
xlat
lea
jge
xlat
jno
fscale
leave
mov
dec
sarl
ja
xlat
adc
sub
addr16
in
push
pop
sarl
out
jle
out
lahf
sub
push
test
arpl
lods
or
inc
repnz
jae
xor
lahf
or
and
loope
xlat
mov
sbb
aad
int
dec
mov
in
push
mov
sbb
aam
or
mov
adc
push
xchg
inc
inc
xlat
jbe
add
pushf
pop
ret
xchg
negb
cmp
dec
jge
iret
cs
call
xchg
push
adc
lret
jae
aaa
sti
cmpsb
xchg
cmp
adc
out
dec
and
jmp
mov
pop
insl
hlt
in
mov
mov
mov
xlat
clc
out
in
subb
icebp
das
lahf
adc
wrmsr
or
sub
inc
lcall
jb
ret
and
xchg
pop
mov
sub
pop
xlat
cmpsl
aam
das
xor
cmpsb
mov
adc
fsts
pcmpeqb
stc
testb
push
addr16
loop
fstl
and
xlat
out
adcl
jp
sub
ficomps
dec
ret
pop
repnz
xlat
and
sbb
dec
fs
mov
dec
rorb
fwait
loopne
mov
add
pop
or
jnp
cmp
xlat
jno
rolb
dec
in
and
sbb
xlat
mov
or
rcrl
aad
jbe
lods
mov
sub
ja
xchg
insl
jae
lds
add
and
call
rolb
fwait
sbb
test
mov
push
aad
mov
xor
mov
outsl
std
mov
loop
jge
jle
cs
in
xlat
jp
es
xlat
mov
dec
outsb
iret
xor
xlat
jge
mov
lea
dec
mov
xlat
fwait
and
in
fdiv
add
xchg
addr16
or
out
sub
leave
jnp
in
mov
cmpsb
test
fcompl
push
push
adcl
outsb
lcall
mov
lcall
testl
pusha
fs
popa
iret
jmp
mov
mov
iret
push
hlt
aad
push
lock
xlat
push
inc
mov
push
push
iret
bound
add
dec
sahf
xlat
push
iret
mov
jmp
mov
les
adc
xlat
push
insl
mov
imul
inc
out
push
xchg
xlat
clc
push
test
mov
or
xor
inc
mov
jg
faddl
lods
fwait
push
xchg
fisubrs
icebp
mov
or
sbb
gs
xchg
adc
in
mov
cltd
gs
cmp
mov
std
mov
xor
mov
cwtl
fsubl
mov
iret
ljmp
push
lea
arpl
sahf
inc
aad
mov
and
adc
cmp
sub
cmp
mov
ret
and
jge
inc
add
sbb
push
jns
mov
out
lret
sar
lahf
lock
pop
mov
lds
dec
or
xor
pop
imul
cmp
pop
and
sub
mov
incb
pushl
mov
fldl
xor
fwait
pop
and
mov
xor
into
shrb
call
out
sbb
add
ss
iret
jmp
fbstp
test
inc
shrl
insb
sub
icebp
adc
lock
mov
lods
cmp
push
jge
neg
jnp
sub
cmpsb
mov
pop
bound
dec
lahf
xlat
lahf
loope
dec
repnz
push
inc
aas
nop
mov
and
xchg
mov
push
add
leave
sub
sahf
cmp
test
sub
lahf
repz
js
icebp
adcb
sahf
xchg
sub
out
hlt
hlt
mov
cmp
push
dec
jg
jns
jne
pop
fs
and
call
jmp
pop
lahf
test
xor
jecxz
iret
xor
insl
imul
push
xor
movsl
mov
sarb
imul
mov
pushaw
aam
repnz
mov
or
adc
in
jns
popf
cmp
scas
xor
mov
add
mov
fdivr
fs
popf
xor
repz
ja
jmp
movsb
jns
je
sub
push
sbb
rolb
outsl
insb
out
aaa
add
sahf
sbb
adc
lds
jecxz
jmp
xchg
xchg
bound
pusha
loope
stos
push
cmp
or
lret
sub
mov
mov
jg
aam
out
into
adc
fwait
sysexit
test
push
rorb
lea
xor
loope
pop
aam
out
insb
in
push
cltd
mov
push
cwtl
jnp
test
xchg
push
push
cmpsl
xchg
xor
dec
jne
lock
repnz
daa
sub
inc
iret
scas
xor
scas
dec
sbb
nop
pop
push
cmpsb
scas
sub
jae
ss
lret
jg
jb
mov
adc
addr16
rcr
cmc
test
aas
sbb
sub
pop
xor
pop
mov
mov
leave
pop
cmp
pushl
xor
fildl
jge
push
mov
push
lods
push
in
xor
lret
adc
test
mov
sarl
movsb
ret
push
movsb
add
jmp
addb
cmc
xchg
mov
fisttps
mov
shll
arpl
push
mov
inc
and
sti
repz
push
add
and
jge
movl
ljmp
add
ljmp
jmp
ss
sub
outsl
xor
js
pop
cld
repnz
xchg
xor
inc
sbb
xor
imul
sbb
push
test
inc
fdivr
pop
shlb
push
jmp
in
xor
jle
hlt
pop
adc
cwtl
aam
xorb
jg
xchg
fsts
lahf
inc
xor
loopne
les
hlt
jbe
pop
fidivl
ja
mov
dec
jecxz
cmp
in
ds
push
repnz
push
cli
mov
js
mov
mov
outsb
jne
mov
sbb
cld
popl
adc
push
nop
aad
inc
out
and
jg
jp
push
and
test
into
shrb
pop
fmul
stos
mov
rcr
xchg
faddl
fstps
lods
inc
add
gs
pusha
sub
mov
pop
mov
push
xor
mov
mov
sbb
idiv
push
sarl
push
fisttps
mov
aad
mov
lds
out
xor
cld
dec
in
imul
jnp
daa
sbb
test
ss
shll
xchg
jmp
pusha
ret
jne
push
pop
sub
lds
add
lock
or
ret
mov
push
es
add
int3
sub
dec
jge
push
mov
push
mov
sub
xchg
sub
into
mov
pop
xor
jno
push
repnz
sbb
testl
jmp
popa
lods
fs
out
sbb
pop
lods
pop
xor
in
pusha
adc
insb
mov
cmp
scas
adcl
jno
jae
xchg
test
pop
fadds
dec
jae
hlt
test
adc
sbb
inc
ja,pt
xor
or
xor
jl
mov
mov
sub
dec
sbb
inc
fs
sub
jns
test
jo
and
test
adc
and
out
mov
nop
sarl
repz
xchg
add
nop
jbe
icebp
adc
stos
add
mov
and
mov
aaa
dec
test
dec
mov
or
test
cmp
pop
arpl
xor
pop
push
mov
mov
aad
add
fisttpll
inc
aaa
pop
add
or
ds
or
shrl
mov
jge
mov
fistl
pop
nop
dec
stos
scas
in
repz
ret
in
cmpsb
in
movl
lock
sbb
push
stos
pop
sbb
mov
adc
lds
inc
dec
sub
push
or
sbb
testb
push
pop
lods
sbb
dec
pusha
ss
adcl
out
adc
add
imul
inc
imul
imul
inc
xchg
test
push
jns
in
repnz
mov
outsb
testl
hlt
mov
pusha
in
mov
mov
nop
add
out
mov
and
inc
and
lock
add
rolb
mov
pop
idivb
aaa
stc
push
imul
mov
lahf
xchg
push
adc
mov
inc
xor
nop
mov
shll
cs
ljmp
fucomp
jmp
mov
xor
jnp
out
sub
jge
mov
pop
inc
lahf
jecxz
hlt
add
in
out
loopne
add
or
nop
in
xchg
jg
adc
rol
cmp
xchg
pop
dec
cwtl
rorb
mov
sahf
and
test
int3
jp
fadd
jle
push
jmp
shl
adc
jle
sub
dec
fidivrl
adc
in
jg
nop
jb
or
outsb
lret
mov
cli
subb
inc
xchg
scas
jne
das
xor
pop
fisttps
mov
ss
subl
pop
push
push
cld
mov
inc
xchg
add
jge
leave
xchg
imul
lret
sbb
mov
xlat
cs
leave
sub
sub
lret
cmp
inc
jb
xchg
movsb
adc
jecxz
adc
adc
gs
push
insl
lea
sub
dec
inc
negl
jbe
sub
ljmp
inc
or
mov
mov
and
inc
inc
ljmp
les
inc
push
jb
jge
into
push
mov
data16
push
jnp
loop
sub
adc
fstps
mov
outsb
mov
lcall
lods
iret
imul
or
imul
mov
cmpb
out
mov
aas
nop
cmp
sub
and
cmp
mov
or
add
adc
mov
push
leave
insb
adc
repnz
bnd
adc
jle
add
daa
nop
xor
add
xor
fs
pop
ja
out
pushl
mulb
or
push
stos
pusha
adc
nop
mov
sub
fcmovbe
pop
jae
push
int3
jmp
cmp
pop
mov
adc
sub
mov
in
jne
lods
push
adc
loope
leave
nop
xchg
aas
out
out
or
in
dec
pushf
add
mov
inc
inc
and
jmp
nop
gs
pop
lret
sbbb
pop
pop
into
call
into
cmp
xchg
daa
cltd
pop
xchg
rorl
test
lcall
sub
fsubrs
and
aaa
and
adc
pop
cli
imul
scas
inc
mov
rcl
or
sub
mov
loope
fimuls
iret
jg
mov
pop
xor
notb
scas
shrl
std
xchg
sbb
das
pop
imul
sub
loopne
mov
lock
repnz
aas
aas
dec
out
addr16
mov
fs
mov
call
or
ret
test
popa
mov
add
mov
sbb
push
faddl
pop
mov
push
mov
fidivl
dec
mov
cli
fmul
jge
inc
jmp
or
daa
in
mov
jnp
adc
mov
pop
enter
or
mov
and
sub
rorl
les
aad
lods
dec
sbb
sbb
lock
adc
mov
sub
out
mov
push
add
mov
adc
jbe
ss
cld
scas
bound
mov
jbe
lock
add
ja
xor
and
ss
sub
cli
mov
in
filds
cmpsb
jp
jg
mov
mov
repnz
xor
gs
jl
repnz
aaa
mov
mov
daa
or
pop
inc
mov
mov
sbb
pushf
ja
sbb
jnp
repz
xor
inc
das
aad
cli
lods
inc
mov
add
and
inc
outsb
scas
aad
push
in
mov
pop
mov
imul
ret
xchg
sub
test
jns
imul
dec
jnp
mov
lahf
xor
in
jne
mov
mov
or
shll
inc
ds
push
xlat
mov
adc
clc
cmpb
cmp
mov
loop
jnp
xor
mov
dec
lea
push
xchg
jecxz
fnstenv
push
nop
push
cmc
jb
sbb
into
inc
cmp
adc
xor
fiaddl
pop
push
mov
cld
cmp
xchg
or
ret
outsb
bound
pop
pop
add
inc
mov
addr16
pop
inc
sahf
mov
jne
lret
das
or
into
in
push
mov
ljmp
adc
pop
adc
mov
sub
mov
into
lcall
data16
pop
inc
loope
frstor
imul
or
or
cmp
mov
popf
jnp
sub
ficomps
sbb
mov
hlt
gs
out
push
pop
ljmp
cmp
or
push
repz
mov
outsb
sahf
mov
fs
mov
xor
repnz
xor
jb
ja
pop
jecxz
shlb
ffreep
mov
xor
dec
inc
xchg
mov
add
neg
push
ret
mov
out
and
int3
nop
and
mov
mov
lret
outsb
aaa
int3
xlat
xchg
stos
sbb
nop
and
mov
shll
push
sub
out
cmp
fs
out
xchg
xor
nop
lds
pop
rol
and
ds
iret
stos
call
jno
ret
sbb
mov
adc
test
adc
xor
test
popf
xchg
jae
fsts
xchg
pop
jne
aad
imul
fmul
inc
inc
dec
adc
inc
scas
out
mov
aad
aad
dec
jne
repnz
adc
mov
testb
pop
cli
mov
mov
and
xchg
aas
mov
enter
bswap
mov
inc
push
das
mov
mov
fs
das
out
dec
dec
pop
add
sbb
clc
call
cld
repz
cmp
cmp
int3
jne
stos
pushf
adc
add
or
xor
pop
jmp
sub
stos
pop
pusha
or
pop
jo
fsubrs
inc
inc
stos
sub
sarl
sub
adc
aam
pop
add
iret
popf
fisubl
outsb
ret
inc
fs
jmp
rcr
shrb
orl
pop
test
test
aad
xchg
mov
mov
or
jg
aas
lea
adc
sub
les
mov
rcll
aam
in
cld
popa
or
mov
push
pop
kmovw
in
pop
jns
mov
xchg
add
and
stos
or
repnz
ja
add
adc
aad
push
and
test
add
sarb
push
jnp
xchg
adc
sahf
cld
add
pop
mov
shlb
mov
pop
shlb
mov
ss
xlat
xchg
xchg
push
lcall
and
test
push
out
xor
and
faddl
pop
enter
dec
lock
fcmovbe
adc
movsl
in
clc
out
push
pop
adc
lods
or
scas
imul
jge
mov
xor
xchg
lock
mov
test
jl
enter
xchg
xchg
mov
pop
ret
mov
sbb
xor
sub
repnz
shlb
push
sahf
and
clc
adc
dec
add
daa
into
and
or
dec
cmp
mov
add
or
pop
mov
adc
dec
sub
xchg
shlb
cmp
lods
pop
lcall
push
inc
pop
pop
fwait
dec
cli
xchg
mov
pop
enter
scas
adc
push
pusha
jmp
jp
pop
adc
nop
icebp
je
iret
xchg
inc
inc
push
pop
in
roll
pusha
mov
mov
mov
xor
fistpll
nop
js
popl
int
xor
inc
jno
xchg
inc
mov
maskmovq
imull
scas
cmp
nop
outsl
jl
roll
test
test
sbb
dec
xchg
xorl
or
movsl
rolb
fmul
xor
mov
add
xor
js
sub
aas
fprem
pushf
push
mov
cmp
loopne
and
sbb
lds
movsl
pop
jmp
inc
sahf
iret
cmp
mov
les
jo
js
xchg
mov
sahf
lods
leave
addr16
repnz
ja
xorb
pop
insb
xchg
data16
jno
rorl
lret
mov
stc
imul
sbb
mov
imul
cmp
push
mov
push
push
ljmp
xor
jno
imul
sub
stos
xor
add
lods
sub
mov
ljmp
std
cli
dec
jle
jl
and
sub
pop
lea
clc
inc
std
loope
cld
jmp
popl
scas
fwait
adc
jmp
sub
add
imul
jge
test
mov
mov
xor
lahf
bound
jmp
dec
mov
pop
cltd
data16
repz
dec
int3
mov
adc
inc
stos
js
cmp
fwait
mov
jbe
bound
lret
sub
inc
lods
imul
sub
jl
imul
mov
sub
xchg
jmp
fisubrs
inc
fwait
sbb
sbb
dec
cmp
aas
je
ljmp
test
cmp
mov
scas
outsb
inc
ja
or
rolb
cmc
jge
push
push
jmp
jb
add
imul
adc
hlt
mov
jecxz
xlat
ret
aam
jno
push
inc
add
sbb
in
movsl
lcall
popf
mov
jb
jne
and
add
xlat
adc
pop
fmul
xchg
mov
scas
mov
jno
inc
jge
aaa
mov
push
xlat
int3
push
mov
jmp
and
inc
outsl
xor
mov
inc
scas
testb
cmp
cli
xlat
jge
sti
lahf
mov
cmpsb
sub
xlat
enter
dec
js
xor
cmpsl
mov
and
in
out
mov
aam
wbinvd
xlat
and
add
dec
mov
call
out
jns
push
pop
dec
push
and
cmp
jne
into
fisttpll
das
shll
daa
enter
mov
orl
je
in
xor
fcmovnbe
pop
push
int
mov
pop
movsb
xlat
lds
ror
or
call
loope
pop
outsb
movsl
mov
pop
mov
xchg
lock
and
filds
xor
mov
imull
xlat
sbb
add
jb
mov
mov
xlat
fs
into
add
gs
lock
das
repz
or
jnp
xlat
hlt
aas
out
shll
push
inc
enter
push
xlat
fwait
cmp
insb
fimull
arpl
call
xchg
sub
stc
rcrl
push
and
xlat
lahf
push
pop
push
shrb
es
fs
sub
out
call
shl
sbb
xor
or
mov
sbb
cmpl
lods
mov
test
fwait
addl
adc
mov
xchg
sbb
aaa
test
test
ret
xlat
mov
ja
shlb
stc
hlt
rorl
addr16
mov
sub
jae
andl
xchg
cmp
test
cmp
jmp
fwait
adc
adc
hlt
lahf
inc
ja
daa
aaa
xlat
pop
lods
adc
push
xchg
xlat
cltd
inc
fnstenv
xlat
popa
mov
pop
push
xchg
js
xlat
push
mov
push
in
mov
in
jge
inc
adc
call
or
pop
sbb
mov
dec
mov
daa
pop
in
aam
sbb
out
notb
sbb
mov
mov
jae
mov
push
mov
push
pop
pushf
in
xlat
and
cwtl
repnz
out
out
inc
fs
xlat
pop
and
in
push
orl
xlat
leave
cli
xchg
fisttpll
jne
xlat
pop
loopne
cld
sub
sub
roll
ja
mov
mov
pusha
loope
dec
jg
mov
je
push
push
add
xlat
xchg
sbb
sbbb
push
sub
xchg
push
xlat
inc
or
lret
ljmp
xor
shl
mov
push
push
lods
mov
xlat
push
sbbb
out
xor
jmp
rorb
repz
aam
or
movsb
mov
push
shl
jo
xchg
jae
push
push
cmp
xlat
repnz
mov
mov
test
push
sahf
ret
iret
outsb
pop
mov
push
out
mov
and
cmc
adc
rcll
inc
negl
pop
outsl
insl
loopne
add
test
cli
adc
xlat
dec
stos
or
daa
pop
jnp
sub
pop
shrl
pop
mov
xor
inc
xlat
lods
call
loopne
xlat
xor
ss
movsl
or
xlat
push
fwait
xorb
loopne
add
dec
mov
lock
pop
push
mov
ds
rorb
jg
imul
xchg
xchg
subb
aaa
or
inc
shl
adc
lar
or
outsb
lock
mov
sbb
add
mov
cmp
mov
nop
arpl
push
mov
mov
cltd
lret
repz
in
sub
jbe
bound
xchg
cld
repz
pop
mov
pop
lods
sub
gs
int3
rolb
loop
pop
xchg
cmc
adc
jns
stos
cmp
aam
mov
rol
and
push
imul
ljmp
in
or
loopne
aad
xor
imulb
xor
stos
push
cwtl
vmread
out
adc
xor
jmp
xor
inc
add
sahf
iret
int3
inc
jns
fs
nop
je
sub
ror
xchg
js
lcall
push
int
ja
xchg
sub
sbb
jae
xchg
cmp
pusha
jo
jmp
adcl
inc
addb
mov
fcmovbe
push
xchg
or
imul
adc
cmp
mov
loope
int3
add
mov
inc
scas
push
push
in
mov
loop
rcrb
out
leave
test
or
xchg
shl
xchg
or
test
ja
sbb
and
and
nop
xchg
call
pop
jnp
shlb
pushf
sbb
xlat
imul
push
mov
scas
int
pop
xor
pop
mov
jge
jle
sub
mov
cwtl
scas
ss
out
js
mov
shll
movsl
icebp
test
inc
inc
jns
sub
popf
and
mov
xchg
orl
pop
icebp
jecxz
pusha
inc
add
addr16
shrl
nop
add
xorb
bound
sub
or
dec
sarb
sub
mov
push
mov
sub
push
rcl
push
pusha
sub
lock
adc
and
addr16
ds
push
leave
out
push
jae
sbb
dec
nop
jmp
add
ljmp
xor
sbb
cmp
aas
and
aas
daa
stc
not
movsb
mov
push
lcall
and
aam
jo
ds
lds
icebp
mov
cltd
shlb
std
mov
ror
lock
mov
imul
push
xor
jmp
aad
mov
dec
out
sbb
pop
repnz
not
xchg
push
mov
test
add
into
pop
xchg
cmp
sub
sbb
stos
sub
aas
cli
jg
xchg
fimull
fmull
jp
push
addl
jne
nop
jge
mov
mov
and
xor
scas
jnp
or
cmp
lret
repnz
mov
inc
mov
jne
lret
leave
mov
jmp
and
sub
and
pop
inc
ffreep
notb
or
cmp
push
jb
jns
out
mov
pop
push
cmp
mov
int
add
adc
xchg
mov
sub
mov
add
mov
or
sahf
jbe
loop
in
scas
jmp
jno
leave
sarl
into
mov
push
mov
in
pop
aad
ret
repnz
addr16
adc
mov
and
cmp
sbb
in
mov
ret
mov
sbb
adc
repz
mov
aam
xor
out
fimull
repnz
fisttpl
or
mov
es
jbe
mov
int
fiaddl
sbb
inc
mov
pop
push
push
leave
dec
inc
push
dec
enter
in
mov
out
insl
xor
outsb
xor
arpl
mov
jnp
xchg
lds
or
rcrb
push
into
inc
jb
stos
mov
test
push
sbbl
or
xchg
xor
pop
xchg
pop
and
shrb
rcll
add
lock
sbb
sbb
jns
pop
es
lock
push
mov
adc
push
neg
dec
xor
sbb
cmp
nop
and
fisttps
mov
stos
sub
pop
pop
jnp
pusha
fbld
nop
adc
push
mov
loope
pop
jmp
adc
push
data16
jno
xchg
sub
in
stc
sub
fwait
data16
fnstenv
into
fwait
and
pop
and
insb
ficompl
or
sahf
xchg
jmp
iret
dec
in
lcall
mov
lahf
gs
mov
jb
adc
dec
fisubl
inc
inc
aas
inc
mov
out
pop
xor
sbb
and
repz
jo
add
mov
mov
xor
lret
pop
add
mov
inc
cld
jge
xchg
push
mov
dec
inc
add
es
scas
and
cld
mov
neg
stc
test
inc
xor
rcl
pop
jae
in
or
mov
push
xor
add
outsb
and
or
inc
clc
add
adcb
notb
bound
in
std
adc
push
test
xor
cltd
sbb
mov
inc
pop
int
mov
adc
out
xor
les
aas
jne
xchg
push
push
xchg
test
inc
data16
jge
mov
xchg
add
add
scas
dec
add
cmpsl
jno
leave
dec
pop
mov
or
ljmp
jmp
fwait
pushf
xlat
daa
imul
xlat
push
scas
js
fadd
sub
adc
push
push
sarl
in
stos
inc
xlat
mov
jae
add
pop
mov
jns
xlat
lret
outsb
loope
cmpsb
orb
or
rcl
xchg
std
dec
adc
lock
sbb
xlat
mov
repnz
xlat
hlt
jp
and
pop
push
xlat
pop
mov
jo
movsl
xlat
pop
pop
add
jmp
jnp
insb
jne
scas
popl
cmp
ds
andnps
test
or
or
sbb
jle
adc
mov
mov
out
mov
mov
inc
iret
das
fisubl
xor
insb
rcr
push
sbb
in
and
cmpsb
adc
inc
xlat
jge
ds
mov
pop
shll
popa
sub
in
shrl
jns
ds
lret
push
fadds
mov
pop
sbb
mov
adc
aad
sbbl
cmp
pop
pop
cmpsl
fnsave
clc
shlb
mov
or
scas
push
mov
je
xlat
cmp
test
mov
enter
popa
fadds
idivl
mov
xchg
mov
jle
loopne
jp
mov
dec
mov
mov
cmp
sti
push
xchg
inc
adc
iret
icebp
fmull
dec
in
xor
xlat
dec
and
push
pop
xchg
xor
sub
xlat
out
or
push
or
xlat
lret
jns
cmp
sbb
xor
iret
les
xchg
pop
add
and
popa
inc
mov
push
in
test
add
std
push
xchg
jge
jo
fmul
stos
es
push
mov
fsubrl
in
cwtl
pop
mov
mov
dec
pushf
push
shlb
outsb
repz
dec
les
sbb
in
in
mov
pop
mov
dec
repnz
xchg
sbb
cmp
addl
mov
insl
dec
mov
dec
test
out
lea
sbb
mov
sbb
mov
jle
jns
sub
xchg
pop
loope
adcb
sbb
out
int3
nop
push
cmp
repz
jb
mov
daa
add
add
shrl
xchg
pop
lods
cmpsl
arpl
jmp
or
mov
mov
adc
push
mov
mov
pop
sub
dec
push
ror
movsl
xor
push
addr16
xchg
addr16
push
cmp
mov
mov
push
cltd
add
xchg
sbb
ss
testl
xchg
mov
mov
cmp
adc
cld
aaa
or
xchg
gs
das
mov
mov
ret
enter
jae
mov
or
inc
cli
add
aaa
xchg
adc
imul
sti
movsb
into
cmpsl
inc
jmp
xor
xorb
repnz
mov
mov
inc
jg
xlat
addr16
and
jge
shll
and
inc
pop
mov
cmpsb
inc
xchg
gs
push
stc
pop
mov
pop
fsubl
xor
sub
mov
mov
pop
subl
xchg
sbb
test
sbb
jno
cwtl
pop
nop
into
and
mov
jne
mov
pop
out
insl
push
popf
aad
cwtl
fldenv
int
cld
nop
mov
in
add
mov
insl
add
inc
jae
cmp
push
stos
add
mov
out
aas
sub
aam
dec
cld
mov
inc
in
sbb
cmp
lret
jl
fs
and
hlt
dec
lds
or
and
xor
push
or
aas
xchg
or
mov
ret
pop
out
xlat
out
inc
cmp
and
shlb
andl
and
and
mov
and
jmp
jnp
faddl
negl
mov
and
nop
outsl
dec
xlat
and
sub
popl
lds
xlat
ja
and
aas
mov
pushf
repz
ja
inc
stos
iret
sub
xlat
loop
adc
jb
pop
xchg
cmp
push
fwait
mov
fs
loop
loope
addb
std
xlat
imul
cmp
rcrb
lahf
in
aaa
fyl2xp1
push
out
ror
je
shlb
mov
adc
test
cmpsb
lods
daa
mulb
pop
fmull
ljmp
xlat
repz
pushf
repnz
jbe
xor
cmp
jo
xor
xchg
jmp
je
cwtl
jns
cli
dec
mov
stos
push
dec
shll
pusha
data16
mov
clc
sbb
jecxz
je
dec
xlat
inc
xor
xlat
jne
jb
lods
mov
lock
shlb
dec
mov
cmc
iret
mov
test
mov
ss
sar
jnp
push
mov
jle
inc
nop
mov
loopne
lahf
mov
mov
sub
idivb
jo
lahf
xchg
xlat
mov
mov
test
mov
pop
or
xlat
sbb
or
jno
loope
xlat
push
orb
cltd
cld
imulb
scas
mov
insl
stc
ret
add
std
rorb
bound
lahf
or
jns
jnp
dec
sub
xor
xchg
push
ljmp
les
test
loopne
dec
push
fsincos
nop
pushf
xlat
sbb
mov
jmp
push
insb
lea
xchg
xlat
sarb
int
xlat
popf
shlb
pusha
cltd
daa
dec
xlat
sub
pop
pop
sbb
pop
testb
jns
stos
daa
js
cmpl
xor
lea
cld
lahf
arpl
aad
and
aaa
imul
xlat
jns
mov
xchg
data16
fwait
test
ss
imul
adc
scas
adc
ficoml
and
in
daa
mov
int3
cli
test
jecxz
add
scas
rclb
mov
xlat
lret
inc
popa
cmpsb
out
stos
cwtl
les
int3
xchg
ljmp
aas
inc
lods
decl
sub
je
mov
pop
pop
xchg
fwait
insl
xor
aam
lods
adc
mov
in
mov
outsl
jle
es
push
mov
scas
imul
icebp
lret
pop
adc
add
sbb
test
mov
leave
in
int3
mov
jno
jmp
xchg
mov
xchg
gs
add
sbb
call
lret
rcrl
pushf
pop
repnz
scas
mov
shrl
adc
dec
xor
idiv
pop
push
scas
mov
arpl
divb
push
pop
testl
int
movsb
out
xchg
ljmp
inc
inc
xor
fists
or
cmp
insl
fldt
pop
jl
sbb
pop
rcrb
mov
mov
dec
sub
popf
adc
sub
in
xchg
in
subb
xor
lcall
mov
and
inc
pusha
dec
jo
push
mov
rcll
or
cwtl
inc
jecxz
mov
fmuls
sbb
fsubrl
daa
imul
mov
in
aad
xchg
adc
pop
pop
test
nop
sti
cmp
jge
pop
push
arpl
scas
dec
mov
add
inc
rclb
inc
add
cmp
pop
pusha
sti
and
jg
push
pop
jae
mov
pusha
hlt
jle
andl
push
xchg
hlt
adc
test
sbb
int3
in
mov
push
and
xchg
clc
pop
cltd
mov
inc
xor
or
in
xchg
xchg
adc
push
mov
fimull
lock
xor
out
jge
and
mov
stos
mov
scas
jle
repnz
adc
inc
nop
movsl
adc
cmp
in
xor
mov
and
push
sub
fdivr
or
scas
inc
aaa
std
adc
push
push
out
gs
pop
pop
stos
jo
das
faddl
call
cli
xor
jns
shl
jmp
dec
popa
push
addl
or
jp
js
xchg
es
add
push
frstor
icebp
ds
into
loope
mov
and
mov
or
mov
mov
mov
xlat
leave
xchg
pop
xchg
dec
jg
xor
mov
push
xlat
es
pop
lds
mov
mov
dec
and
add
xlat
test
dec
sahf
or
sbb
and
inc
xlat
pop
xor
addr16
es
mov
add
jo
lahf
arpl
daa
pop
or
adc
inc
cli
push
push
xlat
push
pusha
mov
xlat
out
or
scas
xlat
repz
mov
popf
mov
insb
pop
push
repnz
xor
push
xlat
mov
mov
pushf
jb
and
jnp
xor
mov
or
cs
xlat
fs
push
or
adc
xlat
cmpsb
imul
adc
push
std
les
neg
cmpsl
jo
inc
inc
jae
in
lret
hlt
pop
mov
mov
pop
push
or
xchg
call
cmp
mov
dec
adc
xchg
outsl
leave
adc
test
mov
sub
dec
cmp
xor
push
shrl
cli
arpl
xlat
and
notb
pushf
dec
dec
int
mov
insl
outsb
xlat
loop
inc
dec
js
dec
out
dec
jl
mov
jecxz
sbb
dec
or
mov
scas
rcrl
imul
dec
jnp
xlat
ljmp
pop
aas
adc
mov
ss
int3
out
mov
xchg
xor
add
xlat
add
ret
sbb
into
add
cltd
ljmp
xlat
jo
lea
xlat
idivb
test
lret
xlat
call
imul
lret
cmc
cmc
popf
rcrl
ret
jp
pop
xor
xchg
push
std
adc
shlb
dec
xchg
inc
push
sar
pop
jle
rcrb
lahf
pop
iret
sarl
repz
wrmsr
jg
dec
icebp
aam
iret
out
popf
mov
mov
xlat
js
sbb
jl
iret
scas
pop
mov
int3
pop
xor
in
icebp
adc
cmp
mov
xlat
xor
xchg
test
adc
xlat
mov
and
sub
add
int
add
mov
jns
sub
stc
imul
outsb
xchg
sub
icebp
adc
xlat
dec
sahf
sbb
xchg
rorb
out
sbb
inc
push
test
pop
or
sbb
pusha
fisubrs
xlat
push
dec
in
push
iret
and
rclb
xchg
rcrl
push
iret
mov
ljmp
xlat
lret
xor
add
enter
rorl
and
pop
into
popf
or
lret
outsl
nop
adc
jg
pop
sbb
enter
aas
xor
repnz
sti
mov
in
sarb
dec
mov
int3
daa
adc
pop
jno
adc
xchg
lahf
sbb
push
roll
mov
and
ret
xor
stos
jbe
add
xlat
add
cmp
or
fsub
xchg
add
sti
lock
and
aam
cmp
push
mov
xlat
inc
je
dec
pop
testb
pop
lock
pop
xlat
jne
bound
addr16
xlat
adc
jae
call
lcall
xlat
paddb
pop
es
pop
mov
and
mov
pop
push
ret
mov
outsb
je
iret
lret
mov
rcll
mov
xchg
imul
insl
adc
mov
shll
mov
ficomps
xlat
out
std
mov
fists
xchg
xlat
pop
popa
mov
sub
gs
lahf
inc
or
pop
push
mov
movsl
std
xlat
xorl
shlb
dec
inc
icebp
cmp
jns
jmp
stos
push
xchg
xchg
outsb
cmp
push
lahf
sub
and
cmp
xlat
adc
shrb
inc
addr16
mov
lea
adc
push
xchg
xlat
push
pop
mov
movsl
iret
sub
pushf
fs
xor
popf
shl
lahf
jl
fcmovnbe
repz
test
pop
insl
xlat
negl
jo
jno
rclb
inc
int3
push
adc
shrl
out
fldenv
jnp
xlat
orb
mov
xlat
arpl
mov
out
xlat
dec
addb
cwtl
mov
lahf
mov
xlat
sub
push
test
and
xlat
call
iret
dec
push
mov
imul
xlat
lahf
popl
xchg
add
scas
shlb
and
shll
ret
ljmp
aas
movsb
loopne
and
xlat
stos
test
es
adc
xlat
loope
jmp
loop
dec
jp
xor
scas
std
pop
push
js
stos
aam
in
push
test
dec
lock
jbe
pop
jg
sub
mov
mov
or
xor
add
sbb
in
jmp
push
xlat
stc
push
jl
dec
jo
xlat
lock
push
xchg
sbb
movsl
adc
adc
and
inc
adc
or
lods
xor
popa
push
sbb
hlt
mov
insb
aaa
insl
xlat
or
mov
sbb
outsb
cmp
addr16
sub
shl
dec
repz
inc
dec
aam
cld
push
scas
minps
pop
or
lcall
imul
call
or
xlat
or
cltd
inc
jl
adc
mov
xlat
sub
pop
and
addr16
lds
xlat
push
inc
fcomp
in
xor
xchg
sub
jbe
stos
cmpsl
lret
outsl
pushf
mov
sbb
xchg
pusha
jae
push
xlat
imul
and
pop
push
lret
ss
or
mov
mov
adc
pop
inc
test
add
inc
sbb
mov
rcl
pusha
stos
dec
xor
in
andb
xor
scas
adc
push
push
and
xlat
sub
xor
popa
or
sub
repz
push
mov
je
enter
cs
push
ljmp
sbb
adc
dec
sarb
cld
and
mov
mov
int
enter
sbb
xlat
push
loopne
fiadds
test
jp
cld
push
sub
inc
xlat
or
inc
subl
or
mov
xlat
lahf
mov
push
imul
andb
adc
or
jne
xlat
add
sahf
and
cmp
je
lret
adc
xchg
push
mov
xlat
je
sarb
mov
xlat
scas
hlt
inc
sti
lcall
adc
lret
push
rcl
mov
jmp
std
nop
fs
mov
or
adc
lds
adc
xchg
imul
mov
test
mov
add
inc
dec
popa
sbb
ret
out
and
xor
jecxz
scas
adc
cmp
mov
or
ficompl
pusha
test
bound
xlat
insb
les
addr16
pop
jno
push
cmp
mov
xor
arpl
jbe
fwait
popf
fucomp
or
xlat
add
mov
in
or
stos
gs
push
mov
push
addr16
xchg
jge
aam
sub
lods
xlat
xor
xor
dec
lcall
mov
push
or
popf
adc
sbb
xorl
xor
repz
ja
mov
daa
xchg
mov
scas
add
xor
cmp
pshufw
jno
scas
lahf
outsb
fldlg2
mov
mov
mov
ds
pop
icebp
or
pop
test
pop
push
mov
sbb
sub
adc
jg
jnp
into
xlat
mov
push
dec
and
inc
push
hlt
mov
clc
jae,pn
mov
add
push
mov
lea
test
xlat
jne
fidivs
sub
jmp
cltd
adc
jl
cmp
not
scas
nop
cli
imul
das
sbb
pop
push
xchg
inc
sti
lods
shll
out
pusha
clc
xlat
rorb
lret
push
dec
gs
and
std
div
adc
pop
jnp
pop
sub
push
stc
adc
aaa
xlat
test
or
and
push
lret
inc
out
das
iret
into
aad
je
push
xor
or
lods
inc
xlat
cltd
sahf
xor
add
lret
inc
fsubrs
aas
push
xlat
xchg
dec
icebp
pushf
jnp
ret
xor
lret
iret
cmc
enter
aad
fisubrs
mov
adc
jmp
pushl
insl
sbb
andnps
loopne
lea
sahf
stc
roll
movsl
pop
aaa
push
stos
leave
pusha
pop
jno
mov
sarb
and
dec
sub
inc
call
rcll
out
xchg
adc
fld
movsb
loopne
adc
pop
rcr
jg
bound
call
les
imul
xchg
out
outsb
or
ret
arpl
jmp
jno
sub
mov
flds
add
pop
out
push
movsb
das
lods
inc
orb
and
imul
jae
mov
clc
stc
jo
sbb
sub
mov
fsts
repz
sahf
inc
pop
sub
and
xchg
out
pop
cld
sub
shr
in
ret
add
dec
mov
xlat
imul
jg
jns
dec
sub
dec
push
adc
sbb
mov
pop
xchg
mov
sub
fld
loopne
push
nop
outsb
mov
shll
imul
inc
xchg
mov
mov
bnd
xchg
das
push
test
addr16
jnp
sbb
js
loope
mov
pop
int
push
dec
repnz
into
negl
cmc
sbb
imul
xchg
outsb
es
push
mov
cmp
xor
inc
push
and
ja
fsubs
mov
aaa
pop
shrd
or
sub
jge
jmp
dec
scas
xchg
inc
jg
je
dec
cmp
adc
cmpsl
xor
ja
nop
mov
sti
push
mov
aas
push
sbb
inc
sti
xchg
inc
inc
ficoms
dec
mov
pop
ljmp
stos
fadd
lods
negl
rcr
xchg
daa
mov
push
es
or
push
imulb
jecxz
lret
push
fcos
pop
iret
scas
sbb
cmc
aad
pop
outsb
test
xor
jno
fwait
mov
imul
cmp
jle
pop
or
jge
jecxz
pop
repz
stc
rcl
ljmp
aaa
cwtl
ret
push
fadds
and
jnp
nop
and
shl
mov
das
pushf
nop
out
add
and
or
jnp,pt
xchg
mov
insl
jle
push
cmpsl
xchg
nop
loope
mov
fldenv
shll
jnp
sub
push
lcall
daa
adc
mov
call
push
dec
scas
mov
mov
pop
jl
cmp
out
push
jp
cltd
nop
ss
fwait
jp
pop
pop
cmp
push
mov
js
insl
pop
dec
shrl
fistl
xchg
pop
sub
ss
pushl
xchg
xchg
nop
mov
loope
scas
push
sbb
jp
push
ret
fsubs
dec
cmpsl
ret
or
clc
sbb
sub
shrl
shrl
addb
fildll
stos
repz
aam
add
mov
je
sub
fcoms
ja
loop
xchg
lahf
mov
out
pop
bound
movsb
sarl
xchg
push
mov
ss
popa
add
pop
xchg
cld
rorb
push
imul
pushl
test
adc
addb
shll
xchg
mov
loope
mov
push
mov
pop
or
aas
lea
ja
insl
in
mov
ret
ljmp
inc
mov
leave
add
jb
xchg
push
xchg
adc
outsb
mov
stos
mov
faddl
add
mov
xchg
or
sahf
sub
lcall
push
sub
lret
sub
cs
sbb
daa
xchg
push
pop
mov
sub
or
ret
push
mov
addb
sub
jb
sbb
sub
sbb
inc
pop
iret
adc
movsb
lret
push
sbb
mov
or
fmull
ljmp
sti
and
adc
sbb
mov
fadd
stos
cmp
dec
fmulp
sbb
xchg
mov
sbb
inc
bound
out
sbb
cmc
sub
incb
jbe
jns
inc
push
sti
cld
pop
sahf
jb
mov
mov
mov
sbb
in
data16
shll
sbb
cs
push
ror
xchg
xor
add
jne
adc
xor
fidivrs
push
pop
call
movl
mov
jecxz
clc
sbb
nop
ss
dec
jmp
les
shll
fcmovnb
icebp
push
mov
test
xchg
dec
sub
test
cmp
divl
and
fidivs
add
sub
decb
add
mov
or
cmp
push
sbb
mov
in
scas
popa
push
call
repnz
mull
mov
outsb
dec
lods
mov
pop
mov
stos
seto
fdivl
fisubrl
addb
mov
lea
nop
sti
mov
shlb
xchg
gs
aam
push
out
popf
push
std
test
mov
mov
jo
xchg
popa
shrb
add
sub
popa
jmp
out
mov
popl
repz
add
xor
inc
stos
inc
add
xchg
lret
pushf
ja
jl
or
out
test
xchg
and
inc
pop
repnz
ss
xchg
sti
push
mov
nop
leave
jnp
push
cld
add
ja
mov
lret
xor
sbb
xchg
xor
or
inc
jg
jmp
imul
sar
pop
mov
fdivrl
inc
out
xchg
mov
xchg
mov
call
ficoms
shlb
and
out
xor
xchg
sub
mov
lock
mov
xchg
mov
adc
jl
jecxz
es
int3
and
push
adc
mov
gs
pop
push
test
add
aam
cmp
leave
aaa
and
sti
out
test
fnstenv
xchg
pop
mov
gs
movl
int
pusha
inc
pop
mov
jecxz
pop
push
adc
rcr
mov
hlt
pusha
or
or
out
adc
pop
push
ja
sbb
ss
daa
dec
fimull
mov
jns
insb
xor
xchg
fcompl
addr16
mov
testl
dec
orb
ja
jne
xchg
nop
sahf
pop
cld
roll
in
push
cmp
mov
lock
fs
cmpsb
inc
sbb
nop
xchg
mov
inc
leave
jne
ret
jns
xor
nop
mov
jae
scas
sub
or
mov
in
jns
orl
mov
loope
inc
add
hlt
insl
pop
cmp
mov
fiaddl
test
gs
sbb
shrl
jp
iret
scas
xor
mov
js
adcb
adc
pop
sarb
mov
sub
dec
pop
cmp
pop
add
mov
push
dec
sti
pusha
enter
jle
out
push
inc
mov
std
mov
shlb
add
mov
push
stc
sub
shl
imul
jnp
dec
pop
movsb
hlt
inc
inc
stos
jbe
push
mov
iret
mov
mov
push
pusha
jno
sub
mov
cmp
mov
mov
xor
xchg
jge
mov
pusha
xchg
and
scas
adc
nop
mov
out
sbb
hlt
cmp
xor
mov
or
orb
hlt
fisttpl
fiaddl
sub
push
notb
jg
and
mov
push
push
pop
jno
add
dec
push
scas
lahf
int
rorb
decb
arpl
std
adc
xor
xor
mov
mov
into
int
sbb
xchg
jns
jle
sbb
ja
sub
push
ret
cmpsl
subl
dec
sahf
fdivrp
lcall
inc
lds
push
pop
mov
pop
enter
xchg
sbb
push
xchg
in
pop
jae
sbb
mov
lods
pop
stc
mov
bound
sub
cmp
dec
daa
push
pop
aas
adc
sbb
test
cs
sbb
mov
push
and
fdivrs
out
aaa
sub
adc
aas
xlat
in
fsubl
dec
add
movsb
aaa
cmp
cmpb
dec
cmpsl
sbb
aam
dec
cmpsb
push
icebp
out
js
dec
in
mov
movsl
mov
jmp
pop
in
pop
mov
xlat
addr16
rorb
mov
add
jno
push
cmpsl
aad
leave
in
and
mov
add
es
ret
push
roll
push
ja
out
fisttpll
shll
aaa
adc
mov
shrb
imul
cmpsb
iret
jbe
ret
xchg
in
push
std
iret
and
and
mov
mov
aad
movsb
xchg
das
scas
mov
add
gs
push
lcall
je
mov
and
xorl
xor
push
mov
add
out
shl
ficomps
xor
push
inc
push
pop
lahf
gs
ja
scas
test
test
movsl
and
and
lcall
push
mov
into
adc
lret
std
jns
rclb
cmpsb
add
je
lret
cs
es
adc
or
adc
mov
fwait
push
dec
repnz
cmpsb
push
mov
mov
popa
nop
push
mov
int3
cmpsb
outsl
repz
fsubrs
adc
mov
sub
roll
cmpsb
in
daa
cmp
aam
pop
mov
cmpsl
xchg
jo
je
int3
hlt
aad
rcl
ja
sbb
sarb
mov
jbe
leave
or
xchg
stos
enter
sub
xor
into
pop
push
movsb
jecxz
sbbl
jl
mov
lock
jmp
cmpsb
in
inc
lret
scas
hlt
test
aaa
mov
or
rcl
movl
out
cmp
aam
mov
into
pop
mov
shll
xor
mov
mov
xor
mov
leave
dec
popf
loop
incl
mov
repz
xchg
sub
roll
pusha
pop
jo
jne
repz
xchg
lahf
xor
push
pushf
loop
sbb
cmp
mov
out
mov
mov
inc
add
cmp
sti
pop
notb
dec
scas
xchg
roll
leave
pop
aad
jnp
jno
es
push
rclb
mov
mov
mov
out
cli
nop
lahf
mov
ljmp
pop
scas
or
pop
add
add
xchg
cwtl
loopne
lds
repnz
ss
insb
clc
out
aad
mov
js
cmc
scas
movsb
jbe
loope
stos
inc
je
xlat
inc
jg
bound
mov
adc
mov
jno
ja
aas
or
push
ljmp
aas
aam
cmpsl
push
and
mov
push
inc
jge
ret
mov
movsb
mov
and
inc
jge
cmp
mov
xlat
in
xchg
add
push
jne
das
addl
shll
daa
scas
in
aam
xchg
fimull
push
push
and
std
loopne
rcll
mov
pushf
insb
adc
lret
ror
mov
cltd
fadds
adc
fsts
gs
dec
data16
jge
xor
iret
int
cltd
jl
in
dec
xchg
cmpsl
iret
ffree
sbb
xchg
mov
popl
or
xchg
movsb
dec
mov
mov
lea
dec
dec
xor
scas
out
ss
sub
mov
adcb
pop
sub
xor
in
dec
push
pop
or
repz
dec
lret
shrb
xchg
rcrl
or
movsl
insb
into
add
cmpsb
mov
push
int
xor
scas
dec
push
cmpsb
aad
mov
xchg
push
hlt
xchg
ret
aam
push
test
mov
adc
pop
lods
das
lds
mov
sub
aaa
ja
idivl
adc
jo
lret
aad
lods
xor
js
shlb
in
aam
scas
jge
xchg
push
lret
jp
iret
push
nop
fcoms
jns
ror
xchg
outsb
nop
jne
movsl
pop
inc
cwtl
enter
lds
mov
or
xlat
aad
into
test
cmpsb
lods
scas
cmp
mov
mov
ja
ss
jecxz
push
xlat
mov
cmp
xor
pushf
jae
mov
je
cs
lds
sub
xor
stos
leave
in
aas
shrb
sbb
push
loop
lds
xchg
test
xor
mull
lock
into
in
cmpsb
xchg
fidivs
jge
push
mov
shlb
les
ja
xchg
mov
cltd
xor
mov
pop
loopne
xchg
ss
xchg
mov
sarb
mov
shlb
or
pop
cltd
mov
cmpsb
xchg
iret
loop
mov
push
pop
imull
sbb
jl
pop
xor
push
aad
dec
movsl
testb
into
pop
xchg
jg
jne
xchg
push
push
mov
xchg
sti
add
push
lret
das
pop
jns
mov
nop
mov
and
mov
pop
add
cmc
enter
insb
stos
sub
add
push
rcl
inc
jmp
mov
rol
inc
movsb
fnstenv
xlat
movsl
push
sbb
jns
inc
lds
mov
inc
or
in
pushf
xchg
movsl
iret
cld
in
mull
push
iret
out
sbb
push
adc
ds
nop
ret
push
sbb
outsb
xlat
push
int3
lds
and
ja
xor
pop
adc
or
addr16
cmp
and
push
jg
pop
aam
adc
movsb
ja
jmp
push
movsl
aaa
leave
jo
sub
in
mov
adc
mov
adc
xchg
mov
inc
xor
mov
imull
mov
fists
jle
repnz
lcall
ret
sub
fwait
mov
rcl
inc
dec
repz
mov
cmp
add
adc
inc
in
iret
cmp
ficoml
enter
mov
xchg
data16
movl
fldenv
mov
pop
scas
cmp
in
outsb
gs
movsl
cmp
jb
add
cli
jne
push
or
cmpsb
or
dec
ja
ffree
or
lret
insb
add
push
cmpsl
pop
sti
mov
mov
sbb
fcom
push
testb
subb
rcrl
lcall
jbe
imul
or
aam
and
sahf
outsb
ret
pop
jbe
inc
int3
pop
mov
and
loopne
jl
pop
movsl
xchg
push
jae
pop
scas
sahf
mov
cmp
cmc
jbe
inc
push
rcll
shl
decb
xchg
push
in
mov
test
cmp
mov
inc
mov
ja
xchg
mov
jbe
add
outsl
aam
sbb
mov
mov
lds
xchg
or
cld
stc
xor
xchg
nop
mov
shll
inc
aad
mov
outsb
push
xlat
movsb
sahf
add
add
iret
mov
mov
mov
rcrl
mov
push
xlat
and
pop
mov
mov
jb
jne
mov
mov
sti
dec
rcl
mov
mov
adc
and
sbb
cltd
addr16
mov
arpl
jne
cmp
stc
test
mov
testl
sahf
movsl
cwtl
mov
adc
mov
iret
pop
mov
sub
insb
lahf
xchg
movsl
iret
int
mov
es
loop
lahf
popa
push
out
xchg
lds
xchg
repnz
jmp
xlat
movsl
mov
jle
mov
xchg
sub
dec
xchg
xchg
push
nop
scas
repnz
cmp
xchg
aad
aad
notb
jle
mov
and
xlat
int
test
outsb
out
xor
aam
daa
and
movsl
push
lcall
lahf
cmpsl
push
mov
xchg
repnz
aam
inc
cs
cmp
cmpl
ss
pop
inc
pop
cmp
out
xor
jbe
notl
aas
clc
jae
push
xchg
push
or
andb
and
fsts
add
rcrl
jmp
popa
xor
mov
mov
iret
nop
lahf
fstl
jbe
cmpsl
and
iret
fwait
push
mov
clc
jo
xchg
xrelease
aam
push
mov
cli
loope
popf
movsl
shrb
notb
jne
lret
adc
pushf
lock
in
gs
fcomi
xchg
mov
arpl
imul
add
lds
cmp
rorb
mov
shrl
inc
test
rcl
mov
push
lahf
add
jmp
es
adc
sbb
in
push
push
mov
push
popf
push
jno
or
mov
rorb
scas
or
push
adc
shll
fnsave
xor
icebp
adcl
scas
or
gs
out
xchg
cmpsb
in
out
ja
das
mov
mov
ficoms
push
notl
or
roll
adc
inc
loopne
js
jp
adc
add
lcall
hlt
cs
push
xchg
cmp
aad
jge
cmp
xor
fsts
jbe
pop
and
aam
sbb
jg
jne
clc
lods
jns
inc
push
xchg
xor
mov
add
pop
lods
push
mov
push
sub
jno
adc
or
push
mov
lret
push
stos
sahf
sub
push
iret
or
cmpsl
mov
xor
js
push
xor
xor
mov
jecxz
lds
mov
adc
aas
popa
into
jns
xor
scas
mov
iret
imul
loopne
push
dec
in
shlb
testb
pop
frstor
dec
push
ret
in
lahf
idivb
add
fsts
mov
jmp
and
pop
shll
cmp
mov
out
push
mov
and
out
aas
pop
lahf
xchg
lret
pop
xor
sub
adc
dec
xor
ret
jp
mov
testl
fidivrl
inc
lods
andb
mov
fstps
dec
lds
push
test
iret
lods
sub
adc
loopne
shl
fiaddl
mov
jmp
sub
mov
repnz
mov
popf
cmp
push
jns
test
adc
push
jae
push
das
cli
aam
repnz
lds
inc
inc
mov
or
mov
shrl
mov
adc
sbb
ret
xor
dec
jp
add
push
mov
pop
cmp
and
jbe
ja
aas
movsl
mov
aad
icebp
xlat
jno
loope
sets
icebp
xor
test
push
sbb
out
mov
mov
sub
sub
mov
mov
in
scas
add
out
mov
mov
push
xchg
jne
pop
mov
out
push
movsl
shlb
cmp
daa
mov
sahf
aam
adc
jno
jns
imul
xor
insl
subb
cmp
sub
jne
push
mov
cmpsb
and
add
push
aas
dec
mov
push
std
outsb
js
xor
xor
lds
cmpsl
inc
sar
divb
outsb
push
iret
mov
adc
clc
fstps
adc
mov
sti
out
aad
mov
std
popl
jne
in
mov
das
push
mov
roll
rcrl
sub
iret
ljmp
pop
leave
aad
leave
gs
int
shll
fstpt
add
adc
loopne
xchg
pop
inc
mov
lods
jl
push
cmpsb
push
js
popw
movsb
aam
push
cli
lock
in
pop
pop
and
xor
call
lahf
push
xor
mov
jae
push
mov
inc
dec
add
xchg
xchg
pop
int
out
push
insl
jno
es
jge
xlat
mov
xchg
insl
mov
xor
xor
aad
dec
mov
rcr
mov
pop
iret
cmc
stc
cltd
inc
fisubs
enter
push
pop
pop
int3
jle
xchg
nop
xchg
xor
out
divl
cmc
jle
xchg
pop
fldl
adc
ss
scas
stos
aad
arpl
cmp
aaa
aam
jbe
and
jmp
push
movsb
ds
fucomp
sub
sbb
subl
shll
sahf
push
xchg
mov
iret
jg
or
lods
push
test
xchg
addr16
insl
or
push
iret
xchg
sbb
cmpsl
lods
jg
add
jb
jno
mov
add
int3
sub
push
divl
scas
mov
mov
and
mov
jg
sub
movsl
es
cmp
cmpsb
aad
rcll
mov
and
cmp
sbb
cmp
xor
sbb
cmp
stos
pop
je
aam
mov
cltd
lret
iret
movsb
in
jns
pop
mov
pop
jnp
enter
mov
pop
dec
mov
sti
adc
mov
enter
repnz
in
xchg
sub
je
roll
mov
sub
mov
movsb
jo
mov
push
aad
mov
pop
pop
mov
mov
pusha
out
jno
mov
push
into
mov
adc
pop
jne
std
iret
test
in
rcr
outsb
loope
inc
jns
rcl
mov
fildl
mov
nop
pop
lds
fnsave
lret
mov
push
shll
pop
xor
xor
add
adc
push
shrl
jle
call
jo
mov
loop
test
and
iret
sub
xchg
movsb
adc
cltd
enter
inc
jns
mov
cmpsl
jg
mov
sarl
pop
fstpt
insb
shll
sahf
mov
adc
xchg
inc
push
cmpsb
mov
stc
pop
push
adc
or
shll
sahf
loop
aas
push
mov
push
sbb
mov
xlat
mov
mov
dec
xchg
mov
aad
lds
pop
les
xchg
iret
inc
pop
jmp
es
jbe
jp
and
inc
and
test
adc
mov
ja
rcl
mov
jbe
xchg
dec
adc
mov
scas
decb
pop
add
aas
push
imul
inc
lea
xchg
push
outsb
das
inc
push
mov
sub
divb
cwtl
pop
adc
mov
xor
xchg
jae
inc
daa
adc
xchg
dec
cmp
aas
rcll
jno
jp
jge
jb
loop
mov
pop
and
sahf
arpl
rclb
in
dec
sbb
scas
je
ds
gs
dec
adc
cli
aad
jbe
das
pop
shll
fnstcw
scas
adc
cmp
inc
ds
xchg
scas
push
into
pop
adc
xchg
inc
lds
js
cmpsl
fstpl
shlb
dec
mov
ds
and
dec
and
adc
pushf
rcl
or
sub
fdivrs
xor
mov
imul
xlat
adc
ljmp
leave
dec
mov
mov
xlat
mov
lahf
imul
in
arpl
and
sbb
jb
iret
mov
test
xchg
iret
enter
mov
push
aaa
shl
loop
or
lea
loopne
cmp
in
mov
cwtl
outsb
push
inc
mov
jecxz
mov
testl
fs
incl
adc
mov
jecxz
enter
cmp
test
cmp
mov
inc
fmul
ds
inc
xor
call
xchg
xchg
xor
push
insl
mov
mov
jecxz
cmp
sar
adc
rcl
pushf
outsl
das
int3
loopne
aam
into
test
repz
repnz
cltd
cmc
sub
jl
jle
popf
inc
outsl
orl
lret
xchg
push
int3
add
xor
mov
je
mov
js
mov
jbe
bound
cli
repz
pop
pop
test
inc
xor
iret
sub
cmp
mov
jecxz
cmp
aad
mov
push
mov
iret
inc
repz
and
fidivrl
sub
mov
adc
mov
add
in
fldt
aam
xor
sti
pusha
add
and
aam
adc
inc
xchg
adc
out
mov
fdivp
pop
outsl
es
or
mov
cmp
push
adcb
in
mov
idivl
lods
mov
pop
cmc
mov
jns
push
iret
jp
out
adc
dec
mov
sub
mov
int
mov
repnz
fwait
and
hlt
or
rcr
pop
sbb
ds
fucomip
addr16
ret
push
mov
dec
jb
xor
push
aaa
mov
jle
xlat
std
and
cmpsb
imul
mov
dec
jnp
fiadds
lret
insl
scas
adc
mov
push
ret
daa
inc
adc
scas
sub
subb
jbe
jnp
and
int3
mov
fsubrs
push
fbstp
sahf
jle
movb
jmp
xchg
jbe
pop
mov
xor
leave
int3
xchg
fs
sbb
lea
push
pop
xor
push
pop
popa
sbb
xchg
and
push
fisubrl
test
add
sub
in
mov
xchg
shlb
add
sahf
jecxz
add
out
mov
mov
imul
mov
dec
nop
xchg
mov
inc
fwait
jmp
andb
inc
pop
adc
movsl
xor
inc
imul
jo
cmp
push
imul
and
adc
in
xor
and
repz
bound
xchg
xlat
aam
xchg
dec
push
lcall
add
mov
xchg
jb
xchg
and
or
out
adc
or
mov
aam
inc
nop
cmp
xor
pop
leave
jle
into
mov
push
xchg
rep
xor
and
fs
out
sub
inc
inc
push
mov
imull
jno
shrb
enter
fisttps
push
jl
mov
outsb
repnz
cld
loopne
scas
sub
adc
iret
xchg
xchg
and
outsb
cs
jp
repz
and
jg
jle
ds
lds
out
lods
shrl
cmp
inc
cs
push
jno
and
inc
stc
ja
push
mov
imul
mov
out
sarl
insb
xor
syscall
iret
loope
fimull
aas
aam
cmp
xchg
out
cmp
push
or
cmp
inc
mov
jecxz
pop
lahf
in
sub
inc
jmp
add
push
add
int
xor
call
addl
dec
jg
lcall
ret
adc
pop
adc
jge
xchg
arpl
cmp
ss
lock
in
lea
push
mov
sub
aas
mov
iret
and
mov
cs
fldcw
sahf
iret
or
pop
and
sbb
rorl
jecxz
loopne
lods
lea
ja
push
push
mov
rcrl
and
lret
mov
sbb
test
push
push
mov
insl
out
xchg
mov
cmp
fldl
das
jo
push
xchg
sub
cmp
jle
xor
popf
pop
notb
mov
inc
mov
call
or
movsb
xchg
fidivrl
mov
xor
add
or
das
jns
and
test
mov
mov
jmp
sub
and
adc
sbb
add
xchg
cld
int3
xchg
testl
mov
repz
pop
mov
sbb
push
mov
pop
adc
pushf
ss
inc
out
fidivl
dec
int3
mov
in
xor
sbb
cmp
adc
aam
lcall
jl
xchg
lret
fsubr
pop
inc
xlat
xchg
sbb
sahf
div
and
push
cs
adc
test
push
lret
je
std
sbb
pusha
leave
sbb
cmp
xchg
fnstcw
jp
into
ss
out
mov
push
dec
int
int
cmpsl
divl
pushf
sbb
add
mov
rorb
int
xchg
push
or
xchg
push
or
int3
mov
popa
in
inc
adc
add
cmp
sbb
cmpsb
lea
leave
mov
icebp
pusha
mov
push
mov
mov
push
add
loope
inc
add
xchg
xchg
xor
lret
lret
xor
jg
lcall
nop
adc
mov
sbb
mov
movsb
inc
outsl
nop
and
push
xor
stos
cmp
aaa
lea
adc
mov
pcmpeqd
sbbl
rorb
push
sbb
sbb
pushw
pop
mov
dec
fst
push
push
fsubrp
rolb
xor
cmp
pop
mov
out
cmpsb
rorl
fnstcw
xlat
inc
sbb
add
addl
jecxz
test
nop
xlat
lods
bound
xlat
jno
or
dec
mov
and
inc
lahf
lret
mov
xlat
shlb
mov
xor
mov
in
fcom
sbb
pop
aad
js
lock
clc
test
sbb
les
adc
mov
mov
adc
lret
xlat
sbb
cli
mov
fwait
iret
scas
pop
jbe
jmp
or
xchg
gs
mov
add
das
xlat
xchg
repnz
in
xlat
cmp
addr16
mov
movsl
mov
mov
lods
jns
es
jl
ret
adc
je
loopne
mov
xlat
dec
xor
and
jge
sbb
mov
arpl
push
and
rcll
gs
pop
hlt
mov
outsl
dec
lock
mov
xor
mov
cmpsl
xlat
in
repnz
enter
dec
push
clc
lock
mov
lods
les
adc
push
div
fsubp
mov
xchg
lret
shlb
arpl
rcll
leave
movl
cltd
pop
mov
sbb
inc
pop
cmc
aam
lock
jge
mov
xor
dec
aad
mov
or
adc
iret
iret
scas
imul
dec
loopne
xor
lahf
pop
xor
call
cs
inc
ret
leave
adc
inc
xor
xchg
mulb
mov
inc
lods
ret
xor
roll
jmp
cli
in
mov
mov
sbb
lds
sbb
int3
repz
adc
test
xchg
xchg
adc
pushf
xor
sub
jle
nop
or
lahf
outsb
fcmove
dec
dec
addr16
popa
inc
mov
test
mov
movsb
xlat
push
scas
sub
inc
lahf
mov
xchg
icebp
pop
sbb
lock
xor
inc
aad
loopne
cltd
fmuls
pop
adc
pushf
shll
cmpsb
lock
mov
inc
in
xlat
nop
fsubrs
pop
sbb
daa
pushf
mov
sahf
outsl
or
leave
gs
mov
mov
jp
test
iret
xchg
popa
adc
je
sbb
movsb
xchg
xor
jecxz
addr16
enter
fsubr
into
je
leave
adc
xchg
mov
lahf
aad
fistl
xlat
dec
adc
popa
mov
in
test
cmpsb
das
xchg
or
rorl
xor
gs
mov
movsl
mov
lcall
test
jno
sbb
jae
pop
clc
mov
xchg
out
mov
cmpsb
shr
aad
popf
imul
push
test
lcall
icebp
rol
dec
mov
test
xchg
lock
jbe
adc
xor
adc
das
aas
xchg
cli
mov
push
addr16
mov
mov
push
mov
pop
rorb
sbb
lret
jo
adc
jb
add
lods
cltd
dec
andb
mov
cwtl
xor
push
mov
bound
aaa
test
inc
or
sbb
or
popa
jbe
pop
and
jo
punpckhbw
popf
mov
addr16
fcoms
xchg
pop
sti
aad
xlat
xchg
mov
xlat
pop
lret
mov
jae
shlb
leave
xchg
or
xor
mov
cmpsl
xlat
clc
scas
and
decl
xchg
mov
jns
pop
das
popf
xlat
icebp
inc
repz
xor
iret
jo
ss
ljmp
mov
sar
push
loopne
rorb
xlat
or
adc
xlat
jo
mov
inc
aam
mov
lahf
sbb
hlt
xchg
cmp
int3
ret
pop
xlat
inc
cmpsl
ja
xchg
adc
jl
popf
pusha
mov
fst
in
jae
push
incl
mov
loope
jne
push
pop
popf
xlat
xchg
cmp
xor
loop
sbb
pusha
xlat
jle
or
mov
mov
loop
sti
iret
daa
dec
addb
fnstenv
mov
sbb
inc
pop
lods
rorb
addr16
add
mov
adc
xchg
xlat
jle
mov
test
pop
mov
popl
popa
mov
xlat
out
out
cmp
imul
mov
js
or
xor
xor
xchg
ds
int3
aaa
mov
rcr
jne
or
hlt
mov
xlat
pop
add
lods
clc
outsb
xor
fdivs
xchg
pop
xor
das
pop
xlat
sub
mov
add
jo
std
les
xchg
insl
int
push
push
fdivrp
mov
loopnew
ret
xlat
into
cmpl
mov
in
cmp
test
fwait
enter
push
or
cwtl
pop
push
pushf
rclb
repnz
mov
jae
in
jp
mov
adc
xchg
movsl
aad
sbb
push
ljmp
stc
adc
xchg
pusha
xchg
lods
mov
adc
mov
xlat
ja
mov
mov
sbb
mov
lret
adc
xlat
aam
mov
xlat
test
xorb
xchg
xchg
pop
rol
ljmp
xchg
cmpsl
xlat
jnp
or
inc
lahf
popa
xchg
xlat
pop
outsb
movsb
mov
iret
int
jl
aad
inc
push
lock
xor
xchg
flds
xlat
xor
hlt
mov
xchg
cmp
push
adc
clc
jbe
add
xor
dec
inc
xlat
or
xlat
jo
dec
repnz
xchg
popf
xlat
sub
sub
int
icebp
cmpsb
mov
dec
imul
roll
cmp
sub
ljmp
jo
scas
mov
test
or
push
mov
rcll
inc
lahf
cmp
xlat
fwait
gs
or
dec
insl
push
fstpt
xlat
mov
mov
pusha
sahf
cmpsl
hlt
jno
iret
mov
push
or
in
mul
test
jbe
pop
pop
and
mov
or
roll
adc
mov
adc
lds
scas
jo
push
ss
xlat
xchg
bound
sub
aad
outsb
jne
pmullw
mov
inc
lahf
insl
pusha
sarb
push
push
je
sbb
mov
mov
xchg
sti
ror
xor
xlat
xchg
pop
pop
enter
xor
leave
push
mov
cmp
xor
xlat
xchg
sub
data16
sbb
fisubrs
push
xlat
sub
lods
stos
push
jecxz
jo
rcrl
insl
jne
faddl
sub
fisttpl
dec
aad
or
fwait
add
add
push
add
push
sbb
mov
ret
cwtl
xlat
shll
mov
adc
in
mov
lret
outsb
fucomi
aad
inc
mov
cltd
ljmp
xchg
push
test
ljmp
aas
xlat
in
ds
mov
sbb
xor
rorb
test
lahf
sbb
les
fistl
fdivrl
jne
inc
mov
mov
add
pop
test
inc
adc
and
xorb
xlat
sbb
popa
rorl
aad
rol
mov
iret
cwtl
or
sahf
push
adc
jns
sbb
xchg
sbb
aad
inc
xlat
adc
popa
and
xor
xlat
stc
mov
xchg
push
nop
xchg
clc
lock
fdecstp
add
push
fdivrl
cmp
xor
pop
insl
push
aad
push
mov
jns
scas
mov
in
mov
mov
xlat
mov
dec
or
scas
xlat
push
push
xchg
cmp
or
popf
push
es
shlb
cmp
shlb
and
adc
mov
dec
pop
inc
jns
popf
mov
fs
sbb
xchg
inc
sbb
inc
xchg
cmp
sbb
mov
popa
int
adc
push
imul
insb
sbb
xchg
iret
pop
xchg
xlat
sub
shlb
cwtl
test
iret
add
lahf
test
mov
xchg
add
or
xlat
in
das
fs
mov
push
leave
and
inc
popa
lcall
or
xchg
dec
sbb
jge
enter
inc
je
jnp
sub
dec
add
xchg
inc
push
ret
xlat
outsl
xor
lret
aaa
mov
imul
mov
push
xlat
pop
mov
scas
call
xchg
jns
add
jp
push
das
sbb
xor
movsl
orb
xlat
inc
pop
or
jge
or
lahf
push
push
dec
push
loopne
mov
jne
addr16
mov
js
xchg
mov
fcoml
xchg
inc
fstp
shl
dec
xlat
add
cwtl
insl
mov
add
xlat
cmpsl
push
xchg
ficompl
xlat
push
insl
fsubrs
inc
xlat
push
jle
jne
cltd
push
adc
arpl
ljmp
push
loop
pop
cmp
shll
pusha
into
scas
push
sarl
cmp
jg
adc
xchg
pop
inc
lahf
mov
jmp
into
cltd
jle
jo
data16
xor
dec
xchg
mov
adc
imul
shll
nop
xor
inc
movsl
xchg
jecxz
xlat
mov
lods
sub
or
repz
pop
fisubl
mov
xchg
rcl
pop
test
pxor
cltd
add
mov
je
aad
repz
xor
xchg
adc
pop
add
xor
shlb
test
xlat
out
outsb
addb
adc
clc
inc
test
dec
pop
imul
out
das
aad
dec
in
xchg
aas
sub
mov
je
leave
popf
hlt
int
addr16
sub
rcll
or
ret
dec
jae
or
bound
in
test
pop
scas
mov
test
mov
cmpsb
cmp
pop
xlat
mov
adc
inc
test
sbb
pop
jmp
inc
inc
mov
jnp
xlat
sbb
xlat
fcmovbe
dec
in
add
inc
loop
mov
test
sub
mov
or
fiaddl
or
pop
mov
ffreep
inc
es
insl
xchg
push
cmp
mov
jle
aaa
int3
in
shl
aas
add
scas
iret
xorb
push
xchg
pusha
out
mov
mov
jbe
inc
and
cmpsl
popa
lret
xlat
add
mov
sbb
fs
sahf
sbb
sub
mov
xchg
or
sbb
jae
leave
jns
nop
idivl
sbb
mov
xlat
xor
cli
adc
repz
daa
inc
cmp
xlat
es
xchg
sbb
fcmovnu
test
out
jo
aas
inc
rol
mov
inc
stos
in
rcl
dec
push
loopne
mov
cltd
xlat
or
jo
xor
adc
shrb
sahf
mov
inc
iret
xchg
cmp
xlat
mov
or
xchg
ficomps
cltd
xor
push
roll
fldcw
addr16
jg
popf
aas
cltd
inc
adc
data16
lcall
outsb
cmp
stc
cltd
push
cmp
jbe
es
fsubrs
xlat
mov
sar
cld
rcrl
lods
test
xlat
into
pop
cmpsl
fnstcw
jne
mov
xchg
negb
nop
mov
filds
mov
pop
notl
testb
aad
fimuls
es
adc
lds
cmc
push
push
push
mov
push
push
idivb
mov
hlt
lcall
sub
aam
push
push
loop
dec
or
push
dec
mov
add
dec
pop
inc
js
testb
sub
push
arpl
mov
jle
test
jb
push
xchg
std
frstor
mov
outsb
in
stos
mov
nop
femms
in
push
pushf
addr16
or
aad
addr16
lcall
inc
pushf
cmp
mov
addr16
es
gs
dec
sarl
movhps
add
mov
orb
add
mov
in
cmp
cwtl
mov
push
dec
into
testb
jp
mov
sub
mov
dec
sahf
add
mov
inc
xchg
pop
clc
push
sub
nop
movsl
jbe
addr16
pop
cmc
int3
mov
mov
adc
rcl
inc
dec
fldl
enter
jne
jno
lahf
cs
mov
scas
push
inc
aam
xor
pushw
fcmovne
arpl
stos
mov
mov
movzwl
mov
adc
addr16
es
push
or
push
cmc
and
and
in
popa
mov
mov
rcll
ficoml
xlat
scas
inc
sbb
js
and
shll
pop
push
dec
mov
push
sbb
push
movsb
cmp
mov
xor
dec
push
add
addr16
test
jge
or
hlt
js
incl
mov
aad
xchg
xchg
cmpsb
xor
and
adc
testb
enter
and
push
or
jbe
add
jo
push
dec
test
and
mov
popf
inc
or
push
ds
push
out
mov
fsts
es
addr16
pop
push
mov
xor
mov
mov
push
in
sub
fstpt
and
inc
push
mov
in
adc
inc
aad
sti
fstpt
mov
arpl
mov
xchg
push
ds
lods
mov
nop
out
push
sbb
test
inc
mov
lock
xchg
push
inc
stos
addr16
ds
gs
jnp
mov
orb
add
in
lds
push
fimuls
aad
xor
dec
mov
inc
pop
xor
and
notb
and
test
cld
shll
mov
push
sahf
sub
cmpsb
std
dec
mov
in
inc
pushf
xor
out
in
lahf
in
fcom
faddl
push
fidivrs
add
test
dec
roll
ds
mov
es
mov
sbb
push
push
or
faddp
std
gs
ret
addr16
in
into
mov
mov
push
mov
push
xlat
add
repz
rcrb
pop
cmp
inc
xchg
xor
xlat
arpl
push
es
aaa
push
inc
push
sub
mov
in
and
mov
xchg
repz
out
xchg
mov
mov
lahf
scas
push
jae
and
cmp
mov
test
inc
ljmp
ss
inc
mov
sbb
sbb
call
in
test
in
and
mov
daa
aaa
push
imul
aam
xor
testb
ljmp
ss
in
punpcklbw
in
mov
adc
lret
cmc
push
mov
int
cmp
fwait
arpl
mov
xchg
cmp
cmpsl
jecxz
mov
and
out
inc
fdivp
jl
add
call
cmpsb
inc
adc
iret
adc
cmp
dec
inc
mov
inc
loopne
add
gs
popa
jns
arpl
repnz
mov
mov
mov
jb
not
loop
scas
push
push
aam
andb
push
mov
cmp
shl
cmc
push
jno
push
in
sub
jo
push
in
push
cmp
fstpl
jge
pop
xor
jne
aad
dec
push
pop
inc
pop
cmpsb
add
inc
pop
lea
stc
addr16
inc
adc
test
push
cmp
daa
clc
gs
gs
rcll
mov
inc
rcll
xchg
push
mov
js
push
push
jp
lock
sbb
mov
fnstsw
repnz
xchg
je
testb
jne
mov
ss
inc
arpl
push
push
add
adc
push
mov
sbb
ret
int
push
divl
in
xor
fstpl
push
xchg
push
ss
dec
inc
dec
lods
push
stos
mov
cmp
push
inc
pmaddwd
dec
mov
ss
push
rorb
inc
add
xchg
xchg
push
fwait
xchg
out
push
inc
inc
or
adc
div
ds
ljmp
repnz
call
test
nop
dec
push
push
insl
push
je
dec
insb
push
dec
cmp
xchg
sub
pop
les
lds
movsb
lock
mov
xchg
dec
sbb
push
add
shl
push
dec
push
imul
xorb
jmp
lea
aad
in
dec
loop
movl
jno
ds
jp
out
mov
sahf
lcall
pop
push
mov
std
inc
shl
cmc
test
jp
lock
iret
inc
in
mov
out
mov
inc
sbb
mov
shrl
sarl
fwait
push
xor
mov
xchg
push
mov
jecxz
jns
outsl
hlt
std
inc
fs
jbe
iret
es
add
push
inc
pop
divb
push
inc
lds
cmc
ret
xchg
add
in
inc
rcll
inc
adc
pop
push
inc
lea
push
addr16
push
pop
aad
push
in
mov
cmp
lret
lahf
mov
push
inc
mov
inc
pop
push
notb
fdivs
test
adc
dec
adc
enter
push
push
and
mov
push
in
pop
in
ljmp
aad
int3
push
sub
sarb
push
inc
mov
adc
testb
and
cmc
outsl
inc
adc
dec
sbb
or
aad
cmpsl
push
ds
mov
add
and
lcall
push
gs
lret
std
mov
cmpsl
cmc
out
mov
mov
xor
xchg
xor
adc
test
inc
sbb
rolb
xchg
es
fistpl
mov
push
xchg
cmpsb
mov
push
je
imul
sbb
insl
test
leave
out
mov
inc
aam
push
adc
ljmp
sub
mov
sbb
insb
xchg
push
ds
or
mov
xchg
push
popa
addr16
push
jne
roll
cmc
mov
fisubrl
mov
xchg
cmp
shl
ss
add
and
lahf
shrl
es
xchg
scas
push
iret
loopne
ljmp
in
inc
xorl
icebp
adc
or
data16
outsl
fst
jae
push
xchg
push
jno
pop
pusha
vmovhps
outsb
es
push
inc
push
in
divb
xlat
repnz
ds
pop
in
popf
push
in
pause
and
loopne
jp
inc
mov
adc
rol
aas
aam
fnsave
imul
divl
push
mov
daa
jl
push
adc
test
xor
xor
jg
dec
fdivrl
test
mov
push
mov
push
addr16
push
dec
gs
arpl
xchg
rcll
cmc
lods
mov
nop
shlb
push
addr16
pop
in
test
xor
adc
ss
push
mov
int3
cmpsb
sbb
add
jmp
fisttpl
mov
cs
movsl
in
jmp
push
push
sahf
mov
int
bound
shll
test
fnstcw
js
mov
adc
rcl
xchg
pop
mov
aam
ja
xchg
sub
or
push
pop
push
out
mov
testb
dec
divb
iret
sbb
dec
mov
jbe
mov
adc
iret
xorb
and
std
cmp
jbe
push
xchg
leave
mov
mov
cmc
inc
push
cli
mov
arpl
sbb
out
fwait
rorb
aad
push
movsb
push
xor
jbe
movb
aaa
mov
push
push
xchg
push
andl
scas
push
dec
popf
cmpb
pusha
test
mov
or
stc
mov
push
inc
insl
push
sub
mov
cmp
push
scas
mov
jb
or
ss
adc
int
lock
lret
cmpsb
shrb
push
mov
std
mov
cmpb
ret
ret
inc
lea
out
or
shrb
sub
adc
inc
add
ret
or
std
dec
mov
in
mov
cmpsb
icebp
push
repnz
push
xchg
stos
push
into
jno
lods
push
loopne
repz
inc
inc
das
add
push
push
mov
push
addr16
mov
imul
repz
cmc
sti
push
xor
aad
pop
jb
push
inc
mov
mov
gs
jp
mov
dec
ss
lret
cs
es
mov
pop
xchg
jae
movsl
push
sub
int
aaa
inc
jge
in
push
push
xchg
add
mov
cmp
into
cmp
outsb
or
std
iret
and
cmc
cmp
adc
in
insl
dec
push
cmpsb
fldl
xchg
cltd
paddq
add
mov
mov
cmp
cmc
fdivrl
inc
test
push
rclb
imul
pop
push
insb
mov
addr16
test
aad
jne,pt
cmp
pop
inc
aad
mov
and
int
inc
fcoms
daa
leave
ss
mov
lds
push
int3
push
divb
xor
movsb
roll
mov
lret
mov
nop
clc
jo
push
fbstp
mov
in
adc
in
xchg
sbb
push
mov
gs
arpl
gs
ror
aas
into
push
mov
jbe
adc
test
cli
mov
xchg
mov
push
push
gs
lcall
cmc
inc
cmp
stos
mov
inc
jbe
mov
mov
loope
inc
mov
in
int3
jbe
mov
or
shrb
imulb
fwait
std
inc
sahf
rcrb
cmc
xor
jecxz
jns
scas
xchg
mov
int
push
xchg
xchg
pop
dec
add
leave
add
mov
idivl
jmp
adc
mov
push
add
std
into
cmc
inc
sub
mov
jl
mov
xchg
xlat
mov
mov
mov
push
push
xor
std
push
pop
mov
xor
inc
int3
in
jg
push
push
cltd
mov
in
ds
fnstcw
sbb
adc
push
ret
inc
xchg
lahf
loopne
dec
mov
mov
rol
push
cld
ror
mov
jns
add
notb
adc
lcall
push
psllq
mov
jg
mov
adc
jle
push
pop
nop
iret
hlt
mov
xor
test
jnp
push
cmpsl
xor
xchg
push
inc
aad
mov
enter
out
addr16
imul
mov
movsb
push
push
push
call
subl
bnd
pop
push
ss
cmp
ret
repnz
mov
cs
es
xchg
pop
push
adc
jo
shll
std
mov
mov
inc
cmpsl
mov
fbstp
js
lods
mov
les
add
inc
xchg
in
ret
fldt
gs
ret
inc
push
mov
xlat
inc
push
cmc
cmpsl
in
gs
xchg
in
bound
push
push
popf
jo
and
push
adc
andl
jecxz
mov
sbb
push
push
sbb
cmp
mov
mov
and
jne
mov
inc
push
imulb
inc
pop
push
xor
mov
icebp
into
frstor
add
xor
notb
sbb
pop
push
xor
pop
push
pop
ljmp
dec
cmc
int
stc
lods
xchg
adc
out
add
je
mulb
lret
aad
cli
push
std
divb
scas
xchg
mov
jge
lods
rclb
cmc
inc
and
mov
lods
adc
insl
xchg
enter
mov
cmc
jne
es
xchg
mov
bound
mov
mov
mov
mov
addl
daa
pop
jb
mov
es
mov
sub
ja
adc
xchg
pop
push
inc
sbb
mov
push
xchg
in
mov
and
sub
nop
shlb
arpl
sbb
dec
fwait
popf
loop,pt
mov
cs
mov
xor
iret
push
ds
addr16
xchg
lds
inc
dec
testb
ljmp
jecxz
mov
nop
fwait
push
push
dec
adc
sub
dec
popf
cmp
cmp
scas
ds
cmpsb
movsl
test
roll
xchg
push
aam
bound
addr16
mov
mov
pop
loop,pn
ljmp
movsl
iret
mov
push
pop
dec
je
jae
movsl
push
xchg
addr16
std
aad
stc
leave
test
sub
in
mov
xor
adc
xor
add
loopne
xchg
inc
xor
in
push
ds
mov
push
shll
rol
rcl
add
lods
mov
and
ret
push
fs
ror
cmpsl
push
test
xchg
jecxz
dec
cmc
in
pop
xchg
scas
fldl
cli
or
push
push
rcll
adc
dec
leave
dec
aaa
repz
ds
and
mov
jg
dec
lcall
jns
cmc
test
inc
or
mov
sti
ljmp
mov
vorps
adc
test
mov
hlt
movsl
daa
xor
xchg
push
jecxz
pop
scas
xchg
mov
fistpl
hlt
adc
mov
lret
and
int3
push
fdivrs
push
cmp
push
addr16
icebp
aad
cmc
addr16
fs
in
mov
mov
pop
jge
mov
scas
add
inc
xor
fwait
and
adc
insl
adc
xchg
adc
jne
insl
gs
inc
jnp
jp
inc
inc
jmp
ljmp
push
cmc
shrb
lahf
xchg
mov
dec
shll
ja
jnp
mov
repz
fs
mov
inc
movsl
xor
and
push
ficoml
pop
hlt
mov
sub
idivb
shr
inc
fwait
mov
data16
mov
sbb
fcomps
and
dec
xor
add
adc
test
add
mov
ret
imul
outsl
in
gs
xor
aad
pop
rcll
push
shlb
les
dec
dec
sub
aam
into
push
std
jnp
inc
scas
jns
jb
jbe
fisubrs
mov
cmp
jno
pop
mov
push
inc
push
mov
ja
das
push
mov
clc
jb
jbe
insb
jg
stc
mov
push
dec
xchg
mov
rcrl
mov
mov
adc
add
push
cs
adc
sub
std
mov
ljmp
xor
ret
push
orb
aam
jbe
into
icebp
hlt
jne
push
jo
sahf
inc
stos
fwait
subl
addr16
xchg
in
sbb
adc
lahf
sub
inc
sbb
pop
test
lds
sub
xchg
push
mov
dec
scas
cmc
rol
xchg
xor
shlb
testb
iret
inc
fisubrs
nop
inc
add
sbb
mov
jae
push
mov
push
push
jecxz
nop
or
dec
mov
ss
out
push
push
sub
push
sbb
ficoms
inc
scas
aad
cmc
inc
jle
out
addr16
xchg
xor
ss
and
pop
jle
mov
das
inc
inc
cs
addr16
xchg
xchg
std
dec
xchg
gs
faddl
in
mov
inc
xor
push
mov
push
out
mov
inc
mov
into
inc
push
ds
mov
dec
bound
and
scas
push
in
sbb
call
aam
adcl
shll
jecxz
repz
std
cwtl
shlb
push
mov
add
rcll
fistl
insl
into
push
jne
std
add
xor
addr16
in
pushf
gs
arpl
rcrl
lea
xchg
mov
leave
fimull
mov
test
push
ds
push
jge
push
shl
xor
xor
es
addr16
ljmp
push
mov
mov
bound
xor
push
mov
dec
lcall
mov
scas
push
lods
aam
mov
inc
mov
rolb
push
lret
mov
out
and
add
repnz
jo
xchg
push
mov
out
mov
mov
adc
jb
jmp
cs
and
repnz
jg
push
mov
movsl
lahf
repnz
outsb
sub
scas
push
cli
jae
mov
icebp
inc
daa
push
rclb
jo
push
dec
mov
leave
xchg
rclb
push
push
hlt
jae
cmp
std
shr
loope
stos
mov
jb
jecxz
xlat
mov
xor
nop
mov
cmpsb
icebp
aaa
mov
shrl
outsl
dec
jno
les
ds
inc
repnz
push
mov
inc
out
xor
lahf
mov
mov
mov
xor
popa
rcl
aas
in
icebp
push
lea
ficoms
mov
fstpt
ret
pusha
xor
out
cmp
mov
and
push
or
testb
mov
push
lahf
fucomp
cmpsb
dec
push
aad
mov
movb
mov
mov
mull
ss
fwait
push
and
rcll
es
aas
sub
xchg
xorb
xchg
cmp
push
or
cs
data16
or
lds
in
scas
arpl
test
aad
ds
adc
sbb
push
cs
push
xor
mov
shll
add
jae
inc
mov
in
in
adc
in
fstpl
cmp
jae
inc
push
push
pop
aaa
pop
xor
jge
addr16
jle
jns
xor
shlb
push
jae
and
dec
roll
mov
sbb
cmp
cmc
push
lea
push
mov
sub
add
push
cmp
lret
mov
mov
mov
nop
test
in
push
push
adc
std
cmp
cmc
add
dec
mov
push
scas
inc
es
xor
push
lret
inc
sub
inc
mov
xchg
adc
push
cmp
bswap
adc
mov
sub
daa
inc
rcl
loop
cmp
iret
cmc
fs
int
push
in
mov
inc
hlt
push
adc
nop
xchg
push
push
xor
das
std
lret
gs
sahf
rcl
ds
inc
add
int
arpl
push
mov
mov
addr16
pop
dec
xor
sbb
roll
ds
jo
xorb
jmp
orl
outsb
jb
xchg
inc
push
add
push
icebp
push
adc
push
ljmp
pop
lahf
inc
mov
push
in
push
inc
push
jne
js
mov
scas
sub
or
adc
push
push
cmpsb
inc
push
test
xchg
jecxz
xchg
mov
jb
adc
push
fcom
gs
mov
test
jmp
es
std
mov
sbb
and
xor
xor
xchg
mov
repnz
pop
test
repnz
outsb
insl
lahf
icebp
mov
xor
shll
std
daa
adc
mov
push
ljmp
es
push
add
adc
and
sbb
lahf
add
scas
and
xchg
push
push
inc
xor
push
rcrb
mov
sahf
leave
int
std
loop
icebp
cmc
in
jbe
push
and
lahf
mov
int
frstor
and
lods
mov
fidivl
and
jp
xor
push
int
dec
fnstsw
cmp
cmp
and
aad
lahf
push
dec
mov
roll
movsb
aas
test
addr16
fwait
iret
inc
imulb
mov
outsb
cs
lahf
cmpsl
or
js
daa
sbb
jg
mov
hlt
cmpsb
push
push
inc
push
lock
std
pushf
sbb
leave
movsl
jae
in
rorl
lods
ss
pop
cs
push
and
daa
xor
loope
mov
sbb
cmp
sub
inc
push
daa
adc
hlt
inc
rcrb
into
inc
mov
ss
push
mov
test
add
mov
push
push
repz
inc
ja
and
push
stos
push
mov
jg
das
fstl
rep
pop
daa
add
xlat
div
dec
in
in
adc
xor
shl
es
push
fdivl
push
mov
loop
notb
and
unpcklps
mov
mov
inc
fcoml
lds
scas
or
mov
ret
jb
inc
divl
add
idiv
push
push
mov
cmpsb
dec
cmpsb
adc
lret
mov
rcll
aaa
addr16
lea
xchg
lods
ljmp
aaa
aad
push
gs
insl
xor
push
push
sbb
rcl
xchg
setae
stc
or
push
neg
add
xadd
push
inc
dec
dec
push
sets
inc
test
shld
push
shl
cmp
bswap
mov
and
and
mov
rcl
neg
mov
add
dec
xor
sete
mov
lods
pusha
stc
test
neg
pusha
dec
not
rol
rcr
or
add
call
jmp
lea
jbe
bts
bt
sub
bsr
sub
or
test
shld
mov
cmp
shl
btc
mov
mov
dec
or
movzbw
add
bsf
bsf
shr
cmp
shr
xadd
btr
cmp
mov
test
shr
clc
add
pushf
jmp
mov
pusha
pushf
lea
call
call
insl
pop
inc
cmp
push
cmc
sub
shld
sub
add
bsf
rol
neg
mov
add
mov
cmp
jmp
pop
cmpsb
mov
xor
ficoms
out
and
ror
mov
notl
mov
fwait
cmp
mov
les
sub
jg
pop
jo
inc
pusha
lods
sarb
inc
leave
mov
dec
push
xchg
cmc
xor
jmp
mov
mov
xchg
dec
add
out
mov
pop
movsl
fsubrs
shll
and
jne
fstpl
add
call
mov
mov
or
mov
pop
dec
aaa
ss
mov
dec
or
xlat
cmp
lods
fwait
add
dec
cmpl
xorl
or
inc
cwtl
xchg
jbe
xor
scas
push
sbb
lcall
push
xor
andl
push
cs
mov
jg
jmp
fs
imul
mov
shlb
mov
repz
loop
lods
insb
dec
stos
mov
dec
inc
and
clc
aad
imul
jmp
jg
or
xchg
gs
fldl
add
enter
push
jo
or
mov
xlat
or
push
aam
push
adc
and
sti
lods
pop
test
pop
das
jbe
ja
jae
mov
stos
mov
xchg
sub
or
or
cld
pop
adc
dec
call
xor
adc
popa
xchg
ja
bound
movsl
add
dec
cmp
jge
in
mov
pop
scas
gs
add
call
cmp
jae
sub
push
push
call
test
xchg
mov
add
xchg
test
dec
xor
fsubl
jle
pop
pop
jo
or
addr16
outsb
cmpsl
pop
js
in
lods
mov
lock
cmpsl
fisubs
sub
out
and
inc
push
mov
and
sarb
out
popf
xor
loop
dec
inc
outsb
nop
out
lods
pusha
adc
test
decb
add
sti
inc
cmp
shr
jns
shll
stos
xchg
push
leave
jb
pop
rolb
mov
xor
sti
movsb
dec
adc
or
push
cli
sbb
dec
addr16
push
or
cmp
xchg
js
daa
leave
sub
dec
jbe
lret
adc
push
jle
xor
and
fldl
lods
stc
mov
inc
es
lret
cmpsl
pop
pop
pop
jo
pop
arpl
lret
je
cmpsl
mov
jge
fadd
lret
inc
ret
add
test
les
aad
xor
cltd
inc
mov
ljmp
aam
scas
jne
out
xor
pusha
push
cmp
sub
mov
pop
notl
lock
sahf
dec
mov
jo
jno
arpl
aam
xor
sub
int
cmpsb
iret
cmp
cmp
add
sbb
jp
mov
add
jns
and
xchg
fimull
cld
xchg
mov
dec
bound
mov
adc
fwait
lcall
out
nop
inc
roll
hlt
cmp
xor
sub
rclb
or
push
dec
aas
xchg
jb
or
adc
inc
aaa
sub
add
fsubp
aam
rcrb
in
fisubrs
jnp
jg
push
sbb
loope
lds
sub
loope
mov
imulb
icebp
adc
pop
jl
lea
cli
psubw
cs
or
push
mov
js
enter
jb
data16
add
outsb
mov
popa
loop
movsl
into
push
lcall
xor
imul
jns
sbb
sub
test
cmc
mov
clc
push
cmp
mov
dec
inc
mov
add
setnp
stc
jmp
pushf
dec
pushf
movb
cmc
clc
rol
clc
pushl
jmp
sbb
mov
mov
repz
push
mov
pushf
xchg
test
xor
or
std
test
jg
inc
insl
dec
shlb
push
add
stos
inc
pop
popa
or
sub
and
popa
inc
mov
out
mov
pop
loope
adcl
sti
inc
cmpb
mov
loop
add
add
je
add
cmp
mov
xlat
addr16
sbb
and
outsl
test
imul
data16
rolb
cmc
aam
mov
pushf
mov
sahf
push
scas
ds
out
push
shlb
jp
hlt
mov
push
mov
mov
aad
popl
sbb
jb
fs
xor
xor
scas
pop
into
jnp
add
sub
mov
mov
sti
mov
mov
mov
xchg
lret
or
push
lcall
or
dec
or
mov
jp
call
or
arpl
es
clc
jmp
filds
pusha
and
xchg
popf
dec
xchg
cmpl
orl
sbb
daa
mov
pop
pop
repnz
repz
xchg
js
mov
out
and
outsl
jp
jne
loopne
mov
push
lods
mov
xor
xchg
lcall
mov
adc
jge
in
inc
divb
sbb
rclb
data16
addb
inc
cs
jne
jecxz
jne
jmp
sahf
xlat
adcb
ljmp
or
dec
mov
push
insb
cltd
imul
jge
insb
popf
insb
lcall
cmpxchg
hlt
push
lcall
adc
addb
loopne
jnp
and
or
std
push
adc
lea
mov
cmp
enter
mov
imul
mov
pop
arpl
mov
lock
xchg
fidivl
adc
mov
mov
gs
sub
addr16
jbe
test
mov
and
adc
stos
sub
imul
stc
in
xchg
pop
cwtl
mov
mov
jl
test
sub
add
adc
stos
adc
or
xchg
loop
jne
mov
call
in
mov
dec
sahf
mov
mov
test
jecxz
adc
jne
mov
jmp
test
inc
call
push
ret
pushf
pushf
lea
jmp
lock
cmp
jmp
ljmp
ljmp
jne
jnp
int
out
clc
jne
stos
mov
mov
ljmp
sub
jo
lods
pop
imul
stos
pop
ret
jmp
push
cmpsl
mov
jp
push
sbb
movsl
cwtl
jg
sbb
loope
cmp
lea
mov
or
mov
xor
inc
sub
push
mov
sbb
call
xchg
cwtl
jns
push
push
mov
jle
pop
xchg
pushf
dec
cwtl
xchg
cs
std
sahf
mov
mov
sub
mov
adc
rcr
cmp
sti
cmpsb
fbstp
mov
test
cmp
xor
or
sub
xchg
popa
pop
push
call
test
iret
xchg
inc
out
push
std
mov
sbb
mov
mov
ljmp
ffreep
cmpsl
pushf
mov
and
or
stos
lods
in
mov
and
rolb
popa
sbb
fstp
inc
push
pusha
dec
scas
push
icebp
rolb
cli
scas
pop
or
add
insb
mov
pushf
push
inc
mov
push
ss
jp
pusha
pop
dec
cmp
in
rcll
outsl
cs
pop
das
loop
int
std
popf
out
movsl
sbb
fidivrl
sbb
mov
add
repnz
shrb
mov
xor
cwtl
pop
pop
lods
pop
stos
pop
and
add
inc
orb
inc
jg
pop
js
xchg
or
and
push
jl
jg
pop
inc
cwtl
push
adc
fmul
int3
add
xor
shlb
outsb
jno
jle
mov
mov
inc
mov
faddl
push
mov
mov
bsf
stc
mov
clc
not
mov
shld
mov
cmc
cmc
cmp
xor
call
sub
push
sbb
cld
pop
dec
aas
sub
or
add
shlb
in
rolb
ret
and
les
xchg
mov
jp
pop
pop
push
mov
jb
repnz
sbb
sub
jle
mov
clc
cli
sbb
xlat
in
adc
mov
lods
scas
jg
mov
mov
mov
out
cltd
pusha
mov
pop
and
cmp
xchg
cmp
xorl
add
iret
cmp
xor
ror
jmp
lea
ja
pusha
call
clc
stc
mov
pushl
stc
pushf
stc
test
push
pushf
lea
je
pusha
jmp
call
sub
inc
jb
and
inc
ss
sbb
clc
in
fidivrl
into
add
lret
mov
lcall
out
and
sbbl
sub
das
dec
push
mov
mov
xor
arpl
push
add
mov
enter
xchg
xlat
scas
mov
sbb
inc
cmp
mov
int
adc
ljmp
jbe
ds
les
push
rcll
out
mov
sub
imul
clc
call
repnz
pushf
lea
jne
lea
movb
lahf
not
push
pushf
not
lea
pusha
pushf
movl
mov
mov
pushf
mov
pusha
pushf
pushl
ret
icebp
cmp
sbb
shlb
mov
jmp
xlat
mov
imul
lcall
sti
sub
loopne
loopne
pop
mov
bound
gs
daa
mov
and
ret
dec
popf
push
pop
ret
divl
xchg
and
shll
adc
xor
lahf
pop
or
jg
adc
pushf
inc
seta
shr
xchg
dec
shld
daa
inc
mov
cmc
inc
mov
bt
clc
mov
adc
mov
cmc
sub
call
test
add
clc
push
pusha
movzwl
sbb
cmp
test
mov
stc
add
stc
mov
cmp
test
test
pushf
call
test
call
jmp
lods
cmc
in
iret
xchg
aad
test
in
ror
lds
dec
sub
xchg
lret
subb
dec
out
sti
in
push
ljmp
or
ficomps
jbe
sbb
push
ud0
sbb
lds
icebp
ljmp
movl
out
jmp
stos
jnp
push
ficomps
aad
lret
sub
fnstcw
push
divl
sbb
jle
cmpl
sahf
sbb
and
adc
repnz
cmp
shll
in
inc
loope
cmp
lahf
and
sub
mov
movl
pushf
lea
jmp
jge
shlb
aas
mov
push
push
inc
and
or
out
loopne
inc
jne
cmp
pop
push
addr16
repz
stc
mov
or
stos
int
pusha
pop
ret
outsb
out
stos
repnz
stc
and
aaa
or
sub
push
hlt
mulb
xor
lock
inc
mov
into
mov
jmp
mov
mov
inc
stos
jo
out
pcmpgtd
repz
push
push
mov
add
mov
fs
jae
adc
mov
shl
mov
add
call
mov
cmc
mov
mov
pushf
ror
pushf
pusha
mov
push
clc
mov
call
call
lea
jae
pusha
pushf
pushf
lea
jne
pushf
stos
pushf
lea
jmp
scas
push
repz
pushf
insl
mov
sahf
mov
inc
cmp
adc
movb
mov
xchg
in
mov
jg
hlt
xlat
mov
ret
add
fstpt
lods
scas
mov
mov
cmp
in
fwait
mov
jne
push
mov
out
cmp
stos
dec
add
cmp
sahf
cmp
mov
jmp
add
andl
adc
lock
aam
mov
xchg
xchg
xor
lcall
mov
in
call
sub
loop
aaa
xor
cmp
insb
fisubs
jo
xlat
rcrb
jecxz,pt
or
mov
jae
dec
lods
jnp
pop
call
mov
xor
inc
ljmp
sbb
icebp
mulb
clc
mov
inc
imul
add
add
add
xor
add
add
push
inc
sub
add
add
sub
sub
add
add
pop
add
addb
add
repz
add
add
add
adc
add
add
push
jo
add
add
add
sub
add
add
pop
mov
add
add
adc
cmp
add
add
popa
fildll
add
add
add
add
add
add
addb
add
add
cmp
add
add
or
add
rorb
add
add
add
add
add
ret
xor
jo
sub
mov
xor
mov
sub
es
sub
clc
and
add
or
push
inc
in
jl
or
and
faddp
int3
mov
mov
cmp
mov
pop
repz
out
out
jecxz
mov
dec
pop
mov
jbe
out
stos
les
push
mov
pop
jmp
cmp
mov
cs
out
sub
push
scas
dec
push
push
add
das
je
movsl
dec
or
add
es
push
ret
mov
idivl
das
pop
xor
icebp
push
cmp
pop
add
ret
sub
lods
movsb
arpl
push
mov
pop
push
lds
sahf
popa
or
andb
stos
not
not
not
mov
lea
call
lea
je
add
dec
daa
xor
rol
mov
das
clc
jmp
push
movl
push
call
stc
inc
dec
xor
push
out
sub
adc
neg
mov
pusha
sub
out
cmpsl
fcompl
out
movl
add
mov
mov
lock
stc
repnz
xor
mov
and
nop
pop
mov
movsb
or
loop
outsb
lods
imul
outsl
movsb
dec
pop
mov
lret
in
and
dec
pop
js
lret
sub
jb
dec
cmpsl
addr16
adc
or
jno
outsb
and
mov
inc
mov
push
repz
mov
ja
dec
inc
and
push
ret
outsb
mov
mov
adc
insb
mov
mov
or
push
pusha
test
ds
scas
add
sbb
lret
rorl
dec
jmp
aaa
aad
cwtl
push
xor
mov
dec
sub
pushf
imul
cmp
inc
lds
dec
test
xor
mov
adc
iret
adc
dec
ds
pop
lock
sub
in
mul
mov
jecxz
stc
insl
std
xchg
out
pop
sbb
push
push
nop
inc
jp
iret
mov
xor
mov
int3
insl
mov
mov
pusha
mov
xchg
pusha
rolb
jnp
xor
loopne
mov
cmpsl
add
int3
cmc
adc
lods
push
xor
lret
inc
mov
les
sbb
test
mov
les
dec
scas
mov
test
stos
push
or
mov
and
jmp
jmp
cmp
outsb
sub
imul
adc
cld
icebp
in
jmp
insb
or
xchg
xchg
adc
sbbb
ret
pop
jmp
call
test
std
test
js
xor
fisttps
cltd
push
adc
inc
outsl
lods
pop
cmp
fcomps
fs
icebp
stos
cld
mov
test
adc
lods
in
jae
xchg
clc
or
subl
sub
xor
xor
add
test
mov
sub
xchg
ficompl
add
sub
test
push
stc
repnz
call
push
xchg
jge
bound
dec
sub
or
adc
inc
push
mov
outsl
and
and
or
jl
enter
cmp
icebp
jno
addr16
xchg
cmp
insb
xchg
jae
xchg
dec
je
jbe
push
mov
ficoms
cmpsb
aaa
pusha
scas
pop
sahf
ret
mov
test
movsl
jbe
mov
ret
jecxz
fcoms
mov
adc
cmp
xchg
mov
add
push
aas
add
movsl
lret
call
push
or
cli
scas
sbb
xchg
out
sahf
inc
ljmp
call
mov
sbb
imul
cmp
rorl
popa
mov
mov
das
mov
dec
xor
ficoms
ss
xor
mov
adc
lds
dec
mov
cwtl
cmp
dec
cs
push
pushf
fimull
cmpsb
fidivrl
sbb
mov
das
js
aam
and
jle
test
inc
icebp
sahf
addr16
popw
mov
mov
cmp
movsl
jecxz
mov
push
cmpb
jmp
push
mov
pusha
setno
lods
cmc
ror
pushf
movl
dec
cmp
bt
stc
cmp
neg
test
bt
sub
stc
jmp
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
xor
add
or
add
add
add
add
add
or
add
add
add
add
add
xor
or
add
add
add
add
add
xor
adc
add
lock
je
xor
sbb
add
lock
jno
sub
and
add
lock
lahf
xchg
xor
sub
add
lock
and
or
add
lock
push
fildll
add
or
add
lock
out
xor
inc
or
add
lock
fcmovnu
and
add
lock
pushf
mov
add
cmp
add
sub
push
cvttps2pi
pop
or
add
icebp
sub
xor
sub
pusha
or
add
icebp
sub
or
add
cmp
sbb
sub
ja
xor
jo
cmp
add
in
push
add
icebp
nop
push
inc
jmp
jmp
mov
mov
enter
lret
lods
lret
mov
notl
nop
repz
movsl
scas
mov
pop
popa
jnp
sub
int3
std
or
xor
test
jo
sub
mov
xor
loop
jecxz
test
or
pop
stos
sbb
fs
lret
mov
xchg
mov
jbe
cli
test
adc
sbbb
xchg
out
xor
xor
shrb
add
fcmovne
mov
xchg
xchg
cmp
leave
jo
dec
xchg
push
sub
mov
mov
sub
shrb
fstpl
xor
sti
clc
sarb
adc
jmp
xchg
sub
or
or
in
dec
sti
fsubrl
cmp
push
in
mov
push
iret
cmp
cmpsl
xchg
mov
mov
js
xchg
push
lcall
inc
icebp
jb
cld
push
xor
loopne
push
push
pop
push
mov
or
add
xchg
call
aas
cs
fmulp
ret
mov
std
xor
incl
mov
sub
mov
movsb
mov
push
cmc
pop
mov
hlt
sbb
adc
cmpsb
inc
push
mov
in
adc
jle
lds
mov
imull
arpl
fistpl
or
imul
and
rol
popf
cwtl
shrl
xlat
xor
fimull
dec
mov
not
sub
dec
fs
jp
fsub
xchg
inc
lods
pop
or
cmp
mov
lods
lea
jne
daa
cwtl
rol
sub
test
aad
btc
mov
rol
xor
add
or
mov
push
jmp
push
add
jne
mov
call
test
je
negb
mov
out
xor
gs
test
mov
cwtl
test
ficoms
pop
inc
pop
pop
scas
fstl
lods
popl
testl
pop
mov
or
pop
pop
mov
add
adc
push
add
call
push
add
jmp
imul
out
cmc
cmpsb
jnp
pushf
stos
sbb
and
mov
outsl
sub
fisubs
mov
fldl
jnp
ljmp
add
aaa
in
xchg
clc
mov
jmp
push
mull
cmp
js,pn
xor
mov
sbbl
idivb
sub
xchg
test
cmpsl
pop
jl
xor
clc
xchg
jmp
das
in
mov
xchg
lahf
scas
mov
iret
jp
test
data16
in
add
mov
xchg
jg
adc
mov
testl
and
ja
push
or
call
loope,pn
mov
mov
jg
mov
dec
lods
push
mov
mov
call
xchg
testb
pop
xor
fs
mov
mov
dec
loop
push
pop
mov
sub
xor
sahf
xlat
stos
in
loopne
xchg
xor
mov
add
pusha
movb
lea
jae
jmp
cltd
icebp
ror
jbe
pop
cmp
xchg
mov
jg
push
cmp
sub
cmpsl
mov
or
cs
sahf
and
inc
xchg
aas
push
gs
ds
xchg
sub
jecxz
mov
and
jge
push
mov
lahf
pop
outsl
push
arpl
imul
and
push
imul
movsl
insb
ja
mov
xor
inc
mov
je
ss
lock
je
rolb
test
push
aas
stos
repz
out
sbb
mov
sbb
sti
leave
mov
dec
clc
mov
gs
mov
std
in
ja
xchg
ds
xor
mov
xor
and
push
adc
inc
mov
fwait
cmc
pop
push
dec
pop
inc
jne
shll
xchg
mov
sub
mov
fcoms
ret
out
out
cmp
out
icebp
inc
lock
jle
sbb
push
cmp
cwtl
int3
cmp
push
outsb
aas
push
add
mov
push
repz
in
mov
repnz
pop
adc
mov
xchg
lea
jne
inc
lea
shl
sub
mov
test
sub
pushf
lea
test
sub
push
pushl
popl
cmc
pushf
stc
cmp
cmp
pushf
mov
pushl
jmp
jno
enter
sub
push
pop
cs
inc
xor
repnz
ror
mov
push
lret
sarb
xor
lcall
xlat
es
fdiv
sub
jnp
pushf
jecxz
aam
xlat
sbb
lea
add
gs
or
cmp
push
inc
ret
icebp
mov
mov
idivl
or
sbb
mov
cmpsl
jmp
aad
mov
xchg
popa
lcall
sbb
or
icebp
hlt
movsl
inc
test
mov
mov
dec
sbb
dec
pop
mov
lods
bound
shld
inc
stos
imul
jp
pop
stos
push
cmpsl
mov
xchg
int3
jne
ljmp
pop
xchg
mov
jl
hlt
push
mov
cli
ja
out
jecxz
sub
xchg
fisttps
sti
sahf
push
add
bound
mov
mov
dec
adc
sar
xor
push
pushf
call
add
push
gs
gs
popa
insb
jne
inc
js
add
pushf
xor
mov
mov
js
jl
dec
aaa
push
jle
mov
test
jbe
dec
call
stc
xchg
ror
repnz
mov
daa
addl
imul
in
xor
and
adcb
and
bound
jb
lds
cmp
mov
sub
addb
push
call
cs
or
lret
repz
mov
mov
xchg
add
mov
shl
je
mov
insb
mov
and
add
push
jmp
mov
ja
repz
out
mov
mov
jl
xchg
ret
dec
mov
lods
pop
sbb
push
pop
inc
mov
fsubl
sar
dec
xor
sarl
sbb
cmp
in
xchg
arpl
jns
fldt
jg
jecxz
mov
and
stos
add
adc
mov
jno
xor
insb
xchg
ds
xchg
pop
sbb
pop
std
push
clc
iret
pop
cwtl
cmp
mov
sub
pop
fstl
pusha
adc
jp
lret
hlt
push
adc
pushf
and
jmp
mov
rorb
sarb
mov
ss
sbb
mov
mov
movsl
lahf
lock
loopne
mov
lods
dec
cmpsb
xchg
cwtl
dec
mov
push
or
push
mov
xor
mov
mov
daa
or
lods
mov
insl
sbb
mov
xchg
fwait
mov
push
pop
out
xchg
mov
cmp
jb
push
test
mov
jge
cmp
cmpsb
repz
add
or
add
cltd
add
xor
andl
mov
and
mov
dec
cmp
xchg
sar
sbb
shld
sbb
mov
test
sub
jmp
call
call
pop
pushf
movzbw
mov
call
pusha
lea
je
push
lea
jae
call
cmp
je
lret
and
cli
lret
mov
mov
pop
or
dec
mov
faddl
cs
icebp
outsb
dec
loop
adc
popf
in
notl
mov
pop
mov
imulb
idivl
jl
or
dec
sbb
sub
sarl
cmp
sbb
push
cmp
movsl
cwtl
pop
or
mov
pop
push
sar
arpl
sub
sub
add
int3
or
mov
lds
ficoml
lret
insb
lods
pop
pop
jmp
repnz
jecxz
enter
or
hlt
jmp
test
dec
fisttpl
inc
push
gs
add
jg
enter
xor
bound
and
cwtl
cld
or
xor
mov
pop
cmpb
mov
sub
fldenv
call
aaa
jo
inc
inc
enter
popf
shlb
push
adc
cmp
inc
dec
outsb
xor
push
xchg
out
test
mov
jno
stc
popa
sbb
and
sub
mov
push
sbb
push
jb
ljmp
test
call
sbb
add
xchg
fidivrs
xor
hlt
out
cmpsl
sahf
mov
bound
mov
or
jae
cmpxchg
jle
cltd
mov
mov
outsb
jmp
mov
fsubs
xchg
loopne
cmc
push
xchg
dec
jo
dec
test
mov
pop
iret
aas
lahf
mov
popl
xchg
cmp
mov
test
mov
inc
cmc
cmp
or
loopne
adc
mov
adc
popl
jbe
mov
aam
lahf
mov
xchg
and
pop
fisubl
insl
and
cmp
sub
clc
xor
andb
ss
jge
scas
insl
cmpsb
lret
jle
nop
push
push
lods
loop
mov
adc
clc
push
xor
jbe
cmpsb
dec
hlt
xlat
lds
jmp
push
mov
add
lock
add
mov
shrb
cmp
sbb
repz
jno
adc
scas
xchg
mov
lods
cwtl
dec
adc
xchg
enter
mov
mov
and
push
into
inc
add
mov
movl
lret
fmull
jmp
sti
insb
xchg
mov
xchg
xor
inc
pop
add
xor
lcall
inc
repz
inc
cld
cmpsl
dec
cmc
mov
mov
cmp
xchg
mov
lcall
adc
sub
in
stos
lods
cwtl
jnp
xlat
dec
out
inc
push
jecxz
loopne
out
insl
inc
inc
fs
sub
decl
jp
fpatan
adc
push
push
loope
dec
movsb
popa
bound
and
subb
arpl
jle
test
lcall
in
fidivs
sub
sub
cmp
and
loop
sahf
xlat
jo
mov
out
push
adc
push
mov
lcall
adc
add
pusha
clc
add
clc
cmc
push
cmp
cmp
mov
lea
jb
jmp
call
cmp
xor
mov
and
cmp
lock
loopne
test
xchg
lock
add
insb
or
into
adcb
cld
es
ffreep
cmp
mov
leave
pusha
scas
inc
cwtl
and
dec
andl
mov
add
lea
dec
cmovs
xor
int3
sub
mov
push
imul
xor
jo
out
sbb
gs
jmp
jmp
push
push
fstpl
sbb
in
incl
xchg
cld
sahf
jg
lret
mov
arpl
pop
cmp
popl
in
js
mov
sub
je
lahf
jg
adc
scas
sub
sbb
pop
dec
stos
inc
sub
cmpsl
scas
in
xchg
push
lds
lret
stc
mov
lds
dec
mov
mov
cmpsb
lret
shl
ljmp
pushf
pop
pusha
sahf
dec
pop
pop
gs
mov
or
dec
clc
in
lcall
sub
test
fisttpll
jmp
lahf
adc
pop
popa
dec
add
imul
pop
cmp
sub
and
loop
les
sub
jb
out
cmp
push
stos
aam
dec
mov
call
shll
and
mov
push
lret
adc
cld
or
ljmp
call
scas
mov
mov
data16
or
les
repz
or
pop
or
lret
mov
mov
mov
mov
sbb
repnz
mov
into
mov
mov
add
loopne
shlb
push
fildl
push
mov
add
in
movsb
jns
fldl
jns
xor
jae
mov
mov
pop
xchg
lret
lcall
negb
shlb
mov
cltd
add
mov
push
cmp
fs
xchg
cli
mov
mov
pop
push
mov
sbb
addl
jnp
ss
inc
push
inc
push
dec
xor
cs
insb
add
sub
push
mov
mov
mov
pop
pusha
pop
pop
cmp
sbb
into
xor
lds
mov
fs
sub
sub
mov
sbb
push
adc
imul
pop
mov
sbb
push
add
cmp
mov
daa
cltd
outsl
or
cmp
adc
sarb
fstl
sbb
mov
xchg
jno
mov
or
push
mov
xchg
pop
pop
pop
dec
cmp
pop
cli
mov
push
nop
pop
sbb
sbb
repnz
dec
cmp
lods
push
and
cmp
ret
stos
mov
push
shll
dec
sti
dec
aas
sub
push
xchg
leave
adc
and
stos
push
cmpsl
mov
cwtl
stos
cltd
inc
bnd
push
mov
cmc
hlt
mov
or
jnp
test
loop
dec
call
inc
xor
mov
add
popl
dec
adc
test
lea
in
mov
iret
mov
adc
mov
jp
dec
inc
ss
jge
pop
push
dec
js
out
aaa
jge
ficompl
cmp
arpl
into
lret
inc
adc
aas
bound
pushf
outsl
test
test
lcall
stc
cmpl
sbb
addr16
es
cld
stc
and
dec
ljmp
scas
sbb
stos
pop
into
ds
scas
fadd
ja
xor
add
lds
sbb
mov
movsl
push
mov
sub
mov
adc
fs
call
push
pushf
mov
call
pushw
popfw
movw
call
pushl
cmp
push
lea
ja
call
jnp
enter
inc
outsb
mov
xchg
jle
push
cmp
add
ljmp
enter
push
shll
scas
add
xchg
mov
adc
adc
dec
jbe
test
cmp
and
push
mov
into
jne
jnp
mov
push
cwtl
push
nop
dec
add
loopne
dec
icebp
stos
imul
repnz
lods
pop
sbb
push
mov
lods
dec
cmpsb
movsl
xchg
inc
mov
rolb
xor
sbb
add
leave
scas
xchg
cwtl
xchg
inc
stc
pop
movaps
and
inc
icebp
push
or
loop
dec
cmc
fidivl
dec
movsl
call
popa
dec
mov
mov
aad
and
out
pop
dec
fisubrl
icebp
mov
cmpb
xor
or
in
aas
mov
mov
xchg
xchg
pop
push
mov
daa
mov
inc
xor
mov
jbe
les
outsb
pop
pop
cmp
and
sbb
jecxz
xlat
icebp
mov
repnz
roll
scas
and
xor
pop
xchg
cmp
xor
mov
test
or
or
cltd
inc
xchg
enter
sub
fcmovb
jb
xorb
and
push
in
in
fs
sbb
sub
mov
xor
nop
dec
or
mov
mov
pusha
movw
lea
call
pusha
mov
adc
call
shrd
movzbl
sub
bswap
not
movzbl
pop
not
bswap
bswap
pop
movsbw
lea
movzbw
pusha
mov
pusha
movsbl
mov
push
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
mov
shld
mov
rcr
rcr
mov
cmp
cmp
sub
clc
repnz
pusha
lea
jne
call
xchg
ljmp
mov
dec
aaa
sub
add
out
mov
pop
xor
jl
adc
inc
out
in
gs
shll
movsl
into
jb
jg
rorb
push
cs
repz
outsb
ja
adc
add
scas
lahf
pop
movsl
add
xchg
push
aam
in
cmp
cs
adc
push
jmp
mov
in
call
ja
cmp
pop
mov
jmp
subb
fstl
bound
cld
out
mov
cwtl
add
xchg
lock
mov
mov
insb
jae
stc
lods
jg
test
mov
mov
xchg
mov
jmp
cmp
leave
faddl
push
push
jb
in
push
mov
out
clc
xor
dec
or
xchg
mov
push
icebp
push
int
insb
in
cs
lahf
sar
or
lret
xchg
xor
fdivrs
sbb
rsm
pop
es
jbe
into
test
pop
mov
in
add
stos
xor
mov
imul
sub
adc
imul
sbb
jae
ljmp
dec
movsb
mov
push
pop
pop
inc
mov
test
flds
sbb
inc
js
imul
inc
pop
mov
idiv
fiaddl
mov
stos
mov
and
push
in
loope
in
xor
lods
cld
jecxz
jnp
lret
orb
sub
mov
lods
mov
jae
dec
inc
cmp
or
jns
fbstp
mov
inc
dec
cmp
mov
imul
inc
mov
decl
jnp
stos
mov
push
repz
adc
mov
lods
addr16
bound
mov
enter
popa
xor
adc
lea
je
stc
clc
cmc
stc
sub
clc
cmp
call
incl
xor
lock
loop
cmpsb
cltd
mov
dec
inc
dec
cmp
mov
xor
adc
bound
mov
mov
mov
fcom
inc
xchg
xor
adc
cmpsl
call
aad
incb
dec
xor
sbb
and
outsb
mov
aaa
filds
div
and
test
cwtl
mov
pop
pop
or
sub
push
lea
test
loop
jmp
aad
mov
rcl
sbb
not
add
sbb
push
not
sbb
mov
sub
cmc
test
jae
pusha
lea
je
bt
sub
cmc
cmp
pusha
jmp
jmp
mov
movw
lea
jmp
mov
pusha
call
bt
neg
pusha
pushf
xor
push
mov
bt
pushf
mov
test
test
cmp
sub
jmp
pushl
popl
push
pushf
movb
lea
jmp
mov
pushl
mov
pushf
pushl
ret
push
call
test
rol
cmc
or
mov
test
push
sub
pusha
bt
jmp
not
push
add
pushf
mov
dec
call
sbb
bt
jmp
jmp
push
cld
movb
movw
movb
rep
sub
rol
mov
call
lea
and
btc
rdtsc
test
test
je
sub
push
call
pushl
movl
mov
pushf
pushf
pushf
mov
lea
jmp
mov
pusha
mov
pushf
lea
jmp
pushf
mov
pushf
jmp
jmp
pushl
mov
pushl
pushf
mov
movb
jmp
pusha
pushf
mov
pusha
push
pushl
call
pushf
popl
jmp
pushf
lea
bswap
mov
pop
jmp
jmp
mov
mov
pusha
movb
mov
pushf
push
mov
lea
jmp
pusha
cmp
pushf
xor
call
pushf
mov
mov
movb
movb
jmp
pushf
pushf
mov
jmp
lea
je
pusha
sub
call
pusha
mov
mov
mov
pushl
mov
pusha
movw
lea
jmp
mov
lea
jp
push
not
movzbw
push
xchg
jmp
mov
pusha
movl
lea
jmp
dec
cmc
xor
cmp
pushl
xor
pushf
bsr
not
push
sub
bsf
shr
bt
bsf
not
bts
sbb
xor
clc
pushf
movzbl
call
jmp
mov
jmp
rcr
mov
test
stc
add
jmp
pushf
mov
jmp
jmp
bt
shrd
xor
pushf
dec
setge
neg
btr
inc
rcl
add
shl
movzbl
jmp
dec
pushl
popl
xchg
call
pushf
daa
ror
stc
mov
pushf
call
pushf
add
push
pusha
mov
mov
lea
jmp
pushf
inc
bt
stc
not
cmc
movw
xor
push
clc
sub
mov
call
jmp
pushf
popl
jmp
stc
rol
sub
jno
neg
cmc
pushf
push
xor
push
push
mov
cmp
push
push
clc
sub
lea
jg
dec
pusha
push
call
not
movl
pusha
mov
sete
dec
mov
sets
mov
rol
pushf
neg
sub
shld
xor
movzbw
movzbw
lea
shrd
dec
sub
sub
mov
bts
dec
jmp
pusha
mov
push
mov
lea
jmp
pushf
or
shld
mov
dec
lea
mov
bt
pusha
bt
add
movb
call
cwtl
bt
bt
sub
bt
cmp
movb
movw
sub
call
jmp
pushf
dec
call
dec
mov
mov
not
inc
mov
movzbw
pushl
popl
xchg
call
lea
jnp
pushf
pusha
mov
pushf
call
push
bt
xor
test
bt
sub
pushf
add
movb
not
clc
test
xor
test
test
cbtw
sub
jnp
cwtl
clc
clc
cmc
jmp
mov
xchg
bt
bt
cmc
mov
call
pushf
push
pushf
jmp
mov
pushf
push
mov
mov
lea
jmp
mov
not
movzbw
movsbw
mov
pushf
push
pushl
ret
test
add
pusha
mov
pusha
lea
jmp
call
movsbw
lahf
mov
clc
rcr
mov
pusha
stc
sub
mov
shl
call
pusha
call
pusha
pusha
mov
mov
lea
jmp
movb
inc
jmp
mov
pushf
pushf
pushf
popl
pushl
pushl
push
pushl
popl
push
pushf
movw
pushf
lea
jmp
sub
pushf
pushl
push
mov
movl
pushf
movw
pushf
lea
jmp
shrd
mov
xor
test
mov
push
pusha
add
pusha
pushf
jmp
xchg
bswap
pop
call
call
stc
cmc
mov
bt
or
jmp
jmp
pusha
push
pushl
popl
push
lea
jmp
shr
shl
mov
jmp
jmp
mov
pushf
mov
call
rcr
daa
clc
mov
call
jmp
xchg
movzbl
pushf
dec
xchg
lea
je
rcr
rol
bt
movsbw
xor
call
mov
jmp
call
jmp
pusha
mov
movl
pusha
pushf
mov
lea
jmp
repz
popl
jb
pusha
xchg
pushf
movzbw
push
inc
xchg
pusha
bswap
mov
xchg
lea
dec
jmp
jmp
pusha
stc
cwtl
pushf
push
sub
pushf
movw
mov
pushf
movb
movl
pushf
lea
jmp
mov
lea
jno
push
pushf
popl
pusha
mov
pusha
pushl
popl
push
pushf
mov
lea
jmp
cmp
mov
test
pusha
sub
clc
shr
call
mov
push
movb
call
pushf
call
pushf
call
pushl
popl
pusha
push
lea
jmp
pushl
mov
pushf
popl
call
mov
mov
movb
push
lea
jmp
mov
xchg
pushl
xchg
push
jmp
push
jmp
mov
jmp
rcl
mov
sar
rol
sar
add
stc
btr
mov
setl
add
pushf
adc
xor
jmp
bsf
shl
rol
aad
mov
pusha
cmc
cmp
bswap
cmp
cmc
jmp
mov
add
call
test
cmc
sub
test
sub
jge
stc
cmp
and
call
pushf
popl
jmp
movl
movl
call
pusha
clc
cmc
xor
btc
rol
rol
setle
bts
lea
xor
sub
jmp
push
lea
jle
pusha
mov
push
pusha
pushf
lea
jmp
pusha
div
call
das
shl
mov
rol
pushf
sets
shrd
mov
call
lea
jne
pushf
pushf
mov
pusha
pushf
pushl
push
lea
jmp
mov
test
cld
clc
cmc
pushl
popf
movw
movl
lea
jmp
pushf
pushf
mov
push
mov
push
pusha
lea
jmp
pushl
popl
movl
lea
jmp
mov
mov
movzbw
inc
lea
pushf
mov
jmp
bt
pushl
shl
cmp
bt
shr
test
jmp
sub
pushf
push
lea
jne
test
push
xor
jmp
clc
lahf
xadd
lea
mov
stc
pushf
rcl
mov
cmc
test
cmp
bt
sub
stc
bt
shl
push
push
jmp
cmc
not
jmp
lea
jg
pusha
pushf
popl
push
pusha
jmp
not
cwtl
pushf
setnp
mov
mov
mov
call
mov
pushf
mov
pushf
pusha
movw
mov
lea
jmp
decl
lea
jle
pushf
lea
jne
jmp
call
pushl
jmp
setbe
shl
rcr
mov
mov
call
call
bsr
and
adc
shl
mov
pusha
sub
pushf
mov
jmp
shr
or
mov
clc
mov
call
pushf
xchg
push
jmp
mov
call
not
jmp
mov
aam
shr
aam
lea
jmp
mov
mov
not
mov
pushf
divl
jmp
call
mov
xchg
movzbw
call
mov
dec
push
mov
pushf
pushl
push
lea
jmp
push
pusha
cmc
and
mov
pushl
push
movw
pushf
popl
push
pushl
popl
push
pushf
lea
jmp
pushf
popl
jmp
mov
test
not
cmp
stc
not
stc
clc
cmp
test
and
call
pushf
cltd
clc
btc
mov
jmp
call
add
pusha
movb
mov
pushl
push
movw
lea
jmp
xor
pusha
xchg
push
jmp
pushf
push
push
mov
mov
pusha
movw
movb
lea
jmp
pusha
call
call
mov
mov
movl
movw
movb
lea
jmp
mov
pusha
push
movw
lea
jmp
mov
bswap
pop
dec
mov
not
call
mov
pushf
pushf
popl
jmp
sar
cmc
adc
mov
cmp
xor
push
clc
test
cmp
xor
bt
clc
movb
sub
stc
cmc
cmp
push
not
stc
cmc
pushf
xor
test
cmp
sub
mov
mov
pusha
jmp
push
movb
mov
pusha
mov
pushl
lea
jmp
push
inc
shr
shrd
notl
aam
sbb
bt
mov
call
and
bts
mov
mov
dec
mov
call
not
bswap
call
jmp
mov
mov
lea
jns
push
pushf
popl
call
push
pusha
pushf
movw
pushf
lea
jmp
pusha
mov
pushf
pushf
push
call
mov
cmp
pusha
and
jmp
jmp
shl
push
mov
add
je
setnp
mov
push
test
rcl
and
mov
pusha
call
jmp
call
setne
jmp
mov
pusha
movb
push
pushf
lea
jmp
lea
bsf
shl
mov
push
pusha
add
pushl
lea
jmp
mov
pushf
not
test
cmc
pushl
add
pushl
call
cltd
movzbw
bsr
rcl
mov
jmp
pusha
cmp
push
pushf
push
call
pusha
mov
lea
aas
pop
lea
pop
sub
not
pop
bswap
movsbw
pop
das
pop
cld
std
pop
pusha
mov
test
mov
add
movzbw
shr
pushl
popf
call
movl
pusha
jmp
jmp
dec
pusha
jmp
and
cmp
movzbl
sbb
xor
not
cmc
xor
add
rcl
pusha
ror
pushl
rol
or
neg
add
stc
sub
btr
shld
neg
bswap
movb
movzbw
rcr
xor
cmc
mov
call
mov
pushl
push
lea
jmp
add
cmp
test
call
pushf
ror
shr
shrd
mov
bt
call
push
jmp
pushf
jmp
pushl
mov
pushf
pushl
pushf
popl
push
pushl
popl
movb
lea
jmp
call
rol
or
xor
btc
shld
mov
rol
sub
setb
btc
mov
clc
setb
or
bsr
mov
rcr
sar
setne
add
xchg
mov
or
stc
shl
or
add
bts
test
and
test
xor
setns
movsbw
dec
stc
pusha
neg
shrd
add
ror
movzbl
shl
bswap
mov
call
pushf
mov
setl
inc
not
dec
btr
pushf
call
pusha
push
jmp
std
mov
pop
mov
pushl
bswap
lea
std
pusha
cld
movb
xchg
movzbw
movzbw
cld
std
mov
cld
push
call
stc
cmp
cmc
pushl
popl
stc
clc
pushf
add
cld
movb
cld
pushl
popf
pusha
lea
jmp
dec
movb
pushf
lea
jmp
pushf
call
mov
xadd
mov
bsf
btr
xor
inc
movsbw
bswap
dec
inc
shl
and
btc
neg
call
adc
sub
rcl
mov
cmc
cmc
mov
pushf
sub
cmc
shl
jmp
call
pusha
mov
pushf
setb
jmp
aaa
cwtd
mov
rcl
or
inc
or
mov
pushf
not
push
not
movb
mov
cmc
sub
clc
stc
pusha
push
and
call
mov
mov
lea
jmp
cwtl
cltd
aam
or
mov
shrd
bts
mov
stc
stc
cmc
sete
mov
push
clc
add
pusha
stc
stc
shld
pusha
pushf
mov
movw
jmp
jp
xchg
jno
xchg
popa
mov
xchg
fs
xchg
sub
xchg
xchg
lret
xchg
and
mov
xchg
mov
xchg
test
int
incl
int
incl
xchg
xor
xchg
roll
decl
mov
inc
mov
call
leave
xchg
repz
xchg
js
xchg
or
xchg
push
xchg
pop
iret
xchg
ss
jp
xchg
inc
int
decl
rolb
jmp
xchg
out
xchg
lds
xchg
push
xchg
sahf
mov
xchg
mov
xchg
ss
aad
xchg
leave
mov
jmp
into
xchg
mov
ret
pop
xchg
roll
push
leave
xchg
int
ljmp
lret
xchg
lret
iret
xchg
add
xchg
test
xchg
data16
jmp
lret
xchg
xchg
lret
xchg
mov
xchg
out
xchg
mov
xchg
inc
ret
lods
ret
mov
xchg
lds
xchg
pop
movl
decl
rolb
decl
mov
ljmp
mov
decl
roll
call
mov
incl
rolb
call
int3
xchg
push
xchg
mov
xchg
mov
xchg
add
xchg
lret
iret
xchg
mov
xchg
repz
xchg
fs
xchg
clc
roll
jmp
xchg
add
xchg
push
mov
xchg
lret
iret
xchg
ss
lds
xchg
popa
mov
xchg
push
xchg
scas
roll
pushl
movl
incl
xchg
ror
xchg
pop
xchg
inc
ret
test
lret
xchg
hlt
rolb
fs
xchg
pop
xchg
inc
mov
xchg
mov
mov
xchg
push
xchg
fs
xchg
jp
xchg
sub
xchg
pop
iret
xchg
push
rolb
push
rolb
js
xchg
repz
xchg
js
xchg
push
xchg
sahf
mov
xchg
scas
roll
call
leave
xchg
aad
xchg
aad
xchg
xchg
lret
xchg
aad
xchg
push
aad
dec
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
lret
mov
xchg
leave
mov
jmp
pushl
movl
decl
rolb
ljmp
lret
xchg
adc
roll
push
leave
xchg
ss
or
xchg
jno
xchg
mov
xchg
inc
ret
xchg
lret
xchg
leave
mov
push
rolb
mov
xchg
test
xchg
lds
xchg
roll
push
rolb
pop
int
decl
rolb
push
mov
jmp
xchg
mov
xchg
mov
iret
xchg
push
rolb
clc
roll
push
leave
xchg
pusha
iret
xchg
cmpsb
rolb
jmp
movb
int
jmp
xchg
push
aad
jmp
xchg
and
iret
xchg
push
rolb
pushl
xchg
pusha
iret
xchg
xor
xchg
pusha
iret
xchg
jno
xchg
pusha
iret
xchg
xor
bswap
or
cmc
mov
pusha
add
mov
lea
jmp
mov
pushf
mov
pusha
lea
jmp
shl
xchg
ror
mov
rcr
mov
sub
add
mov
call
mov
lea
jge
pusha
pushl
pushf
mov
jmp
adc
movzbl
clc
stc
pusha
xor
call
jmp
mov
pusha
push
mov
call
call
lea
ror
test
pop
mov
sub
xor
sar
not
mov
bswap
mov
lea
add
xchg
shr
not
mov
bts
add
pusha
xor
bswap
dec
test
pusha
shl
movsbw
neg
test
seta
add
pop
movzbl
rcr
mov
test
mov
not
cmp
test
cmp
stc
add
movb
dec
movb
call
mov
pushf
pushf
movb
movb
lea
jmp
rol
movsbw
pushf
xor
clc
lea
clc
sub
pushf
not
movzbw
bt
lea
add
sets
mov
bt
mov
not
add
xor
add
sub
not
setle
sbb
mov
adc
rcr
add
bsr
bsf
shld
xor
pusha
call
jmp
push
pushf
mov
pushf
lea
jmp
sbb
mov
test
add
push
pushf
mov
mov
jmp
pusha
mov
movw
pusha
lea
jmp
pushl
push
jmp
jnp
push
call
jmp
cmp
xor
movw
mov
xchg
jmp
pushf
popl
jmp
jmp
add
call
mov
mov
dec
test
neg
stc
cmc
stc
ror
call
jmp
pushf
mov
mov
lea
jmp
mov
movw
pushf
pusha
lea
jmp
mov
push
pushf
pushl
ret
pusha
pushl
mov
movl
lea
jmp
test
add
test
shrd
push
mov
movw
pushf
popl
pusha
push
call
call
pushf
pushf
popl
pushf
push
pushl
popl
push
pushf
pushf
lea
jmp
push
lea
cpuid
cmp
test
sub
pushf
pushf
stc
test
cmpl
jmp
pusha
add
jmp
pushf
popl
lea
jge
pusha
pusha
pushf
pushl
popl
push
movb
lea
jmp
pushl
popl
mov
lea
jmp
pushf
popl
pusha
push
pushl
popl
pushf
push
movb
mov
lea
jmp
mov
pushf
pushl
ret
dec
movzbw
xadd
mov
bts
btr
add
shrd
call
lea
jp
pushf
mov
mov
pushf
lea
jmp
setbe
dec
movsbw
test
neg
bswap
pop
add
shl
push
sar
movzbl
xor
rcl
mov
mov
not
cmc
bt
add
call
pushf
call
jmp
bts
mov
lahf
shl
mov
cmp
call
call
push
pusha
movl
pushl
popl
pushf
mov
lea
jmp
add
clc
pusha
bt
bt
xor
stc
push
rol
mov
jmp
pushl
popl
mov
movb
movb
lea
jmp
mov
pushf
push
pushf
pushf
lea
jmp
call
and
clc
test
cmp
cmc
cmp
pushf
lea
jne
mov
rol
xorb
pusha
mov
pushf
push
lea
jmp
mov
bswap
dec
pusha
shr
neg
bswap
rcl
add
rol
movzbl
bt
adc
mov
stc
clc
call
pusha
mov
mov
pusha
mov
pushf
lea
jmp
push
mov
pushf
jmp
movzbw
bswap
mov
pop
pushf
push
pushf
lea
jmp
aam
mov
cmp
bt
add
call
push
call
test
sub
push
mov
call
add
cmc
cmp
sub
call
call
bt
aam
aaa
mov
push
clc
xchg
pusha
sub
call
bt
cmp
push
lea
jne
sbb
bswap
shrd
xorb
jmp
mov
jmp
mov
pushf
pushf
movb
mov
lea
jmp
mov
pusha
lea
jmp
call
test
test
stc
add
call
pusha
pushl
popl
pushl
push
movb
push
lea
jmp
call
stc
jmp
pushl
jmp
pusha
pushf
popl
pusha
movb
call
add
add
pushl
popl
pushf
push
lea
jmp
setnp
adc
mov
cmp
pusha
pushf
add
push
movb
lea
jnp
pushf
push
pushl
mov
pushf
pushl
popl
push
push
pusha
push
lea
jmp
jmp
lea
jne
jmp
mov
mov
pushl
mov
pushf
push
lea
jmp
movb
mov
pushl
popl
mov
movb
push
lea
jmp
pushl
call
call
mov
pushf
mov
lea
jmp
mov
pushf
pushf
pushf
pushl
lea
jmp
pusha
jmp
pushf
popl
jmp
pushf
jmp
sbb
jmp
mov
sub
bt
cmp
call
lahf
mov
pusha
pusha
pushf
mov
mov
call
mov
pushf
pushf
popl
movl
pushf
pushf
pushl
popl
push
push
pushl
mov
lea
jmp
jmp
shr
xor
sub
movzww
pusha
stc
xchg
clc
call
pusha
mov
push
pushf
lea
jmp
push
mov
call
ror
sar
xor
pusha
rcl
movsbw
rol
cmp
sbb
btc
xor
rcr
bswap
pushf
sets
and
pop
shld
mov
pusha
pushf
movl
add
movb
pushl
pushf
mov
pushf
lea
jmp
pushf
popl
call
pushf
repz
popl
movsbw
jmp
mov
movb
push
lea
jmp
jmp
pusha
pusha
mov
pushf
lea
jmp
not
push
push
mov
movsbw
push
lea
xchg
pushl
popl
movsbl
inc
push
mov
xchg
not
movzbl
mov
dec
sets
sets
pusha
dec
cmc
xchg
pop
lea
rol
movsbl
bsf
xor
and
xor
adc
lea
btr
rol
sub
lea
and
bsf
mov
bt
or
rcr
mov
btr
inc
test
add
add
call
jmp
call
push
lea
mov
pushf
push
call
pushf
pusha
pushl
popl
movb
movb
push
lea
jmp
jmp
bt
xor
call
mov
pushf
lea
jmp
pushf
pushf
mov
push
pushf
popl
pusha
pushl
pushl
popl
push
mov
pushf
movw
lea
jmp
test
shr
push
jmp
not
not
ror
rcr
cmp
shr
xor
movsbw
setb
not
dec
rcr
bsr
sbb
cmc
mov
movw
cmp
pushf
bt
add
push
jmp
jmp
sub
movzbl
call
pushf
mov
pushf
movw
pusha
lea
jmp
push
mov
pushl
pushf
pushf
mov
pushl
ret
clc
bsf
mov
push
pushf
jmp
xadd
mov
dec
rol
adc
not
mov
pushf
movb
mov
stc
add
call
cmp
mov
lea
bt
mov
call
mov
movb
lea
jne
test
mov
bts
bsf
mov
push
jmp
sub
pusha
push
mov
movw
push
movb
movb
lea
jmp
pushl
popl
mov
lea
jmp
jmp
pushf
mov
pushf
pushf
push
pushf
popl
pushf
pushf
pushl
popl
movb
movb
mov
mov
lea
jmp
push
pushf
pushf
popl
pushl
pusha
pushl
popl
pushf
push
movw
push
lea
jmp
add
movw
pushf
pushl
mov
movb
push
lea
jmp
bswap
setg
mov
pushf
mov
lea
jmp
bt
add
jmp
dec
pushl
pusha
pushf
jmp
lea
mov
call
mov
pusha
call
test
cmpl
call
cmc
pushf
sub
movb
mul
mov
pusha
push
mov
mov
movb
jmp
xchg
inc
rcl
rol
mov
shl
add
cmc
add
xor
add
sar
shr
bsr
mov
cmc
call
movb
pushl
popl
mov
pushf
mov
movw
lea
jmp
dec
movb
call
pushf
mov
movl
push
push
lea
jmp
jmp
or
stc
xor
push
pusha
inc
jmp
add
call
lea
jp
cpuid
push
sub
stc
jmp
jmp
shrd
bsf
mov
neg
or
mov
pusha
cmp
pushf
sub
pushf
shr
mov
push
jmp
call
cmp
xor
movw
cmp
call
sbb
shl
not
bsr
mov
and
mov
cmc
pushf
push
add
mov
pushf
mov
mov
lea
jmp
call
pushf
call
pusha
dec
cmp
xor
clc
cmc
jmp
jmp
pusha
xchg
not
mov
movzbl
dec
movzbl
xchg
xchg
jmp
movw
movl
pop
dec
lea
mov
call
call
mov
mov
pushl
ret
shrd
call
call
not
pusha
push
movzbl
mov
movsbw
mov
pop
movzbw
call
mov
push
test
cmp
push
sub
pushl
jmp
mov
push
pushf
push
lea
jmp
cmp
neg
mov
pusha
bt
cmp
sub
call
mov
pushl
mov
movl
mov
pusha
lea
jmp
lea
ja
xadd
btc
xadd
cmp
mov
test
shld
sar
lea
cmc
rcl
sub
shl
neg
lea
bsr
rcr
sar
and
pushf
pushf
sbb
sub
bswap
pusha
bswap
mov
movzbw
bswap
pushf
pushf
popl
pusha
movzbl
jmp
pushl
popl
mov
movb
mov
lea
jmp
pushf
pushl
mov
pushl
pusha
push
lea
jmp
ror
bt
mov
test
pushf
push
clc
sub
call
lahf
inc
shl
mov
bsr
btr
dec
mov
sar
mov
pushf
stc
sub
call
mov
sar
movzbl
bt
jmp
pushf
push
mov
pusha
pushf
push
lea
jmp
mov
pushf
pushf
movb
pushf
pushl
ret
