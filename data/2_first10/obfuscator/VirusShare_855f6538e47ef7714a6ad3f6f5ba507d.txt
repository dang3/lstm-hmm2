mov
add
add
add
gs
xor
add
idivl
add
in
loop
sub
add
xor
add
add
mov
or
and
loop
mov
add
and
add
adc
mov
sti
pop
aas
ret
add
add
dec
pop
fistpl
or
add
jb
rcrb
xor
xchg
inc
add
pop
stc
or
add
pop
jne
lcall
js
pop
hlt
or
add
lcall
jne
xor
pop
iret
jl
pop
pop
ret
add
insb
add
add
daa
into
loope
sti
out
mov
add
daa
cli
sti
test
add
add
add
add
ljmp
jp
mov
add
add
out
mov
add
add
lcall
mov
in
ds
add
cmp
test
pop
sbbb
in
dec
pusha
lcall
inc
add
sti
cmp
and
xor
add
pop
dec
sti
push
pop
lods
test
lcall
mov
add
js
insb
xchg
inc
add
jne
cmp
pop
sti
outsl
pop
lods
push
pusha
rcrb
orb
daa
add
add
outsb
pop
jnp
cmpsb
js
insb
xchg
inc
add
dec
or
and
push
es
out
imul
add
add
add
add
add
add
ljmp
jnp
add
stc
mov
add
add
mov
add
add
in
out
fidivrl
js
mov
mov
mov
mov
pop
in
xor
in
xor
daa
mov
or
add
daa
mov
or
add
jmp
jnp
add
inc
add
add
scas
xchg
inc
add
jne
jne
mov
jnp
add
mov
jg
idivl
mov
add
jmp
xchg
inc
add
rol
data16
daa
mov
les
ffreep
add
les
fbld
mov
jg
idivl
mov
add
in
loop
jmp
jnp
add
in
nop
lret
js
sbb
mov
or
nop
lret
js
sbb
mov
or
stos
js
mov
daa
mov
test
jb
xchg
in
lods
data16
in
jnp
push
sarl
sbb
sub
in
jp
fisubl
mov
fistpll
js
inc
fbld
mov
or
or
mov
pop
pop
cmpsb
or
pusha
daa
mov
daa
push
insb
jnp
add
push
fnstcw
add
add
add
add
mov
pop
pop
cmpsb
cli
sti
cmpsb
cmpsb
daa
push
pop
jnp
add
push
ja
.byte
jno
sahf
addr16
fwait
jo
push
mov
inc
mov
jg
pop
pop
inc
mov
rcrb
pop
cmp
pop
pop
pop
addr16
cmc
pop
pop
pop
jne
mov
aad
lret
mov
mov
mov
xchg
push
loop
pop
or
shlb
cmp
repz
jno
mov
shll
push
fsubs
mov
jno
or
lcall
pop
pop
pop
or
and
push
xchg
outsb
inc
and
sub
addr16
mov
sahf
push
pop
pop
or
sbb
and
push
pop
pop
bound
ret
pop
mov
shll
push
push
rcrb
or
data16
lcall
dec
mov
pop
bound
pop
mov
xor
jge
lcall
repz
pop
jno
push
jo
shlb
and
pop
pop
addr16
xor
scas
xor
loop
jo
jo
dec
jl
xor
cltd
arpl
or
lds
xor
fsubrl
popa
push
out
mov
xor
inc
ja
addr16
jbe
pop
pop
pop
sahf
push
enter
mov
mov
push
dec
popa
dec
xchg
jl
pushf
cmp
mov
or
xchg
mov
sbb
pop
pop
outsb
mov
shlb
cmp
inc
rcrb
dec
inc
sahf
and
sahf
sub
pusha
cmp
rcrb
dec
mov
xor
sahf
sub
sub
mov
ret
rcrl
fcmovnbe
pop
pop
dec
add
ds
sub
push
cmp
rcrb
dec
shlb
add
sahf
sub
js
cmp
pop
pop
dec
jo
add
push
je
pop
pop
dec
sbb
sbb
cmp
rcrb
or
dec
pop
pop
push
push
pop
dec
push
insl
es
cmp
pop
pop
dec
mov
sub
jbe
jge
pop
pop
dec
ror
add
mov
push
xchg
mov
push
sbb
xchg
push
sub
or
pop
or
sub
mov
add
leave
or
pusha
or
pop
and
or
and
jbe
xchg
ret
xlat
ret
pop
jb
leave
shll
outsb
xchg
and
xlat
jb
mov
push
addr16
pop
jo
xor
ja
mov
data16
inc
sub
data16
addr16
outsb
inc
sub
lcall
mov
jns
adc
jb
sub
pop
pop
addr16
ret
pop
imul
sub
addr16
pop
sub
xchg
sahf
ret
pop
inc
sub
fidivl
bound
bound
mov
xor
sub
fidivl
bound
bound
mov
lds
and
mov
ret
pop
sub
inc
inc
ja
addr16
jbe
fbstp
jo
lods
jg
mov
jmp
leave
fwait
lods
mov
pop
addr16
outsb
inc
sub
adc
leave
jbe
popa
pushf
sub
or
lds
mov
mov
icebp
mov
subb
pushf
mov
mov
pop
pop
pop
pop
lds
mov
jbe
fists
sub
fists
jb
pop
pop
mov
bound
bound
pop
or
loop
mov
es
pop
pop
sub
fists
jb
mov
outsb
ror
pop
pop
or
loop
mov
xchg
pop
pop
pop
sub
fists
jb
lea
mov
outsb
shlb
pop
pop
or
loop
and
or
mov
ret
lcall
fists
jb
les
mov
outsb
sarb
pop
pop
addr16
addr16
in
fbstp
ds
mov
pop
addr16
outsb
inc
mov
mov
mov
jle
pop
sbb
fistps
pushf
outsb
fisttpl
pop
fbstp
mov
cmp
fistpll
mov
cmp
mov
cmp
fists
ret
pop
inc
mov
mov
adc
or
add
subl
mov
jo
add
leave
pushf
lods
imul
mov
pop
pop
pop
fistps
fbstp
pusha
mov
mov
fbstp
mov
pop
sub
push
lds
pop
pop
pop
sub
fists
jb
mov
mov
outsb
rolb
fcmovbe
or
mov
fisubl
lds
cmp
dec
mov
bound
bound
pop
addr16
fistps
dec
pop
pop
pop
fbld
fistps
pop
fistps
pop
pop
pop
fbstp
pusha
mov
mov
fbstp
mov
xor
pop
or
mov
repnz
cmp
mov
loope
pop
pop
fists
mov
mov
mov
pop
fbstp
data16
fists
jb
dec
mov
bound
bound
pop
fbstp
lds
scas
pop
mov
popfw
pop
cmp
scas
pop
mov
popfw
jne
pop
pop
cli
lcall
mov
lods
fbld
fistps
outsb
data16
pusha
mov
mov
fbstp
mov
lds
fistpll
mov
cmp
and
fistps
and
fists
addr16
pop
mov
jbe
fists
jo
or
push
pop
mov
sbb
mov
fbstp
fistps
mov
inc
jge
ja
addr16
xchg
fistps
push
pop
sahf
addr16
addr16
sub
data16
or
mov
and
mov
lds
jg
push
pop
fwait
pop
pop
or
fisubl
addr16
addr16
outsb
fldt
fbld
adc
lcall
fisttps
ret
pop
sub
or
mov
and
jp
lret
push
ret
lcall
jb
push
mov
pop
mov
xchg
jb
push
sub
or
fists
jg
addr16
mov
add
xor
inc
ja
addr16
jbe
fbstp
push
pop
jno
fistpll
pop
pop
pop
addr16
movsl
mov
pop
pop
movsl
pop
pop
pop
pop
movsl
fists
lcall
data16
or
mov
fistpll
fwait
pop
pop
pop
movsl
fbstp
pop
pop
pop
movsl
fistps
fildll
add
pop
sub
sbb
pop
pop
sahf
push
jo
lods
addr16
or
or
mov
xchg
notl
pop
and
pop
add
mov
jbe
cli
adc
addr16
insb
pop
pop
pop
lcall
js
mov
cltd
pop
pop
pop
pop
addr16
jbe
mov
xchg
insb
add
cmp
mov
jne
sbb
in
outsb
inc
mov
addr16
push
mov
data16
push
or
addr16
mov
in
inc
mov
mov
mov
inc
jge
ja
addr16
fbstp
pop
cmp
pop
pop
pop
or
lcall
jg
mov
inc
mov
pop
sub
lcall
add
mov
mov
or
stos
mov
pop
pop
pop
jmp
lcall
jnp
cmpl
pop
add
adc
popa
ja
addr16
fistpl
push
mov
mov
ficompl
jb
sahf
mov
inc
fbstp
ficompl
sahf
shll
sahf
mov
and
ficompl
jb
sahf
xchg
inc
popa
ja
addr16
jbe
jno
popa
mov
push
lcall
fists
pop
pop
pop
sub
or
mov
out
pop
pop
xlat
addr16
pop
pop
ret
pushw
outsb
fisttpl
pop
repnz
fimull
addr16
outsb
fisttpl
pop
pop
jg
addr16
mov
or
mov
dec
pop
pop
pop
addr16
mov
loop
lcall
mov
mov
mov
test
outsb
pop
addr16
loop
leave
sub
data16
outsb
arpl
jg
adc
sub
mov
mov
add
mov
fbstp
jo
pop
pop
pop
jne
mov
mov
pop
pop
repnz
mov
fistpl
addr16
mov
sub
sub
lcall
repz
pop
or
push
pop
and
addr16
or
mov
outsb
fisttpl
mov
lcall
push
xor
inc
ja
addr16
sahf
fidivl
lods
and
adc
fwait
and
and
jno
add
jb
pusha
mov
sub
inc
inc
mov
addr16
and
inc
loop
popa
mov
movsb
addr16
mov
mov
or
mov
mov
fbstp
loop
sub
push
mov
ja
ret
jne
pop
jno
mov
fwait
sahf
jno
push
mov
ja
addr16
jbe
pop
pop
pop
addr16
out
flds
jmp
outsb
mov
adc
sub
push
jb
pop
pop
mov
pop
pop
pop
mov
push
inc
aas
add
repnz
fwait
add
pop
pop
pop
pop
mov
cmp
mov
cmpsl
fisttpll
mov
add
loop
pop
pop
sub
dec
mov
fistps
shll
outsb
pushf
dec
mov
jb
sahf
xor
push
daa
pop
mov
push
cli
xor
sub
loop
ljmp
jb
sahf
loop
fldt
mov
ja
pop
pop
ret
retw
pop
mov
shll
sahf
mov
or
inc
ret
lcall
add
xor
jb
mov
loop
lcall
cli
inc
mov
loop
sahf
loop
icebp
inc
sub
fbstp
jl
jb
ficompl
mov
sahf
push
pop
insb
addr16
loop
mov
sub
cmp
loop
test
and
jb
cmp
bound
mov
bound
bound
mov
mov
addr16
bound
outsb
jmp
loop
mov
and
imul
mov
or
pop
jge
xchg
mov
outsb
fcmovnu
arpl
mov
bound
fcomi
cmp
xor
jge
ja
inc
rcrl
rolb
adc
decb
jnp
push
lcall
fbstp
jl
and
sti
pop
cmpsb
outsb
inc
and
addr16
mov
and
pop
and
inc
rorl
repz
pop
pop
or
mov
repnz
fbstp
pop
pusha
xchg
cmp
mov
mov
and
mov
push
or
div
lods
lret
mov
outsl
jo
xor
inc
ja
push
pop
or
lret
adc
push
xchg
sub
mov
lcall
mov
rcrl
shl
fcmovbe
addr16
insb
fwait
pop
jno
stos
addr16
mov
shll
js
mov
pop
add
insb
fwait
pop
jno
sahf
addr16
fwait
push
lcall
pop
mov
loop
in
mov
mov
pop
dec
lahf
mov
addr16
cmp
mov
mov
pop
dec
pushf
mov
pop
or
int
sub
dec
push
cmp
ret
pop
pop
or
int
and
addr16
fwait
mov
or
lret
loop
mov
sub
movsl
sub
mov
inc
fwait
xor
jge
mov
rcrl
mov
mov
mov
addr16
shll
ljmp
or
sahf
ret
mov
loop
sti
mov
mov
fisubl
inc
ja
addr16
jbe
jno
addb
and
inc
popa
loop
sahf
push
jbe
sbb
ficompl
sub
jns
jb
cmp
mov
bound
popa
fwait
bound
jo
xchg
lcall
jbe
cmp
lcall
lods
js
repnz
fwait
sub
jbe
cmp
pop
mov
fistps
and
pop
repnz
in
pop
inc
repnz
cmp
jge
ja
cmp
mov
leave
add
push
xchg
popf
cld
dec
jp
in
mov
out
mov
pushf
jno
or
repnz
hlt
test
push
nop
sub
pop
mov
adc
mov
xchg
pushf
push
xchg
jnp
jg
sbb
shl
ret
adc
ret
pop
rorl
cmp
mov
xlat
cmpsb
xchg
push
mov
pushf
mov
dec
cltd
notb
cld
pop
insb
mov
jnp
ja
in
iret
push
pop
dec
pop
shrl
pop
sbb
mov
lahf
xchg
xchg
arpl
out
fwait
xor
mov
push
mov
cs
fadd
call
sahf
subl
rcr
cmp
mov
pop
mov
pop
push
lea
xor
mov
lret
mov
insl
sub
in
lret
adc
out
push
pushf
push
push
add
mov
shll
push
xchg
dec
mov
popa
leave
pusha
or
pusha
push
lahf
lds
bound
xlat
subl
int
lods
insb
loopne
push
add
xor
xor
movsl
mov
sub
lea
test
adc
mov
adc
int3
inc
push
mov
or
inc
push
jne
dec
popf
test
insb
adc
pushf
jo
pop
inc
pop
sub
stos
nop
push
xor
insb
xlat
cmp
sbb
aam
mov
jp
jb
pop
loop
sbb
and
push
jnp
fisttps
sti
or
xchg
add
ret
push
test
push
and
insl
shlb
mov
lahf
xchg
sub
mov
mov
aam
call
or
push
jns
ss
and
push
or
dec
pop
mov
cmc
and
imul
push
pushf
jg
pop
mov
push
repnz
lods
scas
push
in
jno
ffree
pop
mov
jo
ret
daa
addr16
push
jno
fwait
gs
sub
in
dec
sub
push
push
pop
insb
fimull
cmp
outsb
mov
pop
dec
mov
jmp
jns
mov
mov
jae
rcrb
fstpl
loope
leave
or
xor
loope
xchg
push
lea
loope
adc
mov
cmp
data16
data16
xor
pop
mov
ljmp
lret
push
sbb
loopne
aam
xor
cmp
int3
and
addb
fwait
adc
je
and
jno
jge
mov
fxch
mov
inc
pop
sahf
cmp
push
cmp
fs
dec
nop
icebp
push
and
jno
into
test
ret
gs
int3
lret
pop
enter
lods
mov
inc
jne
out
lea
pusha
inc
cmp
pop
sbb
pusha
mov
jge
jmp
xchg
fsubs
pop
out
int
inc
cmp
mov
push
mov
aaa
notl
jbe
pop
aam
lock
adc
sbb
mov
insl
scas
xor
mov
cmp
push
pop
pop
nop
out
inc
test
fcoms
mov
dec
lret
xor
add
jne
pusha
movq
add
int
incb
mov
popa
xor
cmp
mov
mov
divb
jle
push
cmp
and
cmpsl
idivl
leave
xor
mov
xor
pop
sub
sbb
and
clc
loope
hlt
jecxz
dec
fildll
gs
jg
mov
daa
push
sbb
jmp
mov
jmp
add
push
aad
lret
adcl
inc
mov
test
fnsave
mov
lods
mov
mov
outsl
je
mov
fistpll
ret
leave
mov
dec
iret
xchg
sub
mov
and
daa
jg
loopne
add
movb
cmp
sub
popf
cs
add
vpor
adc
lods
cmp
or
jmp
mov
movsb
add
mov
cmpsl
sahf
jecxz
stos
shll
pop
ljmp
and
bnd
and
ret
cmp
add
and
and
ror
push
out
and
xorb
pop
dec
in
xchg
repnz
dec
xor
jne
mov
je
out
data16
inc
test
aad
insl
aas
mov
adc
inc
int
jmp
dec
cmp
push
sub
push
push
sahf
lcall
shll
fimull
pop
paddusb
or
rcrl
sahf
pusha
sbb
xchg
pop
es
xchg
mov
pop
cmpsb
faddl
mov
imul
mov
aaa
gs
lods
mov
cmp
push
lret
push
gs
popa
jo
jl
cltd
or
rol
mov
addl
cltd
mov
sbb
in
mov
imul
inc
fisubrs
cmp
ret
cmpsl
mov
dec
gs
xchg
fstl
or
sbb
jmp
movsb
in
push
lcall
and
into
pop
push
pop
push
mov
pmaddwd
hlt
inc
aam
cld
mov
popf
pop
imul
and
push
movsl
push
outsb
inc
pop
loopne
inc
jecxz
sarl
jne
bound
mov
int
stos
mov
das
jno
ds
jle
aas
cmc
and
inc
mov
mov
lret
adc
mov
enter
inc
adc
pop
cmp
lds
pop
ds
sub
loope
lea
pop
and
insb
xor
mov
jp
cmp
jns
add
mov
xor
push
xchg
cmc
aaa
daa
imul
mov
push
add
pop
sbb
ja
sbb
mov
andl
std
inc
lea
cltd
fistpl
pop
testb
jg
mov
or
stos
adc
das
daa
out
and
icebp
icebp
out
sub
test
loope
xchg
pop
sti
sarl
mov
fwait
inc
push
adc
outsl
addr16
inc
decl
xor
sub
jmp
mov
push
sbb
mov
pushf
mov
push
scas
pushf
sub
js
mov
inc
rcrl
inc
and
fcoms
mov
xor
mov
mov
xchg
xlat
data16
insb
data16
sub
pop
enter
sbb
out
mov
std
out
jns
sub
lcall
cmp
popf
es
loope
mov
add
mov
add
jg
ljmp
mov
fsubs
push
nop
push
movsl
cltd
sti
push
mov
cwtl
sub
das
test
imul
flds
or
cmp
push
mov
inc
fnsave
push
in
mov
push
faddl
adcl
or
jnp
inc
loopne
loopne
jmp
sbb
jp
and
fmul
pushf
out
rorl
xchg
hlt
xchg
fwait
out
mov
lret
aam
cmp
dec
test
push
lret
dec
pop
inc
sub
inc
mov
loope
sbb
push
movsl
pop
push
sti
sbb
pause
cltd
enter
fldt
cmp
push
cmp
int3
cld
sub
or
rcr
xor
jb
nop
sbb
aaa
dec
iret
scas
sbb
loop
push
jge
add
test
jnp
shll
call
mov
sub
mov
icebp
bound
outsb
test
xor
ja
jae
popf
cmp
add
hlt
dec
shrb
jmp
out
inc
mov
mov
fmull
or
outsb
loop
rclb
nop
addr16
fdivrs
adc
pop
cmp
cs
xchg
dec
dec
push
loop
test
stos
insl
lds
sub
pushf
jmp
cmp
lods
enter
and
cli
xchg
mov
inc
repz
jmp
int3
out
mov
push
add
push
push
std
out
cmpl
lods
inc
in
lahf
or
enter
sbb
adc
repz
stos
mov
out
or
lea
ds
dec
dec
or
dec
popf
stc
sub
and
add
push
in
rclb
sbb
jne
push
cmp
pushf
pop
divb
sbb
lret
xchg
or
hlt
repz
pop
stos
pop
pop
jge
jb
iret
pop
dec
rep
lret
pop
arpl
das
clc
mov
and
jl
and
in
sarb
xor
popw
push
into
lahf
popa
stc
push
scas
push
in
xchg
mov
jp
push
fldenv
scas
pop
scas
push
jl
sbb
fldt
sbb
int3
xor
mov
and
push
nop
push
pop
xlat
or
mov
xchg
xorb
mov
mov
repnz
out
mov
mov
jns
add
fimuls
jns
jp
fstps
fwait
mov
sbb
gs
stos
stc
cmp
mov
ljmp
nop
or
adc
jmp
xchg
jae
xor
cmpsb
adc
dec
fs
cmp
pop
inc
xchg
cmp
mov
jmp
add
mov
fcoml
movsb
cmpsb
xchg
ljmp
cmp
sbb
sub
sbb
mov
aas
out
xlat
inc
jo
sbb
xchg
pop
push
dec
mov
inc
push
inc
roll
and
push
imul
and
pushf
lods
and
jne
stos
sub
or
leave
sub
push
push
fiaddl
dec
pop
or
daa
add
pop
cwtl
sbbb
addl
mov
mov
mov
push
fcmovnbe
fwait
js
jo
ljmp
fwait
test
lock
cltd
inc
xchg
xchg
lcall
ret
add
or
cmp
enter
sub
mov
add
in
mov
mov
cltd
pop
or
sub
nop
std
stc
sub
jno
jle
sub
inc
int
repnz
xor
xchg
mov
insb
inc
mov
es
sbb
fists
mov
int
cli
fbld
rep
sbb
arpl
in
jo
dec
pop
push
pop
push
into
int
divb
inc
sub
outsb
orl
or
enter
and
inc
rep
movsb
fmull
aam
scas
add
inc
aam
mov
cwtl
mov
cmpsb
insl
ds
insl
cmp
out
pop
inc
fcoms
xor
lret
mov
push
sbb
fwait
out
test
leave
add
or
lahf
mov
xchg
dec
mov
mov
jge
in
mov
lret
in
imul
xchg
out
dec
mov
xor
sbb
jno
call
stos
sbb
xchg
sti
push
fwait
sbb
dec
or
inc
push
or
scas
xchg
insb
repnz
jb
das
and
loope
adc
cltd
ret
movsl
repz
lods
clc
js
pop
jae
lret
sbb
in
mov
mov
sub
je
inc
dec
dec
xchg
mov
loop
outsb
mov
jns
jl
xor
mov
sbb
add
dec
aaa
loop
xor
cmpsl
stos
cmp
or
dec
adc
add
ss
pop
frstor
pop
push
xor
push
cmpb
insb
sbb
or
sub
sarb
or
sub
daa
mov
cs
movl
es
fisubrs
cltd
icebp
or
data16
pop
stos
lock
xchg
ja
inc
pop
mov
enter
inc
movsb
cmpsl
out
lret
mov
aaa
pusha
stos
pop
insl
xchg
xor
dec
cltd
fwait
xchg
xchg
dec
dec
mov
fwait
std
sbb
pop
xchg
nop
xor
push
xchg
adc
or
stos
fsub
data16
xchg
movsb
xchg
jae
iret
fnstcw
mov
xchg
inc
jae
cmc
mov
and
fld
mov
bound
sar
sarb
aam
std
imul
hlt
mov
xchg
pusha
jns
repz
cs
push
cld
test
stc
mov
ljmp
adc
adc
icebp
mov
jbe
lea
mov
add
lock
notl
mov
mov
movsl
inc
icebp
dec
stos
push
pop
add
bound
dec
dec
xchg
es
mov
in
sub
sbb
mov
insb
xchg
jns
mov
mov
in
and
add
arpl
pop
fdivrl
imul
pop
mov
xchg
popa
lcall
enter
loope
inc
mov
fdivrl
ret
mov
dec
pop
rcll
or
sar
out
dec
fsub
test
jecxz
mov
test
xor
mov
sbb
sbb
sub
test
lret
pop
int3
adc
push
ret
cmp
sbb
xchg
aas
shl
dec
inc
bound
aaa
movsl
xor
arpl
sbb
fldenv
xlat
imul
mov
sbb
ljmp
jns
in
inc
ds
dec
stos
iret
or
fsub
xchg
test
stos
xlat
fs
enter
add
or
sahf
int
jle
pop
pop
sub
lods
lods
sub
xor
loope
mov
sbb
iret
mov
out
xchg
outsl
push
jle
add
cmp
push
jbe
pop
jbe
ja
iret
sbb
data16
cltd
dec
jbe
mov
fisttpl
pop
pop
or
test
out
cmpl
negb
lcall
in
sub
jp
mov
inc
mov
xlat
outsl
icebp
push
mov
cwtl
xor
add
clc
jae
pop
ret
fbstp
mov
mov
jae
jne
inc
add
loope
stos
cmp
lret
xchg
or
icebp
shlb
ret
cmp
enter
inc
dec
out
cmp
pop
push
insl
push
ljmp
xor
shlb
push
das
test
leave
jmp
dec
and
add
jle
cmp
xchg
push
push
fdivr
sbb
imul
pusha
inc
icebp
xchg
pop
cs
movhps
pop
cmp
pop
inc
pop
jb
jg
lret
dec
mov
mov
inc
add
mov
outsl
lret
sub
fxch
jns
outsb
std
sub
int3
outsb
pop
in
cltd
psadbw
subb
pusha
pop
jbe
mov
cmpsb
incl
dec
adc
int
xor
and
xor
insb
push
cmc
push
popf
lahf
adc
xchg
ljmp
rorb
movsb
xor
mov
mov
sarb
int3
jecxz
mov
cmp
or
loop
xchg
cmp
mov
inc
out
scas
pop
mov
sbb
test
xchg
mov
mov
aad
push
push
inc
sarb
push
popf
stos
fwait
sub
mov
decb
jle
and
mov
pusha
loopne
stc
pop
out
lret
cmp
imul
imull
cmp
jne
sbb
test
movsb
call
push
adc
test
int3
lret
lret
inc
sti
popf
popa
mov
push
enter
xchg
ds
addl
mov
xor
hlt
popa
test
lds
mov
add
out
mov
mov
push
cli
mov
lahf
mov
inc
je
divl
test
xchg
enter
add
pop
push
inc
mov
lret
mov
mov
test
mov
sahf
or
lahf
sbb
out
pop
test
das
xchg
jne
mov
xchg
dec
push
cli
dec
xchg
das
xor
mov
cmpsb
cmp
sbb
jl
movsb
hlt
mov
xor
in
sbb
aam
ffree
and
push
push
movsb
xchg
sub
popf
pusha
or
js
inc
lea
adc
ficomps
jecxz
cmp
mov
rcr
jno
ret
sbb
int
cmp
mov
paddsw
inc
push
and
test
pop
test
jmp
out
fdivl
enter
push
incl
jg
ljmp
outsl
pop
insb
ljmpw
xlat
pop
jge
adc
shll
sub
sbb
xchg
jo
jbe
push
adc
sub
outsl
adc
fbstp
mov
xchg
xor
and
adc
ja
cmc
outsl
mov
in
mov
push
cmp
jecxz
pusha
sub
stos
sbb
jge
add
or
cmp
mov
pop
push
cmc
movsb
push
loop
mov
aad
add
and
mov
mov
fs
in
xor
jb
sbb
es
jae
sub
fiadds
push
jg
mov
enter
sarb
and
and
jge
mov
inc
inc
mov
adc
pop
addr16
es
push
sbb
sbb
push
jecxz
shrb
mov
xchg
pop
loop
dec
xor
mov
pop
icebp
fdiv
sub
inc
push
sar
int3
mov
pxor
enter
sbb
fucomi
push
int
jecxz
pushf
dec
xchg
pushf
aad
pusha
jl
xchg
scas
scas
idiv
push
pop
cmp
mov
repnz
dec
sub
jmp
sub
ret
adc
sbb
in
mov
jno
negb
mov
fs
test
add
mov
scas
or
fstl
gs
jle
jae
adcl
jmp
pushf
xchg
or
pop
nop
negl
jae
jle
dec
insb
inc
cltd
xchg
jmp
cltd
insl
lock
or
jmp
adc
mov
ja
leave
es
lahf
push
sbb
mov
push
shll
shlb
nop
out
mov
test
subl
cli
mov
rcrl
jae
fdivrl
or
push
mov
in
push
cli
sbb
pop
cmp
ds
mov
sub
xor
or
jmp
shrl
mov
pop
and
dec
jae
aad
js
insb
mov
into
mov
jge
lahf
dec
xor
das
cli
push
sbb
cmpb
leave
pop
mov
nop
or
inc
ljmp
mov
in
xchg
push
mov
dec
cmp
out
ret
cmp
pop
lcall
fucomp
xor
jecxz
pop
push
lock
push
out
ds
add
or
stc
add
pop
xchg
dec
cmp
or
pop
inc
outsl
dec
sbb
hlt
popa
dec
rcrb
cmc
push
mov
xchg
inc
push
fcompl
mov
and
rorl
movsb
stos
pop
sub
add
jp
lret
ret
fucomi
out
jp
pop
cld
ds
fs
loopne
je
jb
mov
add
sub
xor
sbb
jecxz
sub
inc
cmp
imul
in
or
rolb
dec
dec
xor
aad
stos
hlt
mov
cmp
pusha
xchg
hlt
int
push
js
les
and
hlt
and
stc
pop
push
cmpsb
pop
xorb
jl
insl
sub
out
je
pushf
xchg
dec
popa
mov
and
jp
or
cmp
cmp
push
inc
cli
shlb
in
mov
jle
bound
xchg
pop
iret
and
mov
push
loop
push
jae
and
jae
gs
icebp
push
add
dec
imul
mov
sbb
mov
sbb
sub
in
hlt
inc
inc
adc
add
sti
int
jo
adc
xor
sarb
adc
cmc
pop
lret
push
ret
push
ficomps
movsl
fmull
xchg
mov
mov
mov
adc
sub
cmpsl
movsl
std
fwait
lret
fsubr
jp
xchg
divl
popa
repnz
out
fldln2
jg
lods
jno
mov
fs
mov
push
xchg
js
dec
jge
mov
mov
aam
loopne
cmp
lret
mov
gs
lods
out
mov
or
pop
sbb
inc
int
hlt
das
cmpb
fdiv
out
inc
inc
cmp
cmpsb
sbb
aam
cmpsl
pop
cmp
adc
ret
xlat
das
out
adc
fbld
aas
jge
pop
dec
xchg
mov
out
pushf
mov
jmp
sbb
leave
test
popf
imul
outsl
loop
out
xlat
bnd
cltd
fcmovnu
popf
and
jge
or
jecxz
sti
bound
rdmsr
mov
lret
shrl
xor
and
jge
and
das
jae
shlw
mov
lea
lock
dec
push
xchg
repz
cmp
push
jp
mov
int3
push
scas
mov
mov
and
xchg
jp
ljmp
and
cwtl
je
add
imul
pushf
popa
lcall
xor
dec
idivl
pop
pop
cmpsl
cmpsb
sbb
lea
pop
sbb
cmp
cltd
loopne
pop
push
es
cs
ja
sub
in
subb
repnz
jmp
add
out
ret
out
shrl
push
nop
push
nop
mov
cmc
fcompl
movsl
lahf
jecxz
shr
and
xchg
mov
mov
daa
test
fcompl
scas
dec
lock
pop
pop
fldenvs
push
repz
insb
imul
sarl
mov
lea
aad
lods
sti
es
lods
lcall
and
inc
loop
sub
popa
jb
test
movsl
pop
inc
lods
inc
ret
les
xchg
cmp
jl
or
hlt
aas
fiadds
rcrb
in
lcall
ja
imul
mov
xor
pop
adc
jbe
imul
jne
stc
inc
xchg
add
out
iret
push
repnz
pop
dec
data16
mov
xchg
mov
popa
mov
mov
rcr
jle
aaa
add
push
or
jne
xchg
enter
push
ret
and
jae
cmpb
lret
or
dec
imul
pop
fcmove
lods
cwtl
adc
push
pop
cmp
fistl
cmp
aaa
pop
enter
cld
sbb
and
call
dec
icebp
idivb
add
outsl
shrb
push
fdivp
mov
roll
pop
mov
testb
out
scas
addr16
cwtl
ss
mov
adc
jecxz
cmp
inc
cmp
rolb
stos
aas
out
outsb
pop
mov
test
dec
loope
or
push
mov
mov
xlat
mov
repz
mov
xor
lods
in
jge
movsb
hlt
dec
and
or
stos
jg
mov
iret
adc
sbb
rcll
pop
pop
cmp
das
dec
imulb
xchg
js
or
enter
fdivs
push
mov
flds
pushf
sti
mov
xchg
movb
dec
push
adc
rcl
sarb
dec
cmp
jmp
testb
jle
int3
inc
cwtl
dec
push
jns
sti
add
mov
xlat
icebp
loopne
ljmp
or
in
pop
and
into
xor
jne
fisubl
sbb
sub
fisubrl
dec
aaa
sub
or
push
out
adc
xor
fsubrl
test
lock
cltd
je
mov
fldt
xor
cmp
sub
cmpsb
stos
add
mov
xchg
jne
jno
inc
out
mov
dec
mov
scas
hlt
fcmovbe
xchg
je
je
in
sbb
iret
push
scas
fildll
shrb
mov
mov
fnstenv
arpl
addr16
dec
xchg
push
pushf
icebp
sub
push
imul
adc
popa
dec
jae
mov
mov
or
xor
and
inc
arpl
push
test
push
xchg
loop
js
icebp
incb
fs
int
movsb
xchg
cld
mov
call
adc
ret
xchg
movsb
fcompl
out
daa
movsb
jae
mov
stos
xor
dec
es
sbb
jbe
cmp
cmp
idiv
adc
scas
xchg
clc
pushf
xchg
loop
in
or
cltd
rcl
push
out
jne
jmp
stos
ret
or
mov
sub
and
jmp
mov
xor
loope
ljmp
pop
xchg
pop
in
jne
lods
sbb
sub
mov
mov
sbb
dec
sub
pushf
shrl
out
xor
push
lret
lds
sahf
mov
fildll
cmpsb
rorb
cmp
mov
popa
and
out
cltd
mov
xchg
xor
jns
bound
bound
xorl
aad
outsl
sbb
mov
push
notb
mov
fwait
hlt
cltd
jge
mov
jecxz
scas
mov
movsb
pop
cmc
aas
cmpb
stos
cmp
add
push
mov
in
mov
pop
xchg
jo
sbb
xchg
xlat
dec
jbe
cwtl
inc
cmpsb
fstps
test
stc
mov
lahf
or
xchg
mov
mov
rcrb
ret
rcrb
rcll
into
repz
test
ret
cmp
push
fwait
loopne
push
rclb
stc
outsl
rep
adc
cmpl
ret
dec
cmp
mov
sub
or
jg
loope
jnp
mov
mov
mov
loope
fisttps
push
sub
cmp
stc
dec
pop
mov
push
push
pop
inc
inc
hlt
imul
loope
xchg
fcmove
jmp
pop
mov
pop
jp
imulb
push
sti
or
or
stos
out
fisttpl
mov
insb
jae
loopne
movsb
fisubrs
bound
sub
adc
cs
adc
out
ljmp
lea
ficompl
push
nop
sub
pop
loopne
cmp
pop
sub
lret
mov
mov
out
jno
jno
dec
mov
ror
sub
outsl
out
pop
add
push
pop
jae
jecxz
aam
mov
loop
leave
push
jnp
sti
enter
test
ja
xlat
mov
popa
inc
lods
xchg
mov
dec
test
xor
das
or
jg
pop
pushf
ds
stos
mov
fdivrp
stos
add
pop
jp
or
xchg
xchg
je
mov
cmp
pop
mov
jp
mov
pop
popf
jl
xchg
cmpsb
xchg
pop
inc
jbe
xchg
xchg
clc
push
dec
jg
orb
pop
lea
and
pushl
in
imul
jl
cld
cmpsb
inc
mov
daa
movsb
mov
lret
outsb
cmpb
pusha
mov
push
pop
dec
rorb
xchg
lahf
in
mov
sbb
sub
pusha
in
nop
out
rolb
shll
lods
ret
jbe
pusha
jg
subl
push
popa
xchg
std
sbb
scas
mov
push
dec
and
add
dec
adc
int
outsl
cli
shr
inc
cmpsl
sahf
dec
ficoms
pop
push
movsl
inc
stos
test
push
xor
scas
and
push
mov
call
xor
jns
pop
loop
mov
mov
sub
js
sbbb
lods
lods
pop
mov
cmp
in
js
xchg
add
mov
sub
and
sbb
xchg
mov
pop
push
jo
mov
lds
add
pop
addr16
cmp
in
mov
add
lea
mov
pushf
iret
rcr
sarl
rorl
pop
gs
aas
out
scas
sti
adc
cli
stos
xchg
pushf
jne
ja
cs
pop
xor
or
or
aam
adc
aam
sbb
inc
jb
dec
popf
pop
mov
pop
jns
jmp
pop
filds
movsb
mov
movsl
test
pop
dec
out
lcall
in
aad
dec
and
icebp
jb
lods
cs
cmp
aas
fs
xchg
popf
mov
xchg
in
pop
in
jns
inc
lret
fcomps
jne
jbe
or
mov
or
dec
scas
push
lods
aam
cmp
in
push
rcl
pop
xor
xor
dec
incb
insb
adc
scas
push
repz
mov
push
mov
add
loope
lock
push
jne
lcall
mov
mov
imul
rcll
popf
repz
sub
or
xor
aam
xchg
push
push
push
popf
out
fbld
ds
out
aad
mov
cwtl
push
fsubs
mov
rcll
loop
scas
push
cltd
cld
pop
mov
pop
mov
cmpsb
push
adc
repz
xchg
xchg
xchg
xchg
pusha
scas
rclb
into
lea
sub
and
and
insl
aad
push
in
fcoms
shl
pop
notl
insb
or
jle
popf
xchg
movsl
push
loope
mov
test
push
sub
pop
mov
mov
push
lret
xchg
in
jne
inc
add
faddp
and
repz
sti
subl
insl
inc
pusha
adc
pushf
jg
dec
test
sbb
les
add
dec
jne
mov
xchg
lret
pop
data16
xchg
scas
ret
shrl
or
roll
inc
enter
xor
dec
int3
xchg
jnp
and
in
je
mov
xchg
ds
adc
repnz
lahf
pop
icebp
bound
cmp
add
ss
test
mov
sbb
fidivrl
lods
sbb
jl
idivb
jl
cmp
mov
or
adc
outsb
imul
leave
jecxz
aad
sbb
pusha
xor
mov
bswap
test
subl
add
dec
jp
xchg
shll
dec
xchg
sbb
xor
mov
addr16
xor
decb
jmp
pusha
sbb
fndisi(8087
pop
xchg
and
pop
test
aas
shll
std
and
test
pop
xor
mov
or
fstps
testb
sahf
pop
cmpsl
movsl
push
push
inc
stos
jecxz
in
jnp
push
jp
pushf
lret
loop
bnd
mov
cltd
push
mov
push
jmp
push
mov
jns
push
xchg
repnz
add
mov
inc
cmpsb
shld
std
dec
xchg
inc
add
xlat
cs
stc
in
dec
insb
adc
cmpsb
aam
inc
and
xor
test
popa
out
pusha
fistl
repnz
inc
mov
jb
mov
lret
repz
andb
bound
shrl
cltd
xlat
and
and
push
arpl
insb
dec
insl
lea
xchg
push
fistpll
fstpt
clc
pop
pop
cmpsl
adc
test
mov
mov
mov
int
pop
inc
leave
inc
bound
clc
sti
hlt
fisubs
adc
jno
sbb
pop
adc
jl
dec
push
xor
xor
je
arpl
cmp
ds
or
movsb
bnd
jle
mov
mov
mov
push
mov
iret
add
mulb
test
dec
test
dec
aam
xchg
push
ljmp
icebp
negb
in
sub
stc
sub
imul
scas
ds
stc
outsb
mov
cmpsb
outsl
stos
pop
xchg
cwtl
outsb
mov
out
push
and
shlb
ficompl
push
xor
or
fidivs
cmp
adc
mov
sub
sub
fadds
mov
pop
cmp
into
push
out
inc
int3
fmulp
adc
jns
adc
lcall
push
mov
sbb
loop
hlt
popa
xchg
lcall
sbb
xchg
pop
push
cs
dec
lds
cmp
pusha
pop
pusha
and
cli
cmpsl
mov
mov
loopne
pop
out
in
imul
int
sbb
jecxz
sarb
cmp
pop
lret
adc
push
fdivrl
sbb
cmp
lcall
jbe
mov
outsb
shl
dec
in
out
mov
push
mov
cmp
xlat
shll
in
mov
sub
cmpsl
and
push
adc
xor
jle
mov
arpl
dec
clc
repz
sbb
xorl
rcrb
in
mov
int3
cmp
mov
ret
xchg
mov
fmulp
out
inc
stc
sbb
rcl
mov
repnz
push
jp
in
das
dec
and
and
push
int3
sbb
pop
jno
fisubrl
or
jp
enter
iret
test
adc
push
sbb
fcoms
mov
pop
movsl
lret
xchg
cmp
idivl
pop
in
sbb
mov
fstpl
mov
cld
mull
push
clc
dec
and
scas
rcll
mov
push
adc
lock
test
lods
push
jae
jb
nop
mov
dec
pop
repz
xchg
test
clc
xlat
push
pop
jbe
cmp
dec
fs
add
lds
sbbb
sbb
mov
loop
adc
xchg
fcmovb
test
mov
xchg
add
iret
mov
fcmovb
ja
pop
xor
xchg
cmp
loopne
sbb
jecxz
stos
pop
xor
aas
clc
jl
mov
push
mov
cmp
inc
xor
pop
fdiv
je
enter
out
shl
xchg
cwtl
ret
shrl
clc
pop
mull
xchg
jp
out
or
test
add
pushf
testl
xlat
lret
mov
stos
rcrl
add
sbb
in
clc
ljmp
ud2
idivl
repnz
fistl
xor
adc
cmp
leave
jne
and
nop
fs
mov
out
fldl
sub
add
jbe
mov
lahf
mov
adc
cmp
in
mov
aas
shrb
sub
cld
bt
sbb
cmp
sbbl
pop
ss
fstpt
mov
das
cmp
mov
xchg
or
inc
xchg
lods
arpl
xchg
and
outsb
mov
mov
xlat
pushf
insb
loopne
pop
cmp
inc
test
jl
jge
push
test
ficomps
sub
sbb
sti
stc
lock
mov
sti
lods
adc
movsb
mov
jae
xchg
push
movaps
rcrb
lea
data16
fdivrs
inc
insl
movsb
xchg
test
imul
loope
lcall
xor
popf
into
in
pop
out
shll
std
dec
ret
pop
mov
mov
xchg
decb
mull
pop
push
xchg
rorl
neg
pop
push
xchg
lcall
in
ficoml
mov
cmp
icebp
cmc
int3
int
pop
jg
add
sub
xlat
or
iret
in
inc
js
sbb
nop
div
cmp
adc
jl
mov
outsl
imul
int3
dec
loope
dec
iret
das
push
adc
mov
xor
pop
push
adc
or
adc
arpl
mov
xor
sbb
je
jbe
call
push
mov
movsb
push
adc
je
mov
fimull
insl
push
cmpsl
dec
mov
mov
and
fisttpl
push
stos
fldcw
popa
stos
sti
repz
jmp
lods
xchg
dec
popa
push
std
pushl
push
cli
mov
and
mov
and
int
call
add
icebp
scas
idiv
jns
or
push
inc
pop
clc
jp
iret
adc
mov
enter
ss
mov
icebp
cli
test
push
data16
cmp
mov
dec
filds
int3
push
insb
imul
and
adc
pop
into
jmp
mov
int3
mov
sarb
loope
sarb
sbb
les
mov
cvtps2pd
mov
xor
adc
xchg
mov
faddl
out
adc
add
mov
inc
mov
mov
jbe
lock
adc
mov
lock
cld
mov
xor
pop
mov
add
clc
dec
jecxz
ret
cmpsb
xor
lret
mov
sbb
sbbb
in
mov
adc
jmp
add
aam
insl
and
pop
jle
xchg
aas
fildl
and
lds
xlat
clc
scas
rcr
ret
lret
inc
mov
add
call
adc
test
inc
aaa
jo
sub
ficoml
mov
xchg
adc
pop
call
mov
or
add
xor
pushl
push
sahf
push
shrl
xchg
es
fistl
ljmp
jl
scas
cmpl
call
stos
mov
mov
sub
stos
mov
dec
sub
movsl
xor
out
inc
add
xor
xchg
dec
mov
or
mov
mov
xchg
mov
je
sahf
jmp
sub
xchg
pop
or
adc
outsb
inc
push
das
jno
movsl
aad
sbb
cmpsb
in
mov
mov
fmull
nop
mov
or
jle
cld
sahf
out
adc
ret
jl
popf
jl
sub
das
testl
mov
mov
inc
and
jecxz
aam
shrl
inc
sbb
in
fnsave
daa
cmc
inc
leave
sbb
fdiv
add
or
aad
js
jae
out
adc
cmp
inc
cld
mov
sub
shrb
xchg
adc
cld
fwait
xchg
mov
je
inc
sbb
xchg
ja
rorl
and
cli
imul
movsl
sti
and
dec
cmp
pop
pushf
sbb
xor
xchg
cmp
jae
sub
mov
out
sti
rcrb
xchg
bnd
cmp
add
dec
sbbl
test
sub
dec
xlat
sub
iret
shrl
push
in
hlt
mov
pop
cmp
push
mov
loop
pop
out
out
outsb
cmp
mov
mov
push
enter
jnp
addr16
in
std
dec
nop
push
ret
insb
jns
mov
mov
dec
adc
cli
iret
and
jns
pop
nop
fisttpl
sub
lock
into
ret
fiaddl
aas
mov
lea
lods
mov
push
sbb
jmp
ss
addl
push
cwtl
inc
xor
add
das
add
in
cmpsb
jne
int3
and
or
out
fwait
lock
jl
repz
and
push
push
mov
or
xor
sub
push
test
fdivr
pop
jge
mov
jmp
inc
loopne
push
or
fadds
inc
les
out
lret
int3
outsl
push
xchg
jne
mov
push
mov
sbb
xchg
repnz
ret
hlt
inc
inc
in
daa
mov
jns
mov
sub
sub
add
cmpsl
dec
gs
mov
dec
xchg
cmpsb
ficoms
add
int
add
jmp
inc
add
imul
jle
stos
or
sbb
leave
and
jp
loope
movsb
mov
fadds
push
into
sbb
pop
orb
jmp
dec
mov
ret
or
popf
ja
or
push
xchg
sbb
mov
ret
adc
cli
mov
std
subl
xchg
sub
pushf
inc
mov
cmpsl
add
xchg
xor
fwait
iret
mov
jnp
stc
mov
xor
popa
xchg
outsb
mov
pop
sub
stc
jb
inc
insl
mov
mov
xchg
test
adc
inc
pop
stos
and
sub
fidivl
cltd
incb
xchg
out
dec
push
add
sbb
movsb
in
ljmp
loop
fs
test
or
mov
loopne
or
into
xlat
sub
mov
jb
add
test
xor
xchg
xchg
iret
xchg
dec
sarb
out
jge
inc
cmp
dec
adc
shlb
jmp
lahf
pop
xor
int3
push
rorb
sub
pop
push
cmc
jg
mov
jae
push
push
mov
shrb
xor
stos
cltd
mov
push
inc
outsl
mov
out
jge
fiadds
ret
mov
mov
xchg
sub
mov
xor
adc
add
imul
jp
fiadds
in
inc
pop
lret
cmpsl
cmp
sbb
jmp
pop
inc
adc
push
jge
or
hlt
cmc
out
and
das
inc
in
push
mov
rorl
sub
lret
dec
lret
xlat
jbe
jne
mov
mov
fistl
mov
inc
popa
int
sub
ficoms
shll
dec
dec
pop
es
out
xor
xor
movsl
xchg
cmp
scas
out
mov
mov
sarl
addl
xchg
fs
push
loop
in
ljmp
pushf
mov
std
in
inc
add
and
mov
movsl
mov
dec
mov
ss
and
mov
outsl
jecxz
pop
dec
popa
xchg
ficompl
mov
imul
cmp
or
sbb
and
jge
mov
mov
sbb
shl
out
pop
and
pop
fisttpl
cmp
adc
pop
bsf
xor
and
adc
clc
jns
les
js
or
daa
ficomps
inc
dec
jg
mov
mov
push
add
or
fstpl
xchg
es
pop
xor
inc
jg
rorl
vpsubq
les
cltd
popf
mov
out
ja
pop
hlt
push
shlb
pop
addr16
hlt
rorb
dec
loope
mov
cs
xchg
mov
addb
mov
dec
jmp
jmp
fadd
sbb
test
jmp
clc
jle
stc
push
lret
inc
mov
mov
cmp
outsl
xlat
lods
push
int3
out
iret
shlb
stos
aad
shl
das
push
sbb
dec
or
cmp
dec
insb
not
xchg
xchg
nop
sub
and
mov
push
mov
das
das
insl
js
pusha
or
dec
mov
xchg
outsl
aaa
push
jp
loopne
inc
ljmp
clc
out
sub
cmpl
jno
popf
adc
push
and
scas
inc
sbb
jo
and
iret
shr
jecxz
out
enter
adcl
int3
enter
divl
lods
mov
cmp
call
jbe
sub
enter
nop
cmp
test
xchg
cmp
addr16
les
sbb
sub
dec
mov
jle
and
lds
dec
daa
push
mov
testb
ljmp
push
xor
sbb
cli
add
shlb
leave
xchg
inc
inc
and
xor
pop
adc
dec
js
mov
mov
pop
aas
and
pop
lock
stos
pushf
mulb
xor
mov
mov
adc
mov
lock
cmp
push
push
xchg
push
jp
fimuls
data16
outsb
mov
andl
int3
mov
adc
or
test
cmp
aaa
xor
fsubl
dec
xchg
arpl
pop
mov
or
paddsw
mov
shll
jecxz
loopne
fs
mov
fcompl
cmpl
imul
and
aad
mov
hlt
add
cmpb
xor
fiaddl
stos
jle
lods
jbe
push
daa
push
mov
or
aad
into
incl
push
mov
mov
popa
fucomip
mov
fsts
mov
sub
lds
clc
fisubrs
outsl
cmp
adcb
cmp
pusha
xchg
jl
hlt
lret
cmc
push
inc
test
and
fisubl
mov
aam
mov
inc
add
pop
xchg
lcall
mov
cmp
sub
mov
push
into
mov
inc
add
adc
fsubrs
push
cmp
dec
test
lea
int
xor
icebp
mov
outsb
cmp
sti
cmp
sub
flds
testl
rolb
sti
and
testb
pop
dec
adc
iret
jo
ss
pop
push
ret
inc
sar
push
cmp
insb
aam
inc
mov
aas
dec
lock
and
mov
cmp
sbb
rcll
jp
ja
inc
pop
add
icebp
loopne
adc
insl
icebp
xchg
aad
jge
mov
sbb
xchg
daa
jb
insb
das
jmp
mov
sbb
jp
add
lods
pop
scas
stos
int
stos
and
dec
mov
aaa
cmpsb
insb
aad
js
popl
ud0
pusha
cmp
mov
jmp
push
aam
stc
stos
mov
gs
fwait
xchg
or
adc
lds
inc
inc
mov
adc
je
inc
mov
aam
mov
cmp
cmp
dec
sub
pxor
insl
jo
mov
icebp
adc
jno
adc
cs
clc
cli
mov
sub
arpl
aad
push
jmp
std
sbb
or
jb
add
fwait
xchg
mov
mov
mov
stos
sbb
xor
pop
movsb
movlps
cmp
xor
mov
leave
mov
lock
shl
sbb
out
cmp
fbld
cltd
cmp
and
dec
repnz
xchg
int3
xchg
and
lcall
xchg
ret
push
cmpsl
outsl
incl
or
jl
fidivs
mov
mov
hlt
mov
cmp
scas
xor
mov
aas
mov
add
out
int
jne
icebp
out
xor
mov
mov
call
das
pop
cmovo
mov
sub
insb
sub
insb
adc
mov
clc
xchg
inc
mov
pop
popf
push
dec
cmp
xchg
pop
bound
jb
insb
sub
sub
ret
mov
test
std
sbb
dec
outsb
mov
dec
or
push
clc
or
lcall
sub
std
dec
pop
xchg
adc
push
push
ss
movsb
bound
in
jnp
adc
sahf
data16
imul
fisubrs
leave
ja
cmp
xchg
aas
sub
jmp
and
icebp
push
sbb
mov
mov
add
in
scas
add
xchg
aaa
cmp
xchg
and
pop
xchg
sbb
jne
cli
jb
mov
je
dec
adc
or
fistps
cmp
or
into
imul
movsb
ljmp
cmc
enter
mov
sub
bound
aas
push
sub
in
lods
and
xchg
fwait
sbb
cmpsb
mov
push
out
pushf
jo
loopne
or
rorb
cs
shll
rclb
adcl
mov
enter
pushf
mov
loop
mov
push
stos
cmp
jae
sub
sub
js
push
shl
fdivrl
mov
mov
inc
sub
aad
mov
jae
adc
cltd
xor
mov
push
pop
mov
xlat
mov
xor
out
idivb
inc
xchg
ljmp
out
addr16
repnz
pop
jno
ljmp
sub
adc
jecxz
cmp
add
imul
jmp
test
bound
mov
jl
cmp
divl
mov
arpl
das
mov
mov
pop
fstpl
in
and
cmc
push
xchg
or
jae
fucomi
out
lds
cmpl
push
out
movb
add
popf
fldt
fcmovnb
int
fildll
adcb
jno
int
mov
push
ljmp
orl
inc
outsl
test
and
and
fstpt
rdmsr
or
push
cmp
or
mov
push
fidivrl
cs
je
shll
add
or
inc
loop
stos
imul
pop
sbbl
test
repz
sbb
xchg
xchg
xor
sti
ss
cmpl
andnps
cmpsb
sahf
shll
xor
pop
jge
jl
pushf
imul
or
jne
and
aaa
adc
cmpsb
dec
std
sbb
stc
push
push
sbb
lods
fidivl
fiaddl
mov
mov
sbb
mov
rclb
push
in
pop
push
out
cmc
mov
in
inc
lock
jns
insl
jge
mov
cwtl
push
inc
lcall
shlb
cltd
sarb
call
add
adc
jo
fsub
mov
aad
in
xchg
push
les
test
cmp
ret
inc
xorl
lcall
jbe
in
lods
mov
addr16
idiv
fs
fidivs
stc
dec
jge
inc
dec
in
dec
xchg
loop
sti
insb
jmp
mov
jmp
addr16
xchg
lods
mov
push
inc
sub
dec
scas
scas
addb
cmpsl
enter
addr16
push
push
sbb
xchg
leave
sub
jp
adc
cmpsb
inc
scas
and
je
lret
mov
sbb
test
sub
or
jle
cmp
jnp
arpl
mov
pop
add
notl
mov
pop
mov
mov
aam
jecxz
mov
out
stos
out
adc
sbb
jecxz
repnz
adc
lods
xchg
int
lret
or
andb
shl
and
das
push
ret
pushf
jne
jbe
cli
out
xchg
aaa
add
gs
roll
cli
mov
aam
xchg
cli
in
or
sub
xchg
push
repz
or
dec
sbb
inc
and
pushf
sar
jbe
xchg
dec
movsb
js
jnp
rcrl
fstps
nop
add
shl
jp
mov
iret
xor
arpl
adc
ljmp
rclb
into
add
popa
or
test
sub
out
aaa
lea
mov
mov
test
sub
push
push
cmp
pop
stos
ret
dec
ficoml
aas
inc
jge,pt
sbb
pop
push
dec
pop
mov
lahf
fs
jge
lods
imul
inc
sub
leave
test
or
int
testl
clc
popa
loopne
vaddsd
cmpsl
push
inc
daa
cmp
out
out
shr
inc
mov
jbe
rcl
ret
stos
mov
outsb
jle
inc
scas
sub
jg
cmc
mov
inc
movsb
pop
xacquire
movsl
xchg
add
out
fs
push
dec
ret
mov
lret
inc
test
mov
xchg
aas
xchg
and
mov
jp
xchg
and
fadds
adc
xor
and
pop
jo
dec
xor
pop
push
xchg
add
pop
cmc
lods
mov
xor
repnz
cli
les
lock
push
push
clc
out
inc
push
outsb
push
ss
or
push
sarb
xor
je
jo
dec
out
cmp
cwtl
loope
cmp
out
stos
mov
lahf
pusha
push
mov
sti
leave
lock
push
jbe
push
xor
push
lods
lods
movsl
adc
jbe
inc
jge
xchg
imul
shll
cs
dec
pushl
sbb
or
jecxz
fs
xor
lret
mov
jg
jg
sbb
or
xchg
inc
icebp
dec
lods
xchg
xlat
lcall
push
arpl
cld
pop
jecxz
subl
pop
fwait
std
ret
xor
fdiv
bound
sahf
in
out
lock
adc
jno
push
jo
int3
pop
sub
fcompl
mov
sub
pushf
mov
add
xor
pop
shll
sbb
jecxz
icebp
sub
inc
insl
notb
cmp
fmuls
ret
lods
inc
cltd
mov
andl
and
push
dec
sub
mov
cs
subl
aaa
sub
jb
out
mov
fsubp
push
mov
std
lea
jbe
fcoms
shl
mov
je
jns
cmp
xchg
push
lock
mov
adc
sbb
and
fwait
in
adc
stos
or
pusha
ret
sub
push
stc
push
sub
dec
and
xor
rclb
inc
lea
mov
add
pusha
sub
test
lahf
cmpsb
add
or
loope
mov
lret
mov
pushl
dec
hlt
pop
pop
add
shrl
aas
rcrl
lock
arpl
jmp
inc
icebp
adc
mov
dec
repnz
xor
add
add
jp
add
push
jo
xchg
mov
xchg
mov
pop
mov
mov
imul
add
cmp
or
into
adc
repnz
mov
cltd
mov
push
repnz
jle
cmp
int3
pushf
arpl
cmp
arpl
add
das
test
xor
jge
insl
fcomps
push
mov
stc
insb
adc
in
jge
fnsave
lock
out
shll
jp
jg
inc
in
rcrl
bound
xchg
and
mov
pusha
rcrl
lds
std
sbb
pop
pop
pop
push
imul
repz
sub
sbb
pop
stos
cmp
pop
imul
xor
movsb
daa
sub
out
in
jg
adc
imul
lret
lods
adc
sbb
mov
ss
shrl
in
ror
fnstcw
cmp
dec
xchg
sbb
insl
sub
cltd
inc
iret
push
insl
or
data16
xchg
aaa
sahf
xor
sti
push
or
pop
cmpsl
add
mov
mov
xor
mov
add
pop
mov
stc
fldcw
push
jae
lods
hlt
imul
dec
out
in
js
adcl
jnp
mov
or
cmp
movsl
adc
imul
and
mov
dec
stos
push
pop
xor
and
ja
nop
mov
mov
push
cmc
mov
test
jnp
xor
pop
repnz
pop
outsb
mov
jecxz
loopne
mov
adc
mov
mov
negb
add
pop
add
comiss
stc
mov
xchg
cs
cmp
hlt
cmc
dec
xchg
imul
sarb
das
adc
mov
dec
cmp
popf
lahf
in
jo
pop
sbb
and
jg
aas
sbb
xchg
leave
cmp
std
rcll
data16
jecxz
add
jmp
xchg
aas
add
adc
jae
bound
add
cmp
bound
inc
and
push
push
adc
ja
lahf
jb
ljmp
data16
cltd
je
pop
push
cmp
or
subl
or
ret
xorb
pushf
and
add
ljmp
adc
cli
aad
push
ja
mov
ret
jno
data16
je
ss
mov
mov
sbb
adc
fnclex
sub
xorb
mov
lds
pop
rcll
push
or
stc
xchg
ret
xor
cmp
fcoms
out
mov
mov
inc
fwait
jg
push
mov
or
inc
icebp
js
pop
pop
push
inc
stos
jmp
jns
jp
call
out
pop
jae
decb
dec
popa
push
mov
int
push
sub
jmp
adc
cltd
fs
int3
cltd
mov
or
fsubrs
jecxz
mov
pop
int
cmp
sarl
push
sbb
es
xor
mov
mov
jmp
outsl
arpl
dec
sbb
fld
pop
daa
mov
outsb
shlb
insb
sbb
in
test
clc
mov
int
or
rcr
ss
cmp
ss
call
push
and
cmp
sub
int3
and
movsl
incl
mov
cmp
pop
and
dec
inc
inc
add
xchg
lret
push
jbe
int
and
cmp
icebp
sbb
push
xchg
pop
mov
stos
cmp
fnstenv
push
pop
mov
les
lock
push
mov
sub
inc
lods
pop
lcall
inc
std
dec
das
stos
cmp
idivl
jmp
sti
sbb
and
sbbb
fisttpl
cli
cmp
jl
sub
jbe
jbe
mov
arpl
aaa
jp
jns
jo
dec
sbb
test
dec
jge
xchg
push
test
mov
insb
lods
sbb
adc
xchg
test
leave
dec
jp
and
ret
mov
jmp
jae
sbb
or
cwtl
ret
fimuls
loope
xchg
dec
aas
xor
mov
inc
fiaddl
mov
mov
scas
lret
fstps
stos
outsl
fcompp
nop
push
mov
adc
sub
add
fwait
jns
inc
inc
pusha
pop
pop
push
or
je
fnsave
sbb
out
fidivrl
jl
jmp
mov
pop
pop
pop
dec
test
jle
scas
in
sbb
dec
rorl
fs
movsl
test
addr16
push
sub
out
mov
aas
fwait
movsb
repz
notb
pop
aam
cmp
or
mov
inc
inc
sti
mov
std
jne
cmp
pop
or
or
lods
test
and
aam
xchg
adc
sub
rcll
dec
rolb
bound
lahf
popw
mov
and
in
dec
shl
dec
out
std
fildl
scas
into
xchg
xor
test
xchg
add
fnsave
jl
dec
repz
xchg
mov
or
pop
cmpsb
mov
add
ja
fnstsw
xor
adc
pop
xor
notb
push
data16
stc
std
cs
fstpt
cmp
daa
pop
jns
adc
out
inc
or
and
push
and
lock
data16
out
mov
pop
dec
addr16
push
negb
dec
push
jmp
fcomi
inc
dec
mov
cmp
ja
mov
push
xchg
pop
inc
push
idiv
loop
int3
xchg
push
insb
jg
add
mov
sub
je
push
push
push
int3
jl
rclb
in
pusha
call
pop
out
cmp
or
dec
cmp
and
popa
jl
std
out
mov
clc
cmp
lods
pop
mov
jmp
cmp
leave
mov
addl
cmpsl
dec
xchg
adc
and
aad
push
dec
cmp
mov
shlb
aad
mov
addr16
push
and
push
loop
rcrb
jge
imul
mov
sbb
cmp
iret
aaa
test
idivl
test
cmpsl
sbb
pop
sbb
or
and
notl
dec
dec
arpl
cmp
sbb
nop
xchg
fwait
std
bnd
rcr
fsubrs
subb
xchg
addb
mov
lods
and
fstl
lods
outsb
lret
enter
adc
or
push
push
sbb
imul
js
cltd
push
insl
je
leave
lahf
fs
shlb
inc
jne
dec
stos
aad
and
rorl
cmp
ret
pop
lcall
sbb
jns
pop
mov
cmpsb
mov
pop
xchg
dec
inc
std
andl
inc
xchg
ss
inc
add
jmp
mov
mov
add
divb
cltd
cmc
insb
adc
cmp
push
in
test
xchg
adc
lcall
cmpsb
jnp
pop
fbstp
into
push
lds
sub
aaa
mov
div
mov
call
push
lea
scas
inc
and
cmovb
add
insl
add
orb
mov
les
test
rorb
icebp
js
sub
mov
fwait
add
xor
nop
stos
push
lret
lret
jns
hlt
or
movsl
jo
push
cmpsb
faddp
lods
add
push
fsubrl
lret
sbb
xchg
mov
imul
pop
rclb
fs
xlat
fs
sti
pop
jmp
xor
jmp
lds
xchg
addr16
inc
and
adc
add
mov
loope
pop
repnz
cmp
adc
dec
xor
pop
push
bswap
sub
mov
scas
daa
cmpsl
xchg
adc
sub
add
dec
stos
lret
cmpsl
roll
inc
jb
int3
lcall
mov
fwait
jg
into
push
movsl
push
lds
jge
jne
cs
negl
cli
out
imul
sub
fcomps
fiadds
inc
sti
mov
pop
pop
cs
sbb
mov
aad
imul
dec
inc
push
xchg
mov
push
ret
test
or
mov
inc
sub
negl
push
icebp
icebp
iret
icebp
leave
orl
and
xor
ret
push
mov
dec
gs
mov
inc
leave
inc
lahf
lahf
std
test
mov
inc
adc
adcl
test
jg
ljmp
or
pushl
arpl
adc
push
data16
and
and
insb
adc
xchg
scas
lods
mov
cmp
loope
mov
aam
inc
or
fisttpll
jb
leave
addr16
insb
shlb
xchg
cmc
js
mov
mov
js
hlt
xor
jmp
lea
sub
add
ret
dec
mov
xchg
ljmp
push
and
add
rolb
jl
xchg
ret
mov
jno
xchg
mov
mov
popf
push
ficompl
mov
shll
sbb
mov
lret
test
hlt
add
push
pop
add
stc
xor
jmp
and
aad
xor
ret
fmuls
repz
xchg
sub
push
lret
lock
cmp
in
xchg
mov
xor
push
fstl
sbb
lock
cmpsb
add
or
inc
push
mov
iret
cmp
sbb
mov
in
aad
xchg
in
add
xchg
sub
out
sub
cmp
fstpt
inc
cmp
sub
mov
dec
sti
int3
movsl
or
xor
adc
push
push
arpl
pushf
rcrl
rorb
cmp
rcrb
add
out
pop
jns
pop
mov
movl
sbb
xlat
xchg
fs
xchg
mov
push
cld
pushf
into
arpl
add
mov
ret
lea
xlat
sbb
jle
negl
adc
add
test
or
push
cwtl
hlt
mov
jle
mov
and
fwait
ljmp
add
inc
sahf
icebp
mov
lods
ret
out
mov
lcall
sbb
sarl
cmc
adc
cmpsb
lcall
enter
or
jo
dec
fldenv
sbb
ss
xchg
pusha
je
adc
and
jge
cmp
into
out
jnp
xorb
loope
jns
sub
daa
in
movl
push
pop
lods
push
cs
inc
xchg
add
daa
xor
xor
pop
sub
lret
test
mov
and
jns
push
mov
push
sbb
movsb
ja
xchg
ret
rcrl
std
scas
loope
xchg
das
cli
push
jno
sbb
shrb
dec
mov
push
aad
inc
je
sbb
fistps
jecxz
aam
jbe
mov
push
insb
stos
stos
push
xchg
lahf
jae
lods
popf
hlt
ss
stos
add
movsl
fistps
push
shr
sti
in
imul
rcr
adc
je
inc
inc
add
shlb
cmp
cmp
jnp
imul
movl
sbb
cmp
stos
std
push
jmp
push
sub
xchg
dec
fwait
movsb
repnz
flds
rorb
popa
cmp
add
xlat
dec
pop
ss
pop
push
pop
stc
test
insl
jno
notl
mulb
cmp
fsub
push
pop
movsl
mov
scas
jge
mov
xchg
inc
adcl
test
sbb
add
in
aad
sbb
push
stos
mov
jnp
cwtl
stc
jecxz
test
jo
jp
pop
sub
std
xor
sarb
je
in
mov
add
xor
sub
arpl
bound
mov
push
ja
sarb
xor
mov
pop
loop
rorl
mov
ss
or
sbb
arpl
out
insl
aad
mov
xor
pop
sbbl
fisttpl
adc
dec
dec
ljmp
lds
mov
or
mov
dec
mov
xchg
imul
mov
sbb
pop
loopne
or
jnp
xchg
cmpsl
sti
and
popa
outsl
imul
fsubrl
ret
dec
sbb
sub
dec
mov
xor
mov
mov
mov
lods
jns
loop
aad
leave
jmp
std
scas
dec
pop
mov
enter
cmp
rcrb
loop
aas
lretw
jge
fmuls
xor
jo
loopne
cmc
mov
jb
push
mov
mov
cmp
movsb
gs
imul
and
fcmovne
xchg
jbe
clc
mov
hlt
out
adc
sub
xchg
sbb
cltd
xor
pusha
sub
add
js
jp
and
test
and
fwait
je
add
add
push
push
fnstsw
pop
sbbb
pusha
popl
mov
cwtl
loope
jl
mov
and
cmp
rcrl
and
push
push
cmc
je
outsb
inc
push
test
popa
jbe
sub
out
sahf
xchg
xor
add
push
mov
inc
pop
inc
stos
dec
inc
scas
enter
pusha
aaa
shl
stc
ds
lods
sbb
jmp
inc
sub
xor
hlt
push
pushf
push
repnz
aam
xchg
sarl
imul
add
flds
mov
and
cmp
shrb
jnp
pop
xor
xchg
das
inc
adc
es
xlat
jle
mov
icebp
push
popa
cwtl
or
sub
test
mov
mov
fsubl
inc
jge
out
lods
imul
push
and
inc
and
pop
out
xor
mov
fstps
loope
push
xor
sbb
andl
cltd
mov
xorl
push
pusha
cwtl
mov
clc
pop
xor
arpl
sub
pop
pop
movsl
addb
jnp
cmp
adc
or
dec
cmpsl
xor
xchg
mov
mov
scas
push
mov
dec
mov
cmc
mov
test
push
xchg
jo
add
push
negb
fdiv
xor
lret
outsb
cmp
test
jne
and
pop
jo
and
xor
xor
inc
and
out
pop
std
stc
push
lock
dec
dec
sub
add
mov
cmpb
imul
add
in
fs
pop
pop
sbb
lahf
pop
cmp
xchg
je
pop
insb
mov
fldenv
int
sti
enter
jmp
add
in
fidivrl
push
cltd
xchg
aas
mov
outsl
push
or
data16
mov
pop
int3
fnstsw
add
aad
popa
cmp
and
push
int3
pop
shrl
push
xchg
ret
inc
jg
inc
pop
jp
sub
pop
ficoms
push
scas
pop
mov
mov
addr16
daa
pop
decb
push
cli
enter
push
push
rcrl
test
mov
inc
into
xchg
dec
fidivs
les
cmpl
push
inc
push
adc
xchg
fnstsw
adc
ljmp
mov
in
movsb
push
mulb
xchg
cmc
sti
test
cld
adc
adc
add
xchg
and
pop
int3
ret
mov
ja
fsubs
inc
or
mov
jns
xlat
iret
pop
xor
cli
movsb
or
orb
dec
mov
cmc
or
inc
xchg
cli
in
or
xchg
xchg
xor
xor
or
setne
sub
mov
xchg
es
jmp
and
cmc
xor
clc
push
inc
mov
sub
lods
test
pop
cmc
xchg
dec
and
inc
push
hlt
fcoms
in
aas
aas
cmp
repz
out
mov
and
lds
sbb
xchg
cmp
arpl
fdivl
sbb
mov
fmull
mov
mov
add
repz
aad
pop
scas
jge
mov
and
popa
rcrl
xchg
stos
jmp
pop
fcomps
frstor
jp
es
lahf
cmpb
sbb
adc
mov
push
out
int3
jbe
imulb
cwtl
xlat
ficomps
js
adc
insb
or
cmp
and
xor
mov
inc
dec
mov
cli
popl
xchg
mov
das
lret
fcoml
push
cmpsl
in
fstpl
inc
fmull
mov
push
sbb
pop
jae
mov
insl
add
push
xchg
mov
ret
push
orb
inc
jno
xchg
cmp
lahf
sti
ret
hlt
imul
add
xchg
nop
inc
add
cmp
int
xor
pop
sub
cmp
ret
push
mov
aaa
jecxz
mov
daa
push
in
cmp
ret
loope
xor
shrb
mov
cmp
dec
fmull
inc
fiadds
jge
xchg
test
mov
xor
xchg
xchg
mov
adcb
sbb
lds
sub
inc
xor
mov
xchg
xchg
pop
pop
dec
cmp
pop
sub
test
enter
ficoms
push
adc
ret
fcoml
test
jmp
fs
dec
mov
idiv
jb
out
xor
and
push
mov
cmovns
call
and
cmp
jp
pop
test
sbb
aaa
jmp
and
sbb
or
addr16
insl
pusha
xchg
push
pop
pop
nop
out
aaa
cltd
das
lahf
ss
pop
mov
fistpl
jb
or
les
aaa
iret
mov
push
incb
ss
push
pushf
gs
pop
hlt
xor
stos
sub
loop
lods
dec
dec
and
and
dec
daa
cli
pop
xchg
jg
shl
xchg
dec
stos
jae
xorl
hlt
mov
ljmp
aam
add
jmp
hlt
push
jne
addr16
pop
push
push
adc
ss
or
push
push
jo
enter
stos
fists
add
lock
insb
mov
cmpsl
inc
js
pushf
inc
sbb
mov
jge
mov
adc
aaa
ljmp
sbb
fs
out
push
mov
outsl
cmp
mov
push
out
orl
dec
pop
sub
pop
sti
mov
xor
sbb
xchg
cmp
jp
mov
or
icebp
in
adc
or
test
gs
les
insl
movsb
pop
jg
lods
cmp
add
xchg
cld
mov
xchg
rorb
cmp
jmp
push
jns
dec
lret
out
xchg
shr
jbe
mov
int
in
xchg
add
jge
and
add
cmp
inc
mov
add
pop
pop
push
push
negl
jno
and
aaa
out
add
xor
mov
pop
xchg
std
fs
dec
insl
adcl
nop
leave
cmp
jno
pop
leave
xchg
test
aas
int
sub
xor
sub
daa
lahf
pop
imul
scas
pop
xor
adc
inc
test
rcrl
out
mov
shll
arpl
int3
or
jle
pop
cltd
call
pop
lahf
jle
fwait
pushf
pminsw
mov
ret
movsl
mov
pop
xchg
adc
sti
cwtl
out
mul
sub
or
mov
xchg
push
cmp
mov
add
cwtl
push
sbb
pushf
in
jmp
fistpll
je
mov
nop
adc
inc
hlt
jo
sbb
mov
push
dec
jnp
rorb
mov
outsb
jnp
mov
sub
loop
sbb
arpl
mov
xor
mov
ss
pop
test
testb
cld
adc
pushf
inc
pop
jno
in
cmc
xchg
jae
mov
leave
shl
sbb
jns
rcrb
add
push
mov
push
pop
xorb
push
arpl
mov
sub
and
push
xor
mov
push
movsb
adc
popa
xchg
and
xchg
out
mov
es
push
and
mov
mov
jp
mull
in
sahf
sub
sbb
push
test
jge
fsubs
cli
lea
mov
mov
push
mov
sub
xchg
rorl
dec
iret
repz
insb
bound
sbb
loopne
in
jno
int
aad
or
mov
push
or
mov
cmp
into
and
test
xorb
xchg
shl
and
sub
jecxz
mov
rorb
or
cmc
ret
daa
inc
into
mov
pop
xchg
mov
inc
cmp
or
dec
and
repz
repz
push
nop
add
dec
or
in
js
fmul
sbb
cmp
inc
mov
mov
add
and
jno
sub
xchg
xchg
pop
dec
mov
hlt
enter
addl
test
out
inc
in
imul
test
std
jg
stos
imul
out
imul
into
sub
pop
pop
cmp
cltd
push
push
jg
push
inc
sub
jne
mov
negl
fisttpl
loopne
jmp
adc
movsb
enter
sahf
sbb
add
test
in
inc
jne
jge
cltd
inc
cmpsl
lcall
insb
leave
xchg
lahf
pop
scas
push
adc
call
push
cmpsl
pop
les
adc
cmpsl
push
shl
sbb
ret
pop
mov
mov
fs
inc
jp
lods
ds
pop
mov
aam
jnp
mov
aaa
or
test
lret
movb
aam
js
icebp
mov
lods
lahf
inc
int3
sarb
ret
jb
push
imul
jnp
faddl
ljmp
repnz
lahf
dec
cmp
scas
mov
jge
jno
std
push
stos
or
xchg
dec
js
movsl
jl
lods
push
and
insl
and
js
repz
or
mov
sbb
jno
out
push
pop
repnz
and
and
fldenv
pop
leave
leave
sti
push
leave
aad
jnp
stc
shll
jge
incl
adc
inc
outsb
mov
or
and
rcr
js
sbb
xor
push
fistl
dec
insl
jbe
gs
push
cmc
sub
mov
add
xchg
mov
push
xor
cmp
push
or
fsubp
push
adc
aaa
test
mov
daa
pushf
adc
mov
xchg
push
popf
sub
bound
jg
mov
cmp
mov
mov
mov
mov
and
cwtl
ret
lock
adc
out
in
mov
out
lds
popa
mov
and
clc
into
pop
repz
xlat
inc
sti
pop
or
pop
xor
sahf
in
sbb
jb
outsb
adc
lcall
fidivrl
or
into
mov
cmp
pop
jp
std
push
dec
leave
fstps
dec
dec
scas
xchg
test
xor
cli
les
pop
push
push
sub
mov
imul
xor
mov
clc
lcall
dec
out
in
push
gs
es
xchg
je
xchg
dec
inc
sub
jmp
xchg
adc
xchg
testb
or
icebp
push
xchg
dec
mov
pop
daa
cltd
push
pushf
mov
mov
fs
or
add
jl
inc
mov
mov
sti
out
les
xlat
xchg
addl
push
push
or
inc
pusha
pop
scas
pop
gs
mov
push
cli
inc
mov
xchg
out
rcl
mov
nop
push
scas
xor
xlat
fstl
cmp
incl
dec
rcrl
test
or
enter
xor
test
cli
dec
lret
mov
jne
pushf
mov
pop
adc
pop
sbb
neg
out
rcrl
mov
inc
clc
pushf
bound
jno
mul
jnp
cmp
test
push
into
test
aas
shl
push
jecxz
mov
and
dec
jp
and
sbb
stc
andl
adc
add
push
int3
std
decb
inc
mov
sarb
js
xchg
int
rcl
push
sub
inc
jb
sbb
sub
dec
lea
mov
add
pusha
sti
xchg
and
cmpsl
mov
ret
sbbb
add
sbb
xlat
sarb
mov
ss
aad
mov
mov
mov
push
inc
ss
dec
sbb
push
mov
sub
mov
pop
cmpsb
jbe
dec
dec
add
sbb
jo
adc
int
sbb
push
and
jne
nop
jmp
faddl
std
cmp
leave
mov
adc
rolb
shl
adc
jge
loope
fdivr
int3
stc
jae
incb
adc
repz
jnp
sub
inc
shll
loop
or
addl
int3
cli
mov
mov
adc
test
lock
movsl
jmp
inc
inc
mov
mov
dec
mov
pop
lock
mov
movsl
rorb
dec
xchg
mov
pop
adc
inc
mov
mov
loop
cmc
mov
hlt
out
aad
aad
xor
push
push
and
sbb
stos
jp
popa
push
pop
push
lods
mov
pop
lret
mov
xor
shrl
adc
ror
mov
pushf
or
pop
in
sbb
and
ljmp
add
jge
add
fimull
xor
xor
mov
frstor
xor
lahf
cmp
cmp
dec
xchg
push
daa
pushf
addl
mov
push
loope
lret
push
fstpt
xchg
jb
fisubrl
lods
stos
stos
or
and
mov
xlat
mov
push
xchg
xchg
mov
in
insb
addb
xor
fdivrs
xchg
pop
pop
xchg
xlat
lcall
mov
push
lock
mov
nop
jns
mov
mov
add
adc
pop
loopne
push
jg
test
inc
clc
mov
push
cwtl
jne
push
adc
test
xchg
ret
int3
shlb
mov
mov
sub
mov
movsl
pop
je
inc
notl
mov
adc
cmovbe
mov
sub
push
jge
inc
jns
or
cmp
cld
pop
insl
mov
mov
pop
push
ds
push
pop
pop
ss
mov
mov
lock
cs
rcl
and
int3
stos
lock
mov
mov
call
xchg
xor
in
and
ds
rolb
nop
ds
push
lahf
inc
xchg
sbb
das
popf
cmp
jmp
mov
mov
in
xlat
xchg
cmpsl
inc
jnp
ds
adc
mov
push
and
inc
sub
jns
andb
imul
or
shrb
and
out
insl
mov
cmpsb
sbb
mov
inc
imul
cmpsb
sub
in
push
inc
das
xchg
data16
les
fmul
xchg
or
fdecstp
test
dec
lret
cld
idivl
sub
add
test
jg
jo
push
mov
ds
jecxz
inc
loopne
lret
sbb
push
sub
jae
xor
lock
add
bound
nop
jl
xlat
and
and
int
call
sbb
lock
aad
push
lds
rcrb
int3
aad
faddp
adc
lea
lds
jnp
xor
je
mov
gs
cmc
insb
mov
imul
cmp
ljmp
dec
cmp
sbb
int3
repnz
dec
push
cmp
mov
push
imul
inc
sbb
jne
xchg
shr
mov
or
mov
jnp
mov
jo
js
mov
fwait
sarb
int
xchg
into
dec
aam
shl
fsubr
xor
cs
mov
rcll
bound
ja
push
xor
cltd
jae
jb
popa
xchg
imul
lahf
fadd
xor
mulb
mov
mov
loop
sbb
xor
inc
ss
fsubrl
repnz
pusha
fldt
aam
data16
add
incb
in
mov
nop
jl
ljmp
push
and
sbb
pop
inc
xor
xlat
jb
jo
xor
mov
cmp
in
push
aas
cmpsl
imul
pusha
inc
xchg
js
inc
aam
push
mov
mov
xor
stos
dec
sub
stos
mov
aaa
cmp
loope
std
xor
ljmp
pop
cmc
add
xchg
sbb
hlt
bswap
jne
or
out
mov
sbb
shlb
out
js
sbb
mov
incl
dec
add
dec
hlt
les
pop
xlat
dec
xor
dec
cmp
out
jb
sar
out
inc
fcmovne
das
ja
scas
mov
push
popf
push
adc
dec
dec
loopne
ss
int3
scas
sbb
loopne
inc
adc
out
dec
leave
xchg
push
add
pop
and
sbbl
xchg
pop
cmp
das
fmuls
xor
sbb
mov
sbb
inc
mov
sbb
adc
push
decl
rcrb
mov
sti
popa
inc
push
pushf
outsb
cmpl
loop
push
jmp
mov
sub
push
rorl
inc
arpl
mov
lcall
mov
aad
ds
mov
pushf
in
dec
insl
popf
mov
dec
or
inc
or
fisttps
popa
xchg
mov
mov
mov
fnsave
int3
or
mov
add
insb
or
mov
pop
movsb
pop
negl
pop
js
mov
mov
fwait
xor
xlat
pop
mov
popa
leave
clc
mov
dec
sub
out
and
jbe
and
scas
pop
push
mov
push
mov
fadd
push
in
and
sub
jp
cwtl
xchg
mov
or
call
sbb
inc
scas
sbb
sarl
out
loope
data16
jl
lods
cltd
test
or
fchs
in
sbb
mov
scas
xchg
xchg
je
rcl
mov
loopne
stos
into
jbe
jle
pop
nop
packsswb
jge
mov
andb
es
xor
pop
mov
mov
dec
pushf
mov
or
cmp
jae
data16
jnp
mov
lahf
in
fcompl
int
in
rcll
dec
insl
popf
xlat
daa
aam
xchg
shrl
xor
call
andl
cmpsl
cli
xchg
loope
imul
mov
and
int
popf
stos
test
mov
nop
push
lcall
imul
xchg
xchg
add
in
mov
lahf
jg
push
cltd
xor
pop
dec
in
pop
inc
test
mov
pop
scas
int
aas
jp
lea
push
pop
fnstenv
mov
mov
mov
and
iret
xorl
or
mov
xchg
mov
subl
pushl
push
dec
jne
adc
pop
push
dec
mov
gs
lds
aaa
loope
rcl
lods
and
pop
mov
cmp
out
test
clc
loope
mov
out
call
arpl
cmp
pop
in
sub
fwait
jle
or
adc
mov
loope
xchg
adc
pop
das
xor
lods
jle
inc
in
mov
jge
push
out
cmp
fldt
mov
push
mov
daa
and
mov
xchg
cs
mov
xor
ja
loop
ret
stos
stos
mov
push
dec
add
cs
add
sub
pop
mov
mov
mov
inc
rolb
sbb
mov
out
lret
or
mov
cmpps
mov
push
lods
mov
lods
pushf
xchg
mov
and
out
outsb
call
adc
mov
sub
mov
daa
loopne
stc
and
inc
mov
mov
cli
std
push
adc
and
imull
mov
pop
or
cmp
insb
or
xor
insb
pop
int3
or
mov
adc
cmp
push
stos
mov
ds
stos
xor
jne
cmp
das
jmp
push
in
movsb
out
xchg
lret
iret
jnp
dec
fdivp
xor
dec
inc
sahf
dec
daa
lds
mov
mov
ljmp
sbb
dec
mov
inc
jno
stos
xchg
dec
mov
sub
stos
cmp
lds
pop
pop
leave
repnz
mov
cli
push
pushaw
fisubrs
gs
jno
inc
insb
cltd
push
hlt
clc
push
sahf
sub
loop
scas
mov
sub
subb
shl
sbb
mov
push
ds
dec
push
out
pop
sbb
pushf
cmp
cmpsb
scas
jl
ror
stos
enter
cmp
into
and
insb
mov
loope
pushf
aas
mov
pop
out
stos
xor
xor
cltd
adc
push
add
or
sbb
out
fmuls
in
iret
inc
add
sti
jp
or
clc
lahf
std
and
dec
shr
mov
mov
test
push
mov
inc
ljmp
sub
xchg
cmp
addb
jmp
jae
test
mov
mov
data16
fistpll
fcmovne
jg
insl
add
jecxz
movsl
mov
or
leave
mov
out
adc
es
hlt
add
sub
push
into
jl
mov
mov
push
iret
sbb
mov
sbb
mov
repz
leave
arpl
je
inc
adcb
hlt
jne
cmp
pop
mov
data16
rcll
out
cld
lret
stos
dec
add
sbb
pop
insb
xchg
hlt
xchg
xchg
mov
inc
inc
or
pop
test
xor
js
out
scas
mov
pop
jg
lcall
xchg
xor
push
xchg
cwtl
mov
mov
mov
loope
imul
loop
cmp
les
xor
jno
jle
popa
mov
jmp
push
lret
faddl
pop
int3
mov
and
out
ret
cli
mov
inc
mov
cmp
lock
add
pop
in
sbb
mov
test
xchg
mov
cmc
flds
and
fimuls
lea
popa
sbb
test
dec
mov
mov
mov
jl
jb
xor
push
stc
and
push
jecxz
add
mov
sbb
in
les
mov
fidivrl
test
xchg
ds
andl
cvttps2pi
mov
mov
maskmovq
mull
cmpsb
lret
xor
insb
outsb
cmp
xor
jmp
lret
sti
in
jle
loopne
shl
roll
imull
stc
data16
xchg
or
mov
sbb
ret
loopne
out
sbb
fwait
mov
gs
push
lahf
inc
jnp
cwtl
insl
or
push
lods
and
out
cmp
flds
xchg
adc
jo
out
test
adc
sti
test
bnd
push
loope
add
ljmp
js
sub
in
aaa
imul
cmc
push
test
push
daa
inc
rcrb
and
xchg
in
lods
je
add
and
adc
mov
das
adc
hlt
sbb
mov
mov
dec
psubsw
lods
and
dec
sbb
outsb
fcompl
mov
sbb
adc
fists
rol
push
mov
loopne
mov
loope
xchg
jo
cmp
fs
dec
sub
mov
loopne
fimull
andl
lea
push
mov
dec
cmpsb
insb
outsl
jl
adc
xchg
outsl
mov
popf
xchg
xchg
lea
sub
inc
cmpsb
sub
pop
pop
icebp
and
stos
gs
std
rcr
jbe
pop
cmp
cmp
jle
lahf
jno
jo
jno
jno
outsb
sbb
mov
insb
fsubr
sbb
sub
lcall
xor
subb
cmp
cs
cmpsb
cmp
inc
pop
dec
inc
push
cltd
loopne
hlt
inc
push
repz
inc
or
add
inc
out
jp
xchg
stc
push
cmp
or
dec
sub
fsubs
xchg
jge
decl
stc
bnd
ret
sbb
movsb
mov
cmp
sub
sub
cmp
bnd
call
mov
cmovnp
fsubrs
negl
and
mov
dec
pop
lcall
and
cmp
mov
adcb
dec
fldt
mov
sub
insl
cs
lahf
push
push
popa
fs
mov
cmp
add
les
and
dec
or
dec
dec
adc
enter
adc
add
js
pusha
shlb
hlt
call
xchg
jp
shlb
mov
add
stos
aas
sti
insl
fisubrl
jle
mov
xchg
sbb
data16
lods
push
jp
sub
mov
es
push
mov
pop
push
es
xor
ret
mov
mov
add
cwtl
jbe
repnz
jecxz
sbb
or
addr16
sahf
movsl
repz
pop
push
ret
push
es
test
imul
in
push
mov
dec
mov
sub
rcrb
mov
sub
sbb
fmuls
mov
mov
dec
mov
stc
pop
mov
mov
push
jmp
shrb
push
bound
pop
sub
dec
arpl
mov
mov
xchg
mov
shl
les
sti
adc
icebp
sub
test
push
fsubl
int3
mov
js
std
lcall
mov
cwtl
adc
movsb
sbb
sub
and
inc
in
call
mov
cli
cmpsb
push
inc
popa
ljmp
movsb
xorl
cs
test
push
pop
add
push
push
mov
sub
iret
or
call
sub
jge
hlt
xchg
or
orl
or
jo
je
add
dec
fisubl
jb
and
jp
out
enter
imul
push
jecxz
mov
cmp
pop
repz
out
xchg
add
in
adc
hlt
xor
shlb
addb
push
lds
aad
mov
out
jmp
mov
pushf
xlat
adc
push
outsl
jns
inc
sti
pop
dec
addps
fdivl
cmp
dec
inc
mov
jl
or
push
pop
fiadds
hlt
cmp
sbb
push
sub
adcl
insl
pop
adc
fwait
shlb
jnp
dec
inc
xlat
sahf
sbb
cmc
arpl
pop
pop
mov
add
cmpsb
mov
divl
sbb
xchg
jg
loope
cmpsl
sarl
movsl
jno
or
mov
mov
xchg
cli
dec
pop
adc
loope
mov
test
nop
outsl
pop
inc
int
daa
repnz
xchg
mov
test
aam
sub
push
test
es
adc
testl
iret
daa
or
loopne
dec
lds
sbb
les
or
divl
cmp
out
mov
pushf
push
cmp
and
ret
mov
mov
inc
jne
xchg
dec
mov
mov
ficoms
pop
repz
push
sbb
imul
lcall
pop
loopne
and
sbb
inc
mov
adc
iret
dec
adc
jno
loop
cli
pop
add
int3
jle
inc
sub
ja
inc
xchg
sbb
xor
mov
sbb
add
push
inc
pop
add
iret
jne
inc
dec
lcall
fnstcw
add
aam
mov
mov
pusha
inc
sub
in
pop
lock
xor
outsb
aaa
cld
fmuls
xor
xlat
loopne
mov
or
shlb
pop
pushf
ljmp
xlat
lahf
popa
push
sahf
sbb
push
mov
decb
test
cmpsl
sti
pop
sbb
es
or
divl
mov
out
and
cvtps2pi
ds
fsub
pop
jo
jg
imul
inc
shrl
out
pop
pop
dec
adc
pop
xor
shlb
cltd
shll
mov
xor
in
add
mov
cwtl
cs
pop
je
jmp
jno
xchg
inc
push
lock
jnp
jecxz
aaa
hlt
in
enter
push
push
xchg
cmc
test
pushf
sbb
stos
in
out
pop
lods
push
mov
add
or
jecxz
int3
aad
cwtl
push
cli
dec
mov
mov
aaa
pusha
std
cmp
stc
dec
ret
add
in
add
imul
jge
inc
mov
adc
je
push
adc
test
xchg
cmp
jnp
xor
lcall
cwtl
in
mov
imul
sub
pop
nop
xor
std
inc
stc
test
in
xchg
xchg
push
mov
cmp
sbb
nop
mov
inc
sub
sbb
add
jle
sbb
and
mov
movsb
test
mov
imul
adc
cld
js
imul
in
or
jae
xor
jge
dec
and
pop
mov
pop
sub
test
lods
lds
adc
out
loopne
sahf
cli
idiv
into
dec
push
mov
jmp
jnp
or
cmpsl
addb
sbb
add
lea
mov
inc
das
and
add
es
test
int
jns
xchg
daa
dec
test
les
repz
adc
and
and
imul
jb,pn
sbb
jb
xchg
push
mov
push
outsl
pop
inc
or
add
rcll
subb
stos
mov
arpl
xor
int
in
pusha
scas
repnz
leave
sahf
fiaddl
jb
repnz
pop
movsb
outsb
dec
push
movsb
jl
pop
mov
xchg
out
and
mov
push
mov
xchg
jle
lock
sahf
mov
call
mov
pusha
and
mov
jp
shrl
dec
arpl
aaa
push
mov
jmp
jne
popf
inc
daa
fadd
scas
jg
fwait
xchg
jns
nop
mov
into
jge
jp
aad
daa
scas
enter
jmp
inc
or
jae
pop
hlt
data16
pushf
pop
call
mov
lea
xor
push
sarb
push
jae
dec
loop
jmp
jge
inc
or
lahf
in
inc
mov
idivb
cmp
fs
xor
mov
and
jno
ja
mov
imul
sub
mov
dec
fmuls
add
push
and
lds
nop
dec
ljmp
mov
push
out
fwait
jecxz
jle
or
dec
jmp
xchg
xlat
inc
out
adc
mov
out
mov
jle
add
mov
aad
pop
sub
movsb
pusha
fidivrs
cmp
decl
mov
jecxz
out
cmpsl
pop
xchg
int3
sahf
aam
pusha
pop
cli
or
insl
ja
ja
mov
shll
scas
loop
pop
mov
fisubs
push
or
jno
or
jle
pop
das
add
addr16
shrl
aam
and
mov
jg
jmp
mov
lods
mov
mov
test
scas
andl
sbb
test
je
push
divl
dec
and
test
push
mov
je
and
pusha
arpl
jb
sub
sub
add
shll
sbbl
mov
mov
inc
gs
mov
adc
mov
mov
pop
pop
icebp
mov
add
push
and
mov
cmp
mov
ss
mov
mov
push
mov
dec
bound
mov
sub
push
push
and
mov
adc
mov
outsl
data16
sub
fcmovnb
mov
outsb
cmp
lret
adc
mov
scas
test
jo
stos
or
xlat
jnp
sbb
rcr
push
jge
leave
fwait
pop
sbb
jl
in
sbb
adc
and
xor
push
rcll
cmpsb
sti
sahf
out
movsl
dec
insb
ret
ret
out
leave
pop
sub
je
scas
mov
cmp
jmp
inc
push
out
jp
add
lea
adc
pop
or
dec
aaa
stos
outsb
or
sbb
add
ds
inc
push
dec
iret
pop
or
xchg
loope
repnz
fimull
xor
xor
mov
or
jp
leave
cld
xchg
cmp
repz
xchg
addr16
cmp
dec
mov
int
cwtl
into
mov
iret
daa
shrb
stos
and
sbb
cmp
mov
jge
mov
pop
push
es
clc
cltd
push
cwtl
cltd
sti
pop
jne
roll
pop
cmp
or
fmull
push
mov
negb
cmpsb
sbb
mov
pop
loop
and
inc
xchg
jp
mov
jle,pt
mov
sti
gs
dec
lds
dec
popf
pop
sbb
loope
xchg
jne
xchg
ja
stc
into
sub
nop
insb
int3
cwtl
lret
xchg
pop
sub
add
popf
cmp
xchg
push
loopne
inc
aaa
fimuls
push
xchg
mov
jb
dec
xor
aas
ror
inc
roll
or
push
mov
test
pop
mov
and
mov
scas
ret
pop
xor
ret
mov
out
xor
int
movsb
mov
es
icebp
push
or
jmp
mov
jg
jae
mov
inc
gs
bound
xchg
gs
or
sub
enter
mulb
and
in
cltd
jmp
lds
out
jl
jo
lea
pop
or
push
xchg
in
sub
adc
or
mov
stc
adc
sbb
gs
xor
aaa
push
pop
mov
sub
jb
push
dec
inc
mov
jns
jle
and
test
pusha
loope
sub
xchg
mov
ffree
push
pop
add
sub
jo
sbb
addr16
dec
lret
mov
mov
and
mov
in
negb
sub
xor
mov
xor
stos
push
dec
stc
push
mov
rorl
xor
jae
mov
repnz
pop
mov
inc
ret
std
sbb
out
std
std
jno
dec
sub
sub
int3
incb
ja
xor
out
out
add
int3
inc
in
inc
dec
sbb
pusha
arpl
int3
jmp
nop
sub
call
sub
mov
jg
push
inc
mov
pop
es
scas
lock
sub
xchg
pop
mov
or
rolb
jg
enter
lods
and
orb
or
stos
inc
xor
mov
dec
mov
mov
sbb
sub
call
out
mov
imul
aas
mov
xor
sbb
or
xchg
inc
dec
jp
stos
mov
xchg
std
push
jo
bound
ret
dec
push
xor
test
mov
dec
stc
cld
push
mov
movsb
es
dec
gs
shl
push
xchg
outsl
adc
insb
lret
push
sbb
mov
push
fistpll
pop
jecxz
adc
ret
cltd
mov
fsubl
xor
outsl
cmp
pop
push
icebp
jne
inc
repz
push
jge
test
dec
cltd
repz
inc
adc
cld
test
adc
xor
lcall
roll
pop
aaa
dec
hlt
aad
ficoms
xchg
cmp
pop
repnz
inc
repz
mov
sbb
fstps
or
or
xor
stc
mov
ficoms
iret
rol
int
arpl
pop
jo
ljmp
lods
rcrb
xchg
pop
int
adc
inc
stos
std
dec
mov
loopne
or
sbb
mov
mov
cmpsl
pop
das
sbb
call
incl
jge
cli
in
xchg
fwait
pushf
test
pop
sub
xchg
int
pop
mov
dec
and
loopne
add
push
stos
jne
jns
aas
mov
mov
fsubl
inc
push
adc
jnp
sbb
shll
mov
jle
xchg
and
jle
adc
fmull
lods
in
loop
in
mov
sbb
in
cmpsb
add
ror
cmp
cmpsl
mov
lret
adc
adc
mov
cld
mov
sti
sub
fldl
inc
cmp
jecxz
or
iret
jge
adc
push
je
mov
hlt
bound
push
adc
sub
popa
jns
js
xchg
inc
xchg
mov
test
xorl
cwtl
inc
setb
scas
fwait
dec
push
dec
out
dec
les
aam
into
mov
inc
adc
xchg
pop
rcrb
sbb
push
add
pop
adc
out
jg
or
jno
sub
lret
add
pop
loop
xor
jae
xchg
jge
imul
mov
lret
mov
push
cmp
ds
cmp
dec
mov
popa
jno
adc
cmpsl
fstpl
xchg
xor
add
faddl
push
cmpsl
sbb
addb
stos
icebp
or
pop
mov
shrl
or
adc
jns
fstp
sbb
or
mov
js
cs
xchg
pop
imul
jae
popa
stos
test
cmpsl
sub
push
das
repz
xchg
sti
sbb
js
cmpsb
jmp
sti
je
add
lock
mov
ss
push
test
dec
push
cmpsl
add
jge
mov
sbb
rol
push
cmp
movsb
push
mov
movsl
aam
iret
sbb
stc
mov
pop
call
mov
inc
sbb
xchg
or
nop
mov
push
mov
aad
enter
fidivl
insb
pop
or
sbb
lret
lcall
jp
jg
push
lods
adc
fsubrl
jb
movsb
pop
stos
add
pop
enter
outsb
sbb
push
roll
xchg
push
ljmp
loope
xor
lds
ret
in
pop
xor
imul
enter
xor
stos
cmp
outsb
push
mov
dec
addr16
fs
lea
pop
negl
loopne
iret
lods
fnstcw
and
stc
test
jbe
mov
mov
mov
mov
outsb
or
scas
fwait
mov
add
mov
pop
repnz
not
fwait
sub
mov
dec
fsubrs
cmpsb
mov
repnz
or
sub
iret
jmp
mov
fildl
jo
cmp
mov
sub
jno
daa
lret
add
push
arpl
jmp
adcl
sahf
jp
and
outsb
jp
scas
adc
mov
les
mov
mov
mov
push
pusha
mov
pop
movsl
dec
lret
xchg
inc
movsb
or
sub
pop
clc
dec
in
xor
jb
dec
clc
inc
push
xor
or
jge
cmpsl
cs
fs
fdivs
ljmp
inc
test
push
mov
les
xchg
repnz
rcll
sub
cwtl
adc
loope
jne
mov
fidivs
rol
fidivl
lods
xchg
add
fwait
inc
test
xlat
fcmovnbe
testb
sbbl
xor
cmp
and
push
and
xlat
insb
sahf
stos
fldt
shrl
inc
cwtl
fs
mov
popf
or
xlat
lcall
sti
loopne
cli
adc
cmp
sub
add
lcall
iret
xchg
xchg
into
loop
add
dec
jp
push
pop
inc
lahf
add
xchg
jnp
and
jnp
out
mov
outsb
scas
xchg
dec
rcr
cmpb
imul
mov
movsl
aad
or
test
or
cs
push
rorb
imul
jle
int
imul
inc
jle
mov
kmovw
arpl
lahf
call
aam
popf
sbb
jle
push
fwait
pop
sahf
jg
push
sti
mov
pop
inc
push
mov
push
lds
lea
addr16
call
push
dec
push
insl
fildl
je
inc
insb
push
rorl
cmp
call
iret
lods
fdivrl
push
out
je
sbb
idiv
and
push
imul
sti
push
add
mov
mov
gs
jb
and
es
pop
loope
rclb
cmpsb
pop
push
mov
sbb
lcall
lods
out
aam
add
mov
js
cmp
into
xor
aas
add
ficomps
aas
mov
shrl
outsl
fisttpl
in
out
fldcw
xchg
in
pop
push
ss
call
adc
sahf
cmp
xor
mov
inc
mov
cmpsl
xchg
in
adc
sbb
push
mov
outsl
js
icebp
fistl
mov
dec
or
push
daa
push
rolb
call
rorb
jmp
test
dec
push
lahf
mov
inc
add
adc
dec
and
insl
icebp
xchg
jno
inc
xor
xlat
fidivrs
aam
fistps
sahf
add
data16
push
adc
jp
and
cmp
lea
add
loope
jb
jnp
push
or
or
xchg
mov
mov
mov
ret
and
in
push
pop
jnp
mov
mov
int
pop
scas
lcall
dec
ret
std
mov
orb
sub
or
in
mov
xchg
dec
loopne
test
xor
arpl
mov
test
ds
dec
add
ja
shll
mov
xorl
dec
jb
cmp
xchg
mov
sbb
ja
push
push
lret
cs
inc
out
cmpb
push
jne
mov
stos
or
xchg
and
addr16
mov
mov
jo
pop
cmpsb
push
out
ret
pop
inc
push
or
push
lock
pop
mov
movsb
jno
xor
das
ret
xchg
ret
test
mov
pop
cmc
int3
mov
mov
sbb
or
sbb
movsb
test
fwait
scas
fs
add
test
pop
addr16
test
iret
mov
and
mov
cltd
cmc
icebp
mov
lods
rorl
xchg
imul
mov
loopne
rcrb
xor
push
pushf
div
iret
rclb
jns
aam
or
imul
cmpsb
icebp
cmc
pop
mov
in
lea
push
daa
or
push
pop
cld
adc
xchg
push
aas
outsl
cs
dec
andb
loopne
arpl
mov
fstpt
xchg
or
mov
xlat
and
jmp
fldl
in
mov
negb
fldcw
inc
dec
dec
sbb
fiadds
sarl
mov
out
mov
xor
pop
xbegin
xor
mov
in
mov
stos
ss
nop
dec
fcmove
outsb
loop
testb
or
add
xchg
push
push
adc
js
aad
adc
xchg
movsl
out
xor
cld
and
pop
xchg
shlb
pop
pusha
and
mov
icebp
in
fldlg2
fnstenv
call
rcr
or
lcall
jl
mov
pop
ja
pusha
xchg
cltd
or
or
adc
jmp
mov
sub
ljmp
repnz
jae
imul
dec
lods
sub
push
cmp
mov
ficoms
jle
rcrb
das
and
ret
sbb
nop
mov
jb
popf
or
pop
outsl
arpl
pop
cmp
and
mov
mov
fidivl
cmpsb
mov
inc
ljmp
outsb
xchg
jns
pop
in
ss
jbe
cld
inc
negl
sbb
ja
xchg
das
iret
inc
movsl
out
stos
or
lods
push
pop
std
dec
push
mov
jge
stc
lahf
cmpsb
jg
push
push
movsl
push
ljmp
popf
pop
or
xor
int3
lock
push
movsl
or
ds
stos
fdivrl
iret
mov
cmp
rol
clc
fstpl
mov
xchg
push
push
aas
inc
pushf
dec
ror
cld
pop
xor
cmp
sub
popa
and
int3
and
leave
sbb
out
sub
jp
out
pop
int3
adc
test
inc
popf
les
xor
cmp
nop
mov
dec
ret
push
add
xor
push
inc
lods
xchg
mov
xchg
xor
sbb
cmp
xor
cmpsb
mov
stc
dec
hlt
pop
lret
outsl
je
or
pop
push
push
movsl
sbb
inc
pop
outsb
pop
jmp
inc
adc
inc
in
mov
dec
push
in
cmp
inc
fsubr
add
push
adc
sti
repnz
adc
popf
jmp
dec
aam
cmpsb
pop
wbinvd
xchg
cmpsb
jno
loope
push
inc
push
popf
mov
mov
adcb
das
xchg
inc
sbb
jg
int
dec
dec
iret
mov
loop
fmuls
lods
jmp
adc
sub
pop
xchg
sbb
jno,pn
std
mov
test
xor
repz
pop
fisubl
hlt
int
pop
jb
insb
dec
dec
push
and
add
popl
push
iret
jns
cmp
push
mov
int3
inc
jp
scas
mov
mov
jmp
cmpsb
cmp
aam
fs
test
xchg
enter
fadds
negl
sbb
push
jnp
lea
or
lret
ret
pop
test
dec
cmp
loop
inc
sti
in
hlt
pop
inc
imul
iret
mov
and
mov
sub
imul
cli
jno
fisubs
sti
test
jmp
loop
dec
mov
xor
jg
adc
xor
sahf
cmpl
popa
cli
or
mov
add
push
or
jmp
push
jnp
repnz
insl
sub
mov
aad
jne
pop
aaa
pop
add
int
cld
cld
jmp
pop
sbb
xchg
and
pop
shrb
or
into
push
cmp
lret
adc
sbb
dec
out
jb
lds
mov
lahf
iret
xor
scas
lock
jno
xchg
sbbb
push
add
xchg
lahf
popf
pop
out
cmp
xor
adc
nop
pop
xor
mov
inc
repz
dec
sub
xor
lds
jo
mov
mov
and
aas
out
pop
adc
sbb
xorl
mov
data16
jne
mov
cmp
sub
or
sub
mov
test
std
sti
jb
popa
fstp
cld
jmp
inc
pop
cmp
add
mov
push
jecxz
dec
xor
jns
mov
add
rclb
ss
xchg
xchg
hlt
stos
adc
cmc
add
push
cs
je
push
and
adc
jl
into
push
test
xchg
ds
add
add
test
lret
loop
mov
pop
lock
sbb
loope
dec
mov
rclb
add
mov
jb
inc
push
and
jg
lods
scas
insb
add
shl
ss
push
sbb
enter
daa
loopne
int
aad
mov
faddl
xchg
je
aas
pushf
cmpsb
pop
data16
inc
xor
pushf
sub
cmp
xor
jbe
das
cltd
or
mov
sbb
sub
sbb
mov
popa
addr16
ret
fimuls
rclb
fildl
ror
adc
test
xor
mov
repz
pop
std
mov
jne
repz
xchg
jne
inc
cmp
les
or
jo
add
xor
cmc
sahf
loope
popa
mov
call
and
gs
push
pop
lret
add
cmpsl
aam
pop
sbb
out
inc
aad
jne
mov
or
dec
add
jmp
int
xchg
clc
dec
fldenv
mov
inc
pop
outsl
pop
push
push
fst
pop
cli
in
jns
inc
sysexit
cmp
adc
jo
aaa
sub
pop
mov
lahf
enter
or
dec
in
das
fisubl
push
test
aad
and
mov
aam
mov
out
mov
pushf
pop
sbb
outsb
pushf
fistps
fsubl
sub
loop
and
or
fldt
lret
push
hlt
bound
mov
into
or
adc
lock
fcompl
or
bound
push
pop
xchg
test
mov
or
sbb
test
adc
lds
mov
icebp
imul
rclb
jne
ret
inc
or
mov
pop
xor
leave
pop
outsb
adc
xchg
lret
xor
movsb
mov
lret
adc
mov
pop
xchg
push
nop
fstl
repnz
push
jge
lcall
pop
lcall
pop
mov
sbbb
cwtl
jle
xchg
dec
shl
cmc
sbb
pop
mov
fdivrs
mov
pop
aaa
sub
xchg
sub
dec
ljmp
cld
push
mov
and
fdivl
mov
mov
std
cs
push
xor
je
rcll
pop
adc
in
mov
pop
or
outsb
imul
xor
adcb
int
jp
ss
inc
adc
imulb
push
lahf
push
sti
sti
cli
sbb
inc
adc
movsl
cwtl
int3
and
adc
push
push
or
mov
sbb
adc
xchg
popa
xlat
adc
sub
lret
imul
lods
push
inc
jecxz
movsb
orl
lock
lock
call
shl
enter
add
ret
cmp
ds
outsb
adc
cmp
pcmpeqb
and
push
and
push
add
hlt
adcb
rcll
popa
mov
fistl
aas
fcomps
popf
sub
call
jmp
jae
inc
jl
in
jo
and
stc
mov
rcll
loopne
pop
ror
sbb
insb
dec
mov
es
stc
jle
pop
popf
pop
xchg
push
mov
cmp
int3
mov
fldpi
lods
imul
sahf
mov
sub
and
ficomps
subb
add
dec
cmp
xchg
sbb
xchg
mov
fsubl
jmp
psrlw
or
xor
test
fs
mov
ss
xchg
pop
inc
rclb
dec
inc
inc
enter
add
gs
in
shl
lahf
mulb
subb
out
cs
test
iret
cmp
mov
adc
mov
xchg
test
jle
loopne
mov
lret
ja
pusha
sub
fistl
scas
cmp
mov
bsf
jo
pop
stc
inc
dec
sti
int
adc
shll
leave
cltd
xorb
repz
iret
xor
inc
xchg
test
mov
pop
sbb
jg
aaa
xchg
arpl
and
lock
xor
inc
arpl
mov
arpl
nop
stc
ficoml
jp
cmp
push
stc
inc
gs
pop
fmul
das
iret
test
cmp
inc
imul
pop
pop
jle
in
rol
rclb
pop
inc
mov
ja
mov
pop
xchg
roll
sbb
test
std
out
sub
pop
jle
cs
cmc
ja
pop
or
sbbb
push
cmpl
cld
xlat
ret
mov
addr16
cmp
hlt
popf
sbb
stc
xor
sbb
add
xchg
fdivs
stc
push
movsl
ds
movsl
xchg
or
or
cmp
ljmp
push
enter
scas
or
xchg
repz
dec
xchg
mov
sbb
insl
push
aad
ljmp
or
xchg
add
add
jnp
xor
pop
pop
add
addr16
sbb
jle
loop
add
popf
pop
and
cmp
pop
adc
dec
xor
dec
enter
sbb
pop
jp
lret
pop
jp
cmpsl
loope
in
xchg
aam
sti
jb
fimull
test
frstor
aaa
mov
sbb
jp
cmp
xor
xor
les
sub
push
loope
mov
xlat
fildl
lcall
push
and
xor
jg
popf
dec
test
into
inc
mov
jns
pop
add
add
pop
fs
aad
icebp
mov
sti
iret
pushf
or
push
cmpsl
push
cmp
pop
inc
ja
jge
xchg
sbb
inc
jne
sbb
arpl
loope
scas
pop
jl
insl
jne
jmp
lret
inc
add
into
cmpsb
inc
mov
lods
data16
movl
mov
xchg
sti
std
sub
lock
mov
cmp
mov
stc
shll
push
sti
sbb
roll
movsl
popf
push
dec
push
mov
stos
aas
stos
mov
mov
and
adc
dec
lods
cmpsl
idiv
fidivl
adc
ss
push
outsl
fcmovb
lcall
cwtl
leave
and
test
lahf
rolb
jo
cmpsl
mov
mov
fcmovbe
int
mov
dec
rcrb
dec
xchg
mov
sahf
mov
or
sub
jg
xchg
mov
lods
daa
shlb
xchg
cli
pop
in
and
jb
int
rorb
xor
cmpsb
in
aad
jae
out
fisttpll
popf
aaa
sbb
das
cmp
fiaddl
pop
inc
jns
mov
nop
lea
icebp
xchg
jno
dec
add
pop
inc
repnz
sub
xorb
jecxz
xor
push
and
aam
rcrb
adc
fadds
jmp
sbb
inc
and
je
jl
shrb
xor
out
aad
xchg
stc
mov
mov
sti
mov
mov
adc
decb
and
aad
fs
aam
jle
inc
dec
js
ds
jmp
lahf
loop
stc
data16
and
or
add
stos
and
popa
adc
pushl
adc
dec
sub
ret
dec
jb
pop
or
inc
add
ficoml
popw
xor
stos
fdivl
add
mov
mov
cld
out
or
xchg
repnz
pop
cmpsl
pop
outsl
jecxz
mov
and
push
push
and
xchg
fsubr
add
inc
mov
fwait
cmp
adc
xor
xchg
mov
mov
jae
lods
jns
pop
sub
stc
xchg
dec
cltd
jbe
adc
fnsetpm(287
mov
cmc
fisubl
inc
scas
aam
ss
adc
shlb
xlat
fistpll
mov
fcomip
or
ja
xor
push
aas
scas
add
addl
inc
daa
push
out
jl
fldl
xor
inc
mov
and
aad
cbtw
cltd
and
adc
adcl
int3
lds
int3
mov
movsb
test
into
pop
mov
mov
cwtl
sarb
adc
ret
xor
idiv
andl
mov
mov
xor
orl
cld
mov
jecxz
les
inc
shlb
push
lds
into
sbb
clc
mov
dec
or
add
mov
out
jg
fistpll
inc
sbb
in
dec
adc
divl
loopne
out
jg
mov
xchg
mov
gs
les
lret
xchg
mov
mov
cmp
mov
lods
add
cltd
cmpsb
sahf
cmpsl
int3
psllq
mov
stc
push
pop
jbe
cmpsl
fcomi
add
cld
push
out
inc
iret
imul
outsb
adc
sbb
je
les
test
jle
shr
mov
pop
jbe
mov
fcmovb
mov
push
dec
pop
loop
mov
or
ror
cmp
pop
jmp
dec
cmpsb
or
addr16
pop
jmp
jne
sahf
incl
bound
imul
push
orb
sbb
jno
mov
jns
mov
jns
in
add
gs
mov
inc
sbb
imull
ret
shrb
aad
je
pop
add
fimuls
inc
imul
das
mov
sbb
es
mov
mov
and
jno
jle
mov
xor
inc
cmpsb
sub
inc
jl
dec
aaa
fistpl
and
shll
dec
je
adc
xor
jl
aad
sbb
stos
shrl
sub
fmuls
and
adc
mov
bnd
movsl
add
mov
outsb
lds
xchg
fwait
ret
dec
mov
aaa
sub
push
inc
test
sti
lods
xchg
rolb
mov
stc
xchg
xor
jo
jl
sbb
je
popa
test
in
xchg
fcmove
enter
decb
jbe
jbe
sub
insl
sahf
lret
push
adc
adc
or
sub
mov
push
push
cli
leave
lahf
jge
sub
lods
jbe
jmp
test
push
shll
xor
cwtl
int
and
daa
pop
test
dec
stos
loope
je
pop
out
lret
lods
imul
pop
sbb
pop
and
or
mov
mov
sbb
shlb
or
push
repnz
jp
push
cltd
inc
aaa
cmp
sbb
enter
push
mov
mov
pop
push
xchg
clc
mov
imul
jo
mov
fbstp
add
nop
push
or
in
adc
outsb
bound
fsubs
xchg
add
mov
dec
and
popa
iret
cmpsl
clc
pop
sub
bnd
mov
fwait
mov
pop
sbb
movb
scas
mov
loopne
movsb
sub
movsl
xchg
add
mov
jno
mov
xchg
int3
pop
mov
lret
sub
push
and
in
movsl
add
push
loope
sbb
aad
testb
cmpb
in
sub
arpl
repz
out
std
aam
aas
das
enter
jbe
test
and
add
cwtl
push
and
pop
mov
cld
in
repz
notl
fs
sti
push
pop
lea
daa
xor
sub
push
xor
movsl
pop
shrl
aad
or
add
ds
pmaddwd
aam
shlb
xor
fdivrl
sbb
pop
mov
icebp
inc
es
ljmp
test
call
jp
mov
cmp
in
mov
push
cmpsb
inc
inc
mov
jb
in
leave
je
ss
sti
jno
das
xchg
mov
xchg
jecxz
je
xorb
gs
jb
iret
xchg
out
js
popa
lea
mov
gs
push
nop
jl
pop
xor
hlt
xchg
repz
push
lcall
mov
pop
or
stc
insl
sbb
mov
les
cld
add
jmp
adc
inc
mov
js
aam
mov
and
outsl
or
inc
repnz
dec
shrb
lock
push
jg
jae
inc
cmp
dec
mov
mov
or
mov
push
add
mov
stos
shrl
pushf
imul
mov
insl
ret
pop
xchg
or
and
test
loop
in
nop
sub
fmul
xchg
dec
pop
sub
sub
push
out
movsb
outsb
xchg
mov
leave
jae
cmp
push
adc
out
cpuid
push
sbb
shll
push
mov
loopne
scas
leave
add
cmpb
xchg
lds
lahf
imul
inc
fstpt
mov
into
add
cli
ljmp
loope
int3
dec
test
jnp
lods
fidivl
pusha
in
shlb
sbb
add
adc
sbb
sbb
lret
into
enter
mov
add
in
cmpsb
outsb
rcr
fcomi
test
or
xor
mov
fldenv
lret
orl
faddp
int3
push
sarb
imul
dec
stos
aaa
std
sarb
pop
iret
push
mov
addr16
add
int3
push
push
mov
mov
les
cmpsl
pusha
jne
test
imul
pop
adc
or
mov
pop
adc
imul
vphaddudq
js
dec
push
sub
xrelease
je
add
sbb
and
push
sub
outsl
and
mov
fstpl
popa
es
xchg
mov
aas
sti
mov
out
jb
push
rcl
xor
or
xchg
arpl
mov
aaa
or
xor
or
sbb
aam
jae
adc
push
pop
mov
mov
repz
mov
shl
in
out
mov
mov
dec
pushf
sbb
sub
jb
pop
xchg
dec
ljmp
add
popf
ljmp
ljmp
ljmp
add
jl
pop
adc
push
mov
jmp
sti
imul
sbb
popa
cmp
adc
jbe
ljmp
ljmp
push
cmp
mov
imul
jnp
pushf
push
jb
lds
push
fcmovu
inc
cvtpi2ps
add
daa
sti
push
loopne
call
lds
sbb
dec
sub
or
mov
es
stos
xchg
test
inc
or
push
or
faddl
insb
inc
iret
das
adc
sub
outsb
arpl
scas
or
push
push
loopne
adc
xchg
push
and
cmp
adc
out
xor
mov
pushf
sub
js
lods
aam
cli
dec
iret
mov
pushf
push
xchg
adc
idiv
out
push
leave
mov
sti
inc
xchg
or
adc
mov
dec
cmpsl
mov
jo
cli
xor
mov
and
xor
lds
je
add
lds
xchg
xchg
mov
mov
push
mov
inc
xor
dec
outsb
dec
lea
subb
fsub
dec
pop
or
outsl
mov
bound
insb
pop
mov
sbb
in
cmpl
enter
dec
mov
or
or
call
ret
andl
loope
push
vandps
loop
inc
dec
xchg
jae
int3
jne
out
jns
ss
imul
imul
cwtl
ret
popa
mov
leave
push
jl
leave
mov
stos
shlb
cmpl
or
xchg
jge
add
fnstsw
andb
shll
mov
mov
movsl
loopne
pop
jo
out
je
or
sbb
adc
test
or
test
lods
faddl
lods
mov
lret
sub
jo
xchg
lcall
fwait
dec
andl
and
jmp
in
or
xor
mov
call
pop
xchg
xchg
test
jg
pop
clc
outsl
in
push
out
xchg
sbb
pop
inc
add
pop
adc
or
lret
fsubrp
sub
jp
movsl
xor
dec
pop
adc
sbb
lcall
out
pushf
adc
xor
jl
and
sbb
lea
push
dec
jnp
add
cs
dec
add
xchg
test
xchg
fmull
jnp
xchg
dec
adc
and
fisttps
push
dec
or
imul
js
cwtl
mov
cli
fwait
lahf
popf
pusha
add
xchg
aam
hlt
mov
xor
shl
xchg
lahf
sarl
xchg
mov
push
inc
mov
popa
cs
mov
fnstcw
sysenter
inc
xor
loope
sub
jle
xchg
test
push
jg
call
shr
std
pop
cmpsl
jp
hlt
cmp
cli
push
js
mov
mov
dec
push
repnz
xchg
jae
and
mov
cmp
pop
mov
scas
xor
sbb
inc
adc
push
in
mov
dec
call
xor
into
aas
adc
sub
sbb
in
dec
int3
popa
aad
ss
call
in
decb
jo
adc
inc
push
stc
sub
cmp
adc
inc
inc
adc
mov
xchg
faddl
aas
insl
lret
pushf
fsubr
ss
xor
pusha
cmpl
fisubs
jg
bound
pop
std
xchg
fsubl
rcr
arpl
adc
loop
lods
fidivs
xchg
es
shl
adc
add
rcll
jecxz
int
cmpsb
insb
xor
jmp
ds
shlb
jmp
mov
jg
push
mov
xchg
gs
out
gs
fisubrl
movsl
in
push
xchg
dec
cmp
ds
scas
mov
lods
cmc
arpl
pop
xor
js
mov
sbb
mov
or
mov
inc
into
lret
add
mov
cmpsl
addr16
int
inc
hlt
jns
push
add
pusha
es
inc
cwtl
aaa
aam
cmpsl
cltd
sbb
negb
test
xlat
cmovne
xchg
imul
sbb
in
in
bound
add
arpl
mov
sub
lock
aaa
lret
cmpl
cmpb
push
lock
inc
sub
pop
jbe
jne
push
cmpsb
mov
dec
pop
pop
jmp
lock
push
push
imul
ds
mov
ja
popf
je
dec
por
fisubl
sbbb
in
pop
or
push
pop
int3
dec
daa
lods
andb
insb
dec
pusha
mov
sbb
dec
call
and
jp
mov
xchg
enter
enter
push
dec
pop
push
arpl
jnp
cmp
xchg
out
cmc
sub
shl
dec
pop
rcrb
cmp
rcll
je
xchg
cmc
test
getsec
cmp
and
jno
fiaddl
stos
insl
fimull
test
notb
lcall
scas
cld
jae
mov
inc
xor
popa
inc
sub
pop
mov
xchg
dec
rorl
push
in
push
mov
lret
negb
call
push
add
mov
inc
push
and
dec
lds
sti
les
adc
jb
clc
inc
repnz
mov
xor
sar
popa
mov
sti
adc
js
jo
or
hlt
sub
repz
aam
push
jnp
repz
xchg
sbb
daa
push
xlat
rcrl
push
test
dec
jmp
lods
shll
jo
jne
int3
dec
and
xlat
cwtl
test
mov
jmp
cmp
push
cmpsb
sahf
js
inc
mov
shll
mov
fbld
pop
aad
adc
inc
adc
lock
popl
js
xor
nop
shlb
push
cltd
ja
jo
mov
ljmp
cvttps2pi
cwtl
nop
lcall
pop
xlat
mov
adc
sub
push
in
sub
dec
push
jmp
sub
es
push
or
mov
jbe
test
dec
mov
insb
xlat
dec
add
jae
mov
cmp
cmp
inc
sub
scas
jl
dec
nop
sbb
stos
push
cmpb
add
push
xor
mov
push
lret
jmp
in
jnp
mov
cmp
mov
gs
jnp
test
lods
fdiv
and
lods
arpl
addr16
pinsrw
or
test
inc
ss
pop
inc
dec
test
fwait
sub
and
pushf
inc
shll
dec
inc
ljmp
fildll
imul
pushw
push
pop
rcrb
call
cmc
cli
pop
push
xchg
xchg
pushf
inc
adc
ljmp
fwait
mov
push
sbb
inc
je
mov
push
into
pop
mov
sub
ja
lods
sbb
test
loopne
jbe
testl
adc
nop
push
sti
mov
mov
gs
loope
flds
in
or
dec
out
pop
xor
jb
cmp
imul
cmp
jge
mov
jne
fisubrs
cmc
mov
lods
sub
push
es
rolb
push
mov
sub
xor
push
nop
repz
daa
leave
cmp
sub
adc
mov
or
jg
adc
mov
adc
popf
jbe
add
ror
or
mov
fbstp
adc
les
cmp
push
xor
jbe
rorb
movsl
lcall
cwtl
mov
std
ftst
xor
rol
sar
test
rorb
add
insb
add
sbb
call
mov
sub
sub
mov
scas
stos
popf
fcmovnbe
jecxz
je
pop
loope
pusha
lcall
into
test
movsb
enter
cmp
pop
lock
dec
mov
shl
xchg
gs
add
xchg
dec
int
ret
pop
mov
mov
daa
insb
cli
scas
ret
aam
mov
sbb
mov
enter
or
addr16
mov
fadds
mov
xor
or
xchg
pop
pop
ror
xor
xor
mov
scas
popa
cmpsl
mov
bnd
mov
lds
fmul
inc
push
aaa
lret
sbb
sbb
push
jmp
bts
lock
js
jl
cld
jb
ret
lret
or
std
lods
int3
data16
sub
sbbb
popa
lods
sub
jbe
neg
jne
jecxz
xchg
inc
and
push
jp
pop
push
dec
or
sarl
in
inc
aam
cmp
xor
add
inc
jmp
dec
pop
cmpsl
lock
mov
cld
pop
aaa
ds
add
xchg
or
xor
mov
int3
sti
xchg
cwtl
pop
sbb
push
popf
push
cmp
xorl
mov
mov
fs
into
std
jb
iret
stos
stc
testl
fld
stos
mov
push
fs
adc
sbb
insl
cwtl
out
dec
jo
lahf
inc
test
incb
add
mov
mov
loopne
cmpsb
or
jmp
out
popf
fstl
test
movsb
jl
push
jno
sbb
add
mov
lods
bound
pop
out
das
mov
add
push
cwtl
jp
sahf
jp
hlt
in
gs
cmpsl
dec
sti
fs
fwait
and
push
jbe
mov
mov
jmp
mov
push
mov
cmc
mov
out
jecxz
fisubrs
int
sbb
pop
test
repz
cmp
pushl
lock
inc
mov
out
push
nop
ret
mov
cli
pop
test
or
mov
test
test
add
nop
adc
inc
push
adc
mov
shll
aad
mov
pop
js
iret
insl
sbb
call
outsl
pushf
scas
enter
push
popa
cwtl
sti
mov
lds
sub
inc
imul
push
push
push
jb
dec
in
call
add
and
mov
xor
cli
lds
add
sub
xchg
hlt
cld
mov
mov
in
cltd
test
xchg
lret
mov
outsb
aas
pop
ljmp
inc
cwtl
in
xor
mov
in
scas
out
sbb
pop
repnz
mov
mov
out
lock
cwtl
dec
icebp
mov
sbb
dec
into
pop
push
jns
push
cmp
jno
aas
lods
cmp
in
bnd
call
cmp
mov
outsb
in
insl
je
fbstp
fwait
pop
lods
arpl
xlat
or
gs
xchg
adc
pop
add
pop
push
lods
fnsave
inc
ja
inc
xchg
sbb
int3
jnp
cmp
mov
flds
rcll
fs
aas
push
in
stc
xcrypt-ofb
cmpsl
jmp
sub
in
pop
mov
add
fxch
sub
mov
xchg
aaa
in
or
mov
faddl
leave
xor
iret
dec
jne
test
mov
inc
lds
mov
jge
leave
fs
pop
xor
das
mov
jno
lcall
popf
dec
out
rcrb
xchg
mov
xor
out
mov
xchg
cwtl
mov
mov
dec
iret
add
xor
pop
leave
mov
ja
cmp
lahf
into
outsl
stos
and
xchg
dec
pop
add
push
out
and
pop
xor
shrl
jl
mov
and
movsl
xchg
sub
xchg
adcb
rol
sbbl
adc
daa
xchg
addr16
aam
dec
push
lcall
out
lock
add
in
mov
mov
inc
movsb
mov
mov
mov
jecxz
into
mov
outsb
mov
pop
push
aam
fwait
ja
xor
fwait
xchg
icebp
lds
or
cmpsb
inc
jge
xchg
sbb
cltd
icebp
mov
cmp
stos
mov
and
imul
shrl
push
xor
aas
fimuls
adc
jmp
push
mov
push
ljmp
iret
stos
cwtl
pop
scas
pushl
push
push
ret
mov
ret
scas
lcall
mov
cmp
xor
push
add
sub
sub
scas
pop
xor
ljmp
test
int
ss
daa
lcall
mov
into
add
pop
sub
xchg
mov
ret
jle
loopne
idivl
dec
dec
mov
sub
jae
pop
cmp
sbb
sub
js
adc
cmpsb
scas
xchg
mov
ret
ja
aam
outsb
sbb
scas
mov
sub
xor
push
cmpsl
into
andl
cmp
fucomp
add
mov
out
push
or
xchg
int3
sub
out
out
aas
nop
mov
int
jp
enter
mov
mov
rolb
enter
push
cmp
push
dec
dec
cmp
test
stc
and
mov
mov
ficompl
movsb
sbb
inc
sub
xor
test
in
mov
sbb
sub
ret
addr16
sbb
jno
dec
sbb
loope
shl
xchg
inc
push
mov
enter
rcrb
or
or
inc
imul
leave
and
ffree
imul
test
outsl
sbb
leave
cli
in
and
enter
shl
lods
dec
fisttpll
scas
and
aas
ficoml
imul
std
mov
pop
mov
inc
int3
call
bnd
scas
jo
sbb
subb
les
call
test
sbb
out
push
inc
push
aas
xchg
addl
enter
pushf
rclb
cmp
jecxz
inc
movsb
int3
aas
subl
pop
push
xor
in
imul
insb
andb
rolb
xchg
jae
in
cmpsl
cmc
xchg
mov
cmc
adc
in
lds
push
test
jbe
inc
add
xor
fs
lahf
mov
push
popf
fldcw
ja
scas
xchg
movsl
mov
popf
std
orb
loop
cmovp
arpl
cld
sbb
inc
ljmp
out
sub
iret
mov
test
aas
lods
inc
cld
in
mov
das
rcll
aam
stos
mov
gs
es
or
push
setb
aad
mov
push
shrl
jns
cmpxchg
xchg
stos
data16
mov
pop
push
push
pop
pusha
inc
sub
add
rorl
bt
cmp
test
dec
nop
add
or
jb
add
push
pop
pop
fstl
pop
stos
cmp
pop
cltd
imul
add
mov
ljmp
push
or
and
shlb
jno
push
xchg
gs
xor
mov
push
cmp
add
fldcw
cmp
sub
dec
adc
cmp
jbe
add
or
xlat
stos
fidivrl
mov
stos
xor
out
add
sub
mov
testl
testl
mov
fwait
push
pop
mov
loope
cmpsl
jne
lock
enter
xchg
mov
lcall
aad
dec
sbb
jne
jecxz
scas
sbb
loope
mov
jns
test
sub
inc
test
jp
xor
pop
sbb
xchg
test
jmp
popl
push
enter
adcl
gs
push
inc
jne
lods
xchg
notl
in
stos
fsubl
cld
fwait
dec
push
jb
movsl
sbb
adc
sbb
jnp
pop
gs
repnz
mov
dec
je
jns
sub
add
sbb
aad
movsb
shrb
insl
mov
popf
fs
pop
ret
lret
mov
ds
xchg
ret
mov
inc
pop
mov
notl
loopne
jp
movsl
cmp
pushf
fistpl
in
and
dec
mov
test
fsubr
xlat
mov
loop
xorb
sub
hlt
pushf
fidivrl
cmp
clc
jecxz
mov
inc
sti
xor
fs
jns
sub
sbb
cwtl
sbb
fsts
leave
or
gs
add
xchg
xchg
add
mov
aad
pushf
xorb
pop
sbb
sub
push
ljmp
repz
icebp
out
add
inc
gs
xchg
lret
lds
or
sbb
xchg
or
lea
jne
inc
push
rorb
dec
cmp
fdivp
test
add
pop
imul
mov
xchg
arpl
xchg
xchg
jne
fistpl
push
out
test
and
pop
cltd
movsb
mov
rcl
ss
xchg
int3
mov
out
fdivr
and
sbb
jo
sub
or
cld
ds
jmp
jge
adc
orb
je
push
notl
and
jecxz
add
aam
xor
mov
add
cwtl
dec
out
in
test
or
sub
dec
orb
lds
adc
add
pop
mov
push
jl
pop
add
pop
sbb
xor
jns
push
test
jo
jge
lahf
enter
mov
mov
xor
and
and
lret
cmp
sahf
mov
les
and
mov
cmp
cmp
adc
lea
xchg
sub
loope
cmp
cs
add
fldcw
cs
notb
stc
aaa
lock
out
adc
or
ss
xchg
sub
push
adc
or
scas
mov
push
cmpsb
sar
call
aaa
adcb
add
dec
fwait
out
xchg
int
je
iret
jp
in
mov
jl
mov
xor
adc
nop
adc
mov
pusha
roll
jl
mov
and
sahf
out
push
xor
cmc
cmpsb
inc
cmp
jo
xor
jns
fprem1
test
sub
sbb
testb
divb
mov
jg
fiadds
sbb
cld
cmpsl
pop
loope
xor
mov
imul
jne
stc
jns
aad
mov
adc
andl
jmp
push
insl
stos
imul
sbb
popa
or
push
pop
movsl
cld
add
xor
sbb
and
sbb
add
nop
shl
in
cmp
pop
push
and
adc
stc
stc
pop
adc
lds
in
or
test
cmp
les
mov
std
in
push
jmp
xchg
test
and
jmp
pushf
push
sub
rorb
jecxz
push
cli
sub
data16
and
push
insb
push
cwtl
push
sub
shll
jle
xchg
inc
inc
ret
xchg
psubsw
sahf
aas
std
dec
mov
mov
mov
mov
xor
test
clc
adc
ljmp
push
jne
jecxz
xor
cmp
push
pop
xchg
fwait
pop
push
dec
dec
lcall
test
js
ficoms
push
stc
add
fadds
dec
mov
sbb
rolb
mov
lea
lret
cli
xchg
jno
jno
aam
mov
mov
test
out
push
call
mov
dec
daa
shl
jmp
or
daa
xchg
jne
imul
arpl
pop
js
stc
popf
lds
stc
imulb
jmp
xchg
ror
jle
loop
jns
xchg
or
int
jg
adc
test
cmp
mov
sub
push
stos
jl
decb
sub
out
imul
insb
xchg
movb
xchg
push
into
add
add
cltd
push
inc
pop
xchg
repz
mov
push
aas
inc
and
lret
inc
cmp
outsb
int
mov
sbb
mov
xor
inc
rorl
mov
mov
pop
mov
xor
xlat
adc
inc
cmp
leave
xlat
in
ret
xlat
sub
imul
mov
push
fdivp
xorb
mov
into
sbb
sbb
movsb
mov
cmpsl
xor
push
adc
xchg
add
lcall
add
xor
inc
push
clc
fstpt
outsl
push
adcb
popa
cli
lcall
push
popf
mov
pushf
call
clc
out
mov
add
xchg
sbbl
test
ret
xor
in
sarl
imul
lds
test
sbb
jo
repnz
stc
in
push
mov
inc
pop
lahf
inc
outsb
rorl
jb
and
push
add
movsl
imul
lods
flds
mov
ret
test
lea
out
xchg
pushf
repz
cld
mov
cmp
push
sbb
fidivrl
xchg
cmpsl
and
test
stos
fsubl
fidivrs
mov
loop
fldl2e
iret
sub
popf
js
mov
mov
aaa
jmp
lock
inc
add
in
push
push
mov
outsb
out
jnp
lcall
sbb
push
loope
outsl
or
jo
pop
aam
addr16
cmp
movsb
inc
and
add
fstp
lock
fld
mov
jne
fcomi
shr
xor
dec
and
jge
dec
push
cli
subb
jge
lods
loope
inc
push
fmuls
push
pop
and
rclb
adc
pop
mov
fs
and
mov
mov
jno
loope
adc
pusha
pop
cmpsb
cmpsl
ret
jns
mov
xor
dec
js
idivl
rcrb
sub
and
push
sub
xor
gs
fnstsw
mov
push
arpl
inc
sbb
push
les
xor
or
xchg
mov
jnp
mov
dec
js
inc
addr16
leave
pop
data16
pop
jp
sbb
stos
cmpsb
stc
inc
std
cwtl
test
add
test
ljmp
test
xlat
lret
insb
lock
xchg
mov
and
inc
push
mov
addr16
adc
pop
ret
dec
xchg
mov
mov
push
in
inc
pop
lods
jnp
jg
jb
add
inc
lds
insb
jecxz
sahf
lahf
insb
cltd
pop
sub
stc
mov
adc
inc
xor
mov
mov
into
stos
out
ss
cmp
loope
pop
lahf
mov
notb
mov
xor
rclb
lds
adc
popa
arpl
aad
pop
or
les
xlat
jns
es
adc
add
stos
cmpsl
cli
xlat
stos
xor
inc
xchg
push
sbb
jle
or
ret
mov
out
movsl
mov
imul
popf
dec
je
dec
cwtl
pop
daa
addl
movsl
jmp
xchg
mov
and
dec
xchg
xor
fdiv
insb
mov
xchg
or
in
jnp
add
lods
push
sbbb
and
das
aas
jg
fcompl
int3
mov
sbb
in
dec
xchg
or
push
and
cmp
push
pop
mov
xchg
lds
mov
mov
lret
cs
and
dec
sbb
shr
mov
push
sahf
setne
or
cmpsl
test
sbbl
out
xchg
mov
lods
fucomip
sub
mov
inc
sbb
in
lret
subb
lods
insb
and
mov
cmc
sub
dec
cmp
cmp
pop
cmp
inc
pushf
mov
inc
out
mov
cltd
jp
adc
and
out
xlat
int
and
jns
jle
dec
xchg
inc
ja
and
sar
cmpsb
cmp
mov
std
dec
sarl
xadd
fidivl
loope
cld
jne
mov
dec
enter
idivb
clc
dec
idivb
jae
out
cmp
dec
cmpb
scas
add
cmp
test
roll
icebp
in
jne
stos
xchg
sub
sbb
cli
adc
xor
xchg
mov
mov
je
mov
lret
aam
sub
cmp
popf
adc
in
and
out
mov
or
inc
fs
out
pop
adc
add
loopne
inc
add
pusha
cmp
add
clc
mov
pop
mov
stc
imull
imul
or
lahf
lock
push
outsb
jbe
dec
fisubl
mov
ret
sti
pop
imul
jo
out
popw
jg
cltd
adcb
loope
and
sbb
sub
out
je
jb
inc
push
xlat
stos
lods
or
mov
mov
es
cmp
aas
scas
test
leave
enter
sbb
addb
xor
cmovns
jl
test
ss
pop
fisttps
aaa
cmp
jns
enter
xlat
movsl
es
lret
xlat
test
push
jecxz
sbb
sub
mov
fwait
dec
mov
insb
sbb
and
mov
mov
int
fdiv
arpl
or
in
cmp
cmp
sbb
cs
mov
sub
jg
jno
int3
pop
pop
mov
ss
mov
mov
movsl
test
bound
mov
push
add
fxch
in
rorb
je
stc
mov
dec
shlb
enter
lds
pop
cmovle
fs
xlat
ljmp
and
mov
sub
es
xchg
idivl
xor
cmc
adc
adc
adc
dec
pop
xchg
cli
arpl
pop
push
push
jecxz
jno
mov
lock
jge
inc
dec
into
pushf
or
daa
mov
test
pop
inc
cmp
add
jae
pop
pop
adc
mov
addb
idivl
jns
xchg
adc
hlt
ror
imul
xchg
and
test
inc
sub
inc
shl
repnz
bswap
sbb
inc
pop
popf
and
push
mov
rcrl
pop
test
cld
dec
ss
xchg
bound
push
loope
xor
rcrb
pop
jne
in
adc
lret
in
sbb
movl
adc
jmp
negl
into
jp
mov
sbbb
roll
scas
mov
out
rol
xchg
lret
xchg
mov
ss
or
shrb
xchg
loop
pop
push
xor
sub
lcall
das
push
push
mov
test
xor
mov
adcl
inc
fs
inc
mov
imul
add
or
das
cmp
movsb
cmp
inc
add
sub
pop
inc
test
sub
js
sahf
adc
xchg
loop
mov
pop
xchg
or
and
lahf
cmpb
imul
loope
inc
jne
or
add
pop
mov
jns
dec
jp
sub
lret
and
out
dec
mov
push
jno
in
out
mov
mov
sbb
jae
pop
push
les
mov
sbb
push
adc
cmpsl
mov
fstpl
pop
mov
std
push
sbb
dec
aaa
pusha
jb
push
add
add
sahf
cmp
dec
xchg
mov
lock
dec
sbb
cli
inc
nop
xor
or
cwtl
dec
mov
jns
je
in
test
mov
mov
inc
push
jp
push
popf
stos
bound
inc
fstpl
or
sbbb
fwait
inc
fiadds
imulb
and
adc
test
inc
adc
fs
mov
push
cli
lret
sub
or
adc
lret
xchg
fcoms
and
push
mov
push
dec
test
in
in
xor
adc
cmp
and
dec
test
sbb
aas
pop
mov
sub
jmp
mov
add
jl
outsl
pop
scas
test
sub
inc
popa
sub
and
js
popf
mov
mov
ja
ja
xor
ljmp
jno
sbb
fdivl
add
inc
jge
mov
cli
dec
lcall
ror
push
or
pop
jns
stos
into
bound
addr16
cmp
xchg
cli
cmp
insl
aas
jbe
lods
mov
je
push
sbb
dec
cli
lods
sbb
clc
xor
pop
pop
xchg
or
in
inc
fadds
inc
mov
dec
lcall
adc
out
inc
push
out
inc
mov
pushf
jg
mov
pop
repnz
cmc
out
push
inc
imul
sbb
pusha
mov
daa
xchg
push
dec
xor
je
jnp
call
out
mov
out
out
stos
inc
iret
jge
data16
add
pusha
pop
lcall
dec
pop
ss
xchg
adc
imul
mov
mov
cmp
enter
adc
mov
sub
mov
call
dec
mov
push
pop
aas
sub
ficompl
cmpsb
mov
js
pop
fnstsw
dec
and
insl
int3
lahf
ret
xchg
sbb
dec
popf
cmpsb
mov
sbb
les
aad
pop
sahf
test
je
dec
adc
push
hlt
or
imul
pushf
dec
mov
les
sbb
adc
sahf
cmp
xchg
inc
mov
jle
nop
hlt
xchg
and
mov
jmp
jmp
xchg
xor
cmp
lea
test
js
outsl
push
int
subb
cmpsl
in
pop
sbbl
xlat
fdivp
sbb
dec
in
orb
mov
adc
pop
adc
cltd
and
push
dec
arpl
mov
mov
lock
shlb
xchg
xchg
mov
or
imul
sub
int
imul
daa
cmp
ret
pop
adc
mov
test
insl
ja
mov
subl
sbb
subb
rorl
outsl
andl
lods
lds
xlat
fimuls
imul
mov
aad
add
fiaddl
sti
xor
jne
or
rorl
inc
clc
ljmp
outsl
mov
lods
dec
addb
mov
and
mov
cmp
or
out
ljmp
fisttpll
adc
and
outsl
scas
xchg
xchg
hlt
push
adc
lret
xor
out
adc
aaa
es
icebp
xchg
sbb
dec
iret
in
stos
or
divl
test
icebp
stc
adc
in
pop
or
inc
pop
cmp
into
pop
sti
adcl
stc
jecxz
lahf
xchg
fildll
test
out
repnz
mov
xchg
jp
test
test
mov
out
jne
repz
xchg
fdivrl
xchg
jmp
mov
roll
es
cmp
jno
and
xorb
in
pop
testl
push
push
lret
mov
cwtl
loop
repz
int3
adc
mov
movsb
test
fwait
mov
aad
lret
movsl
jae
int3
push
arpl
push
cmpsb
cli
cs
and
inc
in
out
cltd
dec
fstl
lcall
data16
shll
mov
jns
cwtl
and
and
mov
cmp
mov
inc
xlat
dec
rep
pop
pop
push
les
cmp
push
inc
test
fcom
decl
push
sbb
mov
xchg
sahf
xlat
pusha
or
adc
cltd
push
push
jbe
data16
cmp
call
cmp
mov
sub
or
xor
pop
and
mov
xor
mov
push
push
fistpll
adc
aas
test
std
pop
mov
mov
inc
and
test
xchg
inc
je
sti
aas
push
pop
inc
pop
shlb
jecxz
mov
adc
pop
mov
negl
dec
pop
and
lahf
sbbb
jmp
mov
imul
cmp
dec
mov
mul
and
mov
xchg
mov
and
xor
mov
xchg
cmc
adc
mov
xor
dec
int3
xor
hlt
out
addl
test
loop
aam
movsb
sbb
xchg
mov
pop
ret
xchg
jg
mov
loop
fdivs
movsl
mov
nop
jns
mov
push
roll
dec
and
jne
jle
sbb
push
fisubrs
aam
rorl
imul
mov
sti
roll
or
in
mov
pop
ret
adc
jnp
jno
cmp
pop
mov
mov
mov
ret
sbb
in
ret
adc
cwtl
and
xchg
fcomp
push
push
xor
jb
push
push
popf
cmp
sbb
shll
sar
or
inc
push
cmp
daa
outsb
mov
data16
adcb
jbe
sbb
jmp
in
and
stc
sbb
inc
push
in
fs
aad
sbb
jae
mov
adc
mov
add
les
leave
pop
mov
sub
nop
push
loop
xchg
inc
insb
dec
push
mov
sti
sarl
clc
hlt
ljmp
cmp
mulb
adc
mov
scas
test
clc
push
in
mov
sbb
js
xor
inc
mov
xlat
ret
cwtl
jecxz
int3
and
leave
dec
dec
jb
mov
mov
xchg
push
or
decl
adc
mov
jbe
xlat
mov
out
dec
movsl
ja
sarl
cmp
adc
dec
sub
mov
mov
jb
cmc
sbb
push
pop
rorb
lds
mov
mov
inc
dec
sbb
xchg
and
lock
ss
and
mov
adcl
push
mov
jb
sbb
pushf
sub
cmp
sahf
rolb
cmp
repz
xchg
inc
nopl
cmpsb
inc
and
and
jmp
dec
push
push
push
imul
fiaddl
stos
mov
lsl
mov
dec
nop
js
dec
inc
aam
cmpsl
cmpsb
arpl
std
xorl
jbe
mov
cltd
cmp
xor
clc
fcmovb
jo
loop
push
repnz
or
push
adc
dec
dec
push
es
sbb
insl
pop
xor
mov
pop
xor
in
push
xchg
ret
xorb
jl
mov
clc
lret
xchg
xchg
cwtl
push
inc
add
add
clc
push
xor
mov
cmc
rolb
shr
xor
jle
jmp
loopne
cmova
and
adc
pop
sub
push
add
xor
jp
xchg
mov
daa
insl
mov
sbb
xchg
sub
hlt
addr16
xchg
ds
aam
daa
cld
ljmp
cmpsl
es
pop
xchg
addr16
or
add
cmp
xchg
or
sub
xchg
pop
mov
and
and
or
push
int
add
sahf
pop
insl
xchg
dec
xchg
push
fimull
repz
out
into
out
xor
mov
and
pop
xor
sbb
adc
jbe
and
stos
idivl
aam
out
jnp
in
rcrb
jmp
mov
lret
loope
mov
pop
mov
fnstenv
jno
arpl
outsl
push
mov
and
adc
add
call
jp
not
add
xor
movsb
bound
fstpl
add
aaa
or
and
mov
je
jecxz
test
inc
icebp
mov
pusha
lods
mov
rorl
dec
push
dec
lock
insb
arpl
add
or
popf
xor
sub
fldl
sbb
xor
stc
xlat
jp
shll
rolb
pusha
cmp
rcl
cmp
psubusb
or
push
adcl
xor
imul
imul
sbb
shlb
xchg
repz
fistl
and
inc
stos
mov
push
dec
sub
movsl
mov
pop
popf
push
clc
mov
inc
les
jno
jmp
fstpt
xchg
mov
or
inc
test
clc
dec
xchg
jl
test
adc
jne
jle
mov
pop
addb
stos
adc
lea
cltd
sbb
pop
pop
ja
jecxz
jns
jb
inc
fstpl
xchg
call
scas
cmp
add
pop
mov
mov
add
inc
hlt
es
notb
icebp
adc
rol
push
mov
jne
jp
xchg
cld
out
mov
pop
cld
mov
mov
sbbl
es
mov
mov
xchg
mov
aaa
ret
fldenv
mov
dec
inc
loope
jb
adc
jl
xor
cmp
xchg
pop
push
out
repz
ja
test
ljmp
lods
pop
and
dec
inc
or
lret
in
pop
stc
jnp
fldcw
adc
pop
das
xor
fbstp
sub
or
push
js
shrl
mov
or
mov
int
daa
jo
xor
test
aam
xchg
pop
pop
lret
out
adc
js
add
inc
mov
and
sbb
adcb
and
jnp
shr
daa
arpl
inc
lret
dec
and
lret
adc
movsl
rorl
cmp
jecxz
mov
xchg
dec
push
dec
push
jg
push
ja
inc
add
mov
jge
cld
push
dec
lds
inc
inc
xchg
testl
bound
arpl
inc
jne
push
pop
test
pop
cmp
lret
sarb
pop
mov
jg
dec
mov
stos
out
pusha
ja
divb
push
push
sub
xchg
test
jns
or
mov
and
cld
frstor
jg
call
xchg
dec
jns
xor
js
jp
xchg
or
data16
jns
cmp
mov
ret
hlt
je
shrb
add
add
rcll
rcl
arpl
push
mov
test
jg
out
and
push
inc
pop
or
cmp
test
rorl
sub
xor
pop
adc
icebp
sahf
dec
fbstp
iret
test
pop
stc
and
leave
std
cwtl
aam
push
notb
push
iret
ficomps
xlat
push
stc
or
imul
daa
rolb
push
sbb
insl
add
repnz
shl
mov
out
pop
data16
outsl
daa
cmp
add
subb
fnsave
insb
jnp
jg
and
xchg
push
inc
and
mov
jbe
rorl
cmp
push
mov
jno
mov
pop
data16
cld
cs
jo
mov
pop
and
jg
je
xchg
sbb
and
pop
ds
int
loope
inc
fwait
fs
and
pop
cs
in
mov
cmpsb
sbb
and
adc
inc
add
divb
je
cmp
pusha
daa
bound
or
mov
mov
pop
push
mov
xchg
mov
es
dec
lock
fs
mov
in
not
iret
daa
inc
push
cmp
inc
mov
pop
call
cmp
sub
lds
aaa
out
outsl
and
mov
fists
pop
and
mov
sbb
xchg
idivl
fdivl
xlat
out
xor
sbb
dec
int
js
insb
push
movsl
test
int3
push
add
sete
dec
inc
sahf
idivb
jle
pop
ljmp
inc
outsb
pop
lret
push
mov
cmp
clc
addr16
fwait
icebp
add
rcll
cs
xor
jb
subb
jg
add
and
daa
ret
clc
out
ljmp
sbb
xchg
sbb
in
push
or
nop
xchg
lods
insl
aaa
movsl
ret
ret
push
pop
xchg
out
movsl
arpl
jmp
and
hlt
xchg
popa
pop
fxch
mov
sub
je
mov
xchg
dec
mov
sbb
movsb
sbb
pop
in
fsubrp
add
cltd
pop
lcall
lods
xchg
mov
fdivl
test
dec
sbb
rcll
or
subl
adc
es
cltd
es
cmp
mov
loop
push
mov
and
and
cmp
xchg
push
push
sub
fcmovu
jno
pop
xlat
mov
jp
outsl
adc
test
arpl
jbe
rcl
or
mov
imul
mov
aad
cld
pushf
pop
jmp
jo
mov
mov
push
fwait
rcrl
mov
in
in
or
hlt
mov
pop
mov
xchg
push
and
sbb
lcall
mov
fsts
sbb
xchg
fnsave
loopne
xor
scas
inc
icebp
das
scas
xchg
or
sbb
leave
mov
mov
xchg
jo
lods
jno
lods
push
or
cmp
cmp
outsb
lods
mov
pop
pop
ja
mov
fimuls
in
and
idivl
mov
jge
mov
shr
mov
push
lock
imul
mov
sub
and
clc
mov
lret
xor
pop
xor
cld
jmp
dec
adc
and
fadd
mov
or
add
ljmp
test
aad
xchg
mov
lahf
adc
std
aam
in
fldl
xchg
mov
fildl
dec
inc
and
test
push
mov
cmp
std
ds
aam
inc
sub
inc
mov
push
test
jae
sbb
inc
out
insb
hlt
arpl
outsl
mov
mov
lods
xchg
addr16
cwtl
jno
xchg
xor
sub
sub
dec
ds
pop
cmp
das
sti
cmp
sbb
int
mov
dec
icebp
push
add
xor
push
xor
negb
insl
pop
out
mov
test
inc
dec
add
nop
xor
ret
and
test
mov
sub
outsb
push
dec
fnsave
jle
sti
dec
jecxz
or
push
push
cmp
orb
mov
repz
pop
add
out
repnz
sub
data16
jl
roll
mov
jge
test
dec
pusha
mov
lock
xor
test
cwtl
fiadds
sbb
xor
sbb
sbb
or
lds
jae
ljmp
into
int
cmp
pop
mov
cmp
gs
sbb
lea
inc
adc
or
add
movsb
add
pusha
stc
mov
push
mov
pop
and
test
pop
outsl
inc
add
dec
sub
mov
xchg
add
shlb
or
test
lahf
popf
testb
jne
mov
pop
iret
adcl
gs
mov
clc
or
ds
icebp
test
xor
push
in
dec
push
xchg
rcrl
mov
inc
and
stos
sbb
mov
addr16
pop
lds
and
push
add
mov
cmp
fnstsw
fsub
push
rclb
insb
test
sub
movsl
cs
mov
repz
imul
mov
out
das
shlb
and
lcall
repz
stos
xlat
xchg
stc
cmc
or
mov
adc
mov
sti
in
jbe
sub
mov
mov
gs
xchg
xchg
adc
push
jmp
hlt
arpl
dec
test
sarl
mov
mov
pop
cmpsl
repnz
mov
outsb
mov
test
cltd
dec
cmc
sbb
std
sub
std
leave
mov
addr16
xchg
loope
or
mov
xchg
sahf
out
sub
iret
inc
test
inc
dec
push
repnz
jp
push
jnp
add
jae
outsb
fs
xchg
repnz
fidivl
jno
movsb
add
rorl
mov
push
into
not
bound
and
call
lods
bnd
dec
jg
jle
adcl
cltd
adc
loopne
mov
popa
scas
pop
add
add
xor
xchg
inc
xor
fdivrl
ja
stc
ror
lret
imul
jb
mov
mov
cmp
mov
lret
inc
insb
add
mov
mov
daa
data16
sbb
push
cmp
jne
cmpsl
xchg
mov
cmc
jnp
xor
jnp
js
lock
mov
std
sbb
out
repz
mov
xlat
lds
pop
push
jbe
in
dec
jb
out
jg
loopne
test
lret
dec
xor
mov
sub
clc
xlat
fdivrs
dec
subb
push
mov
push
jge
loop
inc
sbb
ja
testb
orb
or
adc
loope
mov
enter
and
add
adc
insb
sbb
into
dec
les
pop
fadd
mov
pop
push
adc
stos
jp
jnp
sub
movsl
mov
and
sahf
or
outsl
dec
dec
jl
fwait
pusha
mov
fs
arpl
xchg
out
mov
mov
out
xchg
mov
ret
out
and
stc
mov
or
andb
mov
pop
inc
ret
adc
jecxz
loop
movsb
jns
ja
addl
cmpsl
rolb
pushf
mov
mov
cmp
jp
mov
mov
fisubl
and
in
sub
adc
shr
insl
and
ret
xchg
scas
arpl
push
push
add
or
push
dec
idivb
mov
inc
xchg
push
xchg
adc
daa
aaa
mov
call
adc
icebp
sarl
dec
arpl
aam
inc
xor
loop
dec
insl
xchg
mov
inc
sti
xchg
and
cmpsb
jae
sbb
sub
flds
push
test
leave
xchg
test
mov
cltd
xchg
pusha
push
int
jmp
adc
and
insb
and
push
mov
shll
xlat
pushf
sbbl
mov
lods
adc
xchg
jl
mov
mov
inc
add
cmp
and
scas
pushf
cmp
or
stos
jb
mov
roll
pop
mov
mov
jb
mov
adc
push
add
in
sbbb
int
push
add
jbe
in
loope
inc
mov
enter
or
cmp
aas
xchg
mov
jno
jp
jl
bound
push
add
mov
mov
push
lds
ret
lds
mov
xchg
scas
stos
outsb
add
fsubp
adc
lret
sbb
mov
hlt
test
outsb
cmpsl
inc
pop
testl
les
mov
rcrb
or
orl
aad
in
enter
xor
aad
xchg
push
scas
cmc
out
cwtl
loop
adc
xor
mov
arpl
sub
jns
jno
jnp
movsl
sbb
cmp
arpl
nop
test
pop
daa
dec
jg
out
pop
or
cmp
dec
and
mov
out
dec
pop
and
jp
jno
std
sub
iret
push
dec
stos
xorb
mov
push
xor
es
push
sub
test
cltd
or
jb
pop
daa
mov
cs
daa
dec
ret
mov
in
fsubr
push
adc
or
fstl
mov
mov
lret
int
stos
push
movsb
lahf
add
xor
inc
push
icebp
jecxz
cwtl
scas
data16
inc
in
inc
mov
jg
jecxz
testl
repnz
mov
xchg
into
mov
cmpsb
add
into
mov
add
xor
and
sub
fidivl
movsb
negl
lods
les
pop
xor
mov
jbe
inc
add
push
xor
movsl
and
cli
adc
loopne
push
daa
pop
mov
mov
sahf
adc
sahf
sub
mov
or
sar
sub
xor
loop
ja
fisubs
jns
mov
icebp
mov
and
pop
mov
lods
add
imul
repz
add
hlt
xchg
ror
mov
aam
mov
xor
fldcw
mov
mov
xor
and
mov
in
inc
push
sub
out
adc
cltd
pop
popw
mov
pusha
or
inc
mov
data16
inc
dec
mov
and
mov
pop
pop
inc
adc
fistl
jmp
mov
test
jmp
add
faddl
inc
fsubl
add
pusha
inc
jb
mov
lods
or
sbb
dec
lods
fistpl
cwtl
shrl
mov
mov
add
outsl
rcll
cmp
rcll
add
jle
loope
shll
int3
push
fisubrl
outsl
ficoms
xchg
and
outsb
dec
lcall
fs
int3
jp
enter
nop
pop
out
mov
mov
mov
mov
pop
ret
jle
movb
mov
xor
push
pusha
jb
push
sbb
jbe
lret
mov
ficoms
xchg
in
xor
fs
bound
inc
pop
les
adc
repz
inc
in
jg
jne
ds
add
fadd
adc
sahf
in
push
fistl
add
sbb
jno
inc
dec
movsl
xchg
mov
pop
daa
lahf
xchg
fisttpl
jae
pop
or
iret
ds
jmp
push
push
or
dec
jnp
sti
std
pop
push
insb
xor
cmp
sbb
push
ja
lods
and
push
push
jo
sub
mov
and
ret
jle,pt
inc
and
rclb
addr16
nop
mov
dec
iret
add
jge
mov
std
or
push
loope
pop
xor
imul
cmc
cwtl
adc
dec
xchg
arpl
mov
fucomp
pop
dec
das
leave
sti
es
adcl
xabort
mov
lods
or
scas
inc
adc
in
sbb
pop
cld
mov
fwait
call
popa
dec
clc
adc
cmpsb
int3
jmp
inc
pop
sub
mov
and
jnp
movsl
pop
lock
fs
xorl
or
leave
lods
mov
xchg
div
add
orl
cmp
lds
in
sub
pushf
cli
push
jg
jl
add
jae
add
push
lods
fldcw
xor
outsb
dec
and
mov
pop
fdivrs
mov
xchg
dec
aad
mov
out
fistl
jne
jo,pt
mov
aaa
mov
mov
sbbl
in
push
push
jmp
outsb
cmpsb
add
test
pusha
jns
or
pop
dec
jmp
lret
test
leave
pop
jnp
rol
add
shlb
out
int
push
out
hlt
pop
mov
fs
popa
in
cmp
lcall
cld
data16
inc
testl
inc
jb
push
lcall
jg
movsl
jmp
or
test
and
pop
or
mov
pushf
cwtl
xorl
inc
insb
mov
loopne
adc
in
lea
push
jo
out
dec
sti
jns
cli
xchg
daa
mov
loop
adc
testl
xchg
roll
jne
mov
push
cmp
ret
clc
aad
js
iret
fs
mov
mov
xor
mov
jnp
mov
jno
xchg
cwtl
mov
loop
jns
mov
bound
mov
push
jno
pop
mov
push
shlb
insl
push
sub
dec
movsb
cwtl
lock
lret
sub
mov
fcoms
pop
repnz
fldenv
sbb
mov
test
jb
push
orl
lahf
fmul
push
int
xorb
in
xchg
es
cmp
jne
into
push
sub
cmp
in
pop
insb
push
push
mov
xor
out
leave
movsl
jmp
lods
cld
das
push
notb
cmp
cmpsl
std
cmp
mov
lds
sbb
mov
stos
mov
sbbb
add
jle
les
mov
mov
xchg
adc
jno
xor
aam
fs
xor
lret
mov
sub
adc
test
sbb
loopne
out
push
ds
jg
sub
xor
popa
in
xchg
mov
les
popf
movsb
movsb
or
dec
push
pusha
mov
in
push
addb
adc
clc
rclb
loopne
push
repz
lahf
or
insl
sbb
popa
xlat
and
aam
cmp
jno
out
dec
in
dec
pop
mov
pop
pop
xchg
sub
enter
adc
stos
mov
xchg
in
mov
rol
pusha
lods
adc
add
cmpsl
mov
imul
mov
shl
jbe
jecxz
stos
adc
sahf
fdivrl
push
scas
cmpsb
dec
jge
test
int
and
lret
js
push
and
sub
rcl
mov
xor
aas
jg
ficoms
hlt
fimuls
mov
into
cmp
add
cld
add
bswap
sahf
xchg
movsb
and
mov
xor
ret
into
leave
adc
push
fsubp
add
ficoms
push
addr16
jle
cmp
jb
adc
mov
aad
loopne
pop
inc
fidivrl
dec
jmp
pop
xor
inc
xor
rcll
fwait
inc
je
js
pop
jge
jb
cmc
dec
stc
mov
clc
bound
out
or
or
mov
ljmp
je
push
jbe
xchg
cmpsl
pop
or
loop
sbb
pop
in
mov
cmpl
repnz
out
push
lret
loopne
mov
cwtl
movsl
mov
sub
push
mov
cmpsb
jp
xchg
xchg
jl
pop
dec
in
add
test
add
jnp
xor
in
in
je
cwtl
jge
rorl
sub
cs
popa
mov
jo
je
lret
mov
sahf
lret
add
inc
imul
xchg
xchg
jne
hlt
push
pushf
leave
push
es
std
rcl
fcoms
js
xchg
push
negl
arpl
xchg
lret
mov
sub
test
xor
jmp
push
subl
repz
cmp
pop
jno
std
fbstp
jae
std
adc
inc
test
sahf
push
or
xor
cmp
dec
inc
mov
sbb
dec
arpl
xchg
mov
sbb
mov
iret
dec
std
lret
ja
push
fcmovnbe
xor
push
cwtl
arpl
lret
cmpsl
xorl
data16
adc
and
aam
test
inc
pop
push
push
adc
sbb
je
pop
sbb
icebp
mov
sbb
cs
sbb
enter
jo
dec
std
jecxz
repz
or
mov
bound
push
repz
mov
divb
int
ja
outsl
cmp
inc
inc
pop
mov
xchg
dec
ret
xchg
ljmp
pushf
cs
dec
dec
inc
loop
add
cli
cld
roll
cmc
in
daa
adc
mov
pop
xchg
pop
scas
lods
adc
inc
sbb
movsb
xor
inc
out
aad
fcmovu
test
inc
imul
in
stos
push
jno
arpl
pusha
adc
pop
mov
pop
mov
cmpsl
push
adc
xor
imul
inc
mov
cmp
add
inc
pop
or
movl
scas
repnz
das
or
dec
pop
xchg
cs
dec
inc
push
lock
jge
lret
adc
mov
or
cmp
cmc
divb
fstl
push
pop
lahf
and
push
mov
arpl
aaa
mov
icebp
jnp
adc
nop
ljmp
lret
leave
cmp
cli
insb
or
xchg
ljmp
lcall
push
fldcw
mov
dec
jbe
pop
in
sub
sahf
movaps
out
ljmp
cli
mov
aad
addb
xor
mov
das
or
xorb
mov
fnstsw
rcll
popf
pop
jbe
pusha
mov
xchg
fwait
jno
pop
mov
jae
pop
xor
xor
mov
xor
or
mov
adc
mov
jnp
mov
lret
jg
mov
pop
pop
fsts
insl
pusha
ljmp
or
vaddps
sti
and
aas
xchg
jg
push
mov
test
add
dec
sub
fisttpl
mov
clc
daa
sbb
add
fnstenv
cmp
or
dec
pop
push
cli
std
inc
lcall
mov
ret
inc
mov
cmpb
lods
mov
cmpsb
inc
nop
ret
dec
in
dec
divl
cmp
shrl
fwait
pop
lods
cmpsb
adc
inc
fists
loope
adc
loopne
imul
xlat
xchg
xor
ss
adc
dec
fstps
out
inc
and
dec
lea
add
cmp
dec
mov
je
in
arpl
push
mov
lea
inc
or
movl
stc
mov
pop
shrl
mov
dec
cwtl
sti
jp
popf
mov
mov
ds
jne
jae
lods
stos
loope
les
inc
xchg
out
sub
jg,pt
fwait
sub
xchg
test
out
lods
sub
sub
push
jns
xor
jmp
sbb
cmp
adcl
mov
xor
mov
push
sub
mov
dec
mov
int3
jle
jne
mov
fwait
rcrl
js
dec
nop
wbinvd
inc
and
mov
pop
std
movsb
cld
or
push
shl
xchg
sub
ljmp
cmp
adc
sbb
inc
pop
movsb
movsl
xor
add
pop
fisttps
stos
pop
cld
es
sbb
out
lods
mov
mov
jp
lea
add
loopne
sub
jp
pop
mov
jno
pop
fnstcw
lahf
cmp
sbb
sahf
icebp
add
mov
fwait
pop
insl
into
outsl
mov
sbb
xchg
jnp
inc
inc
inc
or
pop
cmp
cmp
adc
jle
mov
ljmp
pop
and
sahf
cmp
push
cli
xor
fimuls
subb
adc
mov
jno
pop
insb
dec
jecxz
les
jnp
mov
push
push
das
jns
push
test
jmp
pop
mov
xor
scas
push
repnz
sbb
int
inc
aas
or
stos
or
out
xor
popa
sub
add
orl
mov
pop
test
popf
jne
sub
mov
call
jle
and
mov
and
mov
iret
and
mov
lock
or
and
shll
cmp
fs
xchg
in
pop
es
fwait
call
aaa
mov
push
pop
dec
add
push
push
subl
sub
sbb
push
and
xor
pop
and
cmp
xor
andl
xor
sbb
xor
mov
mov
pop
test
cwtl
stos
insl
sbb
imul
pop
jp
sahf
scas
rcr
sub
pop
or
iret
push
add
out
mov
xorb
in
jl
jbe
cmpsb
add
jo
pop
into
xchg
movsb
jb
icebp
aam
ljmp
stos
mov
dec
test
icebp
xor
xchg
cli
dec
push
das
cmp
push
sbb
pop
mov
mov
cmpsb
mov
jb
int
lods
ljmp
mov
pop
cld
and
mov
add
cmc
nop
pop
outsl
mov
xlat
mov
into
loope
repnz
adc
cmp
xchg
aam
fst
sbb
loop
nop
test
rcpps
in
adcb
imul
mov
cmp
dec
cmpsl
into
xor
fcmovnb
ljmp
test
xchg
hlt
add
das
mov
sbbl
mov
xor
lahf
roll
sub
mov
add
add
idivb
xchg
xor
jne
jbe
in
inc
testl
push
and
sub
pop
jp
xorl
ret
inc
xchg
dec
or
leave
in
cmp
inc
jl
in
dec
rol
cmp
xor
jbe
pushl
xchg
push
lea
push
xchg
jno
out
es
or
mov
push
and
arpl
bound
mov
jge
fidivrs
cltd
pop
repnz
test
pushf
bound
outsb
cmpsb
dec
sbb
mull
cltd
js
int3
cmp
pop
sbb
and
iret
mov
ret
pop
loope
jne
push
imul
aas
adc
jb
jne
xchg
stc
fwait
enter
ja
push
mov
fs
cmpsb
fdivrs
icebp
xchg
inc
popa
pop
or
neg
xchg
loope
jp
fucomp
cmp
push
lahf
les
frstor
dec
jp
mov
sbb
push
mov
mov
sbb
sub
dec
in
movsl
push
je
ja
stos
mov
xlat
cmp
sub
mov
mov
in
push
xchg
sub
mov
lods
and
int3
dec
push
movsl
xor
inc
push
sahf
mov
imul
mov
push
inc
sbb
in
sahf
adc
and
movsl
scas
fisttpll
shl
mov
and
sub
gs
jg,pt
xchg
movsb
mov
mov
and
sub
mov
stos
jns
es
shl
push
aaa
ficoms
xor
bound
jae
or
xor
pop
adc
xor
jecxz
in
test
imul
xlat
add
or
gs
sub
xchg
add
pop
sub
and
sub
lods
xchg
shlb
ja
iret
pop
or
mov
negl
enter
std
mov
out
fs
les
ret
imul
cmp
das
out
fiadds
int3
mov
jo
adc
inc
negl
jle
test
sbb
sahf
call
xor
out
jmp
lret
and
pop
shll
jle
xor
cmpsb
das
or
ljmp
xchg
aas
mov
out
or
subl
jle
into
pop
pop
lcall
ja
xchg
jle
cmp
cmpsb
pop
mov
in
mov
mov
add
stos
sbb
movsl
fmull
fs
push
rolb
lcall
sub
sub
ret
adc
sahf
iret
lods
mov
aas
out
imul
or
and
sti
hlt
add
hlt
stc
pushf
das
in
in
push
pushf
js
mov
adc
xor
mov
mov
mov
mull
out
cmc
sub
sbb
outsl
lahf
mov
mov
xchg
rolb
shl
rcrl
xor
lret
or
jmp
imul
sbb
push
ljmp
sbb
subl
inc
push
popf
cmp
inc
pop
scas
int3
test
mov
mov
cld
cli
push
adc
mov
pop
fs
xor
sarl
ds
loopne
addr16
shlb
repnz
insl
fwait
mull
push
and
dec
mov
imul
cmp
std
mov
pop
aad
push
inc
inc
push
int
mov
sub
push
sbb
sub
mov
add
add
jmp
mov
lea
push
pop
not
lea
mov
not
inc
cmp
sub
mov
pop
push
pop
xor
not
push
pop
dec
push
mov
add
sub
mov
inc
inc
jmp
mov
mov
push
pop
jmp
xor
inc
push
pop
add
push
pop
mov
sub
mov
cmp
not
jno
dec
xor
add
push
pop
cmp
push
pop
mov
mov
push
pop
mov
jne
not
push
pop
cmp
sub
je
add
mov
xor
cmp
not
xor
lea
mov
cmp
mov
push
pop
sub
jmp
cmp
push
pop
mov
mov
mov
mov
mov
jmp
push
pop
mov
je
mov
mov
mov
jno
cmp
push
mov
add
push
pop
test
sub
inc
mov
dec
dec
push
pop
push
pop
jmp
cmp
mov
jo
not
test
add
lea
push
pop
push
pop
push
pop
mov
jmp
xor
jmp
push
mov
add
inc
xor
dec
mov
sub
mov
pop
test
lea
sub
jg
xor
inc
xor
cmp
pop
mov
push
pop
sub
mov
pop
add
and
sub
lea
sub
sub
mov
pop
sub
mov
pop
dec
push
pop
pop
mov
mov
lea
mov
mov
xor
cmp
lea
push
mov
add
mov
cmp
sub
mov
pop
add
push
pop
lea
mov
push
jmp
push
pop
mov
sub
test
push
pop
add
mov
lea
add
cmp
and
mov
sub
not
test
cmp
xor
push
mov
add
add
mov
mov
push
pop
push
mov
add
push
pop
add
cmp
cmp
sub
mov
mov
add
cmp
sub
mov
mov
add
mov
xor
mov
add
sub
mov
pop
push
pop
sub
add
push
pop
mov
mov
cmp
lea
mov
sub
jmp
jmp
mov
mov
cmp
cmp
push
pop
mov
mov
cmp
lea
and
cmp
push
pop
cmp
cmp
jno
mov
cmp
push
pop
mov
push
pop
sub
mov
mov
add
mov
add
add
push
pop
not
xor
mov
lea
xor
sub
push
pop
inc
mov
mov
xor
jmp
jmp
sub
xor
lea
test
mov
sub
sub
cmp
test
xor
jb
sub
push
pop
jmp
push
pop
jmp
cmp
mov
push
pop
xor
add
and
cmp
mov
dec
mov
xor
and
not
mov
mov
mov
mov
dec
push
pop
mov
jmp
sub
dec
push
pop
sub
dec
push
pop
xor
lea
push
pop
xor
dec
mov
push
pop
cmp
inc
mov
push
pop
xor
push
xor
mov
mov
mov
mov
mov
sub
jmp
push
mov
add
push
cmp
not
push
mov
add
jmp
pop
lea
ror
push
pop
jmp
push
pop
inc
inc
add
cmp
not
jns
not
cmp
push
pop
sub
mov
pop
mov
cmp
push
pop
mov
js
push
pop
not
mov
mov
push
pop
push
pop
not
jne
push
mov
add
cmp
mov
cmp
mov
not
push
pop
mov
push
mov
add
push
pop
push
pop
push
cmp
mov
push
pop
xor
cmp
ret
jmp
cmp
add
cmp
inc
add
push
pop
xor
xor
sub
mov
pop
inc
inc
mov
cmp
mov
mov
mov
mov
mov
push
pop
mov
mov
lea
mov
mov
mov
jne
mov
not
and
push
pop
xor
cmp
jmp
cmp
not
push
pop
push
pop
xor
inc
add
mov
mov
xor
cmp
mov
sub
mov
pop
xor
xor
cmp
call
push
pop
xor
xor
add
jmp
iret
ret
jge
mov
push
mov
jg
int3
in
and
add
add
dec
fildl
cmp
in
test
xor
dec
in
add
cmp
sti
jns
test
cli
adc
lock
jge
add
add
and
cmc
andl
mov
add
add
imul
jne
movsb
imul
cmp
jne
pushf
sarl
add
add
xlat
and
add
add
add
mov
out
inc
add
loopne
add
add
add
add
pop
pop
fwait
dec
xchg
sbb
inc
add
imul
cs
mov
pop
adc
cmp
jl
xchg
inc
inc
in
add
pushf
outsb
in
je
pop
mov
nop
aas
repz
aaa
sahf
loope
testb
fwait
mov
xchg
stos
mov
fbstp
sub
rol
adc
jmp
js
jno
cltd
repz
inc
fcom
and
icebp
iret
add
sbb
sub
cs
dec
stc
pop
addr16
loope
mov
mov
arpl
and
scas
fisubrs
test
je
cmp
cmc
lods
popa
test
rcrl
ret
adc
dec
adc
movsl
or
in
add
sub
inc
fdivrs
pushf
mov
pusha
das
dec
pusha
or
add
popa
imul
hlt
xor
xchg
mov
aam
pop
sub
inc
stos
push
mov
cmpsb
fnsave
pop
icebp
adc
out
scas
jnp
and
xchg
jnp
lods
jg
addb
add
lods
pop
fcomi
adc
and
xor
sbb
push
add
xor
add
jns
add
jo
mov
dec
jne
sbb
jge
add
mov
sub
jns
cmpl
imul
add
sarl
or
fdivs
and
mov
std
push
test
inc
std
push
test
cmc
data16
add
add
subl
mov
in
dec
add
add
push
xchg
in
cmp
and
sub
push
jne
and
rcl
shlb
aas
jnp
jbe
int
test
add
jnp
or
sub
cmp
lret
push
jnp
xor
mov
cld
jne
mov
test
jne
sub
test
xchg
ja
adc
in
pop
push
pusha
xor
jnp
xchg
in
imul
test
xchg
test
jne
sub
test
xchg
ja
or
in
pop
jb
loop
jnp
push
xchg
in
daa
in
xchg
stos
xchg
test
jne
sub
test
xchg
ja
and
in
pop
push
mov
push
xchg
in
rol
in
xchg
stos
xchg
test
jne
sub
test
xchg
ja
int3
in
pop
mov
sbb
xchg
in
out
in
xchg
stos
xchg
test
jne
sub
test
xchg
ja
aam
in
pop
aam
enter
push
xchg
in
fwait
in
xchg
stos
xchg
xor
sub
jg
mov
xchg
in
adc
fdecstp
es
pop
sbb
push
pop
sbb
add
xchg
std
iret
std
add
push
test
xchg
jns
push
xchg
in
stos
sbb
sub
fcoms
jnp
out
xchg
mov
mov
xor
in
test
out
xchg
jns
and
loopne
cmp
fcoms
xchg
in
jnp
out
xchg
andl
dec
inc
jge
pusha
out
xchg
add
push
cmpsl
incb
add
jne
sbb
jne
cld
dec
jne
mov
add
jnp
push
jo
add
xchg
lcall
xchg
insl
inc
stos
xchg
movl
mov
in
inc
cld
add
xor
test
xchg
jns
dec
xchg
in
xchg
in
xchg
subl
addl
cwtl
jmp
pop
sbb
sbb
sti
add
add
jge
cld
pop
xchg
int3
pop
in
add
add
sbb
sbb
add
add
sbb
gs
add
jle
mov
xchg
or
pop
ja
add
add
mov
add
or
addl
in
mov
sbb
sti
add
add
jge
cld
pop
jne
mov
test
push
dec
add
sbb
insl
jo
xchg
ja
fsubr
pop
jge
dec
pop
mov
adc
xor
jnp
in
mov
shll
or
jae
xchg
in
cmp
add
adc
jnp
enter
xor
add
cmp
adc
add
jnp
out
xchg
xor
xchg
push
clc
push
xchg
insl
pop
stos
xchg
movl
sarl
test
add
cli
sarl
test
add
jne
jne
cmp
in
xchg
lea
xchg
in
or
in
sub
in
pop
stos
mov
cmp
test
xchg
in
jnp
out
xchg
fnstcw
add
jns
jmp
mov
jae
xchg
in
jae
out
xchg
push
mul
mov
sti
xchg
loopne
add
addl
add
add
test
and
xchg
or
cs
or
xor
fldz
add
add
test
mov
out
xchg
jnp
push
mov
jns
cld
cmpl
orl
sbb
mov
sbbl
test
loop
stc
add
add
cmpl
mov
stos
add
dec
mov
jl
xchg
jb
pop
andl
or
jns
test
in
add
stos
xchg
sub
adc
sub
or
test
xor
jnp
je
in
adcl
jo
in
decb
xor
jge
mov
test
mov
stos
xchg
movl
test
xchg
jb
fldcw
sub
adc
sub
or
jp
jnp
fsub
test
cmp
inc
inc
cwtl
inc
add
add
subl
add
sbb
mov
dec
push
jne
enter
in
orl
add
add
lods
pop
andl
or
jns
push
sub
jae
xchg
in
aaa
xor
iret
adc
push
jne
lock
mov
jnp
or
jnp
or
jns
mov
out
inc
hlt
add
add
test
mov
xchg
in
mov
jnp
or
cmc
data16
in
add
std
cmp
add
xchg
insl
fs
xchg
dec
push
test
in
fldenv
sub
xor
fsubs
add
inc
jne
pushf
out
xchg
add
push
incl
add
rcrl
or
jns
js
in
add
jns
pop
in
add
jmp
mov
imul
in
nop
stos
mov
adc
pushl
cld
adcl
jnp
mov
enter
int3
pushl
cld
cmp
std
jnp
fs
in
xor
push
test
xchg
cmpl
mov
in
sbb
sbb
sbb
sbb
sbb
add
add
add
das
add
decl
add
imul
add
decl
xor
add
das
add
ljmp
xor
add
das
add
lcall
add
rdtsc
add
imull
add
jg
add
xor
add
ljmp
add
jmp
xor
add
xor
add
incl
xor
add
xor
add
pushl
xor
add
add
jmp
add
ja
add
imul
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
popa
xor
add
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
popa
xor
add
add
mov
add
cltd
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
xor
add
add
xorl
add
cltd
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
imul
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
cmp
xor
add
outsl
xor
add
xor
add
add
add
lds
add
std
xor
add
and
add
dec
add
add
add
insb
add
gs
je
push
push
add
jg
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
imul
outsb
je
outsl
insb
add
popa
bound
push
dec
imul
popa
insb
insb
jae
xchg
add
je
jb
jb
je
arpl
push
arpl
outsb
add
lock
gs
imul
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
cmp
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jne
jb
outsb
je
push
dec
add
push
dec
popa
jae
inc
jb
outsl
jb
add
gs
outsl
fs
gs
imul
add
jns
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
cwtl
add
je
jb
arpl
fs
jae
add
rolb
gs
jns
je
insl
push
imul
insb
gs
imul
gs
imul
je
add
add
je
gs
imul
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
gs
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
je
inc
jns
gs
outsl
push
imul
xchg
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
mov
gs
jbe
outsb
je
add
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
add
gs
je
inc
jbe
outsb
je
add
add
push
gs
jbe
outsb
je
add
add
je
outsb
push
gs
js
gs
imul
gs
dec
add
insl
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
popa
imul
je
jo
gs
bound
arpl
add
push
popa
imul
insb
gs
bound
arpl
add
jb
outsb
inc
add
mov
jb
outsb
push
add
imul
gs
xor
cs
insb
add
sub
imul
add
push
add
insb
inc
insb
insb
outsl
arpl
gs
gs
jo
cmp
push
je
inc
jb
gs
gs
jo
outsb
je
insb
insb
cs
insb
add
add
gs
dec
bound
arpl
imul
insb
add
outsl
push
popa
jae
dec
gs
inc
jb
add
inc
outsl
push
outsb
imul
imul
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
add
insb
gs
jae
push
je
dec
gs
inc
outsl
dec
outsb
imul
add
cmp
inc
outsl
dec
outsb
imul
inc
js
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
xor
cs
insb
add
add
insl
insl
popa
outsb
fs
imul
addr16
add
jae
gs
insb
xor
cs
insb
add
add
fs
je
imul
ja
jo
imul
jae
jb
xor
fs
insb
add
add
jne
insb
push
imul
gs
imul
push
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
outsb
push
jb
arpl
jae
outsl
imul
add
add
addr16
insb
outsl
jae
dec
gs
int3
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
clc
add
addr16
gs
popa
insb
jne
inc
js
add
popa
fs
jo
xor
cs
insb
add
or
inc
gs
jo
outsb
inc
imul
add
push
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
or
inc
gs
jb
jns
jb
jo
jb
jns
push
popa
add
add
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
and
dec
insl
popa
addr16
imul
popa
je
add
and
dec
insl
popa
addr16
imul
je
outsl
jns
cmp
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
push
jb
jo
jb
jns
push
add
dec
add
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
insl
arpl
xor
fs
insb
add
imul
inc
popa
jae
je
dec
push
jne
jae
jns
inc
jno
push
push
aaa
add
inc
push
push
jo
xor
aaa
push
add
jne
push
jb
ss
popa
outsb
jno
popa
add
xor
cmp
dec
push
inc
inc
dec
arpl
inc
dec
je
inc
imul
push
push
dec
cmp
pop
xor
inc
jbe
pop
data16
cmp
push
push
fs
dec
push
ja
bound
add
bound
fs
popa
fs
dec
dec
insb
add
dec
pop
xor
jb
inc
pop
xor
dec
jae
bound
jb
add
push
fs
imul
pop
add
insb
dec
jns
outsb
jb
xor
push
ja
add
gs
push
cmp
gs
xor
